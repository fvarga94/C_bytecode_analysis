list_free_items	functions,0:WHILE,0:ELSE,0:FOR,1:DO,0:IF,1:CALL,1:SWITCH,0	36
0x40002a0	              0x55	                                push rbp	       186	list.c	FUNCTION_11
0x40002a1	              0x53	                                push rbx	       186	list.c	FUNCTION_11
0x40002a2	            0x89fd	                            mov ebp, edi	       186	list.c	FUNCTION_11
0x40002a4	        0x4883ec08	                              sub rsp, 8	       186	list.c	FUNCTION_11
0x40002a8	    0x488b3d000000	            mov rdi, qword [0x040002af] 	       189	list.c	FUNCTION_11	FOR_1
0x40002af	          0x4885ff	                           test rdi, rdi	       189	list.c	FUNCTION_11	FOR_1
0x40002b2	            0x7421	                            je 0x40002d5	       189	list.c	FUNCTION_11	FOR_1
0x40002b4	         0xf1f4000	                         nop dword [rax]	       189	list.c	FUNCTION_11	FOR_1
0x40002b8	          0x8b4744	            mov eax, dword [rdi + 0x44] 	       192	list.c	FUNCTION_11	FOR_1	IF_1
0x40002bb	        0x488b5f28	            mov rbx, qword [rdi + 0x28] 	       191	list.c	FUNCTION_11	FOR_1
0x40002bf	            0x31e8	                            xor eax, ebp	       192	list.c	FUNCTION_11	FOR_1	IF_1
0x40002c1	          0x83e0fe	                     and eax, 0xfffffffe	       192	list.c	FUNCTION_11	FOR_1	IF_1
0x40002c4	            0x7407	                            je 0x40002cd	       192	list.c	FUNCTION_11	FOR_1	IF_1
0x40002c6	      0x48837f1000	               cmp qword [rdi + 0x10], 0	       193	list.c	FUNCTION_11	FOR_1	IF_1
0x40002cb	            0x7413	                            je 0x40002e0	       193	list.c	FUNCTION_11	FOR_1	IF_1
0x40002cd	          0x4885db	                           test rbx, rbx	       189	list.c	FUNCTION_11	FOR_1
0x40002d0	          0x4889df	                            mov rdi, rbx	       189	list.c	FUNCTION_11	FOR_1
0x40002d3	            0x75e3	                           jne 0x40002b8	       189	list.c	FUNCTION_11	FOR_1
0x40002d5	        0x4883c408	                              add rsp, 8	       201	list.c	FUNCTION_11
0x40002d9	              0x5b	                                 pop rbx	       201	list.c	FUNCTION_11
0x40002da	              0x5d	                                 pop rbp	       201	list.c	FUNCTION_11
0x40002db	              0xc3	                                     ret	       201	list.c	FUNCTION_11
0x40002dc	         0xf1f4000	                         nop dword [rax]	       201	list.c	FUNCTION_11
0x40002e0	        0x488b4730	            mov rax, qword [rdi + 0x30] 	       174	list.c	FUNCTION_10	IF_1
0x40002e4	          0x4885c0	                           test rax, rax	       174	list.c	FUNCTION_10	IF_1
0x40002e7	            0x7418	                            je 0x4000301	       174	list.c	FUNCTION_10	IF_1
0x40002e9	        0x48895828	             mov qword [rax + 0x28], rbx	       177	list.c	FUNCTION_10	ELSE_1
0x40002ed	        0x488b5728	            mov rdx, qword [rdi + 0x28] 	       177	list.c	FUNCTION_10	ELSE_1
0x40002f1	          0x4885d2	                           test rdx, rdx	       178	list.c	FUNCTION_10	IF_2
0x40002f4	            0x7404	                            je 0x40002fa	       178	list.c	FUNCTION_10	IF_2
0x40002f6	        0x48894230	             mov qword [rdx + 0x30], rax	       179	list.c	FUNCTION_10	IF_2
0x40002fa	      0xe800000000	                          call 0x40002ff	       181	list.c	FUNCTION_10	CALL_1
0x40002ff	            0xebcc	                           jmp 0x40002cd	       181	list.c	FUNCTION_10	CALL_1
0x4000301	    0x48891d000000	            mov qword [0x04000308], rbx 	       175	list.c	FUNCTION_10	IF_1
0x4000308	          0x4889da	                            mov rdx, rbx	       191	list.c	FUNCTION_11	FOR_1
0x400030b	            0xebe4	                           jmp 0x40002f1	       191	list.c	FUNCTION_11	FOR_1
list_append_dict	functions,0:WHILE,0:ELSE,0:FOR,0:DO,0:IF,1:CALL,2:SWITCH,0	37
0x4000940	              0x55	                                push rbp	       464	list.c	FUNCTION_24
0x4000941	              0x53	                                push rbx	       464	list.c	FUNCTION_24
0x4000942	          0x4889fb	                            mov rbx, rdi	       464	list.c	FUNCTION_24
0x4000945	      0xbf20000000	                           mov edi, 0x20	       220	list.c	FUNCTION_13	CALL_1
0x400094a	          0x4889f5	                            mov rbp, rsi	       464	list.c	FUNCTION_24
0x400094d	        0x4883ec08	                              sub rsp, 8	       464	list.c	FUNCTION_24
0x4000951	      0xe800000000	                          call 0x4000956	       220	list.c	FUNCTION_13	CALL_1
0x4000956	          0x4885c0	                           test rax, rax	       467	list.c	FUNCTION_24	IF_1
0x4000959	            0x745d	                            je 0x40009b8	       467	list.c	FUNCTION_24	IF_1
0x400095b	        0xc6401400	                mov byte [rax + 0x14], 0	       470	list.c	FUNCTION_24
0x400095f	        0x48896818	             mov qword [rax + 0x18], rbp	       471	list.c	FUNCTION_24
0x4000963	        0x488b5308	                mov rdx, qword [rbx + 8]	       425	list.c	FUNCTION_22	IF_1
0x4000967	    0xc74010060000	               mov dword [rax + 0x10], 6	       469	list.c	FUNCTION_24
0x400096e	          0x4885d2	                           test rdx, rdx	       425	list.c	FUNCTION_22	IF_1
0x4000971	            0x742d	                            je 0x40009a0	       425	list.c	FUNCTION_22	IF_1
0x4000973	          0x488902	                    mov qword [rdx], rax	       434	list.c	FUNCTION_22	ELSE_1
0x4000976	        0x48895008	                mov qword [rax + 8], rdx	       435	list.c	FUNCTION_22	ELSE_1
0x400097a	        0x48894308	                mov qword [rbx + 8], rax	       436	list.c	FUNCTION_22	ELSE_1
0x400097e	        0x83433c01	               add dword [rbx + 0x3c], 1	       438	list.c	FUNCTION_22
0x4000982	    0x48c700000000	                      mov qword [rax], 0	       439	list.c	FUNCTION_22
0x4000989	      0xb801000000	                              mov eax, 1	       474	list.c	FUNCTION_24
0x400098e	        0x83450401	                  add dword [rbp + 4], 1	       473	list.c	FUNCTION_24
0x4000992	        0x4883c408	                              add rsp, 8	       475	list.c	FUNCTION_24
0x4000996	              0x5b	                                 pop rbx	       475	list.c	FUNCTION_24
0x4000997	              0x5d	                                 pop rbp	       475	list.c	FUNCTION_24
0x4000998	              0xc3	                                     ret	       475	list.c	FUNCTION_24
0x4000999	     0xf1f80000000	                         nop dword [rax]	       475	list.c	FUNCTION_24
0x40009a0	          0x488903	                    mov qword [rbx], rax	       428	list.c	FUNCTION_22	IF_1
0x40009a3	        0x48894308	                mov qword [rbx + 8], rax	       429	list.c	FUNCTION_22	IF_1
0x40009a7	    0x48c740080000	                  mov qword [rax + 8], 0	       430	list.c	FUNCTION_22	IF_1
0x40009af	            0xebcd	                           jmp 0x400097e	       430	list.c	FUNCTION_22	IF_1
0x40009b1	     0xf1f80000000	                         nop dword [rax]	       430	list.c	FUNCTION_22	IF_1
0x40009b8	        0x4883c408	                              add rsp, 8	       475	list.c	FUNCTION_24
0x40009bc	            0x31c0	                            xor eax, eax	       468	list.c	FUNCTION_24	IF_1
0x40009be	              0x5b	                                 pop rbx	       475	list.c	FUNCTION_24
0x40009bf	              0x5d	                                 pop rbp	       475	list.c	FUNCTION_24
0x40009c0	              0xc3	                                     ret	       475	list.c	FUNCTION_24
list_find_str	functions,0:WHILE,0:ELSE,0:FOR,0:DO,0:IF,1:CALL,4:SWITCH,0	84
0x4000720	          0x4885ff	                           test rdi, rdi	       292	list.c	FUNCTION_18	IF_1
0x4000723	              0x53	                                push rbx	       387	list.c	FUNCTION_20
0x4000724	     0xf84cf000000	                            je 0x40007f9	       292	list.c	FUNCTION_18	IF_1
0x400072a	        0x4863473c	         movsxd rax, dword [rdi + 0x3c] 	       297	list.c	FUNCTION_18	IF_2
0x400072e	        0x4c8d46ff	                       lea r8, [rsi - 1]	       297	list.c	FUNCTION_18	IF_2
0x4000732	          0x4d85c0	                             test r8, r8	       296	list.c	FUNCTION_18	IF_2
0x4000735	          0x4989c1	                             mov r9, rax	       297	list.c	FUNCTION_18	IF_2
0x4000738	     0xf88b2000000	                            js 0x40007f0	       296	list.c	FUNCTION_18	IF_2
0x400073e	          0x4c39c0	                             cmp rax, r8	       300	list.c	FUNCTION_18	IF_3
0x4000741	     0xf8eb2000000	                           jle 0x40007f9	       300	list.c	FUNCTION_18	IF_3
0x4000747	        0x488b4718	            mov rax, qword [rdi + 0x18] 	       304	list.c	FUNCTION_18	IF_4
0x400074b	          0x4885c0	                           test rax, rax	       304	list.c	FUNCTION_18	IF_4
0x400074e	     0xf84cc000000	                            je 0x4000820	       304	list.c	FUNCTION_18	IF_4
0x4000754	        0x48635740	         movsxd rdx, dword [rdi + 0x40] 	       306	list.c	FUNCTION_18	IF_4	IF_5
0x4000758	            0x89d1	                            mov ecx, edx	       306	list.c	FUNCTION_18	IF_4	IF_5
0x400075a	          0xc1e91f	                           shr ecx, 0x1f	       306	list.c	FUNCTION_18	IF_4	IF_5
0x400075d	             0x1d1	                            add ecx, edx	       306	list.c	FUNCTION_18	IF_4	IF_5
0x400075f	            0xd1f9	                              sar ecx, 1	       306	list.c	FUNCTION_18	IF_4	IF_5
0x4000761	          0x4863c9	                         movsxd rcx, ecx	       306	list.c	FUNCTION_18	IF_4	IF_5
0x4000764	          0x4c39c1	                             cmp rcx, r8	       306	list.c	FUNCTION_18	IF_4	IF_5
0x4000767	            0x7e5f	                           jle 0x40007c8	       306	list.c	FUNCTION_18	IF_4	IF_5
0x4000769	          0x488b07	                    mov rax, qword [rdi]	       309	list.c	FUNCTION_18	IF_4	IF_5
0x400076c	            0x31d2	                            xor edx, edx	       310	list.c	FUNCTION_18	IF_4	IF_5
0x400076e	          0x4c39c2	                             cmp rdx, r8	       341	list.c	FUNCTION_18	WHILE_1
0x4000771	          0x4889d1	                            mov rcx, rdx	       341	list.c	FUNCTION_18	WHILE_1
0x4000774	            0x7d19	                           jge 0x400078f	       341	list.c	FUNCTION_18	WHILE_1
0x4000776	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       341	list.c	FUNCTION_18	WHILE_1
0x4000780	        0x4883c101	                              add rcx, 1	       345	list.c	FUNCTION_18	WHILE_1
0x4000784	          0x488b00	                    mov rax, qword [rax]	       344	list.c	FUNCTION_18	WHILE_1
0x4000787	          0x4c39c1	                             cmp rcx, r8	       341	list.c	FUNCTION_18	WHILE_1
0x400078a	            0x75f4	                           jne 0x4000780	       341	list.c	FUNCTION_18	WHILE_1
0x400078c	          0x4c89c2	                             mov rdx, r8	       341	list.c	FUNCTION_18	WHILE_1
0x400078f	          0x4c39c2	                             cmp rdx, r8	       347	list.c	FUNCTION_18	WHILE_2
0x4000792	     0xf8ea0000000	                           jle 0x4000838	       347	list.c	FUNCTION_18	WHILE_2
0x4000798	     0xf1f84000000	                   nop dword [rax + rax]	       347	list.c	FUNCTION_18	WHILE_2
0x40007a0	        0x4883ea01	                              sub rdx, 1	       351	list.c	FUNCTION_18	WHILE_2
0x40007a4	        0x488b4008	                mov rax, qword [rax + 8]	       350	list.c	FUNCTION_18	WHILE_2
0x40007a8	          0x4c39c2	                             cmp rdx, r8	       347	list.c	FUNCTION_18	WHILE_2
0x40007ab	            0x75f3	                           jne 0x40007a0	       347	list.c	FUNCTION_18	WHILE_2
0x40007ad	          0x4885c0	                           test rax, rax	       391	list.c	FUNCTION_20	IF_1
0x40007b0	        0x44894740	             mov dword [rdi + 0x40], r8d	       355	list.c	FUNCTION_18
0x40007b4	        0x48894718	             mov qword [rdi + 0x18], rax	       356	list.c	FUNCTION_18
0x40007b8	            0x743f	                            je 0x40007f9	       391	list.c	FUNCTION_20	IF_1
0x40007ba	              0x5b	                                 pop rbx	       397	list.c	FUNCTION_20
0x40007bb	        0x488d7810	                   lea rdi, [rax + 0x10]	       396	list.c	FUNCTION_20	CALL_4
0x40007bf	      0xe900000000	                           jmp 0x40007c4	       396	list.c	FUNCTION_20	CALL_4
0x40007c4	         0xf1f4000	                         nop dword [rax]	       396	list.c	FUNCTION_20	CALL_4
0x40007c8	        0x428d0c0a	                     lea ecx, [rdx + r9]	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x40007cc	          0x4189ca	                           mov r10d, ecx	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x40007cf	        0x41c1ea1f	                          shr r10d, 0x1f	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x40007d3	          0x4401d1	                           add ecx, r10d	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x40007d6	            0xd1f9	                              sar ecx, 1	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x40007d8	          0x4863c9	                         movsxd rcx, ecx	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x40007db	          0x4c39c1	                             cmp rcx, r8	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x40007de	            0x7d8e	                           jge 0x400076e	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x40007e0	        0x418d51ff	                       lea edx, [r9 - 1]	       316	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x40007e4	        0x488b4708	                mov rax, qword [rdi + 8]	       315	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x40007e8	          0x4863d2	                         movsxd rdx, edx	       316	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x40007eb	            0xeb81	                           jmp 0x400076e	       316	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x40007ed	           0xf1f00	                         nop dword [rax]	       316	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x40007f0	          0x4901c0	                             add r8, rax	       300	list.c	FUNCTION_18	IF_3
0x40007f3	     0xf8945ffffff	                           jns 0x400073e	       300	list.c	FUNCTION_18	IF_3
0x40007f9	          0x4889f3	                            mov rbx, rsi	       300	list.c	FUNCTION_18	IF_3
0x40007fc	      0xba05000000	                              mov edx, 5	       393	list.c	FUNCTION_20	IF_1	CALL_3
0x4000801	      0xbe00000000	                              mov esi, 0	       393	list.c	FUNCTION_20	IF_1	CALL_3
0x4000806	            0x31ff	                            xor edi, edi	       393	list.c	FUNCTION_20	IF_1	CALL_3
0x4000808	      0xe800000000	                          call 0x400080d	       393	list.c	FUNCTION_20	IF_1	CALL_3
0x400080d	          0x4889de	                            mov rsi, rbx	       393	list.c	FUNCTION_20	IF_1	CALL_3
0x4000810	          0x4889c7	                            mov rdi, rax	       393	list.c	FUNCTION_20	IF_1	CALL_3
0x4000813	      0xe800000000	                          call 0x4000818	       393	list.c	FUNCTION_20	IF_1	CALL_3
0x4000818	            0x31c0	                            xor eax, eax	       397	list.c	FUNCTION_20
0x400081a	              0x5b	                                 pop rbx	       397	list.c	FUNCTION_20
0x400081b	              0xc3	                                     ret	       397	list.c	FUNCTION_20
0x400081c	         0xf1f4000	                         nop dword [rax]	       397	list.c	FUNCTION_20
0x4000820	          0x4489c8	                            mov eax, r9d	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x4000823	          0xc1e81f	                           shr eax, 0x1f	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x4000826	          0x4401c8	                            add eax, r9d	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x4000829	            0xd1f8	                              sar eax, 1	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x400082b	            0x4898	                                    cdqe	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x400082d	          0x4c39c0	                             cmp rax, r8	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x4000830	     0xf8f33ffffff	                            jg 0x4000769	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x4000836	            0xeba8	                           jmp 0x40007e0	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x4000838	          0x4989d0	                             mov r8, rdx	       347	list.c	FUNCTION_18	WHILE_2
0x400083b	      0xe96dffffff	                           jmp 0x40007ad	       347	list.c	FUNCTION_18	WHILE_2
list_find_nr	functions,0:WHILE,0:ELSE,0:FOR,0:DO,0:IF,2:CALL,2:SWITCH,0	76
0x4000610	          0x4885ff	                           test rdi, rdi	       292	list.c	FUNCTION_18	IF_1
0x4000613	     0xf84c7000000	                            je 0x40006e0	       292	list.c	FUNCTION_18	IF_1
0x4000619	        0x4863473c	         movsxd rax, dword [rdi + 0x3c] 	       297	list.c	FUNCTION_18	IF_2
0x400061d	          0x4885f6	                           test rsi, rsi	       296	list.c	FUNCTION_18	IF_2
0x4000620	          0x4989c1	                             mov r9, rax	       297	list.c	FUNCTION_18	IF_2
0x4000623	     0xf88a7000000	                            js 0x40006d0	       296	list.c	FUNCTION_18	IF_2
0x4000629	          0x4839f0	                            cmp rax, rsi	       300	list.c	FUNCTION_18	IF_3
0x400062c	     0xf8eae000000	                           jle 0x40006e0	       300	list.c	FUNCTION_18	IF_3
0x4000632	        0x488b4718	            mov rax, qword [rdi + 0x18] 	       304	list.c	FUNCTION_18	IF_4
0x4000636	          0x4885c0	                           test rax, rax	       304	list.c	FUNCTION_18	IF_4
0x4000639	     0xf84b9000000	                            je 0x40006f8	       304	list.c	FUNCTION_18	IF_4
0x400063f	        0x48634f40	         movsxd rcx, dword [rdi + 0x40] 	       306	list.c	FUNCTION_18	IF_4	IF_5
0x4000643	          0x4189c8	                            mov r8d, ecx	       306	list.c	FUNCTION_18	IF_4	IF_5
0x4000646	        0x41c1e81f	                           shr r8d, 0x1f	       306	list.c	FUNCTION_18	IF_4	IF_5
0x400064a	          0x4101c8	                            add r8d, ecx	       306	list.c	FUNCTION_18	IF_4	IF_5
0x400064d	          0x41d1f8	                              sar r8d, 1	       306	list.c	FUNCTION_18	IF_4	IF_5
0x4000650	          0x4d63c0	                          movsxd r8, r8d	       306	list.c	FUNCTION_18	IF_4	IF_5
0x4000653	          0x4939f0	                             cmp r8, rsi	       306	list.c	FUNCTION_18	IF_4	IF_5
0x4000656	            0x7e50	                           jle 0x40006a8	       306	list.c	FUNCTION_18	IF_4	IF_5
0x4000658	          0x488b07	                    mov rax, qword [rdi]	       309	list.c	FUNCTION_18	IF_4	IF_5
0x400065b	            0x31c9	                            xor ecx, ecx	       310	list.c	FUNCTION_18	IF_4	IF_5
0x400065d	          0x4839f1	                            cmp rcx, rsi	       341	list.c	FUNCTION_18	WHILE_1
0x4000660	          0x4989c8	                             mov r8, rcx	       341	list.c	FUNCTION_18	WHILE_1
0x4000663	            0x7d12	                           jge 0x4000677	       341	list.c	FUNCTION_18	WHILE_1
0x4000665	           0xf1f00	                         nop dword [rax]	       341	list.c	FUNCTION_18	WHILE_1
0x4000668	        0x4983c001	                               add r8, 1	       345	list.c	FUNCTION_18	WHILE_1
0x400066c	          0x488b00	                    mov rax, qword [rax]	       344	list.c	FUNCTION_18	WHILE_1
0x400066f	          0x4939f0	                             cmp r8, rsi	       341	list.c	FUNCTION_18	WHILE_1
0x4000672	            0x75f4	                           jne 0x4000668	       341	list.c	FUNCTION_18	WHILE_1
0x4000674	          0x4889f1	                            mov rcx, rsi	       341	list.c	FUNCTION_18	WHILE_1
0x4000677	          0x4839f1	                            cmp rcx, rsi	       347	list.c	FUNCTION_18	WHILE_2
0x400067a	     0xf8e90000000	                           jle 0x4000710	       347	list.c	FUNCTION_18	WHILE_2
0x4000680	        0x4883e901	                              sub rcx, 1	       351	list.c	FUNCTION_18	WHILE_2
0x4000684	        0x488b4008	                mov rax, qword [rax + 8]	       350	list.c	FUNCTION_18	WHILE_2
0x4000688	          0x4839f1	                            cmp rcx, rsi	       347	list.c	FUNCTION_18	WHILE_2
0x400068b	            0x75f3	                           jne 0x4000680	       347	list.c	FUNCTION_18	WHILE_2
0x400068d	          0x4885c0	                           test rax, rax	       373	list.c	FUNCTION_19	IF_1
0x4000690	          0x897740	             mov dword [rdi + 0x40], esi	       355	list.c	FUNCTION_18
0x4000693	        0x48894718	             mov qword [rdi + 0x18], rax	       356	list.c	FUNCTION_18
0x4000697	            0x7447	                            je 0x40006e0	       373	list.c	FUNCTION_19	IF_1
0x4000699	        0x488d7810	                   lea rdi, [rax + 0x10]	       379	list.c	FUNCTION_19	CALL_2
0x400069d	          0x4889d6	                            mov rsi, rdx	       379	list.c	FUNCTION_19	CALL_2
0x40006a0	      0xe900000000	                           jmp 0x40006a5	       379	list.c	FUNCTION_19	CALL_2
0x40006a5	           0xf1f00	                         nop dword [rax]	       379	list.c	FUNCTION_19	CALL_2
0x40006a8	        0x468d0409	                     lea r8d, [rcx + r9]	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x40006ac	          0x4589c2	                           mov r10d, r8d	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x40006af	        0x41c1ea1f	                          shr r10d, 0x1f	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x40006b3	          0x4501d0	                           add r8d, r10d	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x40006b6	          0x41d1f8	                              sar r8d, 1	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x40006b9	          0x4d63c0	                          movsxd r8, r8d	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x40006bc	          0x4939f0	                             cmp r8, rsi	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x40006bf	            0x7d9c	                           jge 0x400065d	       312	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x40006c1	        0x418d49ff	                       lea ecx, [r9 - 1]	       316	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x40006c5	        0x488b4708	                mov rax, qword [rdi + 8]	       315	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x40006c9	          0x4863c9	                         movsxd rcx, ecx	       316	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x40006cc	            0xeb8f	                           jmp 0x400065d	       316	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x40006ce	            0x6690	                                     nop	       316	list.c	FUNCTION_18	IF_4	ELSE_1	IF_6
0x40006d0	          0x4801c6	                            add rsi, rax	       300	list.c	FUNCTION_18	IF_3
0x40006d3	     0xf8950ffffff	                           jns 0x4000629	       300	list.c	FUNCTION_18	IF_3
0x40006d9	     0xf1f80000000	                         nop dword [rax]	       300	list.c	FUNCTION_18	IF_3
0x40006e0	          0x4885d2	                           test rdx, rdx	       375	list.c	FUNCTION_19	IF_1	IF_2
0x40006e3	            0x7406	                            je 0x40006eb	       375	list.c	FUNCTION_19	IF_1	IF_2
0x40006e5	    0xc70201000000	                      mov dword [rdx], 1	       376	list.c	FUNCTION_19	IF_1	IF_2
0x40006eb	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       380	list.c	FUNCTION_19
0x40006f2	              0xc3	                                     ret	       380	list.c	FUNCTION_19
0x40006f3	       0xf1f440000	                   nop dword [rax + rax]	       380	list.c	FUNCTION_19
0x40006f8	          0x4489c8	                            mov eax, r9d	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x40006fb	          0xc1e81f	                           shr eax, 0x1f	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x40006fe	          0x4401c8	                            add eax, r9d	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x4000701	            0xd1f8	                              sar eax, 1	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x4000703	            0x4898	                                    cdqe	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x4000705	          0x4839f0	                            cmp rax, rsi	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x4000708	     0xf8f4affffff	                            jg 0x4000658	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x400070e	            0xebb1	                           jmp 0x40006c1	       327	list.c	FUNCTION_18	ELSE_3	IF_7
0x4000710	          0x4889ce	                            mov rsi, rcx	       347	list.c	FUNCTION_18	WHILE_2
0x4000713	      0xe975ffffff	                           jmp 0x400068d	       347	list.c	FUNCTION_18	WHILE_2
write_list	functions,0:WHILE,0:ELSE,1:FOR,2:DO,0:IF,5:CALL,6:SWITCH,0	80
0x40018f0	            0x4155	                                push r13	       919	list.c	FUNCTION_38
0x40018f2	            0x4154	                                push r12	       919	list.c	FUNCTION_38
0x40018f4	          0x4189d5	                           mov r13d, edx	       919	list.c	FUNCTION_38
0x40018f7	              0x55	                                push rbp	       919	list.c	FUNCTION_38
0x40018f8	              0x53	                                push rbx	       919	list.c	FUNCTION_38
0x40018f9	          0x4889fd	                            mov rbp, rdi	       919	list.c	FUNCTION_38
0x40018fc	        0x4883ec08	                              sub rsp, 8	       919	list.c	FUNCTION_38
0x4001900	          0x4c8b26	                    mov r12, qword [rsi]	       925	list.c	FUNCTION_38	FOR_1
0x4001903	          0x4d85e4	                           test r12, r12	       925	list.c	FUNCTION_38	FOR_1
0x4001906	     0xf8484000000	                            je 0x4001990	       925	list.c	FUNCTION_38	FOR_1
0x400190c	         0xf1f4000	                         nop dword [rax]	       925	list.c	FUNCTION_38	FOR_1
0x4001910	      0x498d7c2410	                   lea rdi, [r12 + 0x10]	       927	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_1
0x4001915	      0xe800000000	                          call 0x400191a	       927	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_1
0x400191a	           0xfb638	                   movzx edi, byte [rax]	       927	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_1
0x400191d	          0x4889c3	                            mov rbx, rax	       927	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_1
0x4001920	          0x4084ff	                           test dil, dil	       927	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_1
0x4001923	            0x7521	                           jne 0x4001946	       927	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_1
0x4001925	            0xeb39	                           jmp 0x4001960	       927	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_1
0x4001927	    0x660f1f840000	                    nop word [rax + rax]	       927	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_1
0x4001930	      0xe800000000	                          call 0x4001935	       932	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_3
0x4001935	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       933	list.c	FUNCTION_38	FOR_1	FOR_2	IF_2
0x4001938	            0x7421	                            je 0x400195b	       933	list.c	FUNCTION_38	FOR_1	FOR_2	IF_2
0x400193a	        0x4883c301	                              add rbx, 1	       927	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_1
0x400193e	           0xfb63b	                   movzx edi, byte [rbx]	       927	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_1
0x4001941	          0x4084ff	                           test dil, dil	       927	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_1
0x4001944	            0x741a	                            je 0x4001960	       927	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_1
0x4001946	        0x4080ff0a	                            cmp dil, 0xa	       929	list.c	FUNCTION_38	FOR_1	FOR_2	IF_1
0x400194a	          0x4889ee	                            mov rsi, rbp	       930	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_2
0x400194d	            0x75e1	                           jne 0x4001930	       929	list.c	FUNCTION_38	FOR_1	FOR_2	IF_1
0x400194f	            0x31ff	                            xor edi, edi	       930	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_2
0x4001951	      0xe800000000	                          call 0x4001956	       930	list.c	FUNCTION_38	FOR_1	FOR_2	CALL_2
0x4001956	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       933	list.c	FUNCTION_38	FOR_1	FOR_2	IF_2
0x4001959	            0x75df	                           jne 0x400193a	       933	list.c	FUNCTION_38	FOR_1	FOR_2	IF_2
0x400195b	            0x31db	                            xor ebx, ebx	       935	list.c	FUNCTION_38	FOR_1	FOR_2	IF_2
0x400195d	            0xeb06	                           jmp 0x4001965	       935	list.c	FUNCTION_38	FOR_1	FOR_2	IF_2
0x400195f	              0x90	                                     nop	       935	list.c	FUNCTION_38	FOR_1	FOR_2	IF_2
0x4001960	      0xbb01000000	                              mov ebx, 1	       935	list.c	FUNCTION_38	FOR_1	FOR_2	IF_2
0x4001965	          0x4585ed	                         test r13d, r13d	       939	list.c	FUNCTION_38	FOR_1	IF_3
0x4001968	            0x7407	                            je 0x4001971	       939	list.c	FUNCTION_38	FOR_1	IF_3
0x400196a	      0x49833c2400	                      cmp qword [r12], 0	       939	list.c	FUNCTION_38	FOR_1	IF_3
0x400196f	            0x742f	                            je 0x40019a0	       939	list.c	FUNCTION_38	FOR_1	IF_3
0x4001971	          0x4889ee	                            mov rsi, rbp	       940	list.c	FUNCTION_38	FOR_1	IF_3	IF_4	CALL_4
0x4001974	      0xbf0a000000	                            mov edi, 0xa	       940	list.c	FUNCTION_38	FOR_1	IF_3	IF_4	CALL_4
0x4001979	      0xe800000000	                          call 0x400197e	       940	list.c	FUNCTION_38	FOR_1	IF_3	IF_4	CALL_4
0x400197e	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       940	list.c	FUNCTION_38	FOR_1	IF_3	IF_4	CALL_4
0x4001981	            0x7447	                            je 0x40019ca	       940	list.c	FUNCTION_38	FOR_1	IF_3	IF_4	CALL_4
0x4001983	            0x85db	                           test ebx, ebx	       945	list.c	FUNCTION_38	FOR_1	IF_5
0x4001985	            0x741d	                            je 0x40019a4	       945	list.c	FUNCTION_38	FOR_1	IF_5
0x4001987	        0x4d8b2424	                    mov r12, qword [r12]	       925	list.c	FUNCTION_38	FOR_1
0x400198b	          0x4d85e4	                           test r12, r12	       925	list.c	FUNCTION_38	FOR_1
0x400198e	            0x7580	                           jne 0x4001910	       925	list.c	FUNCTION_38	FOR_1
0x4001990	        0x4883c408	                              add rsp, 8	       952	list.c	FUNCTION_38
0x4001994	      0xb801000000	                              mov eax, 1	       948	list.c	FUNCTION_38	FOR_1	IF_5
0x4001999	              0x5b	                                 pop rbx	       952	list.c	FUNCTION_38
0x400199a	              0x5d	                                 pop rbp	       952	list.c	FUNCTION_38
0x400199b	            0x415c	                                 pop r12	       952	list.c	FUNCTION_38
0x400199d	            0x415d	                                 pop r13	       952	list.c	FUNCTION_38
0x400199f	              0xc3	                                     ret	       952	list.c	FUNCTION_38
0x40019a0	            0x85db	                           test ebx, ebx	       945	list.c	FUNCTION_38	FOR_1	IF_5
0x40019a2	            0x75ec	                           jne 0x4001990	       945	list.c	FUNCTION_38	FOR_1	IF_5
0x40019a4	      0xba05000000	                              mov edx, 5	       947	list.c	FUNCTION_38	FOR_1	IF_5	CALL_6
0x40019a9	      0xbe00000000	                              mov esi, 0	       947	list.c	FUNCTION_38	FOR_1	IF_5	CALL_6
0x40019ae	            0x31ff	                            xor edi, edi	       947	list.c	FUNCTION_38	FOR_1	IF_5	CALL_6
0x40019b0	      0xe800000000	                          call 0x40019b5	       947	list.c	FUNCTION_38	FOR_1	IF_5	CALL_6
0x40019b5	          0x4889c7	                            mov rdi, rax	       947	list.c	FUNCTION_38	FOR_1	IF_5	CALL_6
0x40019b8	      0xe800000000	                          call 0x40019bd	       947	list.c	FUNCTION_38	FOR_1	IF_5	CALL_6
0x40019bd	        0x4883c408	                              add rsp, 8	       952	list.c	FUNCTION_38
0x40019c1	            0x31c0	                            xor eax, eax	       948	list.c	FUNCTION_38	FOR_1	IF_5
0x40019c3	              0x5b	                                 pop rbx	       952	list.c	FUNCTION_38
0x40019c4	              0x5d	                                 pop rbp	       952	list.c	FUNCTION_38
0x40019c5	            0x415c	                                 pop r12	       952	list.c	FUNCTION_38
0x40019c7	            0x415d	                                 pop r13	       952	list.c	FUNCTION_38
0x40019c9	              0xc3	                                     ret	       952	list.c	FUNCTION_38
0x40019ca	        0x4883c408	                              add rsp, 8	       952	list.c	FUNCTION_38
0x40019ce	            0x31c0	                            xor eax, eax	       942	list.c	FUNCTION_38	FOR_1	IF_3	IF_4
0x40019d0	              0x5b	                                 pop rbx	       952	list.c	FUNCTION_38
0x40019d1	              0x5d	                                 pop rbp	       952	list.c	FUNCTION_38
0x40019d2	            0x415c	                                 pop r12	       952	list.c	FUNCTION_38
0x40019d4	            0x415d	                                 pop r13	       952	list.c	FUNCTION_38
0x40019d6	              0xc3	                                     ret	       952	list.c	FUNCTION_38
list_rem_watch	functions,0:WHILE,0:ELSE,0:FOR,1:DO,0:IF,1:CALL,0:SWITCH,0	21
0x4000050	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	        41	list.c	FUNCTION_2	FOR_1
0x4000054	          0x4885d2	                           test rdx, rdx	        41	list.c	FUNCTION_2	FOR_1
0x4000057	            0x7428	                            je 0x4000081	        41	list.c	FUNCTION_2	FOR_1
0x4000059	        0x4883c710	                           add rdi, 0x10	        40	list.c	FUNCTION_2
0x400005d	          0x4839f2	                            cmp rdx, rsi	        43	list.c	FUNCTION_2	FOR_1	IF_1
0x4000060	          0x4889d0	                            mov rax, rdx	        40	list.c	FUNCTION_2
0x4000063	            0x7513	                           jne 0x4000078	        43	list.c	FUNCTION_2	FOR_1	IF_1
0x4000065	            0xeb25	                           jmp 0x400008c	        43	list.c	FUNCTION_2	FOR_1	IF_1
0x4000067	    0x660f1f840000	                    nop word [rax + rax]	        43	list.c	FUNCTION_2	FOR_1	IF_1
0x4000070	          0x4839c6	                            cmp rsi, rax	        43	list.c	FUNCTION_2	FOR_1	IF_1
0x4000073	            0x7413	                            je 0x4000088	        43	list.c	FUNCTION_2	FOR_1	IF_1
0x4000075	          0x4889c2	                            mov rdx, rax	        43	list.c	FUNCTION_2	FOR_1	IF_1
0x4000078	        0x488b4208	                mov rax, qword [rdx + 8]	        41	list.c	FUNCTION_2	FOR_1
0x400007c	          0x4885c0	                           test rax, rax	        41	list.c	FUNCTION_2	FOR_1
0x400007f	            0x75ef	                           jne 0x4000070	        41	list.c	FUNCTION_2	FOR_1
0x4000081	            0xf3c3	                                     ret	        41	list.c	FUNCTION_2	FOR_1
0x4000083	       0xf1f440000	                   nop dword [rax + rax]	        41	list.c	FUNCTION_2	FOR_1
0x4000088	        0x488d7a08	                      lea rdi, [rdx + 8]	        48	list.c	FUNCTION_2	FOR_1
0x400008c	        0x488b4008	                mov rax, qword [rax + 8]	        45	list.c	FUNCTION_2	FOR_1	IF_1
0x4000090	          0x488907	                    mov qword [rdi], rax	        45	list.c	FUNCTION_2	FOR_1	IF_1
0x4000093	              0xc3	                                     ret	        46	list.c	FUNCTION_2	FOR_1	IF_1
list_free_nonref	functions,0:WHILE,0:ELSE,0:FOR,1:DO,0:IF,1:CALL,1:SWITCH,0	36
0x4000230	            0x4154	                                push r12	       153	list.c	FUNCTION_9
0x4000232	              0x55	                                push rbp	       153	list.c	FUNCTION_9
0x4000233	              0x53	                                push rbx	       153	list.c	FUNCTION_9
0x4000234	    0x488b1d000000	            mov rbx, qword [0x0400023b] 	       157	list.c	FUNCTION_9	FOR_1
0x400023b	          0x4885db	                           test rbx, rbx	       157	list.c	FUNCTION_9	FOR_1
0x400023e	            0x7457	                            je 0x4000297	       157	list.c	FUNCTION_9	FOR_1
0x4000240	          0x4189fc	                           mov r12d, edi	       157	list.c	FUNCTION_9	FOR_1
0x4000243	            0x31c0	                            xor eax, eax	       157	list.c	FUNCTION_9	FOR_1
0x4000245	           0xf1f00	                         nop dword [rax]	       157	list.c	FUNCTION_9	FOR_1
0x4000248	          0x8b5344	            mov edx, dword [rbx + 0x44] 	       158	list.c	FUNCTION_9	FOR_1	IF_1
0x400024b	          0x4431e2	                           xor edx, r12d	       158	list.c	FUNCTION_9	FOR_1	IF_1
0x400024e	          0x83e2fe	                     and edx, 0xfffffffe	       158	list.c	FUNCTION_9	FOR_1	IF_1
0x4000251	            0x7407	                            je 0x400025a	       158	list.c	FUNCTION_9	FOR_1	IF_1
0x4000253	      0x48837b1000	               cmp qword [rbx + 0x10], 0	       159	list.c	FUNCTION_9	FOR_1	IF_1
0x4000258	            0x742e	                            je 0x4000288	       159	list.c	FUNCTION_9	FOR_1	IF_1
0x400025a	        0x488b5b28	            mov rbx, qword [rbx + 0x28] 	       157	list.c	FUNCTION_9	FOR_1
0x400025e	          0x4885db	                           test rbx, rbx	       157	list.c	FUNCTION_9	FOR_1
0x4000261	            0x75e5	                           jne 0x4000248	       157	list.c	FUNCTION_9	FOR_1
0x4000263	              0x5b	                                 pop rbx	       168	list.c	FUNCTION_9
0x4000264	              0x5d	                                 pop rbp	       168	list.c	FUNCTION_9
0x4000265	            0x415c	                                 pop r12	       168	list.c	FUNCTION_9
0x4000267	              0xc3	                                     ret	       168	list.c	FUNCTION_9
0x4000268	     0xf1f84000000	                   nop dword [rax + rax]	       168	list.c	FUNCTION_9
0x4000270	        0x488b4500	                    mov rax, qword [rbp]	       140	list.c	FUNCTION_8	FOR_1
0x4000274	        0x488d7d10	                   lea rdi, [rbp + 0x10]	       141	list.c	FUNCTION_8	FOR_1	CALL_1
0x4000278	          0x488903	                    mov qword [rbx], rax	       140	list.c	FUNCTION_8	FOR_1
0x400027b	      0xe800000000	                          call 0x4000280	       141	list.c	FUNCTION_8	FOR_1	CALL_1
0x4000280	          0x4889ef	                            mov rdi, rbp	       142	list.c	FUNCTION_8	FOR_1	CALL_2
0x4000283	      0xe800000000	                          call 0x4000288	       142	list.c	FUNCTION_8	FOR_1	CALL_2
0x4000288	          0x488b2b	                    mov rbp, qword [rbx]	       137	list.c	FUNCTION_8	FOR_1
0x400028b	          0x4885ed	                           test rbp, rbp	       137	list.c	FUNCTION_8	FOR_1
0x400028e	            0x75e0	                           jne 0x4000270	       137	list.c	FUNCTION_8	FOR_1
0x4000290	      0xb801000000	                              mov eax, 1	       165	list.c	FUNCTION_9	FOR_1	IF_1
0x4000295	            0xebc3	                           jmp 0x400025a	       165	list.c	FUNCTION_9	FOR_1	IF_1
0x4000297	            0x31c0	                            xor eax, eax	       155	list.c	FUNCTION_9
0x4000299	            0xebc8	                           jmp 0x4000263	       155	list.c	FUNCTION_9
list_idx_of_item	functions,0:WHILE,0:ELSE,0:FOR,1:DO,0:IF,2:CALL,0:SWITCH,0	22
0x4000840	          0x4885ff	                           test rdi, rdi	       409	list.c	FUNCTION_21	IF_1
0x4000843	            0x743b	                            je 0x4000880	       409	list.c	FUNCTION_21	IF_1
0x4000845	          0x488b17	                    mov rdx, qword [rdi]	       412	list.c	FUNCTION_21	FOR_1
0x4000848	            0x31c0	                            xor eax, eax	       412	list.c	FUNCTION_21	FOR_1
0x400084a	          0x4839f2	                            cmp rdx, rsi	       412	list.c	FUNCTION_21	FOR_1
0x400084d	            0x7422	                            je 0x4000871	       412	list.c	FUNCTION_21	FOR_1
0x400084f	          0x4885d2	                           test rdx, rdx	       412	list.c	FUNCTION_21	FOR_1
0x4000852	            0x7511	                           jne 0x4000865	       412	list.c	FUNCTION_21	FOR_1
0x4000854	            0xeb1b	                           jmp 0x4000871	       412	list.c	FUNCTION_21	FOR_1
0x4000856	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       412	list.c	FUNCTION_21	FOR_1
0x4000860	          0x4839d6	                            cmp rsi, rdx	       412	list.c	FUNCTION_21	FOR_1
0x4000863	            0x740c	                            je 0x4000871	       412	list.c	FUNCTION_21	FOR_1
0x4000865	          0x488b12	                    mov rdx, qword [rdx]	       412	list.c	FUNCTION_21	FOR_1
0x4000868	        0x4883c001	                              add rax, 1	       413	list.c	FUNCTION_21	FOR_1
0x400086c	          0x4885d2	                           test rdx, rdx	       412	list.c	FUNCTION_21	FOR_1
0x400086f	            0x75ef	                           jne 0x4000860	       412	list.c	FUNCTION_21	FOR_1
0x4000871	          0x4885d2	                           test rdx, rdx	       414	list.c	FUNCTION_21	IF_2
0x4000874	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       414	list.c	FUNCTION_21	IF_2
0x400087b	        0x480f44c2	                          cmove rax, rdx	       414	list.c	FUNCTION_21	IF_2
0x400087f	              0xc3	                                     ret	       414	list.c	FUNCTION_21	IF_2
0x4000880	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       410	list.c	FUNCTION_21	IF_1
0x4000887	              0xc3	                                     ret	       417	list.c	FUNCTION_21
get_list_tv	functions,0:WHILE,1:ELSE,1:FOR,0:DO,0:IF,10:CALL,14:SWITCH,0	155
0x4001690	            0x4156	                                push r14	       858	list.c	FUNCTION_37
0x4001692	            0x4155	                                push r13	       858	list.c	FUNCTION_37
0x4001694	          0x4989f6	                            mov r14, rsi	       858	list.c	FUNCTION_37
0x4001697	            0x4154	                                push r12	       858	list.c	FUNCTION_37
0x4001699	              0x55	                                push rbp	       858	list.c	FUNCTION_37
0x400169a	          0x4189d4	                           mov r12d, edx	       858	list.c	FUNCTION_37
0x400169d	              0x53	                                push rbx	       858	list.c	FUNCTION_37
0x400169e	          0x4889fd	                            mov rbp, rdi	       858	list.c	FUNCTION_37
0x40016a1	        0x4883ec20	                           sub rsp, 0x20	       858	list.c	FUNCTION_37
0x40016a5	    0x64488b042528	                mov rax, qword fs:[0x28]	       858	list.c	FUNCTION_37
0x40016ae	      0x4889442418	             mov qword [rsp + 0x18], rax	       858	list.c	FUNCTION_37
0x40016b3	            0x31c0	                            xor eax, eax	       858	list.c	FUNCTION_37
0x40016b5	            0x85d2	                           test edx, edx	       863	list.c	FUNCTION_37	IF_1
0x40016b7	     0xf849b000000	                            je 0x4001758	       863	list.c	FUNCTION_37	IF_1
0x40016bd	      0xbf50000000	                           mov edi, 0x50	        75	list.c	FUNCTION_4	CALL_1
0x40016c2	      0xe800000000	                          call 0x40016c7	        75	list.c	FUNCTION_4	CALL_1
0x40016c7	          0x4885c0	                           test rax, rax	        76	list.c	FUNCTION_4	IF_1
0x40016ca	          0x4989c5	                            mov r13, rax	        75	list.c	FUNCTION_4	CALL_1
0x40016cd	            0x7460	                            je 0x400172f	        76	list.c	FUNCTION_4	IF_1
0x40016cf	    0x488b05000000	            mov rax, qword [0x040016d6] 	        79	list.c	FUNCTION_4	IF_1	IF_2
0x40016d6	          0x4885c0	                           test rax, rax	        79	list.c	FUNCTION_4	IF_1	IF_2
0x40016d9	            0x7404	                            je 0x40016df	        79	list.c	FUNCTION_4	IF_1	IF_2
0x40016db	        0x4c896830	             mov qword [rax + 0x30], r13	        80	list.c	FUNCTION_4	IF_1	IF_2
0x40016df	    0x49c745300000	               mov qword [r13 + 0x30], 0	        81	list.c	FUNCTION_4	IF_1
0x40016e7	        0x49894528	             mov qword [r13 + 0x28], rax	        82	list.c	FUNCTION_4	IF_1
0x40016eb	    0x4c892d000000	            mov qword [0x040016f2], r13 	        83	list.c	FUNCTION_4	IF_1
0x40016f2	            0xeb67	                           jmp 0x400175b	        83	list.c	FUNCTION_4	IF_1
0x40016f4	         0xf1f4000	                         nop dword [rax]	        83	list.c	FUNCTION_4	IF_1
0x40016f8	            0x3c5d	                            cmp al, 0x5d	       898	list.c	FUNCTION_37	IF_8
0x40016fa	     0xf8418010000	                            je 0x4001818	       898	list.c	FUNCTION_37	IF_8
0x4001700	      0xba05000000	                              mov edx, 5	       900	list.c	FUNCTION_37	IF_8	CALL_11
0x4001705	      0xbe00000000	                              mov esi, 0	       900	list.c	FUNCTION_37	IF_8	CALL_11
0x400170a	            0x31ff	                            xor edi, edi	       900	list.c	FUNCTION_37	IF_8	CALL_11
0x400170c	      0xe800000000	                          call 0x4001711	       900	list.c	FUNCTION_37	IF_8	CALL_11
0x4001711	          0x4889de	                            mov rsi, rbx	       900	list.c	FUNCTION_37	IF_8	CALL_11
0x4001714	          0x4889c7	                            mov rdi, rax	       900	list.c	FUNCTION_37	IF_8	CALL_11
0x4001717	      0xe800000000	                          call 0x400171c	       900	list.c	FUNCTION_37	IF_8	CALL_11
0x400171c	          0x4585e4	                         test r12d, r12d	       902	list.c	FUNCTION_37	IF_8	IF_9
0x400171f	            0x740e	                            je 0x400172f	       902	list.c	FUNCTION_37	IF_8	IF_9
0x4001721	    0x8b2d00000000	            mov ebp, dword [0x04001727] 	       206	list.c	FUNCTION_12	IF_1
0x4001727	            0x85ed	                           test ebp, ebp	       206	list.c	FUNCTION_12	IF_1
0x4001729	     0xf8439010000	                            je 0x4001868	       206	list.c	FUNCTION_12	IF_1
0x400172f	            0x31ed	                            xor ebp, ebp	       867	list.c	FUNCTION_37	IF_1	IF_2
0x4001731	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       912	list.c	FUNCTION_37
0x4001736	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       912	list.c	FUNCTION_37
0x400173f	            0x89e8	                            mov eax, ebp	       912	list.c	FUNCTION_37
0x4001741	     0xf85a3010000	                           jne 0x40018ea	       912	list.c	FUNCTION_37
0x4001747	        0x4883c420	                           add rsp, 0x20	       912	list.c	FUNCTION_37
0x400174b	              0x5b	                                 pop rbx	       912	list.c	FUNCTION_37
0x400174c	              0x5d	                                 pop rbp	       912	list.c	FUNCTION_37
0x400174d	            0x415c	                                 pop r12	       912	list.c	FUNCTION_37
0x400174f	            0x415d	                                 pop r13	       912	list.c	FUNCTION_37
0x4001751	            0x415e	                                 pop r14	       912	list.c	FUNCTION_37
0x4001753	              0xc3	                                     ret	       912	list.c	FUNCTION_37
0x4001754	         0xf1f4000	                         nop dword [rax]	       912	list.c	FUNCTION_37
0x4001758	          0x4531ed	                          xor r13d, r13d	       859	list.c	FUNCTION_37
0x400175b	        0x488b4500	                    mov rax, qword [rbp]	       870	list.c	FUNCTION_37	CALL_2
0x400175f	        0x488d7801	                      lea rdi, [rax + 1]	       870	list.c	FUNCTION_37	CALL_2
0x4001763	            0xeb1e	                           jmp 0x4001783	       870	list.c	FUNCTION_37	CALL_2
0x4001765	           0xf1f00	                         nop dword [rax]	       870	list.c	FUNCTION_37	CALL_2
0x4001768	        0x488b5d00	                    mov rbx, qword [rbp]	       888	list.c	FUNCTION_37	WHILE_1	IF_6
0x400176c	           0xfb603	                   movzx eax, byte [rbx]	       888	list.c	FUNCTION_37	WHILE_1	IF_6
0x400176f	            0x3c5d	                            cmp al, 0x5d	       888	list.c	FUNCTION_37	WHILE_1	IF_6
0x4001771	     0xf84a1000000	                            je 0x4001818	       888	list.c	FUNCTION_37	WHILE_1	IF_6
0x4001777	            0x3c2c	                            cmp al, 0x2c	       890	list.c	FUNCTION_37	WHILE_1	IF_7
0x4001779	     0xf8539010000	                           jne 0x40018b8	       890	list.c	FUNCTION_37	WHILE_1	IF_7
0x400177f	        0x488d7b01	                      lea rdi, [rbx + 1]	       895	list.c	FUNCTION_37	WHILE_1	CALL_9
0x4001783	      0xe800000000	                          call 0x4001788	       895	list.c	FUNCTION_37	WHILE_1	CALL_9
0x4001788	          0x4889c3	                            mov rbx, rax	       895	list.c	FUNCTION_37	WHILE_1	CALL_9
0x400178b	        0x48894500	                    mov qword [rbp], rax	       895	list.c	FUNCTION_37	WHILE_1	CALL_9
0x400178f	           0xfb600	                   movzx eax, byte [rax]	       871	list.c	FUNCTION_37	WHILE_1
0x4001792	            0x3c5d	                            cmp al, 0x5d	       871	list.c	FUNCTION_37	WHILE_1
0x4001794	     0xf845effffff	                            je 0x40016f8	       871	list.c	FUNCTION_37	WHILE_1
0x400179a	            0x84c0	                             test al, al	       871	list.c	FUNCTION_37	WHILE_1
0x400179c	     0xf8456ffffff	                            je 0x40016f8	       871	list.c	FUNCTION_37	WHILE_1
0x40017a2	          0x4489e2	                           mov edx, r12d	       873	list.c	FUNCTION_37	WHILE_1	IF_3	CALL_3
0x40017a5	          0x4889e6	                            mov rsi, rsp	       873	list.c	FUNCTION_37	WHILE_1	IF_3	CALL_3
0x40017a8	          0x4889ef	                            mov rdi, rbp	       873	list.c	FUNCTION_37	WHILE_1	IF_3	CALL_3
0x40017ab	      0xe800000000	                          call 0x40017b0	       873	list.c	FUNCTION_37	WHILE_1	IF_3	CALL_3
0x40017b0	            0x85c0	                           test eax, eax	       873	list.c	FUNCTION_37	WHILE_1	IF_3	CALL_3
0x40017b2	     0xf8464ffffff	                            je 0x400171c	       873	list.c	FUNCTION_37	WHILE_1	IF_3	CALL_3
0x40017b8	          0x4585e4	                         test r12d, r12d	       875	list.c	FUNCTION_37	WHILE_1	IF_4
0x40017bb	            0x74ab	                            je 0x4001768	       875	list.c	FUNCTION_37	WHILE_1	IF_4
0x40017bd	      0xbf20000000	                           mov edi, 0x20	       220	list.c	FUNCTION_13	CALL_1
0x40017c2	      0xe800000000	                          call 0x40017c7	       220	list.c	FUNCTION_13	CALL_1
0x40017c7	          0x4885c0	                           test rax, rax	       878	list.c	FUNCTION_37	WHILE_1	IF_4	IF_5
0x40017ca	     0xf8400010000	                            je 0x40018d0	       878	list.c	FUNCTION_37	WHILE_1	IF_4	IF_5
0x40017d0	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       880	list.c	FUNCTION_37	WHILE_1	IF_4	IF_5
0x40017d5	        0x488b0c24	                    mov rcx, qword [rsp]	       880	list.c	FUNCTION_37	WHILE_1	IF_4	IF_5
0x40017d9	        0x48895818	             mov qword [rax + 0x18], rbx	       880	list.c	FUNCTION_37	WHILE_1	IF_4	IF_5
0x40017dd	        0x48894810	             mov qword [rax + 0x10], rcx	       880	list.c	FUNCTION_37	WHILE_1	IF_4	IF_5
0x40017e1	        0xc6401400	                mov byte [rax + 0x14], 0	       881	list.c	FUNCTION_37	WHILE_1	IF_4	IF_5
0x40017e5	        0x498b5508	                mov rdx, qword [r13 + 8]	       425	list.c	FUNCTION_22	IF_1
0x40017e9	          0x4885d2	                           test rdx, rdx	       425	list.c	FUNCTION_22	IF_1
0x40017ec	     0xf84ae000000	                            je 0x40018a0	       425	list.c	FUNCTION_22	IF_1
0x40017f2	          0x488902	                    mov qword [rdx], rax	       434	list.c	FUNCTION_22	ELSE_1
0x40017f5	        0x48895008	                mov qword [rax + 8], rdx	       435	list.c	FUNCTION_22	ELSE_1
0x40017f9	        0x49894508	                mov qword [r13 + 8], rax	       436	list.c	FUNCTION_22	ELSE_1
0x40017fd	      0x4183453c01	               add dword [r13 + 0x3c], 1	       438	list.c	FUNCTION_22
0x4001802	    0x48c700000000	                      mov qword [rax], 0	       439	list.c	FUNCTION_22
0x4001809	        0x488b5d00	                    mov rbx, qword [rbp]	       888	list.c	FUNCTION_37	WHILE_1	IF_6
0x400180d	           0xfb603	                   movzx eax, byte [rbx]	       888	list.c	FUNCTION_37	WHILE_1	IF_6
0x4001810	            0x3c5d	                            cmp al, 0x5d	       888	list.c	FUNCTION_37	WHILE_1	IF_6
0x4001812	     0xf855fffffff	                           jne 0x4001777	       888	list.c	FUNCTION_37	WHILE_1	IF_6
0x4001818	        0x488d7b01	                      lea rdi, [rbx + 1]	       907	list.c	FUNCTION_37	CALL_13
0x400181c	      0xe800000000	                          call 0x4001821	       907	list.c	FUNCTION_37	CALL_13
0x4001821	          0x4585e4	                         test r12d, r12d	       908	list.c	FUNCTION_37	IF_10
0x4001824	        0x48894500	                    mov qword [rbp], rax	       907	list.c	FUNCTION_37	CALL_13
0x4001828	            0x7415	                            je 0x400183f	       908	list.c	FUNCTION_37	IF_10
0x400182a	          0x4d85ed	                           test r13, r13	       113	list.c	FUNCTION_6	IF_1
0x400182d	    0x41c706050000	                      mov dword [r14], 5	       111	list.c	FUNCTION_6
0x4001834	        0x4d896e08	                mov qword [r14 + 8], r13	       112	list.c	FUNCTION_6
0x4001838	            0x7405	                            je 0x400183f	       113	list.c	FUNCTION_6	IF_1
0x400183a	      0x4183453801	               add dword [r13 + 0x38], 1	       114	list.c	FUNCTION_6	IF_1
0x400183f	      0xbd01000000	                              mov ebp, 1	       911	list.c	FUNCTION_37
0x4001844	      0xe9e8feffff	                           jmp 0x4001731	       911	list.c	FUNCTION_37
0x4001849	     0xf1f80000000	                         nop dword [rax]	       911	list.c	FUNCTION_37
0x4001850	          0x488b13	                    mov rdx, qword [rbx]	       140	list.c	FUNCTION_8	FOR_1
0x4001853	        0x488d7b10	                   lea rdi, [rbx + 0x10]	       141	list.c	FUNCTION_8	FOR_1	CALL_1
0x4001857	        0x49895500	                    mov qword [r13], rdx	       140	list.c	FUNCTION_8	FOR_1
0x400185b	      0xe800000000	                          call 0x4001860	       141	list.c	FUNCTION_8	FOR_1	CALL_1
0x4001860	          0x4889df	                            mov rdi, rbx	       142	list.c	FUNCTION_8	FOR_1	CALL_2
0x4001863	      0xe800000000	                          call 0x4001868	       142	list.c	FUNCTION_8	FOR_1	CALL_2
0x4001868	        0x498b5d00	                    mov rbx, qword [r13]	       137	list.c	FUNCTION_8	FOR_1
0x400186c	          0x4885db	                           test rbx, rbx	       137	list.c	FUNCTION_8	FOR_1
0x400186f	            0x75df	                           jne 0x4001850	       137	list.c	FUNCTION_8	FOR_1
0x4001871	        0x498b4530	            mov rax, qword [r13 + 0x30] 	       174	list.c	FUNCTION_10	IF_1
0x4001875	          0x4885c0	                           test rax, rax	       174	list.c	FUNCTION_10	IF_1
0x4001878	            0x7463	                            je 0x40018dd	       174	list.c	FUNCTION_10	IF_1
0x400187a	        0x498b5528	            mov rdx, qword [r13 + 0x28] 	       177	list.c	FUNCTION_10	ELSE_1
0x400187e	        0x48895028	             mov qword [rax + 0x28], rdx	       177	list.c	FUNCTION_10	ELSE_1
0x4001882	        0x498b5528	            mov rdx, qword [r13 + 0x28] 	       177	list.c	FUNCTION_10	ELSE_1
0x4001886	          0x4885d2	                           test rdx, rdx	       178	list.c	FUNCTION_10	IF_2
0x4001889	            0x7404	                            je 0x400188f	       178	list.c	FUNCTION_10	IF_2
0x400188b	        0x48894230	             mov qword [rdx + 0x30], rax	       179	list.c	FUNCTION_10	IF_2
0x400188f	          0x4c89ef	                            mov rdi, r13	       181	list.c	FUNCTION_10	CALL_1
0x4001892	      0xe800000000	                          call 0x4001897	       181	list.c	FUNCTION_10	CALL_1
0x4001897	      0xe995feffff	                           jmp 0x4001731	       181	list.c	FUNCTION_10	CALL_1
0x400189c	         0xf1f4000	                         nop dword [rax]	       181	list.c	FUNCTION_10	CALL_1
0x40018a0	        0x49894500	                    mov qword [r13], rax	       428	list.c	FUNCTION_22	IF_1
0x40018a4	        0x49894508	                mov qword [r13 + 8], rax	       429	list.c	FUNCTION_22	IF_1
0x40018a8	    0x48c740080000	                  mov qword [rax + 8], 0	       430	list.c	FUNCTION_22	IF_1
0x40018b0	      0xe948ffffff	                           jmp 0x40017fd	       430	list.c	FUNCTION_22	IF_1
0x40018b5	           0xf1f00	                         nop dword [rax]	       430	list.c	FUNCTION_22	IF_1
0x40018b8	      0xba05000000	                              mov edx, 5	       892	list.c	FUNCTION_37	WHILE_1	IF_7	CALL_8
0x40018bd	      0xbe00000000	                              mov esi, 0	       892	list.c	FUNCTION_37	WHILE_1	IF_7	CALL_8
0x40018c2	      0xe943feffff	                           jmp 0x400170a	       892	list.c	FUNCTION_37	WHILE_1	IF_7	CALL_8
0x40018c7	    0x660f1f840000	                    nop word [rax + rax]	       892	list.c	FUNCTION_37	WHILE_1	IF_7	CALL_8
0x40018d0	          0x4889e7	                            mov rdi, rsp	       885	list.c	FUNCTION_37	WHILE_1	IF_4	CALL_6
0x40018d3	      0xe800000000	                          call 0x40018d8	       885	list.c	FUNCTION_37	WHILE_1	IF_4	CALL_6
0x40018d8	      0xe98bfeffff	                           jmp 0x4001768	       885	list.c	FUNCTION_37	WHILE_1	IF_4	CALL_6
0x40018dd	        0x498b5528	            mov rdx, qword [r13 + 0x28] 	       175	list.c	FUNCTION_10	IF_1
0x40018e1	    0x488915000000	            mov qword [0x040018e8], rdx 	       175	list.c	FUNCTION_10	IF_1
0x40018e8	            0xeb9c	                           jmp 0x4001886	       175	list.c	FUNCTION_10	IF_1
0x40018ea	      0xe800000000	                          call 0x40018ef	       912	list.c	FUNCTION_37
list_equal	functions,0:WHILE,0:ELSE,0:FOR,1:DO,0:IF,4:CALL,3:SWITCH,0	61
0x4000490	          0x4885ff	                           test rdi, rdi	       266	list.c	FUNCTION_17	IF_1
0x4000493	            0x7416	                            je 0x40004ab	       266	list.c	FUNCTION_17	IF_1
0x4000495	          0x4885f6	                           test rsi, rsi	       266	list.c	FUNCTION_17	IF_1
0x4000498	            0x7411	                            je 0x40004ab	       266	list.c	FUNCTION_17	IF_1
0x400049a	          0x4839f7	                            cmp rdi, rsi	       268	list.c	FUNCTION_17	IF_2
0x400049d	     0xf8485000000	                            je 0x4000528	       268	list.c	FUNCTION_17	IF_2
0x40004a3	          0x8b473c	            mov eax, dword [rdi + 0x3c] 	       270	list.c	FUNCTION_17	IF_3	CALL_2
0x40004a6	          0x39463c	            cmp dword [rsi + 0x3c], eax 	       270	list.c	FUNCTION_17	IF_3	CALL_2
0x40004a9	            0x7405	                            je 0x40004b0	       270	list.c	FUNCTION_17	IF_3	CALL_2
0x40004ab	            0x31c0	                            xor eax, eax	       267	list.c	FUNCTION_17	IF_1
0x40004ad	              0xc3	                                     ret	       279	list.c	FUNCTION_17
0x40004ae	            0x6690	                                     nop	       279	list.c	FUNCTION_17
0x40004b0	            0x4155	                                push r13	       263	list.c	FUNCTION_17
0x40004b2	            0x4154	                                push r12	       263	list.c	FUNCTION_17
0x40004b4	              0x55	                                push rbp	       263	list.c	FUNCTION_17
0x40004b5	              0x53	                                push rbx	       263	list.c	FUNCTION_17
0x40004b6	        0x4883ec08	                              sub rsp, 8	       263	list.c	FUNCTION_17
0x40004ba	          0x488b1f	                    mov rbx, qword [rdi]	       273	list.c	FUNCTION_17	FOR_1
0x40004bd	          0x488b2e	                    mov rbp, qword [rsi]	       273	list.c	FUNCTION_17	FOR_1
0x40004c0	          0x4885db	                           test rbx, rbx	       273	list.c	FUNCTION_17	FOR_1
0x40004c3	            0x7443	                            je 0x4000508	       273	list.c	FUNCTION_17	FOR_1
0x40004c5	          0x4189cd	                           mov r13d, ecx	       273	list.c	FUNCTION_17	FOR_1
0x40004c8	          0x4189d4	                           mov r12d, edx	       273	list.c	FUNCTION_17	FOR_1
0x40004cb	            0xeb0f	                           jmp 0x40004dc	       273	list.c	FUNCTION_17	FOR_1
0x40004cd	           0xf1f00	                         nop dword [rax]	       273	list.c	FUNCTION_17	FOR_1
0x40004d0	          0x488b1b	                    mov rbx, qword [rbx]	       275	list.c	FUNCTION_17	FOR_1
0x40004d3	        0x488b6d00	                    mov rbp, qword [rbp]	       275	list.c	FUNCTION_17	FOR_1
0x40004d7	          0x4885db	                           test rbx, rbx	       273	list.c	FUNCTION_17	FOR_1
0x40004da	            0x742c	                            je 0x4000508	       273	list.c	FUNCTION_17	FOR_1
0x40004dc	          0x4885ed	                           test rbp, rbp	       273	list.c	FUNCTION_17	FOR_1
0x40004df	            0x7427	                            je 0x4000508	       273	list.c	FUNCTION_17	FOR_1
0x40004e1	        0x488d7510	                   lea rsi, [rbp + 0x10]	       276	list.c	FUNCTION_17	FOR_1	IF_4	CALL_3
0x40004e5	        0x488d7b10	                   lea rdi, [rbx + 0x10]	       276	list.c	FUNCTION_17	FOR_1	IF_4	CALL_3
0x40004e9	          0x4489e9	                           mov ecx, r13d	       276	list.c	FUNCTION_17	FOR_1	IF_4	CALL_3
0x40004ec	          0x4489e2	                           mov edx, r12d	       276	list.c	FUNCTION_17	FOR_1	IF_4	CALL_3
0x40004ef	      0xe800000000	                          call 0x40004f4	       276	list.c	FUNCTION_17	FOR_1	IF_4	CALL_3
0x40004f4	            0x85c0	                           test eax, eax	       276	list.c	FUNCTION_17	FOR_1	IF_4	CALL_3
0x40004f6	            0x75d8	                           jne 0x40004d0	       276	list.c	FUNCTION_17	FOR_1	IF_4	CALL_3
0x40004f8	        0x4883c408	                              add rsp, 8	       279	list.c	FUNCTION_17
0x40004fc	            0x31c0	                            xor eax, eax	       267	list.c	FUNCTION_17	IF_1
0x40004fe	              0x5b	                                 pop rbx	       279	list.c	FUNCTION_17
0x40004ff	              0x5d	                                 pop rbp	       279	list.c	FUNCTION_17
0x4000500	            0x415c	                                 pop r12	       279	list.c	FUNCTION_17
0x4000502	            0x415d	                                 pop r13	       279	list.c	FUNCTION_17
0x4000504	              0xc3	                                     ret	       279	list.c	FUNCTION_17
0x4000505	           0xf1f00	                         nop dword [rax]	       279	list.c	FUNCTION_17
0x4000508	          0x4885db	                           test rbx, rbx	       278	list.c	FUNCTION_17
0x400050b	           0xf94c0	                                 sete al	       278	list.c	FUNCTION_17
0x400050e	            0x31d2	                            xor edx, edx	       278	list.c	FUNCTION_17
0x4000510	          0x4885ed	                           test rbp, rbp	       278	list.c	FUNCTION_17
0x4000513	           0xf94c2	                                 sete dl	       278	list.c	FUNCTION_17
0x4000516	        0x4883c408	                              add rsp, 8	       279	list.c	FUNCTION_17
0x400051a	              0x5b	                                 pop rbx	       279	list.c	FUNCTION_17
0x400051b	            0x21d0	                            and eax, edx	       278	list.c	FUNCTION_17
0x400051d	              0x5d	                                 pop rbp	       279	list.c	FUNCTION_17
0x400051e	            0x415c	                                 pop r12	       279	list.c	FUNCTION_17
0x4000520	            0x415d	                                 pop r13	       279	list.c	FUNCTION_17
0x4000522	              0xc3	                                     ret	       279	list.c	FUNCTION_17
0x4000523	       0xf1f440000	                   nop dword [rax + rax]	       279	list.c	FUNCTION_17
0x4000528	      0xb801000000	                              mov eax, 1	       269	list.c	FUNCTION_17	IF_2
0x400052d	              0xc3	                                     ret	       269	list.c	FUNCTION_17	IF_2
list_concat	functions,0:WHILE,0:ELSE,0:FOR,0:DO,0:IF,2:CALL,2:SWITCH,0	145
0x4000e70	          0x4885ff	                           test rdi, rdi	       611	list.c	FUNCTION_31	IF_1
0x4000e73	     0xf84d7000000	                            je 0x4000f50	       611	list.c	FUNCTION_31	IF_1
0x4000e79	          0x4885f6	                           test rsi, rsi	       611	list.c	FUNCTION_31	IF_1
0x4000e7c	     0xf84ce000000	                            je 0x4000f50	       611	list.c	FUNCTION_31	IF_1
0x4000e82	            0x4156	                                push r14	       608	list.c	FUNCTION_31
0x4000e84	            0x4155	                                push r13	       608	list.c	FUNCTION_31
0x4000e86	          0x4989f6	                            mov r14, rsi	       608	list.c	FUNCTION_31
0x4000e89	            0x4154	                                push r12	       608	list.c	FUNCTION_31
0x4000e8b	              0x55	                                push rbp	       608	list.c	FUNCTION_31
0x4000e8c	          0x4889fd	                            mov rbp, rdi	       608	list.c	FUNCTION_31
0x4000e8f	              0x53	                                push rbx	       608	list.c	FUNCTION_31
0x4000e90	      0xbf50000000	                           mov edi, 0x50	        75	list.c	FUNCTION_4	CALL_1
0x4000e95	          0x4989d5	                            mov r13, rdx	        75	list.c	FUNCTION_4	CALL_1
0x4000e98	      0xe800000000	                          call 0x4000e9d	        75	list.c	FUNCTION_4	CALL_1
0x4000e9d	          0x4885c0	                           test rax, rax	        76	list.c	FUNCTION_4	IF_1
0x4000ea0	          0x4889c3	                            mov rbx, rax	        75	list.c	FUNCTION_4	CALL_1
0x4000ea3	     0xf8411010000	                            je 0x4000fba	        76	list.c	FUNCTION_4	IF_1
0x4000ea9	    0x488b05000000	            mov rax, qword [0x04000eb0] 	        79	list.c	FUNCTION_4	IF_1	IF_2
0x4000eb0	          0x4885c0	                           test rax, rax	        79	list.c	FUNCTION_4	IF_1	IF_2
0x4000eb3	            0x7404	                            je 0x4000eb9	        79	list.c	FUNCTION_4	IF_1	IF_2
0x4000eb5	        0x48895830	             mov qword [rax + 0x30], rbx	        80	list.c	FUNCTION_4	IF_1	IF_2
0x4000eb9	        0x4c8b6500	                    mov r12, qword [rbp]	       651	list.c	FUNCTION_32	IF_2	FOR_1
0x4000ebd	    0x48c743300000	               mov qword [rbx + 0x30], 0	        81	list.c	FUNCTION_4	IF_1
0x4000ec5	        0x48894328	             mov qword [rbx + 0x28], rax	        82	list.c	FUNCTION_4	IF_1
0x4000ec9	    0x48891d000000	            mov qword [0x04000ed0], rbx 	        83	list.c	FUNCTION_4	IF_1
0x4000ed0	          0x4d85e4	                           test r12, r12	       651	list.c	FUNCTION_32	IF_2	FOR_1
0x4000ed3	            0x752f	                           jne 0x4000f04	       651	list.c	FUNCTION_32	IF_2	FOR_1
0x4000ed5	      0xe9ee000000	                           jmp 0x4000fc8	       651	list.c	FUNCTION_32	IF_2	FOR_1
0x4000eda	    0x660f1f440000	                    nop word [rax + rax]	       651	list.c	FUNCTION_32	IF_2	FOR_1
0x4000ee0	          0x488928	                    mov qword [rax], rbp	       434	list.c	FUNCTION_22	ELSE_1
0x4000ee3	        0x48894508	                mov qword [rbp + 8], rax	       435	list.c	FUNCTION_22	ELSE_1
0x4000ee7	        0x48896b08	                mov qword [rbx + 8], rbp	       436	list.c	FUNCTION_22	ELSE_1
0x4000eeb	        0x83433c01	               add dword [rbx + 0x3c], 1	       438	list.c	FUNCTION_22
0x4000eef	    0x48c745000000	                      mov qword [rbp], 0	       439	list.c	FUNCTION_22
0x4000ef7	        0x4d8b2424	                    mov r12, qword [r12]	       652	list.c	FUNCTION_32	IF_2	FOR_1
0x4000efb	          0x4d85e4	                           test r12, r12	       651	list.c	FUNCTION_32	IF_2	FOR_1
0x4000efe	     0xf84c4000000	                            je 0x4000fc8	       651	list.c	FUNCTION_32	IF_2	FOR_1
0x4000f04	    0x8b0500000000	            mov eax, dword [0x04000f0a] 	       651	list.c	FUNCTION_32	IF_2	FOR_1
0x4000f0a	            0x85c0	                           test eax, eax	       651	list.c	FUNCTION_32	IF_2	FOR_1
0x4000f0c	            0x754a	                           jne 0x4000f58	       651	list.c	FUNCTION_32	IF_2	FOR_1
0x4000f0e	      0xbf20000000	                           mov edi, 0x20	       220	list.c	FUNCTION_13	CALL_1
0x4000f13	      0xe800000000	                          call 0x4000f18	       220	list.c	FUNCTION_13	CALL_1
0x4000f18	          0x4885c0	                           test rax, rax	       655	list.c	FUNCTION_32	IF_2	FOR_1	IF_4
0x4000f1b	          0x4889c5	                            mov rbp, rax	       220	list.c	FUNCTION_13	CALL_1
0x4000f1e	            0x7438	                            je 0x4000f58	       655	list.c	FUNCTION_32	IF_2	FOR_1	IF_4
0x4000f20	        0x488d7010	                   lea rsi, [rax + 0x10]	       666	list.c	FUNCTION_32	IF_2	FOR_1	CALL_5
0x4000f24	      0x498d7c2410	                   lea rdi, [r12 + 0x10]	       666	list.c	FUNCTION_32	IF_2	FOR_1	CALL_5
0x4000f29	      0xe800000000	                          call 0x4000f2e	       666	list.c	FUNCTION_32	IF_2	FOR_1	CALL_5
0x4000f2e	        0x488b4308	                mov rax, qword [rbx + 8]	       425	list.c	FUNCTION_22	IF_1
0x4000f32	          0x4885c0	                           test rax, rax	       425	list.c	FUNCTION_22	IF_1
0x4000f35	            0x75a9	                           jne 0x4000ee0	       425	list.c	FUNCTION_22	IF_1
0x4000f37	          0x48892b	                    mov qword [rbx], rbp	       428	list.c	FUNCTION_22	IF_1
0x4000f3a	        0x48896b08	                mov qword [rbx + 8], rbp	       429	list.c	FUNCTION_22	IF_1
0x4000f3e	    0x48c745080000	                  mov qword [rbp + 8], 0	       430	list.c	FUNCTION_22	IF_1
0x4000f46	            0xeba3	                           jmp 0x4000eeb	       430	list.c	FUNCTION_22	IF_1
0x4000f48	     0xf1f84000000	                   nop dword [rax + rax]	       430	list.c	FUNCTION_22	IF_1
0x4000f50	            0x31c0	                            xor eax, eax	       617	list.c	FUNCTION_31	IF_2
0x4000f52	              0xc3	                                     ret	       623	list.c	FUNCTION_31
0x4000f53	       0xf1f440000	                   nop dword [rax + rax]	       623	list.c	FUNCTION_31
0x4000f58	          0x8b4338	            mov eax, dword [rbx + 0x38] 	       124	list.c	FUNCTION_7	IF_1
0x4000f5b	            0x85c0	                           test eax, eax	       124	list.c	FUNCTION_7	IF_1
0x4000f5d	            0x7f5b	                            jg 0x4000fba	       124	list.c	FUNCTION_7	IF_1
0x4000f5f	    0x8b1500000000	            mov edx, dword [0x04000f65] 	       206	list.c	FUNCTION_12	IF_1
0x4000f65	            0x85d2	                           test edx, edx	       206	list.c	FUNCTION_12	IF_1
0x4000f67	            0x7551	                           jne 0x4000fba	       206	list.c	FUNCTION_12	IF_1
0x4000f69	            0xeb1d	                           jmp 0x4000f88	       206	list.c	FUNCTION_12	IF_1
0x4000f6b	       0xf1f440000	                   nop dword [rax + rax]	       206	list.c	FUNCTION_12	IF_1
0x4000f70	        0x488b4500	                    mov rax, qword [rbp]	       140	list.c	FUNCTION_8	FOR_1
0x4000f74	        0x488d7d10	                   lea rdi, [rbp + 0x10]	       141	list.c	FUNCTION_8	FOR_1	CALL_1
0x4000f78	          0x488903	                    mov qword [rbx], rax	       140	list.c	FUNCTION_8	FOR_1
0x4000f7b	      0xe800000000	                          call 0x4000f80	       141	list.c	FUNCTION_8	FOR_1	CALL_1
0x4000f80	          0x4889ef	                            mov rdi, rbp	       142	list.c	FUNCTION_8	FOR_1	CALL_2
0x4000f83	      0xe800000000	                          call 0x4000f88	       142	list.c	FUNCTION_8	FOR_1	CALL_2
0x4000f88	          0x488b2b	                    mov rbp, qword [rbx]	       137	list.c	FUNCTION_8	FOR_1
0x4000f8b	          0x4885ed	                           test rbp, rbp	       137	list.c	FUNCTION_8	FOR_1
0x4000f8e	            0x75e0	                           jne 0x4000f70	       137	list.c	FUNCTION_8	FOR_1
0x4000f90	        0x488b4330	            mov rax, qword [rbx + 0x30] 	       174	list.c	FUNCTION_10	IF_1
0x4000f94	          0x4885c0	                           test rax, rax	       174	list.c	FUNCTION_10	IF_1
0x4000f97	     0xf84d9000000	                            je 0x4001076	       174	list.c	FUNCTION_10	IF_1
0x4000f9d	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       177	list.c	FUNCTION_10	ELSE_1
0x4000fa1	        0x48895028	             mov qword [rax + 0x28], rdx	       177	list.c	FUNCTION_10	ELSE_1
0x4000fa5	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       177	list.c	FUNCTION_10	ELSE_1
0x4000fa9	          0x4885d2	                           test rdx, rdx	       178	list.c	FUNCTION_10	IF_2
0x4000fac	            0x7404	                            je 0x4000fb2	       178	list.c	FUNCTION_10	IF_2
0x4000fae	        0x48894230	             mov qword [rdx + 0x30], rax	       179	list.c	FUNCTION_10	IF_2
0x4000fb2	          0x4889df	                            mov rdi, rbx	       181	list.c	FUNCTION_10	CALL_1
0x4000fb5	      0xe800000000	                          call 0x4000fba	       181	list.c	FUNCTION_10	CALL_1
0x4000fba	              0x5b	                                 pop rbx	       623	list.c	FUNCTION_31
0x4000fbb	            0x31c0	                            xor eax, eax	       617	list.c	FUNCTION_31	IF_2
0x4000fbd	              0x5d	                                 pop rbp	       623	list.c	FUNCTION_31
0x4000fbe	            0x415c	                                 pop r12	       623	list.c	FUNCTION_31
0x4000fc0	            0x415d	                                 pop r13	       623	list.c	FUNCTION_31
0x4000fc2	            0x415e	                                 pop r14	       623	list.c	FUNCTION_31
0x4000fc4	              0xc3	                                     ret	       623	list.c	FUNCTION_31
0x4000fc5	           0xf1f00	                         nop dword [rax]	       623	list.c	FUNCTION_31
0x4000fc8	        0x83433801	               add dword [rbx + 0x38], 1	       669	list.c	FUNCTION_32	IF_2
0x4000fcc	        0x49895d08	                mov qword [r13 + 8], rbx	       619	list.c	FUNCTION_31
0x4000fd0	          0x4d8b26	                    mov r12, qword [r14]	       596	list.c	FUNCTION_30	FOR_1
0x4000fd3	    0x41c745000500	                      mov dword [r13], 5	       618	list.c	FUNCTION_31
0x4000fdb	        0x458b6e3c	           mov r13d, dword [r14 + 0x3c] 	       592	list.c	FUNCTION_30
0x4000fdf	          0x4d85e4	                           test r12, r12	       596	list.c	FUNCTION_30	FOR_1
0x4000fe2	     0xf8480000000	                            je 0x4001068	       596	list.c	FUNCTION_30	FOR_1
0x4000fe8	        0x4183ed01	                             sub r13d, 1	       596	list.c	FUNCTION_30	FOR_1
0x4000fec	            0x7941	                           jns 0x400102f	       596	list.c	FUNCTION_30	FOR_1
0x4000fee	            0xeb78	                           jmp 0x4001068	       596	list.c	FUNCTION_30	FOR_1
0x4000ff0	        0x488d7010	                   lea rsi, [rax + 0x10]	       552	list.c	FUNCTION_28	CALL_2
0x4000ff4	          0x4c89f7	                            mov rdi, r14	       552	list.c	FUNCTION_28	CALL_2
0x4000ff7	      0xe800000000	                          call 0x4000ffc	       552	list.c	FUNCTION_28	CALL_2
0x4000ffc	        0x488b4308	                mov rax, qword [rbx + 8]	       425	list.c	FUNCTION_22	IF_1
0x4001000	          0x4885c0	                           test rax, rax	       425	list.c	FUNCTION_22	IF_1
0x4001003	            0x744b	                            je 0x4001050	       425	list.c	FUNCTION_22	IF_1
0x4001005	          0x488928	                    mov qword [rax], rbp	       434	list.c	FUNCTION_22	ELSE_1
0x4001008	        0x48894508	                mov qword [rbp + 8], rax	       435	list.c	FUNCTION_22	ELSE_1
0x400100c	        0x48896b08	                mov qword [rbx + 8], rbp	       436	list.c	FUNCTION_22	ELSE_1
0x4001010	        0x83433c01	               add dword [rbx + 0x3c], 1	       438	list.c	FUNCTION_22
0x4001014	    0x48c745000000	                      mov qword [rbp], 0	       439	list.c	FUNCTION_22
0x400101c	        0x4d8b2424	                    mov r12, qword [r12]	       596	list.c	FUNCTION_30	FOR_1
0x4001020	          0x4d85e4	                           test r12, r12	       596	list.c	FUNCTION_30	FOR_1
0x4001023	            0x7443	                            je 0x4001068	       596	list.c	FUNCTION_30	FOR_1
0x4001025	        0x4183ed01	                             sub r13d, 1	       596	list.c	FUNCTION_30	FOR_1
0x4001029	        0x4183fdff	            cmp r13d, 0xffffffffffffffff	       596	list.c	FUNCTION_30	FOR_1
0x400102d	            0x7439	                            je 0x4001068	       596	list.c	FUNCTION_30	FOR_1
0x400102f	      0xbf20000000	                           mov edi, 0x20	       220	list.c	FUNCTION_13	CALL_1
0x4001034	      0x4d8d742410	                   lea r14, [r12 + 0x10]	       597	list.c	FUNCTION_30	FOR_1	IF_1	CALL_1
0x4001039	      0xe800000000	                          call 0x400103e	       220	list.c	FUNCTION_13	CALL_1
0x400103e	          0x4885c0	                           test rax, rax	       550	list.c	FUNCTION_28	IF_1
0x4001041	          0x4889c5	                            mov rbp, rax	       220	list.c	FUNCTION_13	CALL_1
0x4001044	            0x75aa	                           jne 0x4000ff0	       550	list.c	FUNCTION_28	IF_1
0x4001046	      0xe96fffffff	                           jmp 0x4000fba	       550	list.c	FUNCTION_28	IF_1
0x400104b	       0xf1f440000	                   nop dword [rax + rax]	       550	list.c	FUNCTION_28	IF_1
0x4001050	          0x48892b	                    mov qword [rbx], rbp	       428	list.c	FUNCTION_22	IF_1
0x4001053	        0x48896b08	                mov qword [rbx + 8], rbp	       429	list.c	FUNCTION_22	IF_1
0x4001057	    0x48c745080000	                  mov qword [rbp + 8], 0	       430	list.c	FUNCTION_22	IF_1
0x400105f	            0xebaf	                           jmp 0x4001010	       430	list.c	FUNCTION_22	IF_1
0x4001061	     0xf1f80000000	                         nop dword [rax]	       430	list.c	FUNCTION_22	IF_1
0x4001068	              0x5b	                                 pop rbx	       623	list.c	FUNCTION_31
0x4001069	      0xb801000000	                              mov eax, 1	       599	list.c	FUNCTION_30
0x400106e	              0x5d	                                 pop rbp	       623	list.c	FUNCTION_31
0x400106f	            0x415c	                                 pop r12	       623	list.c	FUNCTION_31
0x4001071	            0x415d	                                 pop r13	       623	list.c	FUNCTION_31
0x4001073	            0x415e	                                 pop r14	       623	list.c	FUNCTION_31
0x4001075	              0xc3	                                     ret	       623	list.c	FUNCTION_31
0x4001076	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	       175	list.c	FUNCTION_10	IF_1
0x400107a	    0x488915000000	            mov qword [0x04001081], rdx 	       175	list.c	FUNCTION_10	IF_1
0x4001081	      0xe923ffffff	                           jmp 0x4000fa9	       175	list.c	FUNCTION_10	IF_1
list_join	functions,0:WHILE,0:ELSE,0:FOR,1:DO,0:IF,2:CALL,4:SWITCH,0	165
0x4001350	            0x4157	                                push r15	       825	list.c	FUNCTION_36
0x4001352	            0x4156	                                push r14	       825	list.c	FUNCTION_36
0x4001354	            0x4155	                                push r13	       825	list.c	FUNCTION_36
0x4001356	            0x4154	                                push r12	       825	list.c	FUNCTION_36
0x4001358	              0x55	                                push rbp	       825	list.c	FUNCTION_36
0x4001359	              0x53	                                push rbx	       825	list.c	FUNCTION_36
0x400135a	      0xbb01000000	                              mov ebx, 1	       832	list.c	FUNCTION_36	IF_1
0x400135f	    0x4881ecb80000	                           sub rsp, 0xb8	       825	list.c	FUNCTION_36
0x4001366	      0x4889542420	             mov qword [rsp + 0x20], rdx	       825	list.c	FUNCTION_36
0x400136b	          0x8b563c	            mov edx, dword [rsi + 0x3c] 	       831	list.c	FUNCTION_36	IF_1
0x400136e	    0x64488b042528	                mov rax, qword fs:[0x28]	       825	list.c	FUNCTION_36
0x4001377	    0x48898424a800	             mov qword [rsp + 0xa8], rax	       825	list.c	FUNCTION_36
0x400137f	            0x31c0	                            xor eax, eax	       825	list.c	FUNCTION_36
0x4001381	      0x48897c2418	             mov qword [rsp + 0x18], rdi	       825	list.c	FUNCTION_36
0x4001386	        0x894c240c	              mov dword [rsp + 0xc], ecx	       825	list.c	FUNCTION_36
0x400138a	            0x85d2	                           test edx, edx	       831	list.c	FUNCTION_36	IF_1
0x400138c	      0x4489442410	             mov dword [rsp + 0x10], r8d	       825	list.c	FUNCTION_36
0x4001391	      0x44894c2414	             mov dword [rsp + 0x14], r9d	       825	list.c	FUNCTION_36
0x4001396	     0xf8ef6010000	                           jle 0x4001592	       831	list.c	FUNCTION_36	IF_1
0x400139c	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       833	list.c	FUNCTION_36	CALL_1
0x40013a1	          0x4889f5	                            mov rbp, rsi	       833	list.c	FUNCTION_36	CALL_1
0x40013a4	      0xbe10000000	                           mov esi, 0x10	       833	list.c	FUNCTION_36	CALL_1
0x40013a9	          0x4189cf	                           mov r15d, ecx	       833	list.c	FUNCTION_36	CALL_1
0x40013ac	      0xe800000000	                          call 0x40013b1	       833	list.c	FUNCTION_36	CALL_1
0x40013b1	        0x488b5d00	                    mov rbx, qword [rbp]	       833	list.c	FUNCTION_36	CALL_1
0x40013b5	          0x4885db	                           test rbx, rbx	       761	list.c	FUNCTION_35	FOR_1
0x40013b8	     0xf84fd000000	                            je 0x40014bb	       761	list.c	FUNCTION_35	FOR_1
0x40013be	    0x8b0500000000	            mov eax, dword [0x040013c4] 	       761	list.c	FUNCTION_35	FOR_1
0x40013c4	            0x85c0	                           test eax, eax	       761	list.c	FUNCTION_35	FOR_1
0x40013c6	     0xf85ef000000	                           jne 0x40014bb	       761	list.c	FUNCTION_35	FOR_1
0x40013cc	          0x4489f8	                           mov eax, r15d	       761	list.c	FUNCTION_35	FOR_1
0x40013cf	          0x4531ff	                          xor r15d, r15d	       761	list.c	FUNCTION_35	FOR_1
0x40013d2	      0x4c8d642460	                   lea r12, [rsp + 0x60]	       761	list.c	FUNCTION_35	FOR_1
0x40013d7	            0x85c0	                           test eax, eax	       761	list.c	FUNCTION_35	FOR_1
0x40013d9	        0x410f94c7	                               sete r15b	       761	list.c	FUNCTION_35	FOR_1
0x40013dd	            0x31ed	                            xor ebp, ebp	       761	list.c	FUNCTION_35	FOR_1
0x40013df	            0xeb3b	                           jmp 0x400141c	       761	list.c	FUNCTION_35	FOR_1
0x40013e1	     0xf1f80000000	                         nop dword [rax]	       761	list.c	FUNCTION_35	FOR_1
0x40013e8	          0x4c8932	                    mov qword [rdx], r14	       775	list.c	FUNCTION_35	FOR_1	IF_2
0x40013eb	        0x48894208	                mov qword [rdx + 8], rax	       776	list.c	FUNCTION_35	FOR_1	IF_2
0x40013ef	      0xe800000000	                          call 0x40013f4	       784	list.c	FUNCTION_35	FOR_1	CALL_5
0x40013f4	    0x8b0d00000000	            mov ecx, dword [0x040013fa] 	       785	list.c	FUNCTION_35	FOR_1	IF_3
0x40013fa	            0x85c9	                           test ecx, ecx	       785	list.c	FUNCTION_35	FOR_1	IF_3
0x40013fc	     0xf85be000000	                           jne 0x40014c0	       785	list.c	FUNCTION_35	FOR_1	IF_3
0x4001402	          0x488b1b	                    mov rbx, qword [rbx]	       761	list.c	FUNCTION_35	FOR_1
0x4001405	          0x4885db	                           test rbx, rbx	       761	list.c	FUNCTION_35	FOR_1
0x4001408	     0xf84b2000000	                            je 0x40014c0	       761	list.c	FUNCTION_35	FOR_1
0x400140e	    0x8b0500000000	            mov eax, dword [0x04001414] 	       761	list.c	FUNCTION_35	FOR_1
0x4001414	            0x85c0	                           test eax, eax	       761	list.c	FUNCTION_35	FOR_1
0x4001416	     0xf85a4000000	                           jne 0x40014c0	       761	list.c	FUNCTION_35	FOR_1
0x400141c	        0x4883ec08	                              sub rsp, 8	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x4001420	        0x488d7b10	                   lea rdi, [rbx + 0x10]	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x4001424	          0x4c89e2	                            mov rdx, r12	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x4001427	            0x4157	                                push r15	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x4001429	      0x448b4c2420	            mov r9d, dword [rsp + 0x20] 	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x400142e	      0x448b44241c	            mov r8d, dword [rsp + 0x1c] 	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x4001433	        0x8b4c2424	            mov ecx, dword [rsp + 0x24] 	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x4001437	      0x488d742448	                   lea rsi, [rsp + 0x48]	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x400143c	      0xe800000000	                          call 0x4001441	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x4001441	          0x4885c0	                           test rax, rax	       765	list.c	FUNCTION_35	FOR_1	IF_1
0x4001444	          0x4989c6	                            mov r14, rax	       763	list.c	FUNCTION_35	FOR_1	CALL_1
0x4001447	              0x5e	                                 pop rsi	       765	list.c	FUNCTION_35	FOR_1	IF_1
0x4001448	              0x5f	                                 pop rdi	       765	list.c	FUNCTION_35	FOR_1	IF_1
0x4001449	     0xf8471010000	                            je 0x40015c0	       765	list.c	FUNCTION_35	FOR_1	IF_1
0x400144f	          0x4889c7	                            mov rdi, rax	       768	list.c	FUNCTION_35	FOR_1	CALL_2
0x4001452	      0xe800000000	                          call 0x4001457	       768	list.c	FUNCTION_35	FOR_1	CALL_2
0x4001457	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       771	list.c	FUNCTION_35	FOR_1	CALL_3
0x400145c	      0xbe01000000	                              mov esi, 1	       771	list.c	FUNCTION_35	FOR_1	CALL_3
0x4001461	             0x1c5	                            add ebp, eax	       769	list.c	FUNCTION_35	FOR_1
0x4001463	          0x4989c5	                            mov r13, rax	       768	list.c	FUNCTION_35	FOR_1	CALL_2
0x4001466	      0xe800000000	                          call 0x400146b	       771	list.c	FUNCTION_35	FOR_1	CALL_3
0x400146b	      0x4863442440	         movsxd rax, dword [rsp + 0x40] 	       772	list.c	FUNCTION_35	FOR_1
0x4001470	          0x8d5001	                      lea edx, [rax + 1]	       772	list.c	FUNCTION_35	FOR_1
0x4001473	        0x48c1e004	                              shl rax, 4	       772	list.c	FUNCTION_35	FOR_1
0x4001477	      0x4803442450	             add rax, qword [rsp + 0x50]	       772	list.c	FUNCTION_35	FOR_1
0x400147c	          0x4d39e6	                            cmp r14, r12	       773	list.c	FUNCTION_35	FOR_1	IF_2
0x400147f	        0x89542440	             mov dword [rsp + 0x40], edx	       772	list.c	FUNCTION_35	FOR_1
0x4001483	          0x4889c2	                            mov rdx, rax	       772	list.c	FUNCTION_35	FOR_1
0x4001486	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       773	list.c	FUNCTION_35	FOR_1	IF_2
0x400148b	     0xf8557ffffff	                           jne 0x40013e8	       773	list.c	FUNCTION_35	FOR_1	IF_2
0x4001491	          0x4885c0	                           test rax, rax	       773	list.c	FUNCTION_35	FOR_1	IF_2
0x4001494	     0xf854effffff	                           jne 0x40013e8	       773	list.c	FUNCTION_35	FOR_1	IF_2
0x400149a	          0x4489ee	                           mov esi, r13d	       780	list.c	FUNCTION_35	FOR_1	ELSE_1	CALL_4
0x400149d	          0x4c89e7	                            mov rdi, r12	       780	list.c	FUNCTION_35	FOR_1	ELSE_1	CALL_4
0x40014a0	      0x4889542428	             mov qword [rsp + 0x28], rdx	       780	list.c	FUNCTION_35	FOR_1	ELSE_1	CALL_4
0x40014a5	      0xe800000000	                          call 0x40014aa	       780	list.c	FUNCTION_35	FOR_1	ELSE_1	CALL_4
0x40014aa	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       780	list.c	FUNCTION_35	FOR_1	ELSE_1	CALL_4
0x40014af	          0x488902	                    mov qword [rdx], rax	       780	list.c	FUNCTION_35	FOR_1	ELSE_1	CALL_4
0x40014b2	        0x48894208	                mov qword [rdx + 8], rax	       781	list.c	FUNCTION_35	FOR_1	ELSE_1
0x40014b6	      0xe934ffffff	                           jmp 0x40013ef	       781	list.c	FUNCTION_35	FOR_1	ELSE_1
0x40014bb	            0x31ed	                            xor ebp, ebp	       753	list.c	FUNCTION_35
0x40014bd	           0xf1f00	                         nop dword [rax]	       753	list.c	FUNCTION_35
0x40014c0	        0x8b5c2440	            mov ebx, dword [rsp + 0x40] 	       791	list.c	FUNCTION_35	IF_4
0x40014c4	          0x83fb01	                              cmp ebx, 1	       791	list.c	FUNCTION_35	IF_4
0x40014c7	            0x7e12	                           jle 0x40014db	       791	list.c	FUNCTION_35	IF_4
0x40014c9	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       792	list.c	FUNCTION_35	CALL_6
0x40014ce	          0x83eb01	                              sub ebx, 1	       792	list.c	FUNCTION_35	CALL_6
0x40014d1	      0xe800000000	                          call 0x40014d6	       792	list.c	FUNCTION_35	CALL_6
0x40014d6	           0xfafd8	                           imul ebx, eax	       792	list.c	FUNCTION_35	CALL_6
0x40014d9	             0x1dd	                            add ebp, ebx	       792	list.c	FUNCTION_35	CALL_6
0x40014db	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       793	list.c	FUNCTION_35	IF_5	CALL_7
0x40014e0	          0x8d7502	                      lea esi, [rbp + 2]	       793	list.c	FUNCTION_35	IF_5	CALL_7
0x40014e3	      0xe800000000	                          call 0x40014e8	       793	list.c	FUNCTION_35	IF_5	CALL_7
0x40014e8	            0x85c0	                           test eax, eax	       793	list.c	FUNCTION_35	IF_5	CALL_7
0x40014ea	     0xf84d0000000	                            je 0x40015c0	       793	list.c	FUNCTION_35	IF_5	CALL_7
0x40014f0	        0x8b542440	            mov edx, dword [rsp + 0x40] 	       796	list.c	FUNCTION_35	FOR_2
0x40014f4	            0x85d2	                           test edx, edx	       796	list.c	FUNCTION_35	FOR_2
0x40014f6	            0x7e5b	                           jle 0x4001553	       796	list.c	FUNCTION_35	FOR_2
0x40014f8	    0x8b0500000000	            mov eax, dword [0x040014fe] 	       796	list.c	FUNCTION_35	FOR_2
0x40014fe	            0x85c0	                           test eax, eax	       796	list.c	FUNCTION_35	FOR_2
0x4001500	            0x7551	                           jne 0x4001553	       796	list.c	FUNCTION_35	FOR_2
0x4001502	            0x31db	                            xor ebx, ebx	       796	list.c	FUNCTION_35	FOR_2
0x4001504	            0x31ed	                            xor ebp, ebp	       796	list.c	FUNCTION_35	FOR_2
0x4001506	            0xeb25	                           jmp 0x400152d	       796	list.c	FUNCTION_35	FOR_2
0x4001508	     0xf1f84000000	                   nop dword [rax + rax]	       796	list.c	FUNCTION_35	FOR_2
0x4001510	    0x8b0500000000	            mov eax, dword [0x04001516] 	       796	list.c	FUNCTION_35	FOR_2
0x4001516	        0x4883c510	                           add rbp, 0x10	       796	list.c	FUNCTION_35	FOR_2
0x400151a	            0x85c0	                           test eax, eax	       796	list.c	FUNCTION_35	FOR_2
0x400151c	            0x7535	                           jne 0x4001553	       796	list.c	FUNCTION_35	FOR_2
0x400151e	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       801	list.c	FUNCTION_35	FOR_2	CALL_8
0x4001523	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       801	list.c	FUNCTION_35	FOR_2	CALL_8
0x4001528	      0xe800000000	                          call 0x400152d	       801	list.c	FUNCTION_35	FOR_2	CALL_8
0x400152d	      0x488b442450	            mov rax, qword [rsp + 0x50] 	       804	list.c	FUNCTION_35	FOR_2	IF_7
0x4001532	        0x488b3428	              mov rsi, qword [rax + rbp]	       804	list.c	FUNCTION_35	FOR_2	IF_7
0x4001536	          0x4885f6	                           test rsi, rsi	       804	list.c	FUNCTION_35	FOR_2	IF_7
0x4001539	            0x740a	                            je 0x4001545	       804	list.c	FUNCTION_35	FOR_2	IF_7
0x400153b	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       805	list.c	FUNCTION_35	FOR_2	CALL_9
0x4001540	      0xe800000000	                          call 0x4001545	       805	list.c	FUNCTION_35	FOR_2	CALL_9
0x4001545	      0xe800000000	                          call 0x400154a	       806	list.c	FUNCTION_35	FOR_2	CALL_10
0x400154a	          0x83c301	                              add ebx, 1	       796	list.c	FUNCTION_35	FOR_2
0x400154d	        0x3b5c2440	            cmp ebx, dword [rsp + 0x40] 	       796	list.c	FUNCTION_35	FOR_2
0x4001551	            0x7cbd	                            jl 0x4001510	       796	list.c	FUNCTION_35	FOR_2
0x4001553	      0xbb01000000	                              mov ebx, 1	       809	list.c	FUNCTION_35
0x4001558	      0x488b6c2450	            mov rbp, qword [rsp + 0x50] 	       838	list.c	FUNCTION_36	IF_2
0x400155d	          0x4885ed	                           test rbp, rbp	       838	list.c	FUNCTION_36	IF_2
0x4001560	            0x7430	                            je 0x4001592	       838	list.c	FUNCTION_36	IF_2
0x4001562	        0x8b442440	            mov eax, dword [rsp + 0x40] 	       841	list.c	FUNCTION_36	IF_2	FOR_1
0x4001566	          0x4531e4	                          xor r12d, r12d	       841	list.c	FUNCTION_36	IF_2	FOR_1
0x4001569	            0x85c0	                           test eax, eax	       841	list.c	FUNCTION_36	IF_2	FOR_1
0x400156b	            0x7e1b	                           jle 0x4001588	       841	list.c	FUNCTION_36	IF_2	FOR_1
0x400156d	           0xf1f00	                         nop dword [rax]	       841	list.c	FUNCTION_36	IF_2	FOR_1
0x4001570	        0x488b7d08	                mov rdi, qword [rbp + 8]	       843	list.c	FUNCTION_36	IF_2	FOR_1	CALL_3
0x4001574	        0x4183c401	                             add r12d, 1	       841	list.c	FUNCTION_36	IF_2	FOR_1
0x4001578	        0x4883c510	                           add rbp, 0x10	       844	list.c	FUNCTION_36	IF_2	FOR_1
0x400157c	      0xe800000000	                          call 0x4001581	       843	list.c	FUNCTION_36	IF_2	FOR_1	CALL_3
0x4001581	      0x4439642440	           cmp dword [rsp + 0x40], r12d 	       841	list.c	FUNCTION_36	IF_2	FOR_1
0x4001586	            0x7fe8	                            jg 0x4001570	       841	list.c	FUNCTION_36	IF_2	FOR_1
0x4001588	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       846	list.c	FUNCTION_36	IF_2	CALL_4
0x400158d	      0xe800000000	                          call 0x4001592	       846	list.c	FUNCTION_36	IF_2	CALL_4
0x4001592	    0x488b8c24a800	            mov rcx, qword [rsp + 0xa8] 	       850	list.c	FUNCTION_36
0x400159a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       850	list.c	FUNCTION_36
0x40015a3	            0x89d8	                            mov eax, ebx	       850	list.c	FUNCTION_36
0x40015a5	            0x751d	                           jne 0x40015c4	       850	list.c	FUNCTION_36
0x40015a7	    0x4881c4b80000	                           add rsp, 0xb8	       850	list.c	FUNCTION_36
0x40015ae	              0x5b	                                 pop rbx	       850	list.c	FUNCTION_36
0x40015af	              0x5d	                                 pop rbp	       850	list.c	FUNCTION_36
0x40015b0	            0x415c	                                 pop r12	       850	list.c	FUNCTION_36
0x40015b2	            0x415d	                                 pop r13	       850	list.c	FUNCTION_36
0x40015b4	            0x415e	                                 pop r14	       850	list.c	FUNCTION_36
0x40015b6	            0x415f	                                 pop r15	       850	list.c	FUNCTION_36
0x40015b8	              0xc3	                                     ret	       850	list.c	FUNCTION_36
0x40015b9	     0xf1f80000000	                         nop dword [rax]	       850	list.c	FUNCTION_36
0x40015c0	            0x31db	                            xor ebx, ebx	       766	list.c	FUNCTION_35	FOR_1	IF_1
0x40015c2	            0xeb94	                           jmp 0x4001558	       766	list.c	FUNCTION_35	FOR_1	IF_1
0x40015c4	      0xe800000000	                          call 0x40015c9	       850	list.c	FUNCTION_36
init_static_list	functions,0:WHILE,0:ELSE,2:FOR,1:DO,0:IF,2:CALL,1:SWITCH,0	46
0x40019e0	          0x4889fa	                            mov rdx, rdi	       959	list.c	FUNCTION_39
0x40019e3	    0x48c787880100	              mov qword [rdi + 0x188], 0	        90	string3.h	FUNCTION_43	CALL_6
0x40019ee	        0x488d7f08	                      lea rdi, [rdi + 8]	        90	string3.h	FUNCTION_43	CALL_6
0x40019f2	          0x4889d1	                            mov rcx, rdx	        90	string3.h	FUNCTION_43	CALL_6
0x40019f5	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_43	CALL_6
0x40019f7	        0x488d7270	                   lea rsi, [rdx + 0x70]	       981	list.c	FUNCTION_39	FOR_1	ELSE_2
0x40019fb	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_43	CALL_6
0x40019ff	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_43	CALL_6
0x4001a02	    0x81c190010000	                          add ecx, 0x190	        90	string3.h	FUNCTION_43	CALL_6
0x4001a08	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_43	CALL_6
0x4001a0b	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_43	CALL_6
0x4001a0e	        0x488d4250	                   lea rax, [rdx + 0x50]	       964	list.c	FUNCTION_39
0x4001a12	        0x48897250	             mov qword [rdx + 0x50], rsi	       981	list.c	FUNCTION_39	FOR_1	ELSE_2
0x4001a16	    0x4889b2980000	             mov qword [rdx + 0x98], rsi	       977	list.c	FUNCTION_39	FOR_1	ELSE_1
0x4001a1d	    0x488db2b00000	                   lea rsi, [rdx + 0xb0]	       981	list.c	FUNCTION_39	FOR_1	ELSE_2
0x4001a24	    0x488d8a700100	                  lea rcx, [rdx + 0x170]	       965	list.c	FUNCTION_39
0x4001a2b	    0xc742389f8601	        mov dword [rdx + 0x38], 0x1869f 	       966	list.c	FUNCTION_39
0x4001a32	          0x488902	                    mov qword [rdx], rax	       964	list.c	FUNCTION_39
0x4001a35	        0x48894278	             mov qword [rdx + 0x78], rax	       977	list.c	FUNCTION_39	FOR_1	ELSE_1
0x4001a39	    0x488d82900000	                   lea rax, [rdx + 0x90]	       981	list.c	FUNCTION_39	FOR_1	ELSE_2
0x4001a40	    0x4889b2900000	             mov qword [rdx + 0x90], rsi	       981	list.c	FUNCTION_39	FOR_1	ELSE_2
0x4001a47	    0x4889b2d80000	             mov qword [rdx + 0xd8], rsi	       977	list.c	FUNCTION_39	FOR_1	ELSE_1
0x4001a4e	    0x488db2f00000	                   lea rsi, [rdx + 0xf0]	       981	list.c	FUNCTION_39	FOR_1	ELSE_2
0x4001a55	        0x48894270	             mov qword [rdx + 0x70], rax	       981	list.c	FUNCTION_39	FOR_1	ELSE_2
0x4001a59	    0x488982b80000	             mov qword [rdx + 0xb8], rax	       977	list.c	FUNCTION_39	FOR_1	ELSE_1
0x4001a60	    0x488d82d00000	                   lea rax, [rdx + 0xd0]	       981	list.c	FUNCTION_39	FOR_1	ELSE_2
0x4001a67	    0x4889b2d00000	             mov qword [rdx + 0xd0], rsi	       981	list.c	FUNCTION_39	FOR_1	ELSE_2
0x4001a6e	    0x4889b2180100	            mov qword [rdx + 0x118], rsi	       977	list.c	FUNCTION_39	FOR_1	ELSE_1
0x4001a75	    0x488db2300100	                  lea rsi, [rdx + 0x130]	       981	list.c	FUNCTION_39	FOR_1	ELSE_2
0x4001a7c	    0x488982b00000	             mov qword [rdx + 0xb0], rax	       981	list.c	FUNCTION_39	FOR_1	ELSE_2
0x4001a83	    0x488982f80000	             mov qword [rdx + 0xf8], rax	       977	list.c	FUNCTION_39	FOR_1	ELSE_1
0x4001a8a	    0x488d82100100	                  lea rax, [rdx + 0x110]	       981	list.c	FUNCTION_39	FOR_1	ELSE_2
0x4001a91	        0x48894a08	                mov qword [rdx + 8], rcx	       965	list.c	FUNCTION_39
0x4001a95	        0xc6424802	                mov byte [rdx + 0x48], 2	       967	list.c	FUNCTION_39
0x4001a99	    0x488982f00000	             mov qword [rdx + 0xf0], rax	       981	list.c	FUNCTION_39	FOR_1	ELSE_2
0x4001aa0	    0x488982380100	            mov qword [rdx + 0x138], rax	       977	list.c	FUNCTION_39	FOR_1	ELSE_1
0x4001aa7	    0x488d82500100	                  lea rax, [rdx + 0x150]	       981	list.c	FUNCTION_39	FOR_1	ELSE_2
0x4001aae	    0xc7423c0a0000	             mov dword [rdx + 0x3c], 0xa	       968	list.c	FUNCTION_39
0x4001ab5	    0x48c742580000	               mov qword [rdx + 0x58], 0	       975	list.c	FUNCTION_39	FOR_1	IF_1
0x4001abd	    0x4889b2100100	            mov qword [rdx + 0x110], rsi	       981	list.c	FUNCTION_39	FOR_1	ELSE_2
0x4001ac4	    0x488982300100	            mov qword [rdx + 0x130], rax	       981	list.c	FUNCTION_39	FOR_1	ELSE_2
0x4001acb	    0x4889b2580100	            mov qword [rdx + 0x158], rsi	       977	list.c	FUNCTION_39	FOR_1	ELSE_1
0x4001ad2	    0x48898a500100	            mov qword [rdx + 0x150], rcx	       981	list.c	FUNCTION_39	FOR_1	ELSE_2
0x4001ad9	    0x488982780100	            mov qword [rdx + 0x178], rax	       977	list.c	FUNCTION_39	FOR_1	ELSE_1
0x4001ae0	    0x48c782700100	              mov qword [rdx + 0x170], 0	       979	list.c	FUNCTION_39	FOR_1	IF_2
0x4001aeb	              0xc3	                                     ret	       979	list.c	FUNCTION_39	FOR_1	IF_2
list2string	functions,0:WHILE,0:ELSE,0:FOR,0:DO,0:IF,2:CALL,6:SWITCH,0	52
0x40015d0	            0x4154	                                push r12	       717	list.c	ELSE_2	FUNCTION_34
0x40015d2	              0x55	                                push rbp	       717	list.c	ELSE_2	FUNCTION_34
0x40015d3	              0x53	                                push rbx	       717	list.c	ELSE_2	FUNCTION_34
0x40015d4	        0x4883ec20	                           sub rsp, 0x20	       717	list.c	ELSE_2	FUNCTION_34
0x40015d8	    0x64488b042528	                mov rax, qword fs:[0x28]	       717	list.c	ELSE_2	FUNCTION_34
0x40015e1	      0x4889442418	             mov qword [rsp + 0x18], rax	       717	list.c	ELSE_2	FUNCTION_34
0x40015e6	            0x31c0	                            xor eax, eax	       717	list.c	ELSE_2	FUNCTION_34
0x40015e8	      0x48837f0800	                  cmp qword [rdi + 8], 0	       720	list.c	ELSE_2	FUNCTION_34	IF_1
0x40015ed	     0xf848d000000	                            je 0x4001680	       720	list.c	ELSE_2	FUNCTION_34	IF_1
0x40015f3	          0x4889fb	                            mov rbx, rdi	       720	list.c	ELSE_2	FUNCTION_34	IF_1
0x40015f6	          0x4189f4	                           mov r12d, esi	       720	list.c	ELSE_2	FUNCTION_34	IF_1
0x40015f9	            0x89d5	                            mov ebp, edx	       720	list.c	ELSE_2	FUNCTION_34	IF_1
0x40015fb	      0xbe01000000	                              mov esi, 1	       722	list.c	ELSE_2	FUNCTION_34	CALL_1
0x4001600	      0xba50000000	                           mov edx, 0x50	       722	list.c	ELSE_2	FUNCTION_34	CALL_1
0x4001605	          0x4889e7	                            mov rdi, rsp	       722	list.c	ELSE_2	FUNCTION_34	CALL_1
0x4001608	      0xe800000000	                          call 0x400160d	       722	list.c	ELSE_2	FUNCTION_34	CALL_1
0x400160d	      0xbe5b000000	                           mov esi, 0x5b	       723	list.c	ELSE_2	FUNCTION_34	CALL_2
0x4001612	          0x4889e7	                            mov rdi, rsp	       723	list.c	ELSE_2	FUNCTION_34	CALL_2
0x4001615	      0xe800000000	                          call 0x400161a	       723	list.c	ELSE_2	FUNCTION_34	CALL_2
0x400161a	        0x488b7308	                mov rsi, qword [rbx + 8]	       724	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_3
0x400161e	            0x31c9	                            xor ecx, ecx	       724	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_3
0x4001620	          0x4589e1	                           mov r9d, r12d	       724	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_3
0x4001623	          0x4189e8	                            mov r8d, ebp	       724	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_3
0x4001626	      0xba00000000	                              mov edx, 0	       724	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_3
0x400162b	          0x4889e7	                            mov rdi, rsp	       724	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_3
0x400162e	      0xe800000000	                          call 0x4001633	       724	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_3
0x4001633	            0x85c0	                           test eax, eax	       724	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_3
0x4001635	            0x7439	                            je 0x4001670	       724	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_3
0x4001637	      0xbe5d000000	                           mov esi, 0x5d	       730	list.c	ELSE_2	FUNCTION_34	CALL_5
0x400163c	          0x4889e7	                            mov rdi, rsp	       730	list.c	ELSE_2	FUNCTION_34	CALL_5
0x400163f	      0xe800000000	                          call 0x4001644	       730	list.c	ELSE_2	FUNCTION_34	CALL_5
0x4001644	            0x31f6	                            xor esi, esi	       731	list.c	ELSE_2	FUNCTION_34	CALL_6
0x4001646	          0x4889e7	                            mov rdi, rsp	       731	list.c	ELSE_2	FUNCTION_34	CALL_6
0x4001649	      0xe800000000	                          call 0x400164e	       731	list.c	ELSE_2	FUNCTION_34	CALL_6
0x400164e	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       732	list.c	ELSE_2	FUNCTION_34
0x4001653	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       733	list.c	ELSE_2	FUNCTION_34
0x4001658	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       733	list.c	ELSE_2	FUNCTION_34
0x4001661	            0x7521	                           jne 0x4001684	       733	list.c	ELSE_2	FUNCTION_34
0x4001663	        0x4883c420	                           add rsp, 0x20	       733	list.c	ELSE_2	FUNCTION_34
0x4001667	              0x5b	                                 pop rbx	       733	list.c	ELSE_2	FUNCTION_34
0x4001668	              0x5d	                                 pop rbp	       733	list.c	ELSE_2	FUNCTION_34
0x4001669	            0x415c	                                 pop r12	       733	list.c	ELSE_2	FUNCTION_34
0x400166b	              0xc3	                                     ret	       733	list.c	ELSE_2	FUNCTION_34
0x400166c	         0xf1f4000	                         nop dword [rax]	       733	list.c	ELSE_2	FUNCTION_34
0x4001670	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       727	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_4
0x4001675	      0xe800000000	                          call 0x400167a	       727	list.c	ELSE_2	FUNCTION_34	IF_2	CALL_4
0x400167a	            0x31c0	                            xor eax, eax	       728	list.c	ELSE_2	FUNCTION_34	IF_2
0x400167c	            0xebd5	                           jmp 0x4001653	       728	list.c	ELSE_2	FUNCTION_34	IF_2
0x400167e	            0x6690	                                     nop	       728	list.c	ELSE_2	FUNCTION_34	IF_2
0x4001680	            0x31c0	                            xor eax, eax	       721	list.c	ELSE_2	FUNCTION_34	IF_1
0x4001682	            0xebcf	                           jmp 0x4001653	       721	list.c	ELSE_2	FUNCTION_34	IF_1
0x4001684	      0xe800000000	                          call 0x4001689	       733	list.c	ELSE_2	FUNCTION_34
listitem_remove	functions,0:WHILE,0:ELSE,0:FOR,0:DO,0:IF,0:CALL,2:SWITCH,0	44
0x40003d0	          0x4885f6	                           test rsi, rsi	       692	list.c	FUNCTION_33	FOR_1
0x40003d3	              0x53	                                push rbx	       238	list.c	FUNCTION_15
0x40003d4	          0x4889f3	                            mov rbx, rsi	       238	list.c	FUNCTION_15
0x40003d7	            0x746a	                            je 0x4000443	       692	list.c	FUNCTION_33	FOR_1
0x40003d9	        0x488b4710	            mov rax, qword [rdi + 0x10] 	        61	list.c	FUNCTION_3	FOR_1
0x40003dd	        0x836f3c01	               sub dword [rdi + 0x3c], 1	       694	list.c	FUNCTION_33	FOR_1
0x40003e1	          0x488b16	                    mov rdx, qword [rsi]	       694	list.c	FUNCTION_33	FOR_1
0x40003e4	          0x4885c0	                           test rax, rax	        61	list.c	FUNCTION_3	FOR_1
0x40003e7	            0x7510	                           jne 0x40003f9	        61	list.c	FUNCTION_3	FOR_1
0x40003e9	            0xeb25	                           jmp 0x4000410	        61	list.c	FUNCTION_3	FOR_1
0x40003eb	       0xf1f440000	                   nop dword [rax + rax]	        61	list.c	FUNCTION_3	FOR_1
0x40003f0	        0x488b4008	                mov rax, qword [rax + 8]	        61	list.c	FUNCTION_3	FOR_1
0x40003f4	          0x4885c0	                           test rax, rax	        61	list.c	FUNCTION_3	FOR_1
0x40003f7	            0x7417	                            je 0x4000410	        61	list.c	FUNCTION_3	FOR_1
0x40003f9	          0x483b18	                    cmp rbx, qword [rax]	        62	list.c	FUNCTION_3	FOR_1	IF_1
0x40003fc	            0x75f2	                           jne 0x40003f0	        62	list.c	FUNCTION_3	FOR_1	IF_1
0x40003fe	          0x488910	                    mov qword [rax], rdx	        63	list.c	FUNCTION_3	FOR_1	IF_1
0x4000401	        0x488b4008	                mov rax, qword [rax + 8]	        61	list.c	FUNCTION_3	FOR_1
0x4000405	          0x4885c0	                           test rax, rax	        61	list.c	FUNCTION_3	FOR_1
0x4000408	            0x75ef	                           jne 0x40003f9	        61	list.c	FUNCTION_3	FOR_1
0x400040a	    0x660f1f440000	                    nop word [rax + rax]	        61	list.c	FUNCTION_3	FOR_1
0x4000410	          0x4885d2	                           test rdx, rdx	       700	list.c	FUNCTION_33	IF_2
0x4000413	        0x488b4308	                mov rax, qword [rbx + 8]	       701	list.c	FUNCTION_33	IF_2
0x4000417	            0x743b	                            je 0x4000454	       700	list.c	FUNCTION_33	IF_2
0x4000419	        0x48894208	                mov qword [rdx + 8], rax	       703	list.c	FUNCTION_33	ELSE_1
0x400041d	        0x488b4308	                mov rax, qword [rbx + 8]	       703	list.c	FUNCTION_33	ELSE_1
0x4000421	          0x4885c0	                           test rax, rax	       704	list.c	FUNCTION_33	IF_3
0x4000424	            0x7437	                            je 0x400045d	       704	list.c	FUNCTION_33	IF_3
0x4000426	          0x488910	                    mov qword [rax], rdx	       707	list.c	FUNCTION_33	ELSE_2
0x4000429	    0x48c747180000	               mov qword [rdi + 0x18], 0	       708	list.c	FUNCTION_33	ELSE_2
0x4000431	        0x488d7b10	                   lea rdi, [rbx + 0x10]	       229	list.c	FUNCTION_14	CALL_1
0x4000435	      0xe800000000	                          call 0x400043a	       229	list.c	FUNCTION_14	CALL_1
0x400043a	          0x4889df	                            mov rdi, rbx	       230	list.c	FUNCTION_14	CALL_2
0x400043d	              0x5b	                                 pop rbx	       241	list.c	FUNCTION_15
0x400043e	      0xe900000000	                           jmp 0x4000443	       230	list.c	FUNCTION_14	CALL_2
0x4000443	    0x488b14250000	                      mov rdx, qword [0]	       230	list.c	FUNCTION_14	CALL_2
0x400044b	        0x488b4308	                mov rax, qword [rbx + 8]	       701	list.c	FUNCTION_33	IF_2
0x400044f	          0x4885d2	                           test rdx, rdx	       700	list.c	FUNCTION_33	IF_2
0x4000452	            0x75c5	                           jne 0x4000419	       700	list.c	FUNCTION_33	IF_2
0x4000454	          0x4885c0	                           test rax, rax	       704	list.c	FUNCTION_33	IF_3
0x4000457	        0x48894708	                mov qword [rdi + 8], rax	       701	list.c	FUNCTION_33	IF_2
0x400045b	            0x75c9	                           jne 0x4000426	       704	list.c	FUNCTION_33	IF_3
0x400045d	          0x488917	                    mov qword [rdi], rdx	       705	list.c	FUNCTION_33	IF_3
0x4000460	            0xebc7	                           jmp 0x4000429	       705	list.c	FUNCTION_33	IF_3
list_append_list	functions,0:WHILE,0:ELSE,0:FOR,0:DO,0:IF,1:CALL,2:SWITCH,0	37
0x40009d0	              0x55	                                push rbp	       485	list.c	FUNCTION_25
0x40009d1	              0x53	                                push rbx	       485	list.c	FUNCTION_25
0x40009d2	          0x4889fb	                            mov rbx, rdi	       485	list.c	FUNCTION_25
0x40009d5	      0xbf20000000	                           mov edi, 0x20	       220	list.c	FUNCTION_13	CALL_1
0x40009da	          0x4889f5	                            mov rbp, rsi	       485	list.c	FUNCTION_25
0x40009dd	        0x4883ec08	                              sub rsp, 8	       485	list.c	FUNCTION_25
0x40009e1	      0xe800000000	                          call 0x40009e6	       220	list.c	FUNCTION_13	CALL_1
0x40009e6	          0x4885c0	                           test rax, rax	       488	list.c	FUNCTION_25	IF_1
0x40009e9	            0x745d	                            je 0x4000a48	       488	list.c	FUNCTION_25	IF_1
0x40009eb	        0xc6401400	                mov byte [rax + 0x14], 0	       491	list.c	FUNCTION_25
0x40009ef	        0x48896818	             mov qword [rax + 0x18], rbp	       492	list.c	FUNCTION_25
0x40009f3	        0x488b5308	                mov rdx, qword [rbx + 8]	       425	list.c	FUNCTION_22	IF_1
0x40009f7	    0xc74010050000	               mov dword [rax + 0x10], 5	       490	list.c	FUNCTION_25
0x40009fe	          0x4885d2	                           test rdx, rdx	       425	list.c	FUNCTION_22	IF_1
0x4000a01	            0x742d	                            je 0x4000a30	       425	list.c	FUNCTION_22	IF_1
0x4000a03	          0x488902	                    mov qword [rdx], rax	       434	list.c	FUNCTION_22	ELSE_1
0x4000a06	        0x48895008	                mov qword [rax + 8], rdx	       435	list.c	FUNCTION_22	ELSE_1
0x4000a0a	        0x48894308	                mov qword [rbx + 8], rax	       436	list.c	FUNCTION_22	ELSE_1
0x4000a0e	        0x83433c01	               add dword [rbx + 0x3c], 1	       438	list.c	FUNCTION_22
0x4000a12	    0x48c700000000	                      mov qword [rax], 0	       439	list.c	FUNCTION_22
0x4000a19	      0xb801000000	                              mov eax, 1	       495	list.c	FUNCTION_25
0x4000a1e	        0x83453801	               add dword [rbp + 0x38], 1	       494	list.c	FUNCTION_25
0x4000a22	        0x4883c408	                              add rsp, 8	       496	list.c	FUNCTION_25
0x4000a26	              0x5b	                                 pop rbx	       496	list.c	FUNCTION_25
0x4000a27	              0x5d	                                 pop rbp	       496	list.c	FUNCTION_25
0x4000a28	              0xc3	                                     ret	       496	list.c	FUNCTION_25
0x4000a29	     0xf1f80000000	                         nop dword [rax]	       496	list.c	FUNCTION_25
0x4000a30	          0x488903	                    mov qword [rbx], rax	       428	list.c	FUNCTION_22	IF_1
0x4000a33	        0x48894308	                mov qword [rbx + 8], rax	       429	list.c	FUNCTION_22	IF_1
0x4000a37	    0x48c740080000	                  mov qword [rax + 8], 0	       430	list.c	FUNCTION_22	IF_1
0x4000a3f	            0xebcd	                           jmp 0x4000a0e	       430	list.c	FUNCTION_22	IF_1
0x4000a41	     0xf1f80000000	                         nop dword [rax]	       430	list.c	FUNCTION_22	IF_1
0x4000a48	        0x4883c408	                              add rsp, 8	       496	list.c	FUNCTION_25
0x4000a4c	            0x31c0	                            xor eax, eax	       489	list.c	FUNCTION_25	IF_1
0x4000a4e	              0x5b	                                 pop rbx	       496	list.c	FUNCTION_25
0x4000a4f	              0x5d	                                 pop rbp	       496	list.c	FUNCTION_25
0x4000a50	              0xc3	                                     ret	       496	list.c	FUNCTION_25
list_append_string	functions,0:WHILE,0:ELSE,1:FOR,0:DO,0:IF,3:CALL,4:SWITCH,0	60
0x4000a60	            0x4155	                                push r13	       505	list.c	FUNCTION_26
0x4000a62	            0x4154	                                push r12	       505	list.c	FUNCTION_26
0x4000a64	          0x4189d5	                           mov r13d, edx	       505	list.c	FUNCTION_26
0x4000a67	              0x55	                                push rbp	       505	list.c	FUNCTION_26
0x4000a68	              0x53	                                push rbx	       505	list.c	FUNCTION_26
0x4000a69	          0x4889fd	                            mov rbp, rdi	       505	list.c	FUNCTION_26
0x4000a6c	      0xbf20000000	                           mov edi, 0x20	       220	list.c	FUNCTION_13	CALL_1
0x4000a71	          0x4989f4	                            mov r12, rsi	       505	list.c	FUNCTION_26
0x4000a74	        0x4883ec08	                              sub rsp, 8	       505	list.c	FUNCTION_26
0x4000a78	      0xe800000000	                          call 0x4000a7d	       220	list.c	FUNCTION_13	CALL_1
0x4000a7d	          0x4885c0	                           test rax, rax	       508	list.c	FUNCTION_26	IF_1
0x4000a80	     0xf8482000000	                            je 0x4000b08	       508	list.c	FUNCTION_26	IF_1
0x4000a86	          0x4889c3	                            mov rbx, rax	       508	list.c	FUNCTION_26	IF_1
0x4000a89	        0x488b4508	                mov rax, qword [rbp + 8]	       425	list.c	FUNCTION_22	IF_1
0x4000a8d	          0x4885c0	                           test rax, rax	       425	list.c	FUNCTION_22	IF_1
0x4000a90	            0x745e	                            je 0x4000af0	       425	list.c	FUNCTION_22	IF_1
0x4000a92	          0x488918	                    mov qword [rax], rbx	       434	list.c	FUNCTION_22	ELSE_1
0x4000a95	        0x48894308	                mov qword [rbx + 8], rax	       435	list.c	FUNCTION_22	ELSE_1
0x4000a99	        0x48895d08	                mov qword [rbp + 8], rbx	       436	list.c	FUNCTION_22	ELSE_1
0x4000a9d	        0x83453c01	               add dword [rbp + 0x3c], 1	       438	list.c	FUNCTION_22
0x4000aa1	          0x4d85e4	                           test r12, r12	       513	list.c	FUNCTION_26	IF_2
0x4000aa4	    0x48c703000000	                      mov qword [rbx], 0	       439	list.c	FUNCTION_22
0x4000aab	    0xc74310020000	               mov dword [rbx + 0x10], 2	       511	list.c	FUNCTION_26
0x4000ab2	        0xc6431400	                mov byte [rbx + 0x14], 0	       512	list.c	FUNCTION_26
0x4000ab6	            0x7460	                            je 0x4000b18	       513	list.c	FUNCTION_26	IF_2
0x4000ab8	          0x4585ed	                         test r13d, r13d	       516	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x4000abb	            0x7823	                            js 0x4000ae0	       516	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x4000abd	          0x4489ee	                           mov esi, r13d	       516	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x4000ac0	          0x4c89e7	                            mov rdi, r12	       516	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x4000ac3	      0xe800000000	                          call 0x4000ac8	       516	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x4000ac8	          0x4885c0	                           test rax, rax	       509	list.c	FUNCTION_26	IF_1
0x4000acb	        0x48894318	             mov qword [rbx + 0x18], rax	       515	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_3
0x4000acf	           0xf95c0	                                setne al	       509	list.c	FUNCTION_26	IF_1
0x4000ad2	           0xfb6c0	                           movzx eax, al	       509	list.c	FUNCTION_26	IF_1
0x4000ad5	        0x4883c408	                              add rsp, 8	       519	list.c	FUNCTION_26
0x4000ad9	              0x5b	                                 pop rbx	       519	list.c	FUNCTION_26
0x4000ada	              0x5d	                                 pop rbp	       519	list.c	FUNCTION_26
0x4000adb	            0x415c	                                 pop r12	       519	list.c	FUNCTION_26
0x4000add	            0x415d	                                 pop r13	       519	list.c	FUNCTION_26
0x4000adf	              0xc3	                                     ret	       519	list.c	FUNCTION_26
0x4000ae0	          0x4c89e7	                            mov rdi, r12	       516	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x4000ae3	      0xe800000000	                          call 0x4000ae8	       516	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x4000ae8	            0xebde	                           jmp 0x4000ac8	       516	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x4000aea	    0x660f1f440000	                    nop word [rax + rax]	       516	list.c	FUNCTION_26	ELSE_1	IF_3	CALL_4
0x4000af0	        0x48895d00	                    mov qword [rbp], rbx	       428	list.c	FUNCTION_22	IF_1
0x4000af4	        0x48895d08	                mov qword [rbp + 8], rbx	       429	list.c	FUNCTION_22	IF_1
0x4000af8	    0x48c743080000	                  mov qword [rbx + 8], 0	       430	list.c	FUNCTION_22	IF_1
0x4000b00	            0xeb9b	                           jmp 0x4000a9d	       430	list.c	FUNCTION_22	IF_1
0x4000b02	    0x660f1f440000	                    nop word [rax + rax]	       430	list.c	FUNCTION_22	IF_1
0x4000b08	        0x4883c408	                              add rsp, 8	       519	list.c	FUNCTION_26
0x4000b0c	            0x31c0	                            xor eax, eax	       509	list.c	FUNCTION_26	IF_1
0x4000b0e	              0x5b	                                 pop rbx	       519	list.c	FUNCTION_26
0x4000b0f	              0x5d	                                 pop rbp	       519	list.c	FUNCTION_26
0x4000b10	            0x415c	                                 pop r12	       519	list.c	FUNCTION_26
0x4000b12	            0x415d	                                 pop r13	       519	list.c	FUNCTION_26
0x4000b14	              0xc3	                                     ret	       519	list.c	FUNCTION_26
0x4000b15	           0xf1f00	                         nop dword [rax]	       519	list.c	FUNCTION_26
0x4000b18	    0x48c743180000	               mov qword [rbx + 0x18], 0	       514	list.c	FUNCTION_26	IF_2
0x4000b20	      0xb801000000	                              mov eax, 1	       518	list.c	FUNCTION_26
0x4000b25	            0xebae	                           jmp 0x4000ad5	       518	list.c	FUNCTION_26
list_append_number	functions,0:WHILE,0:ELSE,0:FOR,0:DO,0:IF,1:CALL,2:SWITCH,0	36
0x4000b30	              0x55	                                push rbp	       527	list.c	FUNCTION_27
0x4000b31	              0x53	                                push rbx	       527	list.c	FUNCTION_27
0x4000b32	          0x4889fb	                            mov rbx, rdi	       527	list.c	FUNCTION_27
0x4000b35	      0xbf20000000	                           mov edi, 0x20	       220	list.c	FUNCTION_13	CALL_1
0x4000b3a	          0x4889f5	                            mov rbp, rsi	       527	list.c	FUNCTION_27
0x4000b3d	        0x4883ec08	                              sub rsp, 8	       527	list.c	FUNCTION_27
0x4000b41	      0xe800000000	                          call 0x4000b46	       220	list.c	FUNCTION_13	CALL_1
0x4000b46	          0x4885c0	                           test rax, rax	       531	list.c	FUNCTION_27	IF_1
0x4000b49	            0x7455	                            je 0x4000ba0	       531	list.c	FUNCTION_27	IF_1
0x4000b4b	        0xc6401400	                mov byte [rax + 0x14], 0	       534	list.c	FUNCTION_27
0x4000b4f	        0x48896818	             mov qword [rax + 0x18], rbp	       535	list.c	FUNCTION_27
0x4000b53	        0x488b5308	                mov rdx, qword [rbx + 8]	       425	list.c	FUNCTION_22	IF_1
0x4000b57	    0xc74010010000	               mov dword [rax + 0x10], 1	       533	list.c	FUNCTION_27
0x4000b5e	          0x4885d2	                           test rdx, rdx	       425	list.c	FUNCTION_22	IF_1
0x4000b61	            0x7425	                            je 0x4000b88	       425	list.c	FUNCTION_22	IF_1
0x4000b63	          0x488902	                    mov qword [rdx], rax	       434	list.c	FUNCTION_22	ELSE_1
0x4000b66	        0x48895008	                mov qword [rax + 8], rdx	       435	list.c	FUNCTION_22	ELSE_1
0x4000b6a	        0x48894308	                mov qword [rbx + 8], rax	       436	list.c	FUNCTION_22	ELSE_1
0x4000b6e	        0x83433c01	               add dword [rbx + 0x3c], 1	       438	list.c	FUNCTION_22
0x4000b72	    0x48c700000000	                      mov qword [rax], 0	       439	list.c	FUNCTION_22
0x4000b79	        0x4883c408	                              add rsp, 8	       538	list.c	FUNCTION_27
0x4000b7d	      0xb801000000	                              mov eax, 1	       537	list.c	FUNCTION_27
0x4000b82	              0x5b	                                 pop rbx	       538	list.c	FUNCTION_27
0x4000b83	              0x5d	                                 pop rbp	       538	list.c	FUNCTION_27
0x4000b84	              0xc3	                                     ret	       538	list.c	FUNCTION_27
0x4000b85	           0xf1f00	                         nop dword [rax]	       538	list.c	FUNCTION_27
0x4000b88	          0x488903	                    mov qword [rbx], rax	       428	list.c	FUNCTION_22	IF_1
0x4000b8b	        0x48894308	                mov qword [rbx + 8], rax	       429	list.c	FUNCTION_22	IF_1
0x4000b8f	    0x48c740080000	                  mov qword [rax + 8], 0	       430	list.c	FUNCTION_22	IF_1
0x4000b97	            0xebd5	                           jmp 0x4000b6e	       430	list.c	FUNCTION_22	IF_1
0x4000b99	     0xf1f80000000	                         nop dword [rax]	       430	list.c	FUNCTION_22	IF_1
0x4000ba0	        0x4883c408	                              add rsp, 8	       538	list.c	FUNCTION_27
0x4000ba4	            0x31c0	                            xor eax, eax	       532	list.c	FUNCTION_27	IF_1
0x4000ba6	              0x5b	                                 pop rbx	       538	list.c	FUNCTION_27
0x4000ba7	              0x5d	                                 pop rbp	       538	list.c	FUNCTION_27
0x4000ba8	              0xc3	                                     ret	       538	list.c	FUNCTION_27
rettv_list_alloc	functions,0:WHILE,0:ELSE,0:FOR,0:DO,0:IF,1:CALL,2:SWITCH,0	24
0x4000110	              0x53	                                push rbx	        94	list.c	FUNCTION_5
0x4000111	          0x4889fb	                            mov rbx, rdi	        94	list.c	FUNCTION_5
0x4000114	      0xbf50000000	                           mov edi, 0x50	        75	list.c	FUNCTION_4	CALL_1
0x4000119	      0xe800000000	                          call 0x400011e	        75	list.c	FUNCTION_4	CALL_1
0x400011e	          0x4885c0	                           test rax, rax	        76	list.c	FUNCTION_4	IF_1
0x4000121	            0x743d	                            je 0x4000160	        76	list.c	FUNCTION_4	IF_1
0x4000123	    0x488b15000000	            mov rdx, qword [0x0400012a] 	        79	list.c	FUNCTION_4	IF_1	IF_2
0x400012a	          0x4885d2	                           test rdx, rdx	        79	list.c	FUNCTION_4	IF_1	IF_2
0x400012d	            0x7404	                            je 0x4000133	        79	list.c	FUNCTION_4	IF_1	IF_2
0x400012f	        0x48894230	             mov qword [rdx + 0x30], rax	        80	list.c	FUNCTION_4	IF_1	IF_2
0x4000133	    0x48c740300000	               mov qword [rax + 0x30], 0	        81	list.c	FUNCTION_4	IF_1
0x400013b	        0x48895028	             mov qword [rax + 0x28], rdx	        82	list.c	FUNCTION_4	IF_1
0x400013f	        0x48894308	                mov qword [rbx + 8], rax	       112	list.c	FUNCTION_6
0x4000143	        0xc6430400	                   mov byte [rbx + 4], 0	       100	list.c	FUNCTION_5
0x4000147	    0xc70305000000	                      mov dword [rbx], 5	       111	list.c	FUNCTION_6
0x400014d	        0x83403801	               add dword [rax + 0x38], 1	       114	list.c	FUNCTION_6	IF_1
0x4000151	    0x488905000000	            mov qword [0x04000158], rax 	        83	list.c	FUNCTION_4	IF_1
0x4000158	      0xb801000000	                              mov eax, 1	       102	list.c	FUNCTION_5
0x400015d	              0x5b	                                 pop rbx	       103	list.c	FUNCTION_5
0x400015e	              0xc3	                                     ret	       103	list.c	FUNCTION_5
0x400015f	              0x90	                                     nop	       103	list.c	FUNCTION_5
0x4000160	            0x31c0	                            xor eax, eax	        98	list.c	FUNCTION_5	IF_1
0x4000162	              0x5b	                                 pop rbx	       103	list.c	FUNCTION_5
0x4000163	              0xc3	                                     ret	       103	list.c	FUNCTION_5
list_add_watch	functions,0:WHILE,0:ELSE,0:FOR,0:DO,0:IF,0:CALL,0:SWITCH,0	4
0x4000040	        0x488b4710	            mov rax, qword [rdi + 0x10] 	        27	list.c	FUNCTION_1
0x4000044	        0x48894608	                mov qword [rsi + 8], rax	        27	list.c	FUNCTION_1
0x4000048	        0x48897710	             mov qword [rdi + 0x10], rsi	        28	list.c	FUNCTION_1
0x400004c	              0xc3	                                     ret	        28	list.c	FUNCTION_1
list_append_tv	functions,0:WHILE,0:ELSE,0:FOR,0:DO,0:IF,1:CALL,3:SWITCH,0	32
0x40008d0	            0x4154	                                push r12	       448	list.c	FUNCTION_23
0x40008d2	              0x55	                                push rbp	       448	list.c	FUNCTION_23
0x40008d3	          0x4889fd	                            mov rbp, rdi	       448	list.c	FUNCTION_23
0x40008d6	              0x53	                                push rbx	       448	list.c	FUNCTION_23
0x40008d7	      0xbf20000000	                           mov edi, 0x20	       220	list.c	FUNCTION_13	CALL_1
0x40008dc	          0x4989f4	                            mov r12, rsi	       448	list.c	FUNCTION_23
0x40008df	      0xe800000000	                          call 0x40008e4	       220	list.c	FUNCTION_13	CALL_1
0x40008e4	          0x4889c3	                            mov rbx, rax	       220	list.c	FUNCTION_13	CALL_1
0x40008e7	            0x31c0	                            xor eax, eax	       220	list.c	FUNCTION_13	CALL_1
0x40008e9	          0x4885db	                           test rbx, rbx	       451	list.c	FUNCTION_23	IF_1
0x40008ec	            0x7430	                            je 0x400091e	       451	list.c	FUNCTION_23	IF_1
0x40008ee	        0x488d7310	                   lea rsi, [rbx + 0x10]	       453	list.c	FUNCTION_23	CALL_2
0x40008f2	          0x4c89e7	                            mov rdi, r12	       453	list.c	FUNCTION_23	CALL_2
0x40008f5	      0xe800000000	                          call 0x40008fa	       453	list.c	FUNCTION_23	CALL_2
0x40008fa	        0x488b4508	                mov rax, qword [rbp + 8]	       425	list.c	FUNCTION_22	IF_1
0x40008fe	          0x4885c0	                           test rax, rax	       425	list.c	FUNCTION_22	IF_1
0x4000901	            0x7425	                            je 0x4000928	       425	list.c	FUNCTION_22	IF_1
0x4000903	          0x488918	                    mov qword [rax], rbx	       434	list.c	FUNCTION_22	ELSE_1
0x4000906	        0x48894308	                mov qword [rbx + 8], rax	       435	list.c	FUNCTION_22	ELSE_1
0x400090a	        0x48895d08	                mov qword [rbp + 8], rbx	       436	list.c	FUNCTION_22	ELSE_1
0x400090e	        0x83453c01	               add dword [rbp + 0x3c], 1	       438	list.c	FUNCTION_22
0x4000912	      0xb801000000	                              mov eax, 1	       455	list.c	FUNCTION_23
0x4000917	    0x48c703000000	                      mov qword [rbx], 0	       439	list.c	FUNCTION_22
0x400091e	              0x5b	                                 pop rbx	       456	list.c	FUNCTION_23
0x400091f	              0x5d	                                 pop rbp	       456	list.c	FUNCTION_23
0x4000920	            0x415c	                                 pop r12	       456	list.c	FUNCTION_23
0x4000922	              0xc3	                                     ret	       456	list.c	FUNCTION_23
0x4000923	       0xf1f440000	                   nop dword [rax + rax]	       456	list.c	FUNCTION_23
0x4000928	        0x48895d00	                    mov qword [rbp], rbx	       428	list.c	FUNCTION_22	IF_1
0x400092c	        0x48895d08	                mov qword [rbp + 8], rbx	       429	list.c	FUNCTION_22	IF_1
0x4000930	    0x48c743080000	                  mov qword [rbx + 8], 0	       430	list.c	FUNCTION_22	IF_1
0x4000938	            0xebd4	                           jmp 0x400090e	       430	list.c	FUNCTION_22	IF_1
