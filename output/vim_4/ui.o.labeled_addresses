clip_x11_notify_cb	IF,0:DO,0:functions,0:FOR,0:CALL,0:SWITCH,0:WHILE,0:ELSE,0	1
0x4000040	            0xf3c3	                                     ret	      2508	ui.c	FUNCTION_70
clip_init	IF,1:DO,0:functions,0:FOR,1:CALL,0:SWITCH,0:WHILE,0:ELSE,0	20
0x4001590	      0xb800000000	                              mov eax, 0	       462	ui.c	FUNCTION_14	FOR_1	IF_1
0x4001595	            0x31d2	                            xor edx, edx	       460	ui.c	FUNCTION_14	FOR_1
0x4001597	    0x893d00000000	            mov dword [0x0400159d], edi 	       454	ui.c	FUNCTION_14	FOR_1
0x400159d	    0x483d00000000	                              cmp rax, 0	       462	ui.c	FUNCTION_14	FOR_1	IF_1
0x40015a3	    0xc70500000000	               mov dword [0x040015ad], 0	       455	ui.c	FUNCTION_14	FOR_1
0x40015ad	    0x48c705000000	               mov qword [0x040015b8], 0	       456	ui.c	FUNCTION_14	FOR_1
0x40015b8	    0xc70500000000	               mov dword [0x040015c2], 0	       457	ui.c	FUNCTION_14	FOR_1
0x40015c2	    0x48c705000000	               mov qword [0x040015cd], 0	       458	ui.c	FUNCTION_14	FOR_1
0x40015cd	    0xc70500000000	               mov dword [0x040015d7], 0	       459	ui.c	FUNCTION_14	FOR_1
0x40015d7	    0x668915000000	               mov word [0x040015de], dx	       460	ui.c	FUNCTION_14	FOR_1
0x40015de	            0x7443	                            je 0x4001623	       462	ui.c	FUNCTION_14	FOR_1	IF_1
0x40015e0	            0x31c0	                            xor eax, eax	       460	ui.c	FUNCTION_14	FOR_1
0x40015e2	    0x893d00000000	            mov dword [0x040015e8], edi 	       454	ui.c	FUNCTION_14	FOR_1
0x40015e8	    0xc70500000000	               mov dword [0x040015f2], 0	       455	ui.c	FUNCTION_14	FOR_1
0x40015f2	    0x48c705000000	               mov qword [0x040015fd], 0	       456	ui.c	FUNCTION_14	FOR_1
0x40015fd	    0xc70500000000	               mov dword [0x04001607], 0	       457	ui.c	FUNCTION_14	FOR_1
0x4001607	    0x48c705000000	               mov qword [0x04001612], 0	       458	ui.c	FUNCTION_14	FOR_1
0x4001612	    0xc70500000000	               mov dword [0x0400161c], 0	       459	ui.c	FUNCTION_14	FOR_1
0x400161c	    0x668905000000	               mov word [0x04001623], ax	       460	ui.c	FUNCTION_14	FOR_1
0x4001623	              0xc3	                                     ret	       460	ui.c	FUNCTION_14	FOR_1
clip_x11_lose_selection	IF,0:DO,0:functions,0:FOR,0:CALL,3:SWITCH,0:WHILE,0:ELSE,0	15
0x4004dd0	              0x55	                                push rbp	      2501	ui.c	FUNCTION_69
0x4004dd1	              0x53	                                push rbx	      2501	ui.c	FUNCTION_69
0x4004dd2	          0x4889f5	                            mov rbp, rsi	      2501	ui.c	FUNCTION_69
0x4004dd5	          0x4889fb	                            mov rbx, rdi	      2501	ui.c	FUNCTION_69
0x4004dd8	        0x4883ec08	                              sub rsp, 8	      2501	ui.c	FUNCTION_69
0x4004ddc	      0xe800000000	                          call 0x4004de1	      2502	ui.c	FUNCTION_69	CALL_1
0x4004de1	          0x4889c7	                            mov rdi, rax	      2502	ui.c	FUNCTION_69	CALL_1
0x4004de4	      0xe800000000	                          call 0x4004de9	      2502	ui.c	FUNCTION_69	CALL_1
0x4004de9	        0x488b7550	            mov rsi, qword [rbp + 0x50] 	      2502	ui.c	FUNCTION_69	CALL_1
0x4004ded	        0x4883c408	                              add rsp, 8	      2504	ui.c	FUNCTION_69
0x4004df1	          0x4889df	                            mov rdi, rbx	      2502	ui.c	FUNCTION_69	CALL_1
0x4004df4	              0x5b	                                 pop rbx	      2504	ui.c	FUNCTION_69
0x4004df5	              0x5d	                                 pop rbp	      2504	ui.c	FUNCTION_69
0x4004df6	          0x4889c2	                            mov rdx, rax	      2502	ui.c	FUNCTION_69	CALL_1
0x4004df9	      0xe900000000	                           jmp 0x4004dfe	      2502	ui.c	FUNCTION_69	CALL_1
x11_setup_selection	IF,0:DO,0:functions,0:FOR,0:CALL,1:SWITCH,0:WHILE,0:ELSE,0	5
0x4004db0	          0x4531c0	                            xor r8d, r8d	      2124	ui.c	ELSE_1	FUNCTION_64	CALL_1
0x4004db3	      0xb900000000	                              mov ecx, 0	      2124	ui.c	ELSE_1	FUNCTION_64	CALL_1
0x4004db8	            0x31d2	                            xor edx, edx	      2124	ui.c	ELSE_1	FUNCTION_64	CALL_1
0x4004dba	      0xbe00004000	                       mov esi, 0x400000	      2124	ui.c	ELSE_1	FUNCTION_64	CALL_1
0x4004dbf	      0xe900000000	                           jmp 0x4004dc4	      2124	ui.c	ELSE_1	FUNCTION_64	CALL_1
get_input_buf	IF,2:DO,0:functions,0:FOR,0:CALL,4:SWITCH,0:WHILE,0:ELSE,0	27
0x4003f30	              0x55	                                push rbp	      1652	ui.c	FUNCTION_48
0x4003f31	              0x53	                                push rbx	      1652	ui.c	FUNCTION_48
0x4003f32	      0xbf18000000	                           mov edi, 0x18	      1656	ui.c	FUNCTION_48	CALL_1
0x4003f37	        0x4883ec08	                              sub rsp, 8	      1652	ui.c	FUNCTION_48
0x4003f3b	      0xe800000000	                          call 0x4003f40	      1656	ui.c	FUNCTION_48	CALL_1
0x4003f40	          0x4885c0	                           test rax, rax	      1657	ui.c	FUNCTION_48	IF_1
0x4003f43	          0x4889c3	                            mov rbx, rax	      1656	ui.c	FUNCTION_48	CALL_1
0x4003f46	            0x7436	                            je 0x4003f7e	      1657	ui.c	FUNCTION_48	IF_1
0x4003f48	    0x8b0500000000	            mov eax, dword [0x04003f4e] 	      1660	ui.c	FUNCTION_48	IF_1	CALL_2
0x4003f4e	          0x8d7801	                      lea edi, [rax + 1]	      1660	ui.c	FUNCTION_48	IF_1	CALL_2
0x4003f51	      0xe800000000	                          call 0x4003f56	      1660	ui.c	FUNCTION_48	IF_1	CALL_2
0x4003f56	          0x4885c0	                           test rax, rax	      1661	ui.c	FUNCTION_48	IF_1	IF_2
0x4003f59	        0x48894310	             mov qword [rbx + 0x10], rax	      1660	ui.c	FUNCTION_48	IF_1	CALL_2
0x4003f5d	    0x8b2d00000000	            mov ebp, dword [0x04003f63] 	      1660	ui.c	FUNCTION_48	IF_1	CALL_2
0x4003f63	            0x7417	                            je 0x4003f7c	      1661	ui.c	FUNCTION_48	IF_1	IF_2
0x4003f65	    0x486315000000	         movsxd rdx, dword [0x04003f6c] 	      1662	ui.c	FUNCTION_48	IF_1	CALL_3
0x4003f6c	      0xbe00000000	                              mov esi, 0	        59	string3.h	FUNCTION_83	CALL_3
0x4003f71	          0x4889c7	                            mov rdi, rax	        59	string3.h	FUNCTION_83	CALL_3
0x4003f74	          0x4889d5	                            mov rbp, rdx	      1662	ui.c	FUNCTION_48	IF_1	CALL_3
0x4003f77	      0xe800000000	                          call 0x4003f7c	        59	string3.h	FUNCTION_83	CALL_3
0x4003f7c	            0x892b	                    mov dword [rbx], ebp	      1663	ui.c	FUNCTION_48	IF_1
0x4003f7e	    0xc70500000000	               mov dword [0x04003f88], 0	      1763	ui.c	FUNCTION_53
0x4003f88	        0x4883c408	                              add rsp, 8	      1667	ui.c	FUNCTION_48
0x4003f8c	          0x4889d8	                            mov rax, rbx	      1667	ui.c	FUNCTION_48
0x4003f8f	              0x5b	                                 pop rbx	      1667	ui.c	FUNCTION_48
0x4003f90	              0x5d	                                 pop rbp	      1667	ui.c	FUNCTION_48
0x4003f91	              0xc3	                                     ret	      1667	ui.c	FUNCTION_48
clip_start_selection	IF,4:DO,0:functions,0:FOR,0:CALL,10:SWITCH,1:WHILE,0:ELSE,1	155
0x40022d0	    0x66833d000000	                cmp word [0x040022d8], 2	       788	ui.c	FUNCTION_27	IF_1
0x40022d8	            0x4156	                                push r14	       785	ui.c	FUNCTION_27
0x40022da	            0x4155	                                push r13	       785	ui.c	FUNCTION_27
0x40022dc	          0x4189fd	                           mov r13d, edi	       785	ui.c	FUNCTION_27
0x40022df	            0x4154	                                push r12	       785	ui.c	FUNCTION_27
0x40022e1	              0x55	                                push rbp	       785	ui.c	FUNCTION_27
0x40022e2	            0x89d5	                            mov ebp, edx	       785	ui.c	FUNCTION_27
0x40022e4	              0x53	                                push rbx	       785	ui.c	FUNCTION_27
0x40022e5	            0x89f3	                            mov ebx, esi	       785	ui.c	FUNCTION_27
0x40022e7	     0xf8483020000	                            je 0x4002570	       788	ui.c	FUNCTION_27	IF_1
0x40022ed	            0x85db	                           test ebx, ebx	      2006	ui.c	FUNCTION_60	IF_1
0x40022ef	     0xf88e3010000	                            js 0x40024d8	      2006	ui.c	FUNCTION_60	IF_1
0x40022f5	    0x8b3500000000	            mov esi, dword [0x040022fb] 	      2008	ui.c	FUNCTION_60	IF_2
0x40022fb	            0x39f3	                            cmp ebx, esi	      2008	ui.c	FUNCTION_60	IF_2
0x40022fd	     0xf8d05010000	                           jge 0x4002408	      2008	ui.c	FUNCTION_60	IF_2
0x4002303	          0x4c63f3	                         movsxd r14, ebx	      2008	ui.c	FUNCTION_60	IF_2
0x4002306	          0x4189dc	                           mov r12d, ebx	      2008	ui.c	FUNCTION_60	IF_2
0x4002309	            0x89de	                            mov esi, ebx	      2008	ui.c	FUNCTION_60	IF_2
0x400230b	            0x31ff	                            xor edi, edi	      1994	ui.c	FUNCTION_59	IF_1
0x400230d	          0x4585ed	                         test r13d, r13d	      1993	ui.c	FUNCTION_59	IF_1
0x4002310	            0x7810	                            js 0x4002322	      1993	ui.c	FUNCTION_59	IF_1
0x4002312	    0x8b0500000000	            mov eax, dword [0x04002318] 	      1995	ui.c	FUNCTION_59	IF_2
0x4002318	          0x8d78ff	                      lea edi, [rax - 1]	      1996	ui.c	FUNCTION_59	IF_2
0x400231b	          0x4439e8	                           cmp eax, r13d	      1996	ui.c	FUNCTION_59	IF_2
0x400231e	        0x410f4ffd	                         cmovg edi, r13d	      1996	ui.c	FUNCTION_59	IF_2
0x4002322	      0xe800000000	                          call 0x4002327	       794	ui.c	FUNCTION_27	CALL_4
0x4002327	    0x4c8935000000	            mov qword [0x0400232e], r14 	       797	ui.c	FUNCTION_27
0x400232e	    0x890500000000	            mov dword [0x04002334], eax 	       798	ui.c	FUNCTION_27
0x4002334	      0xbf01000000	                              mov edi, 1	       801	ui.c	FUNCTION_27
0x4002339	    0x488b0d000000	            mov rcx, qword [0x04002340] 	       799	ui.c	FUNCTION_27
0x4002340	    0x488b1d000000	            mov rbx, qword [0x04002347] 	       799	ui.c	FUNCTION_27
0x4002347	            0x85ed	                           test ebp, ebp	       803	ui.c	FUNCTION_27	IF_2
0x4002349	    0x664489250000	            mov word [0x04002351], r12w 	       800	ui.c	FUNCTION_27
0x4002351	    0x66893d000000	               mov word [0x04002358], di	       801	ui.c	FUNCTION_27
0x4002358	    0x48890d000000	            mov qword [0x0400235f], rcx 	       799	ui.c	FUNCTION_27
0x400235f	    0x48891d000000	            mov qword [0x04002366], rbx 	       799	ui.c	FUNCTION_27
0x4002366	     0xf84b4000000	                            je 0x4002420	       803	ui.c	FUNCTION_27	IF_2
0x400236c	     0xfb715000000	           movzx edx, word [0x04002373] 	       805	ui.c	FUNCTION_27	IF_2	IF_3
0x4002373	          0x83c201	                              add edx, 1	       805	ui.c	FUNCTION_27	IF_2	IF_3
0x4002376	        0x6683fa02	                               cmp dx, 2	       805	ui.c	FUNCTION_27	IF_2	IF_3
0x400237a	    0x668915000000	               mov word [0x04002381], dx	       805	ui.c	FUNCTION_27	IF_2	IF_3
0x4002381	     0xf8799000000	                            ja 0x4002420	       805	ui.c	FUNCTION_27	IF_2	IF_3
0x4002387	    0x8b0500000000	            mov eax, dword [0x0400238d] 	       813	ui.c	FUNCTION_27	IF_4
0x400238d	            0x85c0	                           test eax, eax	       813	ui.c	FUNCTION_27	IF_4
0x400238f	     0xf85a2000000	                           jne 0x4002437	       813	ui.c	FUNCTION_27	IF_4
0x4002395	        0x6683fa01	                               cmp dx, 1	       817	ui.c	FUNCTION_27	SWITCH_1
0x4002399	     0xf84ae000000	                            je 0x400244d	       817	ui.c	FUNCTION_27	SWITCH_1
0x400239f	     0xf8240010000	                            jb 0x40024e5	       817	ui.c	FUNCTION_27	SWITCH_1
0x40023a5	        0x6683fa02	                               cmp dx, 2	       817	ui.c	FUNCTION_27	SWITCH_1
0x40023a9	            0x7533	                           jne 0x40023de	       817	ui.c	FUNCTION_27	SWITCH_1
0x40023ab	    0x488b3d000000	            mov rdi, qword [0x040023b2] 	       836	ui.c	FUNCTION_27	SWITCH_1	CALL_9
0x40023b2	    0x8b0d00000000	            mov ecx, dword [0x040023b8] 	       836	ui.c	FUNCTION_27	SWITCH_1	CALL_9
0x40023b8	    0x41b802000000	                              mov r8d, 2	       836	ui.c	FUNCTION_27	SWITCH_1	CALL_9
0x40023be	            0x31f6	                            xor esi, esi	       836	ui.c	FUNCTION_27	SWITCH_1	CALL_9
0x40023c0	            0x89fa	                            mov edx, edi	       836	ui.c	FUNCTION_27	SWITCH_1	CALL_9
0x40023c2	      0xe889e7ffff	               call sym.clip_invert_area	       836	ui.c	FUNCTION_27	SWITCH_1	CALL_9
0x40023c7	    0x488b05000000	            mov rax, qword [0x040023ce] 	       839	ui.c	FUNCTION_27	SWITCH_1
0x40023ce	    0xc70500000000	               mov dword [0x040023d8], 0	       838	ui.c	FUNCTION_27	SWITCH_1
0x40023d8	    0x890500000000	            mov dword [0x040023de], eax 	       839	ui.c	FUNCTION_27	SWITCH_1
0x40023de	    0x488b0d000000	            mov rcx, qword [0x040023e5] 	       839	ui.c	FUNCTION_27	SWITCH_1
0x40023e5	    0x488b1d000000	            mov rbx, qword [0x040023ec] 	       839	ui.c	FUNCTION_27	SWITCH_1
0x40023ec	    0x48891d000000	            mov qword [0x040023f3], rbx 	       843	ui.c	FUNCTION_27
0x40023f3	    0x48890d000000	            mov qword [0x040023fa], rcx 	       843	ui.c	FUNCTION_27
0x40023fa	              0x5b	                                 pop rbx	       848	ui.c	FUNCTION_27
0x40023fb	              0x5d	                                 pop rbp	       848	ui.c	FUNCTION_27
0x40023fc	            0x415c	                                 pop r12	       848	ui.c	FUNCTION_27
0x40023fe	            0x415d	                                 pop r13	       848	ui.c	FUNCTION_27
0x4002400	            0x415e	                                 pop r14	       848	ui.c	FUNCTION_27
0x4002402	              0xc3	                                     ret	       848	ui.c	FUNCTION_27
0x4002403	       0xf1f440000	                   nop dword [rax + rax]	       848	ui.c	FUNCTION_27
0x4002408	          0x83ee01	                              sub esi, 1	      2009	ui.c	FUNCTION_60	IF_2
0x400240b	          0x4c63f6	                         movsxd r14, esi	      2009	ui.c	FUNCTION_60	IF_2
0x400240e	          0x4189f4	                           mov r12d, esi	      2009	ui.c	FUNCTION_60	IF_2
0x4002411	      0xe9f5feffff	                           jmp 0x400230b	      2009	ui.c	FUNCTION_60	IF_2
0x4002416	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2009	ui.c	FUNCTION_60	IF_2
0x4002420	    0x8b3500000000	            mov esi, dword [0x04002426] 	       813	ui.c	FUNCTION_27	IF_4
0x4002426	            0x31d2	                            xor edx, edx	       809	ui.c	FUNCTION_27	ELSE_1
0x4002428	    0x668915000000	               mov word [0x0400242f], dx	       809	ui.c	FUNCTION_27	ELSE_1
0x400242f	            0x85f6	                           test esi, esi	       813	ui.c	FUNCTION_27	IF_4
0x4002431	     0xf84c9000000	                            je 0x4002500	       813	ui.c	FUNCTION_27	IF_4
0x4002437	      0xe800000000	                          call 0x400243c	       814	ui.c	FUNCTION_27	CALL_5
0x400243c	     0xfb715000000	           movzx edx, word [0x04002443] 	       814	ui.c	FUNCTION_27	CALL_5
0x4002443	        0x6683fa01	                               cmp dx, 1	       817	ui.c	FUNCTION_27	SWITCH_1
0x4002447	     0xf8552ffffff	                           jne 0x400239f	       817	ui.c	FUNCTION_27	SWITCH_1
0x400244d	    0x488b05000000	            mov rax, qword [0x04002454] 	       825	ui.c	FUNCTION_27	SWITCH_1	CALL_7
0x4002454	    0x3b0500000000	            cmp eax, dword [0x0400245a] 	      1397	ui.c	FUNCTION_36	IF_1
0x400245a	            0x89c7	                            mov edi, eax	       825	ui.c	FUNCTION_27	SWITCH_1	CALL_7
0x400245c	            0x7d19	                           jge 0x4002477	      1397	ui.c	FUNCTION_36	IF_1
0x400245e	    0x8b3500000000	            mov esi, dword [0x04002464] 	       825	ui.c	FUNCTION_27	SWITCH_1	CALL_7
0x4002464	    0x3b3500000000	            cmp esi, dword [0x0400246a] 	      1397	ui.c	FUNCTION_36	IF_1
0x400246a	            0x7d0b	                           jge 0x4002477	      1397	ui.c	FUNCTION_36	IF_1
0x400246c	      0xe85fe4ffff	call sym.clip_get_word_boundaries.isra.1.part.2.constprop.15	      1397	ui.c	FUNCTION_36	IF_1
0x4002471	    0x8b3d00000000	            mov edi, dword [0x04002477] 	      1397	ui.c	FUNCTION_36	IF_1
0x4002477	     0xfb70d000000	           movzx ecx, word [0x0400247e] 	       827	ui.c	FUNCTION_27	SWITCH_1
0x400247e	     0xfb735000000	           movzx esi, word [0x04002485] 	       826	ui.c	FUNCTION_27	SWITCH_1
0x4002485	    0x41b802000000	                              mov r8d, 2	       829	ui.c	FUNCTION_27	SWITCH_1	CALL_8
0x400248b	    0x8b1500000000	            mov edx, dword [0x04002491] 	       829	ui.c	FUNCTION_27	SWITCH_1	CALL_8
0x4002491	    0x66890d000000	               mov word [0x04002498], cx	       827	ui.c	FUNCTION_27	SWITCH_1
0x4002498	    0x668935000000	               mov word [0x0400249f], si	       826	ui.c	FUNCTION_27	SWITCH_1
0x400249f	      0xe8ace6ffff	               call sym.clip_invert_area	       829	ui.c	FUNCTION_27	SWITCH_1	CALL_8
0x40024a4	     0xfb705000000	           movzx eax, word [0x040024ab] 	       831	ui.c	FUNCTION_27	SWITCH_1
0x40024ab	    0x488b0d000000	            mov rcx, qword [0x040024b2] 	       831	ui.c	FUNCTION_27	SWITCH_1
0x40024b2	    0x890500000000	            mov dword [0x040024b8], eax 	       831	ui.c	FUNCTION_27	SWITCH_1
0x40024b8	     0xfb705000000	           movzx eax, word [0x040024bf] 	       832	ui.c	FUNCTION_27	SWITCH_1
0x40024bf	    0x488b1d000000	            mov rbx, qword [0x040024c6] 	       832	ui.c	FUNCTION_27	SWITCH_1
0x40024c6	    0x890500000000	            mov dword [0x040024cc], eax 	       832	ui.c	FUNCTION_27	SWITCH_1
0x40024cc	      0xe91bffffff	                           jmp 0x40023ec	       833	ui.c	FUNCTION_27	SWITCH_1
0x40024d1	     0xf1f80000000	                         nop dword [rax]	       833	ui.c	FUNCTION_27	SWITCH_1
0x40024d8	          0x4531e4	                          xor r12d, r12d	      2006	ui.c	FUNCTION_60	IF_1
0x40024db	          0x4531f6	                          xor r14d, r14d	      2006	ui.c	FUNCTION_60	IF_1
0x40024de	            0x31f6	                            xor esi, esi	      2007	ui.c	FUNCTION_60	IF_1
0x40024e0	      0xe926feffff	                           jmp 0x400230b	      2007	ui.c	FUNCTION_60	IF_1
0x40024e5	    0x8b0500000000	            mov eax, dword [0x040024eb] 	      2007	ui.c	FUNCTION_60	IF_1
0x40024eb	    0x4c8b35000000	            mov r14, qword [0x040024f2] 	      2007	ui.c	FUNCTION_60	IF_1
0x40024f2	    0x488b0d000000	            mov rcx, qword [0x040024f9] 	      2007	ui.c	FUNCTION_60	IF_1
0x40024f9	    0x488b1d000000	            mov rbx, qword [0x04002500] 	      2007	ui.c	FUNCTION_60	IF_1
0x4002500	            0x31f6	                            xor esi, esi	      1451	ui.c	FUNCTION_37	IF_1
0x4002502	    0x443b35000000	           cmp r14d, dword [0x04002509] 	      1451	ui.c	FUNCTION_37	IF_1
0x4002509	    0x668905000000	               mov word [0x04002510], ax	       820	ui.c	FUNCTION_27	SWITCH_1
0x4002510	          0x4963c6	                        movsxd rax, r14d	       821	ui.c	FUNCTION_27	SWITCH_1	CALL_6
0x4002513	            0x7d48	                           jge 0x400255d	      1451	ui.c	FUNCTION_37	IF_1
0x4002515	    0x488b3d000000	            mov rdi, qword [0x0400251c] 	      1451	ui.c	FUNCTION_37	IF_1
0x400251c	          0x4885ff	                           test rdi, rdi	      1451	ui.c	FUNCTION_37	IF_1
0x400251f	            0x743c	                            je 0x400255d	      1451	ui.c	FUNCTION_37	IF_1
0x4002521	    0x8b3500000000	            mov esi, dword [0x04002527] 	      1453	ui.c	FUNCTION_37	FOR_1
0x4002527	            0x85f6	                           test esi, esi	      1453	ui.c	FUNCTION_37	FOR_1
0x4002529	            0x7e32	                           jle 0x400255d	      1453	ui.c	FUNCTION_37	FOR_1
0x400252b	    0x488b15000000	            mov rdx, qword [0x04002532] 	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x4002532	        0x448b0482	            mov r8d, dword [rdx + rax*4]	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x4002536	          0x8d46ff	                      lea eax, [rsi - 1]	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x4002539	        0x428d1400	                     lea edx, [rax + r8]	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x400253d	        0x803c1720	              cmp byte [rdi + rdx], 0x20	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x4002541	            0x7412	                            je 0x4002555	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x4002543	            0xeb18	                           jmp 0x400255d	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x4002545	           0xf1f00	                         nop dword [rax]	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x4002548	          0x83e801	                              sub eax, 1	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x400254b	        0x428d1400	                     lea edx, [rax + r8]	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x400254f	        0x803c1720	              cmp byte [rdi + rdx], 0x20	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x4002553	            0x7508	                           jne 0x400255d	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x4002555	            0x85c0	                           test eax, eax	      1453	ui.c	FUNCTION_37	FOR_1
0x4002557	            0x89c6	                            mov esi, eax	      1453	ui.c	FUNCTION_37	FOR_1
0x4002559	            0x75ed	                           jne 0x4002548	      1453	ui.c	FUNCTION_37	FOR_1
0x400255b	            0x31f6	                            xor esi, esi	      1453	ui.c	FUNCTION_37	FOR_1
0x400255d	    0x668935000000	               mov word [0x04002564], si	       821	ui.c	FUNCTION_27	SWITCH_1	CALL_6
0x4002564	      0xe983feffff	                           jmp 0x40023ec	       822	ui.c	FUNCTION_27	SWITCH_1
0x4002569	     0xf1f80000000	                         nop dword [rax]	       822	ui.c	FUNCTION_27	SWITCH_1
0x4002570	    0x8b0d00000000	            mov ecx, dword [0x04002576] 	      1068	ui.c	FUNCTION_30	CALL_1
0x4002576	    0x8b1500000000	            mov edx, dword [0x0400257c] 	      1068	ui.c	FUNCTION_30	CALL_1
0x400257c	    0x41b801000000	                              mov r8d, 1	      1068	ui.c	FUNCTION_30	CALL_1
0x4002582	    0x8b3500000000	            mov esi, dword [0x04002588] 	      1068	ui.c	FUNCTION_30	CALL_1
0x4002588	    0x8b3d00000000	            mov edi, dword [0x0400258e] 	      1068	ui.c	FUNCTION_30	CALL_1
0x400258e	      0xe8bde5ffff	               call sym.clip_invert_area	      1068	ui.c	FUNCTION_30	CALL_1
0x4002593	          0x4531c0	                            xor r8d, r8d	      1070	ui.c	FUNCTION_30
0x4002596	    0x664489050000	              mov word [0x0400259e], r8w	      1070	ui.c	FUNCTION_30
0x400259e	      0xe94afdffff	                           jmp 0x40022ed	      1070	ui.c	FUNCTION_30
im_save_status	IF,3:DO,0:functions,0:FOR,0:CALL,0:SWITCH,0:WHILE,0:ELSE,1	31
0x4006470	    0x448b0d000000	            mov r9d, dword [0x04006477] 	      3358	ui.c	FUNCTION_81	IF_1
0x4006477	          0x4585c9	                           test r9d, r9d	      3358	ui.c	FUNCTION_81	IF_1
0x400647a	            0x753a	                           jne 0x40064b6	      3358	ui.c	FUNCTION_81	IF_1
0x400647c	    0x448b05000000	            mov r8d, dword [0x04006483] 	      3358	ui.c	FUNCTION_81	IF_1
0x4006483	          0x4585c0	                           test r8d, r8d	      3358	ui.c	FUNCTION_81	IF_1
0x4006486	            0x742e	                            je 0x40064b6	      3358	ui.c	FUNCTION_81	IF_1
0x4006488	    0x8b3500000000	            mov esi, dword [0x0400648e] 	      3358	ui.c	FUNCTION_81	IF_1
0x400648e	            0x85f6	                           test esi, esi	      3358	ui.c	FUNCTION_81	IF_1
0x4006490	            0x7524	                           jne 0x40064b6	      3358	ui.c	FUNCTION_81	IF_1
0x4006492	    0x48833d000000	               cmp qword [0x0400649a], 0	      3360	ui.c	FUNCTION_81	IF_1
0x400649a	            0x741a	                            je 0x40064b6	      3360	ui.c	FUNCTION_81	IF_1
0x400649c	    0x8b0d00000000	            mov ecx, dword [0x040064a2] 	      3363	ui.c	FUNCTION_81	IF_1
0x40064a2	            0x85c9	                           test ecx, ecx	      3363	ui.c	FUNCTION_81	IF_1
0x40064a4	            0x751a	                           jne 0x40064c0	      3363	ui.c	FUNCTION_81	IF_1
0x40064a6	    0x8b0500000000	            mov eax, dword [0x040064ac] 	      3368	ui.c	FUNCTION_81	IF_1	IF_2
0x40064ac	            0x85c0	                           test eax, eax	      3368	ui.c	FUNCTION_81	IF_1	IF_2
0x40064ae	            0x7520	                           jne 0x40064d0	      3368	ui.c	FUNCTION_81	IF_1	IF_2
0x40064b0	        0x48833f02	                      cmp qword [rdi], 2	      3370	ui.c	FUNCTION_81	IF_1	ELSE_1	IF_3
0x40064b4	            0x742a	                            je 0x40064e0	      3370	ui.c	FUNCTION_81	IF_1	ELSE_1	IF_3
0x40064b6	            0xf3c3	                                     ret	      3370	ui.c	FUNCTION_81	IF_1	ELSE_1	IF_3
0x40064b8	     0xf1f84000000	                   nop dword [rax + rax]	      3370	ui.c	FUNCTION_81	IF_1	ELSE_1	IF_3
0x40064c0	    0x8b1500000000	            mov edx, dword [0x040064c6] 	      3363	ui.c	FUNCTION_81	IF_1
0x40064c6	            0x85d2	                           test edx, edx	      3363	ui.c	FUNCTION_81	IF_1
0x40064c8	            0x75dc	                           jne 0x40064a6	      3363	ui.c	FUNCTION_81	IF_1
0x40064ca	            0xf3c3	                                     ret	      3363	ui.c	FUNCTION_81	IF_1
0x40064cc	         0xf1f4000	                         nop dword [rax]	      3363	ui.c	FUNCTION_81	IF_1
0x40064d0	    0x48c707020000	                      mov qword [rdi], 2	      3369	ui.c	FUNCTION_81	IF_1	IF_2
0x40064d7	              0xc3	                                     ret	      3369	ui.c	FUNCTION_81	IF_1	IF_2
0x40064d8	     0xf1f84000000	                   nop dword [rax + rax]	      3369	ui.c	FUNCTION_81	IF_1	IF_2
0x40064e0	    0x48c707000000	                      mov qword [rdi], 0	      3371	ui.c	FUNCTION_81	IF_1	ELSE_1	IF_3
0x40064e7	              0xc3	                                     ret	      3371	ui.c	FUNCTION_81	IF_1	ELSE_1	IF_3
vim_used_in_input_buf	IF,0:DO,0:functions,0:FOR,0:CALL,0:SWITCH,0:WHILE,0:ELSE,0	2
0x4003f20	    0x8b0500000000	            mov eax, dword [0x04003f26] 	      1643	ui.c	FUNCTION_47
0x4003f26	              0xc3	                                     ret	      1643	ui.c	FUNCTION_47
is_clipboard_needs_update	IF,0:DO,0:functions,0:FOR,0:CALL,0:SWITCH,0:WHILE,0:ELSE,0	2
0x4001dd0	    0x8b0500000000	            mov eax, dword [0x04001dd6] 	       635	ui.c	FUNCTION_20
0x4001dd6	              0xc3	                                     ret	       635	ui.c	FUNCTION_20
open_app_context	IF,1:DO,0:functions,0:FOR,0:CALL,2:SWITCH,0:WHILE,0:ELSE,0	10
0x4004cc0	    0x48833d000000	               cmp qword [0x04004cc8], 0	      2029	ui.c	FUNCTION_61	IF_1
0x4004cc8	            0x7406	                            je 0x4004cd0	      2029	ui.c	FUNCTION_61	IF_1
0x4004cca	              0xc3	                                     ret	      2034	ui.c	FUNCTION_61
0x4004ccb	       0xf1f440000	                   nop dword [rax + rax]	      2034	ui.c	FUNCTION_61
0x4004cd0	        0x4883ec08	                              sub rsp, 8	      2028	ui.c	FUNCTION_61
0x4004cd4	      0xe800000000	                          call 0x4004cd9	      2031	ui.c	FUNCTION_61	IF_1	CALL_1
0x4004cd9	      0xe800000000	                          call 0x4004cde	      2032	ui.c	FUNCTION_61	IF_1	CALL_2
0x4004cde	    0x488905000000	            mov qword [0x04004ce5], rax 	      2032	ui.c	FUNCTION_61	IF_1	CALL_2
0x4004ce5	        0x4883c408	                              add rsp, 8	      2034	ui.c	FUNCTION_61
0x4004ce9	              0xc3	                                     ret	      2034	ui.c	FUNCTION_61
clip_may_clear_selection	IF,1:DO,0:functions,0:FOR,0:CALL,1:SWITCH,0:WHILE,0:ELSE,0	22
0x4002800	    0x66833d000000	                cmp word [0x04002808], 2	      1079	ui.c	FUNCTION_31	IF_1
0x4002808	            0x7406	                            je 0x4002810	      1079	ui.c	FUNCTION_31	IF_1
0x400280a	            0xf3c3	                                     ret	      1083	ui.c	FUNCTION_31
0x400280c	         0xf1f4000	                         nop dword [rax]	      1083	ui.c	FUNCTION_31
0x4002810	    0x4c8b0d000000	              mov r9, qword [0x04002817]	      1080	ui.c	FUNCTION_31	IF_1
0x4002817	          0x4863f6	                         movsxd rsi, esi	      1080	ui.c	FUNCTION_31	IF_1
0x400281a	          0x4c39ce	                             cmp rsi, r9	      1080	ui.c	FUNCTION_31	IF_1
0x400281d	            0x7ceb	                            jl 0x400280a	      1080	ui.c	FUNCTION_31	IF_1
0x400281f	    0x488b15000000	            mov rdx, qword [0x04002826] 	      1081	ui.c	FUNCTION_31	IF_1
0x4002826	          0x4863c7	                         movsxd rax, edi	      1081	ui.c	FUNCTION_31	IF_1
0x4002829	          0x4839d0	                            cmp rax, rdx	      1081	ui.c	FUNCTION_31	IF_1
0x400282c	            0x7fdc	                            jg 0x400280a	      1081	ui.c	FUNCTION_31	IF_1
0x400282e	        0x4883ec08	                              sub rsp, 8	      1078	ui.c	FUNCTION_31
0x4002832	    0x8b0d00000000	            mov ecx, dword [0x04002838] 	      1068	ui.c	FUNCTION_30	CALL_1
0x4002838	    0x8b3500000000	            mov esi, dword [0x0400283e] 	      1068	ui.c	FUNCTION_30	CALL_1
0x400283e	    0x41b801000000	                              mov r8d, 1	      1068	ui.c	FUNCTION_30	CALL_1
0x4002844	          0x4489cf	                            mov edi, r9d	      1068	ui.c	FUNCTION_30	CALL_1
0x4002847	      0xe804e3ffff	               call sym.clip_invert_area	      1068	ui.c	FUNCTION_30	CALL_1
0x400284c	            0x31c0	                            xor eax, eax	      1070	ui.c	FUNCTION_30
0x400284e	    0x668905000000	               mov word [0x04002855], ax	      1070	ui.c	FUNCTION_30
0x4002855	        0x4883c408	                              add rsp, 8	      1083	ui.c	FUNCTION_31
0x4002859	              0xc3	                                     ret	      1083	ui.c	FUNCTION_31
vcol2col	IF,0:DO,0:functions,0:FOR,0:CALL,3:SWITCH,0:WHILE,1:ELSE,0	52
0x40060a0	            0x4156	                                push r14	      3261	ui.c	FUNCTION_79
0x40060a2	            0x4155	                                push r13	      3261	ui.c	FUNCTION_79
0x40060a4	          0x4989fd	                            mov r13, rdi	      3261	ui.c	FUNCTION_79
0x40060a7	            0x4154	                                push r12	      3261	ui.c	FUNCTION_79
0x40060a9	              0x55	                                push rbp	      3261	ui.c	FUNCTION_79
0x40060aa	          0x4189d6	                           mov r14d, edx	      3261	ui.c	FUNCTION_79
0x40060ad	              0x53	                                push rbx	      3261	ui.c	FUNCTION_79
0x40060ae	        0x488b7f08	                mov rdi, qword [rdi + 8]	      3267	ui.c	FUNCTION_79	CALL_1
0x40060b2	            0x31d2	                            xor edx, edx	      3267	ui.c	FUNCTION_79	CALL_1
0x40060b4	      0xe800000000	                          call 0x40060b9	      3267	ui.c	FUNCTION_79	CALL_1
0x40060b9	          0x4585f6	                         test r14d, r14d	      3268	ui.c	FUNCTION_79	WHILE_1
0x40060bc	            0x7e68	                           jle 0x4006126	      3268	ui.c	FUNCTION_79	WHILE_1
0x40060be	          0x803800	                       cmp byte [rax], 0	      3268	ui.c	FUNCTION_79	WHILE_1
0x40060c1	          0x4989c4	                            mov r12, rax	      3268	ui.c	FUNCTION_79	WHILE_1
0x40060c4	            0x7460	                            je 0x4006126	      3268	ui.c	FUNCTION_79	WHILE_1
0x40060c6	          0x4889c3	                            mov rbx, rax	      3268	ui.c	FUNCTION_79	WHILE_1
0x40060c9	            0x31ed	                            xor ebp, ebp	      3268	ui.c	FUNCTION_79	WHILE_1
0x40060cb	            0xeb10	                           jmp 0x40060dd	      3268	ui.c	FUNCTION_79	WHILE_1
0x40060cd	           0xf1f00	                         nop dword [rax]	      3268	ui.c	FUNCTION_79	WHILE_1
0x40060d0	          0x4801c3	                            add rbx, rax	      3271	ui.c	FUNCTION_79	WHILE_1	CALL_3
0x40060d3	          0x4139ee	                           cmp r14d, ebp	      3268	ui.c	FUNCTION_79	WHILE_1
0x40060d6	            0x7e40	                           jle 0x4006118	      3268	ui.c	FUNCTION_79	WHILE_1
0x40060d8	          0x803b00	                       cmp byte [rbx], 0	      3268	ui.c	FUNCTION_79	WHILE_1
0x40060db	            0x743b	                            je 0x4006118	      3268	ui.c	FUNCTION_79	WHILE_1
0x40060dd	          0x4531c0	                            xor r8d, r8d	      3270	ui.c	FUNCTION_79	WHILE_1	CALL_2
0x40060e0	            0x89e9	                            mov ecx, ebp	      3270	ui.c	FUNCTION_79	WHILE_1	CALL_2
0x40060e2	          0x4889da	                            mov rdx, rbx	      3270	ui.c	FUNCTION_79	WHILE_1	CALL_2
0x40060e5	          0x4c89e6	                            mov rsi, r12	      3270	ui.c	FUNCTION_79	WHILE_1	CALL_2
0x40060e8	          0x4c89ef	                            mov rdi, r13	      3270	ui.c	FUNCTION_79	WHILE_1	CALL_2
0x40060eb	      0xe800000000	                          call 0x40060f0	      3270	ui.c	FUNCTION_79	WHILE_1	CALL_2
0x40060f0	    0x8b1500000000	            mov edx, dword [0x040060f6] 	      3271	ui.c	FUNCTION_79	WHILE_1	CALL_3
0x40060f6	             0x1c5	                            add ebp, eax	      3270	ui.c	FUNCTION_79	WHILE_1	CALL_2
0x40060f8	      0xb801000000	                              mov eax, 1	      3270	ui.c	FUNCTION_79	WHILE_1	CALL_2
0x40060fd	            0x85d2	                           test edx, edx	      3271	ui.c	FUNCTION_79	WHILE_1	CALL_3
0x40060ff	            0x74cf	                            je 0x40060d0	      3271	ui.c	FUNCTION_79	WHILE_1	CALL_3
0x4006101	          0x4889df	                            mov rdi, rbx	      3271	ui.c	FUNCTION_79	WHILE_1	CALL_3
0x4006104	    0xff1500000000	                 call qword [0x0400610a]	      3271	ui.c	FUNCTION_79	WHILE_1	CALL_3
0x400610a	            0x4898	                                    cdqe	      3271	ui.c	FUNCTION_79	WHILE_1	CALL_3
0x400610c	          0x4801c3	                            add rbx, rax	      3271	ui.c	FUNCTION_79	WHILE_1	CALL_3
0x400610f	          0x4139ee	                           cmp r14d, ebp	      3268	ui.c	FUNCTION_79	WHILE_1
0x4006112	            0x7fc4	                            jg 0x40060d8	      3268	ui.c	FUNCTION_79	WHILE_1
0x4006114	         0xf1f4000	                         nop dword [rax]	      3268	ui.c	FUNCTION_79	WHILE_1
0x4006118	            0x89d8	                            mov eax, ebx	      3268	ui.c	FUNCTION_79	WHILE_1
0x400611a	          0x4429e0	                           sub eax, r12d	      3268	ui.c	FUNCTION_79	WHILE_1
0x400611d	              0x5b	                                 pop rbx	      3274	ui.c	FUNCTION_79
0x400611e	              0x5d	                                 pop rbp	      3274	ui.c	FUNCTION_79
0x400611f	            0x415c	                                 pop r12	      3274	ui.c	FUNCTION_79
0x4006121	            0x415d	                                 pop r13	      3274	ui.c	FUNCTION_79
0x4006123	            0x415e	                                 pop r14	      3274	ui.c	FUNCTION_79
0x4006125	              0xc3	                                     ret	      3274	ui.c	FUNCTION_79
0x4006126	            0x31c0	                            xor eax, eax	      3268	ui.c	FUNCTION_79	WHILE_1
0x4006128	            0xebf3	                           jmp 0x400611d	      3268	ui.c	FUNCTION_79	WHILE_1
clip_auto_select	IF,2:DO,0:functions,0:FOR,0:CALL,4:SWITCH,0:WHILE,0:ELSE,0	174
0x4001f40	    0x8b0500000000	            mov eax, dword [0x04001f46] 	       691	ui.c	FUNCTION_23	CALL_1
0x4001f46	              0x53	                                push rbx	       675	ui.c	FUNCTION_22
0x4001f47	            0x85c0	                           test eax, eax	       691	ui.c	FUNCTION_23	CALL_1
0x4001f49	     0xf85b9000000	                           jne 0x4002008	       691	ui.c	FUNCTION_23	CALL_1
0x4001f4f	    0x8b0500000000	            mov eax, dword [0x04001f55] 	       676	ui.c	FUNCTION_22	IF_1	CALL_1
0x4001f55	            0x85c0	                           test eax, eax	       676	ui.c	FUNCTION_22	IF_1	CALL_1
0x4001f57	     0xf85c1000000	                           jne 0x400201e	       676	ui.c	FUNCTION_22	IF_1	CALL_1
0x4001f5d	    0x8b0500000000	            mov eax, dword [0x04001f63] 	       705	ui.c	FUNCTION_24	CALL_1
0x4001f63	            0x85c0	                           test eax, eax	       678	ui.c	FUNCTION_22	IF_2	CALL_3
0x4001f65	            0x7509	                           jne 0x4001f70	       678	ui.c	FUNCTION_22	IF_2	CALL_3
0x4001f67	              0x5b	                                 pop rbx	       680	ui.c	FUNCTION_22
0x4001f68	              0xc3	                                     ret	       680	ui.c	FUNCTION_22
0x4001f69	     0xf1f80000000	                         nop dword [rax]	       680	ui.c	FUNCTION_22
0x4001f70	    0x448b05000000	            mov r8d, dword [0x04001f77] 	       589	ui.c	FUNCTION_18	IF_1
0x4001f77	          0x4585c0	                           test r8d, r8d	       589	ui.c	FUNCTION_18	IF_1
0x4001f7a	            0x74eb	                            je 0x4001f67	       589	ui.c	FUNCTION_18	IF_1
0x4001f7c	    0xf60500000000	               test byte [0x04001f83], 1	       589	ui.c	FUNCTION_18	IF_1
0x4001f83	            0x74e2	                            je 0x4001f67	       589	ui.c	FUNCTION_18	IF_1
0x4001f85	    0x8b3d00000000	            mov edi, dword [0x04001f8b] 	       589	ui.c	FUNCTION_18	IF_1
0x4001f8b	            0x85ff	                           test edi, edi	       589	ui.c	FUNCTION_18	IF_1
0x4001f8d	            0x74d8	                            je 0x4001f67	       589	ui.c	FUNCTION_18	IF_1
0x4001f8f	      0xbf00000000	                              mov edi, 0	       591	ui.c	FUNCTION_18	IF_1	CALL_1
0x4001f94	      0xe800000000	                          call 0x4001f99	       591	ui.c	FUNCTION_18	IF_1	CALL_1
0x4001f99	      0xbf00000000	                              mov edi, 0	       592	ui.c	FUNCTION_18	IF_1	CALL_2
0x4001f9e	      0xe800000000	                          call 0x4001fa3	       592	ui.c	FUNCTION_18	IF_1	CALL_2
0x4001fa3	    0x8b3500000000	            mov esi, dword [0x04001fa9] 	       522	ui.c	FUNCTION_16	IF_1
0x4001fa9	            0x85f6	                           test esi, esi	       522	ui.c	FUNCTION_16	IF_1
0x4001fab	     0xf853f010000	                           jne 0x40020f0	       522	ui.c	FUNCTION_16	IF_1
0x4001fb1	    0x8b0500000000	            mov eax, dword [0x04001fb7] 	       522	ui.c	FUNCTION_16	IF_1
0x4001fb7	            0x85c0	                           test eax, eax	       594	ui.c	FUNCTION_18	IF_1	IF_2
0x4001fb9	     0xf85b1010000	                           jne 0x4002170	       594	ui.c	FUNCTION_18	IF_1	IF_2
0x4001fbf	    0x8b1500000000	            mov edx, dword [0x04001fc5] 	      1523	ui.c	FUNCTION_41	IF_1
0x4001fc5	            0x85d2	                           test edx, edx	      1523	ui.c	FUNCTION_41	IF_1
0x4001fc7	            0x7520	                           jne 0x4001fe9	      1523	ui.c	FUNCTION_41	IF_1
0x4001fc9	    0x8b0500000000	            mov eax, dword [0x04001fcf] 	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x4001fcf	            0xa802	                              test al, 2	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x4001fd1	     0xf8540020000	                           jne 0x4002217	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x4001fd7	      0xba00000000	                              mov edx, 0	      1528	ui.c	FUNCTION_41	IF_1	IF_2
0x4001fdc	    0x4881fa000000	                              cmp rdx, 0	      1528	ui.c	FUNCTION_41	IF_1	IF_2
0x4001fe3	     0xf8426020000	                            je 0x400220f	      1528	ui.c	FUNCTION_41	IF_1	IF_2
0x4001fe9	    0x8b0500000000	            mov eax, dword [0x04001fef] 	      1536	ui.c	FUNCTION_41	IF_3
0x4001fef	      0xbf00000000	                              mov edi, 0	      1537	ui.c	FUNCTION_41	CALL_1
0x4001ff4	            0x85c0	                           test eax, eax	      1536	ui.c	FUNCTION_41	IF_3
0x4001ff6	     0xf8564010000	                           jne 0x4002160	      1536	ui.c	FUNCTION_41	IF_3
0x4001ffc	              0x5b	                                 pop rbx	       680	ui.c	FUNCTION_22
0x4001ffd	      0xe900000000	                           jmp 0x4002002	      1540	ui.c	FUNCTION_41	CALL_2
0x4002002	    0x660f1f440000	                    nop word [rax + rax]	      1540	ui.c	FUNCTION_41	CALL_2
0x4002008	    0x488b3d000000	            mov rdi, qword [0x0400200f] 	       691	ui.c	FUNCTION_23	CALL_1
0x400200f	      0xbe61000000	                           mov esi, 0x61	       691	ui.c	FUNCTION_23	CALL_1
0x4002014	      0xe800000000	                          call 0x4002019	       691	ui.c	FUNCTION_23	CALL_1
0x4002019	          0x4885c0	                           test rax, rax	       676	ui.c	FUNCTION_22	IF_1	CALL_1
0x400201c	            0x7422	                            je 0x4002040	       676	ui.c	FUNCTION_22	IF_1	CALL_1
0x400201e	    0x8b0500000000	            mov eax, dword [0x04002024] 	       589	ui.c	FUNCTION_18	IF_1
0x4002024	            0x85c0	                           test eax, eax	       589	ui.c	FUNCTION_18	IF_1
0x4002026	            0x7418	                            je 0x4002040	       589	ui.c	FUNCTION_18	IF_1
0x4002028	    0xf60500000000	               test byte [0x0400202f], 1	       589	ui.c	FUNCTION_18	IF_1
0x400202f	            0x740f	                            je 0x4002040	       589	ui.c	FUNCTION_18	IF_1
0x4002031	    0x8b0500000000	            mov eax, dword [0x04002037] 	       589	ui.c	FUNCTION_18	IF_1
0x4002037	            0x85c0	                           test eax, eax	       589	ui.c	FUNCTION_18	IF_1
0x4002039	            0x7535	                           jne 0x4002070	       589	ui.c	FUNCTION_18	IF_1
0x400203b	       0xf1f440000	                   nop dword [rax + rax]	       589	ui.c	FUNCTION_18	IF_1
0x4002040	    0x448b0d000000	            mov r9d, dword [0x04002047] 	       705	ui.c	FUNCTION_24	CALL_1
0x4002047	          0x4585c9	                           test r9d, r9d	       705	ui.c	FUNCTION_24	CALL_1
0x400204a	     0xf840dffffff	                            je 0x4001f5d	       705	ui.c	FUNCTION_24	CALL_1
0x4002050	    0x488b3d000000	            mov rdi, qword [0x04002057] 	       705	ui.c	FUNCTION_24	CALL_1
0x4002057	      0xbe50000000	                           mov esi, 0x50	       705	ui.c	FUNCTION_24	CALL_1
0x400205c	      0xe800000000	                          call 0x4002061	       705	ui.c	FUNCTION_24	CALL_1
0x4002061	          0x4885c0	                           test rax, rax	       705	ui.c	FUNCTION_24	CALL_1
0x4002064	           0xf95c0	                                setne al	       705	ui.c	FUNCTION_24	CALL_1
0x4002067	           0xfb6c0	                           movzx eax, al	       705	ui.c	FUNCTION_24	CALL_1
0x400206a	      0xe9f4feffff	                           jmp 0x4001f63	       705	ui.c	FUNCTION_24	CALL_1
0x400206f	              0x90	                                     nop	       705	ui.c	FUNCTION_24	CALL_1
0x4002070	      0xbf00000000	                              mov edi, 0	       591	ui.c	FUNCTION_18	IF_1	CALL_1
0x4002075	      0xe800000000	                          call 0x400207a	       591	ui.c	FUNCTION_18	IF_1	CALL_1
0x400207a	      0xbf00000000	                              mov edi, 0	       592	ui.c	FUNCTION_18	IF_1	CALL_2
0x400207f	      0xe800000000	                          call 0x4002084	       592	ui.c	FUNCTION_18	IF_1	CALL_2
0x4002084	    0x8b0500000000	            mov eax, dword [0x0400208a] 	       522	ui.c	FUNCTION_16	IF_1
0x400208a	            0x85c0	                           test eax, eax	       522	ui.c	FUNCTION_16	IF_1
0x400208c	     0xf85ee000000	                           jne 0x4002180	       522	ui.c	FUNCTION_16	IF_1
0x4002092	    0x8b0500000000	            mov eax, dword [0x04002098] 	       522	ui.c	FUNCTION_16	IF_1
0x4002098	            0x85c0	                           test eax, eax	       594	ui.c	FUNCTION_18	IF_1	IF_2
0x400209a	     0xf8560010000	                           jne 0x4002200	       594	ui.c	FUNCTION_18	IF_1	IF_2
0x40020a0	    0x448b1d000000	           mov r11d, dword [0x040020a7] 	      1523	ui.c	FUNCTION_41	IF_1
0x40020a7	          0x4585db	                         test r11d, r11d	      1523	ui.c	FUNCTION_41	IF_1
0x40020aa	            0x751f	                           jne 0x40020cb	      1523	ui.c	FUNCTION_41	IF_1
0x40020ac	      0xb800000000	                              mov eax, 0	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x40020b1	    0x483d00000000	                              cmp rax, 0	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x40020b7	    0x8b0500000000	            mov eax, dword [0x040020bd] 	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x40020bd	     0xf8460010000	                            je 0x4002223	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x40020c3	            0xa801	                              test al, 1	      1528	ui.c	FUNCTION_41	IF_1	IF_2
0x40020c5	     0xf8560010000	                           jne 0x400222b	      1528	ui.c	FUNCTION_41	IF_1	IF_2
0x40020cb	    0x448b15000000	           mov r10d, dword [0x040020d2] 	      1536	ui.c	FUNCTION_41	IF_3
0x40020d2	      0xbf00000000	                              mov edi, 0	      1537	ui.c	FUNCTION_41	CALL_1
0x40020d7	          0x4585d2	                         test r10d, r10d	      1536	ui.c	FUNCTION_41	IF_3
0x40020da	     0xf8510010000	                           jne 0x40021f0	      1536	ui.c	FUNCTION_41	IF_3
0x40020e0	      0xe800000000	                          call 0x40020e5	      1540	ui.c	FUNCTION_41	CALL_2
0x40020e5	      0xe956ffffff	                           jmp 0x4002040	      1540	ui.c	FUNCTION_41	CALL_2
0x40020ea	    0x660f1f440000	                    nop word [rax + rax]	      1540	ui.c	FUNCTION_41	CALL_2
0x40020f0	    0x8b0d00000000	            mov ecx, dword [0x040020f6] 	      1495	ui.c	FUNCTION_39	IF_1
0x40020f6	    0x8b1d00000000	            mov ebx, dword [0x040020fc] 	       524	ui.c	FUNCTION_16	IF_1
0x40020fc	      0xbf00000000	                              mov edi, 0	      1496	ui.c	FUNCTION_39	CALL_1
0x4002101	            0x85c9	                           test ecx, ecx	      1495	ui.c	FUNCTION_39	IF_1
0x4002103	     0xf8531010000	                           jne 0x400223a	      1495	ui.c	FUNCTION_39	IF_1
0x4002109	      0xe800000000	                          call 0x400210e	      1499	ui.c	FUNCTION_39	CALL_2
0x400210e	          0x83f801	                              cmp eax, 1	       526	ui.c	FUNCTION_16	IF_1	CALL_1
0x4002111	           0xf94c2	                                 sete dl	       526	ui.c	FUNCTION_16	IF_1	CALL_1
0x4002114	            0x85db	                           test ebx, ebx	       532	ui.c	FUNCTION_16	IF_1	IF_2	IF_3
0x4002116	           0xfb6c2	                           movzx eax, dl	       526	ui.c	FUNCTION_16	IF_1	CALL_1
0x4002119	    0x890500000000	            mov dword [0x0400211f], eax 	       526	ui.c	FUNCTION_16	IF_1	CALL_1
0x400211f	     0xf8592feffff	                           jne 0x4001fb7	       532	ui.c	FUNCTION_16	IF_1	IF_2	IF_3
0x4002125	            0x84d2	                             test dl, dl	       532	ui.c	FUNCTION_16	IF_1	IF_2	IF_3
0x4002127	     0xf848afeffff	                            je 0x4001fb7	       532	ui.c	FUNCTION_16	IF_1	IF_2	IF_3
0x400212d	      0xe800000000	                          call 0x4002132	       533	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_2
0x4002132	          0x83f802	                              cmp eax, 2	       533	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_2
0x4002135	            0x7410	                            je 0x4002147	       533	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_2
0x4002137	      0xe800000000	                          call 0x400213c	       534	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_3
0x400213c	      0x3d00100000	                         cmp eax, 0x1000	       534	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_3
0x4002141	     0xf856afeffff	                           jne 0x4001fb1	       534	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_3
0x4002147	      0xbf00000000	                              mov edi, 0	       534	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_3
0x400214c	      0xe86fe9ffff	      call sym.clip_own_selection.part.7	       534	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_3
0x4002151	    0x8b0500000000	            mov eax, dword [0x04002157] 	       534	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_3
0x4002157	      0xe95bfeffff	                           jmp 0x4001fb7	       534	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_3
0x400215c	         0xf1f4000	                         nop dword [rax]	       534	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_3
0x4002160	              0x5b	                                 pop rbx	       680	ui.c	FUNCTION_22
0x4002161	      0xe900000000	                           jmp 0x4002166	      1537	ui.c	FUNCTION_41	CALL_1
0x4002166	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1537	ui.c	FUNCTION_41	CALL_1
0x4002170	      0xbf00000000	                              mov edi, 0	       595	ui.c	FUNCTION_18	IF_1	CALL_4
0x4002175	      0xe800000000	                          call 0x400217a	       595	ui.c	FUNCTION_18	IF_1	CALL_4
0x400217a	      0xe940feffff	                           jmp 0x4001fbf	       595	ui.c	FUNCTION_18	IF_1	CALL_4
0x400217f	              0x90	                                     nop	       595	ui.c	FUNCTION_18	IF_1	CALL_4
0x4002180	    0x8b0500000000	            mov eax, dword [0x04002186] 	      1495	ui.c	FUNCTION_39	IF_1
0x4002186	    0x8b1d00000000	            mov ebx, dword [0x0400218c] 	       524	ui.c	FUNCTION_16	IF_1
0x400218c	      0xbf00000000	                              mov edi, 0	      1496	ui.c	FUNCTION_39	CALL_1
0x4002191	            0x85c0	                           test eax, eax	      1495	ui.c	FUNCTION_39	IF_1
0x4002193	     0xf85ab000000	                           jne 0x4002244	      1495	ui.c	FUNCTION_39	IF_1
0x4002199	      0xe800000000	                          call 0x400219e	      1499	ui.c	FUNCTION_39	CALL_2
0x400219e	          0x83f801	                              cmp eax, 1	       526	ui.c	FUNCTION_16	IF_1	CALL_1
0x40021a1	           0xf94c2	                                 sete dl	       526	ui.c	FUNCTION_16	IF_1	CALL_1
0x40021a4	            0x85db	                           test ebx, ebx	       532	ui.c	FUNCTION_16	IF_1	IF_2	IF_3
0x40021a6	           0xfb6c2	                           movzx eax, dl	       526	ui.c	FUNCTION_16	IF_1	CALL_1
0x40021a9	    0x890500000000	            mov dword [0x040021af], eax 	       526	ui.c	FUNCTION_16	IF_1	CALL_1
0x40021af	     0xf85e3feffff	                           jne 0x4002098	       532	ui.c	FUNCTION_16	IF_1	IF_2	IF_3
0x40021b5	            0x84d2	                             test dl, dl	       532	ui.c	FUNCTION_16	IF_1	IF_2	IF_3
0x40021b7	     0xf84dbfeffff	                            je 0x4002098	       532	ui.c	FUNCTION_16	IF_1	IF_2	IF_3
0x40021bd	      0xe800000000	                          call 0x40021c2	       533	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_2
0x40021c2	          0x83f802	                              cmp eax, 2	       533	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_2
0x40021c5	            0x7410	                            je 0x40021d7	       533	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_2
0x40021c7	      0xe800000000	                          call 0x40021cc	       534	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_3
0x40021cc	      0x3d00100000	                         cmp eax, 0x1000	       534	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_3
0x40021d1	     0xf85bbfeffff	                           jne 0x4002092	       534	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_3
0x40021d7	      0xbf00000000	                              mov edi, 0	       534	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_3
0x40021dc	      0xe8dfe8ffff	      call sym.clip_own_selection.part.7	       534	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_3
0x40021e1	    0x8b0500000000	            mov eax, dword [0x040021e7] 	       534	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_3
0x40021e7	      0xe9acfeffff	                           jmp 0x4002098	       534	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_3
0x40021ec	         0xf1f4000	                         nop dword [rax]	       534	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_3
0x40021f0	      0xe800000000	                          call 0x40021f5	      1537	ui.c	FUNCTION_41	CALL_1
0x40021f5	      0xe946feffff	                           jmp 0x4002040	      1537	ui.c	FUNCTION_41	CALL_1
0x40021fa	    0x660f1f440000	                    nop word [rax + rax]	      1537	ui.c	FUNCTION_41	CALL_1
0x4002200	      0xbf00000000	                              mov edi, 0	       595	ui.c	FUNCTION_18	IF_1	CALL_4
0x4002205	      0xe800000000	                          call 0x400220a	       595	ui.c	FUNCTION_18	IF_1	CALL_4
0x400220a	      0xe991feffff	                           jmp 0x40020a0	       595	ui.c	FUNCTION_18	IF_1	CALL_4
0x400220f	            0xa801	                              test al, 1	      1528	ui.c	FUNCTION_41	IF_1	IF_2
0x4002211	     0xf84d2fdffff	                            je 0x4001fe9	      1528	ui.c	FUNCTION_41	IF_1	IF_2
0x4002217	    0xc70500000000	               mov dword [0x04002221], 1	      1530	ui.c	FUNCTION_41	IF_1	IF_2
0x4002221	              0x5b	                                 pop rbx	       680	ui.c	FUNCTION_22
0x4002222	              0xc3	                                     ret	       680	ui.c	FUNCTION_22
0x4002223	            0xa802	                              test al, 2	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x4002225	     0xf8498feffff	                            je 0x40020c3	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x400222b	    0xc70500000000	               mov dword [0x04002235], 1	      1530	ui.c	FUNCTION_41	IF_1	IF_2
0x4002235	      0xe906feffff	                           jmp 0x4002040	      1530	ui.c	FUNCTION_41	IF_1	IF_2
0x400223a	      0xe800000000	                          call 0x400223f	      1496	ui.c	FUNCTION_39	CALL_1
0x400223f	      0xe9cafeffff	                           jmp 0x400210e	      1496	ui.c	FUNCTION_39	CALL_1
0x4002244	      0xe800000000	                          call 0x4002249	      1496	ui.c	FUNCTION_39	CALL_1
0x4002249	      0xe950ffffff	                           jmp 0x400219e	      1496	ui.c	FUNCTION_39	CALL_1
set_input_buf	IF,2:DO,0:functions,0:FOR,0:CALL,3:SWITCH,0:WHILE,0:ELSE,0	20
0x4003fa0	          0x4885ff	                           test rdi, rdi	      1678	ui.c	FUNCTION_49	IF_1
0x4003fa3	            0x743b	                            je 0x4003fe0	      1678	ui.c	FUNCTION_49	IF_1
0x4003fa5	              0x53	                                push rbx	      1675	ui.c	FUNCTION_49
0x4003fa6	        0x488b7710	            mov rsi, qword [rdi + 0x10] 	      1680	ui.c	FUNCTION_49	IF_1	IF_2
0x4003faa	          0x4889fb	                            mov rbx, rdi	      1680	ui.c	FUNCTION_49	IF_1	IF_2
0x4003fad	          0x4885f6	                           test rsi, rsi	      1680	ui.c	FUNCTION_49	IF_1	IF_2
0x4003fb0	            0x7423	                            je 0x4003fd5	      1680	ui.c	FUNCTION_49	IF_1	IF_2
0x4003fb2	          0x486317	                 movsxd rdx, dword [rdi]	        59	string3.h	FUNCTION_83	CALL_3
0x4003fb5	      0xb906100000	                         mov ecx, 0x1006	        59	string3.h	FUNCTION_83	CALL_3
0x4003fba	      0xbf00000000	                              mov edi, 0	        59	string3.h	FUNCTION_83	CALL_3
0x4003fbf	      0xe800000000	                          call 0x4003fc4	        59	string3.h	FUNCTION_83	CALL_3
0x4003fc4	            0x8b03	                    mov eax, dword [rbx]	      1683	ui.c	FUNCTION_49	IF_1	IF_2
0x4003fc6	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      1684	ui.c	FUNCTION_49	IF_1	IF_2	CALL_2
0x4003fca	    0x890500000000	            mov dword [0x04003fd0], eax 	      1683	ui.c	FUNCTION_49	IF_1	IF_2
0x4003fd0	      0xe800000000	                          call 0x4003fd5	      1684	ui.c	FUNCTION_49	IF_1	IF_2	CALL_2
0x4003fd5	          0x4889df	                            mov rdi, rbx	      1686	ui.c	FUNCTION_49	IF_1	CALL_3
0x4003fd8	              0x5b	                                 pop rbx	      1688	ui.c	FUNCTION_49
0x4003fd9	      0xe900000000	                           jmp 0x4003fde	      1686	ui.c	FUNCTION_49	IF_1	CALL_3
0x4003fde	            0x6690	                                     nop	      1686	ui.c	FUNCTION_49	IF_1	CALL_3
0x4003fe0	            0xf3c3	                                     ret	      1686	ui.c	FUNCTION_49	IF_1	CALL_3
clip_x11_set_selection	IF,0:DO,0:functions,0:FOR,0:CALL,0:SWITCH,0:WHILE,0:ELSE,0	1
0x4004ec0	            0xf3c3	                                     ret	      2546	ui.c	FUNCTION_72
ui_cursor_shape	IF,0:DO,0:functions,0:FOR,0:CALL,1:SWITCH,0:WHILE,0:ELSE,0	12
0x4004c50	        0x4883ec08	                              sub rsp, 8	      1980	ui.c	FUNCTION_58
0x4004c54	    0x8b0500000000	            mov eax, dword [0x04004c5a] 	      1963	ui.c	FUNCTION_57	IF_1
0x4004c5a	            0x85c0	                           test eax, eax	      1963	ui.c	FUNCTION_57	IF_1
0x4004c5c	            0x7512	                           jne 0x4004c70	      1963	ui.c	FUNCTION_57	IF_1
0x4004c5e	            0x31ff	                            xor edi, edi	      1967	ui.c	FUNCTION_57	CALL_2
0x4004c60	      0xe800000000	                          call 0x4004c65	      1967	ui.c	FUNCTION_57	CALL_2
0x4004c65	        0x4883c408	                              add rsp, 8	      1982	ui.c	FUNCTION_58
0x4004c69	      0xe900000000	                           jmp 0x4004c6e	      1974	ui.c	FUNCTION_57	CALL_4
0x4004c6e	            0x6690	                                     nop	      1974	ui.c	FUNCTION_57	CALL_4
0x4004c70	      0xe800000000	                          call 0x4004c75	      1964	ui.c	FUNCTION_57	CALL_1
0x4004c75	        0x4883c408	                              add rsp, 8	      1982	ui.c	FUNCTION_58
0x4004c79	      0xe900000000	                           jmp 0x4004c7e	      1974	ui.c	FUNCTION_57	CALL_4
clip_x11_own_selection	IF,3:DO,0:functions,0:FOR,0:CALL,8:SWITCH,0:WHILE,0:ELSE,1	60
0x4004e00	            0x4155	                                push r13	      2514	ui.c	FUNCTION_71
0x4004e02	            0x4154	                                push r12	      2514	ui.c	FUNCTION_71
0x4004e04	              0x55	                                push rbp	      2514	ui.c	FUNCTION_71
0x4004e05	              0x53	                                push rbx	      2514	ui.c	FUNCTION_71
0x4004e06	          0x4889f5	                            mov rbp, rsi	      2514	ui.c	FUNCTION_71
0x4004e09	          0x4889fb	                            mov rbx, rdi	      2514	ui.c	FUNCTION_71
0x4004e0c	        0x4883ec08	                              sub rsp, 8	      2514	ui.c	FUNCTION_71
0x4004e10	    0x8b3500000000	            mov esi, dword [0x04004e16] 	      2520	ui.c	FUNCTION_71	IF_1
0x4004e16	            0x85f6	                           test esi, esi	      2520	ui.c	FUNCTION_71	IF_1
0x4004e18	            0x7456	                            je 0x4004e70	      2520	ui.c	FUNCTION_71	IF_1
0x4004e1a	      0xe800000000	                          call 0x4004e1f	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4004e1f	          0x4889c7	                            mov rdi, rax	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4004e22	      0xe800000000	                          call 0x4004e27	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4004e27	        0x488b7550	            mov rsi, qword [rbp + 0x50] 	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4004e2b	    0x41b900000000	                              mov r9d, 0	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4004e31	    0x41b800000000	                              mov r8d, 0	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4004e37	      0xb900000000	                              mov ecx, 0	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4004e3c	          0x4889c2	                            mov rdx, rax	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4004e3f	          0x4889df	                            mov rdi, rbx	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4004e42	      0xe800000000	                          call 0x4004e47	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4004e47	            0x84c0	                             test al, al	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4004e49	            0x7467	                            je 0x4004eb2	      2522	ui.c	FUNCTION_71	IF_1	IF_2	CALL_1
0x4004e4b	          0x4889df	                            mov rdi, rbx	      2536	ui.c	FUNCTION_71	CALL_8
0x4004e4e	      0xe800000000	                          call 0x4004e53	      2536	ui.c	FUNCTION_71	CALL_8
0x4004e53	          0x4889c7	                            mov rdi, rax	      2536	ui.c	FUNCTION_71	CALL_8
0x4004e56	      0xe800000000	                          call 0x4004e5b	      2536	ui.c	FUNCTION_71	CALL_8
0x4004e5b	        0x4883c408	                              add rsp, 8	      2538	ui.c	FUNCTION_71
0x4004e5f	      0xb801000000	                              mov eax, 1	      2537	ui.c	FUNCTION_71
0x4004e64	              0x5b	                                 pop rbx	      2538	ui.c	FUNCTION_71
0x4004e65	              0x5d	                                 pop rbp	      2538	ui.c	FUNCTION_71
0x4004e66	            0x415c	                                 pop r12	      2538	ui.c	FUNCTION_71
0x4004e68	            0x415d	                                 pop r13	      2538	ui.c	FUNCTION_71
0x4004e6a	              0xc3	                                     ret	      2538	ui.c	FUNCTION_71
0x4004e6b	       0xf1f440000	                   nop dword [rax + rax]	      2538	ui.c	FUNCTION_71
0x4004e70	        0x4c8b6550	            mov r12, qword [rbp + 0x50] 	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4004e74	    0x4c8b2d000000	            mov r13, qword [0x04004e7b] 	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4004e7b	      0xe800000000	                          call 0x4004e80	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4004e80	          0x4889df	                            mov rdi, rbx	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4004e83	          0x4889c5	                            mov rbp, rax	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4004e86	      0xe800000000	                          call 0x4004e8b	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4004e8b	            0x6a00	                                  push 0	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4004e8d	            0x6a00	                                  push 0	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4004e8f	          0x4c89e9	                            mov rcx, r13	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4004e92	          0x4c89e2	                            mov rdx, r12	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4004e95	    0x41b902000000	                              mov r9d, 2	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4004e9b	    0x41b820000000	                           mov r8d, 0x20	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4004ea1	          0x4889ee	                            mov rsi, rbp	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4004ea4	          0x4889c7	                            mov rdi, rax	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4004ea7	      0xe800000000	                          call 0x4004eac	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4004eac	            0x85c0	                           test eax, eax	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4004eae	              0x5a	                                 pop rdx	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4004eaf	              0x59	                                 pop rcx	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4004eb0	            0x7599	                           jne 0x4004e4b	      2531	ui.c	FUNCTION_71	ELSE_1	IF_3	CALL_6
0x4004eb2	        0x4883c408	                              add rsp, 8	      2538	ui.c	FUNCTION_71
0x4004eb6	            0x31c0	                            xor eax, eax	      2526	ui.c	FUNCTION_71	IF_1	IF_2
0x4004eb8	              0x5b	                                 pop rbx	      2538	ui.c	FUNCTION_71
0x4004eb9	              0x5d	                                 pop rbp	      2538	ui.c	FUNCTION_71
0x4004eba	            0x415c	                                 pop r12	      2538	ui.c	FUNCTION_71
0x4004ebc	            0x415d	                                 pop r13	      2538	ui.c	FUNCTION_71
0x4004ebe	              0xc3	                                     ret	      2538	ui.c	FUNCTION_71
ui_new_shellsize	IF,2:DO,0:functions,0:FOR,0:CALL,2:SWITCH,0:WHILE,0:ELSE,1	14
0x40014d0	    0x8b0500000000	            mov eax, dword [0x040014d6] 	       382	ui.c	FUNCTION_11	IF_1
0x40014d6	            0x85c0	                           test eax, eax	       382	ui.c	FUNCTION_11	IF_1
0x40014d8	            0x741e	                            je 0x40014f8	       382	ui.c	FUNCTION_11	IF_1
0x40014da	    0x8b1500000000	            mov edx, dword [0x040014e0] 	       382	ui.c	FUNCTION_11	IF_1
0x40014e0	            0x85d2	                           test edx, edx	       382	ui.c	FUNCTION_11	IF_1
0x40014e2	            0x7514	                           jne 0x40014f8	       382	ui.c	FUNCTION_11	IF_1
0x40014e4	    0x8b0500000000	            mov eax, dword [0x040014ea] 	       385	ui.c	FUNCTION_11	IF_1	IF_2
0x40014ea	            0x85c0	                           test eax, eax	       385	ui.c	FUNCTION_11	IF_1	IF_2
0x40014ec	            0x7512	                           jne 0x4001500	       385	ui.c	FUNCTION_11	IF_1	IF_2
0x40014ee	      0xe900000000	                           jmp 0x40014f3	       389	ui.c	FUNCTION_11	IF_1	CALL_2
0x40014f3	       0xf1f440000	                   nop dword [rax + rax]	       389	ui.c	FUNCTION_11	IF_1	CALL_2
0x40014f8	            0xf3c3	                                     ret	       389	ui.c	FUNCTION_11	IF_1	CALL_2
0x40014fa	    0x660f1f440000	                    nop word [rax + rax]	       389	ui.c	FUNCTION_11	IF_1	CALL_2
0x4001500	      0xe900000000	                           jmp 0x4001505	       386	ui.c	FUNCTION_11	IF_1	CALL_1
ui_inchar_undo	IF,3:DO,0:functions,0:FOR,0:CALL,5:SWITCH,0:WHILE,0:ELSE,1	58
0x4001160	            0x4157	                                push r15	        77	ui.c	FUNCTION_2
0x4001162	            0x4156	                                push r14	        77	ui.c	FUNCTION_2
0x4001164	            0x4155	                                push r13	        77	ui.c	FUNCTION_2
0x4001166	            0x4154	                                push r12	        77	ui.c	FUNCTION_2
0x4001168	          0x4189f5	                           mov r13d, esi	        77	ui.c	FUNCTION_2
0x400116b	              0x55	                                push rbp	        77	ui.c	FUNCTION_2
0x400116c	              0x53	                                push rbx	        77	ui.c	FUNCTION_2
0x400116d	          0x4989fc	                            mov r12, rdi	        77	ui.c	FUNCTION_2
0x4001170	            0x89f5	                            mov ebp, esi	        83	ui.c	FUNCTION_2	IF_1
0x4001172	        0x4883ec18	                           sub rsp, 0x18	        77	ui.c	FUNCTION_2
0x4001176	    0x48833d000000	               cmp qword [0x0400117e], 0	        82	ui.c	FUNCTION_2	IF_1
0x400117e	            0x740c	                            je 0x400118c	        82	ui.c	FUNCTION_2	IF_1
0x4001180	    0x2b2d00000000	             sub ebp, dword [0x04001186]	        83	ui.c	FUNCTION_2	IF_1
0x4001186	     0x32d00000000	             add ebp, dword [0x0400118c]	        83	ui.c	FUNCTION_2	IF_1
0x400118c	            0x89ef	                            mov edi, ebp	        84	ui.c	FUNCTION_2	CALL_1
0x400118e	      0xe800000000	                          call 0x4001193	        84	ui.c	FUNCTION_2	CALL_1
0x4001193	          0x4885c0	                           test rax, rax	        85	ui.c	FUNCTION_2	IF_2
0x4001196	          0x4989c6	                            mov r14, rax	        84	ui.c	FUNCTION_2	CALL_1
0x4001199	            0x746d	                            je 0x4001208	        85	ui.c	FUNCTION_2	IF_2
0x400119b	    0x4c8b3d000000	            mov r15, qword [0x040011a2] 	        87	ui.c	FUNCTION_2	IF_2	IF_3
0x40011a2	          0x4d85ff	                           test r15, r15	        87	ui.c	FUNCTION_2	IF_2	IF_3
0x40011a5	            0x7479	                            je 0x4001220	        87	ui.c	FUNCTION_2	IF_2	IF_3
0x40011a7	    0x48630d000000	         movsxd rcx, dword [0x040011ae] 	        89	ui.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x40011ae	    0x8b1d00000000	            mov ebx, dword [0x040011b4] 	        89	ui.c	FUNCTION_2	IF_2	IF_3	CALL_2
0x40011b4	          0x4c89f7	                            mov rdi, r14	        59	string3.h	FUNCTION_83	CALL_3
0x40011b7	            0x89da	                            mov edx, ebx	        59	string3.h	FUNCTION_83	CALL_3
0x40011b9	            0x29ca	                            sub edx, ecx	        59	string3.h	FUNCTION_83	CALL_3
0x40011bb	        0x498d340f	                    lea rsi, [r15 + rcx]	        59	string3.h	FUNCTION_83	CALL_3
0x40011bf	      0x48894c2408	                mov qword [rsp + 8], rcx	        59	string3.h	FUNCTION_83	CALL_3
0x40011c4	          0x4863d2	                         movsxd rdx, edx	        59	string3.h	FUNCTION_83	CALL_3
0x40011c7	      0xe800000000	                          call 0x40011cc	        59	string3.h	FUNCTION_83	CALL_3
0x40011cc	      0x488b4c2408	                mov rcx, qword [rsp + 8]	        59	string3.h	FUNCTION_83	CALL_3
0x40011d1	          0x4863fb	                         movsxd rdi, ebx	        59	string3.h	FUNCTION_83	CALL_3
0x40011d4	          0x4963d5	                        movsxd rdx, r13d	        59	string3.h	FUNCTION_83	CALL_3
0x40011d7	          0x4889fb	                            mov rbx, rdi	        59	string3.h	FUNCTION_83	CALL_3
0x40011da	          0x4c89e6	                            mov rsi, r12	        59	string3.h	FUNCTION_83	CALL_3
0x40011dd	          0x4829cb	                            sub rbx, rcx	        59	string3.h	FUNCTION_83	CALL_3
0x40011e0	        0x498d3c1e	                    lea rdi, [r14 + rbx]	        59	string3.h	FUNCTION_83	CALL_3
0x40011e4	      0xe800000000	                          call 0x40011e9	        59	string3.h	FUNCTION_83	CALL_3
0x40011e9	          0x4c89ff	                            mov rdi, r15	        91	ui.c	FUNCTION_2	IF_2	IF_3	CALL_4
0x40011ec	      0xe800000000	                          call 0x40011f1	        91	ui.c	FUNCTION_2	IF_2	IF_3	CALL_4
0x40011f1	    0x4c8935000000	            mov qword [0x040011f8], r14 	        95	ui.c	FUNCTION_2	IF_2
0x40011f8	    0x892d00000000	            mov dword [0x040011fe], ebp 	        96	ui.c	FUNCTION_2	IF_2
0x40011fe	    0xc70500000000	               mov dword [0x04001208], 0	        97	ui.c	FUNCTION_2	IF_2
0x4001208	        0x4883c418	                           add rsp, 0x18	        99	ui.c	FUNCTION_2
0x400120c	              0x5b	                                 pop rbx	        99	ui.c	FUNCTION_2
0x400120d	              0x5d	                                 pop rbp	        99	ui.c	FUNCTION_2
0x400120e	            0x415c	                                 pop r12	        99	ui.c	FUNCTION_2
0x4001210	            0x415d	                                 pop r13	        99	ui.c	FUNCTION_2
0x4001212	            0x415e	                                 pop r14	        99	ui.c	FUNCTION_2
0x4001214	            0x415f	                                 pop r15	        99	ui.c	FUNCTION_2
0x4001216	              0xc3	                                     ret	        99	ui.c	FUNCTION_2
0x4001217	    0x660f1f840000	                    nop word [rax + rax]	        99	ui.c	FUNCTION_2
0x4001220	          0x4963d5	                        movsxd rdx, r13d	        59	string3.h	FUNCTION_83	CALL_3
0x4001223	          0x4c89e6	                            mov rsi, r12	        59	string3.h	FUNCTION_83	CALL_3
0x4001226	          0x4889c7	                            mov rdi, rax	        59	string3.h	FUNCTION_83	CALL_3
0x4001229	      0xe800000000	                          call 0x400122e	        59	string3.h	FUNCTION_83	CALL_3
0x400122e	            0xebc1	                           jmp 0x40011f1	        59	string3.h	FUNCTION_83	CALL_3
ui_suspend	IF,1:DO,0:functions,0:FOR,0:CALL,2:SWITCH,0:WHILE,0:ELSE,0	6
0x4001430	    0x8b0500000000	            mov eax, dword [0x04001436] 	       303	ui.c	FUNCTION_7	IF_1
0x4001436	            0x85c0	                           test eax, eax	       303	ui.c	FUNCTION_7	IF_1
0x4001438	            0x7506	                           jne 0x4001440	       303	ui.c	FUNCTION_7	IF_1
0x400143a	      0xe900000000	                           jmp 0x400143f	       309	ui.c	FUNCTION_7	CALL_2
0x400143f	              0x90	                                     nop	       309	ui.c	FUNCTION_7	CALL_2
0x4001440	      0xe900000000	                           jmp 0x4001445	       305	ui.c	FUNCTION_7	IF_1	CALL_1
ui_write	IF,6:DO,0:functions,0:FOR,0:CALL,5:SWITCH,0:WHILE,0:ELSE,0	63
0x4001070	              0x55	                                push rbp	        29	ui.c	FUNCTION_1
0x4001071	              0x53	                                push rbx	        29	ui.c	FUNCTION_1
0x4001072	          0x4889fb	                            mov rbx, rdi	        29	ui.c	FUNCTION_1
0x4001075	        0x4883ec18	                           sub rsp, 0x18	        29	ui.c	FUNCTION_1
0x4001079	    0x448b0d000000	            mov r9d, dword [0x04001080] 	        31	ui.c	FUNCTION_1	IF_1
0x4001080	        0x8974240c	              mov dword [rsp + 0xc], esi	        29	ui.c	FUNCTION_1
0x4001084	          0x4585c9	                           test r9d, r9d	        31	ui.c	FUNCTION_1	IF_1
0x4001087	            0x741f	                            je 0x40010a8	        31	ui.c	FUNCTION_1	IF_1
0x4001089	    0x448b05000000	            mov r8d, dword [0x04001090] 	        31	ui.c	FUNCTION_1	IF_1
0x4001090	          0x4585c0	                           test r8d, r8d	        31	ui.c	FUNCTION_1	IF_1
0x4001093	            0x7513	                           jne 0x40010a8	        31	ui.c	FUNCTION_1	IF_1
0x4001095	    0x8b3d00000000	            mov edi, dword [0x0400109b] 	        31	ui.c	FUNCTION_1	IF_1
0x400109b	            0x85ff	                           test edi, edi	        31	ui.c	FUNCTION_1	IF_1
0x400109d	     0xf848d000000	                            je 0x4001130	        31	ui.c	FUNCTION_1	IF_1
0x40010a3	       0xf1f440000	                   nop dword [rax + rax]	        31	ui.c	FUNCTION_1	IF_1
0x40010a8	    0x8b0d00000000	            mov ecx, dword [0x040010ae] 	        41	ui.c	FUNCTION_1	IF_3
0x40010ae	            0x85c9	                           test ecx, ecx	        41	ui.c	FUNCTION_1	IF_3
0x40010b0	            0x752e	                           jne 0x40010e0	        41	ui.c	FUNCTION_1	IF_3
0x40010b2	    0x8b1500000000	            mov edx, dword [0x040010b8] 	        46	ui.c	FUNCTION_1	IF_3	IF_4
0x40010b8	            0x31ed	                            xor ebp, ebp	        44	ui.c	FUNCTION_1	IF_3
0x40010ba	            0x85d2	                           test edx, edx	        46	ui.c	FUNCTION_1	IF_3	IF_4
0x40010bc	            0x7538	                           jne 0x40010f6	        46	ui.c	FUNCTION_1	IF_3	IF_4
0x40010be	        0x8b74240c	              mov esi, dword [rsp + 0xc]	        55	ui.c	FUNCTION_1	IF_3	CALL_4
0x40010c2	          0x4889df	                            mov rdi, rbx	        55	ui.c	FUNCTION_1	IF_3	CALL_4
0x40010c5	      0xe800000000	                          call 0x40010ca	        55	ui.c	FUNCTION_1	IF_3	CALL_4
0x40010ca	    0x8b0500000000	            mov eax, dword [0x040010d0] 	        58	ui.c	FUNCTION_1	IF_3	IF_6
0x40010d0	            0x85c0	                           test eax, eax	        58	ui.c	FUNCTION_1	IF_3	IF_6
0x40010d2	            0x7544	                           jne 0x4001118	        58	ui.c	FUNCTION_1	IF_3	IF_6
0x40010d4	        0x4883c418	                           add rsp, 0x18	        63	ui.c	FUNCTION_1
0x40010d8	              0x5b	                                 pop rbx	        63	ui.c	FUNCTION_1
0x40010d9	              0x5d	                                 pop rbp	        63	ui.c	FUNCTION_1
0x40010da	              0xc3	                                     ret	        63	ui.c	FUNCTION_1
0x40010db	       0xf1f440000	                   nop dword [rax + rax]	        63	ui.c	FUNCTION_1
0x40010e0	    0x48833d000000	               cmp qword [0x040010e8], 0	        41	ui.c	FUNCTION_1	IF_3
0x40010e8	            0x74ea	                            je 0x40010d4	        41	ui.c	FUNCTION_1	IF_3
0x40010ea	    0x8b1500000000	            mov edx, dword [0x040010f0] 	        46	ui.c	FUNCTION_1	IF_3	IF_4
0x40010f0	            0x31ed	                            xor ebp, ebp	        44	ui.c	FUNCTION_1	IF_3
0x40010f2	            0x85d2	                           test edx, edx	        46	ui.c	FUNCTION_1	IF_3	IF_4
0x40010f4	            0x74c8	                            je 0x40010be	        46	ui.c	FUNCTION_1	IF_3	IF_4
0x40010f6	      0x488d54240c	                    lea rdx, [rsp + 0xc]	        49	ui.c	FUNCTION_1	IF_3	IF_4	CALL_3
0x40010fb	          0x4889de	                            mov rsi, rbx	        49	ui.c	FUNCTION_1	IF_3	IF_4	CALL_3
0x40010fe	      0xbf00000000	                              mov edi, 0	        49	ui.c	FUNCTION_1	IF_3	IF_4	CALL_3
0x4001103	      0xe800000000	                          call 0x4001108	        49	ui.c	FUNCTION_1	IF_3	IF_4	CALL_3
0x4001108	          0x4885c0	                           test rax, rax	        50	ui.c	FUNCTION_1	IF_3	IF_4	IF_5
0x400110b	          0x4889c5	                            mov rbp, rax	        49	ui.c	FUNCTION_1	IF_3	IF_4	CALL_3
0x400110e	        0x480f45d8	                         cmovne rbx, rax	        50	ui.c	FUNCTION_1	IF_3	IF_4	IF_5
0x4001112	            0xebaa	                           jmp 0x40010be	        50	ui.c	FUNCTION_1	IF_3	IF_4	IF_5
0x4001114	         0xf1f4000	                         nop dword [rax]	        50	ui.c	FUNCTION_1	IF_3	IF_4	IF_5
0x4001118	          0x4889ef	                            mov rdi, rbp	        59	ui.c	FUNCTION_1	IF_3	CALL_5
0x400111b	      0xe800000000	                          call 0x4001120	        59	ui.c	FUNCTION_1	IF_3	CALL_5
0x4001120	        0x4883c418	                           add rsp, 0x18	        63	ui.c	FUNCTION_1
0x4001124	              0x5b	                                 pop rbx	        63	ui.c	FUNCTION_1
0x4001125	              0x5d	                                 pop rbp	        63	ui.c	FUNCTION_1
0x4001126	              0xc3	                                     ret	        63	ui.c	FUNCTION_1
0x4001127	    0x660f1f840000	                    nop word [rax + rax]	        63	ui.c	FUNCTION_1
0x4001130	          0x4889df	                            mov rdi, rbx	        33	ui.c	FUNCTION_1	IF_1	CALL_1
0x4001133	      0xe800000000	                          call 0x4001138	        33	ui.c	FUNCTION_1	IF_1	CALL_1
0x4001138	    0x488b3d000000	            mov rdi, qword [0x0400113f] 	        34	ui.c	FUNCTION_1	IF_1	IF_2
0x400113f	          0x4885ff	                           test rdi, rdi	        34	ui.c	FUNCTION_1	IF_1	IF_2
0x4001142	            0x7490	                            je 0x40010d4	        34	ui.c	FUNCTION_1	IF_1	IF_2
0x4001144	    0x8b3500000000	            mov esi, dword [0x0400114a] 	        35	ui.c	FUNCTION_1	IF_1	CALL_2
0x400114a	      0xe800000000	                          call 0x400114f	        35	ui.c	FUNCTION_1	IF_1	CALL_2
0x400114f	            0xeb83	                           jmp 0x40010d4	        35	ui.c	FUNCTION_1	IF_1	CALL_2
clip_gen_owner_exists	IF,1:DO,0:functions,0:FOR,0:CALL,2:SWITCH,0:WHILE,0:ELSE,1	14
0x4003ec0	    0x8b0500000000	            mov eax, dword [0x04003ec6] 	      1566	ui.c	FUNCTION_43	IF_1
0x4003ec6	            0x85c0	                           test eax, eax	      1566	ui.c	FUNCTION_43	IF_1
0x4003ec8	            0x7526	                           jne 0x4003ef0	      1566	ui.c	FUNCTION_43	IF_1
0x4003eca	        0x4883ec08	                              sub rsp, 8	      1563	ui.c	FUNCTION_43
0x4003ece	        0x488b7750	            mov rsi, qword [rdi + 0x50] 	      2552	ui.c	FUNCTION_73	CALL_1
0x4003ed2	    0x488b3d000000	            mov rdi, qword [0x04003ed9] 	      2552	ui.c	FUNCTION_73	CALL_1
0x4003ed9	      0xe800000000	                          call 0x4003ede	      2552	ui.c	FUNCTION_73	CALL_1
0x4003ede	          0x4885c0	                           test rax, rax	      2552	ui.c	FUNCTION_73	CALL_1
0x4003ee1	           0xf95c0	                                setne al	      2552	ui.c	FUNCTION_73	CALL_1
0x4003ee4	        0x4883c408	                              add rsp, 8	      1574	ui.c	FUNCTION_43
0x4003ee8	           0xfb6c0	                           movzx eax, al	      2552	ui.c	FUNCTION_73	CALL_1
0x4003eeb	              0xc3	                                     ret	      1574	ui.c	FUNCTION_43
0x4003eec	         0xf1f4000	                         nop dword [rax]	      1574	ui.c	FUNCTION_43
0x4003ef0	      0xe900000000	                           jmp 0x4003ef5	      1567	ui.c	FUNCTION_43	CALL_1
mouse_comp_pos	IF,9:DO,0:functions,0:FOR,0:CALL,9:SWITCH,0:WHILE,1:ELSE,2	127
0x4005250	            0x4157	                                push r15	      3077	ui.c	FUNCTION_76
0x4005252	            0x4156	                                push r14	      3077	ui.c	FUNCTION_76
0x4005254	          0x4989fe	                            mov r14, rdi	      3077	ui.c	FUNCTION_76
0x4005257	            0x4155	                                push r13	      3077	ui.c	FUNCTION_76
0x4005259	            0x4154	                                push r12	      3077	ui.c	FUNCTION_76
0x400525b	          0x4989d5	                            mov r13, rdx	      3077	ui.c	FUNCTION_76
0x400525e	              0x55	                                push rbp	      3077	ui.c	FUNCTION_76
0x400525f	              0x53	                                push rbx	      3077	ui.c	FUNCTION_76
0x4005260	          0x4989f4	                            mov r12, rsi	      3077	ui.c	FUNCTION_76
0x4005263	        0x4883ec28	                           sub rsp, 0x28	      3077	ui.c	FUNCTION_76
0x4005267	            0x8b2a	                    mov ebp, dword [rdx]	      3078	ui.c	FUNCTION_76
0x4005269	            0x8b1e	                    mov ebx, dword [rsi]	      3079	ui.c	FUNCTION_76
0x400526b	      0x48894c2408	                mov qword [rsp + 8], rcx	      3077	ui.c	FUNCTION_76
0x4005270	    0x8b8f54020000	           mov ecx, dword [rdi + 0x254] 	      3086	ui.c	FUNCTION_76	IF_1
0x4005276	    0x64488b042528	                mov rax, qword fs:[0x28]	      3077	ui.c	FUNCTION_76
0x400527f	      0x4889442418	             mov qword [rsp + 0x18], rax	      3077	ui.c	FUNCTION_76
0x4005284	            0x31c0	                            xor eax, eax	      3077	ui.c	FUNCTION_76
0x4005286	            0x85c9	                           test ecx, ecx	      3086	ui.c	FUNCTION_76	IF_1
0x4005288	            0x7408	                            je 0x4005292	      3086	ui.c	FUNCTION_76	IF_1
0x400528a	            0xf7d5	                                 not ebp	      3087	ui.c	FUNCTION_76	IF_1
0x400528c	     0x3afac000000	             add ebp, dword [rdi + 0xac]	      3087	ui.c	FUNCTION_76	IF_1
0x4005292	        0x498b7678	            mov rsi, qword [r14 + 0x78] 	      3090	ui.c	FUNCTION_76
0x4005296	            0x85db	                           test ebx, ebx	      3092	ui.c	FUNCTION_76	WHILE_1
0x4005298	      0x4889742410	             mov qword [rsp + 0x10], rsi	      3090	ui.c	FUNCTION_76
0x400529d	            0x7f64	                            jg 0x4005303	      3092	ui.c	FUNCTION_76	WHILE_1
0x400529f	      0xe9bc000000	                           jmp 0x4005360	      3092	ui.c	FUNCTION_76	WHILE_1
0x40052a4	         0xf1f4000	                         nop dword [rax]	      3092	ui.c	FUNCTION_76	WHILE_1
0x40052a8	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3092	ui.c	FUNCTION_76	WHILE_1
0x40052ad	      0xba01000000	                              mov edx, 1	      3110	ui.c	FUNCTION_76	WHILE_1	CALL_4
0x40052b2	          0x4c89f7	                            mov rdi, r14	      3110	ui.c	FUNCTION_76	WHILE_1	CALL_4
0x40052b5	      0xe800000000	                          call 0x40052ba	      3110	ui.c	FUNCTION_76	WHILE_1	CALL_4
0x40052ba	          0x4189c7	                           mov r15d, eax	      3110	ui.c	FUNCTION_76	WHILE_1	CALL_4
0x40052bd	          0x4439fb	                           cmp ebx, r15d	      3111	ui.c	FUNCTION_76	WHILE_1	IF_4
0x40052c0	     0xf8c9a000000	                            jl 0x4005360	      3111	ui.c	FUNCTION_76	WHILE_1	IF_4
0x40052c6	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3114	ui.c	FUNCTION_76	WHILE_1	CALL_5
0x40052cb	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	      3114	ui.c	FUNCTION_76	WHILE_1	CALL_5
0x40052d0	          0x4531c9	                            xor r9d, r9d	      3114	ui.c	FUNCTION_76	WHILE_1	CALL_5
0x40052d3	            0x31d2	                            xor edx, edx	      3114	ui.c	FUNCTION_76	WHILE_1	CALL_5
0x40052d5	    0x41b801000000	                              mov r8d, 1	      3114	ui.c	FUNCTION_76	WHILE_1	CALL_5
0x40052db	          0x4c89f7	                            mov rdi, r14	      3114	ui.c	FUNCTION_76	WHILE_1	CALL_5
0x40052de	      0xe800000000	                          call 0x40052e3	      3114	ui.c	FUNCTION_76	WHILE_1	CALL_5
0x40052e3	        0x498b4608	                mov rax, qword [r14 + 8]	      3116	ui.c	FUNCTION_76	WHILE_1	IF_5
0x40052e7	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3116	ui.c	FUNCTION_76	WHILE_1	IF_5
0x40052ec	          0x483930	                    cmp qword [rax], rsi	      3116	ui.c	FUNCTION_76	WHILE_1	IF_5
0x40052ef	     0xf841b010000	                            je 0x4005410	      3116	ui.c	FUNCTION_76	WHILE_1	IF_5
0x40052f5	        0x4883c601	                              add rsi, 1	      3122	ui.c	FUNCTION_76	WHILE_1
0x40052f9	          0x4429fb	                           sub ebx, r15d	      3092	ui.c	FUNCTION_76	WHILE_1
0x40052fc	      0x4889742410	             mov qword [rsp + 0x10], rsi	      3122	ui.c	FUNCTION_76	WHILE_1
0x4005301	            0x745d	                            je 0x4005360	      3092	ui.c	FUNCTION_76	WHILE_1
0x4005303	    0x418b96c00100	           mov edx, dword [r14 + 0x1c0] 	      3096	ui.c	FUNCTION_76	WHILE_1	IF_2
0x400530a	            0x85d2	                           test edx, edx	      3096	ui.c	FUNCTION_76	WHILE_1	IF_2
0x400530c	            0x749f	                            je 0x40052ad	      3096	ui.c	FUNCTION_76	WHILE_1	IF_2
0x400530e	          0x4531c9	                            xor r9d, r9d	      3098	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_1
0x4005311	            0x31c9	                            xor ecx, ecx	      3098	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_1
0x4005313	            0x31d2	                            xor edx, edx	      3098	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_1
0x4005315	    0x41b801000000	                              mov r8d, 1	      3098	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_1
0x400531b	          0x4c89f7	                            mov rdi, r14	      3098	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_1
0x400531e	      0xe800000000	                          call 0x4005323	      3098	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_1
0x4005323	            0x85c0	                           test eax, eax	      3098	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_1
0x4005325	            0x7581	                           jne 0x40052a8	      3098	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_1
0x4005327	        0x498b7678	            mov rsi, qword [r14 + 0x78] 	      3102	ui.c	FUNCTION_76	WHILE_1	IF_2	IF_3
0x400532b	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3102	ui.c	FUNCTION_76	WHILE_1	IF_2	IF_3
0x4005330	          0x4839c6	                            cmp rsi, rax	      3102	ui.c	FUNCTION_76	WHILE_1	IF_2	IF_3
0x4005333	     0xf85b7000000	                           jne 0x40053f0	      3102	ui.c	FUNCTION_76	WHILE_1	IF_2	IF_3
0x4005339	    0x412b9e840000	             sub ebx, dword [r14 + 0x84]	      3103	ui.c	FUNCTION_76	WHILE_1	IF_2	IF_3
0x4005340	      0xba01000000	                              mov edx, 1	      3106	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_3
0x4005345	          0x4c89f7	                            mov rdi, r14	      3106	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_3
0x4005348	      0xe800000000	                          call 0x400534d	      3106	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_3
0x400534d	          0x4189c7	                           mov r15d, eax	      3106	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_3
0x4005350	          0x4439fb	                           cmp ebx, r15d	      3111	ui.c	FUNCTION_76	WHILE_1	IF_4
0x4005353	     0xf8d6dffffff	                           jge 0x40052c6	      3111	ui.c	FUNCTION_76	WHILE_1	IF_4
0x4005359	     0xf1f80000000	                         nop dword [rax]	      3111	ui.c	FUNCTION_76	WHILE_1	IF_4
0x4005360	          0x4c89f7	                            mov rdi, r14	      3128	ui.c	FUNCTION_76	IF_6	CALL_7
0x4005363	      0xe800000000	                          call 0x4005368	      3128	ui.c	FUNCTION_76	IF_6	CALL_7
0x4005368	          0x4c89f7	                            mov rdi, r14	      3128	ui.c	FUNCTION_76	IF_6	CALL_7
0x400536b	          0x4189c7	                           mov r15d, eax	      3128	ui.c	FUNCTION_76	IF_6	CALL_7
0x400536e	      0xe800000000	                          call 0x4005373	      3128	ui.c	FUNCTION_76	IF_6	CALL_7
0x4005373	          0x4129c7	                           sub r15d, eax	      3128	ui.c	FUNCTION_76	IF_6	CALL_7
0x4005376	    0x418b86ac0000	            mov eax, dword [r14 + 0xac] 	      3131	ui.c	FUNCTION_76	IF_6
0x400537d	          0x4439fd	                           cmp ebp, r15d	      3131	ui.c	FUNCTION_76	IF_6
0x4005380	        0x410f4cef	                         cmovl ebp, r15d	      3131	ui.c	FUNCTION_76	IF_6
0x4005384	          0x4429f8	                           sub eax, r15d	      3131	ui.c	FUNCTION_76	IF_6
0x4005387	          0x4531ff	                          xor r15d, r15d	      3133	ui.c	FUNCTION_76	IF_6
0x400538a	           0xfafc3	                           imul eax, ebx	      3131	ui.c	FUNCTION_76	IF_6
0x400538d	             0x1c5	                            add ebp, eax	      3131	ui.c	FUNCTION_76	IF_6
0x400538f	    0x4103ae980000	             add ebp, dword [r14 + 0x98]	      3133	ui.c	FUNCTION_76	IF_6
0x4005396	    0x418b86940200	           mov eax, dword [r14 + 0x294] 	      3136	ui.c	FUNCTION_76	IF_8
0x400539d	            0x85c0	                           test eax, eax	      3136	ui.c	FUNCTION_76	IF_8
0x400539f	            0x7507	                           jne 0x40053a8	      3136	ui.c	FUNCTION_76	IF_8
0x40053a1	    0x4103ae940000	             add ebp, dword [r14 + 0x94]	      3137	ui.c	FUNCTION_76	IF_8
0x40053a8	          0x4c89f7	                            mov rdi, r14	      3140	ui.c	FUNCTION_76	CALL_8
0x40053ab	      0xe800000000	                          call 0x40053b0	      3140	ui.c	FUNCTION_76	CALL_8
0x40053b0	            0x29c5	                            sub ebp, eax	      3141	ui.c	FUNCTION_76	IF_9
0x40053b2	            0x786c	                            js 0x4005420	      3141	ui.c	FUNCTION_76	IF_9
0x40053b4	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3151	ui.c	FUNCTION_76
0x40053b9	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3151	ui.c	FUNCTION_76
0x40053be	        0x41896d00	                    mov dword [r13], ebp	      3149	ui.c	FUNCTION_76
0x40053c2	        0x41891c24	                    mov dword [r12], ebx	      3150	ui.c	FUNCTION_76
0x40053c6	          0x488901	                    mov qword [rcx], rax	      3151	ui.c	FUNCTION_76
0x40053c9	          0x4489f8	                           mov eax, r15d	      3153	ui.c	FUNCTION_76
0x40053cc	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      3153	ui.c	FUNCTION_76
0x40053d1	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3153	ui.c	FUNCTION_76
0x40053da	            0x7552	                           jne 0x400542e	      3153	ui.c	FUNCTION_76
0x40053dc	        0x4883c428	                           add rsp, 0x28	      3153	ui.c	FUNCTION_76
0x40053e0	              0x5b	                                 pop rbx	      3153	ui.c	FUNCTION_76
0x40053e1	              0x5d	                                 pop rbp	      3153	ui.c	FUNCTION_76
0x40053e2	            0x415c	                                 pop r12	      3153	ui.c	FUNCTION_76
0x40053e4	            0x415d	                                 pop r13	      3153	ui.c	FUNCTION_76
0x40053e6	            0x415e	                                 pop r14	      3153	ui.c	FUNCTION_76
0x40053e8	            0x415f	                                 pop r15	      3153	ui.c	FUNCTION_76
0x40053ea	              0xc3	                                     ret	      3153	ui.c	FUNCTION_76
0x40053eb	       0xf1f440000	                   nop dword [rax + rax]	      3153	ui.c	FUNCTION_76
0x40053f0	          0x4889c6	                            mov rsi, rax	      3105	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_2
0x40053f3	          0x4c89f7	                            mov rdi, r14	      3105	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_2
0x40053f6	      0xe800000000	                          call 0x40053fb	      3105	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_2
0x40053fb	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3105	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_2
0x4005400	            0x29c3	                            sub ebx, eax	      3105	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_2
0x4005402	      0xe939ffffff	                           jmp 0x4005340	      3105	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_2
0x4005407	    0x660f1f840000	                    nop word [rax + rax]	      3105	ui.c	FUNCTION_76	WHILE_1	IF_2	CALL_2
0x4005410	    0x41bf01000000	                             mov r15d, 1	      3118	ui.c	FUNCTION_76	WHILE_1	IF_5
0x4005416	      0xe97bffffff	                           jmp 0x4005396	      3118	ui.c	FUNCTION_76	WHILE_1	IF_5
0x400541b	       0xf1f440000	                   nop dword [rax + rax]	      3118	ui.c	FUNCTION_76	WHILE_1	IF_5
0x4005420	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      3144	ui.c	FUNCTION_76	IF_9	CALL_9
0x4005425	            0x31ed	                            xor ebp, ebp	      3146	ui.c	FUNCTION_76	IF_9
0x4005427	      0xe800000000	                          call 0x400542c	      3144	ui.c	FUNCTION_76	IF_9	CALL_9
0x400542c	            0xeb86	                           jmp 0x40053b4	      3144	ui.c	FUNCTION_76	IF_9	CALL_9
0x400542e	      0xe800000000	                          call 0x4005433	      3153	ui.c	FUNCTION_76
clip_scroll_selection	IF,5:DO,0:functions,0:FOR,0:CALL,0:SWITCH,0:WHILE,0:ELSE,4	36
0x4002860	    0x66833d000000	                cmp word [0x04002868], 0	      1095	ui.c	FUNCTION_32	IF_1
0x4002868	            0x743a	                            je 0x40028a4	      1095	ui.c	FUNCTION_32	IF_1
0x400286a	    0x8b0500000000	            mov eax, dword [0x04002870] 	      1098	ui.c	FUNCTION_32
0x4002870	            0x29f8	                            sub eax, edi	      1098	ui.c	FUNCTION_32
0x4002872	            0x85c0	                           test eax, eax	      1099	ui.c	FUNCTION_32	IF_2
0x4002874	            0x7e5a	                           jle 0x40028d0	      1099	ui.c	FUNCTION_32	IF_2
0x4002876	    0x3b0500000000	            cmp eax, dword [0x0400287c] 	      1101	ui.c	FUNCTION_32	ELSE_1	IF_3
0x400287c	            0x7c32	                            jl 0x40028b0	      1101	ui.c	FUNCTION_32	ELSE_1	IF_3
0x400287e	            0x31d2	                            xor edx, edx	      1102	ui.c	FUNCTION_32	ELSE_1	IF_3
0x4002880	    0x668915000000	               mov word [0x04002887], dx	      1102	ui.c	FUNCTION_32	ELSE_1	IF_3
0x4002887	    0x8b0500000000	            mov eax, dword [0x0400288d] 	      1107	ui.c	FUNCTION_32	IF_4
0x400288d	            0x29f8	                            sub eax, edi	      1107	ui.c	FUNCTION_32	IF_4
0x400288f	            0x7832	                            js 0x40028c3	      1107	ui.c	FUNCTION_32	IF_4
0x4002891	    0x8b1500000000	            mov edx, dword [0x04002897] 	      1109	ui.c	FUNCTION_32	ELSE_3	IF_5
0x4002897	            0x39d0	                            cmp eax, edx	      1109	ui.c	FUNCTION_32	ELSE_3	IF_5
0x4002899	            0x7d45	                           jge 0x40028e0	      1109	ui.c	FUNCTION_32	ELSE_3	IF_5
0x400289b	            0x4898	                                    cdqe	      1112	ui.c	FUNCTION_32	ELSE_4
0x400289d	    0x488905000000	            mov qword [0x040028a4], rax 	      1112	ui.c	FUNCTION_32	ELSE_4
0x40028a4	            0xf3c3	                                     ret	      1112	ui.c	FUNCTION_32	ELSE_4
0x40028a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1112	ui.c	FUNCTION_32	ELSE_4
0x40028b0	            0x4898	                                    cdqe	      1104	ui.c	FUNCTION_32	ELSE_2
0x40028b2	    0x488905000000	            mov qword [0x040028b9], rax 	      1104	ui.c	FUNCTION_32	ELSE_2
0x40028b9	    0x8b0500000000	            mov eax, dword [0x040028bf] 	      1107	ui.c	FUNCTION_32	IF_4
0x40028bf	            0x29f8	                            sub eax, edi	      1107	ui.c	FUNCTION_32	IF_4
0x40028c1	            0x79ce	                           jns 0x4002891	      1107	ui.c	FUNCTION_32	IF_4
0x40028c3	            0x31c0	                            xor eax, eax	      1108	ui.c	FUNCTION_32	IF_4
0x40028c5	    0x668905000000	               mov word [0x040028cc], ax	      1108	ui.c	FUNCTION_32	IF_4
0x40028cc	              0xc3	                                     ret	      1108	ui.c	FUNCTION_32	IF_4
0x40028cd	           0xf1f00	                         nop dword [rax]	      1108	ui.c	FUNCTION_32	IF_4
0x40028d0	    0x48c705000000	               mov qword [0x040028db], 0	      1100	ui.c	FUNCTION_32	IF_2
0x40028db	            0xebaa	                           jmp 0x4002887	      1100	ui.c	FUNCTION_32	IF_2
0x40028dd	           0xf1f00	                         nop dword [rax]	      1100	ui.c	FUNCTION_32	IF_2
0x40028e0	          0x83ea01	                              sub edx, 1	      1110	ui.c	FUNCTION_32	ELSE_3	IF_5
0x40028e3	          0x4863d2	                         movsxd rdx, edx	      1110	ui.c	FUNCTION_32	ELSE_3	IF_5
0x40028e6	    0x488915000000	            mov qword [0x040028ed], rdx 	      1110	ui.c	FUNCTION_32	ELSE_3	IF_5
0x40028ed	              0xc3	                                     ret	      1110	ui.c	FUNCTION_32	ELSE_3	IF_5
clip_copy_modeless_selection	IF,24:DO,0:functions,0:FOR,4:CALL,15:SWITCH,0:WHILE,0:ELSE,9	489
0x40028f0	            0x4157	                                push r15	      1206	ui.c	FUNCTION_35
0x40028f2	            0x4156	                                push r14	      1206	ui.c	FUNCTION_35
0x40028f4	            0x4155	                                push r13	      1206	ui.c	FUNCTION_35
0x40028f6	            0x4154	                                push r12	      1206	ui.c	FUNCTION_35
0x40028f8	              0x55	                                push rbp	      1206	ui.c	FUNCTION_35
0x40028f9	              0x53	                                push rbx	      1206	ui.c	FUNCTION_35
0x40028fa	        0x4883ec48	                           sub rsp, 0x48	      1206	ui.c	FUNCTION_35
0x40028fe	    0x8b3500000000	            mov esi, dword [0x04002904] 	      1221	ui.c	FUNCTION_35
0x4002904	    0x488b0d000000	            mov rcx, qword [0x0400290b] 	      1218	ui.c	FUNCTION_35
0x400290b	    0x8b0500000000	            mov eax, dword [0x04002911] 	      1219	ui.c	FUNCTION_35
0x4002911	    0x488b15000000	            mov rdx, qword [0x04002918] 	      1220	ui.c	FUNCTION_35
0x4002918	            0x89f3	                            mov ebx, esi	      1221	ui.c	FUNCTION_35
0x400291a	        0x89742420	             mov dword [rsp + 0x20], esi	      1221	ui.c	FUNCTION_35
0x400291e	    0x488b35000000	            mov rsi, qword [0x04002925] 	      1224	ui.c	FUNCTION_35	IF_1
0x4002925	        0x894c2408	                mov dword [rsp + 8], ecx	      1218	ui.c	FUNCTION_35
0x4002929	        0x89442438	             mov dword [rsp + 0x38], eax	      1219	ui.c	FUNCTION_35
0x400292d	        0x8954240c	              mov dword [rsp + 0xc], edx	      1220	ui.c	FUNCTION_35
0x4002931	          0x4885f6	                           test rsi, rsi	      1224	ui.c	FUNCTION_35	IF_1
0x4002934	     0xf840e070000	                            je 0x4003048	      1224	ui.c	FUNCTION_35	IF_1
0x400293a	            0x39d1	                            cmp ecx, edx	      1230	ui.c	FUNCTION_35	IF_2
0x400293c	     0xf8e56040000	                           jle 0x4002d98	      1230	ui.c	FUNCTION_35	IF_2
0x4002942	      0x48635c240c	          movsxd rbx, dword [rsp + 0xc] 	      1241	ui.c	FUNCTION_35
0x4002947	        0x897c2434	             mov dword [rsp + 0x34], edi	      1241	ui.c	FUNCTION_35
0x400294b	    0x488d049d0000	                        lea rax, [rbx*4]	      1241	ui.c	FUNCTION_35
0x4002953	      0x4889442410	             mov qword [rsp + 0x10], rax	      1241	ui.c	FUNCTION_35
0x4002958	    0x488b05000000	            mov rax, qword [0x0400295f] 	      1241	ui.c	FUNCTION_35
0x400295f	          0x8b0498	            mov eax, dword [rax + rbx*4]	      1241	ui.c	FUNCTION_35
0x4002962	        0x488d3c06	                    lea rdi, [rsi + rax]	      1241	ui.c	FUNCTION_35
0x4002966	    0x8b0500000000	            mov eax, dword [0x0400296c] 	      1242	ui.c	FUNCTION_35	IF_4
0x400296c	            0x85c0	                           test eax, eax	      1242	ui.c	FUNCTION_35	IF_4
0x400296e	     0xf8553050000	                           jne 0x4002ec7	      1242	ui.c	FUNCTION_35	IF_4
0x4002974	    0x8b0500000000	            mov eax, dword [0x0400297a] 	      1244	ui.c	FUNCTION_35	ELSE_2	IF_5
0x400297a	            0x85c0	                           test eax, eax	      1244	ui.c	FUNCTION_35	ELSE_2	IF_5
0x400297c	     0xf8552040000	                           jne 0x4002dd4	      1244	ui.c	FUNCTION_35	ELSE_2	IF_5
0x4002982	        0x8b7c2408	                mov edi, dword [rsp + 8]	      1249	ui.c	FUNCTION_35
0x4002986	        0x2b7c240c	              sub edi, dword [rsp + 0xc]	      1249	ui.c	FUNCTION_35
0x400298a	          0x83c701	                              add edi, 1	      1249	ui.c	FUNCTION_35
0x400298d	     0xfaf3d000000	            imul edi, dword [0x04002994]	      1249	ui.c	FUNCTION_35
0x4002994	          0x83c701	                              add edi, 1	      1249	ui.c	FUNCTION_35
0x4002997	            0x85c0	                           test eax, eax	      1253	ui.c	FUNCTION_35	ELSE_3	IF_7
0x4002999	     0xf854d040000	                           jne 0x4002dec	      1253	ui.c	FUNCTION_35	ELSE_3	IF_7
0x400299f	          0x4863ff	                         movsxd rdi, edi	      1256	ui.c	FUNCTION_35	CALL_1
0x40029a2	      0xbe01000000	                              mov esi, 1	      1256	ui.c	FUNCTION_35	CALL_1
0x40029a7	      0xe800000000	                          call 0x40029ac	      1256	ui.c	FUNCTION_35	CALL_1
0x40029ac	          0x4885c0	                           test rax, rax	      1257	ui.c	FUNCTION_35	IF_8
0x40029af	      0x4889442428	             mov qword [rsp + 0x28], rax	      1256	ui.c	FUNCTION_35	CALL_1
0x40029b4	     0xf848e060000	                            je 0x4003048	      1257	ui.c	FUNCTION_35	IF_8
0x40029ba	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      1261	ui.c	FUNCTION_35	FOR_1
0x40029be	        0x8b742408	                mov esi, dword [rsp + 8]	      1261	ui.c	FUNCTION_35	FOR_1
0x40029c2	            0x39f1	                            cmp ecx, esi	      1261	ui.c	FUNCTION_35	FOR_1
0x40029c4	     0xf8fa4060000	                            jg 0x400306e	      1261	ui.c	FUNCTION_35	FOR_1
0x40029ca	      0x448b742420	           mov r14d, dword [rsp + 0x20] 	      1261	ui.c	FUNCTION_35	FOR_1
0x40029cf	        0x488d73ff	                      lea rsi, [rbx - 1]	      1261	ui.c	FUNCTION_35	FOR_1
0x40029d3	          0x4989c7	                            mov r15, rax	      1261	ui.c	FUNCTION_35	FOR_1
0x40029d6	    0xc74424300000	               mov dword [rsp + 0x30], 0	      1261	ui.c	FUNCTION_35	FOR_1
0x40029de	      0x4889742418	             mov qword [rsp + 0x18], rsi	      1261	ui.c	FUNCTION_35	FOR_1
0x40029e3	          0x4589f5	                          mov r13d, r14d	      1261	ui.c	FUNCTION_35	FOR_1
0x40029e6	          0x4189ce	                           mov r14d, ecx	      1261	ui.c	FUNCTION_35	FOR_1
0x40029e9	     0xf1f80000000	                         nop dword [rax]	      1261	ui.c	FUNCTION_35	FOR_1
0x40029f0	      0x4439742408	               cmp dword [rsp + 8], r14d	      1268	ui.c	FUNCTION_35	FOR_1	IF_10
0x40029f5	    0x488b1d000000	            mov rbx, qword [0x040029fc] 	      1268	ui.c	FUNCTION_35	FOR_1	IF_10
0x40029fc	     0xf84f7060000	                            je 0x40030f9	      1268	ui.c	FUNCTION_35	FOR_1	IF_10
0x4002a02	        0x895c2404	                mov dword [rsp + 4], ebx	      1271	ui.c	FUNCTION_35	FOR_1	ELSE_5
0x4002a06	    0x448b1d000000	           mov r11d, dword [0x04002a0d] 	      1451	ui.c	FUNCTION_37	IF_1
0x4002a0d	            0x31ff	                            xor edi, edi	      1452	ui.c	FUNCTION_37	IF_1
0x4002a0f	          0x4539f3	                          cmp r11d, r14d	      1451	ui.c	FUNCTION_37	IF_1
0x4002a12	            0x7e50	                           jle 0x4002a64	      1451	ui.c	FUNCTION_37	IF_1
0x4002a14	    0x4c8b0d000000	              mov r9, qword [0x04002a1b]	      1451	ui.c	FUNCTION_37	IF_1
0x4002a1b	          0x4d85c9	                             test r9, r9	      1451	ui.c	FUNCTION_37	IF_1
0x4002a1e	            0x7444	                            je 0x4002a64	      1451	ui.c	FUNCTION_37	IF_1
0x4002a20	    0x8b3d00000000	            mov edi, dword [0x04002a26] 	      1453	ui.c	FUNCTION_37	FOR_1
0x4002a26	            0x85ff	                           test edi, edi	      1453	ui.c	FUNCTION_37	FOR_1
0x4002a28	            0x7e3a	                           jle 0x4002a64	      1453	ui.c	FUNCTION_37	FOR_1
0x4002a2a	    0x488b05000000	            mov rax, qword [0x04002a31] 	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x4002a31	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x4002a36	        0x448b1430	             mov r10d, dword [rax + rsi]	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x4002a3a	          0x8d47ff	                      lea eax, [rdi - 1]	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x4002a3d	        0x428d3410	                    lea esi, [rax + r10]	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x4002a41	      0x41803c3120	               cmp byte [r9 + rsi], 0x20	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x4002a46	            0x7416	                            je 0x4002a5e	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x4002a48	            0xeb1a	                           jmp 0x4002a64	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x4002a4a	    0x660f1f440000	                    nop word [rax + rax]	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x4002a50	          0x83e801	                              sub eax, 1	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x4002a53	        0x428d1410	                    lea edx, [rax + r10]	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x4002a57	      0x41803c1120	               cmp byte [r9 + rdx], 0x20	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x4002a5c	            0x7506	                           jne 0x4002a64	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x4002a5e	            0x85c0	                           test eax, eax	      1453	ui.c	FUNCTION_37	FOR_1
0x4002a60	            0x89c7	                            mov edi, eax	      1453	ui.c	FUNCTION_37	FOR_1
0x4002a62	            0x75ec	                           jne 0x4002a50	      1453	ui.c	FUNCTION_37	FOR_1
0x4002a64	        0x8b4c2404	                mov ecx, dword [rsp + 4]	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x4002a68	          0x4863c1	                         movsxd rax, ecx	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x4002a6b	          0x4839d8	                            cmp rax, rbx	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x4002a6e	            0x7c13	                            jl 0x4002a83	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x4002a70	      0x4439742408	               cmp dword [rsp + 8], r14d	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x4002a75	     0xf8f45010000	                            jg 0x4002bc0	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x4002a7b	            0x39f9	                            cmp ecx, edi	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x4002a7d	     0xf8f3d010000	                            jg 0x4002bc0	      1276	ui.c	FUNCTION_35	FOR_1	IF_11
0x4002a83	      0x443974240c	            cmp dword [rsp + 0xc], r14d 	      1289	ui.c	FUNCTION_35	FOR_1	IF_14
0x4002a88	            0x7d21	                           jge 0x4002aab	      1289	ui.c	FUNCTION_35	FOR_1	IF_14
0x4002a8a	    0x488b05000000	            mov rax, qword [0x04002a91] 	      1289	ui.c	FUNCTION_35	FOR_1	IF_14
0x4002a91	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1289	ui.c	FUNCTION_35	FOR_1	IF_14
0x4002a96	        0x803c3000	                 cmp byte [rax + rsi], 0	      1289	ui.c	FUNCTION_35	FOR_1	IF_14
0x4002a9a	            0x750f	                           jne 0x4002aab	      1289	ui.c	FUNCTION_35	FOR_1	IF_14
0x4002a9c	        0x41c6070a	                     mov byte [r15], 0xa	      1290	ui.c	FUNCTION_35	FOR_1	IF_14
0x4002aa0	    0x448b1d000000	           mov r11d, dword [0x04002aa7] 	      1290	ui.c	FUNCTION_35	FOR_1	IF_14
0x4002aa7	        0x4983c701	                              add r15, 1	      1290	ui.c	FUNCTION_35	FOR_1	IF_14
0x4002aab	          0x4539de	                          cmp r14d, r11d	      1292	ui.c	FUNCTION_35	FOR_1	IF_15
0x4002aae	     0xf8db4000000	                           jge 0x4002b68	      1292	ui.c	FUNCTION_35	FOR_1	IF_15
0x4002ab4	        0x8b4c2404	                mov ecx, dword [rsp + 4]	      1292	ui.c	FUNCTION_35	FOR_1	IF_15
0x4002ab8	    0x3b0d00000000	            cmp ecx, dword [0x04002abe] 	      1292	ui.c	FUNCTION_35	FOR_1	IF_15
0x4002abe	     0xf8fa4000000	                            jg 0x4002b68	      1292	ui.c	FUNCTION_35	FOR_1	IF_15
0x4002ac4	    0x8b0500000000	            mov eax, dword [0x04002aca] 	      1295	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x4002aca	            0x85c0	                           test eax, eax	      1295	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x4002acc	     0xf8416010000	                            je 0x4002be8	      1295	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x4002ad2	    0x488b35000000	            mov rsi, qword [0x04002ad9] 	      1299	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x4002ad9	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      1299	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x4002ade	          0x8b3c1e	              mov edi, dword [rsi + rbx]	      1299	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x4002ae1	    0x48033d000000	             add rdi, qword [0x04002ae8]	      1299	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16
0x4002ae8	          0x4139cd	                           cmp r13d, ecx	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x4002aeb	            0x7c2f	                            jl 0x4002b1c	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x4002aed	            0xeb79	                           jmp 0x4002b68	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x4002aef	              0x90	                                     nop	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x4002af0	          0x4801f8	                            add rax, rdi	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x4002af3	           0xfb610	                   movzx edx, byte [rax]	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x4002af6	          0x418817	                      mov byte [r15], dl	      1309	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6
0x4002af9	           0xfb600	                   movzx eax, byte [rax]	      1310	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18	CALL_3
0x4002afc	    0x80b800000000	                       cmp byte [rax], 2	      1310	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18	CALL_3
0x4002b03	     0xf8497000000	                            je 0x4002ba0	      1310	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18	CALL_3
0x4002b09	        0x4983c701	                              add r15, 1	      1309	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6
0x4002b0d	        0x4183c501	                             add r13d, 1	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x4002b11	          0x4439e9	                           cmp ecx, r13d	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x4002b14	            0x7e52	                           jle 0x4002b68	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x4002b16	    0x8b0500000000	            mov eax, dword [0x04002b1c] 	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x4002b1c	      0x3dcc260000	                         cmp eax, 0x26cc	      1301	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4002b21	          0x4963c5	                        movsxd rax, r13d	      1301	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4002b24	            0x75ca	                           jne 0x4002af0	      1301	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4002b26	          0x4801f8	                            add rax, rdi	      1301	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4002b29	           0xfb610	                   movzx edx, byte [rax]	      1301	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4002b2c	          0x80fa8e	                            cmp dl, 0x8e	      1301	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4002b2f	            0x75c5	                           jne 0x4002af6	      1301	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4002b31	          0x418817	                      mov byte [r15], dl	      1304	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4002b34	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4002b39	          0x4489ee	                           mov esi, r13d	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4002b3c	    0x488b05000000	            mov rax, qword [0x04002b43] 	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4002b43	    0x488b15000000	            mov rdx, qword [0x04002b4a] 	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4002b4a	        0x4183c501	                             add r13d, 1	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x4002b4e	        0x4983c702	                              add r15, 2	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4002b52	           0x33418	              add esi, dword [rax + rbx]	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4002b55	         0xfb60432	             movzx eax, byte [rdx + rsi]	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4002b59	        0x418847ff	                  mov byte [r15 - 1], al	      1305	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2	IF_17
0x4002b5d	          0x4439e9	                           cmp ecx, r13d	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x4002b60	            0x7fb4	                            jg 0x4002b16	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x4002b62	    0x660f1f440000	                    nop word [rax + rax]	      1300	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	FOR_2
0x4002b68	        0x4183c601	                             add r14d, 1	      1261	ui.c	FUNCTION_35	FOR_1
0x4002b6c	      0x4439742408	               cmp dword [rsp + 8], r14d	      1261	ui.c	FUNCTION_35	FOR_1
0x4002b71	     0xf8c59010000	                            jl 0x4002cd0	      1261	ui.c	FUNCTION_35	FOR_1
0x4002b77	      0x443974240c	            cmp dword [rsp + 0xc], r14d 	      1266	ui.c	FUNCTION_35	FOR_1	ELSE_4
0x4002b7c	      0xba00000000	                              mov edx, 0	      1266	ui.c	FUNCTION_35	FOR_1	ELSE_4
0x4002b81	       0xf44542420	           cmove edx, dword [rsp + 0x20]	      1266	ui.c	FUNCTION_35	FOR_1	ELSE_4
0x4002b86	    0x488344241004	               add qword [rsp + 0x10], 4	      1266	ui.c	FUNCTION_35	FOR_1	ELSE_4
0x4002b8c	    0x488344241801	               add qword [rsp + 0x18], 1	      1266	ui.c	FUNCTION_35	FOR_1	ELSE_4
0x4002b92	          0x4189d5	                           mov r13d, edx	      1266	ui.c	FUNCTION_35	FOR_1	ELSE_4
0x4002b95	      0xe956feffff	                           jmp 0x40029f0	      1266	ui.c	FUNCTION_35	FOR_1	ELSE_4
0x4002b9a	    0x660f1f440000	                    nop word [rax + rax]	      1266	ui.c	FUNCTION_35	FOR_1	ELSE_4
0x4002ba0	        0x4183c501	                             add r13d, 1	      1311	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18
0x4002ba4	        0x4983c702	                              add r15, 2	      1311	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18
0x4002ba8	          0x4963c5	                        movsxd rax, r13d	      1311	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18
0x4002bab	         0xfb60407	             movzx eax, byte [rdi + rax]	      1311	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18
0x4002baf	        0x418847ff	                  mov byte [r15 - 1], al	      1311	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18
0x4002bb3	      0xe955ffffff	                           jmp 0x4002b0d	      1311	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18
0x4002bb8	     0xf1f84000000	                   nop dword [rax + rax]	      1311	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18
0x4002bc0	          0x4139fd	                           cmp r13d, edi	      1311	ui.c	FUNCTION_35	FOR_1	IF_15	IF_16	ELSE_6	IF_18
0x4002bc3	      0xb801000000	                              mov eax, 1	      1285	ui.c	FUNCTION_35	FOR_1	IF_11	IF_13
0x4002bc8	        0x410f4dfd	                        cmovge edi, r13d	      1285	ui.c	FUNCTION_35	FOR_1	IF_11	IF_13
0x4002bcc	      0x4439742408	               cmp dword [rsp + 8], r14d	      1285	ui.c	FUNCTION_35	FOR_1	IF_11	IF_13
0x4002bd1	       0xf45442430	          cmovne eax, dword [rsp + 0x30]	      1285	ui.c	FUNCTION_35	FOR_1	IF_11	IF_13
0x4002bd6	        0x897c2404	                mov dword [rsp + 4], edi	      1285	ui.c	FUNCTION_35	FOR_1	IF_11	IF_13
0x4002bda	        0x89442430	             mov dword [rsp + 0x30], eax	      1285	ui.c	FUNCTION_35	FOR_1	IF_11	IF_13
0x4002bde	      0xe9a0feffff	                           jmp 0x4002a83	      1285	ui.c	FUNCTION_35	FOR_1	IF_11	IF_13
0x4002be3	       0xf1f440000	                   nop dword [rax + rax]	      1285	ui.c	FUNCTION_35	FOR_1	IF_11	IF_13
0x4002be8	    0x8b0500000000	            mov eax, dword [0x04002bee] 	      1314	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19
0x4002bee	            0x85c0	                           test eax, eax	      1314	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19
0x4002bf0	     0xf849a020000	                            je 0x4002e90	      1314	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19
0x4002bf6	    0x488b05000000	            mov rax, qword [0x04002bfd] 	      1320	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19
0x4002bfd	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      1320	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19
0x4002c02	      0x443b6c2404	               cmp r13d, dword [rsp + 4]	      1321	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3
0x4002c07	          0x8b0408	              mov eax, dword [rax + rcx]	      1320	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19
0x4002c0a	        0x89442424	             mov dword [rsp + 0x24], eax	      1320	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19
0x4002c0e	     0xf8d54ffffff	                           jge 0x4002b68	      1321	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3
0x4002c14	      0x448974243c	            mov dword [rsp + 0x3c], r14d	      1321	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3
0x4002c19	            0xeb33	                           jmp 0x4002c4e	      1321	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3
0x4002c1b	       0xf1f440000	                   nop dword [rax + rax]	      1321	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3
0x4002c20	    0x488b05000000	            mov rax, qword [0x04002c27] 	      1326	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4002c27	        0x4983c701	                              add r15, 1	      1326	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4002c2b	         0xfb60418	             movzx eax, byte [rax + rbx]	      1326	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4002c2f	        0x418847ff	                  mov byte [r15 - 1], al	      1326	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4002c33	    0x488b05000000	            mov rax, qword [0x04002c3a] 	      1340	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_22
0x4002c3a	      0x807c180101	            cmp byte [rax + rbx + 1], 1 	      1341	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_22
0x4002c3f	        0x4183d501	                             adc r13d, 1	      1321	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3
0x4002c43	      0x44396c2404	               cmp dword [rsp + 4], r13d	      1321	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3
0x4002c48	     0xf8e3a010000	                           jle 0x4002d88	      1321	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3
0x4002c4e	        0x8b442424	            mov eax, dword [rsp + 0x24] 	      1325	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4002c52	        0x428d1c28	                    lea ebx, [rax + r13]	      1325	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4002c56	    0x488b05000000	            mov rax, qword [0x04002c5d] 	      1325	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4002c5d	          0x4863db	                         movsxd rbx, ebx	      1325	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4002c60	          0x8b3c98	            mov edi, dword [rax + rbx*4]	      1325	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4002c63	    0x488d2c9d0000	                        lea rbp, [rbx*4]	      1325	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4002c6b	            0x85ff	                           test edi, edi	      1325	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4002c6d	            0x74b1	                            je 0x4002c20	      1325	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	IF_20
0x4002c6f	          0x4c89fe	                            mov rsi, r15	      1329	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	CALL_4
0x4002c72	      0xe800000000	                          call 0x4002c77	      1329	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	CALL_4
0x4002c77	            0x4898	                                    cdqe	      1329	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	CALL_4
0x4002c79	          0x4901c7	                            add r15, rax	      1329	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	CALL_4
0x4002c7c	    0x8b0500000000	            mov eax, dword [0x04002c82] 	      1330	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4
0x4002c82	            0x85c0	                           test eax, eax	      1330	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4
0x4002c84	            0x7ead	                           jle 0x4002c33	      1330	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4
0x4002c86	    0x488b05000000	            mov rax, qword [0x04002c8d] 	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x4002c8d	          0x4531e4	                          xor r12d, r12d	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x4002c90	    0x41be00000000	                             mov r14d, 0	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x4002c96	          0x8b3c98	            mov edi, dword [rax + rbx*4]	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x4002c99	            0x85ff	                           test edi, edi	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x4002c9b	            0x7511	                           jne 0x4002cae	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x4002c9d	            0xeb94	                           jmp 0x4002c33	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x4002c9f	              0x90	                                     nop	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x4002ca0	          0x498b06	                    mov rax, qword [r14]	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x4002ca3	        0x4983c608	                              add r14, 8	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x4002ca7	          0x8b3c28	              mov edi, dword [rax + rbp]	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x4002caa	            0x85ff	                           test edi, edi	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x4002cac	            0x7485	                            je 0x4002c33	      1333	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	IF_21
0x4002cae	          0x4c89fe	                            mov rsi, r15	      1335	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	CALL_5
0x4002cb1	        0x4183c401	                             add r12d, 1	      1330	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4
0x4002cb5	      0xe800000000	                          call 0x4002cba	      1335	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	CALL_5
0x4002cba	            0x4898	                                    cdqe	      1335	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	CALL_5
0x4002cbc	          0x4901c7	                            add r15, rax	      1335	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4	CALL_5
0x4002cbf	    0x443925000000	           cmp dword [0x04002cc6], r12d 	      1330	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4
0x4002cc6	            0x7fd8	                            jg 0x4002ca0	      1330	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4
0x4002cc8	      0xe966ffffff	                           jmp 0x4002c33	      1330	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4
0x4002ccd	           0xf1f00	                         nop dword [rax]	      1330	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_7	IF_19	FOR_3	ELSE_8	FOR_4
0x4002cd0	        0x8b442430	            mov eax, dword [rsp + 0x30] 	      1355	ui.c	FUNCTION_35	IF_23
0x4002cd4	            0x85c0	                           test eax, eax	      1355	ui.c	FUNCTION_35	IF_23
0x4002cd6	     0xf84eb000000	                            je 0x4002dc7	      1355	ui.c	FUNCTION_35	IF_23
0x4002cdc	        0x498d4f01	                      lea rcx, [r15 + 1]	      1355	ui.c	FUNCTION_35	IF_23
0x4002ce0	      0x482b4c2428	             sub rcx, qword [rsp + 0x28]	      1355	ui.c	FUNCTION_35	IF_23
0x4002ce5	        0x41c6070a	                     mov byte [r15], 0xa	      1356	ui.c	FUNCTION_35	IF_23
0x4002ce9	          0x4889cb	                            mov rbx, rcx	      1356	ui.c	FUNCTION_35	IF_23
0x4002cec	      0xbf00000000	                              mov edi, 0	      1359	ui.c	FUNCTION_35	CALL_7
0x4002cf1	      0xe800000000	                          call 0x4002cf6	      1359	ui.c	FUNCTION_35	CALL_7
0x4002cf6	    0x448b35000000	           mov r14d, dword [0x04002cfd] 	       522	ui.c	FUNCTION_16	IF_1
0x4002cfd	          0x4585f6	                         test r14d, r14d	       522	ui.c	FUNCTION_16	IF_1
0x4002d00	     0xf85f1000000	                           jne 0x4002df7	       522	ui.c	FUNCTION_16	IF_1
0x4002d06	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      1363	ui.c	FUNCTION_35	CALL_9
0x4002d0b	            0x31ff	                            xor edi, edi	      1363	ui.c	FUNCTION_35	CALL_9
0x4002d0d	      0xb900000000	                              mov ecx, 0	      1363	ui.c	FUNCTION_35	CALL_9
0x4002d12	          0x4889da	                            mov rdx, rbx	      1363	ui.c	FUNCTION_35	CALL_9
0x4002d15	      0xe800000000	                          call 0x4002d1a	      1363	ui.c	FUNCTION_35	CALL_9
0x4002d1a	    0x8b2d00000000	            mov ebp, dword [0x04002d20] 	      1523	ui.c	FUNCTION_41	IF_1
0x4002d20	            0x85ed	                           test ebp, ebp	      1523	ui.c	FUNCTION_41	IF_1
0x4002d22	            0x751f	                           jne 0x4002d43	      1523	ui.c	FUNCTION_41	IF_1
0x4002d24	      0xb800000000	                              mov eax, 0	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x4002d29	    0x483d00000000	                              cmp rax, 0	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x4002d2f	    0x8b0500000000	            mov eax, dword [0x04002d35] 	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x4002d35	     0xf841c030000	                            je 0x4003057	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x4002d3b	            0xa801	                              test al, 1	      1528	ui.c	FUNCTION_41	IF_1	IF_2
0x4002d3d	     0xf851c030000	                           jne 0x400305f	      1528	ui.c	FUNCTION_41	IF_1	IF_2
0x4002d43	    0x448b1d000000	           mov r11d, dword [0x04002d4a] 	      1536	ui.c	FUNCTION_41	IF_3
0x4002d4a	      0xbf00000000	                              mov edi, 0	      1537	ui.c	FUNCTION_41	CALL_1
0x4002d4f	          0x4585db	                         test r11d, r11d	      1536	ui.c	FUNCTION_41	IF_3
0x4002d52	     0xf85b3010000	                           jne 0x4002f0b	      1536	ui.c	FUNCTION_41	IF_3
0x4002d58	      0xe800000000	                          call 0x4002d5d	      1540	ui.c	FUNCTION_41	CALL_2
0x4002d5d	      0x448b542434	           mov r10d, dword [rsp + 0x34] 	      1369	ui.c	FUNCTION_35	IF_24
0x4002d62	          0x4585d2	                         test r10d, r10d	      1369	ui.c	FUNCTION_35	IF_24
0x4002d65	     0xf85b3010000	                           jne 0x4002f1e	      1369	ui.c	FUNCTION_35	IF_24
0x4002d6b	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      1378	ui.c	FUNCTION_35	CALL_15
0x4002d70	        0x4883c448	                           add rsp, 0x48	      1379	ui.c	FUNCTION_35
0x4002d74	              0x5b	                                 pop rbx	      1379	ui.c	FUNCTION_35
0x4002d75	              0x5d	                                 pop rbp	      1379	ui.c	FUNCTION_35
0x4002d76	            0x415c	                                 pop r12	      1379	ui.c	FUNCTION_35
0x4002d78	            0x415d	                                 pop r13	      1379	ui.c	FUNCTION_35
0x4002d7a	            0x415e	                                 pop r14	      1379	ui.c	FUNCTION_35
0x4002d7c	            0x415f	                                 pop r15	      1379	ui.c	FUNCTION_35
0x4002d7e	      0xe900000000	                           jmp 0x4002d83	      1378	ui.c	FUNCTION_35	CALL_15
0x4002d83	       0xf1f440000	                   nop dword [rax + rax]	      1378	ui.c	FUNCTION_35	CALL_15
0x4002d88	      0x448b74243c	           mov r14d, dword [rsp + 0x3c] 	      1378	ui.c	FUNCTION_35	CALL_15
0x4002d8d	      0xe9d6fdffff	                           jmp 0x4002b68	      1378	ui.c	FUNCTION_35	CALL_15
0x4002d92	    0x660f1f440000	                    nop word [rax + rax]	      1378	ui.c	FUNCTION_35	CALL_15
0x4002d98	            0x7510	                           jne 0x4002daa	      1235	ui.c	FUNCTION_35	ELSE_1	IF_3
0x4002d9a	            0x39d8	                            cmp eax, ebx	      1235	ui.c	FUNCTION_35	ELSE_1	IF_3
0x4002d9c	        0x894c240c	              mov dword [rsp + 0xc], ecx	      1235	ui.c	FUNCTION_35	ELSE_1	IF_3
0x4002da0	        0x89542408	                mov dword [rsp + 8], edx	      1235	ui.c	FUNCTION_35	ELSE_1	IF_3
0x4002da4	     0xf8f98fbffff	                            jg 0x4002942	      1235	ui.c	FUNCTION_35	ELSE_1	IF_3
0x4002daa	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      1235	ui.c	FUNCTION_35	ELSE_1	IF_3
0x4002dae	        0x8b5c2438	            mov ebx, dword [rsp + 0x38] 	      1219	ui.c	FUNCTION_35
0x4002db2	        0x894c240c	              mov dword [rsp + 0xc], ecx	      1235	ui.c	FUNCTION_35	ELSE_1	IF_3
0x4002db6	        0x89542408	                mov dword [rsp + 8], edx	      1235	ui.c	FUNCTION_35	ELSE_1	IF_3
0x4002dba	        0x895c2420	             mov dword [rsp + 0x20], ebx	      1219	ui.c	FUNCTION_35
0x4002dbe	        0x89442438	             mov dword [rsp + 0x38], eax	      1221	ui.c	FUNCTION_35
0x4002dc2	      0xe97bfbffff	                           jmp 0x4002942	      1221	ui.c	FUNCTION_35
0x4002dc7	          0x4c89fb	                            mov rbx, r15	      1221	ui.c	FUNCTION_35
0x4002dca	      0x482b5c2428	             sub rbx, qword [rsp + 0x28]	      1221	ui.c	FUNCTION_35
0x4002dcf	      0xe918ffffff	                           jmp 0x4002cec	      1221	ui.c	FUNCTION_35
0x4002dd4	      0x4863542420	         movsxd rdx, dword [rsp + 0x20] 	      1244	ui.c	FUNCTION_35	ELSE_2	IF_5
0x4002dd9	        0x803c1701	                 cmp byte [rdi + rdx], 1	      1245	ui.c	FUNCTION_35	ELSE_2	IF_5
0x4002ddd	          0x4889d1	                            mov rcx, rdx	      1244	ui.c	FUNCTION_35	ELSE_2	IF_5
0x4002de0	          0x83d900	                              sbb ecx, 0	      1245	ui.c	FUNCTION_35	ELSE_2	IF_5
0x4002de3	        0x894c2420	             mov dword [rsp + 0x20], ecx	      1245	ui.c	FUNCTION_35	ELSE_2	IF_5
0x4002de7	      0xe996fbffff	                           jmp 0x4002982	      1245	ui.c	FUNCTION_35	ELSE_2	IF_5
0x4002dec	          0x8d04bf	                  lea eax, [rdi + rdi*4]	      1254	ui.c	FUNCTION_35	ELSE_3	IF_7
0x4002def	          0x8d3c87	                  lea edi, [rdi + rax*4]	      1254	ui.c	FUNCTION_35	ELSE_3	IF_7
0x4002df2	      0xe9a8fbffff	                           jmp 0x400299f	      1254	ui.c	FUNCTION_35	ELSE_3	IF_7
0x4002df7	    0x448b2d000000	           mov r13d, dword [0x04002dfe] 	      1495	ui.c	FUNCTION_39	IF_1
0x4002dfe	    0x8b2d00000000	            mov ebp, dword [0x04002e04] 	       524	ui.c	FUNCTION_16	IF_1
0x4002e04	      0xbf00000000	                              mov edi, 0	      1496	ui.c	FUNCTION_39	CALL_1
0x4002e09	          0x4585ed	                         test r13d, r13d	      1495	ui.c	FUNCTION_39	IF_1
0x4002e0c	     0xf857d010000	                           jne 0x4002f8f	      1495	ui.c	FUNCTION_39	IF_1
0x4002e12	      0xe800000000	                          call 0x4002e17	      1499	ui.c	FUNCTION_39	CALL_2
0x4002e17	          0x83f801	                              cmp eax, 1	       526	ui.c	FUNCTION_16	IF_1	CALL_1
0x4002e1a	           0xf94c0	                                 sete al	       526	ui.c	FUNCTION_16	IF_1	CALL_1
0x4002e1d	            0x85ed	                           test ebp, ebp	       532	ui.c	FUNCTION_16	IF_1	IF_2	IF_3
0x4002e1f	           0xfb6d0	                           movzx edx, al	       526	ui.c	FUNCTION_16	IF_1	CALL_1
0x4002e22	    0x891500000000	            mov dword [0x04002e28], edx 	       526	ui.c	FUNCTION_16	IF_1	CALL_1
0x4002e28	     0xf85d8feffff	                           jne 0x4002d06	       532	ui.c	FUNCTION_16	IF_1	IF_2	IF_3
0x4002e2e	            0x84c0	                             test al, al	       532	ui.c	FUNCTION_16	IF_1	IF_2	IF_3
0x4002e30	     0xf84d0feffff	                            je 0x4002d06	       532	ui.c	FUNCTION_16	IF_1	IF_2	IF_3
0x4002e36	      0xe800000000	                          call 0x4002e3b	       533	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_2
0x4002e3b	          0x83f802	                              cmp eax, 2	       533	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_2
0x4002e3e	            0x7410	                            je 0x4002e50	       533	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_2
0x4002e40	      0xe800000000	                          call 0x4002e45	       534	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_3
0x4002e45	      0x3d00100000	                         cmp eax, 0x1000	       534	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_3
0x4002e4a	     0xf85b6feffff	                           jne 0x4002d06	       534	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_3
0x4002e50	    0x448b25000000	           mov r12d, dword [0x04002e57] 	       691	ui.c	FUNCTION_23	CALL_1
0x4002e57	    0x8b0500000000	            mov eax, dword [0x04002e5d] 	       691	ui.c	FUNCTION_23	CALL_1
0x4002e5d	          0x4585e4	                         test r12d, r12d	       691	ui.c	FUNCTION_23	CALL_1
0x4002e60	     0xf8530020000	                           jne 0x4003096	       691	ui.c	FUNCTION_23	CALL_1
0x4002e66	            0x85c0	                           test eax, eax	       535	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_4
0x4002e68	     0xf8498feffff	                            je 0x4002d06	       535	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_4
0x4002e6e	    0x8b0500000000	            mov eax, dword [0x04002e74] 	       537	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_7
0x4002e74	    0x390500000000	            cmp dword [0x04002e7a], eax 	       537	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_7
0x4002e7a	     0xf8486feffff	                            je 0x4002d06	       537	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_7
0x4002e80	      0xbf19000000	                           mov edi, 0x19	       538	ui.c	FUNCTION_16	IF_1	IF_2	CALL_8
0x4002e85	      0xe800000000	                          call 0x4002e8a	       538	ui.c	FUNCTION_16	IF_1	IF_2	CALL_8
0x4002e8a	      0xe977feffff	                           jmp 0x4002d06	       538	ui.c	FUNCTION_16	IF_1	IF_2	CALL_8
0x4002e8f	              0x90	                                     nop	       538	ui.c	FUNCTION_16	IF_1	IF_2	CALL_8
0x4002e90	            0x89cd	                            mov ebp, ecx	       538	ui.c	FUNCTION_16	IF_1	IF_2	CALL_8
0x4002e92	    0x488b05000000	            mov rax, qword [0x04002e99] 	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x4002e99	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       126	string3.h	FUNCTION_90	CALL_3
0x4002e9e	          0x4963d5	                        movsxd rdx, r13d	       126	string3.h	FUNCTION_90	CALL_3
0x4002ea1	          0x4429ed	                           sub ebp, r13d	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x4002ea4	          0x4c89ff	                            mov rdi, r15	       126	string3.h	FUNCTION_90	CALL_3
0x4002ea7	          0x4863dd	                         movsxd rbx, ebp	      1347	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9	CALL_6
0x4002eaa	          0x8b3408	              mov esi, dword [rax + rcx]	       126	string3.h	FUNCTION_90	CALL_3
0x4002ead	          0x4901df	                            add r15, rbx	      1349	ui.c	FUNCTION_35	FOR_1	IF_15	ELSE_9
0x4002eb0	          0x4801d6	                            add rsi, rdx	       126	string3.h	FUNCTION_90	CALL_3
0x4002eb3	    0x480335000000	             add rsi, qword [0x04002eba]	       126	string3.h	FUNCTION_90	CALL_3
0x4002eba	          0x4889da	                            mov rdx, rbx	       126	string3.h	FUNCTION_90	CALL_3
0x4002ebd	      0xe800000000	                          call 0x4002ec2	       126	string3.h	FUNCTION_90	CALL_3
0x4002ec2	      0xe9a1fcffff	                           jmp 0x4002b68	       126	string3.h	FUNCTION_90	CALL_3
0x4002ec7	      0x448b7c2420	           mov r15d, dword [rsp + 0x20] 	      1243	ui.c	FUNCTION_35	IF_4
0x4002ecc	          0x4963f7	                        movsxd rsi, r15d	      1243	ui.c	FUNCTION_35	IF_4
0x4002ecf	          0x4801fe	                            add rsi, rdi	      1243	ui.c	FUNCTION_35	IF_4
0x4002ed2	    0xff1500000000	                 call qword [0x04002ed8]	      1243	ui.c	FUNCTION_35	IF_4
0x4002ed8	        0x8b7c2408	                mov edi, dword [rsp + 8]	      1249	ui.c	FUNCTION_35
0x4002edc	        0x2b7c240c	              sub edi, dword [rsp + 0xc]	      1249	ui.c	FUNCTION_35
0x4002ee0	          0x4489f9	                           mov ecx, r15d	      1243	ui.c	FUNCTION_35	IF_4
0x4002ee3	            0x29c1	                            sub ecx, eax	      1243	ui.c	FUNCTION_35	IF_4
0x4002ee5	    0x8b0500000000	            mov eax, dword [0x04002eeb] 	      1251	ui.c	FUNCTION_35	IF_6
0x4002eeb	        0x894c2420	             mov dword [rsp + 0x20], ecx	      1243	ui.c	FUNCTION_35	IF_4
0x4002eef	          0x83c701	                              add edi, 1	      1249	ui.c	FUNCTION_35
0x4002ef2	     0xfaf3d000000	            imul edi, dword [0x04002ef9]	      1249	ui.c	FUNCTION_35
0x4002ef9	          0x83c701	                              add edi, 1	      1249	ui.c	FUNCTION_35
0x4002efc	            0x85c0	                           test eax, eax	      1251	ui.c	FUNCTION_35	IF_6
0x4002efe	     0xf8402020000	                            je 0x4003106	      1251	ui.c	FUNCTION_35	IF_6
0x4002f04	             0x1ff	                            add edi, edi	      1252	ui.c	FUNCTION_35	IF_6
0x4002f06	      0xe994faffff	                           jmp 0x400299f	      1252	ui.c	FUNCTION_35	IF_6
0x4002f0b	      0xe800000000	                          call 0x4002f10	      1537	ui.c	FUNCTION_41	CALL_1
0x4002f10	      0x448b542434	           mov r10d, dword [rsp + 0x34] 	      1369	ui.c	FUNCTION_35	IF_24
0x4002f15	          0x4585d2	                         test r10d, r10d	      1369	ui.c	FUNCTION_35	IF_24
0x4002f18	     0xf844dfeffff	                            je 0x4002d6b	      1369	ui.c	FUNCTION_35	IF_24
0x4002f1e	      0xbf00000000	                              mov edi, 0	      1372	ui.c	FUNCTION_35	IF_24	CALL_11
0x4002f23	      0xe800000000	                          call 0x4002f28	      1372	ui.c	FUNCTION_35	IF_24	CALL_11
0x4002f28	    0x448b0d000000	            mov r9d, dword [0x04002f2f] 	       522	ui.c	FUNCTION_16	IF_1
0x4002f2f	          0x4585c9	                           test r9d, r9d	       522	ui.c	FUNCTION_16	IF_1
0x4002f32	            0x7565	                           jne 0x4002f99	       522	ui.c	FUNCTION_16	IF_1
0x4002f34	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      1374	ui.c	FUNCTION_35	IF_24	CALL_13
0x4002f39	          0x4889da	                            mov rdx, rbx	      1374	ui.c	FUNCTION_35	IF_24	CALL_13
0x4002f3c	            0x31ff	                            xor edi, edi	      1374	ui.c	FUNCTION_35	IF_24	CALL_13
0x4002f3e	      0xb900000000	                              mov ecx, 0	      1374	ui.c	FUNCTION_35	IF_24	CALL_13
0x4002f43	      0xe800000000	                          call 0x4002f48	      1374	ui.c	FUNCTION_35	IF_24	CALL_13
0x4002f48	    0x8b1500000000	            mov edx, dword [0x04002f4e] 	      1523	ui.c	FUNCTION_41	IF_1
0x4002f4e	            0x85d2	                           test edx, edx	      1523	ui.c	FUNCTION_41	IF_1
0x4002f50	            0x7520	                           jne 0x4002f72	      1523	ui.c	FUNCTION_41	IF_1
0x4002f52	    0x8b0500000000	            mov eax, dword [0x04002f58] 	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x4002f58	            0xa802	                              test al, 2	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x4002f5a	     0xf8527010000	                           jne 0x4003087	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x4002f60	      0xba00000000	                              mov edx, 0	      1528	ui.c	FUNCTION_41	IF_1	IF_2
0x4002f65	    0x4881fa000000	                              cmp rdx, 0	      1528	ui.c	FUNCTION_41	IF_1	IF_2
0x4002f6c	     0xf840d010000	                            je 0x400307f	      1528	ui.c	FUNCTION_41	IF_1	IF_2
0x4002f72	    0x8b0500000000	            mov eax, dword [0x04002f78] 	      1536	ui.c	FUNCTION_41	IF_3
0x4002f78	      0xbf00000000	                              mov edi, 0	      1537	ui.c	FUNCTION_41	CALL_1
0x4002f7d	            0x85c0	                           test eax, eax	      1536	ui.c	FUNCTION_41	IF_3
0x4002f7f	     0xf85f0000000	                           jne 0x4003075	      1536	ui.c	FUNCTION_41	IF_3
0x4002f85	      0xe800000000	                          call 0x4002f8a	      1540	ui.c	FUNCTION_41	CALL_2
0x4002f8a	      0xe9dcfdffff	                           jmp 0x4002d6b	      1540	ui.c	FUNCTION_41	CALL_2
0x4002f8f	      0xe800000000	                          call 0x4002f94	      1496	ui.c	FUNCTION_39	CALL_1
0x4002f94	      0xe97efeffff	                           jmp 0x4002e17	      1496	ui.c	FUNCTION_39	CALL_1
0x4002f99	    0x448b05000000	            mov r8d, dword [0x04002fa0] 	      1495	ui.c	FUNCTION_39	IF_1
0x4002fa0	    0x8b2d00000000	            mov ebp, dword [0x04002fa6] 	       524	ui.c	FUNCTION_16	IF_1
0x4002fa6	      0xbf00000000	                              mov edi, 0	      1496	ui.c	FUNCTION_39	CALL_1
0x4002fab	          0x4585c0	                           test r8d, r8d	      1495	ui.c	FUNCTION_39	IF_1
0x4002fae	     0xf8501010000	                           jne 0x40030b5	      1495	ui.c	FUNCTION_39	IF_1
0x4002fb4	      0xe800000000	                          call 0x4002fb9	      1499	ui.c	FUNCTION_39	CALL_2
0x4002fb9	          0x83f801	                              cmp eax, 1	       526	ui.c	FUNCTION_16	IF_1	CALL_1
0x4002fbc	           0xf94c0	                                 sete al	       526	ui.c	FUNCTION_16	IF_1	CALL_1
0x4002fbf	            0x85ed	                           test ebp, ebp	       532	ui.c	FUNCTION_16	IF_1	IF_2	IF_3
0x4002fc1	           0xfb6d0	                           movzx edx, al	       526	ui.c	FUNCTION_16	IF_1	CALL_1
0x4002fc4	    0x891500000000	            mov dword [0x04002fca], edx 	       526	ui.c	FUNCTION_16	IF_1	CALL_1
0x4002fca	     0xf8564ffffff	                           jne 0x4002f34	       532	ui.c	FUNCTION_16	IF_1	IF_2	IF_3
0x4002fd0	            0x84c0	                             test al, al	       532	ui.c	FUNCTION_16	IF_1	IF_2	IF_3
0x4002fd2	     0xf845cffffff	                            je 0x4002f34	       532	ui.c	FUNCTION_16	IF_1	IF_2	IF_3
0x4002fd8	      0xe800000000	                          call 0x4002fdd	       533	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_2
0x4002fdd	          0x83f802	                              cmp eax, 2	       533	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_2
0x4002fe0	            0x7410	                            je 0x4002ff2	       533	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_2
0x4002fe2	      0xe800000000	                          call 0x4002fe7	       534	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_3
0x4002fe7	      0x3d00100000	                         cmp eax, 0x1000	       534	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_3
0x4002fec	     0xf8542ffffff	                           jne 0x4002f34	       534	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_3
0x4002ff2	      0xb800000000	                              mov eax, 0	       535	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_4
0x4002ff7	    0x483d00000000	                              cmp rax, 0	       535	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_4
0x4002ffd	     0xf84db000000	                            je 0x40030de	       535	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_4
0x4003003	    0x8b0d00000000	            mov ecx, dword [0x04003009] 	       705	ui.c	FUNCTION_24	CALL_1
0x4003009	    0x8b0500000000	            mov eax, dword [0x0400300f] 	       705	ui.c	FUNCTION_24	CALL_1
0x400300f	            0x85c9	                           test ecx, ecx	       705	ui.c	FUNCTION_24	CALL_1
0x4003011	     0xf85a8000000	                           jne 0x40030bf	       705	ui.c	FUNCTION_24	CALL_1
0x4003017	            0x85c0	                           test eax, eax	       535	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_4
0x4003019	           0xf95c0	                                setne al	       535	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_4
0x400301c	            0x84c0	                             test al, al	       535	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_4
0x400301e	     0xf8410ffffff	                            je 0x4002f34	       535	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_4
0x4003024	    0x8b0500000000	            mov eax, dword [0x0400302a] 	       537	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_7
0x400302a	    0x390500000000	            cmp dword [0x04003030], eax 	       537	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_7
0x4003030	     0xf84fefeffff	                            je 0x4002f34	       537	ui.c	FUNCTION_16	IF_1	IF_2	IF_3	CALL_7
0x4003036	      0xbf19000000	                           mov edi, 0x19	       538	ui.c	FUNCTION_16	IF_1	IF_2	CALL_8
0x400303b	      0xe800000000	                          call 0x4003040	       538	ui.c	FUNCTION_16	IF_1	IF_2	CALL_8
0x4003040	      0xe9effeffff	                           jmp 0x4002f34	       538	ui.c	FUNCTION_16	IF_1	IF_2	CALL_8
0x4003045	           0xf1f00	                         nop dword [rax]	       538	ui.c	FUNCTION_16	IF_1	IF_2	CALL_8
0x4003048	        0x4883c448	                           add rsp, 0x48	      1379	ui.c	FUNCTION_35
0x400304c	              0x5b	                                 pop rbx	      1379	ui.c	FUNCTION_35
0x400304d	              0x5d	                                 pop rbp	      1379	ui.c	FUNCTION_35
0x400304e	            0x415c	                                 pop r12	      1379	ui.c	FUNCTION_35
0x4003050	            0x415d	                                 pop r13	      1379	ui.c	FUNCTION_35
0x4003052	            0x415e	                                 pop r14	      1379	ui.c	FUNCTION_35
0x4003054	            0x415f	                                 pop r15	      1379	ui.c	FUNCTION_35
0x4003056	              0xc3	                                     ret	      1379	ui.c	FUNCTION_35
0x4003057	            0xa802	                              test al, 2	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x4003059	     0xf84dcfcffff	                            je 0x4002d3b	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x400305f	    0xc70500000000	               mov dword [0x04003069], 1	      1530	ui.c	FUNCTION_41	IF_1	IF_2
0x4003069	      0xe9effcffff	                           jmp 0x4002d5d	      1530	ui.c	FUNCTION_41	IF_1	IF_2
0x400306e	            0x31db	                            xor ebx, ebx	      1261	ui.c	FUNCTION_35	FOR_1
0x4003070	      0xe977fcffff	                           jmp 0x4002cec	      1261	ui.c	FUNCTION_35	FOR_1
0x4003075	      0xe800000000	                          call 0x400307a	      1537	ui.c	FUNCTION_41	CALL_1
0x400307a	      0xe9ecfcffff	                           jmp 0x4002d6b	      1537	ui.c	FUNCTION_41	CALL_1
0x400307f	            0xa801	                              test al, 1	      1528	ui.c	FUNCTION_41	IF_1	IF_2
0x4003081	     0xf84ebfeffff	                            je 0x4002f72	      1528	ui.c	FUNCTION_41	IF_1	IF_2
0x4003087	    0xc70500000000	               mov dword [0x04003091], 1	      1530	ui.c	FUNCTION_41	IF_1	IF_2
0x4003091	      0xe9d5fcffff	                           jmp 0x4002d6b	      1530	ui.c	FUNCTION_41	IF_1	IF_2
0x4003096	    0x488b3d000000	            mov rdi, qword [0x0400309d] 	       691	ui.c	FUNCTION_23	CALL_1
0x400309d	      0xbe61000000	                           mov esi, 0x61	       691	ui.c	FUNCTION_23	CALL_1
0x40030a2	      0xe800000000	                          call 0x40030a7	       691	ui.c	FUNCTION_23	CALL_1
0x40030a7	          0x4885c0	                           test rax, rax	       691	ui.c	FUNCTION_23	CALL_1
0x40030aa	           0xf95c0	                                setne al	       691	ui.c	FUNCTION_23	CALL_1
0x40030ad	           0xfb6c0	                           movzx eax, al	       691	ui.c	FUNCTION_23	CALL_1
0x40030b0	      0xe9b1fdffff	                           jmp 0x4002e66	       691	ui.c	FUNCTION_23	CALL_1
0x40030b5	      0xe800000000	                          call 0x40030ba	      1496	ui.c	FUNCTION_39	CALL_1
0x40030ba	      0xe9fafeffff	                           jmp 0x4002fb9	      1496	ui.c	FUNCTION_39	CALL_1
0x40030bf	      0xbe50000000	                           mov esi, 0x50	       705	ui.c	FUNCTION_24	CALL_1
0x40030c4	    0x488b3d000000	            mov rdi, qword [0x040030cb] 	       705	ui.c	FUNCTION_24	CALL_1
0x40030cb	      0xe800000000	                          call 0x40030d0	       705	ui.c	FUNCTION_24	CALL_1
0x40030d0	          0x4885c0	                           test rax, rax	       705	ui.c	FUNCTION_24	CALL_1
0x40030d3	           0xf95c0	                                setne al	       705	ui.c	FUNCTION_24	CALL_1
0x40030d6	           0xfb6c0	                           movzx eax, al	       705	ui.c	FUNCTION_24	CALL_1
0x40030d9	      0xe939ffffff	                           jmp 0x4003017	       705	ui.c	FUNCTION_24	CALL_1
0x40030de	    0x8b3500000000	            mov esi, dword [0x040030e4] 	       691	ui.c	FUNCTION_23	CALL_1
0x40030e4	    0x8b0500000000	            mov eax, dword [0x040030ea] 	       691	ui.c	FUNCTION_23	CALL_1
0x40030ea	            0x85f6	                           test esi, esi	       691	ui.c	FUNCTION_23	CALL_1
0x40030ec	     0xf8425ffffff	                            je 0x4003017	       691	ui.c	FUNCTION_23	CALL_1
0x40030f2	      0xbe61000000	                           mov esi, 0x61	       691	ui.c	FUNCTION_23	CALL_1
0x40030f7	            0xebcb	                           jmp 0x40030c4	       691	ui.c	FUNCTION_23	CALL_1
0x40030f9	        0x8b442438	            mov eax, dword [rsp + 0x38] 	      1269	ui.c	FUNCTION_35	FOR_1	IF_10
0x40030fd	        0x89442404	                mov dword [rsp + 4], eax	      1269	ui.c	FUNCTION_35	FOR_1	IF_10
0x4003101	      0xe900f9ffff	                           jmp 0x4002a06	      1269	ui.c	FUNCTION_35	FOR_1	IF_10
0x4003106	    0x8b0500000000	            mov eax, dword [0x0400310c] 	      1269	ui.c	FUNCTION_35	FOR_1	IF_10
0x400310c	      0xe986f8ffff	                           jmp 0x4002997	      1269	ui.c	FUNCTION_35	FOR_1	IF_10
end_global_changes	IF,5:DO,0:functions,0:FOR,0:CALL,4:SWITCH,0:WHILE,0:ELSE,0	78
0x4001de0	    0x8b0500000000	            mov eax, dword [0x04001de6] 	       643	ui.c	FUNCTION_21	IF_1
0x4001de6	          0x83e801	                              sub eax, 1	       643	ui.c	FUNCTION_21	IF_1
0x4001de9	            0x85c0	                           test eax, eax	       643	ui.c	FUNCTION_21	IF_1
0x4001deb	    0x890500000000	            mov dword [0x04001df1], eax 	       643	ui.c	FUNCTION_21	IF_1
0x4001df1	            0x7e05	                           jle 0x4001df8	       643	ui.c	FUNCTION_21	IF_1
0x4001df3	            0xf3c3	                                     ret	       668	ui.c	FUNCTION_21
0x4001df5	           0xf1f00	                         nop dword [rax]	       668	ui.c	FUNCTION_21
0x4001df8	    0x448b05000000	            mov r8d, dword [0x04001dff] 	       646	ui.c	FUNCTION_21	IF_2
0x4001dff	          0x4585c0	                           test r8d, r8d	       646	ui.c	FUNCTION_21	IF_2
0x4001e02	            0x754c	                           jne 0x4001e50	       646	ui.c	FUNCTION_21	IF_2
0x4001e04	    0x8b3d00000000	            mov edi, dword [0x04001e0a] 	       651	ui.c	FUNCTION_21	IF_2	IF_3
0x4001e0a	    0x8b0500000000	            mov eax, dword [0x04001e10] 	       649	ui.c	FUNCTION_21	IF_2
0x4001e10	    0xc70500000000	               mov dword [0x04001e1a], 1	       648	ui.c	FUNCTION_21	IF_2
0x4001e1a	    0xc70500000000	               mov dword [0x04001e24], 0	       650	ui.c	FUNCTION_21	IF_2
0x4001e24	            0x85ff	                           test edi, edi	       651	ui.c	FUNCTION_21	IF_2	IF_3
0x4001e26	    0x890500000000	            mov dword [0x04001e2c], eax 	       649	ui.c	FUNCTION_21	IF_2
0x4001e2c	            0x7422	                            je 0x4001e50	       651	ui.c	FUNCTION_21	IF_2	IF_3
0x4001e2e	        0x4883ec08	                              sub rsp, 8	       642	ui.c	FUNCTION_21
0x4001e32	            0xa801	                              test al, 1	       655	ui.c	FUNCTION_21	IF_2	IF_3	IF_4
0x4001e34	            0x752a	                           jne 0x4001e60	       655	ui.c	FUNCTION_21	IF_2	IF_3	IF_4
0x4001e36	            0xa802	                              test al, 2	       660	ui.c	FUNCTION_21	IF_2	IF_3	IF_5
0x4001e38	            0x7576	                           jne 0x4001eb0	       660	ui.c	FUNCTION_21	IF_2	IF_3	IF_5
0x4001e3a	    0xc70500000000	               mov dword [0x04001e44], 0	       667	ui.c	FUNCTION_21
0x4001e44	        0x4883c408	                              add rsp, 8	       668	ui.c	FUNCTION_21
0x4001e48	              0xc3	                                     ret	       668	ui.c	FUNCTION_21
0x4001e49	     0xf1f80000000	                         nop dword [rax]	       668	ui.c	FUNCTION_21
0x4001e50	    0xc70500000000	               mov dword [0x04001e5a], 0	       667	ui.c	FUNCTION_21
0x4001e5a	              0xc3	                                     ret	       667	ui.c	FUNCTION_21
0x4001e5b	       0xf1f440000	                   nop dword [rax + rax]	       667	ui.c	FUNCTION_21
0x4001e60	      0xbf00000000	                              mov edi, 0	       657	ui.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_1
0x4001e65	      0xe800000000	                          call 0x4001e6a	       657	ui.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_1
0x4001e6a	    0x8b3500000000	            mov esi, dword [0x04001e70] 	      1523	ui.c	FUNCTION_41	IF_1
0x4001e70	            0x85f6	                           test esi, esi	      1523	ui.c	FUNCTION_41	IF_1
0x4001e72	            0x751f	                           jne 0x4001e93	      1523	ui.c	FUNCTION_41	IF_1
0x4001e74	      0xb800000000	                              mov eax, 0	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x4001e79	    0x483d00000000	                              cmp rax, 0	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x4001e7f	    0x8b0500000000	            mov eax, dword [0x04001e85] 	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x4001e85	     0xf8488000000	                            je 0x4001f13	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x4001e8b	            0xa801	                              test al, 1	      1528	ui.c	FUNCTION_41	IF_1	IF_2
0x4001e8d	     0xf8588000000	                           jne 0x4001f1b	      1528	ui.c	FUNCTION_41	IF_1	IF_2
0x4001e93	    0x8b0d00000000	            mov ecx, dword [0x04001e99] 	      1536	ui.c	FUNCTION_41	IF_3
0x4001e99	      0xbf00000000	                              mov edi, 0	      1537	ui.c	FUNCTION_41	CALL_1
0x4001e9e	            0x85c9	                           test ecx, ecx	      1536	ui.c	FUNCTION_41	IF_3
0x4001ea0	            0x7557	                           jne 0x4001ef9	      1536	ui.c	FUNCTION_41	IF_3
0x4001ea2	      0xe800000000	                          call 0x4001ea7	      1540	ui.c	FUNCTION_41	CALL_2
0x4001ea7	    0x8b0500000000	            mov eax, dword [0x04001ead] 	      1540	ui.c	FUNCTION_41	CALL_2
0x4001ead	            0xeb87	                           jmp 0x4001e36	      1540	ui.c	FUNCTION_41	CALL_2
0x4001eaf	              0x90	                                     nop	      1540	ui.c	FUNCTION_41	CALL_2
0x4001eb0	      0xbf00000000	                              mov edi, 0	       662	ui.c	FUNCTION_21	IF_2	IF_3	IF_5	CALL_3
0x4001eb5	      0xe800000000	                          call 0x4001eba	       662	ui.c	FUNCTION_21	IF_2	IF_3	IF_5	CALL_3
0x4001eba	    0x8b1500000000	            mov edx, dword [0x04001ec0] 	      1523	ui.c	FUNCTION_41	IF_1
0x4001ec0	            0x85d2	                           test edx, edx	      1523	ui.c	FUNCTION_41	IF_1
0x4001ec2	            0x751c	                           jne 0x4001ee0	      1523	ui.c	FUNCTION_41	IF_1
0x4001ec4	    0x8b0500000000	            mov eax, dword [0x04001eca] 	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x4001eca	            0xa802	                              test al, 2	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x4001ecc	     0xf8568ffffff	                           jne 0x4001e3a	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x4001ed2	      0xba00000000	                              mov edx, 0	      1528	ui.c	FUNCTION_41	IF_1	IF_2
0x4001ed7	    0x4881fa000000	                              cmp rdx, 0	      1528	ui.c	FUNCTION_41	IF_1	IF_2
0x4001ede	            0x7450	                            je 0x4001f30	      1528	ui.c	FUNCTION_41	IF_1	IF_2
0x4001ee0	    0x8b0500000000	            mov eax, dword [0x04001ee6] 	      1536	ui.c	FUNCTION_41	IF_3
0x4001ee6	      0xbf00000000	                              mov edi, 0	      1537	ui.c	FUNCTION_41	CALL_1
0x4001eeb	            0x85c0	                           test eax, eax	      1536	ui.c	FUNCTION_41	IF_3
0x4001eed	            0x751a	                           jne 0x4001f09	      1536	ui.c	FUNCTION_41	IF_3
0x4001eef	      0xe800000000	                          call 0x4001ef4	      1540	ui.c	FUNCTION_41	CALL_2
0x4001ef4	      0xe941ffffff	                           jmp 0x4001e3a	      1540	ui.c	FUNCTION_41	CALL_2
0x4001ef9	      0xe800000000	                          call 0x4001efe	      1537	ui.c	FUNCTION_41	CALL_1
0x4001efe	    0x8b0500000000	            mov eax, dword [0x04001f04] 	      1537	ui.c	FUNCTION_41	CALL_1
0x4001f04	      0xe92dffffff	                           jmp 0x4001e36	      1537	ui.c	FUNCTION_41	CALL_1
0x4001f09	      0xe800000000	                          call 0x4001f0e	      1537	ui.c	FUNCTION_41	CALL_1
0x4001f0e	      0xe927ffffff	                           jmp 0x4001e3a	      1537	ui.c	FUNCTION_41	CALL_1
0x4001f13	            0xa802	                              test al, 2	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x4001f15	     0xf8470ffffff	                            je 0x4001e8b	      1527	ui.c	FUNCTION_41	IF_1	IF_2
0x4001f1b	    0xc70500000000	               mov dword [0x04001f25], 1	      1530	ui.c	FUNCTION_41	IF_1	IF_2
0x4001f25	    0x8b0500000000	            mov eax, dword [0x04001f2b] 	      1530	ui.c	FUNCTION_41	IF_1	IF_2
0x4001f2b	      0xe906ffffff	                           jmp 0x4001e36	      1530	ui.c	FUNCTION_41	IF_1	IF_2
0x4001f30	            0xa801	                              test al, 1	      1528	ui.c	FUNCTION_41	IF_1	IF_2
0x4001f32	            0x74ac	                            je 0x4001ee0	      1528	ui.c	FUNCTION_41	IF_1	IF_2
0x4001f34	      0xe901ffffff	                           jmp 0x4001e3a	      1528	ui.c	FUNCTION_41	IF_1	IF_2
clip_x11_request_selection	IF,5:DO,0:functions,0:FOR,1:CALL,11:SWITCH,1:WHILE,1:ELSE,0	118
0x4005060	            0x4156	                                push r14	      2246	ui.c	FUNCTION_66
0x4005062	            0x4155	                                push r13	      2246	ui.c	FUNCTION_66
0x4005064	          0x4989fe	                            mov r14, rdi	      2246	ui.c	FUNCTION_66
0x4005067	            0x4154	                                push r12	      2246	ui.c	FUNCTION_66
0x4005069	              0x55	                                push rbp	      2246	ui.c	FUNCTION_66
0x400506a	          0x4989d5	                            mov r13, rdx	      2246	ui.c	FUNCTION_66
0x400506d	              0x53	                                push rbx	      2246	ui.c	FUNCTION_66
0x400506e	            0x31ed	                            xor ebp, ebp	      2254	ui.c	FUNCTION_66	FOR_1
0x4005070	          0x4889f3	                            mov rbx, rsi	      2246	ui.c	FUNCTION_66
0x4005073	    0x4881ecd00000	                           sub rsp, 0xd0	      2246	ui.c	FUNCTION_66
0x400507a	    0x64488b042528	                mov rax, qword fs:[0x28]	      2246	ui.c	FUNCTION_66
0x4005083	    0x48898424c800	             mov qword [rsp + 0xc8], rax	      2246	ui.c	FUNCTION_66
0x400508b	            0x31c0	                            xor eax, eax	      2246	ui.c	FUNCTION_66
0x400508d	          0x83fd04	                              cmp ebp, 4	      2262	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x4005090	     0xf87a1010000	                            ja 0x4005237	      2262	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x4005096	            0x89e8	                            mov eax, ebp	      2262	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x4005098	    0xff24c5000000	                       jmp qword [rax*8]	      2262	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x400509f	    0x8b0d00000000	            mov ecx, dword [0x040050a5] 	      2278	ui.c	FUNCTION_66	FOR_1	IF_1
0x40050a5	    0x488b05000000	            mov rax, qword [0x040050ac] 	      2269	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x40050ac	            0x85c9	                           test ecx, ecx	      2278	ui.c	FUNCTION_66	FOR_1	IF_1
0x40050ae	          0x4889c2	                            mov rdx, rax	      2269	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x40050b1	            0x7521	                           jne 0x40050d4	      2278	ui.c	FUNCTION_66	FOR_1	IF_1
0x40050b3	      0xbd03000000	                              mov ebp, 3	      2260	ui.c	FUNCTION_66	FOR_1
0x40050b8	      0xe95a010000	                           jmp 0x4005217	      2260	ui.c	FUNCTION_66	FOR_1
0x40050bd	    0x488b15000000	            mov rdx, qword [0x040050c4] 	      2267	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x40050c4	    0x488b05000000	            mov rax, qword [0x040050cb] 	      2267	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x40050cb	          0x4839c2	                            cmp rdx, rax	      2276	ui.c	FUNCTION_66	FOR_1	IF_1
0x40050ce	     0xf841a010000	                            je 0x40051ee	      2276	ui.c	FUNCTION_66	FOR_1	IF_1
0x40050d4	        0x498b7550	            mov rsi, qword [r13 + 0x50] 	      2286	ui.c	FUNCTION_66	FOR_1	CALL_1
0x40050d8	          0x4531c9	                            xor r9d, r9d	      2286	ui.c	FUNCTION_66	FOR_1	CALL_1
0x40050db	    0x41b800000000	                              mov r8d, 0	      2286	ui.c	FUNCTION_66	FOR_1	CALL_1
0x40050e1	      0xb900000000	                              mov ecx, 0	      2286	ui.c	FUNCTION_66	FOR_1	CALL_1
0x40050e6	          0x4c89f7	                            mov rdi, r14	      2286	ui.c	FUNCTION_66	FOR_1	CALL_1
0x40050e9	    0xc70500000000	               mov dword [0x040050f3], 2	      2285	ui.c	FUNCTION_66	FOR_1
0x40050f3	      0xe800000000	                          call 0x40050f8	      2286	ui.c	FUNCTION_66	FOR_1	CALL_1
0x40050f8	          0x4889df	                            mov rdi, rbx	      2291	ui.c	FUNCTION_66	FOR_1	CALL_2
0x40050fb	      0xe800000000	                          call 0x4005100	      2291	ui.c	FUNCTION_66	FOR_1	CALL_2
0x4005100	            0x31ff	                            xor edi, edi	      2298	ui.c	FUNCTION_66	FOR_1	CALL_3
0x4005102	      0xe800000000	                          call 0x4005107	      2298	ui.c	FUNCTION_66	FOR_1	CALL_3
0x4005107	        0x4c8d6002	                      lea r12, [rax + 2]	      2320	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_3	CALL_8
0x400510b	            0xeb0b	                           jmp 0x4005118	      2299	ui.c	FUNCTION_66	FOR_1	WHILE_1
0x400510d	           0xf1f00	                         nop dword [rax]	      2299	ui.c	FUNCTION_66	FOR_1	WHILE_1
0x4005110	          0x4889e7	                            mov rdi, rsp	      2311	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_7
0x4005113	      0xe800000000	                          call 0x4005118	      2311	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_7
0x4005118	    0x8b1500000000	            mov edx, dword [0x0400511e] 	      2299	ui.c	FUNCTION_66	FOR_1	WHILE_1
0x400511e	          0x83fa02	                              cmp edx, 2	      2299	ui.c	FUNCTION_66	FOR_1	WHILE_1
0x4005121	            0x7575	                           jne 0x4005198	      2299	ui.c	FUNCTION_66	FOR_1	WHILE_1
0x4005123	          0x4889e2	                            mov rdx, rsp	      2301	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_4
0x4005126	      0xbe1c000000	                           mov esi, 0x1c	      2301	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_4
0x400512b	          0x4889df	                            mov rdi, rbx	      2301	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_4
0x400512e	      0xe800000000	                          call 0x4005133	      2301	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_4
0x4005133	            0x85c0	                           test eax, eax	      2301	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_4
0x4005135	            0x75d9	                           jne 0x4005110	      2301	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_4
0x4005137	          0x4889e2	                            mov rdx, rsp	      2302	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_5
0x400513a	      0xbe1f000000	                           mov esi, 0x1f	      2302	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_5
0x400513f	          0x4889df	                            mov rdi, rbx	      2302	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_5
0x4005142	      0xe800000000	                          call 0x4005147	      2302	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_5
0x4005147	            0x85c0	                           test eax, eax	      2302	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_5
0x4005149	            0x75c5	                           jne 0x4005110	      2302	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_5
0x400514b	          0x4889e2	                            mov rdx, rsp	      2303	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_6
0x400514e	      0xbe1e000000	                           mov esi, 0x1e	      2303	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_6
0x4005153	          0x4889df	                            mov rdi, rbx	      2303	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_6
0x4005156	      0xe800000000	                          call 0x400515b	      2303	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_6
0x400515b	            0x85c0	                           test eax, eax	      2303	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_6
0x400515d	            0x75b1	                           jne 0x4005110	      2303	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_2	CALL_6
0x400515f	            0x31ff	                            xor edi, edi	      2320	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_3	CALL_8
0x4005161	      0xe800000000	                          call 0x4005166	      2320	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_3	CALL_8
0x4005166	          0x4c39e0	                            cmp rax, r12	      2320	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_3	CALL_8
0x4005169	     0xf8fb4000000	                            jg 0x4005223	      2320	ui.c	FUNCTION_66	FOR_1	WHILE_1	IF_3	CALL_8
0x400516f	            0x31f6	                            xor esi, esi	      2327	ui.c	FUNCTION_66	FOR_1	WHILE_1	CALL_9
0x4005171	          0x4889df	                            mov rdi, rbx	      2327	ui.c	FUNCTION_66	FOR_1	WHILE_1	CALL_9
0x4005174	      0xe800000000	                          call 0x4005179	      2327	ui.c	FUNCTION_66	FOR_1	WHILE_1	CALL_9
0x4005179	      0xbe01000000	                              mov esi, 1	       291	ui.c	FUNCTION_6	CALL_2
0x400517e	      0xbf01000000	                              mov edi, 1	       291	ui.c	FUNCTION_6	CALL_2
0x4005183	      0xe800000000	                          call 0x4005188	       291	ui.c	FUNCTION_6	CALL_2
0x4005188	    0x8b1500000000	            mov edx, dword [0x0400518e] 	      2299	ui.c	FUNCTION_66	FOR_1	WHILE_1
0x400518e	          0x83fa02	                              cmp edx, 2	      2299	ui.c	FUNCTION_66	FOR_1	WHILE_1
0x4005191	            0x7490	                            je 0x4005123	      2299	ui.c	FUNCTION_66	FOR_1	WHILE_1
0x4005193	       0xf1f440000	                   nop dword [rax + rax]	      2299	ui.c	FUNCTION_66	FOR_1	WHILE_1
0x4005198	          0x83fa01	                              cmp edx, 1	      2333	ui.c	FUNCTION_66	FOR_1	IF_4
0x400519b	            0x7417	                            je 0x40051b4	      2333	ui.c	FUNCTION_66	FOR_1	IF_4
0x400519d	          0x83c501	                              add ebp, 1	      2260	ui.c	FUNCTION_66	FOR_1
0x40051a0	          0x83fd06	                              cmp ebp, 6	      2254	ui.c	FUNCTION_66	FOR_1
0x40051a3	     0xf85e4feffff	                           jne 0x400508d	      2254	ui.c	FUNCTION_66	FOR_1
0x40051a9	          0x4c89ee	                            mov rsi, r13	      2343	ui.c	FUNCTION_66	CALL_11
0x40051ac	          0x4889df	                            mov rdi, rbx	      2343	ui.c	FUNCTION_66	CALL_11
0x40051af	      0xe800000000	                          call 0x40051b4	      2343	ui.c	FUNCTION_66	CALL_11
0x40051b4	    0x488b8424c800	            mov rax, qword [rsp + 0xc8] 	      2344	ui.c	FUNCTION_66
0x40051bc	    0x644833042528	                xor rax, qword fs:[0x28]	      2344	ui.c	FUNCTION_66
0x40051c5	            0x756b	                           jne 0x4005232	      2344	ui.c	FUNCTION_66
0x40051c7	    0x4881c4d00000	                           add rsp, 0xd0	      2344	ui.c	FUNCTION_66
0x40051ce	              0x5b	                                 pop rbx	      2344	ui.c	FUNCTION_66
0x40051cf	              0x5d	                                 pop rbp	      2344	ui.c	FUNCTION_66
0x40051d0	            0x415c	                                 pop r12	      2344	ui.c	FUNCTION_66
0x40051d2	            0x415d	                                 pop r13	      2344	ui.c	FUNCTION_66
0x40051d4	            0x415e	                                 pop r14	      2344	ui.c	FUNCTION_66
0x40051d6	              0xc3	                                     ret	      2344	ui.c	FUNCTION_66
0x40051d7	    0x488b15000000	            mov rdx, qword [0x040051de] 	      2272	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x40051de	    0x488b05000000	            mov rax, qword [0x040051e5] 	      2272	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x40051e5	          0x4839c2	                            cmp rdx, rax	      2276	ui.c	FUNCTION_66	FOR_1	IF_1
0x40051e8	     0xf85e6feffff	                           jne 0x40050d4	      2276	ui.c	FUNCTION_66	FOR_1	IF_1
0x40051ee	    0x8b0500000000	            mov eax, dword [0x040051f4] 	      2278	ui.c	FUNCTION_66	FOR_1	IF_1
0x40051f4	            0x85c0	                           test eax, eax	      2278	ui.c	FUNCTION_66	FOR_1	IF_1
0x40051f6	            0x74a5	                            je 0x400519d	      2278	ui.c	FUNCTION_66	FOR_1	IF_1
0x40051f8	      0xe9d7feffff	                           jmp 0x40050d4	      2278	ui.c	FUNCTION_66	FOR_1	IF_1
0x40051fd	    0x488b15000000	            mov rdx, qword [0x04005204] 	      2265	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x4005204	    0x488b05000000	            mov rax, qword [0x0400520b] 	      2265	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x400520b	      0xe9bbfeffff	                           jmp 0x40050cb	      2265	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x4005210	    0x488b05000000	            mov rax, qword [0x04005217] 	      2265	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x4005217	    0x488b15000000	            mov rdx, qword [0x0400521e] 	      2271	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x400521e	      0xe9a8feffff	                           jmp 0x40050cb	      2271	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x4005223	    0x833d00000000	               cmp dword [0x0400522a], 1	      2333	ui.c	FUNCTION_66	FOR_1	IF_4
0x400522a	     0xf8579ffffff	                           jne 0x40051a9	      2333	ui.c	FUNCTION_66	FOR_1	IF_4
0x4005230	            0xeb82	                           jmp 0x40051b4	      2333	ui.c	FUNCTION_66	FOR_1	IF_4
0x4005232	      0xe800000000	                          call 0x4005237	      2344	ui.c	FUNCTION_66
0x4005237	      0xba1f000000	                           mov edx, 0x1f	      2273	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x400523c	    0x488b05000000	            mov rax, qword [0x04005243] 	      2273	ui.c	FUNCTION_66	FOR_1	SWITCH_1
0x4005243	      0xe983feffff	                           jmp 0x40050cb	      2273	ui.c	FUNCTION_66	FOR_1	SWITCH_1
vim_is_input_buf_empty	IF,0:DO,0:functions,0:FOR,0:CALL,0:SWITCH,0:WHILE,0:ELSE,0	5
0x4003f10	    0x8b1500000000	            mov edx, dword [0x04003f16] 	      1627	ui.c	FUNCTION_45
0x4003f16	            0x31c0	                            xor eax, eax	      1627	ui.c	FUNCTION_45
0x4003f18	            0x85d2	                           test edx, edx	      1627	ui.c	FUNCTION_45
0x4003f1a	           0xf94c0	                                 sete al	      1627	ui.c	FUNCTION_45
0x4003f1d	              0xc3	                                     ret	      1628	ui.c	FUNCTION_45
ui_breakcheck	IF,0:DO,0:functions,0:FOR,0:CALL,1:SWITCH,0:WHILE,0:ELSE,0	17
0x4001510	              0x53	                                push rbx	       395	ui.c	FUNCTION_12
0x4001511	    0x8b1d00000000	            mov ebx, dword [0x04001517] 	       406	ui.c	FUNCTION_13
0x4001517	          0x8d4301	                      lea eax, [rbx + 1]	       409	ui.c	FUNCTION_13
0x400151a	    0x890500000000	            mov dword [0x04001520], eax 	       409	ui.c	FUNCTION_13
0x4001520	    0x8b0500000000	            mov eax, dword [0x04001526] 	       412	ui.c	FUNCTION_13	IF_1
0x4001526	            0x85c0	                           test eax, eax	       412	ui.c	FUNCTION_13	IF_1
0x4001528	            0x7516	                           jne 0x4001540	       412	ui.c	FUNCTION_13	IF_1
0x400152a	            0x31ff	                            xor edi, edi	       416	ui.c	FUNCTION_13	CALL_2
0x400152c	      0xe800000000	                          call 0x4001531	       416	ui.c	FUNCTION_13	CALL_2
0x4001531	    0x891d00000000	            mov dword [0x04001537], ebx 	       418	ui.c	FUNCTION_13
0x4001537	              0x5b	                                 pop rbx	       397	ui.c	FUNCTION_12
0x4001538	              0xc3	                                     ret	       397	ui.c	FUNCTION_12
0x4001539	     0xf1f80000000	                         nop dword [rax]	       397	ui.c	FUNCTION_12
0x4001540	      0xe800000000	                          call 0x4001545	       413	ui.c	FUNCTION_13	CALL_1
0x4001545	    0x891d00000000	            mov dword [0x0400154b], ebx 	       418	ui.c	FUNCTION_13
0x400154b	              0x5b	                                 pop rbx	       397	ui.c	FUNCTION_12
0x400154c	              0xc3	                                     ret	       397	ui.c	FUNCTION_12
ui_char_avail	IF,2:DO,0:functions,0:FOR,0:CALL,4:SWITCH,0:WHILE,0:ELSE,0	17
0x40013c0	        0x4883ec08	                              sub rsp, 8	       260	ui.c	FUNCTION_5
0x40013c4	    0x8b0500000000	            mov eax, dword [0x040013ca] 	       262	ui.c	FUNCTION_5	IF_1
0x40013ca	            0x85c0	                           test eax, eax	       262	ui.c	FUNCTION_5	IF_1
0x40013cc	            0x7522	                           jne 0x40013f0	       262	ui.c	FUNCTION_5	IF_1
0x40013ce	      0xe800000000	                          call 0x40013d3	       270	ui.c	FUNCTION_5	IF_2	CALL_3
0x40013d3	            0x85c0	                           test eax, eax	       270	ui.c	FUNCTION_5	IF_2	CALL_3
0x40013d5	            0x7409	                            je 0x40013e0	       270	ui.c	FUNCTION_5	IF_2	CALL_3
0x40013d7	            0x31c0	                            xor eax, eax	       277	ui.c	FUNCTION_5
0x40013d9	        0x4883c408	                              add rsp, 8	       277	ui.c	FUNCTION_5
0x40013dd	              0xc3	                                     ret	       277	ui.c	FUNCTION_5
0x40013de	            0x6690	                                     nop	       277	ui.c	FUNCTION_5
0x40013e0	        0x4883c408	                              add rsp, 8	       277	ui.c	FUNCTION_5
0x40013e4	      0xe900000000	                           jmp 0x40013e9	       273	ui.c	FUNCTION_5	CALL_4
0x40013e9	     0xf1f80000000	                         nop dword [rax]	       273	ui.c	FUNCTION_5	CALL_4
0x40013f0	      0xe800000000	                          call 0x40013f5	       264	ui.c	FUNCTION_5	IF_1	CALL_1
0x40013f5	        0x4883c408	                              add rsp, 8	       277	ui.c	FUNCTION_5
0x40013f9	      0xe900000000	                           jmp 0x40013fe	       265	ui.c	FUNCTION_5	IF_1	CALL_2
clip_x11_convert_selection_cb	IF,14:DO,0:functions,0:FOR,0:CALL,15:SWITCH,0:WHILE,0:ELSE,5	235
0x4000180	            0x4157	                                push r15	      2355	ui.c	FUNCTION_67
0x4000182	            0x4156	                                push r14	      2355	ui.c	FUNCTION_67
0x4000184	            0x4155	                                push r13	      2355	ui.c	FUNCTION_67
0x4000186	            0x4154	                                push r12	      2355	ui.c	FUNCTION_67
0x4000188	              0x55	                                push rbp	      2355	ui.c	FUNCTION_67
0x4000189	              0x53	                                push rbx	      2355	ui.c	FUNCTION_67
0x400018a	      0xbb00000000	                              mov ebx, 0	      2364	ui.c	FUNCTION_67	IF_1
0x400018f	        0x4883ec58	                           sub rsp, 0x58	      2355	ui.c	FUNCTION_67
0x4000193	    0x64488b042528	                mov rax, qword fs:[0x28]	      2355	ui.c	FUNCTION_67
0x400019c	      0x4889442448	             mov qword [rsp + 0x48], rax	      2355	ui.c	FUNCTION_67
0x40001a1	            0x31c0	                            xor eax, eax	      2355	ui.c	FUNCTION_67
0x40001a3	    0x488b05000000	            mov rax, qword [0x040001aa] 	      2364	ui.c	FUNCTION_67	IF_1
0x40001aa	          0x483906	                    cmp qword [rsi], rax	      2364	ui.c	FUNCTION_67	IF_1
0x40001ad	      0xb800000000	                              mov eax, 0	      2364	ui.c	FUNCTION_67	IF_1
0x40001b2	    0x4c8ba4249000	            mov r12, qword [rsp + 0x90] 	      2355	ui.c	FUNCTION_67
0x40001ba	        0x480f45d8	                         cmovne rbx, rax	      2364	ui.c	FUNCTION_67	IF_1
0x40001be	        0x448b5304	               mov r10d, dword [rbx + 4]	      2368	ui.c	FUNCTION_67	IF_2
0x40001c2	          0x4585d2	                         test r10d, r10d	      2368	ui.c	FUNCTION_67	IF_2
0x40001c5	            0x7459	                            je 0x4000220	      2368	ui.c	FUNCTION_67	IF_2
0x40001c7	          0x488b02	                    mov rax, qword [rdx]	      2372	ui.c	FUNCTION_67	IF_3
0x40001ca	    0x483b05000000	            cmp rax, qword [0x040001d1] 	      2372	ui.c	FUNCTION_67	IF_3
0x40001d1	          0x4989d7	                            mov r15, rdx	      2372	ui.c	FUNCTION_67	IF_3
0x40001d4	          0x4989cd	                            mov r13, rcx	      2372	ui.c	FUNCTION_67	IF_3
0x40001d7	          0x4c89c5	                             mov rbp, r8	      2372	ui.c	FUNCTION_67	IF_3
0x40001da	          0x4d89ce	                             mov r14, r9	      2372	ui.c	FUNCTION_67	IF_3
0x40001dd	     0xf848d010000	                            je 0x4000370	      2372	ui.c	FUNCTION_67	IF_3
0x40001e3	        0x4883f81f	                           cmp rax, 0x1f	      2399	ui.c	FUNCTION_67	IF_5
0x40001e7	            0x746f	                            je 0x4000258	      2399	ui.c	FUNCTION_67	IF_5
0x40001e9	    0x483b05000000	            cmp rax, qword [0x040001f0] 	      2401	ui.c	FUNCTION_67	IF_5
0x40001f0	            0x7466	                            je 0x4000258	      2401	ui.c	FUNCTION_67	IF_5
0x40001f2	    0x483b05000000	            cmp rax, qword [0x040001f9] 	      2402	ui.c	FUNCTION_67	IF_5
0x40001f9	            0x744d	                            je 0x4000248	      2402	ui.c	FUNCTION_67	IF_5
0x40001fb	    0x483b05000000	            cmp rax, qword [0x04000202] 	      2404	ui.c	FUNCTION_67	IF_5
0x4000202	            0x7454	                            je 0x4000258	      2404	ui.c	FUNCTION_67	IF_5
0x4000204	    0x483b05000000	            cmp rax, qword [0x0400020b] 	      2405	ui.c	FUNCTION_67	IF_5
0x400020b	            0x744b	                            je 0x4000258	      2405	ui.c	FUNCTION_67	IF_5
0x400020d	    0x483b05000000	            cmp rax, qword [0x04000214] 	      2406	ui.c	FUNCTION_67	IF_5
0x4000214	            0x7442	                            je 0x4000258	      2406	ui.c	FUNCTION_67	IF_5
0x4000216	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2406	ui.c	FUNCTION_67	IF_5
0x4000220	            0x31c0	                            xor eax, eax	      2431	ui.c	FUNCTION_67	ELSE_2	IF_10
0x4000222	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      2488	ui.c	FUNCTION_67
0x4000227	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      2488	ui.c	FUNCTION_67
0x4000230	     0xf85a7030000	                           jne 0x40005dd	      2488	ui.c	FUNCTION_67
0x4000236	        0x4883c458	                           add rsp, 0x58	      2488	ui.c	FUNCTION_67
0x400023a	              0x5b	                                 pop rbx	      2488	ui.c	FUNCTION_67
0x400023b	              0x5d	                                 pop rbp	      2488	ui.c	FUNCTION_67
0x400023c	            0x415c	                                 pop r12	      2488	ui.c	FUNCTION_67
0x400023e	            0x415d	                                 pop r13	      2488	ui.c	FUNCTION_67
0x4000240	            0x415e	                                 pop r14	      2488	ui.c	FUNCTION_67
0x4000242	            0x415f	                                 pop r15	      2488	ui.c	FUNCTION_67
0x4000244	              0xc3	                                     ret	      2488	ui.c	FUNCTION_67
0x4000245	           0xf1f00	                         nop dword [rax]	      2488	ui.c	FUNCTION_67
0x4000248	    0x8b3d00000000	            mov edi, dword [0x0400024e] 	      2402	ui.c	FUNCTION_67	IF_5
0x400024e	            0x85ff	                           test edi, edi	      2402	ui.c	FUNCTION_67	IF_5
0x4000250	            0x74a9	                            je 0x40001fb	      2402	ui.c	FUNCTION_67	IF_5
0x4000252	    0x660f1f440000	                    nop word [rax + rax]	      2402	ui.c	FUNCTION_67	IF_5
0x4000258	          0x4889df	                            mov rdi, rbx	      2409	ui.c	FUNCTION_67	CALL_1
0x400025b	      0xe800000000	                          call 0x4000260	      2409	ui.c	FUNCTION_67	CALL_1
0x4000260	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2410	ui.c	FUNCTION_67	CALL_2
0x4000265	          0x4889da	                            mov rdx, rbx	      2410	ui.c	FUNCTION_67	CALL_2
0x4000268	          0x4c89f6	                            mov rsi, r14	      2410	ui.c	FUNCTION_67	CALL_2
0x400026b	      0xe800000000	                          call 0x4000270	      2410	ui.c	FUNCTION_67	CALL_2
0x4000270	            0x85c0	                           test eax, eax	      2411	ui.c	FUNCTION_67	IF_6
0x4000272	          0x4189c0	                            mov r8d, eax	      2410	ui.c	FUNCTION_67	CALL_2
0x4000275	            0x78a9	                            js 0x4000220	      2411	ui.c	FUNCTION_67	IF_6
0x4000277	          0x498b07	                    mov rax, qword [r15]	      2415	ui.c	FUNCTION_67	IF_7
0x400027a	    0x483b05000000	            cmp rax, qword [0x04000281] 	      2415	ui.c	FUNCTION_67	IF_7
0x4000281	     0xf84d1010000	                            je 0x4000458	      2415	ui.c	FUNCTION_67	IF_7
0x4000287	          0x498b1e	                    mov rbx, qword [r14]	      2415	ui.c	FUNCTION_67	IF_7
0x400028a	    0x483905000000	            cmp qword [0x04000291], rax 	      2420	ui.c	FUNCTION_67	IF_8
0x4000291	     0xf8499010000	                            je 0x4000430	      2420	ui.c	FUNCTION_67	IF_8
0x4000297	    0x488b05000000	            mov rax, qword [0x0400029e] 	      2424	ui.c	FUNCTION_67	IF_9
0x400029e	          0x4839d8	                            cmp rax, rbx	      2424	ui.c	FUNCTION_67	IF_9
0x40002a1	            0x720c	                            jb 0x40002af	      2424	ui.c	FUNCTION_67	IF_9
0x40002a3	          0x48d1e8	                              shr rax, 1	      2424	ui.c	FUNCTION_67	IF_9
0x40002a6	          0x4839d8	                            cmp rax, rbx	      2424	ui.c	FUNCTION_67	IF_9
0x40002a9	     0xf8269010000	                            jb 0x4000418	      2424	ui.c	FUNCTION_67	IF_9
0x40002af	    0x488b3d000000	            mov rdi, qword [0x040002b6] 	      2425	ui.c	FUNCTION_67	CALL_4
0x40002b6	          0x8d7301	                      lea esi, [rbx + 1]	      2425	ui.c	FUNCTION_67	CALL_4
0x40002b9	      0x4489442404	                mov dword [rsp + 4], r8d	      2425	ui.c	FUNCTION_67	CALL_4
0x40002be	      0xe800000000	                          call 0x40002c3	      2425	ui.c	FUNCTION_67	CALL_4
0x40002c3	      0x448b442404	                mov r8d, dword [rsp + 4]	      2425	ui.c	FUNCTION_67	CALL_4
0x40002c8	        0x48894500	                    mov qword [rbp], rax	      2425	ui.c	FUNCTION_67	CALL_4
0x40002cc	          0x4889c3	                            mov rbx, rax	      2425	ui.c	FUNCTION_67	CALL_4
0x40002cf	          0x4885db	                           test rbx, rbx	      2428	ui.c	FUNCTION_67	ELSE_2	IF_10
0x40002d2	     0xf8488020000	                            je 0x4000560	      2428	ui.c	FUNCTION_67	ELSE_2	IF_10
0x40002d8	          0x498b0f	                    mov rcx, qword [r15]	      2436	ui.c	FUNCTION_67	IF_11
0x40002db	          0x498b16	                    mov rdx, qword [r14]	      2434	ui.c	FUNCTION_67
0x40002de	    0x48891d000000	            mov qword [0x040002e5], rbx 	      2433	ui.c	FUNCTION_67
0x40002e5	        0x4883f91f	                           cmp rcx, 0x1f	      2436	ui.c	FUNCTION_67	IF_11
0x40002e9	    0x488915000000	            mov qword [0x040002f0], rdx 	      2434	ui.c	FUNCTION_67
0x40002f0	     0xf8428020000	                            je 0x400051e	      2436	ui.c	FUNCTION_67	IF_11
0x40002f6	    0x483b0d000000	            cmp rcx, qword [0x040002fd] 	      2438	ui.c	FUNCTION_67	IF_11
0x40002fd	     0xf840d020000	                            je 0x4000510	      2438	ui.c	FUNCTION_67	IF_11
0x4000303	    0x483b0d000000	            cmp rcx, qword [0x0400030a] 	      2445	ui.c	FUNCTION_67	ELSE_3	IF_12
0x400030a	     0xf8460010000	                            je 0x4000470	      2445	ui.c	FUNCTION_67	ELSE_3	IF_12
0x4000310	    0x483b0d000000	            cmp rcx, qword [0x04000317] 	      2445	ui.c	FUNCTION_67	ELSE_3	IF_12
0x4000317	     0xf8453010000	                            je 0x4000470	      2445	ui.c	FUNCTION_67	ELSE_3	IF_12
0x400031d	    0x483b0d000000	            cmp rcx, qword [0x04000324] 	      2469	ui.c	FUNCTION_67	ELSE_4	IF_14
0x4000324	     0xf8446020000	                            je 0x4000570	      2469	ui.c	FUNCTION_67	ELSE_4	IF_14
0x400032a	          0x448803	                     mov byte [rbx], r8b	      2481	ui.c	FUNCTION_67	ELSE_5
0x400032d	          0x498b16	                    mov rdx, qword [r14]	        59	string3.h	FUNCTION_83	CALL_3
0x4000330	        0x488d7b01	                      lea rdi, [rbx + 1]	        59	string3.h	FUNCTION_83	CALL_3
0x4000334	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	        59	string3.h	FUNCTION_83	CALL_3
0x4000339	        0x4883ea01	                              sub rdx, 1	        59	string3.h	FUNCTION_83	CALL_3
0x400033d	      0xe800000000	                          call 0x4000342	        59	string3.h	FUNCTION_83	CALL_3
0x4000342	    0x488b05000000	            mov rax, qword [0x04000349] 	      2483	ui.c	FUNCTION_67	ELSE_5
0x4000349	        0x49894500	                    mov qword [r13], rax	      2483	ui.c	FUNCTION_67	ELSE_5
0x400034d	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2486	ui.c	FUNCTION_67	CALL_15
0x4000352	    0x41c704240800	                      mov dword [r12], 8	      2485	ui.c	FUNCTION_67
0x400035a	      0xe800000000	                          call 0x400035f	      2486	ui.c	FUNCTION_67	CALL_15
0x400035f	      0xb801000000	                              mov eax, 1	      2487	ui.c	FUNCTION_67
0x4000364	      0xe9b9feffff	                           jmp 0x4000222	      2487	ui.c	FUNCTION_67
0x4000369	     0xf1f80000000	                         nop dword [rax]	      2487	ui.c	FUNCTION_67
0x4000370	    0x49c700000000	                       mov qword [r8], 0	      2376	ui.c	FUNCTION_67	IF_3
0x4000377	    0x488905000000	            mov qword [0x0400037e], rax 	      2378	ui.c	FUNCTION_67	IF_3
0x400037e	    0x488b05000000	            mov rax, qword [0x04000385] 	      2380	ui.c	FUNCTION_67	IF_3
0x4000385	    0x448b05000000	            mov r8d, dword [0x0400038c] 	      2384	ui.c	FUNCTION_67	IF_3	IF_4
0x400038c	    0x488905000000	            mov qword [0x04000393], rax 	      2380	ui.c	FUNCTION_67	IF_3
0x4000393	    0x488b05000000	            mov rax, qword [0x0400039a] 	      2382	ui.c	FUNCTION_67	IF_3
0x400039a	          0x4585c0	                           test r8d, r8d	      2384	ui.c	FUNCTION_67	IF_3	IF_4
0x400039d	    0x488905000000	            mov qword [0x040003a4], rax 	      2382	ui.c	FUNCTION_67	IF_3
0x40003a4	     0xf8496010000	                            je 0x4000540	      2384	ui.c	FUNCTION_67	IF_3	IF_4
0x40003aa	    0x488b05000000	            mov rax, qword [0x040003b1] 	      2385	ui.c	FUNCTION_67	IF_3	IF_4
0x40003b1	      0xbe07000000	                              mov esi, 7	      2385	ui.c	FUNCTION_67	IF_3	IF_4
0x40003b6	      0xba05000000	                              mov edx, 5	      2385	ui.c	FUNCTION_67	IF_3	IF_4
0x40003bb	      0xb904000000	                              mov ecx, 4	      2385	ui.c	FUNCTION_67	IF_3	IF_4
0x40003c0	    0x488905000000	            mov qword [0x040003c7], rax 	      2385	ui.c	FUNCTION_67	IF_3	IF_4
0x40003c7	      0xb806000000	                              mov eax, 6	      2385	ui.c	FUNCTION_67	IF_3	IF_4
0x40003cc	    0x48c704cd0000	                 mov qword [rcx*8], 0x1f	      2387	ui.c	FUNCTION_67	IF_3
0x40003d8	    0x488b0d000000	            mov rcx, qword [0x040003df] 	      2388	ui.c	FUNCTION_67	IF_3
0x40003df	    0x48890cd50000	                  mov qword [rdx*8], rcx	      2388	ui.c	FUNCTION_67	IF_3
0x40003e7	    0x488b15000000	            mov rdx, qword [0x040003ee] 	      2389	ui.c	FUNCTION_67	IF_3
0x40003ee	    0x488914c50000	                  mov qword [rax*8], rdx	      2389	ui.c	FUNCTION_67	IF_3
0x40003f6	    0x49c745000400	                      mov qword [r13], 4	      2391	ui.c	FUNCTION_67	IF_3
0x40003fe	      0xb801000000	                              mov eax, 1	      2396	ui.c	FUNCTION_67	IF_3
0x4000403	    0x41c704242000	                   mov dword [r12], 0x20	      2394	ui.c	FUNCTION_67	IF_3
0x400040b	          0x498936	                    mov qword [r14], rsi	      2395	ui.c	FUNCTION_67	IF_3
0x400040e	      0xe90ffeffff	                           jmp 0x4000222	      2396	ui.c	FUNCTION_67	IF_3
0x4000413	       0xf1f440000	                   nop dword [rax + rax]	      2396	ui.c	FUNCTION_67	IF_3
0x4000418	    0x488b1d000000	            mov rbx, qword [0x0400041f] 	      2427	ui.c	FUNCTION_67	ELSE_2
0x400041f	        0x48895d00	                    mov qword [rbp], rbx	      2427	ui.c	FUNCTION_67	ELSE_2
0x4000423	      0xe9a7feffff	                           jmp 0x40002cf	      2427	ui.c	FUNCTION_67	ELSE_2
0x4000428	     0xf1f84000000	                   nop dword [rax + rax]	      2427	ui.c	FUNCTION_67	ELSE_2
0x4000430	    0x488b3d000000	            mov rdi, qword [0x04000437] 	      2421	ui.c	FUNCTION_67	CALL_3
0x4000437	      0x4489442404	                mov dword [rsp + 4], r8d	      2421	ui.c	FUNCTION_67	CALL_3
0x400043c	      0xe800000000	                          call 0x4000441	      2421	ui.c	FUNCTION_67	CALL_3
0x4000441	      0x488d5c0302	                lea rbx, [rbx + rax + 2]	      2421	ui.c	FUNCTION_67	CALL_3
0x4000446	      0x448b442404	                mov r8d, dword [rsp + 4]	      2421	ui.c	FUNCTION_67	CALL_3
0x400044b	          0x49891e	                    mov qword [r14], rbx	      2421	ui.c	FUNCTION_67	CALL_3
0x400044e	      0xe944feffff	                           jmp 0x4000297	      2421	ui.c	FUNCTION_67	CALL_3
0x4000453	       0xf1f440000	                   nop dword [rax + rax]	      2421	ui.c	FUNCTION_67	CALL_3
0x4000458	          0x498b06	                    mov rax, qword [r14]	      2416	ui.c	FUNCTION_67	IF_7
0x400045b	        0x488d5801	                      lea rbx, [rax + 1]	      2416	ui.c	FUNCTION_67	IF_7
0x400045f	          0x49891e	                    mov qword [r14], rbx	      2416	ui.c	FUNCTION_67	IF_7
0x4000462	          0x498b07	                    mov rax, qword [r15]	      2416	ui.c	FUNCTION_67	IF_7
0x4000465	      0xe920feffff	                           jmp 0x400028a	      2416	ui.c	FUNCTION_67	IF_7
0x400046a	    0x660f1f440000	                    nop word [rax + rax]	      2416	ui.c	FUNCTION_67	IF_7
0x4000470	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	        59	string3.h	FUNCTION_83	CALL_3
0x4000475	          0x4889df	                            mov rdi, rbx	        59	string3.h	FUNCTION_83	CALL_3
0x4000478	      0x48895c2418	             mov qword [rsp + 0x18], rbx	      2448	ui.c	FUNCTION_67	ELSE_3	IF_12
0x400047d	      0xe800000000	                          call 0x4000482	        59	string3.h	FUNCTION_83	CALL_3
0x4000482	          0x498b06	                    mov rax, qword [r14]	      2453	ui.c	FUNCTION_67	ELSE_3	IF_12
0x4000485	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      2453	ui.c	FUNCTION_67	ELSE_3	IF_12
0x400048a	        0xc6040200	                 mov byte [rdx + rax], 0	      2453	ui.c	FUNCTION_67	ELSE_3	IF_12
0x400048e	    0x8b0500000000	            mov eax, dword [0x04000494] 	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x4000494	    0x488b3d000000	            mov rdi, qword [0x0400049b] 	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x400049b	            0x85c0	                           test eax, eax	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x400049d	     0xf852d010000	                           jne 0x40005d0	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x40004a3	      0x4c8d442420	                    lea r8, [rsp + 0x20]	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x40004a8	      0x488d742418	                   lea rsi, [rsp + 0x18]	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x40004ad	      0xb901000000	                              mov ecx, 1	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x40004b2	      0xba01000000	                              mov edx, 1	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x40004b7	      0xe800000000	                          call 0x40004bc	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x40004bc	            0x85c0	                           test eax, eax	      2456	ui.c	FUNCTION_67	ELSE_3	IF_12	IF_13
0x40004be	     0xf859c000000	                           jne 0x4000560	      2456	ui.c	FUNCTION_67	ELSE_3	IF_12	IF_13
0x40004c4	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      2461	ui.c	FUNCTION_67	ELSE_3	IF_12
0x40004c9	    0x488b3d000000	            mov rdi, qword [0x040004d0] 	      2464	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_10
0x40004d0	        0x48894500	                    mov qword [rbp], rax	      2461	ui.c	FUNCTION_67	ELSE_3	IF_12
0x40004d4	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      2462	ui.c	FUNCTION_67	ELSE_3	IF_12
0x40004d9	          0x498906	                    mov qword [r14], rax	      2462	ui.c	FUNCTION_67	ELSE_3	IF_12
0x40004dc	    0x488b05000000	            mov rax, qword [0x040004e3] 	      2463	ui.c	FUNCTION_67	ELSE_3	IF_12
0x40004e3	        0x49894500	                    mov qword [r13], rax	      2463	ui.c	FUNCTION_67	ELSE_3	IF_12
0x40004e7	      0xe800000000	                          call 0x40004ec	      2464	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_10
0x40004ec	        0x488b4500	                    mov rax, qword [rbp]	      2465	ui.c	FUNCTION_67	ELSE_3	IF_12
0x40004f0	    0x488905000000	            mov qword [0x040004f7], rax 	      2465	ui.c	FUNCTION_67	ELSE_3	IF_12
0x40004f7	          0x498b06	                    mov rax, qword [r14]	      2466	ui.c	FUNCTION_67	ELSE_3	IF_12
0x40004fa	    0x488905000000	            mov qword [0x04000501], rax 	      2466	ui.c	FUNCTION_67	ELSE_3	IF_12
0x4000501	      0xe947feffff	                           jmp 0x400034d	      2446	ui.c	FUNCTION_67	ELSE_3	IF_12
0x4000506	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2446	ui.c	FUNCTION_67	ELSE_3	IF_12
0x4000510	    0x8b3500000000	            mov esi, dword [0x04000516] 	      2438	ui.c	FUNCTION_67	IF_11
0x4000516	            0x85f6	                           test esi, esi	      2438	ui.c	FUNCTION_67	IF_11
0x4000518	     0xf84e5fdffff	                            je 0x4000303	      2438	ui.c	FUNCTION_67	IF_11
0x400051e	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	        59	string3.h	FUNCTION_83	CALL_3
0x4000523	          0x4889df	                            mov rdi, rbx	        59	string3.h	FUNCTION_83	CALL_3
0x4000526	      0xe800000000	                          call 0x400052b	        59	string3.h	FUNCTION_83	CALL_3
0x400052b	          0x498b07	                    mov rax, qword [r15]	      2443	ui.c	FUNCTION_67	IF_11
0x400052e	        0x49894500	                    mov qword [r13], rax	      2443	ui.c	FUNCTION_67	IF_11
0x4000532	      0xe916feffff	                           jmp 0x400034d	      2443	ui.c	FUNCTION_67	IF_11
0x4000537	    0x660f1f840000	                    nop word [rax + rax]	      2443	ui.c	FUNCTION_67	IF_11
0x4000540	      0xbe06000000	                              mov esi, 6	      2443	ui.c	FUNCTION_67	IF_11
0x4000545	      0xb805000000	                              mov eax, 5	      2443	ui.c	FUNCTION_67	IF_11
0x400054a	      0xba04000000	                              mov edx, 4	      2443	ui.c	FUNCTION_67	IF_11
0x400054f	      0xb903000000	                              mov ecx, 3	      2382	ui.c	FUNCTION_67	IF_3
0x4000554	      0xe973feffff	                           jmp 0x40003cc	      2382	ui.c	FUNCTION_67	IF_3
0x4000559	     0xf1f80000000	                         nop dword [rax]	      2382	ui.c	FUNCTION_67	IF_3
0x4000560	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2430	ui.c	FUNCTION_67	ELSE_2	IF_10	CALL_5
0x4000565	      0xe800000000	                          call 0x400056a	      2430	ui.c	FUNCTION_67	ELSE_2	IF_10	CALL_5
0x400056a	      0xe9b1fcffff	                           jmp 0x4000220	      2430	ui.c	FUNCTION_67	ELSE_2	IF_10	CALL_5
0x400056f	              0x90	                                     nop	      2430	ui.c	FUNCTION_67	ELSE_2	IF_10	CALL_5
0x4000570	    0x488b3d000000	            mov rdi, qword [0x04000577] 	      2471	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_11
0x4000577	      0x48894c2408	                mov qword [rsp + 8], rcx	      2471	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_11
0x400057c	      0x4489442404	                mov dword [rsp + 4], r8d	      2471	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_11
0x4000581	      0xe800000000	                          call 0x4000586	      2471	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_11
0x4000586	      0x448b442404	                mov r8d, dword [rsp + 4]	      2473	ui.c	FUNCTION_67	ELSE_4	IF_14
0x400058b	        0x488d7b01	                      lea rdi, [rbx + 1]	       110	string3.h	FUNCTION_88	CALL_3
0x400058f	          0x4889c5	                            mov rbp, rax	      2471	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_11
0x4000592	          0x4863ed	                         movsxd rbp, ebp	      2475	ui.c	FUNCTION_67	ELSE_4	IF_14	CALL_13
0x4000595	          0x448803	                     mov byte [rbx], r8b	      2473	ui.c	FUNCTION_67	ELSE_4	IF_14
0x4000598	    0x488b35000000	            mov rsi, qword [0x0400059f] 	       110	string3.h	FUNCTION_88	CALL_3
0x400059f	      0xe800000000	                          call 0x40005a4	       110	string3.h	FUNCTION_88	CALL_3
0x40005a4	          0x498b16	                    mov rdx, qword [r14]	        59	string3.h	FUNCTION_83	CALL_3
0x40005a7	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	        59	string3.h	FUNCTION_83	CALL_3
0x40005ac	      0x488d7c2b02	                lea rdi, [rbx + rbp + 2]	        59	string3.h	FUNCTION_83	CALL_3
0x40005b1	        0x4883ea02	                              sub rdx, 2	        59	string3.h	FUNCTION_83	CALL_3
0x40005b5	          0x4829ea	                            sub rdx, rbp	        59	string3.h	FUNCTION_83	CALL_3
0x40005b8	      0xe800000000	                          call 0x40005bd	        59	string3.h	FUNCTION_83	CALL_3
0x40005bd	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      2476	ui.c	FUNCTION_67	ELSE_4	IF_14
0x40005c2	        0x49894d00	                    mov qword [r13], rcx	      2476	ui.c	FUNCTION_67	ELSE_4	IF_14
0x40005c6	      0xe982fdffff	                           jmp 0x400034d	      2476	ui.c	FUNCTION_67	ELSE_4	IF_14
0x40005cb	       0xf1f440000	                   nop dword [rax + rax]	      2476	ui.c	FUNCTION_67	ELSE_4	IF_14
0x40005d0	      0xe800000000	                          call 0x40005d5	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x40005d5	          0x4889c7	                            mov rdi, rax	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x40005d8	      0xe9c6feffff	                           jmp 0x40004a3	      2454	ui.c	FUNCTION_67	ELSE_3	IF_12	CALL_8
0x40005dd	      0xe800000000	                          call 0x40005e2	      2488	ui.c	FUNCTION_67
clip_x11_request_selection_cb	IF,10:DO,0:functions,0:FOR,0:CALL,12:SWITCH,0:WHILE,0:ELSE,4	170
0x40005f0	            0x4157	                                push r15	      2137	ui.c	FUNCTION_65
0x40005f2	            0x4156	                                push r14	      2137	ui.c	FUNCTION_65
0x40005f4	      0xbf00000000	                              mov edi, 0	      2148	ui.c	FUNCTION_65	IF_1
0x40005f9	            0x4155	                                push r13	      2137	ui.c	FUNCTION_65
0x40005fb	            0x4154	                                push r12	      2137	ui.c	FUNCTION_65
0x40005fd	          0x4989f4	                            mov r12, rsi	      2137	ui.c	FUNCTION_65
0x4000600	              0x55	                                push rbp	      2137	ui.c	FUNCTION_65
0x4000601	              0x53	                                push rbx	      2137	ui.c	FUNCTION_65
0x4000602	        0x4883ec58	                           sub rsp, 0x58	      2137	ui.c	FUNCTION_65
0x4000606	    0x64488b042528	                mov rax, qword fs:[0x28]	      2137	ui.c	FUNCTION_65
0x400060f	      0x4889442448	             mov qword [rsp + 0x48], rax	      2137	ui.c	FUNCTION_65
0x4000614	            0x31c0	                            xor eax, eax	      2137	ui.c	FUNCTION_65
0x4000616	    0x488b05000000	            mov rax, qword [0x0400061d] 	      2148	ui.c	FUNCTION_65	IF_1
0x400061d	          0x483902	                    cmp qword [rdx], rax	      2148	ui.c	FUNCTION_65	IF_1
0x4000620	      0xb800000000	                              mov eax, 0	      2148	ui.c	FUNCTION_65	IF_1
0x4000625	    0x488bb4249000	            mov rsi, qword [rsp + 0x90] 	      2137	ui.c	FUNCTION_65
0x400062d	    0x48c744241800	               mov qword [rsp + 0x18], 0	      2141	ui.c	FUNCTION_65
0x4000636	        0x480f45c7	                         cmovne rax, rdi	      2148	ui.c	FUNCTION_65	IF_1
0x400063a	          0x4d85c0	                             test r8, r8	      2152	ui.c	FUNCTION_65	ELSE_1	IF_2
0x400063d	          0x4889c5	                            mov rbp, rax	      2148	ui.c	FUNCTION_65	IF_1
0x4000640	     0xf84aa000000	                            je 0x40006f0	      2152	ui.c	FUNCTION_65	ELSE_1	IF_2
0x4000646	          0x498b19	                     mov rbx, qword [r9]	      2152	ui.c	FUNCTION_65	ELSE_1	IF_2
0x4000649	          0x4885db	                           test rbx, rbx	      2152	ui.c	FUNCTION_65	ELSE_1	IF_2
0x400064c	     0xf849e000000	                            je 0x40006f0	      2152	ui.c	FUNCTION_65	ELSE_1	IF_2
0x4000652	          0x488b01	                    mov rax, qword [rcx]	      2160	ui.c	FUNCTION_65	IF_3
0x4000655	    0x483b05000000	            cmp rax, qword [0x0400065c] 	      2160	ui.c	FUNCTION_65	IF_3
0x400065c	          0x4d89c5	                             mov r13, r8	      2160	ui.c	FUNCTION_65	IF_3
0x400065f	     0xf840b010000	                            je 0x4000770	      2160	ui.c	FUNCTION_65	IF_3
0x4000665	    0x483b05000000	            cmp rax, qword [0x0400066c] 	      2167	ui.c	FUNCTION_65	ELSE_2	IF_4
0x400066c	     0xf84ae010000	                            je 0x4000820	      2167	ui.c	FUNCTION_65	ELSE_2	IF_4
0x4000672	    0x483b05000000	            cmp rax, qword [0x04000679] 	      2196	ui.c	FUNCTION_65	ELSE_3	IF_7
0x4000679	    0x488b15000000	            mov rdx, qword [0x04000680] 	      2196	ui.c	FUNCTION_65	ELSE_3	IF_7
0x4000680	     0xf8402010000	                            je 0x4000788	      2196	ui.c	FUNCTION_65	ELSE_3	IF_7
0x4000686	          0x4839d0	                            cmp rax, rdx	      2198	ui.c	FUNCTION_65	ELSE_3	IF_7
0x4000689	     0xf8499000000	                            je 0x4000728	      2198	ui.c	FUNCTION_65	ELSE_3	IF_7
0x400068f	    0x8b3d00000000	            mov edi, dword [0x04000695] 	      2200	ui.c	FUNCTION_65	ELSE_3	IF_7
0x4000695	            0x85ff	                           test edi, edi	      2200	ui.c	FUNCTION_65	ELSE_3	IF_7
0x4000697	            0x740d	                            je 0x40006a6	      2200	ui.c	FUNCTION_65	ELSE_3	IF_7
0x4000699	    0x483b05000000	            cmp rax, qword [0x040006a0] 	      2202	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40006a0	     0xf84e2000000	                            je 0x4000788	      2202	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40006a6	          0x4d89ef	                            mov r15, r13	      2202	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40006a9	          0x4531f6	                          xor r14d, r14d	      2144	ui.c	FUNCTION_65
0x40006ac	    0x41b8ff000000	                           mov r8d, 0xff	      2138	ui.c	FUNCTION_65
0x40006b2	          0x4489c7	                            mov edi, r8d	      2230	ui.c	FUNCTION_65	CALL_9
0x40006b5	          0x4889e9	                            mov rcx, rbp	      2230	ui.c	FUNCTION_65	CALL_9
0x40006b8	          0x4889da	                            mov rdx, rbx	      2230	ui.c	FUNCTION_65	CALL_9
0x40006bb	          0x4c89fe	                            mov rsi, r15	      2230	ui.c	FUNCTION_65	CALL_9
0x40006be	      0xe800000000	                          call 0x40006c3	      2230	ui.c	FUNCTION_65	CALL_9
0x40006c3	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      2232	ui.c	FUNCTION_65	IF_10
0x40006c8	          0x4885ff	                           test rdi, rdi	      2232	ui.c	FUNCTION_65	IF_10
0x40006cb	            0x7405	                            je 0x40006d2	      2232	ui.c	FUNCTION_65	IF_10
0x40006cd	      0xe800000000	                          call 0x40006d2	      2233	ui.c	FUNCTION_65	CALL_10
0x40006d2	          0x4c89f7	                            mov rdi, r14	      2235	ui.c	FUNCTION_65	CALL_11
0x40006d5	      0xe800000000	                          call 0x40006da	      2235	ui.c	FUNCTION_65	CALL_11
0x40006da	          0x4c89ef	                            mov rdi, r13	      2237	ui.c	FUNCTION_65	CALL_12
0x40006dd	      0xe800000000	                          call 0x40006e2	      2237	ui.c	FUNCTION_65	CALL_12
0x40006e2	    0x41c704240100	                      mov dword [r12], 1	      2238	ui.c	FUNCTION_65
0x40006ea	            0xeb14	                           jmp 0x4000700	      2238	ui.c	FUNCTION_65
0x40006ec	         0xf1f4000	                         nop dword [rax]	      2238	ui.c	FUNCTION_65
0x40006f0	          0x4889ef	                            mov rdi, rbp	      2154	ui.c	FUNCTION_65	ELSE_1	IF_2	CALL_1
0x40006f3	      0xe800000000	                          call 0x40006f8	      2154	ui.c	FUNCTION_65	ELSE_1	IF_2	CALL_1
0x40006f8	    0x41c704240000	                      mov dword [r12], 0	      2155	ui.c	FUNCTION_65	ELSE_1	IF_2
0x4000700	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      2239	ui.c	FUNCTION_65
0x4000705	    0x644833042528	                xor rax, qword fs:[0x28]	      2239	ui.c	FUNCTION_65
0x400070e	     0xf85b1010000	                           jne 0x40008c5	      2239	ui.c	FUNCTION_65
0x4000714	        0x4883c458	                           add rsp, 0x58	      2239	ui.c	FUNCTION_65
0x4000718	              0x5b	                                 pop rbx	      2239	ui.c	FUNCTION_65
0x4000719	              0x5d	                                 pop rbp	      2239	ui.c	FUNCTION_65
0x400071a	            0x415c	                                 pop r12	      2239	ui.c	FUNCTION_65
0x400071c	            0x415d	                                 pop r13	      2239	ui.c	FUNCTION_65
0x400071e	            0x415e	                                 pop r14	      2239	ui.c	FUNCTION_65
0x4000720	            0x415f	                                 pop r15	      2239	ui.c	FUNCTION_65
0x4000722	              0xc3	                                     ret	      2239	ui.c	FUNCTION_65
0x4000723	       0xf1f440000	                   nop dword [rax + rax]	      2239	ui.c	FUNCTION_65
0x4000728	      0x4889442428	             mov qword [rsp + 0x28], rax	      2211	ui.c	FUNCTION_65	ELSE_3	IF_7
0x400072d	            0x8b06	                    mov eax, dword [rsi]	      2212	ui.c	FUNCTION_65	ELSE_3	IF_7
0x400072f	    0xc74424140000	               mov dword [rsp + 0x14], 0	      2207	ui.c	FUNCTION_65	ELSE_3	IF_7
0x4000737	      0x4c89442420	              mov qword [rsp + 0x20], r8	      2210	ui.c	FUNCTION_65	ELSE_3	IF_7
0x400073c	      0x48895c2438	             mov qword [rsp + 0x38], rbx	      2213	ui.c	FUNCTION_65	ELSE_3	IF_7
0x4000741	        0x89442430	             mov dword [rsp + 0x30], eax	      2212	ui.c	FUNCTION_65	ELSE_3	IF_7
0x4000745	    0x8b0d00000000	            mov ecx, dword [0x0400074b] 	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x400074b	    0x488b3d000000	            mov rdi, qword [0x04000752] 	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x4000752	            0x85c9	                           test ecx, ecx	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x4000754	     0xf85b6000000	                           jne 0x4000810	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x400075a	      0x488d4c2414	                   lea rcx, [rsp + 0x14]	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x400075f	      0x488d542418	                   lea rdx, [rsp + 0x18]	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x4000764	      0x488d742420	                   lea rsi, [rsp + 0x20]	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x4000769	      0xe800000000	                          call 0x400076e	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x400076e	            0xeb63	                           jmp 0x40007d3	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x4000770	        0x4d8d7801	                       lea r15, [r8 + 1]	      2162	ui.c	FUNCTION_65	IF_3
0x4000774	        0x4883eb01	                              sub rbx, 1	      2163	ui.c	FUNCTION_65	IF_3
0x4000778	        0x450fb600	                    movzx r8d, byte [r8]	      2162	ui.c	FUNCTION_65	IF_3
0x400077c	          0x4531f6	                          xor r14d, r14d	      2144	ui.c	FUNCTION_65
0x400077f	      0xe92effffff	                           jmp 0x40006b2	      2144	ui.c	FUNCTION_65
0x4000784	         0xf1f4000	                         nop dword [rax]	      2144	ui.c	FUNCTION_65
0x4000788	            0x8b0e	                    mov ecx, dword [rsi]	      2212	ui.c	FUNCTION_65	ELSE_3	IF_7
0x400078a	          0x4839d0	                            cmp rax, rdx	      2215	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8
0x400078d	    0xc74424140000	               mov dword [rsp + 0x14], 0	      2207	ui.c	FUNCTION_65	ELSE_3	IF_7
0x4000795	      0x4c896c2420	             mov qword [rsp + 0x20], r13	      2210	ui.c	FUNCTION_65	ELSE_3	IF_7
0x400079a	      0x4889442428	             mov qword [rsp + 0x28], rax	      2211	ui.c	FUNCTION_65	ELSE_3	IF_7
0x400079f	      0x48895c2438	             mov qword [rsp + 0x38], rbx	      2213	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40007a4	        0x894c2430	             mov dword [rsp + 0x30], ecx	      2212	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40007a8	            0x749b	                            je 0x4000745	      2215	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8
0x40007aa	    0x8b1500000000	            mov edx, dword [0x040007b0] 	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x40007b0	    0x488b3d000000	            mov rdi, qword [0x040007b7] 	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x40007b7	            0x85d2	                           test edx, edx	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x40007b9	     0xf85f9000000	                           jne 0x40008b8	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x40007bf	      0x488d4c2414	                   lea rcx, [rsp + 0x14]	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x40007c4	      0x488d542418	                   lea rdx, [rsp + 0x18]	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x40007c9	      0x488d742420	                   lea rsi, [rsp + 0x20]	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x40007ce	      0xe800000000	                          call 0x40007d3	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x40007d3	            0x85c0	                           test eax, eax	      2222	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_9
0x40007d5	            0x7529	                           jne 0x4000800	      2222	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_9
0x40007d7	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      2222	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_9
0x40007db	            0x85c0	                           test eax, eax	      2222	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_9
0x40007dd	            0x7e21	                           jle 0x4000800	      2222	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_9
0x40007df	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2227	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40007e4	          0x4531f6	                          xor r14d, r14d	      2144	ui.c	FUNCTION_65
0x40007e7	          0x4c8b38	                    mov r15, qword [rax]	      2227	ui.c	FUNCTION_65	ELSE_3	IF_7
0x40007ea	          0x4c89ff	                            mov rdi, r15	      2228	ui.c	FUNCTION_65	ELSE_3	IF_7	CALL_8
0x40007ed	      0xe800000000	                          call 0x40007f2	      2228	ui.c	FUNCTION_65	ELSE_3	IF_7	CALL_8
0x40007f2	    0x41b8ff000000	                           mov r8d, 0xff	      2138	ui.c	FUNCTION_65
0x40007f8	          0x4889c3	                            mov rbx, rax	      2228	ui.c	FUNCTION_65	ELSE_3	IF_7	CALL_8
0x40007fb	      0xe9b2feffff	                           jmp 0x40006b2	      2228	ui.c	FUNCTION_65	ELSE_3	IF_7	CALL_8
0x4000800	    0x41c704240000	                      mov dword [r12], 0	      2224	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_9
0x4000808	      0xe9f3feffff	                           jmp 0x4000700	      2224	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_9
0x400080d	           0xf1f00	                         nop dword [rax]	      2224	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_9
0x4000810	      0xe800000000	                          call 0x4000815	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x4000815	          0x4889c7	                            mov rdi, rax	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x4000818	      0xe93dffffff	                           jmp 0x400075a	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x400081d	           0xf1f00	                         nop dword [rax]	      2216	ui.c	FUNCTION_65	ELSE_3	IF_7	IF_8	CALL_6
0x4000820	        0x4d8d7001	                       lea r14, [r8 + 1]	      2173	ui.c	FUNCTION_65	ELSE_2	IF_4
0x4000824	        0x450fb600	                    movzx r8d, byte [r8]	      2173	ui.c	FUNCTION_65	ELSE_2	IF_4
0x4000828	        0x4883eb01	                              sub rbx, 1	      2174	ui.c	FUNCTION_65	ELSE_2	IF_4
0x400082c	          0x4c89f7	                            mov rdi, r14	      2177	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_2
0x400082f	      0x448944240c	              mov dword [rsp + 0xc], r8d	      2173	ui.c	FUNCTION_65	ELSE_2	IF_4
0x4000834	      0xe800000000	                          call 0x4000839	      2177	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_2
0x4000839	    0x488b15000000	            mov rdx, qword [0x04000840] 	      2183	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_3
0x4000840	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2183	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_3
0x4000845	        0x4883c001	                              add rax, 1	      2177	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_2
0x4000849	          0x4c89f6	                            mov rsi, r14	      2183	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_3
0x400084c	        0x4d8d3c06	                    lea r15, [r14 + rax]	      2177	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_2
0x4000850	          0x4829c3	                            sub rbx, rax	      2178	ui.c	FUNCTION_65	ELSE_2	IF_4
0x4000853	    0xc74424200000	               mov dword [rsp + 0x20], 0	      2182	ui.c	FUNCTION_65	ELSE_2	IF_4
0x400085b	          0x4531f6	                          xor r14d, r14d	      2144	ui.c	FUNCTION_65
0x400085e	      0xe800000000	                          call 0x4000863	      2183	ui.c	FUNCTION_65	ELSE_2	IF_4	CALL_3
0x4000863	      0x448b442420	            mov r8d, dword [rsp + 0x20] 	      2184	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5
0x4000868	          0x4585c0	                           test r8d, r8d	      2184	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5
0x400086b	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	      2184	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5
0x4000870	     0xf843cfeffff	                            je 0x40006b2	      2184	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5
0x4000876	      0x488d542414	                   lea rdx, [rsp + 0x14]	      2187	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_4
0x400087b	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2187	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_4
0x4000880	          0x4c89fe	                            mov rsi, r15	      2187	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_4
0x4000883	        0x895c2414	             mov dword [rsp + 0x14], ebx	      2186	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5
0x4000887	      0xe800000000	                          call 0x400088c	      2187	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_4
0x400088c	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2191	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_5
0x4000891	          0x4885c0	                           test rax, rax	      2191	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_5
0x4000894	          0x4989c6	                            mov r14, rax	      2187	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_4
0x4000897	        0x4c0f45f8	                         cmovne r15, rax	      2187	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_4
0x400089b	            0x31d2	                            xor edx, edx	      2191	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_5
0x400089d	            0x31f6	                            xor esi, esi	      2191	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_5
0x400089f	      0x48635c2414	         movsxd rbx, dword [rsp + 0x14] 	      2188	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5
0x40008a4	      0xe800000000	                          call 0x40008a9	      2191	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_5
0x40008a9	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	      2191	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_5
0x40008ae	      0xe9fffdffff	                           jmp 0x40006b2	      2191	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_5
0x40008b3	       0xf1f440000	                   nop dword [rax + rax]	      2191	ui.c	FUNCTION_65	ELSE_2	IF_4	IF_5	CALL_5
0x40008b8	      0xe800000000	                          call 0x40008bd	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x40008bd	          0x4889c7	                            mov rdi, rax	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x40008c0	      0xe9fafeffff	                           jmp 0x40007bf	      2220	ui.c	FUNCTION_65	ELSE_3	IF_7	ELSE_4	CALL_7
0x40008c5	      0xe800000000	                          call 0x40008ca	      2239	ui.c	FUNCTION_65
ui_wait_for_chars_or_timer	IF,6:DO,0:functions,0:FOR,0:CALL,3:SWITCH,0:WHILE,1:ELSE,0	138
0x4001230	            0x4157	                                push r15	       221	ui.c	FUNCTION_4
0x4001232	            0x4156	                                push r14	       221	ui.c	FUNCTION_4
0x4001234	            0x4155	                                push r13	       221	ui.c	FUNCTION_4
0x4001236	            0x4154	                                push r12	       221	ui.c	FUNCTION_4
0x4001238	          0x4189cd	                           mov r13d, ecx	       221	ui.c	FUNCTION_4
0x400123b	              0x55	                                push rbp	       221	ui.c	FUNCTION_4
0x400123c	              0x53	                                push rbx	       221	ui.c	FUNCTION_4
0x400123d	          0x4989f4	                            mov r12, rsi	       221	ui.c	FUNCTION_4
0x4001240	          0x4889fb	                            mov rbx, rdi	       221	ui.c	FUNCTION_4
0x4001243	        0x4883ec18	                           sub rsp, 0x18	       221	ui.c	FUNCTION_4
0x4001247	        0x4883ff09	                              cmp rdi, 9	       227	ui.c	FUNCTION_4	IF_1
0x400124b	     0xf8607010000	                           jbe 0x4001358	       227	ui.c	FUNCTION_4	IF_1
0x4001251	          0x4889f8	                            mov rax, rdi	       227	ui.c	FUNCTION_4	IF_1
0x4001254	          0x4889d5	                            mov rbp, rdx	       227	ui.c	FUNCTION_4	IF_1
0x4001257	    0x448b35000000	           mov r14d, dword [0x0400125e] 	       224	ui.c	FUNCTION_4
0x400125e	        0x48c1e83f	                           shr rax, 0x3f	       224	ui.c	FUNCTION_4
0x4001262	          0x4885ff	                           test rdi, rdi	       224	ui.c	FUNCTION_4
0x4001265	        0x48890424	                    mov qword [rsp], rax	       224	ui.c	FUNCTION_4
0x4001269	     0xf8ea9000000	                           jle 0x4001318	       224	ui.c	FUNCTION_4
0x400126f	          0x4885d2	                           test rdx, rdx	       224	ui.c	FUNCTION_4
0x4001272	            0x757f	                           jne 0x40012f3	       224	ui.c	FUNCTION_4
0x4001274	         0xf1f4000	                         nop dword [rax]	       224	ui.c	FUNCTION_4
0x4001278	          0x4885db	                           test rbx, rbx	       230	ui.c	FUNCTION_4	WHILE_1
0x400127b	            0x7f06	                            jg 0x4001283	       230	ui.c	FUNCTION_4	WHILE_1
0x400127d	        0x803c2400	                       cmp byte [rsp], 0	       230	ui.c	FUNCTION_4	WHILE_1
0x4001281	            0x747b	                            je 0x40012fe	       230	ui.c	FUNCTION_4	WHILE_1
0x4001283	      0xe800000000	                          call 0x4001288	       234	ui.c	FUNCTION_4	WHILE_1	CALL_2
0x4001288	    0x443b35000000	           cmp r14d, dword [0x0400128f] 	       235	ui.c	FUNCTION_4	WHILE_1	IF_2
0x400128f	            0x756d	                           jne 0x40012fe	       235	ui.c	FUNCTION_4	WHILE_1	IF_2
0x4001291	            0x85c0	                           test eax, eax	       240	ui.c	FUNCTION_4	WHILE_1	IF_3
0x4001293	            0x7e7b	                           jle 0x4001310	       240	ui.c	FUNCTION_4	WHILE_1	IF_3
0x4001295	          0x4863e8	                         movsxd rbp, eax	       240	ui.c	FUNCTION_4	WHILE_1	IF_3
0x4001298	          0x4839eb	                            cmp rbx, rbp	       240	ui.c	FUNCTION_4	WHILE_1	IF_3
0x400129b	            0x7c73	                            jl 0x4001310	       240	ui.c	FUNCTION_4	WHILE_1	IF_3
0x400129d	            0x31f6	                            xor esi, esi	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x400129f	          0x4489ea	                           mov edx, r13d	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x40012a2	          0x4889ef	                            mov rdi, rbp	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x40012a5	          0x41ffd4	                                call r12	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x40012a8	            0x85c0	                           test eax, eax	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x40012aa	     0xf85c0000000	                           jne 0x4001370	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x40012b0	          0x4829eb	                            sub rbx, rbp	       249	ui.c	FUNCTION_4	WHILE_1	IF_6
0x40012b3	            0xebc3	                           jmp 0x4001278	       249	ui.c	FUNCTION_4	WHILE_1	IF_6
0x40012b5	           0xf1f00	                         nop dword [rax]	       249	ui.c	FUNCTION_4	WHILE_1	IF_6
0x40012b8	      0xe800000000	                          call 0x40012bd	       234	ui.c	FUNCTION_4	WHILE_1	CALL_2
0x40012bd	    0x443b35000000	           cmp r14d, dword [0x040012c4] 	       235	ui.c	FUNCTION_4	WHILE_1	IF_2
0x40012c4	            0x7538	                           jne 0x40012fe	       235	ui.c	FUNCTION_4	WHILE_1	IF_2
0x40012c6	            0x85c0	                           test eax, eax	       240	ui.c	FUNCTION_4	WHILE_1	IF_3
0x40012c8	            0x7e08	                           jle 0x40012d2	       240	ui.c	FUNCTION_4	WHILE_1	IF_3
0x40012ca	          0x4c63f8	                         movsxd r15, eax	       240	ui.c	FUNCTION_4	WHILE_1	IF_3
0x40012cd	          0x4c39fb	                            cmp rbx, r15	       240	ui.c	FUNCTION_4	WHILE_1	IF_3
0x40012d0	            0x7d03	                           jge 0x40012d5	       240	ui.c	FUNCTION_4	WHILE_1	IF_3
0x40012d2	          0x4c63fb	                         movsxd r15, ebx	       240	ui.c	FUNCTION_4	WHILE_1	IF_3
0x40012d5	          0x4489ea	                           mov edx, r13d	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x40012d8	          0x4889ee	                            mov rsi, rbp	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x40012db	          0x4c89ff	                            mov rdi, r15	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x40012de	          0x41ffd4	                                call r12	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x40012e1	            0x85c0	                           test eax, eax	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x40012e3	     0xf8587000000	                           jne 0x4001370	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x40012e9	          0x8b4500	                    mov eax, dword [rbp]	       244	ui.c	FUNCTION_4	WHILE_1	IF_5
0x40012ec	            0x85c0	                           test eax, eax	       244	ui.c	FUNCTION_4	WHILE_1	IF_5
0x40012ee	            0x750e	                           jne 0x40012fe	       244	ui.c	FUNCTION_4	WHILE_1	IF_5
0x40012f0	          0x4c29fb	                            sub rbx, r15	       249	ui.c	FUNCTION_4	WHILE_1	IF_6
0x40012f3	          0x4885db	                           test rbx, rbx	       230	ui.c	FUNCTION_4	WHILE_1
0x40012f6	            0x7fc0	                            jg 0x40012b8	       230	ui.c	FUNCTION_4	WHILE_1
0x40012f8	        0x803c2400	                       cmp byte [rsp], 0	       230	ui.c	FUNCTION_4	WHILE_1
0x40012fc	            0x75ba	                           jne 0x40012b8	       230	ui.c	FUNCTION_4	WHILE_1
0x40012fe	        0x4883c418	                           add rsp, 0x18	       252	ui.c	FUNCTION_4
0x4001302	            0x31c0	                            xor eax, eax	       238	ui.c	FUNCTION_4	WHILE_1	IF_2
0x4001304	              0x5b	                                 pop rbx	       252	ui.c	FUNCTION_4
0x4001305	              0x5d	                                 pop rbp	       252	ui.c	FUNCTION_4
0x4001306	            0x415c	                                 pop r12	       252	ui.c	FUNCTION_4
0x4001308	            0x415d	                                 pop r13	       252	ui.c	FUNCTION_4
0x400130a	            0x415e	                                 pop r14	       252	ui.c	FUNCTION_4
0x400130c	            0x415f	                                 pop r15	       252	ui.c	FUNCTION_4
0x400130e	              0xc3	                                     ret	       252	ui.c	FUNCTION_4
0x400130f	              0x90	                                     nop	       252	ui.c	FUNCTION_4
0x4001310	          0x4863eb	                         movsxd rbp, ebx	       252	ui.c	FUNCTION_4
0x4001313	            0xeb88	                           jmp 0x400129d	       252	ui.c	FUNCTION_4
0x4001315	           0xf1f00	                         nop dword [rax]	       252	ui.c	FUNCTION_4
0x4001318	          0x4885d2	                           test rdx, rdx	       252	ui.c	FUNCTION_4
0x400131b	            0x7467	                            je 0x4001384	       252	ui.c	FUNCTION_4
0x400131d	          0x4885ff	                           test rdi, rdi	       230	ui.c	FUNCTION_4	WHILE_1
0x4001320	            0x74dc	                            je 0x40012fe	       230	ui.c	FUNCTION_4	WHILE_1
0x4001322	          0x4863df	                         movsxd rbx, edi	       230	ui.c	FUNCTION_4	WHILE_1
0x4001325	      0xe800000000	                          call 0x400132a	       234	ui.c	FUNCTION_4	WHILE_1	CALL_2
0x400132a	    0x443935000000	           cmp dword [0x04001331], r14d 	       235	ui.c	FUNCTION_4	WHILE_1	IF_2
0x4001331	            0x75cb	                           jne 0x40012fe	       235	ui.c	FUNCTION_4	WHILE_1	IF_2
0x4001333	            0x85c0	                           test eax, eax	       235	ui.c	FUNCTION_4	WHILE_1	IF_2
0x4001335	          0x4863f8	                         movsxd rdi, eax	       235	ui.c	FUNCTION_4	WHILE_1	IF_2
0x4001338	          0x4489ea	                           mov edx, r13d	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x400133b	        0x480f4efb	                         cmovle rdi, rbx	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x400133f	          0x4889ee	                            mov rsi, rbp	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x4001342	          0x41ffd4	                                call r12	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x4001345	            0x85c0	                           test eax, eax	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x4001347	            0x7527	                           jne 0x4001370	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x4001349	          0x8b5500	                    mov edx, dword [rbp]	       244	ui.c	FUNCTION_4	WHILE_1	IF_5
0x400134c	            0x85d2	                           test edx, edx	       244	ui.c	FUNCTION_4	WHILE_1	IF_5
0x400134e	            0x74d5	                            je 0x4001325	       244	ui.c	FUNCTION_4	WHILE_1	IF_5
0x4001350	            0xebac	                           jmp 0x40012fe	       244	ui.c	FUNCTION_4	WHILE_1	IF_5
0x4001352	    0x660f1f440000	                    nop word [rax + rax]	       244	ui.c	FUNCTION_4	WHILE_1	IF_5
0x4001358	        0x4883c418	                           add rsp, 0x18	       252	ui.c	FUNCTION_4
0x400135c	          0x4c89e0	                            mov rax, r12	       228	ui.c	FUNCTION_4	CALL_1
0x400135f	            0x89ca	                            mov edx, ecx	       228	ui.c	FUNCTION_4	CALL_1
0x4001361	              0x5b	                                 pop rbx	       252	ui.c	FUNCTION_4
0x4001362	              0x5d	                                 pop rbp	       252	ui.c	FUNCTION_4
0x4001363	            0x415c	                                 pop r12	       252	ui.c	FUNCTION_4
0x4001365	            0x415d	                                 pop r13	       252	ui.c	FUNCTION_4
0x4001367	            0x415e	                                 pop r14	       252	ui.c	FUNCTION_4
0x4001369	            0x415f	                                 pop r15	       252	ui.c	FUNCTION_4
0x400136b	            0x31f6	                            xor esi, esi	       228	ui.c	FUNCTION_4	CALL_1
0x400136d	            0xffe0	                                 jmp rax	       228	ui.c	FUNCTION_4	CALL_1
0x400136f	              0x90	                                     nop	       228	ui.c	FUNCTION_4	CALL_1
0x4001370	        0x4883c418	                           add rsp, 0x18	       252	ui.c	FUNCTION_4
0x4001374	      0xb801000000	                              mov eax, 1	       243	ui.c	FUNCTION_4	WHILE_1	IF_4
0x4001379	              0x5b	                                 pop rbx	       252	ui.c	FUNCTION_4
0x400137a	              0x5d	                                 pop rbp	       252	ui.c	FUNCTION_4
0x400137b	            0x415c	                                 pop r12	       252	ui.c	FUNCTION_4
0x400137d	            0x415d	                                 pop r13	       252	ui.c	FUNCTION_4
0x400137f	            0x415e	                                 pop r14	       252	ui.c	FUNCTION_4
0x4001381	            0x415f	                                 pop r15	       252	ui.c	FUNCTION_4
0x4001383	              0xc3	                                     ret	       252	ui.c	FUNCTION_4
0x4001384	          0x4885ff	                           test rdi, rdi	       230	ui.c	FUNCTION_4	WHILE_1
0x4001387	     0xf8471ffffff	                            je 0x40012fe	       230	ui.c	FUNCTION_4	WHILE_1
0x400138d	          0x4863df	                         movsxd rbx, edi	       230	ui.c	FUNCTION_4	WHILE_1
0x4001390	            0xeb1b	                           jmp 0x40013ad	       230	ui.c	FUNCTION_4	WHILE_1
0x4001392	    0x660f1f440000	                    nop word [rax + rax]	       230	ui.c	FUNCTION_4	WHILE_1
0x4001398	            0x85c0	                           test eax, eax	       230	ui.c	FUNCTION_4	WHILE_1
0x400139a	          0x4863f8	                         movsxd rdi, eax	       230	ui.c	FUNCTION_4	WHILE_1
0x400139d	          0x4489ea	                           mov edx, r13d	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x40013a0	        0x480f4efb	                         cmovle rdi, rbx	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x40013a4	            0x31f6	                            xor esi, esi	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x40013a6	          0x41ffd4	                                call r12	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x40013a9	            0x85c0	                           test eax, eax	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x40013ab	            0x75c3	                           jne 0x4001370	       242	ui.c	FUNCTION_4	WHILE_1	IF_4	CALL_3
0x40013ad	      0xe800000000	                          call 0x40013b2	       234	ui.c	FUNCTION_4	WHILE_1	CALL_2
0x40013b2	    0x443b35000000	           cmp r14d, dword [0x040013b9] 	       235	ui.c	FUNCTION_4	WHILE_1	IF_2
0x40013b9	            0x74dd	                            je 0x4001398	       235	ui.c	FUNCTION_4	WHILE_1	IF_2
0x40013bb	      0xe93effffff	                           jmp 0x40012fe	       235	ui.c	FUNCTION_4	WHILE_1	IF_2
ui_inchar	IF,11:DO,0:functions,0:FOR,0:CALL,14:SWITCH,0:WHILE,0:ELSE,1	143
0x40049f0	            0x4157	                                push r15	       121	ui.c	FUNCTION_3
0x40049f2	            0x4156	                                push r14	       121	ui.c	FUNCTION_3
0x40049f4	            0x4155	                                push r13	       121	ui.c	FUNCTION_3
0x40049f6	            0x4154	                                push r12	       121	ui.c	FUNCTION_3
0x40049f8	          0x4989fd	                            mov r13, rdi	       121	ui.c	FUNCTION_3
0x40049fb	              0x55	                                push rbp	       121	ui.c	FUNCTION_3
0x40049fc	              0x53	                                push rbx	       121	ui.c	FUNCTION_3
0x40049fd	            0x89f5	                            mov ebp, esi	       121	ui.c	FUNCTION_3
0x40049ff	        0x4883ec18	                           sub rsp, 0x18	       121	ui.c	FUNCTION_3
0x4004a03	    0x4c8b25000000	            mov r12, qword [0x04004a0a] 	       128	ui.c	FUNCTION_3	IF_1
0x4004a0a	          0x4d85e4	                           test r12, r12	       128	ui.c	FUNCTION_3	IF_1
0x4004a0d	     0xf847d000000	                            je 0x4004a90	       128	ui.c	FUNCTION_3	IF_1
0x4004a13	    0x486315000000	         movsxd rdx, dword [0x04004a1a] 	       130	ui.c	FUNCTION_3	IF_1	IF_2
0x4004a1a	    0x48631d000000	         movsxd rbx, dword [0x04004a21] 	       130	ui.c	FUNCTION_3	IF_1	IF_2
0x4004a21	            0x89d0	                            mov eax, edx	       130	ui.c	FUNCTION_3	IF_1	IF_2
0x4004a23	            0x29d8	                            sub eax, ebx	       130	ui.c	FUNCTION_3	IF_1	IF_2
0x4004a25	            0x39f0	                            cmp eax, esi	       130	ui.c	FUNCTION_3	IF_1	IF_2
0x4004a27	            0x7f37	                            jg 0x4004a60	       130	ui.c	FUNCTION_3	IF_1	IF_2
0x4004a29	        0x498d341c	                    lea rsi, [r12 + rbx]	        59	string3.h	FUNCTION_83	CALL_3
0x4004a2d	      0xe800000000	                          call 0x4004a32	        59	string3.h	FUNCTION_83	CALL_3
0x4004a32	          0x4c89e7	                            mov rdi, r12	       133	ui.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x4004a35	      0xe800000000	                          call 0x4004a3a	       133	ui.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x4004a3a	    0x8b0500000000	            mov eax, dword [0x04004a40] 	       134	ui.c	FUNCTION_3	IF_1	IF_2
0x4004a40	    0x48c705000000	               mov qword [0x04004a4b], 0	       133	ui.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x4004a4b	        0x4883c418	                           add rsp, 0x18	       207	ui.c	FUNCTION_3
0x4004a4f	              0x5b	                                 pop rbx	       207	ui.c	FUNCTION_3
0x4004a50	              0x5d	                                 pop rbp	       207	ui.c	FUNCTION_3
0x4004a51	            0x415c	                                 pop r12	       207	ui.c	FUNCTION_3
0x4004a53	            0x415d	                                 pop r13	       207	ui.c	FUNCTION_3
0x4004a55	            0x415e	                                 pop r14	       207	ui.c	FUNCTION_3
0x4004a57	            0x415f	                                 pop r15	       207	ui.c	FUNCTION_3
0x4004a59	              0xc3	                                     ret	       207	ui.c	FUNCTION_3
0x4004a5a	    0x660f1f440000	                    nop word [rax + rax]	       207	ui.c	FUNCTION_3
0x4004a60	          0x4863d6	                         movsxd rdx, esi	        59	string3.h	FUNCTION_83	CALL_3
0x4004a63	          0x4863f3	                         movsxd rsi, ebx	        59	string3.h	FUNCTION_83	CALL_3
0x4004a66	             0x1eb	                            add ebx, ebp	       137	ui.c	FUNCTION_3	IF_1
0x4004a68	          0x4c01e6	                            add rsi, r12	        59	string3.h	FUNCTION_83	CALL_3
0x4004a6b	      0xe800000000	                          call 0x4004a70	        59	string3.h	FUNCTION_83	CALL_3
0x4004a70	    0x891d00000000	            mov dword [0x04004a76], ebx 	       137	ui.c	FUNCTION_3	IF_1
0x4004a76	        0x4883c418	                           add rsp, 0x18	       207	ui.c	FUNCTION_3
0x4004a7a	            0x89e8	                            mov eax, ebp	       138	ui.c	FUNCTION_3	IF_1
0x4004a7c	              0x5b	                                 pop rbx	       207	ui.c	FUNCTION_3
0x4004a7d	              0x5d	                                 pop rbp	       207	ui.c	FUNCTION_3
0x4004a7e	            0x415c	                                 pop r12	       207	ui.c	FUNCTION_3
0x4004a80	            0x415d	                                 pop r13	       207	ui.c	FUNCTION_3
0x4004a82	            0x415e	                                 pop r14	       207	ui.c	FUNCTION_3
0x4004a84	            0x415f	                                 pop r15	       207	ui.c	FUNCTION_3
0x4004a86	              0xc3	                                     ret	       207	ui.c	FUNCTION_3
0x4004a87	    0x660f1f840000	                    nop word [rax + rax]	       207	ui.c	FUNCTION_3
0x4004a90	          0x4885d2	                           test rdx, rdx	       143	ui.c	FUNCTION_3	IF_3
0x4004a93	          0x4889d3	                            mov rbx, rdx	       143	ui.c	FUNCTION_3	IF_3
0x4004a96	          0x4189cf	                           mov r15d, ecx	       143	ui.c	FUNCTION_3	IF_3
0x4004a99	        0x410f95c6	                              setne r14b	       143	ui.c	FUNCTION_3	IF_3
0x4004a9d	    0x833d00000000	               cmp dword [0x04004aa4], 1	       143	ui.c	FUNCTION_3	IF_3
0x4004aa4	            0x7509	                           jne 0x4004aaf	       143	ui.c	FUNCTION_3	IF_3
0x4004aa6	          0x4584f6	                         test r14b, r14b	       143	ui.c	FUNCTION_3	IF_3
0x4004aa9	     0xf8539010000	                           jne 0x4004be8	       143	ui.c	FUNCTION_3	IF_3
0x4004aaf	      0xe800000000	                          call 0x4004ab4	       152	ui.c	FUNCTION_3	IF_4	CALL_5
0x4004ab4	            0x85c0	                           test eax, eax	       152	ui.c	FUNCTION_3	IF_4	CALL_5
0x4004ab6	            0x89c2	                            mov edx, eax	       152	ui.c	FUNCTION_3	IF_4	CALL_5
0x4004ab8	     0xf8582000000	                           jne 0x4004b40	       152	ui.c	FUNCTION_3	IF_4	CALL_5
0x4004abe	        0x4883fbff	             cmp rbx, 0xffffffffffffffff	       171	ui.c	FUNCTION_3	IF_7
0x4004ac2	        0x410f94c4	                               sete r12b	       171	ui.c	FUNCTION_3	IF_7
0x4004ac6	        0x4883fb64	                           cmp rbx, 0x64	       171	ui.c	FUNCTION_3	IF_7
0x4004aca	           0xf9fc0	                                 setg al	       171	ui.c	FUNCTION_3	IF_7
0x4004acd	          0x4108c4	                             or r12b, al	       171	ui.c	FUNCTION_3	IF_7
0x4004ad0	     0xf85ca000000	                           jne 0x4004ba0	       171	ui.c	FUNCTION_3	IF_7
0x4004ad6	    0x8b0500000000	            mov eax, dword [0x04004adc] 	       183	ui.c	FUNCTION_3	IF_9
0x4004adc	          0x4489f9	                           mov ecx, r15d	       184	ui.c	FUNCTION_3	CALL_11
0x4004adf	          0x4889da	                            mov rdx, rbx	       184	ui.c	FUNCTION_3	CALL_11
0x4004ae2	            0x89ee	                            mov esi, ebp	       184	ui.c	FUNCTION_3	CALL_11
0x4004ae4	          0x4c89ef	                            mov rdi, r13	       184	ui.c	FUNCTION_3	CALL_11
0x4004ae7	            0x85c0	                           test eax, eax	       183	ui.c	FUNCTION_3	IF_9
0x4004ae9	            0x7445	                            je 0x4004b30	       183	ui.c	FUNCTION_3	IF_9
0x4004aeb	      0xe800000000	                          call 0x4004af0	       184	ui.c	FUNCTION_3	CALL_11
0x4004af0	            0x89c5	                            mov ebp, eax	       184	ui.c	FUNCTION_3	CALL_11
0x4004af2	          0x4584e4	                         test r12b, r12b	       193	ui.c	FUNCTION_3	IF_10
0x4004af5	     0xf8595000000	                           jne 0x4004b90	       193	ui.c	FUNCTION_3	IF_10
0x4004afb	    0xc70500000000	               mov dword [0x04004b05], 1	       197	ui.c	FUNCTION_3
0x4004b05	    0x833d00000000	               cmp dword [0x04004b0c], 1	       203	ui.c	FUNCTION_3	IF_11
0x4004b0c	            0x7512	                           jne 0x4004b20	       203	ui.c	FUNCTION_3	IF_11
0x4004b0e	          0x4584f6	                         test r14b, r14b	       203	ui.c	FUNCTION_3	IF_11
0x4004b11	            0x740d	                            je 0x4004b20	       203	ui.c	FUNCTION_3	IF_11
0x4004b13	      0xe800000000	                          call 0x4004b18	       204	ui.c	FUNCTION_3	CALL_14
0x4004b18	            0x89e8	                            mov eax, ebp	       206	ui.c	FUNCTION_3
0x4004b1a	      0xe92cffffff	                           jmp 0x4004a4b	       206	ui.c	FUNCTION_3
0x4004b1f	              0x90	                                     nop	       206	ui.c	FUNCTION_3
0x4004b20	            0x89e8	                            mov eax, ebp	       206	ui.c	FUNCTION_3
0x4004b22	      0xe924ffffff	                           jmp 0x4004a4b	       206	ui.c	FUNCTION_3
0x4004b27	    0x660f1f840000	                    nop word [rax + rax]	       206	ui.c	FUNCTION_3
0x4004b30	      0xe800000000	                          call 0x4004b35	       190	ui.c	FUNCTION_3	CALL_12
0x4004b35	            0x89c5	                            mov ebp, eax	       190	ui.c	FUNCTION_3	CALL_12
0x4004b37	            0xebb9	                           jmp 0x4004af2	       190	ui.c	FUNCTION_3	CALL_12
0x4004b39	     0xf1f80000000	                         nop dword [rax]	       190	ui.c	FUNCTION_3	CALL_12
0x4004b40	        0x4883fb0a	                            cmp rbx, 0xa	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x4004b44	      0xba0a000000	                            mov edx, 0xa	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x4004b49	            0x89ee	                            mov esi, ebp	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x4004b4b	        0x480f43d3	                         cmovae rdx, rbx	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x4004b4f	          0x4489f9	                           mov ecx, r15d	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x4004b52	          0x4c89ef	                            mov rdi, r13	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x4004b55	      0xe800000000	                          call 0x4004b5a	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x4004b5a	            0x85c0	                           test eax, eax	       159	ui.c	FUNCTION_3	IF_4	IF_5	CALL_7
0x4004b5c	            0x89c5	                            mov ebp, eax	       157	ui.c	FUNCTION_3	IF_4	CALL_6
0x4004b5e	            0x7fa5	                            jg 0x4004b05	       159	ui.c	FUNCTION_3	IF_4	IF_5	CALL_7
0x4004b60	          0x4489ff	                           mov edi, r15d	       159	ui.c	FUNCTION_3	IF_4	IF_5	CALL_7
0x4004b63	      0xe800000000	                          call 0x4004b68	       159	ui.c	FUNCTION_3	IF_4	IF_5	CALL_7
0x4004b68	            0x85c0	                           test eax, eax	       159	ui.c	FUNCTION_3	IF_4	IF_5	CALL_7
0x4004b6a	            0x7599	                           jne 0x4004b05	       159	ui.c	FUNCTION_3	IF_4	IF_5	CALL_7
0x4004b6c	          0x4885db	                           test rbx, rbx	       159	ui.c	FUNCTION_3	IF_4	IF_5	CALL_7
0x4004b6f	            0x7994	                           jns 0x4004b05	       159	ui.c	FUNCTION_3	IF_4	IF_5	CALL_7
0x4004b71	        0x4883c301	                              add rbx, 1	       162	ui.c	FUNCTION_3	IF_4	IF_6
0x4004b75	            0x747b	                            je 0x4004bf2	       162	ui.c	FUNCTION_3	IF_4	IF_6
0x4004b77	      0x41c645000d	                     mov byte [r13], 0xd	       164	ui.c	FUNCTION_3	IF_4
0x4004b7c	      0xbd01000000	                              mov ebp, 1	       165	ui.c	FUNCTION_3	IF_4
0x4004b81	      0xe97fffffff	                           jmp 0x4004b05	       166	ui.c	FUNCTION_3	IF_4
0x4004b86	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       166	ui.c	FUNCTION_3	IF_4
0x4004b90	      0xbfffffffff	                     mov edi, 0xffffffff	       195	ui.c	FUNCTION_3	CALL_13
0x4004b95	      0xe800000000	                          call 0x4004b9a	       195	ui.c	FUNCTION_3	CALL_13
0x4004b9a	      0xe95cffffff	                           jmp 0x4004afb	       195	ui.c	FUNCTION_3	CALL_13
0x4004b9f	              0x90	                                     nop	       195	ui.c	FUNCTION_3	CALL_13
0x4004ba0	      0xbffeffffff	                     mov edi, 0xfffffffe	       174	ui.c	FUNCTION_3	IF_7	CALL_9
0x4004ba5	        0x8954240c	              mov dword [rsp + 0xc], edx	       174	ui.c	FUNCTION_3	IF_7	CALL_9
0x4004ba9	      0xe800000000	                          call 0x4004bae	       174	ui.c	FUNCTION_3	IF_7	CALL_9
0x4004bae	    0x488b05000000	            mov rax, qword [0x04004bb5] 	       178	ui.c	FUNCTION_3	IF_7	IF_8	CALL_10
0x4004bb5	    0x8b80401c0000	          mov eax, dword [rax + 0x1c40] 	       178	ui.c	FUNCTION_3	IF_7	IF_8	CALL_10
0x4004bbb	     0xb0500000000	              or eax, dword [0x04004bc1]	       178	ui.c	FUNCTION_3	IF_7	IF_8	CALL_10
0x4004bc1	        0x89442408	                mov dword [rsp + 8], eax	       178	ui.c	FUNCTION_3	IF_7	IF_8	CALL_10
0x4004bc5	      0xe800000000	                          call 0x4004bca	       178	ui.c	FUNCTION_3	IF_7	IF_8	CALL_10
0x4004bca	        0x85442408	               test dword [rsp + 8], eax	       179	ui.c	FUNCTION_3	IF_7	IF_8
0x4004bce	        0x8b54240c	              mov edx, dword [rsp + 0xc]	       179	ui.c	FUNCTION_3	IF_7	IF_8
0x4004bd2	     0xf4415000000	           cmove edx, dword [0x04004bd9]	       179	ui.c	FUNCTION_3	IF_7	IF_8
0x4004bd9	    0x891500000000	            mov dword [0x04004bdf], edx 	       179	ui.c	FUNCTION_3	IF_7	IF_8
0x4004bdf	      0xe9f2feffff	                           jmp 0x4004ad6	       179	ui.c	FUNCTION_3	IF_7	IF_8
0x4004be4	         0xf1f4000	                         nop dword [rax]	       179	ui.c	FUNCTION_3	IF_7	IF_8
0x4004be8	      0xe800000000	                          call 0x4004bed	       144	ui.c	FUNCTION_3	CALL_4
0x4004bed	      0xe9bdfeffff	                           jmp 0x4004aaf	       144	ui.c	FUNCTION_3	CALL_4
0x4004bf2	    0x8b0500000000	            mov eax, dword [0x04004bf8] 	       162	ui.c	FUNCTION_3	IF_4	IF_6
0x4004bf8	          0x83c001	                              add eax, 1	       162	ui.c	FUNCTION_3	IF_4	IF_6
0x4004bfb	      0x3de8030000	                          cmp eax, 0x3e8	       162	ui.c	FUNCTION_3	IF_4	IF_6
0x4004c00	    0x890500000000	            mov dword [0x04004c06], eax 	       162	ui.c	FUNCTION_3	IF_4	IF_6
0x4004c06	     0xf856bffffff	                           jne 0x4004b77	       162	ui.c	FUNCTION_3	IF_4	IF_6
0x4004c0c	      0xe800000000	                          call 0x4004c11	       163	ui.c	FUNCTION_3	IF_4	CALL_8
0x4004c11	      0xe961ffffff	                           jmp 0x4004b77	       163	ui.c	FUNCTION_3	IF_4	CALL_8
start_global_changes	IF,2:DO,0:functions,0:FOR,0:CALL,0:SWITCH,0:WHILE,0:ELSE,0	16
0x4001d70	    0x8b0500000000	            mov eax, dword [0x04001d76] 	       615	ui.c	FUNCTION_19	IF_1
0x4001d76	          0x83c001	                              add eax, 1	       615	ui.c	FUNCTION_19	IF_1
0x4001d79	          0x83f801	                              cmp eax, 1	       615	ui.c	FUNCTION_19	IF_1
0x4001d7c	    0x890500000000	            mov dword [0x04001d82], eax 	       615	ui.c	FUNCTION_19	IF_1
0x4001d82	            0x7e0c	                           jle 0x4001d90	       615	ui.c	FUNCTION_19	IF_1
0x4001d84	            0xf3c3	                                     ret	       615	ui.c	FUNCTION_19	IF_1
0x4001d86	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       615	ui.c	FUNCTION_19	IF_1
0x4001d90	    0x8b0500000000	            mov eax, dword [0x04001d96] 	       617	ui.c	FUNCTION_19
0x4001d96	    0xc70500000000	               mov dword [0x04001da0], 0	       618	ui.c	FUNCTION_19
0x4001da0	    0x890500000000	            mov dword [0x04001da6], eax 	       617	ui.c	FUNCTION_19
0x4001da6	    0x8b0500000000	            mov eax, dword [0x04001dac] 	       620	ui.c	FUNCTION_19	IF_2
0x4001dac	            0x85c0	                           test eax, eax	       620	ui.c	FUNCTION_19	IF_2
0x4001dae	            0x74d4	                            je 0x4001d84	       620	ui.c	FUNCTION_19	IF_2
0x4001db0	    0xc70500000000	               mov dword [0x04001dba], 0	       622	ui.c	FUNCTION_19	IF_2
0x4001dba	    0xc70500000000	               mov dword [0x04001dc4], 0	       623	ui.c	FUNCTION_19	IF_2
0x4001dc4	              0xc3	                                     ret	       623	ui.c	FUNCTION_19	IF_2
ui_get_shellsize	IF,2:DO,0:functions,0:FOR,0:CALL,5:SWITCH,0:WHILE,0:ELSE,1	26
0x4001450	    0x8b0500000000	            mov eax, dword [0x04001456] 	       341	ui.c	FUNCTION_9	IF_1
0x4001456	              0x53	                                push rbx	       337	ui.c	FUNCTION_9
0x4001457	            0x85c0	                           test eax, eax	       341	ui.c	FUNCTION_9	IF_1
0x4001459	            0x7415	                            je 0x4001470	       341	ui.c	FUNCTION_9	IF_1
0x400145b	      0xe800000000	                          call 0x4001460	       342	ui.c	FUNCTION_9	CALL_1
0x4001460	            0x89c3	                            mov ebx, eax	       342	ui.c	FUNCTION_9	CALL_1
0x4001462	      0xe800000000	                          call 0x4001467	       347	ui.c	FUNCTION_9	CALL_3
0x4001467	          0x83fb01	                              cmp ebx, 1	       350	ui.c	FUNCTION_9	IF_2
0x400146a	            0x7415	                            je 0x4001481	       350	ui.c	FUNCTION_9	IF_2
0x400146c	            0x89d8	                            mov eax, ebx	       356	ui.c	FUNCTION_9
0x400146e	              0x5b	                                 pop rbx	       356	ui.c	FUNCTION_9
0x400146f	              0xc3	                                     ret	       356	ui.c	FUNCTION_9
0x4001470	      0xe800000000	                          call 0x4001475	       345	ui.c	FUNCTION_9	CALL_2
0x4001475	            0x89c3	                            mov ebx, eax	       345	ui.c	FUNCTION_9	CALL_2
0x4001477	      0xe800000000	                          call 0x400147c	       347	ui.c	FUNCTION_9	CALL_3
0x400147c	          0x83fb01	                              cmp ebx, 1	       350	ui.c	FUNCTION_9	IF_2
0x400147f	            0x75eb	                           jne 0x400146c	       350	ui.c	FUNCTION_9	IF_2
0x4001481	    0x488b35000000	            mov rsi, qword [0x04001488] 	       352	ui.c	FUNCTION_9	IF_2	CALL_4
0x4001488	      0xbf00000000	                              mov edi, 0	       352	ui.c	FUNCTION_9	IF_2	CALL_4
0x400148d	      0xe800000000	                          call 0x4001492	       352	ui.c	FUNCTION_9	IF_2	CALL_4
0x4001492	    0x488b35000000	            mov rsi, qword [0x04001499] 	       353	ui.c	FUNCTION_9	IF_2	CALL_5
0x4001499	      0xbf00000000	                              mov edi, 0	       353	ui.c	FUNCTION_9	IF_2	CALL_5
0x400149e	      0xe800000000	                          call 0x40014a3	       353	ui.c	FUNCTION_9	IF_2	CALL_5
0x40014a3	            0x89d8	                            mov eax, ebx	       356	ui.c	FUNCTION_9
0x40014a5	              0x5b	                                 pop rbx	       356	ui.c	FUNCTION_9
0x40014a6	              0xc3	                                     ret	       356	ui.c	FUNCTION_9
clip_modeless	IF,5:DO,0:functions,0:FOR,0:CALL,5:SWITCH,0:WHILE,0:ELSE,3	402
0x4003740	            0x4155	                                push r13	       734	ui.c	FUNCTION_25
0x4003742	            0x4154	                                push r12	       734	ui.c	FUNCTION_25
0x4003744	              0x55	                                push rbp	       734	ui.c	FUNCTION_25
0x4003745	              0x53	                                push rbx	       734	ui.c	FUNCTION_25
0x4003746	        0x4883ec08	                              sub rsp, 8	       734	ui.c	FUNCTION_25
0x400374a	     0xfb705000000	           movzx eax, word [0x04003751] 	       737	ui.c	FUNCTION_25
0x4003751	        0x66a9fdff	                         test ax, 0xfffd	       740	ui.c	FUNCTION_25
0x4003755	            0x750d	                           jne 0x4003764	       740	ui.c	FUNCTION_25
0x4003757	    0xf60500000000	           test byte [0x0400375e], 0x20 	       739	ui.c	FUNCTION_25
0x400375e	     0xf8514010000	                           jne 0x4003878	       739	ui.c	FUNCTION_25
0x4003764	            0x31c9	                            xor ecx, ecx	       739	ui.c	FUNCTION_25
0x4003766	            0x31ed	                            xor ebp, ebp	       740	ui.c	FUNCTION_25
0x4003768	        0x6683f801	                               cmp ax, 1	       740	ui.c	FUNCTION_25
0x400376c	     0xf841e010000	                            je 0x4003890	       740	ui.c	FUNCTION_25
0x4003772	            0x85f6	                           test esi, esi	       742	ui.c	FUNCTION_25	IF_1
0x4003774	     0xf84c6000000	                            je 0x4003840	       742	ui.c	FUNCTION_25	IF_1
0x400377a	          0x83ff02	                              cmp edi, 2	       742	ui.c	FUNCTION_25	IF_1
0x400377d	     0xf85bd000000	                           jne 0x4003840	       742	ui.c	FUNCTION_25	IF_1
0x4003783	    0x66833d000000	                cmp word [0x0400378b], 0	       746	ui.c	FUNCTION_25	IF_1	IF_2
0x400378b	     0xf841f010000	                            je 0x40038b0	       746	ui.c	FUNCTION_25	IF_1	IF_2
0x4003791	    0x8b1d00000000	            mov ebx, dword [0x04003797] 	       748	ui.c	FUNCTION_25	IF_1	CALL_2
0x4003797	            0x85db	                           test ebx, ebx	      2006	ui.c	FUNCTION_60	IF_1
0x4003799	     0xf8821020000	                            js 0x40039c0	      2006	ui.c	FUNCTION_60	IF_1
0x400379f	    0x8b0500000000	            mov eax, dword [0x040037a5] 	      2008	ui.c	FUNCTION_60	IF_2
0x40037a5	            0x39c3	                            cmp ebx, eax	      2008	ui.c	FUNCTION_60	IF_2
0x40037a7	     0xf8d23020000	                           jge 0x40039d0	      2008	ui.c	FUNCTION_60	IF_2
0x40037ad	          0x4c63e3	                         movsxd r12, ebx	      2008	ui.c	FUNCTION_60	IF_2
0x40037b0	    0x8b3d00000000	            mov edi, dword [0x040037b6] 	       748	ui.c	FUNCTION_25	IF_1	CALL_2
0x40037b6	            0x85ff	                           test edi, edi	      1993	ui.c	FUNCTION_59	IF_1
0x40037b8	     0xf8862030000	                            js 0x4003b20	      1993	ui.c	FUNCTION_59	IF_1
0x40037be	    0x8b0500000000	            mov eax, dword [0x040037c4] 	      1995	ui.c	FUNCTION_59	IF_2
0x40037c4	          0x8d50ff	                      lea edx, [rax - 1]	      1996	ui.c	FUNCTION_59	IF_2
0x40037c7	            0x39c7	                            cmp edi, eax	      1996	ui.c	FUNCTION_59	IF_2
0x40037c9	           0xf4dfa	                         cmovge edi, edx	      1996	ui.c	FUNCTION_59	IF_2
0x40037cc	            0x89de	                            mov esi, ebx	       900	ui.c	FUNCTION_28	CALL_9
0x40037ce	      0xe800000000	                          call 0x40037d3	       900	ui.c	FUNCTION_28	CALL_9
0x40037d3	    0x3b0500000000	            cmp eax, dword [0x040037d9] 	       903	ui.c	FUNCTION_28	IF_6
0x40037d9	          0x4189c5	                           mov r13d, eax	       900	ui.c	FUNCTION_28	CALL_9
0x40037dc	     0xf841e030000	                            je 0x4003b00	       903	ui.c	FUNCTION_28	IF_6
0x40037e2	    0x66833d000000	                cmp word [0x040037ea], 2	       910	ui.c	FUNCTION_28	IF_7
0x40037ea	     0xf8470040000	                            je 0x4003c60	       910	ui.c	FUNCTION_28	IF_7
0x40037f0	     0xfb705000000	           movzx eax, word [0x040037f7] 	       910	ui.c	FUNCTION_28	IF_7
0x40037f7	      0xba01000000	                              mov edx, 1	       942	ui.c	FUNCTION_28
0x40037fc	            0x85ed	                           test ebp, ebp	       948	ui.c	FUNCTION_28	IF_10
0x40037fe	    0x668915000000	               mov word [0x04003805], dx	       942	ui.c	FUNCTION_28
0x4003805	     0xf85d5000000	                           jne 0x40038e0	       948	ui.c	FUNCTION_28	IF_10
0x400380b	        0x6683f801	                               cmp ax, 1	       951	ui.c	FUNCTION_28	SWITCH_1
0x400380f	     0xf842b030000	                            je 0x4003b40	       951	ui.c	FUNCTION_28	SWITCH_1
0x4003815	     0xf82ed000000	                            jb 0x4003908	       951	ui.c	FUNCTION_28	SWITCH_1
0x400381b	        0x6683f802	                               cmp ax, 2	       951	ui.c	FUNCTION_28	SWITCH_1
0x400381f	     0xf8552020000	                           jne 0x4003a77	       951	ui.c	FUNCTION_28	SWITCH_1
0x4003825	    0x4c3925000000	            cmp qword [0x0400382c], r12 	      1011	ui.c	FUNCTION_28	SWITCH_1	IF_19
0x400382c	     0xf8506020000	                           jne 0x4003a38	      1011	ui.c	FUNCTION_28	SWITCH_1	IF_19
0x4003832	        0x4883c408	                              add rsp, 8	       761	ui.c	FUNCTION_25
0x4003836	              0x5b	                                 pop rbx	       761	ui.c	FUNCTION_25
0x4003837	              0x5d	                                 pop rbp	       761	ui.c	FUNCTION_25
0x4003838	            0x415c	                                 pop r12	       761	ui.c	FUNCTION_25
0x400383a	            0x415d	                                 pop r13	       761	ui.c	FUNCTION_25
0x400383c	              0xc3	                                     ret	       761	ui.c	FUNCTION_25
0x400383d	           0xf1f00	                         nop dword [rax]	       761	ui.c	FUNCTION_25
0x4003840	            0x85f6	                           test esi, esi	       750	ui.c	FUNCTION_25	ELSE_1	IF_3
0x4003842	     0xf8598010000	                           jne 0x40039e0	       750	ui.c	FUNCTION_25	ELSE_1	IF_3
0x4003848	            0x85d2	                           test edx, edx	       752	ui.c	FUNCTION_25	ELSE_2	IF_4
0x400384a	     0xf8440020000	                            je 0x4003a90	       752	ui.c	FUNCTION_25	ELSE_2	IF_4
0x4003850	    0x66833d000000	                cmp word [0x04003858], 0	       756	ui.c	FUNCTION_25	ELSE_2	IF_4	IF_5
0x4003858	            0x74d8	                            je 0x4003832	       756	ui.c	FUNCTION_25	ELSE_2	IF_4	IF_5
0x400385a	    0x8b1500000000	            mov edx, dword [0x04003860] 	       757	ui.c	FUNCTION_25	ELSE_2	IF_4	CALL_4
0x4003860	    0x8b3500000000	            mov esi, dword [0x04003866] 	       757	ui.c	FUNCTION_25	ELSE_2	IF_4	CALL_4
0x4003866	        0x4883c408	                              add rsp, 8	       761	ui.c	FUNCTION_25
0x400386a	              0x5b	                                 pop rbx	       761	ui.c	FUNCTION_25
0x400386b	              0x5d	                                 pop rbp	       761	ui.c	FUNCTION_25
0x400386c	            0x415c	                                 pop r12	       761	ui.c	FUNCTION_25
0x400386e	            0x415d	                                 pop r13	       761	ui.c	FUNCTION_25
0x4003870	      0xe9abf8ffff	          jmp sym.clip_process_selection	       757	ui.c	FUNCTION_25	ELSE_2	IF_4	CALL_4
0x4003875	           0xf1f00	                         nop dword [rax]	       757	ui.c	FUNCTION_25	ELSE_2	IF_4	CALL_4
0x4003878	      0xb901000000	                              mov ecx, 1	       757	ui.c	FUNCTION_25	ELSE_2	IF_4	CALL_4
0x400387d	      0xbd01000000	                              mov ebp, 1	       740	ui.c	FUNCTION_25
0x4003882	      0xe9ebfeffff	                           jmp 0x4003772	       740	ui.c	FUNCTION_25
0x4003887	    0x660f1f840000	                    nop word [rax + rax]	       740	ui.c	FUNCTION_25
0x4003890	    0x8b0500000000	            mov eax, dword [0x04003896] 	       741	ui.c	FUNCTION_25
0x4003896	          0x83e040	                           and eax, 0x40	       741	ui.c	FUNCTION_25
0x4003899	          0x83f801	                              cmp eax, 1	       741	ui.c	FUNCTION_25
0x400389c	            0x19c9	                            sbb ecx, ecx	       741	ui.c	FUNCTION_25
0x400389e	          0x83c101	                              add ecx, 1	       741	ui.c	FUNCTION_25
0x40038a1	            0x89cd	                            mov ebp, ecx	       741	ui.c	FUNCTION_25
0x40038a3	      0xe9cafeffff	                           jmp 0x4003772	       741	ui.c	FUNCTION_25
0x40038a8	     0xf1f84000000	                   nop dword [rax + rax]	       741	ui.c	FUNCTION_25
0x40038b0	    0x8b3500000000	            mov esi, dword [0x040038b6] 	       747	ui.c	FUNCTION_25	IF_1	CALL_1
0x40038b6	    0x8b3d00000000	            mov edi, dword [0x040038bc] 	       747	ui.c	FUNCTION_25	IF_1	CALL_1
0x40038bc	            0x31d2	                            xor edx, edx	       747	ui.c	FUNCTION_25	IF_1	CALL_1
0x40038be	      0xe800000000	                          call 0x40038c3	       747	ui.c	FUNCTION_25	IF_1	CALL_1
0x40038c3	    0x8b1d00000000	            mov ebx, dword [0x040038c9] 	       748	ui.c	FUNCTION_25	IF_1	CALL_2
0x40038c9	            0x85db	                           test ebx, ebx	      2006	ui.c	FUNCTION_60	IF_1
0x40038cb	     0xf89cefeffff	                           jns 0x400379f	      2006	ui.c	FUNCTION_60	IF_1
0x40038d1	      0xe9ea000000	                           jmp 0x40039c0	      2006	ui.c	FUNCTION_60	IF_1
0x40038d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2006	ui.c	FUNCTION_60	IF_1
0x40038e0	          0x83c001	                              add eax, 1	       948	ui.c	FUNCTION_28	IF_10
0x40038e3	        0x6683f802	                               cmp ax, 2	       948	ui.c	FUNCTION_28	IF_10
0x40038e7	     0xf8743020000	                            ja 0x4003b30	       948	ui.c	FUNCTION_28	IF_10
0x40038ed	        0x6683f801	                               cmp ax, 1	       951	ui.c	FUNCTION_28	SWITCH_1
0x40038f1	    0x668905000000	               mov word [0x040038f8], ax	       948	ui.c	FUNCTION_28	IF_10
0x40038f8	     0xf8442020000	                            je 0x4003b40	       951	ui.c	FUNCTION_28	SWITCH_1
0x40038fe	        0x6683f802	                               cmp ax, 2	       951	ui.c	FUNCTION_28	SWITCH_1
0x4003902	     0xf8430010000	                            je 0x4003a38	       951	ui.c	FUNCTION_28	SWITCH_1
0x4003908	    0x4c3925000000	            cmp qword [0x0400390f], r12 	       955	ui.c	FUNCTION_28	SWITCH_1	IF_11
0x400390f	            0x745a	                            je 0x400396b	       955	ui.c	FUNCTION_28	SWITCH_1	IF_11
0x4003911	            0x31c9	                            xor ecx, ecx	      1451	ui.c	FUNCTION_37	IF_1
0x4003913	    0x3b1d00000000	            cmp ebx, dword [0x04003919] 	      1451	ui.c	FUNCTION_37	IF_1
0x4003919	            0x7d49	                           jge 0x4003964	      1451	ui.c	FUNCTION_37	IF_1
0x400391b	    0x488b35000000	            mov rsi, qword [0x04003922] 	      1451	ui.c	FUNCTION_37	IF_1
0x4003922	          0x4885f6	                           test rsi, rsi	      1451	ui.c	FUNCTION_37	IF_1
0x4003925	            0x743d	                            je 0x4003964	      1451	ui.c	FUNCTION_37	IF_1
0x4003927	    0x8b0d00000000	            mov ecx, dword [0x0400392d] 	      1453	ui.c	FUNCTION_37	FOR_1
0x400392d	            0x85c9	                           test ecx, ecx	      1453	ui.c	FUNCTION_37	FOR_1
0x400392f	            0x7e33	                           jle 0x4003964	      1453	ui.c	FUNCTION_37	FOR_1
0x4003931	    0x488b15000000	            mov rdx, qword [0x04003938] 	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x4003938	          0x4863c3	                         movsxd rax, ebx	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x400393b	          0x8b3c82	            mov edi, dword [rdx + rax*4]	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x400393e	          0x8d41ff	                      lea eax, [rcx - 1]	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x4003941	          0x8d1438	                    lea edx, [rax + rdi]	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x4003944	        0x803c1620	              cmp byte [rsi + rdx], 0x20	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x4003948	            0x7412	                            je 0x400395c	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x400394a	            0xeb18	                           jmp 0x4003964	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x400394c	         0xf1f4000	                         nop dword [rax]	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x4003950	          0x83e801	                              sub eax, 1	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x4003953	          0x8d1438	                    lea edx, [rax + rdi]	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x4003956	        0x803c1620	              cmp byte [rsi + rdx], 0x20	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x400395a	            0x7508	                           jne 0x4003964	      1454	ui.c	FUNCTION_37	FOR_1	IF_2
0x400395c	            0x85c0	                           test eax, eax	      1453	ui.c	FUNCTION_37	FOR_1
0x400395e	            0x89c1	                            mov ecx, eax	      1453	ui.c	FUNCTION_37	FOR_1
0x4003960	            0x75ee	                           jne 0x4003950	      1453	ui.c	FUNCTION_37	FOR_1
0x4003962	            0x31c9	                            xor ecx, ecx	      1453	ui.c	FUNCTION_37	FOR_1
0x4003964	    0x66890d000000	               mov word [0x0400396b], cx	       956	ui.c	FUNCTION_28	SWITCH_1	CALL_13
0x400396b	     0xfb73d000000	           movzx edi, word [0x04003972] 	       959	ui.c	FUNCTION_28	SWITCH_1	IF_12	CALL_14
0x4003972	     0xfb735000000	           movzx esi, word [0x04003979] 	       959	ui.c	FUNCTION_28	SWITCH_1	IF_12	CALL_14
0x4003979	            0x39fb	                            cmp ebx, edi	       773	ui.c	FUNCTION_26	IF_1
0x400397b	     0xf8f7f000000	                            jg 0x4003a00	       773	ui.c	FUNCTION_26	IF_1
0x4003981	            0x7c05	                            jl 0x4003988	       774	ui.c	FUNCTION_26	IF_2
0x4003983	          0x4139f5	                           cmp r13d, esi	       776	ui.c	FUNCTION_26	IF_4
0x4003986	            0x7d78	                           jge 0x4003a00	       776	ui.c	FUNCTION_26	IF_4
0x4003988	    0x8b0500000000	            mov eax, dword [0x0400398e] 	       978	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15
0x400398e	            0x85c0	                           test eax, eax	       978	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15
0x4003990	     0xf8529040000	                           jne 0x4003dbf	       978	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15
0x4003996	      0xb901000000	                              mov ecx, 1	       862	ui.c	FUNCTION_28
0x400399b	     0xfb705000000	           movzx eax, word [0x040039a2] 	       982	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16
0x40039a2	             0x1f1	                            add ecx, esi	       983	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16	CALL_19
0x40039a4	            0x89fa	                            mov edx, edi	       983	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16	CALL_19
0x40039a6	          0x4139c5	                           cmp r13d, eax	       982	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16
0x40039a9	     0xf8c01040000	                            jl 0x4003db0	       982	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16
0x40039af	            0x89c6	                            mov esi, eax	       983	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16	CALL_19
0x40039b1	            0x89df	                            mov edi, ebx	       983	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16	CALL_19
0x40039b3	      0xe818d3ffff	call sym.clip_update_modeless_selection.constprop.12	       983	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16	CALL_19
0x40039b8	      0xe9ba000000	                           jmp 0x4003a77	       983	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16	CALL_19
0x40039bd	           0xf1f00	                         nop dword [rax]	       983	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_16	CALL_19
0x40039c0	          0x4531e4	                          xor r12d, r12d	      2006	ui.c	FUNCTION_60	IF_1
0x40039c3	            0x31db	                            xor ebx, ebx	      2007	ui.c	FUNCTION_60	IF_1
0x40039c5	      0xe9e6fdffff	                           jmp 0x40037b0	      2007	ui.c	FUNCTION_60	IF_1
0x40039ca	    0x660f1f440000	                    nop word [rax + rax]	      2007	ui.c	FUNCTION_60	IF_1
0x40039d0	          0x8d58ff	                      lea ebx, [rax - 1]	      2009	ui.c	FUNCTION_60	IF_2
0x40039d3	      0xe9d5fdffff	                           jmp 0x40037ad	      2009	ui.c	FUNCTION_60	IF_2
0x40039d8	     0xf1f84000000	                   nop dword [rax + rax]	      2009	ui.c	FUNCTION_60	IF_2
0x40039e0	    0x8b3500000000	            mov esi, dword [0x040039e6] 	       751	ui.c	FUNCTION_25	ELSE_1	IF_3
0x40039e6	    0x8b3d00000000	            mov edi, dword [0x040039ec] 	       751	ui.c	FUNCTION_25	ELSE_1	IF_3
0x40039ec	        0x4883c408	                              add rsp, 8	       761	ui.c	FUNCTION_25
0x40039f0	              0x5b	                                 pop rbx	       761	ui.c	FUNCTION_25
0x40039f1	            0x89ea	                            mov edx, ebp	       751	ui.c	FUNCTION_25	ELSE_1	IF_3
0x40039f3	              0x5d	                                 pop rbp	       761	ui.c	FUNCTION_25
0x40039f4	            0x415c	                                 pop r12	       761	ui.c	FUNCTION_25
0x40039f6	            0x415d	                                 pop r13	       761	ui.c	FUNCTION_25
0x40039f8	      0xe9d3e8ffff	            jmp sym.clip_start_selection	       751	ui.c	FUNCTION_25	ELSE_1	IF_3
0x40039fd	           0xf1f00	                         nop dword [rax]	       751	ui.c	FUNCTION_25	ELSE_1	IF_3
0x4003a00	     0xfb705000000	           movzx eax, word [0x04003a07] 	       962	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13
0x4003a07	          0x4139c5	                           cmp r13d, eax	       962	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13
0x4003a0a	     0xf8db0010000	                           jge 0x4003bc0	       962	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13
0x4003a10	    0x8b0500000000	            mov eax, dword [0x04003a16] 	       968	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14	CALL_16
0x4003a16	      0xbd01000000	                              mov ebp, 1	       862	ui.c	FUNCTION_28
0x4003a1b	            0x85c0	                           test eax, eax	       968	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14	CALL_16
0x4003a1d	     0xf855d030000	                           jne 0x4003d80	       968	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14	CALL_16
0x4003a23	      0x418d4c2d00	                    lea ecx, [r13 + rbp]	       971	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	CALL_17
0x4003a28	            0x89da	                            mov edx, ebx	       971	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	CALL_17
0x4003a2a	      0xe8a1d2ffff	call sym.clip_update_modeless_selection.constprop.12	       971	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	CALL_17
0x4003a2f	            0xeb46	                           jmp 0x4003a77	       971	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	CALL_17
0x4003a31	     0xf1f80000000	                         nop dword [rax]	       971	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	CALL_17
0x4003a38	     0xfb73d000000	           movzx edi, word [0x04003a3f] 	      1014	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_25
0x4003a3f	            0x39fb	                            cmp ebx, edi	       773	ui.c	FUNCTION_26	IF_1
0x4003a41	            0x7f25	                            jg 0x4003a68	       773	ui.c	FUNCTION_26	IF_1
0x4003a43	     0xfb705000000	           movzx eax, word [0x04003a4a] 	      1015	ui.c	FUNCTION_28	SWITCH_1	IF_20
0x4003a4a	            0x7c05	                            jl 0x4003a51	       774	ui.c	FUNCTION_26	IF_2
0x4003a4c	          0x4139c5	                           cmp r13d, eax	       776	ui.c	FUNCTION_26	IF_4
0x4003a4f	            0x7d17	                           jge 0x4003a68	       776	ui.c	FUNCTION_26	IF_4
0x4003a51	    0x8b0d00000000	            mov ecx, dword [0x04003a57] 	      1019	ui.c	FUNCTION_28	SWITCH_1	ELSE_6	CALL_27
0x4003a57	            0x89fa	                            mov edx, edi	      1019	ui.c	FUNCTION_28	SWITCH_1	ELSE_6	CALL_27
0x4003a59	            0x31f6	                            xor esi, esi	      1019	ui.c	FUNCTION_28	SWITCH_1	ELSE_6	CALL_27
0x4003a5b	            0x89df	                            mov edi, ebx	      1019	ui.c	FUNCTION_28	SWITCH_1	ELSE_6	CALL_27
0x4003a5d	      0xe86ed2ffff	call sym.clip_update_modeless_selection.constprop.12	      1019	ui.c	FUNCTION_28	SWITCH_1	ELSE_6	CALL_27
0x4003a62	            0xeb13	                           jmp 0x4003a77	      1019	ui.c	FUNCTION_28	SWITCH_1	ELSE_6	CALL_27
0x4003a64	         0xf1f4000	                         nop dword [rax]	      1019	ui.c	FUNCTION_28	SWITCH_1	ELSE_6	CALL_27
0x4003a68	    0x8b0d00000000	            mov ecx, dword [0x04003a6e] 	      1016	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_26
0x4003a6e	            0x89da	                            mov edx, ebx	      1016	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_26
0x4003a70	            0x31f6	                            xor esi, esi	      1016	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_26
0x4003a72	      0xe859d2ffff	call sym.clip_update_modeless_selection.constprop.12	      1016	ui.c	FUNCTION_28	SWITCH_1	IF_20	CALL_26
0x4003a77	    0x4c8925000000	            mov qword [0x04003a7e], r12 	      1024	ui.c	FUNCTION_28
0x4003a7e	    0x44892d000000	           mov dword [0x04003a85], r13d 	      1025	ui.c	FUNCTION_28
0x4003a85	        0x4883c408	                              add rsp, 8	       761	ui.c	FUNCTION_25
0x4003a89	              0x5b	                                 pop rbx	       761	ui.c	FUNCTION_25
0x4003a8a	              0x5d	                                 pop rbp	       761	ui.c	FUNCTION_25
0x4003a8b	            0x415c	                                 pop r12	       761	ui.c	FUNCTION_25
0x4003a8d	            0x415d	                                 pop r13	       761	ui.c	FUNCTION_25
0x4003a8f	              0xc3	                                     ret	       761	ui.c	FUNCTION_25
0x4003a90	    0x488b05000000	            mov rax, qword [0x04003a97] 	       867	ui.c	FUNCTION_28	IF_1	IF_2
0x4003a97	    0x483905000000	            cmp qword [0x04003a9e], rax 	       867	ui.c	FUNCTION_28	IF_1	IF_2
0x4003a9e	     0xf8434010000	                            je 0x4003bd8	       867	ui.c	FUNCTION_28	IF_1	IF_2
0x4003aa4	    0x448b0d000000	            mov r9d, dword [0x04003aab] 	       691	ui.c	FUNCTION_23	CALL_1
0x4003aab	          0x4585c9	                           test r9d, r9d	       691	ui.c	FUNCTION_23	CALL_1
0x4003aae	     0xf855c010000	                           jne 0x4003c10	       691	ui.c	FUNCTION_23	CALL_1
0x4003ab4	    0x448b05000000	            mov r8d, dword [0x04003abb] 	       881	ui.c	FUNCTION_28	IF_1	IF_4	CALL_3
0x4003abb	          0x4585c0	                           test r8d, r8d	       881	ui.c	FUNCTION_28	IF_1	IF_4	CALL_3
0x4003abe	            0x750a	                           jne 0x4003aca	       881	ui.c	FUNCTION_28	IF_1	IF_4	CALL_3
0x4003ac0	    0x8b3500000000	            mov esi, dword [0x04003ac6] 	       882	ui.c	FUNCTION_28	IF_1	IF_4
0x4003ac6	            0x85f6	                           test esi, esi	       882	ui.c	FUNCTION_28	IF_1	IF_4
0x4003ac8	            0x741a	                            je 0x4003ae4	       882	ui.c	FUNCTION_28	IF_1	IF_4
0x4003aca	            0x31ff	                            xor edi, edi	       887	ui.c	FUNCTION_28	IF_1	CALL_5
0x4003acc	      0xe800000000	                          call 0x4003ad1	       887	ui.c	FUNCTION_28	IF_1	CALL_5
0x4003ad1	    0x8b0d00000000	            mov ecx, dword [0x04003ad7] 	       889	ui.c	FUNCTION_28	IF_1	IF_5
0x4003ad7	            0x85c9	                           test ecx, ecx	       889	ui.c	FUNCTION_28	IF_1	IF_5
0x4003ad9	            0x7409	                            je 0x4003ae4	       889	ui.c	FUNCTION_28	IF_1	IF_5
0x4003adb	            0x31f6	                            xor esi, esi	       890	ui.c	FUNCTION_28	IF_1	CALL_6
0x4003add	            0x31ff	                            xor edi, edi	       890	ui.c	FUNCTION_28	IF_1	CALL_6
0x4003adf	      0xe800000000	                          call 0x4003ae4	       890	ui.c	FUNCTION_28	IF_1	CALL_6
0x4003ae4	      0xba02000000	                              mov edx, 2	       893	ui.c	FUNCTION_28	IF_1
0x4003ae9	    0x668915000000	               mov word [0x04003af0], dx	       893	ui.c	FUNCTION_28	IF_1
0x4003af0	        0x4883c408	                              add rsp, 8	       761	ui.c	FUNCTION_25
0x4003af4	              0x5b	                                 pop rbx	       761	ui.c	FUNCTION_25
0x4003af5	              0x5d	                                 pop rbp	       761	ui.c	FUNCTION_25
0x4003af6	            0x415c	                                 pop r12	       761	ui.c	FUNCTION_25
0x4003af8	            0x415d	                                 pop r13	       761	ui.c	FUNCTION_25
0x4003afa	              0xc3	                                     ret	       761	ui.c	FUNCTION_25
0x4003afb	       0xf1f440000	                   nop dword [rax + rax]	       761	ui.c	FUNCTION_25
0x4003b00	    0x4c3925000000	            cmp qword [0x04003b07], r12 	       903	ui.c	FUNCTION_28	IF_6
0x4003b07	     0xf85d5fcffff	                           jne 0x40037e2	       903	ui.c	FUNCTION_28	IF_6
0x4003b0d	        0x40f6c501	                             test bpl, 1	       903	ui.c	FUNCTION_28	IF_6
0x4003b11	     0xf841bfdffff	                            je 0x4003832	       903	ui.c	FUNCTION_28	IF_6
0x4003b17	      0xe9c6fcffff	                           jmp 0x40037e2	       903	ui.c	FUNCTION_28	IF_6
0x4003b1c	         0xf1f4000	                         nop dword [rax]	       903	ui.c	FUNCTION_28	IF_6
0x4003b20	            0x31ff	                            xor edi, edi	      1994	ui.c	FUNCTION_59	IF_1
0x4003b22	      0xe9a5fcffff	                           jmp 0x40037cc	      1994	ui.c	FUNCTION_59	IF_1
0x4003b27	    0x660f1f840000	                    nop word [rax + rax]	      1994	ui.c	FUNCTION_59	IF_1
0x4003b30	            0x31c0	                            xor eax, eax	       949	ui.c	FUNCTION_28	IF_10
0x4003b32	    0x668905000000	               mov word [0x04003b39], ax	       949	ui.c	FUNCTION_28	IF_10
0x4003b39	      0xe9cafdffff	                           jmp 0x4003908	       949	ui.c	FUNCTION_28	IF_10
0x4003b3e	            0x6690	                                     nop	       949	ui.c	FUNCTION_28	IF_10
0x4003b40	    0x4c3925000000	            cmp qword [0x04003b47], r12 	       993	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x4003b47	     0xf8493010000	                            je 0x4003ce0	       993	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x4003b4d	    0x3b1d00000000	            cmp ebx, dword [0x04003b53] 	      1397	ui.c	FUNCTION_36	IF_1
0x4003b53	            0x7d1b	                           jge 0x4003b70	      1397	ui.c	FUNCTION_36	IF_1
0x4003b55	    0x443b2d000000	           cmp r13d, dword [0x04003b5c] 	      1397	ui.c	FUNCTION_36	IF_1
0x4003b5c	            0x7d12	                           jge 0x4003b70	      1397	ui.c	FUNCTION_36	IF_1
0x4003b5e	          0x4489ee	                           mov esi, r13d	      1397	ui.c	FUNCTION_36	IF_1
0x4003b61	            0x89df	                            mov edi, ebx	      1397	ui.c	FUNCTION_36	IF_1
0x4003b63	      0xe868cdffff	call sym.clip_get_word_boundaries.isra.1.part.2.constprop.15	      1397	ui.c	FUNCTION_36	IF_1
0x4003b68	     0xf1f84000000	                   nop dword [rax + rax]	      1397	ui.c	FUNCTION_36	IF_1
0x4003b70	     0xfb73d000000	           movzx edi, word [0x04003b77] 	      1001	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_22
0x4003b77	     0xfb735000000	           movzx esi, word [0x04003b7e] 	      1001	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_22
0x4003b7e	            0x39fb	                            cmp ebx, edi	       773	ui.c	FUNCTION_26	IF_1
0x4003b80	            0x7f26	                            jg 0x4003ba8	       773	ui.c	FUNCTION_26	IF_1
0x4003b82	            0x7c05	                            jl 0x4003b89	       774	ui.c	FUNCTION_26	IF_2
0x4003b84	          0x4139f5	                           cmp r13d, esi	       776	ui.c	FUNCTION_26	IF_4
0x4003b87	            0x7d1f	                           jge 0x4003ba8	       776	ui.c	FUNCTION_26	IF_4
0x4003b89	     0xfb70d000000	           movzx ecx, word [0x04003b90] 	      1006	ui.c	FUNCTION_28	SWITCH_1	ELSE_5	CALL_24
0x4003b90	     0xfb735000000	           movzx esi, word [0x04003b97] 	      1006	ui.c	FUNCTION_28	SWITCH_1	ELSE_5	CALL_24
0x4003b97	            0x89fa	                            mov edx, edi	      1006	ui.c	FUNCTION_28	SWITCH_1	ELSE_5	CALL_24
0x4003b99	            0x89df	                            mov edi, ebx	      1006	ui.c	FUNCTION_28	SWITCH_1	ELSE_5	CALL_24
0x4003b9b	      0xe830d1ffff	call sym.clip_update_modeless_selection.constprop.12	      1006	ui.c	FUNCTION_28	SWITCH_1	ELSE_5	CALL_24
0x4003ba0	      0xe9d2feffff	                           jmp 0x4003a77	      1006	ui.c	FUNCTION_28	SWITCH_1	ELSE_5	CALL_24
0x4003ba5	           0xf1f00	                         nop dword [rax]	      1006	ui.c	FUNCTION_28	SWITCH_1	ELSE_5	CALL_24
0x4003ba8	     0xfb70d000000	           movzx ecx, word [0x04003baf] 	      1003	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_23
0x4003baf	            0x89da	                            mov edx, ebx	      1003	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_23
0x4003bb1	      0xe81ad1ffff	call sym.clip_update_modeless_selection.constprop.12	      1003	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_23
0x4003bb6	      0xe9bcfeffff	                           jmp 0x4003a77	      1003	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_23
0x4003bbb	       0xf1f440000	                   nop dword [rax + rax]	      1003	ui.c	FUNCTION_28	SWITCH_1	IF_18	CALL_23
0x4003bc0	    0x8b0d00000000	            mov ecx, dword [0x04003bc6] 	       963	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13	CALL_15
0x4003bc6	            0x89da	                            mov edx, ebx	       963	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13	CALL_15
0x4003bc8	      0xe803d1ffff	call sym.clip_update_modeless_selection.constprop.12	       963	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13	CALL_15
0x4003bcd	      0xe9a5feffff	                           jmp 0x4003a77	       963	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13	CALL_15
0x4003bd2	    0x660f1f440000	                    nop word [rax + rax]	       963	ui.c	FUNCTION_28	SWITCH_1	IF_12	IF_13	CALL_15
0x4003bd8	    0x8b0500000000	            mov eax, dword [0x04003bde] 	       867	ui.c	FUNCTION_28	IF_1	IF_2
0x4003bde	    0x390500000000	            cmp dword [0x04003be4], eax 	       867	ui.c	FUNCTION_28	IF_1	IF_2
0x4003be4	     0xf85bafeffff	                           jne 0x4003aa4	       867	ui.c	FUNCTION_28	IF_1	IF_2
0x4003bea	    0x448b1d000000	           mov r11d, dword [0x04003bf1] 	       870	ui.c	FUNCTION_28	IF_1	IF_2	IF_3
0x4003bf1	          0x4585db	                         test r11d, r11d	       870	ui.c	FUNCTION_28	IF_1	IF_2	IF_3
0x4003bf4	            0x7409	                            je 0x4003bff	       870	ui.c	FUNCTION_28	IF_1	IF_2	IF_3
0x4003bf6	            0x31f6	                            xor esi, esi	       871	ui.c	FUNCTION_28	IF_1	IF_2	CALL_1
0x4003bf8	            0x31ff	                            xor edi, edi	       871	ui.c	FUNCTION_28	IF_1	IF_2	CALL_1
0x4003bfa	      0xe800000000	                          call 0x4003bff	       871	ui.c	FUNCTION_28	IF_1	IF_2	CALL_1
0x4003bff	          0x4531d2	                          xor r10d, r10d	       873	ui.c	FUNCTION_28	IF_1	IF_2
0x4003c02	    0x664489150000	            mov word [0x04003c0a], r10w 	       873	ui.c	FUNCTION_28	IF_1	IF_2
0x4003c0a	      0xe923fcffff	                           jmp 0x4003832	       873	ui.c	FUNCTION_28	IF_1	IF_2
0x4003c0f	              0x90	                                     nop	       873	ui.c	FUNCTION_28	IF_1	IF_2
0x4003c10	    0x488b3d000000	            mov rdi, qword [0x04003c17] 	       691	ui.c	FUNCTION_23	CALL_1
0x4003c17	      0xbe61000000	                           mov esi, 0x61	       691	ui.c	FUNCTION_23	CALL_1
0x4003c1c	      0xe800000000	                          call 0x4003c21	       691	ui.c	FUNCTION_23	CALL_1
0x4003c21	          0x4885c0	                           test rax, rax	       881	ui.c	FUNCTION_28	IF_1	IF_4	CALL_3
0x4003c24	     0xf85a0feffff	                           jne 0x4003aca	       881	ui.c	FUNCTION_28	IF_1	IF_4	CALL_3
0x4003c2a	    0x8b3d00000000	            mov edi, dword [0x04003c30] 	       881	ui.c	FUNCTION_28	IF_1	IF_4	CALL_3
0x4003c30	            0x85ff	                           test edi, edi	       881	ui.c	FUNCTION_28	IF_1	IF_4	CALL_3
0x4003c32	     0xf8488feffff	                            je 0x4003ac0	       881	ui.c	FUNCTION_28	IF_1	IF_4	CALL_3
0x4003c38	    0x488b3d000000	            mov rdi, qword [0x04003c3f] 	       884	ui.c	FUNCTION_28	IF_1	IF_4	CALL_4
0x4003c3f	      0xbe41000000	                           mov esi, 0x41	       884	ui.c	FUNCTION_28	IF_1	IF_4	CALL_4
0x4003c44	      0xe800000000	                          call 0x4003c49	       884	ui.c	FUNCTION_28	IF_1	IF_4	CALL_4
0x4003c49	          0x4885c0	                           test rax, rax	       882	ui.c	FUNCTION_28	IF_1	IF_4
0x4003c4c	     0xf8578feffff	                           jne 0x4003aca	       882	ui.c	FUNCTION_28	IF_1	IF_4
0x4003c52	      0xe97afeffff	                           jmp 0x4003ad1	       882	ui.c	FUNCTION_28	IF_1	IF_4
0x4003c57	    0x660f1f840000	                    nop word [rax + rax]	       882	ui.c	FUNCTION_28	IF_1	IF_4
0x4003c60	    0x488b0d000000	            mov rcx, qword [0x04003c67] 	       917	ui.c	FUNCTION_28	IF_7	IF_8	CALL_10
0x4003c67	    0x8b3d00000000	            mov edi, dword [0x04003c6d] 	       917	ui.c	FUNCTION_28	IF_7	IF_8	CALL_10
0x4003c6d	            0x39cb	                            cmp ebx, ecx	       773	ui.c	FUNCTION_26	IF_1
0x4003c6f	     0xf8f9b000000	                            jg 0x4003d10	       773	ui.c	FUNCTION_26	IF_1
0x4003c75	            0x7c09	                            jl 0x4003c80	       774	ui.c	FUNCTION_26	IF_2
0x4003c77	          0x4139fd	                           cmp r13d, edi	       776	ui.c	FUNCTION_26	IF_4
0x4003c7a	     0xf8d90000000	                           jge 0x4003d10	       776	ui.c	FUNCTION_26	IF_4
0x4003c80	    0x448b05000000	            mov r8d, dword [0x04003c87] 	       776	ui.c	FUNCTION_26	IF_4
0x4003c87	    0x488b35000000	            mov rsi, qword [0x04003c8e] 	       776	ui.c	FUNCTION_26	IF_4
0x4003c8e	        0x418d40ff	                       lea eax, [r8 - 1]	       928	ui.c	FUNCTION_28	IF_7	IF_8
0x4003c92	    0x668935000000	               mov word [0x04003c99], si	       927	ui.c	FUNCTION_28	IF_7	IF_8
0x4003c99	    0x664489050000	              mov word [0x04003ca1], r8w	       929	ui.c	FUNCTION_28	IF_7	IF_8
0x4003ca1	    0x668905000000	               mov word [0x04003ca8], ax	       928	ui.c	FUNCTION_28	IF_7	IF_8
0x4003ca8	     0xfb705000000	           movzx eax, word [0x04003caf] 	       937	ui.c	FUNCTION_28	IF_7	IF_9
0x4003caf	        0x6683f801	                               cmp ax, 1	       937	ui.c	FUNCTION_28	IF_7	IF_9
0x4003cb3	     0xf853efbffff	                           jne 0x40037f7	       937	ui.c	FUNCTION_28	IF_7	IF_9
0x4003cb9	        0x40f6c501	                             test bpl, 1	       937	ui.c	FUNCTION_28	IF_7	IF_9
0x4003cbd	     0xf8534fbffff	                           jne 0x40037f7	       937	ui.c	FUNCTION_28	IF_7	IF_9
0x4003cc3	            0x31c9	                            xor ecx, ecx	       938	ui.c	FUNCTION_28	IF_7	IF_9
0x4003cc5	      0xbe01000000	                              mov esi, 1	       942	ui.c	FUNCTION_28
0x4003cca	    0x66890d000000	               mov word [0x04003cd1], cx	       938	ui.c	FUNCTION_28	IF_7	IF_9
0x4003cd1	    0x668935000000	               mov word [0x04003cd8], si	       942	ui.c	FUNCTION_28
0x4003cd8	      0xe92bfcffff	                           jmp 0x4003908	       942	ui.c	FUNCTION_28
0x4003cdd	           0xf1f00	                         nop dword [rax]	       942	ui.c	FUNCTION_28
0x4003ce0	     0xfb705000000	           movzx eax, word [0x04003ce7] 	       993	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x4003ce7	          0x4139c5	                           cmp r13d, eax	       993	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x4003cea	     0xf8c5dfeffff	                            jl 0x4003b4d	       993	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x4003cf0	     0xfb705000000	           movzx eax, word [0x04003cf7] 	       994	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x4003cf7	          0x4139c5	                           cmp r13d, eax	       994	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x4003cfa	     0xf8d4dfeffff	                           jge 0x4003b4d	       994	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x4003d00	          0x83e501	                              and ebp, 1	       994	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x4003d03	     0xf8429fbffff	                            je 0x4003832	       994	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x4003d09	      0xe93ffeffff	                           jmp 0x4003b4d	       994	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x4003d0e	            0x6690	                                     nop	       994	ui.c	FUNCTION_28	SWITCH_1	IF_17
0x4003d10	    0x488b35000000	            mov rsi, qword [0x04003d17] 	       919	ui.c	FUNCTION_28	IF_7	IF_8
0x4003d17	    0x448b05000000	            mov r8d, dword [0x04003d1e] 	       918	ui.c	FUNCTION_28	IF_7	IF_8	CALL_11
0x4003d1e	            0x39f3	                            cmp ebx, esi	       773	ui.c	FUNCTION_26	IF_1
0x4003d20	            0x7f3e	                            jg 0x4003d60	       773	ui.c	FUNCTION_26	IF_1
0x4003d22	            0x7c05	                            jl 0x4003d29	       774	ui.c	FUNCTION_26	IF_2
0x4003d24	          0x4539c5	                           cmp r13d, r8d	       776	ui.c	FUNCTION_26	IF_4
0x4003d27	            0x7d37	                           jge 0x4003d60	       776	ui.c	FUNCTION_26	IF_4
0x4003d29	          0x4839f1	                            cmp rcx, rsi	       920	ui.c	FUNCTION_28	IF_7	IF_8
0x4003d2c	     0xf84b2000000	                            je 0x4003de4	       920	ui.c	FUNCTION_28	IF_7	IF_8
0x4003d32	          0x8d040e	                    lea eax, [rsi + rcx]	       922	ui.c	FUNCTION_28	IF_7	IF_8
0x4003d35	            0x29d8	                            sub eax, ebx	       922	ui.c	FUNCTION_28	IF_7	IF_8
0x4003d37	            0x29d8	                            sub eax, ebx	       922	ui.c	FUNCTION_28	IF_7	IF_8
0x4003d39	          0x83f800	                              cmp eax, 0	       922	ui.c	FUNCTION_28	IF_7	IF_8
0x4003d3c	     0xf8f4cffffff	                            jg 0x4003c8e	       922	ui.c	FUNCTION_28	IF_7	IF_8
0x4003d42	            0x751c	                           jne 0x4003d60	       924	ui.c	FUNCTION_28	IF_7	IF_8
0x4003d44	        0x428d0407	                     lea eax, [rdi + r8]	       924	ui.c	FUNCTION_28	IF_7	IF_8
0x4003d48	    0x41b902000000	                              mov r9d, 2	       924	ui.c	FUNCTION_28	IF_7	IF_8
0x4003d4e	              0x99	                                     cdq	       924	ui.c	FUNCTION_28	IF_7	IF_8
0x4003d4f	          0x41f7f9	                                idiv r9d	       924	ui.c	FUNCTION_28	IF_7	IF_8
0x4003d52	          0x4139c5	                           cmp r13d, eax	       924	ui.c	FUNCTION_28	IF_7	IF_8
0x4003d55	     0xf8c33ffffff	                            jl 0x4003c8e	       924	ui.c	FUNCTION_28	IF_7	IF_8
0x4003d5b	       0xf1f440000	                   nop dword [rax + rax]	       924	ui.c	FUNCTION_28	IF_7	IF_8
0x4003d60	    0x66890d000000	               mov word [0x04003d67], cx	       933	ui.c	FUNCTION_28	IF_7	ELSE_1
0x4003d67	    0x66893d000000	               mov word [0x04003d6e], di	       934	ui.c	FUNCTION_28	IF_7	ELSE_1
0x4003d6e	    0x66893d000000	               mov word [0x04003d75], di	       935	ui.c	FUNCTION_28	IF_7	ELSE_1
0x4003d75	      0xe92effffff	                           jmp 0x4003ca8	       935	ui.c	FUNCTION_28	IF_7	ELSE_1
0x4003d7a	    0x660f1f440000	                    nop word [rax + rax]	       935	ui.c	FUNCTION_28	IF_7	ELSE_1
0x4003d80	          0x4489ee	                           mov esi, r13d	       968	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14	CALL_16
0x4003d83	            0x89df	                            mov edi, ebx	       968	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14	CALL_16
0x4003d85	      0xe800000000	                          call 0x4003d8a	       968	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14	CALL_16
0x4003d8a	            0x85c0	                           test eax, eax	       968	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14	CALL_16
0x4003d8c	     0xfb735000000	           movzx esi, word [0x04003d93] 	       968	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14	CALL_16
0x4003d93	     0xfb73d000000	           movzx edi, word [0x04003d9a] 	       968	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14	CALL_16
0x4003d9a	     0xf8483fcffff	                            je 0x4003a23	       968	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14	CALL_16
0x4003da0	      0xbd02000000	                              mov ebp, 2	       969	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14
0x4003da5	      0xe979fcffff	                           jmp 0x4003a23	       969	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14
0x4003daa	    0x660f1f440000	                    nop word [rax + rax]	       969	ui.c	FUNCTION_28	SWITCH_1	IF_12	ELSE_2	IF_14
0x4003db0	          0x4489ee	                           mov esi, r13d	       986	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	ELSE_4	CALL_20
0x4003db3	            0x89df	                            mov edi, ebx	       986	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	ELSE_4	CALL_20
0x4003db5	      0xe816cfffff	call sym.clip_update_modeless_selection.constprop.12	       986	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	ELSE_4	CALL_20
0x4003dba	      0xe9b8fcffff	                           jmp 0x4003a77	       986	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	ELSE_4	CALL_20
0x4003dbf	      0xe800000000	                          call 0x4003dc4	       979	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15	CALL_18
0x4003dc4	            0x85c0	                           test eax, eax	       979	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15	CALL_18
0x4003dc6	     0xfb735000000	           movzx esi, word [0x04003dcd] 	       979	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15	CALL_18
0x4003dcd	     0xfb73d000000	           movzx edi, word [0x04003dd4] 	       979	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15	CALL_18
0x4003dd4	     0xf84bcfbffff	                            je 0x4003996	       979	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15	CALL_18
0x4003dda	      0xb902000000	                              mov ecx, 2	       980	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15
0x4003ddf	      0xe9b7fbffff	                           jmp 0x400399b	       980	ui.c	FUNCTION_28	SWITCH_1	ELSE_3	IF_15
0x4003de4	          0x4489c2	                            mov edx, r8d	       921	ui.c	FUNCTION_28	IF_7	IF_8
0x4003de7	          0x4489e8	                           mov eax, r13d	       921	ui.c	FUNCTION_28	IF_7	IF_8
0x4003dea	          0x4429ea	                           sub edx, r13d	       921	ui.c	FUNCTION_28	IF_7	IF_8
0x4003ded	            0x29f8	                            sub eax, edi	       921	ui.c	FUNCTION_28	IF_7	IF_8
0x4003def	            0x39c2	                            cmp edx, eax	       921	ui.c	FUNCTION_28	IF_7	IF_8
0x4003df1	     0xf8f97feffff	                            jg 0x4003c8e	       921	ui.c	FUNCTION_28	IF_7	IF_8
0x4003df7	      0xe936ffffff	                           jmp 0x4003d32	       921	ui.c	FUNCTION_28	IF_7	IF_8
yank_cut_buffer0	IF,6:DO,0:functions,0:FOR,0:CALL,12:SWITCH,0:WHILE,0:ELSE,0	78
0x4004f20	            0x4154	                                push r12	      2563	ui.c	FUNCTION_74
0x4004f22	              0x55	                                push rbp	      2563	ui.c	FUNCTION_74
0x4004f23	          0x4889f5	                            mov rbp, rsi	      2563	ui.c	FUNCTION_74
0x4004f26	              0x53	                                push rbx	      2563	ui.c	FUNCTION_74
0x4004f27	            0x31d2	                            xor edx, edx	      2565	ui.c	FUNCTION_74	CALL_1
0x4004f29	        0x4883ec30	                           sub rsp, 0x30	      2563	ui.c	FUNCTION_74
0x4004f2d	      0x488d74240c	                    lea rsi, [rsp + 0xc]	      2565	ui.c	FUNCTION_74	CALL_1
0x4004f32	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      2564	ui.c	FUNCTION_74
0x4004f3a	    0x64488b042528	                mov rax, qword fs:[0x28]	      2563	ui.c	FUNCTION_74
0x4004f43	      0x4889442428	             mov qword [rsp + 0x28], rax	      2563	ui.c	FUNCTION_74
0x4004f48	            0x31c0	                            xor eax, eax	      2563	ui.c	FUNCTION_74
0x4004f4a	      0xe800000000	                          call 0x4004f4f	      2565	ui.c	FUNCTION_74	CALL_1
0x4004f4f	      0x486354240c	          movsxd rdx, dword [rsp + 0xc] 	      2567	ui.c	FUNCTION_74	IF_1
0x4004f54	            0x85d2	                           test edx, edx	      2567	ui.c	FUNCTION_74	IF_1
0x4004f56	            0x7e4f	                           jle 0x4004fa7	      2567	ui.c	FUNCTION_74	IF_1
0x4004f58	          0x4889c3	                            mov rbx, rax	      2567	ui.c	FUNCTION_74	IF_1
0x4004f5b	    0x8b0500000000	            mov eax, dword [0x04004f61] 	      2576	ui.c	FUNCTION_74	IF_1	IF_2
0x4004f61	            0x85c0	                           test eax, eax	      2576	ui.c	FUNCTION_74	IF_1	IF_2
0x4004f63	            0x7563	                           jne 0x4004fc8	      2576	ui.c	FUNCTION_74	IF_1	IF_2
0x4004f65	          0x4889e9	                            mov rcx, rbp	      2596	ui.c	FUNCTION_74	IF_1	CALL_7
0x4004f68	          0x4889de	                            mov rsi, rbx	      2596	ui.c	FUNCTION_74	IF_1	CALL_7
0x4004f6b	            0x31ff	                            xor edi, edi	      2596	ui.c	FUNCTION_74	IF_1	CALL_7
0x4004f6d	      0xe800000000	                          call 0x4004f72	      2596	ui.c	FUNCTION_74	IF_1	CALL_7
0x4004f72	          0x4889df	                            mov rdi, rbx	      2597	ui.c	FUNCTION_74	IF_1	CALL_8
0x4004f75	      0xe800000000	                          call 0x4004f7a	      2597	ui.c	FUNCTION_74	IF_1	CALL_8
0x4004f7a	    0x48833d000000	               cmp qword [0x04004f82], 0	      2598	ui.c	FUNCTION_74	IF_1	IF_6
0x4004f82	            0x7e23	                           jle 0x4004fa7	      2598	ui.c	FUNCTION_74	IF_1	IF_6
0x4004f84	      0xe800000000	                          call 0x4004f89	      2600	ui.c	FUNCTION_74	IF_1	IF_6	CALL_9
0x4004f89	      0xba05000000	                              mov edx, 5	      2601	ui.c	FUNCTION_74	IF_1	IF_6	CALL_11
0x4004f8e	      0xbe00000000	                              mov esi, 0	      2601	ui.c	FUNCTION_74	IF_1	IF_6	CALL_11
0x4004f93	            0x31ff	                            xor edi, edi	      2601	ui.c	FUNCTION_74	IF_1	IF_6	CALL_11
0x4004f95	      0xe800000000	                          call 0x4004f9a	      2601	ui.c	FUNCTION_74	IF_1	IF_6	CALL_11
0x4004f9a	          0x4889c7	                            mov rdi, rax	      2601	ui.c	FUNCTION_74	IF_1	IF_6	CALL_11
0x4004f9d	      0xe800000000	                          call 0x4004fa2	      2601	ui.c	FUNCTION_74	IF_1	IF_6	CALL_11
0x4004fa2	      0xe800000000	                          call 0x4004fa7	      2602	ui.c	FUNCTION_74	IF_1	IF_6	CALL_12
0x4004fa7	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      2605	ui.c	FUNCTION_74
0x4004fac	    0x644833042528	                xor rax, qword fs:[0x28]	      2605	ui.c	FUNCTION_74
0x4004fb5	     0xf8598000000	                           jne 0x4005053	      2605	ui.c	FUNCTION_74
0x4004fbb	        0x4883c430	                           add rsp, 0x30	      2605	ui.c	FUNCTION_74
0x4004fbf	              0x5b	                                 pop rbx	      2605	ui.c	FUNCTION_74
0x4004fc0	              0x5d	                                 pop rbp	      2605	ui.c	FUNCTION_74
0x4004fc1	            0x415c	                                 pop r12	      2605	ui.c	FUNCTION_74
0x4004fc3	              0xc3	                                     ret	      2605	ui.c	FUNCTION_74
0x4004fc4	         0xf1f4000	                         nop dword [rax]	      2605	ui.c	FUNCTION_74
0x4004fc8	    0x488b15000000	            mov rdx, qword [0x04004fcf] 	      2582	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_2
0x4004fcf	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2582	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_2
0x4004fd4	      0xbe00000000	                              mov esi, 0	      2582	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_2
0x4004fd9	    0xc74424100000	               mov dword [rsp + 0x10], 0	      2581	ui.c	FUNCTION_74	IF_1	IF_2
0x4004fe1	      0xe800000000	                          call 0x4004fe6	      2582	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_2
0x4004fe6	          0x83f801	                              cmp eax, 1	      2582	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_2
0x4004fe9	      0x486354240c	          movsxd rdx, dword [rsp + 0xc] 	      2582	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_2
0x4004fee	     0xf8571ffffff	                           jne 0x4004f65	      2582	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_2
0x4004ff4	      0x488d54240c	                    lea rdx, [rsp + 0xc]	      2584	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_3
0x4004ff9	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2584	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_3
0x4004ffe	          0x4889de	                            mov rsi, rbx	      2584	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_3
0x4005001	      0xe800000000	                          call 0x4005006	      2584	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_3
0x4005006	          0x4885c0	                           test rax, rax	      2585	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4
0x4005009	          0x4989c4	                            mov r12, rax	      2584	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_3
0x400500c	            0x742d	                            je 0x400503b	      2585	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4
0x400500e	      0x486354240c	          movsxd rdx, dword [rsp + 0xc] 	      2587	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4	CALL_4
0x4005013	          0x4889e9	                            mov rcx, rbp	      2587	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4	CALL_4
0x4005016	          0x4889c6	                            mov rsi, rax	      2587	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4	CALL_4
0x4005019	            0x31ff	                            xor edi, edi	      2587	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4	CALL_4
0x400501b	      0xe800000000	                          call 0x4005020	      2587	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4	CALL_4
0x4005020	          0x4c89e7	                            mov rdi, r12	      2588	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4	CALL_5
0x4005023	      0xe800000000	                          call 0x4005028	      2588	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	IF_4	CALL_5
0x4005028	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2591	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_6
0x400502d	            0x31d2	                            xor edx, edx	      2591	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_6
0x400502f	            0x31f6	                            xor esi, esi	      2591	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_6
0x4005031	      0xe800000000	                          call 0x4005036	      2591	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_6
0x4005036	      0xe937ffffff	                           jmp 0x4004f72	      2591	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_6
0x400503b	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      2591	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_6
0x4005040	            0x31d2	                            xor edx, edx	      2591	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_6
0x4005042	            0x31f6	                            xor esi, esi	      2591	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_6
0x4005044	      0xe800000000	                          call 0x4005049	      2591	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_6
0x4005049	      0x486354240c	          movsxd rdx, dword [rsp + 0xc] 	      2591	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_6
0x400504e	      0xe912ffffff	                           jmp 0x4004f65	      2591	ui.c	FUNCTION_74	IF_1	IF_2	IF_3	CALL_6
0x4005053	      0xe800000000	                          call 0x4005058	      2605	ui.c	FUNCTION_74
ui_focus_change	IF,8:DO,0:functions,0:FOR,0:CALL,12:SWITCH,0:WHILE,0:ELSE,2	90
0x4006310	              0x55	                                push rbp	      3287	ui.c	FUNCTION_80
0x4006311	              0x53	                                push rbx	      3287	ui.c	FUNCTION_80
0x4006312	        0x4883ec08	                              sub rsp, 8	      3287	ui.c	FUNCTION_80
0x4006316	            0x85ff	                           test edi, edi	      3294	ui.c	FUNCTION_80	IF_1	CALL_1
0x4006318	     0xf85da000000	                           jne 0x40063f8	      3294	ui.c	FUNCTION_80	IF_1	CALL_1
0x400631e	    0x4c8b05000000	              mov r8, qword [0x04006325]	      3309	ui.c	FUNCTION_80	CALL_4
0x4006325	            0x31db	                            xor ebx, ebx	      3289	ui.c	FUNCTION_80
0x4006327	      0xbf35000000	                           mov edi, 0x35	      3309	ui.c	FUNCTION_80	CALL_4
0x400632c	            0x31c9	                            xor ecx, ecx	      3309	ui.c	FUNCTION_80	CALL_4
0x400632e	            0x31d2	                            xor edx, edx	      3309	ui.c	FUNCTION_80	CALL_4
0x4006330	            0x31f6	                            xor esi, esi	      3309	ui.c	FUNCTION_80	CALL_4
0x4006332	      0xe800000000	                          call 0x4006337	      3309	ui.c	FUNCTION_80	CALL_4
0x4006337	             0x9d8	                             or eax, ebx	      3312	ui.c	FUNCTION_80	IF_2
0x4006339	     0xf8491000000	                            je 0x40063d0	      3312	ui.c	FUNCTION_80	IF_2
0x400633f	    0x8b0500000000	            mov eax, dword [0x04006345] 	      3318	ui.c	FUNCTION_80	IF_2	IF_3
0x4006345	    0xc70500000000	               mov dword [0x0400634f], 0	      3316	ui.c	FUNCTION_80	IF_2
0x400634f	            0xa808	                              test al, 8	      3318	ui.c	FUNCTION_80	IF_2	IF_3
0x4006351	     0xf85d1000000	                           jne 0x4006428	      3318	ui.c	FUNCTION_80	IF_2	IF_3
0x4006357	            0x89c2	                            mov edx, eax	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4006359	          0x80e6fd	                            and dh, 0xfd	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400635c	    0x81fa00040000	                          cmp edx, 0x400	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4006362	           0xf94c1	                                 sete cl	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4006365	      0x3d01020000	                          cmp eax, 0x201	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400636a	           0xf94c2	                                 sete dl	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400636d	             0x9ca	                             or edx, ecx	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400636f	      0x3d00030000	                          cmp eax, 0x300	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4006374	           0xf94c1	                                 sete cl	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4006377	             0x8ca	                               or dl, cl	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4006379	            0x752d	                           jne 0x40063a8	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400637b	      0x3d00080000	                          cmp eax, 0x800	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4006380	            0x7426	                            je 0x40063a8	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4006382	    0x8b3500000000	            mov esi, dword [0x04006388] 	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x4006388	            0x85f6	                           test esi, esi	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400638a	            0x751c	                           jne 0x40063a8	      3321	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400638c	            0xa811	                           test al, 0x11	      3323	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5
0x400638e	            0x741d	                            je 0x40063ad	      3323	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5
0x4006390	    0x8b0d00000000	            mov ecx, dword [0x04006396] 	      3325	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5	IF_6
0x4006396	            0x85c9	                           test ecx, ecx	      3325	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5	IF_6
0x4006398	     0xf85b7000000	                           jne 0x4006455	      3325	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5	IF_6
0x400639e	      0xe800000000	                          call 0x40063a3	      3327	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5	CALL_8
0x40063a3	            0xeb08	                           jmp 0x40063ad	      3327	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5	CALL_8
0x40063a5	           0xf1f00	                         nop dword [rax]	      3327	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5	CALL_8
0x40063a8	      0xe800000000	                          call 0x40063ad	      3322	ui.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x40063ad	      0xe800000000	                          call 0x40063b2	      3329	ui.c	FUNCTION_80	IF_2	CALL_9
0x40063b2	            0x31ff	                            xor edi, edi	      3330	ui.c	FUNCTION_80	IF_2	CALL_10
0x40063b4	      0xbe01000000	                              mov esi, 1	      3330	ui.c	FUNCTION_80	IF_2	CALL_10
0x40063b9	      0xe800000000	                          call 0x40063be	      3330	ui.c	FUNCTION_80	IF_2	CALL_10
0x40063be	    0x8b1500000000	            mov edx, dword [0x040063c4] 	      3332	ui.c	FUNCTION_80	IF_2	IF_7
0x40063c4	            0x85d2	                           test edx, edx	      3332	ui.c	FUNCTION_80	IF_2	IF_7
0x40063c6	            0x7408	                            je 0x40063d0	      3332	ui.c	FUNCTION_80	IF_2	IF_7
0x40063c8	            0x31ff	                            xor edi, edi	      3333	ui.c	FUNCTION_80	IF_2	CALL_11
0x40063ca	      0xe800000000	                          call 0x40063cf	      3333	ui.c	FUNCTION_80	IF_2	CALL_11
0x40063cf	              0x90	                                     nop	      3333	ui.c	FUNCTION_80	IF_2	CALL_11
0x40063d0	    0x8b0500000000	            mov eax, dword [0x040063d6] 	      3338	ui.c	FUNCTION_80	IF_8
0x40063d6	            0x85c0	                           test eax, eax	      3338	ui.c	FUNCTION_80	IF_8
0x40063d8	            0x750e	                           jne 0x40063e8	      3338	ui.c	FUNCTION_80	IF_8
0x40063da	        0x4883c408	                              add rsp, 8	      3341	ui.c	FUNCTION_80
0x40063de	              0x5b	                                 pop rbx	      3341	ui.c	FUNCTION_80
0x40063df	              0x5d	                                 pop rbp	      3341	ui.c	FUNCTION_80
0x40063e0	              0xc3	                                     ret	      3341	ui.c	FUNCTION_80
0x40063e1	     0xf1f80000000	                         nop dword [rax]	      3341	ui.c	FUNCTION_80
0x40063e8	        0x4883c408	                              add rsp, 8	      3341	ui.c	FUNCTION_80
0x40063ec	              0x5b	                                 pop rbx	      3341	ui.c	FUNCTION_80
0x40063ed	              0x5d	                                 pop rbp	      3341	ui.c	FUNCTION_80
0x40063ee	      0xe900000000	                           jmp 0x40063f3	      3339	ui.c	FUNCTION_80	CALL_12
0x40063f3	       0xf1f440000	                   nop dword [rax + rax]	      3339	ui.c	FUNCTION_80	CALL_12
0x40063f8	    0x488b05000000	            mov rax, qword [0x040063ff] 	      3294	ui.c	FUNCTION_80	IF_1	CALL_1
0x40063ff	            0x31ff	                            xor edi, edi	      3294	ui.c	FUNCTION_80	IF_1	CALL_1
0x4006401	            0x31db	                            xor ebx, ebx	      3289	ui.c	FUNCTION_80
0x4006403	        0x488d6802	                      lea rbp, [rax + 2]	      3294	ui.c	FUNCTION_80	IF_1	CALL_1
0x4006407	      0xe800000000	                          call 0x400640c	      3294	ui.c	FUNCTION_80	IF_1	CALL_1
0x400640c	          0x4839c5	                            cmp rbp, rax	      3294	ui.c	FUNCTION_80	IF_1	CALL_1
0x400640f	            0x7c27	                            jl 0x4006438	      3294	ui.c	FUNCTION_80	IF_1	CALL_1
0x4006411	    0x4c8b05000000	              mov r8, qword [0x04006418]	      3309	ui.c	FUNCTION_80	CALL_4
0x4006418	      0xbf34000000	                           mov edi, 0x34	      3309	ui.c	FUNCTION_80	CALL_4
0x400641d	      0xe90affffff	                           jmp 0x400632c	      3309	ui.c	FUNCTION_80	CALL_4
0x4006422	    0x660f1f440000	                    nop word [rax + rax]	      3309	ui.c	FUNCTION_80	CALL_4
0x4006428	      0xe800000000	                          call 0x400642d	      3319	ui.c	FUNCTION_80	IF_2	CALL_5
0x400642d	      0xe97bffffff	                           jmp 0x40063ad	      3319	ui.c	FUNCTION_80	IF_2	CALL_5
0x4006432	    0x660f1f440000	                    nop word [rax + rax]	      3319	ui.c	FUNCTION_80	IF_2	CALL_5
0x4006438	    0x8b3d00000000	            mov edi, dword [0x0400643e] 	      3296	ui.c	FUNCTION_80	IF_1	CALL_2
0x400643e	      0xe800000000	                          call 0x4006443	      3296	ui.c	FUNCTION_80	IF_1	CALL_2
0x4006443	            0x31ff	                            xor edi, edi	      3303	ui.c	FUNCTION_80	IF_1	CALL_3
0x4006445	            0x89c3	                            mov ebx, eax	      3296	ui.c	FUNCTION_80	IF_1	CALL_2
0x4006447	      0xe800000000	                          call 0x400644c	      3303	ui.c	FUNCTION_80	IF_1	CALL_3
0x400644c	    0x488905000000	            mov qword [0x04006453], rax 	      3303	ui.c	FUNCTION_80	IF_1	CALL_3
0x4006453	            0xebbc	                           jmp 0x4006411	      3303	ui.c	FUNCTION_80	IF_1	CALL_3
0x4006455	            0x31ff	                            xor edi, edi	      3326	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5	CALL_7
0x4006457	      0xe800000000	                          call 0x400645c	      3326	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5	CALL_7
0x400645c	      0xe93dffffff	                           jmp 0x400639e	      3326	ui.c	FUNCTION_80	IF_2	ELSE_2	IF_5	CALL_7
read_from_input_buf	IF,3:DO,0:functions,0:FOR,0:CALL,3:SWITCH,0:WHILE,0:ELSE,0	38
0x4004920	            0x4154	                                push r12	      1772	ui.c	FUNCTION_54
0x4004922	              0x55	                                push rbp	      1772	ui.c	FUNCTION_54
0x4004923	          0x4989fc	                            mov r12, rdi	      1772	ui.c	FUNCTION_54
0x4004926	              0x53	                                push rbx	      1772	ui.c	FUNCTION_54
0x4004927	        0x4883ec10	                           sub rsp, 0x10	      1772	ui.c	FUNCTION_54
0x400492b	    0x8b1d00000000	            mov ebx, dword [0x04004931] 	      1773	ui.c	FUNCTION_54	IF_1
0x4004931	            0x85db	                           test ebx, ebx	      1773	ui.c	FUNCTION_54	IF_1
0x4004933	            0x7453	                            je 0x4004988	      1773	ui.c	FUNCTION_54	IF_1
0x4004935	          0x4863c3	                         movsxd rax, ebx	      1775	ui.c	FUNCTION_54	IF_2
0x4004938	          0x4c89e7	                            mov rdi, r12	        59	string3.h	FUNCTION_83	CALL_3
0x400493b	          0x4839f0	                            cmp rax, rsi	        59	string3.h	FUNCTION_83	CALL_3
0x400493e	        0x480f4ef0	                         cmovle rsi, rax	        59	string3.h	FUNCTION_83	CALL_3
0x4004942	          0x4889f5	                            mov rbp, rsi	        59	string3.h	FUNCTION_83	CALL_3
0x4004945	          0x4889f2	                            mov rdx, rsi	        59	string3.h	FUNCTION_83	CALL_3
0x4004948	      0xbe00000000	                              mov esi, 0	        59	string3.h	FUNCTION_83	CALL_3
0x400494d	            0x29eb	                            sub ebx, ebp	      1778	ui.c	FUNCTION_54
0x400494f	      0xe800000000	                          call 0x4004954	        59	string3.h	FUNCTION_83	CALL_3
0x4004954	            0x85db	                           test ebx, ebx	      1779	ui.c	FUNCTION_54	IF_3
0x4004956	    0x891d00000000	            mov dword [0x0400495c], ebx 	      1778	ui.c	FUNCTION_54
0x400495c	            0x7419	                            je 0x4004977	      1779	ui.c	FUNCTION_54	IF_3
0x400495e	    0x488db5000000	                          lea rsi, [rbp]	        59	string3.h	FUNCTION_83	CALL_3
0x4004965	          0x4863d3	                         movsxd rdx, ebx	        59	string3.h	FUNCTION_83	CALL_3
0x4004968	      0xb906100000	                         mov ecx, 0x1006	        59	string3.h	FUNCTION_83	CALL_3
0x400496d	      0xbf00000000	                              mov edi, 0	        59	string3.h	FUNCTION_83	CALL_3
0x4004972	      0xe800000000	                          call 0x4004977	        59	string3.h	FUNCTION_83	CALL_3
0x4004977	        0x4883c410	                           add rsp, 0x10	      1782	ui.c	FUNCTION_54
0x400497b	            0x89e8	                            mov eax, ebp	      1782	ui.c	FUNCTION_54
0x400497d	              0x5b	                                 pop rbx	      1782	ui.c	FUNCTION_54
0x400497e	              0x5d	                                 pop rbp	      1782	ui.c	FUNCTION_54
0x400497f	            0x415c	                                 pop r12	      1782	ui.c	FUNCTION_54
0x4004981	              0xc3	                                     ret	      1782	ui.c	FUNCTION_54
0x4004982	    0x660f1f440000	                    nop word [rax + rax]	      1782	ui.c	FUNCTION_54
0x4004988	      0xbf01000000	                              mov edi, 1	      1774	ui.c	FUNCTION_54	CALL_1
0x400498d	      0x4889742408	                mov qword [rsp + 8], rsi	      1774	ui.c	FUNCTION_54	CALL_1
0x4004992	      0xe800000000	                          call 0x4004997	      1774	ui.c	FUNCTION_54	CALL_1
0x4004997	    0x8b1d00000000	            mov ebx, dword [0x0400499d] 	      1774	ui.c	FUNCTION_54	CALL_1
0x400499d	      0x488b742408	                mov rsi, qword [rsp + 8]	      1774	ui.c	FUNCTION_54	CALL_1
0x40049a2	            0xeb91	                           jmp 0x4004935	      1774	ui.c	FUNCTION_54	CALL_1
x11_setup_atoms	IF,0:DO,0:functions,0:FOR,0:CALL,8:SWITCH,0:WHILE,0:ELSE,0	44
0x4004cf0	              0x53	                                push rbx	      2048	ui.c	FUNCTION_62
0x4004cf1	            0x31d2	                            xor edx, edx	      2049	ui.c	FUNCTION_62	CALL_1
0x4004cf3	          0x4889fb	                            mov rbx, rdi	      2048	ui.c	FUNCTION_62
0x4004cf6	      0xbe00000000	                              mov esi, 0	      2049	ui.c	FUNCTION_62	CALL_1
0x4004cfb	      0xe800000000	                          call 0x4004d00	      2049	ui.c	FUNCTION_62	CALL_1
0x4004d00	          0x4889df	                            mov rdi, rbx	      2051	ui.c	FUNCTION_62	CALL_2
0x4004d03	            0x31d2	                            xor edx, edx	      2051	ui.c	FUNCTION_62	CALL_2
0x4004d05	      0xbe00000000	                              mov esi, 0	      2051	ui.c	FUNCTION_62	CALL_2
0x4004d0a	    0x488905000000	            mov qword [0x04004d11], rax 	      2049	ui.c	FUNCTION_62	CALL_1
0x4004d11	      0xe800000000	                          call 0x4004d16	      2051	ui.c	FUNCTION_62	CALL_2
0x4004d16	          0x4889df	                            mov rdi, rbx	      2052	ui.c	FUNCTION_62	CALL_3
0x4004d19	            0x31d2	                            xor edx, edx	      2052	ui.c	FUNCTION_62	CALL_3
0x4004d1b	      0xbe00000000	                              mov esi, 0	      2052	ui.c	FUNCTION_62	CALL_3
0x4004d20	    0x488905000000	            mov qword [0x04004d27], rax 	      2051	ui.c	FUNCTION_62	CALL_2
0x4004d27	      0xe800000000	                          call 0x4004d2c	      2052	ui.c	FUNCTION_62	CALL_3
0x4004d2c	          0x4889df	                            mov rdi, rbx	      2054	ui.c	FUNCTION_62	CALL_4
0x4004d2f	            0x31d2	                            xor edx, edx	      2054	ui.c	FUNCTION_62	CALL_4
0x4004d31	      0xbe00000000	                              mov esi, 0	      2054	ui.c	FUNCTION_62	CALL_4
0x4004d36	    0x488905000000	            mov qword [0x04004d3d], rax 	      2052	ui.c	FUNCTION_62	CALL_3
0x4004d3d	      0xe800000000	                          call 0x4004d42	      2054	ui.c	FUNCTION_62	CALL_4
0x4004d42	          0x4889df	                            mov rdi, rbx	      2055	ui.c	FUNCTION_62	CALL_5
0x4004d45	            0x31d2	                            xor edx, edx	      2055	ui.c	FUNCTION_62	CALL_5
0x4004d47	      0xbe00000000	                              mov esi, 0	      2055	ui.c	FUNCTION_62	CALL_5
0x4004d4c	    0x488905000000	            mov qword [0x04004d53], rax 	      2054	ui.c	FUNCTION_62	CALL_4
0x4004d53	      0xe800000000	                          call 0x4004d58	      2055	ui.c	FUNCTION_62	CALL_5
0x4004d58	          0x4889df	                            mov rdi, rbx	      2056	ui.c	FUNCTION_62	CALL_6
0x4004d5b	            0x31d2	                            xor edx, edx	      2056	ui.c	FUNCTION_62	CALL_6
0x4004d5d	      0xbe00000000	                              mov esi, 0	      2056	ui.c	FUNCTION_62	CALL_6
0x4004d62	    0x488905000000	            mov qword [0x04004d69], rax 	      2055	ui.c	FUNCTION_62	CALL_5
0x4004d69	      0xe800000000	                          call 0x4004d6e	      2056	ui.c	FUNCTION_62	CALL_6
0x4004d6e	          0x4889df	                            mov rdi, rbx	      2058	ui.c	FUNCTION_62	CALL_7
0x4004d71	            0x31d2	                            xor edx, edx	      2058	ui.c	FUNCTION_62	CALL_7
0x4004d73	      0xbe00000000	                              mov esi, 0	      2058	ui.c	FUNCTION_62	CALL_7
0x4004d78	    0x488905000000	            mov qword [0x04004d7f], rax 	      2056	ui.c	FUNCTION_62	CALL_6
0x4004d7f	    0x48c705000000	               mov qword [0x04004d8a], 1	      2057	ui.c	FUNCTION_62
0x4004d8a	      0xe800000000	                          call 0x4004d8f	      2058	ui.c	FUNCTION_62	CALL_7
0x4004d8f	          0x4889df	                            mov rdi, rbx	      2059	ui.c	FUNCTION_62	CALL_8
0x4004d92	            0x31d2	                            xor edx, edx	      2059	ui.c	FUNCTION_62	CALL_8
0x4004d94	      0xbe00000000	                              mov esi, 0	      2059	ui.c	FUNCTION_62	CALL_8
0x4004d99	    0x488905000000	            mov qword [0x04004da0], rax 	      2058	ui.c	FUNCTION_62	CALL_7
0x4004da0	      0xe800000000	                          call 0x4004da5	      2059	ui.c	FUNCTION_62	CALL_8
0x4004da5	              0x5b	                                 pop rbx	      2060	ui.c	FUNCTION_62
0x4004da6	    0x488905000000	            mov qword [0x04004dad], rax 	      2059	ui.c	FUNCTION_62	CALL_8
0x4004dad	              0xc3	                                     ret	      2060	ui.c	FUNCTION_62
ui_set_shellsize	IF,1:DO,0:functions,0:FOR,0:CALL,2:SWITCH,0:WHILE,0:ELSE,1	8
0x40014b0	    0x8b0500000000	            mov eax, dword [0x040014b6] 	       368	ui.c	FUNCTION_10	IF_1
0x40014b6	            0x85c0	                           test eax, eax	       368	ui.c	FUNCTION_10	IF_1
0x40014b8	            0x7506	                           jne 0x40014c0	       368	ui.c	FUNCTION_10	IF_1
0x40014ba	      0xe900000000	                           jmp 0x40014bf	       372	ui.c	FUNCTION_10	CALL_2
0x40014bf	              0x90	                                     nop	       372	ui.c	FUNCTION_10	CALL_2
0x40014c0	      0xba0f000000	                            mov edx, 0xf	       369	ui.c	FUNCTION_10	CALL_1
0x40014c5	      0xbe01000000	                              mov esi, 1	       369	ui.c	FUNCTION_10	CALL_1
0x40014ca	      0xe900000000	                           jmp 0x40014cf	       369	ui.c	FUNCTION_10	CALL_1
jump_to_mouse	IF,57:DO,0:functions,0:FOR,2:CALL,33:SWITCH,0:WHILE,0:ELSE,18	636
0x4005530	            0x4157	                                push r15	      2641	ui.c	FUNCTION_75
0x4005532	            0x4156	                                push r14	      2641	ui.c	FUNCTION_75
0x4005534	          0x4189fe	                           mov r14d, edi	      2641	ui.c	FUNCTION_75
0x4005537	            0x4155	                                push r13	      2641	ui.c	FUNCTION_75
0x4005539	            0x4154	                                push r12	      2641	ui.c	FUNCTION_75
0x400553b	              0x55	                                push rbp	      2641	ui.c	FUNCTION_75
0x400553c	              0x53	                                push rbx	      2641	ui.c	FUNCTION_75
0x400553d	          0x4889f3	                            mov rbx, rsi	      2641	ui.c	FUNCTION_75
0x4005540	        0x4883ec38	                           sub rsp, 0x38	      2641	ui.c	FUNCTION_75
0x4005544	    0x8b0d00000000	            mov ecx, dword [0x0400554a] 	      2656	ui.c	FUNCTION_75
0x400554a	    0x448b15000000	           mov r10d, dword [0x04005551] 	      2657	ui.c	FUNCTION_75
0x4005551	    0x64488b042528	                mov rax, qword fs:[0x28]	      2641	ui.c	FUNCTION_75
0x400555a	      0x4889442428	             mov qword [rsp + 0x28], rax	      2641	ui.c	FUNCTION_75
0x400555f	            0x31c0	                            xor eax, eax	      2641	ui.c	FUNCTION_75
0x4005561	          0x83e720	                           and edi, 0x20	      2665	ui.c	FUNCTION_75	IF_1
0x4005564	    0xc70500000000	               mov dword [0x0400556e], 0	      2662	ui.c	FUNCTION_75
0x400556e	    0xc70500000000	               mov dword [0x04005578], 0	      2663	ui.c	FUNCTION_75
0x4005578	        0x894c2420	             mov dword [rsp + 0x20], ecx	      2656	ui.c	FUNCTION_75
0x400557c	      0x4489542424	            mov dword [rsp + 0x24], r10d	      2657	ui.c	FUNCTION_75
0x4005581	            0x7433	                            je 0x40055b6	      2665	ui.c	FUNCTION_75	IF_1
0x4005583	    0x48833d000000	               cmp qword [0x0400558b], 0	      2669	ui.c	FUNCTION_75	IF_1	IF_2
0x400558b	            0x7414	                            je 0x40055a1	      2669	ui.c	FUNCTION_75	IF_1	IF_2
0x400558d	    0x448b05000000	            mov r8d, dword [0x04005594] 	      2670	ui.c	FUNCTION_75	IF_1	IF_2
0x4005594	          0x4489f0	                           mov eax, r14d	      2670	ui.c	FUNCTION_75	IF_1	IF_2
0x4005597	          0x83e0fa	                     and eax, 0xfffffffa	      2670	ui.c	FUNCTION_75	IF_1	IF_2
0x400559a	          0x4585c0	                           test r8d, r8d	      2670	ui.c	FUNCTION_75	IF_1	IF_2
0x400559d	        0x440f44f0	                         cmove r14d, eax	      2670	ui.c	FUNCTION_75	IF_1	IF_2
0x40055a1	    0x48c705000000	               mov qword [0x040055ac], 0	      2671	ui.c	FUNCTION_75	IF_1
0x40055ac	    0xc70500000000	               mov dword [0x040055b6], 0	      2672	ui.c	FUNCTION_75	IF_1
0x40055b6	        0x41f6c604	                            test r14b, 4	      2675	ui.c	FUNCTION_75	IF_3
0x40055ba	            0x740c	                            je 0x40055c8	      2675	ui.c	FUNCTION_75	IF_3
0x40055bc	    0x3b0d00000000	            cmp ecx, dword [0x040055c2] 	      2676	ui.c	FUNCTION_75	IF_3
0x40055c2	     0xf8448010000	                            je 0x4005710	      2676	ui.c	FUNCTION_75	IF_3
0x40055c8	        0x41f6c608	                            test r14b, 8	      2717	ui.c	FUNCTION_75	IF_11
0x40055cc	    0x890d00000000	            mov dword [0x040055d2], ecx 	      2714	ui.c	FUNCTION_75
0x40055d2	    0x448915000000	           mov dword [0x040055d9], r10d 	      2715	ui.c	FUNCTION_75
0x40055d9	     0xf8541010000	                           jne 0x4005720	      2717	ui.c	FUNCTION_75	IF_11
0x40055df	            0x85c9	                           test ecx, ecx	      2723	ui.c	FUNCTION_75	IF_12
0x40055e1	     0xf8879010000	                            js 0x4005760	      2723	ui.c	FUNCTION_75	IF_12
0x40055e7	          0x4863c1	                         movsxd rax, ecx	      2723	ui.c	FUNCTION_75	IF_12
0x40055ea	    0x483b05000000	            cmp rax, qword [0x040055f1] 	      2723	ui.c	FUNCTION_75	IF_12
0x40055f1	     0xf8d79030000	                           jge 0x4005970	      2723	ui.c	FUNCTION_75	IF_12
0x40055f7	          0x4585d2	                         test r10d, r10d	      2723	ui.c	FUNCTION_75	IF_12
0x40055fa	     0xf8870030000	                            js 0x4005970	      2723	ui.c	FUNCTION_75	IF_12
0x4005600	          0x4963f2	                        movsxd rsi, r10d	      2723	ui.c	FUNCTION_75	IF_12
0x4005603	    0x483b35000000	            cmp rsi, qword [0x0400560a] 	      2723	ui.c	FUNCTION_75	IF_12
0x400560a	    0xc74424182000	           mov dword [rsp + 0x18], 0x20 	      2727	ui.c	FUNCTION_75	ELSE_1
0x4005612	            0x7f23	                            jg 0x4005637	      2723	ui.c	FUNCTION_75	IF_12
0x4005614	    0x488b35000000	            mov rsi, qword [0x0400561b] 	      2724	ui.c	FUNCTION_75	IF_12
0x400561b	          0x4885f6	                           test rsi, rsi	      2724	ui.c	FUNCTION_75	IF_12
0x400561e	            0x7417	                            je 0x4005637	      2724	ui.c	FUNCTION_75	IF_12
0x4005620	    0x488b3d000000	            mov rdi, qword [0x04005627] 	      2725	ui.c	FUNCTION_75	IF_12
0x4005627	          0x4589d0	                           mov r8d, r10d	      2725	ui.c	FUNCTION_75	IF_12
0x400562a	        0x44030487	            add r8d, dword [rdi + rax*4]	      2725	ui.c	FUNCTION_75	IF_12
0x400562e	      0x420fb60406	              movzx eax, byte [rsi + r8]	      2725	ui.c	FUNCTION_75	IF_12
0x4005633	        0x89442418	             mov dword [rsp + 0x18], eax	      2725	ui.c	FUNCTION_75	IF_12
0x4005637	    0x4c8b2d000000	            mov r13, qword [0x0400563e] 	      2730	ui.c	FUNCTION_75	ELSE_1
0x400563e	        0x41f6c601	                            test r14b, 1	      2733	ui.c	FUNCTION_75	ELSE_1	IF_13
0x4005642	        0x418b4544	            mov eax, dword [r13 + 0x44] 	      2731	ui.c	FUNCTION_75	ELSE_1
0x4005646	        0x4d8b6538	            mov r12, qword [r13 + 0x38] 	      2731	ui.c	FUNCTION_75	ELSE_1
0x400564a	        0x418b6d40	            mov ebp, dword [r13 + 0x40] 	      2731	ui.c	FUNCTION_75	ELSE_1
0x400564e	        0x8944240c	              mov dword [rsp + 0xc], eax	      2731	ui.c	FUNCTION_75	ELSE_1
0x4005652	     0xf852d010000	                           jne 0x4005785	      2733	ui.c	FUNCTION_75	ELSE_1	IF_13
0x4005658	          0x4585d2	                         test r10d, r10d	      2735	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_14
0x400565b	     0xf88a1000000	                            js 0x4005702	      2735	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_14
0x4005661	    0x488b3d000000	            mov rdi, qword [0x04005668] 	      3167	ui.c	FUNCTION_77
0x4005668	            0x89ca	                            mov edx, ecx	      3167	ui.c	FUNCTION_77
0x400566a	    0x488b05000000	            mov rax, qword [0x04005671] 	      3166	ui.c	FUNCTION_77
0x4005671	            0x31f6	                            xor esi, esi	      3167	ui.c	FUNCTION_77
0x4005673	          0x4531db	                          xor r11d, r11d	      3167	ui.c	FUNCTION_77
0x4005676	    0x2b979c000000	             sub edx, dword [rdi + 0x9c]	      3167	ui.c	FUNCTION_77
0x400567c	        0x89542420	             mov dword [rsp + 0x20], edx	      3167	ui.c	FUNCTION_77
0x4005680	           0xfb608	                   movzx ecx, byte [rax]	      3170	ui.c	FUNCTION_77	FOR_1	IF_1
0x4005683	            0x84c9	                             test cl, cl	      3170	ui.c	FUNCTION_77	FOR_1	IF_1
0x4005685	            0x744a	                            je 0x40056d1	      3170	ui.c	FUNCTION_77	FOR_1	IF_1
0x4005687	        0x4c8b7830	            mov r15, qword [rax + 0x30] 	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x400568b	          0x80f901	                               cmp cl, 1	      3172	ui.c	FUNCTION_77	FOR_1	IF_2
0x400568e	        0x498b4720	            mov rax, qword [r15 + 0x20] 	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4005692	     0xf8498010000	                            je 0x4005830	      3172	ui.c	FUNCTION_77	FOR_1	IF_2
0x4005698	          0x4885c0	                           test rax, rax	      3183	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x400569b	     0xf84c7020000	                            je 0x4005968	      3183	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x40056a1	        0x418b4f0c	              mov ecx, dword [r15 + 0xc]	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x40056a5	            0x39d1	                            cmp ecx, edx	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x40056a7	            0x7e11	                           jle 0x40056ba	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x40056a9	      0xe9ba020000	                           jmp 0x4005968	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x40056ae	            0x6690	                                     nop	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x40056b0	          0x8b480c	              mov ecx, dword [rax + 0xc]	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x40056b3	            0x39d1	                            cmp ecx, edx	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x40056b5	            0x7f0e	                            jg 0x40056c5	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x40056b7	          0x4889f0	                            mov rax, rsi	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x40056ba	        0x488b7020	            mov rsi, qword [rax + 0x20] 	      3183	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x40056be	            0x29ca	                            sub edx, ecx	      3187	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x40056c0	          0x4885f6	                           test rsi, rsi	      3183	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x40056c3	            0x75eb	                           jne 0x40056b0	      3183	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x40056c5	           0xfb608	                   movzx ecx, byte [rax]	      3170	ui.c	FUNCTION_77	FOR_1	IF_1
0x40056c8	      0xbe01000000	                              mov esi, 1	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x40056cd	            0x84c9	                             test cl, cl	      3170	ui.c	FUNCTION_77	FOR_1	IF_1
0x40056cf	            0x75b6	                           jne 0x4005687	      3170	ui.c	FUNCTION_77	FOR_1	IF_1
0x40056d1	          0x4584db	                         test r11b, r11b	      3170	ui.c	FUNCTION_77	FOR_1	IF_1
0x40056d4	     0xf85b5090000	                           jne 0x400608f	      3170	ui.c	FUNCTION_77	FOR_1	IF_1
0x40056da	          0x4084f6	                           test sil, sil	      3170	ui.c	FUNCTION_77	FOR_1	IF_1
0x40056dd	     0xf85a3090000	                           jne 0x4006086	      3170	ui.c	FUNCTION_77	FOR_1	IF_1
0x40056e3	        0x4c8b7838	            mov r15, qword [rax + 0x38] 	      3170	ui.c	FUNCTION_77	FOR_1	IF_1
0x40056e7	    0x660f1f840000	                    nop word [rax + rax]	      3170	ui.c	FUNCTION_77	FOR_1	IF_1
0x40056f0	          0x4c39ff	                            cmp rdi, r15	      3194	ui.c	FUNCTION_77	IF_5
0x40056f3	     0xf8491010000	                            je 0x400588a	      3194	ui.c	FUNCTION_77	IF_5
0x40056f9	        0x488b7f20	            mov rdi, qword [rdi + 0x20] 	      3193	ui.c	FUNCTION_77	CALL_1
0x40056fd	          0x4885ff	                           test rdi, rdi	      3193	ui.c	FUNCTION_77	CALL_1
0x4005700	            0x75ee	                           jne 0x40056f0	      3193	ui.c	FUNCTION_77	CALL_1
0x4005702	            0x31c0	                            xor eax, eax	      2695	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	IF_8
0x4005704	            0xeb2d	                           jmp 0x4005733	      2695	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	IF_8
0x4005706	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2695	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	IF_8
0x4005710	    0x443b15000000	           cmp r10d, dword [0x04005717] 	      2677	ui.c	FUNCTION_75	IF_3
0x4005717	     0xf85abfeffff	                           jne 0x40055c8	      2677	ui.c	FUNCTION_75	IF_3
0x400571d	           0xf1f00	                         nop dword [rax]	      2677	ui.c	FUNCTION_75	IF_3
0x4005720	    0x8b3d00000000	            mov edi, dword [0x04005726] 	      2682	ui.c	FUNCTION_75	IF_3	IF_4
0x4005726	            0x85ff	                           test edi, edi	      2682	ui.c	FUNCTION_75	IF_3	IF_4
0x4005728	     0xf84a2000000	                            je 0x40057d0	      2682	ui.c	FUNCTION_75	IF_3	IF_4
0x400572e	      0xb802000000	                              mov eax, 2	      2875	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30
0x4005733	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	      3064	ui.c	FUNCTION_75
0x4005738	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      3064	ui.c	FUNCTION_75
0x4005741	     0xf853a090000	                           jne 0x4006081	      3064	ui.c	FUNCTION_75
0x4005747	        0x4883c438	                           add rsp, 0x38	      3064	ui.c	FUNCTION_75
0x400574b	              0x5b	                                 pop rbx	      3064	ui.c	FUNCTION_75
0x400574c	              0x5d	                                 pop rbp	      3064	ui.c	FUNCTION_75
0x400574d	            0x415c	                                 pop r12	      3064	ui.c	FUNCTION_75
0x400574f	            0x415d	                                 pop r13	      3064	ui.c	FUNCTION_75
0x4005751	            0x415e	                                 pop r14	      3064	ui.c	FUNCTION_75
0x4005753	            0x415f	                                 pop r15	      3064	ui.c	FUNCTION_75
0x4005755	              0xc3	                                     ret	      3064	ui.c	FUNCTION_75
0x4005756	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3064	ui.c	FUNCTION_75
0x4005760	    0x4c8b2d000000	            mov r13, qword [0x04005767] 	      2730	ui.c	FUNCTION_75	ELSE_1
0x4005767	        0x41f6c601	                            test r14b, 1	      2733	ui.c	FUNCTION_75	ELSE_1	IF_13
0x400576b	        0x418b4544	            mov eax, dword [r13 + 0x44] 	      2731	ui.c	FUNCTION_75	ELSE_1
0x400576f	        0x4d8b6538	            mov r12, qword [r13 + 0x38] 	      2731	ui.c	FUNCTION_75	ELSE_1
0x4005773	        0x418b6d40	            mov ebp, dword [r13 + 0x40] 	      2731	ui.c	FUNCTION_75	ELSE_1
0x4005777	        0x8944240c	              mov dword [rsp + 0xc], eax	      2731	ui.c	FUNCTION_75	ELSE_1
0x400577b	            0x7485	                            je 0x4005702	      2733	ui.c	FUNCTION_75	ELSE_1	IF_13
0x400577d	    0xc74424182000	           mov dword [rsp + 0x18], 0x20 	      2727	ui.c	FUNCTION_75	ELSE_1
0x4005785	    0x8b3500000000	            mov esi, dword [0x0400578b] 	      2865	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30
0x400578b	            0x85d2	                           test edx, edx	      2865	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30
0x400578d	           0xf94c0	                                 sete al	      2865	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30
0x4005790	            0x85f6	                           test esi, esi	      2865	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30
0x4005792	            0x745c	                            je 0x40057f0	      2865	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30
0x4005794	            0x84c0	                             test al, al	      2865	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30
0x4005796	            0x7458	                            je 0x40057f0	      2865	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30
0x4005798	    0x488b3d000000	            mov rdi, qword [0x0400579f] 	      2867	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x400579f	          0x4885ff	                           test rdi, rdi	      2867	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x40057a2	            0x748a	                            je 0x400572e	      2867	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x40057a4	            0x89cb	                            mov ebx, ecx	      2870	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x40057a6	    0x2b9f9c000000	             sub ebx, dword [rdi + 0x9c]	      2870	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x40057ac	    0x2b9fa0000000	             sub ebx, dword [rdi + 0xa0]	      2870	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x40057b2	          0x83c301	                              add ebx, 1	      2870	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x40057b5	            0x29f3	                            sub ebx, esi	      2870	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x40057b7	            0x89de	                            mov esi, ebx	      2872	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31	CALL_13
0x40057b9	      0xe800000000	                          call 0x40057be	      2872	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31	CALL_13
0x40057be	     0x91d00000000	              or dword [0x040057c4], ebx	      2873	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x40057c4	      0xe965ffffff	                           jmp 0x400572e	      2873	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x40057c9	     0xf1f80000000	                         nop dword [rax]	      2873	ui.c	FUNCTION_75	ELSE_6	ELSE_7	IF_30	IF_31
0x40057d0	    0x8b3500000000	            mov esi, dword [0x040057d6] 	      2684	ui.c	FUNCTION_75	IF_3	IF_5
0x40057d6	            0x85f6	                           test esi, esi	      2684	ui.c	FUNCTION_75	IF_3	IF_5
0x40057d8	     0xf849f010000	                            je 0x400597d	      2684	ui.c	FUNCTION_75	IF_3	IF_5
0x40057de	      0xb804000000	                              mov eax, 4	      2887	ui.c	FUNCTION_75	ELSE_8	IF_32
0x40057e3	      0xe94bffffff	                           jmp 0x4005733	      2887	ui.c	FUNCTION_75	ELSE_8	IF_32
0x40057e8	     0xf1f84000000	                   nop dword [rax + rax]	      2887	ui.c	FUNCTION_75	ELSE_8	IF_32
0x40057f0	    0x8b1500000000	            mov edx, dword [0x040057f6] 	      2877	ui.c	FUNCTION_75	ELSE_8	IF_32
0x40057f6	            0x85d2	                           test edx, edx	      2877	ui.c	FUNCTION_75	ELSE_8	IF_32
0x40057f8	            0x7478	                            je 0x4005872	      2877	ui.c	FUNCTION_75	ELSE_8	IF_32
0x40057fa	            0x84c0	                             test al, al	      2877	ui.c	FUNCTION_75	ELSE_8	IF_32
0x40057fc	            0x7474	                            je 0x4005872	      2877	ui.c	FUNCTION_75	ELSE_8	IF_32
0x40057fe	    0x488b3d000000	            mov rdi, qword [0x04005805] 	      2879	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x4005805	          0x4885ff	                           test rdi, rdi	      2879	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x4005808	            0x74d4	                            je 0x40057de	      2879	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x400580a	          0x4489d3	                           mov ebx, r10d	      2882	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x400580d	    0x2b9fa8000000	             sub ebx, dword [rdi + 0xa8]	      2882	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x4005813	    0x2b9fac000000	             sub ebx, dword [rdi + 0xac]	      2882	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x4005819	          0x83c301	                              add ebx, 1	      2882	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x400581c	            0x29d3	                            sub ebx, edx	      2882	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x400581e	            0x89de	                            mov esi, ebx	      2884	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33	CALL_14
0x4005820	      0xe800000000	                          call 0x4005825	      2884	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33	CALL_14
0x4005825	     0x91d00000000	              or dword [0x0400582b], ebx	      2885	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x400582b	            0xebb1	                           jmp 0x40057de	      2885	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x400582d	           0xf1f00	                         nop dword [rax]	      2885	ui.c	FUNCTION_75	ELSE_8	IF_32	IF_33
0x4005830	          0x4885c0	                           test rax, rax	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4005833	     0xf842f010000	                            je 0x4005968	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4005839	        0x418b4f04	                mov ecx, dword [r15 + 4]	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x400583d	          0x4439d1	                           cmp ecx, r10d	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x4005840	            0x7e19	                           jle 0x400585b	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x4005842	      0xe921010000	                           jmp 0x4005968	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x4005847	    0x660f1f840000	                    nop word [rax + rax]	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x4005850	          0x8b4804	                mov ecx, dword [rax + 4]	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x4005853	          0x4439d1	                           cmp ecx, r10d	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x4005856	            0x7f0f	                            jg 0x4005867	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x4005858	          0x4c89d8	                            mov rax, r11	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x400585b	        0x4c8b5820	            mov r11, qword [rax + 0x20] 	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x400585f	          0x4129ca	                           sub r10d, ecx	      3178	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4005862	          0x4d85db	                           test r11, r11	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4005865	            0x75e9	                           jne 0x4005850	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4005867	    0x41bb01000000	                             mov r11d, 1	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x400586d	      0xe90efeffff	                           jmp 0x4005680	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4005872	    0x8b3500000000	            mov esi, dword [0x04005878] 	      2890	ui.c	FUNCTION_75	ELSE_9	IF_34
0x4005878	            0x85f6	                           test esi, esi	      2890	ui.c	FUNCTION_75	ELSE_9	IF_34
0x400587a	     0xf843d020000	                            je 0x4005abd	      2890	ui.c	FUNCTION_75	ELSE_9	IF_34
0x4005880	      0xb808080000	                          mov eax, 0x808	      2751	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16
0x4005885	      0xe9a9feffff	                           jmp 0x4005733	      2751	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16
0x400588a	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      3197	ui.c	FUNCTION_77	IF_5
0x400588e	    0x412b87a80100	            sub eax, dword [r15 + 0x1a8]	      3197	ui.c	FUNCTION_77	IF_5
0x4005895	    0x48c705000000	               mov qword [0x040058a0], 0	      2742	ui.c	FUNCTION_75	ELSE_1	IF_13
0x40058a0	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2745	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16
0x40058a3	        0x89442420	             mov dword [rsp + 0x20], eax	      3197	ui.c	FUNCTION_77	IF_5
0x40058a7	     0xf8403030000	                            je 0x4005bb0	      2745	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16
0x40058ad	    0x418b97a00000	            mov edx, dword [r15 + 0xa0] 	      2759	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x40058b4	    0xc70500000000	               mov dword [0x040058be], 0	      2753	ui.c	FUNCTION_75	ELSE_1	IF_13
0x40058be	            0x39c2	                            cmp edx, eax	      2759	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x40058c0	     0xf8e0a010000	                           jle 0x40059d0	      2759	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x40058c6	    0x418b97ac0000	            mov edx, dword [r15 + 0xac] 	      2766	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x40058cd	        0x8b442424	            mov eax, dword [rsp + 0x24] 	      2766	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x40058d1	    0xc70500000000	               mov dword [0x040058db], 0	      2766	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x40058db	            0x39d0	                            cmp eax, edx	      2766	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x40058dd	     0xf8c6d010000	                            jl 0x4005a50	      2766	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x40058e3	            0x29d0	                            sub eax, edx	      2766	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x40058e5	    0x4c893d000000	            mov qword [0x040058ec], r15 	      2769	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x40058ec	          0x83c001	                              add eax, 1	      2769	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x40058ef	    0x890500000000	            mov dword [0x040058f5], eax 	      2769	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x40058f5	    0x8b0500000000	            mov eax, dword [0x040058fb] 	      2786	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40058fb	            0x85c0	                           test eax, eax	      2786	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40058fd	            0x7424	                            je 0x4005923	      2786	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x40058ff	    0x488b15000000	            mov rdx, qword [0x04005906] 	      2787	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4005906	        0x488b4208	                mov rax, qword [rdx + 8]	      2787	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x400590a	        0x49394708	                cmp qword [r15 + 8], rax	      2787	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x400590e	     0xf8488040000	                            je 0x4005d9c	      2787	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4005914	      0xe800000000	                          call 0x4005919	      2802	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21	CALL_8
0x4005919	      0xbf14000000	                           mov edi, 0x14	      2803	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21	CALL_9
0x400591e	      0xe800000000	                          call 0x4005923	      2803	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21	CALL_9
0x4005923	    0x8b0500000000	            mov eax, dword [0x04005929] 	      2803	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21	CALL_9
0x4005929	            0x85c0	                           test eax, eax	      2806	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22
0x400592b	     0xf842e010000	                            je 0x4005a5f	      2806	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22
0x4005931	    0x4c393d000000	            cmp qword [0x04005938], r15 	      2806	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22
0x4005938	     0xf8421010000	                            je 0x4005a5f	      2806	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22
0x400593e	    0x448b0d000000	            mov r9d, dword [0x04005945] 	      2812	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22	IF_23
0x4005945	    0xc70500000000	               mov dword [0x0400594f], 0	      2810	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22
0x400594f	          0x4585c9	                           test r9d, r9d	      2812	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22	IF_23
0x4005952	     0xf85d6fdffff	                           jne 0x400572e	      2812	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22	IF_23
0x4005958	      0xb808000000	                              mov eax, 8	      2814	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22
0x400595d	      0xe9d1fdffff	                           jmp 0x4005733	      2814	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22
0x4005962	    0x660f1f440000	                    nop word [rax + rax]	      2814	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_22
0x4005968	          0x4c89f8	                            mov rax, r15	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x400596b	      0xe910fdffff	                           jmp 0x4005680	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x4005970	    0xc74424182000	           mov dword [rsp + 0x18], 0x20 	      2727	ui.c	FUNCTION_75	ELSE_1
0x4005978	      0xe9bafcffff	                           jmp 0x4005637	      2727	ui.c	FUNCTION_75	ELSE_1
0x400597d	    0x8b0d00000000	            mov ecx, dword [0x04005983] 	      2687	ui.c	FUNCTION_75	IF_3	IF_6
0x4005983	            0x85c9	                           test ecx, ecx	      2687	ui.c	FUNCTION_75	IF_3	IF_6
0x4005985	     0xf848c000000	                            je 0x4005a17	      2687	ui.c	FUNCTION_75	IF_3	IF_6
0x400598b	    0xf60500000000	           test byte [0x04005992], 0x60 	      2691	ui.c	FUNCTION_75	IF_3	IF_6	IF_7
0x4005992	     0xf84e8feffff	                            je 0x4005880	      2691	ui.c	FUNCTION_75	IF_3	IF_6	IF_7
0x4005998	        0x4183e620	                          and r14d, 0x20	      2691	ui.c	FUNCTION_75	IF_3	IF_6	IF_7
0x400599c	     0xf85defeffff	                           jne 0x4005880	      2691	ui.c	FUNCTION_75	IF_3	IF_6	IF_7
0x40059a2	      0x488d742424	                   lea rsi, [rsp + 0x24]	      2693	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	CALL_1
0x40059a7	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2693	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	CALL_1
0x40059ac	      0xe800000000	                          call 0x40059b1	      2693	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	CALL_1
0x40059b1	          0x4885c0	                           test rax, rax	      2694	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	IF_8
0x40059b4	     0xf8448fdffff	                            je 0x4005702	      2694	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	IF_8
0x40059ba	        0x8b742424	            mov esi, dword [rsp + 0x24] 	      2696	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	CALL_2
0x40059be	          0x4889c7	                            mov rdi, rax	      2696	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	CALL_2
0x40059c1	      0xe800000000	                          call 0x40059c6	      2696	ui.c	FUNCTION_75	IF_3	IF_6	IF_7	CALL_2
0x40059c6	      0xb808080000	                          mov eax, 0x808	      2698	ui.c	FUNCTION_75	IF_3	IF_6
0x40059cb	      0xe963fdffff	                           jmp 0x4005733	      2698	ui.c	FUNCTION_75	IF_3	IF_6
0x40059d0	            0x29d0	                            sub eax, edx	      2698	ui.c	FUNCTION_75	IF_3	IF_6
0x40059d2	    0x418b97ac0000	            mov edx, dword [r15 + 0xac] 	      2766	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x40059d9	    0x4c893d000000	            mov qword [0x040059e0], r15 	      2762	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x40059e0	          0x83c001	                              add eax, 1	      2762	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x40059e3	    0x890500000000	            mov dword [0x040059e9], eax 	      2762	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_17
0x40059e9	        0x8b442424	            mov eax, dword [rsp + 0x24] 	      2766	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x40059ed	            0x39c2	                            cmp edx, eax	      2766	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x40059ef	            0x7f5f	                            jg 0x4005a50	      2766	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x40059f1	            0x29d0	                            sub eax, edx	      2766	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_2	IF_18
0x40059f3	          0x4c89ff	                            mov rdi, r15	      2778	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19	IF_20	CALL_7
0x40059f6	          0x83c001	                              add eax, 1	      2778	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19	IF_20	CALL_7
0x40059f9	    0x890500000000	            mov dword [0x040059ff], eax 	      2778	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19	IF_20	CALL_7
0x40059ff	      0xe800000000	                          call 0x4005a04	      2778	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19	IF_20	CALL_7
0x4005a04	            0x85c0	                           test eax, eax	      2778	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19	IF_20	CALL_7
0x4005a06	            0x7548	                           jne 0x4005a50	      2778	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19	IF_20	CALL_7
0x4005a08	    0xc70500000000	               mov dword [0x04005a12], 0	      2781	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19	ELSE_4
0x4005a12	      0xe9defeffff	                           jmp 0x40058f5	      2781	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19	ELSE_4
0x4005a17	        0x4183e610	                          and r14d, 0x10	      2701	ui.c	FUNCTION_75	IF_3	IF_9
0x4005a1b	     0xf8570050000	                           jne 0x4005f91	      2701	ui.c	FUNCTION_75	IF_3	IF_9
0x4005a21	    0x8b1500000000	            mov edx, dword [0x04005a27] 	      2708	ui.c	FUNCTION_75	IF_3	IF_10
0x4005a27	      0xb801000000	                              mov eax, 1	      2711	ui.c	FUNCTION_75	IF_3
0x4005a2c	            0x85d2	                           test edx, edx	      2708	ui.c	FUNCTION_75	IF_3	IF_10
0x4005a2e	     0xf84fffcffff	                            je 0x4005733	      2708	ui.c	FUNCTION_75	IF_3	IF_10
0x4005a34	    0x488b15000000	            mov rdx, qword [0x04005a3b] 	      2708	ui.c	FUNCTION_75	IF_3	IF_10
0x4005a3b	        0x8b5c2420	            mov ebx, dword [rsp + 0x20] 	      2708	ui.c	FUNCTION_75	IF_3	IF_10
0x4005a3f	    0x399a9c000000	            cmp dword [rdx + 0x9c], ebx 	      2708	ui.c	FUNCTION_75	IF_3	IF_10
0x4005a45	     0xf8f0dffffff	                            jg 0x4005958	      2708	ui.c	FUNCTION_75	IF_3	IF_10
0x4005a4b	      0xe9e3fcffff	                           jmp 0x4005733	      2708	ui.c	FUNCTION_75	IF_3	IF_10
0x4005a50	    0xc70500000000	               mov dword [0x04005a5a], 0	      2779	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19	IF_20
0x4005a5a	      0xe996feffff	                           jmp 0x40058f5	      2779	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_3	IF_19	IF_20
0x4005a5f	    0x48833d000000	               cmp qword [0x04005a67], 0	      2825	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_24
0x4005a67	            0x7406	                            je 0x4005a6f	      2825	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_24
0x4005a69	        0x41f6c620	                         test r14b, 0x20	      2825	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_24
0x4005a6d	            0x740d	                            je 0x4005a7c	      2825	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_24
0x4005a6f	      0xbe01000000	                              mov esi, 1	      2826	ui.c	FUNCTION_75	ELSE_1	IF_13	CALL_10
0x4005a74	          0x4c89ff	                            mov rdi, r15	      2826	ui.c	FUNCTION_75	ELSE_1	IF_13	CALL_10
0x4005a77	      0xe800000000	                          call 0x4005a7c	      2826	ui.c	FUNCTION_75	ELSE_1	IF_13	CALL_10
0x4005a7c	    0x488b3d000000	            mov rdi, qword [0x04005a83] 	      2828	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_25
0x4005a83	          0x4939fd	                            cmp r13, rdi	      2828	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_25
0x4005a86	     0xf84af010000	                            je 0x4005c3b	      2828	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_25
0x4005a8c	      0xe800000000	                          call 0x4005a91	      2832	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_25	CALL_11
0x4005a91	      0xe800000000	                          call 0x4005a96	      2836	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_25	CALL_12
0x4005a96	    0x448b05000000	            mov r8d, dword [0x04005a9d] 	      2839	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26
0x4005a9d	          0x4585c0	                           test r8d, r8d	      2839	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26
0x4005aa0	     0xf8471010000	                            je 0x4005c17	      2839	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26
0x4005aa6	    0x4c3b2d000000	            cmp r13, qword [0x04005aad] 	      2842	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26	IF_27
0x4005aad	     0xf847bfcffff	                            je 0x400572e	      2842	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26	IF_27
0x4005ab3	      0xb802010000	                          mov eax, 0x102	      2845	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26	ELSE_5
0x4005ab8	      0xe976fcffff	                           jmp 0x4005733	      2845	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26	ELSE_5
0x4005abd	        0x41f6c610	                         test r14b, 0x10	      2899	ui.c	FUNCTION_75	ELSE_10	IF_35
0x4005ac1	          0x4d89ea	                            mov r10, r13	      2899	ui.c	FUNCTION_75	ELSE_10	IF_35
0x4005ac4	     0xf85b3020000	                           jne 0x4005d7d	      2899	ui.c	FUNCTION_75	ELSE_10	IF_35
0x4005aca	    0x8b1500000000	            mov edx, dword [0x04005ad0] 	      2907	ui.c	FUNCTION_75	ELSE_10	IF_36
0x4005ad0	    0x418b829c0000	            mov eax, dword [r10 + 0x9c] 	      2907	ui.c	FUNCTION_75	ELSE_10	IF_36
0x4005ad7	            0x85d2	                           test edx, edx	      2907	ui.c	FUNCTION_75	ELSE_10	IF_36
0x4005ad9	            0x7408	                            je 0x4005ae3	      2907	ui.c	FUNCTION_75	ELSE_10	IF_36
0x4005adb	            0x39c8	                            cmp eax, ecx	      2907	ui.c	FUNCTION_75	ELSE_10	IF_36
0x4005add	     0xf8f75feffff	                            jg 0x4005958	      2907	ui.c	FUNCTION_75	ELSE_10	IF_36
0x4005ae3	    0x410382a80100	            add eax, dword [r10 + 0x1a8]	      2911	ui.c	FUNCTION_75	ELSE_10	CALL_17
0x4005aea	            0x89ca	                            mov edx, ecx	      2911	ui.c	FUNCTION_75	ELSE_10	CALL_17
0x4005aec	            0x29c2	                            sub edx, eax	      2911	ui.c	FUNCTION_75	ELSE_10	CALL_17
0x4005aee	        0x8b442424	            mov eax, dword [rsp + 0x24] 	      2912	ui.c	FUNCTION_75	ELSE_10
0x4005af2	    0x412b82a80000	             sub eax, dword [r10 + 0xa8]	      2912	ui.c	FUNCTION_75	ELSE_10
0x4005af9	            0x85d2	                           test edx, edx	      2918	ui.c	FUNCTION_75	ELSE_10	IF_37
0x4005afb	        0x89542420	             mov dword [rsp + 0x20], edx	      2911	ui.c	FUNCTION_75	ELSE_10	CALL_17
0x4005aff	        0x89442424	             mov dword [rsp + 0x24], eax	      2912	ui.c	FUNCTION_75	ELSE_10
0x4005b03	     0xf886f030000	                            js 0x4005e78	      2918	ui.c	FUNCTION_75	ELSE_10	IF_37
0x4005b09	    0x413b92a00000	            cmp edx, dword [r10 + 0xa0] 	      2955	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x4005b10	     0xf8c1c030000	                            jl 0x4005e32	      2955	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x4005b16	        0x498b7a78	            mov rdi, qword [r10 + 0x78] 	      2955	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x4005b1a	      0xba01000000	                              mov edx, 1	      2955	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x4005b1f	          0x4531ff	                          xor r15d, r15d	      2955	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x4005b22	    0x660f1f440000	                    nop word [rax + rax]	      2955	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x4005b28	    0x488b05000000	            mov rax, qword [0x04005b2f] 	      2958	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2
0x4005b2f	          0x483938	                    cmp qword [rax], rdi	      2958	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2
0x4005b32	     0xf8ec0020000	                           jle 0x4005df8	      2958	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2
0x4005b38	    0x418b82840000	            mov eax, dword [r10 + 0x84] 	      2961	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_42
0x4005b3f	            0x85c0	                           test eax, eax	      2961	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_42
0x4005b41	     0xf8e81000000	                           jle 0x4005bc8	      2961	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_42
0x4005b47	        0x4183c701	                             add r15d, 1	      2962	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_42
0x4005b4b	            0x85d2	                           test edx, edx	      2966	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_43
0x4005b4d	            0x7517	                           jne 0x4005b66	      2966	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_43
0x4005b4f	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      2966	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_43
0x4005b53	    0x412b82a00000	             sub eax, dword [r10 + 0xa0]	      2966	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_43
0x4005b5a	          0x83c001	                              add eax, 1	      2966	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_43
0x4005b5d	          0x4139c7	                           cmp r15d, eax	      2966	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_43
0x4005b60	     0xf8f92020000	                            jg 0x4005df8	      2966	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_43
0x4005b66	        0x498b7a78	            mov rdi, qword [r10 + 0x78] 	      2970	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44	CALL_25
0x4005b6a	        0x498d5278	                   lea rdx, [r10 + 0x78]	      2970	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44	CALL_25
0x4005b6e	            0x31f6	                            xor esi, esi	      2970	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44	CALL_25
0x4005b70	      0xe800000000	                          call 0x4005b75	      2970	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44	CALL_25
0x4005b75	    0x4c8b15000000	            mov r10, qword [0x04005b7c] 	      2971	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44
0x4005b7c	            0x85c0	                           test eax, eax	      2970	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44	CALL_25
0x4005b7e	        0x498b7a78	            mov rdi, qword [r10 + 0x78] 	      2971	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44
0x4005b82	            0x7410	                            je 0x4005b94	      2970	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44	CALL_25
0x4005b84	    0x488b05000000	            mov rax, qword [0x04005b8b] 	      2971	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44
0x4005b8b	          0x483b38	                    cmp rdi, qword [rax]	      2971	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44
0x4005b8e	     0xf8464020000	                            je 0x4005df8	      2971	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_44
0x4005b94	    0x418b82840000	            mov eax, dword [r10 + 0x84] 	      2975	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_45
0x4005b9b	            0x85c0	                           test eax, eax	      2975	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_45
0x4005b9d	            0x7e45	                           jle 0x4005be4	      2975	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_45
0x4005b9f	          0x83e801	                              sub eax, 1	      2976	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_45
0x4005ba2	            0x31d2	                            xor edx, edx	      2976	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_45
0x4005ba4	    0x418982840000	             mov dword [r10 + 0x84], eax	      2976	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_45
0x4005bab	      0xe978ffffff	                           jmp 0x4005b28	      2976	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	IF_45
0x4005bb0	        0x8b742424	            mov esi, dword [rsp + 0x24] 	      2749	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16	CALL_6
0x4005bb4	      0xe800000000	                          call 0x4005bb9	      2749	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16	CALL_6
0x4005bb9	    0xc70500000000	               mov dword [0x04005bc3], 1	      2750	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16
0x4005bc3	      0xe9b8fcffff	                           jmp 0x4005880	      2750	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16
0x4005bc8	        0x89542410	             mov dword [rsp + 0x10], edx	      2750	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_16
0x4005bcc	      0xe800000000	                          call 0x4005bd1	      2965	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	CALL_24
0x4005bd1	    0x4c8b15000000	            mov r10, qword [0x04005bd8] 	      2965	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	CALL_24
0x4005bd8	          0x4101c7	                           add r15d, eax	      2965	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	CALL_24
0x4005bdb	        0x8b542410	            mov edx, dword [rsp + 0x10] 	      2965	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	CALL_24
0x4005bdf	      0xe967ffffff	                           jmp 0x4005b4b	      2965	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	CALL_24
0x4005be4	        0x488d7701	                      lea rsi, [rdi + 1]	      2980	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15
0x4005be8	          0x4c89d7	                            mov rdi, r10	      2983	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15	CALL_26
0x4005beb	      0x4c89542410	             mov qword [rsp + 0x10], r10	      2983	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15	CALL_26
0x4005bf0	        0x49897278	             mov qword [r10 + 0x78], rsi	      2980	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15
0x4005bf4	      0xe800000000	                          call 0x4005bf9	      2983	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15	CALL_26
0x4005bf9	      0x4c8b542410	            mov r10, qword [rsp + 0x10] 	      2982	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15
0x4005bfe	            0x31d2	                            xor edx, edx	      2982	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15
0x4005c00	    0x418982840000	             mov dword [r10 + 0x84], eax	      2982	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15
0x4005c07	    0x4c8b15000000	            mov r10, qword [0x04005c0e] 	      2982	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15
0x4005c0e	        0x498b7a78	            mov rdi, qword [r10 + 0x78] 	      2982	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15
0x4005c12	      0xe911ffffff	                           jmp 0x4005b28	      2982	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	FOR_2	ELSE_15
0x4005c17	    0x8b3d00000000	            mov edi, dword [0x04005c1d] 	      2847	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28
0x4005c1d	    0x4c8b15000000	            mov r10, qword [0x04005c24] 	      2847	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28
0x4005c24	            0x85ff	                           test edi, edi	      2847	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28
0x4005c26	            0x7432	                            je 0x4005c5a	      2847	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28
0x4005c28	          0x4d39d5	                            cmp r13, r10	      2850	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28	IF_29
0x4005c2b	     0xf84adfbffff	                            je 0x40057de	      2850	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28	IF_29
0x4005c31	      0xb804010000	                          mov eax, 0x104	      2853	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28	ELSE_6
0x4005c36	      0xe9f8faffff	                           jmp 0x4005733	      2853	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28	ELSE_6
0x4005c3b	    0x8b1500000000	            mov edx, dword [0x04005c41] 	      2839	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26
0x4005c41	            0x85d2	                           test edx, edx	      2839	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26
0x4005c43	     0xf85e5faffff	                           jne 0x400572e	      2839	ui.c	FUNCTION_75	ELSE_1	IF_13	IF_26
0x4005c49	    0x8b0500000000	            mov eax, dword [0x04005c4f] 	      2847	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28
0x4005c4f	            0x85c0	                           test eax, eax	      2847	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28
0x4005c51	     0xf8587fbffff	                           jne 0x40057de	      2847	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28
0x4005c57	          0x4d89ea	                            mov r10, r13	      2847	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_5	IF_28
0x4005c5a	        0x498b4278	            mov rax, qword [r10 + 0x78] 	      2856	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_6
0x4005c5e	        0x49894238	             mov qword [r10 + 0x38], rax	      2856	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_6
0x4005c62	    0x488905000000	            mov qword [0x04005c69], rax 	      2859	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_6
0x4005c69	    0x418b82840000	            mov eax, dword [r10 + 0x84] 	      2861	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_6
0x4005c70	    0x890500000000	            mov dword [0x04005c76], eax 	      2861	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_6
0x4005c76	        0x8b442424	            mov eax, dword [rsp + 0x24] 	      2861	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_6
0x4005c7a	    0x458b8a540200	           mov r9d, dword [r10 + 0x254] 	      3012	ui.c	FUNCTION_75	IF_48
0x4005c81	            0x4898	                                    cdqe	      3012	ui.c	FUNCTION_75	IF_48
0x4005c83	          0x4585c9	                           test r9d, r9d	      3012	ui.c	FUNCTION_75	IF_48
0x4005c86	     0xf84d0000000	                            je 0x4005d5c	      3012	ui.c	FUNCTION_75	IF_48
0x4005c8c	    0x496392ac0000	         movsxd rdx, dword [r10 + 0xac] 	      3012	ui.c	FUNCTION_75	IF_48
0x4005c93	    0x492b92c80100	            sub rdx, qword [r10 + 0x1c8]	      3012	ui.c	FUNCTION_75	IF_48
0x4005c9a	          0x4839d0	                            cmp rax, rdx	      3012	ui.c	FUNCTION_75	IF_48
0x4005c9d	           0xf9cc0	                                 setl al	      3012	ui.c	FUNCTION_75	IF_48
0x4005ca0	            0x84c0	                             test al, al	      3019	ui.c	FUNCTION_75	IF_48
0x4005ca2	      0xb820000000	                           mov eax, 0x20	      3019	ui.c	FUNCTION_75	IF_48
0x4005ca7	       0xf44442418	           cmove eax, dword [rsp + 0x18]	      3019	ui.c	FUNCTION_75	IF_48
0x4005cac	        0x498d4a38	                   lea rcx, [r10 + 0x38]	      3023	ui.c	FUNCTION_75	IF_49	CALL_29
0x4005cb0	      0x488d542424	                   lea rdx, [rsp + 0x24]	      3023	ui.c	FUNCTION_75	IF_49	CALL_29
0x4005cb5	      0x488d742420	                   lea rsi, [rsp + 0x20]	      3023	ui.c	FUNCTION_75	IF_49	CALL_29
0x4005cba	          0x4c89d7	                            mov rdi, r10	      3023	ui.c	FUNCTION_75	IF_49	CALL_29
0x4005cbd	        0x89442418	             mov dword [rsp + 0x18], eax	      3019	ui.c	FUNCTION_75	IF_48
0x4005cc1	      0xe800000000	                          call 0x4005cc6	      3023	ui.c	FUNCTION_75	IF_49	CALL_29
0x4005cc6	            0x85c0	                           test eax, eax	      3023	ui.c	FUNCTION_75	IF_49	CALL_29
0x4005cc8	            0x740a	                            je 0x4005cd4	      3023	ui.c	FUNCTION_75	IF_49	CALL_29
0x4005cca	    0xc70500000000	               mov dword [0x04005cd4], 1	      3024	ui.c	FUNCTION_75	IF_49
0x4005cd4	        0x4183e602	                             and r14d, 2	      3027	ui.c	FUNCTION_75	IF_50
0x4005cd8	            0x740e	                            je 0x4005ce8	      3027	ui.c	FUNCTION_75	IF_50
0x4005cda	    0x8b3d00000000	            mov edi, dword [0x04005ce0] 	      3027	ui.c	FUNCTION_75	IF_50
0x4005ce0	            0x85ff	                           test edi, edi	      3027	ui.c	FUNCTION_75	IF_50
0x4005ce2	     0xf84fe020000	                            je 0x4005fe6	      3027	ui.c	FUNCTION_75	IF_50
0x4005ce8	    0x488b05000000	            mov rax, qword [0x04005cef] 	      3040	ui.c	FUNCTION_75
0x4005cef	        0x8b7c2424	            mov edi, dword [rsp + 0x24] 	      3040	ui.c	FUNCTION_75
0x4005cf3	    0xc7404c000000	               mov dword [rax + 0x4c], 0	      3041	ui.c	FUNCTION_75
0x4005cfa	          0x897848	             mov dword [rax + 0x48], edi	      3040	ui.c	FUNCTION_75
0x4005cfd	      0xe800000000	                          call 0x4005d02	      3042	ui.c	FUNCTION_75	IF_52	CALL_33
0x4005d02	            0x85c0	                           test eax, eax	      3042	ui.c	FUNCTION_75	IF_52	CALL_33
0x4005d04	            0x7549	                           jne 0x4005d4f	      3042	ui.c	FUNCTION_75	IF_52	CALL_33
0x4005d06	          0x4885db	                           test rbx, rbx	      3044	ui.c	FUNCTION_75	IF_52	IF_53
0x4005d09	            0x7406	                            je 0x4005d11	      3044	ui.c	FUNCTION_75	IF_52	IF_53
0x4005d0b	    0xc70301000000	                      mov dword [rbx], 1	      3045	ui.c	FUNCTION_75	IF_52	IF_53
0x4005d11	    0xc70500000000	               mov dword [0x04005d1b], 1	      3046	ui.c	FUNCTION_75	IF_52
0x4005d1b	    0x4c392d000000	            cmp qword [0x04005d22], r13 	      3052	ui.c	FUNCTION_75	IF_55
0x4005d22	     0xf8484020000	                            je 0x4005fac	      3052	ui.c	FUNCTION_75	IF_55
0x4005d28	      0xb801030000	                          mov eax, 0x301	      3052	ui.c	FUNCTION_75	IF_55
0x4005d2d	      0xb901050000	                          mov ecx, 0x501	      3052	ui.c	FUNCTION_75	IF_55
0x4005d32	      0xba01010000	                          mov edx, 0x101	      3054	ui.c	FUNCTION_75	IF_55
0x4005d37	        0x8b5c2418	            mov ebx, dword [rsp + 0x18] 	      3057	ui.c	FUNCTION_75	IF_56
0x4005d3b	          0x83fb2b	                           cmp ebx, 0x2b	      3057	ui.c	FUNCTION_75	IF_56
0x4005d3e	     0xf8461020000	                            je 0x4005fa5	      3057	ui.c	FUNCTION_75	IF_56
0x4005d44	          0x83fb20	                           cmp ebx, 0x20	      3059	ui.c	FUNCTION_75	ELSE_18	IF_57
0x4005d47	           0xf44c2	                          cmove eax, edx	      3059	ui.c	FUNCTION_75	ELSE_18	IF_57
0x4005d4a	      0xe9e4f9ffff	                           jmp 0x4005733	      3059	ui.c	FUNCTION_75	ELSE_18	IF_57
0x4005d4f	          0x4885db	                           test rbx, rbx	      3048	ui.c	FUNCTION_75	ELSE_17	IF_54
0x4005d52	            0x74c7	                            je 0x4005d1b	      3048	ui.c	FUNCTION_75	ELSE_17	IF_54
0x4005d54	    0xc70300000000	                      mov dword [rbx], 0	      3049	ui.c	FUNCTION_75	ELSE_17	IF_54
0x4005d5a	            0xebbf	                           jmp 0x4005d1b	      3049	ui.c	FUNCTION_75	ELSE_17	IF_54
0x4005d5c	    0x448b05000000	            mov r8d, dword [0x04005d63] 	      3012	ui.c	FUNCTION_75	IF_48
0x4005d63	            0x31d2	                            xor edx, edx	      3012	ui.c	FUNCTION_75	IF_48
0x4005d65	          0x4585c0	                           test r8d, r8d	      3012	ui.c	FUNCTION_75	IF_48
0x4005d68	           0xf95c2	                                setne dl	      3012	ui.c	FUNCTION_75	IF_48
0x4005d6b	    0x490392c80100	            add rdx, qword [r10 + 0x1c8]	      3012	ui.c	FUNCTION_75	IF_48
0x4005d72	          0x4839d0	                            cmp rax, rdx	      3012	ui.c	FUNCTION_75	IF_48
0x4005d75	           0xf9dc0	                                setge al	      3012	ui.c	FUNCTION_75	IF_48
0x4005d78	      0xe923ffffff	                           jmp 0x4005ca0	      3012	ui.c	FUNCTION_75	IF_48
0x4005d7d	      0xe800000000	                          call 0x4005d82	      2901	ui.c	FUNCTION_75	ELSE_10	IF_35	CALL_15
0x4005d82	      0xbf14000000	                           mov edi, 0x14	      2902	ui.c	FUNCTION_75	ELSE_10	IF_35	CALL_16
0x4005d87	      0xe800000000	                          call 0x4005d8c	      2902	ui.c	FUNCTION_75	ELSE_10	IF_35	CALL_16
0x4005d8c	    0x4c8b15000000	            mov r10, qword [0x04005d93] 	      2902	ui.c	FUNCTION_75	ELSE_10	IF_35	CALL_16
0x4005d93	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	      2902	ui.c	FUNCTION_75	ELSE_10	IF_35	CALL_16
0x4005d97	      0xe92efdffff	                           jmp 0x4005aca	      2902	ui.c	FUNCTION_75	ELSE_10	IF_35	CALL_16
0x4005d9c	    0x8b0500000000	            mov eax, dword [0x04005da2] 	      2788	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4005da2	            0x85c0	                           test eax, eax	      2788	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4005da4	     0xf8579fbffff	                           jne 0x4005923	      2788	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4005daa	    0x448b1d000000	           mov r11d, dword [0x04005db1] 	      2788	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4005db1	          0x4585db	                         test r11d, r11d	      2788	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4005db4	     0xf8569fbffff	                           jne 0x4005923	      2788	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4005dba	    0x458b97540200	          mov r10d, dword [r15 + 0x254] 	      2786	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4005dc1	          0x4585d2	                         test r10d, r10d	      2786	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4005dc4	     0xf8486020000	                            je 0x4006050	      2786	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4005dca	    0x496387ac0000	         movsxd rax, dword [r15 + 0xac] 	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4005dd1	      0x4863542424	         movsxd rdx, dword [rsp + 0x24] 	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4005dd6	    0x492b87c80100	            sub rax, qword [r15 + 0x1c8]	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4005ddd	          0x4839c2	                            cmp rdx, rax	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4005de0	     0xf8d3dfbffff	                           jge 0x4005923	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4005de6	        0x41f6c610	                         test r14b, 0x10	      2800	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4005dea	     0xf8433fbffff	                            je 0x4005923	      2800	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4005df0	      0xe91ffbffff	                           jmp 0x4005914	      2800	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4005df5	           0xf1f00	                         nop dword [rax]	      2800	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4005df8	          0x4c89d7	                            mov rdi, r10	      2988	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	CALL_27
0x4005dfb	            0x31f6	                            xor esi, esi	      2988	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	CALL_27
0x4005dfd	      0xe800000000	                          call 0x4005e02	      2988	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	CALL_27
0x4005e02	      0xbf0a000000	                            mov edi, 0xa	      2990	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	CALL_28
0x4005e07	      0xe800000000	                          call 0x4005e0c	      2990	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41	CALL_28
0x4005e0c	    0x4c8b15000000	            mov r10, qword [0x04005e13] 	      2991	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x4005e13	    0x418b82a00000	            mov eax, dword [r10 + 0xa0] 	      2993	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x4005e1a	    0x4183a2b40000	      and dword [r10 + 0xb4], 0xffffff8e	      2991	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x4005e22	          0x83e801	                              sub eax, 1	      2993	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x4005e25	        0x89442420	             mov dword [rsp + 0x20], eax	      2993	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x4005e29	        0x8b442424	            mov eax, dword [rsp + 0x24] 	      2993	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x4005e2d	      0xe948feffff	                           jmp 0x4005c7a	      2993	ui.c	FUNCTION_75	ELSE_10	ELSE_13	IF_41
0x4005e32	            0x85d2	                           test edx, edx	      2995	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46
0x4005e34	     0xf8540feffff	                           jne 0x4005c7a	      2995	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46
0x4005e3a	    0x448b1d000000	           mov r11d, dword [0x04005e41] 	      3000	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4005e41	          0x4585db	                         test r11d, r11d	      3000	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4005e44	     0xf8e30feffff	                           jle 0x4005c7a	      3000	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4005e4a	        0x498b4a08	                mov rcx, qword [r10 + 8]	      3002	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4005e4e	        0x498b5238	            mov rdx, qword [r10 + 0x38] 	      3001	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4005e52	          0x483b11	                    cmp rdx, qword [rcx]	      3001	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4005e55	     0xf851ffeffff	                           jne 0x4005c7a	      3001	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4005e5b	        0x493b5278	            cmp rdx, qword [r10 + 0x78] 	      3003	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4005e5f	     0xf8515feffff	                           jne 0x4005c7a	      3003	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4005e65	    0x4181a2b40000	      and dword [r10 + 0xb4], 0xffffff7f	      3004	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4005e70	      0xe905feffff	                           jmp 0x4005c7a	      3004	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4005e75	           0xf1f00	                         nop dword [rax]	      3004	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4005e78	        0x498b7278	            mov rsi, qword [r10 + 0x78] 	      3004	ui.c	FUNCTION_75	ELSE_10	ELSE_16	IF_46	IF_47
0x4005e7c	    0xc74424100100	               mov dword [rsp + 0x10], 1	      2918	ui.c	FUNCTION_75	ELSE_10	IF_37
0x4005e84	          0x4531ff	                          xor r15d, r15d	      2918	ui.c	FUNCTION_75	ELSE_10	IF_37
0x4005e87	            0xeb14	                           jmp 0x4005e9d	      2918	ui.c	FUNCTION_75	ELSE_10	IF_37
0x4005e89	    0x418382840000	               add dword [r10 + 0x84], 1	      2937	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40
0x4005e91	        0x498b7278	            mov rsi, qword [r10 + 0x78] 	      2937	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40
0x4005e95	    0xc74424100000	               mov dword [rsp + 0x10], 0	      2937	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40
0x4005e9d	        0x4883fe01	                              cmp rsi, 1	      2921	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1
0x4005ea1	     0xf8eb0000000	                           jle 0x4005f57	      2921	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1
0x4005ea7	    0x418b82840000	            mov eax, dword [r10 + 0x84] 	      2924	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_38	CALL_18
0x4005eae	          0x4c89d7	                            mov rdi, r10	      2924	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_38	CALL_18
0x4005eb1	        0x8944241c	             mov dword [rsp + 0x1c], eax	      2924	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_38	CALL_18
0x4005eb5	      0xe800000000	                          call 0x4005eba	      2924	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_38	CALL_18
0x4005eba	        0x3944241c	            cmp dword [rsp + 0x1c], eax 	      2924	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_38	CALL_18
0x4005ebe	            0x7d74	                           jge 0x4005f34	      2924	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_38	CALL_18
0x4005ec0	        0x4183c701	                             add r15d, 1	      2925	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_38
0x4005ec4	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      2929	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_39
0x4005ec8	            0x85c0	                           test eax, eax	      2929	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_39
0x4005eca	            0x750b	                           jne 0x4005ed7	      2929	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_39
0x4005ecc	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      2929	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_39
0x4005ed0	            0xf7d8	                                 neg eax	      2929	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_39
0x4005ed2	          0x4139c7	                           cmp r15d, eax	      2929	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_39
0x4005ed5	            0x7f79	                            jg 0x4005f50	      2929	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_39
0x4005ed7	    0x488b05000000	            mov rax, qword [0x04005ede] 	      2933	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_20
0x4005ede	            0x31d2	                            xor edx, edx	      2933	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_20
0x4005ee0	        0x488b7878	            mov rdi, qword [rax + 0x78] 	      2933	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_20
0x4005ee4	        0x488d7078	                   lea rsi, [rax + 0x78]	      2933	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_20
0x4005ee8	      0xe800000000	                          call 0x4005eed	      2933	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_20
0x4005eed	    0x488b3d000000	            mov rdi, qword [0x04005ef4] 	      2936	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40	CALL_21
0x4005ef4	    0x8b8784000000	            mov eax, dword [rdi + 0x84] 	      2936	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40	CALL_21
0x4005efa	        0x488b7778	            mov rsi, qword [rdi + 0x78] 	      2936	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40	CALL_21
0x4005efe	        0x89442410	             mov dword [rsp + 0x10], eax	      2936	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40	CALL_21
0x4005f02	      0xe800000000	                          call 0x4005f07	      2936	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40	CALL_21
0x4005f07	        0x39442410	            cmp dword [rsp + 0x10], eax 	      2936	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40	CALL_21
0x4005f0b	    0x4c8b15000000	            mov r10, qword [0x04005f12] 	      2937	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40
0x4005f12	     0xf8c71ffffff	                            jl 0x4005e89	      2936	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	IF_40	CALL_21
0x4005f18	        0x498b4278	            mov rax, qword [r10 + 0x78] 	      2941	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	ELSE_12
0x4005f1c	    0x41c782840000	               mov dword [r10 + 0x84], 0	      2943	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	ELSE_12
0x4005f27	        0x488d70ff	                      lea rsi, [rax - 1]	      2941	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	ELSE_12
0x4005f2b	        0x49897278	             mov qword [r10 + 0x78], rsi	      2941	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	ELSE_12
0x4005f2f	      0xe961ffffff	                           jmp 0x4005e95	      2941	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	ELSE_12
0x4005f34	    0x488b05000000	            mov rax, qword [0x04005f3b] 	      2928	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_19
0x4005f3b	        0x488b7878	            mov rdi, qword [rax + 0x78] 	      2928	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_19
0x4005f3f	        0x4883ef01	                              sub rdi, 1	      2928	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_19
0x4005f43	      0xe800000000	                          call 0x4005f48	      2928	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_19
0x4005f48	          0x4101c7	                           add r15d, eax	      2928	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_19
0x4005f4b	      0xe974ffffff	                           jmp 0x4005ec4	      2928	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_19
0x4005f50	    0x4c8b15000000	            mov r10, qword [0x04005f57] 	      2928	ui.c	FUNCTION_75	ELSE_10	IF_37	FOR_1	CALL_19
0x4005f57	          0x4c89d7	                            mov rdi, r10	      2948	ui.c	FUNCTION_75	ELSE_10	IF_37	CALL_22
0x4005f5a	            0x31f6	                            xor esi, esi	      2948	ui.c	FUNCTION_75	ELSE_10	IF_37	CALL_22
0x4005f5c	      0xe800000000	                          call 0x4005f61	      2948	ui.c	FUNCTION_75	ELSE_10	IF_37	CALL_22
0x4005f61	    0x488b05000000	            mov rax, qword [0x04005f68] 	      2950	ui.c	FUNCTION_75	ELSE_10	IF_37
0x4005f68	      0xbf0a000000	                            mov edi, 0xa	      2952	ui.c	FUNCTION_75	ELSE_10	IF_37	CALL_23
0x4005f6d	    0x83a0b4000000	      and dword [rax + 0xb4], 0xffffff8e	      2950	ui.c	FUNCTION_75	ELSE_10	IF_37
0x4005f74	      0xe800000000	                          call 0x4005f79	      2952	ui.c	FUNCTION_75	ELSE_10	IF_37	CALL_23
0x4005f79	    0xc74424200000	               mov dword [rsp + 0x20], 0	      2953	ui.c	FUNCTION_75	ELSE_10	IF_37
0x4005f81	    0x4c8b15000000	            mov r10, qword [0x04005f88] 	      2953	ui.c	FUNCTION_75	ELSE_10	IF_37
0x4005f88	        0x8b442424	            mov eax, dword [rsp + 0x24] 	      2953	ui.c	FUNCTION_75	ELSE_10	IF_37
0x4005f8c	      0xe9e9fcffff	                           jmp 0x4005c7a	      2953	ui.c	FUNCTION_75	ELSE_10	IF_37
0x4005f91	      0xe800000000	                          call 0x4005f96	      2703	ui.c	FUNCTION_75	IF_3	IF_9	CALL_3
0x4005f96	      0xbf14000000	                           mov edi, 0x14	      2704	ui.c	FUNCTION_75	IF_3	IF_9	CALL_4
0x4005f9b	      0xe800000000	                          call 0x4005fa0	      2704	ui.c	FUNCTION_75	IF_3	IF_9	CALL_4
0x4005fa0	      0xe97cfaffff	                           jmp 0x4005a21	      2704	ui.c	FUNCTION_75	IF_3	IF_9	CALL_4
0x4005fa5	            0x89c8	                            mov eax, ecx	      3058	ui.c	FUNCTION_75	IF_56
0x4005fa7	      0xe987f7ffff	                           jmp 0x4005733	      3058	ui.c	FUNCTION_75	IF_56
0x4005fac	        0x4d396538	            cmp qword [r13 + 0x38], r12 	      3052	ui.c	FUNCTION_75	IF_55
0x4005fb0	     0xf8572fdffff	                           jne 0x4005d28	      3052	ui.c	FUNCTION_75	IF_55
0x4005fb6	        0x41396d40	            cmp dword [r13 + 0x40], ebp 	      3053	ui.c	FUNCTION_75	IF_55
0x4005fba	      0xba01020000	                          mov edx, 0x201	      3053	ui.c	FUNCTION_75	IF_55
0x4005fbf	      0xb801030000	                          mov eax, 0x301	      3053	ui.c	FUNCTION_75	IF_55
0x4005fc4	      0xb901040000	                          mov ecx, 0x401	      3053	ui.c	FUNCTION_75	IF_55
0x4005fc9	      0xbe01000000	                              mov esi, 1	      3053	ui.c	FUNCTION_75	IF_55
0x4005fce	           0xf44c2	                          cmove eax, edx	      3053	ui.c	FUNCTION_75	IF_55
0x4005fd1	      0xba01050000	                          mov edx, 0x501	      3053	ui.c	FUNCTION_75	IF_55
0x4005fd6	           0xf45ca	                         cmovne ecx, edx	      3053	ui.c	FUNCTION_75	IF_55
0x4005fd9	      0xba01010000	                          mov edx, 0x101	      3053	ui.c	FUNCTION_75	IF_55
0x4005fde	           0xf44d6	                          cmove edx, esi	      3053	ui.c	FUNCTION_75	IF_55
0x4005fe1	      0xe951fdffff	                           jmp 0x4005d37	      3053	ui.c	FUNCTION_75	IF_55
0x4005fe6	      0xe800000000	                          call 0x4005feb	      3029	ui.c	FUNCTION_75	IF_50	CALL_30
0x4005feb	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      3030	ui.c	FUNCTION_75	IF_50
0x4005fef	      0xbf6f000000	                           mov edi, 0x6f	      3034	ui.c	FUNCTION_75	IF_50	CALL_31
0x4005ff4	    0x4c8925000000	            mov qword [0x04005ffb], r12 	      3030	ui.c	FUNCTION_75	IF_50
0x4005ffb	    0x892d00000000	            mov dword [0x04006001], ebp 	      3030	ui.c	FUNCTION_75	IF_50
0x4006001	    0xc70500000000	               mov dword [0x0400600b], 1	      3031	ui.c	FUNCTION_75	IF_50
0x400600b	    0xc70500000000	               mov dword [0x04006015], 1	      3032	ui.c	FUNCTION_75	IF_50
0x4006015	    0x890500000000	            mov dword [0x0400601b], eax 	      3030	ui.c	FUNCTION_75	IF_50
0x400601b	      0xe800000000	                          call 0x4006020	      3034	ui.c	FUNCTION_75	IF_50	CALL_31
0x4006020	      0xe800000000	                          call 0x4006025	      3035	ui.c	FUNCTION_75	IF_50	CALL_32
0x4006025	    0x8b3500000000	            mov esi, dword [0x0400602b] 	      3036	ui.c	FUNCTION_75	IF_50	IF_51
0x400602b	            0x85f6	                           test esi, esi	      3036	ui.c	FUNCTION_75	IF_50	IF_51
0x400602d	     0xf84b5fcffff	                            je 0x4005ce8	      3036	ui.c	FUNCTION_75	IF_50	IF_51
0x4006033	    0x8b0d00000000	            mov ecx, dword [0x04006039] 	      3036	ui.c	FUNCTION_75	IF_50	IF_51
0x4006039	            0x85c9	                           test ecx, ecx	      3036	ui.c	FUNCTION_75	IF_50	IF_51
0x400603b	     0xf85a7fcffff	                           jne 0x4005ce8	      3036	ui.c	FUNCTION_75	IF_50	IF_51
0x4006041	    0xc70500000000	               mov dword [0x0400604b], 1	      3037	ui.c	FUNCTION_75	IF_50	IF_51
0x400604b	      0xe998fcffff	                           jmp 0x4005ce8	      3037	ui.c	FUNCTION_75	IF_50	IF_51
0x4006050	    0x8b0500000000	            mov eax, dword [0x04006056] 	      2796	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4006056	          0x4c39fa	                            cmp rdx, r15	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4006059	      0x48634c2424	         movsxd rcx, dword [rsp + 0x24] 	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x400605e	        0x400f95c6	                               setne sil	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4006062	            0x85c0	                           test eax, eax	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4006064	           0xf95c2	                                setne dl	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4006067	             0x9f2	                             or edx, esi	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4006069	           0xfb6d2	                           movzx edx, dl	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x400606c	    0x490397c80100	            add rdx, qword [r15 + 0x1c8]	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4006073	          0x4839d1	                            cmp rcx, rdx	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4006076	     0xf8cadf8ffff	                            jl 0x4005929	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x400607c	      0xe965fdffff	                           jmp 0x4005de6	      2790	ui.c	FUNCTION_75	ELSE_1	IF_13	ELSE_4	IF_21
0x4006081	      0xe800000000	                          call 0x4006086	      3064	ui.c	FUNCTION_75
0x4006086	        0x89542420	             mov dword [rsp + 0x20], edx	      3064	ui.c	FUNCTION_75
0x400608a	      0xe954f6ffff	                           jmp 0x40056e3	      3064	ui.c	FUNCTION_75
0x400608f	      0x4489542424	            mov dword [rsp + 0x24], r10d	      3064	ui.c	FUNCTION_75
0x4006094	      0xe941f6ffff	                           jmp 0x40056da	      3064	ui.c	FUNCTION_75
add_to_input_buf_csi	IF,1:DO,0:functions,0:FOR,1:CALL,2:SWITCH,0:WHILE,0:ELSE,0	42
0x4004490	            0x85f6	                           test esi, esi	      1720	ui.c	FUNCTION_51	FOR_1
0x4004492	            0x7e57	                           jle 0x40044eb	      1720	ui.c	FUNCTION_51	FOR_1
0x4004494	    0x8b0500000000	            mov eax, dword [0x0400449a] 	      1720	ui.c	FUNCTION_51	FOR_1
0x400449a	          0x8d56ff	                      lea edx, [rsi - 1]	      1720	ui.c	FUNCTION_51	FOR_1
0x400449d	            0x31f6	                            xor esi, esi	      1720	ui.c	FUNCTION_51	FOR_1
0x400449f	      0x488d541701	                lea rdx, [rdi + rdx + 1]	      1720	ui.c	FUNCTION_51	FOR_1
0x40044a4	            0x89c1	                            mov ecx, eax	      1720	ui.c	FUNCTION_51	FOR_1
0x40044a6	            0xeb11	                           jmp 0x40044b9	      1720	ui.c	FUNCTION_51	FOR_1
0x40044a8	     0xf1f84000000	                   nop dword [rax + rax]	      1720	ui.c	FUNCTION_51	FOR_1
0x40044b0	        0x4883c701	                              add rdi, 1	      1720	ui.c	FUNCTION_51	FOR_1
0x40044b4	          0x4839d7	                            cmp rdi, rdx	      1720	ui.c	FUNCTION_51	FOR_1
0x40044b7	            0x742d	                            je 0x40044e6	      1720	ui.c	FUNCTION_51	FOR_1
0x40044b9	      0x3d05100000	                         cmp eax, 0x1005	      1698	ui.c	FUNCTION_50	IF_1
0x40044be	            0x7ff0	                            jg 0x40044b0	      1698	ui.c	FUNCTION_50	IF_1
0x40044c0	        0x440fb607	                   movzx r8d, byte [rdi]	      1708	ui.c	FUNCTION_50	WHILE_1
0x40044c4	          0x4863f0	                         movsxd rsi, eax	      1708	ui.c	FUNCTION_50	WHILE_1
0x40044c7	          0x8d4801	                      lea ecx, [rax + 1]	      1708	ui.c	FUNCTION_50	WHILE_1
0x40044ca	    0x448886000000	                     mov byte [rsi], r8b	      1708	ui.c	FUNCTION_50	WHILE_1
0x40044d1	          0x803f9b	                    cmp byte [rdi], 0x9b	      1723	ui.c	FUNCTION_51	FOR_1	IF_1
0x40044d4	            0x741a	                            je 0x40044f0	      1723	ui.c	FUNCTION_51	FOR_1	IF_1
0x40044d6	        0x4883c701	                              add rdi, 1	      1723	ui.c	FUNCTION_51	FOR_1	IF_1
0x40044da	            0x89c8	                            mov eax, ecx	      1698	ui.c	FUNCTION_50	IF_1
0x40044dc	      0xbe01000000	                              mov esi, 1	      1698	ui.c	FUNCTION_50	IF_1
0x40044e1	          0x4839d7	                            cmp rdi, rdx	      1720	ui.c	FUNCTION_51	FOR_1
0x40044e4	            0x75d3	                           jne 0x40044b9	      1720	ui.c	FUNCTION_51	FOR_1
0x40044e6	          0x4084f6	                           test sil, sil	      1720	ui.c	FUNCTION_51	FOR_1
0x40044e9	            0x7530	                           jne 0x400451b	      1720	ui.c	FUNCTION_51	FOR_1
0x40044eb	            0xf3c3	                                     ret	      1720	ui.c	FUNCTION_51	FOR_1
0x40044ed	           0xf1f00	                         nop dword [rax]	      1720	ui.c	FUNCTION_51	FOR_1
0x40044f0	    0x81f904100000	                         cmp ecx, 0x1004	      1698	ui.c	FUNCTION_50	IF_1
0x40044f6	            0x7fde	                            jg 0x40044d6	      1698	ui.c	FUNCTION_50	IF_1
0x40044f8	          0x8d7002	                      lea esi, [rax + 2]	      1708	ui.c	FUNCTION_50	WHILE_1
0x40044fb	          0x4863c9	                         movsxd rcx, ecx	      1708	ui.c	FUNCTION_50	WHILE_1
0x40044fe	          0x83c003	                              add eax, 3	      1708	ui.c	FUNCTION_50	WHILE_1
0x4004501	    0xc68100000000	                    mov byte [rcx], 0xfd	      1708	ui.c	FUNCTION_50	WHILE_1
0x4004508	          0x4863ce	                         movsxd rcx, esi	      1708	ui.c	FUNCTION_50	WHILE_1
0x400450b	      0xbe01000000	                              mov esi, 1	      1708	ui.c	FUNCTION_50	WHILE_1
0x4004510	    0xc68100000000	                    mov byte [rcx], 0x51	      1708	ui.c	FUNCTION_50	WHILE_1
0x4004517	            0x89c1	                            mov ecx, eax	      1708	ui.c	FUNCTION_50	WHILE_1
0x4004519	            0xeb95	                           jmp 0x40044b0	      1708	ui.c	FUNCTION_50	WHILE_1
0x400451b	    0x890d00000000	            mov dword [0x04004521], ecx 	      1708	ui.c	FUNCTION_50	WHILE_1
0x4004521	              0xc3	                                     ret	      1708	ui.c	FUNCTION_50	WHILE_1
clip_x11_timestamp_cb	IF,6:DO,0:functions,0:FOR,0:CALL,3:SWITCH,0:WHILE,0:ELSE,1	73
0x4000050	              0x55	                                push rbp	      2081	ui.c	FUNCTION_63
0x4000051	              0x53	                                push rbx	      2081	ui.c	FUNCTION_63
0x4000052	        0x4883ec38	                           sub rsp, 0x38	      2081	ui.c	FUNCTION_63
0x4000056	    0x64488b042528	                mov rax, qword fs:[0x28]	      2081	ui.c	FUNCTION_63
0x400005f	      0x4889442428	             mov qword [rsp + 0x28], rax	      2081	ui.c	FUNCTION_63
0x4000064	            0x31c0	                            xor eax, eax	      2081	ui.c	FUNCTION_63
0x4000066	          0x833a1c	                   cmp dword [rdx], 0x1c	      2090	ui.c	FUNCTION_63	IF_1
0x4000069	    0x48c744242000	               mov qword [rsp + 0x20], 0	      2085	ui.c	FUNCTION_63
0x4000072	            0x741c	                            je 0x4000090	      2090	ui.c	FUNCTION_63	IF_1
0x4000074	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      2119	ui.c	FUNCTION_63	ELSE_1
0x4000079	    0x644833042528	                xor rax, qword fs:[0x28]	      2119	ui.c	FUNCTION_63	ELSE_1
0x4000082	     0xf85dd000000	                           jne 0x4000165	      2119	ui.c	FUNCTION_63	ELSE_1
0x4000088	        0x4883c438	                           add rsp, 0x38	      2119	ui.c	FUNCTION_63	ELSE_1
0x400008c	              0x5b	                                 pop rbx	      2119	ui.c	FUNCTION_63	ELSE_1
0x400008d	              0x5d	                                 pop rbp	      2119	ui.c	FUNCTION_63	ELSE_1
0x400008e	              0xc3	                                     ret	      2119	ui.c	FUNCTION_63	ELSE_1
0x400008f	              0x90	                                     nop	      2119	ui.c	FUNCTION_63	ELSE_1
0x4000090	          0x8b4238	            mov eax, dword [rdx + 0x38] 	      2090	ui.c	FUNCTION_63	IF_1
0x4000093	          0x4889d3	                            mov rbx, rdx	      2090	ui.c	FUNCTION_63	IF_1
0x4000096	            0x85c0	                           test eax, eax	      2090	ui.c	FUNCTION_63	IF_1
0x4000098	            0x75da	                           jne 0x4000074	      2090	ui.c	FUNCTION_63	IF_1
0x400009a	        0x488b5228	            mov rdx, qword [rdx + 0x28] 	      2091	ui.c	FUNCTION_63	IF_1
0x400009e	    0x483b15000000	            cmp rdx, qword [0x040000a5] 	      2091	ui.c	FUNCTION_63	IF_1
0x40000a5	          0x4889fd	                            mov rbp, rdi	      2091	ui.c	FUNCTION_63	IF_1
0x40000a8	            0x7409	                            je 0x40000b3	      2091	ui.c	FUNCTION_63	IF_1
0x40000aa	    0x483b15000000	            cmp rdx, qword [0x040000b1] 	      2092	ui.c	FUNCTION_63	IF_1
0x40000b1	            0x75c1	                           jne 0x4000074	      2092	ui.c	FUNCTION_63	IF_1
0x40000b3	      0x488d442420	                   lea rax, [rsp + 0x20]	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x40000b8	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x40000bc	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x40000c0	          0x4531c9	                            xor r9d, r9d	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x40000c3	          0x4531c0	                            xor r8d, r8d	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x40000c6	            0x31c9	                            xor ecx, ecx	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x40000c8	              0x50	                                push rax	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x40000c9	      0x488d442420	                   lea rax, [rsp + 0x20]	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x40000ce	              0x50	                                push rax	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x40000cf	      0x488d442420	                   lea rax, [rsp + 0x20]	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x40000d4	              0x50	                                push rax	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x40000d5	      0x488d44241c	                   lea rax, [rsp + 0x1c]	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x40000da	              0x50	                                push rax	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x40000db	      0x488d442428	                   lea rax, [rsp + 0x28]	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x40000e0	              0x50	                                push rax	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x40000e1	    0xff3500000000	                 push qword [0x040000e7]	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x40000e7	      0xe800000000	                          call 0x40000ec	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x40000ec	        0x4883c430	                           add rsp, 0x30	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x40000f0	            0x85c0	                           test eax, eax	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x40000f2	            0x7580	                           jne 0x4000074	      2095	ui.c	FUNCTION_63	IF_2	CALL_1
0x40000f4	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      2100	ui.c	FUNCTION_63	IF_3
0x40000f9	          0x4885ff	                           test rdi, rdi	      2100	ui.c	FUNCTION_63	IF_3
0x40000fc	            0x7405	                            je 0x4000103	      2100	ui.c	FUNCTION_63	IF_3
0x40000fe	      0xe800000000	                          call 0x4000103	      2101	ui.c	FUNCTION_63	CALL_2
0x4000103	    0x488b05000000	            mov rax, qword [0x0400010a] 	      2104	ui.c	FUNCTION_63	IF_4
0x400010a	      0x4839442408	                cmp qword [rsp + 8], rax	      2104	ui.c	FUNCTION_63	IF_4
0x400010f	     0xf855fffffff	                           jne 0x4000074	      2104	ui.c	FUNCTION_63	IF_4
0x4000115	      0x837c240420	               cmp dword [rsp + 4], 0x20	      2104	ui.c	FUNCTION_63	IF_4
0x400011a	     0xf8554ffffff	                           jne 0x4000074	      2104	ui.c	FUNCTION_63	IF_4
0x4000120	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x4000124	        0x488b7328	            mov rsi, qword [rbx + 0x28] 	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x4000128	    0x41b900000000	                              mov r9d, 0	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x400012e	    0x41b800000000	                              mov r8d, 0	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x4000134	      0xb900000000	                              mov ecx, 0	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x4000139	          0x4889ef	                            mov rdi, rbp	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x400013c	      0xe800000000	                          call 0x4000141	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x4000141	            0x3c01	                               cmp al, 1	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x4000143	     0xf852bffffff	                           jne 0x4000074	      2108	ui.c	FUNCTION_63	IF_5	CALL_3
0x4000149	    0x488b05000000	            mov rax, qword [0x04000150] 	      2114	ui.c	FUNCTION_63	IF_5	IF_6
0x4000150	        0x48394328	            cmp qword [rbx + 0x28], rax 	      2114	ui.c	FUNCTION_63	IF_5	IF_6
0x4000154	            0x7414	                            je 0x400016a	      2114	ui.c	FUNCTION_63	IF_5	IF_6
0x4000156	    0xc70500000000	               mov dword [0x04000160], 1	      2117	ui.c	FUNCTION_63	IF_5	ELSE_1
0x4000160	      0xe90fffffff	                           jmp 0x4000074	      2117	ui.c	FUNCTION_63	IF_5	ELSE_1
0x4000165	      0xe800000000	                          call 0x400016a	      2119	ui.c	FUNCTION_63	ELSE_1
0x400016a	    0xc70500000000	               mov dword [0x04000174], 1	      2115	ui.c	FUNCTION_63	IF_5	IF_6
0x4000174	      0xe9fbfeffff	                           jmp 0x4000074	      2115	ui.c	FUNCTION_63	IF_5	IF_6
clip_may_redraw_selection	IF,4:DO,0:functions,0:FOR,0:CALL,1:SWITCH,0:WHILE,0:ELSE,0	41
0x40025b0	    0x66833d000000	                cmp word [0x040025b8], 0	      1044	ui.c	FUNCTION_29	IF_1
0x40025b8	            0x742f	                            je 0x40025e9	      1044	ui.c	FUNCTION_29	IF_1
0x40025ba	    0x488b0d000000	            mov rcx, qword [0x040025c1] 	      1045	ui.c	FUNCTION_29	IF_1
0x40025c1	          0x4863c7	                         movsxd rax, edi	      1045	ui.c	FUNCTION_29	IF_1
0x40025c4	          0x4839c8	                            cmp rax, rcx	      1045	ui.c	FUNCTION_29	IF_1
0x40025c7	            0x7c20	                            jl 0x40025e9	      1045	ui.c	FUNCTION_29	IF_1
0x40025c9	    0x4c8b05000000	              mov r8, qword [0x040025d0]	      1046	ui.c	FUNCTION_29	IF_1
0x40025d0	          0x4c39c0	                             cmp rax, r8	      1046	ui.c	FUNCTION_29	IF_1
0x40025d3	            0x7f14	                            jg 0x40025e9	      1046	ui.c	FUNCTION_29	IF_1
0x40025d5	          0x4839c8	                            cmp rax, rcx	      1048	ui.c	FUNCTION_29	IF_1	IF_2
0x40025d8	          0x4189f1	                            mov r9d, esi	      1048	ui.c	FUNCTION_29	IF_1	IF_2
0x40025db	            0x7423	                            je 0x4002600	      1048	ui.c	FUNCTION_29	IF_1	IF_2
0x40025dd	             0x1f2	                            add edx, esi	      1042	ui.c	FUNCTION_29
0x40025df	          0x4c39c0	                             cmp rax, r8	      1050	ui.c	FUNCTION_29	IF_1	IF_3
0x40025e2	            0x740c	                            je 0x40025f0	      1050	ui.c	FUNCTION_29	IF_1	IF_3
0x40025e4	          0x4139d1	                            cmp r9d, edx	      1052	ui.c	FUNCTION_29	IF_1	IF_4
0x40025e7	            0x7c27	                            jl 0x4002610	      1052	ui.c	FUNCTION_29	IF_1	IF_4
0x40025e9	            0xf3c3	                                     ret	      1052	ui.c	FUNCTION_29	IF_1	IF_4
0x40025eb	       0xf1f440000	                   nop dword [rax + rax]	      1052	ui.c	FUNCTION_29	IF_1	IF_4
0x40025f0	    0x8b0500000000	            mov eax, dword [0x040025f6] 	      1050	ui.c	FUNCTION_29	IF_1	IF_3
0x40025f6	            0x39c2	                            cmp edx, eax	      1050	ui.c	FUNCTION_29	IF_1	IF_3
0x40025f8	           0xf4fd0	                          cmovg edx, eax	      1050	ui.c	FUNCTION_29	IF_1	IF_3
0x40025fb	            0xebe7	                           jmp 0x40025e4	      1050	ui.c	FUNCTION_29	IF_1	IF_3
0x40025fd	           0xf1f00	                         nop dword [rax]	      1050	ui.c	FUNCTION_29	IF_1	IF_3
0x4002600	    0x448b0d000000	            mov r9d, dword [0x04002607] 	      1048	ui.c	FUNCTION_29	IF_1	IF_2
0x4002607	          0x4439ce	                            cmp esi, r9d	      1048	ui.c	FUNCTION_29	IF_1	IF_2
0x400260a	        0x440f4dce	                         cmovge r9d, esi	      1048	ui.c	FUNCTION_29	IF_1	IF_2
0x400260e	            0xebcd	                           jmp 0x40025dd	      1048	ui.c	FUNCTION_29	IF_1	IF_2
0x4002610	    0x8b0500000000	            mov eax, dword [0x04002616] 	      1192	ui.c	FUNCTION_34	IF_1
0x4002616	            0x89d1	                            mov ecx, edx	      1154	ui.c	ELSE_4	FUNCTION_33	IF_4	CALL_2
0x4002618	          0x4429c9	                            sub ecx, r9d	      1154	ui.c	ELSE_4	FUNCTION_33	IF_4	CALL_2
0x400261b	            0x85c0	                           test eax, eax	      1192	ui.c	FUNCTION_34	IF_1
0x400261d	            0x7511	                           jne 0x4002630	      1192	ui.c	FUNCTION_34	IF_1
0x400261f	          0x4531c0	                            xor r8d, r8d	      1196	ui.c	FUNCTION_34	CALL_2
0x4002622	      0xba01000000	                              mov edx, 1	      1196	ui.c	FUNCTION_34	CALL_2
0x4002627	          0x4489ce	                            mov esi, r9d	      1196	ui.c	FUNCTION_34	CALL_2
0x400262a	      0xe900000000	                           jmp 0x400262f	      1196	ui.c	FUNCTION_34	CALL_2
0x400262f	              0x90	                                     nop	      1196	ui.c	FUNCTION_34	CALL_2
0x4002630	      0xba01000000	                              mov edx, 1	      1193	ui.c	FUNCTION_34	CALL_1
0x4002635	          0x4489ce	                            mov esi, r9d	      1193	ui.c	FUNCTION_34	CALL_1
0x4002638	      0xe900000000	                           jmp 0x400263d	      1193	ui.c	FUNCTION_34	CALL_1
get_fpos_of_mouse	IF,7:DO,0:functions,0:FOR,0:CALL,3:SWITCH,0:WHILE,0:ELSE,0	126
0x4006130	              0x55	                                push rbp	      3213	ui.c	FUNCTION_78
0x4006131	              0x53	                                push rbx	      3213	ui.c	FUNCTION_78
0x4006132	          0x4889fb	                            mov rbx, rdi	      3213	ui.c	FUNCTION_78
0x4006135	        0x4883ec18	                           sub rsp, 0x18	      3213	ui.c	FUNCTION_78
0x4006139	    0x8b1500000000	            mov edx, dword [0x0400613f] 	      3215	ui.c	FUNCTION_78
0x400613f	    0x8b3d00000000	            mov edi, dword [0x04006145] 	      3216	ui.c	FUNCTION_78
0x4006145	    0x64488b042528	                mov rax, qword fs:[0x28]	      3213	ui.c	FUNCTION_78
0x400614e	      0x4889442408	                mov qword [rsp + 8], rax	      3213	ui.c	FUNCTION_78
0x4006153	            0x31c0	                            xor eax, eax	      3213	ui.c	FUNCTION_78
0x4006155	          0x4189d1	                            mov r9d, edx	      3218	ui.c	FUNCTION_78	IF_1
0x4006158	            0x89f8	                            mov eax, edi	      3218	ui.c	FUNCTION_78	IF_1
0x400615a	          0x891424	                    mov dword [rsp], edx	      3215	ui.c	FUNCTION_78
0x400615d	        0x41c1e91f	                           shr r9d, 0x1f	      3218	ui.c	FUNCTION_78	IF_1
0x4006161	          0xc1e81f	                           shr eax, 0x1f	      3218	ui.c	FUNCTION_78	IF_1
0x4006164	        0x897c2404	                mov dword [rsp + 4], edi	      3216	ui.c	FUNCTION_78
0x4006168	          0x4108c1	                              or r9b, al	      3218	ui.c	FUNCTION_78	IF_1
0x400616b	            0x7423	                            je 0x4006190	      3218	ui.c	FUNCTION_78	IF_1
0x400616d	            0x31c0	                            xor eax, eax	      3219	ui.c	FUNCTION_78	IF_1
0x400616f	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      3248	ui.c	FUNCTION_78
0x4006174	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      3248	ui.c	FUNCTION_78
0x400617d	     0xf856f010000	                           jne 0x40062f2	      3248	ui.c	FUNCTION_78
0x4006183	        0x4883c418	                           add rsp, 0x18	      3248	ui.c	FUNCTION_78
0x4006187	              0x5b	                                 pop rbx	      3248	ui.c	FUNCTION_78
0x4006188	              0x5d	                                 pop rbp	      3248	ui.c	FUNCTION_78
0x4006189	              0xc3	                                     ret	      3248	ui.c	FUNCTION_78
0x400618a	    0x660f1f440000	                    nop word [rax + rax]	      3248	ui.c	FUNCTION_78
0x4006190	    0x4c8b05000000	              mov r8, qword [0x04006197]	      3167	ui.c	FUNCTION_77
0x4006197	    0x488b05000000	            mov rax, qword [0x0400619e] 	      3166	ui.c	FUNCTION_77
0x400619e	          0x4531d2	                          xor r10d, r10d	      3167	ui.c	FUNCTION_77
0x40061a1	    0x412b909c0000	              sub edx, dword [r8 + 0x9c]	      3167	ui.c	FUNCTION_77
0x40061a8	          0x891424	                    mov dword [rsp], edx	      3167	ui.c	FUNCTION_77
0x40061ab	           0xfb608	                   movzx ecx, byte [rax]	      3170	ui.c	FUNCTION_77	FOR_1	IF_1
0x40061ae	            0x84c9	                             test cl, cl	      3170	ui.c	FUNCTION_77	FOR_1	IF_1
0x40061b0	            0x7450	                            je 0x4006202	      3170	ui.c	FUNCTION_77	FOR_1	IF_1
0x40061b2	        0x488b7030	            mov rsi, qword [rax + 0x30] 	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x40061b6	          0x80f901	                               cmp cl, 1	      3172	ui.c	FUNCTION_77	FOR_1	IF_2
0x40061b9	        0x488b4620	            mov rax, qword [rsi + 0x20] 	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x40061bd	     0xf848d000000	                            je 0x4006250	      3172	ui.c	FUNCTION_77	FOR_1	IF_2
0x40061c3	          0x4885c0	                           test rax, rax	      3183	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x40061c6	     0xf84b4000000	                            je 0x4006280	      3183	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x40061cc	          0x8b4e0c	              mov ecx, dword [rsi + 0xc]	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x40061cf	            0x39d1	                            cmp ecx, edx	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x40061d1	            0x7e17	                           jle 0x40061ea	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x40061d3	      0xe9a8000000	                           jmp 0x4006280	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x40061d8	     0xf1f84000000	                   nop dword [rax + rax]	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x40061e0	          0x8b480c	              mov ecx, dword [rax + 0xc]	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x40061e3	            0x39d1	                            cmp ecx, edx	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x40061e5	            0x7f0e	                            jg 0x40061f5	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x40061e7	          0x4889f0	                            mov rax, rsi	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x40061ea	        0x488b7020	            mov rsi, qword [rax + 0x20] 	      3183	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x40061ee	            0x29ca	                            sub edx, ecx	      3187	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x40061f0	          0x4885f6	                           test rsi, rsi	      3183	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x40061f3	            0x75eb	                           jne 0x40061e0	      3183	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3
0x40061f5	           0xfb608	                   movzx ecx, byte [rax]	      3170	ui.c	FUNCTION_77	FOR_1	IF_1
0x40061f8	    0x41ba01000000	                             mov r10d, 1	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x40061fe	            0x84c9	                             test cl, cl	      3170	ui.c	FUNCTION_77	FOR_1	IF_1
0x4006200	            0x75b0	                           jne 0x40061b2	      3170	ui.c	FUNCTION_77	FOR_1	IF_1
0x4006202	          0x4584c9	                           test r9b, r9b	      3170	ui.c	FUNCTION_77	FOR_1	IF_1
0x4006205	     0xf85ec000000	                           jne 0x40062f7	      3170	ui.c	FUNCTION_77	FOR_1	IF_1
0x400620b	          0x4584d2	                         test r10b, r10b	      3170	ui.c	FUNCTION_77	FOR_1	IF_1
0x400620e	     0xf85ec000000	                           jne 0x4006300	      3170	ui.c	FUNCTION_77	FOR_1	IF_1
0x4006214	        0x488b6838	            mov rbp, qword [rax + 0x38] 	      3170	ui.c	FUNCTION_77	FOR_1	IF_1
0x4006218	          0x4c39c5	                             cmp rbp, r8	      3194	ui.c	FUNCTION_77	IF_5
0x400621b	            0x7415	                            je 0x4006232	      3194	ui.c	FUNCTION_77	IF_5
0x400621d	           0xf1f00	                         nop dword [rax]	      3194	ui.c	FUNCTION_77	IF_5
0x4006220	        0x4d8b4020	               mov r8, qword [r8 + 0x20]	      3193	ui.c	FUNCTION_77	CALL_1
0x4006224	          0x4d85c0	                             test r8, r8	      3193	ui.c	FUNCTION_77	CALL_1
0x4006227	     0xf8440ffffff	                            je 0x400616d	      3193	ui.c	FUNCTION_77	CALL_1
0x400622d	          0x4c39c5	                             cmp rbp, r8	      3194	ui.c	FUNCTION_77	IF_5
0x4006230	            0x75ee	                           jne 0x4006220	      3194	ui.c	FUNCTION_77	IF_5
0x4006232	          0x8b0424	                    mov eax, dword [rsp]	      3197	ui.c	FUNCTION_77	IF_5
0x4006235	    0x2b85a8010000	            sub eax, dword [rbp + 0x1a8]	      3197	ui.c	FUNCTION_77	IF_5
0x400623b	    0x3985a0000000	            cmp dword [rbp + 0xa0], eax 	      3228	ui.c	FUNCTION_78	IF_3
0x4006241	          0x890424	                    mov dword [rsp], eax	      3197	ui.c	FUNCTION_77	IF_5
0x4006244	            0x7f42	                            jg 0x4006288	      3228	ui.c	FUNCTION_78	IF_3
0x4006246	      0xb802000000	                              mov eax, 2	      3229	ui.c	FUNCTION_78	IF_3
0x400624b	      0xe91fffffff	                           jmp 0x400616f	      3229	ui.c	FUNCTION_78	IF_3
0x4006250	          0x4885c0	                           test rax, rax	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4006253	            0x742b	                            je 0x4006280	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4006255	          0x8b4e04	                mov ecx, dword [rsi + 4]	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x4006258	            0x39cf	                            cmp edi, ecx	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x400625a	            0x7d0e	                           jge 0x400626a	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x400625c	            0xeb22	                           jmp 0x4006280	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x400625e	            0x6690	                                     nop	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x4006260	          0x8b4804	                mov ecx, dword [rax + 4]	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x4006263	            0x39f9	                            cmp ecx, edi	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x4006265	            0x7f0e	                            jg 0x4006275	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x4006267	          0x4889f0	                            mov rax, rsi	      3176	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2	IF_3
0x400626a	        0x488b7020	            mov rsi, qword [rax + 0x20] 	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x400626e	            0x29cf	                            sub edi, ecx	      3178	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4006270	          0x4885f6	                           test rsi, rsi	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4006273	            0x75eb	                           jne 0x4006260	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4006275	    0x41b901000000	                              mov r9d, 1	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x400627b	      0xe92bffffff	                           jmp 0x40061ab	      3174	ui.c	FUNCTION_77	FOR_1	IF_2	FOR_2
0x4006280	          0x4889f0	                            mov rax, rsi	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x4006283	      0xe923ffffff	                           jmp 0x40061ab	      3185	ui.c	FUNCTION_77	FOR_1	ELSE_1	FOR_3	IF_4
0x4006288	        0x8b7c2404	                mov edi, dword [rsp + 4]	      3230	ui.c	FUNCTION_78	IF_4
0x400628c	    0x39bdac000000	            cmp dword [rbp + 0xac], edi 	      3230	ui.c	FUNCTION_78	IF_4
0x4006292	      0xb804000000	                              mov eax, 4	      3231	ui.c	FUNCTION_78	IF_4
0x4006297	     0xf8ed2feffff	                           jle 0x400616f	      3230	ui.c	FUNCTION_78	IF_4
0x400629d	    0x48392d000000	            cmp qword [0x040062a4], rbp 	      3233	ui.c	FUNCTION_78	IF_5
0x40062a4	     0xf85c3feffff	                           jne 0x400616d	      3233	ui.c	FUNCTION_78	IF_5
0x40062aa	      0x488d542404	                      lea rdx, [rsp + 4]	      3237	ui.c	FUNCTION_78	IF_6	CALL_2
0x40062af	          0x4889d9	                            mov rcx, rbx	      3237	ui.c	FUNCTION_78	IF_6	CALL_2
0x40062b2	          0x4889e6	                            mov rsi, rsp	      3237	ui.c	FUNCTION_78	IF_6	CALL_2
0x40062b5	          0x4889ef	                            mov rdi, rbp	      3237	ui.c	FUNCTION_78	IF_6	CALL_2
0x40062b8	      0xe800000000	                          call 0x40062bd	      3237	ui.c	FUNCTION_78	IF_6	CALL_2
0x40062bd	            0x85c0	                           test eax, eax	      3237	ui.c	FUNCTION_78	IF_6	CALL_2
0x40062bf	     0xf8581ffffff	                           jne 0x4006246	      3237	ui.c	FUNCTION_78	IF_6	CALL_2
0x40062c5	        0x8b542404	                mov edx, dword [rsp + 4]	      3240	ui.c	FUNCTION_78	CALL_3
0x40062c9	          0x488b33	                    mov rsi, qword [rbx]	      3240	ui.c	FUNCTION_78	CALL_3
0x40062cc	          0x4889ef	                            mov rdi, rbp	      3240	ui.c	FUNCTION_78	CALL_3
0x40062cf	      0xe800000000	                          call 0x40062d4	      3240	ui.c	FUNCTION_78	CALL_3
0x40062d4	            0x85c0	                           test eax, eax	      3242	ui.c	FUNCTION_78	IF_7
0x40062d6	          0x894308	                mov dword [rbx + 8], eax	      3240	ui.c	FUNCTION_78	CALL_3
0x40062d9	            0x7e06	                           jle 0x40062e1	      3242	ui.c	FUNCTION_78	IF_7
0x40062db	          0x83e801	                              sub eax, 1	      3243	ui.c	FUNCTION_78	IF_7
0x40062de	          0x894308	                mov dword [rbx + 8], eax	      3243	ui.c	FUNCTION_78	IF_7
0x40062e1	    0xc7430c000000	                mov dword [rbx + 0xc], 0	      3245	ui.c	FUNCTION_78
0x40062e8	      0xb801000000	                              mov eax, 1	      3247	ui.c	FUNCTION_78
0x40062ed	      0xe97dfeffff	                           jmp 0x400616f	      3247	ui.c	FUNCTION_78
0x40062f2	      0xe800000000	                          call 0x40062f7	      3248	ui.c	FUNCTION_78
0x40062f7	        0x897c2404	                mov dword [rsp + 4], edi	      3248	ui.c	FUNCTION_78
0x40062fb	      0xe90bffffff	                           jmp 0x400620b	      3248	ui.c	FUNCTION_78
0x4006300	          0x891424	                    mov dword [rsp], edx	      3248	ui.c	FUNCTION_78
0x4006303	      0xe90cffffff	                           jmp 0x4006214	      3248	ui.c	FUNCTION_78
clip_x11_lose_ownership_cb	IF,1:DO,0:functions,0:FOR,0:CALL,2:SWITCH,0:WHILE,0:ELSE,1	67
0x4001c40	    0x488b05000000	            mov rax, qword [0x04001c47] 	      2493	ui.c	FUNCTION_68	IF_1
0x4001c47	          0x483906	                    cmp qword [rsi], rax	      2493	ui.c	FUNCTION_68	IF_1
0x4001c4a	     0xf8410010000	                            je 0x4001d60	      2493	ui.c	FUNCTION_68	IF_1
0x4001c50	              0x53	                                push rbx	      2492	ui.c	FUNCTION_68
0x4001c51	      0xbf00000000	                              mov edi, 0	       559	ui.c	FUNCTION_17	CALL_1
0x4001c56	    0x8b1d00000000	            mov ebx, dword [0x04001c5c] 	       552	ui.c	FUNCTION_17
0x4001c5c	      0xe800000000	                          call 0x4001c61	       559	ui.c	FUNCTION_17	CALL_1
0x4001c61	    0x66833d000000	                cmp word [0x04001c69], 0	      1065	ui.c	FUNCTION_30	IF_1
0x4001c69	    0xc70500000000	               mov dword [0x04001c73], 0	       560	ui.c	FUNCTION_17
0x4001c73	     0xf8587000000	                           jne 0x4001d00	      1065	ui.c	FUNCTION_30	IF_1
0x4001c79	    0x8b1500000000	            mov edx, dword [0x04001c7f] 	      1510	ui.c	FUNCTION_40	IF_1
0x4001c7f	      0xbf00000000	                              mov edi, 0	      1511	ui.c	FUNCTION_40	CALL_1
0x4001c84	            0x85d2	                           test edx, edx	      1510	ui.c	FUNCTION_40	IF_1
0x4001c86	            0x7510	                           jne 0x4001c98	      1510	ui.c	FUNCTION_40	IF_1
0x4001c88	      0xe800000000	                          call 0x4001c8d	      1514	ui.c	FUNCTION_40	CALL_2
0x4001c8d	            0x85db	                           test ebx, ebx	       570	ui.c	FUNCTION_17	IF_3	IF_4
0x4001c8f	            0x7510	                           jne 0x4001ca1	       570	ui.c	FUNCTION_17	IF_3	IF_4
0x4001c91	              0x5b	                                 pop rbx	      2497	ui.c	FUNCTION_68
0x4001c92	              0xc3	                                     ret	      2497	ui.c	FUNCTION_68
0x4001c93	       0xf1f440000	                   nop dword [rax + rax]	      2497	ui.c	FUNCTION_68
0x4001c98	      0xe800000000	                          call 0x4001c9d	      1511	ui.c	FUNCTION_40	CALL_1
0x4001c9d	            0x85db	                           test ebx, ebx	       570	ui.c	FUNCTION_17	IF_3	IF_4
0x4001c9f	            0x74f0	                            je 0x4001c91	       570	ui.c	FUNCTION_17	IF_3	IF_4
0x4001ca1	      0xe800000000	                          call 0x4001ca6	       571	ui.c	FUNCTION_17	IF_3	IF_4	CALL_4
0x4001ca6	          0x83f802	                              cmp eax, 2	       571	ui.c	FUNCTION_17	IF_3	IF_4	CALL_4
0x4001ca9	            0x740c	                            je 0x4001cb7	       571	ui.c	FUNCTION_17	IF_3	IF_4	CALL_4
0x4001cab	      0xe800000000	                          call 0x4001cb0	       572	ui.c	FUNCTION_17	IF_3	IF_4	CALL_5
0x4001cb0	      0x3d00100000	                         cmp eax, 0x1000	       572	ui.c	FUNCTION_17	IF_3	IF_4	CALL_5
0x4001cb5	            0x75da	                           jne 0x4001c91	       572	ui.c	FUNCTION_17	IF_3	IF_4	CALL_5
0x4001cb7	    0x8b0500000000	            mov eax, dword [0x04001cbd] 	       691	ui.c	FUNCTION_23	CALL_1
0x4001cbd	            0x85c0	                           test eax, eax	       691	ui.c	FUNCTION_23	CALL_1
0x4001cbf	            0x7577	                           jne 0x4001d38	       691	ui.c	FUNCTION_23	CALL_1
0x4001cc1	    0x8b0500000000	            mov eax, dword [0x04001cc7] 	       691	ui.c	FUNCTION_23	CALL_1
0x4001cc7	            0x85c0	                           test eax, eax	       573	ui.c	FUNCTION_17	IF_3	IF_4
0x4001cc9	            0x74c6	                            je 0x4001c91	       573	ui.c	FUNCTION_17	IF_3	IF_4
0x4001ccb	    0x8b0500000000	            mov eax, dword [0x04001cd1] 	       575	ui.c	FUNCTION_17	IF_3	IF_4	CALL_9
0x4001cd1	    0x390500000000	            cmp dword [0x04001cd7], eax 	       575	ui.c	FUNCTION_17	IF_3	IF_4	CALL_9
0x4001cd7	            0x74b8	                            je 0x4001c91	       575	ui.c	FUNCTION_17	IF_3	IF_4	CALL_9
0x4001cd9	      0xbf19000000	                           mov edi, 0x19	       577	ui.c	FUNCTION_17	IF_3	IF_4	CALL_10
0x4001cde	      0xe800000000	                          call 0x4001ce3	       577	ui.c	FUNCTION_17	IF_3	IF_4	CALL_10
0x4001ce3	      0xe800000000	                          call 0x4001ce8	       578	ui.c	FUNCTION_17	IF_3	IF_4	CALL_11
0x4001ce8	      0xe800000000	                          call 0x4001ced	       579	ui.c	FUNCTION_17	IF_3	IF_4	CALL_12
0x4001ced	              0x5b	                                 pop rbx	      2497	ui.c	FUNCTION_68
0x4001cee	            0x31f6	                            xor esi, esi	       580	ui.c	FUNCTION_17	IF_3	IF_4	CALL_13
0x4001cf0	      0xbf01000000	                              mov edi, 1	       580	ui.c	FUNCTION_17	IF_3	IF_4	CALL_13
0x4001cf5	      0xe900000000	                           jmp 0x4001cfa	       580	ui.c	FUNCTION_17	IF_3	IF_4	CALL_13
0x4001cfa	    0x660f1f440000	                    nop word [rax + rax]	       580	ui.c	FUNCTION_17	IF_3	IF_4	CALL_13
0x4001d00	    0x8b0d00000000	            mov ecx, dword [0x04001d06] 	      1068	ui.c	FUNCTION_30	CALL_1
0x4001d06	    0x8b1500000000	            mov edx, dword [0x04001d0c] 	      1068	ui.c	FUNCTION_30	CALL_1
0x4001d0c	    0x41b801000000	                              mov r8d, 1	      1068	ui.c	FUNCTION_30	CALL_1
0x4001d12	    0x8b3500000000	            mov esi, dword [0x04001d18] 	      1068	ui.c	FUNCTION_30	CALL_1
0x4001d18	    0x8b3d00000000	            mov edi, dword [0x04001d1e] 	      1068	ui.c	FUNCTION_30	CALL_1
0x4001d1e	      0xe82deeffff	               call sym.clip_invert_area	      1068	ui.c	FUNCTION_30	CALL_1
0x4001d23	            0x31c9	                            xor ecx, ecx	      1070	ui.c	FUNCTION_30
0x4001d25	    0x66890d000000	               mov word [0x04001d2c], cx	      1070	ui.c	FUNCTION_30
0x4001d2c	      0xe948ffffff	                           jmp 0x4001c79	      1070	ui.c	FUNCTION_30
0x4001d31	     0xf1f80000000	                         nop dword [rax]	      1070	ui.c	FUNCTION_30
0x4001d38	    0x488b3d000000	            mov rdi, qword [0x04001d3f] 	       691	ui.c	FUNCTION_23	CALL_1
0x4001d3f	      0xbe61000000	                           mov esi, 0x61	       691	ui.c	FUNCTION_23	CALL_1
0x4001d44	      0xe800000000	                          call 0x4001d49	       691	ui.c	FUNCTION_23	CALL_1
0x4001d49	          0x4885c0	                           test rax, rax	       691	ui.c	FUNCTION_23	CALL_1
0x4001d4c	           0xf95c0	                                setne al	       691	ui.c	FUNCTION_23	CALL_1
0x4001d4f	           0xfb6c0	                           movzx eax, al	       691	ui.c	FUNCTION_23	CALL_1
0x4001d52	      0xe970ffffff	                           jmp 0x4001cc7	       691	ui.c	FUNCTION_23	CALL_1
0x4001d57	    0x660f1f840000	                    nop word [rax + rax]	       691	ui.c	FUNCTION_23	CALL_1
0x4001d60	      0xbf00000000	                              mov edi, 0	      2494	ui.c	FUNCTION_68	CALL_1
0x4001d65	      0xe966fdffff	             jmp sym.clip_lose_selection	      2494	ui.c	FUNCTION_68	CALL_1
clip_gen_request_selection	IF,1:DO,0:functions,0:FOR,0:CALL,3:SWITCH,0:WHILE,0:ELSE,1	6
0x4003ea0	    0x8b0500000000	            mov eax, dword [0x04003ea6] 	      1551	ui.c	FUNCTION_42	IF_1
0x4003ea6	            0x85c0	                           test eax, eax	      1551	ui.c	FUNCTION_42	IF_1
0x4003ea8	            0x7506	                           jne 0x4003eb0	      1551	ui.c	FUNCTION_42	IF_1
0x4003eaa	      0xe900000000	                           jmp 0x4003eaf	      1555	ui.c	FUNCTION_42	CALL_2
0x4003eaf	              0x90	                                     nop	      1555	ui.c	FUNCTION_42	CALL_2
0x4003eb0	      0xe900000000	                           jmp 0x4003eb5	      1552	ui.c	FUNCTION_42	CALL_1
