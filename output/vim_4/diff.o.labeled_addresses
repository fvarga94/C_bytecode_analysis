ex_diffupdate	IF,24:CALL,34:functions,0:FOR,6:SWITCH,0:ELSE,3:DO,0:WHILE,0	929
0x40005e0	            0x4157	                                push r15	       663	diff.c	FUNCTION_15
0x40005e2	            0x4156	                                push r14	       663	diff.c	FUNCTION_15
0x40005e4	            0x4155	                                push r13	       663	diff.c	FUNCTION_15
0x40005e6	            0x4154	                                push r12	       663	diff.c	FUNCTION_15
0x40005e8	              0x55	                                push rbp	       663	diff.c	FUNCTION_15
0x40005e9	              0x53	                                push rbx	       663	diff.c	FUNCTION_15
0x40005ea	    0x4881ece80000	                           sub rsp, 0xe8	       663	diff.c	FUNCTION_15
0x40005f1	    0x488b2d000000	            mov rbp, qword [0x040005f8] 	       675	diff.c	FUNCTION_15	CALL_1
0x40005f8	      0x48897c2418	             mov qword [rsp + 0x18], rdi	       663	diff.c	FUNCTION_15
0x40005fd	    0x64488b042528	                mov rax, qword fs:[0x28]	       663	diff.c	FUNCTION_15
0x4000606	    0x48898424d800	             mov qword [rsp + 0xd8], rax	       663	diff.c	FUNCTION_15
0x400060e	            0x31c0	                            xor eax, eax	       663	diff.c	FUNCTION_15
0x4000610	        0x488b7d58	            mov rdi, qword [rbp + 0x58] 	      1503	diff.c	FUNCTION_25	FOR_1
0x4000614	          0x4885ff	                           test rdi, rdi	      1503	diff.c	FUNCTION_25	FOR_1
0x4000617	     0xf84a7000000	                            je 0x40006c4	      1503	diff.c	FUNCTION_25	FOR_1
0x400061d	           0xf1f00	                         nop dword [rax]	      1503	diff.c	FUNCTION_25	FOR_1
0x4000620	          0x488b1f	                    mov rbx, qword [rdi]	      1505	diff.c	FUNCTION_25	FOR_1
0x4000623	      0xe800000000	                          call 0x4000628	      1506	diff.c	FUNCTION_25	FOR_1	CALL_1
0x4000628	          0x4885db	                           test rbx, rbx	      1503	diff.c	FUNCTION_25	FOR_1
0x400062b	          0x4889df	                            mov rdi, rbx	      1503	diff.c	FUNCTION_25	FOR_1
0x400062e	            0x75f0	                           jne 0x4000620	      1503	diff.c	FUNCTION_25	FOR_1
0x4000630	    0x488b05000000	            mov rax, qword [0x04000637] 	      1503	diff.c	FUNCTION_25	FOR_1
0x4000637	      0x4883786000	               cmp qword [rax + 0x60], 0	       680	diff.c	FUNCTION_15	FOR_1	IF_1
0x400063c	    0x48c745580000	               mov qword [rbp + 0x58], 0	      1508	diff.c	FUNCTION_25
0x4000644	    0xc780a0000000	               mov dword [rax + 0xa0], 0	       676	diff.c	FUNCTION_15
0x400064e	            0x757c	                           jne 0x40006cc	       680	diff.c	FUNCTION_15	FOR_1	IF_1
0x4000650	      0x4883786800	               cmp qword [rax + 0x68], 0	       680	diff.c	FUNCTION_15	FOR_1	IF_1
0x4000655	     0xf85450d0000	                           jne 0x40013a0	       680	diff.c	FUNCTION_15	FOR_1	IF_1
0x400065b	      0x4883787000	               cmp qword [rax + 0x70], 0	       680	diff.c	FUNCTION_15	FOR_1	IF_1
0x4000660	     0xf85450d0000	                           jne 0x40013ab	       680	diff.c	FUNCTION_15	FOR_1	IF_1
0x4000666	      0x4883787800	               cmp qword [rax + 0x78], 0	       680	diff.c	FUNCTION_15	FOR_1	IF_1
0x400066b	     0xf85450d0000	                           jne 0x40013b6	       680	diff.c	FUNCTION_15	FOR_1	IF_1
0x4000671	    0x4883b8800000	               cmp qword [rax + 0x80], 0	       680	diff.c	FUNCTION_15	FOR_1	IF_1
0x4000679	     0xf85420d0000	                           jne 0x40013c1	       680	diff.c	FUNCTION_15	FOR_1	IF_1
0x400067f	    0x4883b8880000	               cmp qword [rax + 0x88], 0	       680	diff.c	FUNCTION_15	FOR_1	IF_1
0x4000687	     0xf853f0d0000	                           jne 0x40013cc	       680	diff.c	FUNCTION_15	FOR_1	IF_1
0x400068d	    0x4883b8900000	               cmp qword [rax + 0x90], 0	       680	diff.c	FUNCTION_15	FOR_1	IF_1
0x4000695	     0xf853c0d0000	                           jne 0x40013d7	       680	diff.c	FUNCTION_15	FOR_1	IF_1
0x400069b	    0x488b8424d800	            mov rax, qword [rsp + 0xd8] 	       831	diff.c	FUNCTION_15
0x40006a3	    0x644833042528	                xor rax, qword fs:[0x28]	       831	diff.c	FUNCTION_15
0x40006ac	     0xf85eb0e0000	                           jne 0x400159d	       831	diff.c	FUNCTION_15
0x40006b2	    0x4881c4e80000	                           add rsp, 0xe8	       831	diff.c	FUNCTION_15
0x40006b9	              0x5b	                                 pop rbx	       831	diff.c	FUNCTION_15
0x40006ba	              0x5d	                                 pop rbp	       831	diff.c	FUNCTION_15
0x40006bb	            0x415c	                                 pop r12	       831	diff.c	FUNCTION_15
0x40006bd	            0x415d	                                 pop r13	       831	diff.c	FUNCTION_15
0x40006bf	            0x415e	                                 pop r14	       831	diff.c	FUNCTION_15
0x40006c1	            0x415f	                                 pop r15	       831	diff.c	FUNCTION_15
0x40006c3	              0xc3	                                     ret	       831	diff.c	FUNCTION_15
0x40006c4	          0x4889e8	                            mov rax, rbp	      1503	diff.c	FUNCTION_25	FOR_1
0x40006c7	      0xe96bffffff	                           jmp 0x4000637	      1503	diff.c	FUNCTION_25	FOR_1
0x40006cc	          0x4531ff	                          xor r15d, r15d	       679	diff.c	FUNCTION_15	FOR_1
0x40006cf	              0x90	                                     nop	       679	diff.c	FUNCTION_15	FOR_1
0x40006d0	        0x418d4f01	                      lea ecx, [r15 + 1]	       686	diff.c	FUNCTION_15	FOR_2
0x40006d4	        0x894c2424	             mov dword [rsp + 0x24], ecx	       686	diff.c	FUNCTION_15	FOR_2
0x40006d8	          0x4863c9	                         movsxd rcx, ecx	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x40006db	    0x48837cc86000	       cmp qword [rax + rcx*8 + 0x60], 0	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x40006e1	      0x48894c2428	             mov qword [rsp + 0x28], rcx	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x40006e6	     0xf858c000000	                           jne 0x4000778	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x40006ec	        0x418d5702	                      lea edx, [r15 + 2]	       686	diff.c	FUNCTION_15	FOR_2
0x40006f0	          0x83fa08	                              cmp edx, 8	       686	diff.c	FUNCTION_15	FOR_2
0x40006f3	            0x74a6	                            je 0x400069b	       686	diff.c	FUNCTION_15	FOR_2
0x40006f5	          0x4863d2	                         movsxd rdx, edx	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x40006f8	    0x48837cd06000	       cmp qword [rax + rdx*8 + 0x60], 0	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x40006fe	            0x7578	                           jne 0x4000778	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x4000700	        0x418d5703	                      lea edx, [r15 + 3]	       686	diff.c	FUNCTION_15	FOR_2
0x4000704	          0x83fa08	                              cmp edx, 8	       686	diff.c	FUNCTION_15	FOR_2
0x4000707	            0x7492	                            je 0x400069b	       686	diff.c	FUNCTION_15	FOR_2
0x4000709	          0x4863d2	                         movsxd rdx, edx	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x400070c	    0x48837cd06000	       cmp qword [rax + rdx*8 + 0x60], 0	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x4000712	            0x7564	                           jne 0x4000778	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x4000714	        0x418d5704	                      lea edx, [r15 + 4]	       686	diff.c	FUNCTION_15	FOR_2
0x4000718	          0x83fa08	                              cmp edx, 8	       686	diff.c	FUNCTION_15	FOR_2
0x400071b	     0xf847affffff	                            je 0x400069b	       686	diff.c	FUNCTION_15	FOR_2
0x4000721	          0x4863d2	                         movsxd rdx, edx	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x4000724	    0x48837cd06000	       cmp qword [rax + rdx*8 + 0x60], 0	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x400072a	            0x754c	                           jne 0x4000778	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x400072c	        0x418d5705	                      lea edx, [r15 + 5]	       686	diff.c	FUNCTION_15	FOR_2
0x4000730	          0x83fa08	                              cmp edx, 8	       686	diff.c	FUNCTION_15	FOR_2
0x4000733	     0xf8462ffffff	                            je 0x400069b	       686	diff.c	FUNCTION_15	FOR_2
0x4000739	          0x4863d2	                         movsxd rdx, edx	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x400073c	    0x48837cd06000	       cmp qword [rax + rdx*8 + 0x60], 0	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x4000742	            0x7534	                           jne 0x4000778	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x4000744	        0x418d5706	                      lea edx, [r15 + 6]	       686	diff.c	FUNCTION_15	FOR_2
0x4000748	          0x83fa08	                              cmp edx, 8	       686	diff.c	FUNCTION_15	FOR_2
0x400074b	     0xf844affffff	                            je 0x400069b	       686	diff.c	FUNCTION_15	FOR_2
0x4000751	          0x4863d2	                         movsxd rdx, edx	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x4000754	    0x48837cd06000	       cmp qword [rax + rdx*8 + 0x60], 0	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x400075a	            0x751c	                           jne 0x4000778	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x400075c	        0x4183ff01	                             cmp r15d, 1	       686	diff.c	FUNCTION_15	FOR_2
0x4000760	     0xf8435ffffff	                            je 0x400069b	       686	diff.c	FUNCTION_15	FOR_2
0x4000766	    0x4883b8980000	               cmp qword [rax + 0x98], 0	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x400076e	     0xf8427ffffff	                            je 0x400069b	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x4000774	         0xf1f4000	                         nop dword [rax]	       687	diff.c	FUNCTION_15	FOR_2	IF_3
0x4000778	      0xbe01000000	                              mov esi, 1	       693	diff.c	FUNCTION_15	CALL_2
0x400077d	      0xbf6f000000	                           mov edi, 0x6f	       693	diff.c	FUNCTION_15	CALL_2
0x4000782	      0xe800000000	                          call 0x4000787	       693	diff.c	FUNCTION_15	CALL_2
0x4000787	      0xbe01000000	                              mov esi, 1	       694	diff.c	FUNCTION_15	CALL_3
0x400078c	      0xbf6e000000	                           mov edi, 0x6e	       694	diff.c	FUNCTION_15	CALL_3
0x4000791	          0x4889c3	                            mov rbx, rax	       693	diff.c	FUNCTION_15	CALL_2
0x4000794	      0x4889442410	             mov qword [rsp + 0x10], rax	       693	diff.c	FUNCTION_15	CALL_2
0x4000799	      0xe800000000	                          call 0x400079e	       694	diff.c	FUNCTION_15	CALL_3
0x400079e	      0xbf64000000	                           mov edi, 0x64	       695	diff.c	FUNCTION_15	CALL_4
0x40007a3	      0xbe01000000	                              mov esi, 1	       695	diff.c	FUNCTION_15	CALL_4
0x40007a8	          0x4989c6	                            mov r14, rax	       694	diff.c	FUNCTION_15	CALL_3
0x40007ab	        0x48890424	                    mov qword [rsp], rax	       694	diff.c	FUNCTION_15	CALL_3
0x40007af	      0xe800000000	                          call 0x40007b4	       695	diff.c	FUNCTION_15	CALL_4
0x40007b4	          0x4885db	                           test rbx, rbx	       696	diff.c	FUNCTION_15	IF_5
0x40007b7	          0x4889c7	                            mov rdi, rax	       695	diff.c	FUNCTION_15	CALL_4
0x40007ba	      0x4889442408	                mov qword [rsp + 8], rax	       695	diff.c	FUNCTION_15	CALL_4
0x40007bf	           0xf94c2	                                 sete dl	       696	diff.c	FUNCTION_15	IF_5
0x40007c2	          0x4d85f6	                           test r14, r14	       696	diff.c	FUNCTION_15	IF_5
0x40007c5	           0xf94c0	                                 sete al	       696	diff.c	FUNCTION_15	IF_5
0x40007c8	             0x8c2	                               or dl, al	       696	diff.c	FUNCTION_15	IF_5
0x40007ca	     0xf8521020000	                           jne 0x40009f1	       696	diff.c	FUNCTION_15	IF_5
0x40007d0	          0x4885ff	                           test rdi, rdi	       696	diff.c	FUNCTION_15	IF_5
0x40007d3	     0xf8418020000	                            je 0x40009f1	       696	diff.c	FUNCTION_15	IF_5
0x40007d9	    0x488dac24a000	                   lea rbp, [rsp + 0xa0]	       696	diff.c	FUNCTION_15	IF_5
0x40007e1	      0x44897c2430	            mov dword [rsp + 0x30], r15d	       696	diff.c	FUNCTION_15	IF_5
0x40007e6	          0x4531f6	                          xor r14d, r14d	       696	diff.c	FUNCTION_15	IF_5
0x40007e9	          0x4989df	                            mov r15, rbx	       696	diff.c	FUNCTION_15	IF_5
0x40007ec	         0xf1f4000	                         nop dword [rax]	       696	diff.c	FUNCTION_15	IF_5
0x40007f0	      0xbe00000000	                              mov esi, 0	       708	diff.c	FUNCTION_15	FOR_3	CALL_5
0x40007f5	          0x4c89ff	                            mov rdi, r15	       708	diff.c	FUNCTION_15	FOR_3	CALL_5
0x40007f8	      0xe800000000	                          call 0x40007fd	       708	diff.c	FUNCTION_15	FOR_3	CALL_5
0x40007fd	          0x4885c0	                           test rax, rax	       709	diff.c	FUNCTION_15	FOR_3	IF_6
0x4000800	          0x4989c4	                            mov r12, rax	       708	diff.c	FUNCTION_15	FOR_3	CALL_5
0x4000803	     0xf848f010000	                            je 0x4000998	       709	diff.c	FUNCTION_15	FOR_3	IF_6
0x4000809	          0x4889c1	                            mov rcx, rax	       713	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_7	CALL_6
0x400080c	      0xba01000000	                              mov edx, 1	       713	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_7	CALL_6
0x4000811	      0xbe06000000	                              mov esi, 6	       713	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_7	CALL_6
0x4000816	      0xbf00000000	                              mov edi, 0	       713	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_7	CALL_6
0x400081b	      0xbb01000000	                              mov ebx, 1	       714	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_7
0x4000820	      0xe800000000	                          call 0x4000825	       713	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_7	CALL_6
0x4000825	          0x4c89e7	                            mov rdi, r12	       715	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_7
0x4000828	        0x4883f801	                              cmp rax, 1	       714	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_7
0x400082c	        0x440f45f3	                        cmovne r14d, ebx	       714	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_7
0x4000830	      0xe800000000	                          call 0x4000835	       715	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_7
0x4000835	        0x488b3c24	                    mov rdi, qword [rsp]	       716	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_8
0x4000839	      0xbe00000000	                              mov esi, 0	       716	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_8
0x400083e	      0xe800000000	                          call 0x4000843	       716	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_8
0x4000843	          0x4885c0	                           test rax, rax	       717	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_8
0x4000846	          0x4989c4	                            mov r12, rax	       716	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_8
0x4000849	     0xf8459010000	                            je 0x40009a8	       717	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_8
0x400084f	      0xba01000000	                              mov edx, 1	       721	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_9	CALL_9
0x4000854	      0xbe06000000	                              mov esi, 6	       721	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_9	CALL_9
0x4000859	          0x4889c1	                            mov rcx, rax	       721	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_9	CALL_9
0x400085c	      0xbf00000000	                              mov edi, 0	       721	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_9	CALL_9
0x4000861	      0xe800000000	                          call 0x4000866	       721	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_9	CALL_9
0x4000866	          0x4c89e7	                            mov rdi, r12	       723	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_10
0x4000869	        0x4883f801	                              cmp rax, 1	       722	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_9
0x400086d	        0x440f45f3	                        cmovne r14d, ebx	       722	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_9
0x4000871	      0xe800000000	                          call 0x4000876	       723	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_10
0x4000876	    0x488b05000000	            mov rax, qword [0x0400087d] 	       846	diff.c	FUNCTION_16	IF_1
0x400087d	      0x488b542408	                mov rdx, qword [rsp + 8]	       848	diff.c	FUNCTION_16	CALL_1
0x4000882	          0x4c89ff	                            mov rdi, r15	       848	diff.c	FUNCTION_16	CALL_1
0x4000885	        0x488b3424	                    mov rsi, qword [rsp]	       848	diff.c	FUNCTION_16	CALL_1
0x4000889	          0x803800	                       cmp byte [rax], 0	       846	diff.c	FUNCTION_16	IF_1
0x400088c	     0xf8586010000	                           jne 0x4000a18	       846	diff.c	FUNCTION_16	IF_1
0x4000892	      0xe899f8ffff	               call sym.diff_file.part.3	       846	diff.c	FUNCTION_16	IF_1
0x4000897	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       725	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_12
0x400089c	      0xbe00000000	                              mov esi, 0	       725	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_12
0x40008a1	      0xe800000000	                          call 0x40008a6	       725	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_12
0x40008a6	          0x4885c0	                           test rax, rax	       726	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_10
0x40008a9	          0x4989c4	                            mov r12, rax	       725	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_12
0x40008ac	     0xf8476010000	                            je 0x4000a28	       726	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_10
0x40008b2	            0x31db	                            xor ebx, ebx	       726	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_10
0x40008b4	    0x41bd01000000	                             mov r13d, 1	       738	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_12
0x40008ba	            0xeb17	                           jmp 0x40008d3	       738	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_12
0x40008bc	         0xf1f4000	                         nop dword [rax]	       738	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_12
0x40008c0	      0xbf00000000	                              mov edi, 0	       737	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_12	CALL_13
0x40008c5	      0xb903000000	                              mov ecx, 3	       737	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_12	CALL_13
0x40008ca	          0x4889ee	                            mov rsi, rbp	       737	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_12	CALL_13
0x40008cd	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       738	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_12
0x40008cf	        0x410f44dd	                         cmove ebx, r13d	       738	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_12
0x40008d3	          0x4c89e2	                            mov rdx, r12	       735	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_11
0x40008d6	      0xbe32000000	                           mov esi, 0x32	       735	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_11
0x40008db	          0x4889ef	                            mov rdi, rbp	       735	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_11
0x40008de	      0xe800000000	                          call 0x40008e3	       735	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_11
0x40008e3	            0x85c0	                           test eax, eax	       735	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_11
0x40008e5	            0x74d9	                            je 0x40008c0	       735	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	FOR_4	IF_11
0x40008e7	          0x4c89e7	                            mov rdi, r12	       740	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	CALL_14
0x40008ea	      0xe800000000	                          call 0x40008ef	       740	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	ELSE_3	CALL_14
0x40008ef	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       742	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_15
0x40008f4	      0xe800000000	                          call 0x40008f9	       742	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_15
0x40008f9	        0x488b3c24	                    mov rdi, qword [rsp]	       743	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_16
0x40008fd	      0xe800000000	                          call 0x4000902	       743	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	CALL_16
0x4000902	          0x4c89ff	                            mov rdi, r15	       745	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_17
0x4000905	      0xe800000000	                          call 0x400090a	       745	diff.c	FUNCTION_15	FOR_3	ELSE_1	CALL_17
0x400090a	    0x488b05000000	            mov rax, qword [0x04000911] 	       750	diff.c	FUNCTION_15	FOR_3	IF_13
0x4000911	          0x803800	                       cmp byte [rax], 0	       750	diff.c	FUNCTION_15	FOR_3	IF_13
0x4000914	     0xf859e000000	                           jne 0x40009b8	       750	diff.c	FUNCTION_15	FOR_3	IF_13
0x400091a	    0x833d00000000	               cmp dword [0x04000921], 2	       771	diff.c	FUNCTION_15	FOR_3	IF_16
0x4000921	     0xf8591000000	                           jne 0x40009b8	       771	diff.c	FUNCTION_15	FOR_3	IF_16
0x4000927	            0x85db	                           test ebx, ebx	       776	diff.c	FUNCTION_15	FOR_3	IF_17
0x4000929	    0x891d00000000	            mov dword [0x0400092f], ebx 	       773	diff.c	FUNCTION_15	FOR_3
0x400092f	     0xf84bbfeffff	                            je 0x40007f0	       776	diff.c	FUNCTION_15	FOR_3	IF_17
0x4000935	      0x448b7c2430	           mov r15d, dword [rsp + 0x30] 	       776	diff.c	FUNCTION_15	FOR_3	IF_17
0x400093a	    0x48837c241800	               cmp qword [rsp + 0x18], 0	       792	diff.c	FUNCTION_15	IF_20
0x4000940	     0xf84ef000000	                            je 0x4000a35	       792	diff.c	FUNCTION_15	IF_20
0x4000946	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       792	diff.c	FUNCTION_15	IF_20
0x400094b	          0x8b4034	            mov eax, dword [rax + 0x34] 	       792	diff.c	FUNCTION_15	IF_20
0x400094e	            0x85c0	                           test eax, eax	       792	diff.c	FUNCTION_15	IF_20
0x4000950	     0xf84df000000	                            je 0x4000a35	       792	diff.c	FUNCTION_15	IF_20
0x4000956	          0x4489fd	                           mov ebp, r15d	       792	diff.c	FUNCTION_15	IF_20
0x4000959	            0xeb11	                           jmp 0x400096c	       792	diff.c	FUNCTION_15	IF_20
0x400095b	       0xf1f440000	                   nop dword [rax + rax]	       792	diff.c	FUNCTION_15	IF_20
0x4000960	          0x83c501	                              add ebp, 1	       793	diff.c	FUNCTION_15	IF_20	FOR_5
0x4000963	          0x83fd08	                              cmp ebp, 8	       793	diff.c	FUNCTION_15	IF_20	FOR_5
0x4000966	     0xf84c9000000	                            je 0x4000a35	       793	diff.c	FUNCTION_15	IF_20	FOR_5
0x400096c	    0x488b15000000	            mov rdx, qword [0x04000973] 	       795	diff.c	FUNCTION_15	IF_20	FOR_5
0x4000973	          0x4863c5	                         movsxd rax, ebp	       795	diff.c	FUNCTION_15	IF_20	FOR_5
0x4000976	      0x488b5cc260	    mov rbx, qword [rdx + rax*8 + 0x60] 	       795	diff.c	FUNCTION_15	IF_20	FOR_5
0x400097b	          0x4889df	                            mov rdi, rbx	       796	diff.c	FUNCTION_15	IF_20	FOR_5	IF_21	CALL_22
0x400097e	      0xe800000000	                          call 0x4000983	       796	diff.c	FUNCTION_15	IF_20	FOR_5	IF_21	CALL_22
0x4000983	            0x85c0	                           test eax, eax	       796	diff.c	FUNCTION_15	IF_20	FOR_5	IF_21	CALL_22
0x4000985	            0x74d9	                            je 0x4000960	       796	diff.c	FUNCTION_15	IF_20	FOR_5	IF_21	CALL_22
0x4000987	            0x31f6	                            xor esi, esi	       797	diff.c	FUNCTION_15	IF_20	FOR_5	CALL_23
0x4000989	          0x4889df	                            mov rdi, rbx	       797	diff.c	FUNCTION_15	IF_20	FOR_5	CALL_23
0x400098c	      0xe800000000	                          call 0x4000991	       797	diff.c	FUNCTION_15	IF_20	FOR_5	CALL_23
0x4000991	            0xebcd	                           jmp 0x4000960	       797	diff.c	FUNCTION_15	IF_20	FOR_5	CALL_23
0x4000993	       0xf1f440000	                   nop dword [rax + rax]	       797	diff.c	FUNCTION_15	IF_20	FOR_5	CALL_23
0x4000998	    0x41be01000000	                             mov r14d, 1	       710	diff.c	FUNCTION_15	FOR_3	IF_6
0x400099e	            0x31db	                            xor ebx, ebx	       707	diff.c	FUNCTION_15	FOR_3
0x40009a0	      0xe965ffffff	                           jmp 0x400090a	       707	diff.c	FUNCTION_15	FOR_3
0x40009a5	           0xf1f00	                         nop dword [rax]	       707	diff.c	FUNCTION_15	FOR_3
0x40009a8	    0x41be01000000	                             mov r14d, 1	       718	diff.c	FUNCTION_15	FOR_3	ELSE_1	IF_8
0x40009ae	            0x31db	                            xor ebx, ebx	       707	diff.c	FUNCTION_15	FOR_3
0x40009b0	      0xe94dffffff	                           jmp 0x4000902	       707	diff.c	FUNCTION_15	FOR_3
0x40009b5	           0xf1f00	                         nop dword [rax]	       707	diff.c	FUNCTION_15	FOR_3
0x40009b8	            0x85db	                           test ebx, ebx	       779	diff.c	FUNCTION_15	IF_18
0x40009ba	      0x448b7c2430	           mov r15d, dword [rsp + 0x30] 	       779	diff.c	FUNCTION_15	IF_18
0x40009bf	     0xf8575ffffff	                           jne 0x400093a	       779	diff.c	FUNCTION_15	IF_18
0x40009c5	          0x4585f6	                         test r14d, r14d	       781	diff.c	FUNCTION_15	IF_18	IF_19
0x40009c8	     0xf85140a0000	                           jne 0x40013e2	       781	diff.c	FUNCTION_15	IF_18	IF_19
0x40009ce	      0xba05000000	                              mov edx, 5	       783	diff.c	FUNCTION_15	IF_18	CALL_21
0x40009d3	      0xbe00000000	                              mov esi, 0	       783	diff.c	FUNCTION_15	IF_18	CALL_21
0x40009d8	            0x31ff	                            xor edi, edi	       783	diff.c	FUNCTION_15	IF_18	CALL_21
0x40009da	      0xe800000000	                          call 0x40009df	       783	diff.c	FUNCTION_15	IF_18	CALL_21
0x40009df	          0x4889c7	                            mov rdi, rax	       783	diff.c	FUNCTION_15	IF_18	CALL_21
0x40009e2	      0xe800000000	                          call 0x40009e7	       783	diff.c	FUNCTION_15	IF_18	CALL_21
0x40009e7	    0xc70500000000	               mov dword [0x040009f1], 2	       784	diff.c	FUNCTION_15	IF_18
0x40009f1	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       828	diff.c	FUNCTION_15	CALL_32
0x40009f6	      0xe800000000	                          call 0x40009fb	       828	diff.c	FUNCTION_15	CALL_32
0x40009fb	        0x488b3c24	                    mov rdi, qword [rsp]	       829	diff.c	FUNCTION_15	CALL_33
0x40009ff	      0xe800000000	                          call 0x4000a04	       829	diff.c	FUNCTION_15	CALL_33
0x4000a04	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       830	diff.c	FUNCTION_15	CALL_34
0x4000a09	      0xe800000000	                          call 0x4000a0e	       830	diff.c	FUNCTION_15	CALL_34
0x4000a0e	      0xe988fcffff	                           jmp 0x400069b	       830	diff.c	FUNCTION_15	CALL_34
0x4000a13	       0xf1f440000	                   nop dword [rax + rax]	       830	diff.c	FUNCTION_15	CALL_34
0x4000a18	      0xe800000000	                          call 0x4000a1d	       848	diff.c	FUNCTION_16	CALL_1
0x4000a1d	      0xe975feffff	                           jmp 0x4000897	       848	diff.c	FUNCTION_16	CALL_1
0x4000a22	    0x660f1f440000	                    nop word [rax + rax]	       848	diff.c	FUNCTION_16	CALL_1
0x4000a28	    0x41be01000000	                             mov r14d, 1	       727	diff.c	FUNCTION_15	FOR_3	ELSE_1	ELSE_2	IF_10
0x4000a2e	            0x31db	                            xor ebx, ebx	       707	diff.c	FUNCTION_15	FOR_3
0x4000a30	      0xe9bafeffff	                           jmp 0x40008ef	       707	diff.c	FUNCTION_15	FOR_3
0x4000a35	          0x4963c7	                        movsxd rax, r15d	       801	diff.c	FUNCTION_15
0x4000a38	      0xbf00000000	                              mov edi, 0	       646	diff.c	FUNCTION_14	CALL_1
0x4000a3d	      0x4889442440	             mov qword [rsp + 0x40], rax	       801	diff.c	FUNCTION_15
0x4000a42	          0x4889c1	                            mov rcx, rax	       801	diff.c	FUNCTION_15
0x4000a45	    0x488b05000000	            mov rax, qword [0x04000a4c] 	       801	diff.c	FUNCTION_15
0x4000a4c	      0x488b5cc860	    mov rbx, qword [rax + rcx*8 + 0x60] 	       801	diff.c	FUNCTION_15
0x4000a51	    0x488bab901400	          mov rbp, qword [rbx + 0x1490] 	       645	diff.c	FUNCTION_14
0x4000a58	      0xe800000000	                          call 0x4000a5d	       646	diff.c	FUNCTION_14	CALL_1
0x4000a5d	          0x4c8b03	                     mov r8, qword [rbx]	       647	diff.c	FUNCTION_14	CALL_2
0x4000a60	    0x488983901400	          mov qword [rbx + 0x1490], rax 	       646	diff.c	FUNCTION_14	CALL_1
0x4000a67	          0x4531c9	                            xor r9d, r9d	       647	diff.c	FUNCTION_14	CALL_2
0x4000a6a	            0x6a01	                                  push 1	       647	diff.c	FUNCTION_14	CALL_2
0x4000a6c	            0x6a00	                                  push 0	       647	diff.c	FUNCTION_14	CALL_2
0x4000a6e	            0x31d2	                            xor edx, edx	       647	diff.c	FUNCTION_14	CALL_2
0x4000a70	            0x6a00	                                  push 0	       647	diff.c	FUNCTION_14	CALL_2
0x4000a72	            0x6a00	                                  push 0	       647	diff.c	FUNCTION_14	CALL_2
0x4000a74	      0xb901000000	                              mov ecx, 1	       647	diff.c	FUNCTION_14	CALL_2
0x4000a79	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	       647	diff.c	FUNCTION_14	CALL_2
0x4000a7e	          0x4889df	                            mov rdi, rbx	       647	diff.c	FUNCTION_14	CALL_2
0x4000a81	      0xe800000000	                          call 0x4000a86	       647	diff.c	FUNCTION_14	CALL_2
0x4000a86	    0x488bbb901400	          mov rdi, qword [rbx + 0x1490] 	       649	diff.c	FUNCTION_14	CALL_3
0x4000a8d	          0x4189c4	                           mov r12d, eax	       647	diff.c	FUNCTION_14	CALL_2
0x4000a90	        0x4883c420	                           add rsp, 0x20	       649	diff.c	FUNCTION_14	CALL_3
0x4000a94	      0xe800000000	                          call 0x4000a99	       649	diff.c	FUNCTION_14	CALL_3
0x4000a99	          0x4585e4	                         test r12d, r12d	       802	diff.c	FUNCTION_15	IF_22	CALL_24
0x4000a9c	    0x4889ab901400	          mov qword [rbx + 0x1490], rbp 	       650	diff.c	FUNCTION_14
0x4000aa3	     0xf8448ffffff	                            je 0x40009f1	       802	diff.c	FUNCTION_15	IF_22	CALL_24
0x4000aa9	        0x8b442424	            mov eax, dword [rsp + 0x24] 	       686	diff.c	FUNCTION_15	FOR_2
0x4000aad	      0x44897c247c	            mov dword [rsp + 0x7c], r15d	       686	diff.c	FUNCTION_15	FOR_2
0x4000ab2	          0x4189c5	                           mov r13d, eax	       686	diff.c	FUNCTION_15	FOR_2
0x4000ab5	        0x418d4705	                      lea eax, [r15 + 5]	       686	diff.c	FUNCTION_15	FOR_2
0x4000ab9	        0x89442478	             mov dword [rsp + 0x78], eax	       686	diff.c	FUNCTION_15	FOR_2
0x4000abd	            0x4898	                                    cdqe	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x4000abf	    0x488984248000	             mov qword [rsp + 0x80], rax	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x4000ac7	        0x48c1e003	                              shl rax, 3	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x4000acb	      0x4889442468	             mov qword [rsp + 0x68], rax	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x4000ad0	            0xeb14	                           jmp 0x4000ae6	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x4000ad2	    0x660f1f440000	                    nop word [rax + rax]	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x4000ad8	        0x4183c501	                             add r13d, 1	       806	diff.c	FUNCTION_15	FOR_6
0x4000adc	        0x4183fd08	                             cmp r13d, 8	       806	diff.c	FUNCTION_15	FOR_6
0x4000ae0	     0xf8476030000	                            je 0x4000e5c	       806	diff.c	FUNCTION_15	FOR_6
0x4000ae6	          0x4963c5	                        movsxd rax, r13d	       808	diff.c	FUNCTION_15	FOR_6
0x4000ae9	          0x4889c1	                            mov rcx, rax	       808	diff.c	FUNCTION_15	FOR_6
0x4000aec	      0x4889442418	             mov qword [rsp + 0x18], rax	       808	diff.c	FUNCTION_15	FOR_6
0x4000af1	    0x488b05000000	            mov rax, qword [0x04000af8] 	       808	diff.c	FUNCTION_15	FOR_6
0x4000af8	      0x488b5cc860	    mov rbx, qword [rax + rcx*8 + 0x60] 	       808	diff.c	FUNCTION_15	FOR_6
0x4000afd	          0x4885db	                           test rbx, rbx	       809	diff.c	FUNCTION_15	FOR_6	IF_23
0x4000b00	            0x74d6	                            je 0x4000ad8	       809	diff.c	FUNCTION_15	FOR_6	IF_23
0x4000b02	      0x48837b0800	                  cmp qword [rbx + 8], 0	       809	diff.c	FUNCTION_15	FOR_6	IF_23
0x4000b07	            0x74cf	                            je 0x4000ad8	       809	diff.c	FUNCTION_15	FOR_6	IF_23
0x4000b09	      0xbf00000000	                              mov edi, 0	       646	diff.c	FUNCTION_14	CALL_1
0x4000b0e	    0x488bab901400	          mov rbp, qword [rbx + 0x1490] 	       645	diff.c	FUNCTION_14
0x4000b15	      0xe800000000	                          call 0x4000b1a	       646	diff.c	FUNCTION_14	CALL_1
0x4000b1a	          0x4c8b03	                     mov r8, qword [rbx]	       647	diff.c	FUNCTION_14	CALL_2
0x4000b1d	    0x488983901400	          mov qword [rbx + 0x1490], rax 	       646	diff.c	FUNCTION_14	CALL_1
0x4000b24	          0x4531c9	                            xor r9d, r9d	       647	diff.c	FUNCTION_14	CALL_2
0x4000b27	            0x6a01	                                  push 1	       647	diff.c	FUNCTION_14	CALL_2
0x4000b29	            0x6a00	                                  push 0	       647	diff.c	FUNCTION_14	CALL_2
0x4000b2b	            0x31d2	                            xor edx, edx	       647	diff.c	FUNCTION_14	CALL_2
0x4000b2d	            0x6a00	                                  push 0	       647	diff.c	FUNCTION_14	CALL_2
0x4000b2f	            0x6a00	                                  push 0	       647	diff.c	FUNCTION_14	CALL_2
0x4000b31	      0xb901000000	                              mov ecx, 1	       647	diff.c	FUNCTION_14	CALL_2
0x4000b36	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       647	diff.c	FUNCTION_14	CALL_2
0x4000b3b	          0x4889df	                            mov rdi, rbx	       647	diff.c	FUNCTION_14	CALL_2
0x4000b3e	      0xe800000000	                          call 0x4000b43	       647	diff.c	FUNCTION_14	CALL_2
0x4000b43	    0x488bbb901400	          mov rdi, qword [rbx + 0x1490] 	       649	diff.c	FUNCTION_14	CALL_3
0x4000b4a	          0x4189c4	                           mov r12d, eax	       647	diff.c	FUNCTION_14	CALL_2
0x4000b4d	        0x4883c420	                           add rsp, 0x20	       649	diff.c	FUNCTION_14	CALL_3
0x4000b51	      0xe800000000	                          call 0x4000b56	       649	diff.c	FUNCTION_14	CALL_3
0x4000b56	          0x4585e4	                         test r12d, r12d	       811	diff.c	FUNCTION_15	FOR_6	IF_24	CALL_25
0x4000b59	    0x4889ab901400	          mov qword [rbx + 0x1490], rbp 	       650	diff.c	FUNCTION_14
0x4000b60	     0xf8472ffffff	                            je 0x4000ad8	       811	diff.c	FUNCTION_15	FOR_6	IF_24	CALL_25
0x4000b66	    0x488b05000000	            mov rax, qword [0x04000b6d] 	       846	diff.c	FUNCTION_16	IF_1
0x4000b6d	      0x488b542408	                mov rdx, qword [rsp + 8]	       848	diff.c	FUNCTION_16	CALL_1
0x4000b72	        0x488b3424	                    mov rsi, qword [rsp]	       848	diff.c	FUNCTION_16	CALL_1
0x4000b76	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       848	diff.c	FUNCTION_16	CALL_1
0x4000b7b	          0x803800	                       cmp byte [rax], 0	       846	diff.c	FUNCTION_16	IF_1
0x4000b7e	     0xf85f4080000	                           jne 0x4001478	       846	diff.c	FUNCTION_16	IF_1
0x4000b84	      0xe8a7f5ffff	               call sym.diff_file.part.3	       846	diff.c	FUNCTION_16	IF_1
0x4000b89	    0x488b05000000	            mov rax, qword [0x04000b90] 	      1291	diff.c	FUNCTION_23
0x4000b90	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1303	diff.c	FUNCTION_23	CALL_1
0x4000b95	      0xbe00000000	                              mov esi, 0	      1303	diff.c	FUNCTION_23	CALL_1
0x4000b9a	        0x488b5858	            mov rbx, qword [rax + 0x58] 	      1291	diff.c	FUNCTION_23
0x4000b9e	      0xe800000000	                          call 0x4000ba3	      1303	diff.c	FUNCTION_23	CALL_1
0x4000ba3	          0x4885c0	                           test rax, rax	      1304	diff.c	FUNCTION_23	IF_1
0x4000ba6	          0x4989c6	                            mov r14, rax	      1303	diff.c	FUNCTION_23	CALL_1
0x4000ba9	     0xf84a8090000	                            je 0x4001557	      1304	diff.c	FUNCTION_23	IF_1
0x4000baf	        0x8b44247c	            mov eax, dword [rsp + 0x7c] 	      1304	diff.c	FUNCTION_23	IF_1
0x4000bb3	    0x41bf01000000	                             mov r15d, 1	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4000bb9	            0x31ed	                            xor ebp, ebp	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4000bbb	          0x8d4802	                      lea ecx, [rax + 2]	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4000bbe	        0x894c2458	             mov dword [rsp + 0x58], ecx	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4000bc2	          0x8d4803	                      lea ecx, [rax + 3]	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4000bc5	        0x894c245c	             mov dword [rsp + 0x5c], ecx	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4000bc9	          0x8d4804	                      lea ecx, [rax + 4]	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4000bcc	          0x83c006	                              add eax, 6	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4000bcf	        0x89442464	             mov dword [rsp + 0x64], eax	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4000bd3	          0x4863c1	                         movsxd rax, ecx	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x4000bd6	        0x894c2460	             mov dword [rsp + 0x60], ecx	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x4000bda	      0x4889442470	             mov qword [rsp + 0x70], rax	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x4000bdf	        0x48c1e003	                              shl rax, 3	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x4000be3	      0x4889442450	             mov qword [rsp + 0x50], rax	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x4000be8	     0xf1f84000000	                   nop dword [rax + rax]	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x4000bf0	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      1312	diff.c	FUNCTION_23	FOR_1	IF_2
0x4000bf8	          0x4c89f2	                            mov rdx, r14	      1312	diff.c	FUNCTION_23	FOR_1	IF_2
0x4000bfb	      0xbe32000000	                           mov esi, 0x32	      1312	diff.c	FUNCTION_23	FOR_1	IF_2
0x4000c00	      0xe800000000	                          call 0x4000c05	      1312	diff.c	FUNCTION_23	FOR_1	IF_2
0x4000c05	            0x85c0	                           test eax, eax	      1312	diff.c	FUNCTION_23	FOR_1	IF_2
0x4000c07	     0xf8590010000	                           jne 0x4000d9d	      1312	diff.c	FUNCTION_23	FOR_1	IF_2
0x4000c0d	      0xe800000000	                          call 0x4000c12	      1314	diff.c	FUNCTION_23	FOR_1	IF_3	CALL_4
0x4000c12	     0xfb69424a000	           movzx edx, byte [rsp + 0xa0] 	      1314	diff.c	FUNCTION_23	FOR_1	IF_3	CALL_4
0x4000c1a	          0x488b00	                    mov rax, qword [rax]	      1314	diff.c	FUNCTION_23	FOR_1	IF_3	CALL_4
0x4000c1d	      0xf644500108	         test byte [rax + rdx*2 + 1], 8 	      1314	diff.c	FUNCTION_23	FOR_1	IF_3	CALL_4
0x4000c22	            0x74cc	                            je 0x4000bf0	      1314	diff.c	FUNCTION_23	FOR_1	IF_3	CALL_4
0x4000c24	    0x488d8424a000	                   lea rax, [rsp + 0xa0]	      1322	diff.c	FUNCTION_23	FOR_1
0x4000c2c	    0x488dbc249800	                   lea rdi, [rsp + 0x98]	      1323	diff.c	FUNCTION_23	FOR_1	CALL_5
0x4000c34	    0x488984249800	             mov qword [rsp + 0x98], rax	      1322	diff.c	FUNCTION_23	FOR_1
0x4000c3c	      0xe800000000	                          call 0x4000c41	      1323	diff.c	FUNCTION_23	FOR_1	CALL_5
0x4000c41	    0x488b94249800	            mov rdx, qword [rsp + 0x98] 	      1324	diff.c	FUNCTION_23	FOR_1	IF_4
0x4000c49	          0x4889c1	                            mov rcx, rax	      1323	diff.c	FUNCTION_23	FOR_1	CALL_5
0x4000c4c	          0x4889ce	                            mov rsi, rcx	      1323	diff.c	FUNCTION_23	FOR_1	CALL_5
0x4000c4f	           0xfb602	                   movzx eax, byte [rdx]	      1324	diff.c	FUNCTION_23	FOR_1	IF_4
0x4000c52	            0x3c2c	                            cmp al, 0x2c	      1324	diff.c	FUNCTION_23	FOR_1	IF_4
0x4000c54	     0xf84cc010000	                            je 0x4000e26	      1324	diff.c	FUNCTION_23	FOR_1	IF_4
0x4000c5a	          0x8d789d	                   lea edi, [rax - 0x63]	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x4000c5d	        0x4080ff01	                              cmp dil, 1	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x4000c61	        0x410f97c2	                               seta r10b	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x4000c65	            0x3c61	                            cmp al, 0x61	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x4000c67	           0xf95c0	                                setne al	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x4000c6a	          0x4120c2	                            and r10b, al	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x4000c6d	          0x4589d4	                          mov r12d, r10d	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x4000c70	     0xf857affffff	                           jne 0x4000bf0	      1331	diff.c	FUNCTION_23	FOR_1	IF_5
0x4000c76	        0x488d4201	                      lea rax, [rdx + 1]	      1333	diff.c	FUNCTION_23	FOR_1
0x4000c7a	    0x488dbc249800	                   lea rdi, [rsp + 0x98]	      1334	diff.c	FUNCTION_23	FOR_1	CALL_7
0x4000c82	      0x4889742438	             mov qword [rsp + 0x38], rsi	      1334	diff.c	FUNCTION_23	FOR_1	CALL_7
0x4000c87	      0x48894c2430	             mov qword [rsp + 0x30], rcx	      1334	diff.c	FUNCTION_23	FOR_1	CALL_7
0x4000c8c	    0x488984249800	             mov qword [rsp + 0x98], rax	      1333	diff.c	FUNCTION_23	FOR_1
0x4000c94	           0xfb602	                   movzx eax, byte [rdx]	      1333	diff.c	FUNCTION_23	FOR_1
0x4000c97	        0x88442448	               mov byte [rsp + 0x48], al	      1333	diff.c	FUNCTION_23	FOR_1
0x4000c9b	      0xe800000000	                          call 0x4000ca0	      1334	diff.c	FUNCTION_23	FOR_1	CALL_7
0x4000ca0	    0x488b94249800	            mov rdx, qword [rsp + 0x98] 	      1335	diff.c	FUNCTION_23	FOR_1	IF_6
0x4000ca8	          0x4989c1	                             mov r9, rax	      1334	diff.c	FUNCTION_23	FOR_1	CALL_7
0x4000cab	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      1335	diff.c	FUNCTION_23	FOR_1	IF_6
0x4000cb0	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      1335	diff.c	FUNCTION_23	FOR_1	IF_6
0x4000cb5	          0x803a2c	                    cmp byte [rdx], 0x2c	      1335	diff.c	FUNCTION_23	FOR_1	IF_6
0x4000cb8	     0xf84c4070000	                            je 0x4001482	      1335	diff.c	FUNCTION_23	FOR_1	IF_6
0x4000cbe	          0x4839f1	                            cmp rcx, rsi	      1342	diff.c	FUNCTION_23	FOR_1	IF_7
0x4000cc1	     0xf8f29ffffff	                            jg 0x4000bf0	      1342	diff.c	FUNCTION_23	FOR_1	IF_7
0x4000cc7	          0x4584e4	                         test r12b, r12b	      1342	diff.c	FUNCTION_23	FOR_1	IF_7
0x4000cca	     0xf8520ffffff	                           jne 0x4000bf0	      1342	diff.c	FUNCTION_23	FOR_1	IF_7
0x4000cd0	    0x440fb6642448	          movzx r12d, byte [rsp + 0x48] 	      1333	diff.c	FUNCTION_23	FOR_1
0x4000cd6	        0x4183fc61	                          cmp r12d, 0x61	      1345	diff.c	FUNCTION_23	FOR_1	IF_8
0x4000cda	     0xf8481070000	                            je 0x4001461	      1345	diff.c	FUNCTION_23	FOR_1	IF_8
0x4000ce0	          0x4829ce	                            sub rsi, rcx	      1353	diff.c	FUNCTION_23	FOR_1	ELSE_3
0x4000ce3	        0x4883c601	                              add rsi, 1	      1353	diff.c	FUNCTION_23	FOR_1	ELSE_3
0x4000ce7	        0x4183fc64	                          cmp r12d, 0x64	      1355	diff.c	FUNCTION_23	FOR_1	IF_9
0x4000ceb	     0xf847b070000	                            je 0x400146c	      1355	diff.c	FUNCTION_23	FOR_1	IF_9
0x4000cf1	          0x4c29c8	                             sub rax, r9	      1363	diff.c	FUNCTION_23	FOR_1	ELSE_4
0x4000cf4	        0x4c8d4001	                       lea r8, [rax + 1]	      1363	diff.c	FUNCTION_23	FOR_1	ELSE_4
0x4000cf8	          0x4885db	                           test rbx, rbx	      1368	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4000cfb	     0xf84ff060000	                            je 0x4001400	      1368	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4000d01	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      1368	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4000d06	    0x4c8d14c50000	                        lea r10, [rax*8]	      1368	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4000d0e	        0x4a8d1413	                    lea rdx, [rbx + r10]	      1368	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4000d12	        0x488b4208	                mov rax, qword [rdx + 8]	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4000d16	        0x488b7a48	            mov rdi, qword [rdx + 0x48] 	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4000d1a	        0x488d1438	                    lea rdx, [rax + rdi]	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4000d1e	          0x4839d1	                            cmp rcx, rdx	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4000d21	     0xf8e62010000	                           jle 0x4000e89	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4000d27	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4000d2c	          0x4585ff	                         test r15d, r15d	      1371	diff.c	FUNCTION_23	FOR_1	WHILE_1	IF_10
0x4000d2f	    0x4c8d1cd50000	                        lea r11, [rdx*8]	      1371	diff.c	FUNCTION_23	FOR_1	WHILE_1	IF_10
0x4000d37	            0x742a	                            je 0x4000d63	      1371	diff.c	FUNCTION_23	FOR_1	WHILE_1	IF_10
0x4000d39	            0xeb59	                           jmp 0x4000d94	      1371	diff.c	FUNCTION_23	FOR_1	WHILE_1	IF_10
0x4000d3b	       0xf1f440000	                   nop dword [rax + rax]	      1371	diff.c	FUNCTION_23	FOR_1	WHILE_1	IF_10
0x4000d40	      0x4a8b541508	         mov rdx, qword [rbp + r10 + 8] 	      1489	diff.c	FUNCTION_24	ELSE_1
0x4000d45	      0x4a03541548	       add rdx, qword [rbp + r10 + 0x48]	      1489	diff.c	FUNCTION_24	ELSE_1
0x4000d4a	      0x4a2b541d48	       sub rdx, qword [rbp + r11 + 0x48]	      1489	diff.c	FUNCTION_24	ELSE_1
0x4000d4f	      0x4a2b541d08	          sub rdx, qword [rbp + r11 + 8]	      1489	diff.c	FUNCTION_24	ELSE_1
0x4000d54	        0x4a8d2c1b	                    lea rbp, [rbx + r11]	      1489	diff.c	FUNCTION_24	ELSE_1
0x4000d58	          0x4829d0	                            sub rax, rdx	      1491	diff.c	FUNCTION_24
0x4000d5b	        0x48894508	                mov qword [rbp + 8], rax	      1491	diff.c	FUNCTION_24
0x4000d5f	        0x48897d48	            mov qword [rbp + 0x48], rdi 	      1492	diff.c	FUNCTION_24
0x4000d63	          0x4c8b23	                    mov r12, qword [rbx]	      1374	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4000d66	          0x4d85e4	                           test r12, r12	      1368	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4000d69	     0xf84e0030000	                            je 0x400114f	      1368	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4000d6f	        0x4b8d1414	                    lea rdx, [r12 + r10]	      1368	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4000d73	    0x41bf01000000	                             mov r15d, 1	      1375	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4000d79	          0x4889dd	                            mov rbp, rbx	      1375	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4000d7c	        0x488b4208	                mov rax, qword [rdx + 8]	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4000d80	        0x488b7a48	            mov rdi, qword [rdx + 0x48] 	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4000d84	        0x488d1438	                    lea rdx, [rax + rdi]	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4000d88	          0x4839ca	                            cmp rdx, rcx	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4000d8b	     0xf8dfe000000	                           jge 0x4000e8f	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4000d91	          0x4c89e3	                            mov rbx, r12	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4000d94	          0x4885ed	                           test rbp, rbp	      1486	diff.c	FUNCTION_24	IF_1
0x4000d97	            0x75a7	                           jne 0x4000d40	      1486	diff.c	FUNCTION_24	IF_1
0x4000d99	            0x31d2	                            xor edx, edx	      1487	diff.c	FUNCTION_24	IF_1
0x4000d9b	            0xebb7	                           jmp 0x4000d54	      1487	diff.c	FUNCTION_24	IF_1
0x4000d9d	          0x4885db	                           test rbx, rbx	      1461	diff.c	FUNCTION_23	WHILE_3
0x4000da0	            0x7464	                            je 0x4000e06	      1461	diff.c	FUNCTION_23	WHILE_3
0x4000da2	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1461	diff.c	FUNCTION_23	WHILE_3
0x4000da7	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      1461	diff.c	FUNCTION_23	WHILE_3
0x4000dac	        0x48c1e103	                              shl rcx, 3	      1461	diff.c	FUNCTION_23	WHILE_3
0x4000db0	          0x4585ff	                         test r15d, r15d	      1463	diff.c	FUNCTION_23	WHILE_3	IF_21
0x4000db3	    0x488d14c50000	                        lea rdx, [rax*8]	      1463	diff.c	FUNCTION_23	WHILE_3	IF_21
0x4000dbb	            0x743b	                            je 0x4000df8	      1463	diff.c	FUNCTION_23	WHILE_3	IF_21
0x4000dbd	           0xf1f00	                         nop dword [rax]	      1463	diff.c	FUNCTION_23	WHILE_3	IF_21
0x4000dc0	          0x4885ed	                           test rbp, rbp	      1486	diff.c	FUNCTION_24	IF_1
0x4000dc3	     0xf84b9000000	                            je 0x4000e82	      1486	diff.c	FUNCTION_24	IF_1
0x4000dc9	      0x488b441508	         mov rax, qword [rbp + rdx + 8] 	      1489	diff.c	FUNCTION_24	ELSE_1
0x4000dce	      0x4803441548	       add rax, qword [rbp + rdx + 0x48]	      1489	diff.c	FUNCTION_24	ELSE_1
0x4000dd3	      0x482b440d48	       sub rax, qword [rbp + rcx + 0x48]	      1489	diff.c	FUNCTION_24	ELSE_1
0x4000dd8	      0x482b440d08	          sub rax, qword [rbp + rcx + 8]	      1489	diff.c	FUNCTION_24	ELSE_1
0x4000ddd	        0x488d3c13	                    lea rdi, [rbx + rdx]	      1489	diff.c	FUNCTION_24	ELSE_1
0x4000de1	        0x488d340b	                    lea rsi, [rbx + rcx]	      1489	diff.c	FUNCTION_24	ELSE_1
0x4000de5	        0x4c8b4708	                 mov r8, qword [rdi + 8]	      1491	diff.c	FUNCTION_24
0x4000de9	          0x4929c0	                             sub r8, rax	      1491	diff.c	FUNCTION_24
0x4000dec	        0x4c894608	                 mov qword [rsi + 8], r8	      1491	diff.c	FUNCTION_24
0x4000df0	        0x488b4748	            mov rax, qword [rdi + 0x48] 	      1492	diff.c	FUNCTION_24
0x4000df4	        0x48894648	             mov qword [rsi + 0x48], rax	      1492	diff.c	FUNCTION_24
0x4000df8	          0x488b03	                    mov rax, qword [rbx]	      1466	diff.c	FUNCTION_23	WHILE_3
0x4000dfb	          0x4889dd	                            mov rbp, rbx	      1466	diff.c	FUNCTION_23	WHILE_3
0x4000dfe	          0x4885c0	                           test rax, rax	      1461	diff.c	FUNCTION_23	WHILE_3
0x4000e01	          0x4889c3	                            mov rbx, rax	      1461	diff.c	FUNCTION_23	WHILE_3
0x4000e04	            0x75ba	                           jne 0x4000dc0	      1461	diff.c	FUNCTION_23	WHILE_3
0x4000e06	          0x4c89f7	                            mov rdi, r14	      1471	diff.c	FUNCTION_23	CALL_14
0x4000e09	      0xe800000000	                          call 0x4000e0e	      1471	diff.c	FUNCTION_23	CALL_14
0x4000e0e	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       817	diff.c	FUNCTION_15	FOR_6	CALL_28
0x4000e13	      0xe800000000	                          call 0x4000e18	       817	diff.c	FUNCTION_15	FOR_6	CALL_28
0x4000e18	        0x488b3c24	                    mov rdi, qword [rsp]	       818	diff.c	FUNCTION_15	FOR_6	CALL_29
0x4000e1c	      0xe800000000	                          call 0x4000e21	       818	diff.c	FUNCTION_15	FOR_6	CALL_29
0x4000e21	      0xe9b2fcffff	                           jmp 0x4000ad8	       818	diff.c	FUNCTION_15	FOR_6	CALL_29
0x4000e26	    0x488dbc249800	                   lea rdi, [rsp + 0x98]	      1327	diff.c	FUNCTION_23	FOR_1	IF_4	CALL_6
0x4000e2e	        0x4883c201	                              add rdx, 1	      1326	diff.c	FUNCTION_23	FOR_1	IF_4
0x4000e32	      0x48894c2430	             mov qword [rsp + 0x30], rcx	      1326	diff.c	FUNCTION_23	FOR_1	IF_4
0x4000e37	    0x488994249800	             mov qword [rsp + 0x98], rdx	      1326	diff.c	FUNCTION_23	FOR_1	IF_4
0x4000e3f	      0xe800000000	                          call 0x4000e44	      1327	diff.c	FUNCTION_23	FOR_1	IF_4	CALL_6
0x4000e44	    0x488b94249800	            mov rdx, qword [rsp + 0x98] 	      1327	diff.c	FUNCTION_23	FOR_1	IF_4	CALL_6
0x4000e4c	          0x4889c6	                            mov rsi, rax	      1327	diff.c	FUNCTION_23	FOR_1	IF_4	CALL_6
0x4000e4f	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      1327	diff.c	FUNCTION_23	FOR_1	IF_4	CALL_6
0x4000e54	           0xfb602	                   movzx eax, byte [rdx]	      1327	diff.c	FUNCTION_23	FOR_1	IF_4	CALL_6
0x4000e57	      0xe9fefdffff	                           jmp 0x4000c5a	      1327	diff.c	FUNCTION_23	FOR_1	IF_4	CALL_6
0x4000e5c	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       820	diff.c	FUNCTION_15	CALL_30
0x4000e61	      0xe800000000	                          call 0x4000e66	       820	diff.c	FUNCTION_15	CALL_30
0x4000e66	    0x488b05000000	            mov rax, qword [0x04000e6d] 	       823	diff.c	FUNCTION_15
0x4000e6d	    0x48c780b80000	               mov qword [rax + 0xb8], 0	       823	diff.c	FUNCTION_15
0x4000e78	      0xe8d3090000	        call sym.diff_redraw.constprop.6	       825	diff.c	FUNCTION_15	CALL_31
0x4000e7d	      0xe96ffbffff	                           jmp 0x40009f1	       825	diff.c	FUNCTION_15	CALL_31
0x4000e82	            0x31c0	                            xor eax, eax	      1487	diff.c	FUNCTION_24	IF_1
0x4000e84	      0xe954ffffff	                           jmp 0x4000ddd	      1487	diff.c	FUNCTION_24	IF_1
0x4000e89	          0x4989dc	                            mov r12, rbx	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4000e8c	          0x4889eb	                            mov rbx, rbp	      1369	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4000e8f	        0x488d2c31	                    lea rbp, [rcx + rsi]	      1380	diff.c	FUNCTION_23	FOR_1	IF_11
0x4000e93	          0x4839c5	                            cmp rbp, rax	      1380	diff.c	FUNCTION_23	FOR_1	IF_11
0x4000e96	     0xf8c6a050000	                            jl 0x4001406	      1380	diff.c	FUNCTION_23	FOR_1	IF_11
0x4000e9c	      0x44897c2430	            mov dword [rsp + 0x30], r15d	      1380	diff.c	FUNCTION_23	FOR_1	IF_11
0x4000ea1	          0x4c89e7	                            mov rdi, r12	      1380	diff.c	FUNCTION_23	FOR_1	IF_11
0x4000ea4	      0x4c8b7c2440	            mov r15, qword [rsp + 0x40] 	      1380	diff.c	FUNCTION_23	FOR_1	IF_11
0x4000ea9	            0xeb0f	                           jmp 0x4000eba	      1380	diff.c	FUNCTION_23	FOR_1	IF_11
0x4000eab	       0xf1f440000	                   nop dword [rax + rax]	      1380	diff.c	FUNCTION_23	FOR_1	IF_11
0x4000eb0	      0x4b3b6cfb08	       cmp rbp, qword [r11 + r15*8 + 8] 	      1385	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2	IF_12
0x4000eb5	            0x7c0b	                            jl 0x4000ec2	      1385	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2	IF_12
0x4000eb7	          0x4c89df	                            mov rdi, r11	      1385	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2	IF_12
0x4000eba	          0x4c8b1f	                    mov r11, qword [rdi]	      1384	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2
0x4000ebd	          0x4d85db	                           test r11, r11	      1384	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2
0x4000ec0	            0x75ee	                           jne 0x4000eb0	      1384	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_2
0x4000ec2	          0x4829c8	                            sub rax, rcx	      1390	diff.c	FUNCTION_23	FOR_1	IF_11
0x4000ec5	      0x448b7c2430	           mov r15d, dword [rsp + 0x30] 	      1390	diff.c	FUNCTION_23	FOR_1	IF_11
0x4000eca	          0x4885c0	                           test rax, rax	      1391	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13
0x4000ecd	     0xf8e30060000	                           jle 0x4001503	      1391	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13
0x4000ed3	      0x443b6c247c	           cmp r13d, dword [rsp + 0x7c] 	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4000ed8	     0xf8ec0000000	                           jle 0x4000f9e	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4000ede	    0x488b15000000	            mov rdx, qword [0x04000ee5] 	      1394	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x4000ee5	        0x4a8d3412	                    lea rsi, [rdx + r10]	      1394	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x4000ee9	      0x48837e6000	               cmp qword [rsi + 0x60], 0	      1394	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x4000eee	      0x4889742430	             mov qword [rsp + 0x30], rsi	      1394	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x4000ef3	            0x740a	                            je 0x4000eff	      1394	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x4000ef5	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	      1395	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x4000efa	      0x49894cf408	        mov qword [r12 + rsi*8 + 8], rcx	      1395	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x4000eff	      0x443b6c2424	           cmp r13d, dword [rsp + 0x24] 	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4000f04	     0xf8e94000000	                           jle 0x4000f9e	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4000f0a	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      1394	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x4000f0f	      0x4883796800	               cmp qword [rcx + 0x68], 0	      1394	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x4000f14	            0x7405	                            je 0x4000f1b	      1394	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x4000f16	      0x4b29441410	       sub qword [r12 + r10 + 0x10], rax	      1395	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x4000f1b	      0x48634c2458	         movsxd rcx, dword [rsp + 0x58] 	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4000f20	          0x4139cd	                           cmp r13d, ecx	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4000f23	            0x7e79	                           jle 0x4000f9e	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4000f25	    0x48837cca6000	       cmp qword [rdx + rcx*8 + 0x60], 0	      1394	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x4000f2b	            0x7405	                            je 0x4000f32	      1394	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x4000f2d	      0x492944cc08	        sub qword [r12 + rcx*8 + 8], rax	      1395	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x4000f32	      0x48634c245c	         movsxd rcx, dword [rsp + 0x5c] 	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4000f37	          0x4139cd	                           cmp r13d, ecx	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4000f3a	            0x7e62	                           jle 0x4000f9e	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4000f3c	    0x48837cca6000	       cmp qword [rdx + rcx*8 + 0x60], 0	      1394	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x4000f42	            0x7405	                            je 0x4000f49	      1394	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x4000f44	      0x492944cc08	        sub qword [r12 + rcx*8 + 8], rax	      1395	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x4000f49	      0x443b6c2460	           cmp r13d, dword [rsp + 0x60] 	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4000f4e	            0x7e4e	                           jle 0x4000f9e	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4000f50	      0x488b4c2470	            mov rcx, qword [rsp + 0x70] 	      1394	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x4000f55	    0x48837cca6000	       cmp qword [rdx + rcx*8 + 0x60], 0	      1394	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x4000f5b	            0x740a	                            je 0x4000f67	      1394	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x4000f5d	      0x488b4c2450	            mov rcx, qword [rsp + 0x50] 	      1395	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x4000f62	      0x4929440c08	          sub qword [r12 + rcx + 8], rax	      1395	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x4000f67	      0x443b6c2478	           cmp r13d, dword [rsp + 0x78] 	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4000f6c	            0x7e30	                           jle 0x4000f9e	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4000f6e	    0x488b8c248000	            mov rcx, qword [rsp + 0x80] 	      1394	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x4000f76	    0x48837cca6000	       cmp qword [rdx + rcx*8 + 0x60], 0	      1394	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x4000f7c	            0x740a	                            je 0x4000f88	      1394	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x4000f7e	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	      1395	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x4000f83	      0x4929440c08	          sub qword [r12 + rcx + 8], rax	      1395	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x4000f88	      0x443b6c2464	           cmp r13d, dword [rsp + 0x64] 	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4000f8d	            0x7e0f	                           jle 0x4000f9e	      1393	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3
0x4000f8f	    0x4883ba900000	               cmp qword [rdx + 0x90], 0	      1394	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x4000f97	            0x7405	                            je 0x4000f9e	      1394	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x4000f99	      0x4929442438	             sub qword [r12 + 0x38], rax	      1395	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x4000f9e	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1395	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x4000fa3	        0x498d04c4	                  lea rax, [r12 + rax*8]	      1395	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13	FOR_3	IF_14
0x4000fa7	        0x4c894808	                 mov qword [rax + 8], r9	      1396	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13
0x4000fab	        0x4c894048	              mov qword [rax + 0x48], r8	      1397	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13
0x4000faf	        0x4a8d0417	                    lea rax, [rdi + r10]	      1397	diff.c	FUNCTION_23	FOR_1	IF_11	IF_13
0x4000fb3	        0x488b5008	                mov rdx, qword [rax + 8]	      1414	diff.c	FUNCTION_23	FOR_1	IF_11
0x4000fb7	          0x4889d1	                            mov rcx, rdx	      1413	diff.c	FUNCTION_23	FOR_1	IF_11
0x4000fba	        0x48034848	             add rcx, qword [rax + 0x48]	      1413	diff.c	FUNCTION_23	FOR_1	IF_11
0x4000fbe	          0x4829cd	                            sub rbp, rcx	      1415	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16
0x4000fc1	     0xf8884050000	                            js 0x400154b	      1415	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16
0x4000fc7	      0x443b6c247c	           cmp r13d, dword [rsp + 0x7c] 	      1423	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4
0x4000fcc	     0xf8e51010000	                           jle 0x4001123	      1423	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4
0x4000fd2	    0x488b0d000000	            mov rcx, qword [0x04000fd9] 	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4000fd9	        0x4a8d3411	                    lea rsi, [rcx + r10]	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4000fdd	      0x48837e6000	               cmp qword [rsi + 0x60], 0	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4000fe2	            0x7419	                            je 0x4000ffd	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4000fe4	      0x4c8b4c2440	              mov r9, qword [rsp + 0x40]	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4000fe9	        0x4f8d0414	                     lea r8, [r12 + r10]	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4000fed	      0x4a0354cf48	      add rdx, qword [rdi + r9*8 + 0x48]	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4000ff2	        0x492b5008	                 sub rdx, qword [r8 + 8]	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4000ff6	          0x4801ea	                            add rdx, rbp	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4000ff9	        0x49895048	              mov qword [r8 + 0x48], rdx	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4000ffd	      0x443b6c2424	           cmp r13d, dword [rsp + 0x24] 	      1423	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4
0x4001002	     0xf8e1b010000	                           jle 0x4001123	      1423	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4
0x4001008	      0x48837e6800	               cmp qword [rsi + 0x68], 0	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x400100d	            0x7419	                            je 0x4001028	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x400100f	        0x488b5050	            mov rdx, qword [rax + 0x50] 	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4001013	        0x48035010	             add rdx, qword [rax + 0x10]	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4001017	          0x4d01e2	                            add r10, r12	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x400101a	          0x4889d0	                            mov rax, rdx	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x400101d	        0x492b4210	             sub rax, qword [r10 + 0x10]	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4001021	          0x4801e8	                            add rax, rbp	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4001024	        0x49894250	             mov qword [r10 + 0x50], rax	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4001028	        0x8b442458	            mov eax, dword [rsp + 0x58] 	      1423	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4
0x400102c	          0x4139c5	                           cmp r13d, eax	      1423	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4
0x400102f	     0xf8eee000000	                           jle 0x4001123	      1423	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4
0x4001035	          0x4863d0	                         movsxd rdx, eax	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4001038	    0x48837cd16000	       cmp qword [rcx + rdx*8 + 0x60], 0	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x400103e	            0x741d	                            je 0x400105d	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4001040	        0x48c1e203	                              shl rdx, 3	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4001044	        0x498d3414	                    lea rsi, [r12 + rdx]	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4001048	      0x488b441708	         mov rax, qword [rdi + rdx + 8] 	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x400104d	      0x4803441748	       add rax, qword [rdi + rdx + 0x48]	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4001052	        0x482b4608	                sub rax, qword [rsi + 8]	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4001056	          0x4801e8	                            add rax, rbp	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4001059	        0x48894648	             mov qword [rsi + 0x48], rax	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x400105d	        0x8b44245c	            mov eax, dword [rsp + 0x5c] 	      1423	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4
0x4001061	          0x4139c5	                           cmp r13d, eax	      1423	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4
0x4001064	     0xf8eb9000000	                           jle 0x4001123	      1423	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4
0x400106a	          0x4863d0	                         movsxd rdx, eax	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x400106d	    0x48837cd16000	       cmp qword [rcx + rdx*8 + 0x60], 0	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4001073	            0x741d	                            je 0x4001092	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4001075	        0x48c1e203	                              shl rdx, 3	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4001079	        0x498d3414	                    lea rsi, [r12 + rdx]	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x400107d	      0x488b441708	         mov rax, qword [rdi + rdx + 8] 	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4001082	      0x4803441748	       add rax, qword [rdi + rdx + 0x48]	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4001087	        0x482b4608	                sub rax, qword [rsi + 8]	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x400108b	          0x4801e8	                            add rax, rbp	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x400108e	        0x48894648	             mov qword [rsi + 0x48], rax	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4001092	      0x443b6c2460	           cmp r13d, dword [rsp + 0x60] 	      1423	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4
0x4001097	     0xf8e86000000	                           jle 0x4001123	      1423	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4
0x400109d	      0x488b442470	            mov rax, qword [rsp + 0x70] 	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x40010a2	    0x48837cc16000	       cmp qword [rcx + rax*8 + 0x60], 0	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x40010a8	            0x741e	                            je 0x40010c8	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x40010aa	      0x488b742450	            mov rsi, qword [rsp + 0x50] 	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x40010af	        0x498d1434	                    lea rdx, [r12 + rsi]	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x40010b3	      0x488b443708	         mov rax, qword [rdi + rsi + 8] 	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x40010b8	      0x4803443748	       add rax, qword [rdi + rsi + 0x48]	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x40010bd	        0x482b4208	                sub rax, qword [rdx + 8]	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x40010c1	          0x4801e8	                            add rax, rbp	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x40010c4	        0x48894248	             mov qword [rdx + 0x48], rax	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x40010c8	      0x443b6c2478	           cmp r13d, dword [rsp + 0x78] 	      1423	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4
0x40010cd	            0x7e54	                           jle 0x4001123	      1423	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4
0x40010cf	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x40010d7	    0x48837cc16000	       cmp qword [rcx + rax*8 + 0x60], 0	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x40010dd	            0x741e	                            je 0x40010fd	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x40010df	      0x488b742468	            mov rsi, qword [rsp + 0x68] 	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x40010e4	        0x498d1434	                    lea rdx, [r12 + rsi]	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x40010e8	      0x488b443708	         mov rax, qword [rdi + rsi + 8] 	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x40010ed	      0x4803443748	       add rax, qword [rdi + rsi + 0x48]	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x40010f2	        0x482b4208	                sub rax, qword [rdx + 8]	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x40010f6	          0x4801e8	                            add rax, rbp	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x40010f9	        0x48894248	             mov qword [rdx + 0x48], rax	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x40010fd	      0x443b6c2464	           cmp r13d, dword [rsp + 0x64] 	      1423	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4
0x4001102	            0x7e1f	                           jle 0x4001123	      1423	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4
0x4001104	    0x4883b9900000	               cmp qword [rcx + 0x90], 0	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x400110c	            0x7415	                            je 0x4001123	      1424	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x400110e	        0x488b4778	            mov rax, qword [rdi + 0x78] 	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4001112	        0x48034738	             add rax, qword [rdi + 0x38]	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4001116	      0x492b442438	             sub rax, qword [r12 + 0x38]	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x400111b	          0x4801c5	                            add rbp, rax	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x400111e	      0x49896c2478	             mov qword [r12 + 0x78], rbp	      1425	diff.c	FUNCTION_23	FOR_1	IF_11	FOR_4	IF_18
0x4001123	        0x498b3c24	                    mov rdi, qword [r12]	      1429	diff.c	FUNCTION_23	FOR_1	IF_11
0x4001127	        0x4d891c24	                    mov qword [r12], r11	      1430	diff.c	FUNCTION_23	FOR_1	IF_11
0x400112b	          0x4c39df	                            cmp rdi, r11	      1431	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x400112e	            0x7411	                            je 0x4001141	      1431	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x4001130	          0x488b2f	                    mov rbp, qword [rdi]	      1433	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x4001133	      0xe800000000	                          call 0x4001138	      1434	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2	CALL_10
0x4001138	        0x493b2c24	                    cmp rbp, qword [r12]	      1431	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x400113c	          0x4889ef	                            mov rdi, rbp	      1431	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x400113f	            0x75ef	                           jne 0x4001130	      1431	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x4001141	          0x4889dd	                            mov rbp, rbx	      1431	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x4001144	          0x4531ff	                          xor r15d, r15d	      1457	diff.c	FUNCTION_23	FOR_1
0x4001147	          0x4c89e3	                            mov rbx, r12	      1431	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x400114a	      0xe9a1faffff	                           jmp 0x4000bf0	      1431	diff.c	FUNCTION_23	FOR_1	IF_11	WHILE_2
0x400114f	      0xbf88000000	                           mov edi, 0x88	       497	diff.c	FUNCTION_10	CALL_1
0x4001154	    0x4c8984248800	              mov qword [rsp + 0x88], r8	       497	diff.c	FUNCTION_10	CALL_1
0x400115c	      0x4889742448	             mov qword [rsp + 0x48], rsi	       497	diff.c	FUNCTION_10	CALL_1
0x4001161	      0x4c894c2438	              mov qword [rsp + 0x38], r9	       497	diff.c	FUNCTION_10	CALL_1
0x4001166	      0x48894c2430	             mov qword [rsp + 0x30], rcx	       497	diff.c	FUNCTION_10	CALL_1
0x400116b	      0xe800000000	                          call 0x4001170	       497	diff.c	FUNCTION_10	CALL_1
0x4001170	          0x4885c0	                           test rax, rax	       498	diff.c	FUNCTION_10	IF_1
0x4001173	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	       498	diff.c	FUNCTION_10	IF_1
0x4001178	      0x4c8b4c2438	              mov r9, qword [rsp + 0x38]	       498	diff.c	FUNCTION_10	IF_1
0x400117d	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	       498	diff.c	FUNCTION_10	IF_1
0x4001182	    0x4c8b84248800	              mov r8, qword [rsp + 0x88]	       498	diff.c	FUNCTION_10	IF_1
0x400118a	     0xf8476fcffff	                            je 0x4000e06	       498	diff.c	FUNCTION_10	IF_1
0x4001190	          0x4889dd	                            mov rbp, rbx	       500	diff.c	FUNCTION_10	IF_1
0x4001193	    0x48c700000000	                      mov qword [rax], 0	       500	diff.c	FUNCTION_10	IF_1
0x400119a	          0x4889c3	                            mov rbx, rax	       497	diff.c	FUNCTION_10	CALL_1
0x400119d	        0x48895d00	                    mov qword [rbp], rbx	       504	diff.c	FUNCTION_10	IF_1	ELSE_1
0x40011a1	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       504	diff.c	FUNCTION_10	IF_1	ELSE_1
0x40011a6	      0x443b6c2424	           cmp r13d, dword [rsp + 0x24] 	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x40011ab	    0x488d14c50000	                        lea rdx, [rax*8]	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x40011b3	        0x488d0413	                    lea rax, [rbx + rdx]	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x40011b7	        0x48894808	                mov qword [rax + 8], rcx	      1445	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x40011bb	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1445	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x40011c0	        0x48897048	             mov qword [rax + 0x48], rsi	      1446	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x40011c4	        0x488d0ccb	                  lea rcx, [rbx + rcx*8]	      1446	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x40011c8	        0x4c894908	                 mov qword [rcx + 8], r9	      1447	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x40011cc	        0x4c894148	              mov qword [rcx + 0x48], r8	      1448	diff.c	FUNCTION_23	FOR_1	ELSE_7
0x40011d0	     0xf8ec2010000	                           jle 0x4001398	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x40011d6	    0x488b0d000000	            mov rcx, qword [0x040011dd] 	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x40011dd	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x40011e2	    0x48837cf16000	       cmp qword [rcx + rsi*8 + 0x60], 0	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x40011e8	            0x7431	                            je 0x400121b	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x40011ea	          0x4885ed	                           test rbp, rbp	      1486	diff.c	FUNCTION_24	IF_1
0x40011ed	     0xf84dc020000	                            je 0x40014cf	      1486	diff.c	FUNCTION_24	IF_1
0x40011f3	      0x488d7c1500	                    lea rdi, [rbp + rdx]	      1486	diff.c	FUNCTION_24	IF_1
0x40011f8	        0x488b7748	            mov rsi, qword [rdi + 0x48] 	      1489	diff.c	FUNCTION_24	ELSE_1
0x40011fc	        0x48037708	                add rsi, qword [rdi + 8]	      1489	diff.c	FUNCTION_24	ELSE_1
0x4001200	        0x482b7750	             sub rsi, qword [rdi + 0x50]	      1489	diff.c	FUNCTION_24	ELSE_1
0x4001204	        0x482b7710	             sub rsi, qword [rdi + 0x10]	      1489	diff.c	FUNCTION_24	ELSE_1
0x4001208	        0x488b7808	                mov rdi, qword [rax + 8]	      1491	diff.c	FUNCTION_24
0x400120c	          0x4829f7	                            sub rdi, rsi	      1491	diff.c	FUNCTION_24
0x400120f	        0x488b7048	            mov rsi, qword [rax + 0x48] 	      1492	diff.c	FUNCTION_24
0x4001213	        0x48897810	             mov qword [rax + 0x10], rdi	      1491	diff.c	FUNCTION_24
0x4001217	        0x48897050	             mov qword [rax + 0x50], rsi	      1492	diff.c	FUNCTION_24
0x400121b	        0x8b742458	            mov esi, dword [rsp + 0x58] 	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x400121f	          0x4139f5	                           cmp r13d, esi	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x4001222	     0xf8e70010000	                           jle 0x4001398	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x4001228	          0x4863fe	                         movsxd rdi, esi	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x400122b	    0x48837cf96000	       cmp qword [rcx + rdi*8 + 0x60], 0	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x4001231	            0x7434	                            je 0x4001267	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x4001233	          0x4885ed	                           test rbp, rbp	      1486	diff.c	FUNCTION_24	IF_1
0x4001236	     0xf84a1020000	                            je 0x40014dd	      1486	diff.c	FUNCTION_24	IF_1
0x400123c	      0x488b741508	         mov rsi, qword [rbp + rdx + 8] 	      1489	diff.c	FUNCTION_24	ELSE_1
0x4001241	      0x4803741548	       add rsi, qword [rbp + rdx + 0x48]	      1489	diff.c	FUNCTION_24	ELSE_1
0x4001246	      0x482b74fd48	     sub rsi, qword [rbp + rdi*8 + 0x48]	      1489	diff.c	FUNCTION_24	ELSE_1
0x400124b	      0x482b74fd08	        sub rsi, qword [rbp + rdi*8 + 8]	      1489	diff.c	FUNCTION_24	ELSE_1
0x4001250	        0x4c8b4808	                 mov r9, qword [rax + 8]	      1491	diff.c	FUNCTION_24
0x4001254	        0x488d3cfb	                  lea rdi, [rbx + rdi*8]	      1491	diff.c	FUNCTION_24
0x4001258	          0x4929f1	                             sub r9, rsi	      1491	diff.c	FUNCTION_24
0x400125b	        0x4c894f08	                 mov qword [rdi + 8], r9	      1491	diff.c	FUNCTION_24
0x400125f	        0x488b7048	            mov rsi, qword [rax + 0x48] 	      1492	diff.c	FUNCTION_24
0x4001263	        0x48897748	             mov qword [rdi + 0x48], rsi	      1492	diff.c	FUNCTION_24
0x4001267	        0x8b74245c	            mov esi, dword [rsp + 0x5c] 	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x400126b	          0x4139f5	                           cmp r13d, esi	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x400126e	     0xf8e24010000	                           jle 0x4001398	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x4001274	          0x4863fe	                         movsxd rdi, esi	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x4001277	    0x48837cf96000	       cmp qword [rcx + rdi*8 + 0x60], 0	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x400127d	            0x7434	                            je 0x40012b3	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x400127f	          0x4885ed	                           test rbp, rbp	      1486	diff.c	FUNCTION_24	IF_1
0x4001282	     0xf845c020000	                            je 0x40014e4	      1486	diff.c	FUNCTION_24	IF_1
0x4001288	      0x488b741508	         mov rsi, qword [rbp + rdx + 8] 	      1489	diff.c	FUNCTION_24	ELSE_1
0x400128d	      0x4803741548	       add rsi, qword [rbp + rdx + 0x48]	      1489	diff.c	FUNCTION_24	ELSE_1
0x4001292	      0x482b74fd48	     sub rsi, qword [rbp + rdi*8 + 0x48]	      1489	diff.c	FUNCTION_24	ELSE_1
0x4001297	      0x482b74fd08	        sub rsi, qword [rbp + rdi*8 + 8]	      1489	diff.c	FUNCTION_24	ELSE_1
0x400129c	        0x4c8b4808	                 mov r9, qword [rax + 8]	      1491	diff.c	FUNCTION_24
0x40012a0	        0x488d3cfb	                  lea rdi, [rbx + rdi*8]	      1491	diff.c	FUNCTION_24
0x40012a4	          0x4929f1	                             sub r9, rsi	      1491	diff.c	FUNCTION_24
0x40012a7	        0x4c894f08	                 mov qword [rdi + 8], r9	      1491	diff.c	FUNCTION_24
0x40012ab	        0x488b7048	            mov rsi, qword [rax + 0x48] 	      1492	diff.c	FUNCTION_24
0x40012af	        0x48897748	             mov qword [rdi + 0x48], rsi	      1492	diff.c	FUNCTION_24
0x40012b3	      0x443b6c2460	           cmp r13d, dword [rsp + 0x60] 	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x40012b8	     0xf8eda000000	                           jle 0x4001398	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x40012be	      0x488b742470	            mov rsi, qword [rsp + 0x70] 	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x40012c3	    0x48837cf16000	       cmp qword [rcx + rsi*8 + 0x60], 0	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x40012c9	            0x7438	                            je 0x4001303	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x40012cb	          0x4885ed	                           test rbp, rbp	      1486	diff.c	FUNCTION_24	IF_1
0x40012ce	     0xf8417020000	                            je 0x40014eb	      1486	diff.c	FUNCTION_24	IF_1
0x40012d4	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      1489	diff.c	FUNCTION_24	ELSE_1
0x40012d9	      0x488b741508	         mov rsi, qword [rbp + rdx + 8] 	      1489	diff.c	FUNCTION_24	ELSE_1
0x40012de	      0x4803741548	       add rsi, qword [rbp + rdx + 0x48]	      1489	diff.c	FUNCTION_24	ELSE_1
0x40012e3	      0x482b743d48	       sub rsi, qword [rbp + rdi + 0x48]	      1489	diff.c	FUNCTION_24	ELSE_1
0x40012e8	      0x482b743d08	          sub rsi, qword [rbp + rdi + 8]	      1489	diff.c	FUNCTION_24	ELSE_1
0x40012ed	        0x4c8b4808	                 mov r9, qword [rax + 8]	      1491	diff.c	FUNCTION_24
0x40012f1	          0x4801df	                            add rdi, rbx	      1491	diff.c	FUNCTION_24
0x40012f4	          0x4929f1	                             sub r9, rsi	      1491	diff.c	FUNCTION_24
0x40012f7	        0x4c894f08	                 mov qword [rdi + 8], r9	      1491	diff.c	FUNCTION_24
0x40012fb	        0x488b7048	            mov rsi, qword [rax + 0x48] 	      1492	diff.c	FUNCTION_24
0x40012ff	        0x48897748	             mov qword [rdi + 0x48], rsi	      1492	diff.c	FUNCTION_24
0x4001303	      0x443b6c2478	           cmp r13d, dword [rsp + 0x78] 	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x4001308	     0xf8e8a000000	                           jle 0x4001398	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x400130e	    0x488bb4248000	            mov rsi, qword [rsp + 0x80] 	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x4001316	    0x48837cf16000	       cmp qword [rcx + rsi*8 + 0x60], 0	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x400131c	            0x7438	                            je 0x4001356	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x400131e	          0x4885ed	                           test rbp, rbp	      1486	diff.c	FUNCTION_24	IF_1
0x4001321	     0xf84d0010000	                            je 0x40014f7	      1486	diff.c	FUNCTION_24	IF_1
0x4001327	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      1489	diff.c	FUNCTION_24	ELSE_1
0x400132c	      0x488b741508	         mov rsi, qword [rbp + rdx + 8] 	      1489	diff.c	FUNCTION_24	ELSE_1
0x4001331	      0x4803741548	       add rsi, qword [rbp + rdx + 0x48]	      1489	diff.c	FUNCTION_24	ELSE_1
0x4001336	      0x482b743d48	       sub rsi, qword [rbp + rdi + 0x48]	      1489	diff.c	FUNCTION_24	ELSE_1
0x400133b	      0x482b743d08	          sub rsi, qword [rbp + rdi + 8]	      1489	diff.c	FUNCTION_24	ELSE_1
0x4001340	        0x4c8b4808	                 mov r9, qword [rax + 8]	      1491	diff.c	FUNCTION_24
0x4001344	          0x4801df	                            add rdi, rbx	      1491	diff.c	FUNCTION_24
0x4001347	          0x4929f1	                             sub r9, rsi	      1491	diff.c	FUNCTION_24
0x400134a	        0x4c894f08	                 mov qword [rdi + 8], r9	      1491	diff.c	FUNCTION_24
0x400134e	        0x488b7048	            mov rsi, qword [rax + 0x48] 	      1492	diff.c	FUNCTION_24
0x4001352	        0x48897748	             mov qword [rdi + 0x48], rsi	      1492	diff.c	FUNCTION_24
0x4001356	      0x443b6c2464	           cmp r13d, dword [rsp + 0x64] 	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x400135b	            0x7e3b	                           jle 0x4001398	      1453	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5
0x400135d	    0x4883b9900000	               cmp qword [rcx + 0x90], 0	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x4001365	            0x7431	                            je 0x4001398	      1454	diff.c	FUNCTION_23	FOR_1	ELSE_7	FOR_5	IF_20
0x4001367	          0x4885ed	                           test rbp, rbp	      1486	diff.c	FUNCTION_24	IF_1
0x400136a	     0xf8466010000	                            je 0x40014d6	      1486	diff.c	FUNCTION_24	IF_1
0x4001370	      0x488b4c1508	         mov rcx, qword [rbp + rdx + 8] 	      1489	diff.c	FUNCTION_24	ELSE_1
0x4001375	      0x48034c1548	       add rcx, qword [rbp + rdx + 0x48]	      1489	diff.c	FUNCTION_24	ELSE_1
0x400137a	          0x4889ca	                            mov rdx, rcx	      1489	diff.c	FUNCTION_24	ELSE_1
0x400137d	        0x482b5578	             sub rdx, qword [rbp + 0x78]	      1489	diff.c	FUNCTION_24	ELSE_1
0x4001381	        0x482b5538	             sub rdx, qword [rbp + 0x38]	      1489	diff.c	FUNCTION_24	ELSE_1
0x4001385	        0x488b4808	                mov rcx, qword [rax + 8]	      1491	diff.c	FUNCTION_24
0x4001389	          0x4829d1	                            sub rcx, rdx	      1491	diff.c	FUNCTION_24
0x400138c	        0x48894b38	             mov qword [rbx + 0x38], rcx	      1491	diff.c	FUNCTION_24
0x4001390	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1492	diff.c	FUNCTION_24
0x4001394	        0x48894378	             mov qword [rbx + 0x78], rax	      1492	diff.c	FUNCTION_24
0x4001398	          0x4531ff	                          xor r15d, r15d	      1457	diff.c	FUNCTION_23	FOR_1
0x400139b	      0xe950f8ffff	                           jmp 0x4000bf0	      1457	diff.c	FUNCTION_23	FOR_1
0x40013a0	    0x41bf01000000	                             mov r15d, 1	       679	diff.c	FUNCTION_15	FOR_1
0x40013a6	      0xe925f3ffff	                           jmp 0x40006d0	       679	diff.c	FUNCTION_15	FOR_1
0x40013ab	    0x41bf02000000	                             mov r15d, 2	       679	diff.c	FUNCTION_15	FOR_1
0x40013b1	      0xe91af3ffff	                           jmp 0x40006d0	       679	diff.c	FUNCTION_15	FOR_1
0x40013b6	    0x41bf03000000	                             mov r15d, 3	       679	diff.c	FUNCTION_15	FOR_1
0x40013bc	      0xe90ff3ffff	                           jmp 0x40006d0	       679	diff.c	FUNCTION_15	FOR_1
0x40013c1	    0x41bf04000000	                             mov r15d, 4	       679	diff.c	FUNCTION_15	FOR_1
0x40013c7	      0xe904f3ffff	                           jmp 0x40006d0	       679	diff.c	FUNCTION_15	FOR_1
0x40013cc	    0x41bf05000000	                             mov r15d, 5	       679	diff.c	FUNCTION_15	FOR_1
0x40013d2	      0xe9f9f2ffff	                           jmp 0x40006d0	       679	diff.c	FUNCTION_15	FOR_1
0x40013d7	    0x41bf06000000	                             mov r15d, 6	       679	diff.c	FUNCTION_15	FOR_1
0x40013dd	      0xe9eef2ffff	                           jmp 0x40006d0	       679	diff.c	FUNCTION_15	FOR_1
0x40013e2	            0x31ff	                            xor edi, edi	       782	diff.c	FUNCTION_15	IF_18	CALL_19
0x40013e4	      0xba05000000	                              mov edx, 5	       782	diff.c	FUNCTION_15	IF_18	CALL_19
0x40013e9	      0xbe00000000	                              mov esi, 0	       782	diff.c	FUNCTION_15	IF_18	CALL_19
0x40013ee	      0xe800000000	                          call 0x40013f3	       782	diff.c	FUNCTION_15	IF_18	CALL_19
0x40013f3	          0x4889c7	                            mov rdi, rax	       782	diff.c	FUNCTION_15	IF_18	CALL_19
0x40013f6	      0xe800000000	                          call 0x40013fb	       782	diff.c	FUNCTION_15	IF_18	CALL_19
0x40013fb	      0xe9cef5ffff	                           jmp 0x40009ce	       782	diff.c	FUNCTION_15	IF_18	CALL_19
0x4001400	          0x4531e4	                          xor r12d, r12d	      1368	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001403	          0x4889eb	                            mov rbx, rbp	      1368	diff.c	FUNCTION_23	FOR_1	WHILE_1
0x4001406	      0xbf88000000	                           mov edi, 0x88	       497	diff.c	FUNCTION_10	CALL_1
0x400140b	    0x4c8984248800	              mov qword [rsp + 0x88], r8	       497	diff.c	FUNCTION_10	CALL_1
0x4001413	      0x4889742448	             mov qword [rsp + 0x48], rsi	       497	diff.c	FUNCTION_10	CALL_1
0x4001418	      0x4c894c2438	              mov qword [rsp + 0x38], r9	       497	diff.c	FUNCTION_10	CALL_1
0x400141d	      0x48894c2430	             mov qword [rsp + 0x30], rcx	       497	diff.c	FUNCTION_10	CALL_1
0x4001422	    0x488b2d000000	            mov rbp, qword [0x04001429] 	      1441	diff.c	FUNCTION_23	FOR_1	ELSE_7	CALL_11
0x4001429	      0xe800000000	                          call 0x400142e	       497	diff.c	FUNCTION_10	CALL_1
0x400142e	          0x4885c0	                           test rax, rax	       498	diff.c	FUNCTION_10	IF_1
0x4001431	     0xf84cff9ffff	                            je 0x4000e06	       498	diff.c	FUNCTION_10	IF_1
0x4001437	          0x4885db	                           test rbx, rbx	       501	diff.c	FUNCTION_10	IF_1	IF_2
0x400143a	          0x4c8920	                    mov qword [rax], r12	       500	diff.c	FUNCTION_10	IF_1
0x400143d	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	       501	diff.c	FUNCTION_10	IF_1	IF_2
0x4001442	      0x4c8b4c2438	              mov r9, qword [rsp + 0x38]	       501	diff.c	FUNCTION_10	IF_1	IF_2
0x4001447	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	       501	diff.c	FUNCTION_10	IF_1	IF_2
0x400144c	    0x4c8b84248800	              mov r8, qword [rsp + 0x88]	       501	diff.c	FUNCTION_10	IF_1	IF_2
0x4001454	            0x746b	                            je 0x40014c1	       501	diff.c	FUNCTION_10	IF_1	IF_2
0x4001456	          0x4889dd	                            mov rbp, rbx	       501	diff.c	FUNCTION_10	IF_1	IF_2
0x4001459	          0x4889c3	                            mov rbx, rax	       497	diff.c	FUNCTION_10	CALL_1
0x400145c	      0xe93cfdffff	                           jmp 0x400119d	       497	diff.c	FUNCTION_10	CALL_1
0x4001461	        0x4883c101	                              add rcx, 1	      1347	diff.c	FUNCTION_23	FOR_1	IF_8
0x4001465	            0x31f6	                            xor esi, esi	      1348	diff.c	FUNCTION_23	FOR_1	IF_8
0x4001467	      0xe985f8ffff	                           jmp 0x4000cf1	      1348	diff.c	FUNCTION_23	FOR_1	IF_8
0x400146c	        0x4983c101	                               add r9, 1	      1357	diff.c	FUNCTION_23	FOR_1	IF_9
0x4001470	          0x4531c0	                            xor r8d, r8d	      1358	diff.c	FUNCTION_23	FOR_1	IF_9
0x4001473	      0xe980f8ffff	                           jmp 0x4000cf8	      1358	diff.c	FUNCTION_23	FOR_1	IF_9
0x4001478	      0xe800000000	                          call 0x400147d	       848	diff.c	FUNCTION_16	CALL_1
0x400147d	      0xe907f7ffff	                           jmp 0x4000b89	       848	diff.c	FUNCTION_16	CALL_1
0x4001482	    0x488dbc249800	                   lea rdi, [rsp + 0x98]	      1338	diff.c	FUNCTION_23	FOR_1	IF_6	CALL_8
0x400148a	        0x4883c201	                              add rdx, 1	      1337	diff.c	FUNCTION_23	FOR_1	IF_6
0x400148e	    0x488984248800	             mov qword [rsp + 0x88], rax	      1337	diff.c	FUNCTION_23	FOR_1	IF_6
0x4001496	    0x488994249800	             mov qword [rsp + 0x98], rdx	      1337	diff.c	FUNCTION_23	FOR_1	IF_6
0x400149e	      0xe800000000	                          call 0x40014a3	      1338	diff.c	FUNCTION_23	FOR_1	IF_6	CALL_8
0x40014a3	    0x4c8b8c248800	              mov r9, qword [rsp + 0x88]	      1338	diff.c	FUNCTION_23	FOR_1	IF_6	CALL_8
0x40014ab	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      1338	diff.c	FUNCTION_23	FOR_1	IF_6	CALL_8
0x40014b0	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      1338	diff.c	FUNCTION_23	FOR_1	IF_6	CALL_8
0x40014b5	          0x4939c1	                             cmp r9, rax	      1338	diff.c	FUNCTION_23	FOR_1	IF_6	CALL_8
0x40014b8	        0x410f9fc4	                               setg r12b	      1338	diff.c	FUNCTION_23	FOR_1	IF_6	CALL_8
0x40014bc	      0xe9fdf7ffff	                           jmp 0x4000cbe	      1338	diff.c	FUNCTION_23	FOR_1	IF_6	CALL_8
0x40014c1	        0x48894558	            mov qword [rbp + 0x58], rax 	       502	diff.c	FUNCTION_10	IF_1	IF_2
0x40014c5	          0x4889c3	                            mov rbx, rax	       497	diff.c	FUNCTION_10	CALL_1
0x40014c8	            0x31ed	                            xor ebp, ebp	       502	diff.c	FUNCTION_10	IF_1	IF_2
0x40014ca	      0xe9d2fcffff	                           jmp 0x40011a1	       502	diff.c	FUNCTION_10	IF_1	IF_2
0x40014cf	            0x31f6	                            xor esi, esi	      1487	diff.c	FUNCTION_24	IF_1
0x40014d1	      0xe932fdffff	                           jmp 0x4001208	      1487	diff.c	FUNCTION_24	IF_1
0x40014d6	            0x31d2	                            xor edx, edx	      1487	diff.c	FUNCTION_24	IF_1
0x40014d8	      0xe9a8feffff	                           jmp 0x4001385	      1487	diff.c	FUNCTION_24	IF_1
0x40014dd	            0x31f6	                            xor esi, esi	      1487	diff.c	FUNCTION_24	IF_1
0x40014df	      0xe96cfdffff	                           jmp 0x4001250	      1487	diff.c	FUNCTION_24	IF_1
0x40014e4	            0x31f6	                            xor esi, esi	      1487	diff.c	FUNCTION_24	IF_1
0x40014e6	      0xe9b1fdffff	                           jmp 0x400129c	      1487	diff.c	FUNCTION_24	IF_1
0x40014eb	            0x31f6	                            xor esi, esi	      1487	diff.c	FUNCTION_24	IF_1
0x40014ed	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      1487	diff.c	FUNCTION_24	IF_1
0x40014f2	      0xe9f6fdffff	                           jmp 0x40012ed	      1487	diff.c	FUNCTION_24	IF_1
0x40014f7	            0x31f6	                            xor esi, esi	      1487	diff.c	FUNCTION_24	IF_1
0x40014f9	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      1487	diff.c	FUNCTION_24	IF_1
0x40014fe	      0xe93dfeffff	                           jmp 0x4001340	      1487	diff.c	FUNCTION_24	IF_1
0x4001503	          0x4585ff	                         test r15d, r15d	      1399	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x4001506	            0x746d	                            je 0x4001575	      1399	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x4001508	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1399	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x400150d	          0x4901c1	                             add r9, rax	      1402	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x4001510	          0x4929c0	                             sub r8, rax	      1403	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x4001513	        0x4a8d0417	                    lea rax, [rdi + r10]	      1403	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x4001517	        0x498d14cc	                  lea rdx, [r12 + rcx*8]	      1403	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x400151b	        0x4c894a08	                 mov qword [rdx + 8], r9	      1402	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x400151f	        0x4c894248	              mov qword [rdx + 0x48], r8	      1403	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_5	IF_15
0x4001523	        0x488b5008	                mov rdx, qword [rax + 8]	      1414	diff.c	FUNCTION_23	FOR_1	IF_11
0x4001527	          0x4889d1	                            mov rcx, rdx	      1413	diff.c	FUNCTION_23	FOR_1	IF_11
0x400152a	        0x48034848	             add rcx, qword [rax + 0x48]	      1413	diff.c	FUNCTION_23	FOR_1	IF_11
0x400152e	          0x4829cd	                            sub rbp, rcx	      1415	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16
0x4001531	     0xf8990faffff	                           jns 0x4000fc7	      1415	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16
0x4001537	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1420	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16	IF_17
0x400153c	          0x4929e8	                             sub r8, rbp	      1420	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16	IF_17
0x400153f	            0x31ed	                            xor ebp, ebp	      1421	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16
0x4001541	      0x4d8944cc48	      mov qword [r12 + rcx*8 + 0x48], r8	      1420	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16	IF_17
0x4001546	      0xe97cfaffff	                           jmp 0x4000fc7	      1420	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16	IF_17
0x400154b	          0x4585ff	                         test r15d, r15d	      1419	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16	IF_17
0x400154e	            0x75e7	                           jne 0x4001537	      1419	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16	IF_17
0x4001550	            0x31ed	                            xor ebp, ebp	      1421	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16
0x4001552	      0xe970faffff	                           jmp 0x4000fc7	      1421	diff.c	FUNCTION_23	FOR_1	IF_11	IF_16
0x4001557	            0x31ff	                            xor edi, edi	      1306	diff.c	FUNCTION_23	IF_1	CALL_3
0x4001559	      0xba05000000	                              mov edx, 5	      1306	diff.c	FUNCTION_23	IF_1	CALL_3
0x400155e	      0xbe00000000	                              mov esi, 0	      1306	diff.c	FUNCTION_23	IF_1	CALL_3
0x4001563	      0xe800000000	                          call 0x4001568	      1306	diff.c	FUNCTION_23	IF_1	CALL_3
0x4001568	          0x4889c7	                            mov rdi, rax	      1306	diff.c	FUNCTION_23	IF_1	CALL_3
0x400156b	      0xe800000000	                          call 0x4001570	      1306	diff.c	FUNCTION_23	IF_1	CALL_3
0x4001570	      0xe999f8ffff	                           jmp 0x4000e0e	      1306	diff.c	FUNCTION_23	IF_1	CALL_3
0x4001575	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1306	diff.c	FUNCTION_23	IF_1	CALL_3
0x400157a	          0x4929f0	                             sub r8, rsi	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x400157d	        0x498d0cc4	                  lea rcx, [r12 + rax*8]	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4001581	        0x4a8d0417	                    lea rax, [rdi + r10]	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4001585	        0x4c034008	                 add r8, qword [rax + 8]	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4001589	        0x4c034048	              add r8, qword [rax + 0x48]	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x400158d	          0x4929d0	                             sub r8, rdx	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4001590	        0x4c034148	              add r8, qword [rcx + 0x48]	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4001594	        0x4c894148	              mov qword [rcx + 0x48], r8	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x4001598	      0xe916faffff	                           jmp 0x4000fb3	      1407	diff.c	FUNCTION_23	FOR_1	IF_11	ELSE_6
0x400159d	      0xe800000000	                          call 0x40015a2	       831	diff.c	FUNCTION_15
diff_buf_delete	IF,0:CALL,0:functions,1:FOR,0:SWITCH,0:ELSE,0:DO,0:WHILE,0	61
0x40021d0	              0x55	                                push rbp	        65	diff.c	FUNCTION_1
0x40021d1	              0x53	                                push rbx	        65	diff.c	FUNCTION_1
0x40021d2	          0x4889fd	                            mov rbp, rdi	        65	diff.c	FUNCTION_1
0x40021d5	        0x4883ec08	                              sub rsp, 8	        65	diff.c	FUNCTION_1
0x40021d9	    0x488b1d000000	            mov rbx, qword [0x040021e0] 	        69	diff.c	FUNCTION_1
0x40021e0	          0x4885db	                           test rbx, rbx	        69	diff.c	FUNCTION_1
0x40021e3	            0x7463	                            je 0x4002248	        69	diff.c	FUNCTION_1
0x40021e5	           0xf1f00	                         nop dword [rax]	        69	diff.c	FUNCTION_1
0x40021e8	        0x483b6b60	            cmp rbp, qword [rbx + 0x60] 	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40021ec	            0x7462	                            je 0x4002250	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40021ee	        0x483b6b68	            cmp rbp, qword [rbx + 0x68] 	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40021f2	     0xf8488000000	                            je 0x4002280	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40021f8	        0x483b6b70	            cmp rbp, qword [rbx + 0x70] 	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40021fc	     0xf848e000000	                            je 0x4002290	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4002202	        0x483b6b78	            cmp rbp, qword [rbx + 0x78] 	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4002206	     0xf8494000000	                            je 0x40022a0	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x400220c	    0x483bab800000	            cmp rbp, qword [rbx + 0x80] 	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4002213	     0xf8497000000	                            je 0x40022b0	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4002219	    0x483bab880000	            cmp rbp, qword [rbx + 0x88] 	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4002220	     0xf849a000000	                            je 0x40022c0	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4002226	    0x483bab900000	            cmp rbp, qword [rbx + 0x90] 	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x400222d	     0xf849d000000	                            je 0x40022d0	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4002233	    0x483bab980000	            cmp rbp, qword [rbx + 0x98] 	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x400223a	     0xf84a0000000	                            je 0x40022e0	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4002240	          0x488b1b	                    mov rbx, qword [rbx]	        69	diff.c	FUNCTION_1
0x4002243	          0x4885db	                           test rbx, rbx	        69	diff.c	FUNCTION_1
0x4002246	            0x75a0	                           jne 0x40021e8	        69	diff.c	FUNCTION_1
0x4002248	        0x4883c408	                              add rsp, 8	        80	diff.c	FUNCTION_1
0x400224c	              0x5b	                                 pop rbx	        80	diff.c	FUNCTION_1
0x400224d	              0x5d	                                 pop rbp	        80	diff.c	FUNCTION_1
0x400224e	              0xc3	                                     ret	        80	diff.c	FUNCTION_1
0x400224f	              0x90	                                     nop	        80	diff.c	FUNCTION_1
0x4002250	            0x31c0	                            xor eax, eax	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4002252	    0x660f1f440000	                    nop word [rax + rax]	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4002258	    0x48391d000000	            cmp qword [0x0400225f], rbx 	        76	diff.c	IF_1	IF_2
0x400225f	    0x48c744c36000	       mov qword [rbx + rax*8 + 0x60], 0	        74	diff.c	IF_1
0x4002268	    0xc783a0000000	               mov dword [rbx + 0xa0], 1	        75	diff.c	IF_1
0x4002272	            0x75cc	                           jne 0x4002240	        76	diff.c	IF_1	IF_2
0x4002274	      0xe8d7f5ffff	        call sym.diff_redraw.constprop.6	        77	diff.c	IF_1	CALL_2
0x4002279	            0xebc5	                           jmp 0x4002240	        77	diff.c	IF_1	CALL_2
0x400227b	       0xf1f440000	                   nop dword [rax + rax]	        77	diff.c	IF_1	CALL_2
0x4002280	      0xb801000000	                              mov eax, 1	       183	diff.c	FUNCTION_6	FOR_1
0x4002285	            0xebd1	                           jmp 0x4002258	       183	diff.c	FUNCTION_6	FOR_1
0x4002287	    0x660f1f840000	                    nop word [rax + rax]	       183	diff.c	FUNCTION_6	FOR_1
0x4002290	      0xb802000000	                              mov eax, 2	       183	diff.c	FUNCTION_6	FOR_1
0x4002295	            0xebc1	                           jmp 0x4002258	       183	diff.c	FUNCTION_6	FOR_1
0x4002297	    0x660f1f840000	                    nop word [rax + rax]	       183	diff.c	FUNCTION_6	FOR_1
0x40022a0	      0xb803000000	                              mov eax, 3	       183	diff.c	FUNCTION_6	FOR_1
0x40022a5	            0xebb1	                           jmp 0x4002258	       183	diff.c	FUNCTION_6	FOR_1
0x40022a7	    0x660f1f840000	                    nop word [rax + rax]	       183	diff.c	FUNCTION_6	FOR_1
0x40022b0	      0xb804000000	                              mov eax, 4	       183	diff.c	FUNCTION_6	FOR_1
0x40022b5	            0xeba1	                           jmp 0x4002258	       183	diff.c	FUNCTION_6	FOR_1
0x40022b7	    0x660f1f840000	                    nop word [rax + rax]	       183	diff.c	FUNCTION_6	FOR_1
0x40022c0	      0xb805000000	                              mov eax, 5	       183	diff.c	FUNCTION_6	FOR_1
0x40022c5	            0xeb91	                           jmp 0x4002258	       183	diff.c	FUNCTION_6	FOR_1
0x40022c7	    0x660f1f840000	                    nop word [rax + rax]	       183	diff.c	FUNCTION_6	FOR_1
0x40022d0	      0xb806000000	                              mov eax, 6	       183	diff.c	FUNCTION_6	FOR_1
0x40022d5	            0xeb81	                           jmp 0x4002258	       183	diff.c	FUNCTION_6	FOR_1
0x40022d7	    0x660f1f840000	                    nop word [rax + rax]	       183	diff.c	FUNCTION_6	FOR_1
0x40022e0	      0xb807000000	                              mov eax, 7	       183	diff.c	FUNCTION_6	FOR_1
0x40022e5	      0xe96effffff	                           jmp 0x4002258	       183	diff.c	FUNCTION_6	FOR_1
diff_infold	IF,8:CALL,1:functions,0:FOR,2:SWITCH,0:ELSE,1:DO,0:WHILE,0	128
0x40063c0	    0x8b97c0010000	           mov edx, dword [rdi + 0x1c0] 	      2100	diff.c	FUNCTION_36	IF_1
0x40063c6	            0x85d2	                           test edx, edx	      2100	diff.c	FUNCTION_36	IF_1
0x40063c8	     0xf845a010000	                            je 0x4006528	      2100	diff.c	FUNCTION_36	IF_1
0x40063ce	              0x55	                                push rbp	      2093	diff.c	FUNCTION_36
0x40063cf	              0x53	                                push rbx	      2093	diff.c	FUNCTION_36
0x40063d0	        0x4883ec08	                              sub rsp, 8	      2093	diff.c	FUNCTION_36
0x40063d4	    0x488b15000000	            mov rdx, qword [0x040063db] 	      2093	diff.c	FUNCTION_36
0x40063db	        0x488b4f08	                mov rcx, qword [rdi + 8]	      2093	diff.c	FUNCTION_36
0x40063df	        0x488b4260	            mov rax, qword [rdx + 0x60] 	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x40063e3	          0x4839c1	                            cmp rcx, rax	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x40063e6	     0xf84b4010000	                            je 0x40065a0	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x40063ec	          0x4885c0	                           test rax, rax	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x40063ef	      0xbdffffffff	                     mov ebp, 0xffffffff	      2107	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x40063f4	           0xf95c0	                                setne al	      2107	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x40063f7	           0xfb6c0	                           movzx eax, al	      2107	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x40063fa	        0x488b7a68	            mov rdi, qword [rdx + 0x68] 	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x40063fe	          0x4839f9	                            cmp rcx, rdi	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x4006401	     0xf8479010000	                            je 0x4006580	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x4006407	          0x4885ff	                           test rdi, rdi	      2108	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x400640a	      0xbf01000000	                              mov edi, 1	      2108	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x400640f	           0xf45c7	                         cmovne eax, edi	      2108	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x4006412	        0x488b7a70	            mov rdi, qword [rdx + 0x70] 	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x4006416	          0x4839f9	                            cmp rcx, rdi	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x4006419	     0xf8471010000	                            je 0x4006590	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x400641f	          0x4885ff	                           test rdi, rdi	      2108	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x4006422	      0xbf01000000	                              mov edi, 1	      2108	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x4006427	           0xf45c7	                         cmovne eax, edi	      2108	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x400642a	        0x488b7a78	            mov rdi, qword [rdx + 0x78] 	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x400642e	          0x4839f9	                            cmp rcx, rdi	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x4006431	     0xf8409010000	                            je 0x4006540	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x4006437	          0x4885ff	                           test rdi, rdi	      2108	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x400643a	      0xbf01000000	                              mov edi, 1	      2108	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x400643f	           0xf45c7	                         cmovne eax, edi	      2108	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x4006442	    0x488bba800000	            mov rdi, qword [rdx + 0x80] 	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x4006449	          0x4839f9	                            cmp rcx, rdi	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x400644c	     0xf84fe000000	                            je 0x4006550	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x4006452	          0x4885ff	                           test rdi, rdi	      2108	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x4006455	      0xbf01000000	                              mov edi, 1	      2108	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x400645a	           0xf45c7	                         cmovne eax, edi	      2108	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x400645d	    0x488bba880000	            mov rdi, qword [rdx + 0x88] 	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x4006464	          0x4839f9	                            cmp rcx, rdi	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x4006467	     0xf84f3000000	                            je 0x4006560	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x400646d	          0x4885ff	                           test rdi, rdi	      2108	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x4006470	      0xbf01000000	                              mov edi, 1	      2108	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x4006475	           0xf45c7	                         cmovne eax, edi	      2108	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x4006478	    0x488bba900000	            mov rdi, qword [rdx + 0x90] 	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x400647f	          0x4839f9	                            cmp rcx, rdi	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x4006482	     0xf84e8000000	                            je 0x4006570	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x4006488	          0x4885ff	                           test rdi, rdi	      2108	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x400648b	      0xbf01000000	                              mov edi, 1	      2108	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x4006490	           0xf45c7	                         cmovne eax, edi	      2108	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x4006493	    0x488bba980000	            mov rdi, qword [rdx + 0x98] 	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x400649a	          0x4839f9	                            cmp rcx, rdi	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x400649d	     0xf840d010000	                            je 0x40065b0	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x40064a3	          0x4885ff	                           test rdi, rdi	      2108	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x40064a6	      0xb901000000	                              mov ecx, 1	      2108	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x40064ab	           0xf45c1	                         cmovne eax, ecx	      2108	diff.c	FUNCTION_36	FOR_1	ELSE_1	IF_3
0x40064ae	          0x83fdff	             cmp ebp, 0xffffffffffffffff	      2112	diff.c	FUNCTION_36	IF_4
0x40064b1	            0x7465	                            je 0x4006518	      2112	diff.c	FUNCTION_36	IF_4
0x40064b3	            0xa801	                              test al, 1	      2112	diff.c	FUNCTION_36	IF_4
0x40064b5	            0x7461	                            je 0x4006518	      2112	diff.c	FUNCTION_36	IF_4
0x40064b7	    0x8b82a0000000	            mov eax, dword [rdx + 0xa0] 	      2115	diff.c	FUNCTION_36	IF_5
0x40064bd	          0x4889f3	                            mov rbx, rsi	      2115	diff.c	FUNCTION_36	IF_5
0x40064c0	            0x85c0	                           test eax, eax	      2115	diff.c	FUNCTION_36	IF_5
0x40064c2	            0x756c	                           jne 0x4006530	      2115	diff.c	FUNCTION_36	IF_5
0x40064c4	        0x488b5258	            mov rdx, qword [rdx + 0x58] 	      2119	diff.c	FUNCTION_36	IF_6
0x40064c8	          0x4885d2	                           test rdx, rdx	      2119	diff.c	FUNCTION_36	IF_6
0x40064cb	            0x743a	                            je 0x4006507	      2119	diff.c	FUNCTION_36	IF_6
0x40064cd	    0x486335000000	         movsxd rsi, dword [0x040064d4] 	      2119	diff.c	FUNCTION_36	IF_6
0x40064d4	          0x4c63c5	                          movsxd r8, ebp	      2119	diff.c	FUNCTION_36	IF_6
0x40064d7	        0x49c1e003	                               shl r8, 3	      2119	diff.c	FUNCTION_36	IF_6
0x40064db	       0xf1f440000	                   nop dword [rax + rax]	      2119	diff.c	FUNCTION_36	IF_6
0x40064e0	        0x4a8d0c02	                     lea rcx, [rdx + r8]	      2119	diff.c	FUNCTION_36	IF_6
0x40064e4	        0x488b4108	                mov rax, qword [rcx + 8]	      2125	diff.c	FUNCTION_36	FOR_2	IF_7
0x40064e8	          0x4889c7	                            mov rdi, rax	      2125	diff.c	FUNCTION_36	FOR_2	IF_7
0x40064eb	          0x4829f7	                            sub rdi, rsi	      2125	diff.c	FUNCTION_36	FOR_2	IF_7
0x40064ee	          0x4839df	                            cmp rdi, rbx	      2125	diff.c	FUNCTION_36	FOR_2	IF_7
0x40064f1	            0x7f14	                            jg 0x4006507	      2125	diff.c	FUNCTION_36	FOR_2	IF_7
0x40064f3	        0x48034148	             add rax, qword [rcx + 0x48]	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x40064f7	          0x4801f0	                            add rax, rsi	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x40064fa	          0x4839c3	                            cmp rbx, rax	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x40064fd	            0x7c19	                            jl 0x4006518	      2128	diff.c	FUNCTION_36	FOR_2	IF_8
0x40064ff	          0x488b12	                    mov rdx, qword [rdx]	      2122	diff.c	FUNCTION_36	FOR_2
0x4006502	          0x4885d2	                           test rdx, rdx	      2122	diff.c	FUNCTION_36	FOR_2
0x4006505	            0x75d9	                           jne 0x40064e0	      2122	diff.c	FUNCTION_36	FOR_2
0x4006507	        0x4883c408	                              add rsp, 8	      2132	diff.c	FUNCTION_36
0x400650b	      0xb801000000	                              mov eax, 1	      2120	diff.c	FUNCTION_36	IF_6
0x4006510	              0x5b	                                 pop rbx	      2132	diff.c	FUNCTION_36
0x4006511	              0x5d	                                 pop rbp	      2132	diff.c	FUNCTION_36
0x4006512	              0xc3	                                     ret	      2132	diff.c	FUNCTION_36
0x4006513	       0xf1f440000	                   nop dword [rax + rax]	      2132	diff.c	FUNCTION_36
0x4006518	        0x4883c408	                              add rsp, 8	      2132	diff.c	FUNCTION_36
0x400651c	            0x31c0	                            xor eax, eax	      2101	diff.c	FUNCTION_36	IF_1
0x400651e	              0x5b	                                 pop rbx	      2132	diff.c	FUNCTION_36
0x400651f	              0x5d	                                 pop rbp	      2132	diff.c	FUNCTION_36
0x4006520	              0xc3	                                     ret	      2132	diff.c	FUNCTION_36
0x4006521	     0xf1f80000000	                         nop dword [rax]	      2132	diff.c	FUNCTION_36
0x4006528	            0x31c0	                            xor eax, eax	      2101	diff.c	FUNCTION_36	IF_1
0x400652a	              0xc3	                                     ret	      2132	diff.c	FUNCTION_36
0x400652b	       0xf1f440000	                   nop dword [rax + rax]	      2132	diff.c	FUNCTION_36
0x4006530	            0x31ff	                            xor edi, edi	      2116	diff.c	FUNCTION_36	CALL_1
0x4006532	      0xe800000000	                          call 0x4006537	      2116	diff.c	FUNCTION_36	CALL_1
0x4006537	    0x488b15000000	            mov rdx, qword [0x0400653e] 	      2116	diff.c	FUNCTION_36	CALL_1
0x400653e	            0xeb84	                           jmp 0x40064c4	      2116	diff.c	FUNCTION_36	CALL_1
0x4006540	      0xbd03000000	                              mov ebp, 3	      2103	diff.c	FUNCTION_36	FOR_1
0x4006545	      0xe9f8feffff	                           jmp 0x4006442	      2103	diff.c	FUNCTION_36	FOR_1
0x400654a	    0x660f1f440000	                    nop word [rax + rax]	      2103	diff.c	FUNCTION_36	FOR_1
0x4006550	      0xbd04000000	                              mov ebp, 4	      2103	diff.c	FUNCTION_36	FOR_1
0x4006555	      0xe903ffffff	                           jmp 0x400645d	      2103	diff.c	FUNCTION_36	FOR_1
0x400655a	    0x660f1f440000	                    nop word [rax + rax]	      2103	diff.c	FUNCTION_36	FOR_1
0x4006560	      0xbd05000000	                              mov ebp, 5	      2103	diff.c	FUNCTION_36	FOR_1
0x4006565	      0xe90effffff	                           jmp 0x4006478	      2103	diff.c	FUNCTION_36	FOR_1
0x400656a	    0x660f1f440000	                    nop word [rax + rax]	      2103	diff.c	FUNCTION_36	FOR_1
0x4006570	      0xbd06000000	                              mov ebp, 6	      2103	diff.c	FUNCTION_36	FOR_1
0x4006575	      0xe919ffffff	                           jmp 0x4006493	      2103	diff.c	FUNCTION_36	FOR_1
0x400657a	    0x660f1f440000	                    nop word [rax + rax]	      2103	diff.c	FUNCTION_36	FOR_1
0x4006580	      0xbd01000000	                              mov ebp, 1	      2103	diff.c	FUNCTION_36	FOR_1
0x4006585	      0xe988feffff	                           jmp 0x4006412	      2103	diff.c	FUNCTION_36	FOR_1
0x400658a	    0x660f1f440000	                    nop word [rax + rax]	      2103	diff.c	FUNCTION_36	FOR_1
0x4006590	      0xbd02000000	                              mov ebp, 2	      2103	diff.c	FUNCTION_36	FOR_1
0x4006595	      0xe990feffff	                           jmp 0x400642a	      2103	diff.c	FUNCTION_36	FOR_1
0x400659a	    0x660f1f440000	                    nop word [rax + rax]	      2103	diff.c	FUNCTION_36	FOR_1
0x40065a0	            0x31c0	                            xor eax, eax	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x40065a2	            0x31ed	                            xor ebp, ebp	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x40065a4	      0xe951feffff	                           jmp 0x40063fa	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x40065a9	     0xf1f80000000	                         nop dword [rax]	      2105	diff.c	FUNCTION_36	FOR_1	IF_2
0x40065b0	      0xbd07000000	                              mov ebp, 7	      2103	diff.c	FUNCTION_36	FOR_1
0x40065b5	      0xe9f4feffff	                           jmp 0x40064ae	      2103	diff.c	FUNCTION_36	FOR_1
diffopt_hiddenoff	IF,0:CALL,0:functions,0:FOR,0:SWITCH,0:ELSE,0:DO,0:WHILE,0	4
0x4005e40	    0x8b0500000000	            mov eax, dword [0x04005e46] 	      1951	diff.c	FUNCTION_34
0x4005e46	          0xc1e805	                              shr eax, 5	      1951	diff.c	FUNCTION_34
0x4005e49	          0x83e001	                              and eax, 1	      1951	diff.c	FUNCTION_34
0x4005e4c	              0xc3	                                     ret	      1952	diff.c	FUNCTION_34
diffopt_horizontal	IF,0:CALL,0:functions,0:FOR,0:SWITCH,0:ELSE,0:DO,0:WHILE,0	4
0x4005e30	    0x8b0500000000	            mov eax, dword [0x04005e36] 	      1942	diff.c	FUNCTION_33
0x4005e36	          0xc1e803	                              shr eax, 3	      1942	diff.c	FUNCTION_33
0x4005e39	          0x83e001	                              and eax, 1	      1942	diff.c	FUNCTION_33
0x4005e3c	              0xc3	                                     ret	      1943	diff.c	FUNCTION_33
diff_set_topline	IF,16:CALL,7:functions,0:FOR,2:SWITCH,0:ELSE,5:DO,0:WHILE,0	248
0x4005780	            0x4157	                                push r15	      1738	diff.c	FUNCTION_31
0x4005782	            0x4156	                                push r14	      1738	diff.c	FUNCTION_31
0x4005784	            0x4155	                                push r13	      1738	diff.c	FUNCTION_31
0x4005786	            0x4154	                                push r12	      1738	diff.c	FUNCTION_31
0x4005788	              0x55	                                push rbp	      1738	diff.c	FUNCTION_31
0x4005789	              0x53	                                push rbx	      1738	diff.c	FUNCTION_31
0x400578a	        0x4883ec08	                              sub rsp, 8	      1738	diff.c	FUNCTION_31
0x400578e	    0x4c8b0d000000	              mov r9, qword [0x04005795]	      1738	diff.c	FUNCTION_31
0x4005795	        0x4c8b6f08	                mov r13, qword [rdi + 8]	      1739	diff.c	FUNCTION_31
0x4005799	        0x4d3b6960	              cmp r13, qword [r9 + 0x60]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x400579d	            0x7461	                            je 0x4005800	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x400579f	        0x4d3b6968	              cmp r13, qword [r9 + 0x68]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40057a3	     0xf842e030000	                            je 0x4005ad7	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40057a9	        0x4d3b6970	              cmp r13, qword [r9 + 0x70]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40057ad	     0xf842e030000	                            je 0x4005ae1	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40057b3	        0x4d3b6978	              cmp r13, qword [r9 + 0x78]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40057b7	     0xf8435030000	                            je 0x4005af2	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40057bd	    0x4d3ba9800000	              cmp r13, qword [r9 + 0x80]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40057c4	     0xf8432030000	                            je 0x4005afc	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40057ca	    0x4d3ba9880000	              cmp r13, qword [r9 + 0x88]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40057d1	     0xf842f030000	                            je 0x4005b06	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40057d7	    0x4d3ba9900000	              cmp r13, qword [r9 + 0x90]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40057de	     0xf842c030000	                            je 0x4005b10	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40057e4	    0x4d3ba9980000	              cmp r13, qword [r9 + 0x98]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40057eb	     0xf8429030000	                            je 0x4005b1a	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40057f1	        0x4883c408	                              add rsp, 8	      1851	diff.c	FUNCTION_31
0x40057f5	              0x5b	                                 pop rbx	      1851	diff.c	FUNCTION_31
0x40057f6	              0x5d	                                 pop rbp	      1851	diff.c	FUNCTION_31
0x40057f7	            0x415c	                                 pop r12	      1851	diff.c	FUNCTION_31
0x40057f9	            0x415d	                                 pop r13	      1851	diff.c	FUNCTION_31
0x40057fb	            0x415e	                                 pop r14	      1851	diff.c	FUNCTION_31
0x40057fd	            0x415f	                                 pop r15	      1851	diff.c	FUNCTION_31
0x40057ff	              0xc3	                                     ret	      1851	diff.c	FUNCTION_31
0x4005800	            0x31ed	                            xor ebp, ebp	       168	diff.c	FUNCTION_5	FOR_1
0x4005802	    0x660f1f440000	                    nop word [rax + rax]	       168	diff.c	FUNCTION_5	FOR_1
0x4005808	    0x418b81a00000	              mov eax, dword [r9 + 0xa0]	      1751	diff.c	FUNCTION_31	IF_2
0x400580f	          0x4889f3	                            mov rbx, rsi	      1751	diff.c	FUNCTION_31	IF_2
0x4005812	          0x4989fe	                            mov r14, rdi	      1751	diff.c	FUNCTION_31	IF_2
0x4005815	        0x4c8b6778	            mov r12, qword [rdi + 0x78] 	      1740	diff.c	FUNCTION_31
0x4005819	            0x85c0	                           test eax, eax	      1751	diff.c	FUNCTION_31	IF_2
0x400581b	     0xf853f020000	                           jne 0x4005a60	      1751	diff.c	FUNCTION_31	IF_2
0x4005821	        0x498b4158	              mov rax, qword [r9 + 0x58]	      1757	diff.c	FUNCTION_31	FOR_1
0x4005825	    0xc78384000000	               mov dword [rbx + 0x84], 0	      1754	diff.c	FUNCTION_31
0x400582f	          0x4885c0	                           test rax, rax	      1757	diff.c	FUNCTION_31	FOR_1
0x4005832	     0xf8408020000	                            je 0x4005a40	      1757	diff.c	FUNCTION_31	FOR_1
0x4005838	          0x4c63d5	                         movsxd r10, ebp	      1757	diff.c	FUNCTION_31	FOR_1
0x400583b	        0x49c1e203	                              shl r10, 3	      1757	diff.c	FUNCTION_31	FOR_1
0x400583f	            0xeb13	                           jmp 0x4005854	      1757	diff.c	FUNCTION_31	FOR_1
0x4005841	     0xf1f80000000	                         nop dword [rax]	      1757	diff.c	FUNCTION_31	FOR_1
0x4005848	          0x488b00	                    mov rax, qword [rax]	      1757	diff.c	FUNCTION_31	FOR_1
0x400584b	          0x4885c0	                           test rax, rax	      1757	diff.c	FUNCTION_31	FOR_1
0x400584e	     0xf84ec010000	                            je 0x4005a40	      1757	diff.c	FUNCTION_31	FOR_1
0x4005854	        0x4a8d1410	                    lea rdx, [rax + r10]	      1757	diff.c	FUNCTION_31	FOR_1
0x4005858	        0x488b4a08	                mov rcx, qword [rdx + 8]	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x400585c	        0x488b5248	            mov rdx, qword [rdx + 0x48] 	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x4005860	        0x4c8d0411	                     lea r8, [rcx + rdx]	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x4005864	          0x4d39c4	                             cmp r12, r8	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x4005867	            0x7fdf	                            jg 0x4005848	      1758	diff.c	FUNCTION_31	FOR_1	IF_3
0x4005869	        0x488b7308	                mov rsi, qword [rbx + 8]	      1770	diff.c	FUNCTION_31	ELSE_1	CALL_3
0x400586d	        0x493b7160	              cmp rsi, qword [r9 + 0x60]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4005871	     0xf84ad020000	                            je 0x4005b24	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4005877	        0x493b7168	              cmp rsi, qword [r9 + 0x68]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x400587b	     0xf84aa020000	                            je 0x4005b2b	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4005881	        0x493b7170	              cmp rsi, qword [r9 + 0x70]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4005885	     0xf84aa020000	                            je 0x4005b35	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x400588b	        0x493b7178	              cmp rsi, qword [r9 + 0x78]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x400588f	     0xf84d1020000	                            je 0x4005b66	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4005895	    0x493bb1800000	              cmp rsi, qword [r9 + 0x80]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x400589c	     0xf84ce020000	                            je 0x4005b70	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40058a2	    0x493bb1880000	              cmp rsi, qword [r9 + 0x88]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40058a9	     0xf84cb020000	                            je 0x4005b7a	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40058af	    0x493bb1900000	              cmp rsi, qword [r9 + 0x90]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40058b6	     0xf84c8020000	                            je 0x4005b84	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40058bc	    0x493bb1980000	              cmp rsi, qword [r9 + 0x98]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40058c3	      0xbf07000000	                              mov edi, 7	       168	diff.c	FUNCTION_5	FOR_1
0x40058c8	     0xf8523ffffff	                           jne 0x40057f1	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40058ce	            0x6690	                                     nop	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40058d0	        0x4c8d1cf8	                  lea r11, [rax + rdi*8]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40058d4	        0x498b6b08	                mov rbp, qword [r11 + 8]	      1774	diff.c	FUNCTION_31	ELSE_1
0x40058d8	          0x4989ea	                            mov r10, rbp	      1774	diff.c	FUNCTION_31	ELSE_1
0x40058db	          0x4929ca	                            sub r10, rcx	      1774	diff.c	FUNCTION_31	ELSE_1
0x40058de	          0x4d01e2	                            add r10, r12	      1774	diff.c	FUNCTION_31	ELSE_1
0x40058e1	          0x4939cc	                            cmp r12, rcx	      1775	diff.c	FUNCTION_31	ELSE_1	IF_6
0x40058e4	        0x4c895378	             mov qword [rbx + 0x78], r10	      1774	diff.c	FUNCTION_31	ELSE_1
0x40058e8	     0xf8ce2000000	                            jl 0x40059d0	      1775	diff.c	FUNCTION_31	ELSE_1	IF_6
0x40058ee	      0x4983796000	                cmp qword [r9 + 0x60], 0	      1781	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x40058f3	     0xf84f2010000	                            je 0x4005aeb	      1781	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x40058f9	        0x488b7848	            mov rdi, qword [rax + 0x48] 	      1782	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x40058fd	    0x41bd00000000	                             mov r13d, 0	      1783	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x4005903	          0x4885ff	                           test rdi, rdi	      1783	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x4005906	        0x410f4efd	                        cmovle edi, r13d	      1783	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x400590a	      0x4983796800	                cmp qword [r9 + 0x68], 0	      1781	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x400590f	            0x740e	                            je 0x400591f	      1781	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x4005911	        0x4c8b6850	            mov r13, qword [rax + 0x50] 	      1782	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x4005915	          0x4c63ff	                         movsxd r15, edi	      1782	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x4005918	          0x4d39fd	                            cmp r13, r15	      1783	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x400591b	        0x410f4ffd	                         cmovg edi, r13d	      1783	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x400591f	      0x4983797000	                cmp qword [r9 + 0x70], 0	      1781	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x4005924	            0x740e	                            je 0x4005934	      1781	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x4005926	        0x4c8b6858	            mov r13, qword [rax + 0x58] 	      1782	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x400592a	          0x4c63ff	                         movsxd r15, edi	      1782	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x400592d	          0x4d39fd	                            cmp r13, r15	      1783	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x4005930	        0x410f4ffd	                         cmovg edi, r13d	      1783	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x4005934	      0x4983797800	                cmp qword [r9 + 0x78], 0	      1781	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x4005939	            0x740e	                            je 0x4005949	      1781	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x400593b	        0x4c8b6860	            mov r13, qword [rax + 0x60] 	      1782	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x400593f	          0x4c63ff	                         movsxd r15, edi	      1782	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x4005942	          0x4d39fd	                            cmp r13, r15	      1783	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x4005945	        0x410f4ffd	                         cmovg edi, r13d	      1783	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x4005949	    0x4983b9800000	                cmp qword [r9 + 0x80], 0	      1781	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x4005951	            0x740e	                            je 0x4005961	      1781	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x4005953	        0x4c8b6868	            mov r13, qword [rax + 0x68] 	      1782	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x4005957	          0x4c63ff	                         movsxd r15, edi	      1782	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x400595a	          0x4d39ef	                            cmp r15, r13	      1783	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x400595d	        0x410f4cfd	                         cmovl edi, r13d	      1783	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x4005961	    0x4983b9880000	                cmp qword [r9 + 0x88], 0	      1781	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x4005969	            0x740e	                            je 0x4005979	      1781	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x400596b	        0x4c8b6870	            mov r13, qword [rax + 0x70] 	      1782	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x400596f	          0x4c63ff	                         movsxd r15, edi	      1782	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x4005972	          0x4d39ef	                            cmp r15, r13	      1783	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x4005975	        0x410f4cfd	                         cmovl edi, r13d	      1783	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x4005979	    0x4983b9900000	                cmp qword [r9 + 0x90], 0	      1781	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x4005981	            0x740e	                            je 0x4005991	      1781	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x4005983	        0x4c8b6878	            mov r13, qword [rax + 0x78] 	      1782	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x4005987	          0x4c63ff	                         movsxd r15, edi	      1782	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x400598a	          0x4d39ef	                            cmp r15, r13	      1783	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x400598d	        0x410f4cfd	                         cmovl edi, r13d	      1783	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x4005991	    0x4983b9980000	                cmp qword [r9 + 0x98], 0	      1781	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x4005999	            0x7410	                            je 0x40059ab	      1781	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x400599b	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      1782	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x40059a2	          0x4c63cf	                          movsxd r9, edi	      1782	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x40059a5	          0x4939c1	                             cmp r9, rax	      1783	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x40059a8	           0xf4cf8	                          cmovl edi, eax	      1783	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x40059ab	        0x498b4348	            mov rax, qword [r11 + 0x48] 	      1785	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x40059af	          0x4839d0	                            cmp rax, rdx	      1785	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x40059b2	     0xf840d010000	                            je 0x4005ac5	      1785	diff.c	FUNCTION_31	ELSE_1	IF_6	IF_8
0x40059b8	     0xf8ed2000000	                           jle 0x4005a90	      1790	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9
0x40059be	          0x4d39c4	                             cmp r12, r8	      1792	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x40059c1	     0xf8478010000	                            je 0x4005b3f	      1792	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x40059c7	    0x660f1f840000	                    nop word [rax + rax]	      1792	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10
0x40059d0	          0x488b06	                    mov rax, qword [rsi]	      1831	diff.c	FUNCTION_31	ELSE_5	IF_15
0x40059d3	    0xc7838c000000	               mov dword [rbx + 0x8c], 0	      1830	diff.c	FUNCTION_31	ELSE_5
0x40059dd	          0x4c39d0	                            cmp rax, r10	      1831	diff.c	FUNCTION_31	ELSE_5	IF_15
0x40059e0	            0x7d11	                           jge 0x40059f3	      1831	diff.c	FUNCTION_31	ELSE_5	IF_15
0x40059e2	        0x48894378	             mov qword [rbx + 0x78], rax	      1833	diff.c	FUNCTION_31	ELSE_5	IF_15
0x40059e6	    0xc7838c000000	               mov dword [rbx + 0x8c], 1	      1834	diff.c	FUNCTION_31	ELSE_5	IF_15
0x40059f0	          0x4989c2	                            mov r10, rax	      1834	diff.c	FUNCTION_31	ELSE_5	IF_15
0x40059f3	          0x4d85d2	                           test r10, r10	      1836	diff.c	FUNCTION_31	IF_16
0x40059f6	     0xf8e7c000000	                           jle 0x4005a78	      1836	diff.c	FUNCTION_31	IF_16
0x40059fc	          0x4889df	                            mov rdi, rbx	      1843	diff.c	FUNCTION_31	CALL_4
0x40059ff	      0xe800000000	                          call 0x4005a04	      1843	diff.c	FUNCTION_31	CALL_4
0x4005a04	          0x4889df	                            mov rdi, rbx	      1844	diff.c	FUNCTION_31	CALL_5
0x4005a07	      0xe800000000	                          call 0x4005a0c	      1844	diff.c	FUNCTION_31	CALL_5
0x4005a0c	          0x4889df	                            mov rdi, rbx	      1846	diff.c	FUNCTION_31	CALL_6
0x4005a0f	            0x31f6	                            xor esi, esi	      1846	diff.c	FUNCTION_31	CALL_6
0x4005a11	      0xe800000000	                          call 0x4005a16	      1846	diff.c	FUNCTION_31	CALL_6
0x4005a16	        0x488b7378	            mov rsi, qword [rbx + 0x78] 	      1848	diff.c	FUNCTION_31	CALL_7
0x4005a1a	        0x4883c408	                              add rsp, 8	      1851	diff.c	FUNCTION_31
0x4005a1e	        0x488d5378	                   lea rdx, [rbx + 0x78]	      1848	diff.c	FUNCTION_31	CALL_7
0x4005a22	          0x4889df	                            mov rdi, rbx	      1848	diff.c	FUNCTION_31	CALL_7
0x4005a25	          0x4531c9	                            xor r9d, r9d	      1848	diff.c	FUNCTION_31	CALL_7
0x4005a28	    0x41b801000000	                              mov r8d, 1	      1848	diff.c	FUNCTION_31	CALL_7
0x4005a2e	              0x5b	                                 pop rbx	      1851	diff.c	FUNCTION_31
0x4005a2f	              0x5d	                                 pop rbp	      1851	diff.c	FUNCTION_31
0x4005a30	            0x415c	                                 pop r12	      1851	diff.c	FUNCTION_31
0x4005a32	            0x415d	                                 pop r13	      1851	diff.c	FUNCTION_31
0x4005a34	            0x415e	                                 pop r14	      1851	diff.c	FUNCTION_31
0x4005a36	            0x415f	                                 pop r15	      1851	diff.c	FUNCTION_31
0x4005a38	            0x31c9	                            xor ecx, ecx	      1848	diff.c	FUNCTION_31	CALL_7
0x4005a3a	      0xe900000000	                           jmp 0x4005a3f	      1848	diff.c	FUNCTION_31	CALL_7
0x4005a3f	              0x90	                                     nop	      1848	diff.c	FUNCTION_31	CALL_7
0x4005a40	        0x4d2b6500	                    sub r12, qword [r13]	      1765	diff.c	FUNCTION_31	IF_4
0x4005a44	        0x488b7308	                mov rsi, qword [rbx + 8]	      1764	diff.c	FUNCTION_31	IF_4
0x4005a48	          0x4d89e2	                            mov r10, r12	      1765	diff.c	FUNCTION_31	IF_4
0x4005a4b	          0x4c0316	                    add r10, qword [rsi]	      1765	diff.c	FUNCTION_31	IF_4
0x4005a4e	        0x4c895378	             mov qword [rbx + 0x78], r10	      1764	diff.c	FUNCTION_31	IF_4
0x4005a52	      0xe979ffffff	                           jmp 0x40059d0	      1764	diff.c	FUNCTION_31	IF_4
0x4005a57	    0x660f1f840000	                    nop word [rax + rax]	      1764	diff.c	FUNCTION_31	IF_4
0x4005a60	            0x31ff	                            xor edi, edi	      1752	diff.c	FUNCTION_31	CALL_2
0x4005a62	      0xe800000000	                          call 0x4005a67	      1752	diff.c	FUNCTION_31	CALL_2
0x4005a67	    0x4c8b0d000000	              mov r9, qword [0x04005a6e]	      1752	diff.c	FUNCTION_31	CALL_2
0x4005a6e	      0xe9aefdffff	                           jmp 0x4005821	      1752	diff.c	FUNCTION_31	CALL_2
0x4005a73	       0xf1f440000	                   nop dword [rax + rax]	      1752	diff.c	FUNCTION_31	CALL_2
0x4005a78	    0x48c743780100	               mov qword [rbx + 0x78], 1	      1838	diff.c	FUNCTION_31	IF_16
0x4005a80	    0xc78384000000	               mov dword [rbx + 0x84], 0	      1839	diff.c	FUNCTION_31	IF_16
0x4005a8a	      0xe96dffffff	                           jmp 0x40059fc	      1839	diff.c	FUNCTION_31	IF_16
0x4005a8f	              0x90	                                     nop	      1839	diff.c	FUNCTION_31	IF_16
0x4005a90	          0x4801e8	                            add rax, rbp	      1810	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x4005a93	          0x4939c2	                            cmp r10, rax	      1809	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x4005a96	     0xf8c34ffffff	                            jl 0x40059d0	      1809	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x4005a9c	    0xf60500000000	               test byte [0x04005aa3], 1	      1815	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13
0x4005aa3	        0x48894378	             mov qword [rbx + 0x78], rax	      1814	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x4005aa7	          0x4989c2	                            mov r10, rax	      1814	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12
0x4005aaa	     0xf8420ffffff	                            je 0x40059d0	      1815	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13
0x4005ab0	          0x4d39c4	                             cmp r12, r8	      1817	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x4005ab3	            0x7410	                            je 0x4005ac5	      1817	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x4005ab5	          0x4429e1	                           sub ecx, r12d	      1822	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	ELSE_5
0x4005ab8	             0x1cf	                            add edi, ecx	      1822	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	ELSE_5
0x4005aba	    0x89bb84000000	             mov dword [rbx + 0x84], edi	      1822	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	ELSE_5
0x4005ac0	      0xe90bffffff	                           jmp 0x40059d0	      1822	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	ELSE_5
0x4005ac5	    0x418b86840000	            mov eax, dword [r14 + 0x84] 	      1819	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x4005acc	    0x898384000000	             mov dword [rbx + 0x84], eax	      1819	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x4005ad2	      0xe9f9feffff	                           jmp 0x40059d0	      1819	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_3	ELSE_4	IF_12	IF_13	IF_14
0x4005ad7	      0xbd01000000	                              mov ebp, 1	       168	diff.c	FUNCTION_5	FOR_1
0x4005adc	      0xe927fdffff	                           jmp 0x4005808	       168	diff.c	FUNCTION_5	FOR_1
0x4005ae1	      0xbd02000000	                              mov ebp, 2	       168	diff.c	FUNCTION_5	FOR_1
0x4005ae6	      0xe91dfdffff	                           jmp 0x4005808	       168	diff.c	FUNCTION_5	FOR_1
0x4005aeb	            0x31ff	                            xor edi, edi	      1781	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x4005aed	      0xe918feffff	                           jmp 0x400590a	      1781	diff.c	FUNCTION_31	ELSE_1	IF_6	FOR_2	IF_7
0x4005af2	      0xbd03000000	                              mov ebp, 3	       168	diff.c	FUNCTION_5	FOR_1
0x4005af7	      0xe90cfdffff	                           jmp 0x4005808	       168	diff.c	FUNCTION_5	FOR_1
0x4005afc	      0xbd04000000	                              mov ebp, 4	       168	diff.c	FUNCTION_5	FOR_1
0x4005b01	      0xe902fdffff	                           jmp 0x4005808	       168	diff.c	FUNCTION_5	FOR_1
0x4005b06	      0xbd05000000	                              mov ebp, 5	       168	diff.c	FUNCTION_5	FOR_1
0x4005b0b	      0xe9f8fcffff	                           jmp 0x4005808	       168	diff.c	FUNCTION_5	FOR_1
0x4005b10	      0xbd06000000	                              mov ebp, 6	       168	diff.c	FUNCTION_5	FOR_1
0x4005b15	      0xe9eefcffff	                           jmp 0x4005808	       168	diff.c	FUNCTION_5	FOR_1
0x4005b1a	      0xbd07000000	                              mov ebp, 7	       168	diff.c	FUNCTION_5	FOR_1
0x4005b1f	      0xe9e4fcffff	                           jmp 0x4005808	       168	diff.c	FUNCTION_5	FOR_1
0x4005b24	            0x31ff	                            xor edi, edi	       168	diff.c	FUNCTION_5	FOR_1
0x4005b26	      0xe9a5fdffff	                           jmp 0x40058d0	       168	diff.c	FUNCTION_5	FOR_1
0x4005b2b	      0xbf01000000	                              mov edi, 1	       168	diff.c	FUNCTION_5	FOR_1
0x4005b30	      0xe99bfdffff	                           jmp 0x40058d0	       168	diff.c	FUNCTION_5	FOR_1
0x4005b35	      0xbf02000000	                              mov edi, 2	       168	diff.c	FUNCTION_5	FOR_1
0x4005b3a	      0xe991fdffff	                           jmp 0x40058d0	       168	diff.c	FUNCTION_5	FOR_1
0x4005b3f	    0x49638e840000	         movsxd rcx, dword [r14 + 0x84] 	      1796	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x4005b46	            0x89fa	                            mov edx, edi	      1796	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x4005b48	            0x29ca	                            sub edx, ecx	      1796	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x4005b4a	          0x4863d2	                         movsxd rdx, edx	      1796	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x4005b4d	          0x4839d0	                            cmp rax, rdx	      1796	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x4005b50	            0x7f3c	                            jg 0x4005b8e	      1796	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x4005b52	      0x4c8d540500	                    lea r10, [rbp + rax]	      1800	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x4005b57	    0x898b84000000	             mov dword [rbx + 0x84], ecx	      1801	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x4005b5d	        0x4c895378	             mov qword [rbx + 0x78], r10	      1799	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x4005b61	      0xe96afeffff	                           jmp 0x40059d0	      1799	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	IF_11
0x4005b66	      0xbf03000000	                              mov edi, 3	       168	diff.c	FUNCTION_5	FOR_1
0x4005b6b	      0xe960fdffff	                           jmp 0x40058d0	       168	diff.c	FUNCTION_5	FOR_1
0x4005b70	      0xbf04000000	                              mov edi, 4	       168	diff.c	FUNCTION_5	FOR_1
0x4005b75	      0xe956fdffff	                           jmp 0x40058d0	       168	diff.c	FUNCTION_5	FOR_1
0x4005b7a	      0xbf05000000	                              mov edi, 5	       168	diff.c	FUNCTION_5	FOR_1
0x4005b7f	      0xe94cfdffff	                           jmp 0x40058d0	       168	diff.c	FUNCTION_5	FOR_1
0x4005b84	      0xbf06000000	                              mov edi, 6	       168	diff.c	FUNCTION_5	FOR_1
0x4005b89	      0xe942fdffff	                           jmp 0x40058d0	       168	diff.c	FUNCTION_5	FOR_1
0x4005b8e	          0x4c63d7	                         movsxd r10, edi	      1806	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	ELSE_3
0x4005b91	          0x4901ea	                            add r10, rbp	      1806	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	ELSE_3
0x4005b94	          0x4929ca	                            sub r10, rcx	      1806	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	ELSE_3
0x4005b97	        0x4c895378	             mov qword [rbx + 0x78], r10	      1805	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	ELSE_3
0x4005b9b	      0xe930feffff	                           jmp 0x40059d0	      1805	diff.c	FUNCTION_31	ELSE_1	IF_6	ELSE_2	IF_9	IF_10	ELSE_3
nv_diffgetput	IF,2:CALL,2:functions,0:FOR,0:SWITCH,0:ELSE,2:DO,0:WHILE,0	40
0x4007b70	              0x55	                                push rbp	      2140	diff.c	FUNCTION_37
0x4007b71	              0x53	                                push rbx	      2140	diff.c	FUNCTION_37
0x4007b72	            0x89fb	                            mov ebx, edi	      2140	diff.c	FUNCTION_37
0x4007b74	    0x4881ece80000	                           sub rsp, 0xe8	      2140	diff.c	FUNCTION_37
0x4007b7b	    0x64488b042528	                mov rax, qword fs:[0x28]	      2140	diff.c	FUNCTION_37
0x4007b84	    0x48898424d800	             mov qword [rsp + 0xd8], rax	      2140	diff.c	FUNCTION_37
0x4007b8c	            0x31c0	                            xor eax, eax	      2140	diff.c	FUNCTION_37
0x4007b8e	          0x4885f6	                           test rsi, rsi	      2144	diff.c	FUNCTION_37	IF_1
0x4007b91	            0x755d	                           jne 0x4007bf0	      2144	diff.c	FUNCTION_37	IF_1
0x4007b93	    0x48c704240000	                      mov qword [rsp], 0	      2145	diff.c	FUNCTION_37	IF_1
0x4007b9b	          0x83fb01	                              cmp ebx, 1	      2154	diff.c	FUNCTION_37	ELSE_2
0x4007b9e	          0x4889e7	                            mov rdi, rsp	      2158	diff.c	FUNCTION_37	CALL_2
0x4007ba1	    0xc74424380000	               mov dword [rsp + 0x38], 0	      2155	diff.c	FUNCTION_37
0x4007ba9	            0x19c0	                            sbb eax, eax	      2154	diff.c	FUNCTION_37	ELSE_2
0x4007bab	          0x83e0fd	                     and eax, 0xfffffffd	      2154	diff.c	FUNCTION_37	ELSE_2
0x4007bae	          0x83c072	                           add eax, 0x72	      2154	diff.c	FUNCTION_37	ELSE_2
0x4007bb1	        0x89442420	             mov dword [rsp + 0x20], eax	      2154	diff.c	FUNCTION_37	ELSE_2
0x4007bb5	    0x488b05000000	            mov rax, qword [0x04007bbc] 	      2156	diff.c	FUNCTION_37
0x4007bbc	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2156	diff.c	FUNCTION_37
0x4007bc0	      0x4889442440	             mov qword [rsp + 0x40], rax	      2156	diff.c	FUNCTION_37
0x4007bc5	      0x4889442448	             mov qword [rsp + 0x48], rax	      2157	diff.c	FUNCTION_37
0x4007bca	      0xe800000000	                          call 0x4007bcf	      2158	diff.c	FUNCTION_37	CALL_2
0x4007bcf	    0x488b8424d800	            mov rax, qword [rsp + 0xd8] 	      2159	diff.c	FUNCTION_37
0x4007bd7	    0x644833042528	                xor rax, qword fs:[0x28]	      2159	diff.c	FUNCTION_37
0x4007be0	            0x7533	                           jne 0x4007c15	      2159	diff.c	FUNCTION_37
0x4007be2	    0x4881c4e80000	                           add rsp, 0xe8	      2159	diff.c	FUNCTION_37
0x4007be9	              0x5b	                                 pop rbx	      2159	diff.c	FUNCTION_37
0x4007bea	              0x5d	                                 pop rbp	      2159	diff.c	FUNCTION_37
0x4007beb	              0xc3	                                     ret	      2159	diff.c	FUNCTION_37
0x4007bec	         0xf1f4000	                         nop dword [rax]	      2159	diff.c	FUNCTION_37
0x4007bf0	    0x488dac24b000	                   lea rbp, [rsp + 0xb0]	      2148	diff.c	FUNCTION_37	ELSE_1	CALL_1
0x4007bf8	          0x4889f1	                            mov rcx, rsi	      2148	diff.c	FUNCTION_37	ELSE_1	CALL_1
0x4007bfb	      0xba00000000	                              mov edx, 0	      2148	diff.c	FUNCTION_37	ELSE_1	CALL_1
0x4007c00	      0xbe1e000000	                           mov esi, 0x1e	      2148	diff.c	FUNCTION_37	ELSE_1	CALL_1
0x4007c05	            0x31c0	                            xor eax, eax	      2148	diff.c	FUNCTION_37	ELSE_1	CALL_1
0x4007c07	          0x4889ef	                            mov rdi, rbp	      2148	diff.c	FUNCTION_37	ELSE_1	CALL_1
0x4007c0a	      0xe800000000	                          call 0x4007c0f	      2148	diff.c	FUNCTION_37	ELSE_1	CALL_1
0x4007c0f	        0x48892c24	                    mov qword [rsp], rbp	      2149	diff.c	FUNCTION_37	ELSE_1
0x4007c13	            0xeb86	                           jmp 0x4007b9b	      2149	diff.c	FUNCTION_37	ELSE_1
0x4007c15	      0xe800000000	                          call 0x4007c1a	      2159	diff.c	FUNCTION_37
ex_diffsplit	IF,4:CALL,11:functions,0:FOR,0:SWITCH,0:ELSE,0:DO,0:WHILE,0	69
0x40044b0	              0x55	                                push rbp	      1080	diff.c	FUNCTION_18
0x40044b1	              0x53	                                push rbx	      1080	diff.c	FUNCTION_18
0x40044b2	          0x4889fd	                            mov rbp, rdi	      1080	diff.c	FUNCTION_18
0x40044b5	        0x4883ec28	                           sub rsp, 0x28	      1080	diff.c	FUNCTION_18
0x40044b9	    0x488b35000000	            mov rsi, qword [0x040044c0] 	      1084	diff.c	FUNCTION_18	CALL_1
0x40044c0	    0x488b1d000000	            mov rbx, qword [0x040044c7] 	      1081	diff.c	FUNCTION_18
0x40044c7	          0x4889e7	                            mov rdi, rsp	      1084	diff.c	FUNCTION_18	CALL_1
0x40044ca	    0x64488b042528	                mov rax, qword fs:[0x28]	      1080	diff.c	FUNCTION_18
0x40044d3	      0x4889442418	             mov qword [rsp + 0x18], rax	      1080	diff.c	FUNCTION_18
0x40044d8	            0x31c0	                            xor eax, eax	      1080	diff.c	FUNCTION_18
0x40044da	      0xe800000000	                          call 0x40044df	      1084	diff.c	FUNCTION_18	CALL_1
0x40044df	    0xc70500000000	               mov dword [0x040044e9], 1	      1086	diff.c	FUNCTION_18
0x40044e9	      0xe800000000	                          call 0x40044ee	      1089	diff.c	FUNCTION_18	CALL_2
0x40044ee	    0x488b3d000000	            mov rdi, qword [0x040044f5] 	      1090	diff.c	FUNCTION_18	CALL_3
0x40044f5	      0xe800000000	                          call 0x40044fa	      1090	diff.c	FUNCTION_18	CALL_3
0x40044fa	    0x8b3500000000	            mov esi, dword [0x04004500] 	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x4004500	      0xb802000000	                              mov eax, 2	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x4004505	    0xc70500000000	               mov dword [0x0400450f], 0	      1093	diff.c	FUNCTION_18
0x400450f	          0x83e610	                           and esi, 0x10	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x4004512	           0xf45f0	                         cmovne esi, eax	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x4004515	            0x31ff	                            xor edi, edi	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x4004517	      0xe800000000	                          call 0x400451c	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x400451c	            0x85c0	                           test eax, eax	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x400451e	            0x7520	                           jne 0x4004540	      1095	diff.c	FUNCTION_18	IF_1	CALL_4
0x4004520	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1120	diff.c	FUNCTION_18
0x4004525	    0x644833042528	                xor rax, qword fs:[0x28]	      1120	diff.c	FUNCTION_18
0x400452e	     0xf85ad000000	                           jne 0x40045e1	      1120	diff.c	FUNCTION_18
0x4004534	        0x4883c428	                           add rsp, 0x28	      1120	diff.c	FUNCTION_18
0x4004538	              0x5b	                                 pop rbx	      1120	diff.c	FUNCTION_18
0x4004539	              0x5d	                                 pop rbp	      1120	diff.c	FUNCTION_18
0x400453a	              0xc3	                                     ret	      1120	diff.c	FUNCTION_18
0x400453b	       0xf1f440000	                   nop dword [rax + rax]	      1120	diff.c	FUNCTION_18
0x4004540	    0x488b05000000	            mov rax, qword [0x04004547] 	      1099	diff.c	FUNCTION_18	IF_1
0x4004547	    0xc745209a0100	          mov dword [rbp + 0x20], 0x19a 	      1098	diff.c	FUNCTION_18	IF_1
0x400454e	          0x4889ef	                            mov rdi, rbp	      1100	diff.c	FUNCTION_18	IF_1	CALL_5
0x4004551	          0x4889de	                            mov rsi, rbx	      1100	diff.c	FUNCTION_18	IF_1	CALL_5
0x4004554	    0xc780c0010000	              mov dword [rax + 0x1c0], 1	      1099	diff.c	FUNCTION_18	IF_1
0x400455e	      0xe800000000	                          call 0x4004563	      1100	diff.c	FUNCTION_18	IF_1	CALL_5
0x4004563	    0x488b3d000000	            mov rdi, qword [0x0400456a] 	      1102	diff.c	FUNCTION_18	IF_1	IF_2
0x400456a	          0x4839fb	                            cmp rbx, rdi	      1102	diff.c	FUNCTION_18	IF_1	IF_2
0x400456d	            0x74b1	                            je 0x4004520	      1102	diff.c	FUNCTION_18	IF_1	IF_2
0x400456f	      0xbe01000000	                              mov esi, 1	      1105	diff.c	FUNCTION_18	IF_1	IF_2	CALL_6
0x4004574	      0xe800000000	                          call 0x4004579	      1105	diff.c	FUNCTION_18	IF_1	IF_2	CALL_6
0x4004579	          0x4889df	                            mov rdi, rbx	      1106	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_7
0x400457c	      0xe800000000	                          call 0x4004581	      1106	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_7
0x4004581	            0x85c0	                           test eax, eax	      1106	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_7
0x4004583	            0x751b	                           jne 0x40045a0	      1106	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_7
0x4004585	    0x488b3d000000	            mov rdi, qword [0x0400458c] 	      1117	diff.c	FUNCTION_18	IF_1	IF_2	CALL_11
0x400458c	    0x8bb7a0000000	            mov esi, dword [rdi + 0xa0] 	      1117	diff.c	FUNCTION_18	IF_1	IF_2	CALL_11
0x4004592	      0xe800000000	                          call 0x4004597	      1117	diff.c	FUNCTION_18	IF_1	IF_2	CALL_11
0x4004597	            0xeb87	                           jmp 0x4004520	      1120	diff.c	FUNCTION_18
0x4004599	     0xf1f80000000	                         nop dword [rax]	      1120	diff.c	FUNCTION_18
0x40045a0	      0xbe01000000	                              mov esi, 1	      1108	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_8
0x40045a5	          0x4889df	                            mov rdi, rbx	      1108	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_8
0x40045a8	      0xe800000000	                          call 0x40045ad	      1108	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_8
0x40045ad	          0x4889e7	                            mov rdi, rsp	      1110	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_9
0x40045b0	      0xe800000000	                          call 0x40045b5	      1110	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_9
0x40045b5	            0x85c0	                           test eax, eax	      1110	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_9
0x40045b7	            0x74cc	                            je 0x4004585	      1110	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_9
0x40045b9	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	      2638	diff.c	FUNCTION_43	CALL_1
0x40045bd	        0x488b3c24	                    mov rdi, qword [rsp]	      2638	diff.c	FUNCTION_43	CALL_1
0x40045c1	    0x488b2d000000	            mov rbp, qword [0x040045c8] 	      1112	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_10
0x40045c8	      0xe8e3cfffff	call sym.diff_get_corresponding_line_int	      2638	diff.c	FUNCTION_43	CALL_1
0x40045cd	    0x488b15000000	            mov rdx, qword [0x040045d4] 	      2641	diff.c	FUNCTION_43	IF_1
0x40045d4	          0x483902	                    cmp qword [rdx], rax	      1112	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_10
0x40045d7	        0x480f4e02	                 cmovle rax, qword [rdx]	      1112	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_10
0x40045db	        0x48894538	            mov qword [rbp + 0x38], rax 	      1112	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_10
0x40045df	            0xeba4	                           jmp 0x4004585	      1112	diff.c	FUNCTION_18	IF_1	IF_2	IF_3	IF_4	CALL_10
0x40045e1	      0xe800000000	                          call 0x40045e6	      1120	diff.c	FUNCTION_18
diffopt_changed	IF,12:CALL,15:functions,0:FOR,0:SWITCH,0:ELSE,7:DO,0:WHILE,1	167
0x4005ba0	            0x4154	                                push r12	      1858	diff.c	FUNCTION_32
0x4005ba2	              0x55	                                push rbp	      1858	diff.c	FUNCTION_32
0x4005ba3	    0x41bc06000000	                             mov r12d, 6	      1860	diff.c	FUNCTION_32
0x4005ba9	              0x53	                                push rbx	      1858	diff.c	FUNCTION_32
0x4005baa	      0xbd02000000	                              mov ebp, 2	      1862	diff.c	FUNCTION_32
0x4005baf	            0x31db	                            xor ebx, ebx	      1861	diff.c	FUNCTION_32
0x4005bb1	        0x4883ec10	                           sub rsp, 0x10	      1858	diff.c	FUNCTION_32
0x4005bb5	    0x488b15000000	            mov rdx, qword [0x04005bbc] 	      1865	diff.c	FUNCTION_32
0x4005bbc	    0x64488b042528	                mov rax, qword fs:[0x28]	      1858	diff.c	FUNCTION_32
0x4005bc5	      0x4889442408	                mov qword [rsp + 8], rax	      1858	diff.c	FUNCTION_32
0x4005bca	            0x31c0	                            xor eax, eax	      1858	diff.c	FUNCTION_32
0x4005bcc	        0x48891424	                    mov qword [rsp], rdx	      1865	diff.c	FUNCTION_32
0x4005bd0	        0x440fb602	                   movzx r8d, byte [rdx]	      1865	diff.c	FUNCTION_32
0x4005bd4	         0xf1f4000	                         nop dword [rax]	      1865	diff.c	FUNCTION_32
0x4005bd8	          0x4584c0	                           test r8b, r8b	      1866	diff.c	FUNCTION_32	WHILE_1
0x4005bdb	            0x7452	                            je 0x4005c2f	      1866	diff.c	FUNCTION_32	WHILE_1
0x4005bdd	      0xbf00000000	                              mov edi, 0	      1868	diff.c	FUNCTION_32	WHILE_1	IF_1	CALL_1
0x4005be2	      0xb906000000	                              mov ecx, 6	      1868	diff.c	FUNCTION_32	WHILE_1	IF_1	CALL_1
0x4005be7	          0x4889d6	                            mov rsi, rdx	      1868	diff.c	FUNCTION_32	WHILE_1	IF_1	CALL_1
0x4005bea	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1868	diff.c	FUNCTION_32	WHILE_1	IF_1	CALL_1
0x4005bec	     0xf85a6000000	                           jne 0x4005c98	      1868	diff.c	FUNCTION_32	WHILE_1	IF_1	CALL_1
0x4005bf2	        0x488d4206	                      lea rax, [rdx + 6]	      1870	diff.c	FUNCTION_32	WHILE_1	IF_1
0x4005bf6	          0x83cb01	                               or ebx, 1	      1871	diff.c	FUNCTION_32	WHILE_1	IF_1
0x4005bf9	        0x48890424	                    mov qword [rsp], rax	      1870	diff.c	FUNCTION_32	WHILE_1	IF_1
0x4005bfd	      0x440fb64206	               movzx r8d, byte [rdx + 6]	      1870	diff.c	FUNCTION_32	WHILE_1	IF_1
0x4005c02	          0x4889c2	                            mov rdx, rax	      1870	diff.c	FUNCTION_32	WHILE_1	IF_1
0x4005c05	        0x4180f82c	                           cmp r8b, 0x2c	      1908	diff.c	FUNCTION_32	WHILE_1	IF_9
0x4005c09	            0x7409	                            je 0x4005c14	      1908	diff.c	FUNCTION_32	WHILE_1	IF_9
0x4005c0b	          0x4584c0	                           test r8b, r8b	      1908	diff.c	FUNCTION_32	WHILE_1	IF_9
0x4005c0e	     0xf855c010000	                           jne 0x4005d70	      1908	diff.c	FUNCTION_32	WHILE_1	IF_9
0x4005c14	        0x4180f82c	                           cmp r8b, 0x2c	      1910	diff.c	FUNCTION_32	WHILE_1	IF_10
0x4005c18	            0x75be	                           jne 0x4005bd8	      1910	diff.c	FUNCTION_32	WHILE_1	IF_10
0x4005c1a	        0x488d4201	                      lea rax, [rdx + 1]	      1911	diff.c	FUNCTION_32	WHILE_1	IF_10
0x4005c1e	        0x48890424	                    mov qword [rsp], rax	      1911	diff.c	FUNCTION_32	WHILE_1	IF_10
0x4005c22	      0x440fb64201	               movzx r8d, byte [rdx + 1]	      1911	diff.c	FUNCTION_32	WHILE_1	IF_10
0x4005c27	          0x4889c2	                            mov rdx, rax	      1911	diff.c	FUNCTION_32	WHILE_1	IF_10
0x4005c2a	          0x4584c0	                           test r8b, r8b	      1866	diff.c	FUNCTION_32	WHILE_1
0x4005c2d	            0x75ae	                           jne 0x4005bdd	      1866	diff.c	FUNCTION_32	WHILE_1
0x4005c2f	            0x89d8	                            mov eax, ebx	      1915	diff.c	FUNCTION_32	IF_11
0x4005c31	          0x83e018	                           and eax, 0x18	      1915	diff.c	FUNCTION_32	IF_11
0x4005c34	          0x83f818	                           cmp eax, 0x18	      1915	diff.c	FUNCTION_32	IF_11
0x4005c37	     0xf8433010000	                            je 0x4005d70	      1915	diff.c	FUNCTION_32	IF_11
0x4005c3d	    0x3b1d00000000	            cmp ebx, dword [0x04005c43] 	      1919	diff.c	FUNCTION_32	IF_12
0x4005c43	            0x7425	                            je 0x4005c6a	      1919	diff.c	FUNCTION_32	IF_12
0x4005c45	    0x488b05000000	            mov rax, qword [0x04005c4c] 	      1920	diff.c	FUNCTION_32	IF_12	CALL_13
0x4005c4c	          0x4885c0	                           test rax, rax	      1920	diff.c	FUNCTION_32	IF_12	CALL_13
0x4005c4f	            0x7419	                            je 0x4005c6a	      1920	diff.c	FUNCTION_32	IF_12	CALL_13
0x4005c51	     0xf1f80000000	                         nop dword [rax]	      1920	diff.c	FUNCTION_32	IF_12	CALL_13
0x4005c58	    0xc780a0000000	               mov dword [rax + 0xa0], 1	      1921	diff.c	FUNCTION_32	IF_12
0x4005c62	          0x488b00	                    mov rax, qword [rax]	      1920	diff.c	FUNCTION_32	IF_12	CALL_13
0x4005c65	          0x4885c0	                           test rax, rax	      1920	diff.c	FUNCTION_32	IF_12	CALL_13
0x4005c68	            0x75ee	                           jne 0x4005c58	      1920	diff.c	FUNCTION_32	IF_12	CALL_13
0x4005c6a	    0x891d00000000	            mov dword [0x04005c70], ebx 	      1923	diff.c	FUNCTION_32
0x4005c70	    0x448925000000	           mov dword [0x04005c77], r12d 	      1924	diff.c	FUNCTION_32
0x4005c77	    0x892d00000000	            mov dword [0x04005c7d], ebp 	      1925	diff.c	FUNCTION_32
0x4005c7d	      0xe8cebbffff	        call sym.diff_redraw.constprop.6	      1927	diff.c	FUNCTION_32	CALL_14
0x4005c82	            0x31f6	                            xor esi, esi	      1931	diff.c	FUNCTION_32	CALL_15
0x4005c84	            0x31ff	                            xor edi, edi	      1931	diff.c	FUNCTION_32	CALL_15
0x4005c86	      0xe800000000	                          call 0x4005c8b	      1931	diff.c	FUNCTION_32	CALL_15
0x4005c8b	      0xb801000000	                              mov eax, 1	      1933	diff.c	FUNCTION_32
0x4005c90	      0xe9dd000000	                           jmp 0x4005d72	      1933	diff.c	FUNCTION_32
0x4005c95	           0xf1f00	                         nop dword [rax]	      1933	diff.c	FUNCTION_32
0x4005c98	      0xbf00000000	                              mov edi, 0	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x4005c9d	      0xb908000000	                              mov ecx, 8	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x4005ca2	          0x4889d6	                            mov rsi, rdx	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x4005ca5	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x4005ca7	            0x7510	                           jne 0x4005cb9	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x4005ca9	         0xfb64208	               movzx eax, byte [rdx + 8]	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x4005cad	          0x83e830	                           sub eax, 0x30	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x4005cb0	          0x83f809	                              cmp eax, 9	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x4005cb3	     0xf868f000000	                           jbe 0x4005d48	      1873	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_3
0x4005cb9	      0xbf00000000	                              mov edi, 0	      1878	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3	CALL_5
0x4005cbe	      0xb905000000	                              mov ecx, 5	      1878	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3	CALL_5
0x4005cc3	          0x4889d6	                            mov rsi, rdx	      1878	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3	CALL_5
0x4005cc6	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1878	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3	CALL_5
0x4005cc8	            0x751e	                           jne 0x4005ce8	      1878	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3	CALL_5
0x4005cca	        0x488d4205	                      lea rax, [rdx + 5]	      1880	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3
0x4005cce	          0x83cb02	                               or ebx, 2	      1881	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3
0x4005cd1	        0x48890424	                    mov qword [rsp], rax	      1880	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3
0x4005cd5	      0x440fb64205	               movzx r8d, byte [rdx + 5]	      1880	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3
0x4005cda	          0x4889c2	                            mov rdx, rax	      1880	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3
0x4005cdd	      0xe923ffffff	                           jmp 0x4005c05	      1880	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3
0x4005ce2	    0x660f1f440000	                    nop word [rax + rax]	      1880	diff.c	FUNCTION_32	WHILE_1	ELSE_2	IF_3
0x4005ce8	      0xbf00000000	                              mov edi, 0	      1883	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4	CALL_6
0x4005ced	      0xb906000000	                              mov ecx, 6	      1883	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4	CALL_6
0x4005cf2	          0x4889d6	                            mov rsi, rdx	      1883	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4	CALL_6
0x4005cf5	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1883	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4	CALL_6
0x4005cf7	            0x751f	                           jne 0x4005d18	      1883	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4	CALL_6
0x4005cf9	        0x488d4206	                      lea rax, [rdx + 6]	      1885	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4
0x4005cfd	          0x83cb04	                               or ebx, 4	      1886	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4
0x4005d00	        0x48890424	                    mov qword [rsp], rax	      1885	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4
0x4005d04	      0x440fb64206	               movzx r8d, byte [rdx + 6]	      1885	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4
0x4005d09	          0x4889c2	                            mov rdx, rax	      1885	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4
0x4005d0c	      0xe9f4feffff	                           jmp 0x4005c05	      1885	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4
0x4005d11	     0xf1f80000000	                         nop dword [rax]	      1885	diff.c	FUNCTION_32	WHILE_1	ELSE_3	IF_4
0x4005d18	      0xbf00000000	                              mov edi, 0	      1888	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5	CALL_7
0x4005d1d	      0xb90a000000	                            mov ecx, 0xa	      1888	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5	CALL_7
0x4005d22	          0x4889d6	                            mov rsi, rdx	      1888	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5	CALL_7
0x4005d25	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1888	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5	CALL_7
0x4005d27	            0x7567	                           jne 0x4005d90	      1888	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5	CALL_7
0x4005d29	        0x488d420a	                    lea rax, [rdx + 0xa]	      1890	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5
0x4005d2d	      0x440fb6420a	            movzx r8d, byte [rdx + 0xa] 	      1890	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5
0x4005d32	          0x83cb08	                               or ebx, 8	      1891	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5
0x4005d35	        0x48890424	                    mov qword [rsp], rax	      1890	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5
0x4005d39	          0x4889c2	                            mov rdx, rax	      1890	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5
0x4005d3c	      0xe9c4feffff	                           jmp 0x4005c05	      1890	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5
0x4005d41	     0xf1f80000000	                         nop dword [rax]	      1890	diff.c	FUNCTION_32	WHILE_1	ELSE_4	IF_5
0x4005d48	        0x4883c208	                              add rdx, 8	      1875	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2
0x4005d4c	          0x4889e7	                            mov rdi, rsp	      1876	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_4
0x4005d4f	        0x48891424	                    mov qword [rsp], rdx	      1875	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2
0x4005d53	      0xe800000000	                          call 0x4005d58	      1876	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_4
0x4005d58	        0x488b1424	                    mov rdx, qword [rsp]	      1876	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_4
0x4005d5c	          0x4189c4	                           mov r12d, eax	      1876	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_4
0x4005d5f	        0x440fb602	                   movzx r8d, byte [rdx]	      1876	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_4
0x4005d63	      0xe99dfeffff	                           jmp 0x4005c05	      1876	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_4
0x4005d68	     0xf1f84000000	                   nop dword [rax + rax]	      1876	diff.c	FUNCTION_32	WHILE_1	ELSE_1	IF_2	CALL_4
0x4005d70	            0x31c0	                            xor eax, eax	      1909	diff.c	FUNCTION_32	WHILE_1	IF_9
0x4005d72	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      1934	diff.c	FUNCTION_32
0x4005d77	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1934	diff.c	FUNCTION_32
0x4005d80	     0xf85a3000000	                           jne 0x4005e29	      1934	diff.c	FUNCTION_32
0x4005d86	        0x4883c410	                           add rsp, 0x10	      1934	diff.c	FUNCTION_32
0x4005d8a	              0x5b	                                 pop rbx	      1934	diff.c	FUNCTION_32
0x4005d8b	              0x5d	                                 pop rbp	      1934	diff.c	FUNCTION_32
0x4005d8c	            0x415c	                                 pop r12	      1934	diff.c	FUNCTION_32
0x4005d8e	              0xc3	                                     ret	      1934	diff.c	FUNCTION_32
0x4005d8f	              0x90	                                     nop	      1934	diff.c	FUNCTION_32
0x4005d90	      0xbf00000000	                              mov edi, 0	      1893	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6	CALL_8
0x4005d95	      0xb908000000	                              mov ecx, 8	      1893	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6	CALL_8
0x4005d9a	          0x4889d6	                            mov rsi, rdx	      1893	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6	CALL_8
0x4005d9d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1893	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6	CALL_8
0x4005d9f	            0x751f	                           jne 0x4005dc0	      1893	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6	CALL_8
0x4005da1	        0x488d4208	                      lea rax, [rdx + 8]	      1895	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6
0x4005da5	      0x440fb64208	               movzx r8d, byte [rdx + 8]	      1895	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6
0x4005daa	          0x83cb10	                            or ebx, 0x10	      1896	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6
0x4005dad	        0x48890424	                    mov qword [rsp], rax	      1895	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6
0x4005db1	          0x4889c2	                            mov rdx, rax	      1895	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6
0x4005db4	      0xe94cfeffff	                           jmp 0x4005c05	      1895	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6
0x4005db9	     0xf1f80000000	                         nop dword [rax]	      1895	diff.c	FUNCTION_32	WHILE_1	ELSE_5	IF_6
0x4005dc0	      0xbf00000000	                              mov edi, 0	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x4005dc5	      0xb90b000000	                            mov ecx, 0xb	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x4005dca	          0x4889d6	                            mov rsi, rdx	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x4005dcd	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x4005dcf	            0x750c	                           jne 0x4005ddd	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x4005dd1	         0xfb6420b	            movzx eax, byte [rdx + 0xb] 	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x4005dd5	          0x83e830	                           sub eax, 0x30	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x4005dd8	          0x83f809	                              cmp eax, 9	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x4005ddb	            0x762d	                           jbe 0x4005e0a	      1898	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_10
0x4005ddd	      0xbf00000000	                              mov edi, 0	      1903	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8	CALL_12
0x4005de2	      0xb909000000	                              mov ecx, 9	      1903	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8	CALL_12
0x4005de7	          0x4889d6	                            mov rsi, rdx	      1903	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8	CALL_12
0x4005dea	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1903	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8	CALL_12
0x4005dec	     0xf8513feffff	                           jne 0x4005c05	      1903	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8	CALL_12
0x4005df2	        0x488d4209	                      lea rax, [rdx + 9]	      1905	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8
0x4005df6	      0x440fb64209	               movzx r8d, byte [rdx + 9]	      1905	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8
0x4005dfb	          0x83cb20	                            or ebx, 0x20	      1906	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8
0x4005dfe	        0x48890424	                    mov qword [rsp], rax	      1905	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8
0x4005e02	          0x4889c2	                            mov rdx, rax	      1906	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8
0x4005e05	      0xe9fbfdffff	                           jmp 0x4005c05	      1906	diff.c	FUNCTION_32	WHILE_1	ELSE_7	IF_8
0x4005e0a	        0x4883c20b	                            add rdx, 0xb	      1900	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7
0x4005e0e	          0x4889e7	                            mov rdi, rsp	      1901	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_11
0x4005e11	        0x48891424	                    mov qword [rsp], rdx	      1900	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7
0x4005e15	      0xe800000000	                          call 0x4005e1a	      1901	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_11
0x4005e1a	        0x488b1424	                    mov rdx, qword [rsp]	      1901	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_11
0x4005e1e	            0x89c5	                            mov ebp, eax	      1901	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_11
0x4005e20	        0x440fb602	                   movzx r8d, byte [rdx]	      1901	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_11
0x4005e24	      0xe9dcfdffff	                           jmp 0x4005c05	      1901	diff.c	FUNCTION_32	WHILE_1	ELSE_6	IF_7	CALL_11
0x4005e29	      0xe800000000	                          call 0x4005e2e	      1934	diff.c	FUNCTION_32
diff_find_change	IF,14:CALL,20:functions,0:FOR,2:SWITCH,0:ELSE,2:DO,0:WHILE,4	360
0x4005e50	            0x4157	                                push r15	      1964	diff.c	FUNCTION_35
0x4005e52	            0x4156	                                push r14	      1964	diff.c	FUNCTION_35
0x4005e54	            0x4155	                                push r13	      1964	diff.c	FUNCTION_35
0x4005e56	            0x4154	                                push r12	      1964	diff.c	FUNCTION_35
0x4005e58	              0x55	                                push rbp	      1964	diff.c	FUNCTION_35
0x4005e59	              0x53	                                push rbx	      1964	diff.c	FUNCTION_35
0x4005e5a	          0x4889fb	                            mov rbx, rdi	      1964	diff.c	FUNCTION_35
0x4005e5d	          0x4889f5	                            mov rbp, rsi	      1964	diff.c	FUNCTION_35
0x4005e60	        0x4883ec48	                           sub rsp, 0x48	      1964	diff.c	FUNCTION_35
0x4005e64	        0x488b7f08	                mov rdi, qword [rdi + 8]	      1978	diff.c	FUNCTION_35	CALL_2
0x4005e68	      0x4889542410	             mov qword [rsp + 0x10], rdx	      1964	diff.c	FUNCTION_35
0x4005e6d	            0x31d2	                            xor edx, edx	      1978	diff.c	FUNCTION_35	CALL_2
0x4005e6f	      0x48894c2428	             mov qword [rsp + 0x28], rcx	      1964	diff.c	FUNCTION_35
0x4005e74	    0x64488b042528	                mov rax, qword fs:[0x28]	      1964	diff.c	FUNCTION_35
0x4005e7d	      0x4889442438	             mov qword [rsp + 0x38], rax	      1964	diff.c	FUNCTION_35
0x4005e82	            0x31c0	                            xor eax, eax	      1964	diff.c	FUNCTION_35
0x4005e84	      0xe800000000	                          call 0x4005e89	      1978	diff.c	FUNCTION_35	CALL_2
0x4005e89	          0x4889c7	                            mov rdi, rax	      1978	diff.c	FUNCTION_35	CALL_2
0x4005e8c	      0xe800000000	                          call 0x4005e91	      1978	diff.c	FUNCTION_35	CALL_2
0x4005e91	          0x4885c0	                           test rax, rax	      1979	diff.c	FUNCTION_35	IF_1
0x4005e94	     0xf849a000000	                            je 0x4005f34	      1979	diff.c	FUNCTION_35	IF_1
0x4005e9a	    0x488b0d000000	            mov rcx, qword [0x04005ea1] 	      1979	diff.c	FUNCTION_35	IF_1
0x4005ea1	          0x4989c5	                            mov r13, rax	      1979	diff.c	FUNCTION_35	IF_1
0x4005ea4	        0x488b4308	                mov rax, qword [rbx + 8]	      1982	diff.c	FUNCTION_35	CALL_3
0x4005ea8	        0x488b7160	            mov rsi, qword [rcx + 0x60] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4005eac	          0x4839f0	                            cmp rax, rsi	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4005eaf	     0xf8483000000	                            je 0x4005f38	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4005eb5	        0x483b4168	            cmp rax, qword [rcx + 0x68] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4005eb9	     0xf849c040000	                            je 0x400635b	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4005ebf	        0x483b4170	            cmp rax, qword [rcx + 0x70] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4005ec3	     0xf849f040000	                            je 0x4006368	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4005ec9	        0x483b4178	            cmp rax, qword [rcx + 0x78] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4005ecd	     0xf84a2040000	                            je 0x4006375	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4005ed3	    0x483b81800000	            cmp rax, qword [rcx + 0x80] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4005eda	     0xf84a2040000	                            je 0x4006382	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4005ee0	    0x483b81880000	            cmp rax, qword [rcx + 0x88] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4005ee7	     0xf84a2040000	                            je 0x400638f	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4005eed	    0x483b81900000	            cmp rax, qword [rcx + 0x90] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4005ef4	     0xf84a2040000	                            je 0x400639c	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4005efa	    0x483b81980000	            cmp rax, qword [rcx + 0x98] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4005f01	     0xf84a2040000	                            je 0x40063a9	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4005f07	          0x4c89ef	                            mov rdi, r13	      1995	diff.c	FUNCTION_35	IF_4	CALL_6
0x4005f0a	      0xe800000000	                          call 0x4005f0f	      1995	diff.c	FUNCTION_35	IF_4	CALL_6
0x4005f0f	            0x31c0	                            xor eax, eax	      1996	diff.c	FUNCTION_35	IF_4
0x4005f11	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      2083	diff.c	FUNCTION_35
0x4005f16	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      2083	diff.c	FUNCTION_35
0x4005f1f	     0xf8591040000	                           jne 0x40063b6	      2083	diff.c	FUNCTION_35
0x4005f25	        0x4883c448	                           add rsp, 0x48	      2083	diff.c	FUNCTION_35
0x4005f29	              0x5b	                                 pop rbx	      2083	diff.c	FUNCTION_35
0x4005f2a	              0x5d	                                 pop rbp	      2083	diff.c	FUNCTION_35
0x4005f2b	            0x415c	                                 pop r12	      2083	diff.c	FUNCTION_35
0x4005f2d	            0x415d	                                 pop r13	      2083	diff.c	FUNCTION_35
0x4005f2f	            0x415e	                                 pop r14	      2083	diff.c	FUNCTION_35
0x4005f31	            0x415f	                                 pop r15	      2083	diff.c	FUNCTION_35
0x4005f33	              0xc3	                                     ret	      2083	diff.c	FUNCTION_35
0x4005f34	            0x31c0	                            xor eax, eax	      1980	diff.c	FUNCTION_35	IF_1
0x4005f36	            0xebd9	                           jmp 0x4005f11	      1980	diff.c	FUNCTION_35	IF_1
0x4005f38	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	       168	diff.c	FUNCTION_5	FOR_1
0x4005f40	        0x488b5958	            mov rbx, qword [rcx + 0x58] 	      1990	diff.c	FUNCTION_35	FOR_1
0x4005f44	          0x4885db	                           test rbx, rbx	      1990	diff.c	FUNCTION_35	FOR_1
0x4005f47	            0x74be	                            je 0x4005f07	      1990	diff.c	FUNCTION_35	FOR_1
0x4005f49	      0x48637c241c	         movsxd rdi, dword [rsp + 0x1c] 	      1990	diff.c	FUNCTION_35	FOR_1
0x4005f4e	    0x488d14fd0000	                        lea rdx, [rdi*8]	      1990	diff.c	FUNCTION_35	FOR_1
0x4005f56	            0xeb10	                           jmp 0x4005f68	      1990	diff.c	FUNCTION_35	FOR_1
0x4005f58	     0xf1f84000000	                   nop dword [rax + rax]	      1990	diff.c	FUNCTION_35	FOR_1
0x4005f60	          0x488b1b	                    mov rbx, qword [rbx]	      1990	diff.c	FUNCTION_35	FOR_1
0x4005f63	          0x4885db	                           test rbx, rbx	      1990	diff.c	FUNCTION_35	FOR_1
0x4005f66	            0x749f	                            je 0x4005f07	      1990	diff.c	FUNCTION_35	FOR_1
0x4005f68	      0x488b441308	         mov rax, qword [rbx + rdx + 8] 	      1991	diff.c	FUNCTION_35	FOR_1	IF_3
0x4005f6d	      0x4803441348	       add rax, qword [rbx + rdx + 0x48]	      1991	diff.c	FUNCTION_35	FOR_1	IF_3
0x4005f72	          0x4839c5	                            cmp rbp, rax	      1991	diff.c	FUNCTION_35	FOR_1	IF_3
0x4005f75	            0x7fe9	                            jg 0x4005f60	      1991	diff.c	FUNCTION_35	FOR_1	IF_3
0x4005f77	          0x4885f6	                           test rsi, rsi	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4005f7a	            0x7415	                            je 0x4005f91	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4005f7c	        0x488b4308	                mov rax, qword [rbx + 8]	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4005f80	        0x48034348	             add rax, qword [rbx + 0x48]	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4005f84	        0x4883e801	                              sub rax, 1	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4005f88	          0x483906	                    cmp qword [rsi], rax	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4005f8b	     0xf8c76ffffff	                            jl 0x4005f07	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4005f91	        0x488b5168	            mov rdx, qword [rcx + 0x68] 	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4005f95	          0x4885d2	                           test rdx, rdx	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4005f98	            0x7415	                            je 0x4005faf	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4005f9a	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4005f9e	        0x48034350	             add rax, qword [rbx + 0x50]	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4005fa2	        0x4883e801	                              sub rax, 1	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4005fa6	          0x483902	                    cmp qword [rdx], rax	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4005fa9	     0xf8c58ffffff	                            jl 0x4005f07	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4005faf	        0x488b5170	            mov rdx, qword [rcx + 0x70] 	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4005fb3	          0x4885d2	                           test rdx, rdx	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4005fb6	            0x7415	                            je 0x4005fcd	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4005fb8	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4005fbc	        0x48034358	             add rax, qword [rbx + 0x58]	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4005fc0	        0x4883e801	                              sub rax, 1	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4005fc4	          0x483902	                    cmp qword [rdx], rax	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4005fc7	     0xf8c3affffff	                            jl 0x4005f07	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4005fcd	        0x488b5178	            mov rdx, qword [rcx + 0x78] 	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4005fd1	          0x4885d2	                           test rdx, rdx	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4005fd4	            0x7415	                            je 0x4005feb	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4005fd6	        0x488b4320	            mov rax, qword [rbx + 0x20] 	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4005fda	        0x48034360	             add rax, qword [rbx + 0x60]	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4005fde	        0x4883e801	                              sub rax, 1	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4005fe2	          0x483902	                    cmp qword [rdx], rax	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4005fe5	     0xf8c1cffffff	                            jl 0x4005f07	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4005feb	    0x488b91800000	            mov rdx, qword [rcx + 0x80] 	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4005ff2	          0x4885d2	                           test rdx, rdx	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4005ff5	            0x7415	                            je 0x400600c	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4005ff7	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4005ffb	        0x48034368	             add rax, qword [rbx + 0x68]	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4005fff	        0x4883e801	                              sub rax, 1	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4006003	          0x483902	                    cmp qword [rdx], rax	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4006006	     0xf8cfbfeffff	                            jl 0x4005f07	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x400600c	    0x488b91880000	            mov rdx, qword [rcx + 0x88] 	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4006013	          0x4885d2	                           test rdx, rdx	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4006016	            0x7415	                            je 0x400602d	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4006018	        0x488b4330	            mov rax, qword [rbx + 0x30] 	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x400601c	        0x48034370	             add rax, qword [rbx + 0x70]	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4006020	        0x4883e801	                              sub rax, 1	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4006024	          0x483902	                    cmp qword [rdx], rax	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4006027	     0xf8cdafeffff	                            jl 0x4005f07	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x400602d	    0x488b91900000	            mov rdx, qword [rcx + 0x90] 	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4006034	          0x4885d2	                           test rdx, rdx	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4006037	            0x7415	                            je 0x400604e	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4006039	        0x488b4338	            mov rax, qword [rbx + 0x38] 	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x400603d	        0x48034378	             add rax, qword [rbx + 0x78]	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4006041	        0x4883e801	                              sub rax, 1	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4006045	          0x483902	                    cmp qword [rdx], rax	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4006048	     0xf8cb9feffff	                            jl 0x4005f07	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x400604e	    0x488b91980000	            mov rdx, qword [rcx + 0x98] 	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4006055	          0x4885d2	                           test rdx, rdx	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4006058	            0x7418	                            je 0x4006072	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x400605a	    0x488b83800000	            mov rax, qword [rbx + 0x80] 	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4006061	        0x48034340	             add rax, qword [rbx + 0x40]	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4006065	        0x4883e801	                              sub rax, 1	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4006069	          0x483b02	                    cmp rax, qword [rdx]	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x400606c	     0xf8f95feffff	                            jg 0x4005f07	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4006072	        0x2b6cfb08	        sub ebp, dword [rbx + rdi*8 + 8]	      1999	diff.c	FUNCTION_35
0x4006076	        0x488d4348	                   lea rax, [rbx + 0x48]	      1999	diff.c	FUNCTION_35
0x400607a	    0xc74424180000	               mov dword [rsp + 0x18], 0	      2001	diff.c	FUNCTION_35	FOR_2
0x4006082	    0x41bc01000000	                             mov r12d, 1	      1973	diff.c	FUNCTION_35
0x4006088	        0x8b742418	            mov esi, dword [rsp + 0x18] 	      1973	diff.c	FUNCTION_35
0x400608c	      0x4889442408	                mov qword [rsp + 8], rax	      1973	diff.c	FUNCTION_35
0x4006091	          0x4863c5	                         movsxd rax, ebp	      2005	diff.c	FUNCTION_35	FOR_2	IF_5	IF_6
0x4006094	      0x4889442420	             mov qword [rsp + 0x20], rax	      2005	diff.c	FUNCTION_35	FOR_2	IF_5	IF_6
0x4006099	            0xeb26	                           jmp 0x40060c1	      2005	diff.c	FUNCTION_35	FOR_2	IF_5	IF_6
0x400609b	       0xf1f440000	                   nop dword [rax + rax]	      2005	diff.c	FUNCTION_35	FOR_2	IF_5	IF_6
0x40060a0	      0x8344241801	               add dword [rsp + 0x18], 1	      2001	diff.c	FUNCTION_35	FOR_2
0x40060a5	    0x488344240808	                  add qword [rsp + 8], 8	      2001	diff.c	FUNCTION_35	FOR_2
0x40060ab	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      2001	diff.c	FUNCTION_35	FOR_2
0x40060af	          0x83f808	                              cmp eax, 8	      2001	diff.c	FUNCTION_35	FOR_2
0x40060b2	     0xf8460020000	                            je 0x4006318	      2001	diff.c	FUNCTION_35	FOR_2
0x40060b8	    0x488b0d000000	            mov rcx, qword [0x040060bf] 	      2001	diff.c	FUNCTION_35	FOR_2
0x40060bf	            0x89c6	                            mov esi, eax	      2001	diff.c	FUNCTION_35	FOR_2
0x40060c1	          0x4863c6	                         movsxd rax, esi	      2002	diff.c	FUNCTION_35	FOR_2	IF_5
0x40060c4	      0x488b7cc160	    mov rdi, qword [rcx + rax*8 + 0x60] 	      2002	diff.c	FUNCTION_35	FOR_2	IF_5
0x40060c9	          0x4885ff	                           test rdi, rdi	      2002	diff.c	FUNCTION_35	FOR_2	IF_5
0x40060cc	            0x74d2	                            je 0x40060a0	      2002	diff.c	FUNCTION_35	FOR_2	IF_5
0x40060ce	        0x8b4c241c	            mov ecx, dword [rsp + 0x1c] 	      2002	diff.c	FUNCTION_35	FOR_2	IF_5
0x40060d2	            0x39ce	                            cmp esi, ecx	      2002	diff.c	FUNCTION_35	FOR_2	IF_5
0x40060d4	            0x74ca	                            je 0x40060a0	      2002	diff.c	FUNCTION_35	FOR_2	IF_5
0x40060d6	      0x488b442408	                mov rax, qword [rsp + 8]	      2005	diff.c	FUNCTION_35	FOR_2	IF_5	IF_6
0x40060db	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      2005	diff.c	FUNCTION_35	FOR_2	IF_5	IF_6
0x40060e0	          0x483b08	                    cmp rcx, qword [rax]	      2005	diff.c	FUNCTION_35	FOR_2	IF_5	IF_6
0x40060e3	            0x7dbb	                           jge 0x40060a0	      2005	diff.c	FUNCTION_35	FOR_2	IF_5	IF_6
0x40060e5	          0x4889ce	                            mov rsi, rcx	      2008	diff.c	FUNCTION_35	FOR_2	IF_5	CALL_7
0x40060e8	        0x480370c0	             add rsi, qword [rax - 0x40]	      2008	diff.c	FUNCTION_35	FOR_2	IF_5	CALL_7
0x40060ec	            0x31d2	                            xor edx, edx	      2008	diff.c	FUNCTION_35	FOR_2	IF_5	CALL_7
0x40060ee	          0x4531f6	                          xor r14d, r14d	      2012	diff.c	FUNCTION_35	FOR_2	IF_5
0x40060f1	            0x31ed	                            xor ebp, ebp	      2012	diff.c	FUNCTION_35	FOR_2	IF_5
0x40060f3	      0xe800000000	                          call 0x40060f8	      2008	diff.c	FUNCTION_35	FOR_2	IF_5	CALL_7
0x40060f8	          0x4989c4	                            mov r12, rax	      2008	diff.c	FUNCTION_35	FOR_2	IF_5	CALL_7
0x40060fb	            0xeb22	                           jmp 0x400611f	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x40060fd	           0xf1f00	                         nop dword [rax]	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x4006100	          0x80fa09	                               cmp dl, 9	      2016	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_8
0x4006103	            0x743b	                            je 0x4006140	      2016	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_8
0x4006105	      0x488d542434	                   lea rdx, [rsp + 0x34]	      2024	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8	CALL_12
0x400610a	          0x4889df	                            mov rdi, rbx	      2024	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8	CALL_12
0x400610d	      0xe82e9fffff	                call sym.diff_equal_char	      2024	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8	CALL_12
0x4006112	            0x85c0	                           test eax, eax	      2024	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8	CALL_12
0x4006114	            0x746a	                            je 0x4006180	      2024	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1	IF_8	CALL_12
0x4006116	        0x8b442434	            mov eax, dword [rsp + 0x34] 	      2027	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1
0x400611a	             0x1c5	                            add ebp, eax	      2027	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1
0x400611c	          0x4101c6	                           add r14d, eax	      2028	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	ELSE_1
0x400611f	          0x4863dd	                         movsxd rbx, ebp	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x4006122	          0x4c01eb	                            add rbx, r13	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x4006125	           0xfb613	                   movzx edx, byte [rbx]	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x4006128	            0x84d2	                             test dl, dl	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x400612a	            0x7454	                            je 0x4006180	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x400612c	          0x4963f6	                        movsxd rsi, r14d	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x400612f	          0x4c01e6	                            add rsi, r12	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x4006132	    0xf60500000000	               test byte [0x04006139], 4	      2015	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7
0x4006139	            0x74ca	                            je 0x4006105	      2015	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7
0x400613b	          0x80fa20	                            cmp dl, 0x20	      2016	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_8
0x400613e	            0x75c0	                           jne 0x4006100	      2016	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_8
0x4006140	           0xfb606	                   movzx eax, byte [rsi]	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x4006143	            0x3c20	                            cmp al, 0x20	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x4006145	            0x7404	                            je 0x400614b	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x4006147	            0x3c09	                               cmp al, 9	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x4006149	            0x75ba	                           jne 0x4006105	      2017	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_9
0x400614b	          0x4889df	                            mov rdi, rbx	      2019	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_10
0x400614e	        0x48893424	                    mov qword [rsp], rsi	      2019	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_10
0x4006152	      0xe800000000	                          call 0x4006157	      2019	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_10
0x4006157	        0x488b3424	                    mov rsi, qword [rsp]	      2020	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_11
0x400615b	            0x89c5	                            mov ebp, eax	      2019	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_10
0x400615d	          0x4429ed	                           sub ebp, r13d	      2019	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_10
0x4006160	          0x4863dd	                         movsxd rbx, ebp	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x4006163	          0x4c01eb	                            add rbx, r13	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x4006166	          0x4889f7	                            mov rdi, rsi	      2020	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_11
0x4006169	      0xe800000000	                          call 0x400616e	      2020	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_11
0x400616e	           0xfb613	                   movzx edx, byte [rbx]	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x4006171	          0x4189c6	                           mov r14d, eax	      2020	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_11
0x4006174	          0x4529e6	                          sub r14d, r12d	      2020	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1	IF_7	CALL_11
0x4006177	            0x84d2	                             test dl, dl	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x4006179	            0x75b1	                           jne 0x400612c	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x400617b	       0xf1f440000	                   nop dword [rax + rax]	      2013	diff.c	FUNCTION_35	FOR_2	IF_5	WHILE_1
0x4006180	    0x8b0500000000	            mov eax, dword [0x04006186] 	      2032	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4006186	            0x85c0	                           test eax, eax	      2032	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4006188	     0xf85a2010000	                           jne 0x4006330	      2032	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x400618e	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2040	diff.c	FUNCTION_35	FOR_2	IF_5	IF_10
0x4006193	            0x8b10	                    mov edx, dword [rax]	      2040	diff.c	FUNCTION_35	FOR_2	IF_5	IF_10
0x4006195	            0x39d5	                            cmp ebp, edx	      2040	diff.c	FUNCTION_35	FOR_2	IF_5	IF_10
0x4006197	            0x7d04	                           jge 0x400619d	      2040	diff.c	FUNCTION_35	FOR_2	IF_5	IF_10
0x4006199	            0x8928	                    mov dword [rax], ebp	      2041	diff.c	FUNCTION_35	FOR_2	IF_5	IF_10
0x400619b	            0x89ea	                            mov edx, ebp	      2041	diff.c	FUNCTION_35	FOR_2	IF_5	IF_10
0x400619d	          0x803b00	                       cmp byte [rbx], 0	      2044	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11
0x40061a0	            0x750e	                           jne 0x40061b0	      2044	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11
0x40061a2	          0x4963c6	                        movsxd rax, r14d	      2044	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11
0x40061a5	      0x41803c0400	                 cmp byte [r12 + rax], 0	      2044	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11
0x40061aa	     0xf84d9000000	                            je 0x4006289	      2044	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11
0x40061b0	          0x4c89ef	                            mov rdi, r13	      2046	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_13
0x40061b3	          0x891424	                    mov dword [rsp], edx	      2046	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_13
0x40061b6	      0xe800000000	                          call 0x40061bb	      2046	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_13
0x40061bb	          0x4c89e7	                            mov rdi, r12	      2047	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_14
0x40061be	          0x4189c7	                           mov r15d, eax	      2046	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_13
0x40061c1	      0xe800000000	                          call 0x40061c6	      2047	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_14
0x40061c6	          0x8b1424	                    mov edx, dword [rsp]	      2047	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_14
0x40061c9	          0x4d89e8	                             mov r8, r13	      2047	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_14
0x40061cc	            0x89c3	                            mov ebx, eax	      2047	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_14
0x40061ce	          0x4589f5	                          mov r13d, r14d	      2047	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	CALL_14
0x40061d1	          0x4139d7	                           cmp r15d, edx	      2048	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x40061d4	     0xf8c9f000000	                            jl 0x4006279	      2048	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x40061da	          0x4489f8	                           mov eax, r15d	      2049	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x40061dd	          0x4139dd	                           cmp r13d, ebx	      2049	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x40061e0	            0xf7d0	                                 not eax	      2049	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x40061e2	           0xf9ec1	                                setle cl	      2049	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x40061e5	          0xc1e81f	                           shr eax, 0x1f	      2049	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x40061e8	            0x84c1	                             test cl, al	      2049	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x40061ea	     0xf8489000000	                            je 0x4006279	      2049	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x40061f0	            0x85db	                           test ebx, ebx	      2049	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x40061f2	     0xf8881000000	                            js 0x4006279	      2049	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x40061f8	    0xf60500000000	               test byte [0x040061ff], 4	      2051	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12
0x40061ff	     0xf8403010000	                            je 0x4006308	      2051	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12
0x4006205	          0x4963cf	                        movsxd rcx, r15d	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x4006208	        0x4d8d3408	                     lea r14, [r8 + rcx]	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x400620c	        0x410fb606	                   movzx eax, byte [r14]	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x4006210	            0x3c20	                            cmp al, 0x20	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x4006212	     0xf8480000000	                            je 0x4006298	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x4006218	            0x3c09	                               cmp al, 9	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x400621a	            0x747c	                            je 0x4006298	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x400621c	          0x4863eb	                         movsxd rbp, ebx	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x400621f	          0x4c01e5	                            add rbp, r12	      2052	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_15
0x4006222	          0x4c89c7	                             mov rdi, r8	      2067	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4006225	        0x4c890424	                     mov qword [rsp], r8	      2067	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4006229	          0x4c89f6	                            mov rsi, r14	      2067	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x400622c	    0xff1500000000	                 call qword [0x04006232]	      2067	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4006232	            0x4898	                                    cdqe	      2067	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4006234	          0x4889ee	                            mov rsi, rbp	      2068	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4006237	          0x4c89e7	                            mov rdi, r12	      2068	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x400623a	          0x4929c6	                            sub r14, rax	      2067	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x400623d	    0xff1500000000	                 call qword [0x04006243]	      2068	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4006243	          0x4889ee	                            mov rsi, rbp	      2070	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2	IF_13	CALL_19
0x4006246	            0x4898	                                    cdqe	      2070	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2	IF_13	CALL_19
0x4006248	      0x488d542434	                   lea rdx, [rsp + 0x34]	      2070	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2	IF_13	CALL_19
0x400624d	          0x4829c6	                            sub rsi, rax	      2070	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2	IF_13	CALL_19
0x4006250	          0x4c89f7	                            mov rdi, r14	      2070	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2	IF_13	CALL_19
0x4006253	      0xe8e89dffff	                call sym.diff_equal_char	      2070	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2	IF_13	CALL_19
0x4006258	            0x85c0	                           test eax, eax	      2070	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2	IF_13	CALL_19
0x400625a	        0x4c8b0424	                     mov r8, qword [rsp]	      2070	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2	IF_13	CALL_19
0x400625e	            0x7419	                            je 0x4006279	      2070	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2	IF_13	CALL_19
0x4006260	        0x8b442434	            mov eax, dword [rsp + 0x34] 	      2072	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4006264	          0x4129c7	                           sub r15d, eax	      2072	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4006267	            0x29c3	                            sub ebx, eax	      2073	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4006269	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2073	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x400626e	            0x8b10	                    mov edx, dword [rax]	      2073	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	ELSE_2
0x4006270	          0x4139d7	                           cmp r15d, edx	      2048	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x4006273	     0xf8d61ffffff	                           jge 0x40061da	      2048	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2
0x4006279	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      2076	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	IF_14
0x400627e	          0x4d89c5	                             mov r13, r8	      2076	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	IF_14
0x4006281	          0x443b38	                   cmp r15d, dword [rax]	      2076	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	IF_14
0x4006284	            0x7e03	                           jle 0x4006289	      2076	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	IF_14
0x4006286	          0x448938	                   mov dword [rax], r15d	      2077	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	IF_14
0x4006289	          0x4531e4	                          xor r12d, r12d	      2007	diff.c	FUNCTION_35	FOR_2	IF_5
0x400628c	      0xe90ffeffff	                           jmp 0x40060a0	      2007	diff.c	FUNCTION_35	FOR_2	IF_5
0x4006291	     0xf1f80000000	                         nop dword [rax]	      2007	diff.c	FUNCTION_35	FOR_2	IF_5
0x4006298	          0x4863f3	                         movsxd rsi, ebx	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x400629b	        0x498d2c34	                    lea rbp, [r12 + rsi]	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x400629f	         0xfb64500	                   movzx eax, byte [rbp]	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x40062a3	            0x3c20	                            cmp al, 0x20	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x40062a5	            0x7408	                            je 0x40062af	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x40062a7	            0x3c09	                               cmp al, 9	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x40062a9	     0xf8573ffffff	                           jne 0x4006222	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x40062af	      0x498d4408ff	                 lea rax, [r8 + rcx - 1]	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x40062b4	         0xf1f4000	                         nop dword [rax]	      2053	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	CALL_16
0x40062b8	        0x4183ef01	                             sub r15d, 1	      2057	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3
0x40062bc	          0x4139d7	                           cmp r15d, edx	      2055	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3
0x40062bf	            0x7c11	                            jl 0x40062d2	      2055	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3
0x40062c1	           0xfb608	                   movzx ecx, byte [rax]	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x40062c4	        0x4883e801	                              sub rax, 1	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x40062c8	          0x80f920	                            cmp cl, 0x20	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x40062cb	            0x74eb	                            je 0x40062b8	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x40062cd	          0x80f909	                               cmp cl, 9	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x40062d0	            0x74e6	                            je 0x40062b8	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x40062d2	      0x498d4434ff	                lea rax, [r12 + rsi - 1]	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x40062d7	    0x660f1f840000	                    nop word [rax + rax]	      2056	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_3	CALL_17
0x40062e0	          0x83eb01	                              sub ebx, 1	      2060	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4
0x40062e3	          0x4139dd	                           cmp r13d, ebx	      2058	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4
0x40062e6	     0xf8fe5feffff	                            jg 0x40061d1	      2058	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4
0x40062ec	           0xfb608	                   movzx ecx, byte [rax]	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x40062ef	        0x4883e801	                              sub rax, 1	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x40062f3	          0x80f920	                            cmp cl, 0x20	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x40062f6	            0x74e8	                            je 0x40062e0	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x40062f8	          0x80f909	                               cmp cl, 9	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x40062fb	            0x74e3	                            je 0x40062e0	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x40062fd	      0xe9cffeffff	                           jmp 0x40061d1	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x4006302	    0x660f1f440000	                    nop word [rax + rax]	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x4006308	          0x4d63f7	                        movsxd r14, r15d	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x400630b	          0x4d01c6	                             add r14, r8	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x400630e	      0xe909ffffff	                           jmp 0x400621c	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x4006313	       0xf1f440000	                   nop dword [rax + rax]	      2059	diff.c	FUNCTION_35	FOR_2	IF_5	IF_11	WHILE_2	IF_12	WHILE_4	CALL_18
0x4006318	          0x4c89ef	                            mov rdi, r13	      2081	diff.c	FUNCTION_35	CALL_20
0x400631b	      0xe800000000	                          call 0x4006320	      2081	diff.c	FUNCTION_35	CALL_20
0x4006320	          0x4489e0	                           mov eax, r12d	      2082	diff.c	FUNCTION_35
0x4006323	      0xe9e9fbffff	                           jmp 0x4005f11	      2082	diff.c	FUNCTION_35
0x4006328	     0xf1f84000000	                   nop dword [rax + rax]	      2082	diff.c	FUNCTION_35
0x4006330	          0x4889de	                            mov rsi, rbx	      2036	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4006333	          0x4c89ef	                            mov rdi, r13	      2036	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4006336	    0xff1500000000	                 call qword [0x0400633c]	      2036	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x400633c	            0x29c5	                            sub ebp, eax	      2036	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x400633e	          0x4963f6	                        movsxd rsi, r14d	      2037	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4006341	          0x4c89e7	                            mov rdi, r12	      2037	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4006344	          0x4863dd	                         movsxd rbx, ebp	      2037	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4006347	          0x4c01e6	                            add rsi, r12	      2037	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x400634a	          0x4c01eb	                            add rbx, r13	      2037	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x400634d	    0xff1500000000	                 call qword [0x04006353]	      2037	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4006353	          0x4129c6	                           sub r14d, eax	      2037	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x4006356	      0xe933feffff	                           jmp 0x400618e	      2037	diff.c	FUNCTION_35	FOR_2	IF_5	IF_9
0x400635b	    0xc744241c0100	               mov dword [rsp + 0x1c], 1	       168	diff.c	FUNCTION_5	FOR_1
0x4006363	      0xe9d8fbffff	                           jmp 0x4005f40	       168	diff.c	FUNCTION_5	FOR_1
0x4006368	    0xc744241c0200	               mov dword [rsp + 0x1c], 2	       168	diff.c	FUNCTION_5	FOR_1
0x4006370	      0xe9cbfbffff	                           jmp 0x4005f40	       168	diff.c	FUNCTION_5	FOR_1
0x4006375	    0xc744241c0300	               mov dword [rsp + 0x1c], 3	       168	diff.c	FUNCTION_5	FOR_1
0x400637d	      0xe9befbffff	                           jmp 0x4005f40	       168	diff.c	FUNCTION_5	FOR_1
0x4006382	    0xc744241c0400	               mov dword [rsp + 0x1c], 4	       168	diff.c	FUNCTION_5	FOR_1
0x400638a	      0xe9b1fbffff	                           jmp 0x4005f40	       168	diff.c	FUNCTION_5	FOR_1
0x400638f	    0xc744241c0500	               mov dword [rsp + 0x1c], 5	       168	diff.c	FUNCTION_5	FOR_1
0x4006397	      0xe9a4fbffff	                           jmp 0x4005f40	       168	diff.c	FUNCTION_5	FOR_1
0x400639c	    0xc744241c0600	               mov dword [rsp + 0x1c], 6	       168	diff.c	FUNCTION_5	FOR_1
0x40063a4	      0xe997fbffff	                           jmp 0x4005f40	       168	diff.c	FUNCTION_5	FOR_1
0x40063a9	    0xc744241c0700	               mov dword [rsp + 0x1c], 7	       168	diff.c	FUNCTION_5	FOR_1
0x40063b1	      0xe98afbffff	                           jmp 0x4005f40	       168	diff.c	FUNCTION_5	FOR_1
0x40063b6	      0xe800000000	                          call 0x40063bb	      2083	diff.c	FUNCTION_35
diff_mode_buf	IF,1:CALL,2:functions,0:FOR,0:SWITCH,0:ELSE,0:DO,0:WHILE,0	30
0x4007c20	    0x488b05000000	            mov rax, qword [0x04007c27] 	      2509	diff.c	FUNCTION_40	CALL_1
0x4007c27	          0x4885c0	                           test rax, rax	      2509	diff.c	FUNCTION_40	CALL_1
0x4007c2a	            0x7542	                           jne 0x4007c6e	      2509	diff.c	FUNCTION_40	CALL_1
0x4007c2c	            0xeb54	                           jmp 0x4007c82	      2509	diff.c	FUNCTION_40	CALL_1
0x4007c2e	            0x6690	                                     nop	      2509	diff.c	FUNCTION_40	CALL_1
0x4007c30	        0x483b7868	            cmp rdi, qword [rax + 0x68] 	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4007c34	            0x743e	                            je 0x4007c74	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4007c36	        0x483b7870	            cmp rdi, qword [rax + 0x70] 	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4007c3a	            0x7438	                            je 0x4007c74	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4007c3c	        0x483b7878	            cmp rdi, qword [rax + 0x78] 	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4007c40	            0x7432	                            je 0x4007c74	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4007c42	    0x483bb8800000	            cmp rdi, qword [rax + 0x80] 	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4007c49	            0x7429	                            je 0x4007c74	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4007c4b	    0x483bb8880000	            cmp rdi, qword [rax + 0x88] 	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4007c52	            0x7420	                            je 0x4007c74	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4007c54	    0x483bb8900000	            cmp rdi, qword [rax + 0x90] 	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4007c5b	            0x7417	                            je 0x4007c74	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4007c5d	    0x483bb8980000	            cmp rdi, qword [rax + 0x98] 	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4007c64	            0x740e	                            je 0x4007c74	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4007c66	          0x488b00	                    mov rax, qword [rax]	      2509	diff.c	FUNCTION_40	CALL_1
0x4007c69	          0x4885c0	                           test rax, rax	      2509	diff.c	FUNCTION_40	CALL_1
0x4007c6c	            0x7412	                            je 0x4007c80	      2509	diff.c	FUNCTION_40	CALL_1
0x4007c6e	        0x483b7860	            cmp rdi, qword [rax + 0x60] 	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4007c72	            0x75bc	                           jne 0x4007c30	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4007c74	      0xb801000000	                              mov eax, 1	      2511	diff.c	FUNCTION_40	IF_1
0x4007c79	              0xc3	                                     ret	      2511	diff.c	FUNCTION_40	IF_1
0x4007c7a	    0x660f1f440000	                    nop word [rax + rax]	      2511	diff.c	FUNCTION_40	IF_1
0x4007c80	            0xf3c3	                                     ret	      2513	diff.c	FUNCTION_40
0x4007c82	            0x31c0	                            xor eax, eax	      2512	diff.c	FUNCTION_40
0x4007c84	              0xc3	                                     ret	      2512	diff.c	FUNCTION_40
ex_diffoff	IF,2:CALL,3:functions,1:FOR,0:SWITCH,0:ELSE,0:DO,0:WHILE,0	279
0x40045f0	            0x4157	                                push r15	      1217	diff.c	FUNCTION_22
0x40045f2	            0x4156	                                push r14	      1217	diff.c	FUNCTION_22
0x40045f4	            0x4155	                                push r13	      1217	diff.c	FUNCTION_22
0x40045f6	            0x4154	                                push r12	      1217	diff.c	FUNCTION_22
0x40045f8	          0x4989fc	                            mov r12, rdi	      1217	diff.c	FUNCTION_22
0x40045fb	              0x55	                                push rbp	      1217	diff.c	FUNCTION_22
0x40045fc	              0x53	                                push rbx	      1217	diff.c	FUNCTION_22
0x40045fd	        0x4883ec08	                              sub rsp, 8	      1217	diff.c	FUNCTION_22
0x4004601	    0x488b1d000000	            mov rbx, qword [0x04004608] 	      1221	diff.c	FUNCTION_22
0x4004608	          0x4885db	                           test rbx, rbx	      1221	diff.c	FUNCTION_22
0x400460b	     0xf8482030000	                            je 0x4004993	      1221	diff.c	FUNCTION_22
0x4004611	          0x8b5734	            mov edx, dword [rdi + 0x34] 	      1221	diff.c	FUNCTION_22
0x4004614	            0x31ed	                            xor ebp, ebp	      1221	diff.c	FUNCTION_22
0x4004616	    0x41bd00000000	                             mov r13d, 0	      1241	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_3
0x400461c	            0xeb28	                           jmp 0x4004646	      1241	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_3
0x400461e	            0x6690	                                     nop	      1241	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_3
0x4004620	    0x448bb3c00100	          mov r14d, dword [rbx + 0x1c0] 	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x4004627	          0x4585f6	                         test r14d, r14d	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x400462a	           0xf95c0	                                setne al	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x400462d	            0x84c0	                             test al, al	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x400462f	            0x7527	                           jne 0x4004658	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x4004631	    0x8b8bc0010000	           mov ecx, dword [rbx + 0x1c0] 	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x4004637	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      1221	diff.c	FUNCTION_22
0x400463b	             0x9cd	                             or ebp, ecx	      1268	diff.c	FUNCTION_22	FUNCTION_1
0x400463d	          0x4885db	                           test rbx, rbx	      1221	diff.c	FUNCTION_22
0x4004640	     0xf848a010000	                            je 0x40047d0	      1221	diff.c	FUNCTION_22
0x4004646	            0x85d2	                           test edx, edx	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x4004648	            0x75d6	                           jne 0x4004620	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x400464a	    0x48391d000000	            cmp qword [0x04004651], rbx 	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x4004651	           0xf94c0	                                 sete al	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x4004654	            0x84c0	                             test al, al	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x4004656	            0x74d9	                            je 0x4004631	      1223	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x4004658	        0x488b4308	                mov rax, qword [rbx + 8]	      1138	diff.c	FUNCTION_20
0x400465c	    0x4c8b35000000	            mov r14, qword [0x04004663] 	      1135	diff.c	FUNCTION_20
0x4004663	            0x31d2	                            xor edx, edx	      1140	diff.c	FUNCTION_20	CALL_1
0x4004665	            0x31f6	                            xor esi, esi	      1140	diff.c	FUNCTION_20	CALL_1
0x4004667	      0xb904000000	                              mov ecx, 4	      1140	diff.c	FUNCTION_20	CALL_1
0x400466c	      0xbf00000000	                              mov edi, 0	      1140	diff.c	FUNCTION_20	CALL_1
0x4004671	    0x830500000000	               add dword [0x04004678], 1	      1139	diff.c	FUNCTION_20
0x4004678	    0x48891d000000	            mov qword [0x0400467f], rbx 	      1137	diff.c	FUNCTION_20
0x400467f	    0x488905000000	            mov qword [0x04004686], rax 	      1138	diff.c	FUNCTION_20
0x4004686	      0xe800000000	                          call 0x400468b	      1140	diff.c	FUNCTION_20	CALL_1
0x400468b	    0x448b9b8c0200	          mov r11d, dword [rbx + 0x28c] 	      1230	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2
0x4004692	        0x498b4608	                mov rax, qword [r14 + 8]	      1143	diff.c	FUNCTION_20
0x4004696	    0x832d00000000	               sub dword [0x0400469d], 1	      1141	diff.c	FUNCTION_20
0x400469d	    0x4c8935000000	            mov qword [0x040046a4], r14 	      1142	diff.c	FUNCTION_20
0x40046a4	          0x4585db	                         test r11d, r11d	      1230	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2
0x40046a7	    0x488905000000	            mov qword [0x040046ae], rax 	      1143	diff.c	FUNCTION_20
0x40046ae	     0xf84b0000000	                            je 0x4004764	      1230	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2
0x40046b4	    0x448b93880200	          mov r10d, dword [rbx + 0x288] 	      1233	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_3
0x40046bb	          0x4585d2	                         test r10d, r10d	      1233	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_3
0x40046be	            0x740c	                            je 0x40046cc	      1233	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_3
0x40046c0	    0x8b8390020000	           mov eax, dword [rbx + 0x290] 	      1234	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_3
0x40046c6	    0x898388020000	            mov dword [rbx + 0x288], eax	      1234	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_3
0x40046cc	    0x448b8bb00200	           mov r9d, dword [rbx + 0x2b0] 	      1235	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_4
0x40046d3	          0x4585c9	                           test r9d, r9d	      1235	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_4
0x40046d6	            0x740c	                            je 0x40046e4	      1235	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_4
0x40046d8	    0x8b83b4020000	           mov eax, dword [rbx + 0x2b4] 	      1236	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_4
0x40046de	    0x8983b0020000	            mov dword [rbx + 0x2b0], eax	      1236	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_4
0x40046e4	    0x448b83940200	           mov r8d, dword [rbx + 0x294] 	      1237	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_5
0x40046eb	          0x4585c0	                           test r8d, r8d	      1237	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_5
0x40046ee	            0x750c	                           jne 0x40046fc	      1237	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_5
0x40046f0	    0x8b8398020000	           mov eax, dword [rbx + 0x298] 	      1238	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_5
0x40046f6	    0x898394020000	            mov dword [rbx + 0x294], eax	      1238	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_5
0x40046fc	    0x488bbbf80100	           mov rdi, qword [rbx + 0x1f8] 	      1240	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_2
0x4004703	      0xe800000000	                          call 0x4004708	      1240	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_2
0x4004708	    0x488bbb000200	           mov rdi, qword [rbx + 0x200] 	      1242	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2
0x400470f	          0x803f00	                       cmp byte [rdi], 0	      1241	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_3
0x4004712	        0x490f44fd	                          cmove rdi, r13	      1241	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_3
0x4004716	      0xe800000000	                          call 0x400471b	      1241	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_3
0x400471b	    0x488983f80100	            mov qword [rbx + 0x1f8], rax	      1241	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_3
0x4004722	    0x486305000000	         movsxd rax, dword [0x04004729] 	      1244	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_6
0x4004729	    0x483983c80100	           cmp qword [rbx + 0x1c8], rax 	      1244	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_6
0x4004730	     0xf844a020000	                            je 0x4004980	      1244	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_6
0x4004736	    0x4883bbe80100	              cmp qword [rbx + 0x1e8], 0	      1246	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_7
0x400473e	            0x750e	                           jne 0x400474e	      1246	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_7
0x4004740	    0x486383f00100	        movsxd rax, dword [rbx + 0x1f0] 	      1247	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_7
0x4004747	    0x488983e80100	            mov qword [rbx + 0x1e8], rax	      1247	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_7
0x400474e	    0x8bbbd4010000	           mov edi, dword [rbx + 0x1d4] 	      1251	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8
0x4004754	            0x85ff	                           test edi, edi	      1251	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8
0x4004756	     0xf8504020000	                           jne 0x4004960	      1251	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8
0x400475c	          0x4889df	                            mov rdi, rbx	      1255	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_5
0x400475f	      0xe800000000	                          call 0x4004764	      1255	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	CALL_5
0x4004764	    0xc78384000000	               mov dword [rbx + 0x84], 0	      1259	diff.c	FUNCTION_22	FUNCTION_1	IF_1
0x400476e	          0x4889df	                            mov rdi, rbx	      1263	diff.c	FUNCTION_22	FUNCTION_1	IF_1	CALL_6
0x4004771	      0xe800000000	                          call 0x4004776	      1263	diff.c	FUNCTION_22	FUNCTION_1	IF_1	CALL_6
0x4004776	    0x8b8bc0010000	           mov ecx, dword [rbx + 0x1c0] 	        92	diff.c	FUNCTION_2	IF_1
0x400477c	            0x85c9	                           test ecx, ecx	        92	diff.c	FUNCTION_2	IF_1
0x400477e	     0xf85dc000000	                           jne 0x4004860	        92	diff.c	FUNCTION_2	IF_1
0x4004784	    0x488b05000000	            mov rax, qword [0x0400478b] 	        96	diff.c	FUNCTION_2	IF_1	CALL_1
0x400478b	        0x488b5308	                mov rdx, qword [rbx + 8]	        96	diff.c	FUNCTION_2	IF_1	CALL_1
0x400478f	          0x4885c0	                           test rax, rax	        96	diff.c	FUNCTION_2	IF_1	CALL_1
0x4004792	            0x7515	                           jne 0x40047a9	        96	diff.c	FUNCTION_2	IF_1	CALL_1
0x4004794	            0xeb5a	                           jmp 0x40047f0	        96	diff.c	FUNCTION_2	IF_1	CALL_1
0x4004796	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        96	diff.c	FUNCTION_2	IF_1	CALL_1
0x40047a0	        0x488b4020	            mov rax, qword [rax + 0x20] 	        96	diff.c	FUNCTION_2	IF_1	CALL_1
0x40047a4	          0x4885c0	                           test rax, rax	        96	diff.c	FUNCTION_2	IF_1	CALL_1
0x40047a7	            0x7447	                            je 0x40047f0	        96	diff.c	FUNCTION_2	IF_1	CALL_1
0x40047a9	        0x48395008	                cmp qword [rax + 8], rdx	        97	diff.c	FUNCTION_2	IF_1	IF_2
0x40047ad	            0x75f1	                           jne 0x40047a0	        97	diff.c	FUNCTION_2	IF_1	IF_2
0x40047af	    0x8bb0c0010000	           mov esi, dword [rax + 0x1c0] 	        97	diff.c	FUNCTION_2	IF_1	IF_2
0x40047b5	            0x85f6	                           test esi, esi	        97	diff.c	FUNCTION_2	IF_1	IF_2
0x40047b7	            0x74e7	                            je 0x40047a0	        97	diff.c	FUNCTION_2	IF_1	IF_2
0x40047b9	      0x418b542434	            mov edx, dword [r12 + 0x34] 	        97	diff.c	FUNCTION_2	IF_1	IF_2
0x40047be	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      1221	diff.c	FUNCTION_22
0x40047c2	             0x9cd	                             or ebp, ecx	      1268	diff.c	FUNCTION_22	FUNCTION_1
0x40047c4	          0x4885db	                           test rbx, rbx	      1221	diff.c	FUNCTION_22
0x40047c7	     0xf8579feffff	                           jne 0x4004646	      1221	diff.c	FUNCTION_22
0x40047cd	           0xf1f00	                         nop dword [rax]	      1221	diff.c	FUNCTION_22
0x40047d0	            0x85d2	                           test edx, edx	      1272	diff.c	FUNCTION_22	IF_1
0x40047d2	     0xf85fc010000	                           jne 0x40049d4	      1272	diff.c	FUNCTION_22	IF_1
0x40047d8	            0x85ed	                           test ebp, ebp	      1276	diff.c	FUNCTION_22	IF_2	CALL_2
0x40047da	     0xf84c0010000	                            je 0x40049a0	      1276	diff.c	FUNCTION_22	IF_2	CALL_2
0x40047e0	        0x4883c408	                              add rsp, 8	      1278	diff.c	FUNCTION_22
0x40047e4	              0x5b	                                 pop rbx	      1278	diff.c	FUNCTION_22
0x40047e5	              0x5d	                                 pop rbp	      1278	diff.c	FUNCTION_22
0x40047e6	            0x415c	                                 pop r12	      1278	diff.c	FUNCTION_22
0x40047e8	            0x415d	                                 pop r13	      1278	diff.c	FUNCTION_22
0x40047ea	            0x415e	                                 pop r14	      1278	diff.c	FUNCTION_22
0x40047ec	            0x415f	                                 pop r15	      1278	diff.c	FUNCTION_22
0x40047ee	              0xc3	                                     ret	      1278	diff.c	FUNCTION_22
0x40047ef	              0x90	                                     nop	      1278	diff.c	FUNCTION_22
0x40047f0	    0x488b05000000	            mov rax, qword [0x040047f7] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40047f7	        0x48395060	            cmp qword [rax + 0x60], rdx 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40047fb	     0xf8441020000	                            je 0x4004a42	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4004801	        0x48395068	            cmp qword [rax + 0x68], rdx 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4004805	     0xf8461020000	                            je 0x4004a6c	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x400480b	        0x48395070	            cmp qword [rax + 0x70], rdx 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x400480f	     0xf8469020000	                            je 0x4004a7e	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4004815	        0x48395078	            cmp qword [rax + 0x78], rdx 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4004819	     0xf846d020000	                            je 0x4004a8c	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x400481f	    0x483990800000	            cmp qword [rax + 0x80], rdx 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4004826	     0xf846e020000	                            je 0x4004a9a	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x400482c	    0x483990880000	            cmp qword [rax + 0x88], rdx 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4004833	     0xf844c020000	                            je 0x4004a85	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4004839	    0x483990900000	            cmp qword [rax + 0x90], rdx 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4004840	     0xf844d020000	                            je 0x4004a93	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4004846	    0x483990980000	            cmp qword [rax + 0x98], rdx 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x400484d	     0xf8566ffffff	                           jne 0x40047b9	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4004853	      0xba07000000	                              mov edx, 7	       168	diff.c	FUNCTION_5	FOR_1
0x4004858	      0xe9e7010000	                           jmp 0x4004a44	       168	diff.c	FUNCTION_5	FOR_1
0x400485d	           0xf1f00	                         nop dword [rax]	       168	diff.c	FUNCTION_5	FOR_1
0x4004860	    0x488b05000000	            mov rax, qword [0x04004867] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4004867	        0x488b5308	                mov rdx, qword [rbx + 8]	       111	diff.c	FUNCTION_2	CALL_4
0x400486b	        0x488b7060	            mov rsi, qword [rax + 0x60] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x400486f	          0x4839f2	                            cmp rdx, rsi	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4004872	     0xf8441ffffff	                            je 0x40047b9	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4004878	        0x488b7868	            mov rdi, qword [rax + 0x68] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x400487c	          0x4839fa	                            cmp rdx, rdi	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x400487f	     0xf8434ffffff	                            je 0x40047b9	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4004885	        0x4c8b4070	              mov r8, qword [rax + 0x70]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4004889	          0x4c39c2	                             cmp rdx, r8	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x400488c	     0xf8427ffffff	                            je 0x40047b9	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4004892	        0x4c8b4878	              mov r9, qword [rax + 0x78]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4004896	          0x4c39ca	                             cmp rdx, r9	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4004899	     0xf841affffff	                            je 0x40047b9	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x400489f	    0x4c8b90800000	            mov r10, qword [rax + 0x80] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40048a6	          0x4c39d2	                            cmp rdx, r10	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40048a9	     0xf840affffff	                            je 0x40047b9	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40048af	    0x4c8b98880000	            mov r11, qword [rax + 0x88] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40048b6	          0x4c39da	                            cmp rdx, r11	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40048b9	     0xf84fafeffff	                            je 0x40047b9	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40048bf	    0x4c8bb0900000	            mov r14, qword [rax + 0x90] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40048c6	          0x4c39f2	                            cmp rdx, r14	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40048c9	     0xf84eafeffff	                            je 0x40047b9	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40048cf	    0x4c8bb8980000	            mov r15, qword [rax + 0x98] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40048d6	          0x4c39fa	                            cmp rdx, r15	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40048d9	     0xf84dafeffff	                            je 0x40047b9	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40048df	          0x4885f6	                           test rsi, rsi	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x40048e2	     0xf8492010000	                            je 0x4004a7a	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x40048e8	          0x4885ff	                           test rdi, rdi	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x40048eb	     0xf8482010000	                            je 0x4004a73	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x40048f1	          0x4d85c0	                             test r8, r8	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x40048f4	     0xf84bb010000	                            je 0x4004ab5	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x40048fa	          0x4d85c9	                             test r9, r9	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x40048fd	     0xf8416010000	                            je 0x4004a19	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x4004903	          0x4d85d2	                           test r10, r10	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x4004906	     0xf8495010000	                            je 0x4004aa1	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x400490c	          0x4d85db	                           test r11, r11	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x400490f	     0xf8496010000	                            je 0x4004aab	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x4004915	          0x4d85f6	                           test r14, r14	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x4004918	     0xf84a1010000	                            je 0x4004abf	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x400491e	          0x4d85ff	                           test r15, r15	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x4004921	      0xb907000000	                              mov ecx, 7	       130	diff.c	FUNCTION_3	FOR_1
0x4004926	     0xf84f2000000	                            je 0x4004a1e	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x400492c	      0xba05000000	                              mov edx, 5	       139	diff.c	FUNCTION_3	CALL_4
0x4004931	      0xbe00000000	                              mov esi, 0	       139	diff.c	FUNCTION_3	CALL_4
0x4004936	            0x31ff	                            xor edi, edi	       139	diff.c	FUNCTION_3	CALL_4
0x4004938	      0xe800000000	                          call 0x400493d	       139	diff.c	FUNCTION_3	CALL_4
0x400493d	      0xbe08000000	                              mov esi, 8	       139	diff.c	FUNCTION_3	CALL_4
0x4004942	          0x4889c7	                            mov rdi, rax	       139	diff.c	FUNCTION_3	CALL_4
0x4004945	      0xe800000000	                          call 0x400494a	       139	diff.c	FUNCTION_3	CALL_4
0x400494a	    0x8b8bc0010000	           mov ecx, dword [rbx + 0x1c0] 	       139	diff.c	FUNCTION_3	CALL_4
0x4004950	      0x418b542434	            mov edx, dword [r12 + 0x34] 	       139	diff.c	FUNCTION_3	CALL_4
0x4004955	      0xe964feffff	                           jmp 0x40047be	       139	diff.c	FUNCTION_3	CALL_4
0x400495a	    0x660f1f440000	                    nop word [rax + rax]	       139	diff.c	FUNCTION_3	CALL_4
0x4004960	          0x4889df	                            mov rdi, rbx	      1252	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8	CALL_4
0x4004963	      0xe800000000	                          call 0x4004968	      1252	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8	CALL_4
0x4004968	            0x31d2	                            xor edx, edx	      1253	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8
0x400496a	            0x85c0	                           test eax, eax	      1253	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8
0x400496c	            0x7506	                           jne 0x4004974	      1253	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8
0x400496e	    0x8b93d8010000	           mov edx, dword [rbx + 0x1d8] 	      1253	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8
0x4004974	    0x8993d4010000	            mov dword [rbx + 0x1d4], edx	      1252	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8	CALL_4
0x400497a	      0xe9ddfdffff	                           jmp 0x400475c	      1252	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8	CALL_4
0x400497f	              0x90	                                     nop	      1252	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_8	CALL_4
0x4004980	    0x486383d00100	        movsxd rax, dword [rbx + 0x1d0] 	      1245	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_6
0x4004987	    0x488983c80100	            mov qword [rbx + 0x1c8], rax	      1245	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_6
0x400498e	      0xe9a3fdffff	                           jmp 0x4004736	      1245	diff.c	FUNCTION_22	FUNCTION_1	IF_1	IF_2	IF_6
0x4004993	          0x8b4734	            mov eax, dword [rdi + 0x34] 	      1272	diff.c	FUNCTION_22	IF_1
0x4004996	            0x85c0	                           test eax, eax	      1272	diff.c	FUNCTION_22	IF_1
0x4004998	            0x7538	                           jne 0x40049d2	      1272	diff.c	FUNCTION_22	IF_1
0x400499a	    0x660f1f440000	                    nop word [rax + rax]	      1272	diff.c	FUNCTION_22	IF_1
0x40049a0	    0x488b3d000000	            mov rdi, qword [0x040049a7] 	      1276	diff.c	FUNCTION_22	IF_2	CALL_2
0x40049a7	      0xbe68000000	                           mov esi, 0x68	      1276	diff.c	FUNCTION_22	IF_2	CALL_2
0x40049ac	      0xe800000000	                          call 0x40049b1	      1276	diff.c	FUNCTION_22	IF_2	CALL_2
0x40049b1	          0x4885c0	                           test rax, rax	      1276	diff.c	FUNCTION_22	IF_2	CALL_2
0x40049b4	     0xf8426feffff	                            je 0x40047e0	      1276	diff.c	FUNCTION_22	IF_2	CALL_2
0x40049ba	        0x4883c408	                              add rsp, 8	      1278	diff.c	FUNCTION_22
0x40049be	      0xbf00000000	                              mov edi, 0	      1277	diff.c	FUNCTION_22	CALL_3
0x40049c3	              0x5b	                                 pop rbx	      1278	diff.c	FUNCTION_22
0x40049c4	              0x5d	                                 pop rbp	      1278	diff.c	FUNCTION_22
0x40049c5	            0x415c	                                 pop r12	      1278	diff.c	FUNCTION_22
0x40049c7	            0x415d	                                 pop r13	      1278	diff.c	FUNCTION_22
0x40049c9	            0x415e	                                 pop r14	      1278	diff.c	FUNCTION_22
0x40049cb	            0x415f	                                 pop r15	      1278	diff.c	FUNCTION_22
0x40049cd	      0xe900000000	                           jmp 0x40049d2	      1277	diff.c	FUNCTION_22	CALL_3
0x40049d2	            0x31ed	                            xor ebp, ebp	      1219	diff.c	FUNCTION_22
0x40049d4	            0x31db	                            xor ebx, ebx	      1219	diff.c	FUNCTION_22
0x40049d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1219	diff.c	FUNCTION_22
0x40049e0	    0x488b05000000	            mov rax, qword [0x040049e7] 	       151	diff.c	FUNCTION_4	FOR_1	IF_1
0x40049e7	          0x4863d3	                         movsxd rdx, ebx	       151	diff.c	FUNCTION_4	FOR_1	IF_1
0x40049ea	        0x488d14d0	                  lea rdx, [rax + rdx*8]	       151	diff.c	FUNCTION_4	FOR_1	IF_1
0x40049ee	      0x48837a6000	               cmp qword [rdx + 0x60], 0	       151	diff.c	FUNCTION_4	FOR_1	IF_1
0x40049f3	            0x7417	                            je 0x4004a0c	       151	diff.c	FUNCTION_4	FOR_1	IF_1
0x40049f5	    0x48c742600000	               mov qword [rdx + 0x60], 0	       153	diff.c	FUNCTION_4	FOR_1	IF_1
0x40049fd	    0xc780a0000000	               mov dword [rax + 0xa0], 1	       154	diff.c	FUNCTION_4	FOR_1	IF_1
0x4004a07	      0xe844ceffff	        call sym.diff_redraw.constprop.6	       155	diff.c	FUNCTION_4	FOR_1	IF_1	CALL_1
0x4004a0c	          0x83c301	                              add ebx, 1	       150	diff.c	FUNCTION_4	FOR_1
0x4004a0f	          0x83fb08	                              cmp ebx, 8	       150	diff.c	FUNCTION_4	FOR_1
0x4004a12	            0x75cc	                           jne 0x40049e0	       150	diff.c	FUNCTION_4	FOR_1
0x4004a14	      0xe9bffdffff	                           jmp 0x40047d8	       150	diff.c	FUNCTION_4	FOR_1
0x4004a19	      0xb903000000	                              mov ecx, 3	       130	diff.c	FUNCTION_3	FOR_1
0x4004a1e	      0x488954c860	     mov qword [rax + rcx*8 + 0x60], rdx	       133	diff.c	FUNCTION_3	FOR_1	IF_2
0x4004a23	    0xc780a0000000	               mov dword [rax + 0xa0], 1	       134	diff.c	FUNCTION_3	FOR_1	IF_2
0x4004a2d	      0xe81eceffff	        call sym.diff_redraw.constprop.6	       135	diff.c	FUNCTION_3	FOR_1	IF_2	CALL_2
0x4004a32	    0x8b8bc0010000	           mov ecx, dword [rbx + 0x1c0] 	       135	diff.c	FUNCTION_3	FOR_1	IF_2	CALL_2
0x4004a38	      0x418b542434	            mov edx, dword [r12 + 0x34] 	       135	diff.c	FUNCTION_3	FOR_1	IF_2	CALL_2
0x4004a3d	      0xe9f5fbffff	                           jmp 0x4004637	       135	diff.c	FUNCTION_3	FOR_1	IF_2	CALL_2
0x4004a42	            0x31d2	                            xor edx, edx	       168	diff.c	FUNCTION_5	FOR_1
0x4004a44	    0x48c744d06000	       mov qword [rax + rdx*8 + 0x60], 0	       104	diff.c	FUNCTION_2	IF_1	IF_3	IF_4
0x4004a4d	    0xc780a0000000	               mov dword [rax + 0xa0], 1	       105	diff.c	FUNCTION_2	IF_1	IF_3	IF_4
0x4004a57	      0xe8f4cdffff	        call sym.diff_redraw.constprop.6	       106	diff.c	FUNCTION_2	IF_1	IF_3	IF_4	CALL_3
0x4004a5c	    0x8b8bc0010000	           mov ecx, dword [rbx + 0x1c0] 	       106	diff.c	FUNCTION_2	IF_1	IF_3	IF_4	CALL_3
0x4004a62	      0x418b542434	            mov edx, dword [r12 + 0x34] 	       106	diff.c	FUNCTION_2	IF_1	IF_3	IF_4	CALL_3
0x4004a67	      0xe9cbfbffff	                           jmp 0x4004637	       106	diff.c	FUNCTION_2	IF_1	IF_3	IF_4	CALL_3
0x4004a6c	      0xba01000000	                              mov edx, 1	       168	diff.c	FUNCTION_5	FOR_1
0x4004a71	            0xebd1	                           jmp 0x4004a44	       168	diff.c	FUNCTION_5	FOR_1
0x4004a73	      0xb901000000	                              mov ecx, 1	       130	diff.c	FUNCTION_3	FOR_1
0x4004a78	            0xeba4	                           jmp 0x4004a1e	       130	diff.c	FUNCTION_3	FOR_1
0x4004a7a	            0x31c9	                            xor ecx, ecx	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x4004a7c	            0xeba0	                           jmp 0x4004a1e	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x4004a7e	      0xba02000000	                              mov edx, 2	       168	diff.c	FUNCTION_5	FOR_1
0x4004a83	            0xebbf	                           jmp 0x4004a44	       168	diff.c	FUNCTION_5	FOR_1
0x4004a85	      0xba05000000	                              mov edx, 5	       168	diff.c	FUNCTION_5	FOR_1
0x4004a8a	            0xebb8	                           jmp 0x4004a44	       168	diff.c	FUNCTION_5	FOR_1
0x4004a8c	      0xba03000000	                              mov edx, 3	       168	diff.c	FUNCTION_5	FOR_1
0x4004a91	            0xebb1	                           jmp 0x4004a44	       168	diff.c	FUNCTION_5	FOR_1
0x4004a93	      0xba06000000	                              mov edx, 6	       168	diff.c	FUNCTION_5	FOR_1
0x4004a98	            0xebaa	                           jmp 0x4004a44	       168	diff.c	FUNCTION_5	FOR_1
0x4004a9a	      0xba04000000	                              mov edx, 4	       168	diff.c	FUNCTION_5	FOR_1
0x4004a9f	            0xeba3	                           jmp 0x4004a44	       168	diff.c	FUNCTION_5	FOR_1
0x4004aa1	      0xb904000000	                              mov ecx, 4	       130	diff.c	FUNCTION_3	FOR_1
0x4004aa6	      0xe973ffffff	                           jmp 0x4004a1e	       130	diff.c	FUNCTION_3	FOR_1
0x4004aab	      0xb905000000	                              mov ecx, 5	       130	diff.c	FUNCTION_3	FOR_1
0x4004ab0	      0xe969ffffff	                           jmp 0x4004a1e	       130	diff.c	FUNCTION_3	FOR_1
0x4004ab5	      0xb902000000	                              mov ecx, 2	       130	diff.c	FUNCTION_3	FOR_1
0x4004aba	      0xe95fffffff	                           jmp 0x4004a1e	       130	diff.c	FUNCTION_3	FOR_1
0x4004abf	      0xb906000000	                              mov ecx, 6	       130	diff.c	FUNCTION_3	FOR_1
0x4004ac4	      0xe955ffffff	                           jmp 0x4004a1e	       130	diff.c	FUNCTION_3	FOR_1
diff_invalidate	IF,0:CALL,0:functions,1:FOR,0:SWITCH,0:ELSE,0:DO,0:WHILE,0	37
0x4002450	              0x55	                                push rbp	       195	diff.c	FUNCTION_7
0x4002451	              0x53	                                push rbx	       195	diff.c	FUNCTION_7
0x4002452	          0x4889fd	                            mov rbp, rdi	       195	diff.c	FUNCTION_7
0x4002455	        0x4883ec08	                              sub rsp, 8	       195	diff.c	FUNCTION_7
0x4002459	    0x488b1d000000	            mov rbx, qword [0x04002460] 	       199	diff.c	FUNCTION_7
0x4002460	          0x4885db	                           test rbx, rbx	       199	diff.c	FUNCTION_7
0x4002463	            0x7447	                            je 0x40024ac	       199	diff.c	FUNCTION_7
0x4002465	           0xf1f00	                         nop dword [rax]	       199	diff.c	FUNCTION_7
0x4002468	        0x483b6b60	            cmp rbp, qword [rbx + 0x60] 	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x400246c	            0x744a	                            je 0x40024b8	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x400246e	        0x483b6b68	            cmp rbp, qword [rbx + 0x68] 	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4002472	            0x7444	                            je 0x40024b8	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4002474	        0x483b6b70	            cmp rbp, qword [rbx + 0x70] 	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4002478	            0x743e	                            je 0x40024b8	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x400247a	        0x483b6b78	            cmp rbp, qword [rbx + 0x78] 	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x400247e	            0x7438	                            je 0x40024b8	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4002480	    0x483bab800000	            cmp rbp, qword [rbx + 0x80] 	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4002487	            0x742f	                            je 0x40024b8	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4002489	    0x483bab880000	            cmp rbp, qword [rbx + 0x88] 	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4002490	            0x7426	                            je 0x40024b8	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4002492	    0x483bab900000	            cmp rbp, qword [rbx + 0x90] 	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4002499	            0x741d	                            je 0x40024b8	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x400249b	    0x483bab980000	            cmp rbp, qword [rbx + 0x98] 	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40024a2	            0x7414	                            je 0x40024b8	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40024a4	          0x488b1b	                    mov rbx, qword [rbx]	       199	diff.c	FUNCTION_7
0x40024a7	          0x4885db	                           test rbx, rbx	       199	diff.c	FUNCTION_7
0x40024aa	            0x75bc	                           jne 0x4002468	       199	diff.c	FUNCTION_7
0x40024ac	        0x4883c408	                              add rsp, 8	       209	diff.c	FUNCTION_7
0x40024b0	              0x5b	                                 pop rbx	       209	diff.c	FUNCTION_7
0x40024b1	              0x5d	                                 pop rbp	       209	diff.c	FUNCTION_7
0x40024b2	              0xc3	                                     ret	       209	diff.c	FUNCTION_7
0x40024b3	       0xf1f440000	                   nop dword [rax + rax]	       209	diff.c	FUNCTION_7
0x40024b8	    0x48391d000000	            cmp qword [0x040024bf], rbx 	       205	diff.c	FUNCTION_7	FUNCTION_1	IF_1	IF_2
0x40024bf	    0xc783a0000000	               mov dword [rbx + 0xa0], 1	       204	diff.c	FUNCTION_7	FUNCTION_1	IF_1
0x40024c9	            0x75d9	                           jne 0x40024a4	       205	diff.c	FUNCTION_7	FUNCTION_1	IF_1	IF_2
0x40024cb	      0xe880f3ffff	        call sym.diff_redraw.constprop.6	       206	diff.c	FUNCTION_7	FUNCTION_1	IF_1	CALL_2
0x40024d0	            0xebd2	                           jmp 0x40024a4	       206	diff.c	FUNCTION_7	FUNCTION_1	IF_1	CALL_2
ex_diffthis	IF,0:CALL,1:functions,0:FOR,0:SWITCH,0:ELSE,0:DO,0:WHILE,0	168
0x4003860	              0x55	                                push rbp	      1127	diff.c	FUNCTION_19
0x4003861	              0x53	                                push rbx	      1127	diff.c	FUNCTION_19
0x4003862	        0x4883ec08	                              sub rsp, 8	      1127	diff.c	FUNCTION_19
0x4003866	    0x488b1d000000	            mov rbx, qword [0x0400386d] 	      1129	diff.c	FUNCTION_19	CALL_1
0x400386d	      0xe800000000	                          call 0x4003872	      1159	diff.c	FUNCTION_21	CALL_1
0x4003872	    0x8b8bc0010000	           mov ecx, dword [rbx + 0x1c0] 	      1164	diff.c	FUNCTION_21	IF_1
0x4003878	    0x48891d000000	            mov qword [0x0400387f], rbx 	      1160	diff.c	FUNCTION_21
0x400387f	            0x85c9	                           test ecx, ecx	      1164	diff.c	FUNCTION_21	IF_1
0x4003881	     0xf8569020000	                           jne 0x4003af0	      1164	diff.c	FUNCTION_21	IF_1
0x4003887	    0x8b8388020000	           mov eax, dword [rbx + 0x288] 	      1165	diff.c	FUNCTION_21	IF_1
0x400388d	    0x8b938c020000	           mov edx, dword [rbx + 0x28c] 	      1178	diff.c	FUNCTION_21	IF_4	IF_5
0x4003893	    0xc78388020000	              mov dword [rbx + 0x288], 1	      1166	diff.c	FUNCTION_21
0x400389d	    0x898390020000	            mov dword [rbx + 0x290], eax	      1165	diff.c	FUNCTION_21	IF_1
0x40038a3	    0x8b83b0020000	           mov eax, dword [rbx + 0x2b0] 	      1168	diff.c	FUNCTION_21	IF_2
0x40038a9	            0x85d2	                           test edx, edx	      1178	diff.c	FUNCTION_21	IF_4	IF_5
0x40038ab	    0xc783b0020000	              mov dword [rbx + 0x2b0], 1	      1169	diff.c	FUNCTION_21
0x40038b5	    0x8983b4020000	            mov dword [rbx + 0x2b4], eax	      1168	diff.c	FUNCTION_21	IF_2
0x40038bb	    0x8b8394020000	           mov eax, dword [rbx + 0x294] 	      1171	diff.c	FUNCTION_21	IF_3
0x40038c1	    0xc78394020000	              mov dword [rbx + 0x294], 0	      1172	diff.c	FUNCTION_21
0x40038cb	    0x898398020000	            mov dword [rbx + 0x298], eax	      1171	diff.c	FUNCTION_21	IF_3
0x40038d1	        0x488b4308	                mov rax, qword [rbx + 8]	      1175	diff.c	FUNCTION_21
0x40038d5	    0x488905000000	            mov qword [0x040038dc], rax 	      1175	diff.c	FUNCTION_21
0x40038dc	     0xf853e020000	                           jne 0x4003b20	      1178	diff.c	FUNCTION_21	IF_4	IF_5
0x40038e2	    0x488bbbf80100	           mov rdi, qword [rbx + 0x1f8] 	      1180	diff.c	FUNCTION_21	IF_4	CALL_3
0x40038e9	      0xe800000000	                          call 0x40038ee	      1180	diff.c	FUNCTION_21	IF_4	CALL_3
0x40038ee	    0x488983000200	            mov qword [rbx + 0x200], rax	      1180	diff.c	FUNCTION_21	IF_4	CALL_3
0x40038f5	          0x4531c0	                            xor r8d, r8d	      1182	diff.c	FUNCTION_21	CALL_4
0x40038f8	      0xb905000000	                              mov ecx, 5	      1182	diff.c	FUNCTION_21	CALL_4
0x40038fd	      0xba00000000	                              mov edx, 0	      1182	diff.c	FUNCTION_21	CALL_4
0x4003902	      0xbeffffffff	                     mov esi, 0xffffffff	      1182	diff.c	FUNCTION_21	CALL_4
0x4003907	      0xbf00000000	                              mov edi, 0	      1182	diff.c	FUNCTION_21	CALL_4
0x400390c	      0xe800000000	                          call 0x4003911	      1182	diff.c	FUNCTION_21	CALL_4
0x4003911	        0x488b4308	                mov rax, qword [rbx + 8]	      1185	diff.c	FUNCTION_21
0x4003915	    0x48891d000000	            mov qword [0x0400391c], rbx 	      1184	diff.c	FUNCTION_21
0x400391c	    0x488905000000	            mov qword [0x04003923], rax 	      1185	diff.c	FUNCTION_21
0x4003923	    0x8b83c0010000	           mov eax, dword [rbx + 0x1c0] 	      1186	diff.c	FUNCTION_21	IF_6
0x4003929	            0x85c0	                           test eax, eax	      1186	diff.c	FUNCTION_21	IF_6
0x400392b	            0x7526	                           jne 0x4003953	      1186	diff.c	FUNCTION_21	IF_6
0x400392d	    0x488b83c80100	           mov rax, qword [rbx + 0x1c8] 	      1188	diff.c	FUNCTION_21	IF_6
0x4003934	    0x8983d0010000	            mov dword [rbx + 0x1d0], eax	      1188	diff.c	FUNCTION_21	IF_6
0x400393a	    0x8b83d4010000	           mov eax, dword [rbx + 0x1d4] 	      1189	diff.c	FUNCTION_21	IF_6
0x4003940	    0x8983d8010000	            mov dword [rbx + 0x1d8], eax	      1189	diff.c	FUNCTION_21	IF_6
0x4003946	    0x488b83e80100	           mov rax, qword [rbx + 0x1e8] 	      1190	diff.c	FUNCTION_21	IF_6
0x400394d	    0x8983f0010000	            mov dword [rbx + 0x1f0], eax	      1190	diff.c	FUNCTION_21	IF_6
0x4003953	    0x486305000000	         movsxd rax, dword [0x0400395a] 	      1192	diff.c	FUNCTION_21
0x400395a	          0x4889df	                            mov rdi, rbx	      1195	diff.c	FUNCTION_21	CALL_5
0x400395d	    0xc783d4010000	              mov dword [rbx + 0x1d4], 1	      1193	diff.c	FUNCTION_21
0x4003967	    0x48c783e80100	              mov qword [rbx + 0x1e8], 0	      1194	diff.c	FUNCTION_21
0x4003972	    0x488983c80100	            mov qword [rbx + 0x1c8], rax	      1192	diff.c	FUNCTION_21
0x4003979	      0xe800000000	                          call 0x400397e	      1195	diff.c	FUNCTION_21	CALL_5
0x400397e	          0x4889df	                            mov rdi, rbx	      1197	diff.c	FUNCTION_21	CALL_6
0x4003981	      0xe800000000	                          call 0x4003986	      1197	diff.c	FUNCTION_21	CALL_6
0x4003986	    0x488b3d000000	            mov rdi, qword [0x0400398d] 	      1199	diff.c	FUNCTION_21	IF_7	CALL_7
0x400398d	      0xbe68000000	                           mov esi, 0x68	      1199	diff.c	FUNCTION_21	IF_7	CALL_7
0x4003992	      0xe800000000	                          call 0x4003997	      1199	diff.c	FUNCTION_21	IF_7	CALL_7
0x4003997	          0x4885c0	                           test rax, rax	      1199	diff.c	FUNCTION_21	IF_7	CALL_7
0x400399a	     0xf84c0010000	                            je 0x4003b60	      1199	diff.c	FUNCTION_21	IF_7	CALL_7
0x40039a0	    0x488b2d000000	            mov rbp, qword [0x040039a7] 	      1135	diff.c	FUNCTION_20
0x40039a7	        0x488b4308	                mov rax, qword [rbx + 8]	      1138	diff.c	FUNCTION_20
0x40039ab	            0x31d2	                            xor edx, edx	      1140	diff.c	FUNCTION_20	CALL_1
0x40039ad	      0xb904000000	                              mov ecx, 4	      1140	diff.c	FUNCTION_20	CALL_1
0x40039b2	    0xc7838c020000	              mov dword [rbx + 0x28c], 1	      1202	diff.c	FUNCTION_21
0x40039bc	      0xbe01000000	                              mov esi, 1	      1140	diff.c	FUNCTION_20	CALL_1
0x40039c1	      0xbf00000000	                              mov edi, 0	      1140	diff.c	FUNCTION_20	CALL_1
0x40039c6	    0x830500000000	               add dword [0x040039cd], 1	      1139	diff.c	FUNCTION_20
0x40039cd	    0x48891d000000	            mov qword [0x040039d4], rbx 	      1137	diff.c	FUNCTION_20
0x40039d4	    0x488905000000	            mov qword [0x040039db], rax 	      1138	diff.c	FUNCTION_20
0x40039db	      0xe800000000	                          call 0x40039e0	      1140	diff.c	FUNCTION_20	CALL_1
0x40039e0	        0x488b4508	                mov rax, qword [rbp + 8]	      1143	diff.c	FUNCTION_20
0x40039e4	        0x488b5308	                mov rdx, qword [rbx + 8]	      1207	diff.c	FUNCTION_21	CALL_10
0x40039e8	    0x832d00000000	               sub dword [0x040039ef], 1	      1141	diff.c	FUNCTION_20
0x40039ef	    0x48892d000000	            mov qword [0x040039f6], rbp 	      1142	diff.c	FUNCTION_20
0x40039f6	    0x488905000000	            mov qword [0x040039fd], rax 	      1143	diff.c	FUNCTION_20
0x40039fd	    0x488b05000000	            mov rax, qword [0x04003a04] 	      1143	diff.c	FUNCTION_20
0x4003a04	        0x488b4860	            mov rcx, qword [rax + 0x60] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4003a08	          0x4839ca	                            cmp rdx, rcx	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4003a0b	     0xf84ca000000	                            je 0x4003adb	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4003a11	        0x488b7068	            mov rsi, qword [rax + 0x68] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4003a15	          0x4839f2	                            cmp rdx, rsi	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4003a18	     0xf84bd000000	                            je 0x4003adb	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4003a1e	        0x488b7870	            mov rdi, qword [rax + 0x70] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4003a22	          0x4839fa	                            cmp rdx, rdi	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4003a25	     0xf84b0000000	                            je 0x4003adb	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4003a2b	        0x4c8b4078	              mov r8, qword [rax + 0x78]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4003a2f	          0x4c39c2	                             cmp rdx, r8	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4003a32	     0xf84a3000000	                            je 0x4003adb	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4003a38	    0x4c8b88800000	              mov r9, qword [rax + 0x80]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4003a3f	          0x4c39ca	                             cmp rdx, r9	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4003a42	     0xf8493000000	                            je 0x4003adb	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4003a48	    0x4c8b90880000	            mov r10, qword [rax + 0x88] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4003a4f	          0x4c39d2	                            cmp rdx, r10	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4003a52	     0xf8483000000	                            je 0x4003adb	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4003a58	    0x4c8b98900000	            mov r11, qword [rax + 0x90] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4003a5f	          0x4c39da	                            cmp rdx, r11	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4003a62	            0x7477	                            je 0x4003adb	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4003a64	    0x488ba8980000	            mov rbp, qword [rax + 0x98] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4003a6b	          0x4839ea	                            cmp rdx, rbp	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4003a6e	            0x746b	                            je 0x4003adb	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4003a70	          0x4885c9	                           test rcx, rcx	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x4003a73	     0xf84f7000000	                            je 0x4003b70	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x4003a79	          0x4885f6	                           test rsi, rsi	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x4003a7c	     0xf84f6000000	                            je 0x4003b78	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x4003a82	          0x4885ff	                           test rdi, rdi	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x4003a85	     0xf84f5000000	                            je 0x4003b80	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x4003a8b	          0x4d85c0	                             test r8, r8	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x4003a8e	     0xf84fc000000	                            je 0x4003b90	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x4003a94	          0x4d85c9	                             test r9, r9	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x4003a97	     0xf8403010000	                            je 0x4003ba0	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x4003a9d	          0x4d85d2	                           test r10, r10	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x4003aa0	     0xf840a010000	                            je 0x4003bb0	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x4003aa6	          0x4d85db	                           test r11, r11	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x4003aa9	     0xf8489000000	                            je 0x4003b38	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x4003aaf	          0x4885ed	                           test rbp, rbp	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x4003ab2	      0xb907000000	                              mov ecx, 7	       130	diff.c	FUNCTION_3	FOR_1
0x4003ab7	     0xf8483000000	                            je 0x4003b40	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x4003abd	      0xbe00000000	                              mov esi, 0	       139	diff.c	FUNCTION_3	CALL_4
0x4003ac2	            0x31ff	                            xor edi, edi	       139	diff.c	FUNCTION_3	CALL_4
0x4003ac4	      0xba05000000	                              mov edx, 5	       139	diff.c	FUNCTION_3	CALL_4
0x4003ac9	      0xe800000000	                          call 0x4003ace	       139	diff.c	FUNCTION_3	CALL_4
0x4003ace	      0xbe08000000	                              mov esi, 8	       139	diff.c	FUNCTION_3	CALL_4
0x4003ad3	          0x4889c7	                            mov rdi, rax	       139	diff.c	FUNCTION_3	CALL_4
0x4003ad6	      0xe800000000	                          call 0x4003adb	       139	diff.c	FUNCTION_3	CALL_4
0x4003adb	        0x4883c408	                              add rsp, 8	      1130	diff.c	FUNCTION_19
0x4003adf	          0x4889df	                            mov rdi, rbx	      1208	diff.c	FUNCTION_21	CALL_11
0x4003ae2	      0xbe28000000	                           mov esi, 0x28	      1208	diff.c	FUNCTION_21	CALL_11
0x4003ae7	              0x5b	                                 pop rbx	      1130	diff.c	FUNCTION_19
0x4003ae8	              0x5d	                                 pop rbp	      1130	diff.c	FUNCTION_19
0x4003ae9	      0xe900000000	                           jmp 0x4003aee	      1208	diff.c	FUNCTION_21	CALL_11
0x4003aee	            0x6690	                                     nop	      1208	diff.c	FUNCTION_21	CALL_11
0x4003af0	        0x488b4308	                mov rax, qword [rbx + 8]	      1175	diff.c	FUNCTION_21
0x4003af4	    0xc78388020000	              mov dword [rbx + 0x288], 1	      1166	diff.c	FUNCTION_21
0x4003afe	    0xc783b0020000	              mov dword [rbx + 0x2b0], 1	      1169	diff.c	FUNCTION_21
0x4003b08	    0xc78394020000	              mov dword [rbx + 0x294], 0	      1172	diff.c	FUNCTION_21
0x4003b12	    0x488905000000	            mov qword [0x04003b19], rax 	      1175	diff.c	FUNCTION_21
0x4003b19	      0xe9d7fdffff	                           jmp 0x40038f5	      1175	diff.c	FUNCTION_21
0x4003b1e	            0x6690	                                     nop	      1175	diff.c	FUNCTION_21
0x4003b20	    0x488bbb000200	           mov rdi, qword [rbx + 0x200] 	      1179	diff.c	FUNCTION_21	IF_4	CALL_2
0x4003b27	      0xe800000000	                          call 0x4003b2c	      1179	diff.c	FUNCTION_21	IF_4	CALL_2
0x4003b2c	      0xe9b1fdffff	                           jmp 0x40038e2	      1179	diff.c	FUNCTION_21	IF_4	CALL_2
0x4003b31	     0xf1f80000000	                         nop dword [rax]	      1179	diff.c	FUNCTION_21	IF_4	CALL_2
0x4003b38	      0xb906000000	                              mov ecx, 6	       130	diff.c	FUNCTION_3	FOR_1
0x4003b3d	           0xf1f00	                         nop dword [rax]	       130	diff.c	FUNCTION_3	FOR_1
0x4003b40	      0x488954c860	     mov qword [rax + rcx*8 + 0x60], rdx	       133	diff.c	FUNCTION_3	FOR_1	IF_2
0x4003b45	    0xc780a0000000	               mov dword [rax + 0xa0], 1	       134	diff.c	FUNCTION_3	FOR_1	IF_2
0x4003b4f	      0xe8fcdcffff	        call sym.diff_redraw.constprop.6	       135	diff.c	FUNCTION_3	FOR_1	IF_2	CALL_2
0x4003b54	      0xe982ffffff	                           jmp 0x4003adb	       135	diff.c	FUNCTION_3	FOR_1	IF_2	CALL_2
0x4003b59	     0xf1f80000000	                         nop dword [rax]	       135	diff.c	FUNCTION_3	FOR_1	IF_2	CALL_2
0x4003b60	      0xbf00000000	                              mov edi, 0	      1200	diff.c	FUNCTION_21	CALL_8
0x4003b65	      0xe800000000	                          call 0x4003b6a	      1200	diff.c	FUNCTION_21	CALL_8
0x4003b6a	      0xe931feffff	                           jmp 0x40039a0	      1200	diff.c	FUNCTION_21	CALL_8
0x4003b6f	              0x90	                                     nop	      1200	diff.c	FUNCTION_21	CALL_8
0x4003b70	            0x31c9	                            xor ecx, ecx	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x4003b72	            0xebcc	                           jmp 0x4003b40	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x4003b74	         0xf1f4000	                         nop dword [rax]	       131	diff.c	FUNCTION_3	FOR_1	IF_2
0x4003b78	      0xb901000000	                              mov ecx, 1	       130	diff.c	FUNCTION_3	FOR_1
0x4003b7d	            0xebc1	                           jmp 0x4003b40	       130	diff.c	FUNCTION_3	FOR_1
0x4003b7f	              0x90	                                     nop	       130	diff.c	FUNCTION_3	FOR_1
0x4003b80	      0xb902000000	                              mov ecx, 2	       130	diff.c	FUNCTION_3	FOR_1
0x4003b85	            0xebb9	                           jmp 0x4003b40	       130	diff.c	FUNCTION_3	FOR_1
0x4003b87	    0x660f1f840000	                    nop word [rax + rax]	       130	diff.c	FUNCTION_3	FOR_1
0x4003b90	      0xb903000000	                              mov ecx, 3	       130	diff.c	FUNCTION_3	FOR_1
0x4003b95	            0xeba9	                           jmp 0x4003b40	       130	diff.c	FUNCTION_3	FOR_1
0x4003b97	    0x660f1f840000	                    nop word [rax + rax]	       130	diff.c	FUNCTION_3	FOR_1
0x4003ba0	      0xb904000000	                              mov ecx, 4	       130	diff.c	FUNCTION_3	FOR_1
0x4003ba5	            0xeb99	                           jmp 0x4003b40	       130	diff.c	FUNCTION_3	FOR_1
0x4003ba7	    0x660f1f840000	                    nop word [rax + rax]	       130	diff.c	FUNCTION_3	FOR_1
0x4003bb0	      0xb905000000	                              mov ecx, 5	       130	diff.c	FUNCTION_3	FOR_1
0x4003bb5	            0xeb89	                           jmp 0x4003b40	       130	diff.c	FUNCTION_3	FOR_1
diff_mark_adjust	IF,0:CALL,0:functions,1:FOR,0:SWITCH,0:ELSE,0:DO,0:WHILE,0	992
0x40024e0	            0x4157	                                push r15	       220	diff.c	FUNCTION_8
0x40024e2	            0x4156	                                push r14	       220	diff.c	FUNCTION_8
0x40024e4	          0x4889f8	                            mov rax, rdi	       220	diff.c	FUNCTION_8
0x40024e7	            0x4155	                                push r13	       220	diff.c	FUNCTION_8
0x40024e9	            0x4154	                                push r12	       220	diff.c	FUNCTION_8
0x40024eb	        0x4883e801	                              sub rax, 1	       329	diff.c	FUNCTION_9	FOR_1	IF_8
0x40024ef	              0x55	                                push rbp	       220	diff.c	FUNCTION_8
0x40024f0	              0x53	                                push rbx	       220	diff.c	FUNCTION_8
0x40024f1	    0x4881ecc80000	                           sub rsp, 0xc8	       220	diff.c	FUNCTION_8
0x40024f8	    0x4c8b35000000	            mov r14, qword [0x040024ff] 	       225	diff.c	FUNCTION_8
0x40024ff	      0x48897c2418	             mov qword [rsp + 0x18], rdi	       220	diff.c	FUNCTION_8
0x4002504	      0x4889742428	             mov qword [rsp + 0x28], rsi	       220	diff.c	FUNCTION_8
0x4002509	    0x48899424b800	             mov qword [rsp + 0xb8], rdx	       220	diff.c	FUNCTION_8
0x4002511	      0x48894c2468	             mov qword [rsp + 0x68], rcx	       220	diff.c	FUNCTION_8
0x4002516	          0x4d85f6	                           test r14, r14	       225	diff.c	FUNCTION_8
0x4002519	      0x4889442430	             mov qword [rsp + 0x30], rax	       329	diff.c	FUNCTION_9	FOR_1	IF_8
0x400251e	            0x746f	                            je 0x400258f	       225	diff.c	FUNCTION_8
0x4002520	          0x4d89f7	                            mov r15, r14	       225	diff.c	FUNCTION_8
0x4002523	       0xf1f440000	                   nop dword [rax + rax]	       225	diff.c	FUNCTION_8
0x4002528	    0x488b05000000	            mov rax, qword [0x0400252f] 	       227	diff.c	FUNCTION_8	FUNCTION_1	CALL_1
0x400252f	        0x493b4760	            cmp rax, qword [r15 + 0x60] 	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4002533	            0x746c	                            je 0x40025a1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4002535	        0x493b4768	            cmp rax, qword [r15 + 0x68] 	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4002539	     0xf84dc0f0000	                            je 0x400351b	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x400253f	        0x493b4770	            cmp rax, qword [r15 + 0x70] 	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4002543	     0xf84a00f0000	                            je 0x40034e9	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4002549	        0x493b4778	            cmp rax, qword [r15 + 0x78] 	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x400254d	     0xf84640f0000	                            je 0x40034b7	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4002553	    0x493b87800000	            cmp rax, qword [r15 + 0x80] 	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x400255a	     0xf84250f0000	                            je 0x4003485	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4002560	    0x493b87880000	            cmp rax, qword [r15 + 0x88] 	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4002567	     0xf8484100000	                            je 0x40035f1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x400256d	    0x493b87900000	            cmp rax, qword [r15 + 0x90] 	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4002574	     0xf8445100000	                            je 0x40035bf	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x400257a	    0x493b87980000	            cmp rax, qword [r15 + 0x98] 	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4002581	     0xf8406100000	                            je 0x400358d	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4002587	          0x4d8b3f	                    mov r15, qword [r15]	       225	diff.c	FUNCTION_8
0x400258a	          0x4d85ff	                           test r15, r15	       225	diff.c	FUNCTION_8
0x400258d	            0x7599	                           jne 0x4002528	       225	diff.c	FUNCTION_8
0x400258f	    0x4881c4c80000	                           add rsp, 0xc8	       231	diff.c	FUNCTION_8
0x4002596	              0x5b	                                 pop rbx	       231	diff.c	FUNCTION_8
0x4002597	              0x5d	                                 pop rbp	       231	diff.c	FUNCTION_8
0x4002598	            0x415c	                                 pop r12	       231	diff.c	FUNCTION_8
0x400259a	            0x415d	                                 pop r13	       231	diff.c	FUNCTION_8
0x400259c	            0x415e	                                 pop r14	       231	diff.c	FUNCTION_8
0x400259e	            0x415f	                                 pop r15	       231	diff.c	FUNCTION_8
0x40025a0	              0xc3	                                     ret	       231	diff.c	FUNCTION_8
0x40025a1	      0xc644246700	                mov byte [rsp + 0x67], 0	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40025a6	      0xc644246601	                mov byte [rsp + 0x66], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40025ab	            0x31c0	                            xor eax, eax	       183	diff.c	FUNCTION_6	FOR_1
0x40025ad	      0xc644246501	                mov byte [rsp + 0x65], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40025b2	      0xc644246401	                mov byte [rsp + 0x64], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40025b7	      0xc644246301	                mov byte [rsp + 0x63], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40025bc	      0xc644246201	                mov byte [rsp + 0x62], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40025c1	      0xc644246101	                mov byte [rsp + 0x61], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40025c6	      0xc644246001	                mov byte [rsp + 0x60], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40025cb	    0x48817c2428ff	     cmp qword [rsp + 0x28], 0x7fffffff 	       259	diff.c	FUNCTION_9	IF_1
0x40025d4	     0xf846c0e0000	                            je 0x4003446	       259	diff.c	FUNCTION_9	IF_1
0x40025da	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	       265	diff.c	FUNCTION_9	ELSE_1	IF_2
0x40025df	          0x4885ff	                           test rdi, rdi	       265	diff.c	FUNCTION_9	ELSE_1	IF_2
0x40025e2	     0xf8e760e0000	                           jle 0x400345e	       265	diff.c	FUNCTION_9	ELSE_1	IF_2
0x40025e8	        0x897c2454	             mov dword [rsp + 0x54], edi	       268	diff.c	FUNCTION_9	ELSE_1	IF_2
0x40025ec	    0xc74424400000	               mov dword [rsp + 0x40], 0	       269	diff.c	FUNCTION_9	ELSE_1	IF_2
0x40025f4	        0x48890424	                    mov qword [rsp], rax	       269	diff.c	FUNCTION_9	ELSE_1	IF_2
0x40025f8	        0x48c1e003	                              shl rax, 3	       269	diff.c	FUNCTION_9	ELSE_1	IF_2
0x40025fc	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       279	diff.c	FUNCTION_9
0x4002601	      0x4889442448	             mov qword [rsp + 0x48], rax	       279	diff.c	FUNCTION_9
0x4002606	      0x4863442454	         movsxd rax, dword [rsp + 0x54] 	       296	diff.c	FUNCTION_9	FOR_1	IF_3
0x400260b	          0x4531ed	                          xor r13d, r13d	       278	diff.c	FUNCTION_9
0x400260e	        0x4d8b7758	            mov r14, qword [r15 + 0x58] 	       279	diff.c	FUNCTION_9
0x4002612	    0x48898c248000	             mov qword [rsp + 0x80], rcx	       279	diff.c	FUNCTION_9
0x400261a	    0x488984248800	             mov qword [rsp + 0x88], rax	       296	diff.c	FUNCTION_9	FOR_1	IF_3
0x4002622	    0x660f1f440000	                    nop word [rax + rax]	       296	diff.c	FUNCTION_9	FOR_1	IF_3
0x4002628	          0x4d85f6	                           test r14, r14	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x400262b	            0x742b	                            je 0x4002658	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x400262d	        0x488b0424	                    mov rax, qword [rsp]	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x4002631	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x4002636	      0x498b44c608	       mov rax, qword [r14 + rax*8 + 8] 	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x400263b	        0x488d50ff	                      lea rdx, [rax - 1]	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x400263f	          0x4839d1	                            cmp rcx, rdx	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x4002642	            0x7c14	                            jl 0x4002658	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x4002644	      0x4839442418	            cmp qword [rsp + 0x18], rax 	       286	diff.c	FUNCTION_9	FOR_1	IF_3
0x4002649	            0x7d48	                           jge 0x4002693	       286	diff.c	FUNCTION_9	FOR_1	IF_3
0x400264b	    0x4881f9ffffff	                     cmp rcx, 0x7fffffff	       286	diff.c	FUNCTION_9	FOR_1	IF_3
0x4002652	            0x753f	                           jne 0x4002693	       286	diff.c	FUNCTION_9	FOR_1	IF_3
0x4002654	         0xf1f4000	                         nop dword [rax]	       286	diff.c	FUNCTION_9	FOR_1	IF_3
0x4002658	          0x4d85ed	                           test r13, r13	       287	diff.c	FUNCTION_9	FOR_1	IF_3
0x400265b	            0x7416	                            je 0x4002673	       287	diff.c	FUNCTION_9	FOR_1	IF_3
0x400265d	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	       288	diff.c	FUNCTION_9	FOR_1	IF_3
0x4002662	      0x498b440d08	         mov rax, qword [r13 + rcx + 8] 	       288	diff.c	FUNCTION_9	FOR_1	IF_3
0x4002667	      0x4903440d48	       add rax, qword [r13 + rcx + 0x48]	       288	diff.c	FUNCTION_9	FOR_1	IF_3
0x400266c	      0x4839442418	            cmp qword [rsp + 0x18], rax 	       288	diff.c	FUNCTION_9	FOR_1	IF_3
0x4002671	            0x7e0e	                           jle 0x4002681	       288	diff.c	FUNCTION_9	FOR_1	IF_3
0x4002673	    0x8b1500000000	            mov edx, dword [0x04002679] 	       289	diff.c	FUNCTION_9	FOR_1	IF_3
0x4002679	            0x85d2	                           test edx, edx	       289	diff.c	FUNCTION_9	FOR_1	IF_3
0x400267b	     0xf843f030000	                            je 0x40029c0	       289	diff.c	FUNCTION_9	FOR_1	IF_3
0x4002681	          0x4d85f6	                           test r14, r14	       311	diff.c	FUNCTION_9	FOR_1	IF_7
0x4002684	     0xf8486050000	                            je 0x4002c10	       311	diff.c	FUNCTION_9	FOR_1	IF_7
0x400268a	        0x488b0424	                    mov rax, qword [rsp]	       311	diff.c	FUNCTION_9	FOR_1	IF_7
0x400268e	      0x498b44c608	       mov rax, qword [r14 + rax*8 + 8] 	       311	diff.c	FUNCTION_9	FOR_1	IF_7
0x4002693	        0x488b0c24	                    mov rcx, qword [rsp]	       311	diff.c	FUNCTION_9	FOR_1	IF_7
0x4002697	        0x48c1e103	                              shl rcx, 3	       311	diff.c	FUNCTION_9	FOR_1	IF_7
0x400269b	      0x48894c2410	             mov qword [rsp + 0x10], rcx	       311	diff.c	FUNCTION_9	FOR_1	IF_7
0x40026a0	          0x4c01f1	                            add rcx, r14	       311	diff.c	FUNCTION_9	FOR_1	IF_7
0x40026a3	        0x488b5148	            mov rdx, qword [rcx + 0x48] 	       326	diff.c	FUNCTION_9	FOR_1
0x40026a7	      0x48894c2408	                mov qword [rsp + 8], rcx	       326	diff.c	FUNCTION_9	FOR_1
0x40026ac	      0x488d7402ff	                lea rsi, [rdx + rax - 1]	       326	diff.c	FUNCTION_9	FOR_1
0x40026b1	      0x483b742430	            cmp rsi, qword [rsp + 0x30] 	       329	diff.c	FUNCTION_9	FOR_1	IF_8
0x40026b6	            0x7c30	                            jl 0x40026e8	       329	diff.c	FUNCTION_9	FOR_1	IF_8
0x40026b8	        0x8b5c2454	            mov ebx, dword [rsp + 0x54] 	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x40026bc	            0x31ff	                            xor edi, edi	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x40026be	         0x35c2440	             add ebx, dword [rsp + 0x40]	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x40026c2	          0x4889c3	                            mov rbx, rax	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x40026c5	        0x400f95c7	                               setne dil	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x40026c9	          0x4829fb	                            sub rbx, rdi	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x40026cc	      0x48395c2428	            cmp qword [rsp + 0x28], rbx 	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x40026d1	            0x7d4d	                           jge 0x4002720	       333	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x40026d3	      0x488b5c2468	            mov rbx, qword [rsp + 0x68] 	       335	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9	IF_10
0x40026d8	          0x4885db	                           test rbx, rbx	       335	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9	IF_10
0x40026db	     0xf842f050000	                            je 0x4002c10	       335	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9	IF_10
0x40026e1	          0x4801d8	                            add rax, rbx	       337	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x40026e4	        0x48894108	                mov qword [rcx + 8], rax	       337	diff.c	FUNCTION_9	FOR_1	IF_8	IF_9
0x40026e8	          0x4d85ed	                           test r13, r13	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0x40026eb	            0x741e	                            je 0x400270b	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0x40026ed	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0x40026f2	      0x498b441d08	         mov rax, qword [r13 + rbx + 8] 	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0x40026f7	      0x4903441d48	       add rax, qword [r13 + rbx + 0x48]	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0x40026fc	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0x4002701	        0x483b4308	                cmp rax, qword [rbx + 8]	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0x4002705	     0xf840d020000	                            je 0x4002918	       433	diff.c	FUNCTION_9	FOR_1	IF_20
0x400270b	          0x4d89f5	                            mov r13, r14	       447	diff.c	FUNCTION_9	FOR_1	ELSE_12
0x400270e	          0x4d8b36	                    mov r14, qword [r14]	       447	diff.c	FUNCTION_9	FOR_1	ELSE_12
0x4002711	          0x4d85f6	                           test r14, r14	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x4002714	     0xf8513ffffff	                           jne 0x400262d	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x400271a	      0xe939ffffff	                           jmp 0x4002658	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x400271f	              0x90	                                     nop	       285	diff.c	FUNCTION_9	FOR_1	IF_3
0x4002720	        0x8b4c2440	            mov ecx, dword [rsp + 0x40] 	       344	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11
0x4002724	            0x85c9	                           test ecx, ecx	       344	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11
0x4002726	     0xf8e74060000	                           jle 0x4002da0	       344	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11
0x400272c	      0x4839442418	            cmp qword [rsp + 0x18], rax 	       346	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x4002731	     0xf8ff1050000	                            jg 0x4002d28	       346	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x4002737	    0x488b9c248000	            mov rbx, qword [rsp + 0x80] 	       348	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x400273f	            0x89c7	                            mov edi, eax	       348	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x4002741	            0x29df	                            sub edi, ebx	       348	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x4002743	          0x4189d8	                            mov r8d, ebx	       348	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12
0x4002746	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	       349	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13
0x400274b	          0x4839f3	                            cmp rbx, rsi	       349	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13
0x400274e	     0xf8c540b0000	                            jl 0x40032a8	       349	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13
0x4002754	          0x498b06	                    mov rax, qword [r14]	       352	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4002757	          0x4885c0	                           test rax, rax	       352	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x400275a	     0xf84fe0b0000	                            je 0x400335e	       352	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4002760	        0x488b3424	                    mov rsi, qword [rsp]	       353	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4002764	      0x488b74f008	       mov rsi, qword [rax + rsi*8 + 8] 	       353	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4002769	        0x488d46ff	                      lea rax, [rsi - 1]	       353	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x400276d	          0x4839c3	                            cmp rbx, rax	       353	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4002770	     0xf8ce80b0000	                            jl 0x400335e	       353	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4002776	            0x89f0	                            mov eax, esi	       357	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4002778	    0x4889b4248000	             mov qword [rsp + 0x80], rsi	       360	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4002780	          0x4429c0	                            sub eax, r8d	       357	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4002783	            0x29c1	                            sub ecx, eax	       358	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4002785	            0x29d0	                            sub eax, edx	       359	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x4002787	        0x894c2440	             mov dword [rsp + 0x40], ecx	       358	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	IF_14
0x400278b	      0x488b742408	                mov rsi, qword [rsp + 8]	       364	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	ELSE_5
0x4002790	          0x4531c0	                            xor r8d, r8d	       341	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4
0x4002793	    0x48c746480000	               mov qword [rsi + 0x48], 0	       364	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	ELSE_5
0x400279b	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       373	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5
0x40027a0	        0x48894e08	                mov qword [rsi + 8], rcx	       373	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5
0x40027a4	        0x498b7760	            mov rsi, qword [r15 + 0x60] 	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40027a8	          0x4885f6	                           test rsi, rsi	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40027ab	            0x7415	                            je 0x40027c2	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40027ad	      0x807c246700	                cmp byte [rsp + 0x67], 0	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40027b2	            0x740e	                            je 0x40027c2	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40027b4	          0x4863d7	                         movsxd rdx, edi	       407	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40027b7	        0x49295608	                sub qword [r14 + 8], rdx	       407	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40027bb	          0x4863d0	                         movsxd rdx, eax	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40027be	        0x49015648	            add qword [r14 + 0x48], rdx 	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40027c2	      0x49837f6800	               cmp qword [r15 + 0x68], 0	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40027c7	            0x7415	                            je 0x40027de	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40027c9	      0x807c246300	                cmp byte [rsp + 0x63], 0	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40027ce	            0x740e	                            je 0x40027de	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40027d0	          0x4863d7	                         movsxd rdx, edi	       407	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40027d3	        0x49295610	             sub qword [r14 + 0x10], rdx	       407	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40027d7	          0x4863d0	                         movsxd rdx, eax	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40027da	        0x49015650	            add qword [r14 + 0x50], rdx 	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40027de	      0x49837f7000	               cmp qword [r15 + 0x70], 0	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40027e3	            0x7415	                            je 0x40027fa	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40027e5	      0x807c246200	                cmp byte [rsp + 0x62], 0	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40027ea	            0x740e	                            je 0x40027fa	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40027ec	          0x4863d7	                         movsxd rdx, edi	       407	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40027ef	        0x49295618	             sub qword [r14 + 0x18], rdx	       407	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40027f3	          0x4863d0	                         movsxd rdx, eax	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40027f6	        0x49015658	            add qword [r14 + 0x58], rdx 	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40027fa	      0x49837f7800	               cmp qword [r15 + 0x78], 0	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x40027ff	            0x7415	                            je 0x4002816	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x4002801	      0x807c246000	                cmp byte [rsp + 0x60], 0	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x4002806	            0x740e	                            je 0x4002816	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x4002808	          0x4863d7	                         movsxd rdx, edi	       407	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x400280b	        0x49295620	             sub qword [r14 + 0x20], rdx	       407	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x400280f	          0x4863d0	                         movsxd rdx, eax	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x4002812	        0x49015660	            add qword [r14 + 0x60], rdx 	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x4002816	    0x4983bf800000	               cmp qword [r15 + 0x80], 0	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x400281e	            0x7415	                            je 0x4002835	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x4002820	      0x807c246400	                cmp byte [rsp + 0x64], 0	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x4002825	            0x740e	                            je 0x4002835	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x4002827	          0x4863d7	                         movsxd rdx, edi	       407	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x400282a	        0x49295628	             sub qword [r14 + 0x28], rdx	       407	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x400282e	          0x4863d0	                         movsxd rdx, eax	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x4002831	        0x49015668	            add qword [r14 + 0x68], rdx 	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x4002835	    0x4983bf880000	               cmp qword [r15 + 0x88], 0	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x400283d	            0x7415	                            je 0x4002854	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x400283f	      0x807c246100	                cmp byte [rsp + 0x61], 0	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x4002844	            0x740e	                            je 0x4002854	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x4002846	          0x4863d7	                         movsxd rdx, edi	       407	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x4002849	        0x49295630	             sub qword [r14 + 0x30], rdx	       407	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x400284d	          0x4863d0	                         movsxd rdx, eax	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x4002850	        0x49015670	            add qword [r14 + 0x70], rdx 	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x4002854	    0x4983bf900000	               cmp qword [r15 + 0x90], 0	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x400285c	            0x7415	                            je 0x4002873	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x400285e	      0x807c246600	                cmp byte [rsp + 0x66], 0	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x4002863	            0x740e	                            je 0x4002873	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x4002865	          0x4863d7	                         movsxd rdx, edi	       407	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x4002868	        0x49295638	             sub qword [r14 + 0x38], rdx	       407	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x400286c	          0x4863d0	                         movsxd rdx, eax	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x400286f	        0x49015678	            add qword [r14 + 0x78], rdx 	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x4002873	    0x4983bf980000	               cmp qword [r15 + 0x98], 0	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x400287b	            0x7417	                            je 0x4002894	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x400287d	      0x807c246500	                cmp byte [rsp + 0x65], 0	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x4002882	            0x7410	                            je 0x4002894	       405	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x4002884	          0x4863d7	                         movsxd rdx, edi	       407	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x4002887	            0x4898	                                    cdqe	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x4002889	        0x49295640	             sub qword [r14 + 0x40], rdx	       407	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x400288d	    0x490186800000	            add qword [r14 + 0x80], rax 	       408	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	FOR_3	IF_17
0x4002894	          0x4585c0	                           test r8d, r8d	       424	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_19
0x4002897	     0xf844bfeffff	                            je 0x40026e8	       424	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_19
0x400289d	          0x4885f6	                           test rsi, rsi	       527	diff.c	ELSE_1	FUNCTION_11	FOR_1	IF_1
0x40028a0	     0xf8523050000	                           jne 0x4002dc9	       527	diff.c	ELSE_1	FUNCTION_11	FOR_1	IF_1
0x40028a6	        0x498b5768	            mov rdx, qword [r15 + 0x68] 	       527	diff.c	ELSE_1	FUNCTION_11	FOR_1	IF_1
0x40028aa	          0x4885d2	                           test rdx, rdx	       527	diff.c	ELSE_1	FUNCTION_11	FOR_1	IF_1
0x40028ad	     0xf85c20b0000	                           jne 0x4003475	       527	diff.c	ELSE_1	FUNCTION_11	FOR_1	IF_1
0x40028b3	      0x49837f7000	               cmp qword [r15 + 0x70], 0	       527	diff.c	ELSE_1	FUNCTION_11	FOR_1	IF_1
0x40028b8	     0xf85bf0c0000	                           jne 0x400357d	       527	diff.c	ELSE_1	FUNCTION_11	FOR_1	IF_1
0x40028be	      0x49837f7800	               cmp qword [r15 + 0x78], 0	       527	diff.c	ELSE_1	FUNCTION_11	FOR_1	IF_1
0x40028c3	     0xf85a40c0000	                           jne 0x400356d	       527	diff.c	ELSE_1	FUNCTION_11	FOR_1	IF_1
0x40028c9	    0x4983bf800000	               cmp qword [r15 + 0x80], 0	       527	diff.c	ELSE_1	FUNCTION_11	FOR_1	IF_1
0x40028d1	     0xf85860c0000	                           jne 0x400355d	       527	diff.c	ELSE_1	FUNCTION_11	FOR_1	IF_1
0x40028d7	    0x4983bf880000	               cmp qword [r15 + 0x88], 0	       527	diff.c	ELSE_1	FUNCTION_11	FOR_1	IF_1
0x40028df	     0xf85680c0000	                           jne 0x400354d	       527	diff.c	ELSE_1	FUNCTION_11	FOR_1	IF_1
0x40028e5	    0x4983bf900000	               cmp qword [r15 + 0x90], 0	       527	diff.c	ELSE_1	FUNCTION_11	FOR_1	IF_1
0x40028ed	     0xf85300d0000	                           jne 0x4003623	       527	diff.c	ELSE_1	FUNCTION_11	FOR_1	IF_1
0x40028f3	    0x4983bf980000	               cmp qword [r15 + 0x98], 0	       527	diff.c	ELSE_1	FUNCTION_11	FOR_1	IF_1
0x40028fb	     0xf84e7fdffff	                            je 0x40026e8	       527	diff.c	ELSE_1	FUNCTION_11	FOR_1	IF_1
0x4002901	    0xc78424980000	               mov dword [rsp + 0x98], 7	       526	diff.c	ELSE_1	FUNCTION_11	FOR_1
0x400290c	      0xe9f6040000	                           jmp 0x4002e07	       526	diff.c	ELSE_1	FUNCTION_11	FOR_1
0x4002911	     0xf1f80000000	                         nop dword [rax]	       526	diff.c	ELSE_1	FUNCTION_11	FOR_1
0x4002918	      0x49837f6000	               cmp qword [r15 + 0x60], 0	       437	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x400291d	            0x7408	                            je 0x4002927	       437	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x400291f	        0x498b4648	            mov rax, qword [r14 + 0x48] 	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x4002923	        0x49014548	            add qword [r13 + 0x48], rax 	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x4002927	      0x49837f6800	               cmp qword [r15 + 0x68], 0	       437	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x400292c	            0x7408	                            je 0x4002936	       437	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x400292e	        0x498b4650	            mov rax, qword [r14 + 0x50] 	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x4002932	        0x49014550	            add qword [r13 + 0x50], rax 	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x4002936	      0x49837f7000	               cmp qword [r15 + 0x70], 0	       437	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x400293b	            0x7408	                            je 0x4002945	       437	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x400293d	        0x498b4658	            mov rax, qword [r14 + 0x58] 	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x4002941	        0x49014558	            add qword [r13 + 0x58], rax 	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x4002945	      0x49837f7800	               cmp qword [r15 + 0x78], 0	       437	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x400294a	            0x7408	                            je 0x4002954	       437	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x400294c	        0x498b4660	            mov rax, qword [r14 + 0x60] 	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x4002950	        0x49014560	            add qword [r13 + 0x60], rax 	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x4002954	    0x4983bf800000	               cmp qword [r15 + 0x80], 0	       437	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x400295c	            0x7408	                            je 0x4002966	       437	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x400295e	        0x498b4668	            mov rax, qword [r14 + 0x68] 	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x4002962	        0x49014568	            add qword [r13 + 0x68], rax 	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x4002966	    0x4983bf880000	               cmp qword [r15 + 0x88], 0	       437	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x400296e	            0x7408	                            je 0x4002978	       437	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x4002970	        0x498b4670	            mov rax, qword [r14 + 0x70] 	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x4002974	        0x49014570	            add qword [r13 + 0x70], rax 	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x4002978	    0x4983bf900000	               cmp qword [r15 + 0x90], 0	       437	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x4002980	            0x7408	                            je 0x400298a	       437	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x4002982	        0x498b4678	            mov rax, qword [r14 + 0x78] 	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x4002986	        0x49014578	            add qword [r13 + 0x78], rax 	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x400298a	    0x4983bf980000	               cmp qword [r15 + 0x98], 0	       437	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x4002992	            0x740e	                            je 0x40029a2	       437	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x4002994	    0x498b86800000	            mov rax, qword [r14 + 0x80] 	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x400299b	    0x490185800000	            add qword [r13 + 0x80], rax 	       438	diff.c	FUNCTION_9	FOR_1	IF_20	FOR_4	IF_21
0x40029a2	          0x498b06	                    mov rax, qword [r14]	       439	diff.c	FUNCTION_9	FOR_1	IF_20
0x40029a5	          0x4c89f7	                            mov rdi, r14	       440	diff.c	FUNCTION_9	FOR_1	IF_20	CALL_3
0x40029a8	        0x49894500	                    mov qword [r13], rax	       439	diff.c	FUNCTION_9	FOR_1	IF_20
0x40029ac	      0xe800000000	                          call 0x40029b1	       440	diff.c	FUNCTION_9	FOR_1	IF_20	CALL_3
0x40029b1	        0x4d8b7500	                    mov r14, qword [r13]	       441	diff.c	FUNCTION_9	FOR_1	IF_20
0x40029b5	      0xe96efcffff	                           jmp 0x4002628	       441	diff.c	FUNCTION_9	FOR_1	IF_20
0x40029ba	    0x660f1f440000	                    nop word [rax + rax]	       441	diff.c	FUNCTION_9	FOR_1	IF_20
0x40029c0	      0xbf88000000	                           mov edi, 0x88	       497	diff.c	FUNCTION_10	CALL_1
0x40029c5	      0xe800000000	                          call 0x40029ca	       497	diff.c	FUNCTION_10	CALL_1
0x40029ca	          0x4885c0	                           test rax, rax	       498	diff.c	FUNCTION_10	IF_1
0x40029cd	     0xf84b4fbffff	                            je 0x4002587	       498	diff.c	FUNCTION_10	IF_1
0x40029d3	          0x4d85ed	                           test r13, r13	       501	diff.c	FUNCTION_10	IF_1	IF_2
0x40029d6	          0x4c8930	                    mov qword [rax], r14	       500	diff.c	FUNCTION_10	IF_1
0x40029d9	     0xf84e1090000	                            je 0x40033c0	       501	diff.c	FUNCTION_10	IF_1	IF_2
0x40029df	      0x488b5c2448	            mov rbx, qword [rsp + 0x48] 	       501	diff.c	FUNCTION_10	IF_1	IF_2
0x40029e4	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       295	diff.c	FUNCTION_9	FOR_1	IF_3
0x40029e9	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	       296	diff.c	FUNCTION_9	FOR_1	IF_3
0x40029f1	        0x49894500	                    mov qword [r13], rax	       504	diff.c	FUNCTION_10	IF_1	ELSE_1
0x40029f5	        0x488d1418	                    lea rdx, [rax + rbx]	       504	diff.c	FUNCTION_10	IF_1	ELSE_1
0x40029f9	        0x48897208	                mov qword [rdx + 8], rsi	       295	diff.c	FUNCTION_9	FOR_1	IF_3
0x40029fd	        0x48897a48	             mov qword [rdx + 0x48], rdi	       296	diff.c	FUNCTION_9	FOR_1	IF_3
0x4002a01	      0x49837f6000	               cmp qword [r15 + 0x60], 0	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002a06	            0x742b	                            je 0x4002a33	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002a08	      0x807c246700	                cmp byte [rsp + 0x67], 0	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002a0d	            0x7424	                            je 0x4002a33	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002a0f	        0x498b5548	            mov rdx, qword [r13 + 0x48] 	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002a13	        0x49035508	                add rdx, qword [r13 + 8]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002a17	      0x4803542418	             add rdx, qword [rsp + 0x18]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002a1c	      0x492b541d48	       sub rdx, qword [r13 + rbx + 0x48]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002a21	      0x492b541d08	          sub rdx, qword [r13 + rbx + 8]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002a26	        0x48895008	                mov qword [rax + 8], rdx	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002a2a	      0x4863542440	         movsxd rdx, dword [rsp + 0x40] 	       306	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002a2f	        0x48895048	             mov qword [rax + 0x48], rdx	       306	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002a33	      0x49837f6800	               cmp qword [r15 + 0x68], 0	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002a38	            0x7438	                            je 0x4002a72	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002a3a	      0x807c246300	                cmp byte [rsp + 0x63], 0	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002a3f	            0x7431	                            je 0x4002a72	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002a41	          0x4d85ed	                           test r13, r13	       300	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x4002a44	     0xf84c0090000	                            je 0x400340a	       300	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x4002a4a	        0x488b3424	                    mov rsi, qword [rsp]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002a4e	        0x498b5550	            mov rdx, qword [r13 + 0x50] 	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002a52	        0x49035510	             add rdx, qword [r13 + 0x10]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002a56	      0x4803542418	             add rdx, qword [rsp + 0x18]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002a5b	      0x492b54f548	     sub rdx, qword [r13 + rsi*8 + 0x48]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002a60	      0x492b54f508	        sub rdx, qword [r13 + rsi*8 + 8]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002a65	        0x48895010	             mov qword [rax + 0x10], rdx	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002a69	      0x4863542440	         movsxd rdx, dword [rsp + 0x40] 	       306	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002a6e	        0x48895050	             mov qword [rax + 0x50], rdx	       306	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002a72	      0x49837f7000	               cmp qword [r15 + 0x70], 0	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002a77	            0x7438	                            je 0x4002ab1	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002a79	      0x807c246200	                cmp byte [rsp + 0x62], 0	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002a7e	            0x7431	                            je 0x4002ab1	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002a80	          0x4d85ed	                           test r13, r13	       300	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x4002a83	     0xf848b090000	                            je 0x4003414	       300	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x4002a89	        0x488b3c24	                    mov rdi, qword [rsp]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002a8d	        0x498b5558	            mov rdx, qword [r13 + 0x58] 	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002a91	        0x49035518	             add rdx, qword [r13 + 0x18]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002a95	      0x4803542418	             add rdx, qword [rsp + 0x18]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002a9a	      0x492b54fd48	     sub rdx, qword [r13 + rdi*8 + 0x48]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002a9f	      0x492b54fd08	        sub rdx, qword [r13 + rdi*8 + 8]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002aa4	        0x48895018	             mov qword [rax + 0x18], rdx	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002aa8	      0x4863542440	         movsxd rdx, dword [rsp + 0x40] 	       306	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002aad	        0x48895058	             mov qword [rax + 0x58], rdx	       306	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002ab1	      0x49837f7800	               cmp qword [r15 + 0x78], 0	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002ab6	            0x7438	                            je 0x4002af0	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002ab8	      0x807c246000	                cmp byte [rsp + 0x60], 0	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002abd	            0x7431	                            je 0x4002af0	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002abf	          0x4d85ed	                           test r13, r13	       300	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x4002ac2	     0xf8456090000	                            je 0x400341e	       300	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x4002ac8	        0x488b1c24	                    mov rbx, qword [rsp]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002acc	        0x498b5560	            mov rdx, qword [r13 + 0x60] 	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002ad0	        0x49035520	             add rdx, qword [r13 + 0x20]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002ad4	      0x4803542418	             add rdx, qword [rsp + 0x18]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002ad9	      0x492b54dd48	     sub rdx, qword [r13 + rbx*8 + 0x48]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002ade	      0x492b54dd08	        sub rdx, qword [r13 + rbx*8 + 8]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002ae3	        0x48895020	             mov qword [rax + 0x20], rdx	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002ae7	      0x4863542440	         movsxd rdx, dword [rsp + 0x40] 	       306	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002aec	        0x48895060	             mov qword [rax + 0x60], rdx	       306	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002af0	    0x4983bf800000	               cmp qword [r15 + 0x80], 0	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002af8	            0x7438	                            je 0x4002b32	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002afa	      0x807c246400	                cmp byte [rsp + 0x64], 0	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002aff	            0x7431	                            je 0x4002b32	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002b01	          0x4d85ed	                           test r13, r13	       300	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x4002b04	     0xf8428090000	                            je 0x4003432	       300	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x4002b0a	        0x488b0c24	                    mov rcx, qword [rsp]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002b0e	        0x498b5568	            mov rdx, qword [r13 + 0x68] 	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002b12	        0x49035528	             add rdx, qword [r13 + 0x28]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002b16	      0x4803542418	             add rdx, qword [rsp + 0x18]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002b1b	      0x492b54cd48	     sub rdx, qword [r13 + rcx*8 + 0x48]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002b20	      0x492b54cd08	        sub rdx, qword [r13 + rcx*8 + 8]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002b25	        0x48895028	             mov qword [rax + 0x28], rdx	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002b29	      0x4863542440	         movsxd rdx, dword [rsp + 0x40] 	       306	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002b2e	        0x48895068	             mov qword [rax + 0x68], rdx	       306	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002b32	    0x4983bf880000	               cmp qword [r15 + 0x88], 0	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002b3a	            0x7438	                            je 0x4002b74	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002b3c	      0x807c246100	                cmp byte [rsp + 0x61], 0	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002b41	            0x7431	                            je 0x4002b74	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002b43	          0x4d85ed	                           test r13, r13	       300	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x4002b46	     0xf84f0080000	                            je 0x400343c	       300	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x4002b4c	        0x488b3424	                    mov rsi, qword [rsp]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002b50	        0x498b5570	            mov rdx, qword [r13 + 0x70] 	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002b54	        0x49035530	             add rdx, qword [r13 + 0x30]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002b58	      0x4803542418	             add rdx, qword [rsp + 0x18]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002b5d	      0x492b54f548	     sub rdx, qword [r13 + rsi*8 + 0x48]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002b62	      0x492b54f508	        sub rdx, qword [r13 + rsi*8 + 8]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002b67	        0x48895030	             mov qword [rax + 0x30], rdx	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002b6b	      0x4863542440	         movsxd rdx, dword [rsp + 0x40] 	       306	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002b70	        0x48895070	             mov qword [rax + 0x70], rdx	       306	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002b74	    0x4983bf900000	               cmp qword [r15 + 0x90], 0	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002b7c	            0x7438	                            je 0x4002bb6	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002b7e	      0x807c246600	                cmp byte [rsp + 0x66], 0	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002b83	            0x7431	                            je 0x4002bb6	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002b85	          0x4d85ed	                           test r13, r13	       300	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x4002b88	     0xf8472080000	                            je 0x4003400	       300	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x4002b8e	        0x488b3c24	                    mov rdi, qword [rsp]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002b92	        0x498b5578	            mov rdx, qword [r13 + 0x78] 	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002b96	        0x49035538	             add rdx, qword [r13 + 0x38]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002b9a	      0x4803542418	             add rdx, qword [rsp + 0x18]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002b9f	      0x492b54fd48	     sub rdx, qword [r13 + rdi*8 + 0x48]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002ba4	      0x492b54fd08	        sub rdx, qword [r13 + rdi*8 + 8]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002ba9	        0x48895038	             mov qword [rax + 0x38], rdx	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002bad	      0x4863542440	         movsxd rdx, dword [rsp + 0x40] 	       306	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002bb2	        0x48895078	             mov qword [rax + 0x78], rdx	       306	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002bb6	    0x4983bf980000	               cmp qword [r15 + 0x98], 0	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002bbe	     0xf84bdfaffff	                            je 0x4002681	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002bc4	      0x807c246500	                cmp byte [rsp + 0x65], 0	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002bc9	     0xf84b2faffff	                            je 0x4002681	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002bcf	          0x4d85ed	                           test r13, r13	       300	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x4002bd2	     0xf8450080000	                            je 0x4003428	       300	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x4002bd8	        0x488b1c24	                    mov rbx, qword [rsp]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002bdc	    0x498b95800000	            mov rdx, qword [r13 + 0x80] 	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002be3	        0x49035540	             add rdx, qword [r13 + 0x40]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002be7	      0x4803542418	             add rdx, qword [rsp + 0x18]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002bec	      0x492b54dd48	     sub rdx, qword [r13 + rbx*8 + 0x48]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002bf1	      0x492b54dd08	        sub rdx, qword [r13 + rbx*8 + 8]	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002bf6	        0x48895040	             mov qword [rax + 0x40], rdx	       305	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	ELSE_3
0x4002bfa	      0x4863542440	         movsxd rdx, dword [rsp + 0x40] 	       306	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002bff	          0x4d85f6	                           test r14, r14	       311	diff.c	FUNCTION_9	FOR_1	IF_7
0x4002c02	    0x488990800000	             mov qword [rax + 0x80], rdx	       306	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4002c09	     0xf857bfaffff	                           jne 0x400268a	       311	diff.c	FUNCTION_9	FOR_1	IF_7
0x4002c0f	              0x90	                                     nop	       311	diff.c	FUNCTION_9	FOR_1	IF_7
0x4002c10	        0x498b7f58	            mov rdi, qword [r15 + 0x58] 	       452	diff.c	FUNCTION_9
0x4002c14	            0x31ed	                            xor ebp, ebp	       453	diff.c	FUNCTION_9	WHILE_1
0x4002c16	          0x4885ff	                           test rdi, rdi	       453	diff.c	FUNCTION_9	WHILE_1
0x4002c19	            0x751e	                           jne 0x4002c39	       453	diff.c	FUNCTION_9	WHILE_1
0x4002c1b	      0xe9e0000000	                           jmp 0x4002d00	       453	diff.c	FUNCTION_9	WHILE_1
0x4002c20	        0x48895d00	                    mov qword [rbp], rbx	       467	diff.c	FUNCTION_9	WHILE_1	IF_23	ELSE_13
0x4002c24	          0x4889df	                            mov rdi, rbx	       463	diff.c	FUNCTION_9	WHILE_1	IF_23
0x4002c27	    0x660f1f840000	                    nop word [rax + rax]	       463	diff.c	FUNCTION_9	WHILE_1	IF_23
0x4002c30	          0x4885ff	                           test rdi, rdi	       453	diff.c	FUNCTION_9	WHILE_1
0x4002c33	     0xf84c7000000	                            je 0x4002d00	       453	diff.c	FUNCTION_9	WHILE_1
0x4002c39	      0x49837f6000	               cmp qword [r15 + 0x60], 0	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4002c3e	            0x740b	                            je 0x4002c4b	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4002c40	      0x48837f4800	               cmp qword [rdi + 0x48], 0	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4002c45	     0xf85ad060000	                           jne 0x40032f8	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4002c4b	      0x49837f6800	               cmp qword [r15 + 0x68], 0	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4002c50	            0x740b	                            je 0x4002c5d	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4002c52	      0x48837f5000	               cmp qword [rdi + 0x50], 0	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4002c57	     0xf859b060000	                           jne 0x40032f8	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4002c5d	      0x49837f7000	               cmp qword [r15 + 0x70], 0	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4002c62	            0x740b	                            je 0x4002c6f	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4002c64	      0x48837f5800	               cmp qword [rdi + 0x58], 0	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4002c69	     0xf8589060000	                           jne 0x40032f8	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4002c6f	      0x49837f7800	               cmp qword [r15 + 0x78], 0	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4002c74	            0x740b	                            je 0x4002c81	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4002c76	      0x48837f6000	               cmp qword [rdi + 0x60], 0	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4002c7b	     0xf8577060000	                           jne 0x40032f8	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4002c81	    0x4983bf800000	               cmp qword [r15 + 0x80], 0	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4002c89	            0x740b	                            je 0x4002c96	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4002c8b	      0x48837f6800	               cmp qword [rdi + 0x68], 0	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4002c90	     0xf8562060000	                           jne 0x40032f8	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4002c96	    0x4983bf880000	               cmp qword [r15 + 0x88], 0	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4002c9e	            0x740b	                            je 0x4002cab	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4002ca0	      0x48837f7000	               cmp qword [rdi + 0x70], 0	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4002ca5	     0xf854d060000	                           jne 0x40032f8	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4002cab	    0x4983bf900000	               cmp qword [r15 + 0x90], 0	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4002cb3	            0x740b	                            je 0x4002cc0	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4002cb5	      0x48837f7800	               cmp qword [rdi + 0x78], 0	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4002cba	     0xf8538060000	                           jne 0x40032f8	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4002cc0	    0x4983bf980000	               cmp qword [r15 + 0x98], 0	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4002cc8	            0x740e	                            je 0x4002cd8	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4002cca	    0x4883bf800000	               cmp qword [rdi + 0x80], 0	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4002cd2	     0xf8520060000	                           jne 0x40032f8	       457	diff.c	FUNCTION_9	WHILE_1	FOR_5	IF_22
0x4002cd8	          0x488b1f	                    mov rbx, qword [rdi]	       461	diff.c	FUNCTION_9	WHILE_1	IF_23
0x4002cdb	      0xe800000000	                          call 0x4002ce0	       462	diff.c	FUNCTION_9	WHILE_1	IF_23	CALL_4
0x4002ce0	          0x4885ed	                           test rbp, rbp	       464	diff.c	FUNCTION_9	WHILE_1	IF_23	IF_24
0x4002ce3	     0xf8537ffffff	                           jne 0x4002c20	       464	diff.c	FUNCTION_9	WHILE_1	IF_23	IF_24
0x4002ce9	          0x4889df	                            mov rdi, rbx	       463	diff.c	FUNCTION_9	WHILE_1	IF_23
0x4002cec	        0x49895f58	             mov qword [r15 + 0x58], rbx	       465	diff.c	FUNCTION_9	WHILE_1	IF_23	IF_24
0x4002cf0	          0x4885ff	                           test rdi, rdi	       453	diff.c	FUNCTION_9	WHILE_1
0x4002cf3	     0xf8540ffffff	                           jne 0x4002c39	       453	diff.c	FUNCTION_9	WHILE_1
0x4002cf9	     0xf1f80000000	                         nop dword [rax]	       453	diff.c	FUNCTION_9	WHILE_1
0x4002d00	    0x4c393d000000	            cmp qword [0x04002d07], r15 	       478	diff.c	FUNCTION_9	ELSE_13	IF_25
0x4002d07	     0xf857af8ffff	                           jne 0x4002587	       478	diff.c	FUNCTION_9	ELSE_13	IF_25
0x4002d0d	      0xe83eebffff	        call sym.diff_redraw.constprop.6	       480	diff.c	FUNCTION_9	ELSE_13	IF_25	CALL_5
0x4002d12	    0xc70500000000	               mov dword [0x04002d1c], 1	       485	diff.c	FUNCTION_9	ELSE_13	IF_25
0x4002d1c	      0xe966f8ffff	                           jmp 0x4002587	       485	diff.c	FUNCTION_9	ELSE_13	IF_25
0x4002d21	     0xf1f80000000	                         nop dword [rax]	       485	diff.c	FUNCTION_9	ELSE_13	IF_25
0x4002d28	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       378	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x4002d2d	          0x4839f1	                            cmp rcx, rsi	       378	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x4002d30	     0xf8ea2050000	                           jle 0x40032d8	       378	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x4002d36	    0x488b9c248000	            mov rbx, qword [rsp + 0x80] 	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x4002d3e	          0x4889f0	                            mov rax, rsi	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x4002d41	          0x4829d8	                            sub rax, rbx	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x4002d44	        0x4883c001	                              add rax, 1	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x4002d48	          0x4829c2	                            sub rdx, rax	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x4002d4b	      0x488b442408	                mov rax, qword [rsp + 8]	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x4002d50	        0x48895048	             mov qword [rax + 0x48], rdx	       381	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x4002d54	          0x498b06	                    mov rax, qword [r14]	       382	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x4002d57	          0x4885c0	                           test rax, rax	       382	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x4002d5a	     0xf84eb050000	                            je 0x400334b	       382	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x4002d60	        0x488b3c24	                    mov rdi, qword [rsp]	       383	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x4002d64	      0x488b54f808	       mov rdx, qword [rax + rdi*8 + 8] 	       383	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x4002d69	        0x488d42ff	                      lea rax, [rdx - 1]	       383	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x4002d6d	          0x4839c1	                            cmp rcx, rax	       383	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x4002d70	     0xf8cd5050000	                            jl 0x400334b	       383	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x4002d76	          0x8d42ff	                      lea eax, [rdx - 1]	       387	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x4002d79	    0x488994248000	             mov qword [rsp + 0x80], rdx	       390	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x4002d81	    0x41b801000000	                              mov r8d, 1	       394	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x4002d87	            0x31ff	                            xor edi, edi	       377	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7
0x4002d89	            0x29f0	                            sub eax, esi	       387	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x4002d8b	        0x8b742440	            mov esi, dword [rsp + 0x40] 	       388	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x4002d8f	             0x1de	                            add esi, ebx	       388	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x4002d91	            0x29d6	                            sub esi, edx	       388	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x4002d93	        0x89742440	             mov dword [rsp + 0x40], esi	       388	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x4002d97	      0xe908faffff	                           jmp 0x40027a4	       388	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x4002d9c	         0xf1f4000	                         nop dword [rax]	       388	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	IF_16
0x4002da0	      0x4839442418	            cmp qword [rsp + 0x18], rax 	       413	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x4002da5	     0xf8c6d050000	                            jl 0x4003318	       413	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x4002dab	    0x480394248800	             add rdx, qword [rsp + 0x88]	       416	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x4002db3	      0x488b442408	                mov rax, qword [rsp + 8]	       416	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x4002db8	        0x48895048	             mov qword [rax + 0x48], rdx	       416	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x4002dbc	        0x498b7760	            mov rsi, qword [r15 + 0x60] 	       416	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	IF_18
0x4002dc0	          0x4885f6	                           test rsi, rsi	       527	diff.c	ELSE_1	FUNCTION_11	FOR_1	IF_1
0x4002dc3	     0xf84ddfaffff	                            je 0x40028a6	       527	diff.c	ELSE_1	FUNCTION_11	FOR_1	IF_1
0x4002dc9	        0x498b4648	            mov rax, qword [r14 + 0x48] 	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002dcd	        0x49034608	                add rax, qword [r14 + 8]	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002dd1	        0x4883e801	                              sub rax, 1	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002dd5	          0x483b06	                    cmp rax, qword [rsi]	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002dd8	     0xf8f0af9ffff	                            jg 0x40026e8	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002dde	        0x498b5768	            mov rdx, qword [r15 + 0x68] 	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002de2	    0xc78424980000	               mov dword [rsp + 0x98], 0	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4002ded	          0x4885d2	                           test rdx, rdx	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4002df0	            0x7415	                            je 0x4002e07	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4002df2	        0x498b4650	            mov rax, qword [r14 + 0x50] 	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002df6	        0x49034610	             add rax, qword [r14 + 0x10]	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002dfa	        0x4883e801	                              sub rax, 1	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002dfe	          0x483b02	                    cmp rax, qword [rdx]	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002e01	     0xf8fe1f8ffff	                            jg 0x40026e8	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002e07	        0x498b5770	            mov rdx, qword [r15 + 0x70] 	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4002e0b	          0x4885d2	                           test rdx, rdx	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4002e0e	            0x7415	                            je 0x4002e25	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4002e10	        0x498b4658	            mov rax, qword [r14 + 0x58] 	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002e14	        0x49034618	             add rax, qword [r14 + 0x18]	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002e18	        0x4883e801	                              sub rax, 1	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002e1c	          0x483b02	                    cmp rax, qword [rdx]	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002e1f	     0xf8fc3f8ffff	                            jg 0x40026e8	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002e25	        0x498b5778	            mov rdx, qword [r15 + 0x78] 	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4002e29	          0x4885d2	                           test rdx, rdx	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4002e2c	            0x7415	                            je 0x4002e43	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4002e2e	        0x498b4660	            mov rax, qword [r14 + 0x60] 	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002e32	        0x49034620	             add rax, qword [r14 + 0x20]	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002e36	        0x4883e801	                              sub rax, 1	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002e3a	          0x483b02	                    cmp rax, qword [rdx]	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002e3d	     0xf8fa5f8ffff	                            jg 0x40026e8	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002e43	    0x498b97800000	            mov rdx, qword [r15 + 0x80] 	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4002e4a	          0x4885d2	                           test rdx, rdx	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4002e4d	            0x7415	                            je 0x4002e64	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4002e4f	        0x498b4668	            mov rax, qword [r14 + 0x68] 	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002e53	        0x49034628	             add rax, qword [r14 + 0x28]	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002e57	        0x4883e801	                              sub rax, 1	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002e5b	          0x483b02	                    cmp rax, qword [rdx]	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002e5e	     0xf8f84f8ffff	                            jg 0x40026e8	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002e64	    0x498b97880000	            mov rdx, qword [r15 + 0x88] 	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4002e6b	          0x4885d2	                           test rdx, rdx	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4002e6e	            0x7415	                            je 0x4002e85	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4002e70	        0x498b4670	            mov rax, qword [r14 + 0x70] 	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002e74	        0x49034630	             add rax, qword [r14 + 0x30]	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002e78	        0x4883e801	                              sub rax, 1	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002e7c	          0x483b02	                    cmp rax, qword [rdx]	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002e7f	     0xf8f63f8ffff	                            jg 0x40026e8	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002e85	    0x498b97900000	            mov rdx, qword [r15 + 0x90] 	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4002e8c	          0x4885d2	                           test rdx, rdx	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4002e8f	            0x7415	                            je 0x4002ea6	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4002e91	        0x498b4678	            mov rax, qword [r14 + 0x78] 	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002e95	        0x49034638	             add rax, qword [r14 + 0x38]	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002e99	        0x4883e801	                              sub rax, 1	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002e9d	          0x483b02	                    cmp rax, qword [rdx]	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002ea0	     0xf8f42f8ffff	                            jg 0x40026e8	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002ea6	    0x498b97980000	            mov rdx, qword [r15 + 0x98] 	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4002ead	          0x4885d2	                           test rdx, rdx	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4002eb0	            0x7418	                            je 0x4002eca	       595	diff.c	FUNCTION_12	FOR_1	IF_1
0x4002eb2	    0x498b86800000	            mov rax, qword [r14 + 0x80] 	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002eb9	        0x49034640	             add rax, qword [r14 + 0x40]	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002ebd	        0x4883e801	                              sub rax, 1	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002ec1	          0x483b02	                    cmp rax, qword [rdx]	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002ec4	     0xf8f1ef8ffff	                            jg 0x40026e8	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002eca	    0x8b8c24980000	            mov ecx, dword [rsp + 0x98] 	       596	diff.c	FUNCTION_12	FOR_1	IF_1	IF_2
0x4002ed1	    0xc74424240100	               mov dword [rsp + 0x24], 1	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x4002ed9	          0x4531e4	                          xor r12d, r12d	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x4002edc	    0xc74424440000	               mov dword [rsp + 0x44], 0	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x4002ee4	    0x4c89ac24b000	             mov qword [rsp + 0xb0], r13	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x4002eec	          0x8d7101	                      lea esi, [rcx + 1]	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0x4002eef	          0x8d5902	                      lea ebx, [rcx + 2]	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x4002ef2	          0x8d7904	                      lea edi, [rcx + 4]	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x4002ef5	          0x4863d1	                         movsxd rdx, ecx	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x4002ef8	        0x48c1e203	                              shl rdx, 3	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x4002efc	        0x89742450	             mov dword [rsp + 0x50], esi	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0x4002f00	        0x895c247c	             mov dword [rsp + 0x7c], ebx	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x4002f04	          0x8d7103	                      lea esi, [rcx + 3]	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x4002f07	          0x8d5905	                      lea ebx, [rcx + 5]	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x4002f0a	        0x897c2474	             mov dword [rsp + 0x74], edi	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x4002f0e	          0x8d7906	                      lea edi, [rcx + 6]	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x4002f11	        0x498d0c17	                    lea rcx, [r15 + rdx]	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x4002f15	        0x498d0416	                    lea rax, [r14 + rdx]	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x4002f19	        0x89742478	             mov dword [rsp + 0x78], esi	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x4002f1d	        0x895c2470	             mov dword [rsp + 0x70], ebx	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x4002f21	      0x48894c2458	             mov qword [rsp + 0x58], rcx	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x4002f26	          0x4863cf	                         movsxd rcx, edi	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4002f29	      0x4889442438	             mov qword [rsp + 0x38], rax	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4002f2e	        0x498d34ce	                  lea rsi, [r14 + rcx*8]	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4002f32	        0x488b4048	            mov rax, qword [rax + 0x48] 	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4002f36	    0x89bc249c0000	             mov dword [rsp + 0x9c], edi	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x4002f3d	    0x48898c24a800	             mov qword [rsp + 0xa8], rcx	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4002f45	    0x4889b424a000	             mov qword [rsp + 0xa0], rsi	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4002f4d	           0xf1f00	                         nop dword [rax]	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4002f50	          0x4885c0	                           test rax, rax	       542	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1
0x4002f53	     0xf8edf000000	                           jle 0x4003038	       542	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1
0x4002f59	        0x8b5c2424	            mov ebx, dword [rsp + 0x24] 	       546	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_4
0x4002f5d	          0x83e801	                              sub eax, 1	       546	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_4
0x4002f60	          0x83fbff	             cmp ebx, 0xffffffffffffffff	       546	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_4
0x4002f63	       0xf45442444	          cmovne eax, dword [rsp + 0x44]	       546	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_4
0x4002f68	            0x31d2	                            xor edx, edx	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0x4002f6a	        0x89442444	             mov dword [rsp + 0x44], eax	       546	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_4
0x4002f6e	          0x4863f0	                         movsxd rsi, eax	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0x4002f71	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0x4002f76	        0x48037008	                add rsi, qword [rax + 8]	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0x4002f7a	      0x488b442458	            mov rax, qword [rsp + 0x58] 	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0x4002f7f	        0x488b7860	            mov rdi, qword [rax + 0x60] 	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0x4002f83	      0xe800000000	                          call 0x4002f88	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0x4002f88	          0x4889c7	                            mov rdi, rax	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0x4002f8b	      0xe800000000	                          call 0x4002f90	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0x4002f90	          0x4885c0	                           test rax, rax	       549	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_5
0x4002f93	          0x4989c5	                            mov r13, rax	       547	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_3
0x4002f96	     0xf846c030000	                            je 0x4003308	       549	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	IF_5
0x4002f9c	        0x8b4c2450	            mov ecx, dword [rsp + 0x50] 	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0x4002fa0	          0x83f908	                              cmp ecx, 8	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0x4002fa3	     0xf84b1020000	                            je 0x400325a	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0x4002fa9	            0x89d8	                            mov eax, ebx	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0x4002fab	            0x89cb	                            mov ebx, ecx	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0x4002fad	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0x4002fb0	     0xf84ce000000	                            je 0x4003084	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0x4002fb6	          0x4963ec	                        movsxd rbp, r12d	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0x4002fb9	            0xeb29	                           jmp 0x4002fe4	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0x4002fbb	       0xf1f440000	                   nop dword [rax + rax]	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0x4002fc0	          0x83fa02	                              cmp edx, 2	      1685	diff.c	FUNCTION_29	IF_2
0x4002fc3	     0xf8407010000	                            je 0x40030d0	      1685	diff.c	FUNCTION_29	IF_2
0x4002fc9	          0x4889c6	                            mov rsi, rax	      1685	diff.c	FUNCTION_29	IF_2
0x4002fcc	          0x4c89ef	                            mov rdi, r13	      1685	diff.c	FUNCTION_29	IF_2
0x4002fcf	      0xe88cd2ffff	                call sym.diff_cmp.part.1	      1685	diff.c	FUNCTION_29	IF_2
0x4002fd4	            0x85c0	                           test eax, eax	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x4002fd6	            0x7558	                           jne 0x4003030	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x4002fd8	          0x83c301	                              add ebx, 1	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0x4002fdb	          0x83fb08	                              cmp ebx, 8	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0x4002fde	     0xf8404010000	                            je 0x40030e8	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0x4002fe4	          0x4863c3	                         movsxd rax, ebx	       553	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_6
0x4002fe7	      0x498b7cc760	    mov rdi, qword [r15 + rax*8 + 0x60] 	       553	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_6
0x4002fec	          0x4885ff	                           test rdi, rdi	       553	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_6
0x4002fef	            0x74e7	                            je 0x4002fd8	       553	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_6
0x4002ff1	          0x4585e4	                         test r12d, r12d	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0x4002ff4	            0x783a	                            js 0x4003030	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0x4002ff6	        0x498d04c6	                  lea rax, [r14 + rax*8]	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0x4002ffa	        0x483b6848	            cmp rbp, qword [rax + 0x48] 	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0x4002ffe	            0x7d30	                           jge 0x4003030	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0x4003000	          0x4889ee	                            mov rsi, rbp	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x4003003	        0x48037008	                add rsi, qword [rax + 8]	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x4003007	            0x31d2	                            xor edx, edx	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x4003009	      0xe800000000	                          call 0x400300e	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x400300e	    0x8b1500000000	            mov edx, dword [0x04003014] 	      1683	diff.c	FUNCTION_29	IF_1
0x4003014	          0x83e206	                              and edx, 6	      1683	diff.c	FUNCTION_29	IF_1
0x4003017	            0x75a7	                           jne 0x4002fc0	      1683	diff.c	FUNCTION_29	IF_1
0x4003019	          0x4889c6	                            mov rsi, rax	      1684	diff.c	FUNCTION_29	CALL_1
0x400301c	          0x4c89ef	                            mov rdi, r13	      1684	diff.c	FUNCTION_29	CALL_1
0x400301f	      0xe800000000	                          call 0x4003024	      1684	diff.c	FUNCTION_29	CALL_1
0x4003024	            0x85c0	                           test eax, eax	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x4003026	            0x74b0	                            je 0x4002fd8	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x4003028	     0xf1f84000000	                   nop dword [rax + rax]	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x4003030	          0x4c89ef	                            mov rdi, r13	       564	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_6
0x4003033	      0xe800000000	                          call 0x4003038	       564	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_6
0x4003038	      0x837c2424ff	cmp dword [rsp + 0x24], 0xffffffffffffffff	       579	diff.c	ELSE_1	FUNCTION_11	FOR_2	IF_13
0x400303d	     0xf84c5020000	                            je 0x4003308	       579	diff.c	ELSE_1	FUNCTION_11	FOR_2	IF_13
0x4003043	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       579	diff.c	ELSE_1	FUNCTION_11	FOR_2	IF_13
0x4003048	    0xc7442424ffff	     mov dword [rsp + 0x24], 0xffffffff 	       581	diff.c	ELSE_1	FUNCTION_11	FOR_2
0x4003050	        0x488b4048	            mov rax, qword [rax + 0x48] 	       581	diff.c	ELSE_1	FUNCTION_11	FOR_2
0x4003054	      0xe9f7feffff	                           jmp 0x4002f50	       581	diff.c	ELSE_1	FUNCTION_11	FOR_2
0x4003059	     0xf1f80000000	                         nop dword [rax]	       581	diff.c	ELSE_1	FUNCTION_11	FOR_2
0x4003060	          0x83fa02	                              cmp edx, 2	      1685	diff.c	FUNCTION_29	IF_2
0x4003063	     0xf8427020000	                            je 0x4003290	      1685	diff.c	FUNCTION_29	IF_2
0x4003069	          0x4889c6	                            mov rsi, rax	      1685	diff.c	FUNCTION_29	IF_2
0x400306c	          0x4c89ef	                            mov rdi, r13	      1685	diff.c	FUNCTION_29	IF_2
0x400306f	      0xe8ecd1ffff	                call sym.diff_cmp.part.1	      1685	diff.c	FUNCTION_29	IF_2
0x4003074	            0x85c0	                           test eax, eax	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x4003076	            0x75b8	                           jne 0x4003030	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x4003078	          0x83c301	                              add ebx, 1	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0x400307b	          0x83fb08	                              cmp ebx, 8	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0x400307e	     0xf84aa020000	                            je 0x400332e	       551	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3
0x4003084	          0x4863c3	                         movsxd rax, ebx	       553	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_6
0x4003087	      0x498b7cc760	    mov rdi, qword [r15 + rax*8 + 0x60] 	       553	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_6
0x400308c	          0x4885ff	                           test rdi, rdi	       553	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_6
0x400308f	            0x74e7	                            je 0x4003078	       553	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_6
0x4003091	        0x498d14c6	                  lea rdx, [r14 + rax*8]	       553	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_6
0x4003095	        0x488b4248	            mov rax, qword [rdx + 0x48] 	       556	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_7
0x4003099	          0x4189c4	                           mov r12d, eax	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0x400309c	        0x4183ec01	                             sub r12d, 1	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0x40030a0	            0x788e	                            js 0x4003030	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0x40030a2	          0x4963f4	                        movsxd rsi, r12d	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0x40030a5	          0x4839f0	                            cmp rax, rsi	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0x40030a8	            0x7e86	                           jle 0x4003030	       558	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_8
0x40030aa	        0x48037208	                add rsi, qword [rdx + 8]	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x40030ae	            0x31d2	                            xor edx, edx	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x40030b0	      0xe800000000	                          call 0x40030b5	       560	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_3	IF_9	CALL_5
0x40030b5	    0x8b1500000000	            mov edx, dword [0x040030bb] 	      1683	diff.c	FUNCTION_29	IF_1
0x40030bb	          0x83e206	                              and edx, 6	      1683	diff.c	FUNCTION_29	IF_1
0x40030be	            0x75a0	                           jne 0x4003060	      1683	diff.c	FUNCTION_29	IF_1
0x40030c0	          0x4889c6	                            mov rsi, rax	      1684	diff.c	FUNCTION_29	CALL_1
0x40030c3	          0x4c89ef	                            mov rdi, r13	      1684	diff.c	FUNCTION_29	CALL_1
0x40030c6	      0xe800000000	                          call 0x40030cb	      1684	diff.c	FUNCTION_29	CALL_1
0x40030cb	            0xeba7	                           jmp 0x4003074	      1684	diff.c	FUNCTION_29	CALL_1
0x40030cd	           0xf1f00	                         nop dword [rax]	      1684	diff.c	FUNCTION_29	CALL_1
0x40030d0	      0xbaffffff7f	                     mov edx, 0x7fffffff	      1686	diff.c	FUNCTION_29	CALL_2
0x40030d5	          0x4889c6	                            mov rsi, rax	      1686	diff.c	FUNCTION_29	CALL_2
0x40030d8	          0x4c89ef	                            mov rdi, r13	      1686	diff.c	FUNCTION_29	CALL_2
0x40030db	      0xe800000000	                          call 0x40030e0	      1686	diff.c	FUNCTION_29	CALL_2
0x40030e0	      0xe9effeffff	                           jmp 0x4002fd4	      1686	diff.c	FUNCTION_29	CALL_2
0x40030e5	           0xf1f00	                         nop dword [rax]	      1686	diff.c	FUNCTION_29	CALL_2
0x40030e8	          0x4c89ef	                            mov rdi, r13	       564	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_6
0x40030eb	      0xe800000000	                          call 0x40030f0	       564	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_6
0x40030f0	      0x488b442458	            mov rax, qword [rsp + 0x58] 	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x40030f5	      0x4883786000	               cmp qword [rax + 0x60], 0	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x40030fa	            0x7435	                            je 0x4003131	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x40030fc	      0x837c242401	               cmp dword [rsp + 0x24], 1	       574	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x4003101	            0x750a	                           jne 0x400310d	       574	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x4003103	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       575	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x4003108	      0x4883400801	                  add qword [rax + 8], 1	       575	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x400310d	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	       576	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4003112	        0x488b4648	            mov rax, qword [rsi + 0x48] 	       576	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4003116	    0x488984249000	             mov qword [rsp + 0x90], rax	       576	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x400311e	        0x4883e801	                              sub rax, 1	       576	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4003122	      0x837c245008	               cmp dword [rsp + 0x50], 8	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x4003127	        0x48894648	             mov qword [rsi + 0x48], rax	       576	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x400312b	     0xf841ffeffff	                            je 0x4002f50	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x4003131	        0x8b742450	            mov esi, dword [rsp + 0x50] 	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4003135	          0x4863c6	                         movsxd rax, esi	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4003138	    0x49837cc76000	       cmp qword [r15 + rax*8 + 0x60], 0	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x400313e	            0x7413	                            je 0x4003153	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4003140	      0x837c242401	               cmp dword [rsp + 0x24], 1	       574	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x4003145	     0xf841e020000	                            je 0x4003369	       574	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x400314b	            0x89f0	                            mov eax, esi	       574	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x400314d	    0x49836cc64801	       sub qword [r14 + rax*8 + 0x48], 1	       576	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4003153	      0x837c247c07	               cmp dword [rsp + 0x7c], 7	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x4003158	     0xf871a010000	                            ja 0x4003278	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x400315e	      0x486344247c	         movsxd rax, dword [rsp + 0x7c] 	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4003163	    0x49837cc76000	       cmp qword [r15 + rax*8 + 0x60], 0	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4003169	            0x7411	                            je 0x400317c	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x400316b	      0x837c242401	               cmp dword [rsp + 0x24], 1	       574	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x4003170	     0xf8402020000	                            je 0x4003378	       574	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x4003176	    0x49836cc64801	       sub qword [r14 + rax*8 + 0x48], 1	       576	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x400317c	      0x837c247807	               cmp dword [rsp + 0x78], 7	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x4003181	     0xf87f1000000	                            ja 0x4003278	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x4003187	      0x4863442478	         movsxd rax, dword [rsp + 0x78] 	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x400318c	    0x49837cc76000	       cmp qword [r15 + rax*8 + 0x60], 0	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4003192	            0x7411	                            je 0x40031a5	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4003194	      0x837c242401	               cmp dword [rsp + 0x24], 1	       574	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x4003199	     0xf84e4010000	                            je 0x4003383	       574	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x400319f	    0x49836cc64801	       sub qword [r14 + rax*8 + 0x48], 1	       576	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x40031a5	      0x837c247407	               cmp dword [rsp + 0x74], 7	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x40031aa	     0xf87c8000000	                            ja 0x4003278	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x40031b0	      0x4863442474	         movsxd rax, dword [rsp + 0x74] 	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x40031b5	    0x49837cc76000	       cmp qword [r15 + rax*8 + 0x60], 0	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x40031bb	            0x7411	                            je 0x40031ce	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x40031bd	      0x837c242401	               cmp dword [rsp + 0x24], 1	       574	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x40031c2	     0xf84c6010000	                            je 0x400338e	       574	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x40031c8	    0x49836cc64801	       sub qword [r14 + rax*8 + 0x48], 1	       576	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x40031ce	      0x837c247007	               cmp dword [rsp + 0x70], 7	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x40031d3	     0xf879f000000	                            ja 0x4003278	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x40031d9	      0x4863442470	         movsxd rax, dword [rsp + 0x70] 	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x40031de	    0x49837cc76000	       cmp qword [r15 + rax*8 + 0x60], 0	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x40031e4	            0x7411	                            je 0x40031f7	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x40031e6	      0x837c242401	               cmp dword [rsp + 0x24], 1	       574	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x40031eb	     0xf84a8010000	                            je 0x4003399	       574	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x40031f1	    0x49836cc64801	       sub qword [r14 + rax*8 + 0x48], 1	       576	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x40031f7	    0x83bc249c0000	               cmp dword [rsp + 0x9c], 7	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x40031ff	            0x7777	                            ja 0x4003278	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x4003201	    0x488b8424a800	            mov rax, qword [rsp + 0xa8] 	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4003209	    0x49837cc76000	       cmp qword [r15 + rax*8 + 0x60], 0	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x400320f	            0x7418	                            je 0x4003229	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4003211	      0x837c242401	               cmp dword [rsp + 0x24], 1	       574	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x4003216	     0xf8488010000	                            je 0x40033a4	       574	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x400321c	    0x488b8424a000	            mov rax, qword [rsp + 0xa0] 	       576	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4003224	      0x4883684801	               sub qword [rax + 0x48], 1	       576	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4003229	    0x8b8424980000	            mov eax, dword [rsp + 0x98] 	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x4003230	            0x85c0	                           test eax, eax	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x4003232	            0x7544	                           jne 0x4003278	       571	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4
0x4003234	    0x4983bf980000	               cmp qword [r15 + 0x98], 0	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x400323c	            0x7413	                            je 0x4003251	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x400323e	      0x837c242401	               cmp dword [rsp + 0x24], 1	       574	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x4003243	     0xf846d010000	                            je 0x40033b6	       574	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x4003249	    0x4983ae800000	               sub qword [r14 + 0x80], 1	       576	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4003251	        0x498b4648	            mov rax, qword [r14 + 0x48] 	       576	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4003255	      0xe9f6fcffff	                           jmp 0x4002f50	       576	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x400325a	          0x4c89ef	                            mov rdi, r13	       564	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_6
0x400325d	      0xe800000000	                          call 0x4003262	       564	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_6
0x4003262	      0x488b442458	            mov rax, qword [rsp + 0x58] 	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4003267	      0x4883786000	               cmp qword [rax + 0x60], 0	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x400326c	     0xf858afeffff	                           jne 0x40030fc	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4003272	    0x660f1f440000	                    nop word [rax + rax]	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4003278	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x400327d	        0x488b4048	            mov rax, qword [rax + 0x48] 	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4003281	      0xe9cafcffff	                           jmp 0x4002f50	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4003286	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4003290	      0xbaffffff7f	                     mov edx, 0x7fffffff	      1686	diff.c	FUNCTION_29	CALL_2
0x4003295	          0x4889c6	                            mov rsi, rax	      1686	diff.c	FUNCTION_29	CALL_2
0x4003298	          0x4c89ef	                            mov rdi, r13	      1686	diff.c	FUNCTION_29	CALL_2
0x400329b	      0xe800000000	                          call 0x40032a0	      1686	diff.c	FUNCTION_29	CALL_2
0x40032a0	      0xe9cffdffff	                           jmp 0x4003074	      1686	diff.c	FUNCTION_29	CALL_2
0x40032a5	           0xf1f00	                         nop dword [rax]	      1686	diff.c	FUNCTION_29	CALL_2
0x40032a8	          0x4889de	                            mov rsi, rbx	      1686	diff.c	FUNCTION_29	CALL_2
0x40032ab	    0x41b801000000	                              mov r8d, 1	       371	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x40032b1	          0x4829c6	                            sub rsi, rax	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x40032b4	          0x4889f0	                            mov rax, rsi	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x40032b7	      0x488b742408	                mov rsi, qword [rsp + 8]	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x40032bc	        0x4883c001	                              add rax, 1	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x40032c0	          0x4829c2	                            sub rdx, rax	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x40032c3	      0x488b442408	                mov rax, qword [rsp + 8]	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x40032c8	        0x48895048	             mov qword [rax + 0x48], rdx	       370	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x40032cc	            0x89f8	                            mov eax, edi	       369	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x40032ce	      0xe9c8f4ffff	                           jmp 0x400279b	       369	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x40032d3	       0xf1f440000	                   nop dword [rax + rax]	       369	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	ELSE_5	ELSE_6
0x40032d8	      0x4863442440	         movsxd rax, dword [rsp + 0x40] 	       400	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x40032dd	          0x4531c0	                            xor r8d, r8d	       341	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4
0x40032e0	            0x31ff	                            xor edi, edi	       377	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7
0x40032e2	          0x4829c2	                            sub rdx, rax	       400	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x40032e5	      0x488b442408	                mov rax, qword [rsp + 8]	       400	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x40032ea	        0x48895048	             mov qword [rax + 0x48], rdx	       400	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x40032ee	            0x31c0	                            xor eax, eax	       399	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x40032f0	      0xe9aff4ffff	                           jmp 0x40027a4	       399	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x40032f5	           0xf1f00	                         nop dword [rax]	       399	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_7	ELSE_9
0x40032f8	          0x4889fd	                            mov rbp, rdi	       473	diff.c	FUNCTION_9	WHILE_1	ELSE_13	ELSE_14
0x40032fb	          0x488b3f	                    mov rdi, qword [rdi]	       473	diff.c	FUNCTION_9	WHILE_1	ELSE_13	ELSE_14
0x40032fe	      0xe92df9ffff	                           jmp 0x4002c30	       473	diff.c	FUNCTION_9	WHILE_1	ELSE_13	ELSE_14
0x4003303	       0xf1f440000	                   nop dword [rax + rax]	       473	diff.c	FUNCTION_9	WHILE_1	ELSE_13	ELSE_14
0x4003308	    0x4c8bac24b000	            mov r13, qword [rsp + 0xb0] 	       473	diff.c	FUNCTION_9	WHILE_1	ELSE_13	ELSE_14
0x4003310	      0xe9d3f3ffff	                           jmp 0x40026e8	       473	diff.c	FUNCTION_9	WHILE_1	ELSE_13	ELSE_14
0x4003315	           0xf1f00	                         nop dword [rax]	       473	diff.c	FUNCTION_9	WHILE_1	ELSE_13	ELSE_14
0x4003318	    0x480384248800	             add rax, qword [rsp + 0x88]	       421	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	ELSE_11
0x4003320	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       421	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	ELSE_11
0x4003325	        0x48894308	                mov qword [rbx + 8], rax	       421	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	ELSE_11
0x4003329	      0xe9baf3ffff	                           jmp 0x40026e8	       421	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	ELSE_10	ELSE_11
0x400332e	          0x4c89ef	                            mov rdi, r13	       564	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_6
0x4003331	      0xe800000000	                          call 0x4003336	       564	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	CALL_6
0x4003336	      0x488b442458	            mov rax, qword [rsp + 0x58] 	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x400333b	      0x4883786000	               cmp qword [rax + 0x60], 0	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4003340	     0xf85c7fdffff	                           jne 0x400310d	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x4003346	      0xe9e6fdffff	                           jmp 0x4003131	       572	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11
0x400334b	        0x8b442428	            mov eax, dword [rsp + 0x28] 	       393	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	ELSE_8
0x400334f	    0x41b801000000	                              mov r8d, 1	       394	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15
0x4003355	            0x31ff	                            xor edi, edi	       377	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7
0x4003357	            0x29f0	                            sub eax, esi	       393	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	ELSE_8
0x4003359	      0xe946f4ffff	                           jmp 0x40027a4	       393	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	ELSE_5	ELSE_7	IF_15	ELSE_8
0x400335e	        0x8b442440	            mov eax, dword [rsp + 0x40] 	       363	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	ELSE_5
0x4003362	            0x29d0	                            sub eax, edx	       363	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	ELSE_5
0x4003364	      0xe922f4ffff	                           jmp 0x400278b	       363	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	ELSE_5
0x4003369	        0x8b442450	            mov eax, dword [rsp + 0x50] 	       363	diff.c	FUNCTION_9	FOR_1	IF_8	ELSE_4	IF_11	IF_12	IF_13	ELSE_5
0x400336d	    0x498344c60801	          add qword [r14 + rax*8 + 8], 1	       575	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x4003373	      0xe9d5fdffff	                           jmp 0x400314d	       575	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x4003378	    0x498344c60801	          add qword [r14 + rax*8 + 8], 1	       575	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x400337e	      0xe9f3fdffff	                           jmp 0x4003176	       575	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x4003383	    0x498344c60801	          add qword [r14 + rax*8 + 8], 1	       575	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x4003389	      0xe911feffff	                           jmp 0x400319f	       575	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x400338e	    0x498344c60801	          add qword [r14 + rax*8 + 8], 1	       575	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x4003394	      0xe92ffeffff	                           jmp 0x40031c8	       575	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x4003399	    0x498344c60801	          add qword [r14 + rax*8 + 8], 1	       575	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x400339f	      0xe94dfeffff	                           jmp 0x40031f1	       575	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x40033a4	    0x488b8424a000	            mov rax, qword [rsp + 0xa0] 	       575	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x40033ac	      0x4883400801	                  add qword [rax + 8], 1	       575	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x40033b1	      0xe966feffff	                           jmp 0x400321c	       575	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x40033b6	      0x4983464001	               add qword [r14 + 0x40], 1	       575	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x40033bb	      0xe989feffff	                           jmp 0x4003249	       575	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x40033c0	      0x488b5c2448	            mov rbx, qword [rsp + 0x48] 	       575	diff.c	ELSE_1	FUNCTION_11	FOR_2	WHILE_1	FOR_4	IF_11	IF_12
0x40033c5	    0x488b8c248800	            mov rcx, qword [rsp + 0x88] 	       296	diff.c	FUNCTION_9	FOR_1	IF_3
0x40033cd	        0x49894758	             mov qword [r15 + 0x58], rax	       502	diff.c	FUNCTION_10	IF_1	IF_2
0x40033d1	        0x488d1418	                    lea rdx, [rax + rbx]	       502	diff.c	FUNCTION_10	IF_1	IF_2
0x40033d5	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       295	diff.c	FUNCTION_9	FOR_1	IF_3
0x40033da	        0x48894a48	             mov qword [rdx + 0x48], rcx	       296	diff.c	FUNCTION_9	FOR_1	IF_3
0x40033de	        0x48895a08	                mov qword [rdx + 8], rbx	       295	diff.c	FUNCTION_9	FOR_1	IF_3
0x40033e2	      0x49837f6000	               cmp qword [r15 + 0x60], 0	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x40033e7	     0xf8446f6ffff	                            je 0x4002a33	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x40033ed	      0x807c246700	                cmp byte [rsp + 0x67], 0	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x40033f2	     0xf843bf6ffff	                            je 0x4002a33	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x40033f8	          0x4889da	                            mov rdx, rbx	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x40033fb	      0xe926f6ffff	                           jmp 0x4002a26	       298	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5
0x4003400	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       300	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x4003405	      0xe99ff7ffff	                           jmp 0x4002ba9	       300	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x400340a	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       300	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x400340f	      0xe951f6ffff	                           jmp 0x4002a65	       300	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x4003414	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       300	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x4003419	      0xe986f6ffff	                           jmp 0x4002aa4	       300	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x400341e	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       300	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x4003423	      0xe9bbf6ffff	                           jmp 0x4002ae3	       300	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x4003428	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       300	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x400342d	      0xe9c4f7ffff	                           jmp 0x4002bf6	       300	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x4003432	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       300	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x4003437	      0xe9e9f6ffff	                           jmp 0x4002b25	       300	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x400343c	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       300	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x4003441	      0xe921f7ffff	                           jmp 0x4002b67	       300	diff.c	FUNCTION_9	FOR_1	IF_3	FOR_2	IF_5	IF_6
0x4003446	    0x8b9c24b80000	            mov ebx, dword [rsp + 0xb8] 	       262	diff.c	FUNCTION_9	IF_1
0x400344d	    0xc74424400000	               mov dword [rsp + 0x40], 0	       263	diff.c	FUNCTION_9	IF_1
0x4003455	        0x895c2454	             mov dword [rsp + 0x54], ebx	       262	diff.c	FUNCTION_9	IF_1
0x4003459	      0xe996f1ffff	                           jmp 0x40025f4	       262	diff.c	FUNCTION_9	IF_1
0x400345e	        0x8b4c2468	            mov ecx, dword [rsp + 0x68] 	       275	diff.c	FUNCTION_9	ELSE_2
0x4003462	    0xc74424540000	               mov dword [rsp + 0x54], 0	       274	diff.c	FUNCTION_9	ELSE_2
0x400346a	            0xf7d9	                                 neg ecx	       275	diff.c	FUNCTION_9	ELSE_2
0x400346c	        0x894c2440	             mov dword [rsp + 0x40], ecx	       275	diff.c	FUNCTION_9	ELSE_2
0x4003470	      0xe97ff1ffff	                           jmp 0x40025f4	       275	diff.c	FUNCTION_9	ELSE_2
0x4003475	    0xc78424980000	               mov dword [rsp + 0x98], 1	       526	diff.c	ELSE_1	FUNCTION_11	FOR_1
0x4003480	      0xe96df9ffff	                           jmp 0x4002df2	       526	diff.c	ELSE_1	FUNCTION_11	FOR_1
0x4003485	      0xc644246701	                mov byte [rsp + 0x67], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x400348a	      0xc644246601	                mov byte [rsp + 0x66], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x400348f	      0xb804000000	                              mov eax, 4	       183	diff.c	FUNCTION_6	FOR_1
0x4003494	      0xc644246501	                mov byte [rsp + 0x65], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4003499	      0xc644246400	                mov byte [rsp + 0x64], 0	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x400349e	      0xc644246301	                mov byte [rsp + 0x63], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40034a3	      0xc644246201	                mov byte [rsp + 0x62], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40034a8	      0xc644246101	                mov byte [rsp + 0x61], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40034ad	      0xc644246001	                mov byte [rsp + 0x60], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40034b2	      0xe914f1ffff	                           jmp 0x40025cb	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40034b7	      0xc644246701	                mov byte [rsp + 0x67], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40034bc	      0xc644246601	                mov byte [rsp + 0x66], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40034c1	      0xb803000000	                              mov eax, 3	       183	diff.c	FUNCTION_6	FOR_1
0x40034c6	      0xc644246501	                mov byte [rsp + 0x65], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40034cb	      0xc644246401	                mov byte [rsp + 0x64], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40034d0	      0xc644246301	                mov byte [rsp + 0x63], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40034d5	      0xc644246201	                mov byte [rsp + 0x62], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40034da	      0xc644246101	                mov byte [rsp + 0x61], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40034df	      0xc644246000	                mov byte [rsp + 0x60], 0	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40034e4	      0xe9e2f0ffff	                           jmp 0x40025cb	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40034e9	      0xc644246701	                mov byte [rsp + 0x67], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40034ee	      0xc644246601	                mov byte [rsp + 0x66], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40034f3	      0xb802000000	                              mov eax, 2	       183	diff.c	FUNCTION_6	FOR_1
0x40034f8	      0xc644246501	                mov byte [rsp + 0x65], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40034fd	      0xc644246401	                mov byte [rsp + 0x64], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4003502	      0xc644246301	                mov byte [rsp + 0x63], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4003507	      0xc644246200	                mov byte [rsp + 0x62], 0	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x400350c	      0xc644246101	                mov byte [rsp + 0x61], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4003511	      0xc644246001	                mov byte [rsp + 0x60], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4003516	      0xe9b0f0ffff	                           jmp 0x40025cb	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x400351b	      0xc644246701	                mov byte [rsp + 0x67], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4003520	      0xc644246601	                mov byte [rsp + 0x66], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4003525	      0xb801000000	                              mov eax, 1	       183	diff.c	FUNCTION_6	FOR_1
0x400352a	      0xc644246501	                mov byte [rsp + 0x65], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x400352f	      0xc644246401	                mov byte [rsp + 0x64], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4003534	      0xc644246300	                mov byte [rsp + 0x63], 0	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4003539	      0xc644246201	                mov byte [rsp + 0x62], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x400353e	      0xc644246101	                mov byte [rsp + 0x61], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4003543	      0xc644246001	                mov byte [rsp + 0x60], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4003548	      0xe97ef0ffff	                           jmp 0x40025cb	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x400354d	    0xc78424980000	               mov dword [rsp + 0x98], 5	       526	diff.c	ELSE_1	FUNCTION_11	FOR_1
0x4003558	      0xe9aaf8ffff	                           jmp 0x4002e07	       526	diff.c	ELSE_1	FUNCTION_11	FOR_1
0x400355d	    0xc78424980000	               mov dword [rsp + 0x98], 4	       526	diff.c	ELSE_1	FUNCTION_11	FOR_1
0x4003568	      0xe99af8ffff	                           jmp 0x4002e07	       526	diff.c	ELSE_1	FUNCTION_11	FOR_1
0x400356d	    0xc78424980000	               mov dword [rsp + 0x98], 3	       526	diff.c	ELSE_1	FUNCTION_11	FOR_1
0x4003578	      0xe98af8ffff	                           jmp 0x4002e07	       526	diff.c	ELSE_1	FUNCTION_11	FOR_1
0x400357d	    0xc78424980000	               mov dword [rsp + 0x98], 2	       526	diff.c	ELSE_1	FUNCTION_11	FOR_1
0x4003588	      0xe97af8ffff	                           jmp 0x4002e07	       526	diff.c	ELSE_1	FUNCTION_11	FOR_1
0x400358d	      0xc644246701	                mov byte [rsp + 0x67], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4003592	      0xc644246601	                mov byte [rsp + 0x66], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4003597	      0xb807000000	                              mov eax, 7	       183	diff.c	FUNCTION_6	FOR_1
0x400359c	      0xc644246500	                mov byte [rsp + 0x65], 0	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40035a1	      0xc644246401	                mov byte [rsp + 0x64], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40035a6	      0xc644246301	                mov byte [rsp + 0x63], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40035ab	      0xc644246201	                mov byte [rsp + 0x62], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40035b0	      0xc644246101	                mov byte [rsp + 0x61], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40035b5	      0xc644246001	                mov byte [rsp + 0x60], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40035ba	      0xe90cf0ffff	                           jmp 0x40025cb	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40035bf	      0xc644246701	                mov byte [rsp + 0x67], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40035c4	      0xc644246600	                mov byte [rsp + 0x66], 0	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40035c9	      0xb806000000	                              mov eax, 6	       183	diff.c	FUNCTION_6	FOR_1
0x40035ce	      0xc644246501	                mov byte [rsp + 0x65], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40035d3	      0xc644246401	                mov byte [rsp + 0x64], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40035d8	      0xc644246301	                mov byte [rsp + 0x63], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40035dd	      0xc644246201	                mov byte [rsp + 0x62], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40035e2	      0xc644246101	                mov byte [rsp + 0x61], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40035e7	      0xc644246001	                mov byte [rsp + 0x60], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40035ec	      0xe9daefffff	                           jmp 0x40025cb	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40035f1	      0xc644246701	                mov byte [rsp + 0x67], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40035f6	      0xc644246601	                mov byte [rsp + 0x66], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x40035fb	      0xb805000000	                              mov eax, 5	       183	diff.c	FUNCTION_6	FOR_1
0x4003600	      0xc644246501	                mov byte [rsp + 0x65], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4003605	      0xc644246401	                mov byte [rsp + 0x64], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x400360a	      0xc644246301	                mov byte [rsp + 0x63], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x400360f	      0xc644246201	                mov byte [rsp + 0x62], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4003614	      0xc644246100	                mov byte [rsp + 0x61], 0	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4003619	      0xc644246001	                mov byte [rsp + 0x60], 1	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x400361e	      0xe9a8efffff	                           jmp 0x40025cb	       184	diff.c	FUNCTION_6	FOR_1	IF_1
0x4003623	    0xc78424980000	               mov dword [rsp + 0x98], 6	       526	diff.c	ELSE_1	FUNCTION_11	FOR_1
0x400362e	      0xe9d4f7ffff	                           jmp 0x4002e07	       526	diff.c	ELSE_1	FUNCTION_11	FOR_1
diff_move_to	IF,8:CALL,3:functions,0:FOR,1:SWITCH,0:ELSE,0:DO,0:WHILE,1	123
0x4007c90	            0x4154	                                push r12	      2521	diff.c	FUNCTION_41
0x4007c92	              0x55	                                push rbp	      2521	diff.c	FUNCTION_41
0x4007c93	            0x89fd	                            mov ebp, edi	      2521	diff.c	FUNCTION_41
0x4007c95	              0x53	                                push rbx	      2521	diff.c	FUNCTION_41
0x4007c96	        0x4883ec10	                           sub rsp, 0x10	      2521	diff.c	FUNCTION_41
0x4007c9a	    0x488b05000000	            mov rax, qword [0x04007ca1] 	      2521	diff.c	FUNCTION_41
0x4007ca1	    0x4c8b05000000	              mov r8, qword [0x04007ca8]	      2526	diff.c	FUNCTION_41	CALL_1
0x4007ca8	        0x4c3b4060	              cmp r8, qword [rax + 0x60]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4007cac	     0xf8486010000	                            je 0x4007e38	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4007cb2	        0x4c3b4068	              cmp r8, qword [rax + 0x68]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4007cb6	     0xf8484010000	                            je 0x4007e40	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4007cbc	        0x4c3b4070	              cmp r8, qword [rax + 0x70]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4007cc0	     0xf8485010000	                            je 0x4007e4b	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4007cc6	        0x4c3b4078	              cmp r8, qword [rax + 0x78]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4007cca	     0xf849c010000	                            je 0x4007e6c	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4007cd0	    0x4c3b80800000	              cmp r8, qword [rax + 0x80]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4007cd7	     0xf8484010000	                            je 0x4007e61	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4007cdd	    0x4c3b80880000	              cmp r8, qword [rax + 0x88]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4007ce4	     0xf848d010000	                            je 0x4007e77	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4007cea	    0x4c3b80900000	              cmp r8, qword [rax + 0x90]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4007cf1	     0xf845f010000	                            je 0x4007e56	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4007cf7	    0x4c3b80980000	              cmp r8, qword [rax + 0x98]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4007cfe	            0x740b	                            je 0x4007d0b	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4007d00	        0x4883c410	                           add rsp, 0x10	      2570	diff.c	FUNCTION_41
0x4007d04	            0x31c0	                            xor eax, eax	      2528	diff.c	FUNCTION_41	IF_1
0x4007d06	              0x5b	                                 pop rbx	      2570	diff.c	FUNCTION_41
0x4007d07	              0x5d	                                 pop rbp	      2570	diff.c	FUNCTION_41
0x4007d08	            0x415c	                                 pop r12	      2570	diff.c	FUNCTION_41
0x4007d0a	              0xc3	                                     ret	      2570	diff.c	FUNCTION_41
0x4007d0b	    0x41bc07000000	                             mov r12d, 7	       168	diff.c	FUNCTION_5	FOR_1
0x4007d11	        0x488b7858	            mov rdi, qword [rax + 0x58] 	      2527	diff.c	FUNCTION_41	IF_1
0x4007d15	          0x4885ff	                           test rdi, rdi	      2527	diff.c	FUNCTION_41	IF_1
0x4007d18	            0x74e6	                            je 0x4007d00	      2527	diff.c	FUNCTION_41	IF_1
0x4007d1a	    0x488b15000000	            mov rdx, qword [0x04007d21] 	      2523	diff.c	FUNCTION_41
0x4007d21	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2530	diff.c	FUNCTION_41	IF_2
0x4007d27	        0x488b5a38	            mov rbx, qword [rdx + 0x38] 	      2523	diff.c	FUNCTION_41
0x4007d2b	            0x85c0	                           test eax, eax	      2530	diff.c	FUNCTION_41	IF_2
0x4007d2d	          0x4989d9	                             mov r9, rbx	      2530	diff.c	FUNCTION_41	IF_2
0x4007d30	     0xf85c6000000	                           jne 0x4007dfc	      2530	diff.c	FUNCTION_41	IF_2
0x4007d36	          0x4963cc	                        movsxd rcx, r12d	      2530	diff.c	FUNCTION_41	IF_2
0x4007d39	     0xf1f80000000	                         nop dword [rax]	      2530	diff.c	FUNCTION_41	IF_2
0x4007d40	        0x4883ee01	                              sub rsi, 1	      2536	diff.c	FUNCTION_41	WHILE_1
0x4007d44	            0x7820	                            js 0x4007d66	      2536	diff.c	FUNCTION_41	WHILE_1
0x4007d46	          0x83fdff	             cmp ebp, 0xffffffffffffffff	      2539	diff.c	FUNCTION_41	WHILE_1	IF_4
0x4007d49	            0x747d	                            je 0x4007dc8	      2539	diff.c	FUNCTION_41	WHILE_1	IF_4
0x4007d4b	          0x83fd01	                              cmp ebp, 1	      2539	diff.c	FUNCTION_41	WHILE_1	IF_4
0x4007d4e	          0x4889f8	                            mov rax, rdi	      2539	diff.c	FUNCTION_41	WHILE_1	IF_4
0x4007d51	            0x744d	                            je 0x4007da0	      2539	diff.c	FUNCTION_41	WHILE_1	IF_4
0x4007d53	       0xf1f440000	                   nop dword [rax + rax]	      2539	diff.c	FUNCTION_41	WHILE_1	IF_4
0x4007d58	          0x488b00	                    mov rax, qword [rax]	      2542	diff.c	FUNCTION_41	WHILE_1	FOR_1
0x4007d5b	          0x4885c0	                           test rax, rax	      2544	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_5
0x4007d5e	            0x75f8	                           jne 0x4007d58	      2544	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_5
0x4007d60	        0x4883ee01	                              sub rsi, 1	      2536	diff.c	FUNCTION_41	WHILE_1
0x4007d64	            0x79e0	                           jns 0x4007d46	      2536	diff.c	FUNCTION_41	WHILE_1
0x4007d66	          0x498b00	                     mov rax, qword [r8]	      2558	diff.c	FUNCTION_41	IF_7
0x4007d69	          0x4839c3	                            cmp rbx, rax	      2558	diff.c	FUNCTION_41	IF_7
0x4007d6c	        0x480f4fd8	                          cmovg rbx, rax	      2558	diff.c	FUNCTION_41	IF_7
0x4007d70	          0x4939d9	                             cmp r9, rbx	      2562	diff.c	FUNCTION_41	IF_8
0x4007d73	            0x748b	                            je 0x4007d00	      2562	diff.c	FUNCTION_41	IF_8
0x4007d75	      0xe800000000	                          call 0x4007d7a	      2565	diff.c	FUNCTION_41	CALL_3
0x4007d7a	    0x488b05000000	            mov rax, qword [0x04007d81] 	      2566	diff.c	FUNCTION_41
0x4007d81	        0x48895838	             mov qword [rax + 0x38], rbx	      2566	diff.c	FUNCTION_41
0x4007d85	    0xc74040000000	               mov dword [rax + 0x40], 0	      2567	diff.c	FUNCTION_41
0x4007d8c	        0x4883c410	                           add rsp, 0x10	      2570	diff.c	FUNCTION_41
0x4007d90	              0x5b	                                 pop rbx	      2570	diff.c	FUNCTION_41
0x4007d91	      0xb801000000	                              mov eax, 1	      2569	diff.c	FUNCTION_41
0x4007d96	              0x5d	                                 pop rbp	      2570	diff.c	FUNCTION_41
0x4007d97	            0x415c	                                 pop r12	      2570	diff.c	FUNCTION_41
0x4007d99	              0xc3	                                     ret	      2570	diff.c	FUNCTION_41
0x4007d9a	    0x660f1f440000	                    nop word [rax + rax]	      2570	diff.c	FUNCTION_41
0x4007da0	      0x488b54c808	       mov rdx, qword [rax + rcx*8 + 8] 	      2546	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4007da5	          0x4839d3	                            cmp rbx, rdx	      2546	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4007da8	            0x7c12	                            jl 0x4007dbc	      2546	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4007daa	          0x488b00	                    mov rax, qword [rax]	      2542	diff.c	FUNCTION_41	WHILE_1	FOR_1
0x4007dad	          0x4885c0	                           test rax, rax	      2544	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_5
0x4007db0	            0x748e	                            je 0x4007d40	      2544	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_5
0x4007db2	      0x488b54c808	       mov rdx, qword [rax + rcx*8 + 8] 	      2546	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4007db7	          0x4839d3	                            cmp rbx, rdx	      2546	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4007dba	            0x7dee	                           jge 0x4007daa	      2546	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4007dbc	          0x4889d3	                            mov rbx, rdx	      2546	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4007dbf	      0xe97cffffff	                           jmp 0x4007d40	      2552	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4007dc4	         0xf1f4000	                         nop dword [rax]	      2552	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4007dc8	      0x483b5ccf08	       cmp rbx, qword [rdi + rcx*8 + 8] 	      2539	diff.c	FUNCTION_41	WHILE_1	IF_4
0x4007dcd	            0x7e97	                           jle 0x4007d66	      2539	diff.c	FUNCTION_41	WHILE_1	IF_4
0x4007dcf	          0x4889fa	                            mov rdx, rdi	      2539	diff.c	FUNCTION_41	WHILE_1	IF_4
0x4007dd2	          0x488b02	                    mov rax, qword [rdx]	      2548	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4007dd5	          0x4885c0	                           test rax, rax	      2548	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4007dd8	            0x7418	                            je 0x4007df2	      2548	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4007dda	    0x660f1f440000	                    nop word [rax + rax]	      2548	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4007de0	      0x483b5cc808	       cmp rbx, qword [rax + rcx*8 + 8] 	      2549	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4007de5	            0x7e0b	                           jle 0x4007df2	      2549	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4007de7	          0x4889c2	                            mov rdx, rax	      2549	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4007dea	          0x488b02	                    mov rax, qword [rdx]	      2548	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4007ded	          0x4885c0	                           test rax, rax	      2548	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4007df0	            0x75ee	                           jne 0x4007de0	      2548	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4007df2	      0x488b5cca08	       mov rbx, qword [rdx + rcx*8 + 8] 	      2548	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4007df7	      0xe944ffffff	                           jmp 0x4007d40	      2548	diff.c	FUNCTION_41	WHILE_1	FOR_1	IF_6
0x4007dfc	            0x31ff	                            xor edi, edi	      2531	diff.c	FUNCTION_41	CALL_2
0x4007dfe	      0x4889742408	                mov qword [rsp + 8], rsi	      2531	diff.c	FUNCTION_41	CALL_2
0x4007e03	      0xe800000000	                          call 0x4007e08	      2531	diff.c	FUNCTION_41	CALL_2
0x4007e08	    0x488b05000000	            mov rax, qword [0x04007e0f] 	      2533	diff.c	FUNCTION_41	IF_3
0x4007e0f	        0x488b7858	            mov rdi, qword [rax + 0x58] 	      2533	diff.c	FUNCTION_41	IF_3
0x4007e13	          0x4885ff	                           test rdi, rdi	      2533	diff.c	FUNCTION_41	IF_3
0x4007e16	     0xf84e4feffff	                            je 0x4007d00	      2533	diff.c	FUNCTION_41	IF_3
0x4007e1c	    0x488b05000000	            mov rax, qword [0x04007e23] 	      2533	diff.c	FUNCTION_41	IF_3
0x4007e23	    0x4c8b05000000	              mov r8, qword [0x04007e2a]	      2533	diff.c	FUNCTION_41	IF_3
0x4007e2a	      0x488b742408	                mov rsi, qword [rsp + 8]	      2533	diff.c	FUNCTION_41	IF_3
0x4007e2f	        0x4c8b4838	              mov r9, qword [rax + 0x38]	      2533	diff.c	FUNCTION_41	IF_3
0x4007e33	      0xe9fefeffff	                           jmp 0x4007d36	      2533	diff.c	FUNCTION_41	IF_3
0x4007e38	          0x4531e4	                          xor r12d, r12d	       168	diff.c	FUNCTION_5	FOR_1
0x4007e3b	      0xe9d1feffff	                           jmp 0x4007d11	       168	diff.c	FUNCTION_5	FOR_1
0x4007e40	    0x41bc01000000	                             mov r12d, 1	       168	diff.c	FUNCTION_5	FOR_1
0x4007e46	      0xe9c6feffff	                           jmp 0x4007d11	       168	diff.c	FUNCTION_5	FOR_1
0x4007e4b	    0x41bc02000000	                             mov r12d, 2	       168	diff.c	FUNCTION_5	FOR_1
0x4007e51	      0xe9bbfeffff	                           jmp 0x4007d11	       168	diff.c	FUNCTION_5	FOR_1
0x4007e56	    0x41bc06000000	                             mov r12d, 6	       168	diff.c	FUNCTION_5	FOR_1
0x4007e5c	      0xe9b0feffff	                           jmp 0x4007d11	       168	diff.c	FUNCTION_5	FOR_1
0x4007e61	    0x41bc04000000	                             mov r12d, 4	       168	diff.c	FUNCTION_5	FOR_1
0x4007e67	      0xe9a5feffff	                           jmp 0x4007d11	       168	diff.c	FUNCTION_5	FOR_1
0x4007e6c	    0x41bc03000000	                             mov r12d, 3	       168	diff.c	FUNCTION_5	FOR_1
0x4007e72	      0xe99afeffff	                           jmp 0x4007d11	       168	diff.c	FUNCTION_5	FOR_1
0x4007e77	    0x41bc05000000	                             mov r12d, 5	       168	diff.c	FUNCTION_5	FOR_1
0x4007e7d	      0xe98ffeffff	                           jmp 0x4007d11	       168	diff.c	FUNCTION_5	FOR_1
diff_check_fill	IF,2:CALL,1:functions,0:FOR,0:SWITCH,0:ELSE,0:DO,0:WHILE,0	355
0x40051b0	    0xf60500000000	               test byte [0x040051b7], 1	      1724	diff.c	FUNCTION_30	IF_1
0x40051b7	            0x7507	                           jne 0x40051c0	      1724	diff.c	FUNCTION_30	IF_1
0x40051b9	            0x31c0	                            xor eax, eax	      1728	diff.c	FUNCTION_30	IF_2
0x40051bb	              0xc3	                                     ret	      1730	diff.c	FUNCTION_30
0x40051bc	         0xf1f4000	                         nop dword [rax]	      1730	diff.c	FUNCTION_30
0x40051c0	    0x488b05000000	            mov rax, qword [0x040051c7] 	      1530	diff.c	FUNCTION_26	IF_1
0x40051c7	            0x4154	                                push r12	      1720	diff.c	FUNCTION_30
0x40051c9	              0x55	                                push rbp	      1720	diff.c	FUNCTION_30
0x40051ca	              0x53	                                push rbx	      1720	diff.c	FUNCTION_30
0x40051cb	          0x4889fd	                            mov rbp, rdi	      1720	diff.c	FUNCTION_30
0x40051ce	          0x4889f3	                            mov rbx, rsi	      1720	diff.c	FUNCTION_30
0x40051d1	        0x4c8b6708	                mov r12, qword [rdi + 8]	      1527	diff.c	FUNCTION_26
0x40051d5	    0x8b88a0000000	            mov ecx, dword [rax + 0xa0] 	      1530	diff.c	FUNCTION_26	IF_1
0x40051db	            0x85c9	                           test ecx, ecx	      1530	diff.c	FUNCTION_26	IF_1
0x40051dd	     0xf8585000000	                           jne 0x4005268	      1530	diff.c	FUNCTION_26	IF_1
0x40051e3	      0x4883785800	               cmp qword [rax + 0x58], 0	      1533	diff.c	FUNCTION_26	IF_2
0x40051e8	            0x7474	                            je 0x400525e	      1533	diff.c	FUNCTION_26	IF_2
0x40051ea	    0x8b95c0010000	           mov edx, dword [rbp + 0x1c0] 	      1537	diff.c	FUNCTION_26	IF_3
0x40051f0	            0x85d2	                           test edx, edx	      1537	diff.c	FUNCTION_26	IF_3
0x40051f2	            0x746a	                            je 0x400525e	      1537	diff.c	FUNCTION_26	IF_3
0x40051f4	          0x4885db	                           test rbx, rbx	      1537	diff.c	FUNCTION_26	IF_3
0x40051f7	            0x7e65	                           jle 0x400525e	      1537	diff.c	FUNCTION_26	IF_3
0x40051f9	        0x498b0c24	                    mov rcx, qword [r12]	      1537	diff.c	FUNCTION_26	IF_3
0x40051fd	        0x488d5101	                      lea rdx, [rcx + 1]	      1537	diff.c	FUNCTION_26	IF_3
0x4005201	          0x4839d3	                            cmp rbx, rdx	      1537	diff.c	FUNCTION_26	IF_3
0x4005204	            0x7f58	                            jg 0x400525e	      1537	diff.c	FUNCTION_26	IF_3
0x4005206	        0x4c3b6060	            cmp r12, qword [rax + 0x60] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x400520a	     0xf8404040000	                            je 0x4005614	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4005210	        0x4c3b6068	            cmp r12, qword [rax + 0x68] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4005214	     0xf8402040000	                            je 0x400561c	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x400521a	        0x4c3b6070	            cmp r12, qword [rax + 0x70] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x400521e	     0xf8403040000	                            je 0x4005627	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4005224	        0x4c3b6078	            cmp r12, qword [rax + 0x78] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4005228	     0xf8404040000	                            je 0x4005632	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x400522e	    0x4c3ba0800000	            cmp r12, qword [rax + 0x80] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4005235	     0xf8402040000	                            je 0x400563d	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x400523b	    0x4c3ba0880000	            cmp r12, qword [rax + 0x88] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4005242	     0xf8400040000	                            je 0x4005648	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4005248	    0x4c3ba0900000	            cmp r12, qword [rax + 0x90] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x400524f	     0xf84fe030000	                            je 0x4005653	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4005255	    0x4c3ba0980000	            cmp r12, qword [rax + 0x98] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x400525c	            0x741d	                            je 0x400527b	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x400525e	            0x31c0	                            xor eax, eax	      1728	diff.c	FUNCTION_30	IF_2
0x4005260	              0x5b	                                 pop rbx	      1730	diff.c	FUNCTION_30
0x4005261	              0x5d	                                 pop rbp	      1730	diff.c	FUNCTION_30
0x4005262	            0x415c	                                 pop r12	      1730	diff.c	FUNCTION_30
0x4005264	              0xc3	                                     ret	      1730	diff.c	FUNCTION_30
0x4005265	           0xf1f00	                         nop dword [rax]	      1730	diff.c	FUNCTION_30
0x4005268	            0x31ff	                            xor edi, edi	      1531	diff.c	FUNCTION_26	CALL_1
0x400526a	      0xe800000000	                          call 0x400526f	      1531	diff.c	FUNCTION_26	CALL_1
0x400526f	    0x488b05000000	            mov rax, qword [0x04005276] 	      1531	diff.c	FUNCTION_26	CALL_1
0x4005276	      0xe968ffffff	                           jmp 0x40051e3	      1531	diff.c	FUNCTION_26	CALL_1
0x400527b	    0x41bc07000000	                             mov r12d, 7	       168	diff.c	FUNCTION_5	FOR_1
0x4005281	     0xf1f80000000	                         nop dword [rax]	       168	diff.c	FUNCTION_5	FOR_1
0x4005288	          0x4531c9	                            xor r9d, r9d	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x400528b	            0x31c9	                            xor ecx, ecx	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x400528d	            0x31d2	                            xor edx, edx	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x400528f	    0x41b801000000	                              mov r8d, 1	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x4005295	          0x4889de	                            mov rsi, rbx	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x4005298	          0x4889ef	                            mov rdi, rbp	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x400529b	      0xe800000000	                          call 0x40052a0	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x40052a0	            0x85c0	                           test eax, eax	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x40052a2	            0x75ba	                           jne 0x400525e	      1546	diff.c	FUNCTION_26	IF_5	CALL_3
0x40052a4	    0x488b3d000000	            mov rdi, qword [0x040052ab] 	      1551	diff.c	FUNCTION_26	FOR_1
0x40052ab	        0x488b6f58	            mov rbp, qword [rdi + 0x58] 	      1551	diff.c	FUNCTION_26	FOR_1
0x40052af	          0x4885ed	                           test rbp, rbp	      1551	diff.c	FUNCTION_26	FOR_1
0x40052b2	            0x74aa	                            je 0x400525e	      1551	diff.c	FUNCTION_26	FOR_1
0x40052b4	          0x4963f4	                        movsxd rsi, r12d	      1551	diff.c	FUNCTION_26	FOR_1
0x40052b7	        0x48c1e603	                              shl rsi, 3	      1551	diff.c	FUNCTION_26	FOR_1
0x40052bb	            0xeb0c	                           jmp 0x40052c9	      1551	diff.c	FUNCTION_26	FOR_1
0x40052bd	           0xf1f00	                         nop dword [rax]	      1551	diff.c	FUNCTION_26	FOR_1
0x40052c0	        0x488b6d00	                    mov rbp, qword [rbp]	      1551	diff.c	FUNCTION_26	FOR_1
0x40052c4	          0x4885ed	                           test rbp, rbp	      1551	diff.c	FUNCTION_26	FOR_1
0x40052c7	            0x7495	                            je 0x400525e	      1551	diff.c	FUNCTION_26	FOR_1
0x40052c9	      0x488d443500	                    lea rax, [rbp + rsi]	      1551	diff.c	FUNCTION_26	FOR_1
0x40052ce	        0x488b4808	                mov rcx, qword [rax + 8]	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x40052d2	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x40052d6	        0x488d0411	                    lea rax, [rcx + rdx]	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x40052da	          0x4839c3	                            cmp rbx, rax	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x40052dd	            0x7fe1	                            jg 0x40052c0	      1552	diff.c	FUNCTION_26	FOR_1	IF_6
0x40052df	          0x4839cb	                            cmp rbx, rcx	      1554	diff.c	FUNCTION_26	IF_7
0x40052e2	     0xf8c76ffffff	                            jl 0x400525e	      1554	diff.c	FUNCTION_26	IF_7
0x40052e8	          0x4839c3	                            cmp rbx, rax	      1557	diff.c	FUNCTION_26	IF_8
0x40052eb	     0xf8d37020000	                           jge 0x4005528	      1557	diff.c	FUNCTION_26	IF_8
0x40052f1	          0x4585e4	                         test r12d, r12d	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x40052f4	     0xf8472040000	                            je 0x400576c	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x40052fa	      0x48837f6000	               cmp qword [rdi + 0x60], 0	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x40052ff	     0xf84fb020000	                            je 0x4005600	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x4005305	        0x488b4548	            mov rax, qword [rbp + 0x48] 	      1568	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x4005309	          0x4885c0	                           test rax, rax	      1568	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x400530c	     0xf84ee020000	                            je 0x4005600	      1568	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x4005312	          0x4839c2	                            cmp rdx, rax	      1572	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x4005315	     0xf8543ffffff	                           jne 0x400525e	      1572	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x400531b	      0xb801000000	                              mov eax, 1	      1574	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1
0x4005320	        0x4183fc01	                             cmp r12d, 1	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x4005324	            0x7424	                            je 0x400534a	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x4005326	      0x48837f6800	               cmp qword [rdi + 0x68], 0	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x400532b	            0x7417	                            je 0x4005344	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x400532d	        0x488b4d50	            mov rcx, qword [rbp + 0x50] 	      1568	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x4005331	          0x4885c9	                           test rcx, rcx	      1568	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x4005334	            0x740e	                            je 0x4005344	      1568	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x4005336	          0x4839ca	                            cmp rdx, rcx	      1572	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x4005339	     0xf851fffffff	                           jne 0x400525e	      1572	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x400533f	      0xb801000000	                              mov eax, 1	      1574	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1
0x4005344	        0x4183fc02	                             cmp r12d, 2	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x4005348	            0x7424	                            je 0x400536e	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x400534a	      0x48837f7000	               cmp qword [rdi + 0x70], 0	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x400534f	            0x7417	                            je 0x4005368	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x4005351	        0x488b4d58	            mov rcx, qword [rbp + 0x58] 	      1568	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x4005355	          0x4885c9	                           test rcx, rcx	      1568	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x4005358	            0x740e	                            je 0x4005368	      1568	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x400535a	          0x4839ca	                            cmp rdx, rcx	      1572	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x400535d	     0xf85fbfeffff	                           jne 0x400525e	      1572	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x4005363	      0xb801000000	                              mov eax, 1	      1574	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1
0x4005368	        0x4183fc03	                             cmp r12d, 3	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x400536c	            0x7424	                            je 0x4005392	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x400536e	      0x48837f7800	               cmp qword [rdi + 0x78], 0	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x4005373	            0x7417	                            je 0x400538c	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x4005375	        0x488b4d60	            mov rcx, qword [rbp + 0x60] 	      1568	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x4005379	          0x4885c9	                           test rcx, rcx	      1568	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x400537c	            0x740e	                            je 0x400538c	      1568	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x400537e	          0x4839ca	                            cmp rdx, rcx	      1572	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x4005381	     0xf85d7feffff	                           jne 0x400525e	      1572	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x4005387	      0xb801000000	                              mov eax, 1	      1574	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1
0x400538c	        0x4183fc04	                             cmp r12d, 4	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x4005390	            0x7427	                            je 0x40053b9	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x4005392	    0x4883bf800000	               cmp qword [rdi + 0x80], 0	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x400539a	            0x7417	                            je 0x40053b3	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x400539c	        0x488b4d68	            mov rcx, qword [rbp + 0x68] 	      1568	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x40053a0	          0x4885c9	                           test rcx, rcx	      1568	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x40053a3	            0x740e	                            je 0x40053b3	      1568	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x40053a5	          0x4839ca	                            cmp rdx, rcx	      1572	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x40053a8	     0xf85b0feffff	                           jne 0x400525e	      1572	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x40053ae	      0xb801000000	                              mov eax, 1	      1574	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1
0x40053b3	        0x4183fc05	                             cmp r12d, 5	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x40053b7	            0x7427	                            je 0x40053e0	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x40053b9	    0x4883bf880000	               cmp qword [rdi + 0x88], 0	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x40053c1	            0x7417	                            je 0x40053da	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x40053c3	        0x488b4d70	            mov rcx, qword [rbp + 0x70] 	      1568	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x40053c7	          0x4885c9	                           test rcx, rcx	      1568	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x40053ca	            0x740e	                            je 0x40053da	      1568	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x40053cc	          0x4839ca	                            cmp rdx, rcx	      1572	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x40053cf	     0xf8589feffff	                           jne 0x400525e	      1572	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x40053d5	      0xb801000000	                              mov eax, 1	      1574	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1
0x40053da	        0x4183fc06	                             cmp r12d, 6	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x40053de	            0x742b	                            je 0x400540b	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x40053e0	    0x4883bf900000	               cmp qword [rdi + 0x90], 0	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x40053e8	            0x7417	                            je 0x4005401	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x40053ea	        0x488b4d78	            mov rcx, qword [rbp + 0x78] 	      1568	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x40053ee	          0x4885c9	                           test rcx, rcx	      1568	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x40053f1	            0x740e	                            je 0x4005401	      1568	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x40053f3	          0x4839ca	                            cmp rdx, rcx	      1572	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x40053f6	     0xf8562feffff	                           jne 0x400525e	      1572	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x40053fc	      0xb801000000	                              mov eax, 1	      1574	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1
0x4005401	        0x4183fc07	                             cmp r12d, 7	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x4005405	     0xf8454030000	                            je 0x400575f	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x400540b	    0x4883bf980000	               cmp qword [rdi + 0x98], 0	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x4005413	     0xf84ee010000	                            je 0x4005607	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x4005419	    0x488b8d800000	            mov rcx, qword [rbp + 0x80] 	      1568	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x4005420	          0x4885c9	                           test rcx, rcx	      1568	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x4005423	     0xf84de010000	                            je 0x4005607	      1568	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x4005429	          0x4839ca	                            cmp rdx, rcx	      1572	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x400542c	     0xf852cfeffff	                           jne 0x400525e	      1572	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	ELSE_1	IF_11
0x4005432	          0x4585e4	                         test r12d, r12d	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x4005435	            0x7418	                            je 0x400544f	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x4005437	      0x48837f6000	               cmp qword [rdi + 0x60], 0	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x400543c	            0x740b	                            je 0x4005449	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x400543e	      0x48837d4800	               cmp qword [rbp + 0x48], 0	      1583	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x4005443	     0xf855d020000	                           jne 0x40056a6	      1583	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x4005449	        0x4183fc01	                             cmp r12d, 1	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x400544d	            0x7418	                            je 0x4005467	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x400544f	      0x48837f6800	               cmp qword [rdi + 0x68], 0	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x4005454	            0x740b	                            je 0x4005461	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x4005456	      0x48837d5000	               cmp qword [rbp + 0x50], 0	      1583	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x400545b	     0xf85fd010000	                           jne 0x400565e	      1583	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x4005461	        0x4183fc02	                             cmp r12d, 2	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x4005465	            0x7418	                            je 0x400547f	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x4005467	      0x48837f7000	               cmp qword [rdi + 0x70], 0	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x400546c	            0x740b	                            je 0x4005479	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x400546e	      0x48837d5800	               cmp qword [rbp + 0x58], 0	      1583	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x4005473	     0xf8509020000	                           jne 0x4005682	      1583	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x4005479	        0x4183fc03	                             cmp r12d, 3	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x400547d	            0x7418	                            je 0x4005497	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x400547f	      0x48837f7800	               cmp qword [rdi + 0x78], 0	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x4005484	            0x740b	                            je 0x4005491	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x4005486	      0x48837d6000	               cmp qword [rbp + 0x60], 0	      1583	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x400548b	     0xf857f020000	                           jne 0x4005710	      1583	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x4005491	        0x4183fc04	                             cmp r12d, 4	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x4005495	            0x741b	                            je 0x40054b2	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x4005497	    0x4883bf800000	               cmp qword [rdi + 0x80], 0	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x400549f	            0x740b	                            je 0x40054ac	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x40054a1	      0x48837d6800	               cmp qword [rbp + 0x68], 0	      1583	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x40054a6	     0xf8588020000	                           jne 0x4005734	      1583	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x40054ac	        0x4183fc05	                             cmp r12d, 5	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x40054b0	            0x741b	                            je 0x40054cd	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x40054b2	    0x4883bf880000	               cmp qword [rdi + 0x88], 0	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x40054ba	            0x740b	                            je 0x40054c7	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x40054bc	      0x48837d7000	               cmp qword [rbp + 0x70], 0	      1583	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x40054c1	     0xf8500020000	                           jne 0x40056c7	      1583	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x40054c7	        0x4183fc06	                             cmp r12d, 6	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x40054cb	            0x7426	                            je 0x40054f3	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x40054cd	    0x4883bf900000	               cmp qword [rdi + 0x90], 0	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x40054d5	            0x740b	                            je 0x40054e2	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x40054d7	      0x48837d7800	               cmp qword [rbp + 0x78], 0	      1583	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x40054dc	     0xf8509020000	                           jne 0x40056eb	      1583	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x40054e2	        0x4183fc07	                             cmp r12d, 7	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x40054e6	     0xf8472fdffff	                            je 0x400525e	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x40054ec	    0x488b3d000000	            mov rdi, qword [0x040054f3] 	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x40054f3	    0x4883bf980000	               cmp qword [rdi + 0x98], 0	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x40054fb	     0xf845dfdffff	                            je 0x400525e	      1582	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x4005501	    0x4883bd800000	               cmp qword [rbp + 0x80], 0	      1583	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x4005509	     0xf844ffdffff	                            je 0x400525e	      1583	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13
0x400550f	      0xba07000000	                              mov edx, 7	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x4005514	          0x4489e6	                           mov esi, r12d	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x4005517	          0x4889ef	                            mov rdi, rbp	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x400551a	      0xe8a1aeffff	               call sym.diff_equal_entry	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x400551f	      0xe93afdffff	                           jmp 0x400525e	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x4005524	         0xf1f4000	                         nop dword [rax]	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x4005528	    0xf60500000000	               test byte [0x0400552f], 1	      1598	diff.c	FUNCTION_26	IF_16
0x400552f	     0xf8429fdffff	                            je 0x400525e	      1598	diff.c	FUNCTION_26	IF_16
0x4005535	      0x48837f6000	               cmp qword [rdi + 0x60], 0	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x400553a	     0xf8418020000	                            je 0x4005758	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x4005540	        0x488b4548	            mov rax, qword [rbp + 0x48] 	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x4005544	      0xb900000000	                              mov ecx, 0	      1606	diff.c	FUNCTION_26	FOR_4	IF_17
0x4005549	          0x4885c0	                           test rax, rax	      1606	diff.c	FUNCTION_26	FOR_4	IF_17
0x400554c	           0xf4ec1	                         cmovle eax, ecx	      1606	diff.c	FUNCTION_26	FOR_4	IF_17
0x400554f	      0x48837f6800	               cmp qword [rdi + 0x68], 0	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x4005554	            0x740d	                            je 0x4005563	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x4005556	        0x488b4d50	            mov rcx, qword [rbp + 0x50] 	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x400555a	          0x4863f0	                         movsxd rsi, eax	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x400555d	          0x4839f1	                            cmp rcx, rsi	      1606	diff.c	FUNCTION_26	FOR_4	IF_17
0x4005560	           0xf4fc1	                          cmovg eax, ecx	      1606	diff.c	FUNCTION_26	FOR_4	IF_17
0x4005563	      0x48837f7000	               cmp qword [rdi + 0x70], 0	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x4005568	            0x740d	                            je 0x4005577	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x400556a	        0x488b4d58	            mov rcx, qword [rbp + 0x58] 	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x400556e	          0x4863f0	                         movsxd rsi, eax	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x4005571	          0x4839f1	                            cmp rcx, rsi	      1606	diff.c	FUNCTION_26	FOR_4	IF_17
0x4005574	           0xf4fc1	                          cmovg eax, ecx	      1606	diff.c	FUNCTION_26	FOR_4	IF_17
0x4005577	      0x48837f7800	               cmp qword [rdi + 0x78], 0	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x400557c	            0x740d	                            je 0x400558b	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x400557e	        0x488b4d60	            mov rcx, qword [rbp + 0x60] 	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x4005582	          0x4863f0	                         movsxd rsi, eax	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x4005585	          0x4839f1	                            cmp rcx, rsi	      1606	diff.c	FUNCTION_26	FOR_4	IF_17
0x4005588	           0xf4fc1	                          cmovg eax, ecx	      1606	diff.c	FUNCTION_26	FOR_4	IF_17
0x400558b	    0x4883bf800000	               cmp qword [rdi + 0x80], 0	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x4005593	            0x740d	                            je 0x40055a2	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x4005595	        0x488b4d68	            mov rcx, qword [rbp + 0x68] 	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x4005599	          0x4863f0	                         movsxd rsi, eax	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x400559c	          0x4839f1	                            cmp rcx, rsi	      1606	diff.c	FUNCTION_26	FOR_4	IF_17
0x400559f	           0xf4fc1	                          cmovg eax, ecx	      1606	diff.c	FUNCTION_26	FOR_4	IF_17
0x40055a2	    0x4883bf880000	               cmp qword [rdi + 0x88], 0	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x40055aa	            0x740d	                            je 0x40055b9	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x40055ac	        0x488b4d70	            mov rcx, qword [rbp + 0x70] 	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x40055b0	          0x4863f0	                         movsxd rsi, eax	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x40055b3	          0x4839f1	                            cmp rcx, rsi	      1606	diff.c	FUNCTION_26	FOR_4	IF_17
0x40055b6	           0xf4fc1	                          cmovg eax, ecx	      1606	diff.c	FUNCTION_26	FOR_4	IF_17
0x40055b9	    0x4883bf900000	               cmp qword [rdi + 0x90], 0	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x40055c1	            0x740d	                            je 0x40055d0	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x40055c3	        0x488b4d78	            mov rcx, qword [rbp + 0x78] 	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x40055c7	          0x4863f0	                         movsxd rsi, eax	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x40055ca	          0x4839f1	                            cmp rcx, rsi	      1606	diff.c	FUNCTION_26	FOR_4	IF_17
0x40055cd	           0xf4fc1	                          cmovg eax, ecx	      1606	diff.c	FUNCTION_26	FOR_4	IF_17
0x40055d0	    0x4883bf980000	               cmp qword [rdi + 0x98], 0	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x40055d8	            0x7410	                            je 0x40055ea	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x40055da	    0x488b8d800000	            mov rcx, qword [rbp + 0x80] 	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x40055e1	          0x4863f0	                         movsxd rsi, eax	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x40055e4	          0x4839f1	                            cmp rcx, rsi	      1606	diff.c	FUNCTION_26	FOR_4	IF_17
0x40055e7	           0xf4fc1	                          cmovg eax, ecx	      1606	diff.c	FUNCTION_26	FOR_4	IF_17
0x40055ea	            0x29d0	                            sub eax, edx	      1607	diff.c	FUNCTION_26
0x40055ec	            0x85c0	                           test eax, eax	      1727	diff.c	FUNCTION_30	IF_2
0x40055ee	     0xf8f6cfcffff	                            jg 0x4005260	      1727	diff.c	FUNCTION_30	IF_2
0x40055f4	      0xe965fcffff	                           jmp 0x400525e	      1727	diff.c	FUNCTION_30	IF_2
0x40055f9	     0xf1f80000000	                         nop dword [rax]	      1727	diff.c	FUNCTION_30	IF_2
0x4005600	            0x31c0	                            xor eax, eax	      1568	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x4005602	      0xe919fdffff	                           jmp 0x4005320	      1568	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9	IF_10
0x4005607	            0x85c0	                           test eax, eax	      1577	diff.c	FUNCTION_26	IF_8	IF_12
0x4005609	     0xf844ffcffff	                            je 0x400525e	      1577	diff.c	FUNCTION_26	IF_8	IF_12
0x400560f	      0xe91efeffff	                           jmp 0x4005432	      1577	diff.c	FUNCTION_26	IF_8	IF_12
0x4005614	          0x4531e4	                          xor r12d, r12d	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4005617	      0xe96cfcffff	                           jmp 0x4005288	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x400561c	    0x41bc01000000	                             mov r12d, 1	       168	diff.c	FUNCTION_5	FOR_1
0x4005622	      0xe961fcffff	                           jmp 0x4005288	       168	diff.c	FUNCTION_5	FOR_1
0x4005627	    0x41bc02000000	                             mov r12d, 2	       168	diff.c	FUNCTION_5	FOR_1
0x400562d	      0xe956fcffff	                           jmp 0x4005288	       168	diff.c	FUNCTION_5	FOR_1
0x4005632	    0x41bc03000000	                             mov r12d, 3	       168	diff.c	FUNCTION_5	FOR_1
0x4005638	      0xe94bfcffff	                           jmp 0x4005288	       168	diff.c	FUNCTION_5	FOR_1
0x400563d	    0x41bc04000000	                             mov r12d, 4	       168	diff.c	FUNCTION_5	FOR_1
0x4005643	      0xe940fcffff	                           jmp 0x4005288	       168	diff.c	FUNCTION_5	FOR_1
0x4005648	    0x41bc05000000	                             mov r12d, 5	       168	diff.c	FUNCTION_5	FOR_1
0x400564e	      0xe935fcffff	                           jmp 0x4005288	       168	diff.c	FUNCTION_5	FOR_1
0x4005653	    0x41bc06000000	                             mov r12d, 6	       168	diff.c	FUNCTION_5	FOR_1
0x4005659	      0xe92afcffff	                           jmp 0x4005288	       168	diff.c	FUNCTION_5	FOR_1
0x400565e	      0xba01000000	                              mov edx, 1	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x4005663	          0x4489e6	                           mov esi, r12d	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x4005666	          0x4889ef	                            mov rdi, rbp	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x4005669	      0xe852adffff	               call sym.diff_equal_entry	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x400566e	            0x85c0	                           test eax, eax	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x4005670	     0xf84e8fbffff	                            je 0x400525e	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x4005676	    0x488b3d000000	            mov rdi, qword [0x0400567d] 	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x400567d	      0xe9dffdffff	                           jmp 0x4005461	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x4005682	      0xba02000000	                              mov edx, 2	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x4005687	          0x4489e6	                           mov esi, r12d	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x400568a	          0x4889ef	                            mov rdi, rbp	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x400568d	      0xe82eadffff	               call sym.diff_equal_entry	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x4005692	            0x85c0	                           test eax, eax	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x4005694	     0xf84c4fbffff	                            je 0x400525e	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x400569a	    0x488b3d000000	            mov rdi, qword [0x040056a1] 	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x40056a1	      0xe9d3fdffff	                           jmp 0x4005479	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x40056a6	            0x31d2	                            xor edx, edx	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x40056a8	          0x4489e6	                           mov esi, r12d	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x40056ab	          0x4889ef	                            mov rdi, rbp	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x40056ae	      0xe80dadffff	               call sym.diff_equal_entry	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x40056b3	            0x85c0	                           test eax, eax	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x40056b5	     0xf84a3fbffff	                            je 0x400525e	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x40056bb	    0x488b3d000000	            mov rdi, qword [0x040056c2] 	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x40056c2	      0xe982fdffff	                           jmp 0x4005449	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x40056c7	      0xba05000000	                              mov edx, 5	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x40056cc	          0x4489e6	                           mov esi, r12d	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x40056cf	          0x4889ef	                            mov rdi, rbp	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x40056d2	      0xe8e9acffff	               call sym.diff_equal_entry	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x40056d7	            0x85c0	                           test eax, eax	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x40056d9	     0xf847ffbffff	                            je 0x400525e	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x40056df	    0x488b3d000000	            mov rdi, qword [0x040056e6] 	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x40056e6	      0xe9dcfdffff	                           jmp 0x40054c7	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x40056eb	      0xba06000000	                              mov edx, 6	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x40056f0	          0x4489e6	                           mov esi, r12d	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x40056f3	          0x4889ef	                            mov rdi, rbp	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x40056f6	      0xe8c5acffff	               call sym.diff_equal_entry	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x40056fb	            0x85c0	                           test eax, eax	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x40056fd	     0xf85dffdffff	                           jne 0x40054e2	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x4005703	      0xe956fbffff	                           jmp 0x400525e	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x4005708	     0xf1f84000000	                   nop dword [rax + rax]	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x4005710	      0xba03000000	                              mov edx, 3	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x4005715	          0x4489e6	                           mov esi, r12d	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x4005718	          0x4889ef	                            mov rdi, rbp	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x400571b	      0xe8a0acffff	               call sym.diff_equal_entry	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x4005720	            0x85c0	                           test eax, eax	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x4005722	     0xf8436fbffff	                            je 0x400525e	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x4005728	    0x488b3d000000	            mov rdi, qword [0x0400572f] 	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x400572f	      0xe95dfdffff	                           jmp 0x4005491	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x4005734	      0xba04000000	                              mov edx, 4	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x4005739	          0x4489e6	                           mov esi, r12d	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x400573c	          0x4889ef	                            mov rdi, rbp	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x400573f	      0xe87cacffff	               call sym.diff_equal_entry	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x4005744	            0x85c0	                           test eax, eax	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x4005746	     0xf8412fbffff	                            je 0x400525e	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x400574c	    0x488b3d000000	            mov rdi, qword [0x04005753] 	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x4005753	      0xe954fdffff	                           jmp 0x40054ac	      1584	diff.c	FUNCTION_26	IF_8	IF_12	FOR_3	IF_13	IF_14	CALL_4
0x4005758	            0x31c0	                            xor eax, eax	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x400575a	      0xe9f0fdffff	                           jmp 0x400554f	      1605	diff.c	FUNCTION_26	FOR_4	IF_17
0x400575f	            0x85c0	                           test eax, eax	      1577	diff.c	FUNCTION_26	IF_8	IF_12
0x4005761	     0xf84f7faffff	                            je 0x400525e	      1577	diff.c	FUNCTION_26	IF_8	IF_12
0x4005767	      0xe9cbfcffff	                           jmp 0x4005437	      1577	diff.c	FUNCTION_26	IF_8	IF_12
0x400576c	            0x31c0	                            xor eax, eax	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
0x400576e	      0xe9b3fbffff	                           jmp 0x4005326	      1566	diff.c	FUNCTION_26	IF_8	FOR_2	IF_9
diff_lnum_win	IF,6:CALL,3:functions,0:FOR,1:SWITCH,0:ELSE,0:DO,0:WHILE,0	129
0x4007eb0	    0x4c8b05000000	              mov r8, qword [0x04007eb7]	      2652	diff.c	FUNCTION_44
0x4007eb7	            0x4154	                                push r12	      2652	diff.c	FUNCTION_44
0x4007eb9	    0x488b15000000	            mov rdx, qword [0x04007ec0] 	      2658	diff.c	FUNCTION_44	CALL_1
0x4007ec0	              0x55	                                push rbp	      2652	diff.c	FUNCTION_44
0x4007ec1	              0x53	                                push rbx	      2652	diff.c	FUNCTION_44
0x4007ec2	        0x493b5060	              cmp rdx, qword [r8 + 0x60]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4007ec6	     0xf8487010000	                            je 0x4008053	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4007ecc	        0x493b5068	              cmp rdx, qword [r8 + 0x68]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4007ed0	     0xf8484010000	                            je 0x400805a	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4007ed6	        0x493b5070	              cmp rdx, qword [r8 + 0x70]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4007eda	     0xf8484010000	                            je 0x4008064	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4007ee0	        0x493b5078	              cmp rdx, qword [r8 + 0x78]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4007ee4	     0xf8484010000	                            je 0x400806e	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4007eea	    0x493b90800000	              cmp rdx, qword [r8 + 0x80]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4007ef1	     0xf8481010000	                            je 0x4008078	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4007ef7	    0x493b90880000	              cmp rdx, qword [r8 + 0x88]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4007efe	     0xf847e010000	                            je 0x4008082	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4007f04	    0x493b90900000	              cmp rdx, qword [r8 + 0x90]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4007f0b	     0xf847b010000	                            je 0x400808c	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4007f11	    0x493b90980000	              cmp rdx, qword [r8 + 0x98]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4007f18	            0x7407	                            je 0x4007f21	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4007f1a	              0x5b	                                 pop rbx	      2684	diff.c	FUNCTION_44
0x4007f1b	            0x31c0	                            xor eax, eax	      2660	diff.c	FUNCTION_44	IF_1
0x4007f1d	              0x5d	                                 pop rbp	      2684	diff.c	FUNCTION_44
0x4007f1e	            0x415c	                                 pop r12	      2684	diff.c	FUNCTION_44
0x4007f20	              0xc3	                                     ret	      2684	diff.c	FUNCTION_44
0x4007f21	      0xbd07000000	                              mov ebp, 7	       168	diff.c	FUNCTION_5	FOR_1
0x4007f26	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       168	diff.c	FUNCTION_5	FOR_1
0x4007f30	    0x418b80a00000	              mov eax, dword [r8 + 0xa0]	      2662	diff.c	FUNCTION_44	IF_2
0x4007f37	          0x4989f4	                            mov r12, rsi	      2662	diff.c	FUNCTION_44	IF_2
0x4007f3a	          0x4889fb	                            mov rbx, rdi	      2662	diff.c	FUNCTION_44	IF_2
0x4007f3d	            0x85c0	                           test eax, eax	      2662	diff.c	FUNCTION_44	IF_2
0x4007f3f	     0xf85fb000000	                           jne 0x4008040	      2662	diff.c	FUNCTION_44	IF_2
0x4007f45	        0x498b5058	              mov rdx, qword [r8 + 0x58]	      2666	diff.c	FUNCTION_44	FOR_1
0x4007f49	          0x4885d2	                           test rdx, rdx	      2666	diff.c	FUNCTION_44	FOR_1
0x4007f4c	            0x743e	                            je 0x4007f8c	      2666	diff.c	FUNCTION_44	FOR_1
0x4007f4e	          0x4863fd	                         movsxd rdi, ebp	      2666	diff.c	FUNCTION_44	FOR_1
0x4007f51	        0x48c1e703	                              shl rdi, 3	      2666	diff.c	FUNCTION_44	FOR_1
0x4007f55	        0x488d0c3a	                    lea rcx, [rdx + rdi]	      2666	diff.c	FUNCTION_44	FOR_1
0x4007f59	        0x488b4108	                mov rax, qword [rcx + 8]	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x4007f5d	          0x4889c6	                            mov rsi, rax	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x4007f60	        0x48037148	             add rsi, qword [rcx + 0x48]	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x4007f64	          0x4839f3	                            cmp rbx, rsi	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x4007f67	            0x7f1b	                            jg 0x4007f84	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x4007f69	            0xeb45	                           jmp 0x4007fb0	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x4007f6b	       0xf1f440000	                   nop dword [rax + rax]	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x4007f70	        0x488d0c3a	                    lea rcx, [rdx + rdi]	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x4007f74	        0x488b4108	                mov rax, qword [rcx + 8]	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x4007f78	          0x4889c6	                            mov rsi, rax	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x4007f7b	        0x48037148	             add rsi, qword [rcx + 0x48]	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x4007f7f	          0x4839de	                            cmp rsi, rbx	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x4007f82	            0x7d2c	                           jge 0x4007fb0	      2667	diff.c	FUNCTION_44	FOR_1	IF_3
0x4007f84	          0x488b12	                    mov rdx, qword [rdx]	      2666	diff.c	FUNCTION_44	FOR_1
0x4007f87	          0x4885d2	                           test rdx, rdx	      2666	diff.c	FUNCTION_44	FOR_1
0x4007f8a	            0x75e4	                           jne 0x4007f70	      2666	diff.c	FUNCTION_44	FOR_1
0x4007f8c	    0x488b15000000	            mov rdx, qword [0x04007f93] 	      2672	diff.c	FUNCTION_44	IF_4
0x4007f93	      0x498b442408	                mov rax, qword [r12 + 8]	      2672	diff.c	FUNCTION_44	IF_4
0x4007f98	          0x482b1a	                    sub rbx, qword [rdx]	      2672	diff.c	FUNCTION_44	IF_4
0x4007f9b	          0x480318	                    add rbx, qword [rax]	      2672	diff.c	FUNCTION_44	IF_4
0x4007f9e	          0x4889d8	                            mov rax, rbx	      2672	diff.c	FUNCTION_44	IF_4
0x4007fa1	              0x5b	                                 pop rbx	      2684	diff.c	FUNCTION_44
0x4007fa2	              0x5d	                                 pop rbp	      2684	diff.c	FUNCTION_44
0x4007fa3	            0x415c	                                 pop r12	      2684	diff.c	FUNCTION_44
0x4007fa5	              0xc3	                                     ret	      2684	diff.c	FUNCTION_44
0x4007fa6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2684	diff.c	FUNCTION_44
0x4007fb0	      0x498b4c2408	                mov rcx, qword [r12 + 8]	      2676	diff.c	FUNCTION_44	CALL_3
0x4007fb5	        0x493b4860	              cmp rcx, qword [r8 + 0x60]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4007fb9	     0xf84d7000000	                            je 0x4008096	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4007fbf	        0x493b4868	              cmp rcx, qword [r8 + 0x68]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4007fc3	     0xf84d4000000	                            je 0x400809d	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4007fc9	        0x493b4870	              cmp rcx, qword [r8 + 0x70]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4007fcd	     0xf84d4000000	                            je 0x40080a7	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4007fd3	        0x493b4878	              cmp rcx, qword [r8 + 0x78]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4007fd7	     0xf84d4000000	                            je 0x40080b1	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4007fdd	    0x493b88800000	              cmp rcx, qword [r8 + 0x80]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4007fe4	     0xf84d1000000	                            je 0x40080bb	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4007fea	    0x493b88880000	              cmp rcx, qword [r8 + 0x88]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4007ff1	     0xf84ce000000	                            je 0x40080c5	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4007ff7	    0x493b88900000	              cmp rcx, qword [r8 + 0x90]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4007ffe	     0xf84cb000000	                            je 0x40080cf	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4008004	    0x493b88980000	              cmp rcx, qword [r8 + 0x98]	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x400800b	     0xf8509ffffff	                           jne 0x4007f1a	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4008011	      0xb907000000	                              mov ecx, 7	       168	diff.c	FUNCTION_5	FOR_1
0x4008016	        0x488d0cca	                  lea rcx, [rdx + rcx*8]	       168	diff.c	FUNCTION_5	FOR_1
0x400801a	        0x488b5108	                mov rdx, qword [rcx + 8]	      2680	diff.c	FUNCTION_44
0x400801e	          0x4889d7	                            mov rdi, rdx	      2680	diff.c	FUNCTION_44
0x4008021	          0x4829c7	                            sub rdi, rax	      2680	diff.c	FUNCTION_44
0x4008024	          0x4889d0	                            mov rax, rdx	      2680	diff.c	FUNCTION_44
0x4008027	        0x48034148	             add rax, qword [rcx + 0x48]	      2680	diff.c	FUNCTION_44
0x400802b	          0x4801fb	                            add rbx, rdi	      2680	diff.c	FUNCTION_44
0x400802e	          0x4839c3	                            cmp rbx, rax	      2680	diff.c	FUNCTION_44
0x4008031	        0x480f4ec3	                         cmovle rax, rbx	      2680	diff.c	FUNCTION_44
0x4008035	              0x5b	                                 pop rbx	      2684	diff.c	FUNCTION_44
0x4008036	              0x5d	                                 pop rbp	      2684	diff.c	FUNCTION_44
0x4008037	            0x415c	                                 pop r12	      2684	diff.c	FUNCTION_44
0x4008039	              0xc3	                                     ret	      2684	diff.c	FUNCTION_44
0x400803a	    0x660f1f440000	                    nop word [rax + rax]	      2684	diff.c	FUNCTION_44
0x4008040	            0x31ff	                            xor edi, edi	      2663	diff.c	FUNCTION_44	CALL_2
0x4008042	      0xe800000000	                          call 0x4008047	      2663	diff.c	FUNCTION_44	CALL_2
0x4008047	    0x4c8b05000000	              mov r8, qword [0x0400804e]	      2663	diff.c	FUNCTION_44	CALL_2
0x400804e	      0xe9f2feffff	                           jmp 0x4007f45	      2663	diff.c	FUNCTION_44	CALL_2
0x4008053	            0x31ed	                            xor ebp, ebp	       168	diff.c	FUNCTION_5	FOR_1
0x4008055	      0xe9d6feffff	                           jmp 0x4007f30	       168	diff.c	FUNCTION_5	FOR_1
0x400805a	      0xbd01000000	                              mov ebp, 1	       168	diff.c	FUNCTION_5	FOR_1
0x400805f	      0xe9ccfeffff	                           jmp 0x4007f30	       168	diff.c	FUNCTION_5	FOR_1
0x4008064	      0xbd02000000	                              mov ebp, 2	       168	diff.c	FUNCTION_5	FOR_1
0x4008069	      0xe9c2feffff	                           jmp 0x4007f30	       168	diff.c	FUNCTION_5	FOR_1
0x400806e	      0xbd03000000	                              mov ebp, 3	       168	diff.c	FUNCTION_5	FOR_1
0x4008073	      0xe9b8feffff	                           jmp 0x4007f30	       168	diff.c	FUNCTION_5	FOR_1
0x4008078	      0xbd04000000	                              mov ebp, 4	       168	diff.c	FUNCTION_5	FOR_1
0x400807d	      0xe9aefeffff	                           jmp 0x4007f30	       168	diff.c	FUNCTION_5	FOR_1
0x4008082	      0xbd05000000	                              mov ebp, 5	       168	diff.c	FUNCTION_5	FOR_1
0x4008087	      0xe9a4feffff	                           jmp 0x4007f30	       168	diff.c	FUNCTION_5	FOR_1
0x400808c	      0xbd06000000	                              mov ebp, 6	       168	diff.c	FUNCTION_5	FOR_1
0x4008091	      0xe99afeffff	                           jmp 0x4007f30	       168	diff.c	FUNCTION_5	FOR_1
0x4008096	            0x31c9	                            xor ecx, ecx	       168	diff.c	FUNCTION_5	FOR_1
0x4008098	      0xe979ffffff	                           jmp 0x4008016	       168	diff.c	FUNCTION_5	FOR_1
0x400809d	      0xb901000000	                              mov ecx, 1	       168	diff.c	FUNCTION_5	FOR_1
0x40080a2	      0xe96fffffff	                           jmp 0x4008016	       168	diff.c	FUNCTION_5	FOR_1
0x40080a7	      0xb902000000	                              mov ecx, 2	       168	diff.c	FUNCTION_5	FOR_1
0x40080ac	      0xe965ffffff	                           jmp 0x4008016	       168	diff.c	FUNCTION_5	FOR_1
0x40080b1	      0xb903000000	                              mov ecx, 3	       168	diff.c	FUNCTION_5	FOR_1
0x40080b6	      0xe95bffffff	                           jmp 0x4008016	       168	diff.c	FUNCTION_5	FOR_1
0x40080bb	      0xb904000000	                              mov ecx, 4	       168	diff.c	FUNCTION_5	FOR_1
0x40080c0	      0xe951ffffff	                           jmp 0x4008016	       168	diff.c	FUNCTION_5	FOR_1
0x40080c5	      0xb905000000	                              mov ecx, 5	       168	diff.c	FUNCTION_5	FOR_1
0x40080ca	      0xe947ffffff	                           jmp 0x4008016	       168	diff.c	FUNCTION_5	FOR_1
0x40080cf	      0xb906000000	                              mov ecx, 6	       168	diff.c	FUNCTION_5	FOR_1
0x40080d4	      0xe93dffffff	                           jmp 0x4008016	       168	diff.c	FUNCTION_5	FOR_1
diff_get_corresponding_line_int	IF,7:CALL,3:functions,0:FOR,1:SWITCH,0:ELSE,0:DO,0:WHILE,0	165
0x40015b0	            0x4154	                                push r12	      2580	diff.c	FUNCTION_42
0x40015b2	              0x55	                                push rbp	      2580	diff.c	FUNCTION_42
0x40015b3	              0x53	                                push rbx	      2580	diff.c	FUNCTION_42
0x40015b4	        0x4883ec10	                           sub rsp, 0x10	      2580	diff.c	FUNCTION_42
0x40015b8	    0x488b05000000	            mov rax, qword [0x040015bf] 	      2580	diff.c	FUNCTION_42
0x40015bf	        0x488b4860	            mov rcx, qword [rax + 0x60] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40015c3	          0x4839cf	                            cmp rdi, rcx	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40015c6	     0xf84c2000000	                            je 0x400168e	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40015cc	        0x483b7868	            cmp rdi, qword [rax + 0x68] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40015d0	     0xf84fa010000	                            je 0x40017d0	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40015d6	        0x483b7870	            cmp rdi, qword [rax + 0x70] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40015da	     0xf8402020000	                            je 0x40017e2	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40015e0	        0x483b7878	            cmp rdi, qword [rax + 0x78] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40015e4	     0xf840a020000	                            je 0x40017f4	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40015ea	    0x483bb8800000	            cmp rdi, qword [rax + 0x80] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40015f1	     0xf8408020000	                            je 0x40017ff	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40015f7	    0x483bb8880000	            cmp rdi, qword [rax + 0x88] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40015fe	     0xf8414020000	                            je 0x4001818	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4001604	    0x483bb8900000	            cmp rdi, qword [rax + 0x90] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x400160b	     0xf8412020000	                            je 0x4001823	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4001611	    0x483bb8980000	            cmp rdi, qword [rax + 0x98] 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4001618	     0xf8417020000	                            je 0x4001835	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x400161e	    0x488b15000000	            mov rdx, qword [0x04001625] 	      2587	diff.c	FUNCTION_42	CALL_2
0x4001625	          0x4839d1	                            cmp rcx, rdx	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4001628	            0x7458	                            je 0x4001682	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x400162a	    0x41bc08000000	                             mov r12d, 8	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4001630	        0x48395068	            cmp qword [rax + 0x68], rdx 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4001634	     0xf847a010000	                            je 0x40017b4	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x400163a	        0x48395070	            cmp qword [rax + 0x70], rdx 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x400163e	     0xf8497010000	                            je 0x40017db	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4001644	        0x48395078	            cmp qword [rax + 0x78], rdx 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4001648	     0xf849f010000	                            je 0x40017ed	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x400164e	    0x483990800000	            cmp qword [rax + 0x80], rdx 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4001655	     0xf84af010000	                            je 0x400180a	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x400165b	    0x483990880000	            cmp qword [rax + 0x88], rdx 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4001662	     0xf84a9010000	                            je 0x4001811	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4001668	    0x483990900000	            cmp qword [rax + 0x90], rdx 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x400166f	     0xf84b9010000	                            je 0x400182e	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4001675	    0x483990980000	            cmp qword [rax + 0x98], rdx 	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x400167c	     0xf84be010000	                            je 0x4001840	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x4001682	          0x4889f0	                            mov rax, rsi	      2612	diff.c	FUNCTION_42	FOR_1	IF_7
0x4001685	        0x4883c410	                           add rsp, 0x10	      2629	diff.c	FUNCTION_42
0x4001689	              0x5b	                                 pop rbx	      2629	diff.c	FUNCTION_42
0x400168a	              0x5d	                                 pop rbp	      2629	diff.c	FUNCTION_42
0x400168b	            0x415c	                                 pop r12	      2629	diff.c	FUNCTION_42
0x400168d	              0xc3	                                     ret	      2629	diff.c	FUNCTION_42
0x400168e	          0x4531e4	                          xor r12d, r12d	       168	diff.c	FUNCTION_5	FOR_1
0x4001691	     0xf1f80000000	                         nop dword [rax]	       168	diff.c	FUNCTION_5	FOR_1
0x4001698	    0x488b15000000	            mov rdx, qword [0x0400169f] 	      2587	diff.c	FUNCTION_42	CALL_2
0x400169f	          0x4839ca	                            cmp rdx, rcx	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40016a2	            0x758c	                           jne 0x4001630	       169	diff.c	FUNCTION_5	FOR_1	IF_1
0x40016a4	            0x31db	                            xor ebx, ebx	       168	diff.c	FUNCTION_5	FOR_1
0x40016a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       168	diff.c	FUNCTION_5	FOR_1
0x40016b0	        0x488b4858	            mov rcx, qword [rax + 0x58] 	      2588	diff.c	FUNCTION_42	IF_1
0x40016b4	          0x4885c9	                           test rcx, rcx	      2588	diff.c	FUNCTION_42	IF_1
0x40016b7	            0x74c9	                            je 0x4001682	      2588	diff.c	FUNCTION_42	IF_1
0x40016b9	    0x8b80a0000000	            mov eax, dword [rax + 0xa0] 	      2591	diff.c	FUNCTION_42	IF_2
0x40016bf	            0x85c0	                           test eax, eax	      2591	diff.c	FUNCTION_42	IF_2
0x40016c1	     0xf8599000000	                           jne 0x4001760	      2591	diff.c	FUNCTION_42	IF_2
0x40016c7	          0x4d63c4	                         movsxd r8, r12d	      2591	diff.c	FUNCTION_42	IF_2
0x40016ca	          0x4c63db	                         movsxd r11, ebx	      2591	diff.c	FUNCTION_42	IF_2
0x40016cd	    0x488b2d000000	            mov rbp, qword [0x040016d4] 	      2612	diff.c	FUNCTION_42	FOR_1	IF_7
0x40016d4	            0x31d2	                            xor edx, edx	      2612	diff.c	FUNCTION_42	FOR_1	IF_7
0x40016d6	        0x49c1e003	                               shl r8, 3	      2612	diff.c	FUNCTION_42	FOR_1	IF_7
0x40016da	        0x49c1e303	                              shl r11, 3	      2612	diff.c	FUNCTION_42	FOR_1	IF_7
0x40016de	            0xeb33	                           jmp 0x4001713	      2612	diff.c	FUNCTION_42	FOR_1	IF_7
0x40016e0	          0x4885d2	                           test rdx, rdx	      2611	diff.c	FUNCTION_42	FOR_1	IF_7
0x40016e3	            0x754d	                           jne 0x4001732	      2611	diff.c	FUNCTION_42	FOR_1	IF_7
0x40016e5	        0x4e8d1419	                    lea r10, [rcx + r11]	      2611	diff.c	FUNCTION_42	FOR_1	IF_7
0x40016e9	        0x488b4538	            mov rax, qword [rbp + 0x38] 	      2612	diff.c	FUNCTION_42	FOR_1	IF_7
0x40016ed	        0x4d8b4a08	                 mov r9, qword [r10 + 8]	      2612	diff.c	FUNCTION_42	FOR_1	IF_7
0x40016f1	        0x4d8b5248	            mov r10, qword [r10 + 0x48] 	      2613	diff.c	FUNCTION_42	FOR_1	IF_7
0x40016f5	          0x4939c1	                             cmp r9, rax	      2612	diff.c	FUNCTION_42	FOR_1	IF_7
0x40016f8	            0x7f09	                            jg 0x4001703	      2612	diff.c	FUNCTION_42	FOR_1	IF_7
0x40016fa	        0x4f8d2411	                     lea r12, [r9 + r10]	      2613	diff.c	FUNCTION_42	FOR_1	IF_7
0x40016fe	          0x4c39e0	                            cmp rax, r12	      2613	diff.c	FUNCTION_42	FOR_1	IF_7
0x4001701	            0x7c82	                            jl 0x4001685	      2613	diff.c	FUNCTION_42	FOR_1	IF_7
0x4001703	          0x488b09	                    mov rcx, qword [rcx]	      2597	diff.c	FUNCTION_42	FOR_1
0x4001706	             0x1fa	                            add edx, edi	      2623	diff.c	FUNCTION_42	FOR_1
0x4001708	          0x4429ca	                            sub edx, r9d	      2623	diff.c	FUNCTION_42	FOR_1
0x400170b	          0x4429d2	                           sub edx, r10d	      2623	diff.c	FUNCTION_42	FOR_1
0x400170e	          0x4885c9	                           test rcx, rcx	      2597	diff.c	FUNCTION_42	FOR_1
0x4001711	            0x743b	                            je 0x400174e	      2597	diff.c	FUNCTION_42	FOR_1
0x4001713	        0x4a8d0401	                     lea rax, [rcx + r8]	      2597	diff.c	FUNCTION_42	FOR_1
0x4001717	        0x488b7808	                mov rdi, qword [rax + 8]	      2599	diff.c	FUNCTION_42	FOR_1	IF_4
0x400171b	          0x4839fe	                            cmp rsi, rdi	      2599	diff.c	FUNCTION_42	FOR_1	IF_4
0x400171e	            0x7c2e	                            jl 0x400174e	      2599	diff.c	FUNCTION_42	FOR_1	IF_4
0x4001720	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      2601	diff.c	FUNCTION_42	FOR_1	IF_5
0x4001724	        0x488d0417	                    lea rax, [rdi + rdx]	      2601	diff.c	FUNCTION_42	FOR_1	IF_5
0x4001728	          0x4839c6	                            cmp rsi, rax	      2601	diff.c	FUNCTION_42	FOR_1	IF_5
0x400172b	            0x7c63	                            jl 0x4001790	      2601	diff.c	FUNCTION_42	FOR_1	IF_5
0x400172d	          0x4839fe	                            cmp rsi, rdi	      2611	diff.c	FUNCTION_42	FOR_1	IF_7
0x4001730	            0x74ae	                            je 0x40016e0	      2611	diff.c	FUNCTION_42	FOR_1	IF_7
0x4001732	        0x4a8d0419	                    lea rax, [rcx + r11]	      2611	diff.c	FUNCTION_42	FOR_1	IF_7
0x4001736	          0x488b09	                    mov rcx, qword [rcx]	      2597	diff.c	FUNCTION_42	FOR_1
0x4001739	             0x1fa	                            add edx, edi	      2623	diff.c	FUNCTION_42	FOR_1
0x400173b	        0x4c8b4808	                 mov r9, qword [rax + 8]	      2623	diff.c	FUNCTION_42	FOR_1
0x400173f	        0x4c8b5048	            mov r10, qword [rax + 0x48] 	      2623	diff.c	FUNCTION_42	FOR_1
0x4001743	          0x4429ca	                            sub edx, r9d	      2623	diff.c	FUNCTION_42	FOR_1
0x4001746	          0x4429d2	                           sub edx, r10d	      2623	diff.c	FUNCTION_42	FOR_1
0x4001749	          0x4885c9	                           test rcx, rcx	      2597	diff.c	FUNCTION_42	FOR_1
0x400174c	            0x75c5	                           jne 0x4001713	      2597	diff.c	FUNCTION_42	FOR_1
0x400174e	        0x4883c410	                           add rsp, 0x10	      2629	diff.c	FUNCTION_42
0x4001752	          0x4863d2	                         movsxd rdx, edx	      2628	diff.c	FUNCTION_42
0x4001755	          0x4889f0	                            mov rax, rsi	      2628	diff.c	FUNCTION_42
0x4001758	              0x5b	                                 pop rbx	      2629	diff.c	FUNCTION_42
0x4001759	          0x4829d0	                            sub rax, rdx	      2628	diff.c	FUNCTION_42
0x400175c	              0x5d	                                 pop rbp	      2629	diff.c	FUNCTION_42
0x400175d	            0x415c	                                 pop r12	      2629	diff.c	FUNCTION_42
0x400175f	              0xc3	                                     ret	      2629	diff.c	FUNCTION_42
0x4001760	            0x31ff	                            xor edi, edi	      2592	diff.c	FUNCTION_42	CALL_3
0x4001762	      0x4889742408	                mov qword [rsp + 8], rsi	      2592	diff.c	FUNCTION_42	CALL_3
0x4001767	      0xe800000000	                          call 0x400176c	      2592	diff.c	FUNCTION_42	CALL_3
0x400176c	    0x488b05000000	            mov rax, qword [0x04001773] 	      2594	diff.c	FUNCTION_42	IF_3
0x4001773	      0x488b742408	                mov rsi, qword [rsp + 8]	      2594	diff.c	FUNCTION_42	IF_3
0x4001778	        0x488b4858	            mov rcx, qword [rax + 0x58] 	      2594	diff.c	FUNCTION_42	IF_3
0x400177c	          0x4885c9	                           test rcx, rcx	      2594	diff.c	FUNCTION_42	IF_3
0x400177f	     0xf8542ffffff	                           jne 0x40016c7	      2594	diff.c	FUNCTION_42	IF_3
0x4001785	      0xe9f8feffff	                           jmp 0x4001682	      2594	diff.c	FUNCTION_42	IF_3
0x400178a	    0x660f1f440000	                    nop word [rax + rax]	      2594	diff.c	FUNCTION_42	IF_3
0x4001790	        0x488d14d9	                  lea rdx, [rcx + rbx*8]	      2594	diff.c	FUNCTION_42	IF_3
0x4001794	            0x29fe	                            sub esi, edi	      2605	diff.c	FUNCTION_42	FOR_1	IF_5	IF_6
0x4001796	          0x4863c6	                         movsxd rax, esi	      2605	diff.c	FUNCTION_42	FOR_1	IF_5	IF_6
0x4001799	        0x488b4a48	            mov rcx, qword [rdx + 0x48] 	      2605	diff.c	FUNCTION_42	FOR_1	IF_5	IF_6
0x400179d	          0x4839c8	                            cmp rax, rcx	      2605	diff.c	FUNCTION_42	FOR_1	IF_5	IF_6
0x40017a0	          0x4863f1	                         movsxd rsi, ecx	      2605	diff.c	FUNCTION_42	FOR_1	IF_5	IF_6
0x40017a3	        0x480f4fc6	                          cmovg rax, rsi	      2605	diff.c	FUNCTION_42	FOR_1	IF_5	IF_6
0x40017a7	        0x48034208	                add rax, qword [rdx + 8]	      2608	diff.c	FUNCTION_42	FOR_1	IF_5
0x40017ab	        0x4883c410	                           add rsp, 0x10	      2629	diff.c	FUNCTION_42
0x40017af	              0x5b	                                 pop rbx	      2629	diff.c	FUNCTION_42
0x40017b0	              0x5d	                                 pop rbp	      2629	diff.c	FUNCTION_42
0x40017b1	            0x415c	                                 pop r12	      2629	diff.c	FUNCTION_42
0x40017b3	              0xc3	                                     ret	      2629	diff.c	FUNCTION_42
0x40017b4	      0xbb01000000	                              mov ebx, 1	       168	diff.c	FUNCTION_5	FOR_1
0x40017b9	     0xf1f80000000	                         nop dword [rax]	       168	diff.c	FUNCTION_5	FOR_1
0x40017c0	        0x4183fc08	                             cmp r12d, 8	      2588	diff.c	FUNCTION_42	IF_1
0x40017c4	     0xf85e6feffff	                           jne 0x40016b0	      2588	diff.c	FUNCTION_42	IF_1
0x40017ca	      0xe9b3feffff	                           jmp 0x4001682	      2588	diff.c	FUNCTION_42	IF_1
0x40017cf	              0x90	                                     nop	      2588	diff.c	FUNCTION_42	IF_1
0x40017d0	    0x41bc01000000	                             mov r12d, 1	       168	diff.c	FUNCTION_5	FOR_1
0x40017d6	      0xe9bdfeffff	                           jmp 0x4001698	       168	diff.c	FUNCTION_5	FOR_1
0x40017db	      0xbb02000000	                              mov ebx, 2	       168	diff.c	FUNCTION_5	FOR_1
0x40017e0	            0xebde	                           jmp 0x40017c0	       168	diff.c	FUNCTION_5	FOR_1
0x40017e2	    0x41bc02000000	                             mov r12d, 2	       168	diff.c	FUNCTION_5	FOR_1
0x40017e8	      0xe9abfeffff	                           jmp 0x4001698	       168	diff.c	FUNCTION_5	FOR_1
0x40017ed	      0xbb03000000	                              mov ebx, 3	       168	diff.c	FUNCTION_5	FOR_1
0x40017f2	            0xebcc	                           jmp 0x40017c0	       168	diff.c	FUNCTION_5	FOR_1
0x40017f4	    0x41bc03000000	                             mov r12d, 3	       168	diff.c	FUNCTION_5	FOR_1
0x40017fa	      0xe999feffff	                           jmp 0x4001698	       168	diff.c	FUNCTION_5	FOR_1
0x40017ff	    0x41bc04000000	                             mov r12d, 4	       168	diff.c	FUNCTION_5	FOR_1
0x4001805	      0xe98efeffff	                           jmp 0x4001698	       168	diff.c	FUNCTION_5	FOR_1
0x400180a	      0xbb04000000	                              mov ebx, 4	       168	diff.c	FUNCTION_5	FOR_1
0x400180f	            0xebaf	                           jmp 0x40017c0	       168	diff.c	FUNCTION_5	FOR_1
0x4001811	      0xbb05000000	                              mov ebx, 5	       168	diff.c	FUNCTION_5	FOR_1
0x4001816	            0xeba8	                           jmp 0x40017c0	       168	diff.c	FUNCTION_5	FOR_1
0x4001818	    0x41bc05000000	                             mov r12d, 5	       168	diff.c	FUNCTION_5	FOR_1
0x400181e	      0xe975feffff	                           jmp 0x4001698	       168	diff.c	FUNCTION_5	FOR_1
0x4001823	    0x41bc06000000	                             mov r12d, 6	       168	diff.c	FUNCTION_5	FOR_1
0x4001829	      0xe96afeffff	                           jmp 0x4001698	       168	diff.c	FUNCTION_5	FOR_1
0x400182e	      0xbb06000000	                              mov ebx, 6	       168	diff.c	FUNCTION_5	FOR_1
0x4001833	            0xeb8b	                           jmp 0x40017c0	       168	diff.c	FUNCTION_5	FOR_1
0x4001835	    0x41bc07000000	                             mov r12d, 7	       168	diff.c	FUNCTION_5	FOR_1
0x400183b	      0xe958feffff	                           jmp 0x4001698	       168	diff.c	FUNCTION_5	FOR_1
0x4001840	      0xbb07000000	                              mov ebx, 7	       168	diff.c	FUNCTION_5	FOR_1
0x4001845	      0xe976ffffff	                           jmp 0x40017c0	       168	diff.c	FUNCTION_5	FOR_1
