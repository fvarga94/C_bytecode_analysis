restore_win_for_buf	FOR,0:WHILE,0:DO,0:ELSE,1:functions,0:CALL,2:SWITCH,0:IF,1	7
0x400be30	        0x48833a00	                      cmp qword [rdx], 0	      5749	buffer.c	FUNCTION_86	IF_1
0x400be34	            0x740a	                            je 0x400be40	      5749	buffer.c	FUNCTION_86	IF_1
0x400be36	          0x4889d7	                            mov rdi, rdx	      5752	buffer.c	FUNCTION_86	CALL_2
0x400be39	      0xe900000000	                           jmp 0x400be3e	      5752	buffer.c	FUNCTION_86	CALL_2
0x400be3e	            0x6690	                                     nop	      5752	buffer.c	FUNCTION_86	CALL_2
0x400be40	      0xba01000000	                              mov edx, 1	      5750	buffer.c	FUNCTION_86	CALL_1
0x400be45	      0xe900000000	                           jmp 0x400be4a	      5750	buffer.c	FUNCTION_86	CALL_1
write_viminfo_bufferlist	FOR,0:WHILE,0:DO,0:ELSE,0:functions,1:CALL,8:SWITCH,0:IF,2	103
0x4004a50	            0x4156	                                push r14	      5545	buffer.c	FUNCTION_76
0x4004a52	            0x4155	                                push r13	      5545	buffer.c	FUNCTION_76
0x4004a54	          0x4989fd	                            mov r13, rdi	      5545	buffer.c	FUNCTION_76
0x4004a57	            0x4154	                                push r12	      5545	buffer.c	FUNCTION_76
0x4004a59	              0x55	                                push rbp	      5545	buffer.c	FUNCTION_76
0x4004a5a	      0xbf25000000	                           mov edi, 0x25	      5552	buffer.c	FUNCTION_76	IF_1	CALL_1
0x4004a5f	              0x53	                                push rbx	      5545	buffer.c	FUNCTION_76
0x4004a60	      0xe800000000	                          call 0x4004a65	      5552	buffer.c	FUNCTION_76	IF_1	CALL_1
0x4004a65	          0x4885c0	                           test rax, rax	      5552	buffer.c	FUNCTION_76	IF_1	CALL_1
0x4004a68	     0xf845e010000	                            je 0x4004bcc	      5552	buffer.c	FUNCTION_76	IF_1	CALL_1
0x4004a6e	      0xbf25000000	                           mov edi, 0x25	      5556	buffer.c	FUNCTION_76	CALL_2
0x4004a73	      0xe800000000	                          call 0x4004a78	      5556	buffer.c	FUNCTION_76	CALL_2
0x4004a78	      0xbf28100000	                         mov edi, 0x1028	      5560	buffer.c	FUNCTION_76	CALL_3
0x4004a7d	          0x4189c6	                           mov r14d, eax	      5556	buffer.c	FUNCTION_76	CALL_2
0x4004a80	      0xe800000000	                          call 0x4004a85	      5560	buffer.c	FUNCTION_76	CALL_3
0x4004a85	          0x4885c0	                           test rax, rax	      5561	buffer.c	FUNCTION_76	IF_2
0x4004a88	          0x4989c4	                            mov r12, rax	      5560	buffer.c	FUNCTION_76	CALL_3
0x4004a8b	     0xf843b010000	                            je 0x4004bcc	      5561	buffer.c	FUNCTION_76	IF_2
0x4004a91	    0x488b2d000000	            mov rbp, qword [0x04004a98] 	      5564	buffer.c	FUNCTION_76	CALL_4
0x4004a98	          0x4885ed	                           test rbp, rbp	      5564	buffer.c	FUNCTION_76	CALL_4
0x4004a9b	            0x7435	                            je 0x4004ad2	      5564	buffer.c	FUNCTION_76	CALL_4
0x4004a9d	           0xf1f00	                         nop dword [rax]	      5564	buffer.c	FUNCTION_76	CALL_4
0x4004aa0	    0x48392d000000	            cmp qword [0x04004aa7], rbp 	      5564	buffer.c	FUNCTION_76	CALL_4
0x4004aa7	     0xf8413010000	                            je 0x4004bc0	      5564	buffer.c	FUNCTION_76	CALL_4
0x4004aad	        0x488b5d20	            mov rbx, qword [rbp + 0x20] 	      5564	buffer.c	FUNCTION_76	CALL_4
0x4004ab1	            0xeb11	                           jmp 0x4004ac4	      5564	buffer.c	FUNCTION_76	CALL_4
0x4004ab3	       0xf1f440000	                   nop dword [rax + rax]	      5564	buffer.c	FUNCTION_76	CALL_4
0x4004ab8	          0x4889df	                            mov rdi, rbx	      5565	buffer.c	FUNCTION_76	CALL_5
0x4004abb	      0xe800000000	                          call 0x4004ac0	      5565	buffer.c	FUNCTION_76	CALL_5
0x4004ac0	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      5564	buffer.c	FUNCTION_76	CALL_4
0x4004ac4	          0x4885db	                           test rbx, rbx	      5564	buffer.c	FUNCTION_76	CALL_4
0x4004ac7	            0x75ef	                           jne 0x4004ab8	      5564	buffer.c	FUNCTION_76	CALL_4
0x4004ac9	        0x488b6d00	                    mov rbp, qword [rbp]	      5564	buffer.c	FUNCTION_76	CALL_4
0x4004acd	          0x4885ed	                           test rbp, rbp	      5564	buffer.c	FUNCTION_76	CALL_4
0x4004ad0	            0x75ce	                           jne 0x4004aa0	      5564	buffer.c	FUNCTION_76	CALL_4
0x4004ad2	            0x31ff	                            xor edi, edi	      5567	buffer.c	FUNCTION_76	CALL_7
0x4004ad4	      0xba05000000	                              mov edx, 5	      5567	buffer.c	FUNCTION_76	CALL_7
0x4004ad9	      0xbe00000000	                              mov esi, 0	      5567	buffer.c	FUNCTION_76	CALL_7
0x4004ade	      0xe800000000	                          call 0x4004ae3	      5567	buffer.c	FUNCTION_76	CALL_7
0x4004ae3	          0x4c89ee	                            mov rsi, r13	      5567	buffer.c	FUNCTION_76	CALL_7
0x4004ae6	          0x4889c7	                            mov rdi, rax	      5567	buffer.c	FUNCTION_76	CALL_7
0x4004ae9	      0xe800000000	                          call 0x4004aee	      5567	buffer.c	FUNCTION_76	CALL_7
0x4004aee	    0x488b1d000000	            mov rbx, qword [0x04004af5] 	      5568	buffer.c	FUNCTION_76
0x4004af5	          0x4885db	                           test rbx, rbx	      5568	buffer.c	FUNCTION_76
0x4004af8	     0xf84af000000	                            je 0x4004bad	      5568	buffer.c	FUNCTION_76
0x4004afe	            0x6690	                                     nop	      5568	buffer.c	FUNCTION_76
0x4004b00	    0x4883bb980000	               cmp qword [rbx + 0x98], 0	      5570	buffer.c	FUNCTION_76	FUNCTION_1	IF_1
0x4004b08	     0xf8492000000	                            je 0x4004ba0	      5570	buffer.c	FUNCTION_76	FUNCTION_1	IF_1
0x4004b0e	    0x8b8324140000	          mov eax, dword [rbx + 0x1424] 	      5571	buffer.c	FUNCTION_76	FUNCTION_1	IF_1
0x4004b14	            0x85c0	                           test eax, eax	      5571	buffer.c	FUNCTION_76	FUNCTION_1	IF_1
0x4004b16	     0xf8484000000	                            je 0x4004ba0	      5571	buffer.c	FUNCTION_76	FUNCTION_1	IF_1
0x4004b1c	    0x488b83181400	          mov rax, qword [rbx + 0x1418] 	      5600	buffer.c	FUNCTION_77
0x4004b23	           0xfb600	                   movzx eax, byte [rax]	      5600	buffer.c	FUNCTION_77
0x4004b26	            0x3c71	                            cmp al, 0x71	      5600	buffer.c	FUNCTION_77
0x4004b28	            0x7476	                            je 0x4004ba0	      5600	buffer.c	FUNCTION_77
0x4004b2a	            0x3c74	                            cmp al, 0x74	      5609	buffer.c	FUNCTION_78
0x4004b2c	            0x7472	                            je 0x4004ba0	      5609	buffer.c	FUNCTION_78
0x4004b2e	    0x488bbb880000	            mov rdi, qword [rbx + 0x88] 	      5578	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_3
0x4004b35	      0xe800000000	                          call 0x4004b3a	      5578	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_3
0x4004b3a	            0x85c0	                           test eax, eax	      5578	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_3
0x4004b3c	            0x7562	                           jne 0x4004ba0	      5578	buffer.c	FUNCTION_76	FUNCTION_1	IF_1	CALL_3
0x4004b3e	          0x4585f6	                         test r14d, r14d	      5581	buffer.c	FUNCTION_76	FUNCTION_1	IF_2
0x4004b41	        0x418d6eff	                      lea ebp, [r14 - 1]	      5581	buffer.c	FUNCTION_76	FUNCTION_1	IF_2
0x4004b45	            0x7466	                            je 0x4004bad	      5581	buffer.c	FUNCTION_76	FUNCTION_1	IF_2
0x4004b47	          0x4c89ee	                            mov rsi, r13	      5583	buffer.c	FUNCTION_76	FUNCTION_1	CALL_4
0x4004b4a	      0xbf25000000	                           mov edi, 0x25	      5583	buffer.c	FUNCTION_76	FUNCTION_1	CALL_4
0x4004b4f	          0x4189ee	                           mov r14d, ebp	      5588	buffer.c	FUNCTION_76	FUNCTION_1	CALL_7
0x4004b52	      0xe800000000	                          call 0x4004b57	      5583	buffer.c	FUNCTION_76	FUNCTION_1	CALL_4
0x4004b57	    0x488bb3880000	            mov rsi, qword [rbx + 0x88] 	      5584	buffer.c	FUNCTION_76	FUNCTION_1	CALL_5
0x4004b5e	    0x41b801000000	                              mov r8d, 1	      5584	buffer.c	FUNCTION_76	FUNCTION_1	CALL_5
0x4004b64	      0xb900100000	                         mov ecx, 0x1000	      5584	buffer.c	FUNCTION_76	FUNCTION_1	CALL_5
0x4004b69	          0x4c89e2	                            mov rdx, r12	      5584	buffer.c	FUNCTION_76	FUNCTION_1	CALL_5
0x4004b6c	            0x31ff	                            xor edi, edi	      5584	buffer.c	FUNCTION_76	FUNCTION_1	CALL_5
0x4004b6e	      0xe800000000	                          call 0x4004b73	      5584	buffer.c	FUNCTION_76	FUNCTION_1	CALL_5
0x4004b73	    0x488b8b280300	           mov rcx, qword [rbx + 0x328] 	      5585	buffer.c	FUNCTION_76	FUNCTION_1	CALL_6
0x4004b7a	    0x448b83300300	           mov r8d, dword [rbx + 0x330] 	      5585	buffer.c	FUNCTION_76	FUNCTION_1	CALL_6
0x4004b81	      0xba00000000	                              mov edx, 0	      5585	buffer.c	FUNCTION_76	FUNCTION_1	CALL_6
0x4004b86	      0xbe28100000	                         mov esi, 0x1028	      5585	buffer.c	FUNCTION_76	FUNCTION_1	CALL_6
0x4004b8b	          0x4c89e7	                            mov rdi, r12	      5585	buffer.c	FUNCTION_76	FUNCTION_1	CALL_6
0x4004b8e	            0x31c0	                            xor eax, eax	      5585	buffer.c	FUNCTION_76	FUNCTION_1	CALL_6
0x4004b90	      0xe800000000	                          call 0x4004b95	      5585	buffer.c	FUNCTION_76	FUNCTION_1	CALL_6
0x4004b95	          0x4c89e6	                            mov rsi, r12	      5588	buffer.c	FUNCTION_76	FUNCTION_1	CALL_7
0x4004b98	          0x4c89ef	                            mov rdi, r13	      5588	buffer.c	FUNCTION_76	FUNCTION_1	CALL_7
0x4004b9b	      0xe800000000	                          call 0x4004ba0	      5588	buffer.c	FUNCTION_76	FUNCTION_1	CALL_7
0x4004ba0	        0x488b5b68	            mov rbx, qword [rbx + 0x68] 	      5568	buffer.c	FUNCTION_76
0x4004ba4	          0x4885db	                           test rbx, rbx	      5568	buffer.c	FUNCTION_76
0x4004ba7	     0xf8553ffffff	                           jne 0x4004b00	      5568	buffer.c	FUNCTION_76
0x4004bad	              0x5b	                                 pop rbx	      5591	buffer.c	FUNCTION_76
0x4004bae	          0x4c89e7	                            mov rdi, r12	      5590	buffer.c	FUNCTION_76	CALL_8
0x4004bb1	              0x5d	                                 pop rbp	      5591	buffer.c	FUNCTION_76
0x4004bb2	            0x415c	                                 pop r12	      5591	buffer.c	FUNCTION_76
0x4004bb4	            0x415d	                                 pop r13	      5591	buffer.c	FUNCTION_76
0x4004bb6	            0x415e	                                 pop r14	      5591	buffer.c	FUNCTION_76
0x4004bb8	      0xe900000000	                           jmp 0x4004bbd	      5590	buffer.c	FUNCTION_76	CALL_8
0x4004bbd	           0xf1f00	                         nop dword [rax]	      5590	buffer.c	FUNCTION_76	CALL_8
0x4004bc0	    0x488b1d000000	            mov rbx, qword [0x04004bc7] 	      5564	buffer.c	FUNCTION_76	CALL_4
0x4004bc7	      0xe9f8feffff	                           jmp 0x4004ac4	      5564	buffer.c	FUNCTION_76	CALL_4
0x4004bcc	              0x5b	                                 pop rbx	      5591	buffer.c	FUNCTION_76
0x4004bcd	              0x5d	                                 pop rbp	      5591	buffer.c	FUNCTION_76
0x4004bce	            0x415c	                                 pop r12	      5591	buffer.c	FUNCTION_76
0x4004bd0	            0x415d	                                 pop r13	      5591	buffer.c	FUNCTION_76
0x4004bd2	            0x415e	                                 pop r14	      5591	buffer.c	FUNCTION_76
0x4004bd4	              0xc3	                                     ret	      5591	buffer.c	FUNCTION_76
free_buffer_stuff	FOR,0:WHILE,0:DO,0:ELSE,0:functions,0:CALL,14:SWITCH,0:IF,1	88
0x4000f10	              0x55	                                push rbp	       896	buffer.c	FUNCTION_13
0x4000f11	              0x53	                                push rbx	       896	buffer.c	FUNCTION_13
0x4000f12	          0x4889fb	                            mov rbx, rdi	       896	buffer.c	FUNCTION_13
0x4000f15	        0x4883ec08	                              sub rsp, 8	       896	buffer.c	FUNCTION_13
0x4000f19	            0x85f6	                           test esi, esi	       897	buffer.c	FUNCTION_13	IF_1
0x4000f1b	     0xf854c010000	                           jne 0x400106d	       897	buffer.c	FUNCTION_13	IF_1
0x4000f21	    0x488b83301700	          mov rax, qword [rbx + 0x1730] 	       909	buffer.c	FUNCTION_13	CALL_5
0x4000f28	    0x488babd80000	            mov rbp, qword [rbx + 0xd8] 	       907	buffer.c	FUNCTION_13	CALL_4
0x4000f2f	        0x488d7810	                   lea rdi, [rax + 0x10]	       909	buffer.c	FUNCTION_13	CALL_5
0x4000f33	      0xe800000000	                          call 0x4000f38	       909	buffer.c	FUNCTION_13	CALL_5
0x4000f38	    0x488b83301700	          mov rax, qword [rbx + 0x1730] 	       910	buffer.c	FUNCTION_13	CALL_6
0x4000f3f	        0x488d7810	                   lea rdi, [rax + 0x10]	       910	buffer.c	FUNCTION_13	CALL_6
0x4000f43	      0xe800000000	                          call 0x4000f48	       910	buffer.c	FUNCTION_13	CALL_6
0x4000f48	    0x488bbb301700	          mov rdi, qword [rbx + 0x1730] 	       885	buffer.c	FUNCTION_12	CALL_2
0x4000f4f	    0x48b86368616e	          movabs rax, 0x746465676e616863	       110	string3.h	FUNCTION_110	CALL_3
0x4000f59	    0x488db3d00000	                   lea rsi, [rbx + 0xd0]	       876	buffer.c	FUNCTION_12
0x4000f60	    0xc683e0000000	                mov byte [rbx + 0xe0], 5	       878	buffer.c	FUNCTION_12
0x4000f67	    0xc783d0000000	               mov dword [rbx + 0xd0], 1	       879	buffer.c	FUNCTION_12
0x4000f71	    0xc683d4000000	                mov byte [rbx + 0xd4], 2	       880	buffer.c	FUNCTION_12
0x4000f78	    0x48c783d80000	               mov qword [rbx + 0xd8], 0	       881	buffer.c	FUNCTION_12
0x4000f83	    0x488983e10000	             mov qword [rbx + 0xe1], rax	       110	string3.h	FUNCTION_110	CALL_3
0x4000f8a	    0xc783e9000000	       mov dword [rbx + 0xe9], 0x6b6369 	       110	string3.h	FUNCTION_110	CALL_3
0x4000f94	      0xe800000000	                          call 0x4000f99	       885	buffer.c	FUNCTION_12	CALL_2
0x4000f99	    0x488dbbc81100	                 lea rdi, [rbx + 0x11c8]	       916	buffer.c	FUNCTION_13	CALL_9
0x4000fa0	    0x4889abd80000	             mov qword [rbx + 0xd8], rbp	       912	buffer.c	FUNCTION_13	CALL_8
0x4000fa7	      0xe800000000	                          call 0x4000fac	       916	buffer.c	FUNCTION_13	CALL_9
0x4000fac	    0x488bbb201c00	          mov rdi, qword [rbx + 0x1c20] 	      6056	buffer.c	FUNCTION_97	IF_1
0x4000fb3	          0x4885ff	                           test rdi, rdi	      6056	buffer.c	FUNCTION_97	IF_1
0x4000fb6	            0x7440	                            je 0x4000ff8	      6056	buffer.c	FUNCTION_97	IF_1
0x4000fb8	    0x48833d000000	               cmp qword [0x04000fc0], 0	      6056	buffer.c	FUNCTION_97	IF_1
0x4000fc0	            0x741e	                            je 0x4000fe0	      6056	buffer.c	FUNCTION_97	IF_1
0x4000fc2	          0x4889df	                            mov rdi, rbx	      6058	buffer.c	FUNCTION_97	IF_1	CALL_1
0x4000fc5	      0xbe28000000	                           mov esi, 0x28	      6058	buffer.c	FUNCTION_97	IF_1	CALL_1
0x4000fca	      0xe800000000	                          call 0x4000fcf	      6058	buffer.c	FUNCTION_97	IF_1	CALL_1
0x4000fcf	      0xe800000000	                          call 0x4000fd4	      6059	buffer.c	FUNCTION_97	IF_1	CALL_2
0x4000fd4	    0x488bbb201c00	          mov rdi, qword [rbx + 0x1c20] 	      6062	buffer.c	FUNCTION_97	WHILE_1
0x4000fdb	          0x4885ff	                           test rdi, rdi	      6062	buffer.c	FUNCTION_97	WHILE_1
0x4000fde	            0x7418	                            je 0x4000ff8	      6062	buffer.c	FUNCTION_97	WHILE_1
0x4000fe0	        0x488b6f18	            mov rbp, qword [rdi + 0x18] 	      6064	buffer.c	FUNCTION_97	WHILE_1
0x4000fe4	      0xe800000000	                          call 0x4000fe9	      6065	buffer.c	FUNCTION_97	WHILE_1	CALL_3
0x4000fe9	          0x4885ed	                           test rbp, rbp	      6062	buffer.c	FUNCTION_97	WHILE_1
0x4000fec	    0x4889ab201c00	          mov qword [rbx + 0x1c20], rbp 	      6066	buffer.c	FUNCTION_97	WHILE_1
0x4000ff3	          0x4889ef	                            mov rdi, rbp	      6066	buffer.c	FUNCTION_97	WHILE_1
0x4000ff6	            0x75e8	                           jne 0x4000fe0	      6062	buffer.c	FUNCTION_97	WHILE_1
0x4000ff8	          0x4889df	                            mov rdi, rbx	       922	buffer.c	FUNCTION_13	CALL_11
0x4000ffb	      0xe800000000	                          call 0x4001000	       922	buffer.c	FUNCTION_13	CALL_11
0x4001000	            0x31c9	                            xor ecx, ecx	       925	buffer.c	FUNCTION_13	CALL_12
0x4001002	      0xba01000000	                              mov edx, 1	       925	buffer.c	FUNCTION_13	CALL_12
0x4001007	      0xbe3f300000	                         mov esi, 0x303f	       925	buffer.c	FUNCTION_13	CALL_12
0x400100c	          0x4889df	                            mov rdi, rbx	       925	buffer.c	FUNCTION_13	CALL_12
0x400100f	      0xe800000000	                          call 0x4001014	       925	buffer.c	FUNCTION_13	CALL_12
0x4001014	          0x4889df	                            mov rdi, rbx	       926	buffer.c	FUNCTION_13	CALL_13
0x4001017	      0xb901000000	                              mov ecx, 1	       926	buffer.c	FUNCTION_13	CALL_13
0x400101c	      0xba01000000	                              mov edx, 1	       926	buffer.c	FUNCTION_13	CALL_13
0x4001021	      0xbe3f300000	                         mov esi, 0x303f	       926	buffer.c	FUNCTION_13	CALL_13
0x4001026	      0xe800000000	                          call 0x400102b	       926	buffer.c	FUNCTION_13	CALL_13
0x400102b	    0x488bbb081700	          mov rdi, qword [rbx + 0x1708] 	       929	buffer.c	FUNCTION_13	CALL_14
0x4001032	          0x4885ff	                           test rdi, rdi	       929	buffer.c	FUNCTION_13	CALL_14
0x4001035	            0x7410	                            je 0x4001047	       929	buffer.c	FUNCTION_13	CALL_14
0x4001037	      0xe800000000	                          call 0x400103c	       929	buffer.c	FUNCTION_13	CALL_14
0x400103c	    0x48c783081700	            mov qword [rbx + 0x1708], 0 	       929	buffer.c	FUNCTION_13	CALL_14
0x4001047	        0x4883c408	                              add rsp, 8	       931	buffer.c	FUNCTION_13
0x400104b	              0x5b	                                 pop rbx	       931	buffer.c	FUNCTION_13
0x400104c	              0x5d	                                 pop rbp	       931	buffer.c	FUNCTION_13
0x400104d	              0xc3	                                     ret	       931	buffer.c	FUNCTION_13
0x400104e	            0x6690	                                     nop	       931	buffer.c	FUNCTION_13
0x4001050	        0x488d7d30	                   lea rdi, [rbp + 0x30]	       947	buffer.c	FUNCTION_14	WHILE_1	IF_1	CALL_1
0x4001054	      0xe800000000	                          call 0x4001059	       947	buffer.c	FUNCTION_14	WHILE_1	IF_1	CALL_1
0x4001059	    0x488dbdf00100	                  lea rdi, [rbp + 0x1f0]	       949	buffer.c	FUNCTION_14	WHILE_1	IF_1	CALL_2
0x4001060	      0xe800000000	                          call 0x4001065	       949	buffer.c	FUNCTION_14	WHILE_1	IF_1	CALL_2
0x4001065	          0x4889ef	                            mov rdi, rbp	       952	buffer.c	FUNCTION_14	WHILE_1	CALL_3
0x4001068	      0xe800000000	                          call 0x400106d	       952	buffer.c	FUNCTION_14	WHILE_1	CALL_3
0x400106d	    0x488bab280100	           mov rbp, qword [rbx + 0x128] 	       941	buffer.c	FUNCTION_14	WHILE_1
0x4001074	          0x4885ed	                           test rbp, rbp	       941	buffer.c	FUNCTION_14	WHILE_1
0x4001077	            0x7417	                            je 0x4001090	       941	buffer.c	FUNCTION_14	WHILE_1
0x4001079	        0x488b4500	                    mov rax, qword [rbp]	       944	buffer.c	FUNCTION_14	WHILE_1
0x400107d	    0x488983280100	            mov qword [rbx + 0x128], rax	       944	buffer.c	FUNCTION_14	WHILE_1
0x4001084	          0x8b4528	            mov eax, dword [rbp + 0x28] 	       945	buffer.c	FUNCTION_14	WHILE_1	IF_1
0x4001087	            0x85c0	                           test eax, eax	       945	buffer.c	FUNCTION_14	WHILE_1	IF_1
0x4001089	            0x74da	                            je 0x4001065	       945	buffer.c	FUNCTION_14	WHILE_1	IF_1
0x400108b	            0xebc3	                           jmp 0x4001050	       945	buffer.c	FUNCTION_14	WHILE_1	IF_1
0x400108d	           0xf1f00	                         nop dword [rax]	       945	buffer.c	FUNCTION_14	WHILE_1	IF_1
0x4001090	          0x4889df	                            mov rdi, rbx	       900	buffer.c	FUNCTION_13	IF_1	CALL_2
0x4001093	      0xbe01000000	                              mov esi, 1	       900	buffer.c	FUNCTION_13	IF_1	CALL_2
0x4001098	      0xe800000000	                          call 0x400109d	       900	buffer.c	FUNCTION_13	IF_1	CALL_2
0x400109d	    0x488dbbb01a00	                 lea rdi, [rbx + 0x1ab0]	       902	buffer.c	FUNCTION_13	IF_1	CALL_3
0x40010a4	      0xe800000000	                          call 0x40010a9	       902	buffer.c	FUNCTION_13	IF_1	CALL_3
0x40010a9	      0xe973feffff	                           jmp 0x4000f21	       902	buffer.c	FUNCTION_13	IF_1	CALL_3
get_winopts	FOR,0:WHILE,0:DO,0:ELSE,1:functions,0:CALL,7:SWITCH,0:IF,2	86
0x4003120	    0x488b05000000	            mov rax, qword [0x04003127] 	      2892	buffer.c	ELSE_1	FUNCTION_42	CALL_1
0x4003127	              0x53	                                push rbx	      2889	buffer.c	ELSE_1	FUNCTION_42
0x4003128	          0x4889fb	                            mov rbx, rdi	      2889	buffer.c	ELSE_1	FUNCTION_42
0x400312b	    0x488db8b00100	                  lea rdi, [rax + 0x1b0]	      2892	buffer.c	ELSE_1	FUNCTION_42	CALL_1
0x4003132	      0xe800000000	                          call 0x4003137	      2892	buffer.c	ELSE_1	FUNCTION_42	CALL_1
0x4003137	    0x488b3d000000	            mov rdi, qword [0x0400313e] 	      2894	buffer.c	ELSE_1	FUNCTION_42	CALL_2
0x400313e	      0xe800000000	                          call 0x4003143	      2894	buffer.c	ELSE_1	FUNCTION_42	CALL_2
0x4003143	    0x488bb3280100	           mov rsi, qword [rbx + 0x128] 	      2894	buffer.c	ELSE_1	FUNCTION_42	CALL_2
0x400314a	    0x488b3d000000	            mov rdi, qword [0x04003151] 	      2894	buffer.c	ELSE_1	FUNCTION_42	CALL_2
0x4003151	          0x4885f6	                           test rsi, rsi	      2855	buffer.c	FUNCTION_41	FOR_1
0x4003154	            0x7453	                            je 0x40031a9	      2855	buffer.c	FUNCTION_41	FOR_1
0x4003156	    0x488b0d000000	            mov rcx, qword [0x0400315d] 	      2830	buffer.c	FUNCTION_40	IF_1	CALL_1
0x400315d	          0x4889f3	                            mov rbx, rsi	      2830	buffer.c	FUNCTION_40	IF_1	CALL_1
0x4003160	            0xeb0e	                           jmp 0x4003170	      2830	buffer.c	FUNCTION_40	IF_1	CALL_1
0x4003162	    0x660f1f440000	                    nop word [rax + rax]	      2830	buffer.c	FUNCTION_40	IF_1	CALL_1
0x4003168	          0x488b1b	                    mov rbx, qword [rbx]	      2855	buffer.c	FUNCTION_41	FOR_1
0x400316b	          0x4885db	                           test rbx, rbx	      2855	buffer.c	FUNCTION_41	FOR_1
0x400316e	            0x7470	                            je 0x40031e0	      2855	buffer.c	FUNCTION_41	FOR_1
0x4003170	        0x48397b10	            cmp qword [rbx + 0x10], rdi 	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x4003174	            0x75f2	                           jne 0x4003168	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x4003176	        0x448b4340	            mov r8d, dword [rbx + 0x40] 	      2828	buffer.c	FUNCTION_40	IF_1
0x400317a	          0x4585c0	                           test r8d, r8d	      2828	buffer.c	FUNCTION_40	IF_1
0x400317d	            0x741f	                            je 0x400319e	      2828	buffer.c	FUNCTION_40	IF_1
0x400317f	          0x4885c9	                           test rcx, rcx	      2830	buffer.c	FUNCTION_40	IF_1	CALL_1
0x4003182	            0x74e4	                            je 0x4003168	      2830	buffer.c	FUNCTION_40	IF_1	CALL_1
0x4003184	          0x4839cf	                            cmp rdi, rcx	      2833	buffer.c	FUNCTION_40	IF_1	IF_2
0x4003187	            0x7415	                            je 0x400319e	      2833	buffer.c	FUNCTION_40	IF_1	IF_2
0x4003189	          0x4889c8	                            mov rax, rcx	      2833	buffer.c	FUNCTION_40	IF_1	IF_2
0x400318c	         0xf1f4000	                         nop dword [rax]	      2833	buffer.c	FUNCTION_40	IF_1	IF_2
0x4003190	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2830	buffer.c	FUNCTION_40	IF_1	CALL_1
0x4003194	          0x4885c0	                           test rax, rax	      2830	buffer.c	FUNCTION_40	IF_1	CALL_1
0x4003197	            0x74cf	                            je 0x4003168	      2830	buffer.c	FUNCTION_40	IF_1	CALL_1
0x4003199	          0x4839c7	                            cmp rdi, rax	      2833	buffer.c	FUNCTION_40	IF_1	IF_2
0x400319c	            0x75f2	                           jne 0x4003190	      2833	buffer.c	FUNCTION_40	IF_1	IF_2
0x400319e	          0x8b5328	            mov edx, dword [rbx + 0x28] 	      2898	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x40031a1	            0x85d2	                           test edx, edx	      2898	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x40031a3	     0xf8583000000	                           jne 0x400322c	      2898	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x40031a9	    0x488db7b00100	                  lea rsi, [rdi + 0x1b0]	      2908	buffer.c	FUNCTION_42	ELSE_1	CALL_6
0x40031b0	    0x4881c7680300	                          add rdi, 0x368	      2908	buffer.c	FUNCTION_42	ELSE_1	CALL_6
0x40031b7	      0xe800000000	                          call 0x40031bc	      2908	buffer.c	FUNCTION_42	ELSE_1	CALL_6
0x40031bc	    0x488b05000000	            mov rax, qword [0x040031c3] 	      2912	buffer.c	FUNCTION_42	ELSE_1	IF_2
0x40031c3	    0x488b3d000000	            mov rdi, qword [0x040031ca] 	      2913	buffer.c	FUNCTION_42	ELSE_1	IF_2
0x40031ca	          0x4885c0	                           test rax, rax	      2912	buffer.c	FUNCTION_42	ELSE_1	IF_2
0x40031cd	            0x7807	                            js 0x40031d6	      2912	buffer.c	FUNCTION_42	ELSE_1	IF_2
0x40031cf	    0x488987e80100	            mov qword [rdi + 0x1e8], rax	      2913	buffer.c	FUNCTION_42	ELSE_1	IF_2
0x40031d6	              0x5b	                                 pop rbx	      2918	buffer.c	FUNCTION_42	ELSE_1
0x40031d7	      0xe900000000	                           jmp 0x40031dc	      2916	buffer.c	FUNCTION_42	ELSE_1	CALL_7
0x40031dc	         0xf1f4000	                         nop dword [rax]	      2916	buffer.c	FUNCTION_42	ELSE_1	CALL_7
0x40031e0	          0x8b4640	            mov eax, dword [rsi + 0x40] 	      2828	buffer.c	FUNCTION_40	IF_1
0x40031e3	        0x488b5610	            mov rdx, qword [rsi + 0x10] 	      2828	buffer.c	FUNCTION_40	IF_1
0x40031e7	          0x4889f3	                            mov rbx, rsi	      2828	buffer.c	FUNCTION_40	IF_1
0x40031ea	            0x85c0	                           test eax, eax	      2828	buffer.c	FUNCTION_40	IF_1
0x40031ec	            0x74b0	                            je 0x400319e	      2828	buffer.c	FUNCTION_40	IF_1
0x40031ee	          0x4885c9	                           test rcx, rcx	      2830	buffer.c	FUNCTION_40	IF_1	CALL_1
0x40031f1	            0x741b	                            je 0x400320e	      2830	buffer.c	FUNCTION_40	IF_1	CALL_1
0x40031f3	          0x4839d1	                            cmp rcx, rdx	      2833	buffer.c	FUNCTION_40	IF_1	IF_2
0x40031f6	            0x74a6	                            je 0x400319e	      2833	buffer.c	FUNCTION_40	IF_1	IF_2
0x40031f8	          0x4889c8	                            mov rax, rcx	      2833	buffer.c	FUNCTION_40	IF_1	IF_2
0x40031fb	            0xeb08	                           jmp 0x4003205	      2833	buffer.c	FUNCTION_40	IF_1	IF_2
0x40031fd	           0xf1f00	                         nop dword [rax]	      2833	buffer.c	FUNCTION_40	IF_1	IF_2
0x4003200	          0x4839d0	                            cmp rax, rdx	      2833	buffer.c	FUNCTION_40	IF_1	IF_2
0x4003203	            0x7499	                            je 0x400319e	      2833	buffer.c	FUNCTION_40	IF_1	IF_2
0x4003205	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2830	buffer.c	FUNCTION_40	IF_1	CALL_1
0x4003209	          0x4885c0	                           test rax, rax	      2830	buffer.c	FUNCTION_40	IF_1	CALL_1
0x400320c	            0x75f2	                           jne 0x4003200	      2830	buffer.c	FUNCTION_40	IF_1	CALL_1
0x400320e	          0x488b1b	                    mov rbx, qword [rbx]	      2870	buffer.c	FUNCTION_41	IF_2	IF_3	FOR_2
0x4003211	          0x4885db	                           test rbx, rbx	      2870	buffer.c	FUNCTION_41	IF_2	IF_3	FOR_2
0x4003214	            0x7493	                            je 0x40031a9	      2870	buffer.c	FUNCTION_41	IF_2	IF_3	FOR_2
0x4003216	          0x8b7340	            mov esi, dword [rbx + 0x40] 	      2828	buffer.c	FUNCTION_40	IF_1
0x4003219	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      2828	buffer.c	FUNCTION_40	IF_1
0x400321d	            0x85f6	                           test esi, esi	      2828	buffer.c	FUNCTION_40	IF_1
0x400321f	            0x75cd	                           jne 0x40031ee	      2828	buffer.c	FUNCTION_40	IF_1
0x4003221	          0x8b5328	            mov edx, dword [rbx + 0x28] 	      2898	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x4003224	            0x85d2	                           test edx, edx	      2898	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x4003226	     0xf847dffffff	                            je 0x40031a9	      2898	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x400322c	    0x488db7b00100	                  lea rsi, [rdi + 0x1b0]	      2900	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_4
0x4003233	        0x488d7b30	                   lea rdi, [rbx + 0x30]	      2900	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_4
0x4003237	      0xe800000000	                          call 0x400323c	      2900	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_4
0x400323c	    0x488b05000000	            mov rax, qword [0x04003243] 	      2902	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x4003243	    0x8b93e8010000	           mov edx, dword [rbx + 0x1e8] 	      2902	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x4003249	    0x488dbbf00100	                  lea rdi, [rbx + 0x1f0]	      2904	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_5
0x4003250	    0x488db0080100	                  lea rsi, [rax + 0x108]	      2904	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_5
0x4003257	    0x889020010000	              mov byte [rax + 0x120], dl	      2902	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x400325d	    0xc68021010000	               mov byte [rax + 0x121], 1	      2903	buffer.c	ELSE_1	FUNCTION_42	IF_1
0x4003264	      0xe800000000	                          call 0x4003269	      2904	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_5
0x4003269	      0xe94effffff	                           jmp 0x40031bc	      2904	buffer.c	ELSE_1	FUNCTION_42	IF_1	CALL_5
buf_findsigntype_id	FOR,1:WHILE,0:DO,0:ELSE,0:functions,0:CALL,0:SWITCH,0:IF,1	18
0x400c380	    0x488b87201c00	          mov rax, qword [rdi + 0x1c20] 	      6019	buffer.c	FUNCTION_95	FOR_1
0x400c387	          0x4885c0	                           test rax, rax	      6019	buffer.c	FUNCTION_95	FOR_1
0x400c38a	            0x750d	                           jne 0x400c399	      6019	buffer.c	FUNCTION_95	FOR_1
0x400c38c	            0xeb24	                           jmp 0x400c3b2	      6019	buffer.c	FUNCTION_95	FOR_1
0x400c38e	            0x6690	                                     nop	      6019	buffer.c	FUNCTION_95	FOR_1
0x400c390	        0x488b4018	            mov rax, qword [rax + 0x18] 	      6019	buffer.c	FUNCTION_95	FOR_1
0x400c394	          0x4885c0	                           test rax, rax	      6019	buffer.c	FUNCTION_95	FOR_1
0x400c397	            0x7417	                            je 0x400c3b0	      6019	buffer.c	FUNCTION_95	FOR_1
0x400c399	        0x48397008	                cmp qword [rax + 8], rsi	      6020	buffer.c	FUNCTION_95	FOR_1	IF_1
0x400c39d	            0x75f1	                           jne 0x400c390	      6020	buffer.c	FUNCTION_95	FOR_1	IF_1
0x400c39f	          0x395010	            cmp dword [rax + 0x10], edx 	      6020	buffer.c	FUNCTION_95	FOR_1	IF_1
0x400c3a2	            0x75ec	                           jne 0x400c390	      6020	buffer.c	FUNCTION_95	FOR_1	IF_1
0x400c3a4	            0x8b00	                    mov eax, dword [rax]	      6021	buffer.c	FUNCTION_95	FOR_1	IF_1
0x400c3a6	              0xc3	                                     ret	      6021	buffer.c	FUNCTION_95	FOR_1	IF_1
0x400c3a7	    0x660f1f840000	                    nop word [rax + rax]	      6021	buffer.c	FUNCTION_95	FOR_1	IF_1
0x400c3b0	            0xf3c3	                                     ret	      6021	buffer.c	FUNCTION_95	FOR_1	IF_1
0x400c3b2	            0x31c0	                            xor eax, eax	      6023	buffer.c	FUNCTION_95
0x400c3b4	              0xc3	                                     ret	      6024	buffer.c	FUNCTION_95
buf_set_name	FOR,0:WHILE,0:DO,0:ELSE,0:functions,0:CALL,5:SWITCH,0:IF,1	55
0x4003410	              0x55	                                push rbp	      3173	buffer.c	FUNCTION_48
0x4003411	              0x53	                                push rbx	      3173	buffer.c	FUNCTION_48
0x4003412	          0x4889f5	                            mov rbp, rsi	      3173	buffer.c	FUNCTION_48
0x4003415	          0x4189f8	                            mov r8d, edi	      3173	buffer.c	FUNCTION_48
0x4003418	        0x4883ec28	                           sub rsp, 0x28	      3173	buffer.c	FUNCTION_48
0x400341c	    0x64488b042528	                mov rax, qword fs:[0x28]	      3173	buffer.c	FUNCTION_48
0x4003425	      0x4889442418	             mov qword [rsp + 0x18], rax	      3173	buffer.c	FUNCTION_48
0x400342a	            0x31c0	                            xor eax, eax	      3173	buffer.c	FUNCTION_48
0x400342c	            0x85ff	                           test edi, edi	      2713	buffer.c	FUNCTION_37	IF_1
0x400342e	            0x750e	                           jne 0x400343e	      2713	buffer.c	FUNCTION_37	IF_1
0x4003430	    0x488b05000000	            mov rax, qword [0x04003437] 	      2714	buffer.c	FUNCTION_37	IF_1
0x4003437	    0x448b80780100	           mov r8d, dword [rax + 0x178] 	      2714	buffer.c	FUNCTION_37	IF_1
0x400343e	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_116	CALL_1
0x4003443	      0xba09000000	                              mov edx, 9	        33	stdio2.h	FUNCTION_116	CALL_1
0x4003448	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_116	CALL_1
0x400344d	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_116	CALL_1
0x4003450	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_116	CALL_1
0x4003452	      0xe800000000	                          call 0x4003457	        33	stdio2.h	FUNCTION_116	CALL_1
0x4003457	          0x4889e6	                            mov rsi, rsp	      2716	buffer.c	FUNCTION_37	CALL_1
0x400345a	      0xbf00000000	                              mov edi, 0	      2716	buffer.c	FUNCTION_37	CALL_1
0x400345f	      0xe800000000	                          call 0x4003464	      2716	buffer.c	FUNCTION_37	CALL_1
0x4003464	        0x488b5808	                mov rbx, qword [rax + 8]	      2718	buffer.c	FUNCTION_37	IF_2	CALL_2
0x4003468	    0x4881fb000000	                              cmp rbx, 0	      2718	buffer.c	FUNCTION_37	IF_2	CALL_2
0x400346f	            0x744e	                            je 0x40034bf	      2718	buffer.c	FUNCTION_37	IF_2	CALL_2
0x4003471	          0x4885db	                           test rbx, rbx	      2718	buffer.c	FUNCTION_37	IF_2	CALL_2
0x4003474	            0x7449	                            je 0x40034bf	      2718	buffer.c	FUNCTION_37	IF_2	CALL_2
0x4003476	    0x4881fbbc0000	                           cmp rbx, 0xbc	      3177	buffer.c	FUNCTION_48	IF_1
0x400347d	            0x7440	                            je 0x40034bf	      3177	buffer.c	FUNCTION_48	IF_1
0x400347f	        0x488b7bd4	             mov rdi, qword [rbx - 0x2c]	      3179	buffer.c	FUNCTION_48	IF_1	CALL_2
0x4003483	      0xe800000000	                          call 0x4003488	      3179	buffer.c	FUNCTION_48	IF_1	CALL_2
0x4003488	        0x488b7bcc	             mov rdi, qword [rbx - 0x34]	      3180	buffer.c	FUNCTION_48	IF_1	CALL_3
0x400348c	      0xe800000000	                          call 0x4003491	      3180	buffer.c	FUNCTION_48	IF_1	CALL_3
0x4003491	          0x4889ef	                            mov rdi, rbp	      3181	buffer.c	FUNCTION_48	IF_1	CALL_4
0x4003494	      0xe800000000	                          call 0x4003499	      3181	buffer.c	FUNCTION_48	IF_1	CALL_4
0x4003499	          0x4885c0	                           test rax, rax	      4799	buffer.c	FUNCTION_69	IF_1
0x400349c	        0x488943cc	             mov qword [rbx - 0x34], rax	      3181	buffer.c	FUNCTION_48	IF_1	CALL_4
0x40034a0	            0x743e	                            je 0x40034e0	      4799	buffer.c	FUNCTION_69	IF_1
0x40034a2	        0x488943d4	             mov qword [rbx - 0x2c], rax	      4802	buffer.c	FUNCTION_69	IF_2
0x40034a6	      0xbe01000000	                              mov esi, 1	      4759	buffer.c	FUNCTION_68	CALL_1
0x40034ab	          0x4889c7	                            mov rdi, rax	      4759	buffer.c	FUNCTION_68	CALL_1
0x40034ae	      0xe800000000	                          call 0x40034b3	      4759	buffer.c	FUNCTION_68	CALL_1
0x40034b3	        0x488943cc	             mov qword [rbx - 0x34], rax	      4803	buffer.c	FUNCTION_69	CALL_1
0x40034b7	        0x488b43d4	             mov rax, qword [rbx - 0x2c]	      4803	buffer.c	FUNCTION_69	CALL_1
0x40034bb	        0x488943dc	             mov qword [rbx - 0x24], rax	      3186	buffer.c	FUNCTION_48	IF_1
0x40034bf	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      3188	buffer.c	FUNCTION_48
0x40034c4	    0x644833042528	                xor rax, qword fs:[0x28]	      3188	buffer.c	FUNCTION_48
0x40034cd	            0x751b	                           jne 0x40034ea	      3188	buffer.c	FUNCTION_48
0x40034cf	        0x4883c428	                           add rsp, 0x28	      3188	buffer.c	FUNCTION_48
0x40034d3	              0x5b	                                 pop rbx	      3188	buffer.c	FUNCTION_48
0x40034d4	              0x5d	                                 pop rbp	      3188	buffer.c	FUNCTION_48
0x40034d5	              0xc3	                                     ret	      3188	buffer.c	FUNCTION_48
0x40034d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3188	buffer.c	FUNCTION_48
0x40034e0	    0x48c743d40000	               mov qword [rbx - 0x2c], 0	      3182	buffer.c	FUNCTION_48	IF_1
0x40034e8	            0xebd1	                           jmp 0x40034bb	      3182	buffer.c	FUNCTION_48	IF_1
0x40034ea	      0xe800000000	                          call 0x40034ef	      3188	buffer.c	FUNCTION_48
buf_findsign	FOR,1:WHILE,0:DO,0:ELSE,0:functions,0:CALL,0:SWITCH,0:IF,1	18
0x400c300	    0x488b87201c00	          mov rax, qword [rdi + 0x1c20] 	      5987	buffer.c	FUNCTION_93	FOR_1
0x400c307	          0x4885c0	                           test rax, rax	      5987	buffer.c	FUNCTION_93	FOR_1
0x400c30a	            0x7428	                            je 0x400c334	      5987	buffer.c	FUNCTION_93	FOR_1
0x400c30c	            0x3b30	                    cmp esi, dword [rax]	      5988	buffer.c	FUNCTION_93	FOR_1	IF_1
0x400c30e	            0x750c	                           jne 0x400c31c	      5988	buffer.c	FUNCTION_93	FOR_1	IF_1
0x400c310	            0xeb1e	                           jmp 0x400c330	      5988	buffer.c	FUNCTION_93	FOR_1	IF_1
0x400c312	    0x660f1f440000	                    nop word [rax + rax]	      5988	buffer.c	FUNCTION_93	FOR_1	IF_1
0x400c318	            0x3930	                    cmp dword [rax], esi	      5988	buffer.c	FUNCTION_93	FOR_1	IF_1
0x400c31a	            0x7414	                            je 0x400c330	      5988	buffer.c	FUNCTION_93	FOR_1	IF_1
0x400c31c	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5987	buffer.c	FUNCTION_93	FOR_1
0x400c320	          0x4885c0	                           test rax, rax	      5987	buffer.c	FUNCTION_93	FOR_1
0x400c323	            0x75f3	                           jne 0x400c318	      5987	buffer.c	FUNCTION_93	FOR_1
0x400c325	            0xf3c3	                                     ret	      5987	buffer.c	FUNCTION_93	FOR_1
0x400c327	    0x660f1f840000	                    nop word [rax + rax]	      5987	buffer.c	FUNCTION_93	FOR_1
0x400c330	          0x8b4008	                mov eax, dword [rax + 8]	      5989	buffer.c	FUNCTION_93	FOR_1	IF_1
0x400c333	              0xc3	                                     ret	      5989	buffer.c	FUNCTION_93	FOR_1	IF_1
0x400c334	            0x31c0	                            xor eax, eax	      5991	buffer.c	FUNCTION_93
0x400c336	              0xc3	                                     ret	      5992	buffer.c	FUNCTION_93
buf_signcount	FOR,1:WHILE,0:DO,0:ELSE,0:functions,0:CALL,1:SWITCH,0:IF,2	29
0x400c3c0	            0x4154	                                push r12	      6031	buffer.c	FUNCTION_96
0x400c3c2	              0x55	                                push rbp	      6031	buffer.c	FUNCTION_96
0x400c3c3	              0x53	                                push rbx	      6031	buffer.c	FUNCTION_96
0x400c3c4	    0x488b9f201c00	          mov rbx, qword [rdi + 0x1c20] 	      6035	buffer.c	FUNCTION_96	FOR_1
0x400c3cb	          0x4885db	                           test rbx, rbx	      6035	buffer.c	FUNCTION_96	FOR_1
0x400c3ce	            0x7440	                            je 0x400c410	      6035	buffer.c	FUNCTION_96	FOR_1
0x400c3d0	          0x4889f5	                            mov rbp, rsi	      6035	buffer.c	FUNCTION_96	FOR_1
0x400c3d3	          0x4531e4	                          xor r12d, r12d	      6035	buffer.c	FUNCTION_96	FOR_1
0x400c3d6	            0xeb11	                           jmp 0x400c3e9	      6035	buffer.c	FUNCTION_96	FOR_1
0x400c3d8	     0xf1f84000000	                   nop dword [rax + rax]	      6035	buffer.c	FUNCTION_96	FOR_1
0x400c3e0	        0x488b5b18	            mov rbx, qword [rbx + 0x18] 	      6035	buffer.c	FUNCTION_96	FOR_1
0x400c3e4	          0x4885db	                           test rbx, rbx	      6035	buffer.c	FUNCTION_96	FOR_1
0x400c3e7	            0x741f	                            je 0x400c408	      6035	buffer.c	FUNCTION_96	FOR_1
0x400c3e9	        0x48396b08	                cmp qword [rbx + 8], rbp	      6036	buffer.c	FUNCTION_96	FOR_1	IF_1
0x400c3ed	            0x75f1	                           jne 0x400c3e0	      6036	buffer.c	FUNCTION_96	FOR_1	IF_1
0x400c3ef	          0x8b7b10	            mov edi, dword [rbx + 0x10] 	      6037	buffer.c	FUNCTION_96	FOR_1	IF_1	IF_2	CALL_1
0x400c3f2	      0xe800000000	                          call 0x400c3f7	      6037	buffer.c	FUNCTION_96	FOR_1	IF_1	IF_2	CALL_1
0x400c3f7	        0x488b5b18	            mov rbx, qword [rbx + 0x18] 	      6035	buffer.c	FUNCTION_96	FOR_1
0x400c3fb	        0x4883f801	                              cmp rax, 1	      6038	buffer.c	FUNCTION_96	FOR_1	IF_1	IF_2
0x400c3ff	        0x4183dcff	            sbb r12d, 0xffffffffffffffff	      6038	buffer.c	FUNCTION_96	FOR_1	IF_1	IF_2
0x400c403	          0x4885db	                           test rbx, rbx	      6035	buffer.c	FUNCTION_96	FOR_1
0x400c406	            0x75e1	                           jne 0x400c3e9	      6035	buffer.c	FUNCTION_96	FOR_1
0x400c408	          0x4489e0	                           mov eax, r12d	      6041	buffer.c	FUNCTION_96
0x400c40b	              0x5b	                                 pop rbx	      6041	buffer.c	FUNCTION_96
0x400c40c	              0x5d	                                 pop rbp	      6041	buffer.c	FUNCTION_96
0x400c40d	            0x415c	                                 pop r12	      6041	buffer.c	FUNCTION_96
0x400c40f	              0xc3	                                     ret	      6041	buffer.c	FUNCTION_96
0x400c410	          0x4531e4	                          xor r12d, r12d	      6033	buffer.c	FUNCTION_96
0x400c413	            0xebf3	                           jmp 0x400c408	      6033	buffer.c	FUNCTION_96
buflist_getfile	FOR,0:WHILE,0:DO,0:ELSE,3:functions,0:CALL,18:SWITCH,0:IF,14	184
0x4002310	            0x4157	                                push r15	      2242	buffer.c	FUNCTION_28
0x4002312	            0x4156	                                push r14	      2242	buffer.c	FUNCTION_28
0x4002314	          0x4189cf	                           mov r15d, ecx	      2242	buffer.c	FUNCTION_28
0x4002317	            0x4155	                                push r13	      2242	buffer.c	FUNCTION_28
0x4002319	            0x4154	                                push r12	      2242	buffer.c	FUNCTION_28
0x400231b	          0x4989f6	                            mov r14, rsi	      2242	buffer.c	FUNCTION_28
0x400231e	              0x55	                                push rbp	      2242	buffer.c	FUNCTION_28
0x400231f	              0x53	                                push rbx	      2242	buffer.c	FUNCTION_28
0x4002320	            0x89fd	                            mov ebp, edi	      2242	buffer.c	FUNCTION_28
0x4002322	          0x4189d4	                           mov r12d, edx	      2242	buffer.c	FUNCTION_28
0x4002325	          0x4189f8	                            mov r8d, edi	      2242	buffer.c	FUNCTION_28
0x4002328	        0x4883ec38	                           sub rsp, 0x38	      2242	buffer.c	FUNCTION_28
0x400232c	    0x64488b042528	                mov rax, qword fs:[0x28]	      2242	buffer.c	FUNCTION_28
0x4002335	      0x4889442428	             mov qword [rsp + 0x28], rax	      2242	buffer.c	FUNCTION_28
0x400233a	            0x31c0	                            xor eax, eax	      2242	buffer.c	FUNCTION_28
0x400233c	            0x85ff	                           test edi, edi	      2713	buffer.c	FUNCTION_37	IF_1
0x400233e	            0x750e	                           jne 0x400234e	      2713	buffer.c	FUNCTION_37	IF_1
0x4002340	    0x488b05000000	            mov rax, qword [0x04002347] 	      2714	buffer.c	FUNCTION_37	IF_1
0x4002347	    0x448b80780100	           mov r8d, dword [rax + 0x178] 	      2714	buffer.c	FUNCTION_37	IF_1
0x400234e	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        33	stdio2.h	FUNCTION_116	CALL_1
0x4002353	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_116	CALL_1
0x4002358	      0xba09000000	                              mov edx, 9	        33	stdio2.h	FUNCTION_116	CALL_1
0x400235d	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_116	CALL_1
0x4002362	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_116	CALL_1
0x4002364	      0xe800000000	                          call 0x4002369	        33	stdio2.h	FUNCTION_116	CALL_1
0x4002369	      0x488d742410	                   lea rsi, [rsp + 0x10]	      2716	buffer.c	FUNCTION_37	CALL_1
0x400236e	      0xbf00000000	                              mov edi, 0	      2716	buffer.c	FUNCTION_37	CALL_1
0x4002373	      0xe800000000	                          call 0x4002378	      2716	buffer.c	FUNCTION_37	CALL_1
0x4002378	        0x488b5808	                mov rbx, qword [rax + 8]	      2718	buffer.c	FUNCTION_37	IF_2	CALL_2
0x400237c	          0x4885db	                           test rbx, rbx	      2718	buffer.c	FUNCTION_37	IF_2	CALL_2
0x400237f	     0xf84bb010000	                            je 0x4002540	      2718	buffer.c	FUNCTION_37	IF_2	CALL_2
0x4002385	    0x4881fb000000	                              cmp rbx, 0	      2718	buffer.c	FUNCTION_37	IF_2	CALL_2
0x400238c	     0xf84ae010000	                            je 0x4002540	      2718	buffer.c	FUNCTION_37	IF_2	CALL_2
0x4002392	          0x4989dd	                            mov r13, rbx	      2249	buffer.c	FUNCTION_28	IF_1
0x4002395	    0x4981edbc0000	                           sub r13, 0xbc	      2249	buffer.c	FUNCTION_28	IF_1
0x400239c	     0xf849e010000	                            je 0x4002540	      2249	buffer.c	FUNCTION_28	IF_1
0x40023a2	    0x4c392d000000	            cmp qword [0x040023a9], r13 	      2259	buffer.c	FUNCTION_28	IF_3
0x40023a9	     0xf8401010000	                            je 0x40024b0	      2259	buffer.c	FUNCTION_28	IF_3
0x40023af	      0xe800000000	                          call 0x40023b4	      2262	buffer.c	FUNCTION_28	IF_4	CALL_6
0x40023b4	            0x85c0	                           test eax, eax	      2262	buffer.c	FUNCTION_28	IF_4	CALL_6
0x40023b6	     0xf8504010000	                           jne 0x40024c0	      2262	buffer.c	FUNCTION_28	IF_4	CALL_6
0x40023bc	      0xe800000000	                          call 0x40023c1	      2267	buffer.c	FUNCTION_28	IF_5	CALL_8
0x40023c1	            0x85c0	                           test eax, eax	      2267	buffer.c	FUNCTION_28	IF_5	CALL_8
0x40023c3	            0x89c5	                            mov ebp, eax	      2267	buffer.c	FUNCTION_28	IF_5	CALL_8
0x40023c5	     0xf856d010000	                           jne 0x4002538	      2267	buffer.c	FUNCTION_28	IF_5	CALL_8
0x40023cb	          0x4d85f6	                           test r14, r14	      2271	buffer.c	FUNCTION_28	IF_6
0x40023ce	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      2278	buffer.c	FUNCTION_28	ELSE_2
0x40023d6	     0xf8414010000	                            je 0x40024f0	      2271	buffer.c	FUNCTION_28	IF_6
0x40023dc	        0x41f6c404	                            test r12b, 4	      2280	buffer.c	FUNCTION_28	ELSE_2	IF_7
0x40023e0	            0x746e	                            je 0x4002450	      2280	buffer.c	FUNCTION_28	ELSE_2	IF_7
0x40023e2	    0x8b3500000000	            mov esi, dword [0x040023e8] 	      2284	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_8
0x40023e8	        0x40f6c601	                             test sil, 1	      2284	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_8
0x40023ec	     0xf857e010000	                           jne 0x4002570	      2284	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_8
0x40023f2	        0x40f6c602	                             test sil, 2	      2289	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_9
0x40023f6	     0xf8594010000	                           jne 0x4002590	      2289	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_9
0x40023fc	        0x40f6c61c	                          test sil, 0x1c	      2294	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10
0x4002400	            0x744e	                            je 0x4002450	      2294	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10
0x4002402	    0x488b05000000	            mov rax, qword [0x04002409] 	      2295	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_12
0x4002409	        0x48833801	                      cmp qword [rax], 1	      2295	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_12
0x400240d	     0xf84d9010000	                            je 0x40025ec	      2295	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_12
0x4002413	        0x40f6c608	                             test sil, 8	      2297	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	IF_11
0x4002417	     0xf85bb010000	                           jne 0x40025d8	      2297	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	IF_11
0x400241d	          0xc1ee03	                              shr esi, 3	      2299	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12	CALL_14
0x4002420	            0x31ff	                            xor edi, edi	      2299	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12	CALL_14
0x4002422	          0x83e602	                              and esi, 2	      2299	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12	CALL_14
0x4002425	      0xe800000000	                          call 0x400242a	      2299	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12	CALL_14
0x400242a	            0x85c0	                           test eax, eax	      2299	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12	CALL_14
0x400242c	     0xf8406010000	                            je 0x4002538	      2299	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	ELSE_3	IF_12	CALL_14
0x4002432	    0x488b05000000	            mov rax, qword [0x04002439] 	      2302	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_15
0x4002439	    0xc78088020000	              mov dword [rax + 0x288], 0	      2302	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_15
0x4002443	    0xc780b0020000	              mov dword [rax + 0x2b0], 0	      2302	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_15
0x400244d	           0xf1f00	                         nop dword [rax]	      2302	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_15
0x4002450	          0x8b7bfc	                mov edi, dword [rbx - 4]	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x4002453	          0x4489e1	                           mov ecx, r12d	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x4002456	            0x31d2	                            xor edx, edx	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x4002458	          0x83e101	                              and ecx, 1	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x400245b	            0x31f6	                            xor esi, esi	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x400245d	          0x4589f9	                           mov r9d, r15d	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x4002460	          0x4d89f0	                             mov r8, r14	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x4002463	    0x830500000000	               add dword [0x0400246a], 1	      2306	buffer.c	FUNCTION_28
0x400246a	      0xe800000000	                          call 0x400246f	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x400246f	    0x832d00000000	               sub dword [0x04002476], 1	      2310	buffer.c	FUNCTION_28	IF_13
0x4002476	            0x85c0	                           test eax, eax	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x4002478	            0x7f4d	                            jg 0x40024c7	      2307	buffer.c	FUNCTION_28	IF_13	CALL_17
0x400247a	    0x8b0500000000	            mov eax, dword [0x04002480] 	      2313	buffer.c	FUNCTION_28	IF_13	IF_14
0x4002480	            0x85c0	                           test eax, eax	      2313	buffer.c	FUNCTION_28	IF_13	IF_14
0x4002482	            0x752c	                           jne 0x40024b0	      2313	buffer.c	FUNCTION_28	IF_13	IF_14
0x4002484	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      2313	buffer.c	FUNCTION_28	IF_13	IF_14
0x4002488	            0x85c9	                           test ecx, ecx	      2313	buffer.c	FUNCTION_28	IF_13	IF_14
0x400248a	            0x7424	                            je 0x40024b0	      2313	buffer.c	FUNCTION_28	IF_13	IF_14
0x400248c	    0x488b05000000	            mov rax, qword [0x04002493] 	      2315	buffer.c	FUNCTION_28	IF_13	IF_14
0x4002493	          0x894840	             mov dword [rax + 0x40], ecx	      2315	buffer.c	FUNCTION_28	IF_13	IF_14
0x4002496	      0xe800000000	                          call 0x400249b	      2316	buffer.c	FUNCTION_28	IF_13	IF_14	CALL_18
0x400249b	    0x488b05000000	            mov rax, qword [0x040024a2] 	      2318	buffer.c	FUNCTION_28	IF_13	IF_14
0x40024a2	    0xc74044000000	               mov dword [rax + 0x44], 0	      2318	buffer.c	FUNCTION_28	IF_13	IF_14
0x40024a9	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      2320	buffer.c	FUNCTION_28	IF_13	IF_14
0x40024b0	      0xbd01000000	                              mov ebp, 1	      2322	buffer.c	FUNCTION_28	IF_13
0x40024b5	            0xeb10	                           jmp 0x40024c7	      2322	buffer.c	FUNCTION_28	IF_13
0x40024b7	    0x660f1f840000	                    nop word [rax + rax]	      2322	buffer.c	FUNCTION_28	IF_13
0x40024c0	            0x31ed	                            xor ebp, ebp	      2265	buffer.c	FUNCTION_28	IF_4
0x40024c2	      0xe800000000	                          call 0x40024c7	      2264	buffer.c	FUNCTION_28	IF_4	CALL_7
0x40024c7	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      2326	buffer.c	FUNCTION_28
0x40024cc	    0x644833142528	                xor rdx, qword fs:[0x28]	      2326	buffer.c	FUNCTION_28
0x40024d5	            0x89e8	                            mov eax, ebp	      2326	buffer.c	FUNCTION_28
0x40024d7	     0xf852d010000	                           jne 0x400260a	      2326	buffer.c	FUNCTION_28
0x40024dd	        0x4883c438	                           add rsp, 0x38	      2326	buffer.c	FUNCTION_28
0x40024e1	              0x5b	                                 pop rbx	      2326	buffer.c	FUNCTION_28
0x40024e2	              0x5d	                                 pop rbp	      2326	buffer.c	FUNCTION_28
0x40024e3	            0x415c	                                 pop r12	      2326	buffer.c	FUNCTION_28
0x40024e5	            0x415d	                                 pop r13	      2326	buffer.c	FUNCTION_28
0x40024e7	            0x415e	                                 pop r14	      2326	buffer.c	FUNCTION_28
0x40024e9	            0x415f	                                 pop r15	      2326	buffer.c	FUNCTION_28
0x40024eb	              0xc3	                                     ret	      2326	buffer.c	FUNCTION_28
0x40024ec	         0xf1f4000	                         nop dword [rax]	      2326	buffer.c	FUNCTION_28
0x40024f0	        0x488b4b6c	            mov rcx, qword [rbx + 0x6c] 	      2326	buffer.c	FUNCTION_28
0x40024f4	          0x4885c9	                           test rcx, rcx	      2855	buffer.c	FUNCTION_41	FOR_1
0x40024f7	     0xf84e5000000	                            je 0x40025e2	      2855	buffer.c	FUNCTION_41	FOR_1
0x40024fd	    0x488b15000000	            mov rdx, qword [0x04002504] 	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x4002504	        0x483b5110	            cmp rdx, qword [rcx + 0x10] 	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x4002508	          0x4889c8	                            mov rax, rcx	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x400250b	            0x7415	                            je 0x4002522	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x400250d	           0xf1f00	                         nop dword [rax]	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x4002510	          0x488b00	                    mov rax, qword [rax]	      2855	buffer.c	FUNCTION_41	FOR_1
0x4002513	          0x4885c0	                           test rax, rax	      2855	buffer.c	FUNCTION_41	FOR_1
0x4002516	     0xf84b4000000	                            je 0x40025d0	      2855	buffer.c	FUNCTION_41	FOR_1
0x400251c	        0x483b5010	            cmp rdx, qword [rax + 0x10] 	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x4002520	            0x75ee	                           jne 0x4002510	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x4002522	        0x4883c018	                           add rax, 0x18	      2933	buffer.c	FUNCTION_43	IF_1
0x4002526	          0x4c8b30	                    mov r14, qword [rax]	      2274	buffer.c	FUNCTION_28	IF_6
0x4002529	          0x8b4008	                mov eax, dword [rax + 8]	      2275	buffer.c	FUNCTION_28	IF_6
0x400252c	        0x8944240c	              mov dword [rsp + 0xc], eax	      2275	buffer.c	FUNCTION_28	IF_6
0x4002530	      0xe9a7feffff	                           jmp 0x40023dc	      2275	buffer.c	FUNCTION_28	IF_6
0x4002535	           0xf1f00	                         nop dword [rax]	      2275	buffer.c	FUNCTION_28	IF_6
0x4002538	            0x31ed	                            xor ebp, ebp	      2268	buffer.c	FUNCTION_28	IF_5
0x400253a	            0xeb8b	                           jmp 0x40024c7	      2268	buffer.c	FUNCTION_28	IF_5
0x400253c	         0xf1f4000	                         nop dword [rax]	      2268	buffer.c	FUNCTION_28	IF_5
0x4002540	        0x4183e402	                             and r12d, 2	      2251	buffer.c	FUNCTION_28	IF_1	IF_2
0x4002544	      0xba05000000	                              mov edx, 5	      2252	buffer.c	FUNCTION_28	IF_1	CALL_3
0x4002549	            0x7404	                            je 0x400254f	      2251	buffer.c	FUNCTION_28	IF_1	IF_2
0x400254b	            0x85ed	                           test ebp, ebp	      2251	buffer.c	FUNCTION_28	IF_1	IF_2
0x400254d	            0x7461	                            je 0x40025b0	      2251	buffer.c	FUNCTION_28	IF_1	IF_2
0x400254f	      0xbe00000000	                              mov esi, 0	      2254	buffer.c	FUNCTION_28	IF_1	CALL_5
0x4002554	            0x31ff	                            xor edi, edi	      2254	buffer.c	FUNCTION_28	IF_1	CALL_5
0x4002556	      0xe800000000	                          call 0x400255b	      2254	buffer.c	FUNCTION_28	IF_1	CALL_5
0x400255b	          0x4863f5	                         movsxd rsi, ebp	      2254	buffer.c	FUNCTION_28	IF_1	CALL_5
0x400255e	          0x4889c7	                            mov rdi, rax	      2254	buffer.c	FUNCTION_28	IF_1	CALL_5
0x4002561	            0x31ed	                            xor ebp, ebp	      2255	buffer.c	FUNCTION_28	IF_1
0x4002563	      0xe800000000	                          call 0x4002568	      2254	buffer.c	FUNCTION_28	IF_1	CALL_5
0x4002568	      0xe95affffff	                           jmp 0x40024c7	      2254	buffer.c	FUNCTION_28	IF_1	CALL_5
0x400256d	           0xf1f00	                         nop dword [rax]	      2254	buffer.c	FUNCTION_28	IF_1	CALL_5
0x4002570	          0x4c89ef	                            mov rdi, r13	      2285	buffer.c	FUNCTION_28	ELSE_2	IF_7	CALL_10
0x4002573	      0xe800000000	                          call 0x4002578	      2285	buffer.c	FUNCTION_28	ELSE_2	IF_7	CALL_10
0x4002578	          0x4885c0	                           test rax, rax	      2289	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_9
0x400257b	     0xf85cffeffff	                           jne 0x4002450	      2289	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_9
0x4002581	    0x8b3500000000	            mov esi, dword [0x04002587] 	      2289	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_9
0x4002587	      0xe966feffff	                           jmp 0x40023f2	      2289	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_9
0x400258c	         0xf1f4000	                         nop dword [rax]	      2289	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_9
0x4002590	          0x4c89ef	                            mov rdi, r13	      2290	buffer.c	FUNCTION_28	ELSE_2	IF_7	CALL_11
0x4002593	      0xe800000000	                          call 0x4002598	      2290	buffer.c	FUNCTION_28	ELSE_2	IF_7	CALL_11
0x4002598	          0x4885c0	                           test rax, rax	      2294	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10
0x400259b	     0xf85affeffff	                           jne 0x4002450	      2294	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10
0x40025a1	    0x8b3500000000	            mov esi, dword [0x040025a7] 	      2294	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10
0x40025a7	      0xe950feffff	                           jmp 0x40023fc	      2294	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10
0x40025ac	         0xf1f4000	                         nop dword [rax]	      2294	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10
0x40025b0	            0x31ff	                            xor edi, edi	      2252	buffer.c	FUNCTION_28	IF_1	CALL_3
0x40025b2	      0xbe00000000	                              mov esi, 0	      2252	buffer.c	FUNCTION_28	IF_1	CALL_3
0x40025b7	      0xe800000000	                          call 0x40025bc	      2252	buffer.c	FUNCTION_28	IF_1	CALL_3
0x40025bc	          0x4889c7	                            mov rdi, rax	      2252	buffer.c	FUNCTION_28	IF_1	CALL_3
0x40025bf	      0xe800000000	                          call 0x40025c4	      2252	buffer.c	FUNCTION_28	IF_1	CALL_3
0x40025c4	      0xe9fefeffff	                           jmp 0x40024c7	      2252	buffer.c	FUNCTION_28	IF_1	CALL_3
0x40025c9	     0xf1f80000000	                         nop dword [rax]	      2252	buffer.c	FUNCTION_28	IF_1	CALL_3
0x40025d0	          0x4889c8	                            mov rax, rcx	      2855	buffer.c	FUNCTION_41	FOR_1
0x40025d3	      0xe94affffff	                           jmp 0x4002522	      2855	buffer.c	FUNCTION_41	FOR_1
0x40025d8	      0xe800000000	                          call 0x40025dd	      2298	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_13
0x40025dd	      0xe950feffff	                           jmp 0x4002432	      2298	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_13
0x40025e2	      0xb800000000	                              mov eax, 0	      2935	buffer.c	FUNCTION_43	ELSE_1
0x40025e7	      0xe93affffff	                           jmp 0x4002526	      2935	buffer.c	FUNCTION_43	ELSE_1
0x40025ec	      0xbf01000000	                              mov edi, 1	      2295	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_12
0x40025f1	      0xe800000000	                          call 0x40025f6	      2295	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_12
0x40025f6	          0x803800	                       cmp byte [rax], 0	      2295	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_12
0x40025f9	     0xf8451feffff	                            je 0x4002450	      2295	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_12
0x40025ff	    0x8b3500000000	            mov esi, dword [0x04002605] 	      2295	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_12
0x4002605	      0xe909feffff	                           jmp 0x4002413	      2295	buffer.c	FUNCTION_28	ELSE_2	IF_7	IF_10	CALL_12
0x400260a	      0xe800000000	                          call 0x400260f	      2326	buffer.c	FUNCTION_28
buf_addsign	FOR,1:WHILE,2:DO,0:ELSE,3:functions,0:CALL,2:SWITCH,0:IF,4	169
0x400bec0	            0x4157	                                push r15	      5836	buffer.c	ELSE_1	FUNCTION_89
0x400bec2	            0x4156	                                push r14	      5836	buffer.c	ELSE_1	FUNCTION_89
0x400bec4	          0x4189f7	                           mov r15d, esi	      5836	buffer.c	ELSE_1	FUNCTION_89
0x400bec7	            0x4155	                                push r13	      5836	buffer.c	ELSE_1	FUNCTION_89
0x400bec9	            0x4154	                                push r12	      5836	buffer.c	ELSE_1	FUNCTION_89
0x400becb	          0x4989fd	                            mov r13, rdi	      5836	buffer.c	ELSE_1	FUNCTION_89
0x400bece	              0x55	                                push rbp	      5836	buffer.c	ELSE_1	FUNCTION_89
0x400becf	              0x53	                                push rbx	      5836	buffer.c	ELSE_1	FUNCTION_89
0x400bed0	          0x4989d4	                            mov r12, rdx	      5836	buffer.c	ELSE_1	FUNCTION_89
0x400bed3	        0x4883ec18	                           sub rsp, 0x18	      5836	buffer.c	ELSE_1	FUNCTION_89
0x400bed7	    0x4c8bb7201c00	          mov r14, qword [rdi + 0x1c20] 	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x400bede	          0x4d85f6	                           test r14, r14	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x400bee1	     0xf84b2010000	                            je 0x400c099	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x400bee7	          0x4c89f3	                            mov rbx, r14	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x400beea	            0x31ed	                            xor ebp, ebp	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x400beec	            0xeb17	                           jmp 0x400bf05	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x400beee	            0x6690	                                     nop	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x400bef0	            0x7f36	                            jg 0x400bf28	      5848	buffer.c	FUNCTION_89	FOR_1	IF_2
0x400bef2	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x400bef6	          0x4889dd	                            mov rbp, rbx	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x400bef9	          0x4885c0	                           test rax, rax	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x400befc	     0xf849e000000	                            je 0x400bfa0	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x400bf02	          0x4889c3	                            mov rbx, rax	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x400bf05	        0x488b7308	                mov rsi, qword [rbx + 8]	      5843	buffer.c	ELSE_1	FUNCTION_89	FOR_1	IF_1
0x400bf09	          0x4c39e6	                            cmp rsi, r12	      5843	buffer.c	ELSE_1	FUNCTION_89	FOR_1	IF_1
0x400bf0c	            0x75e2	                           jne 0x400bef0	      5843	buffer.c	ELSE_1	FUNCTION_89	FOR_1	IF_1
0x400bf0e	          0x443b3b	                   cmp r15d, dword [rbx]	      5843	buffer.c	ELSE_1	FUNCTION_89	FOR_1	IF_1
0x400bf11	            0x75df	                           jne 0x400bef2	      5843	buffer.c	ELSE_1	FUNCTION_89	FOR_1	IF_1
0x400bf13	          0x894b10	             mov dword [rbx + 0x10], ecx	      5845	buffer.c	ELSE_1	FUNCTION_89	FOR_1	IF_1
0x400bf16	        0x4883c418	                           add rsp, 0x18	      5883	buffer.c	FUNCTION_89	ELSE_1
0x400bf1a	              0x5b	                                 pop rbx	      5883	buffer.c	FUNCTION_89	ELSE_1
0x400bf1b	              0x5d	                                 pop rbp	      5883	buffer.c	FUNCTION_89	ELSE_1
0x400bf1c	            0x415c	                                 pop r12	      5883	buffer.c	FUNCTION_89	ELSE_1
0x400bf1e	            0x415d	                                 pop r13	      5883	buffer.c	FUNCTION_89	ELSE_1
0x400bf20	            0x415e	                                 pop r14	      5883	buffer.c	FUNCTION_89	ELSE_1
0x400bf22	            0x415f	                                 pop r15	      5883	buffer.c	FUNCTION_89	ELSE_1
0x400bf24	              0xc3	                                     ret	      5883	buffer.c	FUNCTION_89	ELSE_1
0x400bf25	           0xf1f00	                         nop dword [rax]	      5883	buffer.c	FUNCTION_89	ELSE_1
0x400bf28	          0x4885ed	                           test rbp, rbp	      5859	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0x400bf2b	            0x7518	                           jne 0x400bf45	      5859	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0x400bf2d	      0xe9e6000000	                           jmp 0x400c018	      5859	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0x400bf32	    0x660f1f440000	                    nop word [rax + rax]	      5859	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0x400bf38	        0x488b6d20	            mov rbp, qword [rbp + 0x20] 	      5860	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0x400bf3c	          0x4885ed	                           test rbp, rbp	      5859	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0x400bf3f	     0xf84d3000000	                            je 0x400c018	      5859	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0x400bf45	        0x4c3b6508	                cmp r12, qword [rbp + 8]	      5859	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0x400bf49	            0x74ed	                            je 0x400bf38	      5859	buffer.c	FUNCTION_89	FOR_1	IF_2	WHILE_1
0x400bf4b	            0x31f6	                            xor esi, esi	      5792	buffer.c	FUNCTION_88	CALL_1
0x400bf4d	      0xbf28000000	                           mov edi, 0x28	      5792	buffer.c	FUNCTION_88	CALL_1
0x400bf52	        0x894c2408	                mov dword [rsp + 8], ecx	      5792	buffer.c	FUNCTION_88	CALL_1
0x400bf56	        0x4c8b7518	            mov r14, qword [rbp + 0x18] 	      5864	buffer.c	FUNCTION_89	FOR_1	IF_2	ELSE_2
0x400bf5a	      0xe800000000	                          call 0x400bf5f	      5792	buffer.c	FUNCTION_88	CALL_1
0x400bf5f	          0x4885c0	                           test rax, rax	      5793	buffer.c	FUNCTION_88	IF_1
0x400bf62	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      5793	buffer.c	FUNCTION_88	IF_1
0x400bf66	            0x7428	                            je 0x400bf90	      5793	buffer.c	FUNCTION_88	IF_1
0x400bf68	          0x4d85f6	                           test r14, r14	      5801	buffer.c	FUNCTION_88	IF_1	IF_2
0x400bf6b	          0x448938	                   mov dword [rax], r15d	      5795	buffer.c	FUNCTION_88	IF_1
0x400bf6e	        0x4c896008	                mov qword [rax + 8], r12	      5796	buffer.c	FUNCTION_88	IF_1
0x400bf72	          0x894810	             mov dword [rax + 0x10], ecx	      5797	buffer.c	FUNCTION_88	IF_1
0x400bf75	        0x4c897018	             mov qword [rax + 0x18], r14	      5798	buffer.c	FUNCTION_88	IF_1
0x400bf79	        0x48896820	             mov qword [rax + 0x20], rbp	      5800	buffer.c	FUNCTION_88	IF_1
0x400bf7d	            0x740d	                            je 0x400bf8c	      5801	buffer.c	FUNCTION_88	IF_1	IF_2
0x400bf7f	          0x4885ed	                           test rbp, rbp	      5805	buffer.c	FUNCTION_88	IF_1	IF_3
0x400bf82	        0x49894620	             mov qword [r14 + 0x20], rax	      5802	buffer.c	FUNCTION_88	IF_1	IF_2
0x400bf86	     0xf8444010000	                            je 0x400c0d0	      5805	buffer.c	FUNCTION_88	IF_1	IF_3
0x400bf8c	        0x48894518	            mov qword [rbp + 0x18], rax 	      5823	buffer.c	FUNCTION_88	IF_1	ELSE_1
0x400bf90	        0x4883c418	                           add rsp, 0x18	      5883	buffer.c	FUNCTION_89	ELSE_1
0x400bf94	              0x5b	                                 pop rbx	      5883	buffer.c	FUNCTION_89	ELSE_1
0x400bf95	              0x5d	                                 pop rbp	      5883	buffer.c	FUNCTION_89	ELSE_1
0x400bf96	            0x415c	                                 pop r12	      5883	buffer.c	FUNCTION_89	ELSE_1
0x400bf98	            0x415d	                                 pop r13	      5883	buffer.c	FUNCTION_89	ELSE_1
0x400bf9a	            0x415e	                                 pop r14	      5883	buffer.c	FUNCTION_89	ELSE_1
0x400bf9c	            0x415f	                                 pop r15	      5883	buffer.c	FUNCTION_89	ELSE_1
0x400bf9e	              0xc3	                                     ret	      5883	buffer.c	FUNCTION_89	ELSE_1
0x400bf9f	              0x90	                                     nop	      5883	buffer.c	FUNCTION_89	ELSE_1
0x400bfa0	          0x4c39e6	                            cmp rsi, r12	      5873	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0x400bfa3	            0x7415	                            je 0x400bfba	      5873	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0x400bfa5	      0xe954010000	                           jmp 0x400c0fe	      5873	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0x400bfaa	    0x660f1f440000	                    nop word [rax + rax]	      5873	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0x400bfb0	        0x4c3b6308	                cmp r12, qword [rbx + 8]	      5873	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0x400bfb4	     0xf859e000000	                           jne 0x400c058	      5873	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0x400bfba	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      5874	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0x400bfbe	          0x4885db	                           test rbx, rbx	      5873	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0x400bfc1	            0x75ed	                           jne 0x400bfb0	      5873	buffer.c	FUNCTION_89	ELSE_1	WHILE_2
0x400bfc3	            0x31f6	                            xor esi, esi	      5792	buffer.c	FUNCTION_88	CALL_1
0x400bfc5	      0xbf28000000	                           mov edi, 0x28	      5792	buffer.c	FUNCTION_88	CALL_1
0x400bfca	        0x894c2408	                mov dword [rsp + 8], ecx	      5792	buffer.c	FUNCTION_88	CALL_1
0x400bfce	      0xe800000000	                          call 0x400bfd3	      5792	buffer.c	FUNCTION_88	CALL_1
0x400bfd3	          0x4885c0	                           test rax, rax	      5793	buffer.c	FUNCTION_88	IF_1
0x400bfd6	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      5793	buffer.c	FUNCTION_88	IF_1
0x400bfda	            0x74b4	                            je 0x400bf90	      5793	buffer.c	FUNCTION_88	IF_1
0x400bfdc	          0x448938	                   mov dword [rax], r15d	      5795	buffer.c	FUNCTION_88	IF_1
0x400bfdf	        0x4c896008	                mov qword [rax + 8], r12	      5796	buffer.c	FUNCTION_88	IF_1
0x400bfe3	          0x894810	             mov dword [rax + 0x10], ecx	      5797	buffer.c	FUNCTION_88	IF_1
0x400bfe6	        0x4c897018	             mov qword [rax + 0x18], r14	      5798	buffer.c	FUNCTION_88	IF_1
0x400bfea	    0x48c740200000	               mov qword [rax + 0x20], 0	      5800	buffer.c	FUNCTION_88	IF_1
0x400bff2	          0x4885db	                           test rbx, rbx	      5805	buffer.c	FUNCTION_88	IF_1	IF_3
0x400bff5	        0x49894620	             mov qword [r14 + 0x20], rax	      5802	buffer.c	FUNCTION_88	IF_1	IF_2
0x400bff9	     0xf84d1000000	                            je 0x400c0d0	      5805	buffer.c	FUNCTION_88	IF_1	IF_3
0x400bfff	        0x48894318	             mov qword [rbx + 0x18], rax	      5823	buffer.c	FUNCTION_88	IF_1	ELSE_1
0x400c003	        0x4883c418	                           add rsp, 0x18	      5883	buffer.c	FUNCTION_89	ELSE_1
0x400c007	              0x5b	                                 pop rbx	      5883	buffer.c	FUNCTION_89	ELSE_1
0x400c008	              0x5d	                                 pop rbp	      5883	buffer.c	FUNCTION_89	ELSE_1
0x400c009	            0x415c	                                 pop r12	      5883	buffer.c	FUNCTION_89	ELSE_1
0x400c00b	            0x415d	                                 pop r13	      5883	buffer.c	FUNCTION_89	ELSE_1
0x400c00d	            0x415e	                                 pop r14	      5883	buffer.c	FUNCTION_89	ELSE_1
0x400c00f	            0x415f	                                 pop r15	      5883	buffer.c	FUNCTION_89	ELSE_1
0x400c011	              0xc3	                                     ret	      5883	buffer.c	FUNCTION_89	ELSE_1
0x400c012	    0x660f1f440000	                    nop word [rax + rax]	      5883	buffer.c	FUNCTION_89	ELSE_1
0x400c018	            0x31f6	                            xor esi, esi	      5792	buffer.c	FUNCTION_88	CALL_1
0x400c01a	      0xbf28000000	                           mov edi, 0x28	      5792	buffer.c	FUNCTION_88	CALL_1
0x400c01f	        0x894c2408	                mov dword [rsp + 8], ecx	      5792	buffer.c	FUNCTION_88	CALL_1
0x400c023	      0xe800000000	                          call 0x400c028	      5792	buffer.c	FUNCTION_88	CALL_1
0x400c028	          0x4885c0	                           test rax, rax	      5793	buffer.c	FUNCTION_88	IF_1
0x400c02b	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      5793	buffer.c	FUNCTION_88	IF_1
0x400c02f	     0xf845bffffff	                            je 0x400bf90	      5793	buffer.c	FUNCTION_88	IF_1
0x400c035	          0x448938	                   mov dword [rax], r15d	      5795	buffer.c	FUNCTION_88	IF_1
0x400c038	        0x4c896008	                mov qword [rax + 8], r12	      5796	buffer.c	FUNCTION_88	IF_1
0x400c03c	            0x31ed	                            xor ebp, ebp	      5800	buffer.c	FUNCTION_88	IF_1
0x400c03e	          0x894810	             mov dword [rax + 0x10], ecx	      5797	buffer.c	FUNCTION_88	IF_1
0x400c041	        0x4c897018	             mov qword [rax + 0x18], r14	      5798	buffer.c	FUNCTION_88	IF_1
0x400c045	    0x48c740200000	               mov qword [rax + 0x20], 0	      5800	buffer.c	FUNCTION_88	IF_1
0x400c04d	      0xe92dffffff	                           jmp 0x400bf7f	      5800	buffer.c	FUNCTION_88	IF_1
0x400c052	    0x660f1f440000	                    nop word [rax + rax]	      5800	buffer.c	FUNCTION_88	IF_1
0x400c058	        0x4c8b7318	            mov r14, qword [rbx + 0x18] 	      5800	buffer.c	FUNCTION_88	IF_1
0x400c05c	            0x31f6	                            xor esi, esi	      5792	buffer.c	FUNCTION_88	CALL_1
0x400c05e	      0xbf28000000	                           mov edi, 0x28	      5792	buffer.c	FUNCTION_88	CALL_1
0x400c063	        0x894c2408	                mov dword [rsp + 8], ecx	      5792	buffer.c	FUNCTION_88	CALL_1
0x400c067	      0xe800000000	                          call 0x400c06c	      5792	buffer.c	FUNCTION_88	CALL_1
0x400c06c	          0x4885c0	                           test rax, rax	      5793	buffer.c	FUNCTION_88	IF_1
0x400c06f	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      5793	buffer.c	FUNCTION_88	IF_1
0x400c073	     0xf8417ffffff	                            je 0x400bf90	      5793	buffer.c	FUNCTION_88	IF_1
0x400c079	          0x4d85f6	                           test r14, r14	      5801	buffer.c	FUNCTION_88	IF_1	IF_2
0x400c07c	          0x448938	                   mov dword [rax], r15d	      5795	buffer.c	FUNCTION_88	IF_1
0x400c07f	        0x4c896008	                mov qword [rax + 8], r12	      5796	buffer.c	FUNCTION_88	IF_1
0x400c083	          0x894810	             mov dword [rax + 0x10], ecx	      5797	buffer.c	FUNCTION_88	IF_1
0x400c086	        0x4c897018	             mov qword [rax + 0x18], r14	      5798	buffer.c	FUNCTION_88	IF_1
0x400c08a	        0x48895820	             mov qword [rax + 0x20], rbx	      5800	buffer.c	FUNCTION_88	IF_1
0x400c08e	     0xf855effffff	                           jne 0x400bff2	      5801	buffer.c	FUNCTION_88	IF_1	IF_2
0x400c094	      0xe966ffffff	                           jmp 0x400bfff	      5801	buffer.c	FUNCTION_88	IF_1	IF_2
0x400c099	            0x31f6	                            xor esi, esi	      5792	buffer.c	FUNCTION_88	CALL_1
0x400c09b	      0xbf28000000	                           mov edi, 0x28	      5792	buffer.c	FUNCTION_88	CALL_1
0x400c0a0	        0x894c2408	                mov dword [rsp + 8], ecx	      5792	buffer.c	FUNCTION_88	CALL_1
0x400c0a4	      0xe800000000	                          call 0x400c0a9	      5792	buffer.c	FUNCTION_88	CALL_1
0x400c0a9	          0x4885c0	                           test rax, rax	      5793	buffer.c	FUNCTION_88	IF_1
0x400c0ac	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      5793	buffer.c	FUNCTION_88	IF_1
0x400c0b0	     0xf84dafeffff	                            je 0x400bf90	      5793	buffer.c	FUNCTION_88	IF_1
0x400c0b6	          0x448938	                   mov dword [rax], r15d	      5795	buffer.c	FUNCTION_88	IF_1
0x400c0b9	        0x4c896008	                mov qword [rax + 8], r12	      5796	buffer.c	FUNCTION_88	IF_1
0x400c0bd	          0x894810	             mov dword [rax + 0x10], ecx	      5797	buffer.c	FUNCTION_88	IF_1
0x400c0c0	    0x48c740180000	               mov qword [rax + 0x18], 0	      5798	buffer.c	FUNCTION_88	IF_1
0x400c0c8	    0x48c740200000	               mov qword [rax + 0x20], 0	      5800	buffer.c	FUNCTION_88	IF_1
0x400c0d0	    0x4983bd201c00	             cmp qword [r13 + 0x1c20], 0	      5809	buffer.c	FUNCTION_88	IF_1	IF_3	IF_4
0x400c0d8	            0x742c	                            je 0x400c106	      5809	buffer.c	FUNCTION_88	IF_1	IF_3	IF_4
0x400c0da	    0x498985201c00	          mov qword [r13 + 0x1c20], rax 	      5816	buffer.c	FUNCTION_88	IF_1	IF_3
0x400c0e1	      0xe800000000	                          call 0x400c0e6	      5818	buffer.c	FUNCTION_88	IF_1	IF_3	IF_5	CALL_4
0x400c0e6	            0x85c0	                           test eax, eax	      5818	buffer.c	FUNCTION_88	IF_1	IF_3	IF_5	CALL_4
0x400c0e8	     0xf84a2feffff	                            je 0x400bf90	      5818	buffer.c	FUNCTION_88	IF_1	IF_3	IF_5	CALL_4
0x400c0ee	    0x41c785281c00	            mov dword [r13 + 0x1c28], 1 	      5819	buffer.c	FUNCTION_88	IF_1	IF_3	IF_5
0x400c0f9	      0xe992feffff	                           jmp 0x400bf90	      5819	buffer.c	FUNCTION_88	IF_1	IF_3	IF_5
0x400c0fe	          0x4531f6	                          xor r14d, r14d	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x400c101	      0xe956ffffff	                           jmp 0x400c05c	      5841	buffer.c	ELSE_1	FUNCTION_89	FOR_1
0x400c106	      0xbe28000000	                           mov esi, 0x28	      5811	buffer.c	FUNCTION_88	IF_1	IF_3	IF_4	CALL_2
0x400c10b	          0x4c89ef	                            mov rdi, r13	      5811	buffer.c	FUNCTION_88	IF_1	IF_3	IF_4	CALL_2
0x400c10e	      0x4889442408	                mov qword [rsp + 8], rax	      5811	buffer.c	FUNCTION_88	IF_1	IF_3	IF_4	CALL_2
0x400c113	      0xe800000000	                          call 0x400c118	      5811	buffer.c	FUNCTION_88	IF_1	IF_3	IF_4	CALL_2
0x400c118	      0xe800000000	                          call 0x400c11d	      5812	buffer.c	FUNCTION_88	IF_1	IF_3	IF_4	CALL_3
0x400c11d	      0x488b442408	                mov rax, qword [rsp + 8]	      5812	buffer.c	FUNCTION_88	IF_1	IF_3	IF_4	CALL_3
0x400c122	            0xebb6	                           jmp 0x400c0da	      5812	buffer.c	FUNCTION_88	IF_1	IF_3	IF_4	CALL_3
setaltfname	FOR,0:WHILE,0:DO,0:ELSE,0:functions,0:CALL,1:SWITCH,0:IF,1	13
0x40034f0	        0x4883ec08	                              sub rsp, 8	      3224	buffer.c	FUNCTION_50
0x40034f4	            0x31c9	                            xor ecx, ecx	      3228	buffer.c	FUNCTION_50	CALL_1
0x40034f6	      0xe800000000	                          call 0x40034fb	      3228	buffer.c	FUNCTION_50	CALL_1
0x40034fb	          0x4885c0	                           test rax, rax	      3229	buffer.c	FUNCTION_50	IF_1
0x40034fe	            0x741d	                            je 0x400351d	      3229	buffer.c	FUNCTION_50	IF_1
0x4003500	    0x8b1500000000	            mov edx, dword [0x04003506] 	      3229	buffer.c	FUNCTION_50	IF_1
0x4003506	            0x85d2	                           test edx, edx	      3229	buffer.c	FUNCTION_50	IF_1
0x4003508	            0x7513	                           jne 0x400351d	      3229	buffer.c	FUNCTION_50	IF_1
0x400350a	    0x8b88b8000000	            mov ecx, dword [rax + 0xb8] 	      3230	buffer.c	FUNCTION_50	IF_1
0x4003510	    0x488b15000000	            mov rdx, qword [0x04003517] 	      3230	buffer.c	FUNCTION_50	IF_1
0x4003517	    0x898a78010000	            mov dword [rdx + 0x178], ecx	      3230	buffer.c	FUNCTION_50	IF_1
0x400351d	        0x4883c408	                              add rsp, 8	      3232	buffer.c	FUNCTION_50
0x4003521	              0xc3	                                     ret	      3232	buffer.c	FUNCTION_50
chk_modeline	FOR,2:WHILE,1:DO,1:ELSE,1:functions,0:CALL,16:SWITCH,0:IF,14	240
0x4000040	            0x4157	                                push r15	      5371	buffer.c	FUNCTION_74
0x4000042	            0x4156	                                push r14	      5371	buffer.c	FUNCTION_74
0x4000044	          0x4989ff	                            mov r15, rdi	      5371	buffer.c	FUNCTION_74
0x4000047	            0x4155	                                push r13	      5371	buffer.c	FUNCTION_74
0x4000049	            0x4154	                                push r12	      5371	buffer.c	FUNCTION_74
0x400004b	              0x55	                                push rbp	      5371	buffer.c	FUNCTION_74
0x400004c	              0x53	                                push rbx	      5371	buffer.c	FUNCTION_74
0x400004d	            0x89f5	                            mov ebp, esi	      5371	buffer.c	FUNCTION_74
0x400004f	        0x4883ec28	                           sub rsp, 0x28	      5371	buffer.c	FUNCTION_74
0x4000053	    0x64488b042528	                mov rax, qword fs:[0x28]	      5371	buffer.c	FUNCTION_74
0x400005c	      0x4889442418	             mov qword [rsp + 0x18], rax	      5371	buffer.c	FUNCTION_74
0x4000061	            0x31c0	                            xor eax, eax	      5371	buffer.c	FUNCTION_74
0x4000063	      0xe800000000	                          call 0x4000068	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x4000068	          0x4889c3	                            mov rbx, rax	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x400006b	           0xfb600	                   movzx eax, byte [rax]	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x400006e	            0x84c0	                             test al, al	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x4000070	            0x7462	                            je 0x40000d4	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x4000072	      0xbfffffffff	                     mov edi, 0xffffffff	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x4000077	            0xeb24	                           jmp 0x400009d	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x4000079	     0xf1f80000000	                         nop dword [rax]	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x4000080	      0xe800000000	                          call 0x4000085	      5388	buffer.c	FUNCTION_74	FOR_1	IF_1	CALL_2
0x4000085	            0x85c0	                           test eax, eax	      5388	buffer.c	FUNCTION_74	FOR_1	IF_1	CALL_2
0x4000087	            0x7557	                           jne 0x40000e0	      5388	buffer.c	FUNCTION_74	FOR_1	IF_1	CALL_2
0x4000089	         0xfb64301	               movzx eax, byte [rbx + 1]	      5388	buffer.c	FUNCTION_74	FOR_1	IF_1	CALL_2
0x400008d	        0x440fb633	                  movzx r14d, byte [rbx]	      5388	buffer.c	FUNCTION_74	FOR_1	IF_1	CALL_2
0x4000091	        0x4883c301	                              add rbx, 1	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x4000095	            0x84c0	                             test al, al	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x4000097	        0x410fb6fe	                         movzx edi, r14b	      5412	buffer.c	FUNCTION_74	FOR_1
0x400009b	            0x7437	                            je 0x40000d4	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x400009d	          0x83ffff	             cmp edi, 0xffffffffffffffff	      5388	buffer.c	FUNCTION_74	FOR_1	IF_1	CALL_2
0x40000a0	            0x75de	                           jne 0x4000080	      5388	buffer.c	FUNCTION_74	FOR_1	IF_1	CALL_2
0x40000a2	      0xbf00000000	                              mov edi, 0	      5391	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_4
0x40000a7	      0xb903000000	                              mov ecx, 3	      5391	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_4
0x40000ac	          0x4889de	                            mov rsi, rbx	      5391	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_4
0x40000af	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5391	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_4
0x40000b1	            0x7441	                            je 0x40000f4	      5391	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_4
0x40000b3	            0x89c2	                            mov edx, eax	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x40000b5	          0x83e2df	                     and edx, 0xffffffdf	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x40000b8	          0x80fa56	                            cmp dl, 0x56	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x40000bb	     0xf84af010000	                            je 0x4000270	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x40000c1	          0x4189c6	                           mov r14d, eax	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x40000c4	         0xfb64301	               movzx eax, byte [rbx + 1]	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x40000c8	        0x4883c301	                              add rbx, 1	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x40000cc	        0x410fb6fe	                         movzx edi, r14b	      5412	buffer.c	FUNCTION_74	FOR_1
0x40000d0	            0x84c0	                             test al, al	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x40000d2	            0x75c9	                           jne 0x400009d	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x40000d4	      0xb801000000	                              mov eax, 1	      5378	buffer.c	FUNCTION_74
0x40000d9	      0xe96d010000	                           jmp 0x400024b	      5378	buffer.c	FUNCTION_74
0x40000de	            0x6690	                                     nop	      5378	buffer.c	FUNCTION_74
0x40000e0	      0xbf00000000	                              mov edi, 0	      5390	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_3
0x40000e5	      0xb903000000	                              mov ecx, 3	      5390	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_3
0x40000ea	          0x4889de	                            mov rsi, rbx	      5390	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_3
0x40000ed	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5390	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_3
0x40000ef	           0xfb603	                   movzx eax, byte [rbx]	      5390	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_3
0x40000f2	            0x75ae	                           jne 0x40000a2	      5390	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_2	CALL_3
0x40000f4	            0x84c0	                             test al, al	      5415	buffer.c	FUNCTION_74	IF_6
0x40000f6	            0x74dc	                            je 0x40000d4	      5415	buffer.c	FUNCTION_74	IF_6
0x40000f8	     0xf1f84000000	                   nop dword [rax + rax]	      5415	buffer.c	FUNCTION_74	IF_6
0x4000100	        0x4883c301	                              add rbx, 1	      5418	buffer.c	FUNCTION_74	IF_6	DO_1
0x4000104	        0x807bff3a	                cmp byte [rbx - 1], 0x3a	      5419	buffer.c	FUNCTION_74	IF_6
0x4000108	            0x75f6	                           jne 0x4000100	      5419	buffer.c	FUNCTION_74	IF_6
0x400010a	          0x4889df	                            mov rdi, rbx	      5421	buffer.c	FUNCTION_74	IF_6	CALL_9
0x400010d	      0xe800000000	                          call 0x4000112	      5421	buffer.c	FUNCTION_74	IF_6	CALL_9
0x4000112	          0x4885c0	                           test rax, rax	      5422	buffer.c	FUNCTION_74	IF_6	IF_7
0x4000115	          0x4989c4	                            mov r12, rax	      5421	buffer.c	FUNCTION_74	IF_6	CALL_9
0x4000118	     0xf848a020000	                            je 0x40003a8	      5422	buffer.c	FUNCTION_74	IF_6	IF_7
0x400011e	    0x488b05000000	            mov rax, qword [0x04000125] 	      5425	buffer.c	FUNCTION_74	IF_6
0x4000125	          0x4c89e7	                            mov rdi, r12	      5428	buffer.c	FUNCTION_74	IF_6
0x4000128	    0x4c893d000000	            mov qword [0x0400012f], r15 	      5427	buffer.c	FUNCTION_74	IF_6
0x400012f	      0xbb01000000	                              mov ebx, 1	      5378	buffer.c	FUNCTION_74
0x4000134	          0x83cd0c	                             or ebp, 0xc	      5470	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13	CALL_15
0x4000137	        0x48890424	                    mov qword [rsp], rax	      5425	buffer.c	FUNCTION_74	IF_6
0x400013b	    0x488b05000000	            mov rax, qword [0x04000142] 	      5426	buffer.c	FUNCTION_74	IF_6
0x4000142	    0x48c705000000	               mov qword [0x0400014d], 0	      5428	buffer.c	FUNCTION_74	IF_6
0x400014d	      0x4889442408	                mov qword [rsp + 8], rax	      5426	buffer.c	FUNCTION_74	IF_6
0x4000152	    0x660f1f440000	                    nop word [rax + rax]	      5426	buffer.c	FUNCTION_74	IF_6
0x4000158	      0xe800000000	                          call 0x400015d	      5433	buffer.c	FUNCTION_74	IF_6	WHILE_1	CALL_10
0x400015d	          0x803800	                       cmp byte [rax], 0	      5434	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_8
0x4000160	          0x4989c6	                            mov r14, rax	      5433	buffer.c	FUNCTION_74	IF_6	WHILE_1	CALL_10
0x4000163	     0xf84c1000000	                            je 0x400022a	      5434	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_8
0x4000169	      0x4889442410	             mov qword [rsp + 0x10], rax	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x400016e	           0xfb610	                   movzx edx, byte [rax]	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x4000171	          0x80fa3a	                            cmp dl, 0x3a	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x4000174	            0x7452	                            je 0x40001c8	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x4000176	            0x84d2	                             test dl, dl	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x4000178	            0x744e	                            je 0x40001c8	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x400017a	          0x4989c7	                            mov r15, rax	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x400017d	            0xeb1b	                           jmp 0x400019a	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x400017f	              0x90	                                     nop	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x4000180	        0x4d8d4701	                       lea r8, [r15 + 1]	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x4000184	      0x4c89442410	              mov qword [rsp + 0x10], r8	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x4000189	      0x410fb65701	               movzx edx, byte [r15 + 1]	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x400018e	          0x80fa3a	                            cmp dl, 0x3a	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x4000191	            0x743d	                            je 0x40001d0	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x4000193	            0x84d2	                             test dl, dl	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x4000195	            0x7439	                            je 0x40001d0	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x4000197	          0x4d89c7	                             mov r15, r8	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x400019a	          0x80fa5c	                            cmp dl, 0x5c	      5442	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0x400019d	            0x75e1	                           jne 0x4000180	      5442	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0x400019f	      0x41807f013a	                cmp byte [r15 + 1], 0x3a	      5442	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0x40001a4	            0x75da	                           jne 0x4000180	      5442	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0x40001a6	        0x4d8d6f01	                      lea r13, [r15 + 1]	      5443	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0x40001aa	          0x4c89ef	                            mov rdi, r13	      5443	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0x40001ad	      0xe800000000	                          call 0x40001b2	      5443	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2	IF_9
0x40001b2	        0x488d5001	                      lea rdx, [rax + 1]	        59	string3.h	FUNCTION_105	CALL_3
0x40001b6	          0x4c89ff	                            mov rdi, r15	        59	string3.h	FUNCTION_105	CALL_3
0x40001b9	          0x4c89ee	                            mov rsi, r13	        59	string3.h	FUNCTION_105	CALL_3
0x40001bc	      0xe800000000	                          call 0x40001c1	        59	string3.h	FUNCTION_105	CALL_3
0x40001c1	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	        59	string3.h	FUNCTION_105	CALL_3
0x40001c6	            0xebb8	                           jmp 0x4000180	        59	string3.h	FUNCTION_105	CALL_3
0x40001c8	          0x4d89f0	                             mov r8, r14	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x40001cb	       0xf1f440000	                   nop dword [rax + rax]	      5441	buffer.c	FUNCTION_74	IF_6	WHILE_1	FOR_2
0x40001d0	      0xbf00000000	                              mov edi, 0	      5454	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_12
0x40001d5	      0xb904000000	                              mov ecx, 4	      5454	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_12
0x40001da	          0x4c89f6	                            mov rsi, r14	      5454	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_12
0x40001dd	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5454	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_12
0x40001df	     0xf84a3000000	                            je 0x4000288	      5454	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_12
0x40001e5	      0xbf00000000	                              mov edi, 0	      5455	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_13
0x40001ea	      0xb903000000	                              mov ecx, 3	      5455	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_13
0x40001ef	          0x4c89f6	                            mov rsi, r14	      5455	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_13
0x40001f2	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5455	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_13
0x40001f4	     0xf848e000000	                            je 0x4000288	      5455	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_13
0x40001fa	          0x4531ff	                          xor r15d, r15d	      5445	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_10
0x40001fd	            0x84d2	                             test dl, dl	      5445	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_10
0x40001ff	        0x41c60000	                        mov byte [r8], 0	      5462	buffer.c	FUNCTION_74	IF_6	WHILE_1
0x4000203	        0x410f94c7	                               sete r15b	      5445	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_10
0x4000207	        0x41803e00	                       cmp byte [r14], 0	      5464	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13
0x400020b	     0xf85a6000000	                           jne 0x40002b7	      5464	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13
0x4000211	     0xf1f80000000	                         nop dword [rax]	      5464	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13
0x4000218	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5477	buffer.c	FUNCTION_74	IF_6	WHILE_1
0x400021d	          0x4585ff	                         test r15d, r15d	      5431	buffer.c	FUNCTION_74	IF_6	WHILE_1
0x4000220	        0x488d7801	                      lea rdi, [rax + 1]	      5477	buffer.c	FUNCTION_74	IF_6	WHILE_1
0x4000224	     0xf842effffff	                            je 0x4000158	      5431	buffer.c	FUNCTION_74	IF_6	WHILE_1
0x400022a	        0x488b0424	                    mov rax, qword [rsp]	      5480	buffer.c	FUNCTION_74	IF_6
0x400022e	          0x4c89e7	                            mov rdi, r12	      5483	buffer.c	FUNCTION_74	IF_6	CALL_16
0x4000231	    0x488905000000	            mov qword [0x04000238], rax 	      5480	buffer.c	FUNCTION_74	IF_6
0x4000238	      0x488b442408	                mov rax, qword [rsp + 8]	      5481	buffer.c	FUNCTION_74	IF_6
0x400023d	    0x488905000000	            mov qword [0x04000244], rax 	      5481	buffer.c	FUNCTION_74	IF_6
0x4000244	      0xe800000000	                          call 0x4000249	      5483	buffer.c	FUNCTION_74	IF_6	CALL_16
0x4000249	            0x89d8	                            mov eax, ebx	      5483	buffer.c	FUNCTION_74	IF_6	CALL_16
0x400024b	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      5486	buffer.c	FUNCTION_74
0x4000250	    0x644833342528	                xor rsi, qword fs:[0x28]	      5486	buffer.c	FUNCTION_74
0x4000259	     0xf8577010000	                           jne 0x40003d6	      5486	buffer.c	FUNCTION_74
0x400025f	        0x4883c428	                           add rsp, 0x28	      5486	buffer.c	FUNCTION_74
0x4000263	              0x5b	                                 pop rbx	      5486	buffer.c	FUNCTION_74
0x4000264	              0x5d	                                 pop rbp	      5486	buffer.c	FUNCTION_74
0x4000265	            0x415c	                                 pop r12	      5486	buffer.c	FUNCTION_74
0x4000267	            0x415d	                                 pop r13	      5486	buffer.c	FUNCTION_74
0x4000269	            0x415e	                                 pop r14	      5486	buffer.c	FUNCTION_74
0x400026b	            0x415f	                                 pop r15	      5486	buffer.c	FUNCTION_74
0x400026d	              0xc3	                                     ret	      5486	buffer.c	FUNCTION_74
0x400026e	            0x6690	                                     nop	      5486	buffer.c	FUNCTION_74
0x4000270	         0xfb65301	               movzx edx, byte [rbx + 1]	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x4000274	          0x80fa69	                            cmp dl, 0x69	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x4000277	            0x7477	                            je 0x40002f0	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x4000279	          0x4189c6	                           mov r14d, eax	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x400027c	            0x89d0	                            mov eax, edx	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x400027e	      0xe90efeffff	                           jmp 0x4000091	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x4000283	       0xf1f440000	                   nop dword [rax + rax]	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x4000288	          0x80fa3a	                            cmp dl, 0x3a	      5457	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	IF_12
0x400028b	            0x759d	                           jne 0x400022a	      5457	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	IF_12
0x400028d	          0x4c89f7	                            mov rdi, r14	      5460	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_14
0x4000290	      0xbe20000000	                           mov esi, 0x20	      5460	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_14
0x4000295	    0x41bf01000000	                             mov r15d, 1	      5459	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11
0x400029b	      0xe800000000	                          call 0x40002a0	      5460	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_14
0x40002a0	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      5460	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_14
0x40002a5	        0x4c8d7001	                      lea r14, [rax + 1]	      5460	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_11	CALL_14
0x40002a9	        0x41c60000	                        mov byte [r8], 0	      5462	buffer.c	FUNCTION_74	IF_6	WHILE_1
0x40002ad	        0x41803e00	                       cmp byte [r14], 0	      5464	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13
0x40002b1	     0xf8461ffffff	                            je 0x4000218	      5464	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13
0x40002b7	    0x448b2d000000	           mov r13d, dword [0x040002be] 	      5467	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13
0x40002be	            0x89ee	                            mov esi, ebp	      5470	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13	CALL_15
0x40002c0	          0x4c89f7	                            mov rdi, r14	      5470	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13	CALL_15
0x40002c3	    0xc70500000000	     mov dword [0x040002cd], 0xffffffff 	      5468	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13
0x40002cd	      0xe800000000	                          call 0x40002d2	      5470	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13	CALL_15
0x40002d2	            0x85c0	                           test eax, eax	      5474	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13	IF_14
0x40002d4	            0x89c3	                            mov ebx, eax	      5470	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13	CALL_15
0x40002d6	    0x44892d000000	           mov dword [0x040002dd], r13d 	      5472	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13
0x40002dd	     0xf8535ffffff	                           jne 0x4000218	      5474	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13	IF_14
0x40002e3	      0xe942ffffff	                           jmp 0x400022a	      5474	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13	IF_14
0x40002e8	     0xf1f84000000	                   nop dword [rax + rax]	      5474	buffer.c	FUNCTION_74	IF_6	WHILE_1	IF_13	IF_14
0x40002f0	        0x807b026d	                cmp byte [rbx + 2], 0x6d	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x40002f4	            0x7411	                            je 0x4000307	      5394	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3
0x40002f6	           0xfb6f8	                           movzx edi, al	      5412	buffer.c	FUNCTION_74	FOR_1
0x40002f9	        0x4883c301	                              add rbx, 1	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x40002fd	      0xb869000000	                           mov eax, 0x69	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x4000302	      0xe996fdffff	                           jmp 0x400009d	      5386	buffer.c	FUNCTION_74	FOR_1	CALL_1
0x4000307	         0xfb64303	               movzx eax, byte [rbx + 3]	      5396	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0x400030b	        0x488d4b04	                      lea rcx, [rbx + 4]	      5397	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0x400030f	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5400	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	CALL_5
0x4000314	          0x8d50c4	                   lea edx, [rax - 0x3c]	      5396	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0x4000317	        0x488d4303	                      lea rax, [rbx + 3]	      5397	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0x400031b	          0x80fa02	                               cmp dl, 2	      5397	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0x400031e	        0x480f46c1	                         cmovbe rax, rcx	      5397	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0x4000322	      0x4889442410	             mov qword [rsp + 0x10], rax	      5397	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_4
0x4000327	      0xe800000000	                          call 0x400032c	      5400	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	CALL_5
0x400032c	          0x4989c4	                            mov r12, rax	      5400	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	CALL_5
0x400032f	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5401	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x4000334	          0x80383a	                    cmp byte [rax], 0x3a	      5401	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x4000337	     0xf854cfdffff	                           jne 0x4000089	      5401	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400033d	        0x440fb633	                  movzx r14d, byte [rbx]	      5402	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x4000341	        0x4180fe56	                          cmp r14b, 0x56	      5402	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x4000345	            0x7468	                            je 0x40003af	      5402	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x4000347	      0x440fb66b03	              movzx r13d, byte [rbx + 3]	      5404	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400034c	        0x4180fd3a	                          cmp r13b, 0x3a	      5404	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x4000350	            0x7449	                            je 0x400039b	      5404	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x4000352	    0x4181fc200300	                         cmp r12d, 0x320	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0x4000359	            0x7f2b	                            jg 0x4000386	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0x400035b	      0xe800000000	                          call 0x4000360	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0x4000360	          0x488b08	                    mov rcx, qword [rax]	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0x4000363	        0x410fb6d5	                         movzx edx, r13b	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0x4000367	      0xf644510108	         test byte [rcx + rdx*2 + 1], 8 	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0x400036c	            0x752d	                           jne 0x400039b	      5405	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_8
0x400036e	    0x4181fc200300	                         cmp r12d, 0x320	      5407	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x4000375	            0x7415	                            je 0x400038c	      5407	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x4000377	        0x4180fd3e	                          cmp r13b, 0x3e	      5407	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400037b	            0x741e	                            je 0x400039b	      5407	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400037d	         0xfb64301	               movzx eax, byte [rbx + 1]	      5407	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x4000381	      0xe90bfdffff	                           jmp 0x4000091	      5407	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x4000386	        0x4180fd3c	                          cmp r13b, 0x3c	      5406	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400038a	            0x740f	                            je 0x400039b	      5406	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400038c	    0x4181fc200300	                         cmp r12d, 0x320	      5408	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x4000393	            0x75e8	                           jne 0x400037d	      5408	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x4000395	        0x4180fd3d	                          cmp r13b, 0x3d	      5408	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x4000399	            0x75e2	                           jne 0x400037d	      5408	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400039b	          0x4489f0	                           mov eax, r14d	      5408	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x400039e	      0xe951fdffff	                           jmp 0x40000f4	      5408	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x40003a3	       0xf1f440000	                   nop dword [rax + rax]	      5408	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5
0x40003a8	            0x31c0	                            xor eax, eax	      5423	buffer.c	FUNCTION_74	IF_6	IF_7
0x40003aa	      0xe99cfeffff	                           jmp 0x400024b	      5423	buffer.c	FUNCTION_74	IF_6	IF_7
0x40003af	        0x488d7801	                      lea rdi, [rax + 1]	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0x40003b3	      0xe800000000	                          call 0x40003b8	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0x40003b8	      0xbf00000000	                              mov edi, 0	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0x40003bd	      0xb903000000	                              mov ecx, 3	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0x40003c2	          0x4889c6	                            mov rsi, rax	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0x40003c5	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0x40003c7	     0xf85bcfcffff	                           jne 0x4000089	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0x40003cd	        0x440fb633	                  movzx r14d, byte [rbx]	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0x40003d1	      0xe971ffffff	                           jmp 0x4000347	      5403	buffer.c	FUNCTION_74	FOR_1	IF_1	IF_3	IF_5	CALL_7
0x40003d6	      0xe800000000	                          call 0x40003db	      5486	buffer.c	FUNCTION_74
buf_getsigntype	FOR,1:WHILE,0:DO,0:ELSE,0:functions,0:CALL,3:SWITCH,0:IF,1	71
0x400c170	              0x55	                                push rbp	      5914	buffer.c	FUNCTION_91
0x400c171	              0x53	                                push rbx	      5914	buffer.c	FUNCTION_91
0x400c172	        0x4883ec08	                              sub rsp, 8	      5914	buffer.c	FUNCTION_91
0x400c176	    0x488b9f201c00	          mov rbx, qword [rdi + 0x1c20] 	      5917	buffer.c	FUNCTION_91	FOR_1
0x400c17d	          0x4885db	                           test rbx, rbx	      5917	buffer.c	FUNCTION_91	FOR_1
0x400c180	            0x7427	                            je 0x400c1a9	      5917	buffer.c	FUNCTION_91	FOR_1
0x400c182	          0x83fa01	                              cmp edx, 1	      5917	buffer.c	FUNCTION_91	FOR_1
0x400c185	          0x4889f5	                            mov rbp, rsi	      5917	buffer.c	FUNCTION_91	FOR_1
0x400c188	            0x744f	                            je 0x400c1d9	      5917	buffer.c	FUNCTION_91	FOR_1
0x400c18a	          0x83fa02	                              cmp edx, 2	      5917	buffer.c	FUNCTION_91	FOR_1
0x400c18d	     0xf8496000000	                            je 0x400c229	      5917	buffer.c	FUNCTION_91	FOR_1
0x400c193	          0x83fa03	                              cmp edx, 3	      5917	buffer.c	FUNCTION_91	FOR_1
0x400c196	            0x7469	                            je 0x400c201	      5917	buffer.c	FUNCTION_91	FOR_1
0x400c198	            0x85d2	                           test edx, edx	      5917	buffer.c	FUNCTION_91	FOR_1
0x400c19a	     0xf84a5000000	                            je 0x400c245	      5917	buffer.c	FUNCTION_91	FOR_1
0x400c1a0	        0x488b5b18	            mov rbx, qword [rbx + 0x18] 	      5917	buffer.c	FUNCTION_91	FOR_1
0x400c1a4	          0x4885db	                           test rbx, rbx	      5917	buffer.c	FUNCTION_91	FOR_1
0x400c1a7	            0x75f7	                           jne 0x400c1a0	      5917	buffer.c	FUNCTION_91	FOR_1
0x400c1a9	        0x4883c408	                              add rsp, 8	      5930	buffer.c	FUNCTION_91
0x400c1ad	            0x31c0	                            xor eax, eax	      5929	buffer.c	FUNCTION_91
0x400c1af	              0x5b	                                 pop rbx	      5930	buffer.c	FUNCTION_91
0x400c1b0	              0x5d	                                 pop rbp	      5930	buffer.c	FUNCTION_91
0x400c1b1	              0xc3	                                     ret	      5930	buffer.c	FUNCTION_91
0x400c1b2	    0x660f1f440000	                    nop word [rax + rax]	      5930	buffer.c	FUNCTION_91
0x400c1b8	          0x8b7b10	            mov edi, dword [rbx + 0x10] 	      5927	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_3
0x400c1bb	      0xbe01000000	                              mov esi, 1	      5927	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_3
0x400c1c0	      0xe800000000	                          call 0x400c1c5	      5927	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_3
0x400c1c5	            0x85c0	                           test eax, eax	      5927	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_3
0x400c1c7	     0xf857e000000	                           jne 0x400c24b	      5927	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_3
0x400c1cd	           0xf1f00	                         nop dword [rax]	      5927	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_3
0x400c1d0	        0x488b5b18	            mov rbx, qword [rbx + 0x18] 	      5917	buffer.c	FUNCTION_91	FOR_1
0x400c1d4	          0x4885db	                           test rbx, rbx	      5917	buffer.c	FUNCTION_91	FOR_1
0x400c1d7	            0x74d0	                            je 0x400c1a9	      5917	buffer.c	FUNCTION_91	FOR_1
0x400c1d9	        0x483b6b08	                cmp rbp, qword [rbx + 8]	      5918	buffer.c	FUNCTION_91	FOR_1	IF_1
0x400c1dd	            0x75f1	                           jne 0x400c1d0	      5918	buffer.c	FUNCTION_91	FOR_1	IF_1
0x400c1df	            0xebd7	                           jmp 0x400c1b8	      5918	buffer.c	FUNCTION_91	FOR_1	IF_1
0x400c1e1	     0xf1f80000000	                         nop dword [rax]	      5918	buffer.c	FUNCTION_91	FOR_1	IF_1
0x400c1e8	          0x8b7b10	            mov edi, dword [rbx + 0x10] 	      5925	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_2
0x400c1eb	      0xe800000000	                          call 0x400c1f0	      5925	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_2
0x400c1f0	          0x4885c0	                           test rax, rax	      5925	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_2
0x400c1f3	            0x7556	                           jne 0x400c24b	      5925	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_2
0x400c1f5	           0xf1f00	                         nop dword [rax]	      5925	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_2
0x400c1f8	        0x488b5b18	            mov rbx, qword [rbx + 0x18] 	      5917	buffer.c	FUNCTION_91	FOR_1
0x400c1fc	          0x4885db	                           test rbx, rbx	      5917	buffer.c	FUNCTION_91	FOR_1
0x400c1ff	            0x74a8	                            je 0x400c1a9	      5917	buffer.c	FUNCTION_91	FOR_1
0x400c201	        0x483b6b08	                cmp rbp, qword [rbx + 8]	      5918	buffer.c	FUNCTION_91	FOR_1	IF_1
0x400c205	            0x75f1	                           jne 0x400c1f8	      5918	buffer.c	FUNCTION_91	FOR_1	IF_1
0x400c207	            0xebdf	                           jmp 0x400c1e8	      5918	buffer.c	FUNCTION_91	FOR_1	IF_1
0x400c209	     0xf1f80000000	                         nop dword [rax]	      5918	buffer.c	FUNCTION_91	FOR_1	IF_1
0x400c210	          0x8b7b10	            mov edi, dword [rbx + 0x10] 	      5922	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_1
0x400c213	      0xe800000000	                          call 0x400c218	      5922	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_1
0x400c218	          0x4885c0	                           test rax, rax	      5922	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_1
0x400c21b	            0x752e	                           jne 0x400c24b	      5922	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_1
0x400c21d	           0xf1f00	                         nop dword [rax]	      5922	buffer.c	FUNCTION_91	FOR_1	IF_1	CALL_1
0x400c220	        0x488b5b18	            mov rbx, qword [rbx + 0x18] 	      5917	buffer.c	FUNCTION_91	FOR_1
0x400c224	          0x4885db	                           test rbx, rbx	      5917	buffer.c	FUNCTION_91	FOR_1
0x400c227	            0x7480	                            je 0x400c1a9	      5917	buffer.c	FUNCTION_91	FOR_1
0x400c229	        0x483b6b08	                cmp rbp, qword [rbx + 8]	      5918	buffer.c	FUNCTION_91	FOR_1	IF_1
0x400c22d	            0x75f1	                           jne 0x400c220	      5918	buffer.c	FUNCTION_91	FOR_1	IF_1
0x400c22f	            0xebdf	                           jmp 0x400c210	      5918	buffer.c	FUNCTION_91	FOR_1	IF_1
0x400c231	     0xf1f80000000	                         nop dword [rax]	      5918	buffer.c	FUNCTION_91	FOR_1	IF_1
0x400c238	        0x488b5b18	            mov rbx, qword [rbx + 0x18] 	      5917	buffer.c	FUNCTION_91	FOR_1
0x400c23c	          0x4885db	                           test rbx, rbx	      5917	buffer.c	FUNCTION_91	FOR_1
0x400c23f	     0xf8464ffffff	                            je 0x400c1a9	      5917	buffer.c	FUNCTION_91	FOR_1
0x400c245	        0x483b6b08	                cmp rbp, qword [rbx + 8]	      5918	buffer.c	FUNCTION_91	FOR_1	IF_1
0x400c249	            0x75ed	                           jne 0x400c238	      5918	buffer.c	FUNCTION_91	FOR_1	IF_1
0x400c24b	          0x8b4310	            mov eax, dword [rbx + 0x10] 	      5928	buffer.c	FUNCTION_91	FOR_1	IF_1
0x400c24e	        0x4883c408	                              add rsp, 8	      5930	buffer.c	FUNCTION_91
0x400c252	              0x5b	                                 pop rbx	      5930	buffer.c	FUNCTION_91
0x400c253	              0x5d	                                 pop rbp	      5930	buffer.c	FUNCTION_91
0x400c254	              0xc3	                                     ret	      5930	buffer.c	FUNCTION_91
maketitle	FOR,0:WHILE,0:DO,0:ELSE,10:functions,0:CALL,47:SWITCH,1:IF,26	457
0x4007e00	            0x4157	                                push r15	      3538	buffer.c	FUNCTION_61
0x4007e02	            0x4156	                                push r14	      3538	buffer.c	FUNCTION_61
0x4007e04	            0x4155	                                push r13	      3538	buffer.c	FUNCTION_61
0x4007e06	            0x4154	                                push r12	      3538	buffer.c	FUNCTION_61
0x4007e08	              0x55	                                push rbp	      3538	buffer.c	FUNCTION_61
0x4007e09	              0x53	                                push rbx	      3538	buffer.c	FUNCTION_61
0x4007e0a	    0x4881ec180400	                          sub rsp, 0x418	      3538	buffer.c	FUNCTION_61
0x4007e11	    0x64488b042528	                mov rax, qword fs:[0x28]	      3538	buffer.c	FUNCTION_61
0x4007e1a	    0x488984240804	            mov qword [rsp + 0x408], rax	      3538	buffer.c	FUNCTION_61
0x4007e22	            0x31c0	                            xor eax, eax	      3538	buffer.c	FUNCTION_61
0x4007e24	      0xe800000000	                          call 0x4007e29	      3549	buffer.c	FUNCTION_61	IF_1	CALL_1
0x4007e29	            0x85c0	                           test eax, eax	      3549	buffer.c	FUNCTION_61	IF_1	CALL_1
0x4007e2b	            0x7533	                           jne 0x4007e60	      3549	buffer.c	FUNCTION_61	IF_1	CALL_1
0x4007e2d	    0xc70500000000	               mov dword [0x04007e37], 1	      3552	buffer.c	FUNCTION_61	IF_1
0x4007e37	    0x488b84240804	           mov rax, qword [rsp + 0x408] 	      3754	buffer.c	FUNCTION_61
0x4007e3f	    0x644833042528	                xor rax, qword fs:[0x28]	      3754	buffer.c	FUNCTION_61
0x4007e48	     0xf857f070000	                           jne 0x40085cd	      3754	buffer.c	FUNCTION_61
0x4007e4e	    0x4881c4180400	                          add rsp, 0x418	      3754	buffer.c	FUNCTION_61
0x4007e55	              0x5b	                                 pop rbx	      3754	buffer.c	FUNCTION_61
0x4007e56	              0x5d	                                 pop rbp	      3754	buffer.c	FUNCTION_61
0x4007e57	            0x415c	                                 pop r12	      3754	buffer.c	FUNCTION_61
0x4007e59	            0x415d	                                 pop r13	      3754	buffer.c	FUNCTION_61
0x4007e5b	            0x415e	                                 pop r14	      3754	buffer.c	FUNCTION_61
0x4007e5d	            0x415f	                                 pop r15	      3754	buffer.c	FUNCTION_61
0x4007e5f	              0xc3	                                     ret	      3754	buffer.c	FUNCTION_61
0x4007e60	    0x8b3500000000	            mov esi, dword [0x04007e66] 	      3557	buffer.c	FUNCTION_61	IF_2
0x4007e66	    0xc70500000000	               mov dword [0x04007e70], 0	      3556	buffer.c	FUNCTION_61
0x4007e70	            0x85f6	                           test esi, esi	      3557	buffer.c	FUNCTION_61	IF_2
0x4007e72	            0x757c	                           jne 0x4007ef0	      3557	buffer.c	FUNCTION_61	IF_2
0x4007e74	    0x8b0d00000000	            mov ecx, dword [0x04007e7a] 	      3557	buffer.c	FUNCTION_61	IF_2
0x4007e7a	    0x488b3d000000	            mov rdi, qword [0x04007e81] 	      3557	buffer.c	FUNCTION_61	IF_2
0x4007e81	            0x85c9	                           test ecx, ecx	      3557	buffer.c	FUNCTION_61	IF_2
0x4007e83	     0xf8407020000	                            je 0x4008090	      3557	buffer.c	FUNCTION_61	IF_2
0x4007e89	          0x4885ff	                           test rdi, rdi	      3764	buffer.c	FUNCTION_62	IF_1
0x4007e8c	     0xf8507020000	                           jne 0x4008099	      3764	buffer.c	FUNCTION_62	IF_1
0x4007e92	          0x4531e4	                          xor r12d, r12d	      3774	buffer.c	FUNCTION_62
0x4007e95	    0x488b1d000000	            mov rbx, qword [0x04007e9c] 	      3703	buffer.c	FUNCTION_61	IF_19	IF_20
0x4007e9c	          0x803b00	                       cmp byte [rbx], 0	      3703	buffer.c	FUNCTION_61	IF_19	IF_20
0x4007e9f	     0xf84fb020000	                            je 0x40081a0	      3703	buffer.c	FUNCTION_61	IF_19	IF_20
0x4007ea5	    0xf60500000000	               test byte [0x04007eac], 1	      3706	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21
0x4007eac	     0xf8566030000	                           jne 0x4008218	      3706	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21
0x4007eb2	    0x488b2d000000	            mov rbp, qword [0x04007eb9] 	      3764	buffer.c	FUNCTION_62	IF_1
0x4007eb9	          0x4885ed	                           test rbp, rbp	      3764	buffer.c	FUNCTION_62	IF_1
0x4007ebc	     0xf855b020000	                           jne 0x400811d	      3764	buffer.c	FUNCTION_62	IF_1
0x4007ec2	            0x31ff	                            xor edi, edi	      3767	buffer.c	FUNCTION_62	IF_1	CALL_2
0x4007ec4	      0xe800000000	                          call 0x4007ec9	      3767	buffer.c	FUNCTION_62	IF_1	CALL_2
0x4007ec9	          0x4889df	                            mov rdi, rbx	      3771	buffer.c	FUNCTION_62	IF_1	CALL_3
0x4007ecc	      0xe800000000	                          call 0x4007ed1	      3771	buffer.c	FUNCTION_62	IF_1	CALL_3
0x4007ed1	    0x488905000000	            mov qword [0x04007ed8], rax 	      3771	buffer.c	FUNCTION_62	IF_1	CALL_3
0x4007ed8	    0x488b3d000000	            mov rdi, qword [0x04007edf] 	      3783	buffer.c	FUNCTION_63	CALL_1
0x4007edf	          0x4889c6	                            mov rsi, rax	      3783	buffer.c	FUNCTION_63	CALL_1
0x4007ee2	      0xe800000000	                          call 0x4007ee7	      3783	buffer.c	FUNCTION_63	CALL_1
0x4007ee7	      0xe94bffffff	                           jmp 0x4007e37	      3783	buffer.c	FUNCTION_63	CALL_1
0x4007eec	         0xf1f4000	                         nop dword [rax]	      3783	buffer.c	FUNCTION_63	CALL_1
0x4007ef0	    0x488b0d000000	            mov rcx, qword [0x04007ef7] 	      3562	buffer.c	FUNCTION_61	IF_3	IF_4
0x4007ef7	            0x31ed	                            xor ebp, ebp	      3543	buffer.c	FUNCTION_61
0x4007ef9	          0x4885c9	                           test rcx, rcx	      3562	buffer.c	FUNCTION_61	IF_3	IF_4
0x4007efc	            0x7e32	                           jle 0x4007f30	      3562	buffer.c	FUNCTION_61	IF_3	IF_4
0x4007efe	    0x480faf0d0000	            imul rcx, qword [0x04007f06]	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x4007f06	    0x48ba0bd7a370	          movabs rdx, 0xa3d70a3d70a3d70b	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x4007f10	          0x4889c8	                            mov rax, rcx	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x4007f13	          0x48f7ea	                                imul rdx	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x4007f16	      0xb80a000000	                            mov eax, 0xa	      3566	buffer.c	FUNCTION_61	IF_3	IF_4	IF_5
0x4007f1b	        0x488d2c0a	                    lea rbp, [rdx + rcx]	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x4007f1f	        0x48c1f93f	                           sar rcx, 0x3f	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x4007f23	        0x48c1fd06	                              sar rbp, 6	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x4007f27	          0x4829cd	                            sub rbp, rcx	      3564	buffer.c	FUNCTION_61	IF_3	IF_4
0x4007f2a	          0x83fd09	                              cmp ebp, 9	      3566	buffer.c	FUNCTION_61	IF_3	IF_4	IF_5
0x4007f2d	           0xf4ee8	                         cmovle ebp, eax	      3566	buffer.c	FUNCTION_61	IF_3	IF_4	IF_5
0x4007f30	    0x488b1d000000	            mov rbx, qword [0x04007f37] 	      3570	buffer.c	FUNCTION_61	IF_3	IF_6
0x4007f37	          0x803b00	                       cmp byte [rbx], 0	      3570	buffer.c	FUNCTION_61	IF_3	IF_6
0x4007f3a	     0xf85a0010000	                           jne 0x40080e0	      3570	buffer.c	FUNCTION_61	IF_3	IF_6
0x4007f40	    0x488b05000000	            mov rax, qword [0x04007f47] 	      3601	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_9
0x4007f47	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	      3601	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_9
0x4007f4e	          0x4885d2	                           test rdx, rdx	      3601	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_9
0x4007f51	     0xf8417060000	                            je 0x400856e	      3601	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_9
0x4007f57	    0x488bb8481c00	          mov rdi, qword [rax + 0x1c48] 	      3604	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10
0x4007f5e	          0x4885ff	                           test rdi, rdi	      3604	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10
0x4007f61	     0xf84d1030000	                            je 0x4008338	      3604	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10
0x4007f67	      0xe800000000	                          call 0x4007f6c	      3606	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10	CALL_8
0x4007f6c	      0xba9d030000	                          mov edx, 0x39d	      3606	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10	CALL_8
0x4007f71	          0x4889c6	                            mov rsi, rax	      3606	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10	CALL_8
0x4007f74	          0x4889e7	                            mov rdi, rsp	      3606	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10	CALL_8
0x4007f77	          0x4889e3	                            mov rbx, rsp	      3606	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10	CALL_8
0x4007f7a	      0xe800000000	                          call 0x4007f7f	      3606	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_3	IF_10	CALL_8
0x4007f7f	    0x488b3d000000	            mov rdi, qword [0x04007f86] 	      3618	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11
0x4007f86	    0x4883bf481c00	             cmp qword [rdi + 0x1c48], 0	      3618	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11
0x4007f8e	     0xf8446040000	                            je 0x40083da	      3618	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11
0x4007f94	    0x488b35000000	            mov rsi, qword [0x04007f9b] 	      3678	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_30
0x4007f9b	    0x488b86800100	           mov rax, qword [rsi + 0x180] 	      4724	buffer.c	FUNCTION_67	IF_1
0x4007fa2	          0x833801	                      cmp dword [rax], 1	      4724	buffer.c	FUNCTION_67	IF_1
0x4007fa5	     0xf8e8f000000	                           jle 0x400803a	      4724	buffer.c	FUNCTION_67	IF_1
0x4007fab	          0x4889d8	                            mov rax, rbx	      4727	buffer.c	FUNCTION_67	CALL_1
0x4007fae	            0x8b08	                    mov ecx, dword [rax]	      4727	buffer.c	FUNCTION_67	CALL_1
0x4007fb0	        0x4883c004	                              add rax, 4	      4727	buffer.c	FUNCTION_67	CALL_1
0x4007fb4	    0x8d91fffefefe	              lea edx, [rcx - 0x1010101]	      4727	buffer.c	FUNCTION_67	CALL_1
0x4007fba	            0xf7d1	                                 not ecx	      4727	buffer.c	FUNCTION_67	CALL_1
0x4007fbc	            0x21ca	                            and edx, ecx	      4727	buffer.c	FUNCTION_67	CALL_1
0x4007fbe	    0x81e280808080	                     and edx, 0x80808080	      4727	buffer.c	FUNCTION_67	CALL_1
0x4007fc4	            0x74e8	                            je 0x4007fae	      4727	buffer.c	FUNCTION_67	CALL_1
0x4007fc6	            0x89d1	                            mov ecx, edx	      4727	buffer.c	FUNCTION_67	CALL_1
0x4007fc8	          0xc1e910	                           shr ecx, 0x10	      4727	buffer.c	FUNCTION_67	CALL_1
0x4007fcb	    0xf7c280800000	                        test edx, 0x8080	      4727	buffer.c	FUNCTION_67	CALL_1
0x4007fd1	           0xf44d1	                          cmove edx, ecx	      4727	buffer.c	FUNCTION_67	CALL_1
0x4007fd4	        0x488d4802	                      lea rcx, [rax + 2]	      4727	buffer.c	FUNCTION_67	CALL_1
0x4007fd8	        0x480f44c1	                          cmove rax, rcx	      4727	buffer.c	FUNCTION_67	CALL_1
0x4007fdc	            0x89d1	                            mov ecx, edx	      4727	buffer.c	FUNCTION_67	CALL_1
0x4007fde	              0xd1	                              add cl, dl	      4727	buffer.c	FUNCTION_67	CALL_1
0x4007fe0	        0x4883d803	                              sbb rax, 3	      4727	buffer.c	FUNCTION_67	CALL_1
0x4007fe4	          0x4829d8	                            sub rax, rbx	      4727	buffer.c	FUNCTION_67	CALL_1
0x4007fe7	    0x483dd3030000	                          cmp rax, 0x3d3	      4728	buffer.c	FUNCTION_67	IF_2
0x4007fed	            0x7f4b	                            jg 0x400803a	      4728	buffer.c	FUNCTION_67	IF_2
0x4007fef	          0x4801d8	                            add rax, rbx	      4727	buffer.c	FUNCTION_67	CALL_1
0x4007ff2	          0xc60020	                    mov byte [rax], 0x20	      4730	buffer.c	FUNCTION_67
0x4007ff5	        0xc6400128	                mov byte [rax + 1], 0x28	      4731	buffer.c	FUNCTION_67
0x4007ff9	        0x488d7802	                      lea rdi, [rax + 2]	      4731	buffer.c	FUNCTION_67
0x4007ffd	    0x8b968c010000	           mov edx, dword [rsi + 0x18c] 	      4737	buffer.c	FUNCTION_67	CALL_3
0x4008003	    0x8b8688010000	           mov eax, dword [rsi + 0x188] 	      4737	buffer.c	FUNCTION_67	CALL_3
0x4008009	    0x4c8b86800100	            mov r8, qword [rsi + 0x180] 	      4737	buffer.c	FUNCTION_67	CALL_3
0x4008010	            0x85d2	                           test edx, edx	      4737	buffer.c	FUNCTION_67	CALL_3
0x4008012	          0x8d4801	                      lea ecx, [rax + 1]	      4737	buffer.c	FUNCTION_67	CALL_3
0x4008015	      0xba00000000	                              mov edx, 0	      4737	buffer.c	FUNCTION_67	CALL_3
0x400801a	      0xb800000000	                              mov eax, 0	      4737	buffer.c	FUNCTION_67	CALL_3
0x400801f	          0x458b00	                     mov r8d, dword [r8]	      4737	buffer.c	FUNCTION_67	CALL_3
0x4008022	        0x480f44d0	                          cmove rdx, rax	      4737	buffer.c	FUNCTION_67	CALL_3
0x4008026	          0x4889d8	                            mov rax, rbx	      4737	buffer.c	FUNCTION_67	CALL_3
0x4008029	          0x4829f8	                            sub rax, rdi	      4737	buffer.c	FUNCTION_67	CALL_3
0x400802c	    0x488db0f70300	                  lea rsi, [rax + 0x3f7]	      4737	buffer.c	FUNCTION_67	CALL_3
0x4008033	            0x31c0	                            xor eax, eax	      4737	buffer.c	FUNCTION_67	CALL_3
0x4008035	      0xe800000000	                          call 0x400803a	      4737	buffer.c	FUNCTION_67	CALL_3
0x400803a	    0x4c8b25000000	            mov r12, qword [0x04008041] 	      3681	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16
0x4008041	      0xba01040000	                          mov edx, 0x401	       148	string3.h	FUNCTION_114	CALL_3
0x4008046	          0x4d85e4	                           test r12, r12	      3681	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16
0x4008049	     0xf84d1020000	                            je 0x4008320	      3681	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16
0x400804f	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_114	CALL_3
0x4008054	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_114	CALL_3
0x4008057	      0xe800000000	                          call 0x400805c	       148	string3.h	FUNCTION_114	CALL_3
0x400805c	      0xba01040000	                          mov edx, 0x401	      3684	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_32
0x4008061	          0x4c89e6	                            mov rsi, r12	      3684	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_32
0x4008064	          0x4889df	                            mov rdi, rbx	      3684	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_32
0x4008067	      0xe800000000	                          call 0x400806c	      3684	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_16	CALL_32
0x400806c	            0x85ed	                           test ebp, ebp	      3690	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17
0x400806e	            0x747d	                            je 0x40080ed	      3690	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17
0x4008070	          0x4889df	                            mov rdi, rbx	      3693	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	IF_18	CALL_34
0x4008073	      0xe800000000	                          call 0x4008078	      3693	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	IF_18	CALL_34
0x4008078	            0x39c5	                            cmp ebp, eax	      3693	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	IF_18	CALL_34
0x400807a	            0x7d71	                           jge 0x40080ed	      3693	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	IF_18	CALL_34
0x400807c	      0xb901040000	                          mov ecx, 0x401	      3694	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	CALL_35
0x4008081	            0x89ea	                            mov edx, ebp	      3694	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	CALL_35
0x4008083	          0x4889de	                            mov rsi, rbx	      3694	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	CALL_35
0x4008086	          0x4889df	                            mov rdi, rbx	      3694	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	CALL_35
0x4008089	      0xe800000000	                          call 0x400808e	      3694	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	CALL_35
0x400808e	            0xeb5d	                           jmp 0x40080ed	      3694	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_17	CALL_35
0x4008090	          0x4885ff	                           test rdi, rdi	      3557	buffer.c	FUNCTION_61	IF_2
0x4008093	     0xf84df000000	                            je 0x4008178	      3557	buffer.c	FUNCTION_61	IF_2
0x4008099	      0xe800000000	                          call 0x400809e	      3767	buffer.c	FUNCTION_62	IF_1	CALL_2
0x400809e	    0x8b0500000000	            mov eax, dword [0x040080a4] 	      3767	buffer.c	FUNCTION_62	IF_1	CALL_2
0x40080a4	    0x48c705000000	               mov qword [0x040080af], 0	      3769	buffer.c	FUNCTION_62	IF_1	IF_2
0x40080af	    0x41bc01000000	                             mov r12d, 1	      3772	buffer.c	FUNCTION_62	IF_1
0x40080b5	            0x85c0	                           test eax, eax	      3700	buffer.c	FUNCTION_61	IF_19
0x40080b7	     0xf85d8fdffff	                           jne 0x4007e95	      3700	buffer.c	FUNCTION_61	IF_19
0x40080bd	    0x488b2d000000	            mov rbp, qword [0x040080c4] 	      3764	buffer.c	FUNCTION_62	IF_1
0x40080c4	          0x4885ed	                           test rbp, rbp	      3764	buffer.c	FUNCTION_62	IF_1
0x40080c7	     0xf858c000000	                           jne 0x4008159	      3764	buffer.c	FUNCTION_62	IF_1
0x40080cd	          0x4585e4	                         test r12d, r12d	      3752	buffer.c	FUNCTION_61	IF_26
0x40080d0	     0xf8461fdffff	                            je 0x4007e37	      3752	buffer.c	FUNCTION_61	IF_26
0x40080d6	          0x4889e8	                            mov rax, rbp	      3752	buffer.c	FUNCTION_61	IF_26
0x40080d9	      0xe9fafdffff	                           jmp 0x4007ed8	      3752	buffer.c	FUNCTION_61	IF_26
0x40080de	            0x6690	                                     nop	      3752	buffer.c	FUNCTION_61	IF_26
0x40080e0	    0xf60500000000	               test byte [0x040080e7], 2	      3573	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7
0x40080e7	     0xf85c3010000	                           jne 0x40082b0	      3573	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7
0x40080ed	    0x488b2d000000	            mov rbp, qword [0x040080f4] 	      3764	buffer.c	FUNCTION_62	IF_1
0x40080f4	          0x4885ed	                           test rbp, rbp	      3764	buffer.c	FUNCTION_62	IF_1
0x40080f7	            0x7547	                           jne 0x4008140	      3764	buffer.c	FUNCTION_62	IF_1
0x40080f9	            0x31ff	                            xor edi, edi	      3767	buffer.c	FUNCTION_62	IF_1	CALL_2
0x40080fb	      0xe800000000	                          call 0x4008100	      3767	buffer.c	FUNCTION_62	IF_1	CALL_2
0x4008100	          0x4889df	                            mov rdi, rbx	      3771	buffer.c	FUNCTION_62	IF_1	CALL_3
0x4008103	    0x41bc01000000	                             mov r12d, 1	      3772	buffer.c	FUNCTION_62	IF_1
0x4008109	      0xe800000000	                          call 0x400810e	      3771	buffer.c	FUNCTION_62	IF_1	CALL_3
0x400810e	    0x488905000000	            mov qword [0x04008115], rax 	      3771	buffer.c	FUNCTION_62	IF_1	CALL_3
0x4008115	    0x8b0500000000	            mov eax, dword [0x0400811b] 	      3771	buffer.c	FUNCTION_62	IF_1	CALL_3
0x400811b	            0xeb98	                           jmp 0x40080b5	      3771	buffer.c	FUNCTION_62	IF_1	CALL_3
0x400811d	          0x4889ee	                            mov rsi, rbp	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x4008120	          0x4889df	                            mov rdi, rbx	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x4008123	      0xe800000000	                          call 0x4008128	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x4008128	            0x85c0	                           test eax, eax	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x400812a	            0x74a1	                            je 0x40080cd	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x400812c	          0x4889ef	                            mov rdi, rbp	      3767	buffer.c	FUNCTION_62	IF_1	CALL_2
0x400812f	      0xe800000000	                          call 0x4008134	      3767	buffer.c	FUNCTION_62	IF_1	CALL_2
0x4008134	      0xe990fdffff	                           jmp 0x4007ec9	      3767	buffer.c	FUNCTION_62	IF_1	CALL_2
0x4008139	     0xf1f80000000	                         nop dword [rax]	      3767	buffer.c	FUNCTION_62	IF_1	CALL_2
0x4008140	          0x4889ee	                            mov rsi, rbp	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x4008143	          0x4889df	                            mov rdi, rbx	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x4008146	      0xe800000000	                          call 0x400814b	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x400814b	            0x85c0	                           test eax, eax	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x400814d	            0x7441	                            je 0x4008190	      3765	buffer.c	FUNCTION_62	IF_1	CALL_1
0x400814f	          0x4889ef	                            mov rdi, rbp	      3767	buffer.c	FUNCTION_62	IF_1	CALL_2
0x4008152	      0xe800000000	                          call 0x4008157	      3767	buffer.c	FUNCTION_62	IF_1	CALL_2
0x4008157	            0xeba7	                           jmp 0x4008100	      3767	buffer.c	FUNCTION_62	IF_1	CALL_2
0x4008159	          0x4889ef	                            mov rdi, rbp	      3767	buffer.c	FUNCTION_62	IF_1	CALL_2
0x400815c	      0xe800000000	                          call 0x4008161	      3767	buffer.c	FUNCTION_62	IF_1	CALL_2
0x4008161	    0x48c705000000	               mov qword [0x0400816c], 0	      3769	buffer.c	FUNCTION_62	IF_1	IF_2
0x400816c	            0x31c0	                            xor eax, eax	      3769	buffer.c	FUNCTION_62	IF_1	IF_2
0x400816e	      0xe965fdffff	                           jmp 0x4007ed8	      3769	buffer.c	FUNCTION_62	IF_1	IF_2
0x4008173	       0xf1f440000	                   nop dword [rax + rax]	      3769	buffer.c	FUNCTION_62	IF_1	IF_2
0x4008178	    0x48833d000000	               cmp qword [0x04008180], 0	      3557	buffer.c	FUNCTION_61	IF_2
0x4008180	     0xf84b1fcffff	                            je 0x4007e37	      3557	buffer.c	FUNCTION_61	IF_2
0x4008186	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3557	buffer.c	FUNCTION_61	IF_2
0x4008190	    0x8b0500000000	            mov eax, dword [0x04008196] 	      3557	buffer.c	FUNCTION_61	IF_2
0x4008196	          0x4531e4	                          xor r12d, r12d	      3774	buffer.c	FUNCTION_62
0x4008199	      0xe917ffffff	                           jmp 0x40080b5	      3774	buffer.c	FUNCTION_62
0x400819e	            0x6690	                                     nop	      3774	buffer.c	FUNCTION_62
0x40081a0	    0x488b3d000000	            mov rdi, qword [0x040081a7] 	      3729	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_23	CALL_40
0x40081a7	      0xe800000000	                          call 0x40081ac	      3729	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_23	CALL_40
0x40081ac	          0x4885c0	                           test rax, rax	      3729	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_23	CALL_40
0x40081af	     0xf84bb010000	                            je 0x4008370	      3729	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_23	CALL_40
0x40081b5	    0x488b3d000000	            mov rdi, qword [0x040081bc] 	      3730	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_41
0x40081bc	      0xe800000000	                          call 0x40081c1	      3730	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_41
0x40081c1	          0x4889c5	                            mov rbp, rax	      3730	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_41
0x40081c4	          0x4889ef	                            mov rdi, rbp	      3735	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_43
0x40081c7	        0xc6042400	                       mov byte [rsp], 0	      3733	buffer.c	FUNCTION_61	IF_19	ELSE_9
0x40081cb	      0xe800000000	                          call 0x40081d0	      3735	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_43
0x40081d0	          0x83f864	                           cmp eax, 0x64	      3736	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24
0x40081d3	            0x7e17	                           jle 0x40081ec	      3736	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24
0x40081d5	          0x8d589c	                   lea ebx, [rax - 0x64]	      3738	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24
0x40081d8	    0x8b0500000000	            mov eax, dword [0x040081de] 	      3740	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x40081de	            0x85c0	                           test eax, eax	      3740	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x40081e0	     0xf85aa010000	                           jne 0x4008390	      3740	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x40081e6	          0x4863c3	                         movsxd rax, ebx	      3743	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24
0x40081e9	          0x4801c5	                            add rbp, rax	      3743	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24
0x40081ec	      0xba01040000	                          mov edx, 0x401	       110	string3.h	FUNCTION_110	CALL_3
0x40081f1	          0x4889ee	                            mov rsi, rbp	       110	string3.h	FUNCTION_110	CALL_3
0x40081f4	          0x4889e7	                            mov rdi, rsp	       110	string3.h	FUNCTION_110	CALL_3
0x40081f7	      0xe800000000	                          call 0x40081fc	       110	string3.h	FUNCTION_110	CALL_3
0x40081fc	      0xbe01040000	                          mov esi, 0x401	      3746	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_45
0x4008201	          0x4889e7	                            mov rdi, rsp	      3746	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_45
0x4008204	          0x4889e3	                            mov rbx, rsp	      3702	buffer.c	FUNCTION_61	IF_19
0x4008207	      0xe800000000	                          call 0x400820c	      3746	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_45
0x400820c	      0xe9a1fcffff	                           jmp 0x4007eb2	      3746	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_45
0x4008211	     0xf1f80000000	                         nop dword [rax]	      3746	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_45
0x4008218	            0x31f6	                            xor esi, esi	      3712	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_37
0x400821a	      0xbf00000000	                              mov edi, 0	      3712	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_37
0x400821f	          0x4889e3	                            mov rbx, rsp	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x4008222	    0x8b2d00000000	            mov ebp, dword [0x04008228] 	      3709	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21
0x4008228	      0xe800000000	                          call 0x400822d	      3712	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_37
0x400822d	        0x4883ec08	                              sub rsp, 8	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x4008231	    0x488b0d000000	            mov rcx, qword [0x04008238] 	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x4008238	    0x488b3d000000	            mov rdi, qword [0x0400823f] 	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x400823f	            0x6a00	                                  push 0	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x4008241	            0x6a00	                                  push 0	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x4008243	          0x4531c9	                            xor r9d, r9d	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x4008246	            0x6a00	                                  push 0	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x4008248	          0x4189c0	                            mov r8d, eax	      3712	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_37
0x400824b	      0xba01040000	                          mov edx, 0x401	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x4008250	          0x4889de	                            mov rsi, rbx	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x4008253	    0xc70500000000	               mov dword [0x0400825d], 0	      3714	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21
0x400825d	      0xe800000000	                          call 0x4008262	      3715	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	CALL_38
0x4008262	    0x8b0500000000	            mov eax, dword [0x04008268] 	      3718	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22
0x4008268	        0x4883c420	                           add rsp, 0x20	      3718	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22
0x400826c	            0x85c0	                           test eax, eax	      3718	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22
0x400826e	            0x7510	                           jne 0x4008280	      3718	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22
0x4008270	             0x9e8	                             or eax, ebp	      3721	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21
0x4008272	    0x890500000000	            mov dword [0x04008278], eax 	      3721	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21
0x4008278	      0xe935fcffff	                           jmp 0x4007eb2	      3721	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21
0x400827d	           0xf1f00	                         nop dword [rax]	      3721	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21
0x4008280	    0x41b8fbffffff	                     mov r8d, 0xfffffffb	      3719	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22	CALL_39
0x4008286	      0xb901000000	                              mov ecx, 1	      3719	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22	CALL_39
0x400828b	      0xba00000000	                              mov edx, 0	      3719	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22	CALL_39
0x4008290	      0xbeffffffff	                     mov esi, 0xffffffff	      3719	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22	CALL_39
0x4008295	      0xbf00000000	                              mov edi, 0	      3719	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22	CALL_39
0x400829a	      0xe800000000	                          call 0x400829f	      3719	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22	CALL_39
0x400829f	    0x8b0500000000	            mov eax, dword [0x040082a5] 	      3719	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22	CALL_39
0x40082a5	            0xebc9	                           jmp 0x4008270	      3719	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22	CALL_39
0x40082a7	    0x660f1f840000	                    nop word [rax + rax]	      3719	buffer.c	FUNCTION_61	IF_19	IF_20	IF_21	IF_22	CALL_39
0x40082b0	            0x31f6	                            xor esi, esi	      3579	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_2
0x40082b2	      0xbf00000000	                              mov edi, 0	      3579	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_2
0x40082b7	          0x4889e3	                            mov rbx, rsp	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x40082ba	    0x448b25000000	           mov r12d, dword [0x040082c1] 	      3576	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7
0x40082c1	      0xe800000000	                          call 0x40082c6	      3579	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_2
0x40082c6	        0x4883ec08	                              sub rsp, 8	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x40082ca	    0x488b0d000000	            mov rcx, qword [0x040082d1] 	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x40082d1	    0x488b3d000000	            mov rdi, qword [0x040082d8] 	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x40082d8	            0x6a00	                                  push 0	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x40082da	            0x6a00	                                  push 0	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x40082dc	          0x4531c9	                            xor r9d, r9d	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x40082df	              0x55	                                push rbp	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x40082e0	          0x4189c0	                            mov r8d, eax	      3579	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_2
0x40082e3	      0xba01040000	                          mov edx, 0x401	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x40082e8	          0x4889de	                            mov rsi, rbx	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x40082eb	    0xc70500000000	               mov dword [0x040082f5], 0	      3581	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7
0x40082f5	      0xe800000000	                          call 0x40082fa	      3582	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	CALL_3
0x40082fa	    0x8b0500000000	            mov eax, dword [0x04008300] 	      3585	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8
0x4008300	        0x4883c420	                           add rsp, 0x20	      3585	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8
0x4008304	            0x85c0	                           test eax, eax	      3585	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8
0x4008306	     0xf85a4000000	                           jne 0x40083b0	      3585	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8
0x400830c	          0x4409e0	                            or eax, r12d	      3588	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7
0x400830f	    0x890500000000	            mov dword [0x04008315], eax 	      3588	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7
0x4008315	      0xe9d3fdffff	                           jmp 0x40080ed	      3588	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7
0x400831a	    0x660f1f440000	                    nop word [rax + rax]	      3588	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7
0x4008320	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_114	CALL_3
0x4008325	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_114	CALL_3
0x4008328	      0xe800000000	                          call 0x400832d	       148	string3.h	FUNCTION_114	CALL_3
0x400832d	      0xe93afdffff	                           jmp 0x400806c	       148	string3.h	FUNCTION_114	CALL_3
0x4008332	    0x660f1f440000	                    nop word [rax + rax]	       148	string3.h	FUNCTION_114	CALL_3
0x4008338	          0x4889d7	                            mov rdi, rdx	      3612	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_10
0x400833b	          0x4889e3	                            mov rbx, rsp	      3613	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_11
0x400833e	      0xe800000000	                          call 0x4008343	      3612	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_10
0x4008343	          0x4889c7	                            mov rdi, rax	      3612	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_10
0x4008346	      0xe800000000	                          call 0x400834b	      3612	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_10
0x400834b	          0x4889e7	                            mov rdi, rsp	      3613	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_11
0x400834e	          0x4989c4	                            mov r12, rax	      3612	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_10
0x4008351	      0xba9d030000	                          mov edx, 0x39d	      3613	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_11
0x4008356	          0x4889c6	                            mov rsi, rax	      3613	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_11
0x4008359	      0xe800000000	                          call 0x400835e	      3613	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_11
0x400835e	          0x4c89e7	                            mov rdi, r12	      3614	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_12
0x4008361	      0xe800000000	                          call 0x4008366	      3614	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_12
0x4008366	      0xe914fcffff	                           jmp 0x4007f7f	      3614	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_12
0x400836b	       0xf1f440000	                   nop dword [rax + rax]	      3614	buffer.c	FUNCTION_61	IF_3	ELSE_2	ELSE_4	CALL_12
0x4008370	    0x488b05000000	            mov rax, qword [0x04008377] 	      3732	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_42
0x4008377	    0x488bb8880000	            mov rdi, qword [rax + 0x88] 	      3732	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_42
0x400837e	      0xe800000000	                          call 0x4008383	      3732	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_42
0x4008383	          0x4889c5	                            mov rbp, rax	      3732	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_42
0x4008386	      0xe939feffff	                           jmp 0x40081c4	      3732	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_42
0x400838b	       0xf1f440000	                   nop dword [rax + rax]	      3732	buffer.c	FUNCTION_61	IF_19	ELSE_9	CALL_42
0x4008390	          0x4863f3	                         movsxd rsi, ebx	      3741	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x4008393	          0x4889ef	                            mov rdi, rbp	      3741	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x4008396	          0x4801ee	                            add rsi, rbp	      3741	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x4008399	      0xe800000000	                          call 0x400839e	      3741	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x400839e	        0x8d5c0301	                lea ebx, [rbx + rax + 1]	      3741	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x40083a2	      0xe93ffeffff	                           jmp 0x40081e6	      3741	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x40083a7	    0x660f1f840000	                    nop word [rax + rax]	      3741	buffer.c	FUNCTION_61	IF_19	ELSE_9	IF_24	IF_25
0x40083b0	    0x41b8fbffffff	                     mov r8d, 0xfffffffb	      3586	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8	CALL_4
0x40083b6	      0xb901000000	                              mov ecx, 1	      3586	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8	CALL_4
0x40083bb	      0xba00000000	                              mov edx, 0	      3586	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8	CALL_4
0x40083c0	      0xbeffffffff	                     mov esi, 0xffffffff	      3586	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8	CALL_4
0x40083c5	      0xbf00000000	                              mov edi, 0	      3586	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8	CALL_4
0x40083ca	      0xe800000000	                          call 0x40083cf	      3586	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8	CALL_4
0x40083cf	    0x8b0500000000	            mov eax, dword [0x040083d5] 	      3586	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8	CALL_4
0x40083d5	      0xe932ffffff	                           jmp 0x400830c	      3586	buffer.c	FUNCTION_61	IF_3	IF_6	IF_7	IF_8	CALL_4
0x40083da	      0xe800000000	                          call 0x40083df	      3620	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_13
0x40083df	    0x4c8b25000000	            mov r12, qword [0x040083e6] 	      3621	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1
0x40083e6	    0x4183bc244015	            cmp dword [r12 + 0x1540], 1 	      3622	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1
0x40083ef	    0x418b94246015	          mov edx, dword [r12 + 0x1560] 	      3621	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1
0x40083f7	          0x8d0450	                  lea eax, [rax + rdx*2]	      3621	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1
0x40083fa	            0x19d2	                            sbb edx, edx	      3622	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1
0x40083fc	          0x83e204	                              and edx, 4	      3622	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1
0x40083ff	             0x1d0	                            add eax, edx	      3620	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_13
0x4008401	          0x83f807	                              cmp eax, 7	      3620	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_13
0x4008404	            0x7719	                            ja 0x400841f	      3620	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_13
0x4008406	    0xff24c5000000	                       jmp qword [rax*8]	      3620	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_11	SWITCH_1	CALL_13
0x400840d	      0xba01040000	                          mov edx, 0x401	       148	string3.h	FUNCTION_114	CALL_3
0x4008412	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_114	CALL_3
0x4008417	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_114	CALL_3
0x400841a	      0xe800000000	                          call 0x400841f	       148	string3.h	FUNCTION_114	CALL_3
0x400841f	    0x4983bc249800	               cmp qword [r12 + 0x98], 0	      3633	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x4008428	     0xf8466fbffff	                            je 0x4007f94	      3633	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x400842e	    0x4983bc24481c	             cmp qword [r12 + 0x1c48], 0	      3635	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x4008437	     0xf8557fbffff	                           jne 0x4007f94	      3635	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x400843d	          0x4889d8	                            mov rax, rbx	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x4008440	            0x8b08	                    mov ecx, dword [rax]	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x4008442	        0x4883c004	                              add rax, 4	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x4008446	    0x8d91fffefefe	              lea edx, [rcx - 0x1010101]	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x400844c	            0xf7d1	                                 not ecx	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x400844e	            0x21ca	                            and edx, ecx	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x4008450	    0x81e280808080	                     and edx, 0x80808080	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x4008456	            0x74e8	                            je 0x4008440	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x4008458	            0x89d1	                            mov ecx, edx	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x400845a	    0x41beed030000	                         mov r14d, 0x3ed	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x4008460	    0x41b801000000	                              mov r8d, 1	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x4008466	          0xc1e910	                           shr ecx, 0x10	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x4008469	    0xf7c280800000	                        test edx, 0x8080	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x400846f	          0x4c89e7	                            mov rdi, r12	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x4008472	           0xf44d1	                          cmove edx, ecx	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x4008475	        0x488d4802	                      lea rcx, [rax + 2]	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x4008479	            0x89d6	                            mov esi, edx	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x400847b	        0x480f44c1	                          cmove rax, rcx	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x400847f	          0x4000d6	                             add sil, dl	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x4008482	        0x4883d803	                              sbb rax, 3	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x4008486	          0x4829d8	                            sub rax, rbx	      3640	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_19
0x4008489	          0x4863d0	                         movsxd rdx, eax	      3641	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x400848c	        0x448d7802	                     lea r15d, [rax + 2]	      3642	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x4008490	          0x83c001	                              add eax, 1	      3642	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x4008493	            0x4898	                                    cdqe	      3642	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x4008495	        0xc6041420	              mov byte [rsp + rdx], 0x20	      3641	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x4008499	          0x4d63ef	                        movsxd r13, r15d	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x400849c	        0xc6040428	              mov byte [rsp + rax], 0x28	      3642	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12
0x40084a0	    0x498bb4248800	            mov rsi, qword [r12 + 0x88] 	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x40084a8	          0x4901dd	                            add r13, rbx	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x40084ab	          0x4529fe	                          sub r14d, r15d	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x40084ae	          0x4489f1	                           mov ecx, r14d	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x40084b1	          0x4c89ea	                            mov rdx, r13	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x40084b4	      0xe800000000	                          call 0x40084b9	      3643	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_20
0x40084b9	          0x4c89ef	                            mov rdi, r13	      3651	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_22
0x40084bc	      0xe800000000	                          call 0x40084c1	      3651	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	CALL_22
0x40084c1	          0x4939c5	                            cmp r13, rax	      3652	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14
0x40084c4	     0xf84d7000000	                            je 0x40085a1	      3652	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14
0x40084ca	          0xc60000	                       mov byte [rax], 0	      3659	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5
0x40084cd	    0x4181ffec0300	                         cmp r15d, 0x3ec	      3664	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15
0x40084d4	     0xf8faa000000	                            jg 0x4008584	      3664	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15
0x40084da	          0x4c89ef	                            mov rdi, r13	      3666	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_25
0x40084dd	      0xe800000000	                          call 0x40084e2	      3666	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_25
0x40084e2	          0x4c89ef	                            mov rdi, r13	      3667	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_26
0x40084e5	          0x4989c4	                            mov r12, rax	      3666	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_25
0x40084e8	          0x4963d6	                        movsxd rdx, r14d	      3667	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_26
0x40084eb	          0x4889c6	                            mov rsi, rax	      3667	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_26
0x40084ee	      0xe800000000	                          call 0x40084f3	      3667	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_26
0x40084f3	          0x4c89e7	                            mov rdi, r12	      3668	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_27
0x40084f6	      0xe800000000	                          call 0x40084fb	      3668	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_5	IF_15	CALL_27
0x40084fb	      0xba01040000	                          mov edx, 0x401	       148	string3.h	FUNCTION_114	CALL_3
0x4008500	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_114	CALL_3
0x4008505	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_114	CALL_3
0x4008508	      0xe800000000	                          call 0x400850d	       148	string3.h	FUNCTION_114	CALL_3
0x400850d	      0xe982faffff	                           jmp 0x4007f94	       148	string3.h	FUNCTION_114	CALL_3
0x4008512	      0xba01040000	                          mov edx, 0x401	       148	string3.h	FUNCTION_114	CALL_3
0x4008517	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_114	CALL_3
0x400851c	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_114	CALL_3
0x400851f	      0xe800000000	                          call 0x4008524	       148	string3.h	FUNCTION_114	CALL_3
0x4008524	      0xe9f6feffff	                           jmp 0x400841f	       148	string3.h	FUNCTION_114	CALL_3
0x4008529	      0xba01040000	                          mov edx, 0x401	       148	string3.h	FUNCTION_114	CALL_3
0x400852e	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_114	CALL_3
0x4008533	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_114	CALL_3
0x4008536	      0xe800000000	                          call 0x400853b	       148	string3.h	FUNCTION_114	CALL_3
0x400853b	      0xe9dffeffff	                           jmp 0x400841f	       148	string3.h	FUNCTION_114	CALL_3
0x4008540	      0xba01040000	                          mov edx, 0x401	       148	string3.h	FUNCTION_114	CALL_3
0x4008545	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_114	CALL_3
0x400854a	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_114	CALL_3
0x400854d	      0xe800000000	                          call 0x4008552	       148	string3.h	FUNCTION_114	CALL_3
0x4008552	      0xe9c8feffff	                           jmp 0x400841f	       148	string3.h	FUNCTION_114	CALL_3
0x4008557	      0xba01040000	                          mov edx, 0x401	       148	string3.h	FUNCTION_114	CALL_3
0x400855c	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_114	CALL_3
0x4008561	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_114	CALL_3
0x4008564	      0xe800000000	                          call 0x4008569	       148	string3.h	FUNCTION_114	CALL_3
0x4008569	      0xe9b1feffff	                           jmp 0x400841f	       148	string3.h	FUNCTION_114	CALL_3
0x400856e	      0xba05000000	                              mov edx, 5	      3602	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_6
0x4008573	      0xbe00000000	                              mov esi, 0	      3602	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_6
0x4008578	            0x31ff	                            xor edi, edi	      3602	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_6
0x400857a	      0xe800000000	                          call 0x400857f	      3602	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_6
0x400857f	      0xe9e8f9ffff	                           jmp 0x4007f6c	      3602	buffer.c	FUNCTION_61	IF_3	ELSE_2	CALL_6
0x4008584	      0xbaf7030000	                          mov edx, 0x3f7	      3672	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_6	CALL_28
0x4008589	      0xbe00000000	                              mov esi, 0	      3672	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_6	CALL_28
0x400858e	          0x4c89ef	                            mov rdi, r13	      3672	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_6	CALL_28
0x4008591	          0x4429fa	                           sub edx, r15d	      3672	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_6	CALL_28
0x4008594	          0x4863d2	                         movsxd rdx, edx	      3672	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_6	CALL_28
0x4008597	      0xe800000000	                          call 0x400859c	      3672	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_6	CALL_28
0x400859c	      0xe95affffff	                           jmp 0x40084fb	      3672	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	ELSE_6	CALL_28
0x40085a1	            0x31ff	                            xor edi, edi	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x40085a3	      0xba05000000	                              mov edx, 5	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x40085a8	      0xbe00000000	                              mov esi, 0	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x40085ad	      0xe800000000	                          call 0x40085b2	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x40085b2	      0xbaec030000	                          mov edx, 0x3ec	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x40085b7	          0x4889c6	                            mov rsi, rax	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x40085ba	          0x4c89ef	                            mov rdi, r13	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x40085bd	          0x4429fa	                           sub edx, r15d	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x40085c0	          0x4863d2	                         movsxd rdx, edx	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x40085c3	      0xe800000000	                          call 0x40085c8	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x40085c8	      0xe900ffffff	                           jmp 0x40084cd	      3655	buffer.c	FUNCTION_61	IF_3	ELSE_2	IF_12	IF_14	CALL_24
0x40085cd	      0xe800000000	                          call 0x40085d2	      3754	buffer.c	FUNCTION_61
fileinfo	FOR,0:WHILE,0:DO,0:ELSE,8:functions,0:CALL,38:SWITCH,0:IF,10	357
0x4005450	            0x4157	                                push r15	      3401	buffer.c	FUNCTION_59
0x4005452	            0x4156	                                push r14	      3401	buffer.c	FUNCTION_59
0x4005454	            0x4155	                                push r13	      3401	buffer.c	FUNCTION_59
0x4005456	            0x4154	                                push r12	      3401	buffer.c	FUNCTION_59
0x4005458	          0x4189d5	                           mov r13d, edx	      3401	buffer.c	FUNCTION_59
0x400545b	              0x55	                                push rbp	      3401	buffer.c	FUNCTION_59
0x400545c	              0x53	                                push rbx	      3401	buffer.c	FUNCTION_59
0x400545d	            0x89fd	                            mov ebp, edi	      3401	buffer.c	FUNCTION_59
0x400545f	      0xbf01040000	                          mov edi, 0x401	      3408	buffer.c	FUNCTION_59	CALL_1
0x4005464	          0x4189f4	                           mov r12d, esi	      3401	buffer.c	FUNCTION_59
0x4005467	        0x4883ec18	                           sub rsp, 0x18	      3401	buffer.c	FUNCTION_59
0x400546b	      0xe800000000	                          call 0x4005470	      3408	buffer.c	FUNCTION_59	CALL_1
0x4005470	          0x4885c0	                           test rax, rax	      3409	buffer.c	FUNCTION_59	IF_1
0x4005473	     0xf8477050000	                            je 0x40059f0	      3409	buffer.c	FUNCTION_59	IF_1
0x4005479	          0x83fd01	                              cmp ebp, 1	      3412	buffer.c	FUNCTION_59	IF_2
0x400547c	          0x4889c3	                            mov rbx, rax	      3412	buffer.c	FUNCTION_59	IF_2
0x400547f	            0x7e2c	                           jle 0x40054ad	      3412	buffer.c	FUNCTION_59	IF_2
0x4005481	    0x488b05000000	            mov rax, qword [0x04005488] 	      3414	buffer.c	FUNCTION_59	IF_2	CALL_2
0x4005488	      0xba00000000	                              mov edx, 0	      3414	buffer.c	FUNCTION_59	IF_2	CALL_2
0x400548d	      0xbe01040000	                          mov esi, 0x401	      3414	buffer.c	FUNCTION_59	IF_2	CALL_2
0x4005492	          0x4889df	                            mov rdi, rbx	      3414	buffer.c	FUNCTION_59	IF_2	CALL_2
0x4005495	    0x8b88b8000000	            mov ecx, dword [rax + 0xb8] 	      3414	buffer.c	FUNCTION_59	IF_2	CALL_2
0x400549b	            0x31c0	                            xor eax, eax	      3414	buffer.c	FUNCTION_59	IF_2	CALL_2
0x400549d	      0xe800000000	                          call 0x40054a2	      3414	buffer.c	FUNCTION_59	IF_2	CALL_2
0x40054a2	          0x4889df	                            mov rdi, rbx	      3415	buffer.c	FUNCTION_59	IF_2	CALL_3
0x40054a5	      0xe800000000	                          call 0x40054aa	      3415	buffer.c	FUNCTION_59	IF_2	CALL_3
0x40054aa	          0x4801d8	                            add rax, rbx	      3415	buffer.c	FUNCTION_59	IF_2	CALL_3
0x40054ad	          0xc60022	                    mov byte [rax], 0x22	      3420	buffer.c	FUNCTION_59
0x40054b0	    0x488b3d000000	            mov rdi, qword [0x040054b7] 	      3421	buffer.c	FUNCTION_59	IF_3	CALL_4
0x40054b7	        0x4c8d7001	                      lea r14, [rax + 1]	      3420	buffer.c	FUNCTION_59
0x40054bb	      0xe800000000	                          call 0x40054c0	      3421	buffer.c	FUNCTION_59	IF_3	CALL_4
0x40054c0	          0x4885c0	                           test rax, rax	      3421	buffer.c	FUNCTION_59	IF_3	CALL_4
0x40054c3	    0x488b3d000000	            mov rdi, qword [0x040054ca] 	      3422	buffer.c	FUNCTION_59	CALL_6
0x40054ca	     0xf84c0030000	                            je 0x4005890	      3421	buffer.c	FUNCTION_59	IF_3	CALL_4
0x40054d0	      0xe800000000	                          call 0x40054d5	      3422	buffer.c	FUNCTION_59	CALL_6
0x40054d5	          0x4889da	                            mov rdx, rbx	      3422	buffer.c	FUNCTION_59	CALL_6
0x40054d8	          0x4889c6	                            mov rsi, rax	      3422	buffer.c	FUNCTION_59	CALL_6
0x40054db	          0x4c89f7	                            mov rdi, r14	      3422	buffer.c	FUNCTION_59	CALL_6
0x40054de	          0x4c29f2	                            sub rdx, r14	      3422	buffer.c	FUNCTION_59	CALL_6
0x40054e1	    0x4881c2000400	                          add rdx, 0x400	      3422	buffer.c	FUNCTION_59	CALL_6
0x40054e8	      0xe800000000	                          call 0x40054ed	      3422	buffer.c	FUNCTION_59	CALL_6
0x40054ed	      0xe800000000	                          call 0x40054f2	      3449	buffer.c	FUNCTION_59	CALL_20
0x40054f2	            0x85c0	                           test eax, eax	      3433	buffer.c	FUNCTION_59	CALL_8
0x40054f4	    0x488b05000000	            mov rax, qword [0x040054fb] 	      3433	buffer.c	FUNCTION_59	CALL_8
0x40054fb	     0xf846f020000	                            je 0x4005770	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005501	    0x8ba860150000	          mov ebp, dword [rax + 0x1560] 	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005507	            0x85ed	                           test ebp, ebp	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005509	     0xf857d020000	                           jne 0x400578c	      3433	buffer.c	FUNCTION_59	CALL_8
0x400550f	          0x8b507c	            mov edx, dword [rax + 0x7c] 	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005512	    0x41bf00000000	                             mov r15d, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005518	    0x41be00000000	                             mov r14d, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x400551e	          0xf6c240	                           test dl, 0x40	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005521	      0xbd00000000	                              mov ebp, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005526	     0xf85a5020000	                           jne 0x40057d1	      3433	buffer.c	FUNCTION_59	CALL_8
0x400552c	          0xf6c210	                           test dl, 0x10	      3433	buffer.c	FUNCTION_59	CALL_8
0x400552f	     0xf85c3020000	                           jne 0x40057f8	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005535	    0x41bc00000000	                             mov r12d, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x400553b	          0x83e208	                              and edx, 8	      3433	buffer.c	FUNCTION_59	CALL_8
0x400553e	          0x4d89e0	                             mov r8, r12	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005541	            0x742e	                            je 0x4005571	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005543	    0x488b80181400	          mov rax, qword [rax + 0x1418] 	      5639	buffer.c	FUNCTION_81
0x400554a	           0xfb600	                   movzx eax, byte [rax]	      5639	buffer.c	FUNCTION_81
0x400554d	            0x3c6e	                            cmp al, 0x6e	      5639	buffer.c	FUNCTION_81
0x400554f	     0xf84e4020000	                            je 0x4005839	      5639	buffer.c	FUNCTION_81
0x4005555	            0x3c74	                            cmp al, 0x74	      5639	buffer.c	FUNCTION_81
0x4005557	     0xf84dc020000	                            je 0x4005839	      5639	buffer.c	FUNCTION_81
0x400555d	      0xba05000000	                              mov edx, 5	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005562	      0xbe00000000	                              mov esi, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005567	            0x31ff	                            xor edi, edi	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005569	      0xe800000000	                          call 0x400556e	      3433	buffer.c	FUNCTION_59	CALL_8
0x400556e	          0x4989c0	                             mov r8, rax	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005571	      0x4c89442408	                 mov qword [rsp + 8], r8	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005576	      0xe800000000	                          call 0x400557b	      3434	buffer.c	FUNCTION_59	CALL_10
0x400557b	            0x85c0	                           test eax, eax	      3433	buffer.c	FUNCTION_59	CALL_8
0x400557d	      0xb900000000	                              mov ecx, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005582	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005587	     0xf853b030000	                           jne 0x40058c8	      3433	buffer.c	FUNCTION_59	CALL_8
0x400558d	        0x4883ec08	                              sub rsp, 8	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005591	          0x4d89e1	                             mov r9, r12	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005594	          0x4889df	                            mov rdi, rbx	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005597	            0x4157	                                push r15	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005599	            0x4156	                                push r14	      3433	buffer.c	FUNCTION_59	CALL_8
0x400559b	            0x31c0	                            xor eax, eax	      3433	buffer.c	FUNCTION_59	CALL_8
0x400559d	              0x55	                                push rbp	      3433	buffer.c	FUNCTION_59	CALL_8
0x400559e	      0xba00000000	                              mov edx, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x40055a3	      0xbe01040000	                          mov esi, 0x401	      3433	buffer.c	FUNCTION_59	CALL_8
0x40055a8	      0xe800000000	                          call 0x40055ad	      3433	buffer.c	FUNCTION_59	CALL_8
0x40055ad	    0x488b05000000	            mov rax, qword [0x040055b4] 	      3454	buffer.c	FUNCTION_59	IF_5
0x40055b4	    0x488b3d000000	            mov rdi, qword [0x040055bb] 	      3456	buffer.c	FUNCTION_59	IF_5
0x40055bb	        0x4883c420	                           add rsp, 0x20	      3454	buffer.c	FUNCTION_59	IF_5
0x40055bf	        0x4c8b6038	            mov r12, qword [rax + 0x38] 	      3454	buffer.c	FUNCTION_59	IF_5
0x40055c3	          0x488b2f	                    mov rbp, qword [rdi]	      3456	buffer.c	FUNCTION_59	IF_5
0x40055c6	    0x4981fc40420f	                        cmp r12, 0xf4240	      3454	buffer.c	FUNCTION_59	IF_5
0x40055cd	     0xf8f35010000	                            jg 0x4005708	      3454	buffer.c	FUNCTION_59	IF_5
0x40055d3	        0x4b8d04a4	                  lea rax, [r12 + r12*4]	      3458	buffer.c	FUNCTION_59	ELSE_4
0x40055d7	        0x488d0480	                  lea rax, [rax + rax*4]	      3458	buffer.c	FUNCTION_59	ELSE_4
0x40055db	        0x48c1e002	                              shl rax, 2	      3458	buffer.c	FUNCTION_59	ELSE_4
0x40055df	            0x4899	                                     cqo	      3458	buffer.c	FUNCTION_59	ELSE_4
0x40055e1	          0x48f7fd	                                idiv rbp	      3458	buffer.c	FUNCTION_59	ELSE_4
0x40055e4	        0xf6471001	               test byte [rdi + 0x10], 1	      3460	buffer.c	FUNCTION_59	IF_6
0x40055e8	      0xba05000000	                              mov edx, 5	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x40055ed	          0x4989c6	                            mov r14, rax	      3458	buffer.c	FUNCTION_59	ELSE_4
0x40055f0	     0xf854e010000	                           jne 0x4005744	      3460	buffer.c	FUNCTION_59	IF_6
0x40055f6	    0x448b1d000000	           mov r11d, dword [0x040055fd] 	      3465	buffer.c	FUNCTION_59	ELSE_5	IF_7
0x40055fd	          0x4585db	                         test r11d, r11d	      3465	buffer.c	FUNCTION_59	ELSE_5	IF_7
0x4005600	     0xf842a030000	                            je 0x4005930	      3465	buffer.c	FUNCTION_59	ELSE_5	IF_7
0x4005606	        0x4883fd01	                              cmp rbp, 1	      3468	buffer.c	FUNCTION_59	ELSE_5	IF_7	IF_8
0x400560a	     0xf84b0030000	                            je 0x40059c0	      3468	buffer.c	FUNCTION_59	ELSE_5	IF_7	IF_8
0x4005610	      0xbe00000000	                              mov esi, 0	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x4005615	            0x31ff	                            xor edi, edi	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x4005617	      0xe800000000	                          call 0x400561c	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x400561c	          0x4589f0	                           mov r8d, r14d	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x400561f	          0x4889c2	                            mov rdx, rax	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x4005622	          0x4889e9	                            mov rcx, rbp	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x4005625	      0xbe01040000	                          mov esi, 0x401	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x400562a	          0x4889df	                            mov rdi, rbx	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x400562d	            0x31c0	                            xor eax, eax	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x400562f	      0xe800000000	                          call 0x4005634	      3471	buffer.c	FUNCTION_59	ELSE_5	IF_7	ELSE_6	CALL_26
0x4005634	      0xbf66000000	                           mov edi, 0x66	      3488	buffer.c	FUNCTION_59	CALL_33
0x4005639	      0xe800000000	                          call 0x400563e	      3488	buffer.c	FUNCTION_59	CALL_33
0x400563e	    0x488b2d000000	            mov rbp, qword [0x04005645] 	      3488	buffer.c	FUNCTION_59	CALL_33
0x4005645	          0x4189c4	                           mov r12d, eax	      3488	buffer.c	FUNCTION_59	CALL_33
0x4005648	    0x488b85800100	           mov rax, qword [rbp + 0x180] 	      4724	buffer.c	FUNCTION_67	IF_1
0x400564f	          0x833801	                      cmp dword [rax], 1	      4724	buffer.c	FUNCTION_67	IF_1
0x4005652	            0x7e6d	                           jle 0x40056c1	      4724	buffer.c	FUNCTION_67	IF_1
0x4005654	          0x4889df	                            mov rdi, rbx	      4727	buffer.c	FUNCTION_67	CALL_1
0x4005657	      0xe800000000	                          call 0x400565c	      4727	buffer.c	FUNCTION_67	CALL_1
0x400565c	    0x483ddd030000	                          cmp rax, 0x3dd	      4728	buffer.c	FUNCTION_67	IF_2
0x4005662	            0x7f5d	                            jg 0x40056c1	      4728	buffer.c	FUNCTION_67	IF_2
0x4005664	          0x4801d8	                            add rax, rbx	      4727	buffer.c	FUNCTION_67	CALL_1
0x4005667	          0x4585e4	                         test r12d, r12d	      4732	buffer.c	FUNCTION_67	IF_3
0x400566a	          0xc60020	                    mov byte [rax], 0x20	      4730	buffer.c	FUNCTION_67
0x400566d	        0x488d7802	                      lea rdi, [rax + 2]	      4731	buffer.c	FUNCTION_67
0x4005671	        0xc6400128	                mov byte [rax + 1], 0x28	      4731	buffer.c	FUNCTION_67
0x4005675	     0xf8425030000	                            je 0x40059a0	      4732	buffer.c	FUNCTION_67	IF_3
0x400567b	    0x488b05000000	            mov rax, qword [0x04005682] 	      4739	buffer.c	FUNCTION_67
0x4005682	    0x448b8d8c0100	           mov r9d, dword [rbp + 0x18c] 	      4737	buffer.c	FUNCTION_67	CALL_3
0x4005689	      0xba00000000	                              mov edx, 0	      4737	buffer.c	FUNCTION_67	CALL_3
0x400568e	    0x4c8b80800100	            mov r8, qword [rax + 0x180] 	      4737	buffer.c	FUNCTION_67	CALL_3
0x4005695	    0x8b8588010000	           mov eax, dword [rbp + 0x188] 	      4737	buffer.c	FUNCTION_67	CALL_3
0x400569b	          0x4585c9	                           test r9d, r9d	      4737	buffer.c	FUNCTION_67	CALL_3
0x400569e	          0x8d4801	                      lea ecx, [rax + 1]	      4737	buffer.c	FUNCTION_67	CALL_3
0x40056a1	      0xb800000000	                              mov eax, 0	      4737	buffer.c	FUNCTION_67	CALL_3
0x40056a6	          0x458b00	                     mov r8d, dword [r8]	      4737	buffer.c	FUNCTION_67	CALL_3
0x40056a9	        0x480f44d0	                          cmove rdx, rax	      4737	buffer.c	FUNCTION_67	CALL_3
0x40056ad	          0x4889d8	                            mov rax, rbx	      4737	buffer.c	FUNCTION_67	CALL_3
0x40056b0	          0x4829f8	                            sub rax, rdi	      4737	buffer.c	FUNCTION_67	CALL_3
0x40056b3	    0x488db0010400	                  lea rsi, [rax + 0x401]	      4737	buffer.c	FUNCTION_67	CALL_3
0x40056ba	            0x31c0	                            xor eax, eax	      4737	buffer.c	FUNCTION_67	CALL_3
0x40056bc	      0xe800000000	                          call 0x40056c1	      4737	buffer.c	FUNCTION_67	CALL_3
0x40056c1	          0x4585ed	                         test r13d, r13d	      3490	buffer.c	FUNCTION_59	IF_9
0x40056c4	     0xf847e010000	                            je 0x4005848	      3490	buffer.c	FUNCTION_59	IF_9
0x40056ca	      0xe800000000	                          call 0x40056cf	      3494	buffer.c	FUNCTION_59	IF_9	CALL_34
0x40056cf	    0x8b2d00000000	            mov ebp, dword [0x040056d5] 	      3495	buffer.c	FUNCTION_59	IF_9
0x40056d5	          0x4889df	                            mov rdi, rbx	      3497	buffer.c	FUNCTION_59	IF_9	CALL_35
0x40056d8	    0xc70500000000	               mov dword [0x040056e2], 1	      3496	buffer.c	FUNCTION_59	IF_9
0x40056e2	      0xe800000000	                          call 0x40056e7	      3497	buffer.c	FUNCTION_59	IF_9	CALL_35
0x40056e7	    0x892d00000000	            mov dword [0x040056ed], ebp 	      3498	buffer.c	FUNCTION_59	IF_9
0x40056ed	        0x4883c418	                           add rsp, 0x18	      3513	buffer.c	FUNCTION_59
0x40056f1	          0x4889df	                            mov rdi, rbx	      3512	buffer.c	FUNCTION_59	CALL_38
0x40056f4	              0x5b	                                 pop rbx	      3513	buffer.c	FUNCTION_59
0x40056f5	              0x5d	                                 pop rbp	      3513	buffer.c	FUNCTION_59
0x40056f6	            0x415c	                                 pop r12	      3513	buffer.c	FUNCTION_59
0x40056f8	            0x415d	                                 pop r13	      3513	buffer.c	FUNCTION_59
0x40056fa	            0x415e	                                 pop r14	      3513	buffer.c	FUNCTION_59
0x40056fc	            0x415f	                                 pop r15	      3513	buffer.c	FUNCTION_59
0x40056fe	      0xe900000000	                           jmp 0x4005703	      3512	buffer.c	FUNCTION_59	CALL_38
0x4005703	       0xf1f440000	                   nop dword [rax + rax]	      3512	buffer.c	FUNCTION_59	CALL_38
0x4005708	          0x4889e8	                            mov rax, rbp	      3455	buffer.c	FUNCTION_59	IF_5
0x400570b	    0x48ba0bd7a370	          movabs rdx, 0xa3d70a3d70a3d70b	      3455	buffer.c	FUNCTION_59	IF_5
0x4005715	          0x48f7ea	                                imul rdx	      3455	buffer.c	FUNCTION_59	IF_5
0x4005718	          0x4889e8	                            mov rax, rbp	      3455	buffer.c	FUNCTION_59	IF_5
0x400571b	        0x48c1f83f	                           sar rax, 0x3f	      3455	buffer.c	FUNCTION_59	IF_5
0x400571f	        0x488d342a	                    lea rsi, [rdx + rbp]	      3455	buffer.c	FUNCTION_59	IF_5
0x4005723	        0x48c1fe06	                              sar rsi, 6	      3455	buffer.c	FUNCTION_59	IF_5
0x4005727	          0x4829c6	                            sub rsi, rax	      3455	buffer.c	FUNCTION_59	IF_5
0x400572a	          0x4c89e0	                            mov rax, r12	      3455	buffer.c	FUNCTION_59	IF_5
0x400572d	            0x4899	                                     cqo	      3455	buffer.c	FUNCTION_59	IF_5
0x400572f	          0x48f7fe	                                idiv rsi	      3455	buffer.c	FUNCTION_59	IF_5
0x4005732	        0xf6471001	               test byte [rdi + 0x10], 1	      3460	buffer.c	FUNCTION_59	IF_6
0x4005736	      0xba05000000	                              mov edx, 5	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x400573b	          0x4989c6	                            mov r14, rax	      3455	buffer.c	FUNCTION_59	IF_5
0x400573e	     0xf84b2feffff	                            je 0x40055f6	      3460	buffer.c	FUNCTION_59	IF_6
0x4005744	            0x31ff	                            xor edi, edi	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x4005746	      0xbe00000000	                              mov esi, 0	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x400574b	      0xe800000000	                          call 0x4005750	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x4005750	      0xba00000000	                              mov edx, 0	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x4005755	          0x4889c1	                            mov rcx, rax	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x4005758	      0xbe01040000	                          mov esi, 0x401	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x400575d	          0x4889df	                            mov rdi, rbx	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x4005760	            0x31c0	                            xor eax, eax	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x4005762	      0xe800000000	                          call 0x4005767	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x4005767	      0xe9c8feffff	                           jmp 0x4005634	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x400576c	         0xf1f4000	                         nop dword [rax]	      3462	buffer.c	FUNCTION_59	IF_6	CALL_22
0x4005770	          0x8b507c	            mov edx, dword [rax + 0x7c] 	      3449	buffer.c	FUNCTION_59	CALL_20
0x4005773	          0xf6c258	                           test dl, 0x58	      3449	buffer.c	FUNCTION_59	CALL_20
0x4005776	     0xf8585fdffff	                           jne 0x4005501	      3449	buffer.c	FUNCTION_59	CALL_20
0x400577c	    0x448ba0601500	         mov r12d, dword [rax + 0x1560] 	      3450	buffer.c	FUNCTION_59
0x4005783	          0x4585e4	                         test r12d, r12d	      3450	buffer.c	FUNCTION_59
0x4005786	     0xf8494010000	                            je 0x4005920	      3450	buffer.c	FUNCTION_59
0x400578c	      0xbf72000000	                           mov edi, 0x72	      3447	buffer.c	FUNCTION_59	CALL_18
0x4005791	      0xe800000000	                          call 0x4005796	      3447	buffer.c	FUNCTION_59	CALL_18
0x4005796	            0x85c0	                           test eax, eax	      3448	buffer.c	FUNCTION_59	CALL_19
0x4005798	      0xba05000000	                              mov edx, 5	      3448	buffer.c	FUNCTION_59	CALL_19
0x400579d	      0xbe00000000	                              mov esi, 0	      3448	buffer.c	FUNCTION_59	CALL_19
0x40057a2	            0x7505	                           jne 0x40057a9	      3448	buffer.c	FUNCTION_59	CALL_19
0x40057a4	      0xbe00000000	                              mov esi, 0	      3448	buffer.c	FUNCTION_59	CALL_19
0x40057a9	            0x31ff	                            xor edi, edi	      3448	buffer.c	FUNCTION_59	CALL_19
0x40057ab	    0x41bf00000000	                             mov r15d, 0	      3448	buffer.c	FUNCTION_59	CALL_19
0x40057b1	      0xbd00000000	                              mov ebp, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x40057b6	      0xe800000000	                          call 0x40057bb	      3448	buffer.c	FUNCTION_59	CALL_19
0x40057bb	          0x4989c6	                            mov r14, rax	      3448	buffer.c	FUNCTION_59	CALL_19
0x40057be	    0x488b05000000	            mov rax, qword [0x040057c5] 	      3448	buffer.c	FUNCTION_59	CALL_19
0x40057c5	          0x8b507c	            mov edx, dword [rax + 0x7c] 	      3448	buffer.c	FUNCTION_59	CALL_19
0x40057c8	          0xf6c240	                           test dl, 0x40	      3433	buffer.c	FUNCTION_59	CALL_8
0x40057cb	     0xf845bfdffff	                            je 0x400552c	      3433	buffer.c	FUNCTION_59	CALL_8
0x40057d1	      0xba05000000	                              mov edx, 5	      3433	buffer.c	FUNCTION_59	CALL_8
0x40057d6	            0x31ff	                            xor edi, edi	      3433	buffer.c	FUNCTION_59	CALL_8
0x40057d8	      0xbe00000000	                              mov esi, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x40057dd	      0xe800000000	                          call 0x40057e2	      3433	buffer.c	FUNCTION_59	CALL_8
0x40057e2	          0x4889c5	                            mov rbp, rax	      3433	buffer.c	FUNCTION_59	CALL_8
0x40057e5	    0x488b05000000	            mov rax, qword [0x040057ec] 	      3433	buffer.c	FUNCTION_59	CALL_8
0x40057ec	          0x8b507c	            mov edx, dword [rax + 0x7c] 	      3433	buffer.c	FUNCTION_59	CALL_8
0x40057ef	          0xf6c210	                           test dl, 0x10	      3433	buffer.c	FUNCTION_59	CALL_8
0x40057f2	     0xf843dfdffff	                            je 0x4005535	      3433	buffer.c	FUNCTION_59	CALL_8
0x40057f8	    0x488b88181400	          mov rcx, qword [rax + 0x1418] 	      5639	buffer.c	FUNCTION_81
0x40057ff	           0xfb609	                   movzx ecx, byte [rcx]	      5639	buffer.c	FUNCTION_81
0x4005802	          0x80f96e	                            cmp cl, 0x6e	      5639	buffer.c	FUNCTION_81
0x4005805	     0xf842afdffff	                            je 0x4005535	      5639	buffer.c	FUNCTION_81
0x400580b	          0x80f974	                            cmp cl, 0x74	      5639	buffer.c	FUNCTION_81
0x400580e	     0xf8421fdffff	                            je 0x4005535	      5639	buffer.c	FUNCTION_81
0x4005814	            0x31ff	                            xor edi, edi	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005816	      0xba05000000	                              mov edx, 5	      3433	buffer.c	FUNCTION_59	CALL_8
0x400581b	      0xbe00000000	                              mov esi, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005820	      0xe800000000	                          call 0x4005825	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005825	          0x4989c4	                            mov r12, rax	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005828	    0x488b05000000	            mov rax, qword [0x0400582f] 	      3436	buffer.c	FUNCTION_59
0x400582f	        0xf6407c08	               test byte [rax + 0x7c], 8	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005833	     0xf850afdffff	                           jne 0x4005543	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005839	    0x41b800000000	                              mov r8d, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x400583f	      0xe92dfdffff	                           jmp 0x4005571	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005844	         0xf1f4000	                         nop dword [rax]	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005848	            0x31f6	                            xor esi, esi	      3502	buffer.c	FUNCTION_59	ELSE_8	CALL_36
0x400584a	            0x31d2	                            xor edx, edx	      3502	buffer.c	FUNCTION_59	ELSE_8	CALL_36
0x400584c	          0x4889df	                            mov rdi, rbx	      3502	buffer.c	FUNCTION_59	ELSE_8	CALL_36
0x400584f	      0xe800000000	                          call 0x4005854	      3502	buffer.c	FUNCTION_59	ELSE_8	CALL_36
0x4005854	    0x8b3500000000	            mov esi, dword [0x0400585a] 	      3503	buffer.c	FUNCTION_59	ELSE_8	IF_10
0x400585a	            0x85f6	                           test esi, esi	      3503	buffer.c	FUNCTION_59	ELSE_8	IF_10
0x400585c	            0x751c	                           jne 0x400587a	      3503	buffer.c	FUNCTION_59	ELSE_8	IF_10
0x400585e	    0x8b0d00000000	            mov ecx, dword [0x04005864] 	      3503	buffer.c	FUNCTION_59	ELSE_8	IF_10
0x4005864	            0x85c9	                           test ecx, ecx	      3503	buffer.c	FUNCTION_59	ELSE_8	IF_10
0x4005866	     0xf8481feffff	                            je 0x40056ed	      3503	buffer.c	FUNCTION_59	ELSE_8	IF_10
0x400586c	    0x8b1500000000	            mov edx, dword [0x04005872] 	      3503	buffer.c	FUNCTION_59	ELSE_8	IF_10
0x4005872	            0x85d2	                           test edx, edx	      3503	buffer.c	FUNCTION_59	ELSE_8	IF_10
0x4005874	     0xf8573feffff	                           jne 0x40056ed	      3503	buffer.c	FUNCTION_59	ELSE_8	IF_10
0x400587a	            0x31f6	                            xor esi, esi	      3509	buffer.c	FUNCTION_59	ELSE_8	CALL_37
0x400587c	          0x4889c7	                            mov rdi, rax	      3509	buffer.c	FUNCTION_59	ELSE_8	CALL_37
0x400587f	      0xe800000000	                          call 0x4005884	      3509	buffer.c	FUNCTION_59	ELSE_8	CALL_37
0x4005884	      0xe964feffff	                           jmp 0x40056ed	      3509	buffer.c	FUNCTION_59	ELSE_8	CALL_37
0x4005889	     0xf1f80000000	                         nop dword [rax]	      3509	buffer.c	FUNCTION_59	ELSE_8	CALL_37
0x4005890	            0x85ed	                           test ebp, ebp	      3425	buffer.c	FUNCTION_59	ELSE_2	IF_4
0x4005892	            0x7474	                            je 0x4005908	      3425	buffer.c	FUNCTION_59	ELSE_2	IF_4
0x4005894	    0x488bb7880000	            mov rsi, qword [rdi + 0x88] 	      3428	buffer.c	FUNCTION_59	ELSE_2	ELSE_3
0x400589b	            0x89d8	                            mov eax, ebx	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x400589d	    0x41b801000000	                              mov r8d, 1	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x40058a3	          0x4c89f2	                            mov rdx, r14	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x40058a6	          0x4429f0	                           sub eax, r14d	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x40058a9	          0x4585e4	                         test r12d, r12d	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x40058ac	    0x8d8801040000	                  lea ecx, [rax + 0x401]	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x40058b2	      0xb800000000	                              mov eax, 0	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x40058b7	        0x480f44f8	                          cmove rdi, rax	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x40058bb	      0xe800000000	                          call 0x40058c0	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x40058c0	      0xe928fcffff	                           jmp 0x40054ed	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x40058c5	           0xf1f00	                         nop dword [rax]	      3429	buffer.c	FUNCTION_59	ELSE_2	CALL_7
0x40058c8	      0xbf6d000000	                           mov edi, 0x6d	      3434	buffer.c	FUNCTION_59	CALL_10
0x40058cd	      0xe800000000	                          call 0x40058d2	      3434	buffer.c	FUNCTION_59	CALL_10
0x40058d2	            0x85c0	                           test eax, eax	      3435	buffer.c	FUNCTION_59	CALL_11
0x40058d4	      0xb900000000	                              mov ecx, 0	      3435	buffer.c	FUNCTION_59	CALL_11
0x40058d9	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      3435	buffer.c	FUNCTION_59	CALL_11
0x40058de	     0xf85a9fcffff	                           jne 0x400558d	      3435	buffer.c	FUNCTION_59	CALL_11
0x40058e4	      0xba05000000	                              mov edx, 5	      3435	buffer.c	FUNCTION_59	CALL_11
0x40058e9	      0xbe00000000	                              mov esi, 0	      3435	buffer.c	FUNCTION_59	CALL_11
0x40058ee	            0x31ff	                            xor edi, edi	      3435	buffer.c	FUNCTION_59	CALL_11
0x40058f0	      0xe800000000	                          call 0x40058f5	      3435	buffer.c	FUNCTION_59	CALL_11
0x40058f5	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      3435	buffer.c	FUNCTION_59	CALL_11
0x40058fa	          0x4889c1	                            mov rcx, rax	      3435	buffer.c	FUNCTION_59	CALL_11
0x40058fd	      0xe98bfcffff	                           jmp 0x400558d	      3435	buffer.c	FUNCTION_59	CALL_11
0x4005902	    0x660f1f440000	                    nop word [rax + rax]	      3435	buffer.c	FUNCTION_59	CALL_11
0x4005908	    0x488bb7980000	            mov rsi, qword [rdi + 0x98] 	      3425	buffer.c	FUNCTION_59	ELSE_2	IF_4
0x400590f	          0x4885f6	                           test rsi, rsi	      3425	buffer.c	FUNCTION_59	ELSE_2	IF_4
0x4005912	            0x7587	                           jne 0x400589b	      3425	buffer.c	FUNCTION_59	ELSE_2	IF_4
0x4005914	      0xe97bffffff	                           jmp 0x4005894	      3425	buffer.c	FUNCTION_59	ELSE_2	IF_4
0x4005919	     0xf1f80000000	                         nop dword [rax]	      3425	buffer.c	FUNCTION_59	ELSE_2	IF_4
0x4005920	    0x41bf00000000	                             mov r15d, 0	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005926	          0x4d89fe	                            mov r14, r15	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005929	      0xe9f0fbffff	                           jmp 0x400551e	      3433	buffer.c	FUNCTION_59	CALL_8
0x400592e	            0x6690	                                     nop	      3433	buffer.c	FUNCTION_59	CALL_8
0x4005930	            0x31ff	                            xor edi, edi	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x4005932	      0xbe00000000	                              mov esi, 0	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x4005937	      0xe800000000	                          call 0x400593c	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x400593c	          0x4989e8	                             mov r8, rbp	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x400593f	          0x4889c2	                            mov rdx, rax	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x4005942	          0x4c89e1	                            mov rcx, r12	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x4005945	      0xbe01040000	                          mov esi, 0x401	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x400594a	          0x4589f1	                           mov r9d, r14d	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x400594d	          0x4889df	                            mov rdi, rbx	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x4005950	            0x31c0	                            xor eax, eax	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x4005952	      0xe800000000	                          call 0x4005957	      3477	buffer.c	FUNCTION_59	ELSE_7	CALL_27
0x4005957	      0xe800000000	                          call 0x400595c	      3482	buffer.c	FUNCTION_59	ELSE_7	CALL_29
0x400595c	          0x4889df	                            mov rdi, rbx	      3483	buffer.c	FUNCTION_59	ELSE_7	CALL_30
0x400595f	      0xe800000000	                          call 0x4005964	      3483	buffer.c	FUNCTION_59	ELSE_7	CALL_30
0x4005964	    0x488b15000000	            mov rdx, qword [0x0400596b] 	      3485	buffer.c	FUNCTION_59	ELSE_7
0x400596b	      0xbe01040000	                          mov esi, 0x401	      3484	buffer.c	FUNCTION_59	ELSE_7	CALL_31
0x4005970	        0x488d3c03	                    lea rdi, [rbx + rax]	      3484	buffer.c	FUNCTION_59	ELSE_7	CALL_31
0x4005974	          0x4829c6	                            sub rsi, rax	      3484	buffer.c	FUNCTION_59	ELSE_7	CALL_31
0x4005977	    0x8b8ad8000000	            mov ecx, dword [rdx + 0xd8] 	      3484	buffer.c	FUNCTION_59	ELSE_7	CALL_31
0x400597d	        0x448d4101	                      lea r8d, [rcx + 1]	      3484	buffer.c	FUNCTION_59	ELSE_7	CALL_31
0x4005981	          0x8b4a40	            mov ecx, dword [rdx + 0x40] 	      3484	buffer.c	FUNCTION_59	ELSE_7	CALL_31
0x4005984	          0x83c101	                              add ecx, 1	      3484	buffer.c	FUNCTION_59	ELSE_7	CALL_31
0x4005987	          0x4139c8	                            cmp r8d, ecx	      3522	buffer.c	FUNCTION_60	IF_1
0x400598a	            0x7474	                            je 0x4005a00	      3522	buffer.c	FUNCTION_60	IF_1
0x400598c	      0xba00000000	                              mov edx, 0	      3525	buffer.c	FUNCTION_60	CALL_2
0x4005991	            0x31c0	                            xor eax, eax	      3525	buffer.c	FUNCTION_60	CALL_2
0x4005993	      0xe800000000	                          call 0x4005998	      3525	buffer.c	FUNCTION_60	CALL_2
0x4005998	      0xe997fcffff	                           jmp 0x4005634	      3525	buffer.c	FUNCTION_60	CALL_2
0x400599d	           0xf1f00	                         nop dword [rax]	      3525	buffer.c	FUNCTION_60	CALL_2
0x40059a0	    0x41ba20000000	                          mov r10d, 0x20	       110	string3.h	FUNCTION_110	CALL_3
0x40059a6	    0xc7400266696c	        mov dword [rax + 2], 0x656c6966 	       110	string3.h	FUNCTION_110	CALL_3
0x40059ad	      0x6644895704	                mov word [rdi + 4], r10w	       110	string3.h	FUNCTION_110	CALL_3
0x40059b2	        0x488d7807	                      lea rdi, [rax + 7]	      4735	buffer.c	FUNCTION_67	IF_3
0x40059b6	      0xe9c0fcffff	                           jmp 0x400567b	      4735	buffer.c	FUNCTION_67	IF_3
0x40059bb	       0xf1f440000	                   nop dword [rax + rax]	      4735	buffer.c	FUNCTION_67	IF_3
0x40059c0	            0x31ff	                            xor edi, edi	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x40059c2	      0xbe00000000	                              mov esi, 0	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x40059c7	      0xe800000000	                          call 0x40059cc	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x40059cc	          0x4489f1	                           mov ecx, r14d	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x40059cf	          0x4889c2	                            mov rdx, rax	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x40059d2	      0xbe01040000	                          mov esi, 0x401	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x40059d7	          0x4889df	                            mov rdi, rbx	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x40059da	            0x31c0	                            xor eax, eax	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x40059dc	      0xe800000000	                          call 0x40059e1	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x40059e1	      0xe94efcffff	                           jmp 0x4005634	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x40059e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3469	buffer.c	FUNCTION_59	ELSE_5	IF_7	CALL_24
0x40059f0	        0x4883c418	                           add rsp, 0x18	      3513	buffer.c	FUNCTION_59
0x40059f4	              0x5b	                                 pop rbx	      3513	buffer.c	FUNCTION_59
0x40059f5	              0x5d	                                 pop rbp	      3513	buffer.c	FUNCTION_59
0x40059f6	            0x415c	                                 pop r12	      3513	buffer.c	FUNCTION_59
0x40059f8	            0x415d	                                 pop r13	      3513	buffer.c	FUNCTION_59
0x40059fa	            0x415e	                                 pop r14	      3513	buffer.c	FUNCTION_59
0x40059fc	            0x415f	                                 pop r15	      3513	buffer.c	FUNCTION_59
0x40059fe	              0xc3	                                     ret	      3513	buffer.c	FUNCTION_59
0x40059ff	              0x90	                                     nop	      3513	buffer.c	FUNCTION_59
0x4005a00	          0x4489c1	                            mov ecx, r8d	      3523	buffer.c	FUNCTION_60	CALL_1
0x4005a03	      0xba00000000	                              mov edx, 0	      3523	buffer.c	FUNCTION_60	CALL_1
0x4005a08	            0x31c0	                            xor eax, eax	      3523	buffer.c	FUNCTION_60	CALL_1
0x4005a0a	      0xe800000000	                          call 0x4005a0f	      3523	buffer.c	FUNCTION_60	CALL_1
0x4005a0f	      0xe920fcffff	                           jmp 0x4005634	      3523	buffer.c	FUNCTION_60	CALL_1
buf_delsign	FOR,1:WHILE,0:DO,0:ELSE,1:functions,0:CALL,3:SWITCH,0:IF,3	51
0x400c260	              0x55	                                push rbp	      5937	buffer.c	FUNCTION_92
0x400c261	              0x53	                                push rbx	      5937	buffer.c	FUNCTION_92
0x400c262	          0x4889fb	                            mov rbx, rdi	      5937	buffer.c	FUNCTION_92
0x400c265	        0x4883ec08	                              sub rsp, 8	      5937	buffer.c	FUNCTION_92
0x400c269	    0x488b97201c00	          mov rdx, qword [rdi + 0x1c20] 	      5945	buffer.c	FUNCTION_92	FOR_1
0x400c270	          0x4885d2	                           test rdx, rdx	      5945	buffer.c	FUNCTION_92	FOR_1
0x400c273	            0x746e	                            je 0x400c2e3	      5945	buffer.c	FUNCTION_92	FOR_1
0x400c275	            0x3b32	                    cmp esi, dword [rdx]	      5948	buffer.c	FUNCTION_92	FOR_1	IF_1
0x400c277	        0x488b7a18	            mov rdi, qword [rdx + 0x18] 	      5947	buffer.c	FUNCTION_92	FOR_1
0x400c27b	            0x7511	                           jne 0x400c28e	      5948	buffer.c	FUNCTION_92	FOR_1	IF_1
0x400c27d	            0xeb68	                           jmp 0x400c2e7	      5948	buffer.c	FUNCTION_92	FOR_1	IF_1
0x400c27f	              0x90	                                     nop	      5948	buffer.c	FUNCTION_92	FOR_1	IF_1
0x400c280	            0x3937	                    cmp dword [rdi], esi	      5948	buffer.c	FUNCTION_92	FOR_1	IF_1
0x400c282	        0x488b4718	            mov rax, qword [rdi + 0x18] 	      5947	buffer.c	FUNCTION_92	FOR_1
0x400c286	            0x7418	                            je 0x400c2a0	      5948	buffer.c	FUNCTION_92	FOR_1	IF_1
0x400c288	          0x4889fa	                            mov rdx, rdi	      5948	buffer.c	FUNCTION_92	FOR_1	IF_1
0x400c28b	          0x4889c7	                            mov rdi, rax	      5947	buffer.c	FUNCTION_92	FOR_1
0x400c28e	          0x4885ff	                           test rdi, rdi	      5945	buffer.c	FUNCTION_92	FOR_1
0x400c291	            0x75ed	                           jne 0x400c280	      5945	buffer.c	FUNCTION_92	FOR_1
0x400c293	            0x31ed	                            xor ebp, ebp	      5944	buffer.c	FUNCTION_92
0x400c295	        0x4883c408	                              add rsp, 8	      5972	buffer.c	FUNCTION_92
0x400c299	          0x4889e8	                            mov rax, rbp	      5972	buffer.c	FUNCTION_92
0x400c29c	              0x5b	                                 pop rbx	      5972	buffer.c	FUNCTION_92
0x400c29d	              0x5d	                                 pop rbp	      5972	buffer.c	FUNCTION_92
0x400c29e	              0xc3	                                     ret	      5972	buffer.c	FUNCTION_92
0x400c29f	              0x90	                                     nop	      5972	buffer.c	FUNCTION_92
0x400c2a0	        0x488d4a18	                   lea rcx, [rdx + 0x18]	      5960	buffer.c	FUNCTION_92	FOR_1	ELSE_1
0x400c2a4	          0x4885c0	                           test rax, rax	      5952	buffer.c	FUNCTION_92	FOR_1	IF_1	IF_2
0x400c2a7	          0x488901	                    mov qword [rcx], rax	      5950	buffer.c	FUNCTION_92	FOR_1	IF_1
0x400c2aa	            0x7408	                            je 0x400c2b4	      5952	buffer.c	FUNCTION_92	FOR_1	IF_1	IF_2
0x400c2ac	        0x488b5720	            mov rdx, qword [rdi + 0x20] 	      5953	buffer.c	FUNCTION_92	FOR_1	IF_1	IF_2
0x400c2b0	        0x48895020	             mov qword [rax + 0x20], rdx	      5953	buffer.c	FUNCTION_92	FOR_1	IF_1	IF_2
0x400c2b4	        0x488b6f08	                mov rbp, qword [rdi + 8]	      5955	buffer.c	FUNCTION_92	FOR_1	IF_1
0x400c2b8	      0xe800000000	                          call 0x400c2bd	      5956	buffer.c	FUNCTION_92	FOR_1	IF_1	CALL_1
0x400c2bd	    0x4883bb201c00	             cmp qword [rbx + 0x1c20], 0	      5965	buffer.c	FUNCTION_92	ELSE_1	IF_3
0x400c2c5	            0x75ce	                           jne 0x400c295	      5965	buffer.c	FUNCTION_92	ELSE_1	IF_3
0x400c2c7	          0x4889df	                            mov rdi, rbx	      5967	buffer.c	FUNCTION_92	ELSE_1	IF_3	CALL_2
0x400c2ca	      0xbe28000000	                           mov esi, 0x28	      5967	buffer.c	FUNCTION_92	ELSE_1	IF_3	CALL_2
0x400c2cf	      0xe800000000	                          call 0x400c2d4	      5967	buffer.c	FUNCTION_92	ELSE_1	IF_3	CALL_2
0x400c2d4	      0xe800000000	                          call 0x400c2d9	      5968	buffer.c	FUNCTION_92	ELSE_1	IF_3	CALL_3
0x400c2d9	        0x4883c408	                              add rsp, 8	      5972	buffer.c	FUNCTION_92
0x400c2dd	          0x4889e8	                            mov rax, rbp	      5972	buffer.c	FUNCTION_92
0x400c2e0	              0x5b	                                 pop rbx	      5972	buffer.c	FUNCTION_92
0x400c2e1	              0x5d	                                 pop rbp	      5972	buffer.c	FUNCTION_92
0x400c2e2	              0xc3	                                     ret	      5972	buffer.c	FUNCTION_92
0x400c2e3	            0x31ed	                            xor ebp, ebp	      5944	buffer.c	FUNCTION_92
0x400c2e5	            0xebe0	                           jmp 0x400c2c7	      5944	buffer.c	FUNCTION_92
0x400c2e7	          0x4889f8	                            mov rax, rdi	      5947	buffer.c	FUNCTION_92	FOR_1
0x400c2ea	    0x488d8b201c00	                 lea rcx, [rbx + 0x1c20]	      5943	buffer.c	FUNCTION_92
0x400c2f1	          0x4889d7	                            mov rdi, rdx	      5943	buffer.c	FUNCTION_92
0x400c2f4	            0xebae	                           jmp 0x400c2a4	      5943	buffer.c	FUNCTION_92
do_bufdel	FOR,1:WHILE,0:DO,0:ELSE,13:functions,0:CALL,28:SWITCH,0:IF,20	367
0x400a870	            0x4157	                                push r15	      1099	buffer.c	FUNCTION_17
0x400a872	            0x4156	                                push r14	      1099	buffer.c	FUNCTION_17
0x400a874	            0x89d0	                            mov eax, edx	      1099	buffer.c	FUNCTION_17
0x400a876	            0x4155	                                push r13	      1099	buffer.c	FUNCTION_17
0x400a878	            0x4154	                                push r12	      1099	buffer.c	FUNCTION_17
0x400a87a	              0x55	                                push rbp	      1099	buffer.c	FUNCTION_17
0x400a87b	              0x53	                                push rbx	      1099	buffer.c	FUNCTION_17
0x400a87c	    0x4881ec080100	                          sub rsp, 0x108	      1099	buffer.c	FUNCTION_17
0x400a883	        0x89542418	             mov dword [rsp + 0x18], edx	      1099	buffer.c	FUNCTION_17
0x400a887	        0x897c2410	             mov dword [rsp + 0x10], edi	      1099	buffer.c	FUNCTION_17
0x400a88b	    0x64488b142528	                mov rdx, qword fs:[0x28]	      1099	buffer.c	FUNCTION_17
0x400a894	    0x48899424f800	             mov qword [rsp + 0xf8], rdx	      1099	buffer.c	FUNCTION_17
0x400a89c	            0x31d2	                            xor edx, edx	      1099	buffer.c	FUNCTION_17
0x400a89e	            0x85c0	                           test eax, eax	      1106	buffer.c	FUNCTION_17	IF_1
0x400a8a0	      0x4889742438	             mov qword [rsp + 0x38], rsi	      1099	buffer.c	FUNCTION_17
0x400a8a5	      0x4489442434	             mov dword [rsp + 0x34], r8d	      1099	buffer.c	FUNCTION_17
0x400a8aa	      0x44894c2430	             mov dword [rsp + 0x30], r9d	      1099	buffer.c	FUNCTION_17
0x400a8af	     0xf8473050000	                            je 0x400ae28	      1106	buffer.c	FUNCTION_17	IF_1
0x400a8b5	      0x837c241802	               cmp dword [rsp + 0x18], 2	      1112	buffer.c	FUNCTION_17	ELSE_1	IF_2
0x400a8ba	          0x4489c5	                            mov ebp, r8d	      1112	buffer.c	FUNCTION_17	ELSE_1	IF_2
0x400a8bd	     0xf84ff040000	                            je 0x400adc2	      1112	buffer.c	FUNCTION_17	ELSE_1	IF_2
0x400a8c3	    0x8b0500000000	            mov eax, dword [0x0400a8c9] 	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x400a8c9	    0xc74424140000	               mov dword [rsp + 0x14], 0	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x400a8d1	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x400a8d9	            0x85c0	                           test eax, eax	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x400a8db	            0x742b	                            je 0x400a908	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x400a8dd	      0xe92f050000	                           jmp 0x400ae11	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x400a8e2	    0x660f1f440000	                    nop word [rax + rax]	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x400a8e8	          0x83c501	                              add ebp, 1	      1140	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_6	IF_7
0x400a8eb	        0x396c2434	            cmp dword [rsp + 0x34], ebp 	      1140	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_6	IF_7
0x400a8ef	     0xf8c33030000	                            jl 0x400ac28	      1140	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_6	IF_7
0x400a8f5	      0xe800000000	                          call 0x400a8fa	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x400a8fa	    0x8b0500000000	            mov eax, dword [0x0400a900] 	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x400a900	            0x85c0	                           test eax, eax	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x400a902	     0xf8520030000	                           jne 0x400ac28	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x400a908	    0x488b05000000	            mov rax, qword [0x0400a90f] 	      1129	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_4
0x400a90f	    0x39a8b8000000	            cmp dword [rax + 0xb8], ebp 	      1129	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_4
0x400a915	     0xf84e5020000	                            je 0x400ac00	      1129	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_4
0x400a91b	        0x8b542430	            mov edx, dword [rsp + 0x30] 	      1131	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5	CALL_4
0x400a91f	        0x8b7c2410	            mov edi, dword [rsp + 0x10] 	      1131	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5	CALL_4
0x400a923	            0x89ee	                            mov esi, ebp	      1131	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5	CALL_4
0x400a925	      0xe8d6f6ffff	         call sym.do_buffer.constprop.17	      1131	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5	CALL_4
0x400a92a	          0x83f801	                              cmp eax, 1	      1133	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5
0x400a92d	           0xf94c0	                                 sete al	      1133	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5
0x400a930	           0xfb6c0	                           movzx eax, al	      1133	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5
0x400a933	         0x1442414	             add dword [rsp + 0x14], eax	      1133	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_3	IF_5
0x400a937	      0x837c241802	               cmp dword [rsp + 0x18], 2	      1138	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_6
0x400a93c	            0x74aa	                            je 0x400a8e8	      1138	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	IF_6
0x400a93e	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      1145	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	CALL_5
0x400a943	      0xe800000000	                          call 0x400a948	      1145	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	CALL_5
0x400a948	      0x4889442438	             mov qword [rsp + 0x38], rax	      1145	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	CALL_5
0x400a94d	           0xfb610	                   movzx edx, byte [rax]	      1146	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_8
0x400a950	            0x84d2	                             test dl, dl	      1146	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_8
0x400a952	     0xf84d0020000	                            je 0x400ac28	      1146	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_8
0x400a958	          0x83ea30	                           sub edx, 0x30	      1148	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_6
0x400a95b	          0x83fa09	                              cmp edx, 9	      1148	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_6
0x400a95e	     0xf86a5020000	                           jbe 0x400ac09	      1148	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_6
0x400a964	          0x4889c7	                            mov rdi, rax	      1150	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_7
0x400a967	      0xe800000000	                          call 0x400a96c	      1150	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_7
0x400a96c	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      1151	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_8
0x400a971	          0x4889c2	                            mov rdx, rax	      1150	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_7
0x400a974	      0x4889442420	             mov qword [rsp + 0x20], rax	      1150	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_7
0x400a979	        0x488d4101	                      lea rax, [rcx + 1]	      2445	buffer.c	FUNCTION_33	IF_1
0x400a97d	      0x48894c2428	             mov qword [rsp + 0x28], rcx	      1151	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9	CALL_8
0x400a982	          0x4839c2	                            cmp rdx, rax	      2445	buffer.c	FUNCTION_33	IF_1
0x400a985	     0xf8441030000	                            je 0x400accc	      2445	buffer.c	FUNCTION_33	IF_1
0x400a98b	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      2468	buffer.c	FUNCTION_33	ELSE_2	CALL_3
0x400a990	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      2468	buffer.c	FUNCTION_33	ELSE_2	CALL_3
0x400a995	            0x31c9	                            xor ecx, ecx	      2468	buffer.c	FUNCTION_33	ELSE_2	CALL_3
0x400a997	            0x31d2	                            xor edx, edx	      2468	buffer.c	FUNCTION_33	ELSE_2	CALL_3
0x400a999	      0xe800000000	                          call 0x400a99e	      2468	buffer.c	FUNCTION_33	ELSE_2	CALL_3
0x400a99e	          0x4885c0	                           test rax, rax	      2469	buffer.c	FUNCTION_33	ELSE_2	IF_4
0x400a9a1	          0x4989c7	                            mov r15, rax	      2468	buffer.c	FUNCTION_33	ELSE_2	CALL_3
0x400a9a4	     0xf847e020000	                            je 0x400ac28	      2469	buffer.c	FUNCTION_33	ELSE_2	IF_4
0x400a9aa	          0x4889c7	                            mov rdi, rax	      2471	buffer.c	FUNCTION_33	ELSE_2	CALL_4
0x400a9ad	      0xe800000000	                          call 0x400a9b2	      2471	buffer.c	FUNCTION_33	ELSE_2	CALL_4
0x400a9b2	      0x498d4407ff	                lea rax, [r15 + rax - 1]	      2471	buffer.c	FUNCTION_33	ELSE_2	CALL_4
0x400a9b7	    0xc74424040000	                  mov dword [rsp + 4], 0	      2472	buffer.c	FUNCTION_33	ELSE_2
0x400a9bf	          0x4939c7	                            cmp r15, rax	      2472	buffer.c	FUNCTION_33	ELSE_2
0x400a9c2	      0x4889442408	                mov qword [rsp + 8], rax	      2471	buffer.c	FUNCTION_33	ELSE_2	CALL_4
0x400a9c7	            0x730d	                           jae 0x400a9d6	      2472	buffer.c	FUNCTION_33	ELSE_2
0x400a9c9	          0x803824	                    cmp byte [rax], 0x24	      2472	buffer.c	FUNCTION_33	ELSE_2
0x400a9cc	           0xf94c0	                                 sete al	      2472	buffer.c	FUNCTION_33	ELSE_2
0x400a9cf	           0xfb6c0	                           movzx eax, al	      2472	buffer.c	FUNCTION_33	ELSE_2
0x400a9d2	        0x89442404	                mov dword [rsp + 4], eax	      2472	buffer.c	FUNCTION_33	ELSE_2
0x400a9d6	      0xbb01000000	                              mov ebx, 1	      2476	buffer.c	FUNCTION_33	ELSE_2
0x400a9db	       0xf1f440000	                   nop dword [rax + rax]	      2476	buffer.c	FUNCTION_33	ELSE_2
0x400a9e0	    0x41bc01000000	                             mov r12d, 1	      2517	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_12
0x400a9e6	      0xbdffffffff	                     mov ebp, 0xffffffff	      2517	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_12
0x400a9eb	      0x448b4c2404	                mov r9d, dword [rsp + 4]	      2484	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x400a9f0	      0x418d5424ff	                      lea edx, [r12 - 1]	      2484	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x400a9f5	          0x4585c9	                           test r9d, r9d	      2484	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x400a9f8	            0x7411	                            je 0x400aa0b	      2484	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x400a9fa	          0x83fa02	                              cmp edx, 2	      2485	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x400a9fd	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      2485	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x400aa02	            0x19c0	                            sbb eax, eax	      2485	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x400aa04	            0xf7d0	                                 not eax	      2485	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x400aa06	          0x83e024	                           and eax, 0x24	      2485	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x400aa09	            0x8801	                      mov byte [rcx], al	      2485	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_5
0x400aa0b	        0x41803f5e	                    cmp byte [r15], 0x5e	      2487	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x400aa0f	          0x4c89ff	                            mov rdi, r15	      2487	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x400aa12	     0xf84a8010000	                            je 0x400abc0	      2487	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x400aa18	    0x448b05000000	            mov r8d, dword [0x0400aa1f] 	      2489	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_5
0x400aa1f	            0x31f6	                            xor esi, esi	      2489	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_5
0x400aa21	          0x4585c0	                           test r8d, r8d	      2489	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_5
0x400aa24	        0x400f95c6	                               setne sil	      2489	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_5
0x400aa28	      0xe800000000	                          call 0x400aa2d	      2489	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_5
0x400aa2d	          0x4885c0	                           test rax, rax	      2490	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_7
0x400aa30	      0x4889442440	             mov qword [rsp + 0x40], rax	      2489	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_5
0x400aa35	     0xf8484020000	                            je 0x400acbf	      2490	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_7
0x400aa3b	    0x4c8b2d000000	            mov r13, qword [0x0400aa42] 	      2496	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3
0x400aa42	          0x4d85ed	                           test r13, r13	      2496	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3
0x400aa45	            0x7512	                           jne 0x400aa59	      2496	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3
0x400aa47	      0xe966020000	                           jmp 0x400acb2	      2496	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3
0x400aa4c	         0xf1f4000	                         nop dword [rax]	      2496	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3
0x400aa50	        0x4d8b6d70	            mov r13, qword [r13 + 0x70] 	      2496	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3
0x400aa54	          0x4d85ed	                           test r13, r13	      2496	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3
0x400aa57	            0x7454	                            je 0x400aaad	      2496	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3
0x400aa59	    0x41399d241400	          cmp dword [r13 + 0x1424], ebx 	      2497	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8
0x400aa60	            0x75ee	                           jne 0x400aa50	      2497	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8
0x400aa62	    0x4d8bb5900000	            mov r14, qword [r13 + 0x90] 	      2497	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8
0x400aa69	          0x4d85f6	                           test r14, r14	      2685	buffer.c	FUNCTION_36	IF_1
0x400aa6c	     0xf84d6000000	                            je 0x400ab48	      2685	buffer.c	FUNCTION_36	IF_1
0x400aa72	            0x31c0	                            xor eax, eax	      2688	buffer.c	FUNCTION_36	IF_1
0x400aa74	    0x48833d000000	               cmp qword [0x0400aa7c], 0	      2688	buffer.c	FUNCTION_36	IF_1
0x400aa7c	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      2689	buffer.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x400aa81	          0x4c89f6	                            mov rsi, r14	      2689	buffer.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x400aa84	           0xf95c0	                                setne al	      2688	buffer.c	FUNCTION_36	IF_1
0x400aa87	            0x31d2	                            xor edx, edx	      2689	buffer.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x400aa89	    0x898424e80000	             mov dword [rsp + 0xe8], eax	      2688	buffer.c	FUNCTION_36	IF_1
0x400aa90	      0xe800000000	                          call 0x400aa95	      2689	buffer.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x400aa95	            0x85c0	                           test eax, eax	      2689	buffer.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x400aa97	            0x7437	                            je 0x400aad0	      2689	buffer.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x400aa99	            0x85ed	                           test ebp, ebp	      2515	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_12
0x400aa9b	            0x796b	                           jns 0x400ab08	      2515	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_12
0x400aa9d	    0x418badb80000	            mov ebp, dword [r13 + 0xb8] 	      2520	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8
0x400aaa4	        0x4d8b6d70	            mov r13, qword [r13 + 0x70] 	      2496	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3
0x400aaa8	          0x4d85ed	                           test r13, r13	      2496	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3
0x400aaab	            0x75ac	                           jne 0x400aa59	      2496	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3
0x400aaad	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      2523	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_10
0x400aab2	      0xe800000000	                          call 0x400aab7	      2523	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_10
0x400aab7	            0x85ed	                           test ebp, ebp	      2524	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_13
0x400aab9	            0x7962	                           jns 0x400ab1d	      2524	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_13
0x400aabb	        0x4183fc04	                             cmp r12d, 4	      2479	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2
0x400aabf	     0xf840b010000	                            je 0x400abd0	      2479	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2
0x400aac5	        0x4183c401	                             add r12d, 1	      2479	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2
0x400aac9	      0xe91dffffff	                           jmp 0x400a9eb	      2479	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2
0x400aace	            0x6690	                                     nop	      2479	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2
0x400aad0	          0x4c89f6	                            mov rsi, r14	      2694	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_2
0x400aad3	            0x31ff	                            xor edi, edi	      2694	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_2
0x400aad5	      0xe800000000	                          call 0x400aada	      2694	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_2
0x400aada	          0x4885c0	                           test rax, rax	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x400aadd	          0x4989c6	                            mov r14, rax	      2694	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_2
0x400aae0	            0x745e	                            je 0x400ab40	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x400aae2	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x400aae7	            0x31d2	                            xor edx, edx	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x400aae9	          0x4889c6	                            mov rsi, rax	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x400aaec	      0xe800000000	                          call 0x400aaf1	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x400aaf1	            0x85c0	                           test eax, eax	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x400aaf3	            0x744b	                            je 0x400ab40	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x400aaf5	          0x4c89f7	                            mov rdi, r14	      2697	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_4
0x400aaf8	      0xe800000000	                          call 0x400aafd	      2697	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_4
0x400aafd	            0x85ed	                           test ebp, ebp	      2515	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_12
0x400aaff	            0x789c	                            js 0x400aa9d	      2515	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_12
0x400ab01	     0xf1f80000000	                         nop dword [rax]	      2515	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_12
0x400ab08	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      2523	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_10
0x400ab0d	      0xbdfeffffff	                     mov ebp, 0xfffffffe	      2517	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	FOR_3	IF_8	IF_12
0x400ab12	      0xe800000000	                          call 0x400ab17	      2523	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_10
0x400ab17	        0x4183fc04	                             cmp r12d, 4	      2479	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2
0x400ab1b	            0x75a8	                           jne 0x400aac5	      2479	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2
0x400ab1d	          0x4c89ff	                            mov rdi, r15	      2535	buffer.c	FUNCTION_33	ELSE_2	CALL_11
0x400ab20	      0xe800000000	                          call 0x400ab25	      2535	buffer.c	FUNCTION_33	ELSE_2	CALL_11
0x400ab25	          0x83fdfe	             cmp ebp, 0xfffffffffffffffe	      2538	buffer.c	FUNCTION_33	IF_15
0x400ab28	     0xf85d3010000	                           jne 0x400ad01	      2538	buffer.c	FUNCTION_33	IF_15
0x400ab2e	      0xba05000000	                              mov edx, 5	      2539	buffer.c	FUNCTION_33	CALL_13
0x400ab33	      0xbe00000000	                              mov esi, 0	      2539	buffer.c	FUNCTION_33	CALL_13
0x400ab38	      0xe96c020000	                           jmp 0x400ada9	      2539	buffer.c	FUNCTION_33	CALL_13
0x400ab3d	           0xf1f00	                         nop dword [rax]	      2539	buffer.c	FUNCTION_33	CALL_13
0x400ab40	          0x4c89f7	                            mov rdi, r14	      2697	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_4
0x400ab43	      0xe800000000	                          call 0x400ab48	      2697	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_4
0x400ab48	    0x4d8bb5880000	            mov r14, qword [r13 + 0x88] 	      2667	buffer.c	FUNCTION_35	CALL_2
0x400ab4f	          0x4d85f6	                           test r14, r14	      2685	buffer.c	FUNCTION_36	IF_1
0x400ab52	     0xf84f8feffff	                            je 0x400aa50	      2685	buffer.c	FUNCTION_36	IF_1
0x400ab58	            0x31c0	                            xor eax, eax	      2688	buffer.c	FUNCTION_36	IF_1
0x400ab5a	    0x48833d000000	               cmp qword [0x0400ab62], 0	      2688	buffer.c	FUNCTION_36	IF_1
0x400ab62	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      2689	buffer.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x400ab67	          0x4c89f6	                            mov rsi, r14	      2689	buffer.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x400ab6a	           0xf95c0	                                setne al	      2688	buffer.c	FUNCTION_36	IF_1
0x400ab6d	            0x31d2	                            xor edx, edx	      2689	buffer.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x400ab6f	    0x898424e80000	             mov dword [rsp + 0xe8], eax	      2688	buffer.c	FUNCTION_36	IF_1
0x400ab76	      0xe800000000	                          call 0x400ab7b	      2689	buffer.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x400ab7b	            0x85c0	                           test eax, eax	      2689	buffer.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x400ab7d	     0xf8516ffffff	                           jne 0x400aa99	      2689	buffer.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x400ab83	          0x4c89f6	                            mov rsi, r14	      2694	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_2
0x400ab86	            0x31ff	                            xor edi, edi	      2694	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_2
0x400ab88	      0xe800000000	                          call 0x400ab8d	      2694	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_2
0x400ab8d	          0x4885c0	                           test rax, rax	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x400ab90	          0x4989c6	                            mov r14, rax	      2694	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_2
0x400ab93	            0x7417	                            je 0x400abac	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x400ab95	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x400ab9a	            0x31d2	                            xor edx, edx	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x400ab9c	          0x4889c6	                            mov rsi, rax	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x400ab9f	      0xe800000000	                          call 0x400aba4	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x400aba4	            0x85c0	                           test eax, eax	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x400aba6	     0xf8549ffffff	                           jne 0x400aaf5	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x400abac	          0x4c89f7	                            mov rdi, r14	      2697	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_4
0x400abaf	      0xe800000000	                          call 0x400abb4	      2697	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_4
0x400abb4	      0xe997feffff	                           jmp 0x400aa50	      2697	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_4
0x400abb9	     0xf1f80000000	                         nop dword [rax]	      2697	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_4
0x400abc0	          0x83e201	                              and edx, 1	      2487	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x400abc3	          0x83fa01	                              cmp edx, 1	      2488	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x400abc6	        0x4883d700	                              adc rdi, 0	      2488	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x400abca	      0xe949feffff	                           jmp 0x400aa18	      2488	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x400abcf	              0x90	                                     nop	      2488	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x400abd0	      0x837c241004	               cmp dword [rsp + 0x10], 4	      2488	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x400abd5	           0xf95c0	                                setne al	      2488	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x400abd8	          0x83f301	                              xor ebx, 1	      2488	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x400abdb	             0x9d8	                             or eax, ebx	      2488	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x400abdd	          0x83fdff	             cmp ebp, 0xffffffffffffffff	      2488	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x400abe0	           0xf95c2	                                setne dl	      2488	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_6
0x400abe3	            0x31db	                            xor ebx, ebx	      2532	buffer.c	FUNCTION_33	ELSE_2	FOR_1
0x400abe5	             0x8d0	                               or al, dl	      2530	buffer.c	FUNCTION_33	ELSE_2	FOR_1	IF_14
0x400abe7	     0xf84f3fdffff	                            je 0x400a9e0	      2530	buffer.c	FUNCTION_33	ELSE_2	FOR_1	IF_14
0x400abed	          0x4c89ff	                            mov rdi, r15	      2535	buffer.c	FUNCTION_33	ELSE_2	CALL_11
0x400abf0	      0xe800000000	                          call 0x400abf5	      2535	buffer.c	FUNCTION_33	ELSE_2	CALL_11
0x400abf5	      0xe92bffffff	                           jmp 0x400ab25	      2535	buffer.c	FUNCTION_33	ELSE_2	CALL_11
0x400abfa	    0x660f1f440000	                    nop word [rax + rax]	      2535	buffer.c	FUNCTION_33	ELSE_2	CALL_11
0x400ac00	        0x896c241c	             mov dword [rsp + 0x1c], ebp	      2535	buffer.c	FUNCTION_33	ELSE_2	CALL_11
0x400ac04	      0xe92efdffff	                           jmp 0x400a937	      2535	buffer.c	FUNCTION_33	ELSE_2	CALL_11
0x400ac09	      0x488d7c2438	                   lea rdi, [rsp + 0x38]	      1158	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	CALL_9
0x400ac0e	      0xe800000000	                          call 0x400ac13	      1158	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	CALL_9
0x400ac13	            0x89c5	                            mov ebp, eax	      1158	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	CALL_9
0x400ac15	      0xe800000000	                          call 0x400ac1a	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x400ac1a	    0x8b0500000000	            mov eax, dword [0x0400ac20] 	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x400ac20	            0x85c0	                           test eax, eax	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x400ac22	     0xf84e0fcffff	                            je 0x400a908	      1121	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	CALL_3
0x400ac28	        0x8b54241c	            mov edx, dword [rsp + 0x1c] 	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x400ac2c	    0x8b0500000000	            mov eax, dword [0x0400ac32] 	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x400ac32	            0x85d2	                           test edx, edx	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x400ac34	            0x7408	                            je 0x400ac3e	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x400ac36	            0x85c0	                           test eax, eax	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x400ac38	     0xf84da000000	                            je 0x400ad18	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x400ac3e	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	      1165	buffer.c	FUNCTION_17	ELSE_1	IF_12
0x400ac42	            0x85c9	                           test ecx, ecx	      1165	buffer.c	FUNCTION_17	ELSE_1	IF_12
0x400ac44	     0xf85ed000000	                           jne 0x400ad37	      1165	buffer.c	FUNCTION_17	ELSE_1	IF_12
0x400ac4a	      0x837c241002	               cmp dword [rsp + 0x10], 2	      1167	buffer.c	FUNCTION_17	ELSE_1	IF_12	IF_13
0x400ac4f	      0xba05000000	                              mov edx, 5	      1168	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_12
0x400ac54	      0xbe00000000	                              mov esi, 0	      1168	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_12
0x400ac59	            0x7411	                            je 0x400ac6c	      1167	buffer.c	FUNCTION_17	ELSE_1	IF_12	IF_13
0x400ac5b	      0x837c241003	               cmp dword [rsp + 0x10], 3	      1169	buffer.c	FUNCTION_17	ELSE_1	IF_12	ELSE_6	IF_14
0x400ac60	      0xbe00000000	                              mov esi, 0	      1170	buffer.c	FUNCTION_17	ELSE_1	IF_12	ELSE_6	IF_14
0x400ac65	            0x7405	                            je 0x400ac6c	      1169	buffer.c	FUNCTION_17	ELSE_1	IF_12	ELSE_6	IF_14
0x400ac67	      0xbe00000000	                              mov esi, 0	      1172	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_16
0x400ac6c	            0x31ff	                            xor edi, edi	      1172	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_16
0x400ac6e	      0xe800000000	                          call 0x400ac73	      1172	buffer.c	FUNCTION_17	ELSE_1	IF_12	CALL_16
0x400ac73	    0x488b3d000000	            mov rdi, qword [0x0400ac7a] 	       110	string3.h	FUNCTION_110	CALL_3
0x400ac7a	          0x4889c6	                            mov rsi, rax	       110	string3.h	FUNCTION_110	CALL_3
0x400ac7d	      0xe800000000	                          call 0x400ac82	       110	string3.h	FUNCTION_110	CALL_3
0x400ac82	    0x488b05000000	            mov rax, qword [0x0400ac89] 	      1173	buffer.c	FUNCTION_17	ELSE_1	IF_12
0x400ac89	    0x488b8c24f800	            mov rcx, qword [rsp + 0xf8] 	      1203	buffer.c	FUNCTION_17
0x400ac91	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1203	buffer.c	FUNCTION_17
0x400ac9a	     0xf8583010000	                           jne 0x400ae23	      1203	buffer.c	FUNCTION_17
0x400aca0	    0x4881c4080100	                          add rsp, 0x108	      1203	buffer.c	FUNCTION_17
0x400aca7	              0x5b	                                 pop rbx	      1203	buffer.c	FUNCTION_17
0x400aca8	              0x5d	                                 pop rbp	      1203	buffer.c	FUNCTION_17
0x400aca9	            0x415c	                                 pop r12	      1203	buffer.c	FUNCTION_17
0x400acab	            0x415d	                                 pop r13	      1203	buffer.c	FUNCTION_17
0x400acad	            0x415e	                                 pop r14	      1203	buffer.c	FUNCTION_17
0x400acaf	            0x415f	                                 pop r15	      1203	buffer.c	FUNCTION_17
0x400acb1	              0xc3	                                     ret	      1203	buffer.c	FUNCTION_17
0x400acb2	          0x4889c7	                            mov rdi, rax	      2523	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_10
0x400acb5	      0xe800000000	                          call 0x400acba	      2523	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_10
0x400acba	      0xe9fcfdffff	                           jmp 0x400aabb	      2523	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	CALL_10
0x400acbf	          0x4c89ff	                            mov rdi, r15	      2492	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_7	CALL_6
0x400acc2	      0xe800000000	                          call 0x400acc7	      2492	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_7	CALL_6
0x400acc7	      0xe95cffffff	                           jmp 0x400ac28	      2492	buffer.c	FUNCTION_33	ELSE_2	FOR_1	FOR_2	IF_7	CALL_6
0x400accc	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      2445	buffer.c	FUNCTION_33	IF_1
0x400acd1	           0xfb600	                   movzx eax, byte [rax]	      2445	buffer.c	FUNCTION_33	IF_1
0x400acd4	          0x8d50dd	                   lea edx, [rax - 0x23]	      2445	buffer.c	FUNCTION_33	IF_1
0x400acd7	    0x81e2fd000000	                           and edx, 0xfd	      2445	buffer.c	FUNCTION_33	IF_1
0x400acdd	     0xf85a8fcffff	                           jne 0x400a98b	      2445	buffer.c	FUNCTION_33	IF_1
0x400ace3	            0x3c25	                            cmp al, 0x25	      2447	buffer.c	FUNCTION_33	IF_1	IF_2
0x400ace5	     0xf84e3000000	                            je 0x400adce	      2447	buffer.c	FUNCTION_33	IF_1	IF_2
0x400aceb	    0x488b05000000	            mov rax, qword [0x0400acf2] 	      2450	buffer.c	FUNCTION_33	IF_1	ELSE_1
0x400acf2	    0x8ba878010000	           mov ebp, dword [rax + 0x178] 	      2450	buffer.c	FUNCTION_33	IF_1	ELSE_1
0x400acf8	          0x83fdfe	             cmp ebp, 0xfffffffffffffffe	      2538	buffer.c	FUNCTION_33	IF_15
0x400acfb	     0xf842dfeffff	                            je 0x400ab2e	      2538	buffer.c	FUNCTION_33	IF_15
0x400ad01	            0x85ed	                           test ebp, ebp	      2540	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x400ad03	     0xf8896000000	                            js 0x400ad9f	      2540	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x400ad09	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1155	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9
0x400ad0e	      0x4889442438	             mov qword [rsp + 0x38], rax	      1155	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9
0x400ad13	      0xe9ddfbffff	                           jmp 0x400a8f5	      1155	buffer.c	FUNCTION_17	ELSE_1	ELSE_2	FOR_1	ELSE_4	IF_9
0x400ad18	        0x8b542430	            mov edx, dword [rsp + 0x30] 	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x400ad1c	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x400ad20	        0x8b7c2410	            mov edi, dword [rsp + 0x10] 	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x400ad24	      0xe8d7f2ffff	         call sym.do_buffer.constprop.17	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x400ad29	          0x83f801	                              cmp eax, 1	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x400ad2c	     0xf850cffffff	                           jne 0x400ac3e	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x400ad32	      0x8344241401	               add dword [rsp + 0x14], 1	      1163	buffer.c	FUNCTION_17	ELSE_1	IF_11
0x400ad37	      0x4863442414	         movsxd rax, dword [rsp + 0x14] 	      1175	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15
0x400ad3c	    0x483b05000000	            cmp rax, qword [0x0400ad43] 	      1175	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15
0x400ad43	     0xf8cd3000000	                            jl 0x400ae1c	      1175	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15
0x400ad49	      0x837c241002	               cmp dword [rsp + 0x10], 2	      1177	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16
0x400ad4e	      0xba05000000	                              mov edx, 5	      1180	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_18
0x400ad53	            0x7437	                            je 0x400ad8c	      1177	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16
0x400ad55	      0x837c241003	               cmp dword [rsp + 0x10], 3	      1184	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18
0x400ad5a	     0xf8480000000	                            je 0x400ade0	      1184	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18
0x400ad60	      0x837c241401	               cmp dword [rsp + 0x14], 1	      1193	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	IF_20
0x400ad65	      0xbe00000000	                              mov esi, 0	      1196	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_28
0x400ad6a	     0xf8486000000	                            je 0x400adf6	      1193	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	IF_20
0x400ad70	            0x31ff	                            xor edi, edi	      1189	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_24
0x400ad72	      0xe800000000	                          call 0x400ad77	      1189	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_24
0x400ad77	        0x8b742414	            mov esi, dword [rsp + 0x14] 	      1189	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_24
0x400ad7b	          0x4889c7	                            mov rdi, rax	      1189	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_24
0x400ad7e	            0x31c0	                            xor eax, eax	      1189	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_24
0x400ad80	      0xe800000000	                          call 0x400ad85	      1189	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_24
0x400ad85	            0x31c0	                            xor eax, eax	      1102	buffer.c	FUNCTION_17
0x400ad87	      0xe9fdfeffff	                           jmp 0x400ac89	      1102	buffer.c	FUNCTION_17
0x400ad8c	      0x837c241401	               cmp dword [rsp + 0x14], 1	      1179	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	IF_17
0x400ad91	      0xbe00000000	                              mov esi, 0	      1180	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_18
0x400ad96	            0x7463	                            je 0x400adfb	      1179	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	IF_17
0x400ad98	      0xbe00000000	                              mov esi, 0	      1182	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_20
0x400ad9d	            0xebd1	                           jmp 0x400ad70	      1182	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	IF_16	CALL_20
0x400ad9f	      0xba05000000	                              mov edx, 5	      2541	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x400ada4	      0xbe00000000	                              mov esi, 0	      2541	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x400ada9	            0x31ff	                            xor edi, edi	      2541	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x400adab	      0xe800000000	                          call 0x400adb0	      2541	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x400adb0	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      2541	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x400adb5	          0x4889c7	                            mov rdi, rax	      2541	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x400adb8	      0xe800000000	                          call 0x400adbd	      2541	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x400adbd	      0xe966feffff	                           jmp 0x400ac28	      2541	buffer.c	FUNCTION_33	ELSE_3	IF_16
0x400adc2	          0x803e00	                       cmp byte [rsi], 0	      1114	buffer.c	FUNCTION_17	ELSE_1	IF_2	IF_3
0x400adc5	            0x7579	                           jne 0x400ae40	      1114	buffer.c	FUNCTION_17	ELSE_1	IF_2	IF_3
0x400adc7	            0x89cd	                            mov ebp, ecx	      1116	buffer.c	FUNCTION_17	ELSE_1	IF_2
0x400adc9	      0xe9f5faffff	                           jmp 0x400a8c3	      1116	buffer.c	FUNCTION_17	ELSE_1	IF_2
0x400adce	    0x488b05000000	            mov rax, qword [0x0400add5] 	      2448	buffer.c	FUNCTION_33	IF_1	IF_2
0x400add5	    0x8ba8b8000000	            mov ebp, dword [rax + 0xb8] 	      2448	buffer.c	FUNCTION_33	IF_1	IF_2
0x400addb	      0xe918ffffff	                           jmp 0x400acf8	      2448	buffer.c	FUNCTION_33	IF_1	IF_2
0x400ade0	      0x837c241401	               cmp dword [rsp + 0x14], 1	      1186	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	IF_19
0x400ade5	      0xbe00000000	                              mov esi, 0	      1187	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_22
0x400adea	            0x740f	                            je 0x400adfb	      1186	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	IF_19
0x400adec	      0xbe00000000	                              mov esi, 0	      1189	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_24
0x400adf1	      0xe97affffff	                           jmp 0x400ad70	      1189	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_10	IF_18	CALL_24
0x400adf6	      0xbe00000000	                              mov esi, 0	      1194	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_26
0x400adfb	            0x31ff	                            xor edi, edi	      1194	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_26
0x400adfd	      0xe800000000	                          call 0x400ae02	      1194	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_26
0x400ae02	          0x4889c7	                            mov rdi, rax	      1194	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_26
0x400ae05	      0xe800000000	                          call 0x400ae0a	      1194	buffer.c	FUNCTION_17	ELSE_1	ELSE_8	IF_15	ELSE_12	CALL_26
0x400ae0a	            0x31c0	                            xor eax, eax	      1102	buffer.c	FUNCTION_17
0x400ae0c	      0xe978feffff	                           jmp 0x400ac89	      1102	buffer.c	FUNCTION_17
0x400ae11	    0x8b0500000000	            mov eax, dword [0x0400ae17] 	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x400ae17	      0xe92efeffff	                           jmp 0x400ac4a	      1161	buffer.c	FUNCTION_17	ELSE_1	IF_11	CALL_10
0x400ae1c	            0x31c0	                            xor eax, eax	      1102	buffer.c	FUNCTION_17
0x400ae1e	      0xe966feffff	                           jmp 0x400ac89	      1102	buffer.c	FUNCTION_17
0x400ae23	      0xe800000000	                          call 0x400ae28	      1203	buffer.c	FUNCTION_17
0x400ae28	          0x4589c8	                            mov r8d, r9d	      1108	buffer.c	FUNCTION_17	IF_1	CALL_1
0x400ae2b	            0x31c9	                            xor ecx, ecx	      1108	buffer.c	FUNCTION_17	IF_1	CALL_1
0x400ae2d	      0xba01000000	                              mov edx, 1	      1108	buffer.c	FUNCTION_17	IF_1	CALL_1
0x400ae32	            0x31f6	                            xor esi, esi	      1108	buffer.c	FUNCTION_17	IF_1	CALL_1
0x400ae34	      0xe800000000	                          call 0x400ae39	      1108	buffer.c	FUNCTION_17	IF_1	CALL_1
0x400ae39	            0x31c0	                            xor eax, eax	      1102	buffer.c	FUNCTION_17
0x400ae3b	      0xe949feffff	                           jmp 0x400ac89	      1102	buffer.c	FUNCTION_17
0x400ae40	      0xba05000000	                              mov edx, 5	      1115	buffer.c	FUNCTION_17	ELSE_1	IF_2	CALL_2
0x400ae45	      0xbe00000000	                              mov esi, 0	      1115	buffer.c	FUNCTION_17	ELSE_1	IF_2	CALL_2
0x400ae4a	            0x31ff	                            xor edi, edi	      1115	buffer.c	FUNCTION_17	ELSE_1	IF_2	CALL_2
0x400ae4c	      0xe800000000	                          call 0x400ae51	      1115	buffer.c	FUNCTION_17	ELSE_1	IF_2	CALL_2
0x400ae51	      0xe933feffff	                           jmp 0x400ac89	      1115	buffer.c	FUNCTION_17	ELSE_1	IF_2	CALL_2
enter_buffer	FOR,0:WHILE,0:DO,0:ELSE,2:functions,0:CALL,19:SWITCH,0:IF,9	181
0x4008630	              0x53	                                push rbx	      1701	buffer.c	FUNCTION_21
0x4008631	      0xbe05000000	                              mov esi, 5	      1703	buffer.c	FUNCTION_21	CALL_1
0x4008636	          0x4889fb	                            mov rbx, rdi	      1701	buffer.c	FUNCTION_21
0x4008639	      0xe800000000	                          call 0x400863e	      1703	buffer.c	FUNCTION_21	CALL_1
0x400863e	    0x448b9b581700	         mov r11d, dword [rbx + 0x1758] 	      1704	buffer.c	FUNCTION_21	IF_1
0x4008645	          0x4585db	                         test r11d, r11d	      1704	buffer.c	FUNCTION_21	IF_1
0x4008648	     0xf8582010000	                           jne 0x40087d0	      1704	buffer.c	FUNCTION_21	IF_1
0x400864e	          0x4889df	                            mov rdi, rbx	      1705	buffer.c	FUNCTION_21	CALL_2
0x4008651	      0xe800000000	                          call 0x4008656	      1705	buffer.c	FUNCTION_21	CALL_2
0x4008656	    0x488b3d000000	            mov rdi, qword [0x0400865d] 	      1710	buffer.c	FUNCTION_21	CALL_4
0x400865d	      0xe800000000	                          call 0x4008662	      1710	buffer.c	FUNCTION_21	CALL_4
0x4008662	    0x488b05000000	            mov rax, qword [0x04008669] 	      1714	buffer.c	FUNCTION_21
0x4008669	    0x48891d000000	            mov qword [0x04008670], rbx 	      1715	buffer.c	FUNCTION_21
0x4008670	          0x4889df	                            mov rdi, rbx	      1715	buffer.c	FUNCTION_21
0x4008673	    0x448b90c00100	          mov r10d, dword [rax + 0x1c0] 	      1719	buffer.c	FUNCTION_21	IF_2
0x400867a	        0x48895808	                mov qword [rax + 8], rbx	      1714	buffer.c	FUNCTION_21
0x400867e	        0x83437801	               add dword [rbx + 0x78], 1	      1716	buffer.c	FUNCTION_21
0x4008682	          0x4585d2	                         test r10d, r10d	      1719	buffer.c	FUNCTION_21	IF_2
0x4008685	     0xf8575010000	                           jne 0x4008800	      1719	buffer.c	FUNCTION_21	IF_2
0x400868b	    0xc68080000000	                mov byte [rax + 0x80], 0	      1734	buffer.c	FUNCTION_21
0x4008692	    0x488d97681700	                 lea rdx, [rdi + 0x1768]	      1724	buffer.c	FUNCTION_21
0x4008699	      0x48837f0800	                  cmp qword [rdi + 8], 0	      1740	buffer.c	FUNCTION_21	IF_3
0x400869e	    0x48c740380100	               mov qword [rax + 0x38], 1	      1728	buffer.c	FUNCTION_21
0x40086a6	        0x48895010	             mov qword [rax + 0x10], rdx	      1724	buffer.c	FUNCTION_21
0x40086aa	    0xc74040000000	               mov dword [rax + 0x40], 0	      1729	buffer.c	FUNCTION_21
0x40086b1	    0xc74044000000	               mov dword [rax + 0x44], 0	      1731	buffer.c	FUNCTION_21
0x40086b8	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      1733	buffer.c	FUNCTION_21
0x40086bf	    0xc780b4000000	               mov dword [rax + 0xb4], 0	      1737	buffer.c	FUNCTION_21
0x40086c9	     0xf84f9010000	                            je 0x40088c8	      1740	buffer.c	FUNCTION_21	IF_3
0x40086cf	    0x448b0d000000	            mov r9d, dword [0x040086d6] 	      1752	buffer.c	FUNCTION_21	ELSE_2	IF_5
0x40086d6	          0x4585c9	                           test r9d, r9d	      1752	buffer.c	FUNCTION_21	ELSE_2	IF_5
0x40086d9	     0xf8409010000	                            je 0x40087e8	      1752	buffer.c	FUNCTION_21	ELSE_2	IF_5
0x40086df	            0x31f6	                            xor esi, esi	      1754	buffer.c	FUNCTION_21	ELSE_2	CALL_7
0x40086e1	      0xe800000000	                          call 0x40086e6	      1754	buffer.c	FUNCTION_21	ELSE_2	CALL_7
0x40086e6	    0x488b05000000	            mov rax, qword [0x040086ed] 	      1755	buffer.c	FUNCTION_21	ELSE_2
0x40086ed	    0x4c8b05000000	              mov r8, qword [0x040086f4]	      1759	buffer.c	FUNCTION_21	ELSE_2	CALL_8
0x40086f4	            0x31c9	                            xor ecx, ecx	      1759	buffer.c	FUNCTION_21	ELSE_2	CALL_8
0x40086f6	            0x31d2	                            xor edx, edx	      1759	buffer.c	FUNCTION_21	ELSE_2	CALL_8
0x40086f8	            0x31f6	                            xor esi, esi	      1759	buffer.c	FUNCTION_21	ELSE_2	CALL_8
0x40086fa	      0xbf02000000	                              mov edi, 2	      1759	buffer.c	FUNCTION_21	ELSE_2	CALL_8
0x40086ff	    0x48c740780100	               mov qword [rax + 0x78], 1	      1755	buffer.c	FUNCTION_21	ELSE_2
0x4008707	    0xc78084000000	               mov dword [rax + 0x84], 0	      1757	buffer.c	FUNCTION_21	ELSE_2
0x4008711	      0xe800000000	                          call 0x4008716	      1759	buffer.c	FUNCTION_21	ELSE_2	CALL_8
0x4008716	    0x4c8b05000000	              mov r8, qword [0x0400871d]	      1760	buffer.c	FUNCTION_21	ELSE_2	CALL_9
0x400871d	            0x31c9	                            xor ecx, ecx	      1760	buffer.c	FUNCTION_21	ELSE_2	CALL_9
0x400871f	            0x31d2	                            xor edx, edx	      1760	buffer.c	FUNCTION_21	ELSE_2	CALL_9
0x4008721	            0x31f6	                            xor esi, esi	      1760	buffer.c	FUNCTION_21	ELSE_2	CALL_9
0x4008723	      0xbf0d000000	                            mov edi, 0xd	      1760	buffer.c	FUNCTION_21	ELSE_2	CALL_9
0x4008728	      0xe800000000	                          call 0x400872d	      1760	buffer.c	FUNCTION_21	ELSE_2	CALL_9
0x400872d	    0x488b3d000000	            mov rdi, qword [0x04008734] 	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x4008734	      0x48837f3801	               cmp qword [rdi + 0x38], 1	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x4008739	     0xf84c1010000	                            je 0x4008900	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x400873f	      0xe800000000	                          call 0x4008744	      1768	buffer.c	FUNCTION_21	CALL_12
0x4008744	      0xe800000000	                          call 0x4008749	      1770	buffer.c	FUNCTION_21	CALL_13
0x4008749	    0x488b05000000	            mov rax, qword [0x04008750] 	      1773	buffer.c	FUNCTION_21	IF_7
0x4008750	      0x4883787801	               cmp qword [rax + 0x78], 1	      1773	buffer.c	FUNCTION_21	IF_7
0x4008755	     0xf8425010000	                            je 0x4008880	      1773	buffer.c	FUNCTION_21	IF_7
0x400875b	    0x488b3d000000	            mov rdi, qword [0x04008762] 	      1778	buffer.c	FUNCTION_21	CALL_15
0x4008762	      0xe800000000	                          call 0x4008767	      1778	buffer.c	FUNCTION_21	CALL_15
0x4008767	    0x8b3d00000000	            mov edi, dword [0x0400876d] 	      1782	buffer.c	FUNCTION_21
0x400876d	            0x85ff	                           test edi, edi	      1782	buffer.c	FUNCTION_21
0x400876f	     0xf85c3000000	                           jne 0x4008838	      1782	buffer.c	FUNCTION_21
0x4008775	    0x488b1d000000	            mov rbx, qword [0x0400877c] 	      1782	buffer.c	FUNCTION_21
0x400877c	    0xf68388120000	            test byte [rbx + 0x1288], 1 	      1785	buffer.c	FUNCTION_21	IF_8
0x4008783	     0xf8597000000	                           jne 0x4008820	      1785	buffer.c	FUNCTION_21	IF_8
0x4008789	    0x8b9358170000	          mov edx, dword [rbx + 0x1758] 	      1791	buffer.c	FUNCTION_21	IF_9
0x400878f	            0x85d2	                           test edx, edx	      1791	buffer.c	FUNCTION_21	IF_9
0x4008791	            0x7525	                           jne 0x40087b8	      1791	buffer.c	FUNCTION_21	IF_9
0x4008793	    0x488b3d000000	            mov rdi, qword [0x0400879a] 	      1791	buffer.c	FUNCTION_21	IF_9
0x400879a	    0x8b8768020000	           mov eax, dword [rdi + 0x268] 	      1791	buffer.c	FUNCTION_21	IF_9
0x40087a0	            0x85c0	                           test eax, eax	      1791	buffer.c	FUNCTION_21	IF_9
0x40087a2	            0x7414	                            je 0x40087b8	      1791	buffer.c	FUNCTION_21	IF_9
0x40087a4	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      1791	buffer.c	FUNCTION_21	IF_9
0x40087a8	    0x488b80800400	           mov rax, qword [rax + 0x480] 	      1791	buffer.c	FUNCTION_21	IF_9
0x40087af	          0x803800	                       cmp byte [rax], 0	      1791	buffer.c	FUNCTION_21	IF_9
0x40087b2	     0xf85f8000000	                           jne 0x40088b0	      1791	buffer.c	FUNCTION_21	IF_9
0x40087b8	      0xe800000000	                          call 0x40087bd	      1795	buffer.c	FUNCTION_21	CALL_18
0x40087bd	    0x488983500100	            mov qword [rbx + 0x150], rax	      1795	buffer.c	FUNCTION_21	CALL_18
0x40087c4	      0xbf28000000	                           mov edi, 0x28	      1798	buffer.c	FUNCTION_21	CALL_19
0x40087c9	              0x5b	                                 pop rbx	      1799	buffer.c	FUNCTION_21
0x40087ca	      0xe900000000	                           jmp 0x40087cf	      1798	buffer.c	FUNCTION_21	CALL_19
0x40087cf	              0x90	                                     nop	      1798	buffer.c	FUNCTION_21	CALL_19
0x40087d0	    0x488b3d000000	            mov rdi, qword [0x040087d7] 	      1709	buffer.c	FUNCTION_21	CALL_3
0x40087d7	      0xe800000000	                          call 0x40087dc	      1709	buffer.c	FUNCTION_21	CALL_3
0x40087dc	      0xe975feffff	                           jmp 0x4008656	      1709	buffer.c	FUNCTION_21	CALL_3
0x40087e1	     0xf1f80000000	                         nop dword [rax]	      1709	buffer.c	FUNCTION_21	CALL_3
0x40087e8	    0xc70500000000	               mov dword [0x040087f2], 1	      1753	buffer.c	FUNCTION_21	ELSE_2	IF_5
0x40087f2	      0xe9e8feffff	                           jmp 0x40086df	      1753	buffer.c	FUNCTION_21	ELSE_2	IF_5
0x40087f7	    0x660f1f840000	                    nop word [rax + rax]	      1753	buffer.c	FUNCTION_21	ELSE_2	IF_5
0x4008800	      0xe800000000	                          call 0x4008805	      1720	buffer.c	FUNCTION_21	CALL_5
0x4008805	    0x488b05000000	            mov rax, qword [0x0400880c] 	      1720	buffer.c	FUNCTION_21	CALL_5
0x400880c	    0x488b3d000000	            mov rdi, qword [0x04008813] 	      1720	buffer.c	FUNCTION_21	CALL_5
0x4008813	      0xe973feffff	                           jmp 0x400868b	      1720	buffer.c	FUNCTION_21	CALL_5
0x4008818	     0xf1f84000000	                   nop dword [rax + rax]	      1720	buffer.c	FUNCTION_21	CALL_5
0x4008820	      0xe800000000	                          call 0x4008825	      1786	buffer.c	FUNCTION_21	CALL_16
0x4008825	    0x488b1d000000	            mov rbx, qword [0x0400882c] 	      1786	buffer.c	FUNCTION_21	CALL_16
0x400882c	      0xe958ffffff	                           jmp 0x4008789	      1786	buffer.c	FUNCTION_21	CALL_16
0x4008831	     0xf1f80000000	                         nop dword [rax]	      1786	buffer.c	FUNCTION_21	CALL_16
0x4008838	    0x8b3500000000	            mov esi, dword [0x0400883e] 	      1809	buffer.c	FUNCTION_22	IF_1
0x400883e	            0x85f6	                           test esi, esi	      1809	buffer.c	FUNCTION_22	IF_1
0x4008840	            0x755e	                           jne 0x40088a0	      1809	buffer.c	FUNCTION_22	IF_1
0x4008842	    0x488b1d000000	            mov rbx, qword [0x04008849] 	      1810	buffer.c	FUNCTION_22	IF_1
0x4008849	    0x488bbb880000	            mov rdi, qword [rbx + 0x88] 	      1810	buffer.c	FUNCTION_22	IF_1
0x4008850	          0x4885ff	                           test rdi, rdi	      1810	buffer.c	FUNCTION_22	IF_1
0x4008853	     0xf8423ffffff	                            je 0x400877c	      1810	buffer.c	FUNCTION_22	IF_1
0x4008859	      0xbe00000000	                              mov esi, 0	      1811	buffer.c	FUNCTION_22	IF_1	CALL_1
0x400885e	      0xe800000000	                          call 0x4008863	      1811	buffer.c	FUNCTION_22	IF_1	CALL_1
0x4008863	          0x83f801	                              cmp eax, 1	      1811	buffer.c	FUNCTION_22	IF_1	CALL_1
0x4008866	     0xf8509ffffff	                           jne 0x4008775	      1811	buffer.c	FUNCTION_22	IF_1	CALL_1
0x400886c	      0xbf01000000	                              mov edi, 1	      1812	buffer.c	FUNCTION_22	CALL_2
0x4008871	      0xe800000000	                          call 0x4008876	      1812	buffer.c	FUNCTION_22	CALL_2
0x4008876	      0xe9fafeffff	                           jmp 0x4008775	      1812	buffer.c	FUNCTION_22	CALL_2
0x400887b	       0xf1f440000	                   nop dword [rax + rax]	      1812	buffer.c	FUNCTION_22	CALL_2
0x4008880	    0x80b880000000	                cmp byte [rax + 0x80], 0	      1773	buffer.c	FUNCTION_21	IF_7
0x4008887	     0xf85cefeffff	                           jne 0x400875b	      1773	buffer.c	FUNCTION_21	IF_7
0x400888d	            0x31ff	                            xor edi, edi	      1774	buffer.c	FUNCTION_21	CALL_14
0x400888f	      0xe800000000	                          call 0x4008894	      1774	buffer.c	FUNCTION_21	CALL_14
0x4008894	      0xe9c2feffff	                           jmp 0x400875b	      1774	buffer.c	FUNCTION_21	CALL_14
0x4008899	     0xf1f80000000	                         nop dword [rax]	      1774	buffer.c	FUNCTION_21	CALL_14
0x40088a0	    0x8b0d00000000	            mov ecx, dword [0x040088a6] 	      1809	buffer.c	FUNCTION_22	IF_1
0x40088a6	            0x85c9	                           test ecx, ecx	      1809	buffer.c	FUNCTION_22	IF_1
0x40088a8	            0x7598	                           jne 0x4008842	      1809	buffer.c	FUNCTION_22	IF_1
0x40088aa	      0xe9c6feffff	                           jmp 0x4008775	      1809	buffer.c	FUNCTION_22	IF_1
0x40088af	              0x90	                                     nop	      1809	buffer.c	FUNCTION_22	IF_1
0x40088b0	      0xe800000000	                          call 0x40088b5	      1792	buffer.c	FUNCTION_21	CALL_17
0x40088b5	    0x488b1d000000	            mov rbx, qword [0x040088bc] 	      1792	buffer.c	FUNCTION_21	CALL_17
0x40088bc	      0xe9f7feffff	                           jmp 0x40087b8	      1792	buffer.c	FUNCTION_21	CALL_17
0x40088c1	     0xf1f80000000	                         nop dword [rax]	      1792	buffer.c	FUNCTION_21	CALL_17
0x40088c8	    0x488b87981400	          mov rax, qword [rdi + 0x1498] 	      1745	buffer.c	FUNCTION_21	IF_3	IF_4
0x40088cf	          0x803800	                       cmp byte [rax], 0	      1745	buffer.c	FUNCTION_21	IF_3	IF_4
0x40088d2	            0x750a	                           jne 0x40088de	      1745	buffer.c	FUNCTION_21	IF_3	IF_4
0x40088d4	    0xc70500000000	               mov dword [0x040088de], 0	      1746	buffer.c	FUNCTION_21	IF_3	IF_4
0x40088de	            0x31ff	                            xor edi, edi	      1748	buffer.c	FUNCTION_21	IF_3	CALL_6
0x40088e0	            0x31d2	                            xor edx, edx	      1748	buffer.c	FUNCTION_21	IF_3	CALL_6
0x40088e2	            0x31f6	                            xor esi, esi	      1748	buffer.c	FUNCTION_21	IF_3	CALL_6
0x40088e4	      0xe800000000	                          call 0x40088e9	      1748	buffer.c	FUNCTION_21	IF_3	CALL_6
0x40088e9	    0x488b3d000000	            mov rdi, qword [0x040088f0] 	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x40088f0	      0x48837f3801	               cmp qword [rdi + 0x38], 1	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x40088f5	     0xf8544feffff	                           jne 0x400873f	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x40088fb	       0xf1f440000	                   nop dword [rax + rax]	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x4008900	            0x31ff	                            xor edi, edi	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x4008902	      0xe800000000	                          call 0x4008907	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x4008907	            0x85c0	                           test eax, eax	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x4008909	    0x488b3d000000	            mov rdi, qword [0x04008910] 	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x4008910	     0xf8429feffff	                            je 0x400873f	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x4008916	    0x488b05000000	            mov rax, qword [0x0400891d] 	      1765	buffer.c	FUNCTION_21	IF_6	CALL_10
0x400891d	    0x488b15000000	            mov rdx, qword [0x04008924] 	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x4008924	      0xbb00000000	                              mov ebx, 0	      2935	buffer.c	FUNCTION_43	ELSE_1
0x4008929	    0x488b88280100	           mov rcx, qword [rax + 0x128] 	      2935	buffer.c	FUNCTION_43	ELSE_1
0x4008930	          0x4885c9	                           test rcx, rcx	      2855	buffer.c	FUNCTION_41	FOR_1
0x4008933	            0x741d	                            je 0x4008952	      2855	buffer.c	FUNCTION_41	FOR_1
0x4008935	        0x48395110	            cmp qword [rcx + 0x10], rdx 	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x4008939	          0x4889c8	                            mov rax, rcx	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x400893c	            0x7410	                            je 0x400894e	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x400893e	            0x6690	                                     nop	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x4008940	          0x488b00	                    mov rax, qword [rax]	      2855	buffer.c	FUNCTION_41	FOR_1
0x4008943	          0x4885c0	                           test rax, rax	      2855	buffer.c	FUNCTION_41	FOR_1
0x4008946	            0x7464	                            je 0x40089ac	      2855	buffer.c	FUNCTION_41	FOR_1
0x4008948	        0x48395010	            cmp qword [rax + 0x10], rdx 	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x400894c	            0x75f2	                           jne 0x4008940	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x400894e	        0x488d5818	                   lea rbx, [rax + 0x18]	      2933	buffer.c	FUNCTION_43	IF_1
0x4008952	          0x488b03	                    mov rax, qword [rbx]	      2338	buffer.c	FUNCTION_29
0x4008955	        0x48894238	             mov qword [rdx + 0x38], rax	      2338	buffer.c	FUNCTION_29
0x4008959	      0xe800000000	                          call 0x400895e	      2339	buffer.c	FUNCTION_29	CALL_2
0x400895e	    0x448b05000000	            mov r8d, dword [0x04008965] 	      2341	buffer.c	FUNCTION_29	IF_1
0x4008965	          0x4585c0	                           test r8d, r8d	      2341	buffer.c	FUNCTION_29	IF_1
0x4008968	            0x7416	                            je 0x4008980	      2341	buffer.c	FUNCTION_29	IF_1
0x400896a	    0x488b3d000000	            mov rdi, qword [0x04008971] 	      2342	buffer.c	FUNCTION_29	IF_1
0x4008971	    0xc74740000000	               mov dword [rdi + 0x40], 0	      2342	buffer.c	FUNCTION_29	IF_1
0x4008978	      0xe9c2fdffff	                           jmp 0x400873f	      2342	buffer.c	FUNCTION_29	IF_1
0x400897d	           0xf1f00	                         nop dword [rax]	      2342	buffer.c	FUNCTION_29	IF_1
0x4008980	          0x8b5308	                mov edx, dword [rbx + 8]	      2345	buffer.c	FUNCTION_29	ELSE_1
0x4008983	    0x488b05000000	            mov rax, qword [0x0400898a] 	      2345	buffer.c	FUNCTION_29	ELSE_1
0x400898a	          0x895040	             mov dword [rax + 0x40], edx	      2345	buffer.c	FUNCTION_29	ELSE_1
0x400898d	      0xe800000000	                          call 0x4008992	      2346	buffer.c	FUNCTION_29	ELSE_1	CALL_3
0x4008992	    0x488b3d000000	            mov rdi, qword [0x04008999] 	      2348	buffer.c	FUNCTION_29	ELSE_1
0x4008999	    0xc74744000000	               mov dword [rdi + 0x44], 0	      2348	buffer.c	FUNCTION_29	ELSE_1
0x40089a0	    0xc7474c010000	               mov dword [rdi + 0x4c], 1	      2350	buffer.c	FUNCTION_29	ELSE_1
0x40089a7	      0xe993fdffff	                           jmp 0x400873f	      2350	buffer.c	FUNCTION_29	ELSE_1
0x40089ac	          0x4889c8	                            mov rax, rcx	      2855	buffer.c	FUNCTION_41	FOR_1
0x40089af	            0xeb9d	                           jmp 0x400894e	      2855	buffer.c	FUNCTION_41	FOR_1
buflist_nr2name	FOR,0:WHILE,0:DO,0:ELSE,0:functions,0:CALL,2:SWITCH,0:IF,1	51
0x4003060	              0x55	                                push rbp	      2735	buffer.c	FUNCTION_38
0x4003061	              0x53	                                push rbx	      2735	buffer.c	FUNCTION_38
0x4003062	            0x89f5	                            mov ebp, esi	      2735	buffer.c	FUNCTION_38
0x4003064	            0x89d3	                            mov ebx, edx	      2735	buffer.c	FUNCTION_38
0x4003066	          0x4189f8	                            mov r8d, edi	      2735	buffer.c	FUNCTION_38
0x4003069	        0x4883ec28	                           sub rsp, 0x28	      2735	buffer.c	FUNCTION_38
0x400306d	    0x64488b042528	                mov rax, qword fs:[0x28]	      2735	buffer.c	FUNCTION_38
0x4003076	      0x4889442418	             mov qword [rsp + 0x18], rax	      2735	buffer.c	FUNCTION_38
0x400307b	            0x31c0	                            xor eax, eax	      2735	buffer.c	FUNCTION_38
0x400307d	            0x85ff	                           test edi, edi	      2713	buffer.c	FUNCTION_37	IF_1
0x400307f	            0x750e	                           jne 0x400308f	      2713	buffer.c	FUNCTION_37	IF_1
0x4003081	    0x488b05000000	            mov rax, qword [0x04003088] 	      2714	buffer.c	FUNCTION_37	IF_1
0x4003088	    0x448b80780100	           mov r8d, dword [rax + 0x178] 	      2714	buffer.c	FUNCTION_37	IF_1
0x400308f	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_116	CALL_1
0x4003094	      0xba09000000	                              mov edx, 9	        33	stdio2.h	FUNCTION_116	CALL_1
0x4003099	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_116	CALL_1
0x400309e	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_116	CALL_1
0x40030a1	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_116	CALL_1
0x40030a3	      0xe800000000	                          call 0x40030a8	        33	stdio2.h	FUNCTION_116	CALL_1
0x40030a8	          0x4889e6	                            mov rsi, rsp	      2716	buffer.c	FUNCTION_37	CALL_1
0x40030ab	      0xbf00000000	                              mov edi, 0	      2716	buffer.c	FUNCTION_37	CALL_1
0x40030b0	      0xe800000000	                          call 0x40030b5	      2716	buffer.c	FUNCTION_37	CALL_1
0x40030b5	        0x488b4008	                mov rax, qword [rax + 8]	      2718	buffer.c	FUNCTION_37	IF_2	CALL_2
0x40030b9	    0x483d00000000	                              cmp rax, 0	      2718	buffer.c	FUNCTION_37	IF_2	CALL_2
0x40030bf	            0x744f	                            je 0x4003110	      2718	buffer.c	FUNCTION_37	IF_2	CALL_2
0x40030c1	          0x4885c0	                           test rax, rax	      2718	buffer.c	FUNCTION_37	IF_2	CALL_2
0x40030c4	            0x744a	                            je 0x4003110	      2718	buffer.c	FUNCTION_37	IF_2	CALL_2
0x40030c6	          0x4889c7	                            mov rdi, rax	      2739	buffer.c	FUNCTION_38	IF_1
0x40030c9	    0x4881efbc0000	                           sub rdi, 0xbc	      2739	buffer.c	FUNCTION_38	IF_1
0x40030d0	            0x743e	                            je 0x4003110	      2739	buffer.c	FUNCTION_38	IF_1
0x40030d2	            0x85ed	                           test ebp, ebp	      2741	buffer.c	FUNCTION_38	CALL_2
0x40030d4	            0x7532	                           jne 0x4003108	      2741	buffer.c	FUNCTION_38	CALL_2
0x40030d6	        0x488b70dc	             mov rsi, qword [rax - 0x24]	      2741	buffer.c	FUNCTION_38	CALL_2
0x40030da	            0x85db	                           test ebx, ebx	      2741	buffer.c	FUNCTION_38	CALL_2
0x40030dc	      0xb800000000	                              mov eax, 0	      2741	buffer.c	FUNCTION_38	CALL_2
0x40030e1	        0x480f44f8	                          cmove rdi, rax	      2741	buffer.c	FUNCTION_38	CALL_2
0x40030e5	      0xe800000000	                          call 0x40030ea	      2741	buffer.c	FUNCTION_38	CALL_2
0x40030ea	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2743	buffer.c	FUNCTION_38
0x40030ef	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2743	buffer.c	FUNCTION_38
0x40030f8	            0x751a	                           jne 0x4003114	      2743	buffer.c	FUNCTION_38
0x40030fa	        0x4883c428	                           add rsp, 0x28	      2743	buffer.c	FUNCTION_38
0x40030fe	              0x5b	                                 pop rbx	      2743	buffer.c	FUNCTION_38
0x40030ff	              0x5d	                                 pop rbp	      2743	buffer.c	FUNCTION_38
0x4003100	              0xc3	                                     ret	      2743	buffer.c	FUNCTION_38
0x4003101	     0xf1f80000000	                         nop dword [rax]	      2743	buffer.c	FUNCTION_38
0x4003108	        0x488b70cc	             mov rsi, qword [rax - 0x34]	      2741	buffer.c	FUNCTION_38	CALL_2
0x400310c	            0xebcc	                           jmp 0x40030da	      2741	buffer.c	FUNCTION_38	CALL_2
0x400310e	            0x6690	                                     nop	      2741	buffer.c	FUNCTION_38	CALL_2
0x4003110	            0x31c0	                            xor eax, eax	      2740	buffer.c	FUNCTION_38	IF_1
0x4003112	            0xebd6	                           jmp 0x40030ea	      2740	buffer.c	FUNCTION_38	IF_1
0x4003114	      0xe800000000	                          call 0x4003119	      2743	buffer.c	FUNCTION_38
goto_buffer	FOR,0:WHILE,0:DO,0:ELSE,1:functions,0:CALL,6:SWITCH,0:IF,1	178
0x400b800	            0x4156	                                push r14	       965	buffer.c	FUNCTION_15
0x400b802	            0x4155	                                push r13	       965	buffer.c	FUNCTION_15
0x400b804	            0x4154	                                push r12	       965	buffer.c	FUNCTION_15
0x400b806	              0x55	                                push rbp	       965	buffer.c	FUNCTION_15
0x400b807	          0x4889fd	                            mov rbp, rdi	       965	buffer.c	FUNCTION_15
0x400b80a	              0x53	                                push rbx	       965	buffer.c	FUNCTION_15
0x400b80b	        0x4883ec20	                           sub rsp, 0x20	       965	buffer.c	FUNCTION_15
0x400b80f	    0x488b1d000000	            mov rbx, qword [0x0400b816] 	       969	buffer.c	FUNCTION_15	CALL_1
0x400b816	    0x64488b042528	                mov rax, qword fs:[0x28]	       965	buffer.c	FUNCTION_15
0x400b81f	      0x4889442418	             mov qword [rsp + 0x18], rax	       965	buffer.c	FUNCTION_15
0x400b824	            0x31c0	                            xor eax, eax	       965	buffer.c	FUNCTION_15
0x400b826	          0x4885db	                           test rbx, rbx	       362	buffer.c	FUNCTION_3
0x400b829	     0xf8489020000	                            je 0x400bab8	       362	buffer.c	FUNCTION_3
0x400b82f	    0x448ba3b80000	           mov r12d, dword [rbx + 0xb8] 	       362	buffer.c	FUNCTION_3
0x400b836	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       973	buffer.c	FUNCTION_15	CALL_2
0x400b83a	    0xc70500000000	               mov dword [0x0400b844], 1	       971	buffer.c	FUNCTION_15
0x400b844	            0x31ff	                            xor edi, edi	       973	buffer.c	FUNCTION_15	CALL_2
0x400b846	        0x448b4534	            mov r8d, dword [rbp + 0x34] 	       973	buffer.c	FUNCTION_15	CALL_2
0x400b84a	    0x448b2d000000	           mov r13d, dword [0x0400b851] 	       363	buffer.c	FUNCTION_3
0x400b851	          0x803873	                    cmp byte [rax], 0x73	       973	buffer.c	FUNCTION_15	CALL_2
0x400b854	        0x400f94c7	                                sete dil	       973	buffer.c	FUNCTION_15	CALL_2
0x400b858	      0xe800000000	                          call 0x400b85d	       973	buffer.c	FUNCTION_15	CALL_2
0x400b85d	    0x8b0500000000	            mov eax, dword [0x0400b863] 	       976	buffer.c	FUNCTION_15	IF_1
0x400b863	          0x83f802	                              cmp eax, 2	       976	buffer.c	FUNCTION_15	IF_1
0x400b866	            0x7438	                            je 0x400b8a0	       976	buffer.c	FUNCTION_15	IF_1
0x400b868	          0x83f803	                              cmp eax, 3	      1053	buffer.c	FUNCTION_16	ELSE_2	IF_5
0x400b86b	     0xf841f010000	                            je 0x400b990	      1053	buffer.c	FUNCTION_16	ELSE_2	IF_5
0x400b871	    0xc70500000000	               mov dword [0x0400b87b], 0	      1074	buffer.c	FUNCTION_16
0x400b87b	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1000	buffer.c	FUNCTION_15
0x400b880	    0x644833042528	                xor rax, qword fs:[0x28]	      1000	buffer.c	FUNCTION_15
0x400b889	     0xf856b020000	                           jne 0x400bafa	      1000	buffer.c	FUNCTION_15
0x400b88f	        0x4883c420	                           add rsp, 0x20	      1000	buffer.c	FUNCTION_15
0x400b893	              0x5b	                                 pop rbx	      1000	buffer.c	FUNCTION_15
0x400b894	              0x5d	                                 pop rbp	      1000	buffer.c	FUNCTION_15
0x400b895	            0x415c	                                 pop r12	      1000	buffer.c	FUNCTION_15
0x400b897	            0x415d	                                 pop r13	      1000	buffer.c	FUNCTION_15
0x400b899	            0x415e	                                 pop r14	      1000	buffer.c	FUNCTION_15
0x400b89b	              0xc3	                                     ret	      1000	buffer.c	FUNCTION_15
0x400b89c	         0xf1f4000	                         nop dword [rax]	      1000	buffer.c	FUNCTION_15
0x400b8a0	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       976	buffer.c	FUNCTION_15	IF_1
0x400b8a4	          0x803873	                    cmp byte [rax], 0x73	       976	buffer.c	FUNCTION_15	IF_1
0x400b8a7	     0xf8413020000	                            je 0x400bac0	       976	buffer.c	FUNCTION_15	IF_1
0x400b8ad	    0x488b05000000	            mov rax, qword [0x0400b8b4] 	      1014	buffer.c	FUNCTION_16
0x400b8b4	          0x4889e7	                            mov rdi, rsp	      1023	buffer.c	FUNCTION_16	IF_1	CALL_1
0x400b8b7	          0x4889e5	                            mov rbp, rsp	      1023	buffer.c	FUNCTION_16	IF_1	CALL_1
0x400b8ba	    0x4c8bb0b81500	          mov r14, qword [rax + 0x15b8] 	      1014	buffer.c	FUNCTION_16
0x400b8c1	      0xe800000000	                          call 0x400b8c6	      1023	buffer.c	FUNCTION_16	IF_1	CALL_1
0x400b8c6	    0x488b35000000	            mov rsi, qword [0x0400b8cd] 	      1031	buffer.c	FUNCTION_16	IF_1	CALL_2
0x400b8cd	    0x488b3d000000	            mov rdi, qword [0x0400b8d4] 	      1031	buffer.c	FUNCTION_16	IF_1	CALL_2
0x400b8d4	            0x31c9	                            xor ecx, ecx	      1031	buffer.c	FUNCTION_16	IF_1	CALL_2
0x400b8d6	      0xba02000000	                              mov edx, 2	      1031	buffer.c	FUNCTION_16	IF_1	CALL_2
0x400b8db	    0xc70500000000	               mov dword [0x0400b8e5], 0	      1029	buffer.c	FUNCTION_16	IF_1
0x400b8e5	    0xc70500000000	               mov dword [0x0400b8ef], 1	      1030	buffer.c	FUNCTION_16	IF_1
0x400b8ef	      0xe800000000	                          call 0x400b8f4	      1031	buffer.c	FUNCTION_16	IF_1	CALL_2
0x400b8f4	    0x443b2d000000	           cmp r13d, dword [0x0400b8fb] 	       377	buffer.c	FUNCTION_4	CALL_1
0x400b8fb	     0xf847f000000	                            je 0x400b980	       377	buffer.c	FUNCTION_4	CALL_1
0x400b901	    0x488b05000000	            mov rax, qword [0x0400b908] 	       392	buffer.c	FUNCTION_5	FOR_1
0x400b908	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x400b90b	            0x755c	                           jne 0x400b969	       392	buffer.c	FUNCTION_5	FOR_1
0x400b90d	           0xf1f00	                         nop dword [rax]	       392	buffer.c	FUNCTION_5	FOR_1
0x400b910	      0xb903000000	                              mov ecx, 3	      1034	buffer.c	FUNCTION_16	IF_1	CALL_4
0x400b915	      0xba01000000	                              mov edx, 1	      1034	buffer.c	FUNCTION_16	IF_1	CALL_4
0x400b91a	            0x31f6	                            xor esi, esi	      1034	buffer.c	FUNCTION_16	IF_1	CALL_4
0x400b91c	            0x31ff	                            xor edi, edi	      1034	buffer.c	FUNCTION_16	IF_1	CALL_4
0x400b91e	      0xe800000000	                          call 0x400b923	      1034	buffer.c	FUNCTION_16	IF_1	CALL_4
0x400b923	          0x4889c3	                            mov rbx, rax	      1034	buffer.c	FUNCTION_16	IF_1	CALL_4
0x400b926	          0x4885db	                           test rbx, rbx	      1037	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3
0x400b929	            0x7424	                            je 0x400b94f	      1037	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3
0x400b92b	          0x4889df	                            mov rdi, rbx	      1039	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	CALL_5
0x400b92e	      0xe800000000	                          call 0x400b933	      1039	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	CALL_5
0x400b933	    0x488b05000000	            mov rax, qword [0x0400b93a] 	      1041	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	IF_4
0x400b93a	    0x4c39b0b81500	          cmp qword [rax + 0x15b8], r14 	      1041	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	IF_4
0x400b941	            0x740c	                            je 0x400b94f	      1041	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	IF_4
0x400b943	    0x488b3d000000	            mov rdi, qword [0x0400b94a] 	      1042	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	CALL_6
0x400b94a	      0xe800000000	                          call 0x400b94f	      1042	buffer.c	FUNCTION_16	IF_1	ELSE_1	IF_3	CALL_6
0x400b94f	          0x4889ef	                            mov rdi, rbp	      1050	buffer.c	FUNCTION_16	IF_1	CALL_7
0x400b952	      0xe800000000	                          call 0x400b957	      1050	buffer.c	FUNCTION_16	IF_1	CALL_7
0x400b957	      0xe915ffffff	                           jmp 0x400b871	      1050	buffer.c	FUNCTION_16	IF_1	CALL_7
0x400b95c	         0xf1f4000	                         nop dword [rax]	      1050	buffer.c	FUNCTION_16	IF_1	CALL_7
0x400b960	        0x488b4070	            mov rax, qword [rax + 0x70] 	       392	buffer.c	FUNCTION_5	FOR_1
0x400b964	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x400b967	            0x74a7	                            je 0x400b910	       392	buffer.c	FUNCTION_5	FOR_1
0x400b969	          0x4839c3	                            cmp rbx, rax	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x400b96c	            0x75f2	                           jne 0x400b960	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x400b96e	    0x443ba3b80000	           cmp r12d, dword [rbx + 0xb8] 	       378	buffer.c	FUNCTION_4
0x400b975	            0x7599	                           jne 0x400b910	       378	buffer.c	FUNCTION_4
0x400b977	    0x660f1f840000	                    nop word [rax + rax]	       378	buffer.c	FUNCTION_4
0x400b980	    0x483b1d000000	            cmp rbx, qword [0x0400b987] 	      1033	buffer.c	FUNCTION_16	IF_1	IF_2
0x400b987	            0x759d	                           jne 0x400b926	      1033	buffer.c	FUNCTION_16	IF_1	IF_2
0x400b989	            0xeb85	                           jmp 0x400b910	      1033	buffer.c	FUNCTION_16	IF_1	IF_2
0x400b98b	       0xf1f440000	                   nop dword [rax + rax]	      1033	buffer.c	FUNCTION_16	IF_1	IF_2
0x400b990	          0x4889e7	                            mov rdi, rsp	      1058	buffer.c	FUNCTION_16	ELSE_2	IF_5	CALL_8
0x400b993	          0x4889e5	                            mov rbp, rsp	      1058	buffer.c	FUNCTION_16	ELSE_2	IF_5	CALL_8
0x400b996	      0xe800000000	                          call 0x400b99b	      1058	buffer.c	FUNCTION_16	ELSE_2	IF_5	CALL_8
0x400b99b	    0xc70500000000	               mov dword [0x0400b9a5], 1	      1062	buffer.c	FUNCTION_16	ELSE_2	IF_5
0x400b9a5	      0xe800000000	                          call 0x400b9aa	      1063	buffer.c	FUNCTION_16	ELSE_2	IF_5	CALL_9
0x400b9aa	      0xbf00000000	                              mov edi, 0	      1064	buffer.c	FUNCTION_16	ELSE_2	IF_5	CALL_10
0x400b9af	      0xe800000000	                          call 0x400b9b4	      1064	buffer.c	FUNCTION_16	ELSE_2	IF_5	CALL_10
0x400b9b4	    0x8b0500000000	            mov eax, dword [0x0400b9ba] 	      1065	buffer.c	FUNCTION_16	ELSE_2	IF_5
0x400b9ba	    0x890500000000	            mov dword [0x0400b9c0], eax 	      1065	buffer.c	FUNCTION_16	ELSE_2	IF_5
0x400b9c0	    0x488b05000000	            mov rax, qword [0x0400b9c7] 	      5340	buffer.c	FUNCTION_73	IF_1
0x400b9c7	    0x8bb038150000	          mov esi, dword [rax + 0x1538] 	      5340	buffer.c	FUNCTION_73	IF_1
0x400b9cd	            0x85f6	                           test esi, esi	      5340	buffer.c	FUNCTION_73	IF_1
0x400b9cf	     0xf847affffff	                            je 0x400b94f	      5340	buffer.c	FUNCTION_73	IF_1
0x400b9d5	    0x488b15000000	            mov rdx, qword [0x0400b9dc] 	      5340	buffer.c	FUNCTION_73	IF_1
0x400b9dc	            0x85d2	                           test edx, edx	      5340	buffer.c	FUNCTION_73	IF_1
0x400b9de	          0x4189d4	                           mov r12d, edx	      5340	buffer.c	FUNCTION_73	IF_1
0x400b9e1	     0xf8468ffffff	                            je 0x400b94f	      5340	buffer.c	FUNCTION_73	IF_1
0x400b9e7	    0x8b0d00000000	            mov ecx, dword [0x0400b9ed] 	      5345	buffer.c	FUNCTION_73	IF_2
0x400b9ed	            0x85c9	                           test ecx, ecx	      5345	buffer.c	FUNCTION_73	IF_2
0x400b9ef	     0xf855affffff	                           jne 0x400b94f	      5345	buffer.c	FUNCTION_73	IF_2
0x400b9f5	          0x488b18	                    mov rbx, qword [rax]	      5349	buffer.c	FUNCTION_73	FOR_1
0x400b9f8	    0xc70500000000	               mov dword [0x0400ba02], 1	      5348	buffer.c	FUNCTION_73
0x400ba02	          0x4885db	                           test rbx, rbx	      5349	buffer.c	FUNCTION_73	FOR_1
0x400ba05	     0xf8e9d000000	                           jle 0x400baa8	      5349	buffer.c	FUNCTION_73	FOR_1
0x400ba0b	            0x85d2	                           test edx, edx	      5349	buffer.c	FUNCTION_73	FOR_1
0x400ba0d	            0x7e46	                           jle 0x400ba55	      5349	buffer.c	FUNCTION_73	FOR_1
0x400ba0f	    0x41bd01000000	                             mov r13d, 1	      5349	buffer.c	FUNCTION_73	FOR_1
0x400ba15	            0xeb11	                           jmp 0x400ba28	      5349	buffer.c	FUNCTION_73	FOR_1
0x400ba17	    0x660f1f840000	                    nop word [rax + rax]	      5349	buffer.c	FUNCTION_73	FOR_1
0x400ba20	          0x4963c4	                        movsxd rax, r12d	      5349	buffer.c	FUNCTION_73	FOR_1
0x400ba23	          0x4939c5	                            cmp r13, rax	      5349	buffer.c	FUNCTION_73	FOR_1
0x400ba26	            0x7f28	                            jg 0x400ba50	      5349	buffer.c	FUNCTION_73	FOR_1
0x400ba28	            0x31f6	                            xor esi, esi	      5351	buffer.c	FUNCTION_73	FOR_1	IF_3	CALL_1
0x400ba2a	          0x4c89ef	                            mov rdi, r13	      5351	buffer.c	FUNCTION_73	FOR_1	IF_3	CALL_1
0x400ba2d	      0xe80e46ffff	                   call sym.chk_modeline	      5351	buffer.c	FUNCTION_73	FOR_1	IF_3	CALL_1
0x400ba32	            0x85c0	                           test eax, eax	      5352	buffer.c	FUNCTION_73	FOR_1	IF_3
0x400ba34	      0xb800000000	                              mov eax, 0	      5352	buffer.c	FUNCTION_73	FOR_1	IF_3
0x400ba39	        0x440f44e0	                         cmove r12d, eax	      5352	buffer.c	FUNCTION_73	FOR_1	IF_3
0x400ba3d	    0x488b05000000	            mov rax, qword [0x0400ba44] 	      5349	buffer.c	FUNCTION_73	FOR_1
0x400ba44	        0x4983c501	                              add r13, 1	      5350	buffer.c	FUNCTION_73	FOR_1
0x400ba48	          0x488b18	                    mov rbx, qword [rax]	      5349	buffer.c	FUNCTION_73	FOR_1
0x400ba4b	          0x4939dd	                            cmp r13, rbx	      5349	buffer.c	FUNCTION_73	FOR_1
0x400ba4e	            0x7ed0	                           jle 0x400ba20	      5349	buffer.c	FUNCTION_73	FOR_1
0x400ba50	          0x4885db	                           test rbx, rbx	      5354	buffer.c	FUNCTION_73	FOR_2
0x400ba53	            0x7e53	                           jle 0x400baa8	      5354	buffer.c	FUNCTION_73	FOR_2
0x400ba55	          0x4963c4	                        movsxd rax, r12d	      5354	buffer.c	FUNCTION_73	FOR_2
0x400ba58	          0x4839d8	                            cmp rax, rbx	      5354	buffer.c	FUNCTION_73	FOR_2
0x400ba5b	            0x7d4b	                           jge 0x400baa8	      5354	buffer.c	FUNCTION_73	FOR_2
0x400ba5d	          0x4889d9	                            mov rcx, rbx	      5355	buffer.c	FUNCTION_73	FOR_2
0x400ba60	          0x4829c1	                            sub rcx, rax	      5355	buffer.c	FUNCTION_73	FOR_2
0x400ba63	          0x4839d9	                            cmp rcx, rbx	      5355	buffer.c	FUNCTION_73	FOR_2
0x400ba66	            0x7c22	                            jl 0x400ba8a	      5355	buffer.c	FUNCTION_73	FOR_2
0x400ba68	            0xeb3e	                           jmp 0x400baa8	      5355	buffer.c	FUNCTION_73	FOR_2
0x400ba6a	    0x660f1f440000	                    nop word [rax + rax]	      5355	buffer.c	FUNCTION_73	FOR_2
0x400ba70	          0x4963d4	                        movsxd rdx, r12d	      5354	buffer.c	FUNCTION_73	FOR_2
0x400ba73	          0x4839d3	                            cmp rbx, rdx	      5354	buffer.c	FUNCTION_73	FOR_2
0x400ba76	            0x7e30	                           jle 0x400baa8	      5354	buffer.c	FUNCTION_73	FOR_2
0x400ba78	    0x488b05000000	            mov rax, qword [0x0400ba7f] 	      5355	buffer.c	FUNCTION_73	FOR_2
0x400ba7f	          0x488b00	                    mov rax, qword [rax]	      5355	buffer.c	FUNCTION_73	FOR_2
0x400ba82	          0x4829d0	                            sub rax, rdx	      5355	buffer.c	FUNCTION_73	FOR_2
0x400ba85	          0x4839c3	                            cmp rbx, rax	      5355	buffer.c	FUNCTION_73	FOR_2
0x400ba88	            0x7e1e	                           jle 0x400baa8	      5355	buffer.c	FUNCTION_73	FOR_2
0x400ba8a	            0x31f6	                            xor esi, esi	      5356	buffer.c	FUNCTION_73	FOR_2	IF_4	CALL_2
0x400ba8c	          0x4889df	                            mov rdi, rbx	      5356	buffer.c	FUNCTION_73	FOR_2	IF_4	CALL_2
0x400ba8f	      0xe8ac45ffff	                   call sym.chk_modeline	      5356	buffer.c	FUNCTION_73	FOR_2	IF_4	CALL_2
0x400ba94	            0x85c0	                           test eax, eax	      5357	buffer.c	FUNCTION_73	FOR_2	IF_4
0x400ba96	      0xb800000000	                              mov eax, 0	      5357	buffer.c	FUNCTION_73	FOR_2	IF_4
0x400ba9b	        0x440f44e0	                         cmove r12d, eax	      5357	buffer.c	FUNCTION_73	FOR_2	IF_4
0x400ba9f	        0x4883eb01	                              sub rbx, 1	      5355	buffer.c	FUNCTION_73	FOR_2
0x400baa3	          0x4885db	                           test rbx, rbx	      5354	buffer.c	FUNCTION_73	FOR_2
0x400baa6	            0x7fc8	                            jg 0x400ba70	      5354	buffer.c	FUNCTION_73	FOR_2
0x400baa8	    0x832d00000000	               sub dword [0x0400baaf], 1	      5358	buffer.c	FUNCTION_73
0x400baaf	      0xe99bfeffff	                           jmp 0x400b94f	      5358	buffer.c	FUNCTION_73
0x400bab4	         0xf1f4000	                         nop dword [rax]	      5358	buffer.c	FUNCTION_73
0x400bab8	          0x4531e4	                          xor r12d, r12d	       362	buffer.c	FUNCTION_3
0x400babb	      0xe976fdffff	                           jmp 0x400b836	       362	buffer.c	FUNCTION_3
0x400bac0	          0x4889e7	                            mov rdi, rsp	       983	buffer.c	FUNCTION_15	IF_1	CALL_3
0x400bac3	      0xe800000000	                          call 0x400bac8	       983	buffer.c	FUNCTION_15	IF_1	CALL_3
0x400bac8	    0x488b3d000000	            mov rdi, qword [0x0400bacf] 	       987	buffer.c	FUNCTION_15	IF_1	CALL_4
0x400bacf	      0xbe01000000	                              mov esi, 1	       987	buffer.c	FUNCTION_15	IF_1	CALL_4
0x400bad4	      0xe800000000	                          call 0x400bad9	       987	buffer.c	FUNCTION_15	IF_1	CALL_4
0x400bad9	          0x4889e7	                            mov rdi, rsp	       994	buffer.c	FUNCTION_15	IF_1	CALL_5
0x400badc	    0xc70500000000	               mov dword [0x0400bae6], 0	       988	buffer.c	FUNCTION_15	IF_1
0x400bae6	    0xc70500000000	               mov dword [0x0400baf0], 1	       989	buffer.c	FUNCTION_15	IF_1
0x400baf0	      0xe800000000	                          call 0x400baf5	       994	buffer.c	FUNCTION_15	IF_1	CALL_5
0x400baf5	      0xe981fdffff	                           jmp 0x400b87b	       977	buffer.c	FUNCTION_15	IF_1
0x400bafa	      0xe800000000	                          call 0x400baff	      1000	buffer.c	FUNCTION_15
free_buf_options	FOR,0:WHILE,0:DO,0:ELSE,0:functions,0:CALL,52:SWITCH,0:IF,1	117
0x4000c60	              0x55	                                push rbp	      2119	buffer.c	FUNCTION_27
0x4000c61	              0x53	                                push rbx	      2119	buffer.c	FUNCTION_27
0x4000c62	          0x4889fb	                            mov rbx, rdi	      2119	buffer.c	FUNCTION_27
0x4000c65	        0x4883ec08	                              sub rsp, 8	      2119	buffer.c	FUNCTION_27
0x4000c69	            0x85f6	                           test esi, esi	      2120	buffer.c	FUNCTION_27	IF_1
0x4000c6b	            0x7430	                            je 0x4000c9d	      2120	buffer.c	FUNCTION_27	IF_1
0x4000c6d	    0x488dbf881400	                 lea rdi, [rdi + 0x1488]	      2123	buffer.c	FUNCTION_27	IF_1	CALL_1
0x4000c74	      0xe800000000	                          call 0x4000c79	      2123	buffer.c	FUNCTION_27	IF_1	CALL_1
0x4000c79	    0x488dbb901400	                 lea rdi, [rbx + 0x1490]	      2125	buffer.c	FUNCTION_27	IF_1	CALL_2
0x4000c80	      0xe800000000	                          call 0x4000c85	      2125	buffer.c	FUNCTION_27	IF_1	CALL_2
0x4000c85	    0x488dbb101400	                 lea rdi, [rbx + 0x1410]	      2126	buffer.c	FUNCTION_27	IF_1	CALL_3
0x4000c8c	      0xe800000000	                          call 0x4000c91	      2126	buffer.c	FUNCTION_27	IF_1	CALL_3
0x4000c91	    0x488dbb181400	                 lea rdi, [rbx + 0x1418]	      2127	buffer.c	FUNCTION_27	IF_1	CALL_4
0x4000c98	      0xe800000000	                          call 0x4000c9d	      2127	buffer.c	FUNCTION_27	IF_1	CALL_4
0x4000c9d	    0x488dbbc01400	                 lea rdi, [rbx + 0x14c0]	      2130	buffer.c	FUNCTION_27	CALL_5
0x4000ca4	    0x488dab901200	                 lea rbp, [rbx + 0x1290]	      2160	buffer.c	FUNCTION_27	CALL_21
0x4000cab	      0xe800000000	                          call 0x4000cb0	      2130	buffer.c	FUNCTION_27	CALL_5
0x4000cb0	    0x488dbbc81400	                 lea rdi, [rbx + 0x14c8]	      2131	buffer.c	FUNCTION_27	CALL_6
0x4000cb7	      0xe800000000	                          call 0x4000cbc	      2131	buffer.c	FUNCTION_27	CALL_6
0x4000cbc	    0x488dbbd01400	                 lea rdi, [rbx + 0x14d0]	      2133	buffer.c	FUNCTION_27	CALL_7
0x4000cc3	      0xe800000000	                          call 0x4000cc8	      2133	buffer.c	FUNCTION_27	CALL_7
0x4000cc8	    0x488dbbe01400	                 lea rdi, [rbx + 0x14e0]	      2137	buffer.c	FUNCTION_27	CALL_8
0x4000ccf	      0xe800000000	                          call 0x4000cd4	      2137	buffer.c	FUNCTION_27	CALL_8
0x4000cd4	    0x488dbbf01400	                 lea rdi, [rbx + 0x14f0]	      2138	buffer.c	FUNCTION_27	CALL_9
0x4000cdb	      0xe800000000	                          call 0x4000ce0	      2138	buffer.c	FUNCTION_27	CALL_9
0x4000ce0	    0x488dbb381700	                 lea rdi, [rbx + 0x1738]	      2141	buffer.c	FUNCTION_27	CALL_10
0x4000ce7	      0xe800000000	                          call 0x4000cec	      2141	buffer.c	FUNCTION_27	CALL_10
0x4000cec	    0x488dbb481700	                 lea rdi, [rbx + 0x1748]	      2144	buffer.c	FUNCTION_27	CALL_11
0x4000cf3	      0xe800000000	                          call 0x4000cf8	      2144	buffer.c	FUNCTION_27	CALL_11
0x4000cf8	    0x488dbbf81400	                 lea rdi, [rbx + 0x14f8]	      2146	buffer.c	FUNCTION_27	CALL_12
0x4000cff	      0xe800000000	                          call 0x4000d04	      2146	buffer.c	FUNCTION_27	CALL_12
0x4000d04	    0x488dbb001500	                 lea rdi, [rbx + 0x1500]	      2148	buffer.c	FUNCTION_27	CALL_13
0x4000d0b	      0xe800000000	                          call 0x4000d10	      2148	buffer.c	FUNCTION_27	CALL_13
0x4000d10	    0x488dbb101500	                 lea rdi, [rbx + 0x1510]	      2151	buffer.c	FUNCTION_27	CALL_14
0x4000d17	      0xe800000000	                          call 0x4000d1c	      2151	buffer.c	FUNCTION_27	CALL_14
0x4000d1c	    0x488dbb181500	                 lea rdi, [rbx + 0x1518]	      2153	buffer.c	FUNCTION_27	CALL_15
0x4000d23	      0xe800000000	                          call 0x4000d28	      2153	buffer.c	FUNCTION_27	CALL_15
0x4000d28	    0x488dbb301500	                 lea rdi, [rbx + 0x1530]	      2154	buffer.c	FUNCTION_27	CALL_16
0x4000d2f	      0xe800000000	                          call 0x4000d34	      2154	buffer.c	FUNCTION_27	CALL_16
0x4000d34	    0x488dbba01400	                 lea rdi, [rbx + 0x14a0]	      2155	buffer.c	FUNCTION_27	CALL_17
0x4000d3b	      0xe800000000	                          call 0x4000d40	      2155	buffer.c	FUNCTION_27	CALL_17
0x4000d40	    0x488dbba81400	                 lea rdi, [rbx + 0x14a8]	      2156	buffer.c	FUNCTION_27	CALL_18
0x4000d47	      0xe800000000	                          call 0x4000d4c	      2156	buffer.c	FUNCTION_27	CALL_18
0x4000d4c	    0x488dbbb81400	                 lea rdi, [rbx + 0x14b8]	      2157	buffer.c	FUNCTION_27	CALL_19
0x4000d53	      0xe800000000	                          call 0x4000d58	      2157	buffer.c	FUNCTION_27	CALL_19
0x4000d58	    0x488dbbe81500	                 lea rdi, [rbx + 0x15e8]	      2159	buffer.c	FUNCTION_27	CALL_20
0x4000d5f	      0xe800000000	                          call 0x4000d64	      2159	buffer.c	FUNCTION_27	CALL_20
0x4000d64	          0x4889ef	                            mov rdi, rbp	      2160	buffer.c	FUNCTION_27	CALL_21
0x4000d67	      0xe800000000	                          call 0x4000d6c	      2160	buffer.c	FUNCTION_27	CALL_21
0x4000d6c	          0x4889ef	                            mov rdi, rbp	      2161	buffer.c	FUNCTION_27	CALL_22
0x4000d6f	      0xe800000000	                          call 0x4000d74	      2161	buffer.c	FUNCTION_27	CALL_22
0x4000d74	    0x488dbb481400	                 lea rdi, [rbx + 0x1448]	      2164	buffer.c	FUNCTION_27	CALL_23
0x4000d7b	      0xe800000000	                          call 0x4000d80	      2164	buffer.c	FUNCTION_27	CALL_23
0x4000d80	    0x488dbb501400	                 lea rdi, [rbx + 0x1450]	      2167	buffer.c	FUNCTION_27	CALL_24
0x4000d87	      0xe800000000	                          call 0x4000d8c	      2167	buffer.c	FUNCTION_27	CALL_24
0x4000d8c	    0x488dbb481500	                 lea rdi, [rbx + 0x1548]	      2169	buffer.c	FUNCTION_27	CALL_25
0x4000d93	      0xe800000000	                          call 0x4000d98	      2169	buffer.c	FUNCTION_27	CALL_25
0x4000d98	    0x488dbba01500	                 lea rdi, [rbx + 0x15a0]	      2171	buffer.c	FUNCTION_27	CALL_26
0x4000d9f	      0xe800000000	                          call 0x4000da4	      2171	buffer.c	FUNCTION_27	CALL_26
0x4000da4	    0x488dbb181c00	                 lea rdi, [rbx + 0x1c18]	      2172	buffer.c	FUNCTION_27	CALL_27
0x4000dab	      0xe800000000	                          call 0x4000db0	      2172	buffer.c	FUNCTION_27	CALL_27
0x4000db0	    0x488dbbd01b00	                 lea rdi, [rbx + 0x1bd0]	      2175	buffer.c	FUNCTION_27	CALL_28
0x4000db7	      0xe800000000	                          call 0x4000dbc	      2175	buffer.c	FUNCTION_27	CALL_28
0x4000dbc	    0x488dbbe01b00	                 lea rdi, [rbx + 0x1be0]	      2176	buffer.c	FUNCTION_27	CALL_29
0x4000dc3	      0xe800000000	                          call 0x4000dc8	      2176	buffer.c	FUNCTION_27	CALL_29
0x4000dc8	    0x488bbbd81b00	          mov rdi, qword [rbx + 0x1bd8] 	      2177	buffer.c	FUNCTION_27	CALL_30
0x4000dcf	      0xe800000000	                          call 0x4000dd4	      2177	buffer.c	FUNCTION_27	CALL_30
0x4000dd4	    0x488dbbe81b00	                 lea rdi, [rbx + 0x1be8]	      2179	buffer.c	FUNCTION_27	CALL_31
0x4000ddb	    0x48c783d81b00	            mov qword [rbx + 0x1bd8], 0 	      2178	buffer.c	FUNCTION_27
0x4000de6	      0xe800000000	                          call 0x4000deb	      2179	buffer.c	FUNCTION_27	CALL_31
0x4000deb	    0x488dbb881500	                 lea rdi, [rbx + 0x1588]	      2182	buffer.c	FUNCTION_27	CALL_32
0x4000df2	      0xe800000000	                          call 0x4000df7	      2182	buffer.c	FUNCTION_27	CALL_32
0x4000df7	    0x488dbb981400	                 lea rdi, [rbx + 0x1498]	      2184	buffer.c	FUNCTION_27	CALL_33
0x4000dfe	      0xe800000000	                          call 0x4000e03	      2184	buffer.c	FUNCTION_27	CALL_33
0x4000e03	    0x488dbb381400	                 lea rdi, [rbx + 0x1438]	      2186	buffer.c	FUNCTION_27	CALL_34
0x4000e0a	      0xe800000000	                          call 0x4000e0f	      2186	buffer.c	FUNCTION_27	CALL_34
0x4000e0f	    0x488dbb301400	                 lea rdi, [rbx + 0x1430]	      2187	buffer.c	FUNCTION_27	CALL_35
0x4000e16	      0xe800000000	                          call 0x4000e1b	      2187	buffer.c	FUNCTION_27	CALL_35
0x4000e1b	    0x488dbb401400	                 lea rdi, [rbx + 0x1440]	      2190	buffer.c	FUNCTION_27	CALL_36
0x4000e22	      0xe800000000	                          call 0x4000e27	      2190	buffer.c	FUNCTION_27	CALL_36
0x4000e27	    0x488dbb581400	                 lea rdi, [rbx + 0x1458]	      2193	buffer.c	FUNCTION_27	CALL_37
0x4000e2e	      0xe800000000	                          call 0x4000e33	      2193	buffer.c	FUNCTION_27	CALL_37
0x4000e33	    0x488dbb601400	                 lea rdi, [rbx + 0x1460]	      2196	buffer.c	FUNCTION_27	CALL_38
0x4000e3a	      0xe800000000	                          call 0x4000e3f	      2196	buffer.c	FUNCTION_27	CALL_38
0x4000e3f	    0x488dbb681400	                 lea rdi, [rbx + 0x1468]	      2197	buffer.c	FUNCTION_27	CALL_39
0x4000e46	      0xe800000000	                          call 0x4000e4b	      2197	buffer.c	FUNCTION_27	CALL_39
0x4000e4b	    0x488dbbf01500	                 lea rdi, [rbx + 0x15f0]	      2200	buffer.c	FUNCTION_27	CALL_40
0x4000e52	      0xe800000000	                          call 0x4000e57	      2200	buffer.c	FUNCTION_27	CALL_40
0x4000e57	    0x488dbbf81500	                 lea rdi, [rbx + 0x15f8]	      2201	buffer.c	FUNCTION_27	CALL_41
0x4000e5e	      0xe800000000	                          call 0x4000e63	      2201	buffer.c	FUNCTION_27	CALL_41
0x4000e63	    0x488dbb001600	                 lea rdi, [rbx + 0x1600]	      2202	buffer.c	FUNCTION_27	CALL_42
0x4000e6a	      0xe800000000	                          call 0x4000e6f	      2202	buffer.c	FUNCTION_27	CALL_42
0x4000e6f	    0x488dbb081600	                 lea rdi, [rbx + 0x1608]	      2204	buffer.c	FUNCTION_27	CALL_43
0x4000e76	      0xe800000000	                          call 0x4000e7b	      2204	buffer.c	FUNCTION_27	CALL_43
0x4000e7b	    0x488dbb101600	                 lea rdi, [rbx + 0x1610]	      2205	buffer.c	FUNCTION_27	CALL_44
0x4000e82	      0xe800000000	                          call 0x4000e87	      2205	buffer.c	FUNCTION_27	CALL_44
0x4000e87	    0x488dbb201600	                 lea rdi, [rbx + 0x1620]	      2206	buffer.c	FUNCTION_27	CALL_45
0x4000e8e	      0xe800000000	                          call 0x4000e93	      2206	buffer.c	FUNCTION_27	CALL_45
0x4000e93	    0x488dbb281600	                 lea rdi, [rbx + 0x1628]	      2207	buffer.c	FUNCTION_27	CALL_46
0x4000e9a	      0xe800000000	                          call 0x4000e9f	      2207	buffer.c	FUNCTION_27	CALL_46
0x4000e9f	    0x488dbb381600	                 lea rdi, [rbx + 0x1638]	      2209	buffer.c	FUNCTION_27	CALL_47
0x4000ea6	      0xe800000000	                          call 0x4000eab	      2209	buffer.c	FUNCTION_27	CALL_47
0x4000eab	    0x488dbb401600	                 lea rdi, [rbx + 0x1640]	      2210	buffer.c	FUNCTION_27	CALL_48
0x4000eb2	      0xe800000000	                          call 0x4000eb7	      2210	buffer.c	FUNCTION_27	CALL_48
0x4000eb7	    0x488dbb581500	                 lea rdi, [rbx + 0x1558]	      2213	buffer.c	FUNCTION_27	CALL_49
0x4000ebe	      0xe800000000	                          call 0x4000ec3	      2213	buffer.c	FUNCTION_27	CALL_49
0x4000ec3	    0x488dbb581600	                 lea rdi, [rbx + 0x1658]	      2218	buffer.c	FUNCTION_27	CALL_50
0x4000eca	    0xc78318160000	   mov dword [rbx + 0x1618], 0xffffffff 	      2215	buffer.c	FUNCTION_27
0x4000ed4	    0x48c783481600	mov qword [rbx + 0x1648], 0xfffffffffffe1dc0 	      2216	buffer.c	FUNCTION_27
0x4000edf	      0xe800000000	                          call 0x4000ee4	      2218	buffer.c	FUNCTION_27	CALL_50
0x4000ee4	    0x488dbbf81300	                 lea rdi, [rbx + 0x13f8]	      2220	buffer.c	FUNCTION_27	CALL_51
0x4000eeb	      0xe800000000	                          call 0x4000ef0	      2220	buffer.c	FUNCTION_27	CALL_51
0x4000ef0	        0x4883c408	                              add rsp, 8	      2224	buffer.c	FUNCTION_27
0x4000ef4	    0x488dbb281500	                 lea rdi, [rbx + 0x1528]	      2222	buffer.c	FUNCTION_27	CALL_52
0x4000efb	              0x5b	                                 pop rbx	      2224	buffer.c	FUNCTION_27
0x4000efc	              0x5d	                                 pop rbp	      2224	buffer.c	FUNCTION_27
0x4000efd	      0xe900000000	                           jmp 0x4000f02	      2222	buffer.c	FUNCTION_27	CALL_52
empty_curbuf	FOR,0:WHILE,0:DO,0:ELSE,0:functions,0:CALL,8:SWITCH,0:IF,4	89
0x4001820	            0x4157	                                push r15	      1216	buffer.c	FUNCTION_18
0x4001822	            0x4156	                                push r14	      1216	buffer.c	FUNCTION_18
0x4001824	            0x4155	                                push r13	      1216	buffer.c	FUNCTION_18
0x4001826	            0x4154	                                push r12	      1216	buffer.c	FUNCTION_18
0x4001828	              0x55	                                push rbp	      1216	buffer.c	FUNCTION_18
0x4001829	              0x53	                                push rbx	      1216	buffer.c	FUNCTION_18
0x400182a	        0x4883ec18	                           sub rsp, 0x18	      1216	buffer.c	FUNCTION_18
0x400182e	          0x83fa02	                              cmp edx, 2	      1221	buffer.c	FUNCTION_18	IF_1
0x4001831	    0x488b1d000000	            mov rbx, qword [0x04001838] 	      1218	buffer.c	FUNCTION_18
0x4001838	     0xf8402010000	                            je 0x4001940	      1221	buffer.c	FUNCTION_18	IF_1
0x400183e	          0x4885db	                           test rbx, rbx	       362	buffer.c	FUNCTION_3
0x4001841	            0x89fd	                            mov ebp, edi	       362	buffer.c	FUNCTION_3
0x4001843	          0x4189f7	                           mov r15d, esi	       362	buffer.c	FUNCTION_3
0x4001846	          0x4189d4	                           mov r12d, edx	       362	buffer.c	FUNCTION_3
0x4001849	     0xf84e9000000	                            je 0x4001938	       362	buffer.c	FUNCTION_3
0x400184f	    0x448babb80000	           mov r13d, dword [rbx + 0xb8] 	       362	buffer.c	FUNCTION_3
0x4001856	            0x85ed	                           test ebp, ebp	      1228	buffer.c	FUNCTION_18	IF_2
0x4001858	    0x448b35000000	           mov r14d, dword [0x0400185f] 	       363	buffer.c	FUNCTION_3
0x400185f	     0xf85bb000000	                           jne 0x4001920	      1228	buffer.c	FUNCTION_18	IF_2
0x4001865	      0xe800000000	                          call 0x400186a	      1232	buffer.c	FUNCTION_18	CALL_5
0x400186a	        0x4183ff01	                             cmp r15d, 1	      1233	buffer.c	FUNCTION_18	CALL_6
0x400186e	    0x41b801000000	                              mov r8d, 1	      1233	buffer.c	FUNCTION_18	CALL_6
0x4001874	          0x4519c9	                            sbb r9d, r9d	      1233	buffer.c	FUNCTION_18	CALL_6
0x4001877	        0x4883ec08	                              sub rsp, 8	      1233	buffer.c	FUNCTION_18	CALL_6
0x400187b	    0xff3500000000	                 push qword [0x04001881]	      1233	buffer.c	FUNCTION_18	CALL_6
0x4001881	          0x41f7d1	                                 not r9d	      1233	buffer.c	FUNCTION_18	CALL_6
0x4001884	            0x31c9	                            xor ecx, ecx	      1233	buffer.c	FUNCTION_18	CALL_6
0x4001886	            0x31f6	                            xor esi, esi	      1233	buffer.c	FUNCTION_18	CALL_6
0x4001888	        0x4183e108	                              and r9d, 8	      1233	buffer.c	FUNCTION_18	CALL_6
0x400188c	            0x31d2	                            xor edx, edx	      1233	buffer.c	FUNCTION_18	CALL_6
0x400188e	            0x31ff	                            xor edi, edi	      1233	buffer.c	FUNCTION_18	CALL_6
0x4001890	      0xe800000000	                          call 0x4001895	      1233	buffer.c	FUNCTION_18	CALL_6
0x4001895	    0x483b1d000000	            cmp rbx, qword [0x0400189c] 	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x400189c	              0x59	                                 pop rcx	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x400189d	              0x5e	                                 pop rsi	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x400189e	            0x7440	                            je 0x40018e0	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x40018a0	    0x443b35000000	           cmp r14d, dword [0x040018a7] 	       377	buffer.c	FUNCTION_4	CALL_1
0x40018a7	            0x7457	                            je 0x4001900	       377	buffer.c	FUNCTION_4	CALL_1
0x40018a9	    0x488b15000000	            mov rdx, qword [0x040018b0] 	       392	buffer.c	FUNCTION_5	FOR_1
0x40018b0	          0x4885d2	                           test rdx, rdx	       392	buffer.c	FUNCTION_5	FOR_1
0x40018b3	            0x7514	                           jne 0x40018c9	       392	buffer.c	FUNCTION_5	FOR_1
0x40018b5	            0xeb29	                           jmp 0x40018e0	       392	buffer.c	FUNCTION_5	FOR_1
0x40018b7	    0x660f1f840000	                    nop word [rax + rax]	       392	buffer.c	FUNCTION_5	FOR_1
0x40018c0	        0x488b5270	            mov rdx, qword [rdx + 0x70] 	       392	buffer.c	FUNCTION_5	FOR_1
0x40018c4	          0x4885d2	                           test rdx, rdx	       392	buffer.c	FUNCTION_5	FOR_1
0x40018c7	            0x7417	                            je 0x40018e0	       392	buffer.c	FUNCTION_5	FOR_1
0x40018c9	          0x4839d3	                            cmp rbx, rdx	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x40018cc	            0x75f2	                           jne 0x40018c0	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x40018ce	    0x443babb80000	           cmp r13d, dword [rbx + 0xb8] 	       378	buffer.c	FUNCTION_4
0x40018d5	            0x7429	                            je 0x4001900	       378	buffer.c	FUNCTION_4
0x40018d7	    0x660f1f840000	                    nop word [rax + rax]	       378	buffer.c	FUNCTION_4
0x40018e0	            0x85ed	                           test ebp, ebp	      1243	buffer.c	FUNCTION_18	IF_4
0x40018e2	            0x750a	                           jne 0x40018ee	      1243	buffer.c	FUNCTION_18	IF_4
0x40018e4	    0xc70500000000	               mov dword [0x040018ee], 0	      1244	buffer.c	FUNCTION_18	IF_4
0x40018ee	        0x4883c418	                           add rsp, 0x18	      1246	buffer.c	FUNCTION_18
0x40018f2	              0x5b	                                 pop rbx	      1246	buffer.c	FUNCTION_18
0x40018f3	              0x5d	                                 pop rbp	      1246	buffer.c	FUNCTION_18
0x40018f4	            0x415c	                                 pop r12	      1246	buffer.c	FUNCTION_18
0x40018f6	            0x415d	                                 pop r13	      1246	buffer.c	FUNCTION_18
0x40018f8	            0x415e	                                 pop r14	      1246	buffer.c	FUNCTION_18
0x40018fa	            0x415f	                                 pop r15	      1246	buffer.c	FUNCTION_18
0x40018fc	              0xc3	                                     ret	      1246	buffer.c	FUNCTION_18
0x40018fd	           0xf1f00	                         nop dword [rax]	      1246	buffer.c	FUNCTION_18
0x4001900	          0x8b5378	            mov edx, dword [rbx + 0x78] 	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x4001903	            0x85d2	                           test edx, edx	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x4001905	            0x75d9	                           jne 0x40018e0	      1241	buffer.c	FUNCTION_18	IF_3	CALL_7
0x4001907	            0x31c9	                            xor ecx, ecx	      1242	buffer.c	FUNCTION_18	CALL_8
0x4001909	          0x4489e2	                           mov edx, r12d	      1242	buffer.c	FUNCTION_18	CALL_8
0x400190c	          0x4889de	                            mov rsi, rbx	      1242	buffer.c	FUNCTION_18	CALL_8
0x400190f	            0x31ff	                            xor edi, edi	      1242	buffer.c	FUNCTION_18	CALL_8
0x4001911	        0x8944240c	              mov dword [rsp + 0xc], eax	      1242	buffer.c	FUNCTION_18	CALL_8
0x4001915	      0xe800000000	                          call 0x400191a	      1242	buffer.c	FUNCTION_18	CALL_8
0x400191a	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      1242	buffer.c	FUNCTION_18	CALL_8
0x400191e	            0xebc0	                           jmp 0x40018e0	      1242	buffer.c	FUNCTION_18	CALL_8
0x4001920	      0xbe01000000	                              mov esi, 1	      1230	buffer.c	FUNCTION_18	CALL_4
0x4001925	          0x4889df	                            mov rdi, rbx	      1230	buffer.c	FUNCTION_18	CALL_4
0x4001928	      0xe800000000	                          call 0x400192d	      1230	buffer.c	FUNCTION_18	CALL_4
0x400192d	      0xe933ffffff	                           jmp 0x4001865	      1230	buffer.c	FUNCTION_18	CALL_4
0x4001932	    0x660f1f440000	                    nop word [rax + rax]	      1230	buffer.c	FUNCTION_18	CALL_4
0x4001938	          0x4531ed	                          xor r13d, r13d	       362	buffer.c	FUNCTION_3
0x400193b	      0xe916ffffff	                           jmp 0x4001856	       362	buffer.c	FUNCTION_3
0x4001940	      0xba05000000	                              mov edx, 5	      1223	buffer.c	FUNCTION_18	IF_1	CALL_2
0x4001945	      0xbe00000000	                              mov esi, 0	      1223	buffer.c	FUNCTION_18	IF_1	CALL_2
0x400194a	            0x31ff	                            xor edi, edi	      1223	buffer.c	FUNCTION_18	IF_1	CALL_2
0x400194c	      0xe800000000	                          call 0x4001951	      1223	buffer.c	FUNCTION_18	IF_1	CALL_2
0x4001951	          0x4889c7	                            mov rdi, rax	      1223	buffer.c	FUNCTION_18	IF_1	CALL_2
0x4001954	      0xe800000000	                          call 0x4001959	      1223	buffer.c	FUNCTION_18	IF_1	CALL_2
0x4001959	            0x31c0	                            xor eax, eax	      1224	buffer.c	FUNCTION_18	IF_1
0x400195b	            0xeb91	                           jmp 0x40018ee	      1224	buffer.c	FUNCTION_18	IF_1
bt_dontwrite_msg	FOR,0:WHILE,0:DO,0:ELSE,0:functions,0:CALL,3:SWITCH,0:IF,1	22
0x4004ce0	        0x4883ec08	                              sub rsp, 8	      5644	buffer.c	FUNCTION_82
0x4004ce4	          0x4885ff	                           test rdi, rdi	      5639	buffer.c	FUNCTION_81
0x4004ce7	            0x7412	                            je 0x4004cfb	      5639	buffer.c	FUNCTION_81
0x4004ce9	    0x488b87181400	          mov rax, qword [rdi + 0x1418] 	      5639	buffer.c	FUNCTION_81
0x4004cf0	           0xfb600	                   movzx eax, byte [rax]	      5639	buffer.c	FUNCTION_81
0x4004cf3	            0x3c6e	                            cmp al, 0x6e	      5639	buffer.c	FUNCTION_81
0x4004cf5	            0x7411	                            je 0x4004d08	      5639	buffer.c	FUNCTION_81
0x4004cf7	            0x3c74	                            cmp al, 0x74	      5639	buffer.c	FUNCTION_81
0x4004cf9	            0x740d	                            je 0x4004d08	      5639	buffer.c	FUNCTION_81
0x4004cfb	            0x31c0	                            xor eax, eax	      5650	buffer.c	FUNCTION_82
0x4004cfd	        0x4883c408	                              add rsp, 8	      5651	buffer.c	FUNCTION_82
0x4004d01	              0xc3	                                     ret	      5651	buffer.c	FUNCTION_82
0x4004d02	    0x660f1f440000	                    nop word [rax + rax]	      5651	buffer.c	FUNCTION_82
0x4004d08	      0xba05000000	                              mov edx, 5	      5647	buffer.c	FUNCTION_82	IF_1	CALL_3
0x4004d0d	      0xbe00000000	                              mov esi, 0	      5647	buffer.c	FUNCTION_82	IF_1	CALL_3
0x4004d12	            0x31ff	                            xor edi, edi	      5647	buffer.c	FUNCTION_82	IF_1	CALL_3
0x4004d14	      0xe800000000	                          call 0x4004d19	      5647	buffer.c	FUNCTION_82	IF_1	CALL_3
0x4004d19	          0x4889c7	                            mov rdi, rax	      5647	buffer.c	FUNCTION_82	IF_1	CALL_3
0x4004d1c	      0xe800000000	                          call 0x4004d21	      5647	buffer.c	FUNCTION_82	IF_1	CALL_3
0x4004d21	      0xb801000000	                              mov eax, 1	      5648	buffer.c	FUNCTION_82	IF_1
0x4004d26	        0x4883c408	                              add rsp, 8	      5651	buffer.c	FUNCTION_82
0x4004d2a	              0xc3	                                     ret	      5651	buffer.c	FUNCTION_82
buflist_add	FOR,0:WHILE,0:DO,0:ELSE,0:functions,0:CALL,1:SWITCH,0:IF,1	14
0x4003620	        0x4883ec08	                              sub rsp, 8	      3262	buffer.c	FUNCTION_52
0x4003624	            0x89f1	                            mov ecx, esi	      3262	buffer.c	FUNCTION_52
0x4003626	            0x31d2	                            xor edx, edx	      3265	buffer.c	FUNCTION_52	CALL_1
0x4003628	            0x31f6	                            xor esi, esi	      3265	buffer.c	FUNCTION_52	CALL_1
0x400362a	      0xe800000000	                          call 0x400362f	      3265	buffer.c	FUNCTION_52	CALL_1
0x400362f	          0x4885c0	                           test rax, rax	      3266	buffer.c	FUNCTION_52	IF_1
0x4003632	            0x740c	                            je 0x4003640	      3266	buffer.c	FUNCTION_52	IF_1
0x4003634	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      3267	buffer.c	FUNCTION_52	IF_1
0x400363a	        0x4883c408	                              add rsp, 8	      3269	buffer.c	FUNCTION_52
0x400363e	              0xc3	                                     ret	      3269	buffer.c	FUNCTION_52
0x400363f	              0x90	                                     nop	      3269	buffer.c	FUNCTION_52
0x4003640	            0x31c0	                            xor eax, eax	      3268	buffer.c	FUNCTION_52
0x4003642	        0x4883c408	                              add rsp, 8	      3269	buffer.c	FUNCTION_52
0x4003646	              0xc3	                                     ret	      3269	buffer.c	FUNCTION_52
do_arg_all	FOR,5:WHILE,0:DO,0:ELSE,6:functions,0:CALL,43:SWITCH,0:IF,38	645
0x4003c30	            0x4157	                                push r15	      4845	buffer.c	FUNCTION_71
0x4003c32	            0x4156	                                push r14	      4845	buffer.c	FUNCTION_71
0x4003c34	            0x4155	                                push r13	      4845	buffer.c	FUNCTION_71
0x4003c36	            0x4154	                                push r12	      4845	buffer.c	FUNCTION_71
0x4003c38	              0x55	                                push rbp	      4845	buffer.c	FUNCTION_71
0x4003c39	              0x53	                                push rbx	      4845	buffer.c	FUNCTION_71
0x4003c3a	    0x4881ec880000	                           sub rsp, 0x88	      4845	buffer.c	FUNCTION_71
0x4003c41	    0x64488b042528	                mov rax, qword fs:[0x28]	      4845	buffer.c	FUNCTION_71
0x4003c4a	      0x4889442478	             mov qword [rsp + 0x78], rax	      4845	buffer.c	FUNCTION_71
0x4003c4f	            0x31c0	                            xor eax, eax	      4845	buffer.c	FUNCTION_71
0x4003c51	    0x488b05000000	            mov rax, qword [0x04003c58] 	      4867	buffer.c	FUNCTION_71	IF_1
0x4003c58	        0x897c2444	             mov dword [rsp + 0x44], edi	      4845	buffer.c	FUNCTION_71
0x4003c5c	        0x89742418	             mov dword [rsp + 0x18], esi	      4845	buffer.c	FUNCTION_71
0x4003c60	        0x89542414	             mov dword [rsp + 0x14], edx	      4845	buffer.c	FUNCTION_71
0x4003c64	    0x488b80800100	           mov rax, qword [rax + 0x180] 	      4867	buffer.c	FUNCTION_71	IF_1
0x4003c6b	          0x448b18	                   mov r11d, dword [rax]	      4867	buffer.c	FUNCTION_71	IF_1
0x4003c6e	          0x4585db	                         test r11d, r11d	      4867	buffer.c	FUNCTION_71	IF_1
0x4003c71	     0xf8e07080000	                           jle 0x400447e	      4867	buffer.c	FUNCTION_71	IF_1
0x4003c77	    0x8b0500000000	            mov eax, dword [0x04003c7d] 	      4861	buffer.c	FUNCTION_71
0x4003c7d	            0x89c3	                            mov ebx, eax	      4861	buffer.c	FUNCTION_71
0x4003c7f	        0x8944245c	             mov dword [rsp + 0x5c], eax	      4861	buffer.c	FUNCTION_71
0x4003c83	      0xe800000000	                          call 0x4003c88	      4873	buffer.c	FUNCTION_71	CALL_1
0x4003c88	    0x488b05000000	            mov rax, qword [0x04003c8f] 	      4875	buffer.c	FUNCTION_71
0x4003c8f	    0x488b80800100	           mov rax, qword [rax + 0x180] 	      4875	buffer.c	FUNCTION_71
0x4003c96	          0x448b30	                   mov r14d, dword [rax]	      4875	buffer.c	FUNCTION_71
0x4003c99	          0x4489f7	                           mov edi, r14d	      4876	buffer.c	FUNCTION_71	CALL_2
0x4003c9c	      0xe800000000	                          call 0x4003ca1	      4876	buffer.c	FUNCTION_71	CALL_2
0x4003ca1	          0x4885c0	                           test rax, rax	      4877	buffer.c	FUNCTION_71	IF_2
0x4003ca4	      0x4889442420	             mov qword [rsp + 0x20], rax	      4876	buffer.c	FUNCTION_71	CALL_2
0x4003ca9	     0xf84cf070000	                            je 0x400447e	      4877	buffer.c	FUNCTION_71	IF_2
0x4003caf	    0x488b05000000	            mov rax, qword [0x04003cb6] 	      4883	buffer.c	FUNCTION_71
0x4003cb6	    0xc70500000000	               mov dword [0x04003cc0], 1	      4890	buffer.c	FUNCTION_71
0x4003cc0	    0x4c8bb8800100	           mov r15, qword [rax + 0x180] 	      4883	buffer.c	FUNCTION_71
0x4003cc7	      0x4889442450	             mov qword [rsp + 0x50], rax	      4883	buffer.c	FUNCTION_71
0x4003ccc	    0x488b05000000	            mov rax, qword [0x04003cd3] 	      4887	buffer.c	FUNCTION_71
0x4003cd3	      0x4183471801	               add dword [r15 + 0x18], 1	      4884	buffer.c	FUNCTION_71
0x4003cd8	            0x85db	                           test ebx, ebx	      4900	buffer.c	FUNCTION_71	IF_3
0x4003cda	      0x4889442428	             mov qword [rsp + 0x28], rax	      4887	buffer.c	FUNCTION_71
0x4003cdf	            0x7e1d	                           jle 0x4003cfe	      4900	buffer.c	FUNCTION_71	IF_3
0x4003ce1	    0x488b3d000000	            mov rdi, qword [0x04003ce8] 	      4901	buffer.c	FUNCTION_71	CALL_3
0x4003ce8	      0xba01000000	                              mov edx, 1	      4901	buffer.c	FUNCTION_71	CALL_3
0x4003ced	      0xbe01000000	                              mov esi, 1	      4901	buffer.c	FUNCTION_71	CALL_3
0x4003cf2	      0xe800000000	                          call 0x4003cf7	      4901	buffer.c	FUNCTION_71	CALL_3
0x4003cf7	    0x488b05000000	            mov rax, qword [0x04003cfe] 	      4901	buffer.c	FUNCTION_71	CALL_3
0x4003cfe	      0x448b54245c	           mov r10d, dword [rsp + 0x5c] 	      4901	buffer.c	FUNCTION_71	CALL_3
0x4003d03	    0x48c744244800	               mov qword [rsp + 0x48], 0	      4901	buffer.c	FUNCTION_71	CALL_3
0x4003d0c	    0x48c744243800	               mov qword [rsp + 0x38], 0	      4901	buffer.c	FUNCTION_71	CALL_3
0x4003d15	    0xc74424580000	               mov dword [rsp + 0x58], 0	      4901	buffer.c	FUNCTION_71	CALL_3
0x4003d1d	          0x4585d2	                         test r10d, r10d	      4901	buffer.c	FUNCTION_71	CALL_3
0x4003d20	       0xf94442443	                  sete byte [rsp + 0x43]	      4901	buffer.c	FUNCTION_71	CALL_3
0x4003d25	           0xf1f00	                         nop dword [rax]	      4901	buffer.c	FUNCTION_71	CALL_3
0x4003d28	          0x488b00	                    mov rax, qword [rax]	      4904	buffer.c	FUNCTION_71	FOR_1
0x4003d2b	      0x4889442430	             mov qword [rsp + 0x30], rax	      4904	buffer.c	FUNCTION_71	FOR_1
0x4003d30	    0x488b05000000	            mov rax, qword [0x04003d37] 	      4905	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4003d37	          0x4885c0	                           test rax, rax	      4905	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4003d3a	        0x48890424	                    mov qword [rsp], rax	      4905	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4003d3e	     0xf8521010000	                           jne 0x4003e65	      4905	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4003d44	      0xe9e0020000	                           jmp 0x4004029	      4905	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4003d49	     0xf1f80000000	                         nop dword [rax]	      4905	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4003d50	        0x837d7801	               cmp dword [rbp + 0x78], 1	      4910	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x4003d54	     0xf8ec6030000	                           jle 0x4004120	      4910	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x4003d5a	        0x488b0424	                    mov rax, qword [rsp]	      4958	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4003d5e	    0x4489b0880100	           mov dword [rax + 0x188], r14d	      4958	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4003d65	    0x488b85101400	          mov rax, qword [rbp + 0x1410] 	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4003d6c	           0xfb600	                   movzx eax, byte [rax]	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4003d6f	            0x3c68	                            cmp al, 0x68	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4003d71	            0x7466	                            je 0x4003dd9	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4003d73	     0xf861f030000	                           jbe 0x4004098	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4003d79	            0x3c75	                            cmp al, 0x75	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4003d7b	            0x7420	                            je 0x4003d9d	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4003d7d	            0x3c77	                            cmp al, 0x77	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4003d7f	            0x741c	                            je 0x4003d9d	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4003d81	    0x8b3500000000	            mov esi, dword [0x04003d87] 	      5668	buffer.c	FUNCTION_83
0x4003d87	            0x85f6	                           test esi, esi	      5668	buffer.c	FUNCTION_83
0x4003d89	     0xf851f030000	                           jne 0x40040ae	      5668	buffer.c	FUNCTION_83
0x4003d8f	    0x8b0d00000000	            mov ecx, dword [0x04003d95] 	      5668	buffer.c	FUNCTION_83
0x4003d95	            0x85c9	                           test ecx, ecx	      5668	buffer.c	FUNCTION_83
0x4003d97	     0xf859e040000	                           jne 0x400423b	      5668	buffer.c	FUNCTION_83
0x4003d9d	        0x8b542418	            mov edx, dword [rsp + 0x18] 	      4962	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_9
0x4003da1	            0x85d2	                           test edx, edx	      4962	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_9
0x4003da3	     0xf8427030000	                            je 0x40040d0	      4962	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_9
0x4003da9	            0x3c68	                            cmp al, 0x68	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4003dab	            0x742c	                            je 0x4003dd9	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4003dad	     0xf86f6030000	                           jbe 0x40041a9	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4003db3	            0x3c75	                            cmp al, 0x75	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4003db5	            0x7418	                            je 0x4003dcf	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4003db7	            0x3c77	                            cmp al, 0x77	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4003db9	            0x7414	                            je 0x4003dcf	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4003dbb	    0x8b1500000000	            mov edx, dword [0x04003dc1] 	      5668	buffer.c	FUNCTION_83
0x4003dc1	            0x85d2	                           test edx, edx	      5668	buffer.c	FUNCTION_83
0x4003dc3	            0x7514	                           jne 0x4003dd9	      5668	buffer.c	FUNCTION_83
0x4003dc5	    0x8b0500000000	            mov eax, dword [0x04003dcb] 	      5668	buffer.c	FUNCTION_83
0x4003dcb	            0x85c0	                           test eax, eax	      5668	buffer.c	FUNCTION_83
0x4003dcd	            0x750a	                           jne 0x4003dd9	      5668	buffer.c	FUNCTION_83
0x4003dcf	        0x837d7801	               cmp dword [rbp + 0x78], 1	      4967	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_11
0x4003dd3	     0xf8ee2030000	                           jle 0x40041bb	      4967	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_11
0x4003dd9	    0x488b05000000	            mov rax, qword [0x04003de0] 	      4984	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x4003de0	    0x483905000000	            cmp qword [0x04003de7], rax 	      4984	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x4003de7	     0xf848e030000	                            je 0x400417b	      4984	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x4003ded	    0x488b85101400	          mov rax, qword [rbp + 0x1410] 	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4003df4	            0x31f6	                            xor esi, esi	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x4003df6	           0xfb600	                   movzx eax, byte [rax]	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4003df9	            0x3c68	                            cmp al, 0x68	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4003dfb	            0x7436	                            je 0x4003e33	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4003dfd	     0xf86fd020000	                           jbe 0x4004100	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4003e03	            0x3c75	                            cmp al, 0x75	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4003e05	            0x741c	                            je 0x4003e23	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4003e07	            0x3c77	                            cmp al, 0x77	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4003e09	            0x7418	                            je 0x4003e23	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4003e0b	    0x8b3500000000	            mov esi, dword [0x04003e11] 	      5668	buffer.c	FUNCTION_83
0x4003e11	            0x85f6	                           test esi, esi	      5668	buffer.c	FUNCTION_83
0x4003e13	     0xf85fd020000	                           jne 0x4004116	      5668	buffer.c	FUNCTION_83
0x4003e19	    0x8b0500000000	            mov eax, dword [0x04003e1f] 	      5668	buffer.c	FUNCTION_83
0x4003e1f	            0x85c0	                           test eax, eax	      5668	buffer.c	FUNCTION_83
0x4003e21	            0x7510	                           jne 0x4003e33	      5668	buffer.c	FUNCTION_83
0x4003e23	          0x4889ef	                            mov rdi, rbp	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x4003e26	      0xe800000000	                          call 0x4003e2b	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x4003e2b	            0x31f6	                            xor esi, esi	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x4003e2d	            0x85c0	                           test eax, eax	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x4003e2f	        0x400f94c6	                                sete sil	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x4003e33	        0x488b3c24	                    mov rdi, qword [rsp]	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x4003e37	      0xe800000000	                          call 0x4003e3c	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x4003e3c	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      4992	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	IF_18	CALL_20
0x4003e41	          0x4889df	                            mov rdi, rbx	      4992	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	IF_18	CALL_20
0x4003e44	      0xe800000000	                          call 0x4003e49	      4992	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	IF_18	CALL_20
0x4003e49	            0x85c0	                           test eax, eax	      4993	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	IF_18
0x4003e4b	          0x4889d8	                            mov rax, rbx	      4993	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	IF_18
0x4003e4e	    0x480f44050000	           cmove rax, qword [0x04003e56]	      4993	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	IF_18
0x4003e56	        0x48890424	                    mov qword [rsp], rax	      4993	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	IF_18
0x4003e5a	      0x48833c2400	                      cmp qword [rsp], 0	      4905	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4003e5f	     0xf84c4010000	                            je 0x4004029	      4905	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4003e65	        0x488b0424	                    mov rax, qword [rsp]	      4907	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4003e69	        0x488b6808	                mov rbp, qword [rax + 8]	      4908	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4003e6d	        0x488b4820	            mov rcx, qword [rax + 0x20] 	      4907	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4003e71	    0x4883bd880000	               cmp qword [rbp + 0x88], 0	      4909	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x4003e79	      0x48894c2408	                mov qword [rsp + 8], rcx	      4907	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4003e7e	     0xf8404020000	                            je 0x4004088	      4909	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x4003e84	      0x448b4c2414	            mov r9d, dword [rsp + 0x14] 	      4910	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x4003e89	          0x4585c9	                           test r9d, r9d	      4910	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x4003e8c	     0xf84befeffff	                            je 0x4003d50	      4910	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x4003e92	            0x31db	                            xor ebx, ebx	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4003e94	          0x4531ed	                          xor r13d, r13d	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4003e97	          0x4585f6	                         test r14d, r14d	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4003e9a	     0xf8e04060000	                           jle 0x40044a4	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4003ea0	      0x4489742410	            mov dword [rsp + 0x10], r14d	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4003ea5	            0xeb31	                           jmp 0x4003ed8	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4003ea7	    0x660f1f840000	                    nop word [rax + rax]	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4003eb0	      0xba01000000	                              mov edx, 1	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x4003eb5	          0x4c89e6	                            mov rsi, r12	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x4003eb8	      0xe800000000	                          call 0x4003ebd	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x4003ebd	            0xa801	                              test al, 1	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x4003ebf	     0xf85ab000000	                           jne 0x4003f70	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x4003ec5	        0x4183c501	                             add r13d, 1	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4003ec9	        0x4883c301	                              add rbx, 1	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4003ecd	      0x44396c2410	           cmp dword [rsp + 0x10], r13d 	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4003ed2	     0xf8ea0010000	                           jle 0x4004078	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4003ed8	          0x45392f	                   cmp dword [r15], r13d	      4918	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5
0x4003edb	            0x7ee8	                           jle 0x4003ec5	      4918	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5
0x4003edd	          0x4989d9	                             mov r9, rbx	      4919	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_4
0x4003ee0	        0x49c1e104	                               shl r9, 4	      4919	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_4
0x4003ee4	          0x4d89ce	                             mov r14, r9	      4919	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_4
0x4003ee7	        0x4d037710	             add r14, qword [r15 + 0x10]	      4919	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_4
0x4003eeb	        0x458b4608	                mov r8d, dword [r14 + 8]	      4919	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_4
0x4003eef	    0x443b85b80000	            cmp r8d, dword [rbp + 0xb8] 	      4919	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_4
0x4003ef6	            0x7478	                            je 0x4003f70	      4919	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_4
0x4003ef8	          0x4585c0	                           test r8d, r8d	      2713	buffer.c	FUNCTION_37	IF_1
0x4003efb	    0x4c8ba5880000	            mov r12, qword [rbp + 0x88] 	      4920	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	CALL_7
0x4003f02	            0x750e	                           jne 0x4003f12	      2713	buffer.c	FUNCTION_37	IF_1
0x4003f04	    0x488b05000000	            mov rax, qword [0x04003f0b] 	      2714	buffer.c	FUNCTION_37	IF_1
0x4003f0b	    0x448b80780100	           mov r8d, dword [rax + 0x178] 	      2714	buffer.c	FUNCTION_37	IF_1
0x4003f12	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	        33	stdio2.h	FUNCTION_116	CALL_1
0x4003f17	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_116	CALL_1
0x4003f1c	      0xba09000000	                              mov edx, 9	        33	stdio2.h	FUNCTION_116	CALL_1
0x4003f21	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_116	CALL_1
0x4003f26	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_116	CALL_1
0x4003f28	      0xe800000000	                          call 0x4003f2d	        33	stdio2.h	FUNCTION_116	CALL_1
0x4003f2d	      0x488d742460	                   lea rsi, [rsp + 0x60]	      2716	buffer.c	FUNCTION_37	CALL_1
0x4003f32	      0xbf00000000	                              mov edi, 0	      2716	buffer.c	FUNCTION_37	CALL_1
0x4003f37	      0xe800000000	                          call 0x4003f3c	      2716	buffer.c	FUNCTION_37	CALL_1
0x4003f3c	        0x488b4008	                mov rax, qword [rax + 8]	      2718	buffer.c	FUNCTION_37	IF_2	CALL_2
0x4003f40	          0x4885c0	                           test rax, rax	      2718	buffer.c	FUNCTION_37	IF_2	CALL_2
0x4003f43	            0x741d	                            je 0x4003f62	      2718	buffer.c	FUNCTION_37	IF_2	CALL_2
0x4003f45	    0x483d00000000	                              cmp rax, 0	      2718	buffer.c	FUNCTION_37	IF_2	CALL_2
0x4003f4b	            0x7415	                            je 0x4003f62	      2718	buffer.c	FUNCTION_37	IF_2	CALL_2
0x4003f4d	    0x483dbc000000	                           cmp rax, 0xbc	      4832	buffer.c	FUNCTION_70	IF_1
0x4003f53	            0x740d	                            je 0x4003f62	      4832	buffer.c	FUNCTION_70	IF_1
0x4003f55	        0x488b78dc	             mov rdi, qword [rax - 0x24]	      4832	buffer.c	FUNCTION_70	IF_1
0x4003f59	          0x4885ff	                           test rdi, rdi	      4832	buffer.c	FUNCTION_70	IF_1
0x4003f5c	     0xf854effffff	                           jne 0x4003eb0	      4832	buffer.c	FUNCTION_70	IF_1
0x4003f62	          0x498b3e	                    mov rdi, qword [r14]	      4833	buffer.c	FUNCTION_70	IF_1
0x4003f65	      0xe946ffffff	                           jmp 0x4003eb0	      4833	buffer.c	FUNCTION_70	IF_1
0x4003f6a	    0x660f1f440000	                    nop word [rax + rax]	      4833	buffer.c	FUNCTION_70	IF_1
0x4003f70	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      4925	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6
0x4003f75	    0x483b05000000	            cmp rax, qword [0x04003f7c] 	      4925	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6
0x4003f7c	      0x448b742410	           mov r14d, dword [rsp + 0x10] 	      4925	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6
0x4003f81	     0xf84e4020000	                            je 0x400426b	      4925	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6
0x4003f87	      0xb901000000	                              mov ecx, 1	      4925	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6
0x4003f8c	      0xb801000000	                              mov eax, 1	      4923	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5
0x4003f91	      0x48035c2420	             add rbx, qword [rsp + 0x20]	      4932	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8
0x4003f96	           0xfb613	                   movzx edx, byte [rbx]	      4932	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8
0x4003f99	            0x39d0	                            cmp eax, edx	      4932	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8
0x4003f9b	     0xf8ebf010000	                           jle 0x4004160	      4932	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8
0x4003fa1	          0x4585ed	                         test r13d, r13d	      4935	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9
0x4003fa4	            0x880b	                      mov byte [rbx], cl	      4934	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8
0x4003fa6	     0xf85a4010000	                           jne 0x4004150	      4935	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9
0x4003fac	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      4937	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9	IF_10
0x4003fb1	          0x4885c0	                           test rax, rax	      4937	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9	IF_10
0x4003fb4	            0x7407	                            je 0x4003fbd	      4937	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9	IF_10
0x4003fb6	    0x4489b0880100	           mov dword [rax + 0x188], r14d	      4938	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9	IF_10
0x4003fbd	    0x488b05000000	            mov rax, qword [0x04003fc4] 	      4940	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9
0x4003fc4	          0x4585f6	                         test r14d, r14d	      4940	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9
0x4003fc7	           0xf94c3	                                 sete bl	      4940	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9
0x4003fca	      0x4889442448	             mov qword [rsp + 0x48], rax	      4940	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9
0x4003fcf	        0x488b0424	                    mov rax, qword [rsp]	      4940	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9
0x4003fd3	      0x4889442438	             mov qword [rsp + 0x38], rax	      4940	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9
0x4003fd8	          0x4989c4	                            mov r12, rax	      4940	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_8	IF_9
0x4003fdb	    0x498bbc248001	           mov rdi, qword [r12 + 0x180] 	      4946	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12
0x4003fe3	          0x4939ff	                            cmp r15, rdi	      4946	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12
0x4003fe6	            0x7412	                            je 0x4003ffa	      4946	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12
0x4003fe8	      0xe800000000	                          call 0x4003fed	      4950	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12	CALL_8
0x4003fed	    0x4d89bc248001	            mov qword [r12 + 0x180], r15	      4951	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12
0x4003ff5	      0x4183471801	               add dword [r15 + 0x18], 1	      4952	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_12
0x4003ffa	        0x8b7c2414	            mov edi, dword [rsp + 0x14] 	      4960	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13
0x4003ffe	        0x488b0424	                    mov rax, qword [rsp]	      4958	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4004002	            0x85ff	                           test edi, edi	      4960	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13
0x4004004	    0x4489a8880100	           mov dword [rax + 0x188], r13d	      4958	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x400400b	            0x7508	                           jne 0x4004015	      4960	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13
0x400400d	            0x84db	                             test bl, bl	      4960	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13
0x400400f	     0xf8550fdffff	                           jne 0x4003d65	      4960	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13
0x4004015	      0x488b442408	                mov rax, qword [rsp + 8]	      4907	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x400401a	        0x48890424	                    mov qword [rsp], rax	      4907	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x400401e	      0x48833c2400	                      cmp qword [rsp], 0	      4905	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4004023	     0xf853cfeffff	                           jne 0x4003e65	      4905	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4004029	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	      5000	buffer.c	FUNCTION_71	FOR_1	IF_19
0x400402e	          0x4885db	                           test rbx, rbx	      5000	buffer.c	FUNCTION_71	FOR_1	IF_19
0x4004031	     0xf8476020000	                            je 0x40042ad	      5000	buffer.c	FUNCTION_71	FOR_1	IF_19
0x4004037	      0x807c244300	                cmp byte [rsp + 0x43], 0	      5000	buffer.c	FUNCTION_71	FOR_1	IF_19
0x400403c	     0xf856b020000	                           jne 0x40042ad	      5000	buffer.c	FUNCTION_71	FOR_1	IF_19
0x4004042	          0x4889df	                            mov rdi, rbx	      5004	buffer.c	FUNCTION_71	FOR_1	IF_20	CALL_21
0x4004045	      0xe800000000	                          call 0x400404a	      5004	buffer.c	FUNCTION_71	FOR_1	IF_20	CALL_21
0x400404a	            0x85c0	                           test eax, eax	      5005	buffer.c	FUNCTION_71	FOR_1	IF_20
0x400404c	          0x4889d8	                            mov rax, rbx	      5005	buffer.c	FUNCTION_71	FOR_1	IF_20
0x400404f	    0x480f44050000	           cmove rax, qword [0x04004057]	      5005	buffer.c	FUNCTION_71	FOR_1	IF_20
0x4004057	      0xba01000000	                              mov edx, 1	      5007	buffer.c	FUNCTION_71	FOR_1	CALL_22
0x400405c	      0xbe01000000	                              mov esi, 1	      5007	buffer.c	FUNCTION_71	FOR_1	CALL_22
0x4004061	          0x4889c7	                            mov rdi, rax	      5007	buffer.c	FUNCTION_71	FOR_1	CALL_22
0x4004064	      0xe800000000	                          call 0x4004069	      5007	buffer.c	FUNCTION_71	FOR_1	CALL_22
0x4004069	    0x488b05000000	            mov rax, qword [0x04004070] 	      5007	buffer.c	FUNCTION_71	FOR_1	CALL_22
0x4004070	      0xe9b3fcffff	                           jmp 0x4003d28	      5008	buffer.c	FUNCTION_71	FOR_1
0x4004075	           0xf1f00	                         nop dword [rax]	      5008	buffer.c	FUNCTION_71	FOR_1
0x4004078	      0x448b742410	           mov r14d, dword [rsp + 0x10] 	      5008	buffer.c	FUNCTION_71	FOR_1
0x400407d	           0xf94c3	                                 sete bl	      5008	buffer.c	FUNCTION_71	FOR_1
0x4004080	      0xe975ffffff	                           jmp 0x4003ffa	      5008	buffer.c	FUNCTION_71	FOR_1
0x4004085	           0xf1f00	                         nop dword [rax]	      5008	buffer.c	FUNCTION_71	FOR_1
0x4004088	          0x4589f5	                          mov r13d, r14d	      4875	buffer.c	FUNCTION_71
0x400408b	      0xbb01000000	                              mov ebx, 1	      4875	buffer.c	FUNCTION_71
0x4004090	      0xe965ffffff	                           jmp 0x4003ffa	      4875	buffer.c	FUNCTION_71
0x4004095	           0xf1f00	                         nop dword [rax]	      4875	buffer.c	FUNCTION_71
0x4004098	            0x3c64	                            cmp al, 0x64	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400409a	     0xf84fdfcffff	                            je 0x4003d9d	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x40040a0	    0x8b3500000000	            mov esi, dword [0x040040a6] 	      5668	buffer.c	FUNCTION_83
0x40040a6	            0x85f6	                           test esi, esi	      5668	buffer.c	FUNCTION_83
0x40040a8	     0xf84e1fcffff	                            je 0x4003d8f	      5668	buffer.c	FUNCTION_83
0x40040ae	            0x3c75	                            cmp al, 0x75	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x40040b0	     0xf8419fdffff	                            je 0x4003dcf	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x40040b6	            0x3c77	                            cmp al, 0x77	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x40040b8	     0xf8411fdffff	                            je 0x4003dcf	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x40040be	            0x3c64	                            cmp al, 0x64	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x40040c0	     0xf8513fdffff	                           jne 0x4003dd9	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x40040c6	      0xe904fdffff	                           jmp 0x4003dcf	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x40040cb	       0xf1f440000	                   nop dword [rax + rax]	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x40040d0	        0x837d7801	               cmp dword [rbp + 0x78], 1	      4962	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_9
0x40040d4	     0xf8eb4010000	                           jle 0x400428e	      4962	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_9
0x40040da	            0x3c68	                            cmp al, 0x68	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x40040dc	     0xf84f7fcffff	                            je 0x4003dd9	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x40040e2	     0xf8676010000	                           jbe 0x400425e	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x40040e8	            0x3c75	                            cmp al, 0x75	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x40040ea	     0xf84e9fcffff	                            je 0x4003dd9	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x40040f0	            0x3c77	                            cmp al, 0x77	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x40040f2	     0xf84e1fcffff	                            je 0x4003dd9	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x40040f8	      0xe9befcffff	                           jmp 0x4003dbb	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x40040fd	           0xf1f00	                         nop dword [rax]	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4004100	            0x3c64	                            cmp al, 0x64	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4004102	     0xf841bfdffff	                            je 0x4003e23	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4004108	    0x8b3500000000	            mov esi, dword [0x0400410e] 	      5668	buffer.c	FUNCTION_83
0x400410e	            0x85f6	                           test esi, esi	      5668	buffer.c	FUNCTION_83
0x4004110	     0xf8403fdffff	                            je 0x4003e19	      5668	buffer.c	FUNCTION_83
0x4004116	            0x31f6	                            xor esi, esi	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x4004118	      0xe916fdffff	                           jmp 0x4003e33	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x400411d	           0xf1f00	                         nop dword [rax]	      4989	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	ELSE_3	CALL_19
0x4004120	    0x486380ac0000	         movsxd rax, dword [rax + 0xac] 	      4911	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x4004127	    0x483b05000000	            cmp rax, qword [0x0400412e] 	      4911	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x400412e	     0xf8526fcffff	                           jne 0x4003d5a	      4911	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_4
0x4004134	            0x31db	                            xor ebx, ebx	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4004136	          0x4531ed	                          xor r13d, r13d	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4004139	        0x4183fe00	                             cmp r14d, 0	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x400413d	     0xf8f5dfdffff	                            jg 0x4003ea0	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4004143	           0xf94c3	                                 sete bl	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4004146	      0x448b6c2414	           mov r13d, dword [rsp + 0x14] 	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x400414b	      0xe9aafeffff	                           jmp 0x4003ffa	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4004150	          0x4539ee	                          cmp r14d, r13d	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4004153	        0x4c8b2424	                    mov r12, qword [rsp]	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4004157	           0xf94c3	                                 sete bl	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x400415a	      0xe97cfeffff	                           jmp 0x4003fdb	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x400415f	              0x90	                                     nop	      4916	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3
0x4004160	      0x448b442414	            mov r8d, dword [rsp + 0x14] 	      4943	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	ELSE_2	IF_11
0x4004165	          0x4585c0	                           test r8d, r8d	      4943	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	ELSE_2	IF_11
0x4004168	            0x74e6	                            je 0x4004150	      4943	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	ELSE_2	IF_11
0x400416a	          0x4589f5	                          mov r13d, r14d	      4875	buffer.c	FUNCTION_71
0x400416d	      0xbb01000000	                              mov ebx, 1	      4875	buffer.c	FUNCTION_71
0x4004172	        0x4c8b2424	                    mov r12, qword [rsp]	      4875	buffer.c	FUNCTION_71
0x4004176	      0xe960feffff	                           jmp 0x4003fdb	      4875	buffer.c	FUNCTION_71
0x400417b	    0x488b05000000	            mov rax, qword [0x04004182] 	      4985	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x4004182	        0x48833800	                      cmp qword [rax], 0	      4985	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x4004186	            0x740b	                            je 0x4004193	      4985	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x4004188	      0x807c244300	                cmp byte [rsp + 0x43], 0	      4985	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x400418d	     0xf845afcffff	                            je 0x4003ded	      4985	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x4004193	      0x488b442408	                mov rax, qword [rsp + 8]	      4907	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x4004198	    0xc74424580100	               mov dword [rsp + 0x58], 1	      4986	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_17
0x40041a0	        0x48890424	                    mov qword [rsp], rax	      4907	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x40041a4	      0xe9b1fcffff	                           jmp 0x4003e5a	      4907	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x40041a9	            0x3c64	                            cmp al, 0x64	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x40041ab	     0xf850afcffff	                           jne 0x4003dbb	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x40041b1	        0x837d7801	               cmp dword [rbp + 0x78], 1	      4967	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_11
0x40041b5	     0xf8f1efcffff	                            jg 0x4003dd9	      4967	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_11
0x40041bb	          0x4889ef	                            mov rdi, rbp	      4968	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_12
0x40041be	      0xe800000000	                          call 0x40041c3	      4968	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_12
0x40041c3	            0x85c0	                           test eax, eax	      4968	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_12
0x40041c5	     0xf840efcffff	                            je 0x4003dd9	      4968	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_12
0x40041cb	            0x31f6	                            xor esi, esi	      4974	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_14
0x40041cd	          0x4889ef	                            mov rdi, rbp	      4974	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_14
0x40041d0	    0x448ba5b80000	           mov r12d, dword [rbp + 0xb8] 	       362	buffer.c	FUNCTION_3
0x40041d7	    0x8b1d00000000	            mov ebx, dword [0x040041dd] 	       363	buffer.c	FUNCTION_3
0x40041dd	      0xe800000000	                          call 0x40041e2	      4974	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	CALL_14
0x40041e2	        0x488b3c24	                    mov rdi, qword [rsp]	      4977	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16	CALL_16
0x40041e6	      0xe800000000	                          call 0x40041eb	      4977	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16	CALL_16
0x40041eb	            0x85c0	                           test eax, eax	      4977	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16	CALL_16
0x40041ed	            0x743c	                            je 0x400422b	      4977	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16	CALL_16
0x40041ef	    0x3b1d00000000	            cmp ebx, dword [0x040041f5] 	       377	buffer.c	FUNCTION_4	CALL_1
0x40041f5	     0xf84defbffff	                            je 0x4003dd9	       377	buffer.c	FUNCTION_4	CALL_1
0x40041fb	    0x488b05000000	            mov rax, qword [0x04004202] 	       392	buffer.c	FUNCTION_5	FOR_1
0x4004202	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x4004205	            0x7512	                           jne 0x4004219	       392	buffer.c	FUNCTION_5	FOR_1
0x4004207	            0xeb22	                           jmp 0x400422b	       392	buffer.c	FUNCTION_5	FOR_1
0x4004209	     0xf1f80000000	                         nop dword [rax]	       392	buffer.c	FUNCTION_5	FOR_1
0x4004210	        0x488b4070	            mov rax, qword [rax + 0x70] 	       392	buffer.c	FUNCTION_5	FOR_1
0x4004214	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x4004217	            0x7412	                            je 0x400422b	       392	buffer.c	FUNCTION_5	FOR_1
0x4004219	          0x4839c5	                            cmp rbp, rax	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x400421c	            0x75f2	                           jne 0x4004210	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x400421e	    0x443ba5b80000	           cmp r12d, dword [rbp + 0xb8] 	       378	buffer.c	FUNCTION_4
0x4004225	     0xf84aefbffff	                            je 0x4003dd9	       378	buffer.c	FUNCTION_4
0x400422b	    0x488b05000000	            mov rax, qword [0x04004232] 	      4979	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16
0x4004232	        0x48890424	                    mov qword [rsp], rax	      4979	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16
0x4004236	      0xe91ffcffff	                           jmp 0x4003e5a	      4979	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	IF_15	IF_16
0x400423b	            0x3c68	                            cmp al, 0x68	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400423d	     0xf8496fbffff	                            je 0x4003dd9	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4004243	     0xf8675feffff	                           jbe 0x40040be	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4004249	            0x3c75	                            cmp al, 0x75	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400424b	     0xf847efbffff	                            je 0x4003dcf	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4004251	            0x3c77	                            cmp al, 0x77	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4004253	     0xf8580fbffff	                           jne 0x4003dd9	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4004259	      0xe971fbffff	                           jmp 0x4003dcf	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400425e	            0x3c64	                            cmp al, 0x64	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4004260	     0xf8473fbffff	                            je 0x4003dd9	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4004266	      0xe950fbffff	                           jmp 0x4003dbb	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400426b	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      4928	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6	IF_7
0x4004270	        0x488b1424	                    mov rdx, qword [rsp]	      4928	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6	IF_7
0x4004274	          0x4839d0	                            cmp rax, rdx	      4928	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6	IF_7
0x4004277	           0xf94c1	                                 sete cl	      4928	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6	IF_7
0x400427a	          0x83c102	                              add ecx, 2	      4928	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6	IF_7
0x400427d	          0x4839d0	                            cmp rax, rdx	      4928	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6	IF_7
0x4004280	           0xf94c0	                                 sete al	      4928	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6	IF_7
0x4004283	           0xfb6c0	                           movzx eax, al	      4928	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6	IF_7
0x4004286	          0x83c002	                              add eax, 2	      4928	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6	IF_7
0x4004289	      0xe903fdffff	                           jmp 0x4003f91	      4928	buffer.c	FUNCTION_71	FOR_1	FOR_2	ELSE_1	FOR_3	IF_5	IF_6	IF_7
0x400428e	          0x4889ef	                            mov rdi, rbp	      4963	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_10
0x4004291	      0xe800000000	                          call 0x4004296	      4963	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_10
0x4004296	            0x85c0	                           test eax, eax	      4963	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_10
0x4004298	     0xf8577fdffff	                           jne 0x4004015	      4963	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_10
0x400429e	    0x488b85101400	          mov rax, qword [rbp + 0x1410] 	      4963	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_10
0x40042a5	           0xfb600	                   movzx eax, byte [rax]	      4963	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_10
0x40042a8	      0xe9fcfaffff	                           jmp 0x4003da9	      4963	buffer.c	FUNCTION_71	FOR_1	FOR_2	IF_13	IF_14	CALL_10
0x40042ad	        0x8b442444	            mov eax, dword [rsp + 0x44] 	      5014	buffer.c	FUNCTION_71	IF_21
0x40042b1	          0x4139c6	                           cmp r14d, eax	      5014	buffer.c	FUNCTION_71	IF_21
0x40042b4	     0xf8cf9010000	                            jl 0x40044b3	      5014	buffer.c	FUNCTION_71	IF_21
0x40042ba	            0x85c0	                           test eax, eax	      5014	buffer.c	FUNCTION_71	IF_21
0x40042bc	     0xf8ef1010000	                           jle 0x40044b3	      5014	buffer.c	FUNCTION_71	IF_21
0x40042c2	    0x488b05000000	            mov rax, qword [0x040042c9] 	      5020	buffer.c	FUNCTION_71
0x40042c9	    0x488b3d000000	            mov rdi, qword [0x040042d0] 	      5022	buffer.c	FUNCTION_71	CALL_23
0x40042d0	            0x31f6	                            xor esi, esi	      5022	buffer.c	FUNCTION_71	CALL_23
0x40042d2	    0x830500000000	               add dword [0x040042d9], 1	      5018	buffer.c	FUNCTION_71
0x40042d9	    0x830500000000	               add dword [0x040042e0], 1	      5019	buffer.c	FUNCTION_71
0x40042e0	        0x48890424	                    mov qword [rsp], rax	      5020	buffer.c	FUNCTION_71
0x40042e4	    0x488b05000000	            mov rax, qword [0x040042eb] 	      5021	buffer.c	FUNCTION_71
0x40042eb	      0x4889442408	                mov qword [rsp + 8], rax	      5021	buffer.c	FUNCTION_71
0x40042f0	      0xe800000000	                          call 0x40042f5	      5022	buffer.c	FUNCTION_71	CALL_23
0x40042f5	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x40042f9	            0x85c0	                           test eax, eax	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x40042fb	            0x7411	                            je 0x400430e	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x40042fd	    0x488b05000000	            mov rax, qword [0x04004304] 	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x4004304	        0x48833801	                      cmp qword [rax], 1	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x4004308	     0xf84f0030000	                            je 0x40046fe	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x400430e	        0x8b442444	            mov eax, dword [rsp + 0x44] 	      5029	buffer.c	FUNCTION_71	FOR_4
0x4004312	            0x85c0	                           test eax, eax	      5029	buffer.c	FUNCTION_71	FOR_4
0x4004314	     0xf8ef0000000	                           jle 0x400440a	      5029	buffer.c	FUNCTION_71	FOR_4
0x400431a	          0x4585f6	                         test r14d, r14d	      5029	buffer.c	FUNCTION_71	FOR_4
0x400431d	     0xf8ee7000000	                           jle 0x400440a	      5029	buffer.c	FUNCTION_71	FOR_4
0x4004323	    0x8b0500000000	            mov eax, dword [0x04004329] 	      5029	buffer.c	FUNCTION_71	FOR_4
0x4004329	            0x85c0	                           test eax, eax	      5029	buffer.c	FUNCTION_71	FOR_4
0x400432b	     0xf85d9000000	                           jne 0x400440a	      5029	buffer.c	FUNCTION_71	FOR_4
0x4004331	      0x488b6c2420	            mov rbp, qword [rsp + 0x20] 	      5029	buffer.c	FUNCTION_71	FOR_4
0x4004336	      0x448b64245c	           mov r12d, dword [rsp + 0x5c] 	        33	stdio2.h	FUNCTION_116	CALL_1
0x400433b	          0x4531ed	                          xor r13d, r13d	      5029	buffer.c	FUNCTION_71	FOR_4
0x400433e	    0xc74424100100	               mov dword [rsp + 0x10], 1	      5029	buffer.c	FUNCTION_71	FOR_4
0x4004346	            0x31db	                            xor ebx, ebx	      5029	buffer.c	FUNCTION_71	FOR_4
0x4004348	     0xf1f84000000	                   nop dword [rax + rax]	      5029	buffer.c	FUNCTION_71	FOR_4
0x4004350	    0x4981ff000000	                              cmp r15, 0	      5031	buffer.c	FUNCTION_71	FOR_4	IF_23
0x4004357	     0xf84d4020000	                            je 0x4004631	      5031	buffer.c	FUNCTION_71	FOR_4	IF_23
0x400435d	        0x807d0000	                       cmp byte [rbp], 0	      5033	buffer.c	FUNCTION_71	FOR_4	IF_24
0x4004361	     0xf8456010000	                            je 0x40044bd	      5033	buffer.c	FUNCTION_71	FOR_4	IF_24
0x4004367	    0x488b35000000	            mov rsi, qword [0x0400436e] 	      5036	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25
0x400436e	    0x3b9e88010000	           cmp ebx, dword [rsi + 0x188] 	      5036	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25
0x4004374	            0x744a	                            je 0x40043c0	      5036	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25
0x4004376	    0x488b3d000000	            mov rdi, qword [0x0400437d] 	      5038	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5
0x400437d	          0x4885ff	                           test rdi, rdi	      5038	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5
0x4004380	            0x750f	                           jne 0x4004391	      5038	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5
0x4004382	            0xeb3c	                           jmp 0x40043c0	      5038	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5
0x4004384	         0xf1f4000	                         nop dword [rax]	      5038	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5
0x4004388	        0x488b7f20	            mov rdi, qword [rdi + 0x20] 	      5038	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5
0x400438c	          0x4885ff	                           test rdi, rdi	      5038	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5
0x400438f	            0x742f	                            je 0x40043c0	      5038	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5
0x4004391	    0x3b9f88010000	           cmp ebx, dword [rdi + 0x188] 	      5040	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26
0x4004397	            0x75ef	                           jne 0x4004388	      5040	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26
0x4004399	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      5042	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	IF_27
0x400439d	            0x85c0	                           test eax, eax	      5042	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	IF_27
0x400439f	     0xf84ac020000	                            je 0x4004651	      5042	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	IF_27
0x40043a5	    0x488b05000000	            mov rax, qword [0x040043ac] 	      5045	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	IF_27
0x40043ac	      0x48897c2438	             mov qword [rsp + 0x38], rdi	      5045	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	IF_27
0x40043b1	      0x4889442448	             mov qword [rsp + 0x48], rax	      5045	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	IF_27
0x40043b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5045	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	IF_27
0x40043c0	      0xe800000000	                          call 0x40043c5	      5086	buffer.c	FUNCTION_71	FOR_4	CALL_32
0x40043c5	          0x4585e4	                         test r12d, r12d	      5089	buffer.c	FUNCTION_71	FOR_4	IF_33	CALL_33
0x40043c8	            0x7e1c	                           jle 0x40043e6	      5089	buffer.c	FUNCTION_71	FOR_4	IF_33	CALL_33
0x40043ca	            0x31ff	                            xor edi, edi	      5089	buffer.c	FUNCTION_71	FOR_4	IF_33	CALL_33
0x40043cc	      0xe800000000	                          call 0x40043d1	      5089	buffer.c	FUNCTION_71	FOR_4	IF_33	CALL_33
0x40043d1	            0x4898	                                    cdqe	      5089	buffer.c	FUNCTION_71	FOR_4	IF_33	CALL_33
0x40043d3	    0x483b05000000	            cmp rax, qword [0x040043da] 	      5089	buffer.c	FUNCTION_71	FOR_4	IF_33	CALL_33
0x40043da	            0x7f0a	                            jg 0x40043e6	      5089	buffer.c	FUNCTION_71	FOR_4	IF_33	CALL_33
0x40043dc	    0xc70500000000	         mov dword [0x040043e6], 0x270f 	      5090	buffer.c	FUNCTION_71	FOR_4	IF_33
0x40043e6	          0x83c301	                              add ebx, 1	      5029	buffer.c	FUNCTION_71	FOR_4
0x40043e9	        0x395c2444	            cmp dword [rsp + 0x44], ebx 	      5029	buffer.c	FUNCTION_71	FOR_4
0x40043ed	            0x7e1b	                           jle 0x400440a	      5029	buffer.c	FUNCTION_71	FOR_4
0x40043ef	          0x4139de	                           cmp r14d, ebx	      5029	buffer.c	FUNCTION_71	FOR_4
0x40043f2	            0x7e16	                           jle 0x400440a	      5029	buffer.c	FUNCTION_71	FOR_4
0x40043f4	    0x8b0500000000	            mov eax, dword [0x040043fa] 	      5029	buffer.c	FUNCTION_71	FOR_4
0x40043fa	        0x4983c510	                           add r13, 0x10	      5029	buffer.c	FUNCTION_71	FOR_4
0x40043fe	        0x4883c501	                              add rbp, 1	      5029	buffer.c	FUNCTION_71	FOR_4
0x4004402	            0x85c0	                           test eax, eax	      5029	buffer.c	FUNCTION_71	FOR_4
0x4004404	     0xf8446ffffff	                            je 0x4004350	      5029	buffer.c	FUNCTION_71	FOR_4
0x400440a	          0x4c89ff	                            mov rdi, r15	      5094	buffer.c	FUNCTION_71	CALL_34
0x400440d	      0xe800000000	                          call 0x4004412	      5094	buffer.c	FUNCTION_71	CALL_34
0x4004412	      0x488b442408	                mov rax, qword [rsp + 8]	      5099	buffer.c	FUNCTION_71	IF_34
0x4004417	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      5099	buffer.c	FUNCTION_71	IF_34
0x400441c	    0x832d00000000	               sub dword [0x04004423], 1	      5096	buffer.c	FUNCTION_71
0x4004423	          0x4839c8	                            cmp rax, rcx	      5099	buffer.c	FUNCTION_71	IF_34
0x4004426	            0x7421	                            je 0x4004449	      5099	buffer.c	FUNCTION_71	IF_34
0x4004428	          0x4889c7	                            mov rdi, rax	      5101	buffer.c	FUNCTION_71	IF_34	IF_35	CALL_35
0x400442b	      0xe800000000	                          call 0x4004430	      5101	buffer.c	FUNCTION_71	IF_34	IF_35	CALL_35
0x4004430	            0x85c0	                           test eax, eax	      5101	buffer.c	FUNCTION_71	IF_34	IF_35	CALL_35
0x4004432	     0xf85ad020000	                           jne 0x40046e5	      5101	buffer.c	FUNCTION_71	IF_34	IF_35	CALL_35
0x4004438	        0x488b3c24	                    mov rdi, qword [rsp]	      5103	buffer.c	FUNCTION_71	IF_34	IF_36	CALL_37
0x400443c	      0xe800000000	                          call 0x4004441	      5103	buffer.c	FUNCTION_71	IF_34	IF_36	CALL_37
0x4004441	            0x85c0	                           test eax, eax	      5103	buffer.c	FUNCTION_71	IF_34	IF_36	CALL_37
0x4004443	     0xf858c020000	                           jne 0x40046d5	      5103	buffer.c	FUNCTION_71	IF_34	IF_36	CALL_37
0x4004449	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      5107	buffer.c	FUNCTION_71	IF_37	CALL_39
0x400444e	      0xe800000000	                          call 0x4004453	      5107	buffer.c	FUNCTION_71	IF_37	CALL_39
0x4004453	            0x85c0	                           test eax, eax	      5107	buffer.c	FUNCTION_71	IF_37	CALL_39
0x4004455	     0xf8561020000	                           jne 0x40046bc	      5107	buffer.c	FUNCTION_71	IF_37	CALL_39
0x400445b	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      5109	buffer.c	FUNCTION_71	IF_38	CALL_41
0x4004460	      0xe800000000	                          call 0x4004465	      5109	buffer.c	FUNCTION_71	IF_38	CALL_41
0x4004465	            0x85c0	                           test eax, eax	      5109	buffer.c	FUNCTION_71	IF_38	CALL_41
0x4004467	     0xf853e020000	                           jne 0x40046ab	      5109	buffer.c	FUNCTION_71	IF_38	CALL_41
0x400446d	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      5113	buffer.c	FUNCTION_71	CALL_43
0x4004472	    0x832d00000000	               sub dword [0x04004479], 1	      5112	buffer.c	FUNCTION_71
0x4004479	      0xe800000000	                          call 0x400447e	      5113	buffer.c	FUNCTION_71	CALL_43
0x400447e	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      5114	buffer.c	FUNCTION_71
0x4004483	    0x644833042528	                xor rax, qword fs:[0x28]	      5114	buffer.c	FUNCTION_71
0x400448c	     0xf85b9020000	                           jne 0x400474b	      5114	buffer.c	FUNCTION_71
0x4004492	    0x4881c4880000	                           add rsp, 0x88	      5114	buffer.c	FUNCTION_71
0x4004499	              0x5b	                                 pop rbx	      5114	buffer.c	FUNCTION_71
0x400449a	              0x5d	                                 pop rbp	      5114	buffer.c	FUNCTION_71
0x400449b	            0x415c	                                 pop r12	      5114	buffer.c	FUNCTION_71
0x400449d	            0x415d	                                 pop r13	      5114	buffer.c	FUNCTION_71
0x400449f	            0x415e	                                 pop r14	      5114	buffer.c	FUNCTION_71
0x40044a1	            0x415f	                                 pop r15	      5114	buffer.c	FUNCTION_71
0x40044a3	              0xc3	                                     ret	      5114	buffer.c	FUNCTION_71
0x40044a4	    0xc78088010000	              mov dword [rax + 0x188], 0	      4958	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x40044ae	      0xe962fbffff	                           jmp 0x4004015	      4958	buffer.c	FUNCTION_71	FOR_1	FOR_2
0x40044b3	      0x4489742444	            mov dword [rsp + 0x44], r14d	      4875	buffer.c	FUNCTION_71
0x40044b8	      0xe905feffff	                           jmp 0x40042c2	      4875	buffer.c	FUNCTION_71
0x40044bd	      0x837c241001	               cmp dword [rsp + 0x10], 1	      5054	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28
0x40044c2	     0xf85f8feffff	                           jne 0x40043c0	      5054	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28
0x40044c8	      0x448b5c2458	           mov r11d, dword [rsp + 0x58] 	      5056	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29
0x40044cd	          0x4585db	                         test r11d, r11d	      5056	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29
0x40044d0	     0xf8485010000	                            je 0x400465b	      5056	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29
0x40044d6	    0x832d00000000	               sub dword [0x040044dd], 1	      5066	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6
0x40044dd	    0x4c8b1d000000	            mov r11, qword [0x040044e4] 	      5071	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6
0x40044e4	            0x85db	                           test ebx, ebx	      5072	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6	IF_31
0x40044e6	    0x41899b880100	            mov dword [r11 + 0x188], ebx	      5071	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6
0x40044ed	            0x7511	                           jne 0x4004500	      5072	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6	IF_31
0x40044ef	    0x488b05000000	            mov rax, qword [0x040044f6] 	      5075	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6	IF_31
0x40044f6	      0x4c895c2438	             mov qword [rsp + 0x38], r11	      5075	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6	IF_31
0x40044fb	      0x4889442448	             mov qword [rsp + 0x48], rax	      5075	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	ELSE_6	IF_31
0x4004500	        0x498b7b08	                mov rdi, qword [r11 + 8]	      5079	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_30
0x4004504	    0x41b905000000	                              mov r9d, 5	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400450a	    0x488b87101400	          mov rax, qword [rdi + 0x1410] 	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4004511	           0xfb600	                   movzx eax, byte [rax]	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4004514	            0x3c68	                            cmp al, 0x68	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4004516	            0x7448	                            je 0x4004560	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4004518	     0xf8678010000	                           jbe 0x4004696	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400451e	            0x3c75	                            cmp al, 0x75	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4004520	            0x7422	                            je 0x4004544	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4004522	            0x3c77	                            cmp al, 0x77	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4004524	            0x741e	                            je 0x4004544	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4004526	    0x448b15000000	           mov r10d, dword [0x0400452d] 	      5668	buffer.c	FUNCTION_83
0x400452d	    0x41b905000000	                              mov r9d, 5	      5668	buffer.c	FUNCTION_83
0x4004533	          0x4585d2	                         test r10d, r10d	      5668	buffer.c	FUNCTION_83
0x4004536	            0x7528	                           jne 0x4004560	      5668	buffer.c	FUNCTION_83
0x4004538	    0x448b05000000	            mov r8d, dword [0x0400453f] 	      5668	buffer.c	FUNCTION_83
0x400453f	          0x4585c0	                           test r8d, r8d	      5668	buffer.c	FUNCTION_83
0x4004542	            0x751c	                           jne 0x4004560	      5668	buffer.c	FUNCTION_83
0x4004544	      0x4c895c2418	             mov qword [rsp + 0x18], r11	      5668	buffer.c	FUNCTION_83
0x4004549	      0xe800000000	                          call 0x400454e	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0x400454e	          0x4531c9	                            xor r9d, r9d	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0x4004551	      0x4c8b5c2418	            mov r11, qword [rsp + 0x18] 	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0x4004556	            0x85c0	                           test eax, eax	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0x4004558	        0x410f95c1	                               setne r9b	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0x400455c	        0x4183c104	                              add r9d, 4	      5080	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_31
0x4004560	          0x4d89ea	                            mov r10, r13	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x4004563	        0x4d035710	             add r10, qword [r15 + 0x10]	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x4004567	        0x458b4208	                mov r8d, dword [r10 + 8]	      4831	buffer.c	FUNCTION_70	CALL_1
0x400456b	          0x4585c0	                           test r8d, r8d	      2713	buffer.c	FUNCTION_37	IF_1
0x400456e	            0x750e	                           jne 0x400457e	      2713	buffer.c	FUNCTION_37	IF_1
0x4004570	    0x488b05000000	            mov rax, qword [0x04004577] 	      2714	buffer.c	FUNCTION_37	IF_1
0x4004577	    0x448b80780100	           mov r8d, dword [rax + 0x178] 	      2714	buffer.c	FUNCTION_37	IF_1
0x400457e	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	        33	stdio2.h	FUNCTION_116	CALL_1
0x4004583	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_116	CALL_1
0x4004588	      0xba09000000	                              mov edx, 9	        33	stdio2.h	FUNCTION_116	CALL_1
0x400458d	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_116	CALL_1
0x4004592	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_116	CALL_1
0x4004594	      0x44894c2430	             mov dword [rsp + 0x30], r9d	        33	stdio2.h	FUNCTION_116	CALL_1
0x4004599	      0x4c89542428	             mov qword [rsp + 0x28], r10	        33	stdio2.h	FUNCTION_116	CALL_1
0x400459e	      0x4c895c2418	             mov qword [rsp + 0x18], r11	        33	stdio2.h	FUNCTION_116	CALL_1
0x40045a3	      0xe800000000	                          call 0x40045a8	        33	stdio2.h	FUNCTION_116	CALL_1
0x40045a8	      0x488d742460	                   lea rsi, [rsp + 0x60]	      2716	buffer.c	FUNCTION_37	CALL_1
0x40045ad	      0xbf00000000	                              mov edi, 0	      2716	buffer.c	FUNCTION_37	CALL_1
0x40045b2	      0xe800000000	                          call 0x40045b7	      2716	buffer.c	FUNCTION_37	CALL_1
0x40045b7	        0x488b4008	                mov rax, qword [rax + 8]	      2718	buffer.c	FUNCTION_37	IF_2	CALL_2
0x40045bb	      0x4c8b5c2418	            mov r11, qword [rsp + 0x18] 	      2718	buffer.c	FUNCTION_37	IF_2	CALL_2
0x40045c0	      0x4c8b542428	            mov r10, qword [rsp + 0x28] 	      2718	buffer.c	FUNCTION_37	IF_2	CALL_2
0x40045c5	      0x448b4c2430	            mov r9d, dword [rsp + 0x30] 	      2718	buffer.c	FUNCTION_37	IF_2	CALL_2
0x40045ca	    0x483d00000000	                              cmp rax, 0	      2718	buffer.c	FUNCTION_37	IF_2	CALL_2
0x40045d0	     0xf84cd000000	                            je 0x40046a3	      2718	buffer.c	FUNCTION_37	IF_2	CALL_2
0x40045d6	          0x4885c0	                           test rax, rax	      2718	buffer.c	FUNCTION_37	IF_2	CALL_2
0x40045d9	     0xf84c4000000	                            je 0x40046a3	      2718	buffer.c	FUNCTION_37	IF_2	CALL_2
0x40045df	    0x483dbc000000	                           cmp rax, 0xbc	      4832	buffer.c	FUNCTION_70	IF_1
0x40045e5	     0xf84b8000000	                            je 0x40046a3	      4832	buffer.c	FUNCTION_70	IF_1
0x40045eb	        0x488b70dc	             mov rsi, qword [rax - 0x24]	      4832	buffer.c	FUNCTION_70	IF_1
0x40045ef	          0x4885f6	                           test rsi, rsi	      4832	buffer.c	FUNCTION_70	IF_1
0x40045f2	     0xf84ab000000	                            je 0x40046a3	      4832	buffer.c	FUNCTION_70	IF_1
0x40045f8	        0x4883ec08	                              sub rsp, 8	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x40045fc	            0x31c9	                            xor ecx, ecx	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x40045fe	            0x31ff	                            xor edi, edi	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x4004600	            0x4153	                                push r11	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x4004602	            0x31d2	                            xor edx, edx	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x4004604	    0x41b801000000	                              mov r8d, 1	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x400460a	      0xe800000000	                          call 0x400460f	      5077	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	CALL_29
0x400460f	              0x59	                                 pop rcx	      5082	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_32
0x4004610	              0x5e	                                 pop rsi	      5082	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_32
0x4004611	        0x8b7c2458	            mov edi, dword [rsp + 0x58] 	      5082	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_32
0x4004615	            0x85ff	                           test edi, edi	      5082	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_32
0x4004617	     0xf84a3fdffff	                            je 0x40043c0	      5082	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_32
0x400461d	    0x830500000000	               add dword [0x04004624], 1	      5083	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_32
0x4004624	    0xc74424580000	               mov dword [rsp + 0x58], 0	      5084	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28
0x400462c	      0xe98ffdffff	                           jmp 0x40043c0	      5084	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28
0x4004631	    0x8b0500000000	            mov eax, dword [0x04004637] 	      5031	buffer.c	FUNCTION_71	FOR_4	IF_23
0x4004637	          0x83e801	                              sub eax, 1	      5031	buffer.c	FUNCTION_71	FOR_4	IF_23
0x400463a	            0x39c3	                            cmp ebx, eax	      5031	buffer.c	FUNCTION_71	FOR_4	IF_23
0x400463c	     0xf851bfdffff	                           jne 0x400435d	      5031	buffer.c	FUNCTION_71	FOR_4	IF_23
0x4004642	    0xc70500000000	               mov dword [0x0400464c], 1	      5032	buffer.c	FUNCTION_71	FOR_4	IF_23
0x400464c	      0xe90cfdffff	                           jmp 0x400435d	      5032	buffer.c	FUNCTION_71	FOR_4	IF_23
0x4004651	      0xe800000000	                          call 0x4004656	      5048	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	CALL_25
0x4004656	      0xe965fdffff	                           jmp 0x40043c0	      5048	buffer.c	FUNCTION_71	FOR_4	IF_24	IF_25	FOR_5	IF_26	CALL_25
0x400465b	    0x8b1500000000	            mov edx, dword [0x04004661] 	      5058	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29
0x4004661	            0x31ff	                            xor edi, edi	      5060	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29	CALL_26
0x4004663	      0xbe21000000	                           mov esi, 0x21	      5060	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29	CALL_26
0x4004668	    0xc70500000000	               mov dword [0x04004672], 1	      5059	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29
0x4004672	        0x89542418	             mov dword [rsp + 0x18], edx	      5058	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29
0x4004676	      0xe800000000	                          call 0x400467b	      5060	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29	CALL_26
0x400467b	        0x8b542418	            mov edx, dword [rsp + 0x18] 	      5061	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29
0x400467f	            0x85c0	                           test eax, eax	      5062	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29	IF_30
0x4004681	        0x89442410	             mov dword [rsp + 0x10], eax	      5060	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29	CALL_26
0x4004685	    0x891500000000	            mov dword [0x0400468b], edx 	      5061	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29
0x400468b	     0xf8455fdffff	                            je 0x40043e6	      5062	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29	IF_30
0x4004691	      0xe947feffff	                           jmp 0x40044dd	      5062	buffer.c	FUNCTION_71	FOR_4	ELSE_5	IF_28	IF_29	IF_30
0x4004696	            0x3c64	                            cmp al, 0x64	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4004698	     0xf8588feffff	                           jne 0x4004526	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400469e	      0xe9a1feffff	                           jmp 0x4004544	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x40046a3	          0x498b32	                    mov rsi, qword [r10]	      4833	buffer.c	FUNCTION_70	IF_1
0x40046a6	      0xe94dffffff	                           jmp 0x40045f8	      4833	buffer.c	FUNCTION_70	IF_1
0x40046ab	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      5110	buffer.c	FUNCTION_71	CALL_42
0x40046b0	            0x31f6	                            xor esi, esi	      5110	buffer.c	FUNCTION_71	CALL_42
0x40046b2	      0xe800000000	                          call 0x40046b7	      5110	buffer.c	FUNCTION_71	CALL_42
0x40046b7	      0xe9b1fdffff	                           jmp 0x400446d	      5110	buffer.c	FUNCTION_71	CALL_42
0x40046bc	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      5108	buffer.c	FUNCTION_71	CALL_40
0x40046c1	      0xba01000000	                              mov edx, 1	      5108	buffer.c	FUNCTION_71	CALL_40
0x40046c6	      0xbe01000000	                              mov esi, 1	      5108	buffer.c	FUNCTION_71	CALL_40
0x40046cb	      0xe800000000	                          call 0x40046d0	      5108	buffer.c	FUNCTION_71	CALL_40
0x40046d0	      0xe986fdffff	                           jmp 0x400445b	      5108	buffer.c	FUNCTION_71	CALL_40
0x40046d5	        0x488b3c24	                    mov rdi, qword [rsp]	      5104	buffer.c	FUNCTION_71	IF_34	CALL_38
0x40046d9	            0x31f6	                            xor esi, esi	      5104	buffer.c	FUNCTION_71	IF_34	CALL_38
0x40046db	      0xe800000000	                          call 0x40046e0	      5104	buffer.c	FUNCTION_71	IF_34	CALL_38
0x40046e0	      0xe964fdffff	                           jmp 0x4004449	      5104	buffer.c	FUNCTION_71	IF_34	CALL_38
0x40046e5	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5102	buffer.c	FUNCTION_71	IF_34	CALL_36
0x40046ea	      0xba01000000	                              mov edx, 1	      5102	buffer.c	FUNCTION_71	IF_34	CALL_36
0x40046ef	      0xbe01000000	                              mov esi, 1	      5102	buffer.c	FUNCTION_71	IF_34	CALL_36
0x40046f4	      0xe800000000	                          call 0x40046f9	      5102	buffer.c	FUNCTION_71	IF_34	CALL_36
0x40046f9	      0xe93afdffff	                           jmp 0x4004438	      5102	buffer.c	FUNCTION_71	IF_34	CALL_36
0x40046fe	      0xbf01000000	                              mov edi, 1	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x4004703	      0xe800000000	                          call 0x4004708	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x4004708	          0x803800	                       cmp byte [rax], 0	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x400470b	     0xf85fdfbffff	                           jne 0x400430e	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x4004711	    0x488b05000000	            mov rax, qword [0x04004718] 	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x4004718	        0x83787801	               cmp dword [rax + 0x78], 1	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x400471c	     0xf85ecfbffff	                           jne 0x400430e	      5025	buffer.c	FUNCTION_71	IF_22	CALL_24
0x4004722	    0x4883b8880000	               cmp qword [rax + 0x88], 0	      5026	buffer.c	FUNCTION_71	IF_22
0x400472a	     0xf85defbffff	                           jne 0x400430e	      5026	buffer.c	FUNCTION_71	IF_22
0x4004730	    0x8b80c8000000	            mov eax, dword [rax + 0xc8] 	      5027	buffer.c	FUNCTION_71	IF_22
0x4004736	            0x85c0	                           test eax, eax	      5027	buffer.c	FUNCTION_71	IF_22
0x4004738	      0xb801000000	                              mov eax, 1	      5027	buffer.c	FUNCTION_71	IF_22
0x400473d	       0xf45442458	          cmovne eax, dword [rsp + 0x58]	      5027	buffer.c	FUNCTION_71	IF_22
0x4004742	        0x89442458	             mov dword [rsp + 0x58], eax	      5027	buffer.c	FUNCTION_71	IF_22
0x4004746	      0xe9c3fbffff	                           jmp 0x400430e	      5027	buffer.c	FUNCTION_71	IF_22
0x400474b	      0xe800000000	                   call sym.do_modelines	      5114	buffer.c	FUNCTION_71
buf_contents_changed	FOR,1:WHILE,0:DO,0:ELSE,0:functions,0:CALL,12:SWITCH,0:IF,6	327
0x400c770	            0x4157	                                push r15	      6169	buffer.c	FUNCTION_102
0x400c772	            0x4156	                                push r14	      6169	buffer.c	FUNCTION_102
0x400c774	            0x31f6	                            xor esi, esi	      6177	buffer.c	FUNCTION_102	CALL_1
0x400c776	            0x4155	                                push r13	      6169	buffer.c	FUNCTION_102
0x400c778	            0x4154	                                push r12	      6169	buffer.c	FUNCTION_102
0x400c77a	      0xb904000000	                              mov ecx, 4	      6177	buffer.c	FUNCTION_102	CALL_1
0x400c77f	              0x55	                                push rbp	      6169	buffer.c	FUNCTION_102
0x400c780	              0x53	                                push rbx	      6169	buffer.c	FUNCTION_102
0x400c781	          0x4889fd	                            mov rbp, rdi	      6169	buffer.c	FUNCTION_102
0x400c784	      0xba01000000	                              mov edx, 1	      6177	buffer.c	FUNCTION_102	CALL_1
0x400c789	            0x31ff	                            xor edi, edi	      6177	buffer.c	FUNCTION_102	CALL_1
0x400c78b	    0x4881ec180100	                          sub rsp, 0x118	      6169	buffer.c	FUNCTION_102
0x400c792	    0x64488b042528	                mov rax, qword fs:[0x28]	      6169	buffer.c	FUNCTION_102
0x400c79b	    0x488984240801	            mov qword [rsp + 0x108], rax	      6169	buffer.c	FUNCTION_102
0x400c7a3	            0x31c0	                            xor eax, eax	      6169	buffer.c	FUNCTION_102
0x400c7a5	      0xe800000000	                          call 0x400c7aa	      6177	buffer.c	FUNCTION_102	CALL_1
0x400c7aa	          0x4885c0	                           test rax, rax	      6178	buffer.c	FUNCTION_102	IF_1
0x400c7ad	     0xf8445020000	                            je 0x400c9f8	      6178	buffer.c	FUNCTION_102	IF_1
0x400c7b3	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      6182	buffer.c	FUNCTION_102	IF_2	CALL_2
0x400c7b8	          0x4889ee	                            mov rsi, rbp	      6182	buffer.c	FUNCTION_102	IF_2	CALL_2
0x400c7bb	          0x4889c3	                            mov rbx, rax	      6182	buffer.c	FUNCTION_102	IF_2	CALL_2
0x400c7be	      0xe800000000	                          call 0x400c7c3	      6182	buffer.c	FUNCTION_102	IF_2	CALL_2
0x400c7c3	            0x85c0	                           test eax, eax	      6182	buffer.c	FUNCTION_102	IF_2	CALL_2
0x400c7c5	     0xf84f5000000	                            je 0x400c8c0	      6182	buffer.c	FUNCTION_102	IF_2	CALL_2
0x400c7cb	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      6189	buffer.c	FUNCTION_102	CALL_4
0x400c7d0	          0x4889de	                            mov rsi, rbx	      6189	buffer.c	FUNCTION_102	CALL_4
0x400c7d3	      0xe800000000	                          call 0x400c7d8	      6189	buffer.c	FUNCTION_102	CALL_4
0x400c7d8	    0x488b3d000000	            mov rdi, qword [0x0400c7df] 	      6191	buffer.c	FUNCTION_102	IF_3	CALL_5
0x400c7df	      0xe800000000	                          call 0x400c7e4	      6191	buffer.c	FUNCTION_102	IF_3	CALL_5
0x400c7e4	          0x83f801	                              cmp eax, 1	      6191	buffer.c	FUNCTION_102	IF_3	CALL_5
0x400c7e7	     0xf8483020000	                            je 0x400ca70	      6191	buffer.c	FUNCTION_102	IF_3	CALL_5
0x400c7ed	      0xbd01000000	                              mov ebp, 1	      6171	buffer.c	FUNCTION_102
0x400c7f2	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	      6208	buffer.c	FUNCTION_102	CALL_10
0x400c7f7	      0xe800000000	                          call 0x400c7fc	      6208	buffer.c	FUNCTION_102	CALL_10
0x400c7fc	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      6211	buffer.c	FUNCTION_102	CALL_11
0x400c801	      0xe800000000	                          call 0x400c806	      6211	buffer.c	FUNCTION_102	CALL_11
0x400c806	    0x483b1d000000	            cmp rbx, qword [0x0400c80d] 	      6213	buffer.c	FUNCTION_102	IF_6
0x400c80d	     0xf843d020000	                            je 0x400ca50	      6213	buffer.c	FUNCTION_102	IF_6
0x400c813	    0x8b0500000000	            mov eax, dword [0x0400c819] 	      6229	buffer.c	FUNCTION_103	IF_1
0x400c819	    0x8b93b8000000	            mov edx, dword [rbx + 0xb8] 	      6229	buffer.c	FUNCTION_103	IF_1
0x400c81f	          0x83e801	                              sub eax, 1	      6229	buffer.c	FUNCTION_103	IF_1
0x400c822	            0x39c2	                            cmp edx, eax	      6229	buffer.c	FUNCTION_103	IF_1
0x400c824	     0xf8416020000	                            je 0x400ca40	      6229	buffer.c	FUNCTION_103	IF_1
0x400c82a	      0xe800000000	                          call 0x400c82f	      6233	buffer.c	FUNCTION_103	CALL_1
0x400c82f	    0x4c8b25000000	            mov r12, qword [0x0400c836] 	       449	buffer.c	FUNCTION_8
0x400c836	          0x4d85e4	                           test r12, r12	       449	buffer.c	FUNCTION_8
0x400c839	     0xf84d1020000	                            je 0x400cb10	       449	buffer.c	FUNCTION_8
0x400c83f	          0x4531f6	                          xor r14d, r14d	       449	buffer.c	FUNCTION_8
0x400c842	      0x49395c2408	                cmp qword [r12 + 8], rbx	       449	buffer.c	FUNCTION_8
0x400c847	        0x410f94c6	                               sete r14b	       449	buffer.c	FUNCTION_8
0x400c84b	    0x488b83181400	          mov rax, qword [rbx + 0x1418] 	      5609	buffer.c	FUNCTION_78
0x400c852	    0x4c8b2d000000	            mov r13, qword [0x0400c859] 	       451	buffer.c	FUNCTION_8
0x400c859	          0x803874	                    cmp byte [rax], 0x74	      5609	buffer.c	FUNCTION_78
0x400c85c	     0xf84a6010000	                            je 0x400ca08	      5609	buffer.c	FUNCTION_78
0x400c862	    0x8b8380000000	            mov eax, dword [rbx + 0x80] 	       509	buffer.c	FUNCTION_8	IF_8
0x400c868	            0x85c0	                           test eax, eax	       509	buffer.c	FUNCTION_8	IF_8
0x400c86a	     0xf8e90000000	                           jle 0x400c900	       509	buffer.c	FUNCTION_8	IF_8
0x400c870	            0x31ff	                            xor edi, edi	       511	buffer.c	FUNCTION_8	IF_8	CALL_7
0x400c872	      0xba05000000	                              mov edx, 5	       511	buffer.c	FUNCTION_8	IF_8	CALL_7
0x400c877	      0xbe00000000	                              mov esi, 0	       511	buffer.c	FUNCTION_8	IF_8	CALL_7
0x400c87c	      0xe800000000	                          call 0x400c881	       511	buffer.c	FUNCTION_8	IF_8	CALL_7
0x400c881	          0x4889c7	                            mov rdi, rax	       511	buffer.c	FUNCTION_8	IF_8	CALL_7
0x400c884	      0xe800000000	                          call 0x400c889	       511	buffer.c	FUNCTION_8	IF_8	CALL_7
0x400c889	      0xe800000000	                          call 0x400c88e	      6238	buffer.c	FUNCTION_103	CALL_3
0x400c88e	            0x89e8	                            mov eax, ebp	      6216	buffer.c	FUNCTION_102
0x400c890	    0x488b8c240801	           mov rcx, qword [rsp + 0x108] 	      6217	buffer.c	FUNCTION_102
0x400c898	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      6217	buffer.c	FUNCTION_102
0x400c8a1	     0xf853b040000	                           jne 0x400cce2	      6217	buffer.c	FUNCTION_102
0x400c8a7	    0x4881c4180100	                          add rsp, 0x118	      6217	buffer.c	FUNCTION_102
0x400c8ae	              0x5b	                                 pop rbx	      6217	buffer.c	FUNCTION_102
0x400c8af	              0x5d	                                 pop rbp	      6217	buffer.c	FUNCTION_102
0x400c8b0	            0x415c	                                 pop r12	      6217	buffer.c	FUNCTION_102
0x400c8b2	            0x415d	                                 pop r13	      6217	buffer.c	FUNCTION_102
0x400c8b4	            0x415e	                                 pop r14	      6217	buffer.c	FUNCTION_102
0x400c8b6	            0x415f	                                 pop r15	      6217	buffer.c	FUNCTION_102
0x400c8b8	              0xc3	                                     ret	      6217	buffer.c	FUNCTION_102
0x400c8b9	     0xf1f80000000	                         nop dword [rax]	      6217	buffer.c	FUNCTION_102
0x400c8c0	    0x8b0500000000	            mov eax, dword [0x0400c8c6] 	      6229	buffer.c	FUNCTION_103	IF_1
0x400c8c6	    0x8b93b8000000	            mov edx, dword [rbx + 0xb8] 	      6229	buffer.c	FUNCTION_103	IF_1
0x400c8cc	          0x83e801	                              sub eax, 1	      6229	buffer.c	FUNCTION_103	IF_1
0x400c8cf	            0x39c2	                            cmp edx, eax	      6229	buffer.c	FUNCTION_103	IF_1
0x400c8d1	     0xf8489010000	                            je 0x400ca60	      6229	buffer.c	FUNCTION_103	IF_1
0x400c8d7	      0xe800000000	                          call 0x400c8dc	      6233	buffer.c	FUNCTION_103	CALL_1
0x400c8dc	            0x31c9	                            xor ecx, ecx	      6235	buffer.c	FUNCTION_103	CALL_2
0x400c8de	      0xba04000000	                              mov edx, 4	      6235	buffer.c	FUNCTION_103	CALL_2
0x400c8e3	          0x4889de	                            mov rsi, rbx	      6235	buffer.c	FUNCTION_103	CALL_2
0x400c8e6	            0x31ff	                            xor edi, edi	      6235	buffer.c	FUNCTION_103	CALL_2
0x400c8e8	      0xe800000000	                          call 0x400c8ed	      6235	buffer.c	FUNCTION_103	CALL_2
0x400c8ed	      0xe800000000	                          call 0x400c8f2	      6238	buffer.c	FUNCTION_103	CALL_3
0x400c8f2	      0xb801000000	                              mov eax, 1	      6185	buffer.c	FUNCTION_102	IF_2
0x400c8f7	            0xeb97	                           jmp 0x400c890	      6185	buffer.c	FUNCTION_102	IF_2
0x400c8f9	     0xf1f80000000	                         nop dword [rax]	      6185	buffer.c	FUNCTION_102	IF_2
0x400c900	        0x837b7801	               cmp dword [rbx + 0x78], 1	       532	buffer.c	FUNCTION_8	IF_11
0x400c904	    0x8b8bb8000000	            mov ecx, dword [rbx + 0xb8] 	       362	buffer.c	FUNCTION_3
0x400c90a	    0x448b3d000000	           mov r15d, dword [0x0400c911] 	       363	buffer.c	FUNCTION_3
0x400c911	        0x894c240c	              mov dword [rsp + 0xc], ecx	       362	buffer.c	FUNCTION_3
0x400c915	     0xf8425020000	                            je 0x400cb40	       532	buffer.c	FUNCTION_8	IF_11
0x400c91b	          0x4585f6	                         test r14d, r14d	       573	buffer.c	FUNCTION_8	IF_18	CALL_21
0x400c91e	            0x7419	                            je 0x400c939	       573	buffer.c	FUNCTION_8	IF_18	CALL_21
0x400c920	    0x4c3b25000000	            cmp r12, qword [0x0400c927] 	       573	buffer.c	FUNCTION_8	IF_18	CALL_21
0x400c927	            0x7410	                            je 0x400c939	       573	buffer.c	FUNCTION_8	IF_18	CALL_21
0x400c929	          0x4c89e7	                            mov rdi, r12	       573	buffer.c	FUNCTION_8	IF_18	CALL_21
0x400c92c	      0xe800000000	                          call 0x400c931	       573	buffer.c	FUNCTION_8	IF_18	CALL_21
0x400c931	            0x85c0	                           test eax, eax	       573	buffer.c	FUNCTION_8	IF_18	CALL_21
0x400c933	     0xf85e7010000	                           jne 0x400cb20	       573	buffer.c	FUNCTION_8	IF_18	CALL_21
0x400c939	        0x448b6b78	           mov r13d, dword [rbx + 0x78] 	       580	buffer.c	FUNCTION_8
0x400c93d	          0x4585ed	                         test r13d, r13d	       583	buffer.c	FUNCTION_8	IF_19
0x400c940	            0x7e07	                           jle 0x400c949	       583	buffer.c	FUNCTION_8	IF_19
0x400c942	        0x418d45ff	                      lea eax, [r13 - 1]	       584	buffer.c	FUNCTION_8	IF_19
0x400c946	          0x894378	             mov dword [rbx + 0x78], eax	       584	buffer.c	FUNCTION_8	IF_19
0x400c949	      0xe800000000	                          call 0x400c94e	       587	buffer.c	FUNCTION_8	IF_20	CALL_25
0x400c94e	          0x8b4b78	            mov ecx, dword [rbx + 0x78] 	       593	buffer.c	FUNCTION_8	IF_21
0x400c951	            0x85c9	                           test ecx, ecx	       593	buffer.c	FUNCTION_8	IF_21
0x400c953	     0xf8f30ffffff	                            jg 0x400c889	       593	buffer.c	FUNCTION_8	IF_21
0x400c959	    0x4c8b25000000	            mov r12, qword [0x0400c960] 	       602	buffer.c	FUNCTION_8	IF_23
0x400c960	          0x4c39e3	                            cmp rbx, r12	       602	buffer.c	FUNCTION_8	IF_23
0x400c963	     0xf8470020000	                            je 0x400cbd9	       602	buffer.c	FUNCTION_8	IF_23
0x400c969	        0x44896b78	            mov dword [rbx + 0x78], r13d	       616	buffer.c	FUNCTION_8
0x400c96d	      0xbe03000000	                              mov esi, 3	       618	buffer.c	FUNCTION_8	CALL_28
0x400c972	          0x4889df	                            mov rdi, rbx	       618	buffer.c	FUNCTION_8	CALL_28
0x400c975	      0xe800000000	                          call 0x400c97a	       618	buffer.c	FUNCTION_8	CALL_28
0x400c97a	    0x443b3d000000	           cmp r15d, dword [0x0400c981] 	       377	buffer.c	FUNCTION_4	CALL_1
0x400c981	            0x7437	                            je 0x400c9ba	       377	buffer.c	FUNCTION_4	CALL_1
0x400c983	    0x488b05000000	            mov rax, qword [0x0400c98a] 	       392	buffer.c	FUNCTION_5	FOR_1
0x400c98a	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x400c98d	            0x7516	                           jne 0x400c9a5	       392	buffer.c	FUNCTION_5	FOR_1
0x400c98f	      0xe9f5feffff	                           jmp 0x400c889	       392	buffer.c	FUNCTION_5	FOR_1
0x400c994	         0xf1f4000	                         nop dword [rax]	       392	buffer.c	FUNCTION_5	FOR_1
0x400c998	        0x488b4070	            mov rax, qword [rax + 0x70] 	       392	buffer.c	FUNCTION_5	FOR_1
0x400c99c	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x400c99f	     0xf84e4feffff	                            je 0x400c889	       392	buffer.c	FUNCTION_5	FOR_1
0x400c9a5	          0x4839c3	                            cmp rbx, rax	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x400c9a8	            0x75ee	                           jne 0x400c998	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x400c9aa	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       378	buffer.c	FUNCTION_4
0x400c9ae	    0x3b83b8000000	            cmp eax, dword [rbx + 0xb8] 	       378	buffer.c	FUNCTION_4
0x400c9b4	     0xf85cffeffff	                           jne 0x400c889	       378	buffer.c	FUNCTION_4
0x400c9ba	      0xe800000000	                          call 0x400c9bf	       624	buffer.c	FUNCTION_8	IF_25	CALL_30
0x400c9bf	            0x85c0	                           test eax, eax	       624	buffer.c	FUNCTION_8	IF_25	CALL_30
0x400c9c1	     0xf85c2feffff	                           jne 0x400c889	       624	buffer.c	FUNCTION_8	IF_25	CALL_30
0x400c9c7	    0x48391d000000	            cmp qword [0x0400c9ce], rbx 	       635	buffer.c	FUNCTION_8	IF_26
0x400c9ce	            0x7509	                           jne 0x400c9d9	       635	buffer.c	FUNCTION_8	IF_26
0x400c9d0	          0x4c39e3	                            cmp rbx, r12	       635	buffer.c	FUNCTION_8	IF_26
0x400c9d3	     0xf85b0feffff	                           jne 0x400c889	       635	buffer.c	FUNCTION_8	IF_26
0x400c9d9	            0x31ff	                            xor edi, edi	       638	buffer.c	FUNCTION_8	IF_27	CALL_31
0x400c9db	      0xe800000000	                          call 0x400c9e0	       638	buffer.c	FUNCTION_8	IF_27	CALL_31
0x400c9e0	            0x85c0	                           test eax, eax	       638	buffer.c	FUNCTION_8	IF_27	CALL_31
0x400c9e2	     0xf8413020000	                            je 0x400cbfb	       638	buffer.c	FUNCTION_8	IF_27	CALL_31
0x400c9e8	    0x488b04250800	                      mov rax, qword [8]	       638	buffer.c	FUNCTION_8	IF_27	CALL_31
0x400c9f0	             0xf0b	                                     ud2	       638	buffer.c	FUNCTION_8	IF_27	CALL_31
0x400c9f2	    0x660f1f440000	                    nop word [rax + rax]	       638	buffer.c	FUNCTION_8	IF_27	CALL_31
0x400c9f8	      0xb801000000	                              mov eax, 1	      6179	buffer.c	FUNCTION_102	IF_1
0x400c9fd	      0xe98efeffff	                           jmp 0x400c890	      6179	buffer.c	FUNCTION_102	IF_1
0x400ca02	    0x660f1f440000	                    nop word [rax + rax]	      6179	buffer.c	FUNCTION_102	IF_1
0x400ca08	    0x488bbb481c00	          mov rdi, qword [rbx + 0x1c48] 	       478	buffer.c	FUNCTION_8	IF_4	IF_5	CALL_2
0x400ca0f	      0xe800000000	                          call 0x400ca14	       478	buffer.c	FUNCTION_8	IF_4	IF_5	CALL_2
0x400ca14	            0x85c0	                           test eax, eax	       478	buffer.c	FUNCTION_8	IF_4	IF_5	CALL_2
0x400ca16	     0xf8446feffff	                            je 0x400c862	       478	buffer.c	FUNCTION_8	IF_4	IF_5	CALL_2
0x400ca1c	    0x8bb380000000	            mov esi, dword [rbx + 0x80] 	       482	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	IF_7
0x400ca22	            0x85f6	                           test esi, esi	       482	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	IF_7
0x400ca24	     0xf8546feffff	                           jne 0x400c870	       482	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	IF_7
0x400ca2a	          0x4889df	                            mov rdi, rbx	       488	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	CALL_5
0x400ca2d	      0xe800000000	                          call 0x400ca32	       488	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	CALL_5
0x400ca32	      0xe92bfeffff	                           jmp 0x400c862	       488	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	CALL_5
0x400ca37	    0x660f1f840000	                    nop word [rax + rax]	       488	buffer.c	FUNCTION_8	IF_4	IF_5	IF_6	CALL_5
0x400ca40	    0x891500000000	            mov dword [0x0400ca46], edx 	      6230	buffer.c	FUNCTION_103	IF_1
0x400ca46	      0xe9dffdffff	                           jmp 0x400c82a	      6230	buffer.c	FUNCTION_103	IF_1
0x400ca4b	       0xf1f440000	                   nop dword [rax + rax]	      6230	buffer.c	FUNCTION_103	IF_1
0x400ca50	            0x89e8	                            mov eax, ebp	      6216	buffer.c	FUNCTION_102
0x400ca52	      0xe939feffff	                           jmp 0x400c890	      6216	buffer.c	FUNCTION_102
0x400ca57	    0x660f1f840000	                    nop word [rax + rax]	      6216	buffer.c	FUNCTION_102
0x400ca60	    0x891500000000	            mov dword [0x0400ca66], edx 	      6230	buffer.c	FUNCTION_103	IF_1
0x400ca66	      0xe96cfeffff	                           jmp 0x400c8d7	      6230	buffer.c	FUNCTION_103	IF_1
0x400ca6b	       0xf1f440000	                   nop dword [rax + rax]	      6230	buffer.c	FUNCTION_103	IF_1
0x400ca70	        0x4883ec08	                              sub rsp, 8	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x400ca74	    0x488bbd880000	            mov rdi, qword [rbp + 0x88] 	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x400ca7b	    0x488bb5980000	            mov rsi, qword [rbp + 0x98] 	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x400ca82	            0x6a11	                               push 0x11	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x400ca84	    0x41b8ffffff7f	                     mov r8d, 0x7fffffff	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x400ca8a	            0x31c9	                            xor ecx, ecx	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x400ca8c	            0x31d2	                            xor edx, edx	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x400ca8e	      0x4c8d4c2460	                    lea r9, [rsp + 0x60]	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x400ca93	      0xe800000000	                          call 0x400ca98	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x400ca98	          0x83f801	                              cmp eax, 1	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x400ca9b	              0x5f	                                 pop rdi	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x400ca9c	            0x4158	                                  pop r8	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x400ca9e	     0xf8549fdffff	                           jne 0x400c7ed	      6192	buffer.c	FUNCTION_102	IF_3	CALL_6
0x400caa4	    0x488b15000000	            mov rdx, qword [0x0400caab] 	      6197	buffer.c	FUNCTION_102	IF_3	IF_4
0x400caab	        0x488b4500	                    mov rax, qword [rbp]	      6197	buffer.c	FUNCTION_102	IF_3	IF_4
0x400caaf	          0x483b02	                    cmp rax, qword [rdx]	      6197	buffer.c	FUNCTION_102	IF_3	IF_4
0x400cab2	     0xf8535fdffff	                           jne 0x400c7ed	      6197	buffer.c	FUNCTION_102	IF_3	IF_4
0x400cab8	          0x4885c0	                           test rax, rax	      6200	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1
0x400cabb	    0x41bc01000000	                             mov r12d, 1	      6200	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1
0x400cac1	            0x7e40	                           jle 0x400cb03	      6200	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1
0x400cac3	       0xf1f440000	                   nop dword [rax + rax]	      6200	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1
0x400cac8	          0x4c89e7	                            mov rdi, r12	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x400cacb	      0xe800000000	                          call 0x400cad0	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x400cad0	            0x31d2	                            xor edx, edx	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x400cad2	          0x4989c5	                            mov r13, rax	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x400cad5	          0x4c89e6	                            mov rsi, r12	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x400cad8	          0x4889ef	                            mov rdi, rbp	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x400cadb	      0xe800000000	                          call 0x400cae0	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x400cae0	          0x4c89ee	                            mov rsi, r13	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x400cae3	          0x4889c7	                            mov rdi, rax	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x400cae6	      0xe800000000	                          call 0x400caeb	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x400caeb	            0x85c0	                           test eax, eax	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x400caed	     0xf85fafcffff	                           jne 0x400c7ed	      6201	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1	IF_5	CALL_9
0x400caf3	    0x488b05000000	            mov rax, qword [0x0400cafa] 	      6200	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1
0x400cafa	        0x4983c401	                              add r12, 1	      6200	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1
0x400cafe	          0x4c3920	                    cmp qword [rax], r12	      6200	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1
0x400cb01	            0x7dc5	                           jge 0x400cac8	      6200	buffer.c	FUNCTION_102	IF_3	IF_4	FOR_1
0x400cb03	            0x31ed	                            xor ebp, ebp	      6199	buffer.c	FUNCTION_102	IF_3	IF_4
0x400cb05	      0xe9e8fcffff	                           jmp 0x400c7f2	      6199	buffer.c	FUNCTION_102	IF_3	IF_4
0x400cb0a	    0x660f1f440000	                    nop word [rax + rax]	      6199	buffer.c	FUNCTION_102	IF_3	IF_4
0x400cb10	          0x4531f6	                          xor r14d, r14d	       449	buffer.c	FUNCTION_8
0x400cb13	      0xe933fdffff	                           jmp 0x400c84b	       449	buffer.c	FUNCTION_8
0x400cb18	     0xf1f84000000	                   nop dword [rax + rax]	       449	buffer.c	FUNCTION_8
0x400cb20	      0xe800000000	                          call 0x400cb25	       575	buffer.c	FUNCTION_8	IF_18	CALL_22
0x400cb25	          0x4c89e6	                            mov rsi, r12	       576	buffer.c	FUNCTION_8	IF_18	CALL_23
0x400cb28	          0x4c89ef	                            mov rdi, r13	       576	buffer.c	FUNCTION_8	IF_18	CALL_23
0x400cb2b	      0xe800000000	                          call 0x400cb30	       576	buffer.c	FUNCTION_8	IF_18	CALL_23
0x400cb30	      0xe800000000	                          call 0x400cb35	       577	buffer.c	FUNCTION_8	IF_18	CALL_24
0x400cb35	      0xe9fffdffff	                           jmp 0x400c939	       577	buffer.c	FUNCTION_8	IF_18	CALL_24
0x400cb3a	    0x660f1f440000	                    nop word [rax + rax]	       577	buffer.c	FUNCTION_8	IF_18	CALL_24
0x400cb40	    0x488bb3980000	            mov rsi, qword [rbx + 0x98] 	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0x400cb47	          0x83c001	                              add eax, 1	       534	buffer.c	FUNCTION_8	IF_11
0x400cb4a	            0x31c9	                            xor ecx, ecx	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0x400cb4c	    0x898380000000	             mov dword [rbx + 0x80], eax	       534	buffer.c	FUNCTION_8	IF_11
0x400cb52	          0x4989d8	                             mov r8, rbx	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0x400cb55	      0xbf0e000000	                            mov edi, 0xe	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0x400cb5a	          0x4889f2	                            mov rdx, rsi	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0x400cb5d	      0xe800000000	                          call 0x400cb62	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0x400cb62	            0x85c0	                           test eax, eax	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0x400cb64	            0x745a	                            je 0x400cbc0	       535	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_12
0x400cb66	    0x443b3d000000	           cmp r15d, dword [0x0400cb6d] 	       377	buffer.c	FUNCTION_4	CALL_1
0x400cb6d	            0x7451	                            je 0x400cbc0	       377	buffer.c	FUNCTION_4	CALL_1
0x400cb6f	    0x488b05000000	            mov rax, qword [0x0400cb76] 	       392	buffer.c	FUNCTION_5	FOR_1
0x400cb76	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x400cb79	            0x750e	                           jne 0x400cb89	       392	buffer.c	FUNCTION_5	FOR_1
0x400cb7b	            0xeb1d	                           jmp 0x400cb9a	       392	buffer.c	FUNCTION_5	FOR_1
0x400cb7d	           0xf1f00	                         nop dword [rax]	       392	buffer.c	FUNCTION_5	FOR_1
0x400cb80	        0x488b4070	            mov rax, qword [rax + 0x70] 	       392	buffer.c	FUNCTION_5	FOR_1
0x400cb84	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x400cb87	            0x7411	                            je 0x400cb9a	       392	buffer.c	FUNCTION_5	FOR_1
0x400cb89	          0x4839c3	                            cmp rbx, rax	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x400cb8c	            0x75f2	                           jne 0x400cb80	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x400cb8e	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       378	buffer.c	FUNCTION_4
0x400cb92	    0x3b83b8000000	            cmp eax, dword [rbx + 0xb8] 	       378	buffer.c	FUNCTION_4
0x400cb98	            0x7426	                            je 0x400cbc0	       378	buffer.c	FUNCTION_4
0x400cb9a	            0x31ff	                            xor edi, edi	       541	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_15
0x400cb9c	      0xba05000000	                              mov edx, 5	       541	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_15
0x400cba1	      0xbe00000000	                              mov esi, 0	       541	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_15
0x400cba6	      0xe800000000	                          call 0x400cbab	       541	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_15
0x400cbab	          0x4889c7	                            mov rdi, rax	       541	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_15
0x400cbae	      0xe800000000	                          call 0x400cbb3	       541	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_15
0x400cbb3	      0xe9d1fcffff	                           jmp 0x400c889	       541	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_15
0x400cbb8	     0xf1f84000000	                   nop dword [rax + rax]	       541	buffer.c	FUNCTION_8	IF_11	IF_12	CALL_15
0x400cbc0	    0x83ab80000000	               sub dword [rbx + 0x80], 1	       544	buffer.c	FUNCTION_8	IF_11
0x400cbc7	      0xe800000000	                          call 0x400cbcc	       565	buffer.c	FUNCTION_8	IF_11	IF_17	CALL_20
0x400cbcc	            0x85c0	                           test eax, eax	       565	buffer.c	FUNCTION_8	IF_11	IF_17	CALL_20
0x400cbce	     0xf8447fdffff	                            je 0x400c91b	       565	buffer.c	FUNCTION_8	IF_11	IF_17	CALL_20
0x400cbd4	      0xe9b0fcffff	                           jmp 0x400c889	       565	buffer.c	FUNCTION_8	IF_11	IF_17	CALL_20
0x400cbd9	    0x8b1500000000	            mov edx, dword [0x0400cbdf] 	       602	buffer.c	FUNCTION_8	IF_23
0x400cbdf	          0x4989dc	                            mov r12, rbx	       602	buffer.c	FUNCTION_8	IF_23
0x400cbe2	            0x85d2	                           test edx, edx	       602	buffer.c	FUNCTION_8	IF_23
0x400cbe4	     0xf847ffdffff	                            je 0x400c969	       602	buffer.c	FUNCTION_8	IF_23
0x400cbea	      0xe800000000	                          call 0x400cbef	       607	buffer.c	FUNCTION_8	CALL_27
0x400cbef	    0x4c8b25000000	            mov r12, qword [0x0400cbf6] 	       607	buffer.c	FUNCTION_8	CALL_27
0x400cbf6	      0xe96efdffff	                           jmp 0x400c969	       607	buffer.c	FUNCTION_8	CALL_27
0x400cbfb	          0x8b4378	            mov eax, dword [rbx + 0x78] 	       643	buffer.c	FUNCTION_8	IF_28
0x400cbfe	            0x85c0	                           test eax, eax	       643	buffer.c	FUNCTION_8	IF_28
0x400cc00	            0x7e06	                           jle 0x400cc08	       643	buffer.c	FUNCTION_8	IF_28
0x400cc02	          0x83e801	                              sub eax, 1	       644	buffer.c	FUNCTION_8	IF_28
0x400cc05	          0x894378	             mov dword [rbx + 0x78], eax	       644	buffer.c	FUNCTION_8	IF_28
0x400cc08	    0x488bbb880000	            mov rdi, qword [rbx + 0x88] 	       656	buffer.c	FUNCTION_8	IF_29	CALL_33
0x400cc0f	      0xe800000000	                          call 0x400cc14	       656	buffer.c	FUNCTION_8	IF_29	CALL_33
0x400cc14	    0x488bbb900000	            mov rdi, qword [rbx + 0x90] 	       657	buffer.c	FUNCTION_8	IF_29	CALL_34
0x400cc1b	      0xe800000000	                          call 0x400cc20	       657	buffer.c	FUNCTION_8	IF_29	CALL_34
0x400cc20	        0x488b4370	            mov rax, qword [rbx + 0x70] 	       658	buffer.c	FUNCTION_8	IF_29	IF_31
0x400cc24	        0x488b5368	            mov rdx, qword [rbx + 0x68] 	       659	buffer.c	FUNCTION_8	IF_29	IF_31
0x400cc28	          0x4885c0	                           test rax, rax	       658	buffer.c	FUNCTION_8	IF_29	IF_31
0x400cc2b	     0xf84cf000000	                            je 0x400cd00	       658	buffer.c	FUNCTION_8	IF_29	IF_31
0x400cc31	        0x48895068	             mov qword [rax + 0x68], rdx	       661	buffer.c	FUNCTION_8	IF_29	ELSE_5
0x400cc35	        0x488b5368	            mov rdx, qword [rbx + 0x68] 	       661	buffer.c	FUNCTION_8	IF_29	ELSE_5
0x400cc39	          0x4885d2	                           test rdx, rdx	       662	buffer.c	FUNCTION_8	IF_29	IF_32
0x400cc3c	     0xf84b2000000	                            je 0x400ccf4	       662	buffer.c	FUNCTION_8	IF_29	IF_32
0x400cc42	        0x48894270	             mov qword [rdx + 0x70], rax	       665	buffer.c	FUNCTION_8	IF_29	ELSE_6
0x400cc46	      0xbe01000000	                              mov esi, 1	       824	buffer.c	FUNCTION_11	CALL_1
0x400cc4b	          0x4889df	                            mov rdi, rbx	       824	buffer.c	FUNCTION_11	CALL_1
0x400cc4e	    0x830500000000	               add dword [0x0400cc55], 1	       823	buffer.c	FUNCTION_11
0x400cc55	      0xe8b642ffff	              call sym.free_buffer_stuff	       824	buffer.c	FUNCTION_11	CALL_1
0x400cc5a	    0x488bbb301700	          mov rdi, qword [rbx + 0x1730] 	       827	buffer.c	FUNCTION_11	CALL_2
0x400cc61	    0x488db3d00000	                   lea rsi, [rbx + 0xd0]	       827	buffer.c	FUNCTION_11	CALL_2
0x400cc68	      0xe800000000	                          call 0x400cc6d	       827	buffer.c	FUNCTION_11	CALL_2
0x400cc6d	    0x488bbb301700	          mov rdi, qword [rbx + 0x1730] 	       828	buffer.c	FUNCTION_11	CALL_3
0x400cc74	      0xe800000000	                          call 0x400cc79	       828	buffer.c	FUNCTION_11	CALL_3
0x400cc79	          0x4889df	                            mov rdi, rbx	       849	buffer.c	FUNCTION_11	CALL_10
0x400cc7c	      0xe800000000	                          call 0x400cc81	       849	buffer.c	FUNCTION_11	CALL_10
0x400cc81	          0x4889df	                            mov rdi, rbx	       852	buffer.c	FUNCTION_11	CALL_11
0x400cc84	      0xe800000000	                          call 0x400cc89	       852	buffer.c	FUNCTION_11	CALL_11
0x400cc89	    0x488db3bc0000	                   lea rsi, [rbx + 0xbc]	       414	buffer.c	FUNCTION_7	CALL_1
0x400cc90	      0xbf00000000	                              mov edi, 0	       414	buffer.c	FUNCTION_7	CALL_1
0x400cc95	      0xe800000000	                          call 0x400cc9a	       414	buffer.c	FUNCTION_7	CALL_1
0x400cc9a	        0x488b5008	                mov rdx, qword [rax + 8]	       416	buffer.c	FUNCTION_7	IF_1	CALL_2
0x400cc9e	          0x4885d2	                           test rdx, rdx	       416	buffer.c	FUNCTION_7	IF_1	CALL_2
0x400cca1	            0x7416	                            je 0x400ccb9	       416	buffer.c	FUNCTION_7	IF_1	CALL_2
0x400cca3	    0x4881fa000000	                              cmp rdx, 0	       416	buffer.c	FUNCTION_7	IF_1	CALL_2
0x400ccaa	            0x740d	                            je 0x400ccb9	       416	buffer.c	FUNCTION_7	IF_1	CALL_2
0x400ccac	          0x4889c6	                            mov rsi, rax	       417	buffer.c	FUNCTION_7	CALL_3
0x400ccaf	      0xbf00000000	                              mov edi, 0	       417	buffer.c	FUNCTION_7	CALL_3
0x400ccb4	      0xe800000000	                          call 0x400ccb9	       417	buffer.c	FUNCTION_7	CALL_3
0x400ccb9	          0x4889df	                            mov rdi, rbx	       857	buffer.c	FUNCTION_11	CALL_13
0x400ccbc	      0xe800000000	                          call 0x400ccc1	       857	buffer.c	FUNCTION_11	CALL_13
0x400ccc1	    0x8b0500000000	            mov eax, dword [0x0400ccc7] 	       859	buffer.c	FUNCTION_11	IF_1
0x400ccc7	            0x85c0	                           test eax, eax	       859	buffer.c	FUNCTION_11	IF_1
0x400ccc9	            0x741c	                            je 0x400cce7	       859	buffer.c	FUNCTION_11	IF_1
0x400cccb	    0x488b05000000	            mov rax, qword [0x0400ccd2] 	       863	buffer.c	FUNCTION_11	IF_1
0x400ccd2	    0x48891d000000	            mov qword [0x0400ccd9], rbx 	       864	buffer.c	FUNCTION_11	IF_1
0x400ccd9	        0x48894368	             mov qword [rbx + 0x68], rax	       863	buffer.c	FUNCTION_11	IF_1
0x400ccdd	      0xe9a7fbffff	                           jmp 0x400c889	       863	buffer.c	FUNCTION_11	IF_1
0x400cce2	      0xe800000000	                          call 0x400cce7	      6217	buffer.c	FUNCTION_102
0x400cce7	          0x4889df	                            mov rdi, rbx	       867	buffer.c	FUNCTION_11	CALL_14
0x400ccea	      0xe800000000	                          call 0x400ccef	       867	buffer.c	FUNCTION_11	CALL_14
0x400ccef	      0xe995fbffff	                           jmp 0x400c889	       867	buffer.c	FUNCTION_11	CALL_14
0x400ccf4	    0x488905000000	            mov qword [0x0400ccfb], rax 	       663	buffer.c	FUNCTION_8	IF_29	IF_32
0x400ccfb	      0xe946ffffff	                           jmp 0x400cc46	       663	buffer.c	FUNCTION_8	IF_29	IF_32
0x400cd00	    0x488915000000	            mov qword [0x0400cd07], rdx 	       659	buffer.c	FUNCTION_8	IF_29	IF_31
0x400cd07	      0xe92dffffff	                           jmp 0x400cc39	       659	buffer.c	FUNCTION_8	IF_29	IF_31
buf_freeall	FOR,0:WHILE,0:DO,0:ELSE,0:functions,0:CALL,21:SWITCH,0:IF,12	191
0x4000820	            0x4157	                                push r15	       720	buffer.c	FUNCTION_10
0x4000822	            0x4156	                                push r14	       720	buffer.c	FUNCTION_10
0x4000824	          0x4989ff	                            mov r15, rdi	       720	buffer.c	FUNCTION_10
0x4000827	            0x4155	                                push r13	       720	buffer.c	FUNCTION_10
0x4000829	            0x4154	                                push r12	       720	buffer.c	FUNCTION_10
0x400082b	              0x55	                                push rbp	       720	buffer.c	FUNCTION_10
0x400082c	              0x53	                                push rbx	       720	buffer.c	FUNCTION_10
0x400082d	            0x89f5	                            mov ebp, esi	       720	buffer.c	FUNCTION_10
0x400082f	        0x4883ec18	                           sub rsp, 0x18	       720	buffer.c	FUNCTION_10
0x4000833	    0x4c8b35000000	            mov r14, qword [0x0400083a] 	       723	buffer.c	FUNCTION_10
0x400083a	    0x4c8b2d000000	            mov r13, qword [0x04000841] 	       721	buffer.c	FUNCTION_10
0x4000841	          0x4d85f6	                           test r14, r14	       723	buffer.c	FUNCTION_10
0x4000844	     0xf84cf020000	                            je 0x4000b19	       723	buffer.c	FUNCTION_10
0x400084a	            0x31db	                            xor ebx, ebx	       723	buffer.c	FUNCTION_10
0x400084c	        0x49397e08	                cmp qword [r14 + 8], rdi	       723	buffer.c	FUNCTION_10
0x4000850	           0xf94c3	                                 sete bl	       723	buffer.c	FUNCTION_10
0x4000853	    0x488b05000000	            mov rax, qword [0x0400085a] 	       725	buffer.c	FUNCTION_10
0x400085a	    0x418387800000	               add dword [r15 + 0x80], 1	       728	buffer.c	FUNCTION_10
0x4000862	      0x49837f0800	                  cmp qword [r15 + 8], 0	       730	buffer.c	FUNCTION_10	IF_1
0x4000867	    0x448b25000000	           mov r12d, dword [0x0400086e] 	       363	buffer.c	FUNCTION_3
0x400086e	      0x4889442408	                mov qword [rsp + 8], rax	       725	buffer.c	FUNCTION_10
0x4000873	    0x418b87b80000	            mov eax, dword [r15 + 0xb8] 	       362	buffer.c	FUNCTION_3
0x400087a	        0x89442404	                mov dword [rsp + 4], eax	       362	buffer.c	FUNCTION_3
0x400087e	            0x7468	                            je 0x40008e8	       730	buffer.c	FUNCTION_10	IF_1
0x4000880	    0x498bb7980000	            mov rsi, qword [r15 + 0x98] 	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x4000887	            0x31c9	                            xor ecx, ecx	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x4000889	          0x4d89f8	                             mov r8, r15	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x400088c	      0xbf0c000000	                            mov edi, 0xc	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x4000891	          0x4889f2	                            mov rdx, rsi	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x4000894	      0xe800000000	                          call 0x4000899	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x4000899	            0x85c0	                           test eax, eax	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x400089b	            0x744b	                            je 0x40008e8	       732	buffer.c	FUNCTION_10	IF_1	IF_2	CALL_2
0x400089d	    0x443b25000000	           cmp r12d, dword [0x040008a4] 	       377	buffer.c	FUNCTION_4	CALL_1
0x40008a4	            0x7442	                            je 0x40008e8	       377	buffer.c	FUNCTION_4	CALL_1
0x40008a6	    0x488b05000000	            mov rax, qword [0x040008ad] 	       392	buffer.c	FUNCTION_5	FOR_1
0x40008ad	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x40008b0	            0x750f	                           jne 0x40008c1	       392	buffer.c	FUNCTION_5	FOR_1
0x40008b2	            0xeb1f	                           jmp 0x40008d3	       392	buffer.c	FUNCTION_5	FOR_1
0x40008b4	         0xf1f4000	                         nop dword [rax]	       392	buffer.c	FUNCTION_5	FOR_1
0x40008b8	        0x488b4070	            mov rax, qword [rax + 0x70] 	       392	buffer.c	FUNCTION_5	FOR_1
0x40008bc	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x40008bf	            0x7412	                            je 0x40008d3	       392	buffer.c	FUNCTION_5	FOR_1
0x40008c1	          0x4939c7	                            cmp r15, rax	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x40008c4	            0x75f2	                           jne 0x40008b8	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x40008c6	        0x8b442404	                mov eax, dword [rsp + 4]	       378	buffer.c	FUNCTION_4
0x40008ca	    0x413b87b80000	            cmp eax, dword [r15 + 0xb8] 	       378	buffer.c	FUNCTION_4
0x40008d1	            0x7415	                            je 0x40008e8	       378	buffer.c	FUNCTION_4
0x40008d3	        0x4883c418	                           add rsp, 0x18	       814	buffer.c	FUNCTION_10
0x40008d7	              0x5b	                                 pop rbx	       814	buffer.c	FUNCTION_10
0x40008d8	              0x5d	                                 pop rbp	       814	buffer.c	FUNCTION_10
0x40008d9	            0x415c	                                 pop r12	       814	buffer.c	FUNCTION_10
0x40008db	            0x415d	                                 pop r13	       814	buffer.c	FUNCTION_10
0x40008dd	            0x415e	                                 pop r14	       814	buffer.c	FUNCTION_10
0x40008df	            0x415f	                                 pop r15	       814	buffer.c	FUNCTION_10
0x40008e1	              0xc3	                                     ret	       814	buffer.c	FUNCTION_10
0x40008e2	    0x660f1f440000	                    nop word [rax + rax]	       814	buffer.c	FUNCTION_10
0x40008e8	        0x40f6c501	                             test bpl, 1	       738	buffer.c	FUNCTION_10	IF_3
0x40008ec	     0xf85ee000000	                           jne 0x40009e0	       738	buffer.c	FUNCTION_10	IF_3
0x40008f2	        0x40f6c502	                             test bpl, 2	       746	buffer.c	FUNCTION_10	IF_5
0x40008f6	     0xf8580010000	                           jne 0x4000a7c	       746	buffer.c	FUNCTION_10	IF_5
0x40008fc	    0x4183af800000	               sub dword [r15 + 0x80], 1	       754	buffer.c	FUNCTION_10
0x4000904	            0x85db	                           test ebx, ebx	       759	buffer.c	FUNCTION_10	IF_7	CALL_8
0x4000906	            0x7419	                            je 0x4000921	       759	buffer.c	FUNCTION_10	IF_7	CALL_8
0x4000908	    0x4c3b35000000	            cmp r14, qword [0x0400090f] 	       759	buffer.c	FUNCTION_10	IF_7	CALL_8
0x400090f	            0x7410	                            je 0x4000921	       759	buffer.c	FUNCTION_10	IF_7	CALL_8
0x4000911	          0x4c89f7	                            mov rdi, r14	       759	buffer.c	FUNCTION_10	IF_7	CALL_8
0x4000914	      0xe800000000	                          call 0x4000919	       759	buffer.c	FUNCTION_10	IF_7	CALL_8
0x4000919	            0x85c0	                           test eax, eax	       759	buffer.c	FUNCTION_10	IF_7	CALL_8
0x400091b	     0xf85dc010000	                           jne 0x4000afd	       759	buffer.c	FUNCTION_10	IF_7	CALL_8
0x4000921	      0xe800000000	                          call 0x4000926	       767	buffer.c	FUNCTION_10	IF_8	CALL_12
0x4000926	            0x85c0	                           test eax, eax	       767	buffer.c	FUNCTION_10	IF_8	CALL_12
0x4000928	            0x75a9	                           jne 0x40008d3	       767	buffer.c	FUNCTION_10	IF_8	CALL_12
0x400092a	    0x4c393d000000	            cmp qword [0x04000931], r15 	       777	buffer.c	FUNCTION_10	IF_9
0x4000931	            0x7505	                           jne 0x4000938	       777	buffer.c	FUNCTION_10	IF_9
0x4000933	          0x4d39fd	                            cmp r13, r15	       777	buffer.c	FUNCTION_10	IF_9
0x4000936	            0x759b	                           jne 0x40008d3	       777	buffer.c	FUNCTION_10	IF_9
0x4000938	          0x4c89ff	                            mov rdi, r15	       780	buffer.c	FUNCTION_10	CALL_13
0x400093b	      0xe800000000	                          call 0x4000940	       780	buffer.c	FUNCTION_10	CALL_13
0x4000940	    0x488b3d000000	            mov rdi, qword [0x04000947] 	       784	buffer.c	FUNCTION_10	IF_10
0x4000947	          0x4885ff	                           test rdi, rdi	       784	buffer.c	FUNCTION_10	IF_10
0x400094a	            0x740a	                            je 0x4000956	       784	buffer.c	FUNCTION_10	IF_10
0x400094c	        0x4c3b7f08	                cmp r15, qword [rdi + 8]	       784	buffer.c	FUNCTION_10	IF_10
0x4000950	     0xf84ca010000	                            je 0x4000b20	       784	buffer.c	FUNCTION_10	IF_10
0x4000956	    0x4c8b25000000	            mov r12, qword [0x0400095d] 	       794	buffer.c	FUNCTION_10	CALL_15
0x400095d	          0x4d85e4	                           test r12, r12	       794	buffer.c	FUNCTION_10	CALL_15
0x4000960	            0x743a	                            je 0x400099c	       794	buffer.c	FUNCTION_10	CALL_15
0x4000962	    0x660f1f440000	                    nop word [rax + rax]	       794	buffer.c	FUNCTION_10	CALL_15
0x4000968	    0x4c3925000000	            cmp qword [0x0400096f], r12 	       794	buffer.c	FUNCTION_10	CALL_15
0x400096f	     0xf84fb000000	                            je 0x4000a70	       794	buffer.c	FUNCTION_10	CALL_15
0x4000975	      0x498b5c2420	            mov rbx, qword [r12 + 0x20] 	       794	buffer.c	FUNCTION_10	CALL_15
0x400097a	            0xeb12	                           jmp 0x400098e	       794	buffer.c	FUNCTION_10	CALL_15
0x400097c	         0xf1f4000	                         nop dword [rax]	       794	buffer.c	FUNCTION_10	CALL_15
0x4000980	        0x4c3b7b08	                cmp r15, qword [rbx + 8]	       795	buffer.c	FUNCTION_10	IF_11
0x4000984	     0xf84d6000000	                            je 0x4000a60	       795	buffer.c	FUNCTION_10	IF_11
0x400098a	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	       794	buffer.c	FUNCTION_10	CALL_15
0x400098e	          0x4885db	                           test rbx, rbx	       794	buffer.c	FUNCTION_10	CALL_15
0x4000991	            0x75ed	                           jne 0x4000980	       794	buffer.c	FUNCTION_10	CALL_15
0x4000993	        0x4d8b2424	                    mov r12, qword [r12]	       794	buffer.c	FUNCTION_10	CALL_15
0x4000997	          0x4d85e4	                           test r12, r12	       794	buffer.c	FUNCTION_10	CALL_15
0x400099a	            0x75cc	                           jne 0x4000968	       794	buffer.c	FUNCTION_10	CALL_15
0x400099c	      0xbe01000000	                              mov esi, 1	       803	buffer.c	FUNCTION_10	CALL_18
0x40009a1	          0x4c89ff	                            mov rdi, r15	       803	buffer.c	FUNCTION_10	CALL_18
0x40009a4	      0xe800000000	                          call 0x40009a9	       803	buffer.c	FUNCTION_10	CALL_18
0x40009a9	          0x83e504	                              and ebp, 4	       805	buffer.c	FUNCTION_10	IF_12
0x40009ac	    0x49c707000000	                      mov qword [r15], 0	       804	buffer.c	FUNCTION_10
0x40009b3	     0xf842f010000	                            je 0x4000ae8	       805	buffer.c	FUNCTION_10	IF_12
0x40009b9	    0x498dbf681700	                 lea rdi, [r15 + 0x1768]	       811	buffer.c	FUNCTION_10	CALL_21
0x40009c0	      0xe800000000	                          call 0x40009c5	       811	buffer.c	FUNCTION_10	CALL_21
0x40009c5	      0x4183677cbf	      and dword [r15 + 0x7c], 0xffffffbf	       813	buffer.c	FUNCTION_10
0x40009ca	        0x4883c418	                           add rsp, 0x18	       814	buffer.c	FUNCTION_10
0x40009ce	              0x5b	                                 pop rbx	       814	buffer.c	FUNCTION_10
0x40009cf	              0x5d	                                 pop rbp	       814	buffer.c	FUNCTION_10
0x40009d0	            0x415c	                                 pop r12	       814	buffer.c	FUNCTION_10
0x40009d2	            0x415d	                                 pop r13	       814	buffer.c	FUNCTION_10
0x40009d4	            0x415e	                                 pop r14	       814	buffer.c	FUNCTION_10
0x40009d6	            0x415f	                                 pop r15	       814	buffer.c	FUNCTION_10
0x40009d8	              0xc3	                                     ret	       814	buffer.c	FUNCTION_10
0x40009d9	     0xf1f80000000	                         nop dword [rax]	       814	buffer.c	FUNCTION_10
0x40009e0	    0x418b87241400	          mov eax, dword [r15 + 0x1424] 	       738	buffer.c	FUNCTION_10	IF_3
0x40009e7	            0x85c0	                           test eax, eax	       738	buffer.c	FUNCTION_10	IF_3
0x40009e9	     0xf8403ffffff	                            je 0x40008f2	       738	buffer.c	FUNCTION_10	IF_3
0x40009ef	    0x498bb7980000	            mov rsi, qword [r15 + 0x98] 	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x40009f6	            0x31c9	                            xor ecx, ecx	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x40009f8	          0x4d89f8	                             mov r8, r15	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x40009fb	      0xbf01000000	                              mov edi, 1	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x4000a00	          0x4889f2	                            mov rdx, rsi	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x4000a03	      0xe800000000	                          call 0x4000a08	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x4000a08	            0x85c0	                           test eax, eax	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x4000a0a	     0xf84e2feffff	                            je 0x40008f2	       740	buffer.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x4000a10	    0x443b25000000	           cmp r12d, dword [0x04000a17] 	       377	buffer.c	FUNCTION_4	CALL_1
0x4000a17	     0xf84d5feffff	                            je 0x40008f2	       377	buffer.c	FUNCTION_4	CALL_1
0x4000a1d	    0x488b05000000	            mov rax, qword [0x04000a24] 	       392	buffer.c	FUNCTION_5	FOR_1
0x4000a24	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x4000a27	            0x7514	                           jne 0x4000a3d	       392	buffer.c	FUNCTION_5	FOR_1
0x4000a29	      0xe9a5feffff	                           jmp 0x40008d3	       392	buffer.c	FUNCTION_5	FOR_1
0x4000a2e	            0x6690	                                     nop	       392	buffer.c	FUNCTION_5	FOR_1
0x4000a30	        0x488b4070	            mov rax, qword [rax + 0x70] 	       392	buffer.c	FUNCTION_5	FOR_1
0x4000a34	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x4000a37	     0xf8496feffff	                            je 0x40008d3	       392	buffer.c	FUNCTION_5	FOR_1
0x4000a3d	          0x4939c7	                            cmp r15, rax	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4000a40	            0x75ee	                           jne 0x4000a30	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4000a42	        0x8b442404	                mov eax, dword [rsp + 4]	       378	buffer.c	FUNCTION_4
0x4000a46	    0x413b87b80000	            cmp eax, dword [r15 + 0xb8] 	       378	buffer.c	FUNCTION_4
0x4000a4d	     0xf8580feffff	                           jne 0x40008d3	       378	buffer.c	FUNCTION_4
0x4000a53	      0xe99afeffff	                           jmp 0x40008f2	       378	buffer.c	FUNCTION_4
0x4000a58	     0xf1f84000000	                   nop dword [rax + rax]	       378	buffer.c	FUNCTION_4
0x4000a60	          0x4889df	                            mov rdi, rbx	       796	buffer.c	FUNCTION_10	CALL_16
0x4000a63	      0xe800000000	                          call 0x4000a68	       796	buffer.c	FUNCTION_10	CALL_16
0x4000a68	      0xe91dffffff	                           jmp 0x400098a	       796	buffer.c	FUNCTION_10	CALL_16
0x4000a6d	           0xf1f00	                         nop dword [rax]	       796	buffer.c	FUNCTION_10	CALL_16
0x4000a70	    0x488b1d000000	            mov rbx, qword [0x04000a77] 	       794	buffer.c	FUNCTION_10	CALL_15
0x4000a77	      0xe912ffffff	                           jmp 0x400098e	       794	buffer.c	FUNCTION_10	CALL_15
0x4000a7c	    0x498bb7980000	            mov rsi, qword [r15 + 0x98] 	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x4000a83	            0x31c9	                            xor ecx, ecx	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x4000a85	          0x4d89f8	                             mov r8, r15	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x4000a88	      0xbf0f000000	                            mov edi, 0xf	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x4000a8d	          0x4889f2	                            mov rdx, rsi	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x4000a90	      0xe800000000	                          call 0x4000a95	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x4000a95	            0x85c0	                           test eax, eax	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x4000a97	     0xf845ffeffff	                            je 0x40008fc	       748	buffer.c	FUNCTION_10	IF_5	IF_6	CALL_6
0x4000a9d	    0x443b25000000	           cmp r12d, dword [0x04000aa4] 	       377	buffer.c	FUNCTION_4	CALL_1
0x4000aa4	     0xf8452feffff	                            je 0x40008fc	       377	buffer.c	FUNCTION_4	CALL_1
0x4000aaa	    0x488b05000000	            mov rax, qword [0x04000ab1] 	       392	buffer.c	FUNCTION_5	FOR_1
0x4000ab1	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x4000ab4	            0x7517	                           jne 0x4000acd	       392	buffer.c	FUNCTION_5	FOR_1
0x4000ab6	      0xe918feffff	                           jmp 0x40008d3	       392	buffer.c	FUNCTION_5	FOR_1
0x4000abb	       0xf1f440000	                   nop dword [rax + rax]	       392	buffer.c	FUNCTION_5	FOR_1
0x4000ac0	        0x488b4070	            mov rax, qword [rax + 0x70] 	       392	buffer.c	FUNCTION_5	FOR_1
0x4000ac4	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x4000ac7	     0xf8406feffff	                            je 0x40008d3	       392	buffer.c	FUNCTION_5	FOR_1
0x4000acd	          0x4939c7	                            cmp r15, rax	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4000ad0	            0x75ee	                           jne 0x4000ac0	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4000ad2	        0x8b442404	                mov eax, dword [rsp + 4]	       378	buffer.c	FUNCTION_4
0x4000ad6	    0x413b87b80000	            cmp eax, dword [r15 + 0xb8] 	       378	buffer.c	FUNCTION_4
0x4000add	     0xf85f0fdffff	                           jne 0x40008d3	       378	buffer.c	FUNCTION_4
0x4000ae3	      0xe914feffff	                           jmp 0x40008fc	       378	buffer.c	FUNCTION_4
0x4000ae8	          0x4c89ff	                            mov rdi, r15	       807	buffer.c	FUNCTION_10	IF_12	CALL_19
0x4000aeb	      0xe800000000	                          call 0x4000af0	       807	buffer.c	FUNCTION_10	IF_12	CALL_19
0x4000af0	          0x4c89ff	                            mov rdi, r15	       808	buffer.c	FUNCTION_10	IF_12	CALL_20
0x4000af3	      0xe800000000	                          call 0x4000af8	       808	buffer.c	FUNCTION_10	IF_12	CALL_20
0x4000af8	      0xe9bcfeffff	                           jmp 0x40009b9	       808	buffer.c	FUNCTION_10	IF_12	CALL_20
0x4000afd	      0xe800000000	                          call 0x4000b02	       761	buffer.c	FUNCTION_10	IF_7	CALL_9
0x4000b02	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       762	buffer.c	FUNCTION_10	IF_7	CALL_10
0x4000b07	          0x4c89f6	                            mov rsi, r14	       762	buffer.c	FUNCTION_10	IF_7	CALL_10
0x4000b0a	      0xe800000000	                          call 0x4000b0f	       762	buffer.c	FUNCTION_10	IF_7	CALL_10
0x4000b0f	      0xe800000000	                          call 0x4000b14	       763	buffer.c	FUNCTION_10	IF_7	CALL_11
0x4000b14	      0xe908feffff	                           jmp 0x4000921	       763	buffer.c	FUNCTION_10	IF_7	CALL_11
0x4000b19	            0x31db	                            xor ebx, ebx	       723	buffer.c	FUNCTION_10
0x4000b1b	      0xe933fdffff	                           jmp 0x4000853	       723	buffer.c	FUNCTION_10
0x4000b20	      0xe800000000	                          call 0x4000b25	       785	buffer.c	FUNCTION_10	CALL_14
0x4000b25	      0xe92cfeffff	                           jmp 0x4000956	       785	buffer.c	FUNCTION_10	CALL_14
switch_to_win_for_buf	FOR,0:WHILE,0:DO,0:ELSE,1:functions,0:CALL,5:SWITCH,0:IF,2	66
0x400bd60	            0x4155	                                push r13	      5730	buffer.c	FUNCTION_85
0x400bd62	            0x4154	                                push r12	      5730	buffer.c	FUNCTION_85
0x400bd64	              0x55	                                push rbp	      5730	buffer.c	FUNCTION_85
0x400bd65	              0x53	                                push rbx	      5730	buffer.c	FUNCTION_85
0x400bd66	        0x4883ec08	                              sub rsp, 8	      5730	buffer.c	FUNCTION_85
0x400bd6a	    0x4c8b0d000000	              mov r9, qword [0x0400bd71]	      5768	buffer.c	FUNCTION_87	CALL_1
0x400bd71	          0x4d85c9	                             test r9, r9	      5768	buffer.c	FUNCTION_87	CALL_1
0x400bd74	            0x7431	                            je 0x400bda7	      5768	buffer.c	FUNCTION_87	CALL_1
0x400bd76	    0x4c8b05000000	              mov r8, qword [0x0400bd7d]	      5768	buffer.c	FUNCTION_87	CALL_1
0x400bd7d	    0x4c8b15000000	            mov r10, qword [0x0400bd84] 	      5768	buffer.c	FUNCTION_87	CALL_1
0x400bd84	          0x4d39c1	                              cmp r9, r8	      5768	buffer.c	FUNCTION_87	CALL_1
0x400bd87	            0x746f	                            je 0x400bdf8	      5768	buffer.c	FUNCTION_87	CALL_1
0x400bd89	        0x498b4120	              mov rax, qword [r9 + 0x20]	      5768	buffer.c	FUNCTION_87	CALL_1
0x400bd8d	            0xeb0b	                           jmp 0x400bd9a	      5768	buffer.c	FUNCTION_87	CALL_1
0x400bd8f	              0x90	                                     nop	      5768	buffer.c	FUNCTION_87	CALL_1
0x400bd90	        0x483b7808	                cmp rdi, qword [rax + 8]	      5769	buffer.c	FUNCTION_87	IF_1
0x400bd94	            0x742a	                            je 0x400bdc0	      5769	buffer.c	FUNCTION_87	IF_1
0x400bd96	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5768	buffer.c	FUNCTION_87	CALL_1
0x400bd9a	          0x4885c0	                           test rax, rax	      5768	buffer.c	FUNCTION_87	CALL_1
0x400bd9d	            0x75f1	                           jne 0x400bd90	      5768	buffer.c	FUNCTION_87	CALL_1
0x400bd9f	          0x4d8b09	                      mov r9, qword [r9]	      5768	buffer.c	FUNCTION_87	CALL_1
0x400bda2	          0x4d85c9	                             test r9, r9	      5768	buffer.c	FUNCTION_87	CALL_1
0x400bda5	            0x75dd	                           jne 0x400bd84	      5768	buffer.c	FUNCTION_87	CALL_1
0x400bda7	        0x4883c408	                              add rsp, 8	      5741	buffer.c	FUNCTION_85
0x400bdab	          0x4889fe	                            mov rsi, rdi	      5735	buffer.c	FUNCTION_85	CALL_2
0x400bdae	          0x4889cf	                            mov rdi, rcx	      5735	buffer.c	FUNCTION_85	CALL_2
0x400bdb1	              0x5b	                                 pop rbx	      5741	buffer.c	FUNCTION_85
0x400bdb2	              0x5d	                                 pop rbp	      5741	buffer.c	FUNCTION_85
0x400bdb3	            0x415c	                                 pop r12	      5741	buffer.c	FUNCTION_85
0x400bdb5	            0x415d	                                 pop r13	      5741	buffer.c	FUNCTION_85
0x400bdb7	      0xe900000000	                           jmp 0x400bdbc	      5735	buffer.c	FUNCTION_85	CALL_2
0x400bdbc	         0xf1f4000	                         nop dword [rax]	      5735	buffer.c	FUNCTION_85	CALL_2
0x400bdc0	          0x4989d5	                            mov r13, rdx	      5735	buffer.c	FUNCTION_85	CALL_2
0x400bdc3	          0x4889f5	                            mov rbp, rsi	      5735	buffer.c	FUNCTION_85	CALL_2
0x400bdc6	          0x4989cc	                            mov r12, rcx	      5735	buffer.c	FUNCTION_85	CALL_2
0x400bdc9	          0x4889fb	                            mov rbx, rdi	      5735	buffer.c	FUNCTION_85	CALL_2
0x400bdcc	    0x41b801000000	                              mov r8d, 1	      5736	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_3
0x400bdd2	          0x4c89c9	                             mov rcx, r9	      5736	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_3
0x400bdd5	          0x4889c2	                            mov rdx, rax	      5736	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_3
0x400bdd8	          0x4c89ee	                            mov rsi, r13	      5736	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_3
0x400bddb	          0x4889ef	                            mov rdi, rbp	      5736	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_3
0x400bdde	      0xe800000000	                          call 0x400bde3	      5736	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_3
0x400bde3	            0x85c0	                           test eax, eax	      5736	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_3
0x400bde5	            0x7419	                            je 0x400be00	      5736	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_3
0x400bde7	        0x4883c408	                              add rsp, 8	      5741	buffer.c	FUNCTION_85
0x400bdeb	              0x5b	                                 pop rbx	      5741	buffer.c	FUNCTION_85
0x400bdec	              0x5d	                                 pop rbp	      5741	buffer.c	FUNCTION_85
0x400bded	            0x415c	                                 pop r12	      5741	buffer.c	FUNCTION_85
0x400bdef	            0x415d	                                 pop r13	      5741	buffer.c	FUNCTION_85
0x400bdf1	              0xc3	                                     ret	      5741	buffer.c	FUNCTION_85
0x400bdf2	    0x660f1f440000	                    nop word [rax + rax]	      5741	buffer.c	FUNCTION_85
0x400bdf8	          0x4c89d0	                            mov rax, r10	      5768	buffer.c	FUNCTION_87	CALL_1
0x400bdfb	            0xeb9d	                           jmp 0x400bd9a	      5768	buffer.c	FUNCTION_87	CALL_1
0x400bdfd	           0xf1f00	                         nop dword [rax]	      5768	buffer.c	FUNCTION_87	CALL_1
0x400be00	        0x498b7500	                    mov rsi, qword [r13]	      5738	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_4
0x400be04	        0x488b7d00	                    mov rdi, qword [rbp]	      5738	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_4
0x400be08	      0xba01000000	                              mov edx, 1	      5738	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_4
0x400be0d	      0xe800000000	                          call 0x400be12	      5738	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_4
0x400be12	        0x4883c408	                              add rsp, 8	      5741	buffer.c	FUNCTION_85
0x400be16	          0x4889de	                            mov rsi, rbx	      5739	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_5
0x400be19	          0x4c89e7	                            mov rdi, r12	      5739	buffer.c	FUNCTION_85	ELSE_1	IF_2	CALL_5
0x400be1c	              0x5b	                                 pop rbx	      5741	buffer.c	FUNCTION_85
0x400be1d	              0x5d	                                 pop rbp	      5741	buffer.c	FUNCTION_85
0x400be1e	            0x415c	                                 pop r12	      5741	buffer.c	FUNCTION_85
0x400be20	            0x415d	                                 pop r13	      5741	buffer.c	FUNCTION_85
0x400be22	      0xe900000000	                           jmp 0x400be27	      5735	buffer.c	FUNCTION_85	CALL_2
ex_buffer_all	FOR,4:WHILE,0:DO,0:ELSE,8:functions,0:CALL,27:SWITCH,0:IF,20	401
0x400b100	            0x4157	                                push r15	      5121	buffer.c	FUNCTION_72
0x400b102	            0x4156	                                push r14	      5121	buffer.c	FUNCTION_72
0x400b104	            0x4155	                                push r13	      5121	buffer.c	FUNCTION_72
0x400b106	            0x4154	                                push r12	      5121	buffer.c	FUNCTION_72
0x400b108	              0x55	                                push rbp	      5121	buffer.c	FUNCTION_72
0x400b109	              0x53	                                push rbx	      5121	buffer.c	FUNCTION_72
0x400b10a	      0xbb0f270000	                         mov ebx, 0x270f	      5121	buffer.c	FUNCTION_72
0x400b10f	        0x4883ec48	                           sub rsp, 0x48	      5121	buffer.c	FUNCTION_72
0x400b113	        0x448b7738	           mov r14d, dword [rdi + 0x38] 	      5133	buffer.c	FUNCTION_72	IF_1
0x400b117	    0x8b2d00000000	            mov ebp, dword [0x0400b11d] 	      5130	buffer.c	FUNCTION_72
0x400b11d	    0x64488b042528	                mov rax, qword fs:[0x28]	      5121	buffer.c	FUNCTION_72
0x400b126	      0x4889442438	             mov qword [rsp + 0x38], rax	      5121	buffer.c	FUNCTION_72
0x400b12b	            0x31c0	                            xor eax, eax	      5121	buffer.c	FUNCTION_72
0x400b12d	          0x4585f6	                         test r14d, r14d	      5133	buffer.c	FUNCTION_72	IF_1
0x400b130	            0x7403	                            je 0x400b135	      5133	buffer.c	FUNCTION_72	IF_1
0x400b132	          0x8b5f48	            mov ebx, dword [rdi + 0x48] 	      5136	buffer.c	FUNCTION_72	ELSE_1
0x400b135	          0x8b4720	            mov eax, dword [rdi + 0x20] 	      5137	buffer.c	FUNCTION_72	IF_2
0x400b138	      0x3de1010000	                          cmp eax, 0x1e1	      5137	buffer.c	FUNCTION_72	IF_2
0x400b13d	        0x410f94c4	                               sete r12b	      5137	buffer.c	FUNCTION_72	IF_2
0x400b141	      0x3dab010000	                          cmp eax, 0x1ab	      5137	buffer.c	FUNCTION_72	IF_2
0x400b146	           0xf94c0	                                 sete al	      5137	buffer.c	FUNCTION_72	IF_2
0x400b149	          0x4109c4	                            or r12d, eax	      5137	buffer.c	FUNCTION_72	IF_2
0x400b14c	      0xe800000000	                          call 0x400b151	      5142	buffer.c	FUNCTION_72	CALL_1
0x400b151	            0x85ed	                           test ebp, ebp	      5152	buffer.c	FUNCTION_72	IF_3
0x400b153	    0xc70500000000	               mov dword [0x0400b15d], 1	      5145	buffer.c	FUNCTION_72
0x400b15d	            0x7e16	                           jle 0x400b175	      5152	buffer.c	FUNCTION_72	IF_3
0x400b15f	    0x488b3d000000	            mov rdi, qword [0x0400b166] 	      5153	buffer.c	FUNCTION_72	CALL_2
0x400b166	      0xba01000000	                              mov edx, 1	      5153	buffer.c	FUNCTION_72	CALL_2
0x400b16b	      0xbe01000000	                              mov esi, 1	      5153	buffer.c	FUNCTION_72	CALL_2
0x400b170	      0xe800000000	                          call 0x400b175	      5153	buffer.c	FUNCTION_72	CALL_2
0x400b175	            0x85ed	                           test ebp, ebp	      5153	buffer.c	FUNCTION_72	CALL_2
0x400b177	       0xf9444241f	                  sete byte [rsp + 0x1f]	      5153	buffer.c	FUNCTION_72	CALL_2
0x400b17c	          0x4531ff	                          xor r15d, r15d	      5134	buffer.c	FUNCTION_72	IF_1
0x400b17f	              0x90	                                     nop	      5134	buffer.c	FUNCTION_72	IF_1
0x400b180	    0x4c8b05000000	              mov r8, qword [0x0400b187]	      5157	buffer.c	FUNCTION_72	FOR_1	FOR_2
0x400b187	    0x488b05000000	            mov rax, qword [0x0400b18e] 	      5156	buffer.c	FUNCTION_72	FOR_1
0x400b18e	          0x4d85c0	                             test r8, r8	      5157	buffer.c	FUNCTION_72	FOR_1	FOR_2
0x400b191	          0x488b38	                    mov rdi, qword [rax]	      5156	buffer.c	FUNCTION_72	FOR_1
0x400b194	          0x4c89c2	                             mov rdx, r8	      5157	buffer.c	FUNCTION_72	FOR_1	FOR_2
0x400b197	     0xf84f3000000	                            je 0x400b290	      5157	buffer.c	FUNCTION_72	FOR_1	FOR_2
0x400b19d	            0x85ed	                           test ebp, ebp	      5157	buffer.c	FUNCTION_72	FOR_1	FOR_2
0x400b19f	            0x7f45	                            jg 0x400b1e6	      5157	buffer.c	FUNCTION_72	FOR_1	FOR_2
0x400b1a1	      0xe9d3000000	                           jmp 0x400b279	      5157	buffer.c	FUNCTION_72	FOR_1	FOR_2
0x400b1a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5157	buffer.c	FUNCTION_72	FOR_1	FOR_2
0x400b1b0	    0x4c3905000000	              cmp qword [0x0400b1b7], r8	      5165	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b1b7	            0x741d	                            je 0x400b1d6	      5165	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b1b9	        0x448b5228	           mov r10d, dword [rdx + 0x28] 	      5166	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b1bd	          0x4585d2	                         test r10d, r10d	      5166	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b1c0	            0x7514	                           jne 0x400b1d6	      5166	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b1c2	        0x488b4208	                mov rax, qword [rdx + 8]	      5166	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b1c6	    0x448b88800000	            mov r9d, dword [rax + 0x80] 	      5166	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b1cd	          0x4585c9	                           test r9d, r9d	      5166	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b1d0	     0xf8e52010000	                           jle 0x400b328	      5166	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b1d6	        0x4183c701	                             add r15d, 1	      5175	buffer.c	FUNCTION_72	FOR_1	FOR_2	ELSE_3
0x400b1da	          0x4889f2	                            mov rdx, rsi	      5159	buffer.c	FUNCTION_72	FOR_1	FOR_2
0x400b1dd	          0x4885d2	                           test rdx, rdx	      5157	buffer.c	FUNCTION_72	FOR_1	FOR_2
0x400b1e0	     0xf84aa000000	                            je 0x400b290	      5157	buffer.c	FUNCTION_72	FOR_1	FOR_2
0x400b1e6	        0x488b4208	                mov rax, qword [rdx + 8]	      5160	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b1ea	        0x488b7220	            mov rsi, qword [rdx + 0x20] 	      5159	buffer.c	FUNCTION_72	FOR_1	FOR_2
0x400b1ee	        0x83787801	               cmp dword [rax + 0x78], 1	      5160	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b1f2	            0x7fbc	                            jg 0x400b1b0	      5160	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b1f4	    0xf60500000000	               test byte [0x0400b1fb], 2	      5160	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b1fb	     0xf85bf000000	                           jne 0x400b2c0	      5160	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b201	    0x486382ac0000	         movsxd rax, dword [rdx + 0xac] 	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b208	    0x483b05000000	            cmp rax, qword [0x0400b20f] 	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b20f	            0x759f	                           jne 0x400b1b0	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b211	          0x4c39c2	                             cmp rdx, r8	      5165	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b214	            0x759a	                           jne 0x400b1b0	      5165	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b216	            0xebbe	                           jmp 0x400b1d6	      5165	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b218	     0xf1f84000000	                   nop dword [rax + rax]	      5165	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b220	    0xf60500000000	               test byte [0x0400b227], 2	      5160	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b227	     0xf8523010000	                           jne 0x400b350	      5160	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b22d	    0x486382ac0000	         movsxd rax, dword [rdx + 0xac] 	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b234	    0x483905000000	            cmp qword [0x0400b23b], rax 	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b23b	            0x7430	                            je 0x400b26d	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b23d	           0xf1f00	                         nop dword [rax]	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b240	    0x488b05000000	            mov rax, qword [0x0400b247] 	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b247	    0x483905000000	            cmp qword [0x0400b24e], rax 	      5165	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b24e	            0x741d	                            je 0x400b26d	      5165	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b250	        0x448b6a28	           mov r13d, dword [rdx + 0x28] 	      5166	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b254	          0x4585ed	                         test r13d, r13d	      5166	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b257	            0x7514	                           jne 0x400b26d	      5166	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b259	        0x488b4208	                mov rax, qword [rdx + 8]	      5166	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b25d	    0x448b98800000	           mov r11d, dword [rax + 0x80] 	      5166	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b264	          0x4585db	                         test r11d, r11d	      5166	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b267	     0xf8e43010000	                           jle 0x400b3b0	      5166	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b26d	        0x4183c701	                             add r15d, 1	      5175	buffer.c	FUNCTION_72	FOR_1	FOR_2	ELSE_3
0x400b271	          0x4889f2	                            mov rdx, rsi	      5159	buffer.c	FUNCTION_72	FOR_1	FOR_2
0x400b274	          0x4885d2	                           test rdx, rdx	      5157	buffer.c	FUNCTION_72	FOR_1	FOR_2
0x400b277	            0x7417	                            je 0x400b290	      5157	buffer.c	FUNCTION_72	FOR_1	FOR_2
0x400b279	        0x488b4208	                mov rax, qword [rdx + 8]	      5160	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b27d	        0x488b7220	            mov rsi, qword [rdx + 0x20] 	      5159	buffer.c	FUNCTION_72	FOR_1	FOR_2
0x400b281	        0x83787801	               cmp dword [rax + 0x78], 1	      5160	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b285	            0x7fb9	                            jg 0x400b240	      5160	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b287	            0xeb97	                           jmp 0x400b220	      5160	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b289	     0xf1f80000000	                         nop dword [rax]	      5160	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b290	          0x4885ff	                           test rdi, rdi	      5179	buffer.c	FUNCTION_72	FOR_1	IF_5
0x400b293	     0xf8437010000	                            je 0x400b3d0	      5179	buffer.c	FUNCTION_72	FOR_1	IF_5
0x400b299	      0x807c241f00	                cmp byte [rsp + 0x1f], 0	      5179	buffer.c	FUNCTION_72	FOR_1	IF_5
0x400b29e	     0xf852c010000	                           jne 0x400b3d0	      5179	buffer.c	FUNCTION_72	FOR_1	IF_5
0x400b2a4	      0xba01000000	                              mov edx, 1	      5181	buffer.c	FUNCTION_72	FOR_1	CALL_5
0x400b2a9	      0xbe01000000	                              mov esi, 1	      5181	buffer.c	FUNCTION_72	FOR_1	CALL_5
0x400b2ae	      0xe800000000	                          call 0x400b2b3	      5181	buffer.c	FUNCTION_72	FOR_1	CALL_5
0x400b2b3	      0xe9c8feffff	                           jmp 0x400b180	      5182	buffer.c	FUNCTION_72	FOR_1
0x400b2b8	     0xf1f84000000	                   nop dword [rax + rax]	      5182	buffer.c	FUNCTION_72	FOR_1
0x400b2c0	    0x448bb2a40000	           mov r14d, dword [rdx + 0xa4] 	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b2c7	    0x4c8b2d000000	            mov r13, qword [0x0400b2ce] 	      5162	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b2ce	    0x4403b2a00000	            add r14d, dword [rdx + 0xa0]	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b2d5	    0x4c2b2d000000	             sub r13, qword [0x0400b2dc]	      5162	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b2dc	      0x4889742410	             mov qword [rsp + 0x10], rsi	      5162	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b2e1	      0x48897c2408	                mov qword [rsp + 8], rdi	      5162	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b2e6	        0x48891424	                    mov qword [rsp], rdx	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b2ea	      0xe800000000	                          call 0x400b2ef	      5163	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4	CALL_3
0x400b2ef	            0x4898	                                    cdqe	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b2f1	          0x4d63f6	                        movsxd r14, r14d	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b2f4	    0x4c8b05000000	              mov r8, qword [0x0400b2fb]	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b2fb	          0x4929c5	                            sub r13, rax	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b2fe	        0x488b1424	                    mov rdx, qword [rsp]	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b302	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b307	          0x4d39ee	                            cmp r14, r13	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b30a	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b30f	     0xf8c9bfeffff	                            jl 0x400b1b0	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b315	          0x4c39c2	                             cmp rdx, r8	      5165	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b318	     0xf8592feffff	                           jne 0x400b1b0	      5165	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b31e	      0xe9b3feffff	                           jmp 0x400b1d6	      5165	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b323	       0xf1f440000	                   nop dword [rax + rax]	      5165	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b328	          0x4889d7	                            mov rdi, rdx	      5168	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4	CALL_4
0x400b32b	            0x31f6	                            xor esi, esi	      5168	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4	CALL_4
0x400b32d	          0x4531ff	                          xor r15d, r15d	      5172	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b330	      0xe800000000	                          call 0x400b335	      5168	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4	CALL_4
0x400b335	    0x488b15000000	            mov rdx, qword [0x0400b33c] 	      5169	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b33c	    0x488b3d000000	            mov rdi, qword [0x0400b343] 	      5171	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b343	          0x4989d0	                             mov r8, rdx	      5169	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b346	      0xe992feffff	                           jmp 0x400b1dd	      5172	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b34b	       0xf1f440000	                   nop dword [rax + rax]	      5172	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b350	    0x448baaa00000	           mov r13d, dword [rdx + 0xa0] 	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b357	    0x4c8b35000000	            mov r14, qword [0x0400b35e] 	      5162	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b35e	    0x4403aaa40000	            add r13d, dword [rdx + 0xa4]	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b365	    0x4c2b35000000	             sub r14, qword [0x0400b36c]	      5162	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b36c	      0x4889742408	                mov qword [rsp + 8], rsi	      5162	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b371	        0x48893c24	                    mov qword [rsp], rdi	      5162	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b375	      0x4889542410	             mov qword [rsp + 0x10], rdx	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b37a	      0xe800000000	                          call 0x400b37f	      5163	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4	CALL_3
0x400b37f	            0x4898	                                    cdqe	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b381	          0x4d63ed	                        movsxd r13, r13d	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b384	        0x488b3c24	                    mov rdi, qword [rsp]	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b388	          0x4929c6	                            sub r14, rax	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b38b	      0x488b742408	                mov rsi, qword [rsp + 8]	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b390	          0x4d39ee	                            cmp r14, r13	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b393	     0xf8ed4feffff	                           jle 0x400b26d	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b399	    0x488b05000000	            mov rax, qword [0x0400b3a0] 	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b3a0	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b3a5	      0xe99dfeffff	                           jmp 0x400b247	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b3aa	    0x660f1f440000	                    nop word [rax + rax]	      5161	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b3b0	          0x4889d7	                            mov rdi, rdx	      5168	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4	CALL_4
0x400b3b3	            0x31f6	                            xor esi, esi	      5168	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4	CALL_4
0x400b3b5	          0x4531ff	                          xor r15d, r15d	      5172	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b3b8	      0xe800000000	                          call 0x400b3bd	      5168	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4	CALL_4
0x400b3bd	    0x488b15000000	            mov rdx, qword [0x0400b3c4] 	      5169	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b3c4	    0x488b3d000000	            mov rdi, qword [0x0400b3cb] 	      5171	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b3cb	      0xe9a4feffff	                           jmp 0x400b274	      5171	buffer.c	FUNCTION_72	FOR_1	FOR_2	IF_4
0x400b3d0	    0x488b3d000000	            mov rdi, qword [0x0400b3d7] 	      5191	buffer.c	FUNCTION_72	CALL_6
0x400b3d7	            0x31f6	                            xor esi, esi	      5191	buffer.c	FUNCTION_72	CALL_6
0x400b3d9	    0x830500000000	               add dword [0x0400b3e0], 1	      5190	buffer.c	FUNCTION_72
0x400b3e0	      0xe800000000	                          call 0x400b3e5	      5191	buffer.c	FUNCTION_72	CALL_6
0x400b3e5	    0x4c8b35000000	            mov r14, qword [0x0400b3ec] 	      5193	buffer.c	FUNCTION_72	FOR_3
0x400b3ec	    0x830500000000	               add dword [0x0400b3f3], 1	      5192	buffer.c	FUNCTION_72
0x400b3f3	          0x4439fb	                           cmp ebx, r15d	      5193	buffer.c	FUNCTION_72	FOR_3
0x400b3f6	        0x400f9fc6	                                setg sil	      5193	buffer.c	FUNCTION_72	FOR_3
0x400b3fa	          0x4d85f6	                           test r14, r14	      5193	buffer.c	FUNCTION_72	FOR_3
0x400b3fd	           0xf95c0	                                setne al	      5193	buffer.c	FUNCTION_72	FOR_3
0x400b400	          0x4020c6	                             and sil, al	      5193	buffer.c	FUNCTION_72	FOR_3
0x400b403	      0x408874241f	              mov byte [rsp + 0x1f], sil	      5193	buffer.c	FUNCTION_72	FOR_3
0x400b408	     0xf8462010000	                            je 0x400b570	      5193	buffer.c	FUNCTION_72	FOR_3
0x400b40e	    0x41bd01000000	                             mov r13d, 1	      5193	buffer.c	FUNCTION_72	FOR_3
0x400b414	      0xe99a000000	                           jmp 0x400b4b3	      5193	buffer.c	FUNCTION_72	FOR_3
0x400b419	     0xf1f80000000	                         nop dword [rax]	      5193	buffer.c	FUNCTION_72	FOR_3
0x400b420	        0x418b7e78	            mov edi, dword [r14 + 0x78] 	      5202	buffer.c	FUNCTION_72	FOR_3	IF_7	IF_8
0x400b424	       0xfb644241f	           movzx eax, byte [rsp + 0x1f] 	      5202	buffer.c	FUNCTION_72	FOR_3	IF_7	IF_8
0x400b429	            0x85ff	                           test edi, edi	      5202	buffer.c	FUNCTION_72	FOR_3	IF_7	IF_8
0x400b42b	            0x7e0b	                           jle 0x400b438	      5202	buffer.c	FUNCTION_72	FOR_3	IF_7	IF_8
0x400b42d	    0x48833d000000	               cmp qword [0x0400b435], 0	      5202	buffer.c	FUNCTION_72	FOR_3	IF_7	IF_8
0x400b435	           0xf94c0	                                 sete al	      5202	buffer.c	FUNCTION_72	FOR_3	IF_7	IF_8
0x400b438	        0x4183fd01	                             cmp r13d, 1	      5218	buffer.c	FUNCTION_72	FOR_3	IF_11
0x400b43c	     0xf85d6000000	                           jne 0x400b518	      5218	buffer.c	FUNCTION_72	FOR_3	IF_11
0x400b442	            0x84c0	                             test al, al	      5218	buffer.c	FUNCTION_72	FOR_3	IF_11
0x400b444	     0xf84ce000000	                            je 0x400b518	      5218	buffer.c	FUNCTION_72	FOR_3	IF_11
0x400b44a	    0x418b86b80000	            mov eax, dword [r14 + 0xb8] 	       362	buffer.c	FUNCTION_3
0x400b451	    0x448b05000000	            mov r8d, dword [0x0400b458] 	      5225	buffer.c	FUNCTION_72	FOR_3	IF_11
0x400b458	            0x31ff	                            xor edi, edi	      5227	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_10
0x400b45a	      0xbe21000000	                           mov esi, 0x21	      5227	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_10
0x400b45f	    0xc70500000000	               mov dword [0x0400b469], 1	      5226	buffer.c	FUNCTION_72	FOR_3	IF_11
0x400b469	        0x89442410	             mov dword [rsp + 0x10], eax	       362	buffer.c	FUNCTION_3
0x400b46d	    0x8b0500000000	            mov eax, dword [0x0400b473] 	       363	buffer.c	FUNCTION_3
0x400b473	        0x44890424	                    mov dword [rsp], r8d	      5225	buffer.c	FUNCTION_72	FOR_3	IF_11
0x400b477	        0x89442408	                mov dword [rsp + 8], eax	       363	buffer.c	FUNCTION_3
0x400b47b	      0xe800000000	                          call 0x400b480	      5227	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_10
0x400b480	        0x448b0424	                    mov r8d, dword [rsp]	      5229	buffer.c	FUNCTION_72	FOR_3	IF_11
0x400b484	            0x85c0	                           test eax, eax	      5230	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_12
0x400b486	          0x4189c5	                           mov r13d, eax	      5227	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_10
0x400b489	        0x458d4f01	                      lea r9d, [r15 + 1]	      5228	buffer.c	FUNCTION_72	FOR_3	IF_11
0x400b48d	    0x448905000000	            mov dword [0x0400b494], r8d 	      5229	buffer.c	FUNCTION_72	FOR_3	IF_11
0x400b494	     0xf8516020000	                           jne 0x400b6b0	      5230	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_12
0x400b49a	          0x4589cf	                           mov r15d, r9d	      5228	buffer.c	FUNCTION_72	FOR_3	IF_11
0x400b49d	        0x4d8b7668	            mov r14, qword [r14 + 0x68] 	      5193	buffer.c	FUNCTION_72	FOR_3
0x400b4a1	          0x4d85f6	                           test r14, r14	      5193	buffer.c	FUNCTION_72	FOR_3
0x400b4a4	     0xf84c6000000	                            je 0x400b570	      5193	buffer.c	FUNCTION_72	FOR_3
0x400b4aa	          0x4139df	                           cmp r15d, ebx	      5193	buffer.c	FUNCTION_72	FOR_3
0x400b4ad	     0xf8dbd000000	                           jge 0x400b570	      5193	buffer.c	FUNCTION_72	FOR_3
0x400b4b3	          0x4584e4	                         test r12b, r12b	      5196	buffer.c	FUNCTION_72	FOR_3	IF_6
0x400b4b6	            0x7407	                            je 0x400b4bf	      5196	buffer.c	FUNCTION_72	FOR_3	IF_6
0x400b4b8	      0x49837e0800	                  cmp qword [r14 + 8], 0	      5196	buffer.c	FUNCTION_72	FOR_3	IF_6
0x400b4bd	            0x74de	                            je 0x400b49d	      5196	buffer.c	FUNCTION_72	FOR_3	IF_6
0x400b4bf	    0x458b86241400	          mov r8d, dword [r14 + 0x1424] 	      5196	buffer.c	FUNCTION_72	FOR_3	IF_6
0x400b4c6	          0x4585c0	                           test r8d, r8d	      5196	buffer.c	FUNCTION_72	FOR_3	IF_6
0x400b4c9	            0x74d2	                            je 0x400b49d	      5196	buffer.c	FUNCTION_72	FOR_3	IF_6
0x400b4cb	            0x85ed	                           test ebp, ebp	      5199	buffer.c	FUNCTION_72	FOR_3	IF_7
0x400b4cd	     0xf854dffffff	                           jne 0x400b420	      5199	buffer.c	FUNCTION_72	FOR_3	IF_7
0x400b4d3	    0x488b3d000000	            mov rdi, qword [0x0400b4da] 	      5210	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_7
0x400b4da	          0x4885ff	                           test rdi, rdi	      5210	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_7
0x400b4dd	            0x7424	                            je 0x400b503	      5210	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_7
0x400b4df	        0x4c3b7708	                cmp r14, qword [rdi + 8]	      5211	buffer.c	FUNCTION_72	FOR_3	ELSE_5	IF_9
0x400b4e3	            0x7515	                           jne 0x400b4fa	      5211	buffer.c	FUNCTION_72	FOR_3	ELSE_5	IF_9
0x400b4e5	      0xe996010000	                           jmp 0x400b680	      5211	buffer.c	FUNCTION_72	FOR_3	ELSE_5	IF_9
0x400b4ea	    0x660f1f440000	                    nop word [rax + rax]	      5211	buffer.c	FUNCTION_72	FOR_3	ELSE_5	IF_9
0x400b4f0	        0x4c397708	                cmp qword [rdi + 8], r14	      5211	buffer.c	FUNCTION_72	FOR_3	ELSE_5	IF_9
0x400b4f4	     0xf8486010000	                            je 0x400b680	      5211	buffer.c	FUNCTION_72	FOR_3	ELSE_5	IF_9
0x400b4fa	        0x488b7f20	            mov rdi, qword [rdi + 0x20] 	      5210	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_7
0x400b4fe	          0x4885ff	                           test rdi, rdi	      5210	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_7
0x400b501	            0x75ed	                           jne 0x400b4f0	      5210	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_7
0x400b503	        0x4183fd01	                             cmp r13d, 1	      5218	buffer.c	FUNCTION_72	FOR_3	IF_11
0x400b507	       0xfb644241f	           movzx eax, byte [rsp + 0x1f] 	      5210	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_7
0x400b50c	     0xf8430ffffff	                            je 0x400b442	      5218	buffer.c	FUNCTION_72	FOR_3	IF_11
0x400b512	    0x660f1f440000	                    nop word [rax + rax]	      5218	buffer.c	FUNCTION_72	FOR_3	IF_11
0x400b518	      0xe800000000	                          call 0x400b51d	      5275	buffer.c	FUNCTION_72	FOR_3	CALL_17
0x400b51d	    0x8b0500000000	            mov eax, dword [0x0400b523] 	      5276	buffer.c	FUNCTION_72	FOR_3	IF_15
0x400b523	            0x85c0	                           test eax, eax	      5276	buffer.c	FUNCTION_72	FOR_3	IF_15
0x400b525	     0xf8574010000	                           jne 0x400b69f	      5276	buffer.c	FUNCTION_72	FOR_3	IF_15
0x400b52b	      0xe800000000	                          call 0x400b530	      5283	buffer.c	FUNCTION_72	FOR_3	IF_16	CALL_19
0x400b530	            0x85c0	                           test eax, eax	      5283	buffer.c	FUNCTION_72	FOR_3	IF_16	CALL_19
0x400b532	            0x753c	                           jne 0x400b570	      5283	buffer.c	FUNCTION_72	FOR_3	IF_16	CALL_19
0x400b534	            0x85ed	                           test ebp, ebp	      5287	buffer.c	FUNCTION_72	FOR_3	IF_17	CALL_20
0x400b536	     0xf8e61ffffff	                           jle 0x400b49d	      5287	buffer.c	FUNCTION_72	FOR_3	IF_17	CALL_20
0x400b53c	            0x31ff	                            xor edi, edi	      5287	buffer.c	FUNCTION_72	FOR_3	IF_17	CALL_20
0x400b53e	      0xe800000000	                          call 0x400b543	      5287	buffer.c	FUNCTION_72	FOR_3	IF_17	CALL_20
0x400b543	            0x4898	                                    cdqe	      5287	buffer.c	FUNCTION_72	FOR_3	IF_17	CALL_20
0x400b545	    0x483b05000000	            cmp rax, qword [0x0400b54c] 	      5287	buffer.c	FUNCTION_72	FOR_3	IF_17	CALL_20
0x400b54c	     0xf8f4bffffff	                            jg 0x400b49d	      5287	buffer.c	FUNCTION_72	FOR_3	IF_17	CALL_20
0x400b552	        0x4d8b7668	            mov r14, qword [r14 + 0x68] 	      5193	buffer.c	FUNCTION_72	FOR_3
0x400b556	    0xc70500000000	         mov dword [0x0400b560], 0x270f 	      5288	buffer.c	FUNCTION_72	FOR_3	IF_17
0x400b560	          0x4d85f6	                           test r14, r14	      5193	buffer.c	FUNCTION_72	FOR_3
0x400b563	     0xf8541ffffff	                           jne 0x400b4aa	      5193	buffer.c	FUNCTION_72	FOR_3
0x400b569	     0xf1f80000000	                         nop dword [rax]	      5193	buffer.c	FUNCTION_72	FOR_3
0x400b570	    0x488b3d000000	            mov rdi, qword [0x0400b577] 	      5291	buffer.c	FUNCTION_72	CALL_21
0x400b577	            0x31f6	                            xor esi, esi	      5291	buffer.c	FUNCTION_72	CALL_21
0x400b579	    0x832d00000000	               sub dword [0x0400b580], 1	      5290	buffer.c	FUNCTION_72
0x400b580	      0xe800000000	                          call 0x400b585	      5291	buffer.c	FUNCTION_72	CALL_21
0x400b585	    0x832d00000000	               sub dword [0x0400b58c], 1	      5292	buffer.c	FUNCTION_72
0x400b58c	          0x4139df	                           cmp r15d, ebx	      5297	buffer.c	FUNCTION_72	FOR_4
0x400b58f	    0x488b2d000000	            mov rbp, qword [0x0400b596] 	      5297	buffer.c	FUNCTION_72	FOR_4
0x400b596	     0xf8eb8000000	                           jle 0x400b654	      5297	buffer.c	FUNCTION_72	FOR_4
0x400b59c	         0xf1f4000	                         nop dword [rax]	      5297	buffer.c	FUNCTION_72	FOR_4
0x400b5a0	        0x488b7d08	                mov rdi, qword [rbp + 8]	      5299	buffer.c	FUNCTION_72	FOR_4	CALL_23
0x400b5a4	    0x488b87101400	          mov rax, qword [rdi + 0x1410] 	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400b5ab	           0xfb600	                   movzx eax, byte [rax]	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400b5ae	            0x3c68	                            cmp al, 0x68	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400b5b0	            0x742f	                            je 0x400b5e1	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400b5b2	     0xf8680010000	                           jbe 0x400b738	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400b5b8	            0x3c75	                            cmp al, 0x75	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400b5ba	            0x7418	                            je 0x400b5d4	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400b5bc	            0x3c77	                            cmp al, 0x77	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400b5be	            0x7414	                            je 0x400b5d4	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400b5c0	    0x8b3500000000	            mov esi, dword [0x0400b5c6] 	      5668	buffer.c	FUNCTION_83
0x400b5c6	            0x85f6	                           test esi, esi	      5668	buffer.c	FUNCTION_83
0x400b5c8	            0x7517	                           jne 0x400b5e1	      5668	buffer.c	FUNCTION_83
0x400b5ca	    0x8b0d00000000	            mov ecx, dword [0x0400b5d0] 	      5668	buffer.c	FUNCTION_83
0x400b5d0	            0x85c9	                           test ecx, ecx	      5668	buffer.c	FUNCTION_83
0x400b5d2	            0x750d	                           jne 0x400b5e1	      5668	buffer.c	FUNCTION_83
0x400b5d4	      0xe800000000	                          call 0x400b5d9	      5299	buffer.c	FUNCTION_72	FOR_4	CALL_23
0x400b5d9	            0x85c0	                           test eax, eax	      5299	buffer.c	FUNCTION_72	FOR_4	CALL_23
0x400b5db	     0xf856c010000	                           jne 0x400b74d	      5299	buffer.c	FUNCTION_72	FOR_4	CALL_23
0x400b5e1	          0x4889ef	                            mov rdi, rbp	      5301	buffer.c	FUNCTION_72	FOR_4	IF_18	CALL_25
0x400b5e4	      0xe800000000	                          call 0x400b5e9	      5301	buffer.c	FUNCTION_72	FOR_4	IF_18	CALL_25
0x400b5e9	            0x85c0	                           test eax, eax	      5301	buffer.c	FUNCTION_72	FOR_4	IF_18	CALL_25
0x400b5eb	            0x7457	                            je 0x400b644	      5301	buffer.c	FUNCTION_72	FOR_4	IF_18	CALL_25
0x400b5ed	        0x488b4508	                mov rax, qword [rbp + 8]	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400b5f1	            0x31f6	                            xor esi, esi	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400b5f3	    0x488b80101400	          mov rax, qword [rax + 0x1410] 	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400b5fa	           0xfb600	                   movzx eax, byte [rax]	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400b5fd	            0x3c68	                            cmp al, 0x68	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400b5ff	            0x7437	                            je 0x400b638	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400b601	     0xf8681010000	                           jbe 0x400b788	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400b607	            0x3c75	                            cmp al, 0x75	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400b609	     0xf8481010000	                            je 0x400b790	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400b60f	            0x3c77	                            cmp al, 0x77	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400b611	     0xf8479010000	                            je 0x400b790	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400b617	    0x8b1500000000	            mov edx, dword [0x0400b61d] 	      5668	buffer.c	FUNCTION_83
0x400b61d	            0x31f6	                            xor esi, esi	      5668	buffer.c	FUNCTION_83
0x400b61f	            0x85d2	                           test edx, edx	      5668	buffer.c	FUNCTION_83
0x400b621	            0x7515	                           jne 0x400b638	      5668	buffer.c	FUNCTION_83
0x400b623	    0x8b0500000000	            mov eax, dword [0x0400b629] 	      5668	buffer.c	FUNCTION_83
0x400b629	            0x31f6	                            xor esi, esi	      5668	buffer.c	FUNCTION_83
0x400b62b	            0x85c0	                           test eax, eax	      5668	buffer.c	FUNCTION_83
0x400b62d	        0x400f94c6	                                sete sil	      5668	buffer.c	FUNCTION_83
0x400b631	     0xf1f80000000	                         nop dword [rax]	      5668	buffer.c	FUNCTION_83
0x400b638	          0x4889ef	                            mov rdi, rbp	      5308	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19	CALL_27
0x400b63b	        0x4183ef01	                             sub r15d, 1	      5309	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19
0x400b63f	      0xe800000000	                          call 0x400b644	      5308	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19	CALL_27
0x400b644	    0x488b2d000000	            mov rbp, qword [0x0400b64b] 	      5310	buffer.c	FUNCTION_72	FOR_4	ELSE_7	IF_19
0x400b64b	          0x4439fb	                           cmp ebx, r15d	      5297	buffer.c	FUNCTION_72	FOR_4
0x400b64e	     0xf8c4cffffff	                            jl 0x400b5a0	      5297	buffer.c	FUNCTION_72	FOR_4
0x400b654	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      5319	buffer.c	FUNCTION_72
0x400b659	    0x644833042528	                xor rax, qword fs:[0x28]	      5319	buffer.c	FUNCTION_72
0x400b662	     0xf858a010000	                           jne 0x400b7f2	      5319	buffer.c	FUNCTION_72
0x400b668	        0x4883c448	                           add rsp, 0x48	      5319	buffer.c	FUNCTION_72
0x400b66c	              0x5b	                                 pop rbx	      5319	buffer.c	FUNCTION_72
0x400b66d	              0x5d	                                 pop rbp	      5319	buffer.c	FUNCTION_72
0x400b66e	            0x415c	                                 pop r12	      5319	buffer.c	FUNCTION_72
0x400b670	            0x415d	                                 pop r13	      5319	buffer.c	FUNCTION_72
0x400b672	            0x415e	                                 pop r14	      5319	buffer.c	FUNCTION_72
0x400b674	            0x415f	                                 pop r15	      5319	buffer.c	FUNCTION_72
0x400b676	              0xc3	                                     ret	      5319	buffer.c	FUNCTION_72
0x400b677	    0x660f1f840000	                    nop word [rax + rax]	      5319	buffer.c	FUNCTION_72
0x400b680	    0x488b35000000	            mov rsi, qword [0x0400b687] 	      5215	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_8
0x400b687	      0xe800000000	                          call 0x400b68c	      5215	buffer.c	FUNCTION_72	FOR_3	ELSE_5	CALL_8
0x400b68c	      0xe800000000	                          call 0x400b691	      5275	buffer.c	FUNCTION_72	FOR_3	CALL_17
0x400b691	    0x8b0500000000	            mov eax, dword [0x0400b697] 	      5276	buffer.c	FUNCTION_72	FOR_3	IF_15
0x400b697	            0x85c0	                           test eax, eax	      5276	buffer.c	FUNCTION_72	FOR_3	IF_15
0x400b699	     0xf848cfeffff	                            je 0x400b52b	      5276	buffer.c	FUNCTION_72	FOR_3	IF_15
0x400b69f	      0xe800000000	                          call 0x400b6a4	      5278	buffer.c	FUNCTION_72	FOR_3	IF_15	CALL_18
0x400b6a4	      0xe9c7feffff	                           jmp 0x400b570	      5279	buffer.c	FUNCTION_72	FOR_3	IF_15
0x400b6a9	     0xf1f80000000	                         nop dword [rax]	      5279	buffer.c	FUNCTION_72	FOR_3	IF_15
0x400b6b0	            0x31f6	                            xor esi, esi	      5237	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_11
0x400b6b2	          0x4c89f7	                            mov rdi, r14	      5237	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_11
0x400b6b5	        0x44890c24	                    mov dword [rsp], r9d	      5237	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_11
0x400b6b9	    0xc70500000000	               mov dword [0x0400b6c3], 1	      5235	buffer.c	FUNCTION_72	FOR_3	IF_11
0x400b6c3	      0xe800000000	                          call 0x400b6c8	      5237	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_11
0x400b6c8	        0x8b442408	                mov eax, dword [rsp + 8]	       377	buffer.c	FUNCTION_4	CALL_1
0x400b6cc	    0x3b0500000000	            cmp eax, dword [0x0400b6d2] 	       377	buffer.c	FUNCTION_4	CALL_1
0x400b6d2	        0x448b0c24	                    mov r9d, dword [rsp]	       377	buffer.c	FUNCTION_4	CALL_1
0x400b6d6	            0x743b	                            je 0x400b713	       377	buffer.c	FUNCTION_4	CALL_1
0x400b6d8	    0x488b05000000	            mov rax, qword [0x0400b6df] 	       392	buffer.c	FUNCTION_5	FOR_1
0x400b6df	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x400b6e2	            0x7519	                           jne 0x400b6fd	       392	buffer.c	FUNCTION_5	FOR_1
0x400b6e4	      0xe9f7000000	                           jmp 0x400b7e0	       392	buffer.c	FUNCTION_5	FOR_1
0x400b6e9	     0xf1f80000000	                         nop dword [rax]	       392	buffer.c	FUNCTION_5	FOR_1
0x400b6f0	        0x488b4070	            mov rax, qword [rax + 0x70] 	       392	buffer.c	FUNCTION_5	FOR_1
0x400b6f4	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x400b6f7	     0xf84e3000000	                            je 0x400b7e0	       392	buffer.c	FUNCTION_5	FOR_1
0x400b6fd	          0x4c39f0	                            cmp rax, r14	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x400b700	            0x75ee	                           jne 0x400b6f0	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x400b702	        0x8b442410	            mov eax, dword [rsp + 0x10] 	       378	buffer.c	FUNCTION_4
0x400b706	    0x413b86b80000	            cmp eax, dword [r14 + 0xb8] 	       378	buffer.c	FUNCTION_4
0x400b70d	     0xf85cd000000	                           jne 0x400b7e0	       378	buffer.c	FUNCTION_4
0x400b713	    0x833d00000000	               cmp dword [0x0400b71a], 2	      5247	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14
0x400b71a	            0x747e	                            je 0x400b79a	      5247	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14
0x400b71c	            0x31ff	                            xor edi, edi	      5271	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_16
0x400b71e	        0x44890c24	                    mov dword [rsp], r9d	      5271	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_16
0x400b722	      0xe800000000	                          call 0x400b727	      5271	buffer.c	FUNCTION_72	FOR_3	IF_11	CALL_16
0x400b727	        0x448b0c24	                    mov r9d, dword [rsp]	      5228	buffer.c	FUNCTION_72	FOR_3	IF_11
0x400b72b	          0x4589cf	                           mov r15d, r9d	      5228	buffer.c	FUNCTION_72	FOR_3	IF_11
0x400b72e	      0xe9e5fdffff	                           jmp 0x400b518	      5228	buffer.c	FUNCTION_72	FOR_3	IF_11
0x400b733	       0xf1f440000	                   nop dword [rax + rax]	      5228	buffer.c	FUNCTION_72	FOR_3	IF_11
0x400b738	            0x3c64	                            cmp al, 0x64	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400b73a	     0xf8580feffff	                           jne 0x400b5c0	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400b740	      0xe800000000	                          call 0x400b745	      5299	buffer.c	FUNCTION_72	FOR_4	CALL_23
0x400b745	            0x85c0	                           test eax, eax	      5299	buffer.c	FUNCTION_72	FOR_4	CALL_23
0x400b747	     0xf8494feffff	                            je 0x400b5e1	      5299	buffer.c	FUNCTION_72	FOR_4	CALL_23
0x400b74d	        0x488b7d08	                mov rdi, qword [rbp + 8]	      5300	buffer.c	FUNCTION_72	FOR_4	CALL_24
0x400b751	            0x31f6	                            xor esi, esi	      5300	buffer.c	FUNCTION_72	FOR_4	CALL_24
0x400b753	      0xe800000000	                          call 0x400b758	      5300	buffer.c	FUNCTION_72	FOR_4	CALL_24
0x400b758	          0x83f801	                              cmp eax, 1	      5300	buffer.c	FUNCTION_72	FOR_4	CALL_24
0x400b75b	     0xf8480feffff	                            je 0x400b5e1	      5300	buffer.c	FUNCTION_72	FOR_4	CALL_24
0x400b761	          0x4889ef	                            mov rdi, rbp	      5301	buffer.c	FUNCTION_72	FOR_4	IF_18	CALL_25
0x400b764	      0xe800000000	                          call 0x400b769	      5301	buffer.c	FUNCTION_72	FOR_4	IF_18	CALL_25
0x400b769	            0x85c0	                           test eax, eax	      5301	buffer.c	FUNCTION_72	FOR_4	IF_18	CALL_25
0x400b76b	     0xf84d3feffff	                            je 0x400b644	      5301	buffer.c	FUNCTION_72	FOR_4	IF_18	CALL_25
0x400b771	        0x488b6d18	            mov rbp, qword [rbp + 0x18] 	      5314	buffer.c	FUNCTION_72	FOR_4	ELSE_8
0x400b775	          0x4885ed	                           test rbp, rbp	      5315	buffer.c	FUNCTION_72	FOR_4	ELSE_8	IF_20
0x400b778	     0xf85cdfeffff	                           jne 0x400b64b	      5315	buffer.c	FUNCTION_72	FOR_4	ELSE_8	IF_20
0x400b77e	      0xe9d1feffff	                           jmp 0x400b654	      5315	buffer.c	FUNCTION_72	FOR_4	ELSE_8	IF_20
0x400b783	       0xf1f440000	                   nop dword [rax + rax]	      5315	buffer.c	FUNCTION_72	FOR_4	ELSE_8	IF_20
0x400b788	            0x3c64	                            cmp al, 0x64	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400b78a	     0xf8587feffff	                           jne 0x400b617	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400b790	      0xbe01000000	                              mov esi, 1	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400b795	      0xe99efeffff	                           jmp 0x400b638	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400b79a	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      5254	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_13
0x400b79f	      0xe800000000	                          call 0x400b7a4	      5254	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_13
0x400b7a4	    0x488b3d000000	            mov rdi, qword [0x0400b7ab] 	      5258	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_14
0x400b7ab	      0xbe01000000	                              mov esi, 1	      5258	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_14
0x400b7b0	      0xe800000000	                          call 0x400b7b5	      5258	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_14
0x400b7b5	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      5267	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_15
0x400b7ba	    0xc70500000000	               mov dword [0x0400b7c4], 0	      5260	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14
0x400b7c4	    0xc70500000000	               mov dword [0x0400b7ce], 1	      5261	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14
0x400b7ce	      0xe800000000	                          call 0x400b7d3	      5267	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_15
0x400b7d3	      0xe940fdffff	                           jmp 0x400b518	      5267	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_15
0x400b7d8	     0xf1f84000000	                   nop dword [rax + rax]	      5267	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_14	CALL_15
0x400b7e0	    0xc70500000000	               mov dword [0x0400b7ea], 0	      5242	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_13
0x400b7ea	          0x4589cf	                           mov r15d, r9d	      5242	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_13
0x400b7ed	      0xe97efdffff	                           jmp 0x400b570	      5242	buffer.c	FUNCTION_72	FOR_3	IF_11	IF_13
0x400b7f2	      0xe800000000	                          call 0x400b7f7	      5319	buffer.c	FUNCTION_72
sign_mark_adjust	FOR,1:WHILE,0:DO,0:ELSE,2:functions,0:CALL,0:SWITCH,0:IF,3	44
0x400c690	    0x488b05000000	            mov rax, qword [0x0400c697] 	      6132	buffer.c	FUNCTION_100	FOR_1
0x400c697	    0x488b80201c00	          mov rax, qword [rax + 0x1c20] 	      6132	buffer.c	FUNCTION_100	FOR_1
0x400c69e	          0x4885c0	                           test rax, rax	      6132	buffer.c	FUNCTION_100	FOR_1
0x400c6a1	            0x7475	                            je 0x400c718	      6132	buffer.c	FUNCTION_100	FOR_1
0x400c6a3	    0x4881faffffff	                     cmp rdx, 0x7fffffff	      6132	buffer.c	FUNCTION_100	FOR_1
0x400c6aa	            0x7519	                           jne 0x400c6c5	      6132	buffer.c	FUNCTION_100	FOR_1
0x400c6ac	            0xeb4f	                           jmp 0x400c6fd	      6132	buffer.c	FUNCTION_100	FOR_1
0x400c6ae	            0x6690	                                     nop	      6132	buffer.c	FUNCTION_100	FOR_1
0x400c6b0	          0x4c39c6	                             cmp rsi, r8	      6134	buffer.c	FUNCTION_100	FOR_1	IF_1
0x400c6b3	            0x7c19	                            jl 0x400c6ce	      6134	buffer.c	FUNCTION_100	FOR_1	IF_1
0x400c6b5	          0x4901d0	                             add r8, rdx	      6139	buffer.c	FUNCTION_100	FOR_1	IF_1	ELSE_1
0x400c6b8	        0x4c894008	                 mov qword [rax + 8], r8	      6139	buffer.c	FUNCTION_100	FOR_1	IF_1	ELSE_1
0x400c6bc	        0x488b4018	            mov rax, qword [rax + 0x18] 	      6132	buffer.c	FUNCTION_100	FOR_1
0x400c6c0	          0x4885c0	                           test rax, rax	      6132	buffer.c	FUNCTION_100	FOR_1
0x400c6c3	            0x741e	                            je 0x400c6e3	      6132	buffer.c	FUNCTION_100	FOR_1
0x400c6c5	        0x4c8b4008	                 mov r8, qword [rax + 8]	      6134	buffer.c	FUNCTION_100	FOR_1	IF_1
0x400c6c9	          0x4c39c7	                             cmp rdi, r8	      6134	buffer.c	FUNCTION_100	FOR_1	IF_1
0x400c6cc	            0x7ee2	                           jle 0x400c6b0	      6134	buffer.c	FUNCTION_100	FOR_1	IF_1
0x400c6ce	          0x4c39c6	                             cmp rsi, r8	      6141	buffer.c	FUNCTION_100	FOR_1	ELSE_2	IF_3
0x400c6d1	            0x7de9	                           jge 0x400c6bc	      6141	buffer.c	FUNCTION_100	FOR_1	ELSE_2	IF_3
0x400c6d3	          0x4901c8	                             add r8, rcx	      6142	buffer.c	FUNCTION_100	FOR_1	ELSE_2	IF_3
0x400c6d6	        0x4c894008	                 mov qword [rax + 8], r8	      6142	buffer.c	FUNCTION_100	FOR_1	ELSE_2	IF_3
0x400c6da	        0x488b4018	            mov rax, qword [rax + 0x18] 	      6132	buffer.c	FUNCTION_100	FOR_1
0x400c6de	          0x4885c0	                           test rax, rax	      6132	buffer.c	FUNCTION_100	FOR_1
0x400c6e1	            0x75e2	                           jne 0x400c6c5	      6132	buffer.c	FUNCTION_100	FOR_1
0x400c6e3	            0xf3c3	                                     ret	      6132	buffer.c	FUNCTION_100	FOR_1
0x400c6e5	           0xf1f00	                         nop dword [rax]	      6132	buffer.c	FUNCTION_100	FOR_1
0x400c6e8	          0x4839f2	                            cmp rdx, rsi	      6141	buffer.c	FUNCTION_100	FOR_1	ELSE_2	IF_3
0x400c6eb	            0x7e07	                           jle 0x400c6f4	      6141	buffer.c	FUNCTION_100	FOR_1	ELSE_2	IF_3
0x400c6ed	          0x4801ca	                            add rdx, rcx	      6142	buffer.c	FUNCTION_100	FOR_1	ELSE_2	IF_3
0x400c6f0	        0x48895008	                mov qword [rax + 8], rdx	      6142	buffer.c	FUNCTION_100	FOR_1	ELSE_2	IF_3
0x400c6f4	        0x488b4018	            mov rax, qword [rax + 0x18] 	      6132	buffer.c	FUNCTION_100	FOR_1
0x400c6f8	          0x4885c0	                           test rax, rax	      6132	buffer.c	FUNCTION_100	FOR_1
0x400c6fb	            0x741b	                            je 0x400c718	      6132	buffer.c	FUNCTION_100	FOR_1
0x400c6fd	        0x488b5008	                mov rdx, qword [rax + 8]	      6134	buffer.c	FUNCTION_100	FOR_1	IF_1
0x400c701	          0x4839f2	                            cmp rdx, rsi	      6134	buffer.c	FUNCTION_100	FOR_1	IF_1
0x400c704	            0x7fe2	                            jg 0x400c6e8	      6134	buffer.c	FUNCTION_100	FOR_1	IF_1
0x400c706	          0x4839fa	                            cmp rdx, rdi	      6134	buffer.c	FUNCTION_100	FOR_1	IF_1
0x400c709	            0x7cdd	                            jl 0x400c6e8	      6134	buffer.c	FUNCTION_100	FOR_1	IF_1
0x400c70b	        0x48897808	                mov qword [rax + 8], rdi	      6137	buffer.c	FUNCTION_100	FOR_1	IF_1	IF_2
0x400c70f	        0x488b4018	            mov rax, qword [rax + 0x18] 	      6132	buffer.c	FUNCTION_100	FOR_1
0x400c713	          0x4885c0	                           test rax, rax	      6132	buffer.c	FUNCTION_100	FOR_1
0x400c716	            0x75e5	                           jne 0x400c6fd	      6132	buffer.c	FUNCTION_100	FOR_1
0x400c718	            0xf3c3	                                     ret	      6132	buffer.c	FUNCTION_100	FOR_1
open_buffer	FOR,0:WHILE,0:DO,0:ELSE,2:functions,0:CALL,43:SWITCH,0:IF,22	498
0x40089c0	            0x4157	                                push r15	       136	buffer.c	FUNCTION_2
0x40089c2	            0x4156	                                push r14	       136	buffer.c	FUNCTION_2
0x40089c4	            0x4155	                                push r13	       136	buffer.c	FUNCTION_2
0x40089c6	            0x4154	                                push r12	       136	buffer.c	FUNCTION_2
0x40089c8	          0x4989f5	                            mov r13, rsi	       136	buffer.c	FUNCTION_2
0x40089cb	              0x55	                                push rbp	       136	buffer.c	FUNCTION_2
0x40089cc	              0x53	                                push rbx	       136	buffer.c	FUNCTION_2
0x40089cd	            0x89fd	                            mov ebp, edi	       136	buffer.c	FUNCTION_2
0x40089cf	          0x4189d4	                           mov r12d, edx	       136	buffer.c	FUNCTION_2
0x40089d2	        0x4883ec68	                           sub rsp, 0x68	       136	buffer.c	FUNCTION_2
0x40089d6	    0x448b15000000	           mov r10d, dword [0x040089dd] 	       149	buffer.c	FUNCTION_2	IF_1
0x40089dd	    0x488b3d000000	            mov rdi, qword [0x040089e4] 	       140	buffer.c	FUNCTION_2
0x40089e4	    0x64488b042528	                mov rax, qword fs:[0x28]	       136	buffer.c	FUNCTION_2
0x40089ed	      0x4889442458	             mov qword [rsp + 0x58], rax	       136	buffer.c	FUNCTION_2
0x40089f2	            0x31c0	                            xor eax, eax	       136	buffer.c	FUNCTION_2
0x40089f4	    0xc744241c0100	               mov dword [rsp + 0x1c], 1	       137	buffer.c	FUNCTION_2
0x40089fc	          0x4585d2	                         test r10d, r10d	       149	buffer.c	FUNCTION_2	IF_1
0x40089ff	    0x488b9fb81500	          mov rbx, qword [rdi + 0x15b8] 	       140	buffer.c	FUNCTION_2
0x4008a06	            0x741a	                            je 0x4008a22	       149	buffer.c	FUNCTION_2	IF_1
0x4008a08	    0x4883bf880000	               cmp qword [rdi + 0x88], 0	       149	buffer.c	FUNCTION_2	IF_1
0x4008a10	            0x7410	                            je 0x4008a22	       149	buffer.c	FUNCTION_2	IF_1
0x4008a12	        0xf6477c04	               test byte [rdi + 0x7c], 4	       150	buffer.c	FUNCTION_2	IF_1
0x4008a16	            0x740a	                            je 0x4008a22	       150	buffer.c	FUNCTION_2	IF_1
0x4008a18	    0xc78760150000	            mov dword [rdi + 0x1560], 1 	       151	buffer.c	FUNCTION_2	IF_1
0x4008a22	      0xe800000000	                          call 0x4008a27	       153	buffer.c	FUNCTION_2	IF_2	CALL_1
0x4008a27	            0x85c0	                           test eax, eax	       153	buffer.c	FUNCTION_2	IF_2	CALL_1
0x4008a29	          0x4189c7	                           mov r15d, eax	       153	buffer.c	FUNCTION_2	IF_2	CALL_1
0x4008a2c	     0xf8456010000	                            je 0x4008b88	       153	buffer.c	FUNCTION_2	IF_2	CALL_1
0x4008a32	    0x488b1d000000	            mov rbx, qword [0x04008a39] 	       183	buffer.c	FUNCTION_2	CALL_11
0x4008a39	          0x4885db	                           test rbx, rbx	       362	buffer.c	FUNCTION_3
0x4008a3c	     0xf844e050000	                            je 0x4008f90	       362	buffer.c	FUNCTION_3
0x4008a42	    0x8b83b8000000	            mov eax, dword [rbx + 0xb8] 	       362	buffer.c	FUNCTION_3
0x4008a48	        0x89442404	                mov dword [rsp + 4], eax	       362	buffer.c	FUNCTION_3
0x4008a4c	    0x488bbb880000	            mov rdi, qword [rbx + 0x88] 	       189	buffer.c	FUNCTION_2	IF_6
0x4008a53	    0x488b05000000	            mov rax, qword [0x04008a5a] 	       187	buffer.c	FUNCTION_2
0x4008a5a	    0x448b35000000	           mov r14d, dword [0x04008a61] 	       363	buffer.c	FUNCTION_3
0x4008a61	    0xc70500000000	               mov dword [0x04008a6b], 0	       184	buffer.c	FUNCTION_2
0x4008a6b	          0x4885ff	                           test rdi, rdi	       189	buffer.c	FUNCTION_2	IF_6
0x4008a6e	    0xc780b4000000	               mov dword [rax + 0xb4], 0	       187	buffer.c	FUNCTION_2
0x4008a78	            0x7410	                            je 0x4008a8a	       189	buffer.c	FUNCTION_2	IF_6
0x4008a7a	    0x448b0d000000	            mov r9d, dword [0x04008a81] 	       191	buffer.c	FUNCTION_2	IF_6
0x4008a81	          0x4585c9	                           test r9d, r9d	       191	buffer.c	FUNCTION_2	IF_6
0x4008a84	     0xf8506020000	                           jne 0x4008c90	       191	buffer.c	FUNCTION_2	IF_6
0x4008a8a	          0x4531ff	                          xor r15d, r15d	       142	buffer.c	FUNCTION_2
0x4008a8d	            0x85ed	                           test ebp, ebp	       243	buffer.c	FUNCTION_2	ELSE_1	IF_13
0x4008a8f	          0x4889df	                            mov rdi, rbx	       243	buffer.c	FUNCTION_2	ELSE_1	IF_13
0x4008a92	     0xf85d8020000	                           jne 0x4008d70	       243	buffer.c	FUNCTION_2	ELSE_1	IF_13
0x4008a98	        0xf6477c04	               test byte [rdi + 0x7c], 4	       263	buffer.c	FUNCTION_2	IF_15
0x4008a9c	     0xf85ce010000	                           jne 0x4008c70	       263	buffer.c	FUNCTION_2	IF_15
0x4008aa2	    0x8b0500000000	            mov eax, dword [0x04008aa8] 	       279	buffer.c	FUNCTION_2	IF_16	CALL_26
0x4008aa8	            0x85c0	                           test eax, eax	       279	buffer.c	FUNCTION_2	IF_16	CALL_26
0x4008aaa	     0xf85a0010000	                           jne 0x4008c50	       279	buffer.c	FUNCTION_2	IF_16	CALL_26
0x4008ab0	    0x448b15000000	           mov r10d, dword [0x04008ab7] 	       280	buffer.c	FUNCTION_2	IF_16
0x4008ab7	          0x4585d2	                         test r10d, r10d	       280	buffer.c	FUNCTION_2	IF_16
0x4008aba	     0xf84e0030000	                            je 0x4008ea0	       280	buffer.c	FUNCTION_2	IF_16
0x4008ac0	      0xe800000000	                          call 0x4008ac5	       285	buffer.c	FUNCTION_2	CALL_29
0x4008ac5	    0x488b3d000000	            mov rdi, qword [0x04008acc] 	       288	buffer.c	FUNCTION_2	CALL_31
0x4008acc	      0xe800000000	                          call 0x4008ad1	       288	buffer.c	FUNCTION_2	CALL_31
0x4008ad1	    0x488b05000000	            mov rax, qword [0x04008ad8] 	       292	buffer.c	FUNCTION_2	CALL_32
0x4008ad8	    0x488b90d80000	            mov rdx, qword [rax + 0xd8] 	       292	buffer.c	FUNCTION_2	CALL_32
0x4008adf	    0x488990f80000	             mov qword [rax + 0xf8], rdx	       292	buffer.c	FUNCTION_2	CALL_32
0x4008ae6	    0x488990000100	            mov qword [rax + 0x100], rdx	       294	buffer.c	FUNCTION_2	CALL_33
0x4008aed	      0xe800000000	                          call 0x4008af2	       299	buffer.c	FUNCTION_2	IF_18	CALL_34
0x4008af2	            0x85c0	                           test eax, eax	       299	buffer.c	FUNCTION_2	IF_18	CALL_34
0x4008af4	            0x740b	                            je 0x4008b01	       299	buffer.c	FUNCTION_2	IF_18	CALL_34
0x4008af6	    0x488b05000000	            mov rax, qword [0x04008afd] 	       303	buffer.c	FUNCTION_2	IF_18	IF_19
0x4008afd	        0x83487c40	            or dword [rax + 0x7c], 0x40 	       303	buffer.c	FUNCTION_2	IF_18	IF_19
0x4008b01	    0x488b3d000000	            mov rdi, qword [0x04008b08] 	       308	buffer.c	FUNCTION_2	CALL_35
0x4008b08	      0xe800000000	                          call 0x4008b0d	       308	buffer.c	FUNCTION_2	CALL_35
0x4008b0d	    0x488b05000000	            mov rax, qword [0x04008b14] 	       312	buffer.c	FUNCTION_2	IF_20
0x4008b14	    0xf680b4000000	           test byte [rax + 0xb4], 0x80 	       312	buffer.c	FUNCTION_2	IF_20
0x4008b1b	            0x7453	                            je 0x4008b70	       312	buffer.c	FUNCTION_2	IF_20
0x4008b1d	    0x4c8b05000000	              mov r8, qword [0x04008b24]	       320	buffer.c	FUNCTION_2	CALL_36
0x4008b24	      0x4c8d4c241c	                    lea r9, [rsp + 0x1c]	       320	buffer.c	FUNCTION_2	CALL_36
0x4008b29	            0x31c9	                            xor ecx, ecx	       320	buffer.c	FUNCTION_2	CALL_36
0x4008b2b	            0x31d2	                            xor edx, edx	       320	buffer.c	FUNCTION_2	CALL_36
0x4008b2d	            0x31f6	                            xor esi, esi	       320	buffer.c	FUNCTION_2	CALL_36
0x4008b2f	      0xbf02000000	                              mov edi, 2	       320	buffer.c	FUNCTION_2	CALL_36
0x4008b34	      0xe800000000	                          call 0x4008b39	       320	buffer.c	FUNCTION_2	CALL_36
0x4008b39	      0x448b7c241c	           mov r15d, dword [rsp + 0x1c] 	       325	buffer.c	FUNCTION_2	IF_21
0x4008b3e	        0x4183ff01	                             cmp r15d, 1	       325	buffer.c	FUNCTION_2	IF_21
0x4008b42	     0xf8498030000	                            je 0x4008ee0	       325	buffer.c	FUNCTION_2	IF_21
0x4008b48	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	       353	buffer.c	FUNCTION_2
0x4008b4d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       353	buffer.c	FUNCTION_2
0x4008b56	          0x4489f8	                           mov eax, r15d	       353	buffer.c	FUNCTION_2
0x4008b59	     0xf85e0060000	                           jne 0x400923f	       353	buffer.c	FUNCTION_2
0x4008b5f	        0x4883c468	                           add rsp, 0x68	       353	buffer.c	FUNCTION_2
0x4008b63	              0x5b	                                 pop rbx	       353	buffer.c	FUNCTION_2
0x4008b64	              0x5d	                                 pop rbp	       353	buffer.c	FUNCTION_2
0x4008b65	            0x415c	                                 pop r12	       353	buffer.c	FUNCTION_2
0x4008b67	            0x415d	                                 pop r13	       353	buffer.c	FUNCTION_2
0x4008b69	            0x415e	                                 pop r14	       353	buffer.c	FUNCTION_2
0x4008b6b	            0x415f	                                 pop r15	       353	buffer.c	FUNCTION_2
0x4008b6d	              0xc3	                                     ret	       353	buffer.c	FUNCTION_2
0x4008b6e	            0x6690	                                     nop	       353	buffer.c	FUNCTION_2
0x4008b70	    0x48c740780100	               mov qword [rax + 0x78], 1	       314	buffer.c	FUNCTION_2	IF_20
0x4008b78	    0xc78084000000	               mov dword [rax + 0x84], 0	       316	buffer.c	FUNCTION_2	IF_20
0x4008b82	            0xeb99	                           jmp 0x4008b1d	       316	buffer.c	FUNCTION_2	IF_20
0x4008b84	         0xf1f4000	                         nop dword [rax]	       316	buffer.c	FUNCTION_2	IF_20
0x4008b88	    0x488b35000000	            mov rsi, qword [0x04008b8f] 	       159	buffer.c	FUNCTION_2	IF_2	CALL_2
0x4008b8f	            0x31c9	                            xor ecx, ecx	       159	buffer.c	FUNCTION_2	IF_2	CALL_2
0x4008b91	            0x31d2	                            xor edx, edx	       159	buffer.c	FUNCTION_2	IF_2	CALL_2
0x4008b93	            0x31ff	                            xor edi, edi	       159	buffer.c	FUNCTION_2	IF_2	CALL_2
0x4008b95	      0xe800000000	                          call 0x4008b9a	       159	buffer.c	FUNCTION_2	IF_2	CALL_2
0x4008b9a	    0x488b05000000	            mov rax, qword [0x04008ba1] 	       160	buffer.c	FUNCTION_2	IF_2	CALL_3
0x4008ba1	          0x4885c0	                           test rax, rax	       160	buffer.c	FUNCTION_2	IF_2	CALL_3
0x4008ba4	    0x488905000000	            mov qword [0x04008bab], rax 	       160	buffer.c	FUNCTION_2	IF_2	CALL_3
0x4008bab	            0x7432	                            je 0x4008bdf	       160	buffer.c	FUNCTION_2	IF_2	CALL_3
0x4008bad	      0x4883780800	                  cmp qword [rax + 8], 0	       161	buffer.c	FUNCTION_2	IF_2	IF_3
0x4008bb2	            0x7417	                            je 0x4008bcb	       161	buffer.c	FUNCTION_2	IF_2	IF_3
0x4008bb4	            0xeb4c	                           jmp 0x4008c02	       161	buffer.c	FUNCTION_2	IF_2	IF_3
0x4008bb6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       161	buffer.c	FUNCTION_2	IF_2	IF_3
0x4008bc0	      0x4883780800	                  cmp qword [rax + 8], 0	       161	buffer.c	FUNCTION_2	IF_2	IF_3
0x4008bc5	     0xf85b5030000	                           jne 0x4008f80	       161	buffer.c	FUNCTION_2	IF_2	IF_3
0x4008bcb	        0x488b4068	            mov rax, qword [rax + 0x68] 	       160	buffer.c	FUNCTION_2	IF_2	CALL_3
0x4008bcf	          0x4885c0	                           test rax, rax	       160	buffer.c	FUNCTION_2	IF_2	CALL_3
0x4008bd2	            0x75ec	                           jne 0x4008bc0	       160	buffer.c	FUNCTION_2	IF_2	CALL_3
0x4008bd4	    0x48c705000000	               mov qword [0x04008bdf], 0	       160	buffer.c	FUNCTION_2	IF_2	CALL_3
0x4008bdf	      0xba05000000	                              mov edx, 5	       169	buffer.c	FUNCTION_2	IF_2	IF_4	CALL_5
0x4008be4	      0xbe00000000	                              mov esi, 0	       169	buffer.c	FUNCTION_2	IF_2	IF_4	CALL_5
0x4008be9	            0x31ff	                            xor edi, edi	       169	buffer.c	FUNCTION_2	IF_2	IF_4	CALL_5
0x4008beb	      0xe800000000	                          call 0x4008bf0	       169	buffer.c	FUNCTION_2	IF_2	IF_4	CALL_5
0x4008bf0	          0x4889c7	                            mov rdi, rax	       169	buffer.c	FUNCTION_2	IF_2	IF_4	CALL_5
0x4008bf3	      0xe800000000	                          call 0x4008bf8	       169	buffer.c	FUNCTION_2	IF_2	IF_4	CALL_5
0x4008bf8	      0xbf02000000	                              mov edi, 2	       170	buffer.c	FUNCTION_2	IF_2	IF_4	CALL_6
0x4008bfd	      0xe800000000	                          call 0x4008c02	       170	buffer.c	FUNCTION_2	IF_2	IF_4	CALL_6
0x4008c02	      0xba05000000	                              mov edx, 5	       172	buffer.c	FUNCTION_2	IF_2	CALL_8
0x4008c07	      0xbe00000000	                              mov esi, 0	       172	buffer.c	FUNCTION_2	IF_2	CALL_8
0x4008c0c	            0x31ff	                            xor edi, edi	       172	buffer.c	FUNCTION_2	IF_2	CALL_8
0x4008c0e	      0xe800000000	                          call 0x4008c13	       172	buffer.c	FUNCTION_2	IF_2	CALL_8
0x4008c13	          0x4889c7	                            mov rdi, rax	       172	buffer.c	FUNCTION_2	IF_2	CALL_8
0x4008c16	      0xe800000000	                          call 0x4008c1b	       172	buffer.c	FUNCTION_2	IF_2	CALL_8
0x4008c1b	    0x488b3d000000	            mov rdi, qword [0x04008c22] 	       173	buffer.c	FUNCTION_2	IF_2	CALL_9
0x4008c22	      0xe800000000	                          call 0x4008c27	       173	buffer.c	FUNCTION_2	IF_2	CALL_9
0x4008c27	    0x488b05000000	            mov rax, qword [0x04008c2e] 	       175	buffer.c	FUNCTION_2	IF_2	IF_5
0x4008c2e	    0x483b98b81500	          cmp rbx, qword [rax + 0x15b8] 	       175	buffer.c	FUNCTION_2	IF_2	IF_5
0x4008c35	     0xf840dffffff	                            je 0x4008b48	       175	buffer.c	FUNCTION_2	IF_2	IF_5
0x4008c3b	    0x488b3d000000	            mov rdi, qword [0x04008c42] 	       176	buffer.c	FUNCTION_2	IF_2	CALL_10
0x4008c42	      0xe800000000	                          call 0x4008c47	       176	buffer.c	FUNCTION_2	IF_2	CALL_10
0x4008c47	      0xe9fcfeffff	                           jmp 0x4008b48	       176	buffer.c	FUNCTION_2	IF_2	CALL_10
0x4008c4c	         0xf1f4000	                         nop dword [rax]	       176	buffer.c	FUNCTION_2	IF_2	CALL_10
0x4008c50	    0x488b3d000000	            mov rdi, qword [0x04008c57] 	       279	buffer.c	FUNCTION_2	IF_16	CALL_26
0x4008c57	      0xbe69000000	                           mov esi, 0x69	       279	buffer.c	FUNCTION_2	IF_16	CALL_26
0x4008c5c	      0xe800000000	                          call 0x4008c61	       279	buffer.c	FUNCTION_2	IF_16	CALL_26
0x4008c61	          0x4885c0	                           test rax, rax	       279	buffer.c	FUNCTION_2	IF_16	CALL_26
0x4008c64	     0xf8556feffff	                           jne 0x4008ac0	       279	buffer.c	FUNCTION_2	IF_16	CALL_26
0x4008c6a	      0xe941feffff	                           jmp 0x4008ab0	       279	buffer.c	FUNCTION_2	IF_16	CALL_26
0x4008c6f	              0x90	                                     nop	       279	buffer.c	FUNCTION_2	IF_16	CALL_26
0x4008c70	            0x31f6	                            xor esi, esi	       265	buffer.c	FUNCTION_2	IF_15	CALL_24
0x4008c72	      0xe800000000	                          call 0x4008c77	       265	buffer.c	FUNCTION_2	IF_15	CALL_24
0x4008c77	    0x488b3d000000	            mov rdi, qword [0x04008c7e] 	       267	buffer.c	FUNCTION_2	IF_15	CALL_25
0x4008c7e	      0xe800000000	                          call 0x4008c83	       267	buffer.c	FUNCTION_2	IF_15	CALL_25
0x4008c83	      0xe91afeffff	                           jmp 0x4008aa2	       267	buffer.c	FUNCTION_2	IF_15	CALL_25
0x4008c88	     0xf1f84000000	                   nop dword [rax + rax]	       267	buffer.c	FUNCTION_2	IF_15	CALL_25
0x4008c90	    0x8b0500000000	            mov eax, dword [0x04008c96] 	       195	buffer.c	FUNCTION_2	IF_6
0x4008c96	    0x448bbb081400	         mov r15d, dword [rbx + 0x1408] 	       197	buffer.c	FUNCTION_2	IF_6
0x4008c9d	        0x89442408	                mov dword [rsp + 8], eax	       195	buffer.c	FUNCTION_2	IF_6
0x4008ca1	    0x8b0500000000	            mov eax, dword [0x04008ca7] 	       201	buffer.c	FUNCTION_2	IF_6
0x4008ca7	    0xc70500000000	               mov dword [0x04008cb1], 0	       203	buffer.c	FUNCTION_2	IF_6
0x4008cb1	        0x8944240c	              mov dword [rsp + 0xc], eax	       201	buffer.c	FUNCTION_2	IF_6
0x4008cb5	      0xe800000000	                          call 0x4008cba	       206	buffer.c	FUNCTION_2	IF_6	CALL_12
0x4008cba	            0x85c0	                           test eax, eax	       207	buffer.c	FUNCTION_2	IF_6	IF_7
0x4008cbc	            0x781b	                            js 0x4008cd9	       207	buffer.c	FUNCTION_2	IF_6	IF_7
0x4008cbe	      0x2500f00000	                         and eax, 0xf000	       209	buffer.c	FUNCTION_2	IF_6	IF_7	CALL_13
0x4008cc3	      0x3d00100000	                         cmp eax, 0x1000	       207	buffer.c	FUNCTION_2	IF_6	IF_7
0x4008cc8	     0xf84d2020000	                            je 0x4008fa0	       207	buffer.c	FUNCTION_2	IF_6	IF_7
0x4008cce	      0x3d00c00000	                         cmp eax, 0xc000	       207	buffer.c	FUNCTION_2	IF_6	IF_7
0x4008cd3	     0xf84c7020000	                            je 0x4008fa0	       207	buffer.c	FUNCTION_2	IF_6	IF_7
0x4008cd9	      0xbf46000000	                           mov edi, 0x46	       222	buffer.c	FUNCTION_2	IF_6	IF_9	CALL_17
0x4008cde	      0xe800000000	                          call 0x4008ce3	       222	buffer.c	FUNCTION_2	IF_6	IF_9	CALL_17
0x4008ce3	            0x85c0	                           test eax, eax	       222	buffer.c	FUNCTION_2	IF_6	IF_9	CALL_17
0x4008ce5	            0x740a	                            je 0x4008cf1	       222	buffer.c	FUNCTION_2	IF_6	IF_9	CALL_17
0x4008ce7	    0xc70500000000	               mov dword [0x04008cf1], 1	       223	buffer.c	FUNCTION_2	IF_6	IF_9
0x4008cf1	    0x488b05000000	            mov rax, qword [0x04008cf8] 	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4008cf8	        0x4883ec08	                              sub rsp, 8	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4008cfc	        0x4183cc01	                              or r12d, 1	       226	buffer.c	FUNCTION_2	IF_6
0x4008d00	            0x31d2	                            xor edx, edx	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4008d02	          0x4d89e9	                             mov r9, r13	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4008d05	    0x41b8ffffff7f	                     mov r8d, 0x7fffffff	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4008d0b	            0x31c9	                            xor ecx, ecx	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4008d0d	          0x4531ff	                          xor r15d, r15d	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4008d10	    0x488bb8880000	            mov rdi, qword [rax + 0x88] 	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4008d17	    0x488bb0980000	            mov rsi, qword [rax + 0x98] 	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4008d1e	            0x4154	                                push r12	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4008d20	      0xe800000000	                          call 0x4008d25	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4008d25	        0x8944242c	             mov dword [rsp + 0x2c], eax	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4008d29	    0x488b3d000000	            mov rdi, qword [0x04008d30] 	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4008d30	              0x58	                                 pop rax	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4008d31	              0x5a	                                 pop rdx	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4008d32	        0x8b442408	                mov eax, dword [rsp + 8]	       235	buffer.c	FUNCTION_2	IF_6
0x4008d36	          0x4885ff	                           test rdi, rdi	      5618	buffer.c	FUNCTION_79
0x4008d39	    0x890500000000	            mov dword [0x04008d3f], eax 	       235	buffer.c	FUNCTION_2	IF_6
0x4008d3f	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       237	buffer.c	FUNCTION_2	IF_6
0x4008d43	    0x890500000000	            mov dword [0x04008d49], eax 	       237	buffer.c	FUNCTION_2	IF_6
0x4008d49	     0xf8449fdffff	                            je 0x4008a98	      5618	buffer.c	FUNCTION_79
0x4008d4f	    0x8bb758170000	          mov esi, dword [rdi + 0x1758] 	      5618	buffer.c	FUNCTION_79
0x4008d55	            0x85f6	                           test esi, esi	      5618	buffer.c	FUNCTION_79
0x4008d57	     0xf843bfdffff	                            je 0x4008a98	      5618	buffer.c	FUNCTION_79
0x4008d5d	      0xe800000000	                          call 0x4008d62	       241	buffer.c	FUNCTION_2	IF_6	CALL_21
0x4008d62	    0x488b3d000000	            mov rdi, qword [0x04008d69] 	       241	buffer.c	FUNCTION_2	IF_6	CALL_21
0x4008d69	      0xe92afdffff	                           jmp 0x4008a98	       241	buffer.c	FUNCTION_2	IF_6	CALL_21
0x4008d6e	            0x6690	                                     nop	       241	buffer.c	FUNCTION_2	IF_6	CALL_21
0x4008d70	    0x448b93081400	         mov r10d, dword [rbx + 0x1408] 	       245	buffer.c	FUNCTION_2	ELSE_1	IF_13
0x4008d77	          0x4489e0	                           mov eax, r12d	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x4008d7a	        0x4883ec08	                              sub rsp, 8	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x4008d7e	          0x83c805	                               or eax, 5	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x4008d81	    0xc78308140000	            mov dword [rbx + 0x1408], 1 	       253	buffer.c	FUNCTION_2	ELSE_1	IF_13
0x4008d8b	            0x31c9	                            xor ecx, ecx	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x4008d8d	            0x31d2	                            xor edx, edx	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x4008d8f	            0x31ff	                            xor edi, edi	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x4008d91	          0x4531c9	                            xor r9d, r9d	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x4008d94	      0x4489542410	            mov dword [rsp + 0x10], r10d	       245	buffer.c	FUNCTION_2	ELSE_1	IF_13
0x4008d99	              0x50	                                push rax	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x4008d9a	            0x31f6	                            xor esi, esi	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x4008d9c	    0x41b8ffffff7f	                     mov r8d, 0x7fffffff	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x4008da2	      0xe800000000	                          call 0x4008da7	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x4008da7	      0x448b542418	           mov r10d, dword [rsp + 0x18] 	       257	buffer.c	FUNCTION_2	ELSE_1	IF_13
0x4008dac	    0x488b3d000000	            mov rdi, qword [0x04008db3] 	       257	buffer.c	FUNCTION_2	ELSE_1	IF_13
0x4008db3	          0x83f801	                              cmp eax, 1	       258	buffer.c	FUNCTION_2	ELSE_1	IF_13	IF_14
0x4008db6	        0x8944242c	             mov dword [rsp + 0x2c], eax	       254	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_22
0x4008dba	    0x448997081400	         mov dword [rdi + 0x1408], r10d 	       257	buffer.c	FUNCTION_2	ELSE_1	IF_13
0x4008dc1	              0x5a	                                 pop rdx	       258	buffer.c	FUNCTION_2	ELSE_1	IF_13	IF_14
0x4008dc2	              0x59	                                 pop rcx	       258	buffer.c	FUNCTION_2	ELSE_1	IF_13	IF_14
0x4008dc3	     0xf85cffcffff	                           jne 0x4008a98	       258	buffer.c	FUNCTION_2	ELSE_1	IF_13	IF_14
0x4008dc9	          0x4c8b3f	                    mov r15, qword [rdi]	        82	buffer.c	FUNCTION_1
0x4008dcc	    0xc74424200100	               mov dword [rsp + 0x20], 1	        74	buffer.c	FUNCTION_1
0x4008dd4	        0x4183cc08	                              or r12d, 8	        83	buffer.c	FUNCTION_1	CALL_1
0x4008dd8	        0x4883ec08	                              sub rsp, 8	        83	buffer.c	FUNCTION_1	CALL_1
0x4008ddc	          0x4d89e9	                             mov r9, r13	        83	buffer.c	FUNCTION_1	CALL_1
0x4008ddf	            0x31c9	                            xor ecx, ecx	        83	buffer.c	FUNCTION_1	CALL_1
0x4008de1	            0x4154	                                push r12	        83	buffer.c	FUNCTION_1	CALL_1
0x4008de3	            0x31f6	                            xor esi, esi	        83	buffer.c	FUNCTION_1	CALL_1
0x4008de5	            0x31ff	                            xor edi, edi	        83	buffer.c	FUNCTION_1	CALL_1
0x4008de7	    0x41b8ffffff7f	                     mov r8d, 0x7fffffff	        83	buffer.c	FUNCTION_1	CALL_1
0x4008ded	          0x4c89fa	                            mov rdx, r15	        83	buffer.c	FUNCTION_1	CALL_1
0x4008df0	      0xe800000000	                          call 0x4008df5	        83	buffer.c	FUNCTION_1	CALL_1
0x4008df5	          0x83f801	                              cmp eax, 1	        88	buffer.c	FUNCTION_1	IF_1
0x4008df8	        0x89442430	             mov dword [rsp + 0x30], eax	        83	buffer.c	FUNCTION_1	CALL_1
0x4008dfc	            0x415c	                                 pop r12	        88	buffer.c	FUNCTION_1	IF_1
0x4008dfe	            0x415d	                                 pop r13	        88	buffer.c	FUNCTION_1	IF_1
0x4008e00	            0x7518	                           jne 0x4008e1a	        88	buffer.c	FUNCTION_1	IF_1
0x4008e02	      0xe9e5030000	                           jmp 0x40091ec	        88	buffer.c	FUNCTION_1	IF_1
0x4008e07	    0x660f1f840000	                    nop word [rax + rax]	        88	buffer.c	FUNCTION_1	IF_1
0x4008e10	            0x31f6	                            xor esi, esi	        98	buffer.c	FUNCTION_1	ELSE_1	CALL_3
0x4008e12	          0x4c89ff	                            mov rdi, r15	        98	buffer.c	FUNCTION_1	ELSE_1	CALL_3
0x4008e15	      0xe800000000	                          call 0x4008e1a	        98	buffer.c	FUNCTION_1	ELSE_1	CALL_3
0x4008e1a	    0x488b3d000000	            mov rdi, qword [0x04008e21] 	        97	buffer.c	FUNCTION_1	ELSE_1	WHILE_2
0x4008e21	          0x4c3b3f	                    cmp r15, qword [rdi]	        97	buffer.c	FUNCTION_1	ELSE_1	WHILE_2
0x4008e24	            0x7cea	                            jl 0x4008e10	        97	buffer.c	FUNCTION_1	ELSE_1	WHILE_2
0x4008e26	    0x448b1d000000	           mov r11d, dword [0x04008e2d] 	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x4008e2d	    0x488b05000000	            mov rax, qword [0x04008e34] 	       101	buffer.c	FUNCTION_1
0x4008e34	          0x4585db	                         test r11d, r11d	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x4008e37	    0x48c740380100	               mov qword [rax + 0x38], 1	       101	buffer.c	FUNCTION_1
0x4008e3f	    0xc74040000000	               mov dword [rax + 0x40], 0	       102	buffer.c	FUNCTION_1
0x4008e46	     0xf85fd020000	                           jne 0x4009149	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x4008e4c	        0x48833f01	                      cmp qword [rdi], 1	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x4008e50	     0xf84d9020000	                            je 0x400912f	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x4008e56	      0xe800000000	                          call 0x4008e5b	       109	buffer.c	FUNCTION_1	IF_2	CALL_5
0x4008e5b	        0x8b442420	            mov eax, dword [rsp + 0x20] 	       113	buffer.c	FUNCTION_1	IF_2	IF_5
0x4008e5f	          0x83f801	                              cmp eax, 1	       113	buffer.c	FUNCTION_1	IF_2	IF_5
0x4008e62	            0x7520	                           jne 0x4008e84	       113	buffer.c	FUNCTION_1	IF_2	IF_5
0x4008e64	    0x4c8b05000000	              mov r8, qword [0x04008e6b]	       116	buffer.c	FUNCTION_1	IF_2	IF_5	CALL_7
0x4008e6b	      0x4c8d4c2420	                    lea r9, [rsp + 0x20]	       116	buffer.c	FUNCTION_1	IF_2	IF_5	CALL_7
0x4008e70	            0x31c9	                            xor ecx, ecx	       116	buffer.c	FUNCTION_1	IF_2	IF_5	CALL_7
0x4008e72	            0x31d2	                            xor edx, edx	       116	buffer.c	FUNCTION_1	IF_2	IF_5	CALL_7
0x4008e74	            0x31f6	                            xor esi, esi	       116	buffer.c	FUNCTION_1	IF_2	IF_5	CALL_7
0x4008e76	      0xbf49000000	                           mov edi, 0x49	       116	buffer.c	FUNCTION_1	IF_2	IF_5	CALL_7
0x4008e7b	      0xe800000000	                          call 0x4008e80	       116	buffer.c	FUNCTION_1	IF_2	IF_5	CALL_7
0x4008e80	        0x8b442420	            mov eax, dword [rsp + 0x20] 	       116	buffer.c	FUNCTION_1	IF_2	IF_5	CALL_7
0x4008e84	    0x488b3d000000	            mov rdi, qword [0x04008e8b] 	       116	buffer.c	FUNCTION_1	IF_2	IF_5	CALL_7
0x4008e8b	        0x8944241c	             mov dword [rsp + 0x1c], eax	       259	buffer.c	FUNCTION_2	ELSE_1	IF_13	CALL_23
0x4008e8f	          0x4531ff	                          xor r15d, r15d	       142	buffer.c	FUNCTION_2
0x4008e92	      0xe901fcffff	                           jmp 0x4008a98	       142	buffer.c	FUNCTION_2
0x4008e97	    0x660f1f840000	                    nop word [rax + rax]	       142	buffer.c	FUNCTION_2
0x4008ea0	      0xe800000000	                          call 0x4008ea5	       282	buffer.c	FUNCTION_2	IF_16	CALL_28
0x4008ea5	            0x85c0	                           test eax, eax	       282	buffer.c	FUNCTION_2	IF_16	CALL_28
0x4008ea7	     0xf8563020000	                           jne 0x4009110	       282	buffer.c	FUNCTION_2	IF_16	CALL_28
0x4008ead	      0x837c241c01	               cmp dword [rsp + 0x1c], 1	       286	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x4008eb2	           0xf94c2	                                 sete dl	       286	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x4008eb5	            0x85ed	                           test ebp, ebp	       286	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x4008eb7	           0xf94c0	                                 sete al	       286	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x4008eba	            0x84c2	                             test dl, al	       286	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x4008ebc	     0xf8403fcffff	                            je 0x4008ac5	       286	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x4008ec2	          0x4585ff	                         test r15d, r15d	       286	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x4008ec5	     0xf85fafbffff	                           jne 0x4008ac5	       286	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x4008ecb	    0x488b3d000000	            mov rdi, qword [0x04008ed2] 	       287	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x4008ed2	            0x31f6	                            xor esi, esi	       287	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x4008ed4	      0xe800000000	                          call 0x4008ed9	       287	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x4008ed9	      0xe9e7fbffff	                           jmp 0x4008ac5	       287	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x4008ede	            0x6690	                                     nop	       287	buffer.c	FUNCTION_2	ELSE_2	IF_17
0x4008ee0	    0x443b35000000	           cmp r14d, dword [0x04008ee7] 	       377	buffer.c	FUNCTION_4	CALL_1
0x4008ee7	            0x7439	                            je 0x4008f22	       377	buffer.c	FUNCTION_4	CALL_1
0x4008ee9	    0x488b05000000	            mov rax, qword [0x04008ef0] 	       392	buffer.c	FUNCTION_5	FOR_1
0x4008ef0	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x4008ef3	            0x7518	                           jne 0x4008f0d	       392	buffer.c	FUNCTION_5	FOR_1
0x4008ef5	      0xe94efcffff	                           jmp 0x4008b48	       392	buffer.c	FUNCTION_5	FOR_1
0x4008efa	    0x660f1f440000	                    nop word [rax + rax]	       392	buffer.c	FUNCTION_5	FOR_1
0x4008f00	        0x488b4070	            mov rax, qword [rax + 0x70] 	       392	buffer.c	FUNCTION_5	FOR_1
0x4008f04	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x4008f07	     0xf843bfcffff	                            je 0x4008b48	       392	buffer.c	FUNCTION_5	FOR_1
0x4008f0d	          0x4839c3	                            cmp rbx, rax	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4008f10	            0x75ee	                           jne 0x4008f00	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4008f12	        0x8b442404	                mov eax, dword [rsp + 4]	       378	buffer.c	FUNCTION_4
0x4008f16	    0x3b83b8000000	            cmp eax, dword [rbx + 0xb8] 	       378	buffer.c	FUNCTION_4
0x4008f1c	     0xf8526fcffff	                           jne 0x4008b48	       378	buffer.c	FUNCTION_4
0x4008f22	      0x48837b0800	                  cmp qword [rbx + 8], 0	       331	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_38
0x4008f27	     0xf841bfcffff	                            je 0x4008b48	       331	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_38
0x4008f2d	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       336	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_39
0x4008f32	          0x4889de	                            mov rsi, rbx	       336	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_39
0x4008f35	      0xe800000000	                          call 0x4008f3a	       336	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_39
0x4008f3a	    0x4c8b05000000	              mov r8, qword [0x04008f41]	      5340	buffer.c	FUNCTION_73	IF_1
0x4008f41	    0x458b88381500	           mov r9d, dword [r8 + 0x1538] 	      5340	buffer.c	FUNCTION_73	IF_1
0x4008f48	          0x4585c9	                           test r9d, r9d	      5340	buffer.c	FUNCTION_73	IF_1
0x4008f4b	     0xf85e3000000	                           jne 0x4009034	      5340	buffer.c	FUNCTION_73	IF_1
0x4008f51	      0x4183607cf9	       and dword [r8 + 0x7c], 0xfffffff9	       338	buffer.c	FUNCTION_2	IF_21	IF_22
0x4008f56	      0x4c8d4c241c	                    lea r9, [rsp + 0x1c]	       341	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_41
0x4008f5b	            0x31c9	                            xor ecx, ecx	       341	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_41
0x4008f5d	            0x31d2	                            xor edx, edx	       341	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_41
0x4008f5f	            0x31f6	                            xor esi, esi	       341	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_41
0x4008f61	      0xbf0d000000	                            mov edi, 0xd	       341	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_41
0x4008f66	      0xe800000000	                          call 0x4008f6b	       341	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_41
0x4008f6b	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       348	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_43
0x4008f70	      0xe800000000	                          call 0x4008f75	       348	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_43
0x4008f75	      0x448b7c241c	           mov r15d, dword [rsp + 0x1c] 	       348	buffer.c	FUNCTION_2	IF_21	IF_22	CALL_43
0x4008f7a	      0xe9c9fbffff	                           jmp 0x4008b48	       352	buffer.c	FUNCTION_2
0x4008f7f	              0x90	                                     nop	       352	buffer.c	FUNCTION_2
0x4008f80	    0x488905000000	            mov qword [0x04008f87], rax 	       352	buffer.c	FUNCTION_2
0x4008f87	      0xe976fcffff	                           jmp 0x4008c02	       352	buffer.c	FUNCTION_2
0x4008f8c	         0xf1f4000	                         nop dword [rax]	       352	buffer.c	FUNCTION_2
0x4008f90	    0xc74424040000	                  mov dword [rsp + 4], 0	       362	buffer.c	FUNCTION_3
0x4008f98	      0xe9affaffff	                           jmp 0x4008a4c	       362	buffer.c	FUNCTION_3
0x4008f9d	           0xf1f00	                         nop dword [rax]	       362	buffer.c	FUNCTION_3
0x4008fa0	    0x488b05000000	            mov rax, qword [0x04008fa7] 	       220	buffer.c	FUNCTION_2	IF_6	IF_8
0x4008fa7	      0xbf46000000	                           mov edi, 0x46	       222	buffer.c	FUNCTION_2	IF_6	IF_9	CALL_17
0x4008fac	    0xc78008140000	            mov dword [rax + 0x1408], 1 	       220	buffer.c	FUNCTION_2	IF_6	IF_8
0x4008fb6	      0xe800000000	                          call 0x4008fbb	       222	buffer.c	FUNCTION_2	IF_6	IF_9	CALL_17
0x4008fbb	            0x85c0	                           test eax, eax	       222	buffer.c	FUNCTION_2	IF_6	IF_9	CALL_17
0x4008fbd	     0xf8581020000	                           jne 0x4009244	       222	buffer.c	FUNCTION_2	IF_6	IF_9	CALL_17
0x4008fc3	    0x488b15000000	            mov rdx, qword [0x04008fca] 	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4008fca	          0x4489e0	                           mov eax, r12d	       226	buffer.c	FUNCTION_2	IF_6
0x4008fcd	        0x4883ec08	                              sub rsp, 8	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4008fd1	          0x83c801	                               or eax, 1	       226	buffer.c	FUNCTION_2	IF_6
0x4008fd4	            0x31c9	                            xor ecx, ecx	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4008fd6	          0x4d89e9	                             mov r9, r13	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4008fd9	          0x83c840	                            or eax, 0x40	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4008fdc	    0x41b8ffffff7f	                     mov r8d, 0x7fffffff	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4008fe2	    0x488bb2980000	            mov rsi, qword [rdx + 0x98] 	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4008fe9	    0x488bba880000	            mov rdi, qword [rdx + 0x88] 	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4008ff0	            0x31d2	                            xor edx, edx	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4008ff2	              0x50	                                push rax	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4008ff3	      0xe800000000	                          call 0x4008ff8	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4008ff8	    0x488b3d000000	            mov rdi, qword [0x04008fff] 	       230	buffer.c	FUNCTION_2	IF_6	IF_10
0x4008fff	          0x83f801	                              cmp eax, 1	       231	buffer.c	FUNCTION_2	IF_6	IF_10	IF_11
0x4009002	        0x8944242c	             mov dword [rsp + 0x2c], eax	       224	buffer.c	FUNCTION_2	IF_6	CALL_18
0x4009006	    0x4489bf081400	         mov dword [rdi + 0x1408], r15d 	       230	buffer.c	FUNCTION_2	IF_6	IF_10
0x400900d	              0x59	                                 pop rcx	       231	buffer.c	FUNCTION_2	IF_6	IF_10	IF_11
0x400900e	              0x5e	                                 pop rsi	       231	buffer.c	FUNCTION_2	IF_6	IF_10	IF_11
0x400900f	     0xf844d010000	                            je 0x4009162	       231	buffer.c	FUNCTION_2	IF_6	IF_10	IF_11
0x4009015	        0x8b442408	                mov eax, dword [rsp + 8]	       235	buffer.c	FUNCTION_2	IF_6
0x4009019	    0x41bf01000000	                             mov r15d, 1	       237	buffer.c	FUNCTION_2	IF_6
0x400901f	    0x890500000000	            mov dword [0x04009025], eax 	       235	buffer.c	FUNCTION_2	IF_6
0x4009025	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       237	buffer.c	FUNCTION_2	IF_6
0x4009029	    0x890500000000	            mov dword [0x0400902f], eax 	       237	buffer.c	FUNCTION_2	IF_6
0x400902f	      0xe91bfdffff	                           jmp 0x4008d4f	       237	buffer.c	FUNCTION_2	IF_6
0x4009034	    0x488b05000000	            mov rax, qword [0x0400903b] 	      5340	buffer.c	FUNCTION_73	IF_1
0x400903b	            0x85c0	                           test eax, eax	      5340	buffer.c	FUNCTION_73	IF_1
0x400903d	            0x89c5	                            mov ebp, eax	      5340	buffer.c	FUNCTION_73	IF_1
0x400903f	     0xf840cffffff	                            je 0x4008f51	      5340	buffer.c	FUNCTION_73	IF_1
0x4009045	    0x8b3d00000000	            mov edi, dword [0x0400904b] 	      5345	buffer.c	FUNCTION_73	IF_2
0x400904b	            0x85ff	                           test edi, edi	      5345	buffer.c	FUNCTION_73	IF_2
0x400904d	     0xf85fefeffff	                           jne 0x4008f51	      5345	buffer.c	FUNCTION_73	IF_2
0x4009053	          0x498b18	                     mov rbx, qword [r8]	      5349	buffer.c	FUNCTION_73	FOR_1
0x4009056	    0xc70500000000	               mov dword [0x04009060], 1	      5348	buffer.c	FUNCTION_73
0x4009060	          0x4885db	                           test rbx, rbx	      5349	buffer.c	FUNCTION_73	FOR_1
0x4009063	     0xf8e96000000	                           jle 0x40090ff	      5349	buffer.c	FUNCTION_73	FOR_1
0x4009069	            0x85c0	                           test eax, eax	      5349	buffer.c	FUNCTION_73	FOR_1
0x400906b	            0x7e3f	                           jle 0x40090ac	      5349	buffer.c	FUNCTION_73	FOR_1
0x400906d	    0x41bc01000000	                             mov r12d, 1	      5349	buffer.c	FUNCTION_73	FOR_1
0x4009073	            0xeb0b	                           jmp 0x4009080	      5349	buffer.c	FUNCTION_73	FOR_1
0x4009075	           0xf1f00	                         nop dword [rax]	      5349	buffer.c	FUNCTION_73	FOR_1
0x4009078	          0x4863c5	                         movsxd rax, ebp	      5349	buffer.c	FUNCTION_73	FOR_1
0x400907b	          0x4939c4	                            cmp r12, rax	      5349	buffer.c	FUNCTION_73	FOR_1
0x400907e	            0x7f27	                            jg 0x40090a7	      5349	buffer.c	FUNCTION_73	FOR_1
0x4009080	            0x31f6	                            xor esi, esi	      5351	buffer.c	FUNCTION_73	FOR_1	IF_3	CALL_1
0x4009082	          0x4c89e7	                            mov rdi, r12	      5351	buffer.c	FUNCTION_73	FOR_1	IF_3	CALL_1
0x4009085	      0xe8b66fffff	                   call sym.chk_modeline	      5351	buffer.c	FUNCTION_73	FOR_1	IF_3	CALL_1
0x400908a	    0x4c8b05000000	              mov r8, qword [0x04009091]	      5349	buffer.c	FUNCTION_73	FOR_1
0x4009091	            0x85c0	                           test eax, eax	      5352	buffer.c	FUNCTION_73	FOR_1	IF_3
0x4009093	      0xb800000000	                              mov eax, 0	      5352	buffer.c	FUNCTION_73	FOR_1	IF_3
0x4009098	           0xf44e8	                          cmove ebp, eax	      5352	buffer.c	FUNCTION_73	FOR_1	IF_3
0x400909b	        0x4983c401	                              add r12, 1	      5350	buffer.c	FUNCTION_73	FOR_1
0x400909f	          0x498b18	                     mov rbx, qword [r8]	      5349	buffer.c	FUNCTION_73	FOR_1
0x40090a2	          0x4939dc	                            cmp r12, rbx	      5349	buffer.c	FUNCTION_73	FOR_1
0x40090a5	            0x7ed1	                           jle 0x4009078	      5349	buffer.c	FUNCTION_73	FOR_1
0x40090a7	          0x4885db	                           test rbx, rbx	      5354	buffer.c	FUNCTION_73	FOR_2
0x40090aa	            0x7e53	                           jle 0x40090ff	      5354	buffer.c	FUNCTION_73	FOR_2
0x40090ac	          0x4863c5	                         movsxd rax, ebp	      5354	buffer.c	FUNCTION_73	FOR_2
0x40090af	          0x4839d8	                            cmp rax, rbx	      5354	buffer.c	FUNCTION_73	FOR_2
0x40090b2	            0x7d4b	                           jge 0x40090ff	      5354	buffer.c	FUNCTION_73	FOR_2
0x40090b4	          0x4889d9	                            mov rcx, rbx	      5355	buffer.c	FUNCTION_73	FOR_2
0x40090b7	          0x4829c1	                            sub rcx, rax	      5355	buffer.c	FUNCTION_73	FOR_2
0x40090ba	          0x4839d9	                            cmp rcx, rbx	      5355	buffer.c	FUNCTION_73	FOR_2
0x40090bd	            0x7c1c	                            jl 0x40090db	      5355	buffer.c	FUNCTION_73	FOR_2
0x40090bf	            0xeb3e	                           jmp 0x40090ff	      5355	buffer.c	FUNCTION_73	FOR_2
0x40090c1	     0xf1f80000000	                         nop dword [rax]	      5355	buffer.c	FUNCTION_73	FOR_2
0x40090c8	          0x4863c5	                         movsxd rax, ebp	      5354	buffer.c	FUNCTION_73	FOR_2
0x40090cb	          0x4839c3	                            cmp rbx, rax	      5354	buffer.c	FUNCTION_73	FOR_2
0x40090ce	            0x7e2f	                           jle 0x40090ff	      5354	buffer.c	FUNCTION_73	FOR_2
0x40090d0	          0x498b08	                     mov rcx, qword [r8]	      5355	buffer.c	FUNCTION_73	FOR_2
0x40090d3	          0x4829c1	                            sub rcx, rax	      5355	buffer.c	FUNCTION_73	FOR_2
0x40090d6	          0x4839cb	                            cmp rbx, rcx	      5355	buffer.c	FUNCTION_73	FOR_2
0x40090d9	            0x7e24	                           jle 0x40090ff	      5355	buffer.c	FUNCTION_73	FOR_2
0x40090db	            0x31f6	                            xor esi, esi	      5356	buffer.c	FUNCTION_73	FOR_2	IF_4	CALL_2
0x40090dd	          0x4889df	                            mov rdi, rbx	      5356	buffer.c	FUNCTION_73	FOR_2	IF_4	CALL_2
0x40090e0	      0xe85b6fffff	                   call sym.chk_modeline	      5356	buffer.c	FUNCTION_73	FOR_2	IF_4	CALL_2
0x40090e5	            0x85c0	                           test eax, eax	      5357	buffer.c	FUNCTION_73	FOR_2	IF_4
0x40090e7	      0xb800000000	                              mov eax, 0	      5357	buffer.c	FUNCTION_73	FOR_2	IF_4
0x40090ec	    0x4c8b05000000	              mov r8, qword [0x040090f3]	      5355	buffer.c	FUNCTION_73	FOR_2
0x40090f3	           0xf44e8	                          cmove ebp, eax	      5357	buffer.c	FUNCTION_73	FOR_2	IF_4
0x40090f6	        0x4883eb01	                              sub rbx, 1	      5355	buffer.c	FUNCTION_73	FOR_2
0x40090fa	          0x4885db	                           test rbx, rbx	      5354	buffer.c	FUNCTION_73	FOR_2
0x40090fd	            0x7fc9	                            jg 0x40090c8	      5354	buffer.c	FUNCTION_73	FOR_2
0x40090ff	    0x832d00000000	               sub dword [0x04009106], 1	      5358	buffer.c	FUNCTION_73
0x4009106	      0xe946feffff	                           jmp 0x4008f51	      5358	buffer.c	FUNCTION_73
0x400910b	       0xf1f440000	                   nop dword [rax + rax]	      5358	buffer.c	FUNCTION_73
0x4009110	    0x488b3d000000	            mov rdi, qword [0x04009117] 	       282	buffer.c	FUNCTION_2	IF_16	CALL_28
0x4009117	      0xbe69000000	                           mov esi, 0x69	       282	buffer.c	FUNCTION_2	IF_16	CALL_28
0x400911c	      0xe800000000	                          call 0x4009121	       282	buffer.c	FUNCTION_2	IF_16	CALL_28
0x4009121	          0x4885c0	                           test rax, rax	       282	buffer.c	FUNCTION_2	IF_16	CALL_28
0x4009124	     0xf8596f9ffff	                           jne 0x4008ac0	       282	buffer.c	FUNCTION_2	IF_16	CALL_28
0x400912a	      0xe97efdffff	                           jmp 0x4008ead	       282	buffer.c	FUNCTION_2	IF_16	CALL_28
0x400912f	      0xbf01000000	                              mov edi, 1	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x4009134	      0xe800000000	                          call 0x4009139	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x4009139	          0x803800	                       cmp byte [rax], 0	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x400913c	     0xf8514fdffff	                           jne 0x4008e56	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x4009142	    0x488b3d000000	            mov rdi, qword [0x04009149] 	       108	buffer.c	FUNCTION_1	IF_2	IF_3	CALL_4
0x4009149	        0x8b442420	            mov eax, dword [rsp + 0x20] 	       110	buffer.c	FUNCTION_1	IF_2	ELSE_2	IF_4
0x400914d	          0x83f801	                              cmp eax, 1	       110	buffer.c	FUNCTION_1	IF_2	ELSE_2	IF_4
0x4009150	     0xf8535fdffff	                           jne 0x4008e8b	       110	buffer.c	FUNCTION_1	IF_2	ELSE_2	IF_4
0x4009156	            0x31f6	                            xor esi, esi	       111	buffer.c	FUNCTION_1	IF_2	ELSE_2	IF_4
0x4009158	      0xe800000000	                          call 0x400915d	       111	buffer.c	FUNCTION_1	IF_2	ELSE_2	IF_4
0x400915d	      0xe9f9fcffff	                           jmp 0x4008e5b	       111	buffer.c	FUNCTION_1	IF_2	ELSE_2	IF_4
0x4009162	          0x4c8b3f	                    mov r15, qword [rdi]	        82	buffer.c	FUNCTION_1
0x4009165	        0x4883ec08	                              sub rsp, 8	        83	buffer.c	FUNCTION_1	CALL_1
0x4009169	    0x488bb7980000	            mov rsi, qword [rdi + 0x98] 	        83	buffer.c	FUNCTION_1	CALL_1
0x4009170	        0x4183cc08	                              or r12d, 8	        83	buffer.c	FUNCTION_1	CALL_1
0x4009174	    0x488bbf880000	            mov rdi, qword [rdi + 0x88] 	        83	buffer.c	FUNCTION_1	CALL_1
0x400917b	    0x41b8ffffff7f	                     mov r8d, 0x7fffffff	        83	buffer.c	FUNCTION_1	CALL_1
0x4009181	            0x4154	                                push r12	        83	buffer.c	FUNCTION_1	CALL_1
0x4009183	            0x31c9	                            xor ecx, ecx	        83	buffer.c	FUNCTION_1	CALL_1
0x4009185	          0x4d89e9	                             mov r9, r13	        83	buffer.c	FUNCTION_1	CALL_1
0x4009188	          0x4c89fa	                            mov rdx, r15	        83	buffer.c	FUNCTION_1	CALL_1
0x400918b	      0xe800000000	                          call 0x4009190	        83	buffer.c	FUNCTION_1	CALL_1
0x4009190	          0x83f801	                              cmp eax, 1	        88	buffer.c	FUNCTION_1	IF_1
0x4009193	          0x4189c4	                           mov r12d, eax	        83	buffer.c	FUNCTION_1	CALL_1
0x4009196	              0x5f	                                 pop rdi	        88	buffer.c	FUNCTION_1	IF_1
0x4009197	            0x4158	                                  pop r8	        88	buffer.c	FUNCTION_1	IF_1
0x4009199	            0x747f	                            je 0x400921a	        88	buffer.c	FUNCTION_1	IF_1
0x400919b	    0x488b3d000000	            mov rdi, qword [0x040091a2] 	        97	buffer.c	FUNCTION_1	ELSE_1	WHILE_2
0x40091a2	          0x4c393f	                    cmp qword [rdi], r15	        97	buffer.c	FUNCTION_1	ELSE_1	WHILE_2
0x40091a5	            0x7e1f	                           jle 0x40091c6	        97	buffer.c	FUNCTION_1	ELSE_1	WHILE_2
0x40091a7	    0x660f1f840000	                    nop word [rax + rax]	        97	buffer.c	FUNCTION_1	ELSE_1	WHILE_2
0x40091b0	            0x31f6	                            xor esi, esi	        98	buffer.c	FUNCTION_1	ELSE_1	CALL_3
0x40091b2	          0x4c89ff	                            mov rdi, r15	        98	buffer.c	FUNCTION_1	ELSE_1	CALL_3
0x40091b5	      0xe800000000	                          call 0x40091ba	        98	buffer.c	FUNCTION_1	ELSE_1	CALL_3
0x40091ba	    0x488b3d000000	            mov rdi, qword [0x040091c1] 	        97	buffer.c	FUNCTION_1	ELSE_1	WHILE_2
0x40091c1	          0x4c3b3f	                    cmp r15, qword [rdi]	        97	buffer.c	FUNCTION_1	ELSE_1	WHILE_2
0x40091c4	            0x7cea	                            jl 0x40091b0	        97	buffer.c	FUNCTION_1	ELSE_1	WHILE_2
0x40091c6	    0x488b05000000	            mov rax, qword [0x040091cd] 	       101	buffer.c	FUNCTION_1
0x40091cd	      0x448964241c	            mov dword [rsp + 0x1c], r12d	       232	buffer.c	FUNCTION_2	IF_6	IF_10	CALL_19
0x40091d2	    0x41bf01000000	                             mov r15d, 1	       232	buffer.c	FUNCTION_2	IF_6	IF_10	CALL_19
0x40091d8	    0x48c740380100	               mov qword [rax + 0x38], 1	       101	buffer.c	FUNCTION_1
0x40091e0	    0xc74040000000	               mov dword [rax + 0x40], 0	       102	buffer.c	FUNCTION_1
0x40091e7	      0xe946fbffff	                           jmp 0x4008d32	       102	buffer.c	FUNCTION_1
0x40091ec	        0x4983ef01	                              sub r15, 1	        91	buffer.c	FUNCTION_1	IF_1	WHILE_1
0x40091f0	            0x781c	                            js 0x400920e	        91	buffer.c	FUNCTION_1	IF_1	WHILE_1
0x40091f2	    0x660f1f440000	                    nop word [rax + rax]	        91	buffer.c	FUNCTION_1	IF_1	WHILE_1
0x40091f8	            0x31f6	                            xor esi, esi	        92	buffer.c	FUNCTION_1	IF_1	CALL_2
0x40091fa	      0xbf01000000	                              mov edi, 1	        92	buffer.c	FUNCTION_1	IF_1	CALL_2
0x40091ff	        0x4983ef01	                              sub r15, 1	        91	buffer.c	FUNCTION_1	IF_1	WHILE_1
0x4009203	      0xe800000000	                          call 0x4009208	        92	buffer.c	FUNCTION_1	IF_1	CALL_2
0x4009208	        0x4983ffff	             cmp r15, 0xffffffffffffffff	        91	buffer.c	FUNCTION_1	IF_1	WHILE_1
0x400920c	            0x75ea	                           jne 0x40091f8	        91	buffer.c	FUNCTION_1	IF_1	WHILE_1
0x400920e	    0x488b3d000000	            mov rdi, qword [0x04009215] 	        91	buffer.c	FUNCTION_1	IF_1	WHILE_1
0x4009215	      0xe90cfcffff	                           jmp 0x4008e26	        91	buffer.c	FUNCTION_1	IF_1	WHILE_1
0x400921a	        0x4983ef01	                              sub r15, 1	        91	buffer.c	FUNCTION_1	IF_1	WHILE_1
0x400921e	            0x7816	                            js 0x4009236	        91	buffer.c	FUNCTION_1	IF_1	WHILE_1
0x4009220	            0x31f6	                            xor esi, esi	        92	buffer.c	FUNCTION_1	IF_1	CALL_2
0x4009222	      0xbf01000000	                              mov edi, 1	        92	buffer.c	FUNCTION_1	IF_1	CALL_2
0x4009227	        0x4983ef01	                              sub r15, 1	        91	buffer.c	FUNCTION_1	IF_1	WHILE_1
0x400922b	      0xe800000000	                          call 0x4009230	        92	buffer.c	FUNCTION_1	IF_1	CALL_2
0x4009230	        0x4983ffff	             cmp r15, 0xffffffffffffffff	        91	buffer.c	FUNCTION_1	IF_1	WHILE_1
0x4009234	            0x75ea	                           jne 0x4009220	        91	buffer.c	FUNCTION_1	IF_1	WHILE_1
0x4009236	    0x488b3d000000	            mov rdi, qword [0x0400923d] 	        91	buffer.c	FUNCTION_1	IF_1	WHILE_1
0x400923d	            0xeb87	                           jmp 0x40091c6	        91	buffer.c	FUNCTION_1	IF_1	WHILE_1
0x400923f	      0xe800000000	                          call 0x4009244	       353	buffer.c	FUNCTION_2
0x4009244	    0xc70500000000	               mov dword [0x0400924e], 1	       223	buffer.c	FUNCTION_2	IF_6	IF_9
0x400924e	      0xe970fdffff	                           jmp 0x4008fc3	       223	buffer.c	FUNCTION_2	IF_6	IF_9
buf_change_sign_type	FOR,1:WHILE,0:DO,0:ELSE,0:functions,0:CALL,0:SWITCH,0:IF,1	19
0x400c130	    0x488b87201c00	          mov rax, qword [rdi + 0x1c20] 	      5897	buffer.c	FUNCTION_90	FOR_1
0x400c137	          0x4885c0	                           test rax, rax	      5897	buffer.c	FUNCTION_90	FOR_1
0x400c13a	            0x742c	                            je 0x400c168	      5897	buffer.c	FUNCTION_90	FOR_1
0x400c13c	            0x3b30	                    cmp esi, dword [rax]	      5899	buffer.c	FUNCTION_90	FOR_1	IF_1
0x400c13e	            0x750c	                           jne 0x400c14c	      5899	buffer.c	FUNCTION_90	FOR_1	IF_1
0x400c140	            0xeb1e	                           jmp 0x400c160	      5899	buffer.c	FUNCTION_90	FOR_1	IF_1
0x400c142	    0x660f1f440000	                    nop word [rax + rax]	      5899	buffer.c	FUNCTION_90	FOR_1	IF_1
0x400c148	            0x3930	                    cmp dword [rax], esi	      5899	buffer.c	FUNCTION_90	FOR_1	IF_1
0x400c14a	            0x7414	                            je 0x400c160	      5899	buffer.c	FUNCTION_90	FOR_1	IF_1
0x400c14c	        0x488b4018	            mov rax, qword [rax + 0x18] 	      5897	buffer.c	FUNCTION_90	FOR_1
0x400c150	          0x4885c0	                           test rax, rax	      5897	buffer.c	FUNCTION_90	FOR_1
0x400c153	            0x75f3	                           jne 0x400c148	      5897	buffer.c	FUNCTION_90	FOR_1
0x400c155	            0xf3c3	                                     ret	      5897	buffer.c	FUNCTION_90	FOR_1
0x400c157	    0x660f1f840000	                    nop word [rax + rax]	      5897	buffer.c	FUNCTION_90	FOR_1
0x400c160	          0x895010	             mov dword [rax + 0x10], edx	      5901	buffer.c	FUNCTION_90	FOR_1	IF_1
0x400c163	        0x488b4008	                mov rax, qword [rax + 8]	      5902	buffer.c	FUNCTION_90	FOR_1	IF_1
0x400c167	              0xc3	                                     ret	      5902	buffer.c	FUNCTION_90	FOR_1	IF_1
0x400c168	            0x31c0	                            xor eax, eax	      5906	buffer.c	FUNCTION_90
0x400c16a	              0xc3	                                     ret	      5907	buffer.c	FUNCTION_90
buflist_list	FOR,1:WHILE,0:DO,1:ELSE,4:functions,0:CALL,33:SWITCH,0:IF,7	335
0x4004ea0	            0x4157	                                push r15	      2952	buffer.c	FUNCTION_45
0x4004ea2	            0x4156	                                push r14	      2952	buffer.c	FUNCTION_45
0x4004ea4	            0x4155	                                push r13	      2952	buffer.c	FUNCTION_45
0x4004ea6	            0x4154	                                push r12	      2952	buffer.c	FUNCTION_45
0x4004ea8	              0x55	                                push rbp	      2952	buffer.c	FUNCTION_45
0x4004ea9	              0x53	                                push rbx	      2952	buffer.c	FUNCTION_45
0x4004eaa	        0x4883ec08	                              sub rsp, 8	      2952	buffer.c	FUNCTION_45
0x4004eae	    0x488b1d000000	            mov rbx, qword [0x04004eb5] 	      2963	buffer.c	FUNCTION_45	FOR_1
0x4004eb5	          0x4885db	                           test rbx, rbx	      2963	buffer.c	FUNCTION_45	FOR_1
0x4004eb8	     0xf84e2000000	                            je 0x4004fa0	      2963	buffer.c	FUNCTION_45	FOR_1
0x4004ebe	    0x8b0500000000	            mov eax, dword [0x04004ec4] 	      2963	buffer.c	FUNCTION_45	FOR_1
0x4004ec4	            0x85c0	                           test eax, eax	      2963	buffer.c	FUNCTION_45	FOR_1
0x4004ec6	     0xf85d4000000	                           jne 0x4004fa0	      2963	buffer.c	FUNCTION_45	FOR_1
0x4004ecc	          0x4889fd	                            mov rbp, rdi	      2963	buffer.c	FUNCTION_45	FOR_1
0x4004ecf	    0x41bded030000	                         mov r13d, 0x3ed	      2963	buffer.c	FUNCTION_45	FOR_1
0x4004ed5	            0xeb71	                           jmp 0x4004f48	      2963	buffer.c	FUNCTION_45	FOR_1
0x4004ed7	    0x660f1f840000	                    nop word [rax + rax]	      2963	buffer.c	FUNCTION_45	FOR_1
0x4004ee0	    0x448b93241400	         mov r10d, dword [rbx + 0x1424] 	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4004ee7	          0x4585d2	                         test r10d, r10d	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4004eea	            0x750d	                           jne 0x4004ef9	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4004eec	        0x448b4d34	            mov r9d, dword [rbp + 0x34] 	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4004ef0	          0x4585c9	                           test r9d, r9d	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4004ef3	     0xf8487000000	                            je 0x4004f80	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4004ef9	        0x488b7d00	                    mov rdi, qword [rbp]	      2971	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x4004efd	      0xbe75000000	                           mov esi, 0x75	      2971	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x4004f02	      0xe800000000	                          call 0x4004f07	      2971	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x4004f07	          0x4885c0	                           test rax, rax	      2971	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x4004f0a	            0x740c	                            je 0x4004f18	      2971	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x4004f0c	    0x448b83241400	          mov r8d, dword [rbx + 0x1424] 	      2971	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x4004f13	          0x4585c0	                           test r8d, r8d	      2971	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x4004f16	            0x751d	                           jne 0x4004f35	      2971	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_4
0x4004f18	        0x488b7d00	                    mov rdi, qword [rbp]	      2972	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_5
0x4004f1c	      0xbe2b000000	                           mov esi, 0x2b	      2972	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_5
0x4004f21	      0xe800000000	                          call 0x4004f26	      2972	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_5
0x4004f26	          0x4885c0	                           test rax, rax	      2972	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_5
0x4004f29	     0xf8491000000	                            je 0x4004fc0	      2972	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_5
0x4004f2f	        0xf6437c40	           test byte [rbx + 0x7c], 0x40 	      2973	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_6
0x4004f33	            0x747b	                            je 0x4004fb0	      2973	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_6
0x4004f35	        0x488b5b68	            mov rbx, qword [rbx + 0x68] 	      2963	buffer.c	FUNCTION_45	FOR_1
0x4004f39	          0x4885db	                           test rbx, rbx	      2963	buffer.c	FUNCTION_45	FOR_1
0x4004f3c	            0x7462	                            je 0x4004fa0	      2963	buffer.c	FUNCTION_45	FOR_1
0x4004f3e	    0x8b0500000000	            mov eax, dword [0x04004f44] 	      2963	buffer.c	FUNCTION_45	FOR_1
0x4004f44	            0x85c0	                           test eax, eax	      2963	buffer.c	FUNCTION_45	FOR_1
0x4004f46	            0x7558	                           jne 0x4004fa0	      2963	buffer.c	FUNCTION_45	FOR_1
0x4004f48	    0x488bbb481c00	          mov rdi, qword [rbx + 0x1c48] 	      2966	buffer.c	FUNCTION_45	FOR_1	CALL_1
0x4004f4f	          0x4531f6	                          xor r14d, r14d	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4004f52	      0xe800000000	                          call 0x4004f57	      2966	buffer.c	FUNCTION_45	FOR_1	CALL_1
0x4004f57	            0x85c0	                           test eax, eax	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4004f59	          0x4189c4	                           mov r12d, eax	      2966	buffer.c	FUNCTION_45	FOR_1	CALL_1
0x4004f5c	            0x7482	                            je 0x4004ee0	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4004f5e	    0x488bbb481c00	          mov rdi, qword [rbx + 0x1c48] 	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4004f65	          0x4531f6	                          xor r14d, r14d	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4004f68	      0xe800000000	                          call 0x4004f6d	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4004f6d	            0x85c0	                           test eax, eax	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4004f6f	        0x410f95c6	                              setne r14b	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4004f73	      0xe968ffffff	                           jmp 0x4004ee0	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4004f78	     0xf1f84000000	                   nop dword [rax + rax]	      2967	buffer.c	FUNCTION_45	FOR_1	CALL_2
0x4004f80	        0x488b7d00	                    mov rdi, qword [rbp]	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4004f84	      0xbe75000000	                           mov esi, 0x75	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4004f89	      0xe800000000	                          call 0x4004f8e	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4004f8e	          0x4885c0	                           test rax, rax	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4004f91	     0xf8562ffffff	                           jne 0x4004ef9	      2970	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_3
0x4004f97	        0x488b5b68	            mov rbx, qword [rbx + 0x68] 	      2963	buffer.c	FUNCTION_45	FOR_1
0x4004f9b	          0x4885db	                           test rbx, rbx	      2963	buffer.c	FUNCTION_45	FOR_1
0x4004f9e	            0x759e	                           jne 0x4004f3e	      2963	buffer.c	FUNCTION_45	FOR_1
0x4004fa0	        0x4883c408	                              add rsp, 8	      3045	buffer.c	FUNCTION_45
0x4004fa4	              0x5b	                                 pop rbx	      3045	buffer.c	FUNCTION_45
0x4004fa5	              0x5d	                                 pop rbp	      3045	buffer.c	FUNCTION_45
0x4004fa6	            0x415c	                                 pop r12	      3045	buffer.c	FUNCTION_45
0x4004fa8	            0x415d	                                 pop r13	      3045	buffer.c	FUNCTION_45
0x4004faa	            0x415e	                                 pop r14	      3045	buffer.c	FUNCTION_45
0x4004fac	            0x415f	                                 pop r15	      3045	buffer.c	FUNCTION_45
0x4004fae	              0xc3	                                     ret	      3045	buffer.c	FUNCTION_45
0x4004faf	              0x90	                                     nop	      3045	buffer.c	FUNCTION_45
0x4004fb0	          0x4889df	                            mov rdi, rbx	      2973	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_6
0x4004fb3	      0xe800000000	                          call 0x4004fb8	      2973	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_6
0x4004fb8	            0x85c0	                           test eax, eax	      2973	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_6
0x4004fba	     0xf8475ffffff	                            je 0x4004f35	      2973	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_6
0x4004fc0	        0x488b7d00	                    mov rdi, qword [rbp]	      2974	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_7
0x4004fc4	      0xbe61000000	                           mov esi, 0x61	      2974	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_7
0x4004fc9	      0xe800000000	                          call 0x4004fce	      2974	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_7
0x4004fce	          0x4885c0	                           test rax, rax	      2974	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_7
0x4004fd1	            0x7416	                            je 0x4004fe9	      2974	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_7
0x4004fd3	      0x48837b0800	                  cmp qword [rbx + 8], 0	      2975	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4004fd8	     0xf8457ffffff	                            je 0x4004f35	      2975	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4004fde	          0x8b7b78	            mov edi, dword [rbx + 0x78] 	      2975	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4004fe1	            0x85ff	                           test edi, edi	      2975	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4004fe3	     0xf844cffffff	                            je 0x4004f35	      2975	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4004fe9	        0x488b7d00	                    mov rdi, qword [rbp]	      2976	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_8
0x4004fed	      0xbe68000000	                           mov esi, 0x68	      2976	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_8
0x4004ff2	      0xe800000000	                          call 0x4004ff7	      2976	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_8
0x4004ff7	          0x4885c0	                           test rax, rax	      2976	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_8
0x4004ffa	            0x7416	                            je 0x4005012	      2976	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_8
0x4004ffc	      0x48837b0800	                  cmp qword [rbx + 8], 0	      2977	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4005001	     0xf842effffff	                            je 0x4004f35	      2977	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4005007	          0x8b7378	            mov esi, dword [rbx + 0x78] 	      2977	buffer.c	FUNCTION_45	FOR_1	IF_1
0x400500a	            0x85f6	                           test esi, esi	      2977	buffer.c	FUNCTION_45	FOR_1	IF_1
0x400500c	     0xf8523ffffff	                           jne 0x4004f35	      2977	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4005012	        0x488b7d00	                    mov rdi, qword [rbp]	      2979	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_9
0x4005016	      0xbe52000000	                           mov esi, 0x52	      2979	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_9
0x400501b	      0xe800000000	                          call 0x4005020	      2979	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_9
0x4005020	          0x4885c0	                           test rax, rax	      2979	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_9
0x4005023	     0xf84f7020000	                            je 0x4005320	      2979	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_9
0x4005029	          0x4585e4	                         test r12d, r12d	      2980	buffer.c	FUNCTION_45	FOR_1	IF_1
0x400502c	     0xf8403ffffff	                            je 0x4004f35	      2980	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4005032	          0x4585f6	                         test r14d, r14d	      2980	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4005035	     0xf85fafeffff	                           jne 0x4004f35	      2980	buffer.c	FUNCTION_45	FOR_1	IF_1
0x400503b	        0x488b7d00	                    mov rdi, qword [rbp]	      2981	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_10
0x400503f	      0xbe3f000000	                           mov esi, 0x3f	      2981	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_10
0x4005044	      0xe800000000	                          call 0x4005049	      2981	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_10
0x4005049	          0x4885c0	                           test rax, rax	      2981	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_10
0x400504c	     0xf85e3feffff	                           jne 0x4004f35	      2981	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_10
0x4005052	        0x488b7d00	                    mov rdi, qword [rbp]	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x4005056	      0xbe46000000	                           mov esi, 0x46	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x400505b	      0xe800000000	                          call 0x4005060	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x4005060	          0x4885c0	                           test rax, rax	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x4005063	     0xf85ccfeffff	                           jne 0x4004f35	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x4005069	        0x488b7d00	                    mov rdi, qword [rbp]	      2986	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_12
0x400506d	      0xbe2d000000	                           mov esi, 0x2d	      2986	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_12
0x4005072	      0xe800000000	                          call 0x4005077	      2986	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_12
0x4005077	          0x4885c0	                           test rax, rax	      2986	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_12
0x400507a	            0x740e	                            je 0x400508a	      2986	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_12
0x400507c	    0x8b8b40150000	          mov ecx, dword [rbx + 0x1540] 	      2986	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_12
0x4005082	            0x85c9	                           test ecx, ecx	      2986	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_12
0x4005084	     0xf85abfeffff	                           jne 0x4004f35	      2986	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_12
0x400508a	        0x488b7d00	                    mov rdi, qword [rbp]	      2987	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_13
0x400508e	      0xbe3d000000	                           mov esi, 0x3d	      2987	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_13
0x4005093	      0xe800000000	                          call 0x4005098	      2987	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_13
0x4005098	          0x4885c0	                           test rax, rax	      2987	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_13
0x400509b	            0x740e	                            je 0x40050ab	      2987	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_13
0x400509d	    0x8b9360150000	          mov edx, dword [rbx + 0x1560] 	      2987	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_13
0x40050a3	            0x85d2	                           test edx, edx	      2987	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_13
0x40050a5	     0xf848afeffff	                            je 0x4004f35	      2987	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_13
0x40050ab	        0x488b7d00	                    mov rdi, qword [rbp]	      2988	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_14
0x40050af	      0xbe78000000	                           mov esi, 0x78	      2988	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_14
0x40050b4	      0xe800000000	                          call 0x40050b9	      2988	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_14
0x40050b9	          0x4885c0	                           test rax, rax	      2988	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_14
0x40050bc	            0x740a	                            je 0x40050c8	      2988	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_14
0x40050be	        0xf6437c40	           test byte [rbx + 0x7c], 0x40 	      2988	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_14
0x40050c2	     0xf846dfeffff	                            je 0x4004f35	      2988	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_14
0x40050c8	        0x488b7d00	                    mov rdi, qword [rbp]	      2989	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_15
0x40050cc	      0xbe25000000	                           mov esi, 0x25	      2989	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_15
0x40050d1	      0xe800000000	                          call 0x40050d6	      2989	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_15
0x40050d6	          0x4885c0	                           test rax, rax	      2989	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_15
0x40050d9	            0x740d	                            je 0x40050e8	      2989	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_15
0x40050db	    0x48391d000000	            cmp qword [0x040050e2], rbx 	      2989	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_15
0x40050e2	     0xf854dfeffff	                           jne 0x4004f35	      2989	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_15
0x40050e8	        0x488b7d00	                    mov rdi, qword [rbp]	      2990	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_16
0x40050ec	      0xbe23000000	                           mov esi, 0x23	      2990	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_16
0x40050f1	      0xe800000000	                          call 0x40050f6	      2990	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_16
0x40050f6	          0x4885c0	                           test rax, rax	      2990	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_16
0x40050f9	            0x7426	                            je 0x4005121	      2990	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_16
0x40050fb	    0x48391d000000	            cmp qword [0x04005102], rbx 	      2991	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4005102	     0xf842dfeffff	                            je 0x4004f35	      2991	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4005108	    0x488b05000000	            mov rax, qword [0x0400510f] 	      2991	buffer.c	FUNCTION_45	FOR_1	IF_1
0x400510f	    0x8b8bb8000000	            mov ecx, dword [rbx + 0xb8] 	      2991	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4005115	    0x398878010000	           cmp dword [rax + 0x178], ecx 	      2991	buffer.c	FUNCTION_45	FOR_1	IF_1
0x400511b	     0xf8514feffff	                           jne 0x4004f35	      2991	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4005121	          0x4889df	                            mov rdi, rbx	      2993	buffer.c	FUNCTION_45	FOR_1	IF_2	CALL_17
0x4005124	      0xe800000000	                          call 0x4005129	      2993	buffer.c	FUNCTION_45	FOR_1	IF_2	CALL_17
0x4005129	          0x4885c0	                           test rax, rax	      2993	buffer.c	FUNCTION_45	FOR_1	IF_2	CALL_17
0x400512c	     0xf843a020000	                            je 0x400536c	      2993	buffer.c	FUNCTION_45	FOR_1	IF_2	CALL_17
0x4005132	          0x4889df	                            mov rdi, rbx	      2994	buffer.c	FUNCTION_45	FOR_1	CALL_19
0x4005135	      0xe800000000	                          call 0x400513a	      2994	buffer.c	FUNCTION_45	FOR_1	CALL_19
0x400513a	    0x488b3d000000	            mov rdi, qword [0x04005141] 	      2994	buffer.c	FUNCTION_45	FOR_1	CALL_19
0x4005141	      0xbaff0f0000	                          mov edx, 0xfff	      2994	buffer.c	FUNCTION_45	FOR_1	CALL_19
0x4005146	          0x4889c6	                            mov rsi, rax	      2994	buffer.c	FUNCTION_45	FOR_1	CALL_19
0x4005149	      0xe800000000	                          call 0x400514e	      2994	buffer.c	FUNCTION_45	FOR_1	CALL_19
0x400514e	    0x488b3d000000	            mov rdi, qword [0x04005155] 	      2997	buffer.c	FUNCTION_45	FOR_1	IF_3	CALL_21
0x4005155	      0xe800000000	                          call 0x400515a	      2997	buffer.c	FUNCTION_45	FOR_1	IF_3	CALL_21
0x400515a	            0x85c0	                           test eax, eax	      2997	buffer.c	FUNCTION_45	FOR_1	IF_3	CALL_21
0x400515c	     0xf85d3fdffff	                           jne 0x4004f35	      2997	buffer.c	FUNCTION_45	FOR_1	IF_3	CALL_21
0x4005162	        0xf6437c40	           test byte [rbx + 0x7c], 0x40 	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x4005166	    0x41be78000000	                          mov r14d, 0x78	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x400516c	            0x7516	                           jne 0x4005184	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x400516e	          0x4889df	                            mov rdi, rbx	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x4005171	      0xe800000000	                          call 0x4005176	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x4005176	          0x83f801	                              cmp eax, 1	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x4005179	          0x4519f6	                          sbb r14d, r14d	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x400517c	        0x4183e6f5	                    and r14d, 0xfffffff5	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x4005180	        0x4183c62b	                          add r14d, 0x2b	      3001	buffer.c	FUNCTION_45	FOR_1	CALL_22
0x4005184	    0x488bbb481c00	          mov rdi, qword [rbx + 0x1c48] 	      3003	buffer.c	FUNCTION_45	FOR_1	IF_4	CALL_23
0x400518b	      0xe800000000	                          call 0x4005190	      3003	buffer.c	FUNCTION_45	FOR_1	IF_4	CALL_23
0x4005190	            0x85c0	                           test eax, eax	      3003	buffer.c	FUNCTION_45	FOR_1	IF_4	CALL_23
0x4005192	     0xf8558020000	                           jne 0x40053f0	      3003	buffer.c	FUNCTION_45	FOR_1	IF_4	CALL_23
0x4005198	    0x4883bb481c00	             cmp qword [rbx + 0x1c48], 0	      3012	buffer.c	FUNCTION_45	FOR_1	ELSE_3	IF_6
0x40051a0	    0x41bc46000000	                          mov r12d, 0x46	      3013	buffer.c	FUNCTION_45	FOR_1	ELSE_3	IF_6
0x40051a6	     0xf8419020000	                            je 0x40053c5	      3012	buffer.c	FUNCTION_45	FOR_1	ELSE_3	IF_6
0x40051ac	      0xbf0a000000	                            mov edi, 0xa	      3018	buffer.c	FUNCTION_45	FOR_1	CALL_25
0x40051b1	      0xe800000000	                          call 0x40051b6	      3018	buffer.c	FUNCTION_45	FOR_1	CALL_25
0x40051b6	      0x48837b0800	                  cmp qword [rbx + 8], 0	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x40051bb	    0x488b35000000	            mov rsi, qword [0x040051c2] 	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x40051c2	     0xf849a010000	                            je 0x4005362	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x40051c8	        0x837b7801	               cmp dword [rbx + 0x78], 1	      3025	buffer.c	FUNCTION_45	FOR_1
0x40051cc	            0x19c0	                            sbb eax, eax	      3025	buffer.c	FUNCTION_45	FOR_1
0x40051ce	          0x83e007	                              and eax, 7	      3025	buffer.c	FUNCTION_45	FOR_1
0x40051d1	          0x83c061	                           add eax, 0x61	      3025	buffer.c	FUNCTION_45	FOR_1
0x40051d4	    0x48391d000000	            cmp qword [0x040051db], rbx 	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x40051db	    0x8b8bb8000000	            mov ecx, dword [rbx + 0xb8] 	      3023	buffer.c	FUNCTION_45	FOR_1
0x40051e1	    0x41b925000000	                           mov r9d, 0x25	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x40051e7	            0x7419	                            je 0x4005202	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x40051e9	    0x488b15000000	            mov rdx, qword [0x040051f0] 	      3023	buffer.c	FUNCTION_45	FOR_1
0x40051f0	          0x4531c9	                            xor r9d, r9d	      3023	buffer.c	FUNCTION_45	FOR_1
0x40051f3	    0x398a78010000	           cmp dword [rdx + 0x178], ecx 	      3023	buffer.c	FUNCTION_45	FOR_1
0x40051f9	        0x410f94c1	                                sete r9b	      3023	buffer.c	FUNCTION_45	FOR_1
0x40051fd	      0x478d4c4920	            lea r9d, [r9 + r9*2 + 0x20] 	      3023	buffer.c	FUNCTION_45	FOR_1
0x4005202	    0x83bb24140000	            cmp dword [rbx + 0x1424], 1 	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x4005209	    0x488b3d000000	            mov rdi, qword [0x04005210] 	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x4005210	              0x56	                                push rsi	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x4005211	            0x4156	                                push r14	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x4005213	      0xbeed030000	                          mov esi, 0x3ed	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x4005218	            0x4154	                                push r12	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x400521a	              0x50	                                push rax	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x400521b	            0x19d2	                            sbb edx, edx	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x400521d	            0x31c0	                            xor eax, eax	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x400521f	          0x83e255	                           and edx, 0x55	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x4005222	        0x448d4220	                   lea r8d, [rdx + 0x20]	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x4005226	      0xba00000000	                              mov edx, 0	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x400522b	      0xe800000000	                          call 0x4005230	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x4005230	    0x488b3d000000	            mov rdi, qword [0x04005237] 	      3033	buffer.c	FUNCTION_45	FOR_1	CALL_27
0x4005237	        0x4883c420	                           add rsp, 0x20	      3033	buffer.c	FUNCTION_45	FOR_1	CALL_27
0x400523b	      0x3ded030000	                          cmp eax, 0x3ed	      3033	buffer.c	FUNCTION_45	FOR_1	CALL_27
0x4005240	        0x410f4fc5	                         cmovg eax, r13d	      3033	buffer.c	FUNCTION_45	FOR_1	CALL_27
0x4005244	          0x4189c4	                           mov r12d, eax	      3033	buffer.c	FUNCTION_45	FOR_1	CALL_27
0x4005247	      0xe800000000	                          call 0x400524c	      3033	buffer.c	FUNCTION_45	FOR_1	CALL_27
0x400524c	      0xba28000000	                           mov edx, 0x28	      3033	buffer.c	FUNCTION_45	FOR_1	CALL_27
0x4005251	            0x29c2	                            sub edx, eax	      3033	buffer.c	FUNCTION_45	FOR_1	CALL_27
0x4005253	            0x89d0	                            mov eax, edx	      3033	buffer.c	FUNCTION_45	FOR_1	CALL_27
0x4005255	          0x4963d4	                        movsxd rdx, r12d	      3033	buffer.c	FUNCTION_45	FOR_1	CALL_27
0x4005258	    0x488b0d000000	            mov rcx, qword [0x0400525f] 	      3036	buffer.c	FUNCTION_45	FOR_1	DO_1
0x400525f	          0x83e801	                              sub eax, 1	      3037	buffer.c	FUNCTION_45	FOR_1	DO_1
0x4005262	        0x4183c401	                             add r12d, 1	      3036	buffer.c	FUNCTION_45	FOR_1	DO_1
0x4005266	            0x85c0	                           test eax, eax	      3037	buffer.c	FUNCTION_45	FOR_1	DO_1
0x4005268	        0xc6041120	              mov byte [rcx + rdx], 0x20	      3036	buffer.c	FUNCTION_45	FOR_1	DO_1
0x400526c	     0xf8ea3010000	                           jle 0x4005415	      3037	buffer.c	FUNCTION_45	FOR_1	DO_1
0x4005272	        0x4883c201	                              add rdx, 1	      3037	buffer.c	FUNCTION_45	FOR_1	DO_1
0x4005276	    0x4181fcef0300	                         cmp r12d, 0x3ef	      3037	buffer.c	FUNCTION_45	FOR_1	DO_1
0x400527d	            0x75d9	                           jne 0x4005258	      3037	buffer.c	FUNCTION_45	FOR_1	DO_1
0x400527f	    0x41bcef030000	                         mov r12d, 0x3ef	      3037	buffer.c	FUNCTION_45	FOR_1	DO_1
0x4005285	    0x41be12000000	                          mov r14d, 0x12	      3037	buffer.c	FUNCTION_45	FOR_1	DO_1
0x400528b	    0x48391d000000	            cmp qword [0x04005292], rbx 	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x4005292	     0xf849b010000	                            je 0x4005433	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x4005298	    0x488b83280100	           mov rax, qword [rbx + 0x128] 	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x400529f	          0x4885c0	                           test rax, rax	      2855	buffer.c	FUNCTION_41	FOR_1
0x40052a2	     0xf8481010000	                            je 0x4005429	      2855	buffer.c	FUNCTION_41	FOR_1
0x40052a8	    0x488b0d000000	            mov rcx, qword [0x040052af] 	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x40052af	        0x48394810	            cmp qword [rax + 0x10], rcx 	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x40052b3	            0x7414	                            je 0x40052c9	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x40052b5	          0x4889c2	                            mov rdx, rax	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x40052b8	          0x488b12	                    mov rdx, qword [rdx]	      2855	buffer.c	FUNCTION_41	FOR_1
0x40052bb	          0x4885d2	                           test rdx, rdx	      2855	buffer.c	FUNCTION_41	FOR_1
0x40052be	            0x7409	                            je 0x40052c9	      2855	buffer.c	FUNCTION_41	FOR_1
0x40052c0	        0x483b4a10	            cmp rcx, qword [rdx + 0x10] 	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x40052c4	            0x75f2	                           jne 0x40052b8	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x40052c6	          0x4889d0	                            mov rax, rdx	      2855	buffer.c	FUNCTION_41	FOR_1
0x40052c9	        0x4883c018	                           add rax, 0x18	      2933	buffer.c	FUNCTION_43	IF_1
0x40052cd	          0x4c8b38	                    mov r15, qword [rax]	      2944	buffer.c	ELSE_1	FUNCTION_44	CALL_1
0x40052d0	            0x31ff	                            xor edi, edi	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x40052d2	      0xba05000000	                              mov edx, 5	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x40052d7	      0xbe00000000	                              mov esi, 0	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x40052dc	      0xe800000000	                          call 0x40052e1	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x40052e1	          0x4c89e7	                            mov rdi, r12	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x40052e4	    0x48033d000000	             add rdi, qword [0x040052eb]	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x40052eb	          0x4889c2	                            mov rdx, rax	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x40052ee	          0x4c89f9	                            mov rcx, r15	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x40052f1	          0x4c89f6	                            mov rsi, r14	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x40052f4	            0x31c0	                            xor eax, eax	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x40052f6	      0xe800000000	                          call 0x40052fb	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x40052fb	    0x488b3d000000	            mov rdi, qword [0x04005302] 	      3041	buffer.c	FUNCTION_45	FOR_1	CALL_31
0x4005302	      0xe800000000	                          call 0x4005307	      3041	buffer.c	FUNCTION_45	FOR_1	CALL_31
0x4005307	      0xe800000000	                          call 0x400530c	      3042	buffer.c	FUNCTION_45	FOR_1	CALL_32
0x400530c	      0xe800000000	                          call 0x4005311	      3043	buffer.c	FUNCTION_45	FOR_1	CALL_33
0x4005311	      0xe91ffcffff	                           jmp 0x4004f35	      3043	buffer.c	FUNCTION_45	FOR_1	CALL_33
0x4005316	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3043	buffer.c	FUNCTION_45	FOR_1	CALL_33
0x4005320	        0x488b7d00	                    mov rdi, qword [rbp]	      2981	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_10
0x4005324	      0xbe3f000000	                           mov esi, 0x3f	      2981	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_10
0x4005329	      0xe800000000	                          call 0x400532e	      2981	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_10
0x400532e	          0x4885c0	                           test rax, rax	      2981	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_10
0x4005331	            0x745f	                            je 0x4005392	      2981	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_10
0x4005333	          0x4585e4	                         test r12d, r12d	      2982	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4005336	     0xf84f9fbffff	                            je 0x4004f35	      2982	buffer.c	FUNCTION_45	FOR_1	IF_1
0x400533c	        0x4183fe01	                             cmp r14d, 1	      2982	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4005340	     0xf85effbffff	                           jne 0x4004f35	      2982	buffer.c	FUNCTION_45	FOR_1	IF_1
0x4005346	        0x488b7d00	                    mov rdi, qword [rbp]	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x400534a	      0xbe46000000	                           mov esi, 0x46	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x400534f	      0xe800000000	                          call 0x4005354	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x4005354	          0x4885c0	                           test rax, rax	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x4005357	     0xf85d8fbffff	                           jne 0x4004f35	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x400535d	      0xe907fdffff	                           jmp 0x4005069	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x4005362	      0xb820000000	                           mov eax, 0x20	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x4005367	      0xe968feffff	                           jmp 0x40051d4	      3019	buffer.c	FUNCTION_45	FOR_1	CALL_26
0x400536c	    0x488bb3980000	            mov rsi, qword [rbx + 0x98] 	      2996	buffer.c	FUNCTION_45	FOR_1	CALL_20
0x4005373	    0x488b15000000	            mov rdx, qword [0x0400537a] 	      2996	buffer.c	FUNCTION_45	FOR_1	CALL_20
0x400537a	    0x41b801000000	                              mov r8d, 1	      2996	buffer.c	FUNCTION_45	FOR_1	CALL_20
0x4005380	      0xb900100000	                         mov ecx, 0x1000	      2996	buffer.c	FUNCTION_45	FOR_1	CALL_20
0x4005385	          0x4889df	                            mov rdi, rbx	      2996	buffer.c	FUNCTION_45	FOR_1	CALL_20
0x4005388	      0xe800000000	                          call 0x400538d	      2996	buffer.c	FUNCTION_45	FOR_1	CALL_20
0x400538d	      0xe9bcfdffff	                           jmp 0x400514e	      2996	buffer.c	FUNCTION_45	FOR_1	CALL_20
0x4005392	        0x488b7d00	                    mov rdi, qword [rbp]	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x4005396	      0xbe46000000	                           mov esi, 0x46	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x400539b	      0xe800000000	                          call 0x40053a0	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x40053a0	          0x4885c0	                           test rax, rax	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x40053a3	     0xf84c0fcffff	                            je 0x4005069	      2983	buffer.c	FUNCTION_45	FOR_1	IF_1	CALL_11
0x40053a9	          0x4585e4	                         test r12d, r12d	      2984	buffer.c	FUNCTION_45	FOR_1	IF_1
0x40053ac	     0xf8583fbffff	                           jne 0x4004f35	      2984	buffer.c	FUNCTION_45	FOR_1	IF_1
0x40053b2	    0x4883bb481c00	             cmp qword [rbx + 0x1c48], 0	      2984	buffer.c	FUNCTION_45	FOR_1	IF_1
0x40053ba	     0xf85a9fcffff	                           jne 0x4005069	      2984	buffer.c	FUNCTION_45	FOR_1	IF_1
0x40053c0	      0xe970fbffff	                           jmp 0x4004f35	      2984	buffer.c	FUNCTION_45	FOR_1	IF_1
0x40053c5	    0x8b8340150000	          mov eax, dword [rbx + 0x1540] 	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x40053cb	    0x41bc2d000000	                          mov r12d, 0x2d	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x40053d1	            0x85c0	                           test eax, eax	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x40053d3	     0xf84d3fdffff	                            je 0x40051ac	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x40053d9	    0x83bb60150000	            cmp dword [rbx + 0x1560], 1 	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x40053e0	          0x4519e4	                          sbb r12d, r12d	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x40053e3	        0x4183e4e3	                    and r12d, 0xffffffe3	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x40053e7	        0x4183c43d	                          add r12d, 0x3d	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x40053eb	      0xe9bcfdffff	                           jmp 0x40051ac	      3016	buffer.c	FUNCTION_45	FOR_1	ELSE_4
0x40053f0	    0x488bbb481c00	          mov rdi, qword [rbx + 0x1c48] 	      3005	buffer.c	FUNCTION_45	FOR_1	IF_4	IF_5	CALL_24
0x40053f7	    0x41be20000000	                          mov r14d, 0x20	      3009	buffer.c	FUNCTION_45	FOR_1	IF_4
0x40053fd	      0xe800000000	                          call 0x4005402	      3005	buffer.c	FUNCTION_45	FOR_1	IF_4	IF_5	CALL_24
0x4005402	          0x83f801	                              cmp eax, 1	      3009	buffer.c	FUNCTION_45	FOR_1	IF_4
0x4005405	          0x4519e4	                          sbb r12d, r12d	      3009	buffer.c	FUNCTION_45	FOR_1	IF_4
0x4005408	        0x4183e413	                          and r12d, 0x13	      3009	buffer.c	FUNCTION_45	FOR_1	IF_4
0x400540c	        0x4183c43f	                          add r12d, 0x3f	      3009	buffer.c	FUNCTION_45	FOR_1	IF_4
0x4005410	      0xe997fdffff	                           jmp 0x40051ac	      3009	buffer.c	FUNCTION_45	FOR_1	IF_4
0x4005415	    0x41be01040000	                         mov r14d, 0x401	      3009	buffer.c	FUNCTION_45	FOR_1	IF_4
0x400541b	          0x4529e6	                          sub r14d, r12d	      3009	buffer.c	FUNCTION_45	FOR_1	IF_4
0x400541e	          0x4d63e4	                        movsxd r12, r12d	      3009	buffer.c	FUNCTION_45	FOR_1	IF_4
0x4005421	          0x4d63f6	                        movsxd r14, r14d	      3009	buffer.c	FUNCTION_45	FOR_1	IF_4
0x4005424	      0xe962feffff	                           jmp 0x400528b	      3009	buffer.c	FUNCTION_45	FOR_1	IF_4
0x4005429	      0xb800000000	                              mov eax, 0	      2935	buffer.c	FUNCTION_43	ELSE_1
0x400542e	      0xe99afeffff	                           jmp 0x40052cd	      2935	buffer.c	FUNCTION_43	ELSE_1
0x4005433	    0x488b05000000	            mov rax, qword [0x0400543a] 	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x400543a	        0x4c8b7838	            mov r15, qword [rax + 0x38] 	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
0x400543e	      0xe98dfeffff	                           jmp 0x40052d0	      3038	buffer.c	FUNCTION_45	FOR_1	CALL_28
buf_spname	FOR,0:WHILE,0:DO,0:ELSE,1:functions,0:CALL,8:SWITCH,0:IF,6	70
0x4004d80	          0x4885ff	                           test rdi, rdi	      5600	buffer.c	FUNCTION_77
0x4004d83	            0x741e	                            je 0x4004da3	      5600	buffer.c	FUNCTION_77
0x4004d85	    0x488b97181400	          mov rdx, qword [rdi + 0x1418] 	      5600	buffer.c	FUNCTION_77
0x4004d8c	           0xfb602	                   movzx eax, byte [rdx]	      5600	buffer.c	FUNCTION_77
0x4004d8f	            0x3c71	                            cmp al, 0x71	      5600	buffer.c	FUNCTION_77
0x4004d91	            0x7425	                            je 0x4004db8	      5600	buffer.c	FUNCTION_77
0x4004d93	            0x3c6e	                            cmp al, 0x6e	      5628	buffer.c	FUNCTION_80
0x4004d95	            0x7479	                            je 0x4004e10	      5628	buffer.c	FUNCTION_80
0x4004d97	            0x3c61	                            cmp al, 0x61	      5629	buffer.c	FUNCTION_80
0x4004d99	     0xf8481000000	                            je 0x4004e20	      5629	buffer.c	FUNCTION_80
0x4004d9f	            0x3c74	                            cmp al, 0x74	      5630	buffer.c	FUNCTION_80
0x4004da1	            0x747d	                            je 0x4004e20	      5630	buffer.c	FUNCTION_80
0x4004da3	    0x4883bf980000	               cmp qword [rdi + 0x98], 0	      5708	buffer.c	FUNCTION_84	IF_6
0x4004dab	     0xf84a7000000	                            je 0x4004e58	      5708	buffer.c	FUNCTION_84	IF_6
0x4004db1	            0x31c0	                            xor eax, eax	      5710	buffer.c	FUNCTION_84
0x4004db3	              0xc3	                                     ret	      5710	buffer.c	FUNCTION_84
0x4004db4	         0xf1f4000	                         nop dword [rax]	      5710	buffer.c	FUNCTION_84
0x4004db8	    0x488b15000000	            mov rdx, qword [0x04004dbf] 	      5768	buffer.c	FUNCTION_87	CALL_1
0x4004dbf	          0x4885d2	                           test rdx, rdx	      5768	buffer.c	FUNCTION_87	CALL_1
0x4004dc2	            0x743b	                            je 0x4004dff	      5768	buffer.c	FUNCTION_87	CALL_1
0x4004dc4	    0x488b0d000000	            mov rcx, qword [0x04004dcb] 	      5768	buffer.c	FUNCTION_87	CALL_1
0x4004dcb	    0x488b35000000	            mov rsi, qword [0x04004dd2] 	      5768	buffer.c	FUNCTION_87	CALL_1
0x4004dd2	          0x4839ca	                            cmp rdx, rcx	      5768	buffer.c	FUNCTION_87	CALL_1
0x4004dd5	     0xf84a5000000	                            je 0x4004e80	      5768	buffer.c	FUNCTION_87	CALL_1
0x4004ddb	        0x488b4220	            mov rax, qword [rdx + 0x20] 	      5768	buffer.c	FUNCTION_87	CALL_1
0x4004ddf	            0xeb11	                           jmp 0x4004df2	      5768	buffer.c	FUNCTION_87	CALL_1
0x4004de1	     0xf1f80000000	                         nop dword [rax]	      5768	buffer.c	FUNCTION_87	CALL_1
0x4004de8	        0x483b7808	                cmp rdi, qword [rax + 8]	      5769	buffer.c	FUNCTION_87	IF_1
0x4004dec	            0x744a	                            je 0x4004e38	      5769	buffer.c	FUNCTION_87	IF_1
0x4004dee	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5768	buffer.c	FUNCTION_87	CALL_1
0x4004df2	          0x4885c0	                           test rax, rax	      5768	buffer.c	FUNCTION_87	CALL_1
0x4004df5	            0x75f1	                           jne 0x4004de8	      5768	buffer.c	FUNCTION_87	CALL_1
0x4004df7	          0x488b12	                    mov rdx, qword [rdx]	      5768	buffer.c	FUNCTION_87	CALL_1
0x4004dfa	          0x4885d2	                           test rdx, rdx	      5768	buffer.c	FUNCTION_87	CALL_1
0x4004dfd	            0x75d3	                           jne 0x4004dd2	      5768	buffer.c	FUNCTION_87	CALL_1
0x4004dff	      0xba05000000	                              mov edx, 5	      5691	buffer.c	FUNCTION_84	IF_1	CALL_4
0x4004e04	      0xbe00000000	                              mov esi, 0	      5691	buffer.c	FUNCTION_84	IF_1	CALL_4
0x4004e09	            0x31ff	                            xor edi, edi	      5691	buffer.c	FUNCTION_84	IF_1	CALL_4
0x4004e0b	      0xe900000000	                           jmp 0x4004e10	      5691	buffer.c	FUNCTION_84	IF_1	CALL_4
0x4004e10	        0x807a0266	                cmp byte [rdx + 2], 0x66	      5628	buffer.c	FUNCTION_80
0x4004e14	            0x758d	                           jne 0x4004da3	      5628	buffer.c	FUNCTION_80
0x4004e16	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5628	buffer.c	FUNCTION_80
0x4004e20	    0x488b87481c00	          mov rax, qword [rdi + 0x1c48] 	      5700	buffer.c	FUNCTION_84	IF_3	IF_4
0x4004e27	          0x4885c0	                           test rax, rax	      5700	buffer.c	FUNCTION_84	IF_3	IF_4
0x4004e2a	            0x743d	                            je 0x4004e69	      5700	buffer.c	FUNCTION_84	IF_3	IF_4
0x4004e2c	          0x4889c7	                            mov rdi, rax	      5701	buffer.c	FUNCTION_84	IF_3	CALL_6
0x4004e2f	      0xe900000000	                           jmp 0x4004e34	      5701	buffer.c	FUNCTION_84	IF_3	CALL_6
0x4004e34	         0xf1f4000	                         nop dword [rax]	      5701	buffer.c	FUNCTION_84	IF_3	CALL_6
0x4004e38	    0x4883b8501900	             cmp qword [rax + 0x1950], 0	      5688	buffer.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x4004e40	            0x74bd	                            je 0x4004dff	      5688	buffer.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x4004e42	      0xba05000000	                              mov edx, 5	      5689	buffer.c	FUNCTION_84	IF_1	CALL_3
0x4004e47	      0xbe00000000	                              mov esi, 0	      5689	buffer.c	FUNCTION_84	IF_1	CALL_3
0x4004e4c	            0x31ff	                            xor edi, edi	      5689	buffer.c	FUNCTION_84	IF_1	CALL_3
0x4004e4e	      0xe900000000	                           jmp 0x4004e53	      5689	buffer.c	FUNCTION_84	IF_1	CALL_3
0x4004e53	       0xf1f440000	                   nop dword [rax + rax]	      5689	buffer.c	FUNCTION_84	IF_1	CALL_3
0x4004e58	      0xba05000000	                              mov edx, 5	      5709	buffer.c	FUNCTION_84	CALL_8
0x4004e5d	      0xbe00000000	                              mov esi, 0	      5709	buffer.c	FUNCTION_84	CALL_8
0x4004e62	            0x31ff	                            xor edi, edi	      5709	buffer.c	FUNCTION_84	CALL_8
0x4004e64	      0xe900000000	                           jmp 0x4004e69	      5709	buffer.c	FUNCTION_84	CALL_8
0x4004e69	    0x488b87980000	            mov rax, qword [rdi + 0x98] 	      5703	buffer.c	FUNCTION_84	IF_3	IF_5
0x4004e70	          0x4885c0	                           test rax, rax	      5703	buffer.c	FUNCTION_84	IF_3	IF_5
0x4004e73	            0x7413	                            je 0x4004e88	      5703	buffer.c	FUNCTION_84	IF_3	IF_5
0x4004e75	            0xf3c3	                                     ret	      5711	buffer.c	FUNCTION_84
0x4004e77	    0x660f1f840000	                    nop word [rax + rax]	      5711	buffer.c	FUNCTION_84
0x4004e80	          0x4889f0	                            mov rax, rsi	      5768	buffer.c	FUNCTION_87	CALL_1
0x4004e83	      0xe96affffff	                           jmp 0x4004df2	      5768	buffer.c	FUNCTION_87	CALL_1
0x4004e88	      0xba05000000	                              mov edx, 5	      5705	buffer.c	FUNCTION_84	IF_3	CALL_7
0x4004e8d	      0xbe00000000	                              mov esi, 0	      5705	buffer.c	FUNCTION_84	IF_3	CALL_7
0x4004e92	            0x31ff	                            xor edi, edi	      5705	buffer.c	FUNCTION_84	IF_3	CALL_7
0x4004e94	      0xe900000000	                           jmp 0x4004e99	      5705	buffer.c	FUNCTION_84	IF_3	CALL_7
set_buflisted	FOR,0:WHILE,0:DO,0:ELSE,1:functions,0:CALL,2:SWITCH,0:IF,2	16
0x400c720	    0x4c8b05000000	              mov r8, qword [0x0400c727]	      6153	buffer.c	FUNCTION_101	IF_1
0x400c727	    0x4139b8241400	           cmp dword [r8 + 0x1424], edi 	      6153	buffer.c	FUNCTION_101	IF_1
0x400c72e	            0x7430	                            je 0x400c760	      6153	buffer.c	FUNCTION_101	IF_1
0x400c730	            0x31c9	                            xor ecx, ecx	      6157	buffer.c	FUNCTION_101	IF_1	CALL_1
0x400c732	            0x31d2	                            xor edx, edx	      6157	buffer.c	FUNCTION_101	IF_1	CALL_1
0x400c734	            0x31f6	                            xor esi, esi	      6157	buffer.c	FUNCTION_101	IF_1	CALL_1
0x400c736	            0x85ff	                           test edi, edi	      6156	buffer.c	FUNCTION_101	IF_1	IF_2
0x400c738	    0x4189b8241400	           mov dword [r8 + 0x1424], edi 	      6155	buffer.c	FUNCTION_101	IF_1
0x400c73f	            0x750f	                           jne 0x400c750	      6156	buffer.c	FUNCTION_101	IF_1	IF_2
0x400c741	      0xbf01000000	                              mov edi, 1	      6159	buffer.c	FUNCTION_101	IF_1	CALL_2
0x400c746	      0xe900000000	                           jmp 0x400c74b	      6159	buffer.c	FUNCTION_101	IF_1	CALL_2
0x400c74b	       0xf1f440000	                   nop dword [rax + rax]	      6159	buffer.c	FUNCTION_101	IF_1	CALL_2
0x400c750	            0x31ff	                            xor edi, edi	      6157	buffer.c	FUNCTION_101	IF_1	CALL_1
0x400c752	      0xe900000000	                           jmp 0x400c757	      6157	buffer.c	FUNCTION_101	IF_1	CALL_1
0x400c757	    0x660f1f840000	                    nop word [rax + rax]	      6157	buffer.c	FUNCTION_101	IF_1	CALL_1
0x400c760	            0xf3c3	                                     ret	      6157	buffer.c	FUNCTION_101	IF_1	CALL_1
no_write_message_nobang	FOR,0:WHILE,0:DO,0:ELSE,1:functions,0:CALL,5:SWITCH,0:IF,1	13
0x4000bc0	        0x4883ec08	                              sub rsp, 8	      1829	buffer.c	FUNCTION_24
0x4000bc4	    0x488bbf481c00	          mov rdi, qword [rdi + 0x1c48] 	      1831	buffer.c	FUNCTION_24	IF_1	CALL_1
0x4000bcb	      0xe800000000	                          call 0x4000bd0	      1831	buffer.c	FUNCTION_24	IF_1	CALL_1
0x4000bd0	            0x85c0	                           test eax, eax	      1831	buffer.c	FUNCTION_24	IF_1	CALL_1
0x4000bd2	      0xba05000000	                              mov edx, 5	      1832	buffer.c	FUNCTION_24	CALL_3
0x4000bd7	      0xbe00000000	                              mov esi, 0	      1832	buffer.c	FUNCTION_24	CALL_3
0x4000bdc	            0x7505	                           jne 0x4000be3	      1831	buffer.c	FUNCTION_24	IF_1	CALL_1
0x4000bde	      0xbe00000000	                              mov esi, 0	      1835	buffer.c	FUNCTION_24	CALL_5
0x4000be3	            0x31ff	                            xor edi, edi	      1835	buffer.c	FUNCTION_24	CALL_5
0x4000be5	      0xe800000000	                          call 0x4000bea	      1835	buffer.c	FUNCTION_24	CALL_5
0x4000bea	        0x4883c408	                              add rsp, 8	      1836	buffer.c	FUNCTION_24
0x4000bee	          0x4889c7	                            mov rdi, rax	      1835	buffer.c	FUNCTION_24	CALL_5
0x4000bf1	      0xe900000000	                           jmp 0x4000bf6	      1835	buffer.c	FUNCTION_24	CALL_5
set_curbuf	FOR,0:WHILE,0:DO,0:ELSE,0:functions,0:CALL,22:SWITCH,0:IF,10	215
0x4009260	            0x4157	                                push r15	      1619	buffer.c	FUNCTION_20
0x4009262	            0x4156	                                push r14	      1619	buffer.c	FUNCTION_20
0x4009264	          0x4989ff	                            mov r15, rdi	      1619	buffer.c	FUNCTION_20
0x4009267	            0x4155	                                push r13	      1619	buffer.c	FUNCTION_20
0x4009269	            0x4154	                                push r12	      1619	buffer.c	FUNCTION_20
0x400926b	              0x55	                                push rbp	      1619	buffer.c	FUNCTION_20
0x400926c	              0x53	                                push rbx	      1619	buffer.c	FUNCTION_20
0x400926d	            0x89f5	                            mov ebp, esi	      1619	buffer.c	FUNCTION_20
0x400926f	        0x4883ec18	                           sub rsp, 0x18	      1619	buffer.c	FUNCTION_20
0x4009273	    0x488b05000000	            mov rax, qword [0x0400927a] 	      1624	buffer.c	FUNCTION_20
0x400927a	    0x488b80b81500	          mov rax, qword [rax + 0x15b8] 	      1624	buffer.c	FUNCTION_20
0x4009281	        0x48890424	                    mov qword [rsp], rax	      1624	buffer.c	FUNCTION_20
0x4009285	      0xe800000000	                          call 0x400928a	      1629	buffer.c	FUNCTION_20	CALL_1
0x400928a	    0x448b05000000	            mov r8d, dword [0x04009291] 	      1630	buffer.c	FUNCTION_20	IF_1
0x4009291	    0x488b35000000	            mov rsi, qword [0x04009298] 	      1631	buffer.c	FUNCTION_20	IF_1
0x4009298	    0x488b3d000000	            mov rdi, qword [0x0400929f] 	      1631	buffer.c	FUNCTION_20	IF_1
0x400929f	          0x4585c0	                           test r8d, r8d	      1630	buffer.c	FUNCTION_20	IF_1
0x40092a2	            0x750c	                           jne 0x40092b0	      1630	buffer.c	FUNCTION_20	IF_1
0x40092a4	    0x8b87b8000000	            mov eax, dword [rdi + 0xb8] 	      1631	buffer.c	FUNCTION_20	IF_1
0x40092aa	    0x898678010000	            mov dword [rsi + 0x178], eax	      1631	buffer.c	FUNCTION_20	IF_1
0x40092b0	          0x8b4e40	            mov ecx, dword [rsi + 0x40] 	      3297	buffer.c	FUNCTION_54	CALL_1
0x40092b3	        0x488b5638	            mov rdx, qword [rsi + 0x38] 	      3297	buffer.c	FUNCTION_54	CALL_1
0x40092b7	    0x4881c7280100	                          add rdi, 0x128	      3297	buffer.c	FUNCTION_54	CALL_1
0x40092be	    0x41b801000000	                              mov r8d, 1	      3297	buffer.c	FUNCTION_54	CALL_1
0x40092c4	      0xe81771ffff	         call sym.buflist_setfpos.isra.5	      3297	buffer.c	FUNCTION_54	CALL_1
0x40092c9	    0x4c8b25000000	            mov r12, qword [0x040092d0] 	      1639	buffer.c	FUNCTION_20
0x40092d0	    0xc70500000000	               mov dword [0x040092da], 0	      1635	buffer.c	FUNCTION_20
0x40092da	          0x4d85e4	                           test r12, r12	       362	buffer.c	FUNCTION_3
0x40092dd	     0xf844d020000	                            je 0x4009530	       362	buffer.c	FUNCTION_3
0x40092e3	          0x4d85ff	                           test r15, r15	       362	buffer.c	FUNCTION_3
0x40092e6	    0x458bac24b800	           mov r13d, dword [r12 + 0xb8] 	       362	buffer.c	FUNCTION_3
0x40092ee	    0x8b1d00000000	            mov ebx, dword [0x040092f4] 	       363	buffer.c	FUNCTION_3
0x40092f4	     0xf844e020000	                            je 0x4009548	       362	buffer.c	FUNCTION_3
0x40092fa	    0x458bb7b80000	           mov r14d, dword [r15 + 0xb8] 	       362	buffer.c	FUNCTION_3
0x4009301	            0x31c9	                            xor ecx, ecx	      1645	buffer.c	FUNCTION_20	IF_2	CALL_5
0x4009303	            0x31d2	                            xor edx, edx	      1645	buffer.c	FUNCTION_20	IF_2	CALL_5
0x4009305	            0x31f6	                            xor esi, esi	      1645	buffer.c	FUNCTION_20	IF_2	CALL_5
0x4009307	          0x4d89e0	                             mov r8, r12	      1645	buffer.c	FUNCTION_20	IF_2	CALL_5
0x400930a	      0xbf06000000	                              mov edi, 6	      1645	buffer.c	FUNCTION_20	IF_2	CALL_5
0x400930f	      0xe800000000	                          call 0x4009314	      1645	buffer.c	FUNCTION_20	IF_2	CALL_5
0x4009314	            0x85c0	                           test eax, eax	      1645	buffer.c	FUNCTION_20	IF_2	CALL_5
0x4009316	            0x7568	                           jne 0x4009380	      1645	buffer.c	FUNCTION_20	IF_2	CALL_5
0x4009318	    0x488b3d000000	            mov rdi, qword [0x0400931f] 	      1654	buffer.c	FUNCTION_20	IF_2	IF_3
0x400931f	        0x4c3b6708	                cmp r12, qword [rdi + 8]	      1654	buffer.c	FUNCTION_20	IF_2	IF_3
0x4009323	     0xf8487020000	                            je 0x40095b0	      1654	buffer.c	FUNCTION_20	IF_2	IF_3
0x4009329	        0x448d75fe	                     lea r14d, [rbp - 2]	      1622	buffer.c	FUNCTION_20
0x400932d	        0x4183fe02	                             cmp r14d, 2	      1657	buffer.c	FUNCTION_20	IF_2	IF_4
0x4009331	     0xf86c1010000	                           jbe 0x40094f8	      1657	buffer.c	FUNCTION_20	IF_2	IF_4
0x4009337	    0x3b1d00000000	            cmp ebx, dword [0x0400933d] 	       377	buffer.c	FUNCTION_4	CALL_1
0x400933d	     0xf8417010000	                            je 0x400945a	       377	buffer.c	FUNCTION_4	CALL_1
0x4009343	    0x488b05000000	            mov rax, qword [0x0400934a] 	       392	buffer.c	FUNCTION_5	FOR_1
0x400934a	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x400934d	     0xf847d010000	                            je 0x40094d0	       392	buffer.c	FUNCTION_5	FOR_1
0x4009353	          0x4939c4	                            cmp r12, rax	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4009356	     0xf84f4000000	                            je 0x4009450	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x400935c	          0x4889c2	                            mov rdx, rax	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x400935f	            0xeb10	                           jmp 0x4009371	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4009361	     0xf1f80000000	                         nop dword [rax]	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4009368	          0x4939d4	                            cmp r12, rdx	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x400936b	     0xf84df000000	                            je 0x4009450	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x4009371	        0x488b5270	            mov rdx, qword [rdx + 0x70] 	       392	buffer.c	FUNCTION_5	FOR_1
0x4009375	          0x4885d2	                           test rdx, rdx	       392	buffer.c	FUNCTION_5	FOR_1
0x4009378	            0x75ee	                           jne 0x4009368	       392	buffer.c	FUNCTION_5	FOR_1
0x400937a	            0xeb79	                           jmp 0x40093f5	       392	buffer.c	FUNCTION_5	FOR_1
0x400937c	         0xf1f4000	                         nop dword [rax]	       392	buffer.c	FUNCTION_5	FOR_1
0x4009380	    0x3b1d00000000	            cmp ebx, dword [0x04009386] 	       377	buffer.c	FUNCTION_4	CALL_1
0x4009386	     0xf8494010000	                            je 0x4009520	       377	buffer.c	FUNCTION_4	CALL_1
0x400938c	    0x488b05000000	            mov rax, qword [0x04009393] 	       392	buffer.c	FUNCTION_5	FOR_1
0x4009393	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x4009396	     0xf8434010000	                            je 0x40094d0	       392	buffer.c	FUNCTION_5	FOR_1
0x400939c	          0x4939c4	                            cmp r12, rax	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x400939f	            0x7415	                            je 0x40093b6	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x40093a1	          0x4889c2	                            mov rdx, rax	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x40093a4	         0xf1f4000	                         nop dword [rax]	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x40093a8	        0x488b5270	            mov rdx, qword [rdx + 0x70] 	       392	buffer.c	FUNCTION_5	FOR_1
0x40093ac	          0x4885d2	                           test rdx, rdx	       392	buffer.c	FUNCTION_5	FOR_1
0x40093af	            0x7444	                            je 0x40093f5	       392	buffer.c	FUNCTION_5	FOR_1
0x40093b1	          0x4939d4	                            cmp r12, rdx	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x40093b4	            0x75f2	                           jne 0x40093a8	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x40093b6	    0x4539ac24b800	           cmp dword [r12 + 0xb8], r13d 	       378	buffer.c	FUNCTION_4
0x40093be	            0x7535	                           jne 0x40093f5	       378	buffer.c	FUNCTION_4
0x40093c0	          0x4939c7	                            cmp r15, rax	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x40093c3	     0xf844a010000	                            je 0x4009513	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x40093c9	          0x4889c2	                            mov rdx, rax	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x40093cc	            0xeb0b	                           jmp 0x40093d9	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x40093ce	            0x6690	                                     nop	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x40093d0	          0x4939d7	                            cmp r15, rdx	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x40093d3	     0xf843a010000	                            je 0x4009513	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x40093d9	        0x488b5270	            mov rdx, qword [rdx + 0x70] 	       392	buffer.c	FUNCTION_5	FOR_1
0x40093dd	          0x4885d2	                           test rdx, rdx	       392	buffer.c	FUNCTION_5	FOR_1
0x40093e0	            0x75ee	                           jne 0x40093d0	       392	buffer.c	FUNCTION_5	FOR_1
0x40093e2	    0x660f1f440000	                    nop word [rax + rax]	       392	buffer.c	FUNCTION_5	FOR_1
0x40093e8	        0x488b4070	            mov rax, qword [rax + 0x70] 	       392	buffer.c	FUNCTION_5	FOR_1
0x40093ec	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x40093ef	     0xf84db000000	                            je 0x40094d0	       392	buffer.c	FUNCTION_5	FOR_1
0x40093f5	          0x4939c7	                            cmp r15, rax	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x40093f8	            0x75ee	                           jne 0x40093e8	       393	buffer.c	FUNCTION_5	FOR_1	IF_1
0x40093fa	    0x4c3b3d000000	            cmp r15, qword [0x04009401] 	      1680	buffer.c	FUNCTION_20	IF_9	CALL_19
0x4009401	     0xf84c9000000	                            je 0x40094d0	      1680	buffer.c	FUNCTION_20	IF_9	CALL_19
0x4009407	      0xe800000000	                          call 0x400940c	      1682	buffer.c	FUNCTION_20	IF_9	CALL_20
0x400940c	            0x85c0	                           test eax, eax	      1682	buffer.c	FUNCTION_20	IF_9	CALL_20
0x400940e	     0xf85bc000000	                           jne 0x40094d0	      1682	buffer.c	FUNCTION_20	IF_9	CALL_20
0x4009414	          0x4c89ff	                            mov rdi, r15	      1686	buffer.c	FUNCTION_20	IF_9	CALL_21
0x4009417	      0xe800000000	                          call 0x400941c	      1686	buffer.c	FUNCTION_20	IF_9	CALL_21
0x400941c	    0x488b05000000	            mov rax, qword [0x04009423] 	      1688	buffer.c	FUNCTION_20	IF_9	IF_10
0x4009423	        0x488b1c24	                    mov rbx, qword [rsp]	      1688	buffer.c	FUNCTION_20	IF_9	IF_10
0x4009427	    0x483b98b81500	          cmp rbx, qword [rax + 0x15b8] 	      1688	buffer.c	FUNCTION_20	IF_9	IF_10
0x400942e	     0xf84ae000000	                            je 0x40094e2	      1688	buffer.c	FUNCTION_20	IF_9	IF_10
0x4009434	    0x488b3d000000	            mov rdi, qword [0x0400943b] 	      1689	buffer.c	FUNCTION_20	IF_9	CALL_22
0x400943b	        0x4883c418	                           add rsp, 0x18	      1692	buffer.c	FUNCTION_20
0x400943f	              0x5b	                                 pop rbx	      1692	buffer.c	FUNCTION_20
0x4009440	              0x5d	                                 pop rbp	      1692	buffer.c	FUNCTION_20
0x4009441	            0x415c	                                 pop r12	      1692	buffer.c	FUNCTION_20
0x4009443	            0x415d	                                 pop r13	      1692	buffer.c	FUNCTION_20
0x4009445	            0x415e	                                 pop r14	      1692	buffer.c	FUNCTION_20
0x4009447	            0x415f	                                 pop r15	      1692	buffer.c	FUNCTION_20
0x4009449	      0xe900000000	                           jmp 0x400944e	      1689	buffer.c	FUNCTION_20	IF_9	CALL_22
0x400944e	            0x6690	                                     nop	      1689	buffer.c	FUNCTION_20	IF_9	CALL_22
0x4009450	    0x453bac24b800	           cmp r13d, dword [r12 + 0xb8] 	       378	buffer.c	FUNCTION_4
0x4009458	            0x759b	                           jne 0x40093f5	       378	buffer.c	FUNCTION_4
0x400945a	      0xe800000000	                          call 0x400945f	      1660	buffer.c	FUNCTION_20	IF_2	IF_5	CALL_12
0x400945f	            0x85c0	                           test eax, eax	      1660	buffer.c	FUNCTION_20	IF_2	IF_5	CALL_12
0x4009461	            0x89c2	                            mov edx, eax	      1660	buffer.c	FUNCTION_20	IF_2	IF_5	CALL_12
0x4009463	            0x755b	                           jne 0x40094c0	      1660	buffer.c	FUNCTION_20	IF_2	IF_5	CALL_12
0x4009465	    0x4c3b25000000	            cmp r12, qword [0x0400946c] 	      1666	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_7
0x400946c	    0x488b1d000000	            mov rbx, qword [0x04009473] 	      1665	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6
0x4009473	     0xf8447010000	                            je 0x40095c0	      1666	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_7
0x4009479	        0x4183fe02	                             cmp r14d, 2	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x400947d	     0xf87cd000000	                            ja 0x4009550	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x4009483	            0x89ea	                            mov edx, ebp	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x4009485	    0x488b3d000000	            mov rdi, qword [0x0400948c] 	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x400948c	      0xb800000000	                              mov eax, 0	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x4009491	          0x4c89e6	                            mov rsi, r12	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x4009494	        0x4c3b6708	                cmp r12, qword [rdi + 8]	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x4009498	        0x480f45f8	                         cmovne rdi, rax	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x400949c	            0x31c9	                            xor ecx, ecx	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x400949e	      0xe800000000	                          call 0x40094a3	      1668	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_15
0x40094a3	    0x483b1d000000	            cmp rbx, qword [0x040094aa] 	      1672	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_8	CALL_18
0x40094aa	            0x7414	                            je 0x40094c0	      1672	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_8	CALL_18
0x40094ac	          0x4889df	                            mov rdi, rbx	      1672	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_8	CALL_18
0x40094af	      0xe800000000	                          call 0x40094b4	      1672	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_8	CALL_18
0x40094b4	            0x85c0	                           test eax, eax	      1672	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_8	CALL_18
0x40094b6	            0x7408	                            je 0x40094c0	      1672	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_8	CALL_18
0x40094b8	    0x48891d000000	            mov qword [0x040094bf], rbx 	      1674	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_8
0x40094bf	              0x90	                                     nop	      1674	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	IF_8
0x40094c0	    0x488b05000000	            mov rax, qword [0x040094c7] 	       392	buffer.c	FUNCTION_5	FOR_1
0x40094c7	          0x4885c0	                           test rax, rax	       392	buffer.c	FUNCTION_5	FOR_1
0x40094ca	     0xf8525ffffff	                           jne 0x40093f5	       392	buffer.c	FUNCTION_5	FOR_1
0x40094d0	    0x488b05000000	            mov rax, qword [0x040094d7] 	      1684	buffer.c	FUNCTION_20	IF_9
0x40094d7	      0x4883780800	                  cmp qword [rax + 8], 0	      1684	buffer.c	FUNCTION_20	IF_9
0x40094dc	     0xf8432ffffff	                            je 0x4009414	      1684	buffer.c	FUNCTION_20	IF_9
0x40094e2	        0x4883c418	                           add rsp, 0x18	      1692	buffer.c	FUNCTION_20
0x40094e6	              0x5b	                                 pop rbx	      1692	buffer.c	FUNCTION_20
0x40094e7	              0x5d	                                 pop rbp	      1692	buffer.c	FUNCTION_20
0x40094e8	            0x415c	                                 pop r12	      1692	buffer.c	FUNCTION_20
0x40094ea	            0x415d	                                 pop r13	      1692	buffer.c	FUNCTION_20
0x40094ec	            0x415e	                                 pop r14	      1692	buffer.c	FUNCTION_20
0x40094ee	            0x415f	                                 pop r15	      1692	buffer.c	FUNCTION_20
0x40094f0	              0xc3	                                     ret	      1692	buffer.c	FUNCTION_20
0x40094f1	     0xf1f80000000	                         nop dword [rax]	      1692	buffer.c	FUNCTION_20
0x40094f8	            0x31f6	                            xor esi, esi	      1658	buffer.c	FUNCTION_20	IF_2	CALL_10
0x40094fa	          0x4c89e7	                            mov rdi, r12	      1658	buffer.c	FUNCTION_20	IF_2	CALL_10
0x40094fd	      0xe800000000	                          call 0x4009502	      1658	buffer.c	FUNCTION_20	IF_2	CALL_10
0x4009502	    0x3b1d00000000	            cmp ebx, dword [0x04009508] 	       377	buffer.c	FUNCTION_4	CALL_1
0x4009508	     0xf8535feffff	                           jne 0x4009343	       377	buffer.c	FUNCTION_4	CALL_1
0x400950e	      0xe947ffffff	                           jmp 0x400945a	       377	buffer.c	FUNCTION_4	CALL_1
0x4009513	    0x453bb7b80000	           cmp r14d, dword [r15 + 0xb8] 	       378	buffer.c	FUNCTION_4
0x400951a	     0xf85d5feffff	                           jne 0x40093f5	       378	buffer.c	FUNCTION_4
0x4009520	      0xe800000000	                          call 0x4009525	      1649	buffer.c	FUNCTION_20	IF_2	CALL_8
0x4009525	            0x85c0	                           test eax, eax	      1649	buffer.c	FUNCTION_20	IF_2	CALL_8
0x4009527	     0xf84ebfdffff	                            je 0x4009318	      1649	buffer.c	FUNCTION_20	IF_2	CALL_8
0x400952d	            0xeb91	                           jmp 0x40094c0	      1649	buffer.c	FUNCTION_20	IF_2	CALL_8
0x400952f	              0x90	                                     nop	      1649	buffer.c	FUNCTION_20	IF_2	CALL_8
0x4009530	          0x4531ed	                          xor r13d, r13d	       362	buffer.c	FUNCTION_3
0x4009533	          0x4d85ff	                           test r15, r15	       362	buffer.c	FUNCTION_3
0x4009536	    0x8b1d00000000	            mov ebx, dword [0x0400953c] 	       363	buffer.c	FUNCTION_3
0x400953c	     0xf85b8fdffff	                           jne 0x40092fa	       362	buffer.c	FUNCTION_3
0x4009542	    0x660f1f440000	                    nop word [rax + rax]	       362	buffer.c	FUNCTION_3
0x4009548	          0x4531f6	                          xor r14d, r14d	       362	buffer.c	FUNCTION_3
0x400954b	      0xe9b1fdffff	                           jmp 0x4009301	       362	buffer.c	FUNCTION_3
0x4009550	            0x85ed	                           test ebp, ebp	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x4009552	     0xf852dffffff	                           jne 0x4009485	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x4009558	    0x498b84241014	          mov rax, qword [r12 + 0x1410] 	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4009560	           0xfb600	                   movzx eax, byte [rax]	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4009563	            0x3c68	                            cmp al, 0x68	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4009565	     0xf841affffff	                            je 0x4009485	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400956b	            0x764d	                           jbe 0x40095ba	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400956d	            0x3c75	                            cmp al, 0x75	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x400956f	            0x7420	                            je 0x4009591	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4009571	            0x3c77	                            cmp al, 0x77	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4009573	            0x741c	                            je 0x4009591	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x4009575	    0x8b0d00000000	            mov ecx, dword [0x0400957b] 	      5668	buffer.c	FUNCTION_83
0x400957b	            0x85c9	                           test ecx, ecx	      5668	buffer.c	FUNCTION_83
0x400957d	     0xf8502ffffff	                           jne 0x4009485	      5668	buffer.c	FUNCTION_83
0x4009583	    0x8b0500000000	            mov eax, dword [0x04009589] 	      5668	buffer.c	FUNCTION_83
0x4009589	            0x85c0	                           test eax, eax	      5668	buffer.c	FUNCTION_83
0x400958b	     0xf85f4feffff	                           jne 0x4009485	      5668	buffer.c	FUNCTION_83
0x4009591	          0x4c89e7	                            mov rdi, r12	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x4009594	        0x8954240c	              mov dword [rsp + 0xc], edx	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x4009598	      0xe800000000	                          call 0x400959d	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x400959d	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x40095a1	            0x85c0	                           test eax, eax	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x40095a3	      0xb802000000	                              mov eax, 2	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x40095a8	           0xf44d0	                          cmove edx, eax	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x40095ab	      0xe9d5feffff	                           jmp 0x4009485	      1671	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_17
0x40095b0	      0xe800000000	                          call 0x40095b5	      1655	buffer.c	FUNCTION_20	IF_2	CALL_9
0x40095b5	      0xe96ffdffff	                           jmp 0x4009329	      1655	buffer.c	FUNCTION_20	IF_2	CALL_9
0x40095ba	            0x3c64	                            cmp al, 0x64	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x40095bc	            0x75b7	                           jne 0x4009575	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x40095be	            0xebd1	                           jmp 0x4009591	      5661	buffer.c	FUNCTION_83	SWITCH_1
0x40095c0	            0x31ff	                            xor edi, edi	      1667	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_14
0x40095c2	        0x8944240c	              mov dword [rsp + 0xc], eax	      1667	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_14
0x40095c6	      0xe800000000	                          call 0x40095cb	      1667	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_14
0x40095cb	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      1667	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_14
0x40095cf	      0xe9a5feffff	                           jmp 0x4009479	      1667	buffer.c	FUNCTION_20	IF_2	IF_5	IF_6	CALL_14
buf_delete_all_signs	FOR,0:WHILE,0:DO,0:ELSE,0:functions,0:CALL,2:SWITCH,0:IF,1	33
0x400c480	              0x55	                                push rbp	      6075	buffer.c	FUNCTION_98
0x400c481	              0x53	                                push rbx	      6075	buffer.c	FUNCTION_98
0x400c482	        0x4883ec08	                              sub rsp, 8	      6075	buffer.c	FUNCTION_98
0x400c486	    0x488b2d000000	            mov rbp, qword [0x0400c48d] 	      6078	buffer.c	FUNCTION_98	CALL_1
0x400c48d	          0x4885ed	                           test rbp, rbp	      6078	buffer.c	FUNCTION_98	CALL_1
0x400c490	            0x745f	                            je 0x400c4f1	      6078	buffer.c	FUNCTION_98	CALL_1
0x400c492	    0x660f1f440000	                    nop word [rax + rax]	      6078	buffer.c	FUNCTION_98	CALL_1
0x400c498	    0x488bbd201c00	          mov rdi, qword [rbp + 0x1c20] 	      6079	buffer.c	FUNCTION_98	IF_1
0x400c49f	          0x4885ff	                           test rdi, rdi	      6079	buffer.c	FUNCTION_98	IF_1
0x400c4a2	            0x7444	                            je 0x400c4e8	      6079	buffer.c	FUNCTION_98	IF_1
0x400c4a4	    0x48833d000000	               cmp qword [0x0400c4ac], 0	      6056	buffer.c	FUNCTION_97	IF_1
0x400c4ac	            0x7422	                            je 0x400c4d0	      6056	buffer.c	FUNCTION_97	IF_1
0x400c4ae	          0x4889ef	                            mov rdi, rbp	      6058	buffer.c	FUNCTION_97	IF_1	CALL_1
0x400c4b1	      0xbe28000000	                           mov esi, 0x28	      6058	buffer.c	FUNCTION_97	IF_1	CALL_1
0x400c4b6	      0xe800000000	                          call 0x400c4bb	      6058	buffer.c	FUNCTION_97	IF_1	CALL_1
0x400c4bb	      0xe800000000	                          call 0x400c4c0	      6059	buffer.c	FUNCTION_97	IF_1	CALL_2
0x400c4c0	    0x488bbd201c00	          mov rdi, qword [rbp + 0x1c20] 	      6062	buffer.c	FUNCTION_97	WHILE_1
0x400c4c7	          0x4885ff	                           test rdi, rdi	      6062	buffer.c	FUNCTION_97	WHILE_1
0x400c4ca	            0x741c	                            je 0x400c4e8	      6062	buffer.c	FUNCTION_97	WHILE_1
0x400c4cc	         0xf1f4000	                         nop dword [rax]	      6062	buffer.c	FUNCTION_97	WHILE_1
0x400c4d0	        0x488b5f18	            mov rbx, qword [rdi + 0x18] 	      6064	buffer.c	FUNCTION_97	WHILE_1
0x400c4d4	      0xe800000000	                          call 0x400c4d9	      6065	buffer.c	FUNCTION_97	WHILE_1	CALL_3
0x400c4d9	          0x4885db	                           test rbx, rbx	      6062	buffer.c	FUNCTION_97	WHILE_1
0x400c4dc	    0x48899d201c00	          mov qword [rbp + 0x1c20], rbx 	      6066	buffer.c	FUNCTION_97	WHILE_1
0x400c4e3	          0x4889df	                            mov rdi, rbx	      6066	buffer.c	FUNCTION_97	WHILE_1
0x400c4e6	            0x75e8	                           jne 0x400c4d0	      6062	buffer.c	FUNCTION_97	WHILE_1
0x400c4e8	        0x488b6d68	            mov rbp, qword [rbp + 0x68] 	      6078	buffer.c	FUNCTION_98	CALL_1
0x400c4ec	          0x4885ed	                           test rbp, rbp	      6078	buffer.c	FUNCTION_98	CALL_1
0x400c4ef	            0x75a7	                           jne 0x400c498	      6078	buffer.c	FUNCTION_98	CALL_1
0x400c4f1	        0x4883c408	                              add rsp, 8	      6081	buffer.c	FUNCTION_98
0x400c4f5	              0x5b	                                 pop rbx	      6081	buffer.c	FUNCTION_98
0x400c4f6	              0x5d	                                 pop rbp	      6081	buffer.c	FUNCTION_98
0x400c4f7	              0xc3	                                     ret	      6081	buffer.c	FUNCTION_98
sign_list_placed	FOR,1:WHILE,1:DO,0:ELSE,1:functions,0:CALL,13:SWITCH,0:IF,3	97
0x400c500	            0x4157	                                push r15	      6088	buffer.c	FUNCTION_99
0x400c502	            0x4156	                                push r14	      6088	buffer.c	FUNCTION_99
0x400c504	      0xba05000000	                              mov edx, 5	      6093	buffer.c	FUNCTION_99	CALL_2
0x400c509	            0x4155	                                push r13	      6088	buffer.c	FUNCTION_99
0x400c50b	            0x4154	                                push r12	      6088	buffer.c	FUNCTION_99
0x400c50d	          0x4989fe	                            mov r14, rdi	      6088	buffer.c	FUNCTION_99
0x400c510	              0x55	                                push rbp	      6088	buffer.c	FUNCTION_99
0x400c511	              0x53	                                push rbx	      6088	buffer.c	FUNCTION_99
0x400c512	      0xbe00000000	                              mov esi, 0	      6093	buffer.c	FUNCTION_99	CALL_2
0x400c517	            0x31ff	                            xor edi, edi	      6093	buffer.c	FUNCTION_99	CALL_2
0x400c519	          0x4d89f5	                            mov r13, r14	      6093	buffer.c	FUNCTION_99	CALL_2
0x400c51c	    0x4881ec182000	                         sub rsp, 0x2018	      6088	buffer.c	FUNCTION_99
0x400c523	    0x64488b042528	                mov rax, qword fs:[0x28]	      6088	buffer.c	FUNCTION_99
0x400c52c	    0x488984240820	          mov qword [rsp + 0x2008], rax 	      6088	buffer.c	FUNCTION_99
0x400c534	            0x31c0	                            xor eax, eax	      6088	buffer.c	FUNCTION_99
0x400c536	      0xe800000000	                          call 0x400c53b	      6093	buffer.c	FUNCTION_99	CALL_2
0x400c53b	          0x4889c7	                            mov rdi, rax	      6093	buffer.c	FUNCTION_99	CALL_2
0x400c53e	      0xe800000000	                          call 0x400c543	      6093	buffer.c	FUNCTION_99	CALL_2
0x400c543	      0xbf0a000000	                            mov edi, 0xa	      6094	buffer.c	FUNCTION_99	CALL_3
0x400c548	      0xe800000000	                          call 0x400c54d	      6094	buffer.c	FUNCTION_99	CALL_3
0x400c54d	          0x4d85f6	                           test r14, r14	      6095	buffer.c	FUNCTION_99	IF_1
0x400c550	     0xf8414010000	                            je 0x400c66a	      6095	buffer.c	FUNCTION_99	IF_1
0x400c556	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      6095	buffer.c	FUNCTION_99	IF_1
0x400c560	    0x8b0500000000	            mov eax, dword [0x0400c566] 	      6099	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0x400c566	            0x85c0	                           test eax, eax	      6099	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0x400c568	     0xf85d7000000	                           jne 0x400c645	      6099	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0x400c56e	    0x4983bd201c00	             cmp qword [r13 + 0x1c20], 0	      6101	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2
0x400c576	     0xf84b7000000	                            je 0x400c633	      6101	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2
0x400c57c	    0x498b9d980000	            mov rbx, qword [r13 + 0x98] 	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0x400c583	            0x31ff	                            xor edi, edi	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0x400c585	      0xba05000000	                              mov edx, 5	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0x400c58a	      0xbe00000000	                              mov esi, 0	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0x400c58f	      0xe800000000	                          call 0x400c594	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0x400c594	          0x4889d9	                            mov rcx, rbx	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0x400c597	          0x4889c2	                            mov rdx, rax	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0x400c59a	      0xbe00200000	                         mov esi, 0x2000	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0x400c59f	          0x4889e7	                            mov rdi, rsp	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0x400c5a2	            0x31c0	                            xor eax, eax	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0x400c5a4	      0xe800000000	                          call 0x400c5a9	      6103	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_5
0x400c5a9	    0x8b3500000000	            mov esi, dword [0x0400c5af] 	      6104	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_7
0x400c5af	          0x4889e7	                            mov rdi, rsp	      6104	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_7
0x400c5b2	      0xe800000000	                          call 0x400c5b7	      6104	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_7
0x400c5b7	      0xbf0a000000	                            mov edi, 0xa	      6105	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_8
0x400c5bc	      0xe800000000	                          call 0x400c5c1	      6105	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_2	CALL_8
0x400c5c1	    0x498b9d201c00	          mov rbx, qword [r13 + 0x1c20] 	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0x400c5c8	          0x4885db	                           test rbx, rbx	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0x400c5cb	            0x755c	                           jne 0x400c629	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0x400c5cd	            0xeb64	                           jmp 0x400c633	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0x400c5cf	              0x90	                                     nop	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0x400c5d0	          0x8b7b10	            mov edi, dword [rbx + 0x10] 	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400c5d3	      0xe800000000	                          call 0x400c5d8	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400c5d8	          0x448b23	                   mov r12d, dword [rbx]	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400c5db	        0x488b6b08	                mov rbp, qword [rbx + 8]	      6110	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_11
0x400c5df	            0x31ff	                            xor edi, edi	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400c5e1	          0x4989c7	                            mov r15, rax	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400c5e4	      0xba05000000	                              mov edx, 5	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400c5e9	      0xbe00000000	                              mov esi, 0	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400c5ee	      0xe800000000	                          call 0x400c5f3	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400c5f3	          0x4d89f9	                             mov r9, r15	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400c5f6	          0x4889c2	                            mov rdx, rax	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400c5f9	          0x4589e0	                           mov r8d, r12d	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400c5fc	          0x4889e9	                            mov rcx, rbp	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400c5ff	      0xbe00200000	                         mov esi, 0x2000	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400c604	          0x4889e7	                            mov rdi, rsp	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400c607	            0x31c0	                            xor eax, eax	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400c609	      0xe800000000	                          call 0x400c60e	      6109	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_10
0x400c60e	          0x4889e7	                            mov rdi, rsp	      6111	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_12
0x400c611	      0xe800000000	                          call 0x400c616	      6111	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_12
0x400c616	      0xbf0a000000	                            mov edi, 0xa	      6112	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_13
0x400c61b	      0xe800000000	                          call 0x400c620	      6112	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1	CALL_13
0x400c620	        0x488b5b18	            mov rbx, qword [rbx + 0x18] 	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0x400c624	          0x4885db	                           test rbx, rbx	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0x400c627	            0x740a	                            je 0x400c633	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0x400c629	    0x8b0500000000	            mov eax, dword [0x0400c62f] 	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0x400c62f	            0x85c0	                           test eax, eax	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0x400c631	            0x749d	                            je 0x400c5d0	      6107	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	FOR_1
0x400c633	          0x4d85f6	                           test r14, r14	      6114	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_3
0x400c636	            0x750d	                           jne 0x400c645	      6114	buffer.c	FUNCTION_99	ELSE_1	WHILE_1	IF_3
0x400c638	        0x4d8b6d68	            mov r13, qword [r13 + 0x68] 	      6116	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0x400c63c	          0x4d85ed	                           test r13, r13	      6099	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0x400c63f	     0xf851bffffff	                           jne 0x400c560	      6099	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0x400c645	    0x488b84240820	          mov rax, qword [rsp + 0x2008] 	      6118	buffer.c	FUNCTION_99
0x400c64d	    0x644833042528	                xor rax, qword fs:[0x28]	      6118	buffer.c	FUNCTION_99
0x400c656	            0x7524	                           jne 0x400c67c	      6118	buffer.c	FUNCTION_99
0x400c658	    0x4881c4182000	                         add rsp, 0x2018	      6118	buffer.c	FUNCTION_99
0x400c65f	              0x5b	                                 pop rbx	      6118	buffer.c	FUNCTION_99
0x400c660	              0x5d	                                 pop rbp	      6118	buffer.c	FUNCTION_99
0x400c661	            0x415c	                                 pop r12	      6118	buffer.c	FUNCTION_99
0x400c663	            0x415d	                                 pop r13	      6118	buffer.c	FUNCTION_99
0x400c665	            0x415e	                                 pop r14	      6118	buffer.c	FUNCTION_99
0x400c667	            0x415f	                                 pop r15	      6118	buffer.c	FUNCTION_99
0x400c669	              0xc3	                                     ret	      6118	buffer.c	FUNCTION_99
0x400c66a	    0x4c8b2d000000	            mov r13, qword [0x0400c671] 	      6096	buffer.c	FUNCTION_99	IF_1
0x400c671	          0x4d85ed	                           test r13, r13	      6099	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0x400c674	     0xf85e6feffff	                           jne 0x400c560	      6099	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0x400c67a	            0xebc9	                           jmp 0x400c645	      6099	buffer.c	FUNCTION_99	ELSE_1	WHILE_1
0x400c67c	      0xe800000000	                          call 0x400c681	      6118	buffer.c	FUNCTION_99
buf_findsign_id	FOR,1:WHILE,0:DO,0:ELSE,0:functions,0:CALL,0:SWITCH,0:IF,1	18
0x400c340	    0x488b87201c00	          mov rax, qword [rdi + 0x1c20] 	      6001	buffer.c	FUNCTION_94	FOR_1
0x400c347	          0x4885c0	                           test rax, rax	      6001	buffer.c	FUNCTION_94	FOR_1
0x400c34a	            0x7427	                            je 0x400c373	      6001	buffer.c	FUNCTION_94	FOR_1
0x400c34c	        0x483b7008	                cmp rsi, qword [rax + 8]	      6002	buffer.c	FUNCTION_94	FOR_1	IF_1
0x400c350	            0x750c	                           jne 0x400c35e	      6002	buffer.c	FUNCTION_94	FOR_1	IF_1
0x400c352	            0xeb1c	                           jmp 0x400c370	      6002	buffer.c	FUNCTION_94	FOR_1	IF_1
0x400c354	         0xf1f4000	                         nop dword [rax]	      6002	buffer.c	FUNCTION_94	FOR_1	IF_1
0x400c358	        0x48397008	                cmp qword [rax + 8], rsi	      6002	buffer.c	FUNCTION_94	FOR_1	IF_1
0x400c35c	            0x7412	                            je 0x400c370	      6002	buffer.c	FUNCTION_94	FOR_1	IF_1
0x400c35e	        0x488b4018	            mov rax, qword [rax + 0x18] 	      6001	buffer.c	FUNCTION_94	FOR_1
0x400c362	          0x4885c0	                           test rax, rax	      6001	buffer.c	FUNCTION_94	FOR_1
0x400c365	            0x75f1	                           jne 0x400c358	      6001	buffer.c	FUNCTION_94	FOR_1
0x400c367	            0xf3c3	                                     ret	      6001	buffer.c	FUNCTION_94	FOR_1
0x400c369	     0xf1f80000000	                         nop dword [rax]	      6001	buffer.c	FUNCTION_94	FOR_1
0x400c370	            0x8b00	                    mov eax, dword [rax]	      6003	buffer.c	FUNCTION_94	FOR_1	IF_1
0x400c372	              0xc3	                                     ret	      6003	buffer.c	FUNCTION_94	FOR_1	IF_1
0x400c373	            0x31c0	                            xor eax, eax	      6005	buffer.c	FUNCTION_94
0x400c375	              0xc3	                                     ret	      6006	buffer.c	FUNCTION_94
getaltfname	FOR,0:WHILE,0:DO,0:ELSE,0:functions,0:CALL,3:SWITCH,0:IF,2	61
0x4003530	              0x55	                                push rbp	      3241	buffer.c	FUNCTION_51
0x4003531	              0x53	                                push rbx	      3241	buffer.c	FUNCTION_51
0x4003532	      0xba09000000	                              mov edx, 9	        33	stdio2.h	FUNCTION_116	CALL_1
0x4003537	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_116	CALL_1
0x400353c	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_116	CALL_1
0x4003541	            0x89fd	                            mov ebp, edi	      3241	buffer.c	FUNCTION_51
0x4003543	        0x4883ec28	                           sub rsp, 0x28	      3241	buffer.c	FUNCTION_51
0x4003547	    0x64488b042528	                mov rax, qword fs:[0x28]	      3241	buffer.c	FUNCTION_51
0x4003550	      0x4889442418	             mov qword [rsp + 0x18], rax	      3241	buffer.c	FUNCTION_51
0x4003555	            0x31c0	                            xor eax, eax	      3241	buffer.c	FUNCTION_51
0x4003557	    0x488b05000000	            mov rax, qword [0x0400355e] 	        33	stdio2.h	FUNCTION_116	CALL_1
0x400355e	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_116	CALL_1
0x4003561	    0x448b80780100	           mov r8d, dword [rax + 0x178] 	        33	stdio2.h	FUNCTION_116	CALL_1
0x4003568	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_116	CALL_1
0x400356a	      0xe800000000	                          call 0x400356f	        33	stdio2.h	FUNCTION_116	CALL_1
0x400356f	          0x4889e6	                            mov rsi, rsp	      2716	buffer.c	FUNCTION_37	CALL_1
0x4003572	      0xbf00000000	                              mov edi, 0	      2716	buffer.c	FUNCTION_37	CALL_1
0x4003577	      0xe800000000	                          call 0x400357c	      2716	buffer.c	FUNCTION_37	CALL_1
0x400357c	        0x488b5008	                mov rdx, qword [rax + 8]	      2718	buffer.c	FUNCTION_37	IF_2	CALL_2
0x4003580	    0x4881fa000000	                              cmp rdx, 0	      2718	buffer.c	FUNCTION_37	IF_2	CALL_2
0x4003587	            0x7467	                            je 0x40035f0	      2718	buffer.c	FUNCTION_37	IF_2	CALL_2
0x4003589	          0x4885d2	                           test rdx, rdx	      2718	buffer.c	FUNCTION_37	IF_2	CALL_2
0x400358c	            0x7462	                            je 0x40035f0	      2718	buffer.c	FUNCTION_37	IF_2	CALL_2
0x400358e	    0x4881fabc0000	                           cmp rdx, 0xbc	      3062	buffer.c	FUNCTION_46	IF_1
0x4003595	            0x7459	                            je 0x40035f0	      3062	buffer.c	FUNCTION_46	IF_1
0x4003597	        0x488b42dc	             mov rax, qword [rdx - 0x24]	      3062	buffer.c	FUNCTION_46	IF_1
0x400359b	          0x4885c0	                           test rax, rax	      3062	buffer.c	FUNCTION_46	IF_1
0x400359e	            0x7450	                            je 0x40035f0	      3062	buffer.c	FUNCTION_46	IF_1
0x40035a0	        0x488b526c	            mov rdx, qword [rdx + 0x6c] 	      3062	buffer.c	FUNCTION_46	IF_1
0x40035a4	          0x4885d2	                           test rdx, rdx	      2855	buffer.c	FUNCTION_41	FOR_1
0x40035a7	            0x7425	                            je 0x40035ce	      2855	buffer.c	FUNCTION_41	FOR_1
0x40035a9	    0x488b0d000000	            mov rcx, qword [0x040035b0] 	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x40035b0	        0x48394a10	            cmp qword [rdx + 0x10], rcx 	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x40035b4	            0x7418	                            je 0x40035ce	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x40035b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x40035c0	          0x488b12	                    mov rdx, qword [rdx]	      2855	buffer.c	FUNCTION_41	FOR_1
0x40035c3	          0x4885d2	                           test rdx, rdx	      2855	buffer.c	FUNCTION_41	FOR_1
0x40035c6	            0x7406	                            je 0x40035ce	      2855	buffer.c	FUNCTION_41	FOR_1
0x40035c8	        0x48394a10	            cmp qword [rdx + 0x10], rcx 	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x40035cc	            0x75f2	                           jne 0x40035c0	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x40035ce	          0x4889c3	                            mov rbx, rax	      2856	buffer.c	FUNCTION_41	FOR_1	IF_1
0x40035d1	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      3252	buffer.c	FUNCTION_51
0x40035d6	    0x644833342528	                xor rsi, qword fs:[0x28]	      3252	buffer.c	FUNCTION_51
0x40035df	          0x4889d8	                            mov rax, rbx	      3252	buffer.c	FUNCTION_51
0x40035e2	            0x752d	                           jne 0x4003611	      3252	buffer.c	FUNCTION_51
0x40035e4	        0x4883c428	                           add rsp, 0x28	      3252	buffer.c	FUNCTION_51
0x40035e8	              0x5b	                                 pop rbx	      3252	buffer.c	FUNCTION_51
0x40035e9	              0x5d	                                 pop rbp	      3252	buffer.c	FUNCTION_51
0x40035ea	              0xc3	                                     ret	      3252	buffer.c	FUNCTION_51
0x40035eb	       0xf1f440000	                   nop dword [rax + rax]	      3252	buffer.c	FUNCTION_51
0x40035f0	            0x31db	                            xor ebx, ebx	      3249	buffer.c	FUNCTION_51	IF_1
0x40035f2	            0x85ed	                           test ebp, ebp	      3247	buffer.c	FUNCTION_51	IF_1	IF_2
0x40035f4	            0x74db	                            je 0x40035d1	      3247	buffer.c	FUNCTION_51	IF_1	IF_2
0x40035f6	            0x31ff	                            xor edi, edi	      3248	buffer.c	FUNCTION_51	IF_1	CALL_3
0x40035f8	      0xba05000000	                              mov edx, 5	      3248	buffer.c	FUNCTION_51	IF_1	CALL_3
0x40035fd	      0xbe00000000	                              mov esi, 0	      3248	buffer.c	FUNCTION_51	IF_1	CALL_3
0x4003602	      0xe800000000	                          call 0x4003607	      3248	buffer.c	FUNCTION_51	IF_1	CALL_3
0x4003607	          0x4889c7	                            mov rdi, rax	      3248	buffer.c	FUNCTION_51	IF_1	CALL_3
0x400360a	      0xe800000000	                          call 0x400360f	      3248	buffer.c	FUNCTION_51	IF_1	CALL_3
0x400360f	            0xebc0	                           jmp 0x40035d1	      3248	buffer.c	FUNCTION_51	IF_1	CALL_3
0x4003611	      0xe800000000	                          call 0x4003616	      3252	buffer.c	FUNCTION_51
ExpandBufnames	FOR,2:WHILE,0:DO,0:ELSE,1:functions,1:CALL,11:SWITCH,0:IF,11	223
0x4002c30	            0x4157	                                push r15	      2558	buffer.c	FUNCTION_34
0x4002c32	            0x4156	                                push r14	      2558	buffer.c	FUNCTION_34
0x4002c34	          0x4889f8	                            mov rax, rdi	      2558	buffer.c	FUNCTION_34
0x4002c37	            0x4155	                                push r13	      2558	buffer.c	FUNCTION_34
0x4002c39	            0x4154	                                push r12	      2558	buffer.c	FUNCTION_34
0x4002c3b	          0x4989d7	                            mov r15, rdx	      2558	buffer.c	FUNCTION_34
0x4002c3e	              0x55	                                push rbp	      2558	buffer.c	FUNCTION_34
0x4002c3f	              0x53	                                push rbx	      2558	buffer.c	FUNCTION_34
0x4002c40	    0x4881ec080100	                          sub rsp, 0x108	      2558	buffer.c	FUNCTION_34
0x4002c47	    0xc70600000000	                      mov dword [rsi], 0	      2566	buffer.c	FUNCTION_34
0x4002c4d	    0x48c702000000	                      mov qword [rdx], 0	      2567	buffer.c	FUNCTION_34
0x4002c54	      0x48897c2430	             mov qword [rsp + 0x30], rdi	      2558	buffer.c	FUNCTION_34
0x4002c59	      0x4889742438	             mov qword [rsp + 0x38], rsi	      2558	buffer.c	FUNCTION_34
0x4002c5e	    0x64488b3c2528	                mov rdi, qword fs:[0x28]	      2558	buffer.c	FUNCTION_34
0x4002c67	    0x4889bc24f800	             mov qword [rsp + 0xf8], rdi	      2558	buffer.c	FUNCTION_34
0x4002c6f	            0x31ff	                            xor edi, edi	      2558	buffer.c	FUNCTION_34
0x4002c71	          0x80385e	                    cmp byte [rax], 0x5e	      2570	buffer.c	FUNCTION_34	IF_1
0x4002c74	      0x4889442420	             mov qword [rsp + 0x20], rax	      2570	buffer.c	FUNCTION_34	IF_1
0x4002c79	     0xf848d020000	                            je 0x4002f0c	      2570	buffer.c	FUNCTION_34	IF_1
0x4002c7f	          0x83e102	                              and ecx, 2	      2617	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	IF_4
0x4002c82	      0x4889442428	             mov qword [rsp + 0x28], rax	      2617	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	IF_4
0x4002c87	    0xc74424140000	               mov dword [rsp + 0x14], 0	      2585	buffer.c	FUNCTION_34	ELSE_1	FOR_1
0x4002c8f	        0x894c2410	             mov dword [rsp + 0x10], ecx	      2617	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	IF_4
0x4002c93	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      2591	buffer.c	FUNCTION_34	ELSE_1	FOR_1	CALL_5
0x4002c98	      0xbe01000000	                              mov esi, 1	      2591	buffer.c	FUNCTION_34	ELSE_1	FOR_1	CALL_5
0x4002c9d	      0xe800000000	                          call 0x4002ca2	      2591	buffer.c	FUNCTION_34	ELSE_1	FOR_1	CALL_5
0x4002ca2	          0x4885c0	                           test rax, rax	      2592	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_4
0x4002ca5	      0x4889442440	             mov qword [rsp + 0x40], rax	      2591	buffer.c	FUNCTION_34	ELSE_1	FOR_1	CALL_5
0x4002caa	     0xf84d4020000	                            je 0x4002f84	      2592	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_4
0x4002cb0	    0x4c8b35000000	            mov r14, qword [0x04002cb7] 	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x4002cb7	    0x41bd02000000	                             mov r13d, 2	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x4002cbd	          0x4d85f6	                           test r14, r14	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x4002cc0	     0xf84dd000000	                            je 0x4002da3	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x4002cc6	        0x418d45ff	                      lea eax, [r13 - 1]	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x4002cca	            0x31db	                            xor ebx, ebx	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x4002ccc	        0x8944240c	              mov dword [rsp + 0xc], eax	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x4002cd0	            0xeb13	                           jmp 0x4002ce5	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x4002cd2	    0x660f1f440000	                    nop word [rax + rax]	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x4002cd8	        0x4d8b7668	            mov r14, qword [r14 + 0x68] 	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x4002cdc	          0x4d85f6	                           test r14, r14	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x4002cdf	     0xf8491000000	                            je 0x4002d76	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x4002ce5	    0x418b96241400	          mov edx, dword [r14 + 0x1424] 	      2608	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_1
0x4002cec	            0x85d2	                           test edx, edx	      2608	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_1
0x4002cee	            0x74e8	                            je 0x4002cd8	      2608	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_1
0x4002cf0	    0x4d8ba6900000	            mov r12, qword [r14 + 0x90] 	      2608	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_1
0x4002cf7	    0x488b2d000000	            mov rbp, qword [0x04002cfe] 	      2610	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	CALL_1
0x4002cfe	          0x4d85e4	                           test r12, r12	      2685	buffer.c	FUNCTION_36	IF_1
0x4002d01	     0xf8461010000	                            je 0x4002e68	      2685	buffer.c	FUNCTION_36	IF_1
0x4002d07	    0x48833d000000	               cmp qword [0x04002d0f], 0	      2688	buffer.c	FUNCTION_36	IF_1
0x4002d0f	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      2689	buffer.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x4002d14	          0x4c89e6	                            mov rsi, r12	      2689	buffer.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x4002d17	           0xf95c2	                                setne dl	      2688	buffer.c	FUNCTION_36	IF_1
0x4002d1a	            0x85ed	                           test ebp, ebp	      2688	buffer.c	FUNCTION_36	IF_1
0x4002d1c	           0xf95c0	                                setne al	      2688	buffer.c	FUNCTION_36	IF_1
0x4002d1f	             0x9d0	                             or eax, edx	      2688	buffer.c	FUNCTION_36	IF_1
0x4002d21	            0x31d2	                            xor edx, edx	      2689	buffer.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x4002d23	           0xfb6c0	                           movzx eax, al	      2688	buffer.c	FUNCTION_36	IF_1
0x4002d26	    0x898424e80000	             mov dword [rsp + 0xe8], eax	      2688	buffer.c	FUNCTION_36	IF_1
0x4002d2d	      0xe800000000	                          call 0x4002d32	      2689	buffer.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x4002d32	            0x85c0	                           test eax, eax	      2689	buffer.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x4002d34	     0xf84e6000000	                            je 0x4002e20	      2689	buffer.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x4002d3a	      0x837c240c01	                cmp dword [rsp + 0xc], 1	      2613	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_2	IF_3
0x4002d3f	     0xf847b020000	                            je 0x4002fc0	      2613	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_2	IF_3
0x4002d45	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      2617	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	IF_4
0x4002d49	            0x85c0	                           test eax, eax	      2617	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	IF_4
0x4002d4b	     0xf84bf000000	                            je 0x4002e10	      2617	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	IF_4
0x4002d51	          0x4c89e6	                            mov rsi, r12	      2618	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	CALL_2
0x4002d54	          0x4c89f7	                            mov rdi, r14	      2618	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	CALL_2
0x4002d57	      0xe800000000	                          call 0x4002d5c	      2618	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	CALL_2
0x4002d5c	          0x498b17	                    mov rdx, qword [r15]	      2621	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2
0x4002d5f	          0x4863cb	                         movsxd rcx, ebx	      2621	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2
0x4002d62	          0x83c301	                              add ebx, 1	      2621	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2
0x4002d65	        0x488904ca	            mov qword [rdx + rcx*8], rax	      2621	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2
0x4002d69	        0x4d8b7668	            mov r14, qword [r14 + 0x68] 	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x4002d6d	          0x4d85f6	                           test r14, r14	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x4002d70	     0xf856fffffff	                           jne 0x4002ce5	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x4002d76	            0x85db	                           test ebx, ebx	      2625	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_6
0x4002d78	            0x7429	                            je 0x4002da3	      2625	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_6
0x4002d7a	      0x837c240c01	                cmp dword [rsp + 0xc], 1	      2627	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7
0x4002d7f	     0xf84dd010000	                            je 0x4002f62	      2627	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7
0x4002d85	        0x4183fd03	                             cmp r13d, 3	      2603	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x4002d89	     0xf8413020000	                            je 0x4002fa2	      2603	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x4002d8f	    0x4c8b35000000	            mov r14, qword [0x04002d96] 	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x4002d96	        0x4183c501	                             add r13d, 1	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x4002d9a	          0x4d85f6	                           test r14, r14	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x4002d9d	     0xf8523ffffff	                           jne 0x4002cc6	      2606	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2
0x4002da3	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      2639	buffer.c	FUNCTION_34	FOR_1	ELSE_1	CALL_10
0x4002da8	      0xe800000000	                          call 0x4002dad	      2639	buffer.c	FUNCTION_34	FOR_1	ELSE_1	CALL_10
0x4002dad	      0x8344241401	               add dword [rsp + 0x14], 1	      2585	buffer.c	FUNCTION_34	ELSE_1	FOR_1
0x4002db2	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      2585	buffer.c	FUNCTION_34	ELSE_1	FOR_1
0x4002db6	          0x83f802	                              cmp eax, 2	      2585	buffer.c	FUNCTION_34	ELSE_1	FOR_1
0x4002db9	     0xf8521010000	                           jne 0x4002ee0	      2585	buffer.c	FUNCTION_34	ELSE_1	FOR_1
0x4002dbf	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      2585	buffer.c	FUNCTION_34	ELSE_1	FOR_1
0x4002dc4	            0x31ed	                            xor ebp, ebp	      2585	buffer.c	FUNCTION_34	ELSE_1	FOR_1
0x4002dc6	            0x31db	                            xor ebx, ebx	      2585	buffer.c	FUNCTION_34	ELSE_1	FOR_1
0x4002dc8	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      2644	buffer.c	FUNCTION_34	IF_11
0x4002dcd	          0x4839c8	                            cmp rax, rcx	      2644	buffer.c	FUNCTION_34	IF_11
0x4002dd0	            0x7408	                            je 0x4002dda	      2644	buffer.c	FUNCTION_34	IF_11
0x4002dd2	          0x4889c7	                            mov rdi, rax	      2645	buffer.c	FUNCTION_34	CALL_11
0x4002dd5	      0xe800000000	                          call 0x4002dda	      2645	buffer.c	FUNCTION_34	CALL_11
0x4002dda	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      2647	buffer.c	FUNCTION_34
0x4002ddf	            0x8918	                    mov dword [rax], ebx	      2647	buffer.c	FUNCTION_34
0x4002de1	    0x488b8c24f800	            mov rcx, qword [rsp + 0xf8] 	      2649	buffer.c	FUNCTION_34
0x4002de9	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2649	buffer.c	FUNCTION_34
0x4002df2	            0x89e8	                            mov eax, ebp	      2649	buffer.c	FUNCTION_34
0x4002df4	     0xf85c1010000	                           jne 0x4002fbb	      2649	buffer.c	FUNCTION_34
0x4002dfa	    0x4881c4080100	                          add rsp, 0x108	      2649	buffer.c	FUNCTION_34
0x4002e01	              0x5b	                                 pop rbx	      2649	buffer.c	FUNCTION_34
0x4002e02	              0x5d	                                 pop rbp	      2649	buffer.c	FUNCTION_34
0x4002e03	            0x415c	                                 pop r12	      2649	buffer.c	FUNCTION_34
0x4002e05	            0x415d	                                 pop r13	      2649	buffer.c	FUNCTION_34
0x4002e07	            0x415e	                                 pop r14	      2649	buffer.c	FUNCTION_34
0x4002e09	            0x415f	                                 pop r15	      2649	buffer.c	FUNCTION_34
0x4002e0b	              0xc3	                                     ret	      2649	buffer.c	FUNCTION_34
0x4002e0c	         0xf1f4000	                         nop dword [rax]	      2649	buffer.c	FUNCTION_34
0x4002e10	          0x4c89e7	                            mov rdi, r12	      2620	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	CALL_3
0x4002e13	      0xe800000000	                          call 0x4002e18	      2620	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	CALL_3
0x4002e18	      0xe93fffffff	                           jmp 0x4002d5c	      2620	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	CALL_3
0x4002e1d	           0xf1f00	                         nop dword [rax]	      2620	buffer.c	FUNCTION_34	FOR_1	FOR_2	FUNCTION_1	IF_2	CALL_3
0x4002e20	            0x31ff	                            xor edi, edi	      2694	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_2
0x4002e22	          0x4c89e6	                            mov rsi, r12	      2694	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_2
0x4002e25	      0xe800000000	                          call 0x4002e2a	      2694	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_2
0x4002e2a	          0x4885c0	                           test rax, rax	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x4002e2d	          0x4989c0	                             mov r8, rax	      2694	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_2
0x4002e30	            0x742e	                            je 0x4002e60	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x4002e32	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x4002e37	            0x31d2	                            xor edx, edx	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x4002e39	          0x4889c6	                            mov rsi, rax	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x4002e3c	      0x4889442418	             mov qword [rsp + 0x18], rax	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x4002e41	      0xe800000000	                          call 0x4002e46	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x4002e46	            0x85c0	                           test eax, eax	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x4002e48	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x4002e4d	            0x7411	                            je 0x4002e60	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x4002e4f	          0x4c89c7	                             mov rdi, r8	      2697	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_4
0x4002e52	      0xe800000000	                          call 0x4002e57	      2697	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_4
0x4002e57	      0xe9defeffff	                           jmp 0x4002d3a	      2697	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_4
0x4002e5c	         0xf1f4000	                         nop dword [rax]	      2697	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_4
0x4002e60	          0x4c89c7	                             mov rdi, r8	      2697	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_4
0x4002e63	      0xe800000000	                          call 0x4002e68	      2697	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_4
0x4002e68	    0x4d8ba6880000	            mov r12, qword [r14 + 0x88] 	      2667	buffer.c	FUNCTION_35	CALL_2
0x4002e6f	          0x4d85e4	                           test r12, r12	      2685	buffer.c	FUNCTION_36	IF_1
0x4002e72	     0xf8460feffff	                            je 0x4002cd8	      2685	buffer.c	FUNCTION_36	IF_1
0x4002e78	    0x48833d000000	               cmp qword [0x04002e80], 0	      2688	buffer.c	FUNCTION_36	IF_1
0x4002e80	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      2689	buffer.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x4002e85	          0x4c89e6	                            mov rsi, r12	      2689	buffer.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x4002e88	           0xf95c2	                                setne dl	      2688	buffer.c	FUNCTION_36	IF_1
0x4002e8b	            0x85ed	                           test ebp, ebp	      2688	buffer.c	FUNCTION_36	IF_1
0x4002e8d	           0xf95c0	                                setne al	      2688	buffer.c	FUNCTION_36	IF_1
0x4002e90	             0x9d0	                             or eax, edx	      2688	buffer.c	FUNCTION_36	IF_1
0x4002e92	            0x31d2	                            xor edx, edx	      2689	buffer.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x4002e94	           0xfb6c0	                           movzx eax, al	      2688	buffer.c	FUNCTION_36	IF_1
0x4002e97	    0x898424e80000	             mov dword [rsp + 0xe8], eax	      2688	buffer.c	FUNCTION_36	IF_1
0x4002e9e	      0xe800000000	                          call 0x4002ea3	      2689	buffer.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x4002ea3	            0x85c0	                           test eax, eax	      2689	buffer.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x4002ea5	     0xf858ffeffff	                           jne 0x4002d3a	      2689	buffer.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x4002eab	            0x31ff	                            xor edi, edi	      2694	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_2
0x4002ead	          0x4c89e6	                            mov rsi, r12	      2694	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_2
0x4002eb0	      0xe800000000	                          call 0x4002eb5	      2694	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_2
0x4002eb5	          0x4885c0	                           test rax, rax	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x4002eb8	          0x4889c5	                            mov rbp, rax	      2694	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_2
0x4002ebb	            0x7442	                            je 0x4002eff	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x4002ebd	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x4002ec2	            0x31d2	                            xor edx, edx	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x4002ec4	          0x4889c6	                            mov rsi, rax	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x4002ec7	      0xe800000000	                          call 0x4002ecc	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x4002ecc	            0x85c0	                           test eax, eax	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x4002ece	            0x742f	                            je 0x4002eff	      2695	buffer.c	FUNCTION_36	IF_1	ELSE_1	IF_3	CALL_3
0x4002ed0	          0x4889ef	                            mov rdi, rbp	      2697	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_4
0x4002ed3	      0xe800000000	                          call 0x4002ed8	      2697	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_4
0x4002ed8	      0xe95dfeffff	                           jmp 0x4002d3a	      2697	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_4
0x4002edd	           0xf1f00	                         nop dword [rax]	      2697	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_4
0x4002ee0	    0x48834424280b	             add qword [rsp + 0x28], 0xb	      2697	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_4
0x4002ee6	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      2589	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_3
0x4002eeb	      0x48394c2420	            cmp qword [rsp + 0x20], rcx 	      2589	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_3
0x4002ef0	     0xf859dfdffff	                           jne 0x4002c93	      2589	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_3
0x4002ef6	            0x31ed	                            xor ebp, ebp	      2589	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_3
0x4002ef8	            0x31db	                            xor ebx, ebx	      2589	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_3
0x4002efa	      0xe9c9feffff	                           jmp 0x4002dc8	      2589	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_3
0x4002eff	          0x4889ef	                            mov rdi, rbp	      2697	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_4
0x4002f02	      0xe800000000	                          call 0x4002f07	      2697	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_4
0x4002f07	      0xe9ccfdffff	                           jmp 0x4002cd8	      2697	buffer.c	FUNCTION_36	IF_1	ELSE_1	CALL_4
0x4002f0c	          0x4889c7	                            mov rdi, rax	      2572	buffer.c	FUNCTION_34	IF_1	CALL_2
0x4002f0f	        0x894c240c	              mov dword [rsp + 0xc], ecx	      2572	buffer.c	FUNCTION_34	IF_1	CALL_2
0x4002f13	          0x4889c3	                            mov rbx, rax	      2572	buffer.c	FUNCTION_34	IF_1	CALL_2
0x4002f16	      0xe800000000	                          call 0x4002f1b	      2572	buffer.c	FUNCTION_34	IF_1	CALL_2
0x4002f1b	          0x8d780b	                    lea edi, [rax + 0xb]	      2572	buffer.c	FUNCTION_34	IF_1	CALL_2
0x4002f1e	            0x31ed	                            xor ebp, ebp	      2574	buffer.c	FUNCTION_34	IF_1	IF_2
0x4002f20	      0xe800000000	                          call 0x4002f25	      2572	buffer.c	FUNCTION_34	IF_1	CALL_2
0x4002f25	          0x4885c0	                           test rax, rax	      2573	buffer.c	FUNCTION_34	IF_1	IF_2
0x4002f28	      0x4889442420	             mov qword [rsp + 0x20], rax	      2572	buffer.c	FUNCTION_34	IF_1	CALL_2
0x4002f2d	     0xf84aefeffff	                            je 0x4002de1	      2573	buffer.c	FUNCTION_34	IF_1	IF_2
0x4002f33	    0x48b95c285e5c	          movabs rcx, 0x2f5c5b7c5c5e285c	       110	string3.h	FUNCTION_110	CALL_3
0x4002f3d	        0x488d7301	                      lea rsi, [rbx + 1]	       110	string3.h	FUNCTION_110	CALL_3
0x4002f41	        0x488d780b	                    lea rdi, [rax + 0xb]	       110	string3.h	FUNCTION_110	CALL_3
0x4002f45	          0x488908	                    mov qword [rax], rcx	       110	string3.h	FUNCTION_110	CALL_3
0x4002f48	    0xc740085d5c29	          mov dword [rax + 8], 0x295c5d 	       110	string3.h	FUNCTION_110	CALL_3
0x4002f4f	      0xe800000000	                          call 0x4002f54	       110	string3.h	FUNCTION_110	CALL_3
0x4002f54	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	       110	string3.h	FUNCTION_110	CALL_3
0x4002f58	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       110	string3.h	FUNCTION_110	CALL_3
0x4002f5d	      0xe91dfdffff	                           jmp 0x4002c7f	       110	string3.h	FUNCTION_110	CALL_3
0x4002f62	    0x8d3cdd000000	                        lea edi, [rbx*8]	      2629	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	CALL_7
0x4002f69	      0xe800000000	                          call 0x4002f6e	      2629	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	CALL_7
0x4002f6e	          0x4885c0	                           test rax, rax	      2630	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8
0x4002f71	          0x498907	                    mov qword [r15], rax	      2629	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	CALL_7
0x4002f74	     0xf8515feffff	                           jne 0x4002d8f	      2630	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8
0x4002f7a	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      2632	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8	CALL_8
0x4002f7f	      0xe800000000	                          call 0x4002f84	      2632	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8	CALL_8
0x4002f84	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      2633	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8	IF_9
0x4002f89	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      2633	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8	IF_9
0x4002f8e	          0x4839c8	                            cmp rax, rcx	      2633	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8	IF_9
0x4002f91	            0x7408	                            je 0x4002f9b	      2633	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8	IF_9
0x4002f93	          0x4889c7	                            mov rdi, rax	      2634	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8	CALL_9
0x4002f96	      0xe800000000	                          call 0x4002f9b	      2634	buffer.c	FUNCTION_34	FOR_1	FOR_2	ELSE_1	IF_7	IF_8	CALL_9
0x4002f9b	            0x31ed	                            xor ebp, ebp	      2596	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_4
0x4002f9d	      0xe93ffeffff	                           jmp 0x4002de1	      2596	buffer.c	FUNCTION_34	ELSE_1	FOR_1	IF_4
0x4002fa2	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      2639	buffer.c	FUNCTION_34	FOR_1	ELSE_1	CALL_10
0x4002fa7	      0xbd01000000	                              mov ebp, 1	      2639	buffer.c	FUNCTION_34	FOR_1	ELSE_1	CALL_10
0x4002fac	      0xe800000000	                          call 0x4002fb1	      2639	buffer.c	FUNCTION_34	FOR_1	ELSE_1	CALL_10
0x4002fb1	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      2639	buffer.c	FUNCTION_34	FOR_1	ELSE_1	CALL_10
0x4002fb6	      0xe90dfeffff	                           jmp 0x4002dc8	      2639	buffer.c	FUNCTION_34	FOR_1	ELSE_1	CALL_10
0x4002fbb	      0xe800000000	                          call 0x4002fc0	      2649	buffer.c	FUNCTION_34
0x4002fc0	          0x83c301	                              add ebx, 1	      2614	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_2	IF_3
0x4002fc3	      0xe910fdffff	                           jmp 0x4002cd8	      2614	buffer.c	FUNCTION_34	ELSE_1	FOR_1	FOR_2	FUNCTION_1	IF_2	IF_3
