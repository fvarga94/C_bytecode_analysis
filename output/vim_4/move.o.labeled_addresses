changed_cline_bef_curs_win	SWITCH,0:WHILE,0:ELSE,0:functions,0:FOR,0:CALL,0:IF,0:DO,0	2
0x4001050	    0x81a7b4000000	      and dword [rdi + 0xb4], 0xffffff70	       561	move.c	FUNCTION_13
0x400105a	              0xc3	                                     ret	       561	move.c	FUNCTION_13
set_topline	SWITCH,0:WHILE,0:ELSE,0:functions,0:FOR,0:CALL,2:IF,0:DO,0	22
0x4000fc0	              0x53	                                push rbx	       529	move.c	FUNCTION_11
0x4000fc1	          0x4531c9	                            xor r9d, r9d	       532	move.c	FUNCTION_11	CALL_1
0x4000fc4	    0x41b801000000	                              mov r8d, 1	       532	move.c	FUNCTION_11	CALL_1
0x4000fca	            0x31c9	                            xor ecx, ecx	       532	move.c	FUNCTION_11	CALL_1
0x4000fcc	          0x4889fb	                            mov rbx, rdi	       529	move.c	FUNCTION_11
0x4000fcf	        0x4883ec10	                           sub rsp, 0x10	       529	move.c	FUNCTION_11
0x4000fd3	      0x488d542408	                      lea rdx, [rsp + 8]	       532	move.c	FUNCTION_11	CALL_1
0x4000fd8	      0x4889742408	                mov qword [rsp + 8], rsi	       529	move.c	FUNCTION_11
0x4000fdd	      0xe800000000	                          call 0x4000fe2	       532	move.c	FUNCTION_11	CALL_1
0x4000fe2	      0x488b442408	                mov rax, qword [rsp + 8]	       535	move.c	FUNCTION_11
0x4000fe7	    0x81a3b4000000	      and dword [rbx + 0xb4], 0xffffff4e	       541	move.c	FUNCTION_11
0x4000ff1	      0xbf0a000000	                            mov edi, 0xa	       543	move.c	FUNCTION_11	CALL_2
0x4000ff6	    0xc68380000000	                mov byte [rbx + 0x80], 1	       537	move.c	FUNCTION_11
0x4000ffd	    0xc78384000000	               mov dword [rbx + 0x84], 0	       539	move.c	FUNCTION_11
0x4001007	          0x4889c2	                            mov rdx, rax	       535	move.c	FUNCTION_11
0x400100a	        0x482b5378	             sub rdx, qword [rbx + 0x78]	       535	move.c	FUNCTION_11
0x400100e	    0x480193e80000	            add qword [rbx + 0xe8], rdx 	       535	move.c	FUNCTION_11
0x4001015	        0x48894378	             mov qword [rbx + 0x78], rax	       536	move.c	FUNCTION_11
0x4001019	      0xe800000000	                          call 0x400101e	       543	move.c	FUNCTION_11	CALL_2
0x400101e	        0x4883c410	                           add rsp, 0x10	       544	move.c	FUNCTION_11
0x4001022	              0x5b	                                 pop rbx	       544	move.c	FUNCTION_11
0x4001023	              0xc3	                                     ret	       544	move.c	FUNCTION_11
scrollup_clamp	SWITCH,0:WHILE,0:ELSE,1:functions,0:FOR,0:CALL,5:IF,4:DO,0	92
0x40039b0	    0x488b05000000	            mov rax, qword [0x040039b7] 	      1486	move.c	FUNCTION_38	IF_1
0x40039b7	    0x488b15000000	            mov rdx, qword [0x040039be] 	      1486	move.c	FUNCTION_38	IF_1
0x40039be	              0x53	                                push rbx	      1483	move.c	FUNCTION_38
0x40039bf	        0x488b7878	            mov rdi, qword [rax + 0x78] 	      1486	move.c	FUNCTION_38	IF_1
0x40039c3	          0x483b3a	                    cmp rdi, qword [rdx]	      1486	move.c	FUNCTION_38	IF_1
0x40039c6	     0xf84cc000000	                            je 0x4003a98	      1486	move.c	FUNCTION_38	IF_1
0x40039cc	    0x488bb0b80000	            mov rsi, qword [rax + 0xb8] 	       481	move.c	FUNCTION_8	IF_1
0x40039d3	        0x48397038	            cmp qword [rax + 0x38], rsi 	       481	move.c	FUNCTION_8	IF_1
0x40039d7	     0xf84d6000000	                            je 0x4003ab3	       481	move.c	FUNCTION_8	IF_1
0x40039dd	        0x488b4838	            mov rcx, qword [rax + 0x38] 	       485	move.c	FUNCTION_8	IF_1
0x40039e1	    0x8b90b4000000	            mov edx, dword [rax + 0xb4] 	       483	move.c	FUNCTION_8	IF_1
0x40039e7	        0x488b5840	            mov rbx, qword [rax + 0x40] 	       485	move.c	FUNCTION_8	IF_1
0x40039eb	    0x488988b80000	             mov qword [rax + 0xb8], rcx	       485	move.c	FUNCTION_8	IF_1
0x40039f2	    0x8b8894000000	            mov ecx, dword [rax + 0x94] 	       486	move.c	FUNCTION_8	IF_1
0x40039f8	          0x80e260	                            and dl, 0x60	       483	move.c	FUNCTION_8	IF_1
0x40039fb	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       483	move.c	FUNCTION_8	IF_1
0x4003a01	    0x488998c00000	             mov qword [rax + 0xc0], rbx	       485	move.c	FUNCTION_8	IF_1
0x4003a08	    0x8988c8000000	             mov dword [rax + 0xc8], ecx	       486	move.c	FUNCTION_8	IF_1
0x4003a0e	          0x83e203	                              and edx, 3	       635	move.c	FUNCTION_21	IF_1
0x4003a11	          0x83fa03	                              cmp edx, 3	       635	move.c	FUNCTION_21	IF_1
0x4003a14	            0x7415	                            je 0x4003a2b	       635	move.c	FUNCTION_21	IF_1
0x4003a16	      0xbf01000000	                              mov edi, 1	       636	move.c	FUNCTION_21	CALL_2
0x4003a1b	      0xe800000000	                          call 0x4003a20	       636	move.c	FUNCTION_21	CALL_2
0x4003a20	    0x488b05000000	            mov rax, qword [0x04003a27] 	       636	move.c	FUNCTION_21	CALL_2
0x4003a27	        0x488b7878	            mov rdi, qword [rax + 0x78] 	       636	move.c	FUNCTION_21	CALL_2
0x4003a2b	    0x8b98dc000000	            mov ebx, dword [rax + 0xdc] 	      1501	move.c	FUNCTION_38	CALL_2
0x4003a31	      0xe800000000	                          call 0x4003a36	      1501	move.c	FUNCTION_38	CALL_2
0x4003a36	    0x488b3d000000	            mov rdi, qword [0x04003a3d] 	      1502	move.c	FUNCTION_38
0x4003a3d	            0x29c3	                            sub ebx, eax	      1501	move.c	FUNCTION_38	CALL_2
0x4003a3f	    0x8b9794020000	           mov edx, dword [rdi + 0x294] 	      1506	move.c	FUNCTION_38	IF_2
0x4003a45	    0x2b9f84000000	             sub ebx, dword [rdi + 0x84]	      1501	move.c	FUNCTION_38	CALL_2
0x4003a4b	            0x85d2	                           test edx, edx	      1506	move.c	FUNCTION_38	IF_2
0x4003a4d	            0x740e	                            je 0x4003a5d	      1506	move.c	FUNCTION_38	IF_2
0x4003a4f	    0x8b87ac000000	            mov eax, dword [rdi + 0xac] 	      1506	move.c	FUNCTION_38	IF_2
0x4003a55	            0x85c0	                           test eax, eax	      1506	move.c	FUNCTION_38	IF_2
0x4003a57	     0xf8593000000	                           jne 0x4003af0	      1506	move.c	FUNCTION_38	IF_2
0x4003a5d	          0x4863db	                         movsxd rbx, ebx	      1511	move.c	FUNCTION_38	IF_3
0x4003a60	    0x483b1d000000	            cmp rbx, qword [0x04003a67] 	      1511	move.c	FUNCTION_38	IF_3
0x4003a67	            0x7c26	                            jl 0x4003a8f	      1511	move.c	FUNCTION_38	IF_3
0x4003a69	    0x8b8784000000	            mov eax, dword [rdi + 0x84] 	      1514	move.c	FUNCTION_38	IF_3	IF_4
0x4003a6f	            0x85c0	                           test eax, eax	      1514	move.c	FUNCTION_38	IF_3	IF_4
0x4003a71	     0xf8ec9000000	                           jle 0x4003b40	      1514	move.c	FUNCTION_38	IF_3	IF_4
0x4003a77	          0x83e801	                              sub eax, 1	      1515	move.c	FUNCTION_38	IF_3	IF_4
0x4003a7a	    0x898784000000	             mov dword [rdi + 0x84], eax	      1515	move.c	FUNCTION_38	IF_3	IF_4
0x4003a80	    0x488387e80000	               add qword [rdi + 0xe8], 1	      1524	move.c	FUNCTION_38	IF_3
0x4003a88	    0x83a7b4000000	      and dword [rdi + 0xb4], 0xffffffce	      1525	move.c	FUNCTION_38	IF_3
0x4003a8f	              0x5b	                                 pop rbx	      1527	move.c	FUNCTION_38
0x4003a90	              0xc3	                                     ret	      1527	move.c	FUNCTION_38
0x4003a91	     0xf1f80000000	                         nop dword [rax]	      1527	move.c	FUNCTION_38
0x4003a98	    0x8b8884000000	            mov ecx, dword [rax + 0x84] 	      1488	move.c	FUNCTION_38	IF_1
0x4003a9e	            0x85c9	                           test ecx, ecx	      1488	move.c	FUNCTION_38	IF_1
0x4003aa0	            0x74ed	                            je 0x4003a8f	      1488	move.c	FUNCTION_38	IF_1
0x4003aa2	    0x488bb0b80000	            mov rsi, qword [rax + 0xb8] 	       481	move.c	FUNCTION_8	IF_1
0x4003aa9	        0x48397038	            cmp qword [rax + 0x38], rsi 	       481	move.c	FUNCTION_8	IF_1
0x4003aad	     0xf852affffff	                           jne 0x40039dd	       481	move.c	FUNCTION_8	IF_1
0x4003ab3	          0x8b4840	            mov ecx, dword [rax + 0x40] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4003ab6	    0x3b88c0000000	            cmp ecx, dword [rax + 0xc0] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4003abc	    0x8bb094000000	            mov esi, dword [rax + 0x94] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4003ac2	            0x745c	                            je 0x4003b20	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4003ac4	        0x448b4044	            mov r8d, dword [rax + 0x44] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4003ac8	    0x8b90b4000000	            mov edx, dword [rax + 0xb4] 	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x4003ace	    0x8988c0000000	             mov dword [rax + 0xc0], ecx	       496	move.c	FUNCTION_8	ELSE_1	IF_2
0x4003ad4	    0x89b0c8000000	             mov dword [rax + 0xc8], esi	       497	move.c	FUNCTION_8	ELSE_1	IF_2
0x4003ada	    0x448980c40000	             mov dword [rax + 0xc4], r8d	       499	move.c	FUNCTION_8	ELSE_1	IF_2
0x4003ae1	          0x83e2f8	                     and edx, 0xfffffff8	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x4003ae4	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x4003aea	      0xe91fffffff	                           jmp 0x4003a0e	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x4003aef	              0x90	                                     nop	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x4003af0	      0xe800000000	                          call 0x4003af5	       788	move.c	FUNCTION_24	CALL_1
0x4003af5	    0x488b3d000000	            mov rdi, qword [0x04003afc] 	      1509	move.c	FUNCTION_38	IF_2
0x4003afc	    0x8b87d8000000	            mov eax, dword [rdi + 0xd8] 	      1509	move.c	FUNCTION_38	IF_2
0x4003b02	              0x99	                                     cdq	      1509	move.c	FUNCTION_38	IF_2
0x4003b03	    0xf7bfac000000	                 idiv dword [rdi + 0xac]	      1509	move.c	FUNCTION_38	IF_2
0x4003b09	            0x29c3	                            sub ebx, eax	      1509	move.c	FUNCTION_38	IF_2
0x4003b0b	          0x4863db	                         movsxd rbx, ebx	      1511	move.c	FUNCTION_38	IF_3
0x4003b0e	    0x483b1d000000	            cmp rbx, qword [0x04003b15] 	      1511	move.c	FUNCTION_38	IF_3
0x4003b15	     0xf8d4effffff	                           jge 0x4003a69	      1511	move.c	FUNCTION_38	IF_3
0x4003b1b	      0xe96fffffff	                           jmp 0x4003a8f	      1511	move.c	FUNCTION_38	IF_3
0x4003b20	    0x3bb0c8000000	            cmp esi, dword [rax + 0xc8] 	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x4003b26	        0x448b4044	            mov r8d, dword [rax + 0x44] 	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x4003b2a	            0x759c	                           jne 0x4003ac8	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x4003b2c	    0x443b80c40000	            cmp r8d, dword [rax + 0xc4] 	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x4003b33	            0x7593	                           jne 0x4003ac8	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x4003b35	    0x8b90b4000000	            mov edx, dword [rax + 0xb4] 	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x4003b3b	      0xe9cefeffff	                           jmp 0x4003a0e	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x4003b40	        0x488d5778	                   lea rdx, [rdi + 0x78]	      1520	move.c	FUNCTION_38	IF_3	ELSE_1	CALL_5
0x4003b44	        0x488b7f78	            mov rdi, qword [rdi + 0x78] 	      1520	move.c	FUNCTION_38	IF_3	ELSE_1	CALL_5
0x4003b48	            0x31f6	                            xor esi, esi	      1520	move.c	FUNCTION_38	IF_3	ELSE_1	CALL_5
0x4003b4a	      0xe800000000	                          call 0x4003b4f	      1520	move.c	FUNCTION_38	IF_3	ELSE_1	CALL_5
0x4003b4f	    0x488b3d000000	            mov rdi, qword [0x04003b56] 	      1522	move.c	FUNCTION_38	IF_3	ELSE_1
0x4003b56	      0x4883477801	               add qword [rdi + 0x78], 1	      1522	move.c	FUNCTION_38	IF_3	ELSE_1
0x4003b5b	      0xe920ffffff	                           jmp 0x4003a80	      1522	move.c	FUNCTION_38	IF_3	ELSE_1
scroll_cursor_bot	SWITCH,0:WHILE,1:ELSE,5:functions,0:FOR,2:CALL,12:IF,21:DO,0	453
0x40021b0	            0x4157	                                push r15	      1814	move.c	FUNCTION_45
0x40021b2	            0x4156	                                push r14	      1814	move.c	FUNCTION_45
0x40021b4	          0x4c63f7	                         movsxd r14, edi	      1814	move.c	FUNCTION_45
0x40021b7	            0x4155	                                push r13	      1814	move.c	FUNCTION_45
0x40021b9	            0x4154	                                push r12	      1814	move.c	FUNCTION_45
0x40021bb	              0x55	                                push rbp	      1814	move.c	FUNCTION_45
0x40021bc	              0x53	                                push rbx	      1814	move.c	FUNCTION_45
0x40021bd	        0x4883ec68	                           sub rsp, 0x68	      1814	move.c	FUNCTION_45
0x40021c1	    0x4c8b2d000000	            mov r13, qword [0x040021c8] 	      1820	move.c	FUNCTION_45
0x40021c8	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	      1814	move.c	FUNCTION_45
0x40021d1	      0x48894c2458	             mov qword [rsp + 0x58], rcx	      1814	move.c	FUNCTION_45
0x40021d6	            0x31c9	                            xor ecx, ecx	      1814	move.c	FUNCTION_45
0x40021d8	            0x85f6	                           test esi, esi	      1833	move.c	FUNCTION_45	IF_1
0x40021da	        0x89742428	             mov dword [rsp + 0x28], esi	      1814	move.c	FUNCTION_45
0x40021de	        0x498b4d78	            mov rcx, qword [r13 + 0x78] 	      1820	move.c	FUNCTION_45
0x40021e2	        0x4d8b6538	            mov r12, qword [r13 + 0x38] 	      1832	move.c	FUNCTION_45
0x40021e6	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      1820	move.c	FUNCTION_45
0x40021eb	    0x498b8de80000	            mov rcx, qword [r13 + 0xe8] 	      1827	move.c	FUNCTION_45
0x40021f2	      0x48894c2420	             mov qword [rsp + 0x20], rcx	      1827	move.c	FUNCTION_45
0x40021f7	    0x418b8db40000	            mov ecx, dword [r13 + 0xb4] 	      1828	move.c	FUNCTION_45
0x40021fe	        0x894c2414	             mov dword [rsp + 0x14], ecx	      1828	move.c	FUNCTION_45
0x4002202	    0x418b8df00000	            mov ecx, dword [r13 + 0xf0] 	      1829	move.c	FUNCTION_45
0x4002209	        0x894c242c	             mov dword [rsp + 0x2c], ecx	      1829	move.c	FUNCTION_45
0x400220d	     0xf84dd000000	                            je 0x40022f0	      1833	move.c	FUNCTION_45	IF_1
0x4002213	      0x498d742401	                      lea rsi, [r12 + 1]	      1836	move.c	FUNCTION_45	IF_1
0x4002218	    0x418bad840000	            mov ebp, dword [r13 + 0x84] 	      1824	move.c	FUNCTION_45
0x400221f	    0xc74424380000	               mov dword [rsp + 0x38], 0	      1838	move.c	FUNCTION_45	IF_1
0x4002227	        0x4883fe01	                              cmp rsi, 1	      1840	move.c	FUNCTION_45	IF_1	FOR_1
0x400222b	    0x4989b5e80000	             mov qword [r13 + 0xe8], rsi	      1836	move.c	FUNCTION_45	IF_1
0x4002232	        0x49897578	             mov qword [r13 + 0x78], rsi	      1840	move.c	FUNCTION_45	IF_1	FOR_1
0x4002236	     0xf8ead070000	                           jle 0x40029e9	      1840	move.c	FUNCTION_45	IF_1	FOR_1
0x400223c	      0x488d442430	                   lea rax, [rsp + 0x30]	      1840	move.c	FUNCTION_45	IF_1	FOR_1
0x4002241	          0x4531ff	                          xor r15d, r15d	      1840	move.c	FUNCTION_45	IF_1	FOR_1
0x4002244	            0x31db	                            xor ebx, ebx	      1840	move.c	FUNCTION_45	IF_1	FOR_1
0x4002246	          0x4c89ef	                            mov rdi, r13	      1840	move.c	FUNCTION_45	IF_1	FOR_1
0x4002249	      0x4889442408	                mov qword [rsp + 8], rax	      1840	move.c	FUNCTION_45	IF_1	FOR_1
0x400224e	            0xeb76	                           jmp 0x40022c6	      1840	move.c	FUNCTION_45	IF_1	FOR_1
0x4002250	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      1549	move.c	FUNCTION_39	ELSE_1
0x4002255	    0xc74424380000	               mov dword [rsp + 0x38], 0	      1551	move.c	FUNCTION_39	ELSE_1
0x400225d	        0x488d78ff	                      lea rdi, [rax - 1]	      1549	move.c	FUNCTION_39	ELSE_1
0x4002261	          0x4885ff	                           test rdi, rdi	      1553	move.c	FUNCTION_39	ELSE_1	IF_2
0x4002264	      0x48897c2430	             mov qword [rsp + 0x30], rdi	      1549	move.c	FUNCTION_39	ELSE_1
0x4002269	     0xf8e71050000	                           jle 0x40027e0	      1553	move.c	FUNCTION_39	ELSE_1	IF_2
0x400226f	      0x488b742408	                mov rsi, qword [rsp + 8]	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x4002274	            0x31d2	                            xor edx, edx	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x4002276	      0xe800000000	                          call 0x400227b	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x400227b	            0x85c0	                           test eax, eax	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x400227d	     0xf84ed050000	                            je 0x4002870	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x4002283	    0xc744243c0100	               mov dword [rsp + 0x3c], 1	      1559	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3
0x400228b	      0xb801000000	                              mov eax, 1	      1846	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x4002290	    0x488b3d000000	            mov rdi, qword [0x04002297] 	      1846	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x4002297	             0x1d8	                            add eax, ebx	      1846	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x4002299	    0x3b87a0000000	            cmp eax, dword [rdi + 0xa0] 	      1846	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x400229f	     0xf8f8d060000	                            jg 0x4002932	      1846	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x40022a5	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      1842	move.c	FUNCTION_45	IF_1	FOR_1
0x40022aa	      0x448b7c2438	           mov r15d, dword [rsp + 0x38] 	      1850	move.c	FUNCTION_45	IF_1	FOR_1
0x40022af	        0x4883fe01	                              cmp rsi, 1	      1840	move.c	FUNCTION_45	IF_1	FOR_1
0x40022b3	    0x4489bf840000	            mov dword [rdi + 0x84], r15d	      1850	move.c	FUNCTION_45	IF_1	FOR_1
0x40022ba	        0x48897778	             mov qword [rdi + 0x78], rsi	      1842	move.c	FUNCTION_45	IF_1	FOR_1
0x40022be	     0xf8eb4060000	                           jle 0x4002978	      1840	move.c	FUNCTION_45	IF_1	FOR_1
0x40022c4	            0x89c3	                            mov ebx, eax	      1840	move.c	FUNCTION_45	IF_1	FOR_1
0x40022c6	      0x4889742430	             mov qword [rsp + 0x30], rsi	      1844	move.c	FUNCTION_45	IF_1	FOR_1
0x40022cb	      0xe800000000	                          call 0x40022d0	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x40022d0	          0x4439f8	                           cmp eax, r15d	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x40022d3	     0xf8e77ffffff	                           jle 0x4002250	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x40022d9	      0x8344243801	               add dword [rsp + 0x38], 1	      1543	move.c	FUNCTION_39	IF_1
0x40022de	    0xc744243c0100	               mov dword [rsp + 0x3c], 1	      1544	move.c	FUNCTION_39	IF_1
0x40022e6	            0xeba3	                           jmp 0x400228b	      1544	move.c	FUNCTION_39	IF_1
0x40022e8	     0xf1f84000000	                   nop dword [rax + rax]	      1544	move.c	FUNCTION_39	IF_1
0x40022f0	      0xf644241420	           test byte [rsp + 0x14], 0x20 	       590	move.c	FUNCTION_16	IF_1
0x40022f5	      0x488d442430	                   lea rax, [rsp + 0x30]	       590	move.c	FUNCTION_16	IF_1
0x40022fa	      0x4889442408	                mov qword [rsp + 8], rax	       590	move.c	FUNCTION_16	IF_1
0x40022ff	     0xf84ff050000	                            je 0x4002904	       590	move.c	FUNCTION_16	IF_1
0x4002305	          0x4c89e7	                            mov rdi, r12	      1867	move.c	FUNCTION_45	CALL_4
0x4002308	            0x31ed	                            xor ebp, ebp	      1816	move.c	FUNCTION_45
0x400230a	      0xe800000000	                          call 0x400230f	      1867	move.c	FUNCTION_45	CALL_4
0x400230f	            0x89c3	                            mov ebx, eax	      1867	move.c	FUNCTION_45	CALL_4
0x4002311	    0x488b05000000	            mov rax, qword [0x04002318] 	      1876	move.c	FUNCTION_45	IF_4
0x4002318	    0x4c3ba0e80000	            cmp r12, qword [rax + 0xe8] 	      1876	move.c	FUNCTION_45	IF_4
0x400231f	            0x7c08	                            jl 0x4002329	      1876	move.c	FUNCTION_45	IF_4
0x4002321	            0x89dd	                            mov ebp, ebx	      1878	move.c	FUNCTION_45	IF_4
0x4002323	     0xf84e8050000	                            je 0x4002911	      1879	move.c	FUNCTION_45	IF_4	IF_5
0x4002329	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      1891	move.c	FUNCTION_45	IF_6	CALL_6
0x400232d	      0x488b742408	                mov rsi, qword [rsp + 8]	      1891	move.c	FUNCTION_45	IF_6	CALL_6
0x4002332	      0x488d542440	                   lea rdx, [rsp + 0x40]	      1891	move.c	FUNCTION_45	IF_6	CALL_6
0x4002337	      0xe800000000	                          call 0x400233c	      1891	move.c	FUNCTION_45	IF_6	CALL_6
0x400233c	            0x85c0	                           test eax, eax	      1891	move.c	FUNCTION_45	IF_6	CALL_6
0x400233e	            0x750a	                           jne 0x400234a	      1891	move.c	FUNCTION_45	IF_6	CALL_6
0x4002340	      0x4c89642430	             mov qword [rsp + 0x30], r12	      1894	move.c	FUNCTION_45	IF_6
0x4002345	      0x4c89642440	             mov qword [rsp + 0x40], r12	      1895	move.c	FUNCTION_45	IF_6
0x400234a	    0x488b3d000000	            mov rdi, qword [0x04002351] 	      1900	move.c	FUNCTION_45	CALL_7
0x4002351	    0xc74424380000	               mov dword [rsp + 0x38], 0	      1898	move.c	FUNCTION_45
0x4002359	          0x4531ed	                          xor r13d, r13d	      1817	move.c	FUNCTION_45
0x400235c	    0xc74424480000	               mov dword [rsp + 0x48], 0	      1899	move.c	FUNCTION_45
0x4002364	    0x488bb7e80000	            mov rsi, qword [rdi + 0xe8] 	      1900	move.c	FUNCTION_45	CALL_7
0x400236b	      0xe800000000	                          call 0x4002370	      1900	move.c	FUNCTION_45	CALL_7
0x4002370	    0x488b3d000000	            mov rdi, qword [0x04002377] 	      1901	move.c	FUNCTION_45
0x4002377	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      1901	move.c	FUNCTION_45
0x400237c	    0x2b87f4000000	             sub eax, dword [rdi + 0xf4]	      1900	move.c	FUNCTION_45	CALL_7
0x4002382	          0x4189c7	                           mov r15d, eax	      1900	move.c	FUNCTION_45	CALL_7
0x4002385	           0xf1f00	                         nop dword [rax]	      1900	move.c	FUNCTION_45	CALL_7
0x4002388	        0x4883fe01	                              cmp rsi, 1	      1904	move.c	FUNCTION_45	WHILE_1
0x400238c	     0xf8e98010000	                           jle 0x400252a	      1904	move.c	FUNCTION_45	WHILE_1
0x4002392	            0x85ed	                           test ebp, ebp	      1908	move.c	FUNCTION_45	WHILE_1	IF_7
0x4002394	     0xf8e16030000	                           jle 0x40026b0	      1908	move.c	FUNCTION_45	WHILE_1	IF_7
0x400239a	          0x4439f5	                           cmp ebp, r14d	      1908	move.c	FUNCTION_45	WHILE_1	IF_7
0x400239d	     0xf8d0d030000	                           jge 0x40026b0	      1908	move.c	FUNCTION_45	WHILE_1	IF_7
0x40023a3	    0x488b05000000	            mov rax, qword [0x040023aa] 	      1914	move.c	FUNCTION_45	WHILE_1	IF_7
0x40023aa	          0x488b00	                    mov rax, qword [rax]	      1914	move.c	FUNCTION_45	WHILE_1	IF_7
0x40023ad	      0x4839442440	            cmp qword [rsp + 0x40], rax 	      1914	move.c	FUNCTION_45	WHILE_1	IF_7
0x40023b2	     0xf8cd0020000	                            jl 0x4002688	      1914	move.c	FUNCTION_45	WHILE_1	IF_7
0x40023b8	    0x4839b7e80000	            cmp qword [rdi + 0xe8], rsi 	      1915	move.c	FUNCTION_45	WHILE_1	IF_7
0x40023bf	     0xf8cc3020000	                            jl 0x4002688	      1915	move.c	FUNCTION_45	WHILE_1	IF_7
0x40023c5	     0xf8f5f010000	                            jg 0x400252a	      1917	move.c	FUNCTION_45	WHILE_1	IF_7
0x40023cb	      0x448b642438	           mov r12d, dword [rsp + 0x38] 	      1918	move.c	FUNCTION_45	WHILE_1	IF_7
0x40023d0	          0x4539e7	                          cmp r15d, r12d	      1918	move.c	FUNCTION_45	WHILE_1	IF_7
0x40023d3	     0xf8e51010000	                           jle 0x400252a	      1918	move.c	FUNCTION_45	WHILE_1	IF_7
0x40023d9	      0xe800000000	                          call 0x40023de	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x40023de	          0x4439e0	                           cmp eax, r12d	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x40023e1	     0xf8fb4020000	                            jg 0x400269b	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x40023e7	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      1549	move.c	FUNCTION_39	ELSE_1
0x40023ec	    0xc74424380000	               mov dword [rsp + 0x38], 0	      1551	move.c	FUNCTION_39	ELSE_1
0x40023f4	        0x488d78ff	                      lea rdi, [rax - 1]	      1549	move.c	FUNCTION_39	ELSE_1
0x40023f8	          0x4885ff	                           test rdi, rdi	      1553	move.c	FUNCTION_39	ELSE_1	IF_2
0x40023fb	      0x48897c2430	             mov qword [rsp + 0x30], rdi	      1549	move.c	FUNCTION_39	ELSE_1
0x4002400	     0xf8eea020000	                           jle 0x40026f0	      1553	move.c	FUNCTION_39	ELSE_1	IF_2
0x4002406	      0x488b742408	                mov rsi, qword [rsp + 8]	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x400240b	            0x31d2	                            xor edx, edx	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x400240d	      0xe800000000	                          call 0x4002412	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x4002412	            0x85c0	                           test eax, eax	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x4002414	     0xf8436030000	                            je 0x4002750	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x400241a	    0xc744243c0100	               mov dword [rsp + 0x3c], 1	      1559	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3
0x4002422	      0xb801000000	                              mov eax, 1	      1925	move.c	FUNCTION_45	WHILE_1	IF_8
0x4002427	             0x1c3	                            add ebx, eax	      1928	move.c	FUNCTION_45	WHILE_1	ELSE_2
0x4002429	    0x488b3d000000	            mov rdi, qword [0x04002430] 	      1929	move.c	FUNCTION_45	WHILE_1	IF_9
0x4002430	    0x486397a00000	         movsxd rdx, dword [rdi + 0xa0] 	      1929	move.c	FUNCTION_45	WHILE_1	IF_9
0x4002437	            0x39d3	                            cmp ebx, edx	      1929	move.c	FUNCTION_45	WHILE_1	IF_9
0x4002439	     0xf8f71040000	                            jg 0x40028b0	      1929	move.c	FUNCTION_45	WHILE_1	IF_9
0x400243f	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      1931	move.c	FUNCTION_45	WHILE_1	IF_10
0x4002444	    0x488b97e80000	            mov rdx, qword [rdi + 0xe8] 	      1931	move.c	FUNCTION_45	WHILE_1	IF_10
0x400244b	          0x4839d6	                            cmp rsi, rdx	      1931	move.c	FUNCTION_45	WHILE_1	IF_10
0x400244e	            0x7c28	                            jl 0x4002478	      1931	move.c	FUNCTION_45	WHILE_1	IF_10
0x4002450	     0xf8f8a020000	                            jg 0x40026e0	      1933	move.c	FUNCTION_45	WHILE_1	IF_10
0x4002456	      0x443b7c2438	           cmp r15d, dword [rsp + 0x38] 	      1934	move.c	FUNCTION_45	WHILE_1	IF_10
0x400245b	            0x7c1b	                            jl 0x4002478	      1934	move.c	FUNCTION_45	WHILE_1	IF_10
0x400245d	             0x1c5	                            add ebp, eax	      1939	move.c	FUNCTION_45	WHILE_1	IF_10
0x400245f	          0x4839d6	                            cmp rsi, rdx	      1940	move.c	FUNCTION_45	WHILE_1	IF_10	IF_11
0x4002462	            0x7514	                           jne 0x4002478	      1940	move.c	FUNCTION_45	WHILE_1	IF_10	IF_11
0x4002464	      0x448b442448	            mov r8d, dword [rsp + 0x48] 	      1942	move.c	FUNCTION_45	WHILE_1	IF_10	IF_11
0x4002469	          0x4585c0	                           test r8d, r8d	      1942	move.c	FUNCTION_45	WHILE_1	IF_10	IF_11
0x400246c	            0x750a	                           jne 0x4002478	      1942	move.c	FUNCTION_45	WHILE_1	IF_10	IF_11
0x400246e	    0x2baff0000000	             sub ebp, dword [rdi + 0xf0]	      1945	move.c	FUNCTION_45	WHILE_1	IF_10	IF_11
0x4002474	         0xf1f4000	                         nop dword [rax]	      1945	move.c	FUNCTION_45	WHILE_1	IF_10	IF_11
0x4002478	    0x488b15000000	            mov rdx, qword [0x0400247f] 	      1948	move.c	FUNCTION_45	WHILE_1	IF_12
0x400247f	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      1948	move.c	FUNCTION_45	WHILE_1	IF_12
0x4002484	          0x483b02	                    cmp rax, qword [rdx]	      1948	move.c	FUNCTION_45	WHILE_1	IF_12
0x4002487	     0xf8dfbfeffff	                           jge 0x4002388	      1948	move.c	FUNCTION_45	WHILE_1	IF_12
0x400248d	      0x448b642448	           mov r12d, dword [rsp + 0x48] 	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x4002492	        0x488d7001	                      lea rsi, [rax + 1]	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x4002496	      0xe800000000	                          call 0x400249b	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x400249b	          0x4139c4	                           cmp r12d, eax	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x400249e	     0xf8cd4020000	                            jl 0x4002778	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x40024a4	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      1585	move.c	FUNCTION_40	ELSE_1
0x40024a9	    0xc74424480000	               mov dword [rsp + 0x48], 0	      1587	move.c	FUNCTION_40	ELSE_1
0x40024b1	        0x488d7801	                      lea rdi, [rax + 1]	      1585	move.c	FUNCTION_40	ELSE_1
0x40024b5	    0x488b05000000	            mov rax, qword [0x040024bc] 	      1589	move.c	FUNCTION_40	ELSE_1	IF_2
0x40024bc	      0x48897c2440	             mov qword [rsp + 0x40], rdi	      1585	move.c	FUNCTION_40	ELSE_1
0x40024c1	          0x483b38	                    cmp rdi, qword [rax]	      1589	move.c	FUNCTION_40	ELSE_1	IF_2
0x40024c4	     0xf8eee020000	                           jle 0x40027b8	      1589	move.c	FUNCTION_40	ELSE_1	IF_2
0x40024ca	    0xc744244cffff	     mov dword [rsp + 0x4c], 0x7fffffff 	      1590	move.c	FUNCTION_40	ELSE_1	IF_2
0x40024d2	      0xb8ffffff7f	                     mov eax, 0x7fffffff	      1590	move.c	FUNCTION_40	ELSE_1	IF_2
0x40024d7	    0x488b3d000000	            mov rdi, qword [0x040024de] 	      1953	move.c	FUNCTION_45	WHILE_1	IF_12	IF_13
0x40024de	             0x1c3	                            add ebx, eax	      1952	move.c	FUNCTION_45	WHILE_1	IF_12
0x40024e0	    0x486397a00000	         movsxd rdx, dword [rdi + 0xa0] 	      1953	move.c	FUNCTION_45	WHILE_1	IF_12	IF_13
0x40024e7	            0x39d3	                            cmp ebx, edx	      1953	move.c	FUNCTION_45	WHILE_1	IF_12	IF_13
0x40024e9	     0xf8fc1030000	                            jg 0x40028b0	      1953	move.c	FUNCTION_45	WHILE_1	IF_12	IF_13
0x40024ef	    0x8b1500000000	            mov edx, dword [0x040024f5] 	      1957	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x40024f5	          0x4963f5	                        movsxd rsi, r13d	      1955	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x40024f8	    0x488b0d000000	            mov rcx, qword [0x040024ff] 	      1957	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x40024ff	            0x85d2	                           test edx, edx	      1957	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x4002501	            0x7e06	                           jle 0x4002509	      1957	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x4002503	          0x83ea01	                              sub edx, 1	      1957	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x4002506	          0x4863ca	                         movsxd rcx, edx	      1957	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x4002509	          0x4439f5	                           cmp ebp, r14d	      1959	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x400250c	     0xf8cfe010000	                            jl 0x4002710	      1959	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x4002512	          0x4839f1	                            cmp rcx, rsi	      1959	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x4002515	     0xf8ff5010000	                            jg 0x4002710	      1959	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x400251b	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      1959	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x4002520	        0x4883fe01	                              cmp rsi, 1	      1904	move.c	FUNCTION_45	WHILE_1
0x4002524	     0xf8f68feffff	                            jg 0x4002392	      1904	move.c	FUNCTION_45	WHILE_1
0x400252a	          0x4531e4	                          xor r12d, r12d	      1984	move.c	FUNCTION_45	IF_17
0x400252d	            0x85ed	                           test ebp, ebp	      1983	move.c	FUNCTION_45	IF_17
0x400252f	    0x486397a00000	         movsxd rdx, dword [rdi + 0xa0] 	      1983	move.c	FUNCTION_45	IF_17
0x4002536	     0xf8ec4000000	                           jle 0x4002600	      1983	move.c	FUNCTION_45	IF_17
0x400253c	            0x39d3	                            cmp ebx, edx	      1986	move.c	FUNCTION_45	ELSE_3	IF_18
0x400253e	     0xf8f77030000	                            jg 0x40028bb	      1986	move.c	FUNCTION_45	ELSE_3	IF_18
0x4002544	    0x8b8784000000	            mov eax, dword [rdi + 0x84] 	      1993	move.c	FUNCTION_45	ELSE_4
0x400254a	          0x4531e4	                          xor r12d, r12d	      1991	move.c	FUNCTION_45	ELSE_4
0x400254d	            0x31db	                            xor ebx, ebx	      1996	move.c	FUNCTION_45	ELSE_4	FOR_2
0x400254f	        0x89442448	             mov dword [rsp + 0x48], eax	      1993	move.c	FUNCTION_45	ELSE_4
0x4002553	        0x488b4778	            mov rax, qword [rdi + 0x78] 	      1995	move.c	FUNCTION_45	ELSE_4
0x4002557	        0x488d70ff	                      lea rsi, [rax - 1]	      1995	move.c	FUNCTION_45	ELSE_4
0x400255b	      0x4889742440	             mov qword [rsp + 0x40], rsi	      1995	move.c	FUNCTION_45	ELSE_4
0x4002560	            0xeb4f	                           jmp 0x40025b1	      1995	move.c	FUNCTION_45	ELSE_4
0x4002562	    0x660f1f440000	                    nop word [rax + rax]	      1995	move.c	FUNCTION_45	ELSE_4
0x4002568	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      1585	move.c	FUNCTION_40	ELSE_1
0x400256d	    0xc74424480000	               mov dword [rsp + 0x48], 0	      1587	move.c	FUNCTION_40	ELSE_1
0x4002575	        0x488d7801	                      lea rdi, [rax + 1]	      1585	move.c	FUNCTION_40	ELSE_1
0x4002579	    0x488b05000000	            mov rax, qword [0x04002580] 	      1589	move.c	FUNCTION_40	ELSE_1	IF_2
0x4002580	      0x48897c2440	             mov qword [rsp + 0x40], rdi	      1585	move.c	FUNCTION_40	ELSE_1
0x4002585	          0x483b38	                    cmp rdi, qword [rax]	      1589	move.c	FUNCTION_40	ELSE_1	IF_2
0x4002588	     0xf8eba020000	                           jle 0x4002848	      1589	move.c	FUNCTION_40	ELSE_1	IF_2
0x400258e	    0xc744244cffff	     mov dword [rsp + 0x4c], 0x7fffffff 	      1590	move.c	FUNCTION_40	ELSE_1	IF_2
0x4002596	      0xb8ffffff7f	                     mov eax, 0x7fffffff	      1590	move.c	FUNCTION_40	ELSE_1	IF_2
0x400259b	             0x1c3	                            add ebx, eax	      1999	move.c	FUNCTION_45	ELSE_4	FOR_2
0x400259d	        0x4983c401	                              add r12, 1	      2000	move.c	FUNCTION_45	ELSE_4	FOR_2
0x40025a1	            0x39dd	                            cmp ebp, ebx	      1996	move.c	FUNCTION_45	ELSE_4	FOR_2
0x40025a3	            0x7e48	                           jle 0x40025ed	      1996	move.c	FUNCTION_45	ELSE_4	FOR_2
0x40025a5	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	      1996	move.c	FUNCTION_45	ELSE_4	FOR_2
0x40025aa	    0x488b3d000000	            mov rdi, qword [0x040025b1] 	      1996	move.c	FUNCTION_45	ELSE_4	FOR_2
0x40025b1	    0x4839b7e80000	            cmp qword [rdi + 0xe8], rsi 	      1996	move.c	FUNCTION_45	ELSE_4	FOR_2
0x40025b8	     0xf8e62030000	                           jle 0x4002920	      1996	move.c	FUNCTION_45	ELSE_4	FOR_2
0x40025be	      0x448b6c2448	           mov r13d, dword [rsp + 0x48] 	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x40025c3	        0x4883c601	                              add rsi, 1	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x40025c7	      0xe800000000	                          call 0x40025cc	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x40025cc	          0x4139c5	                           cmp r13d, eax	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x40025cf	            0x7d97	                           jge 0x4002568	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x40025d1	      0xb801000000	                              mov eax, 1	      1580	move.c	FUNCTION_40	IF_1
0x40025d6	      0x8344244801	               add dword [rsp + 0x48], 1	      1579	move.c	FUNCTION_40	IF_1
0x40025db	        0x4983c401	                              add r12, 1	      2000	move.c	FUNCTION_45	ELSE_4	FOR_2
0x40025df	             0x1c3	                            add ebx, eax	      1999	move.c	FUNCTION_45	ELSE_4	FOR_2
0x40025e1	    0xc744244c0100	               mov dword [rsp + 0x4c], 1	      1580	move.c	FUNCTION_40	IF_1
0x40025e9	            0x39dd	                            cmp ebp, ebx	      1996	move.c	FUNCTION_45	ELSE_4	FOR_2
0x40025eb	            0x7fb8	                            jg 0x40025a5	      1996	move.c	FUNCTION_45	ELSE_4	FOR_2
0x40025ed	    0x488b05000000	            mov rax, qword [0x040025f4] 	      1996	move.c	FUNCTION_45	ELSE_4	FOR_2
0x40025f4	    0x486390a00000	         movsxd rdx, dword [rax + 0xa0] 	      1996	move.c	FUNCTION_45	ELSE_4	FOR_2
0x40025fb	       0xf1f440000	                   nop dword [rax + rax]	      1996	move.c	FUNCTION_45	ELSE_4	FOR_2
0x4002600	          0x4939d4	                            cmp r12, rdx	      2010	move.c	FUNCTION_45	IF_20
0x4002603	            0x7c09	                            jl 0x400260e	      2010	move.c	FUNCTION_45	IF_20
0x4002605	          0x4d39f4	                            cmp r12, r14	      2010	move.c	FUNCTION_45	IF_20
0x4002608	     0xf8fea020000	                            jg 0x40028f8	      2010	move.c	FUNCTION_45	IF_20
0x400260e	      0xbe01000000	                              mov esi, 1	      2013	move.c	FUNCTION_45	CALL_12
0x4002613	          0x4c89e7	                            mov rdi, r12	      2013	move.c	FUNCTION_45	CALL_12
0x4002616	      0xe800000000	                          call 0x400261b	      2013	move.c	FUNCTION_45	CALL_12
0x400261b	    0x488b05000000	            mov rax, qword [0x04002622] 	      2020	move.c	FUNCTION_45	IF_21
0x4002622	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      2020	move.c	FUNCTION_45	IF_21
0x4002627	        0x48394878	            cmp qword [rax + 0x78], rcx 	      2020	move.c	FUNCTION_45	IF_21
0x400262b	     0xf8597020000	                           jne 0x40028c8	      2020	move.c	FUNCTION_45	IF_21
0x4002631	        0x8b542428	            mov edx, dword [rsp + 0x28] 	      2020	move.c	FUNCTION_45	IF_21
0x4002635	            0x85d2	                           test edx, edx	      2020	move.c	FUNCTION_45	IF_21
0x4002637	     0xf848b020000	                            je 0x40028c8	      2020	move.c	FUNCTION_45	IF_21
0x400263d	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      2022	move.c	FUNCTION_45	IF_21
0x4002642	        0x8b542414	            mov edx, dword [rsp + 0x14] 	      2022	move.c	FUNCTION_45	IF_21
0x4002646	    0x488988e80000	             mov qword [rax + 0xe8], rcx	      2022	move.c	FUNCTION_45	IF_21
0x400264d	        0x8b4c242c	            mov ecx, dword [rsp + 0x2c] 	      2023	move.c	FUNCTION_45	IF_21
0x4002651	    0x8988f0000000	             mov dword [rax + 0xf0], ecx	      2023	move.c	FUNCTION_45	IF_21
0x4002657	          0x80ca80	                             or dl, 0x80	      2026	move.c	FUNCTION_45
0x400265a	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      2026	move.c	FUNCTION_45
0x4002660	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      2027	move.c	FUNCTION_45
0x4002665	    0x644833042528	                xor rax, qword fs:[0x28]	      2027	move.c	FUNCTION_45
0x400266e	     0xf8593030000	                           jne 0x4002a07	      2027	move.c	FUNCTION_45
0x4002674	        0x4883c468	                           add rsp, 0x68	      2027	move.c	FUNCTION_45
0x4002678	              0x5b	                                 pop rbx	      2027	move.c	FUNCTION_45
0x4002679	              0x5d	                                 pop rbp	      2027	move.c	FUNCTION_45
0x400267a	            0x415c	                                 pop r12	      2027	move.c	FUNCTION_45
0x400267c	            0x415d	                                 pop r13	      2027	move.c	FUNCTION_45
0x400267e	            0x415e	                                 pop r14	      2027	move.c	FUNCTION_45
0x4002680	            0x415f	                                 pop r15	      2027	move.c	FUNCTION_45
0x4002682	              0xc3	                                     ret	      2027	move.c	FUNCTION_45
0x4002683	       0xf1f440000	                   nop dword [rax + rax]	      2027	move.c	FUNCTION_45
0x4002688	      0x448b642438	           mov r12d, dword [rsp + 0x38] 	      2027	move.c	FUNCTION_45
0x400268d	      0xe800000000	                          call 0x4002692	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x4002692	          0x4439e0	                           cmp eax, r12d	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x4002695	     0xf8e4cfdffff	                           jle 0x40023e7	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x400269b	      0x8344243801	               add dword [rsp + 0x38], 1	      1543	move.c	FUNCTION_39	IF_1
0x40026a0	    0xc744243c0100	               mov dword [rsp + 0x3c], 1	      1544	move.c	FUNCTION_39	IF_1
0x40026a8	      0xe975fdffff	                           jmp 0x4002422	      1544	move.c	FUNCTION_39	IF_1
0x40026ad	           0xf1f00	                         nop dword [rax]	      1544	move.c	FUNCTION_39	IF_1
0x40026b0	    0x8b0500000000	            mov eax, dword [0x040026b6] 	      1911	move.c	FUNCTION_45	WHILE_1	IF_7
0x40026b6	          0x4963cd	                        movsxd rcx, r13d	      1909	move.c	FUNCTION_45	WHILE_1	IF_7
0x40026b9	    0x488b15000000	            mov rdx, qword [0x040026c0] 	      1911	move.c	FUNCTION_45	WHILE_1	IF_7
0x40026c0	            0x85c0	                           test eax, eax	      1911	move.c	FUNCTION_45	WHILE_1	IF_7
0x40026c2	            0x7e06	                           jle 0x40026ca	      1911	move.c	FUNCTION_45	WHILE_1	IF_7
0x40026c4	          0x83e801	                              sub eax, 1	      1911	move.c	FUNCTION_45	WHILE_1	IF_7
0x40026c7	          0x4863d0	                         movsxd rdx, eax	      1911	move.c	FUNCTION_45	WHILE_1	IF_7
0x40026ca	          0x4839ca	                            cmp rdx, rcx	      1909	move.c	FUNCTION_45	WHILE_1	IF_7
0x40026cd	     0xf8ee5fcffff	                           jle 0x40023b8	      1909	move.c	FUNCTION_45	WHILE_1	IF_7
0x40026d3	      0xe9cbfcffff	                           jmp 0x40023a3	      1909	move.c	FUNCTION_45	WHILE_1	IF_7
0x40026d8	     0xf1f84000000	                   nop dword [rax + rax]	      1909	move.c	FUNCTION_45	WHILE_1	IF_7
0x40026e0	             0x1c5	                            add ebp, eax	      1939	move.c	FUNCTION_45	WHILE_1	IF_10
0x40026e2	      0xe991fdffff	                           jmp 0x4002478	      1939	move.c	FUNCTION_45	WHILE_1	IF_10
0x40026e7	    0x660f1f840000	                    nop word [rax + rax]	      1939	move.c	FUNCTION_45	WHILE_1	IF_10
0x40026f0	    0xc744243cffff	     mov dword [rsp + 0x3c], 0x7fffffff 	      1554	move.c	FUNCTION_39	ELSE_1	IF_2
0x40026f8	      0xb8ffffff7f	                     mov eax, 0x7fffffff	      1925	move.c	FUNCTION_45	WHILE_1	IF_8
0x40026fd	      0xbbffffff7f	                     mov ebx, 0x7fffffff	      1926	move.c	FUNCTION_45	WHILE_1	IF_8
0x4002702	      0xe922fdffff	                           jmp 0x4002429	      1926	move.c	FUNCTION_45	WHILE_1	IF_8
0x4002707	    0x660f1f840000	                    nop word [rax + rax]	      1926	move.c	FUNCTION_45	WHILE_1	IF_8
0x4002710	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	      1962	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4002715	    0x488b8fe80000	            mov rcx, qword [rdi + 0xe8] 	      1962	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x400271c	          0x4101c5	                           add r13d, eax	      1961	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14
0x400271f	          0x4839ca	                            cmp rdx, rcx	      1962	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4002722	            0x7d6c	                           jge 0x4002790	      1962	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4002724	        0x4883c201	                              add rdx, 1	      1964	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4002728	          0x4839d1	                            cmp rcx, rdx	      1964	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x400272b	     0xf85eafdffff	                           jne 0x400251b	      1964	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4002731	    0x8b8ff4000000	            mov ecx, dword [rdi + 0xf4] 	      1965	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4002737	        0x394c2448	            cmp dword [rsp + 0x48], ecx 	      1965	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x400273b	     0xf8edafdffff	                           jle 0x400251b	      1965	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4002741	             0x1c5	                            add ebp, eax	      1970	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4002743	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      1970	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4002748	      0xe93bfcffff	                           jmp 0x4002388	      1970	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x400274d	           0xf1f00	                         nop dword [rax]	      1970	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4002750	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4002755	      0xe800000000	                          call 0x400275a	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x400275a	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      1925	move.c	FUNCTION_45	WHILE_1	IF_8
0x400275f	        0x8944243c	             mov dword [rsp + 0x3c], eax	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4002763	     0xf85befcffff	                           jne 0x4002427	      1925	move.c	FUNCTION_45	WHILE_1	IF_8
0x4002769	      0xbbffffff7f	                     mov ebx, 0x7fffffff	      1926	move.c	FUNCTION_45	WHILE_1	IF_8
0x400276e	      0xe9b6fcffff	                           jmp 0x4002429	      1926	move.c	FUNCTION_45	WHILE_1	IF_8
0x4002773	       0xf1f440000	                   nop dword [rax + rax]	      1926	move.c	FUNCTION_45	WHILE_1	IF_8
0x4002778	      0x8344244801	               add dword [rsp + 0x48], 1	      1579	move.c	FUNCTION_40	IF_1
0x400277d	    0xc744244c0100	               mov dword [rsp + 0x4c], 1	      1580	move.c	FUNCTION_40	IF_1
0x4002785	      0xb801000000	                              mov eax, 1	      1580	move.c	FUNCTION_40	IF_1
0x400278a	      0xe948fdffff	                           jmp 0x40024d7	      1580	move.c	FUNCTION_40	IF_1
0x400278f	              0x90	                                     nop	      1580	move.c	FUNCTION_40	IF_1
0x4002790	             0x1c5	                            add ebp, eax	      1970	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15
0x4002792	          0x4839ca	                            cmp rdx, rcx	      1971	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15	IF_16
0x4002795	     0xf8580fdffff	                           jne 0x400251b	      1971	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15	IF_16
0x400279b	        0x8b4c2448	            mov ecx, dword [rsp + 0x48] 	      1973	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15	IF_16
0x400279f	            0x85c9	                           test ecx, ecx	      1973	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15	IF_16
0x40027a1	     0xf8574fdffff	                           jne 0x400251b	      1973	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15	IF_16
0x40027a7	    0x2baff0000000	             sub ebp, dword [rdi + 0xf0]	      1976	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15	IF_16
0x40027ad	      0xe969fdffff	                           jmp 0x400251b	      1976	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15	IF_16
0x40027b2	    0x660f1f440000	                    nop word [rax + rax]	      1976	move.c	FUNCTION_45	WHILE_1	IF_12	IF_14	IF_15	IF_16
0x40027b8	      0x488d542440	                   lea rdx, [rsp + 0x40]	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x40027bd	            0x31f6	                            xor esi, esi	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x40027bf	      0xe800000000	                          call 0x40027c4	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x40027c4	            0x85c0	                           test eax, eax	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x40027c6	     0xf84cc000000	                            je 0x4002898	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x40027cc	    0xc744244c0100	               mov dword [rsp + 0x4c], 1	      1595	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3
0x40027d4	      0xb801000000	                              mov eax, 1	      1595	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3
0x40027d9	      0xe9f9fcffff	                           jmp 0x40024d7	      1595	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3
0x40027de	            0x6690	                                     nop	      1595	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3
0x40027e0	    0x4c8b2d000000	            mov r13, qword [0x040027e7] 	      1595	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3
0x40027e7	    0xc744243cffff	     mov dword [rsp + 0x3c], 0x7fffffff 	      1554	move.c	FUNCTION_39	ELSE_1	IF_2
0x40027ef	            0x85db	                           test ebx, ebx	      1785	move.c	FUNCTION_44	IF_1
0x40027f1	    0x41c785f40000	               mov dword [r13 + 0xf4], 0	      1783	move.c	FUNCTION_44
0x40027fc	     0xf8546010000	                           jne 0x4002948	      1785	move.c	FUNCTION_44	IF_1
0x4002802	    0x418b85b40000	            mov eax, dword [r13 + 0xb4] 	      1785	move.c	FUNCTION_44	IF_1
0x4002809	        0x498b7578	            mov rsi, qword [r13 + 0x78] 	      1785	move.c	FUNCTION_44	IF_1
0x400280d	    0x41c785f00000	               mov dword [r13 + 0xf0], 0	      1786	move.c	FUNCTION_44	IF_1
0x4002818	            0x89c2	                            mov edx, eax	      1854	move.c	FUNCTION_45	IF_1
0x400281a	          0x83ca60	                            or edx, 0x60	      1854	move.c	FUNCTION_45	IF_1
0x400281d	      0x4839742418	            cmp qword [rsp + 0x18], rsi 	      1855	move.c	FUNCTION_45	IF_1	IF_3
0x4002822	    0x418995b40000	             mov dword [r13 + 0xb4], edx	      1854	move.c	FUNCTION_45	IF_1
0x4002829	     0xf8453010000	                            je 0x4002982	      1855	move.c	FUNCTION_45	IF_1	IF_3
0x400282f	          0x83e0ee	                     and eax, 0xffffffee	      1860	move.c	FUNCTION_45	IF_1	IF_3
0x4002832	          0x83c860	                            or eax, 0x60	      1860	move.c	FUNCTION_45	IF_1	IF_3
0x4002835	    0x418985b40000	             mov dword [r13 + 0xb4], eax	      1860	move.c	FUNCTION_45	IF_1	IF_3
0x400283c	      0xe9c4faffff	                           jmp 0x4002305	      1860	move.c	FUNCTION_45	IF_1	IF_3
0x4002841	     0xf1f80000000	                         nop dword [rax]	      1860	move.c	FUNCTION_45	IF_1	IF_3
0x4002848	      0x488d542440	                   lea rdx, [rsp + 0x40]	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x400284d	            0x31f6	                            xor esi, esi	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x400284f	      0xe800000000	                          call 0x4002854	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4002854	            0x85c0	                           test eax, eax	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4002856	     0xf8484000000	                            je 0x40028e0	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x400285c	    0xc744244c0100	               mov dword [rsp + 0x4c], 1	      1595	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3
0x4002864	      0xb801000000	                              mov eax, 1	      1595	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3
0x4002869	      0xe92dfdffff	                           jmp 0x400259b	      1595	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3
0x400286e	            0x6690	                                     nop	      1595	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3
0x4002870	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4002875	      0xe800000000	                          call 0x400287a	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x400287a	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      1846	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x400287f	        0x8944243c	             mov dword [rsp + 0x3c], eax	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4002883	     0xf8507faffff	                           jne 0x4002290	      1846	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x4002889	    0x4c8b2d000000	            mov r13, qword [0x04002890] 	      1846	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x4002890	      0xe95affffff	                           jmp 0x40027ef	      1846	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x4002895	           0xf1f00	                         nop dword [rax]	      1846	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x4002898	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x400289d	      0xe800000000	                          call 0x40028a2	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x40028a2	        0x8944244c	             mov dword [rsp + 0x4c], eax	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x40028a6	      0xe92cfcffff	                           jmp 0x40024d7	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x40028ab	       0xf1f440000	                   nop dword [rax + rax]	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x40028b0	          0x4531e4	                          xor r12d, r12d	      1984	move.c	FUNCTION_45	IF_17
0x40028b3	            0x85ed	                           test ebp, ebp	      1983	move.c	FUNCTION_45	IF_17
0x40028b5	     0xf8e45fdffff	                           jle 0x4002600	      1983	move.c	FUNCTION_45	IF_17
0x40028bb	          0x4c63e3	                         movsxd r12, ebx	      1987	move.c	FUNCTION_45	ELSE_3	IF_18
0x40028be	      0xe93dfdffff	                           jmp 0x4002600	      1987	move.c	FUNCTION_45	ELSE_3	IF_18
0x40028c3	       0xf1f440000	                   nop dword [rax + rax]	      1987	move.c	FUNCTION_45	ELSE_3	IF_18
0x40028c8	    0x8b88b4000000	            mov ecx, dword [rax + 0xb4] 	      1987	move.c	FUNCTION_45	ELSE_3	IF_18
0x40028ce	        0x894c2414	             mov dword [rsp + 0x14], ecx	      1987	move.c	FUNCTION_45	ELSE_3	IF_18
0x40028d2	            0x89ca	                            mov edx, ecx	      1987	move.c	FUNCTION_45	ELSE_3	IF_18
0x40028d4	      0xe97efdffff	                           jmp 0x4002657	      1987	move.c	FUNCTION_45	ELSE_3	IF_18
0x40028d9	     0xf1f80000000	                         nop dword [rax]	      1987	move.c	FUNCTION_45	ELSE_3	IF_18
0x40028e0	      0x488b7c2440	            mov rdi, qword [rsp + 0x40] 	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x40028e5	      0xe800000000	                          call 0x40028ea	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x40028ea	        0x8944244c	             mov dword [rsp + 0x4c], eax	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x40028ee	      0xe9a8fcffff	                           jmp 0x400259b	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x40028f3	       0xf1f440000	                   nop dword [rax + rax]	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x40028f8	            0x31ff	                            xor edi, edi	      2011	move.c	FUNCTION_45	CALL_11
0x40028fa	      0xe800000000	                          call 0x40028ff	      2011	move.c	FUNCTION_45	CALL_11
0x40028ff	      0xe917fdffff	                           jmp 0x400261b	      2011	move.c	FUNCTION_45	CALL_11
0x4002904	          0x4c89ef	                            mov rdi, r13	       591	move.c	FUNCTION_16	CALL_1
0x4002907	      0xe8d4d9ffff	                   call sym.comp_botline	       591	move.c	FUNCTION_16	CALL_1
0x400290c	      0xe9f4f9ffff	                           jmp 0x4002305	       591	move.c	FUNCTION_16	CALL_1
0x4002911	    0x2ba8f0000000	             sub ebp, dword [rax + 0xf0]	      1880	move.c	FUNCTION_45	IF_4	IF_5
0x4002917	      0xe90dfaffff	                           jmp 0x4002329	      1880	move.c	FUNCTION_45	IF_4	IF_5
0x400291c	         0xf1f4000	                         nop dword [rax]	      1880	move.c	FUNCTION_45	IF_4	IF_5
0x4002920	    0x486397a00000	         movsxd rdx, dword [rdi + 0xa0] 	      1880	move.c	FUNCTION_45	IF_4	IF_5
0x4002927	    0x41bc0f270000	                        mov r12d, 0x270f	      2003	move.c	FUNCTION_45	ELSE_4	IF_19
0x400292d	      0xe9cefcffff	                           jmp 0x4002600	      2003	move.c	FUNCTION_45	ELSE_4	IF_19
0x4002932	          0x4989fd	                            mov r13, rdi	      2003	move.c	FUNCTION_45	ELSE_4	IF_19
0x4002935	            0x85db	                           test ebx, ebx	      1785	move.c	FUNCTION_44	IF_1
0x4002937	    0x41c785f40000	               mov dword [r13 + 0xf4], 0	      1783	move.c	FUNCTION_44
0x4002942	     0xf84bafeffff	                            je 0x4002802	      1785	move.c	FUNCTION_44	IF_1
0x4002948	    0x418b85a00000	            mov eax, dword [r13 + 0xa0] 	      1789	move.c	FUNCTION_44	ELSE_1
0x400294f	    0x498bb5e80000	            mov rsi, qword [r13 + 0xe8] 	      1791	move.c	FUNCTION_44	ELSE_1	IF_2
0x4002956	            0x29d8	                            sub eax, ebx	      1789	move.c	FUNCTION_44	ELSE_1
0x4002958	    0x418985f00000	             mov dword [r13 + 0xf0], eax	      1789	move.c	FUNCTION_44	ELSE_1
0x400295f	        0x498b4508	                mov rax, qword [r13 + 8]	      1791	move.c	FUNCTION_44	ELSE_1	IF_2
0x4002963	          0x483b30	                    cmp rsi, qword [rax]	      1791	move.c	FUNCTION_44	ELSE_1	IF_2
0x4002966	            0x7e2c	                           jle 0x4002994	      1791	move.c	FUNCTION_44	ELSE_1	IF_2
0x4002968	    0x418b85b40000	            mov eax, dword [r13 + 0xb4] 	      1791	move.c	FUNCTION_44	ELSE_1	IF_2
0x400296f	        0x498b7578	            mov rsi, qword [r13 + 0x78] 	      1791	move.c	FUNCTION_44	ELSE_1	IF_2
0x4002973	      0xe9a0feffff	                           jmp 0x4002818	      1791	move.c	FUNCTION_44	ELSE_1	IF_2
0x4002978	          0x4989fd	                            mov r13, rdi	      1791	move.c	FUNCTION_44	ELSE_1	IF_2
0x400297b	            0x89c3	                            mov ebx, eax	      1846	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x400297d	      0xe96dfeffff	                           jmp 0x40027ef	      1846	move.c	FUNCTION_45	IF_1	FOR_1	IF_2
0x4002982	    0x413bad840000	            cmp ebp, dword [r13 + 0x84] 	      1857	move.c	FUNCTION_45	IF_1	IF_3
0x4002989	     0xf85a0feffff	                           jne 0x400282f	      1857	move.c	FUNCTION_45	IF_1	IF_3
0x400298f	      0xe971f9ffff	                           jmp 0x4002305	      1857	move.c	FUNCTION_45	IF_1	IF_3
0x4002994	          0x4c89ef	                            mov rdi, r13	      1793	move.c	FUNCTION_44	ELSE_1	IF_2	CALL_1
0x4002997	      0xe800000000	                          call 0x400299c	      1793	move.c	FUNCTION_44	ELSE_1	IF_2	CALL_1
0x400299c	    0x418b95f00000	            mov edx, dword [r13 + 0xf0] 	      1794	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x40029a3	    0x418985f40000	             mov dword [r13 + 0xf4], eax	      1793	move.c	FUNCTION_44	ELSE_1	IF_2	CALL_1
0x40029aa	            0x39d0	                            cmp eax, edx	      1794	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x40029ac	            0x7c1b	                            jl 0x40029c9	      1794	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x40029ae	    0x418995f40000	             mov dword [r13 + 0xf4], edx	      1798	move.c	FUNCTION_44	ELSE_1	IF_2	ELSE_2
0x40029b5	    0x41c785f00000	               mov dword [r13 + 0xf0], 0	      1799	move.c	FUNCTION_44	ELSE_1	IF_2	ELSE_2
0x40029c0	    0x4c8b2d000000	            mov r13, qword [0x040029c7] 	      1799	move.c	FUNCTION_44	ELSE_1	IF_2	ELSE_2
0x40029c7	            0xeb9f	                           jmp 0x4002968	      1799	move.c	FUNCTION_44	ELSE_1	IF_2	ELSE_2
0x40029c9	            0x29c2	                            sub edx, eax	      1795	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x40029cb	    0x418995f00000	             mov dword [r13 + 0xf0], edx	      1795	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x40029d2	    0x4c8b2d000000	            mov r13, qword [0x040029d9] 	      1795	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x40029d9	    0x418b85b40000	            mov eax, dword [r13 + 0xb4] 	      1795	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x40029e0	        0x498b7578	            mov rsi, qword [r13 + 0x78] 	      1795	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x40029e4	      0xe92ffeffff	                           jmp 0x4002818	      1795	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x40029e9	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	      1795	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x40029ee	    0x41c785f40000	               mov dword [r13 + 0xf4], 0	      1783	move.c	FUNCTION_44
0x40029f9	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      1828	move.c	FUNCTION_45
0x40029fd	      0x48894c2408	                mov qword [rsp + 8], rcx	      1828	move.c	FUNCTION_45
0x4002a02	      0xe906feffff	                           jmp 0x400280d	      1828	move.c	FUNCTION_45
0x4002a07	      0xe800000000	                          call 0x4002a0c	      2027	move.c	FUNCTION_45
update_topline_redraw	SWITCH,0:WHILE,0:ELSE,0:functions,0:FOR,0:CALL,2:IF,1:DO,0	425
0x4004250	            0x4157	                                push r15	       152	move.c	FUNCTION_3
0x4004252	            0x4156	                                push r14	       152	move.c	FUNCTION_3
0x4004254	      0xbf01000000	                              mov edi, 1	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x4004259	            0x4155	                                push r13	       152	move.c	FUNCTION_3
0x400425b	            0x4154	                                push r12	       152	move.c	FUNCTION_3
0x400425d	              0x55	                                push rbp	       152	move.c	FUNCTION_3
0x400425e	              0x53	                                push rbx	       152	move.c	FUNCTION_3
0x400425f	        0x4883ec38	                           sub rsp, 0x38	       152	move.c	FUNCTION_3
0x4004263	    0x488b1d000000	            mov rbx, qword [0x0400426a] 	       177	move.c	FUNCTION_4
0x400426a	    0x64488b042528	                mov rax, qword fs:[0x28]	       152	move.c	FUNCTION_3
0x4004273	      0x4889442428	             mov qword [rsp + 0x28], rax	       152	move.c	FUNCTION_3
0x4004278	            0x31c0	                            xor eax, eax	       152	move.c	FUNCTION_3
0x400427a	      0xe800000000	                          call 0x400427f	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x400427f	            0x85c0	                           test eax, eax	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x4004281	    0x488b3d000000	            mov rdi, qword [0x04004288] 	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x4004288	            0x740c	                            je 0x4004296	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x400428a	    0x448b8fa00000	            mov r9d, dword [rdi + 0xa0] 	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x4004291	          0x4585c9	                           test r9d, r9d	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x4004294	            0x755a	                           jne 0x40042f0	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x4004296	        0x488b4738	            mov rax, qword [rdi + 0x38] 	       184	move.c	FUNCTION_4	IF_1
0x400429a	    0x838fb4000000	            or dword [rdi + 0xb4], 0x60 	       186	move.c	FUNCTION_4	IF_1
0x40042a1	    0x48c787500500	              mov qword [rdi + 0x550], 1	       187	move.c	FUNCTION_4	IF_1
0x40042ac	        0x48894778	             mov qword [rdi + 0x78], rax	       184	move.c	FUNCTION_4	IF_1
0x40042b0	    0x488987e80000	             mov qword [rdi + 0xe8], rax	       185	move.c	FUNCTION_4	IF_1
0x40042b7	    0x8b0500000000	            mov eax, dword [0x040042bd] 	       154	move.c	FUNCTION_3	IF_1
0x40042bd	            0x85c0	                           test eax, eax	       154	move.c	FUNCTION_3	IF_1
0x40042bf	            0x7407	                            je 0x40042c8	       154	move.c	FUNCTION_3	IF_1
0x40042c1	            0x31ff	                            xor edi, edi	       155	move.c	FUNCTION_3	CALL_2
0x40042c3	      0xe800000000	                          call 0x40042c8	       155	move.c	FUNCTION_3	CALL_2
0x40042c8	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       156	move.c	FUNCTION_3
0x40042cd	    0x644833042528	                xor rax, qword fs:[0x28]	       156	move.c	FUNCTION_3
0x40042d6	     0xf8533070000	                           jne 0x4004a0f	       156	move.c	FUNCTION_3
0x40042dc	        0x4883c438	                           add rsp, 0x38	       156	move.c	FUNCTION_3
0x40042e0	              0x5b	                                 pop rbx	       156	move.c	FUNCTION_3
0x40042e1	              0x5d	                                 pop rbp	       156	move.c	FUNCTION_3
0x40042e2	            0x415c	                                 pop r12	       156	move.c	FUNCTION_3
0x40042e4	            0x415d	                                 pop r13	       156	move.c	FUNCTION_3
0x40042e6	            0x415e	                                 pop r14	       156	move.c	FUNCTION_3
0x40042e8	            0x415f	                                 pop r15	       156	move.c	FUNCTION_3
0x40042ea	              0xc3	                                     ret	       156	move.c	FUNCTION_3
0x40042eb	       0xf1f440000	                   nop dword [rax + rax]	       156	move.c	FUNCTION_3
0x40042f0	    0x488b87b80000	            mov rax, qword [rdi + 0xb8] 	       481	move.c	FUNCTION_8	IF_1
0x40042f7	        0x48394738	            cmp qword [rdi + 0x38], rax 	       481	move.c	FUNCTION_8	IF_1
0x40042fb	     0xf8457010000	                            je 0x4004458	       481	move.c	FUNCTION_8	IF_1
0x4004301	    0x8b87b4000000	            mov eax, dword [rdi + 0xb4] 	       483	move.c	FUNCTION_8	IF_1
0x4004307	        0x4c8b4f38	              mov r9, qword [rdi + 0x38]	       485	move.c	FUNCTION_8	IF_1
0x400430b	        0x4c8b5740	            mov r10, qword [rdi + 0x40] 	       485	move.c	FUNCTION_8	IF_1
0x400430f	    0x8b9794000000	            mov edx, dword [rdi + 0x94] 	       486	move.c	FUNCTION_8	IF_1
0x4004315	            0x2460	                            and al, 0x60	       483	move.c	FUNCTION_8	IF_1
0x4004317	    0x4c898fb80000	              mov qword [rdi + 0xb8], r9	       485	move.c	FUNCTION_8	IF_1
0x400431e	    0x8987b4000000	             mov dword [rdi + 0xb4], eax	       483	move.c	FUNCTION_8	IF_1
0x4004324	    0x4c8997c00000	             mov qword [rdi + 0xc0], r10	       485	move.c	FUNCTION_8	IF_1
0x400432b	    0x8997c8000000	             mov dword [rdi + 0xc8], edx	       486	move.c	FUNCTION_8	IF_1
0x4004331	            0xa880	                           test al, 0x80	       192	move.c	FUNCTION_4	IF_2
0x4004333	            0x7582	                           jne 0x40042b7	       192	move.c	FUNCTION_4	IF_2
0x4004335	    0x8b0500000000	            mov eax, dword [0x0400433b] 	       197	move.c	FUNCTION_4	IF_3
0x400433b	            0x85c0	                           test eax, eax	       197	move.c	FUNCTION_4	IF_3
0x400433d	            0x7e0c	                           jle 0x400434b	       197	move.c	FUNCTION_4	IF_3
0x400433f	          0x83e801	                              sub eax, 1	       198	move.c	FUNCTION_4	IF_3
0x4004342	            0x4898	                                    cdqe	       198	move.c	FUNCTION_4	IF_3
0x4004344	    0x488905000000	            mov qword [0x0400434b], rax 	       198	move.c	FUNCTION_4	IF_3
0x400434b	    0x488b05000000	            mov rax, qword [0x04004352] 	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x4004352	        0x4c8b6778	            mov r12, qword [rdi + 0x78] 	       201	move.c	FUNCTION_4
0x4004356	    0x448baf840000	           mov r13d, dword [rdi + 0x84] 	       203	move.c	FUNCTION_4
0x400435d	          0x488b28	                    mov rbp, qword [rax]	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x4004360	          0x4c89e6	                            mov rsi, r12	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x4004363	        0x4883fd01	                              cmp rbp, 1	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x4004367	     0xf84f7030000	                            je 0x4004764	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x400436d	        0x4883fe01	                              cmp rsi, 1	       225	move.c	FUNCTION_4	ELSE_1	IF_6
0x4004371	     0xf8e41010000	                           jle 0x40044b8	       225	move.c	FUNCTION_4	ELSE_1	IF_6
0x4004377	        0x48397738	            cmp qword [rdi + 0x38], rsi 	       230	move.c	FUNCTION_4	ELSE_1	IF_6	IF_7
0x400437b	     0xf8d1f010000	                           jge 0x40044a0	       230	move.c	FUNCTION_4	ELSE_1	IF_6	IF_7
0x4004381	    0x8b87a0000000	            mov eax, dword [rdi + 0xa0] 	       244	move.c	FUNCTION_4	ELSE_1	IF_10
0x4004387	            0x89c5	                            mov ebp, eax	       244	move.c	FUNCTION_4	ELSE_1	IF_10
0x4004389	          0xc1ed1f	                           shr ebp, 0x1f	       244	move.c	FUNCTION_4	ELSE_1	IF_10
0x400438c	             0x1e8	                            add eax, ebp	       244	move.c	FUNCTION_4	ELSE_1	IF_10
0x400438e	            0xd1f8	                              sar eax, 1	       244	move.c	FUNCTION_4	ELSE_1	IF_10
0x4004390	          0x8d68ff	                      lea ebp, [rax - 1]	       244	move.c	FUNCTION_4	ELSE_1	IF_10
0x4004393	      0xb802000000	                              mov eax, 2	       246	move.c	FUNCTION_4	ELSE_1	IF_10	IF_11
0x4004398	          0x83fd01	                              cmp ebp, 1	       246	move.c	FUNCTION_4	ELSE_1	IF_10	IF_11
0x400439b	           0xf4ee8	                         cmovle ebp, eax	       246	move.c	FUNCTION_4	ELSE_1	IF_10	IF_11
0x400439e	      0xe800000000	                          call 0x40043a3	       249	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	CALL_7
0x40043a3	            0x85c0	                           test eax, eax	       249	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	CALL_7
0x40043a5	     0xf8415030000	                            je 0x40046c0	       249	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	CALL_7
0x40043ab	    0x488b15000000	            mov rdx, qword [0x040043b2] 	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x40043b2	        0x488b4278	            mov rax, qword [rdx + 0x78] 	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x40043b6	    0x480305000000	             add rax, qword [0x040043bd]	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x40043bd	        0x488b7a38	            mov rdi, qword [rdx + 0x38] 	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x40043c1	          0x4839c7	                            cmp rdi, rax	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x40043c4	      0x48897c2408	                mov qword [rsp + 8], rdi	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x40043c9	            0x7d6e	                           jge 0x4004439	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x40043cb	    0x488b05000000	            mov rax, qword [0x040043d2] 	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x40043d2	          0x483b38	                    cmp rdi, qword [rax]	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x40043d5	            0x7d62	                           jge 0x4004439	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x40043d7	    0x41bf01000000	                             mov r15d, 1	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x40043dd	      0x4c8d742408	                      lea r14, [rsp + 8]	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x40043e2	            0xeb19	                           jmp 0x40043fd	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x40043e4	         0xf1f4000	                         nop dword [rax]	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x40043e8	    0x488b05000000	            mov rax, qword [0x040043ef] 	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x40043ef	        0x4183c701	                             add r15d, 1	       258	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x40043f3	          0x483938	                    cmp qword [rax], rdi	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x40043f6	            0x7e38	                           jle 0x4004430	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x40043f8	          0x4139ef	                           cmp r15d, ebp	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x40043fb	            0x7d33	                           jge 0x4004430	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x40043fd	          0x4c89f2	                            mov rdx, r14	       262	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	CALL_8
0x4004400	            0x31f6	                            xor esi, esi	       262	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	CALL_8
0x4004402	      0xe800000000	                          call 0x4004407	       262	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	CALL_8
0x4004407	      0x488b442408	                mov rax, qword [rsp + 8]	       256	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x400440c	    0x488b15000000	            mov rdx, qword [0x04004413] 	       256	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4004413	        0x488d7801	                      lea rdi, [rax + 1]	       256	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4004417	    0x488b05000000	            mov rax, qword [0x0400441e] 	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x400441e	        0x48034278	             add rax, qword [rdx + 0x78]	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4004422	      0x48897c2408	                mov qword [rsp + 8], rdi	       256	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4004427	          0x4839c7	                            cmp rdi, rax	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x400442a	            0x7cbc	                            jl 0x40043e8	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x400442c	         0xf1f4000	                         nop dword [rax]	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4004430	          0x4439fd	                           cmp ebp, r15d	       272	move.c	FUNCTION_4	ELSE_1	IF_10	IF_14
0x4004433	     0xf8e57020000	                           jle 0x4004690	       272	move.c	FUNCTION_4	ELSE_1	IF_10	IF_14
0x4004439	    0x488b3d000000	            mov rdi, qword [0x04004440] 	       417	move.c	FUNCTION_5	IF_1
0x4004440	          0x4885ff	                           test rdi, rdi	       417	move.c	FUNCTION_5	IF_1
0x4004443	     0xf883e030000	                            js 0x4004787	       417	move.c	FUNCTION_5	IF_1
0x4004449	            0x31f6	                            xor esi, esi	       276	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_4	CALL_11
0x400444b	      0xe800000000	                          call 0x4004450	       276	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_4	CALL_11
0x4004450	      0xe98c000000	                           jmp 0x40044e1	       276	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_4	CALL_11
0x4004455	           0xf1f00	                         nop dword [rax]	       276	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_4	CALL_11
0x4004458	          0x8b5740	            mov edx, dword [rdi + 0x40] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x400445b	    0x3b97c0000000	            cmp edx, dword [rdi + 0xc0] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004461	    0x8b8f94000000	            mov ecx, dword [rdi + 0x94] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004467	     0xf84fb010000	                            je 0x4004668	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x400446d	          0x8b7744	            mov esi, dword [rdi + 0x44] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004470	    0x8b87b4000000	            mov eax, dword [rdi + 0xb4] 	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004476	    0x8997c0000000	             mov dword [rdi + 0xc0], edx	       496	move.c	FUNCTION_8	ELSE_1	IF_2
0x400447c	    0x898fc8000000	             mov dword [rdi + 0xc8], ecx	       497	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004482	    0x89b7c4000000	             mov dword [rdi + 0xc4], esi	       499	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004488	          0x83e0f8	                     and eax, 0xfffffff8	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x400448b	    0x8987b4000000	             mov dword [rdi + 0xb4], eax	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004491	      0xe99bfeffff	                           jmp 0x4004331	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004496	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x40044a0	      0xe89bbbffff	               call sym.check_top_offset	       232	move.c	FUNCTION_4	ELSE_1	IF_6	ELSE_2	IF_8	CALL_5
0x40044a5	            0x85c0	                           test eax, eax	       232	move.c	FUNCTION_4	ELSE_1	IF_6	ELSE_2	IF_8	CALL_5
0x40044a7	    0x488b3d000000	            mov rdi, qword [0x040044ae] 	       232	move.c	FUNCTION_4	ELSE_1	IF_6	ELSE_2	IF_8	CALL_5
0x40044ae	     0xf85cdfeffff	                           jne 0x4004381	       232	move.c	FUNCTION_4	ELSE_1	IF_6	ELSE_2	IF_8	CALL_5
0x40044b4	        0x488b7778	            mov rsi, qword [rdi + 0x78] 	       232	move.c	FUNCTION_4	ELSE_1	IF_6	ELSE_2	IF_8	CALL_5
0x40044b8	    0x8baf84000000	            mov ebp, dword [rdi + 0x84] 	       237	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x40044be	      0xe800000000	                          call 0x40044c3	       237	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x40044c3	            0x39c5	                            cmp ebp, eax	       237	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x40044c5	     0xf8f8d020000	                            jg 0x4004758	       237	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x40044cb	    0x488b05000000	            mov rax, qword [0x040044d2] 	       285	move.c	FUNCTION_4	ELSE_1	ELSE_5	CALL_12
0x40044d2	            0x31d2	                            xor edx, edx	       285	move.c	FUNCTION_4	ELSE_1	ELSE_5	CALL_12
0x40044d4	        0x488b7878	            mov rdi, qword [rax + 0x78] 	       285	move.c	FUNCTION_4	ELSE_1	ELSE_5	CALL_12
0x40044d8	        0x488d7078	                   lea rsi, [rax + 0x78]	       285	move.c	FUNCTION_4	ELSE_1	ELSE_5	CALL_12
0x40044dc	      0xe800000000	                          call 0x40044e1	       285	move.c	FUNCTION_4	ELSE_1	ELSE_5	CALL_12
0x40044e1	    0x488b3d000000	            mov rdi, qword [0x040044e8] 	       301	move.c	FUNCTION_4	IF_15	IF_16
0x40044e8	    0xf687b4000000	           test byte [rdi + 0xb4], 0x60 	       590	move.c	FUNCTION_16	IF_1
0x40044ef	     0xf84fb030000	                            je 0x40048f0	       590	move.c	FUNCTION_16	IF_1
0x40044f5	    0x488b15000000	            mov rdx, qword [0x040044fc] 	       304	move.c	FUNCTION_4	IF_15	IF_17
0x40044fc	    0x488b87e80000	            mov rax, qword [rdi + 0xe8] 	       304	move.c	FUNCTION_4	IF_15	IF_17
0x4004503	          0x483b02	                    cmp rax, qword [rdx]	       304	move.c	FUNCTION_4	IF_15	IF_17
0x4004506	     0xf8f92010000	                            jg 0x400469e	       304	move.c	FUNCTION_4	IF_15	IF_17
0x400450c	        0x488b4f38	            mov rcx, qword [rdi + 0x38] 	       306	move.c	FUNCTION_4	IF_15	IF_17	IF_18
0x4004510	          0x4839c8	                            cmp rax, rcx	       306	move.c	FUNCTION_4	IF_15	IF_17	IF_18
0x4004513	     0xf8f9f020000	                            jg 0x40047b8	       306	move.c	FUNCTION_4	IF_15	IF_17	IF_18
0x4004519	      0xe800000000	                          call 0x400451e	       353	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	CALL_17
0x400451e	            0x85c0	                           test eax, eax	       353	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	CALL_17
0x4004520	    0x488b15000000	            mov rdx, qword [0x04004527] 	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4004527	     0xf8473040000	                            je 0x40049a0	       353	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	CALL_17
0x400452d	    0x488b82e80000	            mov rax, qword [rdx + 0xe8] 	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4004534	    0x482b05000000	             sub rax, qword [0x0400453b]	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x400453b	        0x488b7a38	            mov rdi, qword [rdx + 0x38] 	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x400453f	          0x4839c7	                            cmp rdi, rax	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4004542	      0x48897c2408	                mov qword [rsp + 8], rdi	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4004547	     0xf8cc7040000	                            jl 0x4004a14	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x400454d	          0x4885ff	                           test rdi, rdi	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4004550	      0xbd01000000	                              mov ebp, 1	       362	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4004555	            0x7e68	                           jle 0x40045bf	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4004557	    0x8b8aa0000000	            mov ecx, dword [rdx + 0xa0] 	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x400455d	            0x85c9	                           test ecx, ecx	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x400455f	            0x785e	                            js 0x40045bf	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4004561	      0x4c8d742408	                      lea r14, [rsp + 8]	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4004566	            0xeb25	                           jmp 0x400458d	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4004568	     0xf1f84000000	                   nop dword [rax + rax]	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4004570	        0x4883c501	                              add rbp, 1	       362	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4004574	          0x4885ff	                           test rdi, rdi	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4004577	            0x7e46	                           jle 0x40045bf	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4004579	    0x8b82a0000000	            mov eax, dword [rdx + 0xa0] 	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x400457f	          0x83c001	                              add eax, 1	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4004582	            0x4898	                                    cdqe	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4004584	          0x4839c5	                            cmp rbp, rax	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4004587	     0xf8f03010000	                            jg 0x4004690	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x400458d	            0x31d2	                            xor edx, edx	       366	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	CALL_18
0x400458f	          0x4c89f6	                            mov rsi, r14	       366	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	CALL_18
0x4004592	      0xe800000000	                          call 0x4004597	       366	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	CALL_18
0x4004597	      0x488b442408	                mov rax, qword [rsp + 8]	       360	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x400459c	    0x488b15000000	            mov rdx, qword [0x040045a3] 	       360	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x40045a3	        0x488d78ff	                      lea rdi, [rax - 1]	       360	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x40045a7	    0x488b82e80000	            mov rax, qword [rdx + 0xe8] 	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x40045ae	    0x482b05000000	             sub rax, qword [0x040045b5]	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x40045b5	      0x48897c2408	                mov qword [rsp + 8], rdi	       360	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x40045ba	          0x4839c7	                            cmp rdi, rax	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x40045bd	            0x7db1	                           jge 0x4004570	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x40045bf	    0x486382a00000	         movsxd rax, dword [rdx + 0xa0] 	       373	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_25
0x40045c6	          0x8d5001	                      lea edx, [rax + 1]	       373	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_25
0x40045c9	          0x4863d2	                         movsxd rdx, edx	       373	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_25
0x40045cc	          0x4839ea	                            cmp rdx, rbp	       373	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_25
0x40045cf	     0xf8cbb000000	                            jl 0x4004690	       373	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_25
0x40045d5	    0x488b3d000000	            mov rdi, qword [0x040045dc] 	       417	move.c	FUNCTION_5	IF_1
0x40045dc	          0x4885ff	                           test rdi, rdi	       417	move.c	FUNCTION_5	IF_1
0x40045df	     0xf88fd030000	                            js 0x40049e2	       417	move.c	FUNCTION_5	IF_1
0x40045e5	            0x31f6	                            xor esi, esi	       374	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_20
0x40045e7	      0xe800000000	                          call 0x40045ec	       374	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_20
0x40045ec	    0x488b3d000000	            mov rdi, qword [0x040045f3] 	       374	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_20
0x40045f3	    0x8b87b4000000	            mov eax, dword [rdi + 0xb4] 	       374	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_20
0x40045f9	        0x488b6f78	            mov rbp, qword [rdi + 0x78] 	       374	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_20
0x40045fd	           0xf1f00	                         nop dword [rax]	       374	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_20
0x4004600	             0xc80	                             or al, 0x80	       380	move.c	FUNCTION_4
0x4004602	          0x4939ec	                            cmp r12, rbp	       385	move.c	FUNCTION_4	IF_26
0x4004605	    0x8987b4000000	             mov dword [rdi + 0xb4], eax	       380	move.c	FUNCTION_4
0x400460b	     0xf84cf000000	                            je 0x40046e0	       385	move.c	FUNCTION_4	IF_26
0x4004611	    0x8b9798000000	            mov edx, dword [rdi + 0x98] 	       392	move.c	FUNCTION_4	IF_26	IF_27
0x4004617	    0xc70500000000	     mov dword [0x04004621], 0xffffffff 	       391	move.c	FUNCTION_4	IF_26
0x4004621	            0x85d2	                           test edx, edx	       392	move.c	FUNCTION_4	IF_26	IF_27
0x4004623	     0xf8487000000	                            je 0x40046b0	       392	move.c	FUNCTION_4	IF_26	IF_27
0x4004629	    0xc78798000000	               mov dword [rdi + 0x98], 0	       394	move.c	FUNCTION_4	IF_26	IF_27
0x4004633	      0xbf28000000	                           mov edi, 0x28	       395	move.c	FUNCTION_4	IF_26	IF_27	CALL_22
0x4004638	      0xe800000000	                          call 0x400463d	       395	move.c	FUNCTION_4	IF_26	IF_27	CALL_22
0x400463d	    0x488b05000000	            mov rax, qword [0x04004644] 	       400	move.c	FUNCTION_4	IF_26	IF_28
0x4004644	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       400	move.c	FUNCTION_4	IF_26	IF_28
0x4004648	        0x483b5078	            cmp rdx, qword [rax + 0x78] 	       400	move.c	FUNCTION_4	IF_26	IF_28
0x400464c	     0xf84a6000000	                            je 0x40046f8	       400	move.c	FUNCTION_4	IF_26	IF_28
0x4004652	          0x4863db	                         movsxd rbx, ebx	       405	move.c	FUNCTION_4
0x4004655	    0x48891d000000	            mov qword [0x0400465c], rbx 	       405	move.c	FUNCTION_4
0x400465c	      0xe956fcffff	                           jmp 0x40042b7	       405	move.c	FUNCTION_4
0x4004661	     0xf1f80000000	                         nop dword [rax]	       405	move.c	FUNCTION_4
0x4004668	    0x3b8fc8000000	            cmp ecx, dword [rdi + 0xc8] 	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x400466e	          0x8b7744	            mov esi, dword [rdi + 0x44] 	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004671	     0xf85f9fdffff	                           jne 0x4004470	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004677	    0x3bb7c4000000	            cmp esi, dword [rdi + 0xc4] 	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x400467d	     0xf85edfdffff	                           jne 0x4004470	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004683	    0x8b87b4000000	            mov eax, dword [rdi + 0xb4] 	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004689	      0xe9a3fcffff	                           jmp 0x4004331	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x400468e	            0x6690	                                     nop	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004690	            0x31ff	                            xor edi, edi	       376	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_21
0x4004692	      0xe800000000	                          call 0x4004697	       376	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_21
0x4004697	    0x488b3d000000	            mov rdi, qword [0x0400469e] 	       376	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_21
0x400469e	    0x8b87b4000000	            mov eax, dword [rdi + 0xb4] 	       376	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_21
0x40046a4	        0x488b6f78	            mov rbp, qword [rdi + 0x78] 	       376	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_21
0x40046a8	      0xe953ffffff	                           jmp 0x4004600	       376	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_21
0x40046ad	           0xf1f00	                         nop dword [rax]	       376	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_21
0x40046b0	      0xbf0a000000	                            mov edi, 0xa	       398	move.c	FUNCTION_4	IF_26	CALL_23
0x40046b5	      0xe800000000	                          call 0x40046ba	       398	move.c	FUNCTION_4	IF_26	CALL_23
0x40046ba	      0xe97effffff	                           jmp 0x400463d	       398	move.c	FUNCTION_4	IF_26	CALL_23
0x40046bf	              0x90	                                     nop	       398	move.c	FUNCTION_4	IF_26	CALL_23
0x40046c0	    0x488b15000000	            mov rdx, qword [0x040046c7] 	       267	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_3
0x40046c7	    0x4c8b3d000000	            mov r15, qword [0x040046ce] 	       267	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_3
0x40046ce	        0x44037a78	            add r15d, dword [rdx + 0x78]	       267	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_3
0x40046d2	        0x442b7a38	            sub r15d, dword [rdx + 0x38]	       267	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_3
0x40046d6	      0xe955fdffff	                           jmp 0x4004430	       267	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_3
0x40046db	       0xf1f440000	                   nop dword [rax + rax]	       267	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_3
0x40046e0	    0x443baf840000	           cmp r13d, dword [rdi + 0x84] 	       387	move.c	FUNCTION_4	IF_26
0x40046e7	     0xf8524ffffff	                           jne 0x4004611	       387	move.c	FUNCTION_4	IF_26
0x40046ed	      0xe960ffffff	                           jmp 0x4004652	       387	move.c	FUNCTION_4	IF_26
0x40046f2	    0x660f1f440000	                    nop word [rax + rax]	       387	move.c	FUNCTION_4	IF_26
0x40046f8	    0x483b90b80000	            cmp rdx, qword [rax + 0xb8] 	       481	move.c	FUNCTION_8	IF_1
0x40046ff	     0xf84fc010000	                            je 0x4004901	       481	move.c	FUNCTION_8	IF_1
0x4004705	    0x8b90b4000000	            mov edx, dword [rax + 0xb4] 	       483	move.c	FUNCTION_8	IF_1
0x400470b	        0x488b7038	            mov rsi, qword [rax + 0x38] 	       485	move.c	FUNCTION_8	IF_1
0x400470f	        0x488b7840	            mov rdi, qword [rax + 0x40] 	       485	move.c	FUNCTION_8	IF_1
0x4004713	    0x8b8894000000	            mov ecx, dword [rax + 0x94] 	       486	move.c	FUNCTION_8	IF_1
0x4004719	          0x80e260	                            and dl, 0x60	       483	move.c	FUNCTION_8	IF_1
0x400471c	    0x4889b0b80000	             mov qword [rax + 0xb8], rsi	       485	move.c	FUNCTION_8	IF_1
0x4004723	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       483	move.c	FUNCTION_8	IF_1
0x4004729	    0x4889b8c00000	             mov qword [rax + 0xc0], rdi	       485	move.c	FUNCTION_8	IF_1
0x4004730	    0x8988c8000000	             mov dword [rax + 0xc8], ecx	       486	move.c	FUNCTION_8	IF_1
0x4004736	          0x83e203	                              and edx, 3	       635	move.c	FUNCTION_21	IF_1
0x4004739	          0x83fa03	                              cmp edx, 3	       635	move.c	FUNCTION_21	IF_1
0x400473c	     0xf8410ffffff	                            je 0x4004652	       635	move.c	FUNCTION_21	IF_1
0x4004742	      0xbf01000000	                              mov edi, 1	       636	move.c	FUNCTION_21	CALL_2
0x4004747	      0xe800000000	                          call 0x400474c	       636	move.c	FUNCTION_21	CALL_2
0x400474c	      0xe901ffffff	                           jmp 0x4004652	       636	move.c	FUNCTION_21	CALL_2
0x4004751	     0xf1f80000000	                         nop dword [rax]	       636	move.c	FUNCTION_21	CALL_2
0x4004758	    0x488b3d000000	            mov rdi, qword [0x0400475f] 	       636	move.c	FUNCTION_21	CALL_2
0x400475f	      0xe91dfcffff	                           jmp 0x4004381	       636	move.c	FUNCTION_21	CALL_2
0x4004764	      0xbf01000000	                              mov edi, 1	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x4004769	      0xe800000000	                          call 0x400476e	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x400476e	          0x803800	                       cmp byte [rax], 0	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x4004771	    0x488b3d000000	            mov rdi, qword [0x04004778] 	       211	move.c	FUNCTION_4	IF_4	IF_5
0x4004778	     0xf84c1010000	                            je 0x400493f	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x400477e	        0x488b7778	            mov rsi, qword [rdi + 0x78] 	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x4004782	      0xe9e6fbffff	                           jmp 0x400436d	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x4004787	    0x48638aa00000	         movsxd rcx, dword [rdx + 0xa0] 	       419	move.c	FUNCTION_5
0x400478e	          0x48f7df	                                 neg rdi	       419	move.c	FUNCTION_5
0x4004791	    0x48ba0bd7a370	          movabs rdx, 0xa3d70a3d70a3d70b	       419	move.c	FUNCTION_5
0x400479b	        0x480fafcf	                           imul rcx, rdi	       419	move.c	FUNCTION_5
0x400479f	          0x4889c8	                            mov rax, rcx	       419	move.c	FUNCTION_5
0x40047a2	          0x48f7ea	                                imul rdx	       419	move.c	FUNCTION_5
0x40047a5	        0x488d3c0a	                    lea rdi, [rdx + rcx]	       419	move.c	FUNCTION_5
0x40047a9	        0x48c1f93f	                           sar rcx, 0x3f	       419	move.c	FUNCTION_5
0x40047ad	        0x48c1ff06	                              sar rdi, 6	       419	move.c	FUNCTION_5
0x40047b1	            0x29cf	                            sub edi, ecx	       419	move.c	FUNCTION_5
0x40047b3	      0xe991fcffff	                           jmp 0x4004449	       419	move.c	FUNCTION_5
0x40047b8	    0x482b05000000	             sub rax, qword [0x040047bf]	       308	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x40047bf	          0x4839c1	                            cmp rcx, rax	       308	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x40047c2	            0x7d18	                           jge 0x40047dc	       308	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x40047c4	      0xe800000000	                          call 0x40047c9	       311	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_14
0x40047c9	            0x85c0	                           test eax, eax	       311	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_14
0x40047cb	    0x488b3d000000	            mov rdi, qword [0x040047d2] 	       311	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_14
0x40047d2	     0xf84c6feffff	                            je 0x400469e	       311	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_14
0x40047d8	        0x488b4f38	            mov rcx, qword [rdi + 0x38] 	       311	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_14
0x40047dc	      0x488d542410	                   lea rdx, [rsp + 0x10]	       324	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_15
0x40047e1	    0x448bb7f00000	           mov r14d, dword [rdi + 0xf0] 	       320	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x40047e8	            0x31f6	                            xor esi, esi	       324	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_15
0x40047ea	          0x4889cf	                            mov rdi, rcx	       324	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_15
0x40047ed	      0x48894c2410	             mov qword [rsp + 0x10], rcx	       321	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x40047f2	      0xe800000000	                          call 0x40047f7	       324	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_15
0x40047f7	    0x488b3d000000	            mov rdi, qword [0x040047fe] 	       328	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x40047fe	    0xc74424180000	               mov dword [rsp + 0x18], 0	       327	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x4004806	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	       330	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x400480e	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       330	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x4004813	    0x4403b7f40000	            add r14d, dword [rdi + 0xf4]	       328	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x400481a	            0xeb35	                           jmp 0x4004851	       328	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x400481c	         0xf1f4000	                         nop dword [rax]	       328	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x4004820	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1585	move.c	FUNCTION_40	ELSE_1
0x4004825	    0x488b15000000	            mov rdx, qword [0x0400482c] 	      1589	move.c	FUNCTION_40	ELSE_1	IF_2
0x400482c	    0xc74424180000	               mov dword [rsp + 0x18], 0	      1587	move.c	FUNCTION_40	ELSE_1
0x4004834	        0x4883c001	                              add rax, 1	      1585	move.c	FUNCTION_40	ELSE_1
0x4004838	          0x483b02	                    cmp rax, qword [rdx]	      1589	move.c	FUNCTION_40	ELSE_1	IF_2
0x400483b	      0x4889442410	             mov qword [rsp + 0x10], rax	      1585	move.c	FUNCTION_40	ELSE_1
0x4004840	            0x7e6e	                           jle 0x40048b0	      1589	move.c	FUNCTION_40	ELSE_1	IF_2
0x4004842	    0xc744241cffff	     mov dword [rsp + 0x1c], 0x7fffffff 	      1590	move.c	FUNCTION_40	ELSE_1	IF_2
0x400484a	    0x488b3d000000	            mov rdi, qword [0x04004851] 	      1590	move.c	FUNCTION_40	ELSE_1	IF_2
0x4004851	    0x488b97e80000	            mov rdx, qword [rdi + 0xe8] 	       331	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4004858	          0x4839c2	                            cmp rdx, rax	       331	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x400485b	     0xf8e28010000	                           jle 0x4004989	       331	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4004861	        0x488d7001	                      lea rsi, [rax + 1]	       333	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4004865	          0x4839f2	                            cmp rdx, rsi	       333	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4004868	            0x7f0e	                            jg 0x4004878	       333	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x400486a	      0x448b442418	            mov r8d, dword [rsp + 0x18] 	       333	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x400486f	          0x4585c0	                           test r8d, r8d	       333	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4004872	     0xf8511010000	                           jne 0x4004989	       333	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x4004878	      0x440374241c	            add r14d, dword [rsp + 0x1c]	       337	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x400487d	          0x4963c6	                        movsxd rax, r14d	       338	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1	IF_20
0x4004880	    0x483b05000000	            cmp rax, qword [0x04004887] 	       338	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1	IF_20
0x4004887	     0xf8d11feffff	                           jge 0x400469e	       338	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1	IF_20
0x400488d	        0x8b6c2418	            mov ebp, dword [rsp + 0x18] 	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x4004891	      0xe800000000	                          call 0x4004896	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x4004896	            0x39c5	                            cmp ebp, eax	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x4004898	            0x7d86	                           jge 0x4004820	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x400489a	      0x8344241801	               add dword [rsp + 0x18], 1	      1579	move.c	FUNCTION_40	IF_1
0x400489f	    0xc744241c0100	               mov dword [rsp + 0x1c], 1	      1580	move.c	FUNCTION_40	IF_1
0x40048a7	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1580	move.c	FUNCTION_40	IF_1
0x40048ac	            0xeb9c	                           jmp 0x400484a	      1580	move.c	FUNCTION_40	IF_1
0x40048ae	            0x6690	                                     nop	      1580	move.c	FUNCTION_40	IF_1
0x40048b0	      0x488d542410	                   lea rdx, [rsp + 0x10]	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x40048b5	            0x31f6	                            xor esi, esi	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x40048b7	          0x4889c7	                            mov rdi, rax	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x40048ba	      0xe800000000	                          call 0x40048bf	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x40048bf	            0x85c0	                           test eax, eax	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x40048c1	            0x7412	                            je 0x40048d5	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x40048c3	    0xc744241c0100	               mov dword [rsp + 0x1c], 1	      1595	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3
0x40048cb	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1595	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3
0x40048d0	      0xe975ffffff	                           jmp 0x400484a	      1595	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3
0x40048d5	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x40048da	      0xe800000000	                          call 0x40048df	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x40048df	        0x8944241c	             mov dword [rsp + 0x1c], eax	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x40048e3	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x40048e8	      0xe95dffffff	                           jmp 0x400484a	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x40048ed	           0xf1f00	                         nop dword [rax]	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x40048f0	      0xe8ebb9ffff	                   call sym.comp_botline	       591	move.c	FUNCTION_16	CALL_1
0x40048f5	    0x488b3d000000	            mov rdi, qword [0x040048fc] 	       591	move.c	FUNCTION_16	CALL_1
0x40048fc	      0xe9f4fbffff	                           jmp 0x40044f5	       591	move.c	FUNCTION_16	CALL_1
0x4004901	          0x8b4840	            mov ecx, dword [rax + 0x40] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004904	    0x3b88c0000000	            cmp ecx, dword [rax + 0xc0] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x400490a	    0x8bb894000000	            mov edi, dword [rax + 0x94] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004910	     0xf84a6000000	                            je 0x40049bc	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004916	          0x8b7044	            mov esi, dword [rax + 0x44] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004919	    0x8b90b4000000	            mov edx, dword [rax + 0xb4] 	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x400491f	    0x8988c0000000	             mov dword [rax + 0xc0], ecx	       496	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004925	    0x89b8c8000000	             mov dword [rax + 0xc8], edi	       497	move.c	FUNCTION_8	ELSE_1	IF_2
0x400492b	    0x89b0c4000000	             mov dword [rax + 0xc4], esi	       499	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004931	          0x83e2f8	                     and edx, 0xfffffff8	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004934	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x400493a	      0xe9f7fdffff	                           jmp 0x4004736	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x400493f	      0x48837f7801	               cmp qword [rdi + 0x78], 1	       211	move.c	FUNCTION_4	IF_4	IF_5
0x4004944	            0x7411	                            je 0x4004957	       211	move.c	FUNCTION_4	IF_4	IF_5
0x4004946	      0xbf28000000	                           mov edi, 0x28	       212	move.c	FUNCTION_4	IF_4	CALL_4
0x400494b	      0xe800000000	                          call 0x4004950	       212	move.c	FUNCTION_4	IF_4	CALL_4
0x4004950	    0x488b3d000000	            mov rdi, qword [0x04004957] 	       212	move.c	FUNCTION_4	IF_4	CALL_4
0x4004957	    0x8b87b4000000	            mov eax, dword [rdi + 0xb4] 	       215	move.c	FUNCTION_4	IF_4
0x400495d	    0x48c747780100	               mov qword [rdi + 0x78], 1	       213	move.c	FUNCTION_4	IF_4
0x4004965	    0x48c787e80000	               mov qword [rdi + 0xe8], 2	       214	move.c	FUNCTION_4	IF_4
0x4004970	    0x48c787500500	              mov qword [rdi + 0x550], 1	       216	move.c	FUNCTION_4	IF_4
0x400497b	          0x83c860	                            or eax, 0x60	       215	move.c	FUNCTION_4	IF_4
0x400497e	    0x8987b4000000	             mov dword [rdi + 0xb4], eax	       215	move.c	FUNCTION_4	IF_4
0x4004984	      0xe977fcffff	                           jmp 0x4004600	       215	move.c	FUNCTION_4	IF_4
0x4004989	          0x4d63f6	                        movsxd r14, r14d	       350	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22
0x400498c	    0x4c3b35000000	            cmp r14, qword [0x04004993] 	       350	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22
0x4004993	     0xf8d05fdffff	                           jge 0x400469e	       350	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22
0x4004999	      0xe97bfbffff	                           jmp 0x4004519	       350	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22
0x400499e	            0x6690	                                     nop	       350	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22
0x40049a0	        0x488b4238	            mov rax, qword [rdx + 0x38] 	       371	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	ELSE_7
0x40049a4	    0x482b82e80000	             sub rax, qword [rdx + 0xe8]	       371	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	ELSE_7
0x40049ab	    0x488b0d000000	            mov rcx, qword [0x040049b2] 	       371	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	ELSE_7
0x40049b2	      0x488d6c0801	                lea rbp, [rax + rcx + 1]	       371	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	ELSE_7
0x40049b7	      0xe903fcffff	                           jmp 0x40045bf	       371	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	ELSE_7
0x40049bc	    0x3bb8c8000000	            cmp edi, dword [rax + 0xc8] 	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x40049c2	          0x8b7044	            mov esi, dword [rax + 0x44] 	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x40049c5	     0xf854effffff	                           jne 0x4004919	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x40049cb	    0x3bb0c4000000	            cmp esi, dword [rax + 0xc4] 	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x40049d1	     0xf8542ffffff	                           jne 0x4004919	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x40049d7	    0x8b90b4000000	            mov edx, dword [rax + 0xb4] 	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x40049dd	      0xe954fdffff	                           jmp 0x4004736	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x40049e2	          0x48f7df	                                 neg rdi	       419	move.c	FUNCTION_5
0x40049e5	    0x48ba0bd7a370	          movabs rdx, 0xa3d70a3d70a3d70b	       419	move.c	FUNCTION_5
0x40049ef	          0x4889f9	                            mov rcx, rdi	       419	move.c	FUNCTION_5
0x40049f2	        0x480fafc8	                           imul rcx, rax	       419	move.c	FUNCTION_5
0x40049f6	          0x4889c8	                            mov rax, rcx	       419	move.c	FUNCTION_5
0x40049f9	          0x48f7ea	                                imul rdx	       419	move.c	FUNCTION_5
0x40049fc	        0x488d3c0a	                    lea rdi, [rdx + rcx]	       419	move.c	FUNCTION_5
0x4004a00	        0x48c1f93f	                           sar rcx, 0x3f	       419	move.c	FUNCTION_5
0x4004a04	        0x48c1ff06	                              sar rdi, 6	       419	move.c	FUNCTION_5
0x4004a08	            0x29cf	                            sub edi, ecx	       419	move.c	FUNCTION_5
0x4004a0a	      0xe9d6fbffff	                           jmp 0x40045e5	       419	move.c	FUNCTION_5
0x4004a0f	      0xe800000000	                          call 0x4004a14	       156	move.c	FUNCTION_3
0x4004a14	            0x31ed	                            xor ebp, ebp	       358	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23
0x4004a16	      0xe9a4fbffff	                           jmp 0x40045bf	       358	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23
curs_rows	SWITCH,0:WHILE,0:ELSE,7:functions,0:FOR,1:CALL,10:IF,14:DO,0	218
0x40005e0	            0x4156	                                push r14	       662	move.c	FUNCTION_23
0x40005e2	            0x4155	                                push r13	       662	move.c	FUNCTION_23
0x40005e4	            0x4154	                                push r12	       662	move.c	FUNCTION_23
0x40005e6	              0x55	                                push rbp	       662	move.c	FUNCTION_23
0x40005e7	          0x4889fd	                            mov rbp, rdi	       662	move.c	FUNCTION_23
0x40005ea	              0x53	                                push rbx	       662	move.c	FUNCTION_23
0x40005eb	      0xe800000000	                          call 0x40005f0	       672	move.c	FUNCTION_23	CALL_1
0x40005f0	            0x85c0	                           test eax, eax	       674	move.c	FUNCTION_23
0x40005f2	            0x7410	                            je 0x4000604	       674	move.c	FUNCTION_23
0x40005f4	    0x448b85f80000	            mov r8d, dword [rbp + 0xf8] 	       673	move.c	FUNCTION_23
0x40005fb	          0x4585c0	                           test r8d, r8d	       673	move.c	FUNCTION_23
0x40005fe	     0xf8534020000	                           jne 0x4000838	       673	move.c	FUNCTION_23
0x4000604	        0x488b5d78	            mov rbx, qword [rbp + 0x78] 	       673	move.c	FUNCTION_23
0x4000608	    0x41bd01000000	                             mov r13d, 1	       674	move.c	FUNCTION_23
0x400060e	        0x488b7538	            mov rsi, qword [rbp + 0x38] 	       677	move.c	FUNCTION_23	FOR_1
0x4000612	          0x4531e4	                          xor r12d, r12d	       677	move.c	FUNCTION_23	FOR_1
0x4000615	    0xc785d4000000	               mov dword [rbp + 0xd4], 0	       676	move.c	FUNCTION_23
0x400061f	          0x4839f3	                            cmp rbx, rsi	       677	move.c	FUNCTION_23	FOR_1
0x4000622	            0x7c45	                            jl 0x4000669	       677	move.c	FUNCTION_23	FOR_1
0x4000624	      0xe9bf000000	                           jmp 0x40006e8	       677	move.c	FUNCTION_23	FOR_1
0x4000629	     0xf1f80000000	                         nop dword [rax]	       677	move.c	FUNCTION_23	FOR_1
0x4000630	            0x31d2	                            xor edx, edx	       718	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_2
0x4000632	          0x4889de	                            mov rsi, rbx	       718	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_2
0x4000635	          0x4889ef	                            mov rdi, rbp	       718	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_2
0x4000638	      0xe800000000	                          call 0x400063d	       718	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_2
0x400063d	          0x4885c0	                           test rax, rax	       719	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8
0x4000640	            0x746e	                            je 0x40006b0	       719	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8
0x4000642	        0x488b7538	            mov rsi, qword [rbp + 0x38] 	       722	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8	IF_9
0x4000646	          0x4801c3	                            add rbx, rax	       721	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8
0x4000649	          0x4839f3	                            cmp rbx, rsi	       722	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8	IF_9
0x400064c	     0xf8f96000000	                            jg 0x40006e8	       722	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8	IF_9
0x4000652	    0x8385d4000000	               add dword [rbp + 0xd4], 1	       724	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8
0x4000659	     0xf1f80000000	                         nop dword [rax]	       724	move.c	FUNCTION_23	FOR_1	ELSE_2	IF_8
0x4000660	        0x4183c401	                             add r12d, 1	       677	move.c	FUNCTION_23	FOR_1
0x4000664	          0x4839f3	                            cmp rbx, rsi	       677	move.c	FUNCTION_23	FOR_1
0x4000667	            0x7d7f	                           jge 0x40006e8	       677	move.c	FUNCTION_23	FOR_1
0x4000669	          0x4585ed	                         test r13d, r13d	       680	move.c	FUNCTION_23	FOR_1	IF_1
0x400066c	            0x75c2	                           jne 0x4000630	       680	move.c	FUNCTION_23	FOR_1	IF_1
0x400066e	    0x4439a5f80000	           cmp dword [rbp + 0xf8], r12d 	       680	move.c	FUNCTION_23	FOR_1	IF_1
0x4000675	            0x7eb9	                           jle 0x4000630	       680	move.c	FUNCTION_23	FOR_1	IF_1
0x4000677	          0x4963c4	                        movsxd rax, r12d	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x400067a	        0x488d1440	                  lea rdx, [rax + rax*2]	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x400067e	    0x488b85000100	           mov rax, qword [rbp + 0x100] 	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4000685	        0x488d04d0	                  lea rax, [rax + rdx*8]	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4000689	          0x488b10	                    mov rdx, qword [rax]	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x400068c	          0x4839da	                            cmp rdx, rbx	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x400068f	            0x7ccf	                            jl 0x4000660	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4000691	        0x80780a00	                 cmp byte [rax + 0xa], 0	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4000695	            0x74c9	                            je 0x4000660	       682	move.c	FUNCTION_23	FOR_1	IF_1	IF_2
0x4000697	          0x4839da	                            cmp rdx, rbx	       684	move.c	FUNCTION_23	FOR_1	IF_1	IF_3
0x400069a	     0xf8400020000	                            je 0x40008a0	       684	move.c	FUNCTION_23	FOR_1	IF_1	IF_3
0x40006a0	           0xf9fc0	                                 setg al	       697	move.c	FUNCTION_23	FOR_1	IF_1	ELSE_1	IF_5
0x40006a3	           0xfb6c0	                           movzx eax, al	       697	move.c	FUNCTION_23	FOR_1	IF_1	ELSE_1	IF_5
0x40006a6	          0x4129c4	                           sub r12d, eax	       697	move.c	FUNCTION_23	FOR_1	IF_1	ELSE_1	IF_5
0x40006a9	            0xeb85	                           jmp 0x4000630	       697	move.c	FUNCTION_23	FOR_1	IF_1	ELSE_1	IF_5
0x40006ab	       0xf1f440000	                   nop dword [rax + rax]	       697	move.c	FUNCTION_23	FOR_1	IF_1	ELSE_1	IF_5
0x40006b0	        0x48395d78	            cmp qword [rbp + 0x78], rbx 	       729	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10
0x40006b4	        0x4c8d7301	                      lea r14, [rbx + 1]	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x40006b8	      0xba01000000	                              mov edx, 1	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x40006bd	          0x4889de	                            mov rsi, rbx	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x40006c0	          0x4889ef	                            mov rdi, rbp	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x40006c3	     0xf84df000000	                            je 0x40007a8	       729	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10
0x40006c9	      0xe800000000	                          call 0x40006ce	       734	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_4
0x40006ce	        0x488b7538	            mov rsi, qword [rbp + 0x38] 	       734	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_4
0x40006d2	          0x4c89f3	                            mov rbx, r14	       734	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_4
0x40006d5	     0x185d4000000	             add dword [rbp + 0xd4], eax	       734	move.c	FUNCTION_23	FOR_1	ELSE_2	CALL_4
0x40006db	        0x4183c401	                             add r12d, 1	       677	move.c	FUNCTION_23	FOR_1
0x40006df	          0x4839f3	                            cmp rbx, rsi	       677	move.c	FUNCTION_23	FOR_1
0x40006e2	            0x7c85	                            jl 0x4000669	       677	move.c	FUNCTION_23	FOR_1
0x40006e4	         0xf1f4000	                         nop dword [rax]	       677	move.c	FUNCTION_23	FOR_1
0x40006e8	    0x483bb5b80000	            cmp rsi, qword [rbp + 0xb8] 	       481	move.c	FUNCTION_8	IF_1
0x40006ef	     0xf8463010000	                            je 0x4000858	       481	move.c	FUNCTION_8	IF_1
0x40006f5	    0x8b85b4000000	            mov eax, dword [rbp + 0xb4] 	       483	move.c	FUNCTION_8	IF_1
0x40006fb	        0x488b4d38	            mov rcx, qword [rbp + 0x38] 	       485	move.c	FUNCTION_8	IF_1
0x40006ff	        0x488b5d40	            mov rbx, qword [rbp + 0x40] 	       485	move.c	FUNCTION_8	IF_1
0x4000703	    0x8b9594000000	            mov edx, dword [rbp + 0x94] 	       486	move.c	FUNCTION_8	IF_1
0x4000709	            0x2460	                            and al, 0x60	       483	move.c	FUNCTION_8	IF_1
0x400070b	    0x48898db80000	            mov qword [rbp + 0xb8], rcx 	       485	move.c	FUNCTION_8	IF_1
0x4000712	    0x8985b4000000	            mov dword [rbp + 0xb4], eax 	       483	move.c	FUNCTION_8	IF_1
0x4000718	    0x48899dc00000	            mov qword [rbp + 0xc0], rbx 	       485	move.c	FUNCTION_8	IF_1
0x400071f	    0x8995c8000000	            mov dword [rbp + 0xc8], edx 	       486	move.c	FUNCTION_8	IF_1
0x4000725	            0xa808	                              test al, 8	       739	move.c	FUNCTION_23	IF_11
0x4000727	            0x7545	                           jne 0x400076e	       739	move.c	FUNCTION_23	IF_11
0x4000729	          0x4585ed	                         test r13d, r13d	       741	move.c	FUNCTION_23	IF_11	IF_12
0x400072c	     0xf84be000000	                            je 0x40007f0	       741	move.c	FUNCTION_23	IF_11	IF_12
0x4000732	        0x483b7578	            cmp rsi, qword [rbp + 0x78] 	       748	move.c	FUNCTION_23	IF_11	IF_12	IF_13
0x4000736	      0xba01000000	                              mov edx, 1	       749	move.c	FUNCTION_23	IF_11	IF_12	IF_13	CALL_6
0x400073b	          0x4889ef	                            mov rdi, rbp	       749	move.c	FUNCTION_23	IF_11	IF_12	IF_13	CALL_6
0x400073e	     0xf84e9010000	                            je 0x400092d	       748	move.c	FUNCTION_23	IF_11	IF_12	IF_13
0x4000744	      0xe800000000	                          call 0x4000749	       753	move.c	FUNCTION_23	IF_11	IF_12	CALL_7
0x4000749	    0x8985cc000000	            mov dword [rbp + 0xcc], eax 	       753	move.c	FUNCTION_23	IF_11	IF_12	CALL_7
0x400074f	        0x488b7538	            mov rsi, qword [rbp + 0x38] 	       755	move.c	FUNCTION_23	IF_11	IF_12	CALL_8
0x4000753	          0x4531c9	                            xor r9d, r9d	       764	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x4000756	    0x41b801000000	                              mov r8d, 1	       764	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x400075c	            0x31c9	                            xor ecx, ecx	       764	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x400075e	            0x31d2	                            xor edx, edx	       764	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x4000760	          0x4889ef	                            mov rdi, rbp	       764	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x4000763	      0xe800000000	                          call 0x4000768	       764	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x4000768	    0x8985d0000000	            mov dword [rbp + 0xd0], eax 	       764	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14	CALL_9
0x400076e	    0x488b1d000000	            mov rbx, qword [0x04000775] 	       777	move.c	FUNCTION_23	CALL_10
0x4000775	    0x8b933c020000	           mov edx, dword [rbx + 0x23c] 	       133	move.c	FUNCTION_2	IF_1
0x400077b	            0x85d2	                           test edx, edx	       133	move.c	FUNCTION_2	IF_1
0x400077d	            0x750a	                           jne 0x4000789	       133	move.c	FUNCTION_2	IF_1
0x400077f	    0x8b8370020000	           mov eax, dword [rbx + 0x270] 	       135	move.c	FUNCTION_2	IF_1
0x4000785	            0x85c0	                           test eax, eax	       135	move.c	FUNCTION_2	IF_1
0x4000787	            0x7409	                            je 0x4000792	       135	move.c	FUNCTION_2	IF_1
0x4000789	    0xf683b4000000	           test byte [rbx + 0xb4], 0x10 	       138	move.c	FUNCTION_2	IF_1
0x4000790	            0x7436	                            je 0x40007c8	       138	move.c	FUNCTION_2	IF_1
0x4000792	    0x838db4000000	             or dword [rbp + 0xb4], 0x18	       778	move.c	FUNCTION_23
0x4000799	              0x5b	                                 pop rbx	       780	move.c	FUNCTION_23
0x400079a	              0x5d	                                 pop rbp	       780	move.c	FUNCTION_23
0x400079b	            0x415c	                                 pop r12	       780	move.c	FUNCTION_23
0x400079d	            0x415d	                                 pop r13	       780	move.c	FUNCTION_23
0x400079f	            0x415e	                                 pop r14	       780	move.c	FUNCTION_23
0x40007a1	              0xc3	                                     ret	       780	move.c	FUNCTION_23
0x40007a2	    0x660f1f440000	                    nop word [rax + rax]	       780	move.c	FUNCTION_23
0x40007a8	      0xe800000000	                          call 0x40007ad	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x40007ad	     0x38584000000	             add eax, dword [rbp + 0x84]	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x40007b3	        0x488b7538	            mov rsi, qword [rbp + 0x38] 	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x40007b7	          0x4c89f3	                            mov rbx, r14	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x40007ba	     0x185d4000000	             add dword [rbp + 0xd4], eax	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x40007c0	      0xe99bfeffff	                           jmp 0x4000660	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x40007c5	           0xf1f00	                         nop dword [rax]	       730	move.c	FUNCTION_23	FOR_1	ELSE_2	ELSE_3	IF_10	CALL_3
0x40007c8	      0xe800000000	                          call 0x40007cd	       805	move.c	FUNCTION_25	IF_1	IF_2	CALL_3
0x40007cd	            0x85c0	                           test eax, eax	       805	move.c	FUNCTION_25	IF_1	IF_2	CALL_3
0x40007cf	            0x75c1	                           jne 0x4000792	       805	move.c	FUNCTION_25	IF_1	IF_2	CALL_3
0x40007d1	          0x4889df	                            mov rdi, rbx	       808	move.c	FUNCTION_25	IF_1	CALL_4
0x40007d4	      0xbe23000000	                           mov esi, 0x23	       808	move.c	FUNCTION_25	IF_1	CALL_4
0x40007d9	      0xe800000000	                          call 0x40007de	       808	move.c	FUNCTION_25	IF_1	CALL_4
0x40007de	    0x838db4000000	             or dword [rbp + 0xb4], 0x18	       778	move.c	FUNCTION_23
0x40007e5	              0x5b	                                 pop rbx	       780	move.c	FUNCTION_23
0x40007e6	              0x5d	                                 pop rbp	       780	move.c	FUNCTION_23
0x40007e7	            0x415c	                                 pop r12	       780	move.c	FUNCTION_23
0x40007e9	            0x415d	                                 pop r13	       780	move.c	FUNCTION_23
0x40007eb	            0x415e	                                 pop r14	       780	move.c	FUNCTION_23
0x40007ed	              0xc3	                                     ret	       780	move.c	FUNCTION_23
0x40007ee	            0x6690	                                     nop	       780	move.c	FUNCTION_23
0x40007f0	    0x443ba5f80000	           cmp r12d, dword [rbp + 0xf8] 	       742	move.c	FUNCTION_23	IF_11	IF_12
0x40007f7	     0xf8435ffffff	                            je 0x4000732	       742	move.c	FUNCTION_23	IF_11	IF_12
0x40007fd	     0xf8c00010000	                            jl 0x4000903	       743	move.c	FUNCTION_23	IF_11	IF_12
0x4000803	     0xf8f60010000	                            jg 0x4000969	       759	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14
0x4000809	          0x4d63e4	                        movsxd r12, r12d	       759	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14
0x400080c	    0x488b85000100	           mov rax, qword [rbp + 0x100] 	       759	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14
0x4000813	        0x4b8d1464	                  lea rdx, [r12 + r12*2]	       759	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14
0x4000817	        0x488d04d0	                  lea rax, [rax + rdx*8]	       759	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14
0x400081b	         0xfb75008	               movzx edx, word [rax + 8]	       770	move.c	FUNCTION_23	IF_11	ELSE_7
0x400081f	    0x8995cc000000	            mov dword [rbp + 0xcc], edx 	       770	move.c	FUNCTION_23	IF_11	ELSE_7
0x4000825	         0xfbe400b	            movsx eax, byte [rax + 0xb] 	       772	move.c	FUNCTION_23	IF_11	ELSE_7
0x4000829	    0x8985d0000000	            mov dword [rbp + 0xd0], eax 	       772	move.c	FUNCTION_23	IF_11	ELSE_7
0x400082f	      0xe93affffff	                           jmp 0x400076e	       772	move.c	FUNCTION_23	IF_11	ELSE_7
0x4000834	         0xf1f4000	                         nop dword [rax]	       772	move.c	FUNCTION_23	IF_11	ELSE_7
0x4000838	    0x488b85000100	           mov rax, qword [rbp + 0x100] 	       674	move.c	FUNCTION_23
0x400083f	          0x4531ed	                          xor r13d, r13d	       674	move.c	FUNCTION_23
0x4000842	        0x488b5d78	            mov rbx, qword [rbp + 0x78] 	       674	move.c	FUNCTION_23
0x4000846	          0x483918	                    cmp qword [rax], rbx	       674	move.c	FUNCTION_23
0x4000849	        0x410f9fc5	                               setg r13b	       674	move.c	FUNCTION_23
0x400084d	      0xe9bcfdffff	                           jmp 0x400060e	       674	move.c	FUNCTION_23
0x4000852	    0x660f1f440000	                    nop word [rax + rax]	       674	move.c	FUNCTION_23
0x4000858	          0x8b5540	            mov edx, dword [rbp + 0x40] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x400085b	    0x3b95c0000000	            cmp edx, dword [rbp + 0xc0] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000861	    0x8b8d94000000	            mov ecx, dword [rbp + 0x94] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000867	     0xf84d6000000	                            je 0x4000943	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x400086d	          0x8b7d44	            mov edi, dword [rbp + 0x44] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000870	    0x8b85b4000000	            mov eax, dword [rbp + 0xb4] 	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000876	    0x8995c0000000	            mov dword [rbp + 0xc0], edx 	       496	move.c	FUNCTION_8	ELSE_1	IF_2
0x400087c	    0x898dc8000000	            mov dword [rbp + 0xc8], ecx 	       497	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000882	    0x89bdc4000000	            mov dword [rbp + 0xc4], edi 	       499	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000888	          0x83e0f8	                     and eax, 0xfffffff8	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x400088b	    0x8985b4000000	            mov dword [rbp + 0xb4], eax 	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000891	      0xe98ffeffff	                           jmp 0x4000725	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000896	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x40008a0	        0x488b5508	                mov rdx, qword [rbp + 8]	       689	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x40008a4	    0x8bba0c010000	           mov edi, dword [rdx + 0x10c] 	       689	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x40008aa	            0x85ff	                           test edi, edi	       689	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x40008ac	            0x753a	                           jne 0x40008e8	       689	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x40008ae	        0x48395d78	            cmp qword [rbp + 0x78], rbx 	       701	move.c	FUNCTION_23	FOR_1	IF_6
0x40008b2	            0x7424	                            je 0x40008d8	       701	move.c	FUNCTION_23	FOR_1	IF_6
0x40008b4	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       706	move.c	FUNCTION_23	FOR_1	IF_6
0x40008b8	        0x488d5901	                      lea rbx, [rcx + 1]	       706	move.c	FUNCTION_23	FOR_1	IF_6
0x40008bc	          0x4839f3	                            cmp rbx, rsi	       708	move.c	FUNCTION_23	FOR_1	IF_6	IF_7
0x40008bf	     0xf8f23feffff	                            jg 0x40006e8	       708	move.c	FUNCTION_23	FOR_1	IF_6	IF_7
0x40008c5	         0xfb74008	               movzx eax, word [rax + 8]	       713	move.c	FUNCTION_23	FOR_1	IF_6
0x40008c9	     0x185d4000000	             add dword [rbp + 0xd4], eax	       713	move.c	FUNCTION_23	FOR_1	IF_6
0x40008cf	      0xe98cfdffff	                           jmp 0x4000660	       713	move.c	FUNCTION_23	FOR_1	IF_6
0x40008d4	         0xf1f4000	                         nop dword [rax]	       713	move.c	FUNCTION_23	FOR_1	IF_6
0x40008d8	    0x8b8dc0010000	           mov ecx, dword [rbp + 0x1c0] 	       701	move.c	FUNCTION_23	FOR_1	IF_6
0x40008de	            0x85c9	                           test ecx, ecx	       701	move.c	FUNCTION_23	FOR_1	IF_6
0x40008e0	     0xf854afdffff	                           jne 0x4000630	       701	move.c	FUNCTION_23	FOR_1	IF_6
0x40008e6	            0xebcc	                           jmp 0x40008b4	       701	move.c	FUNCTION_23	FOR_1	IF_6
0x40008e8	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       690	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x40008ec	          0x4839f1	                            cmp rcx, rsi	       690	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x40008ef	            0x7cbd	                            jl 0x40008ae	       690	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x40008f1	        0x4883c101	                              add rcx, 1	       691	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x40008f5	    0x48398a100100	           cmp qword [rdx + 0x110], rcx 	       691	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x40008fc	            0x7fb0	                            jg 0x40008ae	       691	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x40008fe	      0xe92dfdffff	                           jmp 0x4000630	       691	move.c	FUNCTION_23	FOR_1	IF_1	IF_3	IF_4
0x4000903	          0x4d63e4	                        movsxd r12, r12d	       744	move.c	FUNCTION_23	IF_11	IF_12
0x4000906	    0x488b85000100	           mov rax, qword [rbp + 0x100] 	       744	move.c	FUNCTION_23	IF_11	IF_12
0x400090d	        0x4b8d1464	                  lea rdx, [r12 + r12*2]	       744	move.c	FUNCTION_23	IF_11	IF_12
0x4000911	        0x488d04d0	                  lea rax, [rax + rdx*8]	       744	move.c	FUNCTION_23	IF_11	IF_12
0x4000915	        0x80780a00	                 cmp byte [rax + 0xa], 0	       744	move.c	FUNCTION_23	IF_11	IF_12
0x4000919	     0xf8413feffff	                            je 0x4000732	       744	move.c	FUNCTION_23	IF_11	IF_12
0x400091f	          0x483930	                    cmp qword [rax], rsi	       745	move.c	FUNCTION_23	IF_11	IF_12
0x4000922	     0xf850afeffff	                           jne 0x4000732	       745	move.c	FUNCTION_23	IF_11	IF_12
0x4000928	      0xe9eefeffff	                           jmp 0x400081b	       745	move.c	FUNCTION_23	IF_11	IF_12
0x400092d	      0xe800000000	                          call 0x4000932	       749	move.c	FUNCTION_23	IF_11	IF_12	IF_13	CALL_6
0x4000932	     0x38584000000	             add eax, dword [rbp + 0x84]	       749	move.c	FUNCTION_23	IF_11	IF_12	IF_13	CALL_6
0x4000938	    0x8985cc000000	            mov dword [rbp + 0xcc], eax 	       749	move.c	FUNCTION_23	IF_11	IF_12	IF_13	CALL_6
0x400093e	      0xe90cfeffff	                           jmp 0x400074f	       749	move.c	FUNCTION_23	IF_11	IF_12	IF_13	CALL_6
0x4000943	    0x3b8dc8000000	            cmp ecx, dword [rbp + 0xc8] 	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000949	          0x8b7d44	            mov edi, dword [rbp + 0x44] 	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x400094c	     0xf851effffff	                           jne 0x4000870	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000952	    0x3bbdc4000000	            cmp edi, dword [rbp + 0xc4] 	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000958	     0xf8512ffffff	                           jne 0x4000870	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x400095e	    0x8b85b4000000	            mov eax, dword [rbp + 0xb4] 	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000964	      0xe9bcfdffff	                           jmp 0x4000725	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000969	    0xc785cc000000	               mov dword [rbp + 0xcc], 0	       762	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14
0x4000973	      0xe9dbfdffff	                           jmp 0x4000753	       762	move.c	FUNCTION_23	IF_11	ELSE_6	IF_14
update_curswant	SWITCH,0:WHILE,0:ELSE,0:functions,0:FOR,0:CALL,1:IF,1:DO,0	68
0x4000dc0	              0x53	                                push rbx	       466	move.c	FUNCTION_7
0x4000dc1	    0x488b1d000000	            mov rbx, qword [0x04000dc8] 	       467	move.c	FUNCTION_7	IF_1
0x4000dc8	          0x8b534c	            mov edx, dword [rbx + 0x4c] 	       467	move.c	FUNCTION_7	IF_1
0x4000dcb	            0x85d2	                           test edx, edx	       467	move.c	FUNCTION_7	IF_1
0x4000dcd	            0x7509	                           jne 0x4000dd8	       467	move.c	FUNCTION_7	IF_1
0x4000dcf	              0x5b	                                 pop rbx	       473	move.c	FUNCTION_7
0x4000dd0	              0xc3	                                     ret	       473	move.c	FUNCTION_7
0x4000dd1	     0xf1f80000000	                         nop dword [rax]	       473	move.c	FUNCTION_7
0x4000dd8	    0x488b83b80000	            mov rax, qword [rbx + 0xb8] 	       481	move.c	FUNCTION_8	IF_1
0x4000ddf	        0x48394338	            cmp qword [rbx + 0x38], rax 	       481	move.c	FUNCTION_8	IF_1
0x4000de3	     0xf847f000000	                            je 0x4000e68	       481	move.c	FUNCTION_8	IF_1
0x4000de9	    0x8b83b4000000	            mov eax, dword [rbx + 0xb4] 	       483	move.c	FUNCTION_8	IF_1
0x4000def	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	       485	move.c	FUNCTION_8	IF_1
0x4000df3	        0x488b7b40	            mov rdi, qword [rbx + 0x40] 	       485	move.c	FUNCTION_8	IF_1
0x4000df7	    0x8b9394000000	            mov edx, dword [rbx + 0x94] 	       486	move.c	FUNCTION_8	IF_1
0x4000dfd	            0x2460	                            and al, 0x60	       483	move.c	FUNCTION_8	IF_1
0x4000dff	    0x4889b3b80000	             mov qword [rbx + 0xb8], rsi	       485	move.c	FUNCTION_8	IF_1
0x4000e06	    0x8983b4000000	             mov dword [rbx + 0xb4], eax	       483	move.c	FUNCTION_8	IF_1
0x4000e0c	    0x4889bbc00000	             mov qword [rbx + 0xc0], rdi	       485	move.c	FUNCTION_8	IF_1
0x4000e13	    0x8993c8000000	             mov dword [rbx + 0xc8], edx	       486	move.c	FUNCTION_8	IF_1
0x4000e19	            0xa804	                              test al, 4	       798	move.c	FUNCTION_25	IF_1
0x4000e1b	            0x7413	                            je 0x4000e30	       798	move.c	FUNCTION_25	IF_1
0x4000e1d	    0x8b83d8000000	            mov eax, dword [rbx + 0xd8] 	       470	move.c	FUNCTION_7	IF_1
0x4000e23	    0xc7434c000000	               mov dword [rbx + 0x4c], 0	       471	move.c	FUNCTION_7	IF_1
0x4000e2a	          0x894348	             mov dword [rbx + 0x48], eax	       470	move.c	FUNCTION_7	IF_1
0x4000e2d	              0x5b	                                 pop rbx	       473	move.c	FUNCTION_7
0x4000e2e	              0xc3	                                     ret	       473	move.c	FUNCTION_7
0x4000e2f	              0x90	                                     nop	       473	move.c	FUNCTION_7
0x4000e30	    0x488d8bd80000	                   lea rcx, [rbx + 0xd8]	       800	move.c	FUNCTION_25	IF_1	CALL_2
0x4000e37	        0x488d7338	                   lea rsi, [rbx + 0x38]	       800	move.c	FUNCTION_25	IF_1	CALL_2
0x4000e3b	          0x4531c0	                            xor r8d, r8d	       800	move.c	FUNCTION_25	IF_1	CALL_2
0x4000e3e	            0x31d2	                            xor edx, edx	       800	move.c	FUNCTION_25	IF_1	CALL_2
0x4000e40	          0x4889df	                            mov rdi, rbx	       800	move.c	FUNCTION_25	IF_1	CALL_2
0x4000e43	      0xe800000000	                          call 0x4000e48	       800	move.c	FUNCTION_25	IF_1	CALL_2
0x4000e48	    0x8b836c020000	           mov eax, dword [rbx + 0x26c] 	       803	move.c	FUNCTION_25	IF_1	IF_2
0x4000e4e	    0x838bb4000000	                or dword [rbx + 0xb4], 4	       801	move.c	FUNCTION_25	IF_1
0x4000e55	            0x85c0	                           test eax, eax	       803	move.c	FUNCTION_25	IF_1	IF_2
0x4000e57	            0x754f	                           jne 0x4000ea8	       803	move.c	FUNCTION_25	IF_1	IF_2
0x4000e59	    0x488b1d000000	            mov rbx, qword [0x04000e60] 	       803	move.c	FUNCTION_25	IF_1	IF_2
0x4000e60	            0xebbb	                           jmp 0x4000e1d	       803	move.c	FUNCTION_25	IF_1	IF_2
0x4000e62	    0x660f1f440000	                    nop word [rax + rax]	       803	move.c	FUNCTION_25	IF_1	IF_2
0x4000e68	          0x8b5340	            mov edx, dword [rbx + 0x40] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000e6b	    0x3b93c0000000	            cmp edx, dword [rbx + 0xc0] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000e71	    0x8b8b94000000	            mov ecx, dword [rbx + 0x94] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000e77	            0x7447	                            je 0x4000ec0	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000e79	          0x8b7344	            mov esi, dword [rbx + 0x44] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000e7c	    0x8b83b4000000	            mov eax, dword [rbx + 0xb4] 	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000e82	    0x8993c0000000	             mov dword [rbx + 0xc0], edx	       496	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000e88	    0x898bc8000000	             mov dword [rbx + 0xc8], ecx	       497	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000e8e	    0x89b3c4000000	             mov dword [rbx + 0xc4], esi	       499	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000e94	          0x83e0f8	                     and eax, 0xfffffff8	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000e97	    0x8983b4000000	             mov dword [rbx + 0xb4], eax	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000e9d	      0xe977ffffff	                           jmp 0x4000e19	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000ea2	    0x660f1f440000	                    nop word [rax + rax]	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000ea8	      0xe800000000	                          call 0x4000ead	       805	move.c	FUNCTION_25	IF_1	IF_2	CALL_3
0x4000ead	            0x85c0	                           test eax, eax	       805	move.c	FUNCTION_25	IF_1	IF_2	CALL_3
0x4000eaf	            0x75a8	                           jne 0x4000e59	       805	move.c	FUNCTION_25	IF_1	IF_2	CALL_3
0x4000eb1	      0xbe23000000	                           mov esi, 0x23	       808	move.c	FUNCTION_25	IF_1	CALL_4
0x4000eb6	          0x4889df	                            mov rdi, rbx	       808	move.c	FUNCTION_25	IF_1	CALL_4
0x4000eb9	      0xe800000000	                          call 0x4000ebe	       808	move.c	FUNCTION_25	IF_1	CALL_4
0x4000ebe	            0xeb99	                           jmp 0x4000e59	       808	move.c	FUNCTION_25	IF_1	CALL_4
0x4000ec0	    0x3b8bc8000000	            cmp ecx, dword [rbx + 0xc8] 	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000ec6	          0x8b7344	            mov esi, dword [rbx + 0x44] 	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000ec9	            0x75b1	                           jne 0x4000e7c	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000ecb	    0x3bb3c4000000	            cmp esi, dword [rbx + 0xc4] 	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000ed1	            0x75a9	                           jne 0x4000e7c	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000ed3	    0x8b83b4000000	            mov eax, dword [rbx + 0xb4] 	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000ed9	      0xe93bffffff	                           jmp 0x4000e19	       491	move.c	FUNCTION_8	ELSE_1	IF_2
scrolldown_clamp	SWITCH,0:WHILE,0:ELSE,2:functions,0:FOR,0:CALL,8:IF,5:DO,0	144
0x4003b60	            0x4155	                                push r13	      1416	move.c	FUNCTION_37
0x4003b62	            0x4154	                                push r12	      1416	move.c	FUNCTION_37
0x4003b64	              0x55	                                push rbp	      1416	move.c	FUNCTION_37
0x4003b65	              0x53	                                push rbx	      1416	move.c	FUNCTION_37
0x4003b66	        0x4883ec08	                              sub rsp, 8	      1416	move.c	FUNCTION_37
0x4003b6a	    0x488b3d000000	            mov rdi, qword [0x04003b71] 	      1419	move.c	FUNCTION_37
0x4003b71	        0x488b7778	            mov rsi, qword [rdi + 0x78] 	      1420	move.c	FUNCTION_37	CALL_1
0x4003b75	    0x448ba7840000	           mov r12d, dword [rdi + 0x84] 	      1419	move.c	FUNCTION_37
0x4003b7c	      0xe800000000	                          call 0x4003b81	      1420	move.c	FUNCTION_37	CALL_1
0x4003b81	    0x488b1d000000	            mov rbx, qword [0x04003b88] 	      1423	move.c	FUNCTION_37	IF_1
0x4003b88	          0x4189c5	                           mov r13d, eax	      1420	move.c	FUNCTION_37	CALL_1
0x4003b8b	      0x48837b7801	               cmp qword [rbx + 0x78], 1	      1425	move.c	FUNCTION_37	IF_1
0x4003b90	            0x7f16	                            jg 0x4003ba8	      1425	move.c	FUNCTION_37	IF_1
0x4003b92	          0x4139c4	                           cmp r12d, eax	      1425	move.c	FUNCTION_37	IF_1
0x4003b95	            0x7c11	                            jl 0x4003ba8	      1425	move.c	FUNCTION_37	IF_1
0x4003b97	        0x4883c408	                              add rsp, 8	      1475	move.c	FUNCTION_37
0x4003b9b	              0x5b	                                 pop rbx	      1475	move.c	FUNCTION_37
0x4003b9c	              0x5d	                                 pop rbp	      1475	move.c	FUNCTION_37
0x4003b9d	            0x415c	                                 pop r12	      1475	move.c	FUNCTION_37
0x4003b9f	            0x415d	                                 pop r13	      1475	move.c	FUNCTION_37
0x4003ba1	              0xc3	                                     ret	      1475	move.c	FUNCTION_37
0x4003ba2	    0x660f1f440000	                    nop word [rax + rax]	      1475	move.c	FUNCTION_37
0x4003ba8	    0x488b83b80000	            mov rax, qword [rbx + 0xb8] 	       481	move.c	FUNCTION_8	IF_1
0x4003baf	        0x48394338	            cmp qword [rbx + 0x38], rax 	       481	move.c	FUNCTION_8	IF_1
0x4003bb3	     0xf8427010000	                            je 0x4003ce0	       481	move.c	FUNCTION_8	IF_1
0x4003bb9	    0x8b83b4000000	            mov eax, dword [rbx + 0xb4] 	       483	move.c	FUNCTION_8	IF_1
0x4003bbf	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	       485	move.c	FUNCTION_8	IF_1
0x4003bc3	        0x488b7b40	            mov rdi, qword [rbx + 0x40] 	       485	move.c	FUNCTION_8	IF_1
0x4003bc7	    0x8b9394000000	            mov edx, dword [rbx + 0x94] 	       486	move.c	FUNCTION_8	IF_1
0x4003bcd	            0x2460	                            and al, 0x60	       483	move.c	FUNCTION_8	IF_1
0x4003bcf	    0x4889b3b80000	             mov qword [rbx + 0xb8], rsi	       485	move.c	FUNCTION_8	IF_1
0x4003bd6	    0x8983b4000000	             mov dword [rbx + 0xb4], eax	       483	move.c	FUNCTION_8	IF_1
0x4003bdc	    0x4889bbc00000	             mov qword [rbx + 0xc0], rdi	       485	move.c	FUNCTION_8	IF_1
0x4003be3	    0x8993c8000000	             mov dword [rbx + 0xc8], edx	       486	move.c	FUNCTION_8	IF_1
0x4003be9	          0x83e003	                              and eax, 3	       635	move.c	FUNCTION_21	IF_1
0x4003bec	          0x83f803	                              cmp eax, 3	       635	move.c	FUNCTION_21	IF_1
0x4003bef	            0x7411	                            je 0x4003c02	       635	move.c	FUNCTION_21	IF_1
0x4003bf1	      0xbf01000000	                              mov edi, 1	       636	move.c	FUNCTION_21	CALL_2
0x4003bf6	      0xe800000000	                          call 0x4003bfb	       636	move.c	FUNCTION_21	CALL_2
0x4003bfb	    0x488b1d000000	            mov rbx, qword [0x04003c02] 	       636	move.c	FUNCTION_21	CALL_2
0x4003c02	          0x4539ec	                          cmp r12d, r13d	      1439	move.c	FUNCTION_37	IF_2
0x4003c05	    0x8babdc000000	            mov ebp, dword [rbx + 0xdc] 	      1437	move.c	FUNCTION_37
0x4003c0b	     0xf8d2f010000	                           jge 0x4003d40	      1439	move.c	FUNCTION_37	IF_2
0x4003c11	          0x83c501	                              add ebp, 1	      1440	move.c	FUNCTION_37	IF_2
0x4003c14	    0x8b9394020000	           mov edx, dword [rbx + 0x294] 	      1446	move.c	FUNCTION_37	IF_3
0x4003c1a	            0x85d2	                           test edx, edx	      1446	move.c	FUNCTION_37	IF_3
0x4003c1c	            0x740e	                            je 0x4003c2c	      1446	move.c	FUNCTION_37	IF_3
0x4003c1e	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      1446	move.c	FUNCTION_37	IF_3
0x4003c24	            0x85c0	                           test eax, eax	      1446	move.c	FUNCTION_37	IF_3
0x4003c26	     0xf8534010000	                           jne 0x4003d60	      1446	move.c	FUNCTION_37	IF_3
0x4003c2c	    0x486383a00000	         movsxd rax, dword [rbx + 0xa0] 	      1453	move.c	FUNCTION_37	IF_4
0x4003c33	          0x4863ed	                         movsxd rbp, ebp	      1453	move.c	FUNCTION_37	IF_4
0x4003c36	    0x482b05000000	             sub rax, qword [0x04003c3d]	      1453	move.c	FUNCTION_37	IF_4
0x4003c3d	          0x4839c5	                            cmp rbp, rax	      1453	move.c	FUNCTION_37	IF_4
0x4003c40	     0xf8d51ffffff	                           jge 0x4003b97	      1453	move.c	FUNCTION_37	IF_4
0x4003c46	          0x4539ec	                          cmp r12d, r13d	      1456	move.c	FUNCTION_37	IF_4	IF_5
0x4003c49	     0xf8dd1000000	                           jge 0x4003d20	      1456	move.c	FUNCTION_37	IF_4	IF_5
0x4003c4f	    0x8b8384000000	            mov eax, dword [rbx + 0x84] 	      1458	move.c	FUNCTION_37	IF_4	IF_5
0x4003c55	          0x83c001	                              add eax, 1	      1458	move.c	FUNCTION_37	IF_4	IF_5
0x4003c58	            0x85c0	                           test eax, eax	      1368	move.c	FUNCTION_35	IF_1
0x4003c5a	    0x898384000000	             mov dword [rbx + 0x84], eax	      1458	move.c	FUNCTION_37	IF_4	IF_5
0x4003c60	            0x7e4a	                           jle 0x4003cac	      1368	move.c	FUNCTION_35	IF_1
0x4003c62	        0x488b7378	            mov rsi, qword [rbx + 0x78] 	      1370	move.c	FUNCTION_35	IF_1	CALL_1
0x4003c66	      0xba01000000	                              mov edx, 1	      1370	move.c	FUNCTION_35	IF_1	CALL_1
0x4003c6b	          0x4889df	                            mov rdi, rbx	      1370	move.c	FUNCTION_35	IF_1	CALL_1
0x4003c6e	      0xe800000000	                          call 0x4003c73	      1370	move.c	FUNCTION_35	IF_1	CALL_1
0x4003c73	    0x8b8b84000000	            mov ecx, dword [rbx + 0x84] 	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x4003c79	    0x8b93a0000000	            mov edx, dword [rbx + 0xa0] 	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x4003c7f	             0x1c1	                            add ecx, eax	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x4003c81	            0x39d1	                            cmp ecx, edx	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x4003c83	            0x7e20	                           jle 0x4003ca5	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x4003c85	        0x488b4b78	            mov rcx, qword [rbx + 0x78] 	      1373	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x4003c89	        0x4883f901	                              cmp rcx, 1	      1373	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x4003c8d	     0xf8e3d010000	                           jle 0x4003dd0	      1373	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x4003c93	        0x4883e901	                              sub rcx, 1	      1375	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x4003c97	        0x48894b78	             mov qword [rbx + 0x78], rcx	      1375	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x4003c9b	    0xc78384000000	               mov dword [rbx + 0x84], 0	      1376	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x4003ca5	    0x488b1d000000	            mov rbx, qword [0x04003cac] 	      1376	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x4003cac	        0x488b7b78	            mov rdi, qword [rbx + 0x78] 	      1376	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x4003cb0	        0x488d7378	                   lea rsi, [rbx + 0x78]	      1470	move.c	FUNCTION_37	IF_4	CALL_8
0x4003cb4	            0x31d2	                            xor edx, edx	      1470	move.c	FUNCTION_37	IF_4	CALL_8
0x4003cb6	      0xe800000000	                          call 0x4003cbb	      1470	move.c	FUNCTION_37	IF_4	CALL_8
0x4003cbb	    0x488b05000000	            mov rax, qword [0x04003cc2] 	      1472	move.c	FUNCTION_37	IF_4
0x4003cc2	    0x4883a8e80000	               sub qword [rax + 0xe8], 1	      1472	move.c	FUNCTION_37	IF_4
0x4003cca	    0x83a0b4000000	      and dword [rax + 0xb4], 0xffffffce	      1473	move.c	FUNCTION_37	IF_4
0x4003cd1	        0x4883c408	                              add rsp, 8	      1475	move.c	FUNCTION_37
0x4003cd5	              0x5b	                                 pop rbx	      1475	move.c	FUNCTION_37
0x4003cd6	              0x5d	                                 pop rbp	      1475	move.c	FUNCTION_37
0x4003cd7	            0x415c	                                 pop r12	      1475	move.c	FUNCTION_37
0x4003cd9	            0x415d	                                 pop r13	      1475	move.c	FUNCTION_37
0x4003cdb	              0xc3	                                     ret	      1475	move.c	FUNCTION_37
0x4003cdc	         0xf1f4000	                         nop dword [rax]	      1475	move.c	FUNCTION_37
0x4003ce0	          0x8b5340	            mov edx, dword [rbx + 0x40] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4003ce3	    0x3b93c0000000	            cmp edx, dword [rbx + 0xc0] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4003ce9	    0x8b8b94000000	            mov ecx, dword [rbx + 0x94] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4003cef	     0xf84ab000000	                            je 0x4003da0	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4003cf5	          0x8b7344	            mov esi, dword [rbx + 0x44] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4003cf8	    0x8b83b4000000	            mov eax, dword [rbx + 0xb4] 	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x4003cfe	    0x8993c0000000	             mov dword [rbx + 0xc0], edx	       496	move.c	FUNCTION_8	ELSE_1	IF_2
0x4003d04	    0x898bc8000000	             mov dword [rbx + 0xc8], ecx	       497	move.c	FUNCTION_8	ELSE_1	IF_2
0x4003d0a	    0x89b3c4000000	             mov dword [rbx + 0xc4], esi	       499	move.c	FUNCTION_8	ELSE_1	IF_2
0x4003d10	          0x83e0f8	                     and eax, 0xfffffff8	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x4003d13	    0x8983b4000000	             mov dword [rbx + 0xb4], eax	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x4003d19	      0xe9cbfeffff	                           jmp 0x4003be9	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x4003d1e	            0x6690	                                     nop	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x4003d20	        0x488b4378	            mov rax, qword [rbx + 0x78] 	      1463	move.c	FUNCTION_37	IF_4	ELSE_2
0x4003d24	    0xc78384000000	               mov dword [rbx + 0x84], 0	      1464	move.c	FUNCTION_37	IF_4	ELSE_2
0x4003d2e	        0x488d78ff	                      lea rdi, [rax - 1]	      1463	move.c	FUNCTION_37	IF_4	ELSE_2
0x4003d32	        0x48897b78	             mov qword [rbx + 0x78], rdi	      1463	move.c	FUNCTION_37	IF_4	ELSE_2
0x4003d36	      0xe975ffffff	                           jmp 0x4003cb0	      1463	move.c	FUNCTION_37	IF_4	ELSE_2
0x4003d3b	       0xf1f440000	                   nop dword [rax + rax]	      1463	move.c	FUNCTION_37	IF_4	ELSE_2
0x4003d40	        0x488b7b78	            mov rdi, qword [rbx + 0x78] 	      1442	move.c	FUNCTION_37	CALL_3
0x4003d44	        0x4883ef01	                              sub rdi, 1	      1442	move.c	FUNCTION_37	CALL_3
0x4003d48	      0xe800000000	                          call 0x4003d4d	      1442	move.c	FUNCTION_37	CALL_3
0x4003d4d	    0x488b1d000000	            mov rbx, qword [0x04003d54] 	      1442	move.c	FUNCTION_37	CALL_3
0x4003d54	             0x1c5	                            add ebp, eax	      1442	move.c	FUNCTION_37	CALL_3
0x4003d56	      0xe9b9feffff	                           jmp 0x4003c14	      1442	move.c	FUNCTION_37	CALL_3
0x4003d5b	       0xf1f440000	                   nop dword [rax + rax]	      1442	move.c	FUNCTION_37	CALL_3
0x4003d60	      0xe87bc4ffff	               call sym.validate_cheight	      1448	move.c	FUNCTION_37	IF_3	CALL_5
0x4003d65	    0x488b3d000000	            mov rdi, qword [0x04003d6c] 	       788	move.c	FUNCTION_24	CALL_1
0x4003d6c	      0xe800000000	                          call 0x4003d71	       788	move.c	FUNCTION_24	CALL_1
0x4003d71	    0x488b1d000000	            mov rbx, qword [0x04003d78] 	      1450	move.c	FUNCTION_37	IF_3
0x4003d78	    0x8b83cc000000	            mov eax, dword [rbx + 0xcc] 	      1450	move.c	FUNCTION_37	IF_3
0x4003d7e	          0x8d48ff	                      lea ecx, [rax - 1]	      1450	move.c	FUNCTION_37	IF_3
0x4003d81	    0x8b83d8000000	            mov eax, dword [rbx + 0xd8] 	      1450	move.c	FUNCTION_37	IF_3
0x4003d87	              0x99	                                     cdq	      1450	move.c	FUNCTION_37	IF_3
0x4003d88	    0xf7bbac000000	                 idiv dword [rbx + 0xac]	      1450	move.c	FUNCTION_37	IF_3
0x4003d8e	            0x29c1	                            sub ecx, eax	      1450	move.c	FUNCTION_37	IF_3
0x4003d90	             0x1cd	                            add ebp, ecx	      1450	move.c	FUNCTION_37	IF_3
0x4003d92	      0xe995feffff	                           jmp 0x4003c2c	      1450	move.c	FUNCTION_37	IF_3
0x4003d97	    0x660f1f840000	                    nop word [rax + rax]	      1450	move.c	FUNCTION_37	IF_3
0x4003da0	    0x3b8bc8000000	            cmp ecx, dword [rbx + 0xc8] 	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x4003da6	          0x8b7344	            mov esi, dword [rbx + 0x44] 	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x4003da9	     0xf8549ffffff	                           jne 0x4003cf8	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x4003daf	    0x3bb3c4000000	            cmp esi, dword [rbx + 0xc4] 	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x4003db5	     0xf853dffffff	                           jne 0x4003cf8	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x4003dbb	    0x8b83b4000000	            mov eax, dword [rbx + 0xb4] 	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x4003dc1	      0xe923feffff	                           jmp 0x4003be9	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x4003dc6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x4003dd0	            0x29c2	                            sub edx, eax	      1380	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1
0x4003dd2	            0x85d2	                           test edx, edx	      1381	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x4003dd4	    0x899384000000	             mov dword [rbx + 0x84], edx	      1380	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1
0x4003dda	     0xf89c5feffff	                           jns 0x4003ca5	      1381	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x4003de0	      0xe9b6feffff	                           jmp 0x4003c9b	      1381	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
check_top_offset	SWITCH,0:WHILE,1:ELSE,0:functions,0:FOR,0:CALL,2:IF,3:DO,0	96
0x4000040	            0x4154	                                push r12	       428	move.c	FUNCTION_6
0x4000042	              0x55	                                push rbp	       428	move.c	FUNCTION_6
0x4000043	              0x53	                                push rbx	       428	move.c	FUNCTION_6
0x4000044	        0x4883ec20	                           sub rsp, 0x20	       428	move.c	FUNCTION_6
0x4000048	    0x488b3d000000	            mov rdi, qword [0x0400004f] 	       432	move.c	FUNCTION_6	IF_1
0x400004f	    0x64488b042528	                mov rax, qword fs:[0x28]	       428	move.c	FUNCTION_6
0x4000058	      0x4889442418	             mov qword [rsp + 0x18], rax	       428	move.c	FUNCTION_6
0x400005d	            0x31c0	                            xor eax, eax	       428	move.c	FUNCTION_6
0x400005f	    0x488b05000000	            mov rax, qword [0x04000066] 	       432	move.c	FUNCTION_6	IF_1
0x4000066	        0x488b4f38	            mov rcx, qword [rdi + 0x38] 	       432	move.c	FUNCTION_6	IF_1
0x400006a	          0x4889c2	                            mov rdx, rax	       432	move.c	FUNCTION_6	IF_1
0x400006d	        0x48035778	             add rdx, qword [rdi + 0x78]	       432	move.c	FUNCTION_6	IF_1
0x4000071	          0x4839d1	                            cmp rcx, rdx	       432	move.c	FUNCTION_6	IF_1
0x4000074	     0xf8d36010000	                           jge 0x40001b0	       432	move.c	FUNCTION_6	IF_1
0x400007a	    0x4863af840000	         movsxd rbp, dword [rdi + 0x84] 	       441	move.c	FUNCTION_6	IF_1
0x4000081	        0x48890c24	                    mov qword [rsp], rcx	       438	move.c	FUNCTION_6	IF_1
0x4000085	    0xc74424080000	                  mov dword [rsp + 8], 0	       440	move.c	FUNCTION_6	IF_1
0x400008d	          0x4839c5	                            cmp rbp, rax	       446	move.c	FUNCTION_6	IF_1	WHILE_1
0x4000090	          0x4889eb	                            mov rbx, rbp	       441	move.c	FUNCTION_6	IF_1
0x4000093	     0xf8da6000000	                           jge 0x400013f	       446	move.c	FUNCTION_6	IF_1	WHILE_1
0x4000099	          0x4531e4	                          xor r12d, r12d	       446	move.c	FUNCTION_6	IF_1	WHILE_1
0x400009c	            0xeb6a	                           jmp 0x4000108	       446	move.c	FUNCTION_6	IF_1	WHILE_1
0x400009e	            0x6690	                                     nop	       446	move.c	FUNCTION_6	IF_1	WHILE_1
0x40000a0	        0x488b0424	                    mov rax, qword [rsp]	      1549	move.c	FUNCTION_39	ELSE_1
0x40000a4	    0xc74424080000	                  mov dword [rsp + 8], 0	      1551	move.c	FUNCTION_39	ELSE_1
0x40000ac	        0x488d48ff	                      lea rcx, [rax - 1]	      1549	move.c	FUNCTION_39	ELSE_1
0x40000b0	          0x4885c9	                           test rcx, rcx	      1553	move.c	FUNCTION_39	ELSE_1	IF_2
0x40000b3	        0x48890c24	                    mov qword [rsp], rcx	      1549	move.c	FUNCTION_39	ELSE_1
0x40000b7	     0xf8ec3000000	                           jle 0x4000180	      1553	move.c	FUNCTION_39	ELSE_1	IF_2
0x40000bd	            0x31d2	                            xor edx, edx	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x40000bf	          0x4889e6	                            mov rsi, rsp	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x40000c2	          0x4889cf	                            mov rdi, rcx	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x40000c5	      0xe800000000	                          call 0x40000ca	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x40000ca	            0x85c0	                           test eax, eax	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x40000cc	     0xf84c6000000	                            je 0x4000198	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x40000d2	        0x488b0c24	                    mov rcx, qword [rsp]	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x40000d6	    0xc744240c0100	                mov dword [rsp + 0xc], 1	      1559	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3
0x40000de	      0xb801000000	                              mov eax, 1	      1559	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3
0x40000e3	    0x488b3d000000	            mov rdi, qword [0x040000ea] 	       450	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x40000ea	        0x48394f78	            cmp qword [rdi + 0x78], rcx 	       450	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x40000ee	            0x7f48	                            jg 0x4000138	       450	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x40000f0	            0x7476	                            je 0x4000168	       452	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x40000f2	             0x1c3	                            add ebx, eax	       456	move.c	FUNCTION_6	IF_1	WHILE_1
0x40000f4	    0x488b05000000	            mov rax, qword [0x040000fb] 	       446	move.c	FUNCTION_6	IF_1	WHILE_1
0x40000fb	          0x4863eb	                         movsxd rbp, ebx	       446	move.c	FUNCTION_6	IF_1	WHILE_1
0x40000fe	          0x4839c5	                            cmp rbp, rax	       446	move.c	FUNCTION_6	IF_1	WHILE_1
0x4000101	            0x7d3c	                           jge 0x400013f	       446	move.c	FUNCTION_6	IF_1	WHILE_1
0x4000103	      0x448b642408	               mov r12d, dword [rsp + 8]	       446	move.c	FUNCTION_6	IF_1	WHILE_1
0x4000108	          0x4889ce	                            mov rsi, rcx	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x400010b	      0xe800000000	                          call 0x4000110	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x4000110	          0x4439e0	                           cmp eax, r12d	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x4000113	            0x7e8b	                           jle 0x40000a0	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x4000115	    0x488b3d000000	            mov rdi, qword [0x0400011c] 	       450	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x400011c	      0x8344240801	                  add dword [rsp + 8], 1	      1543	move.c	FUNCTION_39	IF_1
0x4000121	      0xb801000000	                              mov eax, 1	      1544	move.c	FUNCTION_39	IF_1
0x4000126	        0x488b0c24	                    mov rcx, qword [rsp]	      1544	move.c	FUNCTION_39	IF_1
0x400012a	    0xc744240c0100	                mov dword [rsp + 0xc], 1	      1544	move.c	FUNCTION_39	IF_1
0x4000132	        0x48394f78	            cmp qword [rdi + 0x78], rcx 	       450	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x4000136	            0x7eb8	                           jle 0x40000f0	       450	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x4000138	    0x488b05000000	            mov rax, qword [0x0400013f] 	       450	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x400013f	          0x4839c5	                            cmp rbp, rax	       459	move.c	FUNCTION_6	IF_1	IF_3
0x4000142	           0xf9cc0	                                 setl al	       459	move.c	FUNCTION_6	IF_1	IF_3
0x4000145	           0xfb6c0	                           movzx eax, al	       459	move.c	FUNCTION_6	IF_1	IF_3
0x4000148	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       462	move.c	FUNCTION_6
0x400014d	    0x644833142528	                xor rdx, qword fs:[0x28]	       462	move.c	FUNCTION_6
0x4000156	            0x7578	                           jne 0x40001d0	       462	move.c	FUNCTION_6
0x4000158	        0x4883c420	                           add rsp, 0x20	       462	move.c	FUNCTION_6
0x400015c	              0x5b	                                 pop rbx	       462	move.c	FUNCTION_6
0x400015d	              0x5d	                                 pop rbp	       462	move.c	FUNCTION_6
0x400015e	            0x415c	                                 pop r12	       462	move.c	FUNCTION_6
0x4000160	              0xc3	                                     ret	       462	move.c	FUNCTION_6
0x4000161	     0xf1f80000000	                         nop dword [rax]	       462	move.c	FUNCTION_6
0x4000168	        0x8b542408	                mov edx, dword [rsp + 8]	       452	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x400016c	            0x85d2	                           test edx, edx	       452	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x400016e	            0x7e82	                           jle 0x40000f2	       452	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x4000170	    0x488b05000000	            mov rax, qword [0x04000177] 	       452	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x4000177	            0xebc6	                           jmp 0x400013f	       452	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x4000179	     0xf1f80000000	                         nop dword [rax]	       452	move.c	FUNCTION_6	IF_1	WHILE_1	IF_2
0x4000180	    0xc744240cffff	      mov dword [rsp + 0xc], 0x7fffffff 	      1554	move.c	FUNCTION_39	ELSE_1	IF_2
0x4000188	      0xb8ffffff7f	                     mov eax, 0x7fffffff	      1554	move.c	FUNCTION_39	ELSE_1	IF_2
0x400018d	      0xe951ffffff	                           jmp 0x40000e3	      1554	move.c	FUNCTION_39	ELSE_1	IF_2
0x4000192	    0x660f1f440000	                    nop word [rax + rax]	      1554	move.c	FUNCTION_39	ELSE_1	IF_2
0x4000198	        0x488b3c24	                    mov rdi, qword [rsp]	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x400019c	      0xe800000000	                          call 0x40001a1	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x40001a1	        0x488b0c24	                    mov rcx, qword [rsp]	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x40001a5	        0x8944240c	              mov dword [rsp + 0xc], eax	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x40001a9	      0xe935ffffff	                           jmp 0x40000e3	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x40001ae	            0x6690	                                     nop	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x40001b0	      0xe800000000	                          call 0x40001b5	       434	move.c	FUNCTION_6	IF_1	CALL_1
0x40001b5	            0x85c0	                           test eax, eax	       434	move.c	FUNCTION_6	IF_1	CALL_1
0x40001b7	            0x748f	                            je 0x4000148	       434	move.c	FUNCTION_6	IF_1	CALL_1
0x40001b9	    0x488b3d000000	            mov rdi, qword [0x040001c0] 	       434	move.c	FUNCTION_6	IF_1	CALL_1
0x40001c0	    0x488b05000000	            mov rax, qword [0x040001c7] 	       434	move.c	FUNCTION_6	IF_1	CALL_1
0x40001c7	        0x488b4f38	            mov rcx, qword [rdi + 0x38] 	       434	move.c	FUNCTION_6	IF_1	CALL_1
0x40001cb	      0xe9aafeffff	                           jmp 0x400007a	       434	move.c	FUNCTION_6	IF_1	CALL_1
0x40001d0	      0xe800000000	                          call 0x40001d5	       462	move.c	FUNCTION_6
scroll_cursor_halfway	SWITCH,0:WHILE,1:ELSE,2:functions,0:FOR,0:CALL,7:IF,9:DO,0	182
0x4001af0	            0x4157	                                push r15	      2035	move.c	FUNCTION_46
0x4001af2	            0x4156	                                push r14	      2035	move.c	FUNCTION_46
0x4001af4	            0x4155	                                push r13	      2035	move.c	FUNCTION_46
0x4001af6	            0x4154	                                push r12	      2035	move.c	FUNCTION_46
0x4001af8	          0x4531e4	                          xor r12d, r12d	      2039	move.c	FUNCTION_46
0x4001afb	              0x55	                                push rbp	      2035	move.c	FUNCTION_46
0x4001afc	              0x53	                                push rbx	      2035	move.c	FUNCTION_46
0x4001afd	        0x4883ec48	                           sub rsp, 0x48	      2035	move.c	FUNCTION_46
0x4001b01	    0x64488b042528	                mov rax, qword fs:[0x28]	      2035	move.c	FUNCTION_46
0x4001b0a	      0x4889442438	             mov qword [rsp + 0x38], rax	      2035	move.c	FUNCTION_46
0x4001b0f	            0x31c0	                            xor eax, eax	      2035	move.c	FUNCTION_46
0x4001b11	    0x488b05000000	            mov rax, qword [0x04001b18] 	      2046	move.c	FUNCTION_46
0x4001b18	        0x897c2404	                mov dword [rsp + 4], edi	      2035	move.c	FUNCTION_46
0x4001b1c	      0x488d542420	                   lea rdx, [rsp + 0x20]	      2051	move.c	FUNCTION_46	CALL_1
0x4001b21	      0x488d742410	                   lea rsi, [rsp + 0x10]	      2051	move.c	FUNCTION_46	CALL_1
0x4001b26	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      2049	move.c	FUNCTION_46
0x4001b2a	        0x488b4878	            mov rcx, qword [rax + 0x78] 	      2046	move.c	FUNCTION_46
0x4001b2e	      0x48897c2420	             mov qword [rsp + 0x20], rdi	      2049	move.c	FUNCTION_46
0x4001b33	      0x48894c2408	                mov qword [rsp + 8], rcx	      2046	move.c	FUNCTION_46
0x4001b38	      0x48897c2410	             mov qword [rsp + 0x10], rdi	      2049	move.c	FUNCTION_46
0x4001b3d	      0xe800000000	                          call 0x4001b42	      2051	move.c	FUNCTION_46	CALL_1
0x4001b42	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2054	move.c	FUNCTION_46	CALL_2
0x4001b47	      0xe800000000	                          call 0x4001b4c	      2054	move.c	FUNCTION_46	CALL_2
0x4001b4c	      0x488b6c2410	            mov rbp, qword [rsp + 0x10] 	      2060	move.c	FUNCTION_46
0x4001b51	    0xc74424180000	               mov dword [rsp + 0x18], 0	      2055	move.c	FUNCTION_46
0x4001b59	    0xc74424280000	               mov dword [rsp + 0x28], 0	      2056	move.c	FUNCTION_46
0x4001b61	    0x488b3d000000	            mov rdi, qword [0x04001b68] 	      2056	move.c	FUNCTION_46
0x4001b68	        0x4883fd01	                              cmp rbp, 1	      2061	move.c	FUNCTION_46	WHILE_1
0x4001b6c	     0xf8ea1000000	                           jle 0x4001c13	      2061	move.c	FUNCTION_46	WHILE_1
0x4001b72	    0x488b3d000000	            mov rdi, qword [0x04001b79] 	      2061	move.c	FUNCTION_46	WHILE_1
0x4001b79	          0x4189c6	                           mov r14d, eax	      2061	move.c	FUNCTION_46	WHILE_1
0x4001b7c	            0x31db	                            xor ebx, ebx	      2061	move.c	FUNCTION_46	WHILE_1
0x4001b7e	          0x4531e4	                          xor r12d, r12d	      2061	move.c	FUNCTION_46	WHILE_1
0x4001b81	          0x4531ff	                          xor r15d, r15d	      2061	move.c	FUNCTION_46	WHILE_1
0x4001b84	         0xf1f4000	                         nop dword [rax]	      2061	move.c	FUNCTION_46	WHILE_1
0x4001b88	          0x4439fb	                           cmp ebx, r15d	      2063	move.c	FUNCTION_46	WHILE_1	IF_1
0x4001b8b	     0xf8e37010000	                           jle 0x4001cc8	      2063	move.c	FUNCTION_46	WHILE_1	IF_1
0x4001b91	      0x448b6c2418	           mov r13d, dword [rsp + 0x18] 	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x4001b96	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x4001b9b	      0xe800000000	                          call 0x4001ba0	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x4001ba0	          0x4139c5	                           cmp r13d, eax	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x4001ba3	     0xf8cb7010000	                            jl 0x4001d60	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x4001ba9	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1549	move.c	FUNCTION_39	ELSE_1
0x4001bae	    0xc74424180000	               mov dword [rsp + 0x18], 0	      1551	move.c	FUNCTION_39	ELSE_1
0x4001bb6	        0x488d78ff	                      lea rdi, [rax - 1]	      1549	move.c	FUNCTION_39	ELSE_1
0x4001bba	          0x4885ff	                           test rdi, rdi	      1553	move.c	FUNCTION_39	ELSE_1	IF_2
0x4001bbd	      0x48897c2410	             mov qword [rsp + 0x10], rdi	      1549	move.c	FUNCTION_39	ELSE_1
0x4001bc2	     0xf8eb0010000	                           jle 0x4001d78	      1553	move.c	FUNCTION_39	ELSE_1	IF_2
0x4001bc8	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x4001bcd	            0x31d2	                            xor edx, edx	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x4001bcf	      0xe800000000	                          call 0x4001bd4	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x4001bd4	            0x85c0	                           test eax, eax	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x4001bd6	     0xf84cc010000	                            je 0x4001da8	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x4001bdc	    0xc744241c0100	               mov dword [rsp + 0x1c], 1	      1559	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3
0x4001be4	      0xb801000000	                              mov eax, 1	      2084	move.c	FUNCTION_46	WHILE_1	IF_5	IF_6
0x4001be9	          0x4101c6	                           add r14d, eax	      2087	move.c	FUNCTION_46	WHILE_1	IF_5	ELSE_2
0x4001bec	    0x488b3d000000	            mov rdi, qword [0x04001bf3] 	      2088	move.c	FUNCTION_46	WHILE_1	IF_5	IF_7
0x4001bf3	    0x443bb7a00000	           cmp r14d, dword [rdi + 0xa0] 	      2088	move.c	FUNCTION_46	WHILE_1	IF_5	IF_7
0x4001bfa	            0x7f17	                            jg 0x4001c13	      2088	move.c	FUNCTION_46	WHILE_1	IF_5	IF_7
0x4001bfc	      0x488b6c2410	            mov rbp, qword [rsp + 0x10] 	      2091	move.c	FUNCTION_46	WHILE_1	IF_5
0x4001c01	          0x4101c7	                           add r15d, eax	      2090	move.c	FUNCTION_46	WHILE_1	IF_5
0x4001c04	      0x448b642418	           mov r12d, dword [rsp + 0x18] 	      2093	move.c	FUNCTION_46	WHILE_1	IF_5
0x4001c09	        0x4883fd01	                              cmp rbp, 1	      2061	move.c	FUNCTION_46	WHILE_1
0x4001c0d	     0xf8f75ffffff	                            jg 0x4001b88	      2061	move.c	FUNCTION_46	WHILE_1
0x4001c13	        0x488d7778	                   lea rsi, [rdi + 0x78]	      2098	move.c	FUNCTION_46	IF_8	CALL_6
0x4001c17	            0x31d2	                            xor edx, edx	      2098	move.c	FUNCTION_46	IF_8	CALL_6
0x4001c19	          0x4889ef	                            mov rdi, rbp	      2098	move.c	FUNCTION_46	IF_8	CALL_6
0x4001c1c	      0xe800000000	                          call 0x4001c21	      2098	move.c	FUNCTION_46	IF_8	CALL_6
0x4001c21	            0x85c0	                           test eax, eax	      2098	move.c	FUNCTION_46	IF_8	CALL_6
0x4001c23	    0x488b1d000000	            mov rbx, qword [0x04001c2a] 	      2100	move.c	FUNCTION_46	IF_8
0x4001c2a	     0xf84c8010000	                            je 0x4001df8	      2098	move.c	FUNCTION_46	IF_8	CALL_6
0x4001c30	        0x488b7378	            mov rsi, qword [rbx + 0x78] 	      2098	move.c	FUNCTION_46	IF_8	CALL_6
0x4001c34	    0x486383a00000	         movsxd rax, dword [rbx + 0xa0] 	      2103	move.c	FUNCTION_46	IF_9
0x4001c3b	    0x4489a3840000	            mov dword [rbx + 0x84], r12d	      2102	move.c	FUNCTION_46
0x4001c42	          0x4801f0	                            add rax, rsi	      2103	move.c	FUNCTION_46	IF_9
0x4001c45	      0x4839442408	                cmp qword [rsp + 8], rax	      2103	move.c	FUNCTION_46	IF_9
0x4001c4a	            0x7e0a	                           jle 0x4001c56	      2103	move.c	FUNCTION_46	IF_9
0x4001c4c	    0xc7838c000000	               mov dword [rbx + 0x8c], 0	      2104	move.c	FUNCTION_46	IF_9
0x4001c56	          0x4585e4	                         test r12d, r12d	      1368	move.c	FUNCTION_35	IF_1
0x4001c59	            0x7e36	                           jle 0x4001c91	      1368	move.c	FUNCTION_35	IF_1
0x4001c5b	      0xba01000000	                              mov edx, 1	      1370	move.c	FUNCTION_35	IF_1	CALL_1
0x4001c60	          0x4889df	                            mov rdi, rbx	      1370	move.c	FUNCTION_35	IF_1	CALL_1
0x4001c63	      0xe800000000	                          call 0x4001c68	      1370	move.c	FUNCTION_35	IF_1	CALL_1
0x4001c68	    0x8b8b84000000	            mov ecx, dword [rbx + 0x84] 	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x4001c6e	    0x8b93a0000000	            mov edx, dword [rbx + 0xa0] 	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x4001c74	             0x1c1	                            add ecx, eax	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x4001c76	            0x39d1	                            cmp ecx, edx	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x4001c78	            0x7e10	                           jle 0x4001c8a	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x4001c7a	            0x29c2	                            sub edx, eax	      1380	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1
0x4001c7c	            0x85d2	                           test edx, edx	      1381	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x4001c7e	    0x899384000000	             mov dword [rbx + 0x84], edx	      1380	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1
0x4001c84	     0xf8891010000	                            js 0x4001e1b	      1381	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x4001c8a	    0x488b1d000000	            mov rbx, qword [0x04001c91] 	      1381	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x4001c91	    0x8b83b4000000	            mov eax, dword [rbx + 0xb4] 	      2108	move.c	FUNCTION_46
0x4001c97	          0x83e08e	                     and eax, 0xffffff8e	      2108	move.c	FUNCTION_46
0x4001c9a	             0xc80	                             or al, 0x80	      2108	move.c	FUNCTION_46
0x4001c9c	    0x8983b4000000	             mov dword [rbx + 0xb4], eax	      2108	move.c	FUNCTION_46
0x4001ca2	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      2109	move.c	FUNCTION_46
0x4001ca7	    0x644833042528	                xor rax, qword fs:[0x28]	      2109	move.c	FUNCTION_46
0x4001cb0	     0xf8574010000	                           jne 0x4001e2a	      2109	move.c	FUNCTION_46
0x4001cb6	        0x4883c448	                           add rsp, 0x48	      2109	move.c	FUNCTION_46
0x4001cba	              0x5b	                                 pop rbx	      2109	move.c	FUNCTION_46
0x4001cbb	              0x5d	                                 pop rbp	      2109	move.c	FUNCTION_46
0x4001cbc	            0x415c	                                 pop r12	      2109	move.c	FUNCTION_46
0x4001cbe	            0x415d	                                 pop r13	      2109	move.c	FUNCTION_46
0x4001cc0	            0x415e	                                 pop r14	      2109	move.c	FUNCTION_46
0x4001cc2	            0x415f	                                 pop r15	      2109	move.c	FUNCTION_46
0x4001cc4	              0xc3	                                     ret	      2109	move.c	FUNCTION_46
0x4001cc5	           0xf1f00	                         nop dword [rax]	      2109	move.c	FUNCTION_46
0x4001cc8	    0x488b05000000	            mov rax, qword [0x04001ccf] 	      2065	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2
0x4001ccf	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      2065	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2
0x4001cd4	          0x483b30	                    cmp rsi, qword [rax]	      2065	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2
0x4001cd7	            0x7c1f	                            jl 0x4001cf8	      2065	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2
0x4001cd9	          0x83c301	                              add ebx, 1	      2075	move.c	FUNCTION_46	WHILE_1	IF_1	ELSE_1
0x4001cdc	      0x837c240401	                  cmp dword [rsp + 4], 1	      2077	move.c	FUNCTION_46	WHILE_1	IF_1	ELSE_1	IF_4
0x4001ce1	        0x4183deff	            sbb r14d, 0xffffffffffffffff	      2077	move.c	FUNCTION_46	WHILE_1	IF_1	ELSE_1	IF_4
0x4001ce5	          0x4439fb	                           cmp ebx, r15d	      2081	move.c	FUNCTION_46	WHILE_1	IF_5
0x4001ce8	     0xf8e9afeffff	                           jle 0x4001b88	      2081	move.c	FUNCTION_46	WHILE_1	IF_5
0x4001cee	      0xe99efeffff	                           jmp 0x4001b91	      2081	move.c	FUNCTION_46	WHILE_1	IF_5
0x4001cf3	       0xf1f440000	                   nop dword [rax + rax]	      2081	move.c	FUNCTION_46	WHILE_1	IF_5
0x4001cf8	      0x448b6c2428	           mov r13d, dword [rsp + 0x28] 	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x4001cfd	        0x4883c601	                              add rsi, 1	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x4001d01	      0xe800000000	                          call 0x4001d06	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x4001d06	          0x4139c5	                           cmp r13d, eax	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x4001d09	     0xf8c81000000	                            jl 0x4001d90	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x4001d0f	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      1585	move.c	FUNCTION_40	ELSE_1
0x4001d14	    0xc74424280000	               mov dword [rsp + 0x28], 0	      1587	move.c	FUNCTION_40	ELSE_1
0x4001d1c	        0x488d7801	                      lea rdi, [rax + 1]	      1585	move.c	FUNCTION_40	ELSE_1
0x4001d20	    0x488b05000000	            mov rax, qword [0x04001d27] 	      1589	move.c	FUNCTION_40	ELSE_1	IF_2
0x4001d27	      0x48897c2420	             mov qword [rsp + 0x20], rdi	      1585	move.c	FUNCTION_40	ELSE_1
0x4001d2c	          0x483b38	                    cmp rdi, qword [rax]	      1589	move.c	FUNCTION_40	ELSE_1	IF_2
0x4001d2f	     0xf8e9b000000	                           jle 0x4001dd0	      1589	move.c	FUNCTION_40	ELSE_1	IF_2
0x4001d35	    0xc744242cffff	     mov dword [rsp + 0x2c], 0x7fffffff 	      1590	move.c	FUNCTION_40	ELSE_1	IF_2
0x4001d3d	      0xb8ffffff7f	                     mov eax, 0x7fffffff	      1590	move.c	FUNCTION_40	ELSE_1	IF_2
0x4001d42	    0x488b3d000000	            mov rdi, qword [0x04001d49] 	      2069	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2	IF_3
0x4001d49	          0x4101c6	                           add r14d, eax	      2068	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2
0x4001d4c	    0x443bb7a00000	           cmp r14d, dword [rdi + 0xa0] 	      2069	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2	IF_3
0x4001d53	     0xf8fbafeffff	                            jg 0x4001c13	      2069	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2	IF_3
0x4001d59	             0x1c3	                            add ebx, eax	      2071	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2
0x4001d5b	            0xeb88	                           jmp 0x4001ce5	      2071	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2
0x4001d5d	           0xf1f00	                         nop dword [rax]	      2071	move.c	FUNCTION_46	WHILE_1	IF_1	IF_2
0x4001d60	      0x8344241801	               add dword [rsp + 0x18], 1	      1543	move.c	FUNCTION_39	IF_1
0x4001d65	    0xc744241c0100	               mov dword [rsp + 0x1c], 1	      1544	move.c	FUNCTION_39	IF_1
0x4001d6d	      0xe972feffff	                           jmp 0x4001be4	      1544	move.c	FUNCTION_39	IF_1
0x4001d72	    0x660f1f440000	                    nop word [rax + rax]	      1544	move.c	FUNCTION_39	IF_1
0x4001d78	    0xc744241cffff	     mov dword [rsp + 0x1c], 0x7fffffff 	      1554	move.c	FUNCTION_39	ELSE_1	IF_2
0x4001d80	      0xb8ffffff7f	                     mov eax, 0x7fffffff	      2084	move.c	FUNCTION_46	WHILE_1	IF_5	IF_6
0x4001d85	    0x41beffffff7f	                    mov r14d, 0x7fffffff	      2085	move.c	FUNCTION_46	WHILE_1	IF_5	IF_6
0x4001d8b	      0xe95cfeffff	                           jmp 0x4001bec	      2085	move.c	FUNCTION_46	WHILE_1	IF_5	IF_6
0x4001d90	      0x8344242801	               add dword [rsp + 0x28], 1	      1579	move.c	FUNCTION_40	IF_1
0x4001d95	    0xc744242c0100	               mov dword [rsp + 0x2c], 1	      1580	move.c	FUNCTION_40	IF_1
0x4001d9d	      0xb801000000	                              mov eax, 1	      1580	move.c	FUNCTION_40	IF_1
0x4001da2	            0xeb9e	                           jmp 0x4001d42	      1580	move.c	FUNCTION_40	IF_1
0x4001da4	         0xf1f4000	                         nop dword [rax]	      1580	move.c	FUNCTION_40	IF_1
0x4001da8	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4001dad	      0xe800000000	                          call 0x4001db2	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4001db2	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      2084	move.c	FUNCTION_46	WHILE_1	IF_5	IF_6
0x4001db7	        0x8944241c	             mov dword [rsp + 0x1c], eax	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4001dbb	     0xf8528feffff	                           jne 0x4001be9	      2084	move.c	FUNCTION_46	WHILE_1	IF_5	IF_6
0x4001dc1	    0x41beffffff7f	                    mov r14d, 0x7fffffff	      2085	move.c	FUNCTION_46	WHILE_1	IF_5	IF_6
0x4001dc7	      0xe920feffff	                           jmp 0x4001bec	      2085	move.c	FUNCTION_46	WHILE_1	IF_5	IF_6
0x4001dcc	         0xf1f4000	                         nop dword [rax]	      2085	move.c	FUNCTION_46	WHILE_1	IF_5	IF_6
0x4001dd0	      0x488d542420	                   lea rdx, [rsp + 0x20]	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4001dd5	            0x31f6	                            xor esi, esi	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4001dd7	      0xe800000000	                          call 0x4001ddc	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4001ddc	            0x85c0	                           test eax, eax	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4001dde	            0x7428	                            je 0x4001e08	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4001de0	    0xc744242c0100	               mov dword [rsp + 0x2c], 1	      1595	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3
0x4001de8	      0xb801000000	                              mov eax, 1	      1595	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3
0x4001ded	      0xe950ffffff	                           jmp 0x4001d42	      1595	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3
0x4001df2	    0x660f1f440000	                    nop word [rax + rax]	      1595	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3
0x4001df8	        0x48896b78	             mov qword [rbx + 0x78], rbp	      2100	move.c	FUNCTION_46	IF_8
0x4001dfc	          0x4889ee	                            mov rsi, rbp	      2100	move.c	FUNCTION_46	IF_8
0x4001dff	      0xe930feffff	                           jmp 0x4001c34	      2100	move.c	FUNCTION_46	IF_8
0x4001e04	         0xf1f4000	                         nop dword [rax]	      2100	move.c	FUNCTION_46	IF_8
0x4001e08	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4001e0d	      0xe800000000	                          call 0x4001e12	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4001e12	        0x8944242c	             mov dword [rsp + 0x2c], eax	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4001e16	      0xe927ffffff	                           jmp 0x4001d42	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4001e1b	    0xc78384000000	               mov dword [rbx + 0x84], 0	      1382	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x4001e25	      0xe960feffff	                           jmp 0x4001c8a	      1382	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x4001e2a	      0xe800000000	                          call 0x4001e2f	      2109	move.c	FUNCTION_46
validate_cursor_col	SWITCH,0:WHILE,0:ELSE,1:functions,0:FOR,0:CALL,3:IF,3:DO,0	148
0x4001380	            0x4156	                                push r14	       841	move.c	FUNCTION_27
0x4001382	            0x4155	                                push r13	       841	move.c	FUNCTION_27
0x4001384	            0x4154	                                push r12	       841	move.c	FUNCTION_27
0x4001386	              0x55	                                push rbp	       841	move.c	FUNCTION_27
0x4001387	              0x53	                                push rbx	       841	move.c	FUNCTION_27
0x4001388	    0x488b1d000000	            mov rbx, qword [0x0400138f] 	       788	move.c	FUNCTION_24	CALL_1
0x400138f	    0x488b83b80000	            mov rax, qword [rbx + 0xb8] 	       481	move.c	FUNCTION_8	IF_1
0x4001396	        0x48394338	            cmp qword [rbx + 0x38], rax 	       481	move.c	FUNCTION_8	IF_1
0x400139a	     0xf8450010000	                            je 0x40014f0	       481	move.c	FUNCTION_8	IF_1
0x40013a0	    0x8b83b4000000	            mov eax, dword [rbx + 0xb4] 	       483	move.c	FUNCTION_8	IF_1
0x40013a6	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	       485	move.c	FUNCTION_8	IF_1
0x40013aa	        0x488b7b40	            mov rdi, qword [rbx + 0x40] 	       485	move.c	FUNCTION_8	IF_1
0x40013ae	    0x8b9394000000	            mov edx, dword [rbx + 0x94] 	       486	move.c	FUNCTION_8	IF_1
0x40013b4	            0x2460	                            and al, 0x60	       483	move.c	FUNCTION_8	IF_1
0x40013b6	    0x4889b3b80000	             mov qword [rbx + 0xb8], rsi	       485	move.c	FUNCTION_8	IF_1
0x40013bd	    0x8983b4000000	             mov dword [rbx + 0xb4], eax	       483	move.c	FUNCTION_8	IF_1
0x40013c3	    0x4889bbc00000	             mov qword [rbx + 0xc0], rdi	       485	move.c	FUNCTION_8	IF_1
0x40013ca	    0x8993c8000000	             mov dword [rbx + 0xc8], edx	       486	move.c	FUNCTION_8	IF_1
0x40013d0	            0xa804	                              test al, 4	       798	move.c	FUNCTION_25	IF_1
0x40013d2	            0x7414	                            je 0x40013e8	       798	move.c	FUNCTION_25	IF_1
0x40013d4	          0x83e002	                              and eax, 2	       847	move.c	FUNCTION_27	IF_1
0x40013d7	            0x89c5	                            mov ebp, eax	       847	move.c	FUNCTION_27	IF_1
0x40013d9	            0x744e	                            je 0x4001429	       847	move.c	FUNCTION_27	IF_1
0x40013db	              0x5b	                                 pop rbx	       868	move.c	FUNCTION_27	ELSE_1
0x40013dc	              0x5d	                                 pop rbp	       868	move.c	FUNCTION_27	ELSE_1
0x40013dd	            0x415c	                                 pop r12	       868	move.c	FUNCTION_27	ELSE_1
0x40013df	            0x415d	                                 pop r13	       868	move.c	FUNCTION_27	ELSE_1
0x40013e1	            0x415e	                                 pop r14	       868	move.c	FUNCTION_27	ELSE_1
0x40013e3	              0xc3	                                     ret	       868	move.c	FUNCTION_27	ELSE_1
0x40013e4	         0xf1f4000	                         nop dword [rax]	       868	move.c	FUNCTION_27	ELSE_1
0x40013e8	    0x488d8bd80000	                   lea rcx, [rbx + 0xd8]	       800	move.c	FUNCTION_25	IF_1	CALL_2
0x40013ef	        0x488d7338	                   lea rsi, [rbx + 0x38]	       800	move.c	FUNCTION_25	IF_1	CALL_2
0x40013f3	            0x31d2	                            xor edx, edx	       800	move.c	FUNCTION_25	IF_1	CALL_2
0x40013f5	          0x4531c0	                            xor r8d, r8d	       800	move.c	FUNCTION_25	IF_1	CALL_2
0x40013f8	          0x4889df	                            mov rdi, rbx	       800	move.c	FUNCTION_25	IF_1	CALL_2
0x40013fb	      0xe800000000	                          call 0x4001400	       800	move.c	FUNCTION_25	IF_1	CALL_2
0x4001400	    0x8b936c020000	           mov edx, dword [rbx + 0x26c] 	       803	move.c	FUNCTION_25	IF_1	IF_2
0x4001406	    0x838bb4000000	                or dword [rbx + 0xb4], 4	       801	move.c	FUNCTION_25	IF_1
0x400140d	            0x85d2	                           test edx, edx	       803	move.c	FUNCTION_25	IF_1	IF_2
0x400140f	     0xf8563010000	                           jne 0x4001578	       803	move.c	FUNCTION_25	IF_1	IF_2
0x4001415	    0x488b1d000000	            mov rbx, qword [0x0400141c] 	       803	move.c	FUNCTION_25	IF_1	IF_2
0x400141c	    0x8b83b4000000	            mov eax, dword [rbx + 0xb4] 	       803	move.c	FUNCTION_25	IF_1	IF_2
0x4001422	          0x83e002	                              and eax, 2	       847	move.c	FUNCTION_27	IF_1
0x4001425	            0x89c5	                            mov ebp, eax	       847	move.c	FUNCTION_27	IF_1
0x4001427	            0x75b2	                           jne 0x40013db	       847	move.c	FUNCTION_27	IF_1
0x4001429	          0x4531e4	                          xor r12d, r12d	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x400142c	    0x4883bb380200	              cmp qword [rbx + 0x238], 0	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x4001434	    0x448babd80000	           mov r13d, dword [rbx + 0xd8] 	       849	move.c	FUNCTION_27	IF_1
0x400143b	     0xf855f010000	                           jne 0x40015a0	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x4001441	    0x8b1500000000	            mov edx, dword [0x04001447] 	       879	move.c	ELSE_1	FUNCTION_28
0x4001447	            0x85d2	                           test edx, edx	       879	move.c	ELSE_1	FUNCTION_28
0x4001449	     0xf85e1000000	                           jne 0x4001530	       879	move.c	ELSE_1	FUNCTION_28
0x400144f	          0x4889df	                            mov rdi, rbx	       885	move.c	ELSE_1	FUNCTION_28	CALL_2
0x4001452	          0x4101d4	                           add r12d, edx	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x4001455	    0x4403a3c80100	           add r12d, dword [rbx + 0x1c8]	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x400145c	      0xe800000000	                          call 0x4001461	       885	move.c	ELSE_1	FUNCTION_28	CALL_2
0x4001461	          0x83f801	                              cmp eax, 1	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x4001464	    0x488b1d000000	            mov rbx, qword [0x0400146b] 	       852	move.c	FUNCTION_27	IF_1	CALL_3
0x400146b	            0x19c0	                            sbb eax, eax	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x400146d	            0xf7d0	                                 not eax	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x400146f	          0x83e002	                              and eax, 2	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x4001472	    0x448bb3ac0000	           mov r14d, dword [rbx + 0xac] 	       852	move.c	FUNCTION_27	IF_1	CALL_3
0x4001479	          0x4101c4	                           add r12d, eax	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x400147c	          0x4501e5	                          add r13d, r12d	       851	move.c	FUNCTION_27	IF_1
0x400147f	    0x4883bb380200	              cmp qword [rbx + 0x238], 0	       904	move.c	FUNCTION_30	IF_1	CALL_1
0x4001487	     0xf85bb000000	                           jne 0x4001548	       904	move.c	FUNCTION_30	IF_1	CALL_1
0x400148d	    0x8b8394020000	           mov eax, dword [rbx + 0x294] 	       855	move.c	FUNCTION_27	IF_1	IF_2
0x4001493	            0x85c0	                           test eax, eax	       855	move.c	FUNCTION_27	IF_1	IF_2
0x4001495	            0x7428	                            je 0x40014bf	       855	move.c	FUNCTION_27	IF_1	IF_2
0x4001497	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	       856	move.c	FUNCTION_27	IF_1	IF_2
0x400149d	          0x4529e6	                          sub r14d, r12d	       852	move.c	FUNCTION_27	IF_1	CALL_3
0x40014a0	          0x4401f5	                           add ebp, r14d	       852	move.c	FUNCTION_27	IF_1	CALL_3
0x40014a3	          0x4139c5	                           cmp r13d, eax	       857	move.c	FUNCTION_27	IF_1	IF_2
0x40014a6	            0x7c17	                            jl 0x40014bf	       857	move.c	FUNCTION_27	IF_1	IF_2
0x40014a8	            0x85ed	                           test ebp, ebp	       857	move.c	FUNCTION_27	IF_1	IF_2
0x40014aa	            0x7e13	                           jle 0x40014bf	       857	move.c	FUNCTION_27	IF_1	IF_2
0x40014ac	          0x4489ef	                           mov edi, r13d	       859	move.c	FUNCTION_27	IF_1	IF_2
0x40014af	            0x29c7	                            sub edi, eax	       859	move.c	FUNCTION_27	IF_1	IF_2
0x40014b1	            0x89f8	                            mov eax, edi	       859	move.c	FUNCTION_27	IF_1	IF_2
0x40014b3	              0x99	                                     cdq	       859	move.c	FUNCTION_27	IF_1	IF_2
0x40014b4	            0xf7fd	                                idiv ebp	       859	move.c	FUNCTION_27	IF_1	IF_2
0x40014b6	          0x83c001	                              add eax, 1	       859	move.c	FUNCTION_27	IF_1	IF_2
0x40014b9	           0xfafe8	                           imul ebp, eax	       859	move.c	FUNCTION_27	IF_1	IF_2
0x40014bc	          0x4129ed	                           sub r13d, ebp	       859	move.c	FUNCTION_27	IF_1	IF_2
0x40014bf	    0x8b9394000000	            mov edx, dword [rbx + 0x94] 	       860	move.c	FUNCTION_27	IF_1	IF_3
0x40014c5	          0x4489e8	                           mov eax, r13d	       861	move.c	FUNCTION_27	IF_1	IF_3
0x40014c8	            0x29d0	                            sub eax, edx	       861	move.c	FUNCTION_27	IF_1	IF_3
0x40014ca	          0x4139d5	                           cmp r13d, edx	       861	move.c	FUNCTION_27	IF_1	IF_3
0x40014cd	      0xba00000000	                              mov edx, 0	       861	move.c	FUNCTION_27	IF_1	IF_3
0x40014d2	           0xf4ec2	                         cmovle eax, edx	       861	move.c	FUNCTION_27	IF_1	IF_3
0x40014d5	    0x838bb4000000	                or dword [rbx + 0xb4], 2	       866	move.c	FUNCTION_27	IF_1	ELSE_1
0x40014dc	    0x8983e0000000	             mov dword [rbx + 0xe0], eax	       864	move.c	FUNCTION_27	IF_1	ELSE_1
0x40014e2	              0x5b	                                 pop rbx	       868	move.c	FUNCTION_27	ELSE_1
0x40014e3	              0x5d	                                 pop rbp	       868	move.c	FUNCTION_27	ELSE_1
0x40014e4	            0x415c	                                 pop r12	       868	move.c	FUNCTION_27	ELSE_1
0x40014e6	            0x415d	                                 pop r13	       868	move.c	FUNCTION_27	ELSE_1
0x40014e8	            0x415e	                                 pop r14	       868	move.c	FUNCTION_27	ELSE_1
0x40014ea	              0xc3	                                     ret	       868	move.c	FUNCTION_27	ELSE_1
0x40014eb	       0xf1f440000	                   nop dword [rax + rax]	       868	move.c	FUNCTION_27	ELSE_1
0x40014f0	          0x8b5340	            mov edx, dword [rbx + 0x40] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x40014f3	    0x3b93c0000000	            cmp edx, dword [rbx + 0xc0] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x40014f9	    0x8b8b94000000	            mov ecx, dword [rbx + 0x94] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x40014ff	     0xf84b3000000	                            je 0x40015b8	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4001505	          0x8b7344	            mov esi, dword [rbx + 0x44] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4001508	    0x8b83b4000000	            mov eax, dword [rbx + 0xb4] 	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x400150e	    0x8993c0000000	             mov dword [rbx + 0xc0], edx	       496	move.c	FUNCTION_8	ELSE_1	IF_2
0x4001514	    0x898bc8000000	             mov dword [rbx + 0xc8], ecx	       497	move.c	FUNCTION_8	ELSE_1	IF_2
0x400151a	    0x89b3c4000000	             mov dword [rbx + 0xc4], esi	       499	move.c	FUNCTION_8	ELSE_1	IF_2
0x4001520	          0x83e0f8	                     and eax, 0xfffffff8	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x4001523	    0x8983b4000000	             mov dword [rbx + 0xb4], eax	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x4001529	      0xe9a2feffff	                           jmp 0x40013d0	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x400152e	            0x6690	                                     nop	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x4001530	            0x31d2	                            xor edx, edx	       879	move.c	ELSE_1	FUNCTION_28
0x4001532	    0x48391d000000	            cmp qword [0x04001539], rbx 	       879	move.c	ELSE_1	FUNCTION_28
0x4001539	           0xf94c2	                                 sete dl	       879	move.c	ELSE_1	FUNCTION_28
0x400153c	      0xe90effffff	                           jmp 0x400144f	       879	move.c	ELSE_1	FUNCTION_28
0x4001541	     0xf1f80000000	                         nop dword [rax]	       879	move.c	ELSE_1	FUNCTION_28
0x4001548	    0x488b3d000000	            mov rdi, qword [0x0400154f] 	       904	move.c	FUNCTION_30	IF_1	CALL_1
0x400154f	      0xbe6e000000	                           mov esi, 0x6e	       904	move.c	FUNCTION_30	IF_1	CALL_1
0x4001554	      0xe800000000	                          call 0x4001559	       904	move.c	FUNCTION_30	IF_1	CALL_1
0x4001559	          0x4885c0	                           test rax, rax	       904	move.c	FUNCTION_30	IF_1	CALL_1
0x400155c	            0x740b	                            je 0x4001569	       904	move.c	FUNCTION_30	IF_1	CALL_1
0x400155e	          0x4889df	                            mov rdi, rbx	       905	move.c	FUNCTION_30	CALL_2
0x4001561	      0xe800000000	                          call 0x4001566	       905	move.c	FUNCTION_30	CALL_2
0x4001566	          0x8d6801	                      lea ebp, [rax + 1]	       905	move.c	FUNCTION_30	CALL_2
0x4001569	    0x488b1d000000	            mov rbx, qword [0x04001570] 	       905	move.c	FUNCTION_30	CALL_2
0x4001570	      0xe918ffffff	                           jmp 0x400148d	       905	move.c	FUNCTION_30	CALL_2
0x4001575	           0xf1f00	                         nop dword [rax]	       905	move.c	FUNCTION_30	CALL_2
0x4001578	      0xe800000000	                          call 0x400157d	       805	move.c	FUNCTION_25	IF_1	IF_2	CALL_3
0x400157d	            0x85c0	                           test eax, eax	       805	move.c	FUNCTION_25	IF_1	IF_2	CALL_3
0x400157f	     0xf8590feffff	                           jne 0x4001415	       805	move.c	FUNCTION_25	IF_1	IF_2	CALL_3
0x4001585	      0xbe23000000	                           mov esi, 0x23	       808	move.c	FUNCTION_25	IF_1	CALL_4
0x400158a	          0x4889df	                            mov rdi, rbx	       808	move.c	FUNCTION_25	IF_1	CALL_4
0x400158d	      0xe800000000	                          call 0x4001592	       808	move.c	FUNCTION_25	IF_1	CALL_4
0x4001592	      0xe97efeffff	                           jmp 0x4001415	       808	move.c	FUNCTION_25	IF_1	CALL_4
0x4001597	    0x660f1f840000	                    nop word [rax + rax]	       808	move.c	FUNCTION_25	IF_1	CALL_4
0x40015a0	          0x4889df	                            mov rdi, rbx	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x40015a3	      0xe800000000	                          call 0x40015a8	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x40015a8	        0x448d6001	                     lea r12d, [rax + 1]	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x40015ac	      0xe990feffff	                           jmp 0x4001441	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x40015b1	     0xf1f80000000	                         nop dword [rax]	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x40015b8	    0x3b8bc8000000	            cmp ecx, dword [rbx + 0xc8] 	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x40015be	          0x8b7344	            mov esi, dword [rbx + 0x44] 	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x40015c1	     0xf8541ffffff	                           jne 0x4001508	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x40015c7	    0x3bb3c4000000	            cmp esi, dword [rbx + 0xc4] 	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x40015cd	     0xf8535ffffff	                           jne 0x4001508	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x40015d3	    0x8b83b4000000	            mov eax, dword [rbx + 0xb4] 	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x40015d9	      0xe9f2fdffff	                           jmp 0x40013d0	       491	move.c	FUNCTION_8	ELSE_1	IF_2
curs_columns	SWITCH,0:WHILE,1:ELSE,15:functions,0:FOR,0:CALL,16:IF,35:DO,0	448
0x40031c0	            0x4157	                                push r15	       923	move.c	FUNCTION_32
0x40031c2	            0x4156	                                push r14	       923	move.c	FUNCTION_32
0x40031c4	            0x4155	                                push r13	       923	move.c	FUNCTION_32
0x40031c6	            0x4154	                                push r12	       923	move.c	FUNCTION_32
0x40031c8	              0x55	                                push rbp	       923	move.c	FUNCTION_32
0x40031c9	              0x53	                                push rbx	       923	move.c	FUNCTION_32
0x40031ca	            0x89fd	                            mov ebp, edi	       923	move.c	FUNCTION_32
0x40031cc	        0x4883ec28	                           sub rsp, 0x28	       923	move.c	FUNCTION_32
0x40031d0	    0x64488b042528	                mov rax, qword fs:[0x28]	       923	move.c	FUNCTION_32
0x40031d9	      0x4889442418	             mov qword [rsp + 0x18], rax	       923	move.c	FUNCTION_32
0x40031de	            0x31c0	                            xor eax, eax	       923	move.c	FUNCTION_32
0x40031e0	      0xe800000000	                          call 0x40031e5	       939	move.c	FUNCTION_32	CALL_1
0x40031e5	    0x488b1d000000	            mov rbx, qword [0x040031ec] 	       944	move.c	FUNCTION_32	IF_1
0x40031ec	    0xf683b4000000	           test byte [rbx + 0xb4], 0x10 	       944	move.c	FUNCTION_32	IF_1
0x40031f3	     0xf8477040000	                            je 0x4003670	       944	move.c	FUNCTION_32	IF_1
0x40031f9	    0x448b93d00000	           mov r10d, dword [rbx + 0xd0] 	       951	move.c	FUNCTION_32	IF_2
0x4003200	          0x4585d2	                         test r10d, r10d	       951	move.c	FUNCTION_32	IF_2
0x4003203	     0xf8437040000	                            je 0x4003640	       951	move.c	FUNCTION_32	IF_2
0x4003209	    0x8b8394000000	            mov eax, dword [rbx + 0x94] 	       953	move.c	FUNCTION_32	IF_2
0x400320f	        0x89442414	             mov dword [rsp + 0x14], eax	       953	move.c	FUNCTION_32	IF_2
0x4003213	    0x8983d8000000	             mov dword [rbx + 0xd8], eax	       953	move.c	FUNCTION_32	IF_2
0x4003219	        0x89442410	             mov dword [rsp + 0x10], eax	       953	move.c	FUNCTION_32	IF_2
0x400321d	    0x390500000000	            cmp dword [0x04003223], eax 	       960	move.c	FUNCTION_32	IF_3
0x4003223	            0x7d0a	                           jge 0x400322f	       960	move.c	FUNCTION_32	IF_3
0x4003225	    0xc70500000000	     mov dword [0x0400322f], 0xffffffff 	       961	move.c	FUNCTION_32	IF_3
0x400322f	            0x31c0	                            xor eax, eax	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x4003231	    0x4883bb380200	              cmp qword [rbx + 0x238], 0	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x4003239	     0xf85f1030000	                           jne 0x4003630	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x400323f	    0x8b1500000000	            mov edx, dword [0x04003245] 	       879	move.c	ELSE_1	FUNCTION_28
0x4003245	            0x85d2	                           test edx, edx	       879	move.c	ELSE_1	FUNCTION_28
0x4003247	            0x740c	                            je 0x4003255	       879	move.c	ELSE_1	FUNCTION_28
0x4003249	            0x31d2	                            xor edx, edx	       879	move.c	ELSE_1	FUNCTION_28
0x400324b	    0x48391d000000	            cmp qword [0x04003252], rbx 	       879	move.c	ELSE_1	FUNCTION_28
0x4003252	           0xf94c2	                                 sete dl	       879	move.c	ELSE_1	FUNCTION_28
0x4003255	             0x1d0	                            add eax, edx	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x4003257	     0x383c8010000	            add eax, dword [rbx + 0x1c8]	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x400325d	          0x4889df	                            mov rdi, rbx	       885	move.c	ELSE_1	FUNCTION_28	CALL_2
0x4003260	          0x4189c4	                           mov r12d, eax	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x4003263	      0xe800000000	                          call 0x4003268	       885	move.c	ELSE_1	FUNCTION_28	CALL_2
0x4003268	    0x488b1d000000	            mov rbx, qword [0x0400326f] 	       964	move.c	FUNCTION_32
0x400326f	          0x83f801	                              cmp eax, 1	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x4003272	        0x8b7c2414	            mov edi, dword [rsp + 0x14] 	       965	move.c	FUNCTION_32
0x4003276	            0x19c0	                            sbb eax, eax	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x4003278	            0xf7d0	                                 not eax	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x400327a	    0x8b93d4000000	            mov edx, dword [rbx + 0xd4] 	       970	move.c	FUNCTION_32
0x4003280	    0x8bb3d8000000	            mov esi, dword [rbx + 0xd8] 	       964	move.c	FUNCTION_32
0x4003286	          0x83e002	                              and eax, 2	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x4003289	          0x4401e0	                           add eax, r12d	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x400328c	             0x1c7	                            add edi, eax	       965	move.c	FUNCTION_32
0x400328e	    0x8993dc000000	             mov dword [rbx + 0xdc], edx	       970	move.c	FUNCTION_32
0x4003294	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	       972	move.c	FUNCTION_32
0x400329a	          0x8d0c06	                    lea ecx, [rsi + rax]	       964	move.c	FUNCTION_32
0x400329d	        0x897c2414	             mov dword [rsp + 0x14], edi	       965	move.c	FUNCTION_32
0x40032a1	    0x898be0000000	             mov dword [rbx + 0xe0], ecx	       964	move.c	FUNCTION_32
0x40032a7	          0x4189d5	                           mov r13d, edx	       972	move.c	FUNCTION_32
0x40032aa	          0x4129c5	                           sub r13d, eax	       972	move.c	FUNCTION_32
0x40032ad	          0x4585ed	                         test r13d, r13d	       973	move.c	FUNCTION_32	IF_4
0x40032b0	     0xf8ed2030000	                           jle 0x4003688	       973	move.c	FUNCTION_32	IF_4
0x40032b6	    0x448b8b940200	           mov r9d, dword [rbx + 0x294] 	       979	move.c	FUNCTION_32	ELSE_2	IF_5
0x40032bd	          0x4585c9	                           test r9d, r9d	       979	move.c	FUNCTION_32	ELSE_2	IF_5
0x40032c0	     0xf849a000000	                            je 0x4003360	       979	move.c	FUNCTION_32	ELSE_2	IF_5
0x40032c6	            0x85d2	                           test edx, edx	       979	move.c	FUNCTION_32	ELSE_2	IF_5
0x40032c8	     0xf8492000000	                            je 0x4003360	       979	move.c	FUNCTION_32	ELSE_2	IF_5
0x40032ce	          0x4531e4	                          xor r12d, r12d	       906	move.c	FUNCTION_30
0x40032d1	    0x4883bb380200	              cmp qword [rbx + 0x238], 0	       904	move.c	FUNCTION_30	IF_1	CALL_1
0x40032d9	     0xf85b1040000	                           jne 0x4003790	       904	move.c	FUNCTION_30	IF_1	CALL_1
0x40032df	          0x4501ec	                          add r12d, r13d	       981	move.c	FUNCTION_32	ELSE_2	IF_5	CALL_5
0x40032e2	            0x39d1	                            cmp ecx, edx	       984	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x40032e4	     0xf8c97000000	                            jl 0x4003381	       984	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x40032ea	            0x89c8	                            mov eax, ecx	       987	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x40032ec	            0x29d0	                            sub eax, edx	       987	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x40032ee	              0x99	                                     cdq	       987	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x40032ef	          0x41f7fc	                               idiv r12d	       987	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x40032f2	          0x4489e2	                           mov edx, r12d	       988	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x40032f5	          0x83c001	                              add eax, 1	       987	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x40032f8	     0x183dc000000	             add dword [rbx + 0xdc], eax	       989	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x40032fe	           0xfafd0	                           imul edx, eax	       988	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4003301	    0x488b05000000	            mov rax, qword [0x04003308] 	       995	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_6
0x4003308	            0x29d1	                            sub ecx, edx	       988	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x400330a	    0x898be0000000	             mov dword [rbx + 0xe0], ecx	       988	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6
0x4003310	          0x803800	                       cmp byte [rax], 0	       995	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_6
0x4003313	            0x746c	                            je 0x4003381	       995	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_6
0x4003315	      0xe800000000	                          call 0x400331a	       995	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_6
0x400331a	          0x803800	                       cmp byte [rax], 0	       995	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_6
0x400331d	    0x488b1d000000	            mov rbx, qword [0x04003324] 	       995	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_6
0x4003324	            0x755b	                           jne 0x4003381	       995	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_6
0x4003326	    0x488b05000000	            mov rax, qword [0x0400332d] 	       996	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_7
0x400332d	    0x488b3d000000	            mov rdi, qword [0x04003334] 	       996	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_7
0x4003334	    0x8b98e0000000	            mov ebx, dword [rax + 0xe0] 	       996	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_7
0x400333a	      0xe800000000	                          call 0x400333f	       996	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_7
0x400333f	            0x39c3	                            cmp ebx, eax	       996	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_7
0x4003341	    0x488b1d000000	            mov rbx, qword [0x04003348] 	       997	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7
0x4003348	            0x7537	                           jne 0x4003381	       996	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7	CALL_7
0x400334a	    0xc783e0000000	               mov dword [rbx + 0xe0], 0	       997	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7
0x4003354	            0xeb2b	                           jmp 0x4003381	       997	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7
0x4003356	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       997	move.c	FUNCTION_32	ELSE_2	IF_5	IF_6	IF_7
0x4003360	            0x85ed	                           test ebp, ebp	      1005	move.c	FUNCTION_32	ELSE_3	IF_8
0x4003362	     0xf85d0000000	                           jne 0x4003438	      1005	move.c	FUNCTION_32	ELSE_3	IF_8
0x4003368	    0x8b8394000000	            mov eax, dword [rbx + 0x94] 	      1051	move.c	FUNCTION_32	ELSE_7	IF_16
0x400336e	            0x39c1	                            cmp ecx, eax	      1051	move.c	FUNCTION_32	ELSE_7	IF_16
0x4003370	     0xf8e5a030000	                           jle 0x40036d0	      1051	move.c	FUNCTION_32	ELSE_7	IF_16
0x4003376	            0x29c1	                            sub ecx, eax	      1052	move.c	FUNCTION_32	ELSE_7	IF_16
0x4003378	          0x4531e4	                          xor r12d, r12d	       929	move.c	FUNCTION_32
0x400337b	    0x898be0000000	             mov dword [rbx + 0xe0], ecx	      1052	move.c	FUNCTION_32	ELSE_7	IF_16
0x4003381	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	      1059	move.c	FUNCTION_32	IF_17
0x4003385	        0x483b7378	            cmp rsi, qword [rbx + 0x78] 	      1059	move.c	FUNCTION_32	IF_17
0x4003389	     0xf8511010000	                           jne 0x40034a0	      1059	move.c	FUNCTION_32	IF_17
0x400338f	    0x8b8384000000	            mov eax, dword [rbx + 0x84] 	      1060	move.c	FUNCTION_32	IF_17
0x4003395	     0x383dc000000	             add eax, dword [rbx + 0xdc]	      1060	move.c	FUNCTION_32	IF_17
0x400339b	    0x8983dc000000	             mov dword [rbx + 0xdc], eax	      1060	move.c	FUNCTION_32	IF_17
0x40033a1	    0x48638ba00000	         movsxd rcx, dword [rbx + 0xa0] 	      1068	move.c	FUNCTION_32	IF_18
0x40033a8	    0x8bab98000000	            mov ebp, dword [rbx + 0x98] 	      1065	move.c	FUNCTION_32
0x40033ae	            0x39c1	                            cmp ecx, eax	      1068	move.c	FUNCTION_32	IF_18
0x40033b0	     0xf8e6a020000	                           jle 0x4003620	      1068	move.c	FUNCTION_32	IF_18
0x40033b6	            0x85ed	                           test ebp, ebp	      1069	move.c	FUNCTION_32	IF_18
0x40033b8	     0xf8f02010000	                            jg 0x40034c0	      1069	move.c	FUNCTION_32	IF_18
0x40033be	            0x4898	                                    cdqe	      1070	move.c	FUNCTION_32	IF_18
0x40033c0	    0x480305000000	             add rax, qword [0x040033c7]	      1070	move.c	FUNCTION_32	IF_18
0x40033c7	          0x4839c8	                            cmp rax, rcx	      1070	move.c	FUNCTION_32	IF_18
0x40033ca	     0xf8df0000000	                           jge 0x40034c0	      1070	move.c	FUNCTION_32	IF_18
0x40033d0	    0xc78398000000	               mov dword [rbx + 0x98], 0	      1156	move.c	FUNCTION_32	ELSE_15
0x40033da	            0x31ff	                            xor edi, edi	      1156	move.c	FUNCTION_32	ELSE_15
0x40033dc	            0x39fd	                            cmp ebp, edi	      1157	move.c	FUNCTION_32	IF_34
0x40033de	            0x7411	                            je 0x40033f1	      1157	move.c	FUNCTION_32	IF_34
0x40033e0	      0xbf28000000	                           mov edi, 0x28	      1158	move.c	FUNCTION_32	CALL_14
0x40033e5	      0xe800000000	                          call 0x40033ea	      1158	move.c	FUNCTION_32	CALL_14
0x40033ea	    0x488b1d000000	            mov rbx, qword [0x040033f1] 	      1158	move.c	FUNCTION_32	CALL_14
0x40033f1	    0x8b836c020000	           mov eax, dword [rbx + 0x26c] 	      1162	move.c	FUNCTION_32	IF_35
0x40033f7	            0x85c0	                           test eax, eax	      1162	move.c	FUNCTION_32	IF_35
0x40033f9	    0x8b83b4000000	            mov eax, dword [rbx + 0xb4] 	      1162	move.c	FUNCTION_32	IF_35
0x40033ff	            0x7408	                            je 0x4003409	      1162	move.c	FUNCTION_32	IF_35
0x4003401	            0xa804	                              test al, 4	      1162	move.c	FUNCTION_32	IF_35
0x4003403	     0xf84a7020000	                            je 0x40036b0	      1162	move.c	FUNCTION_32	IF_35
0x4003409	          0x83c807	                               or eax, 7	      1170	move.c	FUNCTION_32
0x400340c	    0x8983b4000000	             mov dword [rbx + 0xb4], eax	      1170	move.c	FUNCTION_32
0x4003412	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1171	move.c	FUNCTION_32
0x4003417	    0x644833042528	                xor rax, qword fs:[0x28]	      1171	move.c	FUNCTION_32
0x4003420	     0xf85c3040000	                           jne 0x40038e9	      1171	move.c	FUNCTION_32
0x4003426	        0x4883c428	                           add rsp, 0x28	      1171	move.c	FUNCTION_32
0x400342a	              0x5b	                                 pop rbx	      1171	move.c	FUNCTION_32
0x400342b	              0x5d	                                 pop rbp	      1171	move.c	FUNCTION_32
0x400342c	            0x415c	                                 pop r12	      1171	move.c	FUNCTION_32
0x400342e	            0x415d	                                 pop r13	      1171	move.c	FUNCTION_32
0x4003430	            0x415e	                                 pop r14	      1171	move.c	FUNCTION_32
0x4003432	            0x415f	                                 pop r15	      1171	move.c	FUNCTION_32
0x4003434	              0xc3	                                     ret	      1171	move.c	FUNCTION_32
0x4003435	           0xf1f00	                         nop dword [rax]	      1171	move.c	FUNCTION_32
0x4003438	    0x448b83d00000	            mov r8d, dword [rbx + 0xd0] 	      1007	move.c	FUNCTION_32	ELSE_3	IF_8
0x400343f	          0x4585c0	                           test r8d, r8d	      1007	move.c	FUNCTION_32	ELSE_3	IF_8
0x4003442	     0xf8520ffffff	                           jne 0x4003368	      1007	move.c	FUNCTION_32	ELSE_3	IF_8
0x4003448	    0x448b83940000	            mov r8d, dword [rbx + 0x94] 	      1017	move.c	FUNCTION_32	ELSE_3	IF_8
0x400344f	    0x4c8b0d000000	              mov r9, qword [0x04003456]	      1017	move.c	FUNCTION_32	ELSE_3	IF_8
0x4003456	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      1017	move.c	FUNCTION_32	ELSE_3	IF_8
0x400345a	          0x4401c2	                            add edx, r8d	      1018	move.c	FUNCTION_32	ELSE_3	IF_8
0x400345d	          0x4589ce	                           mov r14d, r9d	      1018	move.c	FUNCTION_32	ELSE_3	IF_8
0x4003460	          0x4429c0	                            sub eax, r8d	      1017	move.c	FUNCTION_32	ELSE_3	IF_8
0x4003463	          0x4129d6	                           sub r14d, edx	      1018	move.c	FUNCTION_32	ELSE_3	IF_8
0x4003466	          0x4429c8	                            sub eax, r9d	      1020	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9
0x4003469	      0x428d7c3701	                lea edi, [rdi + r14 + 1]	      1018	move.c	FUNCTION_32	ELSE_3	IF_8
0x400346e	            0x89c2	                            mov edx, eax	      1020	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9
0x4003470	     0xf8882020000	                            js 0x40036f8	      1020	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9
0x4003476	            0x85ff	                           test edi, edi	      1020	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9
0x4003478	     0xf8f7a020000	                            jg 0x40036f8	      1020	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9
0x400347e	          0x4429c1	                            sub ecx, r8d	      1049	move.c	FUNCTION_32	ELSE_3	IF_8
0x4003481	          0x4531e4	                          xor r12d, r12d	       929	move.c	FUNCTION_32
0x4003484	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	      1059	move.c	FUNCTION_32	IF_17
0x4003488	        0x483b7378	            cmp rsi, qword [rbx + 0x78] 	      1059	move.c	FUNCTION_32	IF_17
0x400348c	    0x898be0000000	             mov dword [rbx + 0xe0], ecx	      1049	move.c	FUNCTION_32	ELSE_3	IF_8
0x4003492	     0xf84f7feffff	                            je 0x400338f	      1059	move.c	FUNCTION_32	IF_17
0x4003498	     0xf1f84000000	                   nop dword [rax + rax]	      1059	move.c	FUNCTION_32	IF_17
0x40034a0	          0x4889df	                            mov rdi, rbx	      1062	move.c	FUNCTION_32	CALL_9
0x40034a3	      0xe800000000	                          call 0x40034a8	      1062	move.c	FUNCTION_32	CALL_9
0x40034a8	    0x488b1d000000	            mov rbx, qword [0x040034af] 	      1062	move.c	FUNCTION_32	CALL_9
0x40034af	     0x383dc000000	             add eax, dword [rbx + 0xdc]	      1062	move.c	FUNCTION_32	CALL_9
0x40034b5	    0x8983dc000000	             mov dword [rbx + 0xdc], eax	      1062	move.c	FUNCTION_32	CALL_9
0x40034bb	      0xe9e1feffff	                           jmp 0x40033a1	      1062	move.c	FUNCTION_32	CALL_9
0x40034c0	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	      1071	move.c	FUNCTION_32	IF_18
0x40034c4	            0x31d2	                            xor edx, edx	      1071	move.c	FUNCTION_32	IF_18
0x40034c6	          0x4889df	                            mov rdi, rbx	      1071	move.c	FUNCTION_32	IF_18
0x40034c9	      0xe800000000	                          call 0x40034ce	      1071	move.c	FUNCTION_32	IF_18
0x40034ce	    0x488b1d000000	            mov rbx, qword [0x040034d5] 	      1078	move.c	FUNCTION_32	IF_18
0x40034d5	    0x8b8ba0000000	            mov ecx, dword [rbx + 0xa0] 	      1078	move.c	FUNCTION_32	IF_18
0x40034db	            0x39c8	                            cmp eax, ecx	      1071	move.c	FUNCTION_32	IF_18
0x40034dd	     0xf8eedfeffff	                           jle 0x40033d0	      1071	move.c	FUNCTION_32	IF_18
0x40034e3	            0x85c9	                           test ecx, ecx	      1079	move.c	FUNCTION_32	IF_18
0x40034e5	     0xf84e5feffff	                            je 0x40033d0	      1079	move.c	FUNCTION_32	IF_18
0x40034eb	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	      1080	move.c	FUNCTION_32	IF_18
0x40034ef	        0x48397378	            cmp qword [rbx + 0x78], rsi 	      1081	move.c	FUNCTION_32	IF_18
0x40034f3	     0xf85d7feffff	                           jne 0x40033d0	      1081	move.c	FUNCTION_32	IF_18
0x40034f9	          0x4585e4	                         test r12d, r12d	      1081	move.c	FUNCTION_32	IF_18
0x40034fc	     0xf8ecefeffff	                           jle 0x40033d0	      1081	move.c	FUNCTION_32	IF_18
0x4003502	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	      1082	move.c	FUNCTION_32	IF_18
0x4003508	            0x85d2	                           test edx, edx	      1082	move.c	FUNCTION_32	IF_18
0x400350a	     0xf84c0feffff	                            je 0x40033d0	      1082	move.c	FUNCTION_32	IF_18
0x4003510	    0x4c8b15000000	            mov r10, qword [0x04003517] 	      1091	move.c	FUNCTION_32	IF_18	IF_19
0x4003517	          0x4d63ec	                        movsxd r13, r12d	      1091	move.c	FUNCTION_32	IF_18	IF_19
0x400351a	    0x486393980000	         movsxd rdx, dword [rbx + 0x98] 	      1091	move.c	FUNCTION_32	IF_18	IF_19
0x4003521	          0x4d89e8	                             mov r8, r13	      1091	move.c	FUNCTION_32	IF_18	IF_19
0x4003524	    0x4c63b3d80000	         movsxd r14, dword [rbx + 0xd8] 	      1091	move.c	FUNCTION_32	IF_18	IF_19
0x400352b	        0x4d0fafc2	                            imul r8, r10	      1091	move.c	FUNCTION_32	IF_18	IF_19
0x400352f	          0x4889d7	                            mov rdi, rdx	      1091	move.c	FUNCTION_32	IF_18	IF_19
0x4003532	          0x4c01c2	                             add rdx, r8	      1091	move.c	FUNCTION_32	IF_18	IF_19
0x4003535	            0x85c0	                           test eax, eax	      1095	move.c	FUNCTION_32	IF_18	IF_20
0x4003537	      0x4889542408	                mov qword [rsp + 8], rdx	      1091	move.c	FUNCTION_32	IF_18	IF_19
0x400353c	     0xf842e030000	                            je 0x4003870	      1095	move.c	FUNCTION_32	IF_18	IF_20
0x4003542	          0x8d70ff	                      lea esi, [rax - 1]	      1097	move.c	FUNCTION_32	IF_18
0x4003545	    0x486383dc0000	         movsxd rax, dword [rbx + 0xdc] 	      1098	move.c	FUNCTION_32	IF_18	IF_21
0x400354c	          0x4c63de	                         movsxd r11, esi	      1098	move.c	FUNCTION_32	IF_18	IF_21
0x400354f	          0x4989c0	                             mov r8, rax	      1098	move.c	FUNCTION_32	IF_18	IF_21
0x4003552	          0x4c01d0	                            add rax, r10	      1098	move.c	FUNCTION_32	IF_18	IF_21
0x4003555	        0x478d0c10	                     lea r9d, [r8 + r10]	      1099	move.c	FUNCTION_32	IF_18	IF_21
0x4003559	          0x4939c3	                            cmp r11, rax	      1099	move.c	FUNCTION_32	IF_18	IF_21
0x400355c	            0x89f8	                            mov eax, edi	      1102	move.c	FUNCTION_32	IF_18	IF_22
0x400355e	        0x440f4ece	                         cmovle r9d, esi	      1099	move.c	FUNCTION_32	IF_18	IF_21
0x4003562	              0x99	                                     cdq	      1102	move.c	FUNCTION_32	IF_18	IF_22
0x4003563	          0x41f7fc	                               idiv r12d	      1102	move.c	FUNCTION_32	IF_18	IF_22
0x4003566	          0x4189c7	                           mov r15d, eax	      1102	move.c	FUNCTION_32	IF_18	IF_22
0x4003569	          0x8d0408	                    lea eax, [rax + rcx]	      1102	move.c	FUNCTION_32	IF_18	IF_22
0x400356c	          0x4139c1	                            cmp r9d, eax	      1102	move.c	FUNCTION_32	IF_18	IF_22
0x400356f	     0xf8c5b020000	                            jl 0x40037d0	      1102	move.c	FUNCTION_32	IF_18	IF_22
0x4003575	      0x4c39742408	                cmp qword [rsp + 8], r14	      1105	move.c	FUNCTION_32	IF_18	IF_23
0x400357a	     0xf8e19030000	                           jle 0x4003899	      1105	move.c	FUNCTION_32	IF_18	IF_23
0x4003580	    0x8b83d8000000	            mov eax, dword [rbx + 0xd8] 	      1108	move.c	FUNCTION_32	IF_18	IF_23
0x4003586	            0x89cf	                            mov edi, ecx	      1109	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x4003588	          0xc1ef1f	                           shr edi, 0x1f	      1109	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x400358b	             0x1cf	                            add edi, ecx	      1109	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x400358d	              0x99	                                     cdq	      1108	move.c	FUNCTION_32	IF_18	IF_23
0x400358e	            0xd1ff	                              sar edi, 1	      1109	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x4003590	          0x41f7fc	                               idiv r12d	      1108	move.c	FUNCTION_32	IF_18	IF_23
0x4003593	            0x89c2	                            mov edx, eax	      1110	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x4003595	            0x29fa	                            sub edx, edi	      1110	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x4003597	            0x39f8	                            cmp eax, edi	      1110	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x4003599	      0xbf00000000	                              mov edi, 0	      1110	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x400359e	           0xf4ed7	                         cmovle edx, edi	      1110	move.c	FUNCTION_32	IF_18	IF_23	IF_24
0x40035a1	            0x29ce	                            sub esi, ecx	      1114	move.c	FUNCTION_32	IF_18	IF_23	IF_25
0x40035a3	          0x8d7e01	                      lea edi, [rsi + 1]	      1114	move.c	FUNCTION_32	IF_18	IF_23	IF_25
0x40035a6	            0x39fa	                            cmp edx, edi	      1116	move.c	FUNCTION_32	IF_18	IF_23
0x40035a8	           0xf4efa	                         cmovle edi, edx	      1116	move.c	FUNCTION_32	IF_18	IF_23
0x40035ab	        0x410faffc	                          imul edi, r12d	      1116	move.c	FUNCTION_32	IF_18	IF_23
0x40035af	            0x89f8	                            mov eax, edi	      1116	move.c	FUNCTION_32	IF_18	IF_23
0x40035b1	    0x89bb98000000	             mov dword [rbx + 0x98], edi	      1116	move.c	FUNCTION_32	IF_18	IF_23
0x40035b7	              0x99	                                     cdq	      1116	move.c	FUNCTION_32	IF_18	IF_23
0x40035b8	          0x41f7fc	                               idiv r12d	      1116	move.c	FUNCTION_32	IF_18	IF_23
0x40035bb	          0x4129c0	                            sub r8d, eax	      1140	move.c	FUNCTION_32	IF_18
0x40035be	          0x4139c8	                            cmp r8d, ecx	      1141	move.c	FUNCTION_32	IF_18	IF_31
0x40035c1	    0x448983dc0000	             mov dword [rbx + 0xdc], r8d	      1140	move.c	FUNCTION_32	IF_18
0x40035c8	            0x7c20	                            jl 0x40035ea	      1141	move.c	FUNCTION_32	IF_18	IF_31
0x40035ca	          0x4489c0	                            mov eax, r8d	      1144	move.c	FUNCTION_32	IF_18	IF_31
0x40035cd	          0x4489e2	                           mov edx, r12d	      1145	move.c	FUNCTION_32	IF_18	IF_31
0x40035d0	            0x29c8	                            sub eax, ecx	      1144	move.c	FUNCTION_32	IF_18	IF_31
0x40035d2	          0x83c001	                              add eax, 1	      1144	move.c	FUNCTION_32	IF_18	IF_31
0x40035d5	           0xfafd0	                           imul edx, eax	      1145	move.c	FUNCTION_32	IF_18	IF_31
0x40035d8	          0x4129c0	                            sub r8d, eax	      1146	move.c	FUNCTION_32	IF_18	IF_31
0x40035db	    0x448983dc0000	             mov dword [rbx + 0xdc], r8d	      1146	move.c	FUNCTION_32	IF_18	IF_31
0x40035e2	             0x1d7	                            add edi, edx	      1145	move.c	FUNCTION_32	IF_18	IF_31
0x40035e4	    0x89bb98000000	             mov dword [rbx + 0x98], edi	      1145	move.c	FUNCTION_32	IF_18	IF_31
0x40035ea	            0x89e8	                            mov eax, ebp	      1149	move.c	FUNCTION_32	IF_18
0x40035ec	            0x29f8	                            sub eax, edi	      1149	move.c	FUNCTION_32	IF_18
0x40035ee	              0x99	                                     cdq	      1149	move.c	FUNCTION_32	IF_18
0x40035ef	          0x41f7fc	                               idiv r12d	      1149	move.c	FUNCTION_32	IF_18
0x40035f2	          0x83f800	                              cmp eax, 0	      1150	move.c	FUNCTION_32	IF_18	IF_32
0x40035f5	     0xf8e45020000	                           jle 0x4003840	      1150	move.c	FUNCTION_32	IF_18	IF_32
0x40035fb	          0x4889df	                            mov rdi, rbx	      1151	move.c	FUNCTION_32	IF_18	CALL_12
0x40035fe	          0x4531c0	                            xor r8d, r8d	      1151	move.c	FUNCTION_32	IF_18	CALL_12
0x4003601	            0x31c9	                            xor ecx, ecx	      1151	move.c	FUNCTION_32	IF_18	CALL_12
0x4003603	            0x89c2	                            mov edx, eax	      1151	move.c	FUNCTION_32	IF_18	CALL_12
0x4003605	            0x31f6	                            xor esi, esi	      1151	move.c	FUNCTION_32	IF_18	CALL_12
0x4003607	      0xe800000000	                          call 0x400360c	      1151	move.c	FUNCTION_32	IF_18	CALL_12
0x400360c	    0x488b1d000000	            mov rbx, qword [0x04003613] 	      1151	move.c	FUNCTION_32	IF_18	CALL_12
0x4003613	    0x8bbb98000000	            mov edi, dword [rbx + 0x98] 	      1151	move.c	FUNCTION_32	IF_18	CALL_12
0x4003619	      0xe9befdffff	                           jmp 0x40033dc	      1151	move.c	FUNCTION_32	IF_18	CALL_12
0x400361e	            0x6690	                                     nop	      1151	move.c	FUNCTION_32	IF_18	CALL_12
0x4003620	            0x31c0	                            xor eax, eax	      1067	move.c	FUNCTION_32
0x4003622	      0xe9bcfeffff	                           jmp 0x40034e3	      1067	move.c	FUNCTION_32
0x4003627	    0x660f1f840000	                    nop word [rax + rax]	      1067	move.c	FUNCTION_32
0x4003630	          0x4889df	                            mov rdi, rbx	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x4003633	      0xe800000000	                          call 0x4003638	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x4003638	          0x83c001	                              add eax, 1	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x400363b	      0xe9fffbffff	                           jmp 0x400323f	       877	move.c	ELSE_1	FUNCTION_28	CALL_1
0x4003640	    0x488d8bd80000	                   lea rcx, [rbx + 0xd8]	       956	move.c	FUNCTION_32	ELSE_1	CALL_3
0x4003647	        0x488d7338	                   lea rsi, [rbx + 0x38]	       956	move.c	FUNCTION_32	ELSE_1	CALL_3
0x400364b	      0x4c8d442414	                    lea r8, [rsp + 0x14]	       956	move.c	FUNCTION_32	ELSE_1	CALL_3
0x4003650	      0x488d542410	                   lea rdx, [rsp + 0x10]	       956	move.c	FUNCTION_32	ELSE_1	CALL_3
0x4003655	          0x4889df	                            mov rdi, rbx	       956	move.c	FUNCTION_32	ELSE_1	CALL_3
0x4003658	      0xe800000000	                          call 0x400365d	       956	move.c	FUNCTION_32	ELSE_1	CALL_3
0x400365d	        0x8b442410	            mov eax, dword [rsp + 0x10] 	       956	move.c	FUNCTION_32	ELSE_1	CALL_3
0x4003661	    0x488b1d000000	            mov rbx, qword [0x04003668] 	       956	move.c	FUNCTION_32	ELSE_1	CALL_3
0x4003668	      0xe9b0fbffff	                           jmp 0x400321d	       956	move.c	FUNCTION_32	ELSE_1	CALL_3
0x400366d	           0xf1f00	                         nop dword [rax]	       956	move.c	FUNCTION_32	ELSE_1	CALL_3
0x4003670	          0x4889df	                            mov rdi, rbx	       945	move.c	FUNCTION_32	CALL_2
0x4003673	      0xe868cfffff	                      call sym.curs_rows	       945	move.c	FUNCTION_32	CALL_2
0x4003678	    0x488b1d000000	            mov rbx, qword [0x0400367f] 	       945	move.c	FUNCTION_32	CALL_2
0x400367f	      0xe975fbffff	                           jmp 0x40031f9	       945	move.c	FUNCTION_32	CALL_2
0x4003684	         0xf1f4000	                         nop dword [rax]	       945	move.c	FUNCTION_32	CALL_2
0x4003688	    0x8b83a0000000	            mov eax, dword [rbx + 0xa0] 	       977	move.c	FUNCTION_32	IF_4
0x400368e	          0x83ea01	                              sub edx, 1	       976	move.c	FUNCTION_32	IF_4
0x4003691	          0x4531e4	                          xor r12d, r12d	       929	move.c	FUNCTION_32
0x4003694	    0x8993e0000000	             mov dword [rbx + 0xe0], edx	       976	move.c	FUNCTION_32	IF_4
0x400369a	          0x83e801	                              sub eax, 1	       977	move.c	FUNCTION_32	IF_4
0x400369d	    0x8983dc000000	             mov dword [rbx + 0xdc], eax	       977	move.c	FUNCTION_32	IF_4
0x40036a3	      0xe9d9fcffff	                           jmp 0x4003381	       977	move.c	FUNCTION_32	IF_4
0x40036a8	     0xf1f84000000	                   nop dword [rax + rax]	       977	move.c	FUNCTION_32	IF_4
0x40036b0	      0xe800000000	                          call 0x40036b5	      1164	move.c	FUNCTION_32	IF_35	CALL_15
0x40036b5	            0x85c0	                           test eax, eax	      1164	move.c	FUNCTION_32	IF_35	CALL_15
0x40036b7	            0x742f	                            je 0x40036e8	      1164	move.c	FUNCTION_32	IF_35	CALL_15
0x40036b9	    0x488b1d000000	            mov rbx, qword [0x040036c0] 	      1164	move.c	FUNCTION_32	IF_35	CALL_15
0x40036c0	    0x8b83b4000000	            mov eax, dword [rbx + 0xb4] 	      1164	move.c	FUNCTION_32	IF_35	CALL_15
0x40036c6	      0xe93efdffff	                           jmp 0x4003409	      1164	move.c	FUNCTION_32	IF_35	CALL_15
0x40036cb	       0xf1f440000	                   nop dword [rax + rax]	      1164	move.c	FUNCTION_32	IF_35	CALL_15
0x40036d0	    0xc783e0000000	               mov dword [rbx + 0xe0], 0	      1054	move.c	FUNCTION_32	ELSE_8
0x40036da	          0x4531e4	                          xor r12d, r12d	       929	move.c	FUNCTION_32
0x40036dd	      0xe99ffcffff	                           jmp 0x4003381	       929	move.c	FUNCTION_32
0x40036e2	    0x660f1f440000	                    nop word [rax + rax]	       929	move.c	FUNCTION_32
0x40036e8	      0xbf23000000	                           mov edi, 0x23	      1167	move.c	FUNCTION_32	CALL_16
0x40036ed	      0xe800000000	                          call 0x40036f2	      1167	move.c	FUNCTION_32	CALL_16
0x40036f2	            0xebc5	                           jmp 0x40036b9	      1167	move.c	FUNCTION_32	CALL_16
0x40036f4	         0xf1f4000	                         nop dword [rax]	      1167	move.c	FUNCTION_32	CALL_16
0x40036f8	    0x488b05000000	            mov rax, qword [0x040036ff] 	      1029	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x40036ff	          0x4189d1	                            mov r9d, edx	      1023	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_10
0x4003702	          0x41f7d9	                                 neg r9d	      1023	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_10
0x4003705	            0x85d2	                           test edx, edx	      1023	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_10
0x4003707	        0x440f49cf	                         cmovns r9d, edi	      1023	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_10
0x400370b	          0x4885c0	                           test rax, rax	      1029	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x400370e	            0x7430	                            je 0x4003740	      1029	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4003710	          0x4589ea	                          mov r10d, r13d	      1029	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4003713	          0x41d1fa	                             sar r10d, 1	      1029	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4003716	          0x4539d1	                           cmp r9d, r10d	      1029	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4003719	            0x7d25	                           jge 0x4003740	      1029	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x400371b	            0x39fa	                            cmp edx, edi	      1029	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x400371d	            0x7e21	                           jle 0x4003740	      1029	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x400371f	          0x4963f1	                         movsxd rsi, r9d	      1033	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_12
0x4003722	          0x4839f0	                            cmp rax, rsi	      1034	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_12
0x4003725	        0x440f4fc8	                          cmovg r9d, eax	      1034	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_12
0x4003729	          0x4489c0	                            mov eax, r8d	      1036	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_13
0x400372c	        0x438d3401	                      lea esi, [r9 + r8]	      1036	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_13
0x4003730	          0x4429c8	                            sub eax, r9d	      1036	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_13
0x4003733	            0x85d2	                           test edx, edx	      1036	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_13
0x4003735	           0xf48f0	                          cmovs esi, eax	      1036	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_13
0x4003738	            0xeb16	                           jmp 0x4003750	      1036	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_13
0x400373a	    0x660f1f440000	                    nop word [rax + rax]	      1036	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	ELSE_5	IF_13
0x4003740	          0x4589ec	                          mov r12d, r13d	      1030	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4003743	        0x41c1ec1f	                          shr r12d, 0x1f	      1030	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4003747	          0x4501ec	                          add r12d, r13d	      1030	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x400374a	          0x41d1fc	                             sar r12d, 1	      1030	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x400374d	          0x4429e6	                           sub esi, r12d	      1030	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4003750	            0x85f6	                           test esi, esi	      1030	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4003752	      0xb800000000	                              mov eax, 0	      1030	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x4003757	           0xf48f0	                          cmovs esi, eax	      1030	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_11
0x400375a	          0x4139f0	                            cmp r8d, esi	      1042	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_15
0x400375d	     0xf841bfdffff	                            je 0x400347e	      1042	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_15
0x4003763	    0x89b394000000	             mov dword [rbx + 0x94], esi	      1044	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_15
0x4003769	      0xbf28000000	                           mov edi, 0x28	      1046	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_15	CALL_8
0x400376e	      0xe800000000	                          call 0x4003773	      1046	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_15	CALL_8
0x4003773	    0x488b1d000000	            mov rbx, qword [0x0400377a] 	      1046	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_15	CALL_8
0x400377a	    0x8b8be0000000	            mov ecx, dword [rbx + 0xe0] 	      1046	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_15	CALL_8
0x4003780	    0x448b83940000	            mov r8d, dword [rbx + 0x94] 	      1046	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_15	CALL_8
0x4003787	      0xe9f2fcffff	                           jmp 0x400347e	      1046	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_15	CALL_8
0x400378c	         0xf1f4000	                         nop dword [rax]	      1046	move.c	FUNCTION_32	ELSE_3	IF_8	IF_9	IF_15	CALL_8
0x4003790	    0x488b3d000000	            mov rdi, qword [0x04003797] 	       904	move.c	FUNCTION_30	IF_1	CALL_1
0x4003797	      0xbe6e000000	                           mov esi, 0x6e	       904	move.c	FUNCTION_30	IF_1	CALL_1
0x400379c	      0xe800000000	                          call 0x40037a1	       904	move.c	FUNCTION_30	IF_1	CALL_1
0x40037a1	          0x4885c0	                           test rax, rax	       904	move.c	FUNCTION_30	IF_1	CALL_1
0x40037a4	            0x740c	                            je 0x40037b2	       904	move.c	FUNCTION_30	IF_1	CALL_1
0x40037a6	          0x4889df	                            mov rdi, rbx	       905	move.c	FUNCTION_30	CALL_2
0x40037a9	      0xe800000000	                          call 0x40037ae	       905	move.c	FUNCTION_30	CALL_2
0x40037ae	        0x448d6001	                     lea r12d, [rax + 1]	       905	move.c	FUNCTION_30	CALL_2
0x40037b2	    0x488b1d000000	            mov rbx, qword [0x040037b9] 	       905	move.c	FUNCTION_30	CALL_2
0x40037b9	    0x8b8be0000000	            mov ecx, dword [rbx + 0xe0] 	       905	move.c	FUNCTION_30	CALL_2
0x40037bf	    0x8b93ac000000	            mov edx, dword [rbx + 0xac] 	       905	move.c	FUNCTION_30	CALL_2
0x40037c5	      0xe915fbffff	                           jmp 0x40032df	       905	move.c	FUNCTION_30	CALL_2
0x40037ca	    0x660f1f440000	                    nop word [rax + rax]	       905	move.c	FUNCTION_30	CALL_2
0x40037d0	        0x4b8d0412	                    lea rax, [r10 + r10]	      1105	move.c	FUNCTION_32	IF_18	IF_23
0x40037d4	          0x4939c3	                            cmp r11, rax	      1105	move.c	FUNCTION_32	IF_18	IF_23
0x40037d7	     0xf8ca3fdffff	                            jl 0x4003580	      1105	move.c	FUNCTION_32	IF_18	IF_23
0x40037dd	      0x4c39742408	                cmp qword [rsp + 8], r14	      1118	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x40037e2	          0x4489f8	                           mov eax, r15d	      1118	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x40037e5	     0xf8ed0fdffff	                           jle 0x40035bb	      1118	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x40037eb	        0x4d0fafd5	                           imul r10, r13	      1121	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x40037ef	    0x486393d80000	         movsxd rdx, dword [rbx + 0xd8] 	      1121	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x40037f6	          0x4863c7	                         movsxd rax, edi	      1121	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x40037f9	          0x4c01d0	                            add rax, r10	      1121	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x40037fc	          0x4829d0	                            sub rax, rdx	      1121	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x40037ff	      0x498d4405ff	                lea rax, [r13 + rax - 1]	      1121	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x4003804	            0x4899	                                     cqo	      1121	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x4003806	          0x49f7fd	                                idiv r13	      1121	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x4003809	          0x4889c6	                            mov rsi, rax	      1121	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x400380c	          0x4489f8	                           mov eax, r15d	      1121	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26
0x400380f	            0x85f6	                           test esi, esi	      1123	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27
0x4003811	     0xf8ea4fdffff	                           jle 0x40035bb	      1123	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27
0x4003817	            0x89f2	                            mov edx, esi	      1125	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27	IF_28
0x4003819	        0x410fafd4	                          imul edx, r12d	      1125	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27	IF_28
0x400381d	        0x410fafc4	                          imul eax, r12d	      1125	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27	IF_28
0x4003821	            0x39fa	                            cmp edx, edi	      1125	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27	IF_28
0x4003823	           0xf4fd0	                          cmovg edx, eax	      1125	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27	IF_28
0x4003826	            0x29d7	                            sub edi, edx	      1127	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27
0x4003828	            0x89f8	                            mov eax, edi	      1127	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27
0x400382a	    0x89bb98000000	             mov dword [rbx + 0x98], edi	      1127	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27
0x4003830	              0x99	                                     cdq	      1127	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27
0x4003831	          0x41f7fc	                               idiv r12d	      1127	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27
0x4003834	      0xe982fdffff	                           jmp 0x40035bb	      1127	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27
0x4003839	     0xf1f80000000	                         nop dword [rax]	      1127	move.c	FUNCTION_32	IF_18	ELSE_12	IF_26	IF_27
0x4003840	     0xf8496fbffff	                            je 0x40033dc	      1152	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x4003846	            0xf7d8	                                 neg eax	      1153	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x4003848	          0x4889df	                            mov rdi, rbx	      1153	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x400384b	          0x4531c9	                            xor r9d, r9d	      1153	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x400384e	            0x89c2	                            mov edx, eax	      1153	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x4003850	          0x4531c0	                            xor r8d, r8d	      1153	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x4003853	            0x31c9	                            xor ecx, ecx	      1153	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x4003855	            0x31f6	                            xor esi, esi	      1153	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x4003857	      0xe800000000	                          call 0x400385c	      1153	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x400385c	    0x488b1d000000	            mov rbx, qword [0x04003863] 	      1153	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x4003863	    0x8bbb98000000	            mov edi, dword [rbx + 0x98] 	      1153	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x4003869	      0xe96efbffff	                           jmp 0x40033dc	      1153	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x400386e	            0x6690	                                     nop	      1153	move.c	FUNCTION_32	IF_18	ELSE_14	IF_33
0x4003870	          0x4889df	                            mov rdi, rbx	      1096	move.c	FUNCTION_32	IF_18	CALL_11
0x4003873	            0x31d2	                            xor edx, edx	      1096	move.c	FUNCTION_32	IF_18	CALL_11
0x4003875	      0xe800000000	                          call 0x400387a	      1096	move.c	FUNCTION_32	IF_18	CALL_11
0x400387a	    0x488b1d000000	            mov rbx, qword [0x04003881] 	      1096	move.c	FUNCTION_32	IF_18	CALL_11
0x4003881	    0x4c8b15000000	            mov r10, qword [0x04003888] 	      1096	move.c	FUNCTION_32	IF_18	CALL_11
0x4003888	    0x8b8ba0000000	            mov ecx, dword [rbx + 0xa0] 	      1096	move.c	FUNCTION_32	IF_18	CALL_11
0x400388e	    0x8bbb98000000	            mov edi, dword [rbx + 0x98] 	      1096	move.c	FUNCTION_32	IF_18	CALL_11
0x4003894	      0xe9a9fcffff	                           jmp 0x4003542	      1096	move.c	FUNCTION_32	IF_18	CALL_11
0x4003899	          0x4d01d2	                            add r10, r10	      1105	move.c	FUNCTION_32	IF_18	IF_23
0x400389c	          0x4d39d3	                            cmp r11, r10	      1105	move.c	FUNCTION_32	IF_18	IF_23
0x400389f	     0xf8cdbfcffff	                            jl 0x4003580	      1105	move.c	FUNCTION_32	IF_18	IF_23
0x40038a5	          0x4489ce	                            mov esi, r9d	      1133	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29
0x40038a8	    0x8b83d8000000	            mov eax, dword [rbx + 0xd8] 	      1134	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	WHILE_1
0x40038ae	            0x29ce	                            sub esi, ecx	      1133	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29
0x40038b0	          0x83c601	                              add esi, 1	      1133	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29
0x40038b3	        0x410faff4	                          imul esi, r12d	      1133	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29
0x40038b7	            0x39f0	                            cmp eax, esi	      1134	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	WHILE_1
0x40038b9	        0x89742414	             mov dword [rsp + 0x14], esi	      1133	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29
0x40038bd	            0x7d0c	                           jge 0x40038cb	      1134	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	WHILE_1
0x40038bf	              0x90	                                     nop	      1134	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	WHILE_1
0x40038c0	          0x4429e6	                           sub esi, r12d	      1135	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	WHILE_1
0x40038c3	            0x39f0	                            cmp eax, esi	      1134	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	WHILE_1
0x40038c5	            0x7cf9	                            jl 0x40038c0	      1134	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	WHILE_1
0x40038c7	        0x89742414	             mov dword [rsp + 0x14], esi	      1134	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	WHILE_1
0x40038cb	            0x39fe	                            cmp esi, edi	      1136	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	IF_30
0x40038cd	          0x4489f8	                           mov eax, r15d	      1136	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	IF_30
0x40038d0	     0xf8ee5fcffff	                           jle 0x40035bb	      1136	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	IF_30
0x40038d6	            0x89f0	                            mov eax, esi	      1136	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	IF_30
0x40038d8	    0x89b398000000	             mov dword [rbx + 0x98], esi	      1137	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	IF_30
0x40038de	            0x89f7	                            mov edi, esi	      1137	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	IF_30
0x40038e0	              0x99	                                     cdq	      1137	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	IF_30
0x40038e1	          0x41f7fc	                               idiv r12d	      1137	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	IF_30
0x40038e4	      0xe9d2fcffff	                           jmp 0x40035bb	      1137	move.c	FUNCTION_32	IF_18	ELSE_13	IF_29	IF_30
0x40038e9	      0xe800000000	                          call 0x40038ee	      1171	move.c	FUNCTION_32
cursor_correct	SWITCH,0:WHILE,1:ELSE,4:functions,0:FOR,0:CALL,7:IF,15:DO,0	203
0x4005290	            0x4156	                                push r14	      2119	move.c	FUNCTION_47
0x4005292	            0x4155	                                push r13	      2119	move.c	FUNCTION_47
0x4005294	            0x4154	                                push r12	      2119	move.c	FUNCTION_47
0x4005296	              0x55	                                push rbp	      2119	move.c	FUNCTION_47
0x4005297	              0x53	                                push rbx	      2119	move.c	FUNCTION_47
0x4005298	        0x4883ec20	                           sub rsp, 0x20	      2119	move.c	FUNCTION_47
0x400529c	    0x488b15000000	            mov rdx, qword [0x040052a3] 	      2141	move.c	FUNCTION_47	IF_2
0x40052a3	    0x64488b042528	                mov rax, qword fs:[0x28]	      2119	move.c	FUNCTION_47
0x40052ac	      0x4889442418	             mov qword [rsp + 0x18], rax	      2119	move.c	FUNCTION_47
0x40052b1	            0x31c0	                            xor eax, eax	      2119	move.c	FUNCTION_47
0x40052b3	    0x8b0500000000	            mov eax, dword [0x040052b9] 	      2135	move.c	FUNCTION_47	IF_1
0x40052b9	        0x488b7a78	            mov rdi, qword [rdx + 0x78] 	      2141	move.c	FUNCTION_47	IF_2
0x40052bd	            0x85c0	                           test eax, eax	      2132	move.c	FUNCTION_47
0x40052bf	          0x8d68ff	                      lea ebp, [rax - 1]	      2132	move.c	FUNCTION_47
0x40052c2	     0xf4e2d000000	          cmovle ebp, dword [0x040052c9]	      2132	move.c	FUNCTION_47
0x40052c9	        0x4883ff01	                              cmp rdi, 1	      2141	move.c	FUNCTION_47	IF_2
0x40052cd	          0x4189ee	                           mov r14d, ebp	      2141	move.c	FUNCTION_47	IF_2
0x40052d0	     0xf844a020000	                            je 0x4005520	      2141	move.c	FUNCTION_47	IF_2
0x40052d6	    0xf682b4000000	           test byte [rdx + 0xb4], 0x20 	       590	move.c	FUNCTION_16	IF_1
0x40052dd	     0xf84ed010000	                            je 0x40054d0	       590	move.c	FUNCTION_16	IF_1
0x40052e3	    0x488b0d000000	            mov rcx, qword [0x040052ea] 	      2149	move.c	FUNCTION_47	IF_4
0x40052ea	    0x488b82e80000	            mov rax, qword [rdx + 0xe8] 	      2149	move.c	FUNCTION_47	IF_4
0x40052f1	          0x488b09	                    mov rcx, qword [rcx]	      2149	move.c	FUNCTION_47	IF_4
0x40052f4	        0x4883c101	                              add rcx, 1	      2149	move.c	FUNCTION_47	IF_4
0x40052f8	          0x4839c8	                            cmp rax, rcx	      2149	move.c	FUNCTION_47	IF_4
0x40052fb	     0xf84ef010000	                            je 0x40054f0	      2149	move.c	FUNCTION_47	IF_4
0x4005301	        0x4c8b6a38	            mov r13, qword [rdx + 0x38] 	      2165	move.c	FUNCTION_47
0x4005305	          0x4863cd	                         movsxd rcx, ebp	      2166	move.c	FUNCTION_47	IF_6
0x4005308	          0x4801f9	                            add rcx, rdi	      2166	move.c	FUNCTION_47	IF_6
0x400530b	          0x4939cd	                            cmp r13, rcx	      2166	move.c	FUNCTION_47	IF_6
0x400530e	            0x7c12	                            jl 0x4005322	      2166	move.c	FUNCTION_47	IF_6
0x4005310	          0x4963ce	                        movsxd rcx, r14d	      2167	move.c	FUNCTION_47	IF_6
0x4005313	          0x4889c6	                            mov rsi, rax	      2167	move.c	FUNCTION_47	IF_6
0x4005316	          0x4829ce	                            sub rsi, rcx	      2167	move.c	FUNCTION_47	IF_6
0x4005319	          0x4939f5	                            cmp r13, rsi	      2167	move.c	FUNCTION_47	IF_6
0x400531c	     0xf8c3e020000	                            jl 0x4005560	      2167	move.c	FUNCTION_47	IF_6
0x4005322	    0x8b9a84000000	            mov ebx, dword [rdx + 0x84] 	      2184	move.c	FUNCTION_47
0x4005328	    0x448ba2f40000	           mov r12d, dword [rdx + 0xf4] 	      2185	move.c	FUNCTION_47
0x400532f	        0x4883e801	                              sub rax, 1	      2181	move.c	FUNCTION_47
0x4005333	      0x48897c2408	                mov qword [rsp + 8], rdi	      2180	move.c	FUNCTION_47
0x4005338	      0x4889442410	             mov qword [rsp + 0x10], rax	      2181	move.c	FUNCTION_47
0x400533d	           0xf1f00	                         nop dword [rax]	      2181	move.c	FUNCTION_47
0x4005340	            0x39eb	                            cmp ebx, ebp	      2187	move.c	FUNCTION_47	WHILE_1
0x4005342	            0x7c09	                            jl 0x400534d	      2187	move.c	FUNCTION_47	WHILE_1
0x4005344	          0x4539f4	                          cmp r12d, r14d	      2187	move.c	FUNCTION_47	WHILE_1
0x4005347	     0xf8deb000000	                           jge 0x4005438	      2187	move.c	FUNCTION_47	WHILE_1
0x400534d	          0x4839c7	                            cmp rdi, rax	      2187	move.c	FUNCTION_47	WHILE_1
0x4005350	     0xf8de2000000	                           jge 0x4005438	      2187	move.c	FUNCTION_47	WHILE_1
0x4005356	          0x4539f4	                          cmp r12d, r14d	      2189	move.c	FUNCTION_47	WHILE_1	IF_7
0x4005359	            0x7d55	                           jge 0x40053b0	      2189	move.c	FUNCTION_47	WHILE_1	IF_7
0x400535b	          0x4439e3	                           cmp ebx, r12d	      2189	move.c	FUNCTION_47	WHILE_1	IF_7
0x400535e	     0xf8d9c000000	                           jge 0x4005400	      2189	move.c	FUNCTION_47	WHILE_1	IF_7
0x4005364	            0x39eb	                            cmp ebx, ebp	      2189	move.c	FUNCTION_47	WHILE_1	IF_7
0x4005366	     0xf8d94000000	                           jge 0x4005400	      2189	move.c	FUNCTION_47	WHILE_1	IF_7
0x400536c	            0x39eb	                            cmp ebx, ebp	      2199	move.c	FUNCTION_47	WHILE_1	IF_9
0x400536e	            0x7dd0	                           jge 0x4005340	      2199	move.c	FUNCTION_47	WHILE_1	IF_9
0x4005370	          0x4439e3	                           cmp ebx, r12d	      2199	move.c	FUNCTION_47	WHILE_1	IF_9
0x4005373	            0x7c05	                            jl 0x400537a	      2199	move.c	FUNCTION_47	WHILE_1	IF_9
0x4005375	          0x4539f4	                          cmp r12d, r14d	      2199	move.c	FUNCTION_47	WHILE_1	IF_9
0x4005378	            0x7cc6	                            jl 0x4005340	      2199	move.c	FUNCTION_47	WHILE_1	IF_9
0x400537a	      0x488d542408	                      lea rdx, [rsp + 8]	      2202	move.c	FUNCTION_47	WHILE_1	IF_9	IF_10	CALL_5
0x400537f	            0x31f6	                            xor esi, esi	      2202	move.c	FUNCTION_47	WHILE_1	IF_9	IF_10	CALL_5
0x4005381	      0xe800000000	                          call 0x4005386	      2202	move.c	FUNCTION_47	WHILE_1	IF_9	IF_10	CALL_5
0x4005386	            0x85c0	                           test eax, eax	      2202	move.c	FUNCTION_47	WHILE_1	IF_9	IF_10	CALL_5
0x4005388	            0x743a	                            je 0x40053c4	      2202	move.c	FUNCTION_47	WHILE_1	IF_9	IF_10	CALL_5
0x400538a	    0x660f1f440000	                    nop word [rax + rax]	      2202	move.c	FUNCTION_47	WHILE_1	IF_9	IF_10	CALL_5
0x4005390	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2209	move.c	FUNCTION_47	WHILE_1	IF_9	IF_11
0x4005395	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2209	move.c	FUNCTION_47	WHILE_1	IF_9	IF_11
0x400539a	          0x83c301	                              add ebx, 1	      2203	move.c	FUNCTION_47	WHILE_1	IF_9	IF_10
0x400539d	          0x4839c7	                            cmp rdi, rax	      2209	move.c	FUNCTION_47	WHILE_1	IF_9	IF_11
0x40053a0	            0x7c3d	                            jl 0x40053df	      2209	move.c	FUNCTION_47	WHILE_1	IF_9	IF_11
0x40053a2	        0x4883c701	                              add rdi, 1	      2212	move.c	FUNCTION_47	WHILE_1	IF_9
0x40053a6	      0x48897c2408	                mov qword [rsp + 8], rdi	      2212	move.c	FUNCTION_47	WHILE_1	IF_9
0x40053ab	            0xeb93	                           jmp 0x4005340	      2212	move.c	FUNCTION_47	WHILE_1	IF_9
0x40053ad	           0xf1f00	                         nop dword [rax]	      2212	move.c	FUNCTION_47	WHILE_1	IF_9
0x40053b0	            0x39eb	                            cmp ebx, ebp	      2199	move.c	FUNCTION_47	WHILE_1	IF_9
0x40053b2	            0x7d8c	                           jge 0x4005340	      2199	move.c	FUNCTION_47	WHILE_1	IF_9
0x40053b4	      0x488d542408	                      lea rdx, [rsp + 8]	      2202	move.c	FUNCTION_47	WHILE_1	IF_9	IF_10	CALL_5
0x40053b9	            0x31f6	                            xor esi, esi	      2202	move.c	FUNCTION_47	WHILE_1	IF_9	IF_10	CALL_5
0x40053bb	      0xe800000000	                          call 0x40053c0	      2202	move.c	FUNCTION_47	WHILE_1	IF_9	IF_10	CALL_5
0x40053c0	            0x85c0	                           test eax, eax	      2202	move.c	FUNCTION_47	WHILE_1	IF_9	IF_10	CALL_5
0x40053c2	            0x75cc	                           jne 0x4005390	      2202	move.c	FUNCTION_47	WHILE_1	IF_9	IF_10	CALL_5
0x40053c4	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2206	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_6
0x40053c9	      0xe800000000	                          call 0x40053ce	      2206	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_6
0x40053ce	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2209	move.c	FUNCTION_47	WHILE_1	IF_9	IF_11
0x40053d3	             0x1c3	                            add ebx, eax	      2206	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_6
0x40053d5	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2209	move.c	FUNCTION_47	WHILE_1	IF_9	IF_11
0x40053da	          0x4839c7	                            cmp rdi, rax	      2209	move.c	FUNCTION_47	WHILE_1	IF_9	IF_11
0x40053dd	            0x7dc3	                           jge 0x40053a2	      2209	move.c	FUNCTION_47	WHILE_1	IF_9	IF_11
0x40053df	        0x488d7701	                      lea rsi, [rdi + 1]	      2210	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_7
0x40053e3	    0x488b3d000000	            mov rdi, qword [0x040053ea] 	      2210	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_7
0x40053ea	      0xe800000000	                          call 0x40053ef	      2210	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_7
0x40053ef	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2210	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_7
0x40053f4	             0x1c3	                            add ebx, eax	      2210	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_7
0x40053f6	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2210	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_7
0x40053fb	            0xeba5	                           jmp 0x40053a2	      2210	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_7
0x40053fd	           0xf1f00	                         nop dword [rax]	      2210	move.c	FUNCTION_47	WHILE_1	IF_9	CALL_7
0x4005400	      0x488d742410	                   lea rsi, [rsp + 0x10]	      2192	move.c	FUNCTION_47	WHILE_1	IF_7	IF_8	CALL_3
0x4005405	            0x31d2	                            xor edx, edx	      2192	move.c	FUNCTION_47	WHILE_1	IF_7	IF_8	CALL_3
0x4005407	          0x4889c7	                            mov rdi, rax	      2192	move.c	FUNCTION_47	WHILE_1	IF_7	IF_8	CALL_3
0x400540a	      0xe800000000	                          call 0x400540f	      2192	move.c	FUNCTION_47	WHILE_1	IF_7	IF_8	CALL_3
0x400540f	            0x85c0	                           test eax, eax	      2192	move.c	FUNCTION_47	WHILE_1	IF_7	IF_8	CALL_3
0x4005411	     0xf84a1000000	                            je 0x40054b8	      2192	move.c	FUNCTION_47	WHILE_1	IF_7	IF_8	CALL_3
0x4005417	        0x4183c401	                             add r12d, 1	      2193	move.c	FUNCTION_47	WHILE_1	IF_7	IF_8
0x400541b	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2197	move.c	FUNCTION_47	WHILE_1	IF_7
0x4005420	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2197	move.c	FUNCTION_47	WHILE_1	IF_7
0x4005425	        0x4883e801	                              sub rax, 1	      2197	move.c	FUNCTION_47	WHILE_1	IF_7
0x4005429	      0x4889442410	             mov qword [rsp + 0x10], rax	      2197	move.c	FUNCTION_47	WHILE_1	IF_7
0x400542e	      0xe939ffffff	                           jmp 0x400536c	      2197	move.c	FUNCTION_47	WHILE_1	IF_7
0x4005433	       0xf1f440000	                   nop dword [rax + rax]	      2197	move.c	FUNCTION_47	WHILE_1	IF_7
0x4005438	          0x4839c7	                            cmp rdi, rax	      2215	move.c	FUNCTION_47	IF_12
0x400543b	    0x488b15000000	            mov rdx, qword [0x04005442] 	      2218	move.c	FUNCTION_47	ELSE_3	IF_13
0x4005442	            0x743c	                            je 0x4005480	      2215	move.c	FUNCTION_47	IF_12
0x4005444	          0x4885c0	                           test rax, rax	      2215	move.c	FUNCTION_47	IF_12
0x4005447	            0x7437	                            je 0x4005480	      2215	move.c	FUNCTION_47	IF_12
0x4005449	          0x4839c7	                            cmp rdi, rax	      2217	move.c	FUNCTION_47	ELSE_3	IF_13
0x400544c	     0xf8ff6000000	                            jg 0x4005548	      2217	move.c	FUNCTION_47	ELSE_3	IF_13
0x4005452	          0x4939fd	                            cmp r13, rdi	      2221	move.c	FUNCTION_47	ELSE_4	IF_14
0x4005455	     0xf8d2c010000	                           jge 0x4005587	      2221	move.c	FUNCTION_47	ELSE_4	IF_14
0x400545b	      0x48837a7801	               cmp qword [rdx + 0x78], 1	      2221	move.c	FUNCTION_47	ELSE_4	IF_14
0x4005460	     0xf8e51010000	                           jle 0x40055b7	      2221	move.c	FUNCTION_47	ELSE_4	IF_14
0x4005466	    0x8b82b4000000	            mov eax, dword [rdx + 0xb4] 	      2224	move.c	FUNCTION_47	ELSE_4	IF_14
0x400546c	        0x48897a38	             mov qword [rdx + 0x38], rdi	      2223	move.c	FUNCTION_47	ELSE_4	IF_14
0x4005470	          0x83e0e4	                     and eax, 0xffffffe4	      2224	move.c	FUNCTION_47	ELSE_4	IF_14
0x4005473	    0x8982b4000000	             mov dword [rdx + 0xb4], eax	      2224	move.c	FUNCTION_47	ELSE_4	IF_14
0x4005479	            0xeb0f	                           jmp 0x400548a	      2224	move.c	FUNCTION_47	ELSE_4	IF_14
0x400547b	       0xf1f440000	                   nop dword [rax + rax]	      2224	move.c	FUNCTION_47	ELSE_4	IF_14
0x4005480	    0x8b82b4000000	            mov eax, dword [rdx + 0xb4] 	      2224	move.c	FUNCTION_47	ELSE_4	IF_14
0x4005486	        0x48897a38	             mov qword [rdx + 0x38], rdi	      2216	move.c	FUNCTION_47	IF_12
0x400548a	             0xc80	                             or al, 0x80	      2234	move.c	FUNCTION_47
0x400548c	    0x8982b4000000	             mov dword [rdx + 0xb4], eax	      2234	move.c	FUNCTION_47
0x4005492	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      2235	move.c	FUNCTION_47
0x4005497	    0x644833042528	                xor rax, qword fs:[0x28]	      2235	move.c	FUNCTION_47
0x40054a0	     0xf851c010000	                           jne 0x40055c2	      2235	move.c	FUNCTION_47
0x40054a6	        0x4883c420	                           add rsp, 0x20	      2235	move.c	FUNCTION_47
0x40054aa	              0x5b	                                 pop rbx	      2235	move.c	FUNCTION_47
0x40054ab	              0x5d	                                 pop rbp	      2235	move.c	FUNCTION_47
0x40054ac	            0x415c	                                 pop r12	      2235	move.c	FUNCTION_47
0x40054ae	            0x415d	                                 pop r13	      2235	move.c	FUNCTION_47
0x40054b0	            0x415e	                                 pop r14	      2235	move.c	FUNCTION_47
0x40054b2	              0xc3	                                     ret	      2235	move.c	FUNCTION_47
0x40054b3	       0xf1f440000	                   nop dword [rax + rax]	      2235	move.c	FUNCTION_47
0x40054b8	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2196	move.c	FUNCTION_47	WHILE_1	IF_7	CALL_4
0x40054bd	      0xe800000000	                          call 0x40054c2	      2196	move.c	FUNCTION_47	WHILE_1	IF_7	CALL_4
0x40054c2	          0x4101c4	                           add r12d, eax	      2196	move.c	FUNCTION_47	WHILE_1	IF_7	CALL_4
0x40054c5	      0xe951ffffff	                           jmp 0x400541b	      2196	move.c	FUNCTION_47	WHILE_1	IF_7	CALL_4
0x40054ca	    0x660f1f440000	                    nop word [rax + rax]	      2196	move.c	FUNCTION_47	WHILE_1	IF_7	CALL_4
0x40054d0	          0x4889d7	                            mov rdi, rdx	       591	move.c	FUNCTION_16	CALL_1
0x40054d3	      0xe808aeffff	                   call sym.comp_botline	       591	move.c	FUNCTION_16	CALL_1
0x40054d8	    0x488b15000000	            mov rdx, qword [0x040054df] 	       591	move.c	FUNCTION_16	CALL_1
0x40054df	        0x488b7a78	            mov rdi, qword [rdx + 0x78] 	       591	move.c	FUNCTION_16	CALL_1
0x40054e3	      0xe9fbfdffff	                           jmp 0x40052e3	       591	move.c	FUNCTION_16	CALL_1
0x40054e8	     0xf1f84000000	                   nop dword [rax + rax]	       591	move.c	FUNCTION_16	CALL_1
0x40054f0	    0x8b0d00000000	            mov ecx, dword [0x040054f6] 	      2151	move.c	FUNCTION_47	IF_4
0x40054f6	            0x85c9	                           test ecx, ecx	      2151	move.c	FUNCTION_47	IF_4
0x40054f8	     0xf8503feffff	                           jne 0x4005301	      2151	move.c	FUNCTION_47	IF_4
0x40054fe	    0x8bb2a0000000	            mov esi, dword [rdx + 0xa0] 	      2156	move.c	FUNCTION_47	IF_4
0x4005504	          0x8d4eff	                      lea ecx, [rsi - 1]	      2156	move.c	FUNCTION_47	IF_4
0x4005507	            0x89ce	                            mov esi, ecx	      2156	move.c	FUNCTION_47	IF_4
0x4005509	          0xc1ee1f	                           shr esi, 0x1f	      2156	move.c	FUNCTION_47	IF_4
0x400550c	             0x1f1	                            add ecx, esi	      2156	move.c	FUNCTION_47	IF_4
0x400550e	            0xd1f9	                              sar ecx, 1	      2156	move.c	FUNCTION_47	IF_4
0x4005510	            0x39cd	                            cmp ebp, ecx	      2156	move.c	FUNCTION_47	IF_4
0x4005512	           0xf4fe9	                          cmovg ebp, ecx	      2156	move.c	FUNCTION_47	IF_4
0x4005515	          0x4531f6	                          xor r14d, r14d	      2155	move.c	FUNCTION_47	IF_4
0x4005518	      0xe9e4fdffff	                           jmp 0x4005301	      2155	move.c	FUNCTION_47	IF_4
0x400551d	           0xf1f00	                         nop dword [rax]	      2155	move.c	FUNCTION_47	IF_4
0x4005520	    0x8b82a0000000	            mov eax, dword [rdx + 0xa0] 	      2144	move.c	FUNCTION_47	IF_2
0x4005526	          0x4189c6	                           mov r14d, eax	      2144	move.c	FUNCTION_47	IF_2
0x4005529	        0x41c1ee1f	                          shr r14d, 0x1f	      2144	move.c	FUNCTION_47	IF_2
0x400552d	          0x4101c6	                           add r14d, eax	      2144	move.c	FUNCTION_47	IF_2
0x4005530	          0x41d1fe	                             sar r14d, 1	      2144	move.c	FUNCTION_47	IF_2
0x4005533	          0x4439f5	                           cmp ebp, r14d	      2144	move.c	FUNCTION_47	IF_2
0x4005536	        0x440f4ef5	                        cmovle r14d, ebp	      2144	move.c	FUNCTION_47	IF_2
0x400553a	            0x31ed	                            xor ebp, ebp	      2143	move.c	FUNCTION_47	IF_2
0x400553c	      0xe995fdffff	                           jmp 0x40052d6	      2143	move.c	FUNCTION_47	IF_2
0x4005541	     0xf1f80000000	                         nop dword [rax]	      2143	move.c	FUNCTION_47	IF_2
0x4005548	        0x48894238	             mov qword [rdx + 0x38], rax	      2218	move.c	FUNCTION_47	ELSE_3	IF_13
0x400554c	    0x8b82b4000000	            mov eax, dword [rdx + 0xb4] 	      2218	move.c	FUNCTION_47	ELSE_3	IF_13
0x4005552	      0xe933ffffff	                           jmp 0x400548a	      2218	move.c	FUNCTION_47	ELSE_3	IF_13
0x4005557	    0x660f1f840000	                    nop word [rax + rax]	      2218	move.c	FUNCTION_47	ELSE_3	IF_13
0x4005560	          0x4889d7	                            mov rdi, rdx	      2169	move.c	FUNCTION_47	IF_6	CALL_2
0x4005563	      0xe800000000	                          call 0x4005568	      2169	move.c	FUNCTION_47	IF_6	CALL_2
0x4005568	            0x85c0	                           test eax, eax	      2169	move.c	FUNCTION_47	IF_6	CALL_2
0x400556a	     0xf8422ffffff	                            je 0x4005492	      2169	move.c	FUNCTION_47	IF_6	CALL_2
0x4005570	    0x488b15000000	            mov rdx, qword [0x04005577] 	      2169	move.c	FUNCTION_47	IF_6	CALL_2
0x4005577	        0x488b7a78	            mov rdi, qword [rdx + 0x78] 	      2169	move.c	FUNCTION_47	IF_6	CALL_2
0x400557b	    0x488b82e80000	            mov rax, qword [rdx + 0xe8] 	      2169	move.c	FUNCTION_47	IF_6	CALL_2
0x4005582	      0xe99bfdffff	                           jmp 0x4005322	      2169	move.c	FUNCTION_47	IF_6	CALL_2
0x4005587	          0x4939c5	                            cmp r13, rax	      2227	move.c	FUNCTION_47	ELSE_4	IF_15
0x400558a	            0x7e2b	                           jle 0x40055b7	      2227	move.c	FUNCTION_47	ELSE_4	IF_15
0x400558c	    0x488b0d000000	            mov rcx, qword [0x04005593] 	      2227	move.c	FUNCTION_47	ELSE_4	IF_15
0x4005593	          0x488b31	                    mov rsi, qword [rcx]	      2227	move.c	FUNCTION_47	ELSE_4	IF_15
0x4005596	    0x4839b2e80000	            cmp qword [rdx + 0xe8], rsi 	      2227	move.c	FUNCTION_47	ELSE_4	IF_15
0x400559d	            0x7f18	                            jg 0x40055b7	      2227	move.c	FUNCTION_47	ELSE_4	IF_15
0x400559f	        0x48894238	             mov qword [rdx + 0x38], rax	      2229	move.c	FUNCTION_47	ELSE_4	IF_15
0x40055a3	    0x8b82b4000000	            mov eax, dword [rdx + 0xb4] 	      2230	move.c	FUNCTION_47	ELSE_4	IF_15
0x40055a9	          0x83e0e4	                     and eax, 0xffffffe4	      2230	move.c	FUNCTION_47	ELSE_4	IF_15
0x40055ac	    0x8982b4000000	             mov dword [rdx + 0xb4], eax	      2230	move.c	FUNCTION_47	ELSE_4	IF_15
0x40055b2	      0xe9d3feffff	                           jmp 0x400548a	      2230	move.c	FUNCTION_47	ELSE_4	IF_15
0x40055b7	    0x8b82b4000000	            mov eax, dword [rdx + 0xb4] 	      2230	move.c	FUNCTION_47	ELSE_4	IF_15
0x40055bd	      0xe9c8feffff	                           jmp 0x400548a	      2230	move.c	FUNCTION_47	ELSE_4	IF_15
0x40055c2	      0xe800000000	                          call 0x40055c7	      2235	move.c	FUNCTION_47
onepage	SWITCH,0:WHILE,1:ELSE,9:functions,0:FOR,1:CALL,30:IF,21:DO,0	509
0x40055d0	            0x4156	                                push r14	      2246	move.c	FUNCTION_48
0x40055d2	            0x4155	                                push r13	      2246	move.c	FUNCTION_48
0x40055d4	            0x4154	                                push r12	      2246	move.c	FUNCTION_48
0x40055d6	              0x55	                                push rbp	      2246	move.c	FUNCTION_48
0x40055d7	              0x53	                                push rbx	      2246	move.c	FUNCTION_48
0x40055d8	        0x4883ec20	                           sub rsp, 0x20	      2246	move.c	FUNCTION_48
0x40055dc	    0x4c8b2d000000	            mov r13, qword [0x040055e3] 	      2250	move.c	FUNCTION_48
0x40055e3	    0x64488b042528	                mov rax, qword fs:[0x28]	      2246	move.c	FUNCTION_48
0x40055ec	      0x4889442418	             mov qword [rsp + 0x18], rax	      2246	move.c	FUNCTION_48
0x40055f1	            0x31c0	                            xor eax, eax	      2246	move.c	FUNCTION_48
0x40055f3	    0x488b05000000	            mov rax, qword [0x040055fa] 	      2252	move.c	FUNCTION_48	IF_1
0x40055fa	        0x4d8b6578	            mov r12, qword [r13 + 0x78] 	      2250	move.c	FUNCTION_48
0x40055fe	        0x48833801	                      cmp qword [rax], 1	      2252	move.c	FUNCTION_48	IF_1
0x4005602	     0xf843d090000	                            je 0x4005f45	      2252	move.c	FUNCTION_48	IF_1
0x4005608	          0x4885f6	                           test rsi, rsi	      2258	move.c	FUNCTION_48	FOR_1
0x400560b	            0x89fd	                            mov ebp, edi	      2258	move.c	FUNCTION_48	FOR_1
0x400560d	          0x4889f3	                            mov rbx, rsi	      2258	move.c	FUNCTION_48	FOR_1
0x4005610	     0xf8e6c030000	                           jle 0x4005982	      2258	move.c	FUNCTION_48	FOR_1
0x4005616	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2258	move.c	FUNCTION_48	FOR_1
0x4005620	    0x41f685b40000	           test byte [r13 + 0xb4], 0x20 	       590	move.c	FUNCTION_16	IF_1
0x4005628	     0xf845a010000	                            je 0x4005788	       590	move.c	FUNCTION_16	IF_1
0x400562e	          0x83fd01	                              cmp ebp, 1	      2267	move.c	FUNCTION_48	FOR_1	IF_2
0x4005631	     0xf8469010000	                            je 0x40057a0	      2267	move.c	FUNCTION_48	FOR_1	IF_2
0x4005637	      0x49837d7801	               cmp qword [r13 + 0x78], 1	      2272	move.c	FUNCTION_48	FOR_1	IF_2
0x400563c	     0xf848e050000	                            je 0x4005bd0	      2272	move.c	FUNCTION_48	FOR_1	IF_2
0x4005642	        0x498b7578	            mov rsi, qword [r13 + 0x78] 	      2330	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_8
0x4005646	    0xc74424080000	                  mov dword [rsp + 8], 0	      2283	move.c	FUNCTION_48	FOR_1
0x400564e	        0x4883fe01	                              cmp rsi, 1	      2330	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_8
0x4005652	     0xf84a8050000	                            je 0x4005c00	      2330	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_8
0x4005658	    0x488b05000000	            mov rax, qword [0x0400565f] 	      2337	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x400565f	    0x483905000000	            cmp qword [0x04005666], rax 	      2337	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x4005666	     0xf844c040000	                            je 0x4005ab8	      2337	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x400566c	        0x488d46ff	                      lea rax, [rsi - 1]	      2355	move.c	FUNCTION_48	FOR_1	ELSE_4
0x4005670	          0x4c89ef	                            mov rdi, r13	      2357	move.c	FUNCTION_48	FOR_1	ELSE_4	CALL_9
0x4005673	        0x48890424	                    mov qword [rsp], rax	      2355	move.c	FUNCTION_48	FOR_1	ELSE_4
0x4005677	      0xe800000000	                          call 0x400567c	      2357	move.c	FUNCTION_48	FOR_1	ELSE_4	CALL_9
0x400567c	    0x488b15000000	            mov rdx, qword [0x04005683] 	      2358	move.c	FUNCTION_48	FOR_1	ELSE_4
0x4005683	      0xbe01000000	                              mov esi, 1	      2360	move.c	FUNCTION_48	FOR_1	ELSE_4	CALL_10
0x4005688	          0x4889e7	                            mov rdi, rsp	      2360	move.c	FUNCTION_48	FOR_1	ELSE_4	CALL_10
0x400568b	    0x2b8284000000	             sub eax, dword [rdx + 0x84]	      2357	move.c	FUNCTION_48	FOR_1	ELSE_4	CALL_9
0x4005691	        0x89442408	                mov dword [rsp + 8], eax	      2357	move.c	FUNCTION_48	FOR_1	ELSE_4	CALL_9
0x4005695	      0xe8e6b2ffff	             call sym.get_scroll_overlap	      2360	move.c	FUNCTION_48	FOR_1	ELSE_4	CALL_10
0x400569a	    0x488b05000000	            mov rax, qword [0x040056a1] 	      2362	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_13
0x40056a1	        0x488b1424	                    mov rdx, qword [rsp]	      2362	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_13
0x40056a5	          0x488b00	                    mov rax, qword [rax]	      2362	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_13
0x40056a8	          0x4839c2	                            cmp rdx, rax	      2362	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_13
0x40056ab	     0xf8c5f030000	                            jl 0x4005a10	      2362	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_13
0x40056b1	        0x48890424	                    mov qword [rsp], rax	      2364	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_13
0x40056b5	    0xc74424080000	                  mov dword [rsp + 8], 0	      2366	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_13
0x40056bd	    0x488b3d000000	            mov rdi, qword [0x040056c4] 	      2373	move.c	FUNCTION_48	FOR_1	ELSE_4
0x40056c4	          0x4531ed	                          xor r13d, r13d	      2377	move.c	FUNCTION_48	FOR_1	ELSE_4
0x40056c7	        0x48894738	             mov qword [rdi + 0x38], rax	      2373	move.c	FUNCTION_48	FOR_1	ELSE_4
0x40056cb	            0xeb48	                           jmp 0x4005715	      2378	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1
0x40056cd	           0xf1f00	                         nop dword [rax]	      2378	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1
0x40056d0	        0x488b0424	                    mov rax, qword [rsp]	      1549	move.c	FUNCTION_39	ELSE_1
0x40056d4	    0xc74424080000	                  mov dword [rsp + 8], 0	      1551	move.c	FUNCTION_39	ELSE_1
0x40056dc	        0x4883e801	                              sub rax, 1	      1549	move.c	FUNCTION_39	ELSE_1
0x40056e0	          0x4885c0	                           test rax, rax	      1553	move.c	FUNCTION_39	ELSE_1	IF_2
0x40056e3	        0x48890424	                    mov qword [rsp], rax	      1549	move.c	FUNCTION_39	ELSE_1
0x40056e7	            0x7e67	                           jle 0x4005750	      1553	move.c	FUNCTION_39	ELSE_1	IF_2
0x40056e9	            0x31d2	                            xor edx, edx	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x40056eb	          0x4889e6	                            mov rsi, rsp	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x40056ee	          0x4889c7	                            mov rdi, rax	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x40056f1	      0xe800000000	                          call 0x40056f6	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x40056f6	            0x85c0	                           test eax, eax	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x40056f8	            0x7466	                            je 0x4005760	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x40056fa	    0xc744240c0100	                mov dword [rsp + 0xc], 1	      1559	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3
0x4005702	      0xba01000000	                              mov edx, 1	      1613	move.c	FUNCTION_41	IF_1
0x4005707	        0x488b0424	                    mov rax, qword [rsp]	      1613	move.c	FUNCTION_41	IF_1
0x400570b	          0x4901d5	                            add r13, rdx	      2384	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	ELSE_7
0x400570e	    0x488b3d000000	            mov rdi, qword [0x04005715] 	      2384	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	ELSE_7
0x4005715	    0x486397a00000	         movsxd rdx, dword [rdi + 0xa0] 	      2378	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1
0x400571c	          0x4939d5	                            cmp r13, rdx	      2378	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1
0x400571f	     0xf8ffb000000	                            jg 0x4005820	      2378	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1
0x4005725	          0x4885c0	                           test rax, rax	      2378	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1
0x4005728	     0xf8e62040000	                           jle 0x4005b90	      2378	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1
0x400572e	      0x448b742408	               mov r14d, dword [rsp + 8]	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x4005733	          0x4889c6	                            mov rsi, rax	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x4005736	      0xe800000000	                          call 0x400573b	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x400573b	          0x4139c6	                           cmp r14d, eax	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x400573e	            0x7d90	                           jge 0x40056d0	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x4005740	      0x8344240801	                  add dword [rsp + 8], 1	      1543	move.c	FUNCTION_39	IF_1
0x4005745	    0xc744240c0100	                mov dword [rsp + 0xc], 1	      1544	move.c	FUNCTION_39	IF_1
0x400574d	            0xebb3	                           jmp 0x4005702	      1544	move.c	FUNCTION_39	IF_1
0x400574f	              0x90	                                     nop	      1544	move.c	FUNCTION_39	IF_1
0x4005750	    0xc744240cffff	      mov dword [rsp + 0xc], 0x7fffffff 	      1554	move.c	FUNCTION_39	ELSE_1	IF_2
0x4005758	    0x41bdffffff7f	                    mov r13d, 0x7fffffff	      2382	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	IF_14
0x400575e	            0xebae	                           jmp 0x400570e	      2382	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	IF_14
0x4005760	        0x488b3c24	                    mov rdi, qword [rsp]	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4005764	      0xe800000000	                          call 0x4005769	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4005769	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      2381	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	IF_14
0x400576e	        0x8944240c	              mov dword [rsp + 0xc], eax	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4005772	          0x4863d0	                         movsxd rdx, eax	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4005775	            0x7590	                           jne 0x4005707	      2381	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	IF_14
0x4005777	        0x488b0424	                    mov rax, qword [rsp]	      2381	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	IF_14
0x400577b	    0x41bdffffff7f	                    mov r13d, 0x7fffffff	      2382	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	IF_14
0x4005781	            0xeb8b	                           jmp 0x400570e	      2382	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	IF_14
0x4005783	       0xf1f440000	                   nop dword [rax + rax]	      2382	move.c	FUNCTION_48	FOR_1	ELSE_4	WHILE_1	IF_14
0x4005788	          0x4c89ef	                            mov rdi, r13	       591	move.c	FUNCTION_16	CALL_1
0x400578b	      0xe850abffff	                   call sym.comp_botline	       591	move.c	FUNCTION_16	CALL_1
0x4005790	          0x83fd01	                              cmp ebp, 1	      2267	move.c	FUNCTION_48	FOR_1	IF_2
0x4005793	    0x4c8b2d000000	            mov r13, qword [0x0400579a] 	      2267	move.c	FUNCTION_48	FOR_1	IF_2
0x400579a	     0xf8597feffff	                           jne 0x4005637	      2267	move.c	FUNCTION_48	FOR_1	IF_2
0x40057a0	    0x488b05000000	            mov rax, qword [0x040057a7] 	      2268	move.c	FUNCTION_48	FOR_1	IF_2
0x40057a7	        0x498b5578	            mov rdx, qword [r13 + 0x78] 	      2268	move.c	FUNCTION_48	FOR_1	IF_2
0x40057ab	          0x488b00	                    mov rax, qword [rax]	      2268	move.c	FUNCTION_48	FOR_1	IF_2
0x40057ae	          0x4889c1	                            mov rcx, rax	      2269	move.c	FUNCTION_48	FOR_1	IF_2
0x40057b1	    0x482b0d000000	             sub rcx, qword [0x040057b8]	      2269	move.c	FUNCTION_48	FOR_1	IF_2
0x40057b8	          0x4839ca	                            cmp rdx, rcx	      2269	move.c	FUNCTION_48	FOR_1	IF_2
0x40057bb	     0xf8c07020000	                            jl 0x40059c8	      2269	move.c	FUNCTION_48	FOR_1	IF_2
0x40057c1	    0x493b85e80000	            cmp rax, qword [r13 + 0xe8] 	      2269	move.c	FUNCTION_48	FOR_1	IF_2
0x40057c8	     0xf8dfa010000	                           jge 0x40059c8	      2269	move.c	FUNCTION_48	FOR_1	IF_2
0x40057ce	      0xe800000000	                          call 0x40057d3	      2277	move.c	FUNCTION_48	FOR_1	IF_2	CALL_4
0x40057d3	      0xe800000000	                          call 0x40057d8	      2452	move.c	FUNCTION_48	CALL_23
0x40057d8	      0xe800000000	                          call 0x40057dd	      2454	move.c	FUNCTION_48	CALL_24
0x40057dd	      0xe800000000	                          call 0x40057e2	      2455	move.c	FUNCTION_48	CALL_25
0x40057e2	    0x488b05000000	            mov rax, qword [0x040057e9] 	      2458	move.c	FUNCTION_48
0x40057e9	            0x31db	                            xor ebx, ebx	      2278	move.c	FUNCTION_48	FOR_1	IF_2
0x40057eb	    0x83a0b4000000	      and dword [rax + 0xb4], 0xfffffff8	      2458	move.c	FUNCTION_48
0x40057f2	      0xbf0a000000	                            mov edi, 0xa	      2478	move.c	FUNCTION_48	CALL_30
0x40057f7	      0xe800000000	                          call 0x40057fc	      2478	move.c	FUNCTION_48	CALL_30
0x40057fc	            0x89d8	                            mov eax, ebx	      2479	move.c	FUNCTION_48
0x40057fe	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      2480	move.c	FUNCTION_48
0x4005803	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2480	move.c	FUNCTION_48
0x400580c	     0xf854d070000	                           jne 0x4005f5f	      2480	move.c	FUNCTION_48
0x4005812	        0x4883c420	                           add rsp, 0x20	      2480	move.c	FUNCTION_48
0x4005816	              0x5b	                                 pop rbx	      2480	move.c	FUNCTION_48
0x4005817	              0x5d	                                 pop rbp	      2480	move.c	FUNCTION_48
0x4005818	            0x415c	                                 pop r12	      2480	move.c	FUNCTION_48
0x400581a	            0x415d	                                 pop r13	      2480	move.c	FUNCTION_48
0x400581c	            0x415e	                                 pop r14	      2480	move.c	FUNCTION_48
0x400581e	              0xc3	                                     ret	      2480	move.c	FUNCTION_48
0x400581f	              0x90	                                     nop	      2480	move.c	FUNCTION_48
0x4005820	          0x4885c0	                           test rax, rax	      2386	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_7	IF_15
0x4005823	     0xf8e67030000	                           jle 0x4005b90	      2386	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_7	IF_15
0x4005829	      0x448b6c2408	               mov r13d, dword [rsp + 8]	      1628	move.c	FUNCTION_42	IF_1
0x400582e	          0x4585ed	                         test r13d, r13d	      1628	move.c	FUNCTION_42	IF_1
0x4005831	            0x7e28	                           jle 0x400585b	      1628	move.c	FUNCTION_42	IF_1
0x4005833	          0x4889c6	                            mov rsi, rax	      1630	move.c	FUNCTION_42	IF_1	CALL_1
0x4005836	      0xe800000000	                          call 0x400583b	      1630	move.c	FUNCTION_42	IF_1	CALL_1
0x400583b	        0x2b442408	                sub eax, dword [rsp + 8]	      1630	move.c	FUNCTION_42	IF_1	CALL_1
0x400583f	    0x488b3d000000	            mov rdi, qword [0x04005846] 	      1630	move.c	FUNCTION_42	IF_1	CALL_1
0x4005846	        0x448d6801	                     lea r13d, [rax + 1]	      1630	move.c	FUNCTION_42	IF_1	CALL_1
0x400584a	        0x488b0424	                    mov rax, qword [rsp]	      1631	move.c	FUNCTION_42	IF_1
0x400584e	      0x44896c2408	               mov dword [rsp + 8], r13d	      1630	move.c	FUNCTION_42	IF_1	CALL_1
0x4005853	        0x4883e801	                              sub rax, 1	      1631	move.c	FUNCTION_42	IF_1
0x4005857	        0x48890424	                    mov qword [rsp], rax	      1631	move.c	FUNCTION_42	IF_1
0x400585b	        0x488d7001	                      lea rsi, [rax + 1]	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x400585f	      0xe800000000	                          call 0x4005864	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x4005864	          0x4439e8	                           cmp eax, r13d	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x4005867	     0xf8ffb020000	                            jg 0x4005b68	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x400586d	        0x488b0424	                    mov rax, qword [rsp]	      1585	move.c	FUNCTION_40	ELSE_1
0x4005871	    0xc74424080000	                  mov dword [rsp + 8], 0	      1587	move.c	FUNCTION_40	ELSE_1
0x4005879	        0x488d7801	                      lea rdi, [rax + 1]	      1585	move.c	FUNCTION_40	ELSE_1
0x400587d	    0x488b05000000	            mov rax, qword [0x04005884] 	      1589	move.c	FUNCTION_40	ELSE_1	IF_2
0x4005884	        0x48893c24	                    mov qword [rsp], rdi	      1585	move.c	FUNCTION_40	ELSE_1
0x4005888	          0x483b38	                    cmp rdi, qword [rax]	      1589	move.c	FUNCTION_40	ELSE_1	IF_2
0x400588b	     0xf8ecf030000	                           jle 0x4005c60	      1589	move.c	FUNCTION_40	ELSE_1	IF_2
0x4005891	    0xc744240cffff	      mov dword [rsp + 0xc], 0x7fffffff 	      1590	move.c	FUNCTION_40	ELSE_1	IF_2
0x4005899	          0x4531ed	                          xor r13d, r13d	      1590	move.c	FUNCTION_40	ELSE_1	IF_2
0x400589c	        0x488d7701	                      lea rsi, [rdi + 1]	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x40058a0	    0x488b3d000000	            mov rdi, qword [0x040058a7] 	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x40058a7	      0xe800000000	                          call 0x40058ac	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x40058ac	          0x4439e8	                           cmp eax, r13d	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x40058af	     0xf8f6b020000	                            jg 0x4005b20	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x40058b5	        0x488b0424	                    mov rax, qword [rsp]	      1585	move.c	FUNCTION_40	ELSE_1
0x40058b9	    0xc74424080000	                  mov dword [rsp + 8], 0	      1587	move.c	FUNCTION_40	ELSE_1
0x40058c1	        0x488d7801	                      lea rdi, [rax + 1]	      1585	move.c	FUNCTION_40	ELSE_1
0x40058c5	    0x488b05000000	            mov rax, qword [0x040058cc] 	      1589	move.c	FUNCTION_40	ELSE_1	IF_2
0x40058cc	        0x48893c24	                    mov qword [rsp], rdi	      1585	move.c	FUNCTION_40	ELSE_1
0x40058d0	          0x483b38	                    cmp rdi, qword [rax]	      1589	move.c	FUNCTION_40	ELSE_1	IF_2
0x40058d3	     0xf8e5f030000	                           jle 0x4005c38	      1589	move.c	FUNCTION_40	ELSE_1	IF_2
0x40058d9	    0xc744240cffff	      mov dword [rsp + 0xc], 0x7fffffff 	      1590	move.c	FUNCTION_40	ELSE_1	IF_2
0x40058e1	            0x31d2	                            xor edx, edx	      2407	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_18
0x40058e3	          0x4889e6	                            mov rsi, rsp	      2407	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_18
0x40058e6	      0xe800000000	                          call 0x40058eb	      2407	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	CALL_18
0x40058eb	    0x4c8b2d000000	            mov r13, qword [0x040058f2] 	      2412	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x40058f2	        0x488b0424	                    mov rax, qword [rsp]	      2412	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x40058f6	        0x498b7578	            mov rsi, qword [r13 + 0x78] 	      2412	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x40058fa	          0x4839f0	                            cmp rax, rsi	      2412	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x40058fd	     0xf8c4d010000	                            jl 0x4005a50	      2412	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4005903	     0xf8f1d040000	                            jg 0x4005d26	      2414	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4005909	        0x8b542408	                mov edx, dword [rsp + 8]	      2415	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x400590d	    0x458bb5840000	           mov r14d, dword [r13 + 0x84] 	      2415	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4005914	          0x4439f2	                           cmp edx, r14d	      2415	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4005917	     0xf8c37010000	                            jl 0x4005a54	      2415	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x400591d	          0x4c89ef	                            mov rdi, r13	      2423	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_17	CALL_19
0x4005920	      0x4489742408	               mov dword [rsp + 8], r14d	      2422	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4005925	      0xe800000000	                          call 0x400592a	      2423	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_17	CALL_19
0x400592a	          0x4439f0	                           cmp eax, r14d	      2423	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_17	CALL_19
0x400592d	     0xf8fed040000	                            jg 0x4005e20	      2423	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_17	CALL_19
0x4005933	    0x4c8b2d000000	            mov r13, qword [0x0400593a] 	      2423	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_17	CALL_19
0x400593a	    0x418b85840000	            mov eax, dword [r13 + 0x84] 	      2423	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_17	CALL_19
0x4005941	        0x39442408	                cmp dword [rsp + 8], eax	      2426	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_18
0x4005945	     0xf8413050000	                            je 0x4005e5e	      2426	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_18
0x400594b	          0x4c89ef	                            mov rdi, r13	      2434	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	CALL_21
0x400594e	      0xe88da9ffff	                   call sym.comp_botline	      2434	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	CALL_21
0x4005953	    0x4c8b2d000000	            mov r13, qword [0x0400595a] 	      2435	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x400595a	    0x498b85e80000	            mov rax, qword [r13 + 0xe8] 	      2435	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4005961	    0x4183a5b40000	      and dword [r13 + 0xb4], 0xffffffe4	      2436	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4005969	        0x4883e801	                              sub rax, 1	      2435	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x400596d	        0x49894538	             mov qword [r13 + 0x38], rax	      2435	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4005971	     0xf1f80000000	                         nop dword [rax]	      2435	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16
0x4005978	        0x4883eb01	                              sub rbx, 1	      2258	move.c	FUNCTION_48	FOR_1
0x400597c	     0xf859efcffff	                           jne 0x4005620	      2258	move.c	FUNCTION_48	FOR_1
0x4005982	      0xe800000000	                          call 0x4005987	      2452	move.c	FUNCTION_48	CALL_23
0x4005987	      0xe800000000	                          call 0x400598c	      2454	move.c	FUNCTION_48	CALL_24
0x400598c	      0xe800000000	                          call 0x4005991	      2455	move.c	FUNCTION_48	CALL_25
0x4005991	      0xbf06000000	                              mov edi, 6	      2457	move.c	FUNCTION_48	CALL_26
0x4005996	      0xe800000000	                          call 0x400599b	      2457	move.c	FUNCTION_48	CALL_26
0x400599b	    0x488b05000000	            mov rax, qword [0x040059a2] 	      2458	move.c	FUNCTION_48
0x40059a2	    0x83a0b4000000	      and dword [rax + 0xb4], 0xfffffff8	      2458	move.c	FUNCTION_48
0x40059a9	          0x83fd01	                              cmp ebp, 1	      2465	move.c	FUNCTION_48	IF_20	CALL_27
0x40059ac	            0x750d	                           jne 0x40059bb	      2465	move.c	FUNCTION_48	IF_20	CALL_27
0x40059ae	      0xe88da6ffff	               call sym.check_top_offset	      2465	move.c	FUNCTION_48	IF_20	CALL_27
0x40059b3	            0x85c0	                           test eax, eax	      2465	move.c	FUNCTION_48	IF_20	CALL_27
0x40059b5	     0xf85f9040000	                           jne 0x4005eb4	      2465	move.c	FUNCTION_48	IF_20	CALL_27
0x40059bb	      0xbb01000000	                              mov ebx, 1	      2248	move.c	FUNCTION_48
0x40059c0	      0xe92dfeffff	                           jmp 0x40057f2	      2248	move.c	FUNCTION_48
0x40059c5	           0xf1f00	                         nop dword [rax]	      2248	move.c	FUNCTION_48
0x40059c8	    0x488b0d000000	            mov rcx, qword [0x040059cf] 	      2287	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x40059cf	    0x48390d000000	            cmp qword [0x040059d6], rcx 	      2287	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x40059d6	    0xc74424080000	                  mov dword [rsp + 8], 0	      2283	move.c	FUNCTION_48	FOR_1
0x40059de	     0xf84af030000	                            je 0x4005d93	      2287	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x40059e4	    0x498bb5e80000	            mov rsi, qword [r13 + 0xe8] 	      2298	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x40059eb	          0x4839f0	                            cmp rax, rsi	      2298	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x40059ee	     0xf8d9c020000	                           jge 0x4005c90	      2298	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x40059f4	        0x49894578	             mov qword [r13 + 0x78], rax	      2301	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x40059f8	    0x41c785840000	               mov dword [r13 + 0x84], 0	      2303	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x4005a03	    0x4183a5b40000	      and dword [r13 + 0xb4], 0xffffffee	      2305	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x4005a0b	      0xe968ffffff	                           jmp 0x4005978	      2305	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_2	IF_7
0x4005a10	          0x4889d0	                            mov rax, rdx	      1613	move.c	FUNCTION_41	IF_1
0x4005a13	        0x8b542408	                mov edx, dword [rsp + 8]	      1613	move.c	FUNCTION_41	IF_1
0x4005a17	            0x85d2	                           test edx, edx	      1613	move.c	FUNCTION_41	IF_1
0x4005a19	     0xf8e9efcffff	                           jle 0x40056bd	      1613	move.c	FUNCTION_41	IF_1
0x4005a1f	    0x488b3d000000	            mov rdi, qword [0x04005a26] 	      1616	move.c	FUNCTION_41	IF_1	CALL_1
0x4005a26	        0x488d7001	                      lea rsi, [rax + 1]	      1615	move.c	FUNCTION_41	IF_1
0x4005a2a	        0x48893424	                    mov qword [rsp], rsi	      1615	move.c	FUNCTION_41	IF_1
0x4005a2e	      0xe800000000	                          call 0x4005a33	      1616	move.c	FUNCTION_41	IF_1	CALL_1
0x4005a33	        0x2b442408	                sub eax, dword [rsp + 8]	      1616	move.c	FUNCTION_41	IF_1	CALL_1
0x4005a37	          0x83c001	                              add eax, 1	      1616	move.c	FUNCTION_41	IF_1	CALL_1
0x4005a3a	        0x89442408	                mov dword [rsp + 8], eax	      1616	move.c	FUNCTION_41	IF_1	CALL_1
0x4005a3e	        0x488b0424	                    mov rax, qword [rsp]	      1616	move.c	FUNCTION_41	IF_1	CALL_1
0x4005a42	      0xe976fcffff	                           jmp 0x40056bd	      1616	move.c	FUNCTION_41	IF_1	CALL_1
0x4005a47	    0x660f1f840000	                    nop word [rax + rax]	      1616	move.c	FUNCTION_41	IF_1	CALL_1
0x4005a50	        0x8b542408	                mov edx, dword [rsp + 8]	      1616	move.c	FUNCTION_41	IF_1	CALL_1
0x4005a54	            0x85d2	                           test edx, edx	      1368	move.c	FUNCTION_35	IF_1
0x4005a56	        0x49894578	             mov qword [r13 + 0x78], rax	      2441	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9
0x4005a5a	    0x418995840000	             mov dword [r13 + 0x84], edx	      2443	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9
0x4005a61	            0x7e43	                           jle 0x4005aa6	      1368	move.c	FUNCTION_35	IF_1
0x4005a63	      0xba01000000	                              mov edx, 1	      1370	move.c	FUNCTION_35	IF_1	CALL_1
0x4005a68	          0x4889c6	                            mov rsi, rax	      1370	move.c	FUNCTION_35	IF_1	CALL_1
0x4005a6b	          0x4c89ef	                            mov rdi, r13	      1370	move.c	FUNCTION_35	IF_1	CALL_1
0x4005a6e	      0xe800000000	                          call 0x4005a73	      1370	move.c	FUNCTION_35	IF_1	CALL_1
0x4005a73	    0x418b8d840000	            mov ecx, dword [r13 + 0x84] 	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x4005a7a	    0x418b95a00000	            mov edx, dword [r13 + 0xa0] 	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x4005a81	             0x1c1	                            add ecx, eax	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x4005a83	            0x39d1	                            cmp ecx, edx	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x4005a85	            0x7e18	                           jle 0x4005a9f	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x4005a87	            0x29c2	                            sub edx, eax	      1380	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1
0x4005a89	            0x85d2	                           test edx, edx	      1381	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x4005a8b	    0x418995840000	             mov dword [r13 + 0x84], edx	      1380	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1
0x4005a92	            0x790b	                           jns 0x4005a9f	      1381	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x4005a94	    0x41c785840000	               mov dword [r13 + 0x84], 0	      1382	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x4005a9f	    0x4c8b2d000000	            mov r13, qword [0x04005aa6] 	      1382	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x4005aa6	    0x4183a5b40000	      and dword [r13 + 0xb4], 0xffffffce	      2446	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9
0x4005aae	      0xe9c5feffff	                           jmp 0x4005978	      2446	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9
0x4005ab3	       0xf1f440000	                   nop dword [rax + rax]	      2446	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	ELSE_9
0x4005ab8	    0x488b05000000	            mov rax, qword [0x04005abf] 	      2337	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x4005abf	          0x4885c0	                           test rax, rax	      2337	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x4005ac2	     0xf8ea4fbffff	                           jle 0x400566c	      2337	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x4005ac8	    0x488b0d000000	            mov rcx, qword [0x04005acf] 	      2337	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x4005acf	        0x488d51ff	                      lea rdx, [rcx - 1]	      2337	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x4005ad3	          0x4839d0	                            cmp rax, rdx	      2337	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x4005ad6	     0xf8d90fbffff	                           jge 0x400566c	      2337	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x4005adc	        0x4883f802	                              cmp rax, 2	      2340	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_10
0x4005ae0	     0xf8e8e020000	                           jle 0x4005d74	      2340	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_10
0x4005ae6	        0x488d50fe	                      lea rdx, [rax - 2]	      2343	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	ELSE_5
0x4005aea	          0x4829d6	                            sub rsi, rdx	      2343	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	ELSE_5
0x4005aed	          0x4885f6	                           test rsi, rsi	      2344	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_11
0x4005af0	     0xf8e8b020000	                           jle 0x4005d81	      2344	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_11
0x4005af6	        0x49897578	             mov qword [r13 + 0x78], rsi	      2344	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_11
0x4005afa	    0x488b15000000	            mov rdx, qword [0x04005b01] 	      2347	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_12
0x4005b01	      0x488d4430ff	                lea rax, [rax + rsi - 1]	      2346	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x4005b06	        0x49894538	             mov qword [r13 + 0x38], rax	      2346	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9
0x4005b0a	          0x488b12	                    mov rdx, qword [rdx]	      2347	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_12
0x4005b0d	          0x4839d0	                            cmp rax, rdx	      2347	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_12
0x4005b10	     0xf8e62feffff	                           jle 0x4005978	      2347	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_12
0x4005b16	        0x49895538	             mov qword [r13 + 0x38], rdx	      2348	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_12
0x4005b1a	      0xe959feffff	                           jmp 0x4005978	      2348	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_12
0x4005b1f	              0x90	                                     nop	      2348	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_12
0x4005b20	        0x8b442408	                mov eax, dword [rsp + 8]	      1579	move.c	FUNCTION_40	IF_1
0x4005b24	    0xc744240c0100	                mov dword [rsp + 0xc], 1	      1580	move.c	FUNCTION_40	IF_1
0x4005b2c	          0x83c001	                              add eax, 1	      1579	move.c	FUNCTION_40	IF_1
0x4005b2f	        0x89442408	                mov dword [rsp + 8], eax	      1579	move.c	FUNCTION_40	IF_1
0x4005b33	            0x85c0	                           test eax, eax	      1613	move.c	FUNCTION_41	IF_1
0x4005b35	            0x7e23	                           jle 0x4005b5a	      1613	move.c	FUNCTION_41	IF_1
0x4005b37	        0x488b0424	                    mov rax, qword [rsp]	      1615	move.c	FUNCTION_41	IF_1
0x4005b3b	    0x488b3d000000	            mov rdi, qword [0x04005b42] 	      1616	move.c	FUNCTION_41	IF_1	CALL_1
0x4005b42	        0x488d7001	                      lea rsi, [rax + 1]	      1615	move.c	FUNCTION_41	IF_1
0x4005b46	        0x48893424	                    mov qword [rsp], rsi	      1615	move.c	FUNCTION_41	IF_1
0x4005b4a	      0xe800000000	                          call 0x4005b4f	      1616	move.c	FUNCTION_41	IF_1	CALL_1
0x4005b4f	        0x2b442408	                sub eax, dword [rsp + 8]	      1616	move.c	FUNCTION_41	IF_1	CALL_1
0x4005b53	          0x83c001	                              add eax, 1	      1616	move.c	FUNCTION_41	IF_1	CALL_1
0x4005b56	        0x89442408	                mov dword [rsp + 8], eax	      1616	move.c	FUNCTION_41	IF_1	CALL_1
0x4005b5a	        0x488b3c24	                    mov rdi, qword [rsp]	      1616	move.c	FUNCTION_41	IF_1	CALL_1
0x4005b5e	      0xe97efdffff	                           jmp 0x40058e1	      1616	move.c	FUNCTION_41	IF_1	CALL_1
0x4005b63	       0xf1f440000	                   nop dword [rax + rax]	      1616	move.c	FUNCTION_41	IF_1	CALL_1
0x4005b68	        0x8b442408	                mov eax, dword [rsp + 8]	      1579	move.c	FUNCTION_40	IF_1
0x4005b6c	    0xc744240c0100	                mov dword [rsp + 0xc], 1	      1580	move.c	FUNCTION_40	IF_1
0x4005b74	        0x488b3c24	                    mov rdi, qword [rsp]	      1580	move.c	FUNCTION_40	IF_1
0x4005b78	        0x448d6801	                     lea r13d, [rax + 1]	      1579	move.c	FUNCTION_40	IF_1
0x4005b7c	      0x44896c2408	               mov dword [rsp + 8], r13d	      1579	move.c	FUNCTION_40	IF_1
0x4005b81	      0xe916fdffff	                           jmp 0x400589c	      1579	move.c	FUNCTION_40	IF_1
0x4005b86	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1579	move.c	FUNCTION_40	IF_1
0x4005b90	    0x48c747780100	               mov qword [rdi + 0x78], 1	      2388	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_7	IF_15
0x4005b98	      0xbf01000000	                              mov edi, 1	      1397	move.c	FUNCTION_36	CALL_1
0x4005b9d	      0xe800000000	                          call 0x4005ba2	      1397	move.c	FUNCTION_36	CALL_1
0x4005ba2	    0x4c8b2d000000	            mov r13, qword [0x04005ba9] 	      1398	move.c	FUNCTION_36	IF_1
0x4005ba9	          0x4189c6	                           mov r14d, eax	      1397	move.c	FUNCTION_36	CALL_1
0x4005bac	    0x413b85a00000	            cmp eax, dword [r13 + 0xa0] 	      1398	move.c	FUNCTION_36	IF_1
0x4005bb3	     0xf8c79010000	                            jl 0x4005d32	      1398	move.c	FUNCTION_36	IF_1
0x4005bb9	    0x41c785840000	               mov dword [r13 + 0x84], 0	      1399	move.c	FUNCTION_36	IF_1
0x4005bc4	      0xe9ddfeffff	                           jmp 0x4005aa6	      1399	move.c	FUNCTION_36	IF_1
0x4005bc9	     0xf1f80000000	                         nop dword [rax]	      1399	move.c	FUNCTION_36	IF_1
0x4005bd0	    0x458bb5840000	           mov r14d, dword [r13 + 0x84] 	      2272	move.c	FUNCTION_48	FOR_1	IF_2
0x4005bd7	      0xbe01000000	                              mov esi, 1	      2273	move.c	FUNCTION_48	FOR_1	IF_2	CALL_3
0x4005bdc	          0x4c89ef	                            mov rdi, r13	      2273	move.c	FUNCTION_48	FOR_1	IF_2	CALL_3
0x4005bdf	      0xe800000000	                          call 0x4005be4	      2273	move.c	FUNCTION_48	FOR_1	IF_2	CALL_3
0x4005be4	          0x4139c6	                           cmp r14d, eax	      2267	move.c	FUNCTION_48	FOR_1	IF_2
0x4005be7	     0xf84e1fbffff	                            je 0x40057ce	      2267	move.c	FUNCTION_48	FOR_1	IF_2
0x4005bed	    0x4c8b2d000000	            mov r13, qword [0x04005bf4] 	      2267	move.c	FUNCTION_48	FOR_1	IF_2
0x4005bf4	      0xe949faffff	                           jmp 0x4005642	      2267	move.c	FUNCTION_48	FOR_1	IF_2
0x4005bf9	     0xf1f80000000	                         nop dword [rax]	      2267	move.c	FUNCTION_48	FOR_1	IF_2
0x4005c00	      0xbf01000000	                              mov edi, 1	      1397	move.c	FUNCTION_36	CALL_1
0x4005c05	      0xe800000000	                          call 0x4005c0a	      1397	move.c	FUNCTION_36	CALL_1
0x4005c0a	    0x4c8b2d000000	            mov r13, qword [0x04005c11] 	      1398	move.c	FUNCTION_36	IF_1
0x4005c11	          0x4189c6	                           mov r14d, eax	      1397	move.c	FUNCTION_36	CALL_1
0x4005c14	    0x413b85a00000	            cmp eax, dword [r13 + 0xa0] 	      1398	move.c	FUNCTION_36	IF_1
0x4005c1b	     0xf8cbd010000	                            jl 0x4005dde	      1398	move.c	FUNCTION_36	IF_1
0x4005c21	    0x41c785840000	               mov dword [r13 + 0x84], 0	      1399	move.c	FUNCTION_36	IF_1
0x4005c2c	      0xe947fdffff	                           jmp 0x4005978	      1399	move.c	FUNCTION_36	IF_1
0x4005c31	     0xf1f80000000	                         nop dword [rax]	      1399	move.c	FUNCTION_36	IF_1
0x4005c38	            0x31f6	                            xor esi, esi	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4005c3a	          0x4889e2	                            mov rdx, rsp	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4005c3d	      0xe800000000	                          call 0x4005c42	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4005c42	            0x85c0	                           test eax, eax	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4005c44	     0xf8429020000	                            je 0x4005e73	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4005c4a	    0xc744240c0100	                mov dword [rsp + 0xc], 1	      1595	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3
0x4005c52	        0x8b442408	                mov eax, dword [rsp + 8]	      1595	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3
0x4005c56	      0xe9d8feffff	                           jmp 0x4005b33	      1595	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3
0x4005c5b	       0xf1f440000	                   nop dword [rax + rax]	      1595	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3
0x4005c60	            0x31f6	                            xor esi, esi	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4005c62	          0x4889e2	                            mov rdx, rsp	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4005c65	      0xe800000000	                          call 0x4005c6a	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4005c6a	            0x85c0	                           test eax, eax	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4005c6c	     0xf8417020000	                            je 0x4005e89	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4005c72	    0xc744240c0100	                mov dword [rsp + 0xc], 1	      1595	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3
0x4005c7a	      0x448b6c2408	               mov r13d, dword [rsp + 8]	      1595	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3
0x4005c7f	        0x488b3c24	                    mov rdi, qword [rsp]	      1595	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3
0x4005c83	      0xe914fcffff	                           jmp 0x400589c	      1595	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3
0x4005c88	     0xf1f84000000	                   nop dword [rax + rax]	      1595	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3
0x4005c90	          0x4c89ef	                            mov rdi, r13	      2313	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_5
0x4005c93	        0x48893424	                    mov qword [rsp], rsi	      2311	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4005c97	      0xe800000000	                          call 0x4005c9c	      2313	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_5
0x4005c9c	    0x488b15000000	            mov rdx, qword [0x04005ca3] 	      2314	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4005ca3	      0xbeffffffff	                     mov esi, 0xffffffff	      2316	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_6
0x4005ca8	          0x4889e7	                            mov rdi, rsp	      2316	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_6
0x4005cab	    0x2b82f4000000	             sub eax, dword [rdx + 0xf4]	      2313	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_5
0x4005cb1	        0x89442408	                mov dword [rsp + 8], eax	      2313	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_5
0x4005cb5	      0xe8c6acffff	             call sym.get_scroll_overlap	      2316	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3	CALL_6
0x4005cba	        0x8b442408	                mov eax, dword [rsp + 8]	      2319	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4005cbe	    0x4c8b2d000000	            mov r13, qword [0x04005cc5] 	      2317	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4005cc5	        0x488b3424	                    mov rsi, qword [rsp]	      2317	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4005cc9	            0x85c0	                           test eax, eax	      1368	move.c	FUNCTION_35	IF_1
0x4005ccb	    0x418985840000	             mov dword [r13 + 0x84], eax	      2319	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4005cd2	        0x49897578	             mov qword [r13 + 0x78], rsi	      2317	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4005cd6	            0x7e3d	                           jle 0x4005d15	      1368	move.c	FUNCTION_35	IF_1
0x4005cd8	      0xba01000000	                              mov edx, 1	      1370	move.c	FUNCTION_35	IF_1	CALL_1
0x4005cdd	          0x4c89ef	                            mov rdi, r13	      1370	move.c	FUNCTION_35	IF_1	CALL_1
0x4005ce0	      0xe800000000	                          call 0x4005ce5	      1370	move.c	FUNCTION_35	IF_1	CALL_1
0x4005ce5	    0x418b8d840000	            mov ecx, dword [r13 + 0x84] 	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x4005cec	    0x418b95a00000	            mov edx, dword [r13 + 0xa0] 	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x4005cf3	             0x1c1	                            add ecx, eax	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x4005cf5	            0x39d1	                            cmp ecx, edx	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x4005cf7	            0x7e11	                           jle 0x4005d0a	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x4005cf9	            0x29c2	                            sub edx, eax	      1380	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1
0x4005cfb	            0x85d2	                           test edx, edx	      1381	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x4005cfd	    0x418995840000	             mov dword [r13 + 0x84], edx	      1380	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1
0x4005d04	     0xf889a010000	                            js 0x4005ea4	      1381	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x4005d0a	    0x4c8b2d000000	            mov r13, qword [0x04005d11] 	      1381	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x4005d11	        0x498b7578	            mov rsi, qword [r13 + 0x78] 	      1381	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x4005d15	        0x49897538	             mov qword [r13 + 0x38], rsi	      2322	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4005d19	    0x4183a5b40000	      and dword [r13 + 0xb4], 0xffffff84	      2323	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4005d21	      0xe952fcffff	                           jmp 0x4005978	      2323	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4005d26	    0x458bb5840000	           mov r14d, dword [r13 + 0x84] 	      2323	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4005d2d	      0xe9ebfbffff	                           jmp 0x400591d	      2323	move.c	FUNCTION_48	FOR_1	IF_3	ELSE_3
0x4005d32	        0x498b7578	            mov rsi, qword [r13 + 0x78] 	      1402	move.c	FUNCTION_36	ELSE_1	CALL_2
0x4005d36	          0x4c89ef	                            mov rdi, r13	      1402	move.c	FUNCTION_36	ELSE_1	CALL_2
0x4005d39	      0xe800000000	                          call 0x4005d3e	      1402	move.c	FUNCTION_36	ELSE_1	CALL_2
0x4005d3e	    0x418985840000	             mov dword [r13 + 0x84], eax	      1402	move.c	FUNCTION_36	ELSE_1	CALL_2
0x4005d45	    0x4c8b2d000000	            mov r13, qword [0x04005d4c] 	      1403	move.c	FUNCTION_36	ELSE_1	IF_2
0x4005d4c	    0x418b95840000	            mov edx, dword [r13 + 0x84] 	      1403	move.c	FUNCTION_36	ELSE_1	IF_2
0x4005d53	    0x418b85a00000	            mov eax, dword [r13 + 0xa0] 	      1403	move.c	FUNCTION_36	ELSE_1	IF_2
0x4005d5a	          0x4401f2	                           add edx, r14d	      1403	move.c	FUNCTION_36	ELSE_1	IF_2
0x4005d5d	            0x39c2	                            cmp edx, eax	      1403	move.c	FUNCTION_36	ELSE_1	IF_2
0x4005d5f	     0xf8e41fdffff	                           jle 0x4005aa6	      1403	move.c	FUNCTION_36	ELSE_1	IF_2
0x4005d65	          0x4429f0	                           sub eax, r14d	      1404	move.c	FUNCTION_36	ELSE_1	IF_2
0x4005d68	    0x418985840000	             mov dword [r13 + 0x84], eax	      1404	move.c	FUNCTION_36	ELSE_1	IF_2
0x4005d6f	      0xe932fdffff	                           jmp 0x4005aa6	      1404	move.c	FUNCTION_36	ELSE_1	IF_2
0x4005d74	        0x4883ee01	                              sub rsi, 1	      2341	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_10
0x4005d78	          0x4885f6	                           test rsi, rsi	      2344	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_11
0x4005d7b	     0xf8f75fdffff	                            jg 0x4005af6	      2344	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_11
0x4005d81	    0x49c745780100	               mov qword [r13 + 0x78], 1	      2345	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_11
0x4005d89	      0xbe01000000	                              mov esi, 1	      2345	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_11
0x4005d8e	      0xe967fdffff	                           jmp 0x4005afa	      2345	move.c	FUNCTION_48	FOR_1	ELSE_4	IF_9	IF_11
0x4005d93	    0x488b0d000000	            mov rcx, qword [0x04005d9a] 	      2287	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x4005d9a	          0x4885c9	                           test rcx, rcx	      2287	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x4005d9d	     0xf8e41fcffff	                           jle 0x40059e4	      2287	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x4005da3	    0x488b35000000	            mov rsi, qword [0x04005daa] 	      2287	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x4005daa	        0x4883ee01	                              sub rsi, 1	      2287	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x4005dae	          0x4839f1	                            cmp rcx, rsi	      2287	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x4005db1	     0xf8d2dfcffff	                           jge 0x40059e4	      2287	move.c	FUNCTION_48	FOR_1	IF_3	IF_4
0x4005db7	        0x4883f902	                              cmp rcx, 2	      2290	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_5
0x4005dbb	     0xf8f90010000	                            jg 0x4005f51	      2290	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_5
0x4005dc1	        0x4883c201	                              add rdx, 1	      2291	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_5
0x4005dc5	        0x49895578	             mov qword [r13 + 0x78], rdx	      2291	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_5
0x4005dc9	          0x4839d0	                            cmp rax, rdx	      2294	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_6
0x4005dcc	     0xf8d44fdffff	                           jge 0x4005b16	      2294	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_6
0x4005dd2	        0x49894578	             mov qword [r13 + 0x78], rax	      2295	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_6
0x4005dd6	          0x4889c2	                            mov rdx, rax	      2295	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_6
0x4005dd9	      0xe938fdffff	                           jmp 0x4005b16	      2295	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	IF_6
0x4005dde	        0x498b7578	            mov rsi, qword [r13 + 0x78] 	      1402	move.c	FUNCTION_36	ELSE_1	CALL_2
0x4005de2	          0x4c89ef	                            mov rdi, r13	      1402	move.c	FUNCTION_36	ELSE_1	CALL_2
0x4005de5	      0xe800000000	                          call 0x4005dea	      1402	move.c	FUNCTION_36	ELSE_1	CALL_2
0x4005dea	    0x418985840000	             mov dword [r13 + 0x84], eax	      1402	move.c	FUNCTION_36	ELSE_1	CALL_2
0x4005df1	    0x4c8b2d000000	            mov r13, qword [0x04005df8] 	      1403	move.c	FUNCTION_36	ELSE_1	IF_2
0x4005df8	    0x418b95840000	            mov edx, dword [r13 + 0x84] 	      1403	move.c	FUNCTION_36	ELSE_1	IF_2
0x4005dff	    0x418b85a00000	            mov eax, dword [r13 + 0xa0] 	      1403	move.c	FUNCTION_36	ELSE_1	IF_2
0x4005e06	          0x4401f2	                           add edx, r14d	      1403	move.c	FUNCTION_36	ELSE_1	IF_2
0x4005e09	            0x39c2	                            cmp edx, eax	      1403	move.c	FUNCTION_36	ELSE_1	IF_2
0x4005e0b	     0xf8e67fbffff	                           jle 0x4005978	      1403	move.c	FUNCTION_36	ELSE_1	IF_2
0x4005e11	          0x4429f0	                           sub eax, r14d	      1404	move.c	FUNCTION_36	ELSE_1	IF_2
0x4005e14	    0x418985840000	             mov dword [r13 + 0x84], eax	      1404	move.c	FUNCTION_36	ELSE_1	IF_2
0x4005e1b	      0xe958fbffff	                           jmp 0x4005978	      1404	move.c	FUNCTION_36	ELSE_1	IF_2
0x4005e20	    0x488b05000000	            mov rax, qword [0x04005e27] 	      1397	move.c	FUNCTION_36	CALL_1
0x4005e27	        0x488b7878	            mov rdi, qword [rax + 0x78] 	      1397	move.c	FUNCTION_36	CALL_1
0x4005e2b	      0xe800000000	                          call 0x4005e30	      1397	move.c	FUNCTION_36	CALL_1
0x4005e30	    0x4c8b2d000000	            mov r13, qword [0x04005e37] 	      1398	move.c	FUNCTION_36	IF_1
0x4005e37	          0x4189c6	                           mov r14d, eax	      1397	move.c	FUNCTION_36	CALL_1
0x4005e3a	    0x413b85a00000	            cmp eax, dword [r13 + 0xa0] 	      1398	move.c	FUNCTION_36	IF_1
0x4005e41	     0xf8cb9000000	                            jl 0x4005f00	      1398	move.c	FUNCTION_36	IF_1
0x4005e47	            0x31c0	                            xor eax, eax	      1399	move.c	FUNCTION_36	IF_1
0x4005e49	        0x39442408	                cmp dword [rsp + 8], eax	      2426	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_18
0x4005e4d	    0x41c785840000	               mov dword [r13 + 0x84], 0	      1399	move.c	FUNCTION_36	IF_1
0x4005e58	     0xf85edfaffff	                           jne 0x400594b	      2426	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_18
0x4005e5e	      0x49836d7801	               sub qword [r13 + 0x78], 1	      2429	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_18
0x4005e63	    0x41c785840000	               mov dword [r13 + 0x84], 0	      2431	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_18
0x4005e6e	      0xe9d8faffff	                           jmp 0x400594b	      2431	move.c	FUNCTION_48	FOR_1	ELSE_4	ELSE_8	IF_16	IF_18
0x4005e73	        0x488b3c24	                    mov rdi, qword [rsp]	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4005e77	      0xe800000000	                          call 0x4005e7c	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4005e7c	        0x8944240c	              mov dword [rsp + 0xc], eax	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4005e80	        0x8b442408	                mov eax, dword [rsp + 8]	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4005e84	      0xe9aafcffff	                           jmp 0x4005b33	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4005e89	        0x488b3c24	                    mov rdi, qword [rsp]	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4005e8d	      0xe800000000	                          call 0x4005e92	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4005e92	      0x448b6c2408	               mov r13d, dword [rsp + 8]	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4005e97	        0x8944240c	              mov dword [rsp + 0xc], eax	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4005e9b	        0x488b3c24	                    mov rdi, qword [rsp]	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4005e9f	      0xe9f8f9ffff	                           jmp 0x400589c	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4005ea4	    0x41c785840000	               mov dword [r13 + 0x84], 0	      1382	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x4005eaf	      0xe956feffff	                           jmp 0x4005d0a	      1382	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x4005eb4	            0x31f6	                            xor esi, esi	      2467	move.c	FUNCTION_48	IF_20	CALL_28
0x4005eb6	      0xbf01000000	                              mov edi, 1	      2467	move.c	FUNCTION_48	IF_20	CALL_28
0x4005ebb	      0xe800000000	                          call 0x4005ec0	      2467	move.c	FUNCTION_48	IF_20	CALL_28
0x4005ec0	    0x488b05000000	            mov rax, qword [0x04005ec7] 	      2468	move.c	FUNCTION_48	IF_20	IF_21
0x4005ec7	        0x4c3b6078	            cmp r12, qword [rax + 0x78] 	      2468	move.c	FUNCTION_48	IF_20	IF_21
0x4005ecb	     0xf8ceafaffff	                            jl 0x40059bb	      2468	move.c	FUNCTION_48	IF_20	IF_21
0x4005ed1	    0x488b15000000	            mov rdx, qword [0x04005ed8] 	      2469	move.c	FUNCTION_48	IF_20	IF_21
0x4005ed8	          0x4c3b22	                    cmp r12, qword [rdx]	      2469	move.c	FUNCTION_48	IF_20	IF_21
0x4005edb	     0xf8ddafaffff	                           jge 0x40059bb	      2469	move.c	FUNCTION_48	IF_20	IF_21
0x4005ee1	      0x498d7c2401	                      lea rdi, [r12 + 1]	      2471	move.c	FUNCTION_48	IF_20	IF_21
0x4005ee6	        0x488d7078	                   lea rsi, [rax + 0x78]	      2473	move.c	FUNCTION_48	IF_20	IF_21	CALL_29
0x4005eea	            0x31d2	                            xor edx, edx	      2473	move.c	FUNCTION_48	IF_20	IF_21	CALL_29
0x4005eec	        0x48897878	             mov qword [rax + 0x78], rdi	      2471	move.c	FUNCTION_48	IF_20	IF_21
0x4005ef0	      0xe800000000	                          call 0x4005ef5	      2473	move.c	FUNCTION_48	IF_20	IF_21	CALL_29
0x4005ef5	      0xe9c1faffff	                           jmp 0x40059bb	      2473	move.c	FUNCTION_48	IF_20	IF_21	CALL_29
0x4005efa	    0x660f1f440000	                    nop word [rax + rax]	      2473	move.c	FUNCTION_48	IF_20	IF_21	CALL_29
0x4005f00	        0x498b7578	            mov rsi, qword [r13 + 0x78] 	      1402	move.c	FUNCTION_36	ELSE_1	CALL_2
0x4005f04	          0x4c89ef	                            mov rdi, r13	      1402	move.c	FUNCTION_36	ELSE_1	CALL_2
0x4005f07	      0xe800000000	                          call 0x4005f0c	      1402	move.c	FUNCTION_36	ELSE_1	CALL_2
0x4005f0c	    0x418985840000	             mov dword [r13 + 0x84], eax	      1402	move.c	FUNCTION_36	ELSE_1	CALL_2
0x4005f13	    0x4c8b2d000000	            mov r13, qword [0x04005f1a] 	      1403	move.c	FUNCTION_36	ELSE_1	IF_2
0x4005f1a	    0x418b85840000	            mov eax, dword [r13 + 0x84] 	      1403	move.c	FUNCTION_36	ELSE_1	IF_2
0x4005f21	    0x418b95a00000	            mov edx, dword [r13 + 0xa0] 	      1403	move.c	FUNCTION_36	ELSE_1	IF_2
0x4005f28	        0x418d0c06	                    lea ecx, [r14 + rax]	      1403	move.c	FUNCTION_36	ELSE_1	IF_2
0x4005f2c	            0x39d1	                            cmp ecx, edx	      1403	move.c	FUNCTION_36	ELSE_1	IF_2
0x4005f2e	     0xf8e0dfaffff	                           jle 0x4005941	      1403	move.c	FUNCTION_36	ELSE_1	IF_2
0x4005f34	            0x89d0	                            mov eax, edx	      1404	move.c	FUNCTION_36	ELSE_1	IF_2
0x4005f36	          0x4429f0	                           sub eax, r14d	      1404	move.c	FUNCTION_36	ELSE_1	IF_2
0x4005f39	    0x418985840000	             mov dword [r13 + 0x84], eax	      1404	move.c	FUNCTION_36	ELSE_1	IF_2
0x4005f40	      0xe9fcf9ffff	                           jmp 0x4005941	      1404	move.c	FUNCTION_36	ELSE_1	IF_2
0x4005f45	      0xe800000000	                          call 0x4005f4a	      2254	move.c	FUNCTION_48	IF_1	CALL_1
0x4005f4a	            0x31c0	                            xor eax, eax	      2255	move.c	FUNCTION_48	IF_1
0x4005f4c	      0xe9adf8ffff	                           jmp 0x40057fe	      2255	move.c	FUNCTION_48	IF_1
0x4005f51	      0x488d540afe	                lea rdx, [rdx + rcx - 2]	      2293	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	ELSE_1
0x4005f56	        0x49895578	             mov qword [r13 + 0x78], rdx	      2293	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	ELSE_1
0x4005f5a	      0xe96afeffff	                           jmp 0x4005dc9	      2293	move.c	FUNCTION_48	FOR_1	IF_3	IF_4	ELSE_1
0x4005f5f	      0xe800000000	                          call 0x4005f64	      2480	move.c	FUNCTION_48
changed_line_abv_curs	SWITCH,0:WHILE,0:ELSE,0:functions,0:FOR,0:CALL,0:IF,0:DO,0	3
0x4001060	    0x488b05000000	            mov rax, qword [0x04001067] 	       573	move.c	FUNCTION_14
0x4001067	    0x81a0b4000000	      and dword [rax + 0xb4], 0xffffff60	       573	move.c	FUNCTION_14
0x4001071	              0xc3	                                     ret	       573	move.c	FUNCTION_14
get_scroll_overlap	SWITCH,0:WHILE,0:ELSE,5:functions,0:FOR,0:CALL,8:IF,8:DO,0	261
0x4000980	            0x4157	                                push r15	      2496	move.c	FUNCTION_49
0x4000982	            0x4156	                                push r14	      2496	move.c	FUNCTION_49
0x4000984	          0x4989fe	                            mov r14, rdi	      2496	move.c	FUNCTION_49
0x4000987	            0x4155	                                push r13	      2496	move.c	FUNCTION_49
0x4000989	            0x4154	                                push r12	      2496	move.c	FUNCTION_49
0x400098b	              0x55	                                push rbp	      2496	move.c	FUNCTION_49
0x400098c	              0x53	                                push rbx	      2496	move.c	FUNCTION_49
0x400098d	            0x89f5	                            mov ebp, esi	      2496	move.c	FUNCTION_49
0x400098f	        0x4883ec28	                           sub rsp, 0x28	      2496	move.c	FUNCTION_49
0x4000993	    0x488b05000000	            mov rax, qword [0x0400099a] 	      2498	move.c	FUNCTION_49
0x400099a	    0x8b98a0000000	            mov ebx, dword [rax + 0xa0] 	      2498	move.c	FUNCTION_49
0x40009a0	          0x8b4708	                mov eax, dword [rdi + 8]	      2502	move.c	FUNCTION_49	IF_1
0x40009a3	          0x83eb02	                              sub ebx, 2	      2498	move.c	FUNCTION_49
0x40009a6	            0x85c0	                           test eax, eax	      2502	move.c	FUNCTION_49	IF_1
0x40009a8	     0xf8e62020000	                           jle 0x4000c10	      2502	move.c	FUNCTION_49	IF_1
0x40009ae	    0xc7470c010000	                mov dword [rdi + 0xc], 1	      2503	move.c	FUNCTION_49	IF_1
0x40009b5	    0x41bf01000000	                             mov r15d, 1	      2503	move.c	FUNCTION_49	IF_1
0x40009bb	          0x4439fb	                           cmp ebx, r15d	      2510	move.c	FUNCTION_49	IF_2
0x40009be	            0x7c51	                            jl 0x4000a11	      2510	move.c	FUNCTION_49	IF_2
0x40009c0	            0x85ed	                           test ebp, ebp	      2514	move.c	FUNCTION_49	IF_3
0x40009c2	          0x4d8b2e	                    mov r13, qword [r14]	      2513	move.c	FUNCTION_49
0x40009c5	        0x458b6608	               mov r12d, dword [r14 + 8]	      2513	move.c	FUNCTION_49
0x40009c9	     0xf8ef1000000	                           jle 0x4000ac0	      2514	move.c	FUNCTION_49	IF_3
0x40009cf	    0x488b3d000000	            mov rdi, qword [0x040009d6] 	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x40009d6	        0x498d7501	                      lea rsi, [r13 + 1]	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x40009da	      0xe800000000	                          call 0x40009df	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x40009df	          0x4139c4	                           cmp r12d, eax	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x40009e2	            0x7c3c	                            jl 0x4000a20	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x40009e4	          0x498b06	                    mov rax, qword [r14]	      1585	move.c	FUNCTION_40	ELSE_1
0x40009e7	    0x41c746080000	                  mov dword [r14 + 8], 0	      1587	move.c	FUNCTION_40	ELSE_1
0x40009ef	        0x488d7801	                      lea rdi, [rax + 1]	      1585	move.c	FUNCTION_40	ELSE_1
0x40009f3	    0x488b05000000	            mov rax, qword [0x040009fa] 	      1589	move.c	FUNCTION_40	ELSE_1	IF_2
0x40009fa	          0x49893e	                    mov qword [r14], rdi	      1585	move.c	FUNCTION_40	ELSE_1
0x40009fd	          0x483b38	                    cmp rdi, qword [rax]	      1589	move.c	FUNCTION_40	ELSE_1	IF_2
0x4000a00	     0xf8e22010000	                           jle 0x4000b28	      1589	move.c	FUNCTION_40	ELSE_1	IF_2
0x4000a06	          0x4d892e	                    mov qword [r14], r13	      2533	move.c	FUNCTION_49	IF_6
0x4000a09	        0x45896608	               mov dword [r14 + 8], r12d	      2533	move.c	FUNCTION_49	IF_6
0x4000a0d	        0x45897e0c	             mov dword [r14 + 0xc], r15d	      2533	move.c	FUNCTION_49	IF_6
0x4000a11	        0x4883c428	                           add rsp, 0x28	      2548	move.c	FUNCTION_49	ELSE_5
0x4000a15	              0x5b	                                 pop rbx	      2548	move.c	FUNCTION_49	ELSE_5
0x4000a16	              0x5d	                                 pop rbp	      2548	move.c	FUNCTION_49	ELSE_5
0x4000a17	            0x415c	                                 pop r12	      2548	move.c	FUNCTION_49	ELSE_5
0x4000a19	            0x415d	                                 pop r13	      2548	move.c	FUNCTION_49	ELSE_5
0x4000a1b	            0x415e	                                 pop r14	      2548	move.c	FUNCTION_49	ELSE_5
0x4000a1d	            0x415f	                                 pop r15	      2548	move.c	FUNCTION_49	ELSE_5
0x4000a1f	              0xc3	                                     ret	      2548	move.c	FUNCTION_49	ELSE_5
0x4000a20	      0x4183460801	                  add dword [r14 + 8], 1	      1543	move.c	FUNCTION_39	IF_1
0x4000a25	    0x41c7460c0100	                mov dword [r14 + 0xc], 1	      1544	move.c	FUNCTION_39	IF_1
0x4000a2d	      0xb901000000	                              mov ecx, 1	      2518	move.c	FUNCTION_49
0x4000a32	        0x418d040f	                    lea eax, [r15 + rcx]	      2519	move.c	FUNCTION_49	IF_4
0x4000a36	            0x39c3	                            cmp ebx, eax	      2519	move.c	FUNCTION_49	IF_4
0x4000a38	            0x7ccc	                            jl 0x4000a06	      2519	move.c	FUNCTION_49	IF_4
0x4000a3a	          0x498b06	                    mov rax, qword [r14]	      2525	move.c	FUNCTION_49
0x4000a3d	        0x418b5608	                mov edx, dword [r14 + 8]	      2525	move.c	FUNCTION_49
0x4000a41	            0x85ed	                           test ebp, ebp	      2526	move.c	FUNCTION_49	IF_5
0x4000a43	      0x4889442408	                mov qword [rsp + 8], rax	      2525	move.c	FUNCTION_49
0x4000a48	        0x89542410	             mov dword [rsp + 0x10], edx	      2525	move.c	FUNCTION_49
0x4000a4c	     0xf8eee000000	                           jle 0x4000b40	      2526	move.c	FUNCTION_49	IF_5
0x4000a52	    0x488b3d000000	            mov rdi, qword [0x04000a59] 	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x4000a59	        0x488d7001	                      lea rsi, [rax + 1]	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x4000a5d	        0x894c2414	             mov dword [rsp + 0x14], ecx	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x4000a61	      0xe800000000	                          call 0x4000a66	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x4000a66	        0x39442410	            cmp dword [rsp + 0x10], eax 	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x4000a6a	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x4000a6e	     0xf8ced000000	                            jl 0x4000b61	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x4000a74	          0x498b06	                    mov rax, qword [r14]	      1585	move.c	FUNCTION_40	ELSE_1
0x4000a77	    0x41c746080000	                  mov dword [r14 + 8], 0	      1587	move.c	FUNCTION_40	ELSE_1
0x4000a7f	        0x488d7801	                      lea rdi, [rax + 1]	      1585	move.c	FUNCTION_40	ELSE_1
0x4000a83	    0x488b05000000	            mov rax, qword [0x04000a8a] 	      1589	move.c	FUNCTION_40	ELSE_1	IF_2
0x4000a8a	          0x49893e	                    mov qword [r14], rdi	      1585	move.c	FUNCTION_40	ELSE_1
0x4000a8d	          0x483b38	                    cmp rdi, qword [rax]	      1589	move.c	FUNCTION_40	ELSE_1	IF_2
0x4000a90	     0xf8f70ffffff	                            jg 0x4000a06	      1589	move.c	FUNCTION_40	ELSE_1	IF_2
0x4000a96	            0x31f6	                            xor esi, esi	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000a98	          0x4c89f2	                            mov rdx, r14	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000a9b	        0x894c2414	             mov dword [rsp + 0x14], ecx	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000a9f	      0xe800000000	                          call 0x4000aa4	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000aa4	            0x85c0	                           test eax, eax	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000aa6	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000aaa	     0xf85b6000000	                           jne 0x4000b66	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000ab0	        0x894c2414	             mov dword [rsp + 0x14], ecx	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000ab4	      0xe9dc010000	                           jmp 0x4000c95	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000ab9	     0xf1f80000000	                         nop dword [rax]	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000ac0	    0x488b3d000000	            mov rdi, qword [0x04000ac7] 	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x4000ac7	          0x4c89ee	                            mov rsi, r13	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x4000aca	      0xe800000000	                          call 0x4000acf	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x4000acf	          0x4139c4	                           cmp r12d, eax	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x4000ad2	     0xf8c48ffffff	                            jl 0x4000a20	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x4000ad8	          0x498b06	                    mov rax, qword [r14]	      1549	move.c	FUNCTION_39	ELSE_1
0x4000adb	    0x41c746080000	                  mov dword [r14 + 8], 0	      1551	move.c	FUNCTION_39	ELSE_1
0x4000ae3	        0x488d78ff	                      lea rdi, [rax - 1]	      1549	move.c	FUNCTION_39	ELSE_1
0x4000ae7	          0x4885ff	                           test rdi, rdi	      1553	move.c	FUNCTION_39	ELSE_1	IF_2
0x4000aea	          0x49893e	                    mov qword [r14], rdi	      1549	move.c	FUNCTION_39	ELSE_1
0x4000aed	     0xf8e13ffffff	                           jle 0x4000a06	      1553	move.c	FUNCTION_39	ELSE_1	IF_2
0x4000af3	            0x31d2	                            xor edx, edx	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000af5	          0x4c89f6	                            mov rsi, r14	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000af8	      0xe800000000	                          call 0x4000afd	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000afd	            0x85c0	                           test eax, eax	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000aff	     0xf8520ffffff	                           jne 0x4000a25	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000b05	          0x498b3e	                    mov rdi, qword [r14]	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4000b08	      0xe800000000	                          call 0x4000b0d	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4000b0d	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      2519	move.c	FUNCTION_49	IF_4
0x4000b12	        0x4189460c	              mov dword [r14 + 0xc], eax	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4000b16	            0x89c1	                            mov ecx, eax	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4000b18	     0xf8514ffffff	                           jne 0x4000a32	      2519	move.c	FUNCTION_49	IF_4
0x4000b1e	      0xe9e3feffff	                           jmp 0x4000a06	      2519	move.c	FUNCTION_49	IF_4
0x4000b23	       0xf1f440000	                   nop dword [rax + rax]	      2519	move.c	FUNCTION_49	IF_4
0x4000b28	            0x31f6	                            xor esi, esi	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000b2a	          0x4c89f2	                            mov rdx, r14	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000b2d	      0xe800000000	                          call 0x4000b32	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000b32	            0x85c0	                           test eax, eax	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000b34	     0xf85ebfeffff	                           jne 0x4000a25	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000b3a	            0xebc9	                           jmp 0x4000b05	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000b3c	         0xf1f4000	                         nop dword [rax]	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000b40	    0x488b3d000000	            mov rdi, qword [0x04000b47] 	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x4000b47	          0x4889c6	                            mov rsi, rax	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x4000b4a	        0x894c2414	             mov dword [rsp + 0x14], ecx	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x4000b4e	      0xe800000000	                          call 0x4000b53	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x4000b53	        0x39442410	            cmp dword [rsp + 0x10], eax 	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x4000b57	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x4000b5b	     0xf8dff000000	                           jge 0x4000c60	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x4000b61	      0x4183460801	                  add dword [r14 + 8], 1	      1543	move.c	FUNCTION_39	IF_1
0x4000b66	    0x41c7460c0100	                mov dword [r14 + 0xc], 1	      1544	move.c	FUNCTION_39	IF_1
0x4000b6e	    0x41ba01000000	                             mov r10d, 1	      2530	move.c	FUNCTION_49
0x4000b74	        0x458d1c0a	                   lea r11d, [r10 + rcx]	      2531	move.c	FUNCTION_49	IF_6
0x4000b78	          0x4439db	                           cmp ebx, r11d	      2531	move.c	FUNCTION_49	IF_6
0x4000b7b	     0xf8c85feffff	                            jl 0x4000a06	      2531	move.c	FUNCTION_49	IF_6
0x4000b81	            0x85ed	                           test ebp, ebp	      2538	move.c	FUNCTION_49	IF_7
0x4000b83	          0x4d8b26	                    mov r12, qword [r14]	      2537	move.c	FUNCTION_49
0x4000b86	        0x458b6e08	               mov r13d, dword [r14 + 8]	      2537	move.c	FUNCTION_49
0x4000b8a	        0x894c241c	             mov dword [rsp + 0x1c], ecx	      2537	move.c	FUNCTION_49
0x4000b8e	      0x4489542418	            mov dword [rsp + 0x18], r10d	      2537	move.c	FUNCTION_49
0x4000b93	      0x44895c2414	            mov dword [rsp + 0x14], r11d	      2537	move.c	FUNCTION_49
0x4000b98	     0xf8e92010000	                           jle 0x4000d30	      2538	move.c	FUNCTION_49	IF_7
0x4000b9e	    0x488b3d000000	            mov rdi, qword [0x04000ba5] 	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x4000ba5	      0x498d742401	                      lea rsi, [r12 + 1]	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x4000baa	      0xe800000000	                          call 0x4000baf	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x4000baf	          0x4139c5	                           cmp r13d, eax	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x4000bb2	      0x448b5c2414	           mov r11d, dword [rsp + 0x14] 	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x4000bb7	      0x448b542418	           mov r10d, dword [rsp + 0x18] 	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x4000bbc	        0x8b4c241c	            mov ecx, dword [rsp + 0x1c] 	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x4000bc0	            0x7c66	                            jl 0x4000c28	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x4000bc2	          0x498b06	                    mov rax, qword [r14]	      1585	move.c	FUNCTION_40	ELSE_1
0x4000bc5	    0x41c746080000	                  mov dword [r14 + 8], 0	      1587	move.c	FUNCTION_40	ELSE_1
0x4000bcd	        0x488d7801	                      lea rdi, [rax + 1]	      1585	move.c	FUNCTION_40	ELSE_1
0x4000bd1	    0x488b05000000	            mov rax, qword [0x04000bd8] 	      1589	move.c	FUNCTION_40	ELSE_1	IF_2
0x4000bd8	          0x49893e	                    mov qword [r14], rdi	      1585	move.c	FUNCTION_40	ELSE_1
0x4000bdb	          0x483b38	                    cmp rdi, qword [rax]	      1589	move.c	FUNCTION_40	ELSE_1	IF_2
0x4000bde	     0xf8edc000000	                           jle 0x4000cc0	      1589	move.c	FUNCTION_40	ELSE_1	IF_2
0x4000be4	      0x488b442408	                mov rax, qword [rsp + 8]	      2544	move.c	FUNCTION_49	IF_8
0x4000be9	        0x41894e0c	              mov dword [r14 + 0xc], ecx	      2544	move.c	FUNCTION_49	IF_8
0x4000bed	          0x498906	                    mov qword [r14], rax	      2544	move.c	FUNCTION_49	IF_8
0x4000bf0	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      2544	move.c	FUNCTION_49	IF_8
0x4000bf4	        0x41894608	                mov dword [r14 + 8], eax	      2544	move.c	FUNCTION_49	IF_8
0x4000bf8	        0x4883c428	                           add rsp, 0x28	      2548	move.c	FUNCTION_49	ELSE_5
0x4000bfc	              0x5b	                                 pop rbx	      2548	move.c	FUNCTION_49	ELSE_5
0x4000bfd	              0x5d	                                 pop rbp	      2548	move.c	FUNCTION_49	ELSE_5
0x4000bfe	            0x415c	                                 pop r12	      2548	move.c	FUNCTION_49	ELSE_5
0x4000c00	            0x415d	                                 pop r13	      2548	move.c	FUNCTION_49	ELSE_5
0x4000c02	            0x415e	                                 pop r14	      2548	move.c	FUNCTION_49	ELSE_5
0x4000c04	            0x415f	                                 pop r15	      2548	move.c	FUNCTION_49	ELSE_5
0x4000c06	              0xc3	                                     ret	      2548	move.c	FUNCTION_49	ELSE_5
0x4000c07	    0x660f1f840000	                    nop word [rax + rax]	      2548	move.c	FUNCTION_49	ELSE_5
0x4000c10	          0x488b3f	                    mov rdi, qword [rdi]	      2505	move.c	FUNCTION_49	CALL_1
0x4000c13	      0xe800000000	                          call 0x4000c18	      2505	move.c	FUNCTION_49	CALL_1
0x4000c18	          0x4189c7	                           mov r15d, eax	      2505	move.c	FUNCTION_49	CALL_1
0x4000c1b	        0x4189460c	              mov dword [r14 + 0xc], eax	      2505	move.c	FUNCTION_49	CALL_1
0x4000c1f	      0xe997fdffff	                           jmp 0x40009bb	      2505	move.c	FUNCTION_49	CALL_1
0x4000c24	         0xf1f4000	                         nop dword [rax]	      2505	move.c	FUNCTION_49	CALL_1
0x4000c28	      0x4183460801	                  add dword [r14 + 8], 1	      1543	move.c	FUNCTION_39	IF_1
0x4000c2d	    0x41c7460c0100	                mov dword [r14 + 0xc], 1	      1544	move.c	FUNCTION_39	IF_1
0x4000c35	      0xb801000000	                              mov eax, 1	      2542	move.c	FUNCTION_49
0x4000c3a	          0x4401d0	                           add eax, r10d	      2543	move.c	FUNCTION_49	IF_8
0x4000c3d	             0x1c8	                            add eax, ecx	      2543	move.c	FUNCTION_49	IF_8
0x4000c3f	            0x39c3	                            cmp ebx, eax	      2543	move.c	FUNCTION_49	IF_8
0x4000c41	            0x7ca1	                            jl 0x4000be4	      2543	move.c	FUNCTION_49	IF_8
0x4000c43	        0x478d043b	                    lea r8d, [r11 + r15]	      2543	move.c	FUNCTION_49	IF_8
0x4000c47	          0x4439c3	                            cmp ebx, r8d	      2543	move.c	FUNCTION_49	IF_8
0x4000c4a	            0x7c98	                            jl 0x4000be4	      2543	move.c	FUNCTION_49	IF_8
0x4000c4c	          0x4d8926	                    mov qword [r14], r12	      2546	move.c	FUNCTION_49	ELSE_5
0x4000c4f	        0x45896e08	               mov dword [r14 + 8], r13d	      2546	move.c	FUNCTION_49	ELSE_5
0x4000c53	        0x4589560c	             mov dword [r14 + 0xc], r10d	      2546	move.c	FUNCTION_49	ELSE_5
0x4000c57	      0xe9b5fdffff	                           jmp 0x4000a11	      2546	move.c	FUNCTION_49	ELSE_5
0x4000c5c	         0xf1f4000	                         nop dword [rax]	      2546	move.c	FUNCTION_49	ELSE_5
0x4000c60	          0x498b06	                    mov rax, qword [r14]	      1549	move.c	FUNCTION_39	ELSE_1
0x4000c63	        0x894c2414	             mov dword [rsp + 0x14], ecx	      1549	move.c	FUNCTION_39	ELSE_1
0x4000c67	    0x41c746080000	                  mov dword [r14 + 8], 0	      1551	move.c	FUNCTION_39	ELSE_1
0x4000c6f	        0x488d78ff	                      lea rdi, [rax - 1]	      1549	move.c	FUNCTION_39	ELSE_1
0x4000c73	          0x4885ff	                           test rdi, rdi	      1553	move.c	FUNCTION_39	ELSE_1	IF_2
0x4000c76	          0x49893e	                    mov qword [r14], rdi	      1549	move.c	FUNCTION_39	ELSE_1
0x4000c79	     0xf8e87fdffff	                           jle 0x4000a06	      1553	move.c	FUNCTION_39	ELSE_1	IF_2
0x4000c7f	            0x31d2	                            xor edx, edx	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000c81	          0x4c89f6	                            mov rsi, r14	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000c84	      0xe800000000	                          call 0x4000c89	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000c89	            0x85c0	                           test eax, eax	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000c8b	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000c8f	     0xf85d1feffff	                           jne 0x4000b66	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000c95	          0x498b3e	                    mov rdi, qword [r14]	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4000c98	      0xe800000000	                          call 0x4000c9d	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4000c9d	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      2531	move.c	FUNCTION_49	IF_6
0x4000ca2	        0x4189460c	              mov dword [r14 + 0xc], eax	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4000ca6	          0x4189c2	                           mov r10d, eax	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4000ca9	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4000cad	     0xf85c1feffff	                           jne 0x4000b74	      2531	move.c	FUNCTION_49	IF_6
0x4000cb3	      0xe94efdffff	                           jmp 0x4000a06	      2531	move.c	FUNCTION_49	IF_6
0x4000cb8	     0xf1f84000000	                   nop dword [rax + rax]	      2531	move.c	FUNCTION_49	IF_6
0x4000cc0	            0x31f6	                            xor esi, esi	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000cc2	          0x4c89f2	                            mov rdx, r14	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000cc5	        0x894c241c	             mov dword [rsp + 0x1c], ecx	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000cc9	      0x4489542418	            mov dword [rsp + 0x18], r10d	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000cce	      0x44895c2414	            mov dword [rsp + 0x14], r11d	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000cd3	      0xe800000000	                          call 0x4000cd8	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000cd8	            0x85c0	                           test eax, eax	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000cda	      0x448b5c2414	           mov r11d, dword [rsp + 0x14] 	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000cdf	      0x448b542418	           mov r10d, dword [rsp + 0x18] 	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000ce4	        0x8b4c241c	            mov ecx, dword [rsp + 0x1c] 	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000ce8	     0xf853fffffff	                           jne 0x4000c2d	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000cee	          0x498b3e	                    mov rdi, qword [r14]	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4000cf1	        0x894c241c	             mov dword [rsp + 0x1c], ecx	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4000cf5	      0x4489542418	            mov dword [rsp + 0x18], r10d	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4000cfa	      0x44895c2414	            mov dword [rsp + 0x14], r11d	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4000cff	      0xe800000000	                          call 0x4000d04	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4000d04	      0x448b5c2414	           mov r11d, dword [rsp + 0x14] 	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4000d09	      0x448b542418	           mov r10d, dword [rsp + 0x18] 	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4000d0e	        0x8b4c241c	            mov ecx, dword [rsp + 0x1c] 	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4000d12	        0x4189460c	              mov dword [r14 + 0xc], eax	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4000d16	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      2543	move.c	FUNCTION_49	IF_8
0x4000d1b	     0xf8519ffffff	                           jne 0x4000c3a	      2543	move.c	FUNCTION_49	IF_8
0x4000d21	      0xe9befeffff	                           jmp 0x4000be4	      2543	move.c	FUNCTION_49	IF_8
0x4000d26	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2543	move.c	FUNCTION_49	IF_8
0x4000d30	    0x488b3d000000	            mov rdi, qword [0x04000d37] 	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x4000d37	          0x4c89e6	                            mov rsi, r12	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x4000d3a	      0xe800000000	                          call 0x4000d3f	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x4000d3f	          0x4139c5	                           cmp r13d, eax	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x4000d42	      0x448b5c2414	           mov r11d, dword [rsp + 0x14] 	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x4000d47	      0x448b542418	           mov r10d, dword [rsp + 0x18] 	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x4000d4c	        0x8b4c241c	            mov ecx, dword [rsp + 0x1c] 	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x4000d50	     0xf8cd2feffff	                            jl 0x4000c28	      1540	move.c	FUNCTION_39	IF_1	CALL_1
0x4000d56	          0x498b06	                    mov rax, qword [r14]	      1549	move.c	FUNCTION_39	ELSE_1
0x4000d59	      0x4489542418	            mov dword [rsp + 0x18], r10d	      1549	move.c	FUNCTION_39	ELSE_1
0x4000d5e	      0x44895c2414	            mov dword [rsp + 0x14], r11d	      1549	move.c	FUNCTION_39	ELSE_1
0x4000d63	    0x41c746080000	                  mov dword [r14 + 8], 0	      1551	move.c	FUNCTION_39	ELSE_1
0x4000d6b	        0x488d78ff	                      lea rdi, [rax - 1]	      1549	move.c	FUNCTION_39	ELSE_1
0x4000d6f	          0x4885ff	                           test rdi, rdi	      1553	move.c	FUNCTION_39	ELSE_1	IF_2
0x4000d72	          0x49893e	                    mov qword [r14], rdi	      1549	move.c	FUNCTION_39	ELSE_1
0x4000d75	     0xf8e69feffff	                           jle 0x4000be4	      1553	move.c	FUNCTION_39	ELSE_1	IF_2
0x4000d7b	            0x31d2	                            xor edx, edx	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000d7d	          0x4c89f6	                            mov rsi, r14	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000d80	        0x894c241c	             mov dword [rsp + 0x1c], ecx	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000d84	      0xe800000000	                          call 0x4000d89	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000d89	            0x85c0	                           test eax, eax	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000d8b	        0x8b4c241c	            mov ecx, dword [rsp + 0x1c] 	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000d8f	      0x448b5c2414	           mov r11d, dword [rsp + 0x14] 	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000d94	      0x448b542418	           mov r10d, dword [rsp + 0x18] 	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000d99	     0xf858efeffff	                           jne 0x4000c2d	      1557	move.c	FUNCTION_39	ELSE_1	ELSE_2	IF_3	CALL_2
0x4000d9f	          0x498b3e	                    mov rdi, qword [r14]	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4000da2	      0xe800000000	                          call 0x4000da7	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4000da7	        0x8b4c241c	            mov ecx, dword [rsp + 0x1c] 	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4000dab	        0x4189460c	              mov dword [r14 + 0xc], eax	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4000daf	      0x448b542418	           mov r10d, dword [rsp + 0x18] 	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4000db4	      0x448b5c2414	           mov r11d, dword [rsp + 0x14] 	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4000db9	      0xe958ffffff	                           jmp 0x4000d16	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
approximate_botline_win	SWITCH,0:WHILE,0:ELSE,0:functions,0:FOR,0:CALL,0:IF,0:DO,0	2
0x40010d0	    0x83a7b4000000	      and dword [rdi + 0xb4], 0xffffffdf	       613	move.c	FUNCTION_19
0x40010d7	              0xc3	                                     ret	       613	move.c	FUNCTION_19
do_check_cursorbind	SWITCH,0:WHILE,0:ELSE,0:functions,1:FOR,0:CALL,0:IF,0:DO,0	136
0x4006430	            0x4157	                                push r15	      2774	move.c	FUNCTION_51
0x4006432	            0x4156	                                push r14	      2774	move.c	FUNCTION_51
0x4006434	            0x4155	                                push r13	      2774	move.c	FUNCTION_51
0x4006436	            0x4154	                                push r12	      2774	move.c	FUNCTION_51
0x4006438	              0x55	                                push rbp	      2774	move.c	FUNCTION_51
0x4006439	              0x53	                                push rbx	      2774	move.c	FUNCTION_51
0x400643a	        0x4883ec28	                           sub rsp, 0x28	      2774	move.c	FUNCTION_51
0x400643e	    0x488b1d000000	            mov rbx, qword [0x04006445] 	      2775	move.c	FUNCTION_51
0x4006445	    0x488b2d000000	            mov rbp, qword [0x0400644c] 	      2792	move.c	FUNCTION_51
0x400644c	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      2775	move.c	FUNCTION_51
0x4006450	          0x4885ed	                           test rbp, rbp	      2792	move.c	FUNCTION_51
0x4006453	        0x448b7b40	           mov r15d, dword [rbx + 0x40] 	      2776	move.c	FUNCTION_51
0x4006457	        0x448b7344	           mov r14d, dword [rbx + 0x44] 	      2778	move.c	FUNCTION_51
0x400645b	        0x448b6b48	           mov r13d, dword [rbx + 0x48] 	      2780	move.c	FUNCTION_51
0x400645f	        0x448b634c	           mov r12d, dword [rbx + 0x4c] 	      2781	move.c	FUNCTION_51
0x4006463	    0x48892d000000	            mov qword [0x0400646a], rbp 	      2792	move.c	FUNCTION_51
0x400646a	      0x4889442408	                mov qword [rsp + 8], rax	      2775	move.c	FUNCTION_51
0x400646f	    0x488b05000000	            mov rax, qword [0x04006476] 	      2783	move.c	FUNCTION_51
0x4006476	      0x4889442410	             mov qword [rsp + 0x10], rax	      2783	move.c	FUNCTION_51
0x400647b	    0x8b0500000000	            mov eax, dword [0x04006481] 	      2785	move.c	FUNCTION_51
0x4006481	    0xc70500000000	               mov dword [0x0400648b], 0	      2791	move.c	FUNCTION_51
0x400648b	        0x89442418	             mov dword [rsp + 0x18], eax	      2785	move.c	FUNCTION_51
0x400648f	    0x8b0500000000	            mov eax, dword [0x04006495] 	      2786	move.c	FUNCTION_51
0x4006495	    0xc70500000000	               mov dword [0x0400649f], 0	      2791	move.c	FUNCTION_51
0x400649f	        0x8944241c	             mov dword [rsp + 0x1c], eax	      2786	move.c	FUNCTION_51
0x40064a3	     0xf85f8000000	                           jne 0x40065a1	      2792	move.c	FUNCTION_51
0x40064a9	      0xe9a2010000	                           jmp 0x4006650	      2792	move.c	FUNCTION_51
0x40064ae	            0x6690	                                     nop	      2792	move.c	FUNCTION_51
0x40064b0	      0x488b442408	                mov rax, qword [rsp + 8]	      2804	move.c	FUNCTION_51	FUNCTION_1	IF_1	ELSE_1
0x40064b5	        0x48894538	            mov qword [rbp + 0x38], rax 	      2804	move.c	FUNCTION_51	FUNCTION_1	IF_1	ELSE_1
0x40064b9	    0x488b05000000	            mov rax, qword [0x040064c0] 	      2805	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x40064c0	    0x8b2d00000000	            mov ebp, dword [0x040064c6] 	      2814	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x40064c6	    0xc70500000000	               mov dword [0x040064d0], 1	      2815	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x40064d0	        0x44897840	            mov dword [rax + 0x40], r15d	      2805	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x40064d4	        0x44897044	            mov dword [rax + 0x44], r14d	      2807	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x40064d8	        0x44896848	            mov dword [rax + 0x48], r13d	      2809	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x40064dc	        0x4489604c	            mov dword [rax + 0x4c], r12d	      2810	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x40064e0	      0xe800000000	                          call 0x40064e5	      2816	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_2
0x40064e5	    0x488b05000000	            mov rax, qword [0x040064ec] 	      2818	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_3
0x40064ec	    0x8bb070020000	           mov esi, dword [rax + 0x270] 	      2818	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_3
0x40064f2	            0x85f6	                           test esi, esi	      2818	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_3
0x40064f4	            0x750a	                           jne 0x4006500	      2818	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_3
0x40064f6	    0x8b886c020000	           mov ecx, dword [rax + 0x26c] 	      2818	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_3
0x40064fc	            0x85c9	                           test ecx, ecx	      2818	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_3
0x40064fe	            0x7454	                            je 0x4006554	      2818	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_3
0x4006500	    0x488b88b80000	            mov rcx, qword [rax + 0xb8] 	       481	move.c	FUNCTION_8	IF_1
0x4006507	        0x48394838	            cmp qword [rax + 0x38], rcx 	       481	move.c	FUNCTION_8	IF_1
0x400650b	     0xf84ff000000	                            je 0x4006610	       481	move.c	FUNCTION_8	IF_1
0x4006511	    0x8b90b4000000	            mov edx, dword [rax + 0xb4] 	       483	move.c	FUNCTION_8	IF_1
0x4006517	        0x488b7038	            mov rsi, qword [rax + 0x38] 	       485	move.c	FUNCTION_8	IF_1
0x400651b	        0x488b7840	            mov rdi, qword [rax + 0x40] 	       485	move.c	FUNCTION_8	IF_1
0x400651f	    0x8b8894000000	            mov ecx, dword [rax + 0x94] 	       486	move.c	FUNCTION_8	IF_1
0x4006525	          0x80e260	                            and dl, 0x60	       483	move.c	FUNCTION_8	IF_1
0x4006528	    0x4889b0b80000	             mov qword [rax + 0xb8], rsi	       485	move.c	FUNCTION_8	IF_1
0x400652f	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       483	move.c	FUNCTION_8	IF_1
0x4006535	    0x4889b8c00000	             mov qword [rax + 0xc0], rdi	       485	move.c	FUNCTION_8	IF_1
0x400653c	    0x8988c8000000	             mov dword [rax + 0xc8], ecx	       486	move.c	FUNCTION_8	IF_1
0x4006542	          0x83e203	                              and edx, 3	       635	move.c	FUNCTION_21	IF_1
0x4006545	          0x83fa03	                              cmp edx, 3	       635	move.c	FUNCTION_21	IF_1
0x4006548	            0x740a	                            je 0x4006554	       635	move.c	FUNCTION_21	IF_1
0x400654a	      0xbf01000000	                              mov edi, 1	       636	move.c	FUNCTION_21	CALL_2
0x400654f	      0xe800000000	                          call 0x4006554	       636	move.c	FUNCTION_21	CALL_2
0x4006554	    0x8b1500000000	            mov edx, dword [0x0400655a] 	      2824	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_4
0x400655a	    0x892d00000000	            mov dword [0x04006560], ebp 	      2821	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x4006560	            0x85d2	                           test edx, edx	      2824	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_4
0x4006562	     0xf8598000000	                           jne 0x4006600	      2824	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_4
0x4006568	      0xbf0a000000	                            mov edi, 0xa	      2827	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_5
0x400656d	      0xe800000000	                          call 0x4006572	      2827	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_5
0x4006572	    0x488b2d000000	            mov rbp, qword [0x04006579] 	      2830	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_5
0x4006579	    0x8b8588020000	           mov eax, dword [rbp + 0x288] 	      2830	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_5
0x400657f	            0x85c0	                           test eax, eax	      2830	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_5
0x4006581	            0x7465	                            je 0x40065e8	      2830	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_5
0x4006583	    0xc78540010000	              mov dword [rbp + 0x140], 1	      2832	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x400658d	        0x488b6d20	            mov rbp, qword [rbp + 0x20] 	      2792	move.c	FUNCTION_51
0x4006591	          0x4885ed	                           test rbp, rbp	      2792	move.c	FUNCTION_51
0x4006594	    0x48892d000000	            mov qword [0x0400659b], rbp 	      2792	move.c	FUNCTION_51
0x400659b	     0xf84af000000	                            je 0x4006650	      2792	move.c	FUNCTION_51
0x40065a1	        0x488b4508	                mov rax, qword [rbp + 8]	      2794	move.c	FUNCTION_51	FUNCTION_1
0x40065a5	          0x4839eb	                            cmp rbx, rbp	      2796	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x40065a8	    0x488905000000	            mov qword [0x040065af], rax 	      2794	move.c	FUNCTION_51	FUNCTION_1
0x40065af	            0x74dc	                            je 0x400658d	      2796	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x40065b1	    0x448b85b00200	           mov r8d, dword [rbp + 0x2b0] 	      2796	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x40065b8	          0x4585c0	                           test r8d, r8d	      2796	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x40065bb	            0x74d0	                            je 0x400658d	      2796	move.c	FUNCTION_51	FUNCTION_1	IF_1
0x40065bd	    0x8bbdc0010000	           mov edi, dword [rbp + 0x1c0] 	      2799	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_2
0x40065c3	            0x85ff	                           test edi, edi	      2799	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_2
0x40065c5	     0xf84e5feffff	                            je 0x40064b0	      2799	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_2
0x40065cb	      0x488b742408	                mov rsi, qword [rsp + 8]	      2801	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_1
0x40065d0	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      2801	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_1
0x40065d5	      0xe800000000	                          call 0x40065da	      2801	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_1
0x40065da	        0x48894538	            mov qword [rbp + 0x38], rax 	      2800	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_2
0x40065de	      0xe9d6feffff	                           jmp 0x40064b9	      2800	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_2
0x40065e3	       0xf1f440000	                   nop dword [rax + rax]	      2800	move.c	FUNCTION_51	FUNCTION_1	IF_1	IF_2
0x40065e8	      0xe800000000	                          call 0x40065ed	      2831	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_6
0x40065ed	    0x488b2d000000	            mov rbp, qword [0x040065f4] 	      2831	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_6
0x40065f4	            0xeb8d	                           jmp 0x4006583	      2831	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_6
0x40065f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2831	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_6
0x4006600	      0xe800000000	                          call 0x4006605	      2825	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_4
0x4006605	      0xe95effffff	                           jmp 0x4006568	      2825	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_4
0x400660a	    0x660f1f440000	                    nop word [rax + rax]	      2825	move.c	FUNCTION_51	FUNCTION_1	IF_1	CALL_4
0x4006610	          0x8b4840	            mov ecx, dword [rax + 0x40] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4006613	    0x3b88c0000000	            cmp ecx, dword [rax + 0xc0] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4006619	    0x8bb094000000	            mov esi, dword [rax + 0x94] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x400661f	            0x746f	                            je 0x4006690	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4006621	          0x8b7844	            mov edi, dword [rax + 0x44] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4006624	    0x8b90b4000000	            mov edx, dword [rax + 0xb4] 	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x400662a	    0x8988c0000000	             mov dword [rax + 0xc0], ecx	       496	move.c	FUNCTION_8	ELSE_1	IF_2
0x4006630	    0x89b0c8000000	             mov dword [rax + 0xc8], esi	       497	move.c	FUNCTION_8	ELSE_1	IF_2
0x4006636	    0x89b8c4000000	             mov dword [rax + 0xc4], edi	       499	move.c	FUNCTION_8	ELSE_1	IF_2
0x400663c	          0x83e2f8	                     and edx, 0xfffffff8	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x400663f	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x4006645	      0xe9f8feffff	                           jmp 0x4006542	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x400664a	    0x660f1f440000	                    nop word [rax + rax]	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x4006650	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      2839	move.c	FUNCTION_51
0x4006654	    0x48891d000000	            mov qword [0x0400665b], rbx 	      2841	move.c	FUNCTION_51
0x400665b	    0x890500000000	            mov dword [0x04006661], eax 	      2839	move.c	FUNCTION_51
0x4006661	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      2840	move.c	FUNCTION_51
0x4006665	    0x890500000000	            mov dword [0x0400666b], eax 	      2840	move.c	FUNCTION_51
0x400666b	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2842	move.c	FUNCTION_51
0x4006670	    0x488905000000	            mov qword [0x04006677], rax 	      2842	move.c	FUNCTION_51
0x4006677	        0x4883c428	                           add rsp, 0x28	      2843	move.c	FUNCTION_51
0x400667b	              0x5b	                                 pop rbx	      2843	move.c	FUNCTION_51
0x400667c	              0x5d	                                 pop rbp	      2843	move.c	FUNCTION_51
0x400667d	            0x415c	                                 pop r12	      2843	move.c	FUNCTION_51
0x400667f	            0x415d	                                 pop r13	      2843	move.c	FUNCTION_51
0x4006681	            0x415e	                                 pop r14	      2843	move.c	FUNCTION_51
0x4006683	            0x415f	                                 pop r15	      2843	move.c	FUNCTION_51
0x4006685	              0xc3	                                     ret	      2843	move.c	FUNCTION_51
0x4006686	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2843	move.c	FUNCTION_51
0x4006690	    0x3bb0c8000000	            cmp esi, dword [rax + 0xc8] 	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x4006696	          0x8b7844	            mov edi, dword [rax + 0x44] 	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x4006699	            0x7589	                           jne 0x4006624	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x400669b	    0x3bb8c4000000	            cmp edi, dword [rax + 0xc4] 	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x40066a1	            0x7581	                           jne 0x4006624	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x40066a3	    0x8b90b4000000	            mov edx, dword [rax + 0xb4] 	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x40066a9	      0xe994feffff	                           jmp 0x4006542	       491	move.c	FUNCTION_8	ELSE_1	IF_2
changed_window_setting	SWITCH,0:WHILE,0:ELSE,0:functions,0:FOR,0:CALL,1:IF,0:DO,0	5
0x4000f70	    0x488b3d000000	            mov rdi, qword [0x04000f77] 	       512	move.c	FUNCTION_9	CALL_1
0x4000f77	      0xbe28000000	                           mov esi, 0x28	       521	move.c	FUNCTION_10	CALL_2
0x4000f7c	    0x81a7b4000000	      and dword [rdi + 0xb4], 0xffffff00	       520	move.c	FUNCTION_10
0x4000f86	    0xc787f8000000	               mov dword [rdi + 0xf8], 0	       518	move.c	FUNCTION_10
0x4000f90	      0xe900000000	                           jmp 0x4000f95	       521	move.c	FUNCTION_10	CALL_2
comp_botline	SWITCH,0:WHILE,0:ELSE,3:functions,0:FOR,1:CALL,6:IF,5:DO,0	168
0x40002e0	            0x4155	                                push r13	        52	move.c	FUNCTION_1
0x40002e2	            0x4154	                                push r12	        52	move.c	FUNCTION_1
0x40002e4	              0x55	                                push rbp	        52	move.c	FUNCTION_1
0x40002e5	              0x53	                                push rbx	        52	move.c	FUNCTION_1
0x40002e6	          0x4889fd	                            mov rbp, rdi	        52	move.c	FUNCTION_1
0x40002e9	        0x4883ec18	                           sub rsp, 0x18	        52	move.c	FUNCTION_1
0x40002ed	        0x488b5f38	            mov rbx, qword [rdi + 0x38] 	       481	move.c	FUNCTION_8	IF_1
0x40002f1	    0x64488b042528	                mov rax, qword fs:[0x28]	        52	move.c	FUNCTION_1
0x40002fa	      0x4889442408	                mov qword [rsp + 8], rax	        52	move.c	FUNCTION_1
0x40002ff	            0x31c0	                            xor eax, eax	        52	move.c	FUNCTION_1
0x4000301	    0x483b9fb80000	            cmp rbx, qword [rdi + 0xb8] 	       481	move.c	FUNCTION_8	IF_1
0x4000308	     0xf843a020000	                            je 0x4000548	       481	move.c	FUNCTION_8	IF_1
0x400030e	    0x8b97b4000000	            mov edx, dword [rdi + 0xb4] 	       483	move.c	FUNCTION_8	IF_1
0x4000314	        0x488b7738	            mov rsi, qword [rdi + 0x38] 	       485	move.c	FUNCTION_8	IF_1
0x4000318	    0x8b8594000000	            mov eax, dword [rbp + 0x94] 	       486	move.c	FUNCTION_8	IF_1
0x400031e	          0x80e260	                            and dl, 0x60	       483	move.c	FUNCTION_8	IF_1
0x4000321	    0x8997b4000000	             mov dword [rdi + 0xb4], edx	       483	move.c	FUNCTION_8	IF_1
0x4000327	        0x488b7f40	            mov rdi, qword [rdi + 0x40] 	       485	move.c	FUNCTION_8	IF_1
0x400032b	    0x4889b5b80000	            mov qword [rbp + 0xb8], rsi 	       485	move.c	FUNCTION_8	IF_1
0x4000332	    0x8985c8000000	            mov dword [rbp + 0xc8], eax 	       486	move.c	FUNCTION_8	IF_1
0x4000338	    0x4889bdc00000	            mov qword [rbp + 0xc0], rdi 	       485	move.c	FUNCTION_8	IF_1
0x400033f	          0xf6c210	                           test dl, 0x10	        66	move.c	FUNCTION_1	IF_1
0x4000342	     0xf8480010000	                            je 0x40004c8	        66	move.c	FUNCTION_1	IF_1
0x4000348	        0x488b4508	                mov rax, qword [rbp + 8]	        77	move.c	FUNCTION_1	FOR_1
0x400034c	    0x448badd40000	           mov r13d, dword [rbp + 0xd4] 	        69	move.c	FUNCTION_1	IF_1
0x4000353	          0x483b18	                    cmp rbx, qword [rax]	        77	move.c	FUNCTION_1	FOR_1
0x4000356	     0xf8ebb000000	                           jle 0x4000417	        77	move.c	FUNCTION_1	FOR_1
0x400035c	         0xf1f4000	                         nop dword [rax]	        77	move.c	FUNCTION_1	FOR_1
0x4000360	          0x83ca60	                            or edx, 0x60	       121	move.c	FUNCTION_1
0x4000363	          0x4585ed	                         test r13d, r13d	      1785	move.c	FUNCTION_44	IF_1
0x4000366	    0x48899de80000	            mov qword [rbp + 0xe8], rbx 	       120	move.c	FUNCTION_1
0x400036d	    0x8995b4000000	            mov dword [rbp + 0xb4], edx 	       121	move.c	FUNCTION_1
0x4000373	    0xc785f4000000	               mov dword [rbp + 0xf4], 0	      1783	move.c	FUNCTION_44
0x400037d	     0xf857d010000	                           jne 0x4000500	      1785	move.c	FUNCTION_44	IF_1
0x4000383	    0xc785f0000000	               mov dword [rbp + 0xf0], 0	      1799	move.c	FUNCTION_44	ELSE_1	IF_2	ELSE_2
0x400038d	      0x488b442408	                mov rax, qword [rsp + 8]	       124	move.c	FUNCTION_1
0x4000392	    0x644833042528	                xor rax, qword fs:[0x28]	       124	move.c	FUNCTION_1
0x400039b	     0xf852b020000	                           jne 0x40005cc	       124	move.c	FUNCTION_1
0x40003a1	        0x4883c418	                           add rsp, 0x18	       124	move.c	FUNCTION_1
0x40003a5	              0x5b	                                 pop rbx	       124	move.c	FUNCTION_1
0x40003a6	              0x5d	                                 pop rbp	       124	move.c	FUNCTION_1
0x40003a7	            0x415c	                                 pop r12	       124	move.c	FUNCTION_1
0x40003a9	            0x415d	                                 pop r13	       124	move.c	FUNCTION_1
0x40003ab	              0xc3	                                     ret	       124	move.c	FUNCTION_1
0x40003ac	         0xf1f4000	                         nop dword [rax]	       124	move.c	FUNCTION_1
0x40003b0	    0x8995d0000000	            mov dword [rbp + 0xd0], edx 	       106	move.c	FUNCTION_1	FOR_1	IF_4
0x40003b6	    0x8b953c020000	           mov edx, dword [rbp + 0x23c] 	       133	move.c	FUNCTION_2	IF_1
0x40003bc	    0x4489add40000	           mov dword [rbp + 0xd4], r13d 	       103	move.c	FUNCTION_1	FOR_1	IF_4
0x40003c3	    0x4489a5cc0000	           mov dword [rbp + 0xcc], r12d 	       104	move.c	FUNCTION_1	FOR_1	IF_4
0x40003ca	            0x85d2	                           test edx, edx	       133	move.c	FUNCTION_2	IF_1
0x40003cc	            0x750e	                           jne 0x40003dc	       133	move.c	FUNCTION_2	IF_1
0x40003ce	    0x8b8570020000	           mov eax, dword [rbp + 0x270] 	       135	move.c	FUNCTION_2	IF_1
0x40003d4	            0x85c0	                           test eax, eax	       135	move.c	FUNCTION_2	IF_1
0x40003d6	     0xf84c2000000	                            je 0x400049e	       135	move.c	FUNCTION_2	IF_1
0x40003dc	    0x8b85b4000000	            mov eax, dword [rbp + 0xb4] 	       138	move.c	FUNCTION_2	IF_1
0x40003e2	            0xa810	                           test al, 0x10	       138	move.c	FUNCTION_2	IF_1
0x40003e4	     0xf849e000000	                            je 0x4000488	       138	move.c	FUNCTION_2	IF_1
0x40003ea	          0x83c818	                            or eax, 0x18	       109	move.c	FUNCTION_1	FOR_1	IF_4
0x40003ed	    0x8985b4000000	            mov dword [rbp + 0xb4], eax 	       109	move.c	FUNCTION_1	FOR_1	IF_4
0x40003f3	        0x438d042c	                    lea eax, [r12 + r13]	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x40003f7	    0x3b85a0000000	            cmp eax, dword [rbp + 0xa0] 	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x40003fd	            0x7f79	                            jg 0x4000478	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x40003ff	        0x488b0c24	                    mov rcx, qword [rsp]	        77	move.c	FUNCTION_1	FOR_1
0x4000403	        0x488b5508	                mov rdx, qword [rbp + 8]	        77	move.c	FUNCTION_1	FOR_1
0x4000407	        0x488d5901	                      lea rbx, [rcx + 1]	        77	move.c	FUNCTION_1	FOR_1
0x400040b	          0x48391a	                    cmp qword [rdx], rbx	        77	move.c	FUNCTION_1	FOR_1
0x400040e	     0xf8cd4000000	                            jl 0x40004e8	        77	move.c	FUNCTION_1	FOR_1
0x4000414	          0x4189c5	                           mov r13d, eax	        77	move.c	FUNCTION_1	FOR_1
0x4000417	            0x31d2	                            xor edx, edx	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x4000419	          0x4531c9	                            xor r9d, r9d	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x400041c	    0x41b801000000	                              mov r8d, 1	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x4000422	          0x4889e1	                            mov rcx, rsp	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x4000425	          0x4889de	                            mov rsi, rbx	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x4000428	          0x4889ef	                            mov rdi, rbp	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x400042b	        0x48891c24	                    mov qword [rsp], rbx	        80	move.c	FUNCTION_1	FOR_1
0x400042f	    0x41bc01000000	                             mov r12d, 1	        84	move.c	FUNCTION_1	FOR_1	IF_2
0x4000435	      0xe800000000	                          call 0x400043a	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x400043a	            0x85c0	                           test eax, eax	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x400043c	      0xba01000000	                              mov edx, 1	        85	move.c	FUNCTION_1	FOR_1	IF_2
0x4000441	            0x7516	                           jne 0x4000459	        82	move.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x4000443	        0x48395d78	            cmp qword [rbp + 0x78], rbx 	        90	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0x4000447	          0x4889de	                            mov rsi, rbx	        91	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0x400044a	          0x4889ef	                            mov rdi, rbp	        91	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0x400044d	            0x7461	                            je 0x40004b0	        90	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0x400044f	      0xe800000000	                          call 0x4000454	        94	move.c	FUNCTION_1	FOR_1	CALL_4
0x4000454	            0x31d2	                            xor edx, edx	        81	move.c	FUNCTION_1	FOR_1
0x4000456	          0x4189c4	                           mov r12d, eax	        94	move.c	FUNCTION_1	FOR_1	CALL_4
0x4000459	        0x488b4538	            mov rax, qword [rbp + 0x38] 	        97	move.c	FUNCTION_1	FOR_1	IF_4
0x400045d	          0x4839d8	                            cmp rax, rbx	        95	move.c	FUNCTION_1	FOR_1	IF_4
0x4000460	            0x7c91	                            jl 0x40003f3	        95	move.c	FUNCTION_1	FOR_1	IF_4
0x4000462	        0x483b0424	                    cmp rax, qword [rsp]	        97	move.c	FUNCTION_1	FOR_1	IF_4
0x4000466	     0xf8e44ffffff	                           jle 0x40003b0	        97	move.c	FUNCTION_1	FOR_1	IF_4
0x400046c	        0x438d042c	                    lea eax, [r12 + r13]	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x4000470	    0x3b85a0000000	            cmp eax, dword [rbp + 0xa0] 	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x4000476	            0x7e87	                           jle 0x40003ff	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x4000478	    0x8b95b4000000	            mov edx, dword [rbp + 0xb4] 	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x400047e	      0xe9ddfeffff	                           jmp 0x4000360	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x4000483	       0xf1f440000	                   nop dword [rax + rax]	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x4000488	      0xe800000000	                          call 0x400048d	       805	move.c	FUNCTION_25	IF_1	IF_2	CALL_3
0x400048d	            0x85c0	                           test eax, eax	       805	move.c	FUNCTION_25	IF_1	IF_2	CALL_3
0x400048f	            0x750d	                           jne 0x400049e	       805	move.c	FUNCTION_25	IF_1	IF_2	CALL_3
0x4000491	      0xbe23000000	                           mov esi, 0x23	       808	move.c	FUNCTION_25	IF_1	CALL_4
0x4000496	          0x4889ef	                            mov rdi, rbp	       808	move.c	FUNCTION_25	IF_1	CALL_4
0x4000499	      0xe800000000	                          call 0x400049e	       808	move.c	FUNCTION_25	IF_1	CALL_4
0x400049e	    0x8b85b4000000	            mov eax, dword [rbp + 0xb4] 	       808	move.c	FUNCTION_25	IF_1	CALL_4
0x40004a4	      0xe941ffffff	                           jmp 0x40003ea	       808	move.c	FUNCTION_25	IF_1	CALL_4
0x40004a9	     0xf1f80000000	                         nop dword [rax]	       808	move.c	FUNCTION_25	IF_1	CALL_4
0x40004b0	      0xe800000000	                          call 0x40004b5	        91	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0x40004b5	     0x38584000000	             add eax, dword [rbp + 0x84]	        91	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0x40004bb	            0x31d2	                            xor edx, edx	        81	move.c	FUNCTION_1	FOR_1
0x40004bd	          0x4189c4	                           mov r12d, eax	        91	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0x40004c0	            0xeb97	                           jmp 0x4000459	        91	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0x40004c2	    0x660f1f440000	                    nop word [rax + rax]	        91	move.c	FUNCTION_1	FOR_1	ELSE_2	IF_3
0x40004c8	        0x488b4508	                mov rax, qword [rbp + 8]	        77	move.c	FUNCTION_1	FOR_1
0x40004cc	        0x488b5d78	            mov rbx, qword [rbp + 0x78] 	        73	move.c	FUNCTION_1	ELSE_1
0x40004d0	          0x483b18	                    cmp rbx, qword [rax]	        77	move.c	FUNCTION_1	FOR_1
0x40004d3	     0xf8fd4000000	                            jg 0x40005ad	        77	move.c	FUNCTION_1	FOR_1
0x40004d9	          0x4531ed	                          xor r13d, r13d	        74	move.c	FUNCTION_1	ELSE_1
0x40004dc	      0xe936ffffff	                           jmp 0x4000417	        74	move.c	FUNCTION_1	ELSE_1
0x40004e1	     0xf1f80000000	                         nop dword [rax]	        74	move.c	FUNCTION_1	ELSE_1
0x40004e8	    0x8b95b4000000	            mov edx, dword [rbp + 0xb4] 	        74	move.c	FUNCTION_1	ELSE_1
0x40004ee	          0x4189c5	                           mov r13d, eax	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x40004f1	      0xe96afeffff	                           jmp 0x4000360	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x40004f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       111	move.c	FUNCTION_1	FOR_1	IF_5
0x4000500	    0x8b85a0000000	            mov eax, dword [rbp + 0xa0] 	      1789	move.c	FUNCTION_44	ELSE_1
0x4000506	          0x4429e8	                           sub eax, r13d	      1789	move.c	FUNCTION_44	ELSE_1
0x4000509	    0x8985f0000000	            mov dword [rbp + 0xf0], eax 	      1789	move.c	FUNCTION_44	ELSE_1
0x400050f	        0x488b4508	                mov rax, qword [rbp + 8]	      1791	move.c	FUNCTION_44	ELSE_1	IF_2
0x4000513	          0x483918	                    cmp qword [rax], rbx	      1791	move.c	FUNCTION_44	ELSE_1	IF_2
0x4000516	     0xf8c71feffff	                            jl 0x400038d	      1791	move.c	FUNCTION_44	ELSE_1	IF_2
0x400051c	          0x4889de	                            mov rsi, rbx	      1793	move.c	FUNCTION_44	ELSE_1	IF_2	CALL_1
0x400051f	          0x4889ef	                            mov rdi, rbp	      1793	move.c	FUNCTION_44	ELSE_1	IF_2	CALL_1
0x4000522	      0xe800000000	                          call 0x4000527	      1793	move.c	FUNCTION_44	ELSE_1	IF_2	CALL_1
0x4000527	    0x8b95f0000000	            mov edx, dword [rbp + 0xf0] 	      1794	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x400052d	    0x8985f4000000	            mov dword [rbp + 0xf4], eax 	      1793	move.c	FUNCTION_44	ELSE_1	IF_2	CALL_1
0x4000533	            0x39d0	                            cmp eax, edx	      1794	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x4000535	            0x7c69	                            jl 0x40005a0	      1794	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x4000537	    0x8995f4000000	            mov dword [rbp + 0xf4], edx 	      1798	move.c	FUNCTION_44	ELSE_1	IF_2	ELSE_2
0x400053d	      0xe941feffff	                           jmp 0x4000383	      1798	move.c	FUNCTION_44	ELSE_1	IF_2	ELSE_2
0x4000542	    0x660f1f440000	                    nop word [rax + rax]	      1798	move.c	FUNCTION_44	ELSE_1	IF_2	ELSE_2
0x4000548	          0x8b4740	            mov eax, dword [rdi + 0x40] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x400054b	    0x3b87c0000000	            cmp eax, dword [rdi + 0xc0] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000551	    0x8b8f94000000	            mov ecx, dword [rdi + 0x94] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000557	            0x7429	                            je 0x4000582	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000559	          0x8b7744	            mov esi, dword [rdi + 0x44] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x400055c	    0x8b95b4000000	            mov edx, dword [rbp + 0xb4] 	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000562	    0x8985c0000000	            mov dword [rbp + 0xc0], eax 	       496	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000568	    0x898dc8000000	            mov dword [rbp + 0xc8], ecx 	       497	move.c	FUNCTION_8	ELSE_1	IF_2
0x400056e	    0x89b5c4000000	            mov dword [rbp + 0xc4], esi 	       499	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000574	          0x83e2f8	                     and edx, 0xfffffff8	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000577	    0x8995b4000000	            mov dword [rbp + 0xb4], edx 	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x400057d	      0xe9bdfdffff	                           jmp 0x400033f	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000582	    0x3b8fc8000000	            cmp ecx, dword [rdi + 0xc8] 	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000588	          0x8b7744	            mov esi, dword [rdi + 0x44] 	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x400058b	            0x75cf	                           jne 0x400055c	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x400058d	    0x3bb7c4000000	            cmp esi, dword [rdi + 0xc4] 	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000593	            0x75c7	                           jne 0x400055c	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x4000595	    0x8b97b4000000	            mov edx, dword [rdi + 0xb4] 	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x400059b	      0xe99ffdffff	                           jmp 0x400033f	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x40005a0	            0x29c2	                            sub edx, eax	      1795	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x40005a2	    0x8995f0000000	            mov dword [rbp + 0xf0], edx 	      1795	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x40005a8	      0xe9e0fdffff	                           jmp 0x400038d	      1795	move.c	FUNCTION_44	ELSE_1	IF_2	IF_3
0x40005ad	          0x83ca60	                            or edx, 0x60	       121	move.c	FUNCTION_1
0x40005b0	    0x48899de80000	            mov qword [rbp + 0xe8], rbx 	       120	move.c	FUNCTION_1
0x40005b7	    0xc785f4000000	               mov dword [rbp + 0xf4], 0	      1783	move.c	FUNCTION_44
0x40005c1	    0x8995b4000000	            mov dword [rbp + 0xb4], edx 	       121	move.c	FUNCTION_1
0x40005c7	      0xe9b7fdffff	                           jmp 0x4000383	       121	move.c	FUNCTION_1
0x40005cc	      0xe800000000	                          call 0x40005d1	       124	move.c	FUNCTION_1
validate_cline_row	SWITCH,0:WHILE,0:ELSE,0:functions,0:FOR,0:CALL,3:IF,1:DO,0	455
0x4004a20	            0x4157	                                push r15	       645	move.c	FUNCTION_22
0x4004a22	            0x4156	                                push r14	       645	move.c	FUNCTION_22
0x4004a24	      0xbf01000000	                              mov edi, 1	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x4004a29	            0x4155	                                push r13	       645	move.c	FUNCTION_22
0x4004a2b	            0x4154	                                push r12	       645	move.c	FUNCTION_22
0x4004a2d	              0x55	                                push rbp	       645	move.c	FUNCTION_22
0x4004a2e	              0x53	                                push rbx	       645	move.c	FUNCTION_22
0x4004a2f	        0x4883ec38	                           sub rsp, 0x38	       645	move.c	FUNCTION_22
0x4004a33	    0x488b1d000000	            mov rbx, qword [0x04004a3a] 	       177	move.c	FUNCTION_4
0x4004a3a	    0x64488b042528	                mov rax, qword fs:[0x28]	       645	move.c	FUNCTION_22
0x4004a43	      0x4889442428	             mov qword [rsp + 0x28], rax	       645	move.c	FUNCTION_22
0x4004a48	            0x31c0	                            xor eax, eax	       645	move.c	FUNCTION_22
0x4004a4a	      0xe800000000	                          call 0x4004a4f	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x4004a4f	            0x85c0	                           test eax, eax	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x4004a51	    0x488b3d000000	            mov rdi, qword [0x04004a58] 	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x4004a58	            0x7410	                            je 0x4004a6a	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x4004a5a	    0x448b8fa00000	            mov r9d, dword [rdi + 0xa0] 	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x4004a61	          0x4585c9	                           test r9d, r9d	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x4004a64	     0xf85c6000000	                           jne 0x4004b30	       182	move.c	FUNCTION_4	IF_1	CALL_1
0x4004a6a	    0x8b87b4000000	            mov eax, dword [rdi + 0xb4] 	       186	move.c	FUNCTION_4	IF_1
0x4004a70	        0x488b5738	            mov rdx, qword [rdi + 0x38] 	       184	move.c	FUNCTION_4	IF_1
0x4004a74	    0x8b8f94000000	            mov ecx, dword [rdi + 0x94] 	       184	move.c	FUNCTION_4	IF_1
0x4004a7a	    0x48c787500500	              mov qword [rdi + 0x550], 1	       187	move.c	FUNCTION_4	IF_1
0x4004a85	          0x83c860	                            or eax, 0x60	       186	move.c	FUNCTION_4	IF_1
0x4004a88	        0x48895778	             mov qword [rdi + 0x78], rdx	       184	move.c	FUNCTION_4	IF_1
0x4004a8c	    0x488997e80000	             mov qword [rdi + 0xe8], rdx	       185	move.c	FUNCTION_4	IF_1
0x4004a93	    0x8987b4000000	             mov dword [rdi + 0xb4], eax	       186	move.c	FUNCTION_4	IF_1
0x4004a99	    0x483997b80000	            cmp qword [rdi + 0xb8], rdx 	       481	move.c	FUNCTION_8	IF_1
0x4004aa0	            0x7456	                            je 0x4004af8	       481	move.c	FUNCTION_8	IF_1
0x4004aa2	        0x4c8b4f38	              mov r9, qword [rdi + 0x38]	       485	move.c	FUNCTION_8	IF_1
0x4004aa6	        0x4c8b5740	            mov r10, qword [rdi + 0x40] 	       485	move.c	FUNCTION_8	IF_1
0x4004aaa	            0x2460	                            and al, 0x60	       483	move.c	FUNCTION_8	IF_1
0x4004aac	    0x8987b4000000	             mov dword [rdi + 0xb4], eax	       483	move.c	FUNCTION_8	IF_1
0x4004ab2	    0x898fc8000000	             mov dword [rdi + 0xc8], ecx	       486	move.c	FUNCTION_8	IF_1
0x4004ab8	    0x4c898fb80000	              mov qword [rdi + 0xb8], r9	       485	move.c	FUNCTION_8	IF_1
0x4004abf	    0x4c8997c00000	             mov qword [rdi + 0xc0], r10	       485	move.c	FUNCTION_8	IF_1
0x4004ac6	            0xa810	                           test al, 0x10	       651	move.c	FUNCTION_22	IF_1
0x4004ac8	            0x7505	                           jne 0x4004acf	       651	move.c	FUNCTION_22	IF_1
0x4004aca	      0xe811bbffff	                      call sym.curs_rows	       652	move.c	FUNCTION_22	CALL_3
0x4004acf	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       653	move.c	FUNCTION_22
0x4004ad4	    0x644833042528	                xor rax, qword fs:[0x28]	       653	move.c	FUNCTION_22
0x4004add	     0xf859e070000	                           jne 0x4005281	       653	move.c	FUNCTION_22
0x4004ae3	        0x4883c438	                           add rsp, 0x38	       653	move.c	FUNCTION_22
0x4004ae7	              0x5b	                                 pop rbx	       653	move.c	FUNCTION_22
0x4004ae8	              0x5d	                                 pop rbp	       653	move.c	FUNCTION_22
0x4004ae9	            0x415c	                                 pop r12	       653	move.c	FUNCTION_22
0x4004aeb	            0x415d	                                 pop r13	       653	move.c	FUNCTION_22
0x4004aed	            0x415e	                                 pop r14	       653	move.c	FUNCTION_22
0x4004aef	            0x415f	                                 pop r15	       653	move.c	FUNCTION_22
0x4004af1	              0xc3	                                     ret	       653	move.c	FUNCTION_22
0x4004af2	    0x660f1f440000	                    nop word [rax + rax]	       653	move.c	FUNCTION_22
0x4004af8	          0x8b5740	            mov edx, dword [rdi + 0x40] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004afb	    0x3b97c0000000	            cmp edx, dword [rdi + 0xc0] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004b01	     0xf8419030000	                            je 0x4004e20	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004b07	          0x8b7744	            mov esi, dword [rdi + 0x44] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004b0a	          0x83e0f8	                     and eax, 0xfffffff8	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004b0d	    0x8997c0000000	             mov dword [rdi + 0xc0], edx	       496	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004b13	    0x898fc8000000	             mov dword [rdi + 0xc8], ecx	       497	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004b19	    0x8987b4000000	             mov dword [rdi + 0xb4], eax	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004b1f	    0x89b7c4000000	             mov dword [rdi + 0xc4], esi	       499	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004b25	            0xeb9f	                           jmp 0x4004ac6	       499	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004b27	    0x660f1f840000	                    nop word [rax + rax]	       499	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004b30	        0x488b5738	            mov rdx, qword [rdi + 0x38] 	       481	move.c	FUNCTION_8	IF_1
0x4004b34	    0x483b97b80000	            cmp rdx, qword [rdi + 0xb8] 	       481	move.c	FUNCTION_8	IF_1
0x4004b3b	     0xf84ff020000	                            je 0x4004e40	       481	move.c	FUNCTION_8	IF_1
0x4004b41	    0x8b87b4000000	            mov eax, dword [rdi + 0xb4] 	       483	move.c	FUNCTION_8	IF_1
0x4004b47	        0x4c8b4f38	              mov r9, qword [rdi + 0x38]	       485	move.c	FUNCTION_8	IF_1
0x4004b4b	        0x4c8b5740	            mov r10, qword [rdi + 0x40] 	       485	move.c	FUNCTION_8	IF_1
0x4004b4f	    0x8b8f94000000	            mov ecx, dword [rdi + 0x94] 	       486	move.c	FUNCTION_8	IF_1
0x4004b55	            0x2460	                            and al, 0x60	       483	move.c	FUNCTION_8	IF_1
0x4004b57	    0x4c898fb80000	              mov qword [rdi + 0xb8], r9	       485	move.c	FUNCTION_8	IF_1
0x4004b5e	    0x8987b4000000	             mov dword [rdi + 0xb4], eax	       483	move.c	FUNCTION_8	IF_1
0x4004b64	    0x4c8997c00000	             mov qword [rdi + 0xc0], r10	       485	move.c	FUNCTION_8	IF_1
0x4004b6b	    0x898fc8000000	             mov dword [rdi + 0xc8], ecx	       486	move.c	FUNCTION_8	IF_1
0x4004b71	            0xa880	                           test al, 0x80	       192	move.c	FUNCTION_4	IF_2
0x4004b73	     0xf8520ffffff	                           jne 0x4004a99	       192	move.c	FUNCTION_4	IF_2
0x4004b79	    0x8b0500000000	            mov eax, dword [0x04004b7f] 	       197	move.c	FUNCTION_4	IF_3
0x4004b7f	            0x85c0	                           test eax, eax	       197	move.c	FUNCTION_4	IF_3
0x4004b81	            0x7e0c	                           jle 0x4004b8f	       197	move.c	FUNCTION_4	IF_3
0x4004b83	          0x83e801	                              sub eax, 1	       198	move.c	FUNCTION_4	IF_3
0x4004b86	            0x4898	                                    cdqe	       198	move.c	FUNCTION_4	IF_3
0x4004b88	    0x488905000000	            mov qword [0x04004b8f], rax 	       198	move.c	FUNCTION_4	IF_3
0x4004b8f	    0x488b05000000	            mov rax, qword [0x04004b96] 	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x4004b96	        0x488b6f78	            mov rbp, qword [rdi + 0x78] 	       201	move.c	FUNCTION_4
0x4004b9a	    0x448ba7840000	           mov r12d, dword [rdi + 0x84] 	       203	move.c	FUNCTION_4
0x4004ba1	          0x4c8b28	                    mov r13, qword [rax]	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x4004ba4	          0x4889ee	                            mov rsi, rbp	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x4004ba7	        0x4983fd01	                              cmp r13, 1	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x4004bab	     0xf8424040000	                            je 0x4004fd5	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x4004bb1	        0x4883fe01	                              cmp rsi, 1	       225	move.c	FUNCTION_4	ELSE_1	IF_6
0x4004bb5	     0xf8edd020000	                           jle 0x4004e98	       225	move.c	FUNCTION_4	ELSE_1	IF_6
0x4004bbb	        0x48397738	            cmp qword [rdi + 0x38], rsi 	       230	move.c	FUNCTION_4	ELSE_1	IF_6	IF_7
0x4004bbf	     0xf8dbb020000	                           jge 0x4004e80	       230	move.c	FUNCTION_4	ELSE_1	IF_6	IF_7
0x4004bc5	    0x8b87a0000000	            mov eax, dword [rdi + 0xa0] 	       244	move.c	FUNCTION_4	ELSE_1	IF_10
0x4004bcb	          0x4189c5	                           mov r13d, eax	       244	move.c	FUNCTION_4	ELSE_1	IF_10
0x4004bce	        0x41c1ed1f	                          shr r13d, 0x1f	       244	move.c	FUNCTION_4	ELSE_1	IF_10
0x4004bd2	          0x4401e8	                           add eax, r13d	       244	move.c	FUNCTION_4	ELSE_1	IF_10
0x4004bd5	            0xd1f8	                              sar eax, 1	       244	move.c	FUNCTION_4	ELSE_1	IF_10
0x4004bd7	        0x448d68ff	                     lea r13d, [rax - 1]	       244	move.c	FUNCTION_4	ELSE_1	IF_10
0x4004bdb	      0xb802000000	                              mov eax, 2	       246	move.c	FUNCTION_4	ELSE_1	IF_10	IF_11
0x4004be0	        0x4183fd01	                             cmp r13d, 1	       246	move.c	FUNCTION_4	ELSE_1	IF_10	IF_11
0x4004be4	        0x440f4ee8	                        cmovle r13d, eax	       246	move.c	FUNCTION_4	ELSE_1	IF_10	IF_11
0x4004be8	      0xe800000000	                          call 0x4004bed	       249	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	CALL_7
0x4004bed	            0x85c0	                           test eax, eax	       249	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	CALL_7
0x4004bef	     0xf841b030000	                            je 0x4004f10	       249	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	CALL_7
0x4004bf5	    0x488b15000000	            mov rdx, qword [0x04004bfc] 	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4004bfc	        0x488b4278	            mov rax, qword [rdx + 0x78] 	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4004c00	    0x480305000000	             add rax, qword [0x04004c07]	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4004c07	        0x488b7a38	            mov rdi, qword [rdx + 0x38] 	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4004c0b	          0x4839c7	                            cmp rdi, rax	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4004c0e	      0x48897c2408	                mov qword [rsp + 8], rdi	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4004c13	            0x7d6c	                           jge 0x4004c81	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4004c15	    0x488b05000000	            mov rax, qword [0x04004c1c] 	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x4004c1c	          0x483b38	                    cmp rdi, qword [rax]	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x4004c1f	            0x7d60	                           jge 0x4004c81	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x4004c21	    0x41bf01000000	                             mov r15d, 1	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x4004c27	      0x4c8d742408	                      lea r14, [rsp + 8]	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x4004c2c	            0xeb17	                           jmp 0x4004c45	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x4004c2e	            0x6690	                                     nop	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x4004c30	    0x488b05000000	            mov rax, qword [0x04004c37] 	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x4004c37	        0x4183c701	                             add r15d, 1	       258	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4004c3b	          0x483938	                    cmp qword [rax], rdi	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x4004c3e	            0x7e38	                           jle 0x4004c78	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x4004c40	          0x4539ef	                          cmp r15d, r13d	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x4004c43	            0x7d33	                           jge 0x4004c78	       260	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	IF_13
0x4004c45	          0x4c89f2	                            mov rdx, r14	       262	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	CALL_8
0x4004c48	            0x31f6	                            xor esi, esi	       262	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	CALL_8
0x4004c4a	      0xe800000000	                          call 0x4004c4f	       262	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1	CALL_8
0x4004c4f	      0x488b442408	                mov rax, qword [rsp + 8]	       256	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4004c54	    0x488b15000000	            mov rdx, qword [0x04004c5b] 	       256	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4004c5b	        0x488d7801	                      lea rdi, [rax + 1]	       256	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4004c5f	    0x488b05000000	            mov rax, qword [0x04004c66] 	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4004c66	        0x48034278	             add rax, qword [rdx + 0x78]	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4004c6a	      0x48897c2408	                mov qword [rsp + 8], rdi	       256	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4004c6f	          0x4839c7	                            cmp rdi, rax	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4004c72	            0x7cbc	                            jl 0x4004c30	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4004c74	         0xf1f4000	                         nop dword [rax]	       255	move.c	FUNCTION_4	ELSE_1	IF_10	IF_12	FOR_1
0x4004c78	          0x4539fd	                          cmp r13d, r15d	       272	move.c	FUNCTION_4	ELSE_1	IF_10	IF_14
0x4004c7b	     0xf8e5f020000	                           jle 0x4004ee0	       272	move.c	FUNCTION_4	ELSE_1	IF_10	IF_14
0x4004c81	    0x488b3d000000	            mov rdi, qword [0x04004c88] 	       417	move.c	FUNCTION_5	IF_1
0x4004c88	          0x4885ff	                           test rdi, rdi	       417	move.c	FUNCTION_5	IF_1
0x4004c8b	     0xf8867030000	                            js 0x4004ff8	       417	move.c	FUNCTION_5	IF_1
0x4004c91	            0x31f6	                            xor esi, esi	       276	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_4	CALL_11
0x4004c93	      0xe800000000	                          call 0x4004c98	       276	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_4	CALL_11
0x4004c98	    0x488b3d000000	            mov rdi, qword [0x04004c9f] 	       301	move.c	FUNCTION_4	IF_15	IF_16
0x4004c9f	    0xf687b4000000	           test byte [rdi + 0xb4], 0x60 	       590	move.c	FUNCTION_16	IF_1
0x4004ca6	     0xf84b4040000	                            je 0x4005160	       590	move.c	FUNCTION_16	IF_1
0x4004cac	    0x488b15000000	            mov rdx, qword [0x04004cb3] 	       304	move.c	FUNCTION_4	IF_15	IF_17
0x4004cb3	    0x488b87e80000	            mov rax, qword [rdi + 0xe8] 	       304	move.c	FUNCTION_4	IF_15	IF_17
0x4004cba	          0x483b02	                    cmp rax, qword [rdx]	       304	move.c	FUNCTION_4	IF_15	IF_17
0x4004cbd	     0xf8f2b020000	                            jg 0x4004eee	       304	move.c	FUNCTION_4	IF_15	IF_17
0x4004cc3	        0x488b4f38	            mov rcx, qword [rdi + 0x38] 	       306	move.c	FUNCTION_4	IF_15	IF_17	IF_18
0x4004cc7	          0x4839c8	                            cmp rax, rcx	       306	move.c	FUNCTION_4	IF_15	IF_17	IF_18
0x4004cca	     0xf8f59030000	                            jg 0x4005029	       306	move.c	FUNCTION_4	IF_15	IF_17	IF_18
0x4004cd0	      0xe800000000	                          call 0x4004cd5	       353	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	CALL_17
0x4004cd5	            0x85c0	                           test eax, eax	       353	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	CALL_17
0x4004cd7	    0x488b15000000	            mov rdx, qword [0x04004cde] 	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4004cde	     0xf842c050000	                            je 0x4005210	       353	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	CALL_17
0x4004ce4	    0x488b82e80000	            mov rax, qword [rdx + 0xe8] 	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4004ceb	    0x482b05000000	             sub rax, qword [0x04004cf2]	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4004cf2	        0x488b7a38	            mov rdi, qword [rdx + 0x38] 	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4004cf6	          0x4839c7	                            cmp rdi, rax	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4004cf9	      0x48897c2408	                mov qword [rsp + 8], rdi	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4004cfe	     0xf8c82050000	                            jl 0x4005286	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4004d04	          0x4885ff	                           test rdi, rdi	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4004d07	    0x41bd01000000	                             mov r13d, 1	       362	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4004d0d	            0x7e60	                           jle 0x4004d6f	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4004d0f	    0x8b8aa0000000	            mov ecx, dword [rdx + 0xa0] 	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4004d15	            0x85c9	                           test ecx, ecx	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4004d17	            0x7856	                            js 0x4004d6f	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4004d19	      0x4c8d742408	                      lea r14, [rsp + 8]	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4004d1e	            0xeb1d	                           jmp 0x4004d3d	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4004d20	        0x4983c501	                              add r13, 1	       362	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4004d24	          0x4885ff	                           test rdi, rdi	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4004d27	            0x7e46	                           jle 0x4004d6f	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4004d29	    0x8b82a0000000	            mov eax, dword [rdx + 0xa0] 	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4004d2f	          0x83c001	                              add eax, 1	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4004d32	            0x4898	                                    cdqe	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4004d34	          0x4939c5	                            cmp r13, rax	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4004d37	     0xf8fa3010000	                            jg 0x4004ee0	       364	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	IF_24
0x4004d3d	            0x31d2	                            xor edx, edx	       366	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	CALL_18
0x4004d3f	          0x4c89f6	                            mov rsi, r14	       366	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	CALL_18
0x4004d42	      0xe800000000	                          call 0x4004d47	       366	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2	CALL_18
0x4004d47	      0x488b442408	                mov rax, qword [rsp + 8]	       360	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4004d4c	    0x488b15000000	            mov rdx, qword [0x04004d53] 	       360	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4004d53	        0x488d78ff	                      lea rdi, [rax - 1]	       360	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4004d57	    0x488b82e80000	            mov rax, qword [rdx + 0xe8] 	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4004d5e	    0x482b05000000	             sub rax, qword [0x04004d65]	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4004d65	      0x48897c2408	                mov qword [rsp + 8], rdi	       360	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4004d6a	          0x4839c7	                            cmp rdi, rax	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4004d6d	            0x7db1	                           jge 0x4004d20	       359	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23	FOR_2
0x4004d6f	    0x486382a00000	         movsxd rax, dword [rdx + 0xa0] 	       373	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_25
0x4004d76	          0x8d5001	                      lea edx, [rax + 1]	       373	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_25
0x4004d79	          0x4863d2	                         movsxd rdx, edx	       373	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_25
0x4004d7c	          0x4c39ea	                            cmp rdx, r13	       373	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_25
0x4004d7f	     0xf8c5b010000	                            jl 0x4004ee0	       373	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_25
0x4004d85	    0x488b3d000000	            mov rdi, qword [0x04004d8c] 	       417	move.c	FUNCTION_5	IF_1
0x4004d8c	          0x4885ff	                           test rdi, rdi	       417	move.c	FUNCTION_5	IF_1
0x4004d8f	     0xf88bf040000	                            js 0x4005254	       417	move.c	FUNCTION_5	IF_1
0x4004d95	            0x31f6	                            xor esi, esi	       374	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_20
0x4004d97	      0xe800000000	                          call 0x4004d9c	       374	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_20
0x4004d9c	    0x488b3d000000	            mov rdi, qword [0x04004da3] 	       374	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_20
0x4004da3	    0x8b87b4000000	            mov eax, dword [rdi + 0xb4] 	       374	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_20
0x4004da9	        0x4c8b6f78	            mov r13, qword [rdi + 0x78] 	       374	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_20
0x4004dad	           0xf1f00	                         nop dword [rax]	       374	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_20
0x4004db0	             0xc80	                             or al, 0x80	       380	move.c	FUNCTION_4
0x4004db2	          0x4c39ed	                            cmp rbp, r13	       385	move.c	FUNCTION_4	IF_26
0x4004db5	    0x8987b4000000	             mov dword [rdi + 0xb4], eax	       380	move.c	FUNCTION_4
0x4004dbb	     0xf846f010000	                            je 0x4004f30	       385	move.c	FUNCTION_4	IF_26
0x4004dc1	    0x8b8798000000	            mov eax, dword [rdi + 0x98] 	       392	move.c	FUNCTION_4	IF_26	IF_27
0x4004dc7	    0xc70500000000	     mov dword [0x04004dd1], 0xffffffff 	       391	move.c	FUNCTION_4	IF_26
0x4004dd1	            0x85c0	                           test eax, eax	       392	move.c	FUNCTION_4	IF_26	IF_27
0x4004dd3	     0xf8427010000	                            je 0x4004f00	       392	move.c	FUNCTION_4	IF_26	IF_27
0x4004dd9	    0xc78798000000	               mov dword [rdi + 0x98], 0	       394	move.c	FUNCTION_4	IF_26	IF_27
0x4004de3	      0xbf28000000	                           mov edi, 0x28	       395	move.c	FUNCTION_4	IF_26	IF_27	CALL_22
0x4004de8	      0xe800000000	                          call 0x4004ded	       395	move.c	FUNCTION_4	IF_26	IF_27	CALL_22
0x4004ded	    0x488b3d000000	            mov rdi, qword [0x04004df4] 	       400	move.c	FUNCTION_4	IF_26	IF_28
0x4004df4	        0x488b5738	            mov rdx, qword [rdi + 0x38] 	       400	move.c	FUNCTION_4	IF_26	IF_28
0x4004df8	        0x483b5778	            cmp rdx, qword [rdi + 0x78] 	       400	move.c	FUNCTION_4	IF_26	IF_28
0x4004dfc	     0xf846e010000	                            je 0x4004f70	       400	move.c	FUNCTION_4	IF_26	IF_28
0x4004e02	    0x8b87b4000000	            mov eax, dword [rdi + 0xb4] 	       400	move.c	FUNCTION_4	IF_26	IF_28
0x4004e08	    0x8b8f94000000	            mov ecx, dword [rdi + 0x94] 	       400	move.c	FUNCTION_4	IF_26	IF_28
0x4004e0e	          0x4863db	                         movsxd rbx, ebx	       405	move.c	FUNCTION_4
0x4004e11	    0x48891d000000	            mov qword [0x04004e18], rbx 	       405	move.c	FUNCTION_4
0x4004e18	      0xe97cfcffff	                           jmp 0x4004a99	       405	move.c	FUNCTION_4
0x4004e1d	           0xf1f00	                         nop dword [rax]	       405	move.c	FUNCTION_4
0x4004e20	    0x398fc8000000	            cmp dword [rdi + 0xc8], ecx 	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004e26	          0x8b7744	            mov esi, dword [rdi + 0x44] 	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004e29	     0xf85dbfcffff	                           jne 0x4004b0a	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004e2f	    0x3bb7c4000000	            cmp esi, dword [rdi + 0xc4] 	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004e35	     0xf85cffcffff	                           jne 0x4004b0a	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004e3b	      0xe986fcffff	                           jmp 0x4004ac6	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004e40	          0x8b7740	            mov esi, dword [rdi + 0x40] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004e43	    0x3bb7c0000000	            cmp esi, dword [rdi + 0xc0] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004e49	    0x8b8f94000000	            mov ecx, dword [rdi + 0x94] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004e4f	            0x746f	                            je 0x4004ec0	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004e51	        0x448b4744	            mov r8d, dword [rdi + 0x44] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004e55	    0x8b87b4000000	            mov eax, dword [rdi + 0xb4] 	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004e5b	    0x89b7c0000000	             mov dword [rdi + 0xc0], esi	       496	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004e61	    0x898fc8000000	             mov dword [rdi + 0xc8], ecx	       497	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004e67	    0x448987c40000	             mov dword [rdi + 0xc4], r8d	       499	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004e6e	          0x83e0f8	                     and eax, 0xfffffff8	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004e71	    0x8987b4000000	             mov dword [rdi + 0xb4], eax	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004e77	      0xe9f5fcffff	                           jmp 0x4004b71	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004e7c	         0xf1f4000	                         nop dword [rax]	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004e80	      0xe8bbb1ffff	               call sym.check_top_offset	       232	move.c	FUNCTION_4	ELSE_1	IF_6	ELSE_2	IF_8	CALL_5
0x4004e85	            0x85c0	                           test eax, eax	       232	move.c	FUNCTION_4	ELSE_1	IF_6	ELSE_2	IF_8	CALL_5
0x4004e87	    0x488b3d000000	            mov rdi, qword [0x04004e8e] 	       232	move.c	FUNCTION_4	ELSE_1	IF_6	ELSE_2	IF_8	CALL_5
0x4004e8e	     0xf8531fdffff	                           jne 0x4004bc5	       232	move.c	FUNCTION_4	ELSE_1	IF_6	ELSE_2	IF_8	CALL_5
0x4004e94	        0x488b7778	            mov rsi, qword [rdi + 0x78] 	       232	move.c	FUNCTION_4	ELSE_1	IF_6	ELSE_2	IF_8	CALL_5
0x4004e98	    0x448baf840000	           mov r13d, dword [rdi + 0x84] 	       237	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x4004e9f	      0xe800000000	                          call 0x4004ea4	       237	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x4004ea4	          0x4139c5	                           cmp r13d, eax	       237	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x4004ea7	     0xf8ea3000000	                           jle 0x4004f50	       237	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x4004ead	    0x488b3d000000	            mov rdi, qword [0x04004eb4] 	       237	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x4004eb4	      0xe90cfdffff	                           jmp 0x4004bc5	       237	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x4004eb9	     0xf1f80000000	                         nop dword [rax]	       237	move.c	FUNCTION_4	ELSE_1	IF_9	CALL_6
0x4004ec0	    0x3b8fc8000000	            cmp ecx, dword [rdi + 0xc8] 	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004ec6	        0x448b4744	            mov r8d, dword [rdi + 0x44] 	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004eca	            0x7589	                           jne 0x4004e55	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004ecc	    0x443b87c40000	            cmp r8d, dword [rdi + 0xc4] 	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004ed3	            0x7580	                           jne 0x4004e55	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004ed5	    0x8b87b4000000	            mov eax, dword [rdi + 0xb4] 	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004edb	      0xe991fcffff	                           jmp 0x4004b71	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004ee0	            0x31ff	                            xor edi, edi	       376	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_21
0x4004ee2	      0xe800000000	                          call 0x4004ee7	       376	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_21
0x4004ee7	    0x488b3d000000	            mov rdi, qword [0x04004eee] 	       376	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_21
0x4004eee	    0x8b87b4000000	            mov eax, dword [rdi + 0xb4] 	       376	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_21
0x4004ef4	        0x4c8b6f78	            mov r13, qword [rdi + 0x78] 	       376	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_21
0x4004ef8	      0xe9b3feffff	                           jmp 0x4004db0	       376	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_21
0x4004efd	           0xf1f00	                         nop dword [rax]	       376	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	CALL_21
0x4004f00	      0xbf0a000000	                            mov edi, 0xa	       398	move.c	FUNCTION_4	IF_26	CALL_23
0x4004f05	      0xe800000000	                          call 0x4004f0a	       398	move.c	FUNCTION_4	IF_26	CALL_23
0x4004f0a	      0xe9defeffff	                           jmp 0x4004ded	       398	move.c	FUNCTION_4	IF_26	CALL_23
0x4004f0f	              0x90	                                     nop	       398	move.c	FUNCTION_4	IF_26	CALL_23
0x4004f10	    0x488b15000000	            mov rdx, qword [0x04004f17] 	       267	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_3
0x4004f17	    0x4c8b3d000000	            mov r15, qword [0x04004f1e] 	       267	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_3
0x4004f1e	        0x44037a78	            add r15d, dword [rdx + 0x78]	       267	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_3
0x4004f22	        0x442b7a38	            sub r15d, dword [rdx + 0x38]	       267	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_3
0x4004f26	      0xe94dfdffff	                           jmp 0x4004c78	       267	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_3
0x4004f2b	       0xf1f440000	                   nop dword [rax + rax]	       267	move.c	FUNCTION_4	ELSE_1	IF_10	ELSE_3
0x4004f30	    0x443ba7840000	           cmp r12d, dword [rdi + 0x84] 	       387	move.c	FUNCTION_4	IF_26
0x4004f37	     0xf8584feffff	                           jne 0x4004dc1	       387	move.c	FUNCTION_4	IF_26
0x4004f3d	        0x488b5738	            mov rdx, qword [rdi + 0x38] 	       387	move.c	FUNCTION_4	IF_26
0x4004f41	    0x8b8f94000000	            mov ecx, dword [rdi + 0x94] 	       387	move.c	FUNCTION_4	IF_26
0x4004f47	      0xe9c2feffff	                           jmp 0x4004e0e	       387	move.c	FUNCTION_4	IF_26
0x4004f4c	         0xf1f4000	                         nop dword [rax]	       387	move.c	FUNCTION_4	IF_26
0x4004f50	    0x488b05000000	            mov rax, qword [0x04004f57] 	       285	move.c	FUNCTION_4	ELSE_1	ELSE_5	CALL_12
0x4004f57	            0x31d2	                            xor edx, edx	       285	move.c	FUNCTION_4	ELSE_1	ELSE_5	CALL_12
0x4004f59	        0x488b7878	            mov rdi, qword [rax + 0x78] 	       285	move.c	FUNCTION_4	ELSE_1	ELSE_5	CALL_12
0x4004f5d	        0x488d7078	                   lea rsi, [rax + 0x78]	       285	move.c	FUNCTION_4	ELSE_1	ELSE_5	CALL_12
0x4004f61	      0xe800000000	                          call 0x4004f66	       285	move.c	FUNCTION_4	ELSE_1	ELSE_5	CALL_12
0x4004f66	      0xe92dfdffff	                           jmp 0x4004c98	       285	move.c	FUNCTION_4	ELSE_1	ELSE_5	CALL_12
0x4004f6b	       0xf1f440000	                   nop dword [rax + rax]	       285	move.c	FUNCTION_4	ELSE_1	ELSE_5	CALL_12
0x4004f70	    0x483b97b80000	            cmp rdx, qword [rdi + 0xb8] 	       481	move.c	FUNCTION_8	IF_1
0x4004f77	     0xf84f4010000	                            je 0x4005171	       481	move.c	FUNCTION_8	IF_1
0x4004f7d	    0x8b87b4000000	            mov eax, dword [rdi + 0xb4] 	       483	move.c	FUNCTION_8	IF_1
0x4004f83	        0x4c8b4f38	              mov r9, qword [rdi + 0x38]	       485	move.c	FUNCTION_8	IF_1
0x4004f87	        0x4c8b5740	            mov r10, qword [rdi + 0x40] 	       485	move.c	FUNCTION_8	IF_1
0x4004f8b	    0x8b8f94000000	            mov ecx, dword [rdi + 0x94] 	       486	move.c	FUNCTION_8	IF_1
0x4004f91	            0x2460	                            and al, 0x60	       483	move.c	FUNCTION_8	IF_1
0x4004f93	    0x4c898fb80000	              mov qword [rdi + 0xb8], r9	       485	move.c	FUNCTION_8	IF_1
0x4004f9a	    0x8987b4000000	             mov dword [rdi + 0xb4], eax	       483	move.c	FUNCTION_8	IF_1
0x4004fa0	    0x4c8997c00000	             mov qword [rdi + 0xc0], r10	       485	move.c	FUNCTION_8	IF_1
0x4004fa7	    0x898fc8000000	             mov dword [rdi + 0xc8], ecx	       486	move.c	FUNCTION_8	IF_1
0x4004fad	            0x89c6	                            mov esi, eax	       635	move.c	FUNCTION_21	IF_1
0x4004faf	          0x83e603	                              and esi, 3	       635	move.c	FUNCTION_21	IF_1
0x4004fb2	          0x83fe03	                              cmp esi, 3	       635	move.c	FUNCTION_21	IF_1
0x4004fb5	     0xf8453feffff	                            je 0x4004e0e	       635	move.c	FUNCTION_21	IF_1
0x4004fbb	      0xbf01000000	                              mov edi, 1	       636	move.c	FUNCTION_21	CALL_2
0x4004fc0	      0xe800000000	                          call 0x4004fc5	       636	move.c	FUNCTION_21	CALL_2
0x4004fc5	    0x488b3d000000	            mov rdi, qword [0x04004fcc] 	       636	move.c	FUNCTION_21	CALL_2
0x4004fcc	        0x488b5738	            mov rdx, qword [rdi + 0x38] 	       636	move.c	FUNCTION_21	CALL_2
0x4004fd0	      0xe92dfeffff	                           jmp 0x4004e02	       636	move.c	FUNCTION_21	CALL_2
0x4004fd5	      0xbf01000000	                              mov edi, 1	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x4004fda	      0xe800000000	                          call 0x4004fdf	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x4004fdf	          0x803800	                       cmp byte [rax], 0	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x4004fe2	    0x488b3d000000	            mov rdi, qword [0x04004fe9] 	       211	move.c	FUNCTION_4	IF_4	IF_5
0x4004fe9	     0xf84c2010000	                            je 0x40051b1	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x4004fef	        0x488b7778	            mov rsi, qword [rdi + 0x78] 	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x4004ff3	      0xe9b9fbffff	                           jmp 0x4004bb1	       209	move.c	FUNCTION_4	IF_4	CALL_3
0x4004ff8	    0x48638aa00000	         movsxd rcx, dword [rdx + 0xa0] 	       419	move.c	FUNCTION_5
0x4004fff	          0x48f7df	                                 neg rdi	       419	move.c	FUNCTION_5
0x4005002	    0x48ba0bd7a370	          movabs rdx, 0xa3d70a3d70a3d70b	       419	move.c	FUNCTION_5
0x400500c	        0x480fafcf	                           imul rcx, rdi	       419	move.c	FUNCTION_5
0x4005010	          0x4889c8	                            mov rax, rcx	       419	move.c	FUNCTION_5
0x4005013	          0x48f7ea	                                imul rdx	       419	move.c	FUNCTION_5
0x4005016	        0x488d3c0a	                    lea rdi, [rdx + rcx]	       419	move.c	FUNCTION_5
0x400501a	        0x48c1f93f	                           sar rcx, 0x3f	       419	move.c	FUNCTION_5
0x400501e	        0x48c1ff06	                              sar rdi, 6	       419	move.c	FUNCTION_5
0x4005022	            0x29cf	                            sub edi, ecx	       419	move.c	FUNCTION_5
0x4005024	      0xe968fcffff	                           jmp 0x4004c91	       419	move.c	FUNCTION_5
0x4005029	    0x482b05000000	             sub rax, qword [0x04005030]	       308	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x4005030	          0x4839c1	                            cmp rcx, rax	       308	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x4005033	            0x7d18	                           jge 0x400504d	       308	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x4005035	      0xe800000000	                          call 0x400503a	       311	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_14
0x400503a	            0x85c0	                           test eax, eax	       311	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_14
0x400503c	    0x488b3d000000	            mov rdi, qword [0x04005043] 	       311	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_14
0x4005043	     0xf84a5feffff	                            je 0x4004eee	       311	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_14
0x4005049	        0x488b4f38	            mov rcx, qword [rdi + 0x38] 	       311	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_14
0x400504d	      0x488d542410	                   lea rdx, [rsp + 0x10]	       324	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_15
0x4005052	    0x448bb7f00000	           mov r14d, dword [rdi + 0xf0] 	       320	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x4005059	            0x31f6	                            xor esi, esi	       324	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_15
0x400505b	          0x4889cf	                            mov rdi, rcx	       324	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_15
0x400505e	      0x48894c2410	             mov qword [rsp + 0x10], rcx	       321	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x4005063	      0xe800000000	                          call 0x4005068	       324	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	CALL_15
0x4005068	    0x488b3d000000	            mov rdi, qword [0x0400506f] 	       328	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x400506f	    0xc74424180000	               mov dword [rsp + 0x18], 0	       327	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x4005077	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	       330	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x400507f	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       330	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x4005084	    0x4403b7f40000	            add r14d, dword [rdi + 0xf4]	       328	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x400508b	            0xeb34	                           jmp 0x40050c1	       328	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x400508d	           0xf1f00	                         nop dword [rax]	       328	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19
0x4005090	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1585	move.c	FUNCTION_40	ELSE_1
0x4005095	    0x488b15000000	            mov rdx, qword [0x0400509c] 	      1589	move.c	FUNCTION_40	ELSE_1	IF_2
0x400509c	    0xc74424180000	               mov dword [rsp + 0x18], 0	      1587	move.c	FUNCTION_40	ELSE_1
0x40050a4	        0x4883c001	                              add rax, 1	      1585	move.c	FUNCTION_40	ELSE_1
0x40050a8	          0x483b02	                    cmp rax, qword [rdx]	      1589	move.c	FUNCTION_40	ELSE_1	IF_2
0x40050ab	      0x4889442410	             mov qword [rsp + 0x10], rax	      1585	move.c	FUNCTION_40	ELSE_1
0x40050b0	            0x7e6e	                           jle 0x4005120	      1589	move.c	FUNCTION_40	ELSE_1	IF_2
0x40050b2	    0xc744241cffff	     mov dword [rsp + 0x1c], 0x7fffffff 	      1590	move.c	FUNCTION_40	ELSE_1	IF_2
0x40050ba	    0x488b3d000000	            mov rdi, qword [0x040050c1] 	      1590	move.c	FUNCTION_40	ELSE_1	IF_2
0x40050c1	    0x488b97e80000	            mov rdx, qword [rdi + 0xe8] 	       331	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x40050c8	          0x4839c2	                            cmp rdx, rax	       331	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x40050cb	     0xf8e2a010000	                           jle 0x40051fb	       331	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x40050d1	        0x488d7001	                      lea rsi, [rax + 1]	       333	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x40050d5	          0x4839f2	                            cmp rdx, rsi	       333	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x40050d8	            0x7f0e	                            jg 0x40050e8	       333	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x40050da	      0x448b442418	            mov r8d, dword [rsp + 0x18] 	       333	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x40050df	          0x4585c0	                           test r8d, r8d	       333	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x40050e2	     0xf8513010000	                           jne 0x40051fb	       333	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x40050e8	      0x440374241c	            add r14d, dword [rsp + 0x1c]	       337	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1
0x40050ed	          0x4963c6	                        movsxd rax, r14d	       338	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1	IF_20
0x40050f0	    0x483b05000000	            cmp rax, qword [0x040050f7] 	       338	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1	IF_20
0x40050f7	     0xf8df1fdffff	                           jge 0x4004eee	       338	move.c	FUNCTION_4	IF_15	IF_17	IF_18	IF_19	WHILE_1	IF_20
0x40050fd	      0x448b6c2418	           mov r13d, dword [rsp + 0x18] 	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x4005102	      0xe800000000	                          call 0x4005107	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x4005107	          0x4139c5	                           cmp r13d, eax	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x400510a	            0x7d84	                           jge 0x4005090	      1576	move.c	FUNCTION_40	IF_1	CALL_1
0x400510c	      0x8344241801	               add dword [rsp + 0x18], 1	      1579	move.c	FUNCTION_40	IF_1
0x4005111	    0xc744241c0100	               mov dword [rsp + 0x1c], 1	      1580	move.c	FUNCTION_40	IF_1
0x4005119	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1580	move.c	FUNCTION_40	IF_1
0x400511e	            0xeb9a	                           jmp 0x40050ba	      1580	move.c	FUNCTION_40	IF_1
0x4005120	      0x488d542410	                   lea rdx, [rsp + 0x10]	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4005125	            0x31f6	                            xor esi, esi	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4005127	          0x4889c7	                            mov rdi, rax	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x400512a	      0xe800000000	                          call 0x400512f	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x400512f	            0x85c0	                           test eax, eax	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4005131	            0x7412	                            je 0x4005145	      1593	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3	CALL_2
0x4005133	    0xc744241c0100	               mov dword [rsp + 0x1c], 1	      1595	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3
0x400513b	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1595	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3
0x4005140	      0xe975ffffff	                           jmp 0x40050ba	      1595	move.c	FUNCTION_40	ELSE_1	ELSE_2	IF_3
0x4005145	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x400514a	      0xe800000000	                          call 0x400514f	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x400514f	        0x8944241c	             mov dword [rsp + 0x1c], eax	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4005153	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4005158	      0xe95dffffff	                           jmp 0x40050ba	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x400515d	           0xf1f00	                         nop dword [rax]	      1599	move.c	FUNCTION_40	ELSE_1	ELSE_3	CALL_3
0x4005160	      0xe87bb1ffff	                   call sym.comp_botline	       591	move.c	FUNCTION_16	CALL_1
0x4005165	    0x488b3d000000	            mov rdi, qword [0x0400516c] 	       591	move.c	FUNCTION_16	CALL_1
0x400516c	      0xe93bfbffff	                           jmp 0x4004cac	       591	move.c	FUNCTION_16	CALL_1
0x4005171	          0x8b7740	            mov esi, dword [rdi + 0x40] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4005174	    0x3bb7c0000000	            cmp esi, dword [rdi + 0xc0] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x400517a	    0x8b8f94000000	            mov ecx, dword [rdi + 0x94] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4005180	     0xf84a6000000	                            je 0x400522c	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4005186	        0x448b4744	            mov r8d, dword [rdi + 0x44] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x400518a	    0x8b87b4000000	            mov eax, dword [rdi + 0xb4] 	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x4005190	    0x89b7c0000000	             mov dword [rdi + 0xc0], esi	       496	move.c	FUNCTION_8	ELSE_1	IF_2
0x4005196	    0x898fc8000000	             mov dword [rdi + 0xc8], ecx	       497	move.c	FUNCTION_8	ELSE_1	IF_2
0x400519c	    0x448987c40000	             mov dword [rdi + 0xc4], r8d	       499	move.c	FUNCTION_8	ELSE_1	IF_2
0x40051a3	          0x83e0f8	                     and eax, 0xfffffff8	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x40051a6	    0x8987b4000000	             mov dword [rdi + 0xb4], eax	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x40051ac	      0xe9fcfdffff	                           jmp 0x4004fad	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x40051b1	      0x48837f7801	               cmp qword [rdi + 0x78], 1	       211	move.c	FUNCTION_4	IF_4	IF_5
0x40051b6	            0x7411	                            je 0x40051c9	       211	move.c	FUNCTION_4	IF_4	IF_5
0x40051b8	      0xbf28000000	                           mov edi, 0x28	       212	move.c	FUNCTION_4	IF_4	CALL_4
0x40051bd	      0xe800000000	                          call 0x40051c2	       212	move.c	FUNCTION_4	IF_4	CALL_4
0x40051c2	    0x488b3d000000	            mov rdi, qword [0x040051c9] 	       212	move.c	FUNCTION_4	IF_4	CALL_4
0x40051c9	    0x8b87b4000000	            mov eax, dword [rdi + 0xb4] 	       215	move.c	FUNCTION_4	IF_4
0x40051cf	    0x48c747780100	               mov qword [rdi + 0x78], 1	       213	move.c	FUNCTION_4	IF_4
0x40051d7	    0x48c787e80000	               mov qword [rdi + 0xe8], 2	       214	move.c	FUNCTION_4	IF_4
0x40051e2	    0x48c787500500	              mov qword [rdi + 0x550], 1	       216	move.c	FUNCTION_4	IF_4
0x40051ed	          0x83c860	                            or eax, 0x60	       215	move.c	FUNCTION_4	IF_4
0x40051f0	    0x8987b4000000	             mov dword [rdi + 0xb4], eax	       215	move.c	FUNCTION_4	IF_4
0x40051f6	      0xe9b5fbffff	                           jmp 0x4004db0	       215	move.c	FUNCTION_4	IF_4
0x40051fb	          0x4d63f6	                        movsxd r14, r14d	       350	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22
0x40051fe	    0x4c3b35000000	            cmp r14, qword [0x04005205] 	       350	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22
0x4005205	     0xf8de3fcffff	                           jge 0x4004eee	       350	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22
0x400520b	      0xe9c0faffff	                           jmp 0x4004cd0	       350	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22
0x4005210	        0x488b4238	            mov rax, qword [rdx + 0x38] 	       371	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	ELSE_7
0x4005214	    0x482b82e80000	             sub rax, qword [rdx + 0xe8]	       371	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	ELSE_7
0x400521b	    0x488b0d000000	            mov rcx, qword [0x04005222] 	       371	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	ELSE_7
0x4005222	      0x4c8d6c0801	                lea r13, [rax + rcx + 1]	       371	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	ELSE_7
0x4005227	      0xe943fbffff	                           jmp 0x4004d6f	       371	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	ELSE_7
0x400522c	    0x3b8fc8000000	            cmp ecx, dword [rdi + 0xc8] 	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x4005232	        0x448b4744	            mov r8d, dword [rdi + 0x44] 	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x4005236	     0xf854effffff	                           jne 0x400518a	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x400523c	    0x443b87c40000	            cmp r8d, dword [rdi + 0xc4] 	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x4005243	     0xf8541ffffff	                           jne 0x400518a	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x4005249	    0x8b87b4000000	            mov eax, dword [rdi + 0xb4] 	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x400524f	      0xe959fdffff	                           jmp 0x4004fad	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x4005254	          0x48f7df	                                 neg rdi	       419	move.c	FUNCTION_5
0x4005257	    0x48ba0bd7a370	          movabs rdx, 0xa3d70a3d70a3d70b	       419	move.c	FUNCTION_5
0x4005261	          0x4889f9	                            mov rcx, rdi	       419	move.c	FUNCTION_5
0x4005264	        0x480fafc8	                           imul rcx, rax	       419	move.c	FUNCTION_5
0x4005268	          0x4889c8	                            mov rax, rcx	       419	move.c	FUNCTION_5
0x400526b	          0x48f7ea	                                imul rdx	       419	move.c	FUNCTION_5
0x400526e	        0x488d3c0a	                    lea rdi, [rdx + rcx]	       419	move.c	FUNCTION_5
0x4005272	        0x48c1f93f	                           sar rcx, 0x3f	       419	move.c	FUNCTION_5
0x4005276	        0x48c1ff06	                              sar rdi, 6	       419	move.c	FUNCTION_5
0x400527a	            0x29cf	                            sub edi, ecx	       419	move.c	FUNCTION_5
0x400527c	      0xe914fbffff	                           jmp 0x4004d95	       419	move.c	FUNCTION_5
0x4005281	      0xe800000000	                          call 0x4005286	       653	move.c	FUNCTION_22
0x4005286	          0x4531ed	                          xor r13d, r13d	       358	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23
0x4005289	      0xe9e1faffff	                           jmp 0x4004d6f	       358	move.c	FUNCTION_4	IF_15	IF_17	ELSE_6	IF_22	IF_23
changed_cline_bef_curs	SWITCH,0:WHILE,0:ELSE,0:functions,0:FOR,0:CALL,0:IF,0:DO,0	3
0x4001030	    0x488b05000000	            mov rax, qword [0x04001037] 	       554	move.c	FUNCTION_12
0x4001037	    0x81a0b4000000	      and dword [rax + 0xb4], 0xffffff70	       554	move.c	FUNCTION_12
0x4001041	              0xc3	                                     ret	       554	move.c	FUNCTION_12
scroll_cursor_top	SWITCH,0:WHILE,1:ELSE,4:functions,0:FOR,0:CALL,10:IF,15:DO,0	212
0x4001e30	            0x4157	                                push r15	      1643	move.c	FUNCTION_43
0x4001e32	            0x4156	                                push r14	      1643	move.c	FUNCTION_43
0x4001e34	          0x4189ff	                           mov r15d, edi	      1643	move.c	FUNCTION_43
0x4001e37	            0x4155	                                push r13	      1643	move.c	FUNCTION_43
0x4001e39	            0x4154	                                push r12	      1643	move.c	FUNCTION_43
0x4001e3b	              0x55	                                push rbp	      1643	move.c	FUNCTION_43
0x4001e3c	              0x53	                                push rbx	      1643	move.c	FUNCTION_43
0x4001e3d	        0x4883ec48	                           sub rsp, 0x48	      1643	move.c	FUNCTION_43
0x4001e41	    0x64488b042528	                mov rax, qword fs:[0x28]	      1643	move.c	FUNCTION_43
0x4001e4a	      0x4889442438	             mov qword [rsp + 0x38], rax	      1643	move.c	FUNCTION_43
0x4001e4f	            0x31c0	                            xor eax, eax	      1643	move.c	FUNCTION_43
0x4001e51	    0x488b05000000	            mov rax, qword [0x04001e58] 	      1650	move.c	FUNCTION_43
0x4001e58	        0x89742418	             mov dword [rsp + 0x18], esi	      1643	move.c	FUNCTION_43
0x4001e5c	        0x488b5878	            mov rbx, qword [rax + 0x78] 	      1650	move.c	FUNCTION_43
0x4001e60	    0x8b8084000000	            mov eax, dword [rax + 0x84] 	      1652	move.c	FUNCTION_43
0x4001e66	        0x8944241c	             mov dword [rsp + 0x1c], eax	      1652	move.c	FUNCTION_43
0x4001e6a	    0x8b0500000000	            mov eax, dword [0x04001e70] 	      1658	move.c	FUNCTION_43	IF_1
0x4001e70	      0x48895c2410	             mov qword [rsp + 0x10], rbx	      1650	move.c	FUNCTION_43
0x4001e75	      0xbb00000000	                              mov ebx, 0	      1644	move.c	FUNCTION_43
0x4001e7a	            0x85c0	                           test eax, eax	      1655	move.c	FUNCTION_43
0x4001e7c	        0x448d70ff	                     lea r14d, [rax - 1]	      1655	move.c	FUNCTION_43
0x4001e80	    0x440f4e350000	         cmovle r14d, dword [0x04001e88]	      1655	move.c	FUNCTION_43
0x4001e88	      0xe853e3ffff	               call sym.validate_cheight	      1669	move.c	FUNCTION_43	CALL_1
0x4001e8d	    0x488b05000000	            mov rax, qword [0x04001e94] 	      1670	move.c	FUNCTION_43
0x4001e94	      0x488d542430	                   lea rdx, [rsp + 0x30]	      1675	move.c	FUNCTION_43	IF_3	CALL_2
0x4001e99	      0x488d742428	                   lea rsi, [rsp + 0x28]	      1675	move.c	FUNCTION_43	IF_3	CALL_2
0x4001e9e	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      1671	move.c	FUNCTION_43	IF_2
0x4001ea2	        0x483b7878	            cmp rdi, qword [rax + 0x78] 	      1644	move.c	FUNCTION_43
0x4001ea6	    0x8ba8cc000000	            mov ebp, dword [rax + 0xcc] 	      1670	move.c	FUNCTION_43
0x4001eac	           0xf4cdd	                          cmovl ebx, ebp	      1644	move.c	FUNCTION_43
0x4001eaf	      0xe800000000	                          call 0x4001eb4	      1675	move.c	FUNCTION_43	IF_3	CALL_2
0x4001eb4	            0x85c0	                           test eax, eax	      1675	move.c	FUNCTION_43	IF_3	CALL_2
0x4001eb6	     0xf846c020000	                            je 0x4002128	      1675	move.c	FUNCTION_43	IF_3	CALL_2
0x4001ebc	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1677	move.c	FUNCTION_43	IF_3
0x4001ec1	    0x488b3d000000	            mov rdi, qword [0x04001ec8] 	      1677	move.c	FUNCTION_43	IF_3
0x4001ec8	        0x4c8d68ff	                      lea r13, [rax - 1]	      1677	move.c	FUNCTION_43	IF_3
0x4001ecc	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      1678	move.c	FUNCTION_43	IF_3
0x4001ed1	        0x488b7738	            mov rsi, qword [rdi + 0x38] 	      1678	move.c	FUNCTION_43	IF_3
0x4001ed5	        0x4883c001	                              add rax, 1	      1678	move.c	FUNCTION_43	IF_3
0x4001ed9	      0x4c896c2428	             mov qword [rsp + 0x28], r13	      1678	move.c	FUNCTION_43	IF_3
0x4001ede	      0x4889442430	             mov qword [rsp + 0x30], rax	      1678	move.c	FUNCTION_43	IF_3
0x4001ee3	        0x4983c501	                              add r13, 1	      1686	move.c	FUNCTION_43
0x4001ee7	      0xe800000000	                          call 0x4001eec	      1692	move.c	FUNCTION_43	CALL_3
0x4001eec	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      1699	move.c	FUNCTION_43	WHILE_1
0x4001ef1	          0x4189c4	                           mov r12d, eax	      1692	move.c	FUNCTION_43	CALL_3
0x4001ef4	          0x4885ff	                           test rdi, rdi	      1699	move.c	FUNCTION_43	WHILE_1
0x4001ef7	            0x7f6f	                            jg 0x4001f68	      1699	move.c	FUNCTION_43	WHILE_1
0x4001ef9	      0xe98b020000	                           jmp 0x4002189	      1699	move.c	FUNCTION_43	WHILE_1
0x4001efe	            0x6690	                                     nop	      1699	move.c	FUNCTION_43	WHILE_1
0x4001f00	        0x468d0421	                    lea r8d, [rcx + r12]	      1709	move.c	FUNCTION_43	WHILE_1	IF_5
0x4001f04	             0x1cd	                            add ebp, ecx	      1708	move.c	FUNCTION_43	WHILE_1
0x4001f06	          0x4539c6	                           cmp r14d, r8d	      1709	move.c	FUNCTION_43	WHILE_1	IF_5
0x4001f09	            0x7c15	                            jl 0x4001f20	      1709	move.c	FUNCTION_43	WHILE_1	IF_5
0x4001f0b	    0x488b05000000	            mov rax, qword [0x04001f12] 	      1709	move.c	FUNCTION_43	WHILE_1	IF_5
0x4001f12	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      1709	move.c	FUNCTION_43	WHILE_1	IF_5
0x4001f17	          0x483938	                    cmp qword [rax], rdi	      1709	move.c	FUNCTION_43	WHILE_1	IF_5
0x4001f1a	     0xf8f70010000	                            jg 0x4002090	      1709	move.c	FUNCTION_43	WHILE_1	IF_5
0x4001f20	    0x488b15000000	            mov rdx, qword [0x04001f27] 	      1719	move.c	FUNCTION_43	WHILE_1	IF_7
0x4001f27	    0x3baaa0000000	            cmp ebp, dword [rdx + 0xa0] 	      1719	move.c	FUNCTION_43	WHILE_1	IF_7
0x4001f2d	     0xf8f9d010000	                            jg 0x40020d0	      1719	move.c	FUNCTION_43	WHILE_1	IF_7
0x4001f33	        0x488b7278	            mov rsi, qword [rdx + 0x78] 	      1721	move.c	FUNCTION_43	WHILE_1	IF_8
0x4001f37	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1721	move.c	FUNCTION_43	WHILE_1	IF_8
0x4001f3c	             0x1d9	                            add ecx, ebx	      1722	move.c	FUNCTION_43	WHILE_1	IF_8
0x4001f3e	          0x4839c6	                            cmp rsi, rax	      1722	move.c	FUNCTION_43	WHILE_1	IF_8
0x4001f41	           0xf4fd9	                          cmovg ebx, ecx	      1722	move.c	FUNCTION_43	WHILE_1	IF_8
0x4001f44	          0x4439fb	                           cmp ebx, r15d	      1727	move.c	FUNCTION_43	WHILE_1	IF_9
0x4001f47	            0x7f47	                            jg 0x4001f90	      1727	move.c	FUNCTION_43	WHILE_1	IF_9
0x4001f49	          0x4c39ee	                            cmp rsi, r13	      1727	move.c	FUNCTION_43	WHILE_1	IF_9
0x4001f4c	            0x7e42	                           jle 0x4001f90	      1727	move.c	FUNCTION_43	WHILE_1	IF_9
0x4001f4e	        0x488d78ff	                      lea rdi, [rax - 1]	      1733	move.c	FUNCTION_43	WHILE_1
0x4001f52	    0x488344243001	               add qword [rsp + 0x30], 1	      1734	move.c	FUNCTION_43	WHILE_1
0x4001f58	          0x4885ff	                           test rdi, rdi	      1699	move.c	FUNCTION_43	WHILE_1
0x4001f5b	      0x48897c2428	             mov qword [rsp + 0x28], rdi	      1733	move.c	FUNCTION_43	WHILE_1
0x4001f60	            0x7e39	                           jle 0x4001f9b	      1699	move.c	FUNCTION_43	WHILE_1
0x4001f62	          0x4989c5	                            mov r13, rax	      1721	move.c	FUNCTION_43	WHILE_1	IF_8
0x4001f65	          0x4589c4	                           mov r12d, r8d	      1709	move.c	FUNCTION_43	WHILE_1	IF_5
0x4001f68	      0x488d742428	                   lea rsi, [rsp + 0x28]	      1702	move.c	FUNCTION_43	WHILE_1	IF_4	CALL_4
0x4001f6d	            0x31d2	                            xor edx, edx	      1702	move.c	FUNCTION_43	WHILE_1	IF_4	CALL_4
0x4001f6f	      0xe800000000	                          call 0x4001f74	      1702	move.c	FUNCTION_43	WHILE_1	IF_4	CALL_4
0x4001f74	            0x85c0	                           test eax, eax	      1702	move.c	FUNCTION_43	WHILE_1	IF_4	CALL_4
0x4001f76	      0xb901000000	                              mov ecx, 1	      1704	move.c	FUNCTION_43	WHILE_1	IF_4
0x4001f7b	            0x7583	                           jne 0x4001f00	      1702	move.c	FUNCTION_43	WHILE_1	IF_4	CALL_4
0x4001f7d	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      1707	move.c	FUNCTION_43	WHILE_1	CALL_5
0x4001f82	      0xe800000000	                          call 0x4001f87	      1707	move.c	FUNCTION_43	WHILE_1	CALL_5
0x4001f87	            0x89c1	                            mov ecx, eax	      1707	move.c	FUNCTION_43	WHILE_1	CALL_5
0x4001f89	      0xe972ffffff	                           jmp 0x4001f00	      1707	move.c	FUNCTION_43	WHILE_1	CALL_5
0x4001f8e	            0x6690	                                     nop	      1707	move.c	FUNCTION_43	WHILE_1	CALL_5
0x4001f90	          0x4539e6	                          cmp r14d, r12d	      1728	move.c	FUNCTION_43	WHILE_1	IF_9
0x4001f93	            0x7fb9	                            jg 0x4001f4e	      1728	move.c	FUNCTION_43	WHILE_1	IF_9
0x4001f95	          0x4c89e8	                            mov rax, r13	      1728	move.c	FUNCTION_43	WHILE_1	IF_9
0x4001f98	          0x4589e0	                           mov r8d, r12d	      1728	move.c	FUNCTION_43	WHILE_1	IF_9
0x4001f9b	          0x4839f0	                            cmp rax, rsi	      1750	move.c	FUNCTION_43	ELSE_4	IF_11
0x4001f9e	     0xf8c3c010000	                            jl 0x40020e0	      1750	move.c	FUNCTION_43	ELSE_4	IF_11
0x4001fa4	        0x8b4c2418	            mov ecx, dword [rsp + 0x18] 	      1750	move.c	FUNCTION_43	ELSE_4	IF_11
0x4001fa8	            0x85c9	                           test ecx, ecx	      1750	move.c	FUNCTION_43	ELSE_4	IF_11
0x4001faa	     0xf8530010000	                           jne 0x40020e0	      1750	move.c	FUNCTION_43	ELSE_4	IF_11
0x4001fb0	        0x488b4238	            mov rax, qword [rdx + 0x38] 	      1752	move.c	FUNCTION_43	ELSE_4	IF_12
0x4001fb4	          0x4839f0	                            cmp rax, rsi	      1752	move.c	FUNCTION_43	ELSE_4	IF_12
0x4001fb7	     0xf8c83010000	                            jl 0x4002140	      1752	move.c	FUNCTION_43	ELSE_4	IF_12
0x4001fbd	           0xf1f00	                         nop dword [rax]	      1752	move.c	FUNCTION_43	ELSE_4	IF_12
0x4001fc0	          0x4889d7	                            mov rdi, rdx	      1755	move.c	FUNCTION_43	ELSE_4	CALL_9
0x4001fc3	      0x448944240c	              mov dword [rsp + 0xc], r8d	      1755	move.c	FUNCTION_43	ELSE_4	CALL_9
0x4001fc8	        0x48891424	                    mov qword [rsp], rdx	      1755	move.c	FUNCTION_43	ELSE_4	CALL_9
0x4001fcc	      0xe800000000	                          call 0x4001fd1	      1755	move.c	FUNCTION_43	ELSE_4	CALL_9
0x4001fd1	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	      1756	move.c	FUNCTION_43	ELSE_4	IF_13
0x4001fd6	        0x488b1424	                    mov rdx, qword [rsp]	      1755	move.c	FUNCTION_43	ELSE_4	CALL_9
0x4001fda	    0x488b1d000000	            mov rbx, qword [0x04001fe1] 	      1756	move.c	FUNCTION_43	ELSE_4	IF_13
0x4001fe1	          0x4539c6	                           cmp r14d, r8d	      1756	move.c	FUNCTION_43	ELSE_4	IF_13
0x4001fe4	    0x898284000000	             mov dword [rdx + 0x84], eax	      1755	move.c	FUNCTION_43	ELSE_4	CALL_9
0x4001fea	    0x8b8384000000	            mov eax, dword [rbx + 0x84] 	      1756	move.c	FUNCTION_43	ELSE_4	IF_13
0x4001ff0	            0x7d16	                           jge 0x4002008	      1756	move.c	FUNCTION_43	ELSE_4	IF_13
0x4001ff2	            0x85c0	                           test eax, eax	      1756	move.c	FUNCTION_43	ELSE_4	IF_13
0x4001ff4	            0x7e12	                           jle 0x4002008	      1756	move.c	FUNCTION_43	ELSE_4	IF_13
0x4001ff6	          0x4529f0	                           sub r8d, r14d	      1758	move.c	FUNCTION_43	ELSE_4	IF_13
0x4001ff9	          0x4429c0	                            sub eax, r8d	      1759	move.c	FUNCTION_43	ELSE_4	IF_13	IF_14
0x4001ffc	     0xf8878010000	                            js 0x400217a	      1759	move.c	FUNCTION_43	ELSE_4	IF_13	IF_14
0x4002002	    0x898384000000	             mov dword [rbx + 0x84], eax	      1758	move.c	FUNCTION_43	ELSE_4	IF_13
0x4002008	            0x85c0	                           test eax, eax	      1368	move.c	FUNCTION_35	IF_1
0x400200a	            0x7e3a	                           jle 0x4002046	      1368	move.c	FUNCTION_35	IF_1
0x400200c	        0x488b7378	            mov rsi, qword [rbx + 0x78] 	      1370	move.c	FUNCTION_35	IF_1	CALL_1
0x4002010	      0xba01000000	                              mov edx, 1	      1370	move.c	FUNCTION_35	IF_1	CALL_1
0x4002015	          0x4889df	                            mov rdi, rbx	      1370	move.c	FUNCTION_35	IF_1	CALL_1
0x4002018	      0xe800000000	                          call 0x400201d	      1370	move.c	FUNCTION_35	IF_1	CALL_1
0x400201d	    0x8b8b84000000	            mov ecx, dword [rbx + 0x84] 	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x4002023	    0x8b93a0000000	            mov edx, dword [rbx + 0xa0] 	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x4002029	             0x1c1	                            add ecx, eax	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x400202b	            0x39d1	                            cmp ecx, edx	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x400202d	            0x7e10	                           jle 0x400203f	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x400202f	            0x29c2	                            sub edx, eax	      1380	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1
0x4002031	            0x85d2	                           test edx, edx	      1381	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x4002033	    0x899384000000	             mov dword [rbx + 0x84], edx	      1380	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1
0x4002039	     0xf882c010000	                            js 0x400216b	      1381	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x400203f	    0x488b1d000000	            mov rbx, qword [0x04002046] 	      1381	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x4002046	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      1764	move.c	FUNCTION_43	ELSE_4	IF_15
0x400204b	        0x483b4378	            cmp rax, qword [rbx + 0x78] 	      1764	move.c	FUNCTION_43	ELSE_4	IF_15
0x400204f	     0xf84fb000000	                            je 0x4002150	      1764	move.c	FUNCTION_43	ELSE_4	IF_15
0x4002055	    0x8b83b4000000	            mov eax, dword [rbx + 0xb4] 	      1769	move.c	FUNCTION_43	ELSE_4	IF_15
0x400205b	          0x83e08e	                     and eax, 0xffffff8e	      1769	move.c	FUNCTION_43	ELSE_4	IF_15
0x400205e	             0xc80	                             or al, 0x80	      1771	move.c	FUNCTION_43	ELSE_4
0x4002060	    0x8983b4000000	             mov dword [rbx + 0xb4], eax	      1771	move.c	FUNCTION_43	ELSE_4
0x4002066	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      1773	move.c	FUNCTION_43
0x400206b	    0x644833042528	                xor rax, qword fs:[0x28]	      1773	move.c	FUNCTION_43
0x4002074	     0xf8531010000	                           jne 0x40021ab	      1773	move.c	FUNCTION_43
0x400207a	        0x4883c448	                           add rsp, 0x48	      1773	move.c	FUNCTION_43
0x400207e	              0x5b	                                 pop rbx	      1773	move.c	FUNCTION_43
0x400207f	              0x5d	                                 pop rbp	      1773	move.c	FUNCTION_43
0x4002080	            0x415c	                                 pop r12	      1773	move.c	FUNCTION_43
0x4002082	            0x415d	                                 pop r13	      1773	move.c	FUNCTION_43
0x4002084	            0x415e	                                 pop r14	      1773	move.c	FUNCTION_43
0x4002086	            0x415f	                                 pop r15	      1773	move.c	FUNCTION_43
0x4002088	              0xc3	                                     ret	      1773	move.c	FUNCTION_43
0x4002089	     0xf1f80000000	                         nop dword [rax]	      1773	move.c	FUNCTION_43
0x4002090	      0x488d542430	                   lea rdx, [rsp + 0x30]	      1712	move.c	FUNCTION_43	WHILE_1	IF_5	IF_6	CALL_6
0x4002095	            0x31f6	                            xor esi, esi	      1712	move.c	FUNCTION_43	WHILE_1	IF_5	IF_6	CALL_6
0x4002097	      0x448944240c	              mov dword [rsp + 0xc], r8d	      1712	move.c	FUNCTION_43	WHILE_1	IF_5	IF_6	CALL_6
0x400209c	          0x890c24	                    mov dword [rsp], ecx	      1712	move.c	FUNCTION_43	WHILE_1	IF_5	IF_6	CALL_6
0x400209f	      0xe800000000	                          call 0x40020a4	      1712	move.c	FUNCTION_43	WHILE_1	IF_5	IF_6	CALL_6
0x40020a4	            0x85c0	                           test eax, eax	      1712	move.c	FUNCTION_43	WHILE_1	IF_5	IF_6	CALL_6
0x40020a6	          0x8b0c24	                    mov ecx, dword [rsp]	      1712	move.c	FUNCTION_43	WHILE_1	IF_5	IF_6	CALL_6
0x40020a9	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	      1712	move.c	FUNCTION_43	WHILE_1	IF_5	IF_6	CALL_6
0x40020ae	            0x7450	                            je 0x4002100	      1712	move.c	FUNCTION_43	WHILE_1	IF_5	IF_6	CALL_6
0x40020b0	    0x488b15000000	            mov rdx, qword [0x040020b7] 	      1719	move.c	FUNCTION_43	WHILE_1	IF_7
0x40020b7	          0x83c501	                              add ebp, 1	      1714	move.c	FUNCTION_43	WHILE_1	IF_5	IF_6
0x40020ba	    0x3baaa0000000	            cmp ebp, dword [rdx + 0xa0] 	      1719	move.c	FUNCTION_43	WHILE_1	IF_7
0x40020c0	     0xf8e6dfeffff	                           jle 0x4001f33	      1719	move.c	FUNCTION_43	WHILE_1	IF_7
0x40020c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1719	move.c	FUNCTION_43	WHILE_1	IF_7
0x40020d0	            0x31ff	                            xor edi, edi	      1743	move.c	FUNCTION_43	CALL_8
0x40020d2	      0xe800000000	                          call 0x40020d7	      1743	move.c	FUNCTION_43	CALL_8
0x40020d7	            0xeb8d	                           jmp 0x4002066	      1743	move.c	FUNCTION_43	CALL_8
0x40020d9	     0xf1f80000000	                         nop dword [rax]	      1743	move.c	FUNCTION_43	CALL_8
0x40020e0	          0x4889c6	                            mov rsi, rax	      1751	move.c	FUNCTION_43	ELSE_4	IF_11
0x40020e3	        0x48894278	             mov qword [rdx + 0x78], rax	      1751	move.c	FUNCTION_43	ELSE_4	IF_11
0x40020e7	        0x488b4238	            mov rax, qword [rdx + 0x38] 	      1752	move.c	FUNCTION_43	ELSE_4	IF_12
0x40020eb	          0x4839f0	                            cmp rax, rsi	      1752	move.c	FUNCTION_43	ELSE_4	IF_12
0x40020ee	     0xf8dccfeffff	                           jge 0x4001fc0	      1752	move.c	FUNCTION_43	ELSE_4	IF_12
0x40020f4	            0xeb4a	                           jmp 0x4002140	      1752	move.c	FUNCTION_43	ELSE_4	IF_12
0x40020f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1752	move.c	FUNCTION_43	ELSE_4	IF_12
0x4002100	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      1717	move.c	FUNCTION_43	WHILE_1	IF_5	CALL_7
0x4002105	      0x448944240c	              mov dword [rsp + 0xc], r8d	      1717	move.c	FUNCTION_43	WHILE_1	IF_5	CALL_7
0x400210a	          0x890c24	                    mov dword [rsp], ecx	      1717	move.c	FUNCTION_43	WHILE_1	IF_5	CALL_7
0x400210d	      0xe800000000	                          call 0x4002112	      1717	move.c	FUNCTION_43	WHILE_1	IF_5	CALL_7
0x4002112	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	      1717	move.c	FUNCTION_43	WHILE_1	IF_5	CALL_7
0x4002117	             0x1c5	                            add ebp, eax	      1717	move.c	FUNCTION_43	WHILE_1	IF_5	CALL_7
0x4002119	          0x8b0c24	                    mov ecx, dword [rsp]	      1717	move.c	FUNCTION_43	WHILE_1	IF_5	CALL_7
0x400211c	      0xe9fffdffff	                           jmp 0x4001f20	      1717	move.c	FUNCTION_43	WHILE_1	IF_5	CALL_7
0x4002121	     0xf1f80000000	                         nop dword [rax]	      1717	move.c	FUNCTION_43	WHILE_1	IF_5	CALL_7
0x4002128	    0x488b3d000000	            mov rdi, qword [0x0400212f] 	      1683	move.c	FUNCTION_43	ELSE_1
0x400212f	        0x488b7738	            mov rsi, qword [rdi + 0x38] 	      1683	move.c	FUNCTION_43	ELSE_1
0x4002133	        0x4c8d6eff	                      lea r13, [rsi - 1]	      1683	move.c	FUNCTION_43	ELSE_1
0x4002137	        0x488d4601	                      lea rax, [rsi + 1]	      1684	move.c	FUNCTION_43	ELSE_1
0x400213b	      0xe999fdffff	                           jmp 0x4001ed9	      1684	move.c	FUNCTION_43	ELSE_1
0x4002140	        0x48894278	             mov qword [rdx + 0x78], rax	      1753	move.c	FUNCTION_43	ELSE_4	IF_12
0x4002144	          0x4889c6	                            mov rsi, rax	      1753	move.c	FUNCTION_43	ELSE_4	IF_12
0x4002147	      0xe974feffff	                           jmp 0x4001fc0	      1753	move.c	FUNCTION_43	ELSE_4	IF_12
0x400214c	         0xf1f4000	                         nop dword [rax]	      1753	move.c	FUNCTION_43	ELSE_4	IF_12
0x4002150	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      1766	move.c	FUNCTION_43	ELSE_4	IF_15
0x4002154	    0x3b8384000000	            cmp eax, dword [rbx + 0x84] 	      1766	move.c	FUNCTION_43	ELSE_4	IF_15
0x400215a	     0xf85f5feffff	                           jne 0x4002055	      1766	move.c	FUNCTION_43	ELSE_4	IF_15
0x4002160	    0x8b83b4000000	            mov eax, dword [rbx + 0xb4] 	      1766	move.c	FUNCTION_43	ELSE_4	IF_15
0x4002166	      0xe9f3feffff	                           jmp 0x400205e	      1766	move.c	FUNCTION_43	ELSE_4	IF_15
0x400216b	    0xc78384000000	               mov dword [rbx + 0x84], 0	      1382	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x4002175	      0xe9c5feffff	                           jmp 0x400203f	      1382	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x400217a	    0xc78384000000	               mov dword [rbx + 0x84], 0	      1760	move.c	FUNCTION_43	ELSE_4	IF_13	IF_14
0x4002184	      0xe9bdfeffff	                           jmp 0x4002046	      1760	move.c	FUNCTION_43	ELSE_4	IF_13	IF_14
0x4002189	    0x488b15000000	            mov rdx, qword [0x04002190] 	      1742	move.c	FUNCTION_43	IF_10
0x4002190	    0x3baaa0000000	            cmp ebp, dword [rdx + 0xa0] 	      1742	move.c	FUNCTION_43	IF_10
0x4002196	     0xf8f34ffffff	                            jg 0x40020d0	      1742	move.c	FUNCTION_43	IF_10
0x400219c	          0x4189c0	                            mov r8d, eax	      1692	move.c	FUNCTION_43	CALL_3
0x400219f	        0x488b7278	            mov rsi, qword [rdx + 0x78] 	      1692	move.c	FUNCTION_43	CALL_3
0x40021a3	          0x4c89e8	                            mov rax, r13	      1686	move.c	FUNCTION_43
0x40021a6	      0xe9f0fdffff	                           jmp 0x4001f9b	      1686	move.c	FUNCTION_43
0x40021ab	      0xe800000000	              call sym.scroll_cursor_bot	      1773	move.c	FUNCTION_43
scrolldown	SWITCH,0:WHILE,2:ELSE,4:functions,0:FOR,0:CALL,13:IF,9:DO,0	248
0x4003df0	            0x4156	                                push r14	      1180	move.c	FUNCTION_33
0x4003df2	            0x4155	                                push r13	      1180	move.c	FUNCTION_33
0x4003df4	          0x4189f5	                           mov r13d, esi	      1180	move.c	FUNCTION_33
0x4003df7	            0x4154	                                push r12	      1180	move.c	FUNCTION_33
0x4003df9	              0x55	                                push rbp	      1180	move.c	FUNCTION_33
0x4003dfa	          0x4889fd	                            mov rbp, rdi	      1180	move.c	FUNCTION_33
0x4003dfd	              0x53	                                push rbx	      1180	move.c	FUNCTION_33
0x4003dfe	            0x31d2	                            xor edx, edx	      1189	move.c	FUNCTION_33	CALL_1
0x4003e00	        0x4883ec10	                           sub rsp, 0x10	      1180	move.c	FUNCTION_33
0x4003e04	    0x64488b042528	                mov rax, qword fs:[0x28]	      1180	move.c	FUNCTION_33
0x4003e0d	      0x4889442408	                mov qword [rsp + 8], rax	      1180	move.c	FUNCTION_33
0x4003e12	            0x31c0	                            xor eax, eax	      1180	move.c	FUNCTION_33
0x4003e14	    0x488b05000000	            mov rax, qword [0x04003e1b] 	      1189	move.c	FUNCTION_33	CALL_1
0x4003e1b	        0x488b7878	            mov rdi, qword [rax + 0x78] 	      1189	move.c	FUNCTION_33	CALL_1
0x4003e1f	        0x488d7078	                   lea rsi, [rax + 0x78]	      1189	move.c	FUNCTION_33	CALL_1
0x4003e23	      0xe800000000	                          call 0x4003e28	      1189	move.c	FUNCTION_33	CALL_1
0x4003e28	    0x488b1d000000	            mov rbx, qword [0x04003e2f] 	       634	move.c	FUNCTION_21	CALL_1
0x4003e2f	    0x488b83b80000	            mov rax, qword [rbx + 0xb8] 	       481	move.c	FUNCTION_8	IF_1
0x4003e36	        0x48394338	            cmp qword [rbx + 0x38], rax 	       481	move.c	FUNCTION_8	IF_1
0x4003e3a	     0xf8458030000	                            je 0x4004198	       481	move.c	FUNCTION_8	IF_1
0x4003e40	    0x8b83b4000000	            mov eax, dword [rbx + 0xb4] 	       483	move.c	FUNCTION_8	IF_1
0x4003e46	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	       485	move.c	FUNCTION_8	IF_1
0x4003e4a	        0x488b7b40	            mov rdi, qword [rbx + 0x40] 	       485	move.c	FUNCTION_8	IF_1
0x4003e4e	    0x8b9394000000	            mov edx, dword [rbx + 0x94] 	       486	move.c	FUNCTION_8	IF_1
0x4003e54	            0x2460	                            and al, 0x60	       483	move.c	FUNCTION_8	IF_1
0x4003e56	    0x4889b3b80000	             mov qword [rbx + 0xb8], rsi	       485	move.c	FUNCTION_8	IF_1
0x4003e5d	    0x8983b4000000	             mov dword [rbx + 0xb4], eax	       483	move.c	FUNCTION_8	IF_1
0x4003e63	    0x4889bbc00000	             mov qword [rbx + 0xc0], rdi	       485	move.c	FUNCTION_8	IF_1
0x4003e6a	    0x8993c8000000	             mov dword [rbx + 0xc8], edx	       486	move.c	FUNCTION_8	IF_1
0x4003e70	          0x83e003	                              and eax, 3	       635	move.c	FUNCTION_21	IF_1
0x4003e73	          0x83f803	                              cmp eax, 3	       635	move.c	FUNCTION_21	IF_1
0x4003e76	            0x7411	                            je 0x4003e89	       635	move.c	FUNCTION_21	IF_1
0x4003e78	      0xbf01000000	                              mov edi, 1	       636	move.c	FUNCTION_21	CALL_2
0x4003e7d	      0xe800000000	                          call 0x4003e82	       636	move.c	FUNCTION_21	CALL_2
0x4003e82	    0x488b1d000000	            mov rbx, qword [0x04003e89] 	       636	move.c	FUNCTION_21	CALL_2
0x4003e89	          0x4885ed	                           test rbp, rbp	      1192	move.c	FUNCTION_33	WHILE_1
0x4003e8c	        0x4c8d65ff	                      lea r12, [rbp - 1]	      1192	move.c	FUNCTION_33	WHILE_1
0x4003e90	     0xf8e40010000	                           jle 0x4003fd6	      1192	move.c	FUNCTION_33	WHILE_1
0x4003e96	    0x448bb3840000	           mov r14d, dword [rbx + 0x84] 	      1192	move.c	FUNCTION_33	WHILE_1
0x4003e9d	        0x488b7378	            mov rsi, qword [rbx + 0x78] 	      1192	move.c	FUNCTION_33	WHILE_1
0x4003ea1	            0x31ed	                            xor ebp, ebp	      1192	move.c	FUNCTION_33	WHILE_1
0x4003ea3	            0xeb54	                           jmp 0x4003ef9	      1192	move.c	FUNCTION_33	WHILE_1
0x4003ea5	           0xf1f00	                         nop dword [rax]	      1192	move.c	FUNCTION_33	WHILE_1
0x4003ea8	    0x8b83a0000000	            mov eax, dword [rbx + 0xa0] 	      1196	move.c	FUNCTION_33	WHILE_1	IF_1
0x4003eae	    0x448bb3840000	           mov r14d, dword [rbx + 0x84] 	      1196	move.c	FUNCTION_33	WHILE_1	IF_1
0x4003eb5	          0x83e801	                              sub eax, 1	      1196	move.c	FUNCTION_33	WHILE_1	IF_1
0x4003eb8	          0x4139c6	                           cmp r14d, eax	      1196	move.c	FUNCTION_33	WHILE_1	IF_1
0x4003ebb	            0x7d50	                           jge 0x4003f0d	      1196	move.c	FUNCTION_33	WHILE_1	IF_1
0x4003ebd	    0x488b83e80000	            mov rax, qword [rbx + 0xe8] 	      1196	move.c	FUNCTION_33	WHILE_1	IF_1
0x4003ec4	        0x488b7378	            mov rsi, qword [rbx + 0x78] 	      1196	move.c	FUNCTION_33	WHILE_1	IF_1
0x4003ec8	        0x4183c601	                             add r14d, 1	      1198	move.c	FUNCTION_33	WHILE_1	IF_1
0x4003ecc	    0x4489b3840000	            mov dword [rbx + 0x84], r14d	      1198	move.c	FUNCTION_33	WHILE_1	IF_1
0x4003ed3	        0x4883c501	                              add rbp, 1	      1199	move.c	FUNCTION_33	WHILE_1	IF_1
0x4003ed7	          0x4c89e2	                            mov rdx, r12	      1199	move.c	FUNCTION_33	WHILE_1	IF_1
0x4003eda	        0x4883e801	                              sub rax, 1	      1224	move.c	FUNCTION_33	WHILE_1
0x4003ede	    0x83a3b4000000	      and dword [rbx + 0xb4], 0xffffff9f	       600	move.c	FUNCTION_17
0x4003ee5	          0x4885d2	                           test rdx, rdx	      1192	move.c	FUNCTION_33	WHILE_1
0x4003ee8	    0x488983e80000	             mov qword [rbx + 0xe8], rax	      1224	move.c	FUNCTION_33	WHILE_1
0x4003eef	        0x4c8d62ff	                      lea r12, [rdx - 1]	      1192	move.c	FUNCTION_33	WHILE_1
0x4003ef3	     0xf8eef000000	                           jle 0x4003fe8	      1192	move.c	FUNCTION_33	WHILE_1
0x4003ef9	          0x4889df	                            mov rdi, rbx	      1195	move.c	FUNCTION_33	WHILE_1	IF_1	CALL_3
0x4003efc	      0xe800000000	                          call 0x4003f01	      1195	move.c	FUNCTION_33	WHILE_1	IF_1	CALL_3
0x4003f01	          0x4439f0	                           cmp eax, r14d	      1195	move.c	FUNCTION_33	WHILE_1	IF_1	CALL_3
0x4003f04	    0x488b1d000000	            mov rbx, qword [0x04003f0b] 	      1196	move.c	FUNCTION_33	WHILE_1	IF_1
0x4003f0b	            0x7f9b	                            jg 0x4003ea8	      1195	move.c	FUNCTION_33	WHILE_1	IF_1	CALL_3
0x4003f0d	        0x488b7378	            mov rsi, qword [rbx + 0x78] 	      1204	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_2
0x4003f11	        0x4883fe01	                              cmp rsi, 1	      1204	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_2
0x4003f15	     0xf846d020000	                            je 0x4004188	      1204	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_2
0x4003f1b	        0x488d7eff	                      lea rdi, [rsi - 1]	      1206	move.c	FUNCTION_33	WHILE_1	ELSE_1
0x4003f1f	            0x31d2	                            xor edx, edx	      1212	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	CALL_4
0x4003f21	    0xc78384000000	               mov dword [rbx + 0x84], 0	      1208	move.c	FUNCTION_33	WHILE_1	ELSE_1
0x4003f2b	          0x4889e6	                            mov rsi, rsp	      1212	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	CALL_4
0x4003f2e	        0x48897b78	             mov qword [rbx + 0x78], rdi	      1206	move.c	FUNCTION_33	WHILE_1	ELSE_1
0x4003f32	      0xe800000000	                          call 0x4003f37	      1212	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	CALL_4
0x4003f37	            0x85c0	                           test eax, eax	      1212	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	CALL_4
0x4003f39	            0x7465	                            je 0x4003fa0	      1212	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	CALL_4
0x4003f3b	        0x4883c501	                              add rbp, 1	      1214	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x4003f3f	          0x4585ed	                         test r13d, r13d	      1215	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x4003f42	            0x743c	                            je 0x4003f80	      1215	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x4003f44	    0x488b1d000000	            mov rbx, qword [0x04003f4b] 	      1215	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x4003f4b	        0x488b3424	                    mov rsi, qword [rsp]	      1215	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x4003f4f	          0x4c89e2	                            mov rdx, r12	      1215	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x4003f52	        0x488b4378	            mov rax, qword [rbx + 0x78] 	      1215	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x4003f56	          0x4829f0	                            sub rax, rsi	      1215	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x4003f59	    0x488b8be80000	            mov rcx, qword [rbx + 0xe8] 	      1217	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x4003f60	        0x48897378	             mov qword [rbx + 0x78], rsi	      1218	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x4003f64	    0x448bb3840000	           mov r14d, dword [rbx + 0x84] 	      1218	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x4003f6b	          0x4829c1	                            sub rcx, rax	      1217	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x4003f6e	          0x4889c8	                            mov rax, rcx	      1217	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x4003f71	    0x48898be80000	             mov qword [rbx + 0xe8], rcx	      1217	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x4003f78	      0xe95dffffff	                           jmp 0x4003eda	      1217	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x4003f7d	           0xf1f00	                         nop dword [rax]	      1217	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3
0x4003f80	    0x488b1d000000	            mov rbx, qword [0x04003f87] 	      1216	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x4003f87	        0x488b3424	                    mov rsi, qword [rsp]	      1216	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x4003f8b	        0x488b4378	            mov rax, qword [rbx + 0x78] 	      1216	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x4003f8f	          0x4829f0	                            sub rax, rsi	      1216	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x4003f92	        0x488d50ff	                      lea rdx, [rax - 1]	      1216	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x4003f96	          0x4929d4	                            sub r12, rdx	      1216	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x4003f99	          0x4c89e2	                            mov rdx, r12	      1216	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x4003f9c	            0xebbb	                           jmp 0x4003f59	      1216	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x4003f9e	            0x6690	                                     nop	      1216	move.c	FUNCTION_33	WHILE_1	ELSE_1	IF_3	IF_4
0x4003fa0	    0x488b05000000	            mov rax, qword [0x04003fa7] 	      1222	move.c	FUNCTION_33	WHILE_1	ELSE_1	CALL_5
0x4003fa7	        0x488b7878	            mov rdi, qword [rax + 0x78] 	      1222	move.c	FUNCTION_33	WHILE_1	ELSE_1	CALL_5
0x4003fab	      0xe800000000	                          call 0x4003fb0	      1222	move.c	FUNCTION_33	WHILE_1	ELSE_1	CALL_5
0x4003fb0	    0x488b1d000000	            mov rbx, qword [0x04003fb7] 	      1222	move.c	FUNCTION_33	WHILE_1	ELSE_1	CALL_5
0x4003fb7	            0x4898	                                    cdqe	      1222	move.c	FUNCTION_33	WHILE_1	ELSE_1	CALL_5
0x4003fb9	          0x4c89e2	                            mov rdx, r12	      1222	move.c	FUNCTION_33	WHILE_1	ELSE_1	CALL_5
0x4003fbc	          0x4801c5	                            add rbp, rax	      1222	move.c	FUNCTION_33	WHILE_1	ELSE_1	CALL_5
0x4003fbf	    0x448bb3840000	           mov r14d, dword [rbx + 0x84] 	      1222	move.c	FUNCTION_33	WHILE_1	ELSE_1	CALL_5
0x4003fc6	    0x488b83e80000	            mov rax, qword [rbx + 0xe8] 	      1222	move.c	FUNCTION_33	WHILE_1	ELSE_1	CALL_5
0x4003fcd	        0x488b7378	            mov rsi, qword [rbx + 0x78] 	      1222	move.c	FUNCTION_33	WHILE_1	ELSE_1	CALL_5
0x4003fd1	      0xe904ffffff	                           jmp 0x4003eda	      1222	move.c	FUNCTION_33	WHILE_1	ELSE_1	CALL_5
0x4003fd6	        0x488b7378	            mov rsi, qword [rbx + 0x78] 	      1222	move.c	FUNCTION_33	WHILE_1	ELSE_1	CALL_5
0x4003fda	    0x448bb3840000	           mov r14d, dword [rbx + 0x84] 	      1222	move.c	FUNCTION_33	WHILE_1	ELSE_1	CALL_5
0x4003fe1	            0x31ed	                            xor ebp, ebp	      1192	move.c	FUNCTION_33	WHILE_1
0x4003fe3	       0xf1f440000	                   nop dword [rax + rax]	      1192	move.c	FUNCTION_33	WHILE_1
0x4003fe8	    0x8b83dc000000	            mov eax, dword [rbx + 0xdc] 	      1227	move.c	FUNCTION_33
0x4003fee	     0x1abd4000000	             add dword [rbx + 0xd4], ebp	      1228	move.c	FUNCTION_33
0x4003ff4	             0x1e8	                            add eax, ebp	      1227	move.c	FUNCTION_33
0x4003ff6	        0x48397338	            cmp qword [rbx + 0x38], rsi 	      1231	move.c	FUNCTION_33	IF_5
0x4003ffa	    0x8983dc000000	             mov dword [rbx + 0xdc], eax	      1227	move.c	FUNCTION_33
0x4004000	     0xf84d2010000	                            je 0x40041d8	      1231	move.c	FUNCTION_33	IF_5
0x4004006	          0x4585f6	                         test r14d, r14d	      1368	move.c	FUNCTION_35	IF_1
0x4004009	            0x89c5	                            mov ebp, eax	      1368	move.c	FUNCTION_35	IF_1
0x400400b	            0x7e50	                           jle 0x400405d	      1368	move.c	FUNCTION_35	IF_1
0x400400d	      0xba01000000	                              mov edx, 1	      1370	move.c	FUNCTION_35	IF_1	CALL_1
0x4004012	          0x4889df	                            mov rdi, rbx	      1370	move.c	FUNCTION_35	IF_1	CALL_1
0x4004015	      0xe800000000	                          call 0x400401a	      1370	move.c	FUNCTION_35	IF_1	CALL_1
0x400401a	    0x8b8b84000000	            mov ecx, dword [rbx + 0x84] 	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x4004020	    0x8b93a0000000	            mov edx, dword [rbx + 0xa0] 	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x4004026	             0x1c1	                            add ecx, eax	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x4004028	            0x39d1	                            cmp ecx, edx	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x400402a	     0xf8e40010000	                           jle 0x4004170	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x4004030	        0x488b4b78	            mov rcx, qword [rbx + 0x78] 	      1373	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x4004034	        0x4883f901	                              cmp rcx, 1	      1373	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x4004038	     0xf8e17010000	                           jle 0x4004155	      1373	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x400403e	        0x4883e901	                              sub rcx, 1	      1375	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x4004042	    0xc78384000000	               mov dword [rbx + 0x84], 0	      1376	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x400404c	        0x48894b78	             mov qword [rbx + 0x78], rcx	      1375	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x4004050	    0x488b1d000000	            mov rbx, qword [0x04004057] 	      1375	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x4004057	    0x8babdc000000	            mov ebp, dword [rbx + 0xdc] 	      1375	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x400405d	    0x8b9394020000	           mov edx, dword [rbx + 0x294] 	      1241	move.c	FUNCTION_33	IF_6
0x4004063	            0x85d2	                           test edx, edx	      1241	move.c	FUNCTION_33	IF_6
0x4004065	            0x740e	                            je 0x4004075	      1241	move.c	FUNCTION_33	IF_6
0x4004067	    0x8b83ac000000	            mov eax, dword [rbx + 0xac] 	      1241	move.c	FUNCTION_33	IF_6
0x400406d	            0x85c0	                           test eax, eax	      1241	move.c	FUNCTION_33	IF_6
0x400406f	     0xf857b010000	                           jne 0x40041f0	      1241	move.c	FUNCTION_33	IF_6
0x4004075	    0x39aba0000000	            cmp dword [rbx + 0xa0], ebp 	      1248	move.c	FUNCTION_33	WHILE_2
0x400407b	     0xf8fa3000000	                            jg 0x4004124	      1248	move.c	FUNCTION_33	WHILE_2
0x4004081	        0x488b7b38	            mov rdi, qword [rbx + 0x38] 	      1248	move.c	FUNCTION_33	WHILE_2
0x4004085	        0x4883ff01	                              cmp rdi, 1	      1248	move.c	FUNCTION_33	WHILE_2
0x4004089	            0x7f3e	                            jg 0x40040c9	      1248	move.c	FUNCTION_33	WHILE_2
0x400408b	      0xe994000000	                           jmp 0x4004124	      1248	move.c	FUNCTION_33	WHILE_2
0x4004090	        0x488b1424	                    mov rdx, qword [rsp]	      1254	move.c	FUNCTION_33	WHILE_2	IF_7	IF_8
0x4004094	          0x83ed01	                              sub ebp, 1	      1253	move.c	FUNCTION_33	WHILE_2	IF_7
0x4004097	    0x488b05000000	            mov rax, qword [0x0400409e] 	      1255	move.c	FUNCTION_33	WHILE_2	IF_7	IF_8
0x400409e	        0x4883fa01	                              cmp rdx, 1	      1254	move.c	FUNCTION_33	WHILE_2	IF_7	IF_8
0x40040a2	     0xf84a0000000	                            je 0x4004148	      1254	move.c	FUNCTION_33	WHILE_2	IF_7	IF_8
0x40040a8	        0x4883ea01	                              sub rdx, 1	      1257	move.c	FUNCTION_33	WHILE_2	IF_7	ELSE_3
0x40040ac	        0x48895038	             mov qword [rax + 0x38], rdx	      1257	move.c	FUNCTION_33	WHILE_2	IF_7	ELSE_3
0x40040b0	    0x83a0b4000000	      and dword [rax + 0xb4], 0xffffffe0	      1262	move.c	FUNCTION_33	WHILE_2
0x40040b7	    0x3ba8a0000000	            cmp ebp, dword [rax + 0xa0] 	      1248	move.c	FUNCTION_33	WHILE_2
0x40040bd	            0x7c51	                            jl 0x4004110	      1248	move.c	FUNCTION_33	WHILE_2
0x40040bf	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      1248	move.c	FUNCTION_33	WHILE_2
0x40040c3	        0x4883ff01	                              cmp rdi, 1	      1248	move.c	FUNCTION_33	WHILE_2
0x40040c7	            0x7e47	                           jle 0x4004110	      1248	move.c	FUNCTION_33	WHILE_2
0x40040c9	            0x31d2	                            xor edx, edx	      1251	move.c	FUNCTION_33	WHILE_2	IF_7	CALL_10
0x40040cb	          0x4889e6	                            mov rsi, rsp	      1251	move.c	FUNCTION_33	WHILE_2	IF_7	CALL_10
0x40040ce	      0xe800000000	                          call 0x40040d3	      1251	move.c	FUNCTION_33	WHILE_2	IF_7	CALL_10
0x40040d3	            0x85c0	                           test eax, eax	      1251	move.c	FUNCTION_33	WHILE_2	IF_7	CALL_10
0x40040d5	            0x75b9	                           jne 0x4004090	      1251	move.c	FUNCTION_33	WHILE_2	IF_7	CALL_10
0x40040d7	    0x488b05000000	            mov rax, qword [0x040040de] 	      1261	move.c	FUNCTION_33	WHILE_2	CALL_11
0x40040de	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      1261	move.c	FUNCTION_33	WHILE_2	CALL_11
0x40040e2	        0x488d57ff	                      lea rdx, [rdi - 1]	      1261	move.c	FUNCTION_33	WHILE_2	CALL_11
0x40040e6	        0x48895038	             mov qword [rax + 0x38], rdx	      1261	move.c	FUNCTION_33	WHILE_2	CALL_11
0x40040ea	      0xe800000000	                          call 0x40040ef	      1261	move.c	FUNCTION_33	WHILE_2	CALL_11
0x40040ef	            0x29c5	                            sub ebp, eax	      1261	move.c	FUNCTION_33	WHILE_2	CALL_11
0x40040f1	    0x488b05000000	            mov rax, qword [0x040040f8] 	      1261	move.c	FUNCTION_33	WHILE_2	CALL_11
0x40040f8	    0x83a0b4000000	      and dword [rax + 0xb4], 0xffffffe0	      1262	move.c	FUNCTION_33	WHILE_2
0x40040ff	    0x3ba8a0000000	            cmp ebp, dword [rax + 0xa0] 	      1248	move.c	FUNCTION_33	WHILE_2
0x4004105	            0x7db8	                           jge 0x40040bf	      1248	move.c	FUNCTION_33	WHILE_2
0x4004107	    0x660f1f840000	                    nop word [rax + rax]	      1248	move.c	FUNCTION_33	WHILE_2
0x4004110	      0xe800000000	                          call 0x4004115	      1270	move.c	FUNCTION_33	IF_9	CALL_12
0x4004115	    0x488b05000000	            mov rax, qword [0x0400411c] 	      1272	move.c	FUNCTION_33	IF_9	CALL_13
0x400411c	          0x8b7848	            mov edi, dword [rax + 0x48] 	      1272	move.c	FUNCTION_33	IF_9	CALL_13
0x400411f	      0xe800000000	                          call 0x4004124	      1272	move.c	FUNCTION_33	IF_9	CALL_13
0x4004124	      0x488b442408	                mov rax, qword [rsp + 8]	      1274	move.c	FUNCTION_33
0x4004129	    0x644833042528	                xor rax, qword fs:[0x28]	      1274	move.c	FUNCTION_33
0x4004132	     0xf8511010000	                           jne 0x4004249	      1274	move.c	FUNCTION_33
0x4004138	        0x4883c410	                           add rsp, 0x10	      1274	move.c	FUNCTION_33
0x400413c	              0x5b	                                 pop rbx	      1274	move.c	FUNCTION_33
0x400413d	              0x5d	                                 pop rbp	      1274	move.c	FUNCTION_33
0x400413e	            0x415c	                                 pop r12	      1274	move.c	FUNCTION_33
0x4004140	            0x415d	                                 pop r13	      1274	move.c	FUNCTION_33
0x4004142	            0x415e	                                 pop r14	      1274	move.c	FUNCTION_33
0x4004144	              0xc3	                                     ret	      1274	move.c	FUNCTION_33
0x4004145	           0xf1f00	                         nop dword [rax]	      1274	move.c	FUNCTION_33
0x4004148	    0x48c740380100	               mov qword [rax + 0x38], 1	      1255	move.c	FUNCTION_33	WHILE_2	IF_7	IF_8
0x4004150	      0xe95bffffff	                           jmp 0x40040b0	      1255	move.c	FUNCTION_33	WHILE_2	IF_7	IF_8
0x4004155	            0x29c2	                            sub edx, eax	      1380	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1
0x4004157	            0x85d2	                           test edx, edx	      1381	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x4004159	    0x899384000000	             mov dword [rbx + 0x84], edx	      1380	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1
0x400415f	            0x790f	                           jns 0x4004170	      1381	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x4004161	    0xc78384000000	               mov dword [rbx + 0x84], 0	      1382	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x400416b	       0xf1f440000	                   nop dword [rax + rax]	      1382	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x4004170	    0x488b1d000000	            mov rbx, qword [0x04004177] 	      1382	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x4004177	    0x8babdc000000	            mov ebp, dword [rbx + 0xdc] 	      1382	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x400417d	      0xe9dbfeffff	                           jmp 0x400405d	      1382	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x4004182	    0x660f1f440000	                    nop word [rax + rax]	      1382	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x4004188	    0x448bb3840000	           mov r14d, dword [rbx + 0x84] 	      1382	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x400418f	      0xe954feffff	                           jmp 0x4003fe8	      1382	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x4004194	         0xf1f4000	                         nop dword [rax]	      1382	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x4004198	          0x8b5340	            mov edx, dword [rbx + 0x40] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x400419b	    0x3b93c0000000	            cmp edx, dword [rbx + 0xc0] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x40041a1	    0x8b8b94000000	            mov ecx, dword [rbx + 0x94] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x40041a7	            0x747a	                            je 0x4004223	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x40041a9	          0x8b7344	            mov esi, dword [rbx + 0x44] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x40041ac	    0x8b83b4000000	            mov eax, dword [rbx + 0xb4] 	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x40041b2	    0x8993c0000000	             mov dword [rbx + 0xc0], edx	       496	move.c	FUNCTION_8	ELSE_1	IF_2
0x40041b8	    0x898bc8000000	             mov dword [rbx + 0xc8], ecx	       497	move.c	FUNCTION_8	ELSE_1	IF_2
0x40041be	    0x89b3c4000000	             mov dword [rbx + 0xc4], esi	       499	move.c	FUNCTION_8	ELSE_1	IF_2
0x40041c4	          0x83e0f8	                     and eax, 0xfffffff8	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x40041c7	    0x8983b4000000	             mov dword [rbx + 0xb4], eax	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x40041cd	      0xe99efcffff	                           jmp 0x4003e70	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x40041d2	    0x660f1f440000	                    nop word [rax + rax]	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x40041d8	    0xc783d4000000	               mov dword [rbx + 0xd4], 0	      1232	move.c	FUNCTION_33	IF_5
0x40041e2	      0xe91ffeffff	                           jmp 0x4004006	      1232	move.c	FUNCTION_33	IF_5
0x40041e7	    0x660f1f840000	                    nop word [rax + rax]	      1232	move.c	FUNCTION_33	IF_5
0x40041f0	          0x4889df	                            mov rdi, rbx	       788	move.c	FUNCTION_24	CALL_1
0x40041f3	      0xe800000000	                          call 0x40041f8	       788	move.c	FUNCTION_24	CALL_1
0x40041f8	      0xe8e3bfffff	               call sym.validate_cheight	      1244	move.c	FUNCTION_33	IF_6	CALL_9
0x40041fd	    0x488b1d000000	            mov rbx, qword [0x04004204] 	      1245	move.c	FUNCTION_33	IF_6
0x4004204	    0x8b83cc000000	            mov eax, dword [rbx + 0xcc] 	      1245	move.c	FUNCTION_33	IF_6
0x400420a	          0x8d48ff	                      lea ecx, [rax - 1]	      1245	move.c	FUNCTION_33	IF_6
0x400420d	    0x8b83d8000000	            mov eax, dword [rbx + 0xd8] 	      1245	move.c	FUNCTION_33	IF_6
0x4004213	              0x99	                                     cdq	      1245	move.c	FUNCTION_33	IF_6
0x4004214	    0xf7bbac000000	                 idiv dword [rbx + 0xac]	      1245	move.c	FUNCTION_33	IF_6
0x400421a	            0x29c1	                            sub ecx, eax	      1245	move.c	FUNCTION_33	IF_6
0x400421c	             0x1cd	                            add ebp, ecx	      1245	move.c	FUNCTION_33	IF_6
0x400421e	      0xe952feffff	                           jmp 0x4004075	      1245	move.c	FUNCTION_33	IF_6
0x4004223	    0x3b8bc8000000	            cmp ecx, dword [rbx + 0xc8] 	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004229	          0x8b7344	            mov esi, dword [rbx + 0x44] 	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x400422c	     0xf857affffff	                           jne 0x40041ac	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004232	    0x3bb3c4000000	            cmp esi, dword [rbx + 0xc4] 	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004238	     0xf856effffff	                           jne 0x40041ac	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x400423e	    0x8b83b4000000	            mov eax, dword [rbx + 0xb4] 	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004244	      0xe927fcffff	                           jmp 0x4003e70	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x4004249	      0xe800000000	                          call 0x400424e	      1274	move.c	FUNCTION_33
cursor_valid	SWITCH,0:WHILE,0:ELSE,0:functions,0:FOR,0:CALL,1:IF,0:DO,0	43
0x40010e0	    0x488b05000000	            mov rax, qword [0x040010e7] 	       622	move.c	FUNCTION_20	CALL_1
0x40010e7	    0x488bb8b80000	            mov rdi, qword [rax + 0xb8] 	       481	move.c	FUNCTION_8	IF_1
0x40010ee	        0x48397838	            cmp qword [rax + 0x38], rdi 	       481	move.c	FUNCTION_8	IF_1
0x40010f2	            0x7444	                            je 0x4001138	       481	move.c	FUNCTION_8	IF_1
0x40010f4	    0x8b90b4000000	            mov edx, dword [rax + 0xb4] 	       483	move.c	FUNCTION_8	IF_1
0x40010fa	        0x488b7038	            mov rsi, qword [rax + 0x38] 	       485	move.c	FUNCTION_8	IF_1
0x40010fe	        0x488b7840	            mov rdi, qword [rax + 0x40] 	       485	move.c	FUNCTION_8	IF_1
0x4001102	    0x8b8894000000	            mov ecx, dword [rax + 0x94] 	       486	move.c	FUNCTION_8	IF_1
0x4001108	          0x80e260	                            and dl, 0x60	       483	move.c	FUNCTION_8	IF_1
0x400110b	    0x4889b0b80000	             mov qword [rax + 0xb8], rsi	       485	move.c	FUNCTION_8	IF_1
0x4001112	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       483	move.c	FUNCTION_8	IF_1
0x4001118	    0x4889b8c00000	             mov qword [rax + 0xc0], rdi	       485	move.c	FUNCTION_8	IF_1
0x400111f	    0x8988c8000000	             mov dword [rax + 0xc8], ecx	       486	move.c	FUNCTION_8	IF_1
0x4001125	          0x83e203	                              and edx, 3	       623	move.c	FUNCTION_20
0x4001128	            0x31c0	                            xor eax, eax	       623	move.c	FUNCTION_20
0x400112a	          0x83fa03	                              cmp edx, 3	       623	move.c	FUNCTION_20
0x400112d	           0xf94c0	                                 sete al	       623	move.c	FUNCTION_20
0x4001130	              0xc3	                                     ret	       625	move.c	FUNCTION_20
0x4001131	     0xf1f80000000	                         nop dword [rax]	       625	move.c	FUNCTION_20
0x4001138	          0x8b4840	            mov ecx, dword [rax + 0x40] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x400113b	    0x3b88c0000000	            cmp ecx, dword [rax + 0xc0] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4001141	    0x8bb094000000	            mov esi, dword [rax + 0x94] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4001147	            0x7437	                            je 0x4001180	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x4001149	          0x8b7844	            mov edi, dword [rax + 0x44] 	       488	move.c	FUNCTION_8	ELSE_1	IF_2
0x400114c	    0x8b90b4000000	            mov edx, dword [rax + 0xb4] 	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x4001152	    0x8988c0000000	             mov dword [rax + 0xc0], ecx	       496	move.c	FUNCTION_8	ELSE_1	IF_2
0x4001158	    0x89b0c8000000	             mov dword [rax + 0xc8], esi	       497	move.c	FUNCTION_8	ELSE_1	IF_2
0x400115e	    0x89b8c4000000	             mov dword [rax + 0xc4], edi	       499	move.c	FUNCTION_8	ELSE_1	IF_2
0x4001164	          0x83e2f8	                     and edx, 0xfffffff8	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x4001167	    0x8990b4000000	             mov dword [rax + 0xb4], edx	       495	move.c	FUNCTION_8	ELSE_1	IF_2
0x400116d	          0x83e203	                              and edx, 3	       623	move.c	FUNCTION_20
0x4001170	            0x31c0	                            xor eax, eax	       623	move.c	FUNCTION_20
0x4001172	          0x83fa03	                              cmp edx, 3	       623	move.c	FUNCTION_20
0x4001175	           0xf94c0	                                 sete al	       623	move.c	FUNCTION_20
0x4001178	              0xc3	                                     ret	       625	move.c	FUNCTION_20
0x4001179	     0xf1f80000000	                         nop dword [rax]	       625	move.c	FUNCTION_20
0x4001180	    0x3bb0c8000000	            cmp esi, dword [rax + 0xc8] 	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x4001186	          0x8b7844	            mov edi, dword [rax + 0x44] 	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x4001189	            0x75c1	                           jne 0x400114c	       489	move.c	FUNCTION_8	ELSE_1	IF_2
0x400118b	    0x3bb8c4000000	            cmp edi, dword [rax + 0xc4] 	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x4001191	            0x75b9	                           jne 0x400114c	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x4001193	    0x8b90b4000000	            mov edx, dword [rax + 0xb4] 	       491	move.c	FUNCTION_8	ELSE_1	IF_2
0x4001199	            0xeb8a	                           jmp 0x4001125	       491	move.c	FUNCTION_8	ELSE_1	IF_2
halfpage	SWITCH,0:WHILE,6:ELSE,7:functions,0:FOR,0:CALL,24:IF,19:DO,1	282
0x4005f70	            0x4157	                                push r15	      2556	move.c	ELSE_5	FUNCTION_50
0x4005f72	            0x4156	                                push r14	      2556	move.c	ELSE_5	FUNCTION_50
0x4005f74	            0x4155	                                push r13	      2556	move.c	ELSE_5	FUNCTION_50
0x4005f76	            0x4154	                                push r12	      2556	move.c	ELSE_5	FUNCTION_50
0x4005f78	          0x4189fd	                           mov r13d, edi	      2556	move.c	ELSE_5	FUNCTION_50
0x4005f7b	              0x55	                                push rbp	      2556	move.c	ELSE_5	FUNCTION_50
0x4005f7c	              0x53	                                push rbx	      2556	move.c	ELSE_5	FUNCTION_50
0x4005f7d	        0x4883ec08	                              sub rsp, 8	      2556	move.c	ELSE_5	FUNCTION_50
0x4005f81	          0x4885f6	                           test rsi, rsi	      2562	move.c	ELSE_5	FUNCTION_50	IF_1
0x4005f84	     0xf85e7020000	                           jne 0x4006271	      2562	move.c	ELSE_5	FUNCTION_50	IF_1
0x4005f8a	    0x488b05000000	            mov rax, qword [0x04005f91] 	      2562	move.c	ELSE_5	FUNCTION_50	IF_1
0x4005f91	    0x486398a00000	         movsxd rbx, dword [rax + 0xa0] 	      2562	move.c	ELSE_5	FUNCTION_50	IF_1
0x4005f98	    0x488b80600200	           mov rax, qword [rax + 0x260] 	      2562	move.c	ELSE_5	FUNCTION_50	IF_1
0x4005f9f	          0x4839d8	                            cmp rax, rbx	      2565	move.c	ELSE_5	FUNCTION_50
0x4005fa2	        0x480f4ed8	                         cmovle rbx, rax	      2565	move.c	ELSE_5	FUNCTION_50
0x4005fa6	      0xe800000000	                          call 0x4005fab	      2568	move.c	ELSE_5	FUNCTION_50	CALL_1
0x4005fab	    0x488b3d000000	            mov rdi, qword [0x04005fb2] 	       590	move.c	FUNCTION_16	IF_1
0x4005fb2	            0x89dd	                            mov ebp, ebx	      2565	move.c	ELSE_5	FUNCTION_50
0x4005fb4	    0xf687b4000000	           test byte [rdi + 0xb4], 0x20 	       590	move.c	FUNCTION_16	IF_1
0x4005fbb	          0x4889fa	                            mov rdx, rdi	       590	move.c	FUNCTION_16	IF_1
0x4005fbe	     0xf84a4030000	                            je 0x4006368	       590	move.c	FUNCTION_16	IF_1
0x4005fc4	          0x4585ed	                         test r13d, r13d	      2574	move.c	ELSE_5	FUNCTION_50	IF_2
0x4005fc7	     0xf85ed000000	                           jne 0x40060ba	      2574	move.c	ELSE_5	FUNCTION_50	IF_2
0x4005fcd	            0x85db	                           test ebx, ebx	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x4005fcf	     0xf8e1b020000	                           jle 0x40061f0	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x4005fd5	        0x488b7778	            mov rsi, qword [rdi + 0x78] 	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x4005fd9	        0x4883fe01	                              cmp rsi, 1	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x4005fdd	     0xf8e6c030000	                           jle 0x400634f	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x4005fe3	    0x8b9f84000000	            mov ebx, dword [rdi + 0x84] 	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x4005fe9	          0x4531e4	                          xor r12d, r12d	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x4005fec	            0xeb65	                           jmp 0x4006053	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x4005fee	            0x6690	                                     nop	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x4005ff0	    0x488b15000000	            mov rdx, qword [0x04005ff7] 	      2693	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12
0x4005ff7	          0x83ed01	                              sub ebp, 1	      2691	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	IF_13
0x4005ffa	    0x8b8284000000	            mov eax, dword [rdx + 0x84] 	      2693	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12
0x4006000	          0x8d5801	                      lea ebx, [rax + 1]	      2693	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12
0x4006003	      0xb801000000	                              mov eax, 1	      2693	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12
0x4006008	    0x899a84000000	             mov dword [rdx + 0x84], ebx	      2693	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12
0x400600e	    0x8b8ab4000000	            mov ecx, dword [rdx + 0xb4] 	      2710	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5
0x4006014	          0x4901c4	                            add r12, rax	      2712	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5
0x4006017	        0x488b4238	            mov rax, qword [rdx + 0x38] 	      2714	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x400601b	            0x89ce	                            mov esi, ecx	      2710	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5
0x400601d	          0x83e68e	                     and esi, 0xffffff8e	      2710	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5
0x4006020	        0x4883f801	                              cmp rax, 1	      2714	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x4006024	    0x89b2b4000000	             mov dword [rdx + 0xb4], esi	      2710	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5
0x400602a	            0x7e11	                           jle 0x400603d	      2714	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x400602c	        0x4883e801	                              sub rax, 1	      2716	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x4006030	          0x83e180	                     and ecx, 0xffffff80	      2717	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x4006033	        0x48894238	             mov qword [rdx + 0x38], rax	      2716	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x4006037	    0x898ab4000000	             mov dword [rdx + 0xb4], ecx	      2717	move.c	FUNCTION_50	ELSE_4	WHILE_4	ELSE_5	IF_15
0x400603d	            0x85ed	                           test ebp, ebp	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x400603f	     0xf8eab010000	                           jle 0x40061f0	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x4006045	        0x488b7278	            mov rsi, qword [rdx + 0x78] 	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x4006049	        0x4883fe01	                              cmp rsi, 1	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x400604d	     0xf8e00030000	                           jle 0x4006353	      2685	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4
0x4006053	          0x4889d7	                            mov rdi, rdx	      2688	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	CALL_13
0x4006056	      0xe800000000	                          call 0x400605b	      2688	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	CALL_13
0x400605b	            0x39d8	                            cmp eax, ebx	      2688	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	CALL_13
0x400605d	            0x7f91	                            jg 0x4005ff0	      2688	move.c	ELSE_5	FUNCTION_50	ELSE_4	WHILE_4	IF_12	CALL_13
0x400605f	    0x488b05000000	            mov rax, qword [0x04006066] 	      2698	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_14
0x4006066	        0x488b7878	            mov rdi, qword [rax + 0x78] 	      2698	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_14
0x400606a	        0x4883ef01	                              sub rdi, 1	      2698	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_14
0x400606e	      0xe800000000	                          call 0x4006073	      2698	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_14
0x4006073	            0x29c5	                            sub ebp, eax	      2700	move.c	FUNCTION_50	ELSE_4	WHILE_4	IF_14
0x4006075	            0x89c3	                            mov ebx, eax	      2698	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_14
0x4006077	            0x7909	                           jns 0x4006082	      2700	move.c	FUNCTION_50	ELSE_4	WHILE_4	IF_14
0x4006079	          0x4d85e4	                           test r12, r12	      2700	move.c	FUNCTION_50	ELSE_4	WHILE_4	IF_14
0x400607c	     0xf8f6e010000	                            jg 0x40061f0	      2700	move.c	FUNCTION_50	ELSE_4	WHILE_4	IF_14
0x4006082	    0x488b35000000	            mov rsi, qword [0x04006089] 	      2702	move.c	FUNCTION_50	ELSE_4	WHILE_4
0x4006089	            0x31d2	                            xor edx, edx	      2704	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_15
0x400608b	        0x488b4678	            mov rax, qword [rsi + 0x78] 	      2702	move.c	FUNCTION_50	ELSE_4	WHILE_4
0x400608f	        0x4883c678	                           add rsi, 0x78	      2704	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_15
0x4006093	        0x488d78ff	                      lea rdi, [rax - 1]	      2702	move.c	FUNCTION_50	ELSE_4	WHILE_4
0x4006097	          0x48893e	                    mov qword [rsi], rdi	      2702	move.c	FUNCTION_50	ELSE_4	WHILE_4
0x400609a	      0xe800000000	                          call 0x400609f	      2704	move.c	FUNCTION_50	ELSE_4	WHILE_4	CALL_15
0x400609f	    0x488b15000000	            mov rdx, qword [0x040060a6] 	      2707	move.c	FUNCTION_50	ELSE_4	WHILE_4
0x40060a6	          0x4863c3	                         movsxd rax, ebx	      2707	move.c	FUNCTION_50	ELSE_4	WHILE_4
0x40060a9	            0x31db	                            xor ebx, ebx	      2707	move.c	FUNCTION_50	ELSE_4	WHILE_4
0x40060ab	    0xc78284000000	               mov dword [rdx + 0x84], 0	      2707	move.c	FUNCTION_50	ELSE_4	WHILE_4
0x40060b5	      0xe954ffffff	                           jmp 0x400600e	      2707	move.c	FUNCTION_50	ELSE_4	WHILE_4
0x40060ba	            0x85db	                           test ebx, ebx	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x40060bc	     0xf8e2e010000	                           jle 0x40061f0	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x40060c2	    0x488b05000000	            mov rax, qword [0x040060c9] 	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x40060c9	          0x488b00	                    mov rax, qword [rax]	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x40060cc	    0x483987e80000	            cmp qword [rdi + 0xe8], rax 	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x40060d3	     0xf8fef000000	                            jg 0x40061c8	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x40060d9	    0x8b9ff4000000	            mov ebx, dword [rdi + 0xf4] 	      2572	move.c	ELSE_5	FUNCTION_50
0x40060df	          0x4531e4	                          xor r12d, r12d	      2572	move.c	ELSE_5	FUNCTION_50
0x40060e2	     0x39ff0000000	             add ebx, dword [rdi + 0xf0]	      2572	move.c	ELSE_5	FUNCTION_50
0x40060e8	            0xeb38	                           jmp 0x4006122	      2572	move.c	ELSE_5	FUNCTION_50
0x40060ea	    0x660f1f440000	                    nop word [rax + rax]	      2572	move.c	ELSE_5	FUNCTION_50
0x40060f0	          0x83e08e	                     and eax, 0xffffff8e	      2622	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_7
0x40060f3	    0x8987b4000000	             mov dword [rdi + 0xb4], eax	      2622	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_7
0x40060f9	            0x85ed	                           test ebp, ebp	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x40060fb	     0xf8eef000000	                           jle 0x40061f0	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4006101	    0x488b3d000000	            mov rdi, qword [0x04006108] 	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4006108	    0x488b05000000	            mov rax, qword [0x0400610f] 	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x400610f	          0x488b00	                    mov rax, qword [rax]	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4006112	    0x483987e80000	            cmp qword [rdi + 0xe8], rax 	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4006119	          0x4889fa	                            mov rdx, rdi	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x400611c	     0xf8fa6000000	                            jg 0x40061c8	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4006122	    0x8b8784000000	            mov eax, dword [rdi + 0x84] 	      2582	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3
0x4006128	            0x85c0	                           test eax, eax	      2582	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3
0x400612a	     0xf8e80010000	                           jle 0x40062b0	      2582	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3
0x4006130	          0x83e801	                              sub eax, 1	      2587	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3
0x4006133	          0x83ed01	                              sub ebp, 1	      2585	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3	IF_4
0x4006136	      0xba01000000	                              mov edx, 1	      2585	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3	IF_4
0x400613b	    0x898784000000	             mov dword [rdi + 0x84], eax	      2587	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3
0x4006141	    0x8b87b4000000	            mov eax, dword [rdi + 0xb4] 	      2587	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3
0x4006147	    0x41be01000000	                             mov r14d, 1	      2584	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_3
0x400614d	          0x4901d4	                            add r12, rdx	      2614	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4006150	    0x8b97c0010000	           mov edx, dword [rdi + 0x1c0] 	      2621	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_7
0x4006156	            0x89c1	                            mov ecx, eax	      2613	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4006158	          0x83e1ee	                     and ecx, 0xffffffee	      2613	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x400615b	    0x898fb4000000	             mov dword [rdi + 0xb4], ecx	      2613	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x4006161	            0x85d2	                           test edx, edx	      2621	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_7
0x4006163	            0x758b	                           jne 0x40060f0	      2621	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_7
0x4006165	    0x488bbfe80000	            mov rdi, qword [rdi + 0xe8] 	      2621	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	IF_7
0x400616c	          0x4401f3	                           add ebx, r14d	      2626	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2
0x400616f	              0x90	                                     nop	      2626	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2
0x4006170	      0xe800000000	                          call 0x4006175	      2629	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	CALL_6
0x4006175	            0x39c3	                            cmp ebx, eax	      2630	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	IF_8
0x4006177	          0x4189c6	                           mov r14d, eax	      2629	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	CALL_6
0x400617a	     0xf8c79ffffff	                            jl 0x40060f9	      2630	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	IF_8
0x4006180	    0x488b05000000	            mov rax, qword [0x04006187] 	      2634	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x4006187	            0x31f6	                            xor esi, esi	      2633	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	CALL_7
0x4006189	          0x4429f3	                           sub ebx, r14d	      2637	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x400618c	    0x488bb8e80000	            mov rdi, qword [rax + 0xe8] 	      2633	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	CALL_7
0x4006193	    0x488d90e80000	                   lea rdx, [rax + 0xe8]	      2633	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	CALL_7
0x400619a	      0xe800000000	                          call 0x400619f	      2633	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1	CALL_7
0x400619f	    0x488b15000000	            mov rdx, qword [0x040061a6] 	      2636	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x40061a6	    0x488b82e80000	            mov rax, qword [rdx + 0xe8] 	      2636	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x40061ad	        0x488d7801	                      lea rdi, [rax + 1]	      2636	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x40061b1	    0x488b05000000	            mov rax, qword [0x040061b8] 	      2638	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x40061b8	    0x4889bae80000	             mov qword [rdx + 0xe8], rdi	      2636	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x40061bf	          0x483b38	                    cmp rdi, qword [rax]	      2638	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x40061c2	            0x7eac	                           jle 0x4006170	      2638	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_2	DO_1
0x40061c4	            0x85ed	                           test ebp, ebp	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x40061c6	            0x7e28	                           jle 0x40061f0	      2579	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1
0x40061c8	          0x4889d7	                            mov rdi, rdx	      2649	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	CALL_8
0x40061cb	      0xe800000000	                          call 0x40061d0	      2649	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	CALL_8
0x40061d0	            0x85c0	                           test eax, eax	      2649	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	CALL_8
0x40061d2	     0xf85a4010000	                           jne 0x400637c	      2649	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	CALL_8
0x40061d8	    0x488b05000000	            mov rax, qword [0x040061df] 	      2661	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	ELSE_3
0x40061df	          0x4863ed	                         movsxd rbp, ebp	      2661	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	ELSE_3
0x40061e2	        0x48016838	            add qword [rax + 0x38], rbp 	      2661	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	ELSE_3
0x40061e6	      0xe800000000	                          call 0x40061eb	      2662	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	CALL_10
0x40061eb	       0xf1f440000	                   nop dword [rax + rax]	      2662	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	CALL_10
0x40061f0	      0xe800000000	                          call 0x40061f5	      2762	move.c	FUNCTION_50	ELSE_5	CALL_20
0x40061f5	    0x488b1d000000	            mov rbx, qword [0x040061fc] 	      2765	move.c	FUNCTION_50	ELSE_5	CALL_21
0x40061fc	    0x8b8384000000	            mov eax, dword [rbx + 0x84] 	      1368	move.c	FUNCTION_35	IF_1
0x4006202	            0x85c0	                           test eax, eax	      1368	move.c	FUNCTION_35	IF_1
0x4006204	            0x7e44	                           jle 0x400624a	      1368	move.c	FUNCTION_35	IF_1
0x4006206	        0x488b7378	            mov rsi, qword [rbx + 0x78] 	      1370	move.c	FUNCTION_35	IF_1	CALL_1
0x400620a	      0xba01000000	                              mov edx, 1	      1370	move.c	FUNCTION_35	IF_1	CALL_1
0x400620f	          0x4889df	                            mov rdi, rbx	      1370	move.c	FUNCTION_35	IF_1	CALL_1
0x4006212	      0xe800000000	                          call 0x4006217	      1370	move.c	FUNCTION_35	IF_1	CALL_1
0x4006217	    0x8b8b84000000	            mov ecx, dword [rbx + 0x84] 	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x400621d	    0x8b93a0000000	            mov edx, dword [rbx + 0xa0] 	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x4006223	             0x1c1	                            add ecx, eax	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x4006225	            0x39d1	                            cmp ecx, edx	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x4006227	            0x7e21	                           jle 0x400624a	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x4006229	          0x4585ed	                         test r13d, r13d	      1373	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x400622c	            0x7567	                           jne 0x4006295	      1373	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x400622e	        0x488b4b78	            mov rcx, qword [rbx + 0x78] 	      1373	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x4006232	        0x4883f901	                              cmp rcx, 1	      1373	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x4006236	            0x7e5d	                           jle 0x4006295	      1373	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x4006238	        0x4883e901	                              sub rcx, 1	      1375	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x400623c	    0xc78384000000	               mov dword [rbx + 0x84], 0	      1376	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x4006246	        0x48894b78	             mov qword [rbx + 0x78], rcx	      1375	move.c	FUNCTION_35	IF_1	IF_2	IF_3
0x400624a	      0xe800000000	                          call 0x400624f	      2767	move.c	FUNCTION_50	ELSE_5	CALL_22
0x400624f	      0xbf06000000	                              mov edi, 6	      2768	move.c	FUNCTION_50	ELSE_5	CALL_23
0x4006254	      0xe800000000	                          call 0x4006259	      2768	move.c	FUNCTION_50	ELSE_5	CALL_23
0x4006259	        0x4883c408	                              add rsp, 8	      2770	move.c	FUNCTION_50	ELSE_5
0x400625d	      0xbf0a000000	                            mov edi, 0xa	      2769	move.c	FUNCTION_50	ELSE_5	CALL_24
0x4006262	              0x5b	                                 pop rbx	      2770	move.c	FUNCTION_50	ELSE_5
0x4006263	              0x5d	                                 pop rbp	      2770	move.c	FUNCTION_50	ELSE_5
0x4006264	            0x415c	                                 pop r12	      2770	move.c	FUNCTION_50	ELSE_5
0x4006266	            0x415d	                                 pop r13	      2770	move.c	FUNCTION_50	ELSE_5
0x4006268	            0x415e	                                 pop r14	      2770	move.c	FUNCTION_50	ELSE_5
0x400626a	            0x415f	                                 pop r15	      2770	move.c	FUNCTION_50	ELSE_5
0x400626c	      0xe900000000	                           jmp 0x4006271	      2769	move.c	FUNCTION_50	ELSE_5	CALL_24
0x4006271	    0x488b15000000	            mov rdx, qword [0x04006278] 	      2564	move.c	ELSE_5	FUNCTION_50	IF_1
0x4006278	          0x4889f0	                            mov rax, rsi	      2564	move.c	ELSE_5	FUNCTION_50	IF_1
0x400627b	    0x48639aa00000	         movsxd rbx, dword [rdx + 0xa0] 	      2564	move.c	ELSE_5	FUNCTION_50	IF_1
0x4006282	          0x4839de	                            cmp rsi, rbx	      2564	move.c	ELSE_5	FUNCTION_50	IF_1
0x4006285	        0x480f4fc3	                          cmovg rax, rbx	      2564	move.c	ELSE_5	FUNCTION_50	IF_1
0x4006289	    0x488982600200	            mov qword [rdx + 0x260], rax	      2563	move.c	ELSE_5	FUNCTION_50	IF_1
0x4006290	      0xe90afdffff	                           jmp 0x4005f9f	      2563	move.c	ELSE_5	FUNCTION_50	IF_1
0x4006295	            0x29c2	                            sub edx, eax	      1380	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1
0x4006297	      0xb800000000	                              mov eax, 0	      1380	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1
0x400629c	           0xf49c2	                         cmovns eax, edx	      1380	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1
0x400629f	    0x898384000000	             mov dword [rbx + 0x84], eax	      1380	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1
0x40062a5	            0xeba3	                           jmp 0x400624a	      1380	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1
0x40062a7	    0x660f1f840000	                    nop word [rax + rax]	      1380	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1
0x40062b0	        0x488b7f78	            mov rdi, qword [rdi + 0x78] 	      2592	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_3
0x40062b4	      0xe800000000	                          call 0x40062b9	      2592	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_3
0x40062b9	            0x29c5	                            sub ebp, eax	      2594	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_5
0x40062bb	          0x4189c6	                           mov r14d, eax	      2592	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_3
0x40062be	            0x7909	                           jns 0x40062c9	      2594	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_5
0x40062c0	          0x4d85e4	                           test r12, r12	      2594	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_5
0x40062c3	     0xf8f27ffffff	                            jg 0x40061f0	      2594	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_5
0x40062c9	    0x488b05000000	            mov rax, qword [0x040062d0] 	      2597	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_4
0x40062d0	            0x31f6	                            xor esi, esi	      2597	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_4
0x40062d2	        0x488b7878	            mov rdi, qword [rax + 0x78] 	      2597	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_4
0x40062d6	        0x488d5078	                   lea rdx, [rax + 0x78]	      2597	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_4
0x40062da	      0xe800000000	                          call 0x40062df	      2597	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_4
0x40062df	    0x4c8b3d000000	            mov r15, qword [0x040062e6] 	      2599	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1
0x40062e6	        0x498b4778	            mov rax, qword [r15 + 0x78] 	      2599	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1
0x40062ea	          0x4c89ff	                            mov rdi, r15	      2601	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_5
0x40062ed	        0x488d7001	                      lea rsi, [rax + 1]	      2599	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1
0x40062f1	        0x49897778	             mov qword [r15 + 0x78], rsi	      2599	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1
0x40062f5	      0xe800000000	                          call 0x40062fa	      2601	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_5
0x40062fa	    0x488b3d000000	            mov rdi, qword [0x04006301] 	      2605	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4006301	    0x488b15000000	            mov rdx, qword [0x04006308] 	      2605	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4006308	    0x418987840000	             mov dword [r15 + 0x84], eax	      2601	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	CALL_5
0x400630f	        0x488b4738	            mov rax, qword [rdi + 0x38] 	      2605	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4006313	          0x483b02	                    cmp rax, qword [rdx]	      2605	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4006316	            0x7c18	                            jl 0x4006330	      2605	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4006318	    0x8b87b4000000	            mov eax, dword [rdi + 0xb4] 	      2605	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x400631e	          0x4963d6	                        movsxd rdx, r14d	      2605	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4006321	      0xe927feffff	                           jmp 0x400614d	      2605	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4006326	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2605	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4006330	        0x4883c001	                              add rax, 1	      2607	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4006334	          0x4963d6	                        movsxd rdx, r14d	      2607	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4006337	        0x48894738	             mov qword [rdi + 0x38], rax	      2607	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x400633b	    0x8b87b4000000	            mov eax, dword [rdi + 0xb4] 	      2608	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4006341	          0x83e0f1	                     and eax, 0xfffffff1	      2608	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4006344	    0x8987b4000000	             mov dword [rdi + 0xb4], eax	      2608	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x400634a	      0xe9fefdffff	                           jmp 0x400614d	      2608	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x400634f	        0x488b4738	            mov rax, qword [rdi + 0x38] 	      2608	move.c	ELSE_5	FUNCTION_50	IF_2	WHILE_1	ELSE_1	IF_6
0x4006353	          0x4863dd	                         movsxd rbx, ebp	      2727	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	IF_17
0x4006356	          0x4839c3	                            cmp rbx, rax	      2727	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	IF_17
0x4006359	            0x7c70	                            jl 0x40063cb	      2727	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	IF_17
0x400635b	    0x48c742380100	               mov qword [rdx + 0x38], 1	      2728	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	IF_17
0x4006363	      0xe988feffff	                           jmp 0x40061f0	      2728	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	IF_17
0x4006368	      0xe8739fffff	                   call sym.comp_botline	       591	move.c	FUNCTION_16	CALL_1
0x400636d	    0x488b3d000000	            mov rdi, qword [0x04006374] 	       591	move.c	FUNCTION_16	CALL_1
0x4006374	          0x4889fa	                            mov rdx, rdi	       591	move.c	FUNCTION_16	CALL_1
0x4006377	      0xe948fcffff	                           jmp 0x4005fc4	       591	move.c	FUNCTION_16	CALL_1
0x400637c	    0x488b15000000	            mov rdx, qword [0x04006383] 	      2652	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4006383	          0x83ed01	                              sub ebp, 1	      2651	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4006386	        0x488b7a38	            mov rdi, qword [rdx + 0x38] 	      2652	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x400638a	            0xeb2e	                           jmp 0x40063ba	      2652	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x400638c	         0xf1f4000	                         nop dword [rax]	      2652	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4006390	        0x4883c238	                           add rdx, 0x38	      2654	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2	CALL_9
0x4006394	            0x31f6	                            xor esi, esi	      2654	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2	CALL_9
0x4006396	          0x83ed01	                              sub ebp, 1	      2651	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x4006399	      0xe800000000	                          call 0x400639e	      2654	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2	CALL_9
0x400639e	    0x488b15000000	            mov rdx, qword [0x040063a5] 	      2656	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x40063a5	          0x83fdff	             cmp ebp, 0xffffffffffffffff	      2651	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x40063a8	        0x488b4238	            mov rax, qword [rdx + 0x38] 	      2656	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x40063ac	        0x488d7801	                      lea rdi, [rax + 1]	      2656	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x40063b0	        0x48897a38	             mov qword [rdx + 0x38], rdi	      2656	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x40063b4	     0xf842cfeffff	                            je 0x40061e6	      2651	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x40063ba	    0x488b05000000	            mov rax, qword [0x040063c1] 	      2652	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x40063c1	          0x483938	                    cmp qword [rax], rdi	      2652	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x40063c4	            0x7fca	                            jg 0x4006390	      2652	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x40063c6	      0xe91bfeffff	                           jmp 0x40061e6	      2652	move.c	ELSE_5	FUNCTION_50	IF_2	IF_9	IF_10	WHILE_2
0x40063cb	          0x4889d7	                            mov rdi, rdx	      2731	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	CALL_16
0x40063ce	      0xe800000000	                          call 0x40063d3	      2731	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	CALL_16
0x40063d3	            0x85c0	                           test eax, eax	      2731	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	CALL_16
0x40063d5	            0x743e	                            je 0x4006415	      2731	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	CALL_16
0x40063d7	          0x83ed01	                              sub ebp, 1	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x40063da	            0xeb23	                           jmp 0x40063ff	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x40063dc	         0xf1f4000	                         nop dword [rax]	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x40063e0	        0x488d78ff	                      lea rdi, [rax - 1]	      2735	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x40063e4	        0x488d7238	                   lea rsi, [rdx + 0x38]	      2736	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5	CALL_17
0x40063e8	          0x83ed01	                              sub ebp, 1	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x40063eb	        0x48897a38	             mov qword [rdx + 0x38], rdi	      2735	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x40063ef	            0x31d2	                            xor edx, edx	      2736	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5	CALL_17
0x40063f1	      0xe800000000	                          call 0x40063f6	      2736	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5	CALL_17
0x40063f6	          0x83fdff	             cmp ebp, 0xffffffffffffffff	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x40063f9	     0xf84f1fdffff	                            je 0x40061f0	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x40063ff	    0x488b15000000	            mov rdx, qword [0x04006406] 	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x4006406	        0x488b4238	            mov rax, qword [rdx + 0x38] 	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x400640a	        0x4883f801	                              cmp rax, 1	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x400640e	            0x7fd0	                            jg 0x40063e0	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x4006410	      0xe9dbfdffff	                           jmp 0x40061f0	      2733	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_6	IF_18	WHILE_5
0x4006415	    0x488b05000000	            mov rax, qword [0x0400641c] 	      2742	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_7
0x400641c	        0x48295838	             sub qword [rax + 0x38], rbx	      2742	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_7
0x4006420	      0xe9cbfdffff	                           jmp 0x40061f0	      2742	move.c	FUNCTION_50	ELSE_4	ELSE_5	IF_16	ELSE_7
scrollup	SWITCH,0:WHILE,1:ELSE,2:functions,0:FOR,0:CALL,7:IF,8:DO,0	152
0x4001750	              0x55	                                push rbp	      1283	move.c	FUNCTION_34
0x4001751	              0x53	                                push rbx	      1283	move.c	FUNCTION_34
0x4001752	          0x4889fb	                            mov rbx, rdi	      1283	move.c	FUNCTION_34
0x4001755	        0x4883ec18	                           sub rsp, 0x18	      1283	move.c	FUNCTION_34
0x4001759	    0x64488b042528	                mov rax, qword fs:[0x28]	      1283	move.c	FUNCTION_34
0x4001762	      0x4889442408	                mov qword [rsp + 8], rax	      1283	move.c	FUNCTION_34
0x4001767	            0x31c0	                            xor eax, eax	      1283	move.c	FUNCTION_34
0x4001769	            0x85f6	                           test esi, esi	      1287	move.c	FUNCTION_34	IF_1
0x400176b	            0x7573	                           jne 0x40017e0	      1287	move.c	FUNCTION_34	IF_1
0x400176d	    0x488b2d000000	            mov rbp, qword [0x04001774] 	      1295	move.c	FUNCTION_34	IF_1
0x4001774	    0x8b85c0010000	           mov eax, dword [rbp + 0x1c0] 	      1291	move.c	FUNCTION_34	IF_1
0x400177a	            0x85c0	                           test eax, eax	      1291	move.c	FUNCTION_34	IF_1
0x400177c	     0xf8487000000	                            je 0x4001809	      1291	move.c	FUNCTION_34	IF_1
0x4001782	        0x488b7d78	            mov rdi, qword [rbp + 0x78] 	      1300	move.c	FUNCTION_34	IF_1
0x4001786	    0x8b8584000000	            mov eax, dword [rbp + 0x84] 	      1300	move.c	FUNCTION_34	IF_1
0x400178c	        0x48893c24	                    mov qword [rsp], rdi	      1300	move.c	FUNCTION_34	IF_1
0x4001790	        0x4883eb01	                              sub rbx, 1	      1300	move.c	FUNCTION_34	IF_1
0x4001794	        0x4883fbff	             cmp rbx, 0xffffffffffffffff	      1301	move.c	FUNCTION_34	IF_1	WHILE_1
0x4001798	            0x741b	                            je 0x40017b5	      1301	move.c	FUNCTION_34	IF_1	WHILE_1
0x400179a	            0x85c0	                           test eax, eax	      1304	move.c	FUNCTION_34	IF_1	WHILE_1	IF_2
0x400179c	     0xf8e56010000	                           jle 0x40018f8	      1304	move.c	FUNCTION_34	IF_1	WHILE_1	IF_2
0x40017a2	        0x4883eb01	                              sub rbx, 1	      1304	move.c	FUNCTION_34	IF_1	WHILE_1	IF_2
0x40017a6	          0x83e801	                              sub eax, 1	      1305	move.c	FUNCTION_34	IF_1	WHILE_1	IF_2
0x40017a9	        0x4883fbff	             cmp rbx, 0xffffffffffffffff	      1301	move.c	FUNCTION_34	IF_1	WHILE_1
0x40017ad	    0x898584000000	            mov dword [rbp + 0x84], eax 	      1305	move.c	FUNCTION_34	IF_1	WHILE_1	IF_2
0x40017b3	            0x75e5	                           jne 0x400179a	      1301	move.c	FUNCTION_34	IF_1	WHILE_1
0x40017b5	    0x488b15000000	            mov rdx, qword [0x040017bc] 	      1301	move.c	FUNCTION_34	IF_1	WHILE_1
0x40017bc	          0x4889fb	                            mov rbx, rdi	      1322	move.c	FUNCTION_34	IF_1
0x40017bf	        0x482b5d78	             sub rbx, qword [rbp + 0x78]	      1322	move.c	FUNCTION_34	IF_1
0x40017c3	        0x48897d78	            mov qword [rbp + 0x78], rdi 	      1323	move.c	FUNCTION_34	IF_1
0x40017c7	    0x48039de80000	             add rbx, qword [rbp + 0xe8]	      1322	move.c	FUNCTION_34	IF_1
0x40017ce	    0x48899de80000	            mov qword [rbp + 0xe8], rbx 	      1322	move.c	FUNCTION_34	IF_1
0x40017d5	            0xeb58	                           jmp 0x400182f	      1323	move.c	FUNCTION_34	IF_1
0x40017d7	    0x660f1f840000	                    nop word [rax + rax]	      1323	move.c	FUNCTION_34	IF_1
0x40017e0	    0x488b3d000000	            mov rdi, qword [0x040017e7] 	      1289	move.c	FUNCTION_34	IF_1	CALL_1
0x40017e7	      0xe800000000	                          call 0x40017ec	      1289	move.c	FUNCTION_34	IF_1	CALL_1
0x40017ec	            0x85c0	                           test eax, eax	      1289	move.c	FUNCTION_34	IF_1	CALL_1
0x40017ee	    0x488b2d000000	            mov rbp, qword [0x040017f5] 	      1289	move.c	FUNCTION_34	IF_1	CALL_1
0x40017f5	     0xf855d010000	                           jne 0x4001958	      1289	move.c	FUNCTION_34	IF_1	CALL_1
0x40017fb	    0x8b95c0010000	           mov edx, dword [rbp + 0x1c0] 	      1291	move.c	FUNCTION_34	IF_1
0x4001801	            0x85d2	                           test edx, edx	      1291	move.c	FUNCTION_34	IF_1
0x4001803	     0xf854f010000	                           jne 0x4001958	      1291	move.c	FUNCTION_34	IF_1
0x4001809	          0x4889df	                            mov rdi, rbx	      1328	move.c	FUNCTION_34	ELSE_2
0x400180c	    0x48039de80000	             add rbx, qword [rbp + 0xe8]	      1329	move.c	FUNCTION_34	ELSE_2
0x4001813	        0x48037d78	             add rdi, qword [rbp + 0x78]	      1328	move.c	FUNCTION_34	ELSE_2
0x4001817	    0x488b15000000	            mov rdx, qword [0x0400181e] 	      1328	move.c	FUNCTION_34	ELSE_2
0x400181e	    0x8b8584000000	            mov eax, dword [rbp + 0x84] 	      1328	move.c	FUNCTION_34	ELSE_2
0x4001824	        0x48897d78	            mov qword [rbp + 0x78], rdi 	      1328	move.c	FUNCTION_34	ELSE_2
0x4001828	    0x48899de80000	            mov qword [rbp + 0xe8], rbx 	      1329	move.c	FUNCTION_34	ELSE_2
0x400182f	          0x488b12	                    mov rdx, qword [rdx]	      1332	move.c	FUNCTION_34	IF_5
0x4001832	          0x4839fa	                            cmp rdx, rdi	      1332	move.c	FUNCTION_34	IF_5
0x4001835	            0x7d04	                           jge 0x400183b	      1332	move.c	FUNCTION_34	IF_5
0x4001837	        0x48895578	            mov qword [rbp + 0x78], rdx 	      1333	move.c	FUNCTION_34	IF_5
0x400183b	        0x4883c201	                              add rdx, 1	      1334	move.c	FUNCTION_34	IF_6
0x400183f	          0x4839da	                            cmp rdx, rbx	      1334	move.c	FUNCTION_34	IF_6
0x4001842	            0x7d07	                           jge 0x400184b	      1334	move.c	FUNCTION_34	IF_6
0x4001844	    0x488995e80000	            mov qword [rbp + 0xe8], rdx 	      1335	move.c	FUNCTION_34	IF_6
0x400184b	            0x85c0	                           test eax, eax	      1368	move.c	FUNCTION_35	IF_1
0x400184d	            0x7e40	                           jle 0x400188f	      1368	move.c	FUNCTION_35	IF_1
0x400184f	        0x488b7578	            mov rsi, qword [rbp + 0x78] 	      1370	move.c	FUNCTION_35	IF_1	CALL_1
0x4001853	      0xba01000000	                              mov edx, 1	      1370	move.c	FUNCTION_35	IF_1	CALL_1
0x4001858	          0x4889ef	                            mov rdi, rbp	      1370	move.c	FUNCTION_35	IF_1	CALL_1
0x400185b	      0xe800000000	                          call 0x4001860	      1370	move.c	FUNCTION_35	IF_1	CALL_1
0x4001860	    0x8b8d84000000	            mov ecx, dword [rbp + 0x84] 	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x4001866	    0x8b95a0000000	            mov edx, dword [rbp + 0xa0] 	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x400186c	             0x1c1	                            add ecx, eax	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x400186e	            0x39d1	                            cmp ecx, edx	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x4001870	            0x7e16	                           jle 0x4001888	      1371	move.c	FUNCTION_35	IF_1	IF_2
0x4001872	            0x29c2	                            sub edx, eax	      1380	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1
0x4001874	            0x85d2	                           test edx, edx	      1381	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x4001876	    0x899584000000	            mov dword [rbp + 0x84], edx 	      1380	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1
0x400187c	            0x790a	                           jns 0x4001888	      1381	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x400187e	    0xc78584000000	               mov dword [rbp + 0x84], 0	      1382	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x4001888	    0x488b2d000000	            mov rbp, qword [0x0400188f] 	      1382	move.c	FUNCTION_35	IF_1	IF_2	ELSE_1	IF_4
0x400188f	          0x4889ef	                            mov rdi, rbp	      1342	move.c	FUNCTION_34	IF_7	CALL_5
0x4001892	      0xe800000000	                          call 0x4001897	      1342	move.c	FUNCTION_34	IF_7	CALL_5
0x4001897	            0x85c0	                           test eax, eax	      1342	move.c	FUNCTION_34	IF_7	CALL_5
0x4001899	     0xf8599000000	                           jne 0x4001938	      1342	move.c	FUNCTION_34	IF_7	CALL_5
0x400189f	    0x488b05000000	            mov rax, qword [0x040018a6] 	      1347	move.c	FUNCTION_34
0x40018a6	    0x8b90b4000000	            mov edx, dword [rax + 0xb4] 	      1347	move.c	FUNCTION_34
0x40018ac	            0x89d1	                            mov ecx, edx	      1347	move.c	FUNCTION_34
0x40018ae	          0x83e1ce	                     and ecx, 0xffffffce	      1347	move.c	FUNCTION_34
0x40018b1	    0x8988b4000000	             mov dword [rax + 0xb4], ecx	      1347	move.c	FUNCTION_34
0x40018b7	        0x488b4878	            mov rcx, qword [rax + 0x78] 	      1348	move.c	FUNCTION_34	IF_8
0x40018bb	        0x48394838	            cmp qword [rax + 0x38], rcx 	      1348	move.c	FUNCTION_34	IF_8
0x40018bf	            0x7d15	                           jge 0x40018d6	      1348	move.c	FUNCTION_34	IF_8
0x40018c1	          0x8b7848	            mov edi, dword [rax + 0x48] 	      1353	move.c	FUNCTION_34	IF_8	CALL_7
0x40018c4	          0x83e2c0	                     and edx, 0xffffffc0	      1351	move.c	FUNCTION_34	IF_8
0x40018c7	        0x48894838	             mov qword [rax + 0x38], rcx	      1350	move.c	FUNCTION_34	IF_8
0x40018cb	    0x8990b4000000	             mov dword [rax + 0xb4], edx	      1351	move.c	FUNCTION_34	IF_8
0x40018d1	      0xe800000000	                          call 0x40018d6	      1353	move.c	FUNCTION_34	IF_8	CALL_7
0x40018d6	      0x488b442408	                mov rax, qword [rsp + 8]	      1355	move.c	FUNCTION_34
0x40018db	    0x644833042528	                xor rax, qword fs:[0x28]	      1355	move.c	FUNCTION_34
0x40018e4	     0xf85f9000000	                           jne 0x40019e3	      1355	move.c	FUNCTION_34
0x40018ea	        0x4883c418	                           add rsp, 0x18	      1355	move.c	FUNCTION_34
0x40018ee	              0x5b	                                 pop rbx	      1355	move.c	FUNCTION_34
0x40018ef	              0x5d	                                 pop rbp	      1355	move.c	FUNCTION_34
0x40018f0	              0xc3	                                     ret	      1355	move.c	FUNCTION_34
0x40018f1	     0xf1f80000000	                         nop dword [rax]	      1355	move.c	FUNCTION_34
0x40018f8	    0x488b15000000	            mov rdx, qword [0x040018ff] 	      1313	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	IF_4
0x40018ff	          0x48393a	                    cmp qword [rdx], rdi	      1313	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	IF_4
0x4001902	     0xf8ed0000000	                           jle 0x40019d8	      1313	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	IF_4
0x4001908	        0x488d7701	                      lea rsi, [rdi + 1]	      1315	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1
0x400190c	          0x4889ef	                            mov rdi, rbp	      1317	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_3
0x400190f	        0x48893424	                    mov qword [rsp], rsi	      1315	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1
0x4001913	      0xe800000000	                          call 0x4001918	      1317	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_3
0x4001918	    0x898584000000	            mov dword [rbp + 0x84], eax 	      1317	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_3
0x400191e	    0x488b2d000000	            mov rbp, qword [0x04001925] 	      1317	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_3
0x4001925	        0x488b3c24	                    mov rdi, qword [rsp]	      1317	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_3
0x4001929	    0x8b8584000000	            mov eax, dword [rbp + 0x84] 	      1317	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_3
0x400192f	      0xe95cfeffff	                           jmp 0x4001790	      1317	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_3
0x4001934	         0xf1f4000	                         nop dword [rax]	      1317	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_3
0x4001938	    0x488b05000000	            mov rax, qword [0x0400193f] 	      1344	move.c	FUNCTION_34	CALL_6
0x400193f	            0x31d2	                            xor edx, edx	      1344	move.c	FUNCTION_34	CALL_6
0x4001941	        0x488b7878	            mov rdi, qword [rax + 0x78] 	      1344	move.c	FUNCTION_34	CALL_6
0x4001945	        0x488d7078	                   lea rsi, [rax + 0x78]	      1344	move.c	FUNCTION_34	CALL_6
0x4001949	      0xe800000000	                          call 0x400194e	      1344	move.c	FUNCTION_34	CALL_6
0x400194e	      0xe94cffffff	                           jmp 0x400189f	      1344	move.c	FUNCTION_34	CALL_6
0x4001953	       0xf1f440000	                   nop dword [rax + rax]	      1344	move.c	FUNCTION_34	CALL_6
0x4001958	        0x488b7d78	            mov rdi, qword [rbp + 0x78] 	      1300	move.c	FUNCTION_34	IF_1
0x400195c	    0x8b8584000000	            mov eax, dword [rbp + 0x84] 	      1300	move.c	FUNCTION_34	IF_1
0x4001962	        0x48893c24	                    mov qword [rsp], rdi	      1300	move.c	FUNCTION_34	IF_1
0x4001966	            0xeb15	                           jmp 0x400197d	      1300	move.c	FUNCTION_34	IF_1
0x4001968	     0xf1f84000000	                   nop dword [rax + rax]	      1300	move.c	FUNCTION_34	IF_1
0x4001970	          0x83e801	                              sub eax, 1	      1305	move.c	FUNCTION_34	IF_1	WHILE_1	IF_2
0x4001973	    0x898584000000	            mov dword [rbp + 0x84], eax 	      1305	move.c	FUNCTION_34	IF_1	WHILE_1	IF_2
0x4001979	        0x4883eb01	                              sub rbx, 1	      1305	move.c	FUNCTION_34	IF_1	WHILE_1	IF_2
0x400197d	          0x4885db	                           test rbx, rbx	      1301	move.c	FUNCTION_34	IF_1	WHILE_1
0x4001980	     0xf842ffeffff	                            je 0x40017b5	      1301	move.c	FUNCTION_34	IF_1	WHILE_1
0x4001986	            0x85c0	                           test eax, eax	      1304	move.c	FUNCTION_34	IF_1	WHILE_1	IF_2
0x4001988	            0x7fe6	                            jg 0x4001970	      1304	move.c	FUNCTION_34	IF_1	WHILE_1	IF_2
0x400198a	          0x4889e2	                            mov rdx, rsp	      1311	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_2
0x400198d	            0x31f6	                            xor esi, esi	      1311	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_2
0x400198f	      0xe800000000	                          call 0x4001994	      1311	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_2
0x4001994	    0x488b15000000	            mov rdx, qword [0x0400199b] 	      1313	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	IF_4
0x400199b	        0x488b3c24	                    mov rdi, qword [rsp]	      1313	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	IF_4
0x400199f	    0x488b2d000000	            mov rbp, qword [0x040019a6] 	      1313	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	IF_4
0x40019a6	          0x48393a	                    cmp qword [rdx], rdi	      1313	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	IF_4
0x40019a9	            0x7e2d	                           jle 0x40019d8	      1313	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	IF_4
0x40019ab	        0x488d7701	                      lea rsi, [rdi + 1]	      1315	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1
0x40019af	          0x4889ef	                            mov rdi, rbp	      1317	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_3
0x40019b2	        0x48893424	                    mov qword [rsp], rsi	      1315	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1
0x40019b6	      0xe800000000	                          call 0x40019bb	      1317	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_3
0x40019bb	    0x898584000000	            mov dword [rbp + 0x84], eax 	      1317	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_3
0x40019c1	    0x488b2d000000	            mov rbp, qword [0x040019c8] 	      1317	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_3
0x40019c8	        0x488b3c24	                    mov rdi, qword [rsp]	      1317	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_3
0x40019cc	    0x8b8584000000	            mov eax, dword [rbp + 0x84] 	      1317	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_3
0x40019d2	            0xeba5	                           jmp 0x4001979	      1317	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_3
0x40019d4	         0xf1f4000	                         nop dword [rax]	      1317	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_3
0x40019d8	    0x8b8584000000	            mov eax, dword [rbp + 0x84] 	      1317	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_3
0x40019de	      0xe9d9fdffff	                           jmp 0x40017bc	      1317	move.c	FUNCTION_34	IF_1	WHILE_1	ELSE_1	CALL_3
0x40019e3	      0xe800000000	                          call 0x40019e8	      1355	move.c	FUNCTION_34
invalidate_botline_win	SWITCH,0:WHILE,0:ELSE,0:functions,0:FOR,0:CALL,0:IF,0:DO,0	2
0x40010c0	    0x83a7b4000000	      and dword [rdi + 0xb4], 0xffffff9f	       606	move.c	FUNCTION_18
0x40010c7	              0xc3	                                     ret	       606	move.c	FUNCTION_18
