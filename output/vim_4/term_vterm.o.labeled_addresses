vterm_scroll_rect	ELSE,4:IF,8:CALL,2:SWITCH,0:functions,0:FOR,0:WHILE,0:DO,0	142
0x4000b30	            0x4157	                                push r15	       302	vterm.c	FUNCTION_24
0x4000b32	            0x4156	                                push r14	       302	vterm.c	FUNCTION_24
0x4000b34	            0x4155	                                push r13	       302	vterm.c	FUNCTION_24
0x4000b36	            0x4154	                                push r12	       302	vterm.c	FUNCTION_24
0x4000b38	          0x4189d4	                           mov r12d, edx	       302	vterm.c	FUNCTION_24
0x4000b3b	              0x55	                                push rbp	       302	vterm.c	FUNCTION_24
0x4000b3c	              0x53	                                push rbx	       302	vterm.c	FUNCTION_24
0x4000b3d	          0xc1fa1f	                           sar edx, 0x1f	       306	vterm.c	FUNCTION_24	IF_1	CALL_1
0x4000b40	            0x89d0	                            mov eax, edx	       306	vterm.c	FUNCTION_24	IF_1	CALL_1
0x4000b42	            0x89fd	                            mov ebp, edi	       306	vterm.c	FUNCTION_24	IF_1	CALL_1
0x4000b44	        0x4883ec28	                           sub rsp, 0x28	       302	vterm.c	FUNCTION_24
0x4000b48	          0x4431e0	                           xor eax, r12d	       306	vterm.c	FUNCTION_24	IF_1	CALL_1
0x4000b4b	      0x48897c2410	             mov qword [rsp + 0x10], rdi	       302	vterm.c	FUNCTION_24
0x4000b50	        0x48c1ef20	                           shr rdi, 0x20	       302	vterm.c	FUNCTION_24
0x4000b54	            0x29d0	                            sub eax, edx	       306	vterm.c	FUNCTION_24	IF_1	CALL_1
0x4000b56	            0x89fa	                            mov edx, edi	       306	vterm.c	FUNCTION_24	IF_1	CALL_1
0x4000b58	      0x4889742418	             mov qword [rsp + 0x18], rsi	       302	vterm.c	FUNCTION_24
0x4000b5d	            0x29ea	                            sub edx, ebp	       306	vterm.c	FUNCTION_24	IF_1	CALL_1
0x4000b5f	            0x39d0	                            cmp eax, edx	       306	vterm.c	FUNCTION_24	IF_1	CALL_1
0x4000b61	     0xf8d09010000	                           jge 0x4000c70	       306	vterm.c	FUNCTION_24	IF_1	CALL_1
0x4000b67	            0x89ca	                            mov edx, ecx	       306	vterm.c	FUNCTION_24	IF_1	CALL_1
0x4000b69	      0x448b7c241c	           mov r15d, dword [rsp + 0x1c] 	       306	vterm.c	FUNCTION_24	IF_1	CALL_1
0x4000b6e	      0x448b742418	           mov r14d, dword [rsp + 0x18] 	       306	vterm.c	FUNCTION_24	IF_1	CALL_1
0x4000b73	          0xc1fa1f	                           sar edx, 0x1f	       306	vterm.c	FUNCTION_24	IF_1	CALL_1
0x4000b76	          0x4189cd	                           mov r13d, ecx	       306	vterm.c	FUNCTION_24	IF_1	CALL_1
0x4000b79	            0x89d0	                            mov eax, edx	       306	vterm.c	FUNCTION_24	IF_1	CALL_1
0x4000b7b	            0x31c8	                            xor eax, ecx	       306	vterm.c	FUNCTION_24	IF_1	CALL_1
0x4000b7d	            0x29d0	                            sub eax, edx	       306	vterm.c	FUNCTION_24	IF_1	CALL_1
0x4000b7f	          0x4489fa	                           mov edx, r15d	       306	vterm.c	FUNCTION_24	IF_1	CALL_1
0x4000b82	          0x4429f2	                           sub edx, r14d	       306	vterm.c	FUNCTION_24	IF_1	CALL_1
0x4000b85	            0x39d0	                            cmp eax, edx	       306	vterm.c	FUNCTION_24	IF_1	CALL_1
0x4000b87	     0xf8de3000000	                           jge 0x4000c70	       306	vterm.c	FUNCTION_24	IF_1	CALL_1
0x4000b8d	            0x85c9	                           test ecx, ecx	       313	vterm.c	FUNCTION_24	IF_2
0x4000b8f	          0x4d89c2	                             mov r10, r8	       313	vterm.c	FUNCTION_24	IF_2
0x4000b92	          0x4889fb	                            mov rbx, rdi	       313	vterm.c	FUNCTION_24	IF_2
0x4000b95	     0xf88f5000000	                            js 0x4000c90	       313	vterm.c	FUNCTION_24	IF_2
0x4000b9b	          0x4489fe	                           mov esi, r15d	       319	vterm.c	FUNCTION_24	IF_2
0x4000b9e	          0x4489f0	                           mov eax, r14d	       319	vterm.c	FUNCTION_24	IF_2
0x4000ba1	            0x29ce	                            sub esi, ecx	       319	vterm.c	FUNCTION_24	IF_2
0x4000ba3	        0x428d0c31	                    lea ecx, [rcx + r14]	       321	vterm.c	FUNCTION_24	IF_2
0x4000ba7	        0x48c1e620	                           shl rsi, 0x20	       319	vterm.c	FUNCTION_24	IF_2
0x4000bab	          0x4809c6	                             or rsi, rax	       319	vterm.c	FUNCTION_24	IF_2
0x4000bae	          0x4c89f8	                            mov rax, r15	       321	vterm.c	FUNCTION_24	IF_2
0x4000bb1	        0x48c1e020	                           shl rax, 0x20	       321	vterm.c	FUNCTION_24	IF_2
0x4000bb5	          0x4809c1	                             or rcx, rax	       321	vterm.c	FUNCTION_24	IF_2
0x4000bb8	          0x4585e4	                         test r12d, r12d	       335	vterm.c	FUNCTION_24	IF_3
0x4000bbb	     0xf88f5000000	                            js 0x4000cb6	       335	vterm.c	FUNCTION_24	IF_3
0x4000bc1	            0x89df	                            mov edi, ebx	       337	vterm.c	FUNCTION_24	IF_3
0x4000bc3	            0x89e8	                            mov eax, ebp	       337	vterm.c	FUNCTION_24	IF_3
0x4000bc5	        0x418d142c	                    lea edx, [r12 + rbp]	       339	vterm.c	FUNCTION_24	IF_3
0x4000bc9	          0x4429e7	                           sub edi, r12d	       337	vterm.c	FUNCTION_24	IF_3
0x4000bcc	        0x48c1e720	                           shl rdi, 0x20	       337	vterm.c	FUNCTION_24	IF_3
0x4000bd0	          0x4809c7	                             or rdi, rax	       337	vterm.c	FUNCTION_24	IF_3
0x4000bd3	          0x4889d8	                            mov rax, rbx	       339	vterm.c	FUNCTION_24	IF_3
0x4000bd6	        0x48c1e020	                           shl rax, 0x20	       339	vterm.c	FUNCTION_24	IF_3
0x4000bda	          0x4809c2	                             or rdx, rax	       339	vterm.c	FUNCTION_24	IF_3
0x4000bdd	          0x4d85d2	                           test r10, r10	       349	vterm.c	FUNCTION_24	IF_4
0x4000be0	            0x7412	                            je 0x4000bf4	       349	vterm.c	FUNCTION_24	IF_4
0x4000be2	      0x4c894c2408	                 mov qword [rsp + 8], r9	       349	vterm.c	FUNCTION_24	IF_4
0x4000be7	      0x4c8b442460	              mov r8, qword [rsp + 0x60]	       350	vterm.c	FUNCTION_24	IF_4
0x4000bec	          0x41ffd2	                                call r10	       350	vterm.c	FUNCTION_24	IF_4
0x4000bef	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	       350	vterm.c	FUNCTION_24	IF_4
0x4000bf4	          0x4585e4	                         test r12d, r12d	       352	vterm.c	FUNCTION_24	IF_5
0x4000bf7	     0xf8efb000000	                           jle 0x4000cf8	       352	vterm.c	FUNCTION_24	IF_5
0x4000bfd	            0x89dd	                            mov ebp, ebx	       353	vterm.c	FUNCTION_24	IF_5
0x4000bff	          0x4429e5	                           sub ebp, r12d	       353	vterm.c	FUNCTION_24	IF_5
0x4000c02	          0x4585ed	                         test r13d, r13d	       357	vterm.c	FUNCTION_24	IF_7
0x4000c05	     0xf8ed5000000	                           jle 0x4000ce0	       357	vterm.c	FUNCTION_24	IF_7
0x4000c0b	          0x4589fe	                          mov r14d, r15d	       358	vterm.c	FUNCTION_24	IF_7
0x4000c0e	          0x4529ee	                          sub r14d, r13d	       358	vterm.c	FUNCTION_24	IF_7
0x4000c11	      0x4489742408	               mov dword [rsp + 8], r14d	       358	vterm.c	FUNCTION_24	IF_7
0x4000c16	      0x488b4c2460	            mov rcx, qword [rsp + 0x60] 	       362	vterm.c	FUNCTION_24
0x4000c1b	            0x31d2	                            xor edx, edx	       362	vterm.c	FUNCTION_24
0x4000c1d	    0x660f6e4c2408	              movd xmm1, dword [rsp + 8]	       362	vterm.c	FUNCTION_24
0x4000c23	      0x44897c2408	               mov dword [rsp + 8], r15d	       362	vterm.c	FUNCTION_24
0x4000c28	    0x660f6e542408	              movd xmm2, dword [rsp + 8]	       362	vterm.c	FUNCTION_24
0x4000c2e	        0x896c2408	                mov dword [rsp + 8], ebp	       362	vterm.c	FUNCTION_24
0x4000c32	    0x660f6e442408	              movd xmm0, dword [rsp + 8]	       362	vterm.c	FUNCTION_24
0x4000c38	        0x895c2408	                mov dword [rsp + 8], ebx	       362	vterm.c	FUNCTION_24
0x4000c3c	    0x660f6e5c2408	              movd xmm3, dword [rsp + 8]	       362	vterm.c	FUNCTION_24
0x4000c42	        0x660f62ca	                    punpckldq xmm1, xmm2	       362	vterm.c	FUNCTION_24
0x4000c46	        0x660f62c3	                    punpckldq xmm0, xmm3	       362	vterm.c	FUNCTION_24
0x4000c4a	        0x660f6cc1	                   punpcklqdq xmm0, xmm1	       362	vterm.c	FUNCTION_24
0x4000c4e	       0xf11442410	       movups xmmword [rsp + 0x10], xmm0	       362	vterm.c	FUNCTION_24
0x4000c53	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       362	vterm.c	FUNCTION_24
0x4000c58	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       362	vterm.c	FUNCTION_24
0x4000c5d	          0x41ffd1	                                 call r9	       362	vterm.c	FUNCTION_24
0x4000c60	        0x4883c428	                           add rsp, 0x28	       363	vterm.c	FUNCTION_24
0x4000c64	              0x5b	                                 pop rbx	       363	vterm.c	FUNCTION_24
0x4000c65	              0x5d	                                 pop rbp	       363	vterm.c	FUNCTION_24
0x4000c66	            0x415c	                                 pop r12	       363	vterm.c	FUNCTION_24
0x4000c68	            0x415d	                                 pop r13	       363	vterm.c	FUNCTION_24
0x4000c6a	            0x415e	                                 pop r14	       363	vterm.c	FUNCTION_24
0x4000c6c	            0x415f	                                 pop r15	       363	vterm.c	FUNCTION_24
0x4000c6e	              0xc3	                                     ret	       363	vterm.c	FUNCTION_24
0x4000c6f	              0x90	                                     nop	       363	vterm.c	FUNCTION_24
0x4000c70	      0x488b4c2460	            mov rcx, qword [rsp + 0x60] 	       309	vterm.c	FUNCTION_24	IF_1
0x4000c75	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       309	vterm.c	FUNCTION_24	IF_1
0x4000c7a	            0x31d2	                            xor edx, edx	       309	vterm.c	FUNCTION_24	IF_1
0x4000c7c	          0x41ffd1	                                 call r9	       309	vterm.c	FUNCTION_24	IF_1
0x4000c7f	        0x4883c428	                           add rsp, 0x28	       363	vterm.c	FUNCTION_24
0x4000c83	              0x5b	                                 pop rbx	       363	vterm.c	FUNCTION_24
0x4000c84	              0x5d	                                 pop rbp	       363	vterm.c	FUNCTION_24
0x4000c85	            0x415c	                                 pop r12	       363	vterm.c	FUNCTION_24
0x4000c87	            0x415d	                                 pop r13	       363	vterm.c	FUNCTION_24
0x4000c89	            0x415e	                                 pop r14	       363	vterm.c	FUNCTION_24
0x4000c8b	            0x415f	                                 pop r15	       363	vterm.c	FUNCTION_24
0x4000c8d	              0xc3	                                     ret	       363	vterm.c	FUNCTION_24
0x4000c8e	            0x6690	                                     nop	       363	vterm.c	FUNCTION_24
0x4000c90	          0x4489f6	                           mov esi, r14d	       330	vterm.c	FUNCTION_24	ELSE_1
0x4000c93	          0x4c89f8	                            mov rax, r15	       330	vterm.c	FUNCTION_24	ELSE_1
0x4000c96	            0x29ce	                            sub esi, ecx	       330	vterm.c	FUNCTION_24	ELSE_1
0x4000c98	        0x428d0c39	                    lea ecx, [rcx + r15]	       332	vterm.c	FUNCTION_24	ELSE_1
0x4000c9c	        0x48c1e020	                           shl rax, 0x20	       330	vterm.c	FUNCTION_24	ELSE_1
0x4000ca0	          0x4809c6	                             or rsi, rax	       330	vterm.c	FUNCTION_24	ELSE_1
0x4000ca3	          0x4489f0	                           mov eax, r14d	       332	vterm.c	FUNCTION_24	ELSE_1
0x4000ca6	        0x48c1e120	                           shl rcx, 0x20	       332	vterm.c	FUNCTION_24	ELSE_1
0x4000caa	          0x4809c1	                             or rcx, rax	       332	vterm.c	FUNCTION_24	ELSE_1
0x4000cad	          0x4585e4	                         test r12d, r12d	       335	vterm.c	FUNCTION_24	IF_3
0x4000cb0	     0xf890bffffff	                           jns 0x4000bc1	       335	vterm.c	FUNCTION_24	IF_3
0x4000cb6	          0x4889d8	                            mov rax, rbx	       344	vterm.c	FUNCTION_24	ELSE_2
0x4000cb9	            0x89ef	                            mov edi, ebp	       344	vterm.c	FUNCTION_24	ELSE_2
0x4000cbb	        0x418d141c	                    lea edx, [r12 + rbx]	       346	vterm.c	FUNCTION_24	ELSE_2
0x4000cbf	        0x48c1e020	                           shl rax, 0x20	       344	vterm.c	FUNCTION_24	ELSE_2
0x4000cc3	          0x4429e7	                           sub edi, r12d	       344	vterm.c	FUNCTION_24	ELSE_2
0x4000cc6	          0x4809c7	                             or rdi, rax	       344	vterm.c	FUNCTION_24	ELSE_2
0x4000cc9	        0x48c1e220	                           shl rdx, 0x20	       346	vterm.c	FUNCTION_24	ELSE_2
0x4000ccd	            0x89e8	                            mov eax, ebp	       346	vterm.c	FUNCTION_24	ELSE_2
0x4000ccf	          0x4809c2	                             or rdx, rax	       346	vterm.c	FUNCTION_24	ELSE_2
0x4000cd2	      0xe906ffffff	                           jmp 0x4000bdd	       346	vterm.c	FUNCTION_24	ELSE_2
0x4000cd7	    0x660f1f840000	                    nop word [rax + rax]	       346	vterm.c	FUNCTION_24	ELSE_2
0x4000ce0	          0x4489f0	                           mov eax, r14d	       360	vterm.c	FUNCTION_24	ELSE_4	IF_8
0x4000ce3	          0x4429e8	                           sub eax, r13d	       360	vterm.c	FUNCTION_24	ELSE_4	IF_8
0x4000ce6	          0x4585ed	                         test r13d, r13d	       360	vterm.c	FUNCTION_24	ELSE_4	IF_8
0x4000ce9	        0x440f45f8	                        cmovne r15d, eax	       360	vterm.c	FUNCTION_24	ELSE_4	IF_8
0x4000ced	      0xe91fffffff	                           jmp 0x4000c11	       360	vterm.c	FUNCTION_24	ELSE_4	IF_8
0x4000cf2	    0x660f1f440000	                    nop word [rax + rax]	       360	vterm.c	FUNCTION_24	ELSE_4	IF_8
0x4000cf8	            0x89e8	                            mov eax, ebp	       355	vterm.c	FUNCTION_24	ELSE_3	IF_6
0x4000cfa	          0x4429e0	                           sub eax, r12d	       355	vterm.c	FUNCTION_24	ELSE_3	IF_6
0x4000cfd	          0x4585e4	                         test r12d, r12d	       355	vterm.c	FUNCTION_24	ELSE_3	IF_6
0x4000d00	           0xf45d8	                         cmovne ebx, eax	       355	vterm.c	FUNCTION_24	ELSE_3	IF_6
0x4000d03	      0xe9fafeffff	                           jmp 0x4000c02	       355	vterm.c	FUNCTION_24	ELSE_3	IF_6
default_malloc	ELSE,0:IF,1:CALL,2:SWITCH,0:functions,0:FOR,0:WHILE,0:DO,0	2
0x4000050	      0xbe01000000	                              mov esi, 1	        18	vterm.c	FUNCTION_1	CALL_1
0x4000055	      0xe900000000	                           jmp 0x400005a	        18	vterm.c	FUNCTION_1	CALL_1
vterm_set_utf8	ELSE,0:IF,0:CALL,0:SWITCH,0:functions,0:FOR,0:WHILE,0:DO,0	6
0x4000540	         0xfb64718	           movzx eax, byte [rdi + 0x18] 	       114	vterm.c	FUNCTION_11
0x4000544	          0x83e601	                              and esi, 1	       114	vterm.c	FUNCTION_11
0x4000547	          0x83e0fe	                     and eax, 0xfffffffe	       114	vterm.c	FUNCTION_11
0x400054a	             0x9c6	                             or esi, eax	       114	vterm.c	FUNCTION_11
0x400054c	        0x40887718	              mov byte [rdi + 0x18], sil	       114	vterm.c	FUNCTION_11
0x4000550	              0xc3	                                     ret	       114	vterm.c	FUNCTION_11
vterm_output_read	ELSE,0:IF,2:CALL,2:SWITCH,0:functions,0:FOR,0:WHILE,0:DO,0	27
0x4000a80	              0x55	                                push rbp	       246	vterm.c	FUNCTION_21
0x4000a81	              0x53	                                push rbx	       246	vterm.c	FUNCTION_21
0x4000a82	          0x4889fd	                            mov rbp, rdi	       246	vterm.c	FUNCTION_21
0x4000a85	          0x4889d3	                            mov rbx, rdx	       246	vterm.c	FUNCTION_21
0x4000a88	          0x4889f7	                            mov rdi, rsi	       246	vterm.c	FUNCTION_21
0x4000a8b	        0x4883ec08	                              sub rsp, 8	       246	vterm.c	FUNCTION_21
0x4000a8f	    0x488b85100100	           mov rax, qword [rbp + 0x110] 	       247	vterm.c	FUNCTION_21	IF_1
0x4000a96	    0x488bb5000100	           mov rsi, qword [rbp + 0x100] 	        53	string3.h	FUNCTION_29	CALL_3
0x4000a9d	          0x4839d0	                            cmp rax, rdx	        53	string3.h	FUNCTION_29	CALL_3
0x4000aa0	        0x480f46d8	                         cmovbe rbx, rax	        53	string3.h	FUNCTION_29	CALL_3
0x4000aa4	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_29	CALL_3
0x4000aa7	      0xe800000000	                          call 0x4000aac	        53	string3.h	FUNCTION_29	CALL_3
0x4000aac	    0x488b95100100	           mov rdx, qword [rbp + 0x110] 	       252	vterm.c	FUNCTION_21	IF_2
0x4000ab3	          0x4839da	                            cmp rdx, rbx	       252	vterm.c	FUNCTION_21	IF_2
0x4000ab6	            0x761a	                           jbe 0x4000ad2	       252	vterm.c	FUNCTION_21	IF_2
0x4000ab8	    0x488bbd000100	           mov rdi, qword [rbp + 0x100] 	       253	vterm.c	FUNCTION_21	CALL_2
0x4000abf	          0x4829da	                            sub rdx, rbx	        59	string3.h	FUNCTION_30	CALL_3
0x4000ac2	        0x488d341f	                    lea rsi, [rdi + rbx]	        59	string3.h	FUNCTION_30	CALL_3
0x4000ac6	      0xe800000000	                          call 0x4000acb	        59	string3.h	FUNCTION_30	CALL_3
0x4000acb	    0x488b95100100	           mov rdx, qword [rbp + 0x110] 	        59	string3.h	FUNCTION_30	CALL_3
0x4000ad2	          0x4829da	                            sub rdx, rbx	       255	vterm.c	FUNCTION_21
0x4000ad5	          0x4889d8	                            mov rax, rbx	       258	vterm.c	FUNCTION_21
0x4000ad8	    0x488995100100	           mov qword [rbp + 0x110], rdx 	       255	vterm.c	FUNCTION_21
0x4000adf	        0x4883c408	                              add rsp, 8	       258	vterm.c	FUNCTION_21
0x4000ae3	              0x5b	                                 pop rbx	       258	vterm.c	FUNCTION_21
0x4000ae4	              0x5d	                                 pop rbp	       258	vterm.c	FUNCTION_21
0x4000ae5	              0xc3	                                     ret	       258	vterm.c	FUNCTION_21
vterm_free	ELSE,0:IF,2:CALL,5:SWITCH,0:functions,0:FOR,0:WHILE,0:DO,0	24
0x4000430	              0x53	                                push rbx	        67	vterm.c	FUNCTION_5
0x4000431	          0x4889fb	                            mov rbx, rdi	        67	vterm.c	FUNCTION_5
0x4000434	    0x488bbf200100	           mov rdi, qword [rdi + 0x120] 	        68	vterm.c	FUNCTION_5	IF_1
0x400043b	          0x4885ff	                           test rdi, rdi	        68	vterm.c	FUNCTION_5	IF_1
0x400043e	            0x7405	                            je 0x4000445	        68	vterm.c	FUNCTION_5	IF_1
0x4000440	      0xe800000000	                          call 0x4000445	        69	vterm.c	FUNCTION_5	CALL_1
0x4000445	    0x488bbb180100	           mov rdi, qword [rbx + 0x118] 	        71	vterm.c	FUNCTION_5	IF_2
0x400044c	          0x4885ff	                           test rdi, rdi	        71	vterm.c	FUNCTION_5	IF_2
0x400044f	            0x7405	                            je 0x4000456	        71	vterm.c	FUNCTION_5	IF_2
0x4000451	      0xe800000000	                          call 0x4000456	        72	vterm.c	FUNCTION_5	CALL_2
0x4000456	          0x488b03	                    mov rax, qword [rbx]	        87	vterm.c	FUNCTION_7
0x4000459	        0x488b7308	                mov rsi, qword [rbx + 8]	        87	vterm.c	FUNCTION_7
0x400045d	    0x488bbbe80000	            mov rdi, qword [rbx + 0xe8] 	        87	vterm.c	FUNCTION_7
0x4000464	          0xff5008	                    call qword [rax + 8]	        87	vterm.c	FUNCTION_7
0x4000467	          0x488b03	                    mov rax, qword [rbx]	        87	vterm.c	FUNCTION_7
0x400046a	        0x488b7308	                mov rsi, qword [rbx + 8]	        87	vterm.c	FUNCTION_7
0x400046e	    0x488bbb000100	           mov rdi, qword [rbx + 0x100] 	        87	vterm.c	FUNCTION_7
0x4000475	          0xff5008	                    call qword [rax + 8]	        87	vterm.c	FUNCTION_7
0x4000478	          0x488b03	                    mov rax, qword [rbx]	        87	vterm.c	FUNCTION_7
0x400047b	        0x488b7308	                mov rsi, qword [rbx + 8]	        87	vterm.c	FUNCTION_7
0x400047f	          0x4889df	                            mov rdi, rbx	        87	vterm.c	FUNCTION_7
0x4000482	              0x5b	                                 pop rbx	        78	vterm.c	FUNCTION_5
0x4000483	        0x488b4008	                mov rax, qword [rax + 8]	        87	vterm.c	FUNCTION_7
0x4000487	            0xffe0	                                 jmp rax	        87	vterm.c	FUNCTION_7
vterm_output_get_buffer_size	ELSE,0:IF,0:CALL,0:SWITCH,0:functions,0:FOR,0:WHILE,0:DO,0	2
0x4000a50	    0x488b87080100	           mov rax, qword [rdi + 0x108] 	       232	vterm.c	FUNCTION_18
0x4000a57	              0xc3	                                     ret	       233	vterm.c	FUNCTION_18
vterm_get_utf8	ELSE,0:IF,0:CALL,0:SWITCH,0:functions,0:FOR,0:WHILE,0:DO,0	3
0x4000530	         0xfb64718	           movzx eax, byte [rdi + 0x18] 	       109	vterm.c	FUNCTION_10
0x4000534	          0x83e001	                              and eax, 1	       109	vterm.c	FUNCTION_10
0x4000537	              0xc3	                                     ret	       110	vterm.c	FUNCTION_10
vterm_rect_move	ELSE,0:IF,0:CALL,0:SWITCH,0:functions,0:FOR,0:WHILE,0:DO,0	11
0x40000b0	        0x897424f4	              mov dword [rsp - 0xc], esi	        76	vterm.h	FUNCTION_28
0x40000b4	    0x660f6e4424f4	            movd xmm0, dword [rsp - 0xc]	        76	vterm.h	FUNCTION_28
0x40000ba	        0x895424f4	              mov dword [rsp - 0xc], edx	        76	vterm.h	FUNCTION_28
0x40000be	    0x660f6e4c24f4	            movd xmm1, dword [rsp - 0xc]	        76	vterm.h	FUNCTION_28
0x40000c4	        0x660f62c0	                    punpckldq xmm0, xmm0	        76	vterm.h	FUNCTION_28
0x40000c8	        0xf30f6f17	              movdqu xmm2, xmmword [rdi]	        77	vterm.h	FUNCTION_28
0x40000cc	        0x660f62c9	                    punpckldq xmm1, xmm1	        77	vterm.h	FUNCTION_28
0x40000d0	        0x660f6cc1	                   punpcklqdq xmm0, xmm1	        77	vterm.h	FUNCTION_28
0x40000d4	        0x660ffec2	                        paddd xmm0, xmm2	        77	vterm.h	FUNCTION_28
0x40000d8	           0xf1107	              movups xmmword [rdi], xmm0	        77	vterm.h	FUNCTION_28
0x40000db	              0xc3	                                     ret	        77	vterm.h	FUNCTION_28
vterm_set_size	ELSE,0:IF,1:CALL,0:SWITCH,0:functions,0:FOR,0:WHILE,0:DO,0	15
0x40004f0	    0x488b87d00000	            mov rax, qword [rdi + 0xd0] 	       103	vterm.c	FUNCTION_9	IF_1
0x40004f7	            0x89f1	                            mov ecx, esi	        99	vterm.c	FUNCTION_9
0x40004f9	          0x895714	             mov dword [rdi + 0x14], edx	       101	vterm.c	FUNCTION_9
0x40004fc	            0x89d6	                            mov esi, edx	        99	vterm.c	FUNCTION_9
0x40004fe	          0x894f10	             mov dword [rdi + 0x10], ecx	       100	vterm.c	FUNCTION_9
0x4000501	          0x4885c0	                           test rax, rax	       103	vterm.c	FUNCTION_9	IF_1
0x4000504	            0x741a	                            je 0x4000520	       103	vterm.c	FUNCTION_9	IF_1
0x4000506	        0x488b4030	            mov rax, qword [rax + 0x30] 	       103	vterm.c	FUNCTION_9	IF_1
0x400050a	          0x4885c0	                           test rax, rax	       103	vterm.c	FUNCTION_9	IF_1
0x400050d	            0x7411	                            je 0x4000520	       103	vterm.c	FUNCTION_9	IF_1
0x400050f	    0x488b97d80000	            mov rdx, qword [rdi + 0xd8] 	       104	vterm.c	FUNCTION_9	IF_1
0x4000516	            0x89cf	                            mov edi, ecx	       104	vterm.c	FUNCTION_9	IF_1
0x4000518	            0xffe0	                                 jmp rax	       104	vterm.c	FUNCTION_9	IF_1
0x400051a	    0x660f1f440000	                    nop word [rax + rax]	       104	vterm.c	FUNCTION_9	IF_1
0x4000520	            0xf3c3	                                     ret	       104	vterm.c	FUNCTION_9	IF_1
vterm_color_equal	ELSE,0:IF,0:CALL,0:SWITCH,0:functions,0:FOR,0:WHILE,0:DO,0	16
0x40000e0	            0x31c0	                            xor eax, eax	        62	vterm_internal.h	FUNCTION_41
0x40000e2	          0x4038f7	                            cmp dil, sil	        62	vterm_internal.h	FUNCTION_41
0x40000e5	            0x7409	                            je 0x40000f0	        62	vterm_internal.h	FUNCTION_41
0x40000e7	            0xf3c3	                                     ret	        63	vterm_internal.h	FUNCTION_41
0x40000e9	     0xf1f80000000	                         nop dword [rax]	        63	vterm_internal.h	FUNCTION_41
0x40000f0	            0x89f1	                            mov ecx, esi	        62	vterm_internal.h	FUNCTION_41
0x40000f2	           0xfb6d5	                           movzx edx, ch	        62	vterm_internal.h	FUNCTION_41
0x40000f5	          0x4889f9	                            mov rcx, rdi	        62	vterm_internal.h	FUNCTION_41
0x40000f8	            0x38d5	                              cmp ch, dl	        62	vterm_internal.h	FUNCTION_41
0x40000fa	            0x75eb	                           jne 0x40000e7	        62	vterm_internal.h	FUNCTION_41
0x40000fc	          0xc1ef10	                           shr edi, 0x10	        62	vterm_internal.h	FUNCTION_41
0x40000ff	          0xc1ee10	                           shr esi, 0x10	        62	vterm_internal.h	FUNCTION_41
0x4000102	            0x31c0	                            xor eax, eax	        62	vterm_internal.h	FUNCTION_41
0x4000104	          0x4038f7	                            cmp dil, sil	        62	vterm_internal.h	FUNCTION_41
0x4000107	           0xf94c0	                                 sete al	        62	vterm_internal.h	FUNCTION_41
0x400010a	              0xc3	                                     ret	        63	vterm_internal.h	FUNCTION_41
vterm_get_attr_type	ELSE,0:IF,0:CALL,0:SWITCH,1:functions,0:FOR,0:WHILE,0:DO,0	6
0x4000af0	          0x83ef01	                              sub edi, 1	       261	vterm.c	FUNCTION_22
0x4000af3	            0x31c0	                            xor eax, eax	       261	vterm.c	FUNCTION_22
0x4000af5	          0x83ff09	                              cmp edi, 9	       261	vterm.c	FUNCTION_22
0x4000af8	            0x7707	                            ja 0x4000b01	       261	vterm.c	FUNCTION_22
0x4000afa	    0x8b04bd000000	                  mov eax, dword [rdi*4]	       261	vterm.c	FUNCTION_22
0x4000b01	            0xf3c3	                                     ret	       276	vterm.c	FUNCTION_22
vterm_rect_contains	ELSE,0:IF,0:CALL,0:SWITCH,0:functions,0:FOR,0:WHILE,0:DO,0	14
0x4000080	            0x31c0	                            xor eax, eax	        66	vterm.h	FUNCTION_27
0x4000082	            0x39fa	                            cmp edx, edi	        66	vterm.h	FUNCTION_27
0x4000084	            0x7c1b	                            jl 0x40000a1	        66	vterm.h	FUNCTION_27
0x4000086	        0x48c1ff20	                           sar rdi, 0x20	        65	vterm.h	FUNCTION_27
0x400008a	            0x39fa	                            cmp edx, edi	        65	vterm.h	FUNCTION_27
0x400008c	            0x7d13	                           jge 0x40000a1	        65	vterm.h	FUNCTION_27
0x400008e	        0x48c1fa20	                           sar rdx, 0x20	        65	vterm.h	FUNCTION_27
0x4000092	            0x39f2	                            cmp edx, esi	        65	vterm.h	FUNCTION_27
0x4000094	            0x7c0b	                            jl 0x40000a1	        65	vterm.h	FUNCTION_27
0x4000096	        0x48c1fe20	                           sar rsi, 0x20	        66	vterm.h	FUNCTION_27
0x400009a	            0x31c0	                            xor eax, eax	        66	vterm.h	FUNCTION_27
0x400009c	            0x39f2	                            cmp edx, esi	        66	vterm.h	FUNCTION_27
0x400009e	           0xf9cc0	                                 setl al	        66	vterm.h	FUNCTION_27
0x40000a1	            0xf3c3	                                     ret	        67	vterm.h	FUNCTION_27
vterm_output_get_buffer_current	ELSE,0:IF,0:CALL,0:SWITCH,0:functions,0:FOR,0:WHILE,0:DO,0	2
0x4000a60	    0x488b87100100	           mov rax, qword [rdi + 0x110] 	       237	vterm.c	FUNCTION_19
0x4000a67	              0xc3	                                     ret	       238	vterm.c	FUNCTION_19
fill_utf8	ELSE,0:IF,0:CALL,1:SWITCH,1:functions,0:FOR,0:WHILE,1:DO,0	104
0x4000160	        0x4883ff7f	                           cmp rdi, 0x7f	        10	utf8.h	FUNCTION_42	IF_1
0x4000164	            0x7e2a	                           jle 0x4000190	        10	utf8.h	FUNCTION_42	IF_1
0x4000166	    0x4881ffff0700	                          cmp rdi, 0x7ff	        11	utf8.h	FUNCTION_42	IF_2
0x400016d	            0x7f31	                            jg 0x40001a0	        11	utf8.h	FUNCTION_42	IF_2
0x400016f	            0x89f8	                            mov eax, edi	        31	utf8.h	FUNCTION_43	WHILE_1
0x4000171	        0x48c1ff06	                              sar rdi, 6	        32	utf8.h	FUNCTION_43	WHILE_1
0x4000175	          0x83e03f	                           and eax, 0x3f	        31	utf8.h	FUNCTION_43	WHILE_1
0x4000178	          0x4889fa	                            mov rdx, rdi	        32	utf8.h	FUNCTION_43	WHILE_1
0x400017b	          0x83c880	                      or eax, 0xffffff80	        31	utf8.h	FUNCTION_43	WHILE_1
0x400017e	          0x884601	                  mov byte [rsi + 1], al	        31	utf8.h	FUNCTION_43	WHILE_1
0x4000181	      0xb802000000	                              mov eax, 2	        32	utf8.h	FUNCTION_43	WHILE_1
0x4000186	          0x83e21f	                           and edx, 0x1f	        37	utf8.h	FUNCTION_43	SWITCH_1
0x4000189	          0x83cac0	                      or edx, 0xffffffc0	        37	utf8.h	FUNCTION_43	SWITCH_1
0x400018c	            0x8816	                      mov byte [rsi], dl	        37	utf8.h	FUNCTION_43	SWITCH_1
0x400018e	              0xc3	                                     ret	        37	utf8.h	FUNCTION_43	SWITCH_1
0x400018f	              0x90	                                     nop	        37	utf8.h	FUNCTION_43	SWITCH_1
0x4000190	          0x83e77f	                           and edi, 0x7f	        36	utf8.h	FUNCTION_43	SWITCH_1
0x4000193	      0xb801000000	                              mov eax, 1	        36	utf8.h	FUNCTION_43	SWITCH_1
0x4000198	          0x40883e	                     mov byte [rsi], dil	        36	utf8.h	FUNCTION_43	SWITCH_1
0x400019b	              0xc3	                                     ret	        44	utf8.h	FUNCTION_43
0x400019c	         0xf1f4000	                         nop dword [rax]	        44	utf8.h	FUNCTION_43
0x40001a0	    0x4881ffffff00	                         cmp rdi, 0xffff	        12	utf8.h	FUNCTION_42	IF_3
0x40001a7	     0xf8fb3000000	                            jg 0x4000260	        12	utf8.h	FUNCTION_42	IF_3
0x40001ad	      0xb803000000	                              mov eax, 3	        12	utf8.h	FUNCTION_42	IF_3
0x40001b2	      0xb903000000	                              mov ecx, 3	        12	utf8.h	FUNCTION_42	IF_3
0x40001b7	          0x8d50ff	                      lea edx, [rax - 1]	        31	utf8.h	FUNCTION_43	WHILE_1
0x40001ba	          0x4189f8	                            mov r8d, edi	        31	utf8.h	FUNCTION_43	WHILE_1
0x40001bd	        0x4183e03f	                           and r8d, 0x3f	        31	utf8.h	FUNCTION_43	WHILE_1
0x40001c1	        0x4183c880	                      or r8d, 0xffffff80	        31	utf8.h	FUNCTION_43	WHILE_1
0x40001c5	          0x4863d2	                         movsxd rdx, edx	        31	utf8.h	FUNCTION_43	WHILE_1
0x40001c8	        0x44880416	               mov byte [rsi + rdx], r8b	        31	utf8.h	FUNCTION_43	WHILE_1
0x40001cc	          0x4889fa	                            mov rdx, rdi	        32	utf8.h	FUNCTION_43	WHILE_1
0x40001cf	        0x448d40fe	                      lea r8d, [rax - 2]	        30	utf8.h	FUNCTION_43	WHILE_1
0x40001d3	        0x48c1fa06	                              sar rdx, 6	        32	utf8.h	FUNCTION_43	WHILE_1
0x40001d7	          0x83e23f	                           and edx, 0x3f	        31	utf8.h	FUNCTION_43	WHILE_1
0x40001da	          0x4d63c8	                          movsxd r9, r8d	        31	utf8.h	FUNCTION_43	WHILE_1
0x40001dd	          0x83ca80	                      or edx, 0xffffff80	        31	utf8.h	FUNCTION_43	WHILE_1
0x40001e0	        0x4288140e	                 mov byte [rsi + r9], dl	        31	utf8.h	FUNCTION_43	WHILE_1
0x40001e4	          0x4889fa	                            mov rdx, rdi	        32	utf8.h	FUNCTION_43	WHILE_1
0x40001e7	        0x48c1fa0c	                            sar rdx, 0xc	        32	utf8.h	FUNCTION_43	WHILE_1
0x40001eb	        0x4183f801	                              cmp r8d, 1	        29	utf8.h	FUNCTION_43	WHILE_1
0x40001ef	            0x744c	                            je 0x400023d	        29	utf8.h	FUNCTION_43	WHILE_1
0x40001f1	        0x448d40fd	                      lea r8d, [rax - 3]	        30	utf8.h	FUNCTION_43	WHILE_1
0x40001f5	          0x83e23f	                           and edx, 0x3f	        31	utf8.h	FUNCTION_43	WHILE_1
0x40001f8	          0x83ca80	                      or edx, 0xffffff80	        31	utf8.h	FUNCTION_43	WHILE_1
0x40001fb	          0x4d63c8	                          movsxd r9, r8d	        31	utf8.h	FUNCTION_43	WHILE_1
0x40001fe	        0x4288140e	                 mov byte [rsi + r9], dl	        31	utf8.h	FUNCTION_43	WHILE_1
0x4000202	          0x4889fa	                            mov rdx, rdi	        32	utf8.h	FUNCTION_43	WHILE_1
0x4000205	        0x48c1fa12	                           sar rdx, 0x12	        32	utf8.h	FUNCTION_43	WHILE_1
0x4000209	        0x4183f801	                              cmp r8d, 1	        29	utf8.h	FUNCTION_43	WHILE_1
0x400020d	            0x742e	                            je 0x400023d	        29	utf8.h	FUNCTION_43	WHILE_1
0x400020f	        0x448d40fc	                      lea r8d, [rax - 4]	        30	utf8.h	FUNCTION_43	WHILE_1
0x4000213	          0x83e23f	                           and edx, 0x3f	        31	utf8.h	FUNCTION_43	WHILE_1
0x4000216	          0x83ca80	                      or edx, 0xffffff80	        31	utf8.h	FUNCTION_43	WHILE_1
0x4000219	          0x4d63c8	                          movsxd r9, r8d	        31	utf8.h	FUNCTION_43	WHILE_1
0x400021c	        0x4288140e	                 mov byte [rsi + r9], dl	        31	utf8.h	FUNCTION_43	WHILE_1
0x4000220	          0x4889fa	                            mov rdx, rdi	        32	utf8.h	FUNCTION_43	WHILE_1
0x4000223	        0x48c1fa18	                           sar rdx, 0x18	        32	utf8.h	FUNCTION_43	WHILE_1
0x4000227	        0x4183f801	                              cmp r8d, 1	        29	utf8.h	FUNCTION_43	WHILE_1
0x400022b	            0x7410	                            je 0x400023d	        29	utf8.h	FUNCTION_43	WHILE_1
0x400022d	          0x83e23f	                           and edx, 0x3f	        31	utf8.h	FUNCTION_43	WHILE_1
0x4000230	        0x48c1ff1e	                           sar rdi, 0x1e	        32	utf8.h	FUNCTION_43	WHILE_1
0x4000234	          0x83ca80	                      or edx, 0xffffff80	        31	utf8.h	FUNCTION_43	WHILE_1
0x4000237	          0x885601	                  mov byte [rsi + 1], dl	        31	utf8.h	FUNCTION_43	WHILE_1
0x400023a	          0x4889fa	                            mov rdx, rdi	        32	utf8.h	FUNCTION_43	WHILE_1
0x400023d	          0x83f904	                              cmp ecx, 4	        35	utf8.h	FUNCTION_43	SWITCH_1
0x4000240	            0x7476	                            je 0x40002b8	        35	utf8.h	FUNCTION_43	SWITCH_1
0x4000242	            0x764c	                           jbe 0x4000290	        35	utf8.h	FUNCTION_43	SWITCH_1
0x4000244	          0x83f905	                              cmp ecx, 5	        35	utf8.h	FUNCTION_43	SWITCH_1
0x4000247	            0x745f	                            je 0x40002a8	        35	utf8.h	FUNCTION_43	SWITCH_1
0x4000249	          0x83f906	                              cmp ecx, 6	        35	utf8.h	FUNCTION_43	SWITCH_1
0x400024c	     0xf8534ffffff	                           jne 0x4000186	        35	utf8.h	FUNCTION_43	SWITCH_1
0x4000252	          0x83e201	                              and edx, 1	        41	utf8.h	FUNCTION_43	SWITCH_1
0x4000255	          0x83cafc	                      or edx, 0xfffffffc	        41	utf8.h	FUNCTION_43	SWITCH_1
0x4000258	            0x8816	                      mov byte [rsi], dl	        41	utf8.h	FUNCTION_43	SWITCH_1
0x400025a	              0xc3	                                     ret	        41	utf8.h	FUNCTION_43	SWITCH_1
0x400025b	       0xf1f440000	                   nop dword [rax + rax]	        41	utf8.h	FUNCTION_43	SWITCH_1
0x4000260	    0x4881ffffff1f	                       cmp rdi, 0x1fffff	        13	utf8.h	FUNCTION_42	IF_4
0x4000267	      0xb804000000	                              mov eax, 4	        13	utf8.h	FUNCTION_42	IF_4
0x400026c	      0xb904000000	                              mov ecx, 4	        13	utf8.h	FUNCTION_42	IF_4
0x4000271	     0xf8e40ffffff	                           jle 0x40001b7	        13	utf8.h	FUNCTION_42	IF_4
0x4000277	            0x31c0	                            xor eax, eax	        14	utf8.h	FUNCTION_42	IF_5
0x4000279	    0x4881ffffffff	                      cmp rdi, 0x3ffffff	        14	utf8.h	FUNCTION_42	IF_5
0x4000280	           0xf9fc0	                                 setg al	        14	utf8.h	FUNCTION_42	IF_5
0x4000283	          0x83c005	                              add eax, 5	        14	utf8.h	FUNCTION_42	IF_5
0x4000286	            0x89c1	                            mov ecx, eax	        14	utf8.h	FUNCTION_42	IF_5
0x4000288	      0xe92affffff	                           jmp 0x40001b7	        14	utf8.h	FUNCTION_42	IF_5
0x400028d	           0xf1f00	                         nop dword [rax]	        14	utf8.h	FUNCTION_42	IF_5
0x4000290	          0x83f903	                              cmp ecx, 3	        35	utf8.h	FUNCTION_43	SWITCH_1
0x4000293	     0xf85edfeffff	                           jne 0x4000186	        35	utf8.h	FUNCTION_43	SWITCH_1
0x4000299	          0x83e20f	                            and edx, 0xf	        38	utf8.h	FUNCTION_43	SWITCH_1
0x400029c	          0x83cae0	                      or edx, 0xffffffe0	        38	utf8.h	FUNCTION_43	SWITCH_1
0x400029f	            0x8816	                      mov byte [rsi], dl	        38	utf8.h	FUNCTION_43	SWITCH_1
0x40002a1	              0xc3	                                     ret	        38	utf8.h	FUNCTION_43	SWITCH_1
0x40002a2	    0x660f1f440000	                    nop word [rax + rax]	        38	utf8.h	FUNCTION_43	SWITCH_1
0x40002a8	          0x83e203	                              and edx, 3	        40	utf8.h	FUNCTION_43	SWITCH_1
0x40002ab	          0x83caf8	                      or edx, 0xfffffff8	        40	utf8.h	FUNCTION_43	SWITCH_1
0x40002ae	            0x8816	                      mov byte [rsi], dl	        40	utf8.h	FUNCTION_43	SWITCH_1
0x40002b0	              0xc3	                                     ret	        40	utf8.h	FUNCTION_43	SWITCH_1
0x40002b1	     0xf1f80000000	                         nop dword [rax]	        40	utf8.h	FUNCTION_43	SWITCH_1
0x40002b8	          0x83e207	                              and edx, 7	        39	utf8.h	FUNCTION_43	SWITCH_1
0x40002bb	          0x83caf0	                      or edx, 0xfffffff0	        39	utf8.h	FUNCTION_43	SWITCH_1
0x40002be	            0x8816	                      mov byte [rsi], dl	        39	utf8.h	FUNCTION_43	SWITCH_1
0x40002c0	              0xc3	                                     ret	        39	utf8.h	FUNCTION_43	SWITCH_1
vterm_push_output_sprintf	ELSE,0:IF,0:CALL,3:SWITCH,0:functions,0:FOR,0:WHILE,0:DO,0	58
0x4000630	              0x53	                                push rbx	       185	vterm.c	FUNCTION_15
0x4000631	          0x4889fb	                            mov rbx, rdi	       185	vterm.c	FUNCTION_15
0x4000634	    0x4881ecd00000	                           sub rsp, 0xd0	       185	vterm.c	FUNCTION_15
0x400063b	            0x84c0	                             test al, al	       185	vterm.c	FUNCTION_15
0x400063d	      0x4889542430	             mov qword [rsp + 0x30], rdx	       185	vterm.c	FUNCTION_15
0x4000642	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       185	vterm.c	FUNCTION_15
0x4000647	      0x4c89442440	              mov qword [rsp + 0x40], r8	       185	vterm.c	FUNCTION_15
0x400064c	      0x4c894c2448	              mov qword [rsp + 0x48], r9	       185	vterm.c	FUNCTION_15
0x4000651	            0x7437	                            je 0x400068a	       185	vterm.c	FUNCTION_15
0x4000653	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	       185	vterm.c	FUNCTION_15
0x4000658	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	       185	vterm.c	FUNCTION_15
0x400065d	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	       185	vterm.c	FUNCTION_15
0x4000662	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	       185	vterm.c	FUNCTION_15
0x400066a	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	       185	vterm.c	FUNCTION_15
0x4000672	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	       185	vterm.c	FUNCTION_15
0x400067a	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	       185	vterm.c	FUNCTION_15
0x4000682	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	       185	vterm.c	FUNCTION_15
0x400068a	    0x64488b042528	                mov rax, qword fs:[0x28]	       185	vterm.c	FUNCTION_15
0x4000693	      0x4889442418	             mov qword [rsp + 0x18], rax	       185	vterm.c	FUNCTION_15
0x4000698	            0x31c0	                            xor eax, eax	       185	vterm.c	FUNCTION_15
0x400069a	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	       187	vterm.c	FUNCTION_15	CALL_1
0x40006a2	      0x4889442408	                mov qword [rsp + 8], rax	       187	vterm.c	FUNCTION_15	CALL_1
0x40006a7	      0x488d442420	                   lea rax, [rsp + 0x20]	       187	vterm.c	FUNCTION_15	CALL_1
0x40006ac	    0x488bbb100100	           mov rdi, qword [rbx + 0x110] 	       187	vterm.c	FUNCTION_15	CALL_1
0x40006b3	    0xc70424100000	                   mov dword [rsp], 0x10	       187	vterm.c	FUNCTION_15	CALL_1
0x40006ba	    0xc74424043000	               mov dword [rsp + 4], 0x30	       187	vterm.c	FUNCTION_15	CALL_1
0x40006c2	      0x4889442410	             mov qword [rsp + 0x10], rax	       187	vterm.c	FUNCTION_15	CALL_1
0x40006c7	    0x488b83080100	           mov rax, qword [rbx + 0x108] 	       187	vterm.c	FUNCTION_15	CALL_1
0x40006ce	        0x488d50ff	                      lea rdx, [rax - 1]	       153	vterm.c	FUNCTION_14	IF_1	CALL_1
0x40006d2	          0x4839d7	                            cmp rdi, rdx	       153	vterm.c	FUNCTION_14	IF_1	CALL_1
0x40006d5	            0x7219	                            jb 0x40006f0	       153	vterm.c	FUNCTION_14	IF_1	CALL_1
0x40006d7	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       190	vterm.c	FUNCTION_15
0x40006dc	    0x644833042528	                xor rax, qword fs:[0x28]	       190	vterm.c	FUNCTION_15
0x40006e5	            0x7556	                           jne 0x400073d	       190	vterm.c	FUNCTION_15
0x40006e7	    0x4881c4d00000	                           add rsp, 0xd0	       190	vterm.c	FUNCTION_15
0x40006ee	              0x5b	                                 pop rbx	       190	vterm.c	FUNCTION_15
0x40006ef	              0xc3	                                     ret	       190	vterm.c	FUNCTION_15
0x40006f0	          0x4829f8	                            sub rax, rdi	       159	vterm.c	FUNCTION_14
0x40006f3	    0x4803bb000100	            add rdi, qword [rbx + 0x100]	       159	vterm.c	FUNCTION_14
0x40006fa	          0x4889f2	                            mov rdx, rsi	       159	vterm.c	FUNCTION_14
0x40006fd	          0x4889e1	                            mov rcx, rsp	       159	vterm.c	FUNCTION_14
0x4000700	          0x4889c6	                            mov rsi, rax	       159	vterm.c	FUNCTION_14
0x4000703	      0xe800000000	                          call 0x4000708	       159	vterm.c	FUNCTION_14
0x4000708	    0x488b8b080100	           mov rcx, qword [rbx + 0x108] 	       163	vterm.c	FUNCTION_14	IF_2
0x400070f	    0x488b93100100	           mov rdx, qword [rbx + 0x110] 	       163	vterm.c	FUNCTION_14	IF_2
0x4000716	            0x89ce	                            mov esi, ecx	       163	vterm.c	FUNCTION_14	IF_2
0x4000718	            0x29d6	                            sub esi, edx	       163	vterm.c	FUNCTION_14	IF_2
0x400071a	            0x39f0	                            cmp eax, esi	       163	vterm.c	FUNCTION_14	IF_2
0x400071c	            0x7412	                            je 0x4000730	       163	vterm.c	FUNCTION_14	IF_2
0x400071e	            0x4898	                                    cdqe	       168	vterm.c	FUNCTION_14	ELSE_1
0x4000720	          0x4801c2	                            add rdx, rax	       168	vterm.c	FUNCTION_14	ELSE_1
0x4000723	    0x488993100100	            mov qword [rbx + 0x110], rdx	       168	vterm.c	FUNCTION_14	ELSE_1
0x400072a	            0xebab	                           jmp 0x40006d7	       190	vterm.c	FUNCTION_15
0x400072c	         0xf1f4000	                         nop dword [rax]	       190	vterm.c	FUNCTION_15
0x4000730	        0x4883e901	                              sub rcx, 1	       165	vterm.c	FUNCTION_14	IF_2
0x4000734	    0x48898b100100	            mov qword [rbx + 0x110], rcx	       165	vterm.c	FUNCTION_14	IF_2
0x400073b	            0xeb9a	                           jmp 0x40006d7	       165	vterm.c	FUNCTION_14	IF_2
0x400073d	      0xe800000000	                          call 0x4000742	       190	vterm.c	FUNCTION_15
vterm_copy_cells	ELSE,2:IF,2:CALL,0:SWITCH,0:functions,0:FOR,2:WHILE,0:DO,0	80
0x4000d10	            0x4157	                                push r15	       369	vterm.c	FUNCTION_25
0x4000d12	            0x4156	                                push r14	       369	vterm.c	FUNCTION_25
0x4000d14	          0x4d89c7	                             mov r15, r8	       369	vterm.c	FUNCTION_25
0x4000d17	            0x4155	                                push r13	       369	vterm.c	FUNCTION_25
0x4000d19	            0x4154	                                push r12	       369	vterm.c	FUNCTION_25
0x4000d1b	          0x4189cd	                           mov r13d, ecx	       371	vterm.c	FUNCTION_25
0x4000d1e	              0x55	                                push rbp	       369	vterm.c	FUNCTION_25
0x4000d1f	              0x53	                                push rbx	       369	vterm.c	FUNCTION_25
0x4000d20	          0x4989f0	                             mov r8, rsi	       369	vterm.c	FUNCTION_25
0x4000d23	            0x89d1	                            mov ecx, edx	       378	vterm.c	FUNCTION_25	IF_1
0x4000d25	        0x49c1f820	                            sar r8, 0x20	       378	vterm.c	FUNCTION_25	IF_1
0x4000d29	          0x4129f5	                           sub r13d, esi	       371	vterm.c	FUNCTION_25
0x4000d2c	        0x4883ec28	                           sub rsp, 0x28	       369	vterm.c	FUNCTION_25
0x4000d30	          0x4489c3	                            mov ebx, r8d	       369	vterm.c	FUNCTION_25
0x4000d33	            0x89f8	                            mov eax, edi	       369	vterm.c	FUNCTION_25
0x4000d35	        0x4c890c24	                     mov qword [rsp], r9	       369	vterm.c	FUNCTION_25
0x4000d39	          0x4989f9	                             mov r9, rdi	       369	vterm.c	FUNCTION_25
0x4000d3c	        0x89742414	             mov dword [rsp + 0x14], esi	       369	vterm.c	FUNCTION_25
0x4000d40	        0x49c1f920	                            sar r9, 0x20	       369	vterm.c	FUNCTION_25
0x4000d44	            0x29f9	                            sub ecx, edi	       378	vterm.c	FUNCTION_25	IF_1
0x4000d46	    0xc74424180100	               mov dword [rsp + 0x18], 1	       386	vterm.c	FUNCTION_25	ELSE_1
0x4000d4e	      0x44894c2410	             mov dword [rsp + 0x10], r9d	       386	vterm.c	FUNCTION_25	ELSE_1
0x4000d53	        0x894c241c	             mov dword [rsp + 0x1c], ecx	       378	vterm.c	FUNCTION_25	IF_1
0x4000d57	     0xf8891000000	                            js 0x4000dee	       378	vterm.c	FUNCTION_25	IF_1
0x4000d5d	          0x4585ed	                         test r13d, r13d	       389	vterm.c	FUNCTION_25	IF_2
0x4000d60	    0xc74424080100	                  mov dword [rsp + 8], 1	       397	vterm.c	FUNCTION_25	ELSE_2
0x4000d68	     0xf88a4000000	                            js 0x4000e12	       389	vterm.c	FUNCTION_25	IF_2
0x4000d6e	        0x8b4c2410	            mov ecx, dword [rsp + 0x10] 	       400	vterm.c	FUNCTION_25	FOR_1
0x4000d72	        0x8944240c	              mov dword [rsp + 0xc], eax	       400	vterm.c	FUNCTION_25	FOR_1
0x4000d76	            0x39c8	                            cmp eax, ecx	       400	vterm.c	FUNCTION_25	FOR_1
0x4000d78	            0x7465	                            je 0x4000ddf	       400	vterm.c	FUNCTION_25	FOR_1
0x4000d7a	    0x660f1f440000	                    nop word [rax + rax]	       400	vterm.c	FUNCTION_25	FOR_1
0x4000d80	        0x8b442414	            mov eax, dword [rsp + 0x14] 	       401	vterm.c	FUNCTION_25	FOR_1	FOR_2
0x4000d84	            0x39d8	                            cmp eax, ebx	       401	vterm.c	FUNCTION_25	FOR_1	FOR_2
0x4000d86	            0x7445	                            je 0x4000dcd	       401	vterm.c	FUNCTION_25	FOR_1	FOR_2
0x4000d88	        0x8b6c240c	              mov ebp, dword [rsp + 0xc]	       401	vterm.c	FUNCTION_25	FOR_1	FOR_2
0x4000d8c	        0x8b4c241c	            mov ecx, dword [rsp + 0x1c] 	       401	vterm.c	FUNCTION_25	FOR_1	FOR_2
0x4000d90	          0x4189c6	                           mov r14d, eax	       401	vterm.c	FUNCTION_25	FOR_1	FOR_2
0x4000d93	        0x448d2429	                   lea r12d, [rcx + rbp]	       401	vterm.c	FUNCTION_25	FOR_1	FOR_2
0x4000d97	          0x4c89e0	                            mov rax, r12	       401	vterm.c	FUNCTION_25	FOR_1	FOR_2
0x4000d9a	          0x4989ec	                            mov r12, rbp	       401	vterm.c	FUNCTION_25	FOR_1	FOR_2
0x4000d9d	          0x4489f5	                           mov ebp, r14d	       401	vterm.c	FUNCTION_25	FOR_1	FOR_2
0x4000da0	          0x4989c6	                            mov r14, rax	       401	vterm.c	FUNCTION_25	FOR_1	FOR_2
0x4000da3	       0xf1f440000	                   nop dword [rax + rax]	       401	vterm.c	FUNCTION_25	FOR_1	FOR_2
0x4000da8	      0x418d742d00	                    lea esi, [r13 + rbp]	       404	vterm.c	FUNCTION_25	FOR_1	FOR_2
0x4000dad	          0x4889ef	                            mov rdi, rbp	       405	vterm.c	FUNCTION_25	FOR_1	FOR_2
0x4000db0	        0x488b1424	                    mov rdx, qword [rsp]	       405	vterm.c	FUNCTION_25	FOR_1	FOR_2
0x4000db4	        0x48c1e720	                           shl rdi, 0x20	       405	vterm.c	FUNCTION_25	FOR_1	FOR_2
0x4000db8	        0x48c1e620	                           shl rsi, 0x20	       404	vterm.c	FUNCTION_25	FOR_1	FOR_2
0x4000dbc	          0x4c09e7	                             or rdi, r12	       405	vterm.c	FUNCTION_25	FOR_1	FOR_2
0x4000dbf	          0x4c09f6	                             or rsi, r14	       404	vterm.c	FUNCTION_25	FOR_1	FOR_2
0x4000dc2	          0x41ffd7	                                call r15	       405	vterm.c	FUNCTION_25	FOR_1	FOR_2
0x4000dc5	         0x36c2408	                add ebp, dword [rsp + 8]	       401	vterm.c	FUNCTION_25	FOR_1	FOR_2
0x4000dc9	            0x39eb	                            cmp ebx, ebp	       401	vterm.c	FUNCTION_25	FOR_1	FOR_2
0x4000dcb	            0x75db	                           jne 0x4000da8	       401	vterm.c	FUNCTION_25	FOR_1	FOR_2
0x4000dcd	        0x8b4c2418	            mov ecx, dword [rsp + 0x18] 	       401	vterm.c	FUNCTION_25	FOR_1	FOR_2
0x4000dd1	         0x14c240c	              add dword [rsp + 0xc], ecx	       401	vterm.c	FUNCTION_25	FOR_1	FOR_2
0x4000dd5	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       401	vterm.c	FUNCTION_25	FOR_1	FOR_2
0x4000dd9	        0x39442410	            cmp dword [rsp + 0x10], eax 	       400	vterm.c	FUNCTION_25	FOR_1
0x4000ddd	            0x75a1	                           jne 0x4000d80	       400	vterm.c	FUNCTION_25	FOR_1
0x4000ddf	        0x4883c428	                           add rsp, 0x28	       407	vterm.c	FUNCTION_25
0x4000de3	              0x5b	                                 pop rbx	       407	vterm.c	FUNCTION_25
0x4000de4	              0x5d	                                 pop rbp	       407	vterm.c	FUNCTION_25
0x4000de5	            0x415c	                                 pop r12	       407	vterm.c	FUNCTION_25
0x4000de7	            0x415d	                                 pop r13	       407	vterm.c	FUNCTION_25
0x4000de9	            0x415e	                                 pop r14	       407	vterm.c	FUNCTION_25
0x4000deb	            0x415f	                                 pop r15	       407	vterm.c	FUNCTION_25
0x4000ded	              0xc3	                                     ret	       407	vterm.c	FUNCTION_25
0x4000dee	          0x8d47ff	                      lea eax, [rdi - 1]	       380	vterm.c	FUNCTION_25	IF_1
0x4000df1	          0x4585ed	                         test r13d, r13d	       389	vterm.c	FUNCTION_25	IF_2
0x4000df4	    0xc7442418ffff	     mov dword [rsp + 0x18], 0xffffffff 	       381	vterm.c	FUNCTION_25	IF_1
0x4000dfc	    0xc74424080100	                  mov dword [rsp + 8], 1	       397	vterm.c	FUNCTION_25	ELSE_2
0x4000e04	        0x89442410	             mov dword [rsp + 0x10], eax	       380	vterm.c	FUNCTION_25	IF_1
0x4000e08	        0x418d41ff	                       lea eax, [r9 - 1]	       379	vterm.c	FUNCTION_25	IF_1
0x4000e0c	     0xf895cffffff	                           jns 0x4000d6e	       389	vterm.c	FUNCTION_25	IF_2
0x4000e12	        0x418d48ff	                       lea ecx, [r8 - 1]	       390	vterm.c	FUNCTION_25	IF_2
0x4000e16	          0x8d5eff	                      lea ebx, [rsi - 1]	       391	vterm.c	FUNCTION_25	IF_2
0x4000e19	    0xc7442408ffff	        mov dword [rsp + 8], 0xffffffff 	       392	vterm.c	FUNCTION_25	IF_2
0x4000e21	        0x894c2414	             mov dword [rsp + 0x14], ecx	       390	vterm.c	FUNCTION_25	IF_2
0x4000e25	      0xe944ffffff	                           jmp 0x4000d6e	       390	vterm.c	FUNCTION_25	IF_2
vterm_output_get_buffer_remaining	ELSE,0:IF,0:CALL,0:SWITCH,0:functions,0:FOR,0:WHILE,0:DO,0	3
0x4000a70	    0x488b87080100	           mov rax, qword [rdi + 0x108] 	       242	vterm.c	FUNCTION_20
0x4000a77	    0x482b87100100	            sub rax, qword [rdi + 0x110]	       242	vterm.c	FUNCTION_20
0x4000a7e	              0xc3	                                     ret	       243	vterm.c	FUNCTION_20
vterm_push_output_bytes	ELSE,0:IF,1:CALL,1:SWITCH,0:functions,0:FOR,0:WHILE,0:DO,0	18
0x4000560	              0x55	                                push rbp	       118	vterm.c	FUNCTION_12
0x4000561	              0x53	                                push rbx	       118	vterm.c	FUNCTION_12
0x4000562	          0x4889fd	                            mov rbp, rdi	       118	vterm.c	FUNCTION_12
0x4000565	          0x4889d3	                            mov rbx, rdx	       118	vterm.c	FUNCTION_12
0x4000568	        0x4883ec08	                              sub rsp, 8	       118	vterm.c	FUNCTION_12
0x400056c	    0x488bbf100100	           mov rdi, qword [rdi + 0x110] 	       119	vterm.c	FUNCTION_12	IF_1
0x4000573	    0x488b85080100	           mov rax, qword [rbp + 0x108] 	       119	vterm.c	FUNCTION_12	IF_1
0x400057a	          0x4829f8	                            sub rax, rdi	       119	vterm.c	FUNCTION_12	IF_1
0x400057d	          0x4839d0	                            cmp rax, rdx	       119	vterm.c	FUNCTION_12	IF_1
0x4000580	        0x480f46d8	                         cmovbe rbx, rax	       119	vterm.c	FUNCTION_12	IF_1
0x4000584	    0x4803bd000100	            add rdi, qword [rbp + 0x100]	        53	string3.h	FUNCTION_29	CALL_3
0x400058b	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_29	CALL_3
0x400058e	      0xe800000000	                          call 0x4000593	        53	string3.h	FUNCTION_29	CALL_3
0x4000593	    0x48019d100100	           add qword [rbp + 0x110], rbx 	       125	vterm.c	FUNCTION_12
0x400059a	        0x4883c408	                              add rsp, 8	       126	vterm.c	FUNCTION_12
0x400059e	              0x5b	                                 pop rbx	       126	vterm.c	FUNCTION_12
0x400059f	              0x5d	                                 pop rbp	       126	vterm.c	FUNCTION_12
0x40005a0	              0xc3	                                     ret	       126	vterm.c	FUNCTION_12
vterm_get_prop_type	ELSE,0:IF,0:CALL,0:SWITCH,1:functions,0:FOR,0:WHILE,0:DO,0	6
0x4000b10	          0x83ef01	                              sub edi, 1	       279	vterm.c	FUNCTION_23
0x4000b13	            0x31c0	                            xor eax, eax	       279	vterm.c	FUNCTION_23
0x4000b15	          0x83ff09	                              cmp edi, 9	       279	vterm.c	FUNCTION_23
0x4000b18	            0x7707	                            ja 0x4000b21	       279	vterm.c	FUNCTION_23
0x4000b1a	    0x8b04bd000000	                  mov eax, dword [rdi*4]	       279	vterm.c	FUNCTION_23
0x4000b21	            0xf3c3	                                     ret	       294	vterm.c	FUNCTION_23
vterm_new	ELSE,0:IF,0:CALL,1:SWITCH,0:functions,0:FOR,0:WHILE,0:DO,0	34
0x40002d0	            0x4154	                                push r12	        35	vterm.c	FUNCTION_3
0x40002d2	          0x4189fc	                           mov r12d, edi	        35	vterm.c	FUNCTION_3
0x40002d5	              0x55	                                push rbp	        35	vterm.c	FUNCTION_3
0x40002d6	      0xbf28010000	                          mov edi, 0x128	        42	vterm.c	FUNCTION_4
0x40002db	              0x53	                                push rbx	        35	vterm.c	FUNCTION_3
0x40002dc	            0x89f5	                            mov ebp, esi	        35	vterm.c	FUNCTION_3
0x40002de	            0x31f6	                            xor esi, esi	        42	vterm.c	FUNCTION_4
0x40002e0	    0xff1500000000	                 call qword [0x040002e6]	        42	vterm.c	FUNCTION_4
0x40002e6	          0x4889c3	                            mov rbx, rax	        42	vterm.c	FUNCTION_4
0x40002e9	        0x44896010	            mov dword [rax + 0x10], r12d	        47	vterm.c	FUNCTION_4
0x40002ed	          0x896814	             mov dword [rax + 0x14], ebp	        48	vterm.c	FUNCTION_4
0x40002f0	            0x31f6	                            xor esi, esi	        82	vterm.c	FUNCTION_6
0x40002f2	      0xbff4010000	                          mov edi, 0x1f4	        82	vterm.c	FUNCTION_6
0x40002f7	    0x48c700000000	                      mov qword [rax], 0	        44	vterm.c	FUNCTION_4
0x40002fe	    0x48c740080000	                  mov qword [rax + 8], 0	        45	vterm.c	FUNCTION_4
0x4000306	    0xc74020000000	               mov dword [rax + 0x20], 0	        50	vterm.c	FUNCTION_4
0x400030d	    0x48c780d00000	               mov qword [rax + 0xd0], 0	        52	vterm.c	FUNCTION_4
0x4000318	    0x48c780d80000	               mov qword [rax + 0xd8], 0	        53	vterm.c	FUNCTION_4
0x4000323	    0x48c780f00000	          mov qword [rax + 0xf0], 0x1f4 	        55	vterm.c	FUNCTION_4
0x400032e	    0x48c780f80000	               mov qword [rax + 0xf8], 0	        56	vterm.c	FUNCTION_4
0x4000339	    0xff1500000000	                 call qword [0x0400033f]	        82	vterm.c	FUNCTION_6
0x400033f	    0x488983e80000	             mov qword [rbx + 0xe8], rax	        57	vterm.c	FUNCTION_4	CALL_1
0x4000346	          0x488b03	                    mov rax, qword [rbx]	        82	vterm.c	FUNCTION_6
0x4000349	      0xbfc8000000	                           mov edi, 0xc8	        82	vterm.c	FUNCTION_6
0x400034e	    0x48c783080100	          mov qword [rbx + 0x108], 0xc8 	        59	vterm.c	FUNCTION_4
0x4000359	    0x48c783100100	              mov qword [rbx + 0x110], 0	        60	vterm.c	FUNCTION_4
0x4000364	        0x488b7308	                mov rsi, qword [rbx + 8]	        82	vterm.c	FUNCTION_6
0x4000368	            0xff10	                        call qword [rax]	        82	vterm.c	FUNCTION_6
0x400036a	    0x488983000100	            mov qword [rbx + 0x100], rax	        61	vterm.c	FUNCTION_4	CALL_2
0x4000371	          0x4889d8	                            mov rax, rbx	        37	vterm.c	FUNCTION_3
0x4000374	              0x5b	                                 pop rbx	        37	vterm.c	FUNCTION_3
0x4000375	              0x5d	                                 pop rbp	        37	vterm.c	FUNCTION_3
0x4000376	            0x415c	                                 pop r12	        37	vterm.c	FUNCTION_3
0x4000378	              0xc3	                                     ret	        37	vterm.c	FUNCTION_3
vterm_push_output_sprintf_dcs	ELSE,1:IF,2:CALL,7:SWITCH,0:functions,0:FOR,0:WHILE,0:DO,0	87
0x40008b0	            0x4154	                                push r12	       211	vterm.c	FUNCTION_17
0x40008b2	              0x55	                                push rbp	       211	vterm.c	FUNCTION_17
0x40008b3	          0x4989f4	                            mov r12, rsi	       211	vterm.c	FUNCTION_17
0x40008b6	              0x53	                                push rbx	       211	vterm.c	FUNCTION_17
0x40008b7	          0x4889fb	                            mov rbx, rdi	       211	vterm.c	FUNCTION_17
0x40008ba	    0x4881ecd00000	                           sub rsp, 0xd0	       211	vterm.c	FUNCTION_17
0x40008c1	            0x84c0	                             test al, al	       211	vterm.c	FUNCTION_17
0x40008c3	      0x4889542430	             mov qword [rsp + 0x30], rdx	       211	vterm.c	FUNCTION_17
0x40008c8	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       211	vterm.c	FUNCTION_17
0x40008cd	      0x4c89442440	              mov qword [rsp + 0x40], r8	       211	vterm.c	FUNCTION_17
0x40008d2	      0x4c894c2448	              mov qword [rsp + 0x48], r9	       211	vterm.c	FUNCTION_17
0x40008d7	            0x7437	                            je 0x4000910	       211	vterm.c	FUNCTION_17
0x40008d9	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	       211	vterm.c	FUNCTION_17
0x40008de	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	       211	vterm.c	FUNCTION_17
0x40008e3	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	       211	vterm.c	FUNCTION_17
0x40008e8	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	       211	vterm.c	FUNCTION_17
0x40008f0	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	       211	vterm.c	FUNCTION_17
0x40008f8	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	       211	vterm.c	FUNCTION_17
0x4000900	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	       211	vterm.c	FUNCTION_17
0x4000908	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	       211	vterm.c	FUNCTION_17
0x4000910	    0x64488b042528	                mov rax, qword fs:[0x28]	       211	vterm.c	FUNCTION_17
0x4000919	      0x4889442418	             mov qword [rsp + 0x18], rax	       211	vterm.c	FUNCTION_17
0x400091e	            0x31c0	                            xor eax, eax	       211	vterm.c	FUNCTION_17
0x4000920	        0xf6431802	               test byte [rbx + 0x18], 2	       215	vterm.c	FUNCTION_17	IF_1
0x4000924	    0x488bab100100	           mov rbp, qword [rbx + 0x110] 	       212	vterm.c	FUNCTION_17
0x400092b	     0xf859f000000	                           jne 0x40009d0	       215	vterm.c	FUNCTION_17	IF_1
0x4000931	      0xba50000000	                           mov edx, 0x50	       216	vterm.c	FUNCTION_17	CALL_1
0x4000936	      0xbe00000000	                              mov esi, 0	       216	vterm.c	FUNCTION_17	CALL_1
0x400093b	          0x4889df	                            mov rdi, rbx	       216	vterm.c	FUNCTION_17	CALL_1
0x400093e	      0xe800000000	                          call 0x4000943	       216	vterm.c	FUNCTION_17	CALL_1
0x4000943	    0x488d8424f000	                   lea rax, [rsp + 0xf0]	       220	vterm.c	FUNCTION_17	CALL_3
0x400094b	    0x488bb3080100	           mov rsi, qword [rbx + 0x108] 	       220	vterm.c	FUNCTION_17	CALL_3
0x4000952	    0x488bbb100100	           mov rdi, qword [rbx + 0x110] 	       220	vterm.c	FUNCTION_17	CALL_3
0x4000959	    0xc70424100000	                   mov dword [rsp], 0x10	       220	vterm.c	FUNCTION_17	CALL_3
0x4000960	    0xc74424043000	               mov dword [rsp + 4], 0x30	       220	vterm.c	FUNCTION_17	CALL_3
0x4000968	      0x4889442408	                mov qword [rsp + 8], rax	       220	vterm.c	FUNCTION_17	CALL_3
0x400096d	      0x488d442420	                   lea rax, [rsp + 0x20]	       220	vterm.c	FUNCTION_17	CALL_3
0x4000972	      0x4889442410	             mov qword [rsp + 0x10], rax	       220	vterm.c	FUNCTION_17	CALL_3
0x4000977	        0x488d46ff	                      lea rax, [rsi - 1]	       153	vterm.c	FUNCTION_14	IF_1	CALL_1
0x400097b	          0x4839c7	                            cmp rdi, rax	       153	vterm.c	FUNCTION_14	IF_1	CALL_1
0x400097e	            0x7270	                            jb 0x40009f0	       153	vterm.c	FUNCTION_14	IF_1	CALL_1
0x4000980	            0x31c0	                            xor eax, eax	       224	vterm.c	FUNCTION_17	CALL_6
0x4000982	      0xba00000000	                              mov edx, 0	       224	vterm.c	FUNCTION_17	CALL_6
0x4000987	      0xbe9c000000	                           mov esi, 0x9c	       224	vterm.c	FUNCTION_17	CALL_6
0x400098c	          0x4889df	                            mov rdi, rbx	       224	vterm.c	FUNCTION_17	CALL_6
0x400098f	      0xe800000000	                          call 0x4000994	       224	vterm.c	FUNCTION_17	CALL_6
0x4000994	    0x488b83080100	           mov rax, qword [rbx + 0x108] 	       226	vterm.c	FUNCTION_17	IF_2	CALL_7
0x400099b	        0x4883e801	                              sub rax, 1	       226	vterm.c	FUNCTION_17	IF_2	CALL_7
0x400099f	    0x483983100100	           cmp qword [rbx + 0x110], rax 	       226	vterm.c	FUNCTION_17	IF_2	CALL_7
0x40009a6	            0x7207	                            jb 0x40009af	       226	vterm.c	FUNCTION_17	IF_2	CALL_7
0x40009a8	    0x4889ab100100	            mov qword [rbx + 0x110], rbp	       227	vterm.c	FUNCTION_17	IF_2
0x40009af	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       228	vterm.c	FUNCTION_17
0x40009b4	    0x644833042528	                xor rax, qword fs:[0x28]	       228	vterm.c	FUNCTION_17
0x40009bd	     0xf857d000000	                           jne 0x4000a40	       228	vterm.c	FUNCTION_17
0x40009c3	    0x4881c4d00000	                           add rsp, 0xd0	       228	vterm.c	FUNCTION_17
0x40009ca	              0x5b	                                 pop rbx	       228	vterm.c	FUNCTION_17
0x40009cb	              0x5d	                                 pop rbp	       228	vterm.c	FUNCTION_17
0x40009cc	            0x415c	                                 pop r12	       228	vterm.c	FUNCTION_17
0x40009ce	              0xc3	                                     ret	       228	vterm.c	FUNCTION_17
0x40009cf	              0x90	                                     nop	       228	vterm.c	FUNCTION_17
0x40009d0	      0xba90000000	                           mov edx, 0x90	       218	vterm.c	FUNCTION_17	CALL_2
0x40009d5	      0xbe00000000	                              mov esi, 0	       218	vterm.c	FUNCTION_17	CALL_2
0x40009da	          0x4889df	                            mov rdi, rbx	       218	vterm.c	FUNCTION_17	CALL_2
0x40009dd	            0x31c0	                            xor eax, eax	       218	vterm.c	FUNCTION_17	CALL_2
0x40009df	      0xe800000000	                          call 0x40009e4	       218	vterm.c	FUNCTION_17	CALL_2
0x40009e4	      0xe95affffff	                           jmp 0x4000943	       218	vterm.c	FUNCTION_17	CALL_2
0x40009e9	     0xf1f80000000	                         nop dword [rax]	       218	vterm.c	FUNCTION_17	CALL_2
0x40009f0	          0x4829fe	                            sub rsi, rdi	       159	vterm.c	FUNCTION_14
0x40009f3	    0x4803bb000100	            add rdi, qword [rbx + 0x100]	       159	vterm.c	FUNCTION_14
0x40009fa	          0x4889e1	                            mov rcx, rsp	       159	vterm.c	FUNCTION_14
0x40009fd	          0x4c89e2	                            mov rdx, r12	       159	vterm.c	FUNCTION_14
0x4000a00	      0xe800000000	                          call 0x4000a05	       159	vterm.c	FUNCTION_14
0x4000a05	    0x488b8b080100	           mov rcx, qword [rbx + 0x108] 	       163	vterm.c	FUNCTION_14	IF_2
0x4000a0c	    0x488b93100100	           mov rdx, qword [rbx + 0x110] 	       163	vterm.c	FUNCTION_14	IF_2
0x4000a13	            0x89ce	                            mov esi, ecx	       163	vterm.c	FUNCTION_14	IF_2
0x4000a15	            0x29d6	                            sub esi, edx	       163	vterm.c	FUNCTION_14	IF_2
0x4000a17	            0x39f0	                            cmp eax, esi	       163	vterm.c	FUNCTION_14	IF_2
0x4000a19	            0x7415	                            je 0x4000a30	       163	vterm.c	FUNCTION_14	IF_2
0x4000a1b	            0x4898	                                    cdqe	       168	vterm.c	FUNCTION_14	ELSE_1
0x4000a1d	          0x4801c2	                            add rdx, rax	       168	vterm.c	FUNCTION_14	ELSE_1
0x4000a20	    0x488993100100	            mov qword [rbx + 0x110], rdx	       168	vterm.c	FUNCTION_14	ELSE_1
0x4000a27	      0xe954ffffff	                           jmp 0x4000980	       168	vterm.c	FUNCTION_14	ELSE_1
0x4000a2c	         0xf1f4000	                         nop dword [rax]	       168	vterm.c	FUNCTION_14	ELSE_1
0x4000a30	        0x4883e901	                              sub rcx, 1	       165	vterm.c	FUNCTION_14	IF_2
0x4000a34	    0x48898b100100	            mov qword [rbx + 0x110], rcx	       165	vterm.c	FUNCTION_14	IF_2
0x4000a3b	      0xe940ffffff	                           jmp 0x4000980	       165	vterm.c	FUNCTION_14	IF_2
0x4000a40	      0xe800000000	                          call 0x4000a45	       228	vterm.c	FUNCTION_17
default_free	ELSE,0:IF,0:CALL,1:SWITCH,0:functions,0:FOR,0:WHILE,0:DO,0	1
0x4000040	      0xe900000000	                           jmp 0x4000045	        26	vterm.c	FUNCTION_2	CALL_1
vterm_pos_cmp	ELSE,0:IF,0:CALL,0:SWITCH,0:functions,0:FOR,0:WHILE,0:DO,0	11
0x4000060	            0x89f8	                            mov eax, edi	        47	vterm.h	FUNCTION_26
0x4000062	            0x29f0	                            sub eax, esi	        47	vterm.h	FUNCTION_26
0x4000064	            0x39f7	                            cmp edi, esi	        47	vterm.h	FUNCTION_26
0x4000066	            0x7408	                            je 0x4000070	        47	vterm.h	FUNCTION_26
0x4000068	            0xf3c3	                                     ret	        48	vterm.h	FUNCTION_26
0x400006a	    0x660f1f440000	                    nop word [rax + rax]	        48	vterm.h	FUNCTION_26
0x4000070	        0x48c1ff20	                           sar rdi, 0x20	        47	vterm.h	FUNCTION_26
0x4000074	        0x48c1fe20	                           sar rsi, 0x20	        47	vterm.h	FUNCTION_26
0x4000078	            0x89f8	                            mov eax, edi	        47	vterm.h	FUNCTION_26
0x400007a	            0x29f0	                            sub eax, esi	        47	vterm.h	FUNCTION_26
0x400007c	              0xc3	                                     ret	        48	vterm.h	FUNCTION_26
vterm_push_output_sprintf_ctrl	ELSE,1:IF,2:CALL,6:SWITCH,0:functions,0:FOR,0:WHILE,0:DO,0	78
0x4000750	            0x4154	                                push r12	       193	vterm.c	FUNCTION_16
0x4000752	              0x55	                                push rbp	       193	vterm.c	FUNCTION_16
0x4000753	          0x4989d4	                            mov r12, rdx	       193	vterm.c	FUNCTION_16
0x4000756	              0x53	                                push rbx	       193	vterm.c	FUNCTION_16
0x4000757	          0x4889fb	                            mov rbx, rdi	       193	vterm.c	FUNCTION_16
0x400075a	    0x4881ecd00000	                           sub rsp, 0xd0	       193	vterm.c	FUNCTION_16
0x4000761	            0x84c0	                             test al, al	       193	vterm.c	FUNCTION_16
0x4000763	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       193	vterm.c	FUNCTION_16
0x4000768	      0x4c89442440	              mov qword [rsp + 0x40], r8	       193	vterm.c	FUNCTION_16
0x400076d	      0x4c894c2448	              mov qword [rsp + 0x48], r9	       193	vterm.c	FUNCTION_16
0x4000772	            0x7437	                            je 0x40007ab	       193	vterm.c	FUNCTION_16
0x4000774	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	       193	vterm.c	FUNCTION_16
0x4000779	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	       193	vterm.c	FUNCTION_16
0x400077e	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	       193	vterm.c	FUNCTION_16
0x4000783	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	       193	vterm.c	FUNCTION_16
0x400078b	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	       193	vterm.c	FUNCTION_16
0x4000793	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	       193	vterm.c	FUNCTION_16
0x400079b	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	       193	vterm.c	FUNCTION_16
0x40007a3	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	       193	vterm.c	FUNCTION_16
0x40007ab	    0x64488b042528	                mov rax, qword fs:[0x28]	       193	vterm.c	FUNCTION_16
0x40007b4	      0x4889442418	             mov qword [rsp + 0x18], rax	       193	vterm.c	FUNCTION_16
0x40007b9	            0x31c0	                            xor eax, eax	       193	vterm.c	FUNCTION_16
0x40007bb	          0x4084f6	                           test sil, sil	       197	vterm.c	FUNCTION_16	IF_1
0x40007be	        0x400fb6d6	                          movzx edx, sil	       198	vterm.c	FUNCTION_16	CALL_1
0x40007c2	    0x488bab100100	           mov rbp, qword [rbx + 0x110] 	       194	vterm.c	FUNCTION_16
0x40007c9	            0x7875	                            js 0x4000840	       197	vterm.c	FUNCTION_16	IF_1
0x40007cb	      0xbe00000000	                              mov esi, 0	       200	vterm.c	FUNCTION_16	CALL_2
0x40007d0	          0x4889df	                            mov rdi, rbx	       200	vterm.c	FUNCTION_16	CALL_2
0x40007d3	            0x31c0	                            xor eax, eax	       200	vterm.c	FUNCTION_16	CALL_2
0x40007d5	      0xe800000000	                          call 0x40007da	       200	vterm.c	FUNCTION_16	CALL_2
0x40007da	    0x488d8424f000	                   lea rax, [rsp + 0xf0]	       202	vterm.c	FUNCTION_16	CALL_3
0x40007e2	    0x488bb3080100	           mov rsi, qword [rbx + 0x108] 	       202	vterm.c	FUNCTION_16	CALL_3
0x40007e9	    0x488bbb100100	           mov rdi, qword [rbx + 0x110] 	       202	vterm.c	FUNCTION_16	CALL_3
0x40007f0	    0xc70424180000	                   mov dword [rsp], 0x18	       202	vterm.c	FUNCTION_16	CALL_3
0x40007f7	    0xc74424043000	               mov dword [rsp + 4], 0x30	       202	vterm.c	FUNCTION_16	CALL_3
0x40007ff	      0x4889442408	                mov qword [rsp + 8], rax	       202	vterm.c	FUNCTION_16	CALL_3
0x4000804	      0x488d442420	                   lea rax, [rsp + 0x20]	       202	vterm.c	FUNCTION_16	CALL_3
0x4000809	      0x4889442410	             mov qword [rsp + 0x10], rax	       202	vterm.c	FUNCTION_16	CALL_3
0x400080e	        0x488d46ff	                      lea rax, [rsi - 1]	       153	vterm.c	FUNCTION_14	IF_1	CALL_1
0x4000812	          0x4839c7	                            cmp rdi, rax	       153	vterm.c	FUNCTION_14	IF_1	CALL_1
0x4000815	            0x7249	                            jb 0x4000860	       153	vterm.c	FUNCTION_14	IF_1	CALL_1
0x4000817	    0x4889ab100100	            mov qword [rbx + 0x110], rbp	       207	vterm.c	FUNCTION_16	IF_2
0x400081e	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       208	vterm.c	FUNCTION_16
0x4000823	    0x644833042528	                xor rax, qword fs:[0x28]	       208	vterm.c	FUNCTION_16
0x400082c	            0x757b	                           jne 0x40008a9	       208	vterm.c	FUNCTION_16
0x400082e	    0x4881c4d00000	                           add rsp, 0xd0	       208	vterm.c	FUNCTION_16
0x4000835	              0x5b	                                 pop rbx	       208	vterm.c	FUNCTION_16
0x4000836	              0x5d	                                 pop rbp	       208	vterm.c	FUNCTION_16
0x4000837	            0x415c	                                 pop r12	       208	vterm.c	FUNCTION_16
0x4000839	              0xc3	                                     ret	       208	vterm.c	FUNCTION_16
0x400083a	    0x660f1f440000	                    nop word [rax + rax]	       208	vterm.c	FUNCTION_16
0x4000840	        0xf6431802	               test byte [rbx + 0x18], 2	       197	vterm.c	FUNCTION_16	IF_1
0x4000844	            0x7585	                           jne 0x40007cb	       197	vterm.c	FUNCTION_16	IF_1
0x4000846	          0x83ea40	                           sub edx, 0x40	       198	vterm.c	FUNCTION_16	CALL_1
0x4000849	      0xbe00000000	                              mov esi, 0	       198	vterm.c	FUNCTION_16	CALL_1
0x400084e	          0x4889df	                            mov rdi, rbx	       198	vterm.c	FUNCTION_16	CALL_1
0x4000851	      0xe800000000	                          call 0x4000856	       198	vterm.c	FUNCTION_16	CALL_1
0x4000856	            0xeb82	                           jmp 0x40007da	       198	vterm.c	FUNCTION_16	CALL_1
0x4000858	     0xf1f84000000	                   nop dword [rax + rax]	       198	vterm.c	FUNCTION_16	CALL_1
0x4000860	          0x4829fe	                            sub rsi, rdi	       159	vterm.c	FUNCTION_14
0x4000863	    0x4803bb000100	            add rdi, qword [rbx + 0x100]	       159	vterm.c	FUNCTION_14
0x400086a	          0x4889e1	                            mov rcx, rsp	       159	vterm.c	FUNCTION_14
0x400086d	          0x4c89e2	                            mov rdx, r12	       159	vterm.c	FUNCTION_14
0x4000870	      0xe800000000	                          call 0x4000875	       159	vterm.c	FUNCTION_14
0x4000875	    0x488b8b080100	           mov rcx, qword [rbx + 0x108] 	       163	vterm.c	FUNCTION_14	IF_2
0x400087c	    0x488b93100100	           mov rdx, qword [rbx + 0x110] 	       163	vterm.c	FUNCTION_14	IF_2
0x4000883	            0x89ce	                            mov esi, ecx	       163	vterm.c	FUNCTION_14	IF_2
0x4000885	            0x29d6	                            sub esi, edx	       163	vterm.c	FUNCTION_14	IF_2
0x4000887	            0x39f0	                            cmp eax, esi	       163	vterm.c	FUNCTION_14	IF_2
0x4000889	            0x748c	                            je 0x4000817	       163	vterm.c	FUNCTION_14	IF_2
0x400088b	            0x4898	                                    cdqe	       168	vterm.c	FUNCTION_14	ELSE_1
0x400088d	        0x4883e901	                              sub rcx, 1	       206	vterm.c	FUNCTION_16	IF_2	CALL_6
0x4000891	          0x4801c2	                            add rdx, rax	       168	vterm.c	FUNCTION_14	ELSE_1
0x4000894	          0x4839ca	                            cmp rdx, rcx	       206	vterm.c	FUNCTION_16	IF_2	CALL_6
0x4000897	    0x488993100100	            mov qword [rbx + 0x110], rdx	       168	vterm.c	FUNCTION_14	ELSE_1
0x400089e	     0xf827affffff	                            jb 0x400081e	       206	vterm.c	FUNCTION_16	IF_2	CALL_6
0x40008a4	      0xe96effffff	                           jmp 0x4000817	       206	vterm.c	FUNCTION_16	IF_2	CALL_6
0x40008a9	      0xe800000000	                          call 0x40008ae	       208	vterm.c	FUNCTION_16
vterm_get_size	ELSE,0:IF,2:CALL,0:SWITCH,0:functions,0:FOR,0:WHILE,0:DO,0	9
0x40004d0	          0x4885f6	                           test rsi, rsi	        92	vterm.c	FUNCTION_8	IF_1
0x40004d3	            0x7405	                            je 0x40004da	        92	vterm.c	FUNCTION_8	IF_1
0x40004d5	          0x8b4710	            mov eax, dword [rdi + 0x10] 	        93	vterm.c	FUNCTION_8	IF_1
0x40004d8	            0x8906	                    mov dword [rsi], eax	        93	vterm.c	FUNCTION_8	IF_1
0x40004da	          0x4885d2	                           test rdx, rdx	        94	vterm.c	FUNCTION_8	IF_2
0x40004dd	            0x7405	                            je 0x40004e4	        94	vterm.c	FUNCTION_8	IF_2
0x40004df	          0x8b4714	            mov eax, dword [rdi + 0x14] 	        95	vterm.c	FUNCTION_8	IF_2
0x40004e2	            0x8902	                    mov dword [rdx], eax	        95	vterm.c	FUNCTION_8	IF_2
0x40004e4	            0xf3c3	                                     ret	        95	vterm.c	FUNCTION_8	IF_2
