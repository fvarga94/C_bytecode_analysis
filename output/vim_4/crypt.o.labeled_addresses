crypt_get_key	functions,0:ELSE,0:CALL,12:DO,0:WHILE,0:FOR,1:SWITCH,0:IF,5	124
0x4000aa0	            0x4156	                                push r14	       523	crypt.c	FUNCTION_23
0x4000aa2	            0x4155	                                push r13	       523	crypt.c	FUNCTION_23
0x4000aa4	          0x4189fe	                           mov r14d, edi	       523	crypt.c	FUNCTION_23
0x4000aa7	            0x4154	                                push r12	       523	crypt.c	FUNCTION_23
0x4000aa9	              0x55	                                push rbp	       523	crypt.c	FUNCTION_23
0x4000aaa	          0x4189f5	                           mov r13d, esi	       523	crypt.c	FUNCTION_23
0x4000aad	              0x53	                                push rbx	       523	crypt.c	FUNCTION_23
0x4000aae	            0x31ed	                            xor ebp, ebp	       527	crypt.c	FUNCTION_23	FOR_1
0x4000ab0	          0x4531e4	                          xor r12d, r12d	       524	crypt.c	FUNCTION_23
0x4000ab3	    0x8b0500000000	            mov eax, dword [0x04000ab9] 	       530	crypt.c	FUNCTION_23	FOR_1
0x4000ab9	            0x85ed	                           test ebp, ebp	       531	crypt.c	FUNCTION_23	FOR_1	CALL_1
0x4000abb	    0xc70500000000	               mov dword [0x04000ac5], 1	       529	crypt.c	FUNCTION_23	FOR_1
0x4000ac5	      0xba05000000	                              mov edx, 5	       531	crypt.c	FUNCTION_23	FOR_1	CALL_1
0x4000aca	    0x890500000000	            mov dword [0x04000ad0], eax 	       530	crypt.c	FUNCTION_23	FOR_1
0x4000ad0	            0x753e	                           jne 0x4000b10	       531	crypt.c	FUNCTION_23	FOR_1	CALL_1
0x4000ad2	      0xbe00000000	                              mov esi, 0	       531	crypt.c	FUNCTION_23	FOR_1	CALL_1
0x4000ad7	            0x31ff	                            xor edi, edi	       531	crypt.c	FUNCTION_23	FOR_1	CALL_1
0x4000ad9	      0xe800000000	                          call 0x4000ade	       531	crypt.c	FUNCTION_23	FOR_1	CALL_1
0x4000ade	          0x4531c0	                            xor r8d, r8d	       531	crypt.c	FUNCTION_23	FOR_1	CALL_1
0x4000ae1	            0x31c9	                            xor ecx, ecx	       531	crypt.c	FUNCTION_23	FOR_1	CALL_1
0x4000ae3	            0x31d2	                            xor edx, edx	       531	crypt.c	FUNCTION_23	FOR_1	CALL_1
0x4000ae5	            0x31ff	                            xor edi, edi	       531	crypt.c	FUNCTION_23	FOR_1	CALL_1
0x4000ae7	          0x4889c6	                            mov rsi, rax	       531	crypt.c	FUNCTION_23	FOR_1	CALL_1
0x4000aea	      0xe800000000	                          call 0x4000aef	       531	crypt.c	FUNCTION_23	FOR_1	CALL_1
0x4000aef	          0x4885c0	                           test rax, rax	       537	crypt.c	FUNCTION_23	FOR_1	IF_1
0x4000af2	          0x4889c3	                            mov rbx, rax	       531	crypt.c	FUNCTION_23	FOR_1	CALL_1
0x4000af5	    0xc70500000000	               mov dword [0x04000aff], 0	       535	crypt.c	FUNCTION_23	FOR_1
0x4000aff	            0x743c	                            je 0x4000b3d	       537	crypt.c	FUNCTION_23	FOR_1	IF_1
0x4000b01	          0x4439ed	                           cmp ebp, r13d	       540	crypt.c	FUNCTION_23	FOR_1	IF_2
0x4000b04	            0x741a	                            je 0x4000b20	       540	crypt.c	FUNCTION_23	FOR_1	IF_2
0x4000b06	          0x83c501	                              add ebp, 1	       540	crypt.c	FUNCTION_23	FOR_1	IF_2
0x4000b09	          0x4989c4	                            mov r12, rax	       540	crypt.c	FUNCTION_23	FOR_1	IF_2
0x4000b0c	            0xeba5	                           jmp 0x4000ab3	       561	crypt.c	FUNCTION_23	FOR_1
0x4000b0e	            0x6690	                                     nop	       561	crypt.c	FUNCTION_23	FOR_1
0x4000b10	      0xbe00000000	                              mov esi, 0	       531	crypt.c	FUNCTION_23	FOR_1	CALL_1
0x4000b15	            0x31ff	                            xor edi, edi	       531	crypt.c	FUNCTION_23	FOR_1	CALL_1
0x4000b17	      0xe800000000	                          call 0x4000b1c	       531	crypt.c	FUNCTION_23	FOR_1	CALL_1
0x4000b1c	            0xebc0	                           jmp 0x4000ade	       531	crypt.c	FUNCTION_23	FOR_1	CALL_1
0x4000b1e	            0x6690	                                     nop	       531	crypt.c	FUNCTION_23	FOR_1	CALL_1
0x4000b20	          0x4d85e4	                           test r12, r12	       542	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_4
0x4000b23	            0x740f	                            je 0x4000b34	       542	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_4
0x4000b25	          0x4c89e6	                            mov rsi, r12	       542	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_4
0x4000b28	          0x4889c7	                            mov rdi, rax	       542	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_4
0x4000b2b	      0xe800000000	                          call 0x4000b30	       542	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_4
0x4000b30	            0x85c0	                           test eax, eax	       542	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_4
0x4000b32	            0x755c	                           jne 0x4000b90	       542	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_4
0x4000b34	          0x4585f6	                         test r14d, r14d	       552	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_4
0x4000b37	     0xf85d3000000	                           jne 0x4000c10	       552	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_4
0x4000b3d	    0x8b0500000000	            mov eax, dword [0x04000b43] 	       564	crypt.c	FUNCTION_23	IF_5
0x4000b43	            0x85c0	                           test eax, eax	       564	crypt.c	FUNCTION_23	IF_5
0x4000b45	     0xf85b5000000	                           jne 0x4000c00	       564	crypt.c	FUNCTION_23	IF_5
0x4000b4b	          0x4d85e4	                           test r12, r12	       485	crypt.c	FUNCTION_20	IF_1
0x4000b4e	    0xc70500000000	               mov dword [0x04000b58], 0	       566	crypt.c	FUNCTION_23
0x4000b58	    0xc70500000000	               mov dword [0x04000b62], 0	       567	crypt.c	FUNCTION_23
0x4000b62	            0x7420	                            je 0x4000b84	       485	crypt.c	FUNCTION_20	IF_1
0x4000b64	      0x41803c2400	                       cmp byte [r12], 0	       487	crypt.c	FUNCTION_20	IF_1	FOR_1
0x4000b69	          0x4c89e0	                            mov rax, r12	       487	crypt.c	FUNCTION_20	IF_1	FOR_1
0x4000b6c	            0x740e	                            je 0x4000b7c	       487	crypt.c	FUNCTION_20	IF_1	FOR_1
0x4000b6e	            0x6690	                                     nop	       487	crypt.c	FUNCTION_20	IF_1	FOR_1
0x4000b70	          0xc60000	                       mov byte [rax], 0	       488	crypt.c	FUNCTION_20	IF_1	FOR_1
0x4000b73	        0x4883c001	                              add rax, 1	       487	crypt.c	FUNCTION_20	IF_1	FOR_1
0x4000b77	          0x803800	                       cmp byte [rax], 0	       487	crypt.c	FUNCTION_20	IF_1	FOR_1
0x4000b7a	            0x75f4	                           jne 0x4000b70	       487	crypt.c	FUNCTION_20	IF_1	FOR_1
0x4000b7c	          0x4c89e7	                            mov rdi, r12	       489	crypt.c	FUNCTION_20	IF_1	CALL_1
0x4000b7f	      0xe800000000	                          call 0x4000b84	       489	crypt.c	FUNCTION_20	IF_1	CALL_1
0x4000b84	          0x4889d8	                            mov rax, rbx	       571	crypt.c	FUNCTION_23
0x4000b87	              0x5b	                                 pop rbx	       571	crypt.c	FUNCTION_23
0x4000b88	              0x5d	                                 pop rbp	       571	crypt.c	FUNCTION_23
0x4000b89	            0x415c	                                 pop r12	       571	crypt.c	FUNCTION_23
0x4000b8b	            0x415d	                                 pop r13	       571	crypt.c	FUNCTION_23
0x4000b8d	            0x415e	                                 pop r14	       571	crypt.c	FUNCTION_23
0x4000b8f	              0xc3	                                     ret	       571	crypt.c	FUNCTION_23
0x4000b90	            0x31ff	                            xor edi, edi	       544	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_6
0x4000b92	      0xba05000000	                              mov edx, 5	       544	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_6
0x4000b97	      0xbe00000000	                              mov esi, 0	       544	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_6
0x4000b9c	      0xe800000000	                          call 0x4000ba1	       544	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_6
0x4000ba1	          0x4889c7	                            mov rdi, rax	       544	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_6
0x4000ba4	      0xe800000000	                          call 0x4000ba9	       544	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3	CALL_6
0x4000ba9	          0x803b00	                       cmp byte [rbx], 0	       487	crypt.c	FUNCTION_20	IF_1	FOR_1
0x4000bac	          0x4889d8	                            mov rax, rbx	       487	crypt.c	FUNCTION_20	IF_1	FOR_1
0x4000baf	            0x7413	                            je 0x4000bc4	       487	crypt.c	FUNCTION_20	IF_1	FOR_1
0x4000bb1	     0xf1f80000000	                         nop dword [rax]	       487	crypt.c	FUNCTION_20	IF_1	FOR_1
0x4000bb8	          0xc60000	                       mov byte [rax], 0	       488	crypt.c	FUNCTION_20	IF_1	FOR_1
0x4000bbb	        0x4883c001	                              add rax, 1	       487	crypt.c	FUNCTION_20	IF_1	FOR_1
0x4000bbf	          0x803800	                       cmp byte [rax], 0	       487	crypt.c	FUNCTION_20	IF_1	FOR_1
0x4000bc2	            0x75f4	                           jne 0x4000bb8	       487	crypt.c	FUNCTION_20	IF_1	FOR_1
0x4000bc4	          0x4889df	                            mov rdi, rbx	       489	crypt.c	FUNCTION_20	IF_1	CALL_1
0x4000bc7	      0xe800000000	                          call 0x4000bcc	       489	crypt.c	FUNCTION_20	IF_1	CALL_1
0x4000bcc	      0x41803c2400	                       cmp byte [r12], 0	       487	crypt.c	FUNCTION_20	IF_1	FOR_1
0x4000bd1	          0x4c89e0	                            mov rax, r12	       487	crypt.c	FUNCTION_20	IF_1	FOR_1
0x4000bd4	            0x7416	                            je 0x4000bec	       487	crypt.c	FUNCTION_20	IF_1	FOR_1
0x4000bd6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       487	crypt.c	FUNCTION_20	IF_1	FOR_1
0x4000be0	          0xc60000	                       mov byte [rax], 0	       488	crypt.c	FUNCTION_20	IF_1	FOR_1
0x4000be3	        0x4883c001	                              add rax, 1	       487	crypt.c	FUNCTION_20	IF_1	FOR_1
0x4000be7	          0x803800	                       cmp byte [rax], 0	       487	crypt.c	FUNCTION_20	IF_1	FOR_1
0x4000bea	            0x75f4	                           jne 0x4000be0	       487	crypt.c	FUNCTION_20	IF_1	FOR_1
0x4000bec	          0x4c89e7	                            mov rdi, r12	       489	crypt.c	FUNCTION_20	IF_1	CALL_1
0x4000bef	            0x31ed	                            xor ebp, ebp	       489	crypt.c	FUNCTION_20	IF_1	CALL_1
0x4000bf1	          0x4531e4	                          xor r12d, r12d	       547	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_3
0x4000bf4	      0xe800000000	                          call 0x4000bf9	       489	crypt.c	FUNCTION_20	IF_1	CALL_1
0x4000bf9	      0xe9b5feffff	                           jmp 0x4000ab3	       489	crypt.c	FUNCTION_20	IF_1	CALL_1
0x4000bfe	            0x6690	                                     nop	       489	crypt.c	FUNCTION_20	IF_1	CALL_1
0x4000c00	      0xbf0a000000	                            mov edi, 0xa	       565	crypt.c	FUNCTION_23	CALL_11
0x4000c05	      0xe800000000	                          call 0x4000c0a	       565	crypt.c	FUNCTION_23	CALL_11
0x4000c0a	      0xe93cffffff	                           jmp 0x4000b4b	       565	crypt.c	FUNCTION_23	CALL_11
0x4000c0f	              0x90	                                     nop	       565	crypt.c	FUNCTION_23	CALL_11
0x4000c10	            0x31f6	                            xor esi, esi	       554	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_4	CALL_9
0x4000c12	      0xb904000000	                              mov ecx, 4	       554	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_4	CALL_9
0x4000c17	          0x4889da	                            mov rdx, rbx	       554	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_4	CALL_9
0x4000c1a	      0xbf00000000	                              mov edi, 0	       554	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_4	CALL_9
0x4000c1f	      0xe800000000	                          call 0x4000c24	       554	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_4	CALL_9
0x4000c24	          0x803b00	                       cmp byte [rbx], 0	       487	crypt.c	FUNCTION_20	IF_1	FOR_1
0x4000c27	          0x4889d8	                            mov rax, rbx	       487	crypt.c	FUNCTION_20	IF_1	FOR_1
0x4000c2a	            0x7410	                            je 0x4000c3c	       487	crypt.c	FUNCTION_20	IF_1	FOR_1
0x4000c2c	         0xf1f4000	                         nop dword [rax]	       487	crypt.c	FUNCTION_20	IF_1	FOR_1
0x4000c30	          0xc60000	                       mov byte [rax], 0	       488	crypt.c	FUNCTION_20	IF_1	FOR_1
0x4000c33	        0x4883c001	                              add rax, 1	       487	crypt.c	FUNCTION_20	IF_1	FOR_1
0x4000c37	          0x803800	                       cmp byte [rax], 0	       487	crypt.c	FUNCTION_20	IF_1	FOR_1
0x4000c3a	            0x75f4	                           jne 0x4000c30	       487	crypt.c	FUNCTION_20	IF_1	FOR_1
0x4000c3c	          0x4889df	                            mov rdi, rbx	       489	crypt.c	FUNCTION_20	IF_1	CALL_1
0x4000c3f	      0xe800000000	                          call 0x4000c44	       489	crypt.c	FUNCTION_20	IF_1	CALL_1
0x4000c44	    0x488b05000000	            mov rax, qword [0x04000c4b] 	       556	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_4
0x4000c4b	    0x488b98101500	          mov rbx, qword [rax + 0x1510] 	       556	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_4
0x4000c52	      0xe9e6feffff	                           jmp 0x4000b3d	       556	crypt.c	FUNCTION_23	FOR_1	IF_2	IF_4
crypt_decode_inplace	functions,0:ELSE,0:CALL,1:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,0	6
0x4000980	          0x486307	                 movsxd rax, dword [rdi]	       473	crypt.c	FUNCTION_19	CALL_1
0x4000983	          0x4889f1	                            mov rcx, rsi	       473	crypt.c	FUNCTION_19	CALL_1
0x4000986	        0x488d0440	                  lea rax, [rax + rax*2]	       473	crypt.c	FUNCTION_19	CALL_1
0x400098a	        0x48c1e005	                              shl rax, 5	       473	crypt.c	FUNCTION_19	CALL_1
0x400098e	    0x488b80000000	                    mov rax, qword [rax]	       473	crypt.c	FUNCTION_19	CALL_1
0x4000995	            0xffe0	                                 jmp rax	       473	crypt.c	FUNCTION_19	CALL_1
crypt_free_state	functions,0:ELSE,0:CALL,2:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,0	7
0x4000800	              0x53	                                push rbx	       364	crypt.c	FUNCTION_13
0x4000801	          0x4889fb	                            mov rbx, rdi	       364	crypt.c	FUNCTION_13
0x4000804	        0x488b7f08	                mov rdi, qword [rdi + 8]	       365	crypt.c	FUNCTION_13	CALL_1
0x4000808	      0xe800000000	                          call 0x400080d	       365	crypt.c	FUNCTION_13	CALL_1
0x400080d	          0x4889df	                            mov rdi, rbx	       366	crypt.c	FUNCTION_13	CALL_2
0x4000810	              0x5b	                                 pop rbx	       367	crypt.c	FUNCTION_13
0x4000811	      0xe900000000	                           jmp 0x4000816	       366	crypt.c	FUNCTION_13	CALL_2
crypt_create_from_file	functions,0:ELSE,0:CALL,9:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,4	151
0x4000480	            0x4157	                                push r15	       283	crypt.c	FUNCTION_11
0x4000482	            0x4156	                                push r14	       283	crypt.c	FUNCTION_11
0x4000484	          0x4889f9	                            mov rcx, rdi	       295	stdio2.h	FUNCTION_39	CALL_9
0x4000487	            0x4155	                                push r13	       283	crypt.c	FUNCTION_11
0x4000489	            0x4154	                                push r12	       283	crypt.c	FUNCTION_11
0x400048b	          0x4989fd	                            mov r13, rdi	       283	crypt.c	FUNCTION_11
0x400048e	              0x55	                                push rbp	       283	crypt.c	FUNCTION_11
0x400048f	              0x53	                                push rbx	       283	crypt.c	FUNCTION_11
0x4000490	      0xba01000000	                              mov edx, 1	       295	stdio2.h	FUNCTION_39	CALL_9
0x4000495	        0x4883ec48	                           sub rsp, 0x48	       283	crypt.c	FUNCTION_11
0x4000499	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       295	stdio2.h	FUNCTION_39	CALL_9
0x400049e	      0x4889742408	                mov qword [rsp + 8], rsi	       283	crypt.c	FUNCTION_11
0x40004a3	      0xbe0c000000	                            mov esi, 0xc	       295	stdio2.h	FUNCTION_39	CALL_9
0x40004a8	    0x64488b042528	                mov rax, qword fs:[0x28]	       283	crypt.c	FUNCTION_11
0x40004b1	      0x4889442438	             mov qword [rsp + 0x38], rax	       283	crypt.c	FUNCTION_11
0x40004b6	            0x31c0	                            xor eax, eax	       283	crypt.c	FUNCTION_11
0x40004b8	      0xe800000000	                          call 0x40004bd	       295	stdio2.h	FUNCTION_39	CALL_9
0x40004bd	        0x4883f801	                              cmp rax, 1	       290	crypt.c	FUNCTION_11	IF_1	CALL_1
0x40004c1	     0xf85ab000000	                           jne 0x4000572	       290	crypt.c	FUNCTION_11	IF_1	CALL_1
0x40004c7	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40004cc	      0xba0c000000	                            mov edx, 0xc	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40004d1	      0xbe00000000	                              mov esi, 0	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40004d6	      0xe800000000	                          call 0x40004db	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40004db	            0x85c0	                           test eax, eax	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40004dd	     0xf84dd000000	                            je 0x40005c0	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40004e3	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40004e8	      0xba0c000000	                            mov edx, 0xc	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40004ed	      0xbe00000000	                              mov esi, 0	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40004f2	      0xe800000000	                          call 0x40004f7	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40004f7	            0x85c0	                           test eax, eax	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40004f9	     0xf84c1010000	                            je 0x40006c0	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40004ff	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000504	      0xba0c000000	                            mov edx, 0xc	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000509	      0xbe00000000	                              mov esi, 0	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x400050e	      0xe800000000	                          call 0x4000513	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000513	            0x85c0	                           test eax, eax	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x4000515	     0xf84b5010000	                            je 0x40006d0	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x400051b	      0xba00000000	                              mov edx, 0	       163	crypt.c	FUNCTION_2	CALL_2
0x4000520	            0x8b0a	                    mov ecx, dword [rdx]	       163	crypt.c	FUNCTION_2	CALL_2
0x4000522	        0x4883c204	                              add rdx, 4	       163	crypt.c	FUNCTION_2	CALL_2
0x4000526	    0x8d81fffefefe	              lea eax, [rcx - 0x1010101]	       163	crypt.c	FUNCTION_2	CALL_2
0x400052c	            0xf7d1	                                 not ecx	       163	crypt.c	FUNCTION_2	CALL_2
0x400052e	            0x21c8	                            and eax, ecx	       163	crypt.c	FUNCTION_2	CALL_2
0x4000530	      0x2580808080	                     and eax, 0x80808080	       163	crypt.c	FUNCTION_2	CALL_2
0x4000535	            0x74e9	                            je 0x4000520	       163	crypt.c	FUNCTION_2	CALL_2
0x4000537	            0x89c1	                            mov ecx, eax	       163	crypt.c	FUNCTION_2	CALL_2
0x4000539	          0xc1e910	                           shr ecx, 0x10	       163	crypt.c	FUNCTION_2	CALL_2
0x400053c	      0xa980800000	                        test eax, 0x8080	       163	crypt.c	FUNCTION_2	CALL_2
0x4000541	           0xf44c1	                          cmove eax, ecx	       163	crypt.c	FUNCTION_2	CALL_2
0x4000544	        0x488d4a02	                      lea rcx, [rdx + 2]	       163	crypt.c	FUNCTION_2	CALL_2
0x4000548	            0x89c3	                            mov ebx, eax	       163	crypt.c	FUNCTION_2	CALL_2
0x400054a	        0x480f44d1	                          cmove rdx, rcx	       163	crypt.c	FUNCTION_2	CALL_2
0x400054e	              0xc3	                              add bl, al	       163	crypt.c	FUNCTION_2	CALL_2
0x4000550	    0x4881da000000	                              sbb rdx, 0	       163	crypt.c	FUNCTION_2	CALL_2
0x4000557	          0x83fa0c	                            cmp edx, 0xc	       164	crypt.c	FUNCTION_2	IF_3	CALL_3
0x400055a	            0x7f16	                            jg 0x4000572	       164	crypt.c	FUNCTION_2	IF_3	CALL_3
0x400055c	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	       164	crypt.c	FUNCTION_2	IF_3	CALL_3
0x4000561	          0x4863d2	                         movsxd rdx, edx	       164	crypt.c	FUNCTION_2	IF_3	CALL_3
0x4000564	      0xbe00000000	                              mov esi, 0	       164	crypt.c	FUNCTION_2	IF_3	CALL_3
0x4000569	      0xe800000000	                          call 0x400056e	       164	crypt.c	FUNCTION_2	IF_3	CALL_3
0x400056e	            0x85c0	                           test eax, eax	       164	crypt.c	FUNCTION_2	IF_3	CALL_3
0x4000570	            0x742e	                            je 0x40005a0	       164	crypt.c	FUNCTION_2	IF_3	CALL_3
0x4000572	            0x31c0	                            xor eax, eax	       294	crypt.c	FUNCTION_11	IF_2
0x4000574	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	       311	crypt.c	FUNCTION_11
0x4000579	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       311	crypt.c	FUNCTION_11
0x4000582	     0xf8555010000	                           jne 0x40006dd	       311	crypt.c	FUNCTION_11
0x4000588	        0x4883c448	                           add rsp, 0x48	       311	crypt.c	FUNCTION_11
0x400058c	              0x5b	                                 pop rbx	       311	crypt.c	FUNCTION_11
0x400058d	              0x5d	                                 pop rbp	       311	crypt.c	FUNCTION_11
0x400058e	            0x415c	                                 pop r12	       311	crypt.c	FUNCTION_11
0x4000590	            0x415d	                                 pop r13	       311	crypt.c	FUNCTION_11
0x4000592	            0x415e	                                 pop r14	       311	crypt.c	FUNCTION_11
0x4000594	            0x415f	                                 pop r15	       311	crypt.c	FUNCTION_11
0x4000596	              0xc3	                                     ret	       311	crypt.c	FUNCTION_11
0x4000597	    0x660f1f840000	                    nop word [rax + rax]	       311	crypt.c	FUNCTION_11
0x40005a0	            0x31ff	                            xor edi, edi	       165	crypt.c	FUNCTION_2	CALL_5
0x40005a2	      0xba05000000	                              mov edx, 5	       165	crypt.c	FUNCTION_2	CALL_5
0x40005a7	      0xbe00000000	                              mov esi, 0	       165	crypt.c	FUNCTION_2	CALL_5
0x40005ac	      0xe800000000	                          call 0x40005b1	       165	crypt.c	FUNCTION_2	CALL_5
0x40005b1	          0x4889c7	                            mov rdi, rax	       165	crypt.c	FUNCTION_2	CALL_5
0x40005b4	      0xe800000000	                          call 0x40005b9	       165	crypt.c	FUNCTION_2	CALL_5
0x40005b9	            0xebb7	                           jmp 0x4000572	       165	crypt.c	FUNCTION_2	CALL_5
0x40005bb	       0xf1f440000	                   nop dword [rax + rax]	       165	crypt.c	FUNCTION_2	CALL_5
0x40005c0	    0xc74424140000	               mov dword [rsp + 0x14], 0	       160	crypt.c	FUNCTION_2	FOR_1	IF_2	CALL_1
0x40005c8	      0x48636c2414	         movsxd rbp, dword [rsp + 0x14] 	       205	crypt.c	FUNCTION_6
0x40005cd	      0x488d446d00	                  lea rax, [rbp + rbp*2]	       205	crypt.c	FUNCTION_6
0x40005d2	        0x48c1e005	                              shl rax, 5	       205	crypt.c	FUNCTION_6
0x40005d6	    0x448ba0000000	                   mov r12d, dword [rax]	       205	crypt.c	FUNCTION_6
0x40005dd	    0x448bb0000000	                   mov r14d, dword [rax]	       206	crypt.c	FUNCTION_6
0x40005e4	      0x438d5c340c	              lea ebx, [r12 + r14 + 0xc]	       204	crypt.c	FUNCTION_6
0x40005e9	            0x89df	                            mov edi, ebx	       297	crypt.c	FUNCTION_11	IF_3	CALL_4
0x40005eb	      0xe800000000	                          call 0x40005f0	       297	crypt.c	FUNCTION_11	IF_3	CALL_4
0x40005f0	          0x4885c0	                           test rax, rax	       297	crypt.c	FUNCTION_11	IF_3	CALL_4
0x40005f3	          0x4989c7	                            mov r15, rax	       297	crypt.c	FUNCTION_11	IF_3	CALL_4
0x40005f6	     0xf8476ffffff	                            je 0x4000572	       297	crypt.c	FUNCTION_11	IF_3	CALL_4
0x40005fc	      0x488d742420	                   lea rsi, [rsp + 0x20]	        59	string3.h	FUNCTION_43	CALL_3
0x4000601	      0xba0c000000	                            mov edx, 0xc	        59	string3.h	FUNCTION_43	CALL_3
0x4000606	          0x4c89ff	                            mov rdi, r15	        59	string3.h	FUNCTION_43	CALL_3
0x4000609	      0xe800000000	                          call 0x400060e	        59	string3.h	FUNCTION_43	CALL_3
0x400060e	          0x83fb0c	                            cmp ebx, 0xc	       300	crypt.c	FUNCTION_11	IF_4
0x4000611	            0x7e1d	                           jle 0x4000630	       300	crypt.c	FUNCTION_11	IF_4
0x4000613	          0x8d73f4	                    lea esi, [rbx - 0xc]	       295	stdio2.h	FUNCTION_39	CALL_9
0x4000616	        0x498d7f0c	                    lea rdi, [r15 + 0xc]	       295	stdio2.h	FUNCTION_39	CALL_9
0x400061a	          0x4c89e9	                            mov rcx, r13	       295	stdio2.h	FUNCTION_39	CALL_9
0x400061d	      0xba01000000	                              mov edx, 1	       295	stdio2.h	FUNCTION_39	CALL_9
0x4000622	          0x4863f6	                         movsxd rsi, esi	       295	stdio2.h	FUNCTION_39	CALL_9
0x4000625	      0xe800000000	                          call 0x400062a	       295	stdio2.h	FUNCTION_39	CALL_9
0x400062a	        0x4883f801	                              cmp rax, 1	       301	crypt.c	FUNCTION_11	IF_4	CALL_6
0x400062e	            0x7578	                           jne 0x40006a8	       301	crypt.c	FUNCTION_11	IF_4	CALL_6
0x4000630	        0x498d570c	                    lea rdx, [r15 + 0xc]	       270	crypt.c	FUNCTION_10	IF_1
0x4000634	          0x4585e4	                         test r12d, r12d	       270	crypt.c	FUNCTION_10	IF_1
0x4000637	      0xb800000000	                              mov eax, 0	       270	crypt.c	FUNCTION_10	IF_1
0x400063c	        0x480f4ed0	                         cmovle rdx, rax	       270	crypt.c	FUNCTION_10	IF_1
0x4000640	          0x4585f6	                         test r14d, r14d	       271	crypt.c	FUNCTION_10	IF_2
0x4000643	            0x7e5b	                           jle 0x40006a0	       271	crypt.c	FUNCTION_10	IF_2
0x4000645	          0x4963c4	                        movsxd rax, r12d	       272	crypt.c	FUNCTION_10	IF_2
0x4000648	      0x4d8d6c070c	              lea r13, [r15 + rax + 0xc]	       272	crypt.c	FUNCTION_10	IF_2
0x400064d	      0xbf10000000	                           mov edi, 0x10	       246	crypt.c	FUNCTION_9	CALL_1
0x4000652	      0x4889542418	             mov qword [rsp + 0x18], rdx	       246	crypt.c	FUNCTION_9	CALL_1
0x4000657	      0xe800000000	                          call 0x400065c	       246	crypt.c	FUNCTION_9	CALL_1
0x400065c	          0x4889c3	                            mov rbx, rax	       246	crypt.c	FUNCTION_9	CALL_1
0x400065f	        0x8b442414	            mov eax, dword [rsp + 0x14] 	       248	crypt.c	FUNCTION_9
0x4000663	          0x4589f1	                           mov r9d, r14d	       249	crypt.c	FUNCTION_9	CALL_2
0x4000666	          0x4d89e8	                             mov r8, r13	       249	crypt.c	FUNCTION_9	CALL_2
0x4000669	          0x4489e1	                           mov ecx, r12d	       249	crypt.c	FUNCTION_9	CALL_2
0x400066c	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       249	crypt.c	FUNCTION_9	CALL_2
0x4000671	      0x488b742408	                mov rsi, qword [rsp + 8]	       249	crypt.c	FUNCTION_9	CALL_2
0x4000676	          0x4889df	                            mov rdi, rbx	       249	crypt.c	FUNCTION_9	CALL_2
0x4000679	            0x8903	                    mov dword [rbx], eax	       248	crypt.c	FUNCTION_9
0x400067b	      0x488d446d00	                  lea rax, [rbp + rbp*2]	       249	crypt.c	FUNCTION_9	CALL_2
0x4000680	        0x48c1e005	                              shl rax, 5	       249	crypt.c	FUNCTION_9	CALL_2
0x4000684	    0xff9000000000	                        call qword [rax]	       249	crypt.c	FUNCTION_9	CALL_2
0x400068a	          0x4c89ff	                            mov rdi, r15	       309	crypt.c	FUNCTION_11	CALL_9
0x400068d	      0xe800000000	                          call 0x4000692	       309	crypt.c	FUNCTION_11	CALL_9
0x4000692	          0x4889d8	                            mov rax, rbx	       310	crypt.c	FUNCTION_11
0x4000695	      0xe9dafeffff	                           jmp 0x4000574	       310	crypt.c	FUNCTION_11
0x400069a	    0x660f1f440000	                    nop word [rax + rax]	       310	crypt.c	FUNCTION_11
0x40006a0	          0x4531ed	                          xor r13d, r13d	       265	crypt.c	FUNCTION_10
0x40006a3	            0xeba8	                           jmp 0x400064d	       265	crypt.c	FUNCTION_10
0x40006a5	           0xf1f00	                         nop dword [rax]	       265	crypt.c	FUNCTION_10
0x40006a8	          0x4c89ff	                            mov rdi, r15	       304	crypt.c	FUNCTION_11	IF_4	CALL_7
0x40006ab	      0xe800000000	                          call 0x40006b0	       304	crypt.c	FUNCTION_11	IF_4	CALL_7
0x40006b0	            0x31c0	                            xor eax, eax	       305	crypt.c	FUNCTION_11	IF_4
0x40006b2	      0xe9bdfeffff	                           jmp 0x4000574	       305	crypt.c	FUNCTION_11	IF_4
0x40006b7	    0x660f1f840000	                    nop word [rax + rax]	       305	crypt.c	FUNCTION_11	IF_4
0x40006c0	    0xc74424140100	               mov dword [rsp + 0x14], 1	       159	crypt.c	FUNCTION_2	FOR_1
0x40006c8	      0xe9fbfeffff	                           jmp 0x40005c8	       159	crypt.c	FUNCTION_2	FOR_1
0x40006cd	           0xf1f00	                         nop dword [rax]	       159	crypt.c	FUNCTION_2	FOR_1
0x40006d0	    0xc74424140200	               mov dword [rsp + 0x14], 2	       159	crypt.c	FUNCTION_2	FOR_1
0x40006d8	      0xe9ebfeffff	                           jmp 0x40005c8	       159	crypt.c	FUNCTION_2	FOR_1
0x40006dd	      0xe800000000	                          call 0x40006e2	       311	crypt.c	FUNCTION_11
crypt_whole_undofile	functions,0:ELSE,0:CALL,0:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,0	5
0x4000250	          0x4863ff	                         movsxd rdi, edi	       195	crypt.c	FUNCTION_5
0x4000253	        0x488d047f	                  lea rax, [rdi + rdi*2]	       195	crypt.c	FUNCTION_5
0x4000257	        0x48c1e005	                              shl rax, 5	       195	crypt.c	FUNCTION_5
0x400025b	    0x8b8000000000	                    mov eax, dword [rax]	       195	crypt.c	FUNCTION_5
0x4000261	              0xc3	                                     ret	       196	crypt.c	FUNCTION_5
crypt_decode	functions,0:ELSE,0:CALL,1:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,0	4
0x4000940	          0x486307	                 movsxd rax, dword [rdi]	       449	crypt.c	FUNCTION_17	CALL_1
0x4000943	        0x488d0440	                  lea rax, [rax + rax*2]	       449	crypt.c	FUNCTION_17	CALL_1
0x4000947	        0x48c1e005	                              shl rax, 5	       449	crypt.c	FUNCTION_17	CALL_1
0x400094b	    0xffa000000000	                         jmp qword [rax]	       449	crypt.c	FUNCTION_17	CALL_1
crypt_decode_alloc	functions,0:ELSE,0:CALL,3:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,3	51
0x40008a0	            0x4156	                                push r14	       408	crypt.c	FUNCTION_15
0x40008a2	            0x4155	                                push r13	       408	crypt.c	FUNCTION_15
0x40008a4	            0x4154	                                push r12	       408	crypt.c	FUNCTION_15
0x40008a6	              0x55	                                push rbp	       408	crypt.c	FUNCTION_15
0x40008a7	              0x53	                                push rbx	       408	crypt.c	FUNCTION_15
0x40008a8	          0x4c6307	                  movsxd r8, dword [rdi]	       411	crypt.c	FUNCTION_15	IF_1
0x40008ab	        0x4b8d1c40	                    lea rbx, [r8 + r8*2]	       411	crypt.c	FUNCTION_15	IF_1
0x40008af	        0x48c1e305	                              shl rbx, 5	       411	crypt.c	FUNCTION_15	IF_1
0x40008b3	    0x4881c3000000	                              add rbx, 0	       411	crypt.c	FUNCTION_15	IF_1
0x40008ba	        0x488b4348	            mov rax, qword [rbx + 0x48] 	       411	crypt.c	FUNCTION_15	IF_1
0x40008be	          0x4885c0	                           test rax, rax	       411	crypt.c	FUNCTION_15	IF_1
0x40008c1	            0x740d	                            je 0x40008d0	       411	crypt.c	FUNCTION_15	IF_1
0x40008c3	              0x5b	                                 pop rbx	       424	crypt.c	FUNCTION_15
0x40008c4	              0x5d	                                 pop rbp	       424	crypt.c	FUNCTION_15
0x40008c5	            0x415c	                                 pop r12	       424	crypt.c	FUNCTION_15
0x40008c7	            0x415d	                                 pop r13	       424	crypt.c	FUNCTION_15
0x40008c9	            0x415e	                                 pop r14	       424	crypt.c	FUNCTION_15
0x40008cb	            0xffe0	                                 jmp rax	       413	crypt.c	FUNCTION_15	CALL_1
0x40008cd	           0xf1f00	                         nop dword [rax]	       413	crypt.c	FUNCTION_15	CALL_1
0x40008d0	            0x31c0	                            xor eax, eax	       413	crypt.c	FUNCTION_15	CALL_1
0x40008d2	          0x4885d2	                           test rdx, rdx	       415	crypt.c	FUNCTION_15	IF_2
0x40008d5	            0x7509	                           jne 0x40008e0	       415	crypt.c	FUNCTION_15	IF_2
0x40008d7	              0x5b	                                 pop rbx	       424	crypt.c	FUNCTION_15
0x40008d8	              0x5d	                                 pop rbp	       424	crypt.c	FUNCTION_15
0x40008d9	            0x415c	                                 pop r12	       424	crypt.c	FUNCTION_15
0x40008db	            0x415d	                                 pop r13	       424	crypt.c	FUNCTION_15
0x40008dd	            0x415e	                                 pop r14	       424	crypt.c	FUNCTION_15
0x40008df	              0xc3	                                     ret	       424	crypt.c	FUNCTION_15
0x40008e0	          0x4889fd	                            mov rbp, rdi	       424	crypt.c	FUNCTION_15
0x40008e3	            0x89d7	                            mov edi, edx	       419	crypt.c	FUNCTION_15	CALL_2
0x40008e5	          0x4989cc	                            mov r12, rcx	       419	crypt.c	FUNCTION_15	CALL_2
0x40008e8	          0x4989d5	                            mov r13, rdx	       419	crypt.c	FUNCTION_15	CALL_2
0x40008eb	          0x4989f6	                            mov r14, rsi	       419	crypt.c	FUNCTION_15	CALL_2
0x40008ee	      0xe800000000	                          call 0x40008f3	       419	crypt.c	FUNCTION_15	CALL_2
0x40008f3	          0x4885c0	                           test rax, rax	       420	crypt.c	FUNCTION_15	IF_3
0x40008f6	        0x49890424	                    mov qword [r12], rax	       419	crypt.c	FUNCTION_15	CALL_2
0x40008fa	            0x741b	                            je 0x4000917	       420	crypt.c	FUNCTION_15	IF_3
0x40008fc	          0x4889c1	                            mov rcx, rax	       422	crypt.c	FUNCTION_15	CALL_3
0x40008ff	          0x4c89ea	                            mov rdx, r13	       422	crypt.c	FUNCTION_15	CALL_3
0x4000902	          0x4c89f6	                            mov rsi, r14	       422	crypt.c	FUNCTION_15	CALL_3
0x4000905	          0x4889ef	                            mov rdi, rbp	       422	crypt.c	FUNCTION_15	CALL_3
0x4000908	          0xff5338	                 call qword [rbx + 0x38]	       422	crypt.c	FUNCTION_15	CALL_3
0x400090b	              0x5b	                                 pop rbx	       424	crypt.c	FUNCTION_15
0x400090c	          0x4c89e8	                            mov rax, r13	       423	crypt.c	FUNCTION_15
0x400090f	              0x5d	                                 pop rbp	       424	crypt.c	FUNCTION_15
0x4000910	            0x415c	                                 pop r12	       424	crypt.c	FUNCTION_15
0x4000912	            0x415d	                                 pop r13	       424	crypt.c	FUNCTION_15
0x4000914	            0x415e	                                 pop r14	       424	crypt.c	FUNCTION_15
0x4000916	              0xc3	                                     ret	       424	crypt.c	FUNCTION_15
0x4000917	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       421	crypt.c	FUNCTION_15	IF_3
0x400091e	            0xebb7	                           jmp 0x40008d7	       421	crypt.c	FUNCTION_15	IF_3
crypt_set_cm_option	functions,0:ELSE,0:CALL,2:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,0	17
0x4000290	              0x55	                                push rbp	       215	crypt.c	FUNCTION_7
0x4000291	              0x53	                                push rbx	       215	crypt.c	FUNCTION_7
0x4000292	          0x4889fd	                            mov rbp, rdi	       215	crypt.c	FUNCTION_7
0x4000295	            0x89f3	                            mov ebx, esi	       215	crypt.c	FUNCTION_7
0x4000297	        0x4883ec08	                              sub rsp, 8	       215	crypt.c	FUNCTION_7
0x400029b	    0x488bbf481700	          mov rdi, qword [rdi + 0x1748] 	       216	crypt.c	FUNCTION_7	CALL_1
0x40002a2	      0xe800000000	                          call 0x40002a7	       216	crypt.c	FUNCTION_7	CALL_1
0x40002a7	          0x4863f3	                         movsxd rsi, ebx	       217	crypt.c	FUNCTION_7	CALL_2
0x40002aa	        0x488d0476	                  lea rax, [rsi + rsi*2]	       217	crypt.c	FUNCTION_7	CALL_2
0x40002ae	        0x48c1e005	                              shl rax, 5	       217	crypt.c	FUNCTION_7	CALL_2
0x40002b2	    0x488bb8000000	                    mov rdi, qword [rax]	       217	crypt.c	FUNCTION_7	CALL_2
0x40002b9	      0xe800000000	                          call 0x40002be	       217	crypt.c	FUNCTION_7	CALL_2
0x40002be	    0x488985481700	          mov qword [rbp + 0x1748], rax 	       217	crypt.c	FUNCTION_7	CALL_2
0x40002c5	        0x4883c408	                              add rsp, 8	       218	crypt.c	FUNCTION_7
0x40002c9	              0x5b	                                 pop rbx	       218	crypt.c	FUNCTION_7
0x40002ca	              0x5d	                                 pop rbp	       218	crypt.c	FUNCTION_7
0x40002cb	              0xc3	                                     ret	       218	crypt.c	FUNCTION_7
crypt_works_inplace	functions,0:ELSE,0:CALL,0:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,0	5
0x40001c0	          0x486307	                 movsxd rax, dword [rdi]	       176	crypt.c	FUNCTION_3
0x40001c3	        0x488d0440	                  lea rax, [rax + rax*2]	       176	crypt.c	FUNCTION_3
0x40001c7	        0x48c1e005	                              shl rax, 5	       176	crypt.c	FUNCTION_3
0x40001cb	    0x8b8000000000	                    mov eax, dword [rax]	       176	crypt.c	FUNCTION_3
0x40001d1	              0xc3	                                     ret	       177	crypt.c	FUNCTION_3
crypt_encode_alloc	functions,0:ELSE,0:CALL,3:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,3	51
0x4000820	            0x4156	                                push r14	       380	crypt.c	FUNCTION_14
0x4000822	            0x4155	                                push r13	       380	crypt.c	FUNCTION_14
0x4000824	            0x4154	                                push r12	       380	crypt.c	FUNCTION_14
0x4000826	              0x55	                                push rbp	       380	crypt.c	FUNCTION_14
0x4000827	              0x53	                                push rbx	       380	crypt.c	FUNCTION_14
0x4000828	          0x4c6307	                  movsxd r8, dword [rdi]	       383	crypt.c	FUNCTION_14	IF_1
0x400082b	        0x4b8d1c40	                    lea rbx, [r8 + r8*2]	       383	crypt.c	FUNCTION_14	IF_1
0x400082f	        0x48c1e305	                              shl rbx, 5	       383	crypt.c	FUNCTION_14	IF_1
0x4000833	    0x4881c3000000	                              add rbx, 0	       383	crypt.c	FUNCTION_14	IF_1
0x400083a	        0x488b4340	            mov rax, qword [rbx + 0x40] 	       383	crypt.c	FUNCTION_14	IF_1
0x400083e	          0x4885c0	                           test rax, rax	       383	crypt.c	FUNCTION_14	IF_1
0x4000841	            0x740d	                            je 0x4000850	       383	crypt.c	FUNCTION_14	IF_1
0x4000843	              0x5b	                                 pop rbx	       395	crypt.c	FUNCTION_14
0x4000844	              0x5d	                                 pop rbp	       395	crypt.c	FUNCTION_14
0x4000845	            0x415c	                                 pop r12	       395	crypt.c	FUNCTION_14
0x4000847	            0x415d	                                 pop r13	       395	crypt.c	FUNCTION_14
0x4000849	            0x415e	                                 pop r14	       395	crypt.c	FUNCTION_14
0x400084b	            0xffe0	                                 jmp rax	       385	crypt.c	FUNCTION_14	CALL_1
0x400084d	           0xf1f00	                         nop dword [rax]	       385	crypt.c	FUNCTION_14	CALL_1
0x4000850	            0x31c0	                            xor eax, eax	       388	crypt.c	FUNCTION_14	IF_2
0x4000852	          0x4885d2	                           test rdx, rdx	       386	crypt.c	FUNCTION_14	IF_2
0x4000855	            0x7509	                           jne 0x4000860	       386	crypt.c	FUNCTION_14	IF_2
0x4000857	              0x5b	                                 pop rbx	       395	crypt.c	FUNCTION_14
0x4000858	              0x5d	                                 pop rbp	       395	crypt.c	FUNCTION_14
0x4000859	            0x415c	                                 pop r12	       395	crypt.c	FUNCTION_14
0x400085b	            0x415d	                                 pop r13	       395	crypt.c	FUNCTION_14
0x400085d	            0x415e	                                 pop r14	       395	crypt.c	FUNCTION_14
0x400085f	              0xc3	                                     ret	       395	crypt.c	FUNCTION_14
0x4000860	          0x4889fd	                            mov rbp, rdi	       395	crypt.c	FUNCTION_14
0x4000863	            0x89d7	                            mov edi, edx	       390	crypt.c	FUNCTION_14	CALL_2
0x4000865	          0x4989cc	                            mov r12, rcx	       390	crypt.c	FUNCTION_14	CALL_2
0x4000868	          0x4989d5	                            mov r13, rdx	       390	crypt.c	FUNCTION_14	CALL_2
0x400086b	          0x4989f6	                            mov r14, rsi	       390	crypt.c	FUNCTION_14	CALL_2
0x400086e	      0xe800000000	                          call 0x4000873	       390	crypt.c	FUNCTION_14	CALL_2
0x4000873	          0x4885c0	                           test rax, rax	       391	crypt.c	FUNCTION_14	IF_3
0x4000876	        0x49890424	                    mov qword [r12], rax	       390	crypt.c	FUNCTION_14	CALL_2
0x400087a	            0x741b	                            je 0x4000897	       391	crypt.c	FUNCTION_14	IF_3
0x400087c	          0x4889c1	                            mov rcx, rax	       393	crypt.c	FUNCTION_14	CALL_3
0x400087f	          0x4c89ea	                            mov rdx, r13	       393	crypt.c	FUNCTION_14	CALL_3
0x4000882	          0x4c89f6	                            mov rsi, r14	       393	crypt.c	FUNCTION_14	CALL_3
0x4000885	          0x4889ef	                            mov rdi, rbp	       393	crypt.c	FUNCTION_14	CALL_3
0x4000888	          0xff5330	                 call qword [rbx + 0x30]	       393	crypt.c	FUNCTION_14	CALL_3
0x400088b	              0x5b	                                 pop rbx	       395	crypt.c	FUNCTION_14
0x400088c	          0x4c89e8	                            mov rax, r13	       394	crypt.c	FUNCTION_14
0x400088f	              0x5d	                                 pop rbp	       395	crypt.c	FUNCTION_14
0x4000890	            0x415c	                                 pop r12	       395	crypt.c	FUNCTION_14
0x4000892	            0x415d	                                 pop r13	       395	crypt.c	FUNCTION_14
0x4000894	            0x415e	                                 pop r14	       395	crypt.c	FUNCTION_14
0x4000896	              0xc3	                                     ret	       395	crypt.c	FUNCTION_14
0x4000897	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       392	crypt.c	FUNCTION_14	IF_3
0x400089e	            0xebb7	                           jmp 0x4000857	       392	crypt.c	FUNCTION_14	IF_3
crypt_self_test	functions,0:ELSE,0:CALL,2:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,1	34
0x40002d0	    0x488b05000000	            mov rax, qword [0x040002d7] 	       185	crypt.c	FUNCTION_4	CALL_1
0x40002d7	      0xbf00000000	                              mov edi, 0	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x40002dc	      0xb904000000	                              mov ecx, 4	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x40002e1	    0x488b80481700	          mov rax, qword [rax + 0x1748] 	       185	crypt.c	FUNCTION_4	CALL_1
0x40002e8	          0x803800	                       cmp byte [rax], 0	       185	crypt.c	FUNCTION_4	CALL_1
0x40002eb	    0x480f44050000	           cmove rax, qword [0x040002f3]	       185	crypt.c	FUNCTION_4	CALL_1
0x40002f3	          0x4889c6	                            mov rsi, rax	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x40002f6	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x40002f8	            0x7456	                            je 0x4000350	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x40002fa	      0xbf00000000	                              mov edi, 0	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x40002ff	      0xb909000000	                              mov ecx, 9	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000304	          0x4889c6	                            mov rsi, rax	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000307	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000309	            0x7425	                            je 0x4000330	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x400030b	          0x4889c6	                            mov rsi, rax	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x400030e	      0xbf00000000	                              mov edi, 0	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000313	      0xb90a000000	                            mov ecx, 0xa	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000318	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x400031a	      0xb802000000	                              mov eax, 2	       140	crypt.c	FUNCTION_1	FOR_1
0x400031f	            0x7414	                            je 0x4000335	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000321	      0xb801000000	                              mov eax, 1	       232	crypt.c	FUNCTION_8
0x4000326	              0xc3	                                     ret	       232	crypt.c	FUNCTION_8
0x4000327	    0x660f1f840000	                    nop word [rax + rax]	       232	crypt.c	FUNCTION_8
0x4000330	      0xb801000000	                              mov eax, 1	       140	crypt.c	FUNCTION_1	FOR_1
0x4000335	        0x488d0440	                  lea rax, [rax + rax*2]	       140	crypt.c	FUNCTION_1	FOR_1
0x4000339	        0x48c1e005	                              shl rax, 5	       140	crypt.c	FUNCTION_1	FOR_1
0x400033d	    0x488b90000000	                    mov rdx, qword [rax]	       140	crypt.c	FUNCTION_1	FOR_1
0x4000344	          0x4885d2	                           test rdx, rdx	       229	crypt.c	FUNCTION_8	IF_1
0x4000347	            0x74d8	                            je 0x4000321	       229	crypt.c	FUNCTION_8	IF_1
0x4000349	            0x31c0	                            xor eax, eax	       231	crypt.c	FUNCTION_8	CALL_2
0x400034b	            0xffe2	                                 jmp rdx	       231	crypt.c	FUNCTION_8	CALL_2
0x400034d	           0xf1f00	                         nop dword [rax]	       231	crypt.c	FUNCTION_8	CALL_2
0x4000350	            0x31c0	                            xor eax, eax	       140	crypt.c	FUNCTION_1	FOR_1
0x4000352	            0xebe1	                           jmp 0x4000335	       140	crypt.c	FUNCTION_1	FOR_1
crypt_encode	functions,0:ELSE,0:CALL,1:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,0	4
0x4000920	          0x486307	                 movsxd rax, dword [rdi]	       436	crypt.c	FUNCTION_16	CALL_1
0x4000923	        0x488d0440	                  lea rax, [rax + rax*2]	       436	crypt.c	FUNCTION_16	CALL_1
0x4000927	        0x48c1e005	                              shl rax, 5	       436	crypt.c	FUNCTION_16	CALL_1
0x400092b	    0xffa000000000	                         jmp qword [rax]	       436	crypt.c	FUNCTION_16	CALL_1
crypt_append_msg	functions,0:ELSE,1:CALL,6:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,1	52
0x4000c60	              0x55	                                push rbp	       580	crypt.c	FUNCTION_24
0x4000c61	              0x53	                                push rbx	       580	crypt.c	FUNCTION_24
0x4000c62	      0xb904000000	                              mov ecx, 4	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000c67	          0x4889fb	                            mov rbx, rdi	       580	crypt.c	FUNCTION_24
0x4000c6a	        0x4883ec08	                              sub rsp, 8	       580	crypt.c	FUNCTION_24
0x4000c6e	    0x488b87481700	          mov rax, qword [rdi + 0x1748] 	       185	crypt.c	FUNCTION_4	CALL_1
0x4000c75	      0xbf00000000	                              mov edi, 0	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000c7a	          0x803800	                       cmp byte [rax], 0	       185	crypt.c	FUNCTION_4	CALL_1
0x4000c7d	    0x480f44050000	           cmove rax, qword [0x04000c85]	       185	crypt.c	FUNCTION_4	CALL_1
0x4000c85	          0x4889c6	                            mov rsi, rax	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000c88	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000c8a	            0x7422	                            je 0x4000cae	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000c8c	      0xbf00000000	                              mov edi, 0	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000c91	      0xb909000000	                              mov ecx, 9	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000c96	          0x4889c6	                            mov rsi, rax	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000c99	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000c9b	            0x743b	                            je 0x4000cd8	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000c9d	      0xbf00000000	                              mov edi, 0	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000ca2	      0xb90a000000	                            mov ecx, 0xa	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000ca7	          0x4889c6	                            mov rsi, rax	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000caa	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000cac	            0x742a	                            je 0x4000cd8	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000cae	      0xbe00000000	                              mov esi, 0	       582	crypt.c	FUNCTION_24	CALL_3
0x4000cb3	            0x31ff	                            xor edi, edi	       582	crypt.c	FUNCTION_24	CALL_3
0x4000cb5	      0xba05000000	                              mov edx, 5	       582	crypt.c	FUNCTION_24	CALL_3
0x4000cba	      0xe800000000	                          call 0x4000cbf	       582	crypt.c	FUNCTION_24	CALL_3
0x4000cbf	    0x488b3d000000	            mov rdi, qword [0x04000cc6] 	       148	string3.h	FUNCTION_52	CALL_3
0x4000cc6	        0x4883c408	                              add rsp, 8	       589	crypt.c	FUNCTION_24
0x4000cca	          0x4889c6	                            mov rsi, rax	       148	string3.h	FUNCTION_52	CALL_3
0x4000ccd	              0x5b	                                 pop rbx	       589	crypt.c	FUNCTION_24
0x4000cce	              0x5d	                                 pop rbp	       589	crypt.c	FUNCTION_24
0x4000ccf	      0xe900000000	                           jmp 0x4000cd4	       148	string3.h	FUNCTION_52	CALL_3
0x4000cd4	         0xf1f4000	                         nop dword [rax]	       148	string3.h	FUNCTION_52	CALL_3
0x4000cd8	    0x488b2d000000	            mov rbp, qword [0x04000cdf] 	       585	crypt.c	FUNCTION_24	ELSE_1	CALL_4
0x4000cdf	          0x4889ef	                            mov rdi, rbp	       148	string3.h	FUNCTION_52	CALL_3
0x4000ce2	      0xe800000000	                          call 0x4000ce7	       148	string3.h	FUNCTION_52	CALL_3
0x4000ce7	      0xba5b000000	                           mov edx, 0x5b	       148	string3.h	FUNCTION_52	CALL_3
0x4000cec	      0x6689540500	                mov word [rbp + rax], dx	       148	string3.h	FUNCTION_52	CALL_3
0x4000cf1	    0x488bb3481700	          mov rsi, qword [rbx + 0x1748] 	       586	crypt.c	FUNCTION_24	ELSE_1	CALL_5
0x4000cf8	    0x488b3d000000	            mov rdi, qword [0x04000cff] 	       148	string3.h	FUNCTION_52	CALL_3
0x4000cff	          0x803e00	                       cmp byte [rsi], 0	       586	crypt.c	FUNCTION_24	ELSE_1	CALL_5
0x4000d02	    0x480f44350000	           cmove rsi, qword [0x04000d0a]	       586	crypt.c	FUNCTION_24	ELSE_1	CALL_5
0x4000d0a	      0xe800000000	                          call 0x4000d0f	       148	string3.h	FUNCTION_52	CALL_3
0x4000d0f	    0x488b1d000000	            mov rbx, qword [0x04000d16] 	       587	crypt.c	FUNCTION_24	ELSE_1	CALL_6
0x4000d16	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_52	CALL_3
0x4000d19	      0xe800000000	                          call 0x4000d1e	       148	string3.h	FUNCTION_52	CALL_3
0x4000d1e	      0xb95d000000	                           mov ecx, 0x5d	       148	string3.h	FUNCTION_52	CALL_3
0x4000d23	        0x66890c03	                mov word [rbx + rax], cx	       148	string3.h	FUNCTION_52	CALL_3
0x4000d27	        0x4883c408	                              add rsp, 8	       589	crypt.c	FUNCTION_24
0x4000d2b	              0x5b	                                 pop rbx	       589	crypt.c	FUNCTION_24
0x4000d2c	              0x5d	                                 pop rbp	       589	crypt.c	FUNCTION_24
0x4000d2d	              0xc3	                                     ret	       589	crypt.c	FUNCTION_24
crypt_check_current_method	functions,0:ELSE,0:CALL,2:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,0	31
0x4000a10	        0x4883ec08	                              sub rsp, 8	       508	crypt.c	FUNCTION_22
0x4000a14	    0x488b05000000	            mov rax, qword [0x04000a1b] 	       185	crypt.c	FUNCTION_4	CALL_1
0x4000a1b	      0xbf00000000	                              mov edi, 0	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000a20	      0xb904000000	                              mov ecx, 4	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000a25	    0x488b80481700	          mov rax, qword [rax + 0x1748] 	       185	crypt.c	FUNCTION_4	CALL_1
0x4000a2c	          0x803800	                       cmp byte [rax], 0	       185	crypt.c	FUNCTION_4	CALL_1
0x4000a2f	    0x480f44050000	           cmove rax, qword [0x04000a37]	       185	crypt.c	FUNCTION_4	CALL_1
0x4000a37	          0x4889c6	                            mov rsi, rax	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000a3a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000a3c	            0x7422	                            je 0x4000a60	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000a3e	      0xbf00000000	                              mov edi, 0	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000a43	      0xb909000000	                              mov ecx, 9	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000a48	          0x4889c6	                            mov rsi, rax	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000a4b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000a4d	            0x7411	                            je 0x4000a60	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000a4f	      0xbf00000000	                              mov edi, 0	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000a54	      0xb90a000000	                            mov ecx, 0xa	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000a59	          0x4889c6	                            mov rsi, rax	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000a5c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000a5e	            0x7430	                            je 0x4000a90	       141	crypt.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4000a60	            0x31ff	                            xor edi, edi	       502	crypt.c	FUNCTION_21	IF_1	CALL_2
0x4000a62	      0xba05000000	                              mov edx, 5	       502	crypt.c	FUNCTION_21	IF_1	CALL_2
0x4000a67	      0xbe00000000	                              mov esi, 0	       502	crypt.c	FUNCTION_21	IF_1	CALL_2
0x4000a6c	    0xc70500000000	               mov dword [0x04000a76], 1	       501	crypt.c	FUNCTION_21	IF_1
0x4000a76	      0xe800000000	                          call 0x4000a7b	       502	crypt.c	FUNCTION_21	IF_1	CALL_2
0x4000a7b	        0x4883c408	                              add rsp, 8	       510	crypt.c	FUNCTION_22
0x4000a7f	          0x4889c7	                            mov rdi, rax	       502	crypt.c	FUNCTION_21	IF_1	CALL_2
0x4000a82	      0xe900000000	                           jmp 0x4000a87	       502	crypt.c	FUNCTION_21	IF_1	CALL_2
0x4000a87	    0x660f1f840000	                    nop word [rax + rax]	       502	crypt.c	FUNCTION_21	IF_1	CALL_2
0x4000a90	        0x4883c408	                              add rsp, 8	       510	crypt.c	FUNCTION_22
0x4000a94	              0xc3	                                     ret	       510	crypt.c	FUNCTION_22
crypt_encode_inplace	functions,0:ELSE,0:CALL,1:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,0	6
0x4000960	          0x486307	                 movsxd rax, dword [rdi]	       461	crypt.c	FUNCTION_18	CALL_1
0x4000963	          0x4889f1	                            mov rcx, rsi	       461	crypt.c	FUNCTION_18	CALL_1
0x4000966	        0x488d0440	                  lea rax, [rax + rax*2]	       461	crypt.c	FUNCTION_18	CALL_1
0x400096a	        0x48c1e005	                              shl rax, 5	       461	crypt.c	FUNCTION_18	CALL_1
0x400096e	    0x488b80000000	                    mov rax, qword [rax]	       461	crypt.c	FUNCTION_18	CALL_1
0x4000975	            0xffe0	                                 jmp rax	       461	crypt.c	FUNCTION_18	CALL_1
crypt_create_for_writing	functions,0:ELSE,0:CALL,6:DO,0:WHILE,0:FOR,0:SWITCH,0:IF,5	77
0x40006f0	            0x4157	                                push r15	       326	crypt.c	FUNCTION_12
0x40006f2	            0x4156	                                push r14	       326	crypt.c	FUNCTION_12
0x40006f4	          0x4989d7	                            mov r15, rdx	       326	crypt.c	FUNCTION_12
0x40006f7	            0x4155	                                push r13	       326	crypt.c	FUNCTION_12
0x40006f9	            0x4154	                                push r12	       326	crypt.c	FUNCTION_12
0x40006fb	              0x55	                                push rbp	       326	crypt.c	FUNCTION_12
0x40006fc	          0x4863ef	                         movsxd rbp, edi	       326	crypt.c	FUNCTION_12
0x40006ff	              0x53	                                push rbx	       326	crypt.c	FUNCTION_12
0x4000700	      0x4c8d6c6d00	                  lea r13, [rbp + rbp*2]	       205	crypt.c	FUNCTION_6
0x4000705	        0x4883ec18	                           sub rsp, 0x18	       326	crypt.c	FUNCTION_12
0x4000709	        0x49c1e505	                              shl r13, 5	       205	crypt.c	FUNCTION_6
0x400070d	        0x48893424	                    mov qword [rsp], rsi	       326	crypt.c	FUNCTION_12
0x4000711	    0x418b9d000000	                    mov ebx, dword [r13]	       205	crypt.c	FUNCTION_6
0x4000718	    0x458ba5000000	                   mov r12d, dword [r13]	       206	crypt.c	FUNCTION_6
0x400071f	    0x4981c5000000	                              add r13, 0	       205	crypt.c	FUNCTION_6
0x4000726	      0x428d7c230c	              lea edi, [rbx + r12 + 0xc]	       204	crypt.c	FUNCTION_6
0x400072b	            0x8939	                    mov dword [rcx], edi	       334	crypt.c	FUNCTION_12
0x400072d	      0xe800000000	                          call 0x4000732	       335	crypt.c	FUNCTION_12	CALL_2
0x4000732	          0x4885c0	                           test rax, rax	       336	crypt.c	FUNCTION_12	IF_1
0x4000735	          0x498907	                    mov qword [r15], rax	       335	crypt.c	FUNCTION_12	CALL_2
0x4000738	     0xf84b2000000	                            je 0x40007f0	       336	crypt.c	FUNCTION_12	IF_1
0x400073e	        0x498b7508	                mov rsi, qword [r13 + 8]	        59	string3.h	FUNCTION_43	CALL_3
0x4000742	      0xba0c000000	                            mov edx, 0xc	        59	string3.h	FUNCTION_43	CALL_3
0x4000747	          0x4889c7	                            mov rdi, rax	        59	string3.h	FUNCTION_43	CALL_3
0x400074a	          0x4989ee	                            mov r14, rbp	        59	string3.h	FUNCTION_43	CALL_3
0x400074d	      0xe800000000	                          call 0x4000752	        59	string3.h	FUNCTION_43	CALL_3
0x4000752	            0x85db	                           test ebx, ebx	       340	crypt.c	FUNCTION_12	IF_2
0x4000754	            0x7f5a	                            jg 0x40007b0	       340	crypt.c	FUNCTION_12	IF_2
0x4000756	          0x4531c0	                            xor r8d, r8d	       329	crypt.c	FUNCTION_12
0x4000759	          0x4531ed	                          xor r13d, r13d	       328	crypt.c	FUNCTION_12
0x400075c	          0x4585e4	                         test r12d, r12d	       340	crypt.c	FUNCTION_12	IF_2
0x400075f	            0x7f4f	                            jg 0x40007b0	       340	crypt.c	FUNCTION_12	IF_2
0x4000761	      0xbf10000000	                           mov edi, 0x10	       246	crypt.c	FUNCTION_9	CALL_1
0x4000766	      0x4c89442408	                 mov qword [rsp + 8], r8	       246	crypt.c	FUNCTION_9	CALL_1
0x400076b	      0xe800000000	                          call 0x4000770	       246	crypt.c	FUNCTION_9	CALL_1
0x4000770	          0x4989c7	                            mov r15, rax	       246	crypt.c	FUNCTION_9	CALL_1
0x4000773	          0x448930	                   mov dword [rax], r14d	       248	crypt.c	FUNCTION_9
0x4000776	      0x488d446d00	                  lea rax, [rbp + rbp*2]	       249	crypt.c	FUNCTION_9	CALL_2
0x400077b	          0x4589e1	                           mov r9d, r12d	       249	crypt.c	FUNCTION_9	CALL_2
0x400077e	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       249	crypt.c	FUNCTION_9	CALL_2
0x4000783	            0x89d9	                            mov ecx, ebx	       249	crypt.c	FUNCTION_9	CALL_2
0x4000785	        0x48c1e005	                              shl rax, 5	       249	crypt.c	FUNCTION_9	CALL_2
0x4000789	          0x4c89ea	                            mov rdx, r13	       249	crypt.c	FUNCTION_9	CALL_2
0x400078c	        0x488b3424	                    mov rsi, qword [rsp]	       249	crypt.c	FUNCTION_9	CALL_2
0x4000790	          0x4c89ff	                            mov rdi, r15	       249	crypt.c	FUNCTION_9	CALL_2
0x4000793	    0xff9000000000	                        call qword [rax]	       249	crypt.c	FUNCTION_9	CALL_2
0x4000799	          0x4c89f8	                            mov rax, r15	       249	crypt.c	FUNCTION_9	CALL_2
0x400079c	        0x4883c418	                           add rsp, 0x18	       357	crypt.c	FUNCTION_12
0x40007a0	              0x5b	                                 pop rbx	       357	crypt.c	FUNCTION_12
0x40007a1	              0x5d	                                 pop rbp	       357	crypt.c	FUNCTION_12
0x40007a2	            0x415c	                                 pop r12	       357	crypt.c	FUNCTION_12
0x40007a4	            0x415d	                                 pop r13	       357	crypt.c	FUNCTION_12
0x40007a6	            0x415e	                                 pop r14	       357	crypt.c	FUNCTION_12
0x40007a8	            0x415f	                                 pop r15	       357	crypt.c	FUNCTION_12
0x40007aa	              0xc3	                                     ret	       357	crypt.c	FUNCTION_12
0x40007ab	       0xf1f440000	                   nop dword [rax + rax]	       357	crypt.c	FUNCTION_12
0x40007b0	          0x4531ed	                          xor r13d, r13d	       328	crypt.c	FUNCTION_12
0x40007b3	            0x85db	                           test ebx, ebx	       342	crypt.c	FUNCTION_12	IF_2	IF_3
0x40007b5	            0x7e07	                           jle 0x40007be	       342	crypt.c	FUNCTION_12	IF_2	IF_3
0x40007b7	          0x498b07	                    mov rax, qword [r15]	       343	crypt.c	FUNCTION_12	IF_2	IF_3
0x40007ba	        0x4c8d680c	                    lea r13, [rax + 0xc]	       343	crypt.c	FUNCTION_12	IF_2	IF_3
0x40007be	          0x4531c0	                            xor r8d, r8d	       329	crypt.c	FUNCTION_12
0x40007c1	          0x4585e4	                         test r12d, r12d	       344	crypt.c	FUNCTION_12	IF_2	IF_4
0x40007c4	            0x7e0b	                           jle 0x40007d1	       344	crypt.c	FUNCTION_12	IF_2	IF_4
0x40007c6	          0x498b17	                    mov rdx, qword [r15]	       345	crypt.c	FUNCTION_12	IF_2	IF_4
0x40007c9	          0x4863c3	                         movsxd rax, ebx	       345	crypt.c	FUNCTION_12	IF_2	IF_4
0x40007cc	      0x4c8d44020c	               lea r8, [rdx + rax + 0xc]	       345	crypt.c	FUNCTION_12	IF_2	IF_4
0x40007d1	          0x4c89c2	                             mov rdx, r8	       350	crypt.c	FUNCTION_12	IF_2	CALL_4
0x40007d4	          0x4489e1	                           mov ecx, r12d	       350	crypt.c	FUNCTION_12	IF_2	CALL_4
0x40007d7	            0x89de	                            mov esi, ebx	       350	crypt.c	FUNCTION_12	IF_2	CALL_4
0x40007d9	          0x4c89ef	                            mov rdi, r13	       350	crypt.c	FUNCTION_12	IF_2	CALL_4
0x40007dc	      0x4c89442408	                 mov qword [rsp + 8], r8	       350	crypt.c	FUNCTION_12	IF_2	CALL_4
0x40007e1	      0xe800000000	                          call 0x40007e6	       350	crypt.c	FUNCTION_12	IF_2	CALL_4
0x40007e6	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       350	crypt.c	FUNCTION_12	IF_2	CALL_4
0x40007eb	      0xe971ffffff	                           jmp 0x4000761	       350	crypt.c	FUNCTION_12	IF_2	CALL_4
0x40007f0	            0x31c0	                            xor eax, eax	       337	crypt.c	FUNCTION_12	IF_1
0x40007f2	            0xeba8	                           jmp 0x400079c	       337	crypt.c	FUNCTION_12	IF_1
