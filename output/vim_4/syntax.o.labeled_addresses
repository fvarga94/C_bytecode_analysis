syn_cmd_spell	DO,0:functions,0:IF,7:WHILE,0:CALL,14:ELSE,6:SWITCH,0:FOR,0	97
0x4000ab0	              0x55	                                push rbp	      3521	syntax.c	FUNCTION_47
0x4000ab1	              0x53	                                push rbx	      3521	syntax.c	FUNCTION_47
0x4000ab2	          0x4889fb	                            mov rbx, rdi	      3521	syntax.c	FUNCTION_47
0x4000ab5	        0x4883ec08	                              sub rsp, 8	      3521	syntax.c	FUNCTION_47
0x4000ab9	          0x488b2f	                    mov rbp, qword [rdi]	      3522	syntax.c	FUNCTION_47
0x4000abc	          0x4889ef	                            mov rdi, rbp	      3525	syntax.c	FUNCTION_47	CALL_1
0x4000abf	      0xe800000000	                          call 0x4000ac4	      3525	syntax.c	FUNCTION_47	CALL_1
0x4000ac4	        0x48894308	                mov qword [rbx + 8], rax	      3525	syntax.c	FUNCTION_47	CALL_1
0x4000ac8	          0x8b4330	            mov eax, dword [rbx + 0x30] 	      3526	syntax.c	FUNCTION_47	IF_1
0x4000acb	            0x85c0	                           test eax, eax	      3526	syntax.c	FUNCTION_47	IF_1
0x4000acd	            0x7411	                            je 0x4000ae0	      3526	syntax.c	FUNCTION_47	IF_1
0x4000acf	        0x4883c408	                              add rsp, 8	      3553	syntax.c	FUNCTION_47
0x4000ad3	              0x5b	                                 pop rbx	      3553	syntax.c	FUNCTION_47
0x4000ad4	              0x5d	                                 pop rbp	      3553	syntax.c	FUNCTION_47
0x4000ad5	              0xc3	                                     ret	      3553	syntax.c	FUNCTION_47
0x4000ad6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3553	syntax.c	FUNCTION_47
0x4000ae0	          0x4889ef	                            mov rdi, rbp	      3529	syntax.c	FUNCTION_47	CALL_2
0x4000ae3	      0xe800000000	                          call 0x4000ae8	      3529	syntax.c	FUNCTION_47	CALL_2
0x4000ae8	        0x807d0000	                       cmp byte [rbp], 0	      3530	syntax.c	FUNCTION_47	IF_2
0x4000aec	          0x4889c3	                            mov rbx, rax	      3529	syntax.c	FUNCTION_47	CALL_2
0x4000aef	     0xf849b000000	                            je 0x4000b90	      3530	syntax.c	FUNCTION_47	IF_2
0x4000af5	      0xba08000000	                              mov edx, 8	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x4000afa	      0xbe00000000	                              mov esi, 0	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x4000aff	          0x4889ef	                            mov rdi, rbp	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x4000b02	      0xe800000000	                          call 0x4000b07	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x4000b07	            0x85c0	                           test eax, eax	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x4000b09	            0x7510	                           jne 0x4000b1b	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x4000b0b	          0x4889d8	                            mov rax, rbx	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x4000b0e	          0x4829e8	                            sub rax, rbp	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x4000b11	        0x4883f808	                              cmp rax, 8	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x4000b15	     0xf84e5000000	                            je 0x4000c00	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x4000b1b	      0xba0a000000	                            mov edx, 0xa	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x4000b20	      0xbe00000000	                              mov esi, 0	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x4000b25	          0x4889ef	                            mov rdi, rbp	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x4000b28	      0xe800000000	                          call 0x4000b2d	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x4000b2d	            0x85c0	                           test eax, eax	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x4000b2f	            0x7510	                           jne 0x4000b41	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x4000b31	          0x4889d8	                            mov rax, rbx	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x4000b34	          0x4829e8	                            sub rax, rbp	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x4000b37	        0x4883f80a	                            cmp rax, 0xa	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x4000b3b	     0xf84df000000	                            je 0x4000c20	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x4000b41	      0xba07000000	                              mov edx, 7	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x4000b46	      0xbe00000000	                              mov esi, 0	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x4000b4b	          0x4889ef	                            mov rdi, rbp	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x4000b4e	      0xe800000000	                          call 0x4000b53	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x4000b53	            0x85c0	                           test eax, eax	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x4000b55	            0x750d	                           jne 0x4000b64	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x4000b57	          0x4829eb	                            sub rbx, rbp	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x4000b5a	        0x4883fb07	                              cmp rbx, 7	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x4000b5e	     0xf8484000000	                            je 0x4000be8	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x4000b64	      0xbe00000000	                              mov esi, 0	      3547	syntax.c	FUNCTION_47	ELSE_6	CALL_13
0x4000b69	            0x31ff	                            xor edi, edi	      3547	syntax.c	FUNCTION_47	ELSE_6	CALL_13
0x4000b6b	      0xba05000000	                              mov edx, 5	      3547	syntax.c	FUNCTION_47	ELSE_6	CALL_13
0x4000b70	      0xe800000000	                          call 0x4000b75	      3547	syntax.c	FUNCTION_47	ELSE_6	CALL_13
0x4000b75	        0x4883c408	                              add rsp, 8	      3553	syntax.c	FUNCTION_47
0x4000b79	          0x4889ee	                            mov rsi, rbp	      3547	syntax.c	FUNCTION_47	ELSE_6	CALL_13
0x4000b7c	          0x4889c7	                            mov rdi, rax	      3547	syntax.c	FUNCTION_47	ELSE_6	CALL_13
0x4000b7f	              0x5b	                                 pop rbx	      3553	syntax.c	FUNCTION_47
0x4000b80	              0x5d	                                 pop rbp	      3553	syntax.c	FUNCTION_47
0x4000b81	      0xe900000000	                           jmp 0x4000b86	      3547	syntax.c	FUNCTION_47	ELSE_6	CALL_13
0x4000b86	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3547	syntax.c	FUNCTION_47	ELSE_6	CALL_13
0x4000b90	    0x488b05000000	            mov rax, qword [0x04000b97] 	      3532	syntax.c	FUNCTION_47	IF_2	IF_3
0x4000b97	      0xba05000000	                              mov edx, 5	      3533	syntax.c	FUNCTION_47	IF_2	CALL_4
0x4000b9c	      0xbe00000000	                              mov esi, 0	      3533	syntax.c	FUNCTION_47	IF_2	CALL_4
0x4000ba1	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3532	syntax.c	FUNCTION_47	IF_2	IF_3
0x4000ba5	    0x8b805c020000	           mov eax, dword [rax + 0x25c] 	      3532	syntax.c	FUNCTION_47	IF_2	IF_3
0x4000bab	          0x83f801	                              cmp eax, 1	      3532	syntax.c	FUNCTION_47	IF_2	IF_3
0x4000bae	            0x740f	                            je 0x4000bbf	      3532	syntax.c	FUNCTION_47	IF_2	IF_3
0x4000bb0	          0x83f802	                              cmp eax, 2	      3534	syntax.c	FUNCTION_47	IF_2	ELSE_1	IF_4
0x4000bb3	      0xbe00000000	                              mov esi, 0	      3535	syntax.c	FUNCTION_47	IF_2	ELSE_1	IF_4
0x4000bb8	            0x7405	                            je 0x4000bbf	      3534	syntax.c	FUNCTION_47	IF_2	ELSE_1	IF_4
0x4000bba	      0xbe00000000	                              mov esi, 0	      3537	syntax.c	FUNCTION_47	IF_2	CALL_8
0x4000bbf	            0x31ff	                            xor edi, edi	      3537	syntax.c	FUNCTION_47	IF_2	CALL_8
0x4000bc1	      0xe800000000	                          call 0x4000bc6	      3537	syntax.c	FUNCTION_47	IF_2	CALL_8
0x4000bc6	          0x4889c7	                            mov rdi, rax	      3537	syntax.c	FUNCTION_47	IF_2	CALL_8
0x4000bc9	      0xe800000000	                          call 0x4000bce	      3537	syntax.c	FUNCTION_47	IF_2	CALL_8
0x4000bce	    0x488b3d000000	            mov rdi, qword [0x04000bd5] 	      3537	syntax.c	FUNCTION_47	IF_2	CALL_8
0x4000bd5	        0x4883c408	                              add rsp, 8	      3553	syntax.c	FUNCTION_47
0x4000bd9	      0xbe28000000	                           mov esi, 0x28	      3552	syntax.c	FUNCTION_47	CALL_14
0x4000bde	              0x5b	                                 pop rbx	      3553	syntax.c	FUNCTION_47
0x4000bdf	              0x5d	                                 pop rbp	      3553	syntax.c	FUNCTION_47
0x4000be0	      0xe900000000	                           jmp 0x4000be5	      3552	syntax.c	FUNCTION_47	CALL_14
0x4000be5	           0xf1f00	                         nop dword [rax]	      3552	syntax.c	FUNCTION_47	CALL_14
0x4000be8	    0x488b3d000000	            mov rdi, qword [0x04000bef] 	      3544	syntax.c	FUNCTION_47	ELSE_5	IF_7
0x4000bef	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      3544	syntax.c	FUNCTION_47	ELSE_5	IF_7
0x4000bf3	    0xc7805c020000	              mov dword [rax + 0x25c], 0	      3544	syntax.c	FUNCTION_47	ELSE_5	IF_7
0x4000bfd	            0xebd6	                           jmp 0x4000bd5	      3544	syntax.c	FUNCTION_47	ELSE_5	IF_7
0x4000bff	              0x90	                                     nop	      3544	syntax.c	FUNCTION_47	ELSE_5	IF_7
0x4000c00	    0x488b3d000000	            mov rdi, qword [0x04000c07] 	      3540	syntax.c	FUNCTION_47	ELSE_3	IF_5
0x4000c07	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      3540	syntax.c	FUNCTION_47	ELSE_3	IF_5
0x4000c0b	    0xc7805c020000	              mov dword [rax + 0x25c], 1	      3540	syntax.c	FUNCTION_47	ELSE_3	IF_5
0x4000c15	            0xebbe	                           jmp 0x4000bd5	      3540	syntax.c	FUNCTION_47	ELSE_3	IF_5
0x4000c17	    0x660f1f840000	                    nop word [rax + rax]	      3540	syntax.c	FUNCTION_47	ELSE_3	IF_5
0x4000c20	    0x488b3d000000	            mov rdi, qword [0x04000c27] 	      3542	syntax.c	FUNCTION_47	ELSE_4	IF_6
0x4000c27	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      3542	syntax.c	FUNCTION_47	ELSE_4	IF_6
0x4000c2b	    0xc7805c020000	              mov dword [rax + 0x25c], 2	      3542	syntax.c	FUNCTION_47	ELSE_4	IF_6
0x4000c35	            0xeb9e	                           jmp 0x4000bd5	      3542	syntax.c	FUNCTION_47	ELSE_4	IF_6
syn_cmd_conceal	DO,0:functions,0:IF,5:WHILE,0:CALL,10:ELSE,4:SWITCH,0:FOR,0	76
0x4000850	              0x55	                                push rbp	      3461	syntax.c	FUNCTION_45
0x4000851	              0x53	                                push rbx	      3461	syntax.c	FUNCTION_45
0x4000852	          0x4889fb	                            mov rbx, rdi	      3461	syntax.c	FUNCTION_45
0x4000855	        0x4883ec08	                              sub rsp, 8	      3461	syntax.c	FUNCTION_45
0x4000859	          0x488b2f	                    mov rbp, qword [rdi]	      3463	syntax.c	FUNCTION_45
0x400085c	          0x4889ef	                            mov rdi, rbp	      3466	syntax.c	FUNCTION_45	CALL_1
0x400085f	      0xe800000000	                          call 0x4000864	      3466	syntax.c	FUNCTION_45	CALL_1
0x4000864	          0x8b5330	            mov edx, dword [rbx + 0x30] 	      3467	syntax.c	FUNCTION_45	IF_1
0x4000867	        0x48894308	                mov qword [rbx + 8], rax	      3466	syntax.c	FUNCTION_45	CALL_1
0x400086b	            0x85d2	                           test edx, edx	      3467	syntax.c	FUNCTION_45	IF_1
0x400086d	            0x7411	                            je 0x4000880	      3467	syntax.c	FUNCTION_45	IF_1
0x400086f	        0x4883c408	                              add rsp, 8	      3485	syntax.c	FUNCTION_45
0x4000873	              0x5b	                                 pop rbx	      3485	syntax.c	FUNCTION_45
0x4000874	              0x5d	                                 pop rbp	      3485	syntax.c	FUNCTION_45
0x4000875	              0xc3	                                     ret	      3485	syntax.c	FUNCTION_45
0x4000876	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3485	syntax.c	FUNCTION_45
0x4000880	          0x4889ef	                            mov rdi, rbp	      3470	syntax.c	FUNCTION_45	CALL_2
0x4000883	      0xe800000000	                          call 0x4000888	      3470	syntax.c	FUNCTION_45	CALL_2
0x4000888	        0x807d0000	                       cmp byte [rbp], 0	      3471	syntax.c	FUNCTION_45	IF_2
0x400088c	          0x4889c3	                            mov rbx, rax	      3470	syntax.c	FUNCTION_45	CALL_2
0x400088f	            0x746f	                            je 0x4000900	      3471	syntax.c	FUNCTION_45	IF_2
0x4000891	      0xba02000000	                              mov edx, 2	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x4000896	      0xbe00000000	                              mov esi, 0	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x400089b	          0x4889ef	                            mov rdi, rbp	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x400089e	      0xe800000000	                          call 0x40008a3	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x40008a3	            0x85c0	                           test eax, eax	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x40008a5	            0x7510	                           jne 0x40008b7	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x40008a7	          0x4889d8	                            mov rax, rbx	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x40008aa	          0x4829e8	                            sub rax, rbp	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x40008ad	        0x4883f802	                              cmp rax, 2	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x40008b1	     0xf84a9000000	                            je 0x4000960	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x40008b7	      0xba03000000	                              mov edx, 3	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x40008bc	      0xbe00000000	                              mov esi, 0	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x40008c1	          0x4889ef	                            mov rdi, rbp	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x40008c4	      0xe800000000	                          call 0x40008c9	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x40008c9	            0x85c0	                           test eax, eax	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x40008cb	            0x7509	                           jne 0x40008d6	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x40008cd	          0x4829eb	                            sub rbx, rbp	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x40008d0	        0x4883fb03	                              cmp rbx, 3	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x40008d4	            0x746a	                            je 0x4000940	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x40008d6	      0xbe00000000	                              mov esi, 0	      3483	syntax.c	FUNCTION_45	CALL_10
0x40008db	            0x31ff	                            xor edi, edi	      3483	syntax.c	FUNCTION_45	CALL_10
0x40008dd	      0xba05000000	                              mov edx, 5	      3483	syntax.c	FUNCTION_45	CALL_10
0x40008e2	      0xe800000000	                          call 0x40008e7	      3483	syntax.c	FUNCTION_45	CALL_10
0x40008e7	        0x4883c408	                              add rsp, 8	      3485	syntax.c	FUNCTION_45
0x40008eb	          0x4889ee	                            mov rsi, rbp	      3483	syntax.c	FUNCTION_45	CALL_10
0x40008ee	          0x4889c7	                            mov rdi, rax	      3483	syntax.c	FUNCTION_45	CALL_10
0x40008f1	              0x5b	                                 pop rbx	      3485	syntax.c	FUNCTION_45
0x40008f2	              0x5d	                                 pop rbp	      3485	syntax.c	FUNCTION_45
0x40008f3	      0xe900000000	                           jmp 0x40008f8	      3483	syntax.c	FUNCTION_45	CALL_10
0x40008f8	     0xf1f84000000	                   nop dword [rax + rax]	      3483	syntax.c	FUNCTION_45	CALL_10
0x4000900	    0x488b05000000	            mov rax, qword [0x04000907] 	      3473	syntax.c	FUNCTION_45	IF_2	IF_3
0x4000907	      0xba05000000	                              mov edx, 5	      3474	syntax.c	FUNCTION_45	IF_2	CALL_4
0x400090c	      0xbe00000000	                              mov esi, 0	      3474	syntax.c	FUNCTION_45	IF_2	CALL_4
0x4000911	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3473	syntax.c	FUNCTION_45	IF_2	IF_3
0x4000915	    0x8b8008030000	           mov eax, dword [rax + 0x308] 	      3473	syntax.c	FUNCTION_45	IF_2	IF_3
0x400091b	            0x85c0	                           test eax, eax	      3473	syntax.c	FUNCTION_45	IF_2	IF_3
0x400091d	            0x7505	                           jne 0x4000924	      3473	syntax.c	FUNCTION_45	IF_2	IF_3
0x400091f	      0xbe00000000	                              mov esi, 0	      3476	syntax.c	FUNCTION_45	IF_2	CALL_6
0x4000924	            0x31ff	                            xor edi, edi	      3476	syntax.c	FUNCTION_45	IF_2	CALL_6
0x4000926	      0xe800000000	                          call 0x400092b	      3476	syntax.c	FUNCTION_45	IF_2	CALL_6
0x400092b	        0x4883c408	                              add rsp, 8	      3485	syntax.c	FUNCTION_45
0x400092f	          0x4889c7	                            mov rdi, rax	      3476	syntax.c	FUNCTION_45	IF_2	CALL_6
0x4000932	              0x5b	                                 pop rbx	      3485	syntax.c	FUNCTION_45
0x4000933	              0x5d	                                 pop rbp	      3485	syntax.c	FUNCTION_45
0x4000934	      0xe900000000	                           jmp 0x4000939	      3476	syntax.c	FUNCTION_45	IF_2	CALL_6
0x4000939	     0xf1f80000000	                         nop dword [rax]	      3476	syntax.c	FUNCTION_45	IF_2	CALL_6
0x4000940	    0x488b05000000	            mov rax, qword [0x04000947] 	      3481	syntax.c	FUNCTION_45	ELSE_3	IF_5
0x4000947	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3481	syntax.c	FUNCTION_45	ELSE_3	IF_5
0x400094b	    0xc78008030000	              mov dword [rax + 0x308], 0	      3481	syntax.c	FUNCTION_45	ELSE_3	IF_5
0x4000955	      0xe915ffffff	                           jmp 0x400086f	      3481	syntax.c	FUNCTION_45	ELSE_3	IF_5
0x400095a	    0x660f1f440000	                    nop word [rax + rax]	      3481	syntax.c	FUNCTION_45	ELSE_3	IF_5
0x4000960	    0x488b05000000	            mov rax, qword [0x04000967] 	      3479	syntax.c	FUNCTION_45	ELSE_2	IF_4
0x4000967	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3479	syntax.c	FUNCTION_45	ELSE_2	IF_4
0x400096b	    0xc78008030000	              mov dword [rax + 0x308], 1	      3479	syntax.c	FUNCTION_45	ELSE_2	IF_4
0x4000975	      0xe9f5feffff	                           jmp 0x400086f	      3479	syntax.c	FUNCTION_45	ELSE_2	IF_4
syn_compare_syntime	DO,0:functions,0:IF,0:WHILE,0:CALL,1:ELSE,0:SWITCH,0:FOR,0	1
0x40001f0	      0xe900000000	                           jmp 0x40001f5	      6757	syntax.c	FUNCTION_111	CALL_1
syntax_start	DO,0:functions,0:IF,21:WHILE,3:CALL,18:ELSE,7:SWITCH,0:FOR,1	890
0x4008ef0	            0x4157	                                push r15	       515	syntax.c	FUNCTION_2
0x4008ef2	            0x4156	                                push r14	       515	syntax.c	FUNCTION_2
0x4008ef4	            0x4155	                                push r13	       515	syntax.c	FUNCTION_2
0x4008ef6	            0x4154	                                push r12	       515	syntax.c	FUNCTION_2
0x4008ef8	              0x55	                                push rbp	       515	syntax.c	FUNCTION_2
0x4008ef9	              0x53	                                push rbx	       515	syntax.c	FUNCTION_2
0x4008efa	          0x4889fb	                            mov rbx, rdi	       515	syntax.c	FUNCTION_2
0x4008efd	        0x4883ec48	                           sub rsp, 0x48	       515	syntax.c	FUNCTION_2
0x4008f01	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	       534	syntax.c	FUNCTION_2	IF_1
0x4008f05	    0x483b15000000	            cmp rdx, qword [0x04008f0c] 	       534	syntax.c	FUNCTION_2	IF_1
0x4008f0c	      0x4889742420	             mov qword [rsp + 0x20], rsi	       515	syntax.c	FUNCTION_2
0x4008f11	    0xc70500000000	               mov dword [0x04008f1b], 0	       526	syntax.c	FUNCTION_2
0x4008f1b	     0xf84dd080000	                            je 0x40097fe	       534	syntax.c	FUNCTION_2	IF_1
0x4008f21	    0x448b1d000000	           mov r11d, dword [0x04008f28] 	       722	syntax.c	FUNCTION_4	FOR_1
0x4008f28	    0x488b05000000	            mov rax, qword [0x04008f2f] 	       722	syntax.c	FUNCTION_4	FOR_1
0x4008f2f	          0x4531e4	                          xor r12d, r12d	       722	syntax.c	FUNCTION_4	FOR_1
0x4008f32	          0x4585db	                         test r11d, r11d	       722	syntax.c	FUNCTION_4	FOR_1
0x4008f35	    0x488da8880000	                   lea rbp, [rax + 0x88]	       722	syntax.c	FUNCTION_4	FOR_1
0x4008f3c	            0x7e1d	                           jle 0x4008f5b	       722	syntax.c	FUNCTION_4	FOR_1
0x4008f3e	        0x488b7d00	                    mov rdi, qword [rbp]	       723	syntax.c	FUNCTION_4	CALL_1
0x4008f42	        0x4183c401	                             add r12d, 1	       722	syntax.c	FUNCTION_4	FOR_1
0x4008f46	    0x4881c5900000	                           add rbp, 0x90	       722	syntax.c	FUNCTION_4	FOR_1
0x4008f4d	      0xe800000000	                          call 0x4008f52	       723	syntax.c	FUNCTION_4	CALL_1
0x4008f52	    0x443b25000000	           cmp r12d, dword [0x04008f59] 	       722	syntax.c	FUNCTION_4	FOR_1
0x4008f59	            0x7ce3	                            jl 0x4008f3e	       722	syntax.c	FUNCTION_4	FOR_1
0x4008f5b	      0xbf00000000	                              mov edi, 0	       724	syntax.c	FUNCTION_4	CALL_2
0x4008f60	      0xe800000000	                          call 0x4008f65	       724	syntax.c	FUNCTION_4	CALL_2
0x4008f65	        0x488b4308	                mov rax, qword [rbx + 8]	       539	syntax.c	FUNCTION_2	IF_1
0x4008f69	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       540	syntax.c	FUNCTION_2	IF_1
0x4008f6d	    0xc70500000000	               mov dword [0x04008f77], 0	      1732	syntax.c	FUNCTION_23
0x4008f77	    0x48c705000000	               mov qword [0x04008f82], 0	      1733	syntax.c	FUNCTION_23
0x4008f82	    0xc70500000000	     mov dword [0x04008f8c], 0xffffffff 	      1734	syntax.c	FUNCTION_23
0x4008f8c	    0x488905000000	            mov qword [0x04008f93], rax 	       539	syntax.c	FUNCTION_2	IF_1
0x4008f93	    0x488915000000	            mov qword [0x04008f9a], rdx 	       540	syntax.c	FUNCTION_2	IF_1
0x4008f9a	          0x488b30	                    mov rsi, qword [rax]	      1234	syntax.c	FUNCTION_13
0x4008f9d	    0x488b88d80000	            mov rcx, qword [rax + 0xd8] 	       542	syntax.c	FUNCTION_2	CALL_3
0x4008fa4	    0x488b05000000	            mov rax, qword [0x04008fab] 	      1234	syntax.c	FUNCTION_13
0x4008fab	    0x48891d000000	            mov qword [0x04008fb2], rbx 	       543	syntax.c	FUNCTION_2
0x4008fb2	          0x4885f6	                           test rsi, rsi	      1234	syntax.c	FUNCTION_13
0x4008fb5	    0x48890d000000	            mov qword [0x04008fbc], rcx 	       542	syntax.c	FUNCTION_2	CALL_3
0x4008fbc	        0x488d3c00	                    lea rdi, [rax + rax]	      1234	syntax.c	FUNCTION_13
0x4008fc0	        0x488d460f	                    lea rax, [rsi + 0xf]	      1234	syntax.c	FUNCTION_13
0x4008fc4	        0x480f49c6	                         cmovns rax, rsi	      1234	syntax.c	FUNCTION_13
0x4008fc8	        0x48c1f804	                              sar rax, 4	      1234	syntax.c	FUNCTION_13
0x4008fcc	          0x4801f8	                            add rax, rdi	      1234	syntax.c	FUNCTION_13
0x4008fcf	    0x483d95000000	                           cmp rax, 0x95	      1235	syntax.c	FUNCTION_13	IF_1
0x4008fd5	     0xf8e80040000	                           jle 0x400945b	      1235	syntax.c	FUNCTION_13	IF_1
0x4008fdb	    0x483de8030000	                          cmp rax, 0x3e8	      1235	syntax.c	FUNCTION_13	IF_1
0x4008fe1	      0xb9e8030000	                          mov ecx, 0x3e8	      1235	syntax.c	FUNCTION_13	IF_1
0x4008fe6	        0x480f4ec8	                         cmovle rcx, rax	      1235	syntax.c	FUNCTION_13	IF_1
0x4008fea	        0x4c8d0409	                     lea r8, [rcx + rcx]	      1235	syntax.c	FUNCTION_13	IF_1
0x4008fee	    0x4c638a180300	         movsxd r9, dword [rdx + 0x318] 	      1239	syntax.c	FUNCTION_13	IF_3
0x4008ff5	          0x4939c9	                             cmp r9, rcx	      1239	syntax.c	FUNCTION_13	IF_3
0x4008ff8	          0x4c89c8	                             mov rax, r9	      1239	syntax.c	FUNCTION_13	IF_3
0x4008ffb	     0xf8cc7020000	                            jl 0x40092c8	      1239	syntax.c	FUNCTION_13	IF_3
0x4009001	          0x4d39c1	                              cmp r9, r8	      1239	syntax.c	FUNCTION_13	IF_3
0x4009004	     0xf8fbe020000	                            jg 0x40092c8	      1239	syntax.c	FUNCTION_13	IF_3
0x400900a	    0x4883ba100300	              cmp qword [rdx + 0x310], 0	       549	syntax.c	FUNCTION_2	IF_2
0x4009012	     0xf84eb060000	                            je 0x4009703	       549	syntax.c	FUNCTION_2	IF_2
0x4009018	     0xfb705000000	           movzx eax, word [0x0400901f] 	       551	syntax.c	FUNCTION_2
0x400901f	    0x448b15000000	           mov r10d, dword [0x04009026] 	       556	syntax.c	FUNCTION_2	IF_3
0x4009026	          0x4585d2	                         test r10d, r10d	       556	syntax.c	FUNCTION_2	IF_3
0x4009029	    0x668982400300	              mov word [rdx + 0x340], ax	       551	syntax.c	FUNCTION_2
0x4009030	            0x747e	                            je 0x40090b0	       556	syntax.c	FUNCTION_2	IF_3
0x4009032	    0x488b05000000	            mov rax, qword [0x04009039] 	       557	syntax.c	FUNCTION_2	IF_3
0x4009039	      0x483b442420	            cmp rax, qword [rsp + 0x20] 	       557	syntax.c	FUNCTION_2	IF_3
0x400903e	            0x7d70	                           jge 0x40090b0	       557	syntax.c	FUNCTION_2	IF_3
0x4009040	    0x488b15000000	            mov rdx, qword [0x04009047] 	       558	syntax.c	FUNCTION_2	IF_3
0x4009047	          0x483b02	                    cmp rax, qword [rdx]	       558	syntax.c	FUNCTION_2	IF_3
0x400904a	            0x7d64	                           jge 0x40090b0	       558	syntax.c	FUNCTION_2	IF_3
0x400904c	    0x448b0d000000	            mov r9d, dword [0x04009053] 	      1804	syntax.c	FUNCTION_26	WHILE_1
0x4009053	          0x4585c9	                           test r9d, r9d	      1804	syntax.c	FUNCTION_26	WHILE_1
0x4009056	     0xf852b0c0000	                           jne 0x4009c87	      1804	syntax.c	FUNCTION_26	WHILE_1
0x400905c	            0x31ff	                            xor edi, edi	      1806	syntax.c	FUNCTION_26	WHILE_1	CALL_1
0x400905e	      0xe80ddfffff	  call sym.syn_current_attr.constprop.24	      1806	syntax.c	FUNCTION_26	WHILE_1	CALL_1
0x4009063	    0x448b05000000	            mov r8d, dword [0x0400906a] 	      1804	syntax.c	FUNCTION_26	WHILE_1
0x400906a	    0x830500000000	               add dword [0x04009071], 1	      1830	syntax.c	FUNCTION_26	WHILE_1
0x4009071	          0x4585c0	                           test r8d, r8d	      1804	syntax.c	FUNCTION_26	WHILE_1
0x4009074	            0x74e6	                            je 0x400905c	      1804	syntax.c	FUNCTION_26	WHILE_1
0x4009076	    0x8b3d00000000	            mov edi, dword [0x0400907c] 	       561	syntax.c	FUNCTION_2	IF_3	IF_4
0x400907c	            0x85ff	                           test edi, edi	       561	syntax.c	FUNCTION_2	IF_3	IF_4
0x400907e	     0xf844e0c0000	                            je 0x4009cd2	       561	syntax.c	FUNCTION_2	IF_3	IF_4
0x4009084	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       572	syntax.c	FUNCTION_2	IF_3	IF_5
0x4009089	    0x483b05000000	            cmp rax, qword [0x04009090] 	       572	syntax.c	FUNCTION_2	IF_3	IF_5
0x4009090	     0xf85fb0b0000	                           jne 0x4009c91	       572	syntax.c	FUNCTION_2	IF_3	IF_5
0x4009096	    0x8b1500000000	            mov edx, dword [0x0400909c] 	       582	syntax.c	FUNCTION_2	IF_6
0x400909c	            0x85d2	                           test edx, edx	       582	syntax.c	FUNCTION_2	IF_6
0x400909e	            0x7471	                            je 0x4009111	       582	syntax.c	FUNCTION_2	IF_6
0x40090a0	          0x4989c4	                            mov r12, rax	       582	syntax.c	FUNCTION_2	IF_6
0x40090a3	      0xe901010000	                           jmp 0x40091a9	       582	syntax.c	FUNCTION_2	IF_6
0x40090a8	     0xf1f84000000	                   nop dword [rax + rax]	       582	syntax.c	FUNCTION_2	IF_6
0x40090b0	    0x8b0d00000000	            mov ecx, dword [0x040090b6] 	       722	syntax.c	FUNCTION_4	FOR_1
0x40090b6	    0x488b2d000000	            mov rbp, qword [0x040090bd] 	       721	syntax.c	FUNCTION_4
0x40090bd	            0x85c9	                           test ecx, ecx	       722	syntax.c	FUNCTION_4	FOR_1
0x40090bf	            0x7e27	                           jle 0x40090e8	       722	syntax.c	FUNCTION_4	FOR_1
0x40090c1	    0x4881c5880000	                           add rbp, 0x88	       722	syntax.c	FUNCTION_4	FOR_1
0x40090c8	          0x4531e4	                          xor r12d, r12d	       722	syntax.c	FUNCTION_4	FOR_1
0x40090cb	        0x488b7d00	                    mov rdi, qword [rbp]	       723	syntax.c	FUNCTION_4	CALL_1
0x40090cf	        0x4183c401	                             add r12d, 1	       722	syntax.c	FUNCTION_4	FOR_1
0x40090d3	    0x4881c5900000	                           add rbp, 0x90	       722	syntax.c	FUNCTION_4	FOR_1
0x40090da	      0xe800000000	                          call 0x40090df	       723	syntax.c	FUNCTION_4	CALL_1
0x40090df	    0x443b25000000	           cmp r12d, dword [0x040090e6] 	       722	syntax.c	FUNCTION_4	FOR_1
0x40090e6	            0x7ce3	                            jl 0x40090cb	       722	syntax.c	FUNCTION_4	FOR_1
0x40090e8	      0xbf00000000	                              mov edi, 0	       724	syntax.c	FUNCTION_4	CALL_2
0x40090ed	      0xe800000000	                          call 0x40090f2	       724	syntax.c	FUNCTION_4	CALL_2
0x40090f2	    0xc70500000000	               mov dword [0x040090fc], 0	      1732	syntax.c	FUNCTION_23
0x40090fc	    0x48c705000000	               mov qword [0x04009107], 0	      1733	syntax.c	FUNCTION_23
0x4009107	    0xc70500000000	     mov dword [0x04009111], 0xffffffff 	      1734	syntax.c	FUNCTION_23
0x4009111	    0x488b0d000000	            mov rcx, qword [0x04009118] 	       582	syntax.c	FUNCTION_2	IF_6
0x4009118	    0x4883b9100300	              cmp qword [rcx + 0x310], 0	       582	syntax.c	FUNCTION_2	IF_6
0x4009120	     0xf8445030000	                            je 0x400946b	       582	syntax.c	FUNCTION_2	IF_6
0x4009126	    0x488b81200300	           mov rax, qword [rcx + 0x320] 	       585	syntax.c	FUNCTION_2	IF_6	FOR_1
0x400912d	          0x4885c0	                           test rax, rax	       585	syntax.c	FUNCTION_2	IF_6	FOR_1
0x4009130	     0xf84c40b0000	                            je 0x4009cfa	       585	syntax.c	FUNCTION_2	IF_6	FOR_1
0x4009136	        0x488b5008	                mov rdx, qword [rax + 8]	       587	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_7
0x400913a	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       587	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_7
0x400913f	          0x4839d6	                            cmp rsi, rdx	       587	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_7
0x4009142	     0xf8cb20b0000	                            jl 0x4009cfa	       587	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_7
0x4009148	            0x31ff	                            xor edi, edi	       587	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_7
0x400914a	    0x48c744242800	               mov qword [rsp + 0x28], 0	       587	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_7
0x4009153	            0xeb09	                           jmp 0x400915e	       587	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_7
0x4009155	        0x488b5008	                mov rdx, qword [rax + 8]	       587	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_7
0x4009159	          0x4839d6	                            cmp rsi, rdx	       587	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_7
0x400915c	            0x7c28	                            jl 0x4009186	       587	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_7
0x400915e	    0x4883b8d00000	               cmp qword [rax + 0xd0], 0	       589	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8
0x4009166	            0x7516	                           jne 0x400917e	       589	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8
0x4009168	          0x4989f0	                             mov r8, rsi	       592	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8	IF_9
0x400916b	    0x4c2b81a80200	             sub r8, qword [rcx + 0x2a8]	       592	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8	IF_9
0x4009172	      0x4889442428	             mov qword [rsp + 0x28], rax	       592	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8	IF_9
0x4009177	          0x4939d0	                             cmp r8, rdx	       592	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8	IF_9
0x400917a	        0x480f4ef8	                         cmovle rdi, rax	       592	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8	IF_9
0x400917e	          0x488b00	                    mov rax, qword [rax]	       585	syntax.c	FUNCTION_2	IF_6	FOR_1
0x4009181	          0x4885c0	                           test rax, rax	       585	syntax.c	FUNCTION_2	IF_6	FOR_1
0x4009184	            0x75cf	                           jne 0x4009155	       585	syntax.c	FUNCTION_2	IF_6	FOR_1
0x4009186	          0x4885ff	                           test rdi, rdi	       596	syntax.c	FUNCTION_2	IF_6	IF_10
0x4009189	     0xf84e5020000	                            je 0x4009474	       596	syntax.c	FUNCTION_2	IF_6	IF_10
0x400918f	      0xe83cc0ffff	             call sym.load_current_state	       597	syntax.c	FUNCTION_2	IF_6	CALL_9
0x4009194	    0x8b0500000000	            mov eax, dword [0x0400919a] 	       604	syntax.c	FUNCTION_2	IF_11
0x400919a	            0x85c0	                           test eax, eax	       604	syntax.c	FUNCTION_2	IF_11
0x400919c	     0xf84d2020000	                            je 0x4009474	       604	syntax.c	FUNCTION_2	IF_11
0x40091a2	    0x4c8b25000000	            mov r12, qword [0x040091a9] 	       604	syntax.c	FUNCTION_2	IF_11
0x40091a9	    0x488b05000000	            mov rax, qword [0x040091b0] 	       604	syntax.c	FUNCTION_2	IF_11
0x40091b0	          0x4c89e1	                            mov rcx, r12	       604	syntax.c	FUNCTION_2	IF_11
0x40091b3	    0x4863b0180300	        movsxd rsi, dword [rax + 0x318] 	       622	syntax.c	FUNCTION_2	IF_13
0x40091ba	    0x488b05000000	            mov rax, qword [0x040091c1] 	       622	syntax.c	FUNCTION_2	IF_13
0x40091c1	    0x41bd3f420f00	                       mov r13d, 0xf423f	       623	syntax.c	FUNCTION_2	IF_13
0x40091c7	          0x4839c6	                            cmp rsi, rax	       622	syntax.c	FUNCTION_2	IF_13
0x40091ca	            0x7e16	                           jle 0x40091e2	       622	syntax.c	FUNCTION_2	IF_13
0x40091cc	          0x4829c6	                            sub rsi, rax	       625	syntax.c	FUNCTION_2	ELSE_4
0x40091cf	    0x488b05000000	            mov rax, qword [0x040091d6] 	       625	syntax.c	FUNCTION_2	ELSE_4
0x40091d6	          0x488b00	                    mov rax, qword [rax]	       625	syntax.c	FUNCTION_2	ELSE_4
0x40091d9	            0x4899	                                     cqo	       625	syntax.c	FUNCTION_2	ELSE_4
0x40091db	          0x48f7fe	                                idiv rsi	       625	syntax.c	FUNCTION_2	ELSE_4
0x40091de	        0x448d6801	                     lea r13d, [rax + 1]	       625	syntax.c	FUNCTION_2	ELSE_4
0x40091e2	      0x4c8b742420	            mov r14, qword [rsp + 0x20] 	       671	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x40091e7	            0x31ed	                            xor ebp, ebp	       623	syntax.c	FUNCTION_2	IF_13
0x40091e9	          0x4d63ed	                        movsxd r13, r13d	       671	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x40091ec	          0x4939ce	                            cmp r14, rcx	       626	syntax.c	FUNCTION_2	WHILE_1
0x40091ef	     0xf8ec0000000	                           jle 0x40092b5	       626	syntax.c	FUNCTION_2	WHILE_1
0x40091f5	      0xe866baffff	                 call sym.syn_start_line	       628	syntax.c	FUNCTION_2	WHILE_1	CALL_11
0x40091fa	    0x8b3500000000	            mov esi, dword [0x04009200] 	      1804	syntax.c	FUNCTION_26	WHILE_1
0x4009200	            0x85f6	                           test esi, esi	      1804	syntax.c	FUNCTION_26	WHILE_1
0x4009202	            0x751c	                           jne 0x4009220	      1804	syntax.c	FUNCTION_26	WHILE_1
0x4009204	         0xf1f4000	                         nop dword [rax]	      1804	syntax.c	FUNCTION_26	WHILE_1
0x4009208	            0x31ff	                            xor edi, edi	      1806	syntax.c	FUNCTION_26	WHILE_1	CALL_1
0x400920a	      0xe861ddffff	  call sym.syn_current_attr.constprop.24	      1806	syntax.c	FUNCTION_26	WHILE_1	CALL_1
0x400920f	    0x8b0d00000000	            mov ecx, dword [0x04009215] 	      1804	syntax.c	FUNCTION_26	WHILE_1
0x4009215	    0x830500000000	               add dword [0x0400921c], 1	      1830	syntax.c	FUNCTION_26	WHILE_1
0x400921c	            0x85c9	                           test ecx, ecx	      1804	syntax.c	FUNCTION_26	WHILE_1
0x400921e	            0x74e8	                            je 0x4009208	      1804	syntax.c	FUNCTION_26	WHILE_1
0x4009220	    0x488b35000000	            mov rsi, qword [0x04009227] 	       630	syntax.c	FUNCTION_2	WHILE_1
0x4009227	        0x488d5601	                      lea rdx, [rsi + 1]	       630	syntax.c	FUNCTION_2	WHILE_1
0x400922b	          0x4939d4	                            cmp r12, rdx	       634	syntax.c	FUNCTION_2	WHILE_1	IF_14
0x400922e	    0x488915000000	            mov qword [0x04009235], rdx 	       630	syntax.c	FUNCTION_2	WHILE_1
0x4009235	            0x7f5b	                            jg 0x4009292	       634	syntax.c	FUNCTION_2	WHILE_1	IF_14
0x4009237	          0x4885ed	                           test rbp, rbp	       639	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_15
0x400923a	     0xf8434050000	                            je 0x4009774	       639	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_15
0x4009240	        0x488b4508	                mov rax, qword [rbp + 8]	       639	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_15
0x4009244	          0x4889eb	                            mov rbx, rbp	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x4009247	          0x4839c2	                            cmp rdx, rax	       645	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x400924a	            0x7f19	                            jg 0x4009265	       645	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x400924c	      0xe9c7040000	                           jmp 0x4009718	       645	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4009251	     0xf1f80000000	                         nop dword [rax]	       645	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4009258	        0x488b4308	                mov rax, qword [rbx + 8]	       645	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x400925c	          0x4839c2	                            cmp rdx, rax	       645	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x400925f	     0xf8eb3040000	                           jle 0x4009718	       645	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4009265	          0x488b1b	                    mov rbx, qword [rbx]	       646	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x4009268	          0x4885db	                           test rbx, rbx	       645	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x400926b	            0x75eb	                           jne 0x4009258	       645	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x400926d	          0x4885ed	                           test rbp, rbp	       669	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x4009270	            0x7418	                            je 0x400928a	       669	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x4009272	    0x488b05000000	            mov rax, qword [0x04009279] 	       670	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x4009279	          0x4939c6	                            cmp r14, rax	       670	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x400927c	            0x740c	                            je 0x400928a	       670	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x400927e	          0x4c89ea	                            mov rdx, r13	       671	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x4009281	        0x48035508	                add rdx, qword [rbp + 8]	       671	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x4009285	          0x4839d0	                            cmp rax, rdx	       671	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x4009288	            0x7c08	                            jl 0x4009292	       671	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x400928a	      0xe81199ffff	            call sym.store_current_state	       672	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x400928f	          0x4889c5	                            mov rbp, rax	       672	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x4009292	      0xe800000000	                          call 0x4009297	       677	syntax.c	FUNCTION_2	WHILE_1	CALL_17
0x4009297	    0x8b0500000000	            mov eax, dword [0x0400929d] 	       678	syntax.c	FUNCTION_2	WHILE_1	IF_21
0x400929d	            0x85c0	                           test eax, eax	       678	syntax.c	FUNCTION_2	WHILE_1	IF_21
0x400929f	     0xf852b050000	                           jne 0x40097d0	       678	syntax.c	FUNCTION_2	WHILE_1	IF_21
0x40092a5	    0x488b0d000000	            mov rcx, qword [0x040092ac] 	       678	syntax.c	FUNCTION_2	WHILE_1	IF_21
0x40092ac	          0x4939ce	                            cmp r14, rcx	       626	syntax.c	FUNCTION_2	WHILE_1
0x40092af	     0xf8f40ffffff	                            jg 0x40091f5	       626	syntax.c	FUNCTION_2	WHILE_1
0x40092b5	        0x4883c448	                           add rsp, 0x48	       686	syntax.c	FUNCTION_2
0x40092b9	              0x5b	                                 pop rbx	       686	syntax.c	FUNCTION_2
0x40092ba	              0x5d	                                 pop rbp	       686	syntax.c	FUNCTION_2
0x40092bb	            0x415c	                                 pop r12	       686	syntax.c	FUNCTION_2
0x40092bd	            0x415d	                                 pop r13	       686	syntax.c	FUNCTION_2
0x40092bf	            0x415e	                                 pop r14	       686	syntax.c	FUNCTION_2
0x40092c1	            0x415f	                                 pop r15	       686	syntax.c	FUNCTION_2
0x40092c3	      0xe998b9ffff	                  jmp sym.syn_start_line	       685	syntax.c	FUNCTION_2	CALL_18
0x40092c8	          0x4889f1	                            mov rcx, rsi	      1243	syntax.c	FUNCTION_13	IF_3
0x40092cb	      0xbd96000000	                           mov ebp, 0x96	      1245	syntax.c	FUNCTION_13	IF_3	IF_4
0x40092d0	        0x48c1e93f	                           shr rcx, 0x3f	      1243	syntax.c	FUNCTION_13	IF_3
0x40092d4	          0x4801f1	                            add rcx, rsi	      1243	syntax.c	FUNCTION_13	IF_3
0x40092d7	          0x48d1f9	                              sar rcx, 1	      1243	syntax.c	FUNCTION_13	IF_3
0x40092da	          0x4801ce	                            add rsi, rcx	      1243	syntax.c	FUNCTION_13	IF_3
0x40092dd	        0x488d4e0f	                    lea rcx, [rsi + 0xf]	      1243	syntax.c	FUNCTION_13	IF_3
0x40092e1	          0x4885f6	                           test rsi, rsi	      1243	syntax.c	FUNCTION_13	IF_3
0x40092e4	        0x480f49ce	                         cmovns rcx, rsi	      1243	syntax.c	FUNCTION_13	IF_3
0x40092e8	        0x48c1f904	                              sar rcx, 4	      1243	syntax.c	FUNCTION_13	IF_3
0x40092ec	          0x4801f9	                            add rcx, rdi	      1243	syntax.c	FUNCTION_13	IF_3
0x40092ef	    0x4881f9950000	                           cmp rcx, 0x95	      1244	syntax.c	FUNCTION_13	IF_3	IF_4
0x40092f6	            0x7e10	                           jle 0x4009308	      1244	syntax.c	FUNCTION_13	IF_3	IF_4
0x40092f8	    0x4881f9e80300	                          cmp rcx, 0x3e8	      1244	syntax.c	FUNCTION_13	IF_3	IF_4
0x40092ff	      0xbde8030000	                          mov ebp, 0x3e8	      1244	syntax.c	FUNCTION_13	IF_3	IF_4
0x4009304	        0x480f4ee9	                         cmovle rbp, rcx	      1244	syntax.c	FUNCTION_13	IF_3	IF_4
0x4009308	    0x4883ba100300	              cmp qword [rdx + 0x310], 0	      1249	syntax.c	FUNCTION_13	IF_3	IF_6
0x4009310	            0x7520	                           jne 0x4009332	      1249	syntax.c	FUNCTION_13	IF_3	IF_6
0x4009312	            0xeb35	                           jmp 0x4009349	      1249	syntax.c	FUNCTION_13	IF_3	IF_6
0x4009314	         0xf1f4000	                         nop dword [rax]	      1249	syntax.c	FUNCTION_13	IF_3	IF_6
0x4009318	      0xe84396ffff	              call sym.syn_stack_cleanup	      1254	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1	CALL_1
0x400931d	    0x488b15000000	            mov rdx, qword [0x04009324] 	      1254	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1	CALL_1
0x4009324	            0x85c0	                           test eax, eax	      1254	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1	CALL_1
0x4009326	    0x8b8218030000	           mov eax, dword [rdx + 0x318] 	      1254	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1	CALL_1
0x400932c	     0xf84bc040000	                            je 0x40097ee	      1254	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1	CALL_1
0x4009332	    0x2b8230030000	            sub eax, dword [rdx + 0x330]	      1253	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1
0x4009338	          0x83c002	                              add eax, 2	      1253	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1
0x400933b	            0x4898	                                    cdqe	      1253	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1
0x400933d	          0x4839e8	                            cmp rax, rbp	      1253	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1
0x4009340	            0x7fd6	                            jg 0x4009318	      1253	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1
0x4009342	          0x4839c5	                            cmp rbp, rax	      1253	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1
0x4009345	        0x480f4ce8	                          cmovl rbp, rax	      1253	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1
0x4009349	    0x69fdd8000000	                     imul edi, ebp, 0xd8	      1260	syntax.c	FUNCTION_13	IF_3	CALL_2
0x400934f	          0x4189ed	                           mov r13d, ebp	      1260	syntax.c	FUNCTION_13	IF_3	CALL_2
0x4009352	      0xe800000000	                          call 0x4009357	      1260	syntax.c	FUNCTION_13	IF_3	CALL_2
0x4009357	          0x4885c0	                           test rax, rax	      1261	syntax.c	FUNCTION_13	IF_3	IF_8
0x400935a	          0x4989c4	                            mov r12, rax	      1260	syntax.c	FUNCTION_13	IF_3	CALL_2
0x400935d	    0x488b15000000	            mov rdx, qword [0x04009364] 	      1260	syntax.c	FUNCTION_13	IF_3	CALL_2
0x4009364	     0xf84a0fcffff	                            je 0x400900a	      1261	syntax.c	FUNCTION_13	IF_3	IF_8
0x400936a	    0x4c8d9028ffff	                   lea r10, [rax - 0xd8]	      1264	syntax.c	FUNCTION_13	IF_3
0x4009371	    0x488b05000000	            mov rax, qword [0x04009378] 	      1265	syntax.c	FUNCTION_13	IF_3	IF_9
0x4009378	    0x488bb8100300	           mov rdi, qword [rax + 0x310] 	      1265	syntax.c	FUNCTION_13	IF_3	IF_9
0x400937f	          0x4885ff	                           test rdi, rdi	      1265	syntax.c	FUNCTION_13	IF_3	IF_9
0x4009382	     0xf84ae080000	                            je 0x4009c36	      1265	syntax.c	FUNCTION_13	IF_3	IF_9
0x4009388	    0x4c8b80200300	            mov r8, qword [rax + 0x320] 	      1268	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x400938f	          0x4c89e2	                            mov rdx, r12	      1268	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x4009392	          0x4d85c0	                             test r8, r8	      1268	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x4009395	     0xf849b080000	                            je 0x4009c36	      1268	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x400939b	          0x4889d7	                            mov rdi, rdx	      1272	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x400939e	          0x4c89c6	                             mov rsi, r8	      1272	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x40093a1	      0xb91b000000	                           mov ecx, 0x1b	      1272	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x40093a6	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	      1272	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x40093a9	          0x4989d1	                             mov r9, rdx	      1271	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x40093ac	    0x4881c2d80000	                           add rdx, 0xd8	      1273	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x40093b3	          0x498911	                     mov qword [r9], rdx	      1273	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x40093b6	          0x4889d1	                            mov rcx, rdx	      1273	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x40093b9	          0x4d8b00	                      mov r8, qword [r8]	      1269	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x40093bc	          0x4d85c0	                             test r8, r8	      1268	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x40093bf	            0x75da	                           jne 0x400939b	      1268	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x40093c1	          0x4d39ca	                             cmp r10, r9	      1276	syntax.c	FUNCTION_13	IF_3	IF_10
0x40093c4	     0xf8424090000	                            je 0x4009cee	      1276	syntax.c	FUNCTION_13	IF_3	IF_10
0x40093ca	          0x4c89ca	                             mov rdx, r9	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x40093cd	    0x488bb8100300	           mov rdi, qword [rax + 0x310] 	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x40093d4	    0x49c701000000	                       mov qword [r9], 0	      1278	syntax.c	FUNCTION_13	IF_3	IF_10
0x40093db	          0x4c29e2	                            sub rdx, r12	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x40093de	    0x4c89a0200300	            mov qword [rax + 0x320], r12	      1279	syntax.c	FUNCTION_13	IF_3	IF_10
0x40093e5	        0x48c1fa03	                              sar rdx, 3	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x40093e9	    0x69d2ed25b497	               imul edx, edx, 0x97b425ed	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x40093ef	      0x418d5415ff	                lea edx, [r13 + rdx - 1]	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x40093f4	          0x4189ed	                           mov r13d, ebp	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x40093f7	    0x899030030000	            mov dword [rax + 0x330], edx	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x40093fd	          0x4889ca	                            mov rdx, rcx	      1273	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x4009400	    0x488988280300	            mov qword [rax + 0x328], rcx	      1289	syntax.c	FUNCTION_13	IF_3
0x4009407	      0x488d446d00	                  lea rax, [rbp + rbp*2]	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x400940c	        0x488d34c0	                  lea rsi, [rax + rax*8]	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x4009410	        0x48c1e603	                              shl rsi, 3	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x4009414	        0x498d0434	                    lea rax, [r12 + rsi]	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x4009418	          0x4839c8	                            cmp rax, rcx	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x400941b	            0x7613	                           jbe 0x4009430	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x400941d	    0x4881c2d80000	                           add rdx, 0xd8	      1291	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x4009424	          0x4839c2	                            cmp rdx, rax	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x4009427	    0x48899228ffff	             mov qword [rdx - 0xd8], rdx	      1291	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x400942e	            0x72ed	                            jb 0x400941d	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x4009430	    0x49c7843428ff	         mov qword [r12 + rsi - 0xd8], 0	      1292	syntax.c	FUNCTION_13	IF_3
0x400943c	      0xe800000000	                          call 0x4009441	      1294	syntax.c	FUNCTION_13	IF_3	CALL_3
0x4009441	    0x488b15000000	            mov rdx, qword [0x04009448] 	      1295	syntax.c	FUNCTION_13	IF_3
0x4009448	    0x4c89a2100300	            mov qword [rdx + 0x310], r12	      1295	syntax.c	FUNCTION_13	IF_3
0x400944f	    0x4489aa180300	           mov dword [rdx + 0x318], r13d	      1296	syntax.c	FUNCTION_13	IF_3
0x4009456	      0xe9bdfbffff	                           jmp 0x4009018	      1296	syntax.c	FUNCTION_13	IF_3
0x400945b	    0x41b82c010000	                          mov r8d, 0x12c	      1235	syntax.c	FUNCTION_13	IF_1
0x4009461	      0xb996000000	                           mov ecx, 0x96	      1236	syntax.c	FUNCTION_13	IF_1
0x4009466	      0xe983fbffff	                           jmp 0x4008fee	      1236	syntax.c	FUNCTION_13	IF_1
0x400946b	    0x48c744242800	               mov qword [rsp + 0x28], 0	       517	syntax.c	FUNCTION_2
0x4009474	    0x488b05000000	            mov rax, qword [0x0400947b] 	       517	syntax.c	FUNCTION_2
0x400947b	          0x4531e4	                          xor r12d, r12d	       722	syntax.c	FUNCTION_4	FOR_1
0x400947e	    0x488da8880000	                   lea rbp, [rax + 0x88]	       722	syntax.c	FUNCTION_4	FOR_1
0x4009485	    0x8b0500000000	            mov eax, dword [0x0400948b] 	       722	syntax.c	FUNCTION_4	FOR_1
0x400948b	            0x85c0	                           test eax, eax	       722	syntax.c	FUNCTION_4	FOR_1
0x400948d	            0x7e1d	                           jle 0x40094ac	       722	syntax.c	FUNCTION_4	FOR_1
0x400948f	        0x488b7d00	                    mov rdi, qword [rbp]	       723	syntax.c	FUNCTION_4	CALL_1
0x4009493	        0x4183c401	                             add r12d, 1	       722	syntax.c	FUNCTION_4	FOR_1
0x4009497	    0x4881c5900000	                           add rbp, 0x90	       722	syntax.c	FUNCTION_4	FOR_1
0x400949e	      0xe800000000	                          call 0x40094a3	       723	syntax.c	FUNCTION_4	CALL_1
0x40094a3	    0x443b25000000	           cmp r12d, dword [0x040094aa] 	       722	syntax.c	FUNCTION_4	FOR_1
0x40094aa	            0x7ce3	                            jl 0x400948f	       722	syntax.c	FUNCTION_4	FOR_1
0x40094ac	      0xbf00000000	                              mov edi, 0	       724	syntax.c	FUNCTION_4	CALL_2
0x40094b1	      0xe800000000	                          call 0x40094b6	       724	syntax.c	FUNCTION_4	CALL_2
0x40094b6	    0x488b05000000	            mov rax, qword [0x040094bd] 	       773	syntax.c	FUNCTION_5	IF_1
0x40094bd	    0xc70500000000	               mov dword [0x040094c7], 0	      1732	syntax.c	FUNCTION_23
0x40094c7	    0x48c705000000	               mov qword [0x040094d2], 0	      1733	syntax.c	FUNCTION_23
0x40094d2	    0xc70500000000	     mov dword [0x040094dc], 0xffffffff 	      1734	syntax.c	FUNCTION_23
0x40094dc	    0x488b90a80200	           mov rdx, qword [rax + 0x2a8] 	       773	syntax.c	FUNCTION_5	IF_1
0x40094e3	      0x4839542420	            cmp qword [rsp + 0x20], rdx 	       773	syntax.c	FUNCTION_5	IF_1
0x40094e8	     0xf8c42030000	                            jl 0x4009830	       773	syntax.c	FUNCTION_5	IF_1
0x40094ee	        0x4883fa01	                              cmp rdx, 1	       777	syntax.c	FUNCTION_5	ELSE_1	IF_2
0x40094f2	      0xb901000000	                              mov ecx, 1	       778	syntax.c	FUNCTION_5	ELSE_1	IF_2
0x40094f7	            0x740e	                            je 0x4009507	       777	syntax.c	FUNCTION_5	ELSE_1	IF_2
0x40094f9	        0x4883fa09	                              cmp rdx, 9	       779	syntax.c	FUNCTION_5	ELSE_1	ELSE_2	IF_3
0x40094fd	     0xf8f05080000	                            jg 0x4009d08	       779	syntax.c	FUNCTION_5	ELSE_1	ELSE_2	IF_3
0x4009503	        0x488d0c12	                    lea rcx, [rdx + rdx]	       780	syntax.c	FUNCTION_5	ELSE_1	ELSE_2	IF_3
0x4009507	    0x488b90b00200	           mov rdx, qword [rax + 0x2b0] 	       783	syntax.c	FUNCTION_5	ELSE_1	IF_4
0x400950e	          0x4839ca	                            cmp rdx, rcx	       784	syntax.c	FUNCTION_5	ELSE_1	IF_4
0x4009511	            0x7d07	                           jge 0x400951a	       784	syntax.c	FUNCTION_5	ELSE_1	IF_4
0x4009513	          0x4885d2	                           test rdx, rdx	       784	syntax.c	FUNCTION_5	ELSE_1	IF_4
0x4009516	        0x480f45ca	                         cmovne rcx, rdx	       784	syntax.c	FUNCTION_5	ELSE_1	IF_4
0x400951a	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	       786	syntax.c	FUNCTION_5	ELSE_1	IF_5
0x400951f	          0x4839ce	                            cmp rsi, rcx	       786	syntax.c	FUNCTION_5	ELSE_1	IF_5
0x4009522	     0xf8e08030000	                           jle 0x4009830	       786	syntax.c	FUNCTION_5	ELSE_1	IF_5
0x4009528	          0x4829ce	                            sub rsi, rcx	       789	syntax.c	FUNCTION_5	ELSE_1	ELSE_4
0x400952b	          0x4889f7	                            mov rdi, rsi	       789	syntax.c	FUNCTION_5	ELSE_1	ELSE_4
0x400952e	        0x48893424	                    mov qword [rsp], rsi	       789	syntax.c	FUNCTION_5	ELSE_1	ELSE_4
0x4009532	    0x488935000000	            mov qword [0x04009539], rsi 	       791	syntax.c	FUNCTION_5	ELSE_4
0x4009539	    0x8bb09c020000	           mov esi, dword [rax + 0x29c] 	       796	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400953f	        0x40f6c601	                             test sil, 1	       796	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4009543	     0xf84d8090000	                            je 0x4009f21	       796	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4009549	    0x488b05000000	            mov rax, qword [0x04009550] 	       803	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4009550	        0x4883ff01	                              cmp rdi, 1	       808	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1
0x4009554	    0x4c8b25000000	            mov r12, qword [0x0400955b] 	       800	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400955b	    0x488b2d000000	            mov rbp, qword [0x04009562] 	       802	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4009562	    0x48891d000000	            mov qword [0x04009569], rbx 	       801	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4009569	    0x488905000000	            mov qword [0x04009570], rax 	       803	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4009570	     0xf849e070000	                            je 0x4009d14	       808	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1
0x4009576	          0x4989fe	                            mov r14, rdi	       808	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1
0x4009579	            0xeb19	                           jmp 0x4009594	       808	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1
0x400957b	          0x4889c7	                            mov rdi, rax	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x400957e	      0xe800000000	                          call 0x4009583	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x4009583	    0x41807c05ff5c	         cmp byte [r13 + rax - 1], 0x5c 	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x4009589	            0x751d	                           jne 0x40095a8	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x400958b	        0x4983ff01	                              cmp r15, 1	       808	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1
0x400958f	          0x4d89fe	                            mov r14, r15	       808	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1
0x4009592	            0x7414	                            je 0x40095a8	       808	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1
0x4009594	        0x4d8d7eff	                      lea r15, [r14 - 1]	       810	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	CALL_2
0x4009598	          0x4c89ff	                            mov rdi, r15	       810	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	CALL_2
0x400959b	      0xe800000000	                          call 0x40095a0	       810	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	CALL_2
0x40095a0	          0x803800	                       cmp byte [rax], 0	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x40095a3	          0x4989c5	                            mov r13, rax	       810	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	CALL_2
0x40095a6	            0x75d3	                           jne 0x400957b	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x40095a8	    0x488b05000000	            mov rax, qword [0x040095af] 	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x40095af	        0x4c893424	                    mov qword [rsp], r14	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x40095b3	    0x488bb8b00200	           mov rdi, qword [rax + 0x2b0] 	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x40095ba	          0x4c89f0	                            mov rax, r14	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x40095bd	        0x4c8b7338	            mov r14, qword [rbx + 0x38] 	       817	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x40095c1	        0x448b6b40	           mov r13d, dword [rbx + 0x40] 	       817	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x40095c5	        0x48894338	             mov qword [rbx + 0x38], rax	       818	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x40095c9	    0xc74340000000	               mov dword [rbx + 0x40], 0	       819	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x40095d0	    0x488905000000	            mov qword [0x040095d7], rax 	       814	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x40095d7	        0x448b7b44	           mov r15d, dword [rbx + 0x44] 	       817	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x40095db	      0xe800000000	                          call 0x40095e0	       826	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	CALL_4
0x40095e0	          0x4885c0	                           test rax, rax	       826	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	CALL_4
0x40095e3	    0x488b05000000	            mov rax, qword [0x040095ea] 	       828	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2
0x40095ea	     0xf84ed000000	                            je 0x40096dd	       826	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	CALL_4
0x40095f0	    0x486388600200	        movsxd rcx, dword [rax + 0x260] 	       828	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2
0x40095f7	          0x4889ca	                            mov rdx, rcx	       828	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2
0x40095fa	        0x488d0c89	                  lea rcx, [rcx + rcx*4]	       828	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2
0x40095fe	        0x48c1e105	                              shl rcx, 5	       828	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2
0x4009602	    0x4881e9a00000	                           sub rcx, 0xa0	       828	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2
0x4009609	            0xeb0c	                           jmp 0x4009617	       828	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2
0x400960b	       0xf1f440000	                   nop dword [rax + rax]	       828	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2
0x4009610	    0x4881e9a00000	                           sub rcx, 0xa0	       828	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2
0x4009617	          0x83ea01	                              sub edx, 1	       828	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2
0x400961a	     0xf88bd000000	                            js 0x40096dd	       828	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2
0x4009620	          0x4889ce	                            mov rsi, rcx	       829	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9
0x4009623	    0x4803b0700200	            add rsi, qword [rax + 0x270]	       829	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9
0x400962a	     0xfb7b8a00200	          movzx edi, word [rax + 0x2a0] 	       829	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9
0x4009631	        0x66397e54	               cmp word [rsi + 0x54], di	       829	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9
0x4009635	            0x75d9	                           jne 0x4009610	       829	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9
0x4009637	          0x803e02	                       cmp byte [rsi], 2	       831	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9
0x400963a	            0x75d4	                           jne 0x4009610	       831	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9
0x400963c	      0xbe01000000	                              mov esi, 1	      2898	syntax.c	FUNCTION_35	IF_1	CALL_1
0x4009641	      0xbf00000000	                              mov edi, 0	      2898	syntax.c	FUNCTION_35	IF_1	CALL_1
0x4009646	          0x891424	                    mov dword [rsp], edx	      2898	syntax.c	FUNCTION_35	IF_1	CALL_1
0x4009649	    0xc70500000000	           mov dword [0x04009653], 0x90 	      1740	syntax.c	FUNCTION_24
0x4009653	    0xc70500000000	               mov dword [0x0400965d], 3	      1741	syntax.c	FUNCTION_24
0x400965d	      0xe800000000	                          call 0x4009662	      2898	syntax.c	FUNCTION_35	IF_1	CALL_1
0x4009662	            0x85c0	                           test eax, eax	      2898	syntax.c	FUNCTION_35	IF_1	CALL_1
0x4009664	          0x8b1424	                    mov edx, dword [rsp]	      2898	syntax.c	FUNCTION_35	IF_1	CALL_1
0x4009667	            0x746d	                            je 0x40096d6	      2898	syntax.c	FUNCTION_35	IF_1	CALL_1
0x4009669	    0x486305000000	         movsxd rax, dword [0x04009670] 	        90	string3.h	FUNCTION_173	CALL_6
0x4009670	        0x488d04c0	                  lea rax, [rax + rax*8]	        90	string3.h	FUNCTION_173	CALL_6
0x4009674	        0x48c1e004	                              shl rax, 4	        90	string3.h	FUNCTION_173	CALL_6
0x4009678	    0x480305000000	             add rax, qword [0x0400967f]	        90	string3.h	FUNCTION_173	CALL_6
0x400967f	        0x488d7808	                      lea rdi, [rax + 8]	        90	string3.h	FUNCTION_173	CALL_6
0x4009683	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400968a	    0x48c780880000	               mov qword [rax + 0x88], 0	        90	string3.h	FUNCTION_173	CALL_6
0x4009695	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_173	CALL_6
0x4009699	          0x4829f8	                            sub rax, rdi	        90	string3.h	FUNCTION_173	CALL_6
0x400969c	          0x4889c1	                            mov rcx, rax	        90	string3.h	FUNCTION_173	CALL_6
0x400969f	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_173	CALL_6
0x40096a1	    0x81c190000000	                           add ecx, 0x90	        90	string3.h	FUNCTION_173	CALL_6
0x40096a7	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_173	CALL_6
0x40096aa	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_173	CALL_6
0x40096ad	    0x486305000000	         movsxd rax, dword [0x040096b4] 	      2901	syntax.c	FUNCTION_35
0x40096b4	          0x4889c7	                            mov rdi, rax	      2901	syntax.c	FUNCTION_35
0x40096b7	        0x488d04c0	                  lea rax, [rax + rax*8]	      2901	syntax.c	FUNCTION_35
0x40096bb	        0x48c1e004	                              shl rax, 4	      2901	syntax.c	FUNCTION_35
0x40096bf	    0x480305000000	             add rax, qword [0x040096c6]	      2901	syntax.c	FUNCTION_35
0x40096c6	            0x8910	                    mov dword [rax], edx	      2901	syntax.c	FUNCTION_35
0x40096c8	          0x8d4701	                      lea eax, [rdi + 1]	      2902	syntax.c	FUNCTION_35
0x40096cb	    0x890500000000	            mov dword [0x040096d1], eax 	      2902	syntax.c	FUNCTION_35
0x40096d1	      0xe8baafffff	                 call sym.update_si_attr	       835	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_7
0x40096d6	    0x488b05000000	            mov rax, qword [0x040096dd] 	       835	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_7
0x40096dd	        0x4c897338	             mov qword [rbx + 0x38], r14	       841	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x40096e1	        0x44896b40	            mov dword [rbx + 0x40], r13d	       841	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x40096e5	        0x44897b44	            mov dword [rbx + 0x44], r15d	       841	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x40096e9	    0x4c8925000000	            mov qword [0x040096f0], r12 	       842	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x40096f0	    0x48892d000000	            mov qword [0x040096f7], rbp 	       843	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x40096f7	    0x488b0d000000	            mov rcx, qword [0x040096fe] 	       843	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x40096fe	      0xe906050000	                           jmp 0x4009c09	       843	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4009703	        0x4883c448	                           add rsp, 0x48	       686	syntax.c	FUNCTION_2
0x4009707	              0x5b	                                 pop rbx	       686	syntax.c	FUNCTION_2
0x4009708	              0x5d	                                 pop rbp	       686	syntax.c	FUNCTION_2
0x4009709	            0x415c	                                 pop r12	       686	syntax.c	FUNCTION_2
0x400970b	            0x415d	                                 pop r13	       686	syntax.c	FUNCTION_2
0x400970d	            0x415e	                                 pop r14	       686	syntax.c	FUNCTION_2
0x400970f	            0x415f	                                 pop r15	       686	syntax.c	FUNCTION_2
0x4009711	              0xc3	                                     ret	       686	syntax.c	FUNCTION_2
0x4009712	    0x660f1f440000	                    nop word [rax + rax]	       686	syntax.c	FUNCTION_2
0x4009718	          0x4839c2	                            cmp rdx, rax	       648	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17
0x400971b	     0xf854cfbffff	                           jne 0x400926d	       648	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17
0x4009721	          0x4889df	                            mov rdi, rbx	       649	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	CALL_14
0x4009724	      0xe8276cffff	                call sym.syn_stack_equal	       649	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	CALL_14
0x4009729	            0x85c0	                           test eax, eax	       649	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	CALL_14
0x400972b	     0xf843cfbffff	                            je 0x400926d	       649	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	CALL_14
0x4009731	    0x488b15000000	            mov rdx, qword [0x04009738] 	       651	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17
0x4009738	          0x4889dd	                            mov rbp, rbx	       651	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17
0x400973b	            0xeb20	                           jmp 0x400975d	       651	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17
0x400973d	          0x4885c0	                           test rax, rax	       658	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3	ELSE_6	IF_19
0x4009740	     0xf849b000000	                            je 0x40097e1	       658	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3	ELSE_6	IF_19
0x4009746	    0x48c783d00000	               mov qword [rbx + 0xd0], 0	       661	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x4009751	          0x488b1b	                    mov rbx, qword [rbx]	       662	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x4009754	          0x4885db	                           test rbx, rbx	       653	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x4009757	     0xf8484000000	                            je 0x40097e1	       653	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x400975d	    0x488b83d00000	            mov rax, qword [rbx + 0xd0] 	       653	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x4009764	          0x4839c2	                            cmp rdx, rax	       653	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x4009767	            0x7c78	                            jl 0x40097e1	       653	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x4009769	        0x4c3b7308	                cmp r14, qword [rbx + 8]	       655	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3	IF_18
0x400976d	            0x7cce	                            jl 0x400973d	       655	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3	IF_18
0x400976f	          0x4889dd	                            mov rbp, rbx	       655	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3	IF_18
0x4009772	            0xebd2	                           jmp 0x4009746	       655	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3	IF_18
0x4009774	    0x488b05000000	            mov rax, qword [0x0400977b] 	      1455	syntax.c	FUNCTION_18	FOR_1
0x400977b	    0x488b98200300	           mov rbx, qword [rax + 0x320] 	      1455	syntax.c	FUNCTION_18	FOR_1
0x4009782	          0x4885db	                           test rbx, rbx	      1455	syntax.c	FUNCTION_18	FOR_1
0x4009785	     0xf84fffaffff	                            je 0x400928a	      1455	syntax.c	FUNCTION_18	FOR_1
0x400978b	        0x488b4308	                mov rax, qword [rbx + 8]	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x400978f	          0x4839c6	                            cmp rsi, rax	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x4009792	     0xf849a070000	                            je 0x4009f32	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x4009798	     0xf8ca9faffff	                            jl 0x4009247	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x400979e	          0x4889dd	                            mov rbp, rbx	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x40097a1	            0xeb0c	                           jmp 0x40097af	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x40097a3	     0xf8c9bfaffff	                            jl 0x4009244	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x40097a9	          0x4889f8	                            mov rax, rdi	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x40097ac	          0x4889cd	                            mov rbp, rcx	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x40097af	        0x488b4d00	                    mov rcx, qword [rbp]	      1455	syntax.c	FUNCTION_18	FOR_1
0x40097b3	          0x4885c9	                           test rcx, rcx	      1455	syntax.c	FUNCTION_18	FOR_1
0x40097b6	     0xf8488faffff	                            je 0x4009244	      1455	syntax.c	FUNCTION_18	FOR_1
0x40097bc	        0x488b7908	                mov rdi, qword [rcx + 8]	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x40097c0	          0x4839fe	                            cmp rsi, rdi	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x40097c3	            0x75de	                           jne 0x40097a3	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x40097c5	          0x4889f0	                            mov rax, rsi	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x40097c8	          0x4889cd	                            mov rbp, rcx	      1455	syntax.c	FUNCTION_18	FOR_1
0x40097cb	      0xe974faffff	                           jmp 0x4009244	      1455	syntax.c	FUNCTION_18	FOR_1
0x40097d0	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       680	syntax.c	FUNCTION_2	WHILE_1	IF_21
0x40097d5	    0x488905000000	            mov qword [0x040097dc], rax 	       680	syntax.c	FUNCTION_2	WHILE_1	IF_21
0x40097dc	      0xe9d4faffff	                           jmp 0x40092b5	       681	syntax.c	FUNCTION_2	WHILE_1	IF_21
0x40097e1	          0x4889ef	                            mov rdi, rbp	       664	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	CALL_15
0x40097e4	      0xe8e7b9ffff	             call sym.load_current_state	       664	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	CALL_15
0x40097e9	      0xe9a4faffff	                           jmp 0x4009292	       664	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	CALL_15
0x40097ee	    0x2b8230030000	            sub eax, dword [rdx + 0x330]	       664	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	CALL_15
0x40097f4	          0x83c002	                              add eax, 2	       664	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	CALL_15
0x40097f7	            0x4898	                                    cdqe	       664	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	CALL_15
0x40097f9	      0xe944fbffff	                           jmp 0x4009342	       664	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	CALL_15
0x40097fe	        0x488b4708	                mov rax, qword [rdi + 8]	       535	syntax.c	FUNCTION_2	IF_1
0x4009802	    0x483b05000000	            cmp rax, qword [0x04009809] 	       535	syntax.c	FUNCTION_2	IF_1
0x4009809	     0xf8512f7ffff	                           jne 0x4008f21	       535	syntax.c	FUNCTION_2	IF_1
0x400980f	    0x488b35000000	            mov rsi, qword [0x04009816] 	       536	syntax.c	FUNCTION_2	IF_1	CALL_1
0x4009816	    0x4839b0d80000	            cmp qword [rax + 0xd8], rsi 	       536	syntax.c	FUNCTION_2	IF_1	CALL_1
0x400981d	     0xf85fef6ffff	                           jne 0x4008f21	       536	syntax.c	FUNCTION_2	IF_1	CALL_1
0x4009823	      0xe972f7ffff	                           jmp 0x4008f9a	       536	syntax.c	FUNCTION_2	IF_1	CALL_1
0x4009828	     0xf1f84000000	                   nop dword [rax + rax]	       536	syntax.c	FUNCTION_2	IF_1	CALL_1
0x4009830	    0x8b909c020000	           mov edx, dword [rax + 0x29c] 	       796	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4009836	    0x48c705000000	               mov qword [0x04009841], 1	       791	syntax.c	FUNCTION_5	ELSE_4
0x4009841	          0xf6c201	                              test dl, 1	       796	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4009844	     0xf85f0060000	                           jne 0x4009f3a	       796	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x400984a	          0x83e202	                              and edx, 2	       849	syntax.c	FUNCTION_5	ELSE_5	IF_11
0x400984d	     0xf8410040000	                            je 0x4009c63	       849	syntax.c	FUNCTION_5	ELSE_5	IF_11
0x4009853	    0x488b90b00200	           mov rdx, qword [rax + 0x2b0] 	       849	syntax.c	FUNCTION_5	ELSE_5	IF_11
0x400985a	    0x48c704240100	                      mov qword [rsp], 1	       849	syntax.c	FUNCTION_5	ELSE_5	IF_11
0x4009862	        0x488b0424	                    mov rax, qword [rsp]	       852	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x4009866	          0x4839c2	                            cmp rdx, rax	       852	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x4009869	     0xf8de6030000	                           jge 0x4009c55	       852	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x400986f	          0x4885d2	                           test rdx, rdx	       852	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x4009872	     0xf84dd030000	                            je 0x4009c55	       852	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x4009878	          0x4829d0	                            sub rax, rdx	       853	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x400987b	      0x4889442430	             mov qword [rsp + 0x30], rax	       853	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x4009880	        0x488b0424	                    mov rax, qword [rsp]	      1734	syntax.c	FUNCTION_23
0x4009884	            0x31ed	                            xor ebp, ebp	       858	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6
0x4009886	    0x48c744241000	               mov qword [rsp + 0x10], 0	       857	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6
0x400988f	          0x4531ed	                          xor r13d, r13d	       756	syntax.c	FUNCTION_5
0x4009892	          0x4531e4	                          xor r12d, r12d	       755	syntax.c	FUNCTION_5
0x4009895	    0xc74424080000	                  mov dword [rsp + 8], 0	       754	syntax.c	FUNCTION_5
0x400989d	        0x488d58ff	                      lea rbx, [rax - 1]	       754	syntax.c	FUNCTION_5
0x40098a1	      0x4889442418	             mov qword [rsp + 0x18], rax	      1734	syntax.c	FUNCTION_23
0x40098a6	      0x483b5c2430	            cmp rbx, qword [rsp + 0x30] 	       861	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1
0x40098ab	      0x48895c2438	             mov qword [rsp + 0x38], rbx	       861	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1
0x40098b0	     0xf8e7e020000	                           jle 0x4009b34	       861	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1
0x40098b6	      0xe800000000	                          call 0x40098bb	       864	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	CALL_8
0x40098bb	    0x8b0500000000	            mov eax, dword [0x040098c1] 	       865	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_13
0x40098c1	            0x85c0	                           test eax, eax	       865	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_13
0x40098c3	     0xf85d3050000	                           jne 0x4009e9c	       865	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_13
0x40098c9	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       873	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14
0x40098ce	          0x4885c0	                           test rax, rax	       873	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14
0x40098d1	            0x740a	                            je 0x40098dd	       873	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14
0x40098d3	        0x48395808	                cmp qword [rax + 8], rbx	       873	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14
0x40098d7	     0xf8416030000	                            je 0x4009bf3	       873	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14
0x40098dd	        0x4883fb01	                              cmp rbx, 1	       882	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_15	CALL_11
0x40098e1	            0x7410	                            je 0x40098f3	       882	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_15	CALL_11
0x40098e3	        0x4883eb01	                              sub rbx, 1	       882	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_15	CALL_11
0x40098e7	          0x4889df	                            mov rdi, rbx	       882	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_15	CALL_11
0x40098ea	      0xe8c1aaffff	             call sym.syn_match_linecont	       882	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_15	CALL_11
0x40098ef	            0x85c0	                           test eax, eax	       882	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_15	CALL_11
0x40098f1	            0x75b3	                           jne 0x40098a6	       882	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_15	CALL_11
0x40098f3	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0x40098f8	      0x483b442418	            cmp rax, qword [rsp + 0x18] 	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0x40098fd	    0xc70500000000	           mov dword [0x04009907], 0x90 	      1740	syntax.c	FUNCTION_24
0x4009907	    0xc70500000000	               mov dword [0x04009911], 3	      1741	syntax.c	FUNCTION_24
0x4009911	    0xc744240c0000	                mov dword [rsp + 0xc], 0	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0x4009919	    0x488905000000	            mov qword [0x04009920], rax 	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0x4009920	     0xf8d90010000	                           jge 0x4009ab6	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0x4009926	      0xe835b3ffff	                 call sym.syn_start_line	       892	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	CALL_13
0x400992b	    0x8b0500000000	            mov eax, dword [0x04009931] 	      1804	syntax.c	FUNCTION_26	WHILE_1
0x4009931	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	       892	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	CALL_13
0x4009936	            0x85c0	                           test eax, eax	      1804	syntax.c	FUNCTION_26	WHILE_1
0x4009938	            0x7425	                            je 0x400995f	      1804	syntax.c	FUNCTION_26	WHILE_1
0x400993a	      0xe949010000	                           jmp 0x4009a88	      1804	syntax.c	FUNCTION_26	WHILE_1
0x400993f	              0x90	                                     nop	      1804	syntax.c	FUNCTION_26	WHILE_1
0x4009940	    0x8b0500000000	            mov eax, dword [0x04009946] 	      1804	syntax.c	FUNCTION_26	WHILE_1
0x4009946	    0x448b35000000	           mov r14d, dword [0x0400994d] 	      1804	syntax.c	FUNCTION_26	WHILE_1
0x400994d	          0x83c001	                              add eax, 1	      1830	syntax.c	FUNCTION_26	WHILE_1
0x4009950	    0x890500000000	            mov dword [0x04009956], eax 	      1830	syntax.c	FUNCTION_26	WHILE_1
0x4009956	          0x4585f6	                         test r14d, r14d	      1804	syntax.c	FUNCTION_26	WHILE_1
0x4009959	     0xf8529010000	                           jne 0x4009a88	      1804	syntax.c	FUNCTION_26	WHILE_1
0x400995f	      0xbf01000000	                              mov edi, 1	      1806	syntax.c	FUNCTION_26	WHILE_1	CALL_1
0x4009964	      0xe807d6ffff	  call sym.syn_current_attr.constprop.24	      1806	syntax.c	FUNCTION_26	WHILE_1	CALL_1
0x4009969	    0x486305000000	         movsxd rax, dword [0x04009970] 	      1810	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x4009970	            0x85c0	                           test eax, eax	      1810	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x4009972	            0x74cc	                            je 0x4009940	      1810	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x4009974	        0x488d04c0	                  lea rax, [rax + rax*8]	      1815	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x4009978	    0x488b15000000	            mov rdx, qword [0x0400997f] 	      1815	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x400997f	        0x48c1e004	                              shl rax, 4	      1815	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x4009983	    0x488d940270ff	             lea rdx, [rdx + rax - 0x90]	      1815	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x400998b	          0x486302	                 movsxd rax, dword [rdx]	      1816	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x400998e	            0x85c0	                           test eax, eax	      1816	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x4009990	            0x781e	                            js 0x40099b0	      1816	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x4009992	    0x488b0d000000	            mov rcx, qword [0x04009999] 	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x4009999	        0x488d0480	                  lea rax, [rax + rax*4]	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x400999d	        0x48c1e005	                              shl rax, 5	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x40099a1	    0x480381700200	            add rax, qword [rcx + 0x270]	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x40099a8	          0x8b5824	            mov ebx, dword [rax + 0x24] 	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x40099ab	          0xf6c330	                           test bl, 0x30	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x40099ae	            0x7540	                           jne 0x40099f0	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x40099b0	    0x488b35000000	            mov rsi, qword [0x040099b7] 	      3305	syntax.c	FUNCTION_42	CALL_1
0x40099b7	    0x488b3d000000	            mov rdi, qword [0x040099be] 	      3305	syntax.c	FUNCTION_42	CALL_1
0x40099be	            0x31d2	                            xor edx, edx	      3305	syntax.c	FUNCTION_42	CALL_1
0x40099c0	    0x8b1d00000000	            mov ebx, dword [0x040099c6] 	      1824	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x40099c6	      0xe800000000	                          call 0x40099cb	      3305	syntax.c	FUNCTION_42	CALL_1
0x40099cb	    0x48630d000000	         movsxd rcx, dword [0x040099d2] 	      1825	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_3	CALL_2
0x40099d2	        0x803c0800	                 cmp byte [rax + rcx], 0	      1825	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_3	CALL_2
0x40099d6	          0x4889ca	                            mov rdx, rcx	      1825	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_3	CALL_2
0x40099d9	            0x7409	                            je 0x40099e4	      1825	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_3	CALL_2
0x40099db	          0x83c201	                              add edx, 1	      1826	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_3
0x40099de	    0x891500000000	            mov dword [0x040099e4], edx 	      1826	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_3
0x40099e4	      0xe897aeffff	               call sym.check_state_ends	      1827	syntax.c	FUNCTION_26	WHILE_1	IF_1	CALL_3
0x40099e9	            0x89d8	                            mov eax, ebx	      1827	syntax.c	FUNCTION_26	WHILE_1	IF_1	CALL_3
0x40099eb	      0xe956ffffff	                           jmp 0x4009946	      1827	syntax.c	FUNCTION_26	WHILE_1	IF_1	CALL_3
0x40099f0	        0x4c8b7218	            mov r14, qword [rdx + 0x18] 	       903	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_17
0x40099f4	        0x4c3b3424	                    cmp r14, qword [rsp]	       903	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_17
0x40099f8	     0xf8fd5010000	                            jg 0x4009bd3	       903	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_17
0x40099fe	    0x4c8b25000000	            mov r12, qword [0x04009a05] 	       921	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x4009a05	          0x8b4030	            mov eax, dword [rax + 0x30] 	       919	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7
0x4009a08	    0x448b2d000000	           mov r13d, dword [0x04009a0f] 	       922	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x4009a0f	          0x8b6a20	            mov ebp, dword [rdx + 0x20] 	       923	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x4009a12	          0x4d39e6	                            cmp r14, r12	       928	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_19
0x4009a15	        0x89442408	                mov dword [rsp + 8], eax	       919	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7
0x4009a19	     0xf8e81010000	                           jle 0x4009ba0	       928	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_19
0x4009a1f	      0x4c3b742418	            cmp r14, qword [rsp + 0x18] 	       932	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_19	IF_20
0x4009a24	    0x4c8935000000	            mov qword [0x04009a2b], r14 	       930	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_19
0x4009a2b	    0x892d00000000	            mov dword [0x04009a31], ebp 	       931	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_19
0x4009a31	     0xf8dab010000	                           jge 0x4009be2	       932	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_19	IF_20
0x4009a37	          0x4c89f6	                            mov rsi, r14	       932	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_19	IF_20
0x4009a3a	          0x4189ef	                           mov r15d, ebp	       923	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x4009a3d	    0x488b3d000000	            mov rdi, qword [0x04009a44] 	      3305	syntax.c	FUNCTION_42	CALL_1
0x4009a44	            0x31d2	                            xor edx, edx	      3305	syntax.c	FUNCTION_42	CALL_1
0x4009a46	      0xe800000000	                          call 0x4009a4b	      3305	syntax.c	FUNCTION_42	CALL_1
0x4009a4b	    0x486335000000	         movsxd rsi, dword [0x04009a52] 	       944	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_22	CALL_15
0x4009a52	        0x803c3000	                 cmp byte [rax + rsi], 0	       944	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_22	CALL_15
0x4009a56	          0x4889f2	                            mov rdx, rsi	       944	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_22	CALL_15
0x4009a59	            0x7409	                            je 0x4009a64	       944	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_22	CALL_15
0x4009a5b	          0x83c201	                              add edx, 1	       945	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_22
0x4009a5e	    0x891500000000	            mov dword [0x04009a64], edx 	       945	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_22
0x4009a64	      0xe817aeffff	               call sym.check_state_ends	       946	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	CALL_16
0x4009a69	    0x8b0500000000	            mov eax, dword [0x04009a6f] 	      1804	syntax.c	FUNCTION_26	WHILE_1
0x4009a6f	    0x44893d000000	           mov dword [0x04009a76], r15d 	       947	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x4009a76	          0x4d89f7	                            mov r15, r14	       947	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0x4009a79	        0x895c240c	              mov dword [rsp + 0xc], ebx	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x4009a7d	            0x85c0	                           test eax, eax	      1804	syntax.c	FUNCTION_26	WHILE_1
0x4009a7f	     0xf84dafeffff	                            je 0x400995f	      1804	syntax.c	FUNCTION_26	WHILE_1
0x4009a85	           0xf1f00	                         nop dword [rax]	      1804	syntax.c	FUNCTION_26	WHILE_1
0x4009a88	    0x488b05000000	            mov rax, qword [0x04009a8f] 	      1804	syntax.c	FUNCTION_26	WHILE_1
0x4009a8f	      0x4c897c2410	             mov qword [rsp + 0x10], r15	      1804	syntax.c	FUNCTION_26	WHILE_1
0x4009a94	        0x4883c001	                              add rax, 1	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0x4009a98	      0x4839442418	            cmp qword [rsp + 0x18], rax 	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0x4009a9d	    0x488905000000	            mov qword [0x04009aa4], rax 	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0x4009aa4	     0xf8f7cfeffff	                            jg 0x4009926	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0x4009aaa	        0x8b5c240c	              mov ebx, dword [rsp + 0xc]	       957	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23
0x4009aae	            0x85db	                           test ebx, ebx	       957	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23
0x4009ab0	     0xf8575020000	                           jne 0x4009d2b	       957	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23
0x4009ab6	    0x8b3d00000000	            mov edi, dword [0x04009abc] 	       722	syntax.c	FUNCTION_4	FOR_1
0x4009abc	    0x488b05000000	            mov rax, qword [0x04009ac3] 	       722	syntax.c	FUNCTION_4	FOR_1
0x4009ac3	          0x4531f6	                          xor r14d, r14d	       722	syntax.c	FUNCTION_4	FOR_1
0x4009ac6	            0x85ff	                           test edi, edi	       722	syntax.c	FUNCTION_4	FOR_1
0x4009ac8	    0x488d98880000	                   lea rbx, [rax + 0x88]	       722	syntax.c	FUNCTION_4	FOR_1
0x4009acf	            0x7e1c	                           jle 0x4009aed	       722	syntax.c	FUNCTION_4	FOR_1
0x4009ad1	          0x488b3b	                    mov rdi, qword [rbx]	       723	syntax.c	FUNCTION_4	CALL_1
0x4009ad4	        0x4183c601	                             add r14d, 1	       722	syntax.c	FUNCTION_4	FOR_1
0x4009ad8	    0x4881c3900000	                           add rbx, 0x90	       722	syntax.c	FUNCTION_4	FOR_1
0x4009adf	      0xe800000000	                          call 0x4009ae4	       723	syntax.c	FUNCTION_4	CALL_1
0x4009ae4	    0x443b35000000	           cmp r14d, dword [0x04009aeb] 	       722	syntax.c	FUNCTION_4	FOR_1
0x4009aeb	            0x7ce4	                            jl 0x4009ad1	       722	syntax.c	FUNCTION_4	FOR_1
0x4009aed	      0xbf00000000	                              mov edi, 0	       724	syntax.c	FUNCTION_4	CALL_2
0x4009af2	      0xe800000000	                          call 0x4009af7	       724	syntax.c	FUNCTION_4	CALL_2
0x4009af7	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      1734	syntax.c	FUNCTION_23
0x4009afc	    0xc70500000000	               mov dword [0x04009b06], 0	      1732	syntax.c	FUNCTION_23
0x4009b06	    0x48c705000000	               mov qword [0x04009b11], 0	      1733	syntax.c	FUNCTION_23
0x4009b11	    0xc70500000000	     mov dword [0x04009b1b], 0xffffffff 	      1734	syntax.c	FUNCTION_23
0x4009b1b	        0x488d58ff	                      lea rbx, [rax - 1]	      1734	syntax.c	FUNCTION_23
0x4009b1f	      0x483b5c2430	            cmp rbx, qword [rsp + 0x30] 	       861	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1
0x4009b24	      0x4889442418	             mov qword [rsp + 0x18], rax	      1734	syntax.c	FUNCTION_23
0x4009b29	      0x48895c2438	             mov qword [rsp + 0x38], rbx	       861	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1
0x4009b2e	     0xf8f82fdffff	                            jg 0x40098b6	       861	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1
0x4009b34	    0x488b05000000	            mov rax, qword [0x04009b3b] 	       861	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1
0x4009b3b	            0x31ed	                            xor ebp, ebp	       722	syntax.c	FUNCTION_4	FOR_1
0x4009b3d	    0x488d98880000	                   lea rbx, [rax + 0x88]	       722	syntax.c	FUNCTION_4	FOR_1
0x4009b44	    0x8b0500000000	            mov eax, dword [0x04009b4a] 	       722	syntax.c	FUNCTION_4	FOR_1
0x4009b4a	            0x85c0	                           test eax, eax	       722	syntax.c	FUNCTION_4	FOR_1
0x4009b4c	            0x7e1a	                           jle 0x4009b68	       722	syntax.c	FUNCTION_4	FOR_1
0x4009b4e	          0x488b3b	                    mov rdi, qword [rbx]	       723	syntax.c	FUNCTION_4	CALL_1
0x4009b51	          0x83c501	                              add ebp, 1	       722	syntax.c	FUNCTION_4	FOR_1
0x4009b54	    0x4881c3900000	                           add rbx, 0x90	       722	syntax.c	FUNCTION_4	FOR_1
0x4009b5b	      0xe800000000	                          call 0x4009b60	       723	syntax.c	FUNCTION_4	CALL_1
0x4009b60	    0x3b2d00000000	            cmp ebp, dword [0x04009b66] 	       722	syntax.c	FUNCTION_4	FOR_1
0x4009b66	            0x7ce6	                            jl 0x4009b4e	       722	syntax.c	FUNCTION_4	FOR_1
0x4009b68	      0xbf00000000	                              mov edi, 0	       724	syntax.c	FUNCTION_4	CALL_2
0x4009b6d	      0xe800000000	                          call 0x4009b72	       724	syntax.c	FUNCTION_4	CALL_2
0x4009b72	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      1004	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_27
0x4009b77	    0x48c705000000	               mov qword [0x04009b82], 0	      1733	syntax.c	FUNCTION_23
0x4009b82	    0xc70500000000	     mov dword [0x04009b8c], 0xffffffff 	      1734	syntax.c	FUNCTION_23
0x4009b8c	    0x488b05000000	            mov rax, qword [0x04009b93] 	      1734	syntax.c	FUNCTION_23
0x4009b93	        0x4883c101	                              add rcx, 1	      1004	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_27
0x4009b97	    0x48890d000000	            mov qword [0x04009b9e], rcx 	      1004	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_27
0x4009b9e	            0xeb69	                           jmp 0x4009c09	      1004	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_27
0x4009ba0	          0x4139ed	                           cmp r13d, ebp	       935	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_8	IF_21
0x4009ba3	            0x7d1b	                           jge 0x4009bc0	       935	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_8	IF_21
0x4009ba5	    0x892d00000000	            mov dword [0x04009bab], ebp 	       936	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_8	IF_21
0x4009bab	          0x4c89e6	                            mov rsi, r12	       936	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_8	IF_21
0x4009bae	          0x4189ef	                           mov r15d, ebp	       936	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_8	IF_21
0x4009bb1	      0xe987feffff	                           jmp 0x4009a3d	       936	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_8	IF_21
0x4009bb6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       936	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_8	IF_21
0x4009bc0	        0x458d7d01	                     lea r15d, [r13 + 1]	       938	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_9
0x4009bc4	          0x4c89e6	                            mov rsi, r12	       938	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_9
0x4009bc7	    0x44893d000000	           mov dword [0x04009bce], r15d 	       938	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_9
0x4009bce	      0xe96afeffff	                           jmp 0x4009a3d	       938	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_9
0x4009bd3	      0x4c897c2410	             mov qword [rsp + 0x10], r15	       938	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_9
0x4009bd8	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       903	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_17
0x4009bdd	      0xe9b2feffff	                           jmp 0x4009a94	       903	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_17
0x4009be2	          0x4c89f0	                            mov rax, r14	       903	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_17
0x4009be5	      0x4c89742410	             mov qword [rsp + 0x10], r14	       903	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_17
0x4009bea	        0x895c240c	              mov dword [rsp + 0xc], ebx	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x4009bee	      0xe9a1feffff	                           jmp 0x4009a94	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x4009bf3	          0x4889c7	                            mov rdi, rax	       875	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14	CALL_10
0x4009bf6	      0xe8d5b5ffff	             call sym.load_current_state	       875	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14	CALL_10
0x4009bfb	    0x488b0d000000	            mov rcx, qword [0x04009c02] 	       875	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14	CALL_10
0x4009c02	    0x488b05000000	            mov rax, qword [0x04009c09] 	       875	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14	CALL_10
0x4009c09	        0x4883f901	                              cmp rcx, 1	       607	syntax.c	FUNCTION_2	IF_11	IF_12
0x4009c0d	    0xc70500000000	           mov dword [0x04009c17], 0x90 	      1740	syntax.c	FUNCTION_24
0x4009c17	    0xc70500000000	               mov dword [0x04009c21], 3	      1741	syntax.c	FUNCTION_24
0x4009c21	     0xf84f9000000	                            je 0x4009d20	       607	syntax.c	FUNCTION_2	IF_11	IF_12
0x4009c27	          0x4989cc	                            mov r12, rcx	       613	syntax.c	FUNCTION_2	IF_11	ELSE_2
0x4009c2a	    0x4c03a0a80200	            add r12, qword [rax + 0x2a8]	       613	syntax.c	FUNCTION_2	IF_11	ELSE_2
0x4009c31	      0xe97df5ffff	                           jmp 0x40091b3	       613	syntax.c	FUNCTION_2	IF_11	ELSE_2
0x4009c36	          0x4c89e1	                            mov rcx, r12	      1265	syntax.c	FUNCTION_13	IF_3	IF_9
0x4009c39	    0x48c780200300	              mov qword [rax + 0x320], 0	      1284	syntax.c	FUNCTION_13	IF_3	ELSE_3
0x4009c44	          0x4189ed	                           mov r13d, ebp	      1285	syntax.c	FUNCTION_13	IF_3	ELSE_3
0x4009c47	    0x89a830030000	            mov dword [rax + 0x330], ebp	      1285	syntax.c	FUNCTION_13	IF_3	ELSE_3
0x4009c4d	          0x4889ca	                            mov rdx, rcx	      1285	syntax.c	FUNCTION_13	IF_3	ELSE_3
0x4009c50	      0xe9abf7ffff	                           jmp 0x4009400	      1285	syntax.c	FUNCTION_13	IF_3	ELSE_3
0x4009c55	    0x48c744243000	               mov qword [rsp + 0x30], 0	       855	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6
0x4009c5e	      0xe91dfcffff	                           jmp 0x4009880	       855	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6
0x4009c63	    0xc70500000000	           mov dword [0x04009c6d], 0x90 	      1740	syntax.c	FUNCTION_24
0x4009c6d	    0xc70500000000	               mov dword [0x04009c77], 3	      1741	syntax.c	FUNCTION_24
0x4009c77	      0xb901000000	                              mov ecx, 1	      1741	syntax.c	FUNCTION_24
0x4009c7c	    0x41bc01000000	                             mov r12d, 1	       609	syntax.c	FUNCTION_2	IF_11	IF_12
0x4009c82	      0xe92cf5ffff	                           jmp 0x40091b3	       609	syntax.c	FUNCTION_2	IF_11	IF_12
0x4009c87	    0x8b1500000000	            mov edx, dword [0x04009c8d] 	       561	syntax.c	FUNCTION_2	IF_3	IF_4
0x4009c8d	            0x85d2	                           test edx, edx	       561	syntax.c	FUNCTION_2	IF_3	IF_4
0x4009c8f	            0x7448	                            je 0x4009cd9	       561	syntax.c	FUNCTION_2	IF_3	IF_4
0x4009c91	    0x8b3500000000	            mov esi, dword [0x04009c97] 	       722	syntax.c	FUNCTION_4	FOR_1
0x4009c97	    0x488b05000000	            mov rax, qword [0x04009c9e] 	       722	syntax.c	FUNCTION_4	FOR_1
0x4009c9e	          0x4531e4	                          xor r12d, r12d	       722	syntax.c	FUNCTION_4	FOR_1
0x4009ca1	            0x85f6	                           test esi, esi	       722	syntax.c	FUNCTION_4	FOR_1
0x4009ca3	    0x488da8880000	                   lea rbp, [rax + 0x88]	       722	syntax.c	FUNCTION_4	FOR_1
0x4009caa	     0xf8e38f4ffff	                           jle 0x40090e8	       722	syntax.c	FUNCTION_4	FOR_1
0x4009cb0	        0x488b7d00	                    mov rdi, qword [rbp]	       723	syntax.c	FUNCTION_4	CALL_1
0x4009cb4	        0x4183c401	                             add r12d, 1	       722	syntax.c	FUNCTION_4	FOR_1
0x4009cb8	    0x4881c5900000	                           add rbp, 0x90	       722	syntax.c	FUNCTION_4	FOR_1
0x4009cbf	      0xe800000000	                          call 0x4009cc4	       723	syntax.c	FUNCTION_4	CALL_1
0x4009cc4	    0x443b25000000	           cmp r12d, dword [0x04009ccb] 	       722	syntax.c	FUNCTION_4	FOR_1
0x4009ccb	            0x7ce3	                            jl 0x4009cb0	       722	syntax.c	FUNCTION_4	FOR_1
0x4009ccd	      0xe916f4ffff	                           jmp 0x40090e8	       722	syntax.c	FUNCTION_4	FOR_1
0x4009cd2	    0x488b05000000	            mov rax, qword [0x04009cd9] 	       722	syntax.c	FUNCTION_4	FOR_1
0x4009cd9	        0x4883c001	                              add rax, 1	       563	syntax.c	FUNCTION_2	IF_3	IF_4
0x4009cdd	    0x488905000000	            mov qword [0x04009ce4], rax 	       563	syntax.c	FUNCTION_2	IF_3	IF_4
0x4009ce4	      0xe8b78effff	            call sym.store_current_state	       564	syntax.c	FUNCTION_2	IF_3	IF_4	CALL_6
0x4009ce9	      0xe996f3ffff	                           jmp 0x4009084	       564	syntax.c	FUNCTION_2	IF_3	IF_4	CALL_6
0x4009cee	    0x488bb8100300	           mov rdi, qword [rax + 0x310] 	       564	syntax.c	FUNCTION_2	IF_3	IF_4	CALL_6
0x4009cf5	      0xe93fffffff	                           jmp 0x4009c39	       564	syntax.c	FUNCTION_2	IF_3	IF_4	CALL_6
0x4009cfa	    0x48c744242800	               mov qword [rsp + 0x28], 0	       587	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_7
0x4009d03	      0xe98cf4ffff	                           jmp 0x4009194	       587	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_7
0x4009d08	        0x488d0c52	                  lea rcx, [rdx + rdx*2]	       782	syntax.c	FUNCTION_5	ELSE_1	ELSE_3
0x4009d0c	          0x48d1f9	                              sar rcx, 1	       782	syntax.c	FUNCTION_5	ELSE_1	ELSE_3
0x4009d0f	      0xe9f3f7ffff	                           jmp 0x4009507	       782	syntax.c	FUNCTION_5	ELSE_1	ELSE_3
0x4009d14	          0x4889d7	                            mov rdi, rdx	       783	syntax.c	FUNCTION_5	ELSE_1	IF_4
0x4009d17	        0x488b0424	                    mov rax, qword [rsp]	       783	syntax.c	FUNCTION_5	ELSE_1	IF_4
0x4009d1b	      0xe99df8ffff	                           jmp 0x40095bd	       783	syntax.c	FUNCTION_5	ELSE_1	IF_4
0x4009d20	    0x41bc01000000	                             mov r12d, 1	       609	syntax.c	FUNCTION_2	IF_11	IF_12
0x4009d26	      0xe988f4ffff	                           jmp 0x40091b3	       609	syntax.c	FUNCTION_2	IF_11	IF_12
0x4009d2b	    0x488b05000000	            mov rax, qword [0x04009d32] 	       609	syntax.c	FUNCTION_2	IF_11	IF_12
0x4009d32	    0x448b1d000000	           mov r11d, dword [0x04009d39] 	       722	syntax.c	FUNCTION_4	FOR_1
0x4009d39	    0x488d98880000	                   lea rbx, [rax + 0x88]	       722	syntax.c	FUNCTION_4	FOR_1
0x4009d40	            0x31c0	                            xor eax, eax	       722	syntax.c	FUNCTION_4	FOR_1
0x4009d42	          0x4585db	                         test r11d, r11d	       722	syntax.c	FUNCTION_4	FOR_1
0x4009d45	          0x4189c6	                           mov r14d, eax	       722	syntax.c	FUNCTION_4	FOR_1
0x4009d48	            0x7e1c	                           jle 0x4009d66	       722	syntax.c	FUNCTION_4	FOR_1
0x4009d4a	          0x488b3b	                    mov rdi, qword [rbx]	       723	syntax.c	FUNCTION_4	CALL_1
0x4009d4d	        0x4183c601	                             add r14d, 1	       722	syntax.c	FUNCTION_4	FOR_1
0x4009d51	    0x4881c3900000	                           add rbx, 0x90	       722	syntax.c	FUNCTION_4	FOR_1
0x4009d58	      0xe800000000	                          call 0x4009d5d	       723	syntax.c	FUNCTION_4	CALL_1
0x4009d5d	    0x443b35000000	           cmp r14d, dword [0x04009d64] 	       722	syntax.c	FUNCTION_4	FOR_1
0x4009d64	            0x7ce4	                            jl 0x4009d4a	       722	syntax.c	FUNCTION_4	FOR_1
0x4009d66	      0xbf00000000	                              mov edi, 0	       724	syntax.c	FUNCTION_4	CALL_2
0x4009d6b	      0xe800000000	                          call 0x4009d70	       724	syntax.c	FUNCTION_4	CALL_2
0x4009d70	      0x448b542408	               mov r10d, dword [rsp + 8]	       965	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_24
0x4009d75	          0x4585d2	                         test r10d, r10d	       965	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_24
0x4009d78	     0xf8884000000	                            js 0x4009e02	       965	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_24
0x4009d7e	      0xbe01000000	                              mov esi, 1	      2898	syntax.c	FUNCTION_35	IF_1	CALL_1
0x4009d83	      0xbf00000000	                              mov edi, 0	      2898	syntax.c	FUNCTION_35	IF_1	CALL_1
0x4009d88	      0xe800000000	                          call 0x4009d8d	      2898	syntax.c	FUNCTION_35	IF_1	CALL_1
0x4009d8d	            0x85c0	                           test eax, eax	      2898	syntax.c	FUNCTION_35	IF_1	CALL_1
0x4009d8f	            0x7471	                            je 0x4009e02	      2898	syntax.c	FUNCTION_35	IF_1	CALL_1
0x4009d91	    0x486305000000	         movsxd rax, dword [0x04009d98] 	        90	string3.h	FUNCTION_173	CALL_6
0x4009d98	        0x488d04c0	                  lea rax, [rax + rax*8]	        90	string3.h	FUNCTION_173	CALL_6
0x4009d9c	        0x48c1e004	                              shl rax, 4	        90	string3.h	FUNCTION_173	CALL_6
0x4009da0	    0x480305000000	             add rax, qword [0x04009da7]	        90	string3.h	FUNCTION_173	CALL_6
0x4009da7	        0x488d7808	                      lea rdi, [rax + 8]	        90	string3.h	FUNCTION_173	CALL_6
0x4009dab	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_173	CALL_6
0x4009db2	    0x48c780880000	               mov qword [rax + 0x88], 0	        90	string3.h	FUNCTION_173	CALL_6
0x4009dbd	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_173	CALL_6
0x4009dc1	          0x4829f8	                            sub rax, rdi	        90	string3.h	FUNCTION_173	CALL_6
0x4009dc4	          0x4889c1	                            mov rcx, rax	        90	string3.h	FUNCTION_173	CALL_6
0x4009dc7	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_173	CALL_6
0x4009dc9	    0x81c190000000	                           add ecx, 0x90	        90	string3.h	FUNCTION_173	CALL_6
0x4009dcf	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_173	CALL_6
0x4009dd2	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_173	CALL_6
0x4009dd5	    0x486305000000	         movsxd rax, dword [0x04009ddc] 	      2901	syntax.c	FUNCTION_35
0x4009ddc	        0x8b742408	                mov esi, dword [rsp + 8]	      2901	syntax.c	FUNCTION_35
0x4009de0	          0x4889c7	                            mov rdi, rax	      2901	syntax.c	FUNCTION_35
0x4009de3	        0x488d04c0	                  lea rax, [rax + rax*8]	      2901	syntax.c	FUNCTION_35
0x4009de7	        0x48c1e004	                              shl rax, 4	      2901	syntax.c	FUNCTION_35
0x4009deb	    0x480305000000	             add rax, qword [0x04009df2]	      2901	syntax.c	FUNCTION_35
0x4009df2	            0x8930	                    mov dword [rax], esi	      2901	syntax.c	FUNCTION_35
0x4009df4	          0x8d4701	                      lea eax, [rdi + 1]	      2902	syntax.c	FUNCTION_35
0x4009df7	    0x890500000000	            mov dword [0x04009dfd], eax 	      2902	syntax.c	FUNCTION_35
0x4009dfd	      0xe88ea8ffff	                 call sym.update_si_attr	       967	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	CALL_19
0x4009e02	      0xf644240c10	            test byte [rsp + 0xc], 0x10 	       975	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25
0x4009e07	     0xf84f2000000	                            je 0x4009eff	       975	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25
0x4009e0d	    0x486305000000	         movsxd rax, dword [0x04009e14] 	       977	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0x4009e14	            0x85c0	                           test eax, eax	       977	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0x4009e16	            0x7434	                            je 0x4009e4c	       977	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0x4009e18	    0x488b15000000	            mov rdx, qword [0x04009e1f] 	       979	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0x4009e1f	        0x488d04c0	                  lea rax, [rax + rax*8]	       979	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0x4009e23	    0x8b3500000000	            mov esi, dword [0x04009e29] 	       982	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26	CALL_20
0x4009e29	        0x48c1e004	                              shl rax, 4	       979	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0x4009e2d	    0x488dbc0270ff	             lea rdi, [rdx + rax - 0x90]	       979	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0x4009e35	      0xba01000000	                              mov edx, 1	       982	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26	CALL_20
0x4009e3a	        0x4c896728	             mov qword [rdi + 0x28], r12	       980	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0x4009e3e	        0x44896f30	            mov dword [rdi + 0x30], r13d	       981	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0x4009e42	      0xe8f9a3ffff	                  call sym.update_si_end	       982	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26	CALL_20
0x4009e47	      0xe86484ffff	                  call sym.check_keepend	       983	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26	CALL_21
0x4009e4c	    0x448b0d000000	            mov r9d, dword [0x04009e53] 	      1804	syntax.c	FUNCTION_26	WHILE_1
0x4009e53	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       986	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25
0x4009e58	    0x892d00000000	            mov dword [0x04009e5e], ebp 	       985	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25
0x4009e5e	          0x4585c9	                           test r9d, r9d	      1804	syntax.c	FUNCTION_26	WHILE_1
0x4009e61	    0x488905000000	            mov qword [0x04009e68], rax 	       986	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25
0x4009e68	     0xf85ab000000	                           jne 0x4009f19	      1804	syntax.c	FUNCTION_26	WHILE_1
0x4009e6e	            0x31ff	                            xor edi, edi	      1806	syntax.c	FUNCTION_26	WHILE_1	CALL_1
0x4009e70	      0xe8fbd0ffff	  call sym.syn_current_attr.constprop.24	      1806	syntax.c	FUNCTION_26	WHILE_1	CALL_1
0x4009e75	    0x448b05000000	            mov r8d, dword [0x04009e7c] 	      1804	syntax.c	FUNCTION_26	WHILE_1
0x4009e7c	    0x830500000000	               add dword [0x04009e83], 1	      1830	syntax.c	FUNCTION_26	WHILE_1
0x4009e83	          0x4585c0	                           test r8d, r8d	      1804	syntax.c	FUNCTION_26	WHILE_1
0x4009e86	            0x74e6	                            je 0x4009e6e	      1804	syntax.c	FUNCTION_26	WHILE_1
0x4009e88	    0x488b0d000000	            mov rcx, qword [0x04009e8f] 	      1804	syntax.c	FUNCTION_26	WHILE_1
0x4009e8f	        0x4883c101	                              add rcx, 1	       988	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25
0x4009e93	    0x48890d000000	            mov qword [0x04009e9a], rcx 	       988	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25
0x4009e9a	            0xeb71	                           jmp 0x4009f0d	       988	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25
0x4009e9c	    0x488b05000000	            mov rax, qword [0x04009ea3] 	       988	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25
0x4009ea3	            0x31ed	                            xor ebp, ebp	       722	syntax.c	FUNCTION_4	FOR_1
0x4009ea5	    0x488d98880000	                   lea rbx, [rax + 0x88]	       722	syntax.c	FUNCTION_4	FOR_1
0x4009eac	    0x8b0500000000	            mov eax, dword [0x04009eb2] 	       722	syntax.c	FUNCTION_4	FOR_1
0x4009eb2	            0x85c0	                           test eax, eax	       722	syntax.c	FUNCTION_4	FOR_1
0x4009eb4	            0x7e1a	                           jle 0x4009ed0	       722	syntax.c	FUNCTION_4	FOR_1
0x4009eb6	          0x488b3b	                    mov rdi, qword [rbx]	       723	syntax.c	FUNCTION_4	CALL_1
0x4009eb9	          0x83c501	                              add ebp, 1	       722	syntax.c	FUNCTION_4	FOR_1
0x4009ebc	    0x4881c3900000	                           add rbx, 0x90	       722	syntax.c	FUNCTION_4	FOR_1
0x4009ec3	      0xe800000000	                          call 0x4009ec8	       723	syntax.c	FUNCTION_4	CALL_1
0x4009ec8	    0x3b2d00000000	            cmp ebp, dword [0x04009ece] 	       722	syntax.c	FUNCTION_4	FOR_1
0x4009ece	            0x7ce6	                            jl 0x4009eb6	       722	syntax.c	FUNCTION_4	FOR_1
0x4009ed0	      0xbf00000000	                              mov edi, 0	       724	syntax.c	FUNCTION_4	CALL_2
0x4009ed5	      0xe800000000	                          call 0x4009eda	       724	syntax.c	FUNCTION_4	CALL_2
0x4009eda	        0x488b0424	                    mov rax, qword [rsp]	       868	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_13
0x4009ede	    0x48c705000000	               mov qword [0x04009ee9], 0	      1733	syntax.c	FUNCTION_23
0x4009ee9	    0xc70500000000	     mov dword [0x04009ef3], 0xffffffff 	      1734	syntax.c	FUNCTION_23
0x4009ef3	    0x488905000000	            mov qword [0x04009efa], rax 	       868	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_13
0x4009efa	          0x4889c1	                            mov rcx, rax	       868	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_13
0x4009efd	            0xeb0e	                           jmp 0x4009f0d	       868	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_13
0x4009eff	        0x488b0424	                    mov rax, qword [rsp]	       991	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	ELSE_11
0x4009f03	    0x488905000000	            mov qword [0x04009f0a], rax 	       991	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	ELSE_11
0x4009f0a	          0x4889c1	                            mov rcx, rax	       991	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	ELSE_11
0x4009f0d	    0x488b05000000	            mov rax, qword [0x04009f14] 	       991	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	ELSE_11
0x4009f14	      0xe9f0fcffff	                           jmp 0x4009c09	       991	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	ELSE_11
0x4009f19	          0x4889c1	                            mov rcx, rax	       991	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	ELSE_11
0x4009f1c	      0xe96effffff	                           jmp 0x4009e8f	       991	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	ELSE_11
0x4009f21	          0x83e602	                              and esi, 2	       849	syntax.c	FUNCTION_5	ELSE_5	IF_11
0x4009f24	          0x4889f9	                            mov rcx, rdi	       849	syntax.c	FUNCTION_5	ELSE_5	IF_11
0x4009f27	     0xf8535f9ffff	                           jne 0x4009862	       849	syntax.c	FUNCTION_5	ELSE_5	IF_11
0x4009f2d	      0xe9d7fcffff	                           jmp 0x4009c09	       849	syntax.c	FUNCTION_5	ELSE_5	IF_11
0x4009f32	          0x4889dd	                            mov rbp, rbx	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x4009f35	      0xe90af3ffff	                           jmp 0x4009244	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x4009f3a	    0x488b15000000	            mov rdx, qword [0x04009f41] 	       803	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4009f41	    0x4c8b25000000	            mov r12, qword [0x04009f48] 	       800	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4009f48	    0x488b2d000000	            mov rbp, qword [0x04009f4f] 	       802	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4009f4f	    0x488bb8b00200	           mov rdi, qword [rax + 0x2b0] 	       802	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4009f56	    0x48c704240100	                      mov qword [rsp], 1	       803	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4009f5e	    0x48891d000000	            mov qword [0x04009f65], rbx 	       801	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4009f65	    0x488915000000	            mov qword [0x04009f6c], rdx 	       803	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4009f6c	        0x488b0424	                    mov rax, qword [rsp]	       803	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x4009f70	      0xe948f6ffff	                           jmp 0x40095bd	       803	syntax.c	FUNCTION_5	ELSE_4	IF_6
syn_get_foldlevel	DO,0:functions,0:IF,4:WHILE,0:CALL,1:ELSE,0:SWITCH,0:FOR,1	42
0x400b580	        0x488b4710	            mov rax, qword [rdi + 0x10] 	      6646	syntax.c	FUNCTION_106	IF_1
0x400b584	              0x53	                                push rbx	      6641	syntax.c	FUNCTION_106
0x400b585	          0x4889fb	                            mov rbx, rdi	      6641	syntax.c	FUNCTION_106
0x400b588	    0x8b900c030000	           mov edx, dword [rax + 0x30c] 	      6646	syntax.c	FUNCTION_106	IF_1
0x400b58e	            0x85d2	                           test edx, edx	      6646	syntax.c	FUNCTION_106	IF_1
0x400b590	            0x740a	                            je 0x400b59c	      6646	syntax.c	FUNCTION_106	IF_1
0x400b592	    0x8b8050020000	           mov eax, dword [rax + 0x250] 	      6647	syntax.c	FUNCTION_106	IF_1
0x400b598	            0x85c0	                           test eax, eax	      6647	syntax.c	FUNCTION_106	IF_1
0x400b59a	            0x7424	                            je 0x400b5c0	      6647	syntax.c	FUNCTION_106	IF_1
0x400b59c	            0x31c9	                            xor ecx, ecx	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x400b59e	            0x31c0	                            xor eax, eax	      6642	syntax.c	FUNCTION_106
0x400b5a0	    0x488b93100200	           mov rdx, qword [rbx + 0x210] 	      6659	syntax.c	FUNCTION_106	IF_3
0x400b5a7	          0x4839ca	                            cmp rdx, rcx	      6659	syntax.c	FUNCTION_106	IF_3
0x400b5aa	            0x7d0a	                           jge 0x400b5b6	      6659	syntax.c	FUNCTION_106	IF_3
0x400b5ac	            0x85d2	                           test edx, edx	      6659	syntax.c	FUNCTION_106	IF_3
0x400b5ae	      0xb800000000	                              mov eax, 0	      6659	syntax.c	FUNCTION_106	IF_3
0x400b5b3	           0xf49c2	                         cmovns eax, edx	      6659	syntax.c	FUNCTION_106	IF_3
0x400b5b6	              0x5b	                                 pop rbx	      6666	syntax.c	FUNCTION_106
0x400b5b7	              0xc3	                                     ret	      6666	syntax.c	FUNCTION_106
0x400b5b8	     0xf1f84000000	                   nop dword [rax + rax]	      6666	syntax.c	FUNCTION_106
0x400b5c0	      0xe800000000	                          call 0x400b5c5	      6653	syntax.c	FUNCTION_106	IF_1	CALL_1
0x400b5c5	    0x8b0500000000	            mov eax, dword [0x0400b5cb] 	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x400b5cb	            0x85c0	                           test eax, eax	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x400b5cd	            0x7ecd	                           jle 0x400b59c	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x400b5cf	    0x488b0d000000	            mov rcx, qword [0x0400b5d6] 	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x400b5d6	          0x83e801	                              sub eax, 1	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x400b5d9	        0x488d04c0	                  lea rax, [rax + rax*8]	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x400b5dd	        0x488d5168	                   lea rdx, [rcx + 0x68]	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x400b5e1	        0x48c1e004	                              shl rax, 4	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x400b5e5	    0x488db401f800	            lea rsi, [rcx + rax + 0xf8] 	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x400b5ed	            0x31c0	                            xor eax, eax	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x400b5ef	              0x90	                                     nop	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x400b5f0	          0x488b0a	                    mov rcx, qword [rdx]	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x400b5f3	    0x81e100200000	                         and ecx, 0x2000	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x400b5f9	        0x4883f901	                              cmp rcx, 1	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x400b5fd	            0x19c9	                            sbb ecx, ecx	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x400b5ff	    0x4881c2900000	                           add rdx, 0x90	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x400b606	          0x4839d6	                            cmp rsi, rdx	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x400b609	        0x8d440801	                lea eax, [rax + rcx + 1]	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x400b60d	            0x75e1	                           jne 0x400b5f0	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x400b60f	          0x4863c8	                         movsxd rcx, eax	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0x400b612	            0xeb8c	                           jmp 0x400b5a0	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
syn_attr2attr	DO,0:functions,0:IF,3:WHILE,0:CALL,3:ELSE,2:SWITCH,0:FOR,0	40
0x400d770	    0x8b0500000000	            mov eax, dword [0x0400d776] 	      9177	syntax.c	FUNCTION_138	IF_1
0x400d776	    0x81ef00010000	                          sub edi, 0x100	      9160	syntax.c	FUNCTION_137
0x400d77c	            0x85c0	                           test eax, eax	      9177	syntax.c	FUNCTION_138	IF_1
0x400d77e	            0x7410	                            je 0x400d790	      9177	syntax.c	FUNCTION_138	IF_1
0x400d780	            0x31c0	                            xor eax, eax	      9187	syntax.c	FUNCTION_138	IF_3
0x400d782	    0x3b3d00000000	            cmp edi, dword [0x0400d788] 	      9161	syntax.c	FUNCTION_137	IF_1
0x400d788	            0x7c36	                            jl 0x400d7c0	      9161	syntax.c	FUNCTION_137	IF_1
0x400d78a	            0xf3c3	                                     ret	      9189	syntax.c	FUNCTION_138
0x400d78c	         0xf1f4000	                         nop dword [rax]	      9189	syntax.c	FUNCTION_138
0x400d790	    0x833d00000000	               cmp dword [0x0400d797], 1	      9181	syntax.c	FUNCTION_138	ELSE_1	IF_2
0x400d797	            0x7e3f	                           jle 0x400d7d8	      9181	syntax.c	FUNCTION_138	ELSE_1	IF_2
0x400d799	    0x3b3d00000000	            cmp edi, dword [0x0400d79f] 	      9205	syntax.c	FUNCTION_140	IF_1
0x400d79f	            0x7de9	                           jge 0x400d78a	      9205	syntax.c	FUNCTION_140	IF_1
0x400d7a1	          0x4863ff	                         movsxd rdi, edi	      9207	syntax.c	FUNCTION_140
0x400d7a4	    0x488b05000000	            mov rax, qword [0x0400d7ab] 	      9207	syntax.c	FUNCTION_140
0x400d7ab	        0x488d14bf	                  lea rdx, [rdi + rdi*4]	      9207	syntax.c	FUNCTION_140
0x400d7af	        0x488d04d0	                  lea rax, [rax + rdx*8]	      9207	syntax.c	FUNCTION_140
0x400d7b3	          0x4885c0	                           test rax, rax	      9186	syntax.c	FUNCTION_138	IF_3
0x400d7b6	            0x7446	                            je 0x400d7fe	      9186	syntax.c	FUNCTION_138	IF_3
0x400d7b8	           0xfbf00	                   movsx eax, word [rax]	      9188	syntax.c	FUNCTION_138
0x400d7bb	              0xc3	                                     ret	      9188	syntax.c	FUNCTION_138
0x400d7bc	         0xf1f4000	                         nop dword [rax]	      9188	syntax.c	FUNCTION_138
0x400d7c0	          0x4863ff	                         movsxd rdi, edi	      9163	syntax.c	FUNCTION_137
0x400d7c3	    0x488b05000000	            mov rax, qword [0x0400d7ca] 	      9163	syntax.c	FUNCTION_137
0x400d7ca	        0x488d14bf	                  lea rdx, [rdi + rdi*4]	      9163	syntax.c	FUNCTION_137
0x400d7ce	        0x488d04d0	                  lea rax, [rax + rdx*8]	      9163	syntax.c	FUNCTION_137
0x400d7d2	            0xebdf	                           jmp 0x400d7b3	      9163	syntax.c	FUNCTION_137
0x400d7d4	         0xf1f4000	                         nop dword [rax]	      9163	syntax.c	FUNCTION_137
0x400d7d8	    0x8b1500000000	            mov edx, dword [0x0400d7de] 	      9181	syntax.c	FUNCTION_138	ELSE_1	IF_2
0x400d7de	            0x85d2	                           test edx, edx	      9181	syntax.c	FUNCTION_138	ELSE_1	IF_2
0x400d7e0	            0x75b7	                           jne 0x400d799	      9181	syntax.c	FUNCTION_138	ELSE_1	IF_2
0x400d7e2	    0x3b3d00000000	            cmp edi, dword [0x0400d7e8] 	      9196	syntax.c	FUNCTION_139	IF_1
0x400d7e8	            0x7da0	                           jge 0x400d78a	      9196	syntax.c	FUNCTION_139	IF_1
0x400d7ea	          0x4863ff	                         movsxd rdi, edi	      9198	syntax.c	FUNCTION_139
0x400d7ed	    0x488b05000000	            mov rax, qword [0x0400d7f4] 	      9198	syntax.c	FUNCTION_139
0x400d7f4	        0x488d14bf	                  lea rdx, [rdi + rdi*4]	      9198	syntax.c	FUNCTION_139
0x400d7f8	        0x488d04d0	                  lea rax, [rax + rdx*8]	      9198	syntax.c	FUNCTION_139
0x400d7fc	            0xebb5	                           jmp 0x400d7b3	      9198	syntax.c	FUNCTION_139
0x400d7fe	            0x31c0	                            xor eax, eax	      9187	syntax.c	FUNCTION_138	IF_3
0x400d800	              0xc3	                                     ret	      9189	syntax.c	FUNCTION_138
highlight_exists	DO,0:functions,0:IF,0:WHILE,0:CALL,1:ELSE,0:SWITCH,0:FOR,0	45
0x400dea0	            0x4154	                                push r12	      9668	syntax.c	FUNCTION_150
0x400dea2	              0x55	                                push rbp	      9668	syntax.c	FUNCTION_150
0x400dea3	          0x4889fe	                            mov rsi, rdi	      9668	syntax.c	FUNCTION_150
0x400dea6	              0x53	                                push rbx	      9668	syntax.c	FUNCTION_150
0x400dea7	      0xbac7000000	                           mov edx, 0xc7	      9639	syntax.c	FUNCTION_148	CALL_1
0x400deac	    0x4881ecd00000	                           sub rsp, 0xd0	      9668	syntax.c	FUNCTION_150
0x400deb3	          0x4889e7	                            mov rdi, rsp	      9639	syntax.c	FUNCTION_148	CALL_1
0x400deb6	    0x64488b042528	                mov rax, qword fs:[0x28]	      9668	syntax.c	FUNCTION_150
0x400debf	    0x48898424c800	             mov qword [rsp + 0xc8], rax	      9668	syntax.c	FUNCTION_150
0x400dec7	            0x31c0	                            xor eax, eax	      9668	syntax.c	FUNCTION_150
0x400dec9	      0xe800000000	                          call 0x400dece	      9639	syntax.c	FUNCTION_148	CALL_1
0x400dece	          0x4889e7	                            mov rdi, rsp	      9640	syntax.c	FUNCTION_148	CALL_2
0x400ded1	      0xe800000000	                          call 0x400ded6	      9640	syntax.c	FUNCTION_148	CALL_2
0x400ded6	    0x486305000000	         movsxd rax, dword [0x0400dedd] 	      9641	syntax.c	FUNCTION_148	FOR_1
0x400dedd	        0x488d14c0	                  lea rdx, [rax + rax*8]	      9641	syntax.c	FUNCTION_148	FOR_1
0x400dee1	          0x4889c3	                            mov rbx, rax	      9641	syntax.c	FUNCTION_148	FOR_1
0x400dee4	        0x488d1450	                  lea rdx, [rax + rdx*2]	      9641	syntax.c	FUNCTION_148	FOR_1
0x400dee8	    0x488b05000000	            mov rax, qword [0x0400deef] 	      9641	syntax.c	FUNCTION_148	FOR_1
0x400deef	    0x488dacd070ff	           lea rbp, [rax + rdx*8 - 0x90]	      9641	syntax.c	FUNCTION_148	FOR_1
0x400def7	            0xeb26	                           jmp 0x400df1f	      9641	syntax.c	FUNCTION_148	FOR_1
0x400def9	     0xf1f80000000	                         nop dword [rax]	      9641	syntax.c	FUNCTION_148	FOR_1
0x400df00	        0x488b7500	                    mov rsi, qword [rbp]	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x400df04	          0x4885f6	                           test rsi, rsi	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x400df07	            0x740c	                            je 0x400df15	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x400df09	          0x4889e7	                            mov rdi, rsp	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400df0c	      0xe800000000	                          call 0x400df11	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400df11	            0x85c0	                           test eax, eax	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400df13	            0x7413	                            je 0x400df28	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400df15	    0x4881ed980000	                           sub rbp, 0x98	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400df1c	          0x4489e3	                           mov ebx, r12d	      9668	syntax.c	FUNCTION_150
0x400df1f	          0x4189dc	                           mov r12d, ebx	      9641	syntax.c	FUNCTION_148	FOR_1
0x400df22	        0x4183ec01	                             sub r12d, 1	      9641	syntax.c	FUNCTION_148	FOR_1
0x400df26	            0x79d8	                           jns 0x400df00	      9641	syntax.c	FUNCTION_148	FOR_1
0x400df28	            0x31c0	                            xor eax, eax	      9669	syntax.c	FUNCTION_150	CALL_1
0x400df2a	            0x85db	                           test ebx, ebx	      9669	syntax.c	FUNCTION_150	CALL_1
0x400df2c	           0xf9fc0	                                 setg al	      9669	syntax.c	FUNCTION_150	CALL_1
0x400df2f	    0x488b8c24c800	            mov rcx, qword [rsp + 0xc8] 	      9670	syntax.c	FUNCTION_150
0x400df37	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      9670	syntax.c	FUNCTION_150
0x400df40	            0x750c	                           jne 0x400df4e	      9670	syntax.c	FUNCTION_150
0x400df42	    0x4881c4d00000	                           add rsp, 0xd0	      9670	syntax.c	FUNCTION_150
0x400df49	              0x5b	                                 pop rbx	      9670	syntax.c	FUNCTION_150
0x400df4a	              0x5d	                                 pop rbp	      9670	syntax.c	FUNCTION_150
0x400df4b	            0x415c	                                 pop r12	      9670	syntax.c	FUNCTION_150
0x400df4d	              0xc3	                                     ret	      9670	syntax.c	FUNCTION_150
0x400df4e	      0xe800000000	                          call 0x400df53	      9670	syntax.c	FUNCTION_150
combine_stl_hlt	DO,0:functions,0:IF,10:WHILE,0:CALL,4:ELSE,1:SWITCH,0:FOR,0	171
0x40053b0	            0x4156	                                push r14	      9975	syntax.c	FUNCTION_162
0x40053b2	            0x4155	                                push r13	      9975	syntax.c	FUNCTION_162
0x40053b4	            0x85d2	                           test edx, edx	      9978	syntax.c	FUNCTION_162	IF_1
0x40053b6	            0x4154	                                push r12	      9975	syntax.c	FUNCTION_162
0x40053b8	              0x55	                                push rbp	      9975	syntax.c	FUNCTION_162
0x40053b9	          0x4963e8	                         movsxd rbp, r8d	      9975	syntax.c	FUNCTION_162
0x40053bc	        0x448d2429	                   lea r12d, [rcx + rbp]	      9980	syntax.c	FUNCTION_162	IF_1	CALL_1
0x40053c0	              0x53	                                push rbx	      9975	syntax.c	FUNCTION_162
0x40053c1	          0x4189fd	                           mov r13d, edi	      9975	syntax.c	FUNCTION_162
0x40053c4	            0x89f3	                            mov ebx, esi	      9975	syntax.c	FUNCTION_162
0x40053c6	    0x4c8b35000000	            mov r14, qword [0x040053cd] 	      9976	syntax.c	FUNCTION_162
0x40053cd	          0x4963c4	                        movsxd rax, r12d	      9980	syntax.c	FUNCTION_162	IF_1	CALL_1
0x40053d0	     0xf85c2010000	                           jne 0x4005598	      9978	syntax.c	FUNCTION_162	IF_1
0x40053d6	        0x488d14c0	                  lea rdx, [rax + rax*8]	      9980	syntax.c	FUNCTION_162	IF_1	CALL_1
0x40053da	          0x4d63c9	                          movsxd r9, r9d	      9981	syntax.c	FUNCTION_162	IF_1
0x40053dd	        0x488d0450	                  lea rax, [rax + rdx*2]	      9980	syntax.c	FUNCTION_162	IF_1	CALL_1
0x40053e1	        0x498d14c6	                  lea rdx, [r14 + rax*8]	      9980	syntax.c	FUNCTION_162	IF_1	CALL_1
0x40053e5	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_173	CALL_6
0x40053e7	        0x488d7a08	                      lea rdi, [rdx + 8]	        90	string3.h	FUNCTION_173	CALL_6
0x40053eb	          0x4889d1	                            mov rcx, rdx	        90	string3.h	FUNCTION_173	CALL_6
0x40053ee	    0x48c702000000	                      mov qword [rdx], 0	        90	string3.h	FUNCTION_173	CALL_6
0x40053f5	    0x48c782900000	               mov qword [rdx + 0x90], 0	        90	string3.h	FUNCTION_173	CALL_6
0x4005400	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_173	CALL_6
0x4005404	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_173	CALL_6
0x4005407	    0x81c198000000	                           add ecx, 0x98	        90	string3.h	FUNCTION_173	CALL_6
0x400540d	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_173	CALL_6
0x4005410	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_173	CALL_6
0x4005413	          0x4889d0	                            mov rax, rdx	        90	string3.h	FUNCTION_173	CALL_6
0x4005416	    0x468b148d0000	                  mov r10d, dword [r9*4]	      9981	syntax.c	FUNCTION_162	IF_1
0x400541e	        0x44895214	            mov dword [rdx + 0x14], r10d	      9981	syntax.c	FUNCTION_162	IF_1
0x4005422	    0x468b048d0000	                   mov r8d, dword [r9*4]	      9982	syntax.c	FUNCTION_162	IF_1
0x400542a	        0x4489422c	             mov dword [rdx + 0x2c], r8d	      9982	syntax.c	FUNCTION_162	IF_1
0x400542e	    0x428b0c8d0000	                   mov ecx, dword [r9*4]	      9984	syntax.c	FUNCTION_162	IF_1
0x4005436	          0x894a6c	             mov dword [rdx + 0x6c], ecx	      9984	syntax.c	FUNCTION_162	IF_1
0x4005439	          0x4963fd	                        movsxd rdi, r13d	      9994	syntax.c	FUNCTION_162
0x400543c	          0x4863f3	                         movsxd rsi, ebx	      9994	syntax.c	FUNCTION_162
0x400543f	    0xc78088000000	               mov dword [rax + 0x88], 0	      9991	syntax.c	FUNCTION_162
0x4005449	        0x488d14ff	                  lea rdx, [rdi + rdi*8]	      9994	syntax.c	FUNCTION_162
0x400544d	        0x488d1457	                  lea rdx, [rdi + rdx*2]	      9994	syntax.c	FUNCTION_162
0x4005451	    0x498dbcd668ff	           lea rdi, [r14 + rdx*8 - 0x98]	      9994	syntax.c	FUNCTION_162
0x4005459	        0x488d14f6	                  lea rdx, [rsi + rsi*8]	      9994	syntax.c	FUNCTION_162
0x400545d	        0x488d1456	                  lea rdx, [rsi + rdx*2]	      9994	syntax.c	FUNCTION_162
0x4005461	          0x8b7714	            mov esi, dword [rdi + 0x14] 	      9993	syntax.c	FUNCTION_162
0x4005464	    0x498d94d668ff	           lea rdx, [r14 + rdx*8 - 0x98]	      9994	syntax.c	FUNCTION_162
0x400546c	          0x337214	             xor esi, dword [rdx + 0x14]	      9993	syntax.c	FUNCTION_162
0x400546f	          0x4131f2	                           xor r10d, esi	      9993	syntax.c	FUNCTION_162
0x4005472	        0x488b7718	            mov rsi, qword [rdi + 0x18] 	      9995	syntax.c	FUNCTION_162	IF_2
0x4005476	        0x483b7218	            cmp rsi, qword [rdx + 0x18] 	      9995	syntax.c	FUNCTION_162	IF_2
0x400547a	        0x44895014	            mov dword [rax + 0x14], r10d	      9993	syntax.c	FUNCTION_162
0x400547e	            0x7404	                            je 0x4005484	      9995	syntax.c	FUNCTION_162	IF_2
0x4005480	        0x48897018	             mov qword [rax + 0x18], rsi	      9996	syntax.c	FUNCTION_162	IF_2
0x4005484	        0x488b7720	            mov rsi, qword [rdi + 0x20] 	      9997	syntax.c	FUNCTION_162	IF_3
0x4005488	        0x483b7220	            cmp rsi, qword [rdx + 0x20] 	      9997	syntax.c	FUNCTION_162	IF_3
0x400548c	            0x7404	                            je 0x4005492	      9997	syntax.c	FUNCTION_162	IF_3
0x400548e	        0x48897020	             mov qword [rax + 0x20], rsi	      9998	syntax.c	FUNCTION_162	IF_3
0x4005492	          0x8b772c	            mov esi, dword [rdi + 0x2c] 	      9999	syntax.c	FUNCTION_162
0x4005495	          0x33722c	             xor esi, dword [rdx + 0x2c]	      9999	syntax.c	FUNCTION_162
0x4005498	          0x4131f0	                            xor r8d, esi	      9999	syntax.c	FUNCTION_162
0x400549b	          0x8b7734	            mov esi, dword [rdi + 0x34] 	     10001	syntax.c	FUNCTION_162	IF_4
0x400549e	          0x3b7234	            cmp esi, dword [rdx + 0x34] 	     10001	syntax.c	FUNCTION_162	IF_4
0x40054a1	        0x4489402c	             mov dword [rax + 0x2c], r8d	      9999	syntax.c	FUNCTION_162
0x40054a5	            0x7403	                            je 0x40054aa	     10001	syntax.c	FUNCTION_162	IF_4
0x40054a7	          0x897034	             mov dword [rax + 0x34], esi	     10002	syntax.c	FUNCTION_162	IF_4
0x40054aa	          0x8b7738	            mov esi, dword [rdi + 0x38] 	     10003	syntax.c	FUNCTION_162	IF_5
0x40054ad	          0x3b7238	            cmp esi, dword [rdx + 0x38] 	     10003	syntax.c	FUNCTION_162	IF_5
0x40054b0	            0x7403	                            je 0x40054b5	     10003	syntax.c	FUNCTION_162	IF_5
0x40054b2	          0x897038	             mov dword [rax + 0x38], esi	     10004	syntax.c	FUNCTION_162	IF_5
0x40054b5	          0x8b776c	            mov esi, dword [rdi + 0x6c] 	     10006	syntax.c	FUNCTION_162
0x40054b8	          0x33726c	             xor esi, dword [rdx + 0x6c]	     10006	syntax.c	FUNCTION_162
0x40054bb	            0x31f1	                            xor ecx, esi	     10006	syntax.c	FUNCTION_162
0x40054bd	          0x89486c	             mov dword [rax + 0x6c], ecx	     10006	syntax.c	FUNCTION_162
0x40054c0	        0x488b4f40	            mov rcx, qword [rdi + 0x40] 	     10010	syntax.c	FUNCTION_162	IF_6
0x40054c4	        0x483b4a40	            cmp rcx, qword [rdx + 0x40] 	     10010	syntax.c	FUNCTION_162	IF_6
0x40054c8	            0x7404	                            je 0x40054ce	     10010	syntax.c	FUNCTION_162	IF_6
0x40054ca	        0x48894840	             mov qword [rax + 0x40], rcx	     10011	syntax.c	FUNCTION_162	IF_6
0x40054ce	        0x488b4f48	            mov rcx, qword [rdi + 0x48] 	     10012	syntax.c	FUNCTION_162	IF_7
0x40054d2	        0x483b4a48	            cmp rcx, qword [rdx + 0x48] 	     10012	syntax.c	FUNCTION_162	IF_7
0x40054d6	            0x7404	                            je 0x40054dc	     10012	syntax.c	FUNCTION_162	IF_7
0x40054d8	        0x48894848	             mov qword [rax + 0x48], rcx	     10013	syntax.c	FUNCTION_162	IF_7
0x40054dc	        0x488b4f50	            mov rcx, qword [rdi + 0x50] 	     10014	syntax.c	FUNCTION_162	IF_8
0x40054e0	        0x483b4a50	            cmp rcx, qword [rdx + 0x50] 	     10014	syntax.c	FUNCTION_162	IF_8
0x40054e4	            0x7404	                            je 0x40054ea	     10014	syntax.c	FUNCTION_162	IF_8
0x40054e6	        0x48894850	             mov qword [rax + 0x50], rcx	     10015	syntax.c	FUNCTION_162	IF_8
0x40054ea	        0x488b4f58	            mov rcx, qword [rdi + 0x58] 	     10016	syntax.c	FUNCTION_162	IF_9
0x40054ee	        0x483b4a58	            cmp rcx, qword [rdx + 0x58] 	     10016	syntax.c	FUNCTION_162	IF_9
0x40054f2	            0x7404	                            je 0x40054f8	     10016	syntax.c	FUNCTION_162	IF_9
0x40054f4	        0x48894858	             mov qword [rax + 0x58], rcx	     10017	syntax.c	FUNCTION_162	IF_9
0x40054f8	      0x418d5c2401	                      lea ebx, [r12 + 1]	     10023	syntax.c	FUNCTION_162
0x40054fd	          0x4489e7	                           mov edi, r12d	     10024	syntax.c	FUNCTION_162	CALL_3
0x4005500	    0x891d00000000	            mov dword [0x04005506], ebx 	     10023	syntax.c	FUNCTION_162
0x4005506	      0xe805dcffff	                    call sym.set_hl_attr	     10024	syntax.c	FUNCTION_162	CALL_3
0x400550b	      0x488b442430	            mov rax, qword [rsp + 0x30] 	     10025	syntax.c	FUNCTION_162	CALL_4
0x4005510	            0x85db	                           test ebx, ebx	      9879	syntax.c	FUNCTION_159	IF_1
0x4005512	    0x8b0d00000000	            mov ecx, dword [0x04005518] 	      9879	syntax.c	FUNCTION_159	IF_1
0x4005518	        0x488d3ca8	                  lea rdi, [rax + rbp*4]	     10025	syntax.c	FUNCTION_162	CALL_4
0x400551c	     0xf8ede000000	                           jle 0x4005600	      9879	syntax.c	FUNCTION_159	IF_1
0x4005522	            0x39cb	                            cmp ebx, ecx	      9879	syntax.c	FUNCTION_159	IF_1
0x4005524	    0x488b35000000	            mov rsi, qword [0x0400552b] 	      9879	syntax.c	FUNCTION_159	IF_1
0x400552b	      0xb864000000	                           mov eax, 0x64	      9879	syntax.c	FUNCTION_159	IF_1
0x4005530	            0x7e1b	                           jle 0x400554d	      9879	syntax.c	FUNCTION_159	IF_1
0x4005532	      0xe9c9000000	                           jmp 0x4005600	      9879	syntax.c	FUNCTION_159	IF_1
0x4005537	    0x660f1f840000	                    nop word [rax + rax]	      9879	syntax.c	FUNCTION_159	IF_1
0x4005540	            0x85db	                           test ebx, ebx	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4005542	            0x742c	                            je 0x4005570	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4005544	          0x83e801	                              sub eax, 1	      9886	syntax.c	FUNCTION_159	FOR_1
0x4005547	     0xf84cb000000	                            je 0x4005618	      9886	syntax.c	FUNCTION_159	FOR_1
0x400554d	          0x4863db	                         movsxd rbx, ebx	      9888	syntax.c	FUNCTION_159	FOR_1
0x4005550	        0x488d14db	                  lea rdx, [rbx + rbx*8]	      9888	syntax.c	FUNCTION_159	FOR_1
0x4005554	        0x488d1453	                  lea rdx, [rbx + rdx*2]	      9888	syntax.c	FUNCTION_159	FOR_1
0x4005558	    0x488d94d668ff	           lea rdx, [rsi + rdx*8 - 0x98]	      9888	syntax.c	FUNCTION_159	FOR_1
0x4005560	    0x48639a880000	         movsxd rbx, dword [rdx + 0x88] 	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4005567	            0x39d9	                            cmp ecx, ebx	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4005569	            0x7dd5	                           jge 0x4005540	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x400556b	       0xf1f440000	                   nop dword [rax + rax]	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4005570	    0x8b0d00000000	            mov ecx, dword [0x04005576] 	      9826	syntax.c	FUNCTION_156	IF_1
0x4005576	            0x85c9	                           test ecx, ecx	      9826	syntax.c	FUNCTION_156	IF_1
0x4005578	            0x7576	                           jne 0x40055f0	      9826	syntax.c	FUNCTION_156	IF_1
0x400557a	    0x833d00000000	               cmp dword [0x04005581], 1	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x4005581	            0x7e55	                           jle 0x40055d8	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x4005583	          0x8b423c	            mov eax, dword [rdx + 0x3c] 	      9831	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x4005586	            0x8907	                    mov dword [rdi], eax	     10025	syntax.c	FUNCTION_162	CALL_4
0x4005588	              0x5b	                                 pop rbx	     10026	syntax.c	FUNCTION_162
0x4005589	              0x5d	                                 pop rbp	     10026	syntax.c	FUNCTION_162
0x400558a	            0x415c	                                 pop r12	     10026	syntax.c	FUNCTION_162
0x400558c	            0x415d	                                 pop r13	     10026	syntax.c	FUNCTION_162
0x400558e	            0x415e	                                 pop r14	     10026	syntax.c	FUNCTION_162
0x4005590	              0xc3	                                     ret	     10026	syntax.c	FUNCTION_162
0x4005591	     0xf1f80000000	                         nop dword [rax]	     10026	syntax.c	FUNCTION_162
0x4005598	        0x488d0cc0	                  lea rcx, [rax + rax*8]	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_2
0x400559c	          0x4863d2	                         movsxd rdx, edx	        59	string3.h	FUNCTION_171	CALL_3
0x400559f	        0x488d0448	                  lea rax, [rax + rcx*2]	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_2
0x40055a3	        0x4d8d0cc6	                   lea r9, [r14 + rax*8]	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_2
0x40055a7	        0x488d04d2	                  lea rax, [rdx + rdx*8]	        59	string3.h	FUNCTION_171	CALL_3
0x40055ab	        0x488d0442	                  lea rax, [rdx + rax*2]	        59	string3.h	FUNCTION_171	CALL_3
0x40055af	          0x4c89cf	                             mov rdi, r9	        59	string3.h	FUNCTION_171	CALL_3
0x40055b2	      0xba98000000	                           mov edx, 0x98	        59	string3.h	FUNCTION_171	CALL_3
0x40055b7	    0x498db4c668ff	           lea rsi, [r14 + rax*8 - 0x98]	        59	string3.h	FUNCTION_171	CALL_3
0x40055bf	      0xe800000000	                          call 0x40055c4	        59	string3.h	FUNCTION_171	CALL_3
0x40055c4	        0x448b5014	           mov r10d, dword [rax + 0x14] 	        59	string3.h	FUNCTION_171	CALL_3
0x40055c8	        0x448b402c	            mov r8d, dword [rax + 0x2c] 	        59	string3.h	FUNCTION_171	CALL_3
0x40055cc	          0x8b486c	            mov ecx, dword [rax + 0x6c] 	        59	string3.h	FUNCTION_171	CALL_3
0x40055cf	      0xe965feffff	                           jmp 0x4005439	        59	string3.h	FUNCTION_171	CALL_3
0x40055d4	         0xf1f4000	                         nop dword [rax]	        59	string3.h	FUNCTION_171	CALL_3
0x40055d8	    0x8b0500000000	            mov eax, dword [0x040055de] 	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x40055de	            0x85c0	                           test eax, eax	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x40055e0	            0x75a1	                           jne 0x4005583	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x40055e2	          0x8b4228	            mov eax, dword [rdx + 0x28] 	      9833	syntax.c	FUNCTION_156	ELSE_2
0x40055e5	            0x8907	                    mov dword [rdi], eax	     10025	syntax.c	FUNCTION_162	CALL_4
0x40055e7	              0x5b	                                 pop rbx	     10026	syntax.c	FUNCTION_162
0x40055e8	              0x5d	                                 pop rbp	     10026	syntax.c	FUNCTION_162
0x40055e9	            0x415c	                                 pop r12	     10026	syntax.c	FUNCTION_162
0x40055eb	            0x415d	                                 pop r13	     10026	syntax.c	FUNCTION_162
0x40055ed	            0x415e	                                 pop r14	     10026	syntax.c	FUNCTION_162
0x40055ef	              0xc3	                                     ret	     10026	syntax.c	FUNCTION_162
0x40055f0	          0x8b4268	            mov eax, dword [rdx + 0x68] 	      9827	syntax.c	FUNCTION_156	IF_1
0x40055f3	            0x8907	                    mov dword [rdi], eax	     10025	syntax.c	FUNCTION_162	CALL_4
0x40055f5	              0x5b	                                 pop rbx	     10026	syntax.c	FUNCTION_162
0x40055f6	              0x5d	                                 pop rbp	     10026	syntax.c	FUNCTION_162
0x40055f7	            0x415c	                                 pop r12	     10026	syntax.c	FUNCTION_162
0x40055f9	            0x415d	                                 pop r13	     10026	syntax.c	FUNCTION_162
0x40055fb	            0x415e	                                 pop r14	     10026	syntax.c	FUNCTION_162
0x40055fd	              0xc3	                                     ret	     10026	syntax.c	FUNCTION_162
0x40055fe	            0x6690	                                     nop	     10026	syntax.c	FUNCTION_162
0x4005600	    0x488b05000000	            mov rax, qword [0x04005607] 	     10026	syntax.c	FUNCTION_162
0x4005607	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	     10026	syntax.c	FUNCTION_162
0x400560e	      0xe95dffffff	                           jmp 0x4005570	     10026	syntax.c	FUNCTION_162
0x4005613	       0xf1f440000	                   nop dword [rax + rax]	     10026	syntax.c	FUNCTION_162
0x4005618	        0x488d04db	                  lea rax, [rbx + rbx*8]	     10026	syntax.c	FUNCTION_162
0x400561c	        0x488d0443	                  lea rax, [rbx + rax*2]	     10026	syntax.c	FUNCTION_162
0x4005620	    0x488d94c668ff	           lea rdx, [rsi + rax*8 - 0x98]	     10026	syntax.c	FUNCTION_162
0x4005628	      0xe943ffffff	                           jmp 0x4005570	     10026	syntax.c	FUNCTION_162
syn_stack_equal	DO,0:functions,0:IF,10:WHILE,0:CALL,2:ELSE,1:SWITCH,0:FOR,2	89
0x4000350	            0x4157	                                push r15	      1641	syntax.c	FUNCTION_21
0x4000352	            0x4156	                                push r14	      1641	syntax.c	FUNCTION_21
0x4000354	            0x4155	                                push r13	      1641	syntax.c	FUNCTION_21
0x4000356	            0x4154	                                push r12	      1641	syntax.c	FUNCTION_21
0x4000358	              0x55	                                push rbp	      1641	syntax.c	FUNCTION_21
0x4000359	              0x53	                                push rbx	      1641	syntax.c	FUNCTION_21
0x400035a	        0x4883ec08	                              sub rsp, 8	      1641	syntax.c	FUNCTION_21
0x400035e	    0x448bb7bc0000	           mov r14d, dword [rdi + 0xbc] 	      1647	syntax.c	FUNCTION_21	IF_1
0x4000365	    0x443b35000000	           cmp r14d, dword [0x0400036c] 	      1647	syntax.c	FUNCTION_21	IF_1
0x400036c	            0x7412	                            je 0x4000380	      1647	syntax.c	FUNCTION_21	IF_1
0x400036e	            0x31c0	                            xor eax, eax	      1696	syntax.c	FUNCTION_21	IF_1	IF_10
0x4000370	        0x4883c408	                              add rsp, 8	      1699	syntax.c	FUNCTION_21
0x4000374	              0x5b	                                 pop rbx	      1699	syntax.c	FUNCTION_21
0x4000375	              0x5d	                                 pop rbp	      1699	syntax.c	FUNCTION_21
0x4000376	            0x415c	                                 pop r12	      1699	syntax.c	FUNCTION_21
0x4000378	            0x415d	                                 pop r13	      1699	syntax.c	FUNCTION_21
0x400037a	            0x415e	                                 pop r14	      1699	syntax.c	FUNCTION_21
0x400037c	            0x415f	                                 pop r15	      1699	syntax.c	FUNCTION_21
0x400037e	              0xc3	                                     ret	      1699	syntax.c	FUNCTION_21
0x400037f	              0x90	                                     nop	      1699	syntax.c	FUNCTION_21
0x4000380	    0x488b05000000	            mov rax, qword [0x04000387] 	      1648	syntax.c	FUNCTION_21	IF_1
0x4000387	    0x483987c00000	            cmp qword [rdi + 0xc0], rax 	      1648	syntax.c	FUNCTION_21	IF_1
0x400038e	            0x75de	                           jne 0x400036e	      1648	syntax.c	FUNCTION_21	IF_1
0x4000390	        0x4183fe07	                             cmp r14d, 7	      1651	syntax.c	FUNCTION_21	IF_1	IF_2
0x4000394	        0x488d5710	                   lea rdx, [rdi + 0x10]	      1654	syntax.c	FUNCTION_21	IF_1	ELSE_1
0x4000398	     0xf8f02010000	                            jg 0x40004a0	      1651	syntax.c	FUNCTION_21	IF_1	IF_2
0x400039e	          0x4963c6	                        movsxd rax, r14d	      1651	syntax.c	FUNCTION_21	IF_1	IF_2
0x40003a1	        0x488d0c40	                  lea rcx, [rax + rax*2]	      1651	syntax.c	FUNCTION_21	IF_1	IF_2
0x40003a5	        0x4c8d2cc0	                  lea r13, [rax + rax*8]	      1651	syntax.c	FUNCTION_21	IF_1	IF_2
0x40003a9	        0x4c8d3cca	                  lea r15, [rdx + rcx*8]	      1651	syntax.c	FUNCTION_21	IF_1	IF_2
0x40003ad	        0x49c1e504	                              shl r13, 4	      1651	syntax.c	FUNCTION_21	IF_1	IF_2
0x40003b1	    0x4981ed900000	                           sub r13, 0x90	      1651	syntax.c	FUNCTION_21	IF_1	IF_2
0x40003b8	     0xf1f84000000	                   nop dword [rax + rax]	      1651	syntax.c	FUNCTION_21	IF_1	IF_2
0x40003c0	        0x4183ee01	                             sub r14d, 1	      1656	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1
0x40003c4	     0xf88df000000	                            js 0x40004a9	      1656	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1
0x40003ca	          0x4c89e8	                            mov rax, r13	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3
0x40003cd	    0x480305000000	             add rax, qword [0x040003d4]	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3
0x40003d4	            0x8b08	                    mov ecx, dword [rax]	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3
0x40003d6	        0x41394fe8	            cmp dword [r15 - 0x18], ecx 	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3
0x40003da	            0x7592	                           jne 0x400036e	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3
0x40003dc	        0x498b6ff8	                mov rbp, qword [r15 - 8]	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x40003e0	    0x4c8ba0880000	            mov r12, qword [rax + 0x88] 	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x40003e7	          0x4c39e5	                            cmp rbp, r12	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x40003ea	     0xf84a0000000	                            je 0x4000490	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x40003f0	          0x4885ed	                           test rbp, rbp	      1670	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	IF_5
0x40003f3	     0xf8475ffffff	                            je 0x400036e	      1670	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	IF_5
0x40003f9	          0x4d85e4	                           test r12, r12	      1670	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	IF_5
0x40003fc	     0xf846cffffff	                            je 0x400036e	      1670	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	IF_5
0x4000402	            0x31db	                            xor ebx, ebx	      1670	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	IF_5
0x4000404	            0xeb26	                           jmp 0x400042c	      1670	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	IF_5
0x4000406	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1670	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	IF_5
0x4000410	      0xe800000000	                          call 0x4000415	      1687	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_2
0x4000415	            0x85c0	                           test eax, eax	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x4000417	           0xf95c0	                                setne al	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x400041a	            0x84c0	                             test al, al	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x400041c	     0xf854cffffff	                           jne 0x400036e	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x4000422	        0x4883c308	                              add rbx, 8	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x4000426	        0x4883fb50	                           cmp rbx, 0x50	      1672	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2
0x400042a	            0x7464	                            je 0x4000490	      1672	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2
0x400042c	      0x488b7c1d08	         mov rdi, qword [rbp + rbx + 8] 	      1676	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6
0x4000431	      0x498b741c08	         mov rsi, qword [r12 + rbx + 8] 	      1676	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6
0x4000436	          0x4839f7	                            cmp rdi, rsi	      1676	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6
0x4000439	            0x74e7	                            je 0x4000422	      1676	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6
0x400043b	          0x4885f6	                           test rsi, rsi	      1682	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_7
0x400043e	     0xf842affffff	                            je 0x400036e	      1682	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_7
0x4000444	          0x4885ff	                           test rdi, rdi	      1682	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_7
0x4000447	     0xf8421ffffff	                            je 0x400036e	      1682	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_7
0x400044d	    0x488b05000000	            mov rax, qword [0x04000454] 	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x4000454	    0x488b15000000	            mov rdx, qword [0x0400045b] 	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x400045b	        0x4a630428	           movsxd rax, dword [rax + r13]	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x400045f	        0x488d0480	                  lea rax, [rax + rax*4]	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x4000463	        0x48c1e005	                              shl rax, 5	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x4000467	    0x480382700200	            add rax, qword [rdx + 0x270]	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x400046e	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x4000471	            0x85c0	                           test eax, eax	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x4000473	            0x749b	                            je 0x4000410	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x4000475	      0xbaffffff7f	                     mov edx, 0x7fffffff	      1685	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_1
0x400047a	      0xe800000000	                          call 0x400047f	      1685	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_1
0x400047f	            0x85c0	                           test eax, eax	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x4000481	           0xf95c0	                                setne al	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x4000484	            0xeb94	                           jmp 0x400041a	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x4000486	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x4000490	        0x4983ef18	                           sub r15, 0x18	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x4000494	    0x4981ed900000	                           sub r13, 0x90	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x400049b	      0xe920ffffff	                           jmp 0x40003c0	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x40004a0	        0x488b5720	            mov rdx, qword [rdi + 0x20] 	      1652	syntax.c	FUNCTION_21	IF_1	IF_2
0x40004a4	      0xe9f5feffff	                           jmp 0x400039e	      1652	syntax.c	FUNCTION_21	IF_1	IF_2
0x40004a9	      0xb801000000	                              mov eax, 1	      1696	syntax.c	FUNCTION_21	IF_1	IF_10
0x40004ae	      0xe9bdfeffff	                           jmp 0x4000370	      1696	syntax.c	FUNCTION_21	IF_1	IF_10
hl_combine_attr	DO,0:functions,0:IF,32:WHILE,0:CALL,14:ELSE,7:SWITCH,0:FOR,0	574
0x400cd00	            0x4157	                                push r15	      9018	syntax.c	FUNCTION_136
0x400cd02	            0x4156	                                push r14	      9018	syntax.c	FUNCTION_136
0x400cd04	            0x4155	                                push r13	      9018	syntax.c	FUNCTION_136
0x400cd06	            0x4154	                                push r12	      9018	syntax.c	FUNCTION_136
0x400cd08	              0x55	                                push rbp	      9018	syntax.c	FUNCTION_136
0x400cd09	              0x53	                                push rbx	      9018	syntax.c	FUNCTION_136
0x400cd0a	            0x89f3	                            mov ebx, esi	      9018	syntax.c	FUNCTION_136
0x400cd0c	        0x4883ec58	                           sub rsp, 0x58	      9018	syntax.c	FUNCTION_136
0x400cd10	    0x64488b042528	                mov rax, qword fs:[0x28]	      9018	syntax.c	FUNCTION_136
0x400cd19	      0x4889442448	             mov qword [rsp + 0x48], rax	      9018	syntax.c	FUNCTION_136
0x400cd1e	            0x31c0	                            xor eax, eax	      9018	syntax.c	FUNCTION_136
0x400cd20	            0x85ff	                           test edi, edi	      9023	syntax.c	FUNCTION_136	IF_1
0x400cd22	            0x7419	                            je 0x400cd3d	      9023	syntax.c	FUNCTION_136	IF_1
0x400cd24	    0x81ffff000000	                           cmp edi, 0xff	      9025	syntax.c	FUNCTION_136	IF_2
0x400cd2a	            0x7f3c	                            jg 0x400cd68	      9025	syntax.c	FUNCTION_136	IF_2
0x400cd2c	    0x81feff000000	                           cmp esi, 0xff	      9025	syntax.c	FUNCTION_136	IF_2
0x400cd32	            0x7f34	                            jg 0x400cd68	      9025	syntax.c	FUNCTION_136	IF_2
0x400cd34	        0x40f6c640	                          test sil, 0x40	      9026	syntax.c	FUNCTION_136	IF_2
0x400cd38	           0xf45fe	                         cmovne edi, esi	      9026	syntax.c	FUNCTION_136	IF_2
0x400cd3b	             0x9fb	                             or ebx, edi	      9026	syntax.c	FUNCTION_136	IF_2
0x400cd3d	            0x89d8	                            mov eax, ebx	      9152	syntax.c	FUNCTION_136
0x400cd3f	      0x488b5c2448	            mov rbx, qword [rsp + 0x48] 	      9152	syntax.c	FUNCTION_136
0x400cd44	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      9152	syntax.c	FUNCTION_136
0x400cd4d	     0xf85e3090000	                           jne 0x400d736	      9152	syntax.c	FUNCTION_136
0x400cd53	        0x4883c458	                           add rsp, 0x58	      9152	syntax.c	FUNCTION_136
0x400cd57	              0x5b	                                 pop rbx	      9152	syntax.c	FUNCTION_136
0x400cd58	              0x5d	                                 pop rbp	      9152	syntax.c	FUNCTION_136
0x400cd59	            0x415c	                                 pop r12	      9152	syntax.c	FUNCTION_136
0x400cd5b	            0x415d	                                 pop r13	      9152	syntax.c	FUNCTION_136
0x400cd5d	            0x415e	                                 pop r14	      9152	syntax.c	FUNCTION_136
0x400cd5f	            0x415f	                                 pop r15	      9152	syntax.c	FUNCTION_136
0x400cd61	              0xc3	                                     ret	      9152	syntax.c	FUNCTION_136
0x400cd62	    0x660f1f440000	                    nop word [rax + rax]	      9152	syntax.c	FUNCTION_136
0x400cd68	    0x448b0d000000	            mov r9d, dword [0x0400cd6f] 	      9028	syntax.c	FUNCTION_136	IF_3
0x400cd6f	          0x4585c9	                           test r9d, r9d	      9028	syntax.c	FUNCTION_136	IF_3
0x400cd72	     0xf8590000000	                           jne 0x400ce08	      9028	syntax.c	FUNCTION_136	IF_3
0x400cd78	    0x833d00000000	               cmp dword [0x0400cd7f], 1	      9071	syntax.c	FUNCTION_136	IF_14
0x400cd7f	     0xf8ef3040000	                           jle 0x400d278	      9071	syntax.c	FUNCTION_136	IF_14
0x400cd85	    0x81ffff000000	                           cmp edi, 0xff	      9073	syntax.c	FUNCTION_136	IF_14	IF_15
0x400cd8b	     0xf8f39030000	                            jg 0x400d0ca	      9073	syntax.c	FUNCTION_136	IF_14	IF_15
0x400cd91	    0x81ffff000000	                           cmp edi, 0xff	      9084	syntax.c	FUNCTION_136	IF_14	ELSE_3	IF_17
0x400cd97	    0x48c744242000	               mov qword [rsp + 0x20], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400cda0	    0x48c744242800	               mov qword [rsp + 0x28], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400cda9	    0x48c744244000	               mov qword [rsp + 0x40], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400cdb2	    0x48c744243899	mov qword [rsp + 0x38], 0xffffffffffffd499	      9081	syntax.c	FUNCTION_136	IF_14	ELSE_3
0x400cdbb	    0x48c744243099	mov qword [rsp + 0x30], 0xffffffffffffd499	      9082	syntax.c	FUNCTION_136	IF_14	ELSE_3
0x400cdc4	     0xf8e84040000	                           jle 0x400d24e	      9084	syntax.c	FUNCTION_136	IF_14	ELSE_3	IF_17
0x400cdca	    0x660f1f440000	                    nop word [rax + rax]	      9084	syntax.c	FUNCTION_136	IF_14	ELSE_3	IF_17
0x400cdd0	    0x81feff000000	                           cmp esi, 0xff	      9088	syntax.c	FUNCTION_136	IF_14	IF_18
0x400cdd6	     0xf8f4b030000	                            jg 0x400d127	      9088	syntax.c	FUNCTION_136	IF_14	IF_18
0x400cddc	        0x40f6c640	                          test sil, 0x40	      9089	syntax.c	FUNCTION_136	IF_14	IF_18
0x400cde0	     0xf855f040000	                           jne 0x400d245	      9089	syntax.c	FUNCTION_136	IF_14	IF_18
0x400cde6	       0xfb7542420	           movzx edx, word [rsp + 0x20] 	      9089	syntax.c	FUNCTION_136	IF_14	IF_18
0x400cdeb	            0x89f0	                            mov eax, esi	      9089	syntax.c	FUNCTION_136	IF_14	IF_18
0x400cded	             0x9d0	                             or eax, edx	      9089	syntax.c	FUNCTION_136	IF_14	IF_18
0x400cdef	      0x6689442420	               mov word [rsp + 0x20], ax	      9089	syntax.c	FUNCTION_136	IF_14	IF_18
0x400cdf4	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      9122	syntax.c	FUNCTION_136	IF_14	CALL_10
0x400cdf9	      0xe8826affff	    call sym.get_attr_entry.constprop.30	      9122	syntax.c	FUNCTION_136	IF_14	CALL_10
0x400cdfe	            0x89c3	                            mov ebx, eax	      9122	syntax.c	FUNCTION_136	IF_14	CALL_10
0x400ce00	      0xe938ffffff	                           jmp 0x400cd3d	      9122	syntax.c	FUNCTION_136	IF_14	CALL_10
0x400ce05	           0xf1f00	                         nop dword [rax]	      9122	syntax.c	FUNCTION_136	IF_14	CALL_10
0x400ce08	    0x81ffff000000	                           cmp edi, 0xff	      9030	syntax.c	FUNCTION_136	IF_3	IF_4
0x400ce0e	     0xf8efc000000	                           jle 0x400cf10	      9030	syntax.c	FUNCTION_136	IF_3	IF_4
0x400ce14	    0x8b0d00000000	            mov ecx, dword [0x0400ce1a] 	      9161	syntax.c	FUNCTION_137	IF_1
0x400ce1a	    0x8d8700ffffff	                  lea eax, [rdi - 0x100]	      9160	syntax.c	FUNCTION_137
0x400ce20	            0x39c1	                            cmp ecx, eax	      9161	syntax.c	FUNCTION_137	IF_1
0x400ce22	     0xf8eee000000	                           jle 0x400cf16	      9161	syntax.c	FUNCTION_137	IF_1
0x400ce28	            0x4898	                                    cdqe	      9163	syntax.c	FUNCTION_137
0x400ce2a	        0x488d1480	                  lea rdx, [rax + rax*4]	      9163	syntax.c	FUNCTION_137
0x400ce2e	    0x488b05000000	            mov rax, qword [0x0400ce35] 	      9163	syntax.c	FUNCTION_137
0x400ce35	        0x488d14d0	                  lea rdx, [rax + rdx*8]	      9163	syntax.c	FUNCTION_137
0x400ce39	          0x4885d2	                           test rdx, rdx	      9032	syntax.c	FUNCTION_136	IF_3	IF_5
0x400ce3c	     0xf84d4000000	                            je 0x400cf16	      9032	syntax.c	FUNCTION_136	IF_3	IF_5
0x400ce42	          0x488b02	                    mov rax, qword [rdx]	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x400ce45	      0x4889442420	             mov qword [rsp + 0x20], rax	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x400ce4a	        0x488b4208	                mov rax, qword [rdx + 8]	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x400ce4e	      0x4889442428	             mov qword [rsp + 0x28], rax	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x400ce53	        0x488b4210	            mov rax, qword [rdx + 0x10] 	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x400ce57	      0x4889442430	             mov qword [rsp + 0x30], rax	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x400ce5c	        0x488b4218	            mov rax, qword [rdx + 0x18] 	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x400ce60	      0x4889442438	             mov qword [rsp + 0x38], rax	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x400ce65	        0x488b4220	            mov rax, qword [rdx + 0x20] 	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x400ce69	      0x4889442440	             mov qword [rsp + 0x40], rax	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x400ce6e	    0x81feff000000	                           cmp esi, 0xff	      9044	syntax.c	FUNCTION_136	IF_3	IF_7
0x400ce74	     0xf8fe6000000	                            jg 0x400cf60	      9044	syntax.c	FUNCTION_136	IF_3	IF_7
0x400ce7a	        0x40f6c640	                          test sil, 0x40	      9045	syntax.c	FUNCTION_136	IF_3	IF_7
0x400ce7e	     0xf85b8030000	                           jne 0x400d23c	      9045	syntax.c	FUNCTION_136	IF_3	IF_7
0x400ce84	       0xfb7542420	           movzx edx, word [rsp + 0x20] 	      9045	syntax.c	FUNCTION_136	IF_3	IF_7
0x400ce89	            0x89f0	                            mov eax, esi	      9045	syntax.c	FUNCTION_136	IF_3	IF_7
0x400ce8b	             0x9d0	                             or eax, edx	      9045	syntax.c	FUNCTION_136	IF_3	IF_7
0x400ce8d	      0x6689442420	               mov word [rsp + 0x20], ax	      9045	syntax.c	FUNCTION_136	IF_3	IF_7
0x400ce92	            0x85c9	                           test ecx, ecx	      8803	syntax.c	FUNCTION_131	FOR_1
0x400ce94	    0xc70500000000	           mov dword [0x0400ce9e], 0x28 	      8797	syntax.c	FUNCTION_131
0x400ce9e	    0xc70500000000	               mov dword [0x0400cea8], 7	      8798	syntax.c	FUNCTION_131
0x400cea8	     0xf8efe010000	                           jle 0x400d0ac	      8803	syntax.c	FUNCTION_131	FOR_1
0x400ceae	       0xfb7742420	           movzx esi, word [rsp + 0x20] 	      8803	syntax.c	FUNCTION_131	FOR_1
0x400ceb3	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      8810	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400ceb8	            0x31d2	                            xor edx, edx	      8815	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400ceba	      0x4c8b442430	              mov r8, qword [rsp + 0x30]	      8811	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400cebf	      0x4c8b4c2438	              mov r9, qword [rsp + 0x38]	      8813	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400cec4	      0x4c8b542440	            mov r10, qword [rsp + 0x40] 	      8815	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400cec9	    0x488b05000000	            mov rax, qword [0x0400ced0] 	      8815	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400ced0	            0xeb15	                           jmp 0x400cee7	      8815	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400ced2	    0x660f1f440000	                    nop word [rax + rax]	      8815	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400ced8	          0x83c201	                              add edx, 1	      8803	syntax.c	FUNCTION_131	FOR_1
0x400cedb	        0x4883c028	                           add rax, 0x28	      8803	syntax.c	FUNCTION_131	FOR_1
0x400cedf	            0x39ca	                            cmp edx, ecx	      8803	syntax.c	FUNCTION_131	FOR_1
0x400cee1	     0xf8409010000	                            je 0x400cff0	      8803	syntax.c	FUNCTION_131	FOR_1
0x400cee7	          0x663930	                      cmp word [rax], si	      8806	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400ceea	            0x75ec	                           jne 0x400ced8	      8806	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400ceec	        0x483b7808	                cmp rdi, qword [rax + 8]	      8810	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400cef0	            0x75e6	                           jne 0x400ced8	      8810	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400cef2	        0x4c3b4010	              cmp r8, qword [rax + 0x10]	      8811	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400cef6	            0x75e0	                           jne 0x400ced8	      8811	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400cef8	        0x4c3b4818	              cmp r9, qword [rax + 0x18]	      8813	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400cefc	            0x75da	                           jne 0x400ced8	      8813	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400cefe	        0x4c3b5020	            cmp r10, qword [rax + 0x20] 	      8815	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400cf02	            0x75d4	                           jne 0x400ced8	      8815	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400cf04	    0x8d9a00010000	                  lea ebx, [rdx + 0x100]	      8915	syntax.c	FUNCTION_131
0x400cf0a	      0xe92efeffff	                           jmp 0x400cd3d	      8915	syntax.c	FUNCTION_131
0x400cf0f	              0x90	                                     nop	      8915	syntax.c	FUNCTION_131
0x400cf10	    0x8b0d00000000	            mov ecx, dword [0x0400cf16] 	      8915	syntax.c	FUNCTION_131
0x400cf16	    0x81ffff000000	                           cmp edi, 0xff	      9040	syntax.c	FUNCTION_136	IF_3	ELSE_1	IF_6
0x400cf1c	    0x48c744242000	               mov qword [rsp + 0x20], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400cf25	    0x48c744244000	               mov qword [rsp + 0x40], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400cf2e	    0x48c744242899	mov qword [rsp + 0x28], 0xffffffffffffd499	      9037	syntax.c	FUNCTION_136	IF_3	ELSE_1
0x400cf37	    0x48c744243099	mov qword [rsp + 0x30], 0xffffffffffffd499	      9038	syntax.c	FUNCTION_136	IF_3	ELSE_1
0x400cf40	    0x48c744243899	mov qword [rsp + 0x38], 0xffffffffffffd499	      9039	syntax.c	FUNCTION_136	IF_3	ELSE_1
0x400cf49	     0xf8f1fffffff	                            jg 0x400ce6e	      9040	syntax.c	FUNCTION_136	IF_3	ELSE_1	IF_6
0x400cf4f	      0x66897c2420	               mov word [rsp + 0x20], di	      9041	syntax.c	FUNCTION_136	IF_3	ELSE_1	IF_6
0x400cf54	      0xe915ffffff	                           jmp 0x400ce6e	      9041	syntax.c	FUNCTION_136	IF_3	ELSE_1	IF_6
0x400cf59	     0xf1f80000000	                         nop dword [rax]	      9041	syntax.c	FUNCTION_136	IF_3	ELSE_1	IF_6
0x400cf60	    0x8d8600ffffff	                  lea eax, [rsi - 0x100]	      9160	syntax.c	FUNCTION_137
0x400cf66	            0x39c8	                            cmp eax, ecx	      9161	syntax.c	FUNCTION_137	IF_1
0x400cf68	     0xf8d24ffffff	                           jge 0x400ce92	      9161	syntax.c	FUNCTION_137	IF_1
0x400cf6e	            0x4898	                                    cdqe	      9163	syntax.c	FUNCTION_137
0x400cf70	        0x488d1480	                  lea rdx, [rax + rax*4]	      9163	syntax.c	FUNCTION_137
0x400cf74	    0x488b05000000	            mov rax, qword [0x0400cf7b] 	      9163	syntax.c	FUNCTION_137
0x400cf7b	        0x488d04d0	                  lea rax, [rax + rdx*8]	      9163	syntax.c	FUNCTION_137
0x400cf7f	          0x4885c0	                           test rax, rax	      9049	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8
0x400cf82	     0xf840affffff	                            je 0x400ce92	      9049	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8
0x400cf88	           0xfb710	                   movzx edx, word [rax]	      9051	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8
0x400cf8b	          0xf6c240	                           test dl, 0x40	      9051	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8
0x400cf8e	            0x89d6	                            mov esi, edx	      9051	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8
0x400cf90	    0x660f44742420	             cmove si, word [rsp + 0x20]	      9051	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8
0x400cf96	             0x9f2	                             or edx, esi	      9051	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8
0x400cf98	      0x6689542420	               mov word [rsp + 0x20], dx	      9051	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8
0x400cf9d	        0x488b5008	                mov rdx, qword [rax + 8]	      9053	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_9
0x400cfa1	    0x4881fa99d4ff	             cmp rdx, 0xffffffffffffd499	      9053	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_9
0x400cfa8	            0x7405	                            je 0x400cfaf	      9053	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_9
0x400cfaa	      0x4889542428	             mov qword [rsp + 0x28], rdx	      9054	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_9
0x400cfaf	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      9055	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_10
0x400cfb3	    0x4881fa99d4ff	             cmp rdx, 0xffffffffffffd499	      9055	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_10
0x400cfba	            0x7405	                            je 0x400cfc1	      9055	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_10
0x400cfbc	      0x4889542430	             mov qword [rsp + 0x30], rdx	      9056	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_10
0x400cfc1	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      9057	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_11
0x400cfc5	    0x4881fa99d4ff	             cmp rdx, 0xffffffffffffd499	      9057	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_11
0x400cfcc	            0x7405	                            je 0x400cfd3	      9057	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_11
0x400cfce	      0x4889542438	             mov qword [rsp + 0x38], rdx	      9058	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_11
0x400cfd3	        0x488b4020	            mov rax, qword [rax + 0x20] 	      9059	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_12
0x400cfd7	          0x4885c0	                           test rax, rax	      9059	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_12
0x400cfda	     0xf84b2feffff	                            je 0x400ce92	      9059	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_12
0x400cfe0	      0x4889442440	             mov qword [rsp + 0x40], rax	      9060	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_12
0x400cfe5	      0xe9a8feffff	                           jmp 0x400ce92	      9060	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_12
0x400cfea	    0x660f1f440000	                    nop word [rax + rax]	      9060	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_12
0x400cff0	    0x81fafffe0000	                         cmp edx, 0xfeff	      8849	syntax.c	FUNCTION_131	IF_2
0x400cff6	     0xf8eb0000000	                           jle 0x400d0ac	      8849	syntax.c	FUNCTION_131	IF_2
0x400cffc	    0x448b05000000	            mov r8d, dword [0x0400d003] 	      8856	syntax.c	FUNCTION_131	IF_2	IF_3
0x400d003	          0x4585c0	                           test r8d, r8d	      8856	syntax.c	FUNCTION_131	IF_2	IF_3
0x400d006	     0xf854c020000	                           jne 0x400d258	      8856	syntax.c	FUNCTION_131	IF_2	IF_3
0x400d00c	      0xbf00000000	                              mov edi, 0	      8994	syntax.c	FUNCTION_135	CALL_1
0x400d011	    0xc70500000000	               mov dword [0x0400d01b], 1	      8861	syntax.c	FUNCTION_131	IF_2
0x400d01b	            0x31ed	                            xor ebp, ebp	      8996	syntax.c	FUNCTION_135	FOR_1
0x400d01d	      0xe800000000	                          call 0x400d022	      8994	syntax.c	FUNCTION_135	CALL_1
0x400d022	    0x8b3d00000000	            mov edi, dword [0x0400d028] 	      8996	syntax.c	FUNCTION_135	FOR_1
0x400d028	            0x31db	                            xor ebx, ebx	      8996	syntax.c	FUNCTION_135	FOR_1
0x400d02a	            0x85ff	                           test edi, edi	      8996	syntax.c	FUNCTION_135	FOR_1
0x400d02c	            0x7e2f	                           jle 0x400d05d	      8996	syntax.c	FUNCTION_135	FOR_1
0x400d02e	            0x6690	                                     nop	      8996	syntax.c	FUNCTION_135	FOR_1
0x400d030	          0x4989ec	                            mov r12, rbp	      8998	syntax.c	FUNCTION_135	FOR_1
0x400d033	    0x4c0325000000	             add r12, qword [0x0400d03a]	      8998	syntax.c	FUNCTION_135	FOR_1
0x400d03a	          0x83c301	                              add ebx, 1	      8996	syntax.c	FUNCTION_135	FOR_1
0x400d03d	        0x4883c528	                           add rbp, 0x28	      8996	syntax.c	FUNCTION_135	FOR_1
0x400d041	      0x498b7c2408	                mov rdi, qword [r12 + 8]	      8999	syntax.c	FUNCTION_135	FOR_1	CALL_2
0x400d046	      0xe800000000	                          call 0x400d04b	      8999	syntax.c	FUNCTION_135	FOR_1	CALL_2
0x400d04b	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	      9000	syntax.c	FUNCTION_135	FOR_1	CALL_3
0x400d050	      0xe800000000	                          call 0x400d055	      9000	syntax.c	FUNCTION_135	FOR_1	CALL_3
0x400d055	    0x3b1d00000000	            cmp ebx, dword [0x0400d05b] 	      8996	syntax.c	FUNCTION_135	FOR_1
0x400d05b	            0x7cd3	                            jl 0x400d030	      8996	syntax.c	FUNCTION_135	FOR_1
0x400d05d	      0xbf00000000	                              mov edi, 0	      9002	syntax.c	FUNCTION_135	CALL_4
0x400d062	            0x31db	                            xor ebx, ebx	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x400d064	      0xe800000000	                          call 0x400d069	      9002	syntax.c	FUNCTION_135	CALL_4
0x400d069	      0xbf00000000	                              mov edi, 0	      9003	syntax.c	FUNCTION_135	CALL_5
0x400d06e	      0xe800000000	                          call 0x400d073	      9003	syntax.c	FUNCTION_135	CALL_5
0x400d073	    0x8b3500000000	            mov esi, dword [0x0400d079] 	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x400d079	    0xc70500000000	           mov dword [0x0400d083], 0x32 	      8865	syntax.c	FUNCTION_131	IF_2
0x400d083	            0x85f6	                           test esi, esi	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x400d085	            0x7e1b	                           jle 0x400d0a2	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x400d087	    0x660f1f840000	                    nop word [rax + rax]	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x400d090	            0x89df	                            mov edi, ebx	      8868	syntax.c	FUNCTION_131	IF_2	CALL_6
0x400d092	          0x83c301	                              add ebx, 1	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x400d095	      0xe87660ffff	                    call sym.set_hl_attr	      8868	syntax.c	FUNCTION_131	IF_2	CALL_6
0x400d09a	    0x3b1d00000000	            cmp ebx, dword [0x0400d0a0] 	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x400d0a0	            0x7cee	                            jl 0x400d090	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x400d0a2	    0xc70500000000	               mov dword [0x0400d0ac], 0	      8870	syntax.c	FUNCTION_131	IF_2
0x400d0ac	      0xbe01000000	                              mov esi, 1	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x400d0b1	      0xbf00000000	                              mov edi, 0	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x400d0b6	      0xe800000000	                          call 0x400d0bb	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x400d0bb	            0x85c0	                           test eax, eax	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x400d0bd	     0xf85f6000000	                           jne 0x400d1b9	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x400d0c3	            0x31db	                            xor ebx, ebx	      8877	syntax.c	FUNCTION_131	IF_4
0x400d0c5	      0xe973fcffff	                           jmp 0x400cd3d	      8877	syntax.c	FUNCTION_131	IF_4
0x400d0ca	    0x8d8700ffffff	                  lea eax, [rdi - 0x100]	      9204	syntax.c	FUNCTION_140
0x400d0d0	    0x3b0500000000	            cmp eax, dword [0x0400d0d6] 	      9205	syntax.c	FUNCTION_140	IF_1
0x400d0d6	     0xf8db5fcffff	                           jge 0x400cd91	      9205	syntax.c	FUNCTION_140	IF_1
0x400d0dc	            0x4898	                                    cdqe	      9207	syntax.c	FUNCTION_140
0x400d0de	        0x488d1480	                  lea rdx, [rax + rax*4]	      9207	syntax.c	FUNCTION_140
0x400d0e2	    0x488b05000000	            mov rax, qword [0x0400d0e9] 	      9207	syntax.c	FUNCTION_140
0x400d0e9	        0x488d14d0	                  lea rdx, [rax + rdx*8]	      9207	syntax.c	FUNCTION_140
0x400d0ed	          0x4885d2	                           test rdx, rdx	      9075	syntax.c	FUNCTION_136	IF_14	IF_16
0x400d0f0	     0xf849bfcffff	                            je 0x400cd91	      9075	syntax.c	FUNCTION_136	IF_14	IF_16
0x400d0f6	          0x488b02	                    mov rax, qword [rdx]	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x400d0f9	      0x4889442420	             mov qword [rsp + 0x20], rax	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x400d0fe	        0x488b4208	                mov rax, qword [rdx + 8]	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x400d102	      0x4889442428	             mov qword [rsp + 0x28], rax	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x400d107	        0x488b4210	            mov rax, qword [rdx + 0x10] 	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x400d10b	      0x4889442430	             mov qword [rsp + 0x30], rax	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x400d110	        0x488b4218	            mov rax, qword [rdx + 0x18] 	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x400d114	      0x4889442438	             mov qword [rsp + 0x38], rax	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x400d119	        0x488b4220	            mov rax, qword [rdx + 0x20] 	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x400d11d	      0x4889442440	             mov qword [rsp + 0x40], rax	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x400d122	      0xe9a9fcffff	                           jmp 0x400cdd0	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x400d127	    0x8d8600ffffff	                  lea eax, [rsi - 0x100]	      9204	syntax.c	FUNCTION_140
0x400d12d	    0x3b0500000000	            cmp eax, dword [0x0400d133] 	      9205	syntax.c	FUNCTION_140	IF_1
0x400d133	     0xf8dbbfcffff	                           jge 0x400cdf4	      9205	syntax.c	FUNCTION_140	IF_1
0x400d139	            0x4898	                                    cdqe	      9207	syntax.c	FUNCTION_140
0x400d13b	        0x488d1480	                  lea rdx, [rax + rax*4]	      9207	syntax.c	FUNCTION_140
0x400d13f	    0x488b05000000	            mov rax, qword [0x0400d146] 	      9207	syntax.c	FUNCTION_140
0x400d146	        0x488d04d0	                  lea rax, [rax + rdx*8]	      9207	syntax.c	FUNCTION_140
0x400d14a	          0x4885c0	                           test rax, rax	      9093	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19
0x400d14d	     0xf84a1fcffff	                            je 0x400cdf4	      9093	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19
0x400d153	           0xfb710	                   movzx edx, word [rax]	      9095	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19
0x400d156	          0xf6c240	                           test dl, 0x40	      9095	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19
0x400d159	            0x89d1	                            mov ecx, edx	      9095	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19
0x400d15b	    0x660f444c2420	             cmove cx, word [rsp + 0x20]	      9095	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19
0x400d161	             0x9ca	                             or edx, ecx	      9095	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19
0x400d163	      0x6689542420	               mov word [rsp + 0x20], dx	      9095	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19
0x400d168	         0xfb75008	               movzx edx, word [rax + 8]	      9097	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_20
0x400d16c	          0x6685d2	                             test dx, dx	      9097	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_20
0x400d16f	            0x7405	                            je 0x400d176	      9097	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_20
0x400d171	      0x6689542428	               mov word [rsp + 0x28], dx	      9098	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_20
0x400d176	         0xfb7500a	            movzx edx, word [rax + 0xa] 	      9099	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_21
0x400d17a	          0x6685d2	                             test dx, dx	      9099	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_21
0x400d17d	            0x7405	                            je 0x400d184	      9099	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_21
0x400d17f	      0x668954242a	               mov word [rsp + 0x2a], dx	      9100	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_21
0x400d184	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      9104	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_8
0x400d188	    0x488d8a672b00	                 lea rcx, [rdx + 0x2b67]	      9104	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_8
0x400d18f	        0x4883f901	                              cmp rcx, 1	      9104	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_8
0x400d193	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      9105	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_9
0x400d197	     0xf86c9030000	                           jbe 0x400d566	      9104	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_8
0x400d19d	    0x4881f999d4ff	             cmp rcx, 0xffffffffffffd499	      9116	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_26
0x400d1a4	      0x4889542430	             mov qword [rsp + 0x30], rdx	      9115	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_25
0x400d1a9	     0xf8445fcffff	                            je 0x400cdf4	      9116	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_26
0x400d1af	      0x48894c2438	             mov qword [rsp + 0x38], rcx	      9117	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_26
0x400d1b4	      0xe93bfcffff	                           jmp 0x400cdf4	      9117	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_26
0x400d1b9	    0x486305000000	         movsxd rax, dword [0x0400d1c0] 	      8879	syntax.c	FUNCTION_131
0x400d1c0	        0x488d1480	                  lea rdx, [rax + rax*4]	      8879	syntax.c	FUNCTION_131
0x400d1c4	    0x488b05000000	            mov rax, qword [0x0400d1cb] 	      8879	syntax.c	FUNCTION_131
0x400d1cb	        0x488d04d0	                  lea rax, [rax + rdx*8]	      8879	syntax.c	FUNCTION_131
0x400d1cf	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400d1d6	       0xfb7542420	           movzx edx, word [rsp + 0x20] 	      8881	syntax.c	FUNCTION_131
0x400d1db	    0x48c740080000	                  mov qword [rax + 8], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400d1e3	    0x48c740100000	               mov qword [rax + 0x10], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400d1eb	    0x48c740180000	               mov qword [rax + 0x18], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400d1f3	    0x48c740200000	               mov qword [rax + 0x20], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400d1fb	          0x668910	                      mov word [rax], dx	      8881	syntax.c	FUNCTION_131
0x400d1fe	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      8885	syntax.c	FUNCTION_131	IF_5
0x400d203	        0x48895008	                mov qword [rax + 8], rdx	      8885	syntax.c	FUNCTION_131	IF_5
0x400d207	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      8886	syntax.c	FUNCTION_131	IF_5
0x400d20c	        0x48895010	             mov qword [rax + 0x10], rdx	      8886	syntax.c	FUNCTION_131	IF_5
0x400d210	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      8887	syntax.c	FUNCTION_131	IF_5
0x400d215	        0x48895018	             mov qword [rax + 0x18], rdx	      8887	syntax.c	FUNCTION_131	IF_5
0x400d219	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	      8888	syntax.c	FUNCTION_131	IF_5
0x400d21e	        0x48895020	             mov qword [rax + 0x20], rdx	      8888	syntax.c	FUNCTION_131	IF_5
0x400d222	    0x8b1500000000	            mov edx, dword [0x0400d228] 	      8914	syntax.c	FUNCTION_131
0x400d228	          0x8d4201	                      lea eax, [rdx + 1]	      8914	syntax.c	FUNCTION_131
0x400d22b	    0x8d9a00010000	                  lea ebx, [rdx + 0x100]	      8915	syntax.c	FUNCTION_131
0x400d231	    0x890500000000	            mov dword [0x0400d237], eax 	      8914	syntax.c	FUNCTION_131
0x400d237	      0xe901fbffff	                           jmp 0x400cd3d	      8914	syntax.c	FUNCTION_131
0x400d23c	            0x89f2	                            mov edx, esi	      9045	syntax.c	FUNCTION_136	IF_3	IF_7
0x400d23e	            0x89f0	                            mov eax, esi	      9045	syntax.c	FUNCTION_136	IF_3	IF_7
0x400d240	      0xe946fcffff	                           jmp 0x400ce8b	      9045	syntax.c	FUNCTION_136	IF_3	IF_7
0x400d245	            0x89f2	                            mov edx, esi	      9089	syntax.c	FUNCTION_136	IF_14	IF_18
0x400d247	            0x89f0	                            mov eax, esi	      9089	syntax.c	FUNCTION_136	IF_14	IF_18
0x400d249	      0xe99ffbffff	                           jmp 0x400cded	      9089	syntax.c	FUNCTION_136	IF_14	IF_18
0x400d24e	      0x66897c2420	               mov word [rsp + 0x20], di	      9085	syntax.c	FUNCTION_136	IF_14	ELSE_3	IF_17
0x400d253	      0xe978fbffff	                           jmp 0x400cdd0	      9085	syntax.c	FUNCTION_136	IF_14	ELSE_3	IF_17
0x400d258	      0xba05000000	                              mov edx, 5	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x400d25d	      0xbe00000000	                              mov esi, 0	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x400d262	            0x31ff	                            xor edi, edi	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x400d264	      0xe800000000	                          call 0x400d269	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x400d269	          0x4889c7	                            mov rdi, rax	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x400d26c	            0x31db	                            xor ebx, ebx	      8859	syntax.c	FUNCTION_131	IF_2	IF_3
0x400d26e	      0xe800000000	                          call 0x400d273	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x400d273	      0xe9c5faffff	                           jmp 0x400cd3d	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x400d278	    0x8b1d00000000	            mov ebx, dword [0x0400d27e] 	      9071	syntax.c	FUNCTION_136	IF_14
0x400d27e	            0x85db	                           test ebx, ebx	      9071	syntax.c	FUNCTION_136	IF_14
0x400d280	     0xf85fffaffff	                           jne 0x400cd85	      9071	syntax.c	FUNCTION_136	IF_14
0x400d286	    0x81ffff000000	                           cmp edi, 0xff	      9125	syntax.c	FUNCTION_136	IF_27
0x400d28c	     0xf8e5b030000	                           jle 0x400d5ed	      9125	syntax.c	FUNCTION_136	IF_27
0x400d292	    0x448b2d000000	           mov r13d, dword [0x0400d299] 	      9196	syntax.c	FUNCTION_139	IF_1
0x400d299	    0x8d8700ffffff	                  lea eax, [rdi - 0x100]	      9195	syntax.c	FUNCTION_139
0x400d29f	          0x4439e8	                           cmp eax, r13d	      9196	syntax.c	FUNCTION_139	IF_1
0x400d2a2	     0xf8c51030000	                            jl 0x400d5f9	      9196	syntax.c	FUNCTION_139	IF_1
0x400d2a8	    0x81ffff000000	                           cmp edi, 0xff	      9132	syntax.c	FUNCTION_136	ELSE_6	IF_29
0x400d2ae	    0x48c744242000	               mov qword [rsp + 0x20], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400d2b7	    0x48c744242800	               mov qword [rsp + 0x28], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400d2c0	    0x48c744243000	               mov qword [rsp + 0x30], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400d2c9	    0x48c744243800	               mov qword [rsp + 0x38], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400d2d2	    0x48c744244000	               mov qword [rsp + 0x40], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400d2db	            0x7f05	                            jg 0x400d2e2	      9132	syntax.c	FUNCTION_136	ELSE_6	IF_29
0x400d2dd	      0x66897c2420	               mov word [rsp + 0x20], di	      9133	syntax.c	FUNCTION_136	ELSE_6	IF_29
0x400d2e2	    0x81feff000000	                           cmp esi, 0xff	      9136	syntax.c	FUNCTION_136	IF_30
0x400d2e8	     0xf8fa2020000	                            jg 0x400d590	      9136	syntax.c	FUNCTION_136	IF_30
0x400d2ee	        0x40f6c640	                          test sil, 0x40	      9137	syntax.c	FUNCTION_136	IF_30
0x400d2f2	     0xf854c030000	                           jne 0x400d644	      9137	syntax.c	FUNCTION_136	IF_30
0x400d2f8	       0xfb74c2420	           movzx ecx, word [rsp + 0x20] 	      9137	syntax.c	FUNCTION_136	IF_30
0x400d2fd	            0x89f0	                            mov eax, esi	      9137	syntax.c	FUNCTION_136	IF_30
0x400d2ff	             0x9c1	                             or ecx, eax	      9137	syntax.c	FUNCTION_136	IF_30
0x400d301	      0x66894c2420	               mov word [rsp + 0x20], cx	      9137	syntax.c	FUNCTION_136	IF_30
0x400d306	          0x4585ed	                         test r13d, r13d	      8803	syntax.c	FUNCTION_131	FOR_1
0x400d309	    0xc70500000000	           mov dword [0x0400d313], 0x28 	      8797	syntax.c	FUNCTION_131
0x400d313	    0xc70500000000	               mov dword [0x0400d31d], 7	      8798	syntax.c	FUNCTION_131
0x400d31d	     0xf8ea9010000	                           jle 0x400d4cc	      8803	syntax.c	FUNCTION_131	FOR_1
0x400d323	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d328	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d32d	    0x488b2d000000	            mov rbp, qword [0x0400d334] 	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d334	    0x440fb77c2420	          movzx r15d, word [rsp + 0x20] 	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d33a	          0x4885c0	                           test rax, rax	      8824	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d33d	      0x4889442408	                mov qword [rsp + 8], rax	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d342	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d347	        0x410f95c4	                              setne r12b	      8824	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d34b	          0x4885c9	                           test rcx, rcx	      8829	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d34e	       0xf95442417	                 setne byte [rsp + 0x17]	      8829	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d353	          0x4531f6	                          xor r14d, r14d	      8829	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d356	          0x4885c0	                           test rax, rax	      8829	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d359	     0xf8435030000	                            je 0x400d694	      8829	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d35f	          0x4885c9	                           test rcx, rcx	      8829	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d362	            0x751d	                           jne 0x400d381	      8829	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d364	      0xe99e000000	                           jmp 0x400d407	      8829	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d369	     0xf1f80000000	                         nop dword [rax]	      8829	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d370	        0x4183c601	                             add r14d, 1	      8803	syntax.c	FUNCTION_131	FOR_1
0x400d374	        0x4883c528	                           add rbp, 0x28	      8803	syntax.c	FUNCTION_131	FOR_1
0x400d378	          0x4539ee	                          cmp r14d, r13d	      8803	syntax.c	FUNCTION_131	FOR_1
0x400d37b	     0xf848f000000	                            je 0x400d410	      8803	syntax.c	FUNCTION_131	FOR_1
0x400d381	      0x6644397d00	                    cmp word [rbp], r15w	      8806	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d386	            0x75e8	                           jne 0x400d370	      8806	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d388	        0x488b7508	                mov rsi, qword [rbp + 8]	      8824	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d38c	          0x4885f6	                           test rsi, rsi	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d38f	           0xf94c0	                                 sete al	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d392	          0x4138c4	                            cmp r12b, al	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d395	            0x74d9	                            je 0x400d370	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d397	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      8826	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0x400d39c	      0xe800000000	                          call 0x400d3a1	      8826	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0x400d3a1	            0x85c0	                           test eax, eax	      8826	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0x400d3a3	            0x75cb	                           jne 0x400d370	      8826	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0x400d3a5	        0x488b7510	            mov rsi, qword [rbp + 0x10] 	      8829	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d3a9	          0x4885f6	                           test rsi, rsi	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d3ac	           0xf94c0	                                 sete al	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d3af	        0x38442417	               cmp byte [rsp + 0x17], al	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d3b3	            0x74bb	                            je 0x400d370	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d3b5	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      8831	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0x400d3ba	      0xe800000000	                          call 0x400d3bf	      8831	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0x400d3bf	            0x85c0	                           test eax, eax	      8831	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0x400d3c1	            0x75ad	                           jne 0x400d370	      8831	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0x400d3c3	    0x418d9e000100	                  lea ebx, [r14 + 0x100]	      8846	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d3ca	      0xe96ef9ffff	                           jmp 0x400cd3d	      8846	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d3cf	        0x488b7508	                mov rsi, qword [rbp + 8]	      8824	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d3d3	          0x4885f6	                           test rsi, rsi	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d3d6	           0xf94c0	                                 sete al	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d3d9	          0x4138c4	                            cmp r12b, al	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d3dc	            0x741c	                            je 0x400d3fa	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d3de	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      8826	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0x400d3e3	      0xe800000000	                          call 0x400d3e8	      8826	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0x400d3e8	            0x85c0	                           test eax, eax	      8826	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0x400d3ea	            0x750e	                           jne 0x400d3fa	      8826	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0x400d3ec	      0x48837d1000	               cmp qword [rbp + 0x10], 0	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d3f1	           0xf94c0	                                 sete al	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d3f4	        0x38442417	               cmp byte [rsp + 0x17], al	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d3f8	            0x75c9	                           jne 0x400d3c3	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d3fa	        0x4183c601	                             add r14d, 1	      8803	syntax.c	FUNCTION_131	FOR_1
0x400d3fe	        0x4883c528	                           add rbp, 0x28	      8803	syntax.c	FUNCTION_131	FOR_1
0x400d402	          0x4539ee	                          cmp r14d, r13d	      8803	syntax.c	FUNCTION_131	FOR_1
0x400d405	            0x7409	                            je 0x400d410	      8803	syntax.c	FUNCTION_131	FOR_1
0x400d407	      0x6644397d00	                    cmp word [rbp], r15w	      8806	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d40c	            0x75ec	                           jne 0x400d3fa	      8806	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d40e	            0xebbf	                           jmp 0x400d3cf	      8806	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d410	    0x4181fdfffe00	                        cmp r13d, 0xfeff	      8849	syntax.c	FUNCTION_131	IF_2
0x400d417	     0xf8eaf000000	                           jle 0x400d4cc	      8849	syntax.c	FUNCTION_131	IF_2
0x400d41d	    0x8b0d00000000	            mov ecx, dword [0x0400d423] 	      8856	syntax.c	FUNCTION_131	IF_2	IF_3
0x400d423	            0x85c9	                           test ecx, ecx	      8856	syntax.c	FUNCTION_131	IF_2	IF_3
0x400d425	     0xf8522020000	                           jne 0x400d64d	      8856	syntax.c	FUNCTION_131	IF_2	IF_3
0x400d42b	      0xbf00000000	                              mov edi, 0	      8994	syntax.c	FUNCTION_135	CALL_1
0x400d430	    0xc70500000000	               mov dword [0x0400d43a], 1	      8861	syntax.c	FUNCTION_131	IF_2
0x400d43a	            0x31ed	                            xor ebp, ebp	      8996	syntax.c	FUNCTION_135	FOR_1
0x400d43c	      0xe800000000	                          call 0x400d441	      8994	syntax.c	FUNCTION_135	CALL_1
0x400d441	    0x8b1500000000	            mov edx, dword [0x0400d447] 	      8996	syntax.c	FUNCTION_135	FOR_1
0x400d447	            0x31db	                            xor ebx, ebx	      8996	syntax.c	FUNCTION_135	FOR_1
0x400d449	            0x85d2	                           test edx, edx	      8996	syntax.c	FUNCTION_135	FOR_1
0x400d44b	            0x7e30	                           jle 0x400d47d	      8996	syntax.c	FUNCTION_135	FOR_1
0x400d44d	           0xf1f00	                         nop dword [rax]	      8996	syntax.c	FUNCTION_135	FOR_1
0x400d450	          0x4989ec	                            mov r12, rbp	      8998	syntax.c	FUNCTION_135	FOR_1
0x400d453	    0x4c0325000000	             add r12, qword [0x0400d45a]	      8998	syntax.c	FUNCTION_135	FOR_1
0x400d45a	          0x83c301	                              add ebx, 1	      8996	syntax.c	FUNCTION_135	FOR_1
0x400d45d	        0x4883c528	                           add rbp, 0x28	      8996	syntax.c	FUNCTION_135	FOR_1
0x400d461	      0x498b7c2408	                mov rdi, qword [r12 + 8]	      8999	syntax.c	FUNCTION_135	FOR_1	CALL_2
0x400d466	      0xe800000000	                          call 0x400d46b	      8999	syntax.c	FUNCTION_135	FOR_1	CALL_2
0x400d46b	      0x498b7c2410	            mov rdi, qword [r12 + 0x10] 	      9000	syntax.c	FUNCTION_135	FOR_1	CALL_3
0x400d470	      0xe800000000	                          call 0x400d475	      9000	syntax.c	FUNCTION_135	FOR_1	CALL_3
0x400d475	    0x3b1d00000000	            cmp ebx, dword [0x0400d47b] 	      8996	syntax.c	FUNCTION_135	FOR_1
0x400d47b	            0x7cd3	                            jl 0x400d450	      8996	syntax.c	FUNCTION_135	FOR_1
0x400d47d	      0xbf00000000	                              mov edi, 0	      9002	syntax.c	FUNCTION_135	CALL_4
0x400d482	            0x31db	                            xor ebx, ebx	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x400d484	      0xe800000000	                          call 0x400d489	      9002	syntax.c	FUNCTION_135	CALL_4
0x400d489	      0xbf00000000	                              mov edi, 0	      9003	syntax.c	FUNCTION_135	CALL_5
0x400d48e	      0xe800000000	                          call 0x400d493	      9003	syntax.c	FUNCTION_135	CALL_5
0x400d493	    0x8b0500000000	            mov eax, dword [0x0400d499] 	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x400d499	    0xc70500000000	           mov dword [0x0400d4a3], 0x32 	      8865	syntax.c	FUNCTION_131	IF_2
0x400d4a3	            0x85c0	                           test eax, eax	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x400d4a5	            0x7e1b	                           jle 0x400d4c2	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x400d4a7	    0x660f1f840000	                    nop word [rax + rax]	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x400d4b0	            0x89df	                            mov edi, ebx	      8868	syntax.c	FUNCTION_131	IF_2	CALL_6
0x400d4b2	          0x83c301	                              add ebx, 1	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x400d4b5	      0xe8565cffff	                    call sym.set_hl_attr	      8868	syntax.c	FUNCTION_131	IF_2	CALL_6
0x400d4ba	    0x3b1d00000000	            cmp ebx, dword [0x0400d4c0] 	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x400d4c0	            0x7cee	                            jl 0x400d4b0	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x400d4c2	    0xc70500000000	               mov dword [0x0400d4cc], 0	      8870	syntax.c	FUNCTION_131	IF_2
0x400d4cc	      0xbe01000000	                              mov esi, 1	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x400d4d1	      0xbf00000000	                              mov edi, 0	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x400d4d6	      0xe800000000	                          call 0x400d4db	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x400d4db	            0x85c0	                           test eax, eax	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x400d4dd	     0xf84e0fbffff	                            je 0x400d0c3	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x400d4e3	    0x486305000000	         movsxd rax, dword [0x0400d4ea] 	      8879	syntax.c	FUNCTION_131
0x400d4ea	        0x488d1480	                  lea rdx, [rax + rax*4]	      8879	syntax.c	FUNCTION_131
0x400d4ee	    0x488b05000000	            mov rax, qword [0x0400d4f5] 	      8879	syntax.c	FUNCTION_131
0x400d4f5	        0x488d1cd0	                  lea rbx, [rax + rdx*8]	      8879	syntax.c	FUNCTION_131
0x400d4f9	    0x48c703000000	                      mov qword [rbx], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400d500	       0xfb7442420	           movzx eax, word [rsp + 0x20] 	      8881	syntax.c	FUNCTION_131
0x400d505	    0x48c743080000	                  mov qword [rbx + 8], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400d50d	    0x48c743100000	               mov qword [rbx + 0x10], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400d515	    0x48c743180000	               mov qword [rbx + 0x18], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400d51d	    0x48c743200000	               mov qword [rbx + 0x20], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400d525	          0x668903	                      mov word [rbx], ax	      8881	syntax.c	FUNCTION_131
0x400d528	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      8896	syntax.c	FUNCTION_131	IF_6	IF_7
0x400d52d	          0x4885ff	                           test rdi, rdi	      8896	syntax.c	FUNCTION_131	IF_6	IF_7
0x400d530	            0x7409	                            je 0x400d53b	      8896	syntax.c	FUNCTION_131	IF_6	IF_7
0x400d532	      0xe800000000	                          call 0x400d537	      8899	syntax.c	FUNCTION_131	IF_6	CALL_9
0x400d537	        0x48894308	                mov qword [rbx + 8], rax	      8899	syntax.c	FUNCTION_131	IF_6	CALL_9
0x400d53b	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      8900	syntax.c	FUNCTION_131	IF_6	IF_8
0x400d540	          0x4885ff	                           test rdi, rdi	      8900	syntax.c	FUNCTION_131	IF_6	IF_8
0x400d543	     0xf84e0010000	                            je 0x400d729	      8900	syntax.c	FUNCTION_131	IF_6	IF_8
0x400d549	      0xe800000000	                          call 0x400d54e	      8903	syntax.c	FUNCTION_131	IF_6	CALL_10
0x400d54e	        0x48894310	             mov qword [rbx + 0x10], rax	      8903	syntax.c	FUNCTION_131	IF_6	CALL_10
0x400d552	    0x8b1500000000	            mov edx, dword [0x0400d558] 	      8914	syntax.c	FUNCTION_131
0x400d558	          0x8d4201	                      lea eax, [rdx + 1]	      8914	syntax.c	FUNCTION_131
0x400d55b	    0x890500000000	            mov dword [0x0400d561], eax 	      8914	syntax.c	FUNCTION_131
0x400d561	      0xe99ef9ffff	                           jmp 0x400cf04	      8914	syntax.c	FUNCTION_131
0x400d566	    0x488db1672b00	                 lea rsi, [rcx + 0x2b67]	      9105	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_9
0x400d56d	        0x4883fe01	                              cmp rsi, 1	      9105	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_9
0x400d571	     0xf86f4000000	                           jbe 0x400d66b	      9105	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_9
0x400d577	    0x4881fa99d4ff	             cmp rdx, 0xffffffffffffd499	      9114	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_25
0x400d57e	     0xf842bfcffff	                            je 0x400d1af	      9114	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_25
0x400d584	      0xe914fcffff	                           jmp 0x400d19d	      9114	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_25
0x400d589	     0xf1f80000000	                         nop dword [rax]	      9114	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_25
0x400d590	    0x8d8600ffffff	                  lea eax, [rsi - 0x100]	      9195	syntax.c	FUNCTION_139
0x400d596	          0x4439e8	                           cmp eax, r13d	      9196	syntax.c	FUNCTION_139	IF_1
0x400d599	     0xf8d67fdffff	                           jge 0x400d306	      9196	syntax.c	FUNCTION_139	IF_1
0x400d59f	            0x4898	                                    cdqe	      9198	syntax.c	FUNCTION_139
0x400d5a1	        0x488d0c80	                  lea rcx, [rax + rax*4]	      9198	syntax.c	FUNCTION_139
0x400d5a5	    0x488b05000000	            mov rax, qword [0x0400d5ac] 	      9198	syntax.c	FUNCTION_139
0x400d5ac	        0x488d0cc8	                  lea rcx, [rax + rcx*8]	      9198	syntax.c	FUNCTION_139
0x400d5b0	          0x4885c9	                           test rcx, rcx	      9141	syntax.c	FUNCTION_136	ELSE_7	IF_31
0x400d5b3	     0xf844dfdffff	                            je 0x400d306	      9141	syntax.c	FUNCTION_136	ELSE_7	IF_31
0x400d5b9	           0xfb701	                   movzx eax, word [rcx]	      9143	syntax.c	FUNCTION_136	ELSE_7	IF_31
0x400d5bc	            0xa840	                           test al, 0x40	      9143	syntax.c	FUNCTION_136	ELSE_7	IF_31
0x400d5be	            0x89c6	                            mov esi, eax	      9143	syntax.c	FUNCTION_136	ELSE_7	IF_31
0x400d5c0	    0x660f44742420	             cmove si, word [rsp + 0x20]	      9143	syntax.c	FUNCTION_136	ELSE_7	IF_31
0x400d5c6	             0x9f0	                             or eax, esi	      9143	syntax.c	FUNCTION_136	ELSE_7	IF_31
0x400d5c8	      0x6689442420	               mov word [rsp + 0x20], ax	      9143	syntax.c	FUNCTION_136	ELSE_7	IF_31
0x400d5cd	        0x488b4108	                mov rax, qword [rcx + 8]	      9144	syntax.c	FUNCTION_136	ELSE_7	IF_31	IF_32
0x400d5d1	          0x4885c0	                           test rax, rax	      9144	syntax.c	FUNCTION_136	ELSE_7	IF_31	IF_32
0x400d5d4	     0xf842cfdffff	                            je 0x400d306	      9144	syntax.c	FUNCTION_136	ELSE_7	IF_31	IF_32
0x400d5da	      0x4889442428	             mov qword [rsp + 0x28], rax	      9146	syntax.c	FUNCTION_136	ELSE_7	IF_31	IF_32
0x400d5df	        0x488b4110	            mov rax, qword [rcx + 0x10] 	      9147	syntax.c	FUNCTION_136	ELSE_7	IF_31	IF_32
0x400d5e3	      0x4889442430	             mov qword [rsp + 0x30], rax	      9147	syntax.c	FUNCTION_136	ELSE_7	IF_31	IF_32
0x400d5e8	      0xe919fdffff	                           jmp 0x400d306	      9147	syntax.c	FUNCTION_136	ELSE_7	IF_31	IF_32
0x400d5ed	    0x448b2d000000	           mov r13d, dword [0x0400d5f4] 	      9147	syntax.c	FUNCTION_136	ELSE_7	IF_31	IF_32
0x400d5f4	      0xe9affcffff	                           jmp 0x400d2a8	      9147	syntax.c	FUNCTION_136	ELSE_7	IF_31	IF_32
0x400d5f9	            0x4898	                                    cdqe	      9198	syntax.c	FUNCTION_139
0x400d5fb	        0x488d0c80	                  lea rcx, [rax + rax*4]	      9198	syntax.c	FUNCTION_139
0x400d5ff	    0x488b05000000	            mov rax, qword [0x0400d606] 	      9198	syntax.c	FUNCTION_139
0x400d606	        0x488d04c8	                  lea rax, [rax + rcx*8]	      9198	syntax.c	FUNCTION_139
0x400d60a	          0x4885c0	                           test rax, rax	      9127	syntax.c	FUNCTION_136	IF_28
0x400d60d	     0xf8495fcffff	                            je 0x400d2a8	      9127	syntax.c	FUNCTION_136	IF_28
0x400d613	          0x488b08	                    mov rcx, qword [rax]	      9128	syntax.c	FUNCTION_136	IF_28
0x400d616	      0x48894c2420	             mov qword [rsp + 0x20], rcx	      9128	syntax.c	FUNCTION_136	IF_28
0x400d61b	        0x488b4808	                mov rcx, qword [rax + 8]	      9128	syntax.c	FUNCTION_136	IF_28
0x400d61f	      0x48894c2428	             mov qword [rsp + 0x28], rcx	      9128	syntax.c	FUNCTION_136	IF_28
0x400d624	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      9128	syntax.c	FUNCTION_136	IF_28
0x400d628	      0x48894c2430	             mov qword [rsp + 0x30], rcx	      9128	syntax.c	FUNCTION_136	IF_28
0x400d62d	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      9128	syntax.c	FUNCTION_136	IF_28
0x400d631	      0x48894c2438	             mov qword [rsp + 0x38], rcx	      9128	syntax.c	FUNCTION_136	IF_28
0x400d636	        0x488b4020	            mov rax, qword [rax + 0x20] 	      9128	syntax.c	FUNCTION_136	IF_28
0x400d63a	      0x4889442440	             mov qword [rsp + 0x40], rax	      9128	syntax.c	FUNCTION_136	IF_28
0x400d63f	      0xe99efcffff	                           jmp 0x400d2e2	      9128	syntax.c	FUNCTION_136	IF_28
0x400d644	            0x89f1	                            mov ecx, esi	      9137	syntax.c	FUNCTION_136	IF_30
0x400d646	            0x89f0	                            mov eax, esi	      9137	syntax.c	FUNCTION_136	IF_30
0x400d648	      0xe9b2fcffff	                           jmp 0x400d2ff	      9137	syntax.c	FUNCTION_136	IF_30
0x400d64d	            0x31ff	                            xor edi, edi	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x400d64f	      0xba05000000	                              mov edx, 5	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x400d654	      0xbe00000000	                              mov esi, 0	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x400d659	      0xe800000000	                          call 0x400d65e	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x400d65e	          0x4889c7	                            mov rdi, rax	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x400d661	      0xe800000000	                          call 0x400d666	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x400d666	      0xe9d2f6ffff	                           jmp 0x400cd3d	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x400d66b	      0x6683780800	                   cmp word [rax + 8], 0	      9107	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_23
0x400d670	            0x7409	                            je 0x400d67b	      9107	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_23
0x400d672	    0x48c74424309a	mov qword [rsp + 0x30], 0xffffffffffffd49a	      9108	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_23
0x400d67b	      0x6683780a00	                 cmp word [rax + 0xa], 0	      9109	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_24
0x400d680	     0xf846ef7ffff	                            je 0x400cdf4	      9109	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_24
0x400d686	    0x48c74424389a	mov qword [rsp + 0x38], 0xffffffffffffd49a	      9110	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_24
0x400d68f	      0xe960f7ffff	                           jmp 0x400cdf4	      9110	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_24
0x400d694	    0x48837c241800	               cmp qword [rsp + 0x18], 0	      9110	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_24
0x400d69a	            0x751d	                           jne 0x400d6b9	      9110	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_24
0x400d69c	      0xe97f000000	                           jmp 0x400d720	      9110	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_24
0x400d6a1	     0xf1f80000000	                         nop dword [rax]	      9110	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_24
0x400d6a8	        0x4183c601	                             add r14d, 1	      8803	syntax.c	FUNCTION_131	FOR_1
0x400d6ac	        0x4883c528	                           add rbp, 0x28	      8803	syntax.c	FUNCTION_131	FOR_1
0x400d6b0	          0x4539ee	                          cmp r14d, r13d	      8803	syntax.c	FUNCTION_131	FOR_1
0x400d6b3	     0xf8457fdffff	                            je 0x400d410	      8803	syntax.c	FUNCTION_131	FOR_1
0x400d6b9	      0x6644397d00	                    cmp word [rbp], r15w	      8806	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d6be	            0x75e8	                           jne 0x400d6a8	      8806	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d6c0	      0x48837d0800	                  cmp qword [rbp + 8], 0	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d6c5	           0xf94c0	                                 sete al	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d6c8	          0x4438e0	                            cmp al, r12b	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d6cb	            0x74db	                            je 0x400d6a8	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d6cd	        0x488b7510	            mov rsi, qword [rbp + 0x10] 	      8829	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d6d1	          0x4885f6	                           test rsi, rsi	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d6d4	           0xf94c0	                                 sete al	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d6d7	        0x3a442417	               cmp al, byte [rsp + 0x17]	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d6db	            0x74cb	                            je 0x400d6a8	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d6dd	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      8831	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0x400d6e2	      0xe800000000	                          call 0x400d6e7	      8831	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0x400d6e7	            0x85c0	                           test eax, eax	      8831	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0x400d6e9	            0x75bd	                           jne 0x400d6a8	      8831	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0x400d6eb	      0xe9d3fcffff	                           jmp 0x400d3c3	      8831	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0x400d6f0	      0x48837d0800	                  cmp qword [rbp + 8], 0	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d6f5	           0xf94c0	                                 sete al	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d6f8	          0x4138c4	                            cmp r12b, al	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d6fb	            0x7412	                            je 0x400d70f	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d6fd	      0x48837d1000	               cmp qword [rbp + 0x10], 0	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d702	           0xf94c0	                                 sete al	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d705	        0x38442417	               cmp byte [rsp + 0x17], al	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d709	     0xf85b4fcffff	                           jne 0x400d3c3	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d70f	        0x4183c601	                             add r14d, 1	      8803	syntax.c	FUNCTION_131	FOR_1
0x400d713	        0x4883c528	                           add rbp, 0x28	      8803	syntax.c	FUNCTION_131	FOR_1
0x400d717	          0x4539ee	                          cmp r14d, r13d	      8803	syntax.c	FUNCTION_131	FOR_1
0x400d71a	     0xf84f0fcffff	                            je 0x400d410	      8803	syntax.c	FUNCTION_131	FOR_1
0x400d720	      0x6644397d00	                    cmp word [rbp], r15w	      8806	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d725	            0x75e8	                           jne 0x400d70f	      8806	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d727	            0xebc7	                           jmp 0x400d6f0	      8806	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400d729	    0x48c743100000	               mov qword [rbx + 0x10], 0	      8901	syntax.c	FUNCTION_131	IF_6	IF_8
0x400d731	      0xe91cfeffff	                           jmp 0x400d552	      8901	syntax.c	FUNCTION_131	IF_6	IF_8
0x400d736	      0xe800000000	                          call 0x400d73b	      9152	syntax.c	FUNCTION_136
highlight_has_attr	DO,0:functions,0:IF,4:WHILE,0:CALL,0:ELSE,2:SWITCH,0:FOR,0	28
0x400d870	            0x85ff	                           test edi, edi	      9334	syntax.c	FUNCTION_143	IF_1
0x400d872	            0x7e54	                           jle 0x400d8c8	      9334	syntax.c	FUNCTION_143	IF_1
0x400d874	    0x3b3d00000000	            cmp edi, dword [0x0400d87a] 	      9334	syntax.c	FUNCTION_143	IF_1
0x400d87a	            0x7f4c	                            jg 0x400d8c8	      9334	syntax.c	FUNCTION_143	IF_1
0x400d87c	          0x4863ff	                         movsxd rdi, edi	      9339	syntax.c	FUNCTION_143	IF_2
0x400d87f	    0x488b0d000000	            mov rcx, qword [0x0400d886] 	      9339	syntax.c	FUNCTION_143	IF_2
0x400d886	          0x83fa67	                           cmp edx, 0x67	      9338	syntax.c	FUNCTION_143	IF_2
0x400d889	        0x488d04ff	                  lea rax, [rdi + rdi*8]	      9339	syntax.c	FUNCTION_143	IF_2
0x400d88d	        0x488d0447	                  lea rax, [rdi + rax*2]	      9339	syntax.c	FUNCTION_143	IF_2
0x400d891	        0x488d04c1	                  lea rax, [rcx + rax*8]	      9339	syntax.c	FUNCTION_143	IF_2
0x400d895	            0x7421	                            je 0x400d8b8	      9338	syntax.c	FUNCTION_143	IF_2
0x400d897	          0x83fa63	                           cmp edx, 0x63	      9342	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x400d89a	            0x7424	                            je 0x400d8c0	      9342	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x400d89c	    0x8b807cffffff	             mov eax, dword [rax - 0x84]	      9345	syntax.c	FUNCTION_143	ELSE_2
0x400d8a2	            0x85f0	                           test eax, esi	      9348	syntax.c	FUNCTION_143	IF_4
0x400d8a4	      0xba00000000	                              mov edx, 0	      9348	syntax.c	FUNCTION_143	IF_4
0x400d8a9	      0xb800000000	                              mov eax, 0	      9348	syntax.c	FUNCTION_143	IF_4
0x400d8ae	        0x480f44c2	                          cmove rax, rdx	      9348	syntax.c	FUNCTION_143	IF_4
0x400d8b2	              0xc3	                                     ret	      9348	syntax.c	FUNCTION_143	IF_4
0x400d8b3	       0xf1f440000	                   nop dword [rax + rax]	      9348	syntax.c	FUNCTION_143	IF_4
0x400d8b8	          0x8b40d4	             mov eax, dword [rax - 0x2c]	      9339	syntax.c	FUNCTION_143	IF_2
0x400d8bb	            0xebe5	                           jmp 0x400d8a2	      9339	syntax.c	FUNCTION_143	IF_2
0x400d8bd	           0xf1f00	                         nop dword [rax]	      9339	syntax.c	FUNCTION_143	IF_2
0x400d8c0	          0x8b4094	             mov eax, dword [rax - 0x6c]	      9343	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x400d8c3	            0xebdd	                           jmp 0x400d8a2	      9343	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x400d8c5	           0xf1f00	                         nop dword [rax]	      9343	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x400d8c8	            0x31c0	                            xor eax, eax	      9349	syntax.c	FUNCTION_143
0x400d8ca	              0xc3	                                     ret	      9350	syntax.c	FUNCTION_143
put_pattern	DO,0:functions,0:IF,9:WHILE,0:CALL,18:ELSE,2:SWITCH,0:FOR,2	115
0x4001240	            0x4156	                                push r14	      4270	syntax.c	FUNCTION_70
0x4001242	            0x4155	                                push r13	      4270	syntax.c	FUNCTION_70
0x4001244	          0x4989fd	                            mov r13, rdi	      4270	syntax.c	FUNCTION_70
0x4001247	            0x4154	                                push r12	      4270	syntax.c	FUNCTION_70
0x4001249	              0x55	                                push rbp	      4270	syntax.c	FUNCTION_70
0x400124a	          0x4189f4	                           mov r12d, esi	      4270	syntax.c	FUNCTION_70
0x400124d	              0x53	                                push rbx	      4270	syntax.c	FUNCTION_70
0x400124e	         0xfbf4202	               movsx eax, word [rdx + 2]	      4278	syntax.c	FUNCTION_70	IF_1
0x4001252	          0x4889d5	                            mov rbp, rdx	      4270	syntax.c	FUNCTION_70
0x4001255	    0x3b0500000000	            cmp eax, dword [0x0400125b] 	      4278	syntax.c	FUNCTION_70	IF_1
0x400125b	            0x89cb	                            mov ebx, ecx	      4270	syntax.c	FUNCTION_70
0x400125d	            0x7454	                            je 0x40012b3	      4278	syntax.c	FUNCTION_70	IF_1
0x400125f	            0x89ce	                            mov esi, ecx	      4281	syntax.c	FUNCTION_70	IF_1	CALL_1
0x4001261	      0xbf00000000	                              mov edi, 0	      4281	syntax.c	FUNCTION_70	IF_1	CALL_1
0x4001266	    0x890500000000	            mov dword [0x0400126c], eax 	      4280	syntax.c	FUNCTION_70	IF_1
0x400126c	      0xe800000000	                          call 0x4001271	      4281	syntax.c	FUNCTION_70	IF_1	CALL_1
0x4001271	      0xbf3d000000	                           mov edi, 0x3d	      4282	syntax.c	FUNCTION_70	IF_1	CALL_2
0x4001276	      0xe800000000	                          call 0x400127b	      4282	syntax.c	FUNCTION_70	IF_1	CALL_2
0x400127b	    0x486305000000	         movsxd rax, dword [0x04001282] 	      4283	syntax.c	FUNCTION_70	IF_1	IF_2
0x4001282	            0x85c0	                           test eax, eax	      4283	syntax.c	FUNCTION_70	IF_1	IF_2
0x4001284	     0xf8446010000	                            je 0x40013d0	      4283	syntax.c	FUNCTION_70	IF_1	IF_2
0x400128a	        0x488d14c0	                  lea rdx, [rax + rax*8]	      4286	syntax.c	FUNCTION_70	IF_1	CALL_4
0x400128e	        0x488d0450	                  lea rax, [rax + rdx*2]	      4286	syntax.c	FUNCTION_70	IF_1	CALL_4
0x4001292	    0x488b15000000	            mov rdx, qword [0x04001299] 	      4286	syntax.c	FUNCTION_70	IF_1	CALL_4
0x4001299	        0x488d04c2	                  lea rax, [rdx + rax*8]	      4286	syntax.c	FUNCTION_70	IF_1	CALL_4
0x400129d	    0x488bb868ffff	             mov rdi, qword [rax - 0x98]	      4286	syntax.c	FUNCTION_70	IF_1	CALL_4
0x40012a4	      0xe800000000	                          call 0x40012a9	      4286	syntax.c	FUNCTION_70	IF_1	CALL_4
0x40012a9	      0xbf20000000	                           mov edi, 0x20	      4287	syntax.c	FUNCTION_70	IF_1	CALL_5
0x40012ae	      0xe800000000	                          call 0x40012b3	      4287	syntax.c	FUNCTION_70	IF_1	CALL_5
0x40012b3	            0x89de	                            mov esi, ebx	      4291	syntax.c	FUNCTION_70	CALL_6
0x40012b5	          0x4c89ef	                            mov rdi, r13	      4291	syntax.c	FUNCTION_70	CALL_6
0x40012b8	      0xbb00000000	                              mov ebx, 0	      4291	syntax.c	FUNCTION_70	CALL_6
0x40012bd	      0xe800000000	                          call 0x40012c2	      4291	syntax.c	FUNCTION_70	CALL_6
0x40012c2	          0x4489e7	                           mov edi, r12d	      4292	syntax.c	FUNCTION_70	CALL_7
0x40012c5	      0xe800000000	                          call 0x40012ca	      4292	syntax.c	FUNCTION_70	CALL_7
0x40012ca	            0xeb11	                           jmp 0x40012dd	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_8
0x40012cc	         0xf1f4000	                         nop dword [rax]	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_8
0x40012d0	        0x4883c301	                              add rbx, 1	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_8
0x40012d4	          0x803b00	                       cmp byte [rbx], 0	      4296	syntax.c	FUNCTION_70	FOR_1	IF_3
0x40012d7	     0xf8403010000	                            je 0x40013e0	      4296	syntax.c	FUNCTION_70	FOR_1	IF_3
0x40012dd	        0x440fbe23	                  movsx r12d, byte [rbx]	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_8
0x40012e1	        0x488b7d60	            mov rdi, qword [rbp + 0x60] 	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_8
0x40012e5	          0x4489e6	                           mov esi, r12d	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_8
0x40012e8	      0xe800000000	                          call 0x40012ed	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_8
0x40012ed	          0x4885c0	                           test rax, rax	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_8
0x40012f0	            0x75de	                           jne 0x40012d0	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_8
0x40012f2	          0x4489e7	                           mov edi, r12d	      4301	syntax.c	FUNCTION_70	CALL_9
0x40012f5	            0x31db	                            xor ebx, ebx	      4303	syntax.c	FUNCTION_70	CALL_11
0x40012f7	    0x41bd01000000	                             mov r13d, 1	      4309	syntax.c	FUNCTION_70	FOR_2
0x40012fd	      0xe800000000	                          call 0x4001302	      4301	syntax.c	FUNCTION_70	CALL_9
0x4001302	        0x488b7d60	            mov rdi, qword [rbp + 0x60] 	      4302	syntax.c	FUNCTION_70	CALL_10
0x4001306	      0xe800000000	                          call 0x400130b	      4302	syntax.c	FUNCTION_70	CALL_10
0x400130b	          0x4489e7	                           mov edi, r12d	      4303	syntax.c	FUNCTION_70	CALL_11
0x400130e	      0xe800000000	                          call 0x4001313	      4303	syntax.c	FUNCTION_70	CALL_11
0x4001313	      0xbe01000000	                              mov esi, 1	      4306	syntax.c	FUNCTION_70
0x4001318	            0xeb34	                           jmp 0x400134e	      4306	syntax.c	FUNCTION_70
0x400131a	    0x660f1f440000	                    nop word [rax + rax]	      4306	syntax.c	FUNCTION_70
0x4001320	      0xbf73000000	                           mov edi, 0x73	      4319	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	CALL_14
0x4001325	      0xe800000000	                          call 0x400132a	      4319	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	CALL_14
0x400132a	        0x4983fe00	                              cmp r14, 0	      4322	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	IF_8
0x400132e	            0x7e6c	                           jle 0x400139c	      4322	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	IF_8
0x4001330	      0xbf2b000000	                           mov edi, 0x2b	      4323	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	CALL_16
0x4001335	      0xe800000000	                          call 0x400133a	      4323	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	CALL_16
0x400133a	          0x4c89f7	                            mov rdi, r14	      4326	syntax.c	FUNCTION_70	FOR_2	IF_4	CALL_17
0x400133d	      0xe800000000	                          call 0x4001342	      4326	syntax.c	FUNCTION_70	FOR_2	IF_4	CALL_17
0x4001342	            0x31f6	                            xor esi, esi	      4327	syntax.c	FUNCTION_70	FOR_2	IF_4
0x4001344	        0x4883c301	                              add rbx, 1	      4327	syntax.c	FUNCTION_70	FOR_2	IF_4
0x4001348	        0x4883fb07	                              cmp rbx, 7	      4307	syntax.c	FUNCTION_70	FOR_2
0x400134c	            0x745c	                            je 0x40013aa	      4307	syntax.c	FUNCTION_70	FOR_2
0x400134e	          0x4589ec	                          mov r12d, r13d	      4309	syntax.c	FUNCTION_70	FOR_2
0x4001351	            0x89d9	                            mov ecx, ebx	      4309	syntax.c	FUNCTION_70	FOR_2
0x4001353	         0xfbf5504	               movsx edx, word [rbp + 4]	      4310	syntax.c	FUNCTION_70	FOR_2	IF_4
0x4001357	          0x41d3e4	                            shl r12d, cl	      4309	syntax.c	FUNCTION_70	FOR_2
0x400135a	          0x4489e0	                           mov eax, r12d	      4310	syntax.c	FUNCTION_70	FOR_2	IF_4
0x400135d	          0xc1e007	                              shl eax, 7	      4310	syntax.c	FUNCTION_70	FOR_2	IF_4
0x4001360	          0x4401e0	                           add eax, r12d	      4310	syntax.c	FUNCTION_70	FOR_2	IF_4
0x4001363	            0x85d0	                           test eax, edx	      4310	syntax.c	FUNCTION_70	FOR_2	IF_4
0x4001365	            0x74dd	                            je 0x4001344	      4310	syntax.c	FUNCTION_70	FOR_2	IF_4
0x4001367	            0x85f6	                           test esi, esi	      4312	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_5
0x4001369	            0x7455	                            je 0x40013c0	      4312	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_5
0x400136b	    0x488b3cdd0000	                  mov rdi, qword [rbx*8]	      4314	syntax.c	FUNCTION_70	FOR_2	IF_4	CALL_13
0x4001373	      0xe800000000	                          call 0x4001378	      4314	syntax.c	FUNCTION_70	FOR_2	IF_4	CALL_13
0x4001378	        0x4883fb06	                              cmp rbx, 6	      4316	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6
0x400137c	      0x4c63749d08	    movsxd r14, dword [rbp + rbx*4 + 8] 	      4315	syntax.c	FUNCTION_70	FOR_2	IF_4
0x4001381	            0x74b7	                            je 0x400133a	      4316	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6
0x4001383	         0xfbf4504	               movsx eax, word [rbp + 4]	      4318	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	IF_7
0x4001387	          0x4485e0	                          test eax, r12d	      4318	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	IF_7
0x400138a	            0x7594	                           jne 0x4001320	      4318	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	IF_7
0x400138c	      0xbf65000000	                           mov edi, 0x65	      4321	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	CALL_15
0x4001391	      0xe800000000	                          call 0x4001396	      4321	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	CALL_15
0x4001396	        0x4983fe00	                              cmp r14, 0	      4322	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	IF_8
0x400139a	            0x7f94	                            jg 0x4001330	      4322	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	IF_8
0x400139c	            0x759c	                           jne 0x400133a	      4325	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_9
0x400139e	        0x4883c301	                              add rbx, 1	      4325	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_9
0x40013a2	            0x31f6	                            xor esi, esi	      4327	syntax.c	FUNCTION_70	FOR_2	IF_4
0x40013a4	        0x4883fb07	                              cmp rbx, 7	      4307	syntax.c	FUNCTION_70	FOR_2
0x40013a8	            0x75a4	                           jne 0x400134e	      4307	syntax.c	FUNCTION_70	FOR_2
0x40013aa	              0x5b	                                 pop rbx	      4331	syntax.c	FUNCTION_70
0x40013ab	              0x5d	                                 pop rbp	      4331	syntax.c	FUNCTION_70
0x40013ac	            0x415c	                                 pop r12	      4331	syntax.c	FUNCTION_70
0x40013ae	            0x415d	                                 pop r13	      4331	syntax.c	FUNCTION_70
0x40013b0	            0x415e	                                 pop r14	      4331	syntax.c	FUNCTION_70
0x40013b2	      0xbf20000000	                           mov edi, 0x20	      4330	syntax.c	FUNCTION_70	CALL_18
0x40013b7	      0xe900000000	                           jmp 0x40013bc	      4330	syntax.c	FUNCTION_70	CALL_18
0x40013bc	         0xf1f4000	                         nop dword [rax]	      4330	syntax.c	FUNCTION_70	CALL_18
0x40013c0	      0xbf2c000000	                           mov edi, 0x2c	      4313	syntax.c	FUNCTION_70	FOR_2	IF_4	CALL_12
0x40013c5	      0xe800000000	                          call 0x40013ca	      4313	syntax.c	FUNCTION_70	FOR_2	IF_4	CALL_12
0x40013ca	            0xeb9f	                           jmp 0x400136b	      4313	syntax.c	FUNCTION_70	FOR_2	IF_4	CALL_12
0x40013cc	         0xf1f4000	                         nop dword [rax]	      4313	syntax.c	FUNCTION_70	FOR_2	IF_4	CALL_12
0x40013d0	      0xbf00000000	                              mov edi, 0	      4284	syntax.c	FUNCTION_70	IF_1	CALL_3
0x40013d5	      0xe800000000	                          call 0x40013da	      4284	syntax.c	FUNCTION_70	IF_1	CALL_3
0x40013da	      0xe9cafeffff	                           jmp 0x40012a9	      4284	syntax.c	FUNCTION_70	IF_1	CALL_3
0x40013df	              0x90	                                     nop	      4284	syntax.c	FUNCTION_70	IF_1	CALL_3
0x40013e0	    0x41bc2f000000	                          mov r12d, 0x2f	      4284	syntax.c	FUNCTION_70	IF_1	CALL_3
0x40013e6	      0xe907ffffff	                           jmp 0x40012f2	      4284	syntax.c	FUNCTION_70	IF_1	CALL_3
syn_stack_apply_changes_block	DO,0:functions,0:IF,7:WHILE,0:CALL,1:ELSE,2:SWITCH,0:FOR,1	109
0x40020e0	    0x4883bf100300	              cmp qword [rdi + 0x310], 0	      1326	syntax.c	FUNCTION_15	IF_1
0x40020e8	     0xf84e6000000	                            je 0x40021d4	      1326	syntax.c	FUNCTION_15	IF_1
0x40020ee	            0x4157	                                push r15	      1322	syntax.c	FUNCTION_15
0x40020f0	            0x4156	                                push r14	      1322	syntax.c	FUNCTION_15
0x40020f2	            0x4155	                                push r13	      1322	syntax.c	FUNCTION_15
0x40020f4	            0x4154	                                push r12	      1322	syntax.c	FUNCTION_15
0x40020f6	              0x55	                                push rbp	      1322	syntax.c	FUNCTION_15
0x40020f7	              0x53	                                push rbx	      1322	syntax.c	FUNCTION_15
0x40020f8	        0x4883ec18	                           sub rsp, 0x18	      1322	syntax.c	FUNCTION_15
0x40020fc	    0x488b9f200300	           mov rbx, qword [rdi + 0x320] 	      1330	syntax.c	FUNCTION_15	FOR_1
0x4002103	          0x4885db	                           test rbx, rbx	      1330	syntax.c	FUNCTION_15	FOR_1
0x4002106	     0xf84ba000000	                            je 0x40021c6	      1330	syntax.c	FUNCTION_15	FOR_1
0x400210c	          0x4989f4	                            mov r12, rsi	      1330	syntax.c	FUNCTION_15	FOR_1
0x400210f	          0x4889fd	                            mov rbp, rdi	      1330	syntax.c	FUNCTION_15	FOR_1
0x4002112	          0x4531ed	                          xor r13d, r13d	      1330	syntax.c	FUNCTION_15	FOR_1
0x4002115	           0xf1f00	                         nop dword [rax]	      1330	syntax.c	FUNCTION_15	FOR_1
0x4002118	        0x488b4308	                mov rax, qword [rbx + 8]	      1332	syntax.c	FUNCTION_15	FOR_1	IF_2
0x400211c	    0x498b94241001	           mov rdx, qword [r12 + 0x110] 	      1332	syntax.c	FUNCTION_15	FOR_1	IF_2
0x4002124	          0x4889c1	                            mov rcx, rax	      1332	syntax.c	FUNCTION_15	FOR_1	IF_2
0x4002127	    0x48038db80200	            add rcx, qword [rbp + 0x2b8]	      1332	syntax.c	FUNCTION_15	FOR_1	IF_2
0x400212e	          0x4839d1	                            cmp rcx, rdx	      1332	syntax.c	FUNCTION_15	FOR_1	IF_2
0x4002131	     0xf8ee7000000	                           jle 0x400221e	      1332	syntax.c	FUNCTION_15	FOR_1	IF_2
0x4002137	    0x498bbc242001	           mov rdi, qword [r12 + 0x120] 	      1334	syntax.c	FUNCTION_15	FOR_1	IF_2
0x400213f	    0x498b8c241801	           mov rcx, qword [r12 + 0x118] 	      1335	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3
0x4002147	          0x4801f8	                            add rax, rdi	      1334	syntax.c	FUNCTION_15	FOR_1	IF_2
0x400214a	          0x4839c8	                            cmp rax, rcx	      1335	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3
0x400214d	     0xf8f8d000000	                            jg 0x40021e0	      1335	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3
0x4002153	          0x488b03	                    mov rax, qword [rbx]	      1338	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3
0x4002156	          0x4d85ed	                           test r13, r13	      1339	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3	IF_4
0x4002159	        0x48890424	                    mov qword [rsp], rax	      1338	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3
0x400215d	     0xf843d010000	                            je 0x40022a0	      1339	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3	IF_4
0x4002163	        0x49894500	                    mov qword [r13], rax	      1342	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3	ELSE_1
0x4002167	    0x8b93bc000000	            mov edx, dword [rbx + 0xbc] 	       698	syntax.c	FUNCTION_3	IF_1
0x400216d	          0x83fa07	                              cmp edx, 7	       698	syntax.c	FUNCTION_3	IF_1
0x4002170	     0xf8fca000000	                            jg 0x4002240	       698	syntax.c	FUNCTION_3	IF_1
0x4002176	          0x4531ff	                          xor r15d, r15d	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4002179	            0x85d2	                           test edx, edx	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x400217b	        0x4c8d7320	                   lea r14, [rbx + 0x20]	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x400217f	            0x7e20	                           jle 0x40021a1	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4002181	     0xf1f80000000	                         nop dword [rax]	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4002188	          0x498b3e	                    mov rdi, qword [r14]	       708	syntax.c	FUNCTION_3	ELSE_1	CALL_3
0x400218b	        0x4183c701	                             add r15d, 1	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x400218f	        0x4983c618	                           add r14, 0x18	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4002193	      0xe800000000	                          call 0x4002198	       708	syntax.c	FUNCTION_3	ELSE_1	CALL_3
0x4002198	    0x443bbbbc0000	           cmp r15d, dword [rbx + 0xbc] 	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x400219f	            0x7ce7	                            jl 0x4002188	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x40021a1	    0x488b85280300	           mov rax, qword [rbp + 0x328] 	      1440	syntax.c	FUNCTION_17
0x40021a8	          0x488903	                    mov qword [rbx], rax	      1440	syntax.c	FUNCTION_17
0x40021ab	    0x838530030000	              add dword [rbp + 0x330], 1	      1442	syntax.c	FUNCTION_17
0x40021b2	    0x48899d280300	           mov qword [rbp + 0x328], rbx 	      1441	syntax.c	FUNCTION_17
0x40021b9	        0x488b1c24	                    mov rbx, qword [rsp]	      1344	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3
0x40021bd	          0x4885db	                           test rbx, rbx	      1330	syntax.c	FUNCTION_15	FOR_1
0x40021c0	     0xf8552ffffff	                           jne 0x4002118	      1330	syntax.c	FUNCTION_15	FOR_1
0x40021c6	        0x4883c418	                           add rsp, 0x18	      1366	syntax.c	FUNCTION_15
0x40021ca	              0x5b	                                 pop rbx	      1366	syntax.c	FUNCTION_15
0x40021cb	              0x5d	                                 pop rbp	      1366	syntax.c	FUNCTION_15
0x40021cc	            0x415c	                                 pop r12	      1366	syntax.c	FUNCTION_15
0x40021ce	            0x415d	                                 pop r13	      1366	syntax.c	FUNCTION_15
0x40021d0	            0x415e	                                 pop r14	      1366	syntax.c	FUNCTION_15
0x40021d2	            0x415f	                                 pop r15	      1366	syntax.c	FUNCTION_15
0x40021d4	            0xf3c3	                                     ret	      1366	syntax.c	FUNCTION_15
0x40021d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1366	syntax.c	FUNCTION_15
0x40021e0	    0x488bb3d00000	            mov rsi, qword [rbx + 0xd0] 	      1350	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5
0x40021e7	          0x4839f2	                            cmp rdx, rsi	      1350	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5
0x40021ea	            0x7d24	                           jge 0x4002210	      1350	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5
0x40021ec	          0x4885f6	                           test rsi, rsi	      1350	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5
0x40021ef	            0x741f	                            je 0x4002210	      1350	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5
0x40021f1	          0x4801fe	                            add rsi, rdi	      1352	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x40021f4	          0x4839f2	                            cmp rdx, rsi	      1352	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x40021f7	     0xf8c93000000	                            jl 0x4002290	      1352	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x40021fd	    0x488993d00000	             mov qword [rbx + 0xd0], rdx	      1355	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	ELSE_2
0x4002204	          0x4889d6	                            mov rsi, rdx	      1355	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	ELSE_2
0x4002207	    0x660f1f840000	                    nop word [rax + rax]	      1355	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	ELSE_2
0x4002210	          0x4839f1	                            cmp rcx, rsi	      1358	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x4002213	            0x7f1b	                            jg 0x4002230	      1358	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x4002215	          0x4885f6	                           test rsi, rsi	      1358	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x4002218	            0x7416	                            je 0x4002230	      1358	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x400221a	        0x48894308	                mov qword [rbx + 8], rax	      1361	syntax.c	FUNCTION_15	FOR_1	IF_2
0x400221e	          0x4989dd	                            mov r13, rbx	      1364	syntax.c	FUNCTION_15	FOR_1
0x4002221	          0x488b1b	                    mov rbx, qword [rbx]	      1364	syntax.c	FUNCTION_15	FOR_1
0x4002224	            0xeb97	                           jmp 0x40021bd	      1364	syntax.c	FUNCTION_15	FOR_1
0x4002226	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1364	syntax.c	FUNCTION_15	FOR_1
0x4002230	    0x48898bd00000	             mov qword [rbx + 0xd0], rcx	      1359	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x4002237	            0xebe1	                           jmp 0x400221a	      1359	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x4002239	     0xf1f80000000	                         nop dword [rax]	      1359	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x4002240	        0x488d4310	                   lea rax, [rbx + 0x10]	       700	syntax.c	FUNCTION_3	IF_1
0x4002244	          0x4531f6	                          xor r14d, r14d	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x4002247	          0x4531ff	                          xor r15d, r15d	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x400224a	      0x4889442408	                mov qword [rsp + 8], rax	       700	syntax.c	FUNCTION_3	IF_1
0x400224f	          0x8b4310	            mov eax, dword [rbx + 0x10] 	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x4002252	            0x85c0	                           test eax, eax	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x4002254	            0x7e26	                           jle 0x400227c	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x4002256	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x4002260	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	       702	syntax.c	FUNCTION_3	IF_1	CALL_1
0x4002264	        0x4183c701	                             add r15d, 1	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x4002268	      0x4a8b7c3110	      mov rdi, qword [rcx + r14 + 0x10] 	       702	syntax.c	FUNCTION_3	IF_1	CALL_1
0x400226d	        0x4983c618	                           add r14, 0x18	       702	syntax.c	FUNCTION_3	IF_1	CALL_1
0x4002271	      0xe800000000	                          call 0x4002276	       702	syntax.c	FUNCTION_3	IF_1	CALL_1
0x4002276	        0x443b7b10	           cmp r15d, dword [rbx + 0x10] 	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x400227a	            0x7ce4	                            jl 0x4002260	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x400227c	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       703	syntax.c	FUNCTION_3	IF_1	CALL_2
0x4002281	      0xe800000000	                          call 0x4002286	       703	syntax.c	FUNCTION_3	IF_1	CALL_2
0x4002286	      0xe916ffffff	                           jmp 0x40021a1	       703	syntax.c	FUNCTION_3	IF_1	CALL_2
0x400228b	       0xf1f440000	                   nop dword [rax + rax]	       703	syntax.c	FUNCTION_3	IF_1	CALL_2
0x4002290	    0x4889b3d00000	             mov qword [rbx + 0xd0], rsi	      1353	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x4002297	      0xe974ffffff	                           jmp 0x4002210	      1353	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x400229c	         0xf1f4000	                         nop dword [rax]	      1353	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x40022a0	    0x488985200300	           mov qword [rbp + 0x320], rax 	      1340	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3	IF_4
0x40022a7	      0xe9bbfeffff	                           jmp 0x4002167	      1340	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3	IF_4
hl_set_font_name	DO,0:functions,0:IF,1:WHILE,0:CALL,3:ELSE,0:SWITCH,0:FOR,0	59
0x400be90	            0x4156	                                push r14	      8540	syntax.c	FUNCTION_124
0x400be92	            0x4155	                                push r13	      8540	syntax.c	FUNCTION_124
0x400be94	      0xbac7000000	                           mov edx, 0xc7	      9639	syntax.c	FUNCTION_148	CALL_1
0x400be99	            0x4154	                                push r12	      8540	syntax.c	FUNCTION_124
0x400be9b	              0x55	                                push rbp	      8540	syntax.c	FUNCTION_124
0x400be9c	      0xbe00000000	                              mov esi, 0	      9639	syntax.c	FUNCTION_148	CALL_1
0x400bea1	              0x53	                                push rbx	      8540	syntax.c	FUNCTION_124
0x400bea2	          0x4989fd	                            mov r13, rdi	      8540	syntax.c	FUNCTION_124
0x400bea5	    0x4881ecd00000	                           sub rsp, 0xd0	      8540	syntax.c	FUNCTION_124
0x400beac	          0x4889e7	                            mov rdi, rsp	      9639	syntax.c	FUNCTION_148	CALL_1
0x400beaf	    0x64488b042528	                mov rax, qword fs:[0x28]	      8540	syntax.c	FUNCTION_124
0x400beb8	    0x48898424c800	             mov qword [rsp + 0xc8], rax	      8540	syntax.c	FUNCTION_124
0x400bec0	            0x31c0	                            xor eax, eax	      8540	syntax.c	FUNCTION_124
0x400bec2	      0xe800000000	                          call 0x400bec7	      9639	syntax.c	FUNCTION_148	CALL_1
0x400bec7	          0x4889e7	                            mov rdi, rsp	      9640	syntax.c	FUNCTION_148	CALL_2
0x400beca	      0xe800000000	                          call 0x400becf	      9640	syntax.c	FUNCTION_148	CALL_2
0x400becf	    0x486305000000	         movsxd rax, dword [0x0400bed6] 	      9641	syntax.c	FUNCTION_148	FOR_1
0x400bed6	    0x4c8b25000000	            mov r12, qword [0x0400bedd] 	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x400bedd	        0x488d14c0	                  lea rdx, [rax + rax*8]	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x400bee1	          0x4889c3	                            mov rbx, rax	      9641	syntax.c	FUNCTION_148	FOR_1
0x400bee4	        0x488d0450	                  lea rax, [rax + rdx*2]	      9641	syntax.c	FUNCTION_148	FOR_1
0x400bee8	    0x498dacc470ff	           lea rbp, [r12 + rax*8 - 0x90]	      9641	syntax.c	FUNCTION_148	FOR_1
0x400bef0	            0xeb25	                           jmp 0x400bf17	      9641	syntax.c	FUNCTION_148	FOR_1
0x400bef2	    0x660f1f440000	                    nop word [rax + rax]	      9641	syntax.c	FUNCTION_148	FOR_1
0x400bef8	        0x488b7500	                    mov rsi, qword [rbp]	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x400befc	          0x4885f6	                           test rsi, rsi	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x400beff	            0x740c	                            je 0x400bf0d	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x400bf01	          0x4889e7	                            mov rdi, rsp	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400bf04	      0xe800000000	                          call 0x400bf09	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400bf09	            0x85c0	                           test eax, eax	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400bf0b	            0x7413	                            je 0x400bf20	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400bf0d	    0x4881ed980000	                           sub rbp, 0x98	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400bf14	          0x4963de	                        movsxd rbx, r14d	      8540	syntax.c	FUNCTION_124
0x400bf17	          0x4189de	                           mov r14d, ebx	      9641	syntax.c	FUNCTION_148	FOR_1
0x400bf1a	        0x4183ee01	                             sub r14d, 1	      9641	syntax.c	FUNCTION_148	FOR_1
0x400bf1e	            0x79d8	                           jns 0x400bef8	      9641	syntax.c	FUNCTION_148	FOR_1
0x400bf20	            0x85db	                           test ebx, ebx	      8544	syntax.c	FUNCTION_124	IF_1
0x400bf22	            0x7e30	                           jle 0x400bf54	      8544	syntax.c	FUNCTION_124	IF_1
0x400bf24	        0x488d04db	                  lea rax, [rbx + rbx*8]	      8546	syntax.c	FUNCTION_124	IF_1	CALL_2
0x400bf28	        0x488d0443	                  lea rax, [rbx + rax*2]	      8546	syntax.c	FUNCTION_124	IF_1	CALL_2
0x400bf2c	        0x48c1e003	                              shl rax, 3	      8546	syntax.c	FUNCTION_124	IF_1	CALL_2
0x400bf30	      0x498b7c04c8	       mov rdi, qword [r12 + rax - 0x38]	      8546	syntax.c	FUNCTION_124	IF_1	CALL_2
0x400bf35	    0x488d9868ffff	                   lea rbx, [rax - 0x98]	      8546	syntax.c	FUNCTION_124	IF_1	CALL_2
0x400bf3c	      0xe800000000	                          call 0x400bf41	      8546	syntax.c	FUNCTION_124	IF_1	CALL_2
0x400bf41	    0x48031d000000	             add rbx, qword [0x0400bf48]	      8547	syntax.c	FUNCTION_124	IF_1	CALL_3
0x400bf48	          0x4c89ef	                            mov rdi, r13	      8547	syntax.c	FUNCTION_124	IF_1	CALL_3
0x400bf4b	      0xe800000000	                          call 0x400bf50	      8547	syntax.c	FUNCTION_124	IF_1	CALL_3
0x400bf50	        0x48894360	             mov qword [rbx + 0x60], rax	      8547	syntax.c	FUNCTION_124	IF_1	CALL_3
0x400bf54	    0x488b8424c800	            mov rax, qword [rsp + 0xc8] 	      8549	syntax.c	FUNCTION_124
0x400bf5c	    0x644833042528	                xor rax, qword fs:[0x28]	      8549	syntax.c	FUNCTION_124
0x400bf65	            0x7510	                           jne 0x400bf77	      8549	syntax.c	FUNCTION_124
0x400bf67	    0x4881c4d00000	                           add rsp, 0xd0	      8549	syntax.c	FUNCTION_124
0x400bf6e	              0x5b	                                 pop rbx	      8549	syntax.c	FUNCTION_124
0x400bf6f	              0x5d	                                 pop rbp	      8549	syntax.c	FUNCTION_124
0x400bf70	            0x415c	                                 pop r12	      8549	syntax.c	FUNCTION_124
0x400bf72	            0x415d	                                 pop r13	      8549	syntax.c	FUNCTION_124
0x400bf74	            0x415e	                                 pop r14	      8549	syntax.c	FUNCTION_124
0x400bf76	              0xc3	                                     ret	      8549	syntax.c	FUNCTION_124
0x400bf77	      0xe800000000	                          call 0x400bf7c	      8549	syntax.c	FUNCTION_124
store_current_state	DO,0:functions,0:IF,13:WHILE,0:CALL,8:ELSE,6:SWITCH,0:FOR,3	322
0x4002ba0	            0x4156	                                push r14	      1471	syntax.c	FUNCTION_19
0x4002ba2	            0x4155	                                push r13	      1471	syntax.c	FUNCTION_19
0x4002ba4	            0x4154	                                push r12	      1471	syntax.c	FUNCTION_19
0x4002ba6	              0x55	                                push rbp	      1471	syntax.c	FUNCTION_19
0x4002ba7	    0x488b2d000000	            mov rbp, qword [0x04002bae] 	      1455	syntax.c	FUNCTION_18	FOR_1
0x4002bae	              0x53	                                push rbx	      1471	syntax.c	FUNCTION_19
0x4002baf	    0x488b0d000000	            mov rcx, qword [0x04002bb6] 	      1476	syntax.c	FUNCTION_19	CALL_1
0x4002bb6	    0x4c8b8d200300	            mov r9, qword [rbp + 0x320] 	      1455	syntax.c	FUNCTION_18	FOR_1
0x4002bbd	          0x4d85c9	                             test r9, r9	      1455	syntax.c	FUNCTION_18	FOR_1
0x4002bc0	     0xf845f040000	                            je 0x4003025	      1455	syntax.c	FUNCTION_18	FOR_1
0x4002bc6	        0x493b4908	                 cmp rcx, qword [r9 + 8]	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x4002bca	     0xf84a6040000	                            je 0x4003076	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x4002bd0	     0xf8c4f040000	                            jl 0x4003025	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x4002bd6	          0x4c89cb	                             mov rbx, r9	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x4002bd9	            0xeb14	                           jmp 0x4002bef	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x4002bdb	       0xf1f440000	                   nop dword [rax + rax]	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x4002be0	        0x483b4808	                cmp rcx, qword [rax + 8]	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x4002be4	     0xf84ce010000	                            je 0x4002db8	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x4002bea	            0x7c0b	                            jl 0x4002bf7	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x4002bec	          0x4889c3	                            mov rbx, rax	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x4002bef	          0x488b03	                    mov rax, qword [rbx]	      1455	syntax.c	FUNCTION_18	FOR_1
0x4002bf2	          0x4885c0	                           test rax, rax	      1455	syntax.c	FUNCTION_18	FOR_1
0x4002bf5	            0x75e9	                           jne 0x4002be0	      1455	syntax.c	FUNCTION_18	FOR_1
0x4002bf7	    0x8b0500000000	            mov eax, dword [0x04002bfd] 	      1482	syntax.c	FUNCTION_19	FOR_1
0x4002bfd	            0x89c7	                            mov edi, eax	      1482	syntax.c	FUNCTION_19	FOR_1
0x4002bff	          0x83ef01	                              sub edi, 1	      1482	syntax.c	FUNCTION_19	FOR_1
0x4002c02	     0xf888f000000	                            js 0x4002c97	      1482	syntax.c	FUNCTION_19	FOR_1
0x4002c08	          0x4863d7	                         movsxd rdx, edi	      1484	syntax.c	FUNCTION_19	FOR_1
0x4002c0b	    0x4c8b15000000	            mov r10, qword [0x04002c12] 	      1484	syntax.c	FUNCTION_19	FOR_1
0x4002c12	        0x4c8d04d2	                   lea r8, [rdx + rdx*8]	      1484	syntax.c	FUNCTION_19	FOR_1
0x4002c16	        0x49c1e004	                               shl r8, 4	      1484	syntax.c	FUNCTION_19	FOR_1
0x4002c1a	        0x4b8d1402	                     lea rdx, [r10 + r8]	      1484	syntax.c	FUNCTION_19	FOR_1
0x4002c1e	        0x483b4a28	            cmp rcx, qword [rdx + 0x28] 	      1485	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4002c22	     0xf8ef0000000	                           jle 0x4002d18	      1485	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4002c28	        0x483b4a18	            cmp rcx, qword [rdx + 0x18] 	      1486	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4002c2c	     0xf8ee6000000	                           jle 0x4002d18	      1486	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4002c32	        0x483b4a38	            cmp rcx, qword [rdx + 0x38] 	      1487	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4002c36	     0xf8ebc000000	                           jle 0x4002cf8	      1487	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4002c3c	          0x4929d0	                             sub r8, rdx	      1487	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4002c3f	          0x4889d6	                            mov rsi, rdx	      1487	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4002c42	    0x4981e8900000	                            sub r8, 0x90	      1487	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4002c49	            0xeb30	                           jmp 0x4002c7b	      1487	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4002c4b	       0xf1f440000	                   nop dword [rax + rax]	      1487	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4002c50	          0x4c01c2	                             add rdx, r8	      1487	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4002c53	          0x4c01d2	                            add rdx, r10	      1487	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4002c56	        0x483b4e98	             cmp rcx, qword [rsi - 0x68]	      1485	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4002c5a	     0xf8e98000000	                           jle 0x4002cf8	      1485	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4002c60	        0x483b4e88	             cmp rcx, qword [rsi - 0x78]	      1486	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4002c64	     0xf8e8e000000	                           jle 0x4002cf8	      1486	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4002c6a	    0x4881ee900000	                           sub rsi, 0x90	      1486	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4002c71	        0x483b4e38	            cmp rcx, qword [rsi + 0x38] 	      1487	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4002c75	     0xf8e7d000000	                           jle 0x4002cf8	      1487	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4002c7b	        0x448b5a58	           mov r11d, dword [rdx + 0x58] 	      1488	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4002c7f	          0x4585db	                         test r11d, r11d	      1488	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4002c82	            0x7406	                            je 0x4002c8a	      1488	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4002c84	        0x483b4a48	            cmp rcx, qword [rdx + 0x48] 	      1489	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4002c88	            0x7e6e	                           jle 0x4002cf8	      1489	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4002c8a	          0x83ef01	                              sub edi, 1	      1482	syntax.c	FUNCTION_19	FOR_1
0x4002c8d	          0x83ffff	             cmp edi, 0xffffffffffffffff	      1482	syntax.c	FUNCTION_19	FOR_1
0x4002c90	            0x75be	                           jne 0x4002c50	      1482	syntax.c	FUNCTION_19	FOR_1
0x4002c92	          0x4885db	                           test rbx, rbx	      1513	syntax.c	FUNCTION_19	ELSE_2	IF_7
0x4002c95	            0x740a	                            je 0x4002ca1	      1513	syntax.c	FUNCTION_19	ELSE_2	IF_7
0x4002c97	        0x483b4b08	                cmp rcx, qword [rbx + 8]	      1513	syntax.c	FUNCTION_19	ELSE_2	IF_7
0x4002c9b	     0xf842b010000	                            je 0x4002dcc	      1513	syntax.c	FUNCTION_19	ELSE_2	IF_7
0x4002ca1	    0x8bb530030000	           mov esi, dword [rbp + 0x330] 	      1519	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_8
0x4002ca7	            0x85f6	                           test esi, esi	      1519	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_8
0x4002ca9	     0xf84f0020000	                            je 0x4002f9f	      1519	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_8
0x4002caf	    0x488b95280300	           mov rdx, qword [rbp + 0x328] 	      1532	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x4002cb6	          0x83ee01	                              sub esi, 1	      1534	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x4002cb9	          0x4885db	                           test rbx, rbx	      1535	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	IF_10
0x4002cbc	          0x488b3a	                    mov rdi, qword [rdx]	      1533	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x4002cbf	    0x89b530030000	           mov dword [rbp + 0x330], esi 	      1534	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x4002cc5	    0x4889bd280300	           mov qword [rbp + 0x328], rdi 	      1533	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x4002ccc	     0xf84dd030000	                            je 0x40030af	      1535	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	IF_10
0x4002cd2	          0x488b33	                    mov rsi, qword [rbx]	      1544	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	ELSE_4
0x4002cd5	          0x488932	                    mov qword [rdx], rsi	      1544	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	ELSE_4
0x4002cd8	          0x488913	                    mov qword [rbx], rdx	      1545	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	ELSE_4
0x4002cdb	    0xc782bc000000	               mov dword [rdx + 0xbc], 0	      1548	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x4002ce5	        0x48894a08	                mov qword [rdx + 8], rcx	      1549	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x4002ce9	        0x488d6a10	                   lea rbp, [rdx + 0x10]	       703	syntax.c	FUNCTION_3	IF_1	CALL_2
0x4002ced	          0x4889d3	                            mov rbx, rdx	       703	syntax.c	FUNCTION_3	IF_1	CALL_2
0x4002cf0	      0xe925010000	                           jmp 0x4002e1a	       703	syntax.c	FUNCTION_3	IF_1	CALL_2
0x4002cf5	           0xf1f00	                         nop dword [rax]	       703	syntax.c	FUNCTION_3	IF_1	CALL_2
0x4002cf8	          0x4885db	                           test rbx, rbx	      1494	syntax.c	FUNCTION_19	IF_2	IF_3
0x4002cfb	            0x751b	                           jne 0x4002d18	      1494	syntax.c	FUNCTION_19	IF_2	IF_3
0x4002cfd	            0x31db	                            xor ebx, ebx	      1570	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4002cff	          0x4889d8	                            mov rax, rbx	      1587	syntax.c	FUNCTION_19
0x4002d02	    0xc70500000000	               mov dword [0x04002d0c], 1	      1585	syntax.c	FUNCTION_19
0x4002d0c	              0x5b	                                 pop rbx	      1587	syntax.c	FUNCTION_19
0x4002d0d	              0x5d	                                 pop rbp	      1587	syntax.c	FUNCTION_19
0x4002d0e	            0x415c	                                 pop r12	      1587	syntax.c	FUNCTION_19
0x4002d10	            0x415d	                                 pop r13	      1587	syntax.c	FUNCTION_19
0x4002d12	            0x415e	                                 pop r14	      1587	syntax.c	FUNCTION_19
0x4002d14	              0xc3	                                     ret	      1587	syntax.c	FUNCTION_19
0x4002d15	           0xf1f00	                         nop dword [rax]	      1587	syntax.c	FUNCTION_19
0x4002d18	          0x4939d9	                             cmp r9, rbx	      1497	syntax.c	FUNCTION_19	IF_2	IF_3	IF_4
0x4002d1b	     0xf8446030000	                            je 0x4003067	      1497	syntax.c	FUNCTION_19	IF_2	IF_3	IF_4
0x4002d21	          0x4d85c9	                             test r9, r9	      1503	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2
0x4002d24	            0x7426	                            je 0x4002d4c	      1503	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2
0x4002d26	          0x498b01	                     mov rax, qword [r9]	      1504	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2	IF_5
0x4002d29	          0x4839c3	                            cmp rbx, rax	      1504	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2	IF_5
0x4002d2c	            0x7519	                           jne 0x4002d47	      1504	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2	IF_5
0x4002d2e	      0xe904020000	                           jmp 0x4002f37	      1504	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2	IF_5
0x4002d33	       0xf1f440000	                   nop dword [rax + rax]	      1504	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2	IF_5
0x4002d38	          0x488b10	                    mov rdx, qword [rax]	      1504	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2	IF_5
0x4002d3b	          0x4839da	                            cmp rdx, rbx	      1504	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2	IF_5
0x4002d3e	     0xf84fc010000	                            je 0x4002f40	      1504	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2	IF_5
0x4002d44	          0x4889d0	                            mov rax, rdx	      1504	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2	IF_5
0x4002d47	          0x4885c0	                           test rax, rax	      1503	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2
0x4002d4a	            0x75ec	                           jne 0x4002d38	      1503	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2
0x4002d4c	    0x8b83bc000000	            mov eax, dword [rbx + 0xbc] 	       698	syntax.c	FUNCTION_3	IF_1
0x4002d52	          0x83f807	                              cmp eax, 7	       698	syntax.c	FUNCTION_3	IF_1
0x4002d55	     0xf8efa010000	                           jle 0x4002f55	       698	syntax.c	FUNCTION_3	IF_1
0x4002d5b	          0x8b5310	            mov edx, dword [rbx + 0x10] 	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x4002d5e	          0x4531ed	                          xor r13d, r13d	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x4002d61	          0x4531e4	                          xor r12d, r12d	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x4002d64	        0x4c8d7310	                   lea r14, [rbx + 0x10]	       700	syntax.c	FUNCTION_3	IF_1
0x4002d68	            0x85d2	                           test edx, edx	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x4002d6a	            0x7e20	                           jle 0x4002d8c	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x4002d6c	         0xf1f4000	                         nop dword [rax]	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x4002d70	        0x488b4320	            mov rax, qword [rbx + 0x20] 	       702	syntax.c	FUNCTION_3	IF_1	CALL_1
0x4002d74	        0x4183c401	                             add r12d, 1	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x4002d78	      0x4a8b7c2810	      mov rdi, qword [rax + r13 + 0x10] 	       702	syntax.c	FUNCTION_3	IF_1	CALL_1
0x4002d7d	        0x4983c518	                           add r13, 0x18	       702	syntax.c	FUNCTION_3	IF_1	CALL_1
0x4002d81	      0xe800000000	                          call 0x4002d86	       702	syntax.c	FUNCTION_3	IF_1	CALL_1
0x4002d86	        0x443b6310	           cmp r12d, dword [rbx + 0x10] 	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x4002d8a	            0x7ce4	                            jl 0x4002d70	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x4002d8c	          0x4c89f7	                            mov rdi, r14	       703	syntax.c	FUNCTION_3	IF_1	CALL_2
0x4002d8f	      0xe800000000	                          call 0x4002d94	       703	syntax.c	FUNCTION_3	IF_1	CALL_2
0x4002d94	    0x488b85280300	           mov rax, qword [rbp + 0x328] 	      1440	syntax.c	FUNCTION_17
0x4002d9b	          0x488903	                    mov qword [rbx], rax	      1440	syntax.c	FUNCTION_17
0x4002d9e	    0x48899d280300	           mov qword [rbp + 0x328], rbx 	      1441	syntax.c	FUNCTION_17
0x4002da5	    0x838530030000	              add dword [rbp + 0x330], 1	      1442	syntax.c	FUNCTION_17
0x4002dac	      0xe94cffffff	                           jmp 0x4002cfd	      1442	syntax.c	FUNCTION_17
0x4002db1	     0xf1f80000000	                         nop dword [rax]	      1442	syntax.c	FUNCTION_17
0x4002db8	          0x4889c3	                            mov rbx, rax	      1455	syntax.c	FUNCTION_18	FOR_1
0x4002dbb	    0x8b0500000000	            mov eax, dword [0x04002dc1] 	      1482	syntax.c	FUNCTION_19	FOR_1
0x4002dc1	            0x89c7	                            mov edi, eax	      1482	syntax.c	FUNCTION_19	FOR_1
0x4002dc3	          0x83ef01	                              sub edi, 1	      1482	syntax.c	FUNCTION_19	FOR_1
0x4002dc6	     0xf893cfeffff	                           jns 0x4002c08	      1482	syntax.c	FUNCTION_19	FOR_1
0x4002dcc	    0x8b93bc000000	            mov edx, dword [rbx + 0xbc] 	       698	syntax.c	FUNCTION_3	IF_1
0x4002dd2	          0x83fa07	                              cmp edx, 7	       698	syntax.c	FUNCTION_3	IF_1
0x4002dd5	     0xf8e25010000	                           jle 0x4002f00	       698	syntax.c	FUNCTION_3	IF_1
0x4002ddb	          0x8b4310	            mov eax, dword [rbx + 0x10] 	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x4002dde	          0x4531ed	                          xor r13d, r13d	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x4002de1	          0x4531e4	                          xor r12d, r12d	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x4002de4	        0x488d6b10	                   lea rbp, [rbx + 0x10]	       700	syntax.c	FUNCTION_3	IF_1
0x4002de8	            0x85c0	                           test eax, eax	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x4002dea	            0x7e20	                           jle 0x4002e0c	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x4002dec	         0xf1f4000	                         nop dword [rax]	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x4002df0	        0x488b4320	            mov rax, qword [rbx + 0x20] 	       702	syntax.c	FUNCTION_3	IF_1	CALL_1
0x4002df4	        0x4183c401	                             add r12d, 1	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x4002df8	      0x4a8b7c2810	      mov rdi, qword [rax + r13 + 0x10] 	       702	syntax.c	FUNCTION_3	IF_1	CALL_1
0x4002dfd	        0x4983c518	                           add r13, 0x18	       702	syntax.c	FUNCTION_3	IF_1	CALL_1
0x4002e01	      0xe800000000	                          call 0x4002e06	       702	syntax.c	FUNCTION_3	IF_1	CALL_1
0x4002e06	        0x443b6310	           cmp r12d, dword [rbx + 0x10] 	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x4002e0a	            0x7ce4	                            jl 0x4002df0	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x4002e0c	          0x4889ef	                            mov rdi, rbp	       703	syntax.c	FUNCTION_3	IF_1	CALL_2
0x4002e0f	      0xe800000000	                          call 0x4002e14	       703	syntax.c	FUNCTION_3	IF_1	CALL_2
0x4002e14	    0x8b0500000000	            mov eax, dword [0x04002e1a] 	       703	syntax.c	FUNCTION_3	IF_1	CALL_2
0x4002e1a	          0x83f807	                              cmp eax, 7	      1557	syntax.c	FUNCTION_19	IF_11	IF_12
0x4002e1d	    0x8983bc000000	             mov dword [rbx + 0xbc], eax	      1556	syntax.c	FUNCTION_19	IF_11
0x4002e23	     0xf8f97000000	                            jg 0x4002ec0	      1557	syntax.c	FUNCTION_19	IF_11	IF_12
0x4002e29	          0x4531ed	                          xor r13d, r13d	      1570	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4002e2c	          0x4531e4	                          xor r12d, r12d	      1570	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4002e2f	            0x85c0	                           test eax, eax	      1570	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4002e31	            0x7e4f	                           jle 0x4002e82	      1570	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4002e33	       0xf1f440000	                   nop dword [rax + rax]	      1570	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4002e38	          0x4c89e8	                            mov rax, r13	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4002e3b	    0x480305000000	             add rax, qword [0x04002e42]	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4002e42	        0x4183c401	                             add r12d, 1	      1570	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4002e46	    0x4981c5900000	                           add r13, 0x90	      1570	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4002e4d	        0x4883c518	                           add rbp, 0x18	      1570	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4002e51	            0x8b10	                    mov edx, dword [rax]	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4002e53	    0x488bb8880000	            mov rdi, qword [rax + 0x88] 	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_8
0x4002e5a	          0x8955e8	             mov dword [rbp - 0x18], edx	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4002e5d	        0x488b5068	            mov rdx, qword [rax + 0x68] 	      1573	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4002e61	          0x8955ec	             mov dword [rbp - 0x14], edx	      1573	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4002e64	          0x8b5070	            mov edx, dword [rax + 0x70] 	      1575	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4002e67	          0x8955f0	             mov dword [rbp - 0x10], edx	      1575	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4002e6a	          0x8b5074	            mov edx, dword [rax + 0x74] 	      1576	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4002e6d	          0x8955f4	              mov dword [rbp - 0xc], edx	      1576	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4002e70	      0xe800000000	                          call 0x4002e75	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_8
0x4002e75	        0x488945f8	                mov qword [rbp - 8], rax	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_8
0x4002e79	    0x4439a3bc0000	           cmp dword [rbx + 0xbc], r12d 	      1570	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4002e80	            0x7fb6	                            jg 0x4002e38	      1570	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x4002e82	    0x8b0500000000	            mov eax, dword [0x04002e88] 	      1580	syntax.c	FUNCTION_19	IF_11
0x4002e88	    0x48c783d00000	               mov qword [rbx + 0xd0], 0	      1583	syntax.c	FUNCTION_19	IF_11
0x4002e93	    0x8983b8000000	             mov dword [rbx + 0xb8], eax	      1580	syntax.c	FUNCTION_19	IF_11
0x4002e99	    0x488b05000000	            mov rax, qword [0x04002ea0] 	      1581	syntax.c	FUNCTION_19	IF_11
0x4002ea0	    0x488983c00000	             mov qword [rbx + 0xc0], rax	      1581	syntax.c	FUNCTION_19	IF_11
0x4002ea7	     0xfb705000000	           movzx eax, word [0x04002eae] 	      1582	syntax.c	FUNCTION_19	IF_11
0x4002eae	    0x668983c80000	               mov word [rbx + 0xc8], ax	      1582	syntax.c	FUNCTION_19	IF_11
0x4002eb5	      0xe945feffff	                           jmp 0x4002cff	      1582	syntax.c	FUNCTION_19	IF_11
0x4002eba	    0x660f1f440000	                    nop word [rax + rax]	      1582	syntax.c	FUNCTION_19	IF_11
0x4002ec0	      0xba01000000	                              mov edx, 1	      1561	syntax.c	FUNCTION_19	IF_11	IF_12	CALL_6
0x4002ec5	      0xbe18000000	                           mov esi, 0x18	      1561	syntax.c	FUNCTION_19	IF_11	IF_12	CALL_6
0x4002eca	          0x4889ef	                            mov rdi, rbp	      1561	syntax.c	FUNCTION_19	IF_11	IF_12	CALL_6
0x4002ecd	      0xe800000000	                          call 0x4002ed2	      1561	syntax.c	FUNCTION_19	IF_11	IF_12	CALL_6
0x4002ed2	    0x8b3500000000	            mov esi, dword [0x04002ed8] 	      1562	syntax.c	FUNCTION_19	IF_11	IF_12	IF_13	CALL_7
0x4002ed8	          0x4889ef	                            mov rdi, rbp	      1562	syntax.c	FUNCTION_19	IF_11	IF_12	IF_13	CALL_7
0x4002edb	      0xe800000000	                          call 0x4002ee0	      1562	syntax.c	FUNCTION_19	IF_11	IF_12	IF_13	CALL_7
0x4002ee0	            0x85c0	                           test eax, eax	      1562	syntax.c	FUNCTION_19	IF_11	IF_12	IF_13	CALL_7
0x4002ee2	     0xf84a8000000	                            je 0x4002f90	      1562	syntax.c	FUNCTION_19	IF_11	IF_12	IF_13	CALL_7
0x4002ee8	    0x8b0500000000	            mov eax, dword [0x04002eee] 	      1565	syntax.c	FUNCTION_19	IF_11	IF_12	ELSE_5
0x4002eee	          0x894310	             mov dword [rbx + 0x10], eax	      1565	syntax.c	FUNCTION_19	IF_11	IF_12	ELSE_5
0x4002ef1	    0x8b83bc000000	            mov eax, dword [rbx + 0xbc] 	      1565	syntax.c	FUNCTION_19	IF_11	IF_12	ELSE_5
0x4002ef7	        0x488b6b20	            mov rbp, qword [rbx + 0x20] 	      1566	syntax.c	FUNCTION_19	IF_11	IF_12
0x4002efb	      0xe929ffffff	                           jmp 0x4002e29	      1566	syntax.c	FUNCTION_19	IF_11	IF_12
0x4002f00	            0x85d2	                           test edx, edx	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4002f02	     0xf8ef3010000	                           jle 0x40030fb	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4002f08	        0x4c8d6320	                   lea r12, [rbx + 0x20]	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4002f0c	            0x31ed	                            xor ebp, ebp	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4002f0e	            0x6690	                                     nop	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4002f10	        0x498b3c24	                    mov rdi, qword [r12]	       708	syntax.c	FUNCTION_3	ELSE_1	CALL_3
0x4002f14	          0x83c501	                              add ebp, 1	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4002f17	        0x4983c418	                           add r12, 0x18	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4002f1b	      0xe800000000	                          call 0x4002f20	       708	syntax.c	FUNCTION_3	ELSE_1	CALL_3
0x4002f20	    0x3babbc000000	            cmp ebp, dword [rbx + 0xbc] 	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4002f26	            0x7ce8	                            jl 0x4002f10	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4002f28	        0x488d6b10	                   lea rbp, [rbx + 0x10]	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4002f2c	    0x8b0500000000	            mov eax, dword [0x04002f32] 	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4002f32	      0xe9e3feffff	                           jmp 0x4002e1a	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4002f37	          0x4c89c8	                             mov rax, r9	      1504	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2	IF_5
0x4002f3a	    0x660f1f440000	                    nop word [rax + rax]	      1504	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2	IF_5
0x4002f40	          0x488b13	                    mov rdx, qword [rbx]	      1507	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	IF_6
0x4002f43	          0x488910	                    mov qword [rax], rdx	      1507	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	IF_6
0x4002f46	    0x8b83bc000000	            mov eax, dword [rbx + 0xbc] 	       698	syntax.c	FUNCTION_3	IF_1
0x4002f4c	          0x83f807	                              cmp eax, 7	       698	syntax.c	FUNCTION_3	IF_1
0x4002f4f	     0xf8f06feffff	                            jg 0x4002d5b	       698	syntax.c	FUNCTION_3	IF_1
0x4002f55	          0x4531e4	                          xor r12d, r12d	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4002f58	            0x85c0	                           test eax, eax	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4002f5a	        0x4c8d6b20	                   lea r13, [rbx + 0x20]	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4002f5e	     0xf8e30feffff	                           jle 0x4002d94	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4002f64	         0xf1f4000	                         nop dword [rax]	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4002f68	        0x498b7d00	                    mov rdi, qword [r13]	       708	syntax.c	FUNCTION_3	ELSE_1	CALL_3
0x4002f6c	        0x4183c401	                             add r12d, 1	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4002f70	        0x4983c518	                           add r13, 0x18	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4002f74	      0xe800000000	                          call 0x4002f79	       708	syntax.c	FUNCTION_3	ELSE_1	CALL_3
0x4002f79	    0x443ba3bc0000	           cmp r12d, dword [rbx + 0xbc] 	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4002f80	            0x7ce6	                            jl 0x4002f68	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4002f82	      0xe90dfeffff	                           jmp 0x4002d94	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4002f87	    0x660f1f840000	                    nop word [rax + rax]	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4002f90	    0xc783bc000000	               mov dword [rbx + 0xbc], 0	      1563	syntax.c	FUNCTION_19	IF_11	IF_12	IF_13
0x4002f9a	      0xe958ffffff	                           jmp 0x4002ef7	      1563	syntax.c	FUNCTION_19	IF_11	IF_12	IF_13
0x4002f9f	      0xe8bcf9ffff	              call sym.syn_stack_cleanup	      1521	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_8	CALL_3
0x4002fa4	    0x488b2d000000	            mov rbp, qword [0x04002fab] 	      1455	syntax.c	FUNCTION_18	FOR_1
0x4002fab	    0x488b0d000000	            mov rcx, qword [0x04002fb2] 	      1523	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_8	CALL_4
0x4002fb2	    0x488b85200300	           mov rax, qword [rbp + 0x320] 	      1455	syntax.c	FUNCTION_18	FOR_1
0x4002fb9	          0x4885c0	                           test rax, rax	      1455	syntax.c	FUNCTION_18	FOR_1
0x4002fbc	     0xf84bc000000	                            je 0x400307e	      1455	syntax.c	FUNCTION_18	FOR_1
0x4002fc2	        0x483b4808	                cmp rcx, qword [rax + 8]	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x4002fc6	     0xf84f2000000	                            je 0x40030be	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x4002fcc	            0x7d19	                           jge 0x4002fe7	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x4002fce	      0xe9ab000000	                           jmp 0x400307e	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x4002fd3	       0xf1f440000	                   nop dword [rax + rax]	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x4002fd8	        0x483b4b08	                cmp rcx, qword [rbx + 8]	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x4002fdc	     0xf84df000000	                            je 0x40030c1	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x4002fe2	            0x7c0b	                            jl 0x4002fef	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x4002fe4	          0x4889d8	                            mov rax, rbx	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x4002fe7	          0x488b18	                    mov rbx, qword [rax]	      1455	syntax.c	FUNCTION_18	FOR_1
0x4002fea	          0x4885db	                           test rbx, rbx	      1455	syntax.c	FUNCTION_18	FOR_1
0x4002fed	            0x75e9	                           jne 0x4002fd8	      1455	syntax.c	FUNCTION_18	FOR_1
0x4002fef	    0x8bb530030000	           mov esi, dword [rbp + 0x330] 	      1526	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_9
0x4002ff5	            0x85f6	                           test esi, esi	      1526	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_9
0x4002ff7	     0xf8400fdffff	                            je 0x4002cfd	      1526	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_9
0x4002ffd	    0x488b95280300	           mov rdx, qword [rbp + 0x328] 	      1532	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x4003004	          0x83ee01	                              sub esi, 1	      1534	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x4003007	          0x4889c3	                            mov rbx, rax	      1534	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x400300a	    0x8b0500000000	            mov eax, dword [0x04003010] 	      1534	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x4003010	          0x488b3a	                    mov rdi, qword [rdx]	      1533	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x4003013	    0x89b530030000	           mov dword [rbp + 0x330], esi 	      1534	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x4003019	    0x4889bd280300	           mov qword [rbp + 0x328], rdi 	      1533	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x4003020	      0xe9adfcffff	                           jmp 0x4002cd2	      1533	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x4003025	    0x8b0500000000	            mov eax, dword [0x0400302b] 	      1482	syntax.c	FUNCTION_19	FOR_1
0x400302b	            0x89c7	                            mov edi, eax	      1482	syntax.c	FUNCTION_19	FOR_1
0x400302d	          0x83ef01	                              sub edi, 1	      1482	syntax.c	FUNCTION_19	FOR_1
0x4003030	     0xf88be000000	                            js 0x40030f4	      1482	syntax.c	FUNCTION_19	FOR_1
0x4003036	          0x4863d7	                         movsxd rdx, edi	      1484	syntax.c	FUNCTION_19	FOR_1
0x4003039	    0x4c8b15000000	            mov r10, qword [0x04003040] 	      1484	syntax.c	FUNCTION_19	FOR_1
0x4003040	        0x4c8d04d2	                   lea r8, [rdx + rdx*8]	      1484	syntax.c	FUNCTION_19	FOR_1
0x4003044	        0x49c1e004	                               shl r8, 4	      1484	syntax.c	FUNCTION_19	FOR_1
0x4003048	        0x4b8d1402	                     lea rdx, [r10 + r8]	      1484	syntax.c	FUNCTION_19	FOR_1
0x400304c	        0x483b4a28	            cmp rcx, qword [rdx + 0x28] 	      1485	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4003050	     0xf8ea7fcffff	                           jle 0x4002cfd	      1485	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4003056	        0x483b4a18	            cmp rcx, qword [rdx + 0x18] 	      1486	syntax.c	FUNCTION_19	FOR_1	IF_1
0x400305a	     0xf8e9dfcffff	                           jle 0x4002cfd	      1486	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4003060	            0x31db	                            xor ebx, ebx	      1486	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4003062	      0xe9cbfbffff	                           jmp 0x4002c32	      1486	syntax.c	FUNCTION_19	FOR_1	IF_1
0x4003067	          0x488b03	                    mov rax, qword [rbx]	      1499	syntax.c	FUNCTION_19	IF_2	IF_3	IF_4
0x400306a	    0x488985200300	           mov qword [rbp + 0x320], rax 	      1499	syntax.c	FUNCTION_19	IF_2	IF_3	IF_4
0x4003071	      0xe9d6fcffff	                           jmp 0x4002d4c	      1499	syntax.c	FUNCTION_19	IF_2	IF_3	IF_4
0x4003076	          0x4c89cb	                             mov rbx, r9	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x4003079	      0xe93dfdffff	                           jmp 0x4002dbb	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x400307e	    0x8bb530030000	           mov esi, dword [rbp + 0x330] 	      1526	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_9
0x4003084	            0x85f6	                           test esi, esi	      1526	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_9
0x4003086	     0xf8471fcffff	                            je 0x4002cfd	      1526	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_9
0x400308c	    0x488b95280300	           mov rdx, qword [rbp + 0x328] 	      1532	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x4003093	          0x4989c1	                             mov r9, rax	      1455	syntax.c	FUNCTION_18	FOR_1
0x4003096	    0x8b0500000000	            mov eax, dword [0x0400309c] 	      1455	syntax.c	FUNCTION_18	FOR_1
0x400309c	          0x83ee01	                              sub esi, 1	      1534	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x400309f	          0x488b3a	                    mov rdi, qword [rdx]	      1533	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x40030a2	    0x89b530030000	           mov dword [rbp + 0x330], esi 	      1534	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x40030a8	    0x4889bd280300	           mov qword [rbp + 0x328], rdi 	      1533	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x40030af	          0x4c890a	                     mov qword [rdx], r9	      1538	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	IF_10
0x40030b2	    0x488995200300	           mov qword [rbp + 0x320], rdx 	      1539	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	IF_10
0x40030b9	      0xe91dfcffff	                           jmp 0x4002cdb	      1539	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	IF_10
0x40030be	          0x4889c3	                            mov rbx, rax	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x40030c1	    0x8b8530030000	           mov eax, dword [rbp + 0x330] 	      1526	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_9
0x40030c7	            0x85c0	                           test eax, eax	      1526	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_9
0x40030c9	     0xf842efcffff	                            je 0x4002cfd	      1526	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_9
0x40030cf	    0x488b95280300	           mov rdx, qword [rbp + 0x328] 	      1532	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x40030d6	          0x83e801	                              sub eax, 1	      1534	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x40030d9	          0x488b32	                    mov rsi, qword [rdx]	      1533	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x40030dc	    0x898530030000	           mov dword [rbp + 0x330], eax 	      1534	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x40030e2	    0x8b0500000000	            mov eax, dword [0x040030e8] 	      1534	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x40030e8	    0x4889b5280300	           mov qword [rbp + 0x328], rsi 	      1533	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x40030ef	      0xe9defbffff	                           jmp 0x4002cd2	      1533	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x40030f4	            0x31db	                            xor ebx, ebx	      1482	syntax.c	FUNCTION_19	FOR_1
0x40030f6	      0xe9a6fbffff	                           jmp 0x4002ca1	      1482	syntax.c	FUNCTION_19	FOR_1
0x40030fb	          0x4889da	                            mov rdx, rbx	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x40030fe	      0xe9e6fbffff	                           jmp 0x4002ce9	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
syn_cmd_case	DO,0:functions,0:IF,5:WHILE,0:CALL,10:ELSE,4:SWITCH,0:FOR,0	76
0x4000980	              0x55	                                push rbp	      3492	syntax.c	FUNCTION_46
0x4000981	              0x53	                                push rbx	      3492	syntax.c	FUNCTION_46
0x4000982	          0x4889fb	                            mov rbx, rdi	      3492	syntax.c	FUNCTION_46
0x4000985	        0x4883ec08	                              sub rsp, 8	      3492	syntax.c	FUNCTION_46
0x4000989	          0x488b2f	                    mov rbp, qword [rdi]	      3493	syntax.c	FUNCTION_46
0x400098c	          0x4889ef	                            mov rdi, rbp	      3496	syntax.c	FUNCTION_46	CALL_1
0x400098f	      0xe800000000	                          call 0x4000994	      3496	syntax.c	FUNCTION_46	CALL_1
0x4000994	          0x8b5330	            mov edx, dword [rbx + 0x30] 	      3497	syntax.c	FUNCTION_46	IF_1
0x4000997	        0x48894308	                mov qword [rbx + 8], rax	      3496	syntax.c	FUNCTION_46	CALL_1
0x400099b	            0x85d2	                           test edx, edx	      3497	syntax.c	FUNCTION_46	IF_1
0x400099d	            0x7411	                            je 0x40009b0	      3497	syntax.c	FUNCTION_46	IF_1
0x400099f	        0x4883c408	                              add rsp, 8	      3514	syntax.c	FUNCTION_46
0x40009a3	              0x5b	                                 pop rbx	      3514	syntax.c	FUNCTION_46
0x40009a4	              0x5d	                                 pop rbp	      3514	syntax.c	FUNCTION_46
0x40009a5	              0xc3	                                     ret	      3514	syntax.c	FUNCTION_46
0x40009a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3514	syntax.c	FUNCTION_46
0x40009b0	          0x4889ef	                            mov rdi, rbp	      3500	syntax.c	FUNCTION_46	CALL_2
0x40009b3	      0xe800000000	                          call 0x40009b8	      3500	syntax.c	FUNCTION_46	CALL_2
0x40009b8	        0x807d0000	                       cmp byte [rbp], 0	      3501	syntax.c	FUNCTION_46	IF_2
0x40009bc	          0x4889c3	                            mov rbx, rax	      3500	syntax.c	FUNCTION_46	CALL_2
0x40009bf	            0x746f	                            je 0x4000a30	      3501	syntax.c	FUNCTION_46	IF_2
0x40009c1	      0xba05000000	                              mov edx, 5	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x40009c6	      0xbe00000000	                              mov esi, 0	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x40009cb	          0x4889ef	                            mov rdi, rbp	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x40009ce	      0xe800000000	                          call 0x40009d3	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x40009d3	            0x85c0	                           test eax, eax	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x40009d5	            0x7510	                           jne 0x40009e7	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x40009d7	          0x4889d8	                            mov rax, rbx	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x40009da	          0x4829e8	                            sub rax, rbp	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x40009dd	        0x4883f805	                              cmp rax, 5	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x40009e1	     0xf84a9000000	                            je 0x4000a90	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x40009e7	      0xba06000000	                              mov edx, 6	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x40009ec	      0xbe00000000	                              mov esi, 0	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x40009f1	          0x4889ef	                            mov rdi, rbp	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x40009f4	      0xe800000000	                          call 0x40009f9	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x40009f9	            0x85c0	                           test eax, eax	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x40009fb	            0x7509	                           jne 0x4000a06	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x40009fd	          0x4829eb	                            sub rbx, rbp	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x4000a00	        0x4883fb06	                              cmp rbx, 6	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x4000a04	            0x746a	                            je 0x4000a70	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x4000a06	      0xbe00000000	                              mov esi, 0	      3513	syntax.c	FUNCTION_46	CALL_10
0x4000a0b	            0x31ff	                            xor edi, edi	      3513	syntax.c	FUNCTION_46	CALL_10
0x4000a0d	      0xba05000000	                              mov edx, 5	      3513	syntax.c	FUNCTION_46	CALL_10
0x4000a12	      0xe800000000	                          call 0x4000a17	      3513	syntax.c	FUNCTION_46	CALL_10
0x4000a17	        0x4883c408	                              add rsp, 8	      3514	syntax.c	FUNCTION_46
0x4000a1b	          0x4889ee	                            mov rsi, rbp	      3513	syntax.c	FUNCTION_46	CALL_10
0x4000a1e	          0x4889c7	                            mov rdi, rax	      3513	syntax.c	FUNCTION_46	CALL_10
0x4000a21	              0x5b	                                 pop rbx	      3514	syntax.c	FUNCTION_46
0x4000a22	              0x5d	                                 pop rbp	      3514	syntax.c	FUNCTION_46
0x4000a23	      0xe900000000	                           jmp 0x4000a28	      3513	syntax.c	FUNCTION_46	CALL_10
0x4000a28	     0xf1f84000000	                   nop dword [rax + rax]	      3513	syntax.c	FUNCTION_46	CALL_10
0x4000a30	    0x488b05000000	            mov rax, qword [0x04000a37] 	      3503	syntax.c	FUNCTION_46	IF_2	IF_3
0x4000a37	      0xba05000000	                              mov edx, 5	      3504	syntax.c	FUNCTION_46	IF_2	CALL_4
0x4000a3c	      0xbe00000000	                              mov esi, 0	      3504	syntax.c	FUNCTION_46	IF_2	CALL_4
0x4000a41	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3503	syntax.c	FUNCTION_46	IF_2	IF_3
0x4000a45	    0x8b8058020000	           mov eax, dword [rax + 0x258] 	      3503	syntax.c	FUNCTION_46	IF_2	IF_3
0x4000a4b	            0x85c0	                           test eax, eax	      3503	syntax.c	FUNCTION_46	IF_2	IF_3
0x4000a4d	            0x7505	                           jne 0x4000a54	      3503	syntax.c	FUNCTION_46	IF_2	IF_3
0x4000a4f	      0xbe00000000	                              mov esi, 0	      3506	syntax.c	FUNCTION_46	IF_2	CALL_6
0x4000a54	            0x31ff	                            xor edi, edi	      3506	syntax.c	FUNCTION_46	IF_2	CALL_6
0x4000a56	      0xe800000000	                          call 0x4000a5b	      3506	syntax.c	FUNCTION_46	IF_2	CALL_6
0x4000a5b	        0x4883c408	                              add rsp, 8	      3514	syntax.c	FUNCTION_46
0x4000a5f	          0x4889c7	                            mov rdi, rax	      3506	syntax.c	FUNCTION_46	IF_2	CALL_6
0x4000a62	              0x5b	                                 pop rbx	      3514	syntax.c	FUNCTION_46
0x4000a63	              0x5d	                                 pop rbp	      3514	syntax.c	FUNCTION_46
0x4000a64	      0xe900000000	                           jmp 0x4000a69	      3506	syntax.c	FUNCTION_46	IF_2	CALL_6
0x4000a69	     0xf1f80000000	                         nop dword [rax]	      3506	syntax.c	FUNCTION_46	IF_2	CALL_6
0x4000a70	    0x488b05000000	            mov rax, qword [0x04000a77] 	      3511	syntax.c	FUNCTION_46	ELSE_3	IF_5
0x4000a77	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3511	syntax.c	FUNCTION_46	ELSE_3	IF_5
0x4000a7b	    0xc78058020000	              mov dword [rax + 0x258], 1	      3511	syntax.c	FUNCTION_46	ELSE_3	IF_5
0x4000a85	      0xe915ffffff	                           jmp 0x400099f	      3511	syntax.c	FUNCTION_46	ELSE_3	IF_5
0x4000a8a	    0x660f1f440000	                    nop word [rax + rax]	      3511	syntax.c	FUNCTION_46	ELSE_3	IF_5
0x4000a90	    0x488b05000000	            mov rax, qword [0x04000a97] 	      3509	syntax.c	FUNCTION_46	ELSE_2	IF_4
0x4000a97	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3509	syntax.c	FUNCTION_46	ELSE_2	IF_4
0x4000a9b	    0xc78058020000	              mov dword [rax + 0x258], 0	      3509	syntax.c	FUNCTION_46	ELSE_2	IF_4
0x4000aa5	      0xe9f5feffff	                           jmp 0x400099f	      3509	syntax.c	FUNCTION_46	ELSE_2	IF_4
syn_name2attr	DO,0:functions,0:IF,1:WHILE,0:CALL,2:ELSE,0:SWITCH,0:FOR,0	86
0x400dd60	            0x4156	                                push r14	      9654	syntax.c	FUNCTION_149
0x400dd62	            0x4155	                                push r13	      9654	syntax.c	FUNCTION_149
0x400dd64	          0x4889fe	                            mov rsi, rdi	      9654	syntax.c	FUNCTION_149
0x400dd67	            0x4154	                                push r12	      9654	syntax.c	FUNCTION_149
0x400dd69	              0x55	                                push rbp	      9654	syntax.c	FUNCTION_149
0x400dd6a	      0xbac7000000	                           mov edx, 0xc7	      9639	syntax.c	FUNCTION_148	CALL_1
0x400dd6f	              0x53	                                push rbx	      9654	syntax.c	FUNCTION_149
0x400dd70	    0x4881ecd00000	                           sub rsp, 0xd0	      9654	syntax.c	FUNCTION_149
0x400dd77	          0x4889e7	                            mov rdi, rsp	      9639	syntax.c	FUNCTION_148	CALL_1
0x400dd7a	    0x64488b042528	                mov rax, qword fs:[0x28]	      9654	syntax.c	FUNCTION_149
0x400dd83	    0x48898424c800	             mov qword [rsp + 0xc8], rax	      9654	syntax.c	FUNCTION_149
0x400dd8b	            0x31c0	                            xor eax, eax	      9654	syntax.c	FUNCTION_149
0x400dd8d	      0xe800000000	                          call 0x400dd92	      9639	syntax.c	FUNCTION_148	CALL_1
0x400dd92	          0x4889e7	                            mov rdi, rsp	      9640	syntax.c	FUNCTION_148	CALL_2
0x400dd95	      0xe800000000	                          call 0x400dd9a	      9640	syntax.c	FUNCTION_148	CALL_2
0x400dd9a	    0x486305000000	         movsxd rax, dword [0x0400dda1] 	      9641	syntax.c	FUNCTION_148	FOR_1
0x400dda1	    0x4c8b25000000	            mov r12, qword [0x0400dda8] 	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x400dda8	        0x488d14c0	                  lea rdx, [rax + rax*8]	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x400ddac	          0x4989c5	                            mov r13, rax	      9641	syntax.c	FUNCTION_148	FOR_1
0x400ddaf	          0x4963dd	                        movsxd rbx, r13d	      9641	syntax.c	FUNCTION_148	FOR_1
0x400ddb2	        0x488d0450	                  lea rax, [rax + rdx*2]	      9641	syntax.c	FUNCTION_148	FOR_1
0x400ddb6	    0x498dacc470ff	           lea rbp, [r12 + rax*8 - 0x90]	      9641	syntax.c	FUNCTION_148	FOR_1
0x400ddbe	            0xeb1f	                           jmp 0x400dddf	      9641	syntax.c	FUNCTION_148	FOR_1
0x400ddc0	        0x488b7500	                    mov rsi, qword [rbp]	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x400ddc4	          0x4885f6	                           test rsi, rsi	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x400ddc7	            0x740c	                            je 0x400ddd5	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x400ddc9	          0x4889e7	                            mov rdi, rsp	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400ddcc	      0xe800000000	                          call 0x400ddd1	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400ddd1	            0x85c0	                           test eax, eax	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400ddd3	            0x7413	                            je 0x400dde8	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400ddd5	    0x4881ed980000	                           sub rbp, 0x98	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400dddc	          0x4963de	                        movsxd rbx, r14d	      9654	syntax.c	FUNCTION_149
0x400dddf	          0x4189de	                           mov r14d, ebx	      9641	syntax.c	FUNCTION_148	FOR_1
0x400dde2	        0x4183ee01	                             sub r14d, 1	      9641	syntax.c	FUNCTION_148	FOR_1
0x400dde6	            0x79d8	                           jns 0x400ddc0	      9641	syntax.c	FUNCTION_148	FOR_1
0x400dde8	            0x31c0	                            xor eax, eax	      9659	syntax.c	FUNCTION_149
0x400ddea	          0x83fb00	                              cmp ebx, 0	      9657	syntax.c	FUNCTION_149	IF_1
0x400dded	            0x744c	                            je 0x400de3b	      9657	syntax.c	FUNCTION_149	IF_1
0x400ddef	            0x7e74	                           jle 0x400de65	      9879	syntax.c	FUNCTION_159	IF_1
0x400ddf1	          0x4139dd	                           cmp r13d, ebx	      9879	syntax.c	FUNCTION_159	IF_1
0x400ddf4	      0xb864000000	                           mov eax, 0x64	      9879	syntax.c	FUNCTION_159	IF_1
0x400ddf9	            0x7d0e	                           jge 0x400de09	      9879	syntax.c	FUNCTION_159	IF_1
0x400ddfb	            0xeb68	                           jmp 0x400de65	      9879	syntax.c	FUNCTION_159	IF_1
0x400ddfd	           0xf1f00	                         nop dword [rax]	      9879	syntax.c	FUNCTION_159	IF_1
0x400de00	            0x85db	                           test ebx, ebx	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x400de02	            0x7421	                            je 0x400de25	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x400de04	          0x83e801	                              sub eax, 1	      9886	syntax.c	FUNCTION_159	FOR_1
0x400de07	            0x7476	                            je 0x400de7f	      9886	syntax.c	FUNCTION_159	FOR_1
0x400de09	        0x488d14db	                  lea rdx, [rbx + rbx*8]	      9888	syntax.c	FUNCTION_159	FOR_1
0x400de0d	        0x488d1453	                  lea rdx, [rbx + rdx*2]	      9888	syntax.c	FUNCTION_159	FOR_1
0x400de11	    0x498d94d468ff	           lea rdx, [r12 + rdx*8 - 0x98]	      9888	syntax.c	FUNCTION_159	FOR_1
0x400de19	    0x48639a880000	         movsxd rbx, dword [rdx + 0x88] 	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x400de20	          0x4139dd	                           cmp r13d, ebx	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x400de23	            0x7ddb	                           jge 0x400de00	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x400de25	    0x8b0d00000000	            mov ecx, dword [0x0400de2b] 	      9826	syntax.c	FUNCTION_156	IF_1
0x400de2b	            0x85c9	                           test ecx, ecx	      9826	syntax.c	FUNCTION_156	IF_1
0x400de2d	            0x7531	                           jne 0x400de60	      9826	syntax.c	FUNCTION_156	IF_1
0x400de2f	    0x833d00000000	               cmp dword [0x0400de36], 1	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x400de36	            0x7e38	                           jle 0x400de70	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x400de38	          0x8b423c	            mov eax, dword [rdx + 0x3c] 	      9831	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x400de3b	    0x488b8c24c800	            mov rcx, qword [rsp + 0xc8] 	      9660	syntax.c	FUNCTION_149
0x400de43	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      9660	syntax.c	FUNCTION_149
0x400de4c	            0x7543	                           jne 0x400de91	      9660	syntax.c	FUNCTION_149
0x400de4e	    0x4881c4d00000	                           add rsp, 0xd0	      9660	syntax.c	FUNCTION_149
0x400de55	              0x5b	                                 pop rbx	      9660	syntax.c	FUNCTION_149
0x400de56	              0x5d	                                 pop rbp	      9660	syntax.c	FUNCTION_149
0x400de57	            0x415c	                                 pop r12	      9660	syntax.c	FUNCTION_149
0x400de59	            0x415d	                                 pop r13	      9660	syntax.c	FUNCTION_149
0x400de5b	            0x415e	                                 pop r14	      9660	syntax.c	FUNCTION_149
0x400de5d	              0xc3	                                     ret	      9660	syntax.c	FUNCTION_149
0x400de5e	            0x6690	                                     nop	      9660	syntax.c	FUNCTION_149
0x400de60	          0x8b4268	            mov eax, dword [rdx + 0x68] 	      9827	syntax.c	FUNCTION_156	IF_1
0x400de63	            0xebd6	                           jmp 0x400de3b	      9827	syntax.c	FUNCTION_156	IF_1
0x400de65	    0x498d942468ff	                   lea rdx, [r12 - 0x98]	      9827	syntax.c	FUNCTION_156	IF_1
0x400de6d	            0xebb6	                           jmp 0x400de25	      9827	syntax.c	FUNCTION_156	IF_1
0x400de6f	              0x90	                                     nop	      9827	syntax.c	FUNCTION_156	IF_1
0x400de70	    0x8b0500000000	            mov eax, dword [0x0400de76] 	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x400de76	            0x85c0	                           test eax, eax	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x400de78	            0x75be	                           jne 0x400de38	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x400de7a	          0x8b4228	            mov eax, dword [rdx + 0x28] 	      9833	syntax.c	FUNCTION_156	ELSE_2
0x400de7d	            0xebbc	                           jmp 0x400de3b	      9833	syntax.c	FUNCTION_156	ELSE_2
0x400de7f	        0x488d04db	                  lea rax, [rbx + rbx*8]	      9833	syntax.c	FUNCTION_156	ELSE_2
0x400de83	        0x488d0443	                  lea rax, [rbx + rax*2]	      9833	syntax.c	FUNCTION_156	ELSE_2
0x400de87	    0x498d94c468ff	           lea rdx, [r12 + rax*8 - 0x98]	      9833	syntax.c	FUNCTION_156	ELSE_2
0x400de8f	            0xeb94	                           jmp 0x400de25	      9833	syntax.c	FUNCTION_156	ELSE_2
0x400de91	      0xe800000000	                          call 0x400de96	      9660	syntax.c	FUNCTION_149
find_endpos	DO,0:functions,0:IF,22:WHILE,0:CALL,14:ELSE,5:SWITCH,0:FOR,4	410
0x4003a80	            0x4157	                                push r15	      2944	syntax.c	FUNCTION_37
0x4003a82	            0x4156	                                push r14	      2944	syntax.c	FUNCTION_37
0x4003a84	            0x4155	                                push r13	      2944	syntax.c	FUNCTION_37
0x4003a86	            0x4154	                                push r12	      2944	syntax.c	FUNCTION_37
0x4003a88	              0x55	                                push rbp	      2944	syntax.c	FUNCTION_37
0x4003a89	              0x53	                                push rbx	      2944	syntax.c	FUNCTION_37
0x4003a8a	    0x4881ec580300	                          sub rsp, 0x358	      2944	syntax.c	FUNCTION_37
0x4003a91	    0x488b84249003	           mov rax, qword [rsp + 0x390] 	      2944	syntax.c	FUNCTION_37
0x4003a99	      0x4889542408	                mov qword [rsp + 8], rdx	      2944	syntax.c	FUNCTION_37
0x4003a9e	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      2944	syntax.c	FUNCTION_37
0x4003aa3	      0x4c89442420	              mov qword [rsp + 0x20], r8	      2944	syntax.c	FUNCTION_37
0x4003aa8	      0x4c894c2410	              mov qword [rsp + 0x10], r9	      2944	syntax.c	FUNCTION_37
0x4003aad	    0x488b9c249803	           mov rbx, qword [rsp + 0x398] 	      2944	syntax.c	FUNCTION_37
0x4003ab5	      0x4889442428	             mov qword [rsp + 0x28], rax	      2944	syntax.c	FUNCTION_37
0x4003aba	    0x64488b042528	                mov rax, qword fs:[0x28]	      2944	syntax.c	FUNCTION_37
0x4003ac3	    0x488984244803	            mov qword [rsp + 0x348], rax	      2944	syntax.c	FUNCTION_37
0x4003acb	            0x31c0	                            xor eax, eax	      2944	syntax.c	FUNCTION_37
0x4003acd	            0x85ff	                           test edi, edi	      2957	syntax.c	FUNCTION_37	IF_1
0x4003acf	            0x7830	                            js 0x4003b01	      2957	syntax.c	FUNCTION_37	IF_1
0x4003ad1	    0x488b05000000	            mov rax, qword [0x04003ad8] 	      2965	syntax.c	FUNCTION_37
0x4003ad8	          0x4989f6	                            mov r14, rsi	      2965	syntax.c	FUNCTION_37
0x4003adb	    0x488b90700200	           mov rdx, qword [rax + 0x270] 	      2965	syntax.c	FUNCTION_37
0x4003ae2	          0x4863c7	                         movsxd rax, edi	      2965	syntax.c	FUNCTION_37
0x4003ae5	        0x488d0480	                  lea rax, [rax + rax*4]	      2965	syntax.c	FUNCTION_37
0x4003ae9	        0x48c1e005	                              shl rax, 5	      2965	syntax.c	FUNCTION_37
0x4003aed	        0x803c0202	                 cmp byte [rdx + rax], 2	      2966	syntax.c	FUNCTION_37	IF_2
0x4003af1	            0x743d	                            je 0x4003b30	      2966	syntax.c	FUNCTION_37	IF_2
0x4003af3	          0x488b06	                    mov rax, qword [rsi]	      2968	syntax.c	FUNCTION_37	IF_2
0x4003af6	        0x488b5608	                mov rdx, qword [rsi + 8]	      2968	syntax.c	FUNCTION_37	IF_2
0x4003afa	          0x488901	                    mov qword [rcx], rax	      2968	syntax.c	FUNCTION_37	IF_2
0x4003afd	        0x48895108	                mov qword [rcx + 8], rdx	      2968	syntax.c	FUNCTION_37	IF_2
0x4003b01	    0x488b84244803	           mov rax, qword [rsp + 0x348] 	      3166	syntax.c	FUNCTION_37
0x4003b09	    0x644833042528	                xor rax, qword fs:[0x28]	      3166	syntax.c	FUNCTION_37
0x4003b12	     0xf851b070000	                           jne 0x4004233	      3166	syntax.c	FUNCTION_37
0x4003b18	    0x4881c4580300	                          add rsp, 0x358	      3166	syntax.c	FUNCTION_37
0x4003b1f	              0x5b	                                 pop rbx	      3166	syntax.c	FUNCTION_37
0x4003b20	              0x5d	                                 pop rbp	      3166	syntax.c	FUNCTION_37
0x4003b21	            0x415c	                                 pop r12	      3166	syntax.c	FUNCTION_37
0x4003b23	            0x415d	                                 pop r13	      3166	syntax.c	FUNCTION_37
0x4003b25	            0x415e	                                 pop r14	      3166	syntax.c	FUNCTION_37
0x4003b27	            0x415f	                                 pop r15	      3166	syntax.c	FUNCTION_37
0x4003b29	              0xc3	                                     ret	      3166	syntax.c	FUNCTION_37
0x4003b2a	    0x660f1f440000	                    nop word [rax + rax]	      3166	syntax.c	FUNCTION_37
0x4003b30	    0x488d8402a000	            lea rax, [rdx + rax + 0xa0] 	      3166	syntax.c	FUNCTION_37
0x4003b38	            0xeb08	                           jmp 0x4003b42	      3166	syntax.c	FUNCTION_37
0x4003b3a	    0x660f1f440000	                    nop word [rax + rax]	      3166	syntax.c	FUNCTION_37
0x4003b40	            0x89cf	                            mov edi, ecx	      2980	syntax.c	FUNCTION_37	FOR_1
0x4003b42	          0x4989c5	                            mov r13, rax	      2977	syntax.c	FUNCTION_37	FOR_1
0x4003b45	    0x488d80a00000	                   lea rax, [rax + 0xa0]	      2977	syntax.c	FUNCTION_37	FOR_1
0x4003b4c	     0xfb69060ffff	            movzx edx, byte [rax - 0xa0]	      2978	syntax.c	FUNCTION_37	FOR_1	IF_3
0x4003b53	          0x8d4f01	                      lea ecx, [rdi + 1]	      2980	syntax.c	FUNCTION_37	FOR_1
0x4003b56	          0x80fa02	                               cmp dl, 2	      2978	syntax.c	FUNCTION_37	FOR_1	IF_3
0x4003b59	            0x74e5	                            je 0x4003b40	      2978	syntax.c	FUNCTION_37	FOR_1	IF_3
0x4003b5b	          0x80fa04	                               cmp dl, 4	      2986	syntax.c	FUNCTION_37	IF_4
0x4003b5e	        0x894c2434	             mov dword [rsp + 0x34], ecx	      2986	syntax.c	FUNCTION_37	IF_4
0x4003b62	     0xf85d0060000	                           jne 0x4004238	      2986	syntax.c	FUNCTION_37	IF_4
0x4003b68	          0x8d4702	                      lea eax, [rdi + 2]	      2989	syntax.c	FUNCTION_37	IF_4
0x4003b6b	        0x89442434	             mov dword [rsp + 0x34], eax	      2989	syntax.c	FUNCTION_37	IF_4
0x4003b6f	    0x488b3d000000	            mov rdi, qword [0x04003b76] 	      2995	syntax.c	FUNCTION_37	CALL_1
0x4003b76	      0xe800000000	                          call 0x4003b7b	      2995	syntax.c	FUNCTION_37	CALL_1
0x4003b7b	          0x4889df	                            mov rdi, rbx	      2996	syntax.c	FUNCTION_37	CALL_2
0x4003b7e	      0xe800000000	                          call 0x4003b83	      2996	syntax.c	FUNCTION_37	CALL_2
0x4003b83	    0x488b1d000000	            mov rbx, qword [0x04003b8a] 	      1014	syntax.c	FUNCTION_6	IF_1
0x4003b8a	    0x488905000000	            mov qword [0x04003b91], rax 	      2996	syntax.c	FUNCTION_37	CALL_2
0x4003b91	        0x418b4608	                mov eax, dword [r14 + 8]	      2998	syntax.c	FUNCTION_37
0x4003b95	    0xc78424e00100	              mov dword [rsp + 0x1e0], 0	      3000	syntax.c	FUNCTION_37
0x4003ba0	          0x4189c7	                           mov r15d, eax	      2998	syntax.c	FUNCTION_37
0x4003ba3	    0x488b05000000	            mov rax, qword [0x04003baa] 	      1014	syntax.c	FUNCTION_6	IF_1
0x4003baa	    0x483983b00400	           cmp qword [rbx + 0x4b0], rax 	      1014	syntax.c	FUNCTION_6	IF_1
0x4003bb1	            0x745d	                            je 0x4003c10	      1014	syntax.c	FUNCTION_6	IF_1
0x4003bb3	    0x488b3d000000	            mov rdi, qword [0x04003bba] 	      1016	syntax.c	FUNCTION_6	IF_1	CALL_1
0x4003bba	      0xba20000000	                           mov edx, 0x20	        59	string3.h	FUNCTION_171	CALL_3
0x4003bbf	    0x488b87a00900	           mov rax, qword [rdi + 0x9a0] 	        59	string3.h	FUNCTION_171	CALL_3
0x4003bc6	    0x4881c7a00900	                          add rdi, 0x9a0	        59	string3.h	FUNCTION_171	CALL_3
0x4003bcd	    0x488984242003	            mov qword [rsp + 0x320], rax	        59	string3.h	FUNCTION_171	CALL_3
0x4003bd5	        0x488b4708	                mov rax, qword [rdi + 8]	        59	string3.h	FUNCTION_171	CALL_3
0x4003bd9	    0x488984242803	            mov qword [rsp + 0x328], rax	        59	string3.h	FUNCTION_171	CALL_3
0x4003be1	        0x488b4710	            mov rax, qword [rdi + 0x10] 	        59	string3.h	FUNCTION_171	CALL_3
0x4003be5	    0x488984243003	            mov qword [rsp + 0x330], rax	        59	string3.h	FUNCTION_171	CALL_3
0x4003bed	        0x488b4718	            mov rax, qword [rdi + 0x18] 	        59	string3.h	FUNCTION_171	CALL_3
0x4003bf1	    0x488984243803	            mov qword [rsp + 0x338], rax	        59	string3.h	FUNCTION_171	CALL_3
0x4003bf9	    0x488b05000000	            mov rax, qword [0x04003c00] 	      1017	syntax.c	FUNCTION_6	IF_1	CALL_2
0x4003c00	        0x488b7010	            mov rsi, qword [rax + 0x10] 	        59	string3.h	FUNCTION_171	CALL_3
0x4003c04	    0x4881c68c0400	                          add rsi, 0x48c	        59	string3.h	FUNCTION_171	CALL_3
0x4003c0b	      0xe800000000	                          call 0x4003c10	        59	string3.h	FUNCTION_171	CALL_3
0x4003c10	      0x4863442434	         movsxd rax, dword [rsp + 0x34] 	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4003c15	          0x4589fc	                          mov r12d, r15d	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4003c18	      0x4c896c2438	             mov qword [rsp + 0x38], r13	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4003c1d	        0x488d0480	                  lea rax, [rax + rax*4]	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4003c21	        0x48c1e005	                              shl rax, 5	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4003c25	      0x4889442440	             mov qword [rsp + 0x40], rax	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4003c2a	    0x4805a0000000	                           add rax, 0xa0	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4003c30	      0x4889442448	             mov qword [rsp + 0x48], rax	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4003c35	        0x8b442434	            mov eax, dword [rsp + 0x34] 	      3011	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4003c39	    0x3b8360020000	           cmp eax, dword [rbx + 0x260] 	      3011	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4003c3f	     0xf8d04030000	                           jge 0x4003f49	      3011	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4003c45	      0x4c8b6c2440	            mov r13, qword [rsp + 0x40] 	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4003c4a	    0x4c03ab700200	            add r13, qword [rbx + 0x270]	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4003c51	      0x41807d0003	                       cmp byte [r13], 3	      3017	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_5
0x4003c56	     0xf85ed020000	                           jne 0x4003f49	      3017	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_5
0x4003c5c	      0x488b6c2448	            mov rbp, qword [rsp + 0x48] 	      3017	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_5
0x4003c61	            0x89c3	                            mov ebx, eax	      3017	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_5
0x4003c63	    0xc7442430ffff	     mov dword [rsp + 0x30], 0xffffffff 	      3017	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_5
0x4003c6b	      0xe921010000	                           jmp 0x4003d91	      3017	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_5
0x4003c70	    0x488b15000000	            mov rdx, qword [0x04003c77] 	      3330	syntax.c	FUNCTION_43
0x4003c77	        0x4883ec08	                              sub rsp, 8	      3331	syntax.c	FUNCTION_43	CALL_2
0x4003c7b	    0x4c8b0d000000	              mov r9, qword [0x04003c82]	      3331	syntax.c	FUNCTION_43	CALL_2
0x4003c82	    0x488b35000000	            mov rsi, qword [0x04003c89] 	      3331	syntax.c	FUNCTION_43	CALL_2
0x4003c89	          0x4c89f9	                            mov rcx, r15	      3331	syntax.c	FUNCTION_43	CALL_2
0x4003c8c	    0x488b82981500	          mov rax, qword [rdx + 0x1598] 	      3330	syntax.c	FUNCTION_43
0x4003c93	    0x898424d40100	            mov dword [rsp + 0x1d4], eax	      3330	syntax.c	FUNCTION_43
0x4003c9a	      0x488d442464	                   lea rax, [rsp + 0x64]	      3331	syntax.c	FUNCTION_43	CALL_2
0x4003c9f	              0x50	                                push rax	      3331	syntax.c	FUNCTION_43	CALL_2
0x4003ca0	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	      3331	syntax.c	FUNCTION_43	CALL_2
0x4003ca8	      0xe800000000	                          call 0x4003cad	      3331	syntax.c	FUNCTION_43	CALL_2
0x4003cad	    0x448b0d000000	            mov r9d, dword [0x04003cb4] 	      3340	syntax.c	FUNCTION_43	IF_2
0x4003cb4	          0x4889c2	                            mov rdx, rax	      3331	syntax.c	FUNCTION_43	CALL_2
0x4003cb7	              0x5f	                                 pop rdi	      3340	syntax.c	FUNCTION_43	IF_2
0x4003cb8	            0x4158	                                  pop r8	      3340	syntax.c	FUNCTION_43	IF_2
0x4003cba	          0x4585c9	                           test r9d, r9d	      3340	syntax.c	FUNCTION_43	IF_2
0x4003cbd	     0xf852d010000	                           jne 0x4003df0	      3340	syntax.c	FUNCTION_43	IF_2
0x4003cc3	        0x8b4c245c	            mov ecx, dword [rsp + 0x5c] 	      3352	syntax.c	FUNCTION_43	IF_5
0x4003cc7	            0x85c9	                           test ecx, ecx	      3352	syntax.c	FUNCTION_43	IF_5
0x4003cc9	            0x7415	                            je 0x4003ce0	      3352	syntax.c	FUNCTION_43	IF_5
0x4003ccb	    0x488b05000000	            mov rax, qword [0x04003cd2] 	      3353	syntax.c	FUNCTION_43	IF_5
0x4003cd2	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3353	syntax.c	FUNCTION_43	IF_5
0x4003cd6	    0xc78054020000	              mov dword [rax + 0x254], 1	      3353	syntax.c	FUNCTION_43	IF_5
0x4003ce0	            0x85d2	                           test edx, edx	      3356	syntax.c	FUNCTION_43	IF_6
0x4003ce2	     0xf8e74010000	                           jle 0x4003e5c	      3356	syntax.c	FUNCTION_43	IF_6
0x4003ce8	    0x4c01bc242801	           add qword [rsp + 0x128], r15 	      3359	syntax.c	FUNCTION_43	IF_6
0x4003cf0	    0x4c01bc248800	            add qword [rsp + 0x88], r15 	      3358	syntax.c	FUNCTION_43	IF_6
0x4003cf8	      0x837c2430ff	cmp dword [rsp + 0x30], 0xffffffffffffffff	      3030	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4003cfd	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	      3027	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4003d05	        0x49894568	             mov qword [r13 + 0x68], rax	      3027	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4003d09	            0x7410	                            je 0x4003d1b	      3030	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4003d0b	    0x8b8424e00100	           mov eax, dword [rsp + 0x1e0] 	      3030	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4003d12	    0x398424900000	            cmp dword [rsp + 0x90], eax 	      3030	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4003d19	            0x7d44	                           jge 0x4003d5f	      3030	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4003d1b	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	      3034	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4003d23	    0x488b94249000	            mov rdx, qword [rsp + 0x90] 	      3034	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4003d2b	        0x895c2430	             mov dword [rsp + 0x30], ebx	      3035	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4003d2f	    0x48898424d801	            mov qword [rsp + 0x1d8], rax	      3034	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4003d37	    0x48899424e001	            mov qword [rsp + 0x1e0], rdx	      3034	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4003d3f	    0x488b84242801	           mov rax, qword [rsp + 0x128] 	      3035	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4003d47	    0x488b94243001	           mov rdx, qword [rsp + 0x130] 	      3035	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4003d4f	    0x488984247802	            mov qword [rsp + 0x278], rax	      3035	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4003d57	    0x488994248002	            mov qword [rsp + 0x280], rdx	      3035	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4003d5f	    0x488b05000000	            mov rax, qword [0x04003d66] 	      3011	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4003d66	          0x83c301	                              add ebx, 1	      3011	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4003d69	    0x399860020000	           cmp dword [rax + 0x260], ebx 	      3011	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4003d6f	     0xf8efb000000	                           jle 0x4003e70	      3011	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4003d75	          0x4989ed	                            mov r13, rbp	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4003d78	    0x4c03a8700200	            add r13, qword [rax + 0x270]	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4003d7f	    0x4881c5a00000	                           add rbp, 0xa0	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4003d86	      0x41807d0003	                       cmp byte [r13], 3	      3017	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_5
0x4003d8b	     0xf85df000000	                           jne 0x4003e70	      3017	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_5
0x4003d91	          0x4589e0	                           mov r8d, r12d	      3017	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_5
0x4003d94	        0x452b4520	             sub r8d, dword [r13 + 0x20]	      3017	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_5
0x4003d98	      0xb800000000	                              mov eax, 0	      3017	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_5
0x4003d9d	    0x448b15000000	           mov r10d, dword [0x04003da4] 	      3326	syntax.c	FUNCTION_43	IF_1
0x4003da4	          0x4d8b3e	                    mov r15, qword [r14]	      3025	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_4
0x4003da7	    0xc744245c0000	               mov dword [rsp + 0x5c], 0	      3321	syntax.c	FUNCTION_43
0x4003daf	        0x440f48c0	                          cmovs r8d, eax	      3321	syntax.c	FUNCTION_43
0x4003db3	        0x418b452c	            mov eax, dword [r13 + 0x2c] 	      3023	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4003db7	          0x4585d2	                         test r10d, r10d	      3326	syntax.c	FUNCTION_43	IF_1
0x4003dba	    0x898424c80100	            mov dword [rsp + 0x1c8], eax	      3023	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4003dc1	        0x498b4568	            mov rax, qword [r13 + 0x68] 	      3024	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4003dc5	    0x488984248000	             mov qword [rsp + 0x80], rax	      3024	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4003dcd	     0xf849dfeffff	                            je 0x4003c70	      3326	syntax.c	FUNCTION_43	IF_1
0x4003dd3	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      3327	syntax.c	FUNCTION_43	CALL_1
0x4003dd8	        0x44890424	                    mov dword [rsp], r8d	      3327	syntax.c	FUNCTION_43	CALL_1
0x4003ddc	      0xe800000000	                          call 0x4003de1	      3327	syntax.c	FUNCTION_43	CALL_1
0x4003de1	        0x448b0424	                    mov r8d, dword [rsp]	      3327	syntax.c	FUNCTION_43	CALL_1
0x4003de5	      0xe986feffff	                           jmp 0x4003c70	      3327	syntax.c	FUNCTION_43	CALL_1
0x4003dea	    0x660f1f440000	                    nop word [rax + rax]	      3327	syntax.c	FUNCTION_43	CALL_1
0x4003df0	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      3342	syntax.c	FUNCTION_43	IF_2	CALL_3
0x4003df5	        0x48890424	                    mov qword [rsp], rax	      3342	syntax.c	FUNCTION_43	IF_2	CALL_3
0x4003df9	      0xe800000000	                          call 0x4003dfe	      3342	syntax.c	FUNCTION_43	IF_2	CALL_3
0x4003dfe	        0x498d7d70	                   lea rdi, [r13 + 0x70]	      3343	syntax.c	FUNCTION_43	IF_2	CALL_4
0x4003e02	      0x488d742470	                   lea rsi, [rsp + 0x70]	      3343	syntax.c	FUNCTION_43	IF_2	CALL_4
0x4003e07	      0xe800000000	                          call 0x4003e0c	      3343	syntax.c	FUNCTION_43	IF_2	CALL_4
0x4003e0c	    0x498db5800000	                   lea rsi, [r13 + 0x80]	      3344	syntax.c	FUNCTION_43	IF_2	IF_3	CALL_5
0x4003e13	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      3344	syntax.c	FUNCTION_43	IF_2	IF_3	CALL_5
0x4003e18	      0xe800000000	                          call 0x4003e1d	      3344	syntax.c	FUNCTION_43	IF_2	IF_3	CALL_5
0x4003e1d	            0x85c0	                           test eax, eax	      3344	syntax.c	FUNCTION_43	IF_2	IF_3	CALL_5
0x4003e1f	        0x488b1424	                    mov rdx, qword [rsp]	      3344	syntax.c	FUNCTION_43	IF_2	IF_3	CALL_5
0x4003e23	     0xf88a7010000	                            js 0x4003fd0	      3344	syntax.c	FUNCTION_43	IF_2	IF_3	CALL_5
0x4003e29	    0x498385900000	               add qword [r13 + 0x90], 1	      3346	syntax.c	FUNCTION_43	IF_2
0x4003e31	            0x85d2	                           test edx, edx	      3347	syntax.c	FUNCTION_43	IF_2	IF_4
0x4003e33	            0x7e1b	                           jle 0x4003e50	      3347	syntax.c	FUNCTION_43	IF_2	IF_4
0x4003e35	        0x8b74245c	            mov esi, dword [rsp + 0x5c] 	      3352	syntax.c	FUNCTION_43	IF_5
0x4003e39	    0x498385980000	               add qword [r13 + 0x98], 1	      3348	syntax.c	FUNCTION_43	IF_2	IF_4
0x4003e41	            0x85f6	                           test esi, esi	      3352	syntax.c	FUNCTION_43	IF_5
0x4003e43	     0xf8582feffff	                           jne 0x4003ccb	      3352	syntax.c	FUNCTION_43	IF_5
0x4003e49	      0xe99afeffff	                           jmp 0x4003ce8	      3352	syntax.c	FUNCTION_43	IF_5
0x4003e4e	            0x6690	                                     nop	      3352	syntax.c	FUNCTION_43	IF_5
0x4003e50	        0x8b44245c	            mov eax, dword [rsp + 0x5c] 	      3352	syntax.c	FUNCTION_43	IF_5
0x4003e54	            0x85c0	                           test eax, eax	      3352	syntax.c	FUNCTION_43	IF_5
0x4003e56	     0xf856ffeffff	                           jne 0x4003ccb	      3352	syntax.c	FUNCTION_43	IF_5
0x4003e5c	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	      3027	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4003e64	        0x49894568	             mov qword [r13 + 0x68], rax	      3027	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4003e68	      0xe9f2feffff	                           jmp 0x4003d5f	      3027	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4003e6d	           0xf1f00	                         nop dword [rax]	      3027	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4003e70	      0x837c2430ff	cmp dword [rsp + 0x30], 0xffffffffffffffff	      3044	syntax.c	FUNCTION_37	FOR_2	IF_9
0x4003e75	     0xf84ce000000	                            je 0x4003f49	      3044	syntax.c	FUNCTION_37	FOR_2	IF_9
0x4003e7b	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	      3051	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4003e80	          0x4885db	                           test rbx, rbx	      3051	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4003e83	     0xf84b6010000	                            je 0x400403f	      3051	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4003e89	          0x8b532c	            mov edx, dword [rbx + 0x2c] 	      3058	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4003e8c	          0x4489e0	                           mov eax, r12d	      3053	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4003e8f	          0x2b4320	             sub eax, dword [rbx + 0x20]	      3053	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4003e92	          0x498b36	                    mov rsi, qword [r14]	      3060	syntax.c	FUNCTION_37	FOR_2	IF_10	CALL_5
0x4003e95	        0x488d4b70	                   lea rcx, [rbx + 0x70]	      3060	syntax.c	FUNCTION_37	FOR_2	IF_10	CALL_5
0x4003e99	    0x488dbc248000	                   lea rdi, [rsp + 0x80]	      3060	syntax.c	FUNCTION_37	FOR_2	IF_10	CALL_5
0x4003ea1	    0x899424c80100	            mov dword [rsp + 0x1c8], edx	      3058	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4003ea8	        0x488b5368	            mov rdx, qword [rbx + 0x68] 	      3059	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4003eac	            0x85c0	                           test eax, eax	      3060	syntax.c	FUNCTION_37	FOR_2	IF_10	CALL_5
0x4003eae	    0x488994248000	             mov qword [rsp + 0x80], rdx	      3059	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4003eb6	      0xba00000000	                              mov edx, 0	      3060	syntax.c	FUNCTION_37	FOR_2	IF_10	CALL_5
0x4003ebb	           0xf49d0	                         cmovns edx, eax	      3060	syntax.c	FUNCTION_37	FOR_2	IF_10	CALL_5
0x4003ebe	      0xe89dc1ffff	                    call sym.syn_regexec	      3060	syntax.c	FUNCTION_37	FOR_2	IF_10	CALL_5
0x4003ec3	    0x488b94248000	            mov rdx, qword [rsp + 0x80] 	      3062	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4003ecb	            0x85c0	                           test eax, eax	      3063	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12
0x4003ecd	        0x48895368	             mov qword [rbx + 0x68], rdx	      3062	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4003ed1	     0xf8461010000	                            je 0x4004038	      3063	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12
0x4003ed7	    0x8b8424e00100	           mov eax, dword [rsp + 0x1e0] 	      3063	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12
0x4003ede	    0x398424900000	            cmp dword [rsp + 0x90], eax 	      3063	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12
0x4003ee5	     0xf8f4d010000	                            jg 0x4004038	      3063	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12
0x4003eeb	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      3069	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_6
0x4003ef0	    0x488db4248000	                   lea rsi, [rsp + 0x80]	      3069	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_6
0x4003ef8	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      3069	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_6
0x4003efd	    0x41b801000000	                              mov r8d, 1	      3069	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_6
0x4003f03	      0xb901000000	                              mov ecx, 1	      3069	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_6
0x4003f08	      0xe8f3c2ffff	                call sym.syn_add_end_off	      3069	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_6
0x4003f0d	          0x498b36	                    mov rsi, qword [r14]	      3073	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_13
0x4003f10	      0x4839742460	            cmp qword [rsp + 0x60], rsi 	      3073	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_13
0x4003f15	            0x7f32	                            jg 0x4003f49	      3073	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_13
0x4003f17	    0x488b3d000000	            mov rdi, qword [0x04003f1e] 	      3076	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_7
0x4003f1e	            0x31d2	                            xor edx, edx	      3076	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_7
0x4003f20	      0xe800000000	                          call 0x4003f25	      3076	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_7
0x4003f25	          0x4889c7	                            mov rdi, rax	      3077	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_8
0x4003f28	      0xe800000000	                          call 0x4003f2d	      3077	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_8
0x4003f2d	        0x8b4c2468	            mov ecx, dword [rsp + 0x68] 	      3080	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_14
0x4003f31	            0x89c6	                            mov esi, eax	      3077	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_8
0x4003f33	          0x4139cc	                           cmp r12d, ecx	      3080	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_14
0x4003f36	     0xf8cb4000000	                            jl 0x4003ff0	      3080	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_14
0x4003f3c	        0x4183c401	                             add r12d, 1	      3081	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_14
0x4003f40	          0x4139c4	                           cmp r12d, eax	      3092	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_16
0x4003f43	     0xf8cd1000000	                            jl 0x400401a	      3092	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_16
0x4003f49	      0x488b442408	                mov rax, qword [rsp + 8]	      3159	syntax.c	FUNCTION_37	IF_22
0x4003f4e	    0x48c700000000	                      mov qword [rax], 0	      3159	syntax.c	FUNCTION_37	IF_22
0x4003f55	    0x488b05000000	            mov rax, qword [0x04003f5c] 	      1025	syntax.c	FUNCTION_7	IF_1
0x4003f5c	    0x488b0d000000	            mov rcx, qword [0x04003f63] 	      1025	syntax.c	FUNCTION_7	IF_1
0x4003f63	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1025	syntax.c	FUNCTION_7	IF_1
0x4003f67	    0x483988b00400	           cmp qword [rax + 0x4b0], rcx 	      1025	syntax.c	FUNCTION_7	IF_1
0x4003f6e	            0x7443	                            je 0x4003fb3	      1025	syntax.c	FUNCTION_7	IF_1
0x4003f70	    0x488b05000000	            mov rax, qword [0x04003f77] 	        59	string3.h	FUNCTION_171	CALL_3
0x4003f77	    0x488b94242003	           mov rdx, qword [rsp + 0x320] 	        59	string3.h	FUNCTION_171	CALL_3
0x4003f7f	    0x488990a00900	            mov qword [rax + 0x9a0], rdx	        59	string3.h	FUNCTION_171	CALL_3
0x4003f86	    0x488b94242803	           mov rdx, qword [rsp + 0x328] 	        59	string3.h	FUNCTION_171	CALL_3
0x4003f8e	    0x488990a80900	            mov qword [rax + 0x9a8], rdx	        59	string3.h	FUNCTION_171	CALL_3
0x4003f95	    0x488b94243003	           mov rdx, qword [rsp + 0x330] 	        59	string3.h	FUNCTION_171	CALL_3
0x4003f9d	    0x488990b00900	            mov qword [rax + 0x9b0], rdx	        59	string3.h	FUNCTION_171	CALL_3
0x4003fa4	    0x488b94243803	           mov rdx, qword [rsp + 0x338] 	        59	string3.h	FUNCTION_171	CALL_3
0x4003fac	    0x488990b80900	            mov qword [rax + 0x9b8], rdx	        59	string3.h	FUNCTION_171	CALL_3
0x4003fb3	    0x488b3d000000	            mov rdi, qword [0x04003fba] 	      3164	syntax.c	FUNCTION_37	CALL_14
0x4003fba	      0xe800000000	                          call 0x4003fbf	      3164	syntax.c	FUNCTION_37	CALL_14
0x4003fbf	    0x48c705000000	               mov qword [0x04003fca], 0	      3165	syntax.c	FUNCTION_37
0x4003fca	      0xe932fbffff	                           jmp 0x4003b01	      3165	syntax.c	FUNCTION_37
0x4003fcf	              0x90	                                     nop	      3165	syntax.c	FUNCTION_37
0x4003fd0	      0x488b742470	            mov rsi, qword [rsp + 0x70] 	      3345	syntax.c	FUNCTION_43	IF_2	IF_3
0x4003fd5	      0x488b7c2478	            mov rdi, qword [rsp + 0x78] 	      3345	syntax.c	FUNCTION_43	IF_2	IF_3
0x4003fda	    0x4989b5800000	             mov qword [r13 + 0x80], rsi	      3345	syntax.c	FUNCTION_43	IF_2	IF_3
0x4003fe1	    0x4989bd880000	             mov qword [r13 + 0x88], rdi	      3345	syntax.c	FUNCTION_43	IF_2	IF_3
0x4003fe8	      0xe93cfeffff	                           jmp 0x4003e29	      3345	syntax.c	FUNCTION_43	IF_2	IF_3
0x4003fed	           0xf1f00	                         nop dword [rax]	      3345	syntax.c	FUNCTION_43	IF_2	IF_3
0x4003ff0	    0x8b9424300100	           mov edx, dword [rsp + 0x130] 	      3082	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_2	IF_15
0x4003ff7	            0x39d1	                            cmp ecx, edx	      3082	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_2	IF_15
0x4003ff9	            0x7e35	                           jle 0x4004030	      3082	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_2	IF_15
0x4003ffb	            0x39d0	                            cmp eax, edx	      3086	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x4003ffd	     0xf8e46ffffff	                           jle 0x4003f49	      3086	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x4004003	       0xf1f440000	                   nop dword [rax + rax]	      3086	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x4004008	          0x83c201	                              add edx, 1	      3088	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x400400b	            0x39d6	                            cmp esi, edx	      3086	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x400400d	     0xf8436ffffff	                            je 0x4003f49	      3086	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x4004013	            0x39d1	                            cmp ecx, edx	      3087	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x4004015	            0x75f1	                           jne 0x4004008	      3087	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x4004017	          0x4189cc	                           mov r12d, ecx	      3087	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x400401a	    0x488b1d000000	            mov rbx, qword [0x04004021] 	      3087	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x4004021	      0xe90ffcffff	                           jmp 0x4003c35	      3087	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x4004026	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3087	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x4004030	          0x4189cc	                           mov r12d, ecx	      3087	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x4004033	      0xe908ffffff	                           jmp 0x4003f40	      3087	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x4004038	    0x488b05000000	            mov rax, qword [0x0400403f] 	      3087	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x400403f	      0x4863542430	         movsxd rdx, dword [rsp + 0x30] 	      3103	syntax.c	FUNCTION_37	FOR_2
0x4004044	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      3104	syntax.c	FUNCTION_37	FOR_2	CALL_9
0x4004049	    0x488db424d001	                  lea rsi, [rsp + 0x1d0]	      3104	syntax.c	FUNCTION_37	FOR_2	CALL_9
0x4004051	      0xb901000000	                              mov ecx, 1	      3104	syntax.c	FUNCTION_37	FOR_2	CALL_9
0x4004056	    0x41b801000000	                              mov r8d, 1	      3104	syntax.c	FUNCTION_37	FOR_2	CALL_9
0x400405c	          0x4c89ff	                            mov rdi, r15	      3104	syntax.c	FUNCTION_37	FOR_2	CALL_9
0x400405f	        0x488d1c92	                  lea rbx, [rdx + rdx*4]	      3103	syntax.c	FUNCTION_37	FOR_2
0x4004063	        0x48c1e305	                              shl rbx, 5	      3103	syntax.c	FUNCTION_37	FOR_2
0x4004067	    0x480398700200	            add rbx, qword [rax + 0x270]	      3103	syntax.c	FUNCTION_37	FOR_2
0x400406e	          0x4889da	                            mov rdx, rbx	      3104	syntax.c	FUNCTION_37	FOR_2	CALL_9
0x4004071	      0xe88ac1ffff	                call sym.syn_add_end_off	      3104	syntax.c	FUNCTION_37	FOR_2	CALL_9
0x4004076	          0x498b0e	                    mov rcx, qword [r14]	      3106	syntax.c	FUNCTION_37	FOR_2	IF_17
0x4004079	          0x49390f	                    cmp qword [r15], rcx	      3106	syntax.c	FUNCTION_37	FOR_2	IF_17
0x400407c	     0xf844a010000	                            je 0x40041cc	      3106	syntax.c	FUNCTION_37	FOR_2	IF_17
0x4004082	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      3109	syntax.c	FUNCTION_37	FOR_2	CALL_10
0x4004087	    0x488db424d001	                  lea rsi, [rsp + 0x1d0]	      3109	syntax.c	FUNCTION_37	FOR_2	CALL_10
0x400408f	    0x41b801000000	                              mov r8d, 1	      3109	syntax.c	FUNCTION_37	FOR_2	CALL_10
0x4004095	      0xb903000000	                              mov ecx, 3	      3109	syntax.c	FUNCTION_37	FOR_2	CALL_10
0x400409a	          0x4889da	                            mov rdx, rbx	      3109	syntax.c	FUNCTION_37	FOR_2	CALL_10
0x400409d	          0x4c89ff	                            mov rdi, r15	      3109	syntax.c	FUNCTION_37	FOR_2	CALL_10
0x40040a0	      0xe85bc1ffff	                call sym.syn_add_end_off	      3109	syntax.c	FUNCTION_37	FOR_2	CALL_10
0x40040a5	          0x498b07	                    mov rax, qword [r15]	      3111	syntax.c	FUNCTION_37	FOR_2	IF_18
0x40040a8	          0x493b06	                    cmp rax, qword [r14]	      3111	syntax.c	FUNCTION_37	FOR_2	IF_18
0x40040ab	     0xf8401010000	                            je 0x40041b2	      3111	syntax.c	FUNCTION_37	FOR_2	IF_18
0x40040b1	      0x488b742408	                mov rsi, qword [rsp + 8]	      3174	syntax.c	FUNCTION_38	IF_1
0x40040b6	          0x483b06	                    cmp rax, qword [rsi]	      3174	syntax.c	FUNCTION_38	IF_1
0x40040b9	     0xf8ed4000000	                           jle 0x4004193	      3174	syntax.c	FUNCTION_38	IF_1
0x40040bf	          0x488b06	                    mov rax, qword [rsi]	      3175	syntax.c	FUNCTION_38	IF_1
0x40040c2	        0x488b5608	                mov rdx, qword [rsi + 8]	      3175	syntax.c	FUNCTION_38	IF_1
0x40040c6	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      3175	syntax.c	FUNCTION_38	IF_1
0x40040cb	          0x488901	                    mov qword [rcx], rax	      3175	syntax.c	FUNCTION_38	IF_1
0x40040ce	        0x48895108	                mov qword [rcx + 8], rdx	      3175	syntax.c	FUNCTION_38	IF_1
0x40040d2	         0xfb74302	               movzx eax, word [rbx + 2]	      3120	syntax.c	FUNCTION_37	FOR_2	IF_19
0x40040d6	        0x66394354	               cmp word [rbx + 0x54], ax	      3120	syntax.c	FUNCTION_37	FOR_2	IF_19
0x40040da	     0xf848e000000	                            je 0x400416e	      3120	syntax.c	FUNCTION_37	FOR_2	IF_19
0x40040e0	          0x6685c0	                             test ax, ax	      3120	syntax.c	FUNCTION_37	FOR_2	IF_19
0x40040e3	     0xf8485000000	                            je 0x400416e	      3120	syntax.c	FUNCTION_37	FOR_2	IF_19
0x40040e9	        0xf6430510	               test byte [rbx + 5], 0x10	      3123	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_20
0x40040ed	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      3122	syntax.c	FUNCTION_37	FOR_2	IF_19
0x40040f2	        0x8b742430	            mov esi, dword [rsp + 0x30] 	      3122	syntax.c	FUNCTION_37	FOR_2	IF_19
0x40040f6	            0x8930	                    mov dword [rax], esi	      3122	syntax.c	FUNCTION_37	FOR_2	IF_19
0x40040f8	     0xf840b010000	                            je 0x4004209	      3123	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_20
0x40040fe	    0x488b94247802	           mov rdx, qword [rsp + 0x278] 	      3125	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_20
0x4004106	    0x8b8424800200	           mov eax, dword [rsp + 0x280] 	      3126	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_20
0x400410d	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      3126	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_20
0x4004112	           0x3431c	             add eax, dword [rbx + 0x1c]	      3133	syntax.c	FUNCTION_37	FOR_2	IF_19
0x4004115	          0x488916	                    mov qword [rsi], rdx	      3133	syntax.c	FUNCTION_37	FOR_2	IF_19
0x4004118	          0x493b16	                    cmp rdx, qword [r14]	      3136	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x400411b	          0x894608	                mov dword [rsi + 8], eax	      3133	syntax.c	FUNCTION_37	FOR_2	IF_19
0x400411e	     0xf84f9000000	                            je 0x400421d	      3136	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x4004124	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3174	syntax.c	FUNCTION_38	IF_1
0x4004129	          0x483b11	                    cmp rdx, qword [rcx]	      3174	syntax.c	FUNCTION_38	IF_1
0x400412c	     0xf8eb4000000	                           jle 0x40041e6	      3174	syntax.c	FUNCTION_38	IF_1
0x4004132	          0x488b01	                    mov rax, qword [rcx]	      3175	syntax.c	FUNCTION_38	IF_1
0x4004135	        0x488b5108	                mov rdx, qword [rcx + 8]	      3175	syntax.c	FUNCTION_38	IF_1
0x4004139	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      3175	syntax.c	FUNCTION_38	IF_1
0x400413e	          0x488901	                    mov qword [rcx], rax	      3175	syntax.c	FUNCTION_38	IF_1
0x4004141	        0x48895108	                mov qword [rcx + 8], rdx	      3175	syntax.c	FUNCTION_38	IF_1
0x4004145	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      3143	syntax.c	FUNCTION_37	FOR_2	IF_19
0x400414a	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3143	syntax.c	FUNCTION_37	FOR_2	IF_19
0x400414f	        0x488b5008	                mov rdx, qword [rax + 8]	      3143	syntax.c	FUNCTION_37	FOR_2	IF_19
0x4004153	          0x488b00	                    mov rax, qword [rax]	      3143	syntax.c	FUNCTION_37	FOR_2	IF_19
0x4004156	        0x48895108	                mov qword [rcx + 8], rdx	      3143	syntax.c	FUNCTION_37	FOR_2	IF_19
0x400415a	          0x488901	                    mov qword [rcx], rax	      3143	syntax.c	FUNCTION_37	FOR_2	IF_19
0x400415d	        0x48634324	         movsxd rax, dword [rbx + 0x24] 	      3151	syntax.c	FUNCTION_37	FOR_2
0x4004161	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      3151	syntax.c	FUNCTION_37	FOR_2
0x4004166	          0x488901	                    mov qword [rcx], rax	      3151	syntax.c	FUNCTION_37	FOR_2
0x4004169	      0xe9e7fdffff	                           jmp 0x4003f55	      3151	syntax.c	FUNCTION_37	FOR_2
0x400416e	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      3147	syntax.c	FUNCTION_37	FOR_2	ELSE_5
0x4004173	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      3148	syntax.c	FUNCTION_37	FOR_2	ELSE_5
0x4004178	    0xc70000000000	                      mov dword [rax], 0	      3147	syntax.c	FUNCTION_37	FOR_2	ELSE_5
0x400417e	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3148	syntax.c	FUNCTION_37	FOR_2	ELSE_5
0x4004183	        0x488b5008	                mov rdx, qword [rax + 8]	      3148	syntax.c	FUNCTION_37	FOR_2	ELSE_5
0x4004187	          0x488b00	                    mov rax, qword [rax]	      3148	syntax.c	FUNCTION_37	FOR_2	ELSE_5
0x400418a	        0x48895108	                mov qword [rcx + 8], rdx	      3148	syntax.c	FUNCTION_37	FOR_2	ELSE_5
0x400418e	          0x488901	                    mov qword [rcx], rax	      3148	syntax.c	FUNCTION_37	FOR_2	ELSE_5
0x4004191	            0xebca	                           jmp 0x400415d	      3148	syntax.c	FUNCTION_37	FOR_2	ELSE_5
0x4004193	     0xf8539ffffff	                           jne 0x40040d2	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x4004199	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x400419e	          0x8b4608	                mov eax, dword [rsi + 8]	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x40041a1	          0x394108	                cmp dword [rcx + 8], eax	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x40041a4	     0xf8e28ffffff	                           jle 0x40040d2	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x40041aa	          0x894108	                mov dword [rcx + 8], eax	      3177	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x40041ad	      0xe920ffffff	                           jmp 0x40040d2	      3177	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x40041b2	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3112	syntax.c	FUNCTION_37	FOR_2	IF_18
0x40041b7	        0x418b5608	                mov edx, dword [r14 + 8]	      3112	syntax.c	FUNCTION_37	FOR_2	IF_18
0x40041bb	          0x395608	                cmp dword [rsi + 8], edx	      3112	syntax.c	FUNCTION_37	FOR_2	IF_18
0x40041be	     0xf8dedfeffff	                           jge 0x40040b1	      3112	syntax.c	FUNCTION_37	FOR_2	IF_18
0x40041c4	          0x895608	                mov dword [rsi + 8], edx	      3113	syntax.c	FUNCTION_37	FOR_2	IF_18
0x40041c7	      0xe9e5feffff	                           jmp 0x40040b1	      3113	syntax.c	FUNCTION_37	FOR_2	IF_18
0x40041cc	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3106	syntax.c	FUNCTION_37	FOR_2	IF_17
0x40041d1	        0x418b4608	                mov eax, dword [r14 + 8]	      3106	syntax.c	FUNCTION_37	FOR_2	IF_17
0x40041d5	          0x394108	                cmp dword [rcx + 8], eax	      3106	syntax.c	FUNCTION_37	FOR_2	IF_17
0x40041d8	     0xf8da4feffff	                           jge 0x4004082	      3106	syntax.c	FUNCTION_37	FOR_2	IF_17
0x40041de	          0x894108	                mov dword [rcx + 8], eax	      3107	syntax.c	FUNCTION_37	FOR_2	IF_17
0x40041e1	      0xe99cfeffff	                           jmp 0x4004082	      3107	syntax.c	FUNCTION_37	FOR_2	IF_17
0x40041e6	     0xf8559ffffff	                           jne 0x4004145	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x40041ec	      0x488b742408	                mov rsi, qword [rsp + 8]	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x40041f1	          0x8b5608	                mov edx, dword [rsi + 8]	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x40041f4	            0x39c2	                            cmp edx, eax	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x40041f6	     0xf8d49ffffff	                           jge 0x4004145	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x40041fc	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      3177	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x4004201	          0x895008	                mov dword [rax + 8], edx	      3177	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x4004204	      0xe93cffffff	                           jmp 0x4004145	      3177	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x4004209	    0x488b9424d801	           mov rdx, qword [rsp + 0x1d8] 	      3130	syntax.c	FUNCTION_37	FOR_2	IF_19	ELSE_4
0x4004211	    0x8b8424e00100	           mov eax, dword [rsp + 0x1e0] 	      3131	syntax.c	FUNCTION_37	FOR_2	IF_19	ELSE_4
0x4004218	      0xe9f0feffff	                           jmp 0x400410d	      3131	syntax.c	FUNCTION_37	FOR_2	IF_19	ELSE_4
0x400421d	        0x418b4e08	                mov ecx, dword [r14 + 8]	      3137	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x4004221	            0x39c8	                            cmp eax, ecx	      3137	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x4004223	     0xf8dfbfeffff	                           jge 0x4004124	      3137	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x4004229	          0x894e08	                mov dword [rsi + 8], ecx	      3138	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x400422c	            0x89c8	                            mov eax, ecx	      3138	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x400422e	      0xe9f1feffff	                           jmp 0x4004124	      3138	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x4004233	      0xe800000000	                          call 0x4004238	      3166	syntax.c	FUNCTION_37
0x4004238	          0x4531ed	                          xor r13d, r13d	      2992	syntax.c	FUNCTION_37	ELSE_1
0x400423b	      0xe92ff9ffff	                           jmp 0x4003b6f	      2992	syntax.c	FUNCTION_37	ELSE_1
get_syntax_info	DO,0:functions,0:IF,0:WHILE,0:CALL,0:ELSE,0:SWITCH,0:FOR,0	4
0x400b4c0	    0x8b0500000000	            mov eax, dword [0x0400b4c6] 	      6600	syntax.c	FUNCTION_103
0x400b4c6	            0x8907	                    mov dword [rdi], eax	      6600	syntax.c	FUNCTION_103
0x400b4c8	    0x8b0500000000	            mov eax, dword [0x0400b4ce] 	      6602	syntax.c	FUNCTION_103
0x400b4ce	              0xc3	                                     ret	      6602	syntax.c	FUNCTION_103
syntax_end_parsing	DO,0:functions,0:IF,2:WHILE,0:CALL,1:ELSE,0:SWITCH,0:FOR,0	33
0x400a0f0	    0x488b05000000	            mov rax, qword [0x0400a0f7] 	      1455	syntax.c	FUNCTION_18	FOR_1
0x400a0f7	    0x488b88200300	           mov rcx, qword [rax + 0x320] 	      1455	syntax.c	FUNCTION_18	FOR_1
0x400a0fe	          0x4885c9	                           test rcx, rcx	      1455	syntax.c	FUNCTION_18	FOR_1
0x400a101	            0x7445	                            je 0x400a148	      1455	syntax.c	FUNCTION_18	FOR_1
0x400a103	        0x488b7108	                mov rsi, qword [rcx + 8]	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x400a107	          0x4839f7	                            cmp rdi, rsi	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x400a10a	            0x7444	                            je 0x400a150	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x400a10c	            0x7d13	                           jge 0x400a121	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x400a10e	            0xeb45	                           jmp 0x400a155	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x400a110	        0x488b5008	                mov rdx, qword [rax + 8]	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x400a114	          0x4839d7	                            cmp rdi, rdx	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x400a117	            0x741a	                            je 0x400a133	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x400a119	            0x7c0e	                            jl 0x400a129	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x400a11b	          0x4889d6	                            mov rsi, rdx	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x400a11e	          0x4889c1	                            mov rcx, rax	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x400a121	          0x488b01	                    mov rax, qword [rcx]	      1455	syntax.c	FUNCTION_18	FOR_1
0x400a124	          0x4885c0	                           test rax, rax	      1455	syntax.c	FUNCTION_18	FOR_1
0x400a127	            0x75e7	                           jne 0x400a110	      1455	syntax.c	FUNCTION_18	FOR_1
0x400a129	          0x4839f7	                            cmp rdi, rsi	      1717	syntax.c	FUNCTION_22	IF_1
0x400a12c	            0x7e22	                           jle 0x400a150	      1717	syntax.c	FUNCTION_22	IF_1
0x400a12e	          0x4885c0	                           test rax, rax	      1720	syntax.c	FUNCTION_22	IF_2
0x400a131	            0x7424	                            je 0x400a157	      1720	syntax.c	FUNCTION_22	IF_2
0x400a133	    0x4883b8d00000	               cmp qword [rax + 0xd0], 0	      1720	syntax.c	FUNCTION_22	IF_2
0x400a13b	            0x740b	                            je 0x400a148	      1720	syntax.c	FUNCTION_22	IF_2
0x400a13d	    0x4889b8d00000	             mov qword [rax + 0xd0], rdi	      1721	syntax.c	FUNCTION_22	IF_2
0x400a144	              0xc3	                                     ret	      1722	syntax.c	FUNCTION_22
0x400a145	           0xf1f00	                         nop dword [rax]	      1722	syntax.c	FUNCTION_22
0x400a148	            0xf3c3	                                     ret	      1722	syntax.c	FUNCTION_22
0x400a14a	    0x660f1f440000	                    nop word [rax + rax]	      1722	syntax.c	FUNCTION_22
0x400a150	          0x4889c8	                            mov rax, rcx	      1722	syntax.c	FUNCTION_22
0x400a153	            0xebde	                           jmp 0x400a133	      1722	syntax.c	FUNCTION_22
0x400a155	            0xf3c3	                                     ret	      1722	syntax.c	FUNCTION_22
0x400a157	              0xc3	                                     ret	      1722	syntax.c	FUNCTION_22
free_highlight_fonts	DO,0:functions,0:IF,0:WHILE,0:CALL,7:ELSE,0:SWITCH,0:FOR,1	25
0x4013400	    0x8b1500000000	            mov edx, dword [0x04013406] 	     10352	syntax.c	FUNCTION_169	FOR_1
0x4013406	    0x488b05000000	            mov rax, qword [0x0401340d] 	     10352	syntax.c	FUNCTION_169	FOR_1
0x401340d	            0x85d2	                           test edx, edx	     10352	syntax.c	FUNCTION_169	FOR_1
0x401340f	            0x7e4d	                           jle 0x401345e	     10352	syntax.c	FUNCTION_169	FOR_1
0x4013411	              0x55	                                push rbp	     10349	syntax.c	FUNCTION_169
0x4013412	              0x53	                                push rbx	     10349	syntax.c	FUNCTION_169
0x4013413	            0x31ed	                            xor ebp, ebp	     10349	syntax.c	FUNCTION_169
0x4013415	            0x31db	                            xor ebx, ebx	     10349	syntax.c	FUNCTION_169
0x4013417	        0x4883ec08	                              sub rsp, 8	     10349	syntax.c	FUNCTION_169
0x401341b	       0xf1f440000	                   nop dword [rax + rax]	     10349	syntax.c	FUNCTION_169
0x4013420	      0x488b7c1858	      mov rdi, qword [rax + rbx + 0x58] 	     10354	syntax.c	FUNCTION_169	FOR_1	CALL_1
0x4013425	          0x83c501	                              add ebp, 1	     10352	syntax.c	FUNCTION_169	FOR_1
0x4013428	      0xe800000000	                          call 0x401342d	     10354	syntax.c	FUNCTION_169	FOR_1	CALL_1
0x401342d	    0x488b05000000	            mov rax, qword [0x04013434] 	     10355	syntax.c	FUNCTION_169	FOR_1
0x4013434	    0x48c744185800	         mov qword [rax + rbx + 0x58], 0	     10355	syntax.c	FUNCTION_169	FOR_1
0x401343d	    0x4881c3980000	                           add rbx, 0x98	     10355	syntax.c	FUNCTION_169	FOR_1
0x4013444	    0x392d00000000	            cmp dword [0x0401344a], ebp 	     10352	syntax.c	FUNCTION_169	FOR_1
0x401344a	            0x7fd4	                            jg 0x4013420	     10352	syntax.c	FUNCTION_169	FOR_1
0x401344c	    0x488b3d000000	            mov rdi, qword [0x04013453] 	     10362	syntax.c	FUNCTION_169	CALL_3
0x4013453	        0x4883c408	                              add rsp, 8	     10371	syntax.c	FUNCTION_169
0x4013457	              0x5b	                                 pop rbx	     10371	syntax.c	FUNCTION_169
0x4013458	              0x5d	                                 pop rbp	     10371	syntax.c	FUNCTION_169
0x4013459	      0xe900000000	                           jmp 0x401345e	     10362	syntax.c	FUNCTION_169	CALL_3
0x401345e	    0x488b3d000000	            mov rdi, qword [0x04013465] 	     10362	syntax.c	FUNCTION_169	CALL_3
0x4013465	      0xe900000000	                   jmp section_end..text	     10362	syntax.c	FUNCTION_169	CALL_3
check_keepend	DO,0:functions,0:IF,6:WHILE,0:CALL,3:ELSE,0:SWITCH,0:FOR,2	143
0x40022b0	    0x8b3500000000	            mov esi, dword [0x040022b6] 	      2781	syntax.c	FUNCTION_33	IF_1
0x40022b6	            0x85f6	                           test esi, esi	      2781	syntax.c	FUNCTION_33	IF_1
0x40022b8	     0xf88aa010000	                            js 0x4002468	      2781	syntax.c	FUNCTION_33	IF_1
0x40022be	    0x448b05000000	            mov r8d, dword [0x040022c5] 	      2789	syntax.c	FUNCTION_33	FOR_1
0x40022c5	        0x418d78ff	                       lea edi, [r8 - 1]	      2789	syntax.c	FUNCTION_33	FOR_1
0x40022c9	            0x39fe	                            cmp esi, edi	      2789	syntax.c	FUNCTION_33	FOR_1
0x40022cb	            0x89f8	                            mov eax, edi	      2789	syntax.c	FUNCTION_33	FOR_1
0x40022cd	     0xf8d1e020000	                           jge 0x40024f1	      2789	syntax.c	FUNCTION_33	FOR_1
0x40022d3	          0x4863d7	                         movsxd rdx, edi	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2
0x40022d6	    0x488b0d000000	            mov rcx, qword [0x040022dd] 	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2
0x40022dd	        0x488d14d2	                  lea rdx, [rdx + rdx*8]	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2
0x40022e1	        0x48c1e204	                              shl rdx, 4	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2
0x40022e5	      0xf644116940	     test byte [rcx + rdx + 0x69], 0x40 	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2
0x40022ea	     0xf8501020000	                           jne 0x40024f1	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2
0x40022f0	      0x488d5411d8	             lea rdx, [rcx + rdx - 0x28]	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2
0x40022f5	            0xeb1c	                           jmp 0x4002313	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2
0x40022f7	    0x660f1f840000	                    nop word [rax + rax]	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2
0x4002300	          0x488b0a	                    mov rcx, qword [rdx]	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2
0x4002303	    0x4881ea900000	                           sub rdx, 0x90	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2
0x400230a	          0x80e540	                            and ch, 0x40	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2
0x400230d	     0xf858d010000	                           jne 0x40024a0	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2
0x4002313	          0x83e801	                              sub eax, 1	      2789	syntax.c	FUNCTION_33	FOR_1
0x4002316	            0x39c6	                            cmp esi, eax	      2789	syntax.c	FUNCTION_33	FOR_1
0x4002318	            0x75e6	                           jne 0x4002300	      2789	syntax.c	FUNCTION_33	FOR_1
0x400231a	          0x4139f0	                            cmp r8d, esi	      2797	syntax.c	FUNCTION_33	FOR_2
0x400231d	     0xf8e45010000	                           jle 0x4002468	      2797	syntax.c	FUNCTION_33	FOR_2
0x4002323	          0x4863d6	                         movsxd rdx, esi	      2797	syntax.c	FUNCTION_33	FOR_2
0x4002326	            0x29f7	                            sub edi, esi	      2797	syntax.c	FUNCTION_33	FOR_2
0x4002328	    0x4c8b05000000	              mov r8, qword [0x0400232f]	      2797	syntax.c	FUNCTION_33	FOR_2
0x400232f	        0x488d04d2	                  lea rax, [rdx + rdx*8]	      2797	syntax.c	FUNCTION_33	FOR_2
0x4002333	      0x488d543a01	                lea rdx, [rdx + rdi + 1]	      2797	syntax.c	FUNCTION_33	FOR_2
0x4002338	          0x4531c9	                            xor r9d, r9d	      2797	syntax.c	FUNCTION_33	FOR_2
0x400233b	            0x31f6	                            xor esi, esi	      2797	syntax.c	FUNCTION_33	FOR_2
0x400233d	            0x31ff	                            xor edi, edi	      2797	syntax.c	FUNCTION_33	FOR_2
0x400233f	        0x488d0cd2	                  lea rcx, [rdx + rdx*8]	      2797	syntax.c	FUNCTION_33	FOR_2
0x4002343	        0x48c1e004	                              shl rax, 4	      2797	syntax.c	FUNCTION_33	FOR_2
0x4002347	            0x31d2	                            xor edx, edx	      2797	syntax.c	FUNCTION_33	FOR_2
0x4002349	          0x4c01c0	                             add rax, r8	      2797	syntax.c	FUNCTION_33	FOR_2
0x400234c	        0x48c1e104	                              shl rcx, 4	      2797	syntax.c	FUNCTION_33	FOR_2
0x4002350	          0x4c01c1	                             add rcx, r8	      2797	syntax.c	FUNCTION_33	FOR_2
0x4002353	            0xeb1f	                           jmp 0x4002374	      2797	syntax.c	FUNCTION_33	FOR_2
0x4002355	           0xf1f00	                         nop dword [rax]	      2797	syntax.c	FUNCTION_33	FOR_2
0x4002358	        0x448b405c	            mov r8d, dword [rax + 0x5c] 	      2807	syntax.c	FUNCTION_33	FOR_2	IF_4
0x400235c	          0x4585c0	                           test r8d, r8d	      2807	syntax.c	FUNCTION_33	FOR_2	IF_4
0x400235f	     0xf85ab000000	                           jne 0x4002410	      2807	syntax.c	FUNCTION_33	FOR_2	IF_4
0x4002365	    0x480590000000	                           add rax, 0x90	      2807	syntax.c	FUNCTION_33	FOR_2	IF_4
0x400236b	          0x4839c1	                            cmp rcx, rax	      2797	syntax.c	FUNCTION_33	FOR_2
0x400236e	     0xf8495000000	                            je 0x4002409	      2797	syntax.c	FUNCTION_33	FOR_2
0x4002374	          0x4885d2	                           test rdx, rdx	      2800	syntax.c	FUNCTION_33	FOR_2	IF_3
0x4002377	            0x74df	                            je 0x4002358	      2800	syntax.c	FUNCTION_33	FOR_2	IF_3
0x4002379	        0x4c8b4018	              mov r8, qword [rax + 0x18]	      3188	syntax.c	FUNCTION_39	IF_1
0x400237d	          0x4d85c0	                             test r8, r8	      3188	syntax.c	FUNCTION_39	IF_1
0x4002380	     0xf84d2000000	                            je 0x4002458	      3188	syntax.c	FUNCTION_39	IF_1
0x4002386	          0x4939d0	                             cmp r8, rdx	      3174	syntax.c	FUNCTION_38	IF_1
0x4002389	     0xf8fc9000000	                            jg 0x4002458	      3174	syntax.c	FUNCTION_38	IF_1
0x400238f	     0xf841b010000	                            je 0x40024b0	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x4002395	        0x4c8b4038	              mov r8, qword [rax + 0x38]	      3188	syntax.c	FUNCTION_39	IF_1
0x4002399	          0x4d85c0	                             test r8, r8	      3188	syntax.c	FUNCTION_39	IF_1
0x400239c	     0xf84a6000000	                            je 0x4002448	      3188	syntax.c	FUNCTION_39	IF_1
0x40023a2	          0x4939f0	                             cmp r8, rsi	      3174	syntax.c	FUNCTION_38	IF_1
0x40023a5	     0xf8f9d000000	                            jg 0x4002448	      3174	syntax.c	FUNCTION_38	IF_1
0x40023ab	     0xf8417010000	                            je 0x40024c8	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x40023b1	        0x4c8b4048	              mov r8, qword [rax + 0x48]	      3188	syntax.c	FUNCTION_39	IF_1
0x40023b5	          0x4d85c0	                             test r8, r8	      3188	syntax.c	FUNCTION_39	IF_1
0x40023b8	            0x747e	                            je 0x4002438	      3188	syntax.c	FUNCTION_39	IF_1
0x40023ba	          0x4c39c2	                             cmp rdx, r8	      3174	syntax.c	FUNCTION_38	IF_1
0x40023bd	            0x7c79	                            jl 0x4002438	      3174	syntax.c	FUNCTION_38	IF_1
0x40023bf	     0xf841b010000	                            je 0x40024e0	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x40023c5	        0xf6406904	               test byte [rax + 0x69], 4	      2807	syntax.c	FUNCTION_33	FOR_2	IF_4
0x40023c9	    0xc7405c010000	               mov dword [rax + 0x5c], 1	      2805	syntax.c	FUNCTION_33	FOR_2	IF_3
0x40023d0	            0x7493	                            je 0x4002365	      2807	syntax.c	FUNCTION_33	FOR_2	IF_4
0x40023d2	        0x4c8b4018	              mov r8, qword [rax + 0x18]	      2810	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40023d6	          0x4939d0	                             cmp r8, rdx	      2810	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40023d9	     0xf8db1000000	                           jge 0x4002490	      2810	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40023df	          0x4885f6	                           test rsi, rsi	      2814	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x40023e2	          0x8b7820	            mov edi, dword [rax + 0x20] 	      2814	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x40023e5	          0x4c89c2	                             mov rdx, r8	      2810	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40023e8	            0x743c	                            je 0x4002426	      2814	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x40023ea	        0x4c8b4038	              mov r8, qword [rax + 0x38]	      2815	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x40023ee	          0x4939f0	                             cmp r8, rsi	      2815	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x40023f1	            0x7d7d	                           jge 0x4002470	      2815	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x40023f3	        0x448b4840	            mov r9d, dword [rax + 0x40] 	      2815	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x40023f7	    0x480590000000	                           add rax, 0x90	      2815	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x40023fd	          0x4c89c6	                             mov rsi, r8	      2815	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x4002400	          0x4839c1	                            cmp rcx, rax	      2797	syntax.c	FUNCTION_33	FOR_2
0x4002403	     0xf856bffffff	                           jne 0x4002374	      2797	syntax.c	FUNCTION_33	FOR_2
0x4002409	            0xf3c3	                                     ret	      2797	syntax.c	FUNCTION_33	FOR_2
0x400240b	       0xf1f440000	                   nop dword [rax + rax]	      2797	syntax.c	FUNCTION_33	FOR_2
0x4002410	        0xf6406904	               test byte [rax + 0x69], 4	      2807	syntax.c	FUNCTION_33	FOR_2	IF_4
0x4002414	     0xf844bffffff	                            je 0x4002365	      2807	syntax.c	FUNCTION_33	FOR_2	IF_4
0x400241a	          0x8b7820	            mov edi, dword [rax + 0x20] 	      2807	syntax.c	FUNCTION_33	FOR_2	IF_4
0x400241d	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      2807	syntax.c	FUNCTION_33	FOR_2	IF_4
0x4002421	          0x4885f6	                           test rsi, rsi	      2814	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x4002424	            0x75c4	                           jne 0x40023ea	      2814	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x4002426	        0x448b4840	            mov r9d, dword [rax + 0x40] 	      2814	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x400242a	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      2814	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x400242e	      0xe932ffffff	                           jmp 0x4002365	      2814	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x4002433	       0xf1f440000	                   nop dword [rax + rax]	      2814	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x4002438	        0x48895048	             mov qword [rax + 0x48], rdx	      3175	syntax.c	FUNCTION_38	IF_1
0x400243c	          0x897850	             mov dword [rax + 0x50], edi	      3175	syntax.c	FUNCTION_38	IF_1
0x400243f	            0xeb84	                           jmp 0x40023c5	      3175	syntax.c	FUNCTION_38	IF_1
0x4002441	     0xf1f80000000	                         nop dword [rax]	      3175	syntax.c	FUNCTION_38	IF_1
0x4002448	        0x48897038	             mov qword [rax + 0x38], rsi	      3175	syntax.c	FUNCTION_38	IF_1
0x400244c	        0x44894840	             mov dword [rax + 0x40], r9d	      3175	syntax.c	FUNCTION_38	IF_1
0x4002450	      0xe95cffffff	                           jmp 0x40023b1	      3175	syntax.c	FUNCTION_38	IF_1
0x4002455	           0xf1f00	                         nop dword [rax]	      3175	syntax.c	FUNCTION_38	IF_1
0x4002458	        0x48895018	             mov qword [rax + 0x18], rdx	      3175	syntax.c	FUNCTION_38	IF_1
0x400245c	          0x897820	             mov dword [rax + 0x20], edi	      3175	syntax.c	FUNCTION_38	IF_1
0x400245f	      0xe931ffffff	                           jmp 0x4002395	      3175	syntax.c	FUNCTION_38	IF_1
0x4002464	         0xf1f4000	                         nop dword [rax]	      3175	syntax.c	FUNCTION_38	IF_1
0x4002468	            0xf3c3	                                     ret	      3175	syntax.c	FUNCTION_38	IF_1
0x400246a	    0x660f1f440000	                    nop word [rax + rax]	      3175	syntax.c	FUNCTION_38	IF_1
0x4002470	     0xf85effeffff	                           jne 0x4002365	      2816	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x4002476	        0x448b4040	            mov r8d, dword [rax + 0x40] 	      2817	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x400247a	          0x4539c8	                            cmp r8d, r9d	      2817	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x400247d	        0x450f4cc8	                          cmovl r9d, r8d	      2817	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x4002481	      0xe9dffeffff	                           jmp 0x4002365	      2817	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x4002486	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2817	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x4002490	            0x758f	                           jne 0x4002421	      2811	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x4002492	        0x448b4020	            mov r8d, dword [rax + 0x20] 	      2812	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x4002496	          0x4139f8	                            cmp r8d, edi	      2812	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x4002499	        0x410f4cf8	                          cmovl edi, r8d	      2812	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x400249d	            0xeb82	                           jmp 0x4002421	      2812	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x400249f	              0x90	                                     nop	      2812	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x40024a0	            0x89c6	                            mov esi, eax	      2789	syntax.c	FUNCTION_33	FOR_1
0x40024a2	      0xe973feffff	                           jmp 0x400231a	      2789	syntax.c	FUNCTION_33	FOR_1
0x40024a7	    0x660f1f840000	                    nop word [rax + rax]	      2789	syntax.c	FUNCTION_33	FOR_1
0x40024b0	          0x397820	            cmp dword [rax + 0x20], edi 	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x40024b3	     0xf8edcfeffff	                           jle 0x4002395	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x40024b9	          0x897820	             mov dword [rax + 0x20], edi	      3177	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x40024bc	      0xe9d4feffff	                           jmp 0x4002395	      3177	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x40024c1	     0xf1f80000000	                         nop dword [rax]	      3177	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x40024c8	        0x44394840	            cmp dword [rax + 0x40], r9d 	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x40024cc	     0xf8edffeffff	                           jle 0x40023b1	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x40024d2	        0x44894840	             mov dword [rax + 0x40], r9d	      3177	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x40024d6	      0xe9d6feffff	                           jmp 0x40023b1	      3177	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x40024db	       0xf1f440000	                   nop dword [rax + rax]	      3177	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x40024e0	          0x3b7850	            cmp edi, dword [rax + 0x50] 	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x40024e3	     0xf8ddcfeffff	                           jge 0x40023c5	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x40024e9	          0x897850	             mov dword [rax + 0x50], edi	      3177	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x40024ec	      0xe9d4feffff	                           jmp 0x40023c5	      3177	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x40024f1	            0x89fe	                            mov esi, edi	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2
0x40024f3	      0xe922feffff	                           jmp 0x400231a	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2
syn_stack_apply_changes	DO,0:functions,1:IF,0:WHILE,0:CALL,1:ELSE,0:SWITCH,0:FOR,0	30
0x400a090	            0x4154	                                push r12	      1308	syntax.c	FUNCTION_14
0x400a092	    0x4c8da7681700	                 lea r12, [rdi + 0x1768]	      1311	syntax.c	FUNCTION_14	CALL_1
0x400a099	              0x55	                                push rbp	      1308	syntax.c	FUNCTION_14
0x400a09a	              0x53	                                push rbx	      1308	syntax.c	FUNCTION_14
0x400a09b	          0x4889fe	                            mov rsi, rdi	      1311	syntax.c	FUNCTION_14	CALL_1
0x400a09e	          0x4889fd	                            mov rbp, rdi	      1308	syntax.c	FUNCTION_14
0x400a0a1	          0x4c89e7	                            mov rdi, r12	      1311	syntax.c	FUNCTION_14	CALL_1
0x400a0a4	      0xe83780ffff	  call sym.syn_stack_apply_changes_block	      1311	syntax.c	FUNCTION_14	CALL_1
0x400a0a9	    0x488b1d000000	            mov rbx, qword [0x0400a0b0] 	      1313	syntax.c	FUNCTION_14
0x400a0b0	          0x4885db	                           test rbx, rbx	      1313	syntax.c	FUNCTION_14
0x400a0b3	            0x7514	                           jne 0x400a0c9	      1313	syntax.c	FUNCTION_14
0x400a0b5	            0xeb32	                           jmp 0x400a0e9	      1313	syntax.c	FUNCTION_14
0x400a0b7	    0x660f1f840000	                    nop word [rax + rax]	      1313	syntax.c	FUNCTION_14
0x400a0c0	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      1313	syntax.c	FUNCTION_14
0x400a0c4	          0x4885db	                           test rbx, rbx	      1313	syntax.c	FUNCTION_14
0x400a0c7	            0x7420	                            je 0x400a0e9	      1313	syntax.c	FUNCTION_14
0x400a0c9	        0x483b6b08	                cmp rbp, qword [rbx + 8]	      1315	syntax.c	FUNCTION_14	FUNCTION_1	IF_1
0x400a0cd	            0x75f1	                           jne 0x400a0c0	      1315	syntax.c	FUNCTION_14	FUNCTION_1	IF_1
0x400a0cf	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      1315	syntax.c	FUNCTION_14	FUNCTION_1	IF_1
0x400a0d3	          0x4939fc	                            cmp r12, rdi	      1315	syntax.c	FUNCTION_14	FUNCTION_1	IF_1
0x400a0d6	            0x74e8	                            je 0x400a0c0	      1315	syntax.c	FUNCTION_14	FUNCTION_1	IF_1
0x400a0d8	          0x4889ee	                            mov rsi, rbp	      1316	syntax.c	FUNCTION_14	FUNCTION_1	CALL_1
0x400a0db	      0xe80080ffff	  call sym.syn_stack_apply_changes_block	      1316	syntax.c	FUNCTION_14	FUNCTION_1	CALL_1
0x400a0e0	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      1313	syntax.c	FUNCTION_14
0x400a0e4	          0x4885db	                           test rbx, rbx	      1313	syntax.c	FUNCTION_14
0x400a0e7	            0x75e0	                           jne 0x400a0c9	      1313	syntax.c	FUNCTION_14
0x400a0e9	              0x5b	                                 pop rbx	      1318	syntax.c	FUNCTION_14
0x400a0ea	              0x5d	                                 pop rbp	      1318	syntax.c	FUNCTION_14
0x400a0eb	            0x415c	                                 pop r12	      1318	syntax.c	FUNCTION_14
0x400a0ed	              0xc3	                                     ret	      1318	syntax.c	FUNCTION_14
set_hl_attr	DO,0:functions,0:IF,8:WHILE,0:CALL,8:ELSE,3:SWITCH,0:FOR,0	428
0x4003110	            0x4157	                                push r15	      9526	syntax.c	FUNCTION_147
0x4003112	            0x4156	                                push r14	      9526	syntax.c	FUNCTION_147
0x4003114	          0x4863ff	                         movsxd rdi, edi	      9528	syntax.c	FUNCTION_147
0x4003117	            0x4155	                                push r13	      9526	syntax.c	FUNCTION_147
0x4003119	            0x4154	                                push r12	      9526	syntax.c	FUNCTION_147
0x400311b	              0x55	                                push rbp	      9526	syntax.c	FUNCTION_147
0x400311c	              0x53	                                push rbx	      9526	syntax.c	FUNCTION_147
0x400311d	        0x4883ec48	                           sub rsp, 0x48	      9526	syntax.c	FUNCTION_147
0x4003121	    0x64488b042528	                mov rax, qword fs:[0x28]	      9526	syntax.c	FUNCTION_147
0x400312a	      0x4889442438	             mov qword [rsp + 0x38], rax	      9526	syntax.c	FUNCTION_147
0x400312f	            0x31c0	                            xor eax, eax	      9526	syntax.c	FUNCTION_147
0x4003131	        0x488d04ff	                  lea rax, [rdi + rdi*8]	      9528	syntax.c	FUNCTION_147
0x4003135	        0x488d1447	                  lea rdx, [rdi + rax*2]	      9528	syntax.c	FUNCTION_147
0x4003139	    0x488b05000000	            mov rax, qword [0x04003140] 	      9528	syntax.c	FUNCTION_147
0x4003140	        0x488d2cd0	                  lea rbp, [rax + rdx*8]	      9528	syntax.c	FUNCTION_147
0x4003144	        0x488b7508	                mov rsi, qword [rbp + 8]	      9531	syntax.c	FUNCTION_147	IF_1	CALL_1
0x4003148	          0x4885f6	                           test rsi, rsi	      9531	syntax.c	FUNCTION_147	IF_1	CALL_1
0x400314b	            0x7433	                            je 0x4003180	      9531	syntax.c	FUNCTION_147	IF_1	CALL_1
0x400314d	      0xbf00000000	                              mov edi, 0	      9531	syntax.c	FUNCTION_147	IF_1	CALL_1
0x4003152	      0xb907000000	                              mov ecx, 7	      9531	syntax.c	FUNCTION_147	IF_1	CALL_1
0x4003157	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      9531	syntax.c	FUNCTION_147	IF_1	CALL_1
0x4003159	            0x7525	                           jne 0x4003180	      9531	syntax.c	FUNCTION_147	IF_1	CALL_1
0x400315b	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      9624	syntax.c	FUNCTION_147
0x4003160	    0x644833042528	                xor rax, qword fs:[0x28]	      9624	syntax.c	FUNCTION_147
0x4003169	     0xf850c070000	                           jne 0x400387b	      9624	syntax.c	FUNCTION_147
0x400316f	        0x4883c448	                           add rsp, 0x48	      9624	syntax.c	FUNCTION_147
0x4003173	              0x5b	                                 pop rbx	      9624	syntax.c	FUNCTION_147
0x4003174	              0x5d	                                 pop rbp	      9624	syntax.c	FUNCTION_147
0x4003175	            0x415c	                                 pop r12	      9624	syntax.c	FUNCTION_147
0x4003177	            0x415d	                                 pop r13	      9624	syntax.c	FUNCTION_147
0x4003179	            0x415e	                                 pop r14	      9624	syntax.c	FUNCTION_147
0x400317b	            0x415f	                                 pop r15	      9624	syntax.c	FUNCTION_147
0x400317d	              0xc3	                                     ret	      9624	syntax.c	FUNCTION_147
0x400317e	            0x6690	                                     nop	      9624	syntax.c	FUNCTION_147
0x4003180	        0x488b7d40	            mov rdi, qword [rbp + 0x40] 	      9539	syntax.c	FUNCTION_147	IF_2
0x4003184	        0x4c8b4548	              mov r8, qword [rbp + 0x48]	      9540	syntax.c	FUNCTION_147	IF_2
0x4003188	        0x4c8b4d50	              mov r9, qword [rbp + 0x50]	      9541	syntax.c	FUNCTION_147	IF_2
0x400318c	    0x4881ff99d4ff	             cmp rdi, 0xffffffffffffd499	      9539	syntax.c	FUNCTION_147	IF_2
0x4003193	     0xf8457010000	                            je 0x40032f0	      9539	syntax.c	FUNCTION_147	IF_2
0x4003199	        0x4c8b5558	            mov r10, qword [rbp + 0x58] 	      9539	syntax.c	FUNCTION_147	IF_2
0x400319d	    0x8b0d00000000	            mov ecx, dword [0x040031a3] 	      8803	syntax.c	FUNCTION_131	FOR_1
0x40031a3	          0x8b456c	            mov eax, dword [rbp + 0x6c] 	      9552	syntax.c	FUNCTION_147	ELSE_1
0x40031a6	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      9553	syntax.c	FUNCTION_147	ELSE_1
0x40031ab	      0x4c89442420	              mov qword [rsp + 0x20], r8	      9554	syntax.c	FUNCTION_147	ELSE_1
0x40031b0	      0x4c894c2428	              mov qword [rsp + 0x28], r9	      9555	syntax.c	FUNCTION_147	ELSE_1
0x40031b5	      0x4c89542430	             mov qword [rsp + 0x30], r10	      9556	syntax.c	FUNCTION_147	ELSE_1
0x40031ba	            0x85c9	                           test ecx, ecx	      8803	syntax.c	FUNCTION_131	FOR_1
0x40031bc	            0x89c6	                            mov esi, eax	      9552	syntax.c	FUNCTION_147	ELSE_1
0x40031be	      0x6689442410	               mov word [rsp + 0x10], ax	      9552	syntax.c	FUNCTION_147	ELSE_1
0x40031c3	    0xc70500000000	           mov dword [0x040031cd], 0x28 	      8797	syntax.c	FUNCTION_131
0x40031cd	    0xc70500000000	               mov dword [0x040031d7], 7	      8798	syntax.c	FUNCTION_131
0x40031d7	     0xf8eff010000	                           jle 0x40033dc	      8803	syntax.c	FUNCTION_131	FOR_1
0x40031dd	    0x488b05000000	            mov rax, qword [0x040031e4] 	      8803	syntax.c	FUNCTION_131	FOR_1
0x40031e4	            0x31d2	                            xor edx, edx	      8803	syntax.c	FUNCTION_131	FOR_1
0x40031e6	            0xeb17	                           jmp 0x40031ff	      8803	syntax.c	FUNCTION_131	FOR_1
0x40031e8	     0xf1f84000000	                   nop dword [rax + rax]	      8803	syntax.c	FUNCTION_131	FOR_1
0x40031f0	          0x83c201	                              add edx, 1	      8803	syntax.c	FUNCTION_131	FOR_1
0x40031f3	        0x4883c028	                           add rax, 0x28	      8803	syntax.c	FUNCTION_131	FOR_1
0x40031f7	            0x39ca	                            cmp edx, ecx	      8803	syntax.c	FUNCTION_131	FOR_1
0x40031f9	     0xf8429010000	                            je 0x4003328	      8803	syntax.c	FUNCTION_131	FOR_1
0x40031ff	          0x663b30	                      cmp si, word [rax]	      8806	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4003202	            0x75ec	                           jne 0x40031f0	      8806	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4003204	        0x483b7808	                cmp rdi, qword [rax + 8]	      8810	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4003208	            0x75e6	                           jne 0x40031f0	      8810	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400320a	        0x4c394010	              cmp qword [rax + 0x10], r8	      8811	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400320e	            0x75e0	                           jne 0x40031f0	      8811	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4003210	        0x4c394818	              cmp qword [rax + 0x18], r9	      8813	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4003214	            0x75da	                           jne 0x40031f0	      8813	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4003216	        0x4c395020	            cmp qword [rax + 0x20], r10 	      8815	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400321a	            0x75d4	                           jne 0x40031f0	      8815	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400321c	    0x8d8200010000	                  lea eax, [rdx + 0x100]	      8846	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4003222	    0x660f1f440000	                    nop word [rax + rax]	      8846	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4003228	          0x894568	            mov dword [rbp + 0x68], eax 	      9560	syntax.c	FUNCTION_147	ELSE_1	CALL_2
0x400322b	        0x4c8b6d18	            mov r13, qword [rbp + 0x18] 	      9567	syntax.c	FUNCTION_147	IF_3
0x400322f	          0x4d85ed	                           test r13, r13	      9567	syntax.c	FUNCTION_147	IF_3
0x4003232	     0xf844e040000	                            je 0x4003686	      9567	syntax.c	FUNCTION_147	IF_3
0x4003238	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      9567	syntax.c	FUNCTION_147	IF_3
0x400323c	    0x448b3d000000	           mov r15d, dword [0x04003243] 	      8803	syntax.c	FUNCTION_131	FOR_1
0x4003243	      0x4c896c2418	             mov qword [rsp + 0x18], r13	      9572	syntax.c	FUNCTION_147	ELSE_2
0x4003248	    0xc70500000000	           mov dword [0x04003252], 0x28 	      8797	syntax.c	FUNCTION_131
0x4003252	    0xc70500000000	               mov dword [0x0400325c], 7	      8798	syntax.c	FUNCTION_131
0x400325c	          0x4889c1	                            mov rcx, rax	      8798	syntax.c	FUNCTION_131
0x400325f	      0x4889442408	                mov qword [rsp + 8], rax	      8798	syntax.c	FUNCTION_131
0x4003264	          0x8b4514	            mov eax, dword [rbp + 0x14] 	      9571	syntax.c	FUNCTION_147	ELSE_2
0x4003267	          0x4585ff	                         test r15d, r15d	      8803	syntax.c	FUNCTION_131	FOR_1
0x400326a	      0x48894c2420	             mov qword [rsp + 0x20], rcx	      9573	syntax.c	FUNCTION_147	ELSE_2
0x400326f	          0x4189c6	                           mov r14d, eax	      9571	syntax.c	FUNCTION_147	ELSE_2
0x4003272	      0x6689442410	               mov word [rsp + 0x10], ax	      9571	syntax.c	FUNCTION_147	ELSE_2
0x4003277	     0xf8ebf020000	                           jle 0x400353c	      8803	syntax.c	FUNCTION_131	FOR_1
0x400327d	    0x48837c240800	                  cmp qword [rsp + 8], 0	      8803	syntax.c	FUNCTION_131	FOR_1
0x4003283	    0x4c8b25000000	            mov r12, qword [0x0400328a] 	      8803	syntax.c	FUNCTION_131	FOR_1
0x400328a	     0xf84a4050000	                            je 0x4003834	      8803	syntax.c	FUNCTION_131	FOR_1
0x4003290	            0x31db	                            xor ebx, ebx	      8803	syntax.c	FUNCTION_131	FOR_1
0x4003292	            0xeb14	                           jmp 0x40032a8	      8803	syntax.c	FUNCTION_131	FOR_1
0x4003294	         0xf1f4000	                         nop dword [rax]	      8803	syntax.c	FUNCTION_131	FOR_1
0x4003298	          0x83c301	                              add ebx, 1	      8803	syntax.c	FUNCTION_131	FOR_1
0x400329b	        0x4983c428	                           add r12, 0x28	      8803	syntax.c	FUNCTION_131	FOR_1
0x400329f	          0x4439fb	                           cmp ebx, r15d	      8803	syntax.c	FUNCTION_131	FOR_1
0x40032a2	     0xf84d0010000	                            je 0x4003478	      8803	syntax.c	FUNCTION_131	FOR_1
0x40032a8	      0x66453b3424	                    cmp r14w, word [r12]	      8806	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40032ad	            0x75e9	                           jne 0x4003298	      8806	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40032af	      0x498b742408	                mov rsi, qword [r12 + 8]	      8824	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40032b4	          0x4885f6	                           test rsi, rsi	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40032b7	            0x74df	                            je 0x4003298	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40032b9	          0x4c89ef	                            mov rdi, r13	      8826	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0x40032bc	      0xe800000000	                          call 0x40032c1	      8826	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0x40032c1	            0x85c0	                           test eax, eax	      8826	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0x40032c3	            0x75d3	                           jne 0x4003298	      8826	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0x40032c5	      0x498b742410	            mov rsi, qword [r12 + 0x10] 	      8829	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40032ca	          0x4885f6	                           test rsi, rsi	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40032cd	            0x74c9	                            je 0x4003298	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40032cf	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      8831	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0x40032d4	      0xe800000000	                          call 0x40032d9	      8831	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0x40032d9	            0x85c0	                           test eax, eax	      8831	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0x40032db	            0x75bb	                           jne 0x4003298	      8831	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0x40032dd	    0x8d8300010000	                  lea eax, [rbx + 0x100]	      8846	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40032e3	      0xe96b020000	                           jmp 0x4003553	      8846	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40032e8	     0xf1f84000000	                   nop dword [rax + rax]	      8846	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40032f0	    0x4981f899d4ff	              cmp r8, 0xffffffffffffd499	      9540	syntax.c	FUNCTION_147	IF_2
0x40032f7	     0xf859cfeffff	                           jne 0x4003199	      9540	syntax.c	FUNCTION_147	IF_2
0x40032fd	    0x4981f999d4ff	              cmp r9, 0xffffffffffffd499	      9541	syntax.c	FUNCTION_147	IF_2
0x4003304	        0x4c8b5558	            mov r10, qword [rbp + 0x58] 	      9542	syntax.c	FUNCTION_147	IF_2
0x4003308	     0xf858ffeffff	                           jne 0x400319d	      9541	syntax.c	FUNCTION_147	IF_2
0x400330e	          0x4d85d2	                           test r10, r10	      9542	syntax.c	FUNCTION_147	IF_2
0x4003311	          0x4d89c8	                              mov r8, r9	      9542	syntax.c	FUNCTION_147	IF_2
0x4003314	     0xf8583feffff	                           jne 0x400319d	      9542	syntax.c	FUNCTION_147	IF_2
0x400331a	          0x8b456c	            mov eax, dword [rbp + 0x6c] 	      9548	syntax.c	FUNCTION_147	IF_2
0x400331d	          0x894568	            mov dword [rbp + 0x68], eax 	      9548	syntax.c	FUNCTION_147	IF_2
0x4003320	      0xe906ffffff	                           jmp 0x400322b	      9548	syntax.c	FUNCTION_147	IF_2
0x4003325	           0xf1f00	                         nop dword [rax]	      9548	syntax.c	FUNCTION_147	IF_2
0x4003328	    0x81fafffe0000	                         cmp edx, 0xfeff	      8849	syntax.c	FUNCTION_131	IF_2
0x400332e	     0xf8ea8000000	                           jle 0x40033dc	      8849	syntax.c	FUNCTION_131	IF_2
0x4003334	    0x8b0500000000	            mov eax, dword [0x0400333a] 	      8856	syntax.c	FUNCTION_131	IF_2	IF_3
0x400333a	            0x85c0	                           test eax, eax	      8856	syntax.c	FUNCTION_131	IF_2	IF_3
0x400333c	     0xf85de030000	                           jne 0x4003720	      8856	syntax.c	FUNCTION_131	IF_2	IF_3
0x4003342	      0xbf00000000	                              mov edi, 0	      8994	syntax.c	FUNCTION_135	CALL_1
0x4003347	    0xc70500000000	               mov dword [0x04003351], 1	      8861	syntax.c	FUNCTION_131	IF_2
0x4003351	          0x4531e4	                          xor r12d, r12d	      8996	syntax.c	FUNCTION_135	FOR_1
0x4003354	      0xe800000000	                          call 0x4003359	      8994	syntax.c	FUNCTION_135	CALL_1
0x4003359	    0x8b0500000000	            mov eax, dword [0x0400335f] 	      8996	syntax.c	FUNCTION_135	FOR_1
0x400335f	            0x31db	                            xor ebx, ebx	      8996	syntax.c	FUNCTION_135	FOR_1
0x4003361	            0x85c0	                           test eax, eax	      8996	syntax.c	FUNCTION_135	FOR_1
0x4003363	            0x7e2e	                           jle 0x4003393	      8996	syntax.c	FUNCTION_135	FOR_1
0x4003365	           0xf1f00	                         nop dword [rax]	      8996	syntax.c	FUNCTION_135	FOR_1
0x4003368	          0x4d89e5	                            mov r13, r12	      8998	syntax.c	FUNCTION_135	FOR_1
0x400336b	    0x4c032d000000	             add r13, qword [0x04003372]	      8998	syntax.c	FUNCTION_135	FOR_1
0x4003372	          0x83c301	                              add ebx, 1	      8996	syntax.c	FUNCTION_135	FOR_1
0x4003375	        0x4983c428	                           add r12, 0x28	      8996	syntax.c	FUNCTION_135	FOR_1
0x4003379	        0x498b7d08	                mov rdi, qword [r13 + 8]	      8999	syntax.c	FUNCTION_135	FOR_1	CALL_2
0x400337d	      0xe800000000	                          call 0x4003382	      8999	syntax.c	FUNCTION_135	FOR_1	CALL_2
0x4003382	        0x498b7d10	            mov rdi, qword [r13 + 0x10] 	      9000	syntax.c	FUNCTION_135	FOR_1	CALL_3
0x4003386	      0xe800000000	                          call 0x400338b	      9000	syntax.c	FUNCTION_135	FOR_1	CALL_3
0x400338b	    0x3b1d00000000	            cmp ebx, dword [0x04003391] 	      8996	syntax.c	FUNCTION_135	FOR_1
0x4003391	            0x7cd5	                            jl 0x4003368	      8996	syntax.c	FUNCTION_135	FOR_1
0x4003393	      0xbf00000000	                              mov edi, 0	      9002	syntax.c	FUNCTION_135	CALL_4
0x4003398	            0x31db	                            xor ebx, ebx	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x400339a	      0xe800000000	                          call 0x400339f	      9002	syntax.c	FUNCTION_135	CALL_4
0x400339f	      0xbf00000000	                              mov edi, 0	      9003	syntax.c	FUNCTION_135	CALL_5
0x40033a4	      0xe800000000	                          call 0x40033a9	      9003	syntax.c	FUNCTION_135	CALL_5
0x40033a9	    0x448b3d000000	           mov r15d, dword [0x040033b0] 	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x40033b0	    0xc70500000000	           mov dword [0x040033ba], 0x32 	      8865	syntax.c	FUNCTION_131	IF_2
0x40033ba	          0x4585ff	                         test r15d, r15d	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x40033bd	            0x7e13	                           jle 0x40033d2	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x40033bf	              0x90	                                     nop	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x40033c0	            0x89df	                            mov edi, ebx	      8868	syntax.c	FUNCTION_131	IF_2	CALL_6
0x40033c2	          0x83c301	                              add ebx, 1	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x40033c5	      0xe846fdffff	                    call sym.set_hl_attr	      8868	syntax.c	FUNCTION_131	IF_2	CALL_6
0x40033ca	    0x3b1d00000000	            cmp ebx, dword [0x040033d0] 	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x40033d0	            0x7cee	                            jl 0x40033c0	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x40033d2	    0xc70500000000	               mov dword [0x040033dc], 0	      8870	syntax.c	FUNCTION_131	IF_2
0x40033dc	      0xbe01000000	                              mov esi, 1	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x40033e1	      0xbf00000000	                              mov edi, 0	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x40033e6	      0xe800000000	                          call 0x40033eb	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x40033eb	            0x85c0	                           test eax, eax	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x40033ed	     0xf8435feffff	                            je 0x4003228	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x40033f3	    0x486305000000	         movsxd rax, dword [0x040033fa] 	      8879	syntax.c	FUNCTION_131
0x40033fa	        0x488d1480	                  lea rdx, [rax + rax*4]	      8879	syntax.c	FUNCTION_131
0x40033fe	    0x488b05000000	            mov rax, qword [0x04003405] 	      8879	syntax.c	FUNCTION_131
0x4003405	        0x488d04d0	                  lea rax, [rax + rdx*8]	      8879	syntax.c	FUNCTION_131
0x4003409	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_173	CALL_6
0x4003410	       0xfb7542410	           movzx edx, word [rsp + 0x10] 	      8881	syntax.c	FUNCTION_131
0x4003415	    0x48c740080000	                  mov qword [rax + 8], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400341d	    0x48c740100000	               mov qword [rax + 0x10], 0	        90	string3.h	FUNCTION_173	CALL_6
0x4003425	    0x48c740180000	               mov qword [rax + 0x18], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400342d	    0x48c740200000	               mov qword [rax + 0x20], 0	        90	string3.h	FUNCTION_173	CALL_6
0x4003435	          0x668910	                      mov word [rax], dx	      8881	syntax.c	FUNCTION_131
0x4003438	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      8885	syntax.c	FUNCTION_131	IF_5
0x400343d	        0x48895008	                mov qword [rax + 8], rdx	      8885	syntax.c	FUNCTION_131	IF_5
0x4003441	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      8886	syntax.c	FUNCTION_131	IF_5
0x4003446	        0x48895010	             mov qword [rax + 0x10], rdx	      8886	syntax.c	FUNCTION_131	IF_5
0x400344a	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      8887	syntax.c	FUNCTION_131	IF_5
0x400344f	        0x48895018	             mov qword [rax + 0x18], rdx	      8887	syntax.c	FUNCTION_131	IF_5
0x4003453	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      8888	syntax.c	FUNCTION_131	IF_5
0x4003458	        0x48895020	             mov qword [rax + 0x20], rdx	      8888	syntax.c	FUNCTION_131	IF_5
0x400345c	    0x8b0500000000	            mov eax, dword [0x04003462] 	      8914	syntax.c	FUNCTION_131
0x4003462	          0x8d5001	                      lea edx, [rax + 1]	      8914	syntax.c	FUNCTION_131
0x4003465	       0x500010000	                          add eax, 0x100	      8915	syntax.c	FUNCTION_131
0x400346a	    0x891500000000	            mov dword [0x04003470], edx 	      8914	syntax.c	FUNCTION_131
0x4003470	      0xe9b3fdffff	                           jmp 0x4003228	      8914	syntax.c	FUNCTION_131
0x4003475	           0xf1f00	                         nop dword [rax]	      8914	syntax.c	FUNCTION_131
0x4003478	    0x4181fffffe00	                        cmp r15d, 0xfeff	      8849	syntax.c	FUNCTION_131	IF_2
0x400347f	     0xf8eb7000000	                           jle 0x400353c	      8849	syntax.c	FUNCTION_131	IF_2
0x4003485	    0x448b35000000	           mov r14d, dword [0x0400348c] 	      8856	syntax.c	FUNCTION_131	IF_2	IF_3
0x400348c	          0x4585f6	                         test r14d, r14d	      8856	syntax.c	FUNCTION_131	IF_2	IF_3
0x400348f	     0xf852f030000	                           jne 0x40037c4	      8856	syntax.c	FUNCTION_131	IF_2	IF_3
0x4003495	      0xbf00000000	                              mov edi, 0	      8994	syntax.c	FUNCTION_135	CALL_1
0x400349a	    0xc70500000000	               mov dword [0x040034a4], 1	      8861	syntax.c	FUNCTION_131	IF_2
0x40034a4	          0x4531e4	                          xor r12d, r12d	      8996	syntax.c	FUNCTION_135	FOR_1
0x40034a7	      0xe800000000	                          call 0x40034ac	      8994	syntax.c	FUNCTION_135	CALL_1
0x40034ac	    0x448b2d000000	           mov r13d, dword [0x040034b3] 	      8996	syntax.c	FUNCTION_135	FOR_1
0x40034b3	            0x31db	                            xor ebx, ebx	      8996	syntax.c	FUNCTION_135	FOR_1
0x40034b5	          0x4585ed	                         test r13d, r13d	      8996	syntax.c	FUNCTION_135	FOR_1
0x40034b8	            0x7e31	                           jle 0x40034eb	      8996	syntax.c	FUNCTION_135	FOR_1
0x40034ba	    0x660f1f440000	                    nop word [rax + rax]	      8996	syntax.c	FUNCTION_135	FOR_1
0x40034c0	          0x4d89e5	                            mov r13, r12	      8998	syntax.c	FUNCTION_135	FOR_1
0x40034c3	    0x4c032d000000	             add r13, qword [0x040034ca]	      8998	syntax.c	FUNCTION_135	FOR_1
0x40034ca	          0x83c301	                              add ebx, 1	      8996	syntax.c	FUNCTION_135	FOR_1
0x40034cd	        0x4983c428	                           add r12, 0x28	      8996	syntax.c	FUNCTION_135	FOR_1
0x40034d1	        0x498b7d08	                mov rdi, qword [r13 + 8]	      8999	syntax.c	FUNCTION_135	FOR_1	CALL_2
0x40034d5	      0xe800000000	                          call 0x40034da	      8999	syntax.c	FUNCTION_135	FOR_1	CALL_2
0x40034da	        0x498b7d10	            mov rdi, qword [r13 + 0x10] 	      9000	syntax.c	FUNCTION_135	FOR_1	CALL_3
0x40034de	      0xe800000000	                          call 0x40034e3	      9000	syntax.c	FUNCTION_135	FOR_1	CALL_3
0x40034e3	    0x3b1d00000000	            cmp ebx, dword [0x040034e9] 	      8996	syntax.c	FUNCTION_135	FOR_1
0x40034e9	            0x7cd5	                            jl 0x40034c0	      8996	syntax.c	FUNCTION_135	FOR_1
0x40034eb	      0xbf00000000	                              mov edi, 0	      9002	syntax.c	FUNCTION_135	CALL_4
0x40034f0	            0x31db	                            xor ebx, ebx	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x40034f2	      0xe800000000	                          call 0x40034f7	      9002	syntax.c	FUNCTION_135	CALL_4
0x40034f7	      0xbf00000000	                              mov edi, 0	      9003	syntax.c	FUNCTION_135	CALL_5
0x40034fc	      0xe800000000	                          call 0x4003501	      9003	syntax.c	FUNCTION_135	CALL_5
0x4003501	    0x448b1d000000	           mov r11d, dword [0x04003508] 	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x4003508	    0xc70500000000	           mov dword [0x04003512], 0x32 	      8865	syntax.c	FUNCTION_131	IF_2
0x4003512	          0x4585db	                         test r11d, r11d	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x4003515	            0x7e1b	                           jle 0x4003532	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x4003517	    0x660f1f840000	                    nop word [rax + rax]	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x4003520	            0x89df	                            mov edi, ebx	      8868	syntax.c	FUNCTION_131	IF_2	CALL_6
0x4003522	          0x83c301	                              add ebx, 1	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x4003525	      0xe8e6fbffff	                    call sym.set_hl_attr	      8868	syntax.c	FUNCTION_131	IF_2	CALL_6
0x400352a	    0x3b1d00000000	            cmp ebx, dword [0x04003530] 	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x4003530	            0x7cee	                            jl 0x4003520	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x4003532	    0xc70500000000	               mov dword [0x0400353c], 0	      8870	syntax.c	FUNCTION_131	IF_2
0x400353c	      0xbe01000000	                              mov esi, 1	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x4003541	      0xbf00000000	                              mov edi, 0	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x4003546	      0xe800000000	                          call 0x400354b	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x400354b	            0x85c0	                           test eax, eax	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x400354d	     0xf85ed010000	                           jne 0x4003740	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x4003553	          0x894528	            mov dword [rbp + 0x28], eax 	      9574	syntax.c	FUNCTION_147	ELSE_2	CALL_3
0x4003556	          0x8b4534	            mov eax, dword [rbp + 0x34] 	      9581	syntax.c	FUNCTION_147	IF_4
0x4003559	          0x8b5538	            mov edx, dword [rbp + 0x38] 	      9581	syntax.c	FUNCTION_147	IF_4
0x400355c	            0x85c0	                           test eax, eax	      9581	syntax.c	FUNCTION_147	IF_4
0x400355e	     0xf858c000000	                           jne 0x40035f0	      9581	syntax.c	FUNCTION_147	IF_4
0x4003564	            0x85d2	                           test edx, edx	      9581	syntax.c	FUNCTION_147	IF_4
0x4003566	     0xf8584000000	                           jne 0x40035f0	      9581	syntax.c	FUNCTION_147	IF_4
0x400356c	        0x488b4540	            mov rax, qword [rbp + 0x40] 	      9583	syntax.c	FUNCTION_147	IF_4
0x4003570	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9583	syntax.c	FUNCTION_147	IF_4
0x4003576	     0xf8472020000	                            je 0x40037ee	      9583	syntax.c	FUNCTION_147	IF_4
0x400357c	    0x448b0d000000	            mov r9d, dword [0x04003583] 	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x4003583	          0x8b552c	            mov edx, dword [rbp + 0x2c] 	      9590	syntax.c	FUNCTION_147	ELSE_3
0x4003586	            0x31ff	                            xor edi, edi	      9591	syntax.c	FUNCTION_147	ELSE_3
0x4003588	          0x4531c0	                            xor r8d, r8d	      9592	syntax.c	FUNCTION_147	ELSE_3
0x400358b	      0x66897c2418	               mov word [rsp + 0x18], di	      9591	syntax.c	FUNCTION_147	ELSE_3
0x4003590	    0x66448944241a	              mov word [rsp + 0x1a], r8w	      9592	syntax.c	FUNCTION_147	ELSE_3
0x4003596	          0x4585c9	                           test r9d, r9d	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x4003599	      0x6689542410	               mov word [rsp + 0x10], dx	      9590	syntax.c	FUNCTION_147	ELSE_3
0x400359e	     0xf84bc000000	                            je 0x4003660	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x40035a4	          0x4889c7	                            mov rdi, rax	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x40035a7	      0xe800000000	                          call 0x40035ac	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x40035ac	    0x8b1500000000	            mov edx, dword [0x040035b2] 	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x40035b2	        0x488b7d48	            mov rdi, qword [rbp + 0x48] 	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x40035b6	      0x4889442420	             mov qword [rsp + 0x20], rax	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x40035bb	            0x85d2	                           test edx, edx	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x40035bd	     0xf84bc000000	                            je 0x400367f	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x40035c3	    0x4881ff99d4ff	             cmp rdi, 0xffffffffffffd499	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x40035ca	            0x7560	                           jne 0x400362c	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x40035cc	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9613	syntax.c	FUNCTION_147	ELSE_3	IF_8
0x40035d2	      0x48897c2428	             mov qword [rsp + 0x28], rdi	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x40035d7	            0x7470	                            je 0x4003649	      9613	syntax.c	FUNCTION_147	ELSE_3	IF_8
0x40035d9	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      9622	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x40035de	      0xe89d020000	    call sym.get_attr_entry.constprop.30	      9622	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x40035e3	          0x89453c	            mov dword [rbp + 0x3c], eax 	      9622	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x40035e6	      0xe970fbffff	                           jmp 0x400315b	      9622	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x40035eb	       0xf1f440000	                   nop dword [rax + rax]	      9622	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x40035f0	    0x448b15000000	           mov r10d, dword [0x040035f7] 	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x40035f7	          0x8b4d2c	            mov ecx, dword [rbp + 0x2c] 	      9590	syntax.c	FUNCTION_147	ELSE_3
0x40035fa	      0x6689442418	               mov word [rsp + 0x18], ax	      9591	syntax.c	FUNCTION_147	ELSE_3
0x40035ff	      0x668954241a	               mov word [rsp + 0x1a], dx	      9592	syntax.c	FUNCTION_147	ELSE_3
0x4003604	        0x488b4540	            mov rax, qword [rbp + 0x40] 	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x4003608	          0x4585d2	                         test r10d, r10d	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x400360b	      0x66894c2410	               mov word [rsp + 0x10], cx	      9590	syntax.c	FUNCTION_147	ELSE_3
0x4003610	            0x744e	                            je 0x4003660	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x4003612	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x4003618	            0x758a	                           jne 0x40035a4	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x400361a	        0x488b7d48	            mov rdi, qword [rbp + 0x48] 	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x400361e	      0x4889442420	             mov qword [rsp + 0x20], rax	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x4003623	    0x4881ff99d4ff	             cmp rdi, 0xffffffffffffd499	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x400362a	            0x741d	                            je 0x4003649	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x400362c	      0xe800000000	                          call 0x4003631	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x4003631	    0x48817c242099	cmp qword [rsp + 0x20], 0xffffffffffffd499	      9614	syntax.c	FUNCTION_147	ELSE_3	IF_8
0x400363a	      0x4889442428	             mov qword [rsp + 0x28], rax	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x400363f	            0x7598	                           jne 0x40035d9	      9614	syntax.c	FUNCTION_147	ELSE_3	IF_8
0x4003641	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9614	syntax.c	FUNCTION_147	ELSE_3	IF_8
0x4003647	            0x7590	                           jne 0x40035d9	      9614	syntax.c	FUNCTION_147	ELSE_3	IF_8
0x4003649	    0x48c74424209a	mov qword [rsp + 0x20], 0xffffffffffffd49a	      9618	syntax.c	FUNCTION_147	ELSE_3	IF_8
0x4003652	    0x48c74424289a	mov qword [rsp + 0x28], 0xffffffffffffd49a	      9619	syntax.c	FUNCTION_147	ELSE_3	IF_8
0x400365b	      0xe979ffffff	                           jmp 0x40035d9	      9619	syntax.c	FUNCTION_147	ELSE_3	IF_8
0x4003660	          0x4889c7	                            mov rdi, rax	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x4003663	      0xe800000000	                          call 0x4003668	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x4003668	    0x8b1500000000	            mov edx, dword [0x0400366e] 	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x400366e	        0x488b7d48	            mov rdi, qword [rbp + 0x48] 	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x4003672	      0x4889442420	             mov qword [rsp + 0x20], rax	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x4003677	            0x85d2	                           test edx, edx	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x4003679	     0xf8544ffffff	                           jne 0x40035c3	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x400367f	      0xe800000000	                          call 0x4003684	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x4003684	            0xebab	                           jmp 0x4003631	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x4003686	        0x4c8b7520	            mov r14, qword [rbp + 0x20] 	      9567	syntax.c	FUNCTION_147	IF_3
0x400368a	          0x8b4514	            mov eax, dword [rbp + 0x14] 	      9568	syntax.c	FUNCTION_147	IF_3
0x400368d	          0x4d85f6	                           test r14, r14	      9567	syntax.c	FUNCTION_147	IF_3
0x4003690	     0xf84bdfeffff	                            je 0x4003553	      9567	syntax.c	FUNCTION_147	IF_3
0x4003696	    0x448b3d000000	           mov r15d, dword [0x0400369d] 	      8803	syntax.c	FUNCTION_131	FOR_1
0x400369d	          0x4189c5	                           mov r13d, eax	      9571	syntax.c	FUNCTION_147	ELSE_2
0x40036a0	      0x6689442410	               mov word [rsp + 0x10], ax	      9571	syntax.c	FUNCTION_147	ELSE_2
0x40036a5	    0x48c744241800	               mov qword [rsp + 0x18], 0	      9572	syntax.c	FUNCTION_147	ELSE_2
0x40036ae	      0x4c89742420	             mov qword [rsp + 0x20], r14	      9573	syntax.c	FUNCTION_147	ELSE_2
0x40036b3	    0xc70500000000	           mov dword [0x040036bd], 0x28 	      8797	syntax.c	FUNCTION_131
0x40036bd	    0xc70500000000	               mov dword [0x040036c7], 7	      8798	syntax.c	FUNCTION_131
0x40036c7	          0x4585ff	                         test r15d, r15d	      8803	syntax.c	FUNCTION_131	FOR_1
0x40036ca	     0xf8e6cfeffff	                           jle 0x400353c	      8803	syntax.c	FUNCTION_131	FOR_1
0x40036d0	    0x4c8b25000000	            mov r12, qword [0x040036d7] 	      8803	syntax.c	FUNCTION_131	FOR_1
0x40036d7	            0x31db	                            xor ebx, ebx	      8803	syntax.c	FUNCTION_131	FOR_1
0x40036d9	            0xeb15	                           jmp 0x40036f0	      8803	syntax.c	FUNCTION_131	FOR_1
0x40036db	       0xf1f440000	                   nop dword [rax + rax]	      8803	syntax.c	FUNCTION_131	FOR_1
0x40036e0	          0x83c301	                              add ebx, 1	      8803	syntax.c	FUNCTION_131	FOR_1
0x40036e3	        0x4983c428	                           add r12, 0x28	      8803	syntax.c	FUNCTION_131	FOR_1
0x40036e7	          0x4439fb	                           cmp ebx, r15d	      8803	syntax.c	FUNCTION_131	FOR_1
0x40036ea	     0xf8488fdffff	                            je 0x4003478	      8803	syntax.c	FUNCTION_131	FOR_1
0x40036f0	      0x6645392c24	                    cmp word [r12], r13w	      8806	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40036f5	            0x75e9	                           jne 0x40036e0	      8806	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40036f7	    0x49837c240800	                  cmp qword [r12 + 8], 0	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40036fd	            0x75e1	                           jne 0x40036e0	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x40036ff	      0x498b742410	            mov rsi, qword [r12 + 0x10] 	      8829	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4003704	          0x4885f6	                           test rsi, rsi	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4003707	            0x74d7	                            je 0x40036e0	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4003709	          0x4c89f7	                            mov rdi, r14	      8831	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0x400370c	      0xe800000000	                          call 0x4003711	      8831	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0x4003711	            0x85c0	                           test eax, eax	      8831	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0x4003713	            0x75cb	                           jne 0x40036e0	      8831	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0x4003715	      0xe9c3fbffff	                           jmp 0x40032dd	      8831	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0x400371a	    0x660f1f440000	                    nop word [rax + rax]	      8831	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0x4003720	      0xba05000000	                              mov edx, 5	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x4003725	      0xbe00000000	                              mov esi, 0	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x400372a	            0x31ff	                            xor edi, edi	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x400372c	      0xe800000000	                          call 0x4003731	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x4003731	          0x4889c7	                            mov rdi, rax	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x4003734	      0xe800000000	                          call 0x4003739	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x4003739	            0x31c0	                            xor eax, eax	      8859	syntax.c	FUNCTION_131	IF_2	IF_3
0x400373b	      0xe9e8faffff	                           jmp 0x4003228	      8859	syntax.c	FUNCTION_131	IF_2	IF_3
0x4003740	    0x486305000000	         movsxd rax, dword [0x04003747] 	      8879	syntax.c	FUNCTION_131
0x4003747	        0x488d1480	                  lea rdx, [rax + rax*4]	      8879	syntax.c	FUNCTION_131
0x400374b	    0x488b05000000	            mov rax, qword [0x04003752] 	      8879	syntax.c	FUNCTION_131
0x4003752	        0x488d1cd0	                  lea rbx, [rax + rdx*8]	      8879	syntax.c	FUNCTION_131
0x4003756	    0x48c703000000	                      mov qword [rbx], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400375d	       0xfb7442410	           movzx eax, word [rsp + 0x10] 	      8881	syntax.c	FUNCTION_131
0x4003762	    0x48c743080000	                  mov qword [rbx + 8], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400376a	    0x48c743100000	               mov qword [rbx + 0x10], 0	        90	string3.h	FUNCTION_173	CALL_6
0x4003772	    0x48c743180000	               mov qword [rbx + 0x18], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400377a	    0x48c743200000	               mov qword [rbx + 0x20], 0	        90	string3.h	FUNCTION_173	CALL_6
0x4003782	          0x668903	                      mov word [rbx], ax	      8881	syntax.c	FUNCTION_131
0x4003785	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      8896	syntax.c	FUNCTION_131	IF_6	IF_7
0x400378a	          0x4885ff	                           test rdi, rdi	      8896	syntax.c	FUNCTION_131	IF_6	IF_7
0x400378d	            0x7409	                            je 0x4003798	      8896	syntax.c	FUNCTION_131	IF_6	IF_7
0x400378f	      0xe800000000	                          call 0x4003794	      8899	syntax.c	FUNCTION_131	IF_6	CALL_9
0x4003794	        0x48894308	                mov qword [rbx + 8], rax	      8899	syntax.c	FUNCTION_131	IF_6	CALL_9
0x4003798	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      8900	syntax.c	FUNCTION_131	IF_6	IF_8
0x400379d	          0x4885ff	                           test rdi, rdi	      8900	syntax.c	FUNCTION_131	IF_6	IF_8
0x40037a0	            0x7442	                            je 0x40037e4	      8900	syntax.c	FUNCTION_131	IF_6	IF_8
0x40037a2	      0xe800000000	                          call 0x40037a7	      8903	syntax.c	FUNCTION_131	IF_6	CALL_10
0x40037a7	        0x48894310	             mov qword [rbx + 0x10], rax	      8903	syntax.c	FUNCTION_131	IF_6	CALL_10
0x40037ab	    0x8b0500000000	            mov eax, dword [0x040037b1] 	      8914	syntax.c	FUNCTION_131
0x40037b1	          0x8d5001	                      lea edx, [rax + 1]	      8914	syntax.c	FUNCTION_131
0x40037b4	       0x500010000	                          add eax, 0x100	      8915	syntax.c	FUNCTION_131
0x40037b9	    0x891500000000	            mov dword [0x040037bf], edx 	      8914	syntax.c	FUNCTION_131
0x40037bf	      0xe98ffdffff	                           jmp 0x4003553	      8914	syntax.c	FUNCTION_131
0x40037c4	      0xba05000000	                              mov edx, 5	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x40037c9	      0xbe00000000	                              mov esi, 0	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x40037ce	            0x31ff	                            xor edi, edi	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x40037d0	      0xe800000000	                          call 0x40037d5	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x40037d5	          0x4889c7	                            mov rdi, rax	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x40037d8	      0xe800000000	                          call 0x40037dd	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x40037dd	            0x31c0	                            xor eax, eax	      8859	syntax.c	FUNCTION_131	IF_2	IF_3
0x40037df	      0xe96ffdffff	                           jmp 0x4003553	      8859	syntax.c	FUNCTION_131	IF_2	IF_3
0x40037e4	    0x48c743100000	               mov qword [rbx + 0x10], 0	      8901	syntax.c	FUNCTION_131	IF_6	IF_8
0x40037ec	            0xebbd	                           jmp 0x40037ab	      8901	syntax.c	FUNCTION_131	IF_6	IF_8
0x40037ee	        0x488b7d48	            mov rdi, qword [rbp + 0x48] 	      9584	syntax.c	FUNCTION_147	IF_4
0x40037f2	    0x4881ff99d4ff	             cmp rdi, 0xffffffffffffd499	      9584	syntax.c	FUNCTION_147	IF_4
0x40037f9	            0x742e	                            je 0x4003829	      9584	syntax.c	FUNCTION_147	IF_4
0x40037fb	          0x8b552c	            mov edx, dword [rbp + 0x2c] 	      9590	syntax.c	FUNCTION_147	ELSE_3
0x40037fe	    0x8b3500000000	            mov esi, dword [0x04003804] 	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x4003804	            0x31c9	                            xor ecx, ecx	      9592	syntax.c	FUNCTION_147	ELSE_3
0x4003806	      0x66894c241a	               mov word [rsp + 0x1a], cx	      9592	syntax.c	FUNCTION_147	ELSE_3
0x400380b	      0x6689542410	               mov word [rsp + 0x10], dx	      9590	syntax.c	FUNCTION_147	ELSE_3
0x4003810	            0x31d2	                            xor edx, edx	      9591	syntax.c	FUNCTION_147	ELSE_3
0x4003812	            0x85f6	                           test esi, esi	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x4003814	      0x6689542418	               mov word [rsp + 0x18], dx	      9591	syntax.c	FUNCTION_147	ELSE_3
0x4003819	     0xf8441feffff	                            je 0x4003660	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x400381f	      0x4889442420	             mov qword [rsp + 0x20], rax	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x4003824	      0xe903feffff	                           jmp 0x400362c	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_6
0x4003829	          0x8b452c	            mov eax, dword [rbp + 0x2c] 	      9587	syntax.c	FUNCTION_147	IF_4
0x400382c	          0x89453c	            mov dword [rbp + 0x3c], eax 	      9587	syntax.c	FUNCTION_147	IF_4
0x400382f	      0xe927f9ffff	                           jmp 0x400315b	      9587	syntax.c	FUNCTION_147	IF_4
0x4003834	            0x31db	                            xor ebx, ebx	      8803	syntax.c	FUNCTION_131	FOR_1
0x4003836	            0xeb18	                           jmp 0x4003850	      8803	syntax.c	FUNCTION_131	FOR_1
0x4003838	     0xf1f84000000	                   nop dword [rax + rax]	      8803	syntax.c	FUNCTION_131	FOR_1
0x4003840	          0x83c301	                              add ebx, 1	      8803	syntax.c	FUNCTION_131	FOR_1
0x4003843	        0x4983c428	                           add r12, 0x28	      8803	syntax.c	FUNCTION_131	FOR_1
0x4003847	          0x4439fb	                           cmp ebx, r15d	      8803	syntax.c	FUNCTION_131	FOR_1
0x400384a	     0xf8428fcffff	                            je 0x4003478	      8803	syntax.c	FUNCTION_131	FOR_1
0x4003850	      0x66453b3424	                    cmp r14w, word [r12]	      8806	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4003855	            0x75e9	                           jne 0x4003840	      8806	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4003857	      0x498b742408	                mov rsi, qword [r12 + 8]	      8824	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400385c	          0x4885f6	                           test rsi, rsi	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400385f	            0x74df	                            je 0x4003840	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4003861	          0x4c89ef	                            mov rdi, r13	      8826	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0x4003864	      0xe800000000	                          call 0x4003869	      8826	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0x4003869	            0x85c0	                           test eax, eax	      8826	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0x400386b	            0x75d3	                           jne 0x4003840	      8826	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0x400386d	    0x49837c241000	               cmp qword [r12 + 0x10], 0	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4003873	     0xf8464faffff	                            je 0x40032dd	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x4003879	            0xebc5	                           jmp 0x4003840	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400387b	      0xe800000000	    call sym.get_attr_entry.constprop.30	      9624	syntax.c	FUNCTION_147
syn_get_sub_char	DO,0:functions,0:IF,0:WHILE,0:CALL,0:ELSE,0:SWITCH,0:FOR,0	2
0x400b4d0	    0x8b0500000000	            mov eax, dword [0x0400b4d6] 	      6611	syntax.c	FUNCTION_104
0x400b4d6	              0xc3	                                     ret	      6611	syntax.c	FUNCTION_104
syn_set_timeout	DO,0:functions,0:IF,0:WHILE,0:CALL,0:ELSE,0:SWITCH,0:FOR,0	2
0x4008ee0	    0x48893d000000	            mov qword [0x04008ee7], rdi 	       502	syntax.c	FUNCTION_1
0x4008ee7	              0xc3	                                     ret	       502	syntax.c	FUNCTION_1
load_current_state	DO,0:functions,0:IF,4:WHILE,0:CALL,5:ELSE,2:SWITCH,0:FOR,1	105
0x40051d0	    0x8b1500000000	            mov edx, dword [0x040051d6] 	       722	syntax.c	FUNCTION_4	FOR_1
0x40051d6	    0x488b05000000	            mov rax, qword [0x040051dd] 	       722	syntax.c	FUNCTION_4	FOR_1
0x40051dd	            0x4156	                                push r14	      1594	syntax.c	FUNCTION_20
0x40051df	            0x4155	                                push r13	      1594	syntax.c	FUNCTION_20
0x40051e1	            0x4154	                                push r12	      1594	syntax.c	FUNCTION_20
0x40051e3	              0x55	                                push rbp	      1594	syntax.c	FUNCTION_20
0x40051e4	            0x31ed	                            xor ebp, ebp	      1594	syntax.c	FUNCTION_20
0x40051e6	            0x85d2	                           test edx, edx	       722	syntax.c	FUNCTION_4	FOR_1
0x40051e8	              0x53	                                push rbx	      1594	syntax.c	FUNCTION_20
0x40051e9	          0x4989fc	                            mov r12, rdi	      1594	syntax.c	FUNCTION_20
0x40051ec	    0x488d98880000	                   lea rbx, [rax + 0x88]	      1594	syntax.c	FUNCTION_20
0x40051f3	            0x7e1d	                           jle 0x4005212	       722	syntax.c	FUNCTION_4	FOR_1
0x40051f5	           0xf1f00	                         nop dword [rax]	       722	syntax.c	FUNCTION_4	FOR_1
0x40051f8	          0x488b3b	                    mov rdi, qword [rbx]	       723	syntax.c	FUNCTION_4	CALL_1
0x40051fb	          0x83c501	                              add ebp, 1	       722	syntax.c	FUNCTION_4	FOR_1
0x40051fe	    0x4881c3900000	                           add rbx, 0x90	       722	syntax.c	FUNCTION_4	FOR_1
0x4005205	      0xe800000000	                          call 0x400520a	       723	syntax.c	FUNCTION_4	CALL_1
0x400520a	    0x3b2d00000000	            cmp ebp, dword [0x04005210] 	       722	syntax.c	FUNCTION_4	FOR_1
0x4005210	            0x7ce6	                            jl 0x40051f8	       722	syntax.c	FUNCTION_4	FOR_1
0x4005212	      0xbf00000000	                              mov edi, 0	       724	syntax.c	FUNCTION_4	CALL_2
0x4005217	      0xe800000000	                          call 0x400521c	       724	syntax.c	FUNCTION_4	CALL_2
0x400521c	    0x418bb424bc00	            mov esi, dword [r12 + 0xbc] 	      1601	syntax.c	FUNCTION_20	IF_1
0x4005224	    0xc70500000000	           mov dword [0x0400522e], 0x90 	      1740	syntax.c	FUNCTION_24
0x400522e	    0xc70500000000	               mov dword [0x04005238], 3	      1741	syntax.c	FUNCTION_24
0x4005238	    0xc70500000000	     mov dword [0x04005242], 0xffffffff 	      1600	syntax.c	FUNCTION_20
0x4005242	            0x85f6	                           test esi, esi	      1601	syntax.c	FUNCTION_20	IF_1
0x4005244	            0x753a	                           jne 0x4005280	      1601	syntax.c	FUNCTION_20	IF_1
0x4005246	    0x498b8424c000	            mov rax, qword [r12 + 0xc0] 	      1630	syntax.c	FUNCTION_20
0x400524e	              0x5b	                                 pop rbx	      1633	syntax.c	FUNCTION_20
0x400524f	              0x5d	                                 pop rbp	      1633	syntax.c	FUNCTION_20
0x4005250	    0x488905000000	            mov qword [0x04005257], rax 	      1630	syntax.c	FUNCTION_20
0x4005257	    0x418b8424b800	            mov eax, dword [r12 + 0xb8] 	      1631	syntax.c	FUNCTION_20
0x400525f	    0x890500000000	            mov dword [0x04005265], eax 	      1631	syntax.c	FUNCTION_20
0x4005265	      0x498b442408	                mov rax, qword [r12 + 8]	      1632	syntax.c	FUNCTION_20
0x400526a	            0x415c	                                 pop r12	      1633	syntax.c	FUNCTION_20
0x400526c	            0x415d	                                 pop r13	      1633	syntax.c	FUNCTION_20
0x400526e	    0x488905000000	            mov qword [0x04005275], rax 	      1632	syntax.c	FUNCTION_20
0x4005275	            0x415e	                                 pop r14	      1633	syntax.c	FUNCTION_20
0x4005277	              0xc3	                                     ret	      1633	syntax.c	FUNCTION_20
0x4005278	     0xf1f84000000	                   nop dword [rax + rax]	      1633	syntax.c	FUNCTION_20
0x4005280	      0xbf00000000	                              mov edi, 0	      1602	syntax.c	FUNCTION_20	IF_1	CALL_3
0x4005285	      0xe800000000	                          call 0x400528a	      1602	syntax.c	FUNCTION_20	IF_1	CALL_3
0x400528a	            0x85c0	                           test eax, eax	      1602	syntax.c	FUNCTION_20	IF_1	CALL_3
0x400528c	            0x74b8	                            je 0x4005246	      1602	syntax.c	FUNCTION_20	IF_1	CALL_3
0x400528e	    0x418b8424bc00	            mov eax, dword [r12 + 0xbc] 	      1604	syntax.c	FUNCTION_20	IF_1	IF_2
0x4005296	          0x83f807	                              cmp eax, 7	      1604	syntax.c	FUNCTION_20	IF_1	IF_2
0x4005299	     0xf8fe9000000	                            jg 0x4005388	      1604	syntax.c	FUNCTION_20	IF_1	IF_2
0x400529f	            0x85c0	                           test eax, eax	      1608	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40052a1	      0x498d5c2410	                   lea rbx, [r12 + 0x10]	      1607	syntax.c	FUNCTION_20	IF_1	ELSE_1
0x40052a6	     0xf8eec000000	                           jle 0x4005398	      1608	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40052ac	          0x4531f6	                          xor r14d, r14d	       722	syntax.c	FUNCTION_4	FOR_1
0x40052af	          0x4531ed	                          xor r13d, r13d	       722	syntax.c	FUNCTION_4	FOR_1
0x40052b2	            0xeb6a	                           jmp 0x400531e	       722	syntax.c	FUNCTION_4	FOR_1
0x40052b4	         0xf1f4000	                         nop dword [rax]	       722	syntax.c	FUNCTION_4	FOR_1
0x40052b8	          0x4c89f0	                            mov rax, r14	       722	syntax.c	FUNCTION_4	FOR_1
0x40052bb	    0x480305000000	             add rax, qword [0x040052c2]	       722	syntax.c	FUNCTION_4	FOR_1
0x40052c2	          0x486310	                 movsxd rdx, dword [rax]	      1621	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x40052c5	            0x31c9	                            xor ecx, ecx	      1625	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	ELSE_2
0x40052c7	    0xc7405c000000	               mov dword [rax + 0x5c], 0	      1619	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40052ce	    0xc7400c000000	                mov dword [rax + 0xc], 0	      1620	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x40052d5	            0x85d2	                           test edx, edx	      1621	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x40052d7	            0x781a	                            js 0x40052f3	      1621	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x40052d9	    0x488b0d000000	            mov rcx, qword [0x040052e0] 	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x40052e0	        0x488d1492	                  lea rdx, [rdx + rdx*4]	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x40052e4	        0x48c1e205	                              shl rdx, 5	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x40052e8	    0x480391700200	            add rdx, qword [rcx + 0x270]	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x40052ef	        0x488b4a48	            mov rcx, qword [rdx + 0x48] 	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x40052f3	    0x488988800000	             mov qword [rax + 0x80], rcx	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4
0x40052fa	          0x4489ef	                           mov edi, r13d	      1626	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_5
0x40052fd	        0x4183c501	                             add r13d, 1	      1608	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4005301	      0xe88af3ffff	                 call sym.update_si_attr	      1626	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_5
0x4005306	    0x418b8424bc00	            mov eax, dword [r12 + 0xbc] 	      1608	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400530e	    0x4981c6900000	                           add r14, 0x90	      1608	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4005315	        0x4883c318	                           add rbx, 0x18	      1608	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4005319	          0x4439e8	                           cmp eax, r13d	      1608	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400531c	            0x7e7a	                           jle 0x4005398	      1608	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400531e	          0x4c89f5	                            mov rbp, r14	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4005321	    0x48032d000000	             add rbp, qword [0x04005328]	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4005328	            0x8b03	                    mov eax, dword [rbx]	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400532a	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_4
0x400532e	          0x894500	                    mov dword [rbp], eax	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4005331	        0x48634304	            movsxd rax, dword [rbx + 4] 	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4005335	        0x48894568	            mov qword [rbp + 0x68], rax 	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4005339	          0x8b4308	                mov eax, dword [rbx + 8]	      1613	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400533c	          0x894570	            mov dword [rbp + 0x70], eax 	      1613	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x400533f	          0x8b430c	              mov eax, dword [rbx + 0xc]	      1614	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4005342	          0x894574	            mov dword [rbp + 0x74], eax 	      1614	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x4005345	      0xe800000000	                          call 0x400534a	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_4
0x400534a	    0x488985880000	            mov qword [rbp + 0x88], rax 	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_4
0x4005351	    0x8b0500000000	            mov eax, dword [0x04005357] 	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3
0x4005357	            0x85c0	                           test eax, eax	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3
0x4005359	     0xf8959ffffff	                           jns 0x40052b8	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3
0x400535f	          0x4c89f2	                            mov rdx, r14	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3
0x4005362	    0x480315000000	             add rdx, qword [0x04005369]	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3
0x4005369	        0xf6426904	               test byte [rdx + 0x69], 4	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3
0x400536d	          0x4889d0	                            mov rax, rdx	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3
0x4005370	     0xf844cffffff	                            je 0x40052c2	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3
0x4005376	    0x44892d000000	           mov dword [0x0400537d], r13d 	      1618	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3
0x400537d	      0xe940ffffff	                           jmp 0x40052c2	      1618	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3
0x4005382	    0x660f1f440000	                    nop word [rax + rax]	      1618	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3
0x4005388	      0x498b5c2420	            mov rbx, qword [r12 + 0x20] 	      1605	syntax.c	FUNCTION_20	IF_1	IF_2
0x400538d	      0xe91affffff	                           jmp 0x40052ac	      1605	syntax.c	FUNCTION_20	IF_1	IF_2
0x4005392	    0x660f1f440000	                    nop word [rax + rax]	      1605	syntax.c	FUNCTION_20	IF_1	IF_2
0x4005398	    0x890500000000	            mov dword [0x0400539e], eax 	      1628	syntax.c	FUNCTION_20	IF_1
0x400539e	      0xe9a3feffff	                           jmp 0x4005246	      1628	syntax.c	FUNCTION_20	IF_1
syn_compare_stub	DO,0:functions,0:IF,0:WHILE,0:CALL,0:ELSE,0:SWITCH,0:FOR,0	8
0x4000040	           0xfb716	                   movzx edx, word [rsi]	      5402	syntax.c	FUNCTION_82
0x4000043	      0xb801000000	                              mov eax, 1	      5402	syntax.c	FUNCTION_82
0x4000048	          0x663917	                      cmp word [rdi], dx	      5402	syntax.c	FUNCTION_82
0x400004b	            0x7f08	                            jg 0x4000055	      5402	syntax.c	FUNCTION_82
0x400004d	           0xf9cc0	                                 setl al	      5402	syntax.c	FUNCTION_82
0x4000050	           0xfb6c0	                           movzx eax, al	      5402	syntax.c	FUNCTION_82
0x4000053	            0xf7d8	                                 neg eax	      5402	syntax.c	FUNCTION_82
0x4000055	            0xf3c3	                                     ret	      5403	syntax.c	FUNCTION_82
syn_cmd_list	DO,0:functions,0:IF,11:WHILE,1:CALL,39:ELSE,7:SWITCH,0:FOR,2	404
0x4005fa0	            0x4157	                                push r15	      3935	syntax.c	FUNCTION_63
0x4005fa2	            0x4156	                                push r14	      3935	syntax.c	FUNCTION_63
0x4005fa4	            0x4155	                                push r13	      3935	syntax.c	FUNCTION_63
0x4005fa6	            0x4154	                                push r12	      3935	syntax.c	FUNCTION_63
0x4005fa8	          0x4989fc	                            mov r12, rdi	      3935	syntax.c	FUNCTION_63
0x4005fab	              0x55	                                push rbp	      3935	syntax.c	FUNCTION_63
0x4005fac	              0x53	                                push rbx	      3935	syntax.c	FUNCTION_63
0x4005fad	    0x4881ecf80000	                           sub rsp, 0xf8	      3935	syntax.c	FUNCTION_63
0x4005fb4	          0x488b1f	                    mov rbx, qword [rdi]	      3936	syntax.c	FUNCTION_63
0x4005fb7	    0x64488b042528	                mov rax, qword fs:[0x28]	      3935	syntax.c	FUNCTION_63
0x4005fc0	    0x48898424e800	             mov qword [rsp + 0xe8], rax	      3935	syntax.c	FUNCTION_63
0x4005fc8	            0x31c0	                            xor eax, eax	      3935	syntax.c	FUNCTION_63
0x4005fca	        0x8974240c	              mov dword [rsp + 0xc], esi	      3935	syntax.c	FUNCTION_63
0x4005fce	          0x4889df	                            mov rdi, rbx	      3940	syntax.c	FUNCTION_63	CALL_1
0x4005fd1	      0xe800000000	                          call 0x4005fd6	      3940	syntax.c	FUNCTION_63	CALL_1
0x4005fd6	      0x458b4c2430	            mov r9d, dword [r12 + 0x30] 	      3941	syntax.c	FUNCTION_63	IF_1
0x4005fdb	      0x4989442408	                mov qword [r12 + 8], rax	      3940	syntax.c	FUNCTION_63	CALL_1
0x4005fe0	          0x4585c9	                           test r9d, r9d	      3941	syntax.c	FUNCTION_63	IF_1
0x4005fe3	     0xf85f7000000	                           jne 0x40060e0	      3941	syntax.c	FUNCTION_63	IF_1
0x4005fe9	    0x488b05000000	            mov rax, qword [0x04005ff0] 	      6445	syntax.c	FUNCTION_97
0x4005ff0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6445	syntax.c	FUNCTION_97
0x4005ff4	    0x448b80600200	           mov r8d, dword [rax + 0x260] 	      6448	syntax.c	FUNCTION_97
0x4005ffb	          0x4585c0	                           test r8d, r8d	      6448	syntax.c	FUNCTION_97
0x4005ffe	     0xf840c010000	                            je 0x4006110	      6448	syntax.c	FUNCTION_97
0x4006004	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      3950	syntax.c	FUNCTION_63	IF_3
0x4006008	            0x85d2	                           test edx, edx	      3950	syntax.c	FUNCTION_63	IF_3
0x400600a	     0xf8448010000	                            je 0x4006158	      3950	syntax.c	FUNCTION_63	IF_3
0x4006010	    0x8b909c020000	           mov edx, dword [rax + 0x29c] 	      3952	syntax.c	FUNCTION_63	IF_3	IF_4
0x4006016	          0xf6c201	                              test dl, 1	      3952	syntax.c	FUNCTION_63	IF_3	IF_4
0x4006019	     0xf85f1050000	                           jne 0x4006610	      3952	syntax.c	FUNCTION_63	IF_3	IF_4
0x400601f	          0x83e202	                              and edx, 2	      3959	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5
0x4006022	      0xba05000000	                              mov edx, 5	      3962	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	CALL_10
0x4006027	     0xf85a1030000	                           jne 0x40063ce	      3959	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5
0x400602d	    0x4883b8a80200	              cmp qword [rax + 0x2a8], 0	      3961	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	IF_6
0x4006035	     0xf8424060000	                            je 0x400665f	      3961	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	IF_6
0x400603b	      0xbe00000000	                              mov esi, 0	      3965	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_12
0x4006040	            0x31ff	                            xor edi, edi	      3965	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_12
0x4006042	      0xe800000000	                          call 0x4006047	      3965	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_12
0x4006047	          0x4889c7	                            mov rdi, rax	      3965	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_12
0x400604a	      0xe800000000	                          call 0x400604f	      3965	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_12
0x400604f	    0x488b05000000	            mov rax, qword [0x04006056] 	      3966	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_13
0x4006056	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3966	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_13
0x400605a	    0x488bb8a80200	           mov rdi, qword [rax + 0x2a8] 	      3966	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_13
0x4006061	      0xe800000000	                          call 0x4006066	      3966	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_13
0x4006066	            0x31ff	                            xor edi, edi	      3967	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_15
0x4006068	      0xba05000000	                              mov edx, 5	      3967	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_15
0x400606d	      0xbe00000000	                              mov esi, 0	      3967	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_15
0x4006072	      0xe800000000	                          call 0x4006077	      3967	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_15
0x4006077	          0x4889c7	                            mov rdi, rax	      3967	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_15
0x400607a	      0xe800000000	                          call 0x400607f	      3967	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_15
0x400607f	    0x488b05000000	            mov rax, qword [0x04006086] 	      4050	syntax.c	FUNCTION_65	IF_1
0x4006086	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4050	syntax.c	FUNCTION_65	IF_1
0x400608a	    0x4883b8b80200	              cmp qword [rax + 0x2b8], 0	      4050	syntax.c	FUNCTION_65	IF_1
0x4006092	            0x7e4c	                           jle 0x40060e0	      4050	syntax.c	FUNCTION_65	IF_1
0x4006094	      0xba05000000	                              mov edx, 5	      4052	syntax.c	FUNCTION_65	IF_1	CALL_2
0x4006099	      0xbe00000000	                              mov esi, 0	      4052	syntax.c	FUNCTION_65	IF_1	CALL_2
0x400609e	            0x31ff	                            xor edi, edi	      4052	syntax.c	FUNCTION_65	IF_1	CALL_2
0x40060a0	      0xe800000000	                          call 0x40060a5	      4052	syntax.c	FUNCTION_65	IF_1	CALL_2
0x40060a5	          0x4889c7	                            mov rdi, rax	      4052	syntax.c	FUNCTION_65	IF_1	CALL_2
0x40060a8	      0xe800000000	                          call 0x40060ad	      4052	syntax.c	FUNCTION_65	IF_1	CALL_2
0x40060ad	    0x488b05000000	            mov rax, qword [0x040060b4] 	      4053	syntax.c	FUNCTION_65	IF_1	CALL_3
0x40060b4	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4053	syntax.c	FUNCTION_65	IF_1	CALL_3
0x40060b8	    0x488bb8b80200	           mov rdi, qword [rax + 0x2b8] 	      4053	syntax.c	FUNCTION_65	IF_1	CALL_3
0x40060bf	      0xe800000000	                          call 0x40060c4	      4053	syntax.c	FUNCTION_65	IF_1	CALL_3
0x40060c4	            0x31ff	                            xor edi, edi	      4054	syntax.c	FUNCTION_65	IF_1	CALL_5
0x40060c6	      0xba05000000	                              mov edx, 5	      4054	syntax.c	FUNCTION_65	IF_1	CALL_5
0x40060cb	      0xbe00000000	                              mov esi, 0	      4054	syntax.c	FUNCTION_65	IF_1	CALL_5
0x40060d0	      0xe800000000	                          call 0x40060d5	      4054	syntax.c	FUNCTION_65	IF_1	CALL_5
0x40060d5	          0x4889c7	                            mov rdi, rax	      4054	syntax.c	FUNCTION_65	IF_1	CALL_5
0x40060d8	      0xe800000000	                          call 0x40060dd	      4054	syntax.c	FUNCTION_65	IF_1	CALL_5
0x40060dd	           0xf1f00	                         nop dword [rax]	      4054	syntax.c	FUNCTION_65	IF_1	CALL_5
0x40060e0	    0x488b8424e800	            mov rax, qword [rsp + 0xe8] 	      4022	syntax.c	FUNCTION_63
0x40060e8	    0x644833042528	                xor rax, qword fs:[0x28]	      4022	syntax.c	FUNCTION_63
0x40060f1	     0xf85c8050000	                           jne 0x40066bf	      4022	syntax.c	FUNCTION_63
0x40060f7	    0x4881c4f80000	                           add rsp, 0xf8	      4022	syntax.c	FUNCTION_63
0x40060fe	              0x5b	                                 pop rbx	      4022	syntax.c	FUNCTION_63
0x40060ff	              0x5d	                                 pop rbp	      4022	syntax.c	FUNCTION_63
0x4006100	            0x415c	                                 pop r12	      4022	syntax.c	FUNCTION_63
0x4006102	            0x415d	                                 pop r13	      4022	syntax.c	FUNCTION_63
0x4006104	            0x415e	                                 pop r14	      4022	syntax.c	FUNCTION_63
0x4006106	            0x415f	                                 pop r15	      4022	syntax.c	FUNCTION_63
0x4006108	              0xc3	                                     ret	      4022	syntax.c	FUNCTION_63
0x4006109	     0xf1f80000000	                         nop dword [rax]	      4022	syntax.c	FUNCTION_63
0x4006110	    0x8bb878020000	           mov edi, dword [rax + 0x278] 	      6446	syntax.c	FUNCTION_97
0x4006116	            0x85ff	                           test edi, edi	      6446	syntax.c	FUNCTION_97
0x4006118	     0xf85e6feffff	                           jne 0x4006004	      6446	syntax.c	FUNCTION_97
0x400611e	      0x4883780800	                  cmp qword [rax + 8], 0	      6447	syntax.c	FUNCTION_97
0x4006123	     0xf85dbfeffff	                           jne 0x4006004	      6447	syntax.c	FUNCTION_97
0x4006129	    0x4883b8300100	              cmp qword [rax + 0x130], 0	      6448	syntax.c	FUNCTION_97
0x4006131	     0xf85cdfeffff	                           jne 0x4006004	      6448	syntax.c	FUNCTION_97
0x4006137	            0x31ff	                            xor edi, edi	      3946	syntax.c	FUNCTION_63	IF_2	CALL_4
0x4006139	      0xba05000000	                              mov edx, 5	      3946	syntax.c	FUNCTION_63	IF_2	CALL_4
0x400613e	      0xbe00000000	                              mov esi, 0	      3946	syntax.c	FUNCTION_63	IF_2	CALL_4
0x4006143	      0xe800000000	                          call 0x4006148	      3946	syntax.c	FUNCTION_63	IF_2	CALL_4
0x4006148	          0x4889c7	                            mov rdi, rax	      3946	syntax.c	FUNCTION_63	IF_2	CALL_4
0x400614b	      0xe800000000	                          call 0x4006150	      3946	syntax.c	FUNCTION_63	IF_2	CALL_4
0x4006150	            0xeb8e	                           jmp 0x40060e0	      3947	syntax.c	FUNCTION_63	IF_2
0x4006152	    0x660f1f440000	                    nop word [rax + rax]	      3947	syntax.c	FUNCTION_63	IF_2
0x4006158	            0x31ff	                            xor edi, edi	      3983	syntax.c	FUNCTION_63	CALL_24
0x400615a	      0xba05000000	                              mov edx, 5	      3983	syntax.c	FUNCTION_63	CALL_24
0x400615f	      0xbe00000000	                              mov esi, 0	      3983	syntax.c	FUNCTION_63	CALL_24
0x4006164	      0xe800000000	                          call 0x4006169	      3983	syntax.c	FUNCTION_63	CALL_24
0x4006169	          0x4889c7	                            mov rdi, rax	      3983	syntax.c	FUNCTION_63	CALL_24
0x400616c	      0xe800000000	                          call 0x4006171	      3983	syntax.c	FUNCTION_63	CALL_24
0x4006171	           0xfb63b	                   movzx edi, byte [rbx]	      3984	syntax.c	FUNCTION_63	IF_8	CALL_25
0x4006174	      0xe800000000	                          call 0x4006179	      3984	syntax.c	FUNCTION_63	IF_8	CALL_25
0x4006179	            0x85c0	                           test eax, eax	      3984	syntax.c	FUNCTION_63	IF_8	CALL_25
0x400617b	     0xf845d010000	                            je 0x40062de	      3984	syntax.c	FUNCTION_63	IF_8	CALL_25
0x4006181	    0x8b3500000000	            mov esi, dword [0x04006187] 	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x4006187	            0x85f6	                           test esi, esi	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x4006189	            0x7e37	                           jle 0x40061c2	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x400618b	    0x8b0500000000	            mov eax, dword [0x04006191] 	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x4006191	            0x85c0	                           test eax, eax	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x4006193	            0x752d	                           jne 0x40061c2	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x4006195	      0xbd01000000	                              mov ebp, 1	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x400619a	            0xeb0e	                           jmp 0x40061aa	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x400619c	         0xf1f4000	                         nop dword [rax]	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x40061a0	    0x8b0500000000	            mov eax, dword [0x040061a6] 	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x40061a6	            0x85c0	                           test eax, eax	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x40061a8	            0x7518	                           jne 0x40061c2	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x40061aa	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      3990	syntax.c	FUNCTION_63	IF_8	CALL_26
0x40061ae	            0x31d2	                            xor edx, edx	      3990	syntax.c	FUNCTION_63	IF_8	CALL_26
0x40061b0	            0x89ef	                            mov edi, ebp	      3990	syntax.c	FUNCTION_63	IF_8	CALL_26
0x40061b2	          0x83c501	                              add ebp, 1	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x40061b5	      0xe856f9ffff	                   call sym.syn_list_one	      3990	syntax.c	FUNCTION_63	IF_8	CALL_26
0x40061ba	    0x392d00000000	            cmp dword [0x040061c0], ebp 	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x40061c0	            0x7dde	                           jge 0x40061a0	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x40061c2	    0x488b05000000	            mov rax, qword [0x040061c9] 	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x40061c9	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x40061cd	    0x8b8878020000	           mov ecx, dword [rax + 0x278] 	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x40061d3	            0x85c9	                           test ecx, ecx	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x40061d5	     0xf8e75030000	                           jle 0x4006550	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x40061db	    0x8b0500000000	            mov eax, dword [0x040061e1] 	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x40061e1	            0x31ed	                            xor ebp, ebp	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x40061e3	          0x4531ed	                          xor r13d, r13d	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x40061e6	            0x85c0	                           test eax, eax	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x40061e8	            0x747f	                            je 0x4006269	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x40061ea	      0xe961030000	                           jmp 0x4006550	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x40061ef	              0x90	                                     nop	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x40061f0	          0x83c701	                              add edi, 1	      4208	syntax.c	FUNCTION_68	IF_1
0x40061f3	          0x4863cf	                         movsxd rcx, edi	      4208	syntax.c	FUNCTION_68	IF_1
0x40061f6	    0x488b05000000	            mov rax, qword [0x040061fd] 	      4209	syntax.c	FUNCTION_68	IF_2
0x40061fd	          0x8d50ff	                      lea edx, [rax - 1]	      4210	syntax.c	FUNCTION_68	IF_2
0x4006200	          0x4839c1	                            cmp rcx, rax	      4210	syntax.c	FUNCTION_68	IF_2
0x4006203	           0xf4dfa	                         cmovge edi, edx	      4210	syntax.c	FUNCTION_68	IF_2
0x4006206	      0xe800000000	                          call 0x400620b	      4212	syntax.c	FUNCTION_68	CALL_3
0x400620b	    0x488b05000000	            mov rax, qword [0x04006212] 	      4213	syntax.c	FUNCTION_68	IF_3
0x4006212	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4213	syntax.c	FUNCTION_68	IF_3
0x4006216	    0x488b80880200	           mov rax, qword [rax + 0x288] 	      4213	syntax.c	FUNCTION_68	IF_3
0x400621d	      0x488b742810	      mov rsi, qword [rax + rbp + 0x10] 	      4213	syntax.c	FUNCTION_68	IF_3
0x4006222	          0x4885f6	                           test rsi, rsi	      4213	syntax.c	FUNCTION_68	IF_3
0x4006225	     0xf84fd020000	                            je 0x4006528	      4213	syntax.c	FUNCTION_68	IF_3
0x400622b	    0x8b1500000000	            mov edx, dword [0x04006231] 	      4215	syntax.c	FUNCTION_68	IF_3	CALL_4
0x4006231	      0xbf00000000	                              mov edi, 0	      4215	syntax.c	FUNCTION_68	IF_3	CALL_4
0x4006236	      0xe8a5aeffff	                    call sym.put_id_list	      4215	syntax.c	FUNCTION_68	IF_3	CALL_4
0x400623b	    0x488b05000000	            mov rax, qword [0x04006242] 	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x4006242	        0x4183c501	                             add r13d, 1	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x4006246	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x400624a	    0x4439a8780200	          cmp dword [rax + 0x278], r13d 	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x4006251	     0xf8ef9020000	                           jle 0x4006550	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x4006257	    0x8b0500000000	            mov eax, dword [0x0400625d] 	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x400625d	        0x4883c518	                           add rbp, 0x18	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x4006261	            0x85c0	                           test eax, eax	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x4006263	     0xf85e7020000	                           jne 0x4006550	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x4006269	      0xbf0a000000	                            mov edi, 0xa	      4204	syntax.c	FUNCTION_68	CALL_1
0x400626e	      0xe800000000	                          call 0x4006273	      4204	syntax.c	FUNCTION_68	CALL_1
0x4006273	    0x488b05000000	            mov rax, qword [0x0400627a] 	      4205	syntax.c	FUNCTION_68	CALL_2
0x400627a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4205	syntax.c	FUNCTION_68	CALL_2
0x400627e	    0x488b80880200	           mov rax, qword [rax + 0x288] 	      4205	syntax.c	FUNCTION_68	CALL_2
0x4006285	        0x488b3c28	              mov rdi, qword [rax + rbp]	      4205	syntax.c	FUNCTION_68	CALL_2
0x4006289	      0xe800000000	                          call 0x400628e	      4205	syntax.c	FUNCTION_68	CALL_2
0x400628e	    0x8b3d00000000	            mov edi, dword [0x04006294] 	      4207	syntax.c	FUNCTION_68	IF_1
0x4006294	          0x83ff0e	                            cmp edi, 0xe	      4207	syntax.c	FUNCTION_68	IF_1
0x4006297	     0xf8f53ffffff	                            jg 0x40061f0	      4207	syntax.c	FUNCTION_68	IF_1
0x400629d	      0xb90f000000	                            mov ecx, 0xf	      4207	syntax.c	FUNCTION_68	IF_1
0x40062a2	      0xbf0f000000	                            mov edi, 0xf	      4201	syntax.c	FUNCTION_68
0x40062a7	      0xe94affffff	                           jmp 0x40061f6	      4201	syntax.c	FUNCTION_68
0x40062ac	         0xf1f4000	                         nop dword [rax]	      4201	syntax.c	FUNCTION_68
0x40062b0	          0x4c89ef	                            mov rdi, r13	      9700	syntax.c	FUNCTION_152	IF_1	CALL_3
0x40062b3	      0xe800000000	                          call 0x40062b8	      9700	syntax.c	FUNCTION_152	IF_1	CALL_3
0x40062b8	          0x4585f6	                         test r14d, r14d	      4013	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	IF_11
0x40062bb	     0xf84ec000000	                            je 0x40063ad	      4013	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	IF_11
0x40062c1	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      4016	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_37
0x40062c5	      0xba01000000	                              mov edx, 1	      4016	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_37
0x40062ca	          0x4489f7	                           mov edi, r14d	      4016	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_37
0x40062cd	      0xe83ef8ffff	                   call sym.syn_list_one	      4016	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_37
0x40062d2	        0x488b3c24	                    mov rdi, qword [rsp]	      4018	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_38
0x40062d6	      0xe800000000	                          call 0x40062db	      4018	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_38
0x40062db	          0x4889c3	                            mov rbx, rax	      4018	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_38
0x40062de	           0xfb63b	                   movzx edi, byte [rbx]	      3999	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_28
0x40062e1	      0xe800000000	                          call 0x40062e6	      3999	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_28
0x40062e6	            0x85c0	                           test eax, eax	      3999	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_28
0x40062e8	     0xf8562020000	                           jne 0x4006550	      3999	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_28
0x40062ee	    0x8b0500000000	            mov eax, dword [0x040062f4] 	      3999	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_28
0x40062f4	            0x85c0	                           test eax, eax	      3999	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_28
0x40062f6	     0xf8554020000	                           jne 0x4006550	      3999	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_28
0x40062fc	          0x4889df	                            mov rdi, rbx	      4001	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_29
0x40062ff	      0xe800000000	                          call 0x4006304	      4001	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_29
0x4006304	          0x4889c6	                            mov rsi, rax	      5560	syntax.c	FUNCTION_85	CALL_1
0x4006307	        0x48890424	                    mov qword [rsp], rax	      4001	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_29
0x400630b	          0x4829de	                            sub rsi, rbx	      5560	syntax.c	FUNCTION_85	CALL_1
0x400630e	          0x803b40	                    cmp byte [rbx], 0x40	      4002	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9
0x4006311	     0xf8469010000	                            je 0x4006480	      4002	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9
0x4006317	          0x4889df	                            mov rdi, rbx	      9696	syntax.c	FUNCTION_152	CALL_1
0x400631a	      0xe800000000	                          call 0x400631f	      9696	syntax.c	FUNCTION_152	CALL_1
0x400631f	          0x4885c0	                           test rax, rax	      9697	syntax.c	FUNCTION_152	IF_1
0x4006322	          0x4989c5	                            mov r13, rax	      9696	syntax.c	FUNCTION_152	CALL_1
0x4006325	     0xf8482000000	                            je 0x40063ad	      9697	syntax.c	FUNCTION_152	IF_1
0x400632b	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      9639	syntax.c	FUNCTION_148	CALL_1
0x4006330	      0xbac7000000	                           mov edx, 0xc7	      9639	syntax.c	FUNCTION_148	CALL_1
0x4006335	          0x4889c6	                            mov rsi, rax	      9639	syntax.c	FUNCTION_148	CALL_1
0x4006338	      0xe800000000	                          call 0x400633d	      9639	syntax.c	FUNCTION_148	CALL_1
0x400633d	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      9640	syntax.c	FUNCTION_148	CALL_2
0x4006342	      0xe800000000	                          call 0x4006347	      9640	syntax.c	FUNCTION_148	CALL_2
0x4006347	    0x486305000000	         movsxd rax, dword [0x0400634e] 	      9641	syntax.c	FUNCTION_148	FOR_1
0x400634e	        0x488d14c0	                  lea rdx, [rax + rax*8]	      9641	syntax.c	FUNCTION_148	FOR_1
0x4006352	          0x4989c6	                            mov r14, rax	      9641	syntax.c	FUNCTION_148	FOR_1
0x4006355	        0x488d1450	                  lea rdx, [rax + rdx*2]	      9641	syntax.c	FUNCTION_148	FOR_1
0x4006359	    0x488b05000000	            mov rax, qword [0x04006360] 	      9641	syntax.c	FUNCTION_148	FOR_1
0x4006360	    0x4c8dbcd070ff	           lea r15, [rax + rdx*8 - 0x90]	      9641	syntax.c	FUNCTION_148	FOR_1
0x4006368	            0xeb2a	                           jmp 0x4006394	      9641	syntax.c	FUNCTION_148	FOR_1
0x400636a	    0x660f1f440000	                    nop word [rax + rax]	      9641	syntax.c	FUNCTION_148	FOR_1
0x4006370	          0x498b37	                    mov rsi, qword [r15]	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x4006373	          0x4885f6	                           test rsi, rsi	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x4006376	            0x7412	                            je 0x400638a	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x4006378	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400637d	      0xe800000000	                          call 0x4006382	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x4006382	            0x85c0	                           test eax, eax	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x4006384	     0xf8426ffffff	                            je 0x40062b0	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400638a	    0x4981ef980000	                           sub r15, 0x98	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x4006391	          0x4189ee	                           mov r14d, ebp	      4201	syntax.c	FUNCTION_68
0x4006394	          0x4489f5	                           mov ebp, r14d	      9641	syntax.c	FUNCTION_148	FOR_1
0x4006397	          0x83ed01	                              sub ebp, 1	      9641	syntax.c	FUNCTION_148	FOR_1
0x400639a	            0x79d4	                           jns 0x4006370	      9641	syntax.c	FUNCTION_148	FOR_1
0x400639c	          0x4c89ef	                            mov rdi, r13	      9700	syntax.c	FUNCTION_152	IF_1	CALL_3
0x400639f	      0xe800000000	                          call 0x40063a4	      9700	syntax.c	FUNCTION_152	IF_1	CALL_3
0x40063a4	          0x4585f6	                         test r14d, r14d	      4013	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	IF_11
0x40063a7	     0xf8514ffffff	                           jne 0x40062c1	      4013	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	IF_11
0x40063ad	      0xba05000000	                              mov edx, 5	      4014	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_36
0x40063b2	      0xbe00000000	                              mov esi, 0	      4014	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_36
0x40063b7	            0x31ff	                            xor edi, edi	      4014	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_36
0x40063b9	      0xe800000000	                          call 0x40063be	      4014	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_36
0x40063be	          0x4889de	                            mov rsi, rbx	      4014	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_36
0x40063c1	          0x4889c7	                            mov rdi, rax	      4014	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_36
0x40063c4	      0xe800000000	                          call 0x40063c9	      4014	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_36
0x40063c9	      0xe904ffffff	                           jmp 0x40062d2	      4014	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_36
0x40063ce	            0x31ff	                            xor edi, edi	      3972	syntax.c	FUNCTION_63	IF_3	CALL_18
0x40063d0	      0xbe00000000	                              mov esi, 0	      3972	syntax.c	FUNCTION_63	IF_3	CALL_18
0x40063d5	      0xe800000000	                          call 0x40063da	      3972	syntax.c	FUNCTION_63	IF_3	CALL_18
0x40063da	          0x4889c7	                            mov rdi, rax	      3972	syntax.c	FUNCTION_63	IF_3	CALL_18
0x40063dd	      0xe800000000	                          call 0x40063e2	      3972	syntax.c	FUNCTION_63	IF_3	CALL_18
0x40063e2	    0x488b05000000	            mov rax, qword [0x040063e9] 	      3973	syntax.c	FUNCTION_63	IF_3	IF_7
0x40063e9	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3973	syntax.c	FUNCTION_63	IF_3	IF_7
0x40063ed	    0x4883b8a80200	              cmp qword [rax + 0x2a8], 0	      3973	syntax.c	FUNCTION_63	IF_3	IF_7
0x40063f5	     0xf8e7d020000	                           jle 0x4006678	      3973	syntax.c	FUNCTION_63	IF_3	IF_7
0x40063fb	      0xba05000000	                              mov edx, 5	      3977	syntax.c	FUNCTION_63	IF_3	IF_7	CALL_20
0x4006400	      0xbe00000000	                              mov esi, 0	      3977	syntax.c	FUNCTION_63	IF_3	IF_7	CALL_20
0x4006405	            0x31ff	                            xor edi, edi	      3977	syntax.c	FUNCTION_63	IF_3	IF_7	CALL_20
0x4006407	      0xe800000000	                          call 0x400640c	      3977	syntax.c	FUNCTION_63	IF_3	IF_7	CALL_20
0x400640c	          0x4889c7	                            mov rdi, rax	      3977	syntax.c	FUNCTION_63	IF_3	IF_7	CALL_20
0x400640f	      0xe800000000	                          call 0x4006414	      3977	syntax.c	FUNCTION_63	IF_3	IF_7	CALL_20
0x4006414	      0xe8b7abffff	                  call sym.syn_lines_msg	      3978	syntax.c	FUNCTION_63	IF_3	IF_7	CALL_21
0x4006419	    0x488b05000000	            mov rax, qword [0x04006420] 	      4050	syntax.c	FUNCTION_65	IF_1
0x4006420	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4050	syntax.c	FUNCTION_65	IF_1
0x4006424	    0x4883b8b80200	              cmp qword [rax + 0x2b8], 0	      4050	syntax.c	FUNCTION_65	IF_1
0x400642c	     0xf8e3ffdffff	                           jle 0x4006171	      4050	syntax.c	FUNCTION_65	IF_1
0x4006432	      0xba05000000	                              mov edx, 5	      4052	syntax.c	FUNCTION_65	IF_1	CALL_2
0x4006437	      0xbe00000000	                              mov esi, 0	      4052	syntax.c	FUNCTION_65	IF_1	CALL_2
0x400643c	            0x31ff	                            xor edi, edi	      4052	syntax.c	FUNCTION_65	IF_1	CALL_2
0x400643e	      0xe800000000	                          call 0x4006443	      4052	syntax.c	FUNCTION_65	IF_1	CALL_2
0x4006443	          0x4889c7	                            mov rdi, rax	      4052	syntax.c	FUNCTION_65	IF_1	CALL_2
0x4006446	      0xe800000000	                          call 0x400644b	      4052	syntax.c	FUNCTION_65	IF_1	CALL_2
0x400644b	    0x488b05000000	            mov rax, qword [0x04006452] 	      4053	syntax.c	FUNCTION_65	IF_1	CALL_3
0x4006452	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4053	syntax.c	FUNCTION_65	IF_1	CALL_3
0x4006456	    0x488bb8b80200	           mov rdi, qword [rax + 0x2b8] 	      4053	syntax.c	FUNCTION_65	IF_1	CALL_3
0x400645d	      0xe800000000	                          call 0x4006462	      4053	syntax.c	FUNCTION_65	IF_1	CALL_3
0x4006462	            0x31ff	                            xor edi, edi	      4054	syntax.c	FUNCTION_65	IF_1	CALL_5
0x4006464	      0xba05000000	                              mov edx, 5	      4054	syntax.c	FUNCTION_65	IF_1	CALL_5
0x4006469	      0xbe00000000	                              mov esi, 0	      4054	syntax.c	FUNCTION_65	IF_1	CALL_5
0x400646e	      0xe800000000	                          call 0x4006473	      4054	syntax.c	FUNCTION_65	IF_1	CALL_5
0x4006473	          0x4889c7	                            mov rdi, rax	      4054	syntax.c	FUNCTION_65	IF_1	CALL_5
0x4006476	      0xe800000000	                          call 0x400647b	      4054	syntax.c	FUNCTION_65	IF_1	CALL_5
0x400647b	      0xe9f1fcffff	                           jmp 0x4006171	      4054	syntax.c	FUNCTION_65	IF_1	CALL_5
0x4006480	        0x488d7b01	                      lea rdi, [rbx + 1]	      5560	syntax.c	FUNCTION_85	CALL_1
0x4006484	          0x83ee01	                              sub esi, 1	      5560	syntax.c	FUNCTION_85	CALL_1
0x4006487	      0xe800000000	                          call 0x400648c	      5560	syntax.c	FUNCTION_85	CALL_1
0x400648c	          0x4885c0	                           test rax, rax	      5561	syntax.c	FUNCTION_85	IF_1
0x400648f	      0x4889442418	             mov qword [rsp + 0x18], rax	      5560	syntax.c	FUNCTION_85	CALL_1
0x4006494	            0x747c	                            je 0x4006512	      5561	syntax.c	FUNCTION_85	IF_1
0x4006496	          0x4889c7	                            mov rdi, rax	      5540	syntax.c	FUNCTION_84	CALL_1
0x4006499	      0xe800000000	                          call 0x400649e	      5540	syntax.c	FUNCTION_84	CALL_1
0x400649e	          0x4885c0	                           test rax, rax	      5541	syntax.c	FUNCTION_84	IF_1
0x40064a1	      0x4889442410	             mov qword [rsp + 0x10], rax	      5540	syntax.c	FUNCTION_84	CALL_1
0x40064a6	            0x7460	                            je 0x4006508	      5541	syntax.c	FUNCTION_84	IF_1
0x40064a8	    0x488b05000000	            mov rax, qword [0x040064af] 	      5543	syntax.c	FUNCTION_84	FOR_1
0x40064af	        0x4c8b6810	            mov r13, qword [rax + 0x10] 	      5543	syntax.c	FUNCTION_84	FOR_1
0x40064b3	    0x496385780200	        movsxd rax, dword [r13 + 0x278] 	      5543	syntax.c	FUNCTION_84	FOR_1
0x40064ba	          0x4989c7	                            mov r15, rax	      5543	syntax.c	FUNCTION_84	FOR_1
0x40064bd	        0x488d0440	                  lea rax, [rax + rax*2]	      5543	syntax.c	FUNCTION_84	FOR_1
0x40064c1	    0x4c8d34c5e8ff	                 lea r14, [rax*8 - 0x18]	      5543	syntax.c	FUNCTION_84	FOR_1
0x40064c9	            0xeb2b	                           jmp 0x40064f6	      5543	syntax.c	FUNCTION_84	FOR_1
0x40064cb	       0xf1f440000	                   nop dword [rax + rax]	      5543	syntax.c	FUNCTION_84	FOR_1
0x40064d0	    0x498b85880200	           mov rax, qword [r13 + 0x288] 	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2
0x40064d7	      0x4a8b743008	         mov rsi, qword [rax + r14 + 8] 	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2
0x40064dc	          0x4885f6	                           test rsi, rsi	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2
0x40064df	            0x740e	                            je 0x40064ef	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2
0x40064e1	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0x40064e6	      0xe800000000	                          call 0x40064eb	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0x40064eb	            0x85c0	                           test eax, eax	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0x40064ed	            0x7479	                            je 0x4006568	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0x40064ef	        0x4983ee18	                           sub r14, 0x18	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0x40064f3	          0x4189ef	                           mov r15d, ebp	      4201	syntax.c	FUNCTION_68
0x40064f6	          0x4489fd	                           mov ebp, r15d	      5543	syntax.c	FUNCTION_84	FOR_1
0x40064f9	          0x83ed01	                              sub ebp, 1	      5543	syntax.c	FUNCTION_84	FOR_1
0x40064fc	            0x79d2	                           jns 0x40064d0	      5543	syntax.c	FUNCTION_84	FOR_1
0x40064fe	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      5547	syntax.c	FUNCTION_84	CALL_3
0x4006503	      0xe800000000	                          call 0x4006508	      5547	syntax.c	FUNCTION_84	CALL_3
0x4006508	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      5564	syntax.c	FUNCTION_85	IF_1	CALL_3
0x400650d	      0xe800000000	                          call 0x4006512	      5564	syntax.c	FUNCTION_85	IF_1	CALL_3
0x4006512	      0xba05000000	                              mov edx, 5	      4006	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_32
0x4006517	      0xbe00000000	                              mov esi, 0	      4006	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_32
0x400651c	      0xe996feffff	                           jmp 0x40063b7	      4006	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_32
0x4006521	     0xf1f80000000	                         nop dword [rax]	      4006	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_32
0x4006528	    0x8b3500000000	            mov esi, dword [0x0400652e] 	      4220	syntax.c	FUNCTION_68	ELSE_1	CALL_7
0x400652e	      0xbf00000000	                              mov edi, 0	      4220	syntax.c	FUNCTION_68	ELSE_1	CALL_7
0x4006533	      0xe800000000	                          call 0x4006538	      4220	syntax.c	FUNCTION_68	ELSE_1	CALL_7
0x4006538	      0xbf00000000	                              mov edi, 0	      4221	syntax.c	FUNCTION_68	ELSE_1	CALL_8
0x400653d	      0xe800000000	                          call 0x4006542	      4221	syntax.c	FUNCTION_68	ELSE_1	CALL_8
0x4006542	      0xe9f4fcffff	                           jmp 0x400623b	      4221	syntax.c	FUNCTION_68	ELSE_1	CALL_8
0x4006547	    0x660f1f840000	                    nop word [rax + rax]	      4221	syntax.c	FUNCTION_68	ELSE_1	CALL_8
0x4006550	          0x4889df	                            mov rdi, rbx	      4021	syntax.c	FUNCTION_63	CALL_39
0x4006553	      0xe800000000	                          call 0x4006558	      4021	syntax.c	FUNCTION_63	CALL_39
0x4006558	      0x4989442408	                mov qword [r12 + 8], rax	      4021	syntax.c	FUNCTION_63	CALL_39
0x400655d	      0xe97efbffff	                           jmp 0x40060e0	      4021	syntax.c	FUNCTION_63	CALL_39
0x4006562	    0x660f1f440000	                    nop word [rax + rax]	      4021	syntax.c	FUNCTION_63	CALL_39
0x4006568	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      5547	syntax.c	FUNCTION_84	CALL_3
0x400656d	      0xe800000000	                          call 0x4006572	      5547	syntax.c	FUNCTION_84	CALL_3
0x4006572	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      5564	syntax.c	FUNCTION_85	IF_1	CALL_3
0x4006577	      0xe800000000	                          call 0x400657c	      5564	syntax.c	FUNCTION_85	IF_1	CALL_3
0x400657c	    0x4181ff29a6ff	                    cmp r15d, 0xffffa629	      4005	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	IF_10
0x4006583	            0x748d	                            je 0x4006512	      4005	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	IF_10
0x4006585	      0xbf0a000000	                            mov edi, 0xa	      4204	syntax.c	FUNCTION_68	CALL_1
0x400658a	      0xe800000000	                          call 0x400658f	      4204	syntax.c	FUNCTION_68	CALL_1
0x400658f	    0x488b05000000	            mov rax, qword [0x04006596] 	      4205	syntax.c	FUNCTION_68	CALL_2
0x4006596	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4205	syntax.c	FUNCTION_68	CALL_2
0x400659a	    0x488b80880200	           mov rax, qword [rax + 0x288] 	      4205	syntax.c	FUNCTION_68	CALL_2
0x40065a1	        0x4a8b3c30	              mov rdi, qword [rax + r14]	      4205	syntax.c	FUNCTION_68	CALL_2
0x40065a5	      0xe800000000	                          call 0x40065aa	      4205	syntax.c	FUNCTION_68	CALL_2
0x40065aa	    0x8b3d00000000	            mov edi, dword [0x040065b0] 	      4207	syntax.c	FUNCTION_68	IF_1
0x40065b0	          0x83ff0e	                            cmp edi, 0xe	      4207	syntax.c	FUNCTION_68	IF_1
0x40065b3	     0xf8e97000000	                           jle 0x4006650	      4207	syntax.c	FUNCTION_68	IF_1
0x40065b9	          0x83c701	                              add edi, 1	      4208	syntax.c	FUNCTION_68	IF_1
0x40065bc	          0x4863f7	                         movsxd rsi, edi	      4208	syntax.c	FUNCTION_68	IF_1
0x40065bf	    0x488b05000000	            mov rax, qword [0x040065c6] 	      4209	syntax.c	FUNCTION_68	IF_2
0x40065c6	          0x8d50ff	                      lea edx, [rax - 1]	      4210	syntax.c	FUNCTION_68	IF_2
0x40065c9	          0x4839f0	                            cmp rax, rsi	      4210	syntax.c	FUNCTION_68	IF_2
0x40065cc	           0xf4efa	                         cmovle edi, edx	      4210	syntax.c	FUNCTION_68	IF_2
0x40065cf	      0xe800000000	                          call 0x40065d4	      4212	syntax.c	FUNCTION_68	CALL_3
0x40065d4	    0x488b05000000	            mov rax, qword [0x040065db] 	      4213	syntax.c	FUNCTION_68	IF_3
0x40065db	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4213	syntax.c	FUNCTION_68	IF_3
0x40065df	    0x488b80880200	           mov rax, qword [rax + 0x288] 	      4213	syntax.c	FUNCTION_68	IF_3
0x40065e6	      0x4a8b743010	      mov rsi, qword [rax + r14 + 0x10] 	      4213	syntax.c	FUNCTION_68	IF_3
0x40065eb	          0x4885f6	                           test rsi, rsi	      4213	syntax.c	FUNCTION_68	IF_3
0x40065ee	     0xf84ac000000	                            je 0x40066a0	      4213	syntax.c	FUNCTION_68	IF_3
0x40065f4	    0x8b1500000000	            mov edx, dword [0x040065fa] 	      4215	syntax.c	FUNCTION_68	IF_3	CALL_4
0x40065fa	      0xbf00000000	                              mov edi, 0	      4215	syntax.c	FUNCTION_68	IF_3	CALL_4
0x40065ff	      0xe8dcaaffff	                    call sym.put_id_list	      4215	syntax.c	FUNCTION_68	IF_3	CALL_4
0x4006604	      0xe9c9fcffff	                           jmp 0x40062d2	      4215	syntax.c	FUNCTION_68	IF_3	CALL_4
0x4006609	     0xf1f80000000	                         nop dword [rax]	      4215	syntax.c	FUNCTION_68	IF_3	CALL_4
0x4006610	      0xba05000000	                              mov edx, 5	      3954	syntax.c	FUNCTION_63	IF_3	IF_4	CALL_6
0x4006615	      0xbe00000000	                              mov esi, 0	      3954	syntax.c	FUNCTION_63	IF_3	IF_4	CALL_6
0x400661a	            0x31ff	                            xor edi, edi	      3954	syntax.c	FUNCTION_63	IF_3	IF_4	CALL_6
0x400661c	      0xe800000000	                          call 0x4006621	      3954	syntax.c	FUNCTION_63	IF_3	IF_4	CALL_6
0x4006621	          0x4889c7	                            mov rdi, rax	      3954	syntax.c	FUNCTION_63	IF_3	IF_4	CALL_6
0x4006624	      0xe800000000	                          call 0x4006629	      3954	syntax.c	FUNCTION_63	IF_3	IF_4	CALL_6
0x4006629	      0xe8a2a9ffff	                  call sym.syn_lines_msg	      3955	syntax.c	FUNCTION_63	IF_3	IF_4	CALL_7
0x400662e	    0x488b05000000	            mov rax, qword [0x04006635] 	      4050	syntax.c	FUNCTION_65	IF_1
0x4006635	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4050	syntax.c	FUNCTION_65	IF_1
0x4006639	    0x4883b8b80200	              cmp qword [rax + 0x2b8], 0	      4050	syntax.c	FUNCTION_65	IF_1
0x4006641	     0xf8f4dfaffff	                            jg 0x4006094	      4050	syntax.c	FUNCTION_65	IF_1
0x4006647	      0xe994faffff	                           jmp 0x40060e0	      4050	syntax.c	FUNCTION_65	IF_1
0x400664c	         0xf1f4000	                         nop dword [rax]	      4050	syntax.c	FUNCTION_65	IF_1
0x4006650	      0xbe0f000000	                            mov esi, 0xf	      4207	syntax.c	FUNCTION_68	IF_1
0x4006655	      0xbf0f000000	                            mov edi, 0xf	      4201	syntax.c	FUNCTION_68
0x400665a	      0xe960ffffff	                           jmp 0x40065bf	      4201	syntax.c	FUNCTION_68
0x400665f	            0x31ff	                            xor edi, edi	      3962	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	CALL_10
0x4006661	      0xbe00000000	                              mov esi, 0	      3962	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	CALL_10
0x4006666	      0xe800000000	                          call 0x400666b	      3962	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	CALL_10
0x400666b	          0x4889c7	                            mov rdi, rax	      3962	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	CALL_10
0x400666e	      0xe800000000	                          call 0x4006673	      3962	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	CALL_10
0x4006673	      0xe968faffff	                           jmp 0x40060e0	      3962	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	CALL_10
0x4006678	    0x4883b8b00200	              cmp qword [rax + 0x2b0], 0	      3974	syntax.c	FUNCTION_63	IF_3	IF_7
0x4006680	     0xf8f75fdffff	                            jg 0x40063fb	      3974	syntax.c	FUNCTION_63	IF_3	IF_7
0x4006686	    0x4883b8b80200	              cmp qword [rax + 0x2b8], 0	      3975	syntax.c	FUNCTION_63	IF_3	IF_7
0x400668e	     0xf8f67fdffff	                            jg 0x40063fb	      3975	syntax.c	FUNCTION_63	IF_3	IF_7
0x4006694	      0xe9d8faffff	                           jmp 0x4006171	      3975	syntax.c	FUNCTION_63	IF_3	IF_7
0x4006699	     0xf1f80000000	                         nop dword [rax]	      3975	syntax.c	FUNCTION_63	IF_3	IF_7
0x40066a0	    0x8b3500000000	            mov esi, dword [0x040066a6] 	      4220	syntax.c	FUNCTION_68	ELSE_1	CALL_7
0x40066a6	      0xbf00000000	                              mov edi, 0	      4220	syntax.c	FUNCTION_68	ELSE_1	CALL_7
0x40066ab	      0xe800000000	                          call 0x40066b0	      4220	syntax.c	FUNCTION_68	ELSE_1	CALL_7
0x40066b0	      0xbf00000000	                              mov edi, 0	      4221	syntax.c	FUNCTION_68	ELSE_1	CALL_8
0x40066b5	      0xe800000000	                          call 0x40066ba	      4221	syntax.c	FUNCTION_68	ELSE_1	CALL_8
0x40066ba	      0xe913fcffff	                           jmp 0x40062d2	      4221	syntax.c	FUNCTION_68	ELSE_1	CALL_8
0x40066bf	      0xe800000000	                          call 0x40066c4	      4022	syntax.c	FUNCTION_63
hl_set_bg_color_name	DO,0:functions,0:IF,2:WHILE,0:CALL,2:ELSE,0:SWITCH,0:FOR,0	58
0x400bf80	            0x4156	                                push r14	      8558	syntax.c	FUNCTION_125
0x400bf82	            0x4155	                                push r13	      8558	syntax.c	FUNCTION_125
0x400bf84	            0x4154	                                push r12	      8558	syntax.c	FUNCTION_125
0x400bf86	              0x55	                                push rbp	      8558	syntax.c	FUNCTION_125
0x400bf87	              0x53	                                push rbx	      8558	syntax.c	FUNCTION_125
0x400bf88	    0x4881ecd00000	                           sub rsp, 0xd0	      8558	syntax.c	FUNCTION_125
0x400bf8f	    0x64488b042528	                mov rax, qword fs:[0x28]	      8558	syntax.c	FUNCTION_125
0x400bf98	    0x48898424c800	             mov qword [rsp + 0xc8], rax	      8558	syntax.c	FUNCTION_125
0x400bfa0	            0x31c0	                            xor eax, eax	      8558	syntax.c	FUNCTION_125
0x400bfa2	          0x4885ff	                           test rdi, rdi	      8561	syntax.c	FUNCTION_125	IF_1
0x400bfa5	     0xf8493000000	                            je 0x400c03e	      8561	syntax.c	FUNCTION_125	IF_1
0x400bfab	      0xbac7000000	                           mov edx, 0xc7	      9639	syntax.c	FUNCTION_148	CALL_1
0x400bfb0	      0xbe00000000	                              mov esi, 0	      9639	syntax.c	FUNCTION_148	CALL_1
0x400bfb5	          0x4989fc	                            mov r12, rdi	      9639	syntax.c	FUNCTION_148	CALL_1
0x400bfb8	          0x4889e7	                            mov rdi, rsp	      9639	syntax.c	FUNCTION_148	CALL_1
0x400bfbb	      0xe800000000	                          call 0x400bfc0	      9639	syntax.c	FUNCTION_148	CALL_1
0x400bfc0	          0x4889e7	                            mov rdi, rsp	      9640	syntax.c	FUNCTION_148	CALL_2
0x400bfc3	      0xe800000000	                          call 0x400bfc8	      9640	syntax.c	FUNCTION_148	CALL_2
0x400bfc8	    0x486305000000	         movsxd rax, dword [0x0400bfcf] 	      9641	syntax.c	FUNCTION_148	FOR_1
0x400bfcf	    0x4c8b2d000000	            mov r13, qword [0x0400bfd6] 	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x400bfd6	        0x488d14c0	                  lea rdx, [rax + rax*8]	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x400bfda	          0x4889c3	                            mov rbx, rax	      9641	syntax.c	FUNCTION_148	FOR_1
0x400bfdd	        0x488d0450	                  lea rax, [rax + rdx*2]	      9641	syntax.c	FUNCTION_148	FOR_1
0x400bfe1	    0x498dacc570ff	           lea rbp, [r13 + rax*8 - 0x90]	      9641	syntax.c	FUNCTION_148	FOR_1
0x400bfe9	            0xeb24	                           jmp 0x400c00f	      9641	syntax.c	FUNCTION_148	FOR_1
0x400bfeb	       0xf1f440000	                   nop dword [rax + rax]	      9641	syntax.c	FUNCTION_148	FOR_1
0x400bff0	        0x488b7500	                    mov rsi, qword [rbp]	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x400bff4	          0x4885f6	                           test rsi, rsi	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x400bff7	            0x740c	                            je 0x400c005	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x400bff9	          0x4889e7	                            mov rdi, rsp	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400bffc	      0xe800000000	                          call 0x400c001	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400c001	            0x85c0	                           test eax, eax	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400c003	            0x7413	                            je 0x400c018	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400c005	    0x4881ed980000	                           sub rbp, 0x98	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400c00c	          0x4963de	                        movsxd rbx, r14d	      8558	syntax.c	FUNCTION_125
0x400c00f	          0x4189de	                           mov r14d, ebx	      9641	syntax.c	FUNCTION_148	FOR_1
0x400c012	        0x4183ee01	                             sub r14d, 1	      9641	syntax.c	FUNCTION_148	FOR_1
0x400c016	            0x79d8	                           jns 0x400bff0	      9641	syntax.c	FUNCTION_148	FOR_1
0x400c018	            0x85db	                           test ebx, ebx	      8564	syntax.c	FUNCTION_125	IF_1	IF_2
0x400c01a	            0x7e22	                           jle 0x400c03e	      8564	syntax.c	FUNCTION_125	IF_1	IF_2
0x400c01c	        0x488d04db	                  lea rax, [rbx + rbx*8]	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_2
0x400c020	        0x488d1c43	                  lea rbx, [rbx + rax*2]	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_2
0x400c024	        0x48c1e303	                              shl rbx, 3	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_2
0x400c028	      0x498b7c1de0	       mov rdi, qword [r13 + rbx - 0x20]	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_2
0x400c02d	      0xe800000000	                          call 0x400c032	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_2
0x400c032	    0x488b05000000	            mov rax, qword [0x0400c039] 	      8567	syntax.c	FUNCTION_125	IF_1	IF_2
0x400c039	      0x4c896418e0	       mov qword [rax + rbx - 0x20], r12	      8567	syntax.c	FUNCTION_125	IF_1	IF_2
0x400c03e	    0x488b8424c800	            mov rax, qword [rsp + 0xc8] 	      8570	syntax.c	FUNCTION_125
0x400c046	    0x644833042528	                xor rax, qword fs:[0x28]	      8570	syntax.c	FUNCTION_125
0x400c04f	            0x7510	                           jne 0x400c061	      8570	syntax.c	FUNCTION_125
0x400c051	    0x4881c4d00000	                           add rsp, 0xd0	      8570	syntax.c	FUNCTION_125
0x400c058	              0x5b	                                 pop rbx	      8570	syntax.c	FUNCTION_125
0x400c059	              0x5d	                                 pop rbp	      8570	syntax.c	FUNCTION_125
0x400c05a	            0x415c	                                 pop r12	      8570	syntax.c	FUNCTION_125
0x400c05c	            0x415d	                                 pop r13	      8570	syntax.c	FUNCTION_125
0x400c05e	            0x415e	                                 pop r14	      8570	syntax.c	FUNCTION_125
0x400c060	              0xc3	                                     ret	      8570	syntax.c	FUNCTION_125
0x400c061	      0xe800000000	                          call 0x400c066	      8570	syntax.c	FUNCTION_125
check_state_ends	DO,0:functions,0:IF,9:WHILE,0:CALL,7:ELSE,2:SWITCH,0:FOR,1	219
0x4004880	    0x486305000000	         movsxd rax, dword [0x04004887] 	      2615	syntax.c	FUNCTION_31
0x4004887	    0x488b15000000	            mov rdx, qword [0x0400488e] 	      2615	syntax.c	FUNCTION_31
0x400488e	            0x4156	                                push r14	      2611	syntax.c	FUNCTION_31
0x4004890	            0x4155	                                push r13	      2611	syntax.c	FUNCTION_31
0x4004892	    0x41bd01000000	                             mov r13d, 1	      2611	syntax.c	FUNCTION_31
0x4004898	            0x4154	                                push r12	      2611	syntax.c	FUNCTION_31
0x400489a	              0x55	                                push rbp	      2611	syntax.c	FUNCTION_31
0x400489b	              0x53	                                push rbx	      2611	syntax.c	FUNCTION_31
0x400489c	        0x488d04c0	                  lea rax, [rax + rax*8]	      2615	syntax.c	FUNCTION_31
0x40048a0	        0x48c1e004	                              shl rax, 4	      2615	syntax.c	FUNCTION_31
0x40048a4	    0x488d9c0270ff	             lea rbx, [rdx + rax - 0x90]	      2615	syntax.c	FUNCTION_31
0x40048ac	         0xf1f4000	                         nop dword [rax]	      2615	syntax.c	FUNCTION_31
0x40048b0	          0x8b735c	            mov esi, dword [rbx + 0x5c] 	      2618	syntax.c	FUNCTION_31	FOR_1	IF_1
0x40048b3	            0x85f6	                           test esi, esi	      2618	syntax.c	FUNCTION_31	FOR_1	IF_1
0x40048b5	     0xf843c020000	                            je 0x4004af7	      2618	syntax.c	FUNCTION_31	FOR_1	IF_1
0x40048bb	    0x488b35000000	            mov rsi, qword [0x040048c2] 	      2619	syntax.c	FUNCTION_31	FOR_1	IF_1
0x40048c2	        0x48397318	            cmp qword [rbx + 0x18], rsi 	      2619	syntax.c	FUNCTION_31	FOR_1	IF_1
0x40048c6	            0x7c15	                            jl 0x40048dd	      2619	syntax.c	FUNCTION_31	FOR_1	IF_1
0x40048c8	     0xf8529020000	                           jne 0x4004af7	      2620	syntax.c	FUNCTION_31	FOR_1	IF_1
0x40048ce	    0x8b0500000000	            mov eax, dword [0x040048d4] 	      2621	syntax.c	FUNCTION_31	FOR_1	IF_1
0x40048d4	          0x394320	            cmp dword [rbx + 0x20], eax 	      2621	syntax.c	FUNCTION_31	FOR_1	IF_1
0x40048d7	     0xf8f1a020000	                            jg 0x4004af7	      2621	syntax.c	FUNCTION_31	FOR_1	IF_1
0x40048dd	          0x8b4358	            mov eax, dword [rbx + 0x58] 	      2629	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40048e0	            0x85c0	                           test eax, eax	      2629	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40048e2	            0x7410	                            je 0x40048f4	      2629	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40048e4	        0x483b7348	            cmp rsi, qword [rbx + 0x48] 	      2630	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40048e8	     0xf8cd1020000	                            jl 0x4004bbf	      2630	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40048ee	     0xf84bc020000	                            je 0x4004bb0	      2631	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x40048f4	        0x488b5368	            mov rdx, qword [rbx + 0x68] 	      2659	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x40048f8	    0x488b83800000	            mov rax, qword [rbx + 0x80] 	      2658	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x40048ff	    0xf7c280020000	                         test edx, 0x280	      2660	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4
0x4004905	    0x488905000000	            mov qword [0x0400490c], rax 	      2658	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x400490c	    0x891500000000	            mov dword [0x04004912], edx 	      2659	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x4004912	            0x89d0	                            mov eax, edx	      2659	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x4004914	     0xf8466020000	                            je 0x4004b80	      2660	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4
0x400491a	    0x48633d000000	         movsxd rdi, dword [0x04004921] 	      2912	syntax.c	FUNCTION_36	IF_1
0x4004921	      0x2500400000	                         and eax, 0x4000	      2666	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x4004926	            0x89c5	                            mov ebp, eax	      2666	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x4004928	            0x85ff	                           test edi, edi	      2912	syntax.c	FUNCTION_36	IF_1
0x400492a	            0x89f8	                            mov eax, edi	      2912	syntax.c	FUNCTION_36	IF_1
0x400492c	     0xf85fe010000	                           jne 0x4004b30	      2912	syntax.c	FUNCTION_36	IF_1
0x4004932	    0x8b1500000000	            mov edx, dword [0x04004938] 	      2921	syntax.c	FUNCTION_36	IF_2
0x4004938	    0xc70500000000	     mov dword [0x04004942], 0xffffffff 	      2918	syntax.c	FUNCTION_36
0x4004942	            0x85d2	                           test edx, edx	      2921	syntax.c	FUNCTION_36	IF_2
0x4004944	     0xf88ad010000	                            js 0x4004af7	      2921	syntax.c	FUNCTION_36	IF_2
0x400494a	    0xc70500000000	     mov dword [0x04004954], 0xffffffff 	      2922	syntax.c	FUNCTION_36	IF_2
0x4004954	      0xbbffffffff	                     mov ebx, 0xffffffff	      2922	syntax.c	FUNCTION_36	IF_2
0x4004959	            0x85c0	                           test eax, eax	      2670	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_5
0x400495b	     0xf8496010000	                            je 0x4004af7	      2670	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_5
0x4004961	            0x85ed	                           test ebp, ebp	      2673	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6
0x4004963	     0xf84e4000000	                            je 0x4004a4d	      2673	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6
0x4004969	            0x85db	                           test ebx, ebx	      2673	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6
0x400496b	     0xf88dc000000	                            js 0x4004a4d	      2673	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6
0x4004971	          0x8d50ff	                      lea edx, [rax - 1]	      1122	syntax.c	FUNCTION_10
0x4004974	            0x39da	                            cmp edx, ebx	      1124	syntax.c	FUNCTION_10	IF_3	FOR_2
0x4004976	     0xf8ed4020000	                           jle 0x4004c50	      1124	syntax.c	FUNCTION_10	IF_3	FOR_2
0x400497c	          0x4863ca	                         movsxd rcx, edx	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x400497f	    0x488b35000000	            mov rsi, qword [0x04004986] 	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x4004986	        0x488d0cc9	                  lea rcx, [rcx + rcx*8]	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x400498a	        0x48c1e104	                              shl rcx, 4	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x400498e	      0xf6440e6940	     test byte [rsi + rcx + 0x69], 0x40 	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x4004993	     0xf85b7020000	                           jne 0x4004c50	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x4004999	      0x488d4c0ed8	             lea rcx, [rsi + rcx - 0x28]	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x400499e	            0xeb16	                           jmp 0x40049b6	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x40049a0	          0x488b31	                    mov rsi, qword [rcx]	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x40049a3	    0x4881e9900000	                           sub rcx, 0x90	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x40049aa	    0xf7c600400000	                        test esi, 0x4000	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x40049b0	     0xf859a020000	                           jne 0x4004c50	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x40049b6	          0x83ea01	                              sub edx, 1	      1124	syntax.c	FUNCTION_10	IF_3	FOR_2
0x40049b9	            0x39da	                            cmp edx, ebx	      1124	syntax.c	FUNCTION_10	IF_3	FOR_2
0x40049bb	            0x75e3	                           jne 0x40049a0	      1124	syntax.c	FUNCTION_10	IF_3	FOR_2
0x40049bd	            0x39c3	                            cmp ebx, eax	      1129	syntax.c	FUNCTION_10	FOR_3
0x40049bf	            0x7d79	                           jge 0x4004a3a	      1129	syntax.c	FUNCTION_10	FOR_3
0x40049c1	          0x4863d3	                         movsxd rdx, ebx	      1129	syntax.c	FUNCTION_10	FOR_3
0x40049c4	          0x4531f6	                          xor r14d, r14d	      1129	syntax.c	FUNCTION_10	FOR_3
0x40049c7	        0x4c8d24d2	                  lea r12, [rdx + rdx*8]	      1129	syntax.c	FUNCTION_10	FOR_3
0x40049cb	        0x49c1e404	                              shl r12, 4	      1129	syntax.c	FUNCTION_10	FOR_3
0x40049cf	            0xeb1e	                           jmp 0x40049ef	      1129	syntax.c	FUNCTION_10	FOR_3
0x40049d1	     0xf1f80000000	                         nop dword [rax]	      1129	syntax.c	FUNCTION_10	FOR_3
0x40049d8	        0x41f6c601	                            test r14b, 1	      1133	syntax.c	FUNCTION_10	FOR_3	IF_5
0x40049dc	            0x752a	                           jne 0x4004a08	      1133	syntax.c	FUNCTION_10	FOR_3	IF_5
0x40049de	          0x83c301	                              add ebx, 1	      1129	syntax.c	FUNCTION_10	FOR_3
0x40049e1	          0x4531f6	                          xor r14d, r14d	      1133	syntax.c	FUNCTION_10	FOR_3	IF_5
0x40049e4	    0x4981c4900000	                           add r12, 0x90	      1133	syntax.c	FUNCTION_10	FOR_3	IF_5
0x40049eb	            0x39c3	                            cmp ebx, eax	      1129	syntax.c	FUNCTION_10	FOR_3
0x40049ed	            0x7d4b	                           jge 0x4004a3a	      1129	syntax.c	FUNCTION_10	FOR_3
0x40049ef	          0x4c89e5	                            mov rbp, r12	      1131	syntax.c	FUNCTION_10	FOR_3
0x40049f2	    0x48032d000000	             add rbp, qword [0x040049f9]	      1131	syntax.c	FUNCTION_10	FOR_3
0x40049f9	        0x488b5568	            mov rdx, qword [rbp + 0x68] 	      1132	syntax.c	FUNCTION_10	FOR_3	IF_5
0x40049fd	          0x4889d1	                            mov rcx, rdx	      1133	syntax.c	FUNCTION_10	FOR_3	IF_5
0x4004a00	    0x81e100040000	                          and ecx, 0x400	      1133	syntax.c	FUNCTION_10	FOR_3	IF_5
0x4004a06	            0x74d0	                            je 0x40049d8	      1133	syntax.c	FUNCTION_10	FOR_3	IF_5
0x4004a08	    0x488b05000000	            mov rax, qword [0x04004a0f] 	      1137	syntax.c	FUNCTION_10	FOR_3	IF_5
0x4004a0f	          0x80e680	                            and dh, 0x80	      1139	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_6
0x4004a12	    0xc74530000000	               mov dword [rbp + 0x30], 0	      1136	syntax.c	FUNCTION_10	FOR_3	IF_5
0x4004a19	        0x48894528	            mov qword [rbp + 0x28], rax 	      1137	syntax.c	FUNCTION_10	FOR_3	IF_5
0x4004a1d	     0xf84dd000000	                            je 0x4004b00	      1139	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_6
0x4004a23	          0x4885c9	                           test rcx, rcx	      1139	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_6
0x4004a26	            0x89f8	                            mov eax, edi	      1139	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_6
0x4004a28	        0x450f45f5	                       cmovne r14d, r13d	      1139	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_6
0x4004a2c	          0x83c301	                              add ebx, 1	      1129	syntax.c	FUNCTION_10	FOR_3
0x4004a2f	    0x4981c4900000	                           add r12, 0x90	      1129	syntax.c	FUNCTION_10	FOR_3
0x4004a36	            0x39c3	                            cmp ebx, eax	      1129	syntax.c	FUNCTION_10	FOR_3
0x4004a38	            0x7cb5	                            jl 0x40049ef	      1129	syntax.c	FUNCTION_10	FOR_3
0x4004a3a	      0xe871d8ffff	                  call sym.check_keepend	      1146	syntax.c	FUNCTION_10	CALL_2
0x4004a3f	    0x8b0500000000	            mov eax, dword [0x04004a45] 	      2676	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6	IF_7
0x4004a45	            0x85c0	                           test eax, eax	      2676	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6	IF_7
0x4004a47	     0xf84aa000000	                            je 0x4004af7	      2676	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6	IF_7
0x4004a4d	            0x4898	                                    cdqe	      2680	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x4004a4f	    0x488b15000000	            mov rdx, qword [0x04004a56] 	      2680	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x4004a56	        0x488d04c0	                  lea rax, [rax + rax*8]	      2680	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x4004a5a	        0x48c1e004	                              shl rax, 4	      2680	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x4004a5e	    0x488d9c0270ff	             lea rbx, [rdx + rax - 0x90]	      2680	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x4004a66	          0x486303	                 movsxd rax, dword [rbx]	      2691	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x4004a69	            0x85c0	                           test eax, eax	      2691	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x4004a6b	     0xf883ffeffff	                            js 0x40048b0	      2691	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x4004a71	    0x488b15000000	            mov rdx, qword [0x04004a78] 	      2692	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x4004a78	        0x488d0480	                  lea rax, [rax + rax*4]	      2692	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x4004a7c	        0x48c1e005	                              shl rax, 5	      2692	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x4004a80	    0x480382700200	            add rax, qword [rdx + 0x270]	      2692	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x4004a87	          0x803802	                       cmp byte [rax], 2	      2692	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x4004a8a	     0xf8520feffff	                           jne 0x40048b0	      2692	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x4004a90	    0x48f743684004	         test qword [rbx + 0x68], 0x440 	      2694	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x4004a98	     0xf8512feffff	                           jne 0x40048b0	      2694	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x4004a9e	    0x8b3500000000	            mov esi, dword [0x04004aa4] 	      2696	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_5
0x4004aa4	      0xba01000000	                              mov edx, 1	      2696	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_5
0x4004aa9	          0x4889df	                            mov rdi, rbx	      2696	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_5
0x4004aac	      0xe88ff7ffff	                  call sym.update_si_end	      2696	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_5
0x4004ab1	      0xe8fad7ffff	                  call sym.check_keepend	      2697	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_6
0x4004ab6	    0xf60500000000	               test byte [0x04004abd], 8	      2698	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9
0x4004abd	     0xf84edfdffff	                            je 0x40048b0	      2698	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9
0x4004ac3	    0x8b0d00000000	            mov ecx, dword [0x04004ac9] 	      2699	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9
0x4004ac9	            0x85c9	                           test ecx, ecx	      2699	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9
0x4004acb	     0xf89dffdffff	                           jns 0x40048b0	      2699	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9
0x4004ad1	    0x488b35000000	            mov rsi, qword [0x04004ad8] 	      3305	syntax.c	FUNCTION_42	CALL_1
0x4004ad8	    0x488b3d000000	            mov rdi, qword [0x04004adf] 	      3305	syntax.c	FUNCTION_42	CALL_1
0x4004adf	            0x31d2	                            xor edx, edx	      3305	syntax.c	FUNCTION_42	CALL_1
0x4004ae1	      0xe800000000	                          call 0x4004ae6	      3305	syntax.c	FUNCTION_42	CALL_1
0x4004ae6	    0x486315000000	         movsxd rdx, dword [0x04004aed] 	      2700	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9	CALL_7
0x4004aed	        0x803c1000	                 cmp byte [rax + rdx], 0	      2700	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9	CALL_7
0x4004af1	     0xf85b9fdffff	                           jne 0x40048b0	      2700	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9	CALL_7
0x4004af7	              0x5b	                                 pop rbx	      2708	syntax.c	FUNCTION_31	ELSE_2
0x4004af8	              0x5d	                                 pop rbp	      2708	syntax.c	FUNCTION_31	ELSE_2
0x4004af9	            0x415c	                                 pop r12	      2708	syntax.c	FUNCTION_31	ELSE_2
0x4004afb	            0x415d	                                 pop r13	      2708	syntax.c	FUNCTION_31	ELSE_2
0x4004afd	            0x415e	                                 pop r14	      2708	syntax.c	FUNCTION_31	ELSE_2
0x4004aff	              0xc3	                                     ret	      2708	syntax.c	FUNCTION_31	ELSE_2
0x4004b00	    0x8b3500000000	            mov esi, dword [0x04004b06] 	      1140	syntax.c	FUNCTION_10	FOR_3	IF_5	CALL_1
0x4004b06	          0x4889ef	                            mov rdi, rbp	      1140	syntax.c	FUNCTION_10	FOR_3	IF_5	CALL_1
0x4004b09	      0xba01000000	                              mov edx, 1	      1140	syntax.c	FUNCTION_10	FOR_3	IF_5	CALL_1
0x4004b0e	      0xe82df7ffff	                  call sym.update_si_end	      1140	syntax.c	FUNCTION_10	FOR_3	IF_5	CALL_1
0x4004b13	        0x488b4d68	            mov rcx, qword [rbp + 0x68] 	      1140	syntax.c	FUNCTION_10	FOR_3	IF_5	CALL_1
0x4004b17	    0x8b3d00000000	            mov edi, dword [0x04004b1d] 	      1140	syntax.c	FUNCTION_10	FOR_3	IF_5	CALL_1
0x4004b1d	    0x81e100040000	                          and ecx, 0x400	      1140	syntax.c	FUNCTION_10	FOR_3	IF_5	CALL_1
0x4004b23	      0xe9fbfeffff	                           jmp 0x4004a23	      1140	syntax.c	FUNCTION_10	FOR_3	IF_5	CALL_1
0x4004b28	     0xf1f84000000	                   nop dword [rax + rax]	      1140	syntax.c	FUNCTION_10	FOR_3	IF_5	CALL_1
0x4004b30	        0x488d04ff	                  lea rax, [rdi + rdi*8]	      2914	syntax.c	FUNCTION_36	IF_1	CALL_1
0x4004b34	        0x48c1e004	                              shl rax, 4	      2914	syntax.c	FUNCTION_36	IF_1	CALL_1
0x4004b38	    0x480305000000	             add rax, qword [0x04004b3f]	      2914	syntax.c	FUNCTION_36	IF_1	CALL_1
0x4004b3f	        0x488b78f8	                mov rdi, qword [rax - 8]	      2914	syntax.c	FUNCTION_36	IF_1	CALL_1
0x4004b43	      0xe800000000	                          call 0x4004b48	      2914	syntax.c	FUNCTION_36	IF_1	CALL_1
0x4004b48	    0x8b3d00000000	            mov edi, dword [0x04004b4e] 	      2915	syntax.c	FUNCTION_36	IF_1
0x4004b4e	    0x8b1d00000000	            mov ebx, dword [0x04004b54] 	      2921	syntax.c	FUNCTION_36	IF_2
0x4004b54	    0xc70500000000	     mov dword [0x04004b5e], 0xffffffff 	      2918	syntax.c	FUNCTION_36
0x4004b5e	          0x8d47ff	                      lea eax, [rdi - 1]	      2915	syntax.c	FUNCTION_36	IF_1
0x4004b61	            0x39d8	                            cmp eax, ebx	      2921	syntax.c	FUNCTION_36	IF_2
0x4004b63	            0x89c7	                            mov edi, eax	      2915	syntax.c	FUNCTION_36	IF_1
0x4004b65	    0x890500000000	            mov dword [0x04004b6b], eax 	      2915	syntax.c	FUNCTION_36	IF_1
0x4004b6b	     0xf8fe8fdffff	                            jg 0x4004959	      2921	syntax.c	FUNCTION_36	IF_2
0x4004b71	      0xe9d4fdffff	                           jmp 0x400494a	      2921	syntax.c	FUNCTION_36	IF_2
0x4004b76	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2921	syntax.c	FUNCTION_36	IF_2
0x4004b80	    0x488b3d000000	            mov rdi, qword [0x04004b87] 	      3305	syntax.c	FUNCTION_42	CALL_1
0x4004b87	            0x31d2	                            xor edx, edx	      3305	syntax.c	FUNCTION_42	CALL_1
0x4004b89	      0xe800000000	                          call 0x4004b8e	      3305	syntax.c	FUNCTION_42	CALL_1
0x4004b8e	    0x486315000000	         movsxd rdx, dword [0x04004b95] 	      2661	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4	CALL_2
0x4004b95	        0x803c1000	                 cmp byte [rax + rdx], 0	      2661	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4	CALL_2
0x4004b99	            0x750b	                           jne 0x4004ba6	      2661	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4	CALL_2
0x4004b9b	    0x48c705000000	               mov qword [0x04004ba6], 0	      2662	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4
0x4004ba6	          0x8b4368	            mov eax, dword [rbx + 0x68] 	      2662	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4
0x4004ba9	      0xe96cfdffff	                           jmp 0x400491a	      2662	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4
0x4004bae	            0x6690	                                     nop	      2662	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4
0x4004bb0	    0x8b3d00000000	            mov edi, dword [0x04004bb6] 	      2632	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4004bb6	          0x397b50	            cmp dword [rbx + 0x50], edi 	      2632	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4004bb9	     0xf8e35fdffff	                           jle 0x40048f4	      2632	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4004bbf	            0x8903	                    mov dword [rbx], eax	      2634	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4004bc1	        0x488b4348	            mov rax, qword [rbx + 0x48] 	      2636	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4004bc5	        0x488b5350	            mov rdx, qword [rbx + 0x50] 	      2636	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4004bc9	    0xc74358000000	               mov dword [rbx + 0x58], 0	      2635	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4004bd0	        0x48894318	             mov qword [rbx + 0x18], rax	      2636	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4004bd4	        0x48894338	             mov qword [rbx + 0x38], rax	      2637	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4004bd8	        0x488b4368	            mov rax, qword [rbx + 0x68] 	      2638	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4004bdc	        0x48895320	             mov qword [rbx + 0x20], rdx	      2636	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4004be0	        0x48895340	             mov qword [rbx + 0x40], rdx	      2637	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4004be4	          0x4889c2	                            mov rdx, rax	      2638	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4004be7	        0x4883ca40	                            or rdx, 0x40	      2638	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4004beb	      0xa900000400	                       test eax, 0x40000	      2641	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	IF_3
0x4004bf0	        0x48895368	             mov qword [rbx + 0x68], rdx	      2638	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4004bf4	    0x8b1500000000	            mov edx, dword [0x04004bfa] 	      2640	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4004bfa	          0x8d4a01	                      lea ecx, [rdx + 1]	      2640	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4004bfd	          0x895370	             mov dword [rbx + 0x70], edx	      2640	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4004c00	    0x890d00000000	            mov dword [0x04004c06], ecx 	      2640	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4004c06	            0x740a	                            je 0x4004c12	      2641	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	IF_3
0x4004c08	    0x480d40000200	                         or rax, 0x20040	      2642	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	IF_3
0x4004c0e	        0x48894368	             mov qword [rbx + 0x68], rax	      2642	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	IF_3
0x4004c12	    0x8b0500000000	            mov eax, dword [0x04004c18] 	      2644	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	CALL_1
0x4004c18	          0x8d78ff	                      lea edi, [rax - 1]	      2644	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	CALL_1
0x4004c1b	      0xe870faffff	                 call sym.update_si_attr	      2644	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	CALL_1
0x4004c20	              0x5b	                                 pop rbx	      2708	syntax.c	FUNCTION_31	ELSE_2
0x4004c21	    0x48c705000000	               mov qword [0x04004c2c], 0	      2647	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4004c2c	    0xc70500000000	               mov dword [0x04004c36], 0	      2650	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4004c36	              0x5d	                                 pop rbp	      2708	syntax.c	FUNCTION_31	ELSE_2
0x4004c37	    0xc70500000000	     mov dword [0x04004c41], 0x7fffffff 	      2651	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4004c41	            0x415c	                                 pop r12	      2708	syntax.c	FUNCTION_31	ELSE_2
0x4004c43	            0x415d	                                 pop r13	      2708	syntax.c	FUNCTION_31	ELSE_2
0x4004c45	            0x415e	                                 pop r14	      2708	syntax.c	FUNCTION_31	ELSE_2
0x4004c47	              0xc3	                                     ret	      2708	syntax.c	FUNCTION_31	ELSE_2
0x4004c48	     0xf1f84000000	                   nop dword [rax + rax]	      2708	syntax.c	FUNCTION_31	ELSE_2
0x4004c50	            0x89d3	                            mov ebx, edx	      1124	syntax.c	FUNCTION_10	IF_3	FOR_2
0x4004c52	      0xe966fdffff	                           jmp 0x40049bd	      1124	syntax.c	FUNCTION_10	IF_3	FOR_2
highlight_clear	DO,0:functions,0:IF,1:WHILE,0:CALL,8:ELSE,0:SWITCH,0:FOR,0	73
0x4001620	          0x4863ff	                         movsxd rdi, edi	      8360	syntax.c	FUNCTION_120
0x4001623	              0x53	                                push rbx	      8359	syntax.c	FUNCTION_120
0x4001624	        0x488d04ff	                  lea rax, [rdi + rdi*8]	      8360	syntax.c	FUNCTION_120
0x4001628	        0x488d1c47	                  lea rbx, [rdi + rax*2]	      8360	syntax.c	FUNCTION_120
0x400162c	        0x48c1e303	                              shl rbx, 3	      8360	syntax.c	FUNCTION_120
0x4001630	          0x4889d8	                            mov rax, rbx	      8360	syntax.c	FUNCTION_120
0x4001633	    0x480305000000	             add rax, qword [0x0400163a]	      8360	syntax.c	FUNCTION_120
0x400163a	        0x488b7818	            mov rdi, qword [rax + 0x18] 	      8363	syntax.c	FUNCTION_120	CALL_1
0x400163e	    0xc74010010000	               mov dword [rax + 0x10], 1	      8360	syntax.c	FUNCTION_120
0x4001645	    0xc74014000000	               mov dword [rax + 0x14], 0	      8362	syntax.c	FUNCTION_120
0x400164c	          0x4885ff	                           test rdi, rdi	      8363	syntax.c	FUNCTION_120	CALL_1
0x400164f	            0x7417	                            je 0x4001668	      8363	syntax.c	FUNCTION_120	CALL_1
0x4001651	      0xe800000000	                          call 0x4001656	      8363	syntax.c	FUNCTION_120	CALL_1
0x4001656	          0x4889d8	                            mov rax, rbx	      8363	syntax.c	FUNCTION_120	CALL_1
0x4001659	    0x480305000000	             add rax, qword [0x04001660]	      8363	syntax.c	FUNCTION_120	CALL_1
0x4001660	    0x48c740180000	               mov qword [rax + 0x18], 0	      8363	syntax.c	FUNCTION_120	CALL_1
0x4001668	        0x488b7820	            mov rdi, qword [rax + 0x20] 	      8364	syntax.c	FUNCTION_120	CALL_2
0x400166c	          0x4885ff	                           test rdi, rdi	      8364	syntax.c	FUNCTION_120	CALL_2
0x400166f	            0x7417	                            je 0x4001688	      8364	syntax.c	FUNCTION_120	CALL_2
0x4001671	      0xe800000000	                          call 0x4001676	      8364	syntax.c	FUNCTION_120	CALL_2
0x4001676	          0x4889d8	                            mov rax, rbx	      8364	syntax.c	FUNCTION_120	CALL_2
0x4001679	    0x480305000000	             add rax, qword [0x04001680]	      8364	syntax.c	FUNCTION_120	CALL_2
0x4001680	    0x48c740200000	               mov qword [rax + 0x20], 0	      8364	syntax.c	FUNCTION_120	CALL_2
0x4001688	        0x488b7870	            mov rdi, qword [rax + 0x70] 	      8373	syntax.c	FUNCTION_120	CALL_3
0x400168c	    0xc74028000000	               mov dword [rax + 0x28], 0	      8365	syntax.c	FUNCTION_120
0x4001693	    0xc7402c000000	               mov dword [rax + 0x2c], 0	      8366	syntax.c	FUNCTION_120
0x400169a	    0xc74030000000	               mov dword [rax + 0x30], 0	      8367	syntax.c	FUNCTION_120
0x40016a1	    0xc74034000000	               mov dword [rax + 0x34], 0	      8368	syntax.c	FUNCTION_120
0x40016a8	    0xc74038000000	               mov dword [rax + 0x38], 0	      8369	syntax.c	FUNCTION_120
0x40016af	          0x4885ff	                           test rdi, rdi	      8373	syntax.c	FUNCTION_120	CALL_3
0x40016b2	    0xc7403c000000	               mov dword [rax + 0x3c], 0	      8370	syntax.c	FUNCTION_120
0x40016b9	    0xc7406c000000	               mov dword [rax + 0x6c], 0	      8372	syntax.c	FUNCTION_120
0x40016c0	            0x7417	                            je 0x40016d9	      8373	syntax.c	FUNCTION_120	CALL_3
0x40016c2	      0xe800000000	                          call 0x40016c7	      8373	syntax.c	FUNCTION_120	CALL_3
0x40016c7	          0x4889d8	                            mov rax, rbx	      8373	syntax.c	FUNCTION_120	CALL_3
0x40016ca	    0x480305000000	             add rax, qword [0x040016d1]	      8373	syntax.c	FUNCTION_120	CALL_3
0x40016d1	    0x48c740700000	               mov qword [rax + 0x70], 0	      8373	syntax.c	FUNCTION_120	CALL_3
0x40016d9	        0x488b7878	            mov rdi, qword [rax + 0x78] 	      8374	syntax.c	FUNCTION_120	CALL_4
0x40016dd	          0x4885ff	                           test rdi, rdi	      8374	syntax.c	FUNCTION_120	CALL_4
0x40016e0	            0x7417	                            je 0x40016f9	      8374	syntax.c	FUNCTION_120	CALL_4
0x40016e2	      0xe800000000	                          call 0x40016e7	      8374	syntax.c	FUNCTION_120	CALL_4
0x40016e7	          0x4889d8	                            mov rax, rbx	      8374	syntax.c	FUNCTION_120	CALL_4
0x40016ea	    0x480305000000	             add rax, qword [0x040016f1]	      8374	syntax.c	FUNCTION_120	CALL_4
0x40016f1	    0x48c740780000	               mov qword [rax + 0x78], 0	      8374	syntax.c	FUNCTION_120	CALL_4
0x40016f9	    0x488bb8800000	            mov rdi, qword [rax + 0x80] 	      8375	syntax.c	FUNCTION_120	CALL_5
0x4001700	          0x4885ff	                           test rdi, rdi	      8375	syntax.c	FUNCTION_120	CALL_5
0x4001703	            0x741a	                            je 0x400171f	      8375	syntax.c	FUNCTION_120	CALL_5
0x4001705	      0xe800000000	                          call 0x400170a	      8375	syntax.c	FUNCTION_120	CALL_5
0x400170a	          0x4889d8	                            mov rax, rbx	      8375	syntax.c	FUNCTION_120	CALL_5
0x400170d	    0x480305000000	             add rax, qword [0x04001714]	      8375	syntax.c	FUNCTION_120	CALL_5
0x4001714	    0x48c780800000	               mov qword [rax + 0x80], 0	      8375	syntax.c	FUNCTION_120	CALL_5
0x400171f	        0x488b7858	            mov rdi, qword [rax + 0x58] 	      8383	syntax.c	FUNCTION_120	CALL_6
0x4001723	    0x48c7404099d4	mov qword [rax + 0x40], 0xffffffffffffd499	      8378	syntax.c	FUNCTION_120
0x400172b	    0x48c7404899d4	mov qword [rax + 0x48], 0xffffffffffffd499	      8379	syntax.c	FUNCTION_120
0x4001733	    0x48c7405099d4	mov qword [rax + 0x50], 0xffffffffffffd499	      8382	syntax.c	FUNCTION_120
0x400173b	      0xe800000000	                          call 0x4001740	      8383	syntax.c	FUNCTION_120	CALL_6
0x4001740	          0x4889d8	                            mov rax, rbx	      8384	syntax.c	FUNCTION_120
0x4001743	    0x480305000000	             add rax, qword [0x0400174a]	      8384	syntax.c	FUNCTION_120
0x400174a	        0x488b7860	            mov rdi, qword [rax + 0x60] 	      8389	syntax.c	FUNCTION_120	CALL_8
0x400174e	    0x48c740580000	               mov qword [rax + 0x58], 0	      8384	syntax.c	FUNCTION_120
0x4001756	          0x4885ff	                           test rdi, rdi	      8389	syntax.c	FUNCTION_120	CALL_8
0x4001759	            0x7417	                            je 0x4001772	      8389	syntax.c	FUNCTION_120	CALL_8
0x400175b	      0xe800000000	                          call 0x4001760	      8389	syntax.c	FUNCTION_120	CALL_8
0x4001760	          0x4889d8	                            mov rax, rbx	      8389	syntax.c	FUNCTION_120	CALL_8
0x4001763	    0x480305000000	             add rax, qword [0x0400176a]	      8389	syntax.c	FUNCTION_120	CALL_8
0x400176a	    0x48c740600000	               mov qword [rax + 0x60], 0	      8389	syntax.c	FUNCTION_120	CALL_8
0x4001772	    0x8b9088000000	            mov edx, dword [rax + 0x88] 	      8395	syntax.c	FUNCTION_120	IF_1
0x4001778	    0xc74068000000	               mov dword [rax + 0x68], 0	      8390	syntax.c	FUNCTION_120
0x400177f	            0x85d2	                           test edx, edx	      8395	syntax.c	FUNCTION_120	IF_1
0x4001781	            0x750a	                           jne 0x400178d	      8395	syntax.c	FUNCTION_120	IF_1
0x4001783	    0xc78090000000	               mov dword [rax + 0x90], 0	      8396	syntax.c	FUNCTION_120	IF_1
0x400178d	              0x5b	                                 pop rbx	      8398	syntax.c	FUNCTION_120
0x400178e	              0xc3	                                     ret	      8398	syntax.c	FUNCTION_120
put_id_list	DO,0:functions,0:IF,6:WHILE,0:CALL,11:ELSE,5:SWITCH,0:FOR,1	74
0x40010e0	              0x55	                                push rbp	      4227	syntax.c	FUNCTION_69
0x40010e1	              0x53	                                push rbx	      4227	syntax.c	FUNCTION_69
0x40010e2	          0x4889f5	                            mov rbp, rsi	      4227	syntax.c	FUNCTION_69
0x40010e5	            0x89d6	                            mov esi, edx	      4230	syntax.c	FUNCTION_69	CALL_1
0x40010e7	        0x4883ec08	                              sub rsp, 8	      4227	syntax.c	FUNCTION_69
0x40010eb	      0xe800000000	                          call 0x40010f0	      4230	syntax.c	FUNCTION_69	CALL_1
0x40010f0	      0xbf3d000000	                           mov edi, 0x3d	      4231	syntax.c	FUNCTION_69	CALL_2
0x40010f5	      0xe800000000	                          call 0x40010fa	      4231	syntax.c	FUNCTION_69	CALL_2
0x40010fa	      0x480fbf5d00	                   movsx rbx, word [rbp]	      4232	syntax.c	FUNCTION_69	FOR_1
0x40010ff	          0x6685db	                             test bx, bx	      4232	syntax.c	FUNCTION_69	FOR_1
0x4001102	            0x742c	                            je 0x4001130	      4232	syntax.c	FUNCTION_69	FOR_1
0x4001104	    0x8d83e0b1ffff	                 lea eax, [rbx - 0x4e20]	      4234	syntax.c	FUNCTION_69	FOR_1	IF_1
0x400110a	        0x663de703	                           cmp ax, 0x3e7	      4234	syntax.c	FUNCTION_69	FOR_1	IF_1
0x400110e	            0x7730	                            ja 0x4001140	      4234	syntax.c	FUNCTION_69	FOR_1	IF_1
0x4001110	      0x66837d0200	                   cmp word [rbp + 2], 0	      4236	syntax.c	FUNCTION_69	FOR_1	IF_1	IF_2
0x4001115	     0xf84bd000000	                            je 0x40011d8	      4236	syntax.c	FUNCTION_69	FOR_1	IF_1	IF_2
0x400111b	      0xbf00000000	                              mov edi, 0	      4237	syntax.c	FUNCTION_69	FOR_1	IF_1	CALL_3
0x4001120	      0xe800000000	                          call 0x4001125	      4237	syntax.c	FUNCTION_69	FOR_1	IF_1	CALL_3
0x4001125	      0x66837d0200	                   cmp word [rbp + 2], 0	      4258	syntax.c	FUNCTION_69	FOR_1	IF_6
0x400112a	     0xf8580000000	                           jne 0x40011b0	      4258	syntax.c	FUNCTION_69	FOR_1	IF_6
0x4001130	        0x4883c408	                              add rsp, 8	      4262	syntax.c	FUNCTION_69
0x4001134	      0xbf20000000	                           mov edi, 0x20	      4261	syntax.c	FUNCTION_69	CALL_11
0x4001139	              0x5b	                                 pop rbx	      4262	syntax.c	FUNCTION_69
0x400113a	              0x5d	                                 pop rbp	      4262	syntax.c	FUNCTION_69
0x400113b	      0xe900000000	                           jmp 0x4001140	      4261	syntax.c	FUNCTION_69	CALL_11
0x4001140	    0x8d83f8adffff	                 lea eax, [rbx - 0x5208]	      4241	syntax.c	FUNCTION_69	FOR_1	ELSE_2	IF_3
0x4001146	        0x663de703	                           cmp ax, 0x3e7	      4241	syntax.c	FUNCTION_69	FOR_1	ELSE_2	IF_3
0x400114a	     0xf86a0000000	                           jbe 0x40011f0	      4241	syntax.c	FUNCTION_69	FOR_1	ELSE_2	IF_3
0x4001150	    0x8d8310aaffff	                 lea eax, [rbx - 0x55f0]	      4245	syntax.c	FUNCTION_69	FOR_1	ELSE_3	IF_4
0x4001156	        0x663de703	                           cmp ax, 0x3e7	      4245	syntax.c	FUNCTION_69	FOR_1	ELSE_3	IF_4
0x400115a	     0xf86c8000000	                           jbe 0x4001228	      4245	syntax.c	FUNCTION_69	FOR_1	ELSE_3	IF_4
0x4001160	      0x6681fbd759	                          cmp bx, 0x59d7	      4249	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5
0x4001165	     0xf8e95000000	                           jle 0x4001200	      4249	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5
0x400116b	      0xbf40000000	                           mov edi, 0x40	      4253	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_7
0x4001170	      0x6681ebd859	                          sub bx, 0x59d8	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_8
0x4001175	      0xe800000000	                          call 0x400117a	      4253	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_7
0x400117a	    0x488b05000000	            mov rax, qword [0x04001181] 	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_8
0x4001181	        0x480fbfdb	                           movsx rbx, bx	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_8
0x4001185	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_8
0x4001189	        0x488d045b	                  lea rax, [rbx + rbx*2]	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_8
0x400118d	    0x488b8a880200	           mov rcx, qword [rdx + 0x288] 	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_8
0x4001194	        0x488d04c1	                  lea rax, [rcx + rax*8]	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_8
0x4001198	          0x488b38	                    mov rdi, qword [rax]	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_8
0x400119b	      0xe800000000	                          call 0x40011a0	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_8
0x40011a0	      0x66837d0200	                   cmp word [rbp + 2], 0	      4258	syntax.c	FUNCTION_69	FOR_1	IF_6
0x40011a5	            0x7489	                            je 0x4001130	      4258	syntax.c	FUNCTION_69	FOR_1	IF_6
0x40011a7	    0x660f1f840000	                    nop word [rax + rax]	      4258	syntax.c	FUNCTION_69	FOR_1	IF_6
0x40011b0	      0xbf2c000000	                           mov edi, 0x2c	      4259	syntax.c	FUNCTION_69	FOR_1	CALL_10
0x40011b5	        0x4883c502	                              add rbp, 2	      4232	syntax.c	FUNCTION_69	FOR_1
0x40011b9	      0xe800000000	                          call 0x40011be	      4259	syntax.c	FUNCTION_69	FOR_1	CALL_10
0x40011be	      0x480fbf5d00	                   movsx rbx, word [rbp]	      4259	syntax.c	FUNCTION_69	FOR_1	CALL_10
0x40011c3	          0x6685db	                             test bx, bx	      4232	syntax.c	FUNCTION_69	FOR_1
0x40011c6	     0xf8538ffffff	                           jne 0x4001104	      4232	syntax.c	FUNCTION_69	FOR_1
0x40011cc	      0xe95fffffff	                           jmp 0x4001130	      4232	syntax.c	FUNCTION_69	FOR_1
0x40011d1	     0xf1f80000000	                         nop dword [rax]	      4232	syntax.c	FUNCTION_69	FOR_1
0x40011d8	      0xbf00000000	                              mov edi, 0	      4239	syntax.c	FUNCTION_69	FOR_1	IF_1	CALL_4
0x40011dd	      0xe800000000	                          call 0x40011e2	      4239	syntax.c	FUNCTION_69	FOR_1	IF_1	CALL_4
0x40011e2	      0xe93effffff	                           jmp 0x4001125	      4239	syntax.c	FUNCTION_69	FOR_1	IF_1	CALL_4
0x40011e7	    0x660f1f840000	                    nop word [rax + rax]	      4239	syntax.c	FUNCTION_69	FOR_1	IF_1	CALL_4
0x40011f0	      0xbf00000000	                              mov edi, 0	      4243	syntax.c	FUNCTION_69	FOR_1	ELSE_2	IF_3	CALL_5
0x40011f5	      0xe800000000	                          call 0x40011fa	      4243	syntax.c	FUNCTION_69	FOR_1	ELSE_2	IF_3	CALL_5
0x40011fa	      0xe926ffffff	                           jmp 0x4001125	      4243	syntax.c	FUNCTION_69	FOR_1	ELSE_2	IF_3	CALL_5
0x40011ff	              0x90	                                     nop	      4243	syntax.c	FUNCTION_69	FOR_1	ELSE_2	IF_3	CALL_5
0x4001200	        0x488d04db	                  lea rax, [rbx + rbx*8]	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_9
0x4001204	    0x488b15000000	            mov rdx, qword [0x0400120b] 	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_9
0x400120b	        0x488d0443	                  lea rax, [rbx + rax*2]	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_9
0x400120f	        0x488d04c2	                  lea rax, [rdx + rax*8]	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_9
0x4001213	    0x488bb868ffff	             mov rdi, qword [rax - 0x98]	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_9
0x400121a	      0xe800000000	                          call 0x400121f	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_9
0x400121f	      0xe901ffffff	                           jmp 0x4001125	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_9
0x4001224	         0xf1f4000	                         nop dword [rax]	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_9
0x4001228	      0xbf00000000	                              mov edi, 0	      4247	syntax.c	FUNCTION_69	FOR_1	ELSE_3	IF_4	CALL_6
0x400122d	      0xe800000000	                          call 0x4001232	      4247	syntax.c	FUNCTION_69	FOR_1	ELSE_3	IF_4	CALL_6
0x4001232	      0xe9eefeffff	                           jmp 0x4001125	      4247	syntax.c	FUNCTION_69	FOR_1	ELSE_3	IF_4	CALL_6
syn_cmd_clear	DO,0:functions,0:IF,8:WHILE,1:CALL,19:ELSE,5:SWITCH,0:FOR,0	440
0x400a730	            0x4157	                                push r15	      3755	syntax.c	FUNCTION_55
0x400a732	            0x4156	                                push r14	      3755	syntax.c	FUNCTION_55
0x400a734	            0x4155	                                push r13	      3755	syntax.c	FUNCTION_55
0x400a736	            0x4154	                                push r12	      3755	syntax.c	FUNCTION_55
0x400a738	              0x55	                                push rbp	      3755	syntax.c	FUNCTION_55
0x400a739	              0x53	                                push rbx	      3755	syntax.c	FUNCTION_55
0x400a73a	          0x4889fb	                            mov rbx, rdi	      3755	syntax.c	FUNCTION_55
0x400a73d	    0x4881ecf80000	                           sub rsp, 0xf8	      3755	syntax.c	FUNCTION_55
0x400a744	          0x488b2f	                    mov rbp, qword [rdi]	      3756	syntax.c	FUNCTION_55
0x400a747	        0x8974240c	              mov dword [rsp + 0xc], esi	      3755	syntax.c	FUNCTION_55
0x400a74b	    0x64488b042528	                mov rax, qword fs:[0x28]	      3755	syntax.c	FUNCTION_55
0x400a754	    0x48898424e800	             mov qword [rsp + 0xe8], rax	      3755	syntax.c	FUNCTION_55
0x400a75c	            0x31c0	                            xor eax, eax	      3755	syntax.c	FUNCTION_55
0x400a75e	          0x4889ef	                            mov rdi, rbp	      3760	syntax.c	FUNCTION_55	CALL_1
0x400a761	      0xe800000000	                          call 0x400a766	      3760	syntax.c	FUNCTION_55	CALL_1
0x400a766	          0x8b7330	            mov esi, dword [rbx + 0x30] 	      3761	syntax.c	FUNCTION_55	IF_1
0x400a769	        0x48894308	                mov qword [rbx + 8], rax	      3760	syntax.c	FUNCTION_55	CALL_1
0x400a76d	            0x85f6	                           test esi, esi	      3761	syntax.c	FUNCTION_55	IF_1
0x400a76f	            0x7515	                           jne 0x400a786	      3761	syntax.c	FUNCTION_55	IF_1
0x400a771	    0x488b05000000	            mov rax, qword [0x0400a778] 	      3770	syntax.c	FUNCTION_55	IF_2
0x400a778	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3770	syntax.c	FUNCTION_55	IF_2
0x400a77c	    0x8b8804030000	           mov ecx, dword [rax + 0x304] 	      3770	syntax.c	FUNCTION_55	IF_2
0x400a782	            0x85c9	                           test ecx, ecx	      3770	syntax.c	FUNCTION_55	IF_2
0x400a784	            0x7429	                            je 0x400a7af	      3770	syntax.c	FUNCTION_55	IF_2
0x400a786	    0x488b8424e800	            mov rax, qword [rsp + 0xe8] 	      3832	syntax.c	FUNCTION_55
0x400a78e	    0x644833042528	                xor rax, qword fs:[0x28]	      3832	syntax.c	FUNCTION_55
0x400a797	     0xf855a070000	                           jne 0x400aef7	      3832	syntax.c	FUNCTION_55
0x400a79d	    0x4881c4f80000	                           add rsp, 0xf8	      3832	syntax.c	FUNCTION_55
0x400a7a4	              0x5b	                                 pop rbx	      3832	syntax.c	FUNCTION_55
0x400a7a5	              0x5d	                                 pop rbp	      3832	syntax.c	FUNCTION_55
0x400a7a6	            0x415c	                                 pop r12	      3832	syntax.c	FUNCTION_55
0x400a7a8	            0x415d	                                 pop r13	      3832	syntax.c	FUNCTION_55
0x400a7aa	            0x415e	                                 pop r14	      3832	syntax.c	FUNCTION_55
0x400a7ac	            0x415f	                                 pop r15	      3832	syntax.c	FUNCTION_55
0x400a7ae	              0xc3	                                     ret	      3832	syntax.c	FUNCTION_55
0x400a7af	         0xfb67d00	                   movzx edi, byte [rbp]	      3773	syntax.c	FUNCTION_55	IF_3	CALL_2
0x400a7b3	      0xe800000000	                          call 0x400a7b8	      3773	syntax.c	FUNCTION_55	IF_3	CALL_2
0x400a7b8	            0x85c0	                           test eax, eax	      3773	syntax.c	FUNCTION_55	IF_3	CALL_2
0x400a7ba	     0xf8527050000	                           jne 0x400ace7	      3773	syntax.c	FUNCTION_55	IF_3	CALL_2
0x400a7c0	         0xfb67d00	                   movzx edi, byte [rbp]	      3793	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_7
0x400a7c4	      0xe800000000	                          call 0x400a7c9	      3793	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_7
0x400a7c9	            0x85c0	                           test eax, eax	      3793	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_7
0x400a7cb	     0xf8501030000	                           jne 0x400aad2	      3793	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_7
0x400a7d1	          0x4889ef	                            mov rdi, rbp	      3795	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_8
0x400a7d4	      0xe800000000	                          call 0x400a7d9	      3795	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_8
0x400a7d9	          0x4889c6	                            mov rsi, rax	      5560	syntax.c	FUNCTION_85	CALL_1
0x400a7dc	      0x4889442410	             mov qword [rsp + 0x10], rax	      3795	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_8
0x400a7e1	          0x4829ee	                            sub rsi, rbp	      5560	syntax.c	FUNCTION_85	CALL_1
0x400a7e4	        0x807d0040	                    cmp byte [rbp], 0x40	      3796	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6
0x400a7e8	     0xf8432020000	                            je 0x400aa20	      3796	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6
0x400a7ee	          0x4889ef	                            mov rdi, rbp	      9696	syntax.c	FUNCTION_152	CALL_1
0x400a7f1	      0xe800000000	                          call 0x400a7f6	      9696	syntax.c	FUNCTION_152	CALL_1
0x400a7f6	          0x4885c0	                           test rax, rax	      9697	syntax.c	FUNCTION_152	IF_1
0x400a7f9	          0x4989c4	                            mov r12, rax	      9696	syntax.c	FUNCTION_152	CALL_1
0x400a7fc	     0xf84d6040000	                            je 0x400acd8	      9697	syntax.c	FUNCTION_152	IF_1
0x400a802	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      9639	syntax.c	FUNCTION_148	CALL_1
0x400a807	      0xbac7000000	                           mov edx, 0xc7	      9639	syntax.c	FUNCTION_148	CALL_1
0x400a80c	          0x4889c6	                            mov rsi, rax	      9639	syntax.c	FUNCTION_148	CALL_1
0x400a80f	      0xe800000000	                          call 0x400a814	      9639	syntax.c	FUNCTION_148	CALL_1
0x400a814	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      9640	syntax.c	FUNCTION_148	CALL_2
0x400a819	      0xe800000000	                          call 0x400a81e	      9640	syntax.c	FUNCTION_148	CALL_2
0x400a81e	    0x486305000000	         movsxd rax, dword [0x0400a825] 	      9641	syntax.c	FUNCTION_148	FOR_1
0x400a825	        0x488d14c0	                  lea rdx, [rax + rax*8]	      9641	syntax.c	FUNCTION_148	FOR_1
0x400a829	          0x4989c6	                            mov r14, rax	      9641	syntax.c	FUNCTION_148	FOR_1
0x400a82c	        0x488d1450	                  lea rdx, [rax + rdx*2]	      9641	syntax.c	FUNCTION_148	FOR_1
0x400a830	    0x488b05000000	            mov rax, qword [0x0400a837] 	      9641	syntax.c	FUNCTION_148	FOR_1
0x400a837	    0x4c8dbcd070ff	           lea r15, [rax + rdx*8 - 0x90]	      9641	syntax.c	FUNCTION_148	FOR_1
0x400a83f	            0xeb27	                           jmp 0x400a868	      9641	syntax.c	FUNCTION_148	FOR_1
0x400a841	     0xf1f80000000	                         nop dword [rax]	      9641	syntax.c	FUNCTION_148	FOR_1
0x400a848	          0x498b37	                    mov rsi, qword [r15]	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x400a84b	          0x4885f6	                           test rsi, rsi	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x400a84e	            0x740e	                            je 0x400a85e	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x400a850	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400a855	      0xe800000000	                          call 0x400a85a	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400a85a	            0x85c0	                           test eax, eax	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400a85c	            0x7412	                            je 0x400a870	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400a85e	    0x4981ef980000	                           sub r15, 0x98	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400a865	          0x4189de	                           mov r14d, ebx	      3755	syntax.c	FUNCTION_55
0x400a868	          0x4489f3	                           mov ebx, r14d	      9641	syntax.c	FUNCTION_148	FOR_1
0x400a86b	          0x83eb01	                              sub ebx, 1	      9641	syntax.c	FUNCTION_148	FOR_1
0x400a86e	            0x79d8	                           jns 0x400a848	      9641	syntax.c	FUNCTION_148	FOR_1
0x400a870	          0x4c89e7	                            mov rdi, r12	      9700	syntax.c	FUNCTION_152	IF_1	CALL_3
0x400a873	      0xe800000000	                          call 0x400a878	      9700	syntax.c	FUNCTION_152	IF_1	CALL_3
0x400a878	          0x4585f6	                         test r14d, r14d	      3819	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8
0x400a87b	     0xf8457040000	                            je 0x400acd8	      3819	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8
0x400a881	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      3844	syntax.c	FUNCTION_56	IF_1
0x400a885	            0x85c0	                           test eax, eax	      3844	syntax.c	FUNCTION_56	IF_1
0x400a887	     0xf846b020000	                            je 0x400aaf8	      3844	syntax.c	FUNCTION_56	IF_1
0x400a88d	    0x488b05000000	            mov rax, qword [0x0400a894] 	      3851	syntax.c	FUNCTION_56	FOR_1
0x400a894	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3851	syntax.c	FUNCTION_56	FOR_1
0x400a898	    0x486380600200	        movsxd rax, dword [rax + 0x260] 	      3851	syntax.c	FUNCTION_56	FOR_1
0x400a89f	        0x488d1c80	                  lea rbx, [rax + rax*4]	      3851	syntax.c	FUNCTION_56	FOR_1
0x400a8a3	          0x4989c7	                            mov r15, rax	      3851	syntax.c	FUNCTION_56	FOR_1
0x400a8a6	        0x48c1e305	                              shl rbx, 5	      3851	syntax.c	FUNCTION_56	FOR_1
0x400a8aa	    0x4881eba00000	                           sub rbx, 0xa0	      3851	syntax.c	FUNCTION_56	FOR_1
0x400a8b1	            0xeb0c	                           jmp 0x400a8bf	      3851	syntax.c	FUNCTION_56	FOR_1
0x400a8b3	       0xf1f440000	                   nop dword [rax + rax]	      3851	syntax.c	FUNCTION_56	FOR_1
0x400a8b8	    0x4881eba00000	                           sub rbx, 0xa0	      3851	syntax.c	FUNCTION_56	FOR_1
0x400a8bf	        0x4183ef01	                             sub r15d, 1	      3851	syntax.c	FUNCTION_56	FOR_1
0x400a8c3	     0xf883f010000	                            js 0x400aa08	      3851	syntax.c	FUNCTION_56	FOR_1
0x400a8c9	    0x488b05000000	            mov rax, qword [0x0400a8d0] 	      3853	syntax.c	FUNCTION_56	FOR_1
0x400a8d0	          0x4889dd	                            mov rbp, rbx	      3853	syntax.c	FUNCTION_56	FOR_1
0x400a8d3	        0x4c8b6010	            mov r12, qword [rax + 0x10] 	      3853	syntax.c	FUNCTION_56	FOR_1
0x400a8d7	    0x4903ac247002	            add rbp, qword [r12 + 0x270]	      3853	syntax.c	FUNCTION_56	FOR_1
0x400a8df	         0xfbf4554	           movsx eax, word [rbp + 0x54] 	      3854	syntax.c	FUNCTION_56	FOR_1	IF_2
0x400a8e3	          0x4139c6	                           cmp r14d, eax	      3854	syntax.c	FUNCTION_56	FOR_1	IF_2
0x400a8e6	            0x75d0	                           jne 0x400a8b8	      3854	syntax.c	FUNCTION_56	FOR_1	IF_2
0x400a8e8	         0xfbe4501	               movsx eax, byte [rbp + 1]	      3854	syntax.c	FUNCTION_56	FOR_1	IF_2
0x400a8ec	        0x3944240c	              cmp dword [rsp + 0xc], eax	      3854	syntax.c	FUNCTION_56	FOR_1	IF_2
0x400a8f0	            0x75c6	                           jne 0x400a8b8	      3854	syntax.c	FUNCTION_56	FOR_1	IF_2
0x400a8f2	        0xf6452520	           test byte [rbp + 0x25], 0x20 	      3712	syntax.c	FUNCTION_52	IF_1
0x400a8f6	            0x7409	                            je 0x400a901	      3712	syntax.c	FUNCTION_52	IF_1
0x400a8f8	    0x4183ac240c03	              sub dword [r12 + 0x30c], 1	      3713	syntax.c	FUNCTION_52	IF_1
0x400a901	        0x488b7d60	            mov rdi, qword [rbp + 0x60] 	      3728	syntax.c	FUNCTION_53	CALL_1
0x400a905	      0xe800000000	                          call 0x400a90a	      3728	syntax.c	FUNCTION_53	CALL_1
0x400a90a	    0x498b84247002	           mov rax, qword [r12 + 0x270] 	      3729	syntax.c	FUNCTION_53	CALL_2
0x400a912	      0x488b7c1868	      mov rdi, qword [rax + rbx + 0x68] 	      3729	syntax.c	FUNCTION_53	CALL_2
0x400a917	      0xe800000000	                          call 0x400a91c	      3729	syntax.c	FUNCTION_53	CALL_2
0x400a91c	          0x4585ff	                         test r15d, r15d	      3731	syntax.c	FUNCTION_53	IF_1
0x400a91f	    0x498b84247002	           mov rax, qword [r12 + 0x270] 	      3731	syntax.c	FUNCTION_53	IF_1
0x400a927	            0x740a	                            je 0x400a933	      3731	syntax.c	FUNCTION_53	IF_1
0x400a929	    0x80bc1860ffff	         cmp byte [rax + rbx - 0xa0], 2 	      3731	syntax.c	FUNCTION_53	IF_1
0x400a931	            0x742e	                            je 0x400a961	      3731	syntax.c	FUNCTION_53	IF_1
0x400a933	      0x488b7c1840	      mov rdi, qword [rax + rbx + 0x40] 	      3733	syntax.c	FUNCTION_53	IF_1	CALL_3
0x400a938	      0xe800000000	                          call 0x400a93d	      3733	syntax.c	FUNCTION_53	IF_1	CALL_3
0x400a93d	    0x498b84247002	           mov rax, qword [r12 + 0x270] 	      3734	syntax.c	FUNCTION_53	IF_1	CALL_4
0x400a945	      0x488b7c1848	      mov rdi, qword [rax + rbx + 0x48] 	      3734	syntax.c	FUNCTION_53	IF_1	CALL_4
0x400a94a	      0xe800000000	                          call 0x400a94f	      3734	syntax.c	FUNCTION_53	IF_1	CALL_4
0x400a94f	    0x498b84247002	           mov rax, qword [r12 + 0x270] 	      3735	syntax.c	FUNCTION_53	IF_1	CALL_5
0x400a957	      0x488b7c1858	      mov rdi, qword [rax + rbx + 0x58] 	      3735	syntax.c	FUNCTION_53	IF_1	CALL_5
0x400a95c	      0xe800000000	                          call 0x400a961	      3735	syntax.c	FUNCTION_53	IF_1	CALL_5
0x400a961	          0x4489f8	                           mov eax, r15d	        59	string3.h	FUNCTION_171	CALL_3
0x400a964	    0x488db5a00000	                   lea rsi, [rbp + 0xa0]	        59	string3.h	FUNCTION_171	CALL_3
0x400a96b	          0x4889ef	                            mov rdi, rbp	        59	string3.h	FUNCTION_171	CALL_3
0x400a96e	            0xf7d0	                                 not eax	        59	string3.h	FUNCTION_171	CALL_3
0x400a970	    0x410384246002	            add eax, dword [r12 + 0x260]	        59	string3.h	FUNCTION_171	CALL_3
0x400a978	            0x4898	                                    cdqe	        59	string3.h	FUNCTION_171	CALL_3
0x400a97a	        0x488d1480	                  lea rdx, [rax + rax*4]	        59	string3.h	FUNCTION_171	CALL_3
0x400a97e	        0x48c1e205	                              shl rdx, 5	        59	string3.h	FUNCTION_171	CALL_3
0x400a982	      0xe800000000	                          call 0x400a987	        59	string3.h	FUNCTION_171	CALL_3
0x400a987	    0x4183ac246002	              sub dword [r12 + 0x260], 1	      3718	syntax.c	FUNCTION_52
0x400a990	      0xe923ffffff	                           jmp 0x400a8b8	      3718	syntax.c	FUNCTION_52
0x400a995	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      5547	syntax.c	FUNCTION_84	CALL_3
0x400a99a	    0x418d9fd75900	                 lea ebx, [r15 + 0x59d7]	      5548	syntax.c	FUNCTION_84
0x400a9a1	      0xe800000000	                          call 0x400a9a6	      5547	syntax.c	FUNCTION_84	CALL_3
0x400a9a6	          0x4c89ef	                            mov rdi, r13	      5564	syntax.c	FUNCTION_85	IF_1	CALL_3
0x400a9a9	      0xe800000000	                          call 0x400a9ae	      5564	syntax.c	FUNCTION_85	IF_1	CALL_3
0x400a9ae	            0x85db	                           test ebx, ebx	      3799	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	IF_7
0x400a9b0	     0xf84ff000000	                            je 0x400aab5	      3799	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	IF_7
0x400a9b6	    0x8d8328a6ffff	                 lea eax, [rbx - 0x59d8]	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x400a9bc	        0x480fbfc0	                           movsx rax, ax	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x400a9c0	        0x488d1c40	                  lea rbx, [rax + rax*2]	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x400a9c4	    0x488b05000000	            mov rax, qword [0x0400a9cb] 	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x400a9cb	        0x48c1e303	                              shl rbx, 3	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x400a9cf	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x400a9d3	    0x488b80880200	           mov rax, qword [rax + 0x288] 	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x400a9da	      0x488b7c1810	      mov rdi, qword [rax + rbx + 0x10] 	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x400a9df	          0x4885ff	                           test rdi, rdi	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x400a9e2	            0x7424	                            je 0x400aa08	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x400a9e4	      0xe800000000	                          call 0x400a9e9	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x400a9e9	    0x488b05000000	            mov rax, qword [0x0400a9f0] 	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x400a9f0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x400a9f4	    0x488b80880200	           mov rax, qword [rax + 0x288] 	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x400a9fb	    0x48c744181000	         mov qword [rax + rbx + 0x10], 0	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x400aa04	         0xf1f4000	                         nop dword [rax]	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_12
0x400aa08	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      3827	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_17
0x400aa0d	      0xe800000000	                          call 0x400aa12	      3827	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_17
0x400aa12	          0x4889c5	                            mov rbp, rax	      3827	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_17
0x400aa15	      0xe9a6fdffff	                           jmp 0x400a7c0	      3827	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_17
0x400aa1a	    0x660f1f440000	                    nop word [rax + rax]	      3827	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_17
0x400aa20	        0x488d7d01	                      lea rdi, [rbp + 1]	      5560	syntax.c	FUNCTION_85	CALL_1
0x400aa24	          0x83ee01	                              sub esi, 1	      5560	syntax.c	FUNCTION_85	CALL_1
0x400aa27	      0xe800000000	                          call 0x400aa2c	      5560	syntax.c	FUNCTION_85	CALL_1
0x400aa2c	          0x4885c0	                           test rax, rax	      5561	syntax.c	FUNCTION_85	IF_1
0x400aa2f	          0x4989c5	                            mov r13, rax	      5560	syntax.c	FUNCTION_85	CALL_1
0x400aa32	     0xf847d000000	                            je 0x400aab5	      5561	syntax.c	FUNCTION_85	IF_1
0x400aa38	          0x4889c7	                            mov rdi, rax	      5540	syntax.c	FUNCTION_84	CALL_1
0x400aa3b	      0xe800000000	                          call 0x400aa40	      5540	syntax.c	FUNCTION_84	CALL_1
0x400aa40	          0x4885c0	                           test rax, rax	      5541	syntax.c	FUNCTION_84	IF_1
0x400aa43	      0x4889442418	             mov qword [rsp + 0x18], rax	      5540	syntax.c	FUNCTION_84	CALL_1
0x400aa48	            0x7463	                            je 0x400aaad	      5541	syntax.c	FUNCTION_84	IF_1
0x400aa4a	    0x488b05000000	            mov rax, qword [0x0400aa51] 	      5543	syntax.c	FUNCTION_84	FOR_1
0x400aa51	        0x4c8b6010	            mov r12, qword [rax + 0x10] 	      5543	syntax.c	FUNCTION_84	FOR_1
0x400aa55	    0x496384247802	        movsxd rax, dword [r12 + 0x278] 	      5543	syntax.c	FUNCTION_84	FOR_1
0x400aa5d	          0x4989c7	                            mov r15, rax	      5543	syntax.c	FUNCTION_84	FOR_1
0x400aa60	        0x488d0440	                  lea rax, [rax + rax*2]	      5543	syntax.c	FUNCTION_84	FOR_1
0x400aa64	    0x4c8d34c5e8ff	                 lea r14, [rax*8 - 0x18]	      5543	syntax.c	FUNCTION_84	FOR_1
0x400aa6c	            0xeb2d	                           jmp 0x400aa9b	      5543	syntax.c	FUNCTION_84	FOR_1
0x400aa6e	            0x6690	                                     nop	      5543	syntax.c	FUNCTION_84	FOR_1
0x400aa70	    0x498b84248802	           mov rax, qword [r12 + 0x288] 	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2
0x400aa78	      0x4a8b743008	         mov rsi, qword [rax + r14 + 8] 	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2
0x400aa7d	          0x4885f6	                           test rsi, rsi	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2
0x400aa80	            0x7412	                            je 0x400aa94	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2
0x400aa82	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0x400aa87	      0xe800000000	                          call 0x400aa8c	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0x400aa8c	            0x85c0	                           test eax, eax	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0x400aa8e	     0xf8401ffffff	                            je 0x400a995	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0x400aa94	        0x4983ee18	                           sub r14, 0x18	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0x400aa98	          0x4189df	                           mov r15d, ebx	      3755	syntax.c	FUNCTION_55
0x400aa9b	          0x4489fb	                           mov ebx, r15d	      5543	syntax.c	FUNCTION_84	FOR_1
0x400aa9e	          0x83eb01	                              sub ebx, 1	      5543	syntax.c	FUNCTION_84	FOR_1
0x400aaa1	            0x79cd	                           jns 0x400aa70	      5543	syntax.c	FUNCTION_84	FOR_1
0x400aaa3	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      5547	syntax.c	FUNCTION_84	CALL_3
0x400aaa8	      0xe800000000	                          call 0x400aaad	      5547	syntax.c	FUNCTION_84	CALL_3
0x400aaad	          0x4c89ef	                            mov rdi, r13	      5564	syntax.c	FUNCTION_85	IF_1	CALL_3
0x400aab0	      0xe800000000	                          call 0x400aab5	      5564	syntax.c	FUNCTION_85	IF_1	CALL_3
0x400aab5	      0xba05000000	                              mov edx, 5	      3801	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	IF_7	CALL_11
0x400aaba	      0xbe00000000	                              mov esi, 0	      3801	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	IF_7	CALL_11
0x400aabf	              0x90	                                     nop	      3801	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	IF_7	CALL_11
0x400aac0	            0x31ff	                            xor edi, edi	      3821	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_15
0x400aac2	      0xe800000000	                          call 0x400aac7	      3821	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_15
0x400aac7	          0x4889ee	                            mov rsi, rbp	      3821	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_15
0x400aaca	          0x4889c7	                            mov rdi, rax	      3821	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_15
0x400aacd	      0xe800000000	                          call 0x400aad2	      3821	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_15
0x400aad2	      0xbf23000000	                           mov edi, 0x23	      3830	syntax.c	FUNCTION_55	CALL_18
0x400aad7	      0xe800000000	                          call 0x400aadc	      3830	syntax.c	FUNCTION_55	CALL_18
0x400aadc	    0x488b05000000	            mov rax, qword [0x0400aae3] 	      3831	syntax.c	FUNCTION_55	CALL_19
0x400aae3	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      3831	syntax.c	FUNCTION_55	CALL_19
0x400aae7	      0xe800000000	                          call 0x400aaec	      3831	syntax.c	FUNCTION_55	CALL_19
0x400aaec	      0xe995fcffff	                           jmp 0x400a786	      3831	syntax.c	FUNCTION_55	CALL_19
0x400aaf1	     0xf1f80000000	                         nop dword [rax]	      3831	syntax.c	FUNCTION_55	CALL_19
0x400aaf8	    0x488b05000000	            mov rax, qword [0x0400aaff] 	      3846	syntax.c	FUNCTION_56	IF_1	CALL_1
0x400aaff	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3846	syntax.c	FUNCTION_56	IF_1	CALL_1
0x400ab03	          0x4889c3	                            mov rbx, rax	      3846	syntax.c	FUNCTION_56	IF_1	CALL_1
0x400ab06	          0x4889c7	                            mov rdi, rax	      4444	syntax.c	FUNCTION_72	CALL_1
0x400ab09	      0x4889442418	             mov qword [rsp + 0x18], rax	      3846	syntax.c	FUNCTION_56	IF_1	CALL_1
0x400ab0e	      0xe800000000	                          call 0x400ab13	      4444	syntax.c	FUNCTION_72	CALL_1
0x400ab13	        0x488b4308	                mov rax, qword [rbx + 8]	      4445	syntax.c	FUNCTION_72
0x400ab17	        0x488b6b20	            mov rbp, qword [rbx + 0x20] 	      4446	syntax.c	FUNCTION_72	FOR_1
0x400ab1b	            0x85c0	                           test eax, eax	      4446	syntax.c	FUNCTION_72	FOR_1
0x400ab1d	          0x4189c4	                           mov r12d, eax	      4445	syntax.c	FUNCTION_72
0x400ab20	     0xf8e89000000	                           jle 0x400abaf	      4446	syntax.c	FUNCTION_72	FOR_1
0x400ab26	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4446	syntax.c	FUNCTION_72	FOR_1
0x400ab30	        0x488b5d08	                mov rbx, qword [rbp + 8]	      4448	syntax.c	FUNCTION_72	FOR_1	IF_1	CALL_2
0x400ab34	          0x4885db	                           test rbx, rbx	      4448	syntax.c	FUNCTION_72	FOR_1	IF_1	CALL_2
0x400ab37	     0xf848b010000	                            je 0x400acc8	      4448	syntax.c	FUNCTION_72	FOR_1	IF_1	CALL_2
0x400ab3d	    0x4881fb000000	                              cmp rbx, 0	      4448	syntax.c	FUNCTION_72	FOR_1	IF_1	CALL_2
0x400ab44	     0xf847e010000	                            je 0x400acc8	      4448	syntax.c	FUNCTION_72	FOR_1	IF_1	CALL_2
0x400ab4a	        0x4183ec01	                             sub r12d, 1	      4450	syntax.c	FUNCTION_72	FOR_1	IF_1
0x400ab4e	        0x4883eb28	                           sub rbx, 0x28	      4452	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2
0x400ab52	            0x7452	                            je 0x400aba6	      4452	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2
0x400ab54	          0x4531ed	                          xor r13d, r13d	      4452	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2
0x400ab57	            0xeb12	                           jmp 0x400ab6b	      4452	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2
0x400ab59	     0xf1f80000000	                         nop dword [rax]	      4452	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2
0x400ab60	          0x4989dd	                            mov r13, rbx	      4474	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	ELSE_3
0x400ab63	          0x488b1b	                    mov rbx, qword [rbx]	      4474	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	ELSE_3
0x400ab66	          0x4885db	                           test rbx, rbx	      4452	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2
0x400ab69	            0x743b	                            je 0x400aba6	      4452	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2
0x400ab6b	         0xfbf430c	            movsx eax, word [rbx + 0xc] 	      4454	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2
0x400ab6f	          0x4139c6	                           cmp r14d, eax	      4454	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2
0x400ab72	            0x75ec	                           jne 0x400ab60	      4454	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2
0x400ab74	          0x4d85ed	                           test r13, r13	      4457	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x400ab77	          0x4c8b3b	                    mov r15, qword [rbx]	      4456	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2
0x400ab7a	     0xf8400010000	                            je 0x400ac80	      4457	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x400ab80	        0x4d897d00	                    mov qword [r13], r15	      4465	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	ELSE_2
0x400ab84	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      4466	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	CALL_4
0x400ab88	      0xe800000000	                          call 0x400ab8d	      4466	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	CALL_4
0x400ab8d	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      4467	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	CALL_5
0x400ab91	      0xe800000000	                          call 0x400ab96	      4467	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	CALL_5
0x400ab96	          0x4889df	                            mov rdi, rbx	      4468	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	CALL_6
0x400ab99	          0x4c89fb	                            mov rbx, r15	      4456	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2
0x400ab9c	      0xe800000000	                          call 0x400aba1	      4468	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	CALL_6
0x400aba1	          0x4885db	                           test rbx, rbx	      4452	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2
0x400aba4	            0x75c5	                           jne 0x400ab6b	      4452	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2
0x400aba6	        0x4883c510	                           add rbp, 0x10	      4446	syntax.c	FUNCTION_72	FOR_1
0x400abaa	          0x4585e4	                         test r12d, r12d	      4446	syntax.c	FUNCTION_72	FOR_1
0x400abad	            0x7581	                           jne 0x400ab30	      4446	syntax.c	FUNCTION_72	FOR_1
0x400abaf	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4479	syntax.c	FUNCTION_72	CALL_7
0x400abb4	      0xe800000000	                          call 0x400abb9	      4479	syntax.c	FUNCTION_72	CALL_7
0x400abb9	    0x488b05000000	            mov rax, qword [0x0400abc0] 	      3847	syntax.c	FUNCTION_56	IF_1	CALL_2
0x400abc0	        0x488b5810	            mov rbx, qword [rax + 0x10] 	      3847	syntax.c	FUNCTION_56	IF_1	CALL_2
0x400abc4	    0x488d83280100	                  lea rax, [rbx + 0x128]	      3847	syntax.c	FUNCTION_56	IF_1	CALL_2
0x400abcb	          0x4889c7	                            mov rdi, rax	      4444	syntax.c	FUNCTION_72	CALL_1
0x400abce	      0x4889442418	             mov qword [rsp + 0x18], rax	      3847	syntax.c	FUNCTION_56	IF_1	CALL_2
0x400abd3	      0xe800000000	                          call 0x400abd8	      4444	syntax.c	FUNCTION_72	CALL_1
0x400abd8	    0x488b83300100	           mov rax, qword [rbx + 0x130] 	      4445	syntax.c	FUNCTION_72
0x400abdf	    0x488bab480100	           mov rbp, qword [rbx + 0x148] 	      4446	syntax.c	FUNCTION_72	FOR_1
0x400abe6	            0x85c0	                           test eax, eax	      4446	syntax.c	FUNCTION_72	FOR_1
0x400abe8	          0x4189c4	                           mov r12d, eax	      4445	syntax.c	FUNCTION_72
0x400abeb	            0x7e7d	                           jle 0x400ac6a	      4446	syntax.c	FUNCTION_72	FOR_1
0x400abed	           0xf1f00	                         nop dword [rax]	      4446	syntax.c	FUNCTION_72	FOR_1
0x400abf0	        0x488b5d08	                mov rbx, qword [rbp + 8]	      4448	syntax.c	FUNCTION_72	FOR_1	IF_1	CALL_2
0x400abf4	    0x4881fb000000	                              cmp rbx, 0	      4448	syntax.c	FUNCTION_72	FOR_1	IF_1	CALL_2
0x400abfb	     0xf84b7000000	                            je 0x400acb8	      4448	syntax.c	FUNCTION_72	FOR_1	IF_1	CALL_2
0x400ac01	          0x4885db	                           test rbx, rbx	      4448	syntax.c	FUNCTION_72	FOR_1	IF_1	CALL_2
0x400ac04	     0xf84ae000000	                            je 0x400acb8	      4448	syntax.c	FUNCTION_72	FOR_1	IF_1	CALL_2
0x400ac0a	        0x4183ec01	                             sub r12d, 1	      4450	syntax.c	FUNCTION_72	FOR_1	IF_1
0x400ac0e	        0x4883eb28	                           sub rbx, 0x28	      4452	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2
0x400ac12	            0x744d	                            je 0x400ac61	      4452	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2
0x400ac14	          0x4531ff	                          xor r15d, r15d	      4452	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2
0x400ac17	            0xeb12	                           jmp 0x400ac2b	      4452	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2
0x400ac19	     0xf1f80000000	                         nop dword [rax]	      4452	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2
0x400ac20	          0x4989df	                            mov r15, rbx	      4474	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	ELSE_3
0x400ac23	          0x488b1b	                    mov rbx, qword [rbx]	      4474	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	ELSE_3
0x400ac26	          0x4885db	                           test rbx, rbx	      4452	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2
0x400ac29	            0x7436	                            je 0x400ac61	      4452	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2
0x400ac2b	         0xfbf430c	            movsx eax, word [rbx + 0xc] 	      4454	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2
0x400ac2f	          0x4139c6	                           cmp r14d, eax	      4454	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2
0x400ac32	            0x75ec	                           jne 0x400ac20	      4454	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2
0x400ac34	          0x4d85ff	                           test r15, r15	      4457	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x400ac37	          0x4c8b2b	                    mov r13, qword [rbx]	      4456	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2
0x400ac3a	            0x7464	                            je 0x400aca0	      4457	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x400ac3c	          0x4d892f	                    mov qword [r15], r13	      4465	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	ELSE_2
0x400ac3f	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      4466	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	CALL_4
0x400ac43	      0xe800000000	                          call 0x400ac48	      4466	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	CALL_4
0x400ac48	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      4467	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	CALL_5
0x400ac4c	      0xe800000000	                          call 0x400ac51	      4467	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	CALL_5
0x400ac51	          0x4889df	                            mov rdi, rbx	      4468	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	CALL_6
0x400ac54	          0x4c89eb	                            mov rbx, r13	      4456	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2
0x400ac57	      0xe800000000	                          call 0x400ac5c	      4468	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	CALL_6
0x400ac5c	          0x4885db	                           test rbx, rbx	      4452	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2
0x400ac5f	            0x75ca	                           jne 0x400ac2b	      4452	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2
0x400ac61	        0x4883c510	                           add rbp, 0x10	      4446	syntax.c	FUNCTION_72	FOR_1
0x400ac65	          0x4585e4	                         test r12d, r12d	      4446	syntax.c	FUNCTION_72	FOR_1
0x400ac68	            0x7586	                           jne 0x400abf0	      4446	syntax.c	FUNCTION_72	FOR_1
0x400ac6a	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4479	syntax.c	FUNCTION_72	CALL_7
0x400ac6f	      0xe800000000	                          call 0x400ac74	      4479	syntax.c	FUNCTION_72	CALL_7
0x400ac74	      0xe914fcffff	                           jmp 0x400a88d	      4479	syntax.c	FUNCTION_72	CALL_7
0x400ac79	     0xf1f80000000	                         nop dword [rax]	      4479	syntax.c	FUNCTION_72	CALL_7
0x400ac80	          0x4d85ff	                           test r15, r15	      4459	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	IF_4
0x400ac83	     0xf8478010000	                            je 0x400ae01	      4459	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	IF_4
0x400ac89	        0x498d7728	                   lea rsi, [r15 + 0x28]	      4462	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	ELSE_1
0x400ac8d	        0x48897508	                mov qword [rbp + 8], rsi	      4462	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	ELSE_1
0x400ac91	      0xe9eefeffff	                           jmp 0x400ab84	      4462	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	ELSE_1
0x400ac96	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4462	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	ELSE_1
0x400aca0	          0x4d85ed	                           test r13, r13	      4459	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	IF_4
0x400aca3	     0xf8446010000	                            je 0x400adef	      4459	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	IF_4
0x400aca9	        0x498d7528	                   lea rsi, [r13 + 0x28]	      4462	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	ELSE_1
0x400acad	        0x48897508	                mov qword [rbp + 8], rsi	      4462	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	ELSE_1
0x400acb1	            0xeb8c	                           jmp 0x400ac3f	      4462	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	ELSE_1
0x400acb3	       0xf1f440000	                   nop dword [rax + rax]	      4462	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	ELSE_1
0x400acb8	        0x4883c510	                           add rbp, 0x10	      4446	syntax.c	FUNCTION_72	FOR_1
0x400acbc	      0xe92fffffff	                           jmp 0x400abf0	      4446	syntax.c	FUNCTION_72	FOR_1
0x400acc1	     0xf1f80000000	                         nop dword [rax]	      4446	syntax.c	FUNCTION_72	FOR_1
0x400acc8	        0x4883c510	                           add rbp, 0x10	      4446	syntax.c	FUNCTION_72	FOR_1
0x400accc	      0xe95ffeffff	                           jmp 0x400ab30	      4446	syntax.c	FUNCTION_72	FOR_1
0x400acd1	     0xf1f80000000	                         nop dword [rax]	      4446	syntax.c	FUNCTION_72	FOR_1
0x400acd8	      0xba05000000	                              mov edx, 5	      3821	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_15
0x400acdd	      0xbe00000000	                              mov esi, 0	      3821	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_15
0x400ace2	      0xe9d9fdffff	                           jmp 0x400aac0	      3821	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_15
0x400ace7	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      3778	syntax.c	FUNCTION_55	IF_3	IF_4
0x400aceb	    0x488b05000000	            mov rax, qword [0x0400acf2] 	      3683	syntax.c	FUNCTION_51	FOR_1
0x400acf2	            0x85d2	                           test edx, edx	      3778	syntax.c	FUNCTION_55	IF_3	IF_4
0x400acf4	     0xf84b8010000	                            je 0x400aeb2	      3778	syntax.c	FUNCTION_55	IF_3	IF_4
0x400acfa	        0x4c8b6010	            mov r12, qword [rax + 0x10] 	      3683	syntax.c	FUNCTION_51	FOR_1
0x400acfe	    0x496384246002	        movsxd rax, dword [r12 + 0x260] 	      3683	syntax.c	FUNCTION_51	FOR_1
0x400ad06	        0x488d1c80	                  lea rbx, [rax + rax*4]	      3683	syntax.c	FUNCTION_51	FOR_1
0x400ad0a	          0x4889c5	                            mov rbp, rax	      3683	syntax.c	FUNCTION_51	FOR_1
0x400ad0d	        0x48c1e305	                              shl rbx, 5	      3683	syntax.c	FUNCTION_51	FOR_1
0x400ad11	    0x4881eba00000	                           sub rbx, 0xa0	      3683	syntax.c	FUNCTION_51	FOR_1
0x400ad18	            0xeb0d	                           jmp 0x400ad27	      3683	syntax.c	FUNCTION_51	FOR_1
0x400ad1a	    0x660f1f440000	                    nop word [rax + rax]	      3683	syntax.c	FUNCTION_51	FOR_1
0x400ad20	    0x4881eba00000	                           sub rbx, 0xa0	      3683	syntax.c	FUNCTION_51	FOR_1
0x400ad27	          0x83ed01	                              sub ebp, 1	      3683	syntax.c	FUNCTION_51	FOR_1
0x400ad2a	     0xf88e3000000	                            js 0x400ae13	      3683	syntax.c	FUNCTION_51	FOR_1
0x400ad30	          0x4989dd	                            mov r13, rbx	      3684	syntax.c	FUNCTION_51	FOR_1	IF_1
0x400ad33	    0x4d03ac247002	            add r13, qword [r12 + 0x270]	      3684	syntax.c	FUNCTION_51	FOR_1	IF_1
0x400ad3b	      0x41807d0100	                   cmp byte [r13 + 1], 0	      3684	syntax.c	FUNCTION_51	FOR_1	IF_1
0x400ad40	            0x74de	                            je 0x400ad20	      3684	syntax.c	FUNCTION_51	FOR_1	IF_1
0x400ad42	      0x41f6452520	           test byte [r13 + 0x25], 0x20 	      3712	syntax.c	FUNCTION_52	IF_1
0x400ad47	            0x7409	                            je 0x400ad52	      3712	syntax.c	FUNCTION_52	IF_1
0x400ad49	    0x4183ac240c03	              sub dword [r12 + 0x30c], 1	      3713	syntax.c	FUNCTION_52	IF_1
0x400ad52	        0x498b7d60	            mov rdi, qword [r13 + 0x60] 	      3728	syntax.c	FUNCTION_53	CALL_1
0x400ad56	      0xe800000000	                          call 0x400ad5b	      3728	syntax.c	FUNCTION_53	CALL_1
0x400ad5b	    0x498b84247002	           mov rax, qword [r12 + 0x270] 	      3729	syntax.c	FUNCTION_53	CALL_2
0x400ad63	      0x488b7c1868	      mov rdi, qword [rax + rbx + 0x68] 	      3729	syntax.c	FUNCTION_53	CALL_2
0x400ad68	      0xe800000000	                          call 0x400ad6d	      3729	syntax.c	FUNCTION_53	CALL_2
0x400ad6d	            0x85ed	                           test ebp, ebp	      3731	syntax.c	FUNCTION_53	IF_1
0x400ad6f	    0x498b84247002	           mov rax, qword [r12 + 0x270] 	      3731	syntax.c	FUNCTION_53	IF_1
0x400ad77	            0x740a	                            je 0x400ad83	      3731	syntax.c	FUNCTION_53	IF_1
0x400ad79	    0x80bc1860ffff	         cmp byte [rax + rbx - 0xa0], 2 	      3731	syntax.c	FUNCTION_53	IF_1
0x400ad81	            0x742e	                            je 0x400adb1	      3731	syntax.c	FUNCTION_53	IF_1
0x400ad83	      0x488b7c1840	      mov rdi, qword [rax + rbx + 0x40] 	      3733	syntax.c	FUNCTION_53	IF_1	CALL_3
0x400ad88	      0xe800000000	                          call 0x400ad8d	      3733	syntax.c	FUNCTION_53	IF_1	CALL_3
0x400ad8d	    0x498b84247002	           mov rax, qword [r12 + 0x270] 	      3734	syntax.c	FUNCTION_53	IF_1	CALL_4
0x400ad95	      0x488b7c1848	      mov rdi, qword [rax + rbx + 0x48] 	      3734	syntax.c	FUNCTION_53	IF_1	CALL_4
0x400ad9a	      0xe800000000	                          call 0x400ad9f	      3734	syntax.c	FUNCTION_53	IF_1	CALL_4
0x400ad9f	    0x498b84247002	           mov rax, qword [r12 + 0x270] 	      3735	syntax.c	FUNCTION_53	IF_1	CALL_5
0x400ada7	      0x488b7c1858	      mov rdi, qword [rax + rbx + 0x58] 	      3735	syntax.c	FUNCTION_53	IF_1	CALL_5
0x400adac	      0xe800000000	                          call 0x400adb1	      3735	syntax.c	FUNCTION_53	IF_1	CALL_5
0x400adb1	            0x89e8	                            mov eax, ebp	        59	string3.h	FUNCTION_171	CALL_3
0x400adb3	    0x498db5a00000	                   lea rsi, [r13 + 0xa0]	        59	string3.h	FUNCTION_171	CALL_3
0x400adba	          0x4c89ef	                            mov rdi, r13	        59	string3.h	FUNCTION_171	CALL_3
0x400adbd	            0xf7d0	                                 not eax	        59	string3.h	FUNCTION_171	CALL_3
0x400adbf	    0x410384246002	            add eax, dword [r12 + 0x260]	        59	string3.h	FUNCTION_171	CALL_3
0x400adc7	            0x4898	                                    cdqe	        59	string3.h	FUNCTION_171	CALL_3
0x400adc9	        0x488d1480	                  lea rdx, [rax + rax*4]	        59	string3.h	FUNCTION_171	CALL_3
0x400adcd	        0x48c1e205	                              shl rdx, 5	        59	string3.h	FUNCTION_171	CALL_3
0x400add1	      0xe800000000	                          call 0x400add6	        59	string3.h	FUNCTION_171	CALL_3
0x400add6	    0x488b05000000	            mov rax, qword [0x0400addd] 	        59	string3.h	FUNCTION_171	CALL_3
0x400addd	    0x4183ac246002	              sub dword [r12 + 0x260], 1	      3718	syntax.c	FUNCTION_52
0x400ade6	        0x4c8b6010	            mov r12, qword [rax + 0x10] 	      3718	syntax.c	FUNCTION_52
0x400adea	      0xe931ffffff	                           jmp 0x400ad20	      3718	syntax.c	FUNCTION_52
0x400adef	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4460	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	CALL_3
0x400adf4	          0x4889ee	                            mov rsi, rbp	      4460	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	CALL_3
0x400adf7	      0xe800000000	                          call 0x400adfc	      4460	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	CALL_3
0x400adfc	      0xe93efeffff	                           jmp 0x400ac3f	      4460	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	CALL_3
0x400ae01	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4460	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	CALL_3
0x400ae06	          0x4889ee	                            mov rsi, rbp	      4460	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	CALL_3
0x400ae09	      0xe800000000	                          call 0x400ae0e	      4460	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	CALL_3
0x400ae0e	      0xe971fdffff	                           jmp 0x400ab84	      4460	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	CALL_3
0x400ae13	    0x498bbc24c802	           mov rdi, qword [r12 + 0x2c8] 	      3692	syntax.c	FUNCTION_51	CALL_2
0x400ae1b	    0x41c784249c02	              mov dword [r12 + 0x29c], 0	      3687	syntax.c	FUNCTION_51
0x400ae27	    0x49c78424a802	              mov qword [r12 + 0x2a8], 0	      3688	syntax.c	FUNCTION_51
0x400ae33	    0x49c78424b002	              mov qword [r12 + 0x2b0], 0	      3689	syntax.c	FUNCTION_51
0x400ae3f	    0x49c78424b802	              mov qword [r12 + 0x2b8], 0	      3690	syntax.c	FUNCTION_51
0x400ae4b	      0xe800000000	                          call 0x400ae50	      3692	syntax.c	FUNCTION_51	CALL_2
0x400ae50	    0x488b05000000	            mov rax, qword [0x0400ae57] 	      3693	syntax.c	FUNCTION_51
0x400ae57	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      3693	syntax.c	FUNCTION_51
0x400ae5b	    0x488bbac00200	           mov rdi, qword [rdx + 0x2c0] 	      3694	syntax.c	FUNCTION_51	CALL_3
0x400ae62	    0x48c782c80200	              mov qword [rdx + 0x2c8], 0	      3693	syntax.c	FUNCTION_51
0x400ae6d	          0x4885ff	                           test rdi, rdi	      3694	syntax.c	FUNCTION_51	CALL_3
0x400ae70	            0x741b	                            je 0x400ae8d	      3694	syntax.c	FUNCTION_51	CALL_3
0x400ae72	      0xe800000000	                          call 0x400ae77	      3694	syntax.c	FUNCTION_51	CALL_3
0x400ae77	    0x488b05000000	            mov rax, qword [0x0400ae7e] 	      3694	syntax.c	FUNCTION_51	CALL_3
0x400ae7e	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      3694	syntax.c	FUNCTION_51	CALL_3
0x400ae82	    0x48c782c00200	              mov qword [rdx + 0x2c0], 0	      3694	syntax.c	FUNCTION_51	CALL_3
0x400ae8d	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      3695	syntax.c	FUNCTION_51	CALL_4
0x400ae91	    0x4881c7b00400	                          add rdi, 0x4b0	      3695	syntax.c	FUNCTION_51	CALL_4
0x400ae98	      0xe800000000	                          call 0x400ae9d	      3695	syntax.c	FUNCTION_51	CALL_4
0x400ae9d	    0x488b05000000	            mov rax, qword [0x0400aea4] 	      3697	syntax.c	FUNCTION_51	CALL_5
0x400aea4	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      3697	syntax.c	FUNCTION_51	CALL_5
0x400aea8	      0xe800000000	                          call 0x400aead	      3697	syntax.c	FUNCTION_51	CALL_5
0x400aead	      0xe920fcffff	                           jmp 0x400aad2	      3697	syntax.c	FUNCTION_51	CALL_5
0x400aeb2	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      3782	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_4
0x400aeb6	      0xe800000000	                          call 0x400aebb	      3782	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_4
0x400aebb	    0x488b15000000	            mov rdx, qword [0x0400aec2] 	      3783	syntax.c	FUNCTION_55	IF_3	ELSE_1	IF_5
0x400aec2	        0x488b4208	                mov rax, qword [rdx + 8]	      3783	syntax.c	FUNCTION_55	IF_3	ELSE_1	IF_5
0x400aec6	    0x480568170000	                         add rax, 0x1768	      3783	syntax.c	FUNCTION_55	IF_3	ELSE_1	IF_5
0x400aecc	        0x48394210	            cmp qword [rdx + 0x10], rax 	      3783	syntax.c	FUNCTION_55	IF_3	ELSE_1	IF_5
0x400aed0	            0x7414	                            je 0x400aee6	      3783	syntax.c	FUNCTION_55	IF_3	ELSE_1	IF_5
0x400aed2	      0xbe01000000	                              mov esi, 1	      3785	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_6
0x400aed7	      0xbf00000000	                              mov edi, 0	      3785	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_6
0x400aedc	      0xe800000000	                          call 0x400aee1	      3785	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_6
0x400aee1	      0xe9ecfbffff	                           jmp 0x400aad2	      3785	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_6
0x400aee6	      0xbe01000000	                              mov esi, 1	      3784	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_5
0x400aeeb	      0xbf00000000	                              mov edi, 0	      3784	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_5
0x400aef0	      0xe800000000	                          call 0x400aef5	      3784	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_5
0x400aef5	            0xebdb	                           jmp 0x400aed2	      3784	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_5
0x400aef7	      0xe800000000	                          call 0x400aefc	      3832	syntax.c	FUNCTION_55
syn_get_stack_item	DO,0:functions,0:IF,1:WHILE,0:CALL,1:ELSE,0:SWITCH,0:FOR,0	35
0x400b4e0	    0x8b0500000000	            mov eax, dword [0x0400b4e6] 	      6623	syntax.c	FUNCTION_105	IF_1
0x400b4e6	            0x39f8	                            cmp eax, edi	      6623	syntax.c	FUNCTION_105	IF_1
0x400b4e8	            0x7e16	                           jle 0x400b500	      6623	syntax.c	FUNCTION_105	IF_1
0x400b4ea	          0x4863ff	                         movsxd rdi, edi	      6631	syntax.c	FUNCTION_105
0x400b4ed	        0x488d04ff	                  lea rax, [rdi + rdi*8]	      6631	syntax.c	FUNCTION_105
0x400b4f1	        0x48c1e004	                              shl rax, 4	      6631	syntax.c	FUNCTION_105
0x400b4f5	    0x480305000000	             add rax, qword [0x0400b4fc]	      6631	syntax.c	FUNCTION_105
0x400b4fc	          0x8b4004	                mov eax, dword [rax + 4]	      6631	syntax.c	FUNCTION_105
0x400b4ff	              0xc3	                                     ret	      6631	syntax.c	FUNCTION_105
0x400b500	              0x55	                                push rbp	      6622	syntax.c	FUNCTION_105
0x400b501	              0x53	                                push rbx	      6622	syntax.c	FUNCTION_105
0x400b502	            0x31ed	                            xor ebp, ebp	       722	syntax.c	FUNCTION_4	FOR_1
0x400b504	        0x4883ec08	                              sub rsp, 8	      6622	syntax.c	FUNCTION_105
0x400b508	    0x488b15000000	            mov rdx, qword [0x0400b50f] 	      6622	syntax.c	FUNCTION_105
0x400b50f	            0x85c0	                           test eax, eax	       722	syntax.c	FUNCTION_4	FOR_1
0x400b511	    0x488d9a880000	                   lea rbx, [rdx + 0x88]	       722	syntax.c	FUNCTION_4	FOR_1
0x400b518	            0x7e20	                           jle 0x400b53a	       722	syntax.c	FUNCTION_4	FOR_1
0x400b51a	    0x660f1f440000	                    nop word [rax + rax]	       722	syntax.c	FUNCTION_4	FOR_1
0x400b520	          0x488b3b	                    mov rdi, qword [rbx]	       723	syntax.c	FUNCTION_4	CALL_1
0x400b523	          0x83c501	                              add ebp, 1	       722	syntax.c	FUNCTION_4	FOR_1
0x400b526	    0x4881c3900000	                           add rbx, 0x90	       722	syntax.c	FUNCTION_4	FOR_1
0x400b52d	      0xe800000000	                          call 0x400b532	       723	syntax.c	FUNCTION_4	CALL_1
0x400b532	    0x3b2d00000000	            cmp ebp, dword [0x0400b538] 	       722	syntax.c	FUNCTION_4	FOR_1
0x400b538	            0x7ce6	                            jl 0x400b520	       722	syntax.c	FUNCTION_4	FOR_1
0x400b53a	      0xbf00000000	                              mov edi, 0	       724	syntax.c	FUNCTION_4	CALL_2
0x400b53f	      0xe800000000	                          call 0x400b544	       724	syntax.c	FUNCTION_4	CALL_2
0x400b544	    0xc70500000000	               mov dword [0x0400b54e], 0	      1732	syntax.c	FUNCTION_23
0x400b54e	    0x48c705000000	               mov qword [0x0400b559], 0	      1733	syntax.c	FUNCTION_23
0x400b559	      0xb8ffffffff	                     mov eax, 0xffffffff	      6629	syntax.c	FUNCTION_105	IF_1
0x400b55e	    0xc70500000000	     mov dword [0x0400b568], 0xffffffff 	      1734	syntax.c	FUNCTION_23
0x400b568	    0xc70500000000	     mov dword [0x0400b572], 0x7fffffff 	      6628	syntax.c	FUNCTION_105	IF_1
0x400b572	        0x4883c408	                              add rsp, 8	      6632	syntax.c	FUNCTION_105
0x400b576	              0x5b	                                 pop rbx	      6632	syntax.c	FUNCTION_105
0x400b577	              0x5d	                                 pop rbp	      6632	syntax.c	FUNCTION_105
0x400b578	              0xc3	                                     ret	      6632	syntax.c	FUNCTION_105
syn_check_group	DO,0:functions,0:IF,2:WHILE,0:CALL,4:ELSE,1:SWITCH,0:FOR,0	163
0x400e070	            0x4156	                                push r14	      9713	syntax.c	FUNCTION_153
0x400e072	            0x4155	                                push r13	      9713	syntax.c	FUNCTION_153
0x400e074	            0x4154	                                push r12	      9713	syntax.c	FUNCTION_153
0x400e076	              0x55	                                push rbp	      9713	syntax.c	FUNCTION_153
0x400e077	              0x53	                                push rbx	      9713	syntax.c	FUNCTION_153
0x400e078	            0x31db	                            xor ebx, ebx	      9719	syntax.c	FUNCTION_153	IF_1
0x400e07a	    0x4881ecd00000	                           sub rsp, 0xd0	      9713	syntax.c	FUNCTION_153
0x400e081	    0x64488b042528	                mov rax, qword fs:[0x28]	      9713	syntax.c	FUNCTION_153
0x400e08a	    0x48898424c800	             mov qword [rsp + 0xc8], rax	      9713	syntax.c	FUNCTION_153
0x400e092	            0x31c0	                            xor eax, eax	      9713	syntax.c	FUNCTION_153
0x400e094	      0xe800000000	                          call 0x400e099	      9717	syntax.c	FUNCTION_153	CALL_1
0x400e099	          0x4885c0	                           test rax, rax	      9718	syntax.c	FUNCTION_153	IF_1
0x400e09c	            0x7476	                            je 0x400e114	      9718	syntax.c	FUNCTION_153	IF_1
0x400e09e	      0xbac7000000	                           mov edx, 0xc7	      9639	syntax.c	FUNCTION_148	CALL_1
0x400e0a3	          0x4889c6	                            mov rsi, rax	      9639	syntax.c	FUNCTION_148	CALL_1
0x400e0a6	          0x4889e7	                            mov rdi, rsp	      9639	syntax.c	FUNCTION_148	CALL_1
0x400e0a9	          0x4989c4	                            mov r12, rax	      9639	syntax.c	FUNCTION_148	CALL_1
0x400e0ac	      0xe800000000	                          call 0x400e0b1	      9639	syntax.c	FUNCTION_148	CALL_1
0x400e0b1	          0x4889e7	                            mov rdi, rsp	      9640	syntax.c	FUNCTION_148	CALL_2
0x400e0b4	      0xe800000000	                          call 0x400e0b9	      9640	syntax.c	FUNCTION_148	CALL_2
0x400e0b9	    0x486305000000	         movsxd rax, dword [0x0400e0c0] 	      9641	syntax.c	FUNCTION_148	FOR_1
0x400e0c0	        0x488d14c0	                  lea rdx, [rax + rax*8]	      9641	syntax.c	FUNCTION_148	FOR_1
0x400e0c4	          0x4989c5	                            mov r13, rax	      9641	syntax.c	FUNCTION_148	FOR_1
0x400e0c7	          0x4489eb	                           mov ebx, r13d	      9641	syntax.c	FUNCTION_148	FOR_1
0x400e0ca	        0x488d1450	                  lea rdx, [rax + rdx*2]	      9641	syntax.c	FUNCTION_148	FOR_1
0x400e0ce	    0x488b05000000	            mov rax, qword [0x0400e0d5] 	      9641	syntax.c	FUNCTION_148	FOR_1
0x400e0d5	    0x488dacd070ff	           lea rbp, [rax + rdx*8 - 0x90]	      9641	syntax.c	FUNCTION_148	FOR_1
0x400e0dd	            0xeb20	                           jmp 0x400e0ff	      9641	syntax.c	FUNCTION_148	FOR_1
0x400e0df	              0x90	                                     nop	      9641	syntax.c	FUNCTION_148	FOR_1
0x400e0e0	        0x488b7500	                    mov rsi, qword [rbp]	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x400e0e4	          0x4885f6	                           test rsi, rsi	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x400e0e7	            0x740c	                            je 0x400e0f5	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x400e0e9	          0x4889e7	                            mov rdi, rsp	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400e0ec	      0xe800000000	                          call 0x400e0f1	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400e0f1	            0x85c0	                           test eax, eax	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400e0f3	            0x7413	                            je 0x400e108	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400e0f5	    0x4881ed980000	                           sub rbp, 0x98	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400e0fc	          0x4489f3	                           mov ebx, r14d	      9713	syntax.c	FUNCTION_153
0x400e0ff	          0x4189de	                           mov r14d, ebx	      9641	syntax.c	FUNCTION_148	FOR_1
0x400e102	        0x4183ee01	                             sub r14d, 1	      9641	syntax.c	FUNCTION_148	FOR_1
0x400e106	            0x79d8	                           jns 0x400e0e0	      9641	syntax.c	FUNCTION_148	FOR_1
0x400e108	            0x85db	                           test ebx, ebx	      9722	syntax.c	FUNCTION_153	IF_2
0x400e10a	            0x7434	                            je 0x400e140	      9722	syntax.c	FUNCTION_153	IF_2
0x400e10c	          0x4c89e7	                            mov rdi, r12	      9725	syntax.c	FUNCTION_153	CALL_4
0x400e10f	      0xe800000000	                          call 0x400e114	      9725	syntax.c	FUNCTION_153	CALL_4
0x400e114	    0x488b8c24c800	            mov rcx, qword [rsp + 0xc8] 	      9727	syntax.c	FUNCTION_153
0x400e11c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      9727	syntax.c	FUNCTION_153
0x400e125	            0x89d8	                            mov eax, ebx	      9727	syntax.c	FUNCTION_153
0x400e127	     0xf85e8010000	                           jne 0x400e315	      9727	syntax.c	FUNCTION_153
0x400e12d	    0x4881c4d00000	                           add rsp, 0xd0	      9727	syntax.c	FUNCTION_153
0x400e134	              0x5b	                                 pop rbx	      9727	syntax.c	FUNCTION_153
0x400e135	              0x5d	                                 pop rbp	      9727	syntax.c	FUNCTION_153
0x400e136	            0x415c	                                 pop r12	      9727	syntax.c	FUNCTION_153
0x400e138	            0x415d	                                 pop r13	      9727	syntax.c	FUNCTION_153
0x400e13a	            0x415e	                                 pop r14	      9727	syntax.c	FUNCTION_153
0x400e13c	              0xc3	                                     ret	      9727	syntax.c	FUNCTION_153
0x400e13d	           0xf1f00	                         nop dword [rax]	      9727	syntax.c	FUNCTION_153
0x400e140	      0x410fb63c24	                   movzx edi, byte [r12]	      9740	syntax.c	FUNCTION_154	FOR_1
0x400e145	          0x4084ff	                           test dil, dil	      9740	syntax.c	FUNCTION_154	FOR_1
0x400e148	            0x7475	                            je 0x400e1bf	      9740	syntax.c	FUNCTION_154	FOR_1
0x400e14a	          0x4c89e5	                            mov rbp, r12	      9740	syntax.c	FUNCTION_154	FOR_1
0x400e14d	            0xeb32	                           jmp 0x400e181	      9740	syntax.c	FUNCTION_154	FOR_1
0x400e14f	              0x90	                                     nop	      9740	syntax.c	FUNCTION_154	FOR_1
0x400e150	         0xfb65500	                   movzx edx, byte [rbp]	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x400e154	            0x89d0	                            mov eax, edx	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x400e156	          0x83e0df	                     and eax, 0xffffffdf	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x400e159	          0x83e841	                           sub eax, 0x41	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x400e15c	            0x3c19	                            cmp al, 0x19	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x400e15e	            0x7614	                           jbe 0x400e174	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x400e160	           0xfb6c2	                           movzx eax, dl	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x400e163	          0x83e830	                           sub eax, 0x30	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x400e166	          0x83f809	                              cmp eax, 9	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x400e169	            0x7609	                           jbe 0x400e174	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x400e16b	          0x80fa5f	                            cmp dl, 0x5f	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x400e16e	     0xf8558010000	                           jne 0x400e2cc	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x400e174	        0x4883c501	                              add rbp, 1	      9740	syntax.c	FUNCTION_154	FOR_1
0x400e178	         0xfb67d00	                   movzx edi, byte [rbp]	      9740	syntax.c	FUNCTION_154	FOR_1
0x400e17c	          0x4084ff	                           test dil, dil	      9740	syntax.c	FUNCTION_154	FOR_1
0x400e17f	            0x7437	                            je 0x400e1b8	      9740	syntax.c	FUNCTION_154	FOR_1
0x400e181	      0xe800000000	                          call 0x400e186	      9742	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_1
0x400e186	            0x85c0	                           test eax, eax	      9742	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_1
0x400e188	            0x89c3	                            mov ebx, eax	      9742	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_1
0x400e18a	            0x75c4	                           jne 0x400e150	      9742	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_1
0x400e18c	      0xba05000000	                              mov edx, 5	      9744	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_3
0x400e191	      0xbe00000000	                              mov esi, 0	      9744	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_3
0x400e196	            0x31ff	                            xor edi, edi	      9744	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_3
0x400e198	      0xe800000000	                          call 0x400e19d	      9744	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_3
0x400e19d	          0x4889c7	                            mov rdi, rax	      9744	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_3
0x400e1a0	      0xe800000000	                          call 0x400e1a5	      9744	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_3
0x400e1a5	          0x4c89e7	                            mov rdi, r12	      9745	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_4
0x400e1a8	      0xe800000000	                          call 0x400e1ad	      9745	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_4
0x400e1ad	      0xe962ffffff	                           jmp 0x400e114	      9745	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_4
0x400e1b2	    0x660f1f440000	                    nop word [rax + rax]	      9745	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_4
0x400e1b8	    0x448b2d000000	           mov r13d, dword [0x0400e1bf] 	      9745	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_4
0x400e1bf	    0x48833d000000	               cmp qword [0x0400e1c7], 0	      9761	syntax.c	FUNCTION_154	IF_3
0x400e1c7	     0xf842f010000	                            je 0x400e2fc	      9761	syntax.c	FUNCTION_154	IF_3
0x400e1cd	    0x4181fd1f4e00	                        cmp r13d, 0x4e1f	      9767	syntax.c	FUNCTION_154	IF_4
0x400e1d4	     0xf8fca000000	                            jg 0x400e2a4	      9767	syntax.c	FUNCTION_154	IF_4
0x400e1da	      0xbe01000000	                              mov esi, 1	      9777	syntax.c	FUNCTION_154	IF_5	CALL_13
0x400e1df	      0xbf00000000	                              mov edi, 0	      9777	syntax.c	FUNCTION_154	IF_5	CALL_13
0x400e1e4	      0xe800000000	                          call 0x400e1e9	      9777	syntax.c	FUNCTION_154	IF_5	CALL_13
0x400e1e9	            0x85c0	                           test eax, eax	      9777	syntax.c	FUNCTION_154	IF_5	CALL_13
0x400e1eb	            0x89c3	                            mov ebx, eax	      9777	syntax.c	FUNCTION_154	IF_5	CALL_13
0x400e1ed	     0xf8419ffffff	                            je 0x400e10c	      9777	syntax.c	FUNCTION_154	IF_5	CALL_13
0x400e1f3	    0x486305000000	         movsxd rax, dword [0x0400e1fa] 	        90	string3.h	FUNCTION_173	CALL_6
0x400e1fa	        0x488d14c0	                  lea rdx, [rax + rax*8]	        90	string3.h	FUNCTION_173	CALL_6
0x400e1fe	        0x488d1450	                  lea rdx, [rax + rdx*2]	        90	string3.h	FUNCTION_173	CALL_6
0x400e202	    0x488b05000000	            mov rax, qword [0x0400e209] 	        90	string3.h	FUNCTION_173	CALL_6
0x400e209	        0x488d04d0	                  lea rax, [rax + rdx*8]	        90	string3.h	FUNCTION_173	CALL_6
0x400e20d	        0x488d7808	                      lea rdi, [rax + 8]	        90	string3.h	FUNCTION_173	CALL_6
0x400e211	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400e218	    0x48c780900000	               mov qword [rax + 0x90], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400e223	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_173	CALL_6
0x400e227	          0x4829f8	                            sub rax, rdi	        90	string3.h	FUNCTION_173	CALL_6
0x400e22a	    0x8d8898000000	                   lea ecx, [rax + 0x98]	        90	string3.h	FUNCTION_173	CALL_6
0x400e230	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_173	CALL_6
0x400e232	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_173	CALL_6
0x400e235	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_173	CALL_6
0x400e238	          0x4c89e7	                            mov rdi, r12	      9785	syntax.c	FUNCTION_154	CALL_16
0x400e23b	    0x486305000000	         movsxd rax, dword [0x0400e242] 	      9784	syntax.c	FUNCTION_154
0x400e242	        0x488d14c0	                  lea rdx, [rax + rax*8]	      9784	syntax.c	FUNCTION_154
0x400e246	        0x488d1450	                  lea rdx, [rax + rdx*2]	      9784	syntax.c	FUNCTION_154
0x400e24a	    0x488b05000000	            mov rax, qword [0x0400e251] 	      9784	syntax.c	FUNCTION_154
0x400e251	        0x488d1cd0	                  lea rbx, [rax + rdx*8]	      9784	syntax.c	FUNCTION_154
0x400e255	          0x4c8923	                    mov qword [rbx], r12	      9784	syntax.c	FUNCTION_154
0x400e258	      0xe800000000	                          call 0x400e25d	      9785	syntax.c	FUNCTION_154	CALL_16
0x400e25d	        0x48894308	                mov qword [rbx + 8], rax	      9785	syntax.c	FUNCTION_154	CALL_16
0x400e261	    0x486305000000	         movsxd rax, dword [0x0400e268] 	      9787	syntax.c	FUNCTION_154
0x400e268	        0x488d14c0	                  lea rdx, [rax + rax*8]	      9787	syntax.c	FUNCTION_154
0x400e26c	          0x4889c3	                            mov rbx, rax	      9787	syntax.c	FUNCTION_154
0x400e26f	          0x83c301	                              add ebx, 1	      9793	syntax.c	FUNCTION_154
0x400e272	        0x488d1450	                  lea rdx, [rax + rdx*2]	      9787	syntax.c	FUNCTION_154
0x400e276	    0x488b05000000	            mov rax, qword [0x0400e27d] 	      9787	syntax.c	FUNCTION_154
0x400e27d	    0x891d00000000	            mov dword [0x0400e283], ebx 	      9793	syntax.c	FUNCTION_154
0x400e283	        0x488d04d0	                  lea rax, [rax + rdx*8]	      9787	syntax.c	FUNCTION_154
0x400e287	    0x48c7404899d4	mov qword [rax + 0x48], 0xffffffffffffd499	      9787	syntax.c	FUNCTION_154
0x400e28f	    0x48c7404099d4	mov qword [rax + 0x40], 0xffffffffffffd499	      9788	syntax.c	FUNCTION_154
0x400e297	    0x48c7405099d4	mov qword [rax + 0x50], 0xffffffffffffd499	      9790	syntax.c	FUNCTION_154
0x400e29f	      0xe970feffff	                           jmp 0x400e114	      9790	syntax.c	FUNCTION_154
0x400e2a4	      0xba05000000	                              mov edx, 5	      9769	syntax.c	FUNCTION_154	IF_4	CALL_11
0x400e2a9	      0xbe00000000	                              mov esi, 0	      9769	syntax.c	FUNCTION_154	IF_4	CALL_11
0x400e2ae	            0x31ff	                            xor edi, edi	      9769	syntax.c	FUNCTION_154	IF_4	CALL_11
0x400e2b0	      0xe800000000	                          call 0x400e2b5	      9769	syntax.c	FUNCTION_154	IF_4	CALL_11
0x400e2b5	          0x4889c7	                            mov rdi, rax	      9769	syntax.c	FUNCTION_154	IF_4	CALL_11
0x400e2b8	            0x31db	                            xor ebx, ebx	      9771	syntax.c	FUNCTION_154	IF_4
0x400e2ba	      0xe800000000	                          call 0x400e2bf	      9769	syntax.c	FUNCTION_154	IF_4	CALL_11
0x400e2bf	          0x4c89e7	                            mov rdi, r12	      9770	syntax.c	FUNCTION_154	IF_4	CALL_12
0x400e2c2	      0xe800000000	                          call 0x400e2c7	      9770	syntax.c	FUNCTION_154	IF_4	CALL_12
0x400e2c7	      0xe948feffff	                           jmp 0x400e114	      9770	syntax.c	FUNCTION_154	IF_4	CALL_12
0x400e2cc	    0x8b3d00000000	            mov edi, dword [0x0400e2d2] 	      9752	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_7
0x400e2d2	      0xe800000000	                          call 0x400e2d7	      9752	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_7
0x400e2d7	      0xba05000000	                              mov edx, 5	      9753	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_9
0x400e2dc	      0xbe00000000	                              mov esi, 0	      9753	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_9
0x400e2e1	            0x31ff	                            xor edi, edi	      9753	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_9
0x400e2e3	      0xe800000000	                          call 0x400e2e8	      9753	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_9
0x400e2e8	          0x4889c7	                            mov rdi, rax	      9753	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_9
0x400e2eb	      0xe800000000	                          call 0x400e2f0	      9753	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_9
0x400e2f0	    0x448b2d000000	           mov r13d, dword [0x0400e2f7] 	      9753	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_9
0x400e2f7	      0xe9c3feffff	                           jmp 0x400e1bf	      9753	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_9
0x400e2fc	    0xc70500000000	           mov dword [0x0400e306], 0x98 	      9763	syntax.c	FUNCTION_154	IF_3
0x400e306	    0xc70500000000	            mov dword [0x0400e310], 0xa 	      9764	syntax.c	FUNCTION_154	IF_3
0x400e310	      0xe9b8feffff	                           jmp 0x400e1cd	      9764	syntax.c	FUNCTION_154	IF_3
0x400e315	      0xe800000000	                          call 0x400e31a	      9727	syntax.c	FUNCTION_153
hl_set_fg_color_name	DO,0:functions,0:IF,2:WHILE,0:CALL,2:ELSE,0:SWITCH,0:FOR,0	58
0x400c070	            0x4156	                                push r14	      8579	syntax.c	FUNCTION_126
0x400c072	            0x4155	                                push r13	      8579	syntax.c	FUNCTION_126
0x400c074	            0x4154	                                push r12	      8579	syntax.c	FUNCTION_126
0x400c076	              0x55	                                push rbp	      8579	syntax.c	FUNCTION_126
0x400c077	              0x53	                                push rbx	      8579	syntax.c	FUNCTION_126
0x400c078	    0x4881ecd00000	                           sub rsp, 0xd0	      8579	syntax.c	FUNCTION_126
0x400c07f	    0x64488b042528	                mov rax, qword fs:[0x28]	      8579	syntax.c	FUNCTION_126
0x400c088	    0x48898424c800	             mov qword [rsp + 0xc8], rax	      8579	syntax.c	FUNCTION_126
0x400c090	            0x31c0	                            xor eax, eax	      8579	syntax.c	FUNCTION_126
0x400c092	          0x4885ff	                           test rdi, rdi	      8582	syntax.c	FUNCTION_126	IF_1
0x400c095	     0xf8493000000	                            je 0x400c12e	      8582	syntax.c	FUNCTION_126	IF_1
0x400c09b	      0xbac7000000	                           mov edx, 0xc7	      9639	syntax.c	FUNCTION_148	CALL_1
0x400c0a0	      0xbe00000000	                              mov esi, 0	      9639	syntax.c	FUNCTION_148	CALL_1
0x400c0a5	          0x4989fc	                            mov r12, rdi	      9639	syntax.c	FUNCTION_148	CALL_1
0x400c0a8	          0x4889e7	                            mov rdi, rsp	      9639	syntax.c	FUNCTION_148	CALL_1
0x400c0ab	      0xe800000000	                          call 0x400c0b0	      9639	syntax.c	FUNCTION_148	CALL_1
0x400c0b0	          0x4889e7	                            mov rdi, rsp	      9640	syntax.c	FUNCTION_148	CALL_2
0x400c0b3	      0xe800000000	                          call 0x400c0b8	      9640	syntax.c	FUNCTION_148	CALL_2
0x400c0b8	    0x486305000000	         movsxd rax, dword [0x0400c0bf] 	      9641	syntax.c	FUNCTION_148	FOR_1
0x400c0bf	    0x4c8b2d000000	            mov r13, qword [0x0400c0c6] 	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x400c0c6	        0x488d14c0	                  lea rdx, [rax + rax*8]	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x400c0ca	          0x4889c3	                            mov rbx, rax	      9641	syntax.c	FUNCTION_148	FOR_1
0x400c0cd	        0x488d0450	                  lea rax, [rax + rdx*2]	      9641	syntax.c	FUNCTION_148	FOR_1
0x400c0d1	    0x498dacc570ff	           lea rbp, [r13 + rax*8 - 0x90]	      9641	syntax.c	FUNCTION_148	FOR_1
0x400c0d9	            0xeb24	                           jmp 0x400c0ff	      9641	syntax.c	FUNCTION_148	FOR_1
0x400c0db	       0xf1f440000	                   nop dword [rax + rax]	      9641	syntax.c	FUNCTION_148	FOR_1
0x400c0e0	        0x488b7500	                    mov rsi, qword [rbp]	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x400c0e4	          0x4885f6	                           test rsi, rsi	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x400c0e7	            0x740c	                            je 0x400c0f5	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x400c0e9	          0x4889e7	                            mov rdi, rsp	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400c0ec	      0xe800000000	                          call 0x400c0f1	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400c0f1	            0x85c0	                           test eax, eax	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400c0f3	            0x7413	                            je 0x400c108	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400c0f5	    0x4881ed980000	                           sub rbp, 0x98	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400c0fc	          0x4963de	                        movsxd rbx, r14d	      8579	syntax.c	FUNCTION_126
0x400c0ff	          0x4189de	                           mov r14d, ebx	      9641	syntax.c	FUNCTION_148	FOR_1
0x400c102	        0x4183ee01	                             sub r14d, 1	      9641	syntax.c	FUNCTION_148	FOR_1
0x400c106	            0x79d8	                           jns 0x400c0e0	      9641	syntax.c	FUNCTION_148	FOR_1
0x400c108	            0x85db	                           test ebx, ebx	      8585	syntax.c	FUNCTION_126	IF_1	IF_2
0x400c10a	            0x7e22	                           jle 0x400c12e	      8585	syntax.c	FUNCTION_126	IF_1	IF_2
0x400c10c	        0x488d04db	                  lea rax, [rbx + rbx*8]	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_2
0x400c110	        0x488d1c43	                  lea rbx, [rbx + rax*2]	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_2
0x400c114	        0x48c1e303	                              shl rbx, 3	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_2
0x400c118	      0x498b7c1dd8	       mov rdi, qword [r13 + rbx - 0x28]	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_2
0x400c11d	      0xe800000000	                          call 0x400c122	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_2
0x400c122	    0x488b05000000	            mov rax, qword [0x0400c129] 	      8588	syntax.c	FUNCTION_126	IF_1	IF_2
0x400c129	      0x4c896418d8	       mov qword [rax + rbx - 0x28], r12	      8588	syntax.c	FUNCTION_126	IF_1	IF_2
0x400c12e	    0x488b8424c800	            mov rax, qword [rsp + 0xc8] 	      8591	syntax.c	FUNCTION_126
0x400c136	    0x644833042528	                xor rax, qword fs:[0x28]	      8591	syntax.c	FUNCTION_126
0x400c13f	            0x7510	                           jne 0x400c151	      8591	syntax.c	FUNCTION_126
0x400c141	    0x4881c4d00000	                           add rsp, 0xd0	      8591	syntax.c	FUNCTION_126
0x400c148	              0x5b	                                 pop rbx	      8591	syntax.c	FUNCTION_126
0x400c149	              0x5d	                                 pop rbp	      8591	syntax.c	FUNCTION_126
0x400c14a	            0x415c	                                 pop r12	      8591	syntax.c	FUNCTION_126
0x400c14c	            0x415d	                                 pop r13	      8591	syntax.c	FUNCTION_126
0x400c14e	            0x415e	                                 pop r14	      8591	syntax.c	FUNCTION_126
0x400c150	              0xc3	                                     ret	      8591	syntax.c	FUNCTION_126
0x400c151	      0xe800000000	                          call 0x400c156	      8591	syntax.c	FUNCTION_126
syn_stack_free_all	DO,0:functions,1:IF,0:WHILE,0:CALL,1:ELSE,0:SWITCH,0:FOR,0	78
0x4009f80	            0x4156	                                push r14	      1204	syntax.c	FUNCTION_12
0x4009f82	            0x4155	                                push r13	      1204	syntax.c	FUNCTION_12
0x4009f84	          0x4989fd	                            mov r13, rdi	      1204	syntax.c	FUNCTION_12
0x4009f87	            0x4154	                                push r12	      1204	syntax.c	FUNCTION_12
0x4009f89	              0x55	                                push rbp	      1204	syntax.c	FUNCTION_12
0x4009f8a	              0x53	                                push rbx	      1204	syntax.c	FUNCTION_12
0x4009f8b	    0x488bbf100300	           mov rdi, qword [rdi + 0x310] 	      1190	syntax.c	FUNCTION_11	IF_1
0x4009f92	          0x4885ff	                           test rdi, rdi	      1190	syntax.c	FUNCTION_11	IF_1
0x4009f95	            0x7470	                            je 0x400a007	      1190	syntax.c	FUNCTION_11	IF_1
0x4009f97	    0x498b9d200300	           mov rbx, qword [r13 + 0x320] 	      1192	syntax.c	FUNCTION_11	IF_1	FOR_1
0x4009f9e	          0x4885db	                           test rbx, rbx	      1192	syntax.c	FUNCTION_11	IF_1	FOR_1
0x4009fa1	            0x7449	                            je 0x4009fec	      1192	syntax.c	FUNCTION_11	IF_1	FOR_1
0x4009fa3	       0xf1f440000	                   nop dword [rax + rax]	      1192	syntax.c	FUNCTION_11	IF_1	FOR_1
0x4009fa8	    0x8b83bc000000	            mov eax, dword [rbx + 0xbc] 	       698	syntax.c	FUNCTION_3	IF_1
0x4009fae	          0x83f807	                              cmp eax, 7	       698	syntax.c	FUNCTION_3	IF_1
0x4009fb1	            0x7f7d	                            jg 0x400a030	       698	syntax.c	FUNCTION_3	IF_1
0x4009fb3	            0x31ed	                            xor ebp, ebp	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4009fb5	            0x85c0	                           test eax, eax	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4009fb7	        0x4c8d6320	                   lea r12, [rbx + 0x20]	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4009fbb	            0x7e1b	                           jle 0x4009fd8	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4009fbd	           0xf1f00	                         nop dword [rax]	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4009fc0	        0x498b3c24	                    mov rdi, qword [r12]	       708	syntax.c	FUNCTION_3	ELSE_1	CALL_3
0x4009fc4	          0x83c501	                              add ebp, 1	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4009fc7	        0x4983c418	                           add r12, 0x18	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4009fcb	      0xe800000000	                          call 0x4009fd0	       708	syntax.c	FUNCTION_3	ELSE_1	CALL_3
0x4009fd0	    0x3babbc000000	            cmp ebp, dword [rbx + 0xbc] 	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4009fd6	            0x7ce8	                            jl 0x4009fc0	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4009fd8	          0x488b1b	                    mov rbx, qword [rbx]	      1192	syntax.c	FUNCTION_11	IF_1	FOR_1
0x4009fdb	          0x4885db	                           test rbx, rbx	      1192	syntax.c	FUNCTION_11	IF_1	FOR_1
0x4009fde	            0x75c8	                           jne 0x4009fa8	      1192	syntax.c	FUNCTION_11	IF_1	FOR_1
0x4009fe0	    0x498bbd100300	           mov rdi, qword [r13 + 0x310] 	      1194	syntax.c	FUNCTION_11	IF_1	CALL_2
0x4009fe7	          0x4885ff	                           test rdi, rdi	      1194	syntax.c	FUNCTION_11	IF_1	CALL_2
0x4009fea	            0x7410	                            je 0x4009ffc	      1194	syntax.c	FUNCTION_11	IF_1	CALL_2
0x4009fec	      0xe800000000	                          call 0x4009ff1	      1194	syntax.c	FUNCTION_11	IF_1	CALL_2
0x4009ff1	    0x49c785100300	              mov qword [r13 + 0x310], 0	      1194	syntax.c	FUNCTION_11	IF_1	CALL_2
0x4009ffc	    0x41c785180300	              mov dword [r13 + 0x318], 0	      1195	syntax.c	FUNCTION_11	IF_1
0x400a007	    0x488b1d000000	            mov rbx, qword [0x0400a00e] 	      1213	syntax.c	FUNCTION_12
0x400a00e	          0x4885db	                           test rbx, rbx	      1213	syntax.c	FUNCTION_12
0x400a011	            0x7414	                            je 0x400a027	      1213	syntax.c	FUNCTION_12
0x400a013	       0xf1f440000	                   nop dword [rax + rax]	      1213	syntax.c	FUNCTION_12
0x400a018	        0x4c3b6b10	            cmp r13, qword [rbx + 0x10] 	      1215	syntax.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_1
0x400a01c	            0x745a	                            je 0x400a078	      1215	syntax.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_1
0x400a01e	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      1213	syntax.c	FUNCTION_12
0x400a022	          0x4885db	                           test rbx, rbx	      1213	syntax.c	FUNCTION_12
0x400a025	            0x75f1	                           jne 0x400a018	      1213	syntax.c	FUNCTION_12
0x400a027	              0x5b	                                 pop rbx	      1219	syntax.c	FUNCTION_12
0x400a028	              0x5d	                                 pop rbp	      1219	syntax.c	FUNCTION_12
0x400a029	            0x415c	                                 pop r12	      1219	syntax.c	FUNCTION_12
0x400a02b	            0x415d	                                 pop r13	      1219	syntax.c	FUNCTION_12
0x400a02d	            0x415e	                                 pop r14	      1219	syntax.c	FUNCTION_12
0x400a02f	              0xc3	                                     ret	      1219	syntax.c	FUNCTION_12
0x400a030	          0x8b4310	            mov eax, dword [rbx + 0x10] 	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x400a033	          0x4531e4	                          xor r12d, r12d	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x400a036	            0x31ed	                            xor ebp, ebp	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x400a038	        0x4c8d7310	                   lea r14, [rbx + 0x10]	       700	syntax.c	FUNCTION_3	IF_1
0x400a03c	            0x85c0	                           test eax, eax	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x400a03e	            0x7e1a	                           jle 0x400a05a	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x400a040	        0x488b4320	            mov rax, qword [rbx + 0x20] 	       702	syntax.c	FUNCTION_3	IF_1	CALL_1
0x400a044	          0x83c501	                              add ebp, 1	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x400a047	      0x4a8b7c2010	      mov rdi, qword [rax + r12 + 0x10] 	       702	syntax.c	FUNCTION_3	IF_1	CALL_1
0x400a04c	        0x4983c418	                           add r12, 0x18	       702	syntax.c	FUNCTION_3	IF_1	CALL_1
0x400a050	      0xe800000000	                          call 0x400a055	       702	syntax.c	FUNCTION_3	IF_1	CALL_1
0x400a055	          0x3b6b10	            cmp ebp, dword [rbx + 0x10] 	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x400a058	            0x7ce6	                            jl 0x400a040	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x400a05a	          0x4c89f7	                            mov rdi, r14	       703	syntax.c	FUNCTION_3	IF_1	CALL_2
0x400a05d	      0xe800000000	                          call 0x400a062	       703	syntax.c	FUNCTION_3	IF_1	CALL_2
0x400a062	          0x488b1b	                    mov rbx, qword [rbx]	      1192	syntax.c	FUNCTION_11	IF_1	FOR_1
0x400a065	          0x4885db	                           test rbx, rbx	      1192	syntax.c	FUNCTION_11	IF_1	FOR_1
0x400a068	     0xf853affffff	                           jne 0x4009fa8	      1192	syntax.c	FUNCTION_11	IF_1	FOR_1
0x400a06e	      0xe96dffffff	                           jmp 0x4009fe0	      1192	syntax.c	FUNCTION_11	IF_1	FOR_1
0x400a073	       0xf1f440000	                   nop dword [rax + rax]	      1192	syntax.c	FUNCTION_11	IF_1	FOR_1
0x400a078	          0x4889df	                            mov rdi, rbx	      1215	syntax.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_1
0x400a07b	      0xe800000000	                          call 0x400a080	      1215	syntax.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_1
0x400a080	            0x85c0	                           test eax, eax	      1215	syntax.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_1
0x400a082	            0x749a	                            je 0x400a01e	      1215	syntax.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_1
0x400a084	          0x4889df	                            mov rdi, rbx	      1216	syntax.c	FUNCTION_12	FUNCTION_1	CALL_2
0x400a087	      0xe800000000	                          call 0x400a08c	      1216	syntax.c	FUNCTION_12	FUNCTION_1	CALL_2
0x400a08c	            0xeb90	                           jmp 0x400a01e	      1216	syntax.c	FUNCTION_12	FUNCTION_1	CALL_2
init_highlight	DO,0:functions,0:IF,10:WHILE,0:CALL,13:ELSE,4:SWITCH,0:FOR,2	160
0x4012da0	            0x4156	                                push r14	      7116	syntax.c	FUNCTION_113
0x4012da2	            0x4155	                                push r13	      7116	syntax.c	FUNCTION_113
0x4012da4	            0x4154	                                push r12	      7116	syntax.c	FUNCTION_113
0x4012da6	              0x55	                                push rbp	      7116	syntax.c	FUNCTION_113
0x4012da7	          0x4189fc	                           mov r12d, edi	      7116	syntax.c	FUNCTION_113
0x4012daa	              0x53	                                push rbx	      7116	syntax.c	FUNCTION_113
0x4012dab	      0xbf00000000	                              mov edi, 0	      7127	syntax.c	FUNCTION_113	CALL_1
0x4012db0	            0x89f5	                            mov ebp, esi	      7116	syntax.c	FUNCTION_113
0x4012db2	      0xe800000000	                          call 0x4012db7	      7127	syntax.c	FUNCTION_113	CALL_1
0x4012db7	          0x4885c0	                           test rax, rax	      7128	syntax.c	FUNCTION_113	IF_1
0x4012dba	     0xf84e2000000	                            je 0x4012ea2	      7128	syntax.c	FUNCTION_113	IF_1
0x4012dc0	          0x4889c7	                            mov rdi, rax	      7132	syntax.c	FUNCTION_113	IF_1	CALL_2
0x4012dc3	      0xe800000000	                          call 0x4012dc8	      7132	syntax.c	FUNCTION_113	IF_1	CALL_2
0x4012dc8	          0x4885c0	                           test rax, rax	      7135	syntax.c	FUNCTION_113	IF_1	IF_2
0x4012dcb	          0x4889c3	                            mov rbx, rax	      7132	syntax.c	FUNCTION_113	IF_1	CALL_2
0x4012dce	     0xf84ce000000	                            je 0x4012ea2	      7135	syntax.c	FUNCTION_113	IF_1	IF_2
0x4012dd4	    0x8b1500000000	            mov edx, dword [0x04012dda] 	      7220	syntax.c	FUNCTION_114	IF_1
0x4012dda	            0x85d2	                           test edx, edx	      7220	syntax.c	FUNCTION_114	IF_1
0x4012ddc	            0x7412	                            je 0x4012df0	      7220	syntax.c	FUNCTION_114	IF_1
0x4012dde	              0x5b	                                 pop rbx	      7204	syntax.c	FUNCTION_113
0x4012ddf	              0x5d	                                 pop rbp	      7204	syntax.c	FUNCTION_113
0x4012de0	            0x415c	                                 pop r12	      7204	syntax.c	FUNCTION_113
0x4012de2	            0x415d	                                 pop r13	      7204	syntax.c	FUNCTION_113
0x4012de4	            0x415e	                                 pop r14	      7204	syntax.c	FUNCTION_113
0x4012de6	          0x4889c7	                            mov rdi, rax	      7138	syntax.c	FUNCTION_113	IF_1	IF_2	CALL_4
0x4012de9	      0xe900000000	                           jmp 0x4012dee	      7138	syntax.c	FUNCTION_113	IF_1	IF_2	CALL_4
0x4012dee	            0x6690	                                     nop	      7138	syntax.c	FUNCTION_113	IF_1	IF_2	CALL_4
0x4012df0	          0x4889c7	                            mov rdi, rax	      7224	syntax.c	FUNCTION_114	CALL_2
0x4012df3	    0xc70500000000	               mov dword [0x04012dfd], 1	      7223	syntax.c	FUNCTION_114
0x4012dfd	      0xe800000000	                          call 0x4012e02	      7224	syntax.c	FUNCTION_114	CALL_2
0x4012e02	          0x8d780c	                    lea edi, [rax + 0xc]	      7224	syntax.c	FUNCTION_114	CALL_2
0x4012e05	      0xe800000000	                          call 0x4012e0a	      7224	syntax.c	FUNCTION_114	CALL_2
0x4012e0a	          0x4885c0	                           test rax, rax	      7225	syntax.c	FUNCTION_114	IF_2
0x4012e0d	          0x4989c5	                            mov r13, rax	      7224	syntax.c	FUNCTION_114	CALL_2
0x4012e10	     0xf84f9010000	                            je 0x401300f	      7225	syntax.c	FUNCTION_114	IF_2
0x4012e16	    0x4c8b05000000	              mov r8, qword [0x04012e1d]	      7228	syntax.c	FUNCTION_114	IF_2
0x4012e1d	            0x31c9	                            xor ecx, ecx	      7227	syntax.c	FUNCTION_114	IF_2	CALL_3
0x4012e1f	          0x4889de	                            mov rsi, rbx	      7227	syntax.c	FUNCTION_114	IF_2	CALL_3
0x4012e22	      0xbf1a000000	                           mov edi, 0x1a	      7227	syntax.c	FUNCTION_114	IF_2	CALL_3
0x4012e27	    0x498b90980000	              mov rdx, qword [r8 + 0x98]	      7227	syntax.c	FUNCTION_114	IF_2	CALL_3
0x4012e2e	      0xe800000000	                          call 0x4012e33	      7227	syntax.c	FUNCTION_114	IF_2	CALL_3
0x4012e33	          0x4989d8	                             mov r8, rbx	        33	stdio2.h	FUNCTION_182	CALL_1
0x4012e36	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_182	CALL_1
0x4012e3b	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_182	CALL_1
0x4012e42	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_182	CALL_1
0x4012e47	          0x4c89ef	                            mov rdi, r13	        33	stdio2.h	FUNCTION_182	CALL_1
0x4012e4a	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_182	CALL_1
0x4012e4c	      0xe800000000	                          call 0x4012e51	        33	stdio2.h	FUNCTION_182	CALL_1
0x4012e51	      0xbe18000000	                           mov esi, 0x18	      7230	syntax.c	FUNCTION_114	IF_2	CALL_4
0x4012e56	          0x4c89ef	                            mov rdi, r13	      7230	syntax.c	FUNCTION_114	IF_2	CALL_4
0x4012e59	      0xe800000000	                          call 0x4012e5e	      7230	syntax.c	FUNCTION_114	IF_2	CALL_4
0x4012e5e	          0x4c89ef	                            mov rdi, r13	      7231	syntax.c	FUNCTION_114	IF_2	CALL_5
0x4012e61	          0x4189c6	                           mov r14d, eax	      7230	syntax.c	FUNCTION_114	IF_2	CALL_4
0x4012e64	      0xe800000000	                          call 0x4012e69	      7231	syntax.c	FUNCTION_114	IF_2	CALL_5
0x4012e69	    0x4c8b05000000	              mov r8, qword [0x04012e70]	      7232	syntax.c	FUNCTION_114	IF_2	CALL_6
0x4012e70	            0x31c9	                            xor ecx, ecx	      7232	syntax.c	FUNCTION_114	IF_2	CALL_6
0x4012e72	          0x4889de	                            mov rsi, rbx	      7232	syntax.c	FUNCTION_114	IF_2	CALL_6
0x4012e75	      0xbf19000000	                           mov edi, 0x19	      7232	syntax.c	FUNCTION_114	IF_2	CALL_6
0x4012e7a	    0x498b90980000	              mov rdx, qword [r8 + 0x98]	      7232	syntax.c	FUNCTION_114	IF_2	CALL_6
0x4012e81	      0xe800000000	                          call 0x4012e86	      7232	syntax.c	FUNCTION_114	IF_2	CALL_6
0x4012e86	          0x4889df	                            mov rdi, rbx	      7138	syntax.c	FUNCTION_113	IF_1	IF_2	CALL_4
0x4012e89	    0xc70500000000	               mov dword [0x04012e93], 0	      7234	syntax.c	FUNCTION_114
0x4012e93	      0xe800000000	                          call 0x4012e98	      7138	syntax.c	FUNCTION_113	IF_1	IF_2	CALL_4
0x4012e98	        0x4183fe01	                             cmp r14d, 1	      7139	syntax.c	FUNCTION_113	IF_1	IF_2	IF_3
0x4012e9c	     0xf84c1000000	                            je 0x4012f63	      7139	syntax.c	FUNCTION_113	IF_1	IF_2	IF_3
0x4012ea2	          0x4585e4	                         test r12d, r12d	      7149	syntax.c	FUNCTION_113	IF_4
0x4012ea5	     0xf85c5000000	                           jne 0x4012f70	      7149	syntax.c	FUNCTION_113	IF_4
0x4012eab	    0x8b0500000000	            mov eax, dword [0x04012eb1] 	      7156	syntax.c	FUNCTION_113	ELSE_1	IF_5
0x4012eb1	            0x85c0	                           test eax, eax	      7156	syntax.c	FUNCTION_113	ELSE_1	IF_5
0x4012eb3	     0xf84aa000000	                            je 0x4012f63	      7156	syntax.c	FUNCTION_113	ELSE_1	IF_5
0x4012eb9	    0x488b05000000	            mov rax, qword [0x04012ec0] 	      7162	syntax.c	FUNCTION_113	IF_6
0x4012ec0	      0xbb00000000	                              mov ebx, 0	      7165	syntax.c	FUNCTION_113	ELSE_2
0x4012ec5	          0x80386c	                    cmp byte [rax], 0x6c	      7165	syntax.c	FUNCTION_113	ELSE_2
0x4012ec8	      0xb800000000	                              mov eax, 0	      7165	syntax.c	FUNCTION_113	ELSE_2
0x4012ecd	        0x480f44d8	                          cmove rbx, rax	      7165	syntax.c	FUNCTION_113	ELSE_2
0x4012ed1	          0x488b3b	                    mov rdi, qword [rbx]	      7166	syntax.c	FUNCTION_113	FOR_2
0x4012ed4	        0x4883c308	                              add rbx, 8	      7166	syntax.c	FUNCTION_113	FOR_2
0x4012ed8	          0x4885ff	                           test rdi, rdi	      7166	syntax.c	FUNCTION_113	FOR_2
0x4012edb	            0x741c	                            je 0x4012ef9	      7166	syntax.c	FUNCTION_113	FOR_2
0x4012edd	           0xf1f00	                         nop dword [rax]	      7166	syntax.c	FUNCTION_113	FOR_2
0x4012ee0	        0x4883c308	                              add rbx, 8	      7166	syntax.c	FUNCTION_113	FOR_2
0x4012ee4	      0xba01000000	                              mov edx, 1	      7167	syntax.c	FUNCTION_113	CALL_6
0x4012ee9	            0x89ee	                            mov esi, ebp	      7167	syntax.c	FUNCTION_113	CALL_6
0x4012eeb	      0xe800000000	                          call 0x4012ef0	      7167	syntax.c	FUNCTION_113	CALL_6
0x4012ef0	        0x488b7bf8	                mov rdi, qword [rbx - 8]	      7166	syntax.c	FUNCTION_113	FOR_2
0x4012ef4	          0x4885ff	                           test rdi, rdi	      7166	syntax.c	FUNCTION_113	FOR_2
0x4012ef7	            0x75e7	                           jne 0x4012ee0	      7166	syntax.c	FUNCTION_113	FOR_2
0x4012ef9	    0x833d00000000	               cmp dword [0x04012f00], 8	      7174	syntax.c	FUNCTION_113	IF_7
0x4012f00	     0xf8ed2000000	                           jle 0x4012fd8	      7174	syntax.c	FUNCTION_113	IF_7
0x4012f06	    0x488b05000000	            mov rax, qword [0x04012f0d] 	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0x4012f0d	      0xbf00000000	                              mov edi, 0	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0x4012f12	      0xba01000000	                              mov edx, 1	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0x4012f17	          0x80386c	                    cmp byte [rax], 0x6c	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0x4012f1a	      0xb800000000	                              mov eax, 0	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0x4012f1f	        0x480f44f8	                          cmove rdi, rax	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0x4012f23	            0x31f6	                            xor esi, esi	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0x4012f25	      0xe800000000	                          call 0x4012f2a	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0x4012f2a	      0xbf00000000	                              mov edi, 0	      7190	syntax.c	FUNCTION_113	IF_9	CALL_10
0x4012f2f	      0xe800000000	                          call 0x4012f34	      7190	syntax.c	FUNCTION_113	IF_9	CALL_10
0x4012f34	          0x4885c0	                           test rax, rax	      7190	syntax.c	FUNCTION_113	IF_9	CALL_10
0x4012f37	            0x742a	                            je 0x4012f63	      7190	syntax.c	FUNCTION_113	IF_9	CALL_10
0x4012f39	    0x8b0500000000	            mov eax, dword [0x04012f3f] 	      7194	syntax.c	FUNCTION_113	IF_9	IF_10
0x4012f3f	          0x83f804	                              cmp eax, 4	      7194	syntax.c	FUNCTION_113	IF_9	IF_10
0x4012f42	            0x7f6c	                            jg 0x4012fb0	      7194	syntax.c	FUNCTION_113	IF_9	IF_10
0x4012f44	          0x83c001	                              add eax, 1	      7198	syntax.c	FUNCTION_113	IF_9	ELSE_4
0x4012f47	      0xbe01000000	                              mov esi, 1	      7199	syntax.c	FUNCTION_113	IF_9	ELSE_4	CALL_13
0x4012f4c	      0xbf00000000	                              mov edi, 0	      7199	syntax.c	FUNCTION_113	IF_9	ELSE_4	CALL_13
0x4012f51	    0x890500000000	            mov dword [0x04012f57], eax 	      7198	syntax.c	FUNCTION_113	IF_9	ELSE_4
0x4012f57	      0xe800000000	                          call 0x4012f5c	      7199	syntax.c	FUNCTION_113	IF_9	ELSE_4	CALL_13
0x4012f5c	    0x832d00000000	               sub dword [0x04012f63], 1	      7200	syntax.c	FUNCTION_113	IF_9	ELSE_4
0x4012f63	              0x5b	                                 pop rbx	      7204	syntax.c	FUNCTION_113
0x4012f64	              0x5d	                                 pop rbp	      7204	syntax.c	FUNCTION_113
0x4012f65	            0x415c	                                 pop r12	      7204	syntax.c	FUNCTION_113
0x4012f67	            0x415d	                                 pop r13	      7204	syntax.c	FUNCTION_113
0x4012f69	            0x415e	                                 pop r14	      7204	syntax.c	FUNCTION_113
0x4012f6b	              0xc3	                                     ret	      7204	syntax.c	FUNCTION_113
0x4012f6c	         0xf1f4000	                         nop dword [rax]	      7204	syntax.c	FUNCTION_113
0x4012f70	    0x488b3d000000	            mov rdi, qword [0x04012f77] 	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0x4012f77	    0xc70500000000	               mov dword [0x04012f81], 1	      7151	syntax.c	FUNCTION_113	IF_4
0x4012f81	      0xbb00000000	                              mov ebx, 0	      7151	syntax.c	FUNCTION_113	IF_4
0x4012f86	          0x4885ff	                           test rdi, rdi	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0x4012f89	     0xf842affffff	                            je 0x4012eb9	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0x4012f8f	              0x90	                                     nop	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0x4012f90	        0x4883c308	                              add rbx, 8	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0x4012f94	      0xba01000000	                              mov edx, 1	      7154	syntax.c	FUNCTION_113	IF_4	CALL_5
0x4012f99	            0x89ee	                            mov esi, ebp	      7154	syntax.c	FUNCTION_113	IF_4	CALL_5
0x4012f9b	      0xe800000000	                          call 0x4012fa0	      7154	syntax.c	FUNCTION_113	IF_4	CALL_5
0x4012fa0	          0x488b3b	                    mov rdi, qword [rbx]	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0x4012fa3	          0x4885ff	                           test rdi, rdi	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0x4012fa6	            0x75e8	                           jne 0x4012f90	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0x4012fa8	      0xe90cffffff	                           jmp 0x4012eb9	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0x4012fad	           0xf1f00	                         nop dword [rax]	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0x4012fb0	            0x31ff	                            xor edi, edi	      7195	syntax.c	FUNCTION_113	IF_9	CALL_12
0x4012fb2	      0xba05000000	                              mov edx, 5	      7195	syntax.c	FUNCTION_113	IF_9	CALL_12
0x4012fb7	      0xbe00000000	                              mov esi, 0	      7195	syntax.c	FUNCTION_113	IF_9	CALL_12
0x4012fbc	      0xe800000000	                          call 0x4012fc1	      7195	syntax.c	FUNCTION_113	IF_9	CALL_12
0x4012fc1	              0x5b	                                 pop rbx	      7204	syntax.c	FUNCTION_113
0x4012fc2	              0x5d	                                 pop rbp	      7204	syntax.c	FUNCTION_113
0x4012fc3	            0x415c	                                 pop r12	      7204	syntax.c	FUNCTION_113
0x4012fc5	            0x415d	                                 pop r13	      7204	syntax.c	FUNCTION_113
0x4012fc7	            0x415e	                                 pop r14	      7204	syntax.c	FUNCTION_113
0x4012fc9	          0x4889c7	                            mov rdi, rax	      7195	syntax.c	FUNCTION_113	IF_9	CALL_12
0x4012fcc	      0xe900000000	                           jmp 0x4012fd1	      7195	syntax.c	FUNCTION_113	IF_9	CALL_12
0x4012fd1	     0xf1f80000000	                         nop dword [rax]	      7195	syntax.c	FUNCTION_113	IF_9	CALL_12
0x4012fd8	            0x31f6	                            xor esi, esi	      7180	syntax.c	FUNCTION_113	ELSE_3	CALL_8
0x4012fda	      0xba01000000	                              mov edx, 1	      7180	syntax.c	FUNCTION_113	ELSE_3	CALL_8
0x4012fdf	      0xbf00000000	                              mov edi, 0	      7180	syntax.c	FUNCTION_113	ELSE_3	CALL_8
0x4012fe4	      0xe800000000	                          call 0x4012fe9	      7180	syntax.c	FUNCTION_113	ELSE_3	CALL_8
0x4012fe9	    0x488b05000000	            mov rax, qword [0x04012ff0] 	      7182	syntax.c	FUNCTION_113	ELSE_3	IF_8
0x4012ff0	          0x80386c	                    cmp byte [rax], 0x6c	      7182	syntax.c	FUNCTION_113	ELSE_3	IF_8
0x4012ff3	     0xf8531ffffff	                           jne 0x4012f2a	      7182	syntax.c	FUNCTION_113	ELSE_3	IF_8
0x4012ff9	      0xba01000000	                              mov edx, 1	      7183	syntax.c	FUNCTION_113	ELSE_3	CALL_9
0x4012ffe	            0x31f6	                            xor esi, esi	      7183	syntax.c	FUNCTION_113	ELSE_3	CALL_9
0x4013000	      0xbf00000000	                              mov edi, 0	      7183	syntax.c	FUNCTION_113	ELSE_3	CALL_9
0x4013005	      0xe800000000	                          call 0x401300a	      7183	syntax.c	FUNCTION_113	ELSE_3	CALL_9
0x401300a	      0xe91bffffff	                           jmp 0x4012f2a	      7183	syntax.c	FUNCTION_113	ELSE_3	CALL_9
0x401300f	          0x4889df	                            mov rdi, rbx	      7138	syntax.c	FUNCTION_113	IF_1	IF_2	CALL_4
0x4013012	    0xc70500000000	               mov dword [0x0401301c], 0	      7234	syntax.c	FUNCTION_114
0x401301c	      0xe800000000	                          call 0x4013021	      7138	syntax.c	FUNCTION_113	IF_1	IF_2	CALL_4
0x4013021	      0xe97cfeffff	                           jmp 0x4012ea2	      7138	syntax.c	FUNCTION_113	IF_1	IF_2	CALL_4
highlight_gui_color_rgb	DO,0:functions,0:IF,3:WHILE,0:CALL,1:ELSE,1:SWITCH,0:FOR,0	26
0x400dc50	            0x85ff	                           test edi, edi	      9454	syntax.c	FUNCTION_145	IF_1
0x400dc52	            0x7e4c	                           jle 0x400dca0	      9454	syntax.c	FUNCTION_145	IF_1
0x400dc54	    0x3b3d00000000	            cmp edi, dword [0x0400dc5a] 	      9454	syntax.c	FUNCTION_145	IF_1
0x400dc5a	            0x7f44	                            jg 0x400dca0	      9454	syntax.c	FUNCTION_145	IF_1
0x400dc5c	          0x4863ff	                         movsxd rdi, edi	      9458	syntax.c	FUNCTION_145	IF_2
0x400dc5f	    0x488b15000000	            mov rdx, qword [0x0400dc66] 	      9458	syntax.c	FUNCTION_145	IF_2
0x400dc66	            0x85f6	                           test esi, esi	      9457	syntax.c	FUNCTION_145	IF_2
0x400dc68	        0x488d04ff	                  lea rax, [rdi + rdi*8]	      9458	syntax.c	FUNCTION_145	IF_2
0x400dc6c	        0x488d0447	                  lea rax, [rdi + rax*2]	      9458	syntax.c	FUNCTION_145	IF_2
0x400dc70	        0x488d04c2	                  lea rax, [rdx + rax*8]	      9458	syntax.c	FUNCTION_145	IF_2
0x400dc74	            0x7432	                            je 0x400dca8	      9457	syntax.c	FUNCTION_145	IF_2
0x400dc76	        0x488b78a8	             mov rdi, qword [rax - 0x58]	      9458	syntax.c	FUNCTION_145	IF_2
0x400dc7a	    0x4881ff99d4ff	             cmp rdi, 0xffffffffffffd499	      9462	syntax.c	FUNCTION_145	IF_3
0x400dc81	            0x741d	                            je 0x400dca0	      9462	syntax.c	FUNCTION_145	IF_3
0x400dc83	    0x8b0500000000	            mov eax, dword [0x0400dc89] 	      9465	syntax.c	FUNCTION_145	CALL_1
0x400dc89	      0xba00000000	                              mov edx, 0	      9465	syntax.c	FUNCTION_145	CALL_1
0x400dc8e	            0x85c0	                           test eax, eax	      9465	syntax.c	FUNCTION_145	CALL_1
0x400dc90	      0xb800000000	                              mov eax, 0	      9465	syntax.c	FUNCTION_145	CALL_1
0x400dc95	        0x480f44c2	                          cmove rax, rdx	      9465	syntax.c	FUNCTION_145	CALL_1
0x400dc99	            0xffe0	                                 jmp rax	      9465	syntax.c	FUNCTION_145	CALL_1
0x400dc9b	       0xf1f440000	                   nop dword [rax + rax]	      9465	syntax.c	FUNCTION_145	CALL_1
0x400dca0	            0x31c0	                            xor eax, eax	      9466	syntax.c	FUNCTION_145
0x400dca2	              0xc3	                                     ret	      9466	syntax.c	FUNCTION_145
0x400dca3	       0xf1f440000	                   nop dword [rax + rax]	      9466	syntax.c	FUNCTION_145
0x400dca8	        0x488b78b0	             mov rdi, qword [rax - 0x50]	      9460	syntax.c	FUNCTION_145	ELSE_1
0x400dcac	            0xebcc	                           jmp 0x400dc7a	      9460	syntax.c	FUNCTION_145	ELSE_1
syn_cmd_on	DO,0:functions,0:IF,0:WHILE,0:CALL,1:ELSE,0:SWITCH,0:FOR,0	28
0x4002070	              0x53	                                push rbx	      3865	syntax.c	FUNCTION_57
0x4002071	          0x4889fb	                            mov rbx, rdi	      3865	syntax.c	FUNCTION_57
0x4002074	        0x4883ec70	                           sub rsp, 0x70	      3865	syntax.c	FUNCTION_57
0x4002078	          0x488b3f	                    mov rdi, qword [rdi]	      3919	syntax.c	FUNCTION_62	CALL_1
0x400207b	    0x64488b042528	                mov rax, qword fs:[0x28]	      3865	syntax.c	FUNCTION_57
0x4002084	      0x4889442468	             mov qword [rsp + 0x68], rax	      3865	syntax.c	FUNCTION_57
0x4002089	            0x31c0	                            xor eax, eax	      3865	syntax.c	FUNCTION_57
0x400208b	      0xe800000000	                          call 0x4002090	      3919	syntax.c	FUNCTION_62	CALL_1
0x4002090	        0x48894308	                mov qword [rbx + 8], rax	      3919	syntax.c	FUNCTION_62	CALL_1
0x4002094	          0x8b4330	            mov eax, dword [rbx + 0x30] 	      3920	syntax.c	FUNCTION_62	IF_1
0x4002097	            0x85c0	                           test eax, eax	      3920	syntax.c	FUNCTION_62	IF_1
0x4002099	            0x752a	                           jne 0x40020c5	      3920	syntax.c	FUNCTION_62	IF_1
0x400209b	      0x488d7c2403	                      lea rdi, [rsp + 3]	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x40020a0	      0xb900000000	                              mov ecx, 0	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x40020a5	      0xba00000000	                              mov edx, 0	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x40020aa	      0xbe61000000	                           mov esi, 0x61	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x40020af	            0x31c0	                            xor eax, eax	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x40020b1	    0xc70424736f20	               mov dword [rsp], 0x206f73	       110	string3.h	FUNCTION_176	CALL_3
0x40020b8	      0xe800000000	                          call 0x40020bd	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x40020bd	          0x4889e7	                            mov rdi, rsp	      3924	syntax.c	FUNCTION_62	IF_1	CALL_4
0x40020c0	      0xe800000000	                          call 0x40020c5	      3924	syntax.c	FUNCTION_62	IF_1	CALL_4
0x40020c5	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      3867	syntax.c	FUNCTION_57
0x40020ca	    0x644833042528	                xor rax, qword fs:[0x28]	      3867	syntax.c	FUNCTION_57
0x40020d3	            0x7506	                           jne 0x40020db	      3867	syntax.c	FUNCTION_57
0x40020d5	        0x4883c470	                           add rsp, 0x70	      3867	syntax.c	FUNCTION_57
0x40020d9	              0x5b	                                 pop rbx	      3867	syntax.c	FUNCTION_57
0x40020da	              0xc3	                                     ret	      3867	syntax.c	FUNCTION_57
0x40020db	      0xe800000000	  call sym.syn_stack_apply_changes_block	      3867	syntax.c	FUNCTION_57
get_cterm_attr_idx	DO,0:functions,0:IF,0:WHILE,0:CALL,2:ELSE,0:SWITCH,0:FOR,0	129
0x400c5a0	            0x4157	                                push r15	      8924	syntax.c	FUNCTION_132
0x400c5a2	            0x4156	                                push r14	      8924	syntax.c	FUNCTION_132
0x400c5a4	            0x4155	                                push r13	      8924	syntax.c	FUNCTION_132
0x400c5a6	            0x4154	                                push r12	      8924	syntax.c	FUNCTION_132
0x400c5a8	          0x4189f4	                           mov r12d, esi	      8924	syntax.c	FUNCTION_132
0x400c5ab	              0x55	                                push rbp	      8924	syntax.c	FUNCTION_132
0x400c5ac	              0x53	                                push rbx	      8924	syntax.c	FUNCTION_132
0x400c5ad	            0x89d5	                            mov ebp, edx	      8924	syntax.c	FUNCTION_132
0x400c5af	            0x89fb	                            mov ebx, edi	      8924	syntax.c	FUNCTION_132
0x400c5b1	        0x4883ec38	                           sub rsp, 0x38	      8924	syntax.c	FUNCTION_132
0x400c5b5	    0x8b0d00000000	            mov ecx, dword [0x0400c5bb] 	      8803	syntax.c	FUNCTION_131	FOR_1
0x400c5bb	    0xc70500000000	           mov dword [0x0400c5c5], 0x28 	      8797	syntax.c	FUNCTION_131
0x400c5c5	    0x64488b042528	                mov rax, qword fs:[0x28]	      8924	syntax.c	FUNCTION_132
0x400c5ce	      0x4889442428	             mov qword [rsp + 0x28], rax	      8924	syntax.c	FUNCTION_132
0x400c5d3	            0x31c0	                            xor eax, eax	      8924	syntax.c	FUNCTION_132
0x400c5d5	    0x48c744240800	                  mov qword [rsp + 8], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400c5de	    0x48c704240000	                      mov qword [rsp], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400c5e6	            0x85c9	                           test ecx, ecx	      8803	syntax.c	FUNCTION_131	FOR_1
0x400c5e8	    0x48c744242000	               mov qword [rsp + 0x20], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400c5f1	    0x48c744241099	mov qword [rsp + 0x10], 0xffffffffffffd499	      8929	syntax.c	FUNCTION_132
0x400c5fa	    0x48c744241899	mov qword [rsp + 0x18], 0xffffffffffffd499	      8930	syntax.c	FUNCTION_132
0x400c603	        0x66893c24	                      mov word [rsp], di	      8932	syntax.c	FUNCTION_132
0x400c607	      0x6689742408	                  mov word [rsp + 8], si	      8933	syntax.c	FUNCTION_132
0x400c60c	      0x668954240a	                mov word [rsp + 0xa], dx	      8934	syntax.c	FUNCTION_132
0x400c611	    0xc70500000000	               mov dword [0x0400c61b], 7	      8798	syntax.c	FUNCTION_131
0x400c61b	     0xf8e3e010000	                           jle 0x400c75f	      8803	syntax.c	FUNCTION_131	FOR_1
0x400c621	            0x89fe	                            mov esi, edi	      8803	syntax.c	FUNCTION_131	FOR_1
0x400c623	    0x488b05000000	            mov rax, qword [0x0400c62a] 	      8803	syntax.c	FUNCTION_131	FOR_1
0x400c62a	        0x8b7c2408	                mov edi, dword [rsp + 8]	      8836	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400c62e	            0x31d2	                            xor edx, edx	      8836	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400c630	            0xeb11	                           jmp 0x400c643	      8836	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400c632	    0x660f1f440000	                    nop word [rax + rax]	      8836	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400c638	          0x83c201	                              add edx, 1	      8803	syntax.c	FUNCTION_131	FOR_1
0x400c63b	        0x4883c028	                           add rax, 0x28	      8803	syntax.c	FUNCTION_131	FOR_1
0x400c63f	            0x39ca	                            cmp edx, ecx	      8803	syntax.c	FUNCTION_131	FOR_1
0x400c641	            0x7455	                            je 0x400c698	      8803	syntax.c	FUNCTION_131	FOR_1
0x400c643	          0x663b30	                      cmp si, word [rax]	      8806	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400c646	            0x75f0	                           jne 0x400c638	      8806	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400c648	          0x3b7808	                cmp edi, dword [rax + 8]	      8836	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400c64b	            0x75eb	                           jne 0x400c638	      8836	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400c64d	    0x4881781099d4	cmp qword [rax + 0x10], 0xffffffffffffd499	      8839	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400c655	            0x75e1	                           jne 0x400c638	      8839	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400c657	    0x4881781899d4	cmp qword [rax + 0x18], 0xffffffffffffd499	      8841	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400c65f	            0x75d7	                           jne 0x400c638	      8841	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400c661	    0x8d8200010000	                  lea eax, [rdx + 0x100]	      8846	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400c667	    0x660f1f840000	                    nop word [rax + rax]	      8846	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400c670	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	      8936	syntax.c	FUNCTION_132
0x400c675	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      8936	syntax.c	FUNCTION_132
0x400c67e	     0xf8574010000	                           jne 0x400c7f8	      8936	syntax.c	FUNCTION_132
0x400c684	        0x4883c438	                           add rsp, 0x38	      8936	syntax.c	FUNCTION_132
0x400c688	              0x5b	                                 pop rbx	      8936	syntax.c	FUNCTION_132
0x400c689	              0x5d	                                 pop rbp	      8936	syntax.c	FUNCTION_132
0x400c68a	            0x415c	                                 pop r12	      8936	syntax.c	FUNCTION_132
0x400c68c	            0x415d	                                 pop r13	      8936	syntax.c	FUNCTION_132
0x400c68e	            0x415e	                                 pop r14	      8936	syntax.c	FUNCTION_132
0x400c690	            0x415f	                                 pop r15	      8936	syntax.c	FUNCTION_132
0x400c692	              0xc3	                                     ret	      8936	syntax.c	FUNCTION_132
0x400c693	       0xf1f440000	                   nop dword [rax + rax]	      8936	syntax.c	FUNCTION_132
0x400c698	    0x81fafffe0000	                         cmp edx, 0xfeff	      8849	syntax.c	FUNCTION_131	IF_2
0x400c69e	     0xf8ebb000000	                           jle 0x400c75f	      8849	syntax.c	FUNCTION_131	IF_2
0x400c6a4	    0x8b0d00000000	            mov ecx, dword [0x0400c6aa] 	      8856	syntax.c	FUNCTION_131	IF_2	IF_3
0x400c6aa	            0x85c9	                           test ecx, ecx	      8856	syntax.c	FUNCTION_131	IF_2	IF_3
0x400c6ac	     0xf8526010000	                           jne 0x400c7d8	      8856	syntax.c	FUNCTION_131	IF_2	IF_3
0x400c6b2	      0xbf00000000	                              mov edi, 0	      8994	syntax.c	FUNCTION_135	CALL_1
0x400c6b7	    0xc70500000000	               mov dword [0x0400c6c1], 1	      8861	syntax.c	FUNCTION_131	IF_2
0x400c6c1	          0x4531f6	                          xor r14d, r14d	      8996	syntax.c	FUNCTION_135	FOR_1
0x400c6c4	      0xe800000000	                          call 0x400c6c9	      8994	syntax.c	FUNCTION_135	CALL_1
0x400c6c9	    0x8b1500000000	            mov edx, dword [0x0400c6cf] 	      8996	syntax.c	FUNCTION_135	FOR_1
0x400c6cf	          0x4531ed	                          xor r13d, r13d	      8996	syntax.c	FUNCTION_135	FOR_1
0x400c6d2	            0x85d2	                           test edx, edx	      8996	syntax.c	FUNCTION_135	FOR_1
0x400c6d4	            0x7e37	                           jle 0x400c70d	      8996	syntax.c	FUNCTION_135	FOR_1
0x400c6d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      8996	syntax.c	FUNCTION_135	FOR_1
0x400c6e0	          0x4d89f7	                            mov r15, r14	      8998	syntax.c	FUNCTION_135	FOR_1
0x400c6e3	    0x4c033d000000	             add r15, qword [0x0400c6ea]	      8998	syntax.c	FUNCTION_135	FOR_1
0x400c6ea	        0x4183c501	                             add r13d, 1	      8996	syntax.c	FUNCTION_135	FOR_1
0x400c6ee	        0x4983c628	                           add r14, 0x28	      8996	syntax.c	FUNCTION_135	FOR_1
0x400c6f2	        0x498b7f08	                mov rdi, qword [r15 + 8]	      8999	syntax.c	FUNCTION_135	FOR_1	CALL_2
0x400c6f6	      0xe800000000	                          call 0x400c6fb	      8999	syntax.c	FUNCTION_135	FOR_1	CALL_2
0x400c6fb	        0x498b7f10	            mov rdi, qword [r15 + 0x10] 	      9000	syntax.c	FUNCTION_135	FOR_1	CALL_3
0x400c6ff	      0xe800000000	                          call 0x400c704	      9000	syntax.c	FUNCTION_135	FOR_1	CALL_3
0x400c704	    0x443b2d000000	           cmp r13d, dword [0x0400c70b] 	      8996	syntax.c	FUNCTION_135	FOR_1
0x400c70b	            0x7cd3	                            jl 0x400c6e0	      8996	syntax.c	FUNCTION_135	FOR_1
0x400c70d	      0xbf00000000	                              mov edi, 0	      9002	syntax.c	FUNCTION_135	CALL_4
0x400c712	          0x4531ed	                          xor r13d, r13d	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x400c715	      0xe800000000	                          call 0x400c71a	      9002	syntax.c	FUNCTION_135	CALL_4
0x400c71a	      0xbf00000000	                              mov edi, 0	      9003	syntax.c	FUNCTION_135	CALL_5
0x400c71f	      0xe800000000	                          call 0x400c724	      9003	syntax.c	FUNCTION_135	CALL_5
0x400c724	    0x8b0500000000	            mov eax, dword [0x0400c72a] 	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x400c72a	    0xc70500000000	           mov dword [0x0400c734], 0x32 	      8865	syntax.c	FUNCTION_131	IF_2
0x400c734	            0x85c0	                           test eax, eax	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x400c736	            0x7e1d	                           jle 0x400c755	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x400c738	     0xf1f84000000	                   nop dword [rax + rax]	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x400c740	          0x4489ef	                           mov edi, r13d	      8868	syntax.c	FUNCTION_131	IF_2	CALL_6
0x400c743	        0x4183c501	                             add r13d, 1	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x400c747	      0xe8c469ffff	                    call sym.set_hl_attr	      8868	syntax.c	FUNCTION_131	IF_2	CALL_6
0x400c74c	    0x443b2d000000	           cmp r13d, dword [0x0400c753] 	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x400c753	            0x7ceb	                            jl 0x400c740	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x400c755	    0xc70500000000	               mov dword [0x0400c75f], 0	      8870	syntax.c	FUNCTION_131	IF_2
0x400c75f	      0xbe01000000	                              mov esi, 1	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x400c764	      0xbf00000000	                              mov edi, 0	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x400c769	      0xe800000000	                          call 0x400c76e	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x400c76e	            0x85c0	                           test eax, eax	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x400c770	     0xf84fafeffff	                            je 0x400c670	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x400c776	    0x486305000000	         movsxd rax, dword [0x0400c77d] 	      8879	syntax.c	FUNCTION_131
0x400c77d	        0x488d1480	                  lea rdx, [rax + rax*4]	      8879	syntax.c	FUNCTION_131
0x400c781	    0x488b05000000	            mov rax, qword [0x0400c788] 	      8879	syntax.c	FUNCTION_131
0x400c788	        0x488d04d0	                  lea rax, [rax + rdx*8]	      8879	syntax.c	FUNCTION_131
0x400c78c	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400c793	    0x48c740080000	                  mov qword [rax + 8], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400c79b	          0x668918	                      mov word [rax], bx	      8881	syntax.c	FUNCTION_131
0x400c79e	    0x48c740200000	               mov qword [rax + 0x20], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400c7a6	      0x6644896008	                mov word [rax + 8], r12w	      8907	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x400c7ab	        0x6689680a	                mov word [rax + 0xa], bp	      8908	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x400c7af	    0x48c7401099d4	mov qword [rax + 0x10], 0xffffffffffffd499	      8910	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x400c7b7	    0x48c7401899d4	mov qword [rax + 0x18], 0xffffffffffffd499	      8911	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x400c7bf	    0x8b0500000000	            mov eax, dword [0x0400c7c5] 	      8914	syntax.c	FUNCTION_131
0x400c7c5	          0x8d5001	                      lea edx, [rax + 1]	      8914	syntax.c	FUNCTION_131
0x400c7c8	       0x500010000	                          add eax, 0x100	      8915	syntax.c	FUNCTION_131
0x400c7cd	    0x891500000000	            mov dword [0x0400c7d3], edx 	      8914	syntax.c	FUNCTION_131
0x400c7d3	      0xe998feffff	                           jmp 0x400c670	      8914	syntax.c	FUNCTION_131
0x400c7d8	      0xba05000000	                              mov edx, 5	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x400c7dd	      0xbe00000000	                              mov esi, 0	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x400c7e2	            0x31ff	                            xor edi, edi	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x400c7e4	      0xe800000000	                          call 0x400c7e9	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x400c7e9	          0x4889c7	                            mov rdi, rax	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x400c7ec	      0xe800000000	                          call 0x400c7f1	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x400c7f1	            0x31c0	                            xor eax, eax	      8859	syntax.c	FUNCTION_131	IF_2	IF_3
0x400c7f3	      0xe978feffff	                           jmp 0x400c670	      8859	syntax.c	FUNCTION_131	IF_2	IF_3
0x400c7f8	      0xe800000000	                          call 0x400c7fd	      8936	syntax.c	FUNCTION_132
syn_cmd_region	DO,0:functions,0:IF,29:WHILE,2:CALL,43:ELSE,9:SWITCH,0:FOR,4	485
0x400f070	            0x4157	                                push r15	      5131	syntax.c	FUNCTION_81
0x400f072	            0x4156	                                push r14	      5131	syntax.c	FUNCTION_81
0x400f074	            0x4155	                                push r13	      5131	syntax.c	FUNCTION_81
0x400f076	            0x4154	                                push r12	      5131	syntax.c	FUNCTION_81
0x400f078	              0x55	                                push rbp	      5131	syntax.c	FUNCTION_81
0x400f079	              0x53	                                push rbx	      5131	syntax.c	FUNCTION_81
0x400f07a	    0x4881ec980000	                           sub rsp, 0x98	      5131	syntax.c	FUNCTION_81
0x400f081	          0x488b07	                    mov rax, qword [rdi]	      5132	syntax.c	FUNCTION_81
0x400f084	      0x48897c2408	                mov qword [rsp + 8], rdi	      5131	syntax.c	FUNCTION_81
0x400f089	        0x8974242c	             mov dword [rsp + 0x2c], esi	      5131	syntax.c	FUNCTION_81
0x400f08d	    0x64488b142528	                mov rdx, qword fs:[0x28]	      5131	syntax.c	FUNCTION_81
0x400f096	    0x488994248800	             mov qword [rsp + 0x88], rdx	      5131	syntax.c	FUNCTION_81
0x400f09e	            0x31d2	                            xor edx, edx	      5131	syntax.c	FUNCTION_81
0x400f0a0	          0x4889c7	                            mov rdi, rax	      4582	syntax.c	FUNCTION_75	CALL_1
0x400f0a3	          0x4889c3	                            mov rbx, rax	      5132	syntax.c	FUNCTION_81
0x400f0a6	      0x4889442418	             mov qword [rsp + 0x18], rax	      5132	syntax.c	FUNCTION_81
0x400f0ab	    0xc74424340000	               mov dword [rsp + 0x34], 0	      5160	syntax.c	FUNCTION_81
0x400f0b3	      0xe800000000	                          call 0x400f0b8	      4582	syntax.c	FUNCTION_75	CALL_1
0x400f0b8	          0x4889c7	                            mov rdi, rax	      4583	syntax.c	FUNCTION_75	CALL_2
0x400f0bb	      0x4889442420	             mov qword [rsp + 0x20], rax	      4582	syntax.c	FUNCTION_75	CALL_1
0x400f0c0	      0xe800000000	                          call 0x400f0c5	      4583	syntax.c	FUNCTION_75	CALL_2
0x400f0c5	           0xfb63b	                   movzx edi, byte [rbx]	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x400f0c8	          0x4989c7	                            mov r15, rax	      4583	syntax.c	FUNCTION_75	CALL_2
0x400f0cb	      0xe800000000	                          call 0x400f0d0	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x400f0d0	            0x85c0	                           test eax, eax	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x400f0d2	     0xf85a6050000	                           jne 0x400f67e	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x400f0d8	        0x41803f00	                       cmp byte [r15], 0	      4590	syntax.c	FUNCTION_75	IF_1
0x400f0dc	      0xb800000000	                              mov eax, 0	      4590	syntax.c	FUNCTION_75	IF_1
0x400f0e1	        0x4c0f44f8	                          cmove r15, rax	      4590	syntax.c	FUNCTION_75	IF_1
0x400f0e5	    0x488b05000000	            mov rax, qword [0x0400f0ec] 	      5728	syntax.c	FUNCTION_89
0x400f0ec	          0x4d85ff	                           test r15, r15	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x400f0ef	    0x48c744247000	               mov qword [rsp + 0x70], 0	      5165	syntax.c	FUNCTION_81
0x400f0f8	    0x48c744247800	               mov qword [rsp + 0x78], 0	      5166	syntax.c	FUNCTION_81
0x400f101	    0x48c784248000	               mov qword [rsp + 0x80], 0	      5167	syntax.c	FUNCTION_81
0x400f10d	    0xc74424400000	               mov dword [rsp + 0x40], 0	      5171	syntax.c	FUNCTION_81
0x400f115	    0xc74424440000	               mov dword [rsp + 0x44], 0	      5172	syntax.c	FUNCTION_81
0x400f11d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5728	syntax.c	FUNCTION_89
0x400f121	    0x48c744244800	               mov qword [rsp + 0x48], 0	      5173	syntax.c	FUNCTION_81
0x400f12a	      0xc644245001	                mov byte [rsp + 0x50], 1	      5174	syntax.c	FUNCTION_81
0x400f12f	    0x48c744245800	               mov qword [rsp + 0x58], 0	      5175	syntax.c	FUNCTION_81
0x400f138	    0x48c744246000	               mov qword [rsp + 0x60], 0	      5176	syntax.c	FUNCTION_81
0x400f141	    0x48c744246800	               mov qword [rsp + 0x68], 0	      5177	syntax.c	FUNCTION_81
0x400f14a	    0xc78068020000	          mov dword [rax + 0x268], 0xa0 	      5728	syntax.c	FUNCTION_89
0x400f154	    0xc7806c020000	            mov dword [rax + 0x26c], 0xa	      5729	syntax.c	FUNCTION_89
0x400f15e	     0xf84b5060000	                            je 0x400f819	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x400f164	    0xc74424100000	               mov dword [rsp + 0x10], 0	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x400f16c	    0xc74424280000	               mov dword [rsp + 0x28], 0	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x400f174	          0x4531e4	                          xor r12d, r12d	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x400f177	    0x48bb01020000	         movabs rbx, 0x2000000100000201 	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x400f181	      0xbd01000000	                              mov ebp, 1	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x400f186	          0x4d89fe	                            mov r14, r15	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x400f189	     0xf1f80000000	                         nop dword [rax]	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x400f190	        0x410fb63e	                   movzx edi, byte [r14]	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x400f194	      0xe800000000	                          call 0x400f199	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x400f199	            0x85c0	                           test eax, eax	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x400f19b	     0xf8510040000	                           jne 0x400f5b1	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x400f1a1	      0x488b442408	                mov rax, qword [rsp + 8]	      5185	syntax.c	FUNCTION_81	WHILE_1	CALL_4
0x400f1a6	      0x488d542434	                   lea rdx, [rsp + 0x34]	      5185	syntax.c	FUNCTION_81	WHILE_1	CALL_4
0x400f1ab	      0x488d742440	                   lea rsi, [rsp + 0x40]	      5185	syntax.c	FUNCTION_81	WHILE_1	CALL_4
0x400f1b0	          0x4c89f7	                            mov rdi, r14	      5185	syntax.c	FUNCTION_81	WHILE_1	CALL_4
0x400f1b3	          0x8b4830	            mov ecx, dword [rax + 0x30] 	      5185	syntax.c	FUNCTION_81	WHILE_1	CALL_4
0x400f1b6	      0xe845f7ffff	                call sym.get_syn_options	      5185	syntax.c	FUNCTION_81	WHILE_1	CALL_4
0x400f1bb	          0x4885c0	                           test rax, rax	      5186	syntax.c	FUNCTION_81	WHILE_1	IF_1	CALL_5
0x400f1be	          0x4989c6	                            mov r14, rax	      5185	syntax.c	FUNCTION_81	WHILE_1	CALL_4
0x400f1c1	     0xf8479010000	                            je 0x400f340	      5186	syntax.c	FUNCTION_81	WHILE_1	IF_1	CALL_5
0x400f1c7	           0xfb638	                   movzx edi, byte [rax]	      5186	syntax.c	FUNCTION_81	WHILE_1	IF_1	CALL_5
0x400f1ca	      0xe800000000	                          call 0x400f1cf	      5186	syntax.c	FUNCTION_81	WHILE_1	IF_1	CALL_5
0x400f1cf	            0x85c0	                           test eax, eax	      5186	syntax.c	FUNCTION_81	WHILE_1	IF_1	CALL_5
0x400f1d1	          0x4189c5	                           mov r13d, eax	      5186	syntax.c	FUNCTION_81	WHILE_1	IF_1	CALL_5
0x400f1d4	     0xf85d7030000	                           jne 0x400f5b1	      5186	syntax.c	FUNCTION_81	WHILE_1	IF_1	CALL_5
0x400f1da	        0x410fb606	                   movzx eax, byte [r14]	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x400f1de	          0x4d89f7	                            mov r15, r14	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x400f1e1	            0x3c3d	                            cmp al, 0x3d	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x400f1e3	            0x770b	                            ja 0x400f1f0	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x400f1e5	        0x480fa3c3	                             bt rbx, rax	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x400f1e9	            0x722a	                            jb 0x400f215	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x400f1eb	       0xf1f440000	                   nop dword [rax + rax]	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x400f1f0	        0x4983c701	                              add r15, 1	      5192	syntax.c	FUNCTION_81	WHILE_1	WHILE_2
0x400f1f4	        0x410fb60f	                   movzx ecx, byte [r15]	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x400f1f8	          0x4889d8	                            mov rax, rbx	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x400f1fb	          0x48d3e8	                             shr rax, cl	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x400f1fe	          0x83e001	                              and eax, 1	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x400f201	        0x4883f001	                              xor rax, 1	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x400f205	          0x80f93d	                            cmp cl, 0x3d	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x400f208	           0xf47c5	                          cmova eax, ebp	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x400f20b	            0x84c0	                             test al, al	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x400f20d	            0x75e1	                           jne 0x400f1f0	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x400f20f	          0x4589fd	                          mov r13d, r15d	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x400f212	          0x4529f5	                          sub r13d, r14d	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x400f215	          0x4c89e7	                            mov rdi, r12	      5193	syntax.c	FUNCTION_81	WHILE_1	CALL_7
0x400f218	      0xe800000000	                          call 0x400f21d	      5193	syntax.c	FUNCTION_81	WHILE_1	CALL_7
0x400f21d	          0x4489ee	                           mov esi, r13d	      5194	syntax.c	FUNCTION_81	WHILE_1	CALL_8
0x400f220	          0x4c89f7	                            mov rdi, r14	      5194	syntax.c	FUNCTION_81	WHILE_1	CALL_8
0x400f223	      0xe800000000	                          call 0x400f228	      5194	syntax.c	FUNCTION_81	WHILE_1	CALL_8
0x400f228	          0x4885c0	                           test rax, rax	      5195	syntax.c	FUNCTION_81	WHILE_1	IF_2
0x400f22b	          0x4989c4	                            mov r12, rax	      5194	syntax.c	FUNCTION_81	WHILE_1	CALL_8
0x400f22e	     0xf840c010000	                            je 0x400f340	      5195	syntax.c	FUNCTION_81	WHILE_1	IF_2
0x400f234	      0xbf00000000	                              mov edi, 0	      5200	syntax.c	FUNCTION_81	WHILE_1	IF_3	CALL_9
0x400f239	      0xb90b000000	                            mov ecx, 0xb	      5200	syntax.c	FUNCTION_81	WHILE_1	IF_3	CALL_9
0x400f23e	          0x4889c6	                            mov rsi, rax	      5200	syntax.c	FUNCTION_81	WHILE_1	IF_3	CALL_9
0x400f241	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5200	syntax.c	FUNCTION_81	WHILE_1	IF_3	CALL_9
0x400f243	     0xf8457020000	                            je 0x400f4a0	      5200	syntax.c	FUNCTION_81	WHILE_1	IF_3	CALL_9
0x400f249	      0xbf00000000	                              mov edi, 0	      5202	syntax.c	FUNCTION_81	WHILE_1	ELSE_1	IF_4	CALL_10
0x400f24e	      0xb906000000	                              mov ecx, 6	      5202	syntax.c	FUNCTION_81	WHILE_1	ELSE_1	IF_4	CALL_10
0x400f253	          0x4889c6	                            mov rsi, rax	      5202	syntax.c	FUNCTION_81	WHILE_1	ELSE_1	IF_4	CALL_10
0x400f256	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5202	syntax.c	FUNCTION_81	WHILE_1	ELSE_1	IF_4	CALL_10
0x400f258	     0xf84b2010000	                            je 0x400f410	      5202	syntax.c	FUNCTION_81	WHILE_1	ELSE_1	IF_4	CALL_10
0x400f25e	          0x803845	                    cmp byte [rax], 0x45	      5204	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5	CALL_11
0x400f261	            0x750a	                           jne 0x400f26d	      5204	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5	CALL_11
0x400f263	        0x8078014e	                cmp byte [rax + 1], 0x4e	      5204	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5	CALL_11
0x400f267	     0xf8481020000	                            je 0x400f4ee	      5204	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5	CALL_11
0x400f26d	      0xbf00000000	                              mov edi, 0	      5206	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	CALL_12
0x400f272	      0xb905000000	                              mov ecx, 5	      5206	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	CALL_12
0x400f277	          0x4c89e6	                            mov rsi, r12	      5206	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	CALL_12
0x400f27a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5206	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	CALL_12
0x400f27c	     0xf852f030000	                           jne 0x400f5b1	      5206	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	CALL_12
0x400f282	    0x48837c247800	               cmp qword [rsp + 0x78], 0	      5208	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	IF_7
0x400f288	     0xf850e030000	                           jne 0x400f59c	      5208	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	IF_7
0x400f28e	    0x41bd01000000	                             mov r13d, 1	      5213	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6
0x400f294	          0x4c89ff	                            mov rdi, r15	      5217	syntax.c	FUNCTION_81	WHILE_1	CALL_13
0x400f297	      0xe800000000	                          call 0x400f29c	      5217	syntax.c	FUNCTION_81	WHILE_1	CALL_13
0x400f29c	          0x80383d	                    cmp byte [rax], 0x3d	      5218	syntax.c	FUNCTION_81	WHILE_1	IF_8
0x400f29f	     0xf857f010000	                           jne 0x400f424	      5218	syntax.c	FUNCTION_81	WHILE_1	IF_8
0x400f2a5	        0x488d7801	                      lea rdi, [rax + 1]	      5224	syntax.c	FUNCTION_81	WHILE_1	CALL_16
0x400f2a9	      0xe800000000	                          call 0x400f2ae	      5224	syntax.c	FUNCTION_81	WHILE_1	CALL_16
0x400f2ae	          0x803800	                       cmp byte [rax], 0	      5225	syntax.c	FUNCTION_81	WHILE_1	IF_9
0x400f2b1	          0x4989c6	                            mov r14, rax	      5224	syntax.c	FUNCTION_81	WHILE_1	CALL_16
0x400f2b4	     0xf846b030000	                            je 0x400f625	      5225	syntax.c	FUNCTION_81	WHILE_1	IF_9
0x400f2ba	        0x4183fd03	                             cmp r13d, 3	      5231	syntax.c	FUNCTION_81	WHILE_1	IF_10
0x400f2be	     0xf84ec010000	                            je 0x400f4b0	      5231	syntax.c	FUNCTION_81	WHILE_1	IF_10
0x400f2c4	      0xbf18000000	                           mov edi, 0x18	      5254	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_21
0x400f2c9	      0xe800000000	                          call 0x400f2ce	      5254	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_21
0x400f2ce	          0x4885c0	                           test rax, rax	      5255	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_13
0x400f2d1	          0x4989c7	                            mov r15, rax	      5254	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_21
0x400f2d4	            0x746a	                            je 0x400f340	      5255	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_13
0x400f2d6	          0x4963c5	                        movsxd rax, r13d	      5260	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x400f2d9	      0xbfa0000000	                           mov edi, 0xa0	      5262	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_22
0x400f2de	      0x488b4cc470	    mov rcx, qword [rsp + rax*8 + 0x70] 	      5260	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x400f2e3	      0x4c897cc470	     mov qword [rsp + rax*8 + 0x70], r15	      5261	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x400f2e8	        0x49894f10	             mov qword [r15 + 0x10], rcx	      5260	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x400f2ec	      0xe800000000	                          call 0x400f2f1	      5262	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_22
0x400f2f1	          0x4885c0	                           test rax, rax	      5263	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_14
0x400f2f4	          0x498907	                    mov qword [r15], rax	      5262	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_22
0x400f2f7	            0x7447	                            je 0x400f340	      5263	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_14
0x400f2f9	          0x4585ed	                         test r13d, r13d	      5273	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_15
0x400f2fc	     0xf854e010000	                           jne 0x400f450	      5273	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_15
0x400f302	          0x4c89f7	                            mov rdi, r14	      5277	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_23
0x400f305	          0x4889c6	                            mov rsi, rax	      5277	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_23
0x400f308	    0xc70500000000	               mov dword [0x0400f312], 1	      5274	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_15
0x400f312	      0xe8a911ffff	                call sym.get_syn_pattern	      5277	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_23
0x400f317	    0xc70500000000	               mov dword [0x0400f321], 0	      5278	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x400f321	          0x4989c6	                            mov r14, rax	      5277	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_23
0x400f324	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      5282	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x400f328	      0x8344242801	               add dword [rsp + 0x28], 1	      5283	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x400f32d	        0x41894708	                mov dword [r15 + 8], eax	      5282	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x400f331	          0x4d85f6	                           test r14, r14	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x400f334	     0xf8556feffff	                           jne 0x400f190	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x400f33a	    0x660f1f440000	                    nop word [rax + rax]	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x400f340	          0x4c89e7	                            mov rdi, r12	      5286	syntax.c	FUNCTION_81	CALL_25
0x400f343	      0xe800000000	                          call 0x400f348	      5286	syntax.c	FUNCTION_81	CALL_25
0x400f348	    0xc74424100000	               mov dword [rsp + 0x10], 0	      5286	syntax.c	FUNCTION_81	CALL_25
0x400f350	    0xc74424080000	                  mov dword [rsp + 8], 0	      5286	syntax.c	FUNCTION_81	CALL_25
0x400f358	      0x488d6c2470	                   lea rbp, [rsp + 0x70]	      5286	syntax.c	FUNCTION_81	CALL_25
0x400f35d	          0x4531e4	                          xor r12d, r12d	      5157	syntax.c	FUNCTION_81
0x400f360	          0x4531ff	                          xor r15d, r15d	      5308	syntax.c	FUNCTION_81	IF_20	IF_21
0x400f363	        0x4c8d7518	                   lea r14, [rbp + 0x18]	      5308	syntax.c	FUNCTION_81	IF_20	IF_21
0x400f367	        0x488b5d00	                    mov rbx, qword [rbp]	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0x400f36b	          0x4885db	                           test rbx, rbx	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0x400f36e	            0x7424	                            je 0x400f394	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0x400f370	          0x4585e4	                         test r12d, r12d	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0x400f373	            0x745b	                            je 0x400f3d0	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0x400f375	           0xf1f00	                         nop dword [rax]	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0x400f378	          0x488b3b	                    mov rdi, qword [rbx]	      5373	syntax.c	FUNCTION_81	FOR_3	FOR_4	CALL_35
0x400f37b	      0xe800000000	                          call 0x400f380	      5373	syntax.c	FUNCTION_81	FOR_3	FOR_4	CALL_35
0x400f380	        0x4c8b6b10	            mov r13, qword [rbx + 0x10] 	      5374	syntax.c	FUNCTION_81	FOR_3	FOR_4
0x400f384	          0x4889df	                            mov rdi, rbx	      5375	syntax.c	FUNCTION_81	FOR_3	FOR_4	CALL_36
0x400f387	      0xe800000000	                          call 0x400f38c	      5375	syntax.c	FUNCTION_81	FOR_3	FOR_4	CALL_36
0x400f38c	          0x4d85ed	                           test r13, r13	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0x400f38f	          0x4c89eb	                            mov rbx, r13	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0x400f392	            0x75e4	                           jne 0x400f378	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0x400f394	        0x4883c508	                              add rbp, 8	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0x400f398	          0x4939ee	                            cmp r14, rbp	      5365	syntax.c	FUNCTION_81	FOR_3
0x400f39b	            0x75ca	                           jne 0x400f367	      5365	syntax.c	FUNCTION_81	FOR_3
0x400f39d	          0x4585e4	                         test r12d, r12d	      5378	syntax.c	FUNCTION_81	IF_27
0x400f3a0	     0xf8482010000	                            je 0x400f528	      5378	syntax.c	FUNCTION_81	IF_27
0x400f3a6	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	      5388	syntax.c	FUNCTION_81
0x400f3ae	    0x644833042528	                xor rax, qword fs:[0x28]	      5388	syntax.c	FUNCTION_81
0x400f3b7	     0xf8564040000	                           jne 0x400f821	      5388	syntax.c	FUNCTION_81
0x400f3bd	    0x4881c4980000	                           add rsp, 0x98	      5388	syntax.c	FUNCTION_81
0x400f3c4	              0x5b	                                 pop rbx	      5388	syntax.c	FUNCTION_81
0x400f3c5	              0x5d	                                 pop rbp	      5388	syntax.c	FUNCTION_81
0x400f3c6	            0x415c	                                 pop r12	      5388	syntax.c	FUNCTION_81
0x400f3c8	            0x415d	                                 pop r13	      5388	syntax.c	FUNCTION_81
0x400f3ca	            0x415e	                                 pop r14	      5388	syntax.c	FUNCTION_81
0x400f3cc	            0x415f	                                 pop r15	      5388	syntax.c	FUNCTION_81
0x400f3ce	              0xc3	                                     ret	      5388	syntax.c	FUNCTION_81
0x400f3cf	              0x90	                                     nop	      5388	syntax.c	FUNCTION_81
0x400f3d0	          0x488b03	                    mov rax, qword [rbx]	      5370	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26	CALL_33
0x400f3d3	        0x488b7868	            mov rdi, qword [rax + 0x68] 	      5370	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26	CALL_33
0x400f3d7	      0xe800000000	                          call 0x400f3dc	      5370	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26	CALL_33
0x400f3dc	          0x488b03	                    mov rax, qword [rbx]	      5371	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26	CALL_34
0x400f3df	        0x488b7860	            mov rdi, qword [rax + 0x60] 	      5371	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26	CALL_34
0x400f3e3	      0xe800000000	                          call 0x400f3e8	      5371	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26	CALL_34
0x400f3e8	          0x488b3b	                    mov rdi, qword [rbx]	      5373	syntax.c	FUNCTION_81	FOR_3	FOR_4	CALL_35
0x400f3eb	      0xe800000000	                          call 0x400f3f0	      5373	syntax.c	FUNCTION_81	FOR_3	FOR_4	CALL_35
0x400f3f0	        0x4c8b6b10	            mov r13, qword [rbx + 0x10] 	      5374	syntax.c	FUNCTION_81	FOR_3	FOR_4
0x400f3f4	          0x4889df	                            mov rdi, rbx	      5375	syntax.c	FUNCTION_81	FOR_3	FOR_4	CALL_36
0x400f3f7	      0xe800000000	                          call 0x400f3fc	      5375	syntax.c	FUNCTION_81	FOR_3	FOR_4	CALL_36
0x400f3fc	          0x4d85ed	                           test r13, r13	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0x400f3ff	          0x4c89eb	                            mov rbx, r13	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0x400f402	            0x75cc	                           jne 0x400f3d0	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0x400f404	            0xeb8e	                           jmp 0x400f394	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0x400f406	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0x400f410	          0x4c89ff	                            mov rdi, r15	      5217	syntax.c	FUNCTION_81	WHILE_1	CALL_13
0x400f413	          0x4531ed	                          xor r13d, r13d	      5203	syntax.c	FUNCTION_81	WHILE_1	ELSE_1	IF_4
0x400f416	      0xe800000000	                          call 0x400f41b	      5217	syntax.c	FUNCTION_81	WHILE_1	CALL_13
0x400f41b	          0x80383d	                    cmp byte [rax], 0x3d	      5218	syntax.c	FUNCTION_81	WHILE_1	IF_8
0x400f41e	     0xf8481feffff	                            je 0x400f2a5	      5218	syntax.c	FUNCTION_81	WHILE_1	IF_8
0x400f424	            0x31ff	                            xor edi, edi	      5221	syntax.c	FUNCTION_81	WHILE_1	IF_8	CALL_15
0x400f426	      0xba05000000	                              mov edx, 5	      5221	syntax.c	FUNCTION_81	WHILE_1	IF_8	CALL_15
0x400f42b	      0xbe00000000	                              mov esi, 0	      5221	syntax.c	FUNCTION_81	WHILE_1	IF_8	CALL_15
0x400f430	      0xe800000000	                          call 0x400f435	      5221	syntax.c	FUNCTION_81	WHILE_1	IF_8	CALL_15
0x400f435	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      5221	syntax.c	FUNCTION_81	WHILE_1	IF_8	CALL_15
0x400f43a	          0x4889c7	                            mov rdi, rax	      5221	syntax.c	FUNCTION_81	WHILE_1	IF_8	CALL_15
0x400f43d	      0xe800000000	                          call 0x400f442	      5221	syntax.c	FUNCTION_81	WHILE_1	IF_8	CALL_15
0x400f442	      0xe9f9feffff	                           jmp 0x400f340	      5222	syntax.c	FUNCTION_81	WHILE_1	IF_8
0x400f447	    0x660f1f840000	                    nop word [rax + rax]	      5222	syntax.c	FUNCTION_81	WHILE_1	IF_8
0x400f450	          0x4c89f7	                            mov rdi, r14	      5277	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_23
0x400f453	          0x4889c6	                            mov rsi, rax	      5277	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_23
0x400f456	    0xc70500000000	               mov dword [0x0400f460], 2	      5276	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	ELSE_7	IF_16
0x400f460	      0xe85b10ffff	                call sym.get_syn_pattern	      5277	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_23
0x400f465	        0x4183fd02	                             cmp r13d, 2	      5279	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17	CALL_24
0x400f469	          0x4989c6	                            mov r14, rax	      5277	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_23
0x400f46c	    0xc70500000000	               mov dword [0x0400f476], 0	      5278	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x400f476	     0xf85a8feffff	                           jne 0x400f324	      5279	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17	CALL_24
0x400f47c	      0xe800000000	                          call 0x400f481	      5279	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17	CALL_24
0x400f481	            0x85c0	                           test eax, eax	      5279	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17	CALL_24
0x400f483	     0xf849bfeffff	                            je 0x400f324	      5279	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17	CALL_24
0x400f489	      0xf644244108	               test byte [rsp + 0x41], 8	      5280	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17
0x400f48e	     0xf8590feffff	                           jne 0x400f324	      5280	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17
0x400f494	          0x498b07	                    mov rax, qword [r15]	      5281	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17
0x400f497	        0x83482408	                or dword [rax + 0x24], 8	      5281	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17
0x400f49b	      0xe984feffff	                           jmp 0x400f324	      5281	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17
0x400f4a0	    0x41bd03000000	                             mov r13d, 3	      5201	syntax.c	FUNCTION_81	WHILE_1	IF_3
0x400f4a6	      0xe9e9fdffff	                           jmp 0x400f294	      5201	syntax.c	FUNCTION_81	WHILE_1	IF_3
0x400f4ab	       0xf1f440000	                   nop dword [rax + rax]	      5201	syntax.c	FUNCTION_81	WHILE_1	IF_3
0x400f4b0	          0x4889c7	                            mov rdi, rax	      5233	syntax.c	FUNCTION_81	WHILE_1	IF_10	CALL_17
0x400f4b3	      0xe800000000	                          call 0x400f4b8	      5233	syntax.c	FUNCTION_81	WHILE_1	IF_10	CALL_17
0x400f4b8	          0x4989c5	                            mov r13, rax	      5233	syntax.c	FUNCTION_81	WHILE_1	IF_10	CALL_17
0x400f4bb	          0x4c29f0	                            sub rax, r14	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x400f4be	        0x4883f804	                              cmp rax, 4	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x400f4c2	            0x7449	                            je 0x400f50d	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x400f4c4	      0x488b542408	                mov rdx, qword [rsp + 8]	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x400f4c9	    0xc74424100000	               mov dword [rsp + 0x10], 0	      5235	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11
0x400f4d1	        0x448b4230	            mov r8d, dword [rdx + 0x30] 	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x400f4d5	          0x4585c0	                           test r8d, r8d	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x400f4d8	     0xf84a8000000	                            je 0x400f586	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x400f4de	          0x4c89ef	                            mov rdi, r13	      5245	syntax.c	FUNCTION_81	WHILE_1	IF_10	CALL_20
0x400f4e1	      0xe800000000	                          call 0x400f4e6	      5245	syntax.c	FUNCTION_81	WHILE_1	IF_10	CALL_20
0x400f4e6	          0x4989c6	                            mov r14, rax	      5245	syntax.c	FUNCTION_81	WHILE_1	IF_10	CALL_20
0x400f4e9	      0xe943feffff	                           jmp 0x400f331	      5245	syntax.c	FUNCTION_81	WHILE_1	IF_10	CALL_20
0x400f4ee	        0x80780244	                cmp byte [rax + 2], 0x44	      5204	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5	CALL_11
0x400f4f2	     0xf8575fdffff	                           jne 0x400f26d	      5204	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5	CALL_11
0x400f4f8	        0x80780300	                   cmp byte [rax + 3], 0	      5204	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5	CALL_11
0x400f4fc	     0xf856bfdffff	                           jne 0x400f26d	      5204	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5	CALL_11
0x400f502	    0x41bd02000000	                             mov r13d, 2	      5205	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5
0x400f508	      0xe987fdffff	                           jmp 0x400f294	      5205	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5
0x400f50d	      0xbf00000000	                              mov edi, 0	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x400f512	      0xb904000000	                              mov ecx, 4	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x400f517	          0x4c89f6	                            mov rsi, r14	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x400f51a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x400f51c	            0x75a6	                           jne 0x400f4c4	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x400f51e	    0xc74424100000	               mov dword [rsp + 0x10], 0	      5235	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11
0x400f526	            0xebb6	                           jmp 0x400f4de	      5235	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11
0x400f528	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      5380	syntax.c	FUNCTION_81	IF_27	CALL_37
0x400f52d	      0xe800000000	                          call 0x400f532	      5380	syntax.c	FUNCTION_81	IF_27	CALL_37
0x400f532	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	      5381	syntax.c	FUNCTION_81	IF_27	CALL_38
0x400f537	      0xe800000000	                          call 0x400f53c	      5381	syntax.c	FUNCTION_81	IF_27	CALL_38
0x400f53c	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      5382	syntax.c	FUNCTION_81	IF_27	CALL_39
0x400f541	      0xe800000000	                          call 0x400f546	      5382	syntax.c	FUNCTION_81	IF_27	CALL_39
0x400f546	        0x8b542408	                mov edx, dword [rsp + 8]	      5383	syntax.c	FUNCTION_81	IF_27	IF_28
0x400f54a	            0x85d2	                           test edx, edx	      5383	syntax.c	FUNCTION_81	IF_27	IF_28
0x400f54c	     0xf8534010000	                           jne 0x400f686	      5383	syntax.c	FUNCTION_81	IF_27	IF_28
0x400f552	          0x4d85ff	                           test r15, r15	      5385	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0x400f555	            0x740c	                            je 0x400f563	      5385	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0x400f557	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      5385	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0x400f55b	            0x85c0	                           test eax, eax	      5385	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0x400f55d	     0xf8443feffff	                            je 0x400f3a6	      5385	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0x400f563	      0xba05000000	                              mov edx, 5	      5386	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0x400f568	      0xbe00000000	                              mov esi, 0	      5386	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0x400f56d	            0x31ff	                            xor edi, edi	      5386	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0x400f56f	      0xe800000000	                          call 0x400f574	      5386	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0x400f574	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      5386	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0x400f579	          0x4889c7	                            mov rdi, rax	      5386	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0x400f57c	      0xe800000000	                          call 0x400f581	      5386	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0x400f581	      0xe920feffff	                           jmp 0x400f3a6	      5388	syntax.c	FUNCTION_81
0x400f586	            0x89c6	                            mov esi, eax	      5238	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	CALL_19
0x400f588	          0x4c89f7	                            mov rdi, r14	      5238	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	CALL_19
0x400f58b	      0xe800000000	                          call 0x400f590	      5238	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	CALL_19
0x400f590	            0x85c0	                           test eax, eax	      5239	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	IF_12
0x400f592	        0x89442410	             mov dword [rsp + 0x10], eax	      5238	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	CALL_19
0x400f596	     0xf8542ffffff	                           jne 0x400f4de	      5239	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	IF_12
0x400f59c	    0xc74424100100	               mov dword [rsp + 0x10], 1	      5210	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	IF_7
0x400f5a4	    0xc74424080000	                  mov dword [rsp + 8], 0	      5155	syntax.c	FUNCTION_81
0x400f5ac	      0xe984000000	                           jmp 0x400f635	      5155	syntax.c	FUNCTION_81
0x400f5b1	      0x488b5c2470	            mov rbx, qword [rsp + 0x70] 	      5155	syntax.c	FUNCTION_81
0x400f5b6	          0x4c89e7	                            mov rdi, r12	      5286	syntax.c	FUNCTION_81	CALL_25
0x400f5b9	          0x4d89f7	                            mov r15, r14	      5286	syntax.c	FUNCTION_81	CALL_25
0x400f5bc	      0xe800000000	                          call 0x400f5c1	      5286	syntax.c	FUNCTION_81	CALL_25
0x400f5c1	          0x4885db	                           test rbx, rbx	      5293	syntax.c	FUNCTION_81	IF_19
0x400f5c4	            0x744a	                            je 0x400f610	      5293	syntax.c	FUNCTION_81	IF_19
0x400f5c6	    0x4883bc248000	               cmp qword [rsp + 0x80], 0	      5293	syntax.c	FUNCTION_81	IF_19
0x400f5cf	            0x743f	                            je 0x400f610	      5293	syntax.c	FUNCTION_81	IF_19
0x400f5d1	          0x4c89f7	                            mov rdi, r14	      5306	syntax.c	FUNCTION_81	IF_20	CALL_26
0x400f5d4	      0xe800000000	                          call 0x400f5d9	      5306	syntax.c	FUNCTION_81	IF_20	CALL_26
0x400f5d9	      0x488b542408	                mov rdx, qword [rsp + 8]	      5306	syntax.c	FUNCTION_81	IF_20	CALL_26
0x400f5de	        0x48894208	                mov qword [rdx + 8], rax	      5306	syntax.c	FUNCTION_81	IF_20	CALL_26
0x400f5e2	        0x410fb63e	                   movzx edi, byte [r14]	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0x400f5e6	      0xe800000000	                          call 0x400f5eb	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0x400f5eb	            0x85c0	                           test eax, eax	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0x400f5ed	            0x740c	                            je 0x400f5fb	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0x400f5ef	      0x488b442408	                mov rax, qword [rsp + 8]	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0x400f5f4	          0x8b7830	            mov edi, dword [rax + 0x30] 	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0x400f5f7	            0x85ff	                           test edi, edi	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0x400f5f9	            0x7447	                            je 0x400f642	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0x400f5fb	    0xc74424100000	               mov dword [rsp + 0x10], 0	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0x400f603	    0xc74424080000	                  mov dword [rsp + 8], 0	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0x400f60b	      0xe948fdffff	                           jmp 0x400f358	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0x400f610	    0xc74424100000	               mov dword [rsp + 0x10], 0	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0x400f618	    0xc74424080100	                  mov dword [rsp + 8], 1	      5296	syntax.c	FUNCTION_81	IF_19
0x400f620	      0xe933fdffff	                           jmp 0x400f358	      5296	syntax.c	FUNCTION_81	IF_19
0x400f625	    0xc74424100000	               mov dword [rsp + 0x10], 0	      5156	syntax.c	FUNCTION_81
0x400f62d	    0xc74424080100	                  mov dword [rsp + 8], 1	      5227	syntax.c	FUNCTION_81	WHILE_1	IF_9
0x400f635	          0x4c89e7	                            mov rdi, r12	      5286	syntax.c	FUNCTION_81	CALL_25
0x400f638	      0xe800000000	                          call 0x400f63d	      5286	syntax.c	FUNCTION_81	CALL_25
0x400f63d	      0xe916fdffff	                           jmp 0x400f358	      5286	syntax.c	FUNCTION_81	CALL_25
0x400f642	    0x488b05000000	            mov rax, qword [0x0400f649] 	      5309	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_28
0x400f649	        0x8b742428	            mov esi, dword [rsp + 0x28] 	      5309	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_28
0x400f64d	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      5309	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_28
0x400f651	    0x4881c7600200	                          add rdi, 0x260	      5309	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_28
0x400f658	      0xe800000000	                          call 0x400f65d	      5309	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_28
0x400f65d	            0x85c0	                           test eax, eax	      5309	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_28
0x400f65f	            0x7534	                           jne 0x400f695	      5309	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_28
0x400f661	    0xc74424100000	               mov dword [rsp + 0x10], 0	      5309	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_28
0x400f669	    0xc74424080000	                  mov dword [rsp + 8], 0	      5309	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_28
0x400f671	          0x4531e4	                          xor r12d, r12d	      5157	syntax.c	FUNCTION_81
0x400f674	      0x488d6c2470	                   lea rbp, [rsp + 0x70]	      5157	syntax.c	FUNCTION_81
0x400f679	      0xe9e5fcffff	                           jmp 0x400f363	      5157	syntax.c	FUNCTION_81
0x400f67e	          0x4531ff	                          xor r15d, r15d	      4590	syntax.c	FUNCTION_75	IF_1
0x400f681	      0xe95ffaffff	                           jmp 0x400f0e5	      4590	syntax.c	FUNCTION_75	IF_1
0x400f686	      0xba05000000	                              mov edx, 5	      5384	syntax.c	FUNCTION_81	IF_27	CALL_41
0x400f68b	      0xbe00000000	                              mov esi, 0	      5384	syntax.c	FUNCTION_81	IF_27	CALL_41
0x400f690	      0xe9d8feffff	                           jmp 0x400f56d	      5384	syntax.c	FUNCTION_81	IF_27	CALL_41
0x400f695	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5310	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_29
0x400f69a	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      5310	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_29
0x400f69f	          0x4889c7	                            mov rdi, rax	      5310	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_29
0x400f6a2	          0x4829c6	                            sub rsi, rax	      5310	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_29
0x400f6a5	      0xe800000000	                          call 0x400f6aa	      5310	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_29
0x400f6aa	            0x85c0	                           test eax, eax	      5310	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_29
0x400f6ac	            0x89c3	                            mov ebx, eax	      5310	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_29
0x400f6ae	            0x74b1	                            je 0x400f661	      5310	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_29
0x400f6b0	        0x8b442440	            mov eax, dword [rsp + 0x40] 	      4795	syntax.c	FUNCTION_77	IF_1
0x400f6b4	    0x4c8b05000000	              mov r8, qword [0x0400f6bb]	      4795	syntax.c	FUNCTION_77	IF_1
0x400f6bb	            0xa801	                              test al, 1	      4795	syntax.c	FUNCTION_77	IF_1
0x400f6bd	        0x498b5010	              mov rdx, qword [r8 + 0x10]	      4795	syntax.c	FUNCTION_77	IF_1
0x400f6c1	            0x751d	                           jne 0x400f6e0	      4795	syntax.c	FUNCTION_77	IF_1
0x400f6c3	    0x8b8a04030000	           mov ecx, dword [rdx + 0x304] 	      4795	syntax.c	FUNCTION_77	IF_1
0x400f6c9	            0x85c9	                           test ecx, ecx	      4795	syntax.c	FUNCTION_77	IF_1
0x400f6cb	            0x7413	                            je 0x400f6e0	      4795	syntax.c	FUNCTION_77	IF_1
0x400f6cd	          0x83c801	                               or eax, 1	      4797	syntax.c	FUNCTION_77
0x400f6d0	    0x81f9d7590000	                         cmp ecx, 0x59d7	      4798	syntax.c	FUNCTION_77	IF_2
0x400f6d6	        0x89442440	             mov dword [rsp + 0x40], eax	      4797	syntax.c	FUNCTION_77
0x400f6da	     0xf8f9d010000	                            jg 0x400f87d	      4798	syntax.c	FUNCTION_77	IF_2
0x400f6e0	    0x440fb66c242c	          movzx r13d, byte [rsp + 0x2c] 	      4798	syntax.c	FUNCTION_77	IF_2
0x400f6e6	    0x448bb2600200	          mov r14d, dword [rdx + 0x260] 	      5317	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22
0x400f6ed	      0x488d6c2470	                   lea rbp, [rsp + 0x70]	      5317	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22
0x400f6f2	          0x4531c9	                            xor r9d, r9d	      5317	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22
0x400f6f5	          0x4189dc	                           mov r12d, ebx	      5317	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22
0x400f6f8	      0x4c897c2410	             mov qword [rsp + 0x10], r15	      5317	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22
0x400f6fd	      0x4a8b54cd00	             mov rdx, qword [rbp + r9*8]	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f702	          0x4885d2	                           test rdx, rdx	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f705	     0xf84c6000000	                            je 0x400f7d1	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f70b	      0x448b542440	           mov r10d, dword [rsp + 0x40] 	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f710	          0x4963c6	                        movsxd rax, r14d	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f713	    0x8b1d00000000	            mov ebx, dword [0x0400f719] 	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f719	        0x488d0480	                  lea rax, [rax + rax*4]	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f71d	      0x448b5c2434	           mov r11d, dword [rsp + 0x34] 	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f722	        0x498b4810	              mov rcx, qword [r8 + 0x10]	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f726	      0x44894c2408	                mov dword [rsp + 8], r9d	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f72b	          0x4589d7	                          mov r15d, r10d	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f72e	        0x48c1e005	                              shl rax, 5	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f732	    0x4181e7002000	                        and r15d, 0x2000	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f739	          0x4889c7	                            mov rdi, rax	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f73c	    0x4803b9700200	            add rdi, qword [rcx + 0x270]	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f743	          0x488b32	                    mov rsi, qword [rdx]	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f746	      0xb914000000	                           mov ecx, 0x14	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f74b	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f74e	          0x4889c6	                            mov rsi, rax	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f751	        0x498b4810	              mov rcx, qword [r8 + 0x10]	      5323	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f755	    0x488b89700200	           mov rcx, qword [rcx + 0x270] 	      5323	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f75c	      0x44886c0101	          mov byte [rcx + rax + 1], r13b	      5323	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f761	        0x498b4810	              mov rcx, qword [r8 + 0x10]	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f765	    0x4803b1700200	            add rsi, qword [rcx + 0x270]	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f76c	          0x4d85c9	                             test r9, r9	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f76f	     0xf84b1000000	                            je 0x400f826	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f775	      0x837c240801	                  cmp dword [rsp + 8], 1	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f77a	           0xf94c1	                                 sete cl	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f77d	          0x83c103	                              add ecx, 3	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f780	            0x880e	                      mov byte [rsi], cl	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f782	        0x498b4810	              mov rcx, qword [r8 + 0x10]	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f786	          0x4889c6	                            mov rsi, rax	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f789	          0x8b7a08	                mov edi, dword [rdx + 8]	      5331	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f78c	    0x4803b1700200	            add rsi, qword [rcx + 0x270]	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f793	        0x44095624	             or dword [rsi + 0x24], r10d	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f797	      0x6644896654	             mov word [rsi + 0x54], r12w	      5328	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f79c	          0x895e50	             mov dword [rsi + 0x50], ebx	      5329	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f79f	        0x66897e02	                  mov word [rsi + 2], di	      5331	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f7a3	        0x44895e28	            mov dword [rsi + 0x28], r11d	      5334	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f7a7	    0x838160020000	              add dword [rcx + 0x260], 1	      5347	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f7ae	        0x4183c601	                             add r14d, 1	      5348	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f7b2	          0x4585ff	                         test r15d, r15d	      5350	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_25
0x400f7b5	            0x7407	                            je 0x400f7be	      5350	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_25
0x400f7b7	    0x83810c030000	              add dword [rcx + 0x30c], 1	      5351	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_25
0x400f7be	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f7c2	    0x4805a0000000	                           add rax, 0xa0	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f7c8	          0x4885d2	                           test rdx, rdx	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f7cb	     0xf8568ffffff	                           jne 0x400f739	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f7d1	        0x4983c101	                               add r9, 1	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f7d5	        0x4983f903	                               cmp r9, 3	      5318	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1
0x400f7d9	     0xf851effffff	                           jne 0x400f6fd	      5318	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1
0x400f7df	      0xbf23000000	                           mov edi, 0x23	      5356	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_31
0x400f7e4	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      5356	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_31
0x400f7e9	    0x41bc01000000	                             mov r12d, 1	      5358	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22
0x400f7ef	      0xe800000000	                          call 0x400f7f4	      5356	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_31
0x400f7f4	    0x488b05000000	            mov rax, qword [0x0400f7fb] 	      5357	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_32
0x400f7fb	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      5357	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_32
0x400f7ff	      0xe800000000	                          call 0x400f804	      5357	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_32
0x400f804	    0xc74424100000	               mov dword [rsp + 0x10], 0	      5357	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_32
0x400f80c	    0xc74424080000	                  mov dword [rsp + 8], 0	      5357	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_32
0x400f814	      0xe94afbffff	                           jmp 0x400f363	      5357	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_32
0x400f819	          0x4531e4	                          xor r12d, r12d	      5136	syntax.c	FUNCTION_81
0x400f81c	      0xe91ffbffff	                           jmp 0x400f340	      5136	syntax.c	FUNCTION_81
0x400f821	      0xe800000000	                          call 0x400f826	      5388	syntax.c	FUNCTION_81
0x400f826	          0xc60602	                       mov byte [rsi], 2	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f829	        0x498b4810	              mov rcx, qword [r8 + 0x10]	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f82d	          0x4889c6	                            mov rsi, rax	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f830	          0x8b7a08	                mov edi, dword [rdx + 8]	      5331	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f833	    0x4803b1700200	            add rsi, qword [rcx + 0x270]	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f83a	        0x66897e02	                  mov word [rsi + 2], di	      5331	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f83e	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      5338	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x400f843	        0x44095624	             or dword [rsi + 0x24], r10d	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f847	      0x6644896654	             mov word [rsi + 0x54], r12w	      5328	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f84c	          0x895e50	             mov dword [rsi + 0x50], ebx	      5329	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f84f	        0x44895e28	            mov dword [rsi + 0x28], r11d	      5334	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0x400f853	        0x48897e40	             mov qword [rsi + 0x40], rdi	      5338	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x400f857	      0x488b7c2460	            mov rdi, qword [rsp + 0x60] 	      5341	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x400f85c	          0x4885ff	                           test rdi, rdi	      5342	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	IF_24
0x400f85f	        0x48897e58	             mov qword [rsi + 0x58], rdi	      5340	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x400f863	            0x740a	                            je 0x400f86f	      5342	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	IF_24
0x400f865	    0xc78198020000	              mov dword [rcx + 0x298], 1	      5343	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	IF_24
0x400f86f	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      5344	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x400f874	        0x48897e48	             mov qword [rsi + 0x48], rdi	      5344	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x400f878	      0xe92affffff	                           jmp 0x400f7a7	      5344	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0x400f87d	      0xbf04000000	                              mov edi, 4	      4801	syntax.c	FUNCTION_77	IF_2	CALL_1
0x400f882	      0xe800000000	                          call 0x400f887	      4801	syntax.c	FUNCTION_77	IF_2	CALL_1
0x400f887	    0x4c8b05000000	              mov r8, qword [0x0400f88e]	      4802	syntax.c	FUNCTION_77	IF_2
0x400f88e	          0x4885c0	                           test rax, rax	      4804	syntax.c	FUNCTION_77	IF_2	IF_3
0x400f891	      0x4889442438	             mov qword [rsp + 0x38], rax	      4801	syntax.c	FUNCTION_77	IF_2	CALL_1
0x400f896	        0x498b5010	              mov rdx, qword [r8 + 0x10]	      4802	syntax.c	FUNCTION_77	IF_2
0x400f89a	    0x8bb204030000	           mov esi, dword [rdx + 0x304] 	      4802	syntax.c	FUNCTION_77	IF_2
0x400f8a0	    0x8d8e28a6ffff	                 lea ecx, [rsi - 0x59d8]	      4802	syntax.c	FUNCTION_77	IF_2
0x400f8a6	     0xf8434feffff	                            je 0x400f6e0	      4804	syntax.c	FUNCTION_77	IF_2	IF_3
0x400f8ac	            0x31f6	                            xor esi, esi	      4807	syntax.c	FUNCTION_77	IF_2	IF_3
0x400f8ae	          0x668918	                      mov word [rax], bx	      4806	syntax.c	FUNCTION_77	IF_2	IF_3
0x400f8b1	        0x66897002	                  mov word [rax + 2], si	      4807	syntax.c	FUNCTION_77	IF_2	IF_3
0x400f8b5	          0x4863c1	                         movsxd rax, ecx	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x400f8b8	      0x488d742438	                   lea rsi, [rsp + 0x38]	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x400f8bd	        0x488d0c40	                  lea rcx, [rax + rax*2]	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x400f8c1	    0x488b82880200	           mov rax, qword [rdx + 0x288] 	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x400f8c8	      0xba02000000	                              mov edx, 2	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x400f8cd	      0x488d7cc810	          lea rdi, [rax + rcx*8 + 0x10] 	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x400f8d2	      0xe86913ffff	               call sym.syn_combine_list	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x400f8d7	    0x4c8b05000000	              mov r8, qword [0x0400f8de]	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x400f8de	        0x498b5010	              mov rdx, qword [r8 + 0x10]	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x400f8e2	      0xe9f9fdffff	                           jmp 0x400f6e0	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
syn_cmd_enable	DO,0:functions,0:IF,0:WHILE,0:CALL,3:ELSE,0:SWITCH,0:FOR,0	34
0x40017e0	              0x53	                                push rbx	      3874	syntax.c	FUNCTION_58
0x40017e1	      0xbe00000000	                              mov esi, 0	      3875	syntax.c	FUNCTION_58	CALL_1
0x40017e6	          0x4889fb	                            mov rbx, rdi	      3874	syntax.c	FUNCTION_58
0x40017e9	      0xbf00000000	                              mov edi, 0	      3875	syntax.c	FUNCTION_58	CALL_1
0x40017ee	        0x4883ec70	                           sub rsp, 0x70	      3874	syntax.c	FUNCTION_58
0x40017f2	    0x64488b042528	                mov rax, qword fs:[0x28]	      3874	syntax.c	FUNCTION_58
0x40017fb	      0x4889442468	             mov qword [rsp + 0x68], rax	      3874	syntax.c	FUNCTION_58
0x4001800	            0x31c0	                            xor eax, eax	      3874	syntax.c	FUNCTION_58
0x4001802	      0xe800000000	                          call 0x4001807	      3875	syntax.c	FUNCTION_58	CALL_1
0x4001807	          0x488b3b	                    mov rdi, qword [rbx]	      3919	syntax.c	FUNCTION_62	CALL_1
0x400180a	      0xe800000000	                          call 0x400180f	      3919	syntax.c	FUNCTION_62	CALL_1
0x400180f	        0x48894308	                mov qword [rbx + 8], rax	      3919	syntax.c	FUNCTION_62	CALL_1
0x4001813	          0x8b4330	            mov eax, dword [rbx + 0x30] 	      3920	syntax.c	FUNCTION_62	IF_1
0x4001816	            0x85c0	                           test eax, eax	      3920	syntax.c	FUNCTION_62	IF_1
0x4001818	            0x752a	                           jne 0x4001844	      3920	syntax.c	FUNCTION_62	IF_1
0x400181a	      0x488d7c2403	                      lea rdi, [rsp + 3]	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x400181f	      0xb900000000	                              mov ecx, 0	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x4001824	      0xba00000000	                              mov edx, 0	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x4001829	      0xbe61000000	                           mov esi, 0x61	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x400182e	            0x31c0	                            xor eax, eax	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x4001830	    0xc70424736f20	               mov dword [rsp], 0x206f73	       110	string3.h	FUNCTION_176	CALL_3
0x4001837	      0xe800000000	                          call 0x400183c	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x400183c	          0x4889e7	                            mov rdi, rsp	      3924	syntax.c	FUNCTION_62	IF_1	CALL_4
0x400183f	      0xe800000000	                          call 0x4001844	      3924	syntax.c	FUNCTION_62	IF_1	CALL_4
0x4001844	      0xbe01000000	                              mov esi, 1	      3877	syntax.c	FUNCTION_58	CALL_3
0x4001849	      0xbf00000000	                              mov edi, 0	      3877	syntax.c	FUNCTION_58	CALL_3
0x400184e	      0xe800000000	                          call 0x4001853	      3877	syntax.c	FUNCTION_58	CALL_3
0x4001853	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      3878	syntax.c	FUNCTION_58
0x4001858	    0x644833042528	                xor rax, qword fs:[0x28]	      3878	syntax.c	FUNCTION_58
0x4001861	            0x7506	                           jne 0x4001869	      3878	syntax.c	FUNCTION_58
0x4001863	        0x4883c470	                           add rsp, 0x70	      3878	syntax.c	FUNCTION_58
0x4001867	              0x5b	                                 pop rbx	      3878	syntax.c	FUNCTION_58
0x4001868	              0xc3	                                     ret	      3878	syntax.c	FUNCTION_58
0x4001869	      0xe800000000	                          call 0x400186e	      3878	syntax.c	FUNCTION_58
set_context_in_highlight_cmd	DO,0:functions,0:IF,8:WHILE,0:CALL,11:ELSE,0:SWITCH,0:FOR,0	116
0x4013030	            0x4156	                                push r14	     10228	syntax.c	FUNCTION_164
0x4013032	            0x4155	                                push r13	     10228	syntax.c	FUNCTION_164
0x4013034	            0x4154	                                push r12	     10228	syntax.c	FUNCTION_164
0x4013036	              0x55	                                push rbp	     10228	syntax.c	FUNCTION_164
0x4013037	          0x4889fd	                            mov rbp, rdi	     10228	syntax.c	FUNCTION_164
0x401303a	              0x53	                                push rbx	     10228	syntax.c	FUNCTION_164
0x401303b	    0xc7070d000000	                    mov dword [rdi], 0xd	     10232	syntax.c	FUNCTION_164
0x4013041	        0x48897708	                mov qword [rdi + 8], rsi	     10233	syntax.c	FUNCTION_164
0x4013045	          0x803e00	                       cmp byte [rsi], 0	     10238	syntax.c	FUNCTION_164	IF_1
0x4013048	    0xc70500000000	               mov dword [0x04013052], 2	     10234	syntax.c	FUNCTION_164
0x4013052	    0xc70500000000	               mov dword [0x0401305c], 1	     10235	syntax.c	FUNCTION_164
0x401305c	            0x7512	                           jne 0x4013070	     10238	syntax.c	FUNCTION_164	IF_1
0x401305e	              0x5b	                                 pop rbx	     10271	syntax.c	FUNCTION_164
0x401305f	              0x5d	                                 pop rbp	     10271	syntax.c	FUNCTION_164
0x4013060	            0x415c	                                 pop r12	     10271	syntax.c	FUNCTION_164
0x4013062	            0x415d	                                 pop r13	     10271	syntax.c	FUNCTION_164
0x4013064	            0x415e	                                 pop r14	     10271	syntax.c	FUNCTION_164
0x4013066	              0xc3	                                     ret	     10271	syntax.c	FUNCTION_164
0x4013067	    0x660f1f840000	                    nop word [rax + rax]	     10271	syntax.c	FUNCTION_164
0x4013070	          0x4889f7	                            mov rdi, rsi	     10240	syntax.c	FUNCTION_164	IF_1	CALL_1
0x4013073	          0x4889f3	                            mov rbx, rsi	     10240	syntax.c	FUNCTION_164	IF_1	CALL_1
0x4013076	      0xe800000000	                          call 0x401307b	     10240	syntax.c	FUNCTION_164	IF_1	CALL_1
0x401307b	          0x803800	                       cmp byte [rax], 0	     10241	syntax.c	FUNCTION_164	IF_1	IF_2
0x401307e	          0x4989c4	                            mov r12, rax	     10240	syntax.c	FUNCTION_164	IF_1	CALL_1
0x4013081	            0x74db	                            je 0x401305e	     10241	syntax.c	FUNCTION_164	IF_1	IF_2
0x4013083	          0x4989c5	                            mov r13, rax	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x4013086	      0xb908000000	                              mov ecx, 8	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x401308b	    0xc70500000000	               mov dword [0x04013095], 0	     10243	syntax.c	FUNCTION_164	IF_1	IF_2
0x4013095	          0x4929dd	                            sub r13, rbx	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x4013098	      0xbe00000000	                              mov esi, 0	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x401309d	          0x4889df	                            mov rdi, rbx	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x40130a0	        0x4983fd08	                              cmp r13, 8	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x40130a4	        0x490f4ecd	                         cmovle rcx, r13	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x40130a8	          0x4839c9	                            cmp rcx, rcx	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x40130ab	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x40130ad	            0x7469	                            je 0x4013118	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x40130af	        0x807b0169	                cmp byte [rbx + 1], 0x69	     10253	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_5
0x40130b3	    0xc70500000000	               mov dword [0x040130bd], 0	     10252	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4
0x40130bd	     0xf84cd000000	                            je 0x4013190	     10253	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_5
0x40130c3	        0x4983fd05	                              cmp r13, 5	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x40130c7	      0xb905000000	                              mov ecx, 5	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x40130cc	      0xbe00000000	                              mov esi, 0	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x40130d1	        0x490f4ecd	                         cmovle rcx, r13	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x40130d5	          0x4889df	                            mov rdi, rbx	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x40130d8	          0x4839c9	                            cmp rcx, rcx	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x40130db	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x40130dd	            0x7471	                            je 0x4013150	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x40130df	        0x4983fd06	                              cmp r13, 6	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x40130e3	      0xb906000000	                              mov ecx, 6	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x40130e8	      0xbe00000000	                              mov esi, 0	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x40130ed	        0x490f4ecd	                         cmovle rcx, r13	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x40130f1	          0x4889df	                            mov rdi, rbx	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x40130f4	          0x4839c9	                            cmp rcx, rcx	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x40130f7	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x40130f9	            0x7455	                            je 0x4013150	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x40130fb	      0x41803c2400	                       cmp byte [r12], 0	     10266	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_8
0x4013100	     0xf8458ffffff	                            je 0x401305e	     10266	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_8
0x4013106	    0xc74500000000	                      mov dword [rbp], 0	     10267	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_8
0x401310d	      0xe94cffffff	                           jmp 0x401305e	     10271	syntax.c	FUNCTION_164
0x4013112	    0x660f1f440000	                    nop word [rax + rax]	     10271	syntax.c	FUNCTION_164
0x4013118	          0x4889c7	                            mov rdi, rax	     10246	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_3
0x401311b	      0xe800000000	                          call 0x4013120	     10246	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_3
0x4013120	        0x48894508	                mov qword [rbp + 8], rax	     10247	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3
0x4013124	          0x4889c7	                            mov rdi, rax	     10248	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_4
0x4013127	          0x4889c3	                            mov rbx, rax	     10246	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_3
0x401312a	      0xe800000000	                          call 0x401312f	     10248	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_4
0x401312f	          0x803800	                       cmp byte [rax], 0	     10250	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4
0x4013132	          0x4989c4	                            mov r12, rax	     10248	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_4
0x4013135	     0xf8423ffffff	                            je 0x401305e	     10250	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4
0x401313b	          0x4989c5	                            mov r13, rax	     10250	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4
0x401313e	          0x4929dd	                            sub r13, rbx	     10250	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4
0x4013141	      0xe969ffffff	                           jmp 0x40130af	     10250	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4
0x4013146	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     10250	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4
0x4013150	          0x4c89e7	                            mov rdi, r12	     10258	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_8
0x4013153	      0xe800000000	                          call 0x4013158	     10258	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_8
0x4013158	        0x48894508	                mov qword [rbp + 8], rax	     10258	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_8
0x401315c	          0x4889c7	                            mov rdi, rax	     10259	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_9
0x401315f	      0xe800000000	                          call 0x4013164	     10259	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_9
0x4013164	          0x803800	                       cmp byte [rax], 0	     10260	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7
0x4013167	     0xf84f1feffff	                            je 0x401305e	     10260	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7
0x401316d	          0x4889c7	                            mov rdi, rax	     10262	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7	CALL_10
0x4013170	      0xe800000000	                          call 0x4013175	     10262	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7	CALL_10
0x4013175	        0x48894508	                mov qword [rbp + 8], rax	     10262	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7	CALL_10
0x4013179	          0x4889c7	                            mov rdi, rax	     10263	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7	CALL_11
0x401317c	      0xe800000000	                          call 0x4013181	     10263	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7	CALL_11
0x4013181	          0x4989c4	                            mov r12, rax	     10263	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7	CALL_11
0x4013184	      0xe972ffffff	                           jmp 0x40130fb	     10263	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7	CALL_11
0x4013189	     0xf1f80000000	                         nop dword [rax]	     10263	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7	CALL_11
0x4013190	          0x803b4e	                    cmp byte [rbx], 0x4e	     10253	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_5
0x4013193	     0xf852affffff	                           jne 0x40130c3	     10253	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_5
0x4013199	    0x41bec2010000	                         mov r14d, 0x1c2	     10253	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_5
0x401319f	              0x90	                                     nop	     10253	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_5
0x40131a0	    0x8b3500000000	            mov esi, dword [0x040131a6] 	     10290	syntax.c	FUNCTION_166	CALL_1
0x40131a6	      0xbf00000000	                              mov edi, 0	     10290	syntax.c	FUNCTION_166	CALL_1
0x40131ab	      0xe800000000	                          call 0x40131b0	     10290	syntax.c	FUNCTION_166	CALL_1
0x40131b0	      0xe800000000	                          call 0x40131b5	     10291	syntax.c	FUNCTION_166	CALL_2
0x40131b5	      0xe800000000	                          call 0x40131ba	     10292	syntax.c	FUNCTION_166	CALL_3
0x40131ba	            0x31f6	                            xor esi, esi	     10293	syntax.c	FUNCTION_166	CALL_4
0x40131bc	          0x4c89f7	                            mov rdi, r14	     10293	syntax.c	FUNCTION_166	CALL_4
0x40131bf	        0x4983ee32	                           sub r14, 0x32	     10293	syntax.c	FUNCTION_166	CALL_4
0x40131c3	      0xe800000000	                          call 0x40131c8	     10293	syntax.c	FUNCTION_166	CALL_4
0x40131c8	        0x4983fece	             cmp r14, 0xffffffffffffffce	     10281	syntax.c	FUNCTION_165	FOR_1
0x40131cc	            0x75d2	                           jne 0x40131a0	     10281	syntax.c	FUNCTION_165	FOR_1
0x40131ce	    0x41be28000000	                          mov r14d, 0x28	     10281	syntax.c	FUNCTION_165	FOR_1
0x40131d4	         0xf1f4000	                         nop dword [rax]	     10281	syntax.c	FUNCTION_165	FOR_1
0x40131d8	            0x31f6	                            xor esi, esi	     10290	syntax.c	FUNCTION_166	CALL_1
0x40131da	      0xbf00000000	                              mov edi, 0	     10290	syntax.c	FUNCTION_166	CALL_1
0x40131df	      0xe800000000	                          call 0x40131e4	     10290	syntax.c	FUNCTION_166	CALL_1
0x40131e4	      0xe800000000	                          call 0x40131e9	     10291	syntax.c	FUNCTION_166	CALL_2
0x40131e9	      0xe800000000	                          call 0x40131ee	     10292	syntax.c	FUNCTION_166	CALL_3
0x40131ee	            0x31f6	                            xor esi, esi	     10293	syntax.c	FUNCTION_166	CALL_4
0x40131f0	      0xbf28000000	                           mov edi, 0x28	     10293	syntax.c	FUNCTION_166	CALL_4
0x40131f5	      0xe800000000	                          call 0x40131fa	     10293	syntax.c	FUNCTION_166	CALL_4
0x40131fa	        0x4183ee01	                             sub r14d, 1	     10283	syntax.c	FUNCTION_165	FOR_2
0x40131fe	            0x75d8	                           jne 0x40131d8	     10283	syntax.c	FUNCTION_165	FOR_2
0x4013200	      0xe9befeffff	                           jmp 0x40130c3	     10283	syntax.c	FUNCTION_165	FOR_2
syn_cmd_manual	DO,0:functions,0:IF,0:WHILE,0:CALL,1:ELSE,0:SWITCH,0:FOR,0	28
0x4001f90	              0x53	                                push rbx	      3901	syntax.c	FUNCTION_60
0x4001f91	          0x4889fb	                            mov rbx, rdi	      3901	syntax.c	FUNCTION_60
0x4001f94	        0x4883ec70	                           sub rsp, 0x70	      3901	syntax.c	FUNCTION_60
0x4001f98	          0x488b3f	                    mov rdi, qword [rdi]	      3919	syntax.c	FUNCTION_62	CALL_1
0x4001f9b	    0x64488b042528	                mov rax, qword fs:[0x28]	      3901	syntax.c	FUNCTION_60
0x4001fa4	      0x4889442468	             mov qword [rsp + 0x68], rax	      3901	syntax.c	FUNCTION_60
0x4001fa9	            0x31c0	                            xor eax, eax	      3901	syntax.c	FUNCTION_60
0x4001fab	      0xe800000000	                          call 0x4001fb0	      3919	syntax.c	FUNCTION_62	CALL_1
0x4001fb0	        0x48894308	                mov qword [rbx + 8], rax	      3919	syntax.c	FUNCTION_62	CALL_1
0x4001fb4	          0x8b4330	            mov eax, dword [rbx + 0x30] 	      3920	syntax.c	FUNCTION_62	IF_1
0x4001fb7	            0x85c0	                           test eax, eax	      3920	syntax.c	FUNCTION_62	IF_1
0x4001fb9	            0x752a	                           jne 0x4001fe5	      3920	syntax.c	FUNCTION_62	IF_1
0x4001fbb	      0x488d7c2403	                      lea rdi, [rsp + 3]	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x4001fc0	      0xb900000000	                              mov ecx, 0	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x4001fc5	      0xba00000000	                              mov edx, 0	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x4001fca	      0xbe61000000	                           mov esi, 0x61	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x4001fcf	            0x31c0	                            xor eax, eax	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x4001fd1	    0xc70424736f20	               mov dword [rsp], 0x206f73	       110	string3.h	FUNCTION_176	CALL_3
0x4001fd8	      0xe800000000	                          call 0x4001fdd	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x4001fdd	          0x4889e7	                            mov rdi, rsp	      3924	syntax.c	FUNCTION_62	IF_1	CALL_4
0x4001fe0	      0xe800000000	                          call 0x4001fe5	      3924	syntax.c	FUNCTION_62	IF_1	CALL_4
0x4001fe5	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      3903	syntax.c	FUNCTION_60
0x4001fea	    0x644833042528	                xor rax, qword fs:[0x28]	      3903	syntax.c	FUNCTION_60
0x4001ff3	            0x7506	                           jne 0x4001ffb	      3903	syntax.c	FUNCTION_60
0x4001ff5	        0x4883c470	                           add rsp, 0x70	      3903	syntax.c	FUNCTION_60
0x4001ff9	              0x5b	                                 pop rbx	      3903	syntax.c	FUNCTION_60
0x4001ffa	              0xc3	                                     ret	      3903	syntax.c	FUNCTION_60
0x4001ffb	      0xe800000000	                    call sym.syn_cmd_off	      3903	syntax.c	FUNCTION_60
ex_syntime	DO,0:functions,0:IF,4:WHILE,0:CALL,8:ELSE,4:SWITCH,0:FOR,0	290
0x400b620	            0x4157	                                push r15	      6675	syntax.c	FUNCTION_107
0x400b622	            0x4156	                                push r14	      6675	syntax.c	FUNCTION_107
0x400b624	            0x4155	                                push r13	      6675	syntax.c	FUNCTION_107
0x400b626	            0x4154	                                push r12	      6675	syntax.c	FUNCTION_107
0x400b628	              0x55	                                push rbp	      6675	syntax.c	FUNCTION_107
0x400b629	              0x53	                                push rbx	      6675	syntax.c	FUNCTION_107
0x400b62a	        0x4883ec48	                           sub rsp, 0x48	      6675	syntax.c	FUNCTION_107
0x400b62e	          0x488b1f	                    mov rbx, qword [rdi]	      6676	syntax.c	FUNCTION_107	IF_1	CALL_1
0x400b631	    0x64488b042528	                mov rax, qword fs:[0x28]	      6675	syntax.c	FUNCTION_107
0x400b63a	      0x4889442438	             mov qword [rsp + 0x38], rax	      6675	syntax.c	FUNCTION_107
0x400b63f	            0x31c0	                            xor eax, eax	      6675	syntax.c	FUNCTION_107
0x400b641	          0x803b6f	                    cmp byte [rbx], 0x6f	      6676	syntax.c	FUNCTION_107	IF_1	CALL_1
0x400b644	            0x744a	                            je 0x400b690	      6676	syntax.c	FUNCTION_107	IF_1	CALL_1
0x400b646	      0xbf00000000	                              mov edi, 0	      6680	syntax.c	FUNCTION_107	ELSE_2	IF_3	CALL_3
0x400b64b	      0xb906000000	                              mov ecx, 6	      6680	syntax.c	FUNCTION_107	ELSE_2	IF_3	CALL_3
0x400b650	          0x4889de	                            mov rsi, rbx	      6680	syntax.c	FUNCTION_107	ELSE_2	IF_3	CALL_3
0x400b653	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      6680	syntax.c	FUNCTION_107	ELSE_2	IF_3	CALL_3
0x400b655	     0xf84fd030000	                            je 0x400ba58	      6680	syntax.c	FUNCTION_107	ELSE_2	IF_3	CALL_3
0x400b65b	      0xbf00000000	                              mov edi, 0	      6682	syntax.c	FUNCTION_107	ELSE_3	IF_4	CALL_5
0x400b660	      0xb907000000	                              mov ecx, 7	      6682	syntax.c	FUNCTION_107	ELSE_3	IF_4	CALL_5
0x400b665	          0x4889de	                            mov rsi, rbx	      6682	syntax.c	FUNCTION_107	ELSE_3	IF_4	CALL_5
0x400b668	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      6682	syntax.c	FUNCTION_107	ELSE_3	IF_4	CALL_5
0x400b66a	     0xf8490000000	                            je 0x400b700	      6682	syntax.c	FUNCTION_107	ELSE_3	IF_4	CALL_5
0x400b670	            0x31ff	                            xor edi, edi	      6685	syntax.c	FUNCTION_107	CALL_8
0x400b672	      0xba05000000	                              mov edx, 5	      6685	syntax.c	FUNCTION_107	CALL_8
0x400b677	      0xbe00000000	                              mov esi, 0	      6685	syntax.c	FUNCTION_107	CALL_8
0x400b67c	      0xe800000000	                          call 0x400b681	      6685	syntax.c	FUNCTION_107	CALL_8
0x400b681	          0x4889de	                            mov rsi, rbx	      6685	syntax.c	FUNCTION_107	CALL_8
0x400b684	          0x4889c7	                            mov rdi, rax	      6685	syntax.c	FUNCTION_107	CALL_8
0x400b687	      0xe800000000	                          call 0x400b68c	      6685	syntax.c	FUNCTION_107	CALL_8
0x400b68c	            0xeb1a	                           jmp 0x400b6a8	      6686	syntax.c	FUNCTION_107
0x400b68e	            0x6690	                                     nop	      6686	syntax.c	FUNCTION_107
0x400b690	         0xfb64301	               movzx eax, byte [rbx + 1]	      6676	syntax.c	FUNCTION_107	IF_1	CALL_1
0x400b694	            0x3c6e	                            cmp al, 0x6e	      6676	syntax.c	FUNCTION_107	IF_1	CALL_1
0x400b696	            0x7538	                           jne 0x400b6d0	      6676	syntax.c	FUNCTION_107	IF_1	CALL_1
0x400b698	        0x807b0200	                   cmp byte [rbx + 2], 0	      6676	syntax.c	FUNCTION_107	IF_1	CALL_1
0x400b69c	            0x75a8	                           jne 0x400b646	      6676	syntax.c	FUNCTION_107	IF_1	CALL_1
0x400b69e	    0xc70500000000	               mov dword [0x0400b6a8], 1	      6677	syntax.c	FUNCTION_107	IF_1
0x400b6a8	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      6686	syntax.c	FUNCTION_107
0x400b6ad	    0x644833042528	                xor rax, qword fs:[0x28]	      6686	syntax.c	FUNCTION_107
0x400b6b6	     0xf8582040000	                           jne 0x400bb3e	      6686	syntax.c	FUNCTION_107
0x400b6bc	        0x4883c448	                           add rsp, 0x48	      6686	syntax.c	FUNCTION_107
0x400b6c0	              0x5b	                                 pop rbx	      6686	syntax.c	FUNCTION_107
0x400b6c1	              0x5d	                                 pop rbp	      6686	syntax.c	FUNCTION_107
0x400b6c2	            0x415c	                                 pop r12	      6686	syntax.c	FUNCTION_107
0x400b6c4	            0x415d	                                 pop r13	      6686	syntax.c	FUNCTION_107
0x400b6c6	            0x415e	                                 pop r14	      6686	syntax.c	FUNCTION_107
0x400b6c8	            0x415f	                                 pop r15	      6686	syntax.c	FUNCTION_107
0x400b6ca	              0xc3	                                     ret	      6686	syntax.c	FUNCTION_107
0x400b6cb	       0xf1f440000	                   nop dword [rax + rax]	      6686	syntax.c	FUNCTION_107
0x400b6d0	            0x3c66	                            cmp al, 0x66	      6678	syntax.c	FUNCTION_107	ELSE_1	IF_2	CALL_2
0x400b6d2	     0xf856effffff	                           jne 0x400b646	      6678	syntax.c	FUNCTION_107	ELSE_1	IF_2	CALL_2
0x400b6d8	        0x807b0266	                cmp byte [rbx + 2], 0x66	      6678	syntax.c	FUNCTION_107	ELSE_1	IF_2	CALL_2
0x400b6dc	     0xf8564ffffff	                           jne 0x400b646	      6678	syntax.c	FUNCTION_107	ELSE_1	IF_2	CALL_2
0x400b6e2	        0x807b0300	                   cmp byte [rbx + 3], 0	      6678	syntax.c	FUNCTION_107	ELSE_1	IF_2	CALL_2
0x400b6e6	     0xf855affffff	                           jne 0x400b646	      6678	syntax.c	FUNCTION_107	ELSE_1	IF_2	CALL_2
0x400b6ec	    0xc70500000000	               mov dword [0x0400b6f6], 0	      6679	syntax.c	FUNCTION_107	ELSE_1	IF_2
0x400b6f6	            0xebb0	                           jmp 0x400b6a8	      6679	syntax.c	FUNCTION_107	ELSE_1	IF_2
0x400b6f8	     0xf1f84000000	                   nop dword [rax + rax]	      6679	syntax.c	FUNCTION_107	ELSE_1	IF_2
0x400b700	    0x488b05000000	            mov rax, qword [0x0400b707] 	      6445	syntax.c	FUNCTION_97
0x400b707	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6445	syntax.c	FUNCTION_97
0x400b70b	    0x8bb860020000	           mov edi, dword [rax + 0x260] 	      6448	syntax.c	FUNCTION_97
0x400b711	            0x85ff	                           test edi, edi	      6448	syntax.c	FUNCTION_97
0x400b713	            0x750e	                           jne 0x400b723	      6448	syntax.c	FUNCTION_97
0x400b715	    0x8bb078020000	           mov esi, dword [rax + 0x278] 	      6446	syntax.c	FUNCTION_97
0x400b71b	            0x85f6	                           test esi, esi	      6446	syntax.c	FUNCTION_97
0x400b71d	     0xf84fd030000	                            je 0x400bb20	      6446	syntax.c	FUNCTION_97
0x400b723	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      6783	syntax.c	FUNCTION_112	CALL_4
0x400b728	      0xba32000000	                           mov edx, 0x32	      6783	syntax.c	FUNCTION_112	CALL_4
0x400b72d	      0xbe48000000	                           mov esi, 0x48	      6783	syntax.c	FUNCTION_112	CALL_4
0x400b732	          0x4531f6	                          xor r14d, r14d	      6785	syntax.c	FUNCTION_112	FOR_1
0x400b735	            0x31ed	                            xor ebp, ebp	      6785	syntax.c	FUNCTION_112	FOR_1
0x400b737	          0x4531ed	                          xor r13d, r13d	      6785	syntax.c	FUNCTION_112	FOR_1
0x400b73a	      0xe800000000	                          call 0x400b73f	      6783	syntax.c	FUNCTION_112	CALL_4
0x400b73f	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      6784	syntax.c	FUNCTION_112	CALL_5
0x400b744	      0xe800000000	                          call 0x400b749	      6784	syntax.c	FUNCTION_112	CALL_5
0x400b749	    0x488b05000000	            mov rax, qword [0x0400b750] 	      6785	syntax.c	FUNCTION_112	FOR_1
0x400b750	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6785	syntax.c	FUNCTION_112	FOR_1
0x400b754	    0x8b9060020000	           mov edx, dword [rax + 0x260] 	      6785	syntax.c	FUNCTION_112	FOR_1
0x400b75a	            0x85d2	                           test edx, edx	      6785	syntax.c	FUNCTION_112	FOR_1
0x400b75c	     0xf8eed000000	                           jle 0x400b84f	      6785	syntax.c	FUNCTION_112	FOR_1
0x400b762	    0x660f1f440000	                    nop word [rax + rax]	      6785	syntax.c	FUNCTION_112	FOR_1
0x400b768	          0x4c89f3	                            mov rbx, r14	      6787	syntax.c	FUNCTION_112	FOR_1
0x400b76b	    0x480398700200	            add rbx, qword [rax + 0x270]	      6787	syntax.c	FUNCTION_112	FOR_1
0x400b772	    0x4883bb900000	               cmp qword [rbx + 0x90], 0	      6788	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400b77a	     0xf8ebb000000	                           jle 0x400b83b	      6788	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400b780	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      6790	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_6
0x400b785	      0xbe01000000	                              mov esi, 1	      6790	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_6
0x400b78a	        0x4c8d7b70	                   lea r15, [rbx + 0x70]	      6793	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_7
0x400b78e	      0xe800000000	                          call 0x400b793	      6790	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_6
0x400b793	      0x4863442420	         movsxd rax, dword [rsp + 0x20] 	      6791	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400b798	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      6793	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_7
0x400b79d	          0x4c89fe	                            mov rsi, r15	      6793	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_7
0x400b7a0	        0x488d14c0	                  lea rdx, [rax + rax*8]	      6791	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400b7a4	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      6791	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400b7a9	        0x4c8d24d0	                  lea r12, [rax + rdx*8]	      6791	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400b7ad	        0x488b4370	            mov rax, qword [rbx + 0x70] 	      6792	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400b7b1	        0x488b5378	            mov rdx, qword [rbx + 0x78] 	      6792	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400b7b5	        0x49890424	                    mov qword [r12], rax	      6792	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400b7b9	      0x4989542408	                mov qword [r12 + 8], rdx	      6792	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400b7be	      0xe800000000	                          call 0x400b7c3	      6793	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_7
0x400b7c3	    0x488b83980000	            mov rax, qword [rbx + 0x98] 	      6795	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400b7ca	    0x488bb3900000	            mov rsi, qword [rbx + 0x90] 	      6794	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400b7d1	          0x4c89ff	                            mov rdi, r15	      6799	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_8
0x400b7d4	    0x488b93880000	            mov rdx, qword [rbx + 0x88] 	      6797	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400b7db	      0x4189442414	             mov dword [r12 + 0x14], eax	      6795	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400b7e0	    0x488b83800000	            mov rax, qword [rbx + 0x80] 	      6797	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400b7e7	             0x1f5	                            add ebp, esi	      6796	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400b7e9	      0x4989542420	             mov qword [r12 + 0x20], rdx	      6797	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400b7ee	      0x4189742410	             mov dword [r12 + 0x10], esi	      6794	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400b7f3	          0x4889e2	                            mov rdx, rsp	      6799	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_8
0x400b7f6	      0x4989442418	             mov qword [r12 + 0x18], rax	      6797	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400b7fb	      0xe800000000	                          call 0x400b800	      6799	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_8
0x400b800	        0x488b0424	                    mov rax, qword [rsp]	      6800	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400b804	      0x488b542408	                mov rdx, qword [rsp + 8]	      6800	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400b809	      0x8344242001	               add dword [rsp + 0x20], 1	      6804	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400b80e	      0x4989442428	             mov qword [r12 + 0x28], rax	      6800	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400b813	         0xfbf4354	           movsx eax, word [rbx + 0x54] 	      6802	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400b817	      0x4989542430	             mov qword [r12 + 0x30], rdx	      6800	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400b81c	      0x4189442438	             mov dword [r12 + 0x38], eax	      6802	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400b821	        0x488b4360	            mov rax, qword [rbx + 0x60] 	      6803	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400b825	      0x4989442440	             mov qword [r12 + 0x40], rax	      6803	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400b82a	    0x488b05000000	            mov rax, qword [0x0400b831] 	      6803	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400b831	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6803	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400b835	    0x8b9060020000	           mov edx, dword [rax + 0x260] 	      6803	syntax.c	FUNCTION_112	FOR_1	IF_2
0x400b83b	        0x4183c501	                             add r13d, 1	      6785	syntax.c	FUNCTION_112	FOR_1
0x400b83f	    0x4981c6a00000	                           add r14, 0xa0	      6785	syntax.c	FUNCTION_112	FOR_1
0x400b846	          0x4139d5	                           cmp r13d, edx	      6785	syntax.c	FUNCTION_112	FOR_1
0x400b849	     0xf8c19ffffff	                            jl 0x400b768	      6785	syntax.c	FUNCTION_112	FOR_1
0x400b84f	      0x4863742420	         movsxd rsi, dword [rsp + 0x20] 	      6810	syntax.c	FUNCTION_112	IF_3
0x400b854	          0x83fe01	                              cmp esi, 1	      6810	syntax.c	FUNCTION_112	IF_3
0x400b857	            0x7e14	                           jle 0x400b86d	      6810	syntax.c	FUNCTION_112	IF_3
0x400b859	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      6811	syntax.c	FUNCTION_112	IF_3	CALL_9
0x400b85e	      0xb900000000	                              mov ecx, 0	      6811	syntax.c	FUNCTION_112	IF_3	CALL_9
0x400b863	      0xba48000000	                           mov edx, 0x48	      6811	syntax.c	FUNCTION_112	IF_3	CALL_9
0x400b868	      0xe800000000	                          call 0x400b86d	      6811	syntax.c	FUNCTION_112	IF_3	CALL_9
0x400b86d	      0xba05000000	                              mov edx, 5	      6814	syntax.c	FUNCTION_112	CALL_11
0x400b872	      0xbe00000000	                              mov esi, 0	      6814	syntax.c	FUNCTION_112	CALL_11
0x400b877	            0x31ff	                            xor edi, edi	      6814	syntax.c	FUNCTION_112	CALL_11
0x400b879	      0xe800000000	                          call 0x400b87e	      6814	syntax.c	FUNCTION_112	CALL_11
0x400b87e	          0x4889c7	                            mov rdi, rax	      6814	syntax.c	FUNCTION_112	CALL_11
0x400b881	      0xe800000000	                          call 0x400b886	      6814	syntax.c	FUNCTION_112	CALL_11
0x400b886	      0xbf00000000	                              mov edi, 0	      6815	syntax.c	FUNCTION_112	CALL_12
0x400b88b	      0xe800000000	                          call 0x400b890	      6815	syntax.c	FUNCTION_112	CALL_12
0x400b890	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	      6816	syntax.c	FUNCTION_112	FOR_2
0x400b894	            0x85c9	                           test ecx, ecx	      6816	syntax.c	FUNCTION_112	FOR_2
0x400b896	     0xf8e64010000	                           jle 0x400ba00	      6816	syntax.c	FUNCTION_112	FOR_2
0x400b89c	    0x8b0500000000	            mov eax, dword [0x0400b8a2] 	      6816	syntax.c	FUNCTION_112	FOR_2
0x400b8a2	            0x85c0	                           test eax, eax	      6816	syntax.c	FUNCTION_112	FOR_2
0x400b8a4	     0xf8556010000	                           jne 0x400ba00	      6816	syntax.c	FUNCTION_112	FOR_2
0x400b8aa	          0x4531f6	                          xor r14d, r14d	      6816	syntax.c	FUNCTION_112	FOR_2
0x400b8ad	          0x4531ed	                          xor r13d, r13d	      6816	syntax.c	FUNCTION_112	FOR_2
0x400b8b0	            0xeb18	                           jmp 0x400b8ca	      6816	syntax.c	FUNCTION_112	FOR_2
0x400b8b2	    0x660f1f440000	                    nop word [rax + rax]	      6816	syntax.c	FUNCTION_112	FOR_2
0x400b8b8	    0x8b0500000000	            mov eax, dword [0x0400b8be] 	      6816	syntax.c	FUNCTION_112	FOR_2
0x400b8be	        0x4983c648	                           add r14, 0x48	      6816	syntax.c	FUNCTION_112	FOR_2
0x400b8c2	            0x85c0	                           test eax, eax	      6816	syntax.c	FUNCTION_112	FOR_2
0x400b8c4	     0xf8536010000	                           jne 0x400ba00	      6816	syntax.c	FUNCTION_112	FOR_2
0x400b8ca	          0x4c89f3	                            mov rbx, r14	      6818	syntax.c	FUNCTION_112	FOR_2
0x400b8cd	      0x48035c2430	             add rbx, qword [rsp + 0x30]	      6818	syntax.c	FUNCTION_112	FOR_2
0x400b8d2	          0x4889df	                            mov rdi, rbx	      6820	syntax.c	FUNCTION_112	FOR_2	CALL_14
0x400b8d5	      0xe800000000	                          call 0x400b8da	      6820	syntax.c	FUNCTION_112	FOR_2	CALL_14
0x400b8da	          0x4889c7	                            mov rdi, rax	      6820	syntax.c	FUNCTION_112	FOR_2	CALL_14
0x400b8dd	      0xe800000000	                          call 0x400b8e2	      6820	syntax.c	FUNCTION_112	FOR_2	CALL_14
0x400b8e2	      0xbf00000000	                              mov edi, 0	      6821	syntax.c	FUNCTION_112	FOR_2	CALL_15
0x400b8e7	      0xe800000000	                          call 0x400b8ec	      6821	syntax.c	FUNCTION_112	FOR_2	CALL_15
0x400b8ec	      0xbf0d000000	                            mov edi, 0xd	      6822	syntax.c	FUNCTION_112	FOR_2	CALL_16
0x400b8f1	      0xe800000000	                          call 0x400b8f6	      6822	syntax.c	FUNCTION_112	FOR_2	CALL_16
0x400b8f6	        0x48637b10	         movsxd rdi, dword [rbx + 0x10] 	      6823	syntax.c	FUNCTION_112	FOR_2	CALL_17
0x400b8fa	      0xe800000000	                          call 0x400b8ff	      6823	syntax.c	FUNCTION_112	FOR_2	CALL_17
0x400b8ff	      0xbf00000000	                              mov edi, 0	      6824	syntax.c	FUNCTION_112	FOR_2	CALL_18
0x400b904	      0xe800000000	                          call 0x400b909	      6824	syntax.c	FUNCTION_112	FOR_2	CALL_18
0x400b909	      0xbf14000000	                           mov edi, 0x14	      6825	syntax.c	FUNCTION_112	FOR_2	CALL_19
0x400b90e	      0xe800000000	                          call 0x400b913	      6825	syntax.c	FUNCTION_112	FOR_2	CALL_19
0x400b913	        0x48637b14	         movsxd rdi, dword [rbx + 0x14] 	      6826	syntax.c	FUNCTION_112	FOR_2	CALL_20
0x400b917	      0xe800000000	                          call 0x400b91c	      6826	syntax.c	FUNCTION_112	FOR_2	CALL_20
0x400b91c	      0xbf00000000	                              mov edi, 0	      6827	syntax.c	FUNCTION_112	FOR_2	CALL_21
0x400b921	      0xe800000000	                          call 0x400b926	      6827	syntax.c	FUNCTION_112	FOR_2	CALL_21
0x400b926	      0xbf1a000000	                           mov edi, 0x1a	      6828	syntax.c	FUNCTION_112	FOR_2	CALL_22
0x400b92b	      0xe800000000	                          call 0x400b930	      6828	syntax.c	FUNCTION_112	FOR_2	CALL_22
0x400b930	        0x488d7b18	                   lea rdi, [rbx + 0x18]	      6829	syntax.c	FUNCTION_112	FOR_2	CALL_24
0x400b934	      0xe800000000	                          call 0x400b939	      6829	syntax.c	FUNCTION_112	FOR_2	CALL_24
0x400b939	          0x4889c7	                            mov rdi, rax	      6829	syntax.c	FUNCTION_112	FOR_2	CALL_24
0x400b93c	      0xe800000000	                          call 0x400b941	      6829	syntax.c	FUNCTION_112	FOR_2	CALL_24
0x400b941	      0xbf00000000	                              mov edi, 0	      6830	syntax.c	FUNCTION_112	FOR_2	CALL_25
0x400b946	      0xe800000000	                          call 0x400b94b	      6830	syntax.c	FUNCTION_112	FOR_2	CALL_25
0x400b94b	      0xbf26000000	                           mov edi, 0x26	      6831	syntax.c	FUNCTION_112	FOR_2	CALL_26
0x400b950	      0xe800000000	                          call 0x400b955	      6831	syntax.c	FUNCTION_112	FOR_2	CALL_26
0x400b955	        0x488d7b28	                   lea rdi, [rbx + 0x28]	      6833	syntax.c	FUNCTION_112	FOR_2	CALL_28
0x400b959	      0xe800000000	                          call 0x400b95e	      6833	syntax.c	FUNCTION_112	FOR_2	CALL_28
0x400b95e	          0x4889c7	                            mov rdi, rax	      6833	syntax.c	FUNCTION_112	FOR_2	CALL_28
0x400b961	      0xe800000000	                          call 0x400b966	      6833	syntax.c	FUNCTION_112	FOR_2	CALL_28
0x400b966	      0xbf00000000	                              mov edi, 0	      6834	syntax.c	FUNCTION_112	FOR_2	CALL_29
0x400b96b	      0xe800000000	                          call 0x400b970	      6834	syntax.c	FUNCTION_112	FOR_2	CALL_29
0x400b970	      0xbf32000000	                           mov edi, 0x32	      6836	syntax.c	FUNCTION_112	FOR_2	CALL_30
0x400b975	      0xe800000000	                          call 0x400b97a	      6836	syntax.c	FUNCTION_112	FOR_2	CALL_30
0x400b97a	        0x48634338	         movsxd rax, dword [rbx + 0x38] 	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_31
0x400b97e	        0x488d14c0	                  lea rdx, [rax + rax*8]	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_31
0x400b982	        0x488d0450	                  lea rax, [rax + rdx*2]	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_31
0x400b986	    0x488b15000000	            mov rdx, qword [0x0400b98d] 	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_31
0x400b98d	        0x488d04c2	                  lea rax, [rdx + rax*8]	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_31
0x400b991	    0x488bb868ffff	             mov rdi, qword [rax - 0x98]	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_31
0x400b998	      0xe800000000	                          call 0x400b99d	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_31
0x400b99d	      0xbf00000000	                              mov edi, 0	      6838	syntax.c	FUNCTION_112	FOR_2	CALL_32
0x400b9a2	      0xe800000000	                          call 0x400b9a7	      6838	syntax.c	FUNCTION_112	FOR_2	CALL_32
0x400b9a7	      0xbf45000000	                           mov edi, 0x45	      6840	syntax.c	FUNCTION_112	FOR_2	CALL_33
0x400b9ac	      0xe800000000	                          call 0x400b9b1	      6840	syntax.c	FUNCTION_112	FOR_2	CALL_33
0x400b9b1	    0x488b15000000	            mov rdx, qword [0x0400b9b8] 	      6841	syntax.c	FUNCTION_112	FOR_2	IF_4
0x400b9b8	        0x488b5b40	            mov rbx, qword [rbx + 0x40] 	      6845	syntax.c	FUNCTION_112	FOR_2	IF_5	CALL_34
0x400b9bc	      0xbe14000000	                           mov esi, 0x14	      6844	syntax.c	FUNCTION_112	FOR_2	ELSE_1
0x400b9c1	          0x8d42ba	                   lea eax, [rdx - 0x46]	      6844	syntax.c	FUNCTION_112	FOR_2	ELSE_1
0x400b9c4	        0x4883fa50	                           cmp rdx, 0x50	      6844	syntax.c	FUNCTION_112	FOR_2	ELSE_1
0x400b9c8	          0x4889df	                            mov rdi, rbx	      6845	syntax.c	FUNCTION_112	FOR_2	IF_5	CALL_34
0x400b9cb	           0xf4df0	                         cmovge esi, eax	      6844	syntax.c	FUNCTION_112	FOR_2	ELSE_1
0x400b9ce	          0x4189f4	                           mov r12d, esi	      6844	syntax.c	FUNCTION_112	FOR_2	ELSE_1
0x400b9d1	      0xe800000000	                          call 0x400b9d6	      6845	syntax.c	FUNCTION_112	FOR_2	IF_5	CALL_34
0x400b9d6	          0x4489e6	                           mov esi, r12d	      6847	syntax.c	FUNCTION_112	FOR_2	CALL_36
0x400b9d9	          0x4439e0	                           cmp eax, r12d	      6847	syntax.c	FUNCTION_112	FOR_2	CALL_36
0x400b9dc	          0x4889df	                            mov rdi, rbx	      6847	syntax.c	FUNCTION_112	FOR_2	CALL_36
0x400b9df	           0xf4ef0	                         cmovle esi, eax	      6847	syntax.c	FUNCTION_112	FOR_2	CALL_36
0x400b9e2	        0x4183c501	                             add r13d, 1	      6816	syntax.c	FUNCTION_112	FOR_2
0x400b9e6	      0xe800000000	                          call 0x400b9eb	      6847	syntax.c	FUNCTION_112	FOR_2	CALL_36
0x400b9eb	      0xbf00000000	                              mov edi, 0	      6848	syntax.c	FUNCTION_112	FOR_2	CALL_37
0x400b9f0	      0xe800000000	                          call 0x400b9f5	      6848	syntax.c	FUNCTION_112	FOR_2	CALL_37
0x400b9f5	      0x443b6c2420	           cmp r13d, dword [rsp + 0x20] 	      6816	syntax.c	FUNCTION_112	FOR_2
0x400b9fa	     0xf8cb8feffff	                            jl 0x400b8b8	      6816	syntax.c	FUNCTION_112	FOR_2
0x400ba00	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      6850	syntax.c	FUNCTION_112	CALL_38
0x400ba05	      0xe800000000	                          call 0x400ba0a	      6850	syntax.c	FUNCTION_112	CALL_38
0x400ba0a	    0x8b0500000000	            mov eax, dword [0x0400ba10] 	      6851	syntax.c	FUNCTION_112	IF_6
0x400ba10	            0x85c0	                           test eax, eax	      6851	syntax.c	FUNCTION_112	IF_6
0x400ba12	     0xf8590fcffff	                           jne 0x400b6a8	      6851	syntax.c	FUNCTION_112	IF_6
0x400ba18	      0xbf00000000	                              mov edi, 0	      6853	syntax.c	FUNCTION_112	IF_6	CALL_39
0x400ba1d	      0xe800000000	                          call 0x400ba22	      6853	syntax.c	FUNCTION_112	IF_6	CALL_39
0x400ba22	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      6854	syntax.c	FUNCTION_112	IF_6	CALL_41
0x400ba27	      0xe800000000	                          call 0x400ba2c	      6854	syntax.c	FUNCTION_112	IF_6	CALL_41
0x400ba2c	          0x4889c7	                            mov rdi, rax	      6854	syntax.c	FUNCTION_112	IF_6	CALL_41
0x400ba2f	      0xe800000000	                          call 0x400ba34	      6854	syntax.c	FUNCTION_112	IF_6	CALL_41
0x400ba34	      0xbf0d000000	                            mov edi, 0xd	      6855	syntax.c	FUNCTION_112	IF_6	CALL_42
0x400ba39	      0xe800000000	                          call 0x400ba3e	      6855	syntax.c	FUNCTION_112	IF_6	CALL_42
0x400ba3e	          0x4863fd	                         movsxd rdi, ebp	      6856	syntax.c	FUNCTION_112	IF_6	CALL_43
0x400ba41	      0xe800000000	                          call 0x400ba46	      6856	syntax.c	FUNCTION_112	IF_6	CALL_43
0x400ba46	      0xbf00000000	                              mov edi, 0	      6857	syntax.c	FUNCTION_112	IF_6	CALL_44
0x400ba4b	      0xe800000000	                          call 0x400ba50	      6857	syntax.c	FUNCTION_112	IF_6	CALL_44
0x400ba50	      0xe953fcffff	                           jmp 0x400b6a8	      6857	syntax.c	FUNCTION_112	IF_6	CALL_44
0x400ba55	           0xf1f00	                         nop dword [rax]	      6857	syntax.c	FUNCTION_112	IF_6	CALL_44
0x400ba58	    0x488b05000000	            mov rax, qword [0x0400ba5f] 	      6445	syntax.c	FUNCTION_97
0x400ba5f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6445	syntax.c	FUNCTION_97
0x400ba63	    0x83b860020000	              cmp dword [rax + 0x260], 0	      6448	syntax.c	FUNCTION_97
0x400ba6a	            0x754c	                           jne 0x400bab8	      6448	syntax.c	FUNCTION_97
0x400ba6c	    0x448b80780200	           mov r8d, dword [rax + 0x278] 	      6446	syntax.c	FUNCTION_97
0x400ba73	          0x4585c0	                           test r8d, r8d	      6446	syntax.c	FUNCTION_97
0x400ba76	     0xf852cfcffff	                           jne 0x400b6a8	      6446	syntax.c	FUNCTION_97
0x400ba7c	      0x4883780800	                  cmp qword [rax + 8], 0	      6447	syntax.c	FUNCTION_97
0x400ba81	     0xf8521fcffff	                           jne 0x400b6a8	      6447	syntax.c	FUNCTION_97
0x400ba87	    0x4883b8300100	              cmp qword [rax + 0x130], 0	      6448	syntax.c	FUNCTION_97
0x400ba8f	     0xf8513fcffff	                           jne 0x400b6a8	      6448	syntax.c	FUNCTION_97
0x400ba95	            0x31ff	                            xor edi, edi	      6779	syntax.c	FUNCTION_112	IF_1	CALL_3
0x400ba97	      0xba05000000	                              mov edx, 5	      6779	syntax.c	FUNCTION_112	IF_1	CALL_3
0x400ba9c	      0xbe00000000	                              mov esi, 0	      6779	syntax.c	FUNCTION_112	IF_1	CALL_3
0x400baa1	      0xe800000000	                          call 0x400baa6	      6779	syntax.c	FUNCTION_112	IF_1	CALL_3
0x400baa6	          0x4889c7	                            mov rdi, rax	      6779	syntax.c	FUNCTION_112	IF_1	CALL_3
0x400baa9	      0xe800000000	                          call 0x400baae	      6779	syntax.c	FUNCTION_112	IF_1	CALL_3
0x400baae	      0xe9f5fbffff	                           jmp 0x400b6a8	      6779	syntax.c	FUNCTION_112	IF_1	CALL_3
0x400bab3	       0xf1f440000	                   nop dword [rax + rax]	      6779	syntax.c	FUNCTION_112	IF_1	CALL_3
0x400bab8	     0xf8eeafbffff	                           jle 0x400b6a8	      6711	syntax.c	FUNCTION_109	FOR_1
0x400babe	          0x4531e4	                          xor r12d, r12d	      6711	syntax.c	FUNCTION_109	FOR_1
0x400bac1	            0x31ed	                            xor ebp, ebp	      6711	syntax.c	FUNCTION_109	FOR_1
0x400bac3	       0xf1f440000	                   nop dword [rax + rax]	      6711	syntax.c	FUNCTION_109	FOR_1
0x400bac8	          0x4c89e3	                            mov rbx, r12	      6713	syntax.c	FUNCTION_109	FOR_1
0x400bacb	    0x480398700200	            add rbx, qword [rax + 0x270]	      6713	syntax.c	FUNCTION_109	FOR_1
0x400bad2	          0x83c501	                              add ebp, 1	      6711	syntax.c	FUNCTION_109	FOR_1
0x400bad5	    0x4981c4a00000	                           add r12, 0xa0	      6711	syntax.c	FUNCTION_109	FOR_1
0x400badc	        0x488d7b70	                   lea rdi, [rbx + 0x70]	      6691	syntax.c	FUNCTION_108	CALL_1
0x400bae0	      0xe800000000	                          call 0x400bae5	      6691	syntax.c	FUNCTION_108	CALL_1
0x400bae5	    0x488dbb800000	                   lea rdi, [rbx + 0x80]	      6692	syntax.c	FUNCTION_108	CALL_2
0x400baec	      0xe800000000	                          call 0x400baf1	      6692	syntax.c	FUNCTION_108	CALL_2
0x400baf1	    0x488b05000000	            mov rax, qword [0x0400baf8] 	      6711	syntax.c	FUNCTION_109	FOR_1
0x400baf8	    0x48c783900000	               mov qword [rbx + 0x90], 0	      6693	syntax.c	FUNCTION_108
0x400bb03	    0x48c783980000	               mov qword [rbx + 0x98], 0	      6694	syntax.c	FUNCTION_108
0x400bb0e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6711	syntax.c	FUNCTION_109	FOR_1
0x400bb12	    0x3ba860020000	           cmp ebp, dword [rax + 0x260] 	      6711	syntax.c	FUNCTION_109	FOR_1
0x400bb18	            0x7cae	                            jl 0x400bac8	      6711	syntax.c	FUNCTION_109	FOR_1
0x400bb1a	      0xe989fbffff	                           jmp 0x400b6a8	      6711	syntax.c	FUNCTION_109	FOR_1
0x400bb1f	              0x90	                                     nop	      6711	syntax.c	FUNCTION_109	FOR_1
0x400bb20	      0x4883780800	                  cmp qword [rax + 8], 0	      6447	syntax.c	FUNCTION_97
0x400bb25	     0xf85f8fbffff	                           jne 0x400b723	      6447	syntax.c	FUNCTION_97
0x400bb2b	    0x4883b8300100	              cmp qword [rax + 0x130], 0	      6448	syntax.c	FUNCTION_97
0x400bb33	     0xf85eafbffff	                           jne 0x400b723	      6448	syntax.c	FUNCTION_97
0x400bb39	      0xe957ffffff	                           jmp 0x400ba95	      6448	syntax.c	FUNCTION_97
0x400bb3e	      0xe800000000	                          call 0x400bb43	      6686	syntax.c	FUNCTION_107
reset_synblock	DO,0:functions,0:IF,1:WHILE,0:CALL,2:ELSE,0:SWITCH,0:FOR,0	16
0x400af00	          0x4889f8	                            mov rax, rdi	      3665	syntax.c	FUNCTION_50
0x400af03	        0x488b7f10	            mov rdi, qword [rdi + 0x10] 	      3666	syntax.c	FUNCTION_50	IF_1
0x400af07	        0x488b4808	                mov rcx, qword [rax + 8]	      3666	syntax.c	FUNCTION_50	IF_1
0x400af0b	    0x488d91681700	                 lea rdx, [rcx + 0x1768]	      3666	syntax.c	FUNCTION_50	IF_1
0x400af12	          0x4839d7	                            cmp rdi, rdx	      3666	syntax.c	FUNCTION_50	IF_1
0x400af15	            0x7421	                            je 0x400af38	      3666	syntax.c	FUNCTION_50	IF_1
0x400af17	              0x53	                                push rbx	      3665	syntax.c	FUNCTION_50
0x400af18	          0x4889c3	                            mov rbx, rax	      3665	syntax.c	FUNCTION_50
0x400af1b	      0xe800000000	                          call 0x400af20	      3668	syntax.c	FUNCTION_50	IF_1	CALL_1
0x400af20	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3669	syntax.c	FUNCTION_50	IF_1	CALL_2
0x400af24	      0xe800000000	                          call 0x400af29	      3669	syntax.c	FUNCTION_50	IF_1	CALL_2
0x400af29	        0x488b4308	                mov rax, qword [rbx + 8]	      3670	syntax.c	FUNCTION_50	IF_1
0x400af2d	    0x480568170000	                         add rax, 0x1768	      3670	syntax.c	FUNCTION_50	IF_1
0x400af33	        0x48894310	             mov qword [rbx + 0x10], rax	      3670	syntax.c	FUNCTION_50	IF_1
0x400af37	              0x5b	                                 pop rbx	      3672	syntax.c	FUNCTION_50
0x400af38	            0xf3c3	                                     ret	      3672	syntax.c	FUNCTION_50
syn_id2colors	DO,0:functions,0:IF,0:WHILE,0:CALL,1:ELSE,0:SWITCH,0:FOR,0	34
0x4010a00	    0x448b05000000	            mov r8d, dword [0x04010a07] 	      9879	syntax.c	FUNCTION_159	IF_1
0x4010a07	          0x4439c7	                            cmp edi, r8d	      9879	syntax.c	FUNCTION_159	IF_1
0x4010a0a	            0x7f54	                            jg 0x4010a60	      9879	syntax.c	FUNCTION_159	IF_1
0x4010a0c	            0x85ff	                           test edi, edi	      9879	syntax.c	FUNCTION_159	IF_1
0x4010a0e	    0x4c8b0d000000	              mov r9, qword [0x04010a15]	      9879	syntax.c	FUNCTION_159	IF_1
0x4010a15	      0xb864000000	                           mov eax, 0x64	      9879	syntax.c	FUNCTION_159	IF_1
0x4010a1a	            0x7f0d	                            jg 0x4010a29	      9879	syntax.c	FUNCTION_159	IF_1
0x4010a1c	            0xeb42	                           jmp 0x4010a60	      9879	syntax.c	FUNCTION_159	IF_1
0x4010a1e	            0x6690	                                     nop	      9879	syntax.c	FUNCTION_159	IF_1
0x4010a20	            0x85ff	                           test edi, edi	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4010a22	            0x7424	                            je 0x4010a48	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4010a24	          0x83e801	                              sub eax, 1	      9886	syntax.c	FUNCTION_159	FOR_1
0x4010a27	            0x7447	                            je 0x4010a70	      9886	syntax.c	FUNCTION_159	FOR_1
0x4010a29	          0x4863ff	                         movsxd rdi, edi	      9888	syntax.c	FUNCTION_159	FOR_1
0x4010a2c	        0x488d0cff	                  lea rcx, [rdi + rdi*8]	      9888	syntax.c	FUNCTION_159	FOR_1
0x4010a30	        0x488d0c4f	                  lea rcx, [rdi + rcx*2]	      9888	syntax.c	FUNCTION_159	FOR_1
0x4010a34	    0x498d8cc968ff	            lea rcx, [r9 + rcx*8 - 0x98]	      9888	syntax.c	FUNCTION_159	FOR_1
0x4010a3c	    0x4863b9880000	         movsxd rdi, dword [rcx + 0x88] 	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4010a43	          0x4139f8	                            cmp r8d, edi	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4010a46	            0x7dd8	                           jge 0x4010a20	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4010a48	        0x488b4140	            mov rax, qword [rcx + 0x40] 	      9851	syntax.c	ELSE_2	FUNCTION_157
0x4010a4c	          0x488906	                    mov qword [rsi], rax	      9851	syntax.c	ELSE_2	FUNCTION_157
0x4010a4f	        0x488b4148	            mov rax, qword [rcx + 0x48] 	      9852	syntax.c	ELSE_2	FUNCTION_157
0x4010a53	          0x488902	                    mov qword [rdx], rax	      9852	syntax.c	ELSE_2	FUNCTION_157
0x4010a56	          0x8b416c	            mov eax, dword [rcx + 0x6c] 	      9853	syntax.c	ELSE_2	FUNCTION_157
0x4010a59	              0xc3	                                     ret	      9854	syntax.c	ELSE_2	FUNCTION_157
0x4010a5a	    0x660f1f440000	                    nop word [rax + rax]	      9854	syntax.c	ELSE_2	FUNCTION_157
0x4010a60	    0x488b05000000	            mov rax, qword [0x04010a67] 	      9854	syntax.c	ELSE_2	FUNCTION_157
0x4010a67	    0x488d8868ffff	                   lea rcx, [rax - 0x98]	      9854	syntax.c	ELSE_2	FUNCTION_157
0x4010a6e	            0xebd8	                           jmp 0x4010a48	      9854	syntax.c	ELSE_2	FUNCTION_157
0x4010a70	        0x488d04ff	                  lea rax, [rdi + rdi*8]	      9854	syntax.c	ELSE_2	FUNCTION_157
0x4010a74	        0x488d0447	                  lea rax, [rdi + rax*2]	      9854	syntax.c	ELSE_2	FUNCTION_157
0x4010a78	    0x498d8cc168ff	            lea rcx, [r9 + rax*8 - 0x98]	      9854	syntax.c	ELSE_2	FUNCTION_157
0x4010a80	            0xebc6	                           jmp 0x4010a48	      9854	syntax.c	ELSE_2	FUNCTION_157
highlight_gui_started	DO,0:functions,0:IF,1:WHILE,0:CALL,3:ELSE,0:SWITCH,0:FOR,1	91
0x40112a0	    0x8b3500000000	            mov esi, dword [0x040112a6] 	      9909	syntax.c	FUNCTION_160	IF_1
0x40112a6	            0x4156	                                push r14	      9905	syntax.c	FUNCTION_160
0x40112a8	            0x4155	                                push r13	      9905	syntax.c	FUNCTION_160
0x40112aa	            0x4154	                                push r12	      9905	syntax.c	FUNCTION_160
0x40112ac	              0x55	                                push rbp	      9905	syntax.c	FUNCTION_160
0x40112ad	              0x53	                                push rbx	      9905	syntax.c	FUNCTION_160
0x40112ae	            0x85f6	                           test esi, esi	      9909	syntax.c	FUNCTION_160	IF_1
0x40112b0	     0xf8512010000	                           jne 0x40113c8	      9909	syntax.c	FUNCTION_160	IF_1
0x40112b6	    0x8b0d00000000	            mov ecx, dword [0x040112bc] 	      9909	syntax.c	FUNCTION_160	IF_1
0x40112bc	            0x85c9	                           test ecx, ecx	      9909	syntax.c	FUNCTION_160	IF_1
0x40112be	     0xf8504010000	                           jne 0x40113c8	      9909	syntax.c	FUNCTION_160	IF_1
0x40112c4	    0x8b1500000000	            mov edx, dword [0x040112ca] 	      9912	syntax.c	FUNCTION_160	FOR_1
0x40112ca	            0x31ed	                            xor ebp, ebp	      9912	syntax.c	FUNCTION_160	FOR_1
0x40112cc	          0x4531e4	                          xor r12d, r12d	      9912	syntax.c	FUNCTION_160	FOR_1
0x40112cf	            0x85d2	                           test edx, edx	      9912	syntax.c	FUNCTION_160	FOR_1
0x40112d1	     0xf8fcc000000	                            jg 0x40113a3	      9912	syntax.c	FUNCTION_160	FOR_1
0x40112d7	      0xe914010000	                           jmp 0x40113f0	      9912	syntax.c	FUNCTION_160	FOR_1
0x40112dc	         0xf1f4000	                         nop dword [rax]	      9912	syntax.c	FUNCTION_160	FOR_1
0x40112e0	        0x4c8b6b60	            mov r13, qword [rbx + 0x60] 	      9930	syntax.c	FUNCTION_161	IF_1	IF_2
0x40112e4	          0x4d85ed	                           test r13, r13	      9930	syntax.c	FUNCTION_161	IF_1	IF_2
0x40112e7	     0xf84ce000000	                            je 0x40113bb	      9930	syntax.c	FUNCTION_161	IF_1	IF_2
0x40112ed	        0x488b7b58	            mov rdi, qword [rbx + 0x58] 	      8693	syntax.c	FUNCTION_129	ELSE_1	CALL_6
0x40112f1	          0x4989ee	                            mov r14, rbp	      8694	syntax.c	FUNCTION_129	ELSE_1	CALL_7
0x40112f4	      0xe800000000	                          call 0x40112f9	      8693	syntax.c	FUNCTION_129	ELSE_1	CALL_6
0x40112f9	      0xbf00000000	                              mov edi, 0	      8600	syntax.c	FUNCTION_127	IF_1	CALL_1
0x40112fe	      0xb905000000	                              mov ecx, 5	      8600	syntax.c	FUNCTION_127	IF_1	CALL_1
0x4011303	          0x4c89ee	                            mov rsi, r13	      8600	syntax.c	FUNCTION_127	IF_1	CALL_1
0x4011306	    0x4c0335000000	             add r14, qword [0x0401130d]	      8694	syntax.c	FUNCTION_129	ELSE_1	CALL_7
0x401130d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      8600	syntax.c	FUNCTION_127	IF_1	CALL_1
0x401130f	     0xf84eb000000	                            je 0x4011400	      8600	syntax.c	FUNCTION_127	IF_1	CALL_1
0x4011315	      0xbe01000000	                              mov esi, 1	      8603	syntax.c	FUNCTION_127	CALL_2
0x401131a	          0x4c89ef	                            mov rdi, r13	      8603	syntax.c	FUNCTION_127	CALL_2
0x401131d	          0x4889eb	                            mov rbx, rbp	      8603	syntax.c	FUNCTION_127	CALL_2
0x4011320	      0xe800000000	                          call 0x4011325	      8603	syntax.c	FUNCTION_127	CALL_2
0x4011325	    0x48031d000000	             add rbx, qword [0x0401132c]	      8603	syntax.c	FUNCTION_127	CALL_2
0x401132c	        0x49894658	             mov qword [r14 + 0x58], rax	      8694	syntax.c	FUNCTION_129	ELSE_1	CALL_7
0x4011330	      0xb801000000	                              mov eax, 1	      9934	syntax.c	FUNCTION_161	IF_1	IF_2
0x4011335	        0x488b7b70	            mov rdi, qword [rbx + 0x70] 	      9937	syntax.c	FUNCTION_161	IF_3
0x4011339	          0x4885ff	                           test rdi, rdi	      9937	syntax.c	FUNCTION_161	IF_3
0x401133c	            0x7418	                            je 0x4011356	      9937	syntax.c	FUNCTION_161	IF_3
0x401133e	      0xe800000000	                          call 0x4011343	      9940	syntax.c	FUNCTION_161	IF_3	CALL_2
0x4011343	        0x48894340	             mov qword [rbx + 0x40], rax	      9939	syntax.c	FUNCTION_161	IF_3
0x4011347	          0x4889eb	                            mov rbx, rbp	      9939	syntax.c	FUNCTION_161	IF_3
0x401134a	    0x48031d000000	             add rbx, qword [0x04011351]	      9939	syntax.c	FUNCTION_161	IF_3
0x4011351	      0xb801000000	                              mov eax, 1	      9941	syntax.c	FUNCTION_161	IF_3
0x4011356	        0x488b7b78	            mov rdi, qword [rbx + 0x78] 	      9943	syntax.c	FUNCTION_161	IF_4
0x401135a	          0x4885ff	                           test rdi, rdi	      9943	syntax.c	FUNCTION_161	IF_4
0x401135d	            0x7479	                            je 0x40113d8	      9943	syntax.c	FUNCTION_161	IF_4
0x401135f	      0xe800000000	                          call 0x4011364	      9946	syntax.c	FUNCTION_161	IF_4	CALL_3
0x4011364	        0x48894348	             mov qword [rbx + 0x48], rax	      9945	syntax.c	FUNCTION_161	IF_4
0x4011368	          0x4889eb	                            mov rbx, rbp	      9950	syntax.c	FUNCTION_161	IF_5
0x401136b	    0x48031d000000	             add rbx, qword [0x04011372]	      9950	syntax.c	FUNCTION_161	IF_5
0x4011372	    0x488bbb800000	            mov rdi, qword [rbx + 0x80] 	      9950	syntax.c	FUNCTION_161	IF_5
0x4011379	          0x4885ff	                           test rdi, rdi	      9950	syntax.c	FUNCTION_161	IF_5
0x401137c	            0x7409	                            je 0x4011387	      9950	syntax.c	FUNCTION_161	IF_5
0x401137e	      0xe800000000	                          call 0x4011383	      9953	syntax.c	FUNCTION_161	IF_5	CALL_4
0x4011383	        0x48894350	             mov qword [rbx + 0x50], rax	      9952	syntax.c	FUNCTION_161	IF_5
0x4011387	          0x4489e7	                           mov edi, r12d	      9958	syntax.c	FUNCTION_161	CALL_5
0x401138a	      0xe8811dffff	                    call sym.set_hl_attr	      9958	syntax.c	FUNCTION_161	CALL_5
0x401138f	        0x4183c401	                             add r12d, 1	      9912	syntax.c	FUNCTION_160	FOR_1
0x4011393	    0x4881c5980000	                           add rbp, 0x98	      9912	syntax.c	FUNCTION_160	FOR_1
0x401139a	    0x443925000000	           cmp dword [0x040113a1], r12d 	      9912	syntax.c	FUNCTION_160	FOR_1
0x40113a1	            0x7e4d	                           jle 0x40113f0	      9912	syntax.c	FUNCTION_160	FOR_1
0x40113a3	    0x8b0500000000	            mov eax, dword [0x040113a9] 	      9928	syntax.c	FUNCTION_161	IF_1
0x40113a9	          0x4889eb	                            mov rbx, rbp	      9930	syntax.c	FUNCTION_161	IF_1	IF_2
0x40113ac	    0x48031d000000	             add rbx, qword [0x040113b3]	      9930	syntax.c	FUNCTION_161	IF_1	IF_2
0x40113b3	            0x85c0	                           test eax, eax	      9928	syntax.c	FUNCTION_161	IF_1
0x40113b5	     0xf8525ffffff	                           jne 0x40112e0	      9928	syntax.c	FUNCTION_161	IF_1
0x40113bb	            0x31c0	                            xor eax, eax	      9924	syntax.c	FUNCTION_161
0x40113bd	      0xe973ffffff	                           jmp 0x4011335	      9924	syntax.c	FUNCTION_161
0x40113c2	    0x660f1f440000	                    nop word [rax + rax]	      9924	syntax.c	FUNCTION_161
0x40113c8	      0xe800000000	                          call 0x40113cd	      9910	syntax.c	FUNCTION_160	CALL_1
0x40113cd	      0xe9f2feffff	                           jmp 0x40112c4	      9910	syntax.c	FUNCTION_160	CALL_1
0x40113d2	    0x660f1f440000	                    nop word [rax + rax]	      9910	syntax.c	FUNCTION_160	CALL_1
0x40113d8	    0x488bbb800000	            mov rdi, qword [rbx + 0x80] 	      9950	syntax.c	FUNCTION_161	IF_5
0x40113df	          0x4885ff	                           test rdi, rdi	      9950	syntax.c	FUNCTION_161	IF_5
0x40113e2	            0x759a	                           jne 0x401137e	      9950	syntax.c	FUNCTION_161	IF_5
0x40113e4	            0x85c0	                           test eax, eax	      9957	syntax.c	FUNCTION_161	IF_6
0x40113e6	            0x74a7	                            je 0x401138f	      9957	syntax.c	FUNCTION_161	IF_6
0x40113e8	            0xeb9d	                           jmp 0x4011387	      9957	syntax.c	FUNCTION_161	IF_6
0x40113ea	    0x660f1f440000	                    nop word [rax + rax]	      9957	syntax.c	FUNCTION_161	IF_6
0x40113f0	              0x5b	                                 pop rbx	      9916	syntax.c	FUNCTION_160
0x40113f1	              0x5d	                                 pop rbp	      9916	syntax.c	FUNCTION_160
0x40113f2	            0x415c	                                 pop r12	      9916	syntax.c	FUNCTION_160
0x40113f4	            0x415d	                                 pop r13	      9916	syntax.c	FUNCTION_160
0x40113f6	            0x415e	                                 pop r14	      9916	syntax.c	FUNCTION_160
0x40113f8	      0xe973f7ffff	               jmp sym.highlight_changed	      9915	syntax.c	FUNCTION_160	CALL_3
0x40113fd	           0xf1f00	                         nop dword [rax]	      9915	syntax.c	FUNCTION_160	CALL_3
0x4011400	          0x4c89f3	                            mov rbx, r14	      8600	syntax.c	FUNCTION_127	IF_1	CALL_1
0x4011403	            0x31c0	                            xor eax, eax	      8601	syntax.c	FUNCTION_127	IF_1
0x4011405	      0xe922ffffff	                           jmp 0x401132c	      8601	syntax.c	FUNCTION_127	IF_1
syntax_clear	DO,0:functions,0:IF,0:WHILE,0:CALL,11:ELSE,0:SWITCH,0:FOR,2	187
0x400a3a0	            0x4157	                                push r15	      3609	syntax.c	FUNCTION_49
0x400a3a2	            0x4156	                                push r14	      3609	syntax.c	FUNCTION_49
0x400a3a4	            0x4155	                                push r13	      3609	syntax.c	FUNCTION_49
0x400a3a6	            0x4154	                                push r12	      3609	syntax.c	FUNCTION_49
0x400a3a8	              0x55	                                push rbp	      3609	syntax.c	FUNCTION_49
0x400a3a9	              0x53	                                push rbx	      3609	syntax.c	FUNCTION_49
0x400a3aa	          0x4889fd	                            mov rbp, rdi	      3609	syntax.c	FUNCTION_49
0x400a3ad	        0x4883ec08	                              sub rsp, 8	      3609	syntax.c	FUNCTION_49
0x400a3b1	        0x488b4708	                mov rax, qword [rdi + 8]	      4493	syntax.c	FUNCTION_73
0x400a3b5	    0xc78750020000	              mov dword [rdi + 0x250], 0	      3612	syntax.c	FUNCTION_49
0x400a3bf	    0xc78754020000	              mov dword [rdi + 0x254], 0	      3614	syntax.c	FUNCTION_49
0x400a3c9	    0xc78758020000	              mov dword [rdi + 0x258], 0	      3616	syntax.c	FUNCTION_49
0x400a3d3	    0xc7875c020000	              mov dword [rdi + 0x25c], 0	      3617	syntax.c	FUNCTION_49
0x400a3dd	    0xc78798020000	              mov dword [rdi + 0x298], 0	      3618	syntax.c	FUNCTION_49
0x400a3e7	            0x85c0	                           test eax, eax	      4494	syntax.c	FUNCTION_73	FOR_1
0x400a3e9	    0xc78708030000	              mov dword [rdi + 0x308], 0	      3620	syntax.c	FUNCTION_49
0x400a3f3	          0x4189c6	                           mov r14d, eax	      4493	syntax.c	FUNCTION_73
0x400a3f6	        0x4c8b6f20	            mov r13, qword [rdi + 0x20] 	      4494	syntax.c	FUNCTION_73	FOR_1
0x400a3fa	            0x7e5a	                           jle 0x400a456	      4494	syntax.c	FUNCTION_73	FOR_1
0x400a3fc	         0xf1f4000	                         nop dword [rax]	      4494	syntax.c	FUNCTION_73	FOR_1
0x400a400	        0x498b5d08	                mov rbx, qword [r13 + 8]	      4496	syntax.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0x400a404	    0x4881fb000000	                              cmp rbx, 0	      4496	syntax.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0x400a40b	     0xf84ff020000	                            je 0x400a710	      4496	syntax.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0x400a411	          0x4885db	                           test rbx, rbx	      4496	syntax.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0x400a414	     0xf84f6020000	                            je 0x400a710	      4496	syntax.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0x400a41a	        0x4183ee01	                             sub r14d, 1	      4498	syntax.c	FUNCTION_73	FOR_1	IF_1
0x400a41e	        0x4883eb28	                           sub rbx, 0x28	      4499	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2
0x400a422	            0x7429	                            je 0x400a44d	      4499	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2
0x400a424	         0xf1f4000	                         nop dword [rax]	      4499	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2
0x400a428	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      4502	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_2
0x400a42c	          0x4c8b23	                    mov r12, qword [rbx]	      4501	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2
0x400a42f	      0xe800000000	                          call 0x400a434	      4502	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_2
0x400a434	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      4503	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_3
0x400a438	      0xe800000000	                          call 0x400a43d	      4503	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_3
0x400a43d	          0x4889df	                            mov rdi, rbx	      4504	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_4
0x400a440	          0x4c89e3	                            mov rbx, r12	      4504	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_4
0x400a443	      0xe800000000	                          call 0x400a448	      4504	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_4
0x400a448	          0x4d85e4	                           test r12, r12	      4499	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2
0x400a44b	            0x75db	                           jne 0x400a428	      4499	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2
0x400a44d	        0x4983c510	                           add r13, 0x10	      4494	syntax.c	FUNCTION_73	FOR_1
0x400a451	          0x4585f6	                         test r14d, r14d	      4494	syntax.c	FUNCTION_73	FOR_1
0x400a454	            0x75aa	                           jne 0x400a400	      4494	syntax.c	FUNCTION_73	FOR_1
0x400a456	          0x4889ef	                            mov rdi, rbp	      4508	syntax.c	FUNCTION_73	CALL_5
0x400a459	    0x4c8db5280100	                  lea r14, [rbp + 0x128]	      3625	syntax.c	FUNCTION_49	CALL_2
0x400a460	      0xe800000000	                          call 0x400a465	      4508	syntax.c	FUNCTION_73	CALL_5
0x400a465	          0x4889ef	                            mov rdi, rbp	      4509	syntax.c	FUNCTION_73	CALL_6
0x400a468	      0xe800000000	                          call 0x400a46d	      4509	syntax.c	FUNCTION_73	CALL_6
0x400a46d	    0x488b85300100	           mov rax, qword [rbp + 0x130] 	      4493	syntax.c	FUNCTION_73
0x400a474	    0x4c8ba5480100	           mov r12, qword [rbp + 0x148] 	      4494	syntax.c	FUNCTION_73	FOR_1
0x400a47b	            0x85c0	                           test eax, eax	      4494	syntax.c	FUNCTION_73	FOR_1
0x400a47d	          0x4189c5	                           mov r13d, eax	      4493	syntax.c	FUNCTION_73
0x400a480	            0x7e5c	                           jle 0x400a4de	      4494	syntax.c	FUNCTION_73	FOR_1
0x400a482	    0x660f1f440000	                    nop word [rax + rax]	      4494	syntax.c	FUNCTION_73	FOR_1
0x400a488	      0x498b5c2408	                mov rbx, qword [r12 + 8]	      4496	syntax.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0x400a48d	          0x4885db	                           test rbx, rbx	      4496	syntax.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0x400a490	     0xf848a020000	                            je 0x400a720	      4496	syntax.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0x400a496	    0x4881fb000000	                              cmp rbx, 0	      4496	syntax.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0x400a49d	     0xf847d020000	                            je 0x400a720	      4496	syntax.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0x400a4a3	        0x4183ed01	                             sub r13d, 1	      4498	syntax.c	FUNCTION_73	FOR_1	IF_1
0x400a4a7	        0x4883eb28	                           sub rbx, 0x28	      4499	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2
0x400a4ab	            0x7428	                            je 0x400a4d5	      4499	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2
0x400a4ad	           0xf1f00	                         nop dword [rax]	      4499	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2
0x400a4b0	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      4502	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_2
0x400a4b4	          0x4c8b3b	                    mov r15, qword [rbx]	      4501	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2
0x400a4b7	      0xe800000000	                          call 0x400a4bc	      4502	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_2
0x400a4bc	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      4503	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_3
0x400a4c0	      0xe800000000	                          call 0x400a4c5	      4503	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_3
0x400a4c5	          0x4889df	                            mov rdi, rbx	      4504	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_4
0x400a4c8	          0x4c89fb	                            mov rbx, r15	      4504	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_4
0x400a4cb	      0xe800000000	                          call 0x400a4d0	      4504	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_4
0x400a4d0	          0x4d85ff	                           test r15, r15	      4499	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2
0x400a4d3	            0x75db	                           jne 0x400a4b0	      4499	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2
0x400a4d5	        0x4983c410	                           add r12, 0x10	      4494	syntax.c	FUNCTION_73	FOR_1
0x400a4d9	          0x4585ed	                         test r13d, r13d	      4494	syntax.c	FUNCTION_73	FOR_1
0x400a4dc	            0x75aa	                           jne 0x400a488	      4494	syntax.c	FUNCTION_73	FOR_1
0x400a4de	          0x4c89f7	                            mov rdi, r14	      4508	syntax.c	FUNCTION_73	CALL_5
0x400a4e1	      0xe800000000	                          call 0x400a4e6	      4508	syntax.c	FUNCTION_73	CALL_5
0x400a4e6	          0x4c89f7	                            mov rdi, r14	      4509	syntax.c	FUNCTION_73	CALL_6
0x400a4e9	      0xe800000000	                          call 0x400a4ee	      4509	syntax.c	FUNCTION_73	CALL_6
0x400a4ee	    0x486385600200	        movsxd rax, dword [rbp + 0x260] 	      3628	syntax.c	FUNCTION_49	FOR_1
0x400a4f5	        0x488d1c80	                  lea rbx, [rax + rax*4]	      3628	syntax.c	FUNCTION_49	FOR_1
0x400a4f9	          0x4989c4	                            mov r12, rax	      3628	syntax.c	FUNCTION_49	FOR_1
0x400a4fc	        0x48c1e305	                              shl rbx, 5	      3628	syntax.c	FUNCTION_49	FOR_1
0x400a500	    0x4881eba00000	                           sub rbx, 0xa0	      3628	syntax.c	FUNCTION_49	FOR_1
0x400a507	            0xeb72	                           jmp 0x400a57b	      3628	syntax.c	FUNCTION_49	FOR_1
0x400a509	     0xf1f80000000	                         nop dword [rax]	      3628	syntax.c	FUNCTION_49	FOR_1
0x400a510	    0x488b85700200	           mov rax, qword [rbp + 0x270] 	      3728	syntax.c	FUNCTION_53	CALL_1
0x400a517	      0x488b7c1860	      mov rdi, qword [rax + rbx + 0x60] 	      3728	syntax.c	FUNCTION_53	CALL_1
0x400a51c	      0xe800000000	                          call 0x400a521	      3728	syntax.c	FUNCTION_53	CALL_1
0x400a521	    0x488b85700200	           mov rax, qword [rbp + 0x270] 	      3729	syntax.c	FUNCTION_53	CALL_2
0x400a528	      0x488b7c1868	      mov rdi, qword [rax + rbx + 0x68] 	      3729	syntax.c	FUNCTION_53	CALL_2
0x400a52d	      0xe800000000	                          call 0x400a532	      3729	syntax.c	FUNCTION_53	CALL_2
0x400a532	          0x4585e4	                         test r12d, r12d	      3731	syntax.c	FUNCTION_53	IF_1
0x400a535	    0x488b85700200	           mov rax, qword [rbp + 0x270] 	      3731	syntax.c	FUNCTION_53	IF_1
0x400a53c	            0x740a	                            je 0x400a548	      3731	syntax.c	FUNCTION_53	IF_1
0x400a53e	    0x80bc1860ffff	         cmp byte [rax + rbx - 0xa0], 2 	      3731	syntax.c	FUNCTION_53	IF_1
0x400a546	            0x742c	                            je 0x400a574	      3731	syntax.c	FUNCTION_53	IF_1
0x400a548	      0x488b7c1840	      mov rdi, qword [rax + rbx + 0x40] 	      3733	syntax.c	FUNCTION_53	IF_1	CALL_3
0x400a54d	      0xe800000000	                          call 0x400a552	      3733	syntax.c	FUNCTION_53	IF_1	CALL_3
0x400a552	    0x488b85700200	           mov rax, qword [rbp + 0x270] 	      3734	syntax.c	FUNCTION_53	IF_1	CALL_4
0x400a559	      0x488b7c1848	      mov rdi, qword [rax + rbx + 0x48] 	      3734	syntax.c	FUNCTION_53	IF_1	CALL_4
0x400a55e	      0xe800000000	                          call 0x400a563	      3734	syntax.c	FUNCTION_53	IF_1	CALL_4
0x400a563	    0x488b85700200	           mov rax, qword [rbp + 0x270] 	      3735	syntax.c	FUNCTION_53	IF_1	CALL_5
0x400a56a	      0x488b7c1858	      mov rdi, qword [rax + rbx + 0x58] 	      3735	syntax.c	FUNCTION_53	IF_1	CALL_5
0x400a56f	      0xe800000000	                          call 0x400a574	      3735	syntax.c	FUNCTION_53	IF_1	CALL_5
0x400a574	    0x4881eba00000	                           sub rbx, 0xa0	      3735	syntax.c	FUNCTION_53	IF_1	CALL_5
0x400a57b	        0x4183ec01	                             sub r12d, 1	      3628	syntax.c	FUNCTION_49	FOR_1
0x400a57f	            0x798f	                           jns 0x400a510	      3628	syntax.c	FUNCTION_49	FOR_1
0x400a581	    0x488dbd600200	                  lea rdi, [rbp + 0x260]	      3630	syntax.c	FUNCTION_49	CALL_4
0x400a588	      0xe800000000	                          call 0x400a58d	      3630	syntax.c	FUNCTION_49	CALL_4
0x400a58d	    0x8b8578020000	           mov eax, dword [rbp + 0x278] 	      3633	syntax.c	FUNCTION_49	FOR_2
0x400a593	          0x83e801	                              sub eax, 1	      3633	syntax.c	FUNCTION_49	FOR_2
0x400a596	            0x785b	                            js 0x400a5f3	      3633	syntax.c	FUNCTION_49	FOR_2
0x400a598	          0x4863d0	                         movsxd rdx, eax	      3633	syntax.c	FUNCTION_49	FOR_2
0x400a59b	            0x89c0	                            mov eax, eax	      3633	syntax.c	FUNCTION_49	FOR_2
0x400a59d	        0x488d1c52	                  lea rbx, [rdx + rdx*2]	      3633	syntax.c	FUNCTION_49	FOR_2
0x400a5a1	          0x4829c2	                            sub rdx, rax	      3633	syntax.c	FUNCTION_49	FOR_2
0x400a5a4	        0x488d0452	                  lea rax, [rdx + rdx*2]	      3633	syntax.c	FUNCTION_49	FOR_2
0x400a5a8	        0x48c1e303	                              shl rbx, 3	      3633	syntax.c	FUNCTION_49	FOR_2
0x400a5ac	    0x4c8d24c5e8ff	                 lea r12, [rax*8 - 0x18]	      3633	syntax.c	FUNCTION_49	FOR_2
0x400a5b4	         0xf1f4000	                         nop dword [rax]	      3633	syntax.c	FUNCTION_49	FOR_2
0x400a5b8	    0x488b85880200	           mov rax, qword [rbp + 0x288] 	      3745	syntax.c	FUNCTION_54	CALL_1
0x400a5bf	        0x488b3c18	              mov rdi, qword [rax + rbx]	      3745	syntax.c	FUNCTION_54	CALL_1
0x400a5c3	      0xe800000000	                          call 0x400a5c8	      3745	syntax.c	FUNCTION_54	CALL_1
0x400a5c8	    0x488b85880200	           mov rax, qword [rbp + 0x288] 	      3746	syntax.c	FUNCTION_54	CALL_2
0x400a5cf	      0x488b7c1808	         mov rdi, qword [rax + rbx + 8] 	      3746	syntax.c	FUNCTION_54	CALL_2
0x400a5d4	      0xe800000000	                          call 0x400a5d9	      3746	syntax.c	FUNCTION_54	CALL_2
0x400a5d9	    0x488b85880200	           mov rax, qword [rbp + 0x288] 	      3747	syntax.c	FUNCTION_54	CALL_3
0x400a5e0	      0x488b7c1810	      mov rdi, qword [rax + rbx + 0x10] 	      3747	syntax.c	FUNCTION_54	CALL_3
0x400a5e5	        0x4883eb18	                           sub rbx, 0x18	      3747	syntax.c	FUNCTION_54	CALL_3
0x400a5e9	      0xe800000000	                          call 0x400a5ee	      3747	syntax.c	FUNCTION_54	CALL_3
0x400a5ee	          0x4c39e3	                            cmp rbx, r12	      3633	syntax.c	FUNCTION_49	FOR_2
0x400a5f1	            0x75c5	                           jne 0x400a5b8	      3633	syntax.c	FUNCTION_49	FOR_2
0x400a5f3	    0x488dbd780200	                  lea rdi, [rbp + 0x278]	      3635	syntax.c	FUNCTION_49	CALL_6
0x400a5fa	      0xe800000000	                          call 0x400a5ff	      3635	syntax.c	FUNCTION_49	CALL_6
0x400a5ff	    0x488bbdc80200	           mov rdi, qword [rbp + 0x2c8] 	      3644	syntax.c	FUNCTION_49	CALL_7
0x400a606	    0xc78590020000	              mov dword [rbp + 0x290], 0	      3636	syntax.c	FUNCTION_49
0x400a610	    0xc78594020000	              mov dword [rbp + 0x294], 0	      3637	syntax.c	FUNCTION_49
0x400a61a	    0xc7859c020000	              mov dword [rbp + 0x29c], 0	      3639	syntax.c	FUNCTION_49
0x400a624	    0x48c785a80200	              mov qword [rbp + 0x2a8], 0	      3640	syntax.c	FUNCTION_49
0x400a62f	    0x48c785b00200	              mov qword [rbp + 0x2b0], 0	      3641	syntax.c	FUNCTION_49
0x400a63a	    0x48c785b80200	              mov qword [rbp + 0x2b8], 0	      3642	syntax.c	FUNCTION_49
0x400a645	      0xe800000000	                          call 0x400a64a	      3644	syntax.c	FUNCTION_49	CALL_7
0x400a64a	    0x488bbdc00200	           mov rdi, qword [rbp + 0x2c0] 	      3646	syntax.c	FUNCTION_49	CALL_8
0x400a651	    0x48c785c80200	              mov qword [rbp + 0x2c8], 0	      3645	syntax.c	FUNCTION_49
0x400a65c	          0x4885ff	                           test rdi, rdi	      3646	syntax.c	FUNCTION_49	CALL_8
0x400a65f	            0x7410	                            je 0x400a671	      3646	syntax.c	FUNCTION_49	CALL_8
0x400a661	      0xe800000000	                          call 0x400a666	      3646	syntax.c	FUNCTION_49	CALL_8
0x400a666	    0x48c785c00200	              mov qword [rbp + 0x2c0], 0	      3646	syntax.c	FUNCTION_49	CALL_8
0x400a671	    0x488dbdb00400	                  lea rdi, [rbp + 0x4b0]	      3650	syntax.c	FUNCTION_49	CALL_9
0x400a678	    0xc7850c030000	              mov dword [rbp + 0x30c], 0	      3648	syntax.c	FUNCTION_49
0x400a682	      0xe800000000	                          call 0x400a687	      3650	syntax.c	FUNCTION_49	CALL_9
0x400a687	          0x4889ef	                            mov rdi, rbp	      3653	syntax.c	FUNCTION_49	CALL_10
0x400a68a	            0x31ed	                            xor ebp, ebp	       722	syntax.c	FUNCTION_4	FOR_1
0x400a68c	      0xe800000000	                          call 0x400a691	      3653	syntax.c	FUNCTION_49	CALL_10
0x400a691	    0x488b05000000	            mov rax, qword [0x0400a698] 	      3653	syntax.c	FUNCTION_49	CALL_10
0x400a698	    0x488d98880000	                   lea rbx, [rax + 0x88]	      3653	syntax.c	FUNCTION_49	CALL_10
0x400a69f	    0x8b0500000000	            mov eax, dword [0x0400a6a5] 	       722	syntax.c	FUNCTION_4	FOR_1
0x400a6a5	            0x85c0	                           test eax, eax	       722	syntax.c	FUNCTION_4	FOR_1
0x400a6a7	            0x7e21	                           jle 0x400a6ca	       722	syntax.c	FUNCTION_4	FOR_1
0x400a6a9	     0xf1f80000000	                         nop dword [rax]	       722	syntax.c	FUNCTION_4	FOR_1
0x400a6b0	          0x488b3b	                    mov rdi, qword [rbx]	       723	syntax.c	FUNCTION_4	CALL_1
0x400a6b3	          0x83c501	                              add ebp, 1	       722	syntax.c	FUNCTION_4	FOR_1
0x400a6b6	    0x4881c3900000	                           add rbx, 0x90	       722	syntax.c	FUNCTION_4	FOR_1
0x400a6bd	      0xe800000000	                          call 0x400a6c2	       723	syntax.c	FUNCTION_4	CALL_1
0x400a6c2	    0x3b2d00000000	            cmp ebp, dword [0x0400a6c8] 	       722	syntax.c	FUNCTION_4	FOR_1
0x400a6c8	            0x7ce6	                            jl 0x400a6b0	       722	syntax.c	FUNCTION_4	FOR_1
0x400a6ca	      0xbf00000000	                              mov edi, 0	       724	syntax.c	FUNCTION_4	CALL_2
0x400a6cf	      0xe800000000	                          call 0x400a6d4	       724	syntax.c	FUNCTION_4	CALL_2
0x400a6d4	    0xc70500000000	               mov dword [0x0400a6de], 0	      1732	syntax.c	FUNCTION_23
0x400a6de	    0x48c705000000	               mov qword [0x0400a6e9], 0	      1733	syntax.c	FUNCTION_23
0x400a6e9	    0xc70500000000	     mov dword [0x0400a6f3], 0xffffffff 	      1734	syntax.c	FUNCTION_23
0x400a6f3	    0xc70500000000	               mov dword [0x0400a6fd], 0	      3657	syntax.c	FUNCTION_49
0x400a6fd	        0x4883c408	                              add rsp, 8	      3658	syntax.c	FUNCTION_49
0x400a701	              0x5b	                                 pop rbx	      3658	syntax.c	FUNCTION_49
0x400a702	              0x5d	                                 pop rbp	      3658	syntax.c	FUNCTION_49
0x400a703	            0x415c	                                 pop r12	      3658	syntax.c	FUNCTION_49
0x400a705	            0x415d	                                 pop r13	      3658	syntax.c	FUNCTION_49
0x400a707	            0x415e	                                 pop r14	      3658	syntax.c	FUNCTION_49
0x400a709	            0x415f	                                 pop r15	      3658	syntax.c	FUNCTION_49
0x400a70b	              0xc3	                                     ret	      3658	syntax.c	FUNCTION_49
0x400a70c	         0xf1f4000	                         nop dword [rax]	      3658	syntax.c	FUNCTION_49
0x400a710	        0x4983c510	                           add r13, 0x10	      4494	syntax.c	FUNCTION_73	FOR_1
0x400a714	      0xe9e7fcffff	                           jmp 0x400a400	      4494	syntax.c	FUNCTION_73	FOR_1
0x400a719	     0xf1f80000000	                         nop dword [rax]	      4494	syntax.c	FUNCTION_73	FOR_1
0x400a720	        0x4983c410	                           add r12, 0x10	      4494	syntax.c	FUNCTION_73	FOR_1
0x400a724	      0xe95ffdffff	                           jmp 0x400a488	      4494	syntax.c	FUNCTION_73	FOR_1
set_context_in_echohl_cmd	DO,0:functions,0:IF,0:WHILE,0:CALL,0:ELSE,0:SWITCH,0:FOR,0	4
0x400b270	    0xc7070d000000	                    mov dword [rdi], 0xd	      6478	syntax.c	FUNCTION_99
0x400b276	        0x48897708	                mov qword [rdi + 8], rsi	      6479	syntax.c	FUNCTION_99
0x400b27a	    0xc70500000000	               mov dword [0x0400b284], 1	      6480	syntax.c	FUNCTION_99
0x400b284	              0xc3	                                     ret	      6480	syntax.c	FUNCTION_99
syn_cmd_sync	DO,0:functions,0:IF,27:WHILE,1:CALL,41:ELSE,13:SWITCH,0:FOR,0	329
0x4010360	            0x4157	                                push r15	      5841	syntax.c	FUNCTION_91
0x4010362	            0x4156	                                push r14	      5841	syntax.c	FUNCTION_91
0x4010364	            0x4155	                                push r13	      5841	syntax.c	FUNCTION_91
0x4010366	            0x4154	                                push r12	      5841	syntax.c	FUNCTION_91
0x4010368	          0x4989fd	                            mov r13, rdi	      5841	syntax.c	FUNCTION_91
0x401036b	              0x55	                                push rbp	      5841	syntax.c	FUNCTION_91
0x401036c	              0x53	                                push rbx	      5841	syntax.c	FUNCTION_91
0x401036d	    0x4881ecf80000	                           sub rsp, 0xf8	      5841	syntax.c	FUNCTION_91
0x4010374	          0x488b2f	                    mov rbp, qword [rdi]	      5842	syntax.c	FUNCTION_91
0x4010377	    0x64488b042528	                mov rax, qword fs:[0x28]	      5841	syntax.c	FUNCTION_91
0x4010380	    0x48898424e800	             mov qword [rsp + 0xe8], rax	      5841	syntax.c	FUNCTION_91
0x4010388	            0x31c0	                            xor eax, eax	      5841	syntax.c	FUNCTION_91
0x401038a	         0xfb67d00	                   movzx edi, byte [rbp]	      5851	syntax.c	FUNCTION_91	IF_1	CALL_1
0x401038e	      0xe800000000	                          call 0x4010393	      5851	syntax.c	FUNCTION_91	IF_1	CALL_1
0x4010393	            0x85c0	                           test eax, eax	      5851	syntax.c	FUNCTION_91	IF_1	CALL_1
0x4010395	     0xf85d4040000	                           jne 0x401086f	      5851	syntax.c	FUNCTION_91	IF_1	CALL_1
0x401039b	            0x31db	                            xor ebx, ebx	      5851	syntax.c	FUNCTION_91	IF_1	CALL_1
0x401039d	            0xeb3d	                           jmp 0x40103dc	      5851	syntax.c	FUNCTION_91	IF_1	CALL_1
0x401039f	              0x90	                                     nop	      5851	syntax.c	FUNCTION_91	IF_1	CALL_1
0x40103a0	        0x458b4d30	            mov r9d, dword [r13 + 0x30] 	      5865	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_3
0x40103a4	          0x4585c9	                           test r9d, r9d	      5865	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_3
0x40103a7	            0x7512	                           jne 0x40103bb	      5865	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_3
0x40103a9	    0x488b05000000	            mov rax, qword [0x040103b0] 	      5866	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_3
0x40103b0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5866	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_3
0x40103b4	    0x83889c020000	               or dword [rax + 0x29c], 1	      5866	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_3
0x40103bb	      0x410fb63c24	                   movzx edi, byte [r12]	      5867	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_9
0x40103c0	      0xe800000000	                          call 0x40103c5	      5867	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_9
0x40103c5	            0x85c0	                           test eax, eax	      5867	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_9
0x40103c7	     0xf84a3020000	                            je 0x4010670	      5867	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_9
0x40103cd	        0x418b7d30	            mov edi, dword [r13 + 0x30] 	      5875	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0x40103d1	            0x85ff	                           test edi, edi	      5875	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0x40103d3	     0xf840f030000	                            je 0x40106e8	      5875	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0x40103d9	          0x4c89e5	                            mov rbp, r12	      5875	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0x40103dc	         0xfb67d00	                   movzx edi, byte [rbp]	      5857	syntax.c	FUNCTION_91	WHILE_1	CALL_3
0x40103e0	      0xe800000000	                          call 0x40103e5	      5857	syntax.c	FUNCTION_91	WHILE_1	CALL_3
0x40103e5	            0x85c0	                           test eax, eax	      5857	syntax.c	FUNCTION_91	WHILE_1	CALL_3
0x40103e7	     0xf852b040000	                           jne 0x4010818	      5857	syntax.c	FUNCTION_91	WHILE_1	CALL_3
0x40103ed	          0x4889ef	                            mov rdi, rbp	      5859	syntax.c	FUNCTION_91	WHILE_1	CALL_4
0x40103f0	      0xe800000000	                          call 0x40103f5	      5859	syntax.c	FUNCTION_91	WHILE_1	CALL_4
0x40103f5	          0x4889c7	                            mov rdi, rax	      5860	syntax.c	FUNCTION_91	WHILE_1	CALL_5
0x40103f8	      0x4889442418	             mov qword [rsp + 0x18], rax	      5859	syntax.c	FUNCTION_91	WHILE_1	CALL_4
0x40103fd	      0xe800000000	                          call 0x4010402	      5860	syntax.c	FUNCTION_91	WHILE_1	CALL_5
0x4010402	          0x4889df	                            mov rdi, rbx	      5861	syntax.c	FUNCTION_91	WHILE_1	CALL_6
0x4010405	          0x4989c4	                            mov r12, rax	      5860	syntax.c	FUNCTION_91	WHILE_1	CALL_5
0x4010408	      0xe800000000	                          call 0x401040d	      5861	syntax.c	FUNCTION_91	WHILE_1	CALL_6
0x401040d	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      5862	syntax.c	FUNCTION_91	WHILE_1	CALL_7
0x4010412	          0x4889ef	                            mov rdi, rbp	      5862	syntax.c	FUNCTION_91	WHILE_1	CALL_7
0x4010415	          0x4829ee	                            sub rsi, rbp	      5862	syntax.c	FUNCTION_91	WHILE_1	CALL_7
0x4010418	      0xe800000000	                          call 0x401041d	      5862	syntax.c	FUNCTION_91	WHILE_1	CALL_7
0x401041d	      0xbf00000000	                              mov edi, 0	      5863	syntax.c	FUNCTION_91	WHILE_1	IF_2	CALL_8
0x4010422	      0xb909000000	                              mov ecx, 9	      5863	syntax.c	FUNCTION_91	WHILE_1	IF_2	CALL_8
0x4010427	          0x4889c6	                            mov rsi, rax	      5863	syntax.c	FUNCTION_91	WHILE_1	IF_2	CALL_8
0x401042a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5863	syntax.c	FUNCTION_91	WHILE_1	IF_2	CALL_8
0x401042c	          0x4889c3	                            mov rbx, rax	      5862	syntax.c	FUNCTION_91	WHILE_1	CALL_7
0x401042f	     0xf846bffffff	                            je 0x40103a0	      5863	syntax.c	FUNCTION_91	WHILE_1	IF_2	CALL_8
0x4010435	      0xbf00000000	                              mov edi, 0	      5878	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_14
0x401043a	      0xb905000000	                              mov ecx, 5	      5878	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_14
0x401043f	          0x4889c6	                            mov rsi, rax	      5878	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_14
0x4010442	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5878	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_14
0x4010444	     0xf84a6010000	                            je 0x40105f0	      5878	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_14
0x401044a	      0xbf00000000	                              mov edi, 0	      5879	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_15
0x401044f	      0xb908000000	                              mov ecx, 8	      5879	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_15
0x4010454	          0x4889c6	                            mov rsi, rax	      5879	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_15
0x4010457	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5879	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_15
0x4010459	     0xf8491010000	                            je 0x40105f0	      5879	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_15
0x401045f	      0xbf00000000	                              mov edi, 0	      5880	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_16
0x4010464	      0xb908000000	                              mov ecx, 8	      5880	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_16
0x4010469	          0x4889c6	                            mov rsi, rax	      5880	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_16
0x401046c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5880	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_16
0x401046e	     0xf847c010000	                            je 0x40105f0	      5880	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_16
0x4010474	      0xbf00000000	                              mov edi, 0	      5881	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_17
0x4010479	      0xb90a000000	                            mov ecx, 0xa	      5881	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_17
0x401047e	          0x4889c6	                            mov rsi, rax	      5881	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_17
0x4010481	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5881	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_17
0x4010483	     0xf8467010000	                            je 0x40105f0	      5881	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_17
0x4010489	      0xbf00000000	                              mov edi, 0	      5905	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	CALL_20
0x401048e	      0xb90a000000	                            mov ecx, 0xa	      5905	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	CALL_20
0x4010493	          0x4889c6	                            mov rsi, rax	      5905	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	CALL_20
0x4010496	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5905	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	CALL_20
0x4010498	     0xf8442030000	                            je 0x40107e0	      5905	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	CALL_20
0x401049e	      0xbf00000000	                              mov edi, 0	      5913	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_21
0x40104a3	      0xb909000000	                              mov ecx, 9	      5913	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_21
0x40104a8	          0x4889c6	                            mov rsi, rax	      5913	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_21
0x40104ab	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5913	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_21
0x40104ad	     0xf85cb030000	                           jne 0x401087e	      5913	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_21
0x40104b3	      0x410fb60424	                   movzx eax, byte [r12]	      5915	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_17
0x40104b8	            0x84c0	                             test al, al	      5915	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_17
0x40104ba	     0xf84f8010000	                            je 0x40106b8	      5915	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_17
0x40104c0	    0x488b15000000	            mov rdx, qword [0x040104c7] 	      5920	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18
0x40104c7	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      5920	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18
0x40104cb	    0x4883bac00200	              cmp qword [rdx + 0x2c0], 0	      5920	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18
0x40104d3	     0xf85fe030000	                           jne 0x40108d7	      5920	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18
0x40104d9	      0x4d8d742401	                      lea r14, [r12 + 1]	      5926	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_24
0x40104de	            0x31c9	                            xor ecx, ecx	      5926	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_24
0x40104e0	           0xfb6f0	                           movzx esi, al	      5926	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_24
0x40104e3	      0xba01000000	                              mov edx, 1	      5926	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_24
0x40104e8	          0x4c89f7	                            mov rdi, r14	      5926	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_24
0x40104eb	      0xe800000000	                          call 0x40104f0	      5926	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_24
0x40104f0	      0x4889442418	             mov qword [rsp + 0x18], rax	      5926	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_24
0x40104f5	      0x410fb60c24	                   movzx ecx, byte [r12]	      5927	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_19
0x40104fa	            0x3808	                      cmp byte [rax], cl	      5927	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_19
0x40104fc	     0xf85b6010000	                           jne 0x40106b8	      5927	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_19
0x4010502	        0x418b5530	            mov edx, dword [r13 + 0x30] 	      5933	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x4010506	            0x85d2	                           test edx, edx	      5933	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x4010508	     0xf85c8000000	                           jne 0x40105d6	      5933	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x401050e	    0x488b15000000	            mov rdx, qword [0x04010515] 	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0x4010515	          0x4c29e0	                            sub rax, r12	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0x4010518	          0x4c89f7	                            mov rdi, r14	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0x401051b	          0x8d70ff	                      lea esi, [rax - 1]	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0x401051e	        0x488b6a10	            mov rbp, qword [rdx + 0x10] 	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0x4010522	      0xe800000000	                          call 0x4010527	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0x4010527	          0x4885c0	                           test rax, rax	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0x401052a	    0x488985c00200	           mov qword [rbp + 0x2c0], rax 	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0x4010531	     0xf8493030000	                            je 0x40108ca	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0x4010537	    0x488b05000000	            mov rax, qword [0x0401053e] 	      5942	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x401053e	      0xbe01000000	                              mov esi, 1	      5948	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	CALL_26
0x4010543	    0x4c8b25000000	            mov r12, qword [0x0401054a] 	      5945	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x401054a	    0x48c705000000	               mov qword [0x04010555], 0	      5946	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x4010555	        0x488b6810	            mov rbp, qword [rax + 0x10] 	      5942	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x4010559	    0x8b8558020000	           mov eax, dword [rbp + 0x258] 	      5942	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x401055f	    0x488bbdc00200	           mov rdi, qword [rbp + 0x2c0] 	      5948	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	CALL_26
0x4010566	    0x898500030000	           mov dword [rbp + 0x300], eax 	      5942	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x401056c	      0xe800000000	                          call 0x4010571	      5948	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	CALL_26
0x4010571	    0x488985c80200	           mov qword [rbp + 0x2c8], rax 	      5947	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x4010578	    0x488b05000000	            mov rax, qword [0x0401057f] 	      5951	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	CALL_27
0x401057f	    0x4c8925000000	            mov qword [0x04010586], r12 	      5949	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0x4010586	        0x488b6810	            mov rbp, qword [rax + 0x10] 	      5951	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	CALL_27
0x401058a	    0x488dbdd00200	                  lea rdi, [rbp + 0x2d0]	      6691	syntax.c	FUNCTION_108	CALL_1
0x4010591	      0xe800000000	                          call 0x4010596	      6691	syntax.c	FUNCTION_108	CALL_1
0x4010596	    0x488dbde00200	                  lea rdi, [rbp + 0x2e0]	      6692	syntax.c	FUNCTION_108	CALL_2
0x401059d	      0xe800000000	                          call 0x40105a2	      6692	syntax.c	FUNCTION_108	CALL_2
0x40105a2	    0x488b05000000	            mov rax, qword [0x040105a9] 	      5954	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22
0x40105a9	    0x48c785f00200	              mov qword [rbp + 0x2f0], 0	      6693	syntax.c	FUNCTION_108
0x40105b4	    0x48c785f80200	              mov qword [rbp + 0x2f8], 0	      6694	syntax.c	FUNCTION_108
0x40105bf	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5954	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22
0x40105c3	    0x4883b8c80200	              cmp qword [rax + 0x2c8], 0	      5954	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22
0x40105cb	     0xf8421030000	                            je 0x40108f2	      5954	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22
0x40105d1	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5954	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22
0x40105d6	        0x488d7801	                      lea rdi, [rax + 1]	      5961	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_29
0x40105da	      0xe800000000	                          call 0x40105df	      5961	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_29
0x40105df	          0x4989c4	                            mov r12, rax	      5961	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_29
0x40105e2	      0xe9f2fdffff	                           jmp 0x40103d9	      5961	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_29
0x40105e7	    0x660f1f840000	                    nop word [rax + rax]	      5961	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_29
0x40105f0	        0x807b0453	                cmp byte [rbx + 4], 0x53	      5883	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_8
0x40105f4	     0xf84a6000000	                            je 0x40106a0	      5883	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_8
0x40105fa	          0x803b4c	                    cmp byte [rbx], 0x4c	      5885	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_3	IF_9
0x40105fd	     0xf847d010000	                            je 0x4010780	      5885	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_3	IF_9
0x4010603	        0x488d4309	                      lea rax, [rbx + 9]	      5888	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4
0x4010607	      0x4889442418	             mov qword [rsp + 0x18], rax	      5888	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4
0x401060c	        0x8078ff3d	                cmp byte [rax - 1], 0x3d	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0x4010610	     0xf85a2000000	                           jne 0x40106b8	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0x4010616	           0xfb600	                   movzx eax, byte [rax]	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0x4010619	          0x83e830	                           sub eax, 0x30	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0x401061c	          0x83f809	                              cmp eax, 9	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0x401061f	     0xf8793000000	                            ja 0x40106b8	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0x4010625	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      5894	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_19
0x401062a	      0xe800000000	                          call 0x401062f	      5894	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_19
0x401062f	        0x418b7530	            mov esi, dword [r13 + 0x30] 	      5895	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11
0x4010633	            0x85f6	                           test esi, esi	      5895	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11
0x4010635	     0xf859efdffff	                           jne 0x40103d9	      5895	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11
0x401063b	        0x807b0442	                cmp byte [rbx + 4], 0x42	      5897	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	IF_12
0x401063f	    0x488b15000000	            mov rdx, qword [0x04010646] 	      5898	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	IF_12
0x4010646	     0xf8444010000	                            je 0x4010790	      5897	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	IF_12
0x401064c	        0x807b0141	                cmp byte [rbx + 1], 0x41	      5899	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_5	IF_13
0x4010650	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      5900	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_5	IF_13
0x4010654	     0xf8446010000	                            je 0x40107a0	      5899	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_5	IF_13
0x401065a	    0x488982a80200	            mov qword [rdx + 0x2a8], rax	      5902	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_6
0x4010661	      0xe973fdffff	                           jmp 0x40103d9	      5902	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_6
0x4010666	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5902	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_6
0x4010670	          0x4c89e7	                            mov rdi, r12	      5869	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_10
0x4010673	      0xe800000000	                          call 0x4010678	      5869	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_10
0x4010678	        0x458b4530	            mov r8d, dword [r13 + 0x30] 	      5870	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5
0x401067c	      0x4889442418	             mov qword [rsp + 0x18], rax	      5869	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_10
0x4010681	          0x4585c0	                           test r8d, r8d	      5870	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5
0x4010684	     0xf8426010000	                            je 0x40107b0	      5870	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5
0x401068a	          0x4889c7	                            mov rdi, rax	      5873	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_12
0x401068d	      0xe800000000	                          call 0x4010692	      5873	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_12
0x4010692	          0x4989c4	                            mov r12, rax	      5873	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_12
0x4010695	      0xe93ffdffff	                           jmp 0x40103d9	      5873	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_12
0x401069a	    0x660f1f440000	                    nop word [rax + rax]	      5873	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_12
0x40106a0	        0x488d4306	                      lea rax, [rbx + 6]	      5884	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_8
0x40106a4	      0x4889442418	             mov qword [rsp + 0x18], rax	      5884	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_8
0x40106a9	        0x8078ff3d	                cmp byte [rax - 1], 0x3d	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0x40106ad	     0xf8463ffffff	                            je 0x4010616	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0x40106b3	       0xf1f440000	                   nop dword [rax + rax]	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0x40106b8	          0x4889df	                            mov rdi, rbx	      5979	syntax.c	FUNCTION_91	CALL_36
0x40106bb	      0xe800000000	                          call 0x40106c0	      5979	syntax.c	FUNCTION_91	CALL_36
0x40106c0	            0x31ff	                            xor edi, edi	      5981	syntax.c	FUNCTION_91	CALL_38
0x40106c2	      0xba05000000	                              mov edx, 5	      5981	syntax.c	FUNCTION_91	CALL_38
0x40106c7	      0xbe00000000	                              mov esi, 0	      5981	syntax.c	FUNCTION_91	CALL_38
0x40106cc	      0xe800000000	                          call 0x40106d1	      5981	syntax.c	FUNCTION_91	CALL_38
0x40106d1	          0x4889ee	                            mov rsi, rbp	      5981	syntax.c	FUNCTION_91	CALL_38
0x40106d4	          0x4889c7	                            mov rdi, rax	      5981	syntax.c	FUNCTION_91	CALL_38
0x40106d7	      0xe800000000	                          call 0x40106dc	      5981	syntax.c	FUNCTION_91	CALL_38
0x40106dc	      0xe965010000	                           jmp 0x4010846	      5981	syntax.c	FUNCTION_91	CALL_38
0x40106e1	     0xf1f80000000	                         nop dword [rax]	      5981	syntax.c	FUNCTION_91	CALL_38
0x40106e8	    0x488b05000000	            mov rax, qword [0x040106ef] 	      5876	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0x40106ef	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      9639	syntax.c	FUNCTION_148	CALL_1
0x40106f4	      0xbac7000000	                           mov edx, 0xc7	      9639	syntax.c	FUNCTION_148	CALL_1
0x40106f9	      0xbe00000000	                              mov esi, 0	      9639	syntax.c	FUNCTION_148	CALL_1
0x40106fe	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5876	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0x4010702	      0x4889442408	                mov qword [rsp + 8], rax	      5876	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0x4010707	      0xe800000000	                          call 0x401070c	      9639	syntax.c	FUNCTION_148	CALL_1
0x401070c	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      9640	syntax.c	FUNCTION_148	CALL_2
0x4010711	      0xe800000000	                          call 0x4010716	      9640	syntax.c	FUNCTION_148	CALL_2
0x4010716	    0x486305000000	         movsxd rax, dword [0x0401071d] 	      9641	syntax.c	FUNCTION_148	FOR_1
0x401071d	        0x488d14c0	                  lea rdx, [rax + rax*8]	      9641	syntax.c	FUNCTION_148	FOR_1
0x4010721	          0x4889c5	                            mov rbp, rax	      9641	syntax.c	FUNCTION_148	FOR_1
0x4010724	        0x488d1450	                  lea rdx, [rax + rdx*2]	      9641	syntax.c	FUNCTION_148	FOR_1
0x4010728	    0x488b05000000	            mov rax, qword [0x0401072f] 	      9641	syntax.c	FUNCTION_148	FOR_1
0x401072f	    0x4c8dbcd070ff	           lea r15, [rax + rdx*8 - 0x90]	      9641	syntax.c	FUNCTION_148	FOR_1
0x4010737	            0xeb27	                           jmp 0x4010760	      9641	syntax.c	FUNCTION_148	FOR_1
0x4010739	     0xf1f80000000	                         nop dword [rax]	      9641	syntax.c	FUNCTION_148	FOR_1
0x4010740	          0x498b37	                    mov rsi, qword [r15]	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x4010743	          0x4885f6	                           test rsi, rsi	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x4010746	            0x740e	                            je 0x4010756	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x4010748	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x401074d	      0xe800000000	                          call 0x4010752	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x4010752	            0x85c0	                           test eax, eax	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x4010754	            0x7413	                            je 0x4010769	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x4010756	    0x4981ef980000	                           sub r15, 0x98	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x401075d	          0x4489f5	                           mov ebp, r14d	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x4010760	          0x4189ee	                           mov r14d, ebp	      9641	syntax.c	FUNCTION_148	FOR_1
0x4010763	        0x4183ee01	                             sub r14d, 1	      9641	syntax.c	FUNCTION_148	FOR_1
0x4010767	            0x79d7	                           jns 0x4010740	      9641	syntax.c	FUNCTION_148	FOR_1
0x4010769	      0x488b442408	                mov rax, qword [rsp + 8]	      5876	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0x401076e	    0x6689a8a00200	              mov word [rax + 0x2a0], bp	      5876	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0x4010775	      0xe95ffcffff	                           jmp 0x40103d9	      5876	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0x401077a	    0x660f1f440000	                    nop word [rax + rax]	      5876	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0x4010780	        0x488d430b	                    lea rax, [rbx + 0xb]	      5886	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_3	IF_9
0x4010784	      0x4889442418	             mov qword [rsp + 0x18], rax	      5886	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_3	IF_9
0x4010789	      0xe97efeffff	                           jmp 0x401060c	      5886	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_3	IF_9
0x401078e	            0x6690	                                     nop	      5886	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_3	IF_9
0x4010790	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      5898	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	IF_12
0x4010794	    0x488982b80200	            mov qword [rdx + 0x2b8], rax	      5898	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	IF_12
0x401079b	      0xe939fcffff	                           jmp 0x40103d9	      5898	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	IF_12
0x40107a0	    0x488982b00200	            mov qword [rdx + 0x2b0], rax	      5900	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_5	IF_13
0x40107a7	      0xe92dfcffff	                           jmp 0x40103d9	      5900	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_5	IF_13
0x40107ac	         0xf1f4000	                         nop dword [rax]	      5900	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_5	IF_13
0x40107b0	    0x488b15000000	            mov rdx, qword [0x040107b7] 	      5871	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5	CALL_11
0x40107b7	          0x4c29e0	                            sub rax, r12	      5871	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5	CALL_11
0x40107ba	          0x4c89e7	                            mov rdi, r12	      5871	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5	CALL_11
0x40107bd	          0x4889c6	                            mov rsi, rax	      5871	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5	CALL_11
0x40107c0	        0x488b6a10	            mov rbp, qword [rdx + 0x10] 	      5871	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5	CALL_11
0x40107c4	      0xe800000000	                          call 0x40107c9	      5871	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5	CALL_11
0x40107c9	    0x668985a00200	              mov word [rbp + 0x2a0], ax	      5871	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5	CALL_11
0x40107d0	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5871	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5	CALL_11
0x40107d5	      0xe9b0feffff	                           jmp 0x401068a	      5871	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5	CALL_11
0x40107da	    0x660f1f440000	                    nop word [rax + rax]	      5871	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5	CALL_11
0x40107e0	        0x418b4d30	            mov ecx, dword [r13 + 0x30] 	      5907	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0x40107e4	            0x85c9	                           test ecx, ecx	      5907	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0x40107e6	     0xf85edfbffff	                           jne 0x40103d9	      5907	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0x40107ec	    0x488b05000000	            mov rax, qword [0x040107f3] 	      5909	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0x40107f3	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5909	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0x40107f7	    0x48c780a80200	    mov qword [rax + 0x2a8], 0x7fffffff 	      5909	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0x4010802	    0x48c780b00200	              mov qword [rax + 0x2b0], 0	      5910	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0x401080d	      0xe9c7fbffff	                           jmp 0x40103d9	      5910	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0x4010812	    0x660f1f440000	                    nop word [rax + rax]	      5910	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0x4010818	          0x4889df	                            mov rdi, rbx	      5979	syntax.c	FUNCTION_91	CALL_36
0x401081b	      0xe800000000	                          call 0x4010820	      5979	syntax.c	FUNCTION_91	CALL_36
0x4010820	          0x4889ef	                            mov rdi, rbp	      5984	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_39
0x4010823	      0xe800000000	                          call 0x4010828	      5984	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_39
0x4010828	      0xbf23000000	                           mov edi, 0x23	      5985	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_40
0x401082d	        0x49894508	                mov qword [r13 + 8], rax	      5984	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_39
0x4010831	      0xe800000000	                          call 0x4010836	      5985	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_40
0x4010836	    0x488b05000000	            mov rax, qword [0x0401083d] 	      5986	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_41
0x401083d	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      5986	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_41
0x4010841	      0xe800000000	                          call 0x4010846	      5986	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_41
0x4010846	    0x488b8424e800	            mov rax, qword [rsp + 0xe8] 	      5988	syntax.c	FUNCTION_91
0x401084e	    0x644833042528	                xor rax, qword fs:[0x28]	      5988	syntax.c	FUNCTION_91
0x4010857	     0xf85dc000000	                           jne 0x4010939	      5988	syntax.c	FUNCTION_91
0x401085d	    0x4881c4f80000	                           add rsp, 0xf8	      5988	syntax.c	FUNCTION_91
0x4010864	              0x5b	                                 pop rbx	      5988	syntax.c	FUNCTION_91
0x4010865	              0x5d	                                 pop rbp	      5988	syntax.c	FUNCTION_91
0x4010866	            0x415c	                                 pop r12	      5988	syntax.c	FUNCTION_91
0x4010868	            0x415d	                                 pop r13	      5988	syntax.c	FUNCTION_91
0x401086a	            0x415e	                                 pop r14	      5988	syntax.c	FUNCTION_91
0x401086c	            0x415f	                                 pop r15	      5988	syntax.c	FUNCTION_91
0x401086e	              0xc3	                                     ret	      5988	syntax.c	FUNCTION_91
0x401086f	      0xbe01000000	                              mov esi, 1	      5853	syntax.c	FUNCTION_91	IF_1	CALL_2
0x4010874	          0x4c89ef	                            mov rdi, r13	      5853	syntax.c	FUNCTION_91	IF_1	CALL_2
0x4010877	      0xe82457ffff	                   call sym.syn_cmd_list	      5853	syntax.c	FUNCTION_91	IF_1	CALL_2
0x401087c	            0xebc8	                           jmp 0x4010846	      5853	syntax.c	FUNCTION_91	IF_1	CALL_2
0x401087e	        0x4d896500	                    mov qword [r13], r12	      5965	syntax.c	FUNCTION_91	WHILE_1	ELSE_9
0x4010882	      0xbf00000000	                              mov edi, 0	      5966	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	IF_23	CALL_30
0x4010887	      0xb906000000	                              mov ecx, 6	      5966	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	IF_23	CALL_30
0x401088c	          0x4889c6	                            mov rsi, rax	      5966	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	IF_23	CALL_30
0x401088f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5966	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	IF_23	CALL_30
0x4010891	     0xf8493000000	                            je 0x401092a	      5966	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	IF_23	CALL_30
0x4010897	      0xbf00000000	                              mov edi, 0	      5968	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24	CALL_32
0x401089c	      0xb907000000	                              mov ecx, 7	      5968	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24	CALL_32
0x40108a1	          0x4889c6	                            mov rsi, rax	      5968	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24	CALL_32
0x40108a4	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5968	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24	CALL_32
0x40108a6	            0x7473	                            je 0x401091b	      5968	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24	CALL_32
0x40108a8	      0xbf00000000	                              mov edi, 0	      5970	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25	CALL_34
0x40108ad	      0xb906000000	                              mov ecx, 6	      5970	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25	CALL_34
0x40108b2	          0x4889c6	                            mov rsi, rax	      5970	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25	CALL_34
0x40108b5	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5970	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25	CALL_34
0x40108b7	     0xf85fbfdffff	                           jne 0x40106b8	      5970	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25	CALL_34
0x40108bd	      0xbe01000000	                              mov esi, 1	      5971	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25
0x40108c2	          0x4c89ef	                            mov rdi, r13	      5971	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25
0x40108c5	      0xe8669effff	                  call sym.syn_cmd_clear	      5971	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25
0x40108ca	          0x4889df	                            mov rdi, rbx	      5979	syntax.c	FUNCTION_91	CALL_36
0x40108cd	      0xe800000000	                          call 0x40108d2	      5979	syntax.c	FUNCTION_91	CALL_36
0x40108d2	      0xe96fffffff	                           jmp 0x4010846	      5979	syntax.c	FUNCTION_91	CALL_36
0x40108d7	            0x31ff	                            xor edi, edi	      5922	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18	CALL_23
0x40108d9	      0xba05000000	                              mov edx, 5	      5922	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18	CALL_23
0x40108de	      0xbe00000000	                              mov esi, 0	      5922	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18	CALL_23
0x40108e3	      0xe800000000	                          call 0x40108e8	      5922	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18	CALL_23
0x40108e8	          0x4889c7	                            mov rdi, rax	      5922	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18	CALL_23
0x40108eb	      0xe800000000	                          call 0x40108f0	      5922	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18	CALL_23
0x40108f0	            0xebd8	                           jmp 0x40108ca	      5924	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18
0x40108f2	    0x488bb8c00200	           mov rdi, qword [rax + 0x2c0] 	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0x40108f9	          0x4885ff	                           test rdi, rdi	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0x40108fc	            0x74cc	                            je 0x40108ca	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0x40108fe	      0xe800000000	                          call 0x4010903	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0x4010903	    0x488b05000000	            mov rax, qword [0x0401090a] 	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0x401090a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0x401090e	    0x48c780c00200	              mov qword [rax + 0x2c0], 0	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0x4010919	            0xebaf	                           jmp 0x40108ca	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0x401091b	      0xbe01000000	                              mov esi, 1	      5969	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24
0x4010920	          0x4c89ef	                            mov rdi, r13	      5969	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24
0x4010923	      0xe848e7ffff	                 call sym.syn_cmd_region	      5969	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24
0x4010928	            0xeba0	                           jmp 0x40108ca	      5969	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24
0x401092a	      0xbe01000000	                              mov esi, 1	      5967	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	CALL_31
0x401092f	          0x4c89ef	                            mov rdi, r13	      5967	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	CALL_31
0x4010932	      0xe8b9efffff	                  call sym.syn_cmd_match	      5967	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	CALL_31
0x4010937	            0xeb91	                           jmp 0x40108ca	      5967	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	CALL_31
0x4010939	      0xe800000000	                          call 0x401093e	      5988	syntax.c	FUNCTION_91
syn_check_cluster	DO,0:functions,0:IF,2:WHILE,0:CALL,4:ELSE,1:SWITCH,0:FOR,0	120
0x4002500	            0x4157	                                push r15	      5577	syntax.c	FUNCTION_86
0x4002502	            0x4156	                                push r14	      5577	syntax.c	FUNCTION_86
0x4002504	            0x4155	                                push r13	      5577	syntax.c	FUNCTION_86
0x4002506	            0x4154	                                push r12	      5577	syntax.c	FUNCTION_86
0x4002508	              0x55	                                push rbp	      5577	syntax.c	FUNCTION_86
0x4002509	              0x53	                                push rbx	      5577	syntax.c	FUNCTION_86
0x400250a	            0x31db	                            xor ebx, ebx	      5583	syntax.c	FUNCTION_86	IF_1
0x400250c	        0x4883ec08	                              sub rsp, 8	      5577	syntax.c	FUNCTION_86
0x4002510	      0xe800000000	                          call 0x4002515	      5581	syntax.c	FUNCTION_86	CALL_1
0x4002515	          0x4885c0	                           test rax, rax	      5582	syntax.c	FUNCTION_86	IF_1
0x4002518	     0xf8473010000	                            je 0x4002691	      5582	syntax.c	FUNCTION_86	IF_1
0x400251e	          0x4889c7	                            mov rdi, rax	      5540	syntax.c	FUNCTION_84	CALL_1
0x4002521	          0x4989c5	                            mov r13, rax	      5540	syntax.c	FUNCTION_84	CALL_1
0x4002524	      0xe800000000	                          call 0x4002529	      5540	syntax.c	FUNCTION_84	CALL_1
0x4002529	          0x4885c0	                           test rax, rax	      5541	syntax.c	FUNCTION_84	IF_1
0x400252c	          0x4989c6	                            mov r14, rax	      5540	syntax.c	FUNCTION_84	CALL_1
0x400252f	            0x7460	                            je 0x4002591	      5541	syntax.c	FUNCTION_84	IF_1
0x4002531	    0x488b05000000	            mov rax, qword [0x04002538] 	      5543	syntax.c	FUNCTION_84	FOR_1
0x4002538	        0x4c8b7810	            mov r15, qword [rax + 0x10] 	      5543	syntax.c	FUNCTION_84	FOR_1
0x400253c	    0x496387780200	        movsxd rax, dword [r15 + 0x278] 	      5543	syntax.c	FUNCTION_84	FOR_1
0x4002543	          0x4889c3	                            mov rbx, rax	      5543	syntax.c	FUNCTION_84	FOR_1
0x4002546	        0x488d0440	                  lea rax, [rax + rax*2]	      5543	syntax.c	FUNCTION_84	FOR_1
0x400254a	    0x488d2cc5e8ff	                 lea rbp, [rax*8 - 0x18]	      5543	syntax.c	FUNCTION_84	FOR_1
0x4002552	            0xeb2c	                           jmp 0x4002580	      5543	syntax.c	FUNCTION_84	FOR_1
0x4002554	         0xf1f4000	                         nop dword [rax]	      5543	syntax.c	FUNCTION_84	FOR_1
0x4002558	    0x498b87880200	           mov rax, qword [r15 + 0x288] 	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2
0x400255f	      0x488b742808	         mov rsi, qword [rax + rbp + 8] 	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2
0x4002564	          0x4885f6	                           test rsi, rsi	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2
0x4002567	            0x7410	                            je 0x4002579	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2
0x4002569	          0x4c89f7	                            mov rdi, r14	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0x400256c	      0xe800000000	                          call 0x4002571	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0x4002571	            0x85c0	                           test eax, eax	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0x4002573	     0xf842f010000	                            je 0x40026a8	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0x4002579	        0x4883ed18	                           sub rbp, 0x18	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0x400257d	          0x4489e3	                           mov ebx, r12d	      5577	syntax.c	FUNCTION_86
0x4002580	          0x4189dc	                           mov r12d, ebx	      5543	syntax.c	FUNCTION_84	FOR_1
0x4002583	        0x4183ec01	                             sub r12d, 1	      5543	syntax.c	FUNCTION_84	FOR_1
0x4002587	            0x79cf	                           jns 0x4002558	      5543	syntax.c	FUNCTION_84	FOR_1
0x4002589	          0x4c89f7	                            mov rdi, r14	      5547	syntax.c	FUNCTION_84	CALL_3
0x400258c	      0xe800000000	                          call 0x4002591	      5547	syntax.c	FUNCTION_84	CALL_3
0x4002591	    0x488b05000000	            mov rax, qword [0x04002598] 	      5606	syntax.c	FUNCTION_87	IF_1
0x4002598	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      5606	syntax.c	FUNCTION_87	IF_1
0x400259c	    0x4883bf880200	              cmp qword [rdi + 0x288], 0	      5606	syntax.c	FUNCTION_87	IF_1
0x40025a4	     0xf844b010000	                            je 0x40026f5	      5606	syntax.c	FUNCTION_87	IF_1
0x40025aa	    0x8baf78020000	           mov ebp, dword [rdi + 0x278] 	      5612	syntax.c	FUNCTION_87
0x40025b0	    0x81fd26260000	                         cmp ebp, 0x2626	      5613	syntax.c	FUNCTION_87	IF_2
0x40025b6	     0xf8f14010000	                            jg 0x40026d0	      5613	syntax.c	FUNCTION_87	IF_2
0x40025bc	    0x4881c7780200	                          add rdi, 0x278	      5623	syntax.c	FUNCTION_87	IF_3	CALL_4
0x40025c3	      0xbe01000000	                              mov esi, 1	      5623	syntax.c	FUNCTION_87	IF_3	CALL_4
0x40025c8	      0xe800000000	                          call 0x40025cd	      5623	syntax.c	FUNCTION_87	IF_3	CALL_4
0x40025cd	            0x85c0	                           test eax, eax	      5623	syntax.c	FUNCTION_87	IF_3	CALL_4
0x40025cf	            0x89c3	                            mov ebx, eax	      5623	syntax.c	FUNCTION_87	IF_3	CALL_4
0x40025d1	     0xf84e5000000	                            je 0x40026bc	      5623	syntax.c	FUNCTION_87	IF_3	CALL_4
0x40025d7	          0x4863c5	                         movsxd rax, ebp	      5629	syntax.c	FUNCTION_87	CALL_6
0x40025da	          0x4c89ef	                            mov rdi, r13	      5631	syntax.c	FUNCTION_87	CALL_7
0x40025dd	        0x488d1c40	                  lea rbx, [rax + rax*2]	      5629	syntax.c	FUNCTION_87	CALL_6
0x40025e1	    0x488b05000000	            mov rax, qword [0x040025e8] 	      5629	syntax.c	FUNCTION_87	CALL_6
0x40025e8	        0x48c1e303	                              shl rbx, 3	      5629	syntax.c	FUNCTION_87	CALL_6
0x40025ec	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5629	syntax.c	FUNCTION_87	CALL_6
0x40025f0	          0x4889d9	                            mov rcx, rbx	        90	string3.h	FUNCTION_173	CALL_6
0x40025f3	          0x4989dc	                            mov r12, rbx	      5630	syntax.c	FUNCTION_87
0x40025f6	    0x480388880200	            add rcx, qword [rax + 0x288]	        90	string3.h	FUNCTION_173	CALL_6
0x40025fd	    0x48c701000000	                      mov qword [rcx], 0	        90	string3.h	FUNCTION_173	CALL_6
0x4002604	    0x488b05000000	            mov rax, qword [0x0400260b] 	      5630	syntax.c	FUNCTION_87
0x400260b	    0x48c741080000	                  mov qword [rcx + 8], 0	        90	string3.h	FUNCTION_173	CALL_6
0x4002613	    0x48c741100000	               mov qword [rcx + 0x10], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400261b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5630	syntax.c	FUNCTION_87
0x400261f	    0x4c03a0880200	            add r12, qword [rax + 0x288]	      5630	syntax.c	FUNCTION_87
0x4002626	        0x4d892c24	                    mov qword [r12], r13	      5630	syntax.c	FUNCTION_87
0x400262a	      0xe800000000	                          call 0x400262f	      5631	syntax.c	FUNCTION_87	CALL_7
0x400262f	      0x4989442408	                mov qword [r12 + 8], rax	      5631	syntax.c	FUNCTION_87	CALL_7
0x4002634	    0x488b05000000	            mov rax, qword [0x0400263b] 	      5632	syntax.c	FUNCTION_87
0x400263b	      0xbe00000000	                              mov esi, 0	      5635	syntax.c	FUNCTION_87	IF_4	CALL_8
0x4002640	          0x4c89ef	                            mov rdi, r13	      5635	syntax.c	FUNCTION_87	IF_4	CALL_8
0x4002643	        0x4c8b6010	            mov r12, qword [rax + 0x10] 	      5632	syntax.c	FUNCTION_87
0x4002647	    0x498b84248802	           mov rax, qword [r12 + 0x288] 	      5632	syntax.c	FUNCTION_87
0x400264f	    0x48c744181000	         mov qword [rax + rbx + 0x10], 0	      5632	syntax.c	FUNCTION_87
0x4002658	    0x418384247802	              add dword [r12 + 0x278], 1	      5633	syntax.c	FUNCTION_87
0x4002661	    0x8d9dd8590000	                 lea ebx, [rbp + 0x59d8]	      5636	syntax.c	FUNCTION_87	IF_4
0x4002667	      0xe800000000	                          call 0x400266c	      5635	syntax.c	FUNCTION_87	IF_4	CALL_8
0x400266c	            0x85c0	                           test eax, eax	      5635	syntax.c	FUNCTION_87	IF_4	CALL_8
0x400266e	            0x7508	                           jne 0x4002678	      5635	syntax.c	FUNCTION_87	IF_4	CALL_8
0x4002670	    0x41899c249002	            mov dword [r12 + 0x290], ebx	      5636	syntax.c	FUNCTION_87	IF_4
0x4002678	      0xbe00000000	                              mov esi, 0	      5637	syntax.c	FUNCTION_87	IF_5	CALL_9
0x400267d	          0x4c89ef	                            mov rdi, r13	      5637	syntax.c	FUNCTION_87	IF_5	CALL_9
0x4002680	      0xe800000000	                          call 0x4002685	      5637	syntax.c	FUNCTION_87	IF_5	CALL_9
0x4002685	            0x85c0	                           test eax, eax	      5637	syntax.c	FUNCTION_87	IF_5	CALL_9
0x4002687	            0x7508	                           jne 0x4002691	      5637	syntax.c	FUNCTION_87	IF_5	CALL_9
0x4002689	    0x41899c249402	            mov dword [r12 + 0x294], ebx	      5638	syntax.c	FUNCTION_87	IF_5
0x4002691	        0x4883c408	                              add rsp, 8	      5591	syntax.c	FUNCTION_86
0x4002695	            0x89d8	                            mov eax, ebx	      5591	syntax.c	FUNCTION_86
0x4002697	              0x5b	                                 pop rbx	      5591	syntax.c	FUNCTION_86
0x4002698	              0x5d	                                 pop rbp	      5591	syntax.c	FUNCTION_86
0x4002699	            0x415c	                                 pop r12	      5591	syntax.c	FUNCTION_86
0x400269b	            0x415d	                                 pop r13	      5591	syntax.c	FUNCTION_86
0x400269d	            0x415e	                                 pop r14	      5591	syntax.c	FUNCTION_86
0x400269f	            0x415f	                                 pop r15	      5591	syntax.c	FUNCTION_86
0x40026a1	              0xc3	                                     ret	      5591	syntax.c	FUNCTION_86
0x40026a2	    0x660f1f440000	                    nop word [rax + rax]	      5591	syntax.c	FUNCTION_86
0x40026a8	          0x4c89f7	                            mov rdi, r14	      5547	syntax.c	FUNCTION_84	CALL_3
0x40026ab	      0xe800000000	                          call 0x40026b0	      5547	syntax.c	FUNCTION_84	CALL_3
0x40026b0	    0x81c3d7590000	                         add ebx, 0x59d7	      5586	syntax.c	FUNCTION_86	IF_2
0x40026b6	     0xf84d5feffff	                            je 0x4002591	      5586	syntax.c	FUNCTION_86	IF_2
0x40026bc	          0x4c89ef	                            mov rdi, r13	      5589	syntax.c	FUNCTION_86	CALL_4
0x40026bf	      0xe800000000	                          call 0x40026c4	      5589	syntax.c	FUNCTION_86	CALL_4
0x40026c4	            0xebcb	                           jmp 0x4002691	      5589	syntax.c	FUNCTION_86	CALL_4
0x40026c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5589	syntax.c	FUNCTION_86	CALL_4
0x40026d0	      0xba05000000	                              mov edx, 5	      5615	syntax.c	FUNCTION_87	IF_2	CALL_2
0x40026d5	      0xbe00000000	                              mov esi, 0	      5615	syntax.c	FUNCTION_87	IF_2	CALL_2
0x40026da	            0x31ff	                            xor edi, edi	      5615	syntax.c	FUNCTION_87	IF_2	CALL_2
0x40026dc	      0xe800000000	                          call 0x40026e1	      5615	syntax.c	FUNCTION_87	IF_2	CALL_2
0x40026e1	          0x4889c7	                            mov rdi, rax	      5615	syntax.c	FUNCTION_87	IF_2	CALL_2
0x40026e4	            0x31db	                            xor ebx, ebx	      5617	syntax.c	FUNCTION_87	IF_2
0x40026e6	      0xe800000000	                          call 0x40026eb	      5615	syntax.c	FUNCTION_87	IF_2	CALL_2
0x40026eb	          0x4c89ef	                            mov rdi, r13	      5616	syntax.c	FUNCTION_87	IF_2	CALL_3
0x40026ee	      0xe800000000	                          call 0x40026f3	      5616	syntax.c	FUNCTION_87	IF_2	CALL_3
0x40026f3	            0xeb9c	                           jmp 0x4002691	      5616	syntax.c	FUNCTION_87	IF_2	CALL_3
0x40026f5	    0xc78780020000	          mov dword [rdi + 0x280], 0x18 	      5608	syntax.c	FUNCTION_87	IF_1
0x40026ff	    0xc78784020000	            mov dword [rdi + 0x284], 0xa	      5609	syntax.c	FUNCTION_87	IF_1
0x4002709	      0xe99cfeffff	                           jmp 0x40025aa	      5609	syntax.c	FUNCTION_87	IF_1
syn_cmd_keyword	DO,0:functions,0:IF,14:WHILE,1:CALL,26:ELSE,3:SWITCH,0:FOR,3	387
0x400fcf0	            0x4157	                                push r15	      4894	syntax.c	FUNCTION_79
0x400fcf2	            0x4156	                                push r14	      4894	syntax.c	FUNCTION_79
0x400fcf4	          0x4989fe	                            mov r14, rdi	      4894	syntax.c	FUNCTION_79
0x400fcf7	            0x4155	                                push r13	      4894	syntax.c	FUNCTION_79
0x400fcf9	            0x4154	                                push r12	      4894	syntax.c	FUNCTION_79
0x400fcfb	              0x55	                                push rbp	      4894	syntax.c	FUNCTION_79
0x400fcfc	              0x53	                                push rbx	      4894	syntax.c	FUNCTION_79
0x400fcfd	    0x4881ece80000	                           sub rsp, 0xe8	      4894	syntax.c	FUNCTION_79
0x400fd04	    0x64488b042528	                mov rax, qword fs:[0x28]	      4894	syntax.c	FUNCTION_79
0x400fd0d	    0x48898424d800	             mov qword [rsp + 0xd8], rax	      4894	syntax.c	FUNCTION_79
0x400fd15	            0x31c0	                            xor eax, eax	      4894	syntax.c	FUNCTION_79
0x400fd17	          0x488b07	                    mov rax, qword [rdi]	      4895	syntax.c	FUNCTION_79
0x400fd1a	    0xc74424440000	               mov dword [rsp + 0x44], 0	      4904	syntax.c	FUNCTION_79
0x400fd22	          0x4889c7	                            mov rdi, rax	      4582	syntax.c	FUNCTION_75	CALL_1
0x400fd25	          0x4889c5	                            mov rbp, rax	      4895	syntax.c	FUNCTION_79
0x400fd28	      0x4889442418	             mov qword [rsp + 0x18], rax	      4895	syntax.c	FUNCTION_79
0x400fd2d	      0xe800000000	                          call 0x400fd32	      4582	syntax.c	FUNCTION_75	CALL_1
0x400fd32	          0x4889c7	                            mov rdi, rax	      4583	syntax.c	FUNCTION_75	CALL_2
0x400fd35	          0x4889c3	                            mov rbx, rax	      4582	syntax.c	FUNCTION_75	CALL_1
0x400fd38	      0xe800000000	                          call 0x400fd3d	      4583	syntax.c	FUNCTION_75	CALL_2
0x400fd3d	         0xfb67d00	                   movzx edi, byte [rbp]	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x400fd41	          0x4989c7	                            mov r15, rax	      4583	syntax.c	FUNCTION_75	CALL_2
0x400fd44	      0xe800000000	                          call 0x400fd49	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x400fd49	            0x85c0	                           test eax, eax	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x400fd4b	     0xf858c010000	                           jne 0x400fedd	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x400fd51	        0x41803f00	                       cmp byte [r15], 0	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x400fd55	     0xf8482010000	                            je 0x400fedd	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x400fd5b	        0x418b4630	            mov eax, dword [r14 + 0x30] 	      4910	syntax.c	FUNCTION_79	IF_1	IF_2
0x400fd5f	    0xc7442420ffff	     mov dword [rsp + 0x20], 0xffffffff 	      4911	syntax.c	FUNCTION_79	IF_1	IF_2
0x400fd67	            0x85c0	                           test eax, eax	      4910	syntax.c	FUNCTION_79	IF_1	IF_2
0x400fd69	     0xf848e010000	                            je 0x400fefd	      4910	syntax.c	FUNCTION_79	IF_1	IF_2
0x400fd6f	          0x4c89ff	                            mov rdi, r15	      4916	syntax.c	FUNCTION_79	IF_1	CALL_4
0x400fd72	      0xe800000000	                          call 0x400fd77	      4916	syntax.c	FUNCTION_79	IF_1	CALL_4
0x400fd77	          0x8d7801	                      lea edi, [rax + 1]	      4916	syntax.c	FUNCTION_79	IF_1	CALL_4
0x400fd7a	      0xe800000000	                          call 0x400fd7f	      4916	syntax.c	FUNCTION_79	IF_1	CALL_4
0x400fd7f	          0x4885c0	                           test rax, rax	      4917	syntax.c	FUNCTION_79	IF_1	IF_4
0x400fd82	          0x4889c5	                            mov rbp, rax	      4916	syntax.c	FUNCTION_79	IF_1	CALL_4
0x400fd85	      0x4889442428	             mov qword [rsp + 0x28], rax	      4916	syntax.c	FUNCTION_79	IF_1	CALL_4
0x400fd8a	     0xf84fe000000	                            je 0x400fe8e	      4917	syntax.c	FUNCTION_79	IF_1	IF_4
0x400fd90	    0xc74424500000	               mov dword [rsp + 0x50], 0	      4919	syntax.c	FUNCTION_79	IF_1	IF_4
0x400fd98	    0xc74424540100	               mov dword [rsp + 0x54], 1	      4920	syntax.c	FUNCTION_79	IF_1	IF_4
0x400fda0	            0x31db	                            xor ebx, ebx	      4931	syntax.c	FUNCTION_79	IF_1	IF_4
0x400fda2	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4921	syntax.c	FUNCTION_79	IF_1	IF_4
0x400fdab	      0xc644246000	                mov byte [rsp + 0x60], 0	      4922	syntax.c	FUNCTION_79	IF_1	IF_4
0x400fdb0	    0x48c744247000	               mov qword [rsp + 0x70], 0	      4923	syntax.c	FUNCTION_79	IF_1	IF_4
0x400fdb9	    0x48c744247800	               mov qword [rsp + 0x78], 0	      4924	syntax.c	FUNCTION_79	IF_1	IF_4
0x400fdc2	    0x660f1f440000	                    nop word [rax + rax]	      4924	syntax.c	FUNCTION_79	IF_1	IF_4
0x400fdc8	        0x410fb63f	                   movzx edi, byte [r15]	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x400fdcc	      0xe800000000	                          call 0x400fdd1	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x400fdd1	            0x85c0	                           test eax, eax	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x400fdd3	     0xf8585000000	                           jne 0x400fe5e	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x400fdd9	        0x418b4e30	            mov ecx, dword [r14 + 0x30] 	      4935	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_7
0x400fddd	      0x488d542444	                   lea rdx, [rsp + 0x44]	      4935	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_7
0x400fde2	      0x488d742450	                   lea rsi, [rsp + 0x50]	      4935	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_7
0x400fde7	          0x4c89ff	                            mov rdi, r15	      4935	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_7
0x400fdea	      0xe811ebffff	                call sym.get_syn_options	      4935	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_7
0x400fdef	          0x4885c0	                           test rax, rax	      4937	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	IF_5	CALL_8
0x400fdf2	          0x4989c7	                            mov r15, rax	      4935	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_7
0x400fdf5	            0x7467	                            je 0x400fe5e	      4937	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	IF_5	CALL_8
0x400fdf7	           0xfb638	                   movzx edi, byte [rax]	      4937	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	IF_5	CALL_8
0x400fdfa	      0xe800000000	                          call 0x400fdff	      4937	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	IF_5	CALL_8
0x400fdff	            0x85c0	                           test eax, eax	      4937	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	IF_5	CALL_8
0x400fe01	            0x755b	                           jne 0x400fe5e	      4937	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	IF_5	CALL_8
0x400fe03	        0x410fb607	                   movzx eax, byte [r15]	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x400fe07	          0x4889ea	                            mov rdx, rbp	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x400fe0a	            0xa8df	                           test al, 0xdf	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x400fe0c	            0x7515	                           jne 0x400fe23	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x400fe0e	            0xeb30	                           jmp 0x400fe40	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x400fe10	        0x4883c201	                              add rdx, 1	      4944	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1
0x400fe14	          0x8842ff	                  mov byte [rdx - 1], al	      4944	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1
0x400fe17	         0xfb64101	               movzx eax, byte [rcx + 1]	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x400fe1b	        0x4c8d7901	                      lea r15, [rcx + 1]	      4944	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1
0x400fe1f	            0xa8df	                           test al, 0xdf	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x400fe21	            0x741d	                            je 0x400fe40	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x400fe23	            0x3c09	                               cmp al, 9	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x400fe25	            0x7419	                            je 0x400fe40	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x400fe27	            0x3c5c	                            cmp al, 0x5c	      4942	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	IF_6
0x400fe29	          0x4c89f9	                            mov rcx, r15	      4942	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	IF_6
0x400fe2c	            0x75e2	                           jne 0x400fe10	      4942	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	IF_6
0x400fe2e	      0x410fb67701	               movzx esi, byte [r15 + 1]	      4942	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	IF_6
0x400fe33	          0x4084f6	                           test sil, sil	      4942	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	IF_6
0x400fe36	            0x74d8	                            je 0x400fe10	      4942	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	IF_6
0x400fe38	        0x4883c101	                              add rcx, 1	      4943	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	IF_6
0x400fe3c	            0x89f0	                            mov eax, esi	      4943	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	IF_6
0x400fe3e	            0xebd0	                           jmp 0x400fe10	      4943	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	IF_6
0x400fe40	          0x4c89ff	                            mov rdi, r15	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x400fe43	          0xc60200	                       mov byte [rdx], 0	      4946	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1
0x400fe46	        0x488d6a01	                      lea rbp, [rdx + 1]	      4946	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1
0x400fe4a	          0x83c301	                              add ebx, 1	      4947	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1
0x400fe4d	      0xe800000000	                          call 0x400fe52	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x400fe52	          0x4885c0	                           test rax, rax	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x400fe55	          0x4989c7	                            mov r15, rax	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x400fe58	     0xf856affffff	                           jne 0x400fdc8	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x400fe5e	        0x458b4e30	            mov r9d, dword [r14 + 0x30] 	      4950	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7
0x400fe62	          0x4585c9	                           test r9d, r9d	      4950	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7
0x400fe65	     0xf84bd000000	                            je 0x400ff28	      4950	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7
0x400fe6b	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      5003	syntax.c	FUNCTION_79	IF_1	IF_4	CALL_19
0x400fe70	      0xe800000000	                          call 0x400fe75	      5003	syntax.c	FUNCTION_79	IF_1	IF_4	CALL_19
0x400fe75	      0x488b7c2470	            mov rdi, qword [rsp + 0x70] 	      5004	syntax.c	FUNCTION_79	IF_1	IF_4	CALL_20
0x400fe7a	      0xe800000000	                          call 0x400fe7f	      5004	syntax.c	FUNCTION_79	IF_1	IF_4	CALL_20
0x400fe7f	      0x488b7c2478	            mov rdi, qword [rsp + 0x78] 	      5005	syntax.c	FUNCTION_79	IF_1	IF_4	CALL_21
0x400fe84	      0xe800000000	                          call 0x400fe89	      5005	syntax.c	FUNCTION_79	IF_1	IF_4	CALL_21
0x400fe89	          0x4d85ff	                           test r15, r15	      5009	syntax.c	FUNCTION_79	IF_14
0x400fe8c	            0x744f	                            je 0x400fedd	      5009	syntax.c	FUNCTION_79	IF_14
0x400fe8e	          0x4c89ff	                            mov rdi, r15	      5010	syntax.c	FUNCTION_79	CALL_22
0x400fe91	      0xe800000000	                          call 0x400fe96	      5010	syntax.c	FUNCTION_79	CALL_22
0x400fe96	        0x49894608	                mov qword [r14 + 8], rax	      5010	syntax.c	FUNCTION_79	CALL_22
0x400fe9a	      0xbf23000000	                           mov edi, 0x23	      5014	syntax.c	FUNCTION_79	CALL_25
0x400fe9f	      0xe800000000	                          call 0x400fea4	      5014	syntax.c	FUNCTION_79	CALL_25
0x400fea4	    0x488b05000000	            mov rax, qword [0x0400feab] 	      5015	syntax.c	FUNCTION_79	CALL_26
0x400feab	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      5015	syntax.c	FUNCTION_79	CALL_26
0x400feaf	      0xe800000000	                          call 0x400feb4	      5015	syntax.c	FUNCTION_79	CALL_26
0x400feb4	    0x488b8424d800	            mov rax, qword [rsp + 0xd8] 	      5016	syntax.c	FUNCTION_79
0x400febc	    0x644833042528	                xor rax, qword fs:[0x28]	      5016	syntax.c	FUNCTION_79
0x400fec5	     0xf8581040000	                           jne 0x401034c	      5016	syntax.c	FUNCTION_79
0x400fecb	    0x4881c4e80000	                           add rsp, 0xe8	      5016	syntax.c	FUNCTION_79
0x400fed2	              0x5b	                                 pop rbx	      5016	syntax.c	FUNCTION_79
0x400fed3	              0x5d	                                 pop rbp	      5016	syntax.c	FUNCTION_79
0x400fed4	            0x415c	                                 pop r12	      5016	syntax.c	FUNCTION_79
0x400fed6	            0x415d	                                 pop r13	      5016	syntax.c	FUNCTION_79
0x400fed8	            0x415e	                                 pop r14	      5016	syntax.c	FUNCTION_79
0x400feda	            0x415f	                                 pop r15	      5016	syntax.c	FUNCTION_79
0x400fedc	              0xc3	                                     ret	      5016	syntax.c	FUNCTION_79
0x400fedd	            0x31ff	                            xor edi, edi	      5012	syntax.c	FUNCTION_79	CALL_24
0x400fedf	      0xba05000000	                              mov edx, 5	      5012	syntax.c	FUNCTION_79	CALL_24
0x400fee4	      0xbe00000000	                              mov esi, 0	      5012	syntax.c	FUNCTION_79	CALL_24
0x400fee9	      0xe800000000	                          call 0x400feee	      5012	syntax.c	FUNCTION_79	CALL_24
0x400feee	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      5012	syntax.c	FUNCTION_79	CALL_24
0x400fef3	          0x4889c7	                            mov rdi, rax	      5012	syntax.c	FUNCTION_79	CALL_24
0x400fef6	      0xe800000000	                          call 0x400fefb	      5012	syntax.c	FUNCTION_79	CALL_24
0x400fefb	            0xeb9d	                           jmp 0x400fe9a	      5012	syntax.c	FUNCTION_79	CALL_24
0x400fefd	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4913	syntax.c	FUNCTION_79	IF_1	CALL_2
0x400ff02	          0x4829c3	                            sub rbx, rax	      4913	syntax.c	FUNCTION_79	IF_1	CALL_2
0x400ff05	          0x4889c7	                            mov rdi, rax	      4913	syntax.c	FUNCTION_79	IF_1	CALL_2
0x400ff08	          0x4889de	                            mov rsi, rbx	      4913	syntax.c	FUNCTION_79	IF_1	CALL_2
0x400ff0b	      0xe800000000	                          call 0x400ff10	      4913	syntax.c	FUNCTION_79	IF_1	CALL_2
0x400ff10	            0x85c0	                           test eax, eax	      4914	syntax.c	FUNCTION_79	IF_1	IF_3
0x400ff12	        0x89442420	             mov dword [rsp + 0x20], eax	      4913	syntax.c	FUNCTION_79	IF_1	CALL_2
0x400ff16	     0xf8472ffffff	                            je 0x400fe8e	      4914	syntax.c	FUNCTION_79	IF_1	IF_3
0x400ff1c	      0xe94efeffff	                           jmp 0x400fd6f	      4914	syntax.c	FUNCTION_79	IF_1	IF_3
0x400ff21	     0xf1f80000000	                         nop dword [rax]	      4914	syntax.c	FUNCTION_79	IF_1	IF_3
0x400ff28	        0x8b442450	            mov eax, dword [rsp + 0x50] 	      4795	syntax.c	FUNCTION_77	IF_1
0x400ff2c	            0xa801	                              test al, 1	      4795	syntax.c	FUNCTION_77	IF_1
0x400ff2e	            0x7528	                           jne 0x400ff58	      4795	syntax.c	FUNCTION_77	IF_1
0x400ff30	    0x488b15000000	            mov rdx, qword [0x0400ff37] 	      4795	syntax.c	FUNCTION_77	IF_1
0x400ff37	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      4795	syntax.c	FUNCTION_77	IF_1
0x400ff3b	    0x8b9204030000	           mov edx, dword [rdx + 0x304] 	      4795	syntax.c	FUNCTION_77	IF_1
0x400ff41	            0x85d2	                           test edx, edx	      4795	syntax.c	FUNCTION_77	IF_1
0x400ff43	            0x7413	                            je 0x400ff58	      4795	syntax.c	FUNCTION_77	IF_1
0x400ff45	          0x83c801	                               or eax, 1	      4797	syntax.c	FUNCTION_77
0x400ff48	    0x81fad7590000	                         cmp edx, 0x59d7	      4798	syntax.c	FUNCTION_77	IF_2
0x400ff4e	        0x89442450	             mov dword [rsp + 0x50], eax	      4797	syntax.c	FUNCTION_77
0x400ff52	     0xf8f5b030000	                            jg 0x40102b3	      4798	syntax.c	FUNCTION_77	IF_2
0x400ff58	          0x8d43ff	                      lea eax, [rbx - 1]	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x400ff5b	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x400ff5e	        0x89442424	             mov dword [rsp + 0x24], eax	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x400ff62	     0xf8403ffffff	                            je 0x400fe6b	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x400ff68	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x400ff6d	      0x4c897c2430	             mov qword [rsp + 0x30], r15	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x400ff72	      0x4c89742438	             mov qword [rsp + 0x38], r14	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x400ff77	      0x4889442410	             mov qword [rsp + 0x10], rax	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x400ff7c	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      4960	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_12
0x400ff81	      0xbe5b000000	                           mov esi, 0x5b	      4960	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_12
0x400ff86	      0xe800000000	                          call 0x400ff8b	      4960	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_12
0x400ff8b	          0x4989c7	                            mov r15, rax	      4960	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_12
0x400ff8e	            0x6690	                                     nop	      4960	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_12
0x400ff90	          0x4d85ff	                           test r15, r15	      4962	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_8
0x400ff93	            0x7404	                            je 0x400ff99	      4962	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_8
0x400ff95	        0x41c60700	                       mov byte [r15], 0	      4963	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_8
0x400ff99	        0x8b442444	            mov eax, dword [rsp + 0x44] 	      4964	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_13
0x400ff9d	      0x488b6c2478	            mov rbp, qword [rsp + 0x78] 	      4964	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_13
0x400ffa2	      0x4c8b642470	            mov r12, qword [rsp + 0x70] 	      4964	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_13
0x400ffa7	      0x448b742450	           mov r14d, dword [rsp + 0x50] 	      4964	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_13
0x400ffac	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      4531	syntax.c	FUNCTION_74	IF_1
0x400ffb1	        0x89442404	                mov dword [rsp + 4], eax	      4964	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_13
0x400ffb5	    0x488b05000000	            mov rax, qword [0x0400ffbc] 	      4531	syntax.c	FUNCTION_74	IF_1
0x400ffbc	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4531	syntax.c	FUNCTION_74	IF_1
0x400ffc0	    0x8bb858020000	           mov edi, dword [rax + 0x258] 	      4531	syntax.c	FUNCTION_74	IF_1
0x400ffc6	            0x85ff	                           test edi, edi	      4531	syntax.c	FUNCTION_74	IF_1
0x400ffc8	     0xf85b2010000	                           jne 0x4010180	      4531	syntax.c	FUNCTION_74	IF_1
0x400ffce	          0x4889f7	                            mov rdi, rsi	      4536	syntax.c	FUNCTION_74	CALL_4
0x400ffd1	      0x4889742408	                mov qword [rsp + 8], rsi	      4536	syntax.c	FUNCTION_74	CALL_4
0x400ffd6	      0xe800000000	                          call 0x400ffdb	      4536	syntax.c	FUNCTION_74	CALL_4
0x400ffdb	          0x8d7830	                   lea edi, [rax + 0x30]	      4536	syntax.c	FUNCTION_74	CALL_4
0x400ffde	      0xe800000000	                          call 0x400ffe3	      4536	syntax.c	FUNCTION_74	CALL_4
0x400ffe3	          0x4885c0	                           test rax, rax	      4537	syntax.c	FUNCTION_74	IF_2
0x400ffe6	          0x4889c3	                            mov rbx, rax	      4536	syntax.c	FUNCTION_74	CALL_4
0x400ffe9	     0xf8457010000	                            je 0x4010146	      4537	syntax.c	FUNCTION_74	IF_2
0x400ffef	        0x4c8d6828	                   lea r13, [rax + 0x28]	      4539	syntax.c	FUNCTION_74	CALL_5
0x400fff3	      0x488b742408	                mov rsi, qword [rsp + 8]	       110	string3.h	FUNCTION_176	CALL_3
0x400fff8	          0x4c89ef	                            mov rdi, r13	       110	string3.h	FUNCTION_176	CALL_3
0x400fffb	      0xe800000000	                          call 0x4010000	       110	string3.h	FUNCTION_176	CALL_3
0x4010000	       0xfb7442420	           movzx eax, word [rsp + 0x20] 	      4540	syntax.c	FUNCTION_74
0x4010005	          0x4d85e4	                           test r12, r12	      6206	syntax.c	FUNCTION_93	IF_1
0x4010008	        0x44897320	            mov dword [rbx + 0x20], r14d	      4542	syntax.c	FUNCTION_74
0x401000c	        0x6689430c	                mov word [rbx + 0xc], ax	      4540	syntax.c	FUNCTION_74
0x4010010	    0x8b0500000000	            mov eax, dword [0x04010016] 	      4541	syntax.c	FUNCTION_74
0x4010016	          0x894308	                mov dword [rbx + 8], eax	      4541	syntax.c	FUNCTION_74
0x4010019	        0x8b442404	                mov eax, dword [rsp + 4]	      4543	syntax.c	FUNCTION_74
0x401001d	          0x894324	             mov dword [rbx + 0x24], eax	      4543	syntax.c	FUNCTION_74
0x4010020	     0xf8480020000	                            je 0x40102a6	      6206	syntax.c	FUNCTION_93	IF_1
0x4010026	    0x6641833c2400	                       cmp word [r12], 0	      6209	syntax.c	FUNCTION_93	FOR_1
0x401002c	     0xf841e020000	                            je 0x4010250	      6209	syntax.c	FUNCTION_93	FOR_1
0x4010032	      0x498d442402	                      lea rax, [r12 + 2]	      6209	syntax.c	FUNCTION_93	FOR_1
0x4010037	            0x31d2	                            xor edx, edx	      6209	syntax.c	FUNCTION_93	FOR_1
0x4010039	            0xeb07	                           jmp 0x4010042	      6209	syntax.c	FUNCTION_93	FOR_1
0x401003b	       0xf1f440000	                   nop dword [rax + rax]	      6209	syntax.c	FUNCTION_93	FOR_1
0x4010040	            0x89ca	                            mov edx, ecx	      6209	syntax.c	FUNCTION_93	FOR_1
0x4010042	        0x4883c002	                              add rax, 2	      6209	syntax.c	FUNCTION_93	FOR_1
0x4010046	          0x8d4a01	                      lea ecx, [rdx + 1]	      6209	syntax.c	FUNCTION_93	FOR_1
0x4010049	      0x668378fe00	                   cmp word [rax - 2], 0	      6209	syntax.c	FUNCTION_93	FOR_1
0x401004e	            0x75f0	                           jne 0x4010040	      6209	syntax.c	FUNCTION_93	FOR_1
0x4010050	        0x8d7c1204	                lea edi, [rdx + rdx + 4]	      6209	syntax.c	FUNCTION_93	FOR_1
0x4010054	          0x4189fe	                           mov r14d, edi	      6209	syntax.c	FUNCTION_93	FOR_1
0x4010057	      0xe800000000	                          call 0x401005c	      6212	syntax.c	FUNCTION_93	CALL_1
0x401005c	          0x4885c0	                           test rax, rax	      6213	syntax.c	FUNCTION_93	IF_2
0x401005f	          0x4889c1	                            mov rcx, rax	      6212	syntax.c	FUNCTION_93	CALL_1
0x4010062	            0x7411	                            je 0x4010075	      6213	syntax.c	FUNCTION_93	IF_2
0x4010064	          0x4963d6	                        movsxd rdx, r14d	        59	string3.h	FUNCTION_171	CALL_3
0x4010067	          0x4c89e6	                            mov rsi, r12	        59	string3.h	FUNCTION_171	CALL_3
0x401006a	          0x4889c7	                            mov rdi, rax	        59	string3.h	FUNCTION_171	CALL_3
0x401006d	      0xe800000000	                          call 0x4010072	        59	string3.h	FUNCTION_171	CALL_3
0x4010072	          0x4889c1	                            mov rcx, rax	        59	string3.h	FUNCTION_171	CALL_3
0x4010075	    0x488b05000000	            mov rax, qword [0x0401007c] 	      4546	syntax.c	FUNCTION_74	IF_3
0x401007c	        0x48894b10	             mov qword [rbx + 0x10], rcx	      4544	syntax.c	FUNCTION_74	CALL_6
0x4010080	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4546	syntax.c	FUNCTION_74	IF_3
0x4010084	    0xc78098020000	              mov dword [rax + 0x298], 1	      4546	syntax.c	FUNCTION_74	IF_3
0x401008e	          0x4885ed	                           test rbp, rbp	      6206	syntax.c	FUNCTION_93	IF_1
0x4010091	            0x7453	                            je 0x40100e6	      6206	syntax.c	FUNCTION_93	IF_1
0x4010093	      0x66837d0000	                       cmp word [rbp], 0	      6209	syntax.c	FUNCTION_93	FOR_1
0x4010098	     0xf84a2010000	                            je 0x4010240	      6209	syntax.c	FUNCTION_93	FOR_1
0x401009e	        0x488d4502	                      lea rax, [rbp + 2]	      6209	syntax.c	FUNCTION_93	FOR_1
0x40100a2	            0x31d2	                            xor edx, edx	      6209	syntax.c	FUNCTION_93	FOR_1
0x40100a4	            0xeb0c	                           jmp 0x40100b2	      6209	syntax.c	FUNCTION_93	FOR_1
0x40100a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      6209	syntax.c	FUNCTION_93	FOR_1
0x40100b0	            0x89ca	                            mov edx, ecx	      6209	syntax.c	FUNCTION_93	FOR_1
0x40100b2	        0x4883c002	                              add rax, 2	      6209	syntax.c	FUNCTION_93	FOR_1
0x40100b6	          0x8d4a01	                      lea ecx, [rdx + 1]	      6209	syntax.c	FUNCTION_93	FOR_1
0x40100b9	      0x668378fe00	                   cmp word [rax - 2], 0	      6209	syntax.c	FUNCTION_93	FOR_1
0x40100be	            0x75f0	                           jne 0x40100b0	      6209	syntax.c	FUNCTION_93	FOR_1
0x40100c0	        0x8d7c1204	                lea edi, [rdx + rdx + 4]	      6209	syntax.c	FUNCTION_93	FOR_1
0x40100c4	          0x4189fc	                           mov r12d, edi	      6209	syntax.c	FUNCTION_93	FOR_1
0x40100c7	      0xe800000000	                          call 0x40100cc	      6212	syntax.c	FUNCTION_93	CALL_1
0x40100cc	          0x4885c0	                           test rax, rax	      6213	syntax.c	FUNCTION_93	IF_2
0x40100cf	     0xf840b010000	                            je 0x40101e0	      6213	syntax.c	FUNCTION_93	IF_2
0x40100d5	          0x4889ee	                            mov rsi, rbp	        59	string3.h	FUNCTION_171	CALL_3
0x40100d8	          0x4963d4	                        movsxd rdx, r12d	        59	string3.h	FUNCTION_171	CALL_3
0x40100db	          0x4889c7	                            mov rdi, rax	        59	string3.h	FUNCTION_171	CALL_3
0x40100de	      0xe800000000	                          call 0x40100e3	        59	string3.h	FUNCTION_171	CALL_3
0x40100e3	          0x4889c5	                            mov rbp, rax	        59	string3.h	FUNCTION_171	CALL_3
0x40100e6	    0x488b05000000	            mov rax, qword [0x040100ed] 	      4549	syntax.c	FUNCTION_74	IF_4
0x40100ed	        0x48896b18	             mov qword [rbx + 0x18], rbp	      4547	syntax.c	FUNCTION_74	CALL_7
0x40100f1	          0x4c89ef	                            mov rdi, r13	      4554	syntax.c	FUNCTION_74	CALL_8
0x40100f4	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4549	syntax.c	FUNCTION_74	IF_4
0x40100f8	    0x8b8858020000	           mov ecx, dword [rax + 0x258] 	      4550	syntax.c	FUNCTION_74	IF_4
0x40100fe	    0x488da8280100	                  lea rbp, [rax + 0x128]	      4550	syntax.c	FUNCTION_74	IF_4
0x4010105	            0x85c9	                           test ecx, ecx	      4550	syntax.c	FUNCTION_74	IF_4
0x4010107	        0x480f44e8	                          cmove rbp, rax	      4550	syntax.c	FUNCTION_74	IF_4
0x401010b	      0xe800000000	                          call 0x4010110	      4554	syntax.c	FUNCTION_74	CALL_8
0x4010110	          0x4c89ee	                            mov rsi, r13	      4555	syntax.c	FUNCTION_74	CALL_9
0x4010113	          0x4889c2	                            mov rdx, rax	      4555	syntax.c	FUNCTION_74	CALL_9
0x4010116	          0x4889ef	                            mov rdi, rbp	      4555	syntax.c	FUNCTION_74	CALL_9
0x4010119	          0x4989c4	                            mov r12, rax	      4554	syntax.c	FUNCTION_74	CALL_8
0x401011c	      0xe800000000	                          call 0x4010121	      4555	syntax.c	FUNCTION_74	CALL_9
0x4010121	        0x488b5008	                mov rdx, qword [rax + 8]	      4556	syntax.c	FUNCTION_74	IF_5	CALL_10
0x4010125	          0x4885d2	                           test rdx, rdx	      4556	syntax.c	FUNCTION_74	IF_5	CALL_10
0x4010128	     0xf84b9000000	                            je 0x40101e7	      4556	syntax.c	FUNCTION_74	IF_5	CALL_10
0x401012e	    0x4881fa000000	                              cmp rdx, 0	      4556	syntax.c	FUNCTION_74	IF_5	CALL_10
0x4010135	     0xf84ac000000	                            je 0x40101e7	      4556	syntax.c	FUNCTION_74	IF_5	CALL_10
0x401013b	        0x4883ea28	                           sub rdx, 0x28	      4565	syntax.c	FUNCTION_74	ELSE_3
0x401013f	          0x488913	                    mov qword [rbx], rdx	      4565	syntax.c	FUNCTION_74	ELSE_3
0x4010142	        0x4c896808	                mov qword [rax + 8], r13	      4566	syntax.c	FUNCTION_74	ELSE_3
0x4010146	          0x4d85ff	                           test r15, r15	      4967	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_9
0x4010149	     0xf84b9000000	                            je 0x4010208	      4967	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_9
0x401014f	      0x410fb64701	               movzx eax, byte [r15 + 1]	      4969	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10
0x4010154	            0x84c0	                             test al, al	      4969	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10
0x4010156	     0xf8404010000	                            je 0x4010260	      4969	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10
0x401015c	            0x3c5d	                            cmp al, 0x5d	      4974	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11
0x401015e	     0xf8429010000	                            je 0x401028d	      4974	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11
0x4010164	    0x8b1500000000	            mov edx, dword [0x0401016a] 	      4986	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x401016a	            0x85d2	                           test edx, edx	      4986	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x401016c	            0x7542	                           jne 0x40101b0	      4986	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x401016e	          0x418807	                      mov byte [r15], al	      4996	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	ELSE_2
0x4010171	        0x4983c701	                              add r15, 1	      4997	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	ELSE_2
0x4010175	      0xe916feffff	                           jmp 0x400ff90	      4997	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	ELSE_2
0x401017a	    0x660f1f440000	                    nop word [rax + rax]	      4997	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	ELSE_2
0x4010180	          0x4889f7	                            mov rdi, rsi	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x4010183	          0x4889f3	                            mov rbx, rsi	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x4010186	      0xe800000000	                          call 0x401018b	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x401018b	    0x488d94248000	                   lea rdx, [rsp + 0x80]	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x4010193	            0x89c6	                            mov esi, eax	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x4010195	      0xb951000000	                           mov ecx, 0x51	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x401019a	          0x4889df	                            mov rdi, rbx	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x401019d	      0xe800000000	                          call 0x40101a2	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x40101a2	          0x4889c6	                            mov rsi, rax	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x40101a5	      0xe924feffff	                           jmp 0x400ffce	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x40101aa	    0x660f1f440000	                    nop word [rax + rax]	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x40101b0	        0x498d6f01	                      lea rbp, [r15 + 1]	      4988	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x40101b4	          0x4889ef	                            mov rdi, rbp	      4988	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x40101b7	    0xff1500000000	                 call qword [0x040101bd]	      4988	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x40101bd	          0x4863d8	                         movsxd rbx, eax	      4990	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13	CALL_18
0x40101c0	          0x4c89ff	                            mov rdi, r15	        59	string3.h	FUNCTION_171	CALL_3
0x40101c3	          0x4889ee	                            mov rsi, rbp	        59	string3.h	FUNCTION_171	CALL_3
0x40101c6	          0x4889da	                            mov rdx, rbx	        59	string3.h	FUNCTION_171	CALL_3
0x40101c9	          0x4901df	                            add r15, rbx	      4991	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x40101cc	      0xe800000000	                          call 0x40101d1	        59	string3.h	FUNCTION_171	CALL_3
0x40101d1	      0xe9bafdffff	                           jmp 0x400ff90	        59	string3.h	FUNCTION_171	CALL_3
0x40101d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        59	string3.h	FUNCTION_171	CALL_3
0x40101e0	            0x31ed	                            xor ebp, ebp	      6213	syntax.c	FUNCTION_93	IF_2
0x40101e2	      0xe9fffeffff	                           jmp 0x40100e6	      6213	syntax.c	FUNCTION_93	IF_2
0x40101e7	    0x48c703000000	                      mov qword [rbx], 0	      4559	syntax.c	FUNCTION_74	IF_5
0x40101ee	          0x4c89e1	                            mov rcx, r12	      4560	syntax.c	FUNCTION_74	IF_5	CALL_11
0x40101f1	          0x4c89ea	                            mov rdx, r13	      4560	syntax.c	FUNCTION_74	IF_5	CALL_11
0x40101f4	          0x4889c6	                            mov rsi, rax	      4560	syntax.c	FUNCTION_74	IF_5	CALL_11
0x40101f7	          0x4889ef	                            mov rdi, rbp	      4560	syntax.c	FUNCTION_74	IF_5	CALL_11
0x40101fa	      0xe800000000	                          call 0x40101ff	      4560	syntax.c	FUNCTION_74	IF_5	CALL_11
0x40101ff	          0x4d85ff	                           test r15, r15	      4967	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_9
0x4010202	     0xf8547ffffff	                           jne 0x401014f	      4967	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_9
0x4010208	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x401020d	          0x4889df	                            mov rdi, rbx	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x4010210	      0xe800000000	                          call 0x4010215	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x4010215	      0x488d440301	                lea rax, [rbx + rax + 1]	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x401021a	      0x836c242401	               sub dword [rsp + 0x24], 1	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x401021f	      0x4889442410	             mov qword [rsp + 0x10], rax	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x4010224	        0x8b442424	            mov eax, dword [rsp + 0x24] 	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x4010228	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x401022b	     0xf854bfdffff	                           jne 0x400ff7c	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x4010231	      0x4c8b7c2430	            mov r15, qword [rsp + 0x30] 	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x4010236	      0x4c8b742438	            mov r14, qword [rsp + 0x38] 	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x401023b	      0xe92bfcffff	                           jmp 0x400fe6b	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x4010240	    0x41bc02000000	                             mov r12d, 2	      6209	syntax.c	FUNCTION_93	FOR_1
0x4010246	      0xbf02000000	                              mov edi, 2	      6209	syntax.c	FUNCTION_93	FOR_1
0x401024b	      0xe977feffff	                           jmp 0x40100c7	      6209	syntax.c	FUNCTION_93	FOR_1
0x4010250	    0x41be02000000	                             mov r14d, 2	      6209	syntax.c	FUNCTION_93	FOR_1
0x4010256	      0xbf02000000	                              mov edi, 2	      6209	syntax.c	FUNCTION_93	FOR_1
0x401025b	      0xe9f7fdffff	                           jmp 0x4010057	      6209	syntax.c	FUNCTION_93	FOR_1
0x4010260	            0x31ff	                            xor edi, edi	      4971	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10	CALL_15
0x4010262	      0xba05000000	                              mov edx, 5	      4971	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10	CALL_15
0x4010267	      0xbe00000000	                              mov esi, 0	      4971	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10	CALL_15
0x401026c	      0x4c8b7c2430	            mov r15, qword [rsp + 0x30] 	      4971	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10	CALL_15
0x4010271	      0x4c8b742438	            mov r14, qword [rsp + 0x38] 	      4971	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10	CALL_15
0x4010276	      0xe800000000	                          call 0x401027b	      4971	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10	CALL_15
0x401027b	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      4971	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10	CALL_15
0x4010280	          0x4889c7	                            mov rdi, rax	      4971	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10	CALL_15
0x4010283	      0xe800000000	                          call 0x4010288	      4971	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10	CALL_15
0x4010288	      0xe9defbffff	                           jmp 0x400fe6b	      4972	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10
0x401028d	      0x41807f0200	                   cmp byte [r15 + 2], 0	      4976	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12
0x4010292	     0xf8580000000	                           jne 0x4010318	      4976	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12
0x4010298	        0x498d4701	                      lea rax, [r15 + 1]	      4982	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11
0x401029c	      0x4889442410	             mov qword [rsp + 0x10], rax	      4982	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11
0x40102a1	      0xe962ffffff	                           jmp 0x4010208	      4983	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11
0x40102a6	    0x48c743100000	               mov qword [rbx + 0x10], 0	      4544	syntax.c	FUNCTION_74	CALL_6
0x40102ae	      0xe9dbfdffff	                           jmp 0x401008e	      4544	syntax.c	FUNCTION_74	CALL_6
0x40102b3	      0xbf04000000	                              mov edi, 4	      4801	syntax.c	FUNCTION_77	IF_2	CALL_1
0x40102b8	      0xe800000000	                          call 0x40102bd	      4801	syntax.c	FUNCTION_77	IF_2	CALL_1
0x40102bd	          0x4885c0	                           test rax, rax	      4804	syntax.c	FUNCTION_77	IF_2	IF_3
0x40102c0	      0x4889442448	             mov qword [rsp + 0x48], rax	      4801	syntax.c	FUNCTION_77	IF_2	CALL_1
0x40102c5	     0xf848dfcffff	                            je 0x400ff58	      4804	syntax.c	FUNCTION_77	IF_2	IF_3
0x40102cb	    0x488b15000000	            mov rdx, qword [0x040102d2] 	      4802	syntax.c	FUNCTION_77	IF_2
0x40102d2	       0xfb7742420	           movzx esi, word [rsp + 0x20] 	      4806	syntax.c	FUNCTION_77	IF_2	IF_3
0x40102d7	          0x4531c0	                            xor r8d, r8d	      4807	syntax.c	FUNCTION_77	IF_2	IF_3
0x40102da	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      4802	syntax.c	FUNCTION_77	IF_2
0x40102de	    0x8b9104030000	           mov edx, dword [rcx + 0x304] 	      4802	syntax.c	FUNCTION_77	IF_2
0x40102e4	          0x668930	                      mov word [rax], si	      4806	syntax.c	FUNCTION_77	IF_2	IF_3
0x40102e7	      0x488d742448	                   lea rsi, [rsp + 0x48]	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x40102ec	      0x6644894002	                 mov word [rax + 2], r8w	      4807	syntax.c	FUNCTION_77	IF_2	IF_3
0x40102f1	    0x8d8228a6ffff	                 lea eax, [rdx - 0x59d8]	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x40102f7	            0x4898	                                    cdqe	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x40102f9	        0x488d1440	                  lea rdx, [rax + rax*2]	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x40102fd	    0x488b81880200	           mov rax, qword [rcx + 0x288] 	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x4010304	      0x488d7cd010	          lea rdi, [rax + rdx*8 + 0x10] 	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x4010309	      0xba02000000	                              mov edx, 2	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x401030e	      0xe82d09ffff	               call sym.syn_combine_list	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x4010313	      0xe940fcffff	                           jmp 0x400ff58	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x4010318	            0x31ff	                            xor edi, edi	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x401031a	      0xba05000000	                              mov edx, 5	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x401031f	      0xbe00000000	                              mov esi, 0	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x4010324	          0x4d89fd	                            mov r13, r15	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x4010327	      0x4c8b742438	            mov r14, qword [rsp + 0x38] 	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x401032c	      0x4c8b7c2430	            mov r15, qword [rsp + 0x30] 	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x4010331	      0xe800000000	                          call 0x4010336	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x4010336	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x401033b	        0x498d5502	                      lea rdx, [r13 + 2]	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x401033f	          0x4889c7	                            mov rdi, rax	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x4010342	      0xe800000000	                          call 0x4010347	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x4010347	      0xe91ffbffff	                           jmp 0x400fe6b	      4980	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12
0x401034c	      0xe800000000	                          call 0x4010351	      5016	syntax.c	FUNCTION_79
lookup_color	DO,0:functions,0:IF,10:WHILE,0:CALL,1:ELSE,5:SWITCH,0:FOR,0	93
0x400bc30	            0x4156	                                push r14	      7295	syntax.c	FUNCTION_115
0x400bc32	            0x4155	                                push r13	      7295	syntax.c	FUNCTION_115
0x400bc34	            0x4154	                                push r12	      7295	syntax.c	FUNCTION_115
0x400bc36	              0x55	                                push rbp	      7295	syntax.c	FUNCTION_115
0x400bc37	          0x4863ef	                         movsxd rbp, edi	      7296	syntax.c	FUNCTION_115
0x400bc3a	    0x448b24ad0000	                 mov r12d, dword [rbp*4]	      7296	syntax.c	FUNCTION_115
0x400bc42	              0x53	                                push rbx	      7295	syntax.c	FUNCTION_115
0x400bc43	          0x4585e4	                         test r12d, r12d	      7300	syntax.c	FUNCTION_115	IF_1
0x400bc46	     0xf880c010000	                            js 0x400bd58	      7300	syntax.c	FUNCTION_115	IF_1
0x400bc4c	    0x8b1d00000000	            mov ebx, dword [0x0400bc52] 	      7303	syntax.c	FUNCTION_115	IF_2
0x400bc52	          0x83fb08	                              cmp ebx, 8	      7303	syntax.c	FUNCTION_115	IF_2
0x400bc55	     0xf84a5000000	                            je 0x400bd00	      7303	syntax.c	FUNCTION_115	IF_2
0x400bc5b	    0x81fbff000000	                           cmp ebx, 0xff	      7323	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0x400bc61	        0x410f9fc6	                               setg r14b	      7323	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0x400bc65	          0x83fb10	                           cmp ebx, 0x10	      7323	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0x400bc68	           0xf94c2	                                 sete dl	      7323	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0x400bc6b	          0x83fb58	                           cmp ebx, 0x58	      7323	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0x400bc6e	           0xf94c0	                                 sete al	      7323	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0x400bc71	             0x8c2	                               or dl, al	      7323	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0x400bc73	            0x751b	                           jne 0x400bc90	      7323	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0x400bc75	          0x4584f6	                         test r14b, r14b	      7323	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0x400bc78	          0x4489e0	                           mov eax, r12d	      7323	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0x400bc7b	            0x7513	                           jne 0x400bc90	      7323	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0x400bc7d	              0x5b	                                 pop rbx	      7352	syntax.c	FUNCTION_115
0x400bc7e	              0x5d	                                 pop rbp	      7352	syntax.c	FUNCTION_115
0x400bc7f	            0x415c	                                 pop r12	      7352	syntax.c	FUNCTION_115
0x400bc81	            0x415d	                                 pop r13	      7352	syntax.c	FUNCTION_115
0x400bc83	            0x415e	                                 pop r14	      7352	syntax.c	FUNCTION_115
0x400bc85	              0xc3	                                     ret	      7352	syntax.c	FUNCTION_115
0x400bc86	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7352	syntax.c	FUNCTION_115
0x400bc90	    0x4c8b2d000000	            mov r13, qword [0x0400bc97] 	      7330	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_6
0x400bc97	      0x41807d0000	                       cmp byte [r13], 0	      7330	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_6
0x400bc9c	            0x7532	                           jne 0x400bcd0	      7330	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_6
0x400bc9e	    0x4c8b2d000000	            mov r13, qword [0x0400bca5] 	      7333	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3
0x400bca5	      0x41807d0000	                       cmp byte [r13], 0	      7334	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7
0x400bcaa	            0x7524	                           jne 0x400bcd0	      7334	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7
0x400bcac	        0x4183fc0f	                           cmp r12d, 0xf	      7345	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_10
0x400bcb0	            0x753e	                           jne 0x400bcf0	      7345	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_10
0x400bcb2	          0x4584f6	                         test r14b, r14b	      7345	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_10
0x400bcb5	            0x7439	                            je 0x400bcf0	      7345	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_10
0x400bcb7	    0x833d00000000	               cmp dword [0x0400bcbe], 1	      7348	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_10
0x400bcbe	              0x5b	                                 pop rbx	      7352	syntax.c	FUNCTION_115
0x400bcbf	              0x5d	                                 pop rbp	      7352	syntax.c	FUNCTION_115
0x400bcc0	            0x415c	                                 pop r12	      7352	syntax.c	FUNCTION_115
0x400bcc2	            0x19c0	                            sbb eax, eax	      7348	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_10
0x400bcc4	            0x2428	                            and al, 0x28	      7348	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_10
0x400bcc6	       0x5e7000000	                           add eax, 0xe7	      7348	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_10
0x400bccb	            0x415d	                                 pop r13	      7352	syntax.c	FUNCTION_115
0x400bccd	            0x415e	                                 pop r14	      7352	syntax.c	FUNCTION_115
0x400bccf	              0xc3	                                     ret	      7352	syntax.c	FUNCTION_115
0x400bcd0	    0x81fb00010000	                          cmp ebx, 0x100	      7334	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7
0x400bcd6	            0x7e48	                           jle 0x400bd20	      7334	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7
0x400bcd8	    0x81fbff000000	                           cmp ebx, 0xff	      7339	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_4	IF_9
0x400bcde	            0x7e68	                           jle 0x400bd48	      7339	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_4	IF_9
0x400bce0	    0x448b24ad0000	                 mov r12d, dword [rbp*4]	      7340	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_4	IF_9
0x400bce8	            0xebc2	                           jmp 0x400bcac	      7340	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_4	IF_9
0x400bcea	    0x660f1f440000	                    nop word [rax + rax]	      7340	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_4	IF_9
0x400bcf0	              0x5b	                                 pop rbx	      7352	syntax.c	FUNCTION_115
0x400bcf1	          0x4489e0	                           mov eax, r12d	      7352	syntax.c	FUNCTION_115
0x400bcf4	              0x5d	                                 pop rbp	      7352	syntax.c	FUNCTION_115
0x400bcf5	            0x415c	                                 pop r12	      7352	syntax.c	FUNCTION_115
0x400bcf7	            0x415d	                                 pop r13	      7352	syntax.c	FUNCTION_115
0x400bcf9	            0x415e	                                 pop r14	      7352	syntax.c	FUNCTION_115
0x400bcfb	              0xc3	                                     ret	      7352	syntax.c	FUNCTION_115
0x400bcfc	         0xf1f4000	                         nop dword [rax]	      7352	syntax.c	FUNCTION_115
0x400bd00	            0x85f6	                           test esi, esi	      7311	syntax.c	FUNCTION_115	IF_2	IF_3
0x400bd02	    0x8b04ad000000	                  mov eax, dword [rbp*4]	      7309	syntax.c	FUNCTION_115	IF_2
0x400bd09	            0x7409	                            je 0x400bd14	      7311	syntax.c	FUNCTION_115	IF_2	IF_3
0x400bd0b	            0x31c9	                            xor ecx, ecx	      7316	syntax.c	FUNCTION_115	IF_2	IF_3	IF_4
0x400bd0d	            0xa808	                              test al, 8	      7316	syntax.c	FUNCTION_115	IF_2	IF_3	IF_4
0x400bd0f	           0xf95c1	                                setne cl	      7316	syntax.c	FUNCTION_115	IF_2	IF_3	IF_4
0x400bd12	            0x890a	                    mov dword [rdx], ecx	      7316	syntax.c	FUNCTION_115	IF_2	IF_3	IF_4
0x400bd14	              0x5b	                                 pop rbx	      7352	syntax.c	FUNCTION_115
0x400bd15	          0x83e007	                              and eax, 7	      7320	syntax.c	FUNCTION_115	IF_2	ELSE_1
0x400bd18	              0x5d	                                 pop rbp	      7352	syntax.c	FUNCTION_115
0x400bd19	            0x415c	                                 pop r12	      7352	syntax.c	FUNCTION_115
0x400bd1b	            0x415d	                                 pop r13	      7352	syntax.c	FUNCTION_115
0x400bd1d	            0x415e	                                 pop r14	      7352	syntax.c	FUNCTION_115
0x400bd1f	              0xc3	                                     ret	      7352	syntax.c	FUNCTION_115
0x400bd20	          0x4c89ef	                            mov rdi, r13	      7335	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_1
0x400bd23	      0xe800000000	                          call 0x400bd28	      7335	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_1
0x400bd28	    0x41807c05ff6d	         cmp byte [r13 + rax - 1], 0x6d 	      7335	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_1
0x400bd2e	     0xf8578ffffff	                           jne 0x400bcac	      7335	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_1
0x400bd34	          0x83fb58	                           cmp ebx, 0x58	      7337	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	IF_8
0x400bd37	            0x759f	                           jne 0x400bcd8	      7337	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	IF_8
0x400bd39	    0x8b04ad000000	                  mov eax, dword [rbp*4]	      7338	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	IF_8
0x400bd40	      0xe938ffffff	                           jmp 0x400bc7d	      7338	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	IF_8
0x400bd45	           0xf1f00	                         nop dword [rax]	      7338	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	IF_8
0x400bd48	    0x8b04ad000000	                  mov eax, dword [rbp*4]	      7342	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_5
0x400bd4f	      0xe929ffffff	                           jmp 0x400bc7d	      7342	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_5
0x400bd54	         0xf1f4000	                         nop dword [rax]	      7342	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_5
0x400bd58	      0xb8ffffffff	                     mov eax, 0xffffffff	      7301	syntax.c	FUNCTION_115	IF_1
0x400bd5d	      0xe91bffffff	                           jmp 0x400bc7d	      7301	syntax.c	FUNCTION_115	IF_1
syn_cmd_off	DO,0:functions,0:IF,0:WHILE,0:CALL,1:ELSE,0:SWITCH,0:FOR,0	28
0x4002000	              0x53	                                push rbx	      3910	syntax.c	FUNCTION_61
0x4002001	          0x4889fb	                            mov rbx, rdi	      3910	syntax.c	FUNCTION_61
0x4002004	        0x4883ec70	                           sub rsp, 0x70	      3910	syntax.c	FUNCTION_61
0x4002008	          0x488b3f	                    mov rdi, qword [rdi]	      3919	syntax.c	FUNCTION_62	CALL_1
0x400200b	    0x64488b042528	                mov rax, qword fs:[0x28]	      3910	syntax.c	FUNCTION_61
0x4002014	      0x4889442468	             mov qword [rsp + 0x68], rax	      3910	syntax.c	FUNCTION_61
0x4002019	            0x31c0	                            xor eax, eax	      3910	syntax.c	FUNCTION_61
0x400201b	      0xe800000000	                          call 0x4002020	      3919	syntax.c	FUNCTION_62	CALL_1
0x4002020	        0x48894308	                mov qword [rbx + 8], rax	      3919	syntax.c	FUNCTION_62	CALL_1
0x4002024	          0x8b4330	            mov eax, dword [rbx + 0x30] 	      3920	syntax.c	FUNCTION_62	IF_1
0x4002027	            0x85c0	                           test eax, eax	      3920	syntax.c	FUNCTION_62	IF_1
0x4002029	            0x752a	                           jne 0x4002055	      3920	syntax.c	FUNCTION_62	IF_1
0x400202b	      0x488d7c2403	                      lea rdi, [rsp + 3]	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x4002030	      0xb900000000	                              mov ecx, 0	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x4002035	      0xba00000000	                              mov edx, 0	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x400203a	      0xbe61000000	                           mov esi, 0x61	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x400203f	            0x31c0	                            xor eax, eax	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x4002041	    0xc70424736f20	               mov dword [rsp], 0x206f73	       110	string3.h	FUNCTION_176	CALL_3
0x4002048	      0xe800000000	                          call 0x400204d	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x400204d	          0x4889e7	                            mov rdi, rsp	      3924	syntax.c	FUNCTION_62	IF_1	CALL_4
0x4002050	      0xe800000000	                          call 0x4002055	      3924	syntax.c	FUNCTION_62	IF_1	CALL_4
0x4002055	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      3912	syntax.c	FUNCTION_61
0x400205a	    0x644833042528	                xor rax, qword fs:[0x28]	      3912	syntax.c	FUNCTION_61
0x4002063	            0x7506	                           jne 0x400206b	      3912	syntax.c	FUNCTION_61
0x4002065	        0x4883c470	                           add rsp, 0x70	      3912	syntax.c	FUNCTION_61
0x4002069	              0x5b	                                 pop rbx	      3912	syntax.c	FUNCTION_61
0x400206a	              0xc3	                                     ret	      3912	syntax.c	FUNCTION_61
0x400206b	      0xe800000000	                     call sym.syn_cmd_on	      3912	syntax.c	FUNCTION_61
get_syn_pattern	DO,1:functions,0:IF,14:WHILE,0:CALL,15:ELSE,2:SWITCH,1:FOR,1	216
0x40004c0	            0x4155	                                push r13	      5739	syntax.c	FUNCTION_90
0x40004c2	            0x4154	                                push r12	      5739	syntax.c	FUNCTION_90
0x40004c4	              0x55	                                push rbp	      5739	syntax.c	FUNCTION_90
0x40004c5	              0x53	                                push rbx	      5739	syntax.c	FUNCTION_90
0x40004c6	        0x4883ec18	                           sub rsp, 0x18	      5739	syntax.c	FUNCTION_90
0x40004ca	    0x64488b042528	                mov rax, qword fs:[0x28]	      5739	syntax.c	FUNCTION_90
0x40004d3	      0x4889442408	                mov qword [rsp + 8], rax	      5739	syntax.c	FUNCTION_90
0x40004d8	            0x31c0	                            xor eax, eax	      5739	syntax.c	FUNCTION_90
0x40004da	          0x4885ff	                           test rdi, rdi	      5746	syntax.c	FUNCTION_90	IF_1
0x40004dd	     0xf84c9010000	                            je 0x40006ac	      5746	syntax.c	FUNCTION_90	IF_1
0x40004e3	           0xfb607	                   movzx eax, byte [rdi]	      5746	syntax.c	FUNCTION_90	IF_1
0x40004e6	          0x4889fb	                            mov rbx, rdi	      5746	syntax.c	FUNCTION_90	IF_1
0x40004e9	            0x84c0	                             test al, al	      5746	syntax.c	FUNCTION_90	IF_1
0x40004eb	     0xf84bb010000	                            je 0x40006ac	      5746	syntax.c	FUNCTION_90	IF_1
0x40004f1	        0x807f0100	                   cmp byte [rdi + 1], 0	      5746	syntax.c	FUNCTION_90	IF_1
0x40004f5	     0xf84b1010000	                            je 0x40006ac	      5746	syntax.c	FUNCTION_90	IF_1
0x40004fb	        0x807f0200	                   cmp byte [rdi + 2], 0	      5746	syntax.c	FUNCTION_90	IF_1
0x40004ff	     0xf84a7010000	                            je 0x40006ac	      5746	syntax.c	FUNCTION_90	IF_1
0x4000505	        0x4c8d6701	                      lea r12, [rdi + 1]	      5749	syntax.c	FUNCTION_90	CALL_1
0x4000509	            0x31c9	                            xor ecx, ecx	      5749	syntax.c	FUNCTION_90	CALL_1
0x400050b	          0x4889f5	                            mov rbp, rsi	      5749	syntax.c	FUNCTION_90	CALL_1
0x400050e	      0xba01000000	                              mov edx, 1	      5749	syntax.c	FUNCTION_90	CALL_1
0x4000513	           0xfb6f0	                           movzx esi, al	      5749	syntax.c	FUNCTION_90	CALL_1
0x4000516	          0x4c89e7	                            mov rdi, r12	      5749	syntax.c	FUNCTION_90	CALL_1
0x4000519	      0xe800000000	                          call 0x400051e	      5749	syntax.c	FUNCTION_90	CALL_1
0x400051e	           0xfb633	                   movzx esi, byte [rbx]	      5750	syntax.c	FUNCTION_90	IF_2
0x4000521	        0x48890424	                    mov qword [rsp], rax	      5749	syntax.c	FUNCTION_90	CALL_1
0x4000525	          0x403830	                     cmp byte [rax], sil	      5750	syntax.c	FUNCTION_90	IF_2
0x4000528	     0xf8562010000	                           jne 0x4000690	      5750	syntax.c	FUNCTION_90	IF_2
0x400052e	          0x4829d8	                            sub rax, rbx	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0x4000531	          0x4c89e7	                            mov rdi, r12	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0x4000534	          0x8d70ff	                      lea esi, [rax - 1]	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0x4000537	      0xe800000000	                          call 0x400053c	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0x400053c	          0x4885c0	                           test rax, rax	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0x400053f	        0x48894560	            mov qword [rbp + 0x60], rax 	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0x4000543	     0xf8463010000	                            je 0x40006ac	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0x4000549	    0x4c8b25000000	            mov r12, qword [0x04000550] 	      5760	syntax.c	FUNCTION_90
0x4000550	      0xbe01000000	                              mov esi, 1	      5762	syntax.c	FUNCTION_90	CALL_5
0x4000555	          0x4889c7	                            mov rdi, rax	      5762	syntax.c	FUNCTION_90	CALL_5
0x4000558	    0x48c705000000	               mov qword [0x04000563], 0	      5761	syntax.c	FUNCTION_90
0x4000563	      0xe800000000	                          call 0x4000568	      5762	syntax.c	FUNCTION_90	CALL_5
0x4000568	          0x4885c0	                           test rax, rax	      5765	syntax.c	FUNCTION_90	IF_4
0x400056b	        0x48894568	            mov qword [rbp + 0x68], rax 	      5762	syntax.c	FUNCTION_90	CALL_5
0x400056f	    0x4c8925000000	            mov qword [0x04000576], r12 	      5763	syntax.c	FUNCTION_90
0x4000576	     0xf8430010000	                            je 0x40006ac	      5765	syntax.c	FUNCTION_90	IF_4
0x400057c	    0x488b05000000	            mov rax, qword [0x04000583] 	      5767	syntax.c	FUNCTION_90
0x4000583	        0x488d7d70	                   lea rdi, [rbp + 0x70]	      6691	syntax.c	FUNCTION_108	CALL_1
0x4000587	    0x41bc00000000	                             mov r12d, 0	      6691	syntax.c	FUNCTION_108	CALL_1
0x400058d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5767	syntax.c	FUNCTION_90
0x4000591	    0x8b8058020000	           mov eax, dword [rax + 0x258] 	      5767	syntax.c	FUNCTION_90
0x4000597	          0x89452c	            mov dword [rbp + 0x2c], eax 	      5767	syntax.c	FUNCTION_90
0x400059a	      0xe800000000	                          call 0x400059f	      6691	syntax.c	FUNCTION_108	CALL_1
0x400059f	    0x488dbd800000	                   lea rdi, [rbp + 0x80]	      6692	syntax.c	FUNCTION_108	CALL_2
0x40005a6	      0xe800000000	                          call 0x40005ab	      6692	syntax.c	FUNCTION_108	CALL_2
0x40005ab	        0x488b0424	                    mov rax, qword [rsp]	      5775	syntax.c	FUNCTION_90
0x40005af	    0x48c785900000	               mov qword [rbp + 0x90], 0	      6693	syntax.c	FUNCTION_108
0x40005ba	    0x48c785980000	               mov qword [rbp + 0x98], 0	      6694	syntax.c	FUNCTION_108
0x40005c5	        0x4883c001	                              add rax, 1	      5775	syntax.c	FUNCTION_90
0x40005c9	        0x48890424	                    mov qword [rsp], rax	      5775	syntax.c	FUNCTION_90
0x40005cd	           0xf1f00	                         nop dword [rax]	      5775	syntax.c	FUNCTION_90
0x40005d0	      0xb903000000	                              mov ecx, 3	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x40005d5	          0x4889c6	                            mov rsi, rax	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x40005d8	          0x4c89e7	                            mov rdi, r12	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x40005db	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x40005dd	     0xf84ed000000	                            je 0x40006d0	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x40005e3	      0xbf00000000	                              mov edi, 0	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x40005e8	      0xb903000000	                              mov ecx, 3	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x40005ed	          0x4889c6	                            mov rsi, rax	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x40005f0	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x40005f2	     0xf8438010000	                            je 0x4000730	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x40005f8	      0xbf00000000	                              mov edi, 0	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x40005fd	      0xb903000000	                              mov ecx, 3	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x4000602	          0x4889c6	                            mov rsi, rax	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x4000605	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x4000607	     0xf84bb010000	                            je 0x40007c8	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x400060d	      0xbf00000000	                              mov edi, 0	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x4000612	      0xb903000000	                              mov ecx, 3	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x4000617	          0x4889c6	                            mov rsi, rax	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x400061a	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x400061c	     0xf84be010000	                            je 0x40007e0	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x4000622	      0xbf00000000	                              mov edi, 0	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x4000627	      0xb903000000	                              mov ecx, 3	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x400062c	          0x4889c6	                            mov rsi, rax	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x400062f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x4000631	     0xf84c1010000	                            je 0x40007f8	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x4000637	      0xbf00000000	                              mov edi, 0	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x400063c	      0xb903000000	                              mov ecx, 3	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x4000641	          0x4889c6	                            mov rsi, rax	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x4000644	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x4000646	     0xf84c4010000	                            je 0x4000810	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x400064c	      0xbf00000000	                              mov edi, 0	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x4000651	      0xb903000000	                              mov ecx, 3	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x4000656	          0x4889c6	                            mov rsi, rax	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x4000659	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x400065b	     0xf84c7010000	                            je 0x4000828	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x4000661	           0xfb610	                   movzx edx, byte [rax]	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x4000664	           0xfb6fa	                           movzx edi, dl	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0x4000667	      0xe800000000	                          call 0x400066c	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0x400066c	            0x85c0	                           test eax, eax	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0x400066e	        0x488b3c24	                    mov rdi, qword [rsp]	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0x4000672	            0x750f	                           jne 0x4000683	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0x4000674	           0xfb607	                   movzx eax, byte [rdi]	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0x4000677	            0x3c20	                            cmp al, 0x20	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0x4000679	            0x7408	                            je 0x4000683	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0x400067b	            0x3c09	                               cmp al, 9	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0x400067d	     0xf85b7010000	                           jne 0x400083a	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0x4000683	      0xe800000000	                          call 0x4000688	      5833	syntax.c	FUNCTION_90	CALL_15
0x4000688	            0xeb24	                           jmp 0x40006ae	      5833	syntax.c	FUNCTION_90	CALL_15
0x400068a	    0x660f1f440000	                    nop word [rax + rax]	      5833	syntax.c	FUNCTION_90	CALL_15
0x4000690	      0xba05000000	                              mov edx, 5	      5752	syntax.c	FUNCTION_90	IF_2	CALL_3
0x4000695	      0xbe00000000	                              mov esi, 0	      5752	syntax.c	FUNCTION_90	IF_2	CALL_3
0x400069a	            0x31ff	                            xor edi, edi	      5830	syntax.c	FUNCTION_90	IF_14	CALL_14
0x400069c	      0xe800000000	                          call 0x40006a1	      5830	syntax.c	FUNCTION_90	IF_14	CALL_14
0x40006a1	          0x4889de	                            mov rsi, rbx	      5830	syntax.c	FUNCTION_90	IF_14	CALL_14
0x40006a4	          0x4889c7	                            mov rdi, rax	      5830	syntax.c	FUNCTION_90	IF_14	CALL_14
0x40006a7	      0xe800000000	                          call 0x40006ac	      5830	syntax.c	FUNCTION_90	IF_14	CALL_14
0x40006ac	            0x31c0	                            xor eax, eax	      5831	syntax.c	FUNCTION_90	IF_14
0x40006ae	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      5834	syntax.c	FUNCTION_90
0x40006b3	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      5834	syntax.c	FUNCTION_90
0x40006bc	     0xf8587010000	                           jne 0x4000849	      5834	syntax.c	FUNCTION_90
0x40006c2	        0x4883c418	                           add rsp, 0x18	      5834	syntax.c	FUNCTION_90
0x40006c6	              0x5b	                                 pop rbx	      5834	syntax.c	FUNCTION_90
0x40006c7	              0x5d	                                 pop rbp	      5834	syntax.c	FUNCTION_90
0x40006c8	            0x415c	                                 pop r12	      5834	syntax.c	FUNCTION_90
0x40006ca	            0x415d	                                 pop r13	      5834	syntax.c	FUNCTION_90
0x40006cc	              0xc3	                                     ret	      5834	syntax.c	FUNCTION_90
0x40006cd	           0xf1f00	                         nop dword [rax]	      5834	syntax.c	FUNCTION_90
0x40006d0	      0x66834d0440	                 or word [rbp + 4], 0x40	      5794	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0x40006d5	        0x4883c003	                              add rax, 3	      5797	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9
0x40006d9	          0x4889e7	                            mov rdi, rsp	      5798	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	CALL_8
0x40006dc	        0x48890424	                    mov qword [rsp], rax	      5797	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9
0x40006e0	      0xe800000000	                          call 0x40006e5	      5798	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	CALL_8
0x40006e5	         0xfb75504	               movzx edx, word [rbp + 4]	      5801	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0x40006e9	          0x894520	            mov dword [rbp + 0x20], eax 	      5798	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	CALL_8
0x40006ec	          0xf6c201	                              test dl, 1	      5801	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0x40006ef	     0xf8593000000	                           jne 0x4000788	      5801	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0x40006f5	        0x488b0c24	                    mov rcx, qword [rsp]	      5801	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0x40006f9	          0x83ca01	                               or edx, 1	      5803	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0x40006fc	          0x894508	                mov dword [rbp + 8], eax	      5804	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0x40006ff	        0x66895504	                  mov word [rbp + 4], dx	      5803	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0x4000703	           0xfb611	                   movzx edx, byte [rcx]	      5803	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0x4000706	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5803	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0x4000710	          0x80fa2c	                            cmp dl, 0x2c	      5821	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_13
0x4000713	     0xf854bffffff	                           jne 0x4000664	      5821	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_13
0x4000719	        0x488d4101	                      lea rax, [rcx + 1]	      5823	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0x400071d	        0x48890424	                    mov qword [rsp], rax	      5823	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0x4000721	      0xe9aafeffff	                           jmp 0x40005d0	      5823	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0x4000726	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5823	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0x4000730	      0xb900100000	                         mov ecx, 0x1000	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x4000735	      0xbe20000000	                           mov esi, 0x20	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x400073a	    0x41bd05000000	                             mov r13d, 5	      5778	syntax.c	FUNCTION_90	DO_1	FOR_1
0x4000740	         0xfb65003	               movzx edx, byte [rax + 3]	      5785	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x4000744	          0x80fa65	                            cmp dl, 0x65	      5785	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x4000747	            0x744f	                            je 0x4000798	      5785	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x4000749	          0x80fa73	                            cmp dl, 0x73	      5785	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x400074c	            0x7409	                            je 0x4000757	      5785	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x400074e	          0x80fa62	                            cmp dl, 0x62	      5785	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x4000751	     0xf850affffff	                           jne 0x4000661	      5785	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0x4000757	        0x66097504	                   or word [rbp + 4], si	      5794	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0x400075b	        0x488d4804	                      lea rcx, [rax + 4]	      5809	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1
0x400075f	        0x48890c24	                    mov qword [rsp], rcx	      5809	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1
0x4000763	         0xfb65004	               movzx edx, byte [rax + 4]	      5810	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11
0x4000767	          0x80fa2b	                            cmp dl, 0x2b	      5810	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11
0x400076a	            0x7434	                            je 0x40007a0	      5810	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11
0x400076c	          0x80fa2d	                            cmp dl, 0x2d	      5815	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12
0x400076f	            0x759f	                           jne 0x4000710	      5815	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12
0x4000771	        0x4883c005	                              add rax, 5	      5817	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12
0x4000775	          0x4889e7	                            mov rdi, rsp	      5818	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12	CALL_10
0x4000778	        0x48890424	                    mov qword [rsp], rax	      5817	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12
0x400077c	      0xe800000000	                          call 0x4000781	      5818	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12	CALL_10
0x4000781	            0xf7d8	                                 neg eax	      5818	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12	CALL_10
0x4000783	      0x428944ad08	       mov dword [rbp + r13*4 + 8], eax 	      5818	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12	CALL_10
0x4000788	        0x488b0c24	                    mov rcx, qword [rsp]	      5818	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12	CALL_10
0x400078c	           0xfb611	                   movzx edx, byte [rcx]	      5818	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12	CALL_10
0x400078f	      0xe97cffffff	                           jmp 0x4000710	      5818	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12	CALL_10
0x4000794	         0xf1f4000	                         nop dword [rax]	      5818	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12	CALL_10
0x4000798	        0x66094d04	                   or word [rbp + 4], cx	      5794	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0x400079c	            0xebbd	                           jmp 0x400075b	      5794	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0x400079e	            0x6690	                                     nop	      5794	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0x40007a0	        0x4883c005	                              add rax, 5	      5812	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11
0x40007a4	          0x4889e7	                            mov rdi, rsp	      5813	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11	CALL_9
0x40007a7	        0x48890424	                    mov qword [rsp], rax	      5812	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11
0x40007ab	      0xe800000000	                          call 0x40007b0	      5813	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11	CALL_9
0x40007b0	        0x488b0c24	                    mov rcx, qword [rsp]	      5813	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11	CALL_9
0x40007b4	      0x428944ad08	       mov dword [rbp + r13*4 + 8], eax 	      5813	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11	CALL_9
0x40007b9	           0xfb611	                   movzx edx, byte [rcx]	      5813	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11	CALL_9
0x40007bc	      0xe94fffffff	                           jmp 0x4000710	      5813	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11	CALL_9
0x40007c1	     0xf1f80000000	                         nop dword [rax]	      5813	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11	CALL_9
0x40007c8	      0xb900080000	                          mov ecx, 0x800	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x40007cd	      0xbe10000000	                           mov esi, 0x10	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x40007d2	    0x41bd04000000	                             mov r13d, 4	      5778	syntax.c	FUNCTION_90	DO_1	FOR_1
0x40007d8	      0xe963ffffff	                           jmp 0x4000740	      5778	syntax.c	FUNCTION_90	DO_1	FOR_1
0x40007dd	           0xf1f00	                         nop dword [rax]	      5778	syntax.c	FUNCTION_90	DO_1	FOR_1
0x40007e0	      0xb900040000	                          mov ecx, 0x400	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x40007e5	      0xbe08000000	                              mov esi, 8	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x40007ea	    0x41bd03000000	                             mov r13d, 3	      5778	syntax.c	FUNCTION_90	DO_1	FOR_1
0x40007f0	      0xe94bffffff	                           jmp 0x4000740	      5778	syntax.c	FUNCTION_90	DO_1	FOR_1
0x40007f5	           0xf1f00	                         nop dword [rax]	      5778	syntax.c	FUNCTION_90	DO_1	FOR_1
0x40007f8	      0xb900020000	                          mov ecx, 0x200	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x40007fd	      0xbe04000000	                              mov esi, 4	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x4000802	    0x41bd02000000	                             mov r13d, 2	      5778	syntax.c	FUNCTION_90	DO_1	FOR_1
0x4000808	      0xe933ffffff	                           jmp 0x4000740	      5778	syntax.c	FUNCTION_90	DO_1	FOR_1
0x400080d	           0xf1f00	                         nop dword [rax]	      5778	syntax.c	FUNCTION_90	DO_1	FOR_1
0x4000810	      0xb900010000	                          mov ecx, 0x100	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x4000815	      0xbe02000000	                              mov esi, 2	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x400081a	    0x41bd01000000	                             mov r13d, 1	      5778	syntax.c	FUNCTION_90	DO_1	FOR_1
0x4000820	      0xe91bffffff	                           jmp 0x4000740	      5778	syntax.c	FUNCTION_90	DO_1	FOR_1
0x4000825	           0xf1f00	                         nop dword [rax]	      5778	syntax.c	FUNCTION_90	DO_1	FOR_1
0x4000828	      0xb980000000	                           mov ecx, 0x80	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x400082d	      0xbe01000000	                              mov esi, 1	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0x4000832	          0x4531ed	                          xor r13d, r13d	      5778	syntax.c	FUNCTION_90	DO_1	FOR_1
0x4000835	      0xe906ffffff	                           jmp 0x4000740	      5778	syntax.c	FUNCTION_90	DO_1	FOR_1
0x400083a	      0xba05000000	                              mov edx, 5	      5830	syntax.c	FUNCTION_90	IF_14	CALL_14
0x400083f	      0xbe00000000	                              mov esi, 0	      5830	syntax.c	FUNCTION_90	IF_14	CALL_14
0x4000844	      0xe951feffff	                           jmp 0x400069a	      5830	syntax.c	FUNCTION_90	IF_14	CALL_14
0x4000849	      0xe800000000	                          call 0x400084e	      5834	syntax.c	FUNCTION_90
push_next_match	DO,0:functions,0:IF,6:WHILE,0:CALL,9:ELSE,1:SWITCH,0:FOR,0	188
0x4004e40	            0x4155	                                push r13	      2518	syntax.c	FUNCTION_30
0x4004e42	            0x4154	                                push r12	      2518	syntax.c	FUNCTION_30
0x4004e44	      0xbe01000000	                              mov esi, 1	      2898	syntax.c	FUNCTION_35	IF_1	CALL_1
0x4004e49	              0x55	                                push rbp	      2518	syntax.c	FUNCTION_30
0x4004e4a	              0x53	                                push rbx	      2518	syntax.c	FUNCTION_30
0x4004e4b	          0x4889fb	                            mov rbx, rdi	      2518	syntax.c	FUNCTION_30
0x4004e4e	      0xbf00000000	                              mov edi, 0	      2898	syntax.c	FUNCTION_35	IF_1	CALL_1
0x4004e53	        0x4883ec08	                              sub rsp, 8	      2518	syntax.c	FUNCTION_30
0x4004e57	    0x488b05000000	            mov rax, qword [0x04004e5e] 	      2524	syntax.c	FUNCTION_30
0x4004e5e	    0x8b2d00000000	            mov ebp, dword [0x04004e64] 	      2524	syntax.c	FUNCTION_30
0x4004e64	    0x4c8ba8700200	           mov r13, qword [rax + 0x270] 	      2524	syntax.c	FUNCTION_30
0x4004e6b	      0xe800000000	                          call 0x4004e70	      2898	syntax.c	FUNCTION_35	IF_1	CALL_1
0x4004e70	            0x85c0	                           test eax, eax	      2898	syntax.c	FUNCTION_35	IF_1	CALL_1
0x4004e72	            0x751c	                           jne 0x4004e90	      2898	syntax.c	FUNCTION_35	IF_1	CALL_1
0x4004e74	    0xc70500000000	     mov dword [0x04004e7e], 0xffffffff 	      2601	syntax.c	FUNCTION_30
0x4004e7e	        0x4883c408	                              add rsp, 8	      2604	syntax.c	FUNCTION_30
0x4004e82	          0x4889d8	                            mov rax, rbx	      2604	syntax.c	FUNCTION_30
0x4004e85	              0x5b	                                 pop rbx	      2604	syntax.c	FUNCTION_30
0x4004e86	              0x5d	                                 pop rbp	      2604	syntax.c	FUNCTION_30
0x4004e87	            0x415c	                                 pop r12	      2604	syntax.c	FUNCTION_30
0x4004e89	            0x415d	                                 pop r13	      2604	syntax.c	FUNCTION_30
0x4004e8b	              0xc3	                                     ret	      2604	syntax.c	FUNCTION_30
0x4004e8c	         0xf1f4000	                         nop dword [rax]	      2604	syntax.c	FUNCTION_30
0x4004e90	          0x4863c5	                         movsxd rax, ebp	      2524	syntax.c	FUNCTION_30
0x4004e93	        0x4c8d2480	                  lea r12, [rax + rax*4]	      2524	syntax.c	FUNCTION_30
0x4004e97	    0x486305000000	         movsxd rax, dword [0x04004e9e] 	        90	string3.h	FUNCTION_173	CALL_6
0x4004e9e	        0x49c1e405	                              shl r12, 5	      2524	syntax.c	FUNCTION_30
0x4004ea2	          0x4d01ec	                            add r12, r13	      2524	syntax.c	FUNCTION_30
0x4004ea5	        0x488d0cc0	                  lea rcx, [rax + rax*8]	        90	string3.h	FUNCTION_173	CALL_6
0x4004ea9	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_173	CALL_6
0x4004eab	        0x48c1e104	                              shl rcx, 4	        90	string3.h	FUNCTION_173	CALL_6
0x4004eaf	    0x48030d000000	             add rcx, qword [0x04004eb6]	        90	string3.h	FUNCTION_173	CALL_6
0x4004eb6	        0x488d7908	                      lea rdi, [rcx + 8]	        90	string3.h	FUNCTION_173	CALL_6
0x4004eba	    0x48c701000000	                      mov qword [rcx], 0	        90	string3.h	FUNCTION_173	CALL_6
0x4004ec1	    0x48c781880000	               mov qword [rcx + 0x88], 0	        90	string3.h	FUNCTION_173	CALL_6
0x4004ecc	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_173	CALL_6
0x4004ed0	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_173	CALL_6
0x4004ed3	    0x81c190000000	                           add ecx, 0x90	        90	string3.h	FUNCTION_173	CALL_6
0x4004ed9	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_173	CALL_6
0x4004edc	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_173	CALL_6
0x4004edf	    0x486315000000	         movsxd rdx, dword [0x04004ee6] 	      2901	syntax.c	FUNCTION_35
0x4004ee6	    0x488b35000000	            mov rsi, qword [0x04004eed] 	      2901	syntax.c	FUNCTION_35
0x4004eed	    0x8b0d00000000	            mov ecx, dword [0x04004ef3] 	      2537	syntax.c	FUNCTION_30	IF_1
0x4004ef3	    0x8b3d00000000	            mov edi, dword [0x04004ef9] 	      2541	syntax.c	FUNCTION_30	IF_1
0x4004ef9	    0x4c8b0d000000	              mov r9, qword [0x04004f00]	      2536	syntax.c	FUNCTION_30	IF_1
0x4004f00	    0x4c8b15000000	            mov r10, qword [0x04004f07] 	      2536	syntax.c	FUNCTION_30	IF_1
0x4004f07	          0x4889d0	                            mov rax, rdx	      2901	syntax.c	FUNCTION_35
0x4004f0a	        0x488d14d2	                  lea rdx, [rdx + rdx*8]	      2901	syntax.c	FUNCTION_35
0x4004f0e	        0x448d4701	                      lea r8d, [rdi + 1]	      2541	syntax.c	FUNCTION_30	IF_1
0x4004f12	          0x83c001	                              add eax, 1	      2902	syntax.c	FUNCTION_35
0x4004f15	        0x48c1e204	                              shl rdx, 4	      2901	syntax.c	FUNCTION_35
0x4004f19	          0x83f801	                              cmp eax, 1	      2543	syntax.c	FUNCTION_30	IF_1	IF_2
0x4004f1c	    0x448905000000	            mov dword [0x04004f23], r8d 	      2541	syntax.c	FUNCTION_30	IF_1
0x4004f23	        0x488d1c16	                    lea rbx, [rsi + rdx]	      2535	syntax.c	FUNCTION_30	IF_1
0x4004f27	          0x892c16	              mov dword [rsi + rdx], ebp	      2901	syntax.c	FUNCTION_35
0x4004f2a	    0x890500000000	            mov dword [0x04004f30], eax 	      2902	syntax.c	FUNCTION_35
0x4004f30	          0x894b10	             mov dword [rbx + 0x10], ecx	      2537	syntax.c	FUNCTION_30	IF_1
0x4004f33	    0x488b0d000000	            mov rcx, qword [0x04004f3a] 	      2538	syntax.c	FUNCTION_30	IF_1
0x4004f3a	        0x4c894b28	              mov qword [rbx + 0x28], r9	      2536	syntax.c	FUNCTION_30	IF_1
0x4004f3e	        0x4c895330	             mov qword [rbx + 0x30], r10	      2536	syntax.c	FUNCTION_30	IF_1
0x4004f42	          0x894b0c	              mov dword [rbx + 0xc], ecx	      2538	syntax.c	FUNCTION_30	IF_1
0x4004f45	      0x49634c2424	         movsxd rcx, dword [r12 + 0x24] 	      2539	syntax.c	FUNCTION_30	IF_1
0x4004f4a	          0x897b70	             mov dword [rbx + 0x70], edi	      2541	syntax.c	FUNCTION_30	IF_1
0x4004f4d	      0x418b7c2428	            mov edi, dword [r12 + 0x28] 	      2542	syntax.c	FUNCTION_30	IF_1
0x4004f52	        0x48894b68	             mov qword [rbx + 0x68], rcx	      2539	syntax.c	FUNCTION_30	IF_1
0x4004f56	          0x897b74	             mov dword [rbx + 0x74], edi	      2542	syntax.c	FUNCTION_30	IF_1
0x4004f59	            0x7e11	                           jle 0x4004f6c	      2543	syntax.c	FUNCTION_30	IF_1	IF_2
0x4004f5b	      0x488b4416d8	       mov rax, qword [rsi + rdx - 0x28]	      2544	syntax.c	FUNCTION_30	IF_1	IF_2
0x4004f60	      0x2500000200	                        and eax, 0x20000	      2544	syntax.c	FUNCTION_30	IF_1	IF_2
0x4004f65	          0x4809c1	                             or rcx, rax	      2544	syntax.c	FUNCTION_30	IF_1	IF_2
0x4004f68	        0x48894b68	             mov qword [rbx + 0x68], rcx	      2544	syntax.c	FUNCTION_30	IF_1	IF_2
0x4004f6c	      0x498b442448	            mov rax, qword [r12 + 0x48] 	      2547	syntax.c	FUNCTION_30	IF_1
0x4004f71	    0x488b3d000000	            mov rdi, qword [0x04004f78] 	      2548	syntax.c	FUNCTION_30	IF_1	CALL_2
0x4004f78	    0x488983800000	             mov qword [rbx + 0x80], rax	      2547	syntax.c	FUNCTION_30	IF_1
0x4004f7f	      0xe800000000	                          call 0x4004f84	      2548	syntax.c	FUNCTION_30	IF_1	CALL_2
0x4004f84	    0x488983880000	             mov qword [rbx + 0x88], rax	      2548	syntax.c	FUNCTION_30	IF_1	CALL_2
0x4004f8b	      0x41803c2402	                       cmp byte [r12], 2	      2549	syntax.c	FUNCTION_30	IF_1	IF_3
0x4004f90	     0xf84ca010000	                            je 0x4005160	      2549	syntax.c	FUNCTION_30	IF_1	IF_3
0x4004f96	    0x488b05000000	            mov rax, qword [0x04004f9d] 	      2557	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4004f9d	    0x488b15000000	            mov rdx, qword [0x04004fa4] 	      2557	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4004fa4	    0xc7435c010000	               mov dword [rbx + 0x5c], 1	      2559	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4004fab	        0x48894318	             mov qword [rbx + 0x18], rax	      2557	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4004faf	    0x488b05000000	            mov rax, qword [0x04004fb6] 	      2558	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4004fb6	        0x48895320	             mov qword [rbx + 0x20], rdx	      2557	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4004fba	    0x488b15000000	            mov rdx, qword [0x04004fc1] 	      2558	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4004fc1	        0x48894338	             mov qword [rbx + 0x38], rax	      2558	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4004fc5	    0x488b05000000	            mov rax, qword [0x04004fcc] 	      2560	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4004fcc	        0x48094368	              or qword [rbx + 0x68], rax	      2560	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4004fd0	    0x488b05000000	            mov rax, qword [0x04004fd7] 	      2561	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4004fd7	        0x48895340	             mov qword [rbx + 0x40], rdx	      2558	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4004fdb	    0x488b15000000	            mov rdx, qword [0x04004fe2] 	      2561	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4004fe2	        0x48894348	             mov qword [rbx + 0x48], rax	      2561	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4004fe6	    0x8b0500000000	            mov eax, dword [0x04004fec] 	      2562	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4004fec	        0x48895350	             mov qword [rbx + 0x50], rdx	      2561	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4004ff0	          0x894358	             mov dword [rbx + 0x58], eax	      2562	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x4004ff3	    0x8b0500000000	            mov eax, dword [0x04004ff9] 	      2564	syntax.c	FUNCTION_30	IF_1	IF_4
0x4004ff9	            0x85c0	                           test eax, eax	      2564	syntax.c	FUNCTION_30	IF_1	IF_4
0x4004ffb	     0xf888f010000	                            js 0x4005190	      2564	syntax.c	FUNCTION_30	IF_1	IF_4
0x4005001	      0xe8aad2ffff	                  call sym.check_keepend	      2566	syntax.c	FUNCTION_30	IF_1	CALL_5
0x4005006	    0x8b0500000000	            mov eax, dword [0x0400500c] 	      2567	syntax.c	FUNCTION_30	IF_1	CALL_6
0x400500c	          0x8d78ff	                      lea edi, [rax - 1]	      2567	syntax.c	FUNCTION_30	IF_1	CALL_6
0x400500f	      0xe87cf6ffff	                 call sym.update_si_attr	      2567	syntax.c	FUNCTION_30	IF_1	CALL_6
0x4005014	      0x41803c2402	                       cmp byte [r12], 2	      2576	syntax.c	FUNCTION_30	IF_1	IF_5
0x4005019	     0xf8555feffff	                           jne 0x4004e74	      2576	syntax.c	FUNCTION_30	IF_1	IF_5
0x400501f	    0x6641837c2402	                   cmp word [r12 + 2], 0	      2577	syntax.c	FUNCTION_30	IF_1	IF_5
0x4005026	     0xf8448feffff	                            je 0x4004e74	      2577	syntax.c	FUNCTION_30	IF_1	IF_5
0x400502c	      0xbe01000000	                              mov esi, 1	      2898	syntax.c	FUNCTION_35	IF_1	CALL_1
0x4005031	      0xbf00000000	                              mov edi, 0	      2898	syntax.c	FUNCTION_35	IF_1	CALL_1
0x4005036	        0x488b6b68	            mov rbp, qword [rbx + 0x68] 	      2570	syntax.c	FUNCTION_30	IF_1
0x400503a	    0x448b25000000	           mov r12d, dword [0x04005041] 	      2578	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_7
0x4005041	      0xe800000000	                          call 0x4005046	      2898	syntax.c	FUNCTION_35	IF_1	CALL_1
0x4005046	            0x85c0	                           test eax, eax	      2898	syntax.c	FUNCTION_35	IF_1	CALL_1
0x4005048	     0xf8426feffff	                            je 0x4004e74	      2898	syntax.c	FUNCTION_35	IF_1	CALL_1
0x400504e	    0x486305000000	         movsxd rax, dword [0x04005055] 	        90	string3.h	FUNCTION_173	CALL_6
0x4005055	            0x89ea	                            mov edx, ebp	      2570	syntax.c	FUNCTION_30	IF_1
0x4005057	    0x81e200000600	                        and edx, 0x60000	      2570	syntax.c	FUNCTION_30	IF_1
0x400505d	        0x488d04c0	                  lea rax, [rax + rax*8]	        90	string3.h	FUNCTION_173	CALL_6
0x4005061	        0x48c1e004	                              shl rax, 4	        90	string3.h	FUNCTION_173	CALL_6
0x4005065	    0x480305000000	             add rax, qword [0x0400506c]	        90	string3.h	FUNCTION_173	CALL_6
0x400506c	        0x488d7808	                      lea rdi, [rax + 8]	        90	string3.h	FUNCTION_173	CALL_6
0x4005070	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_173	CALL_6
0x4005077	    0x48c780880000	               mov qword [rax + 0x88], 0	        90	string3.h	FUNCTION_173	CALL_6
0x4005082	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_173	CALL_6
0x4005086	          0x4829f8	                            sub rax, rdi	        90	string3.h	FUNCTION_173	CALL_6
0x4005089	    0x8d8890000000	                   lea ecx, [rax + 0x90]	        90	string3.h	FUNCTION_173	CALL_6
0x400508f	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_173	CALL_6
0x4005091	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_173	CALL_6
0x4005094	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_173	CALL_6
0x4005097	    0x486335000000	         movsxd rsi, dword [0x0400509e] 	      2901	syntax.c	FUNCTION_35
0x400509e	    0x488b0d000000	            mov rcx, qword [0x040050a5] 	      2901	syntax.c	FUNCTION_35
0x40050a5	    0x488b3d000000	            mov rdi, qword [0x040050ac] 	      2581	syntax.c	FUNCTION_30	IF_1	IF_5
0x40050ac	        0x488d1cf6	                  lea rbx, [rsi + rsi*8]	      2901	syntax.c	FUNCTION_35
0x40050b0	          0x4889f0	                            mov rax, rsi	      2901	syntax.c	FUNCTION_35
0x40050b3	    0x488b35000000	            mov rsi, qword [0x040050ba] 	      2581	syntax.c	FUNCTION_30	IF_1	IF_5
0x40050ba	          0x83c001	                              add eax, 1	      2902	syntax.c	FUNCTION_35
0x40050bd	        0x48c1e304	                              shl rbx, 4	      2901	syntax.c	FUNCTION_35
0x40050c1	        0x44892419	             mov dword [rcx + rbx], r12d	      2901	syntax.c	FUNCTION_35
0x40050c5	    0x890500000000	            mov dword [0x040050cb], eax 	      2902	syntax.c	FUNCTION_35
0x40050cb	          0x4801cb	                            add rbx, rcx	      2580	syntax.c	FUNCTION_30	IF_1	IF_5
0x40050ce	    0x8b0500000000	            mov eax, dword [0x040050d4] 	      2582	syntax.c	FUNCTION_30	IF_1	IF_5
0x40050d4	        0x48897328	             mov qword [rbx + 0x28], rsi	      2581	syntax.c	FUNCTION_30	IF_1	IF_5
0x40050d8	    0xf7c500000400	                       test ebp, 0x40000	      2592	syntax.c	FUNCTION_30	IF_1	IF_5	IF_6
0x40050de	    0x488b35000000	            mov rsi, qword [0x040050e5] 	      2584	syntax.c	FUNCTION_30	IF_1	IF_5
0x40050e5	        0x48897b30	             mov qword [rbx + 0x30], rdi	      2581	syntax.c	FUNCTION_30	IF_1	IF_5
0x40050e9	    0x488b3d000000	            mov rdi, qword [0x040050f0] 	      2584	syntax.c	FUNCTION_30	IF_1	IF_5
0x40050f0	    0xc7435c010000	               mov dword [rbx + 0x5c], 1	      2586	syntax.c	FUNCTION_30	IF_1	IF_5
0x40050f7	          0x894310	             mov dword [rbx + 0x10], eax	      2582	syntax.c	FUNCTION_30	IF_1	IF_5
0x40050fa	    0x488b05000000	            mov rax, qword [0x04005101] 	      2583	syntax.c	FUNCTION_30	IF_1	IF_5
0x4005101	        0x48897318	             mov qword [rbx + 0x18], rsi	      2584	syntax.c	FUNCTION_30	IF_1	IF_5
0x4005105	        0x48897338	             mov qword [rbx + 0x38], rsi	      2585	syntax.c	FUNCTION_30	IF_1	IF_5
0x4005109	        0x48897b20	             mov qword [rbx + 0x20], rdi	      2584	syntax.c	FUNCTION_30	IF_1	IF_5
0x400510d	        0x48897b40	             mov qword [rbx + 0x40], rdi	      2585	syntax.c	FUNCTION_30	IF_1	IF_5
0x4005111	          0x89430c	              mov dword [rbx + 0xc], eax	      2583	syntax.c	FUNCTION_30	IF_1	IF_5
0x4005114	    0x8b0500000000	            mov eax, dword [0x0400511a] 	      2590	syntax.c	FUNCTION_30	IF_1	IF_5
0x400511a	    0xc74358000000	               mov dword [rbx + 0x58], 0	      2587	syntax.c	FUNCTION_30	IF_1	IF_5
0x4005121	          0x8d4801	                      lea ecx, [rax + 1]	      2590	syntax.c	FUNCTION_30	IF_1	IF_5
0x4005124	          0x894370	             mov dword [rbx + 0x70], eax	      2590	syntax.c	FUNCTION_30	IF_1	IF_5
0x4005127	    0x890d00000000	            mov dword [0x0400512d], ecx 	      2590	syntax.c	FUNCTION_30	IF_1	IF_5
0x400512d	     0xf857d000000	                           jne 0x40051b0	      2592	syntax.c	FUNCTION_30	IF_1	IF_5	IF_6
0x4005133	          0x83ca40	                            or edx, 0x40	      2591	syntax.c	FUNCTION_30	IF_1	IF_5
0x4005136	          0x4863c2	                         movsxd rax, edx	      2591	syntax.c	FUNCTION_30	IF_1	IF_5
0x4005139	        0x48894368	             mov qword [rbx + 0x68], rax	      2591	syntax.c	FUNCTION_30	IF_1	IF_5
0x400513d	    0x48c783800000	               mov qword [rbx + 0x80], 0	      2595	syntax.c	FUNCTION_30	IF_1	IF_5
0x4005148	      0xe863d1ffff	                  call sym.check_keepend	      2596	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_8
0x400514d	    0x8b0500000000	            mov eax, dword [0x04005153] 	      2597	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_9
0x4005153	          0x8d78ff	                      lea edi, [rax - 1]	      2597	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_9
0x4005156	      0xe835f5ffff	                 call sym.update_si_attr	      2597	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_9
0x400515b	      0xe914fdffff	                           jmp 0x4004e74	      2597	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_9
0x4005160	    0x41f644242404	               test byte [r12 + 0x24], 4	      2549	syntax.c	FUNCTION_30	IF_1	IF_3
0x4005166	     0xf852afeffff	                           jne 0x4004f96	      2549	syntax.c	FUNCTION_30	IF_1	IF_3
0x400516c	    0x8b3500000000	            mov esi, dword [0x04005172] 	      2552	syntax.c	FUNCTION_30	IF_1	IF_3	CALL_3
0x4005172	      0xba01000000	                              mov edx, 1	      2552	syntax.c	FUNCTION_30	IF_1	IF_3	CALL_3
0x4005177	          0x4889df	                            mov rdi, rbx	      2552	syntax.c	FUNCTION_30	IF_1	IF_3	CALL_3
0x400517a	      0xe8c1f0ffff	                  call sym.update_si_end	      2552	syntax.c	FUNCTION_30	IF_1	IF_3	CALL_3
0x400517f	      0xe82cd1ffff	                  call sym.check_keepend	      2553	syntax.c	FUNCTION_30	IF_1	IF_3	CALL_4
0x4005184	      0xe96afeffff	                           jmp 0x4004ff3	      2553	syntax.c	FUNCTION_30	IF_1	IF_3	CALL_4
0x4005189	     0xf1f80000000	                         nop dword [rax]	      2553	syntax.c	FUNCTION_30	IF_1	IF_3	CALL_4
0x4005190	        0xf6436904	               test byte [rbx + 0x69], 4	      2564	syntax.c	FUNCTION_30	IF_1	IF_4
0x4005194	     0xf8467feffff	                            je 0x4005001	      2564	syntax.c	FUNCTION_30	IF_1	IF_4
0x400519a	    0x8b0500000000	            mov eax, dword [0x040051a0] 	      2565	syntax.c	FUNCTION_30	IF_1	IF_4
0x40051a0	          0x83e801	                              sub eax, 1	      2565	syntax.c	FUNCTION_30	IF_1	IF_4
0x40051a3	    0x890500000000	            mov dword [0x040051a9], eax 	      2565	syntax.c	FUNCTION_30	IF_1	IF_4
0x40051a9	      0xe953feffff	                           jmp 0x4005001	      2565	syntax.c	FUNCTION_30	IF_1	IF_4
0x40051ae	            0x6690	                                     nop	      2565	syntax.c	FUNCTION_30	IF_1	IF_4
0x40051b0	    0x81ca40000200	                         or edx, 0x20040	      2593	syntax.c	FUNCTION_30	IF_1	IF_5	IF_6
0x40051b6	          0x4863c2	                         movsxd rax, edx	      2593	syntax.c	FUNCTION_30	IF_1	IF_5	IF_6
0x40051b9	        0x48894368	             mov qword [rbx + 0x68], rax	      2593	syntax.c	FUNCTION_30	IF_1	IF_5	IF_6
0x40051bd	      0xe97bffffff	                           jmp 0x400513d	      2593	syntax.c	FUNCTION_30	IF_1	IF_5	IF_6
syntax_check_changed	DO,0:functions,0:IF,3:WHILE,0:CALL,4:ELSE,0:SWITCH,0:FOR,0	55
0x400a160	    0x8b1500000000	            mov edx, dword [0x0400a166] 	      1762	syntax.c	FUNCTION_25	IF_1
0x400a166	              0x53	                                push rbx	      1751	syntax.c	FUNCTION_25
0x400a167	      0xbb01000000	                              mov ebx, 1	      1752	syntax.c	FUNCTION_25
0x400a16c	            0x85d2	                           test edx, edx	      1762	syntax.c	FUNCTION_25	IF_1
0x400a16e	            0x7410	                            je 0x400a180	      1762	syntax.c	FUNCTION_25	IF_1
0x400a170	    0x488b05000000	            mov rax, qword [0x0400a177] 	      1762	syntax.c	FUNCTION_25	IF_1
0x400a177	        0x488d4801	                      lea rcx, [rax + 1]	      1762	syntax.c	FUNCTION_25	IF_1
0x400a17b	          0x4839f9	                            cmp rcx, rdi	      1762	syntax.c	FUNCTION_25	IF_1
0x400a17e	            0x7408	                            je 0x400a188	      1762	syntax.c	FUNCTION_25	IF_1
0x400a180	            0x89d8	                            mov eax, ebx	      1789	syntax.c	FUNCTION_25
0x400a182	              0x5b	                                 pop rbx	      1789	syntax.c	FUNCTION_25
0x400a183	              0xc3	                                     ret	      1789	syntax.c	FUNCTION_25
0x400a184	         0xf1f4000	                         nop dword [rax]	      1789	syntax.c	FUNCTION_25
0x400a188	    0x488b05000000	            mov rax, qword [0x0400a18f] 	      1455	syntax.c	FUNCTION_18	FOR_1
0x400a18f	    0x488b90200300	           mov rdx, qword [rax + 0x320] 	      1455	syntax.c	FUNCTION_18	FOR_1
0x400a196	          0x4885d2	                           test rdx, rdx	      1455	syntax.c	FUNCTION_18	FOR_1
0x400a199	            0x74e5	                            je 0x400a180	      1455	syntax.c	FUNCTION_18	FOR_1
0x400a19b	        0x488b7208	                mov rsi, qword [rdx + 8]	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x400a19f	          0x4839f1	                            cmp rcx, rsi	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x400a1a2	            0x7475	                            je 0x400a219	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x400a1a4	            0x7d1b	                           jge 0x400a1c1	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x400a1a6	            0xebd8	                           jmp 0x400a180	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x400a1a8	     0xf1f84000000	                   nop dword [rax + rax]	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x400a1b0	        0x488b4308	                mov rax, qword [rbx + 8]	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x400a1b4	          0x4839c1	                            cmp rcx, rax	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x400a1b7	            0x7435	                            je 0x400a1ee	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x400a1b9	            0x7c0e	                            jl 0x400a1c9	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x400a1bb	          0x4889c6	                            mov rsi, rax	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x400a1be	          0x4889da	                            mov rdx, rbx	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x400a1c1	          0x488b1a	                    mov rbx, qword [rdx]	      1455	syntax.c	FUNCTION_18	FOR_1
0x400a1c4	          0x4885db	                           test rbx, rbx	      1455	syntax.c	FUNCTION_18	FOR_1
0x400a1c7	            0x75e7	                           jne 0x400a1b0	      1455	syntax.c	FUNCTION_18	FOR_1
0x400a1c9	          0x4839f1	                            cmp rcx, rsi	      1765	syntax.c	FUNCTION_25	IF_1	IF_2
0x400a1cc	            0x744b	                            je 0x400a219	      1765	syntax.c	FUNCTION_25	IF_1	IF_2
0x400a1ce	      0xbb01000000	                              mov ebx, 1	      1752	syntax.c	FUNCTION_25
0x400a1d3	            0x89d8	                            mov eax, ebx	      1789	syntax.c	FUNCTION_25
0x400a1d5	              0x5b	                                 pop rbx	      1789	syntax.c	FUNCTION_25
0x400a1d6	              0xc3	                                     ret	      1789	syntax.c	FUNCTION_25
0x400a1d7	    0x660f1f840000	                    nop word [rax + rax]	      1789	syntax.c	FUNCTION_25
0x400a1e0	            0x31ff	                            xor edi, edi	      1806	syntax.c	FUNCTION_26	WHILE_1	CALL_1
0x400a1e2	      0xe889cdffff	  call sym.syn_current_attr.constprop.24	      1806	syntax.c	FUNCTION_26	WHILE_1	CALL_1
0x400a1e7	    0x830500000000	               add dword [0x0400a1ee], 1	      1830	syntax.c	FUNCTION_26	WHILE_1
0x400a1ee	    0x8b0500000000	            mov eax, dword [0x0400a1f4] 	      1804	syntax.c	FUNCTION_26	WHILE_1
0x400a1f4	            0x85c0	                           test eax, eax	      1804	syntax.c	FUNCTION_26	WHILE_1
0x400a1f6	            0x74e8	                            je 0x400a1e0	      1804	syntax.c	FUNCTION_26	WHILE_1
0x400a1f8	          0x4889df	                            mov rdi, rbx	      1777	syntax.c	FUNCTION_25	IF_1	IF_2	IF_3	CALL_3
0x400a1fb	            0x31db	                            xor ebx, ebx	      1752	syntax.c	FUNCTION_25
0x400a1fd	      0xe84e61ffff	                call sym.syn_stack_equal	      1777	syntax.c	FUNCTION_25	IF_1	IF_2	IF_3	CALL_3
0x400a202	            0x85c0	                           test eax, eax	      1752	syntax.c	FUNCTION_25
0x400a204	           0xf94c3	                                 sete bl	      1752	syntax.c	FUNCTION_25
0x400a207	    0x488305000000	               add qword [0x0400a20f], 1	      1783	syntax.c	FUNCTION_25	IF_1	IF_2
0x400a20f	      0xe88c89ffff	            call sym.store_current_state	      1784	syntax.c	FUNCTION_25	IF_1	IF_2	CALL_4
0x400a214	      0xe967ffffff	                           jmp 0x400a180	      1784	syntax.c	FUNCTION_25	IF_1	IF_2	CALL_4
0x400a219	          0x4889d3	                            mov rbx, rdx	      1784	syntax.c	FUNCTION_25	IF_1	IF_2	CALL_4
0x400a21c	            0xebd0	                           jmp 0x400a1ee	      1784	syntax.c	FUNCTION_25	IF_1	IF_2	CALL_4
ex_ownsyntax	DO,0:functions,0:IF,4:WHILE,0:CALL,16:ELSE,1:SWITCH,0:FOR,0	97
0x400b050	              0x55	                                push rbp	      6398	syntax.c	FUNCTION_96
0x400b051	              0x53	                                push rbx	      6398	syntax.c	FUNCTION_96
0x400b052	          0x4889fd	                            mov rbp, rdi	      6398	syntax.c	FUNCTION_96
0x400b055	        0x4883ec08	                              sub rsp, 8	      6398	syntax.c	FUNCTION_96
0x400b059	    0x488b1d000000	            mov rbx, qword [0x0400b060] 	      6402	syntax.c	FUNCTION_96	IF_1
0x400b060	        0x488b4308	                mov rax, qword [rbx + 8]	      6402	syntax.c	FUNCTION_96	IF_1
0x400b064	    0x480568170000	                         add rax, 0x1768	      6402	syntax.c	FUNCTION_96	IF_1
0x400b06a	        0x48394310	            cmp qword [rbx + 0x10], rax 	      6402	syntax.c	FUNCTION_96	IF_1
0x400b06e	     0xf84c4000000	                            je 0x400b138	      6402	syntax.c	FUNCTION_96	IF_1
0x400b074	      0xbf00000000	                              mov edi, 0	      6419	syntax.c	FUNCTION_96	CALL_9
0x400b079	      0xe800000000	                          call 0x400b07e	      6419	syntax.c	FUNCTION_96	CALL_9
0x400b07e	          0x4885c0	                           test rax, rax	      6420	syntax.c	FUNCTION_96	IF_2
0x400b081	          0x4889c3	                            mov rbx, rax	      6419	syntax.c	FUNCTION_96	CALL_9
0x400b084	            0x746a	                            je 0x400b0f0	      6420	syntax.c	FUNCTION_96	IF_2
0x400b086	          0x4889c7	                            mov rdi, rax	      6421	syntax.c	FUNCTION_96	CALL_10
0x400b089	      0xe800000000	                          call 0x400b08e	      6421	syntax.c	FUNCTION_96	CALL_10
0x400b08e	    0x4c8b05000000	              mov r8, qword [0x0400b095]	      6425	syntax.c	FUNCTION_96	CALL_11
0x400b095	        0x488b7500	                    mov rsi, qword [rbp]	      6425	syntax.c	FUNCTION_96	CALL_11
0x400b099	      0xb901000000	                              mov ecx, 1	      6425	syntax.c	FUNCTION_96	CALL_11
0x400b09e	      0xbf4c000000	                           mov edi, 0x4c	      6425	syntax.c	FUNCTION_96	CALL_11
0x400b0a3	          0x4889c3	                            mov rbx, rax	      6421	syntax.c	FUNCTION_96	CALL_10
0x400b0a6	    0x498b90980000	              mov rdx, qword [r8 + 0x98]	      6425	syntax.c	FUNCTION_96	CALL_11
0x400b0ad	      0xe800000000	                          call 0x400b0b2	      6425	syntax.c	FUNCTION_96	CALL_11
0x400b0b2	      0xbf00000000	                              mov edi, 0	      6428	syntax.c	FUNCTION_96	CALL_12
0x400b0b7	      0xe800000000	                          call 0x400b0bc	      6428	syntax.c	FUNCTION_96	CALL_12
0x400b0bc	          0x4885c0	                           test rax, rax	      6429	syntax.c	FUNCTION_96	IF_3
0x400b0bf	            0x740d	                            je 0x400b0ce	      6429	syntax.c	FUNCTION_96	IF_3
0x400b0c1	          0x4889c6	                            mov rsi, rax	      6430	syntax.c	FUNCTION_96	CALL_13
0x400b0c4	      0xbf00000000	                              mov edi, 0	      6430	syntax.c	FUNCTION_96	CALL_13
0x400b0c9	      0xe800000000	                          call 0x400b0ce	      6430	syntax.c	FUNCTION_96	CALL_13
0x400b0ce	          0x4885db	                           test rbx, rbx	      6433	syntax.c	FUNCTION_96	IF_4
0x400b0d1	            0x744d	                            je 0x400b120	      6433	syntax.c	FUNCTION_96	IF_4
0x400b0d3	          0x4889de	                            mov rsi, rbx	      6437	syntax.c	FUNCTION_96	ELSE_1	CALL_15
0x400b0d6	      0xbf00000000	                              mov edi, 0	      6437	syntax.c	FUNCTION_96	ELSE_1	CALL_15
0x400b0db	      0xe800000000	                          call 0x400b0e0	      6437	syntax.c	FUNCTION_96	ELSE_1	CALL_15
0x400b0e0	        0x4883c408	                              add rsp, 8	      6440	syntax.c	FUNCTION_96
0x400b0e4	          0x4889df	                            mov rdi, rbx	      6438	syntax.c	FUNCTION_96	ELSE_1	CALL_16
0x400b0e7	              0x5b	                                 pop rbx	      6440	syntax.c	FUNCTION_96
0x400b0e8	              0x5d	                                 pop rbp	      6440	syntax.c	FUNCTION_96
0x400b0e9	      0xe900000000	                           jmp 0x400b0ee	      6438	syntax.c	FUNCTION_96	ELSE_1	CALL_16
0x400b0ee	            0x6690	                                     nop	      6438	syntax.c	FUNCTION_96	ELSE_1	CALL_16
0x400b0f0	    0x4c8b05000000	              mov r8, qword [0x0400b0f7]	      6425	syntax.c	FUNCTION_96	CALL_11
0x400b0f7	        0x488b7500	                    mov rsi, qword [rbp]	      6425	syntax.c	FUNCTION_96	CALL_11
0x400b0fb	      0xb901000000	                              mov ecx, 1	      6425	syntax.c	FUNCTION_96	CALL_11
0x400b100	      0xbf4c000000	                           mov edi, 0x4c	      6425	syntax.c	FUNCTION_96	CALL_11
0x400b105	    0x498b90980000	              mov rdx, qword [r8 + 0x98]	      6425	syntax.c	FUNCTION_96	CALL_11
0x400b10c	      0xe800000000	                          call 0x400b111	      6425	syntax.c	FUNCTION_96	CALL_11
0x400b111	      0xbf00000000	                              mov edi, 0	      6428	syntax.c	FUNCTION_96	CALL_12
0x400b116	      0xe800000000	                          call 0x400b11b	      6428	syntax.c	FUNCTION_96	CALL_12
0x400b11b	          0x4885c0	                           test rax, rax	      6429	syntax.c	FUNCTION_96	IF_3
0x400b11e	            0x75a1	                           jne 0x400b0c1	      6429	syntax.c	FUNCTION_96	IF_3
0x400b120	        0x4883c408	                              add rsp, 8	      6440	syntax.c	FUNCTION_96
0x400b124	      0xbe01000000	                              mov esi, 1	      6434	syntax.c	FUNCTION_96	CALL_14
0x400b129	      0xbf00000000	                              mov edi, 0	      6434	syntax.c	FUNCTION_96	CALL_14
0x400b12e	              0x5b	                                 pop rbx	      6440	syntax.c	FUNCTION_96
0x400b12f	              0x5d	                                 pop rbp	      6440	syntax.c	FUNCTION_96
0x400b130	      0xe900000000	                           jmp 0x400b135	      6434	syntax.c	FUNCTION_96	CALL_14
0x400b135	           0xf1f00	                         nop dword [rax]	      6434	syntax.c	FUNCTION_96	CALL_14
0x400b138	      0xbfb8040000	                          mov edi, 0x4b8	      6404	syntax.c	FUNCTION_96	IF_1	CALL_1
0x400b13d	      0xe800000000	                          call 0x400b142	      6404	syntax.c	FUNCTION_96	IF_1	CALL_1
0x400b142	        0x48894310	             mov qword [rbx + 0x10], rax	      6404	syntax.c	FUNCTION_96	IF_1	CALL_1
0x400b146	    0x488b05000000	            mov rax, qword [0x0400b14d] 	      6405	syntax.c	FUNCTION_96	IF_1	CALL_2
0x400b14d	        0x488b4010	            mov rax, qword [rax + 0x10] 	        90	string3.h	FUNCTION_173	CALL_6
0x400b151	        0x488d7808	                      lea rdi, [rax + 8]	        90	string3.h	FUNCTION_173	CALL_6
0x400b155	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400b15c	    0x48c780b00400	              mov qword [rax + 0x4b0], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400b167	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_173	CALL_6
0x400b16b	          0x4829f8	                            sub rax, rdi	        90	string3.h	FUNCTION_173	CALL_6
0x400b16e	    0x8d88b8040000	                  lea ecx, [rax + 0x4b8]	        90	string3.h	FUNCTION_173	CALL_6
0x400b174	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_173	CALL_6
0x400b176	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_173	CALL_6
0x400b179	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_173	CALL_6
0x400b17c	    0x488b05000000	            mov rax, qword [0x0400b183] 	      6406	syntax.c	FUNCTION_96	IF_1	CALL_3
0x400b183	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      6406	syntax.c	FUNCTION_96	IF_1	CALL_3
0x400b187	      0xe800000000	                          call 0x400b18c	      6406	syntax.c	FUNCTION_96	IF_1	CALL_3
0x400b18c	    0x488b05000000	            mov rax, qword [0x0400b193] 	      6407	syntax.c	FUNCTION_96	IF_1	CALL_4
0x400b193	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      6407	syntax.c	FUNCTION_96	IF_1	CALL_4
0x400b197	    0x4881c7280100	                          add rdi, 0x128	      6407	syntax.c	FUNCTION_96	IF_1	CALL_4
0x400b19e	      0xe800000000	                          call 0x400b1a3	      6407	syntax.c	FUNCTION_96	IF_1	CALL_4
0x400b1a3	    0x488b05000000	            mov rax, qword [0x0400b1aa] 	      6410	syntax.c	FUNCTION_96	IF_1
0x400b1aa	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      6411	syntax.c	FUNCTION_96	IF_1	CALL_5
0x400b1ae	    0xc78068020000	              mov dword [rax + 0x268], 0	      6410	syntax.c	FUNCTION_96	IF_1
0x400b1b8	    0x4881c7680400	                          add rdi, 0x468	      6411	syntax.c	FUNCTION_96	IF_1	CALL_5
0x400b1bf	      0xe800000000	                          call 0x400b1c4	      6411	syntax.c	FUNCTION_96	IF_1	CALL_5
0x400b1c4	    0x488b05000000	            mov rax, qword [0x0400b1cb] 	      6412	syntax.c	FUNCTION_96	IF_1	CALL_6
0x400b1cb	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      6412	syntax.c	FUNCTION_96	IF_1	CALL_6
0x400b1cf	    0x4881c7780400	                          add rdi, 0x478	      6412	syntax.c	FUNCTION_96	IF_1	CALL_6
0x400b1d6	      0xe800000000	                          call 0x400b1db	      6412	syntax.c	FUNCTION_96	IF_1	CALL_6
0x400b1db	    0x488b05000000	            mov rax, qword [0x0400b1e2] 	      6413	syntax.c	FUNCTION_96	IF_1	CALL_7
0x400b1e2	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      6413	syntax.c	FUNCTION_96	IF_1	CALL_7
0x400b1e6	    0x4881c7800400	                          add rdi, 0x480	      6413	syntax.c	FUNCTION_96	IF_1	CALL_7
0x400b1ed	      0xe800000000	                          call 0x400b1f2	      6413	syntax.c	FUNCTION_96	IF_1	CALL_7
0x400b1f2	    0x488b05000000	            mov rax, qword [0x0400b1f9] 	      6415	syntax.c	FUNCTION_96	IF_1	CALL_8
0x400b1f9	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      6415	syntax.c	FUNCTION_96	IF_1	CALL_8
0x400b1fd	    0x4881c7b00400	                          add rdi, 0x4b0	      6415	syntax.c	FUNCTION_96	IF_1	CALL_8
0x400b204	      0xe800000000	                          call 0x400b209	      6415	syntax.c	FUNCTION_96	IF_1	CALL_8
0x400b209	      0xe966feffff	                           jmp 0x400b074	      6415	syntax.c	FUNCTION_96	IF_1	CALL_8
syn_stack_cleanup	DO,0:functions,0:IF,7:WHILE,0:CALL,1:ELSE,2:SWITCH,0:FOR,2	148
0x4002960	    0x488b0d000000	            mov rcx, qword [0x04002967] 	      1381	syntax.c	FUNCTION_16	IF_1
0x4002967	    0x4883b9100300	              cmp qword [rcx + 0x310], 0	      1381	syntax.c	FUNCTION_16	IF_1
0x400296f	     0xf8423020000	                            je 0x4002b98	      1381	syntax.c	FUNCTION_16	IF_1
0x4002975	            0x4157	                                push r15	      1374	syntax.c	FUNCTION_16
0x4002977	            0x4156	                                push r14	      1374	syntax.c	FUNCTION_16
0x4002979	            0x4155	                                push r13	      1374	syntax.c	FUNCTION_16
0x400297b	            0x4154	                                push r12	      1374	syntax.c	FUNCTION_16
0x400297d	              0x55	                                push rbp	      1374	syntax.c	FUNCTION_16
0x400297e	              0x53	                                push rbx	      1374	syntax.c	FUNCTION_16
0x400297f	        0x4883ec18	                           sub rsp, 0x18	      1374	syntax.c	FUNCTION_16
0x4002983	    0x488ba9200300	           mov rbp, qword [rcx + 0x320] 	      1381	syntax.c	FUNCTION_16	IF_1
0x400298a	          0x4885ed	                           test rbp, rbp	      1381	syntax.c	FUNCTION_16	IF_1
0x400298d	     0xf84ed010000	                            je 0x4002b80	      1381	syntax.c	FUNCTION_16	IF_1
0x4002993	    0x486381180300	        movsxd rax, dword [rcx + 0x318] 	      1385	syntax.c	FUNCTION_16	IF_2
0x400299a	    0x488b15000000	            mov rdx, qword [0x040029a1] 	      1385	syntax.c	FUNCTION_16	IF_2
0x40029a1	    0x41bc3f420f00	                       mov r12d, 0xf423f	      1386	syntax.c	FUNCTION_16	IF_2
0x40029a7	          0x4839d0	                            cmp rax, rdx	      1385	syntax.c	FUNCTION_16	IF_2
0x40029aa	     0xf8f78010000	                            jg 0x4002b28	      1385	syntax.c	FUNCTION_16	IF_2
0x40029b0	        0x488b5d00	                    mov rbx, qword [rbp]	      1398	syntax.c	FUNCTION_16	FOR_1
0x40029b4	     0xfb7b9400300	          movzx edi, word [rcx + 0x340] 	      1395	syntax.c	FUNCTION_16
0x40029bb	          0x4885db	                           test rbx, rbx	      1398	syntax.c	FUNCTION_16	FOR_1
0x40029be	     0xf84bc010000	                            je 0x4002b80	      1398	syntax.c	FUNCTION_16	FOR_1
0x40029c4	        0x488b5508	                mov rdx, qword [rbp + 8]	      1398	syntax.c	FUNCTION_16	FOR_1
0x40029c8	          0x4d63e4	                        movsxd r12, r12d	      1398	syntax.c	FUNCTION_16	FOR_1
0x40029cb	          0x4189fd	                           mov r13d, edi	      1398	syntax.c	FUNCTION_16	FOR_1
0x40029ce	          0x4889d8	                            mov rax, rbx	      1398	syntax.c	FUNCTION_16	FOR_1
0x40029d1	            0x31f6	                            xor esi, esi	      1398	syntax.c	FUNCTION_16	FOR_1
0x40029d3	            0xeb33	                           jmp 0x4002a08	      1398	syntax.c	FUNCTION_16	FOR_1
0x40029d5	           0xf1f00	                         nop dword [rax]	      1398	syntax.c	FUNCTION_16	FOR_1
0x40029d8	        0x664439e9	                            cmp cx, r13w	      1404	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4	IF_5
0x40029dc	     0xf8236010000	                            jb 0x4002b18	      1404	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4	IF_5
0x40029e2	          0x83f601	                              xor esi, 1	      1404	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4	IF_5
0x40029e5	          0x4189f0	                            mov r8d, esi	      1404	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4	IF_5
0x40029e8	      0xbe01000000	                              mov esi, 1	      1406	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4
0x40029ed	          0x4585c0	                           test r8d, r8d	      1404	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4	IF_5
0x40029f0	     0xf8522010000	                           jne 0x4002b18	      1404	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4	IF_5
0x40029f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1404	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4	IF_5
0x4002a00	          0x488b00	                    mov rax, qword [rax]	      1398	syntax.c	FUNCTION_16	FOR_1
0x4002a03	          0x4885c0	                           test rax, rax	      1398	syntax.c	FUNCTION_16	FOR_1
0x4002a06	            0x744d	                            je 0x4002a55	      1398	syntax.c	FUNCTION_16	FOR_1
0x4002a08	        0x498d0c14	                    lea rcx, [r12 + rdx]	      1400	syntax.c	FUNCTION_16	FOR_1	IF_3
0x4002a0c	        0x488b5008	                mov rdx, qword [rax + 8]	      1400	syntax.c	FUNCTION_16	FOR_1	IF_3
0x4002a10	          0x4839d1	                            cmp rcx, rdx	      1400	syntax.c	FUNCTION_16	FOR_1	IF_3
0x4002a13	            0x7eeb	                           jle 0x4002a00	      1400	syntax.c	FUNCTION_16	FOR_1	IF_3
0x4002a15	     0xfb788c80000	           movzx ecx, word [rax + 0xc8] 	      1402	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4
0x4002a1c	          0x6639cf	                              cmp di, cx	      1402	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4
0x4002a1f	            0x72b7	                            jb 0x40029d8	      1402	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4
0x4002a21	            0x85f6	                           test esi, esi	      1408	syntax.c	FUNCTION_16	FOR_1	IF_3	ELSE_2	IF_6
0x4002a23	     0xf85df000000	                           jne 0x4002b08	      1408	syntax.c	FUNCTION_16	FOR_1	IF_3	ELSE_2	IF_6
0x4002a29	        0x664139cd	                            cmp r13w, cx	      1408	syntax.c	FUNCTION_16	FOR_1	IF_3	ELSE_2	IF_6
0x4002a2d	        0x440f47e9	                         cmova r13d, ecx	      1408	syntax.c	FUNCTION_16	FOR_1	IF_3	ELSE_2	IF_6
0x4002a31	            0xebcd	                           jmp 0x4002a00	      1408	syntax.c	FUNCTION_16	FOR_1	IF_3	ELSE_2	IF_6
0x4002a33	       0xf1f440000	                   nop dword [rax + rax]	      1408	syntax.c	FUNCTION_16	FOR_1	IF_3	ELSE_2	IF_6
0x4002a38	          0x4c89e2	                            mov rdx, r12	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x4002a3b	        0x48035508	                add rdx, qword [rbp + 8]	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x4002a3f	        0x483b5308	                cmp rdx, qword [rbx + 8]	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x4002a43	            0x7f23	                            jg 0x4002a68	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x4002a45	          0x4889dd	                            mov rbp, rbx	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x4002a48	        0x488b5d00	                    mov rbx, qword [rbp]	      1418	syntax.c	FUNCTION_16	FOR_2
0x4002a4c	          0x4885db	                           test rbx, rbx	      1418	syntax.c	FUNCTION_16	FOR_2
0x4002a4f	     0xf849f000000	                            je 0x4002af4	      1418	syntax.c	FUNCTION_16	FOR_2
0x4002a55	    0x66443babc800	            cmp r13w, word [rbx + 0xc8] 	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x4002a5d	            0x75e6	                           jne 0x4002a45	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x4002a5f	            0xebd7	                           jmp 0x4002a38	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x4002a61	     0xf1f80000000	                         nop dword [rax]	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x4002a68	          0x488b03	                    mov rax, qword [rbx]	      1423	syntax.c	FUNCTION_16	FOR_2	IF_7
0x4002a6b	    0x8b93bc000000	            mov edx, dword [rbx + 0xbc] 	       698	syntax.c	FUNCTION_3	IF_1
0x4002a71	        0x48894500	                    mov qword [rbp], rax	      1423	syntax.c	FUNCTION_16	FOR_2	IF_7
0x4002a75	    0x488b05000000	            mov rax, qword [0x04002a7c] 	      1424	syntax.c	FUNCTION_16	FOR_2	IF_7	CALL_1
0x4002a7c	          0x83fa07	                              cmp edx, 7	       698	syntax.c	FUNCTION_3	IF_1
0x4002a7f	        0x48890424	                    mov qword [rsp], rax	      1424	syntax.c	FUNCTION_16	FOR_2	IF_7	CALL_1
0x4002a83	     0xf8ec7000000	                           jle 0x4002b50	       698	syntax.c	FUNCTION_3	IF_1
0x4002a89	        0x488d4310	                   lea rax, [rbx + 0x10]	       700	syntax.c	FUNCTION_3	IF_1
0x4002a8d	          0x4531f6	                          xor r14d, r14d	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x4002a90	          0x4531ff	                          xor r15d, r15d	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x4002a93	      0x4889442408	                mov qword [rsp + 8], rax	       700	syntax.c	FUNCTION_3	IF_1
0x4002a98	          0x8b4310	            mov eax, dword [rbx + 0x10] 	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x4002a9b	            0x85c0	                           test eax, eax	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x4002a9d	            0x7e1d	                           jle 0x4002abc	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x4002a9f	              0x90	                                     nop	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x4002aa0	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	       702	syntax.c	FUNCTION_3	IF_1	CALL_1
0x4002aa4	        0x4183c701	                             add r15d, 1	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x4002aa8	      0x4a8b7c3110	      mov rdi, qword [rcx + r14 + 0x10] 	       702	syntax.c	FUNCTION_3	IF_1	CALL_1
0x4002aad	        0x4983c618	                           add r14, 0x18	       702	syntax.c	FUNCTION_3	IF_1	CALL_1
0x4002ab1	      0xe800000000	                          call 0x4002ab6	       702	syntax.c	FUNCTION_3	IF_1	CALL_1
0x4002ab6	        0x443b7b10	           cmp r15d, dword [rbx + 0x10] 	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x4002aba	            0x7ce4	                            jl 0x4002aa0	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x4002abc	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       703	syntax.c	FUNCTION_3	IF_1	CALL_2
0x4002ac1	      0xe800000000	                          call 0x4002ac6	       703	syntax.c	FUNCTION_3	IF_1	CALL_2
0x4002ac6	        0x488b3424	                    mov rsi, qword [rsp]	      1440	syntax.c	FUNCTION_17
0x4002aca	    0x488b86280300	           mov rax, qword [rsi + 0x328] 	      1440	syntax.c	FUNCTION_17
0x4002ad1	          0x488903	                    mov qword [rbx], rax	      1440	syntax.c	FUNCTION_17
0x4002ad4	    0x48899e280300	            mov qword [rsi + 0x328], rbx	      1441	syntax.c	FUNCTION_17
0x4002adb	      0xb801000000	                              mov eax, 1	      1426	syntax.c	FUNCTION_16	FOR_2	IF_7
0x4002ae0	        0x488b5d00	                    mov rbx, qword [rbp]	      1418	syntax.c	FUNCTION_16	FOR_2
0x4002ae4	    0x838630030000	              add dword [rsi + 0x330], 1	      1442	syntax.c	FUNCTION_17
0x4002aeb	          0x4885db	                           test rbx, rbx	      1418	syntax.c	FUNCTION_16	FOR_2
0x4002aee	     0xf8561ffffff	                           jne 0x4002a55	      1418	syntax.c	FUNCTION_16	FOR_2
0x4002af4	        0x4883c418	                           add rsp, 0x18	      1430	syntax.c	FUNCTION_16
0x4002af8	              0x5b	                                 pop rbx	      1430	syntax.c	FUNCTION_16
0x4002af9	              0x5d	                                 pop rbp	      1430	syntax.c	FUNCTION_16
0x4002afa	            0x415c	                                 pop r12	      1430	syntax.c	FUNCTION_16
0x4002afc	            0x415d	                                 pop r13	      1430	syntax.c	FUNCTION_16
0x4002afe	            0x415e	                                 pop r14	      1430	syntax.c	FUNCTION_16
0x4002b00	            0x415f	                                 pop r15	      1430	syntax.c	FUNCTION_16
0x4002b02	              0xc3	                                     ret	      1430	syntax.c	FUNCTION_16
0x4002b03	       0xf1f440000	                   nop dword [rax + rax]	      1430	syntax.c	FUNCTION_16
0x4002b08	      0xbe01000000	                              mov esi, 1	      1430	syntax.c	FUNCTION_16
0x4002b0d	      0xe9eefeffff	                           jmp 0x4002a00	      1430	syntax.c	FUNCTION_16
0x4002b12	    0x660f1f440000	                    nop word [rax + rax]	      1430	syntax.c	FUNCTION_16
0x4002b18	          0x4189cd	                           mov r13d, ecx	      1404	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4	IF_5
0x4002b1b	      0xbe01000000	                              mov esi, 1	      1406	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4
0x4002b20	      0xe9dbfeffff	                           jmp 0x4002a00	      1406	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4
0x4002b25	           0xf1f00	                         nop dword [rax]	      1406	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4
0x4002b28	          0x4829d0	                            sub rax, rdx	      1388	syntax.c	FUNCTION_16	ELSE_1
0x4002b2b	          0x4889c6	                            mov rsi, rax	      1388	syntax.c	FUNCTION_16	ELSE_1
0x4002b2e	    0x488b05000000	            mov rax, qword [0x04002b35] 	      1388	syntax.c	FUNCTION_16	ELSE_1
0x4002b35	          0x488b00	                    mov rax, qword [rax]	      1388	syntax.c	FUNCTION_16	ELSE_1
0x4002b38	            0x4899	                                     cqo	      1388	syntax.c	FUNCTION_16	ELSE_1
0x4002b3a	          0x48f7fe	                                idiv rsi	      1388	syntax.c	FUNCTION_16	ELSE_1
0x4002b3d	        0x448d6001	                     lea r12d, [rax + 1]	      1388	syntax.c	FUNCTION_16	ELSE_1
0x4002b41	      0xe96afeffff	                           jmp 0x40029b0	      1388	syntax.c	FUNCTION_16	ELSE_1
0x4002b46	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1388	syntax.c	FUNCTION_16	ELSE_1
0x4002b50	          0x4531ff	                          xor r15d, r15d	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4002b53	            0x85d2	                           test edx, edx	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4002b55	        0x4c8d7320	                   lea r14, [rbx + 0x20]	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4002b59	     0xf8e67ffffff	                           jle 0x4002ac6	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4002b5f	              0x90	                                     nop	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4002b60	          0x498b3e	                    mov rdi, qword [r14]	       708	syntax.c	FUNCTION_3	ELSE_1	CALL_3
0x4002b63	        0x4183c701	                             add r15d, 1	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4002b67	        0x4983c618	                           add r14, 0x18	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4002b6b	      0xe800000000	                          call 0x4002b70	       708	syntax.c	FUNCTION_3	ELSE_1	CALL_3
0x4002b70	    0x443bbbbc0000	           cmp r15d, dword [rbx + 0xbc] 	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4002b77	            0x7ce7	                            jl 0x4002b60	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4002b79	      0xe948ffffff	                           jmp 0x4002ac6	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4002b7e	            0x6690	                                     nop	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x4002b80	        0x4883c418	                           add rsp, 0x18	      1430	syntax.c	FUNCTION_16
0x4002b84	            0x31c0	                            xor eax, eax	      1382	syntax.c	FUNCTION_16	IF_1
0x4002b86	              0x5b	                                 pop rbx	      1430	syntax.c	FUNCTION_16
0x4002b87	              0x5d	                                 pop rbp	      1430	syntax.c	FUNCTION_16
0x4002b88	            0x415c	                                 pop r12	      1430	syntax.c	FUNCTION_16
0x4002b8a	            0x415d	                                 pop r13	      1430	syntax.c	FUNCTION_16
0x4002b8c	            0x415e	                                 pop r14	      1430	syntax.c	FUNCTION_16
0x4002b8e	            0x415f	                                 pop r15	      1430	syntax.c	FUNCTION_16
0x4002b90	              0xc3	                                     ret	      1430	syntax.c	FUNCTION_16
0x4002b91	     0xf1f80000000	                         nop dword [rax]	      1430	syntax.c	FUNCTION_16
0x4002b98	            0x31c0	                            xor eax, eax	      1382	syntax.c	FUNCTION_16	IF_1
0x4002b9a	              0xc3	                                     ret	      1430	syntax.c	FUNCTION_16
syn_id2name	DO,0:functions,0:IF,1:WHILE,0:CALL,0:ELSE,0:SWITCH,0:FOR,0	14
0x400df60	            0x85ff	                           test edi, edi	      9680	syntax.c	FUNCTION_151	IF_1
0x400df62	      0xb800000000	                              mov eax, 0	      9681	syntax.c	FUNCTION_151	IF_1
0x400df67	            0x7e27	                           jle 0x400df90	      9680	syntax.c	FUNCTION_151	IF_1
0x400df69	    0x3b3d00000000	            cmp edi, dword [0x0400df6f] 	      9680	syntax.c	FUNCTION_151	IF_1
0x400df6f	            0x7f1f	                            jg 0x400df90	      9680	syntax.c	FUNCTION_151	IF_1
0x400df71	          0x4863ff	                         movsxd rdi, edi	      9682	syntax.c	FUNCTION_151
0x400df74	    0x488b15000000	            mov rdx, qword [0x0400df7b] 	      9682	syntax.c	FUNCTION_151
0x400df7b	        0x488d04ff	                  lea rax, [rdi + rdi*8]	      9682	syntax.c	FUNCTION_151
0x400df7f	        0x488d0447	                  lea rax, [rdi + rax*2]	      9682	syntax.c	FUNCTION_151
0x400df83	        0x488d04c2	                  lea rax, [rdx + rax*8]	      9682	syntax.c	FUNCTION_151
0x400df87	    0x488b8068ffff	             mov rax, qword [rax - 0x98]	      9682	syntax.c	FUNCTION_151
0x400df8e	              0xc3	                                     ret	      9682	syntax.c	FUNCTION_151
0x400df8f	              0x90	                                     nop	      9682	syntax.c	FUNCTION_151
0x400df90	            0xf3c3	                                     ret	      9683	syntax.c	FUNCTION_151
update_si_end	DO,0:functions,0:IF,4:WHILE,0:CALL,3:ELSE,2:SWITCH,0:FOR,0	80
0x4004240	              0x53	                                push rbx	      2834	syntax.c	FUNCTION_34
0x4004241	          0x4889fb	                            mov rbx, rdi	      2834	syntax.c	FUNCTION_34
0x4004244	        0x4883ec60	                           sub rsp, 0x60	      2834	syntax.c	FUNCTION_34
0x4004248	            0x8b3f	                    mov edi, dword [rdi]	      2842	syntax.c	FUNCTION_34	IF_1
0x400424a	    0x64488b042528	                mov rax, qword fs:[0x28]	      2834	syntax.c	FUNCTION_34
0x4004253	      0x4889442458	             mov qword [rsp + 0x58], rax	      2834	syntax.c	FUNCTION_34
0x4004258	            0x31c0	                            xor eax, eax	      2834	syntax.c	FUNCTION_34
0x400425a	            0x85ff	                           test edi, edi	      2842	syntax.c	FUNCTION_34	IF_1
0x400425c	            0x7811	                            js 0x400426f	      2842	syntax.c	FUNCTION_34	IF_1
0x400425e	            0x85d2	                           test edx, edx	      2848	syntax.c	FUNCTION_34	IF_2
0x4004260	    0x488b05000000	            mov rax, qword [0x04004267] 	      2848	syntax.c	FUNCTION_34	IF_2
0x4004267	            0x7527	                           jne 0x4004290	      2848	syntax.c	FUNCTION_34	IF_2
0x4004269	        0x48394318	            cmp qword [rbx + 0x18], rax 	      2848	syntax.c	FUNCTION_34	IF_2
0x400426d	            0x7c21	                            jl 0x4004290	      2848	syntax.c	FUNCTION_34	IF_2
0x400426f	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      2888	syntax.c	FUNCTION_34
0x4004274	    0x644833042528	                xor rax, qword fs:[0x28]	      2888	syntax.c	FUNCTION_34
0x400427d	     0xf851d010000	                           jne 0x40043a0	      2888	syntax.c	FUNCTION_34
0x4004283	        0x4883c460	                           add rsp, 0x60	      2888	syntax.c	FUNCTION_34
0x4004287	              0x5b	                                 pop rbx	      2888	syntax.c	FUNCTION_34
0x4004288	              0xc3	                                     ret	      2888	syntax.c	FUNCTION_34
0x4004289	     0xf1f80000000	                         nop dword [rax]	      2888	syntax.c	FUNCTION_34
0x4004290	      0x4889442410	             mov qword [rsp + 0x10], rax	      2856	syntax.c	FUNCTION_34
0x4004295	        0x89742418	             mov dword [rsp + 0x18], esi	      2857	syntax.c	FUNCTION_34
0x4004299	        0x4c8d4368	                    lea r8, [rbx + 0x68]	      2858	syntax.c	FUNCTION_34	CALL_1
0x400429d	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      2855	syntax.c	FUNCTION_34
0x40042a5	    0xffb388000000	                 push qword [rbx + 0x88]	      2858	syntax.c	FUNCTION_34	CALL_1
0x40042ab	      0x488d442414	                   lea rax, [rsp + 0x14]	      2858	syntax.c	FUNCTION_34	CALL_1
0x40042b0	              0x50	                                push rax	      2858	syntax.c	FUNCTION_34	CALL_1
0x40042b1	      0x4c8d4c2450	                    lea r9, [rsp + 0x50]	      2858	syntax.c	FUNCTION_34	CALL_1
0x40042b6	      0x488d4c2440	                   lea rcx, [rsp + 0x40]	      2858	syntax.c	FUNCTION_34	CALL_1
0x40042bb	      0x488d542430	                   lea rdx, [rsp + 0x30]	      2858	syntax.c	FUNCTION_34	CALL_1
0x40042c0	      0x488d742420	                   lea rsi, [rsp + 0x20]	      2858	syntax.c	FUNCTION_34	CALL_1
0x40042c5	      0xe8b6f7ffff	                    call sym.find_endpos	      2858	syntax.c	FUNCTION_34	CALL_1
0x40042ca	              0x58	                                 pop rax	      2861	syntax.c	FUNCTION_34	IF_3
0x40042cb	              0x5a	                                 pop rdx	      2861	syntax.c	FUNCTION_34	IF_3
0x40042cc	    0x48837c242000	               cmp qword [rsp + 0x20], 0	      2861	syntax.c	FUNCTION_34	IF_3
0x40042d2	            0x754c	                           jne 0x4004320	      2861	syntax.c	FUNCTION_34	IF_3
0x40042d4	          0x486303	                 movsxd rax, dword [rbx]	      2864	syntax.c	FUNCTION_34	IF_3	IF_4
0x40042d7	    0x488b15000000	            mov rdx, qword [0x040042de] 	      2864	syntax.c	FUNCTION_34	IF_3	IF_4
0x40042de	        0x488d0480	                  lea rax, [rax + rax*4]	      2864	syntax.c	FUNCTION_34	IF_3	IF_4
0x40042e2	        0x48c1e005	                              shl rax, 5	      2864	syntax.c	FUNCTION_34	IF_3	IF_4
0x40042e6	    0x480382700200	            add rax, qword [rdx + 0x270]	      2864	syntax.c	FUNCTION_34	IF_3	IF_4
0x40042ed	        0xf6402404	               test byte [rax + 0x24], 4	      2864	syntax.c	FUNCTION_34	IF_3	IF_4
0x40042f1	            0x757d	                           jne 0x4004370	      2864	syntax.c	FUNCTION_34	IF_3	IF_4
0x40042f3	    0xc7435c000000	               mov dword [rbx + 0x5c], 0	      2874	syntax.c	FUNCTION_34	IF_3	ELSE_1
0x40042fa	    0x48c743180000	               mov qword [rbx + 0x18], 0	      2875	syntax.c	FUNCTION_34	IF_3	ELSE_1
0x4004302	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      2877	syntax.c	FUNCTION_34	IF_3
0x4004306	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      2877	syntax.c	FUNCTION_34	IF_3
0x400430a	        0x48894338	             mov qword [rbx + 0x38], rax	      2877	syntax.c	FUNCTION_34	IF_3
0x400430e	        0x48895340	             mov qword [rbx + 0x40], rdx	      2877	syntax.c	FUNCTION_34	IF_3
0x4004312	      0xe958ffffff	                           jmp 0x400426f	      2877	syntax.c	FUNCTION_34	IF_3
0x4004317	    0x660f1f840000	                    nop word [rax + rax]	      2877	syntax.c	FUNCTION_34	IF_3
0x4004320	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      2882	syntax.c	FUNCTION_34	ELSE_2
0x4004325	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      2882	syntax.c	FUNCTION_34	ELSE_2
0x400432a	    0xc7435c010000	               mov dword [rbx + 0x5c], 1	      2885	syntax.c	FUNCTION_34	ELSE_2
0x4004331	        0x48894318	             mov qword [rbx + 0x18], rax	      2882	syntax.c	FUNCTION_34	ELSE_2
0x4004335	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      2883	syntax.c	FUNCTION_34	ELSE_2
0x400433a	        0x48895320	             mov qword [rbx + 0x20], rdx	      2882	syntax.c	FUNCTION_34	ELSE_2
0x400433e	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      2883	syntax.c	FUNCTION_34	ELSE_2
0x4004343	        0x48894338	             mov qword [rbx + 0x38], rax	      2883	syntax.c	FUNCTION_34	ELSE_2
0x4004347	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      2884	syntax.c	FUNCTION_34	ELSE_2
0x400434c	        0x48895340	             mov qword [rbx + 0x40], rdx	      2883	syntax.c	FUNCTION_34	ELSE_2
0x4004350	      0x488b542448	            mov rdx, qword [rsp + 0x48] 	      2884	syntax.c	FUNCTION_34	ELSE_2
0x4004355	        0x48894348	             mov qword [rbx + 0x48], rax	      2884	syntax.c	FUNCTION_34	ELSE_2
0x4004359	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      2886	syntax.c	FUNCTION_34	ELSE_2
0x400435d	        0x48895350	             mov qword [rbx + 0x50], rdx	      2884	syntax.c	FUNCTION_34	ELSE_2
0x4004361	          0x894358	             mov dword [rbx + 0x58], eax	      2886	syntax.c	FUNCTION_34	ELSE_2
0x4004364	      0xe906ffffff	                           jmp 0x400426f	      2886	syntax.c	FUNCTION_34	ELSE_2
0x4004369	     0xf1f80000000	                         nop dword [rax]	      2886	syntax.c	FUNCTION_34	ELSE_2
0x4004370	    0x488b35000000	            mov rsi, qword [0x04004377] 	      2868	syntax.c	FUNCTION_34	IF_3	IF_4
0x4004377	    0x488b3d000000	            mov rdi, qword [0x0400437e] 	      3305	syntax.c	FUNCTION_42	CALL_1
0x400437e	            0x31d2	                            xor edx, edx	      3305	syntax.c	FUNCTION_42	CALL_1
0x4004380	    0xc7435c010000	               mov dword [rbx + 0x5c], 1	      2867	syntax.c	FUNCTION_34	IF_3	IF_4
0x4004387	        0x48897318	             mov qword [rbx + 0x18], rsi	      2868	syntax.c	FUNCTION_34	IF_3	IF_4
0x400438b	      0xe800000000	                          call 0x4004390	      3305	syntax.c	FUNCTION_42	CALL_1
0x4004390	          0x4889c7	                            mov rdi, rax	      2869	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_3
0x4004393	      0xe800000000	                          call 0x4004398	      2869	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_3
0x4004398	          0x894320	             mov dword [rbx + 0x20], eax	      2869	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_3
0x400439b	      0xe962ffffff	                           jmp 0x4004302	      2869	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_3
0x40043a0	      0xe800000000	                          call 0x40043a5	      2888	syntax.c	FUNCTION_34
get_id_list	DO,0:functions,0:IF,25:WHILE,1:CALL,40:ELSE,9:SWITCH,0:FOR,3	351
0x400e320	            0x4157	                                push r15	      6004	syntax.c	FUNCTION_92
0x400e322	            0x4156	                                push r14	      6004	syntax.c	FUNCTION_92
0x400e324	            0x4155	                                push r13	      6004	syntax.c	FUNCTION_92
0x400e326	            0x4154	                                push r12	      6004	syntax.c	FUNCTION_92
0x400e328	    0x41bc01000000	                             mov r12d, 1	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400e32e	              0x55	                                push rbp	      6004	syntax.c	FUNCTION_92
0x400e32f	              0x53	                                push rbx	      6004	syntax.c	FUNCTION_92
0x400e330	    0x4881ec180100	                          sub rsp, 0x118	      6004	syntax.c	FUNCTION_92
0x400e337	    0x64488b042528	                mov rax, qword fs:[0x28]	      6004	syntax.c	FUNCTION_92
0x400e340	    0x488984240801	            mov qword [rsp + 0x108], rax	      6004	syntax.c	FUNCTION_92
0x400e348	            0x31c0	                            xor eax, eax	      6004	syntax.c	FUNCTION_92
0x400e34a	          0x4863c6	                         movsxd rax, esi	      6004	syntax.c	FUNCTION_92
0x400e34d	      0x48897c2408	                mov qword [rsp + 8], rdi	      6004	syntax.c	FUNCTION_92
0x400e352	      0x4889542440	             mov qword [rsp + 0x40], rdx	      6004	syntax.c	FUNCTION_92
0x400e357	      0x4889442428	             mov qword [rsp + 0x28], rax	      6004	syntax.c	FUNCTION_92
0x400e35c	        0x894c244c	             mov dword [rsp + 0x4c], ecx	      6004	syntax.c	FUNCTION_92
0x400e360	          0x4889f8	                            mov rax, rdi	      6004	syntax.c	FUNCTION_92
0x400e363	    0x48c744242000	               mov qword [rsp + 0x20], 0	      6010	syntax.c	FUNCTION_92
0x400e36c	    0xc74424480000	               mov dword [rsp + 0x48], 0	      6009	syntax.c	FUNCTION_92
0x400e374	    0xc74424140100	               mov dword [rsp + 0x14], 1	      6024	syntax.c	FUNCTION_92	FOR_1
0x400e37c	         0xf1f4000	                         nop dword [rax]	      6024	syntax.c	FUNCTION_92	FOR_1
0x400e380	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      6029	syntax.c	FUNCTION_92	FOR_1	CALL_1
0x400e385	          0x480338	                    add rdi, qword [rax]	      6029	syntax.c	FUNCTION_92	FOR_1	CALL_1
0x400e388	      0xe800000000	                          call 0x400e38d	      6029	syntax.c	FUNCTION_92	FOR_1	CALL_1
0x400e38d	          0x80383d	                    cmp byte [rax], 0x3d	      6030	syntax.c	FUNCTION_92	FOR_1	IF_1
0x400e390	          0x4889c5	                            mov rbp, rax	      6029	syntax.c	FUNCTION_92	FOR_1	CALL_1
0x400e393	     0xf852b050000	                           jne 0x400e8c4	      6030	syntax.c	FUNCTION_92	FOR_1	IF_1
0x400e399	        0x488d7801	                      lea rdi, [rax + 1]	      6035	syntax.c	FUNCTION_92	FOR_1	CALL_4
0x400e39d	      0xe800000000	                          call 0x400e3a2	      6035	syntax.c	FUNCTION_92	FOR_1	CALL_4
0x400e3a2	           0xfb638	                   movzx edi, byte [rax]	      6036	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_5
0x400e3a5	          0x4889c5	                            mov rbp, rax	      6035	syntax.c	FUNCTION_92	FOR_1	CALL_4
0x400e3a8	      0xe800000000	                          call 0x400e3ad	      6036	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_5
0x400e3ad	            0x85c0	                           test eax, eax	      6036	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_5
0x400e3af	     0xf8569040000	                           jne 0x400e81e	      6036	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_5
0x400e3b5	         0xfb67d00	                   movzx edi, byte [rbp]	      6046	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_8
0x400e3b9	    0xc74424100000	               mov dword [rsp + 0x10], 0	      6046	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_8
0x400e3c1	    0x48bb01020000	              movabs rbx, 0x100100000201	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400e3cb	      0xe800000000	                          call 0x400e3d0	      6046	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_8
0x400e3d0	            0x85c0	                           test eax, eax	      6046	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_8
0x400e3d2	     0xf8572010000	                           jne 0x400e54a	      6046	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_8
0x400e3d8	     0xf1f84000000	                   nop dword [rax + rax]	      6046	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_8
0x400e3e0	         0xfb64500	                   movzx eax, byte [rbp]	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400e3e4	          0x4989ed	                            mov r13, rbp	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400e3e7	            0x3c2c	                            cmp al, 0x2c	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400e3e9	            0x770d	                            ja 0x400e3f8	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400e3eb	        0x480fa3c3	                             bt rbx, rax	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400e3ef	     0xf824c030000	                            jb 0x400e741	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400e3f5	           0xf1f00	                         nop dword [rax]	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400e3f8	        0x4983c501	                              add r13, 1	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400e3fc	      0x410fb64d00	                   movzx ecx, byte [r13]	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400e401	          0x4889d8	                            mov rax, rbx	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400e404	          0x48d3e8	                             shr rax, cl	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400e407	          0x83e001	                              and eax, 1	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400e40a	        0x4883f001	                              xor rax, 1	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400e40e	          0x80f92c	                            cmp cl, 0x2c	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400e411	        0x410f47c4	                         cmova eax, r12d	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400e415	            0x84c0	                             test al, al	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400e417	            0x75df	                           jne 0x400e3f8	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400e419	          0x4c89e8	                            mov rax, r13	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400e41c	          0x4829e8	                            sub rax, rbp	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400e41f	          0x8d7803	                      lea edi, [rax + 3]	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400e422	        0x48890424	                    mov qword [rsp], rax	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400e426	        0x89442418	             mov dword [rsp + 0x18], eax	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400e42a	      0xe800000000	                          call 0x400e42f	      6050	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_10
0x400e42f	          0x4885c0	                           test rax, rax	      6051	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_3
0x400e432	          0x4989c6	                            mov r14, rax	      6050	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_10
0x400e435	     0xf8484030000	                            je 0x400e7bf	      6051	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_3
0x400e43b	        0x4c8d7801	                      lea r15, [rax + 1]	      6056	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_11
0x400e43f	        0x488b1424	                    mov rdx, qword [rsp]	      6056	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_11
0x400e443	          0x4889ee	                            mov rsi, rbp	      6056	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_11
0x400e446	          0x4c89ff	                            mov rdi, r15	      6056	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_11
0x400e449	      0xe800000000	                          call 0x400e44e	      6056	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_11
0x400e44e	      0xbf00000000	                              mov edi, 0	      6057	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_12
0x400e453	      0xb907000000	                              mov ecx, 7	      6057	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_12
0x400e458	          0x4c89fe	                            mov rsi, r15	      6057	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_12
0x400e45b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      6057	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_12
0x400e45d	            0x7441	                            je 0x400e4a0	      6057	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_12
0x400e45f	      0x410fb64601	               movzx eax, byte [r14 + 1]	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0x400e464	          0x83f841	                           cmp eax, 0x41	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0x400e467	            0x89c2	                            mov edx, eax	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0x400e469	     0xf8451010000	                            je 0x400e5c0	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0x400e46f	          0x83f854	                           cmp eax, 0x54	      6059	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_14
0x400e472	     0xf854f010000	                           jne 0x400e5c7	      6059	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_14
0x400e478	      0x41807e024f	                cmp byte [r14 + 2], 0x4f	      6059	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_14
0x400e47d	     0xf85bd010000	                           jne 0x400e640	      6059	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_14
0x400e483	      0x41807e0350	                cmp byte [r14 + 3], 0x50	      6059	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_14
0x400e488	     0xf85b2010000	                           jne 0x400e640	      6059	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_14
0x400e48e	      0x41807e0400	                   cmp byte [r14 + 4], 0	      6059	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_14
0x400e493	     0xf85a7010000	                           jne 0x400e640	      6059	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_14
0x400e499	     0xf1f80000000	                         nop dword [rax]	      6059	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_14
0x400e4a0	      0x488b442408	                mov rax, qword [rsp + 8]	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x400e4a5	          0x488b00	                    mov rax, qword [rax]	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x400e4a8	           0xfb600	                   movzx eax, byte [rax]	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x400e4ab	          0x8d509f	                   lea edx, [rax - 0x61]	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x400e4ae	          0x80fa19	                            cmp dl, 0x19	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x400e4b1	     0xf86e1000000	                           jbe 0x400e598	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x400e4b7	            0x3c43	                            cmp al, 0x43	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x400e4b9	           0xf95c0	                                setne al	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x400e4bc	            0x84c0	                             test al, al	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x400e4be	     0xf85e1000000	                           jne 0x400e5a5	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x400e4c4	      0x448b442410	            mov r8d, dword [rsp + 0x10] 	      6069	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6
0x400e4c9	          0x4585c0	                           test r8d, r8d	      6069	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6
0x400e4cc	     0xf8506030000	                           jne 0x400e7d8	      6069	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6
0x400e4d2	      0x410fb64601	               movzx eax, byte [r14 + 1]	      6077	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_7
0x400e4d7	    0x41bf204e0000	                        mov r15d, 0x4e20	      6078	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_7
0x400e4dd	            0x3c41	                            cmp al, 0x41	      6077	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_7
0x400e4df	            0x7411	                            je 0x400e4f2	      6077	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_7
0x400e4e1	            0x3c54	                            cmp al, 0x54	      6080	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	ELSE_1	IF_8
0x400e4e3	    0x41bf08520000	                        mov r15d, 0x5208	      6080	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	ELSE_1	IF_8
0x400e4e9	      0xb8f0550000	                         mov eax, 0x55f0	      6080	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	ELSE_1	IF_8
0x400e4ee	        0x440f45f8	                        cmovne r15d, eax	      6080	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	ELSE_1	IF_8
0x400e4f2	    0x44033d000000	            add r15d, dword [0x0400e4f9]	      6083	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	ELSE_2
0x400e4f9	          0x4c89f7	                            mov rdi, r14	      6142	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_32
0x400e4fc	      0xe800000000	                          call 0x400e501	      6142	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_32
0x400e501	        0x4183ff00	                             cmp r15d, 0	      6143	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16
0x400e505	     0xf8498020000	                            je 0x400e7a3	      6143	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16
0x400e50b	            0x7e10	                           jle 0x400e51d	      6149	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17
0x400e50d	      0x837c241402	               cmp dword [rsp + 0x14], 2	      6151	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18
0x400e512	     0xf84e8000000	                            je 0x400e600	      6151	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18
0x400e518	      0x8344241001	               add dword [rsp + 0x10], 1	      6162	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17
0x400e51d	          0x4c89ef	                            mov rdi, r13	      6164	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_36
0x400e520	      0xe800000000	                          call 0x400e525	      6164	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_36
0x400e525	          0x80382c	                    cmp byte [rax], 0x2c	      6165	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_20
0x400e528	          0x4889c5	                            mov rbp, rax	      6164	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_36
0x400e52b	            0x751d	                           jne 0x400e54a	      6165	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_20
0x400e52d	        0x488d7801	                      lea rdi, [rax + 1]	      6167	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_37
0x400e531	      0xe800000000	                          call 0x400e536	      6167	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_37
0x400e536	          0x4889c5	                            mov rbp, rax	      6167	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_37
0x400e539	         0xfb67d00	                   movzx edi, byte [rbp]	      6046	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_8
0x400e53d	      0xe800000000	                          call 0x400e542	      6046	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_8
0x400e542	            0x85c0	                           test eax, eax	      6046	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_8
0x400e544	     0xf8496feffff	                            je 0x400e3e0	      6046	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_8
0x400e54a	      0x837c241401	               cmp dword [rsp + 0x14], 1	      6171	syntax.c	FUNCTION_92	FOR_1	IF_22
0x400e54f	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      6171	syntax.c	FUNCTION_92	FOR_1	IF_22
0x400e553	        0x89442448	             mov dword [rsp + 0x48], eax	      6171	syntax.c	FUNCTION_92	FOR_1	IF_22
0x400e557	     0xf85e5020000	                           jne 0x400e842	      6171	syntax.c	FUNCTION_92	FOR_1	IF_22
0x400e55d	        0x8b5c2410	            mov ebx, dword [rsp + 0x10] 	      6173	syntax.c	FUNCTION_92	FOR_1	IF_22	CALL_38
0x400e561	        0x8d7c1b02	                lea edi, [rbx + rbx + 2]	      6173	syntax.c	FUNCTION_92	FOR_1	IF_22	CALL_38
0x400e565	      0xe800000000	                          call 0x400e56a	      6173	syntax.c	FUNCTION_92	FOR_1	IF_22	CALL_38
0x400e56a	          0x4885c0	                           test rax, rax	      6174	syntax.c	FUNCTION_92	FOR_1	IF_22	IF_23
0x400e56d	      0x4889442420	             mov qword [rsp + 0x20], rax	      6173	syntax.c	FUNCTION_92	FOR_1	IF_22	CALL_38
0x400e572	     0xf8447020000	                            je 0x400e7bf	      6174	syntax.c	FUNCTION_92	FOR_1	IF_22	IF_23
0x400e578	          0x4c63eb	                         movsxd r13, ebx	      6176	syntax.c	FUNCTION_92	FOR_1	IF_22
0x400e57b	            0x31d2	                            xor edx, edx	      6176	syntax.c	FUNCTION_92	FOR_1	IF_22
0x400e57d	    0xc74424140200	               mov dword [rsp + 0x14], 2	      6176	syntax.c	FUNCTION_92	FOR_1	IF_22
0x400e585	      0x6642891468	              mov word [rax + r13*2], dx	      6176	syntax.c	FUNCTION_92	FOR_1	IF_22
0x400e58a	      0x488b442408	                mov rax, qword [rsp + 8]	      6176	syntax.c	FUNCTION_92	FOR_1	IF_22
0x400e58f	      0xe9ecfdffff	                           jmp 0x400e380	      6176	syntax.c	FUNCTION_92	FOR_1	IF_22
0x400e594	         0xf1f4000	                         nop dword [rax]	      6176	syntax.c	FUNCTION_92	FOR_1	IF_22
0x400e598	            0x3c63	                            cmp al, 0x63	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x400e59a	           0xf95c0	                                setne al	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x400e59d	            0x84c0	                             test al, al	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x400e59f	     0xf841fffffff	                            je 0x400e4c4	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x400e5a5	          0x4c89f8	                            mov rax, r15	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0x400e5a8	      0xba05000000	                              mov edx, 5	      6064	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_18
0x400e5ad	          0x4d89f7	                            mov r15, r14	      6064	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_18
0x400e5b0	      0xbe00000000	                              mov esi, 0	      6064	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_18
0x400e5b5	          0x4989c6	                            mov r14, rax	      6064	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_18
0x400e5b8	      0xe92e020000	                           jmp 0x400e7eb	      6064	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_18
0x400e5bd	           0xf1f00	                         nop dword [rax]	      6064	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_18
0x400e5c0	      0x41807e024c	                cmp byte [r14 + 2], 0x4c	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0x400e5c5	            0x7461	                            je 0x400e628	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0x400e5c7	      0xbf00000000	                              mov edi, 0	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0x400e5cc	      0xb90a000000	                            mov ecx, 0xa	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0x400e5d1	          0x4c89fe	                            mov rsi, r15	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0x400e5d4	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0x400e5d6	     0xf84c4feffff	                            je 0x400e4a0	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0x400e5dc	          0x80fa40	                            cmp dl, 0x40	      6085	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9
0x400e5df	            0x7574	                           jne 0x400e655	      6085	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9
0x400e5e1	        0x8b7c244c	            mov edi, dword [rsp + 0x4c] 	      6087	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	IF_10
0x400e5e5	            0x85ff	                           test edi, edi	      6087	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	IF_10
0x400e5e7	     0xf84bf020000	                            je 0x400e8ac	      6087	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	IF_10
0x400e5ed	          0x4c89f7	                            mov rdi, r14	      6142	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_32
0x400e5f0	      0xe800000000	                          call 0x400e5f5	      6142	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_32
0x400e5f5	      0xe923ffffff	                           jmp 0x400e51d	      6142	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_32
0x400e5fa	    0x660f1f440000	                    nop word [rax + rax]	      6142	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_32
0x400e600	        0x8b742448	            mov esi, dword [rsp + 0x48] 	      6154	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	IF_19
0x400e604	        0x39742410	            cmp dword [rsp + 0x10], esi 	      6154	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	IF_19
0x400e608	     0xf8d4d010000	                           jge 0x400e75b	      6154	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	IF_19
0x400e60e	      0x4863442410	         movsxd rax, dword [rsp + 0x10] 	      6160	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	ELSE_8
0x400e613	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      6160	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	ELSE_8
0x400e618	      0x6644893c46	            mov word [rsi + rax*2], r15w	      6160	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	ELSE_8
0x400e61d	      0xe9f6feffff	                           jmp 0x400e518	      6160	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	ELSE_8
0x400e622	    0x660f1f440000	                    nop word [rax + rax]	      6160	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	ELSE_8
0x400e628	      0x41807e034c	                cmp byte [r14 + 3], 0x4c	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0x400e62d	            0x7598	                           jne 0x400e5c7	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0x400e62f	      0x41807e0400	                   cmp byte [r14 + 4], 0	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0x400e634	     0xf8466feffff	                            je 0x400e4a0	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0x400e63a	            0xeb8b	                           jmp 0x400e5c7	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0x400e63c	         0xf1f4000	                         nop dword [rax]	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0x400e640	      0xbf00000000	                              mov edi, 0	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0x400e645	      0xb90a000000	                            mov ecx, 0xa	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0x400e64a	          0x4c89fe	                            mov rsi, r15	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0x400e64d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0x400e64f	     0xf844bfeffff	                            je 0x400e4a0	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0x400e655	      0xbe00000000	                              mov esi, 0	      6097	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	IF_11	CALL_24
0x400e65a	          0x4c89ff	                            mov rdi, r15	      6097	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	IF_11	CALL_24
0x400e65d	      0xe800000000	                          call 0x400e662	      6097	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	IF_11	CALL_24
0x400e662	          0x4885c0	                           test rax, rax	      6097	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	IF_11	CALL_24
0x400e665	     0xf842e020000	                            je 0x400e899	      6097	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	IF_11	CALL_24
0x400e66b	          0x4c89f7	                            mov rdi, r14	       148	string3.h	FUNCTION_180	CALL_3
0x400e66e	        0x41c6065e	                    mov byte [r14], 0x5e	      6104	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6
0x400e672	      0xe800000000	                          call 0x400e677	       148	string3.h	FUNCTION_180	CALL_3
0x400e677	      0xbe24000000	                           mov esi, 0x24	       148	string3.h	FUNCTION_180	CALL_3
0x400e67c	          0x4c89f7	                            mov rdi, r14	      6106	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_27
0x400e67f	      0x6641893406	                mov word [r14 + rax], si	       148	string3.h	FUNCTION_180	CALL_3
0x400e684	      0xbe01000000	                              mov esi, 1	      6106	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_27
0x400e689	      0xe800000000	                          call 0x400e68e	      6106	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_27
0x400e68e	          0x4885c0	                           test rax, rax	      6107	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	IF_12
0x400e691	      0x4889442450	             mov qword [rsp + 0x50], rax	      6106	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_27
0x400e696	     0xf843f020000	                            je 0x400e8db	      6107	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	IF_12
0x400e69c	    0x486305000000	         movsxd rax, dword [0x0400e6a3] 	      6116	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3
0x400e6a3	      0x4c896c2430	             mov qword [rsp + 0x30], r13	      6116	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3
0x400e6a8	      0x4c89742438	             mov qword [rsp + 0x38], r14	      6116	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3
0x400e6ad	    0xc78424f80000	               mov dword [rsp + 0xf8], 1	      6114	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6
0x400e6b8	    0xc70424000000	                      mov dword [rsp], 0	      6115	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6
0x400e6bf	      0x48896c2418	             mov qword [rsp + 0x18], rbp	      6115	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6
0x400e6c4	        0x488d14c0	                  lea rdx, [rax + rax*8]	      6115	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6
0x400e6c8	          0x4889c1	                            mov rcx, rax	      6116	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3
0x400e6cb	          0x4189cd	                           mov r13d, ecx	      6116	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3
0x400e6ce	        0x488d0450	                  lea rax, [rax + rdx*2]	      6116	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3
0x400e6d2	    0x4c8d3cc568ff	                 lea r15, [rax*8 - 0x98]	      6116	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3
0x400e6da	          0x4d89fe	                            mov r14, r15	      6116	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3
0x400e6dd	      0x448b7c2410	           mov r15d, dword [rsp + 0x10] 	      6116	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3
0x400e6e2	            0xeb19	                           jmp 0x400e6fd	      6116	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3
0x400e6e4	         0xf1f4000	                         nop dword [rax]	      6116	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3
0x400e6e8	        0x4183c701	                             add r15d, 1	      6135	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13
0x400e6ec	    0xc70424ffffff	            mov dword [rsp], 0xffffffff 	      6136	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13
0x400e6f3	          0x4189ed	                           mov r13d, ebp	      6136	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13
0x400e6f6	    0x4981ee980000	                           sub r14, 0x98	      6136	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13
0x400e6fd	          0x4489ed	                           mov ebp, r13d	      6116	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3
0x400e700	          0x83ed01	                              sub ebp, 1	      6116	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3
0x400e703	            0x786d	                            js 0x400e772	      6116	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3
0x400e705	    0x488b05000000	            mov rax, qword [0x0400e70c] 	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_29
0x400e70c	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_29
0x400e711	            0x31d2	                            xor edx, edx	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_29
0x400e713	        0x4a8b3430	              mov rsi, qword [rax + r14]	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_29
0x400e717	      0xe800000000	                          call 0x400e71c	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_29
0x400e71c	            0x85c0	                           test eax, eax	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_29
0x400e71e	            0x74d3	                            je 0x400e6f3	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_29
0x400e720	      0x837c241402	               cmp dword [rsp + 0x14], 2	      6121	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14
0x400e725	            0x75c1	                           jne 0x400e6e8	      6121	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14
0x400e727	      0x443b7c2448	           cmp r15d, dword [rsp + 0x48] 	      6127	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	IF_15
0x400e72c	     0xf8dd5000000	                           jge 0x400e807	      6127	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	IF_15
0x400e732	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      6133	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	ELSE_7
0x400e737	          0x4963c7	                        movsxd rax, r15d	      6133	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	ELSE_7
0x400e73a	      0x6644892c46	            mov word [rsi + rax*2], r13w	      6133	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	ELSE_7
0x400e73f	            0xeba7	                           jmp 0x400e6e8	      6133	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	ELSE_7
0x400e741	      0xbf03000000	                              mov edi, 3	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400e746	    0xc74424180000	               mov dword [rsp + 0x18], 0	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400e74e	    0x48c704240000	                      mov qword [rsp], 0	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400e756	      0xe9cffcffff	                           jmp 0x400e42a	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0x400e75b	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      6156	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	IF_19	CALL_35
0x400e760	      0xe800000000	                          call 0x400e765	      6156	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	IF_19	CALL_35
0x400e765	    0xc74424140100	               mov dword [rsp + 0x14], 1	      6157	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	IF_19
0x400e76d	      0xe9a6fdffff	                           jmp 0x400e518	      6157	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	IF_19
0x400e772	      0x4c8b742438	            mov r14, qword [rsp + 0x38] 	      6157	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	IF_19
0x400e777	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      6139	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_31
0x400e77c	      0x488b6c2418	            mov rbp, qword [rsp + 0x18] 	      6139	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_31
0x400e781	      0x44897c2410	            mov dword [rsp + 0x10], r15d	      6139	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_31
0x400e786	      0x4c8b6c2430	            mov r13, qword [rsp + 0x30] 	      6139	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_31
0x400e78b	      0xe800000000	                          call 0x400e790	      6139	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_31
0x400e790	          0x4c89f7	                            mov rdi, r14	      6142	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_32
0x400e793	      0xe800000000	                          call 0x400e798	      6142	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_32
0x400e798	          0x8b0c24	                    mov ecx, dword [rsp]	      6143	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16
0x400e79b	            0x85c9	                           test ecx, ecx	      6143	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16
0x400e79d	     0xf857afdffff	                           jne 0x400e51d	      6143	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16
0x400e7a3	      0xbe00000000	                              mov esi, 0	      6145	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16	CALL_34
0x400e7a8	            0x31ff	                            xor edi, edi	      6145	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16	CALL_34
0x400e7aa	      0xba05000000	                              mov edx, 5	      6145	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16	CALL_34
0x400e7af	      0xe800000000	                          call 0x400e7b4	      6145	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16	CALL_34
0x400e7b4	          0x4889ee	                            mov rsi, rbp	      6145	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16	CALL_34
0x400e7b7	          0x4889c7	                            mov rdi, rax	      6145	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16	CALL_34
0x400e7ba	      0xe800000000	                          call 0x400e7bf	      6145	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16	CALL_34
0x400e7bf	      0x488b442408	                mov rax, qword [rsp + 8]	      6181	syntax.c	FUNCTION_92
0x400e7c4	          0x488928	                    mov qword [rax], rbp	      6181	syntax.c	FUNCTION_92
0x400e7c7	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      6184	syntax.c	FUNCTION_92	IF_24	CALL_39
0x400e7cc	      0xe800000000	                          call 0x400e7d1	      6184	syntax.c	FUNCTION_92	IF_24	CALL_39
0x400e7d1	            0x31c0	                            xor eax, eax	      6185	syntax.c	FUNCTION_92	IF_24
0x400e7d3	      0xe99c000000	                           jmp 0x400e874	      6185	syntax.c	FUNCTION_92	IF_24
0x400e7d8	          0x4c89f8	                            mov rax, r15	      6185	syntax.c	FUNCTION_92	IF_24
0x400e7db	      0xba05000000	                              mov edx, 5	      6071	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_21
0x400e7e0	          0x4d89f7	                            mov r15, r14	      6071	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_21
0x400e7e3	      0xbe00000000	                              mov esi, 0	      6071	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_21
0x400e7e8	          0x4989c6	                            mov r14, rax	      6071	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_21
0x400e7eb	            0x31ff	                            xor edi, edi	      6071	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_21
0x400e7ed	      0xe800000000	                          call 0x400e7f2	      6071	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_21
0x400e7f2	          0x4c89f6	                            mov rsi, r14	      6071	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_21
0x400e7f5	          0x4889c7	                            mov rdi, rax	      6071	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_21
0x400e7f8	      0xe800000000	                          call 0x400e7fd	      6071	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_21
0x400e7fd	          0x4c89ff	                            mov rdi, r15	      6074	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_22
0x400e800	      0xe800000000	                          call 0x400e805	      6074	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_22
0x400e805	            0xebb8	                           jmp 0x400e7bf	      6075	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6
0x400e807	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      6129	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	IF_15	CALL_30
0x400e80c	      0xe800000000	                          call 0x400e811	      6129	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	IF_15	CALL_30
0x400e811	    0xc74424140100	               mov dword [rsp + 0x14], 1	      6130	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	IF_15
0x400e819	      0xe9cafeffff	                           jmp 0x400e6e8	      6130	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	IF_15
0x400e81e	      0x488b442408	                mov rax, qword [rsp + 8]	      6038	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_7
0x400e823	      0xba05000000	                              mov edx, 5	      6038	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_7
0x400e828	      0xbe00000000	                              mov esi, 0	      6038	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_7
0x400e82d	          0x488b18	                    mov rbx, qword [rax]	      6038	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_7
0x400e830	            0x31ff	                            xor edi, edi	      6038	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_7
0x400e832	      0xe800000000	                          call 0x400e837	      6038	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_7
0x400e837	          0x4889de	                            mov rsi, rbx	      6038	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_7
0x400e83a	          0x4889c7	                            mov rdi, rax	      6038	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_7
0x400e83d	      0xe800000000	                          call 0x400e842	      6038	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_7
0x400e842	    0x48837c242000	               cmp qword [rsp + 0x20], 0	      6182	syntax.c	FUNCTION_92	IF_24
0x400e848	      0x488b442408	                mov rax, qword [rsp + 8]	      6181	syntax.c	FUNCTION_92
0x400e84d	          0x488928	                    mov qword [rax], rbp	      6181	syntax.c	FUNCTION_92
0x400e850	     0xf8471ffffff	                            je 0x400e7c7	      6182	syntax.c	FUNCTION_92	IF_24
0x400e856	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      6188	syntax.c	FUNCTION_92	IF_25
0x400e85b	        0x48833800	                      cmp qword [rax], 0	      6188	syntax.c	FUNCTION_92	IF_25
0x400e85f	     0xf8483000000	                            je 0x400e8e8	      6188	syntax.c	FUNCTION_92	IF_25
0x400e865	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      6191	syntax.c	FUNCTION_92	CALL_40
0x400e86a	      0xe800000000	                          call 0x400e86f	      6191	syntax.c	FUNCTION_92	CALL_40
0x400e86f	      0xb801000000	                              mov eax, 1	      6193	syntax.c	FUNCTION_92
0x400e874	    0x488bb4240801	           mov rsi, qword [rsp + 0x108] 	      6194	syntax.c	FUNCTION_92
0x400e87c	    0x644833342528	                xor rsi, qword fs:[0x28]	      6194	syntax.c	FUNCTION_92
0x400e885	            0x7573	                           jne 0x400e8fa	      6194	syntax.c	FUNCTION_92
0x400e887	    0x4881c4180100	                          add rsp, 0x118	      6194	syntax.c	FUNCTION_92
0x400e88e	              0x5b	                                 pop rbx	      6194	syntax.c	FUNCTION_92
0x400e88f	              0x5d	                                 pop rbp	      6194	syntax.c	FUNCTION_92
0x400e890	            0x415c	                                 pop r12	      6194	syntax.c	FUNCTION_92
0x400e892	            0x415d	                                 pop r13	      6194	syntax.c	FUNCTION_92
0x400e894	            0x415e	                                 pop r14	      6194	syntax.c	FUNCTION_92
0x400e896	            0x415f	                                 pop r15	      6194	syntax.c	FUNCTION_92
0x400e898	              0xc3	                                     ret	      6194	syntax.c	FUNCTION_92
0x400e899	          0x8b3424	                    mov esi, dword [rsp]	      6098	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	CALL_25
0x400e89c	          0x4c89ff	                            mov rdi, r15	      6098	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	CALL_25
0x400e89f	      0xe800000000	                          call 0x400e8a4	      6098	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	CALL_25
0x400e8a4	          0x4189c7	                           mov r15d, eax	      6098	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	CALL_25
0x400e8a7	      0xe94dfcffff	                           jmp 0x400e4f9	      6098	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	CALL_25
0x400e8ac	        0x8b742418	            mov esi, dword [rsp + 0x18] 	      6090	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	CALL_23
0x400e8b0	        0x498d7e02	                      lea rdi, [r14 + 2]	      6090	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	CALL_23
0x400e8b4	          0x83ee01	                              sub esi, 1	      6090	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	CALL_23
0x400e8b7	      0xe8443cffff	              call sym.syn_check_cluster	      6090	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	CALL_23
0x400e8bc	          0x4189c7	                           mov r15d, eax	      6090	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	CALL_23
0x400e8bf	      0xe935fcffff	                           jmp 0x400e4f9	      6090	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	CALL_23
0x400e8c4	      0x488b442408	                mov rax, qword [rsp + 8]	      6032	syntax.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0x400e8c9	      0xba05000000	                              mov edx, 5	      6032	syntax.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0x400e8ce	      0xbe00000000	                              mov esi, 0	      6032	syntax.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0x400e8d3	          0x488b18	                    mov rbx, qword [rax]	      6032	syntax.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0x400e8d6	      0xe955ffffff	                           jmp 0x400e830	      6032	syntax.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0x400e8db	          0x4c89f7	                            mov rdi, r14	      6110	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	IF_12	CALL_28
0x400e8de	      0xe800000000	                          call 0x400e8e3	      6110	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	IF_12	CALL_28
0x400e8e3	      0xe9d7feffff	                           jmp 0x400e7bf	      6111	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	IF_12
0x400e8e8	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      6189	syntax.c	FUNCTION_92	IF_25
0x400e8ed	          0x488930	                    mov qword [rax], rsi	      6189	syntax.c	FUNCTION_92	IF_25
0x400e8f0	      0xb801000000	                              mov eax, 1	      6193	syntax.c	FUNCTION_92
0x400e8f5	      0xe97affffff	                           jmp 0x400e874	      6193	syntax.c	FUNCTION_92
0x400e8fa	      0xe800000000	                          call 0x400e8ff	      6194	syntax.c	FUNCTION_92
get_syntax_attr	DO,0:functions,0:IF,4:WHILE,1:CALL,3:ELSE,0:SWITCH,0:FOR,0	92
0x400a220	          0x4885f6	                           test rsi, rsi	      1852	syntax.c	FUNCTION_27	IF_1
0x400a223	    0x488b05000000	            mov rax, qword [0x0400a22a] 	      1855	syntax.c	FUNCTION_27	IF_1
0x400a22a	            0x741f	                            je 0x400a24b	      1852	syntax.c	FUNCTION_27	IF_1
0x400a22c	    0x8b885c020000	           mov ecx, dword [rax + 0x25c] 	      1855	syntax.c	FUNCTION_27	IF_1
0x400a232	            0x85c9	                           test ecx, ecx	      1857	syntax.c	FUNCTION_27	IF_1
0x400a234	     0xf85a6000000	                           jne 0x400a2e0	      1857	syntax.c	FUNCTION_27	IF_1
0x400a23a	    0x448b80900200	           mov r8d, dword [rax + 0x290] 	      1857	syntax.c	FUNCTION_27	IF_1
0x400a241	            0x31c9	                            xor ecx, ecx	      1857	syntax.c	FUNCTION_27	IF_1
0x400a243	          0x4585c0	                           test r8d, r8d	      1857	syntax.c	FUNCTION_27	IF_1
0x400a246	           0xf94c1	                                 sete cl	      1857	syntax.c	FUNCTION_27	IF_1
0x400a249	            0x890e	                    mov dword [rsi], ecx	      1855	syntax.c	FUNCTION_27	IF_1
0x400a24b	    0x4883b8100300	              cmp qword [rax + 0x310], 0	      1860	syntax.c	FUNCTION_27	IF_2
0x400a253	     0xf8437010000	                            je 0x400a390	      1860	syntax.c	FUNCTION_27	IF_2
0x400a259	            0x4155	                                push r13	      1849	syntax.c	FUNCTION_27
0x400a25b	            0x4154	                                push r12	      1849	syntax.c	FUNCTION_27
0x400a25d	          0x4189d4	                           mov r12d, edx	      1849	syntax.c	FUNCTION_27
0x400a260	              0x55	                                push rbp	      1849	syntax.c	FUNCTION_27
0x400a261	              0x53	                                push rbx	      1849	syntax.c	FUNCTION_27
0x400a262	          0x4889f5	                            mov rbp, rsi	      1849	syntax.c	FUNCTION_27
0x400a265	            0x89fb	                            mov ebx, edi	      1849	syntax.c	FUNCTION_27
0x400a267	        0x4883ec08	                              sub rsp, 8	      1849	syntax.c	FUNCTION_27
0x400a26b	    0x488b05000000	            mov rax, qword [0x0400a272] 	      1864	syntax.c	FUNCTION_27	IF_3
0x400a272	    0x488b80981500	          mov rax, qword [rax + 0x1598] 	      1864	syntax.c	FUNCTION_27	IF_3
0x400a279	          0x4885c0	                           test rax, rax	      1864	syntax.c	FUNCTION_27	IF_3
0x400a27c	            0x7e08	                           jle 0x400a286	      1864	syntax.c	FUNCTION_27	IF_3
0x400a27e	            0x39c7	                            cmp edi, eax	      1864	syntax.c	FUNCTION_27	IF_3
0x400a280	     0xf8d8a000000	                           jge 0x400a310	      1864	syntax.c	FUNCTION_27	IF_3
0x400a286	    0x8b0500000000	            mov eax, dword [0x0400a28c] 	      1879	syntax.c	FUNCTION_27	IF_4
0x400a28c	            0x85c0	                           test eax, eax	      1879	syntax.c	FUNCTION_27	IF_4
0x400a28e	            0x7460	                            je 0x400a2f0	      1879	syntax.c	FUNCTION_27	IF_4
0x400a290	    0x8b0d00000000	            mov ecx, dword [0x0400a296] 	      1885	syntax.c	FUNCTION_27	WHILE_1
0x400a296	            0x39cb	                            cmp ebx, ecx	      1885	syntax.c	FUNCTION_27	WHILE_1
0x400a298	     0xf8cde000000	                            jl 0x400a37c	      1885	syntax.c	FUNCTION_27	WHILE_1
0x400a29e	          0x4531ed	                          xor r13d, r13d	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_3
0x400a2a1	     0xf1f80000000	                         nop dword [rax]	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_3
0x400a2a8	            0x39cb	                            cmp ebx, ecx	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_3
0x400a2aa	          0x4489e9	                           mov ecx, r13d	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_3
0x400a2ad	          0x4889ea	                            mov rdx, rbp	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_3
0x400a2b0	        0x410f44cc	                         cmove ecx, r12d	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_3
0x400a2b4	      0xbe01000000	                              mov esi, 1	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_3
0x400a2b9	            0x31ff	                            xor edi, edi	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_3
0x400a2bb	      0xe8a0dbffff	               call sym.syn_current_attr	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_3
0x400a2c0	    0x8b1500000000	            mov edx, dword [0x0400a2c6] 	      1889	syntax.c	FUNCTION_27	WHILE_1
0x400a2c6	          0x8d4a01	                      lea ecx, [rdx + 1]	      1889	syntax.c	FUNCTION_27	WHILE_1
0x400a2c9	            0x39cb	                            cmp ebx, ecx	      1885	syntax.c	FUNCTION_27	WHILE_1
0x400a2cb	    0x890d00000000	            mov dword [0x0400a2d1], ecx 	      1889	syntax.c	FUNCTION_27	WHILE_1
0x400a2d1	            0x7dd5	                           jge 0x400a2a8	      1885	syntax.c	FUNCTION_27	WHILE_1
0x400a2d3	        0x4883c408	                              add rsp, 8	      1893	syntax.c	FUNCTION_27
0x400a2d7	              0x5b	                                 pop rbx	      1893	syntax.c	FUNCTION_27
0x400a2d8	              0x5d	                                 pop rbp	      1893	syntax.c	FUNCTION_27
0x400a2d9	            0x415c	                                 pop r12	      1893	syntax.c	FUNCTION_27
0x400a2db	            0x415d	                                 pop r13	      1893	syntax.c	FUNCTION_27
0x400a2dd	              0xc3	                                     ret	      1893	syntax.c	FUNCTION_27
0x400a2de	            0x6690	                                     nop	      1893	syntax.c	FUNCTION_27
0x400a2e0	          0x83f901	                              cmp ecx, 1	      1857	syntax.c	FUNCTION_27	IF_1
0x400a2e3	           0xf94c1	                                 sete cl	      1857	syntax.c	FUNCTION_27	IF_1
0x400a2e6	           0xfb6c9	                           movzx ecx, cl	      1857	syntax.c	FUNCTION_27	IF_1
0x400a2e9	            0x890e	                    mov dword [rsi], ecx	      1855	syntax.c	FUNCTION_27	IF_1
0x400a2eb	      0xe95bffffff	                           jmp 0x400a24b	      1855	syntax.c	FUNCTION_27	IF_1
0x400a2f0	    0xc70500000000	           mov dword [0x0400a2fa], 0x90 	      1740	syntax.c	FUNCTION_24
0x400a2fa	    0xc70500000000	               mov dword [0x0400a304], 3	      1741	syntax.c	FUNCTION_24
0x400a304	            0xeb8a	                           jmp 0x400a290	      1741	syntax.c	FUNCTION_24
0x400a306	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1741	syntax.c	FUNCTION_24
0x400a310	    0x8b1500000000	            mov edx, dword [0x0400a316] 	       722	syntax.c	FUNCTION_4	FOR_1
0x400a316	    0x488b05000000	            mov rax, qword [0x0400a31d] 	       722	syntax.c	FUNCTION_4	FOR_1
0x400a31d	            0x31ed	                            xor ebp, ebp	       722	syntax.c	FUNCTION_4	FOR_1
0x400a31f	            0x85d2	                           test edx, edx	       722	syntax.c	FUNCTION_4	FOR_1
0x400a321	    0x488d98880000	                   lea rbx, [rax + 0x88]	       722	syntax.c	FUNCTION_4	FOR_1
0x400a328	            0x7e20	                           jle 0x400a34a	       722	syntax.c	FUNCTION_4	FOR_1
0x400a32a	    0x660f1f440000	                    nop word [rax + rax]	       722	syntax.c	FUNCTION_4	FOR_1
0x400a330	          0x488b3b	                    mov rdi, qword [rbx]	       723	syntax.c	FUNCTION_4	CALL_1
0x400a333	          0x83c501	                              add ebp, 1	       722	syntax.c	FUNCTION_4	FOR_1
0x400a336	    0x4881c3900000	                           add rbx, 0x90	       722	syntax.c	FUNCTION_4	FOR_1
0x400a33d	      0xe800000000	                          call 0x400a342	       723	syntax.c	FUNCTION_4	CALL_1
0x400a342	    0x3b2d00000000	            cmp ebp, dword [0x0400a348] 	       722	syntax.c	FUNCTION_4	FOR_1
0x400a348	            0x7ce6	                            jl 0x400a330	       722	syntax.c	FUNCTION_4	FOR_1
0x400a34a	      0xbf00000000	                              mov edi, 0	       724	syntax.c	FUNCTION_4	CALL_2
0x400a34f	      0xe800000000	                          call 0x400a354	       724	syntax.c	FUNCTION_4	CALL_2
0x400a354	    0xc70500000000	               mov dword [0x0400a35e], 0	      1868	syntax.c	FUNCTION_27	IF_3
0x400a35e	    0xc70500000000	               mov dword [0x0400a368], 0	      1869	syntax.c	FUNCTION_27	IF_3
0x400a368	    0xc70500000000	               mov dword [0x0400a372], 0	      1872	syntax.c	FUNCTION_27	IF_3
0x400a372	    0xc70500000000	               mov dword [0x0400a37c], 0	      1873	syntax.c	FUNCTION_27	IF_3
0x400a37c	        0x4883c408	                              add rsp, 8	      1893	syntax.c	FUNCTION_27
0x400a380	            0x31c0	                            xor eax, eax	      1875	syntax.c	FUNCTION_27	IF_3
0x400a382	              0x5b	                                 pop rbx	      1893	syntax.c	FUNCTION_27
0x400a383	              0x5d	                                 pop rbp	      1893	syntax.c	FUNCTION_27
0x400a384	            0x415c	                                 pop r12	      1893	syntax.c	FUNCTION_27
0x400a386	            0x415d	                                 pop r13	      1893	syntax.c	FUNCTION_27
0x400a388	              0xc3	                                     ret	      1893	syntax.c	FUNCTION_27
0x400a389	     0xf1f80000000	                         nop dword [rax]	      1893	syntax.c	FUNCTION_27
0x400a390	            0x31c0	                            xor eax, eax	      1861	syntax.c	FUNCTION_27	IF_2
0x400a392	              0xc3	                                     ret	      1893	syntax.c	FUNCTION_27
syn_cmd_cluster	DO,0:functions,0:IF,11:WHILE,0:CALL,21:ELSE,4:SWITCH,0:FOR,1	168
0x400edb0	            0x4157	                                push r15	      5649	syntax.c	FUNCTION_88
0x400edb2	            0x4156	                                push r14	      5649	syntax.c	FUNCTION_88
0x400edb4	            0x4155	                                push r13	      5649	syntax.c	FUNCTION_88
0x400edb6	            0x4154	                                push r12	      5649	syntax.c	FUNCTION_88
0x400edb8	              0x55	                                push rbp	      5649	syntax.c	FUNCTION_88
0x400edb9	              0x53	                                push rbx	      5649	syntax.c	FUNCTION_88
0x400edba	          0x4889fd	                            mov rbp, rdi	      5649	syntax.c	FUNCTION_88
0x400edbd	        0x4883ec38	                           sub rsp, 0x38	      5649	syntax.c	FUNCTION_88
0x400edc1	          0x4c8b2f	                    mov r13, qword [rdi]	      5650	syntax.c	FUNCTION_88
0x400edc4	    0x64488b042528	                mov rax, qword fs:[0x28]	      5649	syntax.c	FUNCTION_88
0x400edcd	      0x4889442428	             mov qword [rsp + 0x28], rax	      5649	syntax.c	FUNCTION_88
0x400edd2	            0x31c0	                            xor eax, eax	      5649	syntax.c	FUNCTION_88
0x400edd4	          0x4c89ef	                            mov rdi, r13	      5659	syntax.c	FUNCTION_88	CALL_1
0x400edd7	      0xe800000000	                          call 0x400eddc	      5659	syntax.c	FUNCTION_88	CALL_1
0x400eddc	          0x8b5530	            mov edx, dword [rbp + 0x30] 	      5660	syntax.c	FUNCTION_88	IF_1
0x400eddf	        0x48894508	                mov qword [rbp + 8], rax	      5659	syntax.c	FUNCTION_88	CALL_1
0x400ede3	            0x85d2	                           test edx, edx	      5660	syntax.c	FUNCTION_88	IF_1
0x400ede5	            0x7429	                            je 0x400ee10	      5660	syntax.c	FUNCTION_88	IF_1
0x400ede7	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      5720	syntax.c	FUNCTION_88
0x400edec	    0x644833042528	                xor rax, qword fs:[0x28]	      5720	syntax.c	FUNCTION_88
0x400edf5	     0xf8564020000	                           jne 0x400f05f	      5720	syntax.c	FUNCTION_88
0x400edfb	        0x4883c438	                           add rsp, 0x38	      5720	syntax.c	FUNCTION_88
0x400edff	              0x5b	                                 pop rbx	      5720	syntax.c	FUNCTION_88
0x400ee00	              0x5d	                                 pop rbp	      5720	syntax.c	FUNCTION_88
0x400ee01	            0x415c	                                 pop r12	      5720	syntax.c	FUNCTION_88
0x400ee03	            0x415d	                                 pop r13	      5720	syntax.c	FUNCTION_88
0x400ee05	            0x415e	                                 pop r14	      5720	syntax.c	FUNCTION_88
0x400ee07	            0x415f	                                 pop r15	      5720	syntax.c	FUNCTION_88
0x400ee09	              0xc3	                                     ret	      5720	syntax.c	FUNCTION_88
0x400ee0a	    0x660f1f440000	                    nop word [rax + rax]	      5720	syntax.c	FUNCTION_88
0x400ee10	          0x4c89ef	                            mov rdi, r13	      4582	syntax.c	FUNCTION_75	CALL_1
0x400ee13	      0xe800000000	                          call 0x400ee18	      4582	syntax.c	FUNCTION_75	CALL_1
0x400ee18	          0x4889c7	                            mov rdi, rax	      4583	syntax.c	FUNCTION_75	CALL_2
0x400ee1b	          0x4889c3	                            mov rbx, rax	      4582	syntax.c	FUNCTION_75	CALL_1
0x400ee1e	      0xe800000000	                          call 0x400ee23	      4583	syntax.c	FUNCTION_75	CALL_2
0x400ee23	      0x410fb67d00	                   movzx edi, byte [r13]	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x400ee28	          0x4989c4	                            mov r12, rax	      4583	syntax.c	FUNCTION_75	CALL_2
0x400ee2b	      0xe800000000	                          call 0x400ee30	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x400ee30	            0x85c0	                           test eax, eax	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x400ee32	     0xf85c8010000	                           jne 0x400f000	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x400ee38	      0x41803c2400	                       cmp byte [r12], 0	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x400ee3d	     0xf84bd010000	                            je 0x400f000	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x400ee43	          0x4c29eb	                            sub rbx, r13	      5667	syntax.c	FUNCTION_88	IF_2	CALL_3
0x400ee46	          0x4c89ef	                            mov rdi, r13	      5667	syntax.c	FUNCTION_88	IF_2	CALL_3
0x400ee49	      0x4c89642418	             mov qword [rsp + 0x18], r12	      5663	syntax.c	FUNCTION_88	CALL_2
0x400ee4e	          0x4889de	                            mov rsi, rbx	      5667	syntax.c	FUNCTION_88	IF_2	CALL_3
0x400ee51	      0xe8aa36ffff	              call sym.syn_check_cluster	      5667	syntax.c	FUNCTION_88	IF_2	CALL_3
0x400ee56	            0x85c0	                           test eax, eax	      5668	syntax.c	FUNCTION_88	IF_2	IF_3
0x400ee58	            0x748d	                            je 0x400ede7	      5668	syntax.c	FUNCTION_88	IF_2	IF_3
0x400ee5a	      0x2dd8590000	                         sub eax, 0x59d8	      5670	syntax.c	FUNCTION_88	IF_2
0x400ee5f	          0x4531ff	                          xor r15d, r15d	      5655	syntax.c	FUNCTION_88
0x400ee62	    0x49be00020000	         movabs r14, 0x2000000100000200 	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0x400ee6c	        0x89442404	                mov dword [rsp + 4], eax	      5670	syntax.c	FUNCTION_88	IF_2
0x400ee70	            0x4898	                                    cdqe	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x400ee72	        0x488d0440	                  lea rax, [rax + rax*2]	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x400ee76	        0x48c1e003	                              shl rax, 3	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x400ee7a	      0x4889442408	                mov qword [rsp + 8], rax	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x400ee7f	      0xe97e000000	                           jmp 0x400ef02	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x400ee84	         0xf1f4000	                         nop dword [rax]	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x400ee88	         0xfb64303	               movzx eax, byte [rbx + 3]	      5675	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_5
0x400ee8c	            0x3c3d	                            cmp al, 0x3d	      5675	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_5
0x400ee8e	     0xf878d000000	                            ja 0x400ef21	      5675	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_5
0x400ee94	        0x490fa3c6	                             bt r14, rax	      5675	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_5
0x400ee98	    0x41bc02000000	                             mov r12d, 2	      5678	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4
0x400ee9e	      0xbe03000000	                              mov esi, 3	      5677	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4
0x400eea3	            0x737c	                           jae 0x400ef21	      5675	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_5
0x400eea5	          0x8b4d30	            mov ecx, dword [rbp + 0x30] 	      5696	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_10
0x400eea8	      0x488d542420	                   lea rdx, [rsp + 0x20]	      5696	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_10
0x400eead	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      5696	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_10
0x400eeb2	    0x48c744242000	               mov qword [rsp + 0x20], 0	      5695	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3
0x400eebb	      0xe860f4ffff	                    call sym.get_id_list	      5696	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_10
0x400eec0	            0x85c0	                           test eax, eax	      5696	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_10
0x400eec2	     0xf8448010000	                            je 0x400f010	      5696	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_10
0x400eec8	        0x8b442404	                mov eax, dword [rsp + 4]	      5701	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8
0x400eecc	            0x85c0	                           test eax, eax	      5701	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8
0x400eece	     0xf881c010000	                            js 0x400eff0	      5701	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8
0x400eed4	    0x488b05000000	            mov rax, qword [0x0400eedb] 	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x400eedb	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x400eee0	      0x488d742420	                   lea rsi, [rsp + 0x20]	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x400eee5	          0x4489e2	                           mov edx, r12d	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x400eee8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x400eeec	    0x4803b8880200	            add rdi, qword [rax + 0x288]	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x400eef3	        0x4883c710	                           add rdi, 0x10	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x400eef7	      0xe8441dffff	               call sym.syn_combine_list	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x400eefc	    0x41bf01000000	                             mov r15d, 1	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_13
0x400ef02	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      5674	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_4
0x400ef07	      0xba03000000	                              mov edx, 3	      5674	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_4
0x400ef0c	      0xbe00000000	                              mov esi, 0	      5674	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_4
0x400ef11	          0x4889df	                            mov rdi, rbx	      5674	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_4
0x400ef14	      0xe800000000	                          call 0x400ef19	      5674	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_4
0x400ef19	            0x85c0	                           test eax, eax	      5674	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_4
0x400ef1b	     0xf8467ffffff	                            je 0x400ee88	      5674	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_4
0x400ef21	      0xba06000000	                              mov edx, 6	      5680	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_6
0x400ef26	      0xbe00000000	                              mov esi, 0	      5680	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_6
0x400ef2b	          0x4889df	                            mov rdi, rbx	      5680	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_6
0x400ef2e	      0xe800000000	                          call 0x400ef33	      5680	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_6
0x400ef33	            0x85c0	                           test eax, eax	      5680	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_6
0x400ef35	            0x751d	                           jne 0x400ef54	      5680	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_6
0x400ef37	         0xfb64306	               movzx eax, byte [rbx + 6]	      5681	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_7
0x400ef3b	            0x3c3d	                            cmp al, 0x3d	      5681	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_7
0x400ef3d	            0x7715	                            ja 0x400ef54	      5681	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_7
0x400ef3f	        0x490fa3c6	                             bt r14, rax	      5681	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_7
0x400ef43	    0x41bc03000000	                             mov r12d, 3	      5684	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5
0x400ef49	      0xbe06000000	                              mov esi, 6	      5683	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5
0x400ef4e	     0xf8251ffffff	                            jb 0x400eea5	      5681	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_7
0x400ef54	      0xba08000000	                              mov edx, 8	      5686	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_8
0x400ef59	      0xbe00000000	                              mov esi, 0	      5686	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_8
0x400ef5e	          0x4889df	                            mov rdi, rbx	      5686	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_8
0x400ef61	      0xe800000000	                          call 0x400ef66	      5686	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_8
0x400ef66	            0x85c0	                           test eax, eax	      5686	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_8
0x400ef68	            0x7508	                           jne 0x400ef72	      5686	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_8
0x400ef6a	         0xfb64308	               movzx eax, byte [rbx + 8]	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0x400ef6e	            0x3c3d	                            cmp al, 0x3d	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0x400ef70	            0x765e	                           jbe 0x400efd0	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0x400ef72	          0x4585ff	                         test r15d, r15d	      5709	syntax.c	FUNCTION_88	IF_2	IF_9
0x400ef75	     0xf85c5000000	                           jne 0x400f040	      5709	syntax.c	FUNCTION_88	IF_2	IF_9
0x400ef7b	            0x31ff	                            xor edi, edi	      5717	syntax.c	FUNCTION_88	CALL_18
0x400ef7d	      0xba05000000	                              mov edx, 5	      5717	syntax.c	FUNCTION_88	CALL_18
0x400ef82	      0xbe00000000	                              mov esi, 0	      5717	syntax.c	FUNCTION_88	CALL_18
0x400ef87	      0xe800000000	                          call 0x400ef8c	      5717	syntax.c	FUNCTION_88	CALL_18
0x400ef8c	          0x4889c7	                            mov rdi, rax	      5717	syntax.c	FUNCTION_88	CALL_18
0x400ef8f	      0xe800000000	                          call 0x400ef94	      5717	syntax.c	FUNCTION_88	CALL_18
0x400ef94	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5718	syntax.c	FUNCTION_88	IF_11	CALL_19
0x400ef99	          0x4885c0	                           test rax, rax	      5718	syntax.c	FUNCTION_88	IF_11	CALL_19
0x400ef9c	            0x7410	                            je 0x400efae	      5718	syntax.c	FUNCTION_88	IF_11	CALL_19
0x400ef9e	           0xfb638	                   movzx edi, byte [rax]	      5718	syntax.c	FUNCTION_88	IF_11	CALL_19
0x400efa1	      0xe800000000	                          call 0x400efa6	      5718	syntax.c	FUNCTION_88	IF_11	CALL_19
0x400efa6	            0x85c0	                           test eax, eax	      5718	syntax.c	FUNCTION_88	IF_11	CALL_19
0x400efa8	     0xf8539feffff	                           jne 0x400ede7	      5718	syntax.c	FUNCTION_88	IF_11	CALL_19
0x400efae	            0x31ff	                            xor edi, edi	      5719	syntax.c	FUNCTION_88	CALL_21
0x400efb0	      0xba05000000	                              mov edx, 5	      5719	syntax.c	FUNCTION_88	CALL_21
0x400efb5	      0xbe00000000	                              mov esi, 0	      5719	syntax.c	FUNCTION_88	CALL_21
0x400efba	      0xe800000000	                          call 0x400efbf	      5719	syntax.c	FUNCTION_88	CALL_21
0x400efbf	          0x4c89ee	                            mov rsi, r13	      5719	syntax.c	FUNCTION_88	CALL_21
0x400efc2	          0x4889c7	                            mov rdi, rax	      5719	syntax.c	FUNCTION_88	CALL_21
0x400efc5	      0xe800000000	                          call 0x400efca	      5719	syntax.c	FUNCTION_88	CALL_21
0x400efca	      0xe918feffff	                           jmp 0x400ede7	      5719	syntax.c	FUNCTION_88	CALL_21
0x400efcf	              0x90	                                     nop	      5719	syntax.c	FUNCTION_88	CALL_21
0x400efd0	        0x490fa3c6	                             bt r14, rax	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0x400efd4	            0x739c	                           jae 0x400ef72	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0x400efd6	    0x41bc01000000	                             mov r12d, 1	      5690	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6
0x400efdc	      0xbe08000000	                              mov esi, 8	      5689	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6
0x400efe1	      0xe9bffeffff	                           jmp 0x400eea5	      5689	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6
0x400efe6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5689	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6
0x400eff0	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      5705	syntax.c	FUNCTION_88	IF_2	FOR_1	CALL_14
0x400eff5	      0xe800000000	                          call 0x400effa	      5705	syntax.c	FUNCTION_88	IF_2	FOR_1	CALL_14
0x400effa	      0xe9fdfeffff	                           jmp 0x400eefc	      5705	syntax.c	FUNCTION_88	IF_2	FOR_1	CALL_14
0x400efff	              0x90	                                     nop	      5705	syntax.c	FUNCTION_88	IF_2	FOR_1	CALL_14
0x400f000	    0x48c744241800	               mov qword [rsp + 0x18], 0	      5663	syntax.c	FUNCTION_88	CALL_2
0x400f009	      0xe96dffffff	                           jmp 0x400ef7b	      5663	syntax.c	FUNCTION_88	CALL_2
0x400f00e	            0x6690	                                     nop	      5663	syntax.c	FUNCTION_88	CALL_2
0x400f010	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      5698	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_12
0x400f015	            0x31ff	                            xor edi, edi	      5698	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_12
0x400f017	      0xba05000000	                              mov edx, 5	      5698	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_12
0x400f01c	      0xbe00000000	                              mov esi, 0	      5698	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_12
0x400f021	      0xe800000000	                          call 0x400f026	      5698	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_12
0x400f026	          0x4889de	                            mov rsi, rbx	      5698	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_12
0x400f029	          0x4889c7	                            mov rdi, rax	      5698	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_12
0x400f02c	      0xe800000000	                          call 0x400f031	      5698	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_12
0x400f031	      0xe93cffffff	                           jmp 0x400ef72	      5699	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7
0x400f036	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5699	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7
0x400f040	      0xbf23000000	                           mov edi, 0x23	      5711	syntax.c	FUNCTION_88	IF_2	IF_9	CALL_15
0x400f045	      0xe800000000	                          call 0x400f04a	      5711	syntax.c	FUNCTION_88	IF_2	IF_9	CALL_15
0x400f04a	    0x488b05000000	            mov rax, qword [0x0400f051] 	      5712	syntax.c	FUNCTION_88	IF_2	IF_9	CALL_16
0x400f051	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      5712	syntax.c	FUNCTION_88	IF_2	IF_9	CALL_16
0x400f055	      0xe800000000	                          call 0x400f05a	      5712	syntax.c	FUNCTION_88	IF_2	IF_9	CALL_16
0x400f05a	      0xe935ffffff	                           jmp 0x400ef94	      5712	syntax.c	FUNCTION_88	IF_2	IF_9	CALL_16
0x400f05f	      0xe800000000	                          call 0x400f064	      5720	syntax.c	FUNCTION_88
get_syntax_name	DO,0:functions,0:IF,0:WHILE,0:CALL,0:ELSE,0:SWITCH,1:FOR,0	27
0x400b3f0	    0x8b0500000000	            mov eax, dword [0x0400b3f6] 	      6531	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400b3f6	          0x83f801	                              cmp eax, 1	      6531	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400b3f9	            0x7445	                            je 0x400b440	      6531	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400b3fb	            0x7233	                            jb 0x400b430	      6531	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400b3fd	          0x83f802	                              cmp eax, 2	      6531	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400b400	            0x7416	                            je 0x400b418	      6531	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400b402	          0x83f803	                              cmp eax, 3	      6531	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400b405	            0x7521	                           jne 0x400b428	      6531	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400b407	          0x4863f6	                         movsxd rsi, esi	      6552	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400b40a	    0x488b04f50000	                  mov rax, qword [rsi*8]	      6552	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400b412	              0xc3	                                     ret	      6552	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400b413	       0xf1f440000	                   nop dword [rax + rax]	      6552	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400b418	          0x4863f6	                         movsxd rsi, esi	      6544	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400b41b	    0x488b04f50000	                  mov rax, qword [rsi*8]	      6544	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400b423	              0xc3	                                     ret	      6544	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400b424	         0xf1f4000	                         nop dword [rax]	      6544	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400b428	            0x31c0	                            xor eax, eax	      6555	syntax.c	ELSE_5	FUNCTION_101
0x400b42a	              0xc3	                                     ret	      6556	syntax.c	ELSE_5	FUNCTION_101
0x400b42b	       0xf1f440000	                   nop dword [rax + rax]	      6556	syntax.c	ELSE_5	FUNCTION_101
0x400b430	          0x4863f6	                         movsxd rsi, esi	      6534	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400b433	        0x48c1e604	                              shl rsi, 4	      6534	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400b437	    0x488b86000000	                    mov rax, qword [rsi]	      6534	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400b43e	              0xc3	                                     ret	      6534	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400b43f	              0x90	                                     nop	      6534	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400b440	          0x4863f6	                         movsxd rsi, esi	      6538	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400b443	    0x488b04f50000	                  mov rax, qword [rsi*8]	      6538	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0x400b44b	              0xc3	                                     ret	      6538	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
syn_cmd_include	DO,0:functions,0:IF,9:WHILE,0:CALL,15:ELSE,0:SWITCH,0:FOR,0	143
0x4002710	            0x4156	                                push r14	      4819	syntax.c	FUNCTION_78
0x4002712	            0x4155	                                push r13	      4819	syntax.c	FUNCTION_78
0x4002714	            0x4154	                                push r12	      4819	syntax.c	FUNCTION_78
0x4002716	              0x55	                                push rbp	      4819	syntax.c	FUNCTION_78
0x4002717	              0x53	                                push rbx	      4819	syntax.c	FUNCTION_78
0x4002718	          0x4889fb	                            mov rbx, rdi	      4819	syntax.c	FUNCTION_78
0x400271b	        0x4883ec10	                           sub rsp, 0x10	      4819	syntax.c	FUNCTION_78
0x400271f	          0x488b2f	                    mov rbp, qword [rdi]	      4820	syntax.c	FUNCTION_78
0x4002722	    0x64488b042528	                mov rax, qword fs:[0x28]	      4819	syntax.c	FUNCTION_78
0x400272b	      0x4889442408	                mov qword [rsp + 8], rax	      4819	syntax.c	FUNCTION_78
0x4002730	            0x31c0	                            xor eax, eax	      4819	syntax.c	FUNCTION_78
0x4002732	    0x48c704240000	                      mov qword [rsp], 0	      4824	syntax.c	FUNCTION_78
0x400273a	          0x4889ef	                            mov rdi, rbp	      4829	syntax.c	FUNCTION_78	CALL_1
0x400273d	      0xe800000000	                          call 0x4002742	      4829	syntax.c	FUNCTION_78	CALL_1
0x4002742	        0x48894308	                mov qword [rbx + 8], rax	      4829	syntax.c	FUNCTION_78	CALL_1
0x4002746	          0x8b4330	            mov eax, dword [rbx + 0x30] 	      4830	syntax.c	FUNCTION_78	IF_1
0x4002749	            0x85c0	                           test eax, eax	      4830	syntax.c	FUNCTION_78	IF_1
0x400274b	     0xf8537010000	                           jne 0x4002888	      4830	syntax.c	FUNCTION_78	IF_1
0x4002751	        0x807d0040	                    cmp byte [rbp], 0x40	      4833	syntax.c	FUNCTION_78	IF_2
0x4002755	    0x41bc01000000	                             mov r12d, 1	      4821	syntax.c	FUNCTION_78
0x400275b	     0xf845f010000	                            je 0x40028c0	      4833	syntax.c	FUNCTION_78	IF_2
0x4002761	      0x48834b2818	             or qword [rbx + 0x28], 0x18	      4853	syntax.c	FUNCTION_78
0x4002766	          0x4889df	                            mov rdi, rbx	      4854	syntax.c	FUNCTION_78	CALL_6
0x4002769	      0xe800000000	                          call 0x400276e	      4854	syntax.c	FUNCTION_78	CALL_6
0x400276e	          0x488b3b	                    mov rdi, qword [rbx]	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x4002771	           0xfb607	                   movzx eax, byte [rdi]	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x4002774	            0x3c3c	                            cmp al, 0x3c	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x4002776	            0x7468	                            je 0x40027e0	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x4002778	            0x3c24	                            cmp al, 0x24	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x400277a	            0x7464	                            je 0x40027e0	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x400277c	      0xe800000000	                          call 0x4002781	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x4002781	            0x85c0	                           test eax, eax	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x4002783	            0x755b	                           jne 0x40027e0	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x4002785	    0x8b0500000000	            mov eax, dword [0x0400278b] 	      4873	syntax.c	FUNCTION_78	IF_8
0x400278b	      0x3de6030000	                          cmp eax, 0x3e6	      4873	syntax.c	FUNCTION_78	IF_8
0x4002790	     0xf8f7a010000	                            jg 0x4002910	      4873	syntax.c	FUNCTION_78	IF_8
0x4002796	          0x83c001	                              add eax, 1	      4879	syntax.c	FUNCTION_78
0x4002799	    0x8b2d00000000	            mov ebp, dword [0x0400279f] 	      4878	syntax.c	FUNCTION_78
0x400279f	          0x488b3b	                    mov rdi, qword [rbx]	      4883	syntax.c	FUNCTION_78	IF_9	CALL_13
0x40027a2	    0x890500000000	            mov dword [0x040027a8], eax 	      4879	syntax.c	FUNCTION_78
0x40027a8	    0x890500000000	            mov dword [0x040027ae], eax 	      4879	syntax.c	FUNCTION_78
0x40027ae	      0xbe01000000	                              mov esi, 1	      4883	syntax.c	FUNCTION_78	IF_9	CALL_13
0x40027b3	    0x488b05000000	            mov rax, qword [0x040027ba] 	      4880	syntax.c	FUNCTION_78
0x40027ba	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4880	syntax.c	FUNCTION_78
0x40027be	    0x448ba8040300	          mov r13d, dword [rax + 0x304] 	      4880	syntax.c	FUNCTION_78
0x40027c5	    0x4489a0040300	           mov dword [rax + 0x304], r12d	      4881	syntax.c	FUNCTION_78
0x40027cc	      0xe800000000	                          call 0x40027d1	      4883	syntax.c	FUNCTION_78	IF_9	CALL_13
0x40027d1	            0x85c0	                           test eax, eax	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x40027d3	           0xf94c0	                                 sete al	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x40027d6	            0xeb72	                           jmp 0x400284a	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x40027d8	     0xf1f84000000	                   nop dword [rax + rax]	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x40027e0	    0x488b35000000	            mov rsi, qword [0x040027e7] 	      4861	syntax.c	FUNCTION_78	IF_5	IF_6	CALL_8
0x40027e7	          0x4889e2	                            mov rdx, rsp	      4861	syntax.c	FUNCTION_78	IF_5	IF_6	CALL_8
0x40027ea	          0x4889df	                            mov rdi, rbx	      4861	syntax.c	FUNCTION_78	IF_5	IF_6	CALL_8
0x40027ed	      0xe800000000	                          call 0x40027f2	      4861	syntax.c	FUNCTION_78	IF_5	IF_6	CALL_8
0x40027f2	            0x85c0	                           test eax, eax	      4861	syntax.c	FUNCTION_78	IF_5	IF_6	CALL_8
0x40027f4	     0xf84b6000000	                            je 0x40028b0	      4861	syntax.c	FUNCTION_78	IF_5	IF_6	CALL_8
0x40027fa	    0x8b0500000000	            mov eax, dword [0x04002800] 	      4873	syntax.c	FUNCTION_78	IF_8
0x4002800	      0x3de6030000	                          cmp eax, 0x3e6	      4873	syntax.c	FUNCTION_78	IF_8
0x4002805	     0xf8f05010000	                            jg 0x4002910	      4873	syntax.c	FUNCTION_78	IF_8
0x400280b	          0x83c001	                              add eax, 1	      4879	syntax.c	FUNCTION_78
0x400280e	    0x8b2d00000000	            mov ebp, dword [0x04002814] 	      4878	syntax.c	FUNCTION_78
0x4002814	          0x488b3b	                    mov rdi, qword [rbx]	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x4002817	    0x890500000000	            mov dword [0x0400281d], eax 	      4879	syntax.c	FUNCTION_78
0x400281d	    0x890500000000	            mov dword [0x04002823], eax 	      4879	syntax.c	FUNCTION_78
0x4002823	            0x31d2	                            xor edx, edx	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x4002825	    0x488b05000000	            mov rax, qword [0x0400282c] 	      4880	syntax.c	FUNCTION_78
0x400282c	            0x31f6	                            xor esi, esi	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x400282e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4880	syntax.c	FUNCTION_78
0x4002832	    0x448ba8040300	          mov r13d, dword [rax + 0x304] 	      4880	syntax.c	FUNCTION_78
0x4002839	    0x4489a0040300	           mov dword [rax + 0x304], r12d	      4881	syntax.c	FUNCTION_78
0x4002840	      0xe800000000	                          call 0x4002845	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x4002845	            0x85c0	                           test eax, eax	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x4002847	           0xf94c0	                                 sete al	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x400284a	            0x84c0	                             test al, al	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x400284c	            0x741f	                            je 0x400286d	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x400284e	          0x488b1b	                    mov rbx, qword [rbx]	      4884	syntax.c	FUNCTION_78	CALL_15
0x4002851	      0xbe00000000	                              mov esi, 0	      4884	syntax.c	FUNCTION_78	CALL_15
0x4002856	            0x31ff	                            xor edi, edi	      4884	syntax.c	FUNCTION_78	CALL_15
0x4002858	      0xba05000000	                              mov edx, 5	      4884	syntax.c	FUNCTION_78	CALL_15
0x400285d	      0xe800000000	                          call 0x4002862	      4884	syntax.c	FUNCTION_78	CALL_15
0x4002862	          0x4889de	                            mov rsi, rbx	      4884	syntax.c	FUNCTION_78	CALL_15
0x4002865	          0x4889c7	                            mov rdi, rax	      4884	syntax.c	FUNCTION_78	CALL_15
0x4002868	      0xe800000000	                          call 0x400286d	      4884	syntax.c	FUNCTION_78	CALL_15
0x400286d	    0x488b05000000	            mov rax, qword [0x04002874] 	      4885	syntax.c	FUNCTION_78
0x4002874	    0x892d00000000	            mov dword [0x0400287a], ebp 	      4886	syntax.c	FUNCTION_78
0x400287a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4885	syntax.c	FUNCTION_78
0x400287e	    0x4489a8040300	           mov dword [rax + 0x304], r13d	      4885	syntax.c	FUNCTION_78
0x4002885	           0xf1f00	                         nop dword [rax]	      4885	syntax.c	FUNCTION_78
0x4002888	      0x488b442408	                mov rax, qword [rsp + 8]	      4887	syntax.c	FUNCTION_78
0x400288d	    0x644833042528	                xor rax, qword fs:[0x28]	      4887	syntax.c	FUNCTION_78
0x4002896	     0xf85b2000000	                           jne 0x400294e	      4887	syntax.c	FUNCTION_78
0x400289c	        0x4883c410	                           add rsp, 0x10	      4887	syntax.c	FUNCTION_78
0x40028a0	              0x5b	                                 pop rbx	      4887	syntax.c	FUNCTION_78
0x40028a1	              0x5d	                                 pop rbp	      4887	syntax.c	FUNCTION_78
0x40028a2	            0x415c	                                 pop r12	      4887	syntax.c	FUNCTION_78
0x40028a4	            0x415d	                                 pop r13	      4887	syntax.c	FUNCTION_78
0x40028a6	            0x415e	                                 pop r14	      4887	syntax.c	FUNCTION_78
0x40028a8	              0xc3	                                     ret	      4887	syntax.c	FUNCTION_78
0x40028a9	     0xf1f80000000	                         nop dword [rax]	      4887	syntax.c	FUNCTION_78
0x40028b0	        0x488b3c24	                    mov rdi, qword [rsp]	      4863	syntax.c	FUNCTION_78	IF_5	IF_6	IF_7
0x40028b4	          0x4885ff	                           test rdi, rdi	      4863	syntax.c	FUNCTION_78	IF_5	IF_6	IF_7
0x40028b7	            0x74cf	                            je 0x4002888	      4863	syntax.c	FUNCTION_78	IF_5	IF_6	IF_7
0x40028b9	      0xe800000000	                          call 0x40028be	      4875	syntax.c	FUNCTION_78	IF_8	CALL_11
0x40028be	            0xebc8	                           jmp 0x4002888	      4876	syntax.c	FUNCTION_78	IF_8
0x40028c0	        0x4c8d7501	                      lea r14, [rbp + 1]	      4835	syntax.c	FUNCTION_78	IF_2
0x40028c4	          0x4c89f7	                            mov rdi, r14	      4582	syntax.c	FUNCTION_75	CALL_1
0x40028c7	      0xe800000000	                          call 0x40028cc	      4582	syntax.c	FUNCTION_75	CALL_1
0x40028cc	          0x4889c7	                            mov rdi, rax	      4583	syntax.c	FUNCTION_75	CALL_2
0x40028cf	          0x4989c4	                            mov r12, rax	      4582	syntax.c	FUNCTION_75	CALL_1
0x40028d2	      0xe800000000	                          call 0x40028d7	      4583	syntax.c	FUNCTION_75	CALL_2
0x40028d7	         0xfb67d01	               movzx edi, byte [rbp + 1]	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x40028db	          0x4989c5	                            mov r13, rax	      4583	syntax.c	FUNCTION_75	CALL_2
0x40028de	      0xe800000000	                          call 0x40028e3	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x40028e3	            0x85c0	                           test eax, eax	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x40028e5	            0x7549	                           jne 0x4002930	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x40028e7	      0x41807d0000	                       cmp byte [r13], 0	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x40028ec	            0x7442	                            je 0x4002930	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x40028ee	          0x4c89e6	                            mov rsi, r12	      4842	syntax.c	FUNCTION_78	IF_2	CALL_5
0x40028f1	          0x4c89f7	                            mov rdi, r14	      4842	syntax.c	FUNCTION_78	IF_2	CALL_5
0x40028f4	          0x4c29f6	                            sub rsi, r14	      4842	syntax.c	FUNCTION_78	IF_2	CALL_5
0x40028f7	      0xe804fcffff	              call sym.syn_check_cluster	      4842	syntax.c	FUNCTION_78	IF_2	CALL_5
0x40028fc	            0x85c0	                           test eax, eax	      4843	syntax.c	FUNCTION_78	IF_2	IF_4
0x40028fe	          0x4189c4	                           mov r12d, eax	      4842	syntax.c	FUNCTION_78	IF_2	CALL_5
0x4002901	            0x7485	                            je 0x4002888	      4843	syntax.c	FUNCTION_78	IF_2	IF_4
0x4002903	          0x4c892b	                    mov qword [rbx], r13	      4846	syntax.c	FUNCTION_78	IF_2
0x4002906	      0xe956feffff	                           jmp 0x4002761	      4846	syntax.c	FUNCTION_78	IF_2
0x400290b	       0xf1f440000	                   nop dword [rax + rax]	      4846	syntax.c	FUNCTION_78	IF_2
0x4002910	            0x31ff	                            xor edi, edi	      4875	syntax.c	FUNCTION_78	IF_8	CALL_11
0x4002912	      0xba05000000	                              mov edx, 5	      4875	syntax.c	FUNCTION_78	IF_8	CALL_11
0x4002917	      0xbe00000000	                              mov esi, 0	      4875	syntax.c	FUNCTION_78	IF_8	CALL_11
0x400291c	      0xe800000000	                          call 0x4002921	      4875	syntax.c	FUNCTION_78	IF_8	CALL_11
0x4002921	          0x4889c7	                            mov rdi, rax	      4875	syntax.c	FUNCTION_78	IF_8	CALL_11
0x4002924	            0xeb93	                           jmp 0x40028b9	      4875	syntax.c	FUNCTION_78	IF_8	CALL_11
0x4002926	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4875	syntax.c	FUNCTION_78	IF_8	CALL_11
0x4002930	            0x31ff	                            xor edi, edi	      4839	syntax.c	FUNCTION_78	IF_2	IF_3	CALL_4
0x4002932	      0xba05000000	                              mov edx, 5	      4839	syntax.c	FUNCTION_78	IF_2	IF_3	CALL_4
0x4002937	      0xbe00000000	                              mov esi, 0	      4839	syntax.c	FUNCTION_78	IF_2	IF_3	CALL_4
0x400293c	      0xe800000000	                          call 0x4002941	      4839	syntax.c	FUNCTION_78	IF_2	IF_3	CALL_4
0x4002941	          0x4889c7	                            mov rdi, rax	      4839	syntax.c	FUNCTION_78	IF_2	IF_3	CALL_4
0x4002944	      0xe800000000	                          call 0x4002949	      4839	syntax.c	FUNCTION_78	IF_2	IF_3	CALL_4
0x4002949	      0xe93affffff	                           jmp 0x4002888	      4840	syntax.c	FUNCTION_78	IF_2	IF_3
0x400294e	      0xe800000000	                          call 0x4002953	      4887	syntax.c	FUNCTION_78
get_gui_attr_idx	DO,0:functions,0:IF,0:WHILE,0:CALL,2:ELSE,0:SWITCH,0:FOR,0	125
0x400ca60	            0x4157	                                push r15	      8973	syntax.c	FUNCTION_134
0x400ca62	            0x4156	                                push r14	      8973	syntax.c	FUNCTION_134
0x400ca64	            0x4155	                                push r13	      8973	syntax.c	FUNCTION_134
0x400ca66	            0x4154	                                push r12	      8973	syntax.c	FUNCTION_134
0x400ca68	          0x4189fc	                           mov r12d, edi	      8973	syntax.c	FUNCTION_134
0x400ca6b	              0x55	                                push rbp	      8973	syntax.c	FUNCTION_134
0x400ca6c	              0x53	                                push rbx	      8973	syntax.c	FUNCTION_134
0x400ca6d	          0x4889d5	                            mov rbp, rdx	      8973	syntax.c	FUNCTION_134
0x400ca70	          0x4889f3	                            mov rbx, rsi	      8973	syntax.c	FUNCTION_134
0x400ca73	        0x4883ec38	                           sub rsp, 0x38	      8973	syntax.c	FUNCTION_134
0x400ca77	    0x8b0d00000000	            mov ecx, dword [0x0400ca7d] 	      8803	syntax.c	FUNCTION_131	FOR_1
0x400ca7d	    0xc70500000000	           mov dword [0x0400ca87], 0x28 	      8797	syntax.c	FUNCTION_131
0x400ca87	    0x64488b042528	                mov rax, qword fs:[0x28]	      8973	syntax.c	FUNCTION_134
0x400ca90	      0x4889442428	             mov qword [rsp + 0x28], rax	      8973	syntax.c	FUNCTION_134
0x400ca95	            0x31c0	                            xor eax, eax	      8973	syntax.c	FUNCTION_134
0x400ca97	    0x48c704240000	                      mov qword [rsp], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400ca9f	    0x48c744241800	               mov qword [rsp + 0x18], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400caa8	            0x85c9	                           test ecx, ecx	      8803	syntax.c	FUNCTION_131	FOR_1
0x400caaa	    0x48c744242000	               mov qword [rsp + 0x20], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400cab3	        0x66893c24	                      mov word [rsp], di	      8977	syntax.c	FUNCTION_134
0x400cab7	      0x4889742408	                mov qword [rsp + 8], rsi	      8978	syntax.c	FUNCTION_134
0x400cabc	      0x4889542410	             mov qword [rsp + 0x10], rdx	      8979	syntax.c	FUNCTION_134
0x400cac1	    0xc70500000000	               mov dword [0x0400cacb], 7	      8798	syntax.c	FUNCTION_131
0x400cacb	     0xf8e2e010000	                           jle 0x400cbff	      8803	syntax.c	FUNCTION_131	FOR_1
0x400cad1	            0x89fe	                            mov esi, edi	      8803	syntax.c	FUNCTION_131	FOR_1
0x400cad3	    0x488b05000000	            mov rax, qword [0x0400cada] 	      8803	syntax.c	FUNCTION_131	FOR_1
0x400cada	            0x31d2	                            xor edx, edx	      8803	syntax.c	FUNCTION_131	FOR_1
0x400cadc	            0xeb0d	                           jmp 0x400caeb	      8803	syntax.c	FUNCTION_131	FOR_1
0x400cade	            0x6690	                                     nop	      8803	syntax.c	FUNCTION_131	FOR_1
0x400cae0	          0x83c201	                              add edx, 1	      8803	syntax.c	FUNCTION_131	FOR_1
0x400cae3	        0x4883c028	                           add rax, 0x28	      8803	syntax.c	FUNCTION_131	FOR_1
0x400cae7	            0x39d1	                            cmp ecx, edx	      8803	syntax.c	FUNCTION_131	FOR_1
0x400cae9	            0x744d	                            je 0x400cb38	      8803	syntax.c	FUNCTION_131	FOR_1
0x400caeb	          0x663b30	                      cmp si, word [rax]	      8806	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400caee	            0x75f0	                           jne 0x400cae0	      8806	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400caf0	        0x483b5808	                cmp rbx, qword [rax + 8]	      8810	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400caf4	            0x75ea	                           jne 0x400cae0	      8810	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400caf6	        0x483b6810	            cmp rbp, qword [rax + 0x10] 	      8811	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400cafa	            0x75e4	                           jne 0x400cae0	      8811	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400cafc	      0x4883781800	               cmp qword [rax + 0x18], 0	      8813	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400cb01	            0x75dd	                           jne 0x400cae0	      8813	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400cb03	      0x4883782000	               cmp qword [rax + 0x20], 0	      8815	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400cb08	            0x75d6	                           jne 0x400cae0	      8815	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400cb0a	    0x8d8200010000	                  lea eax, [rdx + 0x100]	      8846	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400cb10	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	      8981	syntax.c	FUNCTION_134
0x400cb15	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      8981	syntax.c	FUNCTION_134
0x400cb1e	     0xf8564010000	                           jne 0x400cc88	      8981	syntax.c	FUNCTION_134
0x400cb24	        0x4883c438	                           add rsp, 0x38	      8981	syntax.c	FUNCTION_134
0x400cb28	              0x5b	                                 pop rbx	      8981	syntax.c	FUNCTION_134
0x400cb29	              0x5d	                                 pop rbp	      8981	syntax.c	FUNCTION_134
0x400cb2a	            0x415c	                                 pop r12	      8981	syntax.c	FUNCTION_134
0x400cb2c	            0x415d	                                 pop r13	      8981	syntax.c	FUNCTION_134
0x400cb2e	            0x415e	                                 pop r14	      8981	syntax.c	FUNCTION_134
0x400cb30	            0x415f	                                 pop r15	      8981	syntax.c	FUNCTION_134
0x400cb32	              0xc3	                                     ret	      8981	syntax.c	FUNCTION_134
0x400cb33	       0xf1f440000	                   nop dword [rax + rax]	      8981	syntax.c	FUNCTION_134
0x400cb38	    0x81f9fffe0000	                         cmp ecx, 0xfeff	      8849	syntax.c	FUNCTION_131	IF_2
0x400cb3e	     0xf8ebb000000	                           jle 0x400cbff	      8849	syntax.c	FUNCTION_131	IF_2
0x400cb44	    0x8b0d00000000	            mov ecx, dword [0x0400cb4a] 	      8856	syntax.c	FUNCTION_131	IF_2	IF_3
0x400cb4a	            0x85c9	                           test ecx, ecx	      8856	syntax.c	FUNCTION_131	IF_2	IF_3
0x400cb4c	     0xf8516010000	                           jne 0x400cc68	      8856	syntax.c	FUNCTION_131	IF_2	IF_3
0x400cb52	      0xbf00000000	                              mov edi, 0	      8994	syntax.c	FUNCTION_135	CALL_1
0x400cb57	    0xc70500000000	               mov dword [0x0400cb61], 1	      8861	syntax.c	FUNCTION_131	IF_2
0x400cb61	          0x4531f6	                          xor r14d, r14d	      8996	syntax.c	FUNCTION_135	FOR_1
0x400cb64	      0xe800000000	                          call 0x400cb69	      8994	syntax.c	FUNCTION_135	CALL_1
0x400cb69	    0x8b1500000000	            mov edx, dword [0x0400cb6f] 	      8996	syntax.c	FUNCTION_135	FOR_1
0x400cb6f	          0x4531ed	                          xor r13d, r13d	      8996	syntax.c	FUNCTION_135	FOR_1
0x400cb72	            0x85d2	                           test edx, edx	      8996	syntax.c	FUNCTION_135	FOR_1
0x400cb74	            0x7e37	                           jle 0x400cbad	      8996	syntax.c	FUNCTION_135	FOR_1
0x400cb76	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      8996	syntax.c	FUNCTION_135	FOR_1
0x400cb80	          0x4d89f7	                            mov r15, r14	      8998	syntax.c	FUNCTION_135	FOR_1
0x400cb83	    0x4c033d000000	             add r15, qword [0x0400cb8a]	      8998	syntax.c	FUNCTION_135	FOR_1
0x400cb8a	        0x4183c501	                             add r13d, 1	      8996	syntax.c	FUNCTION_135	FOR_1
0x400cb8e	        0x4983c628	                           add r14, 0x28	      8996	syntax.c	FUNCTION_135	FOR_1
0x400cb92	        0x498b7f08	                mov rdi, qword [r15 + 8]	      8999	syntax.c	FUNCTION_135	FOR_1	CALL_2
0x400cb96	      0xe800000000	                          call 0x400cb9b	      8999	syntax.c	FUNCTION_135	FOR_1	CALL_2
0x400cb9b	        0x498b7f10	            mov rdi, qword [r15 + 0x10] 	      9000	syntax.c	FUNCTION_135	FOR_1	CALL_3
0x400cb9f	      0xe800000000	                          call 0x400cba4	      9000	syntax.c	FUNCTION_135	FOR_1	CALL_3
0x400cba4	    0x443b2d000000	           cmp r13d, dword [0x0400cbab] 	      8996	syntax.c	FUNCTION_135	FOR_1
0x400cbab	            0x7cd3	                            jl 0x400cb80	      8996	syntax.c	FUNCTION_135	FOR_1
0x400cbad	      0xbf00000000	                              mov edi, 0	      9002	syntax.c	FUNCTION_135	CALL_4
0x400cbb2	          0x4531ed	                          xor r13d, r13d	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x400cbb5	      0xe800000000	                          call 0x400cbba	      9002	syntax.c	FUNCTION_135	CALL_4
0x400cbba	      0xbf00000000	                              mov edi, 0	      9003	syntax.c	FUNCTION_135	CALL_5
0x400cbbf	      0xe800000000	                          call 0x400cbc4	      9003	syntax.c	FUNCTION_135	CALL_5
0x400cbc4	    0x8b0500000000	            mov eax, dword [0x0400cbca] 	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x400cbca	    0xc70500000000	           mov dword [0x0400cbd4], 0x32 	      8865	syntax.c	FUNCTION_131	IF_2
0x400cbd4	            0x85c0	                           test eax, eax	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x400cbd6	            0x7e1d	                           jle 0x400cbf5	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x400cbd8	     0xf1f84000000	                   nop dword [rax + rax]	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x400cbe0	          0x4489ef	                           mov edi, r13d	      8868	syntax.c	FUNCTION_131	IF_2	CALL_6
0x400cbe3	        0x4183c501	                             add r13d, 1	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x400cbe7	      0xe82465ffff	                    call sym.set_hl_attr	      8868	syntax.c	FUNCTION_131	IF_2	CALL_6
0x400cbec	    0x443b2d000000	           cmp r13d, dword [0x0400cbf3] 	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x400cbf3	            0x7ceb	                            jl 0x400cbe0	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x400cbf5	    0xc70500000000	               mov dword [0x0400cbff], 0	      8870	syntax.c	FUNCTION_131	IF_2
0x400cbff	      0xbe01000000	                              mov esi, 1	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x400cc04	      0xbf00000000	                              mov edi, 0	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x400cc09	      0xe800000000	                          call 0x400cc0e	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x400cc0e	            0x85c0	                           test eax, eax	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x400cc10	     0xf84fafeffff	                            je 0x400cb10	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x400cc16	    0x486305000000	         movsxd rax, dword [0x0400cc1d] 	      8879	syntax.c	FUNCTION_131
0x400cc1d	        0x488d1480	                  lea rdx, [rax + rax*4]	      8879	syntax.c	FUNCTION_131
0x400cc21	    0x488b05000000	            mov rax, qword [0x0400cc28] 	      8879	syntax.c	FUNCTION_131
0x400cc28	        0x488d04d0	                  lea rax, [rax + rdx*8]	      8879	syntax.c	FUNCTION_131
0x400cc2c	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400cc33	        0x48895808	                mov qword [rax + 8], rbx	      8885	syntax.c	FUNCTION_131	IF_5
0x400cc37	        0x66448920	                    mov word [rax], r12w	      8881	syntax.c	FUNCTION_131
0x400cc3b	        0x48896810	             mov qword [rax + 0x10], rbp	      8886	syntax.c	FUNCTION_131	IF_5
0x400cc3f	    0x48c740180000	               mov qword [rax + 0x18], 0	      8887	syntax.c	FUNCTION_131	IF_5
0x400cc47	    0x48c740200000	               mov qword [rax + 0x20], 0	      8888	syntax.c	FUNCTION_131	IF_5
0x400cc4f	    0x8b0500000000	            mov eax, dword [0x0400cc55] 	      8914	syntax.c	FUNCTION_131
0x400cc55	          0x8d5001	                      lea edx, [rax + 1]	      8914	syntax.c	FUNCTION_131
0x400cc58	       0x500010000	                          add eax, 0x100	      8915	syntax.c	FUNCTION_131
0x400cc5d	    0x891500000000	            mov dword [0x0400cc63], edx 	      8914	syntax.c	FUNCTION_131
0x400cc63	      0xe9a8feffff	                           jmp 0x400cb10	      8914	syntax.c	FUNCTION_131
0x400cc68	      0xba05000000	                              mov edx, 5	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x400cc6d	      0xbe00000000	                              mov esi, 0	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x400cc72	            0x31ff	                            xor edi, edi	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x400cc74	      0xe800000000	                          call 0x400cc79	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x400cc79	          0x4889c7	                            mov rdi, rax	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x400cc7c	      0xe800000000	                          call 0x400cc81	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x400cc81	            0x31c0	                            xor eax, eax	      8859	syntax.c	FUNCTION_131	IF_2	IF_3
0x400cc83	      0xe988feffff	                           jmp 0x400cb10	      8859	syntax.c	FUNCTION_131	IF_2	IF_3
0x400cc88	      0xe800000000	                          call 0x400cc8d	      8981	syntax.c	FUNCTION_134
syn_combine_list	DO,0:functions,0:IF,15:WHILE,1:CALL,7:ELSE,1:SWITCH,0:FOR,5	249
0x4000c40	          0x488b06	                    mov rax, qword [rsi]	      5423	syntax.c	FUNCTION_83	IF_1
0x4000c43	          0x4885c0	                           test rax, rax	      5423	syntax.c	FUNCTION_83	IF_1
0x4000c46	     0xf8465010000	                            je 0x4000db1	      5423	syntax.c	FUNCTION_83	IF_1
0x4000c4c	            0x4157	                                push r15	      5411	syntax.c	FUNCTION_83
0x4000c4e	            0x4156	                                push r14	      5411	syntax.c	FUNCTION_83
0x4000c50	            0x4155	                                push r13	      5411	syntax.c	FUNCTION_83
0x4000c52	            0x4154	                                push r12	      5411	syntax.c	FUNCTION_83
0x4000c54	          0x4989fd	                            mov r13, rdi	      5411	syntax.c	FUNCTION_83
0x4000c57	              0x55	                                push rbp	      5411	syntax.c	FUNCTION_83
0x4000c58	              0x53	                                push rbx	      5411	syntax.c	FUNCTION_83
0x4000c59	          0x4189d4	                           mov r12d, edx	      5411	syntax.c	FUNCTION_83
0x4000c5c	          0x4889f5	                            mov rbp, rsi	      5411	syntax.c	FUNCTION_83
0x4000c5f	        0x4883ec18	                           sub rsp, 0x18	      5411	syntax.c	FUNCTION_83
0x4000c63	          0x488b3f	                    mov rdi, qword [rdi]	      5425	syntax.c	FUNCTION_83	IF_2
0x4000c66	          0x4885ff	                           test rdi, rdi	      5425	syntax.c	FUNCTION_83	IF_2
0x4000c69	     0xf8431020000	                            je 0x4000ea0	      5425	syntax.c	FUNCTION_83	IF_2
0x4000c6f	          0x83fa01	                              cmp edx, 1	      5425	syntax.c	FUNCTION_83	IF_2
0x4000c72	     0xf8468020000	                            je 0x4000ee0	      5425	syntax.c	FUNCTION_83	IF_2
0x4000c78	            0x31f6	                            xor esi, esi	      5436	syntax.c	FUNCTION_83	FOR_1
0x4000c7a	        0x66833f00	                       cmp word [rdi], 0	      5436	syntax.c	FUNCTION_83	FOR_1
0x4000c7e	          0x4889fa	                            mov rdx, rdi	      5436	syntax.c	FUNCTION_83	FOR_1
0x4000c81	     0xf844a020000	                            je 0x4000ed1	      5436	syntax.c	FUNCTION_83	FOR_1
0x4000c87	    0x660f1f840000	                    nop word [rax + rax]	      5436	syntax.c	FUNCTION_83	FOR_1
0x4000c90	        0x4883c202	                              add rdx, 2	      5436	syntax.c	FUNCTION_83	FOR_1
0x4000c94	          0x83c601	                              add esi, 1	      5437	syntax.c	FUNCTION_83	FOR_1
0x4000c97	        0x66833a00	                       cmp word [rdx], 0	      5436	syntax.c	FUNCTION_83	FOR_1
0x4000c9b	            0x75f3	                           jne 0x4000c90	      5436	syntax.c	FUNCTION_83	FOR_1
0x4000c9d	          0x4863f6	                         movsxd rsi, esi	      5436	syntax.c	FUNCTION_83	FOR_1
0x4000ca0	        0x66833800	                       cmp word [rax], 0	      5438	syntax.c	FUNCTION_83	FOR_2
0x4000ca4	     0xf842e020000	                            je 0x4000ed8	      5438	syntax.c	FUNCTION_83	FOR_2
0x4000caa	            0x31d2	                            xor edx, edx	      5438	syntax.c	FUNCTION_83	FOR_2
0x4000cac	         0xf1f4000	                         nop dword [rax]	      5438	syntax.c	FUNCTION_83	FOR_2
0x4000cb0	        0x4883c002	                              add rax, 2	      5438	syntax.c	FUNCTION_83	FOR_2
0x4000cb4	          0x83c201	                              add edx, 1	      5439	syntax.c	FUNCTION_83	FOR_2
0x4000cb7	        0x66833800	                       cmp word [rax], 0	      5438	syntax.c	FUNCTION_83	FOR_2
0x4000cbb	            0x75f3	                           jne 0x4000cb0	      5438	syntax.c	FUNCTION_83	FOR_2
0x4000cbd	          0x4863da	                         movsxd rbx, edx	      5438	syntax.c	FUNCTION_83	FOR_2
0x4000cc0	      0xb900000000	                              mov ecx, 0	      5444	syntax.c	FUNCTION_83	CALL_3
0x4000cc5	      0xba02000000	                              mov edx, 2	      5444	syntax.c	FUNCTION_83	CALL_3
0x4000cca	    0x41be01000000	                             mov r14d, 1	      5445	syntax.c	FUNCTION_83	CALL_4
0x4000cd0	      0xe800000000	                          call 0x4000cd5	      5444	syntax.c	FUNCTION_83	CALL_3
0x4000cd5	        0x488b7d00	                    mov rdi, qword [rbp]	      5445	syntax.c	FUNCTION_83	CALL_4
0x4000cd9	      0xb900000000	                              mov ecx, 0	      5445	syntax.c	FUNCTION_83	CALL_4
0x4000cde	      0xba02000000	                              mov edx, 2	      5445	syntax.c	FUNCTION_83	CALL_4
0x4000ce3	          0x4889de	                            mov rsi, rbx	      5445	syntax.c	FUNCTION_83	CALL_4
0x4000ce6	    0x41bf02000000	                             mov r15d, 2	      5445	syntax.c	FUNCTION_83	CALL_4
0x4000cec	      0xe800000000	                          call 0x4000cf1	      5445	syntax.c	FUNCTION_83	CALL_4
0x4000cf1	        0x498b7d00	                    mov rdi, qword [r13]	      5445	syntax.c	FUNCTION_83	CALL_4
0x4000cf5	        0x4c8b5d00	                    mov r11, qword [rbp]	      5445	syntax.c	FUNCTION_83	CALL_4
0x4000cf9	            0x31c0	                            xor eax, eax	      5416	syntax.c	FUNCTION_83
0x4000cfb	        0x4183fc02	                             cmp r12d, 2	      5416	syntax.c	FUNCTION_83
0x4000cff	          0x4889f9	                            mov rcx, rdi	      5455	syntax.c	FUNCTION_83	FOR_3
0x4000d02	          0x4d89d8	                             mov r8, r11	      5456	syntax.c	FUNCTION_83	FOR_3
0x4000d05	        0x440fb70f	                   movzx r9d, word [rdi]	      5456	syntax.c	FUNCTION_83	FOR_3
0x4000d09	     0xf840d010000	                            je 0x4000e1c	      5456	syntax.c	FUNCTION_83	FOR_3
0x4000d0f	            0x31db	                            xor ebx, ebx	      5456	syntax.c	FUNCTION_83	FOR_3
0x4000d11	        0x4183fe02	                             cmp r14d, 2	      5456	syntax.c	FUNCTION_83	FOR_3
0x4000d15	     0xf8420020000	                            je 0x4000f3b	      5456	syntax.c	FUNCTION_83	FOR_3
0x4000d1b	       0xf1f440000	                   nop dword [rax + rax]	      5456	syntax.c	FUNCTION_83	FOR_3
0x4000d20	        0x664585c9	                           test r9w, r9w	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x4000d24	            0x7426	                            je 0x4000d4c	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x4000d26	        0x450fb710	                   movzx r10d, word [r8]	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x4000d2a	        0x664585d2	                         test r10w, r10w	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x4000d2e	            0x7430	                            je 0x4000d60	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x4000d30	        0x664539d1	                           cmp r9w, r10w	      5467	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0x4000d34	     0xf8d7e000000	                           jge 0x4000db8	      5467	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0x4000d3a	      0x440fb74902	               movzx r9d, word [rcx + 2]	      5467	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0x4000d3f	          0x83c301	                              add ebx, 1	      5471	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0x4000d42	        0x4883c102	                              add rcx, 2	      5472	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0x4000d46	        0x664585c9	                           test r9w, r9w	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x4000d4a	            0x75da	                           jne 0x4000d26	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x4000d4c	        0x4183fe01	                             cmp r14d, 1	      5503	syntax.c	FUNCTION_83	FOR_3	IF_13
0x4000d50	            0x752b	                           jne 0x4000d7d	      5503	syntax.c	FUNCTION_83	FOR_3	IF_13
0x4000d52	            0x85db	                           test ebx, ebx	      5509	syntax.c	FUNCTION_83	FOR_3	IF_13	IF_14
0x4000d54	            0x757d	                           jne 0x4000dd3	      5509	syntax.c	FUNCTION_83	FOR_3	IF_13	IF_14
0x4000d56	            0x31c0	                            xor eax, eax	      5511	syntax.c	FUNCTION_83	FOR_3	IF_13	IF_14
0x4000d58	            0xeb29	                           jmp 0x4000d83	      5511	syntax.c	FUNCTION_83	FOR_3	IF_13	IF_14
0x4000d5a	    0x660f1f440000	                    nop word [rax + rax]	      5511	syntax.c	FUNCTION_83	FOR_3	IF_13	IF_14
0x4000d60	        0x4883c102	                              add rcx, 2	      5495	syntax.c	FUNCTION_83	FOR_3	FOR_4
0x4000d64	          0x83c301	                              add ebx, 1	      5495	syntax.c	FUNCTION_83	FOR_3	FOR_4
0x4000d67	        0x66833900	                       cmp word [rcx], 0	      5495	syntax.c	FUNCTION_83	FOR_3	FOR_4
0x4000d6b	            0x75f3	                           jne 0x4000d60	      5495	syntax.c	FUNCTION_83	FOR_3	FOR_4
0x4000d6d	        0x4183fc02	                             cmp r12d, 2	      5498	syntax.c	FUNCTION_83	FOR_3	IF_11
0x4000d71	     0xf84f9000000	                            je 0x4000e70	      5498	syntax.c	FUNCTION_83	FOR_3	IF_11
0x4000d77	        0x4183fe01	                             cmp r14d, 1	      5503	syntax.c	FUNCTION_83	FOR_3	IF_13
0x4000d7b	            0x7456	                            je 0x4000dd3	      5503	syntax.c	FUNCTION_83	FOR_3	IF_13
0x4000d7d	        0x4183ff03	                             cmp r15d, 3	      5453	syntax.c	FUNCTION_83	FOR_3
0x4000d81	            0x757d	                           jne 0x4000e00	      5453	syntax.c	FUNCTION_83	FOR_3
0x4000d83	        0x498b7d00	                    mov rdi, qword [r13]	      5524	syntax.c	FUNCTION_83	CALL_6
0x4000d87	      0x4889442408	                mov qword [rsp + 8], rax	      5524	syntax.c	FUNCTION_83	CALL_6
0x4000d8c	      0xe800000000	                          call 0x4000d91	      5524	syntax.c	FUNCTION_83	CALL_6
0x4000d91	        0x488b7d00	                    mov rdi, qword [rbp]	      5525	syntax.c	FUNCTION_83	CALL_7
0x4000d95	      0xe800000000	                          call 0x4000d9a	      5525	syntax.c	FUNCTION_83	CALL_7
0x4000d9a	      0x488b442408	                mov rax, qword [rsp + 8]	      5526	syntax.c	FUNCTION_83
0x4000d9f	        0x49894500	                    mov qword [r13], rax	      5526	syntax.c	FUNCTION_83
0x4000da3	        0x4883c418	                           add rsp, 0x18	      5527	syntax.c	FUNCTION_83
0x4000da7	              0x5b	                                 pop rbx	      5527	syntax.c	FUNCTION_83
0x4000da8	              0x5d	                                 pop rbp	      5527	syntax.c	FUNCTION_83
0x4000da9	            0x415c	                                 pop r12	      5527	syntax.c	FUNCTION_83
0x4000dab	            0x415d	                                 pop r13	      5527	syntax.c	FUNCTION_83
0x4000dad	            0x415e	                                 pop r14	      5527	syntax.c	FUNCTION_83
0x4000daf	            0x415f	                                 pop r15	      5527	syntax.c	FUNCTION_83
0x4000db1	            0xf3c3	                                     ret	      5527	syntax.c	FUNCTION_83
0x4000db3	       0xf1f440000	                   nop dword [rax + rax]	      5527	syntax.c	FUNCTION_83
0x4000db8	            0x740e	                            je 0x4000dc8	      5485	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_9
0x4000dba	        0x4983c002	                               add r8, 2	      5487	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x4000dbe	      0xe95dffffff	                           jmp 0x4000d20	      5487	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x4000dc3	       0xf1f440000	                   nop dword [rax + rax]	      5487	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x4000dc8	      0x440fb74902	               movzx r9d, word [rcx + 2]	      5487	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x4000dcd	        0x4883c102	                              add rcx, 2	      5486	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_9
0x4000dd1	            0xebe7	                           jmp 0x4000dba	      5486	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_9
0x4000dd3	        0x8d7c1b02	                lea edi, [rbx + rbx + 2]	      5514	syntax.c	FUNCTION_83	FOR_3	IF_13	CALL_5
0x4000dd7	      0xe800000000	                          call 0x4000ddc	      5514	syntax.c	FUNCTION_83	FOR_3	IF_13	CALL_5
0x4000ddc	          0x4885c0	                           test rax, rax	      5515	syntax.c	FUNCTION_83	FOR_3	IF_13	IF_15
0x4000ddf	     0xf8471ffffff	                            je 0x4000d56	      5515	syntax.c	FUNCTION_83	FOR_3	IF_13	IF_15
0x4000de5	        0x4c8b5d00	                    mov r11, qword [rbp]	      5515	syntax.c	FUNCTION_83	FOR_3	IF_13	IF_15
0x4000de9	        0x498b7d00	                    mov rdi, qword [r13]	      5515	syntax.c	FUNCTION_83	FOR_3	IF_13	IF_15
0x4000ded	          0x4863db	                         movsxd rbx, ebx	      5517	syntax.c	FUNCTION_83	FOR_3	IF_13
0x4000df0	            0x31d2	                            xor edx, edx	      5517	syntax.c	FUNCTION_83	FOR_3	IF_13
0x4000df2	        0x66891458	              mov word [rax + rbx*2], dx	      5517	syntax.c	FUNCTION_83	FOR_3	IF_13
0x4000df6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5517	syntax.c	FUNCTION_83	FOR_3	IF_13
0x4000e00	        0x4183c701	                             add r15d, 1	      5517	syntax.c	FUNCTION_83	FOR_3	IF_13
0x4000e04	        0x4183c601	                             add r14d, 1	      5517	syntax.c	FUNCTION_83	FOR_3	IF_13
0x4000e08	        0x4183fc02	                             cmp r12d, 2	      5517	syntax.c	FUNCTION_83	FOR_3	IF_13
0x4000e0c	          0x4889f9	                            mov rcx, rdi	      5455	syntax.c	FUNCTION_83	FOR_3
0x4000e0f	          0x4d89d8	                             mov r8, r11	      5456	syntax.c	FUNCTION_83	FOR_3
0x4000e12	        0x440fb70f	                   movzx r9d, word [rdi]	      5456	syntax.c	FUNCTION_83	FOR_3
0x4000e16	     0xf85f3feffff	                           jne 0x4000d0f	      5456	syntax.c	FUNCTION_83	FOR_3
0x4000e1c	        0x4183fe02	                             cmp r14d, 2	      5456	syntax.c	FUNCTION_83	FOR_3
0x4000e20	     0xf84e5000000	                            je 0x4000f0b	      5456	syntax.c	FUNCTION_83	FOR_3
0x4000e26	      0xba01000000	                              mov edx, 1	      5456	syntax.c	FUNCTION_83	FOR_3
0x4000e2b	            0xeb0f	                           jmp 0x4000e3c	      5456	syntax.c	FUNCTION_83	FOR_3
0x4000e2d	           0xf1f00	                         nop dword [rax]	      5456	syntax.c	FUNCTION_83	FOR_3
0x4000e30	      0x440fb74902	               movzx r9d, word [rcx + 2]	      5456	syntax.c	FUNCTION_83	FOR_3
0x4000e35	        0x4883c102	                              add rcx, 2	      5472	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0x4000e39	          0x83c201	                              add edx, 1	      5472	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0x4000e3c	        0x664585c9	                           test r9w, r9w	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x4000e40	          0x8d5aff	                      lea ebx, [rdx - 1]	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x4000e43	            0x742b	                            je 0x4000e70	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x4000e45	        0x410fb730	                    movzx esi, word [r8]	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x4000e49	          0x6685f6	                             test si, si	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x4000e4c	     0xf840effffff	                            je 0x4000d60	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x4000e52	        0x664139f1	                             cmp r9w, si	      5467	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0x4000e56	            0x7cd8	                            jl 0x4000e30	      5467	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0x4000e58	            0x7406	                            je 0x4000e60	      5485	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_9
0x4000e5a	        0x4983c002	                               add r8, 2	      5487	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x4000e5e	            0xebd9	                           jmp 0x4000e39	      5487	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x4000e60	      0x440fb74902	               movzx r9d, word [rcx + 2]	      5487	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x4000e65	        0x4883c102	                              add rcx, 2	      5486	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_9
0x4000e69	            0xebef	                           jmp 0x4000e5a	      5486	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_9
0x4000e6b	       0xf1f440000	                   nop dword [rax + rax]	      5486	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_9
0x4000e70	        0x410fb710	                    movzx edx, word [r8]	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0x4000e74	          0x6685d2	                             test dx, dx	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0x4000e77	     0xf84cffeffff	                            je 0x4000d4c	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0x4000e7d	        0x4183fe02	                             cmp r14d, 2	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0x4000e81	            0x7468	                            je 0x4000eeb	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0x4000e83	       0xf1f440000	                   nop dword [rax + rax]	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0x4000e88	        0x4983c002	                               add r8, 2	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0x4000e8c	          0x83c301	                              add ebx, 1	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0x4000e8f	      0x6641833800	                        cmp word [r8], 0	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0x4000e94	            0x75f2	                           jne 0x4000e88	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0x4000e96	      0xe9dcfeffff	                           jmp 0x4000d77	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0x4000e9b	       0xf1f440000	                   nop dword [rax + rax]	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0x4000ea0	          0x83fa01	                              cmp edx, 1	      5427	syntax.c	FUNCTION_83	IF_2	IF_3
0x4000ea3	            0x743b	                            je 0x4000ee0	      5427	syntax.c	FUNCTION_83	IF_2	IF_3
0x4000ea5	          0x4889c7	                            mov rdi, rax	      5427	syntax.c	FUNCTION_83	IF_2	IF_3
0x4000ea8	        0x4183ec01	                             sub r12d, 1	      5429	syntax.c	FUNCTION_83	IF_2	IF_4
0x4000eac	        0x4183fc01	                             cmp r12d, 1	      5429	syntax.c	FUNCTION_83	IF_2	IF_4
0x4000eb0	            0x7616	                           jbe 0x4000ec8	      5429	syntax.c	FUNCTION_83	IF_2	IF_4
0x4000eb2	        0x4883c418	                           add rsp, 0x18	      5527	syntax.c	FUNCTION_83
0x4000eb6	              0x5b	                                 pop rbx	      5527	syntax.c	FUNCTION_83
0x4000eb7	              0x5d	                                 pop rbp	      5527	syntax.c	FUNCTION_83
0x4000eb8	            0x415c	                                 pop r12	      5527	syntax.c	FUNCTION_83
0x4000eba	            0x415d	                                 pop r13	      5527	syntax.c	FUNCTION_83
0x4000ebc	            0x415e	                                 pop r14	      5527	syntax.c	FUNCTION_83
0x4000ebe	            0x415f	                                 pop r15	      5527	syntax.c	FUNCTION_83
0x4000ec0	      0xe900000000	                           jmp 0x4000ec5	      5432	syntax.c	FUNCTION_83	IF_2	CALL_2
0x4000ec5	           0xf1f00	                         nop dword [rax]	      5432	syntax.c	FUNCTION_83	IF_2	CALL_2
0x4000ec8	        0x49897d00	                    mov qword [r13], rdi	      5430	syntax.c	FUNCTION_83	IF_2	IF_4
0x4000ecc	      0xe9d2feffff	                           jmp 0x4000da3	      5430	syntax.c	FUNCTION_83	IF_2	IF_4
0x4000ed1	            0x31f6	                            xor esi, esi	      5436	syntax.c	FUNCTION_83	FOR_1
0x4000ed3	      0xe9c8fdffff	                           jmp 0x4000ca0	      5436	syntax.c	FUNCTION_83	FOR_1
0x4000ed8	            0x31db	                            xor ebx, ebx	      5438	syntax.c	FUNCTION_83	FOR_2
0x4000eda	      0xe9e1fdffff	                           jmp 0x4000cc0	      5438	syntax.c	FUNCTION_83	FOR_2
0x4000edf	              0x90	                                     nop	      5438	syntax.c	FUNCTION_83	FOR_2
0x4000ee0	      0xe800000000	                          call 0x4000ee5	      5428	syntax.c	FUNCTION_83	IF_2	CALL_1
0x4000ee5	        0x488b7d00	                    mov rdi, qword [rbp]	      5428	syntax.c	FUNCTION_83	IF_2	CALL_1
0x4000ee9	            0xebbd	                           jmp 0x4000ea8	      5428	syntax.c	FUNCTION_83	IF_2	CALL_1
0x4000eeb	          0x4863db	                         movsxd rbx, ebx	      5428	syntax.c	FUNCTION_83	IF_2	CALL_1
0x4000eee	            0x31c9	                            xor ecx, ecx	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0x4000ef0	        0x488d3458	                  lea rsi, [rax + rbx*2]	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0x4000ef4	        0x6689140e	                mov word [rsi + rcx], dx	      5501	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5	IF_12
0x4000ef8	        0x4883c102	                              add rcx, 2	      5501	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5	IF_12
0x4000efc	      0x410fb71408	              movzx edx, word [r8 + rcx]	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0x4000f01	          0x6685d2	                             test dx, dx	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0x4000f04	            0x75ee	                           jne 0x4000ef4	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0x4000f06	      0xe972feffff	                           jmp 0x4000d7d	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0x4000f0b	            0x31d2	                            xor edx, edx	      5456	syntax.c	FUNCTION_83	FOR_3
0x4000f0d	        0x664585c9	                           test r9w, r9w	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x4000f11	            0x89d3	                            mov ebx, edx	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x4000f13	     0xf8457ffffff	                            je 0x4000e70	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x4000f19	        0x410fb730	                    movzx esi, word [r8]	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x4000f1d	          0x6685f6	                             test si, si	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x4000f20	            0x747c	                            je 0x4000f9e	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x4000f22	        0x664439ce	                             cmp si, r9w	      5467	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0x4000f26	            0x7e59	                           jle 0x4000f81	      5467	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0x4000f28	      0x6644890c50	             mov word [rax + rdx*2], r9w	      5470	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5	IF_6
0x4000f2d	        0x4883c102	                              add rcx, 2	      5472	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0x4000f31	        0x440fb709	                   movzx r9d, word [rcx]	      5472	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0x4000f35	        0x4883c201	                              add rdx, 1	      5472	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0x4000f39	            0xebd2	                           jmp 0x4000f0d	      5472	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0x4000f3b	        0x664585c9	                           test r9w, r9w	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x4000f3f	     0xf8438feffff	                            je 0x4000d7d	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x4000f45	        0x410fb710	                    movzx edx, word [r8]	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x4000f49	          0x6685d2	                             test dx, dx	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x4000f4c	            0x7450	                            je 0x4000f9e	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x4000f4e	        0x664439ca	                             cmp dx, r9w	      5467	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0x4000f52	            0x7f17	                            jg 0x4000f6b	      5467	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0x4000f54	            0x7509	                           jne 0x4000f5f	      5485	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_9
0x4000f56	      0x440fb74902	               movzx r9d, word [rcx + 2]	      5485	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_9
0x4000f5b	        0x4883c102	                              add rcx, 2	      5486	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_9
0x4000f5f	        0x4983c002	                               add r8, 2	      5487	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x4000f63	          0x4889ca	                            mov rdx, rcx	      5487	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x4000f66	          0x4889d1	                            mov rcx, rdx	      5472	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0x4000f69	            0xebd0	                           jmp 0x4000f3b	      5472	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0x4000f6b	          0x4863d3	                         movsxd rdx, ebx	      5470	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5	IF_6
0x4000f6e	          0x83c301	                              add ebx, 1	      5471	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0x4000f71	      0x6644890c50	             mov word [rax + rdx*2], r9w	      5470	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5	IF_6
0x4000f76	        0x488d5102	                      lea rdx, [rcx + 2]	      5472	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0x4000f7a	      0x440fb74902	               movzx r9d, word [rcx + 2]	      5472	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0x4000f7f	            0xebe5	                           jmp 0x4000f66	      5472	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0x4000f81	        0x66893450	              mov word [rax + rdx*2], si	      5482	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_7	IF_8
0x4000f85	        0x440fb709	                   movzx r9d, word [rcx]	      5482	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_7	IF_8
0x4000f89	        0x66453b08	                      cmp r9w, word [r8]	      5485	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_9
0x4000f8d	            0x7509	                           jne 0x4000f98	      5485	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_9
0x4000f8f	      0x440fb74902	               movzx r9d, word [rcx + 2]	      5485	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_9
0x4000f94	        0x4883c102	                              add rcx, 2	      5486	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_9
0x4000f98	        0x4983c002	                               add r8, 2	      5487	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x4000f9c	            0xeb97	                           jmp 0x4000f35	      5487	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x4000f9e	          0x4863d3	                         movsxd rdx, ebx	      5487	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x4000fa1	        0x488d3450	                  lea rsi, [rax + rdx*2]	      5487	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0x4000fa5	            0x31d2	                            xor edx, edx	      5472	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0x4000fa7	      0x6644890c16	               mov word [rsi + rdx], r9w	      5497	syntax.c	FUNCTION_83	FOR_3	FOR_4	IF_10
0x4000fac	        0x4883c202	                              add rdx, 2	      5497	syntax.c	FUNCTION_83	FOR_3	FOR_4	IF_10
0x4000fb0	          0x83c301	                              add ebx, 1	      5495	syntax.c	FUNCTION_83	FOR_3	FOR_4
0x4000fb3	      0x440fb70c11	             movzx r9d, word [rcx + rdx]	      5495	syntax.c	FUNCTION_83	FOR_3	FOR_4
0x4000fb8	        0x664585c9	                           test r9w, r9w	      5495	syntax.c	FUNCTION_83	FOR_3	FOR_4
0x4000fbc	            0x75e9	                           jne 0x4000fa7	      5495	syntax.c	FUNCTION_83	FOR_3	FOR_4
0x4000fbe	      0xe9aafdffff	                           jmp 0x4000d6d	      5495	syntax.c	FUNCTION_83	FOR_3	FOR_4
syn_cmd_iskeyword	DO,0:functions,0:IF,4:WHILE,0:CALL,16:ELSE,3:SWITCH,0:FOR,0	113
0x40013f0	            0x4154	                                push r12	      3560	syntax.c	FUNCTION_48
0x40013f2	              0x55	                                push rbp	      3560	syntax.c	FUNCTION_48
0x40013f3	              0x53	                                push rbx	      3560	syntax.c	FUNCTION_48
0x40013f4	        0x4883ec30	                           sub rsp, 0x30	      3560	syntax.c	FUNCTION_48
0x40013f8	    0x64488b042528	                mov rax, qword fs:[0x28]	      3560	syntax.c	FUNCTION_48
0x4001401	      0x4889442428	             mov qword [rsp + 0x28], rax	      3560	syntax.c	FUNCTION_48
0x4001406	            0x31c0	                            xor eax, eax	      3560	syntax.c	FUNCTION_48
0x4001408	          0x8b4730	            mov eax, dword [rdi + 0x30] 	      3565	syntax.c	FUNCTION_48	IF_1
0x400140b	            0x85c0	                           test eax, eax	      3565	syntax.c	FUNCTION_48	IF_1
0x400140d	            0x7421	                            je 0x4001430	      3565	syntax.c	FUNCTION_48	IF_1
0x400140f	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      3602	syntax.c	FUNCTION_48
0x4001414	    0x644833042528	                xor rax, qword fs:[0x28]	      3602	syntax.c	FUNCTION_48
0x400141d	     0xf85f4010000	                           jne 0x4001617	      3602	syntax.c	FUNCTION_48
0x4001423	        0x4883c430	                           add rsp, 0x30	      3602	syntax.c	FUNCTION_48
0x4001427	              0x5b	                                 pop rbx	      3602	syntax.c	FUNCTION_48
0x4001428	              0x5d	                                 pop rbp	      3602	syntax.c	FUNCTION_48
0x4001429	            0x415c	                                 pop r12	      3602	syntax.c	FUNCTION_48
0x400142b	              0xc3	                                     ret	      3602	syntax.c	FUNCTION_48
0x400142c	         0xf1f4000	                         nop dword [rax]	      3602	syntax.c	FUNCTION_48
0x4001430	          0x488b3f	                    mov rdi, qword [rdi]	      3561	syntax.c	FUNCTION_48
0x4001433	      0xe800000000	                          call 0x4001438	      3568	syntax.c	FUNCTION_48	CALL_1
0x4001438	          0x803800	                       cmp byte [rax], 0	      3569	syntax.c	FUNCTION_48	IF_2
0x400143b	          0x4889c3	                            mov rbx, rax	      3568	syntax.c	FUNCTION_48	CALL_1
0x400143e	     0xf8474010000	                            je 0x40015b8	      3569	syntax.c	FUNCTION_48	IF_2
0x4001444	      0xba05000000	                              mov edx, 5	      3580	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_7
0x4001449	      0xbe00000000	                              mov esi, 0	      3580	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_7
0x400144e	          0x4889c7	                            mov rdi, rax	      3580	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_7
0x4001451	      0xe800000000	                          call 0x4001456	      3580	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_7
0x4001456	            0x85c0	                           test eax, eax	      3580	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_7
0x4001458	     0xf8412010000	                            je 0x4001570	      3580	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_7
0x400145e	    0x488b2d000000	            mov rbp, qword [0x04001465] 	      3588	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_10
0x4001465	          0x4889df	                            mov rdi, rbx	      3590	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_11
0x4001468	    0x488b85a00900	           mov rax, qword [rbp + 0x9a0] 	      3590	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_11
0x400146f	    0x4c8ba5b81400	          mov r12, qword [rbp + 0x14b8] 	      3589	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x4001476	        0x48890424	                    mov qword [rsp], rax	      3589	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x400147a	    0x488b85a80900	           mov rax, qword [rbp + 0x9a8] 	      3589	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x4001481	      0x4889442408	                mov qword [rsp + 8], rax	      3589	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x4001486	    0x488b85b00900	           mov rax, qword [rbp + 0x9b0] 	      3589	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x400148d	      0x4889442410	             mov qword [rsp + 0x10], rax	      3589	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x4001492	    0x488b85b80900	           mov rax, qword [rbp + 0x9b8] 	      3589	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x4001499	      0x4889442418	             mov qword [rsp + 0x18], rax	      3589	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x400149e	      0xe800000000	                          call 0x40014a3	      3590	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_11
0x40014a3	    0x488b3d000000	            mov rdi, qword [0x040014aa] 	      3592	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_12
0x40014aa	    0x488985b81400	          mov qword [rbp + 0x14b8], rax 	      3590	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_11
0x40014b1	            0x31f6	                            xor esi, esi	      3592	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_12
0x40014b3	      0xe800000000	                          call 0x40014b8	      3592	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_12
0x40014b8	    0x488b2d000000	            mov rbp, qword [0x040014bf] 	      3593	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_13
0x40014bf	    0x488b1d000000	            mov rbx, qword [0x040014c6] 	      3593	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_13
0x40014c6	      0xba20000000	                           mov edx, 0x20	        59	string3.h	FUNCTION_171	CALL_3
0x40014cb	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        59	string3.h	FUNCTION_171	CALL_3
0x40014cf	    0x488db3a00900	                  lea rsi, [rbx + 0x9a0]	        59	string3.h	FUNCTION_171	CALL_3
0x40014d6	    0x488db88c0400	                  lea rdi, [rax + 0x48c]	        59	string3.h	FUNCTION_171	CALL_3
0x40014dd	      0xe800000000	                          call 0x40014e2	        59	string3.h	FUNCTION_171	CALL_3
0x40014e2	        0x488b0424	                    mov rax, qword [rsp]	        59	string3.h	FUNCTION_171	CALL_3
0x40014e6	    0x488983a00900	            mov qword [rbx + 0x9a0], rax	        59	string3.h	FUNCTION_171	CALL_3
0x40014ed	      0x488b442408	                mov rax, qword [rsp + 8]	        59	string3.h	FUNCTION_171	CALL_3
0x40014f2	    0x488983a80900	            mov qword [rbx + 0x9a8], rax	        59	string3.h	FUNCTION_171	CALL_3
0x40014f9	      0x488b442410	            mov rax, qword [rsp + 0x10] 	        59	string3.h	FUNCTION_171	CALL_3
0x40014fe	    0x488983b00900	            mov qword [rbx + 0x9b0], rax	        59	string3.h	FUNCTION_171	CALL_3
0x4001505	      0x488b442418	            mov rax, qword [rsp + 0x18] 	        59	string3.h	FUNCTION_171	CALL_3
0x400150a	    0x488983b80900	            mov qword [rbx + 0x9b8], rax	        59	string3.h	FUNCTION_171	CALL_3
0x4001511	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	      3596	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_15
0x4001515	    0x4881c7b00400	                          add rdi, 0x4b0	      3596	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_15
0x400151c	      0xe800000000	                          call 0x4001521	      3596	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_15
0x4001521	    0x488b05000000	            mov rax, qword [0x04001528] 	      3597	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x4001528	    0x488b3d000000	            mov rdi, qword [0x0400152f] 	      3597	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x400152f	    0x488b88b81400	          mov rcx, qword [rax + 0x14b8] 	      3597	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x4001536	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	      3597	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x400153a	    0x48898ab00400	            mov qword [rdx + 0x4b0], rcx	      3597	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x4001541	    0x4c89a0b81400	          mov qword [rax + 0x14b8], r12 	      3598	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x4001548	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      3601	syntax.c	FUNCTION_48	CALL_16
0x400154d	    0x644833042528	                xor rax, qword fs:[0x28]	      3601	syntax.c	FUNCTION_48	CALL_16
0x4001556	     0xf85bb000000	                           jne 0x4001617	      3601	syntax.c	FUNCTION_48	CALL_16
0x400155c	        0x4883c430	                           add rsp, 0x30	      3602	syntax.c	FUNCTION_48
0x4001560	      0xbe28000000	                           mov esi, 0x28	      3601	syntax.c	FUNCTION_48	CALL_16
0x4001565	              0x5b	                                 pop rbx	      3602	syntax.c	FUNCTION_48
0x4001566	              0x5d	                                 pop rbp	      3602	syntax.c	FUNCTION_48
0x4001567	            0x415c	                                 pop r12	      3602	syntax.c	FUNCTION_48
0x4001569	      0xe900000000	                           jmp 0x400156e	      3601	syntax.c	FUNCTION_48	CALL_16
0x400156e	            0x6690	                                     nop	      3601	syntax.c	FUNCTION_48	CALL_16
0x4001570	    0x488b1d000000	            mov rbx, qword [0x04001577] 	      3582	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_8
0x4001577	    0x488b05000000	            mov rax, qword [0x0400157e] 	        59	string3.h	FUNCTION_171	CALL_3
0x400157e	      0xba20000000	                           mov edx, 0x20	        59	string3.h	FUNCTION_171	CALL_3
0x4001583	    0x488db0a00900	                  lea rsi, [rax + 0x9a0]	        59	string3.h	FUNCTION_171	CALL_3
0x400158a	        0x488b4310	            mov rax, qword [rbx + 0x10] 	        59	string3.h	FUNCTION_171	CALL_3
0x400158e	    0x488db88c0400	                  lea rdi, [rax + 0x48c]	        59	string3.h	FUNCTION_171	CALL_3
0x4001595	      0xe800000000	                          call 0x400159a	        59	string3.h	FUNCTION_171	CALL_3
0x400159a	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3584	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_9
0x400159e	    0x4881c7b00400	                          add rdi, 0x4b0	      3584	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_9
0x40015a5	      0xe800000000	                          call 0x40015aa	      3584	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_9
0x40015aa	    0x488b3d000000	            mov rdi, qword [0x040015b1] 	      3584	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_9
0x40015b1	            0xeb95	                           jmp 0x4001548	      3584	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_9
0x40015b3	       0xf1f440000	                   nop dword [rax + rax]	      3584	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_9
0x40015b8	      0xbf00000000	                              mov edi, 0	      3571	syntax.c	FUNCTION_48	IF_2	CALL_2
0x40015bd	      0xe800000000	                          call 0x40015c2	      3571	syntax.c	FUNCTION_48	IF_2	CALL_2
0x40015c2	            0x31ff	                            xor edi, edi	      3572	syntax.c	FUNCTION_48	IF_2	CALL_4
0x40015c4	      0xba05000000	                              mov edx, 5	      3572	syntax.c	FUNCTION_48	IF_2	CALL_4
0x40015c9	      0xbe00000000	                              mov esi, 0	      3572	syntax.c	FUNCTION_48	IF_2	CALL_4
0x40015ce	      0xe800000000	                          call 0x40015d3	      3572	syntax.c	FUNCTION_48	IF_2	CALL_4
0x40015d3	          0x4889c7	                            mov rdi, rax	      3572	syntax.c	FUNCTION_48	IF_2	CALL_4
0x40015d6	      0xe800000000	                          call 0x40015db	      3572	syntax.c	FUNCTION_48	IF_2	CALL_4
0x40015db	    0x488b05000000	            mov rax, qword [0x040015e2] 	      3573	syntax.c	FUNCTION_48	IF_2	IF_3
0x40015e2	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3573	syntax.c	FUNCTION_48	IF_2	IF_3
0x40015e6	    0x488bb8b00400	           mov rdi, qword [rax + 0x4b0] 	      3573	syntax.c	FUNCTION_48	IF_2	IF_3
0x40015ed	    0x483b3d000000	            cmp rdi, qword [0x040015f4] 	      3573	syntax.c	FUNCTION_48	IF_2	IF_3
0x40015f4	            0x741a	                            je 0x4001610	      3573	syntax.c	FUNCTION_48	IF_2	IF_3
0x40015f6	      0xe800000000	                          call 0x40015fb	      3576	syntax.c	FUNCTION_48	IF_2	CALL_6
0x40015fb	    0x488b3d000000	            mov rdi, qword [0x04001602] 	      3576	syntax.c	FUNCTION_48	IF_2	CALL_6
0x4001602	      0xe941ffffff	                           jmp 0x4001548	      3576	syntax.c	FUNCTION_48	IF_2	CALL_6
0x4001607	    0x660f1f840000	                    nop word [rax + rax]	      3576	syntax.c	FUNCTION_48	IF_2	CALL_6
0x4001610	      0xbf00000000	                              mov edi, 0	      3576	syntax.c	FUNCTION_48	IF_2	CALL_6
0x4001615	            0xebdf	                           jmp 0x40015f6	      3576	syntax.c	FUNCTION_48	IF_2	CALL_6
0x4001617	      0xe800000000	                          call 0x400161c	      3602	syntax.c	FUNCTION_48
get_tgc_attr_idx	DO,0:functions,0:IF,1:WHILE,0:CALL,2:ELSE,1:SWITCH,0:FOR,0	132
0x400c800	            0x4157	                                push r15	      8945	syntax.c	FUNCTION_133
0x400c802	            0x4156	                                push r14	      8945	syntax.c	FUNCTION_133
0x400c804	            0x4155	                                push r13	      8945	syntax.c	FUNCTION_133
0x400c806	            0x4154	                                push r12	      8945	syntax.c	FUNCTION_133
0x400c808	          0x4189fc	                           mov r12d, edi	      8945	syntax.c	FUNCTION_133
0x400c80b	              0x55	                                push rbp	      8945	syntax.c	FUNCTION_133
0x400c80c	              0x53	                                push rbx	      8945	syntax.c	FUNCTION_133
0x400c80d	        0x4883ec38	                           sub rsp, 0x38	      8945	syntax.c	FUNCTION_133
0x400c811	    0x64488b042528	                mov rax, qword fs:[0x28]	      8945	syntax.c	FUNCTION_133
0x400c81a	      0x4889442428	             mov qword [rsp + 0x28], rax	      8945	syntax.c	FUNCTION_133
0x400c81f	            0x31c0	                            xor eax, eax	      8945	syntax.c	FUNCTION_133
0x400c821	    0x4881fe99d4ff	             cmp rsi, 0xffffffffffffd499	      8950	syntax.c	FUNCTION_133	IF_1
0x400c828	    0x48c704240000	                      mov qword [rsp], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400c830	    0x48c744240800	                  mov qword [rsp + 8], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400c839	    0x48c744242000	               mov qword [rsp + 0x20], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400c842	        0x66893c24	                      mov word [rsp], di	      8949	syntax.c	FUNCTION_133
0x400c846	     0xf85ac000000	                           jne 0x400c8f8	      8950	syntax.c	FUNCTION_133	IF_1
0x400c84c	    0x48c7c59ad4ff	             mov rbp, 0xffffffffffffd49a	      8955	syntax.c	FUNCTION_133	IF_1
0x400c853	    0x4881fa99d4ff	             cmp rdx, 0xffffffffffffd499	      8950	syntax.c	FUNCTION_133	IF_1
0x400c85a	          0x4889eb	                            mov rbx, rbp	      8954	syntax.c	FUNCTION_133	IF_1
0x400c85d	     0xf8595000000	                           jne 0x400c8f8	      8950	syntax.c	FUNCTION_133	IF_1
0x400c863	    0x8b0d00000000	            mov ecx, dword [0x0400c869] 	      8803	syntax.c	FUNCTION_131	FOR_1
0x400c869	      0x48896c2418	             mov qword [rsp + 0x18], rbp	      8803	syntax.c	FUNCTION_131	FOR_1
0x400c86e	      0x48895c2410	             mov qword [rsp + 0x10], rbx	      8803	syntax.c	FUNCTION_131	FOR_1
0x400c873	    0xc70500000000	           mov dword [0x0400c87d], 0x28 	      8797	syntax.c	FUNCTION_131
0x400c87d	    0xc70500000000	               mov dword [0x0400c887], 7	      8798	syntax.c	FUNCTION_131
0x400c887	            0x85c9	                           test ecx, ecx	      8803	syntax.c	FUNCTION_131	FOR_1
0x400c889	     0xf8e40010000	                           jle 0x400c9cf	      8803	syntax.c	FUNCTION_131	FOR_1
0x400c88f	    0x488b05000000	            mov rax, qword [0x0400c896] 	      8803	syntax.c	FUNCTION_131	FOR_1
0x400c896	            0x31d2	                            xor edx, edx	      8803	syntax.c	FUNCTION_131	FOR_1
0x400c898	            0xeb11	                           jmp 0x400c8ab	      8803	syntax.c	FUNCTION_131	FOR_1
0x400c89a	    0x660f1f440000	                    nop word [rax + rax]	      8803	syntax.c	FUNCTION_131	FOR_1
0x400c8a0	          0x83c201	                              add edx, 1	      8803	syntax.c	FUNCTION_131	FOR_1
0x400c8a3	        0x4883c028	                           add rax, 0x28	      8803	syntax.c	FUNCTION_131	FOR_1
0x400c8a7	            0x39ca	                            cmp edx, ecx	      8803	syntax.c	FUNCTION_131	FOR_1
0x400c8a9	            0x745d	                            je 0x400c908	      8803	syntax.c	FUNCTION_131	FOR_1
0x400c8ab	          0x663b38	                      cmp di, word [rax]	      8806	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400c8ae	            0x75f0	                           jne 0x400c8a0	      8806	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400c8b0	          0x8b7008	                mov esi, dword [rax + 8]	      8836	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400c8b3	            0x85f6	                           test esi, esi	      8836	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400c8b5	            0x75e9	                           jne 0x400c8a0	      8836	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400c8b7	        0x483b5810	            cmp rbx, qword [rax + 0x10] 	      8839	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400c8bb	            0x75e3	                           jne 0x400c8a0	      8839	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400c8bd	        0x483b6818	            cmp rbp, qword [rax + 0x18] 	      8841	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400c8c1	            0x75dd	                           jne 0x400c8a0	      8841	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400c8c3	    0x8d8200010000	                  lea eax, [rdx + 0x100]	      8846	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400c8c9	     0xf1f80000000	                         nop dword [rax]	      8846	syntax.c	FUNCTION_131	FOR_1	IF_1
0x400c8d0	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      8963	syntax.c	FUNCTION_133
0x400c8d5	    0x644833342528	                xor rsi, qword fs:[0x28]	      8963	syntax.c	FUNCTION_133
0x400c8de	     0xf8574010000	                           jne 0x400ca58	      8963	syntax.c	FUNCTION_133
0x400c8e4	        0x4883c438	                           add rsp, 0x38	      8963	syntax.c	FUNCTION_133
0x400c8e8	              0x5b	                                 pop rbx	      8963	syntax.c	FUNCTION_133
0x400c8e9	              0x5d	                                 pop rbp	      8963	syntax.c	FUNCTION_133
0x400c8ea	            0x415c	                                 pop r12	      8963	syntax.c	FUNCTION_133
0x400c8ec	            0x415d	                                 pop r13	      8963	syntax.c	FUNCTION_133
0x400c8ee	            0x415e	                                 pop r14	      8963	syntax.c	FUNCTION_133
0x400c8f0	            0x415f	                                 pop r15	      8963	syntax.c	FUNCTION_133
0x400c8f2	              0xc3	                                     ret	      8963	syntax.c	FUNCTION_133
0x400c8f3	       0xf1f440000	                   nop dword [rax + rax]	      8963	syntax.c	FUNCTION_133
0x400c8f8	          0x4889d5	                            mov rbp, rdx	      8950	syntax.c	FUNCTION_133	IF_1
0x400c8fb	          0x4889f3	                            mov rbx, rsi	      8950	syntax.c	FUNCTION_133	IF_1
0x400c8fe	      0xe960ffffff	                           jmp 0x400c863	      8950	syntax.c	FUNCTION_133	IF_1
0x400c903	       0xf1f440000	                   nop dword [rax + rax]	      8950	syntax.c	FUNCTION_133	IF_1
0x400c908	    0x81fafffe0000	                         cmp edx, 0xfeff	      8849	syntax.c	FUNCTION_131	IF_2
0x400c90e	     0xf8ebb000000	                           jle 0x400c9cf	      8849	syntax.c	FUNCTION_131	IF_2
0x400c914	    0x8b0d00000000	            mov ecx, dword [0x0400c91a] 	      8856	syntax.c	FUNCTION_131	IF_2	IF_3
0x400c91a	            0x85c9	                           test ecx, ecx	      8856	syntax.c	FUNCTION_131	IF_2	IF_3
0x400c91c	     0xf8516010000	                           jne 0x400ca38	      8856	syntax.c	FUNCTION_131	IF_2	IF_3
0x400c922	      0xbf00000000	                              mov edi, 0	      8994	syntax.c	FUNCTION_135	CALL_1
0x400c927	    0xc70500000000	               mov dword [0x0400c931], 1	      8861	syntax.c	FUNCTION_131	IF_2
0x400c931	          0x4531f6	                          xor r14d, r14d	      8996	syntax.c	FUNCTION_135	FOR_1
0x400c934	      0xe800000000	                          call 0x400c939	      8994	syntax.c	FUNCTION_135	CALL_1
0x400c939	    0x8b1500000000	            mov edx, dword [0x0400c93f] 	      8996	syntax.c	FUNCTION_135	FOR_1
0x400c93f	          0x4531ed	                          xor r13d, r13d	      8996	syntax.c	FUNCTION_135	FOR_1
0x400c942	            0x85d2	                           test edx, edx	      8996	syntax.c	FUNCTION_135	FOR_1
0x400c944	            0x7e37	                           jle 0x400c97d	      8996	syntax.c	FUNCTION_135	FOR_1
0x400c946	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      8996	syntax.c	FUNCTION_135	FOR_1
0x400c950	          0x4d89f7	                            mov r15, r14	      8998	syntax.c	FUNCTION_135	FOR_1
0x400c953	    0x4c033d000000	             add r15, qword [0x0400c95a]	      8998	syntax.c	FUNCTION_135	FOR_1
0x400c95a	        0x4183c501	                             add r13d, 1	      8996	syntax.c	FUNCTION_135	FOR_1
0x400c95e	        0x4983c628	                           add r14, 0x28	      8996	syntax.c	FUNCTION_135	FOR_1
0x400c962	        0x498b7f08	                mov rdi, qword [r15 + 8]	      8999	syntax.c	FUNCTION_135	FOR_1	CALL_2
0x400c966	      0xe800000000	                          call 0x400c96b	      8999	syntax.c	FUNCTION_135	FOR_1	CALL_2
0x400c96b	        0x498b7f10	            mov rdi, qword [r15 + 0x10] 	      9000	syntax.c	FUNCTION_135	FOR_1	CALL_3
0x400c96f	      0xe800000000	                          call 0x400c974	      9000	syntax.c	FUNCTION_135	FOR_1	CALL_3
0x400c974	    0x443b2d000000	           cmp r13d, dword [0x0400c97b] 	      8996	syntax.c	FUNCTION_135	FOR_1
0x400c97b	            0x7cd3	                            jl 0x400c950	      8996	syntax.c	FUNCTION_135	FOR_1
0x400c97d	      0xbf00000000	                              mov edi, 0	      9002	syntax.c	FUNCTION_135	CALL_4
0x400c982	          0x4531ed	                          xor r13d, r13d	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x400c985	      0xe800000000	                          call 0x400c98a	      9002	syntax.c	FUNCTION_135	CALL_4
0x400c98a	      0xbf00000000	                              mov edi, 0	      9003	syntax.c	FUNCTION_135	CALL_5
0x400c98f	      0xe800000000	                          call 0x400c994	      9003	syntax.c	FUNCTION_135	CALL_5
0x400c994	    0x8b0500000000	            mov eax, dword [0x0400c99a] 	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x400c99a	    0xc70500000000	           mov dword [0x0400c9a4], 0x32 	      8865	syntax.c	FUNCTION_131	IF_2
0x400c9a4	            0x85c0	                           test eax, eax	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x400c9a6	            0x7e1d	                           jle 0x400c9c5	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x400c9a8	     0xf1f84000000	                   nop dword [rax + rax]	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x400c9b0	          0x4489ef	                           mov edi, r13d	      8868	syntax.c	FUNCTION_131	IF_2	CALL_6
0x400c9b3	        0x4183c501	                             add r13d, 1	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x400c9b7	      0xe85467ffff	                    call sym.set_hl_attr	      8868	syntax.c	FUNCTION_131	IF_2	CALL_6
0x400c9bc	    0x443b2d000000	           cmp r13d, dword [0x0400c9c3] 	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x400c9c3	            0x7ceb	                            jl 0x400c9b0	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x400c9c5	    0xc70500000000	               mov dword [0x0400c9cf], 0	      8870	syntax.c	FUNCTION_131	IF_2
0x400c9cf	      0xbe01000000	                              mov esi, 1	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x400c9d4	      0xbf00000000	                              mov edi, 0	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x400c9d9	      0xe800000000	                          call 0x400c9de	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x400c9de	            0x85c0	                           test eax, eax	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x400c9e0	     0xf84eafeffff	                            je 0x400c8d0	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x400c9e6	    0x486305000000	         movsxd rax, dword [0x0400c9ed] 	      8879	syntax.c	FUNCTION_131
0x400c9ed	        0x488d1480	                  lea rdx, [rax + rax*4]	      8879	syntax.c	FUNCTION_131
0x400c9f1	    0x488b05000000	            mov rax, qword [0x0400c9f8] 	      8879	syntax.c	FUNCTION_131
0x400c9f8	        0x488d04d0	                  lea rax, [rax + rdx*8]	      8879	syntax.c	FUNCTION_131
0x400c9fc	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400ca03	    0x48c740080000	                  mov qword [rax + 8], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400ca0b	        0x66448920	                    mov word [rax], r12w	      8881	syntax.c	FUNCTION_131
0x400ca0f	    0x48c740200000	               mov qword [rax + 0x20], 0	        90	string3.h	FUNCTION_173	CALL_6
0x400ca17	        0x48895810	             mov qword [rax + 0x10], rbx	      8910	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x400ca1b	        0x48896818	             mov qword [rax + 0x18], rbp	      8911	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x400ca1f	    0x8b0500000000	            mov eax, dword [0x0400ca25] 	      8914	syntax.c	FUNCTION_131
0x400ca25	          0x8d5001	                      lea edx, [rax + 1]	      8914	syntax.c	FUNCTION_131
0x400ca28	       0x500010000	                          add eax, 0x100	      8915	syntax.c	FUNCTION_131
0x400ca2d	    0x891500000000	            mov dword [0x0400ca33], edx 	      8914	syntax.c	FUNCTION_131
0x400ca33	      0xe998feffff	                           jmp 0x400c8d0	      8914	syntax.c	FUNCTION_131
0x400ca38	      0xba05000000	                              mov edx, 5	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x400ca3d	      0xbe00000000	                              mov esi, 0	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x400ca42	            0x31ff	                            xor edi, edi	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x400ca44	      0xe800000000	                          call 0x400ca49	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x400ca49	          0x4889c7	                            mov rdi, rax	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x400ca4c	      0xe800000000	                          call 0x400ca51	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x400ca51	            0x31c0	                            xor eax, eax	      8859	syntax.c	FUNCTION_131	IF_2	IF_3
0x400ca53	      0xe978feffff	                           jmp 0x400c8d0	      8859	syntax.c	FUNCTION_131	IF_2	IF_3
0x400ca58	      0xe800000000	                          call 0x400ca5d	      8963	syntax.c	FUNCTION_133
get_highlight_name	DO,0:functions,0:IF,0:WHILE,0:CALL,1:ELSE,0:SWITCH,0:FOR,0	63
0x4013210	            0x85f6	                           test esi, esi	     10316	syntax.c	FUNCTION_168	IF_1
0x4013212	     0xf88d0000000	                            js 0x40132e8	     10316	syntax.c	FUNCTION_168	IF_1
0x4013218	    0x8b1500000000	            mov edx, dword [0x0401321e] 	     10321	syntax.c	FUNCTION_168	IF_2
0x401321e	            0x39d6	                            cmp esi, edx	     10321	syntax.c	FUNCTION_168	IF_2
0x4013220	            0x7d66	                           jge 0x4013288	     10321	syntax.c	FUNCTION_168	IF_2
0x4013222	          0x4863c6	                         movsxd rax, esi	     10321	syntax.c	FUNCTION_168	IF_2
0x4013225	    0x4c8b15000000	            mov r10, qword [0x0401322c] 	     10321	syntax.c	FUNCTION_168	IF_2
0x401322c	        0x488d0cc0	                  lea rcx, [rax + rax*8]	     10321	syntax.c	FUNCTION_168	IF_2
0x4013230	        0x488d0c48	                  lea rcx, [rax + rcx*2]	     10321	syntax.c	FUNCTION_168	IF_2
0x4013234	      0xb800000000	                              mov eax, 0	     10322	syntax.c	FUNCTION_168	IF_2
0x4013239	        0x498d0cca	                  lea rcx, [r10 + rcx*8]	     10321	syntax.c	FUNCTION_168	IF_2
0x401323d	        0x448b5910	           mov r11d, dword [rcx + 0x10] 	     10321	syntax.c	FUNCTION_168	IF_2
0x4013241	          0x4585db	                         test r11d, r11d	     10321	syntax.c	FUNCTION_168	IF_2
0x4013244	     0xf857e000000	                           jne 0x40132c8	     10321	syntax.c	FUNCTION_168	IF_2
0x401324a	    0x8b0500000000	            mov eax, dword [0x04013250] 	     10327	syntax.c	FUNCTION_168	IF_4
0x4013250	             0x1d0	                            add eax, edx	     10327	syntax.c	FUNCTION_168	IF_4
0x4013252	            0x39c6	                            cmp esi, eax	     10327	syntax.c	FUNCTION_168	IF_4
0x4013254	            0x7445	                            je 0x401329b	     10327	syntax.c	FUNCTION_168	IF_4
0x4013256	     0x30500000000	             add eax, dword [0x0401325c]	     10329	syntax.c	FUNCTION_168	IF_5
0x401325c	            0x39c6	                            cmp esi, eax	     10329	syntax.c	FUNCTION_168	IF_5
0x401325e	            0x744c	                            je 0x40132ac	     10329	syntax.c	FUNCTION_168	IF_5
0x4013260	          0x83c001	                              add eax, 1	     10332	syntax.c	FUNCTION_168	IF_6
0x4013263	            0x39c6	                            cmp esi, eax	     10332	syntax.c	FUNCTION_168	IF_6
0x4013265	            0x7469	                            je 0x40132d0	     10332	syntax.c	FUNCTION_168	IF_6
0x4013267	            0x39d6	                            cmp esi, edx	     10336	syntax.c	FUNCTION_168	IF_7
0x4013269	            0x7d7d	                           jge 0x40132e8	     10336	syntax.c	FUNCTION_168	IF_7
0x401326b	          0x4863f6	                         movsxd rsi, esi	     10338	syntax.c	FUNCTION_168
0x401326e	    0x488b15000000	            mov rdx, qword [0x04013275] 	     10338	syntax.c	FUNCTION_168
0x4013275	        0x488d04f6	                  lea rax, [rsi + rsi*8]	     10338	syntax.c	FUNCTION_168
0x4013279	        0x488d0446	                  lea rax, [rsi + rax*2]	     10338	syntax.c	FUNCTION_168
0x401327d	        0x488d04c2	                  lea rax, [rdx + rax*8]	     10338	syntax.c	FUNCTION_168
0x4013281	          0x488b00	                    mov rax, qword [rax]	     10338	syntax.c	FUNCTION_168
0x4013284	              0xc3	                                     ret	     10338	syntax.c	FUNCTION_168
0x4013285	           0xf1f00	                         nop dword [rax]	     10338	syntax.c	FUNCTION_168
0x4013288	            0x75c0	                           jne 0x401324a	     10325	syntax.c	FUNCTION_168	IF_3
0x401328a	    0x448b0d000000	            mov r9d, dword [0x04013291] 	     10325	syntax.c	FUNCTION_168	IF_3
0x4013291	      0xb800000000	                              mov eax, 0	     10326	syntax.c	FUNCTION_168	IF_3
0x4013296	          0x4585c9	                           test r9d, r9d	     10325	syntax.c	FUNCTION_168	IF_3
0x4013299	            0x7525	                           jne 0x40132c0	     10325	syntax.c	FUNCTION_168	IF_3
0x401329b	    0x448b05000000	            mov r8d, dword [0x040132a2] 	     10327	syntax.c	FUNCTION_168	IF_4
0x40132a2	      0xb800000000	                              mov eax, 0	     10328	syntax.c	FUNCTION_168	IF_4
0x40132a7	          0x4585c0	                           test r8d, r8d	     10327	syntax.c	FUNCTION_168	IF_4
0x40132aa	            0x7544	                           jne 0x40132f0	     10327	syntax.c	FUNCTION_168	IF_4
0x40132ac	    0x8b3d00000000	            mov edi, dword [0x040132b2] 	     10330	syntax.c	FUNCTION_168	IF_5
0x40132b2	      0xb800000000	                              mov eax, 0	     10331	syntax.c	FUNCTION_168	IF_5
0x40132b7	            0x85ff	                           test edi, edi	     10330	syntax.c	FUNCTION_168	IF_5
0x40132b9	            0x74ac	                            je 0x4013267	     10330	syntax.c	FUNCTION_168	IF_5
0x40132bb	            0xf3c3	                                     ret	     10330	syntax.c	FUNCTION_168	IF_5
0x40132bd	           0xf1f00	                         nop dword [rax]	     10330	syntax.c	FUNCTION_168	IF_5
0x40132c0	            0xf3c3	                                     ret	     10330	syntax.c	FUNCTION_168	IF_5
0x40132c2	    0x660f1f440000	                    nop word [rax + rax]	     10330	syntax.c	FUNCTION_168	IF_5
0x40132c8	            0xf3c3	                                     ret	     10330	syntax.c	FUNCTION_168	IF_5
0x40132ca	    0x660f1f440000	                    nop word [rax + rax]	     10330	syntax.c	FUNCTION_168	IF_5
0x40132d0	    0x8b0d00000000	            mov ecx, dword [0x040132d6] 	     10333	syntax.c	FUNCTION_168	IF_6
0x40132d6	      0xb800000000	                              mov eax, 0	     10334	syntax.c	FUNCTION_168	IF_6
0x40132db	            0x85c9	                           test ecx, ecx	     10333	syntax.c	FUNCTION_168	IF_6
0x40132dd	            0x7488	                            je 0x4013267	     10333	syntax.c	FUNCTION_168	IF_6
0x40132df	            0xf3c3	                                     ret	     10307	syntax.c	FUNCTION_167
0x40132e1	     0xf1f80000000	                         nop dword [rax]	     10307	syntax.c	FUNCTION_167
0x40132e8	            0x31c0	                            xor eax, eax	     10317	syntax.c	FUNCTION_168	IF_1
0x40132ea	              0xc3	                                     ret	     10307	syntax.c	FUNCTION_167
0x40132eb	       0xf1f440000	                   nop dword [rax + rax]	     10307	syntax.c	FUNCTION_167
0x40132f0	            0xf3c3	                                     ret	     10307	syntax.c	FUNCTION_167
color_name2handle	DO,0:functions,0:IF,7:WHILE,0:CALL,8:ELSE,0:SWITCH,0:FOR,0	72
0x400c160	          0x4889f8	                            mov rax, rdi	      8723	syntax.c	FUNCTION_130
0x400c163	      0xb905000000	                              mov ecx, 5	      8724	syntax.c	FUNCTION_130	IF_1	CALL_1
0x400c168	      0xbf00000000	                              mov edi, 0	      8724	syntax.c	FUNCTION_130	IF_1	CALL_1
0x400c16d	          0x4889c6	                            mov rsi, rax	      8724	syntax.c	FUNCTION_130	IF_1	CALL_1
0x400c170	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      8724	syntax.c	FUNCTION_130	IF_1	CALL_1
0x400c172	     0xf8408010000	                            je 0x400c280	      8724	syntax.c	FUNCTION_130	IF_1	CALL_1
0x400c178	              0x53	                                push rbx	      8723	syntax.c	FUNCTION_130
0x400c179	      0xbe00000000	                              mov esi, 0	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x400c17e	          0x4889c7	                            mov rdi, rax	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x400c181	          0x4889c3	                            mov rbx, rax	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x400c184	      0xe800000000	                          call 0x400c189	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x400c189	            0x85c0	                           test eax, eax	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x400c18b	            0x744b	                            je 0x400c1d8	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x400c18d	      0xbe00000000	                              mov esi, 0	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x400c192	          0x4889df	                            mov rdi, rbx	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x400c195	      0xe800000000	                          call 0x400c19a	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x400c19a	            0x85c0	                           test eax, eax	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x400c19c	            0x743a	                            je 0x400c1d8	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x400c19e	      0xbe00000000	                              mov esi, 0	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x400c1a3	          0x4889df	                            mov rdi, rbx	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x400c1a6	      0xe800000000	                          call 0x400c1ab	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x400c1ab	            0x85c0	                           test eax, eax	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x400c1ad	            0x7571	                           jne 0x400c220	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x400c1af	    0x8b1500000000	            mov edx, dword [0x0400c1b5] 	      8745	syntax.c	FUNCTION_130	IF_5	IF_6
0x400c1b5	    0x488b05000000	            mov rax, qword [0x0400c1bc] 	      8748	syntax.c	FUNCTION_130	IF_5	IF_6
0x400c1bc	            0x85d2	                           test edx, edx	      8745	syntax.c	FUNCTION_130	IF_5	IF_6
0x400c1be	            0x7513	                           jne 0x400c1d3	      8745	syntax.c	FUNCTION_130	IF_5	IF_6
0x400c1c0	    0x488b05000000	            mov rax, qword [0x0400c1c7] 	      8751	syntax.c	FUNCTION_130	IF_5	IF_7
0x400c1c7	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      8751	syntax.c	FUNCTION_130	IF_5	IF_7
0x400c1cd	     0xf8485000000	                            je 0x400c258	      8751	syntax.c	FUNCTION_130	IF_5	IF_7
0x400c1d3	              0x5b	                                 pop rbx	      8759	syntax.c	FUNCTION_130
0x400c1d4	              0xc3	                                     ret	      8759	syntax.c	FUNCTION_130
0x400c1d5	           0xf1f00	                         nop dword [rax]	      8759	syntax.c	FUNCTION_130
0x400c1d8	    0x8b0d00000000	            mov ecx, dword [0x0400c1de] 	      8730	syntax.c	FUNCTION_130	IF_2	IF_3
0x400c1de	    0x488b05000000	            mov rax, qword [0x0400c1e5] 	      8733	syntax.c	FUNCTION_130	IF_2	IF_3
0x400c1e5	            0x85c9	                           test ecx, ecx	      8730	syntax.c	FUNCTION_130	IF_2	IF_3
0x400c1e7	            0x75ea	                           jne 0x400c1d3	      8730	syntax.c	FUNCTION_130	IF_2	IF_3
0x400c1e9	    0x488b05000000	            mov rax, qword [0x0400c1f0] 	      8736	syntax.c	FUNCTION_130	IF_2	IF_4
0x400c1f0	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      8736	syntax.c	FUNCTION_130	IF_2	IF_4
0x400c1f6	            0x75db	                           jne 0x400c1d3	      8736	syntax.c	FUNCTION_130	IF_2	IF_4
0x400c1f8	    0x488b05000000	            mov rax, qword [0x0400c1ff] 	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x400c1ff	      0xbf00000000	                              mov edi, 0	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x400c204	              0x5b	                                 pop rbx	      8759	syntax.c	FUNCTION_130
0x400c205	          0x80386c	                    cmp byte [rax], 0x6c	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x400c208	      0xb800000000	                              mov eax, 0	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x400c20d	        0x480f44f8	                          cmove rdi, rax	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x400c211	      0xe900000000	                           jmp 0x400c216	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x400c216	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x400c220	      0xbe00000000	                              mov esi, 0	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x400c225	          0x4889df	                            mov rdi, rbx	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x400c228	      0xe800000000	                          call 0x400c22d	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x400c22d	            0x85c0	                           test eax, eax	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x400c22f	     0xf847affffff	                            je 0x400c1af	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x400c235	    0x8b0500000000	            mov eax, dword [0x0400c23b] 	      8758	syntax.c	FUNCTION_130	CALL_8
0x400c23b	      0xba00000000	                              mov edx, 0	      8758	syntax.c	FUNCTION_130	CALL_8
0x400c240	          0x4889df	                            mov rdi, rbx	      8758	syntax.c	FUNCTION_130	CALL_8
0x400c243	              0x5b	                                 pop rbx	      8759	syntax.c	FUNCTION_130
0x400c244	            0x85c0	                           test eax, eax	      8758	syntax.c	FUNCTION_130	CALL_8
0x400c246	      0xb800000000	                              mov eax, 0	      8758	syntax.c	FUNCTION_130	CALL_8
0x400c24b	        0x480f44c2	                          cmove rax, rdx	      8758	syntax.c	FUNCTION_130	CALL_8
0x400c24f	            0xffe0	                                 jmp rax	      8758	syntax.c	FUNCTION_130	CALL_8
0x400c251	     0xf1f80000000	                         nop dword [rax]	      8758	syntax.c	FUNCTION_130	CALL_8
0x400c258	    0x488b05000000	            mov rax, qword [0x0400c25f] 	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x400c25f	      0xbf00000000	                              mov edi, 0	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x400c264	              0x5b	                                 pop rbx	      8759	syntax.c	FUNCTION_130
0x400c265	          0x80386c	                    cmp byte [rax], 0x6c	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x400c268	      0xb800000000	                              mov eax, 0	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x400c26d	        0x480f44f8	                          cmove rdi, rax	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x400c271	      0xe900000000	                           jmp 0x400c276	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x400c276	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x400c280	    0x48c7c099d4ff	             mov rax, 0xffffffffffffd499	      8725	syntax.c	FUNCTION_130	IF_1
0x400c287	              0xc3	                                     ret	      8725	syntax.c	FUNCTION_130	IF_1
highlight_color	DO,0:functions,0:IF,17:WHILE,0:CALL,11:ELSE,6:SWITCH,0:FOR,0	220
0x400d8d0	        0x4883ec08	                              sub rsp, 8	      9362	syntax.c	FUNCTION_144
0x400d8d4	            0x85ff	                           test edi, edi	      9369	syntax.c	FUNCTION_144	IF_1
0x400d8d6	     0xf8e0a010000	                           jle 0x400d9e6	      9369	syntax.c	FUNCTION_144	IF_1
0x400d8dc	    0x3b3d00000000	            cmp edi, dword [0x0400d8e2] 	      9369	syntax.c	FUNCTION_144	IF_1
0x400d8e2	     0xf8ffe000000	                            jg 0x400d9e6	      9369	syntax.c	FUNCTION_144	IF_1
0x400d8e8	           0xfb60e	                   movzx ecx, byte [rsi]	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x400d8eb	          0x8d41bf	                   lea eax, [rcx - 0x41]	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x400d8ee	            0x3c19	                            cmp al, 0x19	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x400d8f0	     0xf879a000000	                            ja 0x400d990	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x400d8f6	          0x80f946	                            cmp cl, 0x46	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x400d8f9	     0xf84f1000000	                            je 0x400d9f0	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x400d8ff	          0x80f953	                            cmp cl, 0x53	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x400d902	     0xf84b8000000	                            je 0x400d9c0	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x400d908	            0x31c0	                            xor eax, eax	      9370	syntax.c	FUNCTION_144	IF_1
0x400d90a	          0x80f942	                            cmp cl, 0x42	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x400d90d	            0x757a	                           jne 0x400d989	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x400d90f	         0xfb64e01	               movzx ecx, byte [rsi + 1]	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x400d913	          0x8d41bf	                   lea eax, [rcx - 0x41]	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x400d916	            0x3c19	                            cmp al, 0x19	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x400d918	      0xb800000000	                              mov eax, 0	      9370	syntax.c	FUNCTION_144	IF_1
0x400d91d	     0xf8692000000	                           jbe 0x400d9b5	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x400d923	          0x80f967	                            cmp cl, 0x67	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x400d926	            0x7561	                           jne 0x400d989	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x400d928	          0x83fa67	                           cmp edx, 0x67	      9381	syntax.c	FUNCTION_144	IF_6
0x400d92b	     0xf84bf010000	                            je 0x400daf0	      9381	syntax.c	FUNCTION_144	IF_6
0x400d931	          0x83fa63	                           cmp edx, 0x63	      9425	syntax.c	FUNCTION_144	IF_15
0x400d934	     0xf85ac000000	                           jne 0x400d9e6	      9425	syntax.c	FUNCTION_144	IF_15
0x400d93a	          0x4863ff	                         movsxd rdi, edi	      9428	syntax.c	FUNCTION_144	IF_15	IF_16
0x400d93d	            0x85c0	                           test eax, eax	      9427	syntax.c	FUNCTION_144	IF_15	IF_16
0x400d93f	        0x488d04ff	                  lea rax, [rdi + rdi*8]	      9428	syntax.c	FUNCTION_144	IF_15	IF_16
0x400d943	        0x488d0447	                  lea rax, [rdi + rax*2]	      9428	syntax.c	FUNCTION_144	IF_15	IF_16
0x400d947	     0xf85e3000000	                           jne 0x400da30	      9427	syntax.c	FUNCTION_144	IF_15	IF_16
0x400d94d	    0x488b15000000	            mov rdx, qword [0x0400d954] 	      9430	syntax.c	FUNCTION_144	IF_15	ELSE_6
0x400d954	        0x488d04c2	                  lea rax, [rdx + rax*8]	      9430	syntax.c	FUNCTION_144	IF_15	ELSE_6
0x400d958	        0x448b40a0	             mov r8d, dword [rax - 0x60]	      9430	syntax.c	FUNCTION_144	IF_15	ELSE_6
0x400d95c	        0x4183e801	                              sub r8d, 1	      9430	syntax.c	FUNCTION_144	IF_15	ELSE_6
0x400d960	          0x4585c0	                           test r8d, r8d	      9431	syntax.c	FUNCTION_144	IF_15	IF_17
0x400d963	     0xf887d000000	                            js 0x400d9e6	      9431	syntax.c	FUNCTION_144	IF_15	IF_17
0x400d969	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_182	CALL_1
0x400d96e	      0xba14000000	                           mov edx, 0x14	        33	stdio2.h	FUNCTION_182	CALL_1
0x400d973	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_182	CALL_1
0x400d978	      0xbf00000000	                              mov edi, 0	        33	stdio2.h	FUNCTION_182	CALL_1
0x400d97d	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_182	CALL_1
0x400d97f	      0xe800000000	                          call 0x400d984	        33	stdio2.h	FUNCTION_182	CALL_1
0x400d984	      0xb800000000	                              mov eax, 0	      9434	syntax.c	FUNCTION_144	IF_15
0x400d989	        0x4883c408	                              add rsp, 8	      9438	syntax.c	FUNCTION_144
0x400d98d	              0xc3	                                     ret	      9438	syntax.c	FUNCTION_144
0x400d98e	            0x6690	                                     nop	      9438	syntax.c	FUNCTION_144
0x400d990	          0x80f966	                            cmp cl, 0x66	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x400d993	            0x745b	                            je 0x400d9f0	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x400d995	          0x80f973	                            cmp cl, 0x73	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x400d998	            0x7426	                            je 0x400d9c0	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x400d99a	            0x31c0	                            xor eax, eax	      9370	syntax.c	FUNCTION_144	IF_1
0x400d99c	          0x80f962	                            cmp cl, 0x62	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x400d99f	            0x75e8	                           jne 0x400d989	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x400d9a1	         0xfb64e01	               movzx ecx, byte [rsi + 1]	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x400d9a5	          0x8d41bf	                   lea eax, [rcx - 0x41]	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x400d9a8	            0x3c19	                            cmp al, 0x19	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x400d9aa	      0xb800000000	                              mov eax, 0	      9370	syntax.c	FUNCTION_144	IF_1
0x400d9af	     0xf876effffff	                            ja 0x400d923	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x400d9b5	          0x80f947	                            cmp cl, 0x47	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x400d9b8	     0xf846affffff	                            je 0x400d928	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x400d9be	            0xebc9	                           jmp 0x400d989	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x400d9c0	      0x440fb64601	               movzx r8d, byte [rsi + 1]	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x400d9c5	        0x458d48bf	                    lea r9d, [r8 - 0x41]	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x400d9c9	        0x4180f919	                           cmp r9b, 0x19	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x400d9cd	     0xf868d000000	                           jbe 0x400da60	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x400d9d3	        0x4180f870	                           cmp r8b, 0x70	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x400d9d7	     0xf858d000000	                           jne 0x400da6a	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x400d9dd	          0x83fa67	                           cmp edx, 0x67	      9381	syntax.c	FUNCTION_144	IF_6
0x400d9e0	     0xf8492010000	                            je 0x400db78	      9381	syntax.c	FUNCTION_144	IF_6
0x400d9e6	            0x31c0	                            xor eax, eax	      9370	syntax.c	FUNCTION_144	IF_1
0x400d9e8	        0x4883c408	                              add rsp, 8	      9438	syntax.c	FUNCTION_144
0x400d9ec	              0xc3	                                     ret	      9438	syntax.c	FUNCTION_144
0x400d9ed	           0xf1f00	                         nop dword [rax]	      9438	syntax.c	FUNCTION_144
0x400d9f0	      0x440fb64601	               movzx r8d, byte [rsi + 1]	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x400d9f5	        0x458d48bf	                    lea r9d, [r8 - 0x41]	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x400d9f9	        0x4180f919	                           cmp r9b, 0x19	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x400d9fd	            0x7751	                            ja 0x400da50	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x400d9ff	        0x4180f847	                           cmp r8b, 0x47	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x400da03	            0x7451	                            je 0x400da56	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x400da05	            0x3c19	                            cmp al, 0x19	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x400da07	     0xf8623010000	                           jbe 0x400db30	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x400da0d	          0x80f966	                            cmp cl, 0x66	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x400da10	            0x7583	                           jne 0x400d995	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x400da12	        0x4180f919	                           cmp r9b, 0x19	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x400da16	            0x7668	                           jbe 0x400da80	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x400da18	        0x4180f86f	                           cmp r8b, 0x6f	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x400da1c	            0x7468	                            je 0x400da86	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x400da1e	            0x3c19	                            cmp al, 0x19	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x400da20	     0xf876fffffff	                            ja 0x400d995	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x400da26	      0xe9d4feffff	                           jmp 0x400d8ff	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x400da2b	       0xf1f440000	                   nop dword [rax + rax]	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x400da30	    0x488b0d000000	            mov rcx, qword [0x0400da37] 	      9428	syntax.c	FUNCTION_144	IF_15	IF_16
0x400da37	        0x488d04c1	                  lea rax, [rcx + rax*8]	      9428	syntax.c	FUNCTION_144	IF_15	IF_16
0x400da3b	        0x448b409c	             mov r8d, dword [rax - 0x64]	      9428	syntax.c	FUNCTION_144	IF_15	IF_16
0x400da3f	        0x4183e801	                              sub r8d, 1	      9428	syntax.c	FUNCTION_144	IF_15	IF_16
0x400da43	      0xe918ffffff	                           jmp 0x400d960	      9428	syntax.c	FUNCTION_144	IF_15	IF_16
0x400da48	     0xf1f84000000	                   nop dword [rax + rax]	      9428	syntax.c	FUNCTION_144	IF_15	IF_16
0x400da50	        0x4180f867	                           cmp r8b, 0x67	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x400da54	            0x75af	                           jne 0x400da05	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x400da56	      0xb801000000	                              mov eax, 1	      9373	syntax.c	FUNCTION_144	IF_2
0x400da5b	      0xe9c8feffff	                           jmp 0x400d928	      9373	syntax.c	FUNCTION_144	IF_2
0x400da60	        0x4180f850	                           cmp r8b, 0x50	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x400da64	     0xf8473ffffff	                            je 0x400d9dd	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x400da6a	            0x3c19	                            cmp al, 0x19	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x400da6c	     0xf8696feffff	                           jbe 0x400d908	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x400da72	      0xe923ffffff	                           jmp 0x400d99a	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x400da77	    0x660f1f840000	                    nop word [rax + rax]	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x400da80	        0x4180f84f	                           cmp r8b, 0x4f	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x400da84	            0x7598	                           jne 0x400da1e	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x400da86	      0x440fb64602	               movzx r8d, byte [rsi + 2]	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x400da8b	        0x458d48bf	                    lea r9d, [r8 - 0x41]	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x400da8f	        0x4180f919	                           cmp r9b, 0x19	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x400da93	     0xf87b7000000	                            ja 0x400db50	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x400da99	        0x4180f84e	                           cmp r8b, 0x4e	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x400da9d	     0xf857bffffff	                           jne 0x400da1e	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x400daa3	      0x440fb64603	               movzx r8d, byte [rsi + 3]	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x400daa8	        0x458d48bf	                    lea r9d, [r8 - 0x41]	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x400daac	        0x4180f919	                           cmp r9b, 0x19	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x400dab0	     0xf8677010000	                           jbe 0x400dc2d	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x400dab6	        0x4180f874	                           cmp r8b, 0x74	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x400daba	     0xf855effffff	                           jne 0x400da1e	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x400dac0	          0x83fa67	                           cmp edx, 0x67	      9381	syntax.c	FUNCTION_144	IF_6
0x400dac3	     0xf851dffffff	                           jne 0x400d9e6	      9381	syntax.c	FUNCTION_144	IF_6
0x400dac9	          0x4863ff	                         movsxd rdi, edi	      9387	syntax.c	FUNCTION_144	IF_6	IF_7
0x400dacc	    0x4c8b0d000000	              mov r9, qword [0x0400dad3]	      9387	syntax.c	FUNCTION_144	IF_6	IF_7
0x400dad3	        0x488d04ff	                  lea rax, [rdi + rdi*8]	      9387	syntax.c	FUNCTION_144	IF_6	IF_7
0x400dad7	        0x488d0447	                  lea rax, [rdi + rax*2]	      9387	syntax.c	FUNCTION_144	IF_6	IF_7
0x400dadb	        0x498d04c1	                   lea rax, [r9 + rax*8]	      9387	syntax.c	FUNCTION_144	IF_6	IF_7
0x400dadf	        0x488b40c8	             mov rax, qword [rax - 0x38]	      9387	syntax.c	FUNCTION_144	IF_6	IF_7
0x400dae3	      0xe9a1feffff	                           jmp 0x400d989	      9387	syntax.c	FUNCTION_144	IF_6	IF_7
0x400dae8	     0xf1f84000000	                   nop dword [rax + rax]	      9387	syntax.c	FUNCTION_144	IF_6	IF_7
0x400daf0	            0x31c9	                            xor ecx, ecx	      9381	syntax.c	FUNCTION_144	IF_6
0x400daf2	    0x8b1500000000	            mov edx, dword [0x0400daf8] 	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x400daf8	            0x85d2	                           test edx, edx	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x400dafa	            0x7444	                            je 0x400db40	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x400dafc	        0x807e0223	                cmp byte [rsi + 2], 0x23	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x400db00	     0xf8492000000	                            je 0x400db98	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x400db06	          0x4863ff	                         movsxd rdi, edi	      9418	syntax.c	FUNCTION_144	IF_6	IF_12
0x400db09	            0x85c0	                           test eax, eax	      9417	syntax.c	FUNCTION_144	IF_6	IF_12
0x400db0b	        0x488d04ff	                  lea rax, [rdi + rdi*8]	      9418	syntax.c	FUNCTION_144	IF_6	IF_12
0x400db0f	        0x488d0447	                  lea rax, [rdi + rax*2]	      9418	syntax.c	FUNCTION_144	IF_6	IF_12
0x400db13	            0x754b	                           jne 0x400db60	      9417	syntax.c	FUNCTION_144	IF_6	IF_12
0x400db15	    0x488b35000000	            mov rsi, qword [0x0400db1c] 	      9420	syntax.c	FUNCTION_144	IF_6	IF_13
0x400db1c	            0x85c9	                           test ecx, ecx	      9419	syntax.c	FUNCTION_144	IF_6	IF_13
0x400db1e	        0x488d04c6	                  lea rax, [rsi + rax*8]	      9420	syntax.c	FUNCTION_144	IF_6	IF_13
0x400db22	            0x7464	                            je 0x400db88	      9419	syntax.c	FUNCTION_144	IF_6	IF_13
0x400db24	        0x488b40e8	             mov rax, qword [rax - 0x18]	      9420	syntax.c	FUNCTION_144	IF_6	IF_13
0x400db28	      0xe95cfeffff	                           jmp 0x400d989	      9420	syntax.c	FUNCTION_144	IF_6	IF_13
0x400db2d	           0xf1f00	                         nop dword [rax]	      9420	syntax.c	FUNCTION_144	IF_6	IF_13
0x400db30	          0x80f946	                            cmp cl, 0x46	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x400db33	     0xf84d9feffff	                            je 0x400da12	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x400db39	      0xe9c1fdffff	                           jmp 0x400d8ff	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x400db3e	            0x6690	                                     nop	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x400db40	    0x448b05000000	            mov r8d, dword [0x0400db47] 	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x400db47	          0x4585c0	                           test r8d, r8d	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x400db4a	            0x74ba	                            je 0x400db06	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x400db4c	            0xebae	                           jmp 0x400dafc	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x400db4e	            0x6690	                                     nop	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x400db50	        0x4180f86e	                           cmp r8b, 0x6e	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x400db54	     0xf85c4feffff	                           jne 0x400da1e	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x400db5a	      0xe944ffffff	                           jmp 0x400daa3	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x400db5f	              0x90	                                     nop	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x400db60	    0x488b3d000000	            mov rdi, qword [0x0400db67] 	      9418	syntax.c	FUNCTION_144	IF_6	IF_12
0x400db67	        0x488d04c7	                  lea rax, [rdi + rax*8]	      9418	syntax.c	FUNCTION_144	IF_6	IF_12
0x400db6b	        0x488b40d8	             mov rax, qword [rax - 0x28]	      9418	syntax.c	FUNCTION_144	IF_6	IF_12
0x400db6f	      0xe915feffff	                           jmp 0x400d989	      9418	syntax.c	FUNCTION_144	IF_6	IF_12
0x400db74	         0xf1f4000	                         nop dword [rax]	      9418	syntax.c	FUNCTION_144	IF_6	IF_12
0x400db78	            0x31c0	                            xor eax, eax	      9381	syntax.c	FUNCTION_144	IF_6
0x400db7a	      0xb901000000	                              mov ecx, 1	      9381	syntax.c	FUNCTION_144	IF_6
0x400db7f	      0xe96effffff	                           jmp 0x400daf2	      9381	syntax.c	FUNCTION_144	IF_6
0x400db84	         0xf1f4000	                         nop dword [rax]	      9381	syntax.c	FUNCTION_144	IF_6
0x400db88	        0x488b40e0	             mov rax, qword [rax - 0x20]	      9421	syntax.c	FUNCTION_144	IF_6
0x400db8c	      0xe9f8fdffff	                           jmp 0x400d989	      9421	syntax.c	FUNCTION_144	IF_6
0x400db91	     0xf1f80000000	                         nop dword [rax]	      9421	syntax.c	FUNCTION_144	IF_6
0x400db98	          0x4863ff	                         movsxd rdi, edi	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	IF_9
0x400db9b	            0x85c0	                           test eax, eax	      9397	syntax.c	FUNCTION_144	IF_6	IF_8	IF_9
0x400db9d	        0x488d04ff	                  lea rax, [rdi + rdi*8]	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	IF_9
0x400dba1	        0x488d0447	                  lea rax, [rdi + rax*2]	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	IF_9
0x400dba5	            0x7471	                            je 0x400dc18	      9397	syntax.c	FUNCTION_144	IF_6	IF_8	IF_9
0x400dba7	    0x4c8b1d000000	            mov r11, qword [0x0400dbae] 	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	IF_9
0x400dbae	        0x498d04c3	                  lea rax, [r11 + rax*8]	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	IF_9
0x400dbb2	        0x488b78a8	             mov rdi, qword [rax - 0x58]	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	IF_9
0x400dbb6	    0x4881ff99d4ff	             cmp rdi, 0xffffffffffffd499	      9407	syntax.c	FUNCTION_144	IF_6	IF_8	IF_11
0x400dbbd	     0xf8423feffff	                            je 0x400d9e6	      9407	syntax.c	FUNCTION_144	IF_6	IF_8	IF_11
0x400dbc3	            0x85d2	                           test edx, edx	      9409	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_11
0x400dbc5	      0xb800000000	                              mov eax, 0	      9409	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_11
0x400dbca	      0xba00000000	                              mov edx, 0	      9409	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_11
0x400dbcf	        0x480f45c2	                         cmovne rax, rdx	      9409	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_11
0x400dbd3	            0xffd0	                                call rax	      9409	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_11
0x400dbd5	           0xfb6d4	                           movzx edx, ah	        33	stdio2.h	FUNCTION_182	CALL_1
0x400dbd8	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_182	CALL_1
0x400dbdc	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_182	CALL_1
0x400dbe1	          0x4989d1	                             mov r9, rdx	        33	stdio2.h	FUNCTION_182	CALL_1
0x400dbe4	           0xfb6d0	                           movzx edx, al	        33	stdio2.h	FUNCTION_182	CALL_1
0x400dbe7	        0x48c1e810	                           shr rax, 0x10	        33	stdio2.h	FUNCTION_182	CALL_1
0x400dbeb	              0x52	                                push rdx	        33	stdio2.h	FUNCTION_182	CALL_1
0x400dbec	          0x4989c0	                             mov r8, rax	        33	stdio2.h	FUNCTION_182	CALL_1
0x400dbef	      0xba0a000000	                            mov edx, 0xa	        33	stdio2.h	FUNCTION_182	CALL_1
0x400dbf4	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_182	CALL_1
0x400dbf9	      0xbf00000000	                              mov edi, 0	        33	stdio2.h	FUNCTION_182	CALL_1
0x400dbfe	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_182	CALL_1
0x400dc00	      0xe800000000	                          call 0x400dc05	        33	stdio2.h	FUNCTION_182	CALL_1
0x400dc05	            0x4158	                                  pop r8	      9414	syntax.c	FUNCTION_144	IF_6	IF_8
0x400dc07	      0xb800000000	                              mov eax, 0	      9414	syntax.c	FUNCTION_144	IF_6	IF_8
0x400dc0c	            0x4159	                                  pop r9	      9414	syntax.c	FUNCTION_144	IF_6	IF_8
0x400dc0e	      0xe976fdffff	                           jmp 0x400d989	      9414	syntax.c	FUNCTION_144	IF_6	IF_8
0x400dc13	       0xf1f440000	                   nop dword [rax + rax]	      9414	syntax.c	FUNCTION_144	IF_6	IF_8
0x400dc18	    0x4c8b15000000	            mov r10, qword [0x0400dc1f] 	      9401	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x400dc1f	            0x85c9	                           test ecx, ecx	      9399	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x400dc21	        0x498d04c2	                  lea rax, [r10 + rax*8]	      9401	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x400dc25	            0x7415	                            je 0x400dc3c	      9399	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x400dc27	        0x488b78b8	             mov rdi, qword [rax - 0x48]	      9401	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x400dc2b	            0xeb89	                           jmp 0x400dbb6	      9401	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x400dc2d	        0x4180f854	                           cmp r8b, 0x54	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x400dc31	     0xf85e7fdffff	                           jne 0x400da1e	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x400dc37	      0xe984feffff	                           jmp 0x400dac0	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x400dc3c	        0x488b78b0	             mov rdi, qword [rax - 0x50]	      9406	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_5
0x400dc40	      0xe971ffffff	                           jmp 0x400dbb6	      9406	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_5
highlight_changed	DO,0:functions,0:IF,16:WHILE,1:CALL,18:ELSE,5:SWITCH,1:FOR,5	426
0x4010b70	            0x4157	                                push r15	     10039	syntax.c	FUNCTION_163
0x4010b72	      0xbf00000000	                              mov edi, 0	     10039	syntax.c	FUNCTION_163
0x4010b77	            0x4156	                                push r14	     10039	syntax.c	FUNCTION_163
0x4010b79	            0x4155	                                push r13	     10039	syntax.c	FUNCTION_163
0x4010b7b	            0x4154	                                push r12	     10039	syntax.c	FUNCTION_163
0x4010b7d	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	     10039	syntax.c	FUNCTION_163
0x4010b81	              0x55	                                push rbp	     10039	syntax.c	FUNCTION_163
0x4010b82	              0x53	                                push rbx	     10039	syntax.c	FUNCTION_163
0x4010b83	      0xb900000000	                              mov ecx, 0	     10039	syntax.c	FUNCTION_163
0x4010b88	          0x4829f9	                            sub rcx, rdi	     10039	syntax.c	FUNCTION_163
0x4010b8b	      0xbb01000000	                              mov ebx, 1	     10060	syntax.c	FUNCTION_163
0x4010b90	          0x4531e4	                          xor r12d, r12d	     10060	syntax.c	FUNCTION_163
0x4010b93	    0x4881ec080100	                          sub rsp, 0x108	     10039	syntax.c	FUNCTION_163
0x4010b9a	    0x81c1b8000000	                           add ecx, 0xb8	     10039	syntax.c	FUNCTION_163
0x4010ba0	    0xc70500000000	               mov dword [0x04010baa], 0	     10060	syntax.c	FUNCTION_163
0x4010baa	    0x64488b042528	                mov rax, qword fs:[0x28]	     10039	syntax.c	FUNCTION_163
0x4010bb3	    0x48898424f800	             mov qword [rsp + 0xf8], rax	     10039	syntax.c	FUNCTION_163
0x4010bbb	            0x31c0	                            xor eax, eax	     10039	syntax.c	FUNCTION_163
0x4010bbd	          0xc1e903	                              shr ecx, 3	     10039	syntax.c	FUNCTION_163
0x4010bc0	    0x48c705000000	               mov qword [0x04010bcb], 0	     10039	syntax.c	FUNCTION_163
0x4010bcb	    0x48c705000000	               mov qword [0x04010bd6], 0	     10039	syntax.c	FUNCTION_163
0x4010bd6	            0x31ed	                            xor ebp, ebp	     10060	syntax.c	FUNCTION_163
0x4010bd8	          0xf348ab	              rep stosq qword [rdi], rax	     10060	syntax.c	FUNCTION_163
0x4010bdb	    0xc74424080000	                  mov dword [rsp + 8], 0	     10060	syntax.c	FUNCTION_163
0x4010be3	    0xc7442404ffff	        mov dword [rsp + 4], 0xffffffff 	     10060	syntax.c	FUNCTION_163
0x4010beb	          0x83fb01	                              cmp ebx, 1	     10074	syntax.c	FUNCTION_163	FOR_2	IF_1
0x4010bee	     0xf8486060000	                            je 0x401127a	     10074	syntax.c	FUNCTION_163	FOR_2	IF_1
0x4010bf4	    0x488b05000000	            mov rax, qword [0x04010bfb] 	     10075	syntax.c	FUNCTION_163	FOR_2	IF_1
0x4010bfb	          0x4885c0	                           test rax, rax	     10078	syntax.c	FUNCTION_163	FOR_2	IF_2
0x4010bfe	     0xf84d7020000	                            je 0x4010edb	     10078	syntax.c	FUNCTION_163	FOR_2	IF_2
0x4010c04	           0xfb608	                   movzx ecx, byte [rax]	     10081	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x4010c07	            0x84c9	                             test cl, cl	     10081	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x4010c09	     0xf84cc020000	                            je 0x4010edb	     10081	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x4010c0f	            0x31d2	                            xor edx, edx	     10060	syntax.c	FUNCTION_163
0x4010c11	            0xeb0f	                           jmp 0x4010c22	     10060	syntax.c	FUNCTION_163
0x4010c13	       0xf1f440000	                   nop dword [rax + rax]	     10060	syntax.c	FUNCTION_163
0x4010c18	        0x4883c201	                              add rdx, 1	     10060	syntax.c	FUNCTION_163
0x4010c1c	        0x4883fa2e	                           cmp rdx, 0x2e	     10083	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3
0x4010c20	            0x746e	                            je 0x4010c90	     10083	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3
0x4010c22	    0x390c95000000	                  cmp dword [rdx*4], ecx	     10084	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3	IF_3
0x4010c29	          0x4c63fa	                         movsxd r15, edx	     10084	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3	IF_3
0x4010c2c	            0x75ea	                           jne 0x4010c18	     10084	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3	IF_3
0x4010c2e	        0x488d7801	                      lea rdi, [rax + 1]	     10086	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x4010c32	         0xfb64001	               movzx eax, byte [rax + 1]	     10087	syntax.c	FUNCTION_163	FOR_2	WHILE_1	IF_4
0x4010c36	            0x84c0	                             test al, al	     10087	syntax.c	FUNCTION_163	FOR_2	WHILE_1	IF_4
0x4010c38	            0x7456	                            je 0x4010c90	     10087	syntax.c	FUNCTION_163	FOR_2	WHILE_1	IF_4
0x4010c3a	            0x31c9	                            xor ecx, ecx	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x4010c3c	         0xf1f4000	                         nop dword [rax]	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x4010c40	            0x3c2c	                            cmp al, 0x2c	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x4010c42	            0x7433	                            je 0x4010c77	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x4010c44	            0x3c20	                            cmp al, 0x20	     10097	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_5	CALL_2
0x4010c46	            0x7420	                            je 0x4010c68	     10097	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_5	CALL_2
0x4010c48	            0x3c09	                               cmp al, 9	     10097	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_5	CALL_2
0x4010c4a	            0x741c	                            je 0x4010c68	     10097	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_5	CALL_2
0x4010c4c	    0x81f9ff000000	                           cmp ecx, 0xff	     10100	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_6
0x4010c52	            0x7f3c	                            jg 0x4010c90	     10100	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_6
0x4010c54	          0x83e82d	                           sub eax, 0x2d	     10103	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x4010c57	            0x3c48	                            cmp al, 0x48	     10103	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x4010c59	            0x7735	                            ja 0x4010c90	     10103	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x4010c5b	           0xfb6c0	                           movzx eax, al	     10103	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x4010c5e	    0xff24c5000000	                       jmp qword [rax*8]	     10103	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x4010c65	           0xf1f00	                         nop dword [rax]	     10103	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x4010c68	          0x4889fa	                            mov rdx, rdi	     10103	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x4010c6b	         0xfb64201	               movzx eax, byte [rdx + 1]	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x4010c6f	        0x488d7a01	                      lea rdi, [rdx + 1]	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x4010c73	            0x84c0	                             test al, al	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x4010c75	            0x75c9	                           jne 0x4010c40	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x4010c77	    0x42890cbd0000	                  mov dword [r15*4], ecx	     10149	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x4010c7f	      0xe800000000	                          call 0x4010c84	     10151	syntax.c	FUNCTION_163	FOR_2	WHILE_1	CALL_11
0x4010c84	      0xe97bffffff	                           jmp 0x4010c04	     10151	syntax.c	FUNCTION_163	FOR_2	WHILE_1	CALL_11
0x4010c89	     0xf1f80000000	                         nop dword [rax]	     10151	syntax.c	FUNCTION_163	FOR_2	WHILE_1	CALL_11
0x4010c90	            0x31c0	                            xor eax, eax	     10146	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x4010c92	    0x488b8c24f800	            mov rcx, qword [rsp + 0xf8] 	     10216	syntax.c	FUNCTION_163
0x4010c9a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	     10216	syntax.c	FUNCTION_163
0x4010ca3	     0xf85e7050000	                           jne 0x4011290	     10216	syntax.c	FUNCTION_163
0x4010ca9	    0x4881c4080100	                          add rsp, 0x108	     10216	syntax.c	FUNCTION_163
0x4010cb0	              0x5b	                                 pop rbx	     10216	syntax.c	FUNCTION_163
0x4010cb1	              0x5d	                                 pop rbp	     10216	syntax.c	FUNCTION_163
0x4010cb2	            0x415c	                                 pop r12	     10216	syntax.c	FUNCTION_163
0x4010cb4	            0x415d	                                 pop r13	     10216	syntax.c	FUNCTION_163
0x4010cb6	            0x415e	                                 pop r14	     10216	syntax.c	FUNCTION_163
0x4010cb8	            0x415f	                                 pop r15	     10216	syntax.c	FUNCTION_163
0x4010cba	              0xc3	                                     ret	     10216	syntax.c	FUNCTION_163
0x4010cbb	       0xf1f440000	                   nop dword [rax + rax]	     10216	syntax.c	FUNCTION_163
0x4010cc0	          0x83c908	                               or ecx, 8	     10116	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x4010cc3	          0x4889fa	                            mov rdx, rdi	     10117	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x4010cc6	            0xeba3	                           jmp 0x4010c6b	     10117	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x4010cc8	     0xf1f84000000	                   nop dword [rax + rax]	     10117	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x4010cd0	          0x80c980	                             or cl, 0x80	     10120	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x4010cd3	          0x4889fa	                            mov rdx, rdi	     10121	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x4010cd6	            0xeb93	                           jmp 0x4010c6b	     10121	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x4010cd8	     0xf1f84000000	                   nop dword [rax + rax]	     10121	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x4010ce0	          0x83c920	                            or ecx, 0x20	     10114	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x4010ce3	          0x4889fa	                            mov rdx, rdi	     10115	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x4010ce6	            0xeb83	                           jmp 0x4010c6b	     10115	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x4010ce8	     0xf1f84000000	                   nop dword [rax + rax]	     10115	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x4010cf0	          0x83c901	                               or ecx, 1	     10112	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x4010cf3	          0x4889fa	                            mov rdx, rdi	     10113	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x4010cf6	      0xe970ffffff	                           jmp 0x4010c6b	     10113	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x4010cfb	       0xf1f440000	                   nop dword [rax + rax]	     10113	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x4010d00	          0x83c904	                               or ecx, 4	     10107	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x4010d03	          0x4889fa	                            mov rdx, rdi	     10108	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x4010d06	      0xe960ffffff	                           jmp 0x4010c6b	     10108	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x4010d0b	       0xf1f440000	                   nop dword [rax + rax]	     10108	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x4010d10	          0x83c910	                            or ecx, 0x10	     10118	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x4010d13	          0x4889fa	                            mov rdx, rdi	     10119	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x4010d16	      0xe950ffffff	                           jmp 0x4010c6b	     10119	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x4010d1b	       0xf1f440000	                   nop dword [rax + rax]	     10119	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x4010d20	          0x83c902	                               or ecx, 2	     10105	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x4010d23	          0x4889fa	                            mov rdx, rdi	     10106	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x4010d26	      0xe940ffffff	                           jmp 0x4010c6b	     10106	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x4010d2b	       0xf1f440000	                   nop dword [rax + rax]	     10106	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x4010d30	            0x85c9	                           test ecx, ecx	     10123	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_7
0x4010d32	        0x4c8d6f01	                      lea r13, [rdi + 1]	     10122	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x4010d36	     0xf8554ffffff	                           jne 0x4010c90	     10123	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_7
0x4010d3c	        0x807f0100	                   cmp byte [rdi + 1], 0	     10123	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_7
0x4010d40	     0xf844affffff	                            je 0x4010c90	     10123	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_7
0x4010d46	      0xbe2c000000	                           mov esi, 0x2c	     10125	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_3
0x4010d4b	          0x4c89ef	                            mov rdi, r13	     10125	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_3
0x4010d4e	      0xe800000000	                          call 0x4010d53	     10125	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_3
0x4010d53	          0x4885c0	                           test rax, rax	     10126	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_8
0x4010d56	          0x4989c6	                            mov r14, rax	     10125	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_3
0x4010d59	     0xf84d4030000	                            je 0x4011133	     10126	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_8
0x4010d5f	          0x4c89f6	                            mov rsi, r14	     10128	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_5
0x4010d62	          0x4c89ef	                            mov rdi, r13	     10128	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_5
0x4010d65	          0x4c29ee	                            sub rsi, r13	     10128	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_5
0x4010d68	      0xe800000000	                          call 0x4010d6d	     10128	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_5
0x4010d6d	          0x83f800	                              cmp eax, 0	     10129	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_9
0x4010d70	     0xf841affffff	                            je 0x4010c90	     10129	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_9
0x4010d76	    0x8b3500000000	            mov esi, dword [0x04010d7c] 	      9879	syntax.c	FUNCTION_159	IF_1
0x4010d7c	        0x410f9ec0	                               setle r8b	      9879	syntax.c	FUNCTION_159	IF_1
0x4010d80	    0x488b3d000000	            mov rdi, qword [0x04010d87] 	      9879	syntax.c	FUNCTION_159	IF_1
0x4010d87	            0x39f0	                            cmp eax, esi	      9879	syntax.c	FUNCTION_159	IF_1
0x4010d89	    0x4c8d8f68ffff	                    lea r9, [rdi - 0x98]	      9879	syntax.c	FUNCTION_159	IF_1
0x4010d90	           0xf9fc2	                                 setg dl	      9879	syntax.c	FUNCTION_159	IF_1
0x4010d93	          0x4108d0	                              or r8b, dl	      9879	syntax.c	FUNCTION_159	IF_1
0x4010d96	            0x7538	                           jne 0x4010dd0	      9879	syntax.c	FUNCTION_159	IF_1
0x4010d98	          0x4863d0	                         movsxd rdx, eax	      9879	syntax.c	FUNCTION_159	IF_1
0x4010d9b	      0xb964000000	                           mov ecx, 0x64	      9879	syntax.c	FUNCTION_159	IF_1
0x4010da0	            0xeb13	                           jmp 0x4010db5	      9879	syntax.c	FUNCTION_159	IF_1
0x4010da2	    0x660f1f440000	                    nop word [rax + rax]	      9879	syntax.c	FUNCTION_159	IF_1
0x4010da8	            0x85d2	                           test edx, edx	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4010daa	            0x7424	                            je 0x4010dd0	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4010dac	          0x83e901	                              sub ecx, 1	      9886	syntax.c	FUNCTION_159	FOR_1
0x4010daf	     0xf84b0040000	                            je 0x4011265	      9886	syntax.c	FUNCTION_159	FOR_1
0x4010db5	        0x4c8d0cd2	                   lea r9, [rdx + rdx*8]	      9888	syntax.c	FUNCTION_159	FOR_1
0x4010db9	        0x4a8d144a	                   lea rdx, [rdx + r9*2]	      9888	syntax.c	FUNCTION_159	FOR_1
0x4010dbd	    0x4c8d8cd768ff	            lea r9, [rdi + rdx*8 - 0x98]	      9888	syntax.c	FUNCTION_159	FOR_1
0x4010dc5	    0x496391880000	          movsxd rdx, dword [r9 + 0x88] 	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4010dcc	            0x39d6	                            cmp esi, edx	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4010dce	            0x7dd8	                           jge 0x4010da8	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4010dd0	    0x448b1d000000	           mov r11d, dword [0x04010dd7] 	      9826	syntax.c	FUNCTION_156	IF_1
0x4010dd7	          0x4585db	                         test r11d, r11d	      9826	syntax.c	FUNCTION_156	IF_1
0x4010dda	     0xf85a9000000	                           jne 0x4010e89	      9826	syntax.c	FUNCTION_156	IF_1
0x4010de0	    0x833d00000000	               cmp dword [0x04010de7], 1	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x4010de7	     0xf8e83000000	                           jle 0x4010e70	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x4010ded	        0x418b493c	              mov ecx, dword [r9 + 0x3c]	      9831	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x4010df1	        0x4183ff0e	                           cmp r15d, 0xe	     10134	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_10
0x4010df5	        0x498d56ff	                      lea rdx, [r14 - 1]	     10132	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x4010df9	     0xf849c000000	                            je 0x4010e9b	     10134	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_10
0x4010dff	        0x4183ff2c	                          cmp r15d, 0x2c	     10137	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_2	IF_11
0x4010e03	     0xf848c030000	                            je 0x4011195	     10137	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_2	IF_11
0x4010e09	        0x4183ff2d	                          cmp r15d, 0x2d	     10139	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_3	IF_12
0x4010e0d	     0xf8432030000	                            je 0x4011145	     10139	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_3	IF_12
0x4010e13	        0x4183ff0d	                           cmp r15d, 0xd	     10142	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_4	IF_13
0x4010e17	     0xf854efeffff	                           jne 0x4010c6b	     10142	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_4	IF_13
0x4010e1d	          0x4584c0	                           test r8b, r8b	      9879	syntax.c	FUNCTION_159	IF_1
0x4010e20	    0xc74424040000	                  mov dword [rsp + 4], 0	      9880	syntax.c	FUNCTION_159	IF_1
0x4010e28	     0xf853dfeffff	                           jne 0x4010c6b	      9879	syntax.c	FUNCTION_159	IF_1
0x4010e2e	    0x41b864000000	                           mov r8d, 0x64	      9879	syntax.c	FUNCTION_159	IF_1
0x4010e34	        0x89442404	                mov dword [rsp + 4], eax	      9879	syntax.c	FUNCTION_159	IF_1
0x4010e38	            0xeb1c	                           jmp 0x4010e56	      9879	syntax.c	FUNCTION_159	IF_1
0x4010e3a	    0x660f1f440000	                    nop word [rax + rax]	      9879	syntax.c	FUNCTION_159	IF_1
0x4010e40	            0x39f0	                            cmp eax, esi	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4010e42	     0xf8f23feffff	                            jg 0x4010c6b	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4010e48	        0x4183e801	                              sub r8d, 1	      9886	syntax.c	FUNCTION_159	FOR_1
0x4010e4c	        0x89442404	                mov dword [rsp + 4], eax	      9886	syntax.c	FUNCTION_159	FOR_1
0x4010e50	     0xf8415feffff	                            je 0x4010c6b	      9886	syntax.c	FUNCTION_159	FOR_1
0x4010e56	      0x4863442404	            movsxd rax, dword [rsp + 4] 	      9888	syntax.c	FUNCTION_159	FOR_1
0x4010e5b	        0x4c8d0cc0	                   lea r9, [rax + rax*8]	      9888	syntax.c	FUNCTION_159	FOR_1
0x4010e5f	        0x4a8d0448	                   lea rax, [rax + r9*2]	      9888	syntax.c	FUNCTION_159	FOR_1
0x4010e63	        0x8b44c7f0	     mov eax, dword [rdi + rax*8 - 0x10]	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4010e67	            0x85c0	                           test eax, eax	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4010e69	            0x75d5	                           jne 0x4010e40	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4010e6b	      0xe9fbfdffff	                           jmp 0x4010c6b	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4010e70	    0x448b15000000	           mov r10d, dword [0x04010e77] 	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x4010e77	          0x4585d2	                         test r10d, r10d	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x4010e7a	     0xf856dffffff	                           jne 0x4010ded	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x4010e80	        0x418b4928	              mov ecx, dword [r9 + 0x28]	      9833	syntax.c	FUNCTION_156	ELSE_2
0x4010e84	      0xe968ffffff	                           jmp 0x4010df1	      9833	syntax.c	FUNCTION_156	ELSE_2
0x4010e89	        0x4183ff0e	                           cmp r15d, 0xe	     10134	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_10
0x4010e8d	        0x418b4968	              mov ecx, dword [r9 + 0x68]	      9827	syntax.c	FUNCTION_156	IF_1
0x4010e91	        0x498d56ff	                      lea rdx, [r14 - 1]	     10132	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x4010e95	     0xf8564ffffff	                           jne 0x4010dff	     10134	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_10
0x4010e9b	            0x31ed	                            xor ebp, ebp	      9880	syntax.c	FUNCTION_159	IF_1
0x4010e9d	          0x4584c0	                           test r8b, r8b	      9879	syntax.c	FUNCTION_159	IF_1
0x4010ea0	     0xf85c5fdffff	                           jne 0x4010c6b	      9879	syntax.c	FUNCTION_159	IF_1
0x4010ea6	    0x41b964000000	                           mov r9d, 0x64	      9879	syntax.c	FUNCTION_159	IF_1
0x4010eac	            0xeb12	                           jmp 0x4010ec0	      9879	syntax.c	FUNCTION_159	IF_1
0x4010eae	            0x6690	                                     nop	      9879	syntax.c	FUNCTION_159	IF_1
0x4010eb0	            0x39f5	                            cmp ebp, esi	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4010eb2	            0x7f20	                            jg 0x4010ed4	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4010eb4	        0x4183e901	                              sub r9d, 1	      9886	syntax.c	FUNCTION_159	FOR_1
0x4010eb8	            0x89e8	                            mov eax, ebp	      9886	syntax.c	FUNCTION_159	FOR_1
0x4010eba	     0xf84abfdffff	                            je 0x4010c6b	      9886	syntax.c	FUNCTION_159	FOR_1
0x4010ec0	          0x4c63c0	                          movsxd r8, eax	      9888	syntax.c	FUNCTION_159	FOR_1
0x4010ec3	        0x4f8d14c0	                    lea r10, [r8 + r8*8]	      9888	syntax.c	FUNCTION_159	FOR_1
0x4010ec7	        0x4f8d0450	                    lea r8, [r8 + r10*2]	      9888	syntax.c	FUNCTION_159	FOR_1
0x4010ecb	      0x428b6cc7f0	      mov ebp, dword [rdi + r8*8 - 0x10]	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4010ed0	            0x85ed	                           test ebp, ebp	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4010ed2	            0x75dc	                           jne 0x4010eb0	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4010ed4	            0x89c5	                            mov ebp, eax	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4010ed6	      0xe990fdffff	                           jmp 0x4010c6b	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4010edb	          0x83fb02	                              cmp ebx, 2	     10072	syntax.c	FUNCTION_163	FOR_2
0x4010ede	     0xf85a4030000	                           jne 0x4011288	     10072	syntax.c	FUNCTION_163	FOR_2
0x4010ee4	      0xbe1c000000	                           mov esi, 0x1c	     10167	syntax.c	FUNCTION_163	IF_14	CALL_12
0x4010ee9	      0xbf00000000	                              mov edi, 0	     10167	syntax.c	FUNCTION_163	IF_14	CALL_12
0x4010eee	        0x896c2410	             mov dword [rsp + 0x10], ebp	     10167	syntax.c	FUNCTION_163	IF_14	CALL_12
0x4010ef2	      0x4489642414	            mov dword [rsp + 0x14], r12d	     10167	syntax.c	FUNCTION_163	IF_14	CALL_12
0x4010ef7	      0xe800000000	                          call 0x4010efc	     10167	syntax.c	FUNCTION_163	IF_14	CALL_12
0x4010efc	            0x85c0	                           test eax, eax	     10167	syntax.c	FUNCTION_163	IF_14	CALL_12
0x4010efe	     0xf848cfdffff	                            je 0x4010c90	     10167	syntax.c	FUNCTION_163	IF_14	CALL_12
0x4010f04	    0x486305000000	         movsxd rax, dword [0x04010f0b] 	     10169	syntax.c	FUNCTION_163
0x4010f0b	      0x837c2404ff	 cmp dword [rsp + 4], 0xffffffffffffffff	     10170	syntax.c	FUNCTION_163	IF_15
0x4010f10	        0x8944240c	              mov dword [rsp + 0xc], eax	     10169	syntax.c	FUNCTION_163
0x4010f14	     0xf84c5020000	                            je 0x40111df	     10170	syntax.c	FUNCTION_163	IF_15
0x4010f1a	          0x8d4809	                      lea ecx, [rax + 9]	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_17
0x4010f1d	          0x83c012	                           add eax, 0x12	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x4010f20	            0x31ed	                            xor ebp, ebp	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x4010f22	        0x8944241c	             mov dword [rsp + 0x1c], eax	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x4010f26	        0x894c2418	             mov dword [rsp + 0x18], ecx	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_17
0x4010f2a	    0x660f1f440000	                    nop word [rax + rax]	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_17
0x4010f30	        0x448d4501	                      lea r8d, [rbp + 1]	        33	stdio2.h	FUNCTION_182	CALL_1
0x4010f34	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	        33	stdio2.h	FUNCTION_182	CALL_1
0x4010f39	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_182	CALL_1
0x4010f3e	      0xba0a000000	                            mov edx, 0xa	        33	stdio2.h	FUNCTION_182	CALL_1
0x4010f43	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_182	CALL_1
0x4010f48	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_182	CALL_1
0x4010f4a	          0x892c24	                    mov dword [rsp], ebp	        33	stdio2.h	FUNCTION_182	CALL_1
0x4010f4d	      0xe800000000	                          call 0x4010f52	        33	stdio2.h	FUNCTION_182	CALL_1
0x4010f52	      0x488d742420	                   lea rsi, [rsp + 0x20]	      9639	syntax.c	FUNCTION_148	CALL_1
0x4010f57	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      9639	syntax.c	FUNCTION_148	CALL_1
0x4010f5c	      0xbac7000000	                           mov edx, 0xc7	      9639	syntax.c	FUNCTION_148	CALL_1
0x4010f61	      0xe800000000	                          call 0x4010f66	      9639	syntax.c	FUNCTION_148	CALL_1
0x4010f66	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      9640	syntax.c	FUNCTION_148	CALL_2
0x4010f6b	      0xe800000000	                          call 0x4010f70	      9640	syntax.c	FUNCTION_148	CALL_2
0x4010f70	    0x486305000000	         movsxd rax, dword [0x04010f77] 	      9641	syntax.c	FUNCTION_148	FOR_1
0x4010f77	    0x4c8b25000000	            mov r12, qword [0x04010f7e] 	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x4010f7e	        0x488d14c0	                  lea rdx, [rax + rax*8]	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x4010f82	          0x4989c5	                            mov r13, rax	      9641	syntax.c	FUNCTION_148	FOR_1
0x4010f85	          0x4589ef	                          mov r15d, r13d	      9641	syntax.c	FUNCTION_148	FOR_1
0x4010f88	        0x488d0450	                  lea rax, [rax + rdx*2]	      9641	syntax.c	FUNCTION_148	FOR_1
0x4010f8c	    0x4d8db4c470ff	           lea r14, [r12 + rax*8 - 0x90]	      9641	syntax.c	FUNCTION_148	FOR_1
0x4010f94	            0xeb2a	                           jmp 0x4010fc0	      9641	syntax.c	FUNCTION_148	FOR_1
0x4010f96	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      9641	syntax.c	FUNCTION_148	FOR_1
0x4010fa0	          0x498b36	                    mov rsi, qword [r14]	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x4010fa3	          0x4885f6	                           test rsi, rsi	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x4010fa6	            0x740e	                            je 0x4010fb6	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x4010fa8	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x4010fad	      0xe800000000	                          call 0x4010fb2	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x4010fb2	            0x85c0	                           test eax, eax	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x4010fb4	            0x7412	                            je 0x4010fc8	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x4010fb6	    0x4981ee980000	                           sub r14, 0x98	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x4010fbd	          0x4189df	                           mov r15d, ebx	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x4010fc0	          0x4489fb	                           mov ebx, r15d	      9641	syntax.c	FUNCTION_148	FOR_1
0x4010fc3	          0x83eb01	                              sub ebx, 1	      9641	syntax.c	FUNCTION_148	FOR_1
0x4010fc6	            0x79d8	                           jns 0x4010fa0	      9641	syntax.c	FUNCTION_148	FOR_1
0x4010fc8	          0x4585ff	                         test r15d, r15d	     10183	syntax.c	FUNCTION_163	FOR_5	IF_16
0x4010fcb	            0x7553	                           jne 0x4011020	     10183	syntax.c	FUNCTION_163	FOR_5	IF_16
0x4010fcd	    0xc704ad000000	                    mov dword [rbp*4], 0	     10185	syntax.c	FUNCTION_163	FOR_5	IF_16
0x4010fd8	    0xc704ad000000	                    mov dword [rbp*4], 0	     10187	syntax.c	FUNCTION_163	FOR_5	IF_16
0x4010fe3	    0xc704ad000000	                    mov dword [rbp*4], 0	     10189	syntax.c	FUNCTION_163	FOR_5	IF_16
0x4010fee	    0xc704ad000000	                    mov dword [rbp*4], 0	     10190	syntax.c	FUNCTION_163	FOR_5	IF_16
0x4010ff9	        0x4883c501	                              add rbp, 1	     10190	syntax.c	FUNCTION_163	FOR_5	IF_16
0x4010ffd	        0x4883fd09	                              cmp rbp, 9	     10179	syntax.c	FUNCTION_163	FOR_5
0x4011001	     0xf8529ffffff	                           jne 0x4010f30	     10179	syntax.c	FUNCTION_163	FOR_5
0x4011007	        0x8b44240c	              mov eax, dword [rsp + 0xc]	     10210	syntax.c	FUNCTION_163
0x401100b	    0x890500000000	            mov dword [0x04011011], eax 	     10210	syntax.c	FUNCTION_163
0x4011011	      0xb801000000	                              mov eax, 1	     10215	syntax.c	FUNCTION_163
0x4011016	      0xe977fcffff	                           jmp 0x4010c92	     10215	syntax.c	FUNCTION_163
0x401101b	       0xf1f440000	                   nop dword [rax + rax]	     10215	syntax.c	FUNCTION_163
0x4011020	          0x4539fd	                          cmp r13d, r15d	      9879	syntax.c	FUNCTION_159	IF_1
0x4011023	     0xf8cfd000000	                            jl 0x4011126	      9879	syntax.c	FUNCTION_159	IF_1
0x4011029	          0x4585ff	                         test r15d, r15d	      9879	syntax.c	FUNCTION_159	IF_1
0x401102c	          0x4963c7	                        movsxd rax, r15d	      9879	syntax.c	FUNCTION_159	IF_1
0x401102f	      0xb964000000	                           mov ecx, 0x64	      9879	syntax.c	FUNCTION_159	IF_1
0x4011034	            0x7f18	                            jg 0x401104e	      9879	syntax.c	FUNCTION_159	IF_1
0x4011036	      0xe9eb000000	                           jmp 0x4011126	      9879	syntax.c	FUNCTION_159	IF_1
0x401103b	       0xf1f440000	                   nop dword [rax + rax]	      9879	syntax.c	FUNCTION_159	IF_1
0x4011040	          0x4139c5	                           cmp r13d, eax	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4011043	            0x7c24	                            jl 0x4011069	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4011045	          0x83e901	                              sub ecx, 1	      9886	syntax.c	FUNCTION_159	FOR_1
0x4011048	     0xf8402020000	                            je 0x4011250	      9886	syntax.c	FUNCTION_159	FOR_1
0x401104e	        0x488d14c0	                  lea rdx, [rax + rax*8]	      9888	syntax.c	FUNCTION_159	FOR_1
0x4011052	        0x488d0450	                  lea rax, [rax + rdx*2]	      9888	syntax.c	FUNCTION_159	FOR_1
0x4011056	    0x498d94c468ff	           lea rdx, [r12 + rax*8 - 0x98]	      9888	syntax.c	FUNCTION_159	FOR_1
0x401105e	    0x486382880000	         movsxd rax, dword [rdx + 0x88] 	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4011065	            0x85c0	                           test eax, eax	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4011067	            0x75d7	                           jne 0x4011040	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4011069	    0x8b3500000000	            mov esi, dword [0x0401106f] 	      9826	syntax.c	FUNCTION_156	IF_1
0x401106f	            0x85f6	                           test esi, esi	      9826	syntax.c	FUNCTION_156	IF_1
0x4011071	     0xf8591000000	                           jne 0x4011108	      9826	syntax.c	FUNCTION_156	IF_1
0x4011077	    0x833d00000000	               cmp dword [0x0401107e], 1	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x401107e	     0xf8e8c000000	                           jle 0x4011110	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x4011084	          0x8b423c	            mov eax, dword [rdx + 0x3c] 	      9831	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x4011087	        0x4883ec08	                              sub rsp, 8	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_16
0x401108b	    0x41b90e000000	                            mov r9d, 0xe	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_16
0x4011091	          0x4489ff	                           mov edi, r15d	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_16
0x4011094	      0x6800000000	                                  push 0	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_16
0x4011099	      0x448b742410	           mov r14d, dword [rsp + 0x10] 	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_16
0x401109e	        0x8b5c2414	            mov ebx, dword [rsp + 0x14] 	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_16
0x40110a2	        0x8b4c241c	            mov ecx, dword [rsp + 0x1c] 	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_16
0x40110a6	        0x8b542420	            mov edx, dword [rsp + 0x20] 	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_16
0x40110aa	    0x8904ad000000	                  mov dword [rbp*4], eax	     10196	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_15
0x40110b1	          0x4589f0	                           mov r8d, r14d	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_16
0x40110b4	            0x89de	                            mov esi, ebx	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_16
0x40110b6	      0xe8f542ffff	                call sym.combine_stl_hlt	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_16
0x40110bb	        0x8b4c2428	            mov ecx, dword [rsp + 0x28] 	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_17
0x40110bf	        0x8b542424	            mov edx, dword [rsp + 0x24] 	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_17
0x40110c3	    0x41b92c000000	                           mov r9d, 0x2c	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_17
0x40110c9	          0x4589f0	                           mov r8d, r14d	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_17
0x40110cc	            0x89de	                            mov esi, ebx	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_17
0x40110ce	          0x4489ff	                           mov edi, r15d	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_17
0x40110d1	    0x48c704240000	                      mov qword [rsp], 0	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_17
0x40110d9	      0xe8d242ffff	                call sym.combine_stl_hlt	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_17
0x40110de	        0x8b4c242c	            mov ecx, dword [rsp + 0x2c] 	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x40110e2	        0x8b542418	            mov edx, dword [rsp + 0x18] 	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x40110e6	    0x41b92d000000	                           mov r9d, 0x2d	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x40110ec	          0x4589f0	                           mov r8d, r14d	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x40110ef	            0x89de	                            mov esi, ebx	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x40110f1	          0x4489ff	                           mov edi, r15d	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x40110f4	    0x48c704240000	                      mov qword [rsp], 0	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x40110fc	      0xe8af42ffff	                call sym.combine_stl_hlt	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x4011101	              0x58	                                 pop rax	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x4011102	              0x5a	                                 pop rdx	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x4011103	      0xe9f1feffff	                           jmp 0x4010ff9	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x4011108	          0x8b4268	            mov eax, dword [rdx + 0x68] 	      9827	syntax.c	FUNCTION_156	IF_1
0x401110b	      0xe977ffffff	                           jmp 0x4011087	      9827	syntax.c	FUNCTION_156	IF_1
0x4011110	    0x8b0d00000000	            mov ecx, dword [0x04011116] 	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x4011116	            0x85c9	                           test ecx, ecx	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x4011118	     0xf8566ffffff	                           jne 0x4011084	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x401111e	          0x8b4228	            mov eax, dword [rdx + 0x28] 	      9833	syntax.c	FUNCTION_156	ELSE_2
0x4011121	      0xe961ffffff	                           jmp 0x4011087	      9833	syntax.c	FUNCTION_156	ELSE_2
0x4011126	    0x498d942468ff	                   lea rdx, [r12 - 0x98]	      9833	syntax.c	FUNCTION_156	ELSE_2
0x401112e	      0xe936ffffff	                           jmp 0x4011069	      9833	syntax.c	FUNCTION_156	ELSE_2
0x4011133	          0x4c89ef	                            mov rdi, r13	     10127	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_4
0x4011136	      0xe800000000	                          call 0x401113b	     10127	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_4
0x401113b	      0x4d8d740500	                    lea r14, [r13 + rax]	     10127	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_4
0x4011140	      0xe91afcffff	                           jmp 0x4010d5f	     10127	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_4
0x4011145	          0x4584c0	                           test r8b, r8b	      9879	syntax.c	FUNCTION_159	IF_1
0x4011148	    0xc74424080000	                  mov dword [rsp + 8], 0	      9880	syntax.c	FUNCTION_159	IF_1
0x4011150	     0xf8515fbffff	                           jne 0x4010c6b	      9879	syntax.c	FUNCTION_159	IF_1
0x4011156	    0x41b964000000	                           mov r9d, 0x64	      9879	syntax.c	FUNCTION_159	IF_1
0x401115c	            0xeb14	                           jmp 0x4011172	      9879	syntax.c	FUNCTION_159	IF_1
0x401115e	            0x6690	                                     nop	      9879	syntax.c	FUNCTION_159	IF_1
0x4011160	          0x4139f3	                           cmp r11d, esi	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4011163	            0x7f27	                            jg 0x401118c	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4011165	        0x4183e901	                              sub r9d, 1	      9886	syntax.c	FUNCTION_159	FOR_1
0x4011169	          0x4489d8	                           mov eax, r11d	      9886	syntax.c	FUNCTION_159	FOR_1
0x401116c	     0xf84f9faffff	                            je 0x4010c6b	      9886	syntax.c	FUNCTION_159	FOR_1
0x4011172	          0x4c63c0	                          movsxd r8, eax	      9888	syntax.c	FUNCTION_159	FOR_1
0x4011175	        0x4f8d14c0	                    lea r10, [r8 + r8*8]	      9888	syntax.c	FUNCTION_159	FOR_1
0x4011179	        0x4f8d0450	                    lea r8, [r8 + r10*2]	      9888	syntax.c	FUNCTION_159	FOR_1
0x401117d	      0x468b5cc7f0	     mov r11d, dword [rdi + r8*8 - 0x10]	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4011182	          0x4585db	                         test r11d, r11d	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4011185	      0x44895c2408	               mov dword [rsp + 8], r11d	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x401118a	            0x75d4	                           jne 0x4011160	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x401118c	        0x89442408	                mov dword [rsp + 8], eax	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4011190	      0xe9d6faffff	                           jmp 0x4010c6b	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4011195	          0x4531e4	                          xor r12d, r12d	      9880	syntax.c	FUNCTION_159	IF_1
0x4011198	          0x4584c0	                           test r8b, r8b	      9879	syntax.c	FUNCTION_159	IF_1
0x401119b	     0xf85cafaffff	                           jne 0x4010c6b	      9879	syntax.c	FUNCTION_159	IF_1
0x40111a1	    0x41b964000000	                           mov r9d, 0x64	      9879	syntax.c	FUNCTION_159	IF_1
0x40111a7	            0xeb19	                           jmp 0x40111c2	      9879	syntax.c	FUNCTION_159	IF_1
0x40111a9	     0xf1f80000000	                         nop dword [rax]	      9879	syntax.c	FUNCTION_159	IF_1
0x40111b0	          0x4585e4	                         test r12d, r12d	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x40111b3	            0x7422	                            je 0x40111d7	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x40111b5	        0x4183e901	                              sub r9d, 1	      9886	syntax.c	FUNCTION_159	FOR_1
0x40111b9	          0x4489e0	                           mov eax, r12d	      9886	syntax.c	FUNCTION_159	FOR_1
0x40111bc	     0xf84a9faffff	                            je 0x4010c6b	      9886	syntax.c	FUNCTION_159	FOR_1
0x40111c2	          0x4c63c0	                          movsxd r8, eax	      9888	syntax.c	FUNCTION_159	FOR_1
0x40111c5	        0x4f8d14c0	                    lea r10, [r8 + r8*8]	      9888	syntax.c	FUNCTION_159	FOR_1
0x40111c9	        0x4f8d0450	                    lea r8, [r8 + r10*2]	      9888	syntax.c	FUNCTION_159	FOR_1
0x40111cd	      0x468b64c7f0	     mov r12d, dword [rdi + r8*8 - 0x10]	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x40111d2	          0x4139f4	                           cmp r12d, esi	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x40111d5	            0x7ed9	                           jle 0x40111b0	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x40111d7	          0x4189c4	                           mov r12d, eax	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x40111da	      0xe98cfaffff	                           jmp 0x4010c6b	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x40111df	        0x488d14c0	                  lea rdx, [rax + rax*8]	     10174	syntax.c	FUNCTION_163	IF_15	CALL_13
0x40111e3	            0x89c6	                            mov esi, eax	     10174	syntax.c	FUNCTION_163	IF_15	CALL_13
0x40111e5	        0x488d1450	                  lea rdx, [rax + rdx*2]	     10174	syntax.c	FUNCTION_163	IF_15	CALL_13
0x40111e9	    0x488b05000000	            mov rax, qword [0x040111f0] 	        90	string3.h	FUNCTION_173	CALL_6
0x40111f0	        0x48c1e203	                              shl rdx, 3	     10174	syntax.c	FUNCTION_163	IF_15	CALL_13
0x40111f4	    0x488d84100810	           lea rax, [rax + rdx + 0x1008]	        90	string3.h	FUNCTION_173	CALL_6
0x40111fc	        0x488d7808	                      lea rdi, [rax + 8]	        90	string3.h	FUNCTION_173	CALL_6
0x4011200	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_173	CALL_6
0x4011207	    0x48c780900000	               mov qword [rax + 0x90], 0	        90	string3.h	FUNCTION_173	CALL_6
0x4011212	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_173	CALL_6
0x4011216	          0x4829f8	                            sub rax, rdi	        90	string3.h	FUNCTION_173	CALL_6
0x4011219	          0x4889c1	                            mov rcx, rax	        90	string3.h	FUNCTION_173	CALL_6
0x401121c	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_173	CALL_6
0x401121e	    0x81c198000000	                           add ecx, 0x98	        90	string3.h	FUNCTION_173	CALL_6
0x4011224	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_173	CALL_6
0x4011227	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_173	CALL_6
0x401122a	    0x488b05000000	            mov rax, qword [0x04011231] 	     10175	syntax.c	FUNCTION_163	IF_15
0x4011231	    0x8b0d00000000	            mov ecx, dword [0x04011237] 	     10175	syntax.c	FUNCTION_163	IF_15
0x4011237	    0x898c10c40a00	      mov dword [rax + rdx + 0xac4], ecx	     10175	syntax.c	FUNCTION_163	IF_15
0x401123e	            0x89f0	                            mov eax, esi	     10176	syntax.c	FUNCTION_163	IF_15
0x4011240	          0x83c013	                           add eax, 0x13	     10176	syntax.c	FUNCTION_163	IF_15
0x4011243	        0x89442404	                mov dword [rsp + 4], eax	     10176	syntax.c	FUNCTION_163	IF_15
0x4011247	        0x8b44240c	              mov eax, dword [rsp + 0xc]	     10176	syntax.c	FUNCTION_163	IF_15
0x401124b	      0xe9cafcffff	                           jmp 0x4010f1a	     10176	syntax.c	FUNCTION_163	IF_15
0x4011250	        0x488d14c0	                  lea rdx, [rax + rax*8]	     10176	syntax.c	FUNCTION_163	IF_15
0x4011254	        0x488d0450	                  lea rax, [rax + rdx*2]	     10176	syntax.c	FUNCTION_163	IF_15
0x4011258	    0x498d94c468ff	           lea rdx, [r12 + rax*8 - 0x98]	     10176	syntax.c	FUNCTION_163	IF_15
0x4011260	      0xe904feffff	                           jmp 0x4011069	     10176	syntax.c	FUNCTION_163	IF_15
0x4011265	        0x488d0cd2	                  lea rcx, [rdx + rdx*8]	     10176	syntax.c	FUNCTION_163	IF_15
0x4011269	        0x488d144a	                  lea rdx, [rdx + rcx*2]	     10176	syntax.c	FUNCTION_163	IF_15
0x401126d	    0x4c8d8cd768ff	            lea r9, [rdi + rdx*8 - 0x98]	     10176	syntax.c	FUNCTION_163	IF_15
0x4011275	      0xe956fbffff	                           jmp 0x4010dd0	     10176	syntax.c	FUNCTION_163	IF_15
0x401127a	      0xe800000000	                          call 0x401127f	     10077	syntax.c	FUNCTION_163	FOR_2	CALL_1
0x401127f	          0x4885c0	                           test rax, rax	     10078	syntax.c	FUNCTION_163	FOR_2	IF_2
0x4011282	     0xf857cf9ffff	                           jne 0x4010c04	     10078	syntax.c	FUNCTION_163	FOR_2	IF_2
0x4011288	          0x83c301	                              add ebx, 1	     10078	syntax.c	FUNCTION_163	FOR_2	IF_2
0x401128b	      0xe95bf9ffff	                           jmp 0x4010beb	     10078	syntax.c	FUNCTION_163	FOR_2	IF_2
0x4011290	      0xe800000000	                          call 0x4011295	     10216	syntax.c	FUNCTION_163
check_keyword_id	DO,1:functions,0:IF,6:WHILE,0:CALL,7:ELSE,1:SWITCH,0:FOR,2	166
0x4001cf0	            0x4157	                                push r15	      3379	syntax.c	FUNCTION_44
0x4001cf2	            0x4156	                                push r14	      3379	syntax.c	FUNCTION_44
0x4001cf4	            0x4155	                                push r13	      3379	syntax.c	FUNCTION_44
0x4001cf6	            0x4154	                                push r12	      3379	syntax.c	FUNCTION_44
0x4001cf8	          0x4d89cd	                             mov r13, r9	      3379	syntax.c	FUNCTION_44
0x4001cfb	              0x55	                                push rbp	      3379	syntax.c	FUNCTION_44
0x4001cfc	              0x53	                                push rbx	      3379	syntax.c	FUNCTION_44
0x4001cfd	          0x4189f4	                           mov r12d, esi	      3379	syntax.c	FUNCTION_44
0x4001d00	            0x31db	                            xor ebx, ebx	      3391	syntax.c	FUNCTION_44
0x4001d02	    0x4881ec980000	                           sub rsp, 0x98	      3379	syntax.c	FUNCTION_44
0x4001d09	    0x488b8424d000	            mov rax, qword [rsp + 0xd0] 	      3379	syntax.c	FUNCTION_44
0x4001d11	      0x4889542410	             mov qword [rsp + 0x10], rdx	      3379	syntax.c	FUNCTION_44
0x4001d16	      0x48894c2418	             mov qword [rsp + 0x18], rcx	      3379	syntax.c	FUNCTION_44
0x4001d1b	      0x4c89442420	              mov qword [rsp + 0x20], r8	      3379	syntax.c	FUNCTION_44
0x4001d20	      0x4889442428	             mov qword [rsp + 0x28], rax	      3379	syntax.c	FUNCTION_44
0x4001d25	    0x64488b042528	                mov rax, qword fs:[0x28]	      3379	syntax.c	FUNCTION_44
0x4001d2e	    0x488984248800	             mov qword [rsp + 0x88], rax	      3379	syntax.c	FUNCTION_44
0x4001d36	            0x31c0	                            xor eax, eax	      3379	syntax.c	FUNCTION_44
0x4001d38	          0x4863c6	                         movsxd rax, esi	      3390	syntax.c	FUNCTION_44
0x4001d3b	        0x488d2c07	                    lea rbp, [rdi + rax]	      3390	syntax.c	FUNCTION_44
0x4001d3f	            0xeb25	                           jmp 0x4001d66	      3390	syntax.c	FUNCTION_44
0x4001d41	     0xf1f80000000	                         nop dword [rax]	      3390	syntax.c	FUNCTION_44
0x4001d48	          0x83c301	                              add ebx, 1	      3399	syntax.c	FUNCTION_44	DO_1	ELSE_1
0x4001d4b	          0x4c63f3	                         movsxd r14, ebx	      3401	syntax.c	FUNCTION_44	CALL_1
0x4001d4e	    0x488b35000000	            mov rsi, qword [0x04001d55] 	      3401	syntax.c	FUNCTION_44	CALL_1
0x4001d55	      0x4a8d7c3500	                    lea rdi, [rbp + r14]	      3401	syntax.c	FUNCTION_44	CALL_1
0x4001d5a	      0xe800000000	                          call 0x4001d5f	      3401	syntax.c	FUNCTION_44	CALL_1
0x4001d5f	            0x85c0	                           test eax, eax	      3401	syntax.c	FUNCTION_44	CALL_1
0x4001d61	          0x4189c7	                           mov r15d, eax	      3401	syntax.c	FUNCTION_44	CALL_1
0x4001d64	            0x741a	                            je 0x4001d80	      3401	syntax.c	FUNCTION_44	CALL_1
0x4001d66	    0x8b0500000000	            mov eax, dword [0x04001d6c] 	      3395	syntax.c	FUNCTION_44	DO_1	IF_1
0x4001d6c	            0x85c0	                           test eax, eax	      3395	syntax.c	FUNCTION_44	DO_1	IF_1
0x4001d6e	            0x74d8	                            je 0x4001d48	      3395	syntax.c	FUNCTION_44	DO_1	IF_1
0x4001d70	          0x4863fb	                         movsxd rdi, ebx	      3396	syntax.c	FUNCTION_44	DO_1	IF_1
0x4001d73	          0x4801ef	                            add rdi, rbp	      3396	syntax.c	FUNCTION_44	DO_1	IF_1
0x4001d76	    0xff1500000000	                 call qword [0x04001d7c]	      3396	syntax.c	FUNCTION_44	DO_1	IF_1
0x4001d7c	             0x1c3	                            add ebx, eax	      3396	syntax.c	FUNCTION_44	DO_1	IF_1
0x4001d7e	            0xebcb	                           jmp 0x4001d4b	      3396	syntax.c	FUNCTION_44	DO_1	IF_1
0x4001d80	          0x83fb50	                           cmp ebx, 0x50	      3403	syntax.c	FUNCTION_44	IF_2
0x4001d83	            0x7e33	                           jle 0x4001db8	      3403	syntax.c	FUNCTION_44	IF_2
0x4001d85	    0x488b8c248800	            mov rcx, qword [rsp + 0x88] 	      3454	syntax.c	FUNCTION_44
0x4001d8d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3454	syntax.c	FUNCTION_44
0x4001d96	          0x4489f8	                           mov eax, r15d	      3454	syntax.c	FUNCTION_44
0x4001d99	     0xf8594010000	                           jne 0x4001f33	      3454	syntax.c	FUNCTION_44
0x4001d9f	    0x4881c4980000	                           add rsp, 0x98	      3454	syntax.c	FUNCTION_44
0x4001da6	              0x5b	                                 pop rbx	      3454	syntax.c	FUNCTION_44
0x4001da7	              0x5d	                                 pop rbp	      3454	syntax.c	FUNCTION_44
0x4001da8	            0x415c	                                 pop r12	      3454	syntax.c	FUNCTION_44
0x4001daa	            0x415d	                                 pop r13	      3454	syntax.c	FUNCTION_44
0x4001dac	            0x415e	                                 pop r14	      3454	syntax.c	FUNCTION_44
0x4001dae	            0x415f	                                 pop r15	      3454	syntax.c	FUNCTION_44
0x4001db0	              0xc3	                                     ret	      3454	syntax.c	FUNCTION_44
0x4001db1	     0xf1f80000000	                         nop dword [rax]	      3454	syntax.c	FUNCTION_44
0x4001db8	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      3410	syntax.c	FUNCTION_44	CALL_2
0x4001dbd	          0x4c89f2	                            mov rdx, r14	      3410	syntax.c	FUNCTION_44	CALL_2
0x4001dc0	          0x4889ee	                            mov rsi, rbp	      3410	syntax.c	FUNCTION_44	CALL_2
0x4001dc3	    0x41be02000000	                             mov r14d, 2	      3410	syntax.c	FUNCTION_44	CALL_2
0x4001dc9	      0xe800000000	                          call 0x4001dce	      3410	syntax.c	FUNCTION_44	CALL_2
0x4001dce	    0x488b05000000	            mov rax, qword [0x04001dd5] 	      3410	syntax.c	FUNCTION_44	CALL_2
0x4001dd5	        0x418d56ff	                      lea edx, [r14 - 1]	      3410	syntax.c	FUNCTION_44	CALL_2
0x4001dd9	          0x83fa01	                              cmp edx, 1	      3419	syntax.c	FUNCTION_44	FOR_1
0x4001ddc	     0xf8456010000	                            je 0x4001f38	      3419	syntax.c	FUNCTION_44	FOR_1
0x4001de2	    0x4883b8300100	              cmp qword [rax + 0x130], 0	      3420	syntax.c	FUNCTION_44	FOR_1	IF_3
0x4001dea	     0xf84c8000000	                            je 0x4001eb8	      3420	syntax.c	FUNCTION_44	FOR_1	IF_3
0x4001df0	          0x83fa02	                              cmp edx, 2	      3422	syntax.c	FUNCTION_44	FOR_1	IF_4
0x4001df3	    0x4c8d88280100	                   lea r9, [rax + 0x128]	      3419	syntax.c	FUNCTION_44	FOR_1
0x4001dfa	     0xf8447010000	                            je 0x4001f47	      3422	syntax.c	FUNCTION_44	FOR_1	IF_4
0x4001e00	      0x488d742430	                   lea rsi, [rsp + 0x30]	      3432	syntax.c	FUNCTION_44	FOR_1	CALL_4
0x4001e05	          0x4c89cf	                             mov rdi, r9	      3432	syntax.c	FUNCTION_44	FOR_1	CALL_4
0x4001e08	      0xe800000000	                          call 0x4001e0d	      3432	syntax.c	FUNCTION_44	FOR_1	CALL_4
0x4001e0d	        0x4c8b4808	                 mov r9, qword [rax + 8]	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x4001e11	    0x4981f9000000	                               cmp r9, 0	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x4001e18	     0xf849a000000	                            je 0x4001eb8	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x4001e1e	          0x4d85c9	                             test r9, r9	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x4001e21	     0xf8491000000	                            je 0x4001eb8	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x4001e27	        0x4983e928	                            sub r9, 0x28	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2
0x4001e2b	        0x4c890c24	                     mov qword [rsp], r9	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2
0x4001e2f	     0xf8483000000	                            je 0x4001eb8	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2
0x4001e35	    0x488b05000000	            mov rax, qword [0x04001e3c] 	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2
0x4001e3c	          0x4885c0	                           test rax, rax	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2
0x4001e3f	      0x4889442408	                mov qword [rsp + 8], rax	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2
0x4001e44	            0x751a	                           jne 0x4001e60	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2
0x4001e46	      0xe987000000	                           jmp 0x4001ed2	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2
0x4001e4b	       0xf1f440000	                   nop dword [rax + rax]	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2
0x4001e50	        0x488b0424	                    mov rax, qword [rsp]	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2
0x4001e54	          0x488b00	                    mov rax, qword [rax]	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2
0x4001e57	          0x4885c0	                           test rax, rax	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2
0x4001e5a	        0x48890424	                    mov qword [rsp], rax	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2
0x4001e5e	            0x7458	                            je 0x4001eb8	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2
0x4001e60	        0x488b0424	                    mov rax, qword [rsp]	      3437	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_6
0x4001e64	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3437	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_6
0x4001e69	            0x31d2	                            xor edx, edx	      3437	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_6
0x4001e6b	        0x488d7008	                      lea rsi, [rax + 8]	      3437	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_6
0x4001e6f	      0xe85cfbffff	        call sym.in_id_list.constprop.26	      3437	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_6
0x4001e74	            0x85c0	                           test eax, eax	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4001e76	            0x74d8	                            je 0x4001e50	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4001e78	        0x488b1424	                    mov rdx, qword [rsp]	      3444	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4001e7c	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3443	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4001e81	          0x4401e3	                           add ebx, r12d	      3443	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4001e84	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      3444	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4001e89	            0x8918	                    mov dword [rax], ebx	      3443	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4001e8b	        0x48634220	         movsxd rax, dword [rdx + 0x20] 	      3444	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4001e8f	      0x440fbf7a0c	           movsx r15d, word [rdx + 0xc] 	      3449	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4001e94	          0x488901	                    mov qword [rcx], rax	      3444	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4001e97	        0x488b4218	            mov rax, qword [rdx + 0x18] 	      3445	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4001e9b	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      3445	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4001ea0	          0x488901	                    mov qword [rcx], rax	      3445	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4001ea3	          0x8b4224	            mov eax, dword [rdx + 0x24] 	      3447	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4001ea6	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      3447	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4001eab	            0x8901	                    mov dword [rcx], eax	      3447	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4001ead	      0xe9d3feffff	                           jmp 0x4001d85	      3449	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4001eb2	    0x660f1f440000	                    nop word [rax + rax]	      3449	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4001eb8	        0x4183fe03	                             cmp r14d, 3	      3417	syntax.c	FUNCTION_44	FOR_1
0x4001ebc	     0xf84c3feffff	                            je 0x4001d85	      3417	syntax.c	FUNCTION_44	FOR_1
0x4001ec2	    0x488b05000000	            mov rax, qword [0x04001ec9] 	      3417	syntax.c	FUNCTION_44	FOR_1
0x4001ec9	        0x4183c601	                             add r14d, 1	      3417	syntax.c	FUNCTION_44	FOR_1
0x4001ecd	      0xe903ffffff	                           jmp 0x4001dd5	      3417	syntax.c	FUNCTION_44	FOR_1
0x4001ed2	          0x4d85ed	                           test r13, r13	      3417	syntax.c	FUNCTION_44	FOR_1
0x4001ed5	            0x7519	                           jne 0x4001ef0	      3417	syntax.c	FUNCTION_44	FOR_1
0x4001ed7	            0xeb4b	                           jmp 0x4001f24	      3417	syntax.c	FUNCTION_44	FOR_1
0x4001ed9	     0xf1f80000000	                         nop dword [rax]	      3417	syntax.c	FUNCTION_44	FOR_1
0x4001ee0	        0x488b0424	                    mov rax, qword [rsp]	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2
0x4001ee4	          0x488b00	                    mov rax, qword [rax]	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2
0x4001ee7	          0x4885c0	                           test rax, rax	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2
0x4001eea	        0x48890424	                    mov qword [rsp], rax	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2
0x4001eee	            0x74c8	                            je 0x4001eb8	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2
0x4001ef0	        0x488b0424	                    mov rax, qword [rsp]	      3440	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_7
0x4001ef4	        0x498b7578	            mov rsi, qword [r13 + 0x78] 	      3440	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_7
0x4001ef8	          0x4c89ef	                            mov rdi, r13	      3440	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_7
0x4001efb	          0x8b4820	            mov ecx, dword [rax + 0x20] 	      3440	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_7
0x4001efe	        0x488d5008	                      lea rdx, [rax + 8]	      3440	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_7
0x4001f02	          0x83e101	                              and ecx, 1	      3440	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_7
0x4001f05	      0xe816fcffff	                     call sym.in_id_list	      3440	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_7
0x4001f0a	            0x85c0	                           test eax, eax	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4001f0c	            0x74d2	                            je 0x4001ee0	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4001f0e	      0xe965ffffff	                           jmp 0x4001e78	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4001f13	       0xf1f440000	                   nop dword [rax + rax]	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4001f18	          0x488b00	                    mov rax, qword [rax]	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2
0x4001f1b	          0x4885c0	                           test rax, rax	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2
0x4001f1e	        0x48890424	                    mov qword [rsp], rax	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2
0x4001f22	            0x7494	                            je 0x4001eb8	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2
0x4001f24	        0x488b0424	                    mov rax, qword [rsp]	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4001f28	        0xf6402001	               test byte [rax + 0x20], 1	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4001f2c	            0x75ea	                           jne 0x4001f18	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4001f2e	      0xe945ffffff	                           jmp 0x4001e78	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x4001f33	      0xe800000000	                          call 0x4001f38	      3454	syntax.c	FUNCTION_44
0x4001f38	      0x4883780800	                  cmp qword [rax + 8], 0	      3420	syntax.c	FUNCTION_44	FOR_1	IF_3
0x4001f3d	          0x4989c1	                             mov r9, rax	      3419	syntax.c	FUNCTION_44	FOR_1
0x4001f40	            0x7487	                            je 0x4001ec9	      3420	syntax.c	FUNCTION_44	FOR_1	IF_3
0x4001f42	      0xe9b9feffff	                           jmp 0x4001e00	      3420	syntax.c	FUNCTION_44	FOR_1	IF_3
0x4001f47	      0x488d542430	                   lea rdx, [rsp + 0x30]	      3423	syntax.c	FUNCTION_44	FOR_1	CALL_3
0x4001f4c	      0xb951000000	                           mov ecx, 0x51	      3423	syntax.c	FUNCTION_44	FOR_1	CALL_3
0x4001f51	            0x89de	                            mov esi, ebx	      3423	syntax.c	FUNCTION_44	FOR_1	CALL_3
0x4001f53	          0x4889ef	                            mov rdi, rbp	      3423	syntax.c	FUNCTION_44	FOR_1	CALL_3
0x4001f56	        0x4c890c24	                     mov qword [rsp], r9	      3423	syntax.c	FUNCTION_44	FOR_1	CALL_3
0x4001f5a	      0xe800000000	                          call 0x4001f5f	      3423	syntax.c	FUNCTION_44	FOR_1	CALL_3
0x4001f5f	        0x4c8b0c24	                     mov r9, qword [rsp]	      3432	syntax.c	FUNCTION_44	FOR_1	CALL_4
0x4001f63	      0x488d742430	                   lea rsi, [rsp + 0x30]	      3432	syntax.c	FUNCTION_44	FOR_1	CALL_4
0x4001f68	          0x4c89cf	                             mov rdi, r9	      3432	syntax.c	FUNCTION_44	FOR_1	CALL_4
0x4001f6b	      0xe800000000	                          call 0x4001f70	      3432	syntax.c	FUNCTION_44	FOR_1	CALL_4
0x4001f70	        0x4c8b4808	                 mov r9, qword [rax + 8]	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x4001f74	    0x4981f9000000	                               cmp r9, 0	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x4001f7b	     0xf8404feffff	                            je 0x4001d85	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x4001f81	          0x4d85c9	                             test r9, r9	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x4001f84	     0xf859dfeffff	                           jne 0x4001e27	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x4001f8a	      0xe9f6fdffff	                           jmp 0x4001d85	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
syn_list_one	DO,0:functions,0:IF,12:WHILE,2:CALL,25:ELSE,3:SWITCH,0:FOR,1	292
0x4005b10	            0x4157	                                push r15	      4076	syntax.c	FUNCTION_66
0x4005b12	            0x4156	                                push r14	      4076	syntax.c	FUNCTION_66
0x4005b14	          0x4189f6	                           mov r14d, esi	      4076	syntax.c	FUNCTION_66
0x4005b17	            0x4155	                                push r13	      4076	syntax.c	FUNCTION_66
0x4005b19	            0x4154	                                push r12	      4076	syntax.c	FUNCTION_66
0x4005b1b	          0x4189fc	                           mov r12d, edi	      4076	syntax.c	FUNCTION_66
0x4005b1e	              0x55	                                push rbp	      4076	syntax.c	FUNCTION_66
0x4005b1f	              0x53	                                push rbx	      4076	syntax.c	FUNCTION_66
0x4005b20	            0x31ff	                            xor edi, edi	      4076	syntax.c	FUNCTION_66
0x4005b22	        0x4883ec18	                           sub rsp, 0x18	      4076	syntax.c	FUNCTION_66
0x4005b26	            0x85f6	                           test esi, esi	      4108	syntax.c	FUNCTION_66	IF_1
0x4005b28	    0x448b2d000000	           mov r13d, dword [0x04005b2f] 	      4105	syntax.c	FUNCTION_66	CALL_1
0x4005b2f	        0x8954240c	              mov dword [rsp + 0xc], edx	      4076	syntax.c	FUNCTION_66
0x4005b33	     0xf8467020000	                            je 0x4005da0	      4108	syntax.c	FUNCTION_66	IF_1
0x4005b39	    0x488b05000000	            mov rax, qword [0x04005b40] 	      4116	syntax.c	FUNCTION_66	FOR_1
0x4005b40	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      4116	syntax.c	FUNCTION_66	FOR_1
0x4005b44	    0x8b8160020000	           mov eax, dword [rcx + 0x260] 	      4116	syntax.c	FUNCTION_66	FOR_1
0x4005b4a	            0x85c0	                           test eax, eax	      4116	syntax.c	FUNCTION_66	FOR_1
0x4005b4c	     0xf8e0e020000	                           jle 0x4005d60	      4116	syntax.c	FUNCTION_66	FOR_1
0x4005b52	    0x8b1500000000	            mov edx, dword [0x04005b58] 	      4116	syntax.c	FUNCTION_66	FOR_1
0x4005b58	            0x85d2	                           test edx, edx	      4116	syntax.c	FUNCTION_66	FOR_1
0x4005b5a	     0xf8500020000	                           jne 0x4005d60	      4116	syntax.c	FUNCTION_66	FOR_1
0x4005b60	            0x31db	                            xor ebx, ebx	      4116	syntax.c	FUNCTION_66	FOR_1
0x4005b62	            0xeb1d	                           jmp 0x4005b81	      4116	syntax.c	FUNCTION_66	FOR_1
0x4005b64	         0xf1f4000	                         nop dword [rax]	      4116	syntax.c	FUNCTION_66	FOR_1
0x4005b68	          0x83c301	                              add ebx, 1	      4116	syntax.c	FUNCTION_66	FOR_1
0x4005b6b	            0x39c3	                            cmp ebx, eax	      4116	syntax.c	FUNCTION_66	FOR_1
0x4005b6d	     0xf8ded010000	                           jge 0x4005d60	      4116	syntax.c	FUNCTION_66	FOR_1
0x4005b73	    0x8b1500000000	            mov edx, dword [0x04005b79] 	      4116	syntax.c	FUNCTION_66	FOR_1
0x4005b79	            0x85d2	                           test edx, edx	      4116	syntax.c	FUNCTION_66	FOR_1
0x4005b7b	     0xf85df010000	                           jne 0x4005d60	      4116	syntax.c	FUNCTION_66	FOR_1
0x4005b81	          0x4863d3	                         movsxd rdx, ebx	      4118	syntax.c	FUNCTION_66	FOR_1
0x4005b84	        0x488d2c92	                  lea rbp, [rdx + rdx*4]	      4118	syntax.c	FUNCTION_66	FOR_1
0x4005b88	        0x48c1e505	                              shl rbp, 5	      4118	syntax.c	FUNCTION_66	FOR_1
0x4005b8c	          0x4989ef	                            mov r15, rbp	      4118	syntax.c	FUNCTION_66	FOR_1
0x4005b8f	    0x4c03b9700200	            add r15, qword [rcx + 0x270]	      4118	syntax.c	FUNCTION_66	FOR_1
0x4005b96	      0x410fbf5754	           movsx edx, word [r15 + 0x54] 	      4119	syntax.c	FUNCTION_66	FOR_1	IF_2
0x4005b9b	          0x4139d4	                           cmp r12d, edx	      4119	syntax.c	FUNCTION_66	FOR_1	IF_2
0x4005b9e	            0x75c8	                           jne 0x4005b68	      4119	syntax.c	FUNCTION_66	FOR_1	IF_2
0x4005ba0	      0x410fbe5701	               movsx edx, byte [r15 + 1]	      4119	syntax.c	FUNCTION_66	FOR_1	IF_2
0x4005ba5	          0x4139d6	                           cmp r14d, edx	      4119	syntax.c	FUNCTION_66	FOR_1	IF_2
0x4005ba8	            0x75be	                           jne 0x4005b68	      4119	syntax.c	FUNCTION_66	FOR_1	IF_2
0x4005baa	          0x4489e2	                           mov edx, r12d	      4122	syntax.c	FUNCTION_66	FOR_1	CALL_4
0x4005bad	      0xbee7030000	                          mov esi, 0x3e7	      4122	syntax.c	FUNCTION_66	FOR_1	CALL_4
0x4005bb2	      0xe879faffff	                call sym.syn_list_header	      4122	syntax.c	FUNCTION_66	FOR_1	CALL_4
0x4005bb7	        0x410fb607	                   movzx eax, byte [r15]	      4125	syntax.c	FUNCTION_66	FOR_1	IF_3
0x4005bbb	    0xc70500000000	               mov dword [0x04005bc5], 0	      4124	syntax.c	FUNCTION_66	FOR_1
0x4005bc5	            0x3c01	                               cmp al, 1	      4125	syntax.c	FUNCTION_66	FOR_1	IF_3
0x4005bc7	     0xf8473030000	                            je 0x4005f40	      4125	syntax.c	FUNCTION_66	FOR_1	IF_3
0x4005bcd	            0x3c02	                               cmp al, 2	      4130	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4
0x4005bcf	     0xf847d020000	                            je 0x4005e52	      4130	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4
0x4005bd5	    0x8b0500000000	            mov eax, dword [0x04005bdb] 	      4187	syntax.c	FUNCTION_67	FOR_1
0x4005bdb	        0x418b5724	            mov edx, dword [r15 + 0x24] 	      4142	syntax.c	FUNCTION_66	FOR_1	CALL_11
0x4005bdf	      0xbd00000000	                              mov ebp, 0	      4187	syntax.c	FUNCTION_67	FOR_1
0x4005be4	            0x85c0	                           test eax, eax	      4187	syntax.c	FUNCTION_67	FOR_1
0x4005be6	            0x7513	                           jne 0x4005bfb	      4187	syntax.c	FUNCTION_67	FOR_1
0x4005be8	            0xeb3e	                           jmp 0x4005c28	      4187	syntax.c	FUNCTION_67	FOR_1
0x4005bea	    0x660f1f440000	                    nop word [rax + rax]	      4187	syntax.c	FUNCTION_67	FOR_1
0x4005bf0	        0x4883c510	                           add rbp, 0x10	      4187	syntax.c	FUNCTION_67	FOR_1
0x4005bf4	          0x8b4500	                    mov eax, dword [rbp]	      4187	syntax.c	FUNCTION_67	FOR_1
0x4005bf7	            0x85c0	                           test eax, eax	      4187	syntax.c	FUNCTION_67	FOR_1
0x4005bf9	            0x742d	                            je 0x4005c28	      4187	syntax.c	FUNCTION_67	FOR_1
0x4005bfb	            0x85c2	                           test edx, eax	      4188	syntax.c	FUNCTION_67	FOR_1	IF_1
0x4005bfd	            0x74f1	                            je 0x4005bf0	      4188	syntax.c	FUNCTION_67	FOR_1	IF_1
0x4005bff	        0x488b7d08	                mov rdi, qword [rbp + 8]	      4190	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_1
0x4005c03	          0x4489ee	                           mov esi, r13d	      4190	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_1
0x4005c06	        0x89542408	                mov dword [rsp + 8], edx	      4190	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_1
0x4005c0a	        0x4883c510	                           add rbp, 0x10	      4187	syntax.c	FUNCTION_67	FOR_1
0x4005c0e	      0xe800000000	                          call 0x4005c13	      4190	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_1
0x4005c13	      0xbf20000000	                           mov edi, 0x20	      4191	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_2
0x4005c18	      0xe800000000	                          call 0x4005c1d	      4191	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_2
0x4005c1d	          0x8b4500	                    mov eax, dword [rbp]	      4187	syntax.c	FUNCTION_67	FOR_1
0x4005c20	        0x8b542408	                mov edx, dword [rsp + 8]	      4191	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_2
0x4005c24	            0x85c0	                           test eax, eax	      4187	syntax.c	FUNCTION_67	FOR_1
0x4005c26	            0x75d3	                           jne 0x4005bfb	      4187	syntax.c	FUNCTION_67	FOR_1
0x4005c28	        0x498b7740	            mov rsi, qword [r15 + 0x40] 	      4144	syntax.c	FUNCTION_66	FOR_1	IF_6
0x4005c2c	          0x4885f6	                           test rsi, rsi	      4144	syntax.c	FUNCTION_66	FOR_1	IF_6
0x4005c2f	            0x740d	                            je 0x4005c3e	      4144	syntax.c	FUNCTION_66	FOR_1	IF_6
0x4005c31	          0x4489ea	                           mov edx, r13d	      4145	syntax.c	FUNCTION_66	FOR_1	CALL_12
0x4005c34	      0xbf00000000	                              mov edi, 0	      4145	syntax.c	FUNCTION_66	FOR_1	CALL_12
0x4005c39	      0xe8a2b4ffff	                    call sym.put_id_list	      4145	syntax.c	FUNCTION_66	FOR_1	CALL_12
0x4005c3e	        0x498b7758	            mov rsi, qword [r15 + 0x58] 	      4147	syntax.c	FUNCTION_66	FOR_1	IF_7
0x4005c42	          0x4885f6	                           test rsi, rsi	      4147	syntax.c	FUNCTION_66	FOR_1	IF_7
0x4005c45	            0x740d	                            je 0x4005c54	      4147	syntax.c	FUNCTION_66	FOR_1	IF_7
0x4005c47	          0x4489ea	                           mov edx, r13d	      4148	syntax.c	FUNCTION_66	FOR_1	IF_7	CALL_13
0x4005c4a	      0xbf00000000	                              mov edi, 0	      4148	syntax.c	FUNCTION_66	FOR_1	IF_7	CALL_13
0x4005c4f	      0xe88cb4ffff	                    call sym.put_id_list	      4148	syntax.c	FUNCTION_66	FOR_1	IF_7	CALL_13
0x4005c54	        0x498b7748	            mov rsi, qword [r15 + 0x48] 	      4151	syntax.c	FUNCTION_66	FOR_1	IF_8
0x4005c58	          0x4885f6	                           test rsi, rsi	      4151	syntax.c	FUNCTION_66	FOR_1	IF_8
0x4005c5b	            0x7463	                            je 0x4005cc0	      4151	syntax.c	FUNCTION_66	FOR_1	IF_8
0x4005c5d	          0x4489ea	                           mov edx, r13d	      4153	syntax.c	FUNCTION_66	FOR_1	IF_8	CALL_14
0x4005c60	      0xbf00000000	                              mov edi, 0	      4153	syntax.c	FUNCTION_66	FOR_1	IF_8	CALL_14
0x4005c65	      0xe876b4ffff	                    call sym.put_id_list	      4153	syntax.c	FUNCTION_66	FOR_1	IF_8	CALL_14
0x4005c6a	    0x8b0500000000	            mov eax, dword [0x04005c70] 	      4187	syntax.c	FUNCTION_67	FOR_1
0x4005c70	        0x418b5724	            mov edx, dword [r15 + 0x24] 	      4154	syntax.c	FUNCTION_66	FOR_1	IF_8	CALL_15
0x4005c74	            0x85c0	                           test eax, eax	      4187	syntax.c	FUNCTION_67	FOR_1
0x4005c76	            0x744c	                            je 0x4005cc4	      4187	syntax.c	FUNCTION_67	FOR_1
0x4005c78	      0xbd00000000	                              mov ebp, 0	      4187	syntax.c	FUNCTION_67	FOR_1
0x4005c7d	            0xeb0c	                           jmp 0x4005c8b	      4187	syntax.c	FUNCTION_67	FOR_1
0x4005c7f	              0x90	                                     nop	      4187	syntax.c	FUNCTION_67	FOR_1
0x4005c80	        0x4883c510	                           add rbp, 0x10	      4187	syntax.c	FUNCTION_67	FOR_1
0x4005c84	          0x8b4500	                    mov eax, dword [rbp]	      4187	syntax.c	FUNCTION_67	FOR_1
0x4005c87	            0x85c0	                           test eax, eax	      4187	syntax.c	FUNCTION_67	FOR_1
0x4005c89	            0x7435	                            je 0x4005cc0	      4187	syntax.c	FUNCTION_67	FOR_1
0x4005c8b	            0x85c2	                           test edx, eax	      4188	syntax.c	FUNCTION_67	FOR_1	IF_1
0x4005c8d	            0x74f1	                            je 0x4005c80	      4188	syntax.c	FUNCTION_67	FOR_1	IF_1
0x4005c8f	        0x488b7d08	                mov rdi, qword [rbp + 8]	      4190	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_1
0x4005c93	          0x4489ee	                           mov esi, r13d	      4190	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_1
0x4005c96	        0x89542408	                mov dword [rsp + 8], edx	      4190	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_1
0x4005c9a	        0x4883c510	                           add rbp, 0x10	      4187	syntax.c	FUNCTION_67	FOR_1
0x4005c9e	      0xe800000000	                          call 0x4005ca3	      4190	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_1
0x4005ca3	      0xbf20000000	                           mov edi, 0x20	      4191	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_2
0x4005ca8	      0xe800000000	                          call 0x4005cad	      4191	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_2
0x4005cad	          0x8b4500	                    mov eax, dword [rbp]	      4187	syntax.c	FUNCTION_67	FOR_1
0x4005cb0	        0x8b542408	                mov edx, dword [rsp + 8]	      4191	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_2
0x4005cb4	            0x85c0	                           test eax, eax	      4187	syntax.c	FUNCTION_67	FOR_1
0x4005cb6	            0x75d3	                           jne 0x4005c8b	      4187	syntax.c	FUNCTION_67	FOR_1
0x4005cb8	     0xf1f84000000	                   nop dword [rax + rax]	      4187	syntax.c	FUNCTION_67	FOR_1
0x4005cc0	        0x418b5724	            mov edx, dword [r15 + 0x24] 	      4187	syntax.c	FUNCTION_67	FOR_1
0x4005cc4	          0xf6c230	                           test dl, 0x30	      4156	syntax.c	FUNCTION_66	FOR_1	IF_9
0x4005cc7	            0x7474	                            je 0x4005d3d	      4156	syntax.c	FUNCTION_66	FOR_1	IF_9
0x4005cc9	          0x83e210	                           and edx, 0x10	      4158	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_10
0x4005ccc	          0x4489ee	                           mov esi, r13d	      4159	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_16
0x4005ccf	     0xf846e010000	                            je 0x4005e43	      4158	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_10
0x4005cd5	      0xbf00000000	                              mov edi, 0	      4159	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_16
0x4005cda	      0xe800000000	                          call 0x4005cdf	      4159	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_16
0x4005cdf	      0xbf20000000	                           mov edi, 0x20	      4162	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_18
0x4005ce4	      0xe800000000	                          call 0x4005ce9	      4162	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_18
0x4005ce9	        0x49634730	         movsxd rax, dword [r15 + 0x30] 	      4163	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11
0x4005ced	            0x85c0	                           test eax, eax	      4163	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11
0x4005cef	     0xf886f020000	                            js 0x4005f64	      4163	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11
0x4005cf5	    0x488b15000000	            mov rdx, qword [0x04005cfc] 	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_19
0x4005cfc	        0x488d0480	                  lea rax, [rax + rax*4]	      4165	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11
0x4005d00	        0x48c1e005	                              shl rax, 5	      4165	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11
0x4005d04	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_19
0x4005d08	    0x480382700200	            add rax, qword [rdx + 0x270]	      4165	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11
0x4005d0f	      0x480fbf4054	           movsx rax, word [rax + 0x54] 	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_19
0x4005d14	        0x488d14c0	                  lea rdx, [rax + rax*8]	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_19
0x4005d18	        0x488d0450	                  lea rax, [rax + rdx*2]	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_19
0x4005d1c	    0x488b15000000	            mov rdx, qword [0x04005d23] 	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_19
0x4005d23	        0x488d04c2	                  lea rax, [rdx + rax*8]	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_19
0x4005d27	    0x488bb868ffff	             mov rdi, qword [rax - 0x98]	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_19
0x4005d2e	      0xe800000000	                          call 0x4005d33	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_19
0x4005d33	      0xbf20000000	                           mov edi, 0x20	      4168	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_21
0x4005d38	      0xe800000000	                          call 0x4005d3d	      4168	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_21
0x4005d3d	    0x488b05000000	            mov rax, qword [0x04005d44] 	      4168	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_21
0x4005d44	          0x83c301	                              add ebx, 1	      4116	syntax.c	FUNCTION_66	FOR_1
0x4005d47	      0xbf01000000	                              mov edi, 1	      4123	syntax.c	FUNCTION_66	FOR_1
0x4005d4c	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      4123	syntax.c	FUNCTION_66	FOR_1
0x4005d50	    0x8b8160020000	           mov eax, dword [rcx + 0x260] 	      4123	syntax.c	FUNCTION_66	FOR_1
0x4005d56	            0x39c3	                            cmp ebx, eax	      4116	syntax.c	FUNCTION_66	FOR_1
0x4005d58	     0xf8c15feffff	                            jl 0x4005b73	      4116	syntax.c	FUNCTION_66	FOR_1
0x4005d5e	            0x6690	                                     nop	      4116	syntax.c	FUNCTION_66	FOR_1
0x4005d60	          0x4963c4	                        movsxd rax, r12d	      4173	syntax.c	FUNCTION_66	IF_12
0x4005d63	        0x488d14c0	                  lea rdx, [rax + rax*8]	      4173	syntax.c	FUNCTION_66	IF_12
0x4005d67	        0x488d1c50	                  lea rbx, [rax + rdx*2]	      4173	syntax.c	FUNCTION_66	IF_12
0x4005d6b	    0x488b05000000	            mov rax, qword [0x04005d72] 	      4173	syntax.c	FUNCTION_66	IF_12
0x4005d72	        0x48c1e303	                              shl rbx, 3	      4173	syntax.c	FUNCTION_66	IF_12
0x4005d76	        0x8b4418f0	       mov eax, dword [rax + rbx - 0x10]	      4173	syntax.c	FUNCTION_66	IF_12
0x4005d7a	            0x85c0	                           test eax, eax	      4173	syntax.c	FUNCTION_66	IF_12
0x4005d7c	            0x7412	                            je 0x4005d90	      4173	syntax.c	FUNCTION_66	IF_12
0x4005d7e	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      4173	syntax.c	FUNCTION_66	IF_12
0x4005d82	             0x9f8	                             or eax, edi	      4173	syntax.c	FUNCTION_66	IF_12
0x4005d84	            0x740a	                            je 0x4005d90	      4173	syntax.c	FUNCTION_66	IF_12
0x4005d86	    0x8b0500000000	            mov eax, dword [0x04005d8c] 	      4173	syntax.c	FUNCTION_66	IF_12
0x4005d8c	            0x85c0	                           test eax, eax	      4173	syntax.c	FUNCTION_66	IF_12
0x4005d8e	            0x7460	                            je 0x4005df0	      4173	syntax.c	FUNCTION_66	IF_12
0x4005d90	        0x4883c418	                           add rsp, 0x18	      4180	syntax.c	FUNCTION_66
0x4005d94	              0x5b	                                 pop rbx	      4180	syntax.c	FUNCTION_66
0x4005d95	              0x5d	                                 pop rbp	      4180	syntax.c	FUNCTION_66
0x4005d96	            0x415c	                                 pop r12	      4180	syntax.c	FUNCTION_66
0x4005d98	            0x415d	                                 pop r13	      4180	syntax.c	FUNCTION_66
0x4005d9a	            0x415e	                                 pop r14	      4180	syntax.c	FUNCTION_66
0x4005d9c	            0x415f	                                 pop r15	      4180	syntax.c	FUNCTION_66
0x4005d9e	              0xc3	                                     ret	      4180	syntax.c	FUNCTION_66
0x4005d9f	              0x90	                                     nop	      4180	syntax.c	FUNCTION_66
0x4005da0	    0x488b05000000	            mov rax, qword [0x04005da7] 	      4110	syntax.c	FUNCTION_66	IF_1	CALL_2
0x4005da7	          0x4589e8	                           mov r8d, r13d	      4110	syntax.c	FUNCTION_66	IF_1	CALL_2
0x4005daa	            0x31c9	                            xor ecx, ecx	      4110	syntax.c	FUNCTION_66	IF_1	CALL_2
0x4005dac	          0x4489e7	                           mov edi, r12d	      4110	syntax.c	FUNCTION_66	IF_1	CALL_2
0x4005daf	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4110	syntax.c	FUNCTION_66	IF_1	CALL_2
0x4005db3	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      4110	syntax.c	FUNCTION_66	IF_1	CALL_2
0x4005db7	        0x488b7008	                mov rsi, qword [rax + 8]	      4110	syntax.c	FUNCTION_66	IF_1	CALL_2
0x4005dbb	      0xe870faffff	      call sym.syn_list_keywords.isra.17	      4110	syntax.c	FUNCTION_66	IF_1	CALL_2
0x4005dc0	    0x488b15000000	            mov rdx, qword [0x04005dc7] 	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x4005dc7	          0x4489e7	                           mov edi, r12d	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x4005dca	          0x4589e8	                           mov r8d, r13d	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x4005dcd	            0x89c1	                            mov ecx, eax	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x4005dcf	        0x488b7210	            mov rsi, qword [rdx + 0x10] 	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x4005dd3	    0x488b96480100	           mov rdx, qword [rsi + 0x148] 	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x4005dda	    0x488bb6300100	           mov rsi, qword [rsi + 0x130] 	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x4005de1	      0xe84afaffff	      call sym.syn_list_keywords.isra.17	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x4005de6	            0x89c7	                            mov edi, eax	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x4005de8	      0xe94cfdffff	                           jmp 0x4005b39	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x4005ded	           0xf1f00	                         nop dword [rax]	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x4005df0	          0x4489e2	                           mov edx, r12d	      4175	syntax.c	FUNCTION_66	IF_12	CALL_22
0x4005df3	      0xbee7030000	                          mov esi, 0x3e7	      4175	syntax.c	FUNCTION_66	IF_12	CALL_22
0x4005df8	      0xe833f8ffff	                call sym.syn_list_header	      4175	syntax.c	FUNCTION_66	IF_12	CALL_22
0x4005dfd	          0x4489ee	                           mov esi, r13d	      4176	syntax.c	FUNCTION_66	IF_12	CALL_23
0x4005e00	      0xbf00000000	                              mov edi, 0	      4176	syntax.c	FUNCTION_66	IF_12	CALL_23
0x4005e05	      0xe800000000	                          call 0x4005e0a	      4176	syntax.c	FUNCTION_66	IF_12	CALL_23
0x4005e0a	      0xbf20000000	                           mov edi, 0x20	      4177	syntax.c	FUNCTION_66	IF_12	CALL_24
0x4005e0f	      0xe800000000	                          call 0x4005e14	      4177	syntax.c	FUNCTION_66	IF_12	CALL_24
0x4005e14	    0x488b15000000	            mov rdx, qword [0x04005e1b] 	      4178	syntax.c	FUNCTION_66	IF_12	CALL_25
0x4005e1b	      0x4863441af0	    movsxd rax, dword [rdx + rbx - 0x10]	      4178	syntax.c	FUNCTION_66	IF_12	CALL_25
0x4005e20	        0x488d0cc0	                  lea rcx, [rax + rax*8]	      4178	syntax.c	FUNCTION_66	IF_12	CALL_25
0x4005e24	        0x488d0448	                  lea rax, [rax + rcx*2]	      4178	syntax.c	FUNCTION_66	IF_12	CALL_25
0x4005e28	    0x488bbcc268ff	     mov rdi, qword [rdx + rax*8 - 0x98]	      4178	syntax.c	FUNCTION_66	IF_12	CALL_25
0x4005e30	        0x4883c418	                           add rsp, 0x18	      4180	syntax.c	FUNCTION_66
0x4005e34	              0x5b	                                 pop rbx	      4180	syntax.c	FUNCTION_66
0x4005e35	              0x5d	                                 pop rbp	      4180	syntax.c	FUNCTION_66
0x4005e36	            0x415c	                                 pop r12	      4180	syntax.c	FUNCTION_66
0x4005e38	            0x415d	                                 pop r13	      4180	syntax.c	FUNCTION_66
0x4005e3a	            0x415e	                                 pop r14	      4180	syntax.c	FUNCTION_66
0x4005e3c	            0x415f	                                 pop r15	      4180	syntax.c	FUNCTION_66
0x4005e3e	      0xe900000000	                           jmp 0x4005e43	      4178	syntax.c	FUNCTION_66	IF_12	CALL_25
0x4005e43	      0xbf00000000	                              mov edi, 0	      4161	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_17
0x4005e48	      0xe800000000	                          call 0x4005e4d	      4161	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_17
0x4005e4d	      0xe98dfeffff	                           jmp 0x4005cdf	      4161	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_17
0x4005e52	    0x488b05000000	            mov rax, qword [0x04005e59] 	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x4005e59	          0x4889ea	                            mov rdx, rbp	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x4005e5c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x4005e60	    0x480390700200	            add rdx, qword [rax + 0x270]	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x4005e67	           0xfb60a	                   movzx ecx, byte [rdx]	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x4005e6a	          0x80f902	                               cmp cl, 2	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x4005e6d	            0x754a	                           jne 0x4005eb9	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x4005e6f	    0x4881c5a00000	                           add rbp, 0xa0	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x4005e76	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x4005e80	          0x4489e9	                           mov ecx, r13d	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_7
0x4005e83	      0xbe3d000000	                           mov esi, 0x3d	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_7
0x4005e88	      0xbf00000000	                              mov edi, 0	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_7
0x4005e8d	      0xe8aeb3ffff	                    call sym.put_pattern	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_7
0x4005e92	    0x488b05000000	            mov rax, qword [0x04005e99] 	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x4005e99	          0x4889ea	                            mov rdx, rbp	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x4005e9c	          0x83c301	                              add ebx, 1	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_7
0x4005e9f	    0x4881c5a00000	                           add rbp, 0xa0	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_7
0x4005ea6	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x4005eaa	    0x480390700200	            add rdx, qword [rax + 0x270]	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x4005eb1	           0xfb60a	                   movzx ecx, byte [rdx]	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x4005eb4	          0x80f902	                               cmp cl, 2	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x4005eb7	            0x74c7	                            je 0x4005e80	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1
0x4005eb9	          0x80f904	                               cmp cl, 4	      4134	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	IF_5
0x4005ebc	     0xf84b1000000	                            je 0x4005f73	      4134	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	IF_5
0x4005ec2	    0x3b9860020000	           cmp ebx, dword [rax + 0x260] 	      4136	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x4005ec8	            0x7d64	                           jge 0x4005f2e	      4136	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x4005eca	          0x4863d3	                         movsxd rdx, ebx	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x4005ecd	        0x488d2c92	                  lea rbp, [rdx + rdx*4]	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x4005ed1	        0x48c1e505	                              shl rbp, 5	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x4005ed5	          0x4889ea	                            mov rdx, rbp	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x4005ed8	    0x480390700200	            add rdx, qword [rax + 0x270]	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x4005edf	          0x803a03	                       cmp byte [rdx], 3	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x4005ee2	            0x754a	                           jne 0x4005f2e	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x4005ee4	    0x4881c5a00000	                           add rbp, 0xa0	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x4005eeb	            0xeb19	                           jmp 0x4005f06	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x4005eed	           0xf1f00	                         nop dword [rax]	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x4005ef0	          0x4889ea	                            mov rdx, rbp	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x4005ef3	    0x480390700200	            add rdx, qword [rax + 0x270]	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x4005efa	    0x4881c5a00000	                           add rbp, 0xa0	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x4005f01	          0x803a03	                       cmp byte [rdx], 3	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x4005f04	            0x7528	                           jne 0x4005f2e	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x4005f06	          0x4489e9	                           mov ecx, r13d	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_9
0x4005f09	      0xbe3d000000	                           mov esi, 0x3d	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_9
0x4005f0e	      0xbf00000000	                              mov edi, 0	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_9
0x4005f13	      0xe828b3ffff	                    call sym.put_pattern	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_9
0x4005f18	    0x488b05000000	            mov rax, qword [0x04005f1f] 	      4136	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x4005f1f	          0x83c301	                              add ebx, 1	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_9
0x4005f22	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4136	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x4005f26	    0x399860020000	           cmp dword [rax + 0x260], ebx 	      4136	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x4005f2c	            0x7fc2	                            jg 0x4005ef0	      4136	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x4005f2e	      0xbf20000000	                           mov edi, 0x20	      4140	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_10
0x4005f33	          0x83eb01	                              sub ebx, 1	      4139	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4
0x4005f36	      0xe800000000	                          call 0x4005f3b	      4140	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_10
0x4005f3b	      0xe995fcffff	                           jmp 0x4005bd5	      4140	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_10
0x4005f40	          0x4489e9	                           mov ecx, r13d	      4127	syntax.c	FUNCTION_66	FOR_1	IF_3	CALL_5
0x4005f43	          0x4c89fa	                            mov rdx, r15	      4127	syntax.c	FUNCTION_66	FOR_1	IF_3	CALL_5
0x4005f46	      0xbe20000000	                           mov esi, 0x20	      4127	syntax.c	FUNCTION_66	FOR_1	IF_3	CALL_5
0x4005f4b	      0xbf00000000	                              mov edi, 0	      4127	syntax.c	FUNCTION_66	FOR_1	IF_3	CALL_5
0x4005f50	      0xe8ebb2ffff	                    call sym.put_pattern	      4127	syntax.c	FUNCTION_66	FOR_1	IF_3	CALL_5
0x4005f55	      0xbf20000000	                           mov edi, 0x20	      4128	syntax.c	FUNCTION_66	FOR_1	IF_3	CALL_6
0x4005f5a	      0xe800000000	                          call 0x4005f5f	      4128	syntax.c	FUNCTION_66	FOR_1	IF_3	CALL_6
0x4005f5f	      0xe971fcffff	                           jmp 0x4005bd5	      4128	syntax.c	FUNCTION_66	FOR_1	IF_3	CALL_6
0x4005f64	      0xbf00000000	                              mov edi, 0	      4167	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_20
0x4005f69	      0xe800000000	                          call 0x4005f6e	      4167	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_20
0x4005f6e	      0xe9c0fdffff	                           jmp 0x4005d33	      4167	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_20
0x4005f73	          0x4489e9	                           mov ecx, r13d	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_8
0x4005f76	      0xbe3d000000	                           mov esi, 0x3d	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_8
0x4005f7b	      0xbf00000000	                              mov edi, 0	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_8
0x4005f80	      0xe8bbb2ffff	                    call sym.put_pattern	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_8
0x4005f85	    0x488b05000000	            mov rax, qword [0x04005f8c] 	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_8
0x4005f8c	          0x83c301	                              add ebx, 1	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_8
0x4005f8f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_8
0x4005f93	      0xe92affffff	                           jmp 0x4005ec2	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_8
ex_syntax	DO,0:functions,0:IF,5:WHILE,0:CALL,7:ELSE,0:SWITCH,0:FOR,2	79
0x400af40	            0x4156	                                push r14	      6360	syntax.c	FUNCTION_95
0x400af42	            0x4155	                                push r13	      6360	syntax.c	FUNCTION_95
0x400af44	            0x4154	                                push r12	      6360	syntax.c	FUNCTION_95
0x400af46	          0x4989fc	                            mov r12, rdi	      6360	syntax.c	FUNCTION_95
0x400af49	              0x55	                                push rbp	      6360	syntax.c	FUNCTION_95
0x400af4a	      0x498b442418	            mov rax, qword [r12 + 0x18] 	      6366	syntax.c	FUNCTION_95
0x400af4f	              0x53	                                push rbx	      6360	syntax.c	FUNCTION_95
0x400af50	          0x488b3f	                    mov rdi, qword [rdi]	      6361	syntax.c	FUNCTION_95
0x400af53	    0x488905000000	            mov qword [0x0400af5a], rax 	      6366	syntax.c	FUNCTION_95
0x400af5a	           0xfb607	                   movzx eax, byte [rdi]	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x400af5d	          0x4889fb	                            mov rbx, rdi	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x400af60	          0x83e0df	                     and eax, 0xffffffdf	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x400af63	          0x83e841	                           sub eax, 0x41	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x400af66	            0x3c19	                            cmp al, 0x19	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x400af68	     0xf87d0000000	                            ja 0x400b03e	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x400af6e	            0x6690	                                     nop	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x400af70	        0x4883c301	                              add rbx, 1	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x400af74	           0xfb603	                   movzx eax, byte [rbx]	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x400af77	          0x83e0df	                     and eax, 0xffffffdf	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x400af7a	          0x83e841	                           sub eax, 0x41	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x400af7d	            0x3c19	                            cmp al, 0x19	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x400af7f	            0x76ef	                           jbe 0x400af70	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x400af81	            0x89de	                            mov esi, ebx	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x400af83	            0x29fe	                            sub esi, edi	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x400af85	      0xe800000000	                          call 0x400af8a	      6371	syntax.c	FUNCTION_95	CALL_2
0x400af8a	          0x4885c0	                           test rax, rax	      6372	syntax.c	FUNCTION_95	IF_1
0x400af8d	          0x4989c6	                            mov r14, rax	      6371	syntax.c	FUNCTION_95	CALL_2
0x400af90	            0x7472	                            je 0x400b004	      6372	syntax.c	FUNCTION_95	IF_1
0x400af92	      0x418b542430	            mov edx, dword [r12 + 0x30] 	      6374	syntax.c	FUNCTION_95	IF_1	IF_2
0x400af97	            0x85d2	                           test edx, edx	      6374	syntax.c	FUNCTION_95	IF_1	IF_2
0x400af99	            0x7575	                           jne 0x400b010	      6374	syntax.c	FUNCTION_95	IF_1	IF_2
0x400af9b	      0xbd00000000	                              mov ebp, 0	      6374	syntax.c	FUNCTION_95	IF_1	IF_2
0x400afa0	      0xbe00000000	                              mov esi, 0	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x400afa5	          0x4531ed	                          xor r13d, r13d	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x400afa8	            0xeb17	                           jmp 0x400afc1	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x400afaa	    0x660f1f440000	                    nop word [rax + rax]	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x400afb0	        0x4883c510	                           add rbp, 0x10	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x400afb4	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      6378	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3
0x400afb8	        0x4183c501	                             add r13d, 1	      6376	syntax.c	FUNCTION_95	IF_1	FOR_2
0x400afbc	          0x4885f6	                           test rsi, rsi	      6378	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3
0x400afbf	            0x745f	                            je 0x400b020	      6378	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3
0x400afc1	          0x4c89f7	                            mov rdi, r14	      6383	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_5
0x400afc4	      0xe800000000	                          call 0x400afc9	      6383	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_5
0x400afc9	            0x85c0	                           test eax, eax	      6383	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_5
0x400afcb	            0x75e3	                           jne 0x400afb0	      6383	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_5
0x400afcd	          0x4d63ed	                        movsxd r13, r13d	      6386	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4
0x400afd0	          0x4889df	                            mov rdi, rbx	      6385	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_6
0x400afd3	        0x49c1e504	                              shl r13, 4	      6386	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4
0x400afd7	      0xe800000000	                          call 0x400afdc	      6385	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_6
0x400afdc	            0x31f6	                            xor esi, esi	      6386	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4
0x400afde	        0x49890424	                    mov qword [r12], rax	      6385	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_6
0x400afe2	          0x4c89e7	                            mov rdi, r12	      6386	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4
0x400afe5	    0x41ff95000000	                        call qword [r13]	      6386	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4
0x400afec	          0x4c89f7	                            mov rdi, r14	      6390	syntax.c	FUNCTION_95	IF_1	CALL_7
0x400afef	      0xe800000000	                          call 0x400aff4	      6390	syntax.c	FUNCTION_95	IF_1	CALL_7
0x400aff4	      0x418b442430	            mov eax, dword [r12 + 0x30] 	      6391	syntax.c	FUNCTION_95	IF_1	IF_5
0x400aff9	            0x85c0	                           test eax, eax	      6391	syntax.c	FUNCTION_95	IF_1	IF_5
0x400affb	            0x7407	                            je 0x400b004	      6391	syntax.c	FUNCTION_95	IF_1	IF_5
0x400affd	    0x832d00000000	               sub dword [0x0400b004], 1	      6392	syntax.c	FUNCTION_95	IF_1	IF_5
0x400b004	              0x5b	                                 pop rbx	      6394	syntax.c	FUNCTION_95
0x400b005	              0x5d	                                 pop rbp	      6394	syntax.c	FUNCTION_95
0x400b006	            0x415c	                                 pop r12	      6394	syntax.c	FUNCTION_95
0x400b008	            0x415d	                                 pop r13	      6394	syntax.c	FUNCTION_95
0x400b00a	            0x415e	                                 pop r14	      6394	syntax.c	FUNCTION_95
0x400b00c	              0xc3	                                     ret	      6394	syntax.c	FUNCTION_95
0x400b00d	           0xf1f00	                         nop dword [rax]	      6394	syntax.c	FUNCTION_95
0x400b010	    0x830500000000	               add dword [0x0400b017], 1	      6375	syntax.c	FUNCTION_95	IF_1	IF_2
0x400b017	            0xeb82	                           jmp 0x400af9b	      6375	syntax.c	FUNCTION_95	IF_1	IF_2
0x400b019	     0xf1f80000000	                         nop dword [rax]	      6375	syntax.c	FUNCTION_95	IF_1	IF_2
0x400b020	            0x31ff	                            xor edi, edi	      6380	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3	CALL_4
0x400b022	      0xba05000000	                              mov edx, 5	      6380	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3	CALL_4
0x400b027	      0xbe00000000	                              mov esi, 0	      6380	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3	CALL_4
0x400b02c	      0xe800000000	                          call 0x400b031	      6380	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3	CALL_4
0x400b031	          0x4c89f6	                            mov rsi, r14	      6380	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3	CALL_4
0x400b034	          0x4889c7	                            mov rdi, rax	      6380	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3	CALL_4
0x400b037	      0xe800000000	                          call 0x400b03c	      6380	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3	CALL_4
0x400b03c	            0xebae	                           jmp 0x400afec	      6381	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3
0x400b03e	            0x31f6	                            xor esi, esi	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0x400b040	      0xe940ffffff	                           jmp 0x400af85	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
get_syntime_arg	DO,0:functions,0:IF,0:WHILE,0:CALL,0:ELSE,0:SWITCH,1:FOR,0	6
0x400bb50	            0x31c0	                            xor eax, eax	      6725	syntax.c	FUNCTION_110
0x400bb52	          0x83fe03	                              cmp esi, 3	      6725	syntax.c	FUNCTION_110
0x400bb55	            0x770a	                            ja 0x400bb61	      6725	syntax.c	FUNCTION_110
0x400bb57	            0x89f6	                            mov esi, esi	      6725	syntax.c	FUNCTION_110
0x400bb59	    0x488b04f50000	                  mov rax, qword [rsi*8]	      6725	syntax.c	FUNCTION_110
0x400bb61	            0xf3c3	                                     ret	      6734	syntax.c	FUNCTION_110
syn_get_id	DO,0:functions,0:IF,2:WHILE,0:CALL,2:ELSE,1:SWITCH,0:FOR,0	34
0x400b450	            0x4155	                                push r13	      6571	syntax.c	FUNCTION_102
0x400b452	            0x4154	                                push r12	      6571	syntax.c	FUNCTION_102
0x400b454	          0x4589cd	                           mov r13d, r9d	      6571	syntax.c	FUNCTION_102
0x400b457	              0x55	                                push rbp	      6571	syntax.c	FUNCTION_102
0x400b458	              0x53	                                push rbx	      6571	syntax.c	FUNCTION_102
0x400b459	            0x89cd	                            mov ebp, ecx	      6571	syntax.c	FUNCTION_102
0x400b45b	            0x89d3	                            mov ebx, edx	      6571	syntax.c	FUNCTION_102
0x400b45d	          0x4d89c4	                             mov r12, r8	      6571	syntax.c	FUNCTION_102
0x400b460	        0x4883ec08	                              sub rsp, 8	      6571	syntax.c	FUNCTION_102
0x400b464	    0x488b05000000	            mov rax, qword [0x0400b46b] 	      6574	syntax.c	FUNCTION_102	IF_1
0x400b46b	        0x48394708	                cmp qword [rdi + 8], rax	      6574	syntax.c	FUNCTION_102	IF_1
0x400b46f	            0x742f	                            je 0x400b4a0	      6574	syntax.c	FUNCTION_102	IF_1
0x400b471	      0xe800000000	                          call 0x400b476	      6577	syntax.c	FUNCTION_102	CALL_1
0x400b476	          0x4489ea	                           mov edx, r13d	      6585	syntax.c	FUNCTION_102	CALL_2
0x400b479	          0x4c89e6	                            mov rsi, r12	      6585	syntax.c	FUNCTION_102	CALL_2
0x400b47c	            0x89df	                            mov edi, ebx	      6585	syntax.c	FUNCTION_102	CALL_2
0x400b47e	      0xe800000000	                          call 0x400b483	      6585	syntax.c	FUNCTION_102	CALL_2
0x400b483	            0x85ed	                           test ebp, ebp	      6587	syntax.c	FUNCTION_102
0x400b485	    0x8b0500000000	            mov eax, dword [0x0400b48b] 	      6587	syntax.c	FUNCTION_102
0x400b48b	     0xf4405000000	           cmove eax, dword [0x0400b492]	      6587	syntax.c	FUNCTION_102
0x400b492	        0x4883c408	                              add rsp, 8	      6588	syntax.c	FUNCTION_102
0x400b496	              0x5b	                                 pop rbx	      6588	syntax.c	FUNCTION_102
0x400b497	              0x5d	                                 pop rbp	      6588	syntax.c	FUNCTION_102
0x400b498	            0x415c	                                 pop r12	      6588	syntax.c	FUNCTION_102
0x400b49a	            0x415d	                                 pop r13	      6588	syntax.c	FUNCTION_102
0x400b49c	              0xc3	                                     ret	      6588	syntax.c	FUNCTION_102
0x400b49d	           0xf1f00	                         nop dword [rax]	      6588	syntax.c	FUNCTION_102
0x400b4a0	    0x483935000000	            cmp qword [0x0400b4a7], rsi 	      6575	syntax.c	FUNCTION_102	IF_1
0x400b4a7	            0x75c8	                           jne 0x400b471	      6575	syntax.c	FUNCTION_102	IF_1
0x400b4a9	    0x391500000000	            cmp dword [0x0400b4af], edx 	      6576	syntax.c	FUNCTION_102	IF_1
0x400b4af	            0x7fc0	                            jg 0x400b471	      6576	syntax.c	FUNCTION_102	IF_1
0x400b4b1	            0x7dc3	                           jge 0x400b476	      6580	syntax.c	FUNCTION_102	ELSE_1	IF_2
0x400b4b3	    0xc70500000000	     mov dword [0x0400b4bd], 0xffffffff 	      6583	syntax.c	FUNCTION_102	ELSE_1	IF_2
0x400b4bd	            0xebb7	                           jmp 0x400b476	      6583	syntax.c	FUNCTION_102	ELSE_1	IF_2
syn_add_end_off	DO,0:functions,0:IF,5:WHILE,2:CALL,3:ELSE,3:SWITCH,0:FOR,0	100
0x4000200	            0x4155	                                push r13	      3204	syntax.c	FUNCTION_40
0x4000202	            0x4154	                                push r12	      3204	syntax.c	FUNCTION_40
0x4000204	          0x4989fd	                            mov r13, rdi	      3204	syntax.c	FUNCTION_40
0x4000207	              0x55	                                push rbp	      3204	syntax.c	FUNCTION_40
0x4000208	              0x53	                                push rbx	      3204	syntax.c	FUNCTION_40
0x4000209	        0x4883ec08	                              sub rsp, 8	      3204	syntax.c	FUNCTION_40
0x400020d	         0xfbf4204	               movsx eax, word [rdx + 4]	      3210	syntax.c	FUNCTION_40	IF_1
0x4000211	           0xfa3c8	                             bt eax, ecx	      3210	syntax.c	FUNCTION_40	IF_1
0x4000214	            0x733a	                           jae 0x4000250	      3210	syntax.c	FUNCTION_40	IF_1
0x4000216	          0x4863c9	                         movsxd rcx, ecx	      3214	syntax.c	FUNCTION_40	IF_1
0x4000219	        0x48635e10	         movsxd rbx, dword [rsi + 0x10] 	      3213	syntax.c	FUNCTION_40	IF_1
0x400021d	        0x488b4608	                mov rax, qword [rsi + 8]	      3212	syntax.c	FUNCTION_40	IF_1
0x4000221	      0x4403448a08	        add r8d, dword [rdx + rcx*4 + 8]	      3214	syntax.c	FUNCTION_40	IF_1
0x4000226	          0x4489c5	                            mov ebp, r8d	      3214	syntax.c	FUNCTION_40	IF_1
0x4000229	    0x488b3d000000	            mov rdi, qword [0x04000230] 	      3224	syntax.c	FUNCTION_40	IF_2
0x4000230	        0x49894500	                    mov qword [r13], rax	      3224	syntax.c	FUNCTION_40	IF_2
0x4000234	          0x483b07	                    cmp rax, qword [rdi]	      3224	syntax.c	FUNCTION_40	IF_2
0x4000237	     0xf8f8b000000	                            jg 0x40002c8	      3224	syntax.c	FUNCTION_40	IF_2
0x400023d	            0x85ed	                           test ebp, ebp	      3226	syntax.c	FUNCTION_40	ELSE_2	IF_3
0x400023f	            0x752f	                           jne 0x4000270	      3226	syntax.c	FUNCTION_40	ELSE_2	IF_3
0x4000241	        0x41895d08	                mov dword [r13 + 8], ebx	      3242	syntax.c	FUNCTION_40
0x4000245	        0x4883c408	                              add rsp, 8	      3243	syntax.c	FUNCTION_40
0x4000249	              0x5b	                                 pop rbx	      3243	syntax.c	FUNCTION_40
0x400024a	              0x5d	                                 pop rbp	      3243	syntax.c	FUNCTION_40
0x400024b	            0x415c	                                 pop r12	      3243	syntax.c	FUNCTION_40
0x400024d	            0x415d	                                 pop r13	      3243	syntax.c	FUNCTION_40
0x400024f	              0xc3	                                     ret	      3243	syntax.c	FUNCTION_40
0x4000250	          0x4863c9	                         movsxd rcx, ecx	      3220	syntax.c	FUNCTION_40	ELSE_1
0x4000253	    0x488b86a80000	            mov rax, qword [rsi + 0xa8] 	      3218	syntax.c	FUNCTION_40	ELSE_1
0x400025a	    0x48639eb00000	         movsxd rbx, dword [rsi + 0xb0] 	      3219	syntax.c	FUNCTION_40	ELSE_1
0x4000261	        0x8b6c8a08	       mov ebp, dword [rdx + rcx*4 + 8] 	      3220	syntax.c	FUNCTION_40	ELSE_1
0x4000265	            0xebc2	                           jmp 0x4000229	      3220	syntax.c	FUNCTION_40	ELSE_1
0x4000267	    0x660f1f840000	                    nop word [rax + rax]	      3220	syntax.c	FUNCTION_40	ELSE_1
0x4000270	            0x31d2	                            xor edx, edx	      3228	syntax.c	FUNCTION_40	ELSE_2	IF_3	CALL_1
0x4000272	          0x4889c6	                            mov rsi, rax	      3228	syntax.c	FUNCTION_40	ELSE_2	IF_3	CALL_1
0x4000275	      0xe800000000	                          call 0x400027a	      3228	syntax.c	FUNCTION_40	ELSE_2	IF_3	CALL_1
0x400027a	          0x4801c3	                            add rbx, rax	      3229	syntax.c	FUNCTION_40	ELSE_2	IF_3
0x400027d	            0x85ed	                           test ebp, ebp	      3230	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4
0x400027f	          0x4989c4	                            mov r12, rax	      3228	syntax.c	FUNCTION_40	ELSE_2	IF_3	CALL_1
0x4000282	            0x7e5c	                           jle 0x40002e0	      3230	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4
0x4000284	          0x83ed01	                              sub ebp, 1	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x4000287	            0xeb16	                           jmp 0x400029f	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x4000289	     0xf1f80000000	                         nop dword [rax]	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x4000290	          0x83ed01	                              sub ebp, 1	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x4000293	          0x4801c3	                            add rbx, rax	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x4000296	          0x83fdff	             cmp ebp, 0xffffffffffffffff	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x4000299	     0xf8491000000	                            je 0x4000330	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x400029f	          0x803b00	                       cmp byte [rbx], 0	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x40002a2	     0xf8488000000	                            je 0x4000330	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x40002a8	    0x8b0d00000000	            mov ecx, dword [0x040002ae] 	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x40002ae	      0xb801000000	                              mov eax, 1	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x40002b3	            0x85c9	                           test ecx, ecx	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x40002b5	            0x74d9	                            je 0x4000290	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x40002b7	          0x4889df	                            mov rdi, rbx	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x40002ba	    0xff1500000000	                 call qword [0x040002c0]	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x40002c0	            0x4898	                                    cdqe	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x40002c2	            0xebcc	                           jmp 0x4000290	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x40002c4	         0xf1f4000	                         nop dword [rax]	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x40002c8	            0x31db	                            xor ebx, ebx	      3225	syntax.c	FUNCTION_40	IF_2
0x40002ca	        0x41895d08	                mov dword [r13 + 8], ebx	      3242	syntax.c	FUNCTION_40
0x40002ce	        0x4883c408	                              add rsp, 8	      3243	syntax.c	FUNCTION_40
0x40002d2	              0x5b	                                 pop rbx	      3243	syntax.c	FUNCTION_40
0x40002d3	              0x5d	                                 pop rbp	      3243	syntax.c	FUNCTION_40
0x40002d4	            0x415c	                                 pop r12	      3243	syntax.c	FUNCTION_40
0x40002d6	            0x415d	                                 pop r13	      3243	syntax.c	FUNCTION_40
0x40002d8	              0xc3	                                     ret	      3243	syntax.c	FUNCTION_40
0x40002d9	     0xf1f80000000	                         nop dword [rax]	      3243	syntax.c	FUNCTION_40
0x40002e0	          0x83c501	                              add ebp, 1	      3243	syntax.c	FUNCTION_40
0x40002e3	          0x4839d8	                            cmp rax, rbx	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x40002e6	            0x721d	                            jb 0x4000305	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x40002e8	            0xeb46	                           jmp 0x4000330	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x40002ea	    0x660f1f440000	                    nop word [rax + rax]	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x40002f0	          0x4801c3	                            add rbx, rax	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x40002f3	            0x89e8	                            mov eax, ebp	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x40002f5	          0x4939dc	                            cmp r12, rbx	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x40002f8	           0xf92c2	                                 setb dl	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x40002fb	          0xc1e81f	                           shr eax, 0x1f	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x40002fe	          0x83c501	                              add ebp, 1	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x4000301	            0x84c2	                             test dl, al	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x4000303	            0x742b	                            je 0x4000330	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x4000305	    0x8b1500000000	            mov edx, dword [0x0400030b] 	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x400030b	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x4000312	            0x85d2	                           test edx, edx	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x4000314	            0x74da	                            je 0x40002f0	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x4000316	        0x488d3403	                    lea rsi, [rbx + rax]	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x400031a	          0x4c89e7	                            mov rdi, r12	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x400031d	    0xff1500000000	                 call qword [0x04000323]	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x4000323	          0x83c001	                              add eax, 1	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x4000326	            0x4898	                                    cdqe	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x4000328	          0x48f7d8	                                 neg rax	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x400032b	            0xebc3	                           jmp 0x40002f0	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x400032d	           0xf1f00	                         nop dword [rax]	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x4000330	          0x4429e3	                           sub ebx, r12d	      3240	syntax.c	FUNCTION_40	ELSE_2	IF_3
0x4000333	        0x41895d08	                mov dword [r13 + 8], ebx	      3242	syntax.c	FUNCTION_40
0x4000337	        0x4883c408	                              add rsp, 8	      3243	syntax.c	FUNCTION_40
0x400033b	              0x5b	                                 pop rbx	      3243	syntax.c	FUNCTION_40
0x400033c	              0x5d	                                 pop rbp	      3243	syntax.c	FUNCTION_40
0x400033d	            0x415c	                                 pop r12	      3243	syntax.c	FUNCTION_40
0x400033f	            0x415d	                                 pop r13	      3243	syntax.c	FUNCTION_40
0x4000341	              0xc3	                                     ret	      3243	syntax.c	FUNCTION_40
syn_id2cterm_bg	DO,0:functions,0:IF,0:WHILE,0:CALL,1:ELSE,0:SWITCH,0:FOR,0	35
0x4010a90	    0x448b05000000	            mov r8d, dword [0x04010a97] 	      9879	syntax.c	FUNCTION_159	IF_1
0x4010a97	          0x4439c7	                            cmp edi, r8d	      9879	syntax.c	FUNCTION_159	IF_1
0x4010a9a	            0x7f54	                            jg 0x4010af0	      9879	syntax.c	FUNCTION_159	IF_1
0x4010a9c	            0x85ff	                           test edi, edi	      9879	syntax.c	FUNCTION_159	IF_1
0x4010a9e	    0x4c8b0d000000	              mov r9, qword [0x04010aa5]	      9879	syntax.c	FUNCTION_159	IF_1
0x4010aa5	      0xb864000000	                           mov eax, 0x64	      9879	syntax.c	FUNCTION_159	IF_1
0x4010aaa	            0x7f0d	                            jg 0x4010ab9	      9879	syntax.c	FUNCTION_159	IF_1
0x4010aac	            0xeb42	                           jmp 0x4010af0	      9879	syntax.c	FUNCTION_159	IF_1
0x4010aae	            0x6690	                                     nop	      9879	syntax.c	FUNCTION_159	IF_1
0x4010ab0	            0x85ff	                           test edi, edi	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4010ab2	            0x7424	                            je 0x4010ad8	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4010ab4	          0x83e801	                              sub eax, 1	      9886	syntax.c	FUNCTION_159	FOR_1
0x4010ab7	            0x7447	                            je 0x4010b00	      9886	syntax.c	FUNCTION_159	FOR_1
0x4010ab9	          0x4863ff	                         movsxd rdi, edi	      9888	syntax.c	FUNCTION_159	FOR_1
0x4010abc	        0x488d0cff	                  lea rcx, [rdi + rdi*8]	      9888	syntax.c	FUNCTION_159	FOR_1
0x4010ac0	        0x488d0c4f	                  lea rcx, [rdi + rcx*2]	      9888	syntax.c	FUNCTION_159	FOR_1
0x4010ac4	    0x498d8cc968ff	            lea rcx, [r9 + rcx*8 - 0x98]	      9888	syntax.c	FUNCTION_159	FOR_1
0x4010acc	    0x4863b9880000	         movsxd rdi, dword [rcx + 0x88] 	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4010ad3	          0x4139f8	                            cmp r8d, edi	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4010ad6	            0x7dd8	                           jge 0x4010ab0	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4010ad8	          0x8b4134	            mov eax, dword [rcx + 0x34] 	      9865	syntax.c	FUNCTION_158
0x4010adb	          0x83e801	                              sub eax, 1	      9865	syntax.c	FUNCTION_158
0x4010ade	            0x8906	                    mov dword [rsi], eax	      9865	syntax.c	FUNCTION_158
0x4010ae0	          0x8b4138	            mov eax, dword [rcx + 0x38] 	      9866	syntax.c	FUNCTION_158
0x4010ae3	          0x83e801	                              sub eax, 1	      9866	syntax.c	FUNCTION_158
0x4010ae6	            0x8902	                    mov dword [rdx], eax	      9866	syntax.c	FUNCTION_158
0x4010ae8	              0xc3	                                     ret	      9866	syntax.c	FUNCTION_158
0x4010ae9	     0xf1f80000000	                         nop dword [rax]	      9866	syntax.c	FUNCTION_158
0x4010af0	    0x488b05000000	            mov rax, qword [0x04010af7] 	      9866	syntax.c	FUNCTION_158
0x4010af7	    0x488d8868ffff	                   lea rcx, [rax - 0x98]	      9866	syntax.c	FUNCTION_158
0x4010afe	            0xebd8	                           jmp 0x4010ad8	      9866	syntax.c	FUNCTION_158
0x4010b00	        0x488d04ff	                  lea rax, [rdi + rdi*8]	      9866	syntax.c	FUNCTION_158
0x4010b04	        0x488d0447	                  lea rax, [rdi + rax*2]	      9866	syntax.c	FUNCTION_158
0x4010b08	    0x498d8cc168ff	            lea rcx, [r9 + rax*8 - 0x98]	      9866	syntax.c	FUNCTION_158
0x4010b10	            0xebc6	                           jmp 0x4010ad8	      9866	syntax.c	FUNCTION_158
syn_start_line	DO,0:functions,0:IF,1:WHILE,0:CALL,2:ELSE,0:SWITCH,0:FOR,0	110
0x4004c60	              0x55	                                push rbp	      1059	syntax.c	FUNCTION_9
0x4004c61	              0x53	                                push rbx	      1059	syntax.c	FUNCTION_9
0x4004c62	        0x4883ec08	                              sub rsp, 8	      1059	syntax.c	FUNCTION_9
0x4004c66	    0x8b0d00000000	            mov ecx, dword [0x04004c6c] 	      1067	syntax.c	FUNCTION_9	IF_1
0x4004c6c	    0xc70500000000	               mov dword [0x04004c76], 0	      1060	syntax.c	FUNCTION_9
0x4004c76	    0xc70500000000	               mov dword [0x04004c80], 0	      1061	syntax.c	FUNCTION_9
0x4004c80	            0x85c9	                           test ecx, ecx	      1067	syntax.c	FUNCTION_9	IF_1
0x4004c82	     0xf8e72010000	                           jle 0x4004dfa	      1067	syntax.c	FUNCTION_9	IF_1
0x4004c88	          0x8d51ff	                      lea edx, [rcx - 1]	      1067	syntax.c	FUNCTION_9	IF_1
0x4004c8b	    0x488b3d000000	            mov rdi, qword [0x04004c92] 	      1067	syntax.c	FUNCTION_9	IF_1
0x4004c92	          0x4989d1	                             mov r9, rdx	      1067	syntax.c	FUNCTION_9	IF_1
0x4004c95	        0x488d14d2	                  lea rdx, [rdx + rdx*8]	      1067	syntax.c	FUNCTION_9	IF_1
0x4004c99	        0x488d4718	                   lea rax, [rdi + 0x18]	      1067	syntax.c	FUNCTION_9	IF_1
0x4004c9d	        0x48c1e204	                              shl rdx, 4	      1067	syntax.c	FUNCTION_9	IF_1
0x4004ca1	    0x4c8d8417a800	              lea r8, [rdi + rdx + 0xa8]	      1067	syntax.c	FUNCTION_9	IF_1
0x4004ca9	            0xeb10	                           jmp 0x4004cbb	      1067	syntax.c	FUNCTION_9	IF_1
0x4004cab	       0xf1f440000	                   nop dword [rax + rax]	      1067	syntax.c	FUNCTION_9	IF_1
0x4004cb0	    0x480590000000	                           add rax, 0x90	      1067	syntax.c	FUNCTION_9	IF_1
0x4004cb6	          0x4c39c0	                             cmp rax, r8	      1096	syntax.c	FUNCTION_10	IF_1	FOR_1
0x4004cb9	            0x7465	                            je 0x4004d20	      1096	syntax.c	FUNCTION_10	IF_1	FOR_1
0x4004cbb	        0x486350e8	          movsxd rdx, dword [rax - 0x18]	      1099	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4004cbf	            0x85d2	                           test edx, edx	      1099	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4004cc1	            0x78ed	                            js 0x4004cb0	      1099	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4004cc3	    0x488b35000000	            mov rsi, qword [0x04004cca] 	      1100	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4004cca	        0x488d1492	                  lea rdx, [rdx + rdx*4]	      1100	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4004cce	        0x48c1e205	                              shl rdx, 5	      1100	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4004cd2	    0x480396700200	            add rdx, qword [rsi + 0x270]	      1100	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4004cd9	          0x803a01	                       cmp byte [rdx], 1	      1100	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4004cdc	            0x75d2	                           jne 0x4004cb0	      1100	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4004cde	    0x488b35000000	            mov rsi, qword [0x04004ce5] 	      1102	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4004ce5	          0x483930	                    cmp qword [rax], rsi	      1102	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4004ce8	            0x7dc6	                           jge 0x4004cb0	      1102	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4004cea	    0x48c700000000	                      mov qword [rax], 0	      1105	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4004cf1	    0xc74008000000	                  mov dword [rax + 8], 0	      1106	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4004cf8	        0xf30f6f08	              movdqu xmm1, xmmword [rax]	      1107	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4004cfc	    0x488148500080	           or qword [rax + 0x50], 0x8000	      1104	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4004d04	    0xc74044010000	               mov dword [rax + 0x44], 1	      1108	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4004d0b	    0x480590000000	                           add rax, 0x90	      1108	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4004d11	         0xf114890	       movups xmmword [rax - 0x70], xmm1	      1107	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0x4004d15	          0x4c39c0	                             cmp rax, r8	      1096	syntax.c	FUNCTION_10	IF_1	FOR_1
0x4004d18	            0x75a1	                           jne 0x4004cbb	      1096	syntax.c	FUNCTION_10	IF_1	FOR_1
0x4004d1a	    0x660f1f440000	                    nop word [rax + rax]	      1096	syntax.c	FUNCTION_10	IF_1	FOR_1
0x4004d20	    0x8b1d00000000	            mov ebx, dword [0x04004d26] 	      1123	syntax.c	FUNCTION_10	IF_3
0x4004d26	          0x4489c8	                            mov eax, r9d	      1122	syntax.c	FUNCTION_10
0x4004d29	            0x85db	                           test ebx, ebx	      1123	syntax.c	FUNCTION_10	IF_3
0x4004d2b	     0xf88ef000000	                            js 0x4004e20	      1123	syntax.c	FUNCTION_10	IF_3
0x4004d31	          0x4139d9	                            cmp r9d, ebx	      1124	syntax.c	FUNCTION_10	IF_3	FOR_2
0x4004d34	     0xf8ee6000000	                           jle 0x4004e20	      1124	syntax.c	FUNCTION_10	IF_3	FOR_2
0x4004d3a	          0x4963d1	                         movsxd rdx, r9d	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x4004d3d	        0x488d14d2	                  lea rdx, [rdx + rdx*8]	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x4004d41	        0x48c1e204	                              shl rdx, 4	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x4004d45	      0xf644176940	     test byte [rdi + rdx + 0x69], 0x40 	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x4004d4a	     0xf85d0000000	                           jne 0x4004e20	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x4004d50	      0x488d5417d8	             lea rdx, [rdi + rdx - 0x28]	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x4004d55	            0xeb1f	                           jmp 0x4004d76	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x4004d57	    0x660f1f840000	                    nop word [rax + rax]	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x4004d60	          0x488b32	                    mov rsi, qword [rdx]	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x4004d63	    0x4881ea900000	                           sub rdx, 0x90	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x4004d6a	    0xf7c600400000	                        test esi, 0x4000	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x4004d70	     0xf85ba000000	                           jne 0x4004e30	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x4004d76	          0x83e801	                              sub eax, 1	      1124	syntax.c	FUNCTION_10	IF_3	FOR_2
0x4004d79	            0x39c3	                            cmp ebx, eax	      1124	syntax.c	FUNCTION_10	IF_3	FOR_2
0x4004d7b	            0x75e3	                           jne 0x4004d60	      1124	syntax.c	FUNCTION_10	IF_3	FOR_2
0x4004d7d	            0x39d9	                            cmp ecx, ebx	      1129	syntax.c	FUNCTION_10	FOR_3
0x4004d7f	            0x7e6f	                           jle 0x4004df0	      1129	syntax.c	FUNCTION_10	FOR_3
0x4004d81	          0x4863c3	                         movsxd rax, ebx	      1129	syntax.c	FUNCTION_10	FOR_3
0x4004d84	        0x488d2cc0	                  lea rbp, [rax + rax*8]	      1129	syntax.c	FUNCTION_10	FOR_3
0x4004d88	        0x48c1e504	                              shl rbp, 4	      1129	syntax.c	FUNCTION_10	FOR_3
0x4004d8c	            0xeb1e	                           jmp 0x4004dac	      1129	syntax.c	FUNCTION_10	FOR_3
0x4004d8e	            0x6690	                                     nop	      1129	syntax.c	FUNCTION_10	FOR_3
0x4004d90	          0x8d51ff	                      lea edx, [rcx - 1]	      1134	syntax.c	FUNCTION_10	FOR_3	IF_5
0x4004d93	            0x39da	                            cmp edx, ebx	      1134	syntax.c	FUNCTION_10	FOR_3	IF_5
0x4004d95	            0x7421	                            je 0x4004db8	      1134	syntax.c	FUNCTION_10	FOR_3	IF_5
0x4004d97	          0x83c301	                              add ebx, 1	      1129	syntax.c	FUNCTION_10	FOR_3
0x4004d9a	    0x4881c5900000	                           add rbp, 0x90	      1129	syntax.c	FUNCTION_10	FOR_3
0x4004da1	            0x39cb	                            cmp ebx, ecx	      1129	syntax.c	FUNCTION_10	FOR_3
0x4004da3	            0x7d4b	                           jge 0x4004df0	      1129	syntax.c	FUNCTION_10	FOR_3
0x4004da5	    0x488b3d000000	            mov rdi, qword [0x04004dac] 	      1129	syntax.c	FUNCTION_10	FOR_3
0x4004dac	          0x4801ef	                            add rdi, rbp	      1131	syntax.c	FUNCTION_10	FOR_3
0x4004daf	        0x488b4768	            mov rax, qword [rdi + 0x68] 	      1132	syntax.c	FUNCTION_10	FOR_3	IF_5
0x4004db3	          0xf6c404	                              test ah, 4	      1132	syntax.c	FUNCTION_10	FOR_3	IF_5
0x4004db6	            0x74d8	                            je 0x4004d90	      1132	syntax.c	FUNCTION_10	FOR_3	IF_5
0x4004db8	    0x488b15000000	            mov rdx, qword [0x04004dbf] 	      1137	syntax.c	FUNCTION_10	FOR_3	IF_5
0x4004dbf	          0xf6c480	                           test ah, 0x80	      1139	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_6
0x4004dc2	    0xc74730000000	               mov dword [rdi + 0x30], 0	      1136	syntax.c	FUNCTION_10	FOR_3	IF_5
0x4004dc9	        0x48895728	             mov qword [rdi + 0x28], rdx	      1137	syntax.c	FUNCTION_10	FOR_3	IF_5
0x4004dcd	            0x75c8	                           jne 0x4004d97	      1139	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_6
0x4004dcf	    0x8b3500000000	            mov esi, dword [0x04004dd5] 	      1140	syntax.c	FUNCTION_10	FOR_3	IF_5	CALL_1
0x4004dd5	            0x31d2	                            xor edx, edx	      1140	syntax.c	FUNCTION_10	FOR_3	IF_5	CALL_1
0x4004dd7	          0x83c301	                              add ebx, 1	      1129	syntax.c	FUNCTION_10	FOR_3
0x4004dda	    0x4881c5900000	                           add rbp, 0x90	      1129	syntax.c	FUNCTION_10	FOR_3
0x4004de1	      0xe85af4ffff	                  call sym.update_si_end	      1140	syntax.c	FUNCTION_10	FOR_3	IF_5	CALL_1
0x4004de6	    0x8b0d00000000	            mov ecx, dword [0x04004dec] 	      1140	syntax.c	FUNCTION_10	FOR_3	IF_5	CALL_1
0x4004dec	            0x39cb	                            cmp ebx, ecx	      1129	syntax.c	FUNCTION_10	FOR_3
0x4004dee	            0x7cb5	                            jl 0x4004da5	      1129	syntax.c	FUNCTION_10	FOR_3
0x4004df0	      0xe8bbd4ffff	                  call sym.check_keepend	      1146	syntax.c	FUNCTION_10	CALL_2
0x4004df5	      0xe886faffff	               call sym.check_state_ends	      1070	syntax.c	FUNCTION_9	IF_1	CALL_2
0x4004dfa	    0xc70500000000	     mov dword [0x04004e04], 0xffffffff 	      1073	syntax.c	FUNCTION_9
0x4004e04	    0x830500000000	               add dword [0x04004e0b], 1	      1074	syntax.c	FUNCTION_9
0x4004e0b	    0xc70500000000	               mov dword [0x04004e15], 1	      1076	syntax.c	FUNCTION_9
0x4004e15	        0x4883c408	                              add rsp, 8	      1078	syntax.c	FUNCTION_9
0x4004e19	              0x5b	                                 pop rbx	      1078	syntax.c	FUNCTION_9
0x4004e1a	              0x5d	                                 pop rbp	      1078	syntax.c	FUNCTION_9
0x4004e1b	              0xc3	                                     ret	      1078	syntax.c	FUNCTION_9
0x4004e1c	         0xf1f4000	                         nop dword [rax]	      1078	syntax.c	FUNCTION_9
0x4004e20	          0x4489cb	                            mov ebx, r9d	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x4004e23	      0xe955ffffff	                           jmp 0x4004d7d	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x4004e28	     0xf1f84000000	                   nop dword [rax + rax]	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x4004e30	            0x89c3	                            mov ebx, eax	      1124	syntax.c	FUNCTION_10	IF_3	FOR_2
0x4004e32	      0xe946ffffff	                           jmp 0x4004d7d	      1124	syntax.c	FUNCTION_10	IF_3	FOR_2
set_context_in_syntax_cmd	DO,0:functions,0:IF,7:WHILE,0:CALL,10:ELSE,5:SWITCH,0:FOR,0	89
0x400b290	    0xc7070c000000	                    mov dword [rdi], 0xc	      6492	syntax.c	FUNCTION_100
0x400b296	        0x48897708	                mov qword [rdi + 8], rsi	      6494	syntax.c	FUNCTION_100
0x400b29a	          0x803e00	                       cmp byte [rsi], 0	      6499	syntax.c	FUNCTION_100	IF_1
0x400b29d	    0xc70500000000	               mov dword [0x0400b2a7], 0	      6493	syntax.c	FUNCTION_100
0x400b2a7	    0xc70500000000	               mov dword [0x0400b2b1], 0	      6495	syntax.c	FUNCTION_100
0x400b2b1	    0xc70500000000	               mov dword [0x0400b2bb], 0	      6496	syntax.c	FUNCTION_100
0x400b2bb	            0x7503	                           jne 0x400b2c0	      6499	syntax.c	FUNCTION_100	IF_1
0x400b2bd	              0xc3	                                     ret	      6522	syntax.c	FUNCTION_100	ELSE_5
0x400b2be	            0x6690	                                     nop	      6522	syntax.c	FUNCTION_100	ELSE_5
0x400b2c0	            0x4154	                                push r12	      6488	syntax.c	FUNCTION_100
0x400b2c2	              0x55	                                push rbp	      6488	syntax.c	FUNCTION_100
0x400b2c3	          0x4889f5	                            mov rbp, rsi	      6488	syntax.c	FUNCTION_100
0x400b2c6	              0x53	                                push rbx	      6488	syntax.c	FUNCTION_100
0x400b2c7	          0x4889fb	                            mov rbx, rdi	      6488	syntax.c	FUNCTION_100
0x400b2ca	          0x4889f7	                            mov rdi, rsi	      6501	syntax.c	FUNCTION_100	IF_1	CALL_1
0x400b2cd	      0xe800000000	                          call 0x400b2d2	      6501	syntax.c	FUNCTION_100	IF_1	CALL_1
0x400b2d2	          0x803800	                       cmp byte [rax], 0	      6502	syntax.c	FUNCTION_100	IF_1	IF_2
0x400b2d5	          0x4989c4	                            mov r12, rax	      6501	syntax.c	FUNCTION_100	IF_1	CALL_1
0x400b2d8	            0x7506	                           jne 0x400b2e0	      6502	syntax.c	FUNCTION_100	IF_1	IF_2
0x400b2da	              0x5b	                                 pop rbx	      6522	syntax.c	FUNCTION_100	ELSE_5
0x400b2db	              0x5d	                                 pop rbp	      6522	syntax.c	FUNCTION_100	ELSE_5
0x400b2dc	            0x415c	                                 pop r12	      6522	syntax.c	FUNCTION_100	ELSE_5
0x400b2de	              0xc3	                                     ret	      6522	syntax.c	FUNCTION_100	ELSE_5
0x400b2df	              0x90	                                     nop	      6522	syntax.c	FUNCTION_100	ELSE_5
0x400b2e0	          0x4889c7	                            mov rdi, rax	      6504	syntax.c	FUNCTION_100	IF_1	IF_2	CALL_2
0x400b2e3	      0xe800000000	                          call 0x400b2e8	      6504	syntax.c	FUNCTION_100	IF_1	IF_2	CALL_2
0x400b2e8	        0x48894308	                mov qword [rbx + 8], rax	      6504	syntax.c	FUNCTION_100	IF_1	IF_2	CALL_2
0x400b2ec	          0x4889c7	                            mov rdi, rax	      6505	syntax.c	FUNCTION_100	IF_1	IF_2	IF_3	CALL_3
0x400b2ef	      0xe800000000	                          call 0x400b2f4	      6505	syntax.c	FUNCTION_100	IF_1	IF_2	IF_3	CALL_3
0x400b2f4	          0x803800	                       cmp byte [rax], 0	      6505	syntax.c	FUNCTION_100	IF_1	IF_2	IF_3	CALL_3
0x400b2f7	     0xf85b3000000	                           jne 0x400b3b0	      6505	syntax.c	FUNCTION_100	IF_1	IF_2	IF_3	CALL_3
0x400b2fd	          0x4929ec	                            sub r12, rbp	      6507	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x400b300	      0xbe00000000	                              mov esi, 0	      6507	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x400b305	          0x4889ef	                            mov rdi, rbp	      6507	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x400b308	          0x4c89e2	                            mov rdx, r12	      6507	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x400b30b	      0xe800000000	                          call 0x400b310	      6507	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x400b310	            0x85c0	                           test eax, eax	      6507	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x400b312	     0xf84b8000000	                            je 0x400b3d0	      6507	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x400b318	          0x4c89e2	                            mov rdx, r12	      6509	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5	CALL_5
0x400b31b	      0xbe00000000	                              mov esi, 0	      6509	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5	CALL_5
0x400b320	          0x4889ef	                            mov rdi, rbp	      6509	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5	CALL_5
0x400b323	      0xe800000000	                          call 0x400b328	      6509	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5	CALL_5
0x400b328	            0x85c0	                           test eax, eax	      6509	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5	CALL_5
0x400b32a	     0xf8490000000	                            je 0x400b3c0	      6509	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5	CALL_5
0x400b330	          0x4c89e2	                            mov rdx, r12	      6511	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6	CALL_6
0x400b333	      0xbe00000000	                              mov esi, 0	      6511	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6	CALL_6
0x400b338	          0x4889ef	                            mov rdi, rbp	      6511	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6	CALL_6
0x400b33b	      0xe800000000	                          call 0x400b340	      6511	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6	CALL_6
0x400b340	            0x85c0	                           test eax, eax	      6511	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6	CALL_6
0x400b342	     0xf8498000000	                            je 0x400b3e0	      6511	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6	CALL_6
0x400b348	          0x4c89e2	                            mov rdx, r12	      6513	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_7
0x400b34b	      0xbe00000000	                              mov esi, 0	      6513	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_7
0x400b350	          0x4889ef	                            mov rdi, rbp	      6513	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_7
0x400b353	      0xe800000000	                          call 0x400b358	      6513	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_7
0x400b358	            0x85c0	                           test eax, eax	      6513	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_7
0x400b35a	            0x7444	                            je 0x400b3a0	      6513	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_7
0x400b35c	          0x4c89e2	                            mov rdx, r12	      6514	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_8
0x400b35f	      0xbe00000000	                              mov esi, 0	      6514	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_8
0x400b364	          0x4889ef	                            mov rdi, rbp	      6514	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_8
0x400b367	      0xe800000000	                          call 0x400b36c	      6514	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_8
0x400b36c	            0x85c0	                           test eax, eax	      6514	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_8
0x400b36e	            0x7430	                            je 0x400b3a0	      6514	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_8
0x400b370	          0x4c89e2	                            mov rdx, r12	      6515	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_9
0x400b373	      0xbe00000000	                              mov esi, 0	      6515	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_9
0x400b378	          0x4889ef	                            mov rdi, rbp	      6515	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_9
0x400b37b	      0xe800000000	                          call 0x400b380	      6515	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_9
0x400b380	            0x85c0	                           test eax, eax	      6515	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_9
0x400b382	            0x741c	                            je 0x400b3a0	      6515	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_9
0x400b384	          0x4c89e2	                            mov rdx, r12	      6516	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_10
0x400b387	      0xbe00000000	                              mov esi, 0	      6516	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_10
0x400b38c	          0x4889ef	                            mov rdi, rbp	      6516	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_10
0x400b38f	      0xe800000000	                          call 0x400b394	      6516	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_10
0x400b394	            0x85c0	                           test eax, eax	      6516	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_10
0x400b396	            0x7518	                           jne 0x400b3b0	      6516	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_10
0x400b398	     0xf1f84000000	                   nop dword [rax + rax]	      6516	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_10
0x400b3a0	    0xc7030d000000	                    mov dword [rbx], 0xd	      6517	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7
0x400b3a6	      0xe92fffffff	                           jmp 0x400b2da	      6522	syntax.c	FUNCTION_100	ELSE_5
0x400b3ab	       0xf1f440000	                   nop dword [rax + rax]	      6522	syntax.c	FUNCTION_100	ELSE_5
0x400b3b0	    0xc70300000000	                      mov dword [rbx], 0	      6506	syntax.c	FUNCTION_100	IF_1	IF_2	IF_3
0x400b3b6	      0xe91fffffff	                           jmp 0x400b2da	      6506	syntax.c	FUNCTION_100	IF_1	IF_2	IF_3
0x400b3bb	       0xf1f440000	                   nop dword [rax + rax]	      6506	syntax.c	FUNCTION_100	IF_1	IF_2	IF_3
0x400b3c0	    0xc70500000000	               mov dword [0x0400b3ca], 2	      6510	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5
0x400b3ca	      0xe90bffffff	                           jmp 0x400b2da	      6510	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5
0x400b3cf	              0x90	                                     nop	      6510	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5
0x400b3d0	    0xc70500000000	               mov dword [0x0400b3da], 1	      6508	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4
0x400b3da	      0xe9fbfeffff	                           jmp 0x400b2da	      6508	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4
0x400b3df	              0x90	                                     nop	      6508	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4
0x400b3e0	    0xc70500000000	               mov dword [0x0400b3ea], 3	      6512	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6
0x400b3ea	      0xe9ebfeffff	                           jmp 0x400b2da	      6512	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6
get_syn_options	DO,0:functions,0:IF,25:WHILE,0:CALL,28:ELSE,7:SWITCH,0:FOR,4	294
0x400e900	            0x4157	                                push r15	      4608	syntax.c	FUNCTION_76
0x400e902	            0x4156	                                push r14	      4608	syntax.c	FUNCTION_76
0x400e904	            0x4155	                                push r13	      4608	syntax.c	FUNCTION_76
0x400e906	            0x4154	                                push r12	      4608	syntax.c	FUNCTION_76
0x400e908	              0x55	                                push rbp	      4608	syntax.c	FUNCTION_76
0x400e909	              0x53	                                push rbx	      4608	syntax.c	FUNCTION_76
0x400e90a	    0x4881ecf80000	                           sub rsp, 0xf8	      4608	syntax.c	FUNCTION_76
0x400e911	    0x64488b042528	                mov rax, qword fs:[0x28]	      4608	syntax.c	FUNCTION_76
0x400e91a	    0x48898424e800	             mov qword [rsp + 0xe8], rax	      4608	syntax.c	FUNCTION_76
0x400e922	            0x31c0	                            xor eax, eax	      4608	syntax.c	FUNCTION_76
0x400e924	          0x4885ff	                           test rdi, rdi	      4642	syntax.c	FUNCTION_76	IF_1
0x400e927	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      4608	syntax.c	FUNCTION_76
0x400e92c	        0x894c2404	                mov dword [rsp + 4], ecx	      4608	syntax.c	FUNCTION_76
0x400e930	     0xf844f040000	                            je 0x400ed85	      4642	syntax.c	FUNCTION_76	IF_1
0x400e936	    0x488b05000000	            mov rax, qword [0x0400e93d] 	      4646	syntax.c	FUNCTION_76	IF_2
0x400e93d	          0x4889fd	                            mov rbp, rdi	      4646	syntax.c	FUNCTION_76	IF_2
0x400e940	          0x4889f3	                            mov rbx, rsi	      4646	syntax.c	FUNCTION_76	IF_2
0x400e943	          0x4989d5	                            mov r13, rdx	      4646	syntax.c	FUNCTION_76	IF_2
0x400e946	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4646	syntax.c	FUNCTION_76	IF_2
0x400e94a	    0x8bb808030000	           mov edi, dword [rax + 0x308] 	      4646	syntax.c	FUNCTION_76	IF_2
0x400e950	            0x85ff	                           test edi, edi	      4646	syntax.c	FUNCTION_76	IF_2
0x400e952	            0x7406	                            je 0x400e95a	      4646	syntax.c	FUNCTION_76	IF_2
0x400e954	    0x810e00000200	                 or dword [rsi], 0x20000	      4647	syntax.c	FUNCTION_76	IF_2
0x400e95a	        0x488d4328	                   lea rax, [rbx + 0x28]	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x400e95e	      0x4889442408	                mov qword [rsp + 8], rax	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x400e963	        0x488d4320	                   lea rax, [rbx + 0x20]	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x400e967	      0x4889442410	             mov qword [rsp + 0x10], rax	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x400e96c	         0xfb67500	                   movzx esi, byte [rbp]	      4657	syntax.c	FUNCTION_76	FOR_1	IF_3	CALL_1
0x400e970	      0xbf00000000	                              mov edi, 0	      4657	syntax.c	FUNCTION_76	FOR_1	IF_3	CALL_1
0x400e975	      0xe800000000	                          call 0x400e97a	      4657	syntax.c	FUNCTION_76	FOR_1	IF_3	CALL_1
0x400e97a	          0x4885c0	                           test rax, rax	      4657	syntax.c	FUNCTION_76	FOR_1	IF_3	CALL_1
0x400e97d	            0x7476	                            je 0x400e9f5	      4657	syntax.c	FUNCTION_76	FOR_1	IF_3	CALL_1
0x400e97f	    0x41bc00000000	                             mov r12d, 0	      4657	syntax.c	FUNCTION_76	FOR_1	IF_3	CALL_1
0x400e985	    0x41be12000000	                          mov r14d, 0x12	      4657	syntax.c	FUNCTION_76	FOR_1	IF_3	CALL_1
0x400e98b	       0xf1f440000	                   nop dword [rax + rax]	      4657	syntax.c	FUNCTION_76	FOR_1	IF_3	CALL_1
0x400e990	        0x498b3c24	                    mov rdi, qword [r12]	      4662	syntax.c	FUNCTION_76	FOR_1	FOR_2
0x400e994	           0xfbe07	                   movsx eax, byte [rdi]	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x400e997	            0x84c0	                             test al, al	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x400e999	     0xf8495000000	                            je 0x400ea34	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x400e99f	            0x31d2	                            xor edx, edx	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x400e9a1	            0x31f6	                            xor esi, esi	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x400e9a3	       0xf1f440000	                   nop dword [rax + rax]	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x400e9a8	       0xfb64c1500	             movzx ecx, byte [rbp + rdx]	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x400e9ad	            0x39c1	                            cmp ecx, eax	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x400e9af	            0x7409	                            je 0x400e9ba	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x400e9b1	       0xfbe445701	      movsx eax, byte [rdi + rdx*2 + 1] 	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x400e9b6	            0x39c1	                            cmp ecx, eax	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x400e9b8	            0x752d	                           jne 0x400e9e7	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x400e9ba	        0x4883c201	                              add rdx, 1	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x400e9be	          0x83c601	                              add esi, 1	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x400e9c1	         0xfbe0457	           movsx eax, byte [rdi + rdx*2]	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x400e9c5	            0x84c0	                             test al, al	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x400e9c7	            0x75df	                           jne 0x400e9a8	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x400e9c9	          0x4c63fe	                         movsxd r15, esi	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x400e9cc	    0x420fb6443d00	             movzx eax, byte [rbp + r15]	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x400e9d2	            0x3c20	                            cmp al, 0x20	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x400e9d4	            0x746b	                            je 0x400ea41	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x400e9d6	            0x3c09	                               cmp al, 9	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x400e9d8	            0x7467	                            je 0x400ea41	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x400e9da	      0x418b742408	                mov esi, dword [r12 + 8]	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x400e9df	            0x85f6	                           test esi, esi	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x400e9e1	            0x7e3e	                           jle 0x400ea21	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x400e9e3	            0x3c3d	                            cmp al, 0x3d	      4667	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x400e9e5	            0x745a	                            je 0x400ea41	      4667	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x400e9e7	        0x4183ee01	                             sub r14d, 1	      4660	syntax.c	FUNCTION_76	FOR_1	FOR_2
0x400e9eb	        0x4983ec10	                           sub r12, 0x10	      4660	syntax.c	FUNCTION_76	FOR_1	FOR_2
0x400e9ef	        0x4183feff	            cmp r14d, 0xffffffffffffffff	      4660	syntax.c	FUNCTION_76	FOR_1	FOR_2
0x400e9f3	            0x759b	                           jne 0x400e990	      4660	syntax.c	FUNCTION_76	FOR_1	FOR_2
0x400e9f5	    0x488b9c24e800	            mov rbx, qword [rsp + 0xe8] 	      4785	syntax.c	FUNCTION_76
0x400e9fd	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      4785	syntax.c	FUNCTION_76
0x400ea06	          0x4889e8	                            mov rax, rbp	      4785	syntax.c	FUNCTION_76
0x400ea09	     0xf8589030000	                           jne 0x400ed98	      4785	syntax.c	FUNCTION_76
0x400ea0f	    0x4881c4f80000	                           add rsp, 0xf8	      4785	syntax.c	FUNCTION_76
0x400ea16	              0x5b	                                 pop rbx	      4785	syntax.c	FUNCTION_76
0x400ea17	              0x5d	                                 pop rbp	      4785	syntax.c	FUNCTION_76
0x400ea18	            0x415c	                                 pop r12	      4785	syntax.c	FUNCTION_76
0x400ea1a	            0x415d	                                 pop r13	      4785	syntax.c	FUNCTION_76
0x400ea1c	            0x415e	                                 pop r14	      4785	syntax.c	FUNCTION_76
0x400ea1e	            0x415f	                                 pop r15	      4785	syntax.c	FUNCTION_76
0x400ea20	              0xc3	                                     ret	      4785	syntax.c	FUNCTION_76
0x400ea21	           0xfb6f8	                           movzx edi, al	      4669	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_3
0x400ea24	      0xe800000000	                          call 0x400ea29	      4669	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_3
0x400ea29	            0x85c0	                           test eax, eax	      4667	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x400ea2b	            0x7514	                           jne 0x400ea41	      4667	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x400ea2d	      0x488b6c2418	            mov rbp, qword [rsp + 0x18] 	      4667	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x400ea32	            0xebb3	                           jmp 0x400e9e7	      4667	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x400ea34	          0x4531ff	                          xor r15d, r15d	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x400ea37	    0x420fb6443d00	             movzx eax, byte [rbp + r15]	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x400ea3d	            0x3c20	                            cmp al, 0x20	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x400ea3f	            0x7595	                           jne 0x400e9d6	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x400ea41	          0x8b4b04	                mov ecx, dword [rbx + 4]	      4671	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x400ea44	          0x4d63c6	                         movsxd r8, r14d	      4672	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x400ea47	            0x85c9	                           test ecx, ecx	      4671	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x400ea49	            0x742a	                            je 0x400ea75	      4671	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x400ea4b	          0x4c89c0	                             mov rax, r8	      4672	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x400ea4e	        0x48c1e004	                              shl rax, 4	      4672	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x400ea52	    0x8b8000000000	                    mov eax, dword [rax]	      4672	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x400ea58	    0x8d9000f0ffff	                 lea edx, [rax - 0x1000]	      4674	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x400ea5e	    0x81e2ffefffff	                     and edx, 0xffffefff	      4674	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x400ea64	     0xf84c0020000	                            je 0x400ed2a	      4674	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x400ea6a	      0x3d00400000	                         cmp eax, 0x4000	      4674	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x400ea6f	     0xf84b5020000	                            je 0x400ed2a	      4674	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x400ea75	          0x4c89c0	                             mov rax, r8	      4683	syntax.c	FUNCTION_76	FOR_1	IF_8
0x400ea78	        0x48c1e004	                              shl rax, 4	      4683	syntax.c	FUNCTION_76	FOR_1	IF_8
0x400ea7c	    0x8b8000000000	                    mov eax, dword [rax]	      4683	syntax.c	FUNCTION_76	FOR_1	IF_8
0x400ea82	          0x83f801	                              cmp eax, 1	      4683	syntax.c	FUNCTION_76	FOR_1	IF_8
0x400ea85	     0xf84cc000000	                            je 0x400eb57	      4683	syntax.c	FUNCTION_76	FOR_1	IF_8
0x400ea8b	          0x83f802	                              cmp eax, 2	      4693	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11
0x400ea8e	     0xf8429010000	                            je 0x400ebbd	      4693	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11
0x400ea94	          0x83f803	                              cmp eax, 3	      4698	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13
0x400ea97	     0xf8443010000	                            je 0x400ebe0	      4698	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13
0x400ea9d	          0x83f80b	                            cmp eax, 0xb	      4703	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15
0x400eaa0	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4703	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15
0x400eaa5	            0x750a	                           jne 0x400eab1	      4703	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15
0x400eaa7	        0x8078053d	                cmp byte [rax + 5], 0x3d	      4703	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15
0x400eaab	     0xf8414020000	                            je 0x400ecc5	      4703	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15
0x400eab1	        0x49c1e004	                               shl r8, 4	      4734	syntax.c	FUNCTION_76	FOR_1	ELSE_5
0x400eab5	        0x4a8d3c38	                    lea rdi, [rax + r15]	      4735	syntax.c	FUNCTION_76	FOR_1	ELSE_5	CALL_15
0x400eab9	    0x458ba0000000	                    mov r12d, dword [r8]	      4734	syntax.c	FUNCTION_76	FOR_1	ELSE_5
0x400eac0	          0x440923	                    or dword [rbx], r12d	      4734	syntax.c	FUNCTION_76	FOR_1	ELSE_5
0x400eac3	      0xe800000000	                          call 0x400eac8	      4735	syntax.c	FUNCTION_76	FOR_1	ELSE_5	CALL_15
0x400eac8	          0x4889c5	                            mov rbp, rax	      4735	syntax.c	FUNCTION_76	FOR_1	ELSE_5	CALL_15
0x400eacb	      0x4889442418	             mov qword [rsp + 0x18], rax	      4735	syntax.c	FUNCTION_76	FOR_1	ELSE_5	CALL_15
0x400ead0	      0x418d4424f0	                   lea eax, [r12 - 0x10]	      4737	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18
0x400ead5	          0x83e0ef	                     and eax, 0xffffffef	      4737	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18
0x400ead8	     0xf85ac000000	                           jne 0x400eb8a	      4737	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18
0x400eade	      0x48837b0800	                  cmp qword [rbx + 8], 0	      4740	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19
0x400eae3	     0xf84b4020000	                            je 0x400ed9d	      4740	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19
0x400eae9	          0x4889ef	                            mov rdi, rbp	      4746	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_18
0x400eaec	      0xe800000000	                          call 0x400eaf1	      4746	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_18
0x400eaf1	          0x4839c5	                            cmp rbp, rax	      4747	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_20
0x400eaf4	      0x4889442418	             mov qword [rsp + 0x18], rax	      4746	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_18
0x400eaf9	     0xf8486020000	                            je 0x400ed85	      4747	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_20
0x400eaff	          0x4829e8	                            sub rax, rbp	      4749	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_19
0x400eb02	          0x4889ef	                            mov rdi, rbp	      4749	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_19
0x400eb05	          0x4889c6	                            mov rsi, rax	      4749	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_19
0x400eb08	      0xe800000000	                          call 0x400eb0d	      4749	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_19
0x400eb0d	          0x4885c0	                           test rax, rax	      4750	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_21
0x400eb10	          0x4889c5	                            mov rbp, rax	      4749	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_19
0x400eb13	     0xf846c020000	                            je 0x400ed85	      4750	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_21
0x400eb19	      0xbf00000000	                              mov edi, 0	      4752	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_22	CALL_20
0x400eb1e	      0xb905000000	                              mov ecx, 5	      4752	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_22	CALL_20
0x400eb23	          0x4889c6	                            mov rsi, rax	      4752	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_22	CALL_20
0x400eb26	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4752	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_22	CALL_20
0x400eb28	     0xf85da000000	                           jne 0x400ec08	      4752	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_22	CALL_20
0x400eb2e	        0x488b4308	                mov rax, qword [rbx + 8]	      4753	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_22
0x400eb32	    0xc700feffffff	            mov dword [rax], 0xfffffffe 	      4753	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_22
0x400eb38	          0x4889ef	                            mov rdi, rbp	      4772	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_25
0x400eb3b	      0xe800000000	                          call 0x400eb40	      4772	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_25
0x400eb40	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4773	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_26
0x400eb45	      0xe800000000	                          call 0x400eb4a	      4773	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_26
0x400eb4a	          0x4889c5	                            mov rbp, rax	      4773	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_26
0x400eb4d	      0x4889442418	             mov qword [rsp + 0x18], rax	      4773	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_26
0x400eb52	      0xe915feffff	                           jmp 0x400e96c	      4773	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_26
0x400eb57	        0x807b1000	                cmp byte [rbx + 0x10], 0	      4685	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_9
0x400eb5b	     0xf842b020000	                            je 0x400ed8c	      4685	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_9
0x400eb61	        0x8b4c2404	                mov ecx, dword [rsp + 4]	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x400eb65	        0x488d5318	                   lea rdx, [rbx + 0x18]	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x400eb69	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x400eb6e	      0xbe08000000	                              mov esi, 8	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x400eb73	      0xe8a8f7ffff	                    call sym.get_id_list	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x400eb78	            0x85c0	                           test eax, eax	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x400eb7a	     0xf8405020000	                            je 0x400ed85	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x400eb80	      0x488b6c2418	            mov rbp, qword [rsp + 0x18] 	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x400eb85	      0xe9e2fdffff	                           jmp 0x400e96c	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x400eb8a	    0x4181fc002000	                        cmp r12d, 0x2000	      4776	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25
0x400eb91	     0xf85d5fdffff	                           jne 0x400e96c	      4776	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25
0x400eb97	    0x488b3d000000	            mov rdi, qword [0x0400eb9e] 	      4777	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25	CALL_27
0x400eb9e	      0xe800000000	                          call 0x400eba3	      4777	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25	CALL_27
0x400eba3	            0x85c0	                           test eax, eax	      4777	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25	CALL_27
0x400eba5	            0x74d9	                            je 0x400eb80	      4777	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25	CALL_27
0x400eba7	    0x488b3d000000	            mov rdi, qword [0x0400ebae] 	      4779	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25
0x400ebae	      0xe800000000	                          call 0x400ebb3	      4779	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25
0x400ebb3	      0x488b6c2418	            mov rbp, qword [rsp + 0x18] 	      4779	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25
0x400ebb8	      0xe9affdffff	                           jmp 0x400e96c	      4779	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25
0x400ebbd	        0x8b4c2404	                mov ecx, dword [rsp + 4]	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x400ebc1	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x400ebc6	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x400ebcb	      0xbe0b000000	                            mov esi, 0xb	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x400ebd0	      0xe84bf7ffff	                    call sym.get_id_list	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x400ebd5	            0x85c0	                           test eax, eax	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x400ebd7	            0x75a7	                           jne 0x400eb80	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x400ebd9	      0xe9a7010000	                           jmp 0x400ed85	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x400ebde	            0x6690	                                     nop	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x400ebe0	        0x8b4c2404	                mov ecx, dword [rsp + 4]	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x400ebe4	      0x488b542408	                mov rdx, qword [rsp + 8]	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x400ebe9	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x400ebee	      0xbe09000000	                              mov esi, 9	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x400ebf3	      0xe828f7ffff	                    call sym.get_id_list	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x400ebf8	            0x85c0	                           test eax, eax	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x400ebfa	     0xf8580ffffff	                           jne 0x400eb80	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x400ec00	      0xe980010000	                           jmp 0x400ed85	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x400ec05	           0xf1f00	                         nop dword [rax]	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x400ec08	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      9639	syntax.c	FUNCTION_148	CALL_1
0x400ec0d	      0xbac7000000	                           mov edx, 0xc7	      9639	syntax.c	FUNCTION_148	CALL_1
0x400ec12	          0x4889c6	                            mov rsi, rax	      9639	syntax.c	FUNCTION_148	CALL_1
0x400ec15	      0xe800000000	                          call 0x400ec1a	      9639	syntax.c	FUNCTION_148	CALL_1
0x400ec1a	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      9640	syntax.c	FUNCTION_148	CALL_2
0x400ec1f	      0xe800000000	                          call 0x400ec24	      9640	syntax.c	FUNCTION_148	CALL_2
0x400ec24	    0x486305000000	         movsxd rax, dword [0x0400ec2b] 	      9641	syntax.c	FUNCTION_148	FOR_1
0x400ec2b	        0x488d14c0	                  lea rdx, [rax + rax*8]	      9641	syntax.c	FUNCTION_148	FOR_1
0x400ec2f	          0x4989c6	                            mov r14, rax	      9641	syntax.c	FUNCTION_148	FOR_1
0x400ec32	        0x488d1450	                  lea rdx, [rax + rdx*2]	      9641	syntax.c	FUNCTION_148	FOR_1
0x400ec36	    0x488b05000000	            mov rax, qword [0x0400ec3d] 	      9641	syntax.c	FUNCTION_148	FOR_1
0x400ec3d	    0x4c8dbcd070ff	           lea r15, [rax + rdx*8 - 0x90]	      9641	syntax.c	FUNCTION_148	FOR_1
0x400ec45	            0xeb20	                           jmp 0x400ec67	      9641	syntax.c	FUNCTION_148	FOR_1
0x400ec47	          0x498b37	                    mov rsi, qword [r15]	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x400ec4a	          0x4885f6	                           test rsi, rsi	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x400ec4d	            0x740e	                            je 0x400ec5d	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x400ec4f	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400ec54	      0xe800000000	                          call 0x400ec59	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400ec59	            0x85c0	                           test eax, eax	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400ec5b	            0x7413	                            je 0x400ec70	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400ec5d	    0x4981ef980000	                           sub r15, 0x98	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400ec64	          0x4589e6	                          mov r14d, r12d	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x400ec67	          0x4589f4	                          mov r12d, r14d	      9641	syntax.c	FUNCTION_148	FOR_1
0x400ec6a	        0x4183ec01	                             sub r12d, 1	      9641	syntax.c	FUNCTION_148	FOR_1
0x400ec6e	            0x79d7	                           jns 0x400ec47	      9641	syntax.c	FUNCTION_148	FOR_1
0x400ec70	    0x488b05000000	            mov rax, qword [0x0400ec77] 	      4757	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4
0x400ec77	        0x4c8b4010	              mov r8, qword [rax + 0x10]	      4757	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4
0x400ec7b	    0x496390600200	         movsxd rdx, dword [r8 + 0x260] 	      4757	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4
0x400ec82	          0x4889d0	                            mov rax, rdx	      4757	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4
0x400ec85	        0x488d1492	                  lea rdx, [rdx + rdx*4]	      4757	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4
0x400ec89	        0x48c1e205	                              shl rdx, 5	      4757	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4
0x400ec8d	    0x4881eaa00000	                           sub rdx, 0xa0	      4757	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4
0x400ec94	            0xeb07	                           jmp 0x400ec9d	      4757	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4
0x400ec96	    0x4881eaa00000	                           sub rdx, 0xa0	      4757	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4
0x400ec9d	          0x83e801	                              sub eax, 1	      4757	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4
0x400eca0	            0x785d	                            js 0x400ecff	      4757	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4
0x400eca2	          0x4889d6	                            mov rsi, rdx	      4758	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x400eca5	    0x4903b0700200	             add rsi, qword [r8 + 0x270]	      4758	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x400ecac	         0xfbf7e54	           movsx edi, word [rsi + 0x54] 	      4758	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x400ecb0	          0x4439f7	                           cmp edi, r14d	      4758	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x400ecb3	            0x75e1	                           jne 0x400ec96	      4758	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x400ecb5	          0x803e02	                       cmp byte [rsi], 2	      4759	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x400ecb8	            0x75dc	                           jne 0x400ec96	      4759	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x400ecba	        0x488b5308	                mov rdx, qword [rbx + 8]	      4761	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x400ecbe	            0x8902	                    mov dword [rdx], eax	      4761	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x400ecc0	      0xe973feffff	                           jmp 0x400eb38	      4761	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x400ecc5	    0x8b1500000000	            mov edx, dword [0x0400eccb] 	      4707	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16
0x400eccb	            0x85d2	                           test edx, edx	      4707	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16
0x400eccd	            0x7565	                           jne 0x400ed34	      4707	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16
0x400eccf	         0xfb67806	               movzx edi, byte [rax + 6]	      4718	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	ELSE_4
0x400ecd3	        0x41897d00	                    mov dword [r13], edi	      4718	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	ELSE_4
0x400ecd7	      0xe800000000	                          call 0x400ecdc	      4724	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17	CALL_11
0x400ecdc	            0x85c0	                           test eax, eax	      4724	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17	CALL_11
0x400ecde	     0xf8488000000	                            je 0x400ed6c	      4724	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17	CALL_11
0x400ece4	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4730	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	CALL_14
0x400ece9	        0x488d7807	                      lea rdi, [rax + 7]	      4730	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	CALL_14
0x400eced	      0xe800000000	                          call 0x400ecf2	      4730	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	CALL_14
0x400ecf2	          0x4889c5	                            mov rbp, rax	      4730	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	CALL_14
0x400ecf5	      0x4889442418	             mov qword [rsp + 0x18], rax	      4730	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	CALL_14
0x400ecfa	      0xe96dfcffff	                           jmp 0x400e96c	      4730	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	CALL_14
0x400ecff	      0xba05000000	                              mov edx, 5	      4766	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_23
0x400ed04	      0xbe00000000	                              mov esi, 0	      4766	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_23
0x400ed09	            0x31ff	                            xor edi, edi	      4766	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_23
0x400ed0b	      0xe800000000	                          call 0x400ed10	      4766	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_23
0x400ed10	          0x4889ee	                            mov rsi, rbp	      4766	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_23
0x400ed13	          0x4889c7	                            mov rdi, rax	      4766	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_23
0x400ed16	      0xe800000000	                          call 0x400ed1b	      4766	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_23
0x400ed1b	          0x4889ef	                            mov rdi, rbp	      4767	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_24
0x400ed1e	            0x31ed	                            xor ebp, ebp	      4768	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24
0x400ed20	      0xe800000000	                          call 0x400ed25	      4767	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_24
0x400ed25	      0xe9cbfcffff	                           jmp 0x400e9f5	      4768	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24
0x400ed2a	      0x488b6c2418	            mov rbp, qword [rsp + 0x18] 	      4768	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24
0x400ed2f	      0xe9c1fcffff	                           jmp 0x400e9f5	      4768	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24
0x400ed34	        0x488d7806	                      lea rdi, [rax + 6]	      4710	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_9
0x400ed38	    0xff1500000000	                 call qword [0x0400ed3e]	      4710	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_9
0x400ed3e	        0x41894500	                    mov dword [r13], eax	      4710	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_9
0x400ed42	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4712	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_10
0x400ed47	        0x488d7806	                      lea rdi, [rax + 6]	      4712	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_10
0x400ed4b	    0xff1500000000	                 call qword [0x0400ed51]	      4712	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_10
0x400ed51	        0x418b7d00	                    mov edi, dword [r13]	      4712	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_10
0x400ed55	          0x83e801	                              sub eax, 1	      4712	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_10
0x400ed58	            0x4898	                                    cdqe	      4712	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_10
0x400ed5a	      0x4801442418	            add qword [rsp + 0x18], rax 	      4712	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_10
0x400ed5f	      0xe800000000	                          call 0x400ed64	      4724	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17	CALL_11
0x400ed64	            0x85c0	                           test eax, eax	      4724	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17	CALL_11
0x400ed66	     0xf8578ffffff	                           jne 0x400ece4	      4724	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17	CALL_11
0x400ed6c	      0xba05000000	                              mov edx, 5	      4726	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17	CALL_13
0x400ed71	      0xbe00000000	                              mov esi, 0	      4726	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17	CALL_13
0x400ed76	            0x31ff	                            xor edi, edi	      4742	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19	CALL_17
0x400ed78	      0xe800000000	                          call 0x400ed7d	      4742	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19	CALL_17
0x400ed7d	          0x4889c7	                            mov rdi, rax	      4742	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19	CALL_17
0x400ed80	      0xe800000000	                          call 0x400ed85	      4742	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19	CALL_17
0x400ed85	            0x31ed	                            xor ebp, ebp	      4743	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19
0x400ed87	      0xe969fcffff	                           jmp 0x400e9f5	      4743	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19
0x400ed8c	      0xba05000000	                              mov edx, 5	      4687	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_9	CALL_5
0x400ed91	      0xbe00000000	                              mov esi, 0	      4687	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_9	CALL_5
0x400ed96	            0xebde	                           jmp 0x400ed76	      4687	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_9	CALL_5
0x400ed98	      0xe800000000	                          call 0x400ed9d	      4785	syntax.c	FUNCTION_76
0x400ed9d	      0xba05000000	                              mov edx, 5	      4742	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19	CALL_17
0x400eda2	      0xbe00000000	                              mov esi, 0	      4742	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19	CALL_17
0x400eda7	            0xebcd	                           jmp 0x400ed76	      4742	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19	CALL_17
syn_match_linecont	DO,0:functions,0:IF,1:WHILE,0:CALL,3:ELSE,0:SWITCH,0:FOR,0	136
0x40043b0	            0x4154	                                push r12	      1034	syntax.c	FUNCTION_8
0x40043b2	              0x55	                                push rbp	      1034	syntax.c	FUNCTION_8
0x40043b3	              0x53	                                push rbx	      1034	syntax.c	FUNCTION_8
0x40043b4	    0x4881eca00100	                          sub rsp, 0x1a0	      1034	syntax.c	FUNCTION_8
0x40043bb	    0x488b1d000000	            mov rbx, qword [0x040043c2] 	      1039	syntax.c	FUNCTION_8	IF_1
0x40043c2	    0x64488b042528	                mov rax, qword fs:[0x28]	      1034	syntax.c	FUNCTION_8
0x40043cb	    0x488984249801	            mov qword [rsp + 0x198], rax	      1034	syntax.c	FUNCTION_8
0x40043d3	            0x31c0	                            xor eax, eax	      1034	syntax.c	FUNCTION_8
0x40043d5	    0x488b93c80200	           mov rdx, qword [rbx + 0x2c8] 	      1039	syntax.c	FUNCTION_8	IF_1
0x40043dc	          0x4885d2	                           test rdx, rdx	      1039	syntax.c	FUNCTION_8	IF_1
0x40043df	     0xf8493010000	                            je 0x4004578	      1039	syntax.c	FUNCTION_8	IF_1
0x40043e5	    0x488b05000000	            mov rax, qword [0x040043ec] 	      1014	syntax.c	FUNCTION_6	IF_1
0x40043ec	    0x483983b00400	           cmp qword [rbx + 0x4b0], rax 	      1014	syntax.c	FUNCTION_6	IF_1
0x40043f3	          0x4889fd	                            mov rbp, rdi	      1014	syntax.c	FUNCTION_6	IF_1
0x40043f6	            0x7464	                            je 0x400445c	      1014	syntax.c	FUNCTION_6	IF_1
0x40043f8	    0x488b3d000000	            mov rdi, qword [0x040043ff] 	      1016	syntax.c	FUNCTION_6	IF_1	CALL_1
0x40043ff	      0xba20000000	                           mov edx, 0x20	        59	string3.h	FUNCTION_171	CALL_3
0x4004404	    0x488b87a00900	           mov rax, qword [rdi + 0x9a0] 	        59	string3.h	FUNCTION_171	CALL_3
0x400440b	    0x4881c7a00900	                          add rdi, 0x9a0	        59	string3.h	FUNCTION_171	CALL_3
0x4004412	    0x488984247001	            mov qword [rsp + 0x170], rax	        59	string3.h	FUNCTION_171	CALL_3
0x400441a	        0x488b4708	                mov rax, qword [rdi + 8]	        59	string3.h	FUNCTION_171	CALL_3
0x400441e	    0x488984247801	            mov qword [rsp + 0x178], rax	        59	string3.h	FUNCTION_171	CALL_3
0x4004426	        0x488b4710	            mov rax, qword [rdi + 0x10] 	        59	string3.h	FUNCTION_171	CALL_3
0x400442a	    0x488984248001	            mov qword [rsp + 0x180], rax	        59	string3.h	FUNCTION_171	CALL_3
0x4004432	        0x488b4718	            mov rax, qword [rdi + 0x18] 	        59	string3.h	FUNCTION_171	CALL_3
0x4004436	    0x488984248801	            mov qword [rsp + 0x188], rax	        59	string3.h	FUNCTION_171	CALL_3
0x400443e	    0x488b05000000	            mov rax, qword [0x04004445] 	      1017	syntax.c	FUNCTION_6	IF_1	CALL_2
0x4004445	        0x488b7010	            mov rsi, qword [rax + 0x10] 	        59	string3.h	FUNCTION_171	CALL_3
0x4004449	    0x4881c68c0400	                          add rsi, 0x48c	        59	string3.h	FUNCTION_171	CALL_3
0x4004450	      0xe800000000	                          call 0x4004455	        59	string3.h	FUNCTION_171	CALL_3
0x4004455	    0x488b93c80200	           mov rdx, qword [rbx + 0x2c8] 	        59	string3.h	FUNCTION_171	CALL_3
0x400445c	    0x448b05000000	            mov r8d, dword [0x04004463] 	      3326	syntax.c	FUNCTION_43	IF_1
0x4004463	    0x8b8300030000	           mov eax, dword [rbx + 0x300] 	      1043	syntax.c	FUNCTION_8	IF_1
0x4004469	      0x4889542420	             mov qword [rsp + 0x20], rdx	      1044	syntax.c	FUNCTION_8	IF_1
0x400446e	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      3321	syntax.c	FUNCTION_43
0x4004476	          0x4585c0	                           test r8d, r8d	      3326	syntax.c	FUNCTION_43	IF_1
0x4004479	    0x898424680100	            mov dword [rsp + 0x168], eax	      1043	syntax.c	FUNCTION_8	IF_1
0x4004480	     0xf85a2010000	                           jne 0x4004628	      3326	syntax.c	FUNCTION_43	IF_1
0x4004486	    0x488b15000000	            mov rdx, qword [0x0400448d] 	      3330	syntax.c	FUNCTION_43
0x400448d	        0x4883ec08	                              sub rsp, 8	      3331	syntax.c	FUNCTION_43	CALL_2
0x4004491	    0x488b35000000	            mov rsi, qword [0x04004498] 	      3331	syntax.c	FUNCTION_43	CALL_2
0x4004498	    0x4c8b0d000000	              mov r9, qword [0x0400449f]	      3331	syntax.c	FUNCTION_43	CALL_2
0x400449f	          0x4531c0	                            xor r8d, r8d	      3331	syntax.c	FUNCTION_43	CALL_2
0x40044a2	          0x4889e9	                            mov rcx, rbp	      3331	syntax.c	FUNCTION_43	CALL_2
0x40044a5	    0x488b82981500	          mov rax, qword [rdx + 0x1598] 	      3330	syntax.c	FUNCTION_43
0x40044ac	    0x898424740100	            mov dword [rsp + 0x174], eax	      3330	syntax.c	FUNCTION_43
0x40044b3	      0x488d442414	                   lea rax, [rsp + 0x14]	      3331	syntax.c	FUNCTION_43	CALL_2
0x40044b8	              0x50	                                push rax	      3331	syntax.c	FUNCTION_43	CALL_2
0x40044b9	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      3331	syntax.c	FUNCTION_43	CALL_2
0x40044be	      0xe800000000	                          call 0x40044c3	      3331	syntax.c	FUNCTION_43	CALL_2
0x40044c3	    0x8b3d00000000	            mov edi, dword [0x040044c9] 	      3340	syntax.c	FUNCTION_43	IF_2
0x40044c9	          0x4989c4	                            mov r12, rax	      3331	syntax.c	FUNCTION_43	CALL_2
0x40044cc	              0x59	                                 pop rcx	      3340	syntax.c	FUNCTION_43	IF_2
0x40044cd	              0x5e	                                 pop rsi	      3340	syntax.c	FUNCTION_43	IF_2
0x40044ce	            0x85ff	                           test edi, edi	      3340	syntax.c	FUNCTION_43	IF_2
0x40044d0	     0xf85ea000000	                           jne 0x40045c0	      3340	syntax.c	FUNCTION_43	IF_2
0x40044d6	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      3352	syntax.c	FUNCTION_43	IF_5
0x40044da	            0x85c0	                           test eax, eax	      3352	syntax.c	FUNCTION_43	IF_5
0x40044dc	     0xf84be000000	                            je 0x40045a0	      3352	syntax.c	FUNCTION_43	IF_5
0x40044e2	    0x488b05000000	            mov rax, qword [0x040044e9] 	      3353	syntax.c	FUNCTION_43	IF_5
0x40044e9	          0x4585e4	                         test r12d, r12d	      3356	syntax.c	FUNCTION_43	IF_6
0x40044ec	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      3353	syntax.c	FUNCTION_43	IF_5
0x40044f0	    0xc78254020000	              mov dword [rdx + 0x254], 1	      3353	syntax.c	FUNCTION_43	IF_5
0x40044fa	     0xf8eb4000000	                           jle 0x40045b4	      3356	syntax.c	FUNCTION_43	IF_6
0x4004500	      0x48016c2428	            add qword [rsp + 0x28], rbp 	      3358	syntax.c	FUNCTION_43	IF_6
0x4004505	    0x4801ac24c800	            add qword [rsp + 0xc8], rbp 	      3359	syntax.c	FUNCTION_43	IF_6
0x400450d	      0xb801000000	                              mov eax, 1	      3360	syntax.c	FUNCTION_43	IF_6
0x4004512	    0x488b1d000000	            mov rbx, qword [0x04004519] 	      1025	syntax.c	FUNCTION_7	IF_1
0x4004519	    0x48399ab00400	           cmp qword [rdx + 0x4b0], rbx 	      1025	syntax.c	FUNCTION_7	IF_1
0x4004520	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      1047	syntax.c	FUNCTION_8	IF_1
0x4004525	    0x488b0d000000	            mov rcx, qword [0x0400452c] 	      1047	syntax.c	FUNCTION_8	IF_1
0x400452c	    0x4889b1c80200	            mov qword [rcx + 0x2c8], rsi	      1047	syntax.c	FUNCTION_8	IF_1
0x4004533	            0x7443	                            je 0x4004578	      1025	syntax.c	FUNCTION_7	IF_1
0x4004535	    0x488b15000000	            mov rdx, qword [0x0400453c] 	        59	string3.h	FUNCTION_171	CALL_3
0x400453c	    0x488b8c247001	           mov rcx, qword [rsp + 0x170] 	        59	string3.h	FUNCTION_171	CALL_3
0x4004544	    0x48898aa00900	            mov qword [rdx + 0x9a0], rcx	        59	string3.h	FUNCTION_171	CALL_3
0x400454b	    0x488b8c247801	           mov rcx, qword [rsp + 0x178] 	        59	string3.h	FUNCTION_171	CALL_3
0x4004553	    0x48898aa80900	            mov qword [rdx + 0x9a8], rcx	        59	string3.h	FUNCTION_171	CALL_3
0x400455a	    0x488b8c248001	           mov rcx, qword [rsp + 0x180] 	        59	string3.h	FUNCTION_171	CALL_3
0x4004562	    0x48898ab00900	            mov qword [rdx + 0x9b0], rcx	        59	string3.h	FUNCTION_171	CALL_3
0x4004569	    0x488b8c248801	           mov rcx, qword [rsp + 0x188] 	        59	string3.h	FUNCTION_171	CALL_3
0x4004571	    0x48898ab80900	            mov qword [rdx + 0x9b8], rcx	        59	string3.h	FUNCTION_171	CALL_3
0x4004578	    0x488bb4249801	           mov rsi, qword [rsp + 0x198] 	      1052	syntax.c	FUNCTION_8
0x4004580	    0x644833342528	                xor rsi, qword fs:[0x28]	      1052	syntax.c	FUNCTION_8
0x4004589	     0xf85ed000000	                           jne 0x400467c	      1052	syntax.c	FUNCTION_8
0x400458f	    0x4881c4a00100	                          add rsp, 0x1a0	      1052	syntax.c	FUNCTION_8
0x4004596	              0x5b	                                 pop rbx	      1052	syntax.c	FUNCTION_8
0x4004597	              0x5d	                                 pop rbp	      1052	syntax.c	FUNCTION_8
0x4004598	            0x415c	                                 pop r12	      1052	syntax.c	FUNCTION_8
0x400459a	              0xc3	                                     ret	      1052	syntax.c	FUNCTION_8
0x400459b	       0xf1f440000	                   nop dword [rax + rax]	      1052	syntax.c	FUNCTION_8
0x40045a0	    0x488b05000000	            mov rax, qword [0x040045a7] 	      1052	syntax.c	FUNCTION_8
0x40045a7	          0x4585e4	                         test r12d, r12d	      3356	syntax.c	FUNCTION_43	IF_6
0x40045aa	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      3356	syntax.c	FUNCTION_43	IF_6
0x40045ae	     0xf8f4cffffff	                            jg 0x4004500	      3356	syntax.c	FUNCTION_43	IF_6
0x40045b4	            0x31c0	                            xor eax, eax	      3362	syntax.c	FUNCTION_43
0x40045b6	      0xe957ffffff	                           jmp 0x4004512	      3362	syntax.c	FUNCTION_43
0x40045bb	       0xf1f440000	                   nop dword [rax + rax]	      3362	syntax.c	FUNCTION_43
0x40045c0	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      3342	syntax.c	FUNCTION_43	IF_2	CALL_3
0x40045c5	      0xe800000000	                          call 0x40045ca	      3342	syntax.c	FUNCTION_43	IF_2	CALL_3
0x40045ca	    0x488dbbd00200	                  lea rdi, [rbx + 0x2d0]	      3343	syntax.c	FUNCTION_43	IF_2	CALL_4
0x40045d1	      0x488d742410	                   lea rsi, [rsp + 0x10]	      3343	syntax.c	FUNCTION_43	IF_2	CALL_4
0x40045d6	      0xe800000000	                          call 0x40045db	      3343	syntax.c	FUNCTION_43	IF_2	CALL_4
0x40045db	    0x488db3e00200	                  lea rsi, [rbx + 0x2e0]	      3344	syntax.c	FUNCTION_43	IF_2	IF_3	CALL_5
0x40045e2	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      3344	syntax.c	FUNCTION_43	IF_2	IF_3	CALL_5
0x40045e7	      0xe800000000	                          call 0x40045ec	      3344	syntax.c	FUNCTION_43	IF_2	IF_3	CALL_5
0x40045ec	            0x85c0	                           test eax, eax	      3344	syntax.c	FUNCTION_43	IF_2	IF_3	CALL_5
0x40045ee	            0x7850	                            js 0x4004640	      3344	syntax.c	FUNCTION_43	IF_2	IF_3	CALL_5
0x40045f0	    0x488383f00200	              add qword [rbx + 0x2f0], 1	      3346	syntax.c	FUNCTION_43	IF_2
0x40045f8	          0x4585e4	                         test r12d, r12d	      3347	syntax.c	FUNCTION_43	IF_2	IF_4
0x40045fb	            0x7e63	                           jle 0x4004660	      3347	syntax.c	FUNCTION_43	IF_2	IF_4
0x40045fd	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      3352	syntax.c	FUNCTION_43	IF_5
0x4004601	    0x488383f80200	              add qword [rbx + 0x2f8], 1	      3348	syntax.c	FUNCTION_43	IF_2	IF_4
0x4004609	            0x85d2	                           test edx, edx	      3352	syntax.c	FUNCTION_43	IF_5
0x400460b	     0xf85d1feffff	                           jne 0x40044e2	      3352	syntax.c	FUNCTION_43	IF_5
0x4004611	    0x488b05000000	            mov rax, qword [0x04004618] 	      3352	syntax.c	FUNCTION_43	IF_5
0x4004618	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      3352	syntax.c	FUNCTION_43	IF_5
0x400461c	      0xe9dffeffff	                           jmp 0x4004500	      3352	syntax.c	FUNCTION_43	IF_5
0x4004621	     0xf1f80000000	                         nop dword [rax]	      3352	syntax.c	FUNCTION_43	IF_5
0x4004628	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      3327	syntax.c	FUNCTION_43	CALL_1
0x400462d	      0xe800000000	                          call 0x4004632	      3327	syntax.c	FUNCTION_43	CALL_1
0x4004632	      0xe94ffeffff	                           jmp 0x4004486	      3327	syntax.c	FUNCTION_43	CALL_1
0x4004637	    0x660f1f840000	                    nop word [rax + rax]	      3327	syntax.c	FUNCTION_43	CALL_1
0x4004640	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3345	syntax.c	FUNCTION_43	IF_2	IF_3
0x4004645	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      3345	syntax.c	FUNCTION_43	IF_2	IF_3
0x400464a	    0x488983e00200	            mov qword [rbx + 0x2e0], rax	      3345	syntax.c	FUNCTION_43	IF_2	IF_3
0x4004651	    0x488993e80200	            mov qword [rbx + 0x2e8], rdx	      3345	syntax.c	FUNCTION_43	IF_2	IF_3
0x4004658	            0xeb96	                           jmp 0x40045f0	      3345	syntax.c	FUNCTION_43	IF_2	IF_3
0x400465a	    0x660f1f440000	                    nop word [rax + rax]	      3345	syntax.c	FUNCTION_43	IF_2	IF_3
0x4004660	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      3352	syntax.c	FUNCTION_43	IF_5
0x4004664	            0x85c0	                           test eax, eax	      3352	syntax.c	FUNCTION_43	IF_5
0x4004666	     0xf8576feffff	                           jne 0x40044e2	      3352	syntax.c	FUNCTION_43	IF_5
0x400466c	    0x488b15000000	            mov rdx, qword [0x04004673] 	      3352	syntax.c	FUNCTION_43	IF_5
0x4004673	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      3352	syntax.c	FUNCTION_43	IF_5
0x4004677	      0xe996feffff	                           jmp 0x4004512	      3352	syntax.c	FUNCTION_43	IF_5
0x400467c	      0xe800000000	                          call 0x4004681	      1052	syntax.c	FUNCTION_8
reset_expand_highlight	DO,0:functions,0:IF,0:WHILE,0:CALL,0:ELSE,0:SWITCH,0:FOR,0	4
0x400b250	    0xc70500000000	               mov dword [0x0400b25a], 0	      6468	syntax.c	FUNCTION_98
0x400b25a	    0xc70500000000	               mov dword [0x0400b264], 0	      6468	syntax.c	FUNCTION_98
0x400b264	    0xc70500000000	               mov dword [0x0400b26e], 0	      6468	syntax.c	FUNCTION_98
0x400b26e	              0xc3	                                     ret	      6468	syntax.c	FUNCTION_98
syn_cmd_match	DO,0:functions,0:IF,8:WHILE,0:CALL,21:ELSE,1:SWITCH,0:FOR,0	227
0x400f8f0	            0x4157	                                push r15	      5027	syntax.c	FUNCTION_80
0x400f8f2	            0x4156	                                push r14	      5027	syntax.c	FUNCTION_80
0x400f8f4	          0x4189f6	                           mov r14d, esi	      5027	syntax.c	FUNCTION_80
0x400f8f7	            0x4155	                                push r13	      5027	syntax.c	FUNCTION_80
0x400f8f9	            0x4154	                                push r12	      5027	syntax.c	FUNCTION_80
0x400f8fb	              0x55	                                push rbp	      5027	syntax.c	FUNCTION_80
0x400f8fc	              0x53	                                push rbx	      5027	syntax.c	FUNCTION_80
0x400f8fd	          0x4889fb	                            mov rbx, rdi	      5027	syntax.c	FUNCTION_80
0x400f900	    0x4881ecf80000	                           sub rsp, 0xf8	      5027	syntax.c	FUNCTION_80
0x400f907	          0x4c8b27	                    mov r12, qword [rdi]	      5028	syntax.c	FUNCTION_80
0x400f90a	    0x64488b042528	                mov rax, qword fs:[0x28]	      5027	syntax.c	FUNCTION_80
0x400f913	    0x48898424e800	             mov qword [rsp + 0xe8], rax	      5027	syntax.c	FUNCTION_80
0x400f91b	            0x31c0	                            xor eax, eax	      5027	syntax.c	FUNCTION_80
0x400f91d	    0xc70424000000	                      mov dword [rsp], 0	      5035	syntax.c	FUNCTION_80
0x400f924	    0xc74424040000	                  mov dword [rsp + 4], 0	      5036	syntax.c	FUNCTION_80
0x400f92c	          0x4c89e7	                            mov rdi, r12	      4582	syntax.c	FUNCTION_75	CALL_1
0x400f92f	      0xe800000000	                          call 0x400f934	      4582	syntax.c	FUNCTION_75	CALL_1
0x400f934	          0x4889c7	                            mov rdi, rax	      4583	syntax.c	FUNCTION_75	CALL_2
0x400f937	          0x4989c5	                            mov r13, rax	      4582	syntax.c	FUNCTION_75	CALL_1
0x400f93a	      0xe800000000	                          call 0x400f93f	      4583	syntax.c	FUNCTION_75	CALL_2
0x400f93f	      0x410fb63c24	                   movzx edi, byte [r12]	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x400f944	          0x4889c5	                            mov rbp, rax	      4583	syntax.c	FUNCTION_75	CALL_2
0x400f947	      0xe800000000	                          call 0x400f94c	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x400f94c	            0x85c0	                           test eax, eax	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x400f94e	     0xf85ec010000	                           jne 0x400fb40	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x400f954	        0x807d0000	                       cmp byte [rbp], 0	      4590	syntax.c	FUNCTION_75	IF_1
0x400f958	      0xbf00000000	                              mov edi, 0	      4590	syntax.c	FUNCTION_75	IF_1
0x400f95d	        0x480f45fd	                         cmovne rdi, rbp	      4590	syntax.c	FUNCTION_75	IF_1
0x400f961	          0x8b4b30	            mov ecx, dword [rbx + 0x30] 	      5049	syntax.c	FUNCTION_80	CALL_2
0x400f964	          0x4531ff	                          xor r15d, r15d	      5044	syntax.c	FUNCTION_80
0x400f967	      0x488d542404	                      lea rdx, [rsp + 4]	      5049	syntax.c	FUNCTION_80	CALL_2
0x400f96c	          0x4585f6	                         test r14d, r14d	      5044	syntax.c	FUNCTION_80
0x400f96f	      0x488d742410	                   lea rsi, [rsp + 0x10]	      5049	syntax.c	FUNCTION_80	CALL_2
0x400f974	          0x4889e0	                            mov rax, rsp	      5044	syntax.c	FUNCTION_80
0x400f977	        0x490f44c7	                          cmove rax, r15	      5044	syntax.c	FUNCTION_80
0x400f97b	    0xc74424100000	               mov dword [rsp + 0x10], 0	      5042	syntax.c	FUNCTION_80
0x400f983	    0xc74424140000	               mov dword [rsp + 0x14], 0	      5043	syntax.c	FUNCTION_80
0x400f98b	      0x4889442418	             mov qword [rsp + 0x18], rax	      5044	syntax.c	FUNCTION_80
0x400f990	      0xc644242001	                mov byte [rsp + 0x20], 1	      5045	syntax.c	FUNCTION_80
0x400f995	      0x488d6c2440	                   lea rbp, [rsp + 0x40]	        90	string3.h	FUNCTION_173	CALL_6
0x400f99a	    0x48c744242800	               mov qword [rsp + 0x28], 0	      5046	syntax.c	FUNCTION_80
0x400f9a3	    0x48c744243000	               mov qword [rsp + 0x30], 0	      5047	syntax.c	FUNCTION_80
0x400f9ac	    0x48c744243800	               mov qword [rsp + 0x38], 0	      5048	syntax.c	FUNCTION_80
0x400f9b5	      0xe846efffff	                call sym.get_syn_options	      5049	syntax.c	FUNCTION_80	CALL_2
0x400f9ba	          0x4889c2	                            mov rdx, rax	      5049	syntax.c	FUNCTION_80	CALL_2
0x400f9bd	    0x488b05000000	            mov rax, qword [0x0400f9c4] 	      5728	syntax.c	FUNCTION_89
0x400f9c4	      0xb914000000	                           mov ecx, 0x14	        90	string3.h	FUNCTION_173	CALL_6
0x400f9c9	          0x4889ef	                            mov rdi, rbp	        90	string3.h	FUNCTION_173	CALL_6
0x400f9cc	          0x4889ee	                            mov rsi, rbp	      5054	syntax.c	FUNCTION_80	CALL_5
0x400f9cf	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5728	syntax.c	FUNCTION_89
0x400f9d3	    0xc78068020000	          mov dword [rax + 0x268], 0xa0 	      5728	syntax.c	FUNCTION_89
0x400f9dd	    0xc7806c020000	            mov dword [rax + 0x26c], 0xa	      5729	syntax.c	FUNCTION_89
0x400f9e7	          0x4c89f8	                            mov rax, r15	        90	string3.h	FUNCTION_173	CALL_6
0x400f9ea	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_173	CALL_6
0x400f9ed	          0x4889d7	                            mov rdi, rdx	      5054	syntax.c	FUNCTION_80	CALL_5
0x400f9f0	      0xe8cb0affff	                call sym.get_syn_pattern	      5054	syntax.c	FUNCTION_80	CALL_5
0x400f9f5	          0x4989c7	                            mov r15, rax	      5054	syntax.c	FUNCTION_80	CALL_5
0x400f9f8	      0xe800000000	                          call 0x400f9fd	      5055	syntax.c	FUNCTION_80	IF_1	CALL_6
0x400f9fd	            0x85c0	                           test eax, eax	      5055	syntax.c	FUNCTION_80	IF_1	CALL_6
0x400f9ff	            0x740d	                            je 0x400fa0e	      5055	syntax.c	FUNCTION_80	IF_1	CALL_6
0x400fa01	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      5055	syntax.c	FUNCTION_80	IF_1	CALL_6
0x400fa05	          0xf6c408	                              test ah, 8	      5055	syntax.c	FUNCTION_80	IF_1	CALL_6
0x400fa08	     0xf8422010000	                            je 0x400fb30	      5055	syntax.c	FUNCTION_80	IF_1	CALL_6
0x400fa0e	          0x8b4b30	            mov ecx, dword [rbx + 0x30] 	      5059	syntax.c	FUNCTION_80	CALL_7
0x400fa11	      0x488d542404	                      lea rdx, [rsp + 4]	      5059	syntax.c	FUNCTION_80	CALL_7
0x400fa16	      0x488d742410	                   lea rsi, [rsp + 0x10]	      5059	syntax.c	FUNCTION_80	CALL_7
0x400fa1b	          0x4c89ff	                            mov rdi, r15	      5059	syntax.c	FUNCTION_80	CALL_7
0x400fa1e	      0xe8ddeeffff	                call sym.get_syn_options	      5059	syntax.c	FUNCTION_80	CALL_7
0x400fa23	          0x4885c0	                           test rax, rax	      5061	syntax.c	FUNCTION_80	IF_2
0x400fa26	          0x4989c7	                            mov r15, rax	      5059	syntax.c	FUNCTION_80	CALL_7
0x400fa29	            0x741d	                            je 0x400fa48	      5061	syntax.c	FUNCTION_80	IF_2
0x400fa2b	          0x4889c7	                            mov rdi, rax	      5066	syntax.c	FUNCTION_80	IF_2	CALL_8
0x400fa2e	      0xe800000000	                          call 0x400fa33	      5066	syntax.c	FUNCTION_80	IF_2	CALL_8
0x400fa33	        0x48894308	                mov qword [rbx + 8], rax	      5066	syntax.c	FUNCTION_80	IF_2	CALL_8
0x400fa37	        0x410fb63f	                   movzx edi, byte [r15]	      5067	syntax.c	FUNCTION_80	IF_2	IF_3	CALL_9
0x400fa3b	      0xe800000000	                          call 0x400fa40	      5067	syntax.c	FUNCTION_80	IF_2	IF_3	CALL_9
0x400fa40	            0x85c0	                           test eax, eax	      5067	syntax.c	FUNCTION_80	IF_2	IF_3	CALL_9
0x400fa42	     0xf8580000000	                           jne 0x400fac8	      5067	syntax.c	FUNCTION_80	IF_2	IF_3	CALL_9
0x400fa48	    0x488bbc24a800	            mov rdi, qword [rsp + 0xa8] 	      5113	syntax.c	FUNCTION_80	CALL_15
0x400fa50	      0xe800000000	                          call 0x400fa55	      5113	syntax.c	FUNCTION_80	CALL_15
0x400fa55	    0x488bbc24a000	            mov rdi, qword [rsp + 0xa0] 	      5114	syntax.c	FUNCTION_80	CALL_16
0x400fa5d	      0xe800000000	                          call 0x400fa62	      5114	syntax.c	FUNCTION_80	CALL_16
0x400fa62	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      5115	syntax.c	FUNCTION_80	CALL_17
0x400fa67	      0xe800000000	                          call 0x400fa6c	      5115	syntax.c	FUNCTION_80	CALL_17
0x400fa6c	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      5116	syntax.c	FUNCTION_80	CALL_18
0x400fa71	      0xe800000000	                          call 0x400fa76	      5116	syntax.c	FUNCTION_80	CALL_18
0x400fa76	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      5117	syntax.c	FUNCTION_80	CALL_19
0x400fa7b	      0xe800000000	                          call 0x400fa80	      5117	syntax.c	FUNCTION_80	CALL_19
0x400fa80	      0xbe00000000	                              mov esi, 0	      5120	syntax.c	FUNCTION_80	CALL_21
0x400fa85	            0x31ff	                            xor edi, edi	      5120	syntax.c	FUNCTION_80	CALL_21
0x400fa87	      0xba05000000	                              mov edx, 5	      5120	syntax.c	FUNCTION_80	CALL_21
0x400fa8c	      0xe800000000	                          call 0x400fa91	      5120	syntax.c	FUNCTION_80	CALL_21
0x400fa91	          0x4c89e6	                            mov rsi, r12	      5120	syntax.c	FUNCTION_80	CALL_21
0x400fa94	          0x4889c7	                            mov rdi, rax	      5120	syntax.c	FUNCTION_80	CALL_21
0x400fa97	      0xe800000000	                          call 0x400fa9c	      5120	syntax.c	FUNCTION_80	CALL_21
0x400fa9c	    0x488b8424e800	            mov rax, qword [rsp + 0xe8] 	      5121	syntax.c	FUNCTION_80
0x400faa4	    0x644833042528	                xor rax, qword fs:[0x28]	      5121	syntax.c	FUNCTION_80
0x400faad	     0xf8532020000	                           jne 0x400fce5	      5121	syntax.c	FUNCTION_80
0x400fab3	    0x4881c4f80000	                           add rsp, 0xf8	      5121	syntax.c	FUNCTION_80
0x400faba	              0x5b	                                 pop rbx	      5121	syntax.c	FUNCTION_80
0x400fabb	              0x5d	                                 pop rbp	      5121	syntax.c	FUNCTION_80
0x400fabc	            0x415c	                                 pop r12	      5121	syntax.c	FUNCTION_80
0x400fabe	            0x415d	                                 pop r13	      5121	syntax.c	FUNCTION_80
0x400fac0	            0x415e	                                 pop r14	      5121	syntax.c	FUNCTION_80
0x400fac2	            0x415f	                                 pop r15	      5121	syntax.c	FUNCTION_80
0x400fac4	              0xc3	                                     ret	      5121	syntax.c	FUNCTION_80
0x400fac5	           0xf1f00	                         nop dword [rax]	      5121	syntax.c	FUNCTION_80
0x400fac8	          0x8b7b30	            mov edi, dword [rbx + 0x30] 	      5067	syntax.c	FUNCTION_80	IF_2	IF_3	CALL_9
0x400facb	            0x85ff	                           test edi, edi	      5067	syntax.c	FUNCTION_80	IF_2	IF_3	CALL_9
0x400facd	     0xf8575ffffff	                           jne 0x400fa48	      5067	syntax.c	FUNCTION_80	IF_2	IF_3	CALL_9
0x400fad3	    0x488b05000000	            mov rax, qword [0x0400fada] 	      5069	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_10
0x400fada	      0xbe01000000	                              mov esi, 1	      5069	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_10
0x400fadf	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      5069	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_10
0x400fae3	    0x4881c7600200	                          add rdi, 0x260	      5069	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_10
0x400faea	      0xe800000000	                          call 0x400faef	      5069	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_10
0x400faef	            0x85c0	                           test eax, eax	      5069	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_10
0x400faf1	            0x755d	                           jne 0x400fb50	      5069	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_10
0x400faf3	    0x488bbc24a800	            mov rdi, qword [rsp + 0xa8] 	      5113	syntax.c	FUNCTION_80	CALL_15
0x400fafb	      0xe800000000	                          call 0x400fb00	      5113	syntax.c	FUNCTION_80	CALL_15
0x400fb00	    0x488bbc24a000	            mov rdi, qword [rsp + 0xa0] 	      5114	syntax.c	FUNCTION_80	CALL_16
0x400fb08	      0xe800000000	                          call 0x400fb0d	      5114	syntax.c	FUNCTION_80	CALL_16
0x400fb0d	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      5115	syntax.c	FUNCTION_80	CALL_17
0x400fb12	      0xe800000000	                          call 0x400fb17	      5115	syntax.c	FUNCTION_80	CALL_17
0x400fb17	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      5116	syntax.c	FUNCTION_80	CALL_18
0x400fb1c	      0xe800000000	                          call 0x400fb21	      5116	syntax.c	FUNCTION_80	CALL_18
0x400fb21	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      5117	syntax.c	FUNCTION_80	CALL_19
0x400fb26	      0xe800000000	                          call 0x400fb2b	      5117	syntax.c	FUNCTION_80	CALL_19
0x400fb2b	      0xe96cffffff	                           jmp 0x400fa9c	      5117	syntax.c	FUNCTION_80	CALL_19
0x400fb30	          0x83c808	                               or eax, 8	      5056	syntax.c	FUNCTION_80	IF_1
0x400fb33	        0x89442410	             mov dword [rsp + 0x10], eax	      5056	syntax.c	FUNCTION_80	IF_1
0x400fb37	      0xe9d2feffff	                           jmp 0x400fa0e	      5056	syntax.c	FUNCTION_80	IF_1
0x400fb3c	         0xf1f4000	                         nop dword [rax]	      5056	syntax.c	FUNCTION_80	IF_1
0x400fb40	            0x31ff	                            xor edi, edi	      4590	syntax.c	FUNCTION_75	IF_1
0x400fb42	      0xe91afeffff	                           jmp 0x400f961	      4590	syntax.c	FUNCTION_75	IF_1
0x400fb47	    0x660f1f840000	                    nop word [rax + rax]	      4590	syntax.c	FUNCTION_75	IF_1
0x400fb50	          0x4c89ee	                            mov rsi, r13	      5070	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_11
0x400fb53	          0x4c89e7	                            mov rdi, r12	      5070	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_11
0x400fb56	          0x4c29e6	                            sub rsi, r12	      5070	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_11
0x400fb59	      0xe800000000	                          call 0x400fb5e	      5070	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_11
0x400fb5e	            0x85c0	                           test eax, eax	      5070	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_11
0x400fb60	            0x89c3	                            mov ebx, eax	      5070	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_11
0x400fb62	            0x748f	                            je 0x400faf3	      5070	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_11
0x400fb64	      0x448b442410	            mov r8d, dword [rsp + 0x10] 	      4795	syntax.c	FUNCTION_77	IF_1
0x400fb69	    0x488b15000000	            mov rdx, qword [0x0400fb70] 	      4795	syntax.c	FUNCTION_77	IF_1
0x400fb70	        0x41f6c001	                             test r8b, 1	      4795	syntax.c	FUNCTION_77	IF_1
0x400fb74	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      4795	syntax.c	FUNCTION_77	IF_1
0x400fb78	            0x751e	                           jne 0x400fb98	      4795	syntax.c	FUNCTION_77	IF_1
0x400fb7a	    0x8b8104030000	           mov eax, dword [rcx + 0x304] 	      4795	syntax.c	FUNCTION_77	IF_1
0x400fb80	            0x85c0	                           test eax, eax	      4795	syntax.c	FUNCTION_77	IF_1
0x400fb82	            0x7414	                            je 0x400fb98	      4795	syntax.c	FUNCTION_77	IF_1
0x400fb84	        0x4183c801	                               or r8d, 1	      4797	syntax.c	FUNCTION_77
0x400fb88	      0x3dd7590000	                         cmp eax, 0x59d7	      4798	syntax.c	FUNCTION_77	IF_2
0x400fb8d	      0x4489442410	             mov dword [rsp + 0x10], r8d	      4797	syntax.c	FUNCTION_77
0x400fb92	     0xf8fdd000000	                            jg 0x400fc75	      4798	syntax.c	FUNCTION_77	IF_2
0x400fb98	          0x4189dc	                           mov r12d, ebx	      4798	syntax.c	FUNCTION_77	IF_2
0x400fb9b	    0x486381600200	        movsxd rax, dword [rcx + 0x260] 	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400fba2	          0x4889ee	                            mov rsi, rbp	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400fba5	        0x488d0480	                  lea rax, [rax + rax*4]	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400fba9	        0x48c1e005	                              shl rax, 5	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400fbad	          0x4889c7	                            mov rdi, rax	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400fbb0	    0x4803b9700200	            add rdi, qword [rcx + 0x270]	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400fbb7	      0xb914000000	                           mov ecx, 0x14	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400fbbc	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400fbbf	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      5079	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400fbc3	    0x488b89700200	           mov rcx, qword [rcx + 0x270] 	      5079	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400fbca	      0x4488740101	          mov byte [rcx + rax + 1], r14b	      5079	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400fbcf	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      5080	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400fbd3	    0x488b89700200	           mov rcx, qword [rcx + 0x270] 	      5080	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400fbda	        0xc6040101	                 mov byte [rcx + rax], 1	      5080	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400fbde	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      5081	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400fbe2	    0x8b0d00000000	            mov ecx, dword [0x0400fbe8] 	      5082	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400fbe8	        0x8b742404	                mov esi, dword [rsp + 4]	      5089	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400fbec	    0x480382700200	            add rax, qword [rdx + 0x270]	      5081	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400fbf3	          0x894850	             mov dword [rax + 0x50], ecx	      5082	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400fbf6	          0x8b0c24	                    mov ecx, dword [rsp]	      5084	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400fbf9	      0x6644896054	             mov word [rax + 0x54], r12w	      5081	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400fbfe	        0x44894024	             mov dword [rax + 0x24], r8d	      5083	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400fc02	          0x897028	             mov dword [rax + 0x28], esi	      5089	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400fc05	          0x894830	             mov dword [rax + 0x30], ecx	      5084	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400fc08	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      5085	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400fc0d	        0x48894840	             mov qword [rax + 0x40], rcx	      5085	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400fc11	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      5087	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400fc16	          0x4885c9	                           test rcx, rcx	      5091	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_5
0x400fc19	        0x48894858	             mov qword [rax + 0x58], rcx	      5086	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400fc1d	            0x740a	                            je 0x400fc29	      5091	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_5
0x400fc1f	    0xc78298020000	              mov dword [rdx + 0x298], 1	      5092	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_5
0x400fc29	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      5093	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400fc2e	        0x48894848	             mov qword [rax + 0x48], rcx	      5093	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400fc32	    0x838260020000	              add dword [rdx + 0x260], 1	      5094	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x400fc39	        0x41f6c030	                          test r8b, 0x30	      5097	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_6
0x400fc3d	            0x7407	                            je 0x400fc46	      5097	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_6
0x400fc3f	    0x838a9c020000	               or dword [rdx + 0x29c], 2	      5098	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_6
0x400fc46	    0x4181e0002000	                         and r8d, 0x2000	      5100	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_7
0x400fc4d	            0x7407	                            je 0x400fc56	      5100	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_7
0x400fc4f	    0x83820c030000	              add dword [rdx + 0x30c], 1	      5101	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_7
0x400fc56	      0xbf23000000	                           mov edi, 0x23	      5104	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_13
0x400fc5b	      0xe800000000	                          call 0x400fc60	      5104	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_13
0x400fc60	    0x488b05000000	            mov rax, qword [0x0400fc67] 	      5105	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_14
0x400fc67	        0x488b7810	            mov rdi, qword [rax + 0x10] 	      5105	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_14
0x400fc6b	      0xe800000000	                          call 0x400fc70	      5105	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_14
0x400fc70	      0xe927feffff	                           jmp 0x400fa9c	      5105	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_14
0x400fc75	      0xbf04000000	                              mov edi, 4	      4801	syntax.c	FUNCTION_77	IF_2	CALL_1
0x400fc7a	          0x4189dc	                           mov r12d, ebx	      4801	syntax.c	FUNCTION_77	IF_2	CALL_1
0x400fc7d	      0xe800000000	                          call 0x400fc82	      4801	syntax.c	FUNCTION_77	IF_2	CALL_1
0x400fc82	          0x4885c0	                           test rax, rax	      4804	syntax.c	FUNCTION_77	IF_2	IF_3
0x400fc85	      0x4889442408	                mov qword [rsp + 8], rax	      4801	syntax.c	FUNCTION_77	IF_2	CALL_1
0x400fc8a	            0x7444	                            je 0x400fcd0	      4804	syntax.c	FUNCTION_77	IF_2	IF_3
0x400fc8c	    0x488b15000000	            mov rdx, qword [0x0400fc93] 	      4802	syntax.c	FUNCTION_77	IF_2
0x400fc93	            0x31f6	                            xor esi, esi	      4807	syntax.c	FUNCTION_77	IF_2	IF_3
0x400fc95	          0x4189dc	                           mov r12d, ebx	      4806	syntax.c	FUNCTION_77	IF_2	IF_3
0x400fc98	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      4802	syntax.c	FUNCTION_77	IF_2
0x400fc9c	    0x8b9104030000	           mov edx, dword [rcx + 0x304] 	      4802	syntax.c	FUNCTION_77	IF_2
0x400fca2	        0x66897002	                  mov word [rax + 2], si	      4807	syntax.c	FUNCTION_77	IF_2	IF_3
0x400fca6	      0x488d742408	                      lea rsi, [rsp + 8]	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x400fcab	          0x668918	                      mov word [rax], bx	      4806	syntax.c	FUNCTION_77	IF_2	IF_3
0x400fcae	    0x8d8228a6ffff	                 lea eax, [rdx - 0x59d8]	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x400fcb4	            0x4898	                                    cdqe	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x400fcb6	        0x488d1440	                  lea rdx, [rax + rax*2]	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x400fcba	    0x488b81880200	           mov rax, qword [rcx + 0x288] 	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x400fcc1	      0x488d7cd010	          lea rdi, [rax + rdx*8 + 0x10] 	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x400fcc6	      0xba02000000	                              mov edx, 2	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x400fccb	      0xe8700fffff	               call sym.syn_combine_list	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x400fcd0	    0x488b15000000	            mov rdx, qword [0x0400fcd7] 	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x400fcd7	      0x448b442410	            mov r8d, dword [rsp + 0x10] 	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x400fcdc	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x400fce0	      0xe9b6feffff	                           jmp 0x400fb9b	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_2
0x400fce5	      0xe800000000	                          call 0x400fcea	      5121	syntax.c	FUNCTION_80
syn_lines_msg	DO,0:functions,0:IF,4:WHILE,0:CALL,10:ELSE,0:SWITCH,0:FOR,0	55
0x4000fd0	        0x4883ec08	                              sub rsp, 8	      4026	syntax.c	FUNCTION_64
0x4000fd4	    0x488b05000000	            mov rax, qword [0x04000fdb] 	      4027	syntax.c	FUNCTION_64	IF_1
0x4000fdb	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4027	syntax.c	FUNCTION_64	IF_1
0x4000fdf	    0x4883b8b00200	              cmp qword [rax + 0x2b0], 0	      4027	syntax.c	FUNCTION_64	IF_1
0x4000fe7	     0xf8edb000000	                           jle 0x40010c8	      4027	syntax.c	FUNCTION_64	IF_1
0x4000fed	      0xbf00000000	                              mov edi, 0	      4030	syntax.c	FUNCTION_64	IF_1	CALL_1
0x4000ff2	      0xe800000000	                          call 0x4000ff7	      4030	syntax.c	FUNCTION_64	IF_1	CALL_1
0x4000ff7	    0x488b05000000	            mov rax, qword [0x04000ffe] 	      4031	syntax.c	FUNCTION_64	IF_1	IF_2
0x4000ffe	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4031	syntax.c	FUNCTION_64	IF_1	IF_2
0x4001002	    0x4883b8a80200	              cmp qword [rax + 0x2a8], 0	      4031	syntax.c	FUNCTION_64	IF_1	IF_2
0x400100a	            0x7e79	                           jle 0x4001085	      4031	syntax.c	FUNCTION_64	IF_1	IF_2
0x400100c	      0xba05000000	                              mov edx, 5	      4033	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x4001011	      0xbe00000000	                              mov esi, 0	      4033	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x4001016	            0x31ff	                            xor edi, edi	      4033	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x4001018	      0xe800000000	                          call 0x400101d	      4033	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x400101d	          0x4889c7	                            mov rdi, rax	      4033	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x4001020	      0xe800000000	                          call 0x4001025	      4033	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x4001025	    0x488b05000000	            mov rax, qword [0x0400102c] 	      4034	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_4
0x400102c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4034	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_4
0x4001030	    0x488bb8a80200	           mov rdi, qword [rax + 0x2a8] 	      4034	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_4
0x4001037	      0xe800000000	                          call 0x400103c	      4034	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_4
0x400103c	    0x488b05000000	            mov rax, qword [0x04001043] 	      4035	syntax.c	FUNCTION_64	IF_1	IF_2	IF_3
0x4001043	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4035	syntax.c	FUNCTION_64	IF_1	IF_2	IF_3
0x4001047	    0x4883b8b00200	              cmp qword [rax + 0x2b0], 0	      4035	syntax.c	FUNCTION_64	IF_1	IF_2	IF_3
0x400104f	            0x751f	                           jne 0x4001070	      4035	syntax.c	FUNCTION_64	IF_1	IF_2	IF_3
0x4001051	            0x31ff	                            xor edi, edi	      4043	syntax.c	FUNCTION_64	IF_1	CALL_10
0x4001053	      0xba05000000	                              mov edx, 5	      4043	syntax.c	FUNCTION_64	IF_1	CALL_10
0x4001058	      0xbe00000000	                              mov esi, 0	      4043	syntax.c	FUNCTION_64	IF_1	CALL_10
0x400105d	      0xe800000000	                          call 0x4001062	      4043	syntax.c	FUNCTION_64	IF_1	CALL_10
0x4001062	        0x4883c408	                              add rsp, 8	      4045	syntax.c	FUNCTION_64
0x4001066	          0x4889c7	                            mov rdi, rax	      4043	syntax.c	FUNCTION_64	IF_1	CALL_10
0x4001069	      0xe900000000	                           jmp 0x400106e	      4043	syntax.c	FUNCTION_64	IF_1	CALL_10
0x400106e	            0x6690	                                     nop	      4043	syntax.c	FUNCTION_64	IF_1	CALL_10
0x4001070	      0xbf00000000	                              mov edi, 0	      4036	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_5
0x4001075	      0xe800000000	                          call 0x400107a	      4036	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_5
0x400107a	    0x488b05000000	            mov rax, qword [0x04001081] 	      4036	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_5
0x4001081	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4036	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_5
0x4001085	    0x4883b8b00200	              cmp qword [rax + 0x2b0], 0	      4038	syntax.c	FUNCTION_64	IF_1	IF_4
0x400108d	            0x7ec2	                           jle 0x4001051	      4038	syntax.c	FUNCTION_64	IF_1	IF_4
0x400108f	      0xba05000000	                              mov edx, 5	      4040	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_7
0x4001094	      0xbe00000000	                              mov esi, 0	      4040	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_7
0x4001099	            0x31ff	                            xor edi, edi	      4040	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_7
0x400109b	      0xe800000000	                          call 0x40010a0	      4040	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_7
0x40010a0	          0x4889c7	                            mov rdi, rax	      4040	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_7
0x40010a3	      0xe800000000	                          call 0x40010a8	      4040	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_7
0x40010a8	    0x488b05000000	            mov rax, qword [0x040010af] 	      4041	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_8
0x40010af	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4041	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_8
0x40010b3	    0x488bb8b00200	           mov rdi, qword [rax + 0x2b0] 	      4041	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_8
0x40010ba	      0xe800000000	                          call 0x40010bf	      4041	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_8
0x40010bf	            0xeb90	                           jmp 0x4001051	      4041	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_8
0x40010c1	     0xf1f80000000	                         nop dword [rax]	      4041	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_8
0x40010c8	    0x4883b8a80200	              cmp qword [rax + 0x2a8], 0	      4028	syntax.c	FUNCTION_64	IF_1
0x40010d0	     0xf8f17ffffff	                            jg 0x4000fed	      4028	syntax.c	FUNCTION_64	IF_1
0x40010d6	        0x4883c408	                              add rsp, 8	      4045	syntax.c	FUNCTION_64
0x40010da	              0xc3	                                     ret	      4045	syntax.c	FUNCTION_64
update_si_attr	DO,0:functions,0:IF,7:WHILE,0:CALL,1:ELSE,3:SWITCH,0:FOR,0	118
0x4004690	          0x4863c7	                         movsxd rax, edi	      2717	syntax.c	ELSE_2	FUNCTION_32
0x4004693	            0x4155	                                push r13	      2716	syntax.c	ELSE_2	FUNCTION_32
0x4004695	            0x4154	                                push r12	      2716	syntax.c	ELSE_2	FUNCTION_32
0x4004697	        0x4c8d14c0	                  lea r10, [rax + rax*8]	      2717	syntax.c	ELSE_2	FUNCTION_32
0x400469b	              0x55	                                push rbp	      2716	syntax.c	ELSE_2	FUNCTION_32
0x400469c	              0x53	                                push rbx	      2716	syntax.c	ELSE_2	FUNCTION_32
0x400469d	    0x488b1d000000	            mov rbx, qword [0x040046a4] 	      2717	syntax.c	ELSE_2	FUNCTION_32
0x40046a4	        0x49c1e204	                              shl r10, 4	      2717	syntax.c	ELSE_2	FUNCTION_32
0x40046a8	        0x4a8d3413	                    lea rsi, [rbx + r10]	      2717	syntax.c	ELSE_2	FUNCTION_32
0x40046ac	          0x486306	                 movsxd rax, dword [rsi]	      2721	syntax.c	ELSE_2	FUNCTION_32	IF_1
0x40046af	            0x85c0	                           test eax, eax	      2721	syntax.c	ELSE_2	FUNCTION_32	IF_1
0x40046b1	     0xf88d9000000	                            js 0x4004790	      2721	syntax.c	ELSE_2	FUNCTION_32	IF_1
0x40046b7	        0x4c8b5e68	            mov r11, qword [rsi + 0x68] 	      2725	syntax.c	ELSE_2	FUNCTION_32	IF_2
0x40046bb	        0x4c8d0480	                   lea r8, [rax + rax*4]	      2724	syntax.c	ELSE_2	FUNCTION_32
0x40046bf	    0x488b05000000	            mov rax, qword [0x040046c6] 	      2724	syntax.c	ELSE_2	FUNCTION_32
0x40046c6	        0x49c1e005	                               shl r8, 5	      2724	syntax.c	ELSE_2	FUNCTION_32
0x40046ca	          0x4c89dd	                            mov rbp, r11	      2725	syntax.c	ELSE_2	FUNCTION_32	IF_2
0x40046cd	    0x4c0380700200	             add r8, qword [rax + 0x270]	      2724	syntax.c	ELSE_2	FUNCTION_32
0x40046d4	          0x83e540	                           and ebp, 0x40	      2725	syntax.c	ELSE_2	FUNCTION_32	IF_2
0x40046d7	     0xf85c3000000	                           jne 0x40047a0	      2725	syntax.c	ELSE_2	FUNCTION_32	IF_2
0x40046dd	      0x450fbf4854	            movsx r9d, word [r8 + 0x54] 	      2728	syntax.c	ELSE_2	FUNCTION_32	ELSE_1
0x40046e2	          0x4585c9	                           test r9d, r9d	      9879	syntax.c	FUNCTION_159	IF_1
0x40046e5	        0x44894e04	                mov dword [rsi + 4], r9d	      9879	syntax.c	FUNCTION_159	IF_1
0x40046e9	    0x448b2d000000	           mov r13d, dword [0x040046f0] 	      9879	syntax.c	FUNCTION_159	IF_1
0x40046f0	     0xf8ed2000000	                           jle 0x40047c8	      9879	syntax.c	FUNCTION_159	IF_1
0x40046f6	          0x4539e9	                           cmp r9d, r13d	      9879	syntax.c	FUNCTION_159	IF_1
0x40046f9	     0xf8fc9000000	                            jg 0x40047c8	      9879	syntax.c	FUNCTION_159	IF_1
0x40046ff	    0x4c8b25000000	            mov r12, qword [0x04004706] 	      9879	syntax.c	FUNCTION_159	IF_1
0x4004706	          0x4963c1	                         movsxd rax, r9d	      9879	syntax.c	FUNCTION_159	IF_1
0x4004709	      0xba64000000	                           mov edx, 0x64	      9879	syntax.c	FUNCTION_159	IF_1
0x400470e	            0xeb0e	                           jmp 0x400471e	      9879	syntax.c	FUNCTION_159	IF_1
0x4004710	          0x4139c5	                           cmp r13d, eax	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4004713	            0x7c2b	                            jl 0x4004740	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4004715	          0x83ea01	                              sub edx, 1	      9886	syntax.c	FUNCTION_159	FOR_1
0x4004718	     0xf8442010000	                            je 0x4004860	      9886	syntax.c	FUNCTION_159	FOR_1
0x400471e	        0x488d0cc0	                  lea rcx, [rax + rax*8]	      9888	syntax.c	FUNCTION_159	FOR_1
0x4004722	        0x488d0448	                  lea rax, [rax + rcx*2]	      9888	syntax.c	FUNCTION_159	FOR_1
0x4004726	    0x498d8cc468ff	           lea rcx, [r12 + rax*8 - 0x98]	      9888	syntax.c	FUNCTION_159	FOR_1
0x400472e	    0x486381880000	         movsxd rax, dword [rcx + 0x88] 	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4004735	            0x85c0	                           test eax, eax	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4004737	            0x75d7	                           jne 0x4004710	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4004739	     0xf1f80000000	                         nop dword [rax]	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4004740	    0x8b1500000000	            mov edx, dword [0x04004746] 	      9826	syntax.c	FUNCTION_156	IF_1
0x4004746	            0x85d2	                           test edx, edx	      9826	syntax.c	FUNCTION_156	IF_1
0x4004748	            0x7576	                           jne 0x40047c0	      9826	syntax.c	FUNCTION_156	IF_1
0x400474a	    0x833d00000000	               cmp dword [0x04004751], 1	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x4004751	     0xf8ee1000000	                           jle 0x4004838	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x4004757	          0x8b413c	            mov eax, dword [rcx + 0x3c] 	      9831	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x400475a	          0x4885ed	                           test rbp, rbp	      2731	syntax.c	ELSE_2	FUNCTION_32	IF_3
0x400475d	          0x894660	             mov dword [rsi + 0x60], eax	      2729	syntax.c	ELSE_2	FUNCTION_32	CALL_1
0x4004760	        0x44894e08	                mov dword [rsi + 8], r9d	      2730	syntax.c	ELSE_2	FUNCTION_32
0x4004764	            0x754a	                           jne 0x40047b0	      2731	syntax.c	ELSE_2	FUNCTION_32	IF_3
0x4004766	      0x41f6402402	                test byte [r8 + 0x24], 2	      2741	syntax.c	FUNCTION_32	IF_4
0x400476b	        0x498b4040	              mov rax, qword [r8 + 0x40]	      2734	syntax.c	FUNCTION_32
0x400476f	        0x48894678	             mov qword [rsi + 0x78], rax	      2734	syntax.c	FUNCTION_32
0x4004773	            0x741b	                            je 0x4004790	      2741	syntax.c	FUNCTION_32	IF_4
0x4004775	            0x85ff	                           test edi, edi	      2743	syntax.c	FUNCTION_32	IF_4	IF_5
0x4004777	            0x7567	                           jne 0x40047e0	      2743	syntax.c	FUNCTION_32	IF_4	IF_5
0x4004779	          0x4885c0	                           test rax, rax	      2747	syntax.c	FUNCTION_32	IF_4	IF_5	IF_6
0x400477c	    0xc74660000000	               mov dword [rsi + 0x60], 0	      2745	syntax.c	FUNCTION_32	IF_4	IF_5
0x4004783	    0xc74608000000	                  mov dword [rsi + 8], 0	      2746	syntax.c	FUNCTION_32	IF_4	IF_5
0x400478a	     0xf84be000000	                            je 0x400484e	      2747	syntax.c	FUNCTION_32	IF_4	IF_5	IF_6
0x4004790	              0x5b	                                 pop rbx	      2763	syntax.c	FUNCTION_32	ELSE_2
0x4004791	              0x5d	                                 pop rbp	      2763	syntax.c	FUNCTION_32	ELSE_2
0x4004792	            0x415c	                                 pop r12	      2763	syntax.c	FUNCTION_32	ELSE_2
0x4004794	            0x415d	                                 pop r13	      2763	syntax.c	FUNCTION_32	ELSE_2
0x4004796	              0xc3	                                     ret	      2763	syntax.c	FUNCTION_32	ELSE_2
0x4004797	    0x660f1f840000	                    nop word [rax + rax]	      2763	syntax.c	FUNCTION_32	ELSE_2
0x40047a0	      0x450fbf4802	                movsx r9d, word [r8 + 2]	      2726	syntax.c	ELSE_2	FUNCTION_32	IF_2
0x40047a5	      0xe938ffffff	                           jmp 0x40046e2	      2726	syntax.c	ELSE_2	FUNCTION_32	IF_2
0x40047aa	    0x660f1f440000	                    nop word [rax + rax]	      2726	syntax.c	ELSE_2	FUNCTION_32	IF_2
0x40047b0	    0x48c746780000	               mov qword [rsi + 0x78], 0	      2726	syntax.c	ELSE_2	FUNCTION_32	IF_2
0x40047b8	              0x5b	                                 pop rbx	      2763	syntax.c	FUNCTION_32	ELSE_2
0x40047b9	              0x5d	                                 pop rbp	      2763	syntax.c	FUNCTION_32	ELSE_2
0x40047ba	            0x415c	                                 pop r12	      2763	syntax.c	FUNCTION_32	ELSE_2
0x40047bc	            0x415d	                                 pop r13	      2763	syntax.c	FUNCTION_32	ELSE_2
0x40047be	              0xc3	                                     ret	      2763	syntax.c	FUNCTION_32	ELSE_2
0x40047bf	              0x90	                                     nop	      2763	syntax.c	FUNCTION_32	ELSE_2
0x40047c0	          0x8b4168	            mov eax, dword [rcx + 0x68] 	      9827	syntax.c	FUNCTION_156	IF_1
0x40047c3	            0xeb95	                           jmp 0x400475a	      9827	syntax.c	FUNCTION_156	IF_1
0x40047c5	           0xf1f00	                         nop dword [rax]	      9827	syntax.c	FUNCTION_156	IF_1
0x40047c8	    0x488b05000000	            mov rax, qword [0x040047cf] 	      9827	syntax.c	FUNCTION_156	IF_1
0x40047cf	    0x488d8868ffff	                   lea rcx, [rax - 0x98]	      9827	syntax.c	FUNCTION_156	IF_1
0x40047d6	      0xe965ffffff	                           jmp 0x4004740	      9827	syntax.c	FUNCTION_156	IF_1
0x40047db	       0xf1f440000	                   nop dword [rax + rax]	      9827	syntax.c	FUNCTION_156	IF_1
0x40047e0	    0x4a8d941370ff	             lea rdx, [rbx + r10 - 0x90]	      2752	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x40047e8	          0x4885c0	                           test rax, rax	      2756	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x40047eb	          0x8b4a60	            mov ecx, dword [rdx + 0x60] 	      2752	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x40047ee	        0x488b5a30	            mov rbx, qword [rdx + 0x30] 	      2754	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x40047f2	          0x894e60	             mov dword [rsi + 0x60], ecx	      2752	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x40047f5	          0x8b4a08	                mov ecx, dword [rdx + 8]	      2753	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x40047f8	          0x894e08	                mov dword [rsi + 8], ecx	      2753	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x40047fb	        0x488b4a28	            mov rcx, qword [rdx + 0x28] 	      2754	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x40047ff	        0x48895e30	             mov qword [rsi + 0x30], rbx	      2754	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x4004803	        0x488b5a40	            mov rbx, qword [rdx + 0x40] 	      2755	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x4004807	        0x48894e28	             mov qword [rsi + 0x28], rcx	      2754	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x400480b	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      2755	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x400480f	        0x48895e40	             mov qword [rsi + 0x40], rbx	      2755	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x4004813	        0x48894e38	             mov qword [rsi + 0x38], rcx	      2755	syntax.c	FUNCTION_32	IF_4	ELSE_3
0x4004817	     0xf8573ffffff	                           jne 0x4004790	      2756	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x400481d	        0x488b4278	            mov rax, qword [rdx + 0x78] 	      2759	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x4004821	    0x4981cb000001	                         or r11, 0x10000	      2758	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x4004828	        0x4c895e68	             mov qword [rsi + 0x68], r11	      2758	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x400482c	        0x48894678	             mov qword [rsi + 0x78], rax	      2759	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x4004830	      0xe95bffffff	                           jmp 0x4004790	      2759	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x4004835	           0xf1f00	                         nop dword [rax]	      2759	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x4004838	    0x8b0500000000	            mov eax, dword [0x0400483e] 	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x400483e	            0x85c0	                           test eax, eax	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x4004840	     0xf8511ffffff	                           jne 0x4004757	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x4004846	          0x8b4128	            mov eax, dword [rcx + 0x28] 	      9833	syntax.c	FUNCTION_156	ELSE_2
0x4004849	      0xe90cffffff	                           jmp 0x400475a	      9833	syntax.c	FUNCTION_156	ELSE_2
0x400484e	    0x48c74678ffff	mov qword [rsi + 0x78], 0xffffffffffffffff	      2748	syntax.c	FUNCTION_32	IF_4	IF_5	IF_6
0x4004856	      0xe935ffffff	                           jmp 0x4004790	      2748	syntax.c	FUNCTION_32	IF_4	IF_5	IF_6
0x400485b	       0xf1f440000	                   nop dword [rax + rax]	      2748	syntax.c	FUNCTION_32	IF_4	IF_5	IF_6
0x4004860	        0x488d14c0	                  lea rdx, [rax + rax*8]	      2748	syntax.c	FUNCTION_32	IF_4	IF_5	IF_6
0x4004864	        0x488d0450	                  lea rax, [rax + rdx*2]	      2748	syntax.c	FUNCTION_32	IF_4	IF_5	IF_6
0x4004868	    0x498d8cc468ff	           lea rcx, [r12 + rax*8 - 0x98]	      2748	syntax.c	FUNCTION_32	IF_4	IF_5	IF_6
0x4004870	      0xe9cbfeffff	                           jmp 0x4004740	      2748	syntax.c	FUNCTION_32	IF_4	IF_5	IF_6
highlight_list_one	DO,0:functions,0:IF,3:WHILE,0:CALL,18:ELSE,0:SWITCH,0:FOR,0	437
0x4006830	            0x4157	                                push r15	      9216	syntax.c	FUNCTION_141
0x4006832	            0x4156	                                push r14	      9216	syntax.c	FUNCTION_141
0x4006834	            0x4155	                                push r13	      9216	syntax.c	FUNCTION_141
0x4006836	            0x4154	                                push r12	      9216	syntax.c	FUNCTION_141
0x4006838	          0x4c63ef	                         movsxd r13, edi	      9216	syntax.c	FUNCTION_141
0x400683b	              0x55	                                push rbp	      9216	syntax.c	FUNCTION_141
0x400683c	              0x53	                                push rbx	      9216	syntax.c	FUNCTION_141
0x400683d	          0x4d89ec	                            mov r12, r13	      9216	syntax.c	FUNCTION_141
0x4006840	    0x4881ec880000	                           sub rsp, 0x88	      9216	syntax.c	FUNCTION_141
0x4006847	    0x64488b042528	                mov rax, qword fs:[0x28]	      9216	syntax.c	FUNCTION_141
0x4006850	      0x4889442478	             mov qword [rsp + 0x78], rax	      9216	syntax.c	FUNCTION_141
0x4006855	            0x31c0	                            xor eax, eax	      9216	syntax.c	FUNCTION_141
0x4006857	      0x4b8d44ed00	                  lea rax, [r13 + r13*8]	      9220	syntax.c	FUNCTION_141
0x400685c	      0x4d8d7c4500	                  lea r15, [r13 + rax*2]	      9220	syntax.c	FUNCTION_141
0x4006861	    0x488b05000000	            mov rax, qword [0x04006868] 	      9220	syntax.c	FUNCTION_141
0x4006868	        0x49c1e703	                              shl r15, 3	      9220	syntax.c	FUNCTION_141
0x400686c	    0x4a8d9c3868ff	             lea rbx, [rax + r15 - 0x98]	      9220	syntax.c	FUNCTION_141
0x4006874	    0x8b0500000000	            mov eax, dword [0x0400687a] 	      9281	syntax.c	FUNCTION_142	IF_1
0x400687a	          0x8b4b14	            mov ecx, dword [rbx + 0x14] 	      9222	syntax.c	FUNCTION_141	CALL_1
0x400687d	            0x85c9	                           test ecx, ecx	      9283	syntax.c	FUNCTION_142	IF_2
0x400687f	            0x7408	                            je 0x4006889	      9283	syntax.c	FUNCTION_142	IF_2
0x4006881	            0x85c0	                           test eax, eax	      9283	syntax.c	FUNCTION_142	IF_2
0x4006883	     0xf8407040000	                            je 0x4006c90	      9283	syntax.c	FUNCTION_142	IF_2
0x4006889	            0x31ed	                            xor ebp, ebp	      9283	syntax.c	FUNCTION_142	IF_2
0x400688b	    0x8b0500000000	            mov eax, dword [0x04006891] 	      9281	syntax.c	FUNCTION_142	IF_1
0x4006891	            0x85c0	                           test eax, eax	      9281	syntax.c	FUNCTION_142	IF_1
0x4006893	     0xf85e7030000	                           jne 0x4006c80	      9281	syntax.c	FUNCTION_142	IF_1
0x4006899	        0x4c8b7318	            mov r14, qword [rbx + 0x18] 	      9224	syntax.c	FUNCTION_141	CALL_2
0x400689d	          0x4d85f6	                           test r14, r14	      9283	syntax.c	FUNCTION_142	IF_2
0x40068a0	            0x744c	                            je 0x40068ee	      9283	syntax.c	FUNCTION_142	IF_2
0x40068a2	          0x4c89f7	                            mov rdi, r14	      9306	syntax.c	FUNCTION_142	IF_2	CALL_5
0x40068a5	      0xe800000000	                          call 0x40068aa	      9306	syntax.c	FUNCTION_142	IF_2	CALL_5
0x40068aa	          0x8d7006	                      lea esi, [rax + 6]	      9305	syntax.c	FUNCTION_142	IF_2	CALL_3
0x40068ad	            0x89ef	                            mov edi, ebp	      9305	syntax.c	FUNCTION_142	IF_2	CALL_3
0x40068af	          0x4489e2	                           mov edx, r12d	      9305	syntax.c	FUNCTION_142	IF_2	CALL_3
0x40068b2	      0xbd01000000	                              mov ebp, 1	      9308	syntax.c	FUNCTION_142	IF_2	IF_7
0x40068b7	      0xe874edffff	                call sym.syn_list_header	      9305	syntax.c	FUNCTION_142	IF_2	CALL_3
0x40068bc	    0x8b0500000000	            mov eax, dword [0x040068c2] 	      9308	syntax.c	FUNCTION_142	IF_2	IF_7
0x40068c2	            0x85c0	                           test eax, eax	      9308	syntax.c	FUNCTION_142	IF_2	IF_7
0x40068c4	            0x7528	                           jne 0x40068ee	      9308	syntax.c	FUNCTION_142	IF_2	IF_7
0x40068c6	    0x8b3500000000	            mov esi, dword [0x040068cc] 	      9312	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_7
0x40068cc	      0xbf00000000	                              mov edi, 0	      9312	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_7
0x40068d1	      0xe800000000	                          call 0x40068d6	      9312	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_7
0x40068d6	    0x8b3500000000	            mov esi, dword [0x040068dc] 	      9313	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_9
0x40068dc	      0xbf00000000	                              mov edi, 0	      9313	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_9
0x40068e1	      0xe800000000	                          call 0x40068e6	      9313	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_9
0x40068e6	          0x4c89f7	                            mov rdi, r14	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_10
0x40068e9	      0xe800000000	                          call 0x40068ee	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_10
0x40068ee	    0x8b0500000000	            mov eax, dword [0x040068f4] 	      9281	syntax.c	FUNCTION_142	IF_1
0x40068f4	            0x85c0	                           test eax, eax	      9281	syntax.c	FUNCTION_142	IF_1
0x40068f6	     0xf8574030000	                           jne 0x4006c70	      9281	syntax.c	FUNCTION_142	IF_1
0x40068fc	        0x4c8b7320	            mov r14, qword [rbx + 0x20] 	      9226	syntax.c	FUNCTION_141	CALL_3
0x4006900	          0x4d85f6	                           test r14, r14	      9283	syntax.c	FUNCTION_142	IF_2
0x4006903	            0x744c	                            je 0x4006951	      9283	syntax.c	FUNCTION_142	IF_2
0x4006905	          0x4c89f7	                            mov rdi, r14	      9306	syntax.c	FUNCTION_142	IF_2	CALL_5
0x4006908	      0xe800000000	                          call 0x400690d	      9306	syntax.c	FUNCTION_142	IF_2	CALL_5
0x400690d	          0x8d7005	                      lea esi, [rax + 5]	      9305	syntax.c	FUNCTION_142	IF_2	CALL_3
0x4006910	            0x89ef	                            mov edi, ebp	      9305	syntax.c	FUNCTION_142	IF_2	CALL_3
0x4006912	          0x4489e2	                           mov edx, r12d	      9305	syntax.c	FUNCTION_142	IF_2	CALL_3
0x4006915	      0xbd01000000	                              mov ebp, 1	      9308	syntax.c	FUNCTION_142	IF_2	IF_7
0x400691a	      0xe811edffff	                call sym.syn_list_header	      9305	syntax.c	FUNCTION_142	IF_2	CALL_3
0x400691f	    0x8b0500000000	            mov eax, dword [0x04006925] 	      9308	syntax.c	FUNCTION_142	IF_2	IF_7
0x4006925	            0x85c0	                           test eax, eax	      9308	syntax.c	FUNCTION_142	IF_2	IF_7
0x4006927	            0x7528	                           jne 0x4006951	      9308	syntax.c	FUNCTION_142	IF_2	IF_7
0x4006929	    0x8b3500000000	            mov esi, dword [0x0400692f] 	      9312	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_7
0x400692f	      0xbf00000000	                              mov edi, 0	      9312	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_7
0x4006934	      0xe800000000	                          call 0x4006939	      9312	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_7
0x4006939	    0x8b3500000000	            mov esi, dword [0x0400693f] 	      9313	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_9
0x400693f	      0xbf00000000	                              mov edi, 0	      9313	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_9
0x4006944	      0xe800000000	                          call 0x4006949	      9313	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_9
0x4006949	          0x4c89f7	                            mov rdi, r14	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_10
0x400694c	      0xe800000000	                          call 0x4006951	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_10
0x4006951	    0x8b0500000000	            mov eax, dword [0x04006957] 	      9281	syntax.c	FUNCTION_142	IF_1
0x4006957	            0x85c0	                           test eax, eax	      9281	syntax.c	FUNCTION_142	IF_1
0x4006959	     0xf8501030000	                           jne 0x4006c60	      9281	syntax.c	FUNCTION_142	IF_1
0x400695f	          0x8b4b2c	            mov ecx, dword [rbx + 0x2c] 	      9229	syntax.c	FUNCTION_141	CALL_4
0x4006962	            0x85c9	                           test ecx, ecx	      9283	syntax.c	FUNCTION_142	IF_2
0x4006964	     0xf8566040000	                           jne 0x4006dd0	      9283	syntax.c	FUNCTION_142	IF_2
0x400696a	    0x8b0500000000	            mov eax, dword [0x04006970] 	      9281	syntax.c	FUNCTION_142	IF_1
0x4006970	            0x85c0	                           test eax, eax	      9281	syntax.c	FUNCTION_142	IF_1
0x4006972	     0xf85a8020000	                           jne 0x4006c20	      9281	syntax.c	FUNCTION_142	IF_1
0x4006978	          0x8b4334	            mov eax, dword [rbx + 0x34] 	      9231	syntax.c	FUNCTION_141	CALL_5
0x400697b	            0x85c0	                           test eax, eax	      9283	syntax.c	FUNCTION_142	IF_2
0x400697d	     0xf85ad030000	                           jne 0x4006d30	      9283	syntax.c	FUNCTION_142	IF_2
0x4006983	    0x8b0500000000	            mov eax, dword [0x04006989] 	      9281	syntax.c	FUNCTION_142	IF_1
0x4006989	            0x85c0	                           test eax, eax	      9281	syntax.c	FUNCTION_142	IF_1
0x400698b	     0xf859f020000	                           jne 0x4006c30	      9281	syntax.c	FUNCTION_142	IF_1
0x4006991	          0x8b4338	            mov eax, dword [rbx + 0x38] 	      9233	syntax.c	FUNCTION_141	CALL_6
0x4006994	            0x85c0	                           test eax, eax	      9283	syntax.c	FUNCTION_142	IF_2
0x4006996	     0xf8554040000	                           jne 0x4006df0	      9283	syntax.c	FUNCTION_142	IF_2
0x400699c	    0x8b0500000000	            mov eax, dword [0x040069a2] 	      9281	syntax.c	FUNCTION_142	IF_1
0x40069a2	            0x85c0	                           test eax, eax	      9281	syntax.c	FUNCTION_142	IF_1
0x40069a4	     0xf8596020000	                           jne 0x4006c40	      9281	syntax.c	FUNCTION_142	IF_1
0x40069aa	          0x8b4b6c	            mov ecx, dword [rbx + 0x6c] 	      9237	syntax.c	FUNCTION_141	CALL_7
0x40069ad	            0x85c9	                           test ecx, ecx	      9283	syntax.c	FUNCTION_142	IF_2
0x40069af	     0xf85f3030000	                           jne 0x4006da8	      9283	syntax.c	FUNCTION_142	IF_2
0x40069b5	    0x8b0500000000	            mov eax, dword [0x040069bb] 	      9281	syntax.c	FUNCTION_142	IF_1
0x40069bb	            0x85c0	                           test eax, eax	      9281	syntax.c	FUNCTION_142	IF_1
0x40069bd	     0xf858d020000	                           jne 0x4006c50	      9281	syntax.c	FUNCTION_142	IF_1
0x40069c3	        0x4c8b7370	            mov r14, qword [rbx + 0x70] 	      9239	syntax.c	FUNCTION_141	CALL_8
0x40069c7	          0x4d85f6	                           test r14, r14	      9283	syntax.c	FUNCTION_142	IF_2
0x40069ca	            0x744c	                            je 0x4006a18	      9283	syntax.c	FUNCTION_142	IF_2
0x40069cc	          0x4c89f7	                            mov rdi, r14	      9306	syntax.c	FUNCTION_142	IF_2	CALL_5
0x40069cf	      0xe800000000	                          call 0x40069d4	      9306	syntax.c	FUNCTION_142	IF_2	CALL_5
0x40069d4	          0x8d7006	                      lea esi, [rax + 6]	      9305	syntax.c	FUNCTION_142	IF_2	CALL_3
0x40069d7	            0x89ef	                            mov edi, ebp	      9305	syntax.c	FUNCTION_142	IF_2	CALL_3
0x40069d9	          0x4489e2	                           mov edx, r12d	      9305	syntax.c	FUNCTION_142	IF_2	CALL_3
0x40069dc	      0xbd01000000	                              mov ebp, 1	      9308	syntax.c	FUNCTION_142	IF_2	IF_7
0x40069e1	      0xe84aecffff	                call sym.syn_list_header	      9305	syntax.c	FUNCTION_142	IF_2	CALL_3
0x40069e6	    0x8b0500000000	            mov eax, dword [0x040069ec] 	      9308	syntax.c	FUNCTION_142	IF_2	IF_7
0x40069ec	            0x85c0	                           test eax, eax	      9308	syntax.c	FUNCTION_142	IF_2	IF_7
0x40069ee	            0x7528	                           jne 0x4006a18	      9308	syntax.c	FUNCTION_142	IF_2	IF_7
0x40069f0	    0x8b3500000000	            mov esi, dword [0x040069f6] 	      9312	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_7
0x40069f6	      0xbf00000000	                              mov edi, 0	      9312	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_7
0x40069fb	      0xe800000000	                          call 0x4006a00	      9312	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_7
0x4006a00	    0x8b3500000000	            mov esi, dword [0x04006a06] 	      9313	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_9
0x4006a06	      0xbf00000000	                              mov edi, 0	      9313	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_9
0x4006a0b	      0xe800000000	                          call 0x4006a10	      9313	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_9
0x4006a10	          0x4c89f7	                            mov rdi, r14	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_10
0x4006a13	      0xe800000000	                          call 0x4006a18	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_10
0x4006a18	    0x8b0500000000	            mov eax, dword [0x04006a1e] 	      9281	syntax.c	FUNCTION_142	IF_1
0x4006a1e	          0x4531f6	                          xor r14d, r14d	      9282	syntax.c	FUNCTION_142	IF_1
0x4006a21	            0x85c0	                           test eax, eax	      9281	syntax.c	FUNCTION_142	IF_1
0x4006a23	            0x7563	                           jne 0x4006a88	      9281	syntax.c	FUNCTION_142	IF_1
0x4006a25	        0x488b4b78	            mov rcx, qword [rbx + 0x78] 	      9241	syntax.c	FUNCTION_141	CALL_9
0x4006a29	          0x4189ee	                           mov r14d, ebp	      9283	syntax.c	FUNCTION_142	IF_2
0x4006a2c	          0x4885c9	                           test rcx, rcx	      9283	syntax.c	FUNCTION_142	IF_2
0x4006a2f	            0x7457	                            je 0x4006a88	      9283	syntax.c	FUNCTION_142	IF_2
0x4006a31	          0x4889cf	                            mov rdi, rcx	      9306	syntax.c	FUNCTION_142	IF_2	CALL_5
0x4006a34	      0x48894c2408	                mov qword [rsp + 8], rcx	      9306	syntax.c	FUNCTION_142	IF_2	CALL_5
0x4006a39	    0x41be01000000	                             mov r14d, 1	      9308	syntax.c	FUNCTION_142	IF_2	IF_7
0x4006a3f	      0xe800000000	                          call 0x4006a44	      9306	syntax.c	FUNCTION_142	IF_2	CALL_5
0x4006a44	          0x8d7006	                      lea esi, [rax + 6]	      9305	syntax.c	FUNCTION_142	IF_2	CALL_3
0x4006a47	          0x4489e2	                           mov edx, r12d	      9305	syntax.c	FUNCTION_142	IF_2	CALL_3
0x4006a4a	            0x89ef	                            mov edi, ebp	      9305	syntax.c	FUNCTION_142	IF_2	CALL_3
0x4006a4c	      0xe8dfebffff	                call sym.syn_list_header	      9305	syntax.c	FUNCTION_142	IF_2	CALL_3
0x4006a51	    0x8b0500000000	            mov eax, dword [0x04006a57] 	      9308	syntax.c	FUNCTION_142	IF_2	IF_7
0x4006a57	            0x85c0	                           test eax, eax	      9308	syntax.c	FUNCTION_142	IF_2	IF_7
0x4006a59	            0x752d	                           jne 0x4006a88	      9308	syntax.c	FUNCTION_142	IF_2	IF_7
0x4006a5b	    0x8b3500000000	            mov esi, dword [0x04006a61] 	      9312	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_7
0x4006a61	      0xbf00000000	                              mov edi, 0	      9312	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_7
0x4006a66	      0xe800000000	                          call 0x4006a6b	      9312	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_7
0x4006a6b	    0x8b3500000000	            mov esi, dword [0x04006a71] 	      9313	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_9
0x4006a71	      0xbf00000000	                              mov edi, 0	      9313	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_9
0x4006a76	      0xe800000000	                          call 0x4006a7b	      9313	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_9
0x4006a7b	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_10
0x4006a80	          0x4889cf	                            mov rdi, rcx	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_10
0x4006a83	      0xe800000000	                          call 0x4006a88	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_10
0x4006a88	    0x8b0500000000	            mov eax, dword [0x04006a8e] 	      9281	syntax.c	FUNCTION_142	IF_1
0x4006a8e	            0x85c0	                           test eax, eax	      9281	syntax.c	FUNCTION_142	IF_1
0x4006a90	     0xf8522010000	                           jne 0x4006bb8	      9281	syntax.c	FUNCTION_142	IF_1
0x4006a96	    0x488bab800000	            mov rbp, qword [rbx + 0x80] 	      9243	syntax.c	FUNCTION_141	CALL_10
0x4006a9d	          0x4885ed	                           test rbp, rbp	      9283	syntax.c	FUNCTION_142	IF_2
0x4006aa0	            0x744e	                            je 0x4006af0	      9283	syntax.c	FUNCTION_142	IF_2
0x4006aa2	          0x4889ef	                            mov rdi, rbp	      9306	syntax.c	FUNCTION_142	IF_2	CALL_5
0x4006aa5	      0xe800000000	                          call 0x4006aaa	      9306	syntax.c	FUNCTION_142	IF_2	CALL_5
0x4006aaa	          0x8d7006	                      lea esi, [rax + 6]	      9305	syntax.c	FUNCTION_142	IF_2	CALL_3
0x4006aad	          0x4489f7	                           mov edi, r14d	      9305	syntax.c	FUNCTION_142	IF_2	CALL_3
0x4006ab0	          0x4489e2	                           mov edx, r12d	      9305	syntax.c	FUNCTION_142	IF_2	CALL_3
0x4006ab3	    0x41be01000000	                             mov r14d, 1	      9308	syntax.c	FUNCTION_142	IF_2	IF_7
0x4006ab9	      0xe872ebffff	                call sym.syn_list_header	      9305	syntax.c	FUNCTION_142	IF_2	CALL_3
0x4006abe	    0x8b0500000000	            mov eax, dword [0x04006ac4] 	      9308	syntax.c	FUNCTION_142	IF_2	IF_7
0x4006ac4	            0x85c0	                           test eax, eax	      9308	syntax.c	FUNCTION_142	IF_2	IF_7
0x4006ac6	            0x7528	                           jne 0x4006af0	      9308	syntax.c	FUNCTION_142	IF_2	IF_7
0x4006ac8	    0x8b3500000000	            mov esi, dword [0x04006ace] 	      9312	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_7
0x4006ace	      0xbf00000000	                              mov edi, 0	      9312	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_7
0x4006ad3	      0xe800000000	                          call 0x4006ad8	      9312	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_7
0x4006ad8	    0x8b3500000000	            mov esi, dword [0x04006ade] 	      9313	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_9
0x4006ade	      0xbf00000000	                              mov edi, 0	      9313	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_9
0x4006ae3	      0xe800000000	                          call 0x4006ae8	      9313	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_9
0x4006ae8	          0x4889ef	                            mov rdi, rbp	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_10
0x4006aeb	      0xe800000000	                          call 0x4006af0	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_10
0x4006af0	    0x8b0500000000	            mov eax, dword [0x04006af6] 	      9281	syntax.c	FUNCTION_142	IF_1
0x4006af6	            0x85c0	                           test eax, eax	      9281	syntax.c	FUNCTION_142	IF_1
0x4006af8	     0xf85cb000000	                           jne 0x4006bc9	      9281	syntax.c	FUNCTION_142	IF_1
0x4006afe	        0x488b6b60	            mov rbp, qword [rbx + 0x60] 	      9247	syntax.c	FUNCTION_141	CALL_11
0x4006b02	          0x4885ed	                           test rbp, rbp	      9283	syntax.c	FUNCTION_142	IF_2
0x4006b05	     0xf84a5010000	                            je 0x4006cb0	      9283	syntax.c	FUNCTION_142	IF_2
0x4006b0b	          0x4889ef	                            mov rdi, rbp	      9306	syntax.c	FUNCTION_142	IF_2	CALL_5
0x4006b0e	      0xe800000000	                          call 0x4006b13	      9306	syntax.c	FUNCTION_142	IF_2	CALL_5
0x4006b13	          0x8d7005	                      lea esi, [rax + 5]	      9305	syntax.c	FUNCTION_142	IF_2	CALL_3
0x4006b16	          0x4489e2	                           mov edx, r12d	      9305	syntax.c	FUNCTION_142	IF_2	CALL_3
0x4006b19	          0x4489f7	                           mov edi, r14d	      9305	syntax.c	FUNCTION_142	IF_2	CALL_3
0x4006b1c	      0xe80febffff	                call sym.syn_list_header	      9305	syntax.c	FUNCTION_142	IF_2	CALL_3
0x4006b21	    0x8b0500000000	            mov eax, dword [0x04006b27] 	      9308	syntax.c	FUNCTION_142	IF_2	IF_7
0x4006b27	            0x85c0	                           test eax, eax	      9308	syntax.c	FUNCTION_142	IF_2	IF_7
0x4006b29	            0x7528	                           jne 0x4006b53	      9308	syntax.c	FUNCTION_142	IF_2	IF_7
0x4006b2b	    0x8b3500000000	            mov esi, dword [0x04006b31] 	      9312	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_7
0x4006b31	      0xbf00000000	                              mov edi, 0	      9312	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_7
0x4006b36	      0xe800000000	                          call 0x4006b3b	      9312	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_7
0x4006b3b	    0x8b3500000000	            mov esi, dword [0x04006b41] 	      9313	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_9
0x4006b41	      0xbf00000000	                              mov edi, 0	      9313	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_9
0x4006b46	      0xe800000000	                          call 0x4006b4b	      9313	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_9
0x4006b4b	          0x4889ef	                            mov rdi, rbp	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_10
0x4006b4e	      0xe800000000	                          call 0x4006b53	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_10
0x4006b53	    0x8b9388000000	            mov edx, dword [rbx + 0x88] 	      9251	syntax.c	FUNCTION_141	IF_1
0x4006b59	    0x41be01000000	                             mov r14d, 1	      9251	syntax.c	FUNCTION_141	IF_1
0x4006b5f	            0x85d2	                           test edx, edx	      9251	syntax.c	FUNCTION_141	IF_1
0x4006b61	            0x7413	                            je 0x4006b76	      9251	syntax.c	FUNCTION_141	IF_1
0x4006b63	    0x8b0500000000	            mov eax, dword [0x04006b69] 	      9251	syntax.c	FUNCTION_141	IF_1
0x4006b69	            0x85c0	                           test eax, eax	      9251	syntax.c	FUNCTION_141	IF_1
0x4006b6b	     0xf845b010000	                            je 0x4006ccc	      9251	syntax.c	FUNCTION_141	IF_1
0x4006b71	          0x4585f6	                         test r14d, r14d	      9260	syntax.c	FUNCTION_141	IF_2
0x4006b74	            0x7461	                            je 0x4006bd7	      9260	syntax.c	FUNCTION_141	IF_2
0x4006b76	    0x48833d000000	               cmp qword [0x04006b7e], 0	      9263	syntax.c	FUNCTION_141	IF_3
0x4006b7e	            0x7e0b	                           jle 0x4006b8b	      9263	syntax.c	FUNCTION_141	IF_3
0x4006b80	    0x8bbb90000000	            mov edi, dword [rbx + 0x90] 	      9264	syntax.c	FUNCTION_141	CALL_18
0x4006b86	      0xe800000000	                          call 0x4006b8b	      9264	syntax.c	FUNCTION_141	CALL_18
0x4006b8b	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      9266	syntax.c	FUNCTION_141
0x4006b90	    0x644833042528	                xor rax, qword fs:[0x28]	      9266	syntax.c	FUNCTION_141
0x4006b99	     0xf85ca030000	                           jne 0x4006f69	      9266	syntax.c	FUNCTION_141
0x4006b9f	    0x4881c4880000	                           add rsp, 0x88	      9266	syntax.c	FUNCTION_141
0x4006ba6	              0x5b	                                 pop rbx	      9266	syntax.c	FUNCTION_141
0x4006ba7	              0x5d	                                 pop rbp	      9266	syntax.c	FUNCTION_141
0x4006ba8	            0x415c	                                 pop r12	      9266	syntax.c	FUNCTION_141
0x4006baa	            0x415d	                                 pop r13	      9266	syntax.c	FUNCTION_141
0x4006bac	            0x415e	                                 pop r14	      9266	syntax.c	FUNCTION_141
0x4006bae	            0x415f	                                 pop r15	      9266	syntax.c	FUNCTION_141
0x4006bb0	              0xc3	                                     ret	      9266	syntax.c	FUNCTION_141
0x4006bb1	     0xf1f80000000	                         nop dword [rax]	      9266	syntax.c	FUNCTION_141
0x4006bb8	    0x8b0500000000	            mov eax, dword [0x04006bbe] 	      9281	syntax.c	FUNCTION_142	IF_1
0x4006bbe	          0x4531f6	                          xor r14d, r14d	      9282	syntax.c	FUNCTION_142	IF_1
0x4006bc1	            0x85c0	                           test eax, eax	      9281	syntax.c	FUNCTION_142	IF_1
0x4006bc3	     0xf8435ffffff	                            je 0x4006afe	      9281	syntax.c	FUNCTION_142	IF_1
0x4006bc9	    0x8b8388000000	            mov eax, dword [rbx + 0x88] 	      9251	syntax.c	FUNCTION_141	IF_1
0x4006bcf	            0x85c0	                           test eax, eax	      9251	syntax.c	FUNCTION_141	IF_1
0x4006bd1	     0xf8549010000	                           jne 0x4006d20	      9251	syntax.c	FUNCTION_141	IF_1
0x4006bd7	    0x8b0500000000	            mov eax, dword [0x04006bdd] 	      9281	syntax.c	FUNCTION_142	IF_1
0x4006bdd	            0x85c0	                           test eax, eax	      9281	syntax.c	FUNCTION_142	IF_1
0x4006bdf	            0x7595	                           jne 0x4006b76	      9281	syntax.c	FUNCTION_142	IF_1
0x4006be1	      0xbf00000000	                              mov edi, 0	      9306	syntax.c	FUNCTION_142	IF_2	CALL_5
0x4006be6	      0xe800000000	                          call 0x4006beb	      9306	syntax.c	FUNCTION_142	IF_2	CALL_5
0x4006beb	      0xbf0a000000	                            mov edi, 0xa	      9484	syntax.c	FUNCTION_146	IF_1	CALL_1
0x4006bf0	      0xe800000000	                          call 0x4006bf5	      9484	syntax.c	FUNCTION_146	IF_1	CALL_1
0x4006bf5	    0x8b0500000000	            mov eax, dword [0x04006bfb] 	      9485	syntax.c	FUNCTION_146	IF_1	IF_2
0x4006bfb	            0x85c0	                           test eax, eax	      9485	syntax.c	FUNCTION_146	IF_1	IF_2
0x4006bfd	     0xf8465020000	                            je 0x4006e68	      9485	syntax.c	FUNCTION_146	IF_1	IF_2
0x4006c03	    0x8b0500000000	            mov eax, dword [0x04006c09] 	      9308	syntax.c	FUNCTION_142	IF_2	IF_7
0x4006c09	            0x85c0	                           test eax, eax	      9308	syntax.c	FUNCTION_142	IF_2	IF_7
0x4006c0b	     0xf8565ffffff	                           jne 0x4006b76	      9308	syntax.c	FUNCTION_142	IF_2	IF_7
0x4006c11	      0xbf00000000	                              mov edi, 0	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_10
0x4006c16	      0xe800000000	                          call 0x4006c1b	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_10
0x4006c1b	      0xe956ffffff	                           jmp 0x4006b76	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_10
0x4006c20	    0x8b0500000000	            mov eax, dword [0x04006c26] 	      9281	syntax.c	FUNCTION_142	IF_1
0x4006c26	            0x31ed	                            xor ebp, ebp	      9282	syntax.c	FUNCTION_142	IF_1
0x4006c28	            0x85c0	                           test eax, eax	      9281	syntax.c	FUNCTION_142	IF_1
0x4006c2a	     0xf8461fdffff	                            je 0x4006991	      9281	syntax.c	FUNCTION_142	IF_1
0x4006c30	    0x8b0500000000	            mov eax, dword [0x04006c36] 	      9281	syntax.c	FUNCTION_142	IF_1
0x4006c36	            0x31ed	                            xor ebp, ebp	      9282	syntax.c	FUNCTION_142	IF_1
0x4006c38	            0x85c0	                           test eax, eax	      9281	syntax.c	FUNCTION_142	IF_1
0x4006c3a	     0xf846afdffff	                            je 0x40069aa	      9281	syntax.c	FUNCTION_142	IF_1
0x4006c40	    0x8b0500000000	            mov eax, dword [0x04006c46] 	      9281	syntax.c	FUNCTION_142	IF_1
0x4006c46	            0x31ed	                            xor ebp, ebp	      9282	syntax.c	FUNCTION_142	IF_1
0x4006c48	            0x85c0	                           test eax, eax	      9281	syntax.c	FUNCTION_142	IF_1
0x4006c4a	     0xf8473fdffff	                            je 0x40069c3	      9281	syntax.c	FUNCTION_142	IF_1
0x4006c50	            0x31ed	                            xor ebp, ebp	      9282	syntax.c	FUNCTION_142	IF_1
0x4006c52	      0xe9c1fdffff	                           jmp 0x4006a18	      9282	syntax.c	FUNCTION_142	IF_1
0x4006c57	    0x660f1f840000	                    nop word [rax + rax]	      9282	syntax.c	FUNCTION_142	IF_1
0x4006c60	            0x31ed	                            xor ebp, ebp	      9282	syntax.c	FUNCTION_142	IF_1
0x4006c62	      0xe903fdffff	                           jmp 0x400696a	      9282	syntax.c	FUNCTION_142	IF_1
0x4006c67	    0x660f1f840000	                    nop word [rax + rax]	      9282	syntax.c	FUNCTION_142	IF_1
0x4006c70	            0x31ed	                            xor ebp, ebp	      9282	syntax.c	FUNCTION_142	IF_1
0x4006c72	      0xe9dafcffff	                           jmp 0x4006951	      9282	syntax.c	FUNCTION_142	IF_1
0x4006c77	    0x660f1f840000	                    nop word [rax + rax]	      9282	syntax.c	FUNCTION_142	IF_1
0x4006c80	            0x31ed	                            xor ebp, ebp	      9282	syntax.c	FUNCTION_142	IF_1
0x4006c82	      0xe967fcffff	                           jmp 0x40068ee	      9282	syntax.c	FUNCTION_142	IF_1
0x4006c87	    0x660f1f840000	                    nop word [rax + rax]	      9282	syntax.c	FUNCTION_142	IF_1
0x4006c90	    0x41b900000000	                              mov r9d, 0	      9282	syntax.c	FUNCTION_142	IF_1
0x4006c96	          0x4531c0	                            xor r8d, r8d	      9282	syntax.c	FUNCTION_142	IF_1
0x4006c99	      0xba01000000	                              mov edx, 1	      9282	syntax.c	FUNCTION_142	IF_1
0x4006c9e	            0x31f6	                            xor esi, esi	      9282	syntax.c	FUNCTION_142	IF_1
0x4006ca0	          0x4489ef	                           mov edi, r13d	      9282	syntax.c	FUNCTION_142	IF_1
0x4006ca3	      0xe828faffff	     call sym.highlight_list_arg.part.18	      9282	syntax.c	FUNCTION_142	IF_1
0x4006ca8	            0x89c5	                            mov ebp, eax	      9282	syntax.c	FUNCTION_142	IF_1
0x4006caa	      0xe9dcfbffff	                           jmp 0x400688b	      9282	syntax.c	FUNCTION_142	IF_1
0x4006caf	              0x90	                                     nop	      9282	syntax.c	FUNCTION_142	IF_1
0x4006cb0	    0x8bbb88000000	            mov edi, dword [rbx + 0x88] 	      9251	syntax.c	FUNCTION_141	IF_1
0x4006cb6	            0x85ff	                           test edi, edi	      9251	syntax.c	FUNCTION_141	IF_1
0x4006cb8	     0xf84b3feffff	                            je 0x4006b71	      9251	syntax.c	FUNCTION_141	IF_1
0x4006cbe	    0x8b0500000000	            mov eax, dword [0x04006cc4] 	      9251	syntax.c	FUNCTION_141	IF_1
0x4006cc4	            0x85c0	                           test eax, eax	      9251	syntax.c	FUNCTION_141	IF_1
0x4006cc6	     0xf85a5feffff	                           jne 0x4006b71	      9251	syntax.c	FUNCTION_141	IF_1
0x4006ccc	          0x4489e2	                           mov edx, r12d	      9253	syntax.c	FUNCTION_141	IF_1	CALL_12
0x4006ccf	          0x4489f7	                           mov edi, r14d	      9253	syntax.c	FUNCTION_141	IF_1	CALL_12
0x4006cd2	      0xbe0f270000	                         mov esi, 0x270f	      9253	syntax.c	FUNCTION_141	IF_1	CALL_12
0x4006cd7	      0xe854e9ffff	                call sym.syn_list_header	      9253	syntax.c	FUNCTION_141	IF_1	CALL_12
0x4006cdc	    0x8b3500000000	            mov esi, dword [0x04006ce2] 	      9255	syntax.c	FUNCTION_141	IF_1	CALL_14
0x4006ce2	      0xbf00000000	                              mov edi, 0	      9255	syntax.c	FUNCTION_141	IF_1	CALL_14
0x4006ce7	      0xe800000000	                          call 0x4006cec	      9255	syntax.c	FUNCTION_141	IF_1	CALL_14
0x4006cec	      0xbf20000000	                           mov edi, 0x20	      9256	syntax.c	FUNCTION_141	IF_1	CALL_15
0x4006cf1	      0xe800000000	                          call 0x4006cf6	      9256	syntax.c	FUNCTION_141	IF_1	CALL_15
0x4006cf6	    0x488b15000000	            mov rdx, qword [0x04006cfd] 	      9257	syntax.c	FUNCTION_141	IF_1	CALL_16
0x4006cfd	      0x4a63443af0	    movsxd rax, dword [rdx + r15 - 0x10]	      9257	syntax.c	FUNCTION_141	IF_1	CALL_16
0x4006d02	        0x488d0cc0	                  lea rcx, [rax + rax*8]	      9257	syntax.c	FUNCTION_141	IF_1	CALL_16
0x4006d06	        0x488d0448	                  lea rax, [rax + rcx*2]	      9257	syntax.c	FUNCTION_141	IF_1	CALL_16
0x4006d0a	    0x488bbcc268ff	     mov rdi, qword [rdx + rax*8 - 0x98]	      9257	syntax.c	FUNCTION_141	IF_1	CALL_16
0x4006d12	      0xe800000000	                          call 0x4006d17	      9257	syntax.c	FUNCTION_141	IF_1	CALL_16
0x4006d17	      0xe95afeffff	                           jmp 0x4006b76	      9257	syntax.c	FUNCTION_141	IF_1	CALL_16
0x4006d1c	         0xf1f4000	                         nop dword [rax]	      9257	syntax.c	FUNCTION_141	IF_1	CALL_16
0x4006d20	          0x4531f6	                          xor r14d, r14d	      9282	syntax.c	FUNCTION_142	IF_1
0x4006d23	      0xe93bfeffff	                           jmp 0x4006b63	      9282	syntax.c	FUNCTION_142	IF_1
0x4006d28	     0xf1f84000000	                   nop dword [rax + rax]	      9282	syntax.c	FUNCTION_142	IF_1
0x4006d30	        0x448d40ff	                      lea r8d, [rax - 1]	        33	stdio2.h	FUNCTION_182	CALL_1
0x4006d34	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        33	stdio2.h	FUNCTION_182	CALL_1
0x4006d39	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_182	CALL_1
0x4006d3e	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_182	CALL_1
0x4006d43	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_182	CALL_1
0x4006d48	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_182	CALL_1
0x4006d4a	      0xe800000000	                          call 0x4006d4f	        33	stdio2.h	FUNCTION_182	CALL_1
0x4006d4f	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      9306	syntax.c	FUNCTION_142	IF_2	CALL_5
0x4006d54	      0xe800000000	                          call 0x4006d59	      9306	syntax.c	FUNCTION_142	IF_2	CALL_5
0x4006d59	          0x8d7008	                      lea esi, [rax + 8]	      9305	syntax.c	FUNCTION_142	IF_2	CALL_3
0x4006d5c	          0x4489e2	                           mov edx, r12d	      9305	syntax.c	FUNCTION_142	IF_2	CALL_3
0x4006d5f	            0x89ef	                            mov edi, ebp	      9305	syntax.c	FUNCTION_142	IF_2	CALL_3
0x4006d61	      0xe8cae8ffff	                call sym.syn_list_header	      9305	syntax.c	FUNCTION_142	IF_2	CALL_3
0x4006d66	    0x8b0500000000	            mov eax, dword [0x04006d6c] 	      9308	syntax.c	FUNCTION_142	IF_2	IF_7
0x4006d6c	            0x85c0	                           test eax, eax	      9308	syntax.c	FUNCTION_142	IF_2	IF_7
0x4006d6e	            0x752a	                           jne 0x4006d9a	      9308	syntax.c	FUNCTION_142	IF_2	IF_7
0x4006d70	    0x8b3500000000	            mov esi, dword [0x04006d76] 	      9312	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_7
0x4006d76	      0xbf00000000	                              mov edi, 0	      9312	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_7
0x4006d7b	      0xe800000000	                          call 0x4006d80	      9312	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_7
0x4006d80	    0x8b3500000000	            mov esi, dword [0x04006d86] 	      9313	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_9
0x4006d86	      0xbf00000000	                              mov edi, 0	      9313	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_9
0x4006d8b	      0xe800000000	                          call 0x4006d90	      9313	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_9
0x4006d90	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_10
0x4006d95	      0xe800000000	                          call 0x4006d9a	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_10
0x4006d9a	      0xbd01000000	                              mov ebp, 1	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_10
0x4006d9f	      0xe9dffbffff	                           jmp 0x4006983	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_10
0x4006da4	         0xf1f4000	                         nop dword [rax]	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_10
0x4006da8	            0x89ee	                            mov esi, ebp	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_10
0x4006daa	    0x41b900000000	                              mov r9d, 0	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_10
0x4006db0	          0x4531c0	                            xor r8d, r8d	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_10
0x4006db3	      0xba01000000	                              mov edx, 1	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_10
0x4006db8	          0x4489e7	                           mov edi, r12d	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_10
0x4006dbb	      0xe810f9ffff	     call sym.highlight_list_arg.part.18	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_10
0x4006dc0	            0x89c5	                            mov ebp, eax	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_10
0x4006dc2	      0xe9eefbffff	                           jmp 0x40069b5	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_10
0x4006dc7	    0x660f1f840000	                    nop word [rax + rax]	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_10
0x4006dd0	            0x89ee	                            mov esi, ebp	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_10
0x4006dd2	    0x41b900000000	                              mov r9d, 0	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_10
0x4006dd8	          0x4531c0	                            xor r8d, r8d	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_10
0x4006ddb	      0xba01000000	                              mov edx, 1	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_10
0x4006de0	          0x4489e7	                           mov edi, r12d	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_10
0x4006de3	      0xe8e8f8ffff	     call sym.highlight_list_arg.part.18	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_10
0x4006de8	            0x89c5	                            mov ebp, eax	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_10
0x4006dea	      0xe97bfbffff	                           jmp 0x400696a	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_10
0x4006def	              0x90	                                     nop	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_10
0x4006df0	        0x448d40ff	                      lea r8d, [rax - 1]	        33	stdio2.h	FUNCTION_182	CALL_1
0x4006df4	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	        33	stdio2.h	FUNCTION_182	CALL_1
0x4006df9	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_182	CALL_1
0x4006dfe	      0xba64000000	                           mov edx, 0x64	        33	stdio2.h	FUNCTION_182	CALL_1
0x4006e03	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_182	CALL_1
0x4006e08	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_182	CALL_1
0x4006e0a	      0xe800000000	                          call 0x4006e0f	        33	stdio2.h	FUNCTION_182	CALL_1
0x4006e0f	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      9306	syntax.c	FUNCTION_142	IF_2	CALL_5
0x4006e14	      0xe800000000	                          call 0x4006e19	      9306	syntax.c	FUNCTION_142	IF_2	CALL_5
0x4006e19	          0x8d7008	                      lea esi, [rax + 8]	      9305	syntax.c	FUNCTION_142	IF_2	CALL_3
0x4006e1c	          0x4489e2	                           mov edx, r12d	      9305	syntax.c	FUNCTION_142	IF_2	CALL_3
0x4006e1f	            0x89ef	                            mov edi, ebp	      9305	syntax.c	FUNCTION_142	IF_2	CALL_3
0x4006e21	      0xe80ae8ffff	                call sym.syn_list_header	      9305	syntax.c	FUNCTION_142	IF_2	CALL_3
0x4006e26	    0x8b0500000000	            mov eax, dword [0x04006e2c] 	      9308	syntax.c	FUNCTION_142	IF_2	IF_7
0x4006e2c	            0x85c0	                           test eax, eax	      9308	syntax.c	FUNCTION_142	IF_2	IF_7
0x4006e2e	            0x752a	                           jne 0x4006e5a	      9308	syntax.c	FUNCTION_142	IF_2	IF_7
0x4006e30	    0x8b3500000000	            mov esi, dword [0x04006e36] 	      9312	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_7
0x4006e36	      0xbf00000000	                              mov edi, 0	      9312	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_7
0x4006e3b	      0xe800000000	                          call 0x4006e40	      9312	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_7
0x4006e40	    0x8b3500000000	            mov esi, dword [0x04006e46] 	      9313	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_9
0x4006e46	      0xbf00000000	                              mov edi, 0	      9313	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_9
0x4006e4b	      0xe800000000	                          call 0x4006e50	      9313	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_9
0x4006e50	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_10
0x4006e55	      0xe800000000	                          call 0x4006e5a	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_10
0x4006e5a	      0xbd01000000	                              mov ebp, 1	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_10
0x4006e5f	      0xe938fbffff	                           jmp 0x400699c	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_10
0x4006e64	         0xf1f4000	                         nop dword [rax]	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_10
0x4006e68	    0x488b05000000	            mov rax, qword [0x04006e6f] 	      9487	syntax.c	FUNCTION_146	IF_1	CALL_2
0x4006e6f	    0x4a8bbc3868ff	       mov rdi, qword [rax + r15 - 0x98]	      9487	syntax.c	FUNCTION_146	IF_1	CALL_2
0x4006e77	      0xe800000000	                          call 0x4006e7c	      9487	syntax.c	FUNCTION_146	IF_1	CALL_2
0x4006e7c	    0x8b3d00000000	            mov edi, dword [0x04006e82] 	      9502	syntax.c	FUNCTION_146	IF_6
0x4006e82	          0x83ff0e	                            cmp edi, 0xe	      9502	syntax.c	FUNCTION_146	IF_6
0x4006e85	     0xf8ea5000000	                           jle 0x4006f30	      9502	syntax.c	FUNCTION_146	IF_6
0x4006e8b	          0x83c701	                              add edi, 1	      9503	syntax.c	FUNCTION_146	IF_6
0x4006e8e	          0x4863d7	                         movsxd rdx, edi	      9503	syntax.c	FUNCTION_146	IF_6
0x4006e91	    0x488b05000000	            mov rax, qword [0x04006e98] 	      9504	syntax.c	FUNCTION_146	IF_7
0x4006e98	          0x4839d0	                            cmp rax, rdx	      9504	syntax.c	FUNCTION_146	IF_7
0x4006e9b	            0x7f03	                            jg 0x4006ea0	      9504	syntax.c	FUNCTION_146	IF_7
0x4006e9d	          0x8d78ff	                      lea edi, [rax - 1]	      9507	syntax.c	FUNCTION_146	CALL_4
0x4006ea0	      0xe800000000	                          call 0x4006ea5	      9507	syntax.c	FUNCTION_146	CALL_4
0x4006ea5	          0x4585e4	                         test r12d, r12d	      9879	syntax.c	FUNCTION_159	IF_1
0x4006ea8	    0x8b0d00000000	            mov ecx, dword [0x04006eae] 	      9879	syntax.c	FUNCTION_159	IF_1
0x4006eae	            0x7e11	                           jle 0x4006ec1	      9879	syntax.c	FUNCTION_159	IF_1
0x4006eb0	          0x4139cc	                           cmp r12d, ecx	      9879	syntax.c	FUNCTION_159	IF_1
0x4006eb3	    0x488b35000000	            mov rsi, qword [0x04006eba] 	      9879	syntax.c	FUNCTION_159	IF_1
0x4006eba	      0xb864000000	                           mov eax, 0x64	      9879	syntax.c	FUNCTION_159	IF_1
0x4006ebf	            0x7e4c	                           jle 0x4006f0d	      9879	syntax.c	FUNCTION_159	IF_1
0x4006ec1	    0x488b05000000	            mov rax, qword [0x04006ec8] 	      9879	syntax.c	FUNCTION_159	IF_1
0x4006ec8	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	      9879	syntax.c	FUNCTION_159	IF_1
0x4006ecf	    0x8b3500000000	            mov esi, dword [0x04006ed5] 	      9826	syntax.c	FUNCTION_156	IF_1
0x4006ed5	            0x85f6	                           test esi, esi	      9826	syntax.c	FUNCTION_156	IF_1
0x4006ed7	            0x7567	                           jne 0x4006f40	      9826	syntax.c	FUNCTION_156	IF_1
0x4006ed9	    0x833d00000000	               cmp dword [0x04006ee0], 1	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x4006ee0	            0x7e63	                           jle 0x4006f45	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x4006ee2	          0x8b723c	            mov esi, dword [rdx + 0x3c] 	      9831	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x4006ee5	      0xbf00000000	                              mov edi, 0	      9512	syntax.c	FUNCTION_146	IF_8	CALL_6
0x4006eea	      0xe800000000	                          call 0x4006eef	      9512	syntax.c	FUNCTION_146	IF_8	CALL_6
0x4006eef	      0xbf20000000	                           mov edi, 0x20	      9513	syntax.c	FUNCTION_146	IF_8	CALL_7
0x4006ef4	      0xe800000000	                          call 0x4006ef9	      9513	syntax.c	FUNCTION_146	IF_8	CALL_7
0x4006ef9	      0xe905fdffff	                           jmp 0x4006c03	      9513	syntax.c	FUNCTION_146	IF_8	CALL_7
0x4006efe	            0x6690	                                     nop	      9513	syntax.c	FUNCTION_146	IF_8	CALL_7
0x4006f00	          0x4439e1	                           cmp ecx, r12d	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4006f03	            0x7cca	                            jl 0x4006ecf	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4006f05	          0x83e801	                              sub eax, 1	      9886	syntax.c	FUNCTION_159	FOR_1
0x4006f08	            0x744a	                            je 0x4006f54	      9886	syntax.c	FUNCTION_159	FOR_1
0x4006f0a	          0x4d63ec	                        movsxd r13, r12d	      9886	syntax.c	FUNCTION_159	FOR_1
0x4006f0d	      0x4b8d54ed00	                  lea rdx, [r13 + r13*8]	      9888	syntax.c	FUNCTION_159	FOR_1
0x4006f12	      0x498d545500	                  lea rdx, [r13 + rdx*2]	      9888	syntax.c	FUNCTION_159	FOR_1
0x4006f17	    0x488d94d668ff	           lea rdx, [rsi + rdx*8 - 0x98]	      9888	syntax.c	FUNCTION_159	FOR_1
0x4006f1f	    0x4c63a2880000	         movsxd r12, dword [rdx + 0x88] 	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4006f26	          0x4585e4	                         test r12d, r12d	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4006f29	            0x75d5	                           jne 0x4006f00	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4006f2b	            0xeba2	                           jmp 0x4006ecf	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4006f2d	           0xf1f00	                         nop dword [rax]	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x4006f30	      0xba0f000000	                            mov edx, 0xf	      9502	syntax.c	FUNCTION_146	IF_6
0x4006f35	      0xbf0f000000	                            mov edi, 0xf	      9502	syntax.c	FUNCTION_146	IF_6
0x4006f3a	      0xe952ffffff	                           jmp 0x4006e91	      9502	syntax.c	FUNCTION_146	IF_6
0x4006f3f	              0x90	                                     nop	      9502	syntax.c	FUNCTION_146	IF_6
0x4006f40	          0x8b7268	            mov esi, dword [rdx + 0x68] 	      9827	syntax.c	FUNCTION_156	IF_1
0x4006f43	            0xeba0	                           jmp 0x4006ee5	      9827	syntax.c	FUNCTION_156	IF_1
0x4006f45	    0x8b0d00000000	            mov ecx, dword [0x04006f4b] 	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x4006f4b	            0x85c9	                           test ecx, ecx	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x4006f4d	            0x7593	                           jne 0x4006ee2	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x4006f4f	          0x8b7228	            mov esi, dword [rdx + 0x28] 	      9833	syntax.c	FUNCTION_156	ELSE_2
0x4006f52	            0xeb91	                           jmp 0x4006ee5	      9833	syntax.c	FUNCTION_156	ELSE_2
0x4006f54	        0x4b8d04e4	                  lea rax, [r12 + r12*8]	      9833	syntax.c	FUNCTION_156	ELSE_2
0x4006f58	        0x498d0444	                  lea rax, [r12 + rax*2]	      9833	syntax.c	FUNCTION_156	ELSE_2
0x4006f5c	    0x488d94c668ff	           lea rdx, [rsi + rax*8 - 0x98]	      9833	syntax.c	FUNCTION_156	ELSE_2
0x4006f64	      0xe966ffffff	                           jmp 0x4006ecf	      9833	syntax.c	FUNCTION_156	ELSE_2
0x4006f69	      0xe800000000	                          call 0x4006f6e	      9266	syntax.c	FUNCTION_141
hl_get_font_name	DO,0:functions,0:IF,2:WHILE,0:CALL,1:ELSE,0:SWITCH,0:FOR,0	55
0x400bdb0	            0x4155	                                push r13	      8520	syntax.c	FUNCTION_123
0x400bdb2	            0x4154	                                push r12	      8520	syntax.c	FUNCTION_123
0x400bdb4	      0xbac7000000	                           mov edx, 0xc7	      9639	syntax.c	FUNCTION_148	CALL_1
0x400bdb9	              0x55	                                push rbp	      8520	syntax.c	FUNCTION_123
0x400bdba	              0x53	                                push rbx	      8520	syntax.c	FUNCTION_123
0x400bdbb	      0xbe00000000	                              mov esi, 0	      9639	syntax.c	FUNCTION_148	CALL_1
0x400bdc0	    0x4881ecd80000	                           sub rsp, 0xd8	      8520	syntax.c	FUNCTION_123
0x400bdc7	          0x4889e7	                            mov rdi, rsp	      9639	syntax.c	FUNCTION_148	CALL_1
0x400bdca	    0x64488b042528	                mov rax, qword fs:[0x28]	      8520	syntax.c	FUNCTION_123
0x400bdd3	    0x48898424c800	             mov qword [rsp + 0xc8], rax	      8520	syntax.c	FUNCTION_123
0x400bddb	            0x31c0	                            xor eax, eax	      8520	syntax.c	FUNCTION_123
0x400bddd	      0xe800000000	                          call 0x400bde2	      9639	syntax.c	FUNCTION_148	CALL_1
0x400bde2	          0x4889e7	                            mov rdi, rsp	      9640	syntax.c	FUNCTION_148	CALL_2
0x400bde5	      0xe800000000	                          call 0x400bdea	      9640	syntax.c	FUNCTION_148	CALL_2
0x400bdea	    0x486305000000	         movsxd rax, dword [0x0400bdf1] 	      9641	syntax.c	FUNCTION_148	FOR_1
0x400bdf1	    0x4c8b2d000000	            mov r13, qword [0x0400bdf8] 	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x400bdf8	        0x488d14c0	                  lea rdx, [rax + rax*8]	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x400bdfc	          0x4889c3	                            mov rbx, rax	      9641	syntax.c	FUNCTION_148	FOR_1
0x400bdff	        0x488d0450	                  lea rax, [rax + rdx*2]	      9641	syntax.c	FUNCTION_148	FOR_1
0x400be03	    0x498dacc570ff	           lea rbp, [r13 + rax*8 - 0x90]	      9641	syntax.c	FUNCTION_148	FOR_1
0x400be0b	            0xeb22	                           jmp 0x400be2f	      9641	syntax.c	FUNCTION_148	FOR_1
0x400be0d	           0xf1f00	                         nop dword [rax]	      9641	syntax.c	FUNCTION_148	FOR_1
0x400be10	        0x488b7500	                    mov rsi, qword [rbp]	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x400be14	          0x4885f6	                           test rsi, rsi	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x400be17	            0x740c	                            je 0x400be25	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1
0x400be19	          0x4889e7	                            mov rdi, rsp	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400be1c	      0xe800000000	                          call 0x400be21	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400be21	            0x85c0	                           test eax, eax	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400be23	            0x7413	                            je 0x400be38	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400be25	    0x4881ed980000	                           sub rbp, 0x98	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x400be2c	          0x4963dc	                        movsxd rbx, r12d	      8520	syntax.c	FUNCTION_123
0x400be2f	          0x4189dc	                           mov r12d, ebx	      9641	syntax.c	FUNCTION_148	FOR_1
0x400be32	        0x4183ec01	                             sub r12d, 1	      9641	syntax.c	FUNCTION_148	FOR_1
0x400be36	            0x79d8	                           jns 0x400be10	      9641	syntax.c	FUNCTION_148	FOR_1
0x400be38	            0x85db	                           test ebx, ebx	      8525	syntax.c	FUNCTION_123	IF_1
0x400be3a	            0x7e44	                           jle 0x400be80	      8525	syntax.c	FUNCTION_123	IF_1
0x400be3c	        0x488d04db	                  lea rax, [rbx + rbx*8]	      8527	syntax.c	FUNCTION_123	IF_1
0x400be40	      0xba00000000	                              mov edx, 0	      8531	syntax.c	FUNCTION_123
0x400be45	        0x488d0443	                  lea rax, [rbx + rax*2]	      8527	syntax.c	FUNCTION_123	IF_1
0x400be49	      0x498b44c5c8	     mov rax, qword [r13 + rax*8 - 0x38]	      8527	syntax.c	FUNCTION_123	IF_1
0x400be4e	          0x4885c0	                           test rax, rax	      8531	syntax.c	FUNCTION_123
0x400be51	        0x480f44c2	                          cmove rax, rdx	      8531	syntax.c	FUNCTION_123
0x400be55	    0x488b8c24c800	            mov rcx, qword [rsp + 0xc8] 	      8532	syntax.c	FUNCTION_123
0x400be5d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      8532	syntax.c	FUNCTION_123
0x400be66	            0x751f	                           jne 0x400be87	      8532	syntax.c	FUNCTION_123
0x400be68	    0x4881c4d80000	                           add rsp, 0xd8	      8532	syntax.c	FUNCTION_123
0x400be6f	              0x5b	                                 pop rbx	      8532	syntax.c	FUNCTION_123
0x400be70	              0x5d	                                 pop rbp	      8532	syntax.c	FUNCTION_123
0x400be71	            0x415c	                                 pop r12	      8532	syntax.c	FUNCTION_123
0x400be73	            0x415d	                                 pop r13	      8532	syntax.c	FUNCTION_123
0x400be75	              0xc3	                                     ret	      8532	syntax.c	FUNCTION_123
0x400be76	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      8532	syntax.c	FUNCTION_123
0x400be80	      0xb800000000	                              mov eax, 0	      8531	syntax.c	FUNCTION_123
0x400be85	            0xebce	                           jmp 0x400be55	      8531	syntax.c	FUNCTION_123
0x400be87	      0xe800000000	                          call 0x400be8c	      8532	syntax.c	FUNCTION_123
