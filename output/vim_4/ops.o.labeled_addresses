op_tilde	SWITCH,0:DO,0:ELSE,4:functions,0:FOR,2:IF,14:WHILE,1:CALL,31	675
0x40047a0	            0x4157	                                push r15	      2389	ops.c	FUNCTION_36
0x40047a2	            0x4156	                                push r14	      2389	ops.c	FUNCTION_36
0x40047a4	            0x4155	                                push r13	      2389	ops.c	FUNCTION_36
0x40047a6	            0x4154	                                push r12	      2389	ops.c	FUNCTION_36
0x40047a8	              0x55	                                push rbp	      2389	ops.c	FUNCTION_36
0x40047a9	              0x53	                                push rbx	      2389	ops.c	FUNCTION_36
0x40047aa	          0x4889fb	                            mov rbx, rdi	      2389	ops.c	FUNCTION_36
0x40047ad	    0x4881ec980000	                           sub rsp, 0x98	      2389	ops.c	FUNCTION_36
0x40047b4	        0x488b4720	            mov rax, qword [rdi + 0x20] 	      2394	ops.c	FUNCTION_36	IF_1	CALL_1
0x40047b8	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	      2389	ops.c	FUNCTION_36
0x40047c1	    0x48898c248800	             mov qword [rsp + 0x88], rcx	      2389	ops.c	FUNCTION_36
0x40047c9	            0x31c9	                            xor ecx, ecx	      2389	ops.c	FUNCTION_36
0x40047cb	        0x488b4f30	            mov rcx, qword [rdi + 0x30] 	      2394	ops.c	FUNCTION_36	IF_1	CALL_1
0x40047cf	      0x48897c2410	             mov qword [rsp + 0x10], rdi	      2389	ops.c	FUNCTION_36
0x40047d4	        0x488d78ff	                      lea rdi, [rax - 1]	      2394	ops.c	FUNCTION_36	IF_1	CALL_1
0x40047d8	        0x48890424	                    mov qword [rsp], rax	      2394	ops.c	FUNCTION_36	IF_1	CALL_1
0x40047dc	        0x488d7101	                      lea rsi, [rcx + 1]	      2394	ops.c	FUNCTION_36	IF_1	CALL_1
0x40047e0	      0xe800000000	                          call 0x40047e5	      2394	ops.c	FUNCTION_36	IF_1	CALL_1
0x40047e5	            0x85c0	                           test eax, eax	      2394	ops.c	FUNCTION_36	IF_1	CALL_1
0x40047e7	     0xf84bc010000	                            je 0x40049a9	      2394	ops.c	FUNCTION_36	IF_1	CALL_1
0x40047ed	          0x8b7360	            mov esi, dword [rbx + 0x60] 	      2399	ops.c	FUNCTION_36	IF_2
0x40047f0	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      2398	ops.c	FUNCTION_36
0x40047f4	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      2398	ops.c	FUNCTION_36
0x40047f8	            0x85f6	                           test esi, esi	      2399	ops.c	FUNCTION_36	IF_2
0x40047fa	      0x4889542438	             mov qword [rsp + 0x38], rdx	      2398	ops.c	FUNCTION_36
0x40047ff	      0x4889442430	             mov qword [rsp + 0x30], rax	      2398	ops.c	FUNCTION_36
0x4004804	     0xf84c8010000	                            je 0x40049d2	      2399	ops.c	FUNCTION_36	IF_2
0x400480a	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      2401	ops.c	FUNCTION_36	IF_2	FOR_1
0x400480f	        0x483b5330	            cmp rdx, qword [rbx + 0x30] 	      2401	ops.c	FUNCTION_36	IF_2	FOR_1
0x4004813	     0xf8f13010000	                            jg 0x400492c	      2401	ops.c	FUNCTION_36	IF_2	FOR_1
0x4004819	          0x4531ed	                          xor r13d, r13d	      2401	ops.c	FUNCTION_36	IF_2	FOR_1
0x400481c	          0x4989de	                            mov r14, rbx	      2401	ops.c	FUNCTION_36	IF_2	FOR_1
0x400481f	              0x90	                                     nop	      2401	ops.c	FUNCTION_36	IF_2	FOR_1
0x4004820	      0x488d742440	                   lea rsi, [rsp + 0x40]	      2405	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_2
0x4004825	            0x31c9	                            xor ecx, ecx	      2405	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_2
0x4004827	          0x4c89f7	                            mov rdi, r14	      2405	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_2
0x400482a	      0xe811b8ffff	                     call sym.block_prep	      2405	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_2
0x400482f	        0x8b5c2448	            mov ebx, dword [rsp + 0x48] 	      2407	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_3
0x4004833	        0x8b442458	            mov eax, dword [rsp + 0x58] 	      2406	ops.c	FUNCTION_36	IF_2	FOR_1
0x4004837	          0x458b26	                   mov r12d, dword [r14]	      2407	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_3
0x400483a	            0x85db	                           test ebx, ebx	      2513	ops.c	FUNCTION_37	FOR_1
0x400483c	        0x89442438	             mov dword [rsp + 0x38], eax	      2406	ops.c	FUNCTION_36	IF_2	FOR_1
0x4004840	     0xf8e59070000	                           jle 0x4004f9f	      2513	ops.c	FUNCTION_37	FOR_1
0x4004846	            0x31ed	                            xor ebp, ebp	      2513	ops.c	FUNCTION_37	FOR_1
0x4004848	            0xeb33	                           jmp 0x400487d	      2513	ops.c	FUNCTION_37	FOR_1
0x400484a	    0x660f1f440000	                    nop word [rax + rax]	      2513	ops.c	FUNCTION_37	FOR_1
0x4004850	      0x488d742430	                   lea rsi, [rsp + 0x30]	      2525	ops.c	FUNCTION_37	FOR_1	CALL_2
0x4004855	          0x4489e7	                           mov edi, r12d	      2525	ops.c	FUNCTION_37	FOR_1	CALL_2
0x4004858	      0xe800000000	                          call 0x400485d	      2525	ops.c	FUNCTION_37	FOR_1	CALL_2
0x400485d	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2526	ops.c	FUNCTION_37	FOR_1	IF_3	CALL_3
0x4004862	             0x9c5	                             or ebp, eax	      2525	ops.c	FUNCTION_37	FOR_1	CALL_2
0x4004864	      0xe800000000	                          call 0x4004869	      2526	ops.c	FUNCTION_37	FOR_1	IF_3	CALL_3
0x4004869	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2526	ops.c	FUNCTION_37	FOR_1	IF_3	CALL_3
0x400486c	     0xf84de040000	                            je 0x4004d50	      2526	ops.c	FUNCTION_37	FOR_1	IF_3	CALL_3
0x4004872	          0x83eb01	                              sub ebx, 1	      2513	ops.c	FUNCTION_37	FOR_1
0x4004875	            0x85db	                           test ebx, ebx	      2513	ops.c	FUNCTION_37	FOR_1
0x4004877	     0xf8ed3040000	                           jle 0x4004d50	      2513	ops.c	FUNCTION_37	FOR_1
0x400487d	    0x8b0d00000000	            mov ecx, dword [0x04004883] 	      2516	ops.c	FUNCTION_37	FOR_1	IF_1
0x4004883	            0x85c9	                           test ecx, ecx	      2516	ops.c	FUNCTION_37	FOR_1	IF_1
0x4004885	            0x74c9	                            je 0x4004850	      2516	ops.c	FUNCTION_37	FOR_1	IF_1
0x4004887	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2518	ops.c	FUNCTION_37	FOR_1	IF_1	CALL_1
0x400488c	    0x4c8b3d000000	            mov r15, qword [0x04004893] 	      2518	ops.c	FUNCTION_37	FOR_1	IF_1	CALL_1
0x4004893	      0xe800000000	                          call 0x4004898	      2518	ops.c	FUNCTION_37	FOR_1	IF_1	CALL_1
0x4004898	          0x4889c7	                            mov rdi, rax	      2518	ops.c	FUNCTION_37	FOR_1	IF_1	CALL_1
0x400489b	          0x41ffd7	                                call r15	      2518	ops.c	FUNCTION_37	FOR_1	IF_1	CALL_1
0x400489e	            0x85c0	                           test eax, eax	      2521	ops.c	FUNCTION_37	FOR_1	IF_1	IF_2
0x40048a0	            0x7eae	                           jle 0x4004850	      2521	ops.c	FUNCTION_37	FOR_1	IF_1	IF_2
0x40048a2	          0x83e801	                              sub eax, 1	      2522	ops.c	FUNCTION_37	FOR_1	IF_1	IF_2
0x40048a5	            0x29c3	                            sub ebx, eax	      2522	ops.c	FUNCTION_37	FOR_1	IF_1	IF_2
0x40048a7	            0xeba7	                           jmp 0x4004850	      2522	ops.c	FUNCTION_37	FOR_1	IF_1	IF_2
0x40048a9	          0x8b5e38	            mov ebx, dword [rsi + 0x38] 	      2439	ops.c	FUNCTION_36	ELSE_1	IF_8	CALL_12
0x40048ac	        0x2b5c2438	             sub ebx, dword [rsp + 0x38]	      2439	ops.c	FUNCTION_36	ELSE_1	IF_8	CALL_12
0x40048b0	          0x448b26	                   mov r12d, dword [rsi]	      2439	ops.c	FUNCTION_36	ELSE_1	IF_8	CALL_12
0x40048b3	          0x83c301	                              add ebx, 1	      2439	ops.c	FUNCTION_36	ELSE_1	IF_8	CALL_12
0x40048b6	            0x85db	                           test ebx, ebx	      2513	ops.c	FUNCTION_37	FOR_1
0x40048b8	            0x7e72	                           jle 0x400492c	      2513	ops.c	FUNCTION_37	FOR_1
0x40048ba	        0x4183fc0f	                           cmp r12d, 0xf	      2513	ops.c	FUNCTION_37	FOR_1
0x40048be	      0x488d6c2430	                   lea rbp, [rsp + 0x30]	      2513	ops.c	FUNCTION_37	FOR_1
0x40048c3	    0x41bf4fecc44e	                    mov r15d, 0x4ec4ec4f	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x40048c9	       0xf9444240c	                   sete byte [rsp + 0xc]	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x40048ce	          0x4531ed	                          xor r13d, r13d	      2513	ops.c	FUNCTION_37	FOR_1
0x40048d1	    0x8b0500000000	            mov eax, dword [0x040048d7] 	      2516	ops.c	FUNCTION_37	FOR_1	IF_1
0x40048d7	            0x85c0	                           test eax, eax	      2516	ops.c	FUNCTION_37	FOR_1	IF_1
0x40048d9	     0xf8536080000	                           jne 0x4005115	      2516	ops.c	FUNCTION_37	FOR_1	IF_1
0x40048df	          0x4889ef	                            mov rdi, rbp	      2545	ops.c	FUNCTION_38	CALL_1
0x40048e2	      0xe800000000	                          call 0x40048e7	      2545	ops.c	FUNCTION_38	CALL_1
0x40048e7	          0x83f87f	                           cmp eax, 0x7f	      2548	ops.c	FUNCTION_38	IF_1
0x40048ea	          0x4189c6	                           mov r14d, eax	      2545	ops.c	FUNCTION_38	CALL_1
0x40048ed	         0xf9f0424	                         setg byte [rsp]	      2548	ops.c	FUNCTION_38	IF_1
0x40048f1	     0xf8eda060000	                           jle 0x4004fd1	      2548	ops.c	FUNCTION_38	IF_1
0x40048f7	      0x807c240c00	                 cmp byte [rsp + 0xc], 0	      2548	ops.c	FUNCTION_38	IF_1
0x40048fc	     0xf84cf060000	                            je 0x4004fd1	      2548	ops.c	FUNCTION_38	IF_1
0x4004902	            0x31c0	                            xor eax, eax	      2602	ops.c	FUNCTION_38
0x4004904	          0x4889ef	                            mov rdi, rbp	      2526	ops.c	FUNCTION_37	FOR_1	IF_3	CALL_3
0x4004907	          0x4109c5	                            or r13d, eax	      2525	ops.c	FUNCTION_37	FOR_1	CALL_2
0x400490a	      0xe800000000	                          call 0x400490f	      2526	ops.c	FUNCTION_37	FOR_1	IF_3	CALL_3
0x400490f	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2526	ops.c	FUNCTION_37	FOR_1	IF_3	CALL_3
0x4004912	            0x7407	                            je 0x400491b	      2526	ops.c	FUNCTION_37	FOR_1	IF_3	CALL_3
0x4004914	          0x83eb01	                              sub ebx, 1	      2513	ops.c	FUNCTION_37	FOR_1
0x4004917	            0x85db	                           test ebx, ebx	      2513	ops.c	FUNCTION_37	FOR_1
0x4004919	            0x7fb6	                            jg 0x40048d1	      2513	ops.c	FUNCTION_37	FOR_1
0x400491b	      0x44896c2428	            mov dword [rsp + 0x28], r13d	      2513	ops.c	FUNCTION_37	FOR_1
0x4004920	        0x8b542428	            mov edx, dword [rsp + 0x28] 	      2450	ops.c	FUNCTION_36	ELSE_1	IF_10
0x4004924	            0x85d2	                           test edx, edx	      2450	ops.c	FUNCTION_36	ELSE_1	IF_10
0x4004926	     0xf854c050000	                           jne 0x4004e78	      2450	ops.c	FUNCTION_36	ELSE_1	IF_10
0x400492c	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2481	ops.c	FUNCTION_36	IF_12
0x4004931	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      2481	ops.c	FUNCTION_36	IF_12
0x4004934	            0x85c0	                           test eax, eax	      2481	ops.c	FUNCTION_36	IF_12
0x4004936	     0xf8586060000	                           jne 0x4004fc2	      2481	ops.c	FUNCTION_36	IF_12
0x400493c	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      2488	ops.c	FUNCTION_36
0x4004941	    0x488b05000000	            mov rax, qword [0x04004948] 	      2488	ops.c	FUNCTION_36
0x4004948	        0x488b5a28	            mov rbx, qword [rdx + 0x28] 	      2488	ops.c	FUNCTION_36
0x400494c	        0x488b4a20	            mov rcx, qword [rdx + 0x20] 	      2488	ops.c	FUNCTION_36
0x4004950	    0x488998e81100	          mov qword [rax + 0x11e8], rbx 	      2488	ops.c	FUNCTION_36
0x4004957	        0x488b5a38	            mov rbx, qword [rdx + 0x38] 	      2489	ops.c	FUNCTION_36
0x400495b	    0x488988e01100	          mov qword [rax + 0x11e0], rcx 	      2488	ops.c	FUNCTION_36
0x4004962	        0x488b4a30	            mov rcx, qword [rdx + 0x30] 	      2489	ops.c	FUNCTION_36
0x4004966	    0x488998081200	          mov qword [rax + 0x1208], rbx 	      2489	ops.c	FUNCTION_36
0x400496d	        0x488b5a50	            mov rbx, qword [rdx + 0x50] 	      2491	ops.c	FUNCTION_36	IF_13
0x4004971	    0x483b1d000000	            cmp rbx, qword [0x04004978] 	      2491	ops.c	FUNCTION_36	IF_13
0x4004978	    0x488988001200	          mov qword [rax + 0x1200], rcx 	      2489	ops.c	FUNCTION_36
0x400497f	            0x7e28	                           jle 0x40049a9	      2491	ops.c	FUNCTION_36	IF_13
0x4004981	        0x4883fb01	                              cmp rbx, 1	      2493	ops.c	FUNCTION_36	IF_13	IF_14
0x4004985	      0xba05000000	                              mov edx, 5	      2494	ops.c	FUNCTION_36	IF_13	CALL_29
0x400498a	     0xf8419060000	                            je 0x4004fa9	      2493	ops.c	FUNCTION_36	IF_13	IF_14
0x4004990	      0xbe00000000	                              mov esi, 0	      2496	ops.c	FUNCTION_36	IF_13	CALL_31
0x4004995	            0x31ff	                            xor edi, edi	      2496	ops.c	FUNCTION_36	IF_13	CALL_31
0x4004997	      0xe800000000	                          call 0x400499c	      2496	ops.c	FUNCTION_36	IF_13	CALL_31
0x400499c	          0x4889de	                            mov rsi, rbx	      2496	ops.c	FUNCTION_36	IF_13	CALL_31
0x400499f	          0x4889c7	                            mov rdi, rax	      2496	ops.c	FUNCTION_36	IF_13	CALL_31
0x40049a2	            0x31c0	                            xor eax, eax	      2496	ops.c	FUNCTION_36	IF_13	CALL_31
0x40049a4	      0xe800000000	                          call 0x40049a9	      2496	ops.c	FUNCTION_36	IF_13	CALL_31
0x40049a9	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	      2498	ops.c	FUNCTION_36
0x40049b1	    0x644833042528	                xor rax, qword fs:[0x28]	      2498	ops.c	FUNCTION_36
0x40049ba	     0xf85ba080000	                           jne 0x400527a	      2498	ops.c	FUNCTION_36
0x40049c0	    0x4881c4980000	                           add rsp, 0x98	      2498	ops.c	FUNCTION_36
0x40049c7	              0x5b	                                 pop rbx	      2498	ops.c	FUNCTION_36
0x40049c8	              0x5d	                                 pop rbp	      2498	ops.c	FUNCTION_36
0x40049c9	            0x415c	                                 pop r12	      2498	ops.c	FUNCTION_36
0x40049cb	            0x415d	                                 pop r13	      2498	ops.c	FUNCTION_36
0x40049cd	            0x415e	                                 pop r14	      2498	ops.c	FUNCTION_36
0x40049cf	            0x415f	                                 pop r15	      2498	ops.c	FUNCTION_36
0x40049d1	              0xc3	                                     ret	      2498	ops.c	FUNCTION_36
0x40049d2	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2427	ops.c	FUNCTION_36	ELSE_1	IF_5
0x40049d7	        0x83780801	                  cmp dword [rax + 8], 1	      2427	ops.c	FUNCTION_36	ELSE_1	IF_5
0x40049db	     0xf84b2070000	                            je 0x4005193	      2427	ops.c	FUNCTION_36	ELSE_1	IF_5
0x40049e1	          0x8b5014	            mov edx, dword [rax + 0x14] 	      2435	ops.c	FUNCTION_36	ELSE_1	ELSE_2	IF_7
0x40049e4	            0x85d2	                           test edx, edx	      2435	ops.c	FUNCTION_36	ELSE_1	ELSE_2	IF_7
0x40049e6	     0xf84a5050000	                            je 0x4004f91	      2435	ops.c	FUNCTION_36	ELSE_1	ELSE_2	IF_7
0x40049ec	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      2438	ops.c	FUNCTION_36	ELSE_1	IF_8
0x40049f1	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      2438	ops.c	FUNCTION_36	ELSE_1	IF_8
0x40049f6	        0x488b5630	            mov rdx, qword [rsi + 0x30] 	      2438	ops.c	FUNCTION_36	ELSE_1	IF_8
0x40049fa	          0x4839d0	                            cmp rax, rdx	      2438	ops.c	FUNCTION_36	ELSE_1	IF_8
0x40049fd	     0xf84a6feffff	                            je 0x40048a9	      2438	ops.c	FUNCTION_36	ELSE_1	IF_8
0x4004a03	          0x4839c2	                            cmp rdx, rax	      2444	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x4004a06	    0xc74424280000	               mov dword [rsp + 0x28], 0	      2444	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x4004a0e	     0xf85be000000	                           jne 0x4004ad2	      2444	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x4004a14	         0xf1f4000	                         nop dword [rax]	      2444	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x4004a18	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      2445	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2
0x4004a1d	      0x488d6c2430	                   lea rbp, [rsp + 0x30]	      2445	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2
0x4004a22	          0x8b4638	            mov eax, dword [rsi + 0x38] 	      2445	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2
0x4004a25	          0x448b2e	                   mov r13d, dword [rsi]	      2444	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x4004a28	          0x8d5801	                      lea ebx, [rax + 1]	      2444	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x4004a2b	            0x85db	                           test ebx, ebx	      2513	ops.c	FUNCTION_37	FOR_1
0x4004a2d	     0xf8e78030000	                           jle 0x4004dab	      2513	ops.c	FUNCTION_37	FOR_1
0x4004a33	        0x4183fd0f	                           cmp r13d, 0xf	      2513	ops.c	FUNCTION_37	FOR_1
0x4004a37	         0xf940424	                         sete byte [rsp]	      2513	ops.c	FUNCTION_37	FOR_1
0x4004a3b	          0x4531e4	                          xor r12d, r12d	      2600	ops.c	FUNCTION_38	IF_10
0x4004a3e	            0x6690	                                     nop	      2600	ops.c	FUNCTION_38	IF_10
0x4004a40	    0x448b0d000000	            mov r9d, dword [0x04004a47] 	      2516	ops.c	FUNCTION_37	FOR_1	IF_1
0x4004a47	          0x4585c9	                           test r9d, r9d	      2516	ops.c	FUNCTION_37	FOR_1	IF_1
0x4004a4a	     0xf85f8010000	                           jne 0x4004c48	      2516	ops.c	FUNCTION_37	FOR_1	IF_1
0x4004a50	          0x4889ef	                            mov rdi, rbp	      2545	ops.c	FUNCTION_38	CALL_1
0x4004a53	      0xe800000000	                          call 0x4004a58	      2545	ops.c	FUNCTION_38	CALL_1
0x4004a58	          0x83f87f	                           cmp eax, 0x7f	      2548	ops.c	FUNCTION_38	IF_1
0x4004a5b	          0x4189c7	                           mov r15d, eax	      2545	ops.c	FUNCTION_38	CALL_1
0x4004a5e	        0x410f9fc6	                               setg r14b	      2548	ops.c	FUNCTION_38	IF_1
0x4004a62	     0xf8e98000000	                           jle 0x4004b00	      2548	ops.c	FUNCTION_38	IF_1
0x4004a68	        0x803c2400	                       cmp byte [rsp], 0	      2548	ops.c	FUNCTION_38	IF_1
0x4004a6c	     0xf848e000000	                            je 0x4004b00	      2548	ops.c	FUNCTION_38	IF_1
0x4004a72	            0x31c0	                            xor eax, eax	      2602	ops.c	FUNCTION_38
0x4004a74	          0x4889ef	                            mov rdi, rbp	      2526	ops.c	FUNCTION_37	FOR_1	IF_3	CALL_3
0x4004a77	          0x4109c4	                            or r12d, eax	      2525	ops.c	FUNCTION_37	FOR_1	CALL_2
0x4004a7a	      0xe800000000	                          call 0x4004a7f	      2526	ops.c	FUNCTION_37	FOR_1	IF_3	CALL_3
0x4004a7f	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2526	ops.c	FUNCTION_37	FOR_1	IF_3	CALL_3
0x4004a82	            0x7407	                            je 0x4004a8b	      2526	ops.c	FUNCTION_37	FOR_1	IF_3	CALL_3
0x4004a84	          0x83eb01	                              sub ebx, 1	      2513	ops.c	FUNCTION_37	FOR_1
0x4004a87	            0x85db	                           test ebx, ebx	      2513	ops.c	FUNCTION_37	FOR_1
0x4004a89	            0x7fb5	                            jg 0x4004a40	      2513	ops.c	FUNCTION_37	FOR_1
0x4004a8b	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4004a90	      0x4409642428	             or dword [rsp + 0x28], r12d	      2444	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x4004a95	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4004a9a	        0x48397030	            cmp qword [rax + 0x30], rsi 	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4004a9e	     0xf8404030000	                            je 0x4004da8	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4004aa4	     0xf8c76feffff	                            jl 0x4004920	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4004aaa	          0x4889ef	                            mov rdi, rbp	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4004aad	      0xe800000000	                          call 0x4004ab2	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4004ab2	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4004ab5	     0xf8465feffff	                            je 0x4004920	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4004abb	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4004ac0	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4004ac5	        0x488b5130	            mov rdx, qword [rcx + 0x30] 	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4004ac9	          0x4839c2	                            cmp rdx, rax	      2444	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x4004acc	     0xf8446ffffff	                            je 0x4004a18	      2444	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x4004ad2	      0x488d6c2430	                   lea rbp, [rsp + 0x30]	      2446	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_15
0x4004ad7	          0x4889ef	                            mov rdi, rbp	      2446	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_15
0x4004ada	      0xe800000000	                          call 0x4004adf	      2446	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_15
0x4004adf	          0x4889c7	                            mov rdi, rax	      2446	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_15
0x4004ae2	      0xe800000000	                          call 0x4004ae7	      2446	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_15
0x4004ae7	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      2444	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x4004aec	            0x85c0	                           test eax, eax	      2513	ops.c	FUNCTION_37	FOR_1
0x4004aee	            0x89c3	                            mov ebx, eax	      2444	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x4004af0	          0x448b2a	                   mov r13d, dword [rdx]	      2444	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x4004af3	     0xf8f3affffff	                            jg 0x4004a33	      2513	ops.c	FUNCTION_37	FOR_1
0x4004af9	          0x4531e4	                          xor r12d, r12d	      2511	ops.c	FUNCTION_37
0x4004afc	            0xeb8d	                           jmp 0x4004a8b	      2511	ops.c	FUNCTION_37
0x4004afe	            0x6690	                                     nop	      2511	ops.c	FUNCTION_37
0x4004b00	        0x4183fd0b	                           cmp r13d, 0xb	      2552	ops.c	FUNCTION_38	IF_2
0x4004b04	     0xf859f000000	                           jne 0x4004ba9	      2552	ops.c	FUNCTION_38	IF_2
0x4004b0a	    0x4181ffdf0000	                          cmp r15d, 0xdf	      2552	ops.c	FUNCTION_38	IF_2
0x4004b11	     0xf8592000000	                           jne 0x4004ba9	      2552	ops.c	FUNCTION_38	IF_2
0x4004b17	    0x448b05000000	            mov r8d, dword [0x04004b1e] 	      2553	ops.c	FUNCTION_38	IF_2	CALL_2
0x4004b1e	          0x4585c0	                           test r8d, r8d	      2553	ops.c	FUNCTION_38	IF_2	CALL_2
0x4004b21	            0x7515	                           jne 0x4004b38	      2553	ops.c	FUNCTION_38	IF_2	CALL_2
0x4004b23	    0x488b35000000	            mov rsi, qword [0x04004b2a] 	      2553	ops.c	FUNCTION_38	IF_2	CALL_2
0x4004b2a	      0xbf00000000	                              mov edi, 0	      2553	ops.c	FUNCTION_38	IF_2	CALL_2
0x4004b2f	      0xb90b000000	                            mov ecx, 0xb	      2553	ops.c	FUNCTION_38	IF_2	CALL_2
0x4004b34	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2553	ops.c	FUNCTION_38	IF_2	CALL_2
0x4004b36	            0x7571	                           jne 0x4004ba9	      2553	ops.c	FUNCTION_38	IF_2	CALL_2
0x4004b38	    0x488b05000000	            mov rax, qword [0x04004b3f] 	      2555	ops.c	FUNCTION_38	IF_2
0x4004b3f	      0x4c8b4c2430	              mov r9, qword [rsp + 0x30]	      2558	ops.c	FUNCTION_38	IF_2
0x4004b44	            0x31ff	                            xor edi, edi	      2559	ops.c	FUNCTION_38	IF_2	CALL_3
0x4004b46	      0x4c8b542438	            mov r10, qword [rsp + 0x38] 	      2558	ops.c	FUNCTION_38	IF_2
0x4004b4b	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      2555	ops.c	FUNCTION_38	IF_2
0x4004b4f	          0x8b4840	            mov ecx, dword [rax + 0x40] 	      2555	ops.c	FUNCTION_38	IF_2
0x4004b52	          0x8b5044	            mov edx, dword [rax + 0x44] 	      2555	ops.c	FUNCTION_38	IF_2
0x4004b55	        0x4c894838	              mov qword [rax + 0x38], r9	      2558	ops.c	FUNCTION_38	IF_2
0x4004b59	        0x4c895040	             mov qword [rax + 0x40], r10	      2558	ops.c	FUNCTION_38	IF_2
0x4004b5d	      0x4889742420	             mov qword [rsp + 0x20], rsi	      2555	ops.c	FUNCTION_38	IF_2
0x4004b62	        0x894c2418	             mov dword [rsp + 0x18], ecx	      2555	ops.c	FUNCTION_38	IF_2
0x4004b66	        0x8954240c	              mov dword [rsp + 0xc], edx	      2555	ops.c	FUNCTION_38	IF_2
0x4004b6a	      0xe800000000	                          call 0x4004b6f	      2559	ops.c	FUNCTION_38	IF_2	CALL_3
0x4004b6f	      0xbf53000000	                           mov edi, 0x53	      2560	ops.c	FUNCTION_38	IF_2	CALL_4
0x4004b74	      0xe800000000	                          call 0x4004b79	      2560	ops.c	FUNCTION_38	IF_2	CALL_4
0x4004b79	      0xbf53000000	                           mov edi, 0x53	      2561	ops.c	FUNCTION_38	IF_2	CALL_5
0x4004b7e	      0xe800000000	                          call 0x4004b83	      2561	ops.c	FUNCTION_38	IF_2	CALL_5
0x4004b83	    0x488b05000000	            mov rax, qword [0x04004b8a] 	      2562	ops.c	FUNCTION_38	IF_2
0x4004b8a	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      2562	ops.c	FUNCTION_38	IF_2
0x4004b8f	          0x4889ef	                            mov rdi, rbp	      2563	ops.c	FUNCTION_38	IF_2	CALL_6
0x4004b92	        0x8b4c2418	            mov ecx, dword [rsp + 0x18] 	      2562	ops.c	FUNCTION_38	IF_2
0x4004b96	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      2562	ops.c	FUNCTION_38	IF_2
0x4004b9a	        0x48897038	             mov qword [rax + 0x38], rsi	      2562	ops.c	FUNCTION_38	IF_2
0x4004b9e	          0x894840	             mov dword [rax + 0x40], ecx	      2562	ops.c	FUNCTION_38	IF_2
0x4004ba1	          0x895044	             mov dword [rax + 0x44], edx	      2562	ops.c	FUNCTION_38	IF_2
0x4004ba4	      0xe800000000	                          call 0x4004ba9	      2563	ops.c	FUNCTION_38	IF_2	CALL_6
0x4004ba9	    0x8b3d00000000	            mov edi, dword [0x04004baf] 	      2566	ops.c	FUNCTION_38	IF_3
0x4004baf	            0x85ff	                           test edi, edi	      2566	ops.c	FUNCTION_38	IF_3
0x4004bb1	            0x740d	                            je 0x4004bc0	      2566	ops.c	FUNCTION_38	IF_3
0x4004bb3	    0x4181ffff0000	                          cmp r15d, 0xff	      2566	ops.c	FUNCTION_38	IF_3
0x4004bba	     0xf8fb2feffff	                            jg 0x4004a72	      2566	ops.c	FUNCTION_38	IF_3
0x4004bc0	          0x4489ff	                           mov edi, r15d	      2570	ops.c	FUNCTION_38	IF_4	CALL_7
0x4004bc3	      0xe800000000	                          call 0x4004bc8	      2570	ops.c	FUNCTION_38	IF_4	CALL_7
0x4004bc8	            0x85c0	                           test eax, eax	      2570	ops.c	FUNCTION_38	IF_4	CALL_7
0x4004bca	     0xf84a0000000	                            je 0x4004c70	      2570	ops.c	FUNCTION_38	IF_4	CALL_7
0x4004bd0	        0x4183fd0f	                           cmp r13d, 0xf	      2572	ops.c	FUNCTION_38	IF_4	IF_5
0x4004bd4	     0xf84ce000000	                            je 0x4004ca8	      2572	ops.c	FUNCTION_38	IF_4	IF_5
0x4004bda	        0x4183fd0c	                           cmp r13d, 0xc	      2574	ops.c	FUNCTION_38	IF_4	ELSE_1	IF_6
0x4004bde	     0xf848efeffff	                            je 0x4004a72	      2574	ops.c	FUNCTION_38	IF_4	ELSE_1	IF_6
0x4004be4	          0x4489ff	                           mov edi, r15d	      2575	ops.c	FUNCTION_38	IF_4	ELSE_1	IF_6
0x4004be7	      0xe800000000	                          call 0x4004bec	      2575	ops.c	FUNCTION_38	IF_4	ELSE_1	IF_6
0x4004bec	            0x89c1	                            mov ecx, eax	      2575	ops.c	FUNCTION_38	IF_4	ELSE_1	IF_6
0x4004bee	          0x4139cf	                           cmp r15d, ecx	      2584	ops.c	FUNCTION_38	IF_10
0x4004bf1	     0xf847bfeffff	                            je 0x4004a72	      2584	ops.c	FUNCTION_38	IF_10
0x4004bf7	    0x8b3500000000	            mov esi, dword [0x04004bfd] 	      2587	ops.c	FUNCTION_38	IF_10	IF_11
0x4004bfd	            0x85f6	                           test esi, esi	      2587	ops.c	FUNCTION_38	IF_10	IF_11
0x4004bff	            0x7412	                            je 0x4004c13	      2587	ops.c	FUNCTION_38	IF_10	IF_11
0x4004c01	          0x83f97f	                           cmp ecx, 0x7f	      2587	ops.c	FUNCTION_38	IF_10	IF_11
0x4004c04	     0xf8fc6000000	                            jg 0x4004cd0	      2587	ops.c	FUNCTION_38	IF_10	IF_11
0x4004c0a	          0x4584f6	                         test r14b, r14b	      2587	ops.c	FUNCTION_38	IF_10	IF_11
0x4004c0d	     0xf85bd000000	                           jne 0x4004cd0	      2587	ops.c	FUNCTION_38	IF_10	IF_11
0x4004c13	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      2599	ops.c	FUNCTION_38	IF_10	CALL_17
0x4004c18	    0x488b3d000000	            mov rdi, qword [0x04004c1f] 	      2599	ops.c	FUNCTION_38	IF_10	CALL_17
0x4004c1f	      0xba01000000	                              mov edx, 1	      2599	ops.c	FUNCTION_38	IF_10	CALL_17
0x4004c24	        0x894c240c	              mov dword [rsp + 0xc], ecx	      2599	ops.c	FUNCTION_38	IF_10	CALL_17
0x4004c28	      0xe800000000	                          call 0x4004c2d	      2599	ops.c	FUNCTION_38	IF_10	CALL_17
0x4004c2d	      0x4863542438	         movsxd rdx, dword [rsp + 0x38] 	      2599	ops.c	FUNCTION_38	IF_10	CALL_17
0x4004c32	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      2599	ops.c	FUNCTION_38	IF_10	CALL_17
0x4004c36	          0x880c10	                mov byte [rax + rdx], cl	      2599	ops.c	FUNCTION_38	IF_10	CALL_17
0x4004c39	      0xb801000000	                              mov eax, 1	      2600	ops.c	FUNCTION_38	IF_10
0x4004c3e	      0xe931feffff	                           jmp 0x4004a74	      2600	ops.c	FUNCTION_38	IF_10
0x4004c43	       0xf1f440000	                   nop dword [rax + rax]	      2600	ops.c	FUNCTION_38	IF_10
0x4004c48	          0x4889ef	                            mov rdi, rbp	      2518	ops.c	FUNCTION_37	FOR_1	IF_1	CALL_1
0x4004c4b	    0x4c8b35000000	            mov r14, qword [0x04004c52] 	      2518	ops.c	FUNCTION_37	FOR_1	IF_1	CALL_1
0x4004c52	      0xe800000000	                          call 0x4004c57	      2518	ops.c	FUNCTION_37	FOR_1	IF_1	CALL_1
0x4004c57	          0x4889c7	                            mov rdi, rax	      2518	ops.c	FUNCTION_37	FOR_1	IF_1	CALL_1
0x4004c5a	          0x41ffd6	                                call r14	      2518	ops.c	FUNCTION_37	FOR_1	IF_1	CALL_1
0x4004c5d	            0x85c0	                           test eax, eax	      2521	ops.c	FUNCTION_37	FOR_1	IF_1	IF_2
0x4004c5f	     0xf8eebfdffff	                           jle 0x4004a50	      2521	ops.c	FUNCTION_37	FOR_1	IF_1	IF_2
0x4004c65	          0x83e801	                              sub eax, 1	      2522	ops.c	FUNCTION_37	FOR_1	IF_1	IF_2
0x4004c68	            0x29c3	                            sub ebx, eax	      2522	ops.c	FUNCTION_37	FOR_1	IF_1	IF_2
0x4004c6a	      0xe9e1fdffff	                           jmp 0x4004a50	      2522	ops.c	FUNCTION_37	FOR_1	IF_1	IF_2
0x4004c6f	              0x90	                                     nop	      2522	ops.c	FUNCTION_37	FOR_1	IF_1	IF_2
0x4004c70	          0x4489ff	                           mov edi, r15d	      2577	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_10
0x4004c73	      0xe800000000	                          call 0x4004c78	      2577	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_10
0x4004c78	            0x85c0	                           test eax, eax	      2577	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_10
0x4004c7a	     0xf84f2fdffff	                            je 0x4004a72	      2577	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_10
0x4004c80	        0x4183fd0f	                           cmp r13d, 0xf	      2579	ops.c	FUNCTION_38	ELSE_2	IF_7	IF_8
0x4004c84	     0xf8456010000	                            je 0x4004de0	      2579	ops.c	FUNCTION_38	ELSE_2	IF_7	IF_8
0x4004c8a	        0x4183fd0b	                           cmp r13d, 0xb	      2581	ops.c	FUNCTION_38	ELSE_2	IF_7	ELSE_3	IF_9
0x4004c8e	     0xf84defdffff	                            je 0x4004a72	      2581	ops.c	FUNCTION_38	ELSE_2	IF_7	ELSE_3	IF_9
0x4004c94	          0x4489ff	                           mov edi, r15d	      2582	ops.c	FUNCTION_38	ELSE_2	IF_7	ELSE_3	IF_9
0x4004c97	      0xe800000000	                          call 0x4004c9c	      2582	ops.c	FUNCTION_38	ELSE_2	IF_7	ELSE_3	IF_9
0x4004c9c	            0x89c1	                            mov ecx, eax	      2582	ops.c	FUNCTION_38	ELSE_2	IF_7	ELSE_3	IF_9
0x4004c9e	      0xe94bffffff	                           jmp 0x4004bee	      2582	ops.c	FUNCTION_38	ELSE_2	IF_7	ELSE_3	IF_9
0x4004ca3	       0xf1f440000	                   nop dword [rax + rax]	      2582	ops.c	FUNCTION_38	ELSE_2	IF_7	ELSE_3	IF_9
0x4004ca8	        0x418d77ac	                   lea esi, [r15 - 0x54]	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4004cac	      0xb84fecc44e	                     mov eax, 0x4ec4ec4f	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4004cb1	            0xf7ee	                                imul esi	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4004cb3	            0x89f0	                            mov eax, esi	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4004cb5	          0xc1f81f	                           sar eax, 0x1f	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4004cb8	          0xc1fa03	                              sar edx, 3	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4004cbb	            0x29c2	                            sub edx, eax	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4004cbd	          0x6bca1a	                     imul ecx, edx, 0x1a	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4004cc0	            0x29ce	                            sub esi, ecx	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4004cc2	          0x8d4e61	                   lea ecx, [rsi + 0x61]	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4004cc5	      0xe924ffffff	                           jmp 0x4004bee	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4004cca	    0x660f1f440000	                    nop word [rax + rax]	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4004cd0	    0x488b05000000	            mov rax, qword [0x04004cd7] 	      2589	ops.c	FUNCTION_38	IF_10	IF_11
0x4004cd7	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      2591	ops.c	FUNCTION_38	IF_10	IF_11
0x4004cdc	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      2591	ops.c	FUNCTION_38	IF_10	IF_11
0x4004ce1	        0x894c2420	             mov dword [rsp + 0x20], ecx	      2591	ops.c	FUNCTION_38	IF_10	IF_11
0x4004ce5	        0x4c8b4838	              mov r9, qword [rax + 0x38]	      2589	ops.c	FUNCTION_38	IF_10	IF_11
0x4004ce9	        0x448b4040	            mov r8d, dword [rax + 0x40] 	      2589	ops.c	FUNCTION_38	IF_10	IF_11
0x4004ced	        0x448b7044	           mov r14d, dword [rax + 0x44] 	      2589	ops.c	FUNCTION_38	IF_10	IF_11
0x4004cf1	        0x48897038	             mov qword [rax + 0x38], rsi	      2591	ops.c	FUNCTION_38	IF_10	IF_11
0x4004cf5	        0x48897840	             mov qword [rax + 0x40], rdi	      2591	ops.c	FUNCTION_38	IF_10	IF_11
0x4004cf9	      0x4c894c2418	              mov qword [rsp + 0x18], r9	      2589	ops.c	FUNCTION_38	IF_10	IF_11
0x4004cfe	      0x448944240c	              mov dword [rsp + 0xc], r8d	      2589	ops.c	FUNCTION_38	IF_10	IF_11
0x4004d03	      0xe800000000	                          call 0x4004d08	      2593	ops.c	FUNCTION_38	IF_10	IF_11	CALL_15
0x4004d08	          0x4889c7	                            mov rdi, rax	      2593	ops.c	FUNCTION_38	IF_10	IF_11	CALL_15
0x4004d0b	      0xe800000000	                          call 0x4004d10	      2593	ops.c	FUNCTION_38	IF_10	IF_11	CALL_15
0x4004d10	            0x31d2	                            xor edx, edx	      2593	ops.c	FUNCTION_38	IF_10	IF_11	CALL_15
0x4004d12	          0x4863f8	                         movsxd rdi, eax	      2593	ops.c	FUNCTION_38	IF_10	IF_11	CALL_15
0x4004d15	            0x31f6	                            xor esi, esi	      2593	ops.c	FUNCTION_38	IF_10	IF_11	CALL_15
0x4004d17	      0xe800000000	                          call 0x4004d1c	      2593	ops.c	FUNCTION_38	IF_10	IF_11	CALL_15
0x4004d1c	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	      2594	ops.c	FUNCTION_38	IF_10	IF_11	CALL_16
0x4004d20	            0x89cf	                            mov edi, ecx	      2594	ops.c	FUNCTION_38	IF_10	IF_11	CALL_16
0x4004d22	      0xe800000000	                          call 0x4004d27	      2594	ops.c	FUNCTION_38	IF_10	IF_11	CALL_16
0x4004d27	    0x488b05000000	            mov rax, qword [0x04004d2e] 	      2595	ops.c	FUNCTION_38	IF_10	IF_11
0x4004d2e	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	      2595	ops.c	FUNCTION_38	IF_10	IF_11
0x4004d33	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	      2595	ops.c	FUNCTION_38	IF_10	IF_11
0x4004d38	        0x4c894838	              mov qword [rax + 0x38], r9	      2595	ops.c	FUNCTION_38	IF_10	IF_11
0x4004d3c	        0x44897044	            mov dword [rax + 0x44], r14d	      2595	ops.c	FUNCTION_38	IF_10	IF_11
0x4004d40	        0x44894040	             mov dword [rax + 0x40], r8d	      2595	ops.c	FUNCTION_38	IF_10	IF_11
0x4004d44	      0xb801000000	                              mov eax, 1	      2600	ops.c	FUNCTION_38	IF_10
0x4004d49	      0xe926fdffff	                           jmp 0x4004a74	      2600	ops.c	FUNCTION_38	IF_10
0x4004d4e	            0x6690	                                     nop	      2600	ops.c	FUNCTION_38	IF_10
0x4004d50	          0x4109ed	                            or r13d, ebp	      2408	ops.c	FUNCTION_36	IF_2	FOR_1
0x4004d53	      0xe800000000	                          call 0x4004d58	      2411	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_4
0x4004d58	            0x85c0	                           test eax, eax	      2411	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_4
0x4004d5a	            0x7408	                            je 0x4004d64	      2411	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_4
0x4004d5c	            0x85ed	                           test ebp, ebp	      2411	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_4
0x4004d5e	     0xf85a4000000	                           jne 0x4004e08	      2411	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_4
0x4004d64	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      2401	ops.c	FUNCTION_36	IF_2	FOR_1
0x4004d69	        0x488d5001	                      lea rdx, [rax + 1]	      2401	ops.c	FUNCTION_36	IF_2	FOR_1
0x4004d6d	        0x498b4630	            mov rax, qword [r14 + 0x30] 	      2401	ops.c	FUNCTION_36	IF_2	FOR_1
0x4004d71	      0x4889542430	             mov qword [rsp + 0x30], rdx	      2401	ops.c	FUNCTION_36	IF_2	FOR_1
0x4004d76	          0x4839d0	                            cmp rax, rdx	      2401	ops.c	FUNCTION_36	IF_2	FOR_1
0x4004d79	     0xf8da1faffff	                           jge 0x4004820	      2401	ops.c	FUNCTION_36	IF_2	FOR_1
0x4004d7f	          0x4585ed	                         test r13d, r13d	      2422	ops.c	FUNCTION_36	IF_2	IF_4
0x4004d82	     0xf84a4fbffff	                            je 0x400492c	      2422	ops.c	FUNCTION_36	IF_2	IF_4
0x4004d88	        0x488d5001	                      lea rdx, [rax + 1]	      2423	ops.c	FUNCTION_36	IF_2	CALL_8
0x4004d8c	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2423	ops.c	FUNCTION_36	IF_2	CALL_8
0x4004d91	            0x31c9	                            xor ecx, ecx	      2423	ops.c	FUNCTION_36	IF_2	CALL_8
0x4004d93	            0x31f6	                            xor esi, esi	      2423	ops.c	FUNCTION_36	IF_2	CALL_8
0x4004d95	        0x488b7820	            mov rdi, qword [rax + 0x20] 	      2423	ops.c	FUNCTION_36	IF_2	CALL_8
0x4004d99	      0xe800000000	                          call 0x4004d9e	      2423	ops.c	FUNCTION_36	IF_2	CALL_8
0x4004d9e	      0xe999fbffff	                           jmp 0x400493c	      2423	ops.c	FUNCTION_36	IF_2	CALL_8
0x4004da3	       0xf1f440000	                   nop dword [rax + rax]	      2423	ops.c	FUNCTION_36	IF_2	CALL_8
0x4004da8	          0x8b4038	            mov eax, dword [rax + 0x38] 	      2423	ops.c	FUNCTION_36	IF_2	CALL_8
0x4004dab	        0x39442438	            cmp dword [rsp + 0x38], eax 	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4004daf	     0xf84a9000000	                            je 0x4004e5e	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4004db5	     0xf8f65fbffff	                            jg 0x4004920	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4004dbb	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4004dc0	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4004dc5	        0x48394838	            cmp qword [rax + 0x38], rcx 	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4004dc9	     0xf8451fbffff	                            je 0x4004920	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4004dcf	      0x488d6c2430	                   lea rbp, [rsp + 0x30]	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4004dd4	      0xe9d1fcffff	                           jmp 0x4004aaa	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4004dd9	     0xf1f80000000	                         nop dword [rax]	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4004de0	        0x418d77cc	                   lea esi, [r15 - 0x34]	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4004de4	      0xb84fecc44e	                     mov eax, 0x4ec4ec4f	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4004de9	            0xf7ee	                                imul esi	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4004deb	            0x89f0	                            mov eax, esi	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4004ded	          0xc1f81f	                           sar eax, 0x1f	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4004df0	          0xc1fa03	                              sar edx, 3	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4004df3	            0x29c2	                            sub edx, eax	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4004df5	          0x6bca1a	                     imul ecx, edx, 0x1a	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4004df8	            0x89f2	                            mov edx, esi	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4004dfa	            0x29ca	                            sub edx, ecx	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4004dfc	          0x8d4a41	                   lea ecx, [rdx + 0x41]	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4004dff	      0xe9eafdffff	                           jmp 0x4004bee	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4004e04	         0xf1f4000	                         nop dword [rax]	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4004e08	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      2413	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_5
0x4004e0d	    0x488b3d000000	            mov rdi, qword [0x04004e14] 	      2413	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_5
0x4004e14	            0x31d2	                            xor edx, edx	      2413	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_5
0x4004e16	      0xe800000000	                          call 0x4004e1b	      2413	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_5
0x4004e1b	      0x48634c2448	         movsxd rcx, dword [rsp + 0x48] 	      2415	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_6
0x4004e20	        0x8b542458	            mov edx, dword [rsp + 0x58] 	      2415	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_6
0x4004e24	          0x4889c3	                            mov rbx, rax	      2413	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_5
0x4004e27	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      2415	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_6
0x4004e2c	    0x488b3d000000	            mov rdi, qword [0x04004e33] 	      2415	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_6
0x4004e33	      0xe800000000	                          call 0x4004e38	      2415	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_6
0x4004e38	      0x48634c2458	         movsxd rcx, dword [rsp + 0x58] 	      2418	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3
0x4004e3d	      0x448b442448	            mov r8d, dword [rsp + 0x48] 	      2417	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_7
0x4004e42	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      2417	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_7
0x4004e47	    0x488b3d000000	            mov rdi, qword [0x04004e4e] 	      2417	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_7
0x4004e4e	          0x4889ca	                            mov rdx, rcx	      2418	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3
0x4004e51	          0x4801d9	                            add rcx, rbx	      2417	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_7
0x4004e54	      0xe800000000	                          call 0x4004e59	      2417	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_7
0x4004e59	      0xe906ffffff	                           jmp 0x4004d64	      2417	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_7
0x4004e5e	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4004e63	        0x8b54243c	            mov edx, dword [rsp + 0x3c] 	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4004e67	          0x39503c	            cmp dword [rax + 0x3c], edx 	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4004e6a	     0xf8d4bffffff	                           jge 0x4004dbb	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4004e70	      0xe9abfaffff	                           jmp 0x4004920	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4004e75	           0xf1f00	                         nop dword [rax]	      2447	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4004e78	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      2452	ops.c	FUNCTION_36	ELSE_1	IF_10	CALL_18
0x4004e7d	            0x31c9	                            xor ecx, ecx	      2452	ops.c	FUNCTION_36	ELSE_1	IF_10	CALL_18
0x4004e7f	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	      2452	ops.c	FUNCTION_36	ELSE_1	IF_10	CALL_18
0x4004e83	          0x8b7328	            mov esi, dword [rbx + 0x28] 	      2452	ops.c	FUNCTION_36	ELSE_1	IF_10	CALL_18
0x4004e86	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      2452	ops.c	FUNCTION_36	ELSE_1	IF_10	CALL_18
0x4004e8a	        0x48891424	                    mov qword [rsp], rdx	      2452	ops.c	FUNCTION_36	ELSE_1	IF_10	CALL_18
0x4004e8e	        0x488d5201	                      lea rdx, [rdx + 1]	      2452	ops.c	FUNCTION_36	ELSE_1	IF_10	CALL_18
0x4004e92	      0xe800000000	                          call 0x4004e97	      2452	ops.c	FUNCTION_36	ELSE_1	IF_10	CALL_18
0x4004e97	      0xe800000000	                          call 0x4004e9c	      2455	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_19
0x4004e9c	            0x85c0	                           test eax, eax	      2455	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_19
0x4004e9e	     0xf8498faffff	                            je 0x400493c	      2455	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_19
0x4004ea4	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      2460	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4004ea8	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      2460	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4004eac	          0x4889c6	                            mov rsi, rax	      2460	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4004eaf	        0x483b7330	            cmp rsi, qword [rbx + 0x30] 	      2461	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x4004eb3	      0x4889442430	             mov qword [rsp + 0x30], rax	      2460	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4004eb8	      0x4889542438	             mov qword [rsp + 0x38], rdx	      2460	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4004ebd	            0x7d73	                           jge 0x4004f32	      2461	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x4004ebf	          0x4889dd	                            mov rbp, rbx	      2461	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x4004ec2	    0x488b3d000000	            mov rdi, qword [0x04004ec9] 	      2463	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_20
0x4004ec9	            0x31d2	                            xor edx, edx	      2463	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_20
0x4004ecb	      0xe800000000	                          call 0x4004ed0	      2463	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_20
0x4004ed0	          0x4889c7	                            mov rdi, rax	      2464	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_21
0x4004ed3	          0x4989c4	                            mov r12, rax	      2463	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_20
0x4004ed6	      0xe800000000	                          call 0x4004edb	      2464	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_21
0x4004edb	        0x8b542438	            mov edx, dword [rsp + 0x38] 	      2464	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_21
0x4004edf	            0x89c3	                            mov ebx, eax	      2464	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_21
0x4004ee1	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      2465	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_22
0x4004ee6	    0x488b3d000000	            mov rdi, qword [0x04004eed] 	      2465	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_22
0x4004eed	            0x29d3	                            sub ebx, edx	      2464	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_21
0x4004eef	          0x4863cb	                         movsxd rcx, ebx	      2465	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_22
0x4004ef2	      0xe800000000	                          call 0x4004ef7	      2465	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_22
0x4004ef7	      0x48634c2438	         movsxd rcx, dword [rsp + 0x38] 	      2467	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x4004efc	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      2466	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_23
0x4004f01	          0x4189d8	                            mov r8d, ebx	      2466	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_23
0x4004f04	    0x488b3d000000	            mov rdi, qword [0x04004f0b] 	      2466	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_23
0x4004f0b	          0x4889ca	                            mov rdx, rcx	      2467	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x4004f0e	          0x4c01e1	                            add rcx, r12	      2466	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_23
0x4004f11	      0xe800000000	                          call 0x4004f16	      2466	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_23
0x4004f16	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      2469	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x4004f1b	    0xc74424380000	               mov dword [rsp + 0x38], 0	      2468	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x4004f23	        0x488d7001	                      lea rsi, [rax + 1]	      2469	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x4004f27	        0x48397530	            cmp qword [rbp + 0x30], rsi 	      2461	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x4004f2b	      0x4889742430	             mov qword [rsp + 0x30], rsi	      2469	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x4004f30	            0x7f90	                            jg 0x4004ec2	      2461	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x4004f32	    0x488b3d000000	            mov rdi, qword [0x04004f39] 	      2471	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_24
0x4004f39	            0x31d2	                            xor edx, edx	      2471	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_24
0x4004f3b	      0xe800000000	                          call 0x4004f40	      2471	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_24
0x4004f40	          0x4889c5	                            mov rbp, rax	      2471	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_24
0x4004f43	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      2472	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4004f48	        0x8b542438	            mov edx, dword [rsp + 0x38] 	      2472	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4004f4c	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      2473	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_25
0x4004f51	    0x488b3d000000	            mov rdi, qword [0x04004f58] 	      2473	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_25
0x4004f58	          0x8b4038	            mov eax, dword [rax + 0x38] 	      2472	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4004f5b	            0x89c3	                            mov ebx, eax	      2472	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4004f5d	          0x890424	                    mov dword [rsp], eax	      2472	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4004f60	            0x29d3	                            sub ebx, edx	      2472	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4004f62	          0x83c301	                              add ebx, 1	      2472	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4004f65	          0x4863cb	                         movsxd rcx, ebx	      2473	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_25
0x4004f68	      0xe800000000	                          call 0x4004f6d	      2473	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_25
0x4004f6d	      0x48634c2438	         movsxd rcx, dword [rsp + 0x38] 	      2475	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4004f72	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      2474	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_26
0x4004f77	          0x4189d8	                            mov r8d, ebx	      2474	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_26
0x4004f7a	    0x488b3d000000	            mov rdi, qword [0x04004f81] 	      2474	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_26
0x4004f81	          0x4889ca	                            mov rdx, rcx	      2475	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4004f84	          0x4801e9	                            add rcx, rbp	      2474	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_26
0x4004f87	      0xe800000000	                          call 0x4004f8c	      2474	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_26
0x4004f8c	      0xe9abf9ffff	                           jmp 0x400493c	      2474	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_26
0x4004f91	        0x488d7830	                   lea rdi, [rax + 0x30]	      2436	ops.c	FUNCTION_36	ELSE_1	ELSE_2	IF_7
0x4004f95	      0xe800000000	                          call 0x4004f9a	      2436	ops.c	FUNCTION_36	ELSE_1	ELSE_2	IF_7
0x4004f9a	      0xe94dfaffff	                           jmp 0x40049ec	      2436	ops.c	FUNCTION_36	ELSE_1	ELSE_2	IF_7
0x4004f9f	      0xe800000000	                          call 0x4004fa4	      2411	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_4
0x4004fa4	      0xe9bbfdffff	                           jmp 0x4004d64	      2411	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_4
0x4004fa9	            0x31ff	                            xor edi, edi	      2494	ops.c	FUNCTION_36	IF_13	CALL_29
0x4004fab	      0xbe00000000	                              mov esi, 0	      2494	ops.c	FUNCTION_36	IF_13	CALL_29
0x4004fb0	      0xe800000000	                          call 0x4004fb5	      2494	ops.c	FUNCTION_36	IF_13	CALL_29
0x4004fb5	          0x4889c7	                            mov rdi, rax	      2494	ops.c	FUNCTION_36	IF_13	CALL_29
0x4004fb8	      0xe800000000	                          call 0x4004fbd	      2494	ops.c	FUNCTION_36	IF_13	CALL_29
0x4004fbd	      0xe9e7f9ffff	                           jmp 0x40049a9	      2494	ops.c	FUNCTION_36	IF_13	CALL_29
0x4004fc2	      0xbf14000000	                           mov edi, 0x14	      2483	ops.c	FUNCTION_36	CALL_27
0x4004fc7	      0xe800000000	                          call 0x4004fcc	      2483	ops.c	FUNCTION_36	CALL_27
0x4004fcc	      0xe96bf9ffff	                           jmp 0x400493c	      2483	ops.c	FUNCTION_36	CALL_27
0x4004fd1	        0x4183fc0b	                           cmp r12d, 0xb	      2552	ops.c	FUNCTION_38	IF_2
0x4004fd5	     0xf859d000000	                           jne 0x4005078	      2552	ops.c	FUNCTION_38	IF_2
0x4004fdb	    0x4181fedf0000	                          cmp r14d, 0xdf	      2552	ops.c	FUNCTION_38	IF_2
0x4004fe2	     0xf8590000000	                           jne 0x4005078	      2552	ops.c	FUNCTION_38	IF_2
0x4004fe8	    0x8b0500000000	            mov eax, dword [0x04004fee] 	      2553	ops.c	FUNCTION_38	IF_2	CALL_2
0x4004fee	            0x85c0	                           test eax, eax	      2553	ops.c	FUNCTION_38	IF_2	CALL_2
0x4004ff0	            0x7515	                           jne 0x4005007	      2553	ops.c	FUNCTION_38	IF_2	CALL_2
0x4004ff2	    0x488b35000000	            mov rsi, qword [0x04004ff9] 	      2553	ops.c	FUNCTION_38	IF_2	CALL_2
0x4004ff9	      0xbf00000000	                              mov edi, 0	      2553	ops.c	FUNCTION_38	IF_2	CALL_2
0x4004ffe	      0xb90b000000	                            mov ecx, 0xb	      2553	ops.c	FUNCTION_38	IF_2	CALL_2
0x4005003	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      2553	ops.c	FUNCTION_38	IF_2	CALL_2
0x4005005	            0x7571	                           jne 0x4005078	      2553	ops.c	FUNCTION_38	IF_2	CALL_2
0x4005007	    0x488b05000000	            mov rax, qword [0x0400500e] 	      2555	ops.c	FUNCTION_38	IF_2
0x400500e	      0x4c8b4c2430	              mov r9, qword [rsp + 0x30]	      2558	ops.c	FUNCTION_38	IF_2
0x4005013	            0x31ff	                            xor edi, edi	      2559	ops.c	FUNCTION_38	IF_2	CALL_3
0x4005015	      0x4c8b542438	            mov r10, qword [rsp + 0x38] 	      2558	ops.c	FUNCTION_38	IF_2
0x400501a	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      2555	ops.c	FUNCTION_38	IF_2
0x400501e	          0x8b4840	            mov ecx, dword [rax + 0x40] 	      2555	ops.c	FUNCTION_38	IF_2
0x4005021	          0x8b5044	            mov edx, dword [rax + 0x44] 	      2555	ops.c	FUNCTION_38	IF_2
0x4005024	        0x4c894838	              mov qword [rax + 0x38], r9	      2558	ops.c	FUNCTION_38	IF_2
0x4005028	        0x4c895040	             mov qword [rax + 0x40], r10	      2558	ops.c	FUNCTION_38	IF_2
0x400502c	      0x4889742428	             mov qword [rsp + 0x28], rsi	      2555	ops.c	FUNCTION_38	IF_2
0x4005031	        0x894c2420	             mov dword [rsp + 0x20], ecx	      2555	ops.c	FUNCTION_38	IF_2
0x4005035	        0x89542418	             mov dword [rsp + 0x18], edx	      2555	ops.c	FUNCTION_38	IF_2
0x4005039	      0xe800000000	                          call 0x400503e	      2559	ops.c	FUNCTION_38	IF_2	CALL_3
0x400503e	      0xbf53000000	                           mov edi, 0x53	      2560	ops.c	FUNCTION_38	IF_2	CALL_4
0x4005043	      0xe800000000	                          call 0x4005048	      2560	ops.c	FUNCTION_38	IF_2	CALL_4
0x4005048	      0xbf53000000	                           mov edi, 0x53	      2561	ops.c	FUNCTION_38	IF_2	CALL_5
0x400504d	      0xe800000000	                          call 0x4005052	      2561	ops.c	FUNCTION_38	IF_2	CALL_5
0x4005052	    0x488b05000000	            mov rax, qword [0x04005059] 	      2562	ops.c	FUNCTION_38	IF_2
0x4005059	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      2562	ops.c	FUNCTION_38	IF_2
0x400505e	          0x4889ef	                            mov rdi, rbp	      2563	ops.c	FUNCTION_38	IF_2	CALL_6
0x4005061	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	      2562	ops.c	FUNCTION_38	IF_2
0x4005065	        0x8b542418	            mov edx, dword [rsp + 0x18] 	      2562	ops.c	FUNCTION_38	IF_2
0x4005069	        0x48897038	             mov qword [rax + 0x38], rsi	      2562	ops.c	FUNCTION_38	IF_2
0x400506d	          0x894840	             mov dword [rax + 0x40], ecx	      2562	ops.c	FUNCTION_38	IF_2
0x4005070	          0x895044	             mov dword [rax + 0x44], edx	      2562	ops.c	FUNCTION_38	IF_2
0x4005073	      0xe800000000	                          call 0x4005078	      2563	ops.c	FUNCTION_38	IF_2	CALL_6
0x4005078	    0x448b1d000000	           mov r11d, dword [0x0400507f] 	      2566	ops.c	FUNCTION_38	IF_3
0x400507f	          0x4585db	                         test r11d, r11d	      2566	ops.c	FUNCTION_38	IF_3
0x4005082	            0x740d	                            je 0x4005091	      2566	ops.c	FUNCTION_38	IF_3
0x4005084	    0x4181feff0000	                          cmp r14d, 0xff	      2566	ops.c	FUNCTION_38	IF_3
0x400508b	     0xf8f71f8ffff	                            jg 0x4004902	      2566	ops.c	FUNCTION_38	IF_3
0x4005091	          0x4489f7	                           mov edi, r14d	      2570	ops.c	FUNCTION_38	IF_4	CALL_7
0x4005094	      0xe800000000	                          call 0x4005099	      2570	ops.c	FUNCTION_38	IF_4	CALL_7
0x4005099	            0x85c0	                           test eax, eax	      2570	ops.c	FUNCTION_38	IF_4	CALL_7
0x400509b	     0xf849b000000	                            je 0x400513c	      2570	ops.c	FUNCTION_38	IF_4	CALL_7
0x40050a1	        0x4183fc0f	                           cmp r12d, 0xf	      2572	ops.c	FUNCTION_38	IF_4	IF_5
0x40050a5	     0xf84c4000000	                            je 0x400516f	      2572	ops.c	FUNCTION_38	IF_4	IF_5
0x40050ab	        0x4183fc0c	                           cmp r12d, 0xc	      2574	ops.c	FUNCTION_38	IF_4	ELSE_1	IF_6
0x40050af	     0xf844df8ffff	                            je 0x4004902	      2574	ops.c	FUNCTION_38	IF_4	ELSE_1	IF_6
0x40050b5	          0x4489f7	                           mov edi, r14d	      2575	ops.c	FUNCTION_38	IF_4	ELSE_1	IF_6
0x40050b8	      0xe800000000	                          call 0x40050bd	      2575	ops.c	FUNCTION_38	IF_4	ELSE_1	IF_6
0x40050bd	            0x89c1	                            mov ecx, eax	      2575	ops.c	FUNCTION_38	IF_4	ELSE_1	IF_6
0x40050bf	          0x4139ce	                           cmp r14d, ecx	      2584	ops.c	FUNCTION_38	IF_10
0x40050c2	     0xf843af8ffff	                            je 0x4004902	      2584	ops.c	FUNCTION_38	IF_10
0x40050c8	    0x448b15000000	           mov r10d, dword [0x040050cf] 	      2587	ops.c	FUNCTION_38	IF_10	IF_11
0x40050cf	          0x4585d2	                         test r10d, r10d	      2587	ops.c	FUNCTION_38	IF_10	IF_11
0x40050d2	            0x7413	                            je 0x40050e7	      2587	ops.c	FUNCTION_38	IF_10	IF_11
0x40050d4	          0x83f97f	                           cmp ecx, 0x7f	      2587	ops.c	FUNCTION_38	IF_10	IF_11
0x40050d7	     0xf8ff1000000	                            jg 0x40051ce	      2587	ops.c	FUNCTION_38	IF_10	IF_11
0x40050dd	        0x803c2400	                       cmp byte [rsp], 0	      2587	ops.c	FUNCTION_38	IF_10	IF_11
0x40050e1	     0xf85e7000000	                           jne 0x40051ce	      2587	ops.c	FUNCTION_38	IF_10	IF_11
0x40050e7	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      2599	ops.c	FUNCTION_38	IF_10	CALL_17
0x40050ec	    0x488b3d000000	            mov rdi, qword [0x040050f3] 	      2599	ops.c	FUNCTION_38	IF_10	CALL_17
0x40050f3	      0xba01000000	                              mov edx, 1	      2599	ops.c	FUNCTION_38	IF_10	CALL_17
0x40050f8	          0x890c24	                    mov dword [rsp], ecx	      2599	ops.c	FUNCTION_38	IF_10	CALL_17
0x40050fb	      0xe800000000	                          call 0x4005100	      2599	ops.c	FUNCTION_38	IF_10	CALL_17
0x4005100	      0x4863542438	         movsxd rdx, dword [rsp + 0x38] 	      2599	ops.c	FUNCTION_38	IF_10	CALL_17
0x4005105	          0x8b0c24	                    mov ecx, dword [rsp]	      2599	ops.c	FUNCTION_38	IF_10	CALL_17
0x4005108	          0x880c10	                mov byte [rax + rdx], cl	      2599	ops.c	FUNCTION_38	IF_10	CALL_17
0x400510b	      0xb801000000	                              mov eax, 1	      2600	ops.c	FUNCTION_38	IF_10
0x4005110	      0xe9eff7ffff	                           jmp 0x4004904	      2600	ops.c	FUNCTION_38	IF_10
0x4005115	          0x4889ef	                            mov rdi, rbp	      2518	ops.c	FUNCTION_37	FOR_1	IF_1	CALL_1
0x4005118	    0x4c8b35000000	            mov r14, qword [0x0400511f] 	      2518	ops.c	FUNCTION_37	FOR_1	IF_1	CALL_1
0x400511f	      0xe800000000	                          call 0x4005124	      2518	ops.c	FUNCTION_37	FOR_1	IF_1	CALL_1
0x4005124	          0x4889c7	                            mov rdi, rax	      2518	ops.c	FUNCTION_37	FOR_1	IF_1	CALL_1
0x4005127	          0x41ffd6	                                call r14	      2518	ops.c	FUNCTION_37	FOR_1	IF_1	CALL_1
0x400512a	            0x85c0	                           test eax, eax	      2521	ops.c	FUNCTION_37	FOR_1	IF_1	IF_2
0x400512c	     0xf8eadf7ffff	                           jle 0x40048df	      2521	ops.c	FUNCTION_37	FOR_1	IF_1	IF_2
0x4005132	          0x83e801	                              sub eax, 1	      2522	ops.c	FUNCTION_37	FOR_1	IF_1	IF_2
0x4005135	            0x29c3	                            sub ebx, eax	      2522	ops.c	FUNCTION_37	FOR_1	IF_1	IF_2
0x4005137	      0xe9a3f7ffff	                           jmp 0x40048df	      2522	ops.c	FUNCTION_37	FOR_1	IF_1	IF_2
0x400513c	          0x4489f7	                           mov edi, r14d	      2577	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_10
0x400513f	      0xe800000000	                          call 0x4005144	      2577	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_10
0x4005144	            0x85c0	                           test eax, eax	      2577	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_10
0x4005146	     0xf84b6f7ffff	                            je 0x4004902	      2577	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_10
0x400514c	        0x4183fc0f	                           cmp r12d, 0xf	      2579	ops.c	FUNCTION_38	ELSE_2	IF_7	IF_8
0x4005150	     0xf8400010000	                            je 0x4005256	      2579	ops.c	FUNCTION_38	ELSE_2	IF_7	IF_8
0x4005156	        0x4183fc0b	                           cmp r12d, 0xb	      2581	ops.c	FUNCTION_38	ELSE_2	IF_7	ELSE_3	IF_9
0x400515a	     0xf84a2f7ffff	                            je 0x4004902	      2581	ops.c	FUNCTION_38	ELSE_2	IF_7	ELSE_3	IF_9
0x4005160	          0x4489f7	                           mov edi, r14d	      2582	ops.c	FUNCTION_38	ELSE_2	IF_7	ELSE_3	IF_9
0x4005163	      0xe800000000	                          call 0x4005168	      2582	ops.c	FUNCTION_38	ELSE_2	IF_7	ELSE_3	IF_9
0x4005168	            0x89c1	                            mov ecx, eax	      2582	ops.c	FUNCTION_38	ELSE_2	IF_7	ELSE_3	IF_9
0x400516a	      0xe950ffffff	                           jmp 0x40050bf	      2582	ops.c	FUNCTION_38	ELSE_2	IF_7	ELSE_3	IF_9
0x400516f	        0x418d76ac	                   lea esi, [r14 - 0x54]	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4005173	            0x89f0	                            mov eax, esi	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4005175	          0x41f7ef	                               imul r15d	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4005178	            0x89f0	                            mov eax, esi	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x400517a	          0xc1f81f	                           sar eax, 0x1f	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x400517d	          0xc1fa03	                              sar edx, 3	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4005180	            0x89d1	                            mov ecx, edx	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4005182	            0x29c1	                            sub ecx, eax	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4005184	          0x6bc91a	                     imul ecx, ecx, 0x1a	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4005187	            0x29ce	                            sub esi, ecx	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4005189	            0x89f1	                            mov ecx, esi	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x400518b	          0x83c161	                           add ecx, 0x61	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x400518e	      0xe92cffffff	                           jmp 0x40050bf	      2573	ops.c	FUNCTION_38	IF_4	CALL_8
0x4005193	        0x488b7830	            mov rdi, qword [rax + 0x30] 	      2431	ops.c	FUNCTION_36	ELSE_1	IF_5	CALL_10
0x4005197	    0xc74028000000	               mov dword [rax + 0x28], 0	      2429	ops.c	FUNCTION_36	ELSE_1	IF_5
0x400519e	          0x4889c3	                            mov rbx, rax	      2429	ops.c	FUNCTION_36	ELSE_1	IF_5
0x40051a1	    0xc74424380000	               mov dword [rsp + 0x38], 0	      2430	ops.c	FUNCTION_36	ELSE_1	IF_5
0x40051a9	      0xe800000000	                          call 0x40051ae	      2431	ops.c	FUNCTION_36	ELSE_1	IF_5	CALL_10
0x40051ae	          0x4889c7	                            mov rdi, rax	      2431	ops.c	FUNCTION_36	ELSE_1	IF_5	CALL_10
0x40051b1	      0xe800000000	                          call 0x40051b6	      2431	ops.c	FUNCTION_36	ELSE_1	IF_5	CALL_10
0x40051b6	            0x85c0	                           test eax, eax	      2432	ops.c	FUNCTION_36	ELSE_1	IF_5	IF_6
0x40051b8	     0xf848c000000	                            je 0x400524a	      2432	ops.c	FUNCTION_36	ELSE_1	IF_5	IF_6
0x40051be	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      2433	ops.c	FUNCTION_36	ELSE_1	IF_5	IF_6
0x40051c3	          0x83e801	                              sub eax, 1	      2433	ops.c	FUNCTION_36	ELSE_1	IF_5	IF_6
0x40051c6	          0x894138	             mov dword [rcx + 0x38], eax	      2433	ops.c	FUNCTION_36	ELSE_1	IF_5	IF_6
0x40051c9	      0xe91ef8ffff	                           jmp 0x40049ec	      2433	ops.c	FUNCTION_36	ELSE_1	IF_5	IF_6
0x40051ce	    0x488b05000000	            mov rax, qword [0x040051d5] 	      2589	ops.c	FUNCTION_38	IF_10	IF_11
0x40051d5	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      2591	ops.c	FUNCTION_38	IF_10	IF_11
0x40051da	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      2591	ops.c	FUNCTION_38	IF_10	IF_11
0x40051df	        0x894c2420	             mov dword [rsp + 0x20], ecx	      2591	ops.c	FUNCTION_38	IF_10	IF_11
0x40051e3	        0x4c8b4838	              mov r9, qword [rax + 0x38]	      2589	ops.c	FUNCTION_38	IF_10	IF_11
0x40051e7	        0x448b4040	            mov r8d, dword [rax + 0x40] 	      2589	ops.c	FUNCTION_38	IF_10	IF_11
0x40051eb	        0x448b7044	           mov r14d, dword [rax + 0x44] 	      2589	ops.c	FUNCTION_38	IF_10	IF_11
0x40051ef	        0x48897038	             mov qword [rax + 0x38], rsi	      2591	ops.c	FUNCTION_38	IF_10	IF_11
0x40051f3	        0x48897840	             mov qword [rax + 0x40], rdi	      2591	ops.c	FUNCTION_38	IF_10	IF_11
0x40051f7	      0x4c894c2418	              mov qword [rsp + 0x18], r9	      2589	ops.c	FUNCTION_38	IF_10	IF_11
0x40051fc	        0x44890424	                    mov dword [rsp], r8d	      2589	ops.c	FUNCTION_38	IF_10	IF_11
0x4005200	      0xe800000000	                          call 0x4005205	      2593	ops.c	FUNCTION_38	IF_10	IF_11	CALL_15
0x4005205	          0x4889c7	                            mov rdi, rax	      2593	ops.c	FUNCTION_38	IF_10	IF_11	CALL_15
0x4005208	      0xe800000000	                          call 0x400520d	      2593	ops.c	FUNCTION_38	IF_10	IF_11	CALL_15
0x400520d	            0x31d2	                            xor edx, edx	      2593	ops.c	FUNCTION_38	IF_10	IF_11	CALL_15
0x400520f	          0x4863f8	                         movsxd rdi, eax	      2593	ops.c	FUNCTION_38	IF_10	IF_11	CALL_15
0x4005212	            0x31f6	                            xor esi, esi	      2593	ops.c	FUNCTION_38	IF_10	IF_11	CALL_15
0x4005214	      0xe800000000	                          call 0x4005219	      2593	ops.c	FUNCTION_38	IF_10	IF_11	CALL_15
0x4005219	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	      2594	ops.c	FUNCTION_38	IF_10	IF_11	CALL_16
0x400521d	            0x89cf	                            mov edi, ecx	      2594	ops.c	FUNCTION_38	IF_10	IF_11	CALL_16
0x400521f	      0xe800000000	                          call 0x4005224	      2594	ops.c	FUNCTION_38	IF_10	IF_11	CALL_16
0x4005224	    0x488b05000000	            mov rax, qword [0x0400522b] 	      2595	ops.c	FUNCTION_38	IF_10	IF_11
0x400522b	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	      2595	ops.c	FUNCTION_38	IF_10	IF_11
0x4005230	        0x448b0424	                    mov r8d, dword [rsp]	      2595	ops.c	FUNCTION_38	IF_10	IF_11
0x4005234	        0x4c894838	              mov qword [rax + 0x38], r9	      2595	ops.c	FUNCTION_38	IF_10	IF_11
0x4005238	        0x44897044	            mov dword [rax + 0x44], r14d	      2595	ops.c	FUNCTION_38	IF_10	IF_11
0x400523c	        0x44894040	             mov dword [rax + 0x40], r8d	      2595	ops.c	FUNCTION_38	IF_10	IF_11
0x4005240	      0xb801000000	                              mov eax, 1	      2600	ops.c	FUNCTION_38	IF_10
0x4005245	      0xe9baf6ffff	                           jmp 0x4004904	      2600	ops.c	FUNCTION_38	IF_10
0x400524a	    0xc74338000000	               mov dword [rbx + 0x38], 0	      2431	ops.c	FUNCTION_36	ELSE_1	IF_5	CALL_10
0x4005251	      0xe996f7ffff	                           jmp 0x40049ec	      2431	ops.c	FUNCTION_36	ELSE_1	IF_5	CALL_10
0x4005256	        0x418d76cc	                   lea esi, [r14 - 0x34]	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x400525a	            0x89f0	                            mov eax, esi	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x400525c	          0x41f7ef	                               imul r15d	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x400525f	            0x89f0	                            mov eax, esi	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4005261	          0xc1f81f	                           sar eax, 0x1f	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4005264	          0xc1fa03	                              sar edx, 3	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4005267	            0x89d1	                            mov ecx, edx	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4005269	            0x29c1	                            sub ecx, eax	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x400526b	          0x6bc91a	                     imul ecx, ecx, 0x1a	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x400526e	            0x29ce	                            sub esi, ecx	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4005270	            0x89f1	                            mov ecx, esi	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4005272	          0x83c141	                           add ecx, 0x41	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4005275	      0xe945feffff	                           jmp 0x40050bf	      2580	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x400527a	      0xe800000000	                          call 0x400527f	      2498	ops.c	FUNCTION_36
yank_register_mline	SWITCH,0:DO,0:ELSE,0:functions,0:FOR,0:IF,2:WHILE,0:CALL,2	95
0x40032c0	          0x83ff00	                              cmp edi, 0	      1072	ops.c	FUNCTION_20	IF_1	CALL_1
0x40032c3	              0x53	                                push rbx	      1071	ops.c	FUNCTION_20
0x40032c4	            0x89fb	                            mov ebx, edi	      1071	ops.c	FUNCTION_20
0x40032c6	            0x7530	                           jne 0x40032f8	      1072	ops.c	FUNCTION_20	IF_1	CALL_1
0x40032c8	    0x488b05000000	            mov rax, qword [0x040032cf] 	       913	ops.c	FUNCTION_15	IF_1
0x40032cf	            0x31d2	                            xor edx, edx	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x40032d1	    0xc70500000000	               mov dword [0x040032db], 0	       912	ops.c	FUNCTION_15
0x40032db	          0x4885c0	                           test rax, rax	       913	ops.c	FUNCTION_15	IF_1
0x40032de	            0x7458	                            je 0x4003338	       913	ops.c	FUNCTION_15	IF_1
0x40032e0	        0x80781001	                cmp byte [rax + 0x10], 1	      1077	ops.c	FUNCTION_20
0x40032e4	    0x488905000000	            mov qword [0x040032eb], rax 	       950	ops.c	FUNCTION_15
0x40032eb	              0x5b	                                 pop rbx	      1078	ops.c	FUNCTION_20
0x40032ec	           0xf94c0	                                 sete al	      1077	ops.c	FUNCTION_20
0x40032ef	           0xfb6c0	                           movzx eax, al	      1077	ops.c	FUNCTION_20
0x40032f2	              0xc3	                                     ret	      1078	ops.c	FUNCTION_20
0x40032f3	       0xf1f440000	                   nop dword [rax + rax]	      1078	ops.c	FUNCTION_20
0x40032f8	            0x7e15	                           jle 0x400330f	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x40032fa	            0x89f8	                            mov eax, edi	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x40032fc	          0x83e0df	                     and eax, 0xffffffdf	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x40032ff	          0x83e841	                           sub eax, 0x41	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x4003302	          0x83f819	                           cmp eax, 0x19	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x4003305	            0x761d	                           jbe 0x4003324	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x4003307	          0x8d47d0	                   lea eax, [rdi - 0x30]	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x400330a	          0x83f809	                              cmp eax, 9	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x400330d	            0x7615	                           jbe 0x4003324	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x400330f	            0x89de	                            mov esi, ebx	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x4003311	      0xbf00000000	                              mov edi, 0	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x4003316	      0xe800000000	                          call 0x400331b	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x400331b	          0x4885c0	                           test rax, rax	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x400331e	     0xf848c000000	                            je 0x40033b0	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x4003324	          0x83fb5f	                           cmp ebx, 0x5f	      1074	ops.c	FUNCTION_20	IF_2
0x4003327	     0xf8594000000	                           jne 0x40033c1	      1074	ops.c	FUNCTION_20	IF_2
0x400332d	            0x31c0	                            xor eax, eax	      1073	ops.c	FUNCTION_20	IF_1
0x400332f	              0x5b	                                 pop rbx	      1078	ops.c	FUNCTION_20
0x4003330	              0xc3	                                     ret	      1078	ops.c	FUNCTION_20
0x4003331	     0xf1f80000000	                         nop dword [rax]	      1078	ops.c	FUNCTION_20
0x4003338	          0x83ea41	                           sub edx, 0x41	       923	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_4
0x400333b	          0x83fa19	                           cmp edx, 0x19	       923	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_4
0x400333e	            0x7660	                           jbe 0x40033a0	       923	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_4
0x4003340	          0x83fb2d	                           cmp ebx, 0x2d	       928	ops.c	FUNCTION_15	ELSE_3	IF_5
0x4003343	      0xb824000000	                           mov eax, 0x24	       929	ops.c	FUNCTION_15	ELSE_3	IF_5
0x4003348	            0x743e	                            je 0x4003388	       928	ops.c	FUNCTION_15	ELSE_3	IF_5
0x400334a	    0x8b1500000000	            mov edx, dword [0x04003350] 	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x4003350	            0x85d2	                           test edx, edx	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x4003352	            0x740a	                            je 0x400335e	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x4003354	          0x83fb2a	                           cmp ebx, 0x2a	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x4003357	      0xb825000000	                           mov eax, 0x25	       934	ops.c	FUNCTION_15	ELSE_4	IF_6
0x400335c	            0x742a	                            je 0x4003388	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x400335e	    0x8b0500000000	            mov eax, dword [0x04003364] 	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x4003364	            0x85c0	                           test eax, eax	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x4003366	            0x740a	                            je 0x4003372	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x4003368	          0x83fb2b	                           cmp ebx, 0x2b	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x400336b	      0xb826000000	                           mov eax, 0x26	       940	ops.c	FUNCTION_15	ELSE_5	IF_7
0x4003370	            0x7416	                            je 0x4003388	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x4003372	          0x83fb7e	                           cmp ebx, 0x7e	       946	ops.c	FUNCTION_15	ELSE_6	IF_8
0x4003375	      0xba27000000	                           mov edx, 0x27	       946	ops.c	FUNCTION_15	ELSE_6	IF_8
0x400337a	      0xb800000000	                              mov eax, 0	       946	ops.c	FUNCTION_15	ELSE_6	IF_8
0x400337f	           0xf44c2	                          cmove eax, edx	       946	ops.c	FUNCTION_15	ELSE_6	IF_8
0x4003382	    0x660f1f440000	                    nop word [rax + rax]	       946	ops.c	FUNCTION_15	ELSE_6	IF_8
0x4003388	            0x4898	                                    cdqe	       950	ops.c	FUNCTION_15
0x400338a	        0x48c1e005	                              shl rax, 5	       950	ops.c	FUNCTION_15
0x400338e	    0x480500000000	                              add rax, 0	       950	ops.c	FUNCTION_15
0x4003394	      0xe947ffffff	                           jmp 0x40032e0	       950	ops.c	FUNCTION_15
0x4003399	     0xf1f80000000	                         nop dword [rax]	       950	ops.c	FUNCTION_15
0x40033a0	          0x8d43c9	                   lea eax, [rbx - 0x37]	       925	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_5
0x40033a3	    0xc70500000000	               mov dword [0x040033ad], 1	       926	ops.c	FUNCTION_15	ELSE_2	IF_4
0x40033ad	            0xebd9	                           jmp 0x4003388	       926	ops.c	FUNCTION_15	ELSE_2	IF_4
0x40033af	              0x90	                                     nop	       926	ops.c	FUNCTION_15	ELSE_2	IF_4
0x40033b0	          0x8d43de	                   lea eax, [rbx - 0x22]	       880	ops.c	FUNCTION_14	IF_1
0x40033b3	          0x83f83d	                           cmp eax, 0x3d	       880	ops.c	FUNCTION_14	IF_1
0x40033b6	            0x7638	                           jbe 0x40033f0	       880	ops.c	FUNCTION_14	IF_1
0x40033b8	          0x83fb7e	                           cmp ebx, 0x7e	       888	ops.c	FUNCTION_14	IF_1
0x40033bb	     0xf856cffffff	                           jne 0x400332d	       888	ops.c	FUNCTION_14	IF_1
0x40033c1	          0x83fb22	                           cmp ebx, 0x22	       913	ops.c	FUNCTION_15	IF_1
0x40033c4	    0xc70500000000	               mov dword [0x040033ce], 0	       912	ops.c	FUNCTION_15
0x40033ce	            0x743b	                            je 0x400340b	       913	ops.c	FUNCTION_15	IF_1
0x40033d0	          0x8d43d0	                   lea eax, [rbx - 0x30]	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x40033d3	            0x89da	                            mov edx, ebx	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x40033d5	          0x83f809	                              cmp eax, 9	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x40033d8	            0x76ae	                           jbe 0x4003388	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x40033da	          0x8d439f	                   lea eax, [rbx - 0x61]	       921	ops.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x40033dd	          0x83f819	                           cmp eax, 0x19	       921	ops.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x40033e0	     0xf8752ffffff	                            ja 0x4003338	       921	ops.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x40033e6	          0x8d43a9	                   lea eax, [rbx - 0x57]	       922	ops.c	FUNCTION_15	ELSE_1	IF_3
0x40033e9	            0xeb9d	                           jmp 0x4003388	       922	ops.c	FUNCTION_15	ELSE_1	IF_3
0x40033eb	       0xf1f440000	                   nop dword [rax + rax]	       922	ops.c	FUNCTION_15	ELSE_1	IF_3
0x40033f0	    0x48ba030b0000	         movabs rdx, 0x2000000000000b03 	       880	ops.c	FUNCTION_14	IF_1
0x40033fa	        0x480fa3c2	                             bt rdx, rax	       880	ops.c	FUNCTION_14	IF_1
0x40033fe	     0xf8220ffffff	                            jb 0x4003324	       880	ops.c	FUNCTION_14	IF_1
0x4003404	            0x31c0	                            xor eax, eax	      1073	ops.c	FUNCTION_20	IF_1
0x4003406	      0xe924ffffff	                           jmp 0x400332f	      1073	ops.c	FUNCTION_20	IF_1
0x400340b	    0x488b05000000	            mov rax, qword [0x04003412] 	       913	ops.c	FUNCTION_15	IF_1
0x4003412	          0x4885c0	                           test rax, rax	       913	ops.c	FUNCTION_15	IF_1
0x4003415	     0xf85c5feffff	                           jne 0x40032e0	       913	ops.c	FUNCTION_15	IF_1
0x400341b	            0xebb3	                           jmp 0x40033d0	       913	ops.c	FUNCTION_15	IF_1
get_spec_reg	SWITCH,1:DO,0:ELSE,0:functions,0:FOR,0:IF,7:WHILE,0:CALL,16	177
0x4003760	          0x83ff5f	                           cmp edi, 0x5f	      1517	ops.c	FUNCTION_28	SWITCH_1
0x4003763	    0x48c706000000	                      mov qword [rsi], 0	      1515	ops.c	FUNCTION_28
0x400376a	    0xc70200000000	                      mov dword [rdx], 0	      1516	ops.c	FUNCTION_28
0x4003770	     0xf878a020000	                            ja 0x4003a00	      1517	ops.c	FUNCTION_28	SWITCH_1
0x4003776	            0x4155	                                push r13	      1512	ops.c	FUNCTION_28
0x4003778	            0x4154	                                push r12	      1512	ops.c	FUNCTION_28
0x400377a	            0x89f8	                            mov eax, edi	      1517	ops.c	FUNCTION_28	SWITCH_1
0x400377c	              0x55	                                push rbp	      1512	ops.c	FUNCTION_28
0x400377d	              0x53	                                push rbx	      1512	ops.c	FUNCTION_28
0x400377e	          0x4189cc	                           mov r12d, ecx	      1512	ops.c	FUNCTION_28
0x4003781	          0x4889d5	                            mov rbp, rdx	      1512	ops.c	FUNCTION_28
0x4003784	          0x4889f3	                            mov rbx, rsi	      1512	ops.c	FUNCTION_28
0x4003787	        0x4883ec08	                              sub rsp, 8	      1512	ops.c	FUNCTION_28
0x400378b	    0xff24c5000000	                       jmp qword [rax*8]	      1517	ops.c	FUNCTION_28	SWITCH_1
0x4003792	    0x660f1f440000	                    nop word [rax + rax]	      1517	ops.c	FUNCTION_28	SWITCH_1
0x4003798	    0x48c706000000	                      mov qword [rsi], 0	      1585	ops.c	FUNCTION_28	SWITCH_1
0x400379f	      0xb801000000	                              mov eax, 1	      1586	ops.c	FUNCTION_28	SWITCH_1
0x40037a4	        0x4883c408	                              add rsp, 8	      1590	ops.c	FUNCTION_28
0x40037a8	              0x5b	                                 pop rbx	      1590	ops.c	FUNCTION_28
0x40037a9	              0x5d	                                 pop rbp	      1590	ops.c	FUNCTION_28
0x40037aa	            0x415c	                                 pop r12	      1590	ops.c	FUNCTION_28
0x40037ac	            0x415d	                                 pop r13	      1590	ops.c	FUNCTION_28
0x40037ae	              0xc3	                                     ret	      1590	ops.c	FUNCTION_28
0x40037af	              0x90	                                     nop	      1590	ops.c	FUNCTION_28
0x40037b0	            0x31c0	                            xor eax, eax	      1559	ops.c	FUNCTION_28	SWITCH_1	IF_5
0x40037b2	            0x85c9	                           test ecx, ecx	      1568	ops.c	FUNCTION_28	SWITCH_1	IF_6
0x40037b4	            0x74ee	                            je 0x40037a4	      1568	ops.c	FUNCTION_28	SWITCH_1	IF_6
0x40037b6	            0x31f6	                            xor esi, esi	      1570	ops.c	FUNCTION_28	SWITCH_1	CALL_14
0x40037b8	          0x83ff17	                           cmp edi, 0x17	      1570	ops.c	FUNCTION_28	SWITCH_1	CALL_14
0x40037bb	          0x4889df	                            mov rdi, rbx	      1570	ops.c	FUNCTION_28	SWITCH_1	CALL_14
0x40037be	        0x400f94c6	                                sete sil	      1570	ops.c	FUNCTION_28	SWITCH_1	CALL_14
0x40037c2	          0x83c602	                              add esi, 2	      1570	ops.c	FUNCTION_28	SWITCH_1	CALL_14
0x40037c5	      0xe800000000	                          call 0x40037ca	      1570	ops.c	FUNCTION_28	SWITCH_1	CALL_14
0x40037ca	            0x31d2	                            xor edx, edx	      1572	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x40037cc	            0x85c0	                           test eax, eax	      1572	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x40037ce	     0xf8514020000	                           jne 0x40039e8	      1572	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x40037d4	          0x488913	                    mov qword [rbx], rdx	      1572	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x40037d7	      0xb801000000	                              mov eax, 1	      1574	ops.c	FUNCTION_28	SWITCH_1
0x40037dc	    0xc74500010000	                      mov dword [rbp], 1	      1573	ops.c	FUNCTION_28	SWITCH_1
0x40037e3	            0xebbf	                           jmp 0x40037a4	      1574	ops.c	FUNCTION_28	SWITCH_1
0x40037e5	           0xf1f00	                         nop dword [rax]	      1574	ops.c	FUNCTION_28	SWITCH_1
0x40037e8	            0x31c0	                            xor eax, eax	      1559	ops.c	FUNCTION_28	SWITCH_1	IF_5
0x40037ea	            0x85c9	                           test ecx, ecx	      1558	ops.c	FUNCTION_28	SWITCH_1	IF_5
0x40037ec	            0x74b6	                            je 0x40037a4	      1558	ops.c	FUNCTION_28	SWITCH_1	IF_5
0x40037ee	          0x83ff10	                           cmp edi, 0x10	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x40037f1	      0xbe01000000	                              mov esi, 1	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x40037f6	        0x400f94c7	                                sete dil	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x40037fa	            0x31d2	                            xor edx, edx	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x40037fc	        0x400fb6ff	                          movzx edi, dil	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x4003800	        0x8d7c3f05	                lea edi, [rdi + rdi + 5]	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x4003804	      0xe800000000	                          call 0x4003809	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x4003809	          0x488903	                    mov qword [rbx], rax	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x400380c	    0xc74500010000	                      mov dword [rbp], 1	      1562	ops.c	FUNCTION_28	SWITCH_1
0x4003813	      0xb801000000	                              mov eax, 1	      1563	ops.c	FUNCTION_28	SWITCH_1
0x4003818	            0xeb8a	                           jmp 0x40037a4	      1563	ops.c	FUNCTION_28	SWITCH_1
0x400381a	    0x660f1f440000	                    nop word [rax + rax]	      1563	ops.c	FUNCTION_28	SWITCH_1
0x4003820	      0xe800000000	                          call 0x4003825	      1549	ops.c	FUNCTION_28	SWITCH_1	CALL_10
0x4003825	          0x4885c0	                           test rax, rax	      1551	ops.c	FUNCTION_28	SWITCH_1	IF_4
0x4003828	          0x488903	                    mov qword [rbx], rax	      1549	ops.c	FUNCTION_28	SWITCH_1	CALL_10
0x400382b	    0xc74500010000	                      mov dword [rbp], 1	      1550	ops.c	FUNCTION_28	SWITCH_1
0x4003832	            0x7509	                           jne 0x400383d	      1551	ops.c	FUNCTION_28	SWITCH_1	IF_4
0x4003834	          0x4585e4	                         test r12d, r12d	      1551	ops.c	FUNCTION_28	SWITCH_1	IF_4
0x4003837	     0xf8583010000	                           jne 0x40039c0	      1551	ops.c	FUNCTION_28	SWITCH_1	IF_4
0x400383d	      0xb801000000	                              mov eax, 1	      1553	ops.c	FUNCTION_28	SWITCH_1
0x4003842	      0xe95dffffff	                           jmp 0x40037a4	      1553	ops.c	FUNCTION_28	SWITCH_1
0x4003847	    0x660f1f840000	                    nop word [rax + rax]	      1553	ops.c	FUNCTION_28	SWITCH_1
0x4003850	      0xe800000000	                          call 0x4003855	      1543	ops.c	FUNCTION_28	SWITCH_1	IF_3	CALL_6
0x4003855	          0x4885c0	                           test rax, rax	      1543	ops.c	FUNCTION_28	SWITCH_1	IF_3	CALL_6
0x4003858	            0x7526	                           jne 0x4003880	      1543	ops.c	FUNCTION_28	SWITCH_1	IF_3	CALL_6
0x400385a	          0x4585e4	                         test r12d, r12d	      1543	ops.c	FUNCTION_28	SWITCH_1	IF_3	CALL_6
0x400385d	            0x7421	                            je 0x4003880	      1543	ops.c	FUNCTION_28	SWITCH_1	IF_3	CALL_6
0x400385f	            0x31ff	                            xor edi, edi	      1544	ops.c	FUNCTION_28	SWITCH_1	CALL_8
0x4003861	      0xba05000000	                              mov edx, 5	      1544	ops.c	FUNCTION_28	SWITCH_1	CALL_8
0x4003866	      0xbe00000000	                              mov esi, 0	      1544	ops.c	FUNCTION_28	SWITCH_1	CALL_8
0x400386b	      0xe800000000	                          call 0x4003870	      1544	ops.c	FUNCTION_28	SWITCH_1	CALL_8
0x4003870	          0x4889c7	                            mov rdi, rax	      1544	ops.c	FUNCTION_28	SWITCH_1	CALL_8
0x4003873	      0xe800000000	                          call 0x4003878	      1544	ops.c	FUNCTION_28	SWITCH_1	CALL_8
0x4003878	     0xf1f84000000	                   nop dword [rax + rax]	      1544	ops.c	FUNCTION_28	SWITCH_1	CALL_8
0x4003880	      0xe800000000	                          call 0x4003885	      1545	ops.c	FUNCTION_28	SWITCH_1	CALL_9
0x4003885	          0x488903	                    mov qword [rbx], rax	      1545	ops.c	FUNCTION_28	SWITCH_1	CALL_9
0x4003888	        0x4883c408	                              add rsp, 8	      1590	ops.c	FUNCTION_28
0x400388c	      0xb801000000	                              mov eax, 1	      1546	ops.c	FUNCTION_28	SWITCH_1
0x4003891	              0x5b	                                 pop rbx	      1590	ops.c	FUNCTION_28
0x4003892	              0x5d	                                 pop rbp	      1590	ops.c	FUNCTION_28
0x4003893	            0x415c	                                 pop r12	      1590	ops.c	FUNCTION_28
0x4003895	            0x415d	                                 pop r13	      1590	ops.c	FUNCTION_28
0x4003897	              0xc3	                                     ret	      1590	ops.c	FUNCTION_28
0x4003898	     0xf1f84000000	                   nop dword [rax + rax]	      1590	ops.c	FUNCTION_28
0x40038a0	    0x488b05000000	            mov rax, qword [0x040038a7] 	      1537	ops.c	FUNCTION_28	SWITCH_1	IF_2
0x40038a7	          0x4885c0	                           test rax, rax	      1537	ops.c	FUNCTION_28	SWITCH_1	IF_2
0x40038aa	            0x75d9	                           jne 0x4003885	      1537	ops.c	FUNCTION_28	SWITCH_1	IF_2
0x40038ac	            0x85c9	                           test ecx, ecx	      1537	ops.c	FUNCTION_28	SWITCH_1	IF_2
0x40038ae	            0x74d5	                            je 0x4003885	      1537	ops.c	FUNCTION_28	SWITCH_1	IF_2
0x40038b0	      0xba05000000	                              mov edx, 5	      1538	ops.c	FUNCTION_28	SWITCH_1	CALL_5
0x40038b5	      0xbe00000000	                              mov esi, 0	      1538	ops.c	FUNCTION_28	SWITCH_1	CALL_5
0x40038ba	            0x31ff	                            xor edi, edi	      1538	ops.c	FUNCTION_28	SWITCH_1	CALL_5
0x40038bc	      0xe800000000	                          call 0x40038c1	      1538	ops.c	FUNCTION_28	SWITCH_1	CALL_5
0x40038c1	          0x4889c7	                            mov rdi, rax	      1538	ops.c	FUNCTION_28	SWITCH_1	CALL_5
0x40038c4	      0xe800000000	                          call 0x40038c9	      1538	ops.c	FUNCTION_28	SWITCH_1	CALL_5
0x40038c9	    0x488b05000000	            mov rax, qword [0x040038d0] 	      1538	ops.c	FUNCTION_28	SWITCH_1	CALL_5
0x40038d0	            0xebb3	                           jmp 0x4003885	      1538	ops.c	FUNCTION_28	SWITCH_1	CALL_5
0x40038d2	    0x660f1f440000	                    nop word [rax + rax]	      1538	ops.c	FUNCTION_28	SWITCH_1	CALL_5
0x40038d8	            0x89cf	                            mov edi, ecx	      1526	ops.c	FUNCTION_28	SWITCH_1	CALL_2
0x40038da	      0xe800000000	                          call 0x40038df	      1526	ops.c	FUNCTION_28	SWITCH_1	CALL_2
0x40038df	          0x488903	                    mov qword [rbx], rax	      1526	ops.c	FUNCTION_28	SWITCH_1	CALL_2
0x40038e2	      0xb801000000	                              mov eax, 1	      1527	ops.c	FUNCTION_28	SWITCH_1
0x40038e7	      0xe9b8feffff	                           jmp 0x40037a4	      1527	ops.c	FUNCTION_28	SWITCH_1
0x40038ec	         0xf1f4000	                         nop dword [rax]	      1527	ops.c	FUNCTION_28	SWITCH_1
0x40038f0	    0x488b3d000000	            mov rdi, qword [0x040038f7] 	       829	ops.c	FUNCTION_12	IF_1
0x40038f7	          0x4885ff	                           test rdi, rdi	       829	ops.c	FUNCTION_12	IF_1
0x40038fa	     0xf8403010000	                            je 0x4003a03	       829	ops.c	FUNCTION_12	IF_1
0x4003900	      0xe800000000	                          call 0x4003905	       834	ops.c	FUNCTION_12	CALL_1
0x4003905	          0x4885c0	                           test rax, rax	       835	ops.c	FUNCTION_12	IF_2
0x4003908	     0xf84f5000000	                            je 0x4003a03	       835	ops.c	FUNCTION_12	IF_2
0x400390e	    0x8b1500000000	            mov edx, dword [0x04003914] 	       840	ops.c	FUNCTION_12	IF_3
0x4003914	          0x4989c4	                            mov r12, rax	       840	ops.c	FUNCTION_12	IF_3
0x4003917	          0x83fa09	                              cmp edx, 9	       840	ops.c	FUNCTION_12	IF_3
0x400391a	            0x7f2d	                            jg 0x4003949	       840	ops.c	FUNCTION_12	IF_3
0x400391c	          0x83c201	                              add edx, 1	       843	ops.c	FUNCTION_12
0x400391f	            0x31f6	                            xor esi, esi	       844	ops.c	FUNCTION_12	CALL_2
0x4003921	          0x4889c7	                            mov rdi, rax	       844	ops.c	FUNCTION_12	CALL_2
0x4003924	    0x891500000000	            mov dword [0x0400392a], edx 	       843	ops.c	FUNCTION_12
0x400392a	      0xba01000000	                              mov edx, 1	       844	ops.c	FUNCTION_12	CALL_2
0x400392f	      0xe800000000	                          call 0x4003934	       844	ops.c	FUNCTION_12	CALL_2
0x4003934	          0x4989c5	                            mov r13, rax	       844	ops.c	FUNCTION_12	CALL_2
0x4003937	          0x4c89e7	                            mov rdi, r12	       846	ops.c	FUNCTION_12	CALL_3
0x400393a	    0x832d00000000	               sub dword [0x04003941], 1	       845	ops.c	FUNCTION_12
0x4003941	          0x4d89ec	                            mov r12, r13	       847	ops.c	FUNCTION_12
0x4003944	      0xe800000000	                          call 0x4003949	       846	ops.c	FUNCTION_12	CALL_3
0x4003949	          0x4c8923	                    mov qword [rbx], r12	      1531	ops.c	FUNCTION_28	SWITCH_1	CALL_3
0x400394c	      0xb801000000	                              mov eax, 1	      1533	ops.c	FUNCTION_28	SWITCH_1
0x4003951	    0xc74500010000	                      mov dword [rbp], 1	      1532	ops.c	FUNCTION_28	SWITCH_1
0x4003958	      0xe947feffff	                           jmp 0x40037a4	      1533	ops.c	FUNCTION_28	SWITCH_1
0x400395d	           0xf1f00	                         nop dword [rax]	      1533	ops.c	FUNCTION_28	SWITCH_1
0x4003960	            0x31c0	                            xor eax, eax	      1559	ops.c	FUNCTION_28	SWITCH_1	IF_5
0x4003962	            0x85c9	                           test ecx, ecx	      1577	ops.c	FUNCTION_28	SWITCH_1	IF_7
0x4003964	     0xf843afeffff	                            je 0x40037a4	      1577	ops.c	FUNCTION_28	SWITCH_1	IF_7
0x400396a	    0x488b05000000	            mov rax, qword [0x04003971] 	      1581	ops.c	FUNCTION_28	SWITCH_1
0x4003971	            0x31d2	                            xor edx, edx	      1580	ops.c	FUNCTION_28	SWITCH_1	CALL_16
0x4003973	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      1580	ops.c	FUNCTION_28	SWITCH_1	CALL_16
0x4003977	        0x488b7808	                mov rdi, qword [rax + 8]	      1580	ops.c	FUNCTION_28	SWITCH_1	CALL_16
0x400397b	      0xe800000000	                          call 0x4003980	      1580	ops.c	FUNCTION_28	SWITCH_1	CALL_16
0x4003980	          0x488903	                    mov qword [rbx], rax	      1580	ops.c	FUNCTION_28	SWITCH_1	CALL_16
0x4003983	      0xb801000000	                              mov eax, 1	      1582	ops.c	FUNCTION_28	SWITCH_1
0x4003988	      0xe917feffff	                           jmp 0x40037a4	      1582	ops.c	FUNCTION_28	SWITCH_1
0x400398d	           0xf1f00	                         nop dword [rax]	      1582	ops.c	FUNCTION_28	SWITCH_1
0x4003990	            0x85c9	                           test ecx, ecx	      1520	ops.c	FUNCTION_28	SWITCH_1	IF_1
0x4003992	            0x7405	                            je 0x4003999	      1520	ops.c	FUNCTION_28	SWITCH_1	IF_1
0x4003994	      0xe800000000	                          call 0x4003999	      1521	ops.c	FUNCTION_28	SWITCH_1	CALL_1
0x4003999	    0x488b05000000	            mov rax, qword [0x040039a0] 	      1522	ops.c	FUNCTION_28	SWITCH_1
0x40039a0	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      1522	ops.c	FUNCTION_28	SWITCH_1
0x40039a7	          0x488903	                    mov qword [rbx], rax	      1522	ops.c	FUNCTION_28	SWITCH_1
0x40039aa	      0xb801000000	                              mov eax, 1	      1523	ops.c	FUNCTION_28	SWITCH_1
0x40039af	      0xe9f0fdffff	                           jmp 0x40037a4	      1523	ops.c	FUNCTION_28	SWITCH_1
0x40039b4	         0xf1f4000	                         nop dword [rax]	      1523	ops.c	FUNCTION_28	SWITCH_1
0x40039b8	            0x31c0	                            xor eax, eax	      1589	ops.c	FUNCTION_28
0x40039ba	      0xe9e5fdffff	                           jmp 0x40037a4	      1589	ops.c	FUNCTION_28
0x40039bf	              0x90	                                     nop	      1589	ops.c	FUNCTION_28
0x40039c0	      0xba05000000	                              mov edx, 5	      1552	ops.c	FUNCTION_28	SWITCH_1	CALL_12
0x40039c5	      0xbe00000000	                              mov esi, 0	      1552	ops.c	FUNCTION_28	SWITCH_1	CALL_12
0x40039ca	            0x31ff	                            xor edi, edi	      1552	ops.c	FUNCTION_28	SWITCH_1	CALL_12
0x40039cc	      0xe800000000	                          call 0x40039d1	      1552	ops.c	FUNCTION_28	SWITCH_1	CALL_12
0x40039d1	          0x4889c7	                            mov rdi, rax	      1552	ops.c	FUNCTION_28	SWITCH_1	CALL_12
0x40039d4	      0xe800000000	                          call 0x40039d9	      1552	ops.c	FUNCTION_28	SWITCH_1	CALL_12
0x40039d9	      0xb801000000	                              mov eax, 1	      1553	ops.c	FUNCTION_28	SWITCH_1
0x40039de	      0xe9c1fdffff	                           jmp 0x40037a4	      1553	ops.c	FUNCTION_28	SWITCH_1
0x40039e3	       0xf1f440000	                   nop dword [rax + rax]	      1553	ops.c	FUNCTION_28	SWITCH_1
0x40039e8	          0x488b3b	                    mov rdi, qword [rbx]	      1572	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x40039eb	            0x89c6	                            mov esi, eax	      1572	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x40039ed	      0xe800000000	                          call 0x40039f2	      1572	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x40039f2	          0x4889c2	                            mov rdx, rax	      1572	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x40039f5	      0xe9dafdffff	                           jmp 0x40037d4	      1572	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x40039fa	    0x660f1f440000	                    nop word [rax + rax]	      1572	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x4003a00	            0x31c0	                            xor eax, eax	      1589	ops.c	FUNCTION_28
0x4003a02	              0xc3	                                     ret	      1590	ops.c	FUNCTION_28
0x4003a03	          0x4531e4	                          xor r12d, r12d	       830	ops.c	FUNCTION_12	IF_1
0x4003a06	      0xe93effffff	                           jmp 0x4003949	       830	ops.c	FUNCTION_12	IF_1
put_register	SWITCH,0:DO,0:ELSE,0:functions,0:FOR,0:IF,0:WHILE,0:CALL,4	117
0x4002ff0	            0x85ff	                           test edi, edi	       913	ops.c	FUNCTION_15	IF_1
0x4002ff2	            0x4154	                                push r12	      1041	ops.c	FUNCTION_18
0x4002ff4	    0xc70500000000	               mov dword [0x04002ffe], 0	       912	ops.c	FUNCTION_15
0x4002ffe	              0x55	                                push rbp	      1041	ops.c	FUNCTION_18
0x4002fff	          0x4989f4	                            mov r12, rsi	      1041	ops.c	FUNCTION_18
0x4003002	              0x53	                                push rbx	      1041	ops.c	FUNCTION_18
0x4003003	     0xf84cf000000	                            je 0x40030d8	       913	ops.c	FUNCTION_15	IF_1
0x4003009	          0x83ff22	                           cmp edi, 0x22	       913	ops.c	FUNCTION_15	IF_1
0x400300c	     0xf84c6000000	                            je 0x40030d8	       913	ops.c	FUNCTION_15	IF_1
0x4003012	          0x8d47d0	                   lea eax, [rdi - 0x30]	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x4003015	          0x83f809	                              cmp eax, 9	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x4003018	     0xf87da000000	                            ja 0x40030f8	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x400301e	            0x4898	                                    cdqe	       950	ops.c	FUNCTION_15
0x4003020	        0x48c1e005	                              shl rax, 5	       950	ops.c	FUNCTION_15
0x4003024	    0x480500000000	                              add rax, 0	       950	ops.c	FUNCTION_15
0x400302a	          0x488b38	                    mov rdi, qword [rax]	      3012	ops.c	FUNCTION_43	IF_1
0x400302d	    0x488905000000	            mov qword [0x04003034], rax 	       950	ops.c	FUNCTION_15
0x4003034	        0x488b5808	                mov rbx, qword [rax + 8]	      3045	ops.c	FUNCTION_44	CALL_1
0x4003038	          0x4885ff	                           test rdi, rdi	      3012	ops.c	FUNCTION_43	IF_1
0x400303b	            0x744c	                            je 0x4003089	      3012	ops.c	FUNCTION_43	IF_1
0x400303d	        0x4883eb01	                              sub rbx, 1	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4003041	            0x7833	                            js 0x4003076	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4003043	    0x488d2cdd0000	                        lea rbp, [rbx*8]	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x400304b	       0xf1f440000	                   nop dword [rax + rax]	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4003050	        0x488b3c2f	              mov rdi, qword [rdi + rbp]	      3032	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x4003054	        0x4883eb01	                              sub rbx, 1	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4003058	        0x4883ed08	                              sub rbp, 8	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x400305c	      0xe800000000	                          call 0x4003061	      3032	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x4003061	    0x488b05000000	            mov rax, qword [0x04003068] 	      3032	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x4003068	        0x4883fbff	             cmp rbx, 0xffffffffffffffff	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x400306c	          0x488b38	                    mov rdi, qword [rax]	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x400306f	            0x75df	                           jne 0x4003050	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4003071	          0x4885ff	                           test rdi, rdi	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4003074	            0x7413	                            je 0x4003089	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4003076	      0xe800000000	                          call 0x400307b	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x400307b	    0x488b05000000	            mov rax, qword [0x04003082] 	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4003082	    0x48c700000000	                      mov qword [rax], 0	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4003089	        0x498b1424	                    mov rdx, qword [r12]	      1044	ops.c	FUNCTION_18
0x400308d	          0x4c89e7	                            mov rdi, r12	      1045	ops.c	FUNCTION_18	CALL_3
0x4003090	          0x488910	                    mov qword [rax], rdx	      1044	ops.c	FUNCTION_18
0x4003093	      0x498b542408	                mov rdx, qword [r12 + 8]	      1044	ops.c	FUNCTION_18
0x4003098	        0x48895008	                mov qword [rax + 8], rdx	      1044	ops.c	FUNCTION_18
0x400309c	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      1044	ops.c	FUNCTION_18
0x40030a1	        0x48895010	             mov qword [rax + 0x10], rdx	      1044	ops.c	FUNCTION_18
0x40030a5	      0x498b542418	            mov rdx, qword [r12 + 0x18] 	      1044	ops.c	FUNCTION_18
0x40030aa	        0x48895018	             mov qword [rax + 0x18], rdx	      1044	ops.c	FUNCTION_18
0x40030ae	      0xe800000000	                          call 0x40030b3	      1045	ops.c	FUNCTION_18	CALL_3
0x40030b3	    0x488b05000000	            mov rax, qword [0x040030ba] 	      6721	ops.c	ELSE_3	FUNCTION_78	IF_1
0x40030ba	    0x483d00000000	                              cmp rax, 0	      6721	ops.c	ELSE_3	FUNCTION_78	IF_1
0x40030c0	     0xf848a000000	                            je 0x4003150	      6721	ops.c	ELSE_3	FUNCTION_78	IF_1
0x40030c6	    0x483d00000000	                              cmp rax, 0	      6726	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2
0x40030cc	            0x7452	                            je 0x4003120	      6726	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2
0x40030ce	              0x5b	                                 pop rbx	      1051	ops.c	FUNCTION_18
0x40030cf	              0x5d	                                 pop rbp	      1051	ops.c	FUNCTION_18
0x40030d0	            0x415c	                                 pop r12	      1051	ops.c	FUNCTION_18
0x40030d2	              0xc3	                                     ret	      1051	ops.c	FUNCTION_18
0x40030d3	       0xf1f440000	                   nop dword [rax + rax]	      1051	ops.c	FUNCTION_18
0x40030d8	    0x488b05000000	            mov rax, qword [0x040030df] 	       913	ops.c	FUNCTION_15	IF_1
0x40030df	          0x4885c0	                           test rax, rax	       913	ops.c	FUNCTION_15	IF_1
0x40030e2	     0xf8542ffffff	                           jne 0x400302a	       913	ops.c	FUNCTION_15	IF_1
0x40030e8	          0x8d47d0	                   lea eax, [rdi - 0x30]	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x40030eb	          0x83f809	                              cmp eax, 9	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x40030ee	     0xf862affffff	                           jbe 0x400301e	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x40030f4	         0xf1f4000	                         nop dword [rax]	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x40030f8	          0x8d479f	                   lea eax, [rdi - 0x61]	       921	ops.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x40030fb	          0x83f819	                           cmp eax, 0x19	       921	ops.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x40030fe	            0x7648	                           jbe 0x4003148	       921	ops.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x4003100	          0x8d47bf	                   lea eax, [rdi - 0x41]	       923	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_4
0x4003103	          0x83f819	                           cmp eax, 0x19	       923	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_4
0x4003106	            0x776e	                            ja 0x4003176	       923	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_4
0x4003108	          0x8d47c9	                   lea eax, [rdi - 0x37]	       925	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_5
0x400310b	    0xc70500000000	               mov dword [0x04003115], 1	       926	ops.c	FUNCTION_15	ELSE_2	IF_4
0x4003115	      0xe904ffffff	                           jmp 0x400301e	       926	ops.c	FUNCTION_15	ELSE_2	IF_4
0x400311a	    0x660f1f440000	                    nop word [rax + rax]	       926	ops.c	FUNCTION_15	ELSE_2	IF_4
0x4003120	    0x8b0500000000	            mov eax, dword [0x04003126] 	      6726	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2
0x4003126	            0x85c0	                           test eax, eax	      6726	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2
0x4003128	            0x74a4	                            je 0x40030ce	      6726	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2
0x400312a	      0xbf00000000	                              mov edi, 0	      6728	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2	CALL_3
0x400312f	      0xe800000000	                          call 0x4003134	      6728	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2	CALL_3
0x4003134	              0x5b	                                 pop rbx	      1051	ops.c	FUNCTION_18
0x4003135	              0x5d	                                 pop rbp	      1051	ops.c	FUNCTION_18
0x4003136	            0x415c	                                 pop r12	      1051	ops.c	FUNCTION_18
0x4003138	      0xbf00000000	                              mov edi, 0	      6729	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2	CALL_4
0x400313d	      0xe900000000	                           jmp 0x4003142	      6729	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2	CALL_4
0x4003142	    0x660f1f440000	                    nop word [rax + rax]	      6729	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2	CALL_4
0x4003148	          0x8d47a9	                   lea eax, [rdi - 0x57]	       922	ops.c	FUNCTION_15	ELSE_1	IF_3
0x400314b	      0xe9cefeffff	                           jmp 0x400301e	       922	ops.c	FUNCTION_15	ELSE_1	IF_3
0x4003150	    0x8b1500000000	            mov edx, dword [0x04003156] 	      6721	ops.c	ELSE_3	FUNCTION_78	IF_1
0x4003156	            0x85d2	                           test edx, edx	      6721	ops.c	ELSE_3	FUNCTION_78	IF_1
0x4003158	     0xf8470ffffff	                            je 0x40030ce	      6721	ops.c	ELSE_3	FUNCTION_78	IF_1
0x400315e	      0xbf00000000	                              mov edi, 0	      6723	ops.c	ELSE_3	FUNCTION_78	IF_1	CALL_1
0x4003163	      0xe800000000	                          call 0x4003168	      6723	ops.c	ELSE_3	FUNCTION_78	IF_1	CALL_1
0x4003168	              0x5b	                                 pop rbx	      1051	ops.c	FUNCTION_18
0x4003169	              0x5d	                                 pop rbp	      1051	ops.c	FUNCTION_18
0x400316a	            0x415c	                                 pop r12	      1051	ops.c	FUNCTION_18
0x400316c	      0xbf00000000	                              mov edi, 0	      6724	ops.c	ELSE_3	FUNCTION_78	IF_1	CALL_2
0x4003171	      0xe900000000	                           jmp 0x4003176	      6724	ops.c	ELSE_3	FUNCTION_78	IF_1	CALL_2
0x4003176	          0x83ff2d	                           cmp edi, 0x2d	       928	ops.c	FUNCTION_15	ELSE_3	IF_5
0x4003179	      0xb824000000	                           mov eax, 0x24	       929	ops.c	FUNCTION_15	ELSE_3	IF_5
0x400317e	     0xf849afeffff	                            je 0x400301e	       928	ops.c	FUNCTION_15	ELSE_3	IF_5
0x4003184	    0x8b3500000000	            mov esi, dword [0x0400318a] 	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x400318a	            0x85f6	                           test esi, esi	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x400318c	            0x740e	                            je 0x400319c	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x400318e	          0x83ff2a	                           cmp edi, 0x2a	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x4003191	      0xb825000000	                           mov eax, 0x25	       934	ops.c	FUNCTION_15	ELSE_4	IF_6
0x4003196	     0xf8482feffff	                            je 0x400301e	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x400319c	    0x8b0d00000000	            mov ecx, dword [0x040031a2] 	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x40031a2	            0x85c9	                           test ecx, ecx	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x40031a4	            0x740e	                            je 0x40031b4	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x40031a6	          0x83ff2b	                           cmp edi, 0x2b	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x40031a9	      0xb826000000	                           mov eax, 0x26	       940	ops.c	FUNCTION_15	ELSE_5	IF_7
0x40031ae	     0xf846afeffff	                            je 0x400301e	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x40031b4	          0x83ff7e	                           cmp edi, 0x7e	       946	ops.c	FUNCTION_15	ELSE_6	IF_8
0x40031b7	      0xba27000000	                           mov edx, 0x27	       946	ops.c	FUNCTION_15	ELSE_6	IF_8
0x40031bc	      0xb800000000	                              mov eax, 0	       946	ops.c	FUNCTION_15	ELSE_6	IF_8
0x40031c1	           0xf44c2	                          cmove eax, edx	       946	ops.c	FUNCTION_15	ELSE_6	IF_8
0x40031c4	      0xe955feffff	                           jmp 0x400301e	       946	ops.c	FUNCTION_15	ELSE_6	IF_8
op_format	SWITCH,0:DO,0:ELSE,0:functions,1:FOR,0:IF,6:WHILE,0:CALL,5	106
0x40075d0	            0x4155	                                push r13	      4828	ops.c	FUNCTION_57
0x40075d2	            0x4154	                                push r12	      4828	ops.c	FUNCTION_57
0x40075d4	          0x4189f4	                           mov r12d, esi	      4828	ops.c	FUNCTION_57
0x40075d7	              0x55	                                push rbp	      4828	ops.c	FUNCTION_57
0x40075d8	              0x53	                                push rbx	      4828	ops.c	FUNCTION_57
0x40075d9	          0x4889fb	                            mov rbx, rdi	      4828	ops.c	FUNCTION_57
0x40075dc	        0x4883ec08	                              sub rsp, 8	      4828	ops.c	FUNCTION_57
0x40075e0	    0x488b05000000	            mov rax, qword [0x040075e7] 	      4829	ops.c	FUNCTION_57
0x40075e7	        0x488b7740	            mov rsi, qword [rdi + 0x40] 	      4833	ops.c	FUNCTION_57
0x40075eb	        0x488b7f48	            mov rdi, qword [rdi + 0x48] 	      4833	ops.c	FUNCTION_57
0x40075ef	          0x4c8b28	                    mov r13, qword [rax]	      4829	ops.c	FUNCTION_57
0x40075f2	    0x488b05000000	            mov rax, qword [0x040075f9] 	      4833	ops.c	FUNCTION_57
0x40075f9	        0x48897038	             mov qword [rax + 0x38], rsi	      4833	ops.c	FUNCTION_57
0x40075fd	        0x48897840	             mov qword [rax + 0x40], rdi	      4833	ops.c	FUNCTION_57
0x4007601	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      4835	ops.c	FUNCTION_57	IF_1	CALL_1
0x4007605	        0x488d7001	                      lea rsi, [rax + 1]	      4835	ops.c	FUNCTION_57	IF_1	CALL_1
0x4007609	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      4835	ops.c	FUNCTION_57	IF_1	CALL_1
0x400760d	        0x488d78ff	                      lea rdi, [rax - 1]	      4835	ops.c	FUNCTION_57	IF_1	CALL_1
0x4007611	      0xe800000000	                          call 0x4007616	      4835	ops.c	FUNCTION_57	IF_1	CALL_1
0x4007616	            0x85c0	                           test eax, eax	      4835	ops.c	FUNCTION_57	IF_1	CALL_1
0x4007618	     0xf8434010000	                            je 0x4007752	      4835	ops.c	FUNCTION_57	IF_1	CALL_1
0x400761e	    0x488b0d000000	            mov rcx, qword [0x04007625] 	      4838	ops.c	FUNCTION_57
0x4007625	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      4838	ops.c	FUNCTION_57
0x4007629	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      4838	ops.c	FUNCTION_57
0x400762d	        0x48894138	             mov qword [rcx + 0x38], rax	      4838	ops.c	FUNCTION_57
0x4007631	        0x48895140	             mov qword [rcx + 0x40], rdx	      4838	ops.c	FUNCTION_57
0x4007635	          0x8b4b5c	            mov ecx, dword [rbx + 0x5c] 	      4840	ops.c	FUNCTION_57	IF_2
0x4007638	            0x85c9	                           test ecx, ecx	      4840	ops.c	FUNCTION_57	IF_2
0x400763a	     0xf8520010000	                           jne 0x4007760	      4840	ops.c	FUNCTION_57	IF_2
0x4007640	    0x488b0d000000	            mov rcx, qword [0x04007647] 	      4845	ops.c	FUNCTION_57
0x4007647	          0x4585e4	                         test r12d, r12d	      4849	ops.c	FUNCTION_57	IF_3
0x400764a	    0x488981e01100	          mov qword [rcx + 0x11e0], rax 	      4845	ops.c	FUNCTION_57
0x4007651	    0x488991e81100	          mov qword [rcx + 0x11e8], rdx 	      4845	ops.c	FUNCTION_57
0x4007658	            0x7416	                            je 0x4007670	      4849	ops.c	FUNCTION_57	IF_3
0x400765a	        0x488b4340	            mov rax, qword [rbx + 0x40] 	      4850	ops.c	FUNCTION_57	IF_3
0x400765e	        0x488b5348	            mov rdx, qword [rbx + 0x48] 	      4850	ops.c	FUNCTION_57	IF_3
0x4007662	    0x488905000000	            mov qword [0x04007669], rax 	      4850	ops.c	FUNCTION_57	IF_3
0x4007669	    0x488915000000	            mov qword [0x04007670], rdx 	      4850	ops.c	FUNCTION_57	IF_3
0x4007670	        0x488b7b50	            mov rdi, qword [rbx + 0x50] 	      4852	ops.c	FUNCTION_57	CALL_3
0x4007674	          0x4489e6	                           mov esi, r12d	      4852	ops.c	FUNCTION_57	CALL_3
0x4007677	      0xe800000000	                          call 0x400767c	      4852	ops.c	FUNCTION_57	CALL_3
0x400767c	          0x8b5318	            mov edx, dword [rbx + 0x18] 	      4859	ops.c	FUNCTION_57	IF_4
0x400767f	            0x85d2	                           test edx, edx	      4859	ops.c	FUNCTION_57	IF_4
0x4007681	            0x741f	                            je 0x40076a2	      4859	ops.c	FUNCTION_57	IF_4
0x4007683	    0x488b15000000	            mov rdx, qword [0x0400768a] 	      4859	ops.c	FUNCTION_57	IF_4
0x400768a	    0x488b0d000000	            mov rcx, qword [0x04007691] 	      4859	ops.c	FUNCTION_57	IF_4
0x4007691	        0x488b4238	            mov rax, qword [rdx + 0x38] 	      4859	ops.c	FUNCTION_57	IF_4
0x4007695	          0x483b01	                    cmp rax, qword [rcx]	      4859	ops.c	FUNCTION_57	IF_4
0x4007698	            0x7d08	                           jge 0x40076a2	      4859	ops.c	FUNCTION_57	IF_4
0x400769a	        0x4883c001	                              add rax, 1	      4860	ops.c	FUNCTION_57	IF_4
0x400769e	        0x48894238	             mov qword [rdx + 0x38], rax	      4860	ops.c	FUNCTION_57	IF_4
0x40076a2	      0xbf05000000	                              mov edi, 5	      4861	ops.c	FUNCTION_57	CALL_4
0x40076a7	      0xe800000000	                          call 0x40076ac	      4861	ops.c	FUNCTION_57	CALL_4
0x40076ac	    0x488b05000000	            mov rax, qword [0x040076b3] 	      4862	ops.c	FUNCTION_57
0x40076b3	          0x488b28	                    mov rbp, qword [rax]	      4862	ops.c	FUNCTION_57
0x40076b6	          0x4c29ed	                            sub rbp, r13	      4862	ops.c	FUNCTION_57
0x40076b9	          0x4889ef	                            mov rdi, rbp	      4863	ops.c	FUNCTION_57	CALL_5
0x40076bc	      0xe800000000	                          call 0x40076c1	      4863	ops.c	FUNCTION_57	CALL_5
0x40076c1	    0x488b05000000	            mov rax, qword [0x040076c8] 	      4866	ops.c	FUNCTION_57
0x40076c8	    0x488b15000000	            mov rdx, qword [0x040076cf] 	      4866	ops.c	FUNCTION_57
0x40076cf	          0x4585e4	                         test r12d, r12d	      4868	ops.c	FUNCTION_57	IF_5
0x40076d2	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      4866	ops.c	FUNCTION_57
0x40076d6	        0x488b7840	            mov rdi, qword [rax + 0x40] 	      4866	ops.c	FUNCTION_57
0x40076da	    0x4889b2001200	          mov qword [rdx + 0x1200], rsi 	      4866	ops.c	FUNCTION_57
0x40076e1	    0x4889ba081200	          mov qword [rdx + 0x1208], rdi 	      4866	ops.c	FUNCTION_57
0x40076e8	            0x7421	                            je 0x400770b	      4868	ops.c	FUNCTION_57	IF_5
0x40076ea	    0x488b35000000	            mov rsi, qword [0x040076f1] 	      4870	ops.c	FUNCTION_57	IF_5
0x40076f1	    0x488b3d000000	            mov rdi, qword [0x040076f8] 	      4870	ops.c	FUNCTION_57	IF_5
0x40076f8	    0x48c705000000	               mov qword [0x04007703], 0	      4871	ops.c	FUNCTION_57	IF_5
0x4007703	        0x48897038	             mov qword [rax + 0x38], rsi	      4870	ops.c	FUNCTION_57	IF_5
0x4007707	        0x48897840	             mov qword [rax + 0x40], rdi	      4870	ops.c	FUNCTION_57	IF_5
0x400770b	          0x8b435c	            mov eax, dword [rbx + 0x5c] 	      4874	ops.c	FUNCTION_57	IF_6
0x400770e	            0x85c0	                           test eax, eax	      4874	ops.c	FUNCTION_57	IF_6
0x4007710	            0x7440	                            je 0x4007752	      4874	ops.c	FUNCTION_57	IF_6
0x4007712	    0x488b05000000	            mov rax, qword [0x04007719] 	      4878	ops.c	FUNCTION_57	IF_6
0x4007719	          0x4885c0	                           test rax, rax	      4878	ops.c	FUNCTION_57	IF_6
0x400771c	            0x7512	                           jne 0x4007730	      4878	ops.c	FUNCTION_57	IF_6
0x400771e	            0xeb32	                           jmp 0x4007752	      4878	ops.c	FUNCTION_57	IF_6
0x4007720	          0x4801ea	                            add rdx, rbp	      4885	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	IF_2
0x4007723	        0x48895058	             mov qword [rax + 0x58], rdx	      4885	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	IF_2
0x4007727	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4878	ops.c	FUNCTION_57	IF_6
0x400772b	          0x4885c0	                           test rax, rax	      4878	ops.c	FUNCTION_57	IF_6
0x400772e	            0x7422	                            je 0x4007752	      4878	ops.c	FUNCTION_57	IF_6
0x4007730	        0x488b5058	            mov rdx, qword [rax + 0x58] 	      4880	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1
0x4007734	          0x4885d2	                           test rdx, rdx	      4880	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1
0x4007737	            0x74ee	                            je 0x4007727	      4880	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1
0x4007739	        0x488b4868	            mov rcx, qword [rax + 0x68] 	      4884	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	IF_2
0x400773d	          0x4839ca	                            cmp rdx, rcx	      4884	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	IF_2
0x4007740	            0x7fde	                            jg 0x4007720	      4884	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	IF_2
0x4007742	          0x4801e9	                            add rcx, rbp	      4887	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	ELSE_1
0x4007745	        0x48894868	             mov qword [rax + 0x68], rcx	      4887	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	ELSE_1
0x4007749	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4878	ops.c	FUNCTION_57	IF_6
0x400774d	          0x4885c0	                           test rax, rax	      4878	ops.c	FUNCTION_57	IF_6
0x4007750	            0x75de	                           jne 0x4007730	      4878	ops.c	FUNCTION_57	IF_6
0x4007752	        0x4883c408	                              add rsp, 8	      4891	ops.c	FUNCTION_57	ELSE_1
0x4007756	              0x5b	                                 pop rbx	      4891	ops.c	FUNCTION_57	ELSE_1
0x4007757	              0x5d	                                 pop rbp	      4891	ops.c	FUNCTION_57	ELSE_1
0x4007758	            0x415c	                                 pop r12	      4891	ops.c	FUNCTION_57	ELSE_1
0x400775a	            0x415d	                                 pop r13	      4891	ops.c	FUNCTION_57	ELSE_1
0x400775c	              0xc3	                                     ret	      4891	ops.c	FUNCTION_57	ELSE_1
0x400775d	           0xf1f00	                         nop dword [rax]	      4891	ops.c	FUNCTION_57	ELSE_1
0x4007760	      0xbf14000000	                           mov edi, 0x14	      4842	ops.c	FUNCTION_57	CALL_2
0x4007765	      0xe800000000	                          call 0x400776a	      4842	ops.c	FUNCTION_57	CALL_2
0x400776a	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      4842	ops.c	FUNCTION_57	CALL_2
0x400776e	        0x488b5328	            mov rdx, qword [rbx + 0x28] 	      4842	ops.c	FUNCTION_57	CALL_2
0x4007772	      0xe9c9feffff	                           jmp 0x4007640	      4842	ops.c	FUNCTION_57	CALL_2
op_formatexpr	SWITCH,0:DO,0:ELSE,0:functions,0:FOR,0:IF,2:WHILE,0:CALL,3	68
0x4007780	            0x4155	                                push r13	      4899	ops.c	ELSE_1	FUNCTION_58
0x4007782	            0x4154	                                push r12	      4899	ops.c	ELSE_1	FUNCTION_58
0x4007784	              0x55	                                push rbp	      4899	ops.c	ELSE_1	FUNCTION_58
0x4007785	              0x53	                                push rbx	      4899	ops.c	ELSE_1	FUNCTION_58
0x4007786	          0x4889fb	                            mov rbx, rdi	      4899	ops.c	ELSE_1	FUNCTION_58
0x4007789	        0x4883ec08	                              sub rsp, 8	      4899	ops.c	ELSE_1	FUNCTION_58
0x400778d	          0x8b475c	            mov eax, dword [rdi + 0x5c] 	      4900	ops.c	ELSE_1	FUNCTION_58	IF_1
0x4007790	            0x85c0	                           test eax, eax	      4900	ops.c	ELSE_1	FUNCTION_58	IF_1
0x4007792	     0xf85c8000000	                           jne 0x4007860	      4900	ops.c	ELSE_1	FUNCTION_58	IF_1
0x4007798	        0x4c8b6b20	            mov r13, qword [rbx + 0x20] 	      4904	ops.c	ELSE_1	FUNCTION_58	IF_2	CALL_2
0x400779c	        0x488b6b50	            mov rbp, qword [rbx + 0x50] 	      4904	ops.c	ELSE_1	FUNCTION_58	IF_2	CALL_2
0x40077a0	      0xbe04000000	                              mov esi, 4	      4916	ops.c	FUNCTION_59	CALL_1
0x40077a5	      0xbf00000000	                              mov edi, 0	      4916	ops.c	FUNCTION_59	CALL_1
0x40077aa	      0xe800000000	                          call 0x40077af	      4916	ops.c	FUNCTION_59	CALL_1
0x40077af	          0x4c89ee	                            mov rsi, r13	      4925	ops.c	FUNCTION_59	CALL_2
0x40077b2	      0xbf09000000	                              mov edi, 9	      4925	ops.c	FUNCTION_59	CALL_2
0x40077b7	          0x4189c4	                           mov r12d, eax	      4916	ops.c	FUNCTION_59	CALL_1
0x40077ba	      0xe800000000	                          call 0x40077bf	      4925	ops.c	FUNCTION_59	CALL_2
0x40077bf	          0x4889ee	                            mov rsi, rbp	      4926	ops.c	FUNCTION_59	CALL_3
0x40077c2	            0x31ff	                            xor edi, edi	      4926	ops.c	FUNCTION_59	CALL_3
0x40077c4	      0xe800000000	                          call 0x40077c9	      4926	ops.c	FUNCTION_59	CALL_3
0x40077c9	            0x31ff	                            xor edi, edi	      4927	ops.c	FUNCTION_59	CALL_4
0x40077cb	      0xe800000000	                          call 0x40077d0	      4927	ops.c	FUNCTION_59	CALL_4
0x40077d0	    0x488b05000000	            mov rax, qword [0x040077d7] 	      4930	ops.c	FUNCTION_59	CALL_5
0x40077d7	    0x488bb8001500	          mov rdi, qword [rax + 0x1500] 	      4930	ops.c	FUNCTION_59	CALL_5
0x40077de	      0xe800000000	                          call 0x40077e3	      4930	ops.c	FUNCTION_59	CALL_5
0x40077e3	          0x4885c0	                           test rax, rax	      4931	ops.c	FUNCTION_59	IF_1
0x40077e6	          0x4889c5	                            mov rbp, rax	      4930	ops.c	FUNCTION_59	CALL_5
0x40077e9	            0x7445	                            je 0x4007830	      4931	ops.c	FUNCTION_59	IF_1
0x40077eb	          0x4585e4	                         test r12d, r12d	      4937	ops.c	FUNCTION_59	IF_2
0x40077ee	            0x7550	                           jne 0x4007840	      4937	ops.c	FUNCTION_59	IF_2
0x40077f0	          0x4889c7	                            mov rdi, rax	      4939	ops.c	FUNCTION_59	CALL_6
0x40077f3	      0xe800000000	                          call 0x40077f8	      4939	ops.c	FUNCTION_59	CALL_6
0x40077f8	          0x4189c4	                           mov r12d, eax	      4939	ops.c	FUNCTION_59	CALL_6
0x40077fb	            0x31f6	                            xor esi, esi	      4943	ops.c	FUNCTION_59	CALL_7
0x40077fd	      0xbaffffffff	                     mov edx, 0xffffffff	      4943	ops.c	FUNCTION_59	CALL_7
0x4007802	      0xbf31000000	                           mov edi, 0x31	      4943	ops.c	FUNCTION_59	CALL_7
0x4007807	      0xe800000000	                          call 0x400780c	      4943	ops.c	FUNCTION_59	CALL_7
0x400780c	          0x4889ef	                            mov rdi, rbp	      4944	ops.c	FUNCTION_59	CALL_8
0x400780f	      0xe800000000	                          call 0x4007814	      4944	ops.c	FUNCTION_59	CALL_8
0x4007814	          0x4585e4	                         test r12d, r12d	      4904	ops.c	ELSE_1	FUNCTION_58	IF_2	CALL_2
0x4007817	            0x7417	                            je 0x4007830	      4904	ops.c	ELSE_1	FUNCTION_58	IF_2	CALL_2
0x4007819	        0x4883c408	                              add rsp, 8	      4908	ops.c	ELSE_1	FUNCTION_58
0x400781d	          0x4889df	                            mov rdi, rbx	      4907	ops.c	ELSE_1	FUNCTION_58	CALL_3
0x4007820	            0x31f6	                            xor esi, esi	      4907	ops.c	ELSE_1	FUNCTION_58	CALL_3
0x4007822	              0x5b	                                 pop rbx	      4908	ops.c	ELSE_1	FUNCTION_58
0x4007823	              0x5d	                                 pop rbp	      4908	ops.c	ELSE_1	FUNCTION_58
0x4007824	            0x415c	                                 pop r12	      4908	ops.c	ELSE_1	FUNCTION_58
0x4007826	            0x415d	                                 pop r13	      4908	ops.c	ELSE_1	FUNCTION_58
0x4007828	      0xe9a3fdffff	                       jmp sym.op_format	      4907	ops.c	ELSE_1	FUNCTION_58	CALL_3
0x400782d	           0xf1f00	                         nop dword [rax]	      4907	ops.c	ELSE_1	FUNCTION_58	CALL_3
0x4007830	        0x4883c408	                              add rsp, 8	      4908	ops.c	ELSE_1	FUNCTION_58
0x4007834	              0x5b	                                 pop rbx	      4908	ops.c	ELSE_1	FUNCTION_58
0x4007835	              0x5d	                                 pop rbp	      4908	ops.c	ELSE_1	FUNCTION_58
0x4007836	            0x415c	                                 pop r12	      4908	ops.c	ELSE_1	FUNCTION_58
0x4007838	            0x415d	                                 pop r13	      4908	ops.c	ELSE_1	FUNCTION_58
0x400783a	              0xc3	                                     ret	      4908	ops.c	ELSE_1	FUNCTION_58
0x400783b	       0xf1f440000	                   nop dword [rax + rax]	      4908	ops.c	ELSE_1	FUNCTION_58
0x4007840	          0x4889c7	                            mov rdi, rax	      4939	ops.c	FUNCTION_59	CALL_6
0x4007843	    0x830500000000	               add dword [0x0400784a], 1	      4938	ops.c	FUNCTION_59	IF_2
0x400784a	      0xe800000000	                          call 0x400784f	      4939	ops.c	FUNCTION_59	CALL_6
0x400784f	    0x832d00000000	               sub dword [0x04007856], 1	      4941	ops.c	FUNCTION_59	IF_3
0x4007856	          0x4189c4	                           mov r12d, eax	      4939	ops.c	FUNCTION_59	CALL_6
0x4007859	            0xeba0	                           jmp 0x40077fb	      4939	ops.c	FUNCTION_59	CALL_6
0x400785b	       0xf1f440000	                   nop dword [rax + rax]	      4939	ops.c	FUNCTION_59	CALL_6
0x4007860	      0xbf14000000	                           mov edi, 0x14	      4902	ops.c	ELSE_1	FUNCTION_58	CALL_1
0x4007865	      0xe800000000	                          call 0x400786a	      4902	ops.c	ELSE_1	FUNCTION_58	CALL_1
0x400786a	      0xe929ffffff	                           jmp 0x4007798	      4902	ops.c	ELSE_1	FUNCTION_58	CALL_1
x11_export_final_selection	SWITCH,0:DO,0:ELSE,4:functions,0:FOR,0:IF,8:WHILE,0:CALL,9	99
0x400c250	              0x55	                                push rbp	      6473	ops.c	FUNCTION_73
0x400c251	              0x53	                                push rbx	      6473	ops.c	FUNCTION_73
0x400c252	        0x4883ec48	                           sub rsp, 0x48	      6473	ops.c	FUNCTION_73
0x400c256	    0x8b3500000000	            mov esi, dword [0x0400c25c] 	      6480	ops.c	FUNCTION_73	IF_1
0x400c25c	    0x488b1d000000	            mov rbx, qword [0x0400c263] 	      6485	ops.c	FUNCTION_73	ELSE_1
0x400c263	    0x64488b042528	                mov rax, qword fs:[0x28]	      6473	ops.c	FUNCTION_73
0x400c26c	      0x4889442438	             mov qword [rsp + 0x38], rax	      6473	ops.c	FUNCTION_73
0x400c271	            0x31c0	                            xor eax, eax	      6473	ops.c	FUNCTION_73
0x400c273	    0x48c744241000	               mov qword [rsp + 0x10], 0	      6475	ops.c	FUNCTION_73
0x400c27c	    0x48c744241800	               mov qword [rsp + 0x18], 0	      6476	ops.c	FUNCTION_73
0x400c285	            0x85f6	                           test esi, esi	      6480	ops.c	FUNCTION_73	IF_1
0x400c287	            0x7408	                            je 0x400c291	      6480	ops.c	FUNCTION_73	IF_1
0x400c289	      0xe800000000	                          call 0x400c28e	      6481	ops.c	FUNCTION_73	IF_1
0x400c28e	          0x4889c3	                            mov rbx, rax	      6481	ops.c	FUNCTION_73	IF_1
0x400c291	    0x8b0d00000000	            mov ecx, dword [0x0400c297] 	      6491	ops.c	FUNCTION_73	IF_2
0x400c297	            0x85c9	                           test ecx, ecx	      6491	ops.c	FUNCTION_73	IF_2
0x400c299	            0x7535	                           jne 0x400c2d0	      6491	ops.c	FUNCTION_73	IF_2
0x400c29b	    0x8b1500000000	            mov edx, dword [0x0400c2a1] 	      6493	ops.c	FUNCTION_73	ELSE_2	IF_3
0x400c2a1	            0x85d2	                           test edx, edx	      6493	ops.c	FUNCTION_73	ELSE_2	IF_3
0x400c2a3	     0xf8587000000	                           jne 0x400c330	      6493	ops.c	FUNCTION_73	ELSE_2	IF_3
0x400c2a9	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      6493	ops.c	FUNCTION_73	ELSE_2	IF_3
0x400c2ae	      0xe800000000	                          call 0x400c2b3	      6547	ops.c	FUNCTION_73	CALL_9
0x400c2b3	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      6548	ops.c	FUNCTION_73
0x400c2b8	    0x644833042528	                xor rax, qword fs:[0x28]	      6548	ops.c	FUNCTION_73
0x400c2c1	     0xf852e010000	                           jne 0x400c3f5	      6548	ops.c	FUNCTION_73
0x400c2c7	        0x4883c448	                           add rsp, 0x48	      6548	ops.c	FUNCTION_73
0x400c2cb	              0x5b	                                 pop rbx	      6548	ops.c	FUNCTION_73
0x400c2cc	              0x5d	                                 pop rbp	      6548	ops.c	FUNCTION_73
0x400c2cd	              0xc3	                                     ret	      6548	ops.c	FUNCTION_73
0x400c2ce	            0x6690	                                     nop	      6548	ops.c	FUNCTION_73
0x400c2d0	      0x488d742418	                   lea rsi, [rsp + 0x18]	      6492	ops.c	FUNCTION_73	CALL_1
0x400c2d5	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      6492	ops.c	FUNCTION_73	CALL_1
0x400c2da	      0xba00000000	                              mov edx, 0	      6492	ops.c	FUNCTION_73	CALL_1
0x400c2df	      0xe800000000	                          call 0x400c2e4	      6492	ops.c	FUNCTION_73	CALL_1
0x400c2e4	          0x4885db	                           test rbx, rbx	      6497	ops.c	FUNCTION_73	IF_4
0x400c2e7	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      6497	ops.c	FUNCTION_73	IF_4
0x400c2ec	            0x74c0	                            je 0x400c2ae	      6497	ops.c	FUNCTION_73	IF_4
0x400c2ee	            0x85c0	                           test eax, eax	      6497	ops.c	FUNCTION_73	IF_4
0x400c2f0	            0x78bc	                            js 0x400c2ae	      6497	ops.c	FUNCTION_73	IF_4
0x400c2f2	          0x4885ff	                           test rdi, rdi	      6497	ops.c	FUNCTION_73	IF_4
0x400c2f5	            0x74b7	                            je 0x400c2ae	      6497	ops.c	FUNCTION_73	IF_4
0x400c2f7	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      6498	ops.c	FUNCTION_73	IF_4
0x400c2fc	        0x488d42ff	                      lea rax, [rdx - 1]	      6498	ops.c	FUNCTION_73	IF_4
0x400c300	    0x483dfeff0f00	                        cmp rax, 0xffffe	      6498	ops.c	FUNCTION_73	IF_4
0x400c306	            0x77a6	                            ja 0x400c2ae	      6498	ops.c	FUNCTION_73	IF_4
0x400c308	    0x8b0500000000	            mov eax, dword [0x0400c30e] 	      6507	ops.c	FUNCTION_73	IF_4	IF_5
0x400c30e	            0x85c0	                           test eax, eax	      6507	ops.c	FUNCTION_73	IF_4	IF_5
0x400c310	            0x753e	                           jne 0x400c350	      6507	ops.c	FUNCTION_73	IF_4	IF_5
0x400c312	          0x4889fe	                            mov rsi, rdi	      6542	ops.c	FUNCTION_73	IF_4	IF_8	CALL_7
0x400c315	            0x31c9	                            xor ecx, ecx	      6542	ops.c	FUNCTION_73	IF_4	IF_8	CALL_7
0x400c317	          0x4889df	                            mov rdi, rbx	      6542	ops.c	FUNCTION_73	IF_4	IF_8	CALL_7
0x400c31a	      0xe800000000	                          call 0x400c31f	      6542	ops.c	FUNCTION_73	IF_4	IF_8	CALL_7
0x400c31f	          0x4889df	                            mov rdi, rbx	      6543	ops.c	FUNCTION_73	IF_4	IF_8	CALL_8
0x400c322	      0xe800000000	                          call 0x400c327	      6543	ops.c	FUNCTION_73	IF_4	IF_8	CALL_8
0x400c327	      0xe97dffffff	                           jmp 0x400c2a9	      6543	ops.c	FUNCTION_73	IF_4	IF_8	CALL_8
0x400c32c	         0xf1f4000	                         nop dword [rax]	      6543	ops.c	FUNCTION_73	IF_4	IF_8	CALL_8
0x400c330	      0x488d742418	                   lea rsi, [rsp + 0x18]	      6494	ops.c	FUNCTION_73	ELSE_2	IF_3
0x400c335	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      6494	ops.c	FUNCTION_73	ELSE_2	IF_3
0x400c33a	      0xba00000000	                              mov edx, 0	      6494	ops.c	FUNCTION_73	ELSE_2	IF_3
0x400c33f	      0xe800000000	                          call 0x400c344	      6494	ops.c	FUNCTION_73	ELSE_2	IF_3
0x400c344	            0xeb9e	                           jmp 0x400c2e4	      6494	ops.c	FUNCTION_73	ELSE_2	IF_3
0x400c346	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      6494	ops.c	FUNCTION_73	ELSE_2	IF_3
0x400c350	    0x488b35000000	            mov rsi, qword [0x0400c357] 	      6512	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_3
0x400c357	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      6512	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_3
0x400c35c	      0xba00000000	                              mov edx, 0	      6512	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_3
0x400c361	    0xc74424200000	               mov dword [rsp + 0x20], 0	      6511	ops.c	FUNCTION_73	IF_4	IF_5
0x400c369	      0xe800000000	                          call 0x400c36e	      6512	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_3
0x400c36e	          0x83f801	                              cmp eax, 1	      6512	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_3
0x400c371	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      6512	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_3
0x400c376	     0xf8532ffffff	                           jne 0x400c2ae	      6512	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_3
0x400c37c	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      6514	ops.c	FUNCTION_73	IF_4	IF_5	IF_6
0x400c381	          0x4889fe	                            mov rsi, rdi	      6518	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_4
0x400c384	      0x488d54240c	                    lea rdx, [rsp + 0xc]	      6518	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_4
0x400c389	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      6518	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_4
0x400c38e	    0xc74424300100	               mov dword [rsp + 0x30], 1	      6517	ops.c	FUNCTION_73	IF_4	IF_5	IF_6
0x400c396	        0x8944240c	              mov dword [rsp + 0xc], eax	      6514	ops.c	FUNCTION_73	IF_4	IF_5	IF_6
0x400c39a	      0xe800000000	                          call 0x400c39f	      6518	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_4
0x400c39f	          0x4889c5	                            mov rbp, rax	      6518	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_4
0x400c3a2	      0x486344240c	          movsxd rax, dword [rsp + 0xc] 	      6519	ops.c	FUNCTION_73	IF_4	IF_5	IF_6
0x400c3a7	          0x4885ed	                           test rbp, rbp	      6520	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	IF_7
0x400c3aa	      0x4889442418	             mov qword [rsp + 0x18], rax	      6519	ops.c	FUNCTION_73	IF_4	IF_5	IF_6
0x400c3af	            0x742c	                            je 0x400c3dd	      6520	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	IF_7
0x400c3b1	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      6522	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	IF_7	CALL_5
0x400c3b6	      0xe800000000	                          call 0x400c3bb	      6522	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	IF_7	CALL_5
0x400c3bb	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      6529	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_6
0x400c3c0	            0x31d2	                            xor edx, edx	      6529	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_6
0x400c3c2	            0x31f6	                            xor esi, esi	      6529	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_6
0x400c3c4	      0x48896c2410	             mov qword [rsp + 0x10], rbp	      6523	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	IF_7
0x400c3c9	      0xe800000000	                          call 0x400c3ce	      6529	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_6
0x400c3ce	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      6529	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_6
0x400c3d3	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      6529	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_6
0x400c3d8	      0xe935ffffff	                           jmp 0x400c312	      6529	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_6
0x400c3dd	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      6529	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_6
0x400c3e2	            0x31d2	                            xor edx, edx	      6529	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_6
0x400c3e4	            0x31f6	                            xor esi, esi	      6529	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_6
0x400c3e6	      0xe800000000	                          call 0x400c3eb	      6529	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_6
0x400c3eb	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      6529	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_6
0x400c3f0	      0xe9b9feffff	                           jmp 0x400c2ae	      6529	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_6
0x400c3f5	      0xe800000000	                          call 0x400c3fa	      6548	ops.c	FUNCTION_73
do_execreg	SWITCH,0:DO,0:ELSE,4:functions,0:FOR,1:IF,18:WHILE,0:CALL,28	290
0x4009c40	            0x4157	                                push r15	      1211	ops.c	FUNCTION_23
0x4009c42	            0x4156	                                push r14	      1211	ops.c	FUNCTION_23
0x4009c44	          0x4189f6	                           mov r14d, esi	      1211	ops.c	FUNCTION_23
0x4009c47	            0x4155	                                push r13	      1211	ops.c	FUNCTION_23
0x4009c49	            0x4154	                                push r12	      1211	ops.c	FUNCTION_23
0x4009c4b	          0x4189cc	                           mov r12d, ecx	      1211	ops.c	FUNCTION_23
0x4009c4e	              0x55	                                push rbp	      1211	ops.c	FUNCTION_23
0x4009c4f	              0x53	                                push rbx	      1211	ops.c	FUNCTION_23
0x4009c50	            0x89fd	                            mov ebp, edi	      1211	ops.c	FUNCTION_23
0x4009c52	        0x4883ec28	                           sub rsp, 0x28	      1211	ops.c	FUNCTION_23
0x4009c56	    0x64488b042528	                mov rax, qword fs:[0x28]	      1211	ops.c	FUNCTION_23
0x4009c5f	      0x4889442418	             mov qword [rsp + 0x18], rax	      1211	ops.c	FUNCTION_23
0x4009c64	            0x31c0	                            xor eax, eax	      1211	ops.c	FUNCTION_23
0x4009c66	          0x83ff40	                           cmp edi, 0x40	      1217	ops.c	FUNCTION_23	IF_1
0x4009c69	        0x8954240c	              mov dword [rsp + 0xc], edx	      1211	ops.c	FUNCTION_23
0x4009c6d	     0xf845d010000	                            je 0x4009dd0	      1217	ops.c	FUNCTION_23	IF_1
0x4009c73	          0x8d45dd	                   lea eax, [rbp - 0x23]	      1227	ops.c	FUNCTION_23	IF_3	CALL_3
0x4009c76	          0x83e0fd	                     and eax, 0xfffffffd	      1227	ops.c	FUNCTION_23	IF_3	CALL_3
0x4009c79	     0xf8421010000	                            je 0x4009da0	      1227	ops.c	FUNCTION_23	IF_3	CALL_3
0x4009c7f	            0x85ed	                           test ebp, ebp	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x4009c81	            0x7e15	                           jle 0x4009c98	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x4009c83	            0x89e8	                            mov eax, ebp	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x4009c85	          0x83e0df	                     and eax, 0xffffffdf	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x4009c88	          0x83e841	                           sub eax, 0x41	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x4009c8b	          0x83f819	                           cmp eax, 0x19	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x4009c8e	            0x761d	                           jbe 0x4009cad	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x4009c90	          0x8d45d0	                   lea eax, [rbp - 0x30]	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x4009c93	          0x83f809	                              cmp eax, 9	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x4009c96	            0x7615	                           jbe 0x4009cad	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x4009c98	            0x89ee	                            mov esi, ebp	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x4009c9a	      0xbf00000000	                              mov edi, 0	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x4009c9f	      0xe800000000	                          call 0x4009ca4	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x4009ca4	          0x4885c0	                           test rax, rax	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x4009ca7	     0xf84d3000000	                            je 0x4009d80	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x4009cad	          0x83fd2a	                           cmp ebp, 0x2a	       964	ops.c	FUNCTION_16	IF_1
0x4009cb0	    0x892d00000000	            mov dword [0x04009cb6], ebp 	      1232	ops.c	FUNCTION_23
0x4009cb6	     0xf84bc020000	                            je 0x4009f78	       964	ops.c	FUNCTION_16	IF_1
0x4009cbc	          0x83fd2b	                           cmp ebp, 0x2b	       971	ops.c	FUNCTION_16	ELSE_2	IF_3
0x4009cbf	     0xf843b010000	                            je 0x4009e00	       971	ops.c	FUNCTION_16	ELSE_2	IF_3
0x4009cc5	          0x83fd5f	                           cmp ebp, 0x5f	      1238	ops.c	FUNCTION_23	IF_4
0x4009cc8	      0xb801000000	                              mov eax, 1	      1239	ops.c	FUNCTION_23	IF_4
0x4009ccd	     0xf84d6000000	                            je 0x4009da9	      1238	ops.c	FUNCTION_23	IF_4
0x4009cd3	          0x83fd3a	                           cmp ebp, 0x3a	      1242	ops.c	FUNCTION_23	IF_5
0x4009cd6	     0xf85d4020000	                           jne 0x4009fb0	      1242	ops.c	FUNCTION_23	IF_5
0x4009cdc	    0x488b05000000	            mov rax, qword [0x04009ce3] 	      1244	ops.c	FUNCTION_23	IF_5	IF_6
0x4009ce3	      0xba05000000	                              mov edx, 5	      1246	ops.c	FUNCTION_23	IF_5	IF_6	CALL_7
0x4009ce8	      0xbe00000000	                              mov esi, 0	      1246	ops.c	FUNCTION_23	IF_5	IF_6	CALL_7
0x4009ced	          0x4885c0	                           test rax, rax	      1244	ops.c	FUNCTION_23	IF_5	IF_6
0x4009cf0	     0xf84f2000000	                            je 0x4009de8	      1244	ops.c	FUNCTION_23	IF_5	IF_6
0x4009cf6	    0x488b3d000000	            mov rdi, qword [0x04009cfd] 	      1249	ops.c	FUNCTION_23	IF_5	CALL_8
0x4009cfd	          0x4885ff	                           test rdi, rdi	      1249	ops.c	FUNCTION_23	IF_5	CALL_8
0x4009d00	            0x7417	                            je 0x4009d19	      1249	ops.c	FUNCTION_23	IF_5	CALL_8
0x4009d02	      0xe800000000	                          call 0x4009d07	      1249	ops.c	FUNCTION_23	IF_5	CALL_8
0x4009d07	    0x488b05000000	            mov rax, qword [0x04009d0e] 	      1249	ops.c	FUNCTION_23	IF_5	CALL_8
0x4009d0e	    0x48c705000000	               mov qword [0x04009d19], 0	      1249	ops.c	FUNCTION_23	IF_5	CALL_8
0x4009d19	            0x31c9	                            xor ecx, ecx	      1251	ops.c	FUNCTION_23	IF_5	CALL_9
0x4009d1b	      0xba16000000	                           mov edx, 0x16	      1251	ops.c	FUNCTION_23	IF_5	CALL_9
0x4009d20	      0xbe00000000	                              mov esi, 0	      1251	ops.c	FUNCTION_23	IF_5	CALL_9
0x4009d25	          0x4889c7	                            mov rdi, rax	      1251	ops.c	FUNCTION_23	IF_5	CALL_9
0x4009d28	      0xe800000000	                          call 0x4009d2d	      1251	ops.c	FUNCTION_23	IF_5	CALL_9
0x4009d2d	          0x4885c0	                           test rax, rax	      1253	ops.c	FUNCTION_23	IF_5	IF_7
0x4009d30	          0x4889c5	                            mov rbp, rax	      1251	ops.c	FUNCTION_23	IF_5	CALL_9
0x4009d33	     0xf8480030000	                            je 0x400a0b9	      1253	ops.c	FUNCTION_23	IF_5	IF_7
0x4009d39	    0x8b0d00000000	            mov ecx, dword [0x04009d3f] 	      1257	ops.c	FUNCTION_23	IF_5	IF_7	IF_8	CALL_10
0x4009d3f	            0x85c9	                           test ecx, ecx	      1257	ops.c	FUNCTION_23	IF_5	IF_7	IF_8	CALL_10
0x4009d41	            0x7415	                            je 0x4009d58	      1257	ops.c	FUNCTION_23	IF_5	IF_7	IF_8	CALL_10
0x4009d43	      0xbf00000000	                              mov edi, 0	      1257	ops.c	FUNCTION_23	IF_5	IF_7	IF_8	CALL_10
0x4009d48	      0xb905000000	                              mov ecx, 5	      1257	ops.c	FUNCTION_23	IF_5	IF_7	IF_8	CALL_10
0x4009d4d	          0x4889c6	                            mov rsi, rax	      1257	ops.c	FUNCTION_23	IF_5	IF_7	IF_8	CALL_10
0x4009d50	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      1257	ops.c	FUNCTION_23	IF_5	IF_7	IF_8	CALL_10
0x4009d52	     0xf840c030000	                            je 0x400a064	      1257	ops.c	FUNCTION_23	IF_5	IF_7	IF_8	CALL_10
0x4009d58	          0x4489e1	                           mov ecx, r12d	      1260	ops.c	FUNCTION_23	IF_5	IF_7	CALL_12
0x4009d5b	      0xba01000000	                              mov edx, 1	      1260	ops.c	FUNCTION_23	IF_5	IF_7	CALL_12
0x4009d60	      0xbe01000000	                              mov esi, 1	      1260	ops.c	FUNCTION_23	IF_5	IF_7	CALL_12
0x4009d65	          0x4889ef	                            mov rdi, rbp	      1260	ops.c	FUNCTION_23	IF_5	IF_7	CALL_12
0x4009d68	      0xe8437fffff	                 call sym.put_in_typebuf	      1260	ops.c	FUNCTION_23	IF_5	IF_7	CALL_12
0x4009d6d	            0x89c3	                            mov ebx, eax	      1260	ops.c	FUNCTION_23	IF_5	IF_7	CALL_12
0x4009d6f	          0x4889ef	                            mov rdi, rbp	      1284	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_21
0x4009d72	      0xe800000000	                          call 0x4009d77	      1284	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_21
0x4009d77	            0x89d8	                            mov eax, ebx	      1283	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_20
0x4009d79	            0xeb2e	                           jmp 0x4009da9	      1283	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_20
0x4009d7b	       0xf1f440000	                   nop dword [rax + rax]	      1283	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_20
0x4009d80	          0x8d45de	                   lea eax, [rbp - 0x22]	       880	ops.c	FUNCTION_14	IF_1
0x4009d83	          0x83f83d	                           cmp eax, 0x3d	       880	ops.c	FUNCTION_14	IF_1
0x4009d86	     0xf870c020000	                            ja 0x4009f98	       880	ops.c	FUNCTION_14	IF_1
0x4009d8c	    0x48ba030b0000	         movabs rdx, 0x2000000000000b03 	       880	ops.c	FUNCTION_14	IF_1
0x4009d96	        0x480fa3c2	                             bt rdx, rax	       880	ops.c	FUNCTION_14	IF_1
0x4009d9a	     0xf820dffffff	                            jb 0x4009cad	       880	ops.c	FUNCTION_14	IF_1
0x4009da0	            0x89ef	                            mov edi, ebp	      1229	ops.c	FUNCTION_23	IF_3	CALL_4
0x4009da2	      0xe800000000	                          call 0x4009da7	      1229	ops.c	FUNCTION_23	IF_3	CALL_4
0x4009da7	            0x31c0	                            xor eax, eax	      1230	ops.c	FUNCTION_23	IF_3
0x4009da9	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1324	ops.c	FUNCTION_23
0x4009dae	    0x644833342528	                xor rsi, qword fs:[0x28]	      1324	ops.c	FUNCTION_23
0x4009db7	     0xf8515030000	                           jne 0x400a0d2	      1324	ops.c	FUNCTION_23
0x4009dbd	        0x4883c428	                           add rsp, 0x28	      1324	ops.c	FUNCTION_23
0x4009dc1	              0x5b	                                 pop rbx	      1324	ops.c	FUNCTION_23
0x4009dc2	              0x5d	                                 pop rbp	      1324	ops.c	FUNCTION_23
0x4009dc3	            0x415c	                                 pop r12	      1324	ops.c	FUNCTION_23
0x4009dc5	            0x415d	                                 pop r13	      1324	ops.c	FUNCTION_23
0x4009dc7	            0x415e	                                 pop r14	      1324	ops.c	FUNCTION_23
0x4009dc9	            0x415f	                                 pop r15	      1324	ops.c	FUNCTION_23
0x4009dcb	              0xc3	                                     ret	      1324	ops.c	FUNCTION_23
0x4009dcc	         0xf1f4000	                         nop dword [rax]	      1324	ops.c	FUNCTION_23
0x4009dd0	    0x8b2d00000000	            mov ebp, dword [0x04009dd6] 	      1219	ops.c	FUNCTION_23	IF_1	IF_2
0x4009dd6	      0xba05000000	                              mov edx, 5	      1221	ops.c	FUNCTION_23	IF_1	IF_2	CALL_2
0x4009ddb	      0xbe00000000	                              mov esi, 0	      1221	ops.c	FUNCTION_23	IF_1	IF_2	CALL_2
0x4009de0	            0x85ed	                           test ebp, ebp	      1219	ops.c	FUNCTION_23	IF_1	IF_2
0x4009de2	     0xf858bfeffff	                           jne 0x4009c73	      1219	ops.c	FUNCTION_23	IF_1	IF_2
0x4009de8	            0x31ff	                            xor edi, edi	      1280	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12	CALL_19
0x4009dea	      0xe800000000	                          call 0x4009def	      1280	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12	CALL_19
0x4009def	          0x4889c7	                            mov rdi, rax	      1280	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12	CALL_19
0x4009df2	      0xe800000000	                          call 0x4009df7	      1280	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12	CALL_19
0x4009df7	            0x31c0	                            xor eax, eax	      1281	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12
0x4009df9	            0xebae	                           jmp 0x4009da9	      1281	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12
0x4009dfb	       0xf1f440000	                   nop dword [rax + rax]	      1281	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12
0x4009e00	    0x8b3500000000	            mov esi, dword [0x04009e06] 	       973	ops.c	FUNCTION_16	ELSE_2	IF_3	IF_4
0x4009e06	            0x85f6	                           test esi, esi	       973	ops.c	FUNCTION_16	ELSE_2	IF_3	IF_4
0x4009e08	     0xf85e2010000	                           jne 0x4009ff0	       973	ops.c	FUNCTION_16	ELSE_2	IF_3	IF_4
0x4009e0e	            0x31ed	                            xor ebp, ebp	       967	ops.c	FUNCTION_16	IF_1	IF_2
0x4009e10	            0x89ef	                            mov edi, ebp	      1288	ops.c	FUNCTION_23	ELSE_4	CALL_22
0x4009e12	      0xe8897dffff	 call sym.get_yank_register.constprop.17	      1288	ops.c	FUNCTION_23	ELSE_4	CALL_22
0x4009e17	    0x488b15000000	            mov rdx, qword [0x04009e1e] 	      1289	ops.c	FUNCTION_23	ELSE_4	IF_13
0x4009e1e	        0x48833a00	                      cmp qword [rdx], 0	      1289	ops.c	FUNCTION_23	ELSE_4	IF_13
0x4009e22	            0x74d3	                            je 0x4009df7	      1289	ops.c	FUNCTION_23	ELSE_4	IF_13
0x4009e24	            0x31c0	                            xor eax, eax	      1293	ops.c	FUNCTION_23	ELSE_4
0x4009e26	          0x4585f6	                         test r14d, r14d	      1293	ops.c	FUNCTION_23	ELSE_4
0x4009e29	           0xf95c0	                                setne al	      1293	ops.c	FUNCTION_23	ELSE_4
0x4009e2c	            0xf7d8	                                 neg eax	      1293	ops.c	FUNCTION_23	ELSE_4
0x4009e2e	        0x89442408	                mov dword [rsp + 8], eax	      1293	ops.c	FUNCTION_23	ELSE_4
0x4009e32	    0x8b0500000000	            mov eax, dword [0x04009e38] 	      1335	ops.c	FUNCTION_24	IF_1
0x4009e38	            0x85c0	                           test eax, eax	      1335	ops.c	FUNCTION_24	IF_1
0x4009e3a	            0x744c	                            je 0x4009e88	      1335	ops.c	FUNCTION_24	IF_1
0x4009e3c	          0x83f856	                           cmp eax, 0x56	      1337	ops.c	FUNCTION_24	IF_1	IF_2
0x4009e3f	     0xf840b020000	                            je 0x400a050	      1337	ops.c	FUNCTION_24	IF_1	IF_2
0x4009e45	          0x83f849	                           cmp eax, 0x49	      1345	ops.c	FUNCTION_24	IF_1	ELSE_1
0x4009e48	      0xba69000000	                           mov edx, 0x69	      1345	ops.c	FUNCTION_24	IF_1	ELSE_1
0x4009e4d	      0xc644241100	                mov byte [rsp + 0x11], 0	      1346	ops.c	FUNCTION_24	IF_1	ELSE_1
0x4009e52	           0xf44c2	                          cmove eax, edx	      1345	ops.c	FUNCTION_24	IF_1	ELSE_1
0x4009e55	        0x88442410	               mov byte [rsp + 0x10], al	      1345	ops.c	FUNCTION_24	IF_1	ELSE_1
0x4009e59	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1348	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x4009e5e	            0x31d2	                            xor edx, edx	      1348	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x4009e60	          0x4589e0	                           mov r8d, r12d	      1348	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x4009e63	      0xb901000000	                              mov ecx, 1	      1348	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x4009e68	      0xbeffffffff	                     mov esi, 0xffffffff	      1348	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x4009e6d	      0xe800000000	                          call 0x4009e72	      1348	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x4009e72	          0x83f801	                              cmp eax, 1	      1348	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x4009e75	            0x750a	                           jne 0x4009e81	      1348	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x4009e77	    0xc70500000000	               mov dword [0x04009e81], 0	      1349	ops.c	FUNCTION_24	IF_1	IF_3
0x4009e81	    0x488b15000000	            mov rdx, qword [0x04009e88] 	      1349	ops.c	FUNCTION_24	IF_1	IF_3
0x4009e88	        0x488b6a08	                mov rbp, qword [rdx + 8]	      1299	ops.c	FUNCTION_23	ELSE_4	FOR_1
0x4009e8c	      0xbb01000000	                              mov ebx, 1	      1214	ops.c	FUNCTION_23
0x4009e91	        0x4883ed01	                              sub rbp, 1	      1214	ops.c	FUNCTION_23
0x4009e95	    0x4c8d2ced0000	                        lea r13, [rbp*8]	      1214	ops.c	FUNCTION_23
0x4009e9d	            0xeb09	                           jmp 0x4009ea8	      1299	ops.c	FUNCTION_23	ELSE_4	FOR_1
0x4009e9f	              0x90	                                     nop	      1299	ops.c	FUNCTION_23	ELSE_4	FOR_1
0x4009ea0	        0x4983ed08	                              sub r13, 8	      1299	ops.c	FUNCTION_23	ELSE_4	FOR_1
0x4009ea4	        0x4883ed01	                              sub rbp, 1	      1299	ops.c	FUNCTION_23	ELSE_4	FOR_1
0x4009ea8	          0x4885ed	                           test rbp, rbp	      1299	ops.c	FUNCTION_23	ELSE_4	FOR_1
0x4009eab	     0xf884f010000	                            js 0x400a000	      1299	ops.c	FUNCTION_23	ELSE_4	FOR_1
0x4009eb1	    0x488b05000000	            mov rax, qword [0x04009eb8] 	      1304	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x4009eb8	        0x80781001	                cmp byte [rax + 0x10], 1	      1304	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x4009ebc	     0xf8486000000	                            je 0x4009f48	      1304	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x4009ec2	        0x488b5808	                mov rbx, qword [rax + 8]	      1305	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x4009ec6	        0x488d53ff	                      lea rdx, [rbx - 1]	      1305	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x4009eca	          0x4839d5	                            cmp rbp, rdx	      1305	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x4009ecd	            0x7c79	                            jl 0x4009f48	      1305	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x4009ecf	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      1305	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x4009ed3	            0x85d2	                           test edx, edx	      1305	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x4009ed5	            0x7571	                           jne 0x4009f48	      1305	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x4009ed7	          0x488b00	                    mov rax, qword [rax]	      1310	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_25
0x4009eda	        0x4a8b3c28	              mov rdi, qword [rax + r13]	      1310	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_25
0x4009ede	      0xe800000000	                          call 0x4009ee3	      1310	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_25
0x4009ee3	          0x4885c0	                           test rax, rax	      1311	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_16
0x4009ee6	          0x4989c7	                            mov r15, rax	      1310	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_25
0x4009ee9	     0xf8408ffffff	                            je 0x4009df7	      1311	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_16
0x4009eef	        0x8b742408	                mov esi, dword [rsp + 8]	      1313	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_26
0x4009ef3	            0x31d2	                            xor edx, edx	      1313	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_26
0x4009ef5	          0x4589e0	                           mov r8d, r12d	      1313	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_26
0x4009ef8	      0xb901000000	                              mov ecx, 1	      1313	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_26
0x4009efd	          0x4889c7	                            mov rdi, rax	      1313	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_26
0x4009f00	      0xe800000000	                          call 0x4009f05	      1313	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_26
0x4009f05	          0x4c89ff	                            mov rdi, r15	      1314	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_27
0x4009f08	            0x89c3	                            mov ebx, eax	      1313	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_26
0x4009f0a	      0xe800000000	                          call 0x4009f0f	      1314	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_27
0x4009f0f	            0x85db	                           test ebx, ebx	      1315	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_17
0x4009f11	     0xf84e0feffff	                            je 0x4009df7	      1315	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_17
0x4009f17	          0x4585f6	                         test r14d, r14d	      1317	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x4009f1a	            0x7484	                            je 0x4009ea0	      1317	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x4009f1c	        0x8b742408	                mov esi, dword [rsp + 8]	      1317	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x4009f20	            0x31d2	                            xor edx, edx	      1317	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x4009f22	          0x4589e0	                           mov r8d, r12d	      1317	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x4009f25	      0xb901000000	                              mov ecx, 1	      1317	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x4009f2a	      0xbf00000000	                              mov edi, 0	      1317	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x4009f2f	      0xe800000000	                          call 0x4009f34	      1317	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x4009f34	            0x85c0	                           test eax, eax	      1317	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x4009f36	     0xf8564ffffff	                           jne 0x4009ea0	      1317	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x4009f3c	            0x31c0	                            xor eax, eax	      1281	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12
0x4009f3e	      0xe966feffff	                           jmp 0x4009da9	      1281	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12
0x4009f43	       0xf1f440000	                   nop dword [rax + rax]	      1281	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12
0x4009f48	        0x8b742408	                mov esi, dword [rsp + 8]	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x4009f4c	            0x31d2	                            xor edx, edx	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x4009f4e	          0x4589e0	                           mov r8d, r12d	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x4009f51	      0xb901000000	                              mov ecx, 1	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x4009f56	      0xbf00000000	                              mov edi, 0	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x4009f5b	      0xe800000000	                          call 0x4009f60	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x4009f60	            0x85c0	                           test eax, eax	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x4009f62	     0xf848ffeffff	                            je 0x4009df7	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x4009f68	    0x488b05000000	            mov rax, qword [0x04009f6f] 	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x4009f6f	      0xe963ffffff	                           jmp 0x4009ed7	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x4009f74	         0xf1f4000	                         nop dword [rax]	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x4009f78	    0x8b3d00000000	            mov edi, dword [0x04009f7e] 	       966	ops.c	FUNCTION_16	IF_1	IF_2
0x4009f7e	            0x85ff	                           test edi, edi	       966	ops.c	FUNCTION_16	IF_1	IF_2
0x4009f80	     0xf8488feffff	                            je 0x4009e0e	       966	ops.c	FUNCTION_16	IF_1	IF_2
0x4009f86	      0xbf00000000	                              mov edi, 0	       969	ops.c	FUNCTION_16	IF_1	CALL_1
0x4009f8b	      0xe800000000	                          call 0x4009f90	       969	ops.c	FUNCTION_16	IF_1	CALL_1
0x4009f90	      0xe97bfeffff	                           jmp 0x4009e10	       969	ops.c	FUNCTION_16	IF_1	CALL_1
0x4009f95	           0xf1f00	                         nop dword [rax]	       969	ops.c	FUNCTION_16	IF_1	CALL_1
0x4009f98	          0x83fd7e	                           cmp ebp, 0x7e	       888	ops.c	FUNCTION_14	IF_1
0x4009f9b	     0xf85fffdffff	                           jne 0x4009da0	       888	ops.c	FUNCTION_14	IF_1
0x4009fa1	    0xc70500000000	           mov dword [0x04009fab], 0x7e 	      1232	ops.c	FUNCTION_23
0x4009fab	      0xe960feffff	                           jmp 0x4009e10	      1232	ops.c	FUNCTION_23
0x4009fb0	          0x83fd3d	                           cmp ebp, 0x3d	      1266	ops.c	FUNCTION_23	ELSE_2	IF_9
0x4009fb3	            0x745c	                            je 0x400a011	      1266	ops.c	FUNCTION_23	ELSE_2	IF_9
0x4009fb5	          0x83fd2e	                           cmp ebp, 0x2e	      1275	ops.c	FUNCTION_23	ELSE_3	IF_11
0x4009fb8	     0xf8552feffff	                           jne 0x4009e10	      1275	ops.c	FUNCTION_23	ELSE_3	IF_11
0x4009fbe	      0xe800000000	                          call 0x4009fc3	      1277	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_17
0x4009fc3	          0x4885c0	                           test rax, rax	      1278	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12
0x4009fc6	          0x4889c5	                            mov rbp, rax	      1277	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_17
0x4009fc9	     0xf84f4000000	                            je 0x400a0c3	      1278	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12
0x4009fcf	          0x4489e1	                           mov ecx, r12d	      1283	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_20
0x4009fd2	          0x4489f2	                           mov edx, r14d	      1283	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_20
0x4009fd5	            0x31f6	                            xor esi, esi	      1283	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_20
0x4009fd7	          0x4889ef	                            mov rdi, rbp	      1283	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_20
0x4009fda	      0xe8d17cffff	                 call sym.put_in_typebuf	      1283	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_20
0x4009fdf	            0x89c3	                            mov ebx, eax	      1283	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_20
0x4009fe1	      0xe989fdffff	                           jmp 0x4009d6f	      1283	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_20
0x4009fe6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1283	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_20
0x4009ff0	      0xbf00000000	                              mov edi, 0	       976	ops.c	FUNCTION_16	ELSE_2	IF_3	CALL_2
0x4009ff5	      0xe800000000	                          call 0x4009ffa	       976	ops.c	FUNCTION_16	ELSE_2	IF_3	CALL_2
0x4009ffa	      0xe911feffff	                           jmp 0x4009e10	       976	ops.c	FUNCTION_16	ELSE_2	IF_3	CALL_2
0x4009fff	              0x90	                                     nop	       976	ops.c	FUNCTION_16	ELSE_2	IF_3	CALL_2
0x400a000	    0xc70500000000	               mov dword [0x0400a00a], 1	      1321	ops.c	FUNCTION_23	ELSE_4
0x400a00a	            0x89d8	                            mov eax, ebx	      1321	ops.c	FUNCTION_23	ELSE_4
0x400a00c	      0xe998fdffff	                           jmp 0x4009da9	      1321	ops.c	FUNCTION_23	ELSE_4
0x400a011	    0x488b3d000000	            mov rdi, qword [0x0400a018] 	       829	ops.c	FUNCTION_12	IF_1
0x400a018	          0x4885ff	                           test rdi, rdi	       829	ops.c	FUNCTION_12	IF_1
0x400a01b	     0xf84d6fdffff	                            je 0x4009df7	       829	ops.c	FUNCTION_12	IF_1
0x400a021	      0xe800000000	                          call 0x400a026	       834	ops.c	FUNCTION_12	CALL_1
0x400a026	          0x4885c0	                           test rax, rax	       835	ops.c	FUNCTION_12	IF_2
0x400a029	     0xf84c8fdffff	                            je 0x4009df7	       835	ops.c	FUNCTION_12	IF_2
0x400a02f	    0x8b1500000000	            mov edx, dword [0x0400a035] 	       840	ops.c	FUNCTION_12	IF_3
0x400a035	          0x4889c5	                            mov rbp, rax	       840	ops.c	FUNCTION_12	IF_3
0x400a038	          0x83fa09	                              cmp edx, 9	       840	ops.c	FUNCTION_12	IF_3
0x400a03b	            0x7e44	                           jle 0x400a081	       840	ops.c	FUNCTION_12	IF_3
0x400a03d	          0x4489e1	                           mov ecx, r12d	      1271	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_15
0x400a040	          0x4489f2	                           mov edx, r14d	      1271	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_15
0x400a043	      0xbe01000000	                              mov esi, 1	      1271	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_15
0x400a048	            0xeb8d	                           jmp 0x4009fd7	      1271	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_15
0x400a04a	    0x660f1f440000	                    nop word [rax + rax]	      1271	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_15
0x400a050	      0xc644241067	            mov byte [rsp + 0x10], 0x67 	      1339	ops.c	FUNCTION_24	IF_1	IF_2
0x400a055	      0xc644241152	            mov byte [rsp + 0x11], 0x52 	      1340	ops.c	FUNCTION_24	IF_1	IF_2
0x400a05a	      0xc644241200	                mov byte [rsp + 0x12], 0	      1341	ops.c	FUNCTION_24	IF_1	IF_2
0x400a05f	      0xe9f5fdffff	                           jmp 0x4009e59	      1341	ops.c	FUNCTION_24	IF_1	IF_2
0x400a064	        0x488d7805	                      lea rdi, [rax + 5]	      1258	ops.c	FUNCTION_23	IF_5	IF_7	CALL_11
0x400a068	          0x4489e1	                           mov ecx, r12d	      1258	ops.c	FUNCTION_23	IF_5	IF_7	CALL_11
0x400a06b	      0xba01000000	                              mov edx, 1	      1258	ops.c	FUNCTION_23	IF_5	IF_7	CALL_11
0x400a070	      0xbe01000000	                              mov esi, 1	      1258	ops.c	FUNCTION_23	IF_5	IF_7	CALL_11
0x400a075	      0xe8367cffff	                 call sym.put_in_typebuf	      1258	ops.c	FUNCTION_23	IF_5	IF_7	CALL_11
0x400a07a	            0x89c3	                            mov ebx, eax	      1258	ops.c	FUNCTION_23	IF_5	IF_7	CALL_11
0x400a07c	      0xe9eefcffff	                           jmp 0x4009d6f	      1258	ops.c	FUNCTION_23	IF_5	IF_7	CALL_11
0x400a081	          0x83c201	                              add edx, 1	       843	ops.c	FUNCTION_12
0x400a084	            0x31f6	                            xor esi, esi	       844	ops.c	FUNCTION_12	CALL_2
0x400a086	          0x4889c7	                            mov rdi, rax	       844	ops.c	FUNCTION_12	CALL_2
0x400a089	    0x891500000000	            mov dword [0x0400a08f], edx 	       843	ops.c	FUNCTION_12
0x400a08f	      0xba01000000	                              mov edx, 1	       844	ops.c	FUNCTION_12	CALL_2
0x400a094	      0xe800000000	                          call 0x400a099	       844	ops.c	FUNCTION_12	CALL_2
0x400a099	          0x4889ef	                            mov rdi, rbp	       846	ops.c	FUNCTION_12	CALL_3
0x400a09c	          0x4889c3	                            mov rbx, rax	       844	ops.c	FUNCTION_12	CALL_2
0x400a09f	    0x832d00000000	               sub dword [0x0400a0a6], 1	       845	ops.c	FUNCTION_12
0x400a0a6	      0xe800000000	                          call 0x400a0ab	       846	ops.c	FUNCTION_12	CALL_3
0x400a0ab	          0x4885db	                           test rbx, rbx	      1269	ops.c	FUNCTION_23	ELSE_2	IF_9	IF_10
0x400a0ae	     0xf8443fdffff	                            je 0x4009df7	      1269	ops.c	FUNCTION_23	ELSE_2	IF_9	IF_10
0x400a0b4	          0x4889dd	                            mov rbp, rbx	      1269	ops.c	FUNCTION_23	ELSE_2	IF_9	IF_10
0x400a0b7	            0xeb84	                           jmp 0x400a03d	      1269	ops.c	FUNCTION_23	ELSE_2	IF_9	IF_10
0x400a0b9	      0xbb01000000	                              mov ebx, 1	      1214	ops.c	FUNCTION_23
0x400a0be	      0xe9acfcffff	                           jmp 0x4009d6f	      1214	ops.c	FUNCTION_23
0x400a0c3	      0xba05000000	                              mov edx, 5	      1280	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12	CALL_19
0x400a0c8	      0xbe00000000	                              mov esi, 0	      1280	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12	CALL_19
0x400a0cd	      0xe916fdffff	                           jmp 0x4009de8	      1280	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12	CALL_19
0x400a0d2	      0xe800000000	                          call 0x400a0d7	      1324	ops.c	FUNCTION_23
clip_convert_selection	SWITCH,0:DO,0:ELSE,3:functions,0:FOR,2:IF,6:WHILE,0:CALL,2	93
0x400c0f0	            0x4157	                                push r15	      6655	ops.c	FUNCTION_77
0x400c0f2	            0x4156	                                push r14	      6655	ops.c	FUNCTION_77
0x400c0f4	      0xb800000000	                              mov eax, 0	      6663	ops.c	FUNCTION_77	IF_1
0x400c0f9	            0x4155	                                push r13	      6655	ops.c	FUNCTION_77
0x400c0fb	            0x4154	                                push r12	      6655	ops.c	FUNCTION_77
0x400c0fd	    0x41bc00000000	                             mov r12d, 0	      6663	ops.c	FUNCTION_77	IF_1
0x400c103	              0x55	                                push rbp	      6655	ops.c	FUNCTION_77
0x400c104	              0x53	                                push rbx	      6655	ops.c	FUNCTION_77
0x400c105	        0x4883ec08	                              sub rsp, 8	      6655	ops.c	FUNCTION_77
0x400c109	    0x4881fa000000	                              cmp rdx, 0	      6663	ops.c	FUNCTION_77	IF_1
0x400c110	    0x48c707000000	                      mov qword [rdi], 0	      6673	ops.c	FUNCTION_77
0x400c117	        0x4c0f44e0	                          cmove r12, rax	      6663	ops.c	FUNCTION_77	IF_1
0x400c11b	    0x48c706000000	                      mov qword [rsi], 0	      6674	ops.c	FUNCTION_77
0x400c122	        0x4d8b3c24	                    mov r15, qword [r12]	      6675	ops.c	FUNCTION_77	IF_2
0x400c126	          0x4d85ff	                           test r15, r15	      6675	ops.c	FUNCTION_77	IF_2
0x400c129	     0xf840b010000	                            je 0x400c23a	      6675	ops.c	FUNCTION_77	IF_2
0x400c12f	    0x49837c240800	                  cmp qword [r12 + 8], 0	      6678	ops.c	FUNCTION_77	FOR_1
0x400c135	          0x4989f5	                            mov r13, rsi	      6678	ops.c	FUNCTION_77	FOR_1
0x400c138	          0x4989fe	                            mov r14, rdi	      6678	ops.c	FUNCTION_77	FOR_1
0x400c13b	     0xf8eef000000	                           jle 0x400c230	      6678	ops.c	FUNCTION_77	FOR_1
0x400c141	      0xbb01000000	                              mov ebx, 1	      6678	ops.c	FUNCTION_77	FOR_1
0x400c146	            0x31ed	                            xor ebp, ebp	      6678	ops.c	FUNCTION_77	FOR_1
0x400c148	     0xf1f84000000	                   nop dword [rax + rax]	      6678	ops.c	FUNCTION_77	FOR_1
0x400c150	      0x498b7cdff8	        mov rdi, qword [r15 + rbx*8 - 8]	      6679	ops.c	FUNCTION_77	CALL_1
0x400c155	      0xe800000000	                          call 0x400c15a	      6679	ops.c	FUNCTION_77	CALL_1
0x400c15a	      0x488d6c0501	                lea rbp, [rbp + rax + 1]	      6679	ops.c	FUNCTION_77	CALL_1
0x400c15f	          0x4889d8	                            mov rax, rbx	      6678	ops.c	FUNCTION_77	FOR_1
0x400c162	        0x4883c301	                              add rbx, 1	      6678	ops.c	FUNCTION_77	FOR_1
0x400c166	        0x49896d00	                    mov qword [r13], rbp	      6679	ops.c	FUNCTION_77	CALL_1
0x400c16a	      0x493b442408	                cmp rax, qword [r12 + 8]	      6678	ops.c	FUNCTION_77	FOR_1
0x400c16f	            0x7cdf	                            jl 0x400c150	      6678	ops.c	FUNCTION_77	FOR_1
0x400c171	    0x41807c241000	                cmp byte [r12 + 0x10], 0	      6684	ops.c	FUNCTION_77	IF_3
0x400c177	     0xf8493000000	                            je 0x400c210	      6684	ops.c	FUNCTION_77	IF_3
0x400c17d	        0x4883c501	                              add rbp, 1	      6684	ops.c	FUNCTION_77	IF_3
0x400c181	      0xbe01000000	                              mov esi, 1	      6687	ops.c	FUNCTION_77	CALL_2
0x400c186	          0x4889ef	                            mov rdi, rbp	      6687	ops.c	FUNCTION_77	CALL_2
0x400c189	      0xe800000000	                          call 0x400c18e	      6687	ops.c	FUNCTION_77	CALL_2
0x400c18e	          0x4885c0	                           test rax, rax	      6688	ops.c	FUNCTION_77	IF_4
0x400c191	          0x498906	                    mov qword [r14], rax	      6687	ops.c	FUNCTION_77	CALL_2
0x400c194	     0xf84a0000000	                            je 0x400c23a	      6688	ops.c	FUNCTION_77	IF_4
0x400c19a	        0x418b5500	                    mov edx, dword [r13]	      6691	ops.c	FUNCTION_77	FOR_2
0x400c19e	            0x31f6	                            xor esi, esi	      6691	ops.c	FUNCTION_77	FOR_2
0x400c1a0	            0x31ff	                            xor edi, edi	      6691	ops.c	FUNCTION_77	FOR_2
0x400c1a2	          0x4531c9	                            xor r9d, r9d	      6691	ops.c	FUNCTION_77	FOR_2
0x400c1a5	            0x85d2	                           test edx, edx	      6691	ops.c	FUNCTION_77	FOR_2
0x400c1a7	            0x7f1d	                            jg 0x400c1c6	      6691	ops.c	FUNCTION_77	FOR_2
0x400c1a9	            0xeb48	                           jmp 0x400c1f3	      6691	ops.c	FUNCTION_77	FOR_2
0x400c1ab	       0xf1f440000	                   nop dword [rax + rax]	      6691	ops.c	FUNCTION_77	FOR_2
0x400c1b0	          0xc6000a	                     mov byte [rax], 0xa	      6703	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0x400c1b3	        0x4183c101	                              add r9d, 1	      6705	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0x400c1b7	            0x31f6	                            xor esi, esi	      6705	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0x400c1b9	          0x83c701	                              add edi, 1	      6691	ops.c	FUNCTION_77	FOR_2
0x400c1bc	        0x4883c001	                              add rax, 1	      6691	ops.c	FUNCTION_77	FOR_2
0x400c1c0	        0x413b7d00	                    cmp edi, dword [r13]	      6691	ops.c	FUNCTION_77	FOR_2
0x400c1c4	            0x7d2d	                           jge 0x400c1f3	      6691	ops.c	FUNCTION_77	FOR_2
0x400c1c6	        0x4d8b0424	                     mov r8, qword [r12]	      6693	ops.c	FUNCTION_77	FOR_2	IF_5
0x400c1ca	          0x4963c9	                         movsxd rcx, r9d	      6693	ops.c	FUNCTION_77	FOR_2	IF_5
0x400c1cd	          0x4863d6	                         movsxd rdx, esi	      6693	ops.c	FUNCTION_77	FOR_2	IF_5
0x400c1d0	        0x498b0cc8	             mov rcx, qword [r8 + rcx*8]	      6693	ops.c	FUNCTION_77	FOR_2	IF_5
0x400c1d4	         0xfb61411	             movzx edx, byte [rcx + rdx]	      6693	ops.c	FUNCTION_77	FOR_2	IF_5
0x400c1d8	          0x80fa0a	                             cmp dl, 0xa	      6693	ops.c	FUNCTION_77	FOR_2	IF_5
0x400c1db	            0x744b	                            je 0x400c228	      6693	ops.c	FUNCTION_77	FOR_2	IF_5
0x400c1dd	            0x84d2	                             test dl, dl	      6695	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0x400c1df	            0x74cf	                            je 0x400c1b0	      6695	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0x400c1e1	            0x8810	                      mov byte [rax], dl	      6709	ops.c	FUNCTION_77	FOR_2	ELSE_3
0x400c1e3	          0x83c601	                              add esi, 1	      6709	ops.c	FUNCTION_77	FOR_2	ELSE_3
0x400c1e6	          0x83c701	                              add edi, 1	      6691	ops.c	FUNCTION_77	FOR_2
0x400c1e9	        0x4883c001	                              add rax, 1	      6691	ops.c	FUNCTION_77	FOR_2
0x400c1ed	        0x413b7d00	                    cmp edi, dword [r13]	      6691	ops.c	FUNCTION_77	FOR_2
0x400c1f1	            0x7cd3	                            jl 0x400c1c6	      6691	ops.c	FUNCTION_77	FOR_2
0x400c1f3	    0x410fb6442410	           movzx eax, byte [r12 + 0x10] 	      6711	ops.c	FUNCTION_77	ELSE_3
0x400c1f9	        0x4883c408	                              add rsp, 8	      6712	ops.c	FUNCTION_77	ELSE_3
0x400c1fd	              0x5b	                                 pop rbx	      6712	ops.c	FUNCTION_77	ELSE_3
0x400c1fe	              0x5d	                                 pop rbp	      6712	ops.c	FUNCTION_77	ELSE_3
0x400c1ff	            0x415c	                                 pop r12	      6712	ops.c	FUNCTION_77	ELSE_3
0x400c201	            0x415d	                                 pop r13	      6712	ops.c	FUNCTION_77	ELSE_3
0x400c203	            0x415e	                                 pop r14	      6712	ops.c	FUNCTION_77	ELSE_3
0x400c205	            0x415f	                                 pop r15	      6712	ops.c	FUNCTION_77	ELSE_3
0x400c207	              0xc3	                                     ret	      6712	ops.c	FUNCTION_77	ELSE_3
0x400c208	     0xf1f84000000	                   nop dword [rax + rax]	      6712	ops.c	FUNCTION_77	ELSE_3
0x400c210	          0x4885ed	                           test rbp, rbp	      6684	ops.c	FUNCTION_77	IF_3
0x400c213	            0x741b	                            je 0x400c230	      6684	ops.c	FUNCTION_77	IF_3
0x400c215	        0x488d45ff	                      lea rax, [rbp - 1]	      6685	ops.c	FUNCTION_77	IF_3
0x400c219	        0x49894500	                    mov qword [r13], rax	      6685	ops.c	FUNCTION_77	IF_3
0x400c21d	      0xe95fffffff	                           jmp 0x400c181	      6685	ops.c	FUNCTION_77	IF_3
0x400c222	    0x660f1f440000	                    nop word [rax + rax]	      6685	ops.c	FUNCTION_77	IF_3
0x400c228	          0xc60000	                       mov byte [rax], 0	      6694	ops.c	FUNCTION_77	FOR_2	IF_5
0x400c22b	          0x83c601	                              add esi, 1	      6694	ops.c	FUNCTION_77	FOR_2	IF_5
0x400c22e	            0xeb89	                           jmp 0x400c1b9	      6694	ops.c	FUNCTION_77	FOR_2	IF_5
0x400c230	      0xbd01000000	                              mov ebp, 1	      6694	ops.c	FUNCTION_77	FOR_2	IF_5
0x400c235	      0xe947ffffff	                           jmp 0x400c181	      6694	ops.c	FUNCTION_77	FOR_2	IF_5
0x400c23a	      0xb8ffffffff	                     mov eax, 0xffffffff	      6676	ops.c	FUNCTION_77	IF_2
0x400c23f	            0xebb8	                           jmp 0x400c1f9	      6676	ops.c	FUNCTION_77	IF_2
dnd_yank_drag_data	SWITCH,0:DO,0:ELSE,0:functions,0:FOR,0:IF,0:WHILE,0:CALL,2	49
0x400c400	    0x488b05000000	            mov rax, qword [0x0400c407] 	      3012	ops.c	FUNCTION_43	IF_1
0x400c407	            0x4156	                                push r14	      6742	ops.c	FUNCTION_79
0x400c409	          0x4989f6	                            mov r14, rsi	      6742	ops.c	FUNCTION_79
0x400c40c	            0x4155	                                push r13	      6742	ops.c	FUNCTION_79
0x400c40e	          0x4989fd	                            mov r13, rdi	      6742	ops.c	FUNCTION_79
0x400c411	            0x4154	                                push r12	      6742	ops.c	FUNCTION_79
0x400c413	    0x4c8b25000000	            mov r12, qword [0x0400c41a] 	      6745	ops.c	FUNCTION_79
0x400c41a	              0x55	                                push rbp	      6742	ops.c	FUNCTION_79
0x400c41b	          0x4885c0	                           test rax, rax	      3012	ops.c	FUNCTION_43	IF_1
0x400c41e	              0x53	                                push rbx	      6742	ops.c	FUNCTION_79
0x400c41f	    0x48c705000000	               mov qword [0x0400c42a], 0	      6746	ops.c	FUNCTION_79
0x400c42a	    0x488b1d000000	            mov rbx, qword [0x0400c431] 	      3045	ops.c	FUNCTION_44	CALL_1
0x400c431	            0x747d	                            je 0x400c4b0	      3012	ops.c	FUNCTION_43	IF_1
0x400c433	        0x4883eb01	                              sub rbx, 1	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x400c437	            0x783f	                            js 0x400c478	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x400c439	    0x488d2cdd0000	                        lea rbp, [rbx*8]	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x400c441	            0xeb0f	                           jmp 0x400c452	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x400c443	       0xf1f440000	                   nop dword [rax + rax]	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x400c448	    0x488b05000000	            mov rax, qword [0x0400c44f] 	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x400c44f	          0x488b00	                    mov rax, qword [rax]	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x400c452	        0x488b3c28	              mov rdi, qword [rax + rbp]	      3032	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x400c456	        0x4883eb01	                              sub rbx, 1	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x400c45a	        0x4883ed08	                              sub rbp, 8	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x400c45e	      0xe800000000	                          call 0x400c463	      3032	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x400c463	        0x4883fbff	             cmp rbx, 0xffffffffffffffff	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x400c467	            0x75df	                           jne 0x400c448	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x400c469	    0x488b3d000000	            mov rdi, qword [0x0400c470] 	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x400c470	          0x488b07	                    mov rax, qword [rdi]	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x400c473	          0x4885c0	                           test rax, rax	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x400c476	            0x7416	                            je 0x400c48e	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x400c478	          0x4889c7	                            mov rdi, rax	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x400c47b	      0xe800000000	                          call 0x400c480	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x400c480	    0x488b3d000000	            mov rdi, qword [0x0400c487] 	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x400c487	    0x48c707000000	                      mov qword [rdi], 0	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x400c48e	          0x4c89f1	                            mov rcx, r14	      6748	ops.c	FUNCTION_79	CALL_2
0x400c491	          0x4c89ea	                            mov rdx, r13	      6748	ops.c	FUNCTION_79	CALL_2
0x400c494	          0x4531c0	                            xor r8d, r8d	      6748	ops.c	FUNCTION_79	CALL_2
0x400c497	            0x31f6	                            xor esi, esi	      6748	ops.c	FUNCTION_79	CALL_2
0x400c499	      0xe84250ffff	        call sym.str_to_reg.constprop.13	      6748	ops.c	FUNCTION_79	CALL_2
0x400c49e	              0x5b	                                 pop rbx	      6750	ops.c	FUNCTION_79
0x400c49f	    0x4c8925000000	            mov qword [0x0400c4a6], r12 	      6749	ops.c	FUNCTION_79
0x400c4a6	              0x5d	                                 pop rbp	      6750	ops.c	FUNCTION_79
0x400c4a7	            0x415c	                                 pop r12	      6750	ops.c	FUNCTION_79
0x400c4a9	            0x415d	                                 pop r13	      6750	ops.c	FUNCTION_79
0x400c4ab	            0x415e	                                 pop r14	      6750	ops.c	FUNCTION_79
0x400c4ad	              0xc3	                                     ret	      6750	ops.c	FUNCTION_79
0x400c4ae	            0x6690	                                     nop	      6750	ops.c	FUNCTION_79
0x400c4b0	      0xbf00000000	                              mov edi, 0	      3012	ops.c	FUNCTION_43	IF_1
0x400c4b5	            0xebd7	                           jmp 0x400c48e	      3012	ops.c	FUNCTION_43	IF_1
op_yank	SWITCH,1:DO,0:ELSE,9:functions,0:FOR,2:IF,42:WHILE,1:CALL,53	706
0x400c950	            0x4157	                                push r15	      3058	ops.c	FUNCTION_45
0x400c952	            0x4156	                                push r14	      3058	ops.c	FUNCTION_45
0x400c954	            0x4155	                                push r13	      3058	ops.c	FUNCTION_45
0x400c956	            0x4154	                                push r12	      3058	ops.c	FUNCTION_45
0x400c958	          0x4989fc	                            mov r12, rdi	      3058	ops.c	FUNCTION_45
0x400c95b	              0x55	                                push rbp	      3058	ops.c	FUNCTION_45
0x400c95c	              0x53	                                push rbx	      3058	ops.c	FUNCTION_45
0x400c95d	    0x4881ec280100	                          sub rsp, 0x128	      3058	ops.c	FUNCTION_45
0x400c964	        0x4c8b7730	            mov r14, qword [rdi + 0x30] 	      3067	ops.c	FUNCTION_45
0x400c968	    0x64488b042528	                mov rax, qword fs:[0x28]	      3058	ops.c	FUNCTION_45
0x400c971	    0x488984241801	            mov qword [rsp + 0x118], rax	      3058	ops.c	FUNCTION_45
0x400c979	            0x31c0	                            xor eax, eax	      3058	ops.c	FUNCTION_45
0x400c97b	          0x8b4708	                mov eax, dword [rdi + 8]	      3065	ops.c	FUNCTION_45
0x400c97e	        0x89542434	             mov dword [rsp + 0x34], edx	      3058	ops.c	FUNCTION_45
0x400c982	        0x8974241c	             mov dword [rsp + 0x1c], esi	      3058	ops.c	FUNCTION_45
0x400c986	    0x8b1500000000	            mov edx, dword [0x0400c98c] 	      3085	ops.c	FUNCTION_45	IF_3
0x400c98c	        0x89442418	             mov dword [rsp + 0x18], eax	      3065	ops.c	FUNCTION_45
0x400c990	        0x488b4750	            mov rax, qword [rdi + 0x50] 	      3066	ops.c	FUNCTION_45
0x400c994	          0x8b7f04	                mov edi, dword [rdi + 4]	      3076	ops.c	FUNCTION_45	IF_1	CALL_1
0x400c997	      0x4889442410	             mov qword [rsp + 0x10], rax	      3066	ops.c	FUNCTION_45
0x400c99c	            0x85ff	                           test edi, edi	      3076	ops.c	FUNCTION_45	IF_1	CALL_1
0x400c99e	     0xf852c070000	                           jne 0x400d0d0	      3076	ops.c	FUNCTION_45	IF_1	CALL_1
0x400c9a4	      0x448b54241c	           mov r10d, dword [rsp + 0x1c] 	      3091	ops.c	FUNCTION_45	IF_5
0x400c9a9	          0x4585d2	                         test r10d, r10d	      3091	ops.c	FUNCTION_45	IF_5
0x400c9ac	     0xf8416080000	                            je 0x400d1c8	      3091	ops.c	FUNCTION_45	IF_5
0x400c9b2	    0x4c8b3d000000	            mov r15, qword [0x0400c9b9] 	      3091	ops.c	FUNCTION_45	IF_5
0x400c9b9	    0x8b0500000000	            mov eax, dword [0x0400c9bf] 	      3091	ops.c	FUNCTION_45	IF_5
0x400c9bf	            0x85c0	                           test eax, eax	      3096	ops.c	FUNCTION_45	IF_6
0x400c9c1	     0xf8431040000	                            je 0x400cdf8	      3096	ops.c	FUNCTION_45	IF_6
0x400c9c7	        0x49833f00	                      cmp qword [r15], 0	      3096	ops.c	FUNCTION_45	IF_6
0x400c9cb	     0xf8427040000	                            je 0x400cdf8	      3096	ops.c	FUNCTION_45	IF_6
0x400c9d1	      0x488d5c2450	                   lea rbx, [rsp + 0x50]	      3097	ops.c	FUNCTION_45	IF_6
0x400c9d6	    0x48891d000000	            mov qword [0x0400c9dd], rbx 	      3097	ops.c	FUNCTION_45	IF_6
0x400c9dd	      0x458b442408	                mov r8d, dword [r12 + 8]	      3105	ops.c	FUNCTION_45	IF_7
0x400c9e2	          0x4585c0	                           test r8d, r8d	      3105	ops.c	FUNCTION_45	IF_7
0x400c9e5	            0x750d	                           jne 0x400c9f4	      3105	ops.c	FUNCTION_45	IF_7
0x400c9e7	      0x418b7c2428	            mov edi, dword [r12 + 0x28] 	      3106	ops.c	FUNCTION_45	IF_7
0x400c9ec	            0x85ff	                           test edi, edi	      3106	ops.c	FUNCTION_45	IF_7
0x400c9ee	     0xf8474070000	                            je 0x400d168	      3106	ops.c	FUNCTION_45	IF_7
0x400c9f4	       0xfb6442418	           movzx eax, byte [rsp + 0x18] 	      3106	ops.c	FUNCTION_45	IF_7
0x400c9f9	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3118	ops.c	FUNCTION_45
0x400c9fe	          0x884310	               mov byte [rbx + 0x10], al	      3119	ops.c	FUNCTION_45
0x400ca01	    0xc74314000000	               mov dword [rbx + 0x14], 0	      3120	ops.c	FUNCTION_45
0x400ca08	    0x488d3cf50000	                        lea rdi, [rsi*8]	      3121	ops.c	FUNCTION_45	CALL_5
0x400ca10	        0x48897308	                mov qword [rbx + 8], rsi	      3118	ops.c	FUNCTION_45
0x400ca14	      0xbe01000000	                              mov esi, 1	      3121	ops.c	FUNCTION_45	CALL_5
0x400ca19	      0xe800000000	                          call 0x400ca1e	      3121	ops.c	FUNCTION_45	CALL_5
0x400ca1e	          0x488903	                    mov qword [rbx], rax	      3121	ops.c	FUNCTION_45	CALL_5
0x400ca21	    0x488b1d000000	            mov rbx, qword [0x0400ca28] 	      3123	ops.c	FUNCTION_45	IF_8
0x400ca28	        0x48833b00	                      cmp qword [rbx], 0	      3123	ops.c	FUNCTION_45	IF_8
0x400ca2c	     0xf8495040000	                            je 0x400cec7	      3123	ops.c	FUNCTION_45	IF_8
0x400ca32	      0xe800000000	                          call 0x400ca37	      3129	ops.c	FUNCTION_45	CALL_6
0x400ca37	        0x48894318	             mov qword [rbx + 0x18], rax	      3129	ops.c	FUNCTION_45	CALL_6
0x400ca3b	      0x418b442460	            mov eax, dword [r12 + 0x60] 	      3135	ops.c	FUNCTION_45	IF_9
0x400ca40	      0x498b5c2420	            mov rbx, qword [r12 + 0x20] 	      3133	ops.c	FUNCTION_45
0x400ca45	    0x4c8b2d000000	            mov r13, qword [0x0400ca4c] 	      3138	ops.c	FUNCTION_45	IF_9
0x400ca4c	            0x85c0	                           test eax, eax	      3135	ops.c	FUNCTION_45	IF_9
0x400ca4e	            0x7430	                            je 0x400ca80	      3135	ops.c	FUNCTION_45	IF_9
0x400ca50	    0x488b15000000	            mov rdx, qword [0x0400ca57] 	      3141	ops.c	FUNCTION_45	IF_9	IF_10
0x400ca57	      0x41c6451002	                mov byte [r13 + 0x10], 2	      3138	ops.c	FUNCTION_45	IF_9
0x400ca5c	      0x418b442468	            mov eax, dword [r12 + 0x68] 	      3139	ops.c	FUNCTION_45	IF_9
0x400ca61	      0x412b442464	             sub eax, dword [r12 + 0x64]	      3139	ops.c	FUNCTION_45	IF_9
0x400ca66	    0x817a48ffffff	     cmp dword [rdx + 0x48], 0x7fffffff 	      3141	ops.c	FUNCTION_45	IF_9	IF_10
0x400ca6d	        0x41894514	             mov dword [r13 + 0x14], eax	      3139	ops.c	FUNCTION_45	IF_9
0x400ca71	            0x750d	                           jne 0x400ca80	      3141	ops.c	FUNCTION_45	IF_9	IF_10
0x400ca73	            0x85c0	                           test eax, eax	      3141	ops.c	FUNCTION_45	IF_9	IF_10
0x400ca75	            0x7e09	                           jle 0x400ca80	      3141	ops.c	FUNCTION_45	IF_9	IF_10
0x400ca77	          0x83e801	                              sub eax, 1	      3142	ops.c	FUNCTION_45	IF_9	IF_10
0x400ca7a	        0x41894514	             mov dword [r13 + 0x14], eax	      3142	ops.c	FUNCTION_45	IF_9	IF_10
0x400ca7e	            0x6690	                                     nop	      3142	ops.c	FUNCTION_45	IF_9	IF_10
0x400ca80	            0x31ed	                            xor ebp, ebp	      3145	ops.c	FUNCTION_45	FOR_1
0x400ca82	          0x4939de	                            cmp r14, rbx	      3145	ops.c	FUNCTION_45	FOR_1
0x400ca85	     0xf8c17010000	                            jl 0x400cba2	      3145	ops.c	FUNCTION_45	FOR_1
0x400ca8b	      0x498d442430	                   lea rax, [r12 + 0x30]	      3197	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x400ca90	      0x4c897c2408	                mov qword [rsp + 8], r15	      3150	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_7
0x400ca95	      0x4889442438	             mov qword [rsp + 0x38], rax	      3197	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x400ca9a	      0xe9b8000000	                           jmp 0x400cb57	      3197	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x400ca9f	              0x90	                                     nop	      3197	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x400caa0	     0xf826a030000	                            jb 0x400ce10	      3147	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x400caa6	            0x3c02	                               cmp al, 2	      3147	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x400caa8	     0xf859c000000	                           jne 0x400cb4a	      3147	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x400caae	      0x488d742470	                   lea rsi, [rsp + 0x70]	      3150	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_7
0x400cab3	            0x31c9	                            xor ecx, ecx	      3150	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_7
0x400cab5	          0x4889da	                            mov rdx, rbx	      3150	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_7
0x400cab8	          0x4c89e7	                            mov rdi, r12	      3150	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_7
0x400cabb	      0xe88035ffff	                     call sym.block_prep	      3150	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_7
0x400cac0	        0x8b7c2474	            mov edi, dword [rsp + 0x74] 	      3406	ops.c	FUNCTION_46	IF_1	CALL_1
0x400cac4	         0x37c2470	             add edi, dword [rsp + 0x70]	      3406	ops.c	FUNCTION_46	IF_1	CALL_1
0x400cac8	         0x37c2478	             add edi, dword [rsp + 0x78]	      3406	ops.c	FUNCTION_46	IF_1	CALL_1
0x400cacc	          0x83c701	                              add edi, 1	      3406	ops.c	FUNCTION_46	IF_1	CALL_1
0x400cacf	      0xe800000000	                          call 0x400cad4	      3406	ops.c	FUNCTION_46	IF_1	CALL_1
0x400cad4	          0x4885c0	                           test rax, rax	      3406	ops.c	FUNCTION_46	IF_1	CALL_1
0x400cad7	          0x4889c1	                            mov rcx, rax	      3406	ops.c	FUNCTION_46	IF_1	CALL_1
0x400cada	     0xf84d9030000	                            je 0x400ceb9	      3406	ops.c	FUNCTION_46	IF_1	CALL_1
0x400cae0	    0x4c8b2d000000	            mov r13, qword [0x0400cae7] 	      3409	ops.c	FUNCTION_46
0x400cae7	      0x4863542470	         movsxd rdx, dword [rsp + 0x70] 	        90	string3.h	FUNCTION_95	CALL_6
0x400caec	          0x4889cf	                            mov rdi, rcx	        90	string3.h	FUNCTION_95	CALL_6
0x400caef	      0xbe20000000	                           mov esi, 0x20	        90	string3.h	FUNCTION_95	CALL_6
0x400caf4	        0x498b4500	                    mov rax, qword [r13]	      3409	ops.c	FUNCTION_46
0x400caf8	        0x48890ce8	            mov qword [rax + rbp*8], rcx	      3409	ops.c	FUNCTION_46
0x400cafc	      0xe800000000	                          call 0x400cb01	        90	string3.h	FUNCTION_95	CALL_6
0x400cb01	          0x4889c1	                            mov rcx, rax	        90	string3.h	FUNCTION_95	CALL_6
0x400cb04	      0x4863442470	         movsxd rax, dword [rsp + 0x70] 	      3411	ops.c	FUNCTION_46
0x400cb09	      0x4863542478	         movsxd rdx, dword [rsp + 0x78] 	        59	string3.h	FUNCTION_93	CALL_3
0x400cb0e	    0x488bb4248000	            mov rsi, qword [rsp + 0x80] 	        59	string3.h	FUNCTION_93	CALL_3
0x400cb16	          0x4801c1	                            add rcx, rax	      3411	ops.c	FUNCTION_46
0x400cb19	          0x4889cf	                            mov rdi, rcx	        59	string3.h	FUNCTION_93	CALL_3
0x400cb1c	      0xe800000000	                          call 0x400cb21	        59	string3.h	FUNCTION_93	CALL_3
0x400cb21	          0x4889c1	                            mov rcx, rax	        59	string3.h	FUNCTION_93	CALL_3
0x400cb24	      0x4863442478	         movsxd rax, dword [rsp + 0x78] 	      3413	ops.c	FUNCTION_46
0x400cb29	      0x4863542474	         movsxd rdx, dword [rsp + 0x74] 	        90	string3.h	FUNCTION_95	CALL_6
0x400cb2e	      0xbe20000000	                           mov esi, 0x20	        90	string3.h	FUNCTION_95	CALL_6
0x400cb33	          0x4801c1	                            add rcx, rax	      3413	ops.c	FUNCTION_46
0x400cb36	          0x4889cf	                            mov rdi, rcx	        90	string3.h	FUNCTION_95	CALL_6
0x400cb39	      0xe800000000	                          call 0x400cb3e	        90	string3.h	FUNCTION_95	CALL_6
0x400cb3e	          0x4889c1	                            mov rcx, rax	        90	string3.h	FUNCTION_95	CALL_6
0x400cb41	      0x4863442474	         movsxd rax, dword [rsp + 0x74] 	      3416	ops.c	FUNCTION_46
0x400cb46	        0xc6040100	                 mov byte [rcx + rax], 0	      3416	ops.c	FUNCTION_46
0x400cb4a	        0x4883c301	                              add rbx, 1	      3145	ops.c	FUNCTION_45	FOR_1
0x400cb4e	        0x4883c501	                              add rbp, 1	      3145	ops.c	FUNCTION_45	FOR_1
0x400cb52	          0x4939de	                            cmp r14, rbx	      3145	ops.c	FUNCTION_45	FOR_1
0x400cb55	            0x7c46	                            jl 0x400cb9d	      3145	ops.c	FUNCTION_45	FOR_1
0x400cb57	      0x410fb64510	           movzx eax, byte [r13 + 0x10] 	      3147	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x400cb5c	            0x3c01	                               cmp al, 1	      3147	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x400cb5e	     0xf853cffffff	                           jne 0x400caa0	      3147	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x400cb64	        0x498b4500	                    mov rax, qword [r13]	      3156	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12
0x400cb68	          0x4889df	                            mov rdi, rbx	      3157	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12	CALL_10
0x400cb6b	        0x4c8d2ce8	                  lea r13, [rax + rbp*8]	      3156	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12
0x400cb6f	      0xe800000000	                          call 0x400cb74	      3157	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12	CALL_10
0x400cb74	          0x4889c7	                            mov rdi, rax	      3157	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12	CALL_10
0x400cb77	      0xe800000000	                          call 0x400cb7c	      3157	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12	CALL_10
0x400cb7c	          0x4885c0	                           test rax, rax	      3156	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12
0x400cb7f	        0x49894500	                    mov qword [r13], rax	      3156	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12
0x400cb83	     0xf8430030000	                            je 0x400ceb9	      3156	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12
0x400cb89	        0x4883c301	                              add rbx, 1	      3145	ops.c	FUNCTION_45	FOR_1
0x400cb8d	        0x4883c501	                              add rbp, 1	      3145	ops.c	FUNCTION_45	FOR_1
0x400cb91	    0x4c8b2d000000	            mov r13, qword [0x0400cb98] 	      3145	ops.c	FUNCTION_45	FOR_1
0x400cb98	          0x4939de	                            cmp r14, rbx	      3145	ops.c	FUNCTION_45	FOR_1
0x400cb9b	            0x7dba	                           jge 0x400cb57	      3145	ops.c	FUNCTION_45	FOR_1
0x400cb9d	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      3145	ops.c	FUNCTION_45	FOR_1
0x400cba2	          0x4d39ef	                            cmp r15, r13	      3247	ops.c	FUNCTION_45	IF_23
0x400cba5	     0xf84df000000	                            je 0x400cc8a	      3247	ops.c	FUNCTION_45	IF_23
0x400cbab	        0x498b7d08	                mov rdi, qword [r13 + 8]	      3249	ops.c	FUNCTION_45	IF_23	CALL_16
0x400cbaf	        0x49037f08	                add rdi, qword [r15 + 8]	      3249	ops.c	FUNCTION_45	IF_23	CALL_16
0x400cbb3	      0xbe01000000	                              mov esi, 1	      3249	ops.c	FUNCTION_45	IF_23	CALL_16
0x400cbb8	        0x48c1e703	                              shl rdi, 3	      3249	ops.c	FUNCTION_45	IF_23	CALL_16
0x400cbbc	      0xe800000000	                          call 0x400cbc1	      3249	ops.c	FUNCTION_45	IF_23	CALL_16
0x400cbc1	          0x4885c0	                           test rax, rax	      3251	ops.c	FUNCTION_45	IF_23	IF_24
0x400cbc4	          0x4989c5	                            mov r13, rax	      3249	ops.c	FUNCTION_45	IF_23	CALL_16
0x400cbc7	     0xf84f1020000	                            je 0x400cebe	      3251	ops.c	FUNCTION_45	IF_23	IF_24
0x400cbcd	        0x498b5f08	                mov rbx, qword [r15 + 8]	      3253	ops.c	FUNCTION_45	IF_23	FOR_2
0x400cbd1	          0x4885db	                           test rbx, rbx	      3253	ops.c	FUNCTION_45	IF_23	FOR_2
0x400cbd4	     0xf8ebe080000	                           jle 0x400d498	      3253	ops.c	FUNCTION_45	IF_23	FOR_2
0x400cbda	    0x488d04dd0000	                        lea rax, [rbx*8]	      3253	ops.c	FUNCTION_45	IF_23	FOR_2
0x400cbe2	            0x31d2	                            xor edx, edx	      3253	ops.c	FUNCTION_45	IF_23	FOR_2
0x400cbe4	         0xf1f4000	                         nop dword [rax]	      3253	ops.c	FUNCTION_45	IF_23	FOR_2
0x400cbe8	          0x498b0f	                    mov rcx, qword [r15]	      3254	ops.c	FUNCTION_45	IF_23	FOR_2
0x400cbeb	        0x488b0c11	              mov rcx, qword [rcx + rdx]	      3254	ops.c	FUNCTION_45	IF_23	FOR_2
0x400cbef	      0x49894c1500	              mov qword [r13 + rdx], rcx	      3254	ops.c	FUNCTION_45	IF_23	FOR_2
0x400cbf4	        0x4883c208	                              add rdx, 8	      3254	ops.c	FUNCTION_45	IF_23	FOR_2
0x400cbf8	          0x4839d0	                            cmp rax, rdx	      3253	ops.c	FUNCTION_45	IF_23	FOR_2
0x400cbfb	            0x75eb	                           jne 0x400cbe8	      3253	ops.c	FUNCTION_45	IF_23	FOR_2
0x400cbfd	          0x498b3f	                    mov rdi, qword [r15]	      3255	ops.c	FUNCTION_45	IF_23	CALL_17
0x400cc00	      0xe800000000	                          call 0x400cc05	      3255	ops.c	FUNCTION_45	IF_23	CALL_17
0x400cc05	          0x4d892f	                    mov qword [r15], r13	      3256	ops.c	FUNCTION_45	IF_23
0x400cc08	      0xe800000000	                          call 0x400cc0d	      3258	ops.c	FUNCTION_45	IF_23	CALL_18
0x400cc0d	      0x837c241801	               cmp dword [rsp + 0x18], 1	      3261	ops.c	FUNCTION_45	IF_23	IF_25
0x400cc12	        0x49894718	             mov qword [r15 + 0x18], rax	      3258	ops.c	FUNCTION_45	IF_23	CALL_18
0x400cc16	     0xf8435080000	                            je 0x400d451	      3261	ops.c	FUNCTION_45	IF_23	IF_25
0x400cc1c	      0x41807f1000	                cmp byte [r15 + 0x10], 0	      3266	ops.c	FUNCTION_45	IF_23	IF_26	CALL_19
0x400cc21	     0xf8486060000	                            je 0x400d2ad	      3266	ops.c	FUNCTION_45	IF_23	IF_26	CALL_19
0x400cc27	            0x31d2	                            xor edx, edx	      3283	ops.c	FUNCTION_45	IF_23	ELSE_5
0x400cc29	    0x488b3d000000	            mov rdi, qword [0x0400cc30] 	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400cc30	        0x4c8b5708	                mov r10, qword [rdi + 8]	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400cc34	          0x4c39d2	                            cmp rdx, r10	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400cc37	            0x7d3e	                           jge 0x400cc77	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400cc39	          0x4989d0	                             mov r8, rdx	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400cc3c	    0x488d04dd0000	                        lea rax, [rbx*8]	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400cc44	          0x4989d1	                             mov r9, rdx	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400cc47	          0x4929d8	                             sub r8, rbx	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400cc4a	        0x49c1e003	                               shl r8, 3	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400cc4e	            0x6690	                                     nop	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400cc50	          0x4889c1	                            mov rcx, rax	      3285	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400cc53	          0x48030f	                    add rcx, qword [rdi]	      3285	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400cc56	        0x4883c201	                              add rdx, 1	      3285	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400cc5a	        0x4a8b3401	               mov rsi, qword [rcx + r8]	      3285	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400cc5e	          0x498b0f	                    mov rcx, qword [r15]	      3285	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400cc61	        0x48893401	              mov qword [rcx + rax], rsi	      3285	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400cc65	        0x4883c008	                              add rax, 8	      3285	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400cc69	          0x4c39d2	                            cmp rdx, r10	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400cc6c	            0x75e2	                           jne 0x400cc50	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400cc6e	          0x4801da	                            add rdx, rbx	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400cc71	          0x4889d3	                            mov rbx, rdx	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400cc74	          0x4c29cb	                             sub rbx, r9	      3284	ops.c	FUNCTION_45	IF_23	WHILE_1
0x400cc77	          0x488b3f	                    mov rdi, qword [rdi]	      3287	ops.c	FUNCTION_45	IF_23	CALL_27
0x400cc7a	        0x49895f08	                mov qword [r15 + 8], rbx	      3286	ops.c	FUNCTION_45	IF_23
0x400cc7e	      0xe800000000	                          call 0x400cc83	      3287	ops.c	FUNCTION_45	IF_23	CALL_27
0x400cc83	    0x4c893d000000	            mov qword [0x0400cc8a], r15 	      3288	ops.c	FUNCTION_45	IF_23
0x400cc8a	    0x488b05000000	            mov rax, qword [0x0400cc91] 	      3290	ops.c	FUNCTION_45	IF_28
0x400cc91	    0x8b803c020000	           mov eax, dword [rax + 0x23c] 	      3290	ops.c	FUNCTION_45	IF_28
0x400cc97	            0x85c0	                           test eax, eax	      3290	ops.c	FUNCTION_45	IF_28
0x400cc99	     0xf856f070000	                           jne 0x400d40e	      3290	ops.c	FUNCTION_45	IF_28
0x400cc9f	        0x8b442434	            mov eax, dword [rsp + 0x34] 	      3292	ops.c	FUNCTION_45	IF_29
0x400cca3	            0x85c0	                           test eax, eax	      3292	ops.c	FUNCTION_45	IF_29
0x400cca5	     0xf84e5020000	                            je 0x400cf90	      3292	ops.c	FUNCTION_45	IF_29
0x400ccab	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      3294	ops.c	FUNCTION_45	IF_29	IF_30
0x400ccaf	            0x85c0	                           test eax, eax	      3294	ops.c	FUNCTION_45	IF_29	IF_30
0x400ccb1	     0xf85e1060000	                           jne 0x400d398	      3294	ops.c	FUNCTION_45	IF_29	IF_30
0x400ccb7	      0x458b742460	           mov r14d, dword [r12 + 0x60] 	      3296	ops.c	FUNCTION_45	IF_29	IF_30
0x400ccbc	          0x4585f6	                         test r14d, r14d	      3296	ops.c	FUNCTION_45	IF_29	IF_30
0x400ccbf	            0x7517	                           jne 0x400ccd8	      3296	ops.c	FUNCTION_45	IF_29	IF_30
0x400ccc1	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3297	ops.c	FUNCTION_45	IF_29	IF_30
0x400ccc6	      0xb800000000	                              mov eax, 0	      3297	ops.c	FUNCTION_45	IF_29	IF_30
0x400cccb	        0x4883fe01	                              cmp rsi, 1	      3297	ops.c	FUNCTION_45	IF_29	IF_30
0x400cccf	        0x480f45c6	                         cmovne rax, rsi	      3297	ops.c	FUNCTION_45	IF_29	IF_30
0x400ccd3	      0x4889442410	             mov qword [rsp + 0x10], rax	      3297	ops.c	FUNCTION_45	IF_29	IF_30
0x400ccd8	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3299	ops.c	FUNCTION_45	IF_29	IF_31
0x400ccdd	    0x483b05000000	            cmp rax, qword [0x0400cce4] 	      3299	ops.c	FUNCTION_45	IF_29	IF_31
0x400cce4	     0xf8fc0060000	                            jg 0x400d3aa	      3299	ops.c	FUNCTION_45	IF_29	IF_31
0x400ccea	      0x498b4c2420	            mov rcx, qword [r12 + 0x20] 	      3330	ops.c	FUNCTION_45
0x400ccef	      0x498b5c2428	            mov rbx, qword [r12 + 0x28] 	      3330	ops.c	FUNCTION_45
0x400ccf4	    0x488b05000000	            mov rax, qword [0x0400ccfb] 	      3330	ops.c	FUNCTION_45
0x400ccfb	    0x488988e01100	          mov qword [rax + 0x11e0], rcx 	      3330	ops.c	FUNCTION_45
0x400cd02	    0x488998e81100	          mov qword [rax + 0x11e8], rbx 	      3330	ops.c	FUNCTION_45
0x400cd09	      0x498b4c2430	            mov rcx, qword [r12 + 0x30] 	      3331	ops.c	FUNCTION_45
0x400cd0e	      0x498b5c2438	            mov rbx, qword [r12 + 0x38] 	      3331	ops.c	FUNCTION_45
0x400cd13	    0x488988001200	          mov qword [rax + 0x1200], rcx 	      3331	ops.c	FUNCTION_45
0x400cd1a	    0x488998081200	          mov qword [rax + 0x1208], rbx 	      3331	ops.c	FUNCTION_45
0x400cd21	     0xf1f80000000	                         nop dword [rax]	      3331	ops.c	FUNCTION_45
0x400cd28	    0x448b1d000000	           mov r11d, dword [0x0400cd2f] 	      3344	ops.c	FUNCTION_45	IF_37
0x400cd2f	          0x4585db	                         test r11d, r11d	      3344	ops.c	FUNCTION_45	IF_37
0x400cd32	     0xf85d0040000	                           jne 0x400d208	      3344	ops.c	FUNCTION_45	IF_37
0x400cd38	            0x31db	                            xor ebx, ebx	      3072	ops.c	FUNCTION_45
0x400cd3a	    0x448b05000000	            mov r8d, dword [0x0400cd41] 	      3365	ops.c	FUNCTION_45	IF_39
0x400cd41	          0x4585c0	                           test r8d, r8d	      3365	ops.c	FUNCTION_45	IF_39
0x400cd44	     0xf848d000000	                            je 0x400cdd7	      3365	ops.c	FUNCTION_45	IF_39
0x400cd4a	    0x4981ff000000	                              cmp r15, 0	      3366	ops.c	FUNCTION_45	IF_39
0x400cd51	            0x7437	                            je 0x400cd8a	      3366	ops.c	FUNCTION_45	IF_39
0x400cd53	        0x8b7c241c	            mov edi, dword [rsp + 0x1c] 	      3367	ops.c	FUNCTION_45	IF_39
0x400cd57	            0x85ff	                           test edi, edi	      3367	ops.c	FUNCTION_45	IF_39
0x400cd59	     0xf8589000000	                           jne 0x400cde8	      3367	ops.c	FUNCTION_45	IF_39
0x400cd5f	      0x418b742404	                mov esi, dword [r12 + 4]	      3367	ops.c	FUNCTION_45	IF_39
0x400cd64	            0x85f6	                           test esi, esi	      3367	ops.c	FUNCTION_45	IF_39
0x400cd66	     0xf8502060000	                           jne 0x400d36e	      3367	ops.c	FUNCTION_45	IF_39
0x400cd6c	    0x8b0500000000	            mov eax, dword [0x0400cd72] 	      3368	ops.c	FUNCTION_45	IF_39
0x400cd72	     0xb0500000000	              or eax, dword [0x0400cd78]	      3368	ops.c	FUNCTION_45	IF_39
0x400cd78	            0xa802	                              test al, 2	      3368	ops.c	FUNCTION_45	IF_39
0x400cd7a	     0xf84ee050000	                            je 0x400d36e	      3368	ops.c	FUNCTION_45	IF_39
0x400cd80	      0xbf00000000	                              mov edi, 0	      3373	ops.c	FUNCTION_45	IF_39	CALL_43
0x400cd85	      0xe8b650ffff	                  call sym.copy_yank_reg	      3373	ops.c	FUNCTION_45	IF_39	CALL_43
0x400cd8a	      0xbf00000000	                              mov edi, 0	      3375	ops.c	FUNCTION_45	IF_39	CALL_44
0x400cd8f	      0xe800000000	                          call 0x400cd94	      3375	ops.c	FUNCTION_45	IF_39	CALL_44
0x400cd94	      0xbf00000000	                              mov edi, 0	      3376	ops.c	FUNCTION_45	IF_39	CALL_45
0x400cd99	      0xe800000000	                          call 0x400cd9e	      3376	ops.c	FUNCTION_45	IF_39	CALL_45
0x400cd9e	      0xe800000000	                          call 0x400cda3	      3377	ops.c	FUNCTION_45	IF_39	IF_41	CALL_47
0x400cda3	            0x85c0	                           test eax, eax	      3377	ops.c	FUNCTION_45	IF_39	IF_41	CALL_47
0x400cda5	            0x7530	                           jne 0x400cdd7	      3377	ops.c	FUNCTION_45	IF_39	IF_41	CALL_47
0x400cda7	      0xe800000000	                          call 0x400cdac	      3377	ops.c	FUNCTION_45	IF_39	IF_41	CALL_47
0x400cdac	             0x9d8	                             or eax, ebx	      3378	ops.c	FUNCTION_45	IF_39	IF_41
0x400cdae	            0x7527	                           jne 0x400cdd7	      3378	ops.c	FUNCTION_45	IF_39	IF_41
0x400cdb0	    0x4981ff000000	                              cmp r15, 0	      3378	ops.c	FUNCTION_45	IF_39	IF_41
0x400cdb7	            0x751e	                           jne 0x400cdd7	      3378	ops.c	FUNCTION_45	IF_39	IF_41
0x400cdb9	      0xbf00000000	                              mov edi, 0	      3380	ops.c	FUNCTION_45	IF_39	IF_41	CALL_48
0x400cdbe	      0xe87d50ffff	                  call sym.copy_yank_reg	      3380	ops.c	FUNCTION_45	IF_39	IF_41	CALL_48
0x400cdc3	      0xbf00000000	                              mov edi, 0	      3381	ops.c	FUNCTION_45	IF_39	IF_41	CALL_49
0x400cdc8	      0xe800000000	                          call 0x400cdcd	      3381	ops.c	FUNCTION_45	IF_39	IF_41	CALL_49
0x400cdcd	      0xbf00000000	                              mov edi, 0	      3382	ops.c	FUNCTION_45	IF_39	IF_41	CALL_50
0x400cdd2	      0xe800000000	                          call 0x400cdd7	      3382	ops.c	FUNCTION_45	IF_39	IF_41	CALL_50
0x400cdd7	        0x8b4c241c	            mov ecx, dword [rsp + 0x1c] 	      3389	ops.c	FUNCTION_45	IF_42	CALL_51
0x400cddb	            0x85c9	                           test ecx, ecx	      3389	ops.c	FUNCTION_45	IF_42	CALL_51
0x400cddd	     0xf848b050000	                            je 0x400d36e	      3389	ops.c	FUNCTION_45	IF_42	CALL_51
0x400cde3	       0xf1f440000	                   nop dword [rax + rax]	      3389	ops.c	FUNCTION_45	IF_42	CALL_51
0x400cde8	      0xb801000000	                              mov eax, 1	      3393	ops.c	FUNCTION_45
0x400cded	      0xe9de000000	                           jmp 0x400ced0	      3393	ops.c	FUNCTION_45
0x400cdf2	    0x660f1f440000	                    nop word [rax + rax]	      3393	ops.c	FUNCTION_45
0x400cdf8	        0x498b7f08	                mov rdi, qword [r15 + 8]	      3045	ops.c	FUNCTION_44	CALL_1
0x400cdfc	      0xe8ef35ffff	                      call sym.free_yank	      3045	ops.c	FUNCTION_44	CALL_1
0x400ce01	    0x488b1d000000	            mov rbx, qword [0x0400ce08] 	      3045	ops.c	FUNCTION_44	CALL_1
0x400ce08	      0xe9d0fbffff	                           jmp 0x400c9dd	      3045	ops.c	FUNCTION_44	CALL_1
0x400ce0d	           0xf1f00	                         nop dword [rax]	      3045	ops.c	FUNCTION_44	CALL_1
0x400ce10	          0x4889df	                            mov rdi, rbx	      3168	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_11
0x400ce13	          0x4531ff	                          xor r15d, r15d	      3168	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_11
0x400ce16	      0xe800000000	                          call 0x400ce1b	      3168	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_11
0x400ce1b	          0x4531d2	                          xor r10d, r10d	      3163	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x400ce1e	      0x49395c2420	            cmp qword [r12 + 0x20], rbx 	      3172	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13
0x400ce23	          0x4989c3	                            mov r11, rax	      3168	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_11
0x400ce26	    0xc74424700000	               mov dword [rsp + 0x70], 0	      3169	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x400ce2e	    0xc74424740000	               mov dword [rsp + 0x74], 0	      3170	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x400ce36	     0xf84cc000000	                            je 0x400cf08	      3172	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13
0x400ce3c	      0x49395c2430	            cmp qword [r12 + 0x30], rbx 	      3191	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x400ce41	     0xf84e9000000	                            je 0x400cf30	      3191	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x400ce47	        0x8b542474	            mov edx, dword [rsp + 0x74] 	      3191	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x400ce4b	         0x3542470	             add edx, dword [rsp + 0x70]	      3191	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x400ce4f	            0x31c9	                            xor ecx, ecx	      3191	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x400ce51	          0x4c89df	                            mov rdi, r11	      3227	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_14
0x400ce54	        0x89542430	             mov dword [rsp + 0x30], edx	      3227	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_14
0x400ce58	        0x884c242f	               mov byte [rsp + 0x2f], cl	      3227	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_14
0x400ce5c	      0x4489542428	            mov dword [rsp + 0x28], r10d	      3227	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_14
0x400ce61	      0x4c895c2420	             mov qword [rsp + 0x20], r11	      3227	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_14
0x400ce66	      0xe800000000	                          call 0x400ce6b	      3227	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_14
0x400ce6b	       0xfb64c242f	           movzx ecx, byte [rsp + 0x2f] 	      3227	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_14
0x400ce70	      0x4c8b5c2420	            mov r11, qword [rsp + 0x20] 	      3227	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_14
0x400ce75	          0x4189c5	                           mov r13d, eax	      3227	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_14
0x400ce78	      0x448b542428	           mov r10d, dword [rsp + 0x28] 	      3227	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_14
0x400ce7d	        0x8b542430	            mov edx, dword [rsp + 0x30] 	      3227	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_14
0x400ce81	          0x4539d5	                          cmp r13d, r10d	      3228	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_21
0x400ce84	            0x7c7a	                            jl 0x400cf00	      3228	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_21
0x400ce86	            0x84c9	                             test cl, cl	      3228	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_21
0x400ce88	            0x7576	                           jne 0x400cf00	      3228	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_21
0x400ce8a	          0x4529d5	                          sub r13d, r10d	      3236	ops.c	FUNCTION_45	FOR_1	SWITCH_1	ELSE_4
0x400ce8d	      0x45036c2414	            add r13d, dword [r12 + 0x14]	      3236	ops.c	FUNCTION_45	FOR_1	SWITCH_1	ELSE_4
0x400ce92	        0x4f8d0c3b	                     lea r9, [r11 + r15]	      3238	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x400ce96	      0x418d7c1501	                lea edi, [r13 + rdx + 1]	      3406	ops.c	FUNCTION_46	IF_1	CALL_1
0x400ce9b	      0x44896c2478	            mov dword [rsp + 0x78], r13d	      3406	ops.c	FUNCTION_46	IF_1	CALL_1
0x400cea0	    0x4c898c248000	              mov qword [rsp + 0x80], r9	      3238	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x400cea8	      0xe800000000	                          call 0x400cead	      3406	ops.c	FUNCTION_46	IF_1	CALL_1
0x400cead	          0x4885c0	                           test rax, rax	      3406	ops.c	FUNCTION_46	IF_1	CALL_1
0x400ceb0	          0x4889c1	                            mov rcx, rax	      3406	ops.c	FUNCTION_46	IF_1	CALL_1
0x400ceb3	     0xf8527fcffff	                           jne 0x400cae0	      3406	ops.c	FUNCTION_46	IF_1	CALL_1
0x400ceb9	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      3406	ops.c	FUNCTION_46	IF_1	CALL_1
0x400cebe	        0x488d7d01	                      lea rdi, [rbp + 1]	      3396	ops.c	FUNCTION_45	CALL_53
0x400cec2	      0xe82935ffff	                      call sym.free_yank	      3396	ops.c	FUNCTION_45	CALL_53
0x400cec7	    0x4c893d000000	            mov qword [0x0400cece], r15 	      3397	ops.c	FUNCTION_45
0x400cece	            0x31c0	                            xor eax, eax	      3398	ops.c	FUNCTION_45
0x400ced0	    0x488bb4241801	           mov rsi, qword [rsp + 0x118] 	      3399	ops.c	FUNCTION_45
0x400ced8	    0x644833342528	                xor rsi, qword fs:[0x28]	      3399	ops.c	FUNCTION_45
0x400cee1	     0xf8577060000	                           jne 0x400d55e	      3399	ops.c	FUNCTION_45
0x400cee7	    0x4881c4280100	                          add rsp, 0x128	      3399	ops.c	FUNCTION_45
0x400ceee	              0x5b	                                 pop rbx	      3399	ops.c	FUNCTION_45
0x400ceef	              0x5d	                                 pop rbp	      3399	ops.c	FUNCTION_45
0x400cef0	            0x415c	                                 pop r12	      3399	ops.c	FUNCTION_45
0x400cef2	            0x415d	                                 pop r13	      3399	ops.c	FUNCTION_45
0x400cef4	            0x415e	                                 pop r14	      3399	ops.c	FUNCTION_45
0x400cef6	            0x415f	                                 pop r15	      3399	ops.c	FUNCTION_45
0x400cef8	              0xc3	                                     ret	      3399	ops.c	FUNCTION_45
0x400cef9	     0xf1f80000000	                         nop dword [rax]	      3399	ops.c	FUNCTION_45
0x400cf00	          0x4531ed	                          xor r13d, r13d	      3233	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_21
0x400cf03	            0xeb8d	                           jmp 0x400ce92	      3233	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_21
0x400cf05	           0xf1f00	                         nop dword [rax]	      3233	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_21
0x400cf08	    0x8b1500000000	            mov edx, dword [0x0400cf0e] 	      3176	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14
0x400cf0e	      0x458b542428	           mov r10d, dword [r12 + 0x28] 	      3174	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13
0x400cf13	            0x85d2	                           test edx, edx	      3176	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14
0x400cf15	     0xf8555010000	                           jne 0x400d070	      3176	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14
0x400cf1b	      0x49395c2430	            cmp qword [r12 + 0x30], rbx 	      3191	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x400cf20	     0xf8432020000	                            je 0x400d158	      3191	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x400cf26	          0x4d63fa	                        movsxd r15, r10d	      3191	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x400cf29	            0x31c9	                            xor ecx, ecx	      3191	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x400cf2b	      0xe921ffffff	                           jmp 0x400ce51	      3191	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x400cf30	    0x8b0500000000	            mov eax, dword [0x0400cf36] 	      3195	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17
0x400cf36	      0x458b6c2438	           mov r13d, dword [r12 + 0x38] 	      3193	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x400cf3b	            0x85c0	                           test eax, eax	      3195	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17
0x400cf3d	     0xf85bd000000	                           jne 0x400d000	      3195	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17
0x400cf43	        0x8b542474	            mov edx, dword [rsp + 0x74] 	      3195	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17
0x400cf47	         0x3542470	             add edx, dword [rsp + 0x70]	      3195	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17
0x400cf4b	            0x31c9	                            xor ecx, ecx	      3195	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17
0x400cf4d	    0x4181fdffffff	                    cmp r13d, 0x7fffffff	      3226	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_20
0x400cf54	     0xf8527ffffff	                           jne 0x400ce81	      3226	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_20
0x400cf5a	      0xe9f2feffff	                           jmp 0x400ce51	      3226	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_20
0x400cf5f	              0x90	                                     nop	      3226	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_20
0x400cf60	      0x458b6c2460	           mov r13d, dword [r12 + 0x60] 	      3313	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	IF_34
0x400cf65	      0xbe00000000	                              mov esi, 0	      3314	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_33
0x400cf6a	          0x4585ed	                         test r13d, r13d	      3313	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	IF_34
0x400cf6d	            0x7505	                           jne 0x400cf74	      3313	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	IF_34
0x400cf6f	      0xbe00000000	                              mov esi, 0	      3316	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_35
0x400cf74	            0x31ff	                            xor edi, edi	      3316	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_35
0x400cf76	      0xe800000000	                          call 0x400cf7b	      3316	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_35
0x400cf7b	          0x4889de	                            mov rsi, rbx	      3316	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_35
0x400cf7e	          0x4889c7	                            mov rdi, rax	      3316	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_35
0x400cf81	            0x31c0	                            xor eax, eax	      3316	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_35
0x400cf83	      0xe800000000	                          call 0x400cf88	      3316	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_35
0x400cf88	     0xf1f84000000	                   nop dword [rax + rax]	      3316	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_35
0x400cf90	      0x498b4c2420	            mov rcx, qword [r12 + 0x20] 	      3330	ops.c	FUNCTION_45
0x400cf95	      0x498b5c2428	            mov rbx, qword [r12 + 0x28] 	      3330	ops.c	FUNCTION_45
0x400cf9a	    0x488b05000000	            mov rax, qword [0x0400cfa1] 	      3330	ops.c	FUNCTION_45
0x400cfa1	      0x837c241801	               cmp dword [rsp + 0x18], 1	      3332	ops.c	FUNCTION_45	IF_36
0x400cfa6	    0x488988e01100	          mov qword [rax + 0x11e0], rcx 	      3330	ops.c	FUNCTION_45
0x400cfad	    0x488998e81100	          mov qword [rax + 0x11e8], rbx 	      3330	ops.c	FUNCTION_45
0x400cfb4	      0x498b4c2430	            mov rcx, qword [r12 + 0x30] 	      3331	ops.c	FUNCTION_45
0x400cfb9	      0x498b5c2438	            mov rbx, qword [r12 + 0x38] 	      3331	ops.c	FUNCTION_45
0x400cfbe	    0x488988001200	          mov qword [rax + 0x1200], rcx 	      3331	ops.c	FUNCTION_45
0x400cfc5	    0x488998081200	          mov qword [rax + 0x1208], rbx 	      3331	ops.c	FUNCTION_45
0x400cfcc	     0xf8556fdffff	                           jne 0x400cd28	      3332	ops.c	FUNCTION_45	IF_36
0x400cfd2	      0x418b5c2460	            mov ebx, dword [r12 + 0x60] 	      3332	ops.c	FUNCTION_45	IF_36
0x400cfd7	            0x85db	                           test ebx, ebx	      3332	ops.c	FUNCTION_45	IF_36
0x400cfd9	     0xf8549fdffff	                           jne 0x400cd28	      3332	ops.c	FUNCTION_45	IF_36
0x400cfdf	    0xc780e8110000	            mov dword [rax + 0x11e8], 0 	      3334	ops.c	FUNCTION_45	IF_36
0x400cfe9	    0xc78008120000	   mov dword [rax + 0x1208], 0x7fffffff 	      3335	ops.c	FUNCTION_45	IF_36
0x400cff3	      0xe930fdffff	                           jmp 0x400cd28	      3335	ops.c	FUNCTION_45	IF_36
0x400cff8	     0xf1f84000000	                   nop dword [rax + rax]	      3335	ops.c	FUNCTION_45	IF_36
0x400d000	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      3197	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x400d005	    0x488b3d000000	            mov rdi, qword [0x0400d00c] 	      3197	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x400d00c	      0x4c8d44244c	                    lea r8, [rsp + 0x4c]	      3197	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x400d011	      0x488d542448	                   lea rdx, [rsp + 0x48]	      3197	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x400d016	            0x31c9	                            xor ecx, ecx	      3197	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x400d018	      0x4489542428	            mov dword [rsp + 0x28], r10d	      3197	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x400d01d	      0x4c895c2420	             mov qword [rsp + 0x20], r11	      3197	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x400d022	      0xe800000000	                          call 0x400d027	      3197	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x400d027	      0x4c8b5c2420	            mov r11, qword [rsp + 0x20] 	      3198	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400d02c	          0x4963f5	                        movsxd rsi, r13d	      3198	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400d02f	      0x448b542428	           mov r10d, dword [rsp + 0x28] 	      3198	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400d034	          0x4c01de	                            add rsi, r11	      3198	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400d037	          0x803e00	                       cmp byte [rsi], 0	      3198	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400d03a	     0xf8530020000	                           jne 0x400d270	      3198	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400d040	      0x498b442430	            mov rax, qword [r12 + 0x30] 	      3207	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x400d045	      0x4939442420	            cmp qword [r12 + 0x20], rax 	      3207	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x400d04a	     0xf8460040000	                            je 0x400d4b0	      3207	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x400d050	      0x418b442414	            mov eax, dword [r12 + 0x14] 	      3219	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	ELSE_3
0x400d055	      0x418b54243c	            mov edx, dword [r12 + 0x3c] 	      3219	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	ELSE_3
0x400d05a	             0x1c2	                            add edx, eax	      3219	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	ELSE_3
0x400d05c	          0x4129c5	                           sub r13d, eax	      3220	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	ELSE_3
0x400d05f	        0x89542474	             mov dword [rsp + 0x74], edx	      3218	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	ELSE_3
0x400d063	         0x3542470	             add edx, dword [rsp + 0x70]	      3218	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	ELSE_3
0x400d067	      0xe9dffeffff	                           jmp 0x400cf4b	      3218	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	ELSE_3
0x400d06c	         0xf1f4000	                         nop dword [rax]	      3218	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	ELSE_3
0x400d070	    0x488b3d000000	            mov rdi, qword [0x0400d077] 	      3178	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	CALL_12
0x400d077	      0x488d542448	                   lea rdx, [rsp + 0x48]	      3178	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	CALL_12
0x400d07c	      0x498d742420	                   lea rsi, [r12 + 0x20]	      3178	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	CALL_12
0x400d081	      0x4c8d44244c	                    lea r8, [rsp + 0x4c]	      3178	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	CALL_12
0x400d086	            0x31c9	                            xor ecx, ecx	      3178	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	CALL_12
0x400d088	      0x4489542428	            mov dword [rsp + 0x28], r10d	      3178	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	CALL_12
0x400d08d	      0x4889442420	             mov qword [rsp + 0x20], rax	      3178	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	CALL_12
0x400d092	      0xe800000000	                          call 0x400d097	      3178	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	CALL_12
0x400d097	        0x8b44244c	            mov eax, dword [rsp + 0x4c] 	      3179	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x400d09b	        0x8b542448	            mov edx, dword [rsp + 0x48] 	      3179	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x400d09f	      0x4c8b5c2420	            mov r11, qword [rsp + 0x20] 	      3179	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x400d0a4	      0x448b542428	           mov r10d, dword [rsp + 0x28] 	      3179	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x400d0a9	            0x39d0	                            cmp eax, edx	      3179	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x400d0ab	            0x7418	                            je 0x400d0c5	      3179	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x400d0ad	      0x418b4c242c	            mov ecx, dword [r12 + 0x2c] 	      3179	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x400d0b2	            0x85c9	                           test ecx, ecx	      3179	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x400d0b4	            0x7e0f	                           jle 0x400d0c5	      3179	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x400d0b6	            0x29d0	                            sub eax, edx	      3183	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x400d0b8	        0x4183c201	                             add r10d, 1	      3185	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x400d0bc	          0x83c001	                              add eax, 1	      3183	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x400d0bf	            0x29c8	                            sub eax, ecx	      3183	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x400d0c1	        0x89442470	             mov dword [rsp + 0x70], eax	      3183	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x400d0c5	          0x4d63fa	                        movsxd r15, r10d	      3183	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x400d0c8	      0xe96ffdffff	                           jmp 0x400ce3c	      3183	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x400d0cd	           0xf1f00	                         nop dword [rax]	      3183	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x400d0d0	      0xbe01000000	                              mov esi, 1	      3076	ops.c	FUNCTION_45	IF_1	CALL_1
0x400d0d5	      0xe800000000	                          call 0x400d0da	      3076	ops.c	FUNCTION_45	IF_1	CALL_1
0x400d0da	            0x85c0	                           test eax, eax	      3076	ops.c	FUNCTION_45	IF_1	CALL_1
0x400d0dc	     0xf845d030000	                            je 0x400d43f	      3076	ops.c	FUNCTION_45	IF_1	CALL_1
0x400d0e2	      0x418b7c2404	                mov edi, dword [r12 + 4]	      3081	ops.c	FUNCTION_45	IF_2
0x400d0e7	          0x83ff5f	                           cmp edi, 0x5f	      3081	ops.c	FUNCTION_45	IF_2
0x400d0ea	     0xf84f8fcffff	                            je 0x400cde8	      3081	ops.c	FUNCTION_45	IF_2
0x400d0f0	          0x83ff2a	                           cmp edi, 0x2a	      3085	ops.c	FUNCTION_45	IF_3
0x400d0f3	    0x8b1500000000	            mov edx, dword [0x0400d0f9] 	      3085	ops.c	FUNCTION_45	IF_3
0x400d0f9	     0xf8541040000	                           jne 0x400d540	      3085	ops.c	FUNCTION_45	IF_3
0x400d0ff	            0x85d2	                           test edx, edx	      3085	ops.c	FUNCTION_45	IF_3
0x400d101	     0xf8539040000	                           jne 0x400d540	      3085	ops.c	FUNCTION_45	IF_3
0x400d107	        0x8b5c241c	            mov ebx, dword [rsp + 0x1c] 	      3091	ops.c	FUNCTION_45	IF_5
0x400d10b	    0x41c744240400	                  mov dword [r12 + 4], 0	      3086	ops.c	FUNCTION_45	IF_3
0x400d114	            0x85db	                           test ebx, ebx	      3091	ops.c	FUNCTION_45	IF_5
0x400d116	     0xf8596f8ffff	                           jne 0x400c9b2	      3091	ops.c	FUNCTION_45	IF_5
0x400d11c	    0xc70500000000	               mov dword [0x0400d126], 0	       912	ops.c	FUNCTION_15
0x400d126	            0x31ff	                            xor edi, edi	      3092	ops.c	FUNCTION_45	CALL_3
0x400d128	            0x31c0	                            xor eax, eax	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x400d12a	          0x83ff2a	                           cmp edi, 0x2a	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x400d12d	            0x7508	                           jne 0x400d137	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x400d12f	            0x85d2	                           test edx, edx	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x400d131	     0xf85eb030000	                           jne 0x400d522	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x400d137	    0x448b0d000000	            mov r9d, dword [0x0400d13e] 	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x400d13e	          0x4585c9	                           test r9d, r9d	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x400d141	            0x7409	                            je 0x400d14c	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x400d143	          0x83ff2b	                           cmp edi, 0x2b	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x400d146	     0xf8453030000	                            je 0x400d49f	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x400d14c	            0x31ff	                            xor edi, edi	       949	ops.c	FUNCTION_15	ELSE_7
0x400d14e	      0xe98f000000	                           jmp 0x400d1e2	       949	ops.c	FUNCTION_15	ELSE_7
0x400d153	       0xf1f440000	                   nop dword [rax + rax]	       949	ops.c	FUNCTION_15	ELSE_7
0x400d158	      0x458b6c2438	           mov r13d, dword [r12 + 0x38] 	      3193	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x400d15d	          0x4d63fa	                        movsxd r15, r10d	      3193	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x400d160	      0xe9e6fdffff	                           jmp 0x400cf4b	      3193	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x400d165	           0xf1f00	                         nop dword [rax]	      3193	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x400d168	      0x418b742414	            mov esi, dword [r12 + 0x14] 	      3107	ops.c	FUNCTION_45	IF_7
0x400d16d	            0x85f6	                           test esi, esi	      3107	ops.c	FUNCTION_45	IF_7
0x400d16f	     0xf857ff8ffff	                           jne 0x400c9f4	      3107	ops.c	FUNCTION_45	IF_7
0x400d175	      0x418b4c245c	            mov ecx, dword [r12 + 0x5c] 	      3108	ops.c	FUNCTION_45	IF_7
0x400d17a	            0x85c9	                           test ecx, ecx	      3108	ops.c	FUNCTION_45	IF_7
0x400d17c	     0xf85f1020000	                           jne 0x400d473	      3108	ops.c	FUNCTION_45	IF_7
0x400d182	      0x418b542460	            mov edx, dword [r12 + 0x60] 	      3109	ops.c	FUNCTION_45	IF_7
0x400d187	            0x85d2	                           test edx, edx	      3109	ops.c	FUNCTION_45	IF_7
0x400d189	     0xf8565f8ffff	                           jne 0x400c9f4	      3109	ops.c	FUNCTION_45	IF_7
0x400d18f	      0x418b442438	            mov eax, dword [r12 + 0x38] 	      3111	ops.c	FUNCTION_45	IF_7
0x400d194	            0x85c0	                           test eax, eax	      3111	ops.c	FUNCTION_45	IF_7
0x400d196	     0xf8558f8ffff	                           jne 0x400c9f4	      3111	ops.c	FUNCTION_45	IF_7
0x400d19c	    0x48837c241001	               cmp qword [rsp + 0x10], 1	      3111	ops.c	FUNCTION_45	IF_7
0x400d1a2	     0xf8e4cf8ffff	                           jle 0x400c9f4	      3111	ops.c	FUNCTION_45	IF_7
0x400d1a8	        0x4983ee01	                              sub r14, 1	      3114	ops.c	FUNCTION_45	IF_7
0x400d1ac	    0x48836c241001	               sub qword [rsp + 0x10], 1	      3115	ops.c	FUNCTION_45	IF_7
0x400d1b2	      0xb801000000	                              mov eax, 1	      3115	ops.c	FUNCTION_45	IF_7
0x400d1b7	    0xc74424180100	               mov dword [rsp + 0x18], 1	      3113	ops.c	FUNCTION_45	IF_7
0x400d1bf	      0xe935f8ffff	                           jmp 0x400c9f9	      3113	ops.c	FUNCTION_45	IF_7
0x400d1c4	         0xf1f4000	                         nop dword [rax]	      3113	ops.c	FUNCTION_45	IF_7
0x400d1c8	          0x8d47d0	                   lea eax, [rdi - 0x30]	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x400d1cb	    0xc70500000000	               mov dword [0x0400d1d5], 0	       912	ops.c	FUNCTION_15
0x400d1d5	          0x83f809	                              cmp eax, 9	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x400d1d8	     0xf877f020000	                            ja 0x400d45d	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x400d1de	            0x89c7	                            mov edi, eax	       920	ops.c	FUNCTION_15	IF_2
0x400d1e0	            0x31c0	                            xor eax, eax	       920	ops.c	FUNCTION_15	IF_2
0x400d1e2	          0x4863ff	                         movsxd rdi, edi	       950	ops.c	FUNCTION_15
0x400d1e5	        0x48c1e705	                              shl rdi, 5	       950	ops.c	FUNCTION_15
0x400d1e9	    0x4c8dbf000000	                          lea r15, [rdi]	       950	ops.c	FUNCTION_15
0x400d1f0	    0x4c893d000000	            mov qword [0x0400d1f7], r15 	       950	ops.c	FUNCTION_15
0x400d1f7	    0x4c893d000000	            mov qword [0x0400d1fe], r15 	       952	ops.c	FUNCTION_15	IF_9
0x400d1fe	      0xe9bcf7ffff	                           jmp 0x400c9bf	       952	ops.c	FUNCTION_15	IF_9
0x400d203	       0xf1f440000	                   nop dword [rax + rax]	       952	ops.c	FUNCTION_15	IF_9
0x400d208	    0x4981ff000000	                              cmp r15, 0	      3345	ops.c	FUNCTION_45	IF_37
0x400d20f	            0x743a	                            je 0x400d24b	      3345	ops.c	FUNCTION_45	IF_37
0x400d211	      0x448b54241c	           mov r10d, dword [rsp + 0x1c] 	      3346	ops.c	FUNCTION_45	IF_37
0x400d216	          0x4585d2	                         test r10d, r10d	      3346	ops.c	FUNCTION_45	IF_37
0x400d219	     0xf85fe010000	                           jne 0x400d41d	      3346	ops.c	FUNCTION_45	IF_37
0x400d21f	      0x458b4c2404	                mov r9d, dword [r12 + 4]	      3346	ops.c	FUNCTION_45	IF_37
0x400d224	          0x4585c9	                           test r9d, r9d	      3346	ops.c	FUNCTION_45	IF_37
0x400d227	     0xf8533010000	                           jne 0x400d360	      3346	ops.c	FUNCTION_45	IF_37
0x400d22d	    0x8b0500000000	            mov eax, dword [0x0400d233] 	      3347	ops.c	FUNCTION_45	IF_37
0x400d233	     0xb0500000000	              or eax, dword [0x0400d239]	      3347	ops.c	FUNCTION_45	IF_37
0x400d239	            0xa801	                              test al, 1	      3347	ops.c	FUNCTION_45	IF_37
0x400d23b	     0xf841f010000	                            je 0x400d360	      3347	ops.c	FUNCTION_45	IF_37
0x400d241	      0xbf00000000	                              mov edi, 0	      3351	ops.c	FUNCTION_45	IF_37	CALL_40
0x400d246	      0xe8f54bffff	                  call sym.copy_yank_reg	      3351	ops.c	FUNCTION_45	IF_37	CALL_40
0x400d24b	      0xbf00000000	                              mov edi, 0	      3353	ops.c	FUNCTION_45	IF_37	CALL_41
0x400d250	      0xbb01000000	                              mov ebx, 1	      3356	ops.c	FUNCTION_45	IF_37
0x400d255	      0xe800000000	                          call 0x400d25a	      3353	ops.c	FUNCTION_45	IF_37	CALL_41
0x400d25a	      0xbf00000000	                              mov edi, 0	      3354	ops.c	FUNCTION_45	IF_37	CALL_42
0x400d25f	      0xe800000000	                          call 0x400d264	      3354	ops.c	FUNCTION_45	IF_37	CALL_42
0x400d264	      0xe9d1faffff	                           jmp 0x400cd3a	      3354	ops.c	FUNCTION_45	IF_37	CALL_42
0x400d269	     0xf1f80000000	                         nop dword [rax]	      3354	ops.c	FUNCTION_45	IF_37	CALL_42
0x400d270	        0x8b442448	            mov eax, dword [rsp + 0x48] 	      3198	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400d274	      0x410344243c	             add eax, dword [r12 + 0x3c]	      3198	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400d279	        0x3b44244c	            cmp eax, dword [rsp + 0x4c] 	      3198	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400d27d	     0xf8dc0fcffff	                           jge 0x400cf43	      3198	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400d283	      0x4489542428	            mov dword [rsp + 0x28], r10d	      3198	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400d288	          0x4c89df	                            mov rdi, r11	      3203	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400d28b	      0x4c895c2420	             mov qword [rsp + 0x20], r11	      3203	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400d290	    0xff1500000000	                 call qword [0x0400d296]	      3203	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400d296	            0x85c0	                           test eax, eax	      3203	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400d298	      0x4c8b5c2420	            mov r11, qword [rsp + 0x20] 	      3203	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400d29d	      0x448b542428	           mov r10d, dword [rsp + 0x28] 	      3203	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400d2a2	     0xf8498fdffff	                            je 0x400d040	      3203	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400d2a8	      0xe996fcffff	                           jmp 0x400cf43	      3203	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x400d2ad	    0x488b3d000000	            mov rdi, qword [0x0400d2b4] 	      3266	ops.c	FUNCTION_45	IF_23	IF_26	CALL_19
0x400d2b4	      0xbe3e000000	                           mov esi, 0x3e	      3266	ops.c	FUNCTION_45	IF_23	IF_26	CALL_19
0x400d2b9	      0xe800000000	                          call 0x400d2be	      3266	ops.c	FUNCTION_45	IF_23	IF_26	CALL_19
0x400d2be	          0x4885c0	                           test rax, rax	      3266	ops.c	FUNCTION_45	IF_23	IF_26	CALL_19
0x400d2c1	     0xf8560f9ffff	                           jne 0x400cc27	      3266	ops.c	FUNCTION_45	IF_23	IF_26	CALL_19
0x400d2c7	        0x498b5708	                mov rdx, qword [r15 + 8]	      3268	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x400d2cb	          0x498b07	                    mov rax, qword [r15]	      3268	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x400d2ce	      0x488b7cd0f8	        mov rdi, qword [rax + rdx*8 - 8]	      3268	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x400d2d3	      0xe800000000	                          call 0x400d2d8	      3268	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x400d2d8	          0x4889c5	                            mov rbp, rax	      3268	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x400d2db	    0x488b05000000	            mov rax, qword [0x0400d2e2] 	      3269	ops.c	FUNCTION_45	IF_23	IF_26	CALL_22
0x400d2e2	          0x488b00	                    mov rax, qword [rax]	      3269	ops.c	FUNCTION_45	IF_23	IF_26	CALL_22
0x400d2e5	          0x488b38	                    mov rdi, qword [rax]	      3269	ops.c	FUNCTION_45	IF_23	IF_26	CALL_22
0x400d2e8	      0xe800000000	                          call 0x400d2ed	      3269	ops.c	FUNCTION_45	IF_23	IF_26	CALL_22
0x400d2ed	      0x488d7c0501	                lea rdi, [rbp + rax + 1]	      3268	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x400d2f2	      0xbe01000000	                              mov esi, 1	      3268	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x400d2f7	      0xe800000000	                          call 0x400d2fc	      3268	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x400d2fc	          0x4885c0	                           test rax, rax	      3270	ops.c	FUNCTION_45	IF_23	IF_26	IF_27
0x400d2ff	          0x4989c5	                            mov r13, rax	      3268	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x400d302	     0xf8424020000	                            je 0x400d52c	      3270	ops.c	FUNCTION_45	IF_23	IF_26	IF_27
0x400d308	          0x498b07	                    mov rax, qword [r15]	      3275	ops.c	FUNCTION_45	IF_23	IF_26	CALL_23
0x400d30b	        0x488d6bff	                      lea rbp, [rbx - 1]	      3275	ops.c	FUNCTION_45	IF_23	IF_26	CALL_23
0x400d30f	          0x4c89ef	                            mov rdi, r13	       110	string3.h	FUNCTION_98	CALL_3
0x400d312	        0x488b34e8	            mov rsi, qword [rax + rbp*8]	       110	string3.h	FUNCTION_98	CALL_3
0x400d316	      0xe800000000	                          call 0x400d31b	       110	string3.h	FUNCTION_98	CALL_3
0x400d31b	    0x488b15000000	            mov rdx, qword [0x0400d322] 	      3276	ops.c	FUNCTION_45	IF_23	IF_26	CALL_24
0x400d322	          0x4889c7	                            mov rdi, rax	       148	string3.h	FUNCTION_102	CALL_3
0x400d325	          0x488b12	                    mov rdx, qword [rdx]	      3276	ops.c	FUNCTION_45	IF_23	IF_26	CALL_24
0x400d328	          0x488b32	                    mov rsi, qword [rdx]	       148	string3.h	FUNCTION_102	CALL_3
0x400d32b	      0xe800000000	                          call 0x400d330	       148	string3.h	FUNCTION_102	CALL_3
0x400d330	          0x498b07	                    mov rax, qword [r15]	      3277	ops.c	FUNCTION_45	IF_23	IF_26	CALL_25
0x400d333	        0x488b3ce8	            mov rdi, qword [rax + rbp*8]	      3277	ops.c	FUNCTION_45	IF_23	IF_26	CALL_25
0x400d337	      0xe800000000	                          call 0x400d33c	      3277	ops.c	FUNCTION_45	IF_23	IF_26	CALL_25
0x400d33c	    0x488b05000000	            mov rax, qword [0x0400d343] 	      3278	ops.c	FUNCTION_45	IF_23	IF_26	CALL_26
0x400d343	          0x488b00	                    mov rax, qword [rax]	      3278	ops.c	FUNCTION_45	IF_23	IF_26	CALL_26
0x400d346	          0x488b38	                    mov rdi, qword [rax]	      3278	ops.c	FUNCTION_45	IF_23	IF_26	CALL_26
0x400d349	      0xe800000000	                          call 0x400d34e	      3278	ops.c	FUNCTION_45	IF_23	IF_26	CALL_26
0x400d34e	          0x498b07	                    mov rax, qword [r15]	      3279	ops.c	FUNCTION_45	IF_23	IF_26
0x400d351	      0xba01000000	                              mov edx, 1	      3280	ops.c	FUNCTION_45	IF_23	IF_26
0x400d356	        0x4c892ce8	            mov qword [rax + rbp*8], r13	      3279	ops.c	FUNCTION_45	IF_23	IF_26
0x400d35a	      0xe9caf8ffff	                           jmp 0x400cc29	      3280	ops.c	FUNCTION_45	IF_23	IF_26
0x400d35f	              0x90	                                     nop	      3280	ops.c	FUNCTION_45	IF_23	IF_26
0x400d360	    0x8b0500000000	            mov eax, dword [0x0400d366] 	      3365	ops.c	FUNCTION_45	IF_39
0x400d366	            0x85c0	                           test eax, eax	      3365	ops.c	FUNCTION_45	IF_39
0x400d368	     0xf851a010000	                           jne 0x400d488	      3365	ops.c	FUNCTION_45	IF_39
0x400d36e	      0xe800000000	                          call 0x400d373	      3389	ops.c	FUNCTION_45	IF_42	CALL_51
0x400d373	            0x85c0	                           test eax, eax	      3389	ops.c	FUNCTION_45	IF_42	CALL_51
0x400d375	     0xf846dfaffff	                            je 0x400cde8	      3389	ops.c	FUNCTION_45	IF_42	CALL_51
0x400d37b	    0x488b15000000	            mov rdx, qword [0x0400d382] 	      3390	ops.c	FUNCTION_45	CALL_52
0x400d382	      0x498d742404	                      lea rsi, [r12 + 4]	      3390	ops.c	FUNCTION_45	CALL_52
0x400d387	          0x4c89e7	                            mov rdi, r12	      3390	ops.c	FUNCTION_45	CALL_52
0x400d38a	        0x488d4a08	                      lea rcx, [rdx + 8]	      3390	ops.c	FUNCTION_45	CALL_52
0x400d38e	      0xe8adf3ffff	        call sym.yank_do_autocmd.isra.12	      3390	ops.c	FUNCTION_45	CALL_52
0x400d393	      0xe950faffff	                           jmp 0x400cde8	      3390	ops.c	FUNCTION_45	CALL_52
0x400d398	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3299	ops.c	FUNCTION_45	IF_29	IF_31
0x400d39d	    0x483b05000000	            cmp rax, qword [0x0400d3a4] 	      3299	ops.c	FUNCTION_45	IF_29	IF_31
0x400d3a4	     0xf8ee6fbffff	                           jle 0x400cf90	      3299	ops.c	FUNCTION_45	IF_29	IF_31
0x400d3aa	      0x418b6c2404	                mov ebp, dword [r12 + 4]	      3303	ops.c	FUNCTION_45	IF_29	IF_31	IF_32
0x400d3af	            0x85ed	                           test ebp, ebp	      3303	ops.c	FUNCTION_45	IF_29	IF_31	IF_32
0x400d3b1	     0xf8539010000	                           jne 0x400d4f0	      3303	ops.c	FUNCTION_45	IF_29	IF_31	IF_32
0x400d3b7	    0x488d9c24b000	                   lea rbx, [rsp + 0xb0]	      3303	ops.c	FUNCTION_45	IF_29	IF_31	IF_32
0x400d3bf	    0xc68424b00000	                mov byte [rsp + 0xb0], 0	      3304	ops.c	FUNCTION_45	IF_29	IF_31	IF_32
0x400d3c7	      0xe800000000	                          call 0x400d3cc	      3310	ops.c	FUNCTION_45	IF_29	IF_31	CALL_31
0x400d3cc	    0x48837c241001	               cmp qword [rsp + 0x10], 1	      3311	ops.c	FUNCTION_45	IF_29	IF_31	IF_33
0x400d3d2	      0xba05000000	                              mov edx, 5	      3314	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_33
0x400d3d7	     0xf8483fbffff	                            je 0x400cf60	      3311	ops.c	FUNCTION_45	IF_29	IF_31	IF_33
0x400d3dd	      0x418b6c2460	            mov ebp, dword [r12 + 0x60] 	      3318	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35
0x400d3e2	      0xbe00000000	                              mov esi, 0	      3319	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35	CALL_37
0x400d3e7	            0x85ed	                           test ebp, ebp	      3318	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35
0x400d3e9	            0x7505	                           jne 0x400d3f0	      3318	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35
0x400d3eb	      0xbe00000000	                              mov esi, 0	      3322	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_9	CALL_39
0x400d3f0	            0x31ff	                            xor edi, edi	      3322	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_9	CALL_39
0x400d3f2	      0xe800000000	                          call 0x400d3f7	      3322	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_9	CALL_39
0x400d3f7	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3322	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_9	CALL_39
0x400d3fc	          0x4889c7	                            mov rdi, rax	      3322	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_9	CALL_39
0x400d3ff	          0x4889da	                            mov rdx, rbx	      3322	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_9	CALL_39
0x400d402	            0x31c0	                            xor eax, eax	      3322	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_9	CALL_39
0x400d404	      0xe800000000	                          call 0x400d409	      3322	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_9	CALL_39
0x400d409	      0xe982fbffff	                           jmp 0x400cf90	      3322	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_9	CALL_39
0x400d40e	      0xbf23000000	                           mov edi, 0x23	      3291	ops.c	FUNCTION_45	CALL_28
0x400d413	      0xe800000000	                          call 0x400d418	      3291	ops.c	FUNCTION_45	CALL_28
0x400d418	      0xe982f8ffff	                           jmp 0x400cc9f	      3291	ops.c	FUNCTION_45	CALL_28
0x400d41d	    0x8b1500000000	            mov edx, dword [0x0400d423] 	      3365	ops.c	FUNCTION_45	IF_39
0x400d423	            0x85d2	                           test edx, edx	      3365	ops.c	FUNCTION_45	IF_39
0x400d425	     0xf84bdf9ffff	                            je 0x400cde8	      3365	ops.c	FUNCTION_45	IF_39
0x400d42b	    0x4981ff000000	                              cmp r15, 0	      3366	ops.c	FUNCTION_45	IF_39
0x400d432	     0xf85b0f9ffff	                           jne 0x400cde8	      3366	ops.c	FUNCTION_45	IF_39
0x400d438	            0x31db	                            xor ebx, ebx	      3072	ops.c	FUNCTION_45
0x400d43a	      0xe94bf9ffff	                           jmp 0x400cd8a	      3072	ops.c	FUNCTION_45
0x400d43f	        0x89442408	                mov dword [rsp + 8], eax	      3072	ops.c	FUNCTION_45
0x400d443	      0xe800000000	                          call 0x400d448	      3078	ops.c	FUNCTION_45	IF_1	CALL_2
0x400d448	        0x8b442408	                mov eax, dword [rsp + 8]	      3079	ops.c	FUNCTION_45	IF_1
0x400d44c	      0xe97ffaffff	                           jmp 0x400ced0	      3079	ops.c	FUNCTION_45	IF_1
0x400d451	      0x41c6471001	                mov byte [r15 + 0x10], 1	      3262	ops.c	FUNCTION_45	IF_23	IF_25
0x400d456	            0x31d2	                            xor edx, edx	      3283	ops.c	FUNCTION_45	IF_23	ELSE_5
0x400d458	      0xe9ccf7ffff	                           jmp 0x400cc29	      3283	ops.c	FUNCTION_45	IF_23	ELSE_5
0x400d45d	          0x8d479f	                   lea eax, [rdi - 0x61]	       921	ops.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x400d460	          0x83f819	                           cmp eax, 0x19	       921	ops.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x400d463	     0xf87fa000000	                            ja 0x400d563	       921	ops.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x400d469	          0x83ef57	                           sub edi, 0x57	       922	ops.c	FUNCTION_15	ELSE_1	IF_3
0x400d46c	            0x31c0	                            xor eax, eax	       922	ops.c	FUNCTION_15	ELSE_1	IF_3
0x400d46e	      0xe96ffdffff	                           jmp 0x400d1e2	       922	ops.c	FUNCTION_15	ELSE_1	IF_3
0x400d473	    0x488b05000000	            mov rax, qword [0x0400d47a] 	      3108	ops.c	FUNCTION_45	IF_7
0x400d47a	          0x80386f	                    cmp byte [rax], 0x6f	      3108	ops.c	FUNCTION_45	IF_7
0x400d47d	     0xf8571f5ffff	                           jne 0x400c9f4	      3108	ops.c	FUNCTION_45	IF_7
0x400d483	      0xe9fafcffff	                           jmp 0x400d182	      3108	ops.c	FUNCTION_45	IF_7
0x400d488	    0x4981ff000000	                              cmp r15, 0	      3366	ops.c	FUNCTION_45	IF_39
0x400d48f	            0x74a7	                            je 0x400d438	      3366	ops.c	FUNCTION_45	IF_39
0x400d491	            0x31db	                            xor ebx, ebx	      3072	ops.c	FUNCTION_45
0x400d493	      0xe9c7f8ffff	                           jmp 0x400cd5f	      3072	ops.c	FUNCTION_45
0x400d498	            0x31db	                            xor ebx, ebx	      3253	ops.c	FUNCTION_45	IF_23	FOR_2
0x400d49a	      0xe95ef7ffff	                           jmp 0x400cbfd	      3253	ops.c	FUNCTION_45	IF_23	FOR_2
0x400d49f	      0xbf26000000	                           mov edi, 0x26	       940	ops.c	FUNCTION_15	ELSE_5	IF_7
0x400d4a4	      0xe939fdffff	                           jmp 0x400d1e2	       940	ops.c	FUNCTION_15	ELSE_5	IF_7
0x400d4a9	     0xf1f80000000	                         nop dword [rax]	       940	ops.c	FUNCTION_15	ELSE_5	IF_7
0x400d4b0	      0x418b442438	            mov eax, dword [r12 + 0x38] 	      3208	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x400d4b5	      0x4139442428	            cmp dword [r12 + 0x28], eax 	      3208	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x400d4ba	     0xf8590fbffff	                           jne 0x400d050	      3208	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x400d4c0	      0x418b54243c	            mov edx, dword [r12 + 0x3c] 	      3213	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x400d4c5	      0x412b54242c	             sub edx, dword [r12 + 0x2c]	      3213	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x400d4ca	      0x4103542414	             add edx, dword [r12 + 0x14]	      3213	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x400d4cf	        0x89542470	             mov dword [rsp + 0x70], edx	      3212	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x400d4d3	         0x3542474	             add edx, dword [rsp + 0x74]	      3212	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x400d4d7	    0x4181faffffff	                    cmp r10d, 0x7fffffff	      3226	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_20
0x400d4de	     0xf851cfaffff	                           jne 0x400cf00	      3226	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_20
0x400d4e4	      0xb901000000	                              mov ecx, 1	      3226	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_20
0x400d4e9	      0xe963f9ffff	                           jmp 0x400ce51	      3226	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_20
0x400d4ee	            0x6690	                                     nop	      3226	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_20
0x400d4f0	    0x488d9c24b000	                   lea rbx, [rsp + 0xb0]	      3306	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x400d4f8	            0x31ff	                            xor edi, edi	      3306	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x400d4fa	      0xba05000000	                              mov edx, 5	      3306	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x400d4ff	      0xbe00000000	                              mov esi, 0	      3306	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x400d504	      0xe800000000	                          call 0x400d509	      3306	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x400d509	            0x89e9	                            mov ecx, ebp	      3306	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x400d50b	          0x4889c2	                            mov rdx, rax	      3306	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x400d50e	      0xbe64000000	                           mov esi, 0x64	      3306	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x400d513	          0x4889df	                            mov rdi, rbx	      3306	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x400d516	            0x31c0	                            xor eax, eax	      3306	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x400d518	      0xe800000000	                          call 0x400d51d	      3306	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x400d51d	      0xe9a5feffff	                           jmp 0x400d3c7	      3306	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x400d522	      0xbf25000000	                           mov edi, 0x25	       934	ops.c	FUNCTION_15	ELSE_4	IF_6
0x400d527	      0xe9b6fcffff	                           jmp 0x400d1e2	       934	ops.c	FUNCTION_15	ELSE_4	IF_6
0x400d52c	    0x488b05000000	            mov rax, qword [0x0400d533] 	      3272	ops.c	FUNCTION_45	IF_23	IF_26	IF_27
0x400d533	        0x488b6808	                mov rbp, qword [rax + 8]	      3272	ops.c	FUNCTION_45	IF_23	IF_26	IF_27
0x400d537	        0x4883ed01	                              sub rbp, 1	      3272	ops.c	FUNCTION_45	IF_23	IF_26	IF_27
0x400d53b	      0xe97ef9ffff	                           jmp 0x400cebe	      3273	ops.c	FUNCTION_45	IF_23	IF_26	IF_27
0x400d540	    0x448b1d000000	           mov r11d, dword [0x0400d547] 	      3087	ops.c	FUNCTION_45	ELSE_1	IF_4
0x400d547	          0x4585db	                         test r11d, r11d	      3087	ops.c	FUNCTION_45	ELSE_1	IF_4
0x400d54a	     0xf8554f4ffff	                           jne 0x400c9a4	      3087	ops.c	FUNCTION_45	ELSE_1	IF_4
0x400d550	          0x83ff2b	                           cmp edi, 0x2b	      3087	ops.c	FUNCTION_45	ELSE_1	IF_4
0x400d553	     0xf84aefbffff	                            je 0x400d107	      3087	ops.c	FUNCTION_45	ELSE_1	IF_4
0x400d559	      0xe946f4ffff	                           jmp 0x400c9a4	      3087	ops.c	FUNCTION_45	ELSE_1	IF_4
0x400d55e	      0xe800000000	                          call 0x400d563	      3399	ops.c	FUNCTION_45
0x400d563	          0x8d47bf	                   lea eax, [rdi - 0x41]	       923	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_4
0x400d566	          0x83f819	                           cmp eax, 0x19	       923	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_4
0x400d569	            0x7717	                            ja 0x400d582	       923	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_4
0x400d56b	          0x83ef37	                           sub edi, 0x37	       925	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_5
0x400d56e	    0xc70500000000	               mov dword [0x0400d578], 1	       926	ops.c	FUNCTION_15	ELSE_2	IF_4
0x400d578	      0xb801000000	                              mov eax, 1	       926	ops.c	FUNCTION_15	ELSE_2	IF_4
0x400d57d	      0xe960fcffff	                           jmp 0x400d1e2	       926	ops.c	FUNCTION_15	ELSE_2	IF_4
0x400d582	          0x83ff2d	                           cmp edi, 0x2d	       928	ops.c	FUNCTION_15	ELSE_3	IF_5
0x400d585	     0xf859dfbffff	                           jne 0x400d128	       928	ops.c	FUNCTION_15	ELSE_3	IF_5
0x400d58b	            0x31c0	                            xor eax, eax	       928	ops.c	FUNCTION_15	ELSE_3	IF_5
0x400d58d	      0xbf24000000	                           mov edi, 0x24	       929	ops.c	FUNCTION_15	ELSE_3	IF_5
0x400d592	      0xe94bfcffff	                           jmp 0x400d1e2	       929	ops.c	FUNCTION_15	ELSE_3	IF_5
free_register	SWITCH,0:DO,0:ELSE,0:functions,0:FOR,0:IF,0:WHILE,0:CALL,2	65
0x40031d0	            0x4157	                                push r15	      1055	ops.c	FUNCTION_19
0x40031d2	            0x4156	                                push r14	      1055	ops.c	FUNCTION_19
0x40031d4	            0x4155	                                push r13	      1055	ops.c	FUNCTION_19
0x40031d6	            0x4154	                                push r12	      1055	ops.c	FUNCTION_19
0x40031d8	              0x55	                                push rbp	      1055	ops.c	FUNCTION_19
0x40031d9	              0x53	                                push rbx	      1055	ops.c	FUNCTION_19
0x40031da	          0x4889fb	                            mov rbx, rdi	      1055	ops.c	FUNCTION_19
0x40031dd	        0x4883ec18	                           sub rsp, 0x18	      1055	ops.c	FUNCTION_19
0x40031e1	    0x488b15000000	            mov rdx, qword [0x040031e8] 	      1058	ops.c	FUNCTION_19
0x40031e8	          0x488b3f	                    mov rdi, qword [rdi]	      1059	ops.c	FUNCTION_19
0x40031eb	          0x8b4214	            mov eax, dword [rdx + 0x14] 	      1058	ops.c	FUNCTION_19
0x40031ee	          0x4c8b3a	                    mov r15, qword [rdx]	      1058	ops.c	FUNCTION_19
0x40031f1	          0x4885ff	                           test rdi, rdi	      3012	ops.c	FUNCTION_43	IF_1
0x40031f4	          0x48893a	                    mov qword [rdx], rdi	      1059	ops.c	FUNCTION_19
0x40031f7	        0x4c8b7208	                mov r14, qword [rdx + 8]	      1058	ops.c	FUNCTION_19
0x40031fb	      0x440fb66a10	          movzx r13d, byte [rdx + 0x10] 	      1058	ops.c	FUNCTION_19
0x4003200	        0x89442404	                mov dword [rsp + 4], eax	      1058	ops.c	FUNCTION_19
0x4003204	        0x488b4218	            mov rax, qword [rdx + 0x18] 	      1058	ops.c	FUNCTION_19
0x4003208	      0x4889442408	                mov qword [rsp + 8], rax	      1058	ops.c	FUNCTION_19
0x400320d	        0x488b4308	                mov rax, qword [rbx + 8]	      1059	ops.c	FUNCTION_19
0x4003211	        0x48894208	                mov qword [rdx + 8], rax	      1059	ops.c	FUNCTION_19
0x4003215	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	      1059	ops.c	FUNCTION_19
0x4003219	        0x48894a10	             mov qword [rdx + 0x10], rcx	      1059	ops.c	FUNCTION_19
0x400321d	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	      1059	ops.c	FUNCTION_19
0x4003221	        0x48894a18	             mov qword [rdx + 0x18], rcx	      1059	ops.c	FUNCTION_19
0x4003225	            0x745c	                            je 0x4003283	      3012	ops.c	FUNCTION_43	IF_1
0x4003227	        0x4883e801	                              sub rax, 1	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x400322b	          0x4989c4	                            mov r12, rax	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x400322e	            0x7840	                            js 0x4003270	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4003230	    0x488d2cc50000	                        lea rbp, [rax*8]	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4003238	            0xeb10	                           jmp 0x400324a	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x400323a	    0x660f1f440000	                    nop word [rax + rax]	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4003240	    0x488b0d000000	            mov rcx, qword [0x04003247] 	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4003247	          0x488b39	                    mov rdi, qword [rcx]	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x400324a	        0x488b3c2f	              mov rdi, qword [rdi + rbp]	      3032	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x400324e	        0x4983ec01	                              sub r12, 1	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4003252	        0x4883ed08	                              sub rbp, 8	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4003256	      0xe800000000	                          call 0x400325b	      3032	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x400325b	        0x4983fcff	             cmp r12, 0xffffffffffffffff	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x400325f	            0x75df	                           jne 0x4003240	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4003261	    0x488b05000000	            mov rax, qword [0x04003268] 	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4003268	          0x488b38	                    mov rdi, qword [rax]	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x400326b	          0x4885ff	                           test rdi, rdi	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x400326e	            0x7413	                            je 0x4003283	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4003270	      0xe800000000	                          call 0x4003275	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4003275	    0x488b05000000	            mov rax, qword [0x0400327c] 	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x400327c	    0x48c700000000	                      mov qword [rax], 0	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4003283	          0x4889df	                            mov rdi, rbx	      1061	ops.c	FUNCTION_19	CALL_2
0x4003286	      0xe800000000	                          call 0x400328b	      1061	ops.c	FUNCTION_19	CALL_2
0x400328b	    0x488b05000000	            mov rax, qword [0x04003292] 	      1062	ops.c	FUNCTION_19
0x4003292	        0x8b742404	                mov esi, dword [rsp + 4]	      1062	ops.c	FUNCTION_19
0x4003296	          0x897014	             mov dword [rax + 0x14], esi	      1062	ops.c	FUNCTION_19
0x4003299	      0x488b742408	                mov rsi, qword [rsp + 8]	      1062	ops.c	FUNCTION_19
0x400329e	          0x4c8938	                    mov qword [rax], r15	      1062	ops.c	FUNCTION_19
0x40032a1	        0x4c897008	                mov qword [rax + 8], r14	      1062	ops.c	FUNCTION_19
0x40032a5	        0x44886810	             mov byte [rax + 0x10], r13b	      1062	ops.c	FUNCTION_19
0x40032a9	        0x48897018	             mov qword [rax + 0x18], rsi	      1062	ops.c	FUNCTION_19
0x40032ad	        0x4883c418	                           add rsp, 0x18	      1063	ops.c	FUNCTION_19
0x40032b1	              0x5b	                                 pop rbx	      1063	ops.c	FUNCTION_19
0x40032b2	              0x5d	                                 pop rbp	      1063	ops.c	FUNCTION_19
0x40032b3	            0x415c	                                 pop r12	      1063	ops.c	FUNCTION_19
0x40032b5	            0x415d	                                 pop r13	      1063	ops.c	FUNCTION_19
0x40032b7	            0x415e	                                 pop r14	      1063	ops.c	FUNCTION_19
0x40032b9	            0x415f	                                 pop r15	      1063	ops.c	FUNCTION_19
0x40032bb	              0xc3	                                     ret	      1063	ops.c	FUNCTION_19
clip_yank_selection	SWITCH,0:DO,0:ELSE,1:functions,0:FOR,0:IF,1:WHILE,0:CALL,2	61
0x400bff0	            0x4157	                                push r15	      6635	ops.c	FUNCTION_76
0x400bff2	            0x4156	                                push r14	      6635	ops.c	FUNCTION_76
0x400bff4	          0x4989d7	                            mov r15, rdx	      6635	ops.c	FUNCTION_76
0x400bff7	            0x4155	                                push r13	      6635	ops.c	FUNCTION_76
0x400bff9	            0x4154	                                push r12	      6635	ops.c	FUNCTION_76
0x400bffb	          0x4989f6	                            mov r14, rsi	      6635	ops.c	FUNCTION_76
0x400bffe	              0x55	                                push rbp	      6635	ops.c	FUNCTION_76
0x400bfff	              0x53	                                push rbx	      6635	ops.c	FUNCTION_76
0x400c000	      0xbd00000000	                              mov ebp, 0	      6641	ops.c	FUNCTION_76	ELSE_1
0x400c005	        0x4883ec18	                           sub rsp, 0x18	      6635	ops.c	FUNCTION_76
0x400c009	    0x4881f9000000	                              cmp rcx, 0	      6638	ops.c	FUNCTION_76	IF_1
0x400c010	    0x4c8b25000000	            mov r12, qword [0x0400c017] 	      6554	ops.c	FUNCTION_74
0x400c017	        0x897c240c	              mov dword [rsp + 0xc], edi	      6635	ops.c	FUNCTION_76
0x400c01b	     0xf84a7000000	                            je 0x400c0c8	      6638	ops.c	FUNCTION_76	IF_1
0x400c021	        0x488b7d00	                    mov rdi, qword [rbp]	      3012	ops.c	FUNCTION_43	IF_1
0x400c025	    0x48892d000000	            mov qword [0x0400c02c], rbp 	      3012	ops.c	FUNCTION_43	IF_1
0x400c02c	        0x488b5d08	                mov rbx, qword [rbp + 8]	      3045	ops.c	FUNCTION_44	CALL_1
0x400c030	          0x4885ff	                           test rdi, rdi	      3012	ops.c	FUNCTION_43	IF_1
0x400c033	     0xf84a7000000	                            je 0x400c0e0	      3012	ops.c	FUNCTION_43	IF_1
0x400c039	        0x4883eb01	                              sub rbx, 1	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x400c03d	            0x7841	                            js 0x400c080	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x400c03f	    0x4c8d2cdd0000	                        lea r13, [rbx*8]	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x400c047	            0xeb11	                           jmp 0x400c05a	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x400c049	     0xf1f80000000	                         nop dword [rax]	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x400c050	    0x488b15000000	            mov rdx, qword [0x0400c057] 	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x400c057	          0x488b3a	                    mov rdi, qword [rdx]	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x400c05a	        0x4a8b3c2f	              mov rdi, qword [rdi + r13]	      3032	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x400c05e	        0x4883eb01	                              sub rbx, 1	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x400c062	        0x4983ed08	                              sub r13, 8	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x400c066	      0xe800000000	                          call 0x400c06b	      3032	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x400c06b	        0x4883fbff	             cmp rbx, 0xffffffffffffffff	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x400c06f	            0x75df	                           jne 0x400c050	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x400c071	    0x488b05000000	            mov rax, qword [0x0400c078] 	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x400c078	          0x488b38	                    mov rdi, qword [rax]	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x400c07b	          0x4885ff	                           test rdi, rdi	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x400c07e	            0x7413	                            je 0x400c093	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x400c080	      0xe800000000	                          call 0x400c085	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x400c085	    0x488b05000000	            mov rax, qword [0x0400c08c] 	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x400c08c	    0x48c700000000	                      mov qword [rax], 0	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x400c093	    0x48c740080000	                  mov qword [rax + 8], 0	      6561	ops.c	FUNCTION_74
0x400c09b	    0x4c8925000000	            mov qword [0x0400c0a2], r12 	      6562	ops.c	FUNCTION_74
0x400c0a2	          0x4c89f9	                            mov rcx, r15	      6645	ops.c	FUNCTION_76	CALL_2
0x400c0a5	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      6645	ops.c	FUNCTION_76	CALL_2
0x400c0a9	        0x4883c418	                           add rsp, 0x18	      6646	ops.c	FUNCTION_76
0x400c0ad	          0x4c89f2	                            mov rdx, r14	      6645	ops.c	FUNCTION_76	CALL_2
0x400c0b0	              0x5b	                                 pop rbx	      6646	ops.c	FUNCTION_76
0x400c0b1	          0x4889ef	                            mov rdi, rbp	      6645	ops.c	FUNCTION_76	CALL_2
0x400c0b4	          0x4531c0	                            xor r8d, r8d	      6645	ops.c	FUNCTION_76	CALL_2
0x400c0b7	              0x5d	                                 pop rbp	      6646	ops.c	FUNCTION_76
0x400c0b8	            0x415c	                                 pop r12	      6646	ops.c	FUNCTION_76
0x400c0ba	            0x415d	                                 pop r13	      6646	ops.c	FUNCTION_76
0x400c0bc	            0x415e	                                 pop r14	      6646	ops.c	FUNCTION_76
0x400c0be	            0x415f	                                 pop r15	      6646	ops.c	FUNCTION_76
0x400c0c0	      0xe91b54ffff	         jmp sym.str_to_reg.constprop.13	      6645	ops.c	FUNCTION_76	CALL_2
0x400c0c5	           0xf1f00	                         nop dword [rax]	      6645	ops.c	FUNCTION_76	CALL_2
0x400c0c8	    0x4c8b25000000	            mov r12, qword [0x0400c0cf] 	      6554	ops.c	FUNCTION_74
0x400c0cf	      0xbd00000000	                              mov ebp, 0	      6639	ops.c	FUNCTION_76	IF_1
0x400c0d4	      0xe948ffffff	                           jmp 0x400c021	      6639	ops.c	FUNCTION_76	IF_1
0x400c0d9	     0xf1f80000000	                         nop dword [rax]	      6639	ops.c	FUNCTION_76	IF_1
0x400c0e0	          0x4889e8	                            mov rax, rbp	      3012	ops.c	FUNCTION_43	IF_1
0x400c0e3	            0xebae	                           jmp 0x400c093	      3012	ops.c	FUNCTION_43	IF_1
op_replace	SWITCH,0:DO,0:ELSE,8:functions,0:FOR,2:IF,30:WHILE,2:CALL,43	501
0x4003d00	            0x4157	                                push r15	      2131	ops.c	FUNCTION_35
0x4003d02	            0x4156	                                push r14	      2131	ops.c	FUNCTION_35
0x4003d04	            0x4155	                                push r13	      2131	ops.c	FUNCTION_35
0x4003d06	            0x4154	                                push r12	      2131	ops.c	FUNCTION_35
0x4003d08	              0x55	                                push rbp	      2131	ops.c	FUNCTION_35
0x4003d09	              0x53	                                push rbx	      2131	ops.c	FUNCTION_35
0x4003d0a	    0x4881ec880000	                           sub rsp, 0x88	      2131	ops.c	FUNCTION_35
0x4003d11	    0x488b15000000	            mov rdx, qword [0x04003d18] 	      2142	ops.c	FUNCTION_35	IF_1
0x4003d18	    0x64488b042528	                mov rax, qword fs:[0x28]	      2131	ops.c	FUNCTION_35
0x4003d21	      0x4889442478	             mov qword [rsp + 0x78], rax	      2131	ops.c	FUNCTION_35
0x4003d26	            0x31c0	                            xor eax, eax	      2131	ops.c	FUNCTION_35
0x4003d28	      0xb801000000	                              mov eax, 1	      2143	ops.c	FUNCTION_35	IF_1
0x4003d2d	        0xf6421001	               test byte [rdx + 0x10], 1	      2142	ops.c	FUNCTION_35	IF_1
0x4003d31	     0xf857c030000	                           jne 0x40040b3	      2142	ops.c	FUNCTION_35	IF_1
0x4003d37	          0x8b5758	            mov edx, dword [rdi + 0x58] 	      2142	ops.c	FUNCTION_35	IF_1
0x4003d3a	          0x4889fd	                            mov rbp, rdi	      2142	ops.c	FUNCTION_35	IF_1
0x4003d3d	            0x85d2	                           test edx, edx	      2142	ops.c	FUNCTION_35	IF_1
0x4003d3f	     0xf856e030000	                           jne 0x40040b3	      2142	ops.c	FUNCTION_35	IF_1
0x4003d45	          0x83feff	             cmp esi, 0xffffffffffffffff	      2145	ops.c	FUNCTION_35	IF_2
0x4003d48	          0x4189f5	                           mov r13d, esi	      2145	ops.c	FUNCTION_35	IF_2
0x4003d4b	     0xf84c7050000	                            je 0x4004318	      2145	ops.c	FUNCTION_35	IF_2
0x4003d51	          0x83fefe	             cmp esi, 0xfffffffffffffffe	      2150	ops.c	FUNCTION_35	ELSE_1	IF_3
0x4003d54	     0xf8486030000	                            je 0x40040e0	      2150	ops.c	FUNCTION_35	ELSE_1	IF_3
0x4003d5a	    0xc74424100000	               mov dword [rsp + 0x10], 0	      2140	ops.c	FUNCTION_35
0x4003d62	    0x8b0500000000	            mov eax, dword [0x04003d68] 	      2157	ops.c	FUNCTION_35	IF_4
0x4003d68	            0x85c0	                           test eax, eax	      2157	ops.c	FUNCTION_35	IF_4
0x4003d6a	            0x740b	                            je 0x4003d77	      2157	ops.c	FUNCTION_35	IF_4
0x4003d6c	          0x8b4514	            mov eax, dword [rbp + 0x14] 	      2117	ops.c	ELSE_6	FUNCTION_34	IF_1
0x4003d6f	            0x85c0	                           test eax, eax	      2117	ops.c	ELSE_6	FUNCTION_34	IF_1
0x4003d71	     0xf8599060000	                           jne 0x4004410	      2117	ops.c	ELSE_6	FUNCTION_34	IF_1
0x4003d77	        0x488b4530	            mov rax, qword [rbp + 0x30] 	      2161	ops.c	FUNCTION_35	IF_5	CALL_2
0x4003d7b	        0x488d7001	                      lea rsi, [rax + 1]	      2161	ops.c	FUNCTION_35	IF_5	CALL_2
0x4003d7f	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      2161	ops.c	FUNCTION_35	IF_5	CALL_2
0x4003d83	        0x488d78ff	                      lea rdi, [rax - 1]	      2161	ops.c	FUNCTION_35	IF_5	CALL_2
0x4003d87	      0xe800000000	                          call 0x4003d8c	      2161	ops.c	FUNCTION_35	IF_5	CALL_2
0x4003d8c	            0x85c0	                           test eax, eax	      2161	ops.c	FUNCTION_35	IF_5	CALL_2
0x4003d8e	     0xf841f030000	                            je 0x40040b3	      2161	ops.c	FUNCTION_35	IF_5	CALL_2
0x4003d94	          0x8b4560	            mov eax, dword [rbp + 0x60] 	      2168	ops.c	FUNCTION_35	IF_6
0x4003d97	            0x85c0	                           test eax, eax	      2168	ops.c	FUNCTION_35	IF_6
0x4003d99	     0xf84e9030000	                            je 0x4004188	      2168	ops.c	FUNCTION_35	IF_6
0x4003d9f	    0x488b05000000	            mov rax, qword [0x04003da6] 	      2170	ops.c	FUNCTION_35	IF_6
0x4003da6	            0x31d2	                            xor edx, edx	      2170	ops.c	FUNCTION_35	IF_6
0x4003da8	    0x817848ffffff	     cmp dword [rax + 0x48], 0x7fffffff 	      2170	ops.c	FUNCTION_35	IF_6
0x4003daf	           0xf94c2	                                 sete dl	      2170	ops.c	FUNCTION_35	IF_6
0x4003db2	        0x89542458	             mov dword [rsp + 0x58], edx	      2170	ops.c	FUNCTION_35	IF_6
0x4003db6	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2171	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003dba	        0x483b5530	            cmp rdx, qword [rbp + 0x30] 	      2171	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003dbe	     0xf8f8c020000	                            jg 0x4004050	      2171	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003dc4	        0x4183fd0d	                           cmp r13d, 0xd	      2244	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13
0x4003dc8	    0x48c744240800	                  mov qword [rsp + 8], 0	      2244	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13
0x4003dd1	        0x400f95c6	                               setne sil	      2244	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13
0x4003dd5	        0x4183fd0a	                           cmp r13d, 0xa	      2244	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13
0x4003dd9	           0xf95c1	                                setne cl	      2244	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13
0x4003ddc	            0x21ce	                            and esi, ecx	      2244	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13
0x4003dde	      0x408874241f	              mov byte [rsp + 0x1f], sil	      2244	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13
0x4003de3	       0xf1f440000	                   nop dword [rax + rax]	      2244	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13
0x4003de8	      0x488d742430	                   lea rsi, [rsp + 0x30]	      2174	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_3
0x4003ded	    0xc74040000000	               mov dword [rax + 0x40], 0	      2173	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003df4	      0xb901000000	                              mov ecx, 1	      2174	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_3
0x4003df9	          0x4889ef	                            mov rdi, rbp	      2174	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_3
0x4003dfc	      0xe83fc2ffff	                     call sym.block_prep	      2174	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_3
0x4003e01	        0x8b442438	            mov eax, dword [rsp + 0x38] 	      2175	ops.c	FUNCTION_35	IF_6	FOR_1	IF_7
0x4003e05	            0x85c0	                           test eax, eax	      2175	ops.c	FUNCTION_35	IF_6	FOR_1	IF_7
0x4003e07	     0xf85eb020000	                           jne 0x40040f8	      2175	ops.c	FUNCTION_35	IF_6	FOR_1	IF_7
0x4003e0d	    0x448b3d000000	           mov r15d, dword [0x04003e14] 	      2175	ops.c	FUNCTION_35	IF_6	FOR_1	IF_7
0x4003e14	          0x4585ff	                         test r15d, r15d	      2175	ops.c	FUNCTION_35	IF_6	FOR_1	IF_7
0x4003e17	     0xf840c020000	                            je 0x4004029	      2175	ops.c	FUNCTION_35	IF_6	FOR_1	IF_7
0x4003e1d	      0x448b742458	           mov r14d, dword [rsp + 0x58] 	      2175	ops.c	FUNCTION_35	IF_6	FOR_1	IF_7
0x4003e22	          0x4585f6	                         test r14d, r14d	      2175	ops.c	FUNCTION_35	IF_6	FOR_1	IF_7
0x4003e25	     0xf85fe010000	                           jne 0x4004029	      2175	ops.c	FUNCTION_35	IF_6	FOR_1	IF_7
0x4003e2b	        0x8b542454	            mov edx, dword [rsp + 0x54] 	      2185	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4003e2f	            0x85d2	                           test edx, edx	      2185	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4003e31	            0x7415	                            je 0x4003e48	      2185	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4003e33	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      2185	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4003e38	          0x803800	                       cmp byte [rax], 0	      2185	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4003e3b	     0xf8407060000	                            je 0x4004448	      2185	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4003e41	     0xf1f80000000	                         nop dword [rax]	      2185	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4003e48	        0x8b5c2430	            mov ebx, dword [rsp + 0x30] 	      2197	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_2
0x4003e4c	          0x4531e4	                          xor r12d, r12d	      2197	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_2
0x4003e4f	            0x85db	                           test ebx, ebx	      2197	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_2
0x4003e51	            0x7408	                            je 0x4003e5b	      2197	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_2
0x4003e53	        0x8b44246c	            mov eax, dword [rsp + 0x6c] 	      2197	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_2
0x4003e57	        0x448d60ff	                     lea r12d, [rax - 1]	      2197	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_2
0x4003e5b	        0x8b442434	            mov eax, dword [rsp + 0x34] 	      2200	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003e5f	            0x85c0	                           test eax, eax	      2204	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003e61	            0x7418	                            je 0x4003e7b	      2204	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003e63	        0x8b44245c	            mov eax, dword [rsp + 0x5c] 	      2202	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003e67	            0x85c0	                           test eax, eax	      2202	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003e69	     0xf85a9020000	                           jne 0x4004118	      2202	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003e6f	        0x8b4c2468	            mov ecx, dword [rsp + 0x68] 	      2204	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003e73	          0x8d71ff	                      lea esi, [rcx - 1]	      2204	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003e76	            0x85c9	                           test ecx, ecx	      2204	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003e78	           0xf4fc6	                          cmovg eax, esi	      2204	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003e7b	          0x4101c4	                           add r12d, eax	      2200	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003e7e	          0x8b4568	            mov eax, dword [rbp + 0x68] 	      2206	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003e81	            0x89c3	                            mov ebx, eax	      2206	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003e83	          0x2b5d64	             sub ebx, dword [rbp + 0x64]	      2206	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003e86	          0x83c301	                              add ebx, 1	      2206	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003e89	            0x85d2	                           test edx, edx	      2207	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x4003e8b	            0x741f	                            je 0x4003eac	      2207	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x4003e8d	    0x448b1d000000	           mov r11d, dword [0x04003e94] 	      2207	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x4003e94	          0x4585db	                         test r11d, r11d	      2207	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x4003e97	            0x740a	                            je 0x4003ea3	      2207	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x4003e99	      0x448b542458	           mov r10d, dword [rsp + 0x58] 	      2207	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x4003e9e	          0x4585d2	                         test r10d, r10d	      2207	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x4003ea1	            0x7409	                            je 0x4003eac	      2207	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x4003ea3	        0x2b442450	             sub eax, dword [rsp + 0x50]	      2208	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x4003ea7	          0x83c001	                              add eax, 1	      2208	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x4003eaa	            0x29c3	                            sub ebx, eax	      2208	ops.c	FUNCTION_35	IF_6	FOR_1	IF_9
0x4003eac	          0x4489ef	                           mov edi, r13d	      2213	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10
0x4003eaf	    0xff1500000000	                 call qword [0x04003eb5]	      2213	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10
0x4003eb5	          0x83f801	                              cmp eax, 1	      2213	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10
0x4003eb8	            0x7e21	                           jle 0x4003edb	      2213	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10
0x4003eba	          0xf6c301	                              test bl, 1	      2215	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10	IF_11
0x4003ebd	            0x7413	                            je 0x4003ed2	      2215	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10	IF_11
0x4003ebf	      0x448b4c2454	            mov r9d, dword [rsp + 0x54] 	      2215	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10	IF_11
0x4003ec4	          0x4585c9	                           test r9d, r9d	      2215	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10	IF_11
0x4003ec7	            0x7509	                           jne 0x4003ed2	      2215	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10	IF_11
0x4003ec9	      0x8344243401	               add dword [rsp + 0x34], 1	      2217	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10	IF_11
0x4003ece	        0x4183c401	                             add r12d, 1	      2218	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10	IF_11
0x4003ed2	            0x89d8	                            mov eax, ebx	      2220	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10
0x4003ed4	          0xc1e81f	                           shr eax, 0x1f	      2220	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10
0x4003ed7	             0x1c3	                            add ebx, eax	      2220	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10
0x4003ed9	            0xd1fb	                              sar ebx, 1	      2220	ops.c	FUNCTION_35	IF_6	FOR_1	IF_10
0x4003edb	          0x4489ef	                           mov edi, r13d	      2225	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003ede	    0xff1500000000	                 call qword [0x04003ee4]	      2225	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003ee4	           0xfafc3	                           imul eax, ebx	      2225	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003ee7	        0x89442414	             mov dword [rsp + 0x14], eax	      2225	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003eeb	        0x2b442438	             sub eax, dword [rsp + 0x38]	      2228	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003eef	          0x4101c4	                           add r12d, eax	      2228	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003ef2	      0xe800000000	                          call 0x4003ef7	      2230	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_5
0x4003ef7	          0x4889c7	                            mov rdi, rax	      2231	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_6
0x4003efa	          0x4989c7	                            mov r15, rax	      2230	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_5
0x4003efd	      0xe800000000	                          call 0x4003f02	      2231	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_6
0x4003f02	          0x4889c2	                            mov rdx, rax	      2231	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_6
0x4003f05	      0x418d440401	                lea eax, [r12 + rax + 1]	      2232	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_7
0x4003f0a	        0x48891424	                    mov qword [rsp], rdx	      2232	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_7
0x4003f0e	            0x89c7	                            mov edi, eax	      2232	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_7
0x4003f10	        0x89442418	             mov dword [rsp + 0x18], eax	      2232	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_7
0x4003f14	      0xe800000000	                          call 0x4003f19	      2232	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_7
0x4003f19	          0x4885c0	                           test rax, rax	      2233	ops.c	FUNCTION_35	IF_6	FOR_1	IF_12
0x4003f1c	          0x4989c6	                            mov r14, rax	      2232	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_7
0x4003f1f	     0xf8404010000	                            je 0x4004029	      2233	ops.c	FUNCTION_35	IF_6	FOR_1	IF_12
0x4003f25	        0x488b1424	                    mov rdx, qword [rsp]	        90	string3.h	FUNCTION_95	CALL_6
0x4003f29	          0x4d63e4	                        movsxd r12, r12d	        90	string3.h	FUNCTION_95	CALL_6
0x4003f2c	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_95	CALL_6
0x4003f2e	          0x4889c7	                            mov rdi, rax	        90	string3.h	FUNCTION_95	CALL_6
0x4003f31	      0x4a8d542201	                lea rdx, [rdx + r12 + 1]	        90	string3.h	FUNCTION_95	CALL_6
0x4003f36	      0xe800000000	                          call 0x4003f3b	        90	string3.h	FUNCTION_95	CALL_6
0x4003f3b	      0x4863542448	         movsxd rdx, dword [rsp + 0x48] 	        59	string3.h	FUNCTION_93	CALL_3
0x4003f40	          0x4c89fe	                            mov rsi, r15	        59	string3.h	FUNCTION_93	CALL_3
0x4003f43	          0x4c89f7	                            mov rdi, r14	        59	string3.h	FUNCTION_93	CALL_3
0x4003f46	      0xe800000000	                          call 0x4003f4b	        59	string3.h	FUNCTION_93	CALL_3
0x4003f4b	      0x48637c2448	         movsxd rdi, dword [rsp + 0x48] 	      2238	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003f50	        0x8b442438	            mov eax, dword [rsp + 0x38] 	      2238	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003f54	      0xbe20000000	                           mov esi, 0x20	        90	string3.h	FUNCTION_95	CALL_6
0x4003f59	      0x4863542430	         movsxd rdx, dword [rsp + 0x30] 	        90	string3.h	FUNCTION_95	CALL_6
0x4003f5e	             0x1f8	                            add eax, edi	      2238	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003f60	          0x4c01f7	                            add rdi, r14	        90	string3.h	FUNCTION_95	CALL_6
0x4003f63	            0x4898	                                    cdqe	      2238	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003f65	          0x4901c7	                            add r15, rax	      2238	ops.c	FUNCTION_35	IF_6	FOR_1
0x4003f68	      0xe800000000	                          call 0x4003f6d	        90	string3.h	FUNCTION_95	CALL_6
0x4003f6d	      0x448b442410	            mov r8d, dword [rsp + 0x10] 	      2244	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13
0x4003f72	          0x4c89f7	                            mov rdi, r14	      2249	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	CALL_11
0x4003f75	          0x4585c0	                           test r8d, r8d	      2244	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13
0x4003f78	            0x750b	                           jne 0x4003f85	      2244	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13
0x4003f7a	      0x807c241f00	                cmp byte [rsp + 0x1f], 0	      2244	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13
0x4003f7f	     0xf84ab030000	                            je 0x4004330	      2244	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13
0x4003f85	    0x8b3500000000	            mov esi, dword [0x04003f8b] 	      2247	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14
0x4003f8b	            0x85f6	                           test esi, esi	      2247	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14
0x4003f8d	     0xf84d5010000	                            je 0x4004168	      2247	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14
0x4003f93	      0xe800000000	                          call 0x4003f98	      2249	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	CALL_11
0x4003f98	          0x83eb01	                              sub ebx, 1	      2250	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x4003f9b	          0x4189c4	                           mov r12d, eax	      2249	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	CALL_11
0x4003f9e	            0x781a	                            js 0x4003fba	      2250	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x4003fa0	          0x4963f4	                        movsxd rsi, r12d	      2251	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x4003fa3	          0x83eb01	                              sub ebx, 1	      2250	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x4003fa6	          0x4489ef	                           mov edi, r13d	      2251	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x4003fa9	          0x4c01f6	                            add rsi, r14	      2251	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x4003fac	    0xff1500000000	                 call qword [0x04003fb2]	      2251	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x4003fb2	          0x4101c4	                           add r12d, eax	      2251	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x4003fb5	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      2250	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x4003fb8	            0x75e6	                           jne 0x4003fa0	      2250	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_14	WHILE_1
0x4003fba	        0x8b4c2454	            mov ecx, dword [rsp + 0x54] 	      2256	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15
0x4003fbe	            0x85c9	                           test ecx, ecx	      2256	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15
0x4003fc0	     0xf845a010000	                            je 0x4004120	      2256	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15
0x4003fc6	    0x488b05000000	            mov rax, qword [0x04003fcd] 	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4003fcd	            0x31d2	                            xor edx, edx	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4003fcf	          0x4c89f6	                            mov rsi, r14	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4003fd2	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4003fd6	      0xe800000000	                          call 0x4003fdb	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4003fdb	    0x48837c240800	                  cmp qword [rsp + 8], 0	      2274	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17
0x4003fe1	            0x7446	                            je 0x4004029	      2274	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17
0x4003fe3	    0x488b05000000	            mov rax, qword [0x04003fea] 	      2276	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_22
0x4003fea	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      2276	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_22
0x4003fef	            0x31c9	                            xor ecx, ecx	      2276	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_22
0x4003ff1	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      2276	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_22
0x4003ff5	          0x4889de	                            mov rsi, rbx	      2276	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_22
0x4003ff8	        0x488d5701	                      lea rdx, [rdi + 1]	      2276	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_22
0x4003ffc	        0x48895038	             mov qword [rax + 0x38], rdx	      2276	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_22
0x4004000	            0x31d2	                            xor edx, edx	      2276	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_22
0x4004002	      0xe800000000	                          call 0x4004007	      2276	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_22
0x4004007	    0x488b05000000	            mov rax, qword [0x0400400e] 	      2277	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_23
0x400400e	      0xbe01000000	                              mov esi, 1	      2277	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_23
0x4004013	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      2277	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_23
0x4004017	      0xe800000000	                          call 0x400401c	      2277	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_23
0x400401c	      0x4883453001	               add qword [rbp + 0x30], 1	      2278	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17
0x4004021	          0x4889df	                            mov rdi, rbx	      2279	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_24
0x4004024	      0xe800000000	                          call 0x4004029	      2279	ops.c	FUNCTION_35	IF_6	FOR_1	IF_17	CALL_24
0x4004029	    0x488b05000000	            mov rax, qword [0x04004030] 	      2171	ops.c	FUNCTION_35	IF_6	FOR_1
0x4004030	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      2171	ops.c	FUNCTION_35	IF_6	FOR_1
0x4004034	        0x488d5101	                      lea rdx, [rcx + 1]	      2171	ops.c	FUNCTION_35	IF_6	FOR_1
0x4004038	        0x48395530	            cmp qword [rbp + 0x30], rdx 	      2171	ops.c	FUNCTION_35	IF_6	FOR_1
0x400403c	        0x48895038	             mov qword [rax + 0x38], rdx	      2171	ops.c	FUNCTION_35	IF_6	FOR_1
0x4004040	     0xf8da2fdffff	                           jge 0x4003de8	      2171	ops.c	FUNCTION_35	IF_6	FOR_1
0x4004046	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2171	ops.c	FUNCTION_35	IF_6	FOR_1
0x4004050	        0x488b4d20	            mov rcx, qword [rbp + 0x20] 	      2370	ops.c	FUNCTION_35
0x4004054	        0x488b5d28	            mov rbx, qword [rbp + 0x28] 	      2370	ops.c	FUNCTION_35
0x4004058	        0x48894838	             mov qword [rax + 0x38], rcx	      2370	ops.c	FUNCTION_35
0x400405c	        0x48895840	             mov qword [rax + 0x40], rbx	      2370	ops.c	FUNCTION_35
0x4004060	      0xe800000000	                          call 0x4004065	      2371	ops.c	FUNCTION_35	CALL_42
0x4004065	        0x488b4530	            mov rax, qword [rbp + 0x30] 	      2372	ops.c	FUNCTION_35	CALL_43
0x4004069	          0x8b7528	            mov esi, dword [rbp + 0x28] 	      2372	ops.c	FUNCTION_35	CALL_43
0x400406c	            0x31c9	                            xor ecx, ecx	      2372	ops.c	FUNCTION_35	CALL_43
0x400406e	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	      2372	ops.c	FUNCTION_35	CALL_43
0x4004072	        0x488d5001	                      lea rdx, [rax + 1]	      2372	ops.c	FUNCTION_35	CALL_43
0x4004076	      0xe800000000	                          call 0x400407b	      2372	ops.c	FUNCTION_35	CALL_43
0x400407b	    0x488b05000000	            mov rax, qword [0x04004082] 	      2375	ops.c	FUNCTION_35
0x4004082	        0x488b4d20	            mov rcx, qword [rbp + 0x20] 	      2375	ops.c	FUNCTION_35
0x4004086	        0x488b5d28	            mov rbx, qword [rbp + 0x28] 	      2375	ops.c	FUNCTION_35
0x400408a	    0x488988e01100	          mov qword [rax + 0x11e0], rcx 	      2375	ops.c	FUNCTION_35
0x4004091	        0x488b4d30	            mov rcx, qword [rbp + 0x30] 	      2376	ops.c	FUNCTION_35
0x4004095	    0x488998e81100	          mov qword [rax + 0x11e8], rbx 	      2375	ops.c	FUNCTION_35
0x400409c	        0x488b5d38	            mov rbx, qword [rbp + 0x38] 	      2376	ops.c	FUNCTION_35
0x40040a0	    0x488988001200	          mov qword [rax + 0x1200], rcx 	      2376	ops.c	FUNCTION_35
0x40040a7	    0x488998081200	          mov qword [rax + 0x1208], rbx 	      2376	ops.c	FUNCTION_35
0x40040ae	      0xb801000000	                              mov eax, 1	      2378	ops.c	FUNCTION_35
0x40040b3	      0x488b4c2478	            mov rcx, qword [rsp + 0x78] 	      2379	ops.c	FUNCTION_35
0x40040b8	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2379	ops.c	FUNCTION_35
0x40040c1	     0xf8571040000	                           jne 0x4004538	      2379	ops.c	FUNCTION_35
0x40040c7	    0x4881c4880000	                           add rsp, 0x88	      2379	ops.c	FUNCTION_35
0x40040ce	              0x5b	                                 pop rbx	      2379	ops.c	FUNCTION_35
0x40040cf	              0x5d	                                 pop rbp	      2379	ops.c	FUNCTION_35
0x40040d0	            0x415c	                                 pop r12	      2379	ops.c	FUNCTION_35
0x40040d2	            0x415d	                                 pop r13	      2379	ops.c	FUNCTION_35
0x40040d4	            0x415e	                                 pop r14	      2379	ops.c	FUNCTION_35
0x40040d6	            0x415f	                                 pop r15	      2379	ops.c	FUNCTION_35
0x40040d8	              0xc3	                                     ret	      2379	ops.c	FUNCTION_35
0x40040d9	     0xf1f80000000	                         nop dword [rax]	      2379	ops.c	FUNCTION_35
0x40040e0	    0xc74424100100	               mov dword [rsp + 0x10], 1	      2152	ops.c	FUNCTION_35	ELSE_1	IF_3
0x40040e8	    0x41bd0a000000	                           mov r13d, 0xa	      2153	ops.c	FUNCTION_35	ELSE_1	IF_3
0x40040ee	      0xe96ffcffff	                           jmp 0x4003d62	      2153	ops.c	FUNCTION_35	ELSE_1	IF_3
0x40040f3	       0xf1f440000	                   nop dword [rax + rax]	      2153	ops.c	FUNCTION_35	ELSE_1	IF_3
0x40040f8	    0x448b25000000	           mov r12d, dword [0x040040ff] 	      2185	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x40040ff	        0x8b542454	            mov edx, dword [rsp + 0x54] 	      2185	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4004103	          0x4585e4	                         test r12d, r12d	      2185	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4004106	     0xf843cfdffff	                            je 0x4003e48	      2185	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x400410c	      0xe91afdffff	                           jmp 0x4003e2b	      2185	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4004111	     0xf1f80000000	                         nop dword [rax]	      2185	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4004118	            0x31c0	                            xor eax, eax	      2204	ops.c	FUNCTION_35	IF_6	FOR_1
0x400411a	      0xe95cfdffff	                           jmp 0x4003e7b	      2204	ops.c	FUNCTION_35	IF_6	FOR_1
0x400411f	              0x90	                                     nop	      2204	ops.c	FUNCTION_35	IF_6	FOR_1
0x4004120	          0x4c89f7	                            mov rdi, r14	      2259	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_15
0x4004123	      0xe800000000	                          call 0x4004128	      2259	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_15
0x4004128	      0x4863542434	         movsxd rdx, dword [rsp + 0x34] 	        90	string3.h	FUNCTION_95	CALL_6
0x400412d	        0x498d3c06	                    lea rdi, [r14 + rax]	        90	string3.h	FUNCTION_95	CALL_6
0x4004131	      0xbe20000000	                           mov esi, 0x20	        90	string3.h	FUNCTION_95	CALL_6
0x4004136	      0xe800000000	                          call 0x400413b	        90	string3.h	FUNCTION_95	CALL_6
0x400413b	          0x4c89ff	                            mov rdi, r15	      2261	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_17
0x400413e	      0xe800000000	                          call 0x4004143	      2261	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_17
0x4004143	          0x4c89f7	                            mov rdi, r14	      2261	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_17
0x4004146	          0x4889c3	                            mov rbx, rax	      2261	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_17
0x4004149	      0xe800000000	                          call 0x400414e	      2261	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	IF_15	CALL_17
0x400414e	        0x488d5301	                      lea rdx, [rbx + 1]	        59	string3.h	FUNCTION_93	CALL_3
0x4004152	        0x498d3c06	                    lea rdi, [r14 + rax]	        59	string3.h	FUNCTION_93	CALL_3
0x4004156	          0x4c89fe	                            mov rsi, r15	        59	string3.h	FUNCTION_93	CALL_3
0x4004159	      0xe800000000	                          call 0x400415e	        59	string3.h	FUNCTION_93	CALL_3
0x400415e	      0xe963feffff	                           jmp 0x4003fc6	        59	string3.h	FUNCTION_93	CALL_3
0x4004163	       0xf1f440000	                   nop dword [rax + rax]	        59	string3.h	FUNCTION_93	CALL_3
0x4004168	      0xe800000000	                          call 0x400416d	      2255	ops.c	FUNCTION_35	IF_6	FOR_1	IF_13	CALL_13
0x400416d	      0x4863542414	         movsxd rdx, dword [rsp + 0x14] 	        90	string3.h	FUNCTION_95	CALL_6
0x4004172	        0x498d3c06	                    lea rdi, [r14 + rax]	        90	string3.h	FUNCTION_95	CALL_6
0x4004176	          0x4489ee	                           mov esi, r13d	        90	string3.h	FUNCTION_95	CALL_6
0x4004179	      0xe800000000	                          call 0x400417e	        90	string3.h	FUNCTION_95	CALL_6
0x400417e	      0xe937feffff	                           jmp 0x4003fba	        90	string3.h	FUNCTION_95	CALL_6
0x4004183	       0xf1f440000	                   nop dword [rax + rax]	        90	string3.h	FUNCTION_95	CALL_6
0x4004188	        0x837d0801	                  cmp dword [rbp + 8], 1	      2288	ops.c	FUNCTION_35	ELSE_5	IF_18
0x400418c	     0xf8413030000	                            je 0x40044a5	      2288	ops.c	FUNCTION_35	ELSE_5	IF_18
0x4004192	          0x8b5514	            mov edx, dword [rbp + 0x14] 	      2296	ops.c	FUNCTION_35	ELSE_5	ELSE_6	IF_20
0x4004195	            0x85d2	                           test edx, edx	      2296	ops.c	FUNCTION_35	ELSE_5	ELSE_6	IF_20
0x4004197	     0xf84e0020000	                            je 0x400447d	      2296	ops.c	FUNCTION_35	ELSE_5	ELSE_6	IF_20
0x400419d	        0x4c8d6530	                   lea r12, [rbp + 0x30]	      2335	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	CALL_35
0x40041a1	            0xeb3d	                           jmp 0x40041e0	      2335	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	CALL_35
0x40041a3	       0xf1f440000	                   nop dword [rax + rax]	      2335	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	CALL_35
0x40041a8	      0xe800000000	                          call 0x40041ad	      2301	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_29
0x40041ad	            0x85c0	                           test eax, eax	      2302	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21
0x40041af	            0x89c3	                            mov ebx, eax	      2301	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_29
0x40041b1	            0x754f	                           jne 0x4004202	      2302	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21
0x40041b3	    0x8b0500000000	            mov eax, dword [0x040041b9] 	      2342	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x40041b9	            0x85c0	                           test eax, eax	      2342	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x40041bb	            0x7415	                            je 0x40041d2	      2342	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x40041bd	    0x488b05000000	            mov rax, qword [0x040041c4] 	      2342	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x40041c4	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2342	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x40041c8	        0x483b4530	            cmp rax, qword [rbp + 0x30] 	      2342	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x40041cc	     0xf84ae000000	                            je 0x4004280	      2342	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x40041d2	      0xe800000000	                          call 0x40041d7	      2365	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_30	CALL_41
0x40041d7	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2365	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_30	CALL_41
0x40041da	     0xf8420020000	                            je 0x4004400	      2365	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_30	CALL_41
0x40041e0	    0x488b05000000	            mov rax, qword [0x040041e7] 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x40041e7	        0x488b4d30	            mov rcx, qword [rbp + 0x30] 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x40041eb	        0x48394838	            cmp qword [rax + 0x38], rcx 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x40041ef	            0x745f	                            je 0x4004250	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x40041f1	     0xf8d59feffff	                           jge 0x4004050	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x40041f7	      0xe800000000	                          call 0x40041fc	      2301	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_29
0x40041fc	            0x85c0	                           test eax, eax	      2302	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21
0x40041fe	            0x89c3	                            mov ebx, eax	      2301	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_29
0x4004200	            0x74b1	                            je 0x40041b3	      2302	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21
0x4004202	          0x4489ef	                           mov edi, r13d	      2305	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x4004205	    0xff1500000000	                 call qword [0x0400420b]	      2305	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x400420b	          0x83f801	                              cmp eax, 1	      2305	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x400420e	     0xf8e9c010000	                           jle 0x40043b0	      2305	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x4004214	    0x488b05000000	            mov rax, qword [0x0400421b] 	      2309	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x400421b	        0x488b4d30	            mov rcx, qword [rbp + 0x30] 	      2309	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x400421f	        0x48394838	            cmp qword [rax + 0x38], rcx 	      2309	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x4004223	     0xf845f010000	                            je 0x4004388	      2309	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x4004229	    0x8b1d00000000	            mov ebx, dword [0x0400422f] 	      2311	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x400422f	          0x4489ef	                           mov edi, r13d	      2313	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	CALL_30
0x4004232	    0xc70500000000	           mov dword [0x0400423c], 0x50 	      2312	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x400423c	      0xe800000000	                          call 0x4004241	      2313	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	CALL_30
0x4004241	    0x891d00000000	            mov dword [0x04004247], ebx 	      2314	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x4004247	      0xe800000000	                          call 0x400424c	      2316	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	CALL_31
0x400424c	            0xeb84	                           jmp 0x40041d2	      2316	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	CALL_31
0x400424e	            0x6690	                                     nop	      2316	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	CALL_31
0x4004250	          0x8b4d38	            mov ecx, dword [rbp + 0x38] 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4004253	          0x394840	            cmp dword [rax + 0x40], ecx 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4004256	            0x7420	                            je 0x4004278	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4004258	     0xf8c4affffff	                            jl 0x40041a8	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x400425e	        0x488b4d38	            mov rcx, qword [rbp + 0x38] 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4004262	        0x48394840	            cmp qword [rax + 0x40], rcx 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4004266	     0xf843cffffff	                            je 0x40041a8	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x400426c	      0xe9dffdffff	                           jmp 0x4004050	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4004271	     0xf1f80000000	                         nop dword [rax]	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4004278	          0x8b4d3c	            mov ecx, dword [rbp + 0x3c] 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x400427b	          0x394844	            cmp dword [rax + 0x44], ecx 	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x400427e	            0xebd8	                           jmp 0x4004258	      2299	ops.c	FUNCTION_35	ELSE_5	WHILE_2	CALL_28
0x4004280	        0x483b4520	            cmp rax, qword [rbp + 0x20] 	      2346	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	IF_28
0x4004284	          0x8b753c	            mov esi, dword [rbp + 0x3c] 	      2344	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x4004287	          0x8b7d38	            mov edi, dword [rbp + 0x38] 	      2347	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	IF_28
0x400428a	            0x89f3	                            mov ebx, esi	      2344	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x400428c	     0xf849e010000	                            je 0x4004430	      2346	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	IF_28
0x4004292	      0xe800000000	                          call 0x4004297	      2353	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	CALL_38
0x4004297	          0x8d7801	                      lea edi, [rax + 1]	      2353	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	CALL_38
0x400429a	      0xe800000000	                          call 0x400429f	      2353	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	CALL_38
0x400429f	    0x488b05000000	            mov rax, qword [0x040042a6] 	      2354	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x40042a6	          0x8d5301	                      lea edx, [rbx + 1]	      2354	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x40042a9	          0x295040	             sub dword [rax + 0x40], edx	      2354	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27
0x40042ac	            0x85db	                           test ebx, ebx	      2355	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2
0x40042ae	     0xf881effffff	                            js 0x40041d2	      2355	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2
0x40042b4	          0x4589ee	                          mov r14d, r13d	      2355	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2
0x40042b7	            0xeb1a	                           jmp 0x40042d3	      2355	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2
0x40042b9	     0xf1f80000000	                         nop dword [rax]	      2355	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2
0x40042c0	          0x83eb01	                              sub ebx, 1	      2355	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2
0x40042c3	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      2355	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2
0x40042c6	     0xf8406ffffff	                            je 0x40041d2	      2355	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2
0x40042cc	    0x488b05000000	            mov rax, qword [0x040042d3] 	      2355	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2
0x40042d3	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      2357	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	CALL_39
0x40042d7	    0x488b3d000000	            mov rdi, qword [0x040042de] 	      2357	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	CALL_39
0x40042de	      0xba01000000	                              mov edx, 1	      2357	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	CALL_39
0x40042e3	      0xe800000000	                          call 0x40042e8	      2357	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	CALL_39
0x40042e8	    0x488b15000000	            mov rdx, qword [0x040042ef] 	      2357	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	CALL_39
0x40042ef	        0x48635240	         movsxd rdx, dword [rdx + 0x40] 	      2357	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	CALL_39
0x40042f3	        0x44883410	              mov byte [rax + rdx], r14b	      2357	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	CALL_39
0x40042f7	    0x488b05000000	            mov rax, qword [0x040042fe] 	      2358	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	IF_29	CALL_40
0x40042fe	        0x488d7838	                   lea rdi, [rax + 0x38]	      2358	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	IF_29	CALL_40
0x4004302	      0xe800000000	                          call 0x4004307	      2358	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	IF_29	CALL_40
0x4004307	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2358	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	IF_29	CALL_40
0x400430a	            0x75b4	                           jne 0x40042c0	      2358	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	IF_29	CALL_40
0x400430c	      0xe9c1feffff	                           jmp 0x40041d2	      2358	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	IF_29	CALL_40
0x4004311	     0xf1f80000000	                         nop dword [rax]	      2358	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	FOR_2	IF_29	CALL_40
0x4004318	    0xc74424100100	               mov dword [rsp + 0x10], 1	      2147	ops.c	FUNCTION_35	IF_2
0x4004320	    0x41bd0d000000	                           mov r13d, 0xd	      2148	ops.c	FUNCTION_35	IF_2
0x4004326	      0xe937faffff	                           jmp 0x4003d62	      2148	ops.c	FUNCTION_35	IF_2
0x400432b	       0xf1f440000	                   nop dword [rax + rax]	      2148	ops.c	FUNCTION_35	IF_2
0x4004330	      0xe800000000	                          call 0x4004335	      2268	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_19
0x4004335	        0x8b7c2418	            mov edi, dword [rsp + 0x18] 	      2267	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_18
0x4004339	            0x29c7	                            sub edi, eax	      2267	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_18
0x400433b	      0xe800000000	                          call 0x4004340	      2267	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_18
0x4004340	          0x4885c0	                           test rax, rax	      2269	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	IF_16
0x4004343	          0x4889c3	                            mov rbx, rax	      2267	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_18
0x4004346	      0x4889442408	                mov qword [rsp + 8], rax	      2267	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_18
0x400434b	     0xf843a010000	                            je 0x400448b	      2269	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	IF_16
0x4004351	          0x4c89ff	                            mov rdi, r15	      2270	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_20
0x4004354	      0xe800000000	                          call 0x4004359	      2270	ops.c	FUNCTION_35	IF_6	FOR_1	ELSE_4	CALL_20
0x4004359	        0x488d5001	                      lea rdx, [rax + 1]	        59	string3.h	FUNCTION_93	CALL_3
0x400435d	          0x4c89fe	                            mov rsi, r15	        59	string3.h	FUNCTION_93	CALL_3
0x4004360	          0x4889df	                            mov rdi, rbx	        59	string3.h	FUNCTION_93	CALL_3
0x4004363	      0xe800000000	                          call 0x4004368	        59	string3.h	FUNCTION_93	CALL_3
0x4004368	    0x488b05000000	            mov rax, qword [0x0400436f] 	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x400436f	            0x31d2	                            xor edx, edx	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4004371	          0x4c89f6	                            mov rsi, r14	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4004374	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4004378	      0xe800000000	                          call 0x400437d	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x400437d	      0xe961fcffff	                           jmp 0x4003fe3	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4004382	    0x660f1f440000	                    nop word [rax + rax]	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4004388	          0x4489ef	                           mov edi, r13d	      2310	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x400438b	    0xff1500000000	                 call qword [0x04004391]	      2310	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x4004391	          0x4189c6	                           mov r14d, eax	      2310	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x4004394	            0x89df	                            mov edi, ebx	      2310	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x4004396	    0xff1500000000	                 call qword [0x0400439c]	      2310	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x400439c	          0x4129c6	                           sub r14d, eax	      2310	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x400439f	        0x44017538	            add dword [rbp + 0x38], r14d	      2310	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x40043a3	      0xe981feffff	                           jmp 0x4004229	      2310	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x40043a8	     0xf1f84000000	                   nop dword [rax + rax]	      2310	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22	IF_23
0x40043b0	            0x89df	                            mov edi, ebx	      2305	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x40043b2	    0xff1500000000	                 call qword [0x040043b8]	      2305	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x40043b8	          0x83f801	                              cmp eax, 1	      2305	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x40043bb	     0xf8f53feffff	                            jg 0x4004214	      2305	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	IF_22
0x40043c1	          0x83fb09	                              cmp ebx, 9	      2322	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24
0x40043c4	     0xf841c010000	                            je 0x40044e6	      2322	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24
0x40043ca	    0x488b05000000	            mov rax, qword [0x040043d1] 	      2322	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24
0x40043d1	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      2322	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24
0x40043d5	    0x488b3d000000	            mov rdi, qword [0x040043dc] 	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x40043dc	      0xba01000000	                              mov edx, 1	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x40043e1	      0xe800000000	                          call 0x40043e6	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x40043e6	    0x488b15000000	            mov rdx, qword [0x040043ed] 	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x40043ed	        0x48635240	         movsxd rdx, dword [rdx + 0x40] 	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x40043f1	        0x44882c10	              mov byte [rax + rdx], r13b	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x40043f5	      0xe9d8fdffff	                           jmp 0x40041d2	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x40043fa	    0x660f1f440000	                    nop word [rax + rax]	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x4004400	    0x488b05000000	            mov rax, qword [0x04004407] 	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x4004407	      0xe944fcffff	                           jmp 0x4004050	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x400440c	         0xf1f4000	                         nop dword [rax]	      2338	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	CALL_36
0x4004410	        0x488b7d30	            mov rdi, qword [rbp + 0x30] 	      2119	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_1
0x4004414	      0xe800000000	                          call 0x4004419	      2119	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_1
0x4004419	        0x48637538	         movsxd rsi, dword [rbp + 0x38] 	      2120	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x400441d	          0x4889c7	                            mov rdi, rax	      2120	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x4004420	          0x4801c6	                            add rsi, rax	      2120	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x4004423	      0xe800000000	                          call 0x4004428	      2120	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x4004428	           0x14538	             add dword [rbp + 0x38], eax	      2120	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x400442b	      0xe947f9ffff	                           jmp 0x4003d77	      2120	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x4004430	          0x397d28	            cmp dword [rbp + 0x28], edi 	      2347	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	IF_28
0x4004433	     0xf8559feffff	                           jne 0x4004292	      2347	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	IF_28
0x4004439	          0x2b5d2c	             sub ebx, dword [rbp + 0x2c]	      2348	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	IF_28
0x400443c	      0xe951feffff	                           jmp 0x4004292	      2348	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	IF_28
0x4004441	     0xf1f80000000	                         nop dword [rax]	      2348	ops.c	FUNCTION_35	ELSE_5	WHILE_2	ELSE_8	IF_27	IF_28
0x4004448	    0x488b05000000	            mov rax, qword [0x0400444f] 	      2189	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x400444f	          0x8b7564	            mov esi, dword [rbp + 0x64] 	      2190	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8	CALL_4
0x4004452	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2190	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8	CALL_4
0x4004457	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2189	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x400445b	      0x4889442420	             mov qword [rsp + 0x20], rax	      2189	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4004460	      0xe800000000	                          call 0x4004465	      2190	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8	CALL_4
0x4004465	      0x448b64242c	           mov r12d, dword [rsp + 0x2c] 	      2191	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x400446a	      0x4403642430	            add r12d, dword [rsp + 0x30]	      2191	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x400446f	        0x8b542454	            mov edx, dword [rsp + 0x54] 	      2191	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4004473	      0x4489642430	            mov dword [rsp + 0x30], r12d	      2191	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x4004478	      0xe9def9ffff	                           jmp 0x4003e5b	      2186	ops.c	FUNCTION_35	IF_6	FOR_1	IF_8
0x400447d	        0x488d7d30	                   lea rdi, [rbp + 0x30]	      2297	ops.c	FUNCTION_35	ELSE_5	ELSE_6	IF_20
0x4004481	      0xe800000000	                          call 0x4004486	      2297	ops.c	FUNCTION_35	ELSE_5	ELSE_6	IF_20
0x4004486	      0xe912fdffff	                           jmp 0x400419d	      2297	ops.c	FUNCTION_35	ELSE_5	ELSE_6	IF_20
0x400448b	    0x488b05000000	            mov rax, qword [0x04004492] 	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4004492	            0x31d2	                            xor edx, edx	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4004494	          0x4c89f6	                            mov rsi, r14	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x4004497	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x400449b	      0xe800000000	                          call 0x40044a0	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x40044a0	      0xe984fbffff	                           jmp 0x4004029	      2273	ops.c	FUNCTION_35	IF_6	FOR_1	CALL_21
0x40044a5	    0x488b05000000	            mov rax, qword [0x040044ac] 	      2291	ops.c	FUNCTION_35	ELSE_5	IF_18
0x40044ac	        0x488b7d30	            mov rdi, qword [rbp + 0x30] 	      2292	ops.c	FUNCTION_35	ELSE_5	IF_18	CALL_26
0x40044b0	    0xc74528000000	               mov dword [rbp + 0x28], 0	      2290	ops.c	FUNCTION_35	ELSE_5	IF_18
0x40044b7	    0xc74040000000	               mov dword [rax + 0x40], 0	      2291	ops.c	FUNCTION_35	ELSE_5	IF_18
0x40044be	      0xe800000000	                          call 0x40044c3	      2292	ops.c	FUNCTION_35	ELSE_5	IF_18	CALL_26
0x40044c3	          0x4889c7	                            mov rdi, rax	      2292	ops.c	FUNCTION_35	ELSE_5	IF_18	CALL_26
0x40044c6	      0xe800000000	                          call 0x40044cb	      2292	ops.c	FUNCTION_35	ELSE_5	IF_18	CALL_26
0x40044cb	            0x85c0	                           test eax, eax	      2293	ops.c	FUNCTION_35	ELSE_5	IF_18	IF_19
0x40044cd	            0x750c	                           jne 0x40044db	      2293	ops.c	FUNCTION_35	ELSE_5	IF_18	IF_19
0x40044cf	    0xc74538000000	               mov dword [rbp + 0x38], 0	      2292	ops.c	FUNCTION_35	ELSE_5	IF_18	CALL_26
0x40044d6	      0xe9c2fcffff	                           jmp 0x400419d	      2292	ops.c	FUNCTION_35	ELSE_5	IF_18	CALL_26
0x40044db	          0x83e801	                              sub eax, 1	      2294	ops.c	FUNCTION_35	ELSE_5	IF_18	IF_19
0x40044de	          0x894538	            mov dword [rbp + 0x38], eax 	      2294	ops.c	FUNCTION_35	ELSE_5	IF_18	IF_19
0x40044e1	      0xe9b7fcffff	                           jmp 0x400419d	      2294	ops.c	FUNCTION_35	ELSE_5	IF_18	IF_19
0x40044e6	    0x488b05000000	            mov rax, qword [0x040044ed] 	      2326	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_25
0x40044ed	            0x31db	                            xor ebx, ebx	      2324	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24
0x40044ef	        0x488b4d30	            mov rcx, qword [rbp + 0x30] 	      2326	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_25
0x40044f3	        0x48394838	            cmp qword [rax + 0x38], rcx 	      2326	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_25
0x40044f7	            0x7430	                            je 0x4004529	      2326	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_25
0x40044f9	      0xe800000000	                          call 0x40044fe	      2333	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	CALL_34
0x40044fe	            0x89c7	                            mov edi, eax	      2333	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	CALL_34
0x4004500	      0xe800000000	                          call 0x4004505	      2333	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	CALL_34
0x4004505	    0x488b05000000	            mov rax, qword [0x0400450c] 	      2334	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_26
0x400450c	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      2334	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_26
0x4004510	        0x483b7530	            cmp rsi, qword [rbp + 0x30] 	      2334	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_26
0x4004514	     0xf85bbfeffff	                           jne 0x40043d5	      2334	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_26
0x400451a	            0x89de	                            mov esi, ebx	      2335	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	CALL_35
0x400451c	          0x4c89e7	                            mov rdi, r12	      2335	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	CALL_35
0x400451f	      0xe800000000	                          call 0x4004524	      2335	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	CALL_35
0x4004524	      0xe9a1feffff	                           jmp 0x40043ca	      2335	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	CALL_35
0x4004529	          0x8b753c	            mov esi, dword [rbp + 0x3c] 	      2330	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_25	CALL_32
0x400452c	          0x8b7d38	            mov edi, dword [rbp + 0x38] 	      2330	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_25	CALL_32
0x400452f	      0xe800000000	                          call 0x4004534	      2330	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_25	CALL_32
0x4004534	            0x89c3	                            mov ebx, eax	      2330	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_25	CALL_32
0x4004536	            0xebc1	                           jmp 0x40044f9	      2330	ops.c	FUNCTION_35	ELSE_5	WHILE_2	IF_21	ELSE_7	IF_24	IF_25	CALL_32
0x4004538	      0xe800000000	                          call 0x400453d	      2379	ops.c	FUNCTION_35
cmdline_paste_reg	SWITCH,0:DO,0:ELSE,0:functions,0:FOR,1:IF,4:WHILE,0:CALL,4	120
0x4003a10	              0x55	                                push rbp	      1606	ops.c	FUNCTION_29
0x4003a11	              0x53	                                push rbx	      1606	ops.c	FUNCTION_29
0x4003a12	            0x89f5	                            mov ebp, esi	      1606	ops.c	FUNCTION_29
0x4003a14	        0x4883ec08	                              sub rsp, 8	      1606	ops.c	FUNCTION_29
0x4003a18	            0x85ff	                           test edi, edi	       913	ops.c	FUNCTION_15	IF_1
0x4003a1a	    0xc70500000000	               mov dword [0x04003a24], 0	       912	ops.c	FUNCTION_15
0x4003a24	     0xf84e6000000	                            je 0x4003b10	       913	ops.c	FUNCTION_15	IF_1
0x4003a2a	          0x83ff22	                           cmp edi, 0x22	       913	ops.c	FUNCTION_15	IF_1
0x4003a2d	     0xf84dd000000	                            je 0x4003b10	       913	ops.c	FUNCTION_15	IF_1
0x4003a33	          0x8d47d0	                   lea eax, [rdi - 0x30]	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x4003a36	          0x83f809	                              cmp eax, 9	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x4003a39	     0xf87f1000000	                            ja 0x4003b30	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x4003a3f	          0x4863c8	                         movsxd rcx, eax	       950	ops.c	FUNCTION_15
0x4003a42	        0x48c1e105	                              shl rcx, 5	       950	ops.c	FUNCTION_15
0x4003a46	    0x4881c1000000	                              add rcx, 0	       950	ops.c	FUNCTION_15
0x4003a4d	    0x48890d000000	            mov qword [0x04003a54], rcx 	       950	ops.c	FUNCTION_15
0x4003a54	          0x488b01	                    mov rax, qword [rcx]	      1612	ops.c	FUNCTION_29	IF_2
0x4003a57	          0x4885c0	                           test rax, rax	      1612	ops.c	FUNCTION_29	IF_2
0x4003a5a	            0x7446	                            je 0x4003aa2	      1612	ops.c	FUNCTION_29	IF_2
0x4003a5c	      0x4883790800	                  cmp qword [rcx + 8], 0	      1615	ops.c	FUNCTION_29	FOR_1
0x4003a61	     0xf8ef1000000	                           jle 0x4003b58	      1615	ops.c	FUNCTION_29	FOR_1
0x4003a67	            0x31db	                            xor ebx, ebx	      1615	ops.c	FUNCTION_29	FOR_1
0x4003a69	            0x85d2	                           test edx, edx	      1615	ops.c	FUNCTION_29	FOR_1
0x4003a6b	            0x751b	                           jne 0x4003a88	      1615	ops.c	FUNCTION_29	FOR_1
0x4003a6d	            0xeb59	                           jmp 0x4003ac8	      1615	ops.c	FUNCTION_29	FOR_1
0x4003a6f	              0x90	                                     nop	      1615	ops.c	FUNCTION_29	FOR_1
0x4003a70	    0x488b05000000	            mov rax, qword [0x04003a77] 	      1615	ops.c	FUNCTION_29	FOR_1
0x4003a77	        0x4883c301	                              add rbx, 1	      1615	ops.c	FUNCTION_29	FOR_1
0x4003a7b	        0x48395808	                cmp qword [rax + 8], rbx	      1615	ops.c	FUNCTION_29	FOR_1
0x4003a7f	     0xf8ed3000000	                           jle 0x4003b58	      1615	ops.c	FUNCTION_29	FOR_1
0x4003a85	          0x488b00	                    mov rax, qword [rax]	      1615	ops.c	FUNCTION_29	FOR_1
0x4003a88	        0x488b3cd8	            mov rdi, qword [rax + rbx*8]	      1617	ops.c	FUNCTION_29	FOR_1	CALL_2
0x4003a8c	            0x89ee	                            mov esi, ebp	      1617	ops.c	FUNCTION_29	FOR_1	CALL_2
0x4003a8e	      0xe800000000	                          call 0x4003a93	      1617	ops.c	FUNCTION_29	FOR_1	CALL_2
0x4003a93	      0xe800000000	                          call 0x4003a98	      1626	ops.c	FUNCTION_29	FOR_1	CALL_4
0x4003a98	    0x8b0500000000	            mov eax, dword [0x04003a9e] 	      1627	ops.c	FUNCTION_29	FOR_1	IF_4
0x4003a9e	            0x85c0	                           test eax, eax	      1627	ops.c	FUNCTION_29	FOR_1	IF_4
0x4003aa0	            0x74ce	                            je 0x4003a70	      1627	ops.c	FUNCTION_29	FOR_1	IF_4
0x4003aa2	        0x4883c408	                              add rsp, 8	      1631	ops.c	FUNCTION_29
0x4003aa6	            0x31c0	                            xor eax, eax	      1613	ops.c	FUNCTION_29	IF_2
0x4003aa8	              0x5b	                                 pop rbx	      1631	ops.c	FUNCTION_29
0x4003aa9	              0x5d	                                 pop rbp	      1631	ops.c	FUNCTION_29
0x4003aaa	              0xc3	                                     ret	      1631	ops.c	FUNCTION_29
0x4003aab	       0xf1f440000	                   nop dword [rax + rax]	      1631	ops.c	FUNCTION_29
0x4003ab0	    0x488b05000000	            mov rax, qword [0x04003ab7] 	      1615	ops.c	FUNCTION_29	FOR_1
0x4003ab7	        0x4883c301	                              add rbx, 1	      1615	ops.c	FUNCTION_29	FOR_1
0x4003abb	        0x48395808	                cmp qword [rax + 8], rbx	      1615	ops.c	FUNCTION_29	FOR_1
0x4003abf	     0xf8e93000000	                           jle 0x4003b58	      1615	ops.c	FUNCTION_29	FOR_1
0x4003ac5	          0x488b00	                    mov rax, qword [rax]	      1615	ops.c	FUNCTION_29	FOR_1
0x4003ac8	        0x488b3cd8	            mov rdi, qword [rax + rbx*8]	      1617	ops.c	FUNCTION_29	FOR_1	CALL_2
0x4003acc	            0x89ee	                            mov esi, ebp	      1617	ops.c	FUNCTION_29	FOR_1	CALL_2
0x4003ace	      0xe800000000	                          call 0x4003ad3	      1617	ops.c	FUNCTION_29	FOR_1	CALL_2
0x4003ad3	    0x488b05000000	            mov rax, qword [0x04003ada] 	      1621	ops.c	FUNCTION_29	FOR_1	IF_3
0x4003ada	        0x80781001	                cmp byte [rax + 0x10], 1	      1621	ops.c	FUNCTION_29	FOR_1	IF_3
0x4003ade	            0x740d	                            je 0x4003aed	      1621	ops.c	FUNCTION_29	FOR_1	IF_3
0x4003ae0	        0x488b4008	                mov rax, qword [rax + 8]	      1621	ops.c	FUNCTION_29	FOR_1	IF_3
0x4003ae4	        0x4883e801	                              sub rax, 1	      1621	ops.c	FUNCTION_29	FOR_1	IF_3
0x4003ae8	          0x4839d8	                            cmp rax, rbx	      1621	ops.c	FUNCTION_29	FOR_1	IF_3
0x4003aeb	            0x7e0c	                           jle 0x4003af9	      1621	ops.c	FUNCTION_29	FOR_1	IF_3
0x4003aed	            0x89ee	                            mov esi, ebp	      1622	ops.c	FUNCTION_29	FOR_1	CALL_3
0x4003aef	      0xbf00000000	                              mov edi, 0	      1622	ops.c	FUNCTION_29	FOR_1	CALL_3
0x4003af4	      0xe800000000	                          call 0x4003af9	      1622	ops.c	FUNCTION_29	FOR_1	CALL_3
0x4003af9	      0xe800000000	                          call 0x4003afe	      1626	ops.c	FUNCTION_29	FOR_1	CALL_4
0x4003afe	    0x8b0500000000	            mov eax, dword [0x04003b04] 	      1627	ops.c	FUNCTION_29	FOR_1	IF_4
0x4003b04	            0x85c0	                           test eax, eax	      1627	ops.c	FUNCTION_29	FOR_1	IF_4
0x4003b06	            0x74a8	                            je 0x4003ab0	      1627	ops.c	FUNCTION_29	FOR_1	IF_4
0x4003b08	            0xeb98	                           jmp 0x4003aa2	      1627	ops.c	FUNCTION_29	FOR_1	IF_4
0x4003b0a	    0x660f1f440000	                    nop word [rax + rax]	      1627	ops.c	FUNCTION_29	FOR_1	IF_4
0x4003b10	    0x488b0d000000	            mov rcx, qword [0x04003b17] 	       913	ops.c	FUNCTION_15	IF_1
0x4003b17	          0x4885c9	                           test rcx, rcx	       913	ops.c	FUNCTION_15	IF_1
0x4003b1a	     0xf852dffffff	                           jne 0x4003a4d	       913	ops.c	FUNCTION_15	IF_1
0x4003b20	          0x8d47d0	                   lea eax, [rdi - 0x30]	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x4003b23	          0x83f809	                              cmp eax, 9	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x4003b26	     0xf8613ffffff	                           jbe 0x4003a3f	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x4003b2c	         0xf1f4000	                         nop dword [rax]	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x4003b30	          0x8d479f	                   lea eax, [rdi - 0x61]	       921	ops.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x4003b33	          0x83f819	                           cmp eax, 0x19	       921	ops.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x4003b36	            0x7630	                           jbe 0x4003b68	       921	ops.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x4003b38	          0x8d47bf	                   lea eax, [rdi - 0x41]	       923	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_4
0x4003b3b	          0x83f819	                           cmp eax, 0x19	       923	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_4
0x4003b3e	            0x7730	                            ja 0x4003b70	       923	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_4
0x4003b40	          0x8d47c9	                   lea eax, [rdi - 0x37]	       925	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_5
0x4003b43	    0xc70500000000	               mov dword [0x04003b4d], 1	       926	ops.c	FUNCTION_15	ELSE_2	IF_4
0x4003b4d	      0xe9edfeffff	                           jmp 0x4003a3f	       926	ops.c	FUNCTION_15	ELSE_2	IF_4
0x4003b52	    0x660f1f440000	                    nop word [rax + rax]	       926	ops.c	FUNCTION_15	ELSE_2	IF_4
0x4003b58	        0x4883c408	                              add rsp, 8	      1631	ops.c	FUNCTION_29
0x4003b5c	      0xb801000000	                              mov eax, 1	      1630	ops.c	FUNCTION_29
0x4003b61	              0x5b	                                 pop rbx	      1631	ops.c	FUNCTION_29
0x4003b62	              0x5d	                                 pop rbp	      1631	ops.c	FUNCTION_29
0x4003b63	              0xc3	                                     ret	      1631	ops.c	FUNCTION_29
0x4003b64	         0xf1f4000	                         nop dword [rax]	      1631	ops.c	FUNCTION_29
0x4003b68	          0x8d47a9	                   lea eax, [rdi - 0x57]	       922	ops.c	FUNCTION_15	ELSE_1	IF_3
0x4003b6b	      0xe9cffeffff	                           jmp 0x4003a3f	       922	ops.c	FUNCTION_15	ELSE_1	IF_3
0x4003b70	          0x83ff2d	                           cmp edi, 0x2d	       928	ops.c	FUNCTION_15	ELSE_3	IF_5
0x4003b73	            0x7433	                            je 0x4003ba8	       928	ops.c	FUNCTION_15	ELSE_3	IF_5
0x4003b75	    0x8b0d00000000	            mov ecx, dword [0x04003b7b] 	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x4003b7b	            0x85c9	                           test ecx, ecx	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x4003b7d	            0x7405	                            je 0x4003b84	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x4003b7f	          0x83ff2a	                           cmp edi, 0x2a	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x4003b82	            0x742e	                            je 0x4003bb2	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x4003b84	    0x8b0500000000	            mov eax, dword [0x04003b8a] 	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x4003b8a	            0x85c0	                           test eax, eax	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x4003b8c	            0x7405	                            je 0x4003b93	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x4003b8e	          0x83ff2b	                           cmp edi, 0x2b	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x4003b91	            0x7440	                            je 0x4003bd3	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x4003b93	          0x83ff7e	                           cmp edi, 0x7e	       946	ops.c	FUNCTION_15	ELSE_6	IF_8
0x4003b96	      0xb927000000	                           mov ecx, 0x27	       946	ops.c	FUNCTION_15	ELSE_6	IF_8
0x4003b9b	      0xb800000000	                              mov eax, 0	       946	ops.c	FUNCTION_15	ELSE_6	IF_8
0x4003ba0	           0xf44c1	                          cmove eax, ecx	       946	ops.c	FUNCTION_15	ELSE_6	IF_8
0x4003ba3	      0xe997feffff	                           jmp 0x4003a3f	       946	ops.c	FUNCTION_15	ELSE_6	IF_8
0x4003ba8	      0xb824000000	                           mov eax, 0x24	       929	ops.c	FUNCTION_15	ELSE_3	IF_5
0x4003bad	      0xe98dfeffff	                           jmp 0x4003a3f	       929	ops.c	FUNCTION_15	ELSE_3	IF_5
0x4003bb2	      0xb925000000	                           mov ecx, 0x25	       934	ops.c	FUNCTION_15	ELSE_4	IF_6
0x4003bb7	        0x48c1e105	                              shl rcx, 5	       950	ops.c	FUNCTION_15
0x4003bbb	      0xbd01000000	                              mov ebp, 1	      1611	ops.c	FUNCTION_29	IF_1
0x4003bc0	    0x4881c1000000	                              add rcx, 0	       950	ops.c	FUNCTION_15
0x4003bc7	    0x48890d000000	            mov qword [0x04003bce], rcx 	       950	ops.c	FUNCTION_15
0x4003bce	      0xe981feffff	                           jmp 0x4003a54	       950	ops.c	FUNCTION_15
0x4003bd3	      0xb926000000	                           mov ecx, 0x26	       940	ops.c	FUNCTION_15	ELSE_5	IF_7
0x4003bd8	            0xebdd	                           jmp 0x4003bb7	       940	ops.c	FUNCTION_15	ELSE_5	IF_7
clip_get_selection	SWITCH,0:DO,0:ELSE,1:functions,0:FOR,0:IF,3:WHILE,0:CALL,7	161
0x4008cd0	            0x4157	                                push r15	      6570	ops.c	FUNCTION_75
0x4008cd2	            0x4156	                                push r14	      6570	ops.c	FUNCTION_75
0x4008cd4	            0x4155	                                push r13	      6570	ops.c	FUNCTION_75
0x4008cd6	            0x4154	                                push r12	      6570	ops.c	FUNCTION_75
0x4008cd8	          0x4989fd	                            mov r13, rdi	      6570	ops.c	FUNCTION_75
0x4008cdb	              0x55	                                push rbp	      6570	ops.c	FUNCTION_75
0x4008cdc	              0x53	                                push rbx	      6570	ops.c	FUNCTION_75
0x4008cdd	    0x4881ec380100	                          sub rsp, 0x138	      6570	ops.c	FUNCTION_75
0x4008ce4	    0x64488b042528	                mov rax, qword fs:[0x28]	      6570	ops.c	FUNCTION_75
0x4008ced	    0x488984242801	            mov qword [rsp + 0x128], rax	      6570	ops.c	FUNCTION_75
0x4008cf5	            0x31c0	                            xor eax, eax	      6570	ops.c	FUNCTION_75
0x4008cf7	          0x8b4704	                mov eax, dword [rdi + 4]	      6581	ops.c	FUNCTION_75	IF_1
0x4008cfa	            0x85c0	                           test eax, eax	      6581	ops.c	FUNCTION_75	IF_1
0x4008cfc	     0xf841e020000	                            je 0x4008f20	      6581	ops.c	FUNCTION_75	IF_1
0x4008d02	    0x4881ff000000	                              cmp rdi, 0	      6583	ops.c	FUNCTION_75	IF_1	IF_2
0x4008d09	     0xf84d1020000	                            je 0x4008fe0	      6583	ops.c	FUNCTION_75	IF_1	IF_2
0x4008d0f	    0x4981fd000000	                              cmp r13, 0	      6584	ops.c	FUNCTION_75	IF_1	IF_2
0x4008d16	     0xf84ac020000	                            je 0x4008fc8	      6584	ops.c	FUNCTION_75	IF_1	IF_2
0x4008d1c	    0x488b05000000	            mov rax, qword [0x04008d23] 	      6590	ops.c	FUNCTION_75	IF_1
0x4008d23	    0x4c8b15000000	            mov r10, qword [0x04008d2a] 	      6589	ops.c	FUNCTION_75	IF_1
0x4008d2a	    0x4c8b1d000000	            mov r11, qword [0x04008d31] 	      6588	ops.c	FUNCTION_75	IF_1
0x4008d31	    0x8b2d00000000	            mov ebp, dword [0x04008d37] 	      6595	ops.c	FUNCTION_75	IF_1
0x4008d37	        0x4c8b4838	              mov r9, qword [rax + 0x38]	      6590	ops.c	FUNCTION_75	IF_1
0x4008d3b	          0x8b5048	            mov edx, dword [rax + 0x48] 	      6591	ops.c	FUNCTION_75	IF_1
0x4008d3e	        0x448b7840	           mov r15d, dword [rax + 0x40] 	      6590	ops.c	FUNCTION_75	IF_1
0x4008d42	        0x448b7044	           mov r14d, dword [rax + 0x44] 	      6590	ops.c	FUNCTION_75	IF_1
0x4008d46	        0x448b604c	           mov r12d, dword [rax + 0x4c] 	      6592	ops.c	FUNCTION_75	IF_1
0x4008d4a	    0x488b05000000	            mov rax, qword [0x04008d51] 	      6593	ops.c	FUNCTION_75	IF_1
0x4008d51	      0x4c89542440	             mov qword [rsp + 0x40], r10	      6589	ops.c	FUNCTION_75	IF_1
0x4008d56	      0x4c894c2438	              mov qword [rsp + 0x38], r9	      6590	ops.c	FUNCTION_75	IF_1
0x4008d5b	    0x448b15000000	           mov r10d, dword [0x04008d62] 	      6595	ops.c	FUNCTION_75	IF_1
0x4008d62	    0x4c8b0d000000	              mov r9, qword [0x04008d69]	      6595	ops.c	FUNCTION_75	IF_1
0x4008d69	    0x488bb0e01100	          mov rsi, qword [rax + 0x11e0] 	      6593	ops.c	FUNCTION_75	IF_1
0x4008d70	    0x8b88e8110000	          mov ecx, dword [rax + 0x11e8] 	      6593	ops.c	FUNCTION_75	IF_1
0x4008d76	    0x8b98ec110000	          mov ebx, dword [rax + 0x11ec] 	      6593	ops.c	FUNCTION_75	IF_1
0x4008d7c	    0x488bb8001200	          mov rdi, qword [rax + 0x1200] 	      6594	ops.c	FUNCTION_75	IF_1
0x4008d83	    0x448b80081200	          mov r8d, dword [rax + 0x1208] 	      6594	ops.c	FUNCTION_75	IF_1
0x4008d8a	    0x8b800c120000	          mov eax, dword [rax + 0x120c] 	      6594	ops.c	FUNCTION_75	IF_1
0x4008d90	      0x4889742418	             mov qword [rsp + 0x18], rsi	      6593	ops.c	FUNCTION_75	IF_1
0x4008d95	    0x488db424a000	                   lea rsi, [rsp + 0xa0]	        90	string3.h	FUNCTION_95	CALL_6
0x4008d9d	        0x89542408	                mov dword [rsp + 8], edx	      6591	ops.c	FUNCTION_75	IF_1
0x4008da1	            0x31d2	                            xor edx, edx	      6598	ops.c	FUNCTION_75	IF_1
0x4008da3	        0x894c2434	             mov dword [rsp + 0x34], ecx	      6593	ops.c	FUNCTION_75	IF_1
0x4008da7	      0x48897c2428	             mov qword [rsp + 0x28], rdi	      6594	ops.c	FUNCTION_75	IF_1
0x4008dac	      0x4489442424	             mov dword [rsp + 0x24], r8d	      6594	ops.c	FUNCTION_75	IF_1
0x4008db1	        0x89442420	             mov dword [rsp + 0x20], eax	      6594	ops.c	FUNCTION_75	IF_1
0x4008db5	      0x4c8d442450	                    lea r8, [rsp + 0x50]	        90	string3.h	FUNCTION_95	CALL_6
0x4008dba	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_95	CALL_6
0x4008dbc	    0x4981fd000000	                              cmp r13, 0	      6598	ops.c	FUNCTION_75	IF_1
0x4008dc3	          0x4889f7	                            mov rdi, rsi	        90	string3.h	FUNCTION_95	CALL_6
0x4008dc6	           0xf94c2	                                 sete dl	      6598	ops.c	FUNCTION_75	IF_1
0x4008dc9	      0xb910000000	                           mov ecx, 0x10	        90	string3.h	FUNCTION_95	CALL_6
0x4008dce	      0x4c895c2448	             mov qword [rsp + 0x48], r11	      6588	ops.c	FUNCTION_75	IF_1
0x4008dd3	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_95	CALL_6
0x4008dd6	          0x83c22a	                           add edx, 0x2a	      6598	ops.c	FUNCTION_75	IF_1
0x4008dd9	          0x4c89c7	                             mov rdi, r8	        90	string3.h	FUNCTION_95	CALL_6
0x4008ddc	      0xb909000000	                              mov ecx, 9	        90	string3.h	FUNCTION_95	CALL_6
0x4008de1	      0x4c894c2410	              mov qword [rsp + 0x10], r9	      6595	ops.c	FUNCTION_75	IF_1
0x4008de6	      0x448954240c	             mov dword [rsp + 0xc], r10d	      6595	ops.c	FUNCTION_75	IF_1
0x4008deb	        0x895c2430	             mov dword [rsp + 0x30], ebx	      6593	ops.c	FUNCTION_75	IF_1
0x4008def	    0x8b1d00000000	            mov ebx, dword [0x04008df5] 	      6596	ops.c	FUNCTION_75	IF_1
0x4008df5	    0x899424a40000	             mov dword [rsp + 0xa4], edx	      6598	ops.c	FUNCTION_75	IF_1
0x4008dfc	      0xba01000000	                              mov edx, 1	      6605	ops.c	FUNCTION_75	IF_1	CALL_3
0x4008e01	    0xc78424a00000	               mov dword [rsp + 0xa0], 2	      6599	ops.c	FUNCTION_75	IF_1
0x4008e0c	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_95	CALL_6
0x4008e0f	          0x4c89c7	                             mov rdi, r8	      6605	ops.c	FUNCTION_75	IF_1	CALL_3
0x4008e12	      0x4889742450	             mov qword [rsp + 0x50], rsi	      6601	ops.c	FUNCTION_75	IF_1
0x4008e17	            0x31f6	                            xor esi, esi	      6605	ops.c	FUNCTION_75	IF_1	CALL_3
0x4008e19	    0xc744245c7900	           mov dword [rsp + 0x5c], 0x79 	      6602	ops.c	FUNCTION_75	IF_1
0x4008e21	    0x48c784248000	               mov qword [rsp + 0x80], 1	      6603	ops.c	FUNCTION_75	IF_1
0x4008e2d	    0xc784248c0000	               mov dword [rsp + 0x8c], 2	      6604	ops.c	FUNCTION_75	IF_1
0x4008e38	      0xe800000000	                          call 0x4008e3d	      6605	ops.c	FUNCTION_75	IF_1	CALL_3
0x4008e3d	    0x488b05000000	            mov rax, qword [0x04008e44] 	      6608	ops.c	FUNCTION_75	IF_1
0x4008e44	      0x4c8b4c2438	              mov r9, qword [rsp + 0x38]	      6608	ops.c	FUNCTION_75	IF_1
0x4008e49	      0x4c8b542440	            mov r10, qword [rsp + 0x40] 	      6607	ops.c	FUNCTION_75	IF_1
0x4008e4e	      0x4c8b5c2448	            mov r11, qword [rsp + 0x48] 	      6606	ops.c	FUNCTION_75	IF_1
0x4008e53	        0x4c894838	              mov qword [rax + 0x38], r9	      6608	ops.c	FUNCTION_75	IF_1
0x4008e57	        0x44897840	            mov dword [rax + 0x40], r15d	      6608	ops.c	FUNCTION_75	IF_1
0x4008e5b	        0x44897044	            mov dword [rax + 0x44], r14d	      6608	ops.c	FUNCTION_75	IF_1
0x4008e5f	    0x4c8915000000	            mov qword [0x04008e66], r10 	      6607	ops.c	FUNCTION_75	IF_1
0x4008e66	    0x4c891d000000	            mov qword [0x04008e6d], r11 	      6606	ops.c	FUNCTION_75	IF_1
0x4008e6d	      0xe800000000	                          call 0x4008e72	      6609	ops.c	FUNCTION_75	IF_1	CALL_4
0x4008e72	    0x488b05000000	            mov rax, qword [0x04008e79] 	      6610	ops.c	FUNCTION_75	IF_1
0x4008e79	        0x8b542408	                mov edx, dword [rsp + 8]	      6610	ops.c	FUNCTION_75	IF_1
0x4008e7d	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      6612	ops.c	FUNCTION_75	IF_1
0x4008e82	        0x8b4c2434	            mov ecx, dword [rsp + 0x34] 	      6612	ops.c	FUNCTION_75	IF_1
0x4008e86	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      6613	ops.c	FUNCTION_75	IF_1
0x4008e8b	      0x448b442424	            mov r8d, dword [rsp + 0x24] 	      6613	ops.c	FUNCTION_75	IF_1
0x4008e90	          0x895048	             mov dword [rax + 0x48], edx	      6610	ops.c	FUNCTION_75	IF_1
0x4008e93	        0x4489604c	            mov dword [rax + 0x4c], r12d	      6611	ops.c	FUNCTION_75	IF_1
0x4008e97	    0x488b05000000	            mov rax, qword [0x04008e9e] 	      6612	ops.c	FUNCTION_75	IF_1
0x4008e9e	        0x8b542430	            mov edx, dword [rsp + 0x30] 	      6612	ops.c	FUNCTION_75	IF_1
0x4008ea2	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	      6614	ops.c	FUNCTION_75	IF_1
0x4008ea7	      0x448b54240c	            mov r10d, dword [rsp + 0xc] 	      6614	ops.c	FUNCTION_75	IF_1
0x4008eac	    0x892d00000000	            mov dword [0x04008eb2], ebp 	      6614	ops.c	FUNCTION_75	IF_1
0x4008eb2	    0x891d00000000	            mov dword [0x04008eb8], ebx 	      6615	ops.c	FUNCTION_75	IF_1
0x4008eb8	    0x4889b0e01100	          mov qword [rax + 0x11e0], rsi 	      6612	ops.c	FUNCTION_75	IF_1
0x4008ebf	        0x8b742420	            mov esi, dword [rsp + 0x20] 	      6613	ops.c	FUNCTION_75	IF_1
0x4008ec3	    0x8988e8110000	          mov dword [rax + 0x11e8], ecx 	      6612	ops.c	FUNCTION_75	IF_1
0x4008ec9	    0x8990ec110000	          mov dword [rax + 0x11ec], edx 	      6612	ops.c	FUNCTION_75	IF_1
0x4008ecf	    0x4889b8001200	          mov qword [rax + 0x1200], rdi 	      6613	ops.c	FUNCTION_75	IF_1
0x4008ed6	    0x448980081200	          mov dword [rax + 0x1208], r8d 	      6613	ops.c	FUNCTION_75	IF_1
0x4008edd	    0x89b00c120000	          mov dword [rax + 0x120c], esi 	      6613	ops.c	FUNCTION_75	IF_1
0x4008ee3	    0x4c890d000000	              mov qword [0x04008eea], r9	      6614	ops.c	FUNCTION_75	IF_1
0x4008eea	    0x448915000000	           mov dword [0x04008ef1], r10d 	      6614	ops.c	FUNCTION_75	IF_1
0x4008ef1	    0x488b84242801	           mov rax, qword [rsp + 0x128] 	      6624	ops.c	FUNCTION_75
0x4008ef9	    0x644833042528	                xor rax, qword fs:[0x28]	      6624	ops.c	FUNCTION_75
0x4008f02	     0xf85eb000000	                           jne 0x4008ff3	      6624	ops.c	FUNCTION_75
0x4008f08	    0x4881c4380100	                          add rsp, 0x138	      6624	ops.c	FUNCTION_75
0x4008f0f	              0x5b	                                 pop rbx	      6624	ops.c	FUNCTION_75
0x4008f10	              0x5d	                                 pop rbp	      6624	ops.c	FUNCTION_75
0x4008f11	            0x415c	                                 pop r12	      6624	ops.c	FUNCTION_75
0x4008f13	            0x415d	                                 pop r13	      6624	ops.c	FUNCTION_75
0x4008f15	            0x415e	                                 pop r14	      6624	ops.c	FUNCTION_75
0x4008f17	            0x415f	                                 pop r15	      6624	ops.c	FUNCTION_75
0x4008f19	              0xc3	                                     ret	      6624	ops.c	FUNCTION_75
0x4008f1a	    0x660f1f440000	                    nop word [rax + rax]	      6624	ops.c	FUNCTION_75
0x4008f20	      0xe800000000	                          call 0x4008f25	      6617	ops.c	FUNCTION_75	ELSE_1	IF_3	CALL_5
0x4008f25	            0x85c0	                           test eax, eax	      6617	ops.c	FUNCTION_75	ELSE_1	IF_3	CALL_5
0x4008f27	            0x75c8	                           jne 0x4008ef1	      6617	ops.c	FUNCTION_75	ELSE_1	IF_3	CALL_5
0x4008f29	    0x4981fd000000	                              cmp r13, 0	      6559	ops.c	FUNCTION_74	ELSE_1
0x4008f30	      0xb900000000	                              mov ecx, 0	      6559	ops.c	FUNCTION_74	ELSE_1
0x4008f35	      0xb800000000	                              mov eax, 0	      6559	ops.c	FUNCTION_74	ELSE_1
0x4008f3a	        0x480f45c1	                         cmovne rax, rcx	      6559	ops.c	FUNCTION_74	ELSE_1
0x4008f3e	    0x4c8b25000000	            mov r12, qword [0x04008f45] 	      6554	ops.c	FUNCTION_74
0x4008f45	          0x488b38	                    mov rdi, qword [rax]	      3012	ops.c	FUNCTION_43	IF_1
0x4008f48	    0x488905000000	            mov qword [0x04008f4f], rax 	      3012	ops.c	FUNCTION_43	IF_1
0x4008f4f	        0x488b5808	                mov rbx, qword [rax + 8]	      3045	ops.c	FUNCTION_44	CALL_1
0x4008f53	          0x4885ff	                           test rdi, rdi	      3012	ops.c	FUNCTION_43	IF_1
0x4008f56	            0x7451	                            je 0x4008fa9	      3012	ops.c	FUNCTION_43	IF_1
0x4008f58	        0x4883eb01	                              sub rbx, 1	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4008f5c	            0x7838	                            js 0x4008f96	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4008f5e	    0x488d2cdd0000	                        lea rbp, [rbx*8]	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4008f66	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4008f70	        0x488b3c2f	              mov rdi, qword [rdi + rbp]	      3032	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x4008f74	        0x4883eb01	                              sub rbx, 1	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4008f78	        0x4883ed08	                              sub rbp, 8	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4008f7c	      0xe800000000	                          call 0x4008f81	      3032	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x4008f81	    0x488b05000000	            mov rax, qword [0x04008f88] 	      3032	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x4008f88	        0x4883fbff	             cmp rbx, 0xffffffffffffffff	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4008f8c	          0x488b38	                    mov rdi, qword [rax]	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4008f8f	            0x75df	                           jne 0x4008f70	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4008f91	          0x4885ff	                           test rdi, rdi	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4008f94	            0x7413	                            je 0x4008fa9	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4008f96	      0xe800000000	                          call 0x4008f9b	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4008f9b	    0x488b05000000	            mov rax, qword [0x04008fa2] 	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4008fa2	    0x48c700000000	                      mov qword [rax], 0	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4008fa9	    0x48c740080000	                  mov qword [rax + 8], 0	      6561	ops.c	FUNCTION_74
0x4008fb1	          0x4c89ef	                            mov rdi, r13	      6622	ops.c	FUNCTION_75	ELSE_1	IF_3	CALL_7
0x4008fb4	    0x4c8925000000	            mov qword [0x04008fbb], r12 	      6562	ops.c	FUNCTION_74
0x4008fbb	      0xe800000000	                          call 0x4008fc0	      6622	ops.c	FUNCTION_75	ELSE_1	IF_3	CALL_7
0x4008fc0	      0xe92cffffff	                           jmp 0x4008ef1	      6622	ops.c	FUNCTION_75	ELSE_1	IF_3	CALL_7
0x4008fc5	           0xf1f00	                         nop dword [rax]	      6622	ops.c	FUNCTION_75	ELSE_1	IF_3	CALL_7
0x4008fc8	    0x48833d000000	               cmp qword [0x04008fd0], 0	      6584	ops.c	FUNCTION_75	IF_1	IF_2
0x4008fd0	     0xf851bffffff	                           jne 0x4008ef1	      6584	ops.c	FUNCTION_75	IF_1	IF_2
0x4008fd6	      0xe941fdffff	                           jmp 0x4008d1c	      6584	ops.c	FUNCTION_75	IF_1	IF_2
0x4008fdb	       0xf1f440000	                   nop dword [rax + rax]	      6584	ops.c	FUNCTION_75	IF_1	IF_2
0x4008fe0	    0x48833d000000	               cmp qword [0x04008fe8], 0	      6583	ops.c	FUNCTION_75	IF_1	IF_2
0x4008fe8	     0xf8503ffffff	                           jne 0x4008ef1	      6583	ops.c	FUNCTION_75	IF_1	IF_2
0x4008fee	      0xe91cfdffff	                           jmp 0x4008d0f	      6583	ops.c	FUNCTION_75	IF_1	IF_2
0x4008ff3	      0xe800000000	                          call 0x4008ff8	      6624	ops.c	FUNCTION_75
init_yank	SWITCH,0:DO,0:ELSE,0:functions,0:FOR,1:IF,0:WHILE,0:CALL,0	7
0x4005af0	      0xb800000000	                              mov eax, 0	      2983	ops.c	FUNCTION_41
0x4005af5	           0xf1f00	                         nop dword [rax]	      2983	ops.c	FUNCTION_41
0x4005af8	    0x48c700000000	                      mov qword [rax], 0	      2987	ops.c	FUNCTION_41	FOR_1
0x4005aff	        0x4883c020	                           add rax, 0x20	      2987	ops.c	FUNCTION_41	FOR_1
0x4005b03	    0x483d00000000	                              cmp rax, 0	      2986	ops.c	FUNCTION_41	FOR_1
0x4005b09	            0x75ed	                           jne 0x4005af8	      2986	ops.c	FUNCTION_41	FOR_1
0x4005b0b	            0xf3c3	                                     ret	      2988	ops.c	FUNCTION_41
read_viminfo_register	SWITCH,0:DO,0:ELSE,6:functions,0:FOR,4:IF,17:WHILE,1:CALL,22	352
0x4007f90	            0x4157	                                push r15	      6086	ops.c	FUNCTION_70
0x4007f92	            0x4156	                                push r14	      6086	ops.c	FUNCTION_70
0x4007f94	          0x4989fe	                            mov r14, rdi	      6086	ops.c	FUNCTION_70
0x4007f97	            0x4155	                                push r13	      6086	ops.c	FUNCTION_70
0x4007f99	            0x4154	                                push r12	      6086	ops.c	FUNCTION_70
0x4007f9b	              0x55	                                push rbp	      6086	ops.c	FUNCTION_70
0x4007f9c	              0x53	                                push rbx	      6086	ops.c	FUNCTION_70
0x4007f9d	            0x31ed	                            xor ebp, ebp	      6086	ops.c	FUNCTION_70
0x4007f9f	            0x89f3	                            mov ebx, esi	      6086	ops.c	FUNCTION_70
0x4007fa1	        0x4883ec28	                           sub rsp, 0x28	      6086	ops.c	FUNCTION_70
0x4007fa5	          0x4c8b27	                    mov r12, qword [rdi]	      6099	ops.c	FUNCTION_70
0x4007fa8	    0x64488b042528	                mov rax, qword fs:[0x28]	      6086	ops.c	FUNCTION_70
0x4007fb1	      0x4889442418	             mov qword [rsp + 0x18], rax	      6086	ops.c	FUNCTION_70
0x4007fb6	            0x31c0	                            xor eax, eax	      6086	ops.c	FUNCTION_70
0x4007fb8	      0x498d542401	                      lea rdx, [r12 + 1]	      6099	ops.c	FUNCTION_70
0x4007fbd	      0x4889542410	             mov qword [rsp + 0x10], rdx	      6099	ops.c	FUNCTION_70
0x4007fc2	    0x410fb6442401	               movzx eax, byte [r12 + 1]	      6102	ops.c	FUNCTION_70	IF_1
0x4007fc8	            0x3c22	                            cmp al, 0x22	      6102	ops.c	FUNCTION_70	IF_1
0x4007fca	     0xf8430030000	                            je 0x4008300	      6102	ops.c	FUNCTION_70	IF_1
0x4007fd0	            0x89c1	                            mov ecx, eax	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x4007fd2	          0x83e1df	                     and ecx, 0xffffffdf	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x4007fd5	          0x83e941	                           sub ecx, 0x41	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x4007fd8	          0x80f919	                            cmp cl, 0x19	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x4007fdb	            0x764b	                           jbe 0x4008028	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x4007fdd	           0xfb6c8	                           movzx ecx, al	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x4007fe0	          0x83e930	                           sub ecx, 0x30	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x4007fe3	          0x83f909	                              cmp ecx, 9	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x4007fe6	            0x7640	                           jbe 0x4008028	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x4007fe8	            0x3c2d	                            cmp al, 0x2d	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x4007fea	            0x743c	                            je 0x4008028	      6108	ops.c	FUNCTION_70	IF_2	CALL_1
0x4007fec	            0x31ff	                            xor edi, edi	      6110	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0x4007fee	      0xba05000000	                              mov edx, 5	      6110	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0x4007ff3	      0xbe00000000	                              mov esi, 0	      6110	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0x4007ff8	      0xe800000000	                          call 0x4007ffd	      6110	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0x4007ffd	          0x4c89e2	                            mov rdx, r12	      6110	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0x4008000	          0x4889c6	                            mov rsi, rax	      6110	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0x4008003	      0xbf00000000	                              mov edi, 0	      6110	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0x4008008	      0xe800000000	                          call 0x400800d	      6110	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0x400800d	            0x89c2	                            mov edx, eax	      6110	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0x400800f	      0xb801000000	                              mov eax, 1	      6111	ops.c	FUNCTION_70	IF_2	IF_3
0x4008014	            0x85d2	                           test edx, edx	      6110	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0x4008016	     0xf85c8010000	                           jne 0x40081e4	      6110	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0x400801c	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      6110	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0x4008021	            0x31f6	                            xor esi, esi	      6112	ops.c	FUNCTION_70	IF_2
0x4008023	            0xeb08	                           jmp 0x400802d	      6112	ops.c	FUNCTION_70	IF_2
0x4008025	           0xf1f00	                         nop dword [rax]	      6112	ops.c	FUNCTION_70	IF_2
0x4008028	      0xbe01000000	                              mov esi, 1	      6088	ops.c	FUNCTION_70
0x400802d	        0x488d4201	                      lea rax, [rdx + 1]	      6114	ops.c	FUNCTION_70	CALL_4
0x4008031	    0xc70500000000	               mov dword [0x0400803b], 0	       912	ops.c	FUNCTION_15
0x400803b	      0x4889442410	             mov qword [rsp + 0x10], rax	      6114	ops.c	FUNCTION_70	CALL_4
0x4008040	           0xfb60a	                   movzx ecx, byte [rdx]	      6114	ops.c	FUNCTION_70	CALL_4
0x4008043	            0x85c9	                           test ecx, ecx	       913	ops.c	FUNCTION_15	IF_1
0x4008045	     0xf8425020000	                            je 0x4008270	       913	ops.c	FUNCTION_15	IF_1
0x400804b	          0x83f922	                           cmp ecx, 0x22	       913	ops.c	FUNCTION_15	IF_1
0x400804e	     0xf841c020000	                            je 0x4008270	       913	ops.c	FUNCTION_15	IF_1
0x4008054	          0x8d41d0	                   lea eax, [rcx - 0x30]	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x4008057	          0x83f809	                              cmp eax, 9	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x400805a	     0xf87e0010000	                            ja 0x4008240	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x4008060	            0x4898	                                    cdqe	       950	ops.c	FUNCTION_15
0x4008062	        0x48c1e005	                              shl rax, 5	       950	ops.c	FUNCTION_15
0x4008066	    0x480500000000	                              add rax, 0	       950	ops.c	FUNCTION_15
0x400806c	            0x85db	                           test ebx, ebx	      6115	ops.c	FUNCTION_70	IF_4
0x400806e	    0x488905000000	            mov qword [0x04008075], rax 	       950	ops.c	FUNCTION_15
0x4008075	     0xf8495010000	                            je 0x4008210	      6115	ops.c	FUNCTION_70	IF_4
0x400807b	        0x807a0140	                cmp byte [rdx + 1], 0x40	      6118	ops.c	FUNCTION_70	IF_5
0x400807f	     0xf84ad020000	                            je 0x4008332	      6118	ops.c	FUNCTION_70	IF_5
0x4008085	            0x85f6	                           test esi, esi	      6127	ops.c	FUNCTION_70	IF_7
0x4008087	     0xf8497010000	                            je 0x4008224	      6127	ops.c	FUNCTION_70	IF_7
0x400808d	            0x85ed	                           test ebp, ebp	      6135	ops.c	FUNCTION_70	IF_7	IF_8
0x400808f	            0x7407	                            je 0x4008098	      6135	ops.c	FUNCTION_70	IF_7	IF_8
0x4008091	    0x488905000000	            mov qword [0x04008098], rax 	      6136	ops.c	FUNCTION_70	IF_7	IF_8
0x4008098	      0xbf20030000	                          mov edi, 0x320	      6137	ops.c	FUNCTION_70	IF_7	CALL_5
0x400809d	      0xe800000000	                          call 0x40080a2	      6137	ops.c	FUNCTION_70	IF_7	CALL_5
0x40080a2	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      6138	ops.c	FUNCTION_70	IF_7	CALL_7
0x40080a7	          0x4989c4	                            mov r12, rax	      6137	ops.c	FUNCTION_70	IF_7	CALL_5
0x40080aa	      0xe800000000	                          call 0x40080af	      6138	ops.c	FUNCTION_70	IF_7	CALL_7
0x40080af	          0x4889c7	                            mov rdi, rax	      6138	ops.c	FUNCTION_70	IF_7	CALL_7
0x40080b2	      0xe800000000	                          call 0x40080b7	      6138	ops.c	FUNCTION_70	IF_7	CALL_7
0x40080b7	      0xb904000000	                              mov ecx, 4	      6139	ops.c	FUNCTION_70	IF_7	IF_9	CALL_8
0x40080bc	      0x4889442410	             mov qword [rsp + 0x10], rax	      6138	ops.c	FUNCTION_70	IF_7	CALL_7
0x40080c1	      0xbf00000000	                              mov edi, 0	      6139	ops.c	FUNCTION_70	IF_7	IF_9	CALL_8
0x40080c6	          0x4889c6	                            mov rsi, rax	      6139	ops.c	FUNCTION_70	IF_7	IF_9	CALL_8
0x40080c9	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      6139	ops.c	FUNCTION_70	IF_7	IF_9	CALL_8
0x40080cb	           0xf97c1	                                 seta cl	      6139	ops.c	FUNCTION_70	IF_7	IF_9	CALL_8
0x40080ce	           0xf92c2	                                 setb dl	      6139	ops.c	FUNCTION_70	IF_7	IF_9	CALL_8
0x40080d1	          0x4531ed	                          xor r13d, r13d	      6140	ops.c	FUNCTION_70	IF_7	IF_9
0x40080d4	            0x38d1	                              cmp cl, dl	      6139	ops.c	FUNCTION_70	IF_7	IF_9	CALL_8
0x40080d6	            0x7427	                            je 0x40080ff	      6139	ops.c	FUNCTION_70	IF_7	IF_9	CALL_8
0x40080d8	      0xb905000000	                              mov ecx, 5	      6141	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10	CALL_9
0x40080dd	      0xbf00000000	                              mov edi, 0	      6141	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10	CALL_9
0x40080e2	          0x4889c6	                            mov rsi, rax	      6141	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10	CALL_9
0x40080e5	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      6141	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10	CALL_9
0x40080e7	           0xf97c2	                                 seta dl	      6141	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10	CALL_9
0x40080ea	           0xf92c1	                                 setb cl	      6141	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10	CALL_9
0x40080ed	            0x29ca	                            sub edx, ecx	      6141	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10	CALL_9
0x40080ef	           0xfbed2	                           movsx edx, dl	      6141	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10	CALL_9
0x40080f2	          0x83fa01	                              cmp edx, 1	      6142	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10
0x40080f5	          0x4519ed	                          sbb r13d, r13d	      6142	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10
0x40080f8	          0x41f7d5	                                not r13d	      6142	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10
0x40080fb	        0x4183c502	                             add r13d, 2	      6142	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10
0x40080ff	          0x4889c7	                            mov rdi, rax	      6146	ops.c	FUNCTION_70	IF_7	CALL_11
0x4008102	      0xbb01000000	                              mov ebx, 1	      6147	ops.c	FUNCTION_70	IF_7	CALL_12
0x4008107	      0xe800000000	                          call 0x400810c	      6146	ops.c	FUNCTION_70	IF_7	CALL_11
0x400810c	          0x4889c7	                            mov rdi, rax	      6146	ops.c	FUNCTION_70	IF_7	CALL_11
0x400810f	      0xe800000000	                          call 0x4008114	      6146	ops.c	FUNCTION_70	IF_7	CALL_11
0x4008114	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      6147	ops.c	FUNCTION_70	IF_7	CALL_12
0x4008119	      0x4889442410	             mov qword [rsp + 0x10], rax	      6146	ops.c	FUNCTION_70	IF_7	CALL_11
0x400811e	      0xe800000000	                          call 0x4008123	      6147	ops.c	FUNCTION_70	IF_7	CALL_12
0x4008123	        0x8944240c	              mov dword [rsp + 0xc], eax	      6147	ops.c	FUNCTION_70	IF_7	CALL_12
0x4008127	    0xc70424640000	                   mov dword [rsp], 0x64	      6147	ops.c	FUNCTION_70	IF_7	CALL_12
0x400812e	            0x31ed	                            xor ebp, ebp	      6147	ops.c	FUNCTION_70	IF_7	CALL_12
0x4008130	            0xeb1e	                           jmp 0x4008150	      6147	ops.c	FUNCTION_70	IF_7	CALL_12
0x4008132	    0x660f1f440000	                    nop word [rax + rax]	      6147	ops.c	FUNCTION_70	IF_7	CALL_12
0x4008138	          0x498b06	                    mov rax, qword [r14]	      6151	ops.c	FUNCTION_70	WHILE_1
0x400813b	           0xfb610	                   movzx edx, byte [rax]	      6151	ops.c	FUNCTION_70	WHILE_1
0x400813e	          0x80fa09	                               cmp dl, 9	      6151	ops.c	FUNCTION_70	WHILE_1
0x4008141	            0x7405	                            je 0x4008148	      6151	ops.c	FUNCTION_70	WHILE_1
0x4008143	          0x80fa3c	                            cmp dl, 0x3c	      6151	ops.c	FUNCTION_70	WHILE_1
0x4008146	            0x7517	                           jne 0x400815f	      6151	ops.c	FUNCTION_70	WHILE_1
0x4008148	            0x85db	                           test ebx, ebx	      6153	ops.c	FUNCTION_70	WHILE_1	IF_11
0x400814a	     0xf8570010000	                           jne 0x40082c0	      6153	ops.c	FUNCTION_70	WHILE_1	IF_11
0x4008150	          0x4c89f7	                            mov rdi, r14	      6150	ops.c	FUNCTION_70	WHILE_1	CALL_13
0x4008153	      0xe800000000	                          call 0x4008158	      6150	ops.c	FUNCTION_70	WHILE_1	CALL_13
0x4008158	            0x85c0	                           test eax, eax	      6150	ops.c	FUNCTION_70	WHILE_1	CALL_13
0x400815a	          0x4189c7	                           mov r15d, eax	      6150	ops.c	FUNCTION_70	WHILE_1	CALL_13
0x400815d	            0x74d9	                            je 0x4008138	      6150	ops.c	FUNCTION_70	WHILE_1	CALL_13
0x400815f	            0x85db	                           test ebx, ebx	      6180	ops.c	FUNCTION_70	ELSE_3	IF_15
0x4008161	     0xf8429010000	                            je 0x4008290	      6180	ops.c	FUNCTION_70	ELSE_3	IF_15
0x4008167	    0x488b05000000	            mov rax, qword [0x0400816e] 	      6183	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0x400816e	      0xbb01000000	                              mov ebx, 1	      6183	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0x4008173	      0x4883780800	                  cmp qword [rax + 8], 0	      6183	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0x4008178	            0x7e27	                           jle 0x40081a1	      6183	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0x400817a	    0x660f1f440000	                    nop word [rax + rax]	      6183	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0x4008180	          0x488b00	                    mov rax, qword [rax]	      6184	ops.c	FUNCTION_70	ELSE_3	IF_15	CALL_17
0x4008183	      0x488b7cd8f8	        mov rdi, qword [rax + rbx*8 - 8]	      6184	ops.c	FUNCTION_70	ELSE_3	IF_15	CALL_17
0x4008188	      0xe800000000	                          call 0x400818d	      6184	ops.c	FUNCTION_70	ELSE_3	IF_15	CALL_17
0x400818d	    0x488b05000000	            mov rax, qword [0x04008194] 	      6183	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0x4008194	          0x4889da	                            mov rdx, rbx	      6183	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0x4008197	        0x4883c301	                              add rbx, 1	      6183	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0x400819b	        0x483b5008	                cmp rdx, qword [rax + 8]	      6183	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0x400819f	            0x7cdf	                            jl 0x4008180	      6183	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0x40081a1	          0x488b38	                    mov rdi, qword [rax]	      6185	ops.c	FUNCTION_70	ELSE_3	IF_15	CALL_18
0x40081a4	      0xe800000000	                          call 0x40081a9	      6185	ops.c	FUNCTION_70	ELSE_3	IF_15	CALL_18
0x40081a9	    0x488b1d000000	            mov rbx, qword [0x040081b0] 	      6187	ops.c	FUNCTION_70	ELSE_3	IF_15
0x40081b0	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      6188	ops.c	FUNCTION_70	ELSE_3	IF_15
0x40081b4	            0x85ed	                           test ebp, ebp	      6191	ops.c	FUNCTION_70	ELSE_3	IF_15	IF_16
0x40081b6	          0x894314	             mov dword [rbx + 0x14], eax	      6188	ops.c	FUNCTION_70	ELSE_3	IF_15
0x40081b9	          0x4863c5	                         movsxd rax, ebp	      6189	ops.c	FUNCTION_70	ELSE_3	IF_15
0x40081bc	        0x44886b10	             mov byte [rbx + 0x10], r13b	      6187	ops.c	FUNCTION_70	ELSE_3	IF_15
0x40081c0	        0x48894308	                mov qword [rbx + 8], rax	      6189	ops.c	FUNCTION_70	ELSE_3	IF_15
0x40081c4	    0x48c743180000	               mov qword [rbx + 0x18], 0	      6190	ops.c	FUNCTION_70	ELSE_3	IF_15
0x40081cc	     0xf856b010000	                           jne 0x400833d	      6191	ops.c	FUNCTION_70	ELSE_3	IF_15	IF_16
0x40081d2	    0x48c703000000	                      mov qword [rbx], 0	      6193	ops.c	FUNCTION_70	ELSE_3	IF_15	IF_16
0x40081d9	          0x4c89e7	                            mov rdi, r12	      6215	ops.c	FUNCTION_70	CALL_22
0x40081dc	      0xe800000000	                          call 0x40081e1	      6215	ops.c	FUNCTION_70	CALL_22
0x40081e1	          0x4489f8	                           mov eax, r15d	      6217	ops.c	FUNCTION_70
0x40081e4	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      6218	ops.c	FUNCTION_70
0x40081e9	    0x644833342528	                xor rsi, qword fs:[0x28]	      6218	ops.c	FUNCTION_70
0x40081f2	     0xf85fe020000	                           jne 0x40084f6	      6218	ops.c	FUNCTION_70
0x40081f8	        0x4883c428	                           add rsp, 0x28	      6218	ops.c	FUNCTION_70
0x40081fc	              0x5b	                                 pop rbx	      6218	ops.c	FUNCTION_70
0x40081fd	              0x5d	                                 pop rbp	      6218	ops.c	FUNCTION_70
0x40081fe	            0x415c	                                 pop r12	      6218	ops.c	FUNCTION_70
0x4008200	            0x415d	                                 pop r13	      6218	ops.c	FUNCTION_70
0x4008202	            0x415e	                                 pop r14	      6218	ops.c	FUNCTION_70
0x4008204	            0x415f	                                 pop r15	      6218	ops.c	FUNCTION_70
0x4008206	              0xc3	                                     ret	      6218	ops.c	FUNCTION_70
0x4008207	    0x660f1f840000	                    nop word [rax + rax]	      6218	ops.c	FUNCTION_70
0x4008210	        0x48833800	                      cmp qword [rax], 0	      6115	ops.c	FUNCTION_70	IF_4
0x4008214	     0xf8446020000	                            je 0x4008460	      6115	ops.c	FUNCTION_70	IF_4
0x400821a	        0x807a0140	                cmp byte [rdx + 1], 0x40	      6118	ops.c	FUNCTION_70	IF_5
0x400821e	     0xf84fe000000	                            je 0x4008322	      6118	ops.c	FUNCTION_70	IF_5
0x4008224	            0x31db	                            xor ebx, ebx	      6144	ops.c	FUNCTION_70	IF_7	ELSE_2
0x4008226	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      6096	ops.c	FUNCTION_70
0x400822e	          0x4531ed	                          xor r13d, r13d	      6095	ops.c	FUNCTION_70
0x4008231	          0x4531e4	                          xor r12d, r12d	      6094	ops.c	FUNCTION_70
0x4008234	      0xe9eefeffff	                           jmp 0x4008127	      6094	ops.c	FUNCTION_70
0x4008239	     0xf1f80000000	                         nop dword [rax]	      6094	ops.c	FUNCTION_70
0x4008240	          0x8d419f	                   lea eax, [rcx - 0x61]	       921	ops.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x4008243	          0x83f819	                           cmp eax, 0x19	       921	ops.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x4008246	     0xf86ce000000	                           jbe 0x400831a	       921	ops.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x400824c	          0x8d41bf	                   lea eax, [rcx - 0x41]	       923	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_4
0x400824f	          0x83f819	                           cmp eax, 0x19	       923	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_4
0x4008252	     0xf8725020000	                            ja 0x400847d	       923	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_4
0x4008258	          0x8d41c9	                   lea eax, [rcx - 0x37]	       925	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_5
0x400825b	    0xc70500000000	               mov dword [0x04008265], 1	       926	ops.c	FUNCTION_15	ELSE_2	IF_4
0x4008265	      0xe9f6fdffff	                           jmp 0x4008060	       926	ops.c	FUNCTION_15	ELSE_2	IF_4
0x400826a	    0x660f1f440000	                    nop word [rax + rax]	       926	ops.c	FUNCTION_15	ELSE_2	IF_4
0x4008270	    0x488b05000000	            mov rax, qword [0x04008277] 	       913	ops.c	FUNCTION_15	IF_1
0x4008277	          0x4885c0	                           test rax, rax	       913	ops.c	FUNCTION_15	IF_1
0x400827a	     0xf85ecfdffff	                           jne 0x400806c	       913	ops.c	FUNCTION_15	IF_1
0x4008280	          0x8d41d0	                   lea eax, [rcx - 0x30]	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x4008283	          0x83f809	                              cmp eax, 9	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x4008286	     0xf86d4fdffff	                           jbe 0x4008060	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x400828c	            0xebb2	                           jmp 0x4008240	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x400828e	            0x6690	                                     nop	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x4008290	            0x31db	                            xor ebx, ebx	      6212	ops.c	FUNCTION_70	ELSE_6	FOR_4
0x4008292	            0x85ed	                           test ebp, ebp	      6212	ops.c	FUNCTION_70	ELSE_6	FOR_4
0x4008294	     0xf8e3fffffff	                           jle 0x40081d9	      6212	ops.c	FUNCTION_70	ELSE_6	FOR_4
0x400829a	    0x660f1f440000	                    nop word [rax + rax]	      6212	ops.c	FUNCTION_70	ELSE_6	FOR_4
0x40082a0	        0x498b3cdc	            mov rdi, qword [r12 + rbx*8]	      6213	ops.c	FUNCTION_70	ELSE_6	CALL_21
0x40082a4	        0x4883c301	                              add rbx, 1	      6213	ops.c	FUNCTION_70	ELSE_6	CALL_21
0x40082a8	      0xe800000000	                          call 0x40082ad	      6213	ops.c	FUNCTION_70	ELSE_6	CALL_21
0x40082ad	            0x39dd	                            cmp ebp, ebx	      6212	ops.c	FUNCTION_70	ELSE_6	FOR_4
0x40082af	            0x7fef	                            jg 0x40082a0	      6212	ops.c	FUNCTION_70	ELSE_6	FOR_4
0x40082b1	      0xe923ffffff	                           jmp 0x40081d9	      6212	ops.c	FUNCTION_70	ELSE_6	FOR_4
0x40082b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      6212	ops.c	FUNCTION_70	ELSE_6	FOR_4
0x40082c0	          0x3b2c24	                    cmp ebp, dword [rsp]	      6155	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12
0x40082c3	     0xf84c6000000	                            je 0x400838f	      6155	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12
0x40082c9	      0xba01000000	                              mov edx, 1	      6171	ops.c	FUNCTION_70	WHILE_1	IF_11	CALL_16
0x40082ce	      0xbe01000000	                              mov esi, 1	      6171	ops.c	FUNCTION_70	WHILE_1	IF_11	CALL_16
0x40082d3	          0x4c89f7	                            mov rdi, r14	      6171	ops.c	FUNCTION_70	WHILE_1	IF_11	CALL_16
0x40082d6	      0xe800000000	                          call 0x40082db	      6171	ops.c	FUNCTION_70	WHILE_1	IF_11	CALL_16
0x40082db	          0x4885c0	                           test rax, rax	      6172	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0x40082de	      0x4889442410	             mov qword [rsp + 0x10], rax	      6171	ops.c	FUNCTION_70	WHILE_1	IF_11	CALL_16
0x40082e3	     0xf84eb010000	                            je 0x40084d4	      6172	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0x40082e9	          0x4863d5	                         movsxd rdx, ebp	      6173	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0x40082ec	      0xbb01000000	                              mov ebx, 1	      6173	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0x40082f1	          0x83c501	                              add ebp, 1	      6173	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0x40082f4	        0x498904d4	            mov qword [r12 + rdx*8], rax	      6173	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0x40082f8	      0xe953feffff	                           jmp 0x4008150	      6173	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0x40082fd	           0xf1f00	                         nop dword [rax]	      6173	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0x4008300	      0x498d542402	                      lea rdx, [r12 + 2]	      6105	ops.c	FUNCTION_70	IF_1
0x4008305	      0xbd01000000	                              mov ebp, 1	      6104	ops.c	FUNCTION_70	IF_1
0x400830a	      0x4889542410	             mov qword [rsp + 0x10], rdx	      6105	ops.c	FUNCTION_70	IF_1
0x400830f	    0x410fb6442402	               movzx eax, byte [r12 + 2]	      6105	ops.c	FUNCTION_70	IF_1
0x4008315	      0xe9b6fcffff	                           jmp 0x4007fd0	      6105	ops.c	FUNCTION_70	IF_1
0x400831a	          0x8d41a9	                   lea eax, [rcx - 0x57]	       922	ops.c	FUNCTION_15	ELSE_1	IF_3
0x400831d	      0xe93efdffff	                           jmp 0x4008060	       922	ops.c	FUNCTION_15	ELSE_1	IF_3
0x4008322	    0x8b1500000000	            mov edx, dword [0x04008328] 	      6121	ops.c	FUNCTION_70	IF_5	IF_6
0x4008328	            0x85d2	                           test edx, edx	      6121	ops.c	FUNCTION_70	IF_5	IF_6
0x400832a	     0xf85f4feffff	                           jne 0x4008224	      6121	ops.c	FUNCTION_70	IF_5	IF_6
0x4008330	            0x31f6	                            xor esi, esi	      6116	ops.c	FUNCTION_70	IF_4
0x4008332	    0x890d00000000	            mov dword [0x04008338], ecx 	      6122	ops.c	FUNCTION_70	IF_5	IF_6
0x4008338	      0xe948fdffff	                           jmp 0x4008085	      6122	ops.c	FUNCTION_70	IF_5	IF_6
0x400833d	    0x8d3ced000000	                        lea edi, [rbp*8]	      6199	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	CALL_19
0x4008344	      0xe800000000	                          call 0x4008349	      6199	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	CALL_19
0x4008349	          0x488903	                    mov qword [rbx], rax	      6198	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4
0x400834c	          0x8d45ff	                      lea eax, [rbp - 1]	      6198	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4
0x400834f	            0x31db	                            xor ebx, ebx	      6198	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4
0x4008351	    0x488d2cc50800	                    lea rbp, [rax*8 + 8]	      6198	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4
0x4008359	            0xeb1a	                           jmp 0x4008375	      6198	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4
0x400835b	       0xf1f440000	                   nop dword [rax + rax]	      6198	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4
0x4008360	        0x498b141c	              mov rdx, qword [r12 + rbx]	      6205	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	ELSE_5
0x4008364	        0x48891418	              mov qword [rax + rbx], rdx	      6205	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	ELSE_5
0x4008368	        0x4883c308	                              add rbx, 8	      6205	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	ELSE_5
0x400836c	          0x4839eb	                            cmp rbx, rbp	      6200	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3
0x400836f	     0xf8464feffff	                            je 0x40081d9	      6200	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3
0x4008375	    0x488b05000000	            mov rax, qword [0x0400837c] 	      6202	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	IF_17
0x400837c	          0x488b00	                    mov rax, qword [rax]	      6202	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	IF_17
0x400837f	          0x4885c0	                           test rax, rax	      6202	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	IF_17
0x4008382	            0x75dc	                           jne 0x4008360	      6202	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	IF_17
0x4008384	        0x498b3c1c	              mov rdi, qword [r12 + rbx]	      6203	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	CALL_20
0x4008388	      0xe800000000	                          call 0x400838d	      6203	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	CALL_20
0x400838d	            0xebd9	                           jmp 0x4008368	      6203	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	CALL_20
0x400838f	            0x89ef	                            mov edi, ebp	      6157	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12
0x4008391	        0x8d5c2d00	                    lea ebx, [rbp + rbp]	      6158	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	CALL_14
0x4008395	          0xc1e704	                              shl edi, 4	      6157	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12
0x4008398	      0xe800000000	                          call 0x400839d	      6157	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12
0x400839d	          0x4885c0	                           test rax, rax	      6160	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	IF_13
0x40083a0	     0xf84eafeffff	                            je 0x4008290	      6160	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	IF_13
0x40083a6	            0x85ed	                           test ebp, ebp	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x40083a8	     0xf8e97000000	                           jle 0x4008445	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x40083ae	        0x488d5010	                   lea rdx, [rax + 0x10]	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x40083b2	          0x4939d4	                            cmp r12, rdx	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x40083b5	      0x498d542410	                   lea rdx, [r12 + 0x10]	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x40083ba	           0xf93c1	                                setae cl	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x40083bd	          0x4839d0	                            cmp rax, rdx	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x40083c0	           0xf93c2	                                setae dl	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x40083c3	             0x8d1	                               or cl, dl	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x40083c5	     0xf8410010000	                            je 0x40084db	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x40083cb	          0x83fd18	                           cmp ebp, 0x18	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x40083ce	     0xf8607010000	                           jbe 0x40084db	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x40083d4	          0x4c89e2	                            mov rdx, r12	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x40083d7	        0x48c1e23c	                           shl rdx, 0x3c	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x40083db	        0x48c1ea3f	                           shr rdx, 0x3f	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x40083df	            0x39ea	                            cmp edx, ebp	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x40083e1	           0xf47d5	                          cmova edx, ebp	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x40083e4	            0x31c9	                            xor ecx, ecx	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x40083e6	            0x85d2	                           test edx, edx	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x40083e8	            0x740c	                            je 0x40083f6	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x40083ea	        0x498b0c24	                    mov rcx, qword [r12]	      6166	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x40083ee	          0x488908	                    mov qword [rax], rcx	      6166	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x40083f1	      0xb901000000	                              mov ecx, 1	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x40083f6	            0x89ef	                            mov edi, ebp	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x40083f8	          0x4531d2	                          xor r10d, r10d	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x40083fb	          0x4531ff	                          xor r15d, r15d	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x40083fe	            0x29d7	                            sub edi, edx	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x4008400	            0x89d2	                            mov edx, edx	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x4008402	          0x8d77fe	                      lea esi, [rdi - 2]	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x4008405	        0x48c1e203	                              shl rdx, 3	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x4008409	        0x4d8d1c14	                    lea r11, [r12 + rdx]	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x400840d	          0x4801c2	                            add rdx, rax	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x4008410	            0xd1ee	                              shr esi, 1	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x4008412	          0x83c601	                              add esi, 1	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x4008415	        0x448d0c36	                    lea r9d, [rsi + rsi]	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x4008419	    0x66430f6f0413	        movdqa xmm0, xmmword [r11 + r10]	      6166	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x400841f	        0x4183c701	                             add r15d, 1	      6166	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x4008423	      0x420f110412	        movups xmmword [rdx + r10], xmm0	      6166	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x4008428	        0x4983c210	                           add r10, 0x10	      6166	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x400842c	          0x4139f7	                           cmp r15d, esi	      6166	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x400842f	            0x72e8	                            jb 0x4008419	      6166	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x4008431	          0x4439cf	                            cmp edi, r9d	      6166	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x4008434	        0x418d1409	                     lea edx, [r9 + rcx]	      6166	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x4008438	            0x740b	                            je 0x4008445	      6166	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x400843a	          0x4863d2	                         movsxd rdx, edx	      6166	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x400843d	        0x498b0cd4	            mov rcx, qword [r12 + rdx*8]	      6166	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x4008441	        0x48890cd0	            mov qword [rax + rdx*8], rcx	      6166	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x4008445	          0x4c89e7	                            mov rdi, r12	      6167	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	CALL_15
0x4008448	        0x48890424	                    mov qword [rsp], rax	      6167	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	CALL_15
0x400844c	      0xe800000000	                          call 0x4008451	      6167	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	CALL_15
0x4008451	        0x488b0424	                    mov rax, qword [rsp]	      6167	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	CALL_15
0x4008455	          0x891c24	                    mov dword [rsp], ebx	      6169	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12
0x4008458	          0x4989c4	                            mov r12, rax	      6167	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	CALL_15
0x400845b	      0xe969feffff	                           jmp 0x40082c9	      6167	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	CALL_15
0x4008460	        0x807a0140	                cmp byte [rdx + 1], 0x40	      6118	ops.c	FUNCTION_70	IF_5
0x4008464	     0xf851bfcffff	                           jne 0x4008085	      6118	ops.c	FUNCTION_70	IF_5
0x400846a	    0x8b3d00000000	            mov edi, dword [0x04008470] 	      6121	ops.c	FUNCTION_70	IF_5	IF_6
0x4008470	            0x85ff	                           test edi, edi	      6121	ops.c	FUNCTION_70	IF_5	IF_6
0x4008472	     0xf850dfcffff	                           jne 0x4008085	      6121	ops.c	FUNCTION_70	IF_5	IF_6
0x4008478	      0xe9b5feffff	                           jmp 0x4008332	      6121	ops.c	FUNCTION_70	IF_5	IF_6
0x400847d	          0x83f92d	                           cmp ecx, 0x2d	       928	ops.c	FUNCTION_15	ELSE_3	IF_5
0x4008480	      0xb824000000	                           mov eax, 0x24	       929	ops.c	FUNCTION_15	ELSE_3	IF_5
0x4008485	     0xf84d5fbffff	                            je 0x4008060	       928	ops.c	FUNCTION_15	ELSE_3	IF_5
0x400848b	    0x448b0d000000	            mov r9d, dword [0x04008492] 	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x4008492	          0x4585c9	                           test r9d, r9d	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x4008495	            0x740e	                            je 0x40084a5	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x4008497	          0x83f92a	                           cmp ecx, 0x2a	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x400849a	      0xb825000000	                           mov eax, 0x25	       934	ops.c	FUNCTION_15	ELSE_4	IF_6
0x400849f	     0xf84bbfbffff	                            je 0x4008060	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x40084a5	    0x448b05000000	            mov r8d, dword [0x040084ac] 	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x40084ac	          0x4585c0	                           test r8d, r8d	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x40084af	            0x740e	                            je 0x40084bf	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x40084b1	          0x83f92b	                           cmp ecx, 0x2b	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x40084b4	      0xb826000000	                           mov eax, 0x26	       940	ops.c	FUNCTION_15	ELSE_5	IF_7
0x40084b9	     0xf84a1fbffff	                            je 0x4008060	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x40084bf	          0x83f97e	                           cmp ecx, 0x7e	       949	ops.c	FUNCTION_15	ELSE_7
0x40084c2	      0xbf00000000	                              mov edi, 0	       949	ops.c	FUNCTION_15	ELSE_7
0x40084c7	      0xb827000000	                           mov eax, 0x27	       949	ops.c	FUNCTION_15	ELSE_7
0x40084cc	           0xf45c7	                         cmovne eax, edi	       949	ops.c	FUNCTION_15	ELSE_7
0x40084cf	      0xe98cfbffff	                           jmp 0x4008060	       949	ops.c	FUNCTION_15	ELSE_7
0x40084d4	            0x31db	                            xor ebx, ebx	      6176	ops.c	FUNCTION_70	WHILE_1	IF_11	ELSE_3
0x40084d6	      0xe975fcffff	                           jmp 0x4008150	      6176	ops.c	FUNCTION_70	WHILE_1	IF_11	ELSE_3
0x40084db	            0x31d2	                            xor edx, edx	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x40084dd	           0xf1f00	                         nop dword [rax]	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x40084e0	        0x498b0cd4	            mov rcx, qword [r12 + rdx*8]	      6166	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x40084e4	        0x48890cd0	            mov qword [rax + rdx*8], rcx	      6166	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x40084e8	        0x4883c201	                              add rdx, 1	      6166	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x40084ec	          0x391424	                    cmp dword [rsp], edx	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x40084ef	            0x7fef	                            jg 0x40084e0	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x40084f1	      0xe94fffffff	                           jmp 0x4008445	      6165	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0x40084f6	      0xe800000000	                          call 0x40084fb	      6218	ops.c	FUNCTION_70
write_reg_contents_lst	SWITCH,0:DO,0:ELSE,2:functions,0:FOR,0:IF,5:WHILE,0:CALL,6	302
0x400f040	            0x4157	                                push r15	      7005	ops.c	FUNCTION_86
0x400f042	            0x4156	                                push r14	      7005	ops.c	FUNCTION_86
0x400f044	          0x4d89cf	                             mov r15, r9	      7005	ops.c	FUNCTION_86
0x400f047	            0x4155	                                push r13	      7005	ops.c	FUNCTION_86
0x400f049	            0x4154	                                push r12	      7005	ops.c	FUNCTION_86
0x400f04b	          0x4589c4	                           mov r12d, r8d	      7005	ops.c	FUNCTION_86
0x400f04e	              0x55	                                push rbp	      7005	ops.c	FUNCTION_86
0x400f04f	              0x53	                                push rbx	      7005	ops.c	FUNCTION_86
0x400f050	          0x4889f5	                            mov rbp, rsi	      7005	ops.c	FUNCTION_86
0x400f053	            0x89fb	                            mov ebx, edi	      7005	ops.c	FUNCTION_86
0x400f055	        0x4883ec38	                           sub rsp, 0x38	      7005	ops.c	FUNCTION_86
0x400f059	          0x83ff2f	                           cmp edi, 0x2f	      7008	ops.c	FUNCTION_86	IF_1
0x400f05c	            0x746a	                            je 0x400f0c8	      7008	ops.c	FUNCTION_86	IF_1
0x400f05e	          0x83ff3d	                           cmp edi, 0x3d	      7008	ops.c	FUNCTION_86	IF_1
0x400f061	            0x7465	                            je 0x400f0c8	      7008	ops.c	FUNCTION_86	IF_1
0x400f063	          0x83ff5f	                           cmp edi, 0x5f	      7030	ops.c	FUNCTION_86	IF_4
0x400f066	     0xf84f1010000	                            je 0x400f25d	      7030	ops.c	FUNCTION_86	IF_4
0x400f06c	            0x85ff	                           test edi, edi	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x400f06e	            0x7e32	                           jle 0x400f0a2	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x400f070	            0x89f8	                            mov eax, edi	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x400f072	          0x83e0df	                     and eax, 0xffffffdf	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x400f075	          0x83e841	                           sub eax, 0x41	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x400f078	          0x83f819	                           cmp eax, 0x19	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x400f07b	     0xf8617020000	                           jbe 0x400f298	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x400f081	          0x8d47d0	                   lea eax, [rdi - 0x30]	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x400f084	          0x83f809	                              cmp eax, 9	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x400f087	     0xf86b3030000	                           jbe 0x400f440	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x400f08d	          0x8d47de	                   lea eax, [rdi - 0x22]	       880	ops.c	FUNCTION_14	IF_1
0x400f090	          0x83f801	                              cmp eax, 1	       880	ops.c	FUNCTION_14	IF_1
0x400f093	     0xf866f030000	                           jbe 0x400f408	       880	ops.c	FUNCTION_14	IF_1
0x400f099	          0x83ff2d	                           cmp edi, 0x2d	       882	ops.c	FUNCTION_14	IF_1
0x400f09c	     0xf8466030000	                            je 0x400f408	       882	ops.c	FUNCTION_14	IF_1
0x400f0a2	          0x8d43d6	                   lea eax, [rbx - 0x2a]	       885	ops.c	FUNCTION_14	IF_1
0x400f0a5	          0x83f801	                              cmp eax, 1	       885	ops.c	FUNCTION_14	IF_1
0x400f0a8	     0xf86ea010000	                           jbe 0x400f298	       885	ops.c	FUNCTION_14	IF_1
0x400f0ae	        0x4883c438	                           add rsp, 0x38	      7040	ops.c	FUNCTION_86
0x400f0b2	            0x89df	                            mov edi, ebx	      6947	ops.c	FUNCTION_83	IF_1	CALL_2
0x400f0b4	              0x5b	                                 pop rbx	      7040	ops.c	FUNCTION_86
0x400f0b5	              0x5d	                                 pop rbp	      7040	ops.c	FUNCTION_86
0x400f0b6	            0x415c	                                 pop r12	      7040	ops.c	FUNCTION_86
0x400f0b8	            0x415d	                                 pop r13	      7040	ops.c	FUNCTION_86
0x400f0ba	            0x415e	                                 pop r14	      7040	ops.c	FUNCTION_86
0x400f0bc	            0x415f	                                 pop r15	      7040	ops.c	FUNCTION_86
0x400f0be	      0xe900000000	                           jmp 0x400f0c3	      6947	ops.c	FUNCTION_83	IF_1	CALL_2
0x400f0c3	       0xf1f440000	                   nop dword [rax + rax]	      6947	ops.c	FUNCTION_83	IF_1	CALL_2
0x400f0c8	        0x488b7500	                    mov rsi, qword [rbp]	      7016	ops.c	FUNCTION_86	IF_1	IF_2
0x400f0cc	          0x4885f6	                           test rsi, rsi	      7016	ops.c	FUNCTION_86	IF_1	IF_2
0x400f0cf	     0xf849b010000	                            je 0x400f270	      7016	ops.c	FUNCTION_86	IF_1	IF_2
0x400f0d5	      0x48837d0800	                  cmp qword [rbp + 8], 0	      7018	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3
0x400f0da	     0xf8495010000	                            je 0x400f275	      7018	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3
0x400f0e0	            0x31ff	                            xor edi, edi	      7020	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3	CALL_2
0x400f0e2	      0xba05000000	                              mov edx, 5	      7020	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3	CALL_2
0x400f0e7	      0xbe00000000	                              mov esi, 0	      7020	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3	CALL_2
0x400f0ec	      0xe800000000	                          call 0x400f0f1	      7020	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3	CALL_2
0x400f0f1	        0x4883c438	                           add rsp, 0x38	      7040	ops.c	FUNCTION_86
0x400f0f5	          0x4889c7	                            mov rdi, rax	      7020	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3	CALL_2
0x400f0f8	              0x5b	                                 pop rbx	      7040	ops.c	FUNCTION_86
0x400f0f9	              0x5d	                                 pop rbp	      7040	ops.c	FUNCTION_86
0x400f0fa	            0x415c	                                 pop r12	      7040	ops.c	FUNCTION_86
0x400f0fc	            0x415d	                                 pop r13	      7040	ops.c	FUNCTION_86
0x400f0fe	            0x415e	                                 pop r14	      7040	ops.c	FUNCTION_86
0x400f100	            0x415f	                                 pop r15	      7040	ops.c	FUNCTION_86
0x400f102	      0xe900000000	                           jmp 0x400f107	      7020	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3	CALL_2
0x400f107	    0x660f1f840000	                    nop word [rax + rax]	      7020	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3	CALL_2
0x400f110	    0x488d3ccd0000	                        lea rdi, [rcx*8]	      7193	ops.c	FUNCTION_88	CALL_2
0x400f118	      0xbe01000000	                              mov esi, 1	      7193	ops.c	FUNCTION_88	CALL_2
0x400f11d	      0xe800000000	                          call 0x400f122	      7193	ops.c	FUNCTION_88	CALL_2
0x400f122	          0x4885c0	                           test rax, rax	      7195	ops.c	FUNCTION_88	IF_8
0x400f125	          0x4989c5	                            mov r13, rax	      7193	ops.c	FUNCTION_88	CALL_2
0x400f128	     0xf84d8000000	                            je 0x400f206	      7195	ops.c	FUNCTION_88	IF_8
0x400f12e	        0x4d8b4608	                 mov r8, qword [r14 + 8]	      7197	ops.c	FUNCTION_88	FOR_3
0x400f132	          0x4d85c0	                             test r8, r8	      7197	ops.c	FUNCTION_88	FOR_3
0x400f135	     0xf8ed2030000	                           jle 0x400f50d	      7197	ops.c	FUNCTION_88	FOR_3
0x400f13b	    0x4a8d3cc50000	                         lea rdi, [r8*8]	      7197	ops.c	FUNCTION_88	FOR_3
0x400f143	            0x31c9	                            xor ecx, ecx	      7197	ops.c	FUNCTION_88	FOR_3
0x400f145	           0xf1f00	                         nop dword [rax]	      7197	ops.c	FUNCTION_88	FOR_3
0x400f148	          0x498b36	                    mov rsi, qword [r14]	      7198	ops.c	FUNCTION_88	FOR_3
0x400f14b	        0x488b340e	              mov rsi, qword [rsi + rcx]	      7198	ops.c	FUNCTION_88	FOR_3
0x400f14f	      0x4989740d00	              mov qword [r13 + rcx], rsi	      7198	ops.c	FUNCTION_88	FOR_3
0x400f154	        0x4883c108	                              add rcx, 8	      7198	ops.c	FUNCTION_88	FOR_3
0x400f158	          0x4839f9	                            cmp rcx, rdi	      7197	ops.c	FUNCTION_88	FOR_3
0x400f15b	            0x75eb	                           jne 0x400f148	      7197	ops.c	FUNCTION_88	FOR_3
0x400f15d	      0x448944242c	             mov dword [rsp + 0x2c], r8d	      7197	ops.c	FUNCTION_88	FOR_3
0x400f162	          0x498b3e	                    mov rdi, qword [r14]	      7199	ops.c	FUNCTION_88	CALL_3
0x400f165	        0x4c890424	                     mov qword [rsp], r8	      7199	ops.c	FUNCTION_88	CALL_3
0x400f169	      0xe800000000	                          call 0x400f16e	      7199	ops.c	FUNCTION_88	CALL_3
0x400f16e	          0x4d892e	                    mov qword [r14], r13	      7200	ops.c	FUNCTION_88
0x400f171	        0x488b4d00	                    mov rcx, qword [rbp]	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x400f175	        0x4c8b0424	                     mov r8, qword [rsp]	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x400f179	          0x4885c9	                           test rcx, rcx	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x400f17c	     0xf8483030000	                            je 0x400f505	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x400f182	      0x486374242c	         movsxd rsi, dword [rsp + 0x2c] 	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x400f187	      0x4d8d5cf500	                  lea r11, [r13 + rsi*8]	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x400f18c	          0x4531ed	                          xor r13d, r13d	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x400f18f	              0x90	                                     nop	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x400f190	          0x4889cf	                            mov rdi, rcx	      7210	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_4
0x400f193	      0x4c895c2410	             mov qword [rsp + 0x10], r11	      7210	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_4
0x400f198	      0x48894c2408	                mov qword [rsp + 8], rcx	      7210	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_4
0x400f19d	      0xe800000000	                          call 0x400f1a2	      7210	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_4
0x400f1a2	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      7211	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0x400f1a7	            0x89c6	                            mov esi, eax	      7211	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0x400f1a9	        0x48890424	                    mov qword [rsp], rax	      7211	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0x400f1ad	          0x4889cf	                            mov rdi, rcx	      7211	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0x400f1b0	      0xe800000000	                          call 0x400f1b5	      7211	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0x400f1b5	        0x4c8b0424	                     mov r8, qword [rsp]	      7211	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0x400f1b9	      0x4c8b5c2410	            mov r11, qword [rsp + 0x10] 	      7211	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0x400f1be	          0x4d39c5	                             cmp r13, r8	      7211	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0x400f1c1	          0x498903	                    mov qword [r11], rax	      7211	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0x400f1c4	        0x4d0f4ce8	                           cmovl r13, r8	      7211	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0x400f1c8	        0x4883c508	                              add rbp, 8	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x400f1cc	        0x488b4d00	                    mov rcx, qword [rbp]	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x400f1d0	      0x8344242c01	               add dword [rsp + 0x2c], 1	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x400f1d5	        0x4983c308	                              add r11, 8	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x400f1d9	          0x4885c9	                           test rcx, rcx	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x400f1dc	            0x75b2	                           jne 0x400f190	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x400f1de	      0x4c6344242c	          movsxd r8, dword [rsp + 0x2c] 	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x400f1e3	        0x4183fc02	                             cmp r12d, 2	      7256	ops.c	FUNCTION_88	IF_19
0x400f1e7	        0x45886610	             mov byte [r14 + 0x10], r12b	      7254	ops.c	FUNCTION_88
0x400f1eb	        0x4d894608	                 mov qword [r14 + 8], r8	      7255	ops.c	FUNCTION_88
0x400f1ef	     0xf84f9020000	                            je 0x400f4ee	      7256	ops.c	FUNCTION_88	IF_19
0x400f1f5	    0x41c746140000	               mov dword [r14 + 0x14], 0	      7259	ops.c	FUNCTION_88	ELSE_5
0x400f1fd	      0xe800000000	                          call 0x400f202	      7261	ops.c	FUNCTION_88	CALL_11
0x400f202	        0x49894618	             mov qword [r14 + 0x18], rax	      7261	ops.c	FUNCTION_88	CALL_11
0x400f206	    0x488b05000000	            mov rax, qword [0x0400f20d] 	      6721	ops.c	ELSE_3	FUNCTION_78	IF_1
0x400f20d	    0x483d00000000	                              cmp rax, 0	      6721	ops.c	ELSE_3	FUNCTION_78	IF_1
0x400f213	     0xf84a7020000	                            je 0x400f4c0	      6721	ops.c	ELSE_3	FUNCTION_78	IF_1
0x400f219	    0x483d00000000	                              cmp rax, 0	      6726	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2
0x400f21f	            0x751f	                           jne 0x400f240	      6726	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2
0x400f221	    0x8b0500000000	            mov eax, dword [0x0400f227] 	      6726	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2
0x400f227	            0x85c0	                           test eax, eax	      6726	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2
0x400f229	            0x7415	                            je 0x400f240	      6726	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2
0x400f22b	      0xbf00000000	                              mov edi, 0	      6728	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2	CALL_3
0x400f230	      0xe800000000	                          call 0x400f235	      6728	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2	CALL_3
0x400f235	      0xbf00000000	                              mov edi, 0	      6729	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2	CALL_4
0x400f23a	      0xe800000000	                          call 0x400f23f	      6729	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2	CALL_4
0x400f23f	              0x90	                                     nop	      6729	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2	CALL_4
0x400f240	          0x83fb22	                           cmp ebx, 0x22	      6973	ops.c	FUNCTION_84	IF_1
0x400f243	            0x740c	                            je 0x400f251	      6973	ops.c	FUNCTION_84	IF_1
0x400f245	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      6974	ops.c	FUNCTION_84	IF_1
0x400f24a	    0x488905000000	            mov qword [0x0400f251], rax 	      6974	ops.c	FUNCTION_84	IF_1
0x400f251	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      6975	ops.c	FUNCTION_84
0x400f256	    0x488905000000	            mov qword [0x0400f25d], rax 	      6975	ops.c	FUNCTION_84
0x400f25d	        0x4883c438	                           add rsp, 0x38	      7040	ops.c	FUNCTION_86
0x400f261	              0x5b	                                 pop rbx	      7040	ops.c	FUNCTION_86
0x400f262	              0x5d	                                 pop rbp	      7040	ops.c	FUNCTION_86
0x400f263	            0x415c	                                 pop r12	      7040	ops.c	FUNCTION_86
0x400f265	            0x415d	                                 pop r13	      7040	ops.c	FUNCTION_86
0x400f267	            0x415e	                                 pop r14	      7040	ops.c	FUNCTION_86
0x400f269	            0x415f	                                 pop r15	      7040	ops.c	FUNCTION_86
0x400f26b	              0xc3	                                     ret	      7040	ops.c	FUNCTION_86
0x400f26c	         0xf1f4000	                         nop dword [rax]	      7040	ops.c	FUNCTION_86
0x400f270	      0xbe00000000	                              mov esi, 0	      7017	ops.c	FUNCTION_86	IF_1	IF_2
0x400f275	        0x4883c438	                           add rsp, 0x38	      7040	ops.c	FUNCTION_86
0x400f279	          0x4d89f9	                             mov r9, r15	      7026	ops.c	FUNCTION_86	IF_1	CALL_3
0x400f27c	          0x4589e0	                           mov r8d, r12d	      7026	ops.c	FUNCTION_86	IF_1	CALL_3
0x400f27f	            0x89df	                            mov edi, ebx	      7026	ops.c	FUNCTION_86	IF_1	CALL_3
0x400f281	      0xbaffffffff	                     mov edx, 0xffffffff	      7026	ops.c	FUNCTION_86	IF_1	CALL_3
0x400f286	              0x5b	                                 pop rbx	      7040	ops.c	FUNCTION_86
0x400f287	              0x5d	                                 pop rbp	      7040	ops.c	FUNCTION_86
0x400f288	            0x415c	                                 pop r12	      7040	ops.c	FUNCTION_86
0x400f28a	            0x415d	                                 pop r13	      7040	ops.c	FUNCTION_86
0x400f28c	            0x415e	                                 pop r14	      7040	ops.c	FUNCTION_86
0x400f28e	            0x415f	                                 pop r15	      7040	ops.c	FUNCTION_86
0x400f290	      0xe9dbf9ffff	           jmp sym.write_reg_contents_ex	      7026	ops.c	FUNCTION_86	IF_1	CALL_3
0x400f295	           0xf1f00	                         nop dword [rax]	      7026	ops.c	FUNCTION_86	IF_1	CALL_3
0x400f298	    0x488b05000000	            mov rax, qword [0x0400f29f] 	      6952	ops.c	FUNCTION_83
0x400f29f	    0xc70500000000	               mov dword [0x0400f2a9], 0	       912	ops.c	FUNCTION_15
0x400f2a9	      0x4889442420	             mov qword [rsp + 0x20], rax	      6952	ops.c	FUNCTION_83
0x400f2ae	    0x488b05000000	            mov rax, qword [0x0400f2b5] 	      6953	ops.c	FUNCTION_83
0x400f2b5	      0x4889442418	             mov qword [rsp + 0x18], rax	      6953	ops.c	FUNCTION_83
0x400f2ba	          0x8d43d0	                   lea eax, [rbx - 0x30]	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x400f2bd	          0x83f809	                              cmp eax, 9	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x400f2c0	            0x7631	                           jbe 0x400f2f3	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x400f2c2	          0x8d439f	                   lea eax, [rbx - 0x61]	       921	ops.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x400f2c5	          0x83f819	                           cmp eax, 0x19	       921	ops.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x400f2c8	            0x7626	                           jbe 0x400f2f0	       921	ops.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x400f2ca	          0x8d43bf	                   lea eax, [rbx - 0x41]	       923	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_4
0x400f2cd	          0x83f819	                           cmp eax, 0x19	       923	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_4
0x400f2d0	     0xf879a010000	                            ja 0x400f470	       923	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_4
0x400f2d6	          0x8d43c9	                   lea eax, [rbx - 0x37]	       925	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_5
0x400f2d9	    0xc70500000000	               mov dword [0x0400f2e3], 1	       926	ops.c	FUNCTION_15	ELSE_2	IF_4
0x400f2e3	      0xbe01000000	                              mov esi, 1	       926	ops.c	FUNCTION_15	ELSE_2	IF_4
0x400f2e8	            0xeb0b	                           jmp 0x400f2f5	       926	ops.c	FUNCTION_15	ELSE_2	IF_4
0x400f2ea	    0x660f1f440000	                    nop word [rax + rax]	       926	ops.c	FUNCTION_15	ELSE_2	IF_4
0x400f2f0	          0x8d43a9	                   lea eax, [rbx - 0x57]	       922	ops.c	FUNCTION_15	ELSE_1	IF_3
0x400f2f3	            0x31f6	                            xor esi, esi	       922	ops.c	FUNCTION_15	ELSE_1	IF_3
0x400f2f5	            0x4898	                                    cdqe	       950	ops.c	FUNCTION_15
0x400f2f7	        0x48c1e005	                              shl rax, 5	       950	ops.c	FUNCTION_15
0x400f2fb	             0x9f1	                             or ecx, esi	      6956	ops.c	FUNCTION_83	IF_2
0x400f2fd	    0x4c8db0000000	                          lea r14, [rax]	       950	ops.c	FUNCTION_15
0x400f304	    0x4c8935000000	            mov qword [0x0400f30b], r14 	       950	ops.c	FUNCTION_15
0x400f30b	    0x4c8935000000	            mov qword [0x0400f312], r14 	       952	ops.c	FUNCTION_15	IF_9
0x400f312	            0x7474	                            je 0x400f388	      6956	ops.c	FUNCTION_83	IF_2
0x400f314	    0x488bb8000000	                    mov rdi, qword [rax]	      7146	ops.c	FUNCTION_88	IF_1
0x400f31b	          0x4885ff	                           test rdi, rdi	      7146	ops.c	FUNCTION_88	IF_1
0x400f31e	     0xf84d2000000	                            je 0x400f3f6	      7146	ops.c	FUNCTION_88	IF_1
0x400f324	        0x498b7608	                mov rsi, qword [r14 + 8]	      7146	ops.c	FUNCTION_88	IF_1
0x400f328	    0x4181fcff0000	                          cmp r12d, 0xff	      7152	ops.c	FUNCTION_88	IF_2
0x400f32f	      0xb801000000	                              mov eax, 1	      7152	ops.c	FUNCTION_88	IF_2
0x400f334	        0x440f44e0	                         cmove r12d, eax	      7152	ops.c	FUNCTION_88	IF_2
0x400f338	      0x48837d0000	                      cmp qword [rbp], 0	      7162	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0x400f33d	     0xf84a4010000	                            je 0x400f4e7	      7162	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0x400f343	          0x4889e8	                            mov rax, rbp	      7162	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0x400f346	            0x31c9	                            xor ecx, ecx	      7162	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0x400f348	     0xf1f84000000	                   nop dword [rax + rax]	      7162	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0x400f350	        0x4883c008	                              add rax, 8	      7162	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0x400f354	          0x83c101	                              add ecx, 1	      7163	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0x400f357	        0x48833800	                      cmp qword [rax], 0	      7162	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0x400f35b	            0x75f3	                           jne 0x400f350	      7162	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0x400f35d	          0x4863c9	                         movsxd rcx, ecx	      7162	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0x400f360	          0x4801f1	                            add rcx, rsi	      7183	ops.c	FUNCTION_88	IF_7
0x400f363	     0xf85a7fdffff	                           jne 0x400f110	      7183	ops.c	FUNCTION_88	IF_7
0x400f369	          0x4885ff	                           test rdi, rdi	      7185	ops.c	FUNCTION_88	IF_7	CALL_1
0x400f36c	     0xf8494feffff	                            je 0x400f206	      7185	ops.c	FUNCTION_88	IF_7	CALL_1
0x400f372	      0xe800000000	                          call 0x400f377	      7185	ops.c	FUNCTION_88	IF_7	CALL_1
0x400f377	    0x49c706000000	                      mov qword [r14], 0	      7185	ops.c	FUNCTION_88	IF_7	CALL_1
0x400f37e	      0xe983feffff	                           jmp 0x400f206	      7185	ops.c	FUNCTION_88	IF_7	CALL_1
0x400f383	       0xf1f440000	                   nop dword [rax + rax]	      7185	ops.c	FUNCTION_88	IF_7	CALL_1
0x400f388	    0x4883b8000000	                      cmp qword [rax], 0	      3012	ops.c	FUNCTION_43	IF_1
0x400f390	        0x4d8b6e08	                mov r13, qword [r14 + 8]	      3045	ops.c	FUNCTION_44	CALL_1
0x400f394	            0x745e	                            je 0x400f3f4	      3012	ops.c	FUNCTION_43	IF_1
0x400f396	        0x4983ed01	                              sub r13, 1	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x400f39a	     0xf888f000000	                            js 0x400f42f	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x400f3a0	    0x4a8d04ed0000	                        lea rax, [r13*8]	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x400f3a8	     0xf1f84000000	                   nop dword [rax + rax]	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x400f3b0	          0x498b16	                    mov rdx, qword [r14]	      3032	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x400f3b3	        0x48890424	                    mov qword [rsp], rax	      3032	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x400f3b7	        0x4983ed01	                              sub r13, 1	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x400f3bb	        0x488b3c02	              mov rdi, qword [rdx + rax]	      3032	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x400f3bf	      0xe800000000	                          call 0x400f3c4	      3032	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x400f3c4	        0x488b0424	                    mov rax, qword [rsp]	      3032	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x400f3c8	    0x4c8b35000000	            mov r14, qword [0x0400f3cf] 	      3032	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x400f3cf	        0x4883e808	                              sub rax, 8	      3032	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x400f3d3	        0x4983fdff	             cmp r13, 0xffffffffffffffff	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x400f3d7	            0x75d7	                           jne 0x400f3b0	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x400f3d9	          0x498b3e	                    mov rdi, qword [r14]	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x400f3dc	          0x4885ff	                           test rdi, rdi	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x400f3df	            0x7415	                            je 0x400f3f6	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x400f3e1	      0xe800000000	                          call 0x400f3e6	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x400f3e6	    0x4c8b35000000	            mov r14, qword [0x0400f3ed] 	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x400f3ed	    0x49c706000000	                      mov qword [r14], 0	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x400f3f4	            0x31ff	                            xor edi, edi	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x400f3f6	    0x49c746080000	                  mov qword [r14 + 8], 0	      7147	ops.c	FUNCTION_88	IF_1
0x400f3fe	            0x31f6	                            xor esi, esi	      7147	ops.c	FUNCTION_88	IF_1
0x400f400	      0xe923ffffff	                           jmp 0x400f328	      7147	ops.c	FUNCTION_88	IF_1
0x400f405	           0xf1f00	                         nop dword [rax]	      7147	ops.c	FUNCTION_88	IF_1
0x400f408	    0x488b05000000	            mov rax, qword [0x0400f40f] 	      6952	ops.c	FUNCTION_83
0x400f40f	    0xc70500000000	               mov dword [0x0400f419], 0	       912	ops.c	FUNCTION_15
0x400f419	      0x4889442420	             mov qword [rsp + 0x20], rax	      6952	ops.c	FUNCTION_83
0x400f41e	    0x488b05000000	            mov rax, qword [0x0400f425] 	      6953	ops.c	FUNCTION_83
0x400f425	      0x4889442418	             mov qword [rsp + 0x18], rax	      6953	ops.c	FUNCTION_83
0x400f42a	      0xe993feffff	                           jmp 0x400f2c2	      6953	ops.c	FUNCTION_83
0x400f42f	    0x488bb8000000	                    mov rdi, qword [rax]	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x400f436	            0xeba9	                           jmp 0x400f3e1	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x400f438	     0xf1f84000000	                   nop dword [rax + rax]	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x400f440	    0x488b15000000	            mov rdx, qword [0x0400f447] 	      6952	ops.c	FUNCTION_83
0x400f447	    0xc70500000000	               mov dword [0x0400f451], 0	       912	ops.c	FUNCTION_15
0x400f451	      0x4889542420	             mov qword [rsp + 0x20], rdx	      6952	ops.c	FUNCTION_83
0x400f456	    0x488b15000000	            mov rdx, qword [0x0400f45d] 	      6953	ops.c	FUNCTION_83
0x400f45d	      0x4889542418	             mov qword [rsp + 0x18], rdx	      6953	ops.c	FUNCTION_83
0x400f462	      0xe98cfeffff	                           jmp 0x400f2f3	      6953	ops.c	FUNCTION_83
0x400f467	    0x660f1f840000	                    nop word [rax + rax]	      6953	ops.c	FUNCTION_83
0x400f470	            0x31f6	                            xor esi, esi	       928	ops.c	FUNCTION_15	ELSE_3	IF_5
0x400f472	          0x83fb2d	                           cmp ebx, 0x2d	       928	ops.c	FUNCTION_15	ELSE_3	IF_5
0x400f475	      0xb824000000	                           mov eax, 0x24	       929	ops.c	FUNCTION_15	ELSE_3	IF_5
0x400f47a	     0xf8475feffff	                            je 0x400f2f5	       928	ops.c	FUNCTION_15	ELSE_3	IF_5
0x400f480	    0x448b05000000	            mov r8d, dword [0x0400f487] 	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x400f487	          0x4585c0	                           test r8d, r8d	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x400f48a	            0x740e	                            je 0x400f49a	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x400f48c	          0x83fb2a	                           cmp ebx, 0x2a	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x400f48f	      0xb825000000	                           mov eax, 0x25	       934	ops.c	FUNCTION_15	ELSE_4	IF_6
0x400f494	     0xf845bfeffff	                            je 0x400f2f5	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x400f49a	    0x8b3d00000000	            mov edi, dword [0x0400f4a0] 	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x400f4a0	            0x85ff	                           test edi, edi	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x400f4a2	            0x740e	                            je 0x400f4b2	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x400f4a4	          0x83fb2b	                           cmp ebx, 0x2b	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x400f4a7	      0xb826000000	                           mov eax, 0x26	       940	ops.c	FUNCTION_15	ELSE_5	IF_7
0x400f4ac	     0xf8443feffff	                            je 0x400f2f5	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x400f4b2	            0x31c0	                            xor eax, eax	       949	ops.c	FUNCTION_15	ELSE_7
0x400f4b4	      0xe93cfeffff	                           jmp 0x400f2f5	       949	ops.c	FUNCTION_15	ELSE_7
0x400f4b9	     0xf1f80000000	                         nop dword [rax]	       949	ops.c	FUNCTION_15	ELSE_7
0x400f4c0	    0x8b1500000000	            mov edx, dword [0x0400f4c6] 	      6721	ops.c	ELSE_3	FUNCTION_78	IF_1
0x400f4c6	            0x85d2	                           test edx, edx	      6721	ops.c	ELSE_3	FUNCTION_78	IF_1
0x400f4c8	     0xf8472fdffff	                            je 0x400f240	      6721	ops.c	ELSE_3	FUNCTION_78	IF_1
0x400f4ce	      0xbf00000000	                              mov edi, 0	      6723	ops.c	ELSE_3	FUNCTION_78	IF_1	CALL_1
0x400f4d3	      0xe800000000	                          call 0x400f4d8	      6723	ops.c	ELSE_3	FUNCTION_78	IF_1	CALL_1
0x400f4d8	      0xbf00000000	                              mov edi, 0	      6724	ops.c	ELSE_3	FUNCTION_78	IF_1	CALL_2
0x400f4dd	      0xe800000000	                          call 0x400f4e2	      6724	ops.c	ELSE_3	FUNCTION_78	IF_1	CALL_2
0x400f4e2	      0xe959fdffff	                           jmp 0x400f240	      6724	ops.c	ELSE_3	FUNCTION_78	IF_1	CALL_2
0x400f4e7	            0x31c9	                            xor ecx, ecx	      7162	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0x400f4e9	      0xe972feffff	                           jmp 0x400f360	      7162	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0x400f4ee	        0x458d55ff	                     lea r10d, [r13 - 1]	      7257	ops.c	FUNCTION_88	IF_19
0x400f4f2	          0x4d85ff	                           test r15, r15	      7257	ops.c	FUNCTION_88	IF_19
0x400f4f5	          0x4589f9	                           mov r9d, r15d	      7257	ops.c	FUNCTION_88	IF_19
0x400f4f8	        0x450f48ca	                         cmovs r9d, r10d	      7257	ops.c	FUNCTION_88	IF_19
0x400f4fc	        0x45894e14	             mov dword [r14 + 0x14], r9d	      7257	ops.c	FUNCTION_88	IF_19
0x400f500	      0xe9f8fcffff	                           jmp 0x400f1fd	      7257	ops.c	FUNCTION_88	IF_19
0x400f505	          0x4531ed	                          xor r13d, r13d	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x400f508	      0xe9d6fcffff	                           jmp 0x400f1e3	      7208	ops.c	FUNCTION_88	IF_9	FOR_4
0x400f50d	          0x4531c0	                            xor r8d, r8d	      7197	ops.c	FUNCTION_88	FOR_3
0x400f510	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      7197	ops.c	FUNCTION_88	FOR_3
0x400f518	      0xe945fcffff	                           jmp 0x400f162	      7197	ops.c	FUNCTION_88	FOR_3
get_register	SWITCH,0:DO,0:ELSE,2:functions,0:FOR,1:IF,8:WHILE,0:CALL,10	163
0x400a0e0	            0x4155	                                push r13	       990	ops.c	FUNCTION_17
0x400a0e2	            0x4154	                                push r12	       990	ops.c	FUNCTION_17
0x400a0e4	              0x55	                                push rbp	       990	ops.c	FUNCTION_17
0x400a0e5	              0x53	                                push rbx	       990	ops.c	FUNCTION_17
0x400a0e6	            0x89fd	                            mov ebp, edi	       990	ops.c	FUNCTION_17
0x400a0e8	            0x89f3	                            mov ebx, esi	       990	ops.c	FUNCTION_17
0x400a0ea	        0x4883ec08	                              sub rsp, 8	       990	ops.c	FUNCTION_17
0x400a0ee	          0x83ff2a	                           cmp edi, 0x2a	       997	ops.c	FUNCTION_17	IF_1
0x400a0f1	     0xf8411010000	                            je 0x400a208	       997	ops.c	FUNCTION_17	IF_1
0x400a0f7	          0x83ff2b	                           cmp edi, 0x2b	      1003	ops.c	FUNCTION_17	IF_3
0x400a0fa	     0xf8490000000	                            je 0x400a190	      1003	ops.c	FUNCTION_17	IF_3
0x400a100	            0x85ff	                           test edi, edi	       913	ops.c	FUNCTION_15	IF_1
0x400a102	    0xc70500000000	               mov dword [0x0400a10c], 0	       912	ops.c	FUNCTION_15
0x400a10c	            0x7409	                            je 0x400a117	       913	ops.c	FUNCTION_15	IF_1
0x400a10e	          0x83ff22	                           cmp edi, 0x22	       913	ops.c	FUNCTION_15	IF_1
0x400a111	     0xf8591000000	                           jne 0x400a1a8	       913	ops.c	FUNCTION_15	IF_1
0x400a117	    0x488b05000000	            mov rax, qword [0x0400a11e] 	       913	ops.c	FUNCTION_15	IF_1
0x400a11e	          0x4885c0	                           test rax, rax	       913	ops.c	FUNCTION_15	IF_1
0x400a121	     0xf8481000000	                            je 0x400a1a8	       913	ops.c	FUNCTION_15	IF_1
0x400a127	      0xbf20000000	                           mov edi, 0x20	      1012	ops.c	FUNCTION_17	CALL_8
0x400a12c	    0x488905000000	            mov qword [0x0400a133], rax 	       950	ops.c	FUNCTION_15
0x400a133	      0xe800000000	                          call 0x400a138	      1012	ops.c	FUNCTION_17	CALL_8
0x400a138	          0x4885c0	                           test rax, rax	      1013	ops.c	FUNCTION_17	IF_5
0x400a13b	          0x4989c4	                            mov r12, rax	      1012	ops.c	FUNCTION_17	CALL_8
0x400a13e	            0x7442	                            je 0x400a182	      1013	ops.c	FUNCTION_17	IF_5
0x400a140	    0x488b05000000	            mov rax, qword [0x0400a147] 	      1015	ops.c	FUNCTION_17	IF_5
0x400a147	            0x85db	                           test ebx, ebx	      1016	ops.c	FUNCTION_17	IF_5	IF_6
0x400a149	          0x488b10	                    mov rdx, qword [rax]	      1015	ops.c	FUNCTION_17	IF_5
0x400a14c	        0x49891424	                    mov qword [r12], rdx	      1015	ops.c	FUNCTION_17	IF_5
0x400a150	        0x488b7808	                mov rdi, qword [rax + 8]	      1015	ops.c	FUNCTION_17	IF_5
0x400a154	      0x49897c2408	                mov qword [r12 + 8], rdi	      1015	ops.c	FUNCTION_17	IF_5
0x400a159	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1015	ops.c	FUNCTION_17	IF_5
0x400a15d	      0x4989542410	             mov qword [r12 + 0x10], rdx	      1015	ops.c	FUNCTION_17	IF_5
0x400a162	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      1015	ops.c	FUNCTION_17	IF_5
0x400a166	      0x4989542418	             mov qword [r12 + 0x18], rdx	      1015	ops.c	FUNCTION_17	IF_5
0x400a16b	     0xf847f000000	                            je 0x400a1f0	      1016	ops.c	FUNCTION_17	IF_5	IF_6
0x400a171	          0x4885ff	                           test rdi, rdi	      1019	ops.c	FUNCTION_17	IF_5	IF_6	IF_7
0x400a174	     0xf850e010000	                           jne 0x400a288	      1019	ops.c	FUNCTION_17	IF_5	IF_6	IF_7
0x400a17a	    0x49c704240000	                      mov qword [r12], 0	      1020	ops.c	FUNCTION_17	IF_5	IF_6	IF_7
0x400a182	        0x4883c408	                              add rsp, 8	      1034	ops.c	FUNCTION_17
0x400a186	          0x4c89e0	                            mov rax, r12	      1034	ops.c	FUNCTION_17
0x400a189	              0x5b	                                 pop rbx	      1034	ops.c	FUNCTION_17
0x400a18a	              0x5d	                                 pop rbp	      1034	ops.c	FUNCTION_17
0x400a18b	            0x415c	                                 pop r12	      1034	ops.c	FUNCTION_17
0x400a18d	            0x415d	                                 pop r13	      1034	ops.c	FUNCTION_17
0x400a18f	              0xc3	                                     ret	      1034	ops.c	FUNCTION_17
0x400a190	    0x8b3500000000	            mov esi, dword [0x0400a196] 	      1003	ops.c	FUNCTION_17	IF_3
0x400a196	            0x85f6	                           test esi, esi	      1003	ops.c	FUNCTION_17	IF_3
0x400a198	     0xf85ba000000	                           jne 0x400a258	      1003	ops.c	FUNCTION_17	IF_3
0x400a19e	    0xc70500000000	               mov dword [0x0400a1a8], 0	       912	ops.c	FUNCTION_15
0x400a1a8	          0x8d45d0	                   lea eax, [rbp - 0x30]	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x400a1ab	          0x83f809	                              cmp eax, 9	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x400a1ae	            0x7628	                           jbe 0x400a1d8	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x400a1b0	          0x8d459f	                   lea eax, [rbp - 0x61]	       921	ops.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x400a1b3	          0x83f819	                           cmp eax, 0x19	       921	ops.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x400a1b6	     0xf8684000000	                           jbe 0x400a240	       921	ops.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x400a1bc	          0x8d45bf	                   lea eax, [rbp - 0x41]	       923	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_4
0x400a1bf	          0x83f819	                           cmp eax, 0x19	       923	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_4
0x400a1c2	     0xf8738010000	                            ja 0x400a300	       923	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_4
0x400a1c8	          0x8d45c9	                   lea eax, [rbp - 0x37]	       925	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_5
0x400a1cb	    0xc70500000000	               mov dword [0x0400a1d5], 1	       926	ops.c	FUNCTION_15	ELSE_2	IF_4
0x400a1d5	           0xf1f00	                         nop dword [rax]	       926	ops.c	FUNCTION_15	ELSE_2	IF_4
0x400a1d8	            0x4898	                                    cdqe	       950	ops.c	FUNCTION_15
0x400a1da	        0x48c1e005	                              shl rax, 5	       950	ops.c	FUNCTION_15
0x400a1de	    0x480500000000	                              add rax, 0	       950	ops.c	FUNCTION_15
0x400a1e4	      0xe93effffff	                           jmp 0x400a127	       950	ops.c	FUNCTION_15
0x400a1e9	     0xf1f80000000	                         nop dword [rax]	       950	ops.c	FUNCTION_15
0x400a1f0	    0x48c700000000	                      mov qword [rax], 0	      1031	ops.c	FUNCTION_17	IF_5	ELSE_2
0x400a1f7	        0x4883c408	                              add rsp, 8	      1034	ops.c	FUNCTION_17
0x400a1fb	          0x4c89e0	                            mov rax, r12	      1034	ops.c	FUNCTION_17
0x400a1fe	              0x5b	                                 pop rbx	      1034	ops.c	FUNCTION_17
0x400a1ff	              0x5d	                                 pop rbp	      1034	ops.c	FUNCTION_17
0x400a200	            0x415c	                                 pop r12	      1034	ops.c	FUNCTION_17
0x400a202	            0x415d	                                 pop r13	      1034	ops.c	FUNCTION_17
0x400a204	              0xc3	                                     ret	      1034	ops.c	FUNCTION_17
0x400a205	           0xf1f00	                         nop dword [rax]	      1034	ops.c	FUNCTION_17
0x400a208	    0x448b05000000	            mov r8d, dword [0x0400a20f] 	       997	ops.c	FUNCTION_17	IF_1
0x400a20f	          0x4585c0	                           test r8d, r8d	       997	ops.c	FUNCTION_17	IF_1
0x400a212	            0x748a	                            je 0x400a19e	       997	ops.c	FUNCTION_17	IF_1
0x400a214	      0xe800000000	                          call 0x400a219	       999	ops.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x400a219	            0x85c0	                           test eax, eax	       999	ops.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x400a21b	     0xf8541010000	                           jne 0x400a362	       999	ops.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x400a221	    0x8b3d00000000	            mov edi, dword [0x0400a227] 	       966	ops.c	FUNCTION_16	IF_1	IF_2
0x400a227	            0x85ff	                           test edi, edi	       966	ops.c	FUNCTION_16	IF_1	IF_2
0x400a229	     0xf846fffffff	                            je 0x400a19e	       966	ops.c	FUNCTION_16	IF_1	IF_2
0x400a22f	      0xbf00000000	                              mov edi, 0	       969	ops.c	FUNCTION_16	IF_1	CALL_1
0x400a234	      0xe800000000	                          call 0x400a239	       969	ops.c	FUNCTION_16	IF_1	CALL_1
0x400a239	      0xe960ffffff	                           jmp 0x400a19e	       969	ops.c	FUNCTION_16	IF_1	CALL_1
0x400a23e	            0x6690	                                     nop	       969	ops.c	FUNCTION_16	IF_1	CALL_1
0x400a240	          0x8d45a9	                   lea eax, [rbp - 0x57]	       922	ops.c	FUNCTION_15	ELSE_1	IF_3
0x400a243	            0x4898	                                    cdqe	       950	ops.c	FUNCTION_15
0x400a245	        0x48c1e005	                              shl rax, 5	       950	ops.c	FUNCTION_15
0x400a249	    0x480500000000	                              add rax, 0	       950	ops.c	FUNCTION_15
0x400a24f	      0xe9d3feffff	                           jmp 0x400a127	       950	ops.c	FUNCTION_15
0x400a254	         0xf1f4000	                         nop dword [rax]	       950	ops.c	FUNCTION_15
0x400a258	      0xe800000000	                          call 0x400a25d	      1005	ops.c	FUNCTION_17	IF_3	IF_4	CALL_4
0x400a25d	            0x85c0	                           test eax, eax	      1005	ops.c	FUNCTION_17	IF_3	IF_4	CALL_4
0x400a25f	     0xf85ee000000	                           jne 0x400a353	      1005	ops.c	FUNCTION_17	IF_3	IF_4	CALL_4
0x400a265	    0x8b0d00000000	            mov ecx, dword [0x0400a26b] 	       973	ops.c	FUNCTION_16	ELSE_2	IF_3	IF_4
0x400a26b	            0x85c9	                           test ecx, ecx	       973	ops.c	FUNCTION_16	ELSE_2	IF_3	IF_4
0x400a26d	     0xf842bffffff	                            je 0x400a19e	       973	ops.c	FUNCTION_16	ELSE_2	IF_3	IF_4
0x400a273	      0xbf00000000	                              mov edi, 0	       976	ops.c	FUNCTION_16	ELSE_2	IF_3	CALL_2
0x400a278	      0xe800000000	                          call 0x400a27d	       976	ops.c	FUNCTION_16	ELSE_2	IF_3	CALL_2
0x400a27d	      0xe91cffffff	                           jmp 0x400a19e	       976	ops.c	FUNCTION_16	ELSE_2	IF_3	CALL_2
0x400a282	    0x660f1f440000	                    nop word [rax + rax]	       976	ops.c	FUNCTION_16	ELSE_2	IF_3	CALL_2
0x400a288	          0xc1e703	                              shl edi, 3	      1022	ops.c	FUNCTION_17	IF_5	IF_6	ELSE_1	CALL_9
0x400a28b	      0xe800000000	                          call 0x400a290	      1022	ops.c	FUNCTION_17	IF_5	IF_6	ELSE_1	CALL_9
0x400a290	          0x4885c0	                           test rax, rax	      1024	ops.c	FUNCTION_17	IF_5	IF_6	IF_8
0x400a293	        0x49890424	                    mov qword [r12], rax	      1022	ops.c	FUNCTION_17	IF_5	IF_6	ELSE_1	CALL_9
0x400a297	     0xf84e5feffff	                            je 0x400a182	      1024	ops.c	FUNCTION_17	IF_5	IF_6	IF_8
0x400a29d	    0x49837c240800	                  cmp qword [r12 + 8], 0	      1026	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x400a2a3	     0xf8ed9feffff	                           jle 0x400a182	      1026	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x400a2a9	          0x4889c3	                            mov rbx, rax	      1026	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x400a2ac	    0x41bd01000000	                             mov r13d, 1	      1026	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x400a2b2	            0x31ed	                            xor ebp, ebp	      1026	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x400a2b4	            0xeb0e	                           jmp 0x400a2c4	      1026	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x400a2b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1026	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x400a2c0	        0x498b1c24	                    mov rbx, qword [r12]	      1026	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x400a2c4	    0x488b05000000	            mov rax, qword [0x0400a2cb] 	      1027	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x400a2cb	          0x4801eb	                            add rbx, rbp	      1027	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x400a2ce	          0x488b00	                    mov rax, qword [rax]	      1027	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x400a2d1	        0x488b3c28	              mov rdi, qword [rax + rbp]	      1027	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x400a2d5	        0x4883c508	                              add rbp, 8	      1027	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x400a2d9	      0xe800000000	                          call 0x400a2de	      1027	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x400a2de	          0x488903	                    mov qword [rbx], rax	      1027	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x400a2e1	          0x4c89e8	                            mov rax, r13	      1026	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x400a2e4	        0x4983c501	                              add r13, 1	      1026	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x400a2e8	      0x493b442408	                cmp rax, qword [r12 + 8]	      1026	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x400a2ed	            0x7cd1	                            jl 0x400a2c0	      1026	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x400a2ef	        0x4883c408	                              add rsp, 8	      1034	ops.c	FUNCTION_17
0x400a2f3	          0x4c89e0	                            mov rax, r12	      1034	ops.c	FUNCTION_17
0x400a2f6	              0x5b	                                 pop rbx	      1034	ops.c	FUNCTION_17
0x400a2f7	              0x5d	                                 pop rbp	      1034	ops.c	FUNCTION_17
0x400a2f8	            0x415c	                                 pop r12	      1034	ops.c	FUNCTION_17
0x400a2fa	            0x415d	                                 pop r13	      1034	ops.c	FUNCTION_17
0x400a2fc	              0xc3	                                     ret	      1034	ops.c	FUNCTION_17
0x400a2fd	           0xf1f00	                         nop dword [rax]	      1034	ops.c	FUNCTION_17
0x400a300	          0x83fd2d	                           cmp ebp, 0x2d	       928	ops.c	FUNCTION_15	ELSE_3	IF_5
0x400a303	      0xb824000000	                           mov eax, 0x24	       929	ops.c	FUNCTION_15	ELSE_3	IF_5
0x400a308	     0xf84cafeffff	                            je 0x400a1d8	       928	ops.c	FUNCTION_15	ELSE_3	IF_5
0x400a30e	    0x8b1500000000	            mov edx, dword [0x0400a314] 	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x400a314	            0x85d2	                           test edx, edx	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x400a316	            0x740e	                            je 0x400a326	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x400a318	          0x83fd2a	                           cmp ebp, 0x2a	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x400a31b	      0xb825000000	                           mov eax, 0x25	       934	ops.c	FUNCTION_15	ELSE_4	IF_6
0x400a320	     0xf84b2feffff	                            je 0x400a1d8	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x400a326	    0x8b0500000000	            mov eax, dword [0x0400a32c] 	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x400a32c	            0x85c0	                           test eax, eax	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x400a32e	            0x740e	                            je 0x400a33e	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x400a330	          0x83fd2b	                           cmp ebp, 0x2b	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x400a333	      0xb826000000	                           mov eax, 0x26	       940	ops.c	FUNCTION_15	ELSE_5	IF_7
0x400a338	     0xf849afeffff	                            je 0x400a1d8	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x400a33e	          0x83fd7e	                           cmp ebp, 0x7e	       946	ops.c	FUNCTION_15	ELSE_6	IF_8
0x400a341	      0xba27000000	                           mov edx, 0x27	       946	ops.c	FUNCTION_15	ELSE_6	IF_8
0x400a346	      0xb800000000	                              mov eax, 0	       946	ops.c	FUNCTION_15	ELSE_6	IF_8
0x400a34b	           0xf44c2	                          cmove eax, edx	       946	ops.c	FUNCTION_15	ELSE_6	IF_8
0x400a34e	      0xe985feffff	                           jmp 0x400a1d8	       946	ops.c	FUNCTION_15	ELSE_6	IF_8
0x400a353	      0xbf00000000	                              mov edi, 0	      1006	ops.c	FUNCTION_17	IF_3	CALL_5
0x400a358	      0xe800000000	                          call 0x400a35d	      1006	ops.c	FUNCTION_17	IF_3	CALL_5
0x400a35d	      0xe903ffffff	                           jmp 0x400a265	      1006	ops.c	FUNCTION_17	IF_3	CALL_5
0x400a362	      0xbf00000000	                              mov edi, 0	      1000	ops.c	FUNCTION_17	IF_1	CALL_2
0x400a367	      0xe800000000	                          call 0x400a36c	      1000	ops.c	FUNCTION_17	IF_1	CALL_2
0x400a36c	      0xe9b0feffff	                           jmp 0x400a221	      1000	ops.c	FUNCTION_17	IF_1	CALL_2
get_expr_register	SWITCH,0:DO,0:ELSE,1:functions,0:FOR,0:IF,2:WHILE,0:CALL,3	26
0x4002d30	              0x53	                                push rbx	       794	ops.c	FUNCTION_10
0x4002d31	            0x31d2	                            xor edx, edx	       797	ops.c	FUNCTION_10	CALL_1
0x4002d33	            0x31f6	                            xor esi, esi	       797	ops.c	FUNCTION_10	CALL_1
0x4002d35	      0xbf3d000000	                           mov edi, 0x3d	       797	ops.c	FUNCTION_10	CALL_1
0x4002d3a	      0xe800000000	                          call 0x4002d3f	       797	ops.c	FUNCTION_10	CALL_1
0x4002d3f	          0x4885c0	                           test rax, rax	       798	ops.c	FUNCTION_10	IF_1
0x4002d42	            0x743c	                            je 0x4002d80	       798	ops.c	FUNCTION_10	IF_1
0x4002d44	          0x803800	                       cmp byte [rax], 0	       800	ops.c	FUNCTION_10	IF_2
0x4002d47	          0x4889c3	                            mov rbx, rax	       800	ops.c	FUNCTION_10	IF_2
0x4002d4a	            0x7514	                           jne 0x4002d60	       800	ops.c	FUNCTION_10	IF_2
0x4002d4c	          0x4889c7	                            mov rdi, rax	       801	ops.c	FUNCTION_10	CALL_2
0x4002d4f	      0xe800000000	                          call 0x4002d54	       801	ops.c	FUNCTION_10	CALL_2
0x4002d54	      0xb83d000000	                           mov eax, 0x3d	       804	ops.c	FUNCTION_10
0x4002d59	              0x5b	                                 pop rbx	       805	ops.c	FUNCTION_10
0x4002d5a	              0xc3	                                     ret	       805	ops.c	FUNCTION_10
0x4002d5b	       0xf1f440000	                   nop dword [rax + rax]	       805	ops.c	FUNCTION_10
0x4002d60	    0x488b3d000000	            mov rdi, qword [0x04002d67] 	       814	ops.c	FUNCTION_11	CALL_1
0x4002d67	      0xe800000000	                          call 0x4002d6c	       814	ops.c	FUNCTION_11	CALL_1
0x4002d6c	    0x48891d000000	            mov qword [0x04002d73], rbx 	       815	ops.c	FUNCTION_11
0x4002d73	      0xb83d000000	                           mov eax, 0x3d	       804	ops.c	FUNCTION_10
0x4002d78	              0x5b	                                 pop rbx	       805	ops.c	FUNCTION_10
0x4002d79	              0xc3	                                     ret	       805	ops.c	FUNCTION_10
0x4002d7a	    0x660f1f440000	                    nop word [rax + rax]	       805	ops.c	FUNCTION_10
0x4002d80	            0x31c0	                            xor eax, eax	       799	ops.c	FUNCTION_10	IF_1
0x4002d82	              0x5b	                                 pop rbx	       805	ops.c	FUNCTION_10
0x4002d83	              0xc3	                                     ret	       805	ops.c	FUNCTION_10
cursor_pos_info	SWITCH,1:DO,0:ELSE,8:functions,0:FOR,1:IF,24:WHILE,0:CALL,44	687
0x400f550	            0x4157	                                push r15	      7343	ops.c	FUNCTION_91
0x400f552	            0x4156	                                push r14	      7343	ops.c	FUNCTION_91
0x400f554	          0x4889f8	                            mov rax, rdi	      7343	ops.c	FUNCTION_91
0x400f557	            0x4155	                                push r13	      7343	ops.c	FUNCTION_91
0x400f559	            0x4154	                                push r12	      7343	ops.c	FUNCTION_91
0x400f55b	              0x55	                                push rbp	      7343	ops.c	FUNCTION_91
0x400f55c	              0x53	                                push rbx	      7343	ops.c	FUNCTION_91
0x400f55d	    0x4881ecb80100	                          sub rsp, 0x1b8	      7343	ops.c	FUNCTION_91
0x400f564	      0x48897c2448	             mov qword [rsp + 0x48], rdi	      7343	ops.c	FUNCTION_91
0x400f569	    0x488b3d000000	            mov rdi, qword [0x0400f570] 	      7367	ops.c	FUNCTION_91	IF_1
0x400f570	    0x64488b142528	                mov rdx, qword fs:[0x28]	      7343	ops.c	FUNCTION_91
0x400f579	    0x48899424a801	            mov qword [rsp + 0x1a8], rdx	      7343	ops.c	FUNCTION_91
0x400f581	            0x31d2	                            xor edx, edx	      7343	ops.c	FUNCTION_91
0x400f583	        0xf6471001	               test byte [rdi + 0x10], 1	      7367	ops.c	FUNCTION_91	IF_1
0x400f587	     0xf840d010000	                            je 0x400f69a	      7367	ops.c	FUNCTION_91	IF_1
0x400f58d	          0x4885c0	                           test rax, rax	      7369	ops.c	FUNCTION_91	IF_1	IF_2
0x400f590	     0xf8473070000	                            je 0x400fd09	      7369	ops.c	FUNCTION_91	IF_1	IF_2
0x400f596	            0x31db	                            xor ebx, ebx	      7369	ops.c	FUNCTION_91	IF_1	IF_2
0x400f598	    0x48c744242800	               mov qword [rsp + 0x28], 0	      7356	ops.c	FUNCTION_91
0x400f5a1	    0x48c744241000	               mov qword [rsp + 0x10], 0	      7355	ops.c	FUNCTION_91
0x400f5aa	    0x48c744243000	               mov qword [rsp + 0x30], 0	      7354	ops.c	FUNCTION_91
0x400f5b3	    0x48c744241800	               mov qword [rsp + 0x18], 0	      7353	ops.c	FUNCTION_91
0x400f5bc	          0x4989c6	                            mov r14, rax	      7353	ops.c	FUNCTION_91
0x400f5bf	    0x48c744243800	               mov qword [rsp + 0x38], 0	      7352	ops.c	FUNCTION_91
0x400f5c8	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      7592	ops.c	FUNCTION_91	IF_24	CALL_39
0x400f5cd	            0x31c9	                            xor ecx, ecx	      7592	ops.c	FUNCTION_91	IF_24	CALL_39
0x400f5cf	      0xbe00000000	                              mov esi, 0	      7592	ops.c	FUNCTION_91	IF_24	CALL_39
0x400f5d4	          0x4c89f7	                            mov rdi, r14	      7592	ops.c	FUNCTION_91	IF_24	CALL_39
0x400f5d7	      0xe800000000	                          call 0x400f5dc	      7592	ops.c	FUNCTION_91	IF_24	CALL_39
0x400f5dc	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      7593	ops.c	FUNCTION_91	IF_24	CALL_40
0x400f5e1	            0x31c9	                            xor ecx, ecx	      7593	ops.c	FUNCTION_91	IF_24	CALL_40
0x400f5e3	      0xbe00000000	                              mov esi, 0	      7593	ops.c	FUNCTION_91	IF_24	CALL_40
0x400f5e8	          0x4c89f7	                            mov rdi, r14	      7593	ops.c	FUNCTION_91	IF_24	CALL_40
0x400f5eb	      0xe800000000	                          call 0x400f5f0	      7593	ops.c	FUNCTION_91	IF_24	CALL_40
0x400f5f0	            0x31c9	                            xor ecx, ecx	      7594	ops.c	FUNCTION_91	IF_24	CALL_41
0x400f5f2	          0x4889da	                            mov rdx, rbx	      7594	ops.c	FUNCTION_91	IF_24	CALL_41
0x400f5f5	      0xbe00000000	                              mov esi, 0	      7594	ops.c	FUNCTION_91	IF_24	CALL_41
0x400f5fa	          0x4c89f7	                            mov rdi, r14	      7594	ops.c	FUNCTION_91	IF_24	CALL_41
0x400f5fd	      0xe800000000	                          call 0x400f602	      7594	ops.c	FUNCTION_91	IF_24	CALL_41
0x400f602	    0x8b0500000000	            mov eax, dword [0x0400f608] 	      7599	ops.c	FUNCTION_91	IF_24	CALL_42
0x400f608	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      7599	ops.c	FUNCTION_91	IF_24	CALL_42
0x400f60d	      0xbe00000000	                              mov esi, 0	      7599	ops.c	FUNCTION_91	IF_24	CALL_42
0x400f612	          0x4c89f7	                            mov rdi, r14	      7599	ops.c	FUNCTION_91	IF_24	CALL_42
0x400f615	            0x85c0	                           test eax, eax	      7599	ops.c	FUNCTION_91	IF_24	CALL_42
0x400f617	      0xb800000000	                              mov eax, 0	      7599	ops.c	FUNCTION_91	IF_24	CALL_42
0x400f61c	        0x480f44f0	                          cmove rsi, rax	      7599	ops.c	FUNCTION_91	IF_24	CALL_42
0x400f620	            0x31c9	                            xor ecx, ecx	      7599	ops.c	FUNCTION_91	IF_24	CALL_42
0x400f622	      0xe800000000	                          call 0x400f627	      7599	ops.c	FUNCTION_91	IF_24	CALL_42
0x400f627	    0x8b1500000000	            mov edx, dword [0x0400f62d] 	      7601	ops.c	FUNCTION_91	IF_24	CALL_43
0x400f62d	      0xb800000000	                              mov eax, 0	      7601	ops.c	FUNCTION_91	IF_24	CALL_43
0x400f632	      0xbe00000000	                              mov esi, 0	      7601	ops.c	FUNCTION_91	IF_24	CALL_43
0x400f637	          0x4c89f7	                            mov rdi, r14	      7601	ops.c	FUNCTION_91	IF_24	CALL_43
0x400f63a	            0x85d2	                           test edx, edx	      7601	ops.c	FUNCTION_91	IF_24	CALL_43
0x400f63c	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      7601	ops.c	FUNCTION_91	IF_24	CALL_43
0x400f641	        0x480f44f0	                          cmove rsi, rax	      7601	ops.c	FUNCTION_91	IF_24	CALL_43
0x400f645	            0x31c9	                            xor ecx, ecx	      7601	ops.c	FUNCTION_91	IF_24	CALL_43
0x400f647	      0xe800000000	                          call 0x400f64c	      7601	ops.c	FUNCTION_91	IF_24	CALL_43
0x400f64c	    0x8b0d00000000	            mov ecx, dword [0x0400f652] 	      7603	ops.c	FUNCTION_91	IF_24	CALL_44
0x400f652	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      7603	ops.c	FUNCTION_91	IF_24	CALL_44
0x400f657	      0xbe00000000	                              mov esi, 0	      7603	ops.c	FUNCTION_91	IF_24	CALL_44
0x400f65c	      0xb800000000	                              mov eax, 0	      7603	ops.c	FUNCTION_91	IF_24	CALL_44
0x400f661	          0x4c89f7	                            mov rdi, r14	      7603	ops.c	FUNCTION_91	IF_24	CALL_44
0x400f664	            0x85c9	                           test ecx, ecx	      7603	ops.c	FUNCTION_91	IF_24	CALL_44
0x400f666	        0x480f44f0	                          cmove rsi, rax	      7603	ops.c	FUNCTION_91	IF_24	CALL_44
0x400f66a	            0x31c9	                            xor ecx, ecx	      7603	ops.c	FUNCTION_91	IF_24	CALL_44
0x400f66c	      0xe800000000	                          call 0x400f671	      7603	ops.c	FUNCTION_91	IF_24	CALL_44
0x400f671	    0x488b8424a801	           mov rax, qword [rsp + 0x1a8] 	      7607	ops.c	FUNCTION_91
0x400f679	    0x644833042528	                xor rax, qword fs:[0x28]	      7607	ops.c	FUNCTION_91
0x400f682	     0xf85f70a0000	                           jne 0x401017f	      7607	ops.c	FUNCTION_91
0x400f688	    0x4881c4b80100	                          add rsp, 0x1b8	      7607	ops.c	FUNCTION_91
0x400f68f	              0x5b	                                 pop rbx	      7607	ops.c	FUNCTION_91
0x400f690	              0x5d	                                 pop rbp	      7607	ops.c	FUNCTION_91
0x400f691	            0x415c	                                 pop r12	      7607	ops.c	FUNCTION_91
0x400f693	            0x415d	                                 pop r13	      7607	ops.c	FUNCTION_91
0x400f695	            0x415e	                                 pop r14	      7607	ops.c	FUNCTION_91
0x400f697	            0x415f	                                 pop r15	      7607	ops.c	FUNCTION_91
0x400f699	              0xc3	                                     ret	      7607	ops.c	FUNCTION_91
0x400f69a	      0xe800000000	                          call 0x400f69f	      7377	ops.c	FUNCTION_91	ELSE_1	IF_3	CALL_3
0x400f69f	    0x448b25000000	           mov r12d, dword [0x0400f6a6] 	      7382	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4
0x400f6a6	          0x83f801	                              cmp eax, 1	      7377	ops.c	FUNCTION_91	ELSE_1	IF_3	CALL_3
0x400f6a9	    0x48c744245800	               mov qword [rsp + 0x58], 0	      7359	ops.c	FUNCTION_91
0x400f6b2	           0xf94c0	                                 sete al	      7377	ops.c	FUNCTION_91	ELSE_1	IF_3	CALL_3
0x400f6b5	           0xfb6c0	                           movzx eax, al	      7377	ops.c	FUNCTION_91	ELSE_1	IF_3	CALL_3
0x400f6b8	        0x4883c001	                              add rax, 1	      7377	ops.c	FUNCTION_91	ELSE_1	IF_3	CALL_3
0x400f6bc	          0x4585e4	                         test r12d, r12d	      7382	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4
0x400f6bf	      0x4889442440	             mov qword [rsp + 0x40], rax	      7377	ops.c	FUNCTION_91	ELSE_1	IF_3	CALL_3
0x400f6c4	     0xf85bf030000	                           jne 0x400fa89	      7382	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4
0x400f6ca	    0x488b05000000	            mov rax, qword [0x0400f6d1] 	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400f6d1	        0x48833800	                      cmp qword [rax], 0	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400f6d5	     0xf8eeb020000	                           jle 0x400f9c6	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400f6db	    0x48c704240100	                      mov qword [rsp], 1	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400f6e3	    0x48c744243800	               mov qword [rsp + 0x38], 0	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400f6ec	    0x48c744240800	                  mov qword [rsp + 8], 0	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400f6f5	    0x48c744243000	               mov qword [rsp + 0x30], 0	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400f6fe	    0x48c744241000	               mov qword [rsp + 0x10], 0	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400f707	    0x48c744241800	               mov qword [rsp + 0x18], 0	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400f710	    0x48c744242800	               mov qword [rsp + 0x28], 0	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400f719	    0x48c7442420a0	        mov qword [rsp + 0x20], 0x186a0 	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400f722	    0x660f1f440000	                    nop word [rax + rax]	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400f728	    0x8b2d00000000	            mov ebp, dword [0x0400f72e] 	      7438	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0x400f72e	            0x85ed	                           test ebp, ebp	      7438	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0x400f730	     0xf84ca000000	                            je 0x400f800	      7438	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0x400f736	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      7439	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0x400f73b	        0x488b3424	                    mov rsi, qword [rsp]	      7439	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0x400f73f	          0x4839f0	                            cmp rax, rsi	      7439	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0x400f742	     0xf8fb8000000	                            jg 0x400f800	      7439	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0x400f748	      0x488b542470	            mov rdx, qword [rsp + 0x70] 	      7439	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0x400f74d	          0x4839f2	                            cmp rdx, rsi	      7439	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0x400f750	     0xf8caa000000	                            jl 0x400f800	      7439	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0x400f756	    0x8b0d00000000	            mov ecx, dword [0x0400f75c] 	      7444	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400f75c	          0x83f956	                           cmp ecx, 0x56	      7444	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400f75f	     0xf8456050000	                            je 0x400fcbb	      7444	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400f765	          0x83f976	                           cmp ecx, 0x76	      7444	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400f768	     0xf841d050000	                            je 0x400fc8b	      7444	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400f76e	          0x83f916	                           cmp ecx, 0x16	      7444	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400f771	     0xf8494030000	                            je 0x400fb0b	      7444	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400f777	    0x660f1f840000	                    nop word [rax + rax]	      7444	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400f780	        0x488b3c24	                    mov rdi, qword [rsp]	      7499	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0x400f784	            0x31ed	                            xor ebp, ebp	      7301	ops.c	FUNCTION_90	FOR_1
0x400f786	          0x4531e4	                          xor r12d, r12d	      7298	ops.c	FUNCTION_90
0x400f789	          0x4531f6	                          xor r14d, r14d	      7297	ops.c	FUNCTION_90
0x400f78c	            0x31db	                            xor ebx, ebx	      7299	ops.c	FUNCTION_90
0x400f78e	      0xe800000000	                          call 0x400f793	      7499	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0x400f793	          0x4989c5	                            mov r13, rax	      7499	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0x400f796	            0xeb3b	                           jmp 0x400f7d3	      7499	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0x400f798	     0xf1f84000000	                   nop dword [rax + rax]	      7499	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0x400f7a0	      0xe800000000	                          call 0x400f7a5	      7305	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2	CALL_1
0x400f7a5	            0x85c0	                           test eax, eax	      7305	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2	CALL_1
0x400f7a7	      0xbb01000000	                              mov ebx, 1	      7305	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2	CALL_1
0x400f7ac	            0x7406	                            je 0x400f7b4	      7305	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2	CALL_1
0x400f7ae	        0x4983c601	                              add r14, 1	      7307	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2
0x400f7b2	            0x31db	                            xor ebx, ebx	      7308	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2
0x400f7b4	          0x4c89ff	                            mov rdi, r15	      7315	ops.c	FUNCTION_90	FOR_1
0x400f7b7	        0x4983c401	                              add r12, 1	      7313	ops.c	FUNCTION_90	FOR_1
0x400f7bb	    0xff1500000000	                 call qword [0x0400f7c1]	      7315	ops.c	FUNCTION_90	FOR_1
0x400f7c1	            0x4898	                                    cdqe	      7315	ops.c	FUNCTION_90	FOR_1
0x400f7c3	          0x4801c5	                            add rbp, rax	      7315	ops.c	FUNCTION_90	FOR_1
0x400f7c6	    0x4881fdfeffff	                     cmp rbp, 0x7ffffffe	      7301	ops.c	FUNCTION_90	FOR_1
0x400f7cd	     0xf8ffd000000	                            jg 0x400f8d0	      7301	ops.c	FUNCTION_90	FOR_1
0x400f7d3	      0x4d8d7c2d00	                    lea r15, [r13 + rbp]	      7301	ops.c	FUNCTION_90	FOR_1
0x400f7d8	        0x410fb63f	                   movzx edi, byte [r15]	      7301	ops.c	FUNCTION_90	FOR_1
0x400f7dc	          0x4084ff	                           test dil, dil	      7301	ops.c	FUNCTION_90	FOR_1
0x400f7df	     0xf846b010000	                            je 0x400f950	      7301	ops.c	FUNCTION_90	FOR_1
0x400f7e5	            0x85db	                           test ebx, ebx	      7303	ops.c	FUNCTION_90	FOR_1	IF_1
0x400f7e7	            0x75b7	                           jne 0x400f7a0	      7303	ops.c	FUNCTION_90	FOR_1	IF_1
0x400f7e9	            0x31db	                            xor ebx, ebx	      7308	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2
0x400f7eb	      0xe800000000	                          call 0x400f7f0	      7311	ops.c	FUNCTION_90	FOR_1	ELSE_1	IF_3	CALL_2
0x400f7f0	            0x85c0	                           test eax, eax	      7308	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2
0x400f7f2	           0xf94c3	                                 sete bl	      7308	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2
0x400f7f5	            0xebbd	                           jmp 0x400f7b4	      7308	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2
0x400f7f7	    0x660f1f840000	                    nop word [rax + rax]	      7308	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2
0x400f800	    0x488b05000000	            mov rax, qword [0x0400f807] 	      7487	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400f807	        0x488b3424	                    mov rsi, qword [rsp]	      7487	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400f80b	        0x48397038	            cmp qword [rax + 0x38], rsi 	      7487	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400f80f	     0xf856bffffff	                           jne 0x400f780	      7487	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400f815	        0x448b6840	           mov r13d, dword [rax + 0x40] 	      7492	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0x400f819	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      7489	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400f81e	          0x4889f7	                            mov rdi, rsi	      7492	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0x400f821	      0x48014c2428	            add qword [rsp + 0x28], rcx 	      7489	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400f826	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      7490	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400f82b	      0x48034c2418	             add rcx, qword [rsp + 0x18]	      7490	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400f830	        0x4183c501	                             add r13d, 1	      7492	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0x400f834	          0x4d63ed	                        movsxd r13, r13d	      7492	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0x400f837	      0x48894c2438	             mov qword [rsp + 0x38], rcx	      7490	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400f83c	      0xe800000000	                          call 0x400f841	      7492	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0x400f841	          0x4d85ed	                           test r13, r13	      7301	ops.c	FUNCTION_90	FOR_1
0x400f844	          0x4989c6	                            mov r14, rax	      7492	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0x400f847	     0xf8e79060000	                           jle 0x400fec6	      7301	ops.c	FUNCTION_90	FOR_1
0x400f84d	           0xfb638	                   movzx edi, byte [rax]	      7301	ops.c	FUNCTION_90	FOR_1
0x400f850	          0x4084ff	                           test dil, dil	      7301	ops.c	FUNCTION_90	FOR_1
0x400f853	     0xf8463060000	                            je 0x400febc	      7301	ops.c	FUNCTION_90	FOR_1
0x400f859	          0x4531ff	                          xor r15d, r15d	      7301	ops.c	FUNCTION_90	FOR_1
0x400f85c	            0x31ed	                            xor ebp, ebp	      7301	ops.c	FUNCTION_90	FOR_1
0x400f85e	          0x4531e4	                          xor r12d, r12d	      7301	ops.c	FUNCTION_90	FOR_1
0x400f861	          0x4489f8	                           mov eax, r15d	      7301	ops.c	FUNCTION_90	FOR_1
0x400f864	    0x48c744243000	               mov qword [rsp + 0x30], 0	      7301	ops.c	FUNCTION_90	FOR_1
0x400f86d	          0x4d89f7	                            mov r15, r14	      7301	ops.c	FUNCTION_90	FOR_1
0x400f870	            0x89c3	                            mov ebx, eax	      7301	ops.c	FUNCTION_90	FOR_1
0x400f872	            0xeb46	                           jmp 0x400f8ba	      7301	ops.c	FUNCTION_90	FOR_1
0x400f874	         0xf1f4000	                         nop dword [rax]	      7301	ops.c	FUNCTION_90	FOR_1
0x400f878	      0xe800000000	                          call 0x400f87d	      7305	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2	CALL_1
0x400f87d	            0x85c0	                           test eax, eax	      7305	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2	CALL_1
0x400f87f	      0xbb01000000	                              mov ebx, 1	      7305	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2	CALL_1
0x400f884	            0x7408	                            je 0x400f88e	      7305	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2	CALL_1
0x400f886	    0x488344243001	               add qword [rsp + 0x30], 1	      7307	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2
0x400f88c	            0x31db	                            xor ebx, ebx	      7308	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2
0x400f88e	          0x4c89ff	                            mov rdi, r15	      7315	ops.c	FUNCTION_90	FOR_1
0x400f891	        0x4983c401	                              add r12, 1	      7313	ops.c	FUNCTION_90	FOR_1
0x400f895	    0xff1500000000	                 call qword [0x0400f89b]	      7315	ops.c	FUNCTION_90	FOR_1
0x400f89b	            0x4898	                                    cdqe	      7315	ops.c	FUNCTION_90	FOR_1
0x400f89d	          0x4801c5	                            add rbp, rax	      7315	ops.c	FUNCTION_90	FOR_1
0x400f8a0	          0x4939ed	                            cmp r13, rbp	      7301	ops.c	FUNCTION_90	FOR_1
0x400f8a3	     0xf8ec1000000	                           jle 0x400f96a	      7301	ops.c	FUNCTION_90	FOR_1
0x400f8a9	        0x4d8d3c2e	                    lea r15, [r14 + rbp]	      7301	ops.c	FUNCTION_90	FOR_1
0x400f8ad	        0x410fb63f	                   movzx edi, byte [r15]	      7301	ops.c	FUNCTION_90	FOR_1
0x400f8b1	          0x4084ff	                           test dil, dil	      7301	ops.c	FUNCTION_90	FOR_1
0x400f8b4	     0xf84d7000000	                            je 0x400f991	      7301	ops.c	FUNCTION_90	FOR_1
0x400f8ba	            0x85db	                           test ebx, ebx	      7303	ops.c	FUNCTION_90	FOR_1	IF_1
0x400f8bc	            0x75ba	                           jne 0x400f878	      7303	ops.c	FUNCTION_90	FOR_1	IF_1
0x400f8be	            0x31db	                            xor ebx, ebx	      7308	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2
0x400f8c0	      0xe800000000	                          call 0x400f8c5	      7311	ops.c	FUNCTION_90	FOR_1	ELSE_1	IF_3	CALL_2
0x400f8c5	            0x85c0	                           test eax, eax	      7308	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2
0x400f8c7	           0xf94c3	                                 sete bl	      7308	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2
0x400f8ca	            0xebc2	                           jmp 0x400f88e	      7308	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2
0x400f8cc	         0xf1f4000	                         nop dword [rax]	      7308	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2
0x400f8d0	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      7323	ops.c	FUNCTION_90
0x400f8d5	          0x4889c8	                            mov rax, rcx	      7323	ops.c	FUNCTION_90
0x400f8d8	      0x498d4c0e01	                lea rcx, [r14 + rcx + 1]	      7323	ops.c	FUNCTION_90
0x400f8dd	          0x4c01f0	                            add rax, r14	      7323	ops.c	FUNCTION_90
0x400f8e0	            0x85db	                           test ebx, ebx	      7323	ops.c	FUNCTION_90
0x400f8e2	        0x480f45c1	                         cmovne rax, rcx	      7323	ops.c	FUNCTION_90
0x400f8e6	      0x4889442410	             mov qword [rsp + 0x10], rax	      7323	ops.c	FUNCTION_90
0x400f8eb	    0x488b05000000	            mov rax, qword [0x0400f8f2] 	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400f8f2	      0x4883042401	                      add qword [rsp], 1	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400f8f7	      0x4c01642418	            add qword [rsp + 0x18], r12 	      7331	ops.c	FUNCTION_90
0x400f8fc	        0x488b1424	                    mov rdx, qword [rsp]	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400f900	      0x48016c2408	                add qword [rsp + 8], rbp	      7499	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0x400f905	          0x483910	                    cmp qword [rax], rdx	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400f908	     0xf8cee000000	                            jl 0x400f9fc	      7426	ops.c	FUNCTION_91	ELSE_1	FOR_1
0x400f90e	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      7429	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10
0x400f913	      0x48394c2420	            cmp qword [rsp + 0x20], rcx 	      7429	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10
0x400f918	     0xf8d0afeffff	                           jge 0x400f728	      7429	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10
0x400f91e	      0xe800000000	                          call 0x400f923	      7431	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10	CALL_6
0x400f923	    0x8b0500000000	            mov eax, dword [0x0400f929] 	      7432	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10	IF_11
0x400f929	            0x85c0	                           test eax, eax	      7432	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10	IF_11
0x400f92b	     0xf8540fdffff	                           jne 0x400f671	      7432	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10	IF_11
0x400f931	      0x488b442408	                mov rax, qword [rsp + 8]	      7434	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10
0x400f936	    0x4805a0860100	                        add rax, 0x186a0	      7434	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10
0x400f93c	      0x4889442420	             mov qword [rsp + 0x20], rax	      7434	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10
0x400f941	      0xe9e2fdffff	                           jmp 0x400f728	      7434	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10
0x400f946	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7434	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10
0x400f950	            0x85db	                           test ebx, ebx	      7321	ops.c	FUNCTION_90	IF_4
0x400f952	     0xf852c080000	                           jne 0x4010184	      7321	ops.c	FUNCTION_90	IF_4
0x400f958	      0x4c01742410	            add qword [rsp + 0x10], r14 	      7323	ops.c	FUNCTION_90
0x400f95d	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      7328	ops.c	FUNCTION_90	IF_5
0x400f962	          0x4801c5	                            add rbp, rax	      7328	ops.c	FUNCTION_90	IF_5
0x400f965	          0x4901c4	                            add r12, rax	      7329	ops.c	FUNCTION_90	IF_5
0x400f968	            0xeb81	                           jmp 0x400f8eb	      7329	ops.c	FUNCTION_90	IF_5
0x400f96a	            0x85db	                           test ebx, ebx	      7321	ops.c	FUNCTION_90	IF_4
0x400f96c	            0x752b	                           jne 0x400f999	      7321	ops.c	FUNCTION_90	IF_4
0x400f96e	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      7323	ops.c	FUNCTION_90
0x400f973	      0x4801542428	            add qword [rsp + 0x28], rdx 	      7323	ops.c	FUNCTION_90
0x400f978	      0x4c03642438	             add r12, qword [rsp + 0x38]	      7331	ops.c	FUNCTION_90
0x400f97d	      0x48036c2408	                add rbp, qword [rsp + 8]	      7491	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400f982	      0x4c89642430	             mov qword [rsp + 0x30], r12	      7331	ops.c	FUNCTION_90
0x400f987	      0x48896c2438	             mov qword [rsp + 0x38], rbp	      7491	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400f98c	      0xe9effdffff	                           jmp 0x400f780	      7491	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0x400f991	            0x85db	                           test ebx, ebx	      7321	ops.c	FUNCTION_90	IF_4
0x400f993	     0xf84be040000	                            je 0x400fe57	      7321	ops.c	FUNCTION_90	IF_4
0x400f999	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      7323	ops.c	FUNCTION_90
0x400f99e	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      7323	ops.c	FUNCTION_90
0x400f9a3	          0x4939ed	                            cmp r13, rbp	      7326	ops.c	FUNCTION_90	IF_5
0x400f9a6	      0x488d440801	                lea rax, [rax + rcx + 1]	      7323	ops.c	FUNCTION_90
0x400f9ab	      0x4889442428	             mov qword [rsp + 0x28], rax	      7323	ops.c	FUNCTION_90
0x400f9b0	            0x7ec6	                           jle 0x400f978	      7326	ops.c	FUNCTION_90	IF_5
0x400f9b2	      0x41803c2e00	                 cmp byte [r14 + rbp], 0	      7326	ops.c	FUNCTION_90	IF_5
0x400f9b7	            0x75bf	                           jne 0x400f978	      7326	ops.c	FUNCTION_90	IF_5
0x400f9b9	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      7328	ops.c	FUNCTION_90	IF_5
0x400f9be	          0x4801c5	                            add rbp, rax	      7328	ops.c	FUNCTION_90	IF_5
0x400f9c1	          0x4901c4	                            add r12, rax	      7329	ops.c	FUNCTION_90	IF_5
0x400f9c4	            0xebb2	                           jmp 0x400f978	      7329	ops.c	FUNCTION_90	IF_5
0x400f9c6	    0x48c744242800	               mov qword [rsp + 0x28], 0	      7356	ops.c	FUNCTION_91
0x400f9cf	    0x48c744241800	               mov qword [rsp + 0x18], 0	      7353	ops.c	FUNCTION_91
0x400f9d8	    0x48c744243000	               mov qword [rsp + 0x30], 0	      7354	ops.c	FUNCTION_91
0x400f9e1	    0x48c744241000	               mov qword [rsp + 0x10], 0	      7355	ops.c	FUNCTION_91
0x400f9ea	    0x48c744243800	               mov qword [rsp + 0x38], 0	      7352	ops.c	FUNCTION_91
0x400f9f3	    0x48c744240800	                  mov qword [rsp + 8], 0	      7348	ops.c	FUNCTION_91
0x400f9fc	    0x448b88701400	          mov r9d, dword [rax + 0x1470] 	      7505	ops.c	FUNCTION_91	ELSE_1	IF_16
0x400fa03	          0x4585c9	                           test r9d, r9d	      7505	ops.c	FUNCTION_91	ELSE_1	IF_16
0x400fa06	            0x7520	                           jne 0x400fa28	      7505	ops.c	FUNCTION_91	ELSE_1	IF_16
0x400fa08	    0x448b80081400	          mov r8d, dword [rax + 0x1408] 	      7505	ops.c	FUNCTION_91	ELSE_1	IF_16
0x400fa0f	          0x4585c0	                           test r8d, r8d	      7505	ops.c	FUNCTION_91	ELSE_1	IF_16
0x400fa12	            0x750a	                           jne 0x400fa1e	      7505	ops.c	FUNCTION_91	ELSE_1	IF_16
0x400fa14	    0x8bb874140000	          mov edi, dword [rax + 0x1474] 	      7505	ops.c	FUNCTION_91	ELSE_1	IF_16
0x400fa1a	            0x85ff	                           test edi, edi	      7505	ops.c	FUNCTION_91	ELSE_1	IF_16
0x400fa1c	            0x750a	                           jne 0x400fa28	      7505	ops.c	FUNCTION_91	ELSE_1	IF_16
0x400fa1e	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	      7506	ops.c	FUNCTION_91	ELSE_1	IF_16
0x400fa23	      0x4829742408	                sub qword [rsp + 8], rsi	      7506	ops.c	FUNCTION_91	ELSE_1	IF_16
0x400fa28	    0x48837c244800	               cmp qword [rsp + 0x48], 0	      7508	ops.c	FUNCTION_91	ELSE_1	IF_17
0x400fa2e	     0xf84f3020000	                            je 0x400fd27	      7508	ops.c	FUNCTION_91	ELSE_1	IF_17
0x400fa34	      0xe800000000	                          call 0x400fa39	      7575	ops.c	FUNCTION_91	ELSE_1	CALL_34
0x400fa39	          0x4863d8	                         movsxd rbx, eax	      7575	ops.c	FUNCTION_91	ELSE_1	CALL_34
0x400fa3c	          0x4885db	                           test rbx, rbx	      7576	ops.c	FUNCTION_91	ELSE_1	IF_22
0x400fa3f	            0x7e39	                           jle 0x400fa7a	      7576	ops.c	FUNCTION_91	ELSE_1	IF_22
0x400fa41	      0xba05000000	                              mov edx, 5	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400fa46	      0xbe00000000	                              mov esi, 0	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400fa4b	            0x31ff	                            xor edi, edi	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400fa4d	      0xe800000000	                          call 0x400fa52	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400fa52	    0x4c8b25000000	            mov r12, qword [0x0400fa59] 	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400fa59	          0x4889c5	                            mov rbp, rax	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400fa5c	          0x4c89e7	                            mov rdi, r12	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400fa5f	      0xe800000000	                          call 0x400fa64	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400fa64	        0x498d3c04	                    lea rdi, [r12 + rax]	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400fa68	          0x4889d9	                            mov rcx, rbx	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400fa6b	          0x4889ea	                            mov rdx, rbp	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400fa6e	      0xbe01040000	                          mov esi, 0x401	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400fa73	            0x31c0	                            xor eax, eax	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400fa75	      0xe800000000	                          call 0x400fa7a	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400fa7a	      0x48035c2408	                add rbx, qword [rsp + 8]	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400fa7f	      0x4c8b742448	            mov r14, qword [rsp + 0x48] 	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400fa84	      0xe93ffbffff	                           jmp 0x400f5c8	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400fa89	    0x488b3d000000	            mov rdi, qword [0x0400fa90] 	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400fa90	        0x488b4738	            mov rax, qword [rdi + 0x38] 	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400fa94	    0x483905000000	            cmp qword [0x0400fa9b], rax 	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400fa9b	     0xf84fe030000	                            je 0x400fe9f	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400faa1	           0xf9cc0	                                 setl al	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400faa4	            0x84c0	                             test al, al	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400faa6	     0xf842e020000	                            je 0x400fcda	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400faac	    0x488b05000000	            mov rax, qword [0x0400fab3] 	      7386	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5
0x400fab3	    0x488b15000000	            mov rdx, qword [0x0400faba] 	      7386	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5
0x400faba	      0x4889442460	             mov qword [rsp + 0x60], rax	      7386	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5
0x400fabf	      0x4889542468	             mov qword [rsp + 0x68], rdx	      7386	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5
0x400fac4	        0x488b4738	            mov rax, qword [rdi + 0x38] 	      7387	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5
0x400fac8	        0x488b5740	            mov rdx, qword [rdi + 0x40] 	      7387	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5
0x400facc	      0x4889442470	             mov qword [rsp + 0x70], rax	      7387	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5
0x400fad1	      0x4889542478	             mov qword [rsp + 0x78], rdx	      7387	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5
0x400fad6	    0x488b05000000	            mov rax, qword [0x0400fadd] 	      7394	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_6
0x400fadd	          0x803865	                    cmp byte [rax], 0x65	      7394	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_6
0x400fae0	     0xf84a1030000	                            je 0x400fe87	      7394	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_6
0x400fae6	    0x833d00000000	           cmp dword [0x0400faed], 0x16 	      7397	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0x400faed	     0xf84dd030000	                            je 0x400fed0	      7397	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0x400faf3	      0x488b442470	            mov rax, qword [rsp + 0x70] 	      7423	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4
0x400faf8	      0x482b442460	             sub rax, qword [rsp + 0x60]	      7423	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4
0x400fafd	        0x4883c001	                              add rax, 1	      7423	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4
0x400fb01	      0x4889442458	             mov qword [rsp + 0x58], rax	      7423	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4
0x400fb06	      0xe9bffbffff	                           jmp 0x400f6ca	      7423	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4
0x400fb0b	      0xe800000000	                          call 0x400fb10	      7448	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_7
0x400fb10	        0x488b1424	                    mov rdx, qword [rsp]	      7450	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_8
0x400fb14	    0x488db4248000	                   lea rsi, [rsp + 0x80]	      7450	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_8
0x400fb1c	    0x488dbc24c000	                   lea rdi, [rsp + 0xc0]	      7450	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_8
0x400fb24	            0x31c9	                            xor ecx, ecx	      7450	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_8
0x400fb26	    0x890500000000	            mov dword [0x0400fb2c], eax 	      7448	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_7
0x400fb2c	      0xe80f05ffff	                     call sym.block_prep	      7450	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_8
0x400fb31	    0x4c63b4248800	         movsxd r14, dword [rsp + 0x88] 	      7455	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400fb39	    0x4c8bac249000	            mov r13, qword [rsp + 0x90] 	      7454	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400fb41	    0xc70500000000	               mov dword [0x0400fb4b], 2	      7452	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400fb4b	          0x4d85ed	                           test r13, r13	      7473	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13
0x400fb4e	     0xf842cfcffff	                            je 0x400f780	      7473	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13
0x400fb54	          0x4d85f6	                           test r14, r14	      7301	ops.c	FUNCTION_90	FOR_1
0x400fb57	     0xf8e0c040000	                           jle 0x400ff69	      7301	ops.c	FUNCTION_90	FOR_1
0x400fb5d	      0x410fb67d00	                   movzx edi, byte [r13]	      7301	ops.c	FUNCTION_90	FOR_1
0x400fb62	            0x31ed	                            xor ebp, ebp	      7301	ops.c	FUNCTION_90	FOR_1
0x400fb64	          0x4531e4	                          xor r12d, r12d	      7301	ops.c	FUNCTION_90	FOR_1
0x400fb67	          0x4084ff	                           test dil, dil	      7301	ops.c	FUNCTION_90	FOR_1
0x400fb6a	     0xf8492000000	                            je 0x400fc02	      7301	ops.c	FUNCTION_90	FOR_1
0x400fb70	          0x4531ff	                          xor r15d, r15d	      7301	ops.c	FUNCTION_90	FOR_1
0x400fb73	    0x48c744245000	               mov qword [rsp + 0x50], 0	      7301	ops.c	FUNCTION_90	FOR_1
0x400fb7c	          0x4489f8	                           mov eax, r15d	      7301	ops.c	FUNCTION_90	FOR_1
0x400fb7f	          0x4d89ef	                            mov r15, r13	      7301	ops.c	FUNCTION_90	FOR_1
0x400fb82	            0x89c3	                            mov ebx, eax	      7301	ops.c	FUNCTION_90	FOR_1
0x400fb84	            0xeb49	                           jmp 0x400fbcf	      7301	ops.c	FUNCTION_90	FOR_1
0x400fb86	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7301	ops.c	FUNCTION_90	FOR_1
0x400fb90	      0xe800000000	                          call 0x400fb95	      7305	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2	CALL_1
0x400fb95	            0x85c0	                           test eax, eax	      7305	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2	CALL_1
0x400fb97	      0xbb01000000	                              mov ebx, 1	      7305	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2	CALL_1
0x400fb9c	            0x7408	                            je 0x400fba6	      7305	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2	CALL_1
0x400fb9e	    0x488344245001	               add qword [rsp + 0x50], 1	      7307	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2
0x400fba4	            0x31db	                            xor ebx, ebx	      7308	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2
0x400fba6	          0x4c89ff	                            mov rdi, r15	      7315	ops.c	FUNCTION_90	FOR_1
0x400fba9	        0x4983c401	                              add r12, 1	      7313	ops.c	FUNCTION_90	FOR_1
0x400fbad	    0xff1500000000	                 call qword [0x0400fbb3]	      7315	ops.c	FUNCTION_90	FOR_1
0x400fbb3	            0x4898	                                    cdqe	      7315	ops.c	FUNCTION_90	FOR_1
0x400fbb5	          0x4801c5	                            add rbp, rax	      7315	ops.c	FUNCTION_90	FOR_1
0x400fbb8	          0x4c39f5	                            cmp rbp, r14	      7301	ops.c	FUNCTION_90	FOR_1
0x400fbbb	     0xf8db6000000	                           jge 0x400fc77	      7301	ops.c	FUNCTION_90	FOR_1
0x400fbc1	      0x4d8d7c2d00	                    lea r15, [r13 + rbp]	      7301	ops.c	FUNCTION_90	FOR_1
0x400fbc6	        0x410fb63f	                   movzx edi, byte [r15]	      7301	ops.c	FUNCTION_90	FOR_1
0x400fbca	          0x4084ff	                           test dil, dil	      7301	ops.c	FUNCTION_90	FOR_1
0x400fbcd	            0x7412	                            je 0x400fbe1	      7301	ops.c	FUNCTION_90	FOR_1
0x400fbcf	            0x85db	                           test ebx, ebx	      7303	ops.c	FUNCTION_90	FOR_1	IF_1
0x400fbd1	            0x75bd	                           jne 0x400fb90	      7303	ops.c	FUNCTION_90	FOR_1	IF_1
0x400fbd3	            0x31db	                            xor ebx, ebx	      7308	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2
0x400fbd5	      0xe800000000	                          call 0x400fbda	      7311	ops.c	FUNCTION_90	FOR_1	ELSE_1	IF_3	CALL_2
0x400fbda	            0x85c0	                           test eax, eax	      7308	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2
0x400fbdc	           0xf94c3	                                 sete bl	      7308	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2
0x400fbdf	            0xebc5	                           jmp 0x400fba6	      7308	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2
0x400fbe1	            0x85db	                           test ebx, ebx	      7321	ops.c	FUNCTION_90	IF_4
0x400fbe3	     0xf845f020000	                            je 0x400fe48	      7321	ops.c	FUNCTION_90	IF_4
0x400fbe9	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      7323	ops.c	FUNCTION_90
0x400fbee	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      7323	ops.c	FUNCTION_90
0x400fbf3	          0x4c39f5	                            cmp rbp, r14	      7326	ops.c	FUNCTION_90	IF_5
0x400fbf6	      0x488d441001	                lea rax, [rax + rdx + 1]	      7323	ops.c	FUNCTION_90
0x400fbfb	      0x4889442428	             mov qword [rsp + 0x28], rax	      7323	ops.c	FUNCTION_90
0x400fc00	            0x7d13	                           jge 0x400fc15	      7326	ops.c	FUNCTION_90	IF_5
0x400fc02	    0x41807c2d0000	                 cmp byte [r13 + rbp], 0	      7326	ops.c	FUNCTION_90	IF_5
0x400fc08	            0x750b	                           jne 0x400fc15	      7326	ops.c	FUNCTION_90	IF_5
0x400fc0a	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      7328	ops.c	FUNCTION_90	IF_5
0x400fc0f	          0x4801c5	                            add rbp, rax	      7328	ops.c	FUNCTION_90	IF_5
0x400fc12	          0x4901c4	                            add r12, rax	      7329	ops.c	FUNCTION_90	IF_5
0x400fc15	    0x488b05000000	            mov rax, qword [0x0400fc1c] 	      7477	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400fc1c	      0x4c01642430	            add qword [rsp + 0x30], r12 	      7331	ops.c	FUNCTION_90
0x400fc21	      0x48016c2438	            add qword [rsp + 0x38], rbp 	      7475	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	CALL_11
0x400fc26	        0x488b1424	                    mov rdx, qword [rsp]	      7477	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400fc2a	          0x483910	                    cmp qword [rax], rdx	      7477	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400fc2d	     0xf854dfbffff	                           jne 0x400f780	      7477	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400fc33	    0x8b9870140000	          mov ebx, dword [rax + 0x1470] 	      7478	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400fc39	            0x85db	                           test ebx, ebx	      7478	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400fc3b	     0xf853ffbffff	                           jne 0x400f780	      7478	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400fc41	    0x448b98081400	         mov r11d, dword [rax + 0x1408] 	      7479	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400fc48	          0x4585db	                         test r11d, r11d	      7479	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400fc4b	     0xf84e2010000	                            je 0x400fe33	      7479	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400fc51	          0x4c89ef	                            mov rdi, r13	      7480	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14	CALL_12
0x400fc54	      0xe800000000	                          call 0x400fc59	      7480	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14	CALL_12
0x400fc59	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      7481	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400fc5e	          0x4889ca	                            mov rdx, rcx	      7481	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400fc61	      0x482b542440	             sub rdx, qword [rsp + 0x40]	      7481	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400fc66	          0x4c39f0	                            cmp rax, r14	      7481	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400fc69	        0x480f4dd1	                         cmovge rdx, rcx	      7481	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400fc6d	      0x4889542438	             mov qword [rsp + 0x38], rdx	      7481	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400fc72	      0xe909fbffff	                           jmp 0x400f780	      7481	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400fc77	            0x85db	                           test ebx, ebx	      7321	ops.c	FUNCTION_90	IF_4
0x400fc79	     0xf856affffff	                           jne 0x400fbe9	      7321	ops.c	FUNCTION_90	IF_4
0x400fc7f	      0x488b4c2450	            mov rcx, qword [rsp + 0x50] 	      7323	ops.c	FUNCTION_90
0x400fc84	      0x48014c2428	            add qword [rsp + 0x28], rcx 	      7323	ops.c	FUNCTION_90
0x400fc89	            0xeb8a	                           jmp 0x400fc15	      7323	ops.c	FUNCTION_90
0x400fc8b	            0x31ed	                            xor ebp, ebp	      7323	ops.c	FUNCTION_90
0x400fc8d	            0x31c9	                            xor ecx, ecx	      7464	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400fc8f	        0x483b0424	                    cmp rax, qword [rsp]	      7464	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400fc93	     0xf84e1010000	                            je 0x400fe7a	      7464	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400fc99	        0x483b1424	                    cmp rdx, qword [rsp]	      7465	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400fc9d	    0x41beffffff7f	                    mov r14d, 0x7fffffff	      7465	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400fca3	     0xf84bd010000	                            je 0x400fe66	      7465	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400fca9	        0x488b3c24	                    mov rdi, qword [rsp]	      7468	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_10
0x400fcad	      0xe800000000	                          call 0x400fcb2	      7468	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_10
0x400fcb2	        0x4c8d2c28	                    lea r13, [rax + rbp]	      7468	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_10
0x400fcb6	      0xe990feffff	                           jmp 0x400fb4b	      7471	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400fcbb	          0x4889f7	                            mov rdi, rsi	      7471	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400fcbe	    0x41beffffff7f	                    mov r14d, 0x7fffffff	      7459	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400fcc4	      0xe800000000	                          call 0x400fcc9	      7458	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_9
0x400fcc9	          0x4885c0	                           test rax, rax	      7473	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13
0x400fccc	          0x4989c5	                            mov r13, rax	      7458	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_9
0x400fccf	     0xf8588feffff	                           jne 0x400fb5d	      7473	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13
0x400fcd5	      0xe9a6faffff	                           jmp 0x400f780	      7473	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13
0x400fcda	        0x488b4738	            mov rax, qword [rdi + 0x38] 	      7391	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	ELSE_3
0x400fcde	        0x488b5740	            mov rdx, qword [rdi + 0x40] 	      7391	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	ELSE_3
0x400fce2	      0x4889442460	             mov qword [rsp + 0x60], rax	      7391	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	ELSE_3
0x400fce7	      0x4889542468	             mov qword [rsp + 0x68], rdx	      7391	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	ELSE_3
0x400fcec	    0x488b05000000	            mov rax, qword [0x0400fcf3] 	      7392	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	ELSE_3
0x400fcf3	    0x488b15000000	            mov rdx, qword [0x0400fcfa] 	      7392	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	ELSE_3
0x400fcfa	      0x4889442470	             mov qword [rsp + 0x70], rax	      7392	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	ELSE_3
0x400fcff	      0x4889542478	             mov qword [rsp + 0x78], rdx	      7392	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	ELSE_3
0x400fd04	      0xe9cdfdffff	                           jmp 0x400fad6	      7392	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	ELSE_3
0x400fd09	            0x31ff	                            xor edi, edi	      7371	ops.c	FUNCTION_91	IF_1	IF_2	CALL_2
0x400fd0b	      0xba05000000	                              mov edx, 5	      7371	ops.c	FUNCTION_91	IF_1	IF_2	CALL_2
0x400fd10	      0xbe00000000	                              mov esi, 0	      7371	ops.c	FUNCTION_91	IF_1	IF_2	CALL_2
0x400fd15	      0xe800000000	                          call 0x400fd1a	      7371	ops.c	FUNCTION_91	IF_1	IF_2	CALL_2
0x400fd1a	          0x4889c7	                            mov rdi, rax	      7371	ops.c	FUNCTION_91	IF_1	IF_2	CALL_2
0x400fd1d	      0xe800000000	                          call 0x400fd22	      7371	ops.c	FUNCTION_91	IF_1	IF_2	CALL_2
0x400fd22	      0xe94af9ffff	                           jmp 0x400f671	      7372	ops.c	FUNCTION_91	IF_1	IF_2
0x400fd27	    0x8b3500000000	            mov esi, dword [0x0400fd2d] 	      7510	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18
0x400fd2d	            0x85f6	                           test esi, esi	      7510	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18
0x400fd2f	     0xf843e020000	                            je 0x400ff73	      7510	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18
0x400fd35	    0x833d00000000	           cmp dword [0x0400fd3c], 0x16 	      7512	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19
0x400fd3c	     0xf8420030000	                            je 0x4010062	      7512	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19
0x400fd42	    0x488d9c247001	                  lea rbx, [rsp + 0x170]	      7512	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19
0x400fd4a	    0xc68424700100	               mov byte [rsp + 0x170], 0	      7520	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_5
0x400fd52	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      7523	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20
0x400fd57	      0x4839742430	            cmp qword [rsp + 0x30], rsi 	      7523	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20
0x400fd5c	      0xba05000000	                              mov edx, 5	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x400fd61	          0x488b28	                    mov rbp, qword [rax]	      7527	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20
0x400fd64	            0x7510	                           jne 0x400fd76	      7523	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20
0x400fd66	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      7523	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20
0x400fd6b	      0x4839742408	                cmp qword [rsp + 8], rsi	      7523	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20
0x400fd70	     0xf8477030000	                            je 0x40100ed	      7523	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20
0x400fd76	      0xbe00000000	                              mov esi, 0	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400fd7b	            0x31ff	                            xor edi, edi	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400fd7d	      0xe800000000	                          call 0x400fd82	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400fd82	        0xff742408	                    push qword [rsp + 8]	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400fd86	        0xff742440	                 push qword [rsp + 0x40]	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400fd8a	          0x4989e9	                             mov r9, rbp	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400fd8d	        0xff742428	                 push qword [rsp + 0x28]	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400fd91	        0xff742448	                 push qword [rsp + 0x48]	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400fd95	        0xff742430	                 push qword [rsp + 0x30]	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400fd99	        0xff742450	                 push qword [rsp + 0x50]	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400fd9d	    0x4c8b84248800	              mov r8, qword [rsp + 0x88]	      7533	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0x400fda5	    0x488b3d000000	            mov rdi, qword [0x0400fdac] 	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400fdac	          0x4889c2	                            mov rdx, rax	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400fdaf	          0x4889d9	                            mov rcx, rbx	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400fdb2	      0xbe01040000	                          mov esi, 0x401	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400fdb7	            0x31c0	                            xor eax, eax	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400fdb9	      0xe800000000	                          call 0x400fdbe	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400fdbe	        0x4883c430	                           add rsp, 0x30	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x400fdc2	      0xe800000000	                          call 0x400fdc7	      7575	ops.c	FUNCTION_91	ELSE_1	CALL_34
0x400fdc7	          0x4863d8	                         movsxd rbx, eax	      7575	ops.c	FUNCTION_91	ELSE_1	CALL_34
0x400fdca	          0x4885db	                           test rbx, rbx	      7576	ops.c	FUNCTION_91	ELSE_1	IF_22
0x400fdcd	            0x7e3a	                           jle 0x400fe09	      7576	ops.c	FUNCTION_91	ELSE_1	IF_22
0x400fdcf	      0xba05000000	                              mov edx, 5	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400fdd4	      0xbe00000000	                              mov esi, 0	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400fdd9	            0x31ff	                            xor edi, edi	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400fddb	      0xe800000000	                          call 0x400fde0	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400fde0	    0x488b2d000000	            mov rbp, qword [0x0400fde7] 	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400fde7	          0x4989c4	                            mov r12, rax	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400fdea	          0x4889ef	                            mov rdi, rbp	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400fded	      0xe800000000	                          call 0x400fdf2	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400fdf2	      0x488d7c0500	                    lea rdi, [rbp + rax]	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400fdf7	          0x4889d9	                            mov rcx, rbx	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400fdfa	          0x4c89e2	                            mov rdx, r12	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400fdfd	      0xbe01040000	                          mov esi, 0x401	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400fe02	            0x31c0	                            xor eax, eax	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400fe04	      0xe800000000	                          call 0x400fe09	      7577	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0x400fe09	    0x488b1d000000	            mov rbx, qword [0x0400fe10] 	      7583	ops.c	FUNCTION_91	ELSE_1	IF_23
0x400fe10	    0x488b3d000000	            mov rdi, qword [0x0400fe17] 	      7585	ops.c	FUNCTION_91	ELSE_1	IF_23	CALL_38
0x400fe17	    0x48c705000000	               mov qword [0x0400fe22], 0	      7584	ops.c	FUNCTION_91	ELSE_1	IF_23
0x400fe22	      0xe800000000	                          call 0x400fe27	      7585	ops.c	FUNCTION_91	ELSE_1	IF_23	CALL_38
0x400fe27	    0x48891d000000	            mov qword [0x0400fe2e], rbx 	      7586	ops.c	FUNCTION_91	ELSE_1	IF_23
0x400fe2e	      0xe93ef8ffff	                           jmp 0x400f671	      7586	ops.c	FUNCTION_91	ELSE_1	IF_23
0x400fe33	    0x448b90741400	         mov r10d, dword [rax + 0x1474] 	      7479	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400fe3a	          0x4585d2	                         test r10d, r10d	      7479	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400fe3d	     0xf853df9ffff	                           jne 0x400f780	      7479	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400fe43	      0xe909feffff	                           jmp 0x400fc51	      7479	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0x400fe48	      0x488b742450	            mov rsi, qword [rsp + 0x50] 	      7323	ops.c	FUNCTION_90
0x400fe4d	      0x4801742428	            add qword [rsp + 0x28], rsi 	      7323	ops.c	FUNCTION_90
0x400fe52	      0xe9b3fdffff	                           jmp 0x400fc0a	      7323	ops.c	FUNCTION_90
0x400fe57	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      7323	ops.c	FUNCTION_90
0x400fe5c	      0x4801542428	            add qword [rsp + 0x28], rdx 	      7323	ops.c	FUNCTION_90
0x400fe61	      0xe953fbffff	                           jmp 0x400f9b9	      7323	ops.c	FUNCTION_90
0x400fe66	      0x448b742478	           mov r14d, dword [rsp + 0x78] 	      7323	ops.c	FUNCTION_90
0x400fe6b	          0x4129ce	                           sub r14d, ecx	      7323	ops.c	FUNCTION_90
0x400fe6e	        0x4183c601	                             add r14d, 1	      7323	ops.c	FUNCTION_90
0x400fe72	          0x4d63f6	                        movsxd r14, r14d	      7323	ops.c	FUNCTION_90
0x400fe75	      0xe92ffeffff	                           jmp 0x400fca9	      7323	ops.c	FUNCTION_90
0x400fe7a	      0x48636c2468	         movsxd rbp, dword [rsp + 0x68] 	      7464	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400fe7f	          0x4889e9	                            mov rcx, rbp	      7464	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400fe82	      0xe912feffff	                           jmp 0x400fc99	      7464	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0x400fe87	        0x8b442478	            mov eax, dword [rsp + 0x78] 	      7394	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_6
0x400fe8b	            0x85c0	                           test eax, eax	      7394	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_6
0x400fe8d	     0xf8e53fcffff	                           jle 0x400fae6	      7394	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_6
0x400fe93	          0x83e801	                              sub eax, 1	      7395	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_6
0x400fe96	        0x89442478	             mov dword [rsp + 0x78], eax	      7395	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_6
0x400fe9a	      0xe947fcffff	                           jmp 0x400fae6	      7395	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_6
0x400fe9f	          0x8b4740	            mov eax, dword [rdi + 0x40] 	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400fea2	    0x390500000000	            cmp dword [0x0400fea8], eax 	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400fea8	     0xf85f3fbffff	                           jne 0x400faa1	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400feae	          0x8b4744	            mov eax, dword [rdi + 0x44] 	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400feb1	    0x390500000000	            cmp dword [0x0400feb7], eax 	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400feb7	      0xe9e5fbffff	                           jmp 0x400faa1	      7384	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0x400febc	          0x4531e4	                          xor r12d, r12d	      7323	ops.c	FUNCTION_90
0x400febf	            0x31ed	                            xor ebp, ebp	      7323	ops.c	FUNCTION_90
0x400fec1	      0xe9ecfaffff	                           jmp 0x400f9b2	      7323	ops.c	FUNCTION_90
0x400fec6	          0x4531e4	                          xor r12d, r12d	      7323	ops.c	FUNCTION_90
0x400fec9	            0x31ed	                            xor ebp, ebp	      7323	ops.c	FUNCTION_90
0x400fecb	      0xe9a8faffff	                           jmp 0x400f978	      7323	ops.c	FUNCTION_90
0x400fed0	    0x488b05000000	            mov rax, qword [0x0400fed7] 	      7403	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0x400fed7	    0x488d8c242401	                  lea rcx, [rsp + 0x124]	      7408	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	CALL_5
0x400fedf	    0x4c8d84242801	                   lea r8, [rsp + 0x128]	      7408	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	CALL_5
0x400fee7	      0x488d542470	                   lea rdx, [rsp + 0x70]	      7408	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	CALL_5
0x400feec	      0x488d742460	                   lea rsi, [rsp + 0x60]	      7408	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	CALL_5
0x400fef1	    0x488b1d000000	            mov rbx, qword [0x0400fef8] 	      7400	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0x400fef8	    0xc784241c0100	              mov dword [rsp + 0x11c], 1	      7405	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0x400ff03	    0xc78424200100	              mov dword [rsp + 0x120], 1	      7406	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0x400ff0e	    0x488905000000	            mov qword [0x0400ff15], rax 	      7403	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0x400ff15	    0xc78424c00000	               mov dword [rsp + 0xc0], 0	      7407	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0x400ff20	      0xe800000000	                          call 0x400ff25	      7408	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	CALL_5
0x400ff25	    0x488b05000000	            mov rax, qword [0x0400ff2c] 	      7413	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_8
0x400ff2c	    0x48891d000000	            mov qword [0x0400ff33], rbx 	      7411	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0x400ff33	    0x817848ffffff	     cmp dword [rax + 0x48], 0x7fffffff 	      7413	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_8
0x400ff3a	     0xf849d010000	                            je 0x40100dd	      7413	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_8
0x400ff40	    0x8b9424280100	           mov edx, dword [rsp + 0x128] 	      7416	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0x400ff47	    0x8b8424240100	           mov eax, dword [rsp + 0x124] 	      7416	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0x400ff4e	            0x39c2	                            cmp edx, eax	      7416	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0x400ff50	     0xf8d9dfbffff	                           jge 0x400faf3	      7416	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0x400ff56	    0x899424240100	            mov dword [rsp + 0x124], edx	      7419	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0x400ff5d	    0x898424280100	            mov dword [rsp + 0x128], eax	      7420	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0x400ff64	      0xe98afbffff	                           jmp 0x400faf3	      7420	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0x400ff69	          0x4531e4	                          xor r12d, r12d	      7323	ops.c	FUNCTION_90
0x400ff6c	            0x31ed	                            xor ebp, ebp	      7323	ops.c	FUNCTION_90
0x400ff6e	      0xe9a2fcffff	                           jmp 0x400fc15	      7323	ops.c	FUNCTION_90
0x400ff73	      0xe800000000	                          call 0x400ff78	      7546	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_24
0x400ff78	          0x4889c5	                            mov rbp, rax	      7546	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_24
0x400ff7b	    0x488d9c247001	                  lea rbx, [rsp + 0x170]	      7548	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_26
0x400ff83	      0xe800000000	                          call 0x400ff88	      7547	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_25
0x400ff88	    0x488b05000000	            mov rax, qword [0x0400ff8f] 	      7549	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7
0x400ff8f	      0xbe32000000	                           mov esi, 0x32	      7548	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_26
0x400ff94	          0x4889df	                            mov rdi, rbx	      7548	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_26
0x400ff97	    0x8b88d8000000	            mov ecx, dword [rax + 0xd8] 	      7548	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_26
0x400ff9d	          0x8b5040	            mov edx, dword [rax + 0x40] 	      7548	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_26
0x400ffa0	          0x83c101	                              add ecx, 1	      7548	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_26
0x400ffa3	          0x83c201	                              add edx, 1	      7548	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_26
0x400ffa6	      0xe800000000	                          call 0x400ffab	      7548	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_26
0x400ffab	          0x4889ef	                            mov rdi, rbp	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400ffae	      0xe800000000	                          call 0x400ffb3	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400ffb3	          0x4889ef	                            mov rdi, rbp	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400ffb6	          0x4189c4	                           mov r12d, eax	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400ffb9	      0xe800000000	                          call 0x400ffbe	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400ffbe	    0x488dbc244001	                  lea rdi, [rsp + 0x140]	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400ffc6	            0x89c2	                            mov edx, eax	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400ffc8	          0x4489e1	                           mov ecx, r12d	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400ffcb	      0xbe28000000	                           mov esi, 0x28	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400ffd0	      0xe800000000	                          call 0x400ffd5	      7550	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0x400ffd5	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      7554	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0x400ffda	      0x4839542430	            cmp qword [rsp + 0x30], rdx 	      7554	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0x400ffdf	            0x7510	                           jne 0x400fff1	      7554	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0x400ffe1	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      7554	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0x400ffe6	      0x48394c2408	                cmp qword [rsp + 8], rcx	      7554	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0x400ffeb	     0xf8442010000	                            je 0x4010133	      7554	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0x400fff1	    0x488b05000000	            mov rax, qword [0x0400fff8] 	      7567	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8
0x400fff8	      0xba05000000	                              mov edx, 5	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x400fffd	      0xbe00000000	                              mov esi, 0	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x4010002	            0x31ff	                            xor edi, edi	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x4010004	          0x4c8b20	                    mov r12, qword [rax]	      7567	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8
0x4010007	    0x488b05000000	            mov rax, qword [0x0401000e] 	      7566	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8
0x401000e	        0x488b6838	            mov rbp, qword [rax + 0x38] 	      7566	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8
0x4010012	      0xe800000000	                          call 0x4010017	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x4010017	        0x4883ec08	                              sub rsp, 8	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x401001b	    0x488b3d000000	            mov rdi, qword [0x04010022] 	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x4010022	          0x4889c2	                            mov rdx, rax	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x4010025	        0xff742410	                 push qword [rsp + 0x10]	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x4010029	        0xff742448	                 push qword [rsp + 0x48]	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x401002d	          0x4989e9	                             mov r9, rbp	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x4010030	        0xff742430	                 push qword [rsp + 0x30]	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x4010034	        0xff742450	                 push qword [rsp + 0x50]	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x4010038	          0x4889d9	                            mov rcx, rbx	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x401003b	        0xff742438	                 push qword [rsp + 0x38]	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x401003f	        0xff742458	                 push qword [rsp + 0x58]	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x4010043	      0xbe01040000	                          mov esi, 0x401	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x4010048	            0x4154	                                push r12	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x401004a	            0x31c0	                            xor eax, eax	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x401004c	    0x4c8d84248001	                   lea r8, [rsp + 0x180]	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x4010054	      0xe800000000	                          call 0x4010059	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x4010059	        0x4883c440	                           add rsp, 0x40	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x401005d	      0xe960fdffff	                           jmp 0x400fdc2	      7563	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0x4010062	    0x488b3d000000	            mov rdi, qword [0x04010069] 	      7512	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19
0x4010069	    0x817f48ffffff	     cmp dword [rdi + 0x48], 0x7fffffff 	      7512	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19
0x4010070	     0xf84ccfcffff	                            je 0x400fd42	      7512	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19
0x4010076	      0x488d4c2468	                   lea rcx, [rsp + 0x68]	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_17
0x401007b	      0x4c8d442478	                    lea r8, [rsp + 0x78]	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_17
0x4010080	      0x488d542470	                   lea rdx, [rsp + 0x70]	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_17
0x4010085	      0x488d742460	                   lea rsi, [rsp + 0x60]	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_17
0x401008a	    0x488d9c247001	                  lea rbx, [rsp + 0x170]	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x4010092	      0xe800000000	                          call 0x4010097	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_17
0x4010097	    0x8bac24280100	           mov ebp, dword [rsp + 0x128] 	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x401009e	    0x2bac24240100	            sub ebp, dword [rsp + 0x124]	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x40100a5	      0xba05000000	                              mov edx, 5	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x40100aa	      0xbe00000000	                              mov esi, 0	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x40100af	            0x31ff	                            xor edi, edi	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x40100b1	      0xe800000000	                          call 0x40100b6	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x40100b6	      0xbe32000000	                           mov esi, 0x32	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x40100bb	          0x4889c2	                            mov rdx, rax	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x40100be	          0x4889df	                            mov rdi, rbx	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x40100c1	          0x83c501	                              add ebp, 1	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x40100c4	            0x31c0	                            xor eax, eax	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x40100c6	          0x4863ed	                         movsxd rbp, ebp	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x40100c9	          0x4889e9	                            mov rcx, rbp	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x40100cc	      0xe800000000	                          call 0x40100d1	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x40100d1	    0x488b05000000	            mov rax, qword [0x040100d8] 	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x40100d8	      0xe975fcffff	                           jmp 0x400fd52	      7516	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0x40100dd	    0xc78424280100	    mov dword [rsp + 0x128], 0x7fffffff 	      7414	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_8
0x40100e8	      0xe906faffff	                           jmp 0x400faf3	      7414	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_8
0x40100ed	      0xbe00000000	                              mov esi, 0	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x40100f2	            0x31ff	                            xor edi, edi	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x40100f4	      0xe800000000	                          call 0x40100f9	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x40100f9	        0xff742408	                    push qword [rsp + 8]	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x40100fd	    0x488b3d000000	            mov rdi, qword [0x04010104] 	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x4010104	          0x4889c2	                            mov rdx, rax	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x4010107	        0xff742440	                 push qword [rsp + 0x40]	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x401010b	        0xff742420	                 push qword [rsp + 0x20]	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x401010f	          0x4989e9	                             mov r9, rbp	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x4010112	        0xff742440	                 push qword [rsp + 0x40]	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x4010116	      0x4c8b442478	              mov r8, qword [rsp + 0x78]	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x401011b	          0x4889d9	                            mov rcx, rbx	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x401011e	      0xbe01040000	                          mov esi, 0x401	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x4010123	            0x31c0	                            xor eax, eax	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x4010125	      0xe800000000	                          call 0x401012a	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x401012a	        0x4883c420	                           add rsp, 0x20	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x401012e	      0xe98ffcffff	                           jmp 0x400fdc2	      7524	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0x4010133	    0x488b05000000	            mov rax, qword [0x0401013a] 	      7559	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0x401013a	      0xba05000000	                              mov edx, 5	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x401013f	      0xbe00000000	                              mov esi, 0	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x4010144	            0x31ff	                            xor edi, edi	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x4010146	          0x4c8b20	                    mov r12, qword [rax]	      7559	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0x4010149	    0x488b05000000	            mov rax, qword [0x04010150] 	      7558	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0x4010150	        0x488b6838	            mov rbp, qword [rax + 0x38] 	      7558	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0x4010154	      0xe800000000	                          call 0x4010159	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x4010159	        0x4883ec08	                              sub rsp, 8	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x401015d	        0xff742410	                 push qword [rsp + 0x10]	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x4010161	        0xff742448	                 push qword [rsp + 0x48]	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x4010165	          0x4989e9	                             mov r9, rbp	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x4010168	        0xff742428	                 push qword [rsp + 0x28]	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x401016c	        0xff742448	                 push qword [rsp + 0x48]	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x4010170	            0x4154	                                push r12	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x4010172	    0x4c8d84247001	                   lea r8, [rsp + 0x170]	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x401017a	      0xe926fcffff	                           jmp 0x400fda5	      7555	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0x401017f	      0xe800000000	                          call 0x4010184	      7607	ops.c	FUNCTION_91
0x4010184	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      7323	ops.c	FUNCTION_90
0x4010189	      0x498d440601	                lea rax, [r14 + rax + 1]	      7323	ops.c	FUNCTION_90
0x401018e	      0x4889442410	             mov qword [rsp + 0x10], rax	      7323	ops.c	FUNCTION_90
0x4010193	      0xe9c5f7ffff	                           jmp 0x400f95d	      7323	ops.c	FUNCTION_90
get_op_type	SWITCH,0:DO,0:ELSE,0:functions,0:FOR,1:IF,6:WHILE,0:CALL,1	42
0x4001fd0	          0x83ff72	                           cmp edi, 0x72	       177	ops.c	FUNCTION_1	IF_1
0x4001fd3	      0xb810000000	                           mov eax, 0x10	       178	ops.c	FUNCTION_1	IF_1
0x4001fd8	            0x741e	                            je 0x4001ff8	       177	ops.c	FUNCTION_1	IF_1
0x4001fda	          0x83ff7e	                           cmp edi, 0x7e	       179	ops.c	FUNCTION_1	IF_2
0x4001fdd	      0xb807000000	                              mov eax, 7	       180	ops.c	FUNCTION_1	IF_2
0x4001fe2	            0x7414	                            je 0x4001ff8	       179	ops.c	FUNCTION_1	IF_2
0x4001fe4	          0x83ff67	                           cmp edi, 0x67	       181	ops.c	FUNCTION_1	IF_3
0x4001fe7	           0xf94c2	                                 sete dl	       181	ops.c	FUNCTION_1	IF_3
0x4001fea	          0x83fe01	                              cmp esi, 1	       181	ops.c	FUNCTION_1	IF_3
0x4001fed	            0x7511	                           jne 0x4002000	       181	ops.c	FUNCTION_1	IF_3
0x4001fef	            0x84d2	                             test dl, dl	       181	ops.c	FUNCTION_1	IF_3
0x4001ff1	      0xb81c000000	                           mov eax, 0x1c	       182	ops.c	FUNCTION_1	IF_3
0x4001ff6	            0x7408	                            je 0x4002000	       181	ops.c	FUNCTION_1	IF_3
0x4001ff8	              0xc3	                                     ret	       196	ops.c	FUNCTION_1
0x4001ff9	     0xf1f80000000	                         nop dword [rax]	       196	ops.c	FUNCTION_1
0x4002000	          0x83fe18	                           cmp esi, 0x18	       183	ops.c	FUNCTION_1	IF_4
0x4002003	            0x7509	                           jne 0x400200e	       183	ops.c	FUNCTION_1	IF_4
0x4002005	            0x84d2	                             test dl, dl	       183	ops.c	FUNCTION_1	IF_4
0x4002007	      0xb81d000000	                           mov eax, 0x1d	       184	ops.c	FUNCTION_1	IF_4
0x400200c	            0x75ea	                           jne 0x4001ff8	       183	ops.c	FUNCTION_1	IF_4
0x400200e	      0xba00000000	                              mov edx, 0	       183	ops.c	FUNCTION_1	IF_4
0x4002013	            0x31c0	                            xor eax, eax	       183	ops.c	FUNCTION_1	IF_4
0x4002015	            0xeb15	                           jmp 0x400202c	       183	ops.c	FUNCTION_1	IF_4
0x4002017	    0x660f1f840000	                    nop word [rax + rax]	       183	ops.c	FUNCTION_1	IF_4
0x4002020	        0x4883c203	                              add rdx, 3	       183	ops.c	FUNCTION_1	IF_4
0x4002024	          0x83f81d	                           cmp eax, 0x1d	       189	ops.c	FUNCTION_1	FOR_1	IF_6
0x4002027	            0x7417	                            je 0x4002040	       189	ops.c	FUNCTION_1	FOR_1	IF_6
0x4002029	          0x83c001	                              add eax, 1	       185	ops.c	FUNCTION_1	FOR_1
0x400202c	           0xfbe0a	                   movsx ecx, byte [rdx]	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x400202f	            0x39cf	                            cmp edi, ecx	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x4002031	            0x75ed	                           jne 0x4002020	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x4002033	         0xfbe4a01	               movsx ecx, byte [rdx + 1]	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x4002037	            0x39ce	                            cmp esi, ecx	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x4002039	            0x75e5	                           jne 0x4002020	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x400203b	            0xf3c3	                                     ret	       196	ops.c	FUNCTION_1
0x400203d	           0xf1f00	                         nop dword [rax]	       196	ops.c	FUNCTION_1
0x4002040	        0x4883ec08	                              sub rsp, 8	       174	ops.c	FUNCTION_1
0x4002044	      0xbf00000000	                              mov edi, 0	       191	ops.c	FUNCTION_1	FOR_1	IF_6	CALL_1
0x4002049	      0xe800000000	                          call 0x400204e	       191	ops.c	FUNCTION_1	FOR_1	IF_6	CALL_1
0x400204e	      0xb81d000000	                           mov eax, 0x1d	       192	ops.c	FUNCTION_1	FOR_1	IF_6
0x4002053	        0x4883c408	                              add rsp, 8	       196	ops.c	FUNCTION_1
0x4002057	              0xc3	                                     ret	       196	ops.c	FUNCTION_1
op_shift	SWITCH,0:DO,0:ELSE,8:functions,0:FOR,1:IF,13:WHILE,0:CALL,15	536
0x4002090	            0x4157	                                push r15	       231	ops.c	FUNCTION_5
0x4002092	            0x4156	                                push r14	       231	ops.c	FUNCTION_5
0x4002094	          0x4989fe	                            mov r14, rdi	       231	ops.c	FUNCTION_5
0x4002097	            0x4155	                                push r13	       231	ops.c	FUNCTION_5
0x4002099	            0x4154	                                push r12	       231	ops.c	FUNCTION_5
0x400209b	              0x55	                                push rbp	       231	ops.c	FUNCTION_5
0x400209c	              0x53	                                push rbx	       231	ops.c	FUNCTION_5
0x400209d	    0x4881ec980000	                           sub rsp, 0x98	       231	ops.c	FUNCTION_5
0x40020a4	    0x64488b042528	                mov rax, qword fs:[0x28]	       231	ops.c	FUNCTION_5
0x40020ad	    0x488984248800	             mov qword [rsp + 0x88], rax	       231	ops.c	FUNCTION_5
0x40020b5	            0x31c0	                            xor eax, eax	       231	ops.c	FUNCTION_5
0x40020b7	        0x488b4730	            mov rax, qword [rdi + 0x30] 	       237	ops.c	FUNCTION_5	IF_1	CALL_1
0x40020bb	        0x89742404	                mov dword [rsp + 4], esi	       231	ops.c	FUNCTION_5
0x40020bf	          0x891424	                    mov dword [rsp], edx	       231	ops.c	FUNCTION_5
0x40020c2	        0x488d7001	                      lea rsi, [rax + 1]	       237	ops.c	FUNCTION_5	IF_1	CALL_1
0x40020c6	        0x488b4720	            mov rax, qword [rdi + 0x20] 	       237	ops.c	FUNCTION_5	IF_1	CALL_1
0x40020ca	        0x488d78ff	                      lea rdi, [rax - 1]	       237	ops.c	FUNCTION_5	IF_1	CALL_1
0x40020ce	      0xe800000000	                          call 0x40020d3	       237	ops.c	FUNCTION_5	IF_1	CALL_1
0x40020d3	            0x85c0	                           test eax, eax	       237	ops.c	FUNCTION_5	IF_1	CALL_1
0x40020d5	     0xf8408020000	                            je 0x40022e3	       237	ops.c	FUNCTION_5	IF_1	CALL_1
0x40020db	        0x418b7660	            mov esi, dword [r14 + 0x60] 	       241	ops.c	FUNCTION_5	IF_2
0x40020df	    0xc74424100000	               mov dword [rsp + 0x10], 0	       235	ops.c	FUNCTION_5
0x40020e7	            0x85f6	                           test esi, esi	       241	ops.c	FUNCTION_5	IF_2
0x40020e9	     0xf8521050000	                           jne 0x4002610	       241	ops.c	FUNCTION_5	IF_2
0x40020ef	        0x4d8b7e50	            mov r15, qword [r14 + 0x50] 	       244	ops.c	FUNCTION_5	FOR_1
0x40020f3	        0x4983ef01	                              sub r15, 1	       244	ops.c	FUNCTION_5	FOR_1
0x40020f7	     0xf88d3000000	                            js 0x40021d0	       244	ops.c	FUNCTION_5	FOR_1
0x40020fd	      0x488d442450	                   lea rax, [rsp + 0x50]	       442	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_5
0x4002102	      0x4889442408	                mov qword [rsp + 8], rax	       442	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_5
0x4002107	            0xeb28	                           jmp 0x4002131	       442	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_5
0x4002109	     0xf1f80000000	                         nop dword [rax]	       442	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_5
0x4002110	    0x488b05000000	            mov rax, qword [0x04002117] 	       248	ops.c	FUNCTION_5	FOR_1	IF_3
0x4002117	    0xc74040000000	               mov dword [rax + 0x40], 0	       248	ops.c	FUNCTION_5	FOR_1	IF_3
0x400211e	        0x4983ef01	                              sub r15, 1	       244	ops.c	FUNCTION_5	FOR_1
0x4002122	      0x4883403801	               add qword [rax + 0x38], 1	       262	ops.c	FUNCTION_5	FOR_1
0x4002127	        0x4983ffff	             cmp r15, 0xffffffffffffffff	       244	ops.c	FUNCTION_5	FOR_1
0x400212b	     0xf849f000000	                            je 0x40021d0	       244	ops.c	FUNCTION_5	FOR_1
0x4002131	      0xe800000000	                          call 0x4002136	       246	ops.c	FUNCTION_5	FOR_1	CALL_2
0x4002136	           0xfb600	                   movzx eax, byte [rax]	       246	ops.c	FUNCTION_5	FOR_1	CALL_2
0x4002139	            0x85c0	                           test eax, eax	       247	ops.c	FUNCTION_5	FOR_1	IF_3
0x400213b	            0x74d3	                            je 0x4002110	       247	ops.c	FUNCTION_5	FOR_1	IF_3
0x400213d	        0x418b5660	            mov edx, dword [r14 + 0x60] 	       250	ops.c	FUNCTION_5	FOR_1	ELSE_1	IF_4
0x4002141	            0x85d2	                           test edx, edx	       250	ops.c	FUNCTION_5	FOR_1	ELSE_1	IF_4
0x4002143	     0xf850f020000	                           jne 0x4002358	       250	ops.c	FUNCTION_5	FOR_1	ELSE_1	IF_4
0x4002149	          0x83f823	                           cmp eax, 0x23	       257	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_4
0x400214c	    0x488b3d000000	            mov rdi, qword [0x04002153] 	       257	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_4
0x4002153	     0xf8447040000	                            je 0x40025a0	       257	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_4
0x4002159	    0x448b2d000000	           mov r13d, dword [0x04002160] 	       260	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_5
0x4002160	          0x418b2e	                    mov ebp, dword [r14]	       260	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_5
0x4002163	      0xe800000000	                          call 0x4002168	       333	ops.c	FUNCTION_6	CALL_1
0x4002168	          0x4889c3	                            mov rbx, rax	       333	ops.c	FUNCTION_6	CALL_1
0x400216b	      0xe800000000	                          call 0x4002170	       335	ops.c	FUNCTION_6	CALL_2
0x4002170	          0x4585ed	                         test r13d, r13d	       337	ops.c	FUNCTION_6	IF_1
0x4002173	     0xf8497010000	                            je 0x4002310	       337	ops.c	FUNCTION_6	IF_1
0x4002179	              0x99	                                     cdq	       339	ops.c	FUNCTION_6	IF_1
0x400217a	            0xf7fb	                                idiv ebx	       339	ops.c	FUNCTION_6	IF_1
0x400217c	            0x85d2	                           test edx, edx	       341	ops.c	FUNCTION_6	IF_1	IF_2
0x400217e	     0xf84c4040000	                            je 0x4002648	       341	ops.c	FUNCTION_6	IF_1	IF_2
0x4002184	          0x83fd04	                              cmp ebp, 4	       341	ops.c	FUNCTION_6	IF_1	IF_2
0x4002187	     0xf85bb040000	                           jne 0x4002648	       341	ops.c	FUNCTION_6	IF_1	IF_2
0x400218d	          0x8b0c24	                    mov ecx, dword [rsp]	       342	ops.c	FUNCTION_6	IF_1	IF_2
0x4002190	          0x8d51ff	                      lea edx, [rcx - 1]	       342	ops.c	FUNCTION_6	IF_1	IF_2
0x4002193	            0x29d0	                            sub eax, edx	       342	ops.c	FUNCTION_6	IF_1	IF_2
0x4002195	      0xbf00000000	                              mov edi, 0	       342	ops.c	FUNCTION_6	IF_1	IF_2
0x400219a	           0xf48c7	                          cmovs eax, edi	       342	ops.c	FUNCTION_6	IF_1	IF_2
0x400219d	           0xfafc3	                           imul eax, ebx	       351	ops.c	FUNCTION_6	IF_1	ELSE_1
0x40021a0	            0x89c7	                            mov edi, eax	       351	ops.c	FUNCTION_6	IF_1	ELSE_1
0x40021a2	    0xf60500000000	           test byte [0x040021a9], 0x80 	       367	ops.c	FUNCTION_6	IF_7
0x40021a9	     0xf8586010000	                           jne 0x4002335	       367	ops.c	FUNCTION_6	IF_7
0x40021af	            0x31f6	                            xor esi, esi	       371	ops.c	FUNCTION_6	CALL_4
0x40021b1	      0xe800000000	                          call 0x40021b6	       371	ops.c	FUNCTION_6	CALL_4
0x40021b6	    0x488b05000000	            mov rax, qword [0x040021bd] 	       371	ops.c	FUNCTION_6	CALL_4
0x40021bd	        0x4983ef01	                              sub r15, 1	       244	ops.c	FUNCTION_5	FOR_1
0x40021c1	      0x4883403801	               add qword [rax + 0x38], 1	       262	ops.c	FUNCTION_5	FOR_1
0x40021c6	        0x4983ffff	             cmp r15, 0xffffffffffffffff	       244	ops.c	FUNCTION_5	FOR_1
0x40021ca	     0xf8561ffffff	                           jne 0x4002131	       244	ops.c	FUNCTION_5	FOR_1
0x40021d0	        0x498b4630	            mov rax, qword [r14 + 0x30] 	       265	ops.c	FUNCTION_5	CALL_6
0x40021d4	        0x498b7e20	            mov rdi, qword [r14 + 0x20] 	       265	ops.c	FUNCTION_5	CALL_6
0x40021d8	            0x31c9	                            xor ecx, ecx	       265	ops.c	FUNCTION_5	CALL_6
0x40021da	            0x31f6	                            xor esi, esi	       265	ops.c	FUNCTION_5	CALL_6
0x40021dc	        0x488d5001	                      lea rdx, [rax + 1]	       265	ops.c	FUNCTION_5	CALL_6
0x40021e0	      0xe800000000	                          call 0x40021e5	       265	ops.c	FUNCTION_5	CALL_6
0x40021e5	        0x418b4e60	            mov ecx, dword [r14 + 0x60] 	       266	ops.c	FUNCTION_5	IF_6
0x40021e9	            0x85c9	                           test ecx, ecx	       266	ops.c	FUNCTION_5	IF_6
0x40021eb	     0xf8437040000	                            je 0x4002628	       266	ops.c	FUNCTION_5	IF_6
0x40021f1	    0x488b05000000	            mov rax, qword [0x040021f8] 	       268	ops.c	FUNCTION_5	IF_6
0x40021f8	        0x498b5620	            mov rdx, qword [r14 + 0x20] 	       268	ops.c	FUNCTION_5	IF_6
0x40021fc	        0x8b4c2410	            mov ecx, dword [rsp + 0x10] 	       269	ops.c	FUNCTION_5	IF_6
0x4002200	        0x48895038	             mov qword [rax + 0x38], rdx	       268	ops.c	FUNCTION_5	IF_6
0x4002204	          0x894840	             mov dword [rax + 0x40], ecx	       269	ops.c	FUNCTION_5	IF_6
0x4002207	      0xe800000000	                          call 0x400220c	       281	ops.c	FUNCTION_5	CALL_8
0x400220c	        0x498b5e50	            mov rbx, qword [r14 + 0x50] 	       285	ops.c	FUNCTION_5	IF_8
0x4002210	    0x483b1d000000	            cmp rbx, qword [0x04002217] 	       285	ops.c	FUNCTION_5	IF_8
0x4002217	            0x7e75	                           jle 0x400228e	       285	ops.c	FUNCTION_5	IF_8
0x4002219	        0x41833e05	                      cmp dword [r14], 5	       288	ops.c	FUNCTION_5	IF_8	IF_9
0x400221d	      0xb800000000	                              mov eax, 0	       288	ops.c	FUNCTION_5	IF_8	IF_9
0x4002222	    0x41b800000000	                              mov r8d, 0	       288	ops.c	FUNCTION_5	IF_8	IF_9
0x4002228	      0xba05000000	                              mov edx, 5	       294	ops.c	FUNCTION_5	IF_8	IF_10	CALL_9
0x400222d	        0x490f45c0	                          cmovne rax, r8	       288	ops.c	FUNCTION_5	IF_8	IF_9
0x4002231	        0x4883fb01	                              cmp rbx, 1	       291	ops.c	FUNCTION_5	IF_8	IF_10
0x4002235	          0x4889c5	                            mov rbp, rax	       288	ops.c	FUNCTION_5	IF_8	IF_9
0x4002238	     0xf8472040000	                            je 0x40026b0	       291	ops.c	FUNCTION_5	IF_8	IF_10
0x400223e	        0x833c2401	                      cmp dword [rsp], 1	       300	ops.c	FUNCTION_5	IF_8	ELSE_7	IF_12
0x4002242	     0xf8411040000	                            je 0x4002659	       300	ops.c	FUNCTION_5	IF_8	ELSE_7	IF_12
0x4002248	      0xbe00000000	                              mov esi, 0	       304	ops.c	FUNCTION_5	IF_8	ELSE_7	ELSE_8	CALL_12
0x400224d	            0x31ff	                            xor edi, edi	       304	ops.c	FUNCTION_5	IF_8	ELSE_7	ELSE_8	CALL_12
0x400224f	      0xe800000000	                          call 0x4002254	       304	ops.c	FUNCTION_5	IF_8	ELSE_7	ELSE_8	CALL_12
0x4002254	        0x4883ec08	                              sub rsp, 8	        33	stdio2.h	FUNCTION_104	CALL_1
0x4002258	    0x488b3d000000	            mov rdi, qword [0x0400225f] 	        33	stdio2.h	FUNCTION_104	CALL_1
0x400225f	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_104	CALL_1
0x4002266	        0x8b4c2408	                mov ecx, dword [rsp + 8]	        33	stdio2.h	FUNCTION_104	CALL_1
0x400226a	          0x4989e9	                             mov r9, rbp	        33	stdio2.h	FUNCTION_104	CALL_1
0x400226d	          0x4989d8	                             mov r8, rbx	        33	stdio2.h	FUNCTION_104	CALL_1
0x4002270	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_104	CALL_1
0x4002275	              0x51	                                push rcx	        33	stdio2.h	FUNCTION_104	CALL_1
0x4002276	          0x4889c1	                            mov rcx, rax	        33	stdio2.h	FUNCTION_104	CALL_1
0x4002279	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_104	CALL_1
0x400227b	      0xe800000000	                          call 0x4002280	        33	stdio2.h	FUNCTION_104	CALL_1
0x4002280	              0x58	                                 pop rax	        33	stdio2.h	FUNCTION_104	CALL_1
0x4002281	              0x5a	                                 pop rdx	        33	stdio2.h	FUNCTION_104	CALL_1
0x4002282	    0x488b3d000000	            mov rdi, qword [0x04002289] 	       307	ops.c	FUNCTION_5	IF_8	CALL_13
0x4002289	      0xe800000000	                          call 0x400228e	       307	ops.c	FUNCTION_5	IF_8	CALL_13
0x400228e	        0x498b5628	            mov rdx, qword [r14 + 0x28] 	       313	ops.c	FUNCTION_5
0x4002292	    0x488b1d000000	            mov rbx, qword [0x04002299] 	       313	ops.c	FUNCTION_5
0x4002299	        0x498b4620	            mov rax, qword [r14 + 0x20] 	       313	ops.c	FUNCTION_5
0x400229d	        0x498b7e30	            mov rdi, qword [r14 + 0x30] 	       314	ops.c	FUNCTION_5
0x40022a1	    0x488993e81100	          mov qword [rbx + 0x11e8], rdx 	       313	ops.c	FUNCTION_5
0x40022a8	    0x4889bb001200	          mov qword [rbx + 0x1200], rdi 	       314	ops.c	FUNCTION_5
0x40022af	    0x488983e01100	          mov qword [rbx + 0x11e0], rax 	       313	ops.c	FUNCTION_5
0x40022b6	      0xe800000000	                          call 0x40022bb	       315	ops.c	FUNCTION_5	CALL_15
0x40022bb	          0x4889c7	                            mov rdi, rax	       315	ops.c	FUNCTION_5	CALL_15
0x40022be	      0xe800000000	                          call 0x40022c3	       315	ops.c	FUNCTION_5	CALL_15
0x40022c3	    0x488b15000000	            mov rdx, qword [0x040022ca] 	       316	ops.c	FUNCTION_5	IF_13
0x40022ca	    0x898308120000	          mov dword [rbx + 0x1208], eax 	       315	ops.c	FUNCTION_5	CALL_15
0x40022d0	    0x8b8208120000	          mov eax, dword [rdx + 0x1208] 	       316	ops.c	FUNCTION_5	IF_13
0x40022d6	            0x85c0	                           test eax, eax	       316	ops.c	FUNCTION_5	IF_13
0x40022d8	            0x7e09	                           jle 0x40022e3	       316	ops.c	FUNCTION_5	IF_13
0x40022da	          0x83e801	                              sub eax, 1	       317	ops.c	FUNCTION_5	IF_13
0x40022dd	    0x898208120000	          mov dword [rdx + 0x1208], eax 	       317	ops.c	FUNCTION_5	IF_13
0x40022e3	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	       318	ops.c	FUNCTION_5
0x40022eb	    0x644833042528	                xor rax, qword fs:[0x28]	       318	ops.c	FUNCTION_5
0x40022f4	     0xf853b060000	                           jne 0x4002935	       318	ops.c	FUNCTION_5
0x40022fa	    0x4881c4980000	                           add rsp, 0x98	       318	ops.c	FUNCTION_5
0x4002301	              0x5b	                                 pop rbx	       318	ops.c	FUNCTION_5
0x4002302	              0x5d	                                 pop rbp	       318	ops.c	FUNCTION_5
0x4002303	            0x415c	                                 pop r12	       318	ops.c	FUNCTION_5
0x4002305	            0x415d	                                 pop r13	       318	ops.c	FUNCTION_5
0x4002307	            0x415e	                                 pop r14	       318	ops.c	FUNCTION_5
0x4002309	            0x415f	                                 pop r15	       318	ops.c	FUNCTION_5
0x400230b	              0xc3	                                     ret	       318	ops.c	FUNCTION_5
0x400230c	         0xf1f4000	                         nop dword [rax]	       318	ops.c	FUNCTION_5
0x4002310	         0xfaf1c24	                   imul ebx, dword [rsp]	       357	ops.c	FUNCTION_6	ELSE_1	ELSE_2	IF_5
0x4002314	          0x83fd04	                              cmp ebp, 4	       355	ops.c	FUNCTION_6	ELSE_1	ELSE_2	IF_5
0x4002317	          0x8d3c03	                    lea edi, [rbx + rax]	       362	ops.c	FUNCTION_6	ELSE_2	ELSE_3
0x400231a	     0xf8582feffff	                           jne 0x40021a2	       355	ops.c	FUNCTION_6	ELSE_1	ELSE_2	IF_5
0x4002320	            0x29d8	                            sub eax, ebx	       355	ops.c	FUNCTION_6	ELSE_1	ELSE_2	IF_5
0x4002322	          0x4489ef	                           mov edi, r13d	       355	ops.c	FUNCTION_6	ELSE_1	ELSE_2	IF_5
0x4002325	           0xf49f8	                         cmovns edi, eax	       355	ops.c	FUNCTION_6	ELSE_1	ELSE_2	IF_5
0x4002328	    0xf60500000000	           test byte [0x0400232f], 0x80 	       367	ops.c	FUNCTION_6	IF_7
0x400232f	     0xf847afeffff	                            je 0x40021af	       367	ops.c	FUNCTION_6	IF_7
0x4002335	            0x89fe	                            mov esi, edi	       368	ops.c	FUNCTION_6	CALL_3
0x4002337	          0x4531c0	                            xor r8d, r8d	       368	ops.c	FUNCTION_6	CALL_3
0x400233a	            0x31c9	                            xor ecx, ecx	       368	ops.c	FUNCTION_6	CALL_3
0x400233c	            0x31d2	                            xor edx, edx	       368	ops.c	FUNCTION_6	CALL_3
0x400233e	      0xbf01000000	                              mov edi, 1	       368	ops.c	FUNCTION_6	CALL_3
0x4002343	      0xe800000000	                          call 0x4002348	       368	ops.c	FUNCTION_6	CALL_3
0x4002348	    0x488b05000000	            mov rax, qword [0x0400234f] 	       368	ops.c	FUNCTION_6	CALL_3
0x400234f	      0xe9cafdffff	                           jmp 0x400211e	       368	ops.c	FUNCTION_6	CALL_3
0x4002354	         0xf1f4000	                         nop dword [rax]	       368	ops.c	FUNCTION_6	CALL_3
0x4002358	    0x488b05000000	            mov rax, qword [0x0400235f] 	       386	ops.c	FUNCTION_7
0x400235f	    0x488b3d000000	            mov rdi, qword [0x04002366] 	       387	ops.c	FUNCTION_7	CALL_1
0x4002366	          0x458b26	                   mov r12d, dword [r14]	       382	ops.c	FUNCTION_7
0x4002369	    0x448b2d000000	           mov r13d, dword [0x04002370] 	       383	ops.c	FUNCTION_7
0x4002370	          0x8b4040	            mov eax, dword [rax + 0x40] 	       386	ops.c	FUNCTION_7
0x4002373	        0x89442414	             mov dword [rsp + 0x14], eax	       386	ops.c	FUNCTION_7
0x4002377	      0xe800000000	                          call 0x400237c	       387	ops.c	FUNCTION_7	CALL_1
0x400237c	          0x4889c3	                            mov rbx, rax	       387	ops.c	FUNCTION_7	CALL_1
0x400237f	    0x488b05000000	            mov rax, qword [0x04002386] 	       388	ops.c	FUNCTION_7
0x4002386	      0x488d742440	                   lea rsi, [rsp + 0x40]	       401	ops.c	FUNCTION_7	CALL_2
0x400238b	      0xb901000000	                              mov ecx, 1	       401	ops.c	FUNCTION_7	CALL_2
0x4002390	          0x4c89f7	                            mov rdi, r14	       401	ops.c	FUNCTION_7	CALL_2
0x4002393	    0xc70500000000	           mov dword [0x0400239d], 0x10 	       400	ops.c	FUNCTION_7
0x400239d	    0x488ba8a81500	          mov rbp, qword [rax + 0x15a8] 	       388	ops.c	FUNCTION_7
0x40023a4	    0x8b0500000000	            mov eax, dword [0x040023aa] 	       395	ops.c	FUNCTION_7
0x40023aa	    0xc70500000000	               mov dword [0x040023b4], 0	       397	ops.c	FUNCTION_7
0x40023b4	        0x89442428	             mov dword [rsp + 0x28], eax	       395	ops.c	FUNCTION_7
0x40023b8	    0x488b05000000	            mov rax, qword [0x040023bf] 	       401	ops.c	FUNCTION_7	CALL_2
0x40023bf	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       401	ops.c	FUNCTION_7	CALL_2
0x40023c3	      0xe878dcffff	                     call sym.block_prep	       401	ops.c	FUNCTION_7	CALL_2
0x40023c8	        0x8b442464	            mov eax, dword [rsp + 0x64] 	       402	ops.c	FUNCTION_7	IF_1
0x40023cc	            0x85c0	                           test eax, eax	       402	ops.c	FUNCTION_7	IF_1
0x40023ce	     0xf85e2fdffff	                           jne 0x40021b6	       402	ops.c	FUNCTION_7	IF_1
0x40023d4	          0x8b3424	                    mov esi, dword [rsp]	       406	ops.c	FUNCTION_7
0x40023d7	            0x89f1	                            mov ecx, esi	       406	ops.c	FUNCTION_7
0x40023d9	           0xfafcb	                           imul ecx, ebx	       406	ops.c	FUNCTION_7
0x40023dc	            0x89c8	                            mov eax, ecx	       407	ops.c	FUNCTION_7	IF_2
0x40023de	              0x99	                                     cdq	       407	ops.c	FUNCTION_7	IF_2
0x40023df	            0xf7fb	                                idiv ebx	       407	ops.c	FUNCTION_7	IF_2
0x40023e1	            0x39c6	                            cmp esi, eax	       407	ops.c	FUNCTION_7	IF_2
0x40023e3	     0xf85cdfdffff	                           jne 0x40021b6	       407	ops.c	FUNCTION_7	IF_2
0x40023e9	        0x894c2418	             mov dword [rsp + 0x18], ecx	       407	ops.c	FUNCTION_7	IF_2
0x40023ed	      0xe800000000	                          call 0x40023f2	       410	ops.c	FUNCTION_7	CALL_3
0x40023f2	        0x4183fc04	                             cmp r12d, 4	       412	ops.c	FUNCTION_7	IF_3
0x40023f6	      0x4889442420	             mov qword [rsp + 0x20], rax	       410	ops.c	FUNCTION_7	CALL_3
0x40023fb	      0x48634c2418	         movsxd rcx, dword [rsp + 0x18] 	       412	ops.c	FUNCTION_7	IF_3
0x4002400	     0xf84e9020000	                            je 0x40026ef	       412	ops.c	FUNCTION_7	IF_3
0x4002406	        0x8b442470	            mov eax, dword [rsp + 0x70] 	       420	ops.c	FUNCTION_7	IF_3
0x400240a	      0x448b64245c	           mov r12d, dword [rsp + 0x5c] 	       421	ops.c	FUNCTION_7	IF_3
0x400240f	          0x8d1c01	                    lea ebx, [rcx + rax]	       420	ops.c	FUNCTION_7	IF_3
0x4002412	          0x4129c4	                           sub r12d, eax	       421	ops.c	FUNCTION_7	IF_3
0x4002415	        0x8b442440	            mov eax, dword [rsp + 0x40] 	       422	ops.c	FUNCTION_7	IF_3	IF_4
0x4002419	            0x85c0	                           test eax, eax	       422	ops.c	FUNCTION_7	IF_3	IF_4
0x400241b	     0xf8510040000	                           jne 0x4002831	       422	ops.c	FUNCTION_7	IF_3	IF_4
0x4002421	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	       422	ops.c	FUNCTION_7	IF_3	IF_4
0x4002426	           0xfb607	                   movzx eax, byte [rdi]	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x4002429	            0x3c20	                            cmp al, 0x20	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x400242b	            0x7404	                            je 0x4002431	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x400242d	            0x3c09	                               cmp al, 9	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x400242f	            0x752d	                           jne 0x400245e	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x4002431	        0x8b54245c	            mov edx, dword [rsp + 0x5c] 	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x4002435	           0xf1f00	                         nop dword [rax]	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x4002438	      0x488b742408	                mov rsi, qword [rsp + 8]	       442	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_5
0x400243d	      0xe800000000	                          call 0x4002442	       442	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_5
0x4002442	             0x1c3	                            add ebx, eax	       444	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1
0x4002444	         0x344245c	             add eax, dword [rsp + 0x5c]	       445	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1
0x4002448	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x400244d	            0x89c2	                            mov edx, eax	       445	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1
0x400244f	        0x8944245c	             mov dword [rsp + 0x5c], eax	       445	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1
0x4002453	           0xfb607	                   movzx eax, byte [rdi]	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x4002456	            0x3c20	                            cmp al, 0x20	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x4002458	            0x74de	                            je 0x4002438	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x400245a	            0x3c09	                               cmp al, 9	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x400245c	            0x74da	                            je 0x4002438	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x400245e	    0x488b05000000	            mov rax, qword [0x04002465] 	       449	ops.c	FUNCTION_7	IF_3	IF_7
0x4002465	    0xc74424180000	               mov dword [rsp + 0x18], 0	       392	ops.c	FUNCTION_7
0x400246d	    0x448b90781400	         mov r10d, dword [rax + 0x1478] 	       449	ops.c	FUNCTION_7	IF_3	IF_7
0x4002474	          0x4585d2	                         test r10d, r10d	       449	ops.c	FUNCTION_7	IF_3	IF_7
0x4002477	            0x7515	                           jne 0x400248e	       449	ops.c	FUNCTION_7	IF_3	IF_7
0x4002479	          0x4489e0	                           mov eax, r12d	       450	ops.c	FUNCTION_7	IF_3	IF_7
0x400247c	              0x99	                                     cdq	       450	ops.c	FUNCTION_7	IF_3	IF_7
0x400247d	            0xf7fd	                                idiv ebp	       450	ops.c	FUNCTION_7	IF_3	IF_7
0x400247f	          0x8d041a	                    lea eax, [rdx + rbx]	       450	ops.c	FUNCTION_7	IF_3	IF_7
0x4002482	              0x99	                                     cdq	       450	ops.c	FUNCTION_7	IF_3	IF_7
0x4002483	            0xf7fd	                                idiv ebp	       450	ops.c	FUNCTION_7	IF_3	IF_7
0x4002485	            0x85c0	                           test eax, eax	       452	ops.c	FUNCTION_7	IF_3	IF_8
0x4002487	        0x89442418	             mov dword [rsp + 0x18], eax	       450	ops.c	FUNCTION_7	IF_3	IF_7
0x400248b	           0xf45da	                         cmovne ebx, edx	       452	ops.c	FUNCTION_7	IF_3	IF_8
0x400248e	      0x448b4c2440	            mov r9d, dword [rsp + 0x40] 	       456	ops.c	FUNCTION_7	IF_3
0x4002493	            0x31ed	                            xor ebp, ebp	       456	ops.c	FUNCTION_7	IF_3
0x4002495	          0x4585c9	                           test r9d, r9d	       456	ops.c	FUNCTION_7	IF_3
0x4002498	        0x400f95c5	                               setne bpl	       456	ops.c	FUNCTION_7	IF_3
0x400249c	        0x2b6c2474	             sub ebp, dword [rsp + 0x74]	       456	ops.c	FUNCTION_7	IF_3
0x40024a0	         0x36c2458	             add ebp, dword [rsp + 0x58]	       456	ops.c	FUNCTION_7	IF_3
0x40024a4	        0x896c2458	             mov dword [rsp + 0x58], ebp	       456	ops.c	FUNCTION_7	IF_3
0x40024a8	      0xe800000000	                          call 0x40024ad	       457	ops.c	FUNCTION_7	IF_3	CALL_6
0x40024ad	          0x83c001	                              add eax, 1	       457	ops.c	FUNCTION_7	IF_3	CALL_6
0x40024b0	            0x89c1	                            mov ecx, eax	       457	ops.c	FUNCTION_7	IF_3	CALL_6
0x40024b2	        0x8b442418	            mov eax, dword [rsp + 0x18] 	       458	ops.c	FUNCTION_7	IF_3	CALL_7
0x40024b6	        0x894c242c	             mov dword [rsp + 0x2c], ecx	       458	ops.c	FUNCTION_7	IF_3	CALL_7
0x40024ba	        0x8d7c0500	                    lea edi, [rbp + rax]	       458	ops.c	FUNCTION_7	IF_3	CALL_7
0x40024be	             0x1df	                            add edi, ebx	       458	ops.c	FUNCTION_7	IF_3	CALL_7
0x40024c0	             0x1cf	                            add edi, ecx	       458	ops.c	FUNCTION_7	IF_3	CALL_7
0x40024c2	      0xe800000000	                          call 0x40024c7	       458	ops.c	FUNCTION_7	IF_3	CALL_7
0x40024c7	          0x4885c0	                           test rax, rax	       459	ops.c	FUNCTION_7	IF_3	IF_9
0x40024ca	          0x4989c4	                            mov r12, rax	       458	ops.c	FUNCTION_7	IF_3	CALL_7
0x40024cd	     0xf84e3fcffff	                            je 0x40021b6	       459	ops.c	FUNCTION_7	IF_3	IF_9
0x40024d3	        0x8b6c2418	            mov ebp, dword [rsp + 0x18] 	        90	string3.h	FUNCTION_95	CALL_6
0x40024d7	        0x8b542458	            mov edx, dword [rsp + 0x58] 	        90	string3.h	FUNCTION_95	CALL_6
0x40024db	            0x31f6	                            xor esi, esi	        90	string3.h	FUNCTION_95	CALL_6
0x40024dd	          0x4889c7	                            mov rdi, rax	        90	string3.h	FUNCTION_95	CALL_6
0x40024e0	             0x1ea	                            add edx, ebp	        90	string3.h	FUNCTION_95	CALL_6
0x40024e2	          0x4863ed	                         movsxd rbp, ebp	       463	ops.c	FUNCTION_7	IF_3	CALL_10
0x40024e5	             0x1da	                            add edx, ebx	        90	string3.h	FUNCTION_95	CALL_6
0x40024e7	         0x354242c	             add edx, dword [rsp + 0x2c]	        90	string3.h	FUNCTION_95	CALL_6
0x40024eb	          0x4863db	                         movsxd rbx, ebx	       464	ops.c	FUNCTION_7	IF_3	CALL_11
0x40024ee	          0x4863d2	                         movsxd rdx, edx	        90	string3.h	FUNCTION_95	CALL_6
0x40024f1	      0xe800000000	                          call 0x40024f6	        90	string3.h	FUNCTION_95	CALL_6
0x40024f6	      0x4863542458	         movsxd rdx, dword [rsp + 0x58] 	        59	string3.h	FUNCTION_93	CALL_3
0x40024fb	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	        59	string3.h	FUNCTION_93	CALL_3
0x4002500	          0x4c89e7	                            mov rdi, r12	        59	string3.h	FUNCTION_93	CALL_3
0x4002503	      0xe800000000	                          call 0x4002508	        59	string3.h	FUNCTION_93	CALL_3
0x4002508	      0x48637c2458	         movsxd rdi, dword [rsp + 0x58] 	        90	string3.h	FUNCTION_95	CALL_6
0x400250d	          0x4889ea	                            mov rdx, rbp	        90	string3.h	FUNCTION_95	CALL_6
0x4002510	      0xbe09000000	                              mov esi, 9	        90	string3.h	FUNCTION_95	CALL_6
0x4002515	          0x4c01e7	                            add rdi, r12	        90	string3.h	FUNCTION_95	CALL_6
0x4002518	      0xe800000000	                          call 0x400251d	        90	string3.h	FUNCTION_95	CALL_6
0x400251d	      0x48637c2458	         movsxd rdi, dword [rsp + 0x58] 	        90	string3.h	FUNCTION_95	CALL_6
0x4002522	          0x4889da	                            mov rdx, rbx	        90	string3.h	FUNCTION_95	CALL_6
0x4002525	      0xbe20000000	                           mov esi, 0x20	        90	string3.h	FUNCTION_95	CALL_6
0x400252a	          0x4801eb	                            add rbx, rbp	        59	string3.h	FUNCTION_93	CALL_3
0x400252d	          0x4801ef	                            add rdi, rbp	        90	string3.h	FUNCTION_95	CALL_6
0x4002530	          0x4c01e7	                            add rdi, r12	        90	string3.h	FUNCTION_95	CALL_6
0x4002533	      0xe800000000	                          call 0x4002538	        90	string3.h	FUNCTION_95	CALL_6
0x4002538	      0x48637c2458	         movsxd rdi, dword [rsp + 0x58] 	        59	string3.h	FUNCTION_93	CALL_3
0x400253d	      0x486354242c	         movsxd rdx, dword [rsp + 0x2c] 	        59	string3.h	FUNCTION_93	CALL_3
0x4002542	      0x488b742450	            mov rsi, qword [rsp + 0x50] 	        59	string3.h	FUNCTION_93	CALL_3
0x4002547	          0x4801df	                            add rdi, rbx	        59	string3.h	FUNCTION_93	CALL_3
0x400254a	          0x4c01e7	                            add rdi, r12	        59	string3.h	FUNCTION_93	CALL_3
0x400254d	      0xe800000000	                          call 0x4002552	        59	string3.h	FUNCTION_93	CALL_3
0x4002552	    0x488b05000000	            mov rax, qword [0x04002559] 	       560	ops.c	FUNCTION_7	CALL_23
0x4002559	            0x31d2	                            xor edx, edx	       560	ops.c	FUNCTION_7	CALL_23
0x400255b	          0x4c89e6	                            mov rsi, r12	       560	ops.c	FUNCTION_7	CALL_23
0x400255e	        0x488b7838	            mov rdi, qword [rax + 0x38] 	       560	ops.c	FUNCTION_7	CALL_23
0x4002562	      0xe800000000	                          call 0x4002567	       560	ops.c	FUNCTION_7	CALL_23
0x4002567	    0x488b05000000	            mov rax, qword [0x0400256e] 	       561	ops.c	FUNCTION_7	CALL_24
0x400256e	        0x8b742458	            mov esi, dword [rsp + 0x58] 	       561	ops.c	FUNCTION_7	CALL_24
0x4002572	        0x488b7838	            mov rdi, qword [rax + 0x38] 	       561	ops.c	FUNCTION_7	CALL_24
0x4002576	      0xe800000000	                          call 0x400257b	       561	ops.c	FUNCTION_7	CALL_24
0x400257b	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	       563	ops.c	FUNCTION_7
0x400257f	    0x488b05000000	            mov rax, qword [0x04002586] 	       563	ops.c	FUNCTION_7
0x4002586	    0x44892d000000	           mov dword [0x0400258d], r13d 	       562	ops.c	FUNCTION_7
0x400258d	          0x894840	             mov dword [rax + 0x40], ecx	       563	ops.c	FUNCTION_7
0x4002590	        0x8b4c2428	            mov ecx, dword [rsp + 0x28] 	       565	ops.c	FUNCTION_7
0x4002594	    0x890d00000000	            mov dword [0x0400259a], ecx 	       565	ops.c	FUNCTION_7
0x400259a	      0xe97ffbffff	                           jmp 0x400211e	       565	ops.c	FUNCTION_7
0x400259f	              0x90	                                     nop	       565	ops.c	FUNCTION_7
0x40025a0	    0x448b97741500	         mov r10d, dword [rdi + 0x1574] 	      4191	ops.c	FUNCTION_50
0x40025a7	          0x4585d2	                         test r10d, r10d	      4191	ops.c	FUNCTION_50
0x40025aa	            0x744c	                            je 0x40025f8	      4191	ops.c	FUNCTION_50
0x40025ac	    0x448b8f281400	          mov r9d, dword [rdi + 0x1428] 	      4191	ops.c	FUNCTION_50
0x40025b3	          0x4585c9	                           test r9d, r9d	      4191	ops.c	FUNCTION_50
0x40025b6	     0xf84fafbffff	                            je 0x40021b6	      4191	ops.c	FUNCTION_50
0x40025bc	      0xbf23000000	                           mov edi, 0x23	      4197	ops.c	FUNCTION_50	CALL_2
0x40025c1	      0xba01000000	                              mov edx, 1	      4197	ops.c	FUNCTION_50	CALL_2
0x40025c6	      0xbe20000000	                           mov esi, 0x20	      4197	ops.c	FUNCTION_50	CALL_2
0x40025cb	      0xe800000000	                          call 0x40025d0	      4197	ops.c	FUNCTION_50	CALL_2
0x40025d0	            0x85c0	                           test eax, eax	      4197	ops.c	FUNCTION_50	CALL_2
0x40025d2	    0x488b3d000000	            mov rdi, qword [0x040025d9] 	      4198	ops.c	FUNCTION_50
0x40025d9	     0xf847afbffff	                            je 0x4002159	      4197	ops.c	FUNCTION_50	CALL_2
0x40025df	    0x8bb7e8160000	          mov esi, dword [rdi + 0x16e8] 	      4198	ops.c	FUNCTION_50
0x40025e5	            0x85f6	                           test esi, esi	      4198	ops.c	FUNCTION_50
0x40025e7	     0xf84c9fbffff	                            je 0x40021b6	      4198	ops.c	FUNCTION_50
0x40025ed	      0xe967fbffff	                           jmp 0x4002159	      4198	ops.c	FUNCTION_50
0x40025f2	    0x660f1f440000	                    nop word [rax + rax]	      4198	ops.c	FUNCTION_50
0x40025f8	    0x448b87281400	          mov r8d, dword [rdi + 0x1428] 	      4191	ops.c	FUNCTION_50
0x40025ff	          0x4585c0	                           test r8d, r8d	      4191	ops.c	FUNCTION_50
0x4002602	     0xf8451fbffff	                            je 0x4002159	      4191	ops.c	FUNCTION_50
0x4002608	            0xebb2	                           jmp 0x40025bc	      4191	ops.c	FUNCTION_50
0x400260a	    0x660f1f440000	                    nop word [rax + rax]	      4191	ops.c	FUNCTION_50
0x4002610	    0x488b05000000	            mov rax, qword [0x04002617] 	       242	ops.c	FUNCTION_5	IF_2
0x4002617	          0x8b4040	            mov eax, dword [rax + 0x40] 	       242	ops.c	FUNCTION_5	IF_2
0x400261a	        0x89442410	             mov dword [rsp + 0x10], eax	       242	ops.c	FUNCTION_5	IF_2
0x400261e	      0xe9ccfaffff	                           jmp 0x40020ef	       242	ops.c	FUNCTION_5	IF_2
0x4002623	       0xf1f440000	                   nop dword [rax + rax]	       242	ops.c	FUNCTION_5	IF_2
0x4002628	        0x8b4c2404	                mov ecx, dword [rsp + 4]	       271	ops.c	FUNCTION_5	ELSE_3	IF_7
0x400262c	            0x85c9	                           test ecx, ecx	       271	ops.c	FUNCTION_5	ELSE_3	IF_7
0x400262e	            0x7560	                           jne 0x4002690	       271	ops.c	FUNCTION_5	ELSE_3	IF_7
0x4002630	    0x488b05000000	            mov rax, qword [0x04002637] 	       277	ops.c	FUNCTION_5	ELSE_4
0x4002637	      0x4883683801	               sub qword [rax + 0x38], 1	       277	ops.c	FUNCTION_5	ELSE_4
0x400263c	      0xe9c6fbffff	                           jmp 0x4002207	       277	ops.c	FUNCTION_5	ELSE_4
0x4002641	     0xf1f80000000	                         nop dword [rax]	       277	ops.c	FUNCTION_5	ELSE_4
0x4002648	          0x83fd04	                              cmp ebp, 4	       343	ops.c	FUNCTION_6	IF_1	IF_3
0x400264b	     0xf84e9020000	                            je 0x400293a	       343	ops.c	FUNCTION_6	IF_1	IF_3
0x4002651	           0x30424	                    add eax, dword [rsp]	       350	ops.c	FUNCTION_6	IF_1	ELSE_1
0x4002654	      0xe944fbffff	                           jmp 0x400219d	       350	ops.c	FUNCTION_6	IF_1	ELSE_1
0x4002659	            0x31ff	                            xor edi, edi	       301	ops.c	FUNCTION_5	IF_8	ELSE_7	IF_12	CALL_11
0x400265b	      0xbe00000000	                              mov esi, 0	       301	ops.c	FUNCTION_5	IF_8	ELSE_7	IF_12	CALL_11
0x4002660	      0xe800000000	                          call 0x4002665	       301	ops.c	FUNCTION_5	IF_8	ELSE_7	IF_12	CALL_11
0x4002665	    0x488b3d000000	            mov rdi, qword [0x0400266c] 	        33	stdio2.h	FUNCTION_104	CALL_1
0x400266c	          0x4889c1	                            mov rcx, rax	        33	stdio2.h	FUNCTION_104	CALL_1
0x400266f	          0x4989e9	                             mov r9, rbp	        33	stdio2.h	FUNCTION_104	CALL_1
0x4002672	          0x4989d8	                             mov r8, rbx	        33	stdio2.h	FUNCTION_104	CALL_1
0x4002675	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_104	CALL_1
0x400267c	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_104	CALL_1
0x4002681	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_104	CALL_1
0x4002683	      0xe800000000	                          call 0x4002688	        33	stdio2.h	FUNCTION_104	CALL_1
0x4002688	      0xe9f5fbffff	                           jmp 0x4002282	        33	stdio2.h	FUNCTION_104	CALL_1
0x400268d	           0xf1f00	                         nop dword [rax]	        33	stdio2.h	FUNCTION_104	CALL_1
0x4002690	        0x498b5620	            mov rdx, qword [r14 + 0x20] 	       273	ops.c	FUNCTION_5	ELSE_3	IF_7
0x4002694	    0x488b05000000	            mov rax, qword [0x0400269b] 	       273	ops.c	FUNCTION_5	ELSE_3	IF_7
0x400269b	      0xbf06000000	                              mov edi, 6	       274	ops.c	FUNCTION_5	ELSE_3	IF_7	CALL_7
0x40026a0	        0x48895038	             mov qword [rax + 0x38], rdx	       273	ops.c	FUNCTION_5	ELSE_3	IF_7
0x40026a4	      0xe800000000	                          call 0x40026a9	       274	ops.c	FUNCTION_5	ELSE_3	IF_7	CALL_7
0x40026a9	      0xe959fbffff	                           jmp 0x4002207	       274	ops.c	FUNCTION_5	ELSE_3	IF_7	CALL_7
0x40026ae	            0x6690	                                     nop	       274	ops.c	FUNCTION_5	ELSE_3	IF_7	CALL_7
0x40026b0	        0x833c2401	                      cmp dword [rsp], 1	       293	ops.c	FUNCTION_5	IF_8	IF_10	IF_11
0x40026b4	     0xf8446010000	                            je 0x4002800	       293	ops.c	FUNCTION_5	IF_8	IF_10	IF_11
0x40026ba	            0x31ff	                            xor edi, edi	       296	ops.c	FUNCTION_5	IF_8	IF_10	CALL_10
0x40026bc	      0xbe00000000	                              mov esi, 0	       296	ops.c	FUNCTION_5	IF_8	IF_10	CALL_10
0x40026c1	      0xe800000000	                          call 0x40026c6	       296	ops.c	FUNCTION_5	IF_8	IF_10	CALL_10
0x40026c6	        0x448b0c24	                    mov r9d, dword [rsp]	        33	stdio2.h	FUNCTION_104	CALL_1
0x40026ca	    0x488b3d000000	            mov rdi, qword [0x040026d1] 	        33	stdio2.h	FUNCTION_104	CALL_1
0x40026d1	          0x4889c1	                            mov rcx, rax	        33	stdio2.h	FUNCTION_104	CALL_1
0x40026d4	          0x4989e8	                             mov r8, rbp	        33	stdio2.h	FUNCTION_104	CALL_1
0x40026d7	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_104	CALL_1
0x40026de	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_104	CALL_1
0x40026e3	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_104	CALL_1
0x40026e5	      0xe800000000	                          call 0x40026ea	        33	stdio2.h	FUNCTION_104	CALL_1
0x40026ea	      0xe993fbffff	                           jmp 0x4002282	        33	stdio2.h	FUNCTION_104	CALL_1
0x40026ef	      0x448b442440	            mov r8d, dword [rsp + 0x40] 	       495	ops.c	FUNCTION_7	ELSE_4	IF_10
0x40026f4	      0x488b542450	            mov rdx, qword [rsp + 0x50] 	       481	ops.c	FUNCTION_7	ELSE_4
0x40026f9	          0x4585c0	                           test r8d, r8d	       495	ops.c	FUNCTION_7	ELSE_4	IF_10
0x40026fc	      0x4889542438	             mov qword [rsp + 0x38], rdx	       481	ops.c	FUNCTION_7	ELSE_4
0x4002701	          0x4889d7	                            mov rdi, rdx	       495	ops.c	FUNCTION_7	ELSE_4	IF_10
0x4002704	            0x741b	                            je 0x4002721	       495	ops.c	FUNCTION_7	ELSE_4	IF_10
0x4002706	    0x8b3500000000	            mov esi, dword [0x0400270c] 	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x400270c	      0xb801000000	                              mov eax, 1	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x4002711	            0x85f6	                           test esi, esi	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x4002713	     0xf85f4010000	                           jne 0x400290d	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x4002719	          0x4801c2	                            add rdx, rax	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x400271c	      0x4889542438	             mov qword [rsp + 0x38], rdx	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x4002721	           0xfb602	                   movzx eax, byte [rdx]	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x4002724	        0x8b6c245c	            mov ebp, dword [rsp + 0x5c] 	       499	ops.c	FUNCTION_7	ELSE_4
0x4002728	            0x3c20	                            cmp al, 0x20	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x400272a	            0x7408	                            je 0x4002734	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x400272c	            0x3c09	                               cmp al, 9	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x400272e	     0xf85bc000000	                           jne 0x40027f0	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x4002734	            0x89cb	                            mov ebx, ecx	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x4002736	            0xeb0d	                           jmp 0x4002745	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x4002738	     0xf1f84000000	                   nop dword [rax + rax]	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x4002740	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x4002745	      0x488d742438	                   lea rsi, [rsp + 0x38]	       503	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_15
0x400274a	            0x89ea	                            mov edx, ebp	       503	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_15
0x400274c	      0xe800000000	                          call 0x4002751	       503	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_15
0x4002751	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x4002756	             0x1c5	                            add ebp, eax	       504	ops.c	FUNCTION_7	ELSE_4	WHILE_1
0x4002758	           0xfb602	                   movzx eax, byte [rdx]	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x400275b	            0x3c20	                            cmp al, 0x20	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x400275d	            0x74e1	                            je 0x4002740	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x400275f	            0x3c09	                               cmp al, 9	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x4002761	            0x74dd	                            je 0x4002740	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x4002763	          0x4863cb	                         movsxd rcx, ebx	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x4002766	      0x448b44245c	            mov r8d, dword [rsp + 0x5c] 	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x400276b	      0x488b5c2450	            mov rbx, qword [rsp + 0x50] 	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x4002770	            0x89e8	                            mov eax, ebp	       514	ops.c	FUNCTION_7	ELSE_4
0x4002772	        0x412b4664	             sub eax, dword [r14 + 0x64]	       514	ops.c	FUNCTION_7	ELSE_4
0x4002776	      0x448b642440	           mov r12d, dword [rsp + 0x40] 	       524	ops.c	FUNCTION_7	ELSE_4	IF_11
0x400277b	            0x4898	                                    cdqe	       514	ops.c	FUNCTION_7	ELSE_4
0x400277d	          0x4839c8	                            cmp rax, rcx	       514	ops.c	FUNCTION_7	ELSE_4
0x4002780	        0x480f46c8	                         cmovbe rcx, rax	       514	ops.c	FUNCTION_7	ELSE_4
0x4002784	            0x29cd	                            sub ebp, ecx	       514	ops.c	FUNCTION_7	ELSE_4
0x4002786	          0x4585e4	                         test r12d, r12d	       524	ops.c	FUNCTION_7	ELSE_4	IF_11
0x4002789	            0x7405	                            je 0x4002790	       524	ops.c	FUNCTION_7	ELSE_4	IF_11
0x400278b	      0x442b44247c	             sub r8d, dword [rsp + 0x7c]	       525	ops.c	FUNCTION_7	ELSE_4	IF_11
0x4002790	          0x4439c5	                            cmp ebp, r8d	       526	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0x4002793	     0xf8e94010000	                           jle 0x400292d	       526	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0x4002799	      0x44896c2418	            mov dword [rsp + 0x18], r13d	       526	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0x400279e	          0x4589c5	                           mov r13d, r8d	       526	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0x40027a1	            0xeb14	                           jmp 0x40027b7	       526	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0x40027a3	       0xf1f440000	                   nop dword [rax + rax]	       526	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0x40027a8	          0x4801c3	                            add rbx, rax	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0x40027ab	          0x4439e5	                           cmp ebp, r12d	       526	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0x40027ae	          0x4589e5	                          mov r13d, r12d	       526	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0x40027b1	     0xf8e21010000	                           jle 0x40028d8	       526	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0x40027b7	          0x4489ea	                           mov edx, r13d	       531	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_16
0x40027ba	          0x4889de	                            mov rsi, rbx	       531	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_16
0x40027bd	          0x4889df	                            mov rdi, rbx	       531	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_16
0x40027c0	      0xe800000000	                          call 0x40027c5	       531	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_16
0x40027c5	        0x468d2428	                   lea r12d, [rax + r13]	       533	ops.c	FUNCTION_7	ELSE_4	WHILE_2	IF_12
0x40027c9	          0x4439e5	                           cmp ebp, r12d	       533	ops.c	FUNCTION_7	ELSE_4	WHILE_2	IF_12
0x40027cc	     0xf8c82000000	                            jl 0x4002854	       533	ops.c	FUNCTION_7	ELSE_4	WHILE_2	IF_12
0x40027d2	    0x448b1d000000	           mov r11d, dword [0x040027d9] 	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0x40027d9	      0xb801000000	                              mov eax, 1	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0x40027de	          0x4585db	                         test r11d, r11d	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0x40027e1	            0x74c5	                            je 0x40027a8	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0x40027e3	          0x4889df	                            mov rdi, rbx	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0x40027e6	    0xff1500000000	                 call qword [0x040027ec]	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0x40027ec	            0x4898	                                    cdqe	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0x40027ee	            0xebb8	                           jmp 0x40027a8	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0x40027f0	          0x4889fb	                            mov rbx, rdi	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x40027f3	          0x4189e8	                            mov r8d, ebp	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x40027f6	      0xe975ffffff	                           jmp 0x4002770	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x40027fb	       0xf1f440000	                   nop dword [rax + rax]	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x4002800	            0x31ff	                            xor edi, edi	       294	ops.c	FUNCTION_5	IF_8	IF_10	CALL_9
0x4002802	      0xbe00000000	                              mov esi, 0	       294	ops.c	FUNCTION_5	IF_8	IF_10	CALL_9
0x4002807	      0xe800000000	                          call 0x400280c	       294	ops.c	FUNCTION_5	IF_8	IF_10	CALL_9
0x400280c	    0x488b3d000000	            mov rdi, qword [0x04002813] 	        33	stdio2.h	FUNCTION_104	CALL_1
0x4002813	          0x4889c1	                            mov rcx, rax	        33	stdio2.h	FUNCTION_104	CALL_1
0x4002816	          0x4989e8	                             mov r8, rbp	        33	stdio2.h	FUNCTION_104	CALL_1
0x4002819	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_104	CALL_1
0x4002820	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_104	CALL_1
0x4002825	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_104	CALL_1
0x4002827	      0xe800000000	                          call 0x400282c	        33	stdio2.h	FUNCTION_104	CALL_1
0x400282c	      0xe951faffff	                           jmp 0x4002282	        33	stdio2.h	FUNCTION_104	CALL_1
0x4002831	    0x448b1d000000	           mov r11d, dword [0x04002838] 	       425	ops.c	FUNCTION_7	IF_3	IF_4	IF_5
0x4002838	          0x4585db	                         test r11d, r11d	       425	ops.c	FUNCTION_7	IF_3	IF_4	IF_5
0x400283b	     0xf85a3000000	                           jne 0x40028e4	       425	ops.c	FUNCTION_7	IF_3	IF_4	IF_5
0x4002841	      0x488b442450	            mov rax, qword [rsp + 0x50] 	       437	ops.c	FUNCTION_7	IF_3	IF_4	ELSE_2
0x4002846	        0x488d7801	                      lea rdi, [rax + 1]	       437	ops.c	FUNCTION_7	IF_3	IF_4	ELSE_2
0x400284a	      0x48897c2450	             mov qword [rsp + 0x50], rdi	       437	ops.c	FUNCTION_7	IF_3	IF_4	ELSE_2
0x400284f	      0xe9d2fbffff	                           jmp 0x4002426	       437	ops.c	FUNCTION_7	IF_3	IF_4	ELSE_2
0x4002854	          0x4589e8	                           mov r8d, r13d	       437	ops.c	FUNCTION_7	IF_3	IF_4	ELSE_2
0x4002857	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       437	ops.c	FUNCTION_7	IF_3	IF_4	ELSE_2
0x400285c	      0x448b6c2418	           mov r13d, dword [rsp + 0x18] 	       437	ops.c	FUNCTION_7	IF_3	IF_4	ELSE_2
0x4002861	          0x4589c4	                           mov r12d, r8d	       533	ops.c	FUNCTION_7	ELSE_4	WHILE_2	IF_12
0x4002864	      0x482b5c2420	             sub rbx, qword [rsp + 0x20]	       548	ops.c	FUNCTION_7	ELSE_4
0x4002869	          0x4429e5	                           sub ebp, r12d	       542	ops.c	FUNCTION_7	ELSE_4
0x400286c	          0x4889d7	                            mov rdi, rdx	       550	ops.c	FUNCTION_7	ELSE_4	CALL_18
0x400286f	      0xe800000000	                          call 0x4002874	       550	ops.c	FUNCTION_7	ELSE_4	CALL_18
0x4002874	        0x8d7c0501	                lea edi, [rbp + rax + 1]	       552	ops.c	FUNCTION_7	ELSE_4	CALL_19
0x4002878	             0x1df	                            add edi, ebx	       552	ops.c	FUNCTION_7	ELSE_4	CALL_19
0x400287a	      0xe800000000	                          call 0x400287f	       552	ops.c	FUNCTION_7	ELSE_4	CALL_19
0x400287f	          0x4885c0	                           test rax, rax	       553	ops.c	FUNCTION_7	ELSE_4	IF_13
0x4002882	          0x4989c4	                            mov r12, rax	       552	ops.c	FUNCTION_7	ELSE_4	CALL_19
0x4002885	     0xf842bf9ffff	                            je 0x40021b6	       553	ops.c	FUNCTION_7	ELSE_4	IF_13
0x400288b	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	        59	string3.h	FUNCTION_93	CALL_3
0x4002890	          0x4889da	                            mov rdx, rbx	        59	string3.h	FUNCTION_93	CALL_3
0x4002893	          0x4889c7	                            mov rdi, rax	        59	string3.h	FUNCTION_93	CALL_3
0x4002896	      0xe800000000	                          call 0x400289b	        59	string3.h	FUNCTION_93	CALL_3
0x400289b	        0x498d3c1c	                    lea rdi, [r12 + rbx]	        90	string3.h	FUNCTION_95	CALL_6
0x400289f	          0x4889ea	                            mov rdx, rbp	        90	string3.h	FUNCTION_95	CALL_6
0x40028a2	      0xbe20000000	                           mov esi, 0x20	        90	string3.h	FUNCTION_95	CALL_6
0x40028a7	          0x4801dd	                            add rbp, rbx	        59	string3.h	FUNCTION_93	CALL_3
0x40028aa	      0xe800000000	                          call 0x40028af	        90	string3.h	FUNCTION_95	CALL_6
0x40028af	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0x40028b4	          0x4889f7	                            mov rdi, rsi	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0x40028b7	      0x4889742418	             mov qword [rsp + 0x18], rsi	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0x40028bc	      0xe800000000	                          call 0x40028c1	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0x40028c1	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	        59	string3.h	FUNCTION_93	CALL_3
0x40028c6	        0x488d5001	                      lea rdx, [rax + 1]	        59	string3.h	FUNCTION_93	CALL_3
0x40028ca	        0x498d3c2c	                    lea rdi, [r12 + rbp]	        59	string3.h	FUNCTION_93	CALL_3
0x40028ce	      0xe800000000	                          call 0x40028d3	        59	string3.h	FUNCTION_93	CALL_3
0x40028d3	      0xe97afcffff	                           jmp 0x4002552	        59	string3.h	FUNCTION_93	CALL_3
0x40028d8	      0x448b6c2418	           mov r13d, dword [rsp + 0x18] 	        59	string3.h	FUNCTION_93	CALL_3
0x40028dd	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	        59	string3.h	FUNCTION_93	CALL_3
0x40028e2	            0xeb80	                           jmp 0x4002864	        59	string3.h	FUNCTION_93	CALL_3
0x40028e4	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	       427	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	IF_6
0x40028e9	    0xff1500000000	                 call qword [0x040028ef]	       427	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	IF_6
0x40028ef	          0x83f801	                              cmp eax, 1	       427	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	IF_6
0x40028f2	     0xf8449ffffff	                            je 0x4002841	       427	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	IF_6
0x40028f8	    0xc74424400000	               mov dword [rsp + 0x40], 0	       432	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	ELSE_1
0x4002900	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	       432	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	ELSE_1
0x4002905	          0x4531e4	                          xor r12d, r12d	       431	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	ELSE_1
0x4002908	      0xe919fbffff	                           jmp 0x4002426	       431	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	ELSE_1
0x400290d	        0x894c2418	             mov dword [rsp + 0x18], ecx	       431	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	ELSE_1
0x4002911	    0xff1500000000	                 call qword [0x04002917]	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x4002917	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x400291c	            0x4898	                                    cdqe	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x400291e	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x4002923	      0x48634c2418	         movsxd rcx, dword [rsp + 0x18] 	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x4002928	      0xe9ecfdffff	                           jmp 0x4002719	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x400292d	          0x4589c4	                           mov r12d, r8d	       526	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0x4002930	      0xe92fffffff	                           jmp 0x4002864	       526	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0x4002935	      0xe800000000	                          call 0x400293a	       318	ops.c	FUNCTION_5
0x400293a	          0x8b1424	                    mov edx, dword [rsp]	       343	ops.c	FUNCTION_6	IF_1	IF_3
0x400293d	      0xe951f8ffff	                           jmp 0x4002193	       343	ops.c	FUNCTION_6	IF_1	IF_3
format_lines	SWITCH,0:DO,0:ELSE,8:functions,0:FOR,1:IF,25:WHILE,1:CALL,34	580
0x4006c50	            0x4157	                                push r15	      4960	ops.c	FUNCTION_60
0x4006c52	            0x4156	                                push r14	      4960	ops.c	FUNCTION_60
0x4006c54	            0x4155	                                push r13	      4960	ops.c	FUNCTION_60
0x4006c56	            0x4154	                                push r12	      4960	ops.c	FUNCTION_60
0x4006c58	              0x55	                                push rbp	      4960	ops.c	FUNCTION_60
0x4006c59	              0x53	                                push rbx	      4960	ops.c	FUNCTION_60
0x4006c5a	        0x4883ec78	                           sub rsp, 0x78	      4960	ops.c	FUNCTION_60
0x4006c5e	    0x64488b042528	                mov rax, qword fs:[0x28]	      4960	ops.c	FUNCTION_60
0x4006c67	      0x4889442468	             mov qword [rsp + 0x68], rax	      4960	ops.c	FUNCTION_60
0x4006c6c	            0x31c0	                            xor eax, eax	      4960	ops.c	FUNCTION_60
0x4006c6e	    0x8b0500000000	            mov eax, dword [0x04006c74] 	      4986	ops.c	FUNCTION_60
0x4006c74	        0x48893c24	                    mov qword [rsp], rdi	      4960	ops.c	FUNCTION_60
0x4006c78	      0xbf01000000	                              mov edi, 1	      4989	ops.c	FUNCTION_60	CALL_1
0x4006c7d	        0x89742438	             mov dword [rsp + 0x38], esi	      4960	ops.c	FUNCTION_60
0x4006c81	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4970	ops.c	FUNCTION_60
0x4006c8a	        0x89442434	             mov dword [rsp + 0x34], eax	      4986	ops.c	FUNCTION_60
0x4006c8e	      0xe800000000	                          call 0x4006c93	      4989	ops.c	FUNCTION_60	CALL_1
0x4006c93	          0x8d0440	                  lea eax, [rax + rax*2]	      4989	ops.c	FUNCTION_60	CALL_1
0x4006c96	      0xbf71000000	                           mov edi, 0x71	      4993	ops.c	FUNCTION_60	CALL_2
0x4006c9b	        0x8944243c	             mov dword [rsp + 0x3c], eax	      4989	ops.c	FUNCTION_60	CALL_1
0x4006c9f	      0xe800000000	                          call 0x4006ca4	      4993	ops.c	FUNCTION_60	CALL_2
0x4006ca4	      0xbf32000000	                           mov edi, 0x32	      4995	ops.c	FUNCTION_60	CALL_3
0x4006ca9	          0x4189c7	                           mov r15d, eax	      4993	ops.c	FUNCTION_60	CALL_2
0x4006cac	        0x89442418	             mov dword [rsp + 0x18], eax	      4993	ops.c	FUNCTION_60	CALL_2
0x4006cb0	      0xe800000000	                          call 0x4006cb5	      4995	ops.c	FUNCTION_60	CALL_3
0x4006cb5	      0xbf6e000000	                           mov edi, 0x6e	      4996	ops.c	FUNCTION_60	CALL_4
0x4006cba	        0x8944244c	             mov dword [rsp + 0x4c], eax	      4995	ops.c	FUNCTION_60	CALL_3
0x4006cbe	      0xe800000000	                          call 0x4006cc3	      4996	ops.c	FUNCTION_60	CALL_4
0x4006cc3	      0xbf77000000	                           mov edi, 0x77	      4997	ops.c	FUNCTION_60	CALL_5
0x4006cc8	        0x89442428	             mov dword [rsp + 0x28], eax	      4996	ops.c	FUNCTION_60	CALL_4
0x4006ccc	      0xe800000000	                          call 0x4006cd1	      4997	ops.c	FUNCTION_60	CALL_5
0x4006cd1	            0x89c5	                            mov ebp, eax	      4997	ops.c	FUNCTION_60	CALL_5
0x4006cd3	    0x488b05000000	            mov rax, qword [0x04006cda] 	      5002	ops.c	FUNCTION_60	IF_1
0x4006cda	        0x488b5838	            mov rbx, qword [rax + 0x38] 	      5002	ops.c	FUNCTION_60	IF_1
0x4006cde	        0x4883fb01	                              cmp rbx, 1	      5002	ops.c	FUNCTION_60	IF_1
0x4006ce2	     0xf8e09080000	                           jle 0x40074f1	      5002	ops.c	FUNCTION_60	IF_1
0x4006ce8	        0x4883eb01	                              sub rbx, 1	      5003	ops.c	FUNCTION_60	IF_1	CALL_6
0x4006cec	          0x4889df	                            mov rdi, rbx	      5262	ops.c	FUNCTION_62	CALL_1
0x4006cef	      0xe800000000	                          call 0x4006cf4	      5262	ops.c	FUNCTION_62	CALL_1
0x4006cf4	          0x4585ff	                         test r15d, r15d	      5263	ops.c	FUNCTION_62	IF_1
0x4006cf7	          0x4989c5	                            mov r13, rax	      5262	ops.c	FUNCTION_62	CALL_1
0x4006cfa	     0xf8588060000	                           jne 0x4007388	      5263	ops.c	FUNCTION_62	IF_1
0x4006d00	          0x4c89ef	                            mov rdi, r13	      5278	ops.c	FUNCTION_62	CALL_3
0x4006d03	      0xe800000000	                          call 0x4006d08	      5278	ops.c	FUNCTION_62	CALL_3
0x4006d08	          0x803800	                       cmp byte [rax], 0	      5280	ops.c	FUNCTION_62	CALL_4
0x4006d0b	    0xc74424140000	               mov dword [rsp + 0x14], 0	      5266	ops.c	FUNCTION_62	ELSE_1
0x4006d13	     0xf8418080000	                            je 0x4007531	      5280	ops.c	FUNCTION_62	CALL_4
0x4006d19	            0x31d2	                            xor edx, edx	      5280	ops.c	FUNCTION_62	CALL_4
0x4006d1b	            0x31f6	                            xor esi, esi	      5280	ops.c	FUNCTION_62	CALL_4
0x4006d1d	          0x4889df	                            mov rdi, rbx	      5280	ops.c	FUNCTION_62	CALL_4
0x4006d20	      0xe800000000	                          call 0x4006d25	      5280	ops.c	FUNCTION_62	CALL_4
0x4006d25	          0x4531ff	                          xor r15d, r15d	      5280	ops.c	FUNCTION_62	CALL_4
0x4006d28	            0x85c0	                           test eax, eax	      5280	ops.c	FUNCTION_62	CALL_4
0x4006d2a	    0x488b05000000	            mov rax, qword [0x04006d31] 	      5280	ops.c	FUNCTION_62	CALL_4
0x4006d31	        0x410f95c7	                              setne r15b	      5280	ops.c	FUNCTION_62	CALL_4
0x4006d35	        0x488b5838	            mov rbx, qword [rax + 0x38] 	      5280	ops.c	FUNCTION_62	CALL_4
0x4006d39	          0x4889df	                            mov rdi, rbx	      5262	ops.c	FUNCTION_62	CALL_1
0x4006d3c	          0x4531e4	                          xor r12d, r12d	      5266	ops.c	FUNCTION_62	ELSE_1
0x4006d3f	      0xe800000000	                          call 0x4006d44	      5262	ops.c	FUNCTION_62	CALL_1
0x4006d44	        0x8b542418	            mov edx, dword [rsp + 0x18] 	      5263	ops.c	FUNCTION_62	IF_1
0x4006d48	          0x4989c6	                            mov r14, rax	      5262	ops.c	FUNCTION_62	CALL_1
0x4006d4b	            0x31c0	                            xor eax, eax	      5263	ops.c	FUNCTION_62	IF_1
0x4006d4d	            0x85d2	                           test edx, edx	      5263	ops.c	FUNCTION_62	IF_1
0x4006d4f	     0xf85af060000	                           jne 0x4007404	      5263	ops.c	FUNCTION_62	IF_1
0x4006d55	        0x498d3c06	                    lea rdi, [r14 + rax]	      5278	ops.c	FUNCTION_62	CALL_3
0x4006d59	      0xe800000000	                          call 0x4006d5e	      5278	ops.c	FUNCTION_62	CALL_3
0x4006d5e	          0x803800	                       cmp byte [rax], 0	      5280	ops.c	FUNCTION_62	CALL_4
0x4006d61	     0xf8513070000	                           jne 0x400747a	      5280	ops.c	FUNCTION_62	CALL_4
0x4006d67	            0x85ed	                           test ebp, ebp	      5016	ops.c	FUNCTION_60	IF_2
0x4006d69	    0x41bd01000000	                             mov r13d, 1	      5016	ops.c	FUNCTION_60	IF_2
0x4006d6f	      0xbb01000000	                              mov ebx, 1	      5015	ops.c	FUNCTION_60
0x4006d74	       0xf95442433	                 setne byte [rsp + 0x33]	      5016	ops.c	FUNCTION_60	IF_2
0x4006d79	    0x488b05000000	            mov rax, qword [0x04006d80] 	      5019	ops.c	FUNCTION_60
0x4006d80	        0x488b2c24	                    mov rbp, qword [rsp]	      5020	ops.c	FUNCTION_60	FOR_1
0x4006d84	      0x4883683801	               sub qword [rax + 0x38], 1	      5019	ops.c	FUNCTION_60
0x4006d89	          0x4885ed	                           test rbp, rbp	      5020	ops.c	FUNCTION_60	FOR_1
0x4006d8c	     0xf8436030000	                            je 0x40070c8	      5020	ops.c	FUNCTION_60	FOR_1
0x4006d92	    0x8b0500000000	            mov eax, dword [0x04006d98] 	      5020	ops.c	FUNCTION_60	FOR_1
0x4006d98	            0x85c0	                           test eax, eax	      5020	ops.c	FUNCTION_60	FOR_1
0x4006d9a	     0xf8528030000	                           jne 0x40070c8	      5020	ops.c	FUNCTION_60	FOR_1
0x4006da0	      0x486344243c	         movsxd rax, dword [rsp + 0x3c] 	      5020	ops.c	FUNCTION_60	FOR_1
0x4006da5	    0xc74424100000	               mov dword [rsp + 0x10], 0	      5020	ops.c	FUNCTION_60	FOR_1
0x4006dad	    0x41be01000000	                             mov r14d, 1	      5020	ops.c	FUNCTION_60	FOR_1
0x4006db3	    0xc744242c0100	               mov dword [rsp + 0x2c], 1	      5020	ops.c	FUNCTION_60	FOR_1
0x4006dbb	    0xc744240c0100	                mov dword [rsp + 0xc], 1	      5020	ops.c	FUNCTION_60	FOR_1
0x4006dc3	    0xc7442424ffff	     mov dword [rsp + 0x24], 0xffffffff 	      5020	ops.c	FUNCTION_60	FOR_1
0x4006dcb	    0xc74424480000	               mov dword [rsp + 0x48], 0	      5020	ops.c	FUNCTION_60	FOR_1
0x4006dd3	    0xc74424200000	               mov dword [rsp + 0x20], 0	      5020	ops.c	FUNCTION_60	FOR_1
0x4006ddb	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      5020	ops.c	FUNCTION_60	FOR_1
0x4006de3	      0x4889442440	             mov qword [rsp + 0x40], rax	      5020	ops.c	FUNCTION_60	FOR_1
0x4006de8	        0x8b44244c	            mov eax, dword [rsp + 0x4c] 	      5079	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x4006dec	         0xb442428	              or eax, dword [rsp + 0x28]	      5079	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x4006df0	        0x8944243c	             mov dword [rsp + 0x3c], eax	      5079	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x4006df4	            0xeb58	                           jmp 0x4006e4e	      5079	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x4006df6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5079	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x4006e00	    0x48c744246000	               mov qword [rsp + 0x60], 0	      5044	ops.c	FUNCTION_60	FOR_1	IF_4
0x4006e09	          0x4531e4	                          xor r12d, r12d	      5043	ops.c	FUNCTION_60	FOR_1	IF_4
0x4006e0c	    0x41bd01000000	                             mov r13d, 1	      5041	ops.c	FUNCTION_60	FOR_1	IF_4
0x4006e12	      0xbb01000000	                              mov ebx, 1	      5059	ops.c	FUNCTION_60	FOR_1
0x4006e17	          0x4585ff	                         test r15d, r15d	      5066	ops.c	FUNCTION_60	FOR_1	IF_7
0x4006e1a	     0xf8428010000	                            je 0x4006f48	      5066	ops.c	FUNCTION_60	FOR_1	IF_7
0x4006e20	      0x48833c2400	                      cmp qword [rsp], 0	      5068	ops.c	FUNCTION_60	FOR_1	IF_7	IF_8
0x4006e25	     0xf889d020000	                            js 0x40070c8	      5068	ops.c	FUNCTION_60	FOR_1	IF_7	IF_8
0x4006e2b	    0x41be01000000	                             mov r14d, 1	      5058	ops.c	FUNCTION_60	FOR_1
0x4006e31	      0xe800000000	                          call 0x4006e36	      5222	ops.c	FUNCTION_60	FOR_1	CALL_34
0x4006e36	        0x4883ed01	                              sub rbp, 1	      5020	ops.c	FUNCTION_60	FOR_1
0x4006e3a	     0xf8488020000	                            je 0x40070c8	      5020	ops.c	FUNCTION_60	FOR_1
0x4006e40	    0x8b0500000000	            mov eax, dword [0x04006e46] 	      5020	ops.c	FUNCTION_60	FOR_1
0x4006e46	            0x85c0	                           test eax, eax	      5020	ops.c	FUNCTION_60	FOR_1
0x4006e48	     0xf857a020000	                           jne 0x40070c8	      5020	ops.c	FUNCTION_60	FOR_1
0x4006e4e	          0x4585f6	                         test r14d, r14d	      5025	ops.c	FUNCTION_60	FOR_1	IF_3
0x4006e51	            0x7422	                            je 0x4006e75	      5025	ops.c	FUNCTION_60	FOR_1	IF_3
0x4006e53	    0x488b05000000	            mov rax, qword [0x04006e5a] 	      5027	ops.c	FUNCTION_60	FOR_1	IF_3
0x4006e5a	      0x4489642414	            mov dword [rsp + 0x14], r12d	      5032	ops.c	FUNCTION_60	FOR_1	IF_3
0x4006e5f	          0x4589ef	                          mov r15d, r13d	      5032	ops.c	FUNCTION_60	FOR_1	IF_3
0x4006e62	        0x895c241c	             mov dword [rsp + 0x1c], ebx	      5032	ops.c	FUNCTION_60	FOR_1	IF_3
0x4006e66	      0x4883403801	               add qword [rax + 0x38], 1	      5027	ops.c	FUNCTION_60	FOR_1	IF_3
0x4006e6b	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      5032	ops.c	FUNCTION_60	FOR_1	IF_3
0x4006e70	      0x4889442458	             mov qword [rsp + 0x58], rax	      5032	ops.c	FUNCTION_60	FOR_1	IF_3
0x4006e75	        0x4883fd01	                              cmp rbp, 1	      5039	ops.c	FUNCTION_60	FOR_1	IF_4
0x4006e79	            0x7485	                            je 0x4006e00	      5039	ops.c	FUNCTION_60	FOR_1	IF_4
0x4006e7b	    0x488b05000000	            mov rax, qword [0x04006e82] 	      5039	ops.c	FUNCTION_60	FOR_1	IF_4
0x4006e82	        0x488b5838	            mov rbx, qword [rax + 0x38] 	      5039	ops.c	FUNCTION_60	FOR_1	IF_4
0x4006e86	    0x488b05000000	            mov rax, qword [0x04006e8d] 	      5039	ops.c	FUNCTION_60	FOR_1	IF_4
0x4006e8d	          0x483b18	                    cmp rbx, qword [rax]	      5039	ops.c	FUNCTION_60	FOR_1	IF_4
0x4006e90	     0xf846affffff	                            je 0x4006e00	      5039	ops.c	FUNCTION_60	FOR_1	IF_4
0x4006e96	        0x4883c301	                              add rbx, 1	      5049	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_9
0x4006e9a	          0x4531e4	                          xor r12d, r12d	      5266	ops.c	FUNCTION_62	ELSE_1
0x4006e9d	          0x4889df	                            mov rdi, rbx	      5262	ops.c	FUNCTION_62	CALL_1
0x4006ea0	      0xe800000000	                          call 0x4006ea5	      5262	ops.c	FUNCTION_62	CALL_1
0x4006ea5	          0x4989c6	                            mov r14, rax	      5262	ops.c	FUNCTION_62	CALL_1
0x4006ea8	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      5263	ops.c	FUNCTION_62	IF_1
0x4006eac	            0x31ff	                            xor edi, edi	      5263	ops.c	FUNCTION_62	IF_1
0x4006eae	            0x85c0	                           test eax, eax	      5263	ops.c	FUNCTION_62	IF_1
0x4006eb0	     0xf853a030000	                           jne 0x40071f0	      5263	ops.c	FUNCTION_62	IF_1
0x4006eb6	          0x4c01f7	                            add rdi, r14	      5278	ops.c	FUNCTION_62	CALL_3
0x4006eb9	    0x41bd01000000	                             mov r13d, 1	      5280	ops.c	FUNCTION_62	CALL_4
0x4006ebf	      0xe800000000	                          call 0x4006ec4	      5278	ops.c	FUNCTION_62	CALL_3
0x4006ec4	          0x803800	                       cmp byte [rax], 0	      5280	ops.c	FUNCTION_62	CALL_4
0x4006ec7	     0xf8595030000	                           jne 0x4007262	      5280	ops.c	FUNCTION_62	CALL_4
0x4006ecd	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      5054	ops.c	FUNCTION_60	FOR_1	ELSE_2	IF_5
0x4006ed1	            0x85c0	                           test eax, eax	      5054	ops.c	FUNCTION_60	FOR_1	ELSE_2	IF_5
0x4006ed3	     0xf85aa030000	                           jne 0x4007283	      5054	ops.c	FUNCTION_60	FOR_1	ELSE_2	IF_5
0x4006ed9	          0x4489fb	                           mov ebx, r15d	      5059	ops.c	FUNCTION_60	FOR_1
0x4006edc	          0x4409eb	                            or ebx, r13d	      5059	ops.c	FUNCTION_60	FOR_1
0x4006edf	         0xb5c2420	              or ebx, dword [rsp + 0x20]	      5059	ops.c	FUNCTION_60	FOR_1
0x4006ee3	          0xf6c301	                              test bl, 1	      5060	ops.c	FUNCTION_60	FOR_1	IF_6
0x4006ee6	     0xf852bffffff	                           jne 0x4006e17	      5060	ops.c	FUNCTION_60	FOR_1	IF_6
0x4006eec	      0x807c243300	                cmp byte [rsp + 0x33], 0	      5060	ops.c	FUNCTION_60	FOR_1	IF_6
0x4006ef1	     0xf8420ffffff	                            je 0x4006e17	      5060	ops.c	FUNCTION_60	FOR_1	IF_6
0x4006ef7	    0x488b05000000	            mov rax, qword [0x04006efe] 	      5061	ops.c	FUNCTION_60	FOR_1	CALL_11
0x4006efe	      0xbb01000000	                              mov ebx, 1	      5235	ops.c	FUNCTION_61	IF_1
0x4006f03	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      5232	ops.c	FUNCTION_61	CALL_1
0x4006f07	      0xe800000000	                          call 0x4006f0c	      5232	ops.c	FUNCTION_61	CALL_1
0x4006f0c	          0x803800	                       cmp byte [rax], 0	      5235	ops.c	FUNCTION_61	IF_1
0x4006f0f	          0x4989c6	                            mov r14, rax	      5232	ops.c	FUNCTION_61	CALL_1
0x4006f12	     0xf84fffeffff	                            je 0x4006e17	      5235	ops.c	FUNCTION_61	IF_1
0x4006f18	          0x4889c7	                            mov rdi, rax	      5239	ops.c	FUNCTION_61	CALL_2
0x4006f1b	      0xe800000000	                          call 0x4006f20	      5239	ops.c	FUNCTION_61	CALL_2
0x4006f20	    0x410fb64406ff	         movzx eax, byte [r14 + rax - 1]	      5240	ops.c	FUNCTION_61	CALL_3
0x4006f26	            0x3c20	                            cmp al, 0x20	      5240	ops.c	FUNCTION_61	CALL_3
0x4006f28	           0xf94c3	                                 sete bl	      5240	ops.c	FUNCTION_61	CALL_3
0x4006f2b	            0x3c09	                               cmp al, 9	      5240	ops.c	FUNCTION_61	CALL_3
0x4006f2d	           0xf94c0	                                 sete al	      5240	ops.c	FUNCTION_61	CALL_3
0x4006f30	             0x9c3	                             or ebx, eax	      5240	ops.c	FUNCTION_61	CALL_3
0x4006f32	          0x83f301	                              xor ebx, 1	      5240	ops.c	FUNCTION_61	CALL_3
0x4006f35	          0x4585ff	                         test r15d, r15d	      5066	ops.c	FUNCTION_60	FOR_1	IF_7
0x4006f38	           0xfb6db	                           movzx ebx, bl	      5066	ops.c	FUNCTION_60	FOR_1	IF_7
0x4006f3b	     0xf85dffeffff	                           jne 0x4006e20	      5066	ops.c	FUNCTION_60	FOR_1	IF_7
0x4006f41	     0xf1f80000000	                         nop dword [rax]	      5066	ops.c	FUNCTION_60	FOR_1	IF_7
0x4006f48	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      5077	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x4006f4c	            0x85c0	                           test eax, eax	      5077	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x4006f4e	     0xf84cc010000	                            je 0x4007120	      5077	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x4006f54	        0x8b44243c	            mov eax, dword [rsp + 0x3c] 	      5079	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x4006f58	            0x85c0	                           test eax, eax	      5079	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x4006f5a	     0xf84c0010000	                            je 0x4007120	      5079	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x4006f60	      0xf644241c01	               test byte [rsp + 0x1c], 1	      5079	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x4006f65	     0xf84b5010000	                            je 0x4007120	      5079	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x4006f6b	    0x488b05000000	            mov rax, qword [0x04006f72] 	      5080	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x4006f72	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      5080	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x4006f76	    0x488b05000000	            mov rax, qword [0x04006f7d] 	      5080	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x4006f7d	          0x483b38	                    cmp rdi, qword [rax]	      5080	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x4006f80	     0xf8db5010000	                           jge 0x400713b	      5080	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0x4006f86	      0x448b74244c	           mov r14d, dword [rsp + 0x4c] 	      5082	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x4006f8b	          0x4585f6	                         test r14d, r14d	      5082	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x4006f8e	     0xf8570050000	                           jne 0x4007504	      5082	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x4006f94	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      5100	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12
0x4006f98	            0x85c0	                           test eax, eax	      5100	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12
0x4006f9a	     0xf8560010000	                           jne 0x4007100	      5100	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12
0x4006fa0	      0x448b542414	           mov r10d, dword [rsp + 0x14] 	      4762	ops.c	FUNCTION_56	IF_1
0x4006fa5	          0x4585d2	                         test r10d, r10d	      4762	ops.c	FUNCTION_56	IF_1
0x4006fa8	     0xf85a2030000	                           jne 0x4007350	      4762	ops.c	FUNCTION_56	IF_1
0x4006fae	            0x31c0	                            xor eax, eax	      4763	ops.c	FUNCTION_56	IF_1
0x4006fb0	          0x4585e4	                         test r12d, r12d	      4763	ops.c	FUNCTION_56	IF_1
0x4006fb3	           0xf94c0	                                 sete al	      4763	ops.c	FUNCTION_56	IF_1
0x4006fb6	            0x85c0	                           test eax, eax	      5132	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14
0x4006fb8	      0xb801000000	                              mov eax, 1	      5132	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14
0x4006fbd	           0xf44d8	                          cmove ebx, eax	      5132	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14
0x4006fc0	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      5138	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4006fc4	             0x9d8	                             or eax, ebx	      5138	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4006fc6	     0xf8480010000	                            je 0x400714c	      5138	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4006fcc	      0x448b4c242c	            mov r9d, dword [rsp + 0x2c] 	      5140	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	IF_16
0x4006fd1	          0x4585c9	                           test r9d, r9d	      5140	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	IF_16
0x4006fd4	     0xf855e030000	                           jne 0x4007338	      5140	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	IF_16
0x4006fda	      0xbfffffff7f	                     mov edi, 0x7fffffff	      5147	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_19
0x4006fdf	    0xc70500000000	               mov dword [0x04006fe9], 1	      5146	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4006fe9	      0xe800000000	                          call 0x4006fee	      5147	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_19
0x4006fee	    0x488b05000000	            mov rax, qword [0x04006ff5] 	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x4006ff5	        0x448b4040	            mov r8d, dword [rax + 0x40] 	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x4006ff9	          0x4585c0	                           test r8d, r8d	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x4006ffc	            0x7515	                           jne 0x4007013	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x4006ffe	            0xeb23	                           jmp 0x4007023	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x4007000	      0xe800000000	                          call 0x4007005	      5149	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_22
0x4007005	    0x488b05000000	            mov rax, qword [0x0400700c] 	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x400700c	          0x8b7040	            mov esi, dword [rax + 0x40] 	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x400700f	            0x85f6	                           test esi, esi	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x4007011	            0x7410	                            je 0x4007023	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x4007013	      0xe800000000	                          call 0x4007018	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x4007018	            0x89c7	                            mov edi, eax	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x400701a	      0xe800000000	                          call 0x400701f	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x400701f	            0x85c0	                           test eax, eax	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x4007021	            0x75dd	                           jne 0x4007000	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0x4007023	        0x8b7c2418	            mov edi, dword [rsp + 0x18] 	      5157	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4007027	    0x448b35000000	           mov r14d, dword [0x0400702e] 	      5153	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400702e	    0xc70500000000	           mov dword [0x04007038], 0x10 	      5152	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4007038	    0xc70500000000	               mov dword [0x04007042], 0	      5154	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4007042	            0x85ff	                           test edi, edi	      5157	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4007044	     0xf858e020000	                           jne 0x40072d8	      5157	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400704a	      0xb809000000	                              mov eax, 9	      5157	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400704f	      0xbe01000000	                              mov esi, 1	      5157	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4007054	        0x8b4c2438	            mov ecx, dword [rsp + 0x38] 	      5161	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4007058	        0x8b542424	            mov edx, dword [rsp + 0x24] 	      5155	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_23
0x400705c	            0x85c9	                           test ecx, ecx	      5161	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400705e	           0xf45f0	                         cmovne esi, eax	      5161	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4007061	            0x31ff	                            xor edi, edi	      5155	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_23
0x4007063	      0xe800000000	                          call 0x4007068	      5155	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_23
0x4007068	        0x8b442434	            mov eax, dword [rsp + 0x34] 	      5162	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400706c	            0x85db	                           test ebx, ebx	      5167	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	IF_17
0x400706e	    0x448935000000	           mov dword [0x04007075], r14d 	      5163	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4007075	    0x890500000000	            mov dword [0x0400707b], eax 	      5162	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400707b	     0xf843f020000	                            je 0x40072c0	      5167	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	IF_17
0x4007081	      0x48833c2400	                      cmp qword [rsp], 0	      5171	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	IF_17	IF_18
0x4007086	            0x7840	                            js 0x40070c8	      5171	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	IF_17	IF_18
0x4007088	    0xc74424100000	               mov dword [rsp + 0x10], 0	      5171	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	IF_17	IF_18
0x4007090	    0xc744242c0100	               mov dword [rsp + 0x2c], 1	      5171	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	IF_17	IF_18
0x4007098	    0x41be01000000	                             mov r14d, 1	      5058	ops.c	FUNCTION_60	FOR_1
0x400709e	    0xc744240c0100	                mov dword [rsp + 0xc], 1	      5173	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	IF_17
0x40070a6	    0xc7442424ffff	     mov dword [rsp + 0x24], 0xffffffff 	      5164	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x40070ae	      0xbb01000000	                              mov ebx, 1	      5164	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x40070b3	      0xe800000000	                          call 0x40070b8	      5222	ops.c	FUNCTION_60	FOR_1	CALL_34
0x40070b8	        0x4883ed01	                              sub rbp, 1	      5020	ops.c	FUNCTION_60	FOR_1
0x40070bc	     0xf857efdffff	                           jne 0x4006e40	      5020	ops.c	FUNCTION_60	FOR_1
0x40070c2	    0x660f1f440000	                    nop word [rax + rax]	      5020	ops.c	FUNCTION_60	FOR_1
0x40070c8	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      5224	ops.c	FUNCTION_60
0x40070cd	    0x644833042528	                xor rax, qword fs:[0x28]	      5224	ops.c	FUNCTION_60
0x40070d6	     0xf85e7040000	                           jne 0x40075c3	      5224	ops.c	FUNCTION_60
0x40070dc	        0x4883c478	                           add rsp, 0x78	      5224	ops.c	FUNCTION_60
0x40070e0	              0x5b	                                 pop rbx	      5224	ops.c	FUNCTION_60
0x40070e1	              0x5d	                                 pop rbp	      5224	ops.c	FUNCTION_60
0x40070e2	            0x415c	                                 pop r12	      5224	ops.c	FUNCTION_60
0x40070e4	            0x415d	                                 pop r13	      5224	ops.c	FUNCTION_60
0x40070e6	            0x415e	                                 pop r14	      5224	ops.c	FUNCTION_60
0x40070e8	            0x415f	                                 pop r15	      5224	ops.c	FUNCTION_60
0x40070ea	              0xc3	                                     ret	      5224	ops.c	FUNCTION_60
0x40070eb	      0x448b5c2428	           mov r11d, dword [rsp + 0x28] 	      5100	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12
0x40070f0	          0x4585db	                         test r11d, r11d	      5100	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12
0x40070f3	            0x742b	                            je 0x4007120	      5100	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12
0x40070f5	    0x488b05000000	            mov rax, qword [0x040070fc] 	      5100	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12
0x40070fc	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      5100	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12
0x4007100	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      5103	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13
0x4007104	          0x4409e0	                            or eax, r12d	      5103	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13
0x4007107	     0xf8479040000	                            je 0x4007586	      5103	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13
0x400710d	      0xe800000000	                          call 0x4007112	      5114	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	ELSE_6
0x4007112	    0xc74424480100	               mov dword [rsp + 0x48], 1	      5116	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	ELSE_6
0x400711a	        0x89442424	             mov dword [rsp + 0x24], eax	      5114	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	ELSE_6
0x400711e	            0x6690	                                     nop	      5114	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	ELSE_6
0x4007120	    0x488b05000000	            mov rax, qword [0x04007127] 	      5125	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14
0x4007127	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      5125	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14
0x400712b	    0x488b05000000	            mov rax, qword [0x04007132] 	      5125	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14
0x4007132	          0x483b38	                    cmp rdi, qword [rax]	      5125	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14
0x4007135	     0xf8c65feffff	                            jl 0x4006fa0	      5125	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14
0x400713b	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      5138	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400713f	      0xbb01000000	                              mov ebx, 1	      5132	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14
0x4007144	             0x9d8	                             or eax, ebx	      5138	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4007146	     0xf8580feffff	                           jne 0x4006fcc	      5138	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x400714c	    0x488b05000000	            mov rax, qword [0x04007153] 	      5185	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x4007153	      0x4883403801	               add qword [rax + 0x38], 1	      5185	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x4007158	      0x48833c2400	                      cmp qword [rsp], 0	      5187	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_20	CALL_24
0x400715d	    0xc74040000000	               mov dword [rax + 0x40], 0	      5186	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x4007164	     0xf8806020000	                            js 0x4007370	      5187	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_20	CALL_24
0x400716a	          0x4585e4	                         test r12d, r12d	      5190	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21
0x400716d	     0xf8e8d010000	                           jle 0x4007300	      5190	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21
0x4007173	          0x4963fc	                        movsxd rdi, r12d	      5192	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_25
0x4007176	            0x31d2	                            xor edx, edx	      5192	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_25
0x4007178	            0x31f6	                            xor esi, esi	      5192	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_25
0x400717a	      0xe800000000	                          call 0x400717f	      5192	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_25
0x400717f	          0x4489e1	                           mov ecx, r12d	      5193	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_26
0x4007182	            0xf7d9	                                 neg ecx	      5193	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_26
0x4007184	          0x4863c9	                         movsxd rcx, ecx	      5193	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_26
0x4007187	    0x488b05000000	            mov rax, qword [0x0400718e] 	      5204	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_29
0x400718e	            0x31d2	                            xor edx, edx	      5204	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_29
0x4007190	            0x31f6	                            xor esi, esi	      5204	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_29
0x4007192	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      5204	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_29
0x4007196	      0xe800000000	                          call 0x400719b	      5204	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_29
0x400719b	    0x488b05000000	            mov rax, qword [0x040071a2] 	      5208	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x40071a2	      0xbf01000000	                              mov edi, 1	      5209	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_24	CALL_30
0x40071a7	      0x4883683801	               sub qword [rax + 0x38], 1	      5208	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x40071ac	      0xe80fecffff	           call sym.do_join.constprop.15	      5209	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_24	CALL_30
0x40071b1	            0x85c0	                           test eax, eax	      5209	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_24	CALL_30
0x40071b3	     0xf84a6030000	                            je 0x400755f	      5209	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_24	CALL_30
0x40071b9	      0xe800000000	                          call 0x40071be	      5216	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_25	CALL_33
0x40071be	          0x4889c7	                            mov rdi, rax	      5216	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_25	CALL_33
0x40071c1	      0xe800000000	                          call 0x40071c6	      5216	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_25	CALL_33
0x40071c6	      0x483b442440	            cmp rax, qword [rsp + 0x40] 	      5216	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_25	CALL_33
0x40071cb	    0xc744240c0000	                mov dword [rsp + 0xc], 0	      5214	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x40071d3	           0xf97c0	                                 seta al	      5214	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x40071d6	            0x31db	                            xor ebx, ebx	      5214	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x40071d8	          0x4531f6	                          xor r14d, r14d	      5184	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x40071db	           0xfb6c0	                           movzx eax, al	      5184	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x40071de	        0x89442410	             mov dword [rsp + 0x10], eax	      5184	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x40071e2	      0xe94afcffff	                           jmp 0x4006e31	      5184	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x40071e7	    0x660f1f840000	                    nop word [rax + rax]	      5184	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0x40071f0	      0x488d742460	                   lea rsi, [rsp + 0x60]	      5264	ops.c	FUNCTION_62	CALL_2
0x40071f5	            0x31d2	                            xor edx, edx	      5264	ops.c	FUNCTION_62	CALL_2
0x40071f7	      0xb901000000	                              mov ecx, 1	      5264	ops.c	FUNCTION_62	CALL_2
0x40071fc	          0x4c89f7	                            mov rdi, r14	      5264	ops.c	FUNCTION_62	CALL_2
0x40071ff	      0xe800000000	                          call 0x4007204	      5264	ops.c	FUNCTION_62	CALL_2
0x4007204	            0x85c0	                           test eax, eax	      5268	ops.c	FUNCTION_62	ELSE_1	IF_2
0x4007206	          0x4189c4	                           mov r12d, eax	      5264	ops.c	FUNCTION_62	CALL_2
0x4007209	     0xf8eac030000	                           jle 0x40075bb	      5268	ops.c	FUNCTION_62	ELSE_1	IF_2
0x400720f	      0x4c8b6c2460	            mov r13, qword [rsp + 0x60] 	      5273	ops.c	FUNCTION_62	ELSE_1	IF_2
0x4007214	      0x410fb64500	                   movzx eax, byte [r13]	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007219	            0x3c3a	                            cmp al, 0x3a	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x400721b	           0xf95c1	                                setne cl	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x400721e	            0x84c0	                             test al, al	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007220	           0xf95c2	                                setne dl	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007223	            0x84d1	                             test cl, dl	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007225	            0x7520	                           jne 0x4007247	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007227	            0xeb22	                           jmp 0x400724b	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007229	     0xf1f80000000	                         nop dword [rax]	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007230	        0x4983c501	                              add r13, 1	      5275	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007234	      0x410fb64500	                   movzx eax, byte [r13]	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007239	            0x84c0	                             test al, al	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x400723b	           0xf95c1	                                setne cl	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x400723e	            0x3c3a	                            cmp al, 0x3a	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007240	           0xf95c2	                                setne dl	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007243	            0x84d1	                             test cl, dl	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007245	            0x7404	                            je 0x400724b	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007247	            0x3c65	                            cmp al, 0x65	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007249	            0x75e5	                           jne 0x4007230	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x400724b	          0x4963fc	                        movsxd rdi, r12d	      5278	ops.c	FUNCTION_62	CALL_3
0x400724e	          0x4c01f7	                            add rdi, r14	      5278	ops.c	FUNCTION_62	CALL_3
0x4007251	      0xe800000000	                          call 0x4007256	      5278	ops.c	FUNCTION_62	CALL_3
0x4007256	          0x803800	                       cmp byte [rax], 0	      5280	ops.c	FUNCTION_62	CALL_4
0x4007259	            0x7455	                            je 0x40072b0	      5280	ops.c	FUNCTION_62	CALL_4
0x400725b	      0x41807d0065	                    cmp byte [r13], 0x65	      5279	ops.c	FUNCTION_62
0x4007260	            0x744e	                            je 0x40072b0	      5279	ops.c	FUNCTION_62
0x4007262	            0x31d2	                            xor edx, edx	      5280	ops.c	FUNCTION_62	CALL_4
0x4007264	            0x31f6	                            xor esi, esi	      5280	ops.c	FUNCTION_62	CALL_4
0x4007266	          0x4889df	                            mov rdi, rbx	      5280	ops.c	FUNCTION_62	CALL_4
0x4007269	      0xe800000000	                          call 0x400726e	      5280	ops.c	FUNCTION_62	CALL_4
0x400726e	          0x4531ed	                          xor r13d, r13d	      5280	ops.c	FUNCTION_62	CALL_4
0x4007271	            0x85c0	                           test eax, eax	      5280	ops.c	FUNCTION_62	CALL_4
0x4007273	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      5054	ops.c	FUNCTION_60	FOR_1	ELSE_2	IF_5
0x4007277	        0x410f95c5	                              setne r13b	      5280	ops.c	FUNCTION_62	CALL_4
0x400727b	            0x85c0	                           test eax, eax	      5054	ops.c	FUNCTION_60	FOR_1	ELSE_2	IF_5
0x400727d	     0xf8456fcffff	                            je 0x4006ed9	      5054	ops.c	FUNCTION_60	FOR_1	ELSE_2	IF_5
0x4007283	    0x488b05000000	            mov rax, qword [0x0400728a] 	      5056	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_10
0x400728a	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      5056	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_10
0x400728e	        0x4883c701	                              add rdi, 1	      5056	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_10
0x4007292	      0xe800000000	                          call 0x4007297	      5056	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_10
0x4007297	            0x85c0	                           test eax, eax	      5055	ops.c	FUNCTION_60	FOR_1	ELSE_2	IF_5
0x4007299	           0xf9fc0	                                 setg al	      5055	ops.c	FUNCTION_60	FOR_1	ELSE_2	IF_5
0x400729c	           0xfb6c0	                           movzx eax, al	      5055	ops.c	FUNCTION_60	FOR_1	ELSE_2	IF_5
0x400729f	        0x89442420	             mov dword [rsp + 0x20], eax	      5055	ops.c	FUNCTION_60	FOR_1	ELSE_2	IF_5
0x40072a3	      0xe931fcffff	                           jmp 0x4006ed9	      5055	ops.c	FUNCTION_60	FOR_1	ELSE_2	IF_5
0x40072a8	     0xf1f84000000	                   nop dword [rax + rax]	      5055	ops.c	FUNCTION_60	FOR_1	ELSE_2	IF_5
0x40072b0	    0x41bd01000000	                             mov r13d, 1	      5280	ops.c	FUNCTION_62	CALL_4
0x40072b6	      0xe912fcffff	                           jmp 0x4006ecd	      5280	ops.c	FUNCTION_62	CALL_4
0x40072bb	       0xf1f440000	                   nop dword [rax + rax]	      5280	ops.c	FUNCTION_62	CALL_4
0x40072c0	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      5280	ops.c	FUNCTION_62	CALL_4
0x40072c8	    0xc7442424ffff	     mov dword [rsp + 0x24], 0xffffffff 	      5164	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x40072d0	      0xe977feffff	                           jmp 0x400714c	      5164	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x40072d5	           0xf1f00	                         nop dword [rax]	      5164	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x40072d8	        0x8b742448	            mov esi, dword [rsp + 0x48] 	      5159	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x40072dc	          0x83fe01	                              cmp esi, 1	      5159	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x40072df	            0x19c0	                            sbb eax, eax	      5159	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x40072e1	          0x83e0f0	                     and eax, 0xfffffff0	      5159	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x40072e4	          0x83c01b	                           add eax, 0x1b	      5159	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x40072e7	          0x83fe01	                              cmp esi, 1	      5159	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x40072ea	            0x19f6	                            sbb esi, esi	      5159	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x40072ec	          0x83e6f0	                     and esi, 0xfffffff0	      5159	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x40072ef	          0x83c613	                           add esi, 0x13	      5159	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x40072f2	      0xe95dfdffff	                           jmp 0x4007054	      5159	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x40072f7	    0x660f1f840000	                    nop word [rax + rax]	      5159	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0x4007300	        0x8b542424	            mov edx, dword [rsp + 0x24] 	      5197	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22
0x4007304	            0x85d2	                           test edx, edx	      5197	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22
0x4007306	     0xf8e8ffeffff	                           jle 0x400719b	      5197	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22
0x400730c	      0xe800000000	                          call 0x4007311	      5199	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	CALL_27
0x4007311	            0x85c0	                           test eax, eax	      5201	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23
0x4007313	            0x89c3	                            mov ebx, eax	      5199	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	CALL_27
0x4007315	     0xf8e80feffff	                           jle 0x400719b	      5201	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23
0x400731b	          0x4863f8	                         movsxd rdi, eax	      5203	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_28
0x400731e	            0x31d2	                            xor edx, edx	      5203	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_28
0x4007320	            0x31f6	                            xor esi, esi	      5203	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_28
0x4007322	            0xf7db	                                 neg ebx	      5204	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_29
0x4007324	      0xe800000000	                          call 0x4007329	      5203	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_28
0x4007329	          0x4863cb	                         movsxd rcx, ebx	      5204	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_29
0x400732c	      0xe956feffff	                           jmp 0x4007187	      5204	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_29
0x4007331	     0xf1f80000000	                         nop dword [rax]	      5204	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_29
0x4007338	      0xe800000000	                          call 0x400733d	      5143	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_18
0x400733d	      0xbe01000000	                              mov esi, 1	      5143	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_18
0x4007342	            0x89c7	                            mov edi, eax	      5143	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_18
0x4007344	      0xe800000000	                          call 0x4007349	      5143	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_18
0x4007349	      0xe98cfcffff	                           jmp 0x4006fda	      5143	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_18
0x400734e	            0x6690	                                     nop	      5143	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_18
0x4007350	      0x4c8b442460	              mov r8, qword [rsp + 0x60]	      5143	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_18
0x4007355	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	      5143	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_18
0x400735a	          0x4489e1	                           mov ecx, r12d	      5143	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_18
0x400735d	        0x8b742414	            mov esi, dword [rsp + 0x14] 	      5143	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_18
0x4007361	      0xe89a9fffff	             call sym.same_leader.part.0	      5143	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_18
0x4007366	      0xe94bfcffff	                           jmp 0x4006fb6	      5143	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_18
0x400736b	       0xf1f440000	                   nop dword [rax + rax]	      5143	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_18
0x4007370	      0xe800000000	                          call 0x4007375	      5187	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_20	CALL_24
0x4007375	            0x85c0	                           test eax, eax	      5187	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_20	CALL_24
0x4007377	     0xf85edfdffff	                           jne 0x400716a	      5187	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_20	CALL_24
0x400737d	      0xe946fdffff	                           jmp 0x40070c8	      5187	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_20	CALL_24
0x4007382	    0x660f1f440000	                    nop word [rax + rax]	      5187	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_20	CALL_24
0x4007388	      0x488d742458	                   lea rsi, [rsp + 0x58]	      5264	ops.c	FUNCTION_62	CALL_2
0x400738d	            0x31d2	                            xor edx, edx	      5264	ops.c	FUNCTION_62	CALL_2
0x400738f	      0xb901000000	                              mov ecx, 1	      5264	ops.c	FUNCTION_62	CALL_2
0x4007394	          0x4c89ef	                            mov rdi, r13	      5264	ops.c	FUNCTION_62	CALL_2
0x4007397	      0xe800000000	                          call 0x400739c	      5264	ops.c	FUNCTION_62	CALL_2
0x400739c	            0x85c0	                           test eax, eax	      5268	ops.c	FUNCTION_62	ELSE_1	IF_2
0x400739e	        0x89442414	             mov dword [rsp + 0x14], eax	      5264	ops.c	FUNCTION_62	CALL_2
0x40073a2	     0xf8eec010000	                           jle 0x4007594	      5268	ops.c	FUNCTION_62	ELSE_1	IF_2
0x40073a8	      0x4c8b642458	            mov r12, qword [rsp + 0x58] 	      5273	ops.c	FUNCTION_62	ELSE_1	IF_2
0x40073ad	            0xeb09	                           jmp 0x40073b8	      5273	ops.c	FUNCTION_62	ELSE_1	IF_2
0x40073af	              0x90	                                     nop	      5273	ops.c	FUNCTION_62	ELSE_1	IF_2
0x40073b0	            0x3c65	                            cmp al, 0x65	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x40073b2	            0x7417	                            je 0x40073cb	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x40073b4	        0x4983c401	                              add r12, 1	      5275	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x40073b8	      0x410fb60424	                   movzx eax, byte [r12]	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x40073bd	            0x84c0	                             test al, al	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x40073bf	           0xf95c1	                                setne cl	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x40073c2	            0x3c3a	                            cmp al, 0x3a	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x40073c4	           0xf95c2	                                setne dl	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x40073c7	            0x84d1	                             test cl, dl	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x40073c9	            0x75e5	                           jne 0x40073b0	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x40073cb	      0x48637c2414	         movsxd rdi, dword [rsp + 0x14] 	      5278	ops.c	FUNCTION_62	CALL_3
0x40073d0	          0x4c01ef	                            add rdi, r13	      5278	ops.c	FUNCTION_62	CALL_3
0x40073d3	      0xe800000000	                          call 0x40073d8	      5278	ops.c	FUNCTION_62	CALL_3
0x40073d8	          0x803800	                       cmp byte [rax], 0	      5280	ops.c	FUNCTION_62	CALL_4
0x40073db	            0x740b	                            je 0x40073e8	      5280	ops.c	FUNCTION_62	CALL_4
0x40073dd	      0x41803c2465	                    cmp byte [r12], 0x65	      5279	ops.c	FUNCTION_62
0x40073e2	     0xf8531f9ffff	                           jne 0x4006d19	      5279	ops.c	FUNCTION_62
0x40073e8	    0x488b05000000	            mov rax, qword [0x040073ef] 	      5010	ops.c	FUNCTION_60	CALL_7
0x40073ef	    0x41bf01000000	                             mov r15d, 1	      5280	ops.c	FUNCTION_62	CALL_4
0x40073f5	        0x488b5838	            mov rbx, qword [rax + 0x38] 	      5010	ops.c	FUNCTION_60	CALL_7
0x40073f9	          0x4889df	                            mov rdi, rbx	      5262	ops.c	FUNCTION_62	CALL_1
0x40073fc	      0xe800000000	                          call 0x4007401	      5262	ops.c	FUNCTION_62	CALL_1
0x4007401	          0x4989c6	                            mov r14, rax	      5262	ops.c	FUNCTION_62	CALL_1
0x4007404	      0x488d742460	                   lea rsi, [rsp + 0x60]	      5264	ops.c	FUNCTION_62	CALL_2
0x4007409	            0x31d2	                            xor edx, edx	      5264	ops.c	FUNCTION_62	CALL_2
0x400740b	      0xb901000000	                              mov ecx, 1	      5264	ops.c	FUNCTION_62	CALL_2
0x4007410	          0x4c89f7	                            mov rdi, r14	      5264	ops.c	FUNCTION_62	CALL_2
0x4007413	      0xe800000000	                          call 0x4007418	      5264	ops.c	FUNCTION_62	CALL_2
0x4007418	            0x85c0	                           test eax, eax	      5268	ops.c	FUNCTION_62	ELSE_1	IF_2
0x400741a	          0x4189c4	                           mov r12d, eax	      5264	ops.c	FUNCTION_62	CALL_2
0x400741d	     0xf8ea5010000	                           jle 0x40075c8	      5268	ops.c	FUNCTION_62	ELSE_1	IF_2
0x4007423	      0x4c8b6c2460	            mov r13, qword [rsp + 0x60] 	      5273	ops.c	FUNCTION_62	ELSE_1	IF_2
0x4007428	      0x410fb64500	                   movzx eax, byte [r13]	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x400742d	            0x3c3a	                            cmp al, 0x3a	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x400742f	           0xf95c1	                                setne cl	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007432	            0x84c0	                             test al, al	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007434	           0xf95c2	                                setne dl	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007437	            0x84d1	                             test cl, dl	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007439	            0x751c	                           jne 0x4007457	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x400743b	            0xeb1e	                           jmp 0x400745b	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x400743d	           0xf1f00	                         nop dword [rax]	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007440	        0x4983c501	                              add r13, 1	      5275	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007444	      0x410fb64500	                   movzx eax, byte [r13]	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007449	            0x84c0	                             test al, al	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x400744b	           0xf95c1	                                setne cl	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x400744e	            0x3c3a	                            cmp al, 0x3a	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007450	           0xf95c2	                                setne dl	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007453	            0x84d1	                             test cl, dl	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007455	            0x7404	                            je 0x400745b	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007457	            0x3c65	                            cmp al, 0x65	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007459	            0x75e5	                           jne 0x4007440	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x400745b	          0x4963fc	                        movsxd rdi, r12d	      5278	ops.c	FUNCTION_62	CALL_3
0x400745e	          0x4c01f7	                            add rdi, r14	      5278	ops.c	FUNCTION_62	CALL_3
0x4007461	      0xe800000000	                          call 0x4007466	      5278	ops.c	FUNCTION_62	CALL_3
0x4007466	          0x803800	                       cmp byte [rax], 0	      5280	ops.c	FUNCTION_62	CALL_4
0x4007469	     0xf84f8f8ffff	                            je 0x4006d67	      5280	ops.c	FUNCTION_62	CALL_4
0x400746f	      0x41807d0065	                    cmp byte [r13], 0x65	      5279	ops.c	FUNCTION_62
0x4007474	     0xf84edf8ffff	                            je 0x4006d67	      5279	ops.c	FUNCTION_62
0x400747a	            0x31d2	                            xor edx, edx	      5280	ops.c	FUNCTION_62	CALL_4
0x400747c	            0x31f6	                            xor esi, esi	      5280	ops.c	FUNCTION_62	CALL_4
0x400747e	          0x4889df	                            mov rdi, rbx	      5280	ops.c	FUNCTION_62	CALL_4
0x4007481	      0xe800000000	                          call 0x4007486	      5280	ops.c	FUNCTION_62	CALL_4
0x4007486	            0x85c0	                           test eax, eax	      5280	ops.c	FUNCTION_62	CALL_4
0x4007488	     0xf85d9f8ffff	                           jne 0x4006d67	      5280	ops.c	FUNCTION_62	CALL_4
0x400748e	            0x85ed	                           test ebp, ebp	      5016	ops.c	FUNCTION_60	IF_2
0x4007490	          0x4489fa	                           mov edx, r15d	      5016	ops.c	FUNCTION_60	IF_2
0x4007493	           0xf95c0	                                setne al	      5016	ops.c	FUNCTION_60	IF_2
0x4007496	          0x83f201	                              xor edx, 1	      5016	ops.c	FUNCTION_60	IF_2
0x4007499	            0x89d6	                            mov esi, edx	      5016	ops.c	FUNCTION_60	IF_2
0x400749b	          0x4020c6	                             and sil, al	      5016	ops.c	FUNCTION_60	IF_2
0x400749e	      0x4088742433	              mov byte [rsp + 0x33], sil	      5016	ops.c	FUNCTION_60	IF_2
0x40074a3	     0xf8406010000	                            je 0x40075af	      5016	ops.c	FUNCTION_60	IF_2
0x40074a9	    0x488b05000000	            mov rax, qword [0x040074b0] 	      5017	ops.c	FUNCTION_60	CALL_8
0x40074b0	      0xbb01000000	                              mov ebx, 1	      5235	ops.c	FUNCTION_61	IF_1
0x40074b5	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      5232	ops.c	FUNCTION_61	CALL_1
0x40074b9	        0x4883ef01	                              sub rdi, 1	      5232	ops.c	FUNCTION_61	CALL_1
0x40074bd	      0xe800000000	                          call 0x40074c2	      5232	ops.c	FUNCTION_61	CALL_1
0x40074c2	          0x803800	                       cmp byte [rax], 0	      5235	ops.c	FUNCTION_61	IF_1
0x40074c5	          0x4889c5	                            mov rbp, rax	      5232	ops.c	FUNCTION_61	CALL_1
0x40074c8	            0x741f	                            je 0x40074e9	      5235	ops.c	FUNCTION_61	IF_1
0x40074ca	          0x4889c7	                            mov rdi, rax	      5239	ops.c	FUNCTION_61	CALL_2
0x40074cd	      0xe800000000	                          call 0x40074d2	      5239	ops.c	FUNCTION_61	CALL_2
0x40074d2	       0xfb64405ff	         movzx eax, byte [rbp + rax - 1]	      5240	ops.c	FUNCTION_61	CALL_3
0x40074d7	            0x3c20	                            cmp al, 0x20	      5240	ops.c	FUNCTION_61	CALL_3
0x40074d9	           0xf94c3	                                 sete bl	      5240	ops.c	FUNCTION_61	CALL_3
0x40074dc	            0x3c09	                               cmp al, 9	      5240	ops.c	FUNCTION_61	CALL_3
0x40074de	           0xf94c0	                                 sete al	      5240	ops.c	FUNCTION_61	CALL_3
0x40074e1	             0x9c3	                             or ebx, eax	      5240	ops.c	FUNCTION_61	CALL_3
0x40074e3	          0x83f301	                              xor ebx, 1	      5240	ops.c	FUNCTION_61	CALL_3
0x40074e6	           0xfb6db	                           movzx ebx, bl	      5240	ops.c	FUNCTION_61	CALL_3
0x40074e9	          0x4531ed	                          xor r13d, r13d	      5280	ops.c	FUNCTION_62	CALL_4
0x40074ec	      0xe988f8ffff	                           jmp 0x4006d79	      5280	ops.c	FUNCTION_62	CALL_4
0x40074f1	    0xc74424140000	               mov dword [rsp + 0x14], 0	      4968	ops.c	FUNCTION_60
0x40074f9	    0x41bf01000000	                             mov r15d, 1	      5009	ops.c	FUNCTION_60	ELSE_1
0x40074ff	      0xe935f8ffff	                           jmp 0x4006d39	      5009	ops.c	FUNCTION_60	ELSE_1
0x4007504	        0x4883c701	                              add rdi, 1	      5082	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x4007508	      0xe800000000	                          call 0x400750d	      5082	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x400750d	          0x803800	                       cmp byte [rax], 0	      5082	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x4007510	     0xf84d5fbffff	                            je 0x40070eb	      5082	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0x4007516	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      5085	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0x400751a	          0x4409e0	                            or eax, r12d	      5085	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0x400751d	            0x744a	                            je 0x4007569	      5085	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0x400751f	      0x4489642424	            mov dword [rsp + 0x24], r12d	      5085	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0x4007524	    0xc74424480100	               mov dword [rsp + 0x48], 1	      5096	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	ELSE_4
0x400752c	      0xe9effbffff	                           jmp 0x4007120	      5096	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	ELSE_4
0x4007531	    0x488b05000000	            mov rax, qword [0x04007538] 	      5096	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	ELSE_4
0x4007538	    0x41bf01000000	                             mov r15d, 1	      5280	ops.c	FUNCTION_62	CALL_4
0x400753e	          0x4531e4	                          xor r12d, r12d	      5266	ops.c	FUNCTION_62	ELSE_1
0x4007541	        0x488b5838	            mov rbx, qword [rax + 0x38] 	      5266	ops.c	FUNCTION_62	ELSE_1
0x4007545	          0x4889df	                            mov rdi, rbx	      5262	ops.c	FUNCTION_62	CALL_1
0x4007548	      0xe800000000	                          call 0x400754d	      5262	ops.c	FUNCTION_62	CALL_1
0x400754d	        0x8b742418	            mov esi, dword [rsp + 0x18] 	      5266	ops.c	FUNCTION_62	ELSE_1
0x4007551	          0x4989c6	                            mov r14, rax	      5262	ops.c	FUNCTION_62	CALL_1
0x4007554	            0x31c0	                            xor eax, eax	      5262	ops.c	FUNCTION_62	CALL_1
0x4007556	        0x89742414	             mov dword [rsp + 0x14], esi	      5266	ops.c	FUNCTION_62	ELSE_1
0x400755a	      0xe9f6f7ffff	                           jmp 0x4006d55	      5266	ops.c	FUNCTION_62	ELSE_1
0x400755f	      0xe800000000	                          call 0x4007564	      5211	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_24	CALL_31
0x4007564	      0xe95ffbffff	                           jmp 0x40070c8	      5212	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_24
0x4007569	    0x488b05000000	            mov rax, qword [0x04007570] 	      5090	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11	CALL_13
0x4007570	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      5089	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0x4007574	        0x4883c701	                              add rdi, 1	      5089	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0x4007578	      0xe800000000	                          call 0x400757d	      5089	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0x400757d	        0x89442424	             mov dword [rsp + 0x24], eax	      5089	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0x4007581	      0xe99afbffff	                           jmp 0x4007120	      5089	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0x4007586	      0xe800000000	                          call 0x400758b	      5107	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13
0x400758b	        0x89442424	             mov dword [rsp + 0x24], eax	      5107	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13
0x400758f	      0xe98cfbffff	                           jmp 0x4007120	      5107	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13
0x4007594	      0x48637c2414	         movsxd rdi, dword [rsp + 0x14] 	      5278	ops.c	FUNCTION_62	CALL_3
0x4007599	          0x4c01ef	                            add rdi, r13	      5278	ops.c	FUNCTION_62	CALL_3
0x400759c	      0xe800000000	                          call 0x40075a1	      5278	ops.c	FUNCTION_62	CALL_3
0x40075a1	          0x803800	                       cmp byte [rax], 0	      5280	ops.c	FUNCTION_62	CALL_4
0x40075a4	     0xf856ff7ffff	                           jne 0x4006d19	      5280	ops.c	FUNCTION_62	CALL_4
0x40075aa	      0xe939feffff	                           jmp 0x40073e8	      5280	ops.c	FUNCTION_62	CALL_4
0x40075af	        0x88442433	               mov byte [rsp + 0x33], al	      5016	ops.c	FUNCTION_60	IF_2
0x40075b3	          0x4489fb	                           mov ebx, r15d	      5016	ops.c	FUNCTION_60	IF_2
0x40075b6	      0xe92effffff	                           jmp 0x40074e9	      5016	ops.c	FUNCTION_60	IF_2
0x40075bb	          0x4863f8	                         movsxd rdi, eax	      5016	ops.c	FUNCTION_60	IF_2
0x40075be	      0xe9f3f8ffff	                           jmp 0x4006eb6	      5016	ops.c	FUNCTION_60	IF_2
0x40075c3	      0xe800000000	                          call 0x40075c8	      5224	ops.c	FUNCTION_60
0x40075c8	            0x4898	                                    cdqe	      5224	ops.c	FUNCTION_60
0x40075ca	      0xe986f7ffff	                           jmp 0x4006d55	      5224	ops.c	FUNCTION_60
do_put	SWITCH,0:DO,1:ELSE,27:functions,0:FOR,8:IF,100:WHILE,1:CALL,105	1490
0x400a380	            0x4157	                                push r15	      3462	ops.c	FUNCTION_48
0x400a382	            0x4156	                                push r14	      3462	ops.c	FUNCTION_48
0x400a384	          0x4989d7	                            mov r15, rdx	      3462	ops.c	FUNCTION_48
0x400a387	            0x4155	                                push r13	      3462	ops.c	FUNCTION_48
0x400a389	            0x4154	                                push r12	      3462	ops.c	FUNCTION_48
0x400a38b	          0x4189fd	                           mov r13d, edi	      3462	ops.c	FUNCTION_48
0x400a38e	              0x55	                                push rbp	      3462	ops.c	FUNCTION_48
0x400a38f	              0x53	                                push rbx	      3462	ops.c	FUNCTION_48
0x400a390	    0x4881ece80000	                           sub rsp, 0xe8	      3462	ops.c	FUNCTION_48
0x400a397	    0x64488b042528	                mov rax, qword fs:[0x28]	      3462	ops.c	FUNCTION_48
0x400a3a0	    0x48898424d800	             mov qword [rsp + 0xd8], rax	      3462	ops.c	FUNCTION_48
0x400a3a8	            0x31c0	                            xor eax, eax	      3462	ops.c	FUNCTION_48
0x400a3aa	            0x85ff	                           test edi, edi	      1643	ops.c	FUNCTION_30	IF_1
0x400a3ac	        0x89742408	                mov dword [rsp + 8], esi	      3462	ops.c	FUNCTION_48
0x400a3b0	        0x894c2404	                mov dword [rsp + 4], ecx	      3462	ops.c	FUNCTION_48
0x400a3b4	    0x48c78424d000	               mov qword [rsp + 0xd0], 0	      3488	ops.c	FUNCTION_48
0x400a3c0	    0xc78424b40000	               mov dword [rsp + 0xb4], 0	      3489	ops.c	FUNCTION_48
0x400a3cb	     0xf85cf020000	                           jne 0x400a6a0	      1643	ops.c	FUNCTION_30	IF_1
0x400a3d1	    0x8b0500000000	            mov eax, dword [0x0400a3d7] 	      1643	ops.c	FUNCTION_30	IF_1
0x400a3d7	            0x85c0	                           test eax, eax	      1643	ops.c	FUNCTION_30	IF_1
0x400a3d9	     0xf8451040000	                            je 0x400a830	      1643	ops.c	FUNCTION_30	IF_1
0x400a3df	            0xa802	                              test al, 2	      1650	ops.c	FUNCTION_30	IF_1	ELSE_1
0x400a3e1	    0x8b0500000000	            mov eax, dword [0x0400a3e7] 	      1649	ops.c	FUNCTION_30	IF_1	ELSE_1
0x400a3e7	     0xf85b3050000	                           jne 0x400a9a0	      1650	ops.c	FUNCTION_30	IF_1	ELSE_1
0x400a3ed	    0x8b0d00000000	            mov ecx, dword [0x0400a3f3] 	      1652	ops.c	FUNCTION_30	IF_3
0x400a3f3	            0x85c9	                           test ecx, ecx	      1652	ops.c	FUNCTION_30	IF_3
0x400a3f5	     0xf84ce030000	                            je 0x400a7c9	      1652	ops.c	FUNCTION_30	IF_3
0x400a3fb	      0xbf00000000	                              mov edi, 0	       969	ops.c	FUNCTION_16	IF_1	CALL_1
0x400a400	      0xe800000000	                          call 0x400a405	       969	ops.c	FUNCTION_16	IF_1	CALL_1
0x400a405	        0x8b6c2404	                mov ebp, dword [rsp + 4]	      3498	ops.c	FUNCTION_48	IF_1
0x400a409	          0x83e501	                              and ebp, 1	      3498	ops.c	FUNCTION_48	IF_1
0x400a40c	     0xf85fb0a0000	                           jne 0x400af0d	      3498	ops.c	FUNCTION_48	IF_1
0x400a412	    0x488b15000000	            mov rdx, qword [0x0400a419] 	      3501	ops.c	FUNCTION_48
0x400a419	    0x488b05000000	            mov rax, qword [0x0400a420] 	      3501	ops.c	FUNCTION_48
0x400a420	    0x41bd2a000000	                          mov r13d, 0x2a	      3502	ops.c	FUNCTION_48
0x400a426	    0xc74424180000	               mov dword [rsp + 0x18], 0	      3483	ops.c	FUNCTION_48
0x400a42e	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      3501	ops.c	FUNCTION_48
0x400a432	        0x488b5a40	            mov rbx, qword [rdx + 0x40] 	      3501	ops.c	FUNCTION_48
0x400a436	    0x488988e01100	          mov qword [rax + 0x11e0], rcx 	      3501	ops.c	FUNCTION_48
0x400a43d	    0x488998e81100	          mov qword [rax + 0x11e8], rbx 	      3501	ops.c	FUNCTION_48
0x400a444	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      3502	ops.c	FUNCTION_48
0x400a448	        0x488b5a40	            mov rbx, qword [rdx + 0x40] 	      3502	ops.c	FUNCTION_48
0x400a44c	    0x488988001200	          mov qword [rax + 0x1200], rcx 	      3502	ops.c	FUNCTION_48
0x400a453	    0x488998081200	          mov qword [rax + 0x1208], rbx 	      3502	ops.c	FUNCTION_48
0x400a45a	    0x488d9424b400	                   lea rdx, [rsp + 0xb4]	      3525	ops.c	FUNCTION_48	IF_5	CALL_8
0x400a462	    0x488db424d000	                   lea rsi, [rsp + 0xd0]	      3525	ops.c	FUNCTION_48	IF_5	CALL_8
0x400a46a	      0xb901000000	                              mov ecx, 1	      3525	ops.c	FUNCTION_48	IF_5	CALL_8
0x400a46f	          0x4489ef	                           mov edi, r13d	      3525	ops.c	FUNCTION_48	IF_5	CALL_8
0x400a472	      0xe800000000	                          call 0x400a477	      3525	ops.c	FUNCTION_48	IF_5	CALL_8
0x400a477	            0x85c0	                           test eax, eax	      3525	ops.c	FUNCTION_48	IF_5	CALL_8
0x400a479	            0x740f	                            je 0x400a48a	      3525	ops.c	FUNCTION_48	IF_5	CALL_8
0x400a47b	    0x4883bc24d000	               cmp qword [rsp + 0xd0], 0	      3527	ops.c	FUNCTION_48	IF_5	IF_6
0x400a484	     0xf84de020000	                            je 0x400a768	      3527	ops.c	FUNCTION_48	IF_5	IF_6
0x400a48a	    0x488b05000000	            mov rax, qword [0x0400a491] 	      3533	ops.c	FUNCTION_48	CALL_9
0x400a491	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      3533	ops.c	FUNCTION_48	CALL_9
0x400a495	        0x488d7701	                      lea rsi, [rdi + 1]	      3533	ops.c	FUNCTION_48	CALL_9
0x400a499	      0xe800000000	                          call 0x400a49e	      3533	ops.c	FUNCTION_48	CALL_9
0x400a49e	    0x488b8424d000	            mov rax, qword [rsp + 0xd0] 	      3535	ops.c	FUNCTION_48	IF_7
0x400a4a6	          0x4885c0	                           test rax, rax	      3535	ops.c	FUNCTION_48	IF_7
0x400a4a9	     0xf84320e0000	                            je 0x400b2e1	      3535	ops.c	FUNCTION_48	IF_7
0x400a4af	        0x4183fd3d	                          cmp r13d, 0x3d	      3539	ops.c	FUNCTION_48	IF_7	IF_8
0x400a4b3	     0xf8483050000	                            je 0x400aa3c	      3539	ops.c	FUNCTION_48	IF_7	IF_8
0x400a4b9	      0xf644240408	                  test byte [rsp + 4], 8	      3632	ops.c	FUNCTION_48	IF_23
0x400a4be	     0xf8563070000	                           jne 0x400ac27	      3632	ops.c	FUNCTION_48	IF_23
0x400a4c4	    0x4c8da424d000	                   lea r12, [rsp + 0xd0]	      3579	ops.c	FUNCTION_48	IF_7	ELSE_1
0x400a4cc	    0x48c744243000	               mov qword [rsp + 0x30], 0	      3480	ops.c	FUNCTION_48
0x400a4d5	    0x41be01000000	                             mov r14d, 1	      3578	ops.c	FUNCTION_48	IF_7	ELSE_1
0x400a4db	    0xc74424280000	               mov dword [rsp + 0x28], 0	      3537	ops.c	FUNCTION_48	IF_7
0x400a4e3	      0xe800000000	                          call 0x400a4e8	      3675	ops.c	FUNCTION_48	ELSE_6	IF_33	CALL_32
0x400a4e8	            0x85c0	                           test eax, eax	      3675	ops.c	FUNCTION_48	ELSE_6	IF_33	CALL_32
0x400a4ea	     0xf84ca030000	                            je 0x400a8ba	      3675	ops.c	FUNCTION_48	ELSE_6	IF_33	CALL_32
0x400a4f0	        0x498b3c24	                    mov rdi, qword [r12]	      3678	ops.c	FUNCTION_48	CALL_33
0x400a4f4	      0xe800000000	                          call 0x400a4f9	      3678	ops.c	FUNCTION_48	CALL_33
0x400a4f9	      0x448b5c2428	           mov r11d, dword [rsp + 0x28] 	      3681	ops.c	FUNCTION_48	IF_34
0x400a4fe	      0x4889442410	             mov qword [rsp + 0x10], rax	      3678	ops.c	FUNCTION_48	CALL_33
0x400a503	        0x8944246c	             mov dword [rsp + 0x6c], eax	      3678	ops.c	FUNCTION_48	CALL_33
0x400a507	          0x4585db	                         test r11d, r11d	      3681	ops.c	FUNCTION_48	IF_34
0x400a50a	       0xf94442450	                  sete byte [rsp + 0x50]	      3681	ops.c	FUNCTION_48	IF_34
0x400a50f	    0x833d00000000	               cmp dword [0x0400a516], 4	      3681	ops.c	FUNCTION_48	IF_34
0x400a516	       0xfb6442450	           movzx eax, byte [rsp + 0x50] 	      3681	ops.c	FUNCTION_48	IF_34
0x400a51b	           0xf94c3	                                 sete bl	      3681	ops.c	FUNCTION_48	IF_34
0x400a51e	            0x20c3	                              and bl, al	      3681	ops.c	FUNCTION_48	IF_34
0x400a520	        0x885c2420	               mov byte [rsp + 0x20], bl	      3681	ops.c	FUNCTION_48	IF_34
0x400a524	     0xf84fa150000	                            je 0x400bb24	      3681	ops.c	FUNCTION_48	IF_34
0x400a52a	      0xe800000000	                          call 0x400a52f	      3683	ops.c	FUNCTION_48	IF_34	IF_35	CALL_34
0x400a52f	          0x83f809	                              cmp eax, 9	      3683	ops.c	FUNCTION_48	IF_34	IF_35	CALL_34
0x400a532	     0xf84b9180000	                            je 0x400bdf1	      3683	ops.c	FUNCTION_48	IF_34	IF_35	CALL_34
0x400a538	    0x488b05000000	            mov rax, qword [0x0400a53f] 	      3694	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37	CALL_37
0x400a53f	        0x448b4844	            mov r9d, dword [rax + 0x44] 	      3694	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37	CALL_37
0x400a543	          0x4585c9	                           test r9d, r9d	      3694	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37	CALL_37
0x400a546	     0xf8e8c180000	                           jle 0x400bdd8	      3694	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37	CALL_37
0x400a54c	      0xe800000000	                          call 0x400a551	      3695	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37
0x400a551	            0x31ff	                            xor edi, edi	      3695	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37
0x400a553	      0x837c240801	                  cmp dword [rsp + 8], 1	      3695	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37
0x400a558	        0x400f94c7	                                sete dil	      3695	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37
0x400a55c	             0x1c7	                            add edi, eax	      3695	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37
0x400a55e	      0xe800000000	                          call 0x400a563	      3695	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37
0x400a563	    0x488b1d000000	            mov rbx, qword [0x0400a56a] 	      3695	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37
0x400a56a	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      3699	ops.c	FUNCTION_48
0x400a56e	    0xc74424280000	               mov dword [rsp + 0x28], 0	      3700	ops.c	FUNCTION_48
0x400a576	    0x48898424c800	             mov qword [rsp + 0xc8], rax	      3699	ops.c	FUNCTION_48
0x400a57e	          0x8b4340	            mov eax, dword [rbx + 0x40] 	      3700	ops.c	FUNCTION_48
0x400a581	    0x898424b00000	             mov dword [rsp + 0xb0], eax	      3700	ops.c	FUNCTION_48
0x400a588	       0xfb6442420	           movzx eax, byte [rsp + 0x20] 	      3700	ops.c	FUNCTION_48
0x400a58d	        0x88442450	               mov byte [rsp + 0x50], al	      3700	ops.c	FUNCTION_48
0x400a591	      0x837c240801	                  cmp dword [rsp + 8], 1	      3891	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	CALL_62
0x400a596	     0xf84ea150000	                            je 0x400bb86	      3891	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	CALL_62
0x400a59c	    0x488b15000000	            mov rdx, qword [0x0400a5a3] 	      3891	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	CALL_62
0x400a5a3	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	      3917	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61
0x400a5a7	        0x488b7b40	            mov rdi, qword [rbx + 0x40] 	      3917	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61
0x400a5ab	        0x4983fe01	                              cmp r14, 1	      3929	ops.c	FUNCTION_48	ELSE_14	IF_67
0x400a5af	    0x4889b2e01100	          mov qword [rdx + 0x11e0], rsi 	      3917	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61
0x400a5b6	    0x4889bae81100	          mov qword [rdx + 0x11e8], rdi 	      3917	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61
0x400a5bd	     0xf8567190000	                           jne 0x400bf2a	      3929	ops.c	FUNCTION_48	ELSE_14	IF_67
0x400a5c3	    0x448b1d000000	           mov r11d, dword [0x0400a5ca] 	      3933	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68
0x400a5ca	    0x48c744241800	               mov qword [rsp + 0x18], 0	      3931	ops.c	FUNCTION_48	ELSE_14	IF_67
0x400a5d3	          0x4585db	                         test r11d, r11d	      3933	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68
0x400a5d6	            0x741a	                            je 0x400a5f2	      3933	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68
0x400a5d8	    0x4c8bb2080300	           mov r14, qword [rdx + 0x308] 	      3935	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68
0x400a5df	    0x488b82f80200	           mov rax, qword [rdx + 0x2f8] 	      3936	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68	IF_69
0x400a5e6	          0x4939c6	                            cmp r14, rax	      3936	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68	IF_69
0x400a5e9	        0x490f4dc6	                         cmovge rax, r14	      3936	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68	IF_69
0x400a5ed	      0x4889442418	             mov qword [rsp + 0x18], rax	      3936	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68	IF_69
0x400a5f2	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      3936	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68	IF_69
0x400a5f6	    0x488bbc24c800	            mov rdi, qword [rsp + 0xc8] 	      3936	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68	IF_69
0x400a5fe	      0x48635c246c	         movsxd rbx, dword [rsp + 0x6c] 	      3936	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68	IF_69
0x400a603	      0x44896c2420	            mov dword [rsp + 0x20], r13d	      3936	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68	IF_69
0x400a608	        0x410fafc7	                          imul eax, r15d	      3936	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68	IF_69
0x400a60c	          0x8d4801	                      lea ecx, [rax + 1]	      3950	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_67
0x400a60f	        0x89442410	             mov dword [rsp + 0x10], eax	      3950	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_67
0x400a613	          0x83e801	                              sub eax, 1	      3967	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x400a616	        0x89442438	             mov dword [rsp + 0x38], eax	      3967	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x400a61a	        0x894c2428	             mov dword [rsp + 0x28], ecx	      3950	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_67
0x400a61e	            0xeb4e	                           jmp 0x400a66e	      3950	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_67
0x400a620	      0xe800000000	                          call 0x400a625	      3944	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_64
0x400a625	    0x448b0d000000	            mov r9d, dword [0x0400a62c] 	      3945	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71	CALL_65
0x400a62c	      0x4889442408	                mov qword [rsp + 8], rax	      3944	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_64
0x400a631	          0x4889c7	                            mov rdi, rax	      3945	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71	CALL_65
0x400a634	          0x4585c9	                           test r9d, r9d	      3945	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71	CALL_65
0x400a637	     0xf8422090000	                            je 0x400af5f	      3945	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71	CALL_65
0x400a63d	      0xe800000000	                          call 0x400a642	      3945	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71	CALL_65
0x400a642	    0x398424b00000	            cmp dword [rsp + 0xb0], eax 	      3945	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71	CALL_65
0x400a649	     0xf8e15090000	                           jle 0x400af64	      3945	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71	CALL_65
0x400a64f	    0x488b8424c800	            mov rax, qword [rsp + 0xc8] 	      3947	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71
0x400a657	        0x488d7801	                      lea rdi, [rax + 1]	      3947	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71
0x400a65b	    0x4889bc24c800	             mov qword [rsp + 0xc8], rdi	      3947	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71
0x400a663	      0x48397c2418	            cmp qword [rsp + 0x18], rdi 	      3972	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1
0x400a668	     0xf8c0f0e0000	                            jl 0x400b47d	      3972	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1
0x400a66e	      0x448b542410	           mov r10d, dword [rsp + 0x10] 	      3942	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70
0x400a673	          0x4585d2	                         test r10d, r10d	      3942	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70
0x400a676	            0x7fa8	                            jg 0x400a620	      3942	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70
0x400a678	    0x448b05000000	            mov r8d, dword [0x0400a67f] 	      3970	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_74
0x400a67f	          0x4585c0	                           test r8d, r8d	      3970	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_74
0x400a682	     0xf84c8010000	                            je 0x400a850	      3970	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_74
0x400a688	        0x4883c701	                              add rdi, 1	      3971	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_74
0x400a68c	    0x4889bc24c800	             mov qword [rsp + 0xc8], rdi	      3971	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_74
0x400a694	            0xebcd	                           jmp 0x400a663	      3971	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_74
0x400a696	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3971	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_74
0x400a6a0	    0x8b1500000000	            mov edx, dword [0x0400a6a6] 	      1652	ops.c	FUNCTION_30	IF_3
0x400a6a6	    0x8b0500000000	            mov eax, dword [0x0400a6ac] 	      1652	ops.c	FUNCTION_30	IF_3
0x400a6ac	            0x85d2	                           test edx, edx	      1652	ops.c	FUNCTION_30	IF_3
0x400a6ae	     0xf840c010000	                            je 0x400a7c0	      1652	ops.c	FUNCTION_30	IF_3
0x400a6b4	            0x85c0	                           test eax, eax	      1654	ops.c	FUNCTION_30	IF_4
0x400a6b6	     0xf85dc000000	                           jne 0x400a798	      1654	ops.c	FUNCTION_30	IF_4
0x400a6bc	        0x4183fd2b	                          cmp r13d, 0x2b	      1654	ops.c	FUNCTION_30	IF_4
0x400a6c0	     0xf8412010000	                            je 0x400a7d8	      1654	ops.c	FUNCTION_30	IF_4
0x400a6c6	        0x4183fd2a	                          cmp r13d, 0x2a	       964	ops.c	FUNCTION_16	IF_1
0x400a6ca	     0xf84f1020000	                            je 0x400a9c1	       964	ops.c	FUNCTION_16	IF_1
0x400a6d0	        0x8b6c2404	                mov ebp, dword [rsp + 4]	      3498	ops.c	FUNCTION_48	IF_1
0x400a6d4	    0xc74424180000	               mov dword [rsp + 0x18], 0	      3483	ops.c	FUNCTION_48
0x400a6dc	          0x83e501	                              and ebp, 1	      3498	ops.c	FUNCTION_48	IF_1
0x400a6df	     0xf859e020000	                           jne 0x400a983	      3498	ops.c	FUNCTION_48	IF_1
0x400a6e5	    0x488b15000000	            mov rdx, qword [0x0400a6ec] 	      3501	ops.c	FUNCTION_48
0x400a6ec	    0x488b05000000	            mov rax, qword [0x0400a6f3] 	      3501	ops.c	FUNCTION_48
0x400a6f3	        0x4183fd2e	                          cmp r13d, 0x2e	      3508	ops.c	FUNCTION_48	IF_2
0x400a6f7	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      3501	ops.c	FUNCTION_48
0x400a6fb	        0x488b5a40	            mov rbx, qword [rdx + 0x40] 	      3501	ops.c	FUNCTION_48
0x400a6ff	    0x488988e01100	          mov qword [rax + 0x11e0], rcx 	      3501	ops.c	FUNCTION_48
0x400a706	    0x488998e81100	          mov qword [rax + 0x11e8], rbx 	      3501	ops.c	FUNCTION_48
0x400a70d	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      3502	ops.c	FUNCTION_48
0x400a711	        0x488b5a40	            mov rbx, qword [rdx + 0x40] 	      3502	ops.c	FUNCTION_48
0x400a715	    0x488988001200	          mov qword [rax + 0x1200], rcx 	      3502	ops.c	FUNCTION_48
0x400a71c	    0x488998081200	          mov qword [rax + 0x1208], rbx 	      3502	ops.c	FUNCTION_48
0x400a723	     0xf8531fdffff	                           jne 0x400a45a	      3508	ops.c	FUNCTION_48	IF_2
0x400a729	    0x8b3d00000000	            mov edi, dword [0x0400a72f] 	      3510	ops.c	FUNCTION_48	IF_2	IF_3
0x400a72f	            0x85ff	                           test edi, edi	      3510	ops.c	FUNCTION_48	IF_2	IF_3
0x400a731	     0xf85b5020000	                           jne 0x400a9ec	      3510	ops.c	FUNCTION_48	IF_2	IF_3
0x400a737	      0x837c240801	                  cmp dword [rsp + 8], 1	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x400a73c	     0xf84c0020000	                            je 0x400aa02	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x400a742	        0x4983ffff	             cmp r15, 0xffffffffffffffff	      3513	ops.c	FUNCTION_48	IF_2
0x400a746	      0xbf4f000000	                           mov edi, 0x4f	      3513	ops.c	FUNCTION_48	IF_2
0x400a74b	      0xb869000000	                           mov eax, 0x69	      3513	ops.c	FUNCTION_48	IF_2
0x400a750	           0xf45f8	                         cmovne edi, eax	      3513	ops.c	FUNCTION_48	IF_2
0x400a753	            0x31d2	                            xor edx, edx	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x400a755	          0x4c89fe	                            mov rsi, r15	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x400a758	      0xe800000000	                          call 0x400a75d	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x400a75d	      0xf644240402	                  test byte [rsp + 4], 2	      3516	ops.c	FUNCTION_48	IF_2	IF_4	CALL_6
0x400a762	     0xf8568020000	                           jne 0x400a9d0	      3516	ops.c	FUNCTION_48	IF_2	IF_4	CALL_6
0x400a768	    0x488b8424d800	            mov rax, qword [rsp + 0xd8] 	      4149	ops.c	FUNCTION_48
0x400a770	    0x644833042528	                xor rax, qword fs:[0x28]	      4149	ops.c	FUNCTION_48
0x400a779	     0xf8543170000	                           jne 0x400bec2	      4149	ops.c	FUNCTION_48
0x400a77f	    0x4881c4e80000	                           add rsp, 0xe8	      4149	ops.c	FUNCTION_48
0x400a786	              0x5b	                                 pop rbx	      4149	ops.c	FUNCTION_48
0x400a787	              0x5d	                                 pop rbp	      4149	ops.c	FUNCTION_48
0x400a788	            0x415c	                                 pop r12	      4149	ops.c	FUNCTION_48
0x400a78a	            0x415d	                                 pop r13	      4149	ops.c	FUNCTION_48
0x400a78c	            0x415e	                                 pop r14	      4149	ops.c	FUNCTION_48
0x400a78e	            0x415f	                                 pop r15	      4149	ops.c	FUNCTION_48
0x400a790	              0xc3	                                     ret	      4149	ops.c	FUNCTION_48
0x400a791	     0xf1f80000000	                         nop dword [rax]	      4149	ops.c	FUNCTION_48
0x400a798	        0x4183fd2a	                          cmp r13d, 0x2a	       964	ops.c	FUNCTION_16	IF_1
0x400a79c	     0xf841f020000	                            je 0x400a9c1	       964	ops.c	FUNCTION_16	IF_1
0x400a7a2	        0x4183fd2b	                          cmp r13d, 0x2b	       973	ops.c	FUNCTION_16	ELSE_2	IF_3	IF_4
0x400a7a6	     0xf8524ffffff	                           jne 0x400a6d0	       973	ops.c	FUNCTION_16	ELSE_2	IF_3	IF_4
0x400a7ac	      0xbf00000000	                              mov edi, 0	       976	ops.c	FUNCTION_16	ELSE_2	IF_3	CALL_2
0x400a7b1	      0xe800000000	                          call 0x400a7b6	       976	ops.c	FUNCTION_16	ELSE_2	IF_3	CALL_2
0x400a7b6	      0xe915ffffff	                           jmp 0x400a6d0	       976	ops.c	FUNCTION_16	ELSE_2	IF_3	CALL_2
0x400a7bb	       0xf1f440000	                   nop dword [rax + rax]	       976	ops.c	FUNCTION_16	ELSE_2	IF_3	CALL_2
0x400a7c0	          0x83ff2a	                           cmp edi, 0x2a	      1652	ops.c	FUNCTION_30	IF_3
0x400a7c3	     0xf85ebfeffff	                           jne 0x400a6b4	      1652	ops.c	FUNCTION_30	IF_3
0x400a7c9	          0x4531ed	                          xor r13d, r13d	      1654	ops.c	FUNCTION_30	IF_4
0x400a7cc	            0x85c0	                           test eax, eax	      1654	ops.c	FUNCTION_30	IF_4
0x400a7ce	     0xf85fcfeffff	                           jne 0x400a6d0	      1654	ops.c	FUNCTION_30	IF_4
0x400a7d4	         0xf1f4000	                         nop dword [rax]	      1654	ops.c	FUNCTION_30	IF_4
0x400a7d8	        0x8b6c2404	                mov ebp, dword [rsp + 4]	      3498	ops.c	FUNCTION_48	IF_1
0x400a7dc	          0x83e501	                              and ebp, 1	      3498	ops.c	FUNCTION_48	IF_1
0x400a7df	     0xf859b010000	                           jne 0x400a980	      3498	ops.c	FUNCTION_48	IF_1
0x400a7e5	    0x488b15000000	            mov rdx, qword [0x0400a7ec] 	      3501	ops.c	FUNCTION_48
0x400a7ec	    0x488b05000000	            mov rax, qword [0x0400a7f3] 	      3501	ops.c	FUNCTION_48
0x400a7f3	          0x4531ed	                          xor r13d, r13d	      3502	ops.c	FUNCTION_48
0x400a7f6	    0xc74424180000	               mov dword [rsp + 0x18], 0	      3483	ops.c	FUNCTION_48
0x400a7fe	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      3501	ops.c	FUNCTION_48
0x400a802	        0x488b5a40	            mov rbx, qword [rdx + 0x40] 	      3501	ops.c	FUNCTION_48
0x400a806	    0x488988e01100	          mov qword [rax + 0x11e0], rcx 	      3501	ops.c	FUNCTION_48
0x400a80d	    0x488998e81100	          mov qword [rax + 0x11e8], rbx 	      3501	ops.c	FUNCTION_48
0x400a814	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      3502	ops.c	FUNCTION_48
0x400a818	        0x488b5a40	            mov rbx, qword [rdx + 0x40] 	      3502	ops.c	FUNCTION_48
0x400a81c	    0x488988001200	          mov qword [rax + 0x1200], rcx 	      3502	ops.c	FUNCTION_48
0x400a823	    0x488998081200	          mov qword [rax + 0x1208], rbx 	      3502	ops.c	FUNCTION_48
0x400a82a	      0xe92bfcffff	                           jmp 0x400a45a	      3502	ops.c	FUNCTION_48
0x400a82f	              0x90	                                     nop	      3502	ops.c	FUNCTION_48
0x400a830	    0x8b0500000000	            mov eax, dword [0x0400a836] 	      1643	ops.c	FUNCTION_30	IF_1
0x400a836	            0x85c0	                           test eax, eax	      1643	ops.c	FUNCTION_30	IF_1
0x400a838	     0xf85a1fbffff	                           jne 0x400a3df	      1643	ops.c	FUNCTION_30	IF_1
0x400a83e	    0x8b0500000000	            mov eax, dword [0x0400a844] 	      1643	ops.c	FUNCTION_30	IF_1
0x400a844	      0xe965010000	                           jmp 0x400a9ae	      1643	ops.c	FUNCTION_30	IF_1
0x400a849	     0xf1f80000000	                         nop dword [rax]	      1643	ops.c	FUNCTION_30	IF_1
0x400a850	      0x448b6c2420	           mov r13d, dword [rsp + 0x20] 	      1643	ops.c	FUNCTION_30	IF_1
0x400a855	    0x488b05000000	            mov rax, qword [0x0400a85c] 	      3977	ops.c	FUNCTION_48	ELSE_14	IF_67
0x400a85c	        0x8b742410	            mov esi, dword [rsp + 0x10] 	      3979	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x400a860	    0x488b15000000	            mov rdx, qword [0x0400a867] 	      3977	ops.c	FUNCTION_48	ELSE_14	IF_67
0x400a867	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      3977	ops.c	FUNCTION_48	ELSE_14	IF_67
0x400a86b	        0x488b5840	            mov rbx, qword [rax + 0x40] 	      3977	ops.c	FUNCTION_48	ELSE_14	IF_67
0x400a86f	            0x85f6	                           test esi, esi	      3979	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x400a871	    0x48898a001200	          mov qword [rdx + 0x1200], rcx 	      3977	ops.c	FUNCTION_48	ELSE_14	IF_67
0x400a878	    0x48899a081200	          mov qword [rdx + 0x1208], rbx 	      3977	ops.c	FUNCTION_48	ELSE_14	IF_67
0x400a87f	            0x7415	                            je 0x400a896	      3979	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x400a881	    0x8b0d00000000	            mov ecx, dword [0x0400a887] 	      3979	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x400a887	            0x85c9	                           test ecx, ecx	      3979	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x400a889	            0x7507	                           jne 0x400a892	      3979	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x400a88b	      0xf644240402	                  test byte [rsp + 4], 2	      3979	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x400a890	            0x7404	                            je 0x400a896	      3979	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x400a892	        0x83404001	               add dword [rax + 0x40], 1	      3980	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x400a896	    0x8bb424b00000	            mov esi, dword [rsp + 0xb0] 	      3981	ops.c	FUNCTION_48	ELSE_14	IF_67	CALL_73
0x400a89d	      0xe800000000	                          call 0x400a8a2	      3981	ops.c	FUNCTION_48	ELSE_14	IF_67	CALL_73
0x400a8a2	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      4136	ops.c	FUNCTION_48	CALL_102
0x400a8a7	      0xe800000000	                          call 0x400a8ac	      4136	ops.c	FUNCTION_48	CALL_102
0x400a8ac	    0x488b05000000	            mov rax, qword [0x0400a8b3] 	      4137	ops.c	FUNCTION_48
0x400a8b3	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      4137	ops.c	FUNCTION_48
0x400a8ba	    0x448b8424b400	            mov r8d, dword [rsp + 0xb4] 	      4140	ops.c	FUNCTION_48	IF_99
0x400a8c2	          0x4585c0	                           test r8d, r8d	      4140	ops.c	FUNCTION_48	IF_99
0x400a8c5	     0xf855f010000	                           jne 0x400aa2a	      4140	ops.c	FUNCTION_48	IF_99
0x400a8cb	        0x4183fd3d	                          cmp r13d, 0x3d	      4142	ops.c	FUNCTION_48	IF_100
0x400a8cf	     0xf842b060000	                            je 0x400af00	      4142	ops.c	FUNCTION_48	IF_100
0x400a8d5	    0x488b05000000	            mov rax, qword [0x0400a8dc] 	      4158	ops.c	FUNCTION_49	IF_1
0x400a8dc	    0xc70500000000	               mov dword [0x0400a8e6], 0	      4145	ops.c	FUNCTION_48
0x400a8e6	          0x8b7840	            mov edi, dword [rax + 0x40] 	      4158	ops.c	FUNCTION_49	IF_1
0x400a8e9	            0x85ff	                           test edi, edi	      4158	ops.c	FUNCTION_49	IF_1
0x400a8eb	     0xf8e77feffff	                           jle 0x400a768	      4158	ops.c	FUNCTION_49	IF_1
0x400a8f1	      0xe800000000	                          call 0x400a8f6	      4159	ops.c	FUNCTION_49	IF_1	CALL_1
0x400a8f6	            0x85c0	                           test eax, eax	      4159	ops.c	FUNCTION_49	IF_1	CALL_1
0x400a8f8	     0xf856afeffff	                           jne 0x400a768	      4159	ops.c	FUNCTION_49	IF_1	CALL_1
0x400a8fe	    0xf60500000000	               test byte [0x0400a905], 8	      4161	ops.c	FUNCTION_49	IF_1
0x400a905	     0xf855dfeffff	                           jne 0x400a768	      4161	ops.c	FUNCTION_49	IF_1
0x400a90b	    0x8b3500000000	            mov esi, dword [0x0400a911] 	      4163	ops.c	FUNCTION_49	IF_1
0x400a911	            0x85f6	                           test esi, esi	      4163	ops.c	FUNCTION_49	IF_1
0x400a913	     0xf854ffeffff	                           jne 0x400a768	      4163	ops.c	FUNCTION_49	IF_1
0x400a919	    0xf60500000000	           test byte [0x0400a920], 0x10 	      4163	ops.c	FUNCTION_49	IF_1
0x400a920	     0xf8542feffff	                           jne 0x400a768	      4163	ops.c	FUNCTION_49	IF_1
0x400a926	      0xe800000000	                          call 0x400a92b	      4166	ops.c	FUNCTION_49	IF_1	CALL_2
0x400a92b	    0x833d00000000	               cmp dword [0x0400a932], 4	      4169	ops.c	FUNCTION_49	IF_1	IF_2
0x400a932	     0xf8530feffff	                           jne 0x400a768	      4169	ops.c	FUNCTION_49	IF_1	IF_2
0x400a938	    0x488b3d000000	            mov rdi, qword [0x0400a93f] 	      4174	ops.c	FUNCTION_49	IF_1	IF_2	CALL_3
0x400a93f	    0x488d9424b800	                   lea rdx, [rsp + 0xb8]	      4174	ops.c	FUNCTION_49	IF_1	IF_2	CALL_3
0x400a947	    0x4c8d8424bc00	                    lea r8, [rsp + 0xbc]	      4174	ops.c	FUNCTION_49	IF_1	IF_2	CALL_3
0x400a94f	            0x31c9	                            xor ecx, ecx	      4174	ops.c	FUNCTION_49	IF_1	IF_2	CALL_3
0x400a951	        0x488d7738	                   lea rsi, [rdi + 0x38]	      4174	ops.c	FUNCTION_49	IF_1	IF_2	CALL_3
0x400a955	      0xe800000000	                          call 0x400a95a	      4174	ops.c	FUNCTION_49	IF_1	IF_2	CALL_3
0x400a95a	    0x8b8424bc0000	            mov eax, dword [rsp + 0xbc] 	      4175	ops.c	FUNCTION_49	IF_1	IF_2
0x400a961	    0x2b8424b80000	             sub eax, dword [rsp + 0xb8]	      4175	ops.c	FUNCTION_49	IF_1	IF_2
0x400a968	    0x488b15000000	            mov rdx, qword [0x0400a96f] 	      4175	ops.c	FUNCTION_49	IF_1	IF_2
0x400a96f	          0x83c001	                              add eax, 1	      4175	ops.c	FUNCTION_49	IF_1	IF_2
0x400a972	          0x894244	             mov dword [rdx + 0x44], eax	      4175	ops.c	FUNCTION_49	IF_1	IF_2
0x400a975	      0xe9eefdffff	                           jmp 0x400a768	      4175	ops.c	FUNCTION_49	IF_1	IF_2
0x400a97a	    0x660f1f440000	                    nop word [rax + rax]	      4175	ops.c	FUNCTION_49	IF_1	IF_2
0x400a980	          0x4531ed	                          xor r13d, r13d	      3498	ops.c	FUNCTION_48	IF_1
0x400a983	      0xe800000000	                          call 0x400a988	      3499	ops.c	FUNCTION_48	CALL_3
0x400a988	      0xbd01000000	                              mov ebp, 1	      3499	ops.c	FUNCTION_48	CALL_3
0x400a98d	        0x89442418	             mov dword [rsp + 0x18], eax	      3499	ops.c	FUNCTION_48	CALL_3
0x400a991	      0xe94ffdffff	                           jmp 0x400a6e5	      3499	ops.c	FUNCTION_48	CALL_3
0x400a996	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3499	ops.c	FUNCTION_48	CALL_3
0x400a9a0	            0x85c0	                           test eax, eax	      1649	ops.c	FUNCTION_30	IF_1	ELSE_1
0x400a9a2	     0xf846c020000	                            je 0x400ac14	      1649	ops.c	FUNCTION_30	IF_1	ELSE_1
0x400a9a8	    0x41bd2b000000	                          mov r13d, 0x2b	      1650	ops.c	FUNCTION_30	IF_1	ELSE_1
0x400a9ae	            0x85c0	                           test eax, eax	      1654	ops.c	FUNCTION_30	IF_4
0x400a9b0	    0x8b1500000000	            mov edx, dword [0x0400a9b6] 	      1652	ops.c	FUNCTION_30	IF_3
0x400a9b6	     0xf8400fdffff	                            je 0x400a6bc	      1654	ops.c	FUNCTION_30	IF_4
0x400a9bc	      0xe9d7fdffff	                           jmp 0x400a798	      1654	ops.c	FUNCTION_30	IF_4
0x400a9c1	            0x85d2	                           test edx, edx	       966	ops.c	FUNCTION_16	IF_1	IF_2
0x400a9c3	     0xf843cfaffff	                            je 0x400a405	       966	ops.c	FUNCTION_16	IF_1	IF_2
0x400a9c9	      0xe92dfaffff	                           jmp 0x400a3fb	       966	ops.c	FUNCTION_16	IF_1	IF_2
0x400a9ce	            0x6690	                                     nop	       966	ops.c	FUNCTION_16	IF_1	IF_2
0x400a9d0	      0xe800000000	                          call 0x400a9d5	      3516	ops.c	FUNCTION_48	IF_2	IF_4	CALL_6
0x400a9d5	            0x85c0	                           test eax, eax	      3516	ops.c	FUNCTION_48	IF_2	IF_4	CALL_6
0x400a9d7	     0xf848bfdffff	                            je 0x400a768	      3516	ops.c	FUNCTION_48	IF_2	IF_4	CALL_6
0x400a9dd	      0xbf6c000000	                           mov edi, 0x6c	      3517	ops.c	FUNCTION_48	IF_2	CALL_7
0x400a9e2	      0xe800000000	                          call 0x400a9e7	      3517	ops.c	FUNCTION_48	IF_2	CALL_7
0x400a9e7	      0xe97cfdffff	                           jmp 0x400a768	      3517	ops.c	FUNCTION_48	IF_2	CALL_7
0x400a9ec	    0x8b3d00000000	            mov edi, dword [0x0400a9f2] 	      3511	ops.c	FUNCTION_48	IF_2	CALL_4
0x400a9f2	      0xe800000000	                          call 0x400a9f7	      3511	ops.c	FUNCTION_48	IF_2	CALL_4
0x400a9f7	      0x837c240801	                  cmp dword [rsp + 8], 1	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x400a9fc	     0xf8540fdffff	                           jne 0x400a742	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x400aa02	        0x4983ffff	             cmp r15, 0xffffffffffffffff	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x400aa06	      0xbf6f000000	                           mov edi, 0x6f	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x400aa0b	      0xb861000000	                           mov eax, 0x61	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x400aa10	           0xf45f8	                         cmovne edi, eax	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x400aa13	      0xe93bfdffff	                           jmp 0x400a753	      3512	ops.c	FUNCTION_48	IF_2	CALL_5
0x400aa18	    0x8b9424b40000	            mov edx, dword [rsp + 0xb4] 	      4140	ops.c	FUNCTION_48	IF_99
0x400aa1f	          0x4989c4	                            mov r12, rax	      4140	ops.c	FUNCTION_48	IF_99
0x400aa22	            0x85d2	                           test edx, edx	      4140	ops.c	FUNCTION_48	IF_99
0x400aa24	     0xf84d6040000	                            je 0x400af00	      4140	ops.c	FUNCTION_48	IF_99
0x400aa2a	    0x488bbc24d000	            mov rdi, qword [rsp + 0xd0] 	      4141	ops.c	FUNCTION_48	CALL_103
0x400aa32	      0xe800000000	                          call 0x400aa37	      4141	ops.c	FUNCTION_48	CALL_103
0x400aa37	      0xe98ffeffff	                           jmp 0x400a8cb	      4141	ops.c	FUNCTION_48	CALL_103
0x400aa3c	          0x4531e4	                          xor r12d, r12d	      4141	ops.c	FUNCTION_48	CALL_103
0x400aa3f	          0x4889c7	                            mov rdi, rax	      4141	ops.c	FUNCTION_48	CALL_103
0x400aa42	    0xc74424280000	               mov dword [rsp + 0x28], 0	      4141	ops.c	FUNCTION_48	CALL_103
0x400aa4a	          0x4c89e0	                            mov rax, r12	      4141	ops.c	FUNCTION_48	CALL_103
0x400aa4d	           0xf1f00	                         nop dword [rax]	      4141	ops.c	FUNCTION_48	CALL_103
0x400aa50	          0x4885c0	                           test rax, rax	      4141	ops.c	FUNCTION_48	CALL_103
0x400aa53	    0x4889bc24c000	             mov qword [rsp + 0xc0], rdi	      3547	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1
0x400aa5b	     0xf844f010000	                            je 0x400abb0	      3547	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1
0x400aa61	          0x4989c4	                            mov r12, rax	      3547	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1
0x400aa64	          0x4531f6	                          xor r14d, r14d	      3547	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1
0x400aa67	          0x4889f8	                            mov rax, rdi	      3547	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1
0x400aa6a	    0x660f1f440000	                    nop word [rax + rax]	      3547	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1
0x400aa70	          0x4885c0	                           test rax, rax	      3548	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1
0x400aa73	     0xf8407010000	                            je 0x400ab80	      3548	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1
0x400aa79	        0x4b8904f4	            mov qword [r12 + r14*8], rax	      3551	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_9
0x400aa7d	    0x488bbc24c000	            mov rdi, qword [rsp + 0xc0] 	      3553	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	CALL_10
0x400aa85	      0xbe0a000000	                            mov esi, 0xa	      3553	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	CALL_10
0x400aa8a	        0x4983c601	                              add r14, 1	      3552	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1
0x400aa8e	      0xe800000000	                          call 0x400aa93	      3553	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	CALL_10
0x400aa93	          0x4885c0	                           test rax, rax	      3554	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10
0x400aa96	    0x48898424c000	             mov qword [rsp + 0xc0], rax	      3553	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	CALL_10
0x400aa9e	     0xf84dc000000	                            je 0x400ab80	      3554	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10
0x400aaa4	          0xc60000	                       mov byte [rax], 0	      3557	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10	IF_11
0x400aaa7	    0x488b9424c000	            mov rdx, qword [rsp + 0xc0] 	      3557	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10	IF_11
0x400aaaf	        0x488d4201	                      lea rax, [rdx + 1]	      3558	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10
0x400aab3	    0x48898424c000	             mov qword [rsp + 0xc0], rax	      3558	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10
0x400aabb	        0x807a0100	                   cmp byte [rdx + 1], 0	      3560	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10	IF_12
0x400aabf	            0x75af	                           jne 0x400aa70	      3560	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10	IF_12
0x400aac1	    0x48c744241000	               mov qword [rsp + 0x10], 0	      3473	ops.c	FUNCTION_48
0x400aaca	      0xf644240410	               test byte [rsp + 4], 0x10	      3594	ops.c	FUNCTION_48	IF_15	IF_16
0x400aacf	    0x48c744243000	               mov qword [rsp + 0x30], 0	      3480	ops.c	FUNCTION_48
0x400aad8	     0xf853b070000	                           jne 0x400b219	      3594	ops.c	FUNCTION_48	IF_15	IF_16
0x400aade	      0xf644240420	               test byte [rsp + 4], 0x20	      3622	ops.c	FUNCTION_48	IF_15	IF_22
0x400aae3	    0x488b15000000	            mov rdx, qword [0x0400aaea] 	      3625	ops.c	FUNCTION_48	IF_15	IF_22
0x400aaea	    0x488b05000000	            mov rax, qword [0x0400aaf1] 	      3625	ops.c	FUNCTION_48	IF_15	IF_22
0x400aaf1	     0xf8531040000	                           jne 0x400af28	      3622	ops.c	FUNCTION_48	IF_15	IF_22
0x400aaf7	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      3628	ops.c	FUNCTION_48	IF_15
0x400aafb	        0x488b5a40	            mov rbx, qword [rdx + 0x40] 	      3628	ops.c	FUNCTION_48	IF_15
0x400aaff	          0x4d85f6	                           test r14, r14	      3628	ops.c	FUNCTION_48	IF_15
0x400ab02	    0xc74424280100	               mov dword [rsp + 0x28], 1	      3629	ops.c	FUNCTION_48	IF_15
0x400ab0a	    0x488988e01100	          mov qword [rax + 0x11e0], rcx 	      3628	ops.c	FUNCTION_48	IF_15
0x400ab11	    0x488998e81100	          mov qword [rax + 0x11e8], rbx 	      3628	ops.c	FUNCTION_48	IF_15
0x400ab18	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      3629	ops.c	FUNCTION_48	IF_15
0x400ab1c	        0x488b5a40	            mov rbx, qword [rdx + 0x40] 	      3629	ops.c	FUNCTION_48	IF_15
0x400ab20	           0xf94c2	                                 sete dl	      3629	ops.c	FUNCTION_48	IF_15
0x400ab23	          0x4d85e4	                           test r12, r12	      3629	ops.c	FUNCTION_48	IF_15
0x400ab26	    0x488988001200	          mov qword [rax + 0x1200], rcx 	      3629	ops.c	FUNCTION_48	IF_15
0x400ab2d	    0x488998081200	          mov qword [rax + 0x1208], rbx 	      3629	ops.c	FUNCTION_48	IF_15
0x400ab34	           0xf94c0	                                 sete al	      3629	ops.c	FUNCTION_48	IF_15
0x400ab37	             0x9d0	                             or eax, edx	      3629	ops.c	FUNCTION_48	IF_15
0x400ab39	      0xf644240408	                  test byte [rsp + 4], 8	      3632	ops.c	FUNCTION_48	IF_23
0x400ab3e	     0xf840f130000	                            je 0x400be53	      3632	ops.c	FUNCTION_48	IF_23
0x400ab44	            0x84c0	                             test al, al	      3635	ops.c	FUNCTION_48	IF_24
0x400ab46	     0xf84fb000000	                            je 0x400ac47	      3635	ops.c	FUNCTION_48	IF_24
0x400ab4c	          0x4585ed	                         test r13d, r13d	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x400ab4f	      0xbb00000000	                              mov ebx, 0	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x400ab54	     0xf85be030000	                           jne 0x400af18	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x400ab5a	            0x31ff	                            xor edi, edi	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x400ab5c	      0xba05000000	                              mov edx, 5	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x400ab61	      0xbe00000000	                              mov esi, 0	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x400ab66	      0xe800000000	                          call 0x400ab6b	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x400ab6b	          0x4889de	                            mov rsi, rbx	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x400ab6e	          0x4889c7	                            mov rdi, rax	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x400ab71	      0xe800000000	                          call 0x400ab76	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x400ab76	      0xe93ffdffff	                           jmp 0x400a8ba	      3639	ops.c	FUNCTION_48	IF_24
0x400ab7b	       0xf1f440000	                   nop dword [rax + rax]	      3639	ops.c	FUNCTION_48	IF_24
0x400ab80	    0x48c744241000	               mov qword [rsp + 0x10], 0	      3473	ops.c	FUNCTION_48
0x400ab89	      0x837c242801	               cmp dword [rsp + 0x28], 1	      3592	ops.c	FUNCTION_48	IF_15
0x400ab8e	     0xf8436ffffff	                            je 0x400aaca	      3592	ops.c	FUNCTION_48	IF_15
0x400ab94	          0x4d85f6	                           test r14, r14	      3592	ops.c	FUNCTION_48	IF_15
0x400ab97	    0x48c744243000	               mov qword [rsp + 0x30], 0	      3480	ops.c	FUNCTION_48
0x400aba0	           0xf94c2	                                 sete dl	      3480	ops.c	FUNCTION_48
0x400aba3	          0x4d85e4	                           test r12, r12	      3480	ops.c	FUNCTION_48
0x400aba6	           0xf94c0	                                 sete al	      3480	ops.c	FUNCTION_48
0x400aba9	             0x9d0	                             or eax, edx	      3480	ops.c	FUNCTION_48
0x400abab	            0xeb8c	                           jmp 0x400ab39	      3480	ops.c	FUNCTION_48
0x400abad	           0xf1f00	                         nop dword [rax]	      3480	ops.c	FUNCTION_48
0x400abb0	            0x31db	                            xor ebx, ebx	      3547	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1
0x400abb2	    0x660f1f440000	                    nop word [rax + rax]	      3547	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1
0x400abb8	          0x4885ff	                           test rdi, rdi	      3548	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1
0x400abbb	            0x7435	                            je 0x400abf2	      3548	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1
0x400abbd	      0xbe0a000000	                            mov esi, 0xa	      3553	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	CALL_10
0x400abc2	        0x4883c301	                              add rbx, 1	      3552	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1
0x400abc6	      0xe800000000	                          call 0x400abcb	      3553	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	CALL_10
0x400abcb	          0x4885c0	                           test rax, rax	      3554	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10
0x400abce	    0x48898424c000	             mov qword [rsp + 0xc0], rax	      3553	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	CALL_10
0x400abd6	            0x741a	                            je 0x400abf2	      3554	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10
0x400abd8	        0x488d7801	                      lea rdi, [rax + 1]	      3558	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10
0x400abdc	    0x4889bc24c000	             mov qword [rsp + 0xc0], rdi	      3558	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10
0x400abe4	        0x80780100	                   cmp byte [rax + 1], 0	      3560	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10	IF_12
0x400abe8	            0x75ce	                           jne 0x400abb8	      3560	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10	IF_12
0x400abea	    0xc74424280100	               mov dword [rsp + 0x28], 1	      3562	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10	IF_12
0x400abf2	    0x8d3cdd000000	                        lea edi, [rbx*8]	      3569	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	CALL_11
0x400abf9	      0xe800000000	                          call 0x400abfe	      3569	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	CALL_11
0x400abfe	          0x4885c0	                           test rax, rax	      3571	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	IF_14
0x400ac01	     0xf8411feffff	                            je 0x400aa18	      3571	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	IF_14
0x400ac07	    0x488bbc24d000	            mov rdi, qword [rsp + 0xd0] 	      3571	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	IF_14
0x400ac0f	      0xe93cfeffff	                           jmp 0x400aa50	      3571	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	IF_14
0x400ac14	    0x8b0500000000	            mov eax, dword [0x0400ac1a] 	      1652	ops.c	FUNCTION_30	IF_3
0x400ac1a	            0x85c0	                           test eax, eax	      1652	ops.c	FUNCTION_30	IF_3
0x400ac1c	     0xf84b6fbffff	                            je 0x400a7d8	      1652	ops.c	FUNCTION_30	IF_3
0x400ac22	      0xe9d4f7ffff	                           jmp 0x400a3fb	      1652	ops.c	FUNCTION_30	IF_3
0x400ac27	    0x4c8da424d000	                   lea r12, [rsp + 0xd0]	      3579	ops.c	FUNCTION_48	IF_7	ELSE_1
0x400ac2f	    0x41be01000000	                             mov r14d, 1	      3578	ops.c	FUNCTION_48	IF_7	ELSE_1
0x400ac35	    0x48c744241000	               mov qword [rsp + 0x10], 0	      3473	ops.c	FUNCTION_48
0x400ac3e	    0x48c744243000	               mov qword [rsp + 0x30], 0	      3480	ops.c	FUNCTION_48
0x400ac47	    0x488b05000000	            mov rax, qword [0x0400ac4e] 	      3652	ops.c	FUNCTION_48	ELSE_3	IF_28
0x400ac4e	      0x837c2408ff	 cmp dword [rsp + 8], 0xffffffffffffffff	      3656	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_29
0x400ac53	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      3652	ops.c	FUNCTION_48	ELSE_3	IF_28
0x400ac57	    0x4889bc24c800	             mov qword [rsp + 0xc8], rdi	      3652	ops.c	FUNCTION_48	ELSE_3	IF_28
0x400ac5f	     0xf84e6020000	                            je 0x400af4b	      3656	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_29
0x400ac65	    0x488d9424c800	                   lea rdx, [rsp + 0xc8]	      3659	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_28
0x400ac6d	            0x31f6	                            xor esi, esi	      3659	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_28
0x400ac6f	      0xe800000000	                          call 0x400ac74	      3659	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_28
0x400ac74	      0x837c240801	                  cmp dword [rsp + 8], 1	      3661	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_30
0x400ac79	            0x7509	                           jne 0x400ac84	      3661	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_30
0x400ac7b	    0x48838424c800	               add qword [rsp + 0xc8], 1	      3662	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_30
0x400ac84	    0x488b05000000	            mov rax, qword [0x0400ac8b] 	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x400ac8b	        0x48833801	                      cmp qword [rax], 1	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x400ac8f	     0xf84bf070000	                            je 0x400b454	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x400ac95	    0x488bb424c800	            mov rsi, qword [rsp + 0xc8] 	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x400ac9d	        0x488d7eff	                      lea rdi, [rsi - 1]	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x400aca1	      0xe800000000	                          call 0x400aca6	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x400aca6	            0x85c0	                           test eax, eax	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x400aca8	           0xf94c0	                                 sete al	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x400acab	            0x84c0	                             test al, al	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x400acad	     0xf8507fcffff	                           jne 0x400a8ba	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x400acb3	      0x837c240801	                  cmp dword [rsp + 8], 1	      3668	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_32
0x400acb8	    0x488b1d000000	            mov rbx, qword [0x0400acbf] 	      3669	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_32
0x400acbf	    0x488b8424c800	            mov rax, qword [rsp + 0xc8] 	      3669	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_32
0x400acc7	     0xf84310e0000	                            je 0x400bafe	      3668	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_32
0x400accd	        0x48894338	             mov qword [rbx + 0x38], rax	      3671	ops.c	FUNCTION_48	ELSE_3	IF_28	ELSE_5
0x400acd1	        0x488b7338	            mov rsi, qword [rbx + 0x38] 	      3672	ops.c	FUNCTION_48	ELSE_3	IF_28
0x400acd5	        0x488b7b40	            mov rdi, qword [rbx + 0x40] 	      3672	ops.c	FUNCTION_48	ELSE_3	IF_28
0x400acd9	    0x488b05000000	            mov rax, qword [0x0400ace0] 	      3672	ops.c	FUNCTION_48	ELSE_3	IF_28
0x400ace0	    0xc74424280100	               mov dword [rsp + 0x28], 1	      3672	ops.c	FUNCTION_48	ELSE_3	IF_28
0x400ace8	    0x4889b0e01100	          mov qword [rax + 0x11e0], rsi 	      3672	ops.c	FUNCTION_48	ELSE_3	IF_28
0x400acef	    0x4889b8e81100	          mov qword [rax + 0x11e8], rdi 	      3672	ops.c	FUNCTION_48	ELSE_3	IF_28
0x400acf6	        0x498b3c24	                    mov rdi, qword [r12]	      3678	ops.c	FUNCTION_48	CALL_33
0x400acfa	      0xe800000000	                          call 0x400acff	      3678	ops.c	FUNCTION_48	CALL_33
0x400acff	      0x837c242802	               cmp dword [rsp + 0x28], 2	      3705	ops.c	FUNCTION_48	IF_38
0x400ad04	        0x8944246c	             mov dword [rsp + 0x6c], eax	      3678	ops.c	FUNCTION_48	CALL_33
0x400ad08	          0x8b5340	            mov edx, dword [rbx + 0x40] 	      3700	ops.c	FUNCTION_48
0x400ad0b	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      3699	ops.c	FUNCTION_48
0x400ad0f	    0x899424b00000	             mov dword [rsp + 0xb0], edx	      3700	ops.c	FUNCTION_48
0x400ad16	    0x48898424c800	             mov qword [rsp + 0xc8], rax	      3699	ops.c	FUNCTION_48
0x400ad1e	     0xf84a3070000	                            je 0x400b4c7	      3705	ops.c	FUNCTION_48	IF_38
0x400ad24	    0x8994248c0000	             mov dword [rsp + 0x8c], edx	      3700	ops.c	FUNCTION_48
0x400ad2b	      0x4889442470	             mov qword [rsp + 0x70], rax	      3699	ops.c	FUNCTION_48
0x400ad30	      0xc644245000	                mov byte [rsp + 0x50], 0	      3681	ops.c	FUNCTION_48	IF_34
0x400ad35	    0xc74424280100	               mov dword [rsp + 0x28], 1	      3681	ops.c	FUNCTION_48	IF_34
0x400ad3d	      0x837c2408ff	 cmp dword [rsp + 8], 0xffffffffffffffff	      3922	ops.c	FUNCTION_48	ELSE_14	ELSE_16	IF_66
0x400ad42	     0xf84480d0000	                            je 0x400ba90	      3922	ops.c	FUNCTION_48	ELSE_14	ELSE_16	IF_66
0x400ad48	          0x8b4344	            mov eax, dword [rbx + 0x44] 	      3924	ops.c	FUNCTION_48	ELSE_14
0x400ad4b	          0x4d85ff	                           test r15, r15	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x400ad4e	    0x898424980000	             mov dword [rsp + 0x98], eax	      3924	ops.c	FUNCTION_48	ELSE_14
0x400ad55	      0x4b8d44f4f8	              lea rax, [r12 + r14*8 - 8]	      3924	ops.c	FUNCTION_48	ELSE_14
0x400ad5a	      0x4889442478	             mov qword [rsp + 0x78], rax	      3924	ops.c	FUNCTION_48	ELSE_14
0x400ad5f	     0xf8ebc100000	                           jle 0x400be21	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x400ad65	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x400ad6a	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	      4027	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80
0x400ad6f	      0x4c897c2430	             mov qword [rsp + 0x30], r15	      4027	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80
0x400ad74	          0x4d89f7	                            mov r15, r14	      4027	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80
0x400ad77	    0x48c744242001	               mov qword [rsp + 0x20], 1	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x400ad80	    0xc78424880000	               mov dword [rsp + 0x88], 0	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x400ad8b	    0xc74424480100	               mov dword [rsp + 0x48], 1	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x400ad93	          0x83e001	                              and eax, 1	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x400ad96	    0xc74424600000	               mov dword [rsp + 0x60], 0	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x400ad9e	    0x4489ac249000	            mov dword [rsp + 0x90], r13d	      4027	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80
0x400ada6	    0x488984248000	             mov qword [rsp + 0x80], rax	      4027	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80
0x400adae	        0x8b44246c	            mov eax, dword [rsp + 0x6c] 	        59	string3.h	FUNCTION_93	CALL_3
0x400adb2	          0x83c001	                              add eax, 1	        59	string3.h	FUNCTION_93	CALL_3
0x400adb5	            0x4898	                                    cdqe	        59	string3.h	FUNCTION_93	CALL_3
0x400adb7	    0x48898424a000	             mov qword [rsp + 0xa0], rax	        59	string3.h	FUNCTION_93	CALL_3
0x400adbf	        0x498d46ff	                      lea rax, [r14 - 1]	      4027	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80
0x400adc3	      0x448b742428	           mov r14d, dword [rsp + 0x28] 	      4027	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80
0x400adc8	      0x4889442410	             mov qword [rsp + 0x10], rax	      4027	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80
0x400adcd	      0x807c245000	                cmp byte [rsp + 0x50], 0	      3992	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77
0x400add2	     0xf8535050000	                           jne 0x400b30d	      3992	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77
0x400add8	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	      4025	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x400ade0	          0x4c39f8	                            cmp rax, r15	      4025	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x400ade3	     0xf8db4020000	                           jge 0x400b09d	      4025	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x400ade9	          0x4989c5	                            mov r13, rax	      4025	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x400adec	            0xeb0f	                           jmp 0x400adfd	      4025	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x400adee	            0x6690	                                     nop	      4025	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x400adf0	        0x4983c501	                              add r13, 1	      4025	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x400adf4	          0x4d39fd	                            cmp r13, r15	      4025	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x400adf7	     0xf84a0020000	                            je 0x400b09d	      4025	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x400adfd	          0x4585f6	                         test r14d, r14d	      4027	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80
0x400ae00	            0x7507	                           jne 0x400ae09	      4027	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80
0x400ae02	      0x4c396c2410	            cmp qword [rsp + 0x10], r13 	      4027	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80
0x400ae07	            0x7e1d	                           jle 0x400ae26	      4027	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80
0x400ae09	        0x4b8b34ec	            mov rsi, qword [r12 + r13*8]	      4028	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80	CALL_87
0x400ae0d	    0x488bbc24c800	            mov rdi, qword [rsp + 0xc8] 	      4028	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80	CALL_87
0x400ae15	            0x31c9	                            xor ecx, ecx	      4028	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80	CALL_87
0x400ae17	            0x31d2	                            xor edx, edx	      4028	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80	CALL_87
0x400ae19	      0xe800000000	                          call 0x400ae1e	      4028	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80	CALL_87
0x400ae1e	            0x85c0	                           test eax, eax	      4028	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80	CALL_87
0x400ae20	     0xf848d020000	                            je 0x400b0b3	      4028	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80	CALL_87
0x400ae26	    0x488b8424c800	            mov rax, qword [rsp + 0xc8] 	      4031	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x400ae2e	        0x4883c301	                              add rbx, 1	      4032	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x400ae32	            0x85ed	                           test ebp, ebp	      4033	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x400ae34	        0x488d7801	                      lea rdi, [rax + 1]	      4031	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x400ae38	    0x4889bc24c800	             mov qword [rsp + 0xc8], rdi	      4031	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x400ae40	            0x74ae	                            je 0x400adf0	      4033	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x400ae42	    0x488b05000000	            mov rax, qword [0x0400ae49] 	      4035	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x400ae49	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      4035	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x400ae4d	        0x48897838	             mov qword [rax + 0x38], rdi	      4036	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x400ae51	      0x48894c2440	             mov qword [rsp + 0x40], rcx	      4035	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x400ae56	          0x8b4840	            mov ecx, dword [rax + 0x40] 	      4035	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x400ae59	        0x894c2468	             mov dword [rsp + 0x68], ecx	      4035	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x400ae5d	          0x8b4844	            mov ecx, dword [rax + 0x44] 	      4035	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x400ae60	        0x894c2438	             mov dword [rsp + 0x38], ecx	      4035	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x400ae64	      0xe800000000	                          call 0x400ae69	      4037	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_88
0x400ae69	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      4038	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_82
0x400ae6e	      0x48394c2430	            cmp qword [rsp + 0x30], rcx 	      4038	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_82
0x400ae73	          0x4889c2	                            mov rdx, rax	      4037	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_88
0x400ae76	    0x48898424c000	             mov qword [rsp + 0xc0], rax	      4037	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_88
0x400ae7e	     0xf8417110000	                            je 0x400bf9b	      4038	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_82
0x400ae84	           0xfb602	                   movzx eax, byte [rdx]	      4041	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_83	CALL_90
0x400ae87	            0x3c23	                            cmp al, 0x23	      4041	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_83	CALL_90
0x400ae89	     0xf8429030000	                            je 0x400b1b8	      4041	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_83	CALL_90
0x400ae8f	            0x31ff	                            xor edi, edi	      4046	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_18	IF_84
0x400ae91	            0x84c0	                             test al, al	      4045	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_18	IF_84
0x400ae93	     0xf85c7010000	                           jne 0x400b060	      4045	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_18	IF_84
0x400ae99	            0x31f6	                            xor esi, esi	      4055	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_93
0x400ae9b	      0xe800000000	                          call 0x400aea0	      4055	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_93
0x400aea0	    0x488b05000000	            mov rax, qword [0x0400aea7] 	      4056	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x400aea7	      0x488b4c2440	            mov rcx, qword [rsp + 0x40] 	      4056	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x400aeac	        0x48894838	             mov qword [rax + 0x38], rcx	      4056	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x400aeb0	        0x8b4c2468	            mov ecx, dword [rsp + 0x68] 	      4056	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x400aeb4	          0x894840	             mov dword [rax + 0x40], ecx	      4056	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x400aeb7	        0x8b4c2438	            mov ecx, dword [rsp + 0x38] 	      4056	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x400aebb	          0x894844	             mov dword [rax + 0x44], ecx	      4056	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x400aebe	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      4058	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_87
0x400aec3	      0x48394c2430	            cmp qword [rsp + 0x30], rcx 	      4058	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_87
0x400aec8	     0xf8522ffffff	                           jne 0x400adf0	      4058	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_87
0x400aece	      0x4c396c2410	            cmp qword [rsp + 0x10], r13 	      4058	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_87
0x400aed3	     0xf8517ffffff	                           jne 0x400adf0	      4058	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_87
0x400aed9	    0x488bbc24c800	            mov rdi, qword [rsp + 0xc8] 	      4059	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_95
0x400aee1	      0xe800000000	                          call 0x400aee6	      4059	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_95
0x400aee6	          0x4889c7	                            mov rdi, rax	      4059	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_95
0x400aee9	      0xe800000000	                          call 0x400aeee	      4059	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_95
0x400aeee	    0x298424880000	             sub dword [rsp + 0x88], eax	      4059	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_95
0x400aef5	      0xe9f6feffff	                           jmp 0x400adf0	      4059	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_95
0x400aefa	    0x660f1f440000	                    nop word [rax + rax]	      4059	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_95
0x400af00	          0x4c89e7	                            mov rdi, r12	      4143	ops.c	FUNCTION_48	CALL_104
0x400af03	      0xe800000000	                          call 0x400af08	      4143	ops.c	FUNCTION_48	CALL_104
0x400af08	      0xe9c8f9ffff	                           jmp 0x400a8d5	      4143	ops.c	FUNCTION_48	CALL_104
0x400af0d	    0x41bd2a000000	                          mov r13d, 0x2a	      3498	ops.c	FUNCTION_48	IF_1
0x400af13	      0xe96bfaffff	                           jmp 0x400a983	      3498	ops.c	FUNCTION_48	IF_1
0x400af18	          0x4489ef	                           mov edi, r13d	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x400af1b	      0xe800000000	                          call 0x400af20	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x400af20	          0x4889c3	                            mov rbx, rax	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x400af23	      0xe932fcffff	                           jmp 0x400ab5a	      3637	ops.c	FUNCTION_48	IF_24	CALL_24
0x400af28	    0x488b88080300	           mov rcx, qword [rax + 0x308] 	      3625	ops.c	FUNCTION_48	IF_15	IF_22
0x400af2f	    0x488b98100300	           mov rbx, qword [rax + 0x310] 	      3625	ops.c	FUNCTION_48	IF_15	IF_22
0x400af36	    0xc74424080100	                  mov dword [rsp + 8], 1	      3626	ops.c	FUNCTION_48	IF_15	IF_22
0x400af3e	        0x48894a38	             mov qword [rdx + 0x38], rcx	      3625	ops.c	FUNCTION_48	IF_15	IF_22
0x400af42	        0x48895a40	             mov qword [rdx + 0x40], rbx	      3625	ops.c	FUNCTION_48	IF_15	IF_22
0x400af46	      0xe9acfbffff	                           jmp 0x400aaf7	      3625	ops.c	FUNCTION_48	IF_15	IF_22
0x400af4b	    0x488db424c800	                   lea rsi, [rsp + 0xc8]	      3657	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_27
0x400af53	            0x31d2	                            xor edx, edx	      3657	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_27
0x400af55	      0xe800000000	                          call 0x400af5a	      3657	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_27
0x400af5a	      0xe925fdffff	                           jmp 0x400ac84	      3657	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_27
0x400af5f	      0xe800000000	                          call 0x400af64	      3657	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_27
0x400af64	        0x8b4c2428	            mov ecx, dword [rsp + 0x28] 	      3950	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_67
0x400af68	          0x8d3c01	                    lea edi, [rcx + rax]	      3950	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_67
0x400af6b	      0xe800000000	                          call 0x400af70	      3950	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_67
0x400af70	          0x4885c0	                           test rax, rax	      3951	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_72
0x400af73	          0x4989c6	                            mov r14, rax	      3950	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_67
0x400af76	     0xf849e0b0000	                            je 0x400bb1a	      3951	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_72
0x400af7c	    0x48639424b000	         movsxd rdx, dword [rsp + 0xb0] 	        59	string3.h	FUNCTION_93	CALL_3
0x400af84	      0x488b742408	                mov rsi, qword [rsp + 8]	        59	string3.h	FUNCTION_93	CALL_3
0x400af89	          0x4889c7	                            mov rdi, rax	        59	string3.h	FUNCTION_93	CALL_3
0x400af8c	      0xe800000000	                          call 0x400af91	        59	string3.h	FUNCTION_93	CALL_3
0x400af91	    0x48638424b000	         movsxd rax, dword [rsp + 0xb0] 	      3954	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70
0x400af99	          0x4d85ff	                           test r15, r15	      3955	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x400af9c	        0x4d8d2c06	                    lea r13, [r14 + rax]	      3954	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70
0x400afa0	    0x4c89ac24c000	             mov qword [rsp + 0xc0], r13	      3954	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70
0x400afa8	            0x7e39	                           jle 0x400afe3	      3955	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x400afaa	            0x31ed	                            xor ebp, ebp	      3955	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x400afac	          0x4c89ef	                            mov rdi, r13	      3955	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x400afaf	              0x90	                                     nop	      3955	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x400afb0	        0x498b3424	                    mov rsi, qword [r12]	        59	string3.h	FUNCTION_93	CALL_3
0x400afb4	          0x4889da	                            mov rdx, rbx	        59	string3.h	FUNCTION_93	CALL_3
0x400afb7	        0x4883c501	                              add rbp, 1	      3955	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x400afbb	      0xe800000000	                          call 0x400afc0	        59	string3.h	FUNCTION_93	CALL_3
0x400afc0	          0x4889df	                            mov rdi, rbx	      3958	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x400afc3	    0x4803bc24c000	             add rdi, qword [rsp + 0xc0]	      3958	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x400afcb	          0x4939ef	                            cmp r15, rbp	      3955	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x400afce	    0x4889bc24c000	             mov qword [rsp + 0xc0], rdi	      3958	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x400afd6	            0x75d8	                           jne 0x400afb0	      3955	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x400afd8	    0x48638424b000	         movsxd rax, dword [rsp + 0xb0] 	      3955	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x400afe0	          0x4989fd	                            mov r13, rdi	      3955	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x400afe3	      0x488b6c2408	                mov rbp, qword [rsp + 8]	      3960	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x400afe8	          0x4801c5	                            add rbp, rax	      3960	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x400afeb	          0x4889ef	                            mov rdi, rbp	      3960	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x400afee	      0xe800000000	                          call 0x400aff3	      3960	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x400aff3	        0x488d5001	                      lea rdx, [rax + 1]	        59	string3.h	FUNCTION_93	CALL_3
0x400aff7	          0x4889ee	                            mov rsi, rbp	        59	string3.h	FUNCTION_93	CALL_3
0x400affa	          0x4c89ef	                            mov rdi, r13	        59	string3.h	FUNCTION_93	CALL_3
0x400affd	      0xe800000000	                          call 0x400b002	        59	string3.h	FUNCTION_93	CALL_3
0x400b002	    0x488bbc24c800	            mov rdi, qword [rsp + 0xc8] 	      3961	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_71
0x400b00a	            0x31d2	                            xor edx, edx	      3961	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_71
0x400b00c	          0x4c89f6	                            mov rsi, r14	      3961	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_71
0x400b00f	      0xe800000000	                          call 0x400b014	      3961	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_71
0x400b014	    0x488b05000000	            mov rax, qword [0x0400b01b] 	      3963	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x400b01b	    0x488bbc24c800	            mov rdi, qword [rsp + 0xc8] 	      3963	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x400b023	        0x48397838	            cmp qword [rax + 0x38], rdi 	      3963	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x400b027	     0xf854bf6ffff	                           jne 0x400a678	      3963	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x400b02d	      0xe800000000	                          call 0x400b032	      3966	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73	CALL_72
0x400b032	    0x488b05000000	            mov rax, qword [0x0400b039] 	      3967	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x400b039	        0x8b4c2438	            mov ecx, dword [rsp + 0x38] 	      3967	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x400b03d	    0x488bbc24c800	            mov rdi, qword [rsp + 0xc8] 	      3967	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x400b045	           0x14840	             add dword [rax + 0x40], ecx	      3967	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x400b048	      0xe92bf6ffff	                           jmp 0x400a678	      3967	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x400b04d	    0x8b8028140000	          mov eax, dword [rax + 0x1428] 	      4191	ops.c	FUNCTION_50
0x400b053	            0x85c0	                           test eax, eax	      4191	ops.c	FUNCTION_50
0x400b055	     0xf857c010000	                           jne 0x400b1d7	      4191	ops.c	FUNCTION_50
0x400b05b	       0xf1f440000	                   nop dword [rax + rax]	      4191	ops.c	FUNCTION_50
0x400b060	      0x448b5c2448	           mov r11d, dword [rsp + 0x48] 	      4047	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85
0x400b065	          0x4585db	                         test r11d, r11d	      4047	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85
0x400b068	            0x741e	                            je 0x400b088	      4047	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85
0x400b06a	      0xe800000000	                          call 0x400b06f	      4049	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85	CALL_91
0x400b06f	        0x8b7c2418	            mov edi, dword [rsp + 0x18] 	      4049	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85	CALL_91
0x400b073	    0xc74424480000	               mov dword [rsp + 0x48], 0	      4051	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85
0x400b07b	            0x89f9	                            mov ecx, edi	      4049	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85	CALL_91
0x400b07d	            0x29c1	                            sub ecx, eax	      4049	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85	CALL_91
0x400b07f	        0x894c2460	             mov dword [rsp + 0x60], ecx	      4049	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85	CALL_91
0x400b083	      0xe911feffff	                           jmp 0x400ae99	      4049	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85	CALL_91
0x400b088	      0xe800000000	                          call 0x400b08d	      4053	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_20	IF_86	CALL_92
0x400b08d	         0x3442460	             add eax, dword [rsp + 0x60]	      4053	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_20	IF_86	CALL_92
0x400b091	       0xf48442448	           cmovs eax, dword [rsp + 0x48]	      4053	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_20	IF_86	CALL_92
0x400b096	            0x89c7	                            mov edi, eax	      4053	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_20	IF_86	CALL_92
0x400b098	      0xe9fcfdffff	                           jmp 0x400ae99	      4053	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_20	IF_86	CALL_92
0x400b09d	    0x488344242001	               add qword [rsp + 0x20], 1	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x400b0a3	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x400b0a8	      0x4839442430	            cmp qword [rsp + 0x30], rax 	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x400b0ad	     0xf8d1afdffff	                           jge 0x400adcd	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x400b0b3	    0x448bac249000	           mov r13d, dword [rsp + 0x90] 	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x400b0bb	      0x48895c2430	             mov qword [rsp + 0x30], rbx	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x400b0c0	      0x837c242801	               cmp dword [rsp + 0x28], 1	      4066	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88
0x400b0c5	    0x488b15000000	            mov rdx, qword [0x0400b0cc] 	      4068	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88
0x400b0cc	     0xf84ee090000	                            je 0x400bac0	      4066	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88
0x400b0d2	    0x488b82e01100	          mov rax, qword [rdx + 0x11e0] 	      4066	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88
0x400b0d9	       0xfb67c2450	           movzx edi, byte [rsp + 0x50] 	      4074	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x400b0de	          0x4801c7	                            add rdi, rax	      4074	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x400b0e1	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      4074	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x400b0e6	      0x488d4438ff	                lea rax, [rax + rdi - 1]	      4074	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x400b0eb	          0x483b02	                    cmp rax, qword [rdx]	      4074	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x400b0ee	            0x7c13	                            jl 0x400b103	      4074	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x400b0f0	    0x488b05000000	            mov rax, qword [0x0400b0f7] 	      4077	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x400b0f7	    0x448b88c00100	           mov r9d, dword [rax + 0x1c0] 	      4077	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x400b0fe	          0x4585c9	                           test r9d, r9d	      4077	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x400b101	            0x7411	                            je 0x400b114	      4077	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x400b103	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      4080	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90	CALL_96
0x400b108	            0x31c9	                            xor ecx, ecx	      4080	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90	CALL_96
0x400b10a	      0xbeffffff7f	                     mov esi, 0x7fffffff	      4080	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90	CALL_96
0x400b10f	      0xe800000000	                          call 0x400b114	      4080	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90	CALL_96
0x400b114	      0x807c245000	                cmp byte [rsp + 0x50], 0	      4084	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91
0x400b119	     0xf8413030000	                            je 0x400b432	      4084	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91
0x400b11f	    0x488b05000000	            mov rax, qword [0x0400b126] 	      4086	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91
0x400b126	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      4085	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91	CALL_97
0x400b12b	    0x8bb424b00000	            mov esi, dword [rsp + 0xb0] 	      4085	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91	CALL_97
0x400b132	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      4086	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91
0x400b136	        0x488d5701	                      lea rdx, [rdi + 1]	      4085	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91	CALL_97
0x400b13a	      0xe800000000	                          call 0x400b13f	      4085	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91	CALL_97
0x400b13f	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      4094	ops.c	FUNCTION_48	ELSE_14	ELSE_17	CALL_99
0x400b144	    0x488b2d000000	            mov rbp, qword [0x0400b14b] 	      4092	ops.c	FUNCTION_48	ELSE_14	ELSE_17
0x400b14b	    0x488b9c24c800	            mov rbx, qword [rsp + 0xc8] 	      4092	ops.c	FUNCTION_48	ELSE_14	ELSE_17
0x400b153	          0x488b38	                    mov rdi, qword [rax]	      4094	ops.c	FUNCTION_48	ELSE_14	ELSE_17	CALL_99
0x400b156	    0x48899d001200	          mov qword [rbp + 0x1200], rbx 	      4092	ops.c	FUNCTION_48	ELSE_14	ELSE_17
0x400b15d	      0xe800000000	                          call 0x400b162	      4094	ops.c	FUNCTION_48	ELSE_14	ELSE_17	CALL_99
0x400b162	    0x2b8424880000	             sub eax, dword [rsp + 0x88]	      4094	ops.c	FUNCTION_48	ELSE_14	ELSE_17	CALL_99
0x400b169	      0xb900000000	                              mov ecx, 0	      4096	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_92
0x400b16e	          0x8d50ff	                      lea edx, [rax - 1]	      4096	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_92
0x400b171	          0x83f802	                              cmp eax, 2	      4096	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_92
0x400b174	    0x898424b00000	             mov dword [rsp + 0xb0], eax	      4094	ops.c	FUNCTION_48	ELSE_14	ELSE_17	CALL_99
0x400b17b	           0xf4cd1	                          cmovl edx, ecx	      4096	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_92
0x400b17e	      0xf644240404	                  test byte [rsp + 4], 4	      4100	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22	IF_93
0x400b183	    0x899508120000	          mov dword [rbp + 0x1208], edx 	      4100	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22	IF_93
0x400b189	     0xf8517090000	                           jne 0x400baa6	      4100	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22	IF_93
0x400b18f	      0xf644240402	                  test byte [rsp + 4], 2	      4106	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94
0x400b194	     0xf84f9020000	                            je 0x400b493	      4106	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94
0x400b19a	      0x837c242801	               cmp dword [rsp + 0x28], 1	      4109	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95
0x400b19f	     0xf84ff0a0000	                            je 0x400bca4	      4109	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95
0x400b1a5	    0x488b15000000	            mov rdx, qword [0x0400b1ac] 	      4119	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	ELSE_24	ELSE_25
0x400b1ac	        0x48895a38	             mov qword [rdx + 0x38], rbx	      4119	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	ELSE_24	ELSE_25
0x400b1b0	          0x894240	             mov dword [rdx + 0x40], eax	      4120	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	ELSE_24	ELSE_25
0x400b1b3	      0xe9eaf6ffff	                           jmp 0x400a8a2	      4120	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	ELSE_24	ELSE_25
0x400b1b8	    0x488b05000000	            mov rax, qword [0x0400b1bf] 	      4191	ops.c	FUNCTION_50
0x400b1bf	    0x8b9074150000	          mov edx, dword [rax + 0x1574] 	      4191	ops.c	FUNCTION_50
0x400b1c5	            0x85d2	                           test edx, edx	      4191	ops.c	FUNCTION_50
0x400b1c7	     0xf8480feffff	                            je 0x400b04d	      4191	ops.c	FUNCTION_50
0x400b1cd	    0x8b8028140000	          mov eax, dword [rax + 0x1428] 	      4191	ops.c	FUNCTION_50
0x400b1d3	            0x85c0	                           test eax, eax	      4191	ops.c	FUNCTION_50
0x400b1d5	            0x742b	                            je 0x400b202	      4191	ops.c	FUNCTION_50
0x400b1d7	      0xba01000000	                              mov edx, 1	      4197	ops.c	FUNCTION_50	CALL_2
0x400b1dc	      0xbe20000000	                           mov esi, 0x20	      4197	ops.c	FUNCTION_50	CALL_2
0x400b1e1	      0xbf23000000	                           mov edi, 0x23	      4197	ops.c	FUNCTION_50	CALL_2
0x400b1e6	      0xe800000000	                          call 0x400b1eb	      4197	ops.c	FUNCTION_50	CALL_2
0x400b1eb	            0x85c0	                           test eax, eax	      4197	ops.c	FUNCTION_50	CALL_2
0x400b1ed	            0x741a	                            je 0x400b209	      4197	ops.c	FUNCTION_50	CALL_2
0x400b1ef	    0x488b05000000	            mov rax, qword [0x0400b1f6] 	      4198	ops.c	FUNCTION_50
0x400b1f6	    0x448b90e81600	         mov r10d, dword [rax + 0x16e8] 	      4198	ops.c	FUNCTION_50
0x400b1fd	          0x4585d2	                         test r10d, r10d	      4198	ops.c	FUNCTION_50
0x400b200	            0x7507	                           jne 0x400b209	      4198	ops.c	FUNCTION_50
0x400b202	            0x31ff	                            xor edi, edi	      4042	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_83
0x400b204	      0xe990fcffff	                           jmp 0x400ae99	      4042	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_83
0x400b209	    0x488b8424c000	            mov rax, qword [rsp + 0xc0] 	      4042	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_83
0x400b211	           0xfb600	                   movzx eax, byte [rax]	      4042	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_83
0x400b214	      0xe976fcffff	                           jmp 0x400ae8f	      4042	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_83
0x400b219	      0xe800000000	                          call 0x400b21e	      3600	ops.c	FUNCTION_48	IF_15	IF_16	IF_17	CALL_13
0x400b21e	            0x85c0	                           test eax, eax	      3600	ops.c	FUNCTION_48	IF_15	IF_16	IF_17	CALL_13
0x400b220	     0xf8494f6ffff	                            je 0x400a8ba	      3600	ops.c	FUNCTION_48	IF_15	IF_16	IF_17	CALL_13
0x400b226	      0xe800000000	                          call 0x400b22b	      3602	ops.c	FUNCTION_48	IF_15	IF_16	CALL_14
0x400b22b	      0x837c240801	                  cmp dword [rsp + 8], 1	      3603	ops.c	FUNCTION_48	IF_15	IF_16	IF_18
0x400b230	          0x4889c3	                            mov rbx, rax	      3602	ops.c	FUNCTION_48	IF_15	IF_16	CALL_14
0x400b233	     0xf84bf0a0000	                            je 0x400bcf8	      3603	ops.c	FUNCTION_48	IF_15	IF_16	IF_18
0x400b239	          0x4889df	                            mov rdi, rbx	      3605	ops.c	FUNCTION_48	IF_15	IF_16	CALL_16
0x400b23c	      0xe800000000	                          call 0x400b241	      3605	ops.c	FUNCTION_48	IF_15	IF_16	CALL_16
0x400b241	          0x4885c0	                           test rax, rax	      3606	ops.c	FUNCTION_48	IF_15	IF_16	IF_19
0x400b244	    0x48898424c000	             mov qword [rsp + 0xc0], rax	      3605	ops.c	FUNCTION_48	IF_15	IF_16	CALL_16
0x400b24c	     0xf8468f6ffff	                            je 0x400a8ba	      3606	ops.c	FUNCTION_48	IF_15	IF_16	IF_19
0x400b252	    0x488b15000000	            mov rdx, qword [0x0400b259] 	      3608	ops.c	FUNCTION_48	IF_15	IF_16	CALL_17
0x400b259	            0x31c9	                            xor ecx, ecx	      3608	ops.c	FUNCTION_48	IF_15	IF_16	CALL_17
0x400b25b	          0x4889c6	                            mov rsi, rax	      3608	ops.c	FUNCTION_48	IF_15	IF_16	CALL_17
0x400b25e	        0x488b7a38	            mov rdi, qword [rdx + 0x38] 	      3608	ops.c	FUNCTION_48	IF_15	IF_16	CALL_17
0x400b262	            0x31d2	                            xor edx, edx	      3608	ops.c	FUNCTION_48	IF_15	IF_16	CALL_17
0x400b264	      0xe800000000	                          call 0x400b269	      3608	ops.c	FUNCTION_48	IF_15	IF_16	CALL_17
0x400b269	    0x488bbc24c000	            mov rdi, qword [rsp + 0xc0] 	      3609	ops.c	FUNCTION_48	IF_15	IF_16	CALL_18
0x400b271	      0xe800000000	                          call 0x400b276	      3609	ops.c	FUNCTION_48	IF_15	IF_16	CALL_18
0x400b276	      0xe800000000	                          call 0x400b27b	      3611	ops.c	FUNCTION_48	IF_15	IF_16	CALL_19
0x400b27b	          0x4889c2	                            mov rdx, rax	      3611	ops.c	FUNCTION_48	IF_15	IF_16	CALL_19
0x400b27e	    0x488b05000000	            mov rax, qword [0x0400b285] 	      3612	ops.c	FUNCTION_48	IF_15	IF_16
0x400b285	        0x48635840	         movsxd rbx, dword [rax + 0x40] 	      3612	ops.c	FUNCTION_48	IF_15	IF_16
0x400b289	          0x4801d3	                            add rbx, rdx	      3612	ops.c	FUNCTION_48	IF_15	IF_16
0x400b28c	      0x837c240801	                  cmp dword [rsp + 8], 1	      3613	ops.c	FUNCTION_48	IF_15	IF_16	IF_20
0x400b291	     0xf84040b0000	                            je 0x400bd9b	      3613	ops.c	FUNCTION_48	IF_15	IF_16	IF_20
0x400b297	          0x4829d3	                            sub rbx, rdx	      3615	ops.c	FUNCTION_48	IF_15	IF_16	CALL_21
0x400b29a	          0x4889d7	                            mov rdi, rdx	      3615	ops.c	FUNCTION_48	IF_15	IF_16	CALL_21
0x400b29d	          0x4889de	                            mov rsi, rbx	      3615	ops.c	FUNCTION_48	IF_15	IF_16	CALL_21
0x400b2a0	      0xe800000000	                          call 0x400b2a5	      3615	ops.c	FUNCTION_48	IF_15	IF_16	CALL_21
0x400b2a5	          0x4885c0	                           test rax, rax	      3616	ops.c	FUNCTION_48	IF_15	IF_16	IF_21
0x400b2a8	    0x48898424c000	             mov qword [rsp + 0xc0], rax	      3615	ops.c	FUNCTION_48	IF_15	IF_16	CALL_21
0x400b2b0	     0xf8404f6ffff	                            je 0x400a8ba	      3616	ops.c	FUNCTION_48	IF_15	IF_16	IF_21
0x400b2b6	    0x488b15000000	            mov rdx, qword [0x0400b2bd] 	      3618	ops.c	FUNCTION_48	IF_15	IF_16	CALL_22
0x400b2bd	          0x4889c6	                            mov rsi, rax	      3618	ops.c	FUNCTION_48	IF_15	IF_16	CALL_22
0x400b2c0	        0x488b7a38	            mov rdi, qword [rdx + 0x38] 	      3618	ops.c	FUNCTION_48	IF_15	IF_16	CALL_22
0x400b2c4	            0x31d2	                            xor edx, edx	      3618	ops.c	FUNCTION_48	IF_15	IF_16	CALL_22
0x400b2c6	      0xe800000000	                          call 0x400b2cb	      3618	ops.c	FUNCTION_48	IF_15	IF_16	CALL_22
0x400b2cb	    0x48c744243001	               mov qword [rsp + 0x30], 1	      3619	ops.c	FUNCTION_48	IF_15	IF_16
0x400b2d4	    0xc74424080100	                  mov dword [rsp + 8], 1	      3620	ops.c	FUNCTION_48	IF_15	IF_16
0x400b2dc	      0xe9fdf7ffff	                           jmp 0x400aade	      3620	ops.c	FUNCTION_48	IF_15	IF_16
0x400b2e1	          0x4489ef	                           mov edi, r13d	      3584	ops.c	FUNCTION_48	ELSE_2	CALL_12
0x400b2e4	      0xe8b768ffff	 call sym.get_yank_register.constprop.17	      3584	ops.c	FUNCTION_48	ELSE_2	CALL_12
0x400b2e9	    0x488b05000000	            mov rax, qword [0x0400b2f0] 	      3586	ops.c	FUNCTION_48	ELSE_2
0x400b2f0	         0xfb64810	           movzx ecx, byte [rax + 0x10] 	      3586	ops.c	FUNCTION_48	ELSE_2
0x400b2f4	        0x4c8b7008	                mov r14, qword [rax + 8]	      3588	ops.c	FUNCTION_48	ELSE_2
0x400b2f8	          0x4c8b20	                    mov r12, qword [rax]	      3589	ops.c	FUNCTION_48	ELSE_2
0x400b2fb	        0x894c2428	             mov dword [rsp + 0x28], ecx	      3586	ops.c	FUNCTION_48	ELSE_2
0x400b2ff	        0x48634814	         movsxd rcx, dword [rax + 0x14] 	      3587	ops.c	FUNCTION_48	ELSE_2
0x400b303	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      3587	ops.c	FUNCTION_48	ELSE_2
0x400b308	      0xe97cf8ffff	                           jmp 0x400ab89	      3587	ops.c	FUNCTION_48	ELSE_2
0x400b30d	      0x488b442470	            mov rax, qword [rsp + 0x70] 	      3999	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77
0x400b312	          0x4889c7	                            mov rdi, rax	      4000	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_74
0x400b315	    0x48898424c800	             mov qword [rsp + 0xc8], rax	      3999	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77
0x400b31d	      0xe800000000	                          call 0x400b322	      4000	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_74
0x400b322	    0x48639424b000	         movsxd rdx, dword [rsp + 0xb0] 	      4000	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_74
0x400b32a	        0x4c8d2c10	                    lea r13, [rax + rdx]	      4000	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_74
0x400b32e	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      4001	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_75
0x400b333	    0x4c89ac24c000	             mov qword [rsp + 0xc0], r13	      4000	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_74
0x400b33b	          0x488b38	                    mov rdi, qword [rax]	      4001	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_75
0x400b33e	      0xe800000000	                          call 0x400b343	      4001	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_75
0x400b343	          0x4c89ef	                            mov rdi, r13	      4002	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_77
0x400b346	      0x4889442438	             mov qword [rsp + 0x38], rax	      4001	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_75
0x400b34b	      0xe800000000	                          call 0x400b350	      4002	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_77
0x400b350	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      4002	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_77
0x400b355	        0x8d7c1001	                lea edi, [rax + rdx + 1]	      4002	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_77
0x400b359	      0xe800000000	                          call 0x400b35e	      4002	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_77
0x400b35e	          0x4885c0	                           test rax, rax	      4003	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	IF_78
0x400b361	          0x4989c5	                            mov r13, rax	      4002	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_77
0x400b364	     0xf84d80b0000	                            je 0x400bf42	      4003	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	IF_78
0x400b36a	      0x488b442478	            mov rax, qword [rsp + 0x78] 	       110	string3.h	FUNCTION_98	CALL_3
0x400b36f	          0x4c89ef	                            mov rdi, r13	       110	string3.h	FUNCTION_98	CALL_3
0x400b372	          0x488b30	                    mov rsi, qword [rax]	       110	string3.h	FUNCTION_98	CALL_3
0x400b375	      0xe800000000	                          call 0x400b37a	       110	string3.h	FUNCTION_98	CALL_3
0x400b37a	    0x488bb424c000	            mov rsi, qword [rsp + 0xc0] 	       148	string3.h	FUNCTION_102	CALL_3
0x400b382	          0x4889c7	                            mov rdi, rax	       148	string3.h	FUNCTION_102	CALL_3
0x400b385	      0xe800000000	                          call 0x400b38a	       148	string3.h	FUNCTION_102	CALL_3
0x400b38a	    0x488bbc24c800	            mov rdi, qword [rsp + 0xc8] 	      4008	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_80
0x400b392	            0x31c9	                            xor ecx, ecx	      4008	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_80
0x400b394	            0x31d2	                            xor edx, edx	      4008	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_80
0x400b396	          0x4c89ee	                            mov rsi, r13	      4008	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_80
0x400b399	      0xe800000000	                          call 0x400b39e	      4008	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_80
0x400b39e	          0x4c89ef	                            mov rdi, r13	      4009	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_81
0x400b3a1	      0xe800000000	                          call 0x400b3a6	      4009	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_81
0x400b3a6	    0x488bbc24c800	            mov rdi, qword [rsp + 0xc8] 	      4011	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_82
0x400b3ae	      0xe800000000	                          call 0x400b3b3	      4011	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_82
0x400b3b3	        0x8b7c246c	            mov edi, dword [rsp + 0x6c] 	      4012	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_83
0x400b3b7	     0x3bc24b00000	             add edi, dword [rsp + 0xb0]	      4012	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_83
0x400b3be	      0x4889442438	             mov qword [rsp + 0x38], rax	      4011	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_82
0x400b3c3	          0x83c701	                              add edi, 1	      4012	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_83
0x400b3c6	      0xe800000000	                          call 0x400b3cb	      4012	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_83
0x400b3cb	          0x4885c0	                           test rax, rax	      4013	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	IF_79
0x400b3ce	          0x4989c5	                            mov r13, rax	      4012	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_83
0x400b3d1	     0xf846b0b0000	                            je 0x400bf42	      4013	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	IF_79
0x400b3d7	    0x48639424b000	         movsxd rdx, dword [rsp + 0xb0] 	        59	string3.h	FUNCTION_93	CALL_3
0x400b3df	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	        59	string3.h	FUNCTION_93	CALL_3
0x400b3e4	          0x4889c7	                            mov rdi, rax	        59	string3.h	FUNCTION_93	CALL_3
0x400b3e7	      0xe800000000	                          call 0x400b3ec	        59	string3.h	FUNCTION_93	CALL_3
0x400b3ec	    0x4863bc24b000	         movsxd rdi, dword [rsp + 0xb0] 	        59	string3.h	FUNCTION_93	CALL_3
0x400b3f4	    0x488b9424a000	            mov rdx, qword [rsp + 0xa0] 	        59	string3.h	FUNCTION_93	CALL_3
0x400b3fc	        0x498b3424	                    mov rsi, qword [r12]	        59	string3.h	FUNCTION_93	CALL_3
0x400b400	          0x4c01ef	                            add rdi, r13	        59	string3.h	FUNCTION_93	CALL_3
0x400b403	      0xe800000000	                          call 0x400b408	        59	string3.h	FUNCTION_93	CALL_3
0x400b408	    0x488bbc24c800	            mov rdi, qword [rsp + 0xc8] 	      4019	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_86
0x400b410	            0x31d2	                            xor edx, edx	      4019	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_86
0x400b412	          0x4c89ee	                            mov rsi, r13	      4019	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_86
0x400b415	      0xe800000000	                          call 0x400b41a	      4019	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_86
0x400b41a	    0x488b9424c800	            mov rdx, qword [rsp + 0xc8] 	      4021	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77
0x400b422	    0x488b05000000	            mov rax, qword [0x0400b429] 	      4021	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77
0x400b429	        0x48895038	             mov qword [rax + 0x38], rdx	      4021	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77
0x400b42d	      0xe9a6f9ffff	                           jmp 0x400add8	      4021	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77
0x400b432	    0x488b05000000	            mov rax, qword [0x0400b439] 	      4088	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_21	CALL_98
0x400b439	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      4088	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_21	CALL_98
0x400b43e	            0x31f6	                            xor esi, esi	      4088	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_21	CALL_98
0x400b440	    0x488bb8e01100	          mov rdi, qword [rax + 0x11e0] 	      4088	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_21	CALL_98
0x400b447	          0x4889fa	                            mov rdx, rdi	      4088	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_21	CALL_98
0x400b44a	      0xe800000000	                          call 0x400b44f	      4088	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_21	CALL_98
0x400b44f	      0xe9ebfcffff	                           jmp 0x400b13f	      4088	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_21	CALL_98
0x400b454	      0xbf01000000	                              mov edi, 1	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x400b459	      0xe800000000	                          call 0x400b45e	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x400b45e	          0x803800	                       cmp byte [rax], 0	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x400b461	     0xf852ef8ffff	                           jne 0x400ac95	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x400b467	            0x31ff	                            xor edi, edi	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x400b469	      0xbe02000000	                              mov esi, 2	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x400b46e	      0xe800000000	                          call 0x400b473	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x400b473	            0x85c0	                           test eax, eax	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x400b475	           0xf94c0	                                 sete al	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x400b478	      0xe92ef8ffff	                           jmp 0x400acab	      3665	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x400b47d	        0x4883ef01	                              sub rdi, 1	      3975	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_75
0x400b481	      0x448b6c2420	           mov r13d, dword [rsp + 0x20] 	      3975	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_75
0x400b486	    0x4889bc24c800	             mov qword [rsp + 0xc8], rdi	      3975	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_75
0x400b48e	      0xe9c2f3ffff	                           jmp 0x400a855	      3975	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_75
0x400b493	      0x837c242801	               cmp dword [rsp + 0x28], 1	      4123	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97
0x400b498	    0x488b05000000	            mov rax, qword [0x0400b49f] 	      4126	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97
0x400b49f	     0xf8439070000	                            je 0x400bbde	      4123	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97
0x400b4a5	      0x488b4c2470	            mov rcx, qword [rsp + 0x70] 	      4132	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_27
0x400b4aa	        0x48894838	             mov qword [rax + 0x38], rcx	      4132	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_27
0x400b4ae	    0x8b8c248c0000	            mov ecx, dword [rsp + 0x8c] 	      4132	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_27
0x400b4b5	          0x894840	             mov dword [rax + 0x40], ecx	      4132	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_27
0x400b4b8	    0x8b8c24980000	            mov ecx, dword [rsp + 0x98] 	      4132	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_27
0x400b4bf	          0x894844	             mov dword [rax + 0x44], ecx	      4132	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_27
0x400b4c2	      0xe9dbf3ffff	                           jmp 0x400a8a2	      4132	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_27
0x400b4c7	      0xe800000000	                          call 0x400b4cc	      3707	ops.c	FUNCTION_48	IF_38	CALL_40
0x400b4cc	      0x837c240801	                  cmp dword [rsp + 8], 1	      3710	ops.c	FUNCTION_48	IF_38	IF_39
0x400b4d1	    0x488b3d000000	            mov rdi, qword [0x0400b4d8] 	      3714	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x400b4d8	            0x89c3	                            mov ebx, eax	      3707	ops.c	FUNCTION_48	IF_38	CALL_40
0x400b4da	    0xc78424bc0000	               mov dword [rsp + 0xbc], 0	      3708	ops.c	FUNCTION_48	IF_38
0x400b4e5	        0x488d7738	                   lea rsi, [rdi + 0x38]	      3714	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x400b4e9	        0x400f94c5	                                sete bpl	      3710	ops.c	FUNCTION_48	IF_38	IF_39
0x400b4ed	            0x85c0	                           test eax, eax	      3710	ops.c	FUNCTION_48	IF_38	IF_39
0x400b4ef	       0xf95442418	                 setne byte [rsp + 0x18]	      3710	ops.c	FUNCTION_48	IF_38	IF_39
0x400b4f4	          0x4084ed	                           test bpl, bpl	      3710	ops.c	FUNCTION_48	IF_38	IF_39
0x400b4f7	       0xfb6442418	           movzx eax, byte [rsp + 0x18] 	      3710	ops.c	FUNCTION_48	IF_38	IF_39
0x400b4fc	     0xf841a080000	                            je 0x400bd1c	      3710	ops.c	FUNCTION_48	IF_38	IF_39
0x400b502	            0x84c0	                             test al, al	      3710	ops.c	FUNCTION_48	IF_38	IF_39
0x400b504	     0xf8412080000	                            je 0x400bd1c	      3710	ops.c	FUNCTION_48	IF_38	IF_39
0x400b50a	    0x833d00000000	               cmp dword [0x0400b511], 4	      3713	ops.c	FUNCTION_48	IF_38	IF_39	IF_40
0x400b511	     0xf8435080000	                            je 0x400bd4c	      3713	ops.c	FUNCTION_48	IF_38	IF_39	IF_40
0x400b517	    0x4c8d8424b000	                    lea r8, [rsp + 0xb0]	      3717	ops.c	FUNCTION_48	IF_38	IF_39	CALL_42
0x400b51f	            0x31c9	                            xor ecx, ecx	      3717	ops.c	FUNCTION_48	IF_38	IF_39	CALL_42
0x400b521	            0x31d2	                            xor edx, edx	      3717	ops.c	FUNCTION_48	IF_38	IF_39	CALL_42
0x400b523	      0xe800000000	                          call 0x400b528	      3717	ops.c	FUNCTION_48	IF_38	IF_39	CALL_42
0x400b528	    0x8b3d00000000	            mov edi, dword [0x0400b52e] 	      3720	ops.c	FUNCTION_48	IF_38	IF_39	IF_41
0x400b52e	            0x85ff	                           test edi, edi	      3720	ops.c	FUNCTION_48	IF_38	IF_39	IF_41
0x400b530	     0xf8592070000	                           jne 0x400bcc8	      3720	ops.c	FUNCTION_48	IF_38	IF_39	IF_41
0x400b536	          0x83fb09	                              cmp ebx, 9	      3726	ops.c	FUNCTION_48	IF_38	IF_39	ELSE_10	IF_42
0x400b539	    0x8b0d00000000	            mov ecx, dword [0x0400b53f] 	      3726	ops.c	FUNCTION_48	IF_38	IF_39	ELSE_10	IF_42
0x400b53f	     0xf84ec080000	                            je 0x400be31	      3726	ops.c	FUNCTION_48	IF_38	IF_39	ELSE_10	IF_42
0x400b545	    0x488b15000000	            mov rdx, qword [0x0400b54c] 	      3728	ops.c	FUNCTION_48	IF_38	IF_39	ELSE_10	IF_42
0x400b54c	        0x83424001	               add dword [rdx + 0x40], 1	      3728	ops.c	FUNCTION_48	IF_38	IF_39	ELSE_10	IF_42
0x400b550	    0x8b8424b00000	            mov eax, dword [rsp + 0xb0] 	      3729	ops.c	FUNCTION_48	IF_38	IF_39
0x400b557	          0x83c001	                              add eax, 1	      3729	ops.c	FUNCTION_48	IF_38	IF_39
0x400b55a	          0x8b7244	            mov esi, dword [rdx + 0x44] 	      3735	ops.c	FUNCTION_48	IF_38
0x400b55d	             0x1f0	                            add eax, esi	      3735	ops.c	FUNCTION_48	IF_38
0x400b55f	          0x83f904	                              cmp ecx, 4	      3736	ops.c	FUNCTION_48	IF_38	IF_43
0x400b562	    0x898424b00000	             mov dword [rsp + 0xb0], eax	      3735	ops.c	FUNCTION_48	IF_38
0x400b569	     0xf8491060000	                            je 0x400bc00	      3736	ops.c	FUNCTION_48	IF_38	IF_43
0x400b56f	          0x4d85f6	                           test r14, r14	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x400b572	    0xc74244000000	               mov dword [rdx + 0x44], 0	      3752	ops.c	FUNCTION_48	IF_38
0x400b579	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	      3752	ops.c	FUNCTION_48	IF_38
0x400b57d	     0xf8ec3080000	                           jle 0x400be46	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x400b583	        0x498d47ff	                      lea rax, [r15 - 1]	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x400b587	    0xc74424180000	               mov dword [rsp + 0x18], 0	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x400b58f	    0xc74424780000	               mov dword [rsp + 0x78], 0	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x400b597	            0x31ed	                            xor ebp, ebp	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x400b599	    0xc74424700000	               mov dword [rsp + 0x70], 0	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x400b5a1	    0x4c89b4248000	             mov qword [rsp + 0x80], r14	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x400b5a9	    0x488984249800	             mov qword [rsp + 0x98], rax	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x400b5b1	    0x4489ac248c00	            mov dword [rsp + 0x8c], r13d	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x400b5b9	      0x4c897c2408	                mov qword [rsp + 8], r15	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x400b5be	            0x6690	                                     nop	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x400b5c0	    0x488b05000000	            mov rax, qword [0x0400b5c7] 	      3766	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49
0x400b5c7	          0x488b38	                    mov rdi, qword [rax]	      3766	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49
0x400b5ca	          0x4839d7	                            cmp rdi, rdx	      3766	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49
0x400b5cd	            0x7d1f	                           jge 0x400b5ee	      3766	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49
0x400b5cf	            0x31c9	                            xor ecx, ecx	      3768	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49	IF_50	CALL_45
0x400b5d1	      0xba01000000	                              mov edx, 1	      3768	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49	IF_50	CALL_45
0x400b5d6	      0xbe00000000	                              mov esi, 0	      3768	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49	IF_50	CALL_45
0x400b5db	      0xe800000000	                          call 0x400b5e0	      3768	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49	IF_50	CALL_45
0x400b5e0	            0x85c0	                           test eax, eax	      3768	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49	IF_50	CALL_45
0x400b5e2	     0xf8480070000	                            je 0x400bd68	      3768	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49	IF_50	CALL_45
0x400b5e8	    0x488344243001	               add qword [rsp + 0x30], 1	      3771	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49
0x400b5ee	      0xe800000000	                          call 0x400b5f3	      3774	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_46
0x400b5f3	          0x4889c7	                            mov rdi, rax	      3775	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_47
0x400b5f6	          0x4989c6	                            mov r14, rax	      3774	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_46
0x400b5f9	      0xe800000000	                          call 0x400b5fe	      3775	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_47
0x400b5fe	      0x4889442420	             mov qword [rsp + 0x20], rax	      3775	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_47
0x400b603	    0x8b8424b00000	            mov eax, dword [rsp + 0xb0] 	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x400b60a	    0x4c89b424c000	             mov qword [rsp + 0xc0], r14	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x400b612	            0x85c0	                           test eax, eax	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x400b614	     0xf8ed2040000	                           jle 0x400baec	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x400b61a	        0x41803e00	                       cmp byte [r14], 0	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x400b61e	     0xf84e7040000	                            je 0x400bb0b	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x400b624	            0x31db	                            xor ebx, ebx	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x400b626	            0xeb19	                           jmp 0x400b641	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x400b628	     0xf1f84000000	                   nop dword [rax + rax]	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x400b630	    0x488b9424c000	            mov rdx, qword [rsp + 0xc0] 	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x400b638	          0x803a00	                       cmp byte [rdx], 0	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x400b63b	     0xf84f5020000	                            je 0x400b936	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x400b641	    0x488db424c000	                   lea rsi, [rsp + 0xc0]	      3779	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3	CALL_48
0x400b649	            0x89da	                            mov edx, ebx	      3779	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3	CALL_48
0x400b64b	          0x4c89f7	                            mov rdi, r14	      3779	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3	CALL_48
0x400b64e	      0xe800000000	                          call 0x400b653	      3779	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3	CALL_48
0x400b653	    0x8b8c24b00000	            mov ecx, dword [rsp + 0xb0] 	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x400b65a	             0x1c3	                            add ebx, eax	      3780	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x400b65c	            0x39d9	                            cmp ecx, ebx	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x400b65e	            0x7fd0	                            jg 0x400b630	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x400b660	    0x488b9424c000	            mov rdx, qword [rsp + 0xc0] 	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x400b668	        0x89442478	             mov dword [rsp + 0x78], eax	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x400b66c	            0x89c8	                            mov eax, ecx	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x400b66e	            0x89d1	                            mov ecx, edx	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x400b670	          0x4429f1	                           sub ecx, r14d	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x400b673	        0x894c2418	             mov dword [rsp + 0x18], ecx	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x400b677	            0x39c3	                            cmp ebx, eax	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x400b679	     0xf8488030000	                            je 0x400ba07	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x400b67f	     0xf8ebb030000	                           jle 0x400ba40	      3788	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x400b685	            0x29c3	                            sub ebx, eax	      3790	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x400b687	    0x8b3500000000	            mov esi, dword [0x0400b68d] 	      3795	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x400b68d	        0x8b442478	            mov eax, dword [rsp + 0x78] 	      3791	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x400b691	      0x836c241801	               sub dword [rsp + 0x18], 1	      3792	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x400b696	        0x895c2440	             mov dword [rsp + 0x40], ebx	      3790	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x400b69a	            0x29d8	                            sub eax, ebx	      3791	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x400b69c	            0x85f6	                           test esi, esi	      3795	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x400b69e	        0x89442468	             mov dword [rsp + 0x68], eax	      3791	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x400b6a2	     0xf85c8030000	                           jne 0x400ba70	      3795	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x400b6a8	      0x4863442418	         movsxd rax, dword [rsp + 0x18] 	      3798	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_54
0x400b6ad	      0x41803c0609	                 cmp byte [r14 + rax], 9	      3798	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_54
0x400b6b2	        0x8b442468	            mov eax, dword [rsp + 0x68] 	      3798	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_54
0x400b6b6	     0xf848e030000	                            je 0x400ba4a	      3798	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_54
0x400b6bc	        0x89442428	             mov dword [rsp + 0x28], eax	      3798	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_54
0x400b6c0	    0xc68424880000	                mov byte [rsp + 0x88], 1	      3798	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_54
0x400b6c8	    0x48c744246000	               mov qword [rsp + 0x60], 0	      3798	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_54
0x400b6d1	    0xc74424400000	               mov dword [rsp + 0x40], 0	      3804	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_54
0x400b6d9	    0xc74424500000	               mov dword [rsp + 0x50], 0	      3803	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_54
0x400b6e1	     0xf1f80000000	                         nop dword [rax]	      3803	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_54
0x400b6e8	        0x498b34ec	            mov rsi, qword [r12 + rbp*8]	      3808	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_49
0x400b6ec	          0x4889f7	                            mov rdi, rsi	      3808	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_49
0x400b6ef	      0x4889742448	             mov qword [rsp + 0x48], rsi	      3808	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_49
0x400b6f4	      0xe800000000	                          call 0x400b6f9	      3808	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_49
0x400b6f9	        0x8b4c2410	            mov ecx, dword [rsp + 0x10] 	      3811	ops.c	FUNCTION_48	IF_38	FOR_2
0x400b6fd	            0x85c0	                           test eax, eax	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x400b6ff	      0x4889442438	             mov qword [rsp + 0x38], rax	      3808	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_49
0x400b704	          0x8d5901	                      lea ebx, [rcx + 1]	      3811	ops.c	FUNCTION_48	IF_38	FOR_2
0x400b707	            0x7e32	                           jle 0x400b73b	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x400b709	          0x4c63f8	                         movsxd r15, eax	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x400b70c	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x400b711	        0x498d47ff	                      lea rax, [r15 - 1]	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x400b715	          0x4531ff	                          xor r15d, r15d	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x400b718	          0x4d89fd	                            mov r13, r15	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x400b71b	          0x4989c7	                            mov r15, rax	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x400b71e	            0xeb08	                           jmp 0x400b728	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x400b720	        0x498b34ec	            mov rsi, qword [r12 + rbp*8]	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x400b724	        0x4983c501	                              add r13, 1	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x400b728	          0x4c01ee	                            add rsi, r13	      3813	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_50
0x400b72b	            0x31d2	                            xor edx, edx	      3813	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_50
0x400b72d	            0x31ff	                            xor edi, edi	      3813	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_50
0x400b72f	      0xe800000000	                          call 0x400b734	      3813	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_50
0x400b734	            0x29c3	                            sub ebx, eax	      3813	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_50
0x400b736	          0x4d39fd	                            cmp r13, r15	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x400b739	            0x75e5	                           jne 0x400b720	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x400b73b	            0x85db	                           test ebx, ebx	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x400b73d	      0xb800000000	                              mov eax, 0	      3812	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x400b742	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      3819	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_51
0x400b747	           0xf49c3	                         cmovns eax, ebx	      3819	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_51
0x400b74a	          0x4189c5	                           mov r13d, eax	      3819	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_51
0x400b74d	         0x3442438	             add eax, dword [rsp + 0x38]	      3818	ops.c	FUNCTION_48	IF_38	FOR_2
0x400b751	       0xfaf442408	               imul eax, dword [rsp + 8]	      3818	ops.c	FUNCTION_48	IF_38	FOR_2
0x400b756	         0x3442428	             add eax, dword [rsp + 0x28]	      3818	ops.c	FUNCTION_48	IF_38	FOR_2
0x400b75a	        0x8d7c0801	                lea edi, [rax + rcx + 1]	      3819	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_51
0x400b75e	        0x8944246c	             mov dword [rsp + 0x6c], eax	      3818	ops.c	FUNCTION_48	IF_38	FOR_2
0x400b762	        0x89442470	             mov dword [rsp + 0x70], eax	      3818	ops.c	FUNCTION_48	IF_38	FOR_2
0x400b766	      0xe800000000	                          call 0x400b76b	      3819	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_51
0x400b76b	          0x4885c0	                           test rax, rax	      3820	ops.c	FUNCTION_48	IF_38	FOR_2	IF_56
0x400b76e	      0x4889442428	             mov qword [rsp + 0x28], rax	      3819	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_51
0x400b773	     0xf84e7030000	                            je 0x400bb60	      3820	ops.c	FUNCTION_48	IF_38	FOR_2	IF_56
0x400b779	          0x4889c7	                            mov rdi, rax	      3820	ops.c	FUNCTION_48	IF_38	FOR_2	IF_56
0x400b77c	    0x48898424c000	             mov qword [rsp + 0xc0], rax	      3823	ops.c	FUNCTION_48	IF_38	FOR_2
0x400b784	      0x4863442418	         movsxd rax, dword [rsp + 0x18] 	      3824	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_52
0x400b789	          0x4c89f6	                            mov rsi, r14	        59	string3.h	FUNCTION_93	CALL_3
0x400b78c	          0x4889c3	                            mov rbx, rax	      3824	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_52
0x400b78f	          0x4889c2	                            mov rdx, rax	        59	string3.h	FUNCTION_93	CALL_3
0x400b792	      0x4889442448	             mov qword [rsp + 0x48], rax	      3824	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_52
0x400b797	      0xe800000000	                          call 0x400b79c	        59	string3.h	FUNCTION_93	CALL_3
0x400b79c	          0x4889df	                            mov rdi, rbx	      3825	ops.c	FUNCTION_48	IF_38	FOR_2
0x400b79f	      0x48635c2468	         movsxd rbx, dword [rsp + 0x68] 	      3827	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_53
0x400b7a4	    0x4803bc24c000	             add rdi, qword [rsp + 0xc0]	      3825	ops.c	FUNCTION_48	IF_38	FOR_2
0x400b7ac	      0xbe20000000	                           mov esi, 0x20	        90	string3.h	FUNCTION_95	CALL_6
0x400b7b1	          0x4889da	                            mov rdx, rbx	        90	string3.h	FUNCTION_95	CALL_6
0x400b7b4	    0x4889bc24c000	             mov qword [rsp + 0xc0], rdi	      3825	ops.c	FUNCTION_48	IF_38	FOR_2
0x400b7bc	      0xe800000000	                          call 0x400b7c1	        90	string3.h	FUNCTION_95	CALL_6
0x400b7c1	    0x48039c24c000	             add rbx, qword [rsp + 0xc0]	      3828	ops.c	FUNCTION_48	IF_38	FOR_2
0x400b7c9	      0x488b442408	                mov rax, qword [rsp + 8]	      3830	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x400b7ce	          0x4885c0	                           test rax, rax	      3830	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x400b7d1	          0x4889df	                            mov rdi, rbx	      3828	ops.c	FUNCTION_48	IF_38	FOR_2
0x400b7d4	    0x48899c24c000	             mov qword [rsp + 0xc0], rbx	      3828	ops.c	FUNCTION_48	IF_38	FOR_2
0x400b7dc	            0x7e45	                           jle 0x400b823	      3830	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x400b7de	          0x4531ff	                          xor r15d, r15d	      3830	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x400b7e1	          0x4585ed	                         test r13d, r13d	      3830	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x400b7e4	      0x48635c2438	         movsxd rbx, dword [rsp + 0x38] 	      3830	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x400b7e9	     0xf8586010000	                           jne 0x400b975	      3830	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x400b7ef	          0x4989ed	                            mov r13, rbp	      3830	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x400b7f2	          0x4889c5	                            mov rbp, rax	      3830	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x400b7f5	           0xf1f00	                         nop dword [rax]	      3830	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x400b7f8	        0x4b8b34ec	            mov rsi, qword [r12 + r13*8]	        59	string3.h	FUNCTION_93	CALL_3
0x400b7fc	          0x4889da	                            mov rdx, rbx	        59	string3.h	FUNCTION_93	CALL_3
0x400b7ff	        0x4983c701	                              add r15, 1	      3830	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x400b803	      0xe800000000	                          call 0x400b808	        59	string3.h	FUNCTION_93	CALL_3
0x400b808	          0x4889df	                            mov rdi, rbx	      3833	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x400b80b	    0x4803bc24c000	             add rdi, qword [rsp + 0xc0]	      3833	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x400b813	          0x4c39fd	                            cmp rbp, r15	      3830	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x400b816	    0x4889bc24c000	             mov qword [rsp + 0xc0], rdi	      3833	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x400b81e	            0x75d8	                           jne 0x400b7f8	      3830	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x400b820	          0x4c89ed	                            mov rbp, r13	      3830	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x400b823	      0x48635c2440	         movsxd rbx, dword [rsp + 0x40] 	      3843	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_56
0x400b828	      0xbe20000000	                           mov esi, 0x20	        90	string3.h	FUNCTION_95	CALL_6
0x400b82d	          0x4889da	                            mov rdx, rbx	        90	string3.h	FUNCTION_95	CALL_6
0x400b830	      0xe800000000	                          call 0x400b835	        90	string3.h	FUNCTION_95	CALL_6
0x400b835	        0x8b542420	            mov edx, dword [rsp + 0x20] 	        59	string3.h	FUNCTION_93	CALL_3
0x400b839	        0x2b542418	             sub edx, dword [rsp + 0x18]	        59	string3.h	FUNCTION_93	CALL_3
0x400b83d	        0x2b542450	             sub edx, dword [rsp + 0x50]	        59	string3.h	FUNCTION_93	CALL_3
0x400b841	    0x48039c24c000	             add rbx, qword [rsp + 0xc0]	      3844	ops.c	FUNCTION_48	IF_38	FOR_2
0x400b849	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	        59	string3.h	FUNCTION_93	CALL_3
0x400b84e	      0x4803742460	             add rsi, qword [rsp + 0x60]	        59	string3.h	FUNCTION_93	CALL_3
0x400b853	          0x83c201	                              add edx, 1	        59	string3.h	FUNCTION_93	CALL_3
0x400b856	          0x4889df	                            mov rdi, rbx	      3844	ops.c	FUNCTION_48	IF_38	FOR_2
0x400b859	    0x48899c24c000	             mov qword [rsp + 0xc0], rbx	      3844	ops.c	FUNCTION_48	IF_38	FOR_2
0x400b861	          0x4c01f6	                            add rsi, r14	        59	string3.h	FUNCTION_93	CALL_3
0x400b864	          0x4863d2	                         movsxd rdx, edx	        59	string3.h	FUNCTION_93	CALL_3
0x400b867	      0xe800000000	                          call 0x400b86c	        59	string3.h	FUNCTION_93	CALL_3
0x400b86c	    0x488b05000000	            mov rax, qword [0x0400b873] 	      3848	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_58
0x400b873	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      3848	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_58
0x400b878	            0x31d2	                            xor edx, edx	      3848	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_58
0x400b87a	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      3848	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_58
0x400b87e	      0xe800000000	                          call 0x400b883	      3848	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_58
0x400b883	    0x488b05000000	            mov rax, qword [0x0400b88a] 	      3850	ops.c	FUNCTION_48	IF_38	FOR_2
0x400b88a	          0x4885ed	                           test rbp, rbp	      3851	ops.c	FUNCTION_48	IF_38	FOR_2	IF_58
0x400b88d	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      3850	ops.c	FUNCTION_48	IF_38	FOR_2
0x400b891	        0x488d5101	                      lea rdx, [rcx + 1]	      3850	ops.c	FUNCTION_48	IF_38	FOR_2
0x400b895	        0x48895038	             mov qword [rax + 0x38], rdx	      3850	ops.c	FUNCTION_48	IF_38	FOR_2
0x400b899	     0xf842b070000	                            je 0x400bfca	      3851	ops.c	FUNCTION_48	IF_38	FOR_2	IF_58
0x400b89f	        0x4883c501	                              add rbp, 1	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x400b8a3	    0x483bac248000	            cmp rbp, qword [rsp + 0x80] 	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x400b8ab	     0xf850ffdffff	                           jne 0x400b5c0	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x400b8b1	      0x448b74246c	           mov r14d, dword [rsp + 0x6c] 	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x400b8b6	      0x4403742418	            add r14d, dword [rsp + 0x18]	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x400b8bb	    0x448bac248c00	           mov r13d, dword [rsp + 0x8c] 	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x400b8c3	        0x418d5eff	                      lea ebx, [r14 - 1]	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x400b8c7	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      3855	ops.c	FUNCTION_48	IF_38	CALL_59
0x400b8cc	    0x488bbc24c800	            mov rdi, qword [rsp + 0xc8] 	      3855	ops.c	FUNCTION_48	IF_38	CALL_59
0x400b8d4	            0x31f6	                            xor esi, esi	      3855	ops.c	FUNCTION_48	IF_38	CALL_59
0x400b8d6	      0xe800000000	                          call 0x400b8db	      3855	ops.c	FUNCTION_48	IF_38	CALL_59
0x400b8db	    0x488b15000000	            mov rdx, qword [0x0400b8e2] 	      3858	ops.c	FUNCTION_48	IF_38
0x400b8e2	    0x488b05000000	            mov rax, qword [0x0400b8e9] 	      3858	ops.c	FUNCTION_48	IF_38
0x400b8e9	    0x488bb424c800	            mov rsi, qword [rsp + 0xc8] 	      3859	ops.c	FUNCTION_48	IF_38
0x400b8f1	        0x488b4a38	            mov rcx, qword [rdx + 0x38] 	      3862	ops.c	FUNCTION_48	IF_38
0x400b8f5	        0x488b7a40	            mov rdi, qword [rdx + 0x40] 	      3858	ops.c	FUNCTION_48	IF_38
0x400b8f9	    0x4889b0e01100	          mov qword [rax + 0x11e0], rsi 	      3859	ops.c	FUNCTION_48	IF_38
0x400b900	    0x899808120000	          mov dword [rax + 0x1208], ebx 	      3863	ops.c	FUNCTION_48	IF_38
0x400b906	    0xc7800c120000	            mov dword [rax + 0x120c], 0 	      3865	ops.c	FUNCTION_48	IF_38
0x400b910	        0x4883e901	                              sub rcx, 1	      3862	ops.c	FUNCTION_48	IF_38
0x400b914	      0xf644240402	                  test byte [rsp + 4], 2	      3867	ops.c	FUNCTION_48	IF_38	IF_59
0x400b919	    0x4889b8e81100	          mov qword [rax + 0x11e8], rdi 	      3858	ops.c	FUNCTION_48	IF_38
0x400b920	    0x488988001200	          mov qword [rax + 0x1200], rcx 	      3862	ops.c	FUNCTION_48	IF_38
0x400b927	     0xf853b030000	                           jne 0x400bc68	      3867	ops.c	FUNCTION_48	IF_38	IF_59
0x400b92d	        0x48897238	             mov qword [rdx + 0x38], rsi	      3880	ops.c	FUNCTION_48	IF_38	ELSE_13
0x400b931	      0xe96cefffff	                           jmp 0x400a8a2	      3880	ops.c	FUNCTION_48	IF_38	ELSE_13
0x400b936	        0x89442478	             mov dword [rsp + 0x78], eax	      3880	ops.c	FUNCTION_48	IF_38	ELSE_13
0x400b93a	            0x89c8	                            mov eax, ecx	      3880	ops.c	FUNCTION_48	IF_38	ELSE_13
0x400b93c	            0x89d1	                            mov ecx, edx	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x400b93e	          0x4429f1	                           sub ecx, r14d	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x400b941	        0x894c2418	             mov dword [rsp + 0x18], ecx	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x400b945	            0x29d8	                            sub eax, ebx	      3787	ops.c	FUNCTION_48	IF_38	FOR_2	IF_51
0x400b947	    0xc68424880000	                mov byte [rsp + 0x88], 0	      3787	ops.c	FUNCTION_48	IF_38	FOR_2	IF_51
0x400b94f	    0x48c744246000	               mov qword [rsp + 0x60], 0	      3787	ops.c	FUNCTION_48	IF_38	FOR_2	IF_51
0x400b958	        0x89442468	             mov dword [rsp + 0x68], eax	      3787	ops.c	FUNCTION_48	IF_38	FOR_2	IF_51
0x400b95c	        0x89442428	             mov dword [rsp + 0x28], eax	      3787	ops.c	FUNCTION_48	IF_38	FOR_2	IF_51
0x400b960	    0xc74424400000	               mov dword [rsp + 0x40], 0	      3761	ops.c	FUNCTION_48	IF_38	FOR_2
0x400b968	    0xc74424500000	               mov dword [rsp + 0x50], 0	      3763	ops.c	FUNCTION_48	IF_38	FOR_2
0x400b970	      0xe973fdffff	                           jmp 0x400b6e8	      3763	ops.c	FUNCTION_48	IF_38	FOR_2
0x400b975	          0x4963c5	                        movsxd rax, r13d	      3838	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57	CALL_55
0x400b978	    0x4c89b4249000	             mov qword [rsp + 0x90], r14	      3838	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57	CALL_55
0x400b980	          0x4d89fd	                            mov r13, r15	      3838	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57	CALL_55
0x400b983	      0x4889442438	             mov qword [rsp + 0x38], rax	      3838	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57	CALL_55
0x400b988	    0x440fb6bc2488	          movzx r15d, byte [rsp + 0x88] 	      3838	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57	CALL_55
0x400b991	    0x4c8bb4249800	            mov r14, qword [rsp + 0x98] 	      3838	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57	CALL_55
0x400b999	            0xeb15	                           jmp 0x400b9b0	      3838	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57	CALL_55
0x400b99b	       0xf1f440000	                   nop dword [rax + rax]	      3838	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57	CALL_55
0x400b9a0	          0x4584ff	                         test r15b, r15b	      3836	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x400b9a3	            0x752f	                           jne 0x400b9d4	      3836	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x400b9a5	        0x4983c501	                              add r13, 1	      3830	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x400b9a9	      0x4c396c2408	                cmp qword [rsp + 8], r13	      3830	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x400b9ae	            0x744a	                            je 0x400b9fa	      3830	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x400b9b0	        0x498b34ec	            mov rsi, qword [r12 + rbp*8]	        59	string3.h	FUNCTION_93	CALL_3
0x400b9b4	          0x4889da	                            mov rdx, rbx	        59	string3.h	FUNCTION_93	CALL_3
0x400b9b7	      0xe800000000	                          call 0x400b9bc	        59	string3.h	FUNCTION_93	CALL_3
0x400b9bc	          0x4889df	                            mov rdi, rbx	      3833	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x400b9bf	    0x4803bc24c000	             add rdi, qword [rsp + 0xc0]	      3833	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x400b9c7	          0x4d39f5	                            cmp r13, r14	      3836	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x400b9ca	    0x4889bc24c000	             mov qword [rsp + 0xc0], rdi	      3833	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x400b9d2	            0x7dcc	                           jge 0x400b9a0	      3836	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x400b9d4	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	        90	string3.h	FUNCTION_95	CALL_6
0x400b9d9	      0xbe20000000	                           mov esi, 0x20	        90	string3.h	FUNCTION_95	CALL_6
0x400b9de	      0xe800000000	                          call 0x400b9e3	        90	string3.h	FUNCTION_95	CALL_6
0x400b9e3	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      3839	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x400b9e8	    0x4803bc24c000	             add rdi, qword [rsp + 0xc0]	      3839	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x400b9f0	    0x4889bc24c000	             mov qword [rsp + 0xc0], rdi	      3839	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x400b9f8	            0xebab	                           jmp 0x400b9a5	      3839	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x400b9fa	    0x4c8bb4249000	            mov r14, qword [rsp + 0x90] 	      3839	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x400ba02	      0xe91cfeffff	                           jmp 0x400b823	      3839	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x400ba07	          0x803a00	                       cmp byte [rdx], 0	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x400ba0a	     0xf9584248800	                 setne byte [rsp + 0x88]	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x400ba12	    0x48c744246000	               mov qword [rsp + 0x60], 0	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x400ba1b	    0xc74424280000	               mov dword [rsp + 0x28], 0	      3784	ops.c	FUNCTION_48	IF_38	FOR_2
0x400ba23	    0xc74424400000	               mov dword [rsp + 0x40], 0	      3761	ops.c	FUNCTION_48	IF_38	FOR_2
0x400ba2b	    0xc74424680000	               mov dword [rsp + 0x68], 0	      3760	ops.c	FUNCTION_48	IF_38	FOR_2
0x400ba33	    0xc74424500000	               mov dword [rsp + 0x50], 0	      3763	ops.c	FUNCTION_48	IF_38	FOR_2
0x400ba3b	      0xe9a8fcffff	                           jmp 0x400b6e8	      3763	ops.c	FUNCTION_48	IF_38	FOR_2
0x400ba40	    0xc68424880000	                mov byte [rsp + 0x88], 1	      3763	ops.c	FUNCTION_48	IF_38	FOR_2
0x400ba48	            0xebc8	                           jmp 0x400ba12	      3763	ops.c	FUNCTION_48	IF_38	FOR_2
0x400ba4a	         0x3442440	             add eax, dword [rsp + 0x40]	      3763	ops.c	FUNCTION_48	IF_38	FOR_2
0x400ba4e	    0xc68424880000	                mov byte [rsp + 0x88], 1	      3798	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_54
0x400ba56	    0x48c744246001	               mov qword [rsp + 0x60], 1	      3798	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_54
0x400ba5f	    0xc74424500100	               mov dword [rsp + 0x50], 1	      3793	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x400ba67	        0x89442428	             mov dword [rsp + 0x28], eax	      3793	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x400ba6b	      0xe978fcffff	                           jmp 0x400b6e8	      3793	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x400ba70	        0x8b5c2418	            mov ebx, dword [rsp + 0x18] 	      3796	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x400ba74	          0x4c89f7	                            mov rdi, r14	      3796	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x400ba77	          0x4863f3	                         movsxd rsi, ebx	      3796	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x400ba7a	          0x4c01f6	                            add rsi, r14	      3796	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x400ba7d	    0xff1500000000	                 call qword [0x0400ba83]	      3796	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x400ba83	            0x89d9	                            mov ecx, ebx	      3796	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x400ba85	            0x29c1	                            sub ecx, eax	      3796	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x400ba87	        0x894c2418	             mov dword [rsp + 0x18], ecx	      3796	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x400ba8b	      0xe918fcffff	                           jmp 0x400b6a8	      3796	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x400ba90	      0x488b442470	            mov rax, qword [rsp + 0x70] 	      3923	ops.c	FUNCTION_48	ELSE_14	ELSE_16	IF_66
0x400ba95	        0x4883e801	                              sub rax, 1	      3923	ops.c	FUNCTION_48	ELSE_14	ELSE_16	IF_66
0x400ba99	    0x48898424c800	             mov qword [rsp + 0xc8], rax	      3923	ops.c	FUNCTION_48	ELSE_14	ELSE_16	IF_66
0x400baa1	      0xe9a2f2ffff	                           jmp 0x400ad48	      3923	ops.c	FUNCTION_48	ELSE_14	ELSE_16	IF_66
0x400baa6	    0x488b05000000	            mov rax, qword [0x0400baad] 	      4103	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22	IF_93
0x400baad	      0xbf05000000	                              mov edi, 5	      4104	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22	IF_93	CALL_100
0x400bab2	        0x48895838	             mov qword [rax + 0x38], rbx	      4103	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22	IF_93
0x400bab6	      0xe800000000	                          call 0x400babb	      4104	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22	IF_93	CALL_100
0x400babb	      0xe9e2edffff	                           jmp 0x400a8a2	      4104	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22	IF_93	CALL_100
0x400bac0	      0x837c240801	                  cmp dword [rsp + 8], 1	      4069	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88	IF_89
0x400bac5	    0xc782e8110000	            mov dword [rdx + 0x11e8], 0 	      4068	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88
0x400bacf	    0x488b82e01100	          mov rax, qword [rdx + 0x11e0] 	      4070	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88	IF_89
0x400bad6	     0xf85fdf5ffff	                           jne 0x400b0d9	      4069	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88	IF_89
0x400badc	        0x4883c001	                              add rax, 1	      4070	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88	IF_89
0x400bae0	    0x488982e01100	          mov qword [rdx + 0x11e0], rax 	      4070	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88	IF_89
0x400bae7	      0xe9edf5ffff	                           jmp 0x400b0d9	      4070	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88	IF_89
0x400baec	          0x4c89f2	                            mov rdx, r14	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x400baef	    0xc74424180000	               mov dword [rsp + 0x18], 0	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x400baf7	            0x31db	                            xor ebx, ebx	      3762	ops.c	FUNCTION_48	IF_38	FOR_2
0x400baf9	      0xe979fbffff	                           jmp 0x400b677	      3762	ops.c	FUNCTION_48	IF_38	FOR_2
0x400bafe	        0x4883e801	                              sub rax, 1	      3669	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_32
0x400bb02	        0x48894338	             mov qword [rbx + 0x38], rax	      3669	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_32
0x400bb06	      0xe9c6f1ffff	                           jmp 0x400acd1	      3669	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_32
0x400bb0b	    0xc74424180000	               mov dword [rsp + 0x18], 0	      3776	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x400bb13	            0x31db	                            xor ebx, ebx	      3762	ops.c	FUNCTION_48	IF_38	FOR_2
0x400bb15	      0xe92bfeffff	                           jmp 0x400b945	      3762	ops.c	FUNCTION_48	IF_38	FOR_2
0x400bb1a	      0x448b6c2420	           mov r13d, dword [rsp + 0x20] 	      3762	ops.c	FUNCTION_48	IF_38	FOR_2
0x400bb1f	      0xe996edffff	                           jmp 0x400a8ba	      3762	ops.c	FUNCTION_48	IF_38	FOR_2
0x400bb24	    0x488b1d000000	            mov rbx, qword [0x0400bb2b] 	      3762	ops.c	FUNCTION_48	IF_38	FOR_2
0x400bb2b	      0x448b442428	            mov r8d, dword [rsp + 0x28] 	      3887	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61
0x400bb30	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      3699	ops.c	FUNCTION_48
0x400bb34	          0x8b5340	            mov edx, dword [rbx + 0x40] 	      3700	ops.c	FUNCTION_48
0x400bb37	          0x4585c0	                           test r8d, r8d	      3887	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61
0x400bb3a	    0x48898424c800	             mov qword [rsp + 0xc8], rax	      3699	ops.c	FUNCTION_48
0x400bb42	    0x899424b00000	             mov dword [rsp + 0xb0], edx	      3700	ops.c	FUNCTION_48
0x400bb49	     0xf8442eaffff	                            je 0x400a591	      3887	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61
0x400bb4f	    0x8994248c0000	             mov dword [rsp + 0x8c], edx	      3700	ops.c	FUNCTION_48
0x400bb56	      0x4889442470	             mov qword [rsp + 0x70], rax	      3699	ops.c	FUNCTION_48
0x400bb5b	      0xe9ddf1ffff	                           jmp 0x400ad3d	      3699	ops.c	FUNCTION_48
0x400bb60	      0x448b74246c	           mov r14d, dword [rsp + 0x6c] 	      3699	ops.c	FUNCTION_48
0x400bb65	      0x4403742418	            add r14d, dword [rsp + 0x18]	      3699	ops.c	FUNCTION_48
0x400bb6a	    0x488b05000000	            mov rax, qword [0x0400bb71] 	      3699	ops.c	FUNCTION_48
0x400bb71	    0x448bac248c00	           mov r13d, dword [rsp + 0x8c] 	      3699	ops.c	FUNCTION_48
0x400bb79	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3699	ops.c	FUNCTION_48
0x400bb7d	        0x418d5eff	                      lea ebx, [r14 - 1]	      3699	ops.c	FUNCTION_48
0x400bb81	      0xe941fdffff	                           jmp 0x400b8c7	      3699	ops.c	FUNCTION_48
0x400bb86	      0xe800000000	                          call 0x400bb8b	      3891	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	CALL_62
0x400bb8b	            0x85c0	                           test eax, eax	      3891	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	CALL_62
0x400bb8d	            0x743c	                            je 0x400bbcb	      3891	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	CALL_62
0x400bb8f	    0x8b0d00000000	            mov ecx, dword [0x0400bb95] 	      3894	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63
0x400bb95	            0x85c9	                           test ecx, ecx	      3894	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63
0x400bb97	     0xf85be030000	                           jne 0x400bf5b	      3894	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63
0x400bb9d	        0x8b5c2410	            mov ebx, dword [rsp + 0x10] 	      3910	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x400bba1	    0x838424b00000	               add dword [rsp + 0xb0], 1	      3909	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15
0x400bba9	            0x85db	                           test ebx, ebx	      3910	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x400bbab	            0x741e	                            je 0x400bbcb	      3910	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x400bbad	    0x488b1d000000	            mov rbx, qword [0x0400bbb4] 	      3912	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x400bbb4	    0x488b15000000	            mov rdx, qword [0x0400bbbb] 	      3913	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x400bbbb	        0x83434001	               add dword [rbx + 0x40], 1	      3912	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x400bbbf	    0x838208120000	             add dword [rdx + 0x1208], 1	      3913	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x400bbc6	      0xe9d8e9ffff	                           jmp 0x400a5a3	      3913	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x400bbcb	    0x488b15000000	            mov rdx, qword [0x0400bbd2] 	      3913	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x400bbd2	    0x488b1d000000	            mov rbx, qword [0x0400bbd9] 	      3913	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x400bbd9	      0xe9c5e9ffff	                           jmp 0x400a5a3	      3913	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x400bbde	      0x837c240801	                  cmp dword [rsp + 8], 1	      4127	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97	IF_98
0x400bbe3	    0xc74040000000	               mov dword [rax + 0x40], 0	      4126	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97
0x400bbea	            0x7505	                           jne 0x400bbf1	      4127	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97	IF_98
0x400bbec	      0x4883403801	               add qword [rax + 0x38], 1	      4128	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97	IF_98
0x400bbf1	      0xbf05000000	                              mov edi, 5	      4129	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97	CALL_101
0x400bbf6	      0xe800000000	                          call 0x400bbfb	      4129	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97	CALL_101
0x400bbfb	      0xe9a2ecffff	                           jmp 0x400a8a2	      4129	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97	CALL_101
0x400bc00	            0x85f6	                           test esi, esi	      3737	ops.c	FUNCTION_48	IF_38	IF_43
0x400bc02	     0xf8eb7010000	                           jle 0x400bdbf	      3737	ops.c	FUNCTION_48	IF_38	IF_43
0x400bc08	            0x85db	                           test ebx, ebx	      3740	ops.c	FUNCTION_48	IF_38	IF_43	IF_44
0x400bc0a	            0x750f	                           jne 0x400bc1b	      3740	ops.c	FUNCTION_48	IF_38	IF_43	IF_44
0x400bc0c	          0x4084ed	                           test bpl, bpl	      3740	ops.c	FUNCTION_48	IF_38	IF_43	IF_44
0x400bc0f	            0x740a	                            je 0x400bc1b	      3740	ops.c	FUNCTION_48	IF_38	IF_43	IF_44
0x400bc11	          0x83c001	                              add eax, 1	      3741	ops.c	FUNCTION_48	IF_38	IF_43	IF_44
0x400bc14	    0x898424b00000	             mov dword [rsp + 0xb0], eax	      3741	ops.c	FUNCTION_48	IF_38	IF_43	IF_44
0x400bc1b	      0x837c240801	                  cmp dword [rsp + 8], 1	      3742	ops.c	FUNCTION_48	IF_38	IF_43	IF_45
0x400bc20	            0x740b	                            je 0x400bc2d	      3742	ops.c	FUNCTION_48	IF_38	IF_43	IF_45
0x400bc22	      0x807c241800	                cmp byte [rsp + 0x18], 0	      3742	ops.c	FUNCTION_48	IF_38	IF_43	IF_45
0x400bc27	            0x7404	                            je 0x400bc2d	      3742	ops.c	FUNCTION_48	IF_38	IF_43	IF_45
0x400bc29	        0x83424001	               add dword [rdx + 0x40], 1	      3743	ops.c	FUNCTION_48	IF_38	IF_43	IF_45
0x400bc2d	          0x83fb09	                              cmp ebx, 9	      3744	ops.c	FUNCTION_48	IF_38	IF_43	IF_46
0x400bc30	     0xf8539f9ffff	                           jne 0x400b56f	      3744	ops.c	FUNCTION_48	IF_38	IF_43	IF_46
0x400bc36	      0x837c2408ff	 cmp dword [rsp + 8], 0xffffffffffffffff	      3746	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_47
0x400bc3b	     0xf8495030000	                            je 0x400bfd6	      3746	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_47
0x400bc41	      0x837c240801	                  cmp dword [rsp + 8], 1	      3748	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_48
0x400bc46	     0xf8523f9ffff	                           jne 0x400b56f	      3748	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_48
0x400bc4c	          0x83e801	                              sub eax, 1	      3748	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_48
0x400bc4f	    0x3b8424bc0000	            cmp eax, dword [rsp + 0xbc] 	      3748	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_48
0x400bc56	     0xf8513f9ffff	                           jne 0x400b56f	      3748	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_48
0x400bc5c	        0x83424001	               add dword [rdx + 0x40], 1	      3749	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_48
0x400bc60	      0xe90af9ffff	                           jmp 0x400b56f	      3749	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_48
0x400bc65	           0xf1f00	                         nop dword [rax]	      3749	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_48
0x400bc68	    0x488b88001200	          mov rcx, qword [rax + 0x1200] 	      3871	ops.c	FUNCTION_48	IF_38	IF_59
0x400bc6f	    0x488b98081200	          mov rbx, qword [rax + 0x1208] 	      3871	ops.c	FUNCTION_48	IF_38	IF_59
0x400bc76	        0x48894a38	             mov qword [rdx + 0x38], rcx	      3871	ops.c	FUNCTION_48	IF_38	IF_59
0x400bc7a	        0x48895a40	             mov qword [rdx + 0x40], rbx	      3871	ops.c	FUNCTION_48	IF_38	IF_59
0x400bc7e	        0x44897240	            mov dword [rdx + 0x40], r14d	      3872	ops.c	FUNCTION_48	IF_38	IF_59
0x400bc82	      0xe800000000	                          call 0x400bc87	      3875	ops.c	FUNCTION_48	IF_38	IF_59	CALL_61
0x400bc87	          0x4889c7	                            mov rdi, rax	      3875	ops.c	FUNCTION_48	IF_38	IF_59	CALL_61
0x400bc8a	      0xe800000000	                          call 0x400bc8f	      3875	ops.c	FUNCTION_48	IF_38	IF_59	CALL_61
0x400bc8f	    0x488b15000000	            mov rdx, qword [0x0400bc96] 	      3876	ops.c	FUNCTION_48	IF_38	IF_59	IF_60
0x400bc96	          0x3b4240	            cmp eax, dword [rdx + 0x40] 	      3876	ops.c	FUNCTION_48	IF_38	IF_59	IF_60
0x400bc99	     0xf8d03ecffff	                           jge 0x400a8a2	      3876	ops.c	FUNCTION_48	IF_38	IF_59	IF_60
0x400bc9f	      0xe90cf5ffff	                           jmp 0x400b1b0	      3876	ops.c	FUNCTION_48	IF_38	IF_59	IF_60
0x400bca4	        0x488b5500	                    mov rdx, qword [rbp]	      4111	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	IF_96
0x400bca8	    0x488b05000000	            mov rax, qword [0x0400bcaf] 	      4112	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	IF_96
0x400bcaf	          0x4839d3	                            cmp rbx, rdx	      4111	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	IF_96
0x400bcb2	     0xf8cd6000000	                            jl 0x400bd8e	      4111	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	IF_96
0x400bcb8	        0x48895038	             mov qword [rax + 0x38], rdx	      4112	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	IF_96
0x400bcbc	    0xc74040000000	               mov dword [rax + 0x40], 0	      4115	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	ELSE_24
0x400bcc3	      0xe9daebffff	                           jmp 0x400a8a2	      4115	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	ELSE_24
0x400bcc8	    0x488b15000000	            mov rdx, qword [0x0400bccf] 	      3722	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x400bccf	      0x4889542420	             mov qword [rsp + 0x20], rdx	      3722	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x400bcd4	      0xe800000000	                          call 0x400bcd9	      3722	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x400bcd9	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	      3722	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x400bcde	          0x4889c7	                            mov rdi, rax	      3722	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x400bce1	            0xffd2	                                call rdx	      3722	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x400bce3	    0x488b15000000	            mov rdx, qword [0x0400bcea] 	      3722	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x400bcea	    0x8b0d00000000	            mov ecx, dword [0x0400bcf0] 	      3722	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x400bcf0	           0x14240	             add dword [rdx + 0x40], eax	      3722	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x400bcf3	      0xe958f8ffff	                           jmp 0x400b550	      3722	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x400bcf8	          0x803800	                       cmp byte [rax], 0	      3603	ops.c	FUNCTION_48	IF_15	IF_16	IF_18
0x400bcfb	     0xf8438f5ffff	                            je 0x400b239	      3603	ops.c	FUNCTION_48	IF_15	IF_16	IF_18
0x400bd01	    0x8b3500000000	            mov esi, dword [0x0400bd07] 	      3604	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x400bd07	      0xb801000000	                              mov eax, 1	      3604	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x400bd0c	            0x85f6	                           test esi, esi	      3604	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x400bd0e	     0xf8506020000	                           jne 0x400bf1a	      3604	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x400bd14	          0x4801c3	                            add rbx, rax	      3604	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x400bd17	      0xe91df5ffff	                           jmp 0x400b239	      3604	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x400bd1c	    0x488d9424b000	                   lea rdx, [rsp + 0xb0]	      3732	ops.c	FUNCTION_48	IF_38	CALL_44
0x400bd24	    0x4c8d8424bc00	                    lea r8, [rsp + 0xbc]	      3732	ops.c	FUNCTION_48	IF_38	CALL_44
0x400bd2c	            0x31c9	                            xor ecx, ecx	      3732	ops.c	FUNCTION_48	IF_38	CALL_44
0x400bd2e	      0xe800000000	                          call 0x400bd33	      3732	ops.c	FUNCTION_48	IF_38	CALL_44
0x400bd33	    0x8b8424b00000	            mov eax, dword [rsp + 0xb0] 	      3732	ops.c	FUNCTION_48	IF_38	CALL_44
0x400bd3a	    0x488b15000000	            mov rdx, qword [0x0400bd41] 	      3732	ops.c	FUNCTION_48	IF_38	CALL_44
0x400bd41	    0x8b0d00000000	            mov ecx, dword [0x0400bd47] 	      3732	ops.c	FUNCTION_48	IF_38	CALL_44
0x400bd47	      0xe90ef8ffff	                           jmp 0x400b55a	      3732	ops.c	FUNCTION_48	IF_38	CALL_44
0x400bd4c	    0x4c8d8424bc00	                    lea r8, [rsp + 0xbc]	      3714	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x400bd54	    0x488d9424b000	                   lea rdx, [rsp + 0xb0]	      3714	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x400bd5c	            0x31c9	                            xor ecx, ecx	      3714	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x400bd5e	      0xe800000000	                          call 0x400bd63	      3714	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x400bd63	      0xe9c0f7ffff	                           jmp 0x400b528	      3714	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x400bd68	      0x448b742470	           mov r14d, dword [rsp + 0x70] 	      3714	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x400bd6d	      0x4403742418	            add r14d, dword [rsp + 0x18]	      3714	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x400bd72	    0x488b05000000	            mov rax, qword [0x0400bd79] 	      3714	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x400bd79	    0x448bac248c00	           mov r13d, dword [rsp + 0x8c] 	      3714	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x400bd81	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3714	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x400bd85	        0x418d5eff	                      lea ebx, [r14 - 1]	      3714	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x400bd89	      0xe939fbffff	                           jmp 0x400b8c7	      3714	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x400bd8e	        0x4883c301	                              add rbx, 1	      4114	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	ELSE_24
0x400bd92	        0x48895838	             mov qword [rax + 0x38], rbx	      4114	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	ELSE_24
0x400bd96	      0xe921ffffff	                           jmp 0x400bcbc	      4114	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	ELSE_24
0x400bd9b	          0x803b00	                       cmp byte [rbx], 0	      3613	ops.c	FUNCTION_48	IF_15	IF_16	IF_20
0x400bd9e	     0xf84f3f4ffff	                            je 0x400b297	      3613	ops.c	FUNCTION_48	IF_15	IF_16	IF_20
0x400bda4	    0x8b0d00000000	            mov ecx, dword [0x0400bdaa] 	      3614	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x400bdaa	      0xb801000000	                              mov eax, 1	      3614	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x400bdaf	            0x85c9	                           test ecx, ecx	      3614	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x400bdb1	     0xf8510010000	                           jne 0x400bec7	      3614	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x400bdb7	          0x4801c3	                            add rbx, rax	      3614	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x400bdba	      0xe9d8f4ffff	                           jmp 0x400b297	      3614	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x400bdbf	    0x8b8c24bc0000	            mov ecx, dword [rsp + 0xbc] 	      3738	ops.c	FUNCTION_48	IF_38	IF_43
0x400bdc6	          0x394a40	            cmp dword [rdx + 0x40], ecx 	      3738	ops.c	FUNCTION_48	IF_38	IF_43
0x400bdc9	     0xf85a0f7ffff	                           jne 0x400b56f	      3738	ops.c	FUNCTION_48	IF_38	IF_43
0x400bdcf	      0xe934feffff	                           jmp 0x400bc08	      3738	ops.c	FUNCTION_48	IF_38	IF_43
0x400bdd4	         0xf1f4000	                         nop dword [rax]	      3738	ops.c	FUNCTION_48	IF_38	IF_43
0x400bdd8	      0xe800000000	                          call 0x400bddd	      3694	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37	CALL_37
0x400bddd	            0x85c0	                           test eax, eax	      3694	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37	CALL_37
0x400bddf	     0xf8467e7ffff	                            je 0x400a54c	      3694	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37	CALL_37
0x400bde5	    0x488b1d000000	            mov rbx, qword [0x0400bdec] 	      3694	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37	CALL_37
0x400bdec	      0xe979e7ffff	                           jmp 0x400a56a	      3694	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37	CALL_37
0x400bdf1	      0x837c240801	                  cmp dword [rsp + 8], 1	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x400bdf6	    0x488b1d000000	            mov rbx, qword [0x0400bdfd] 	      3688	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x400bdfd	     0xf84f6000000	                            je 0x400bef9	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x400be03	        0x448b5344	           mov r10d, dword [rbx + 0x44] 	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x400be07	          0x4585d2	                         test r10d, r10d	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x400be0a	           0xf9fc0	                                 setg al	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x400be0d	            0x84c0	                             test al, al	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x400be0f	     0xf85cc000000	                           jne 0x400bee1	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x400be15	    0xc74344000000	               mov dword [rbx + 0x44], 0	      3692	ops.c	FUNCTION_48	IF_34	IF_35	ELSE_7
0x400be1c	      0xe949e7ffff	                           jmp 0x400a56a	      3692	ops.c	FUNCTION_48	IF_34	IF_35	ELSE_7
0x400be21	    0xc78424880000	               mov dword [rsp + 0x88], 0	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x400be2c	      0xe98ff2ffff	                           jmp 0x400b0c0	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x400be31	          0x83f904	                              cmp ecx, 4	      3726	ops.c	FUNCTION_48	IF_38	IF_39	ELSE_10	IF_42
0x400be34	    0x488b15000000	            mov rdx, qword [0x0400be3b] 	      3726	ops.c	FUNCTION_48	IF_38	IF_39	ELSE_10	IF_42
0x400be3b	     0xf8504f7ffff	                           jne 0x400b545	      3726	ops.c	FUNCTION_48	IF_38	IF_39	ELSE_10	IF_42
0x400be41	      0xe90af7ffff	                           jmp 0x400b550	      3726	ops.c	FUNCTION_48	IF_38	IF_39	ELSE_10	IF_42
0x400be46	      0xbbffffffff	                     mov ebx, 0xffffffff	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x400be4b	          0x4531f6	                          xor r14d, r14d	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x400be4e	      0xe974faffff	                           jmp 0x400b8c7	      3755	ops.c	FUNCTION_48	IF_38	FOR_2
0x400be53	            0x84c0	                             test al, al	      3635	ops.c	FUNCTION_48	IF_24
0x400be55	     0xf85f1ecffff	                           jne 0x400ab4c	      3635	ops.c	FUNCTION_48	IF_24
0x400be5b	      0x837c242802	               cmp dword [rsp + 0x28], 2	      3642	ops.c	FUNCTION_48	IF_25
0x400be60	            0x7550	                           jne 0x400beb2	      3642	ops.c	FUNCTION_48	IF_25
0x400be62	    0x488b05000000	            mov rax, qword [0x0400be69] 	      3644	ops.c	FUNCTION_48	IF_25
0x400be69	    0x488b15000000	            mov rdx, qword [0x0400be70] 	      3645	ops.c	FUNCTION_48	IF_25	IF_26
0x400be70	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3644	ops.c	FUNCTION_48	IF_25
0x400be74	          0x488b12	                    mov rdx, qword [rdx]	      3645	ops.c	FUNCTION_48	IF_25	IF_26
0x400be77	      0x498d740601	                lea rsi, [r14 + rax + 1]	      3644	ops.c	FUNCTION_48	IF_25
0x400be7c	          0x4839d6	                            cmp rsi, rdx	      3645	ops.c	FUNCTION_48	IF_25	IF_26
0x400be7f	    0x4889b424c800	             mov qword [rsp + 0xc8], rsi	      3644	ops.c	FUNCTION_48	IF_25
0x400be87	            0x7e0c	                           jle 0x400be95	      3645	ops.c	FUNCTION_48	IF_25	IF_26
0x400be89	        0x488d7201	                      lea rsi, [rdx + 1]	      3646	ops.c	FUNCTION_48	IF_25	IF_26
0x400be8d	    0x4889b424c800	             mov qword [rsp + 0xc8], rsi	      3646	ops.c	FUNCTION_48	IF_25	IF_26
0x400be95	        0x488d78ff	                      lea rdi, [rax - 1]	      3647	ops.c	FUNCTION_48	IF_25	IF_27	CALL_26
0x400be99	      0xe800000000	                          call 0x400be9e	      3647	ops.c	FUNCTION_48	IF_25	IF_27	CALL_26
0x400be9e	            0x85c0	                           test eax, eax	      3647	ops.c	FUNCTION_48	IF_25	IF_27	CALL_26
0x400bea0	     0xf8414eaffff	                            je 0x400a8ba	      3647	ops.c	FUNCTION_48	IF_25	IF_27	CALL_26
0x400bea6	    0x488b1d000000	            mov rbx, qword [0x0400bead] 	      3647	ops.c	FUNCTION_48	IF_25	IF_27	CALL_26
0x400bead	      0xe944eeffff	                           jmp 0x400acf6	      3647	ops.c	FUNCTION_48	IF_25	IF_27	CALL_26
0x400beb2	      0x837c242801	               cmp dword [rsp + 0x28], 1	      3650	ops.c	FUNCTION_48	ELSE_3	IF_28
0x400beb7	     0xf8526e6ffff	                           jne 0x400a4e3	      3650	ops.c	FUNCTION_48	ELSE_3	IF_28
0x400bebd	      0xe985edffff	                           jmp 0x400ac47	      3650	ops.c	FUNCTION_48	ELSE_3	IF_28
0x400bec2	      0xe800000000	                          call 0x400bec7	      4149	ops.c	FUNCTION_48
0x400bec7	      0x4889542408	                mov qword [rsp + 8], rdx	      4149	ops.c	FUNCTION_48
0x400becc	          0x4889df	                            mov rdi, rbx	      3614	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x400becf	    0xff1500000000	                 call qword [0x0400bed5]	      3614	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x400bed5	      0x488b542408	                mov rdx, qword [rsp + 8]	      3614	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x400beda	            0x4898	                                    cdqe	      3614	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x400bedc	      0xe9d6feffff	                           jmp 0x400bdb7	      3614	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x400bee1	      0xe800000000	                          call 0x400bee6	      3690	ops.c	FUNCTION_48	IF_34	IF_35	CALL_36
0x400bee6	            0x89c7	                            mov edi, eax	      3690	ops.c	FUNCTION_48	IF_34	IF_35	CALL_36
0x400bee8	      0xe800000000	                          call 0x400beed	      3690	ops.c	FUNCTION_48	IF_34	IF_35	CALL_36
0x400beed	    0x488b1d000000	            mov rbx, qword [0x0400bef4] 	      3690	ops.c	FUNCTION_48	IF_34	IF_35	CALL_36
0x400bef4	      0xe971e6ffff	                           jmp 0x400a56a	      3690	ops.c	FUNCTION_48	IF_34	IF_35	CALL_36
0x400bef9	    0x488b05000000	            mov rax, qword [0x0400bf00] 	      3688	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x400bf00	        0x48635344	         movsxd rdx, dword [rbx + 0x44] 	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x400bf04	    0x488b80a81500	          mov rax, qword [rax + 0x15a8] 	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x400bf0b	        0x4883e801	                              sub rax, 1	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x400bf0f	          0x4839c2	                            cmp rdx, rax	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x400bf12	           0xf9cc0	                                 setl al	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x400bf15	      0xe9f3feffff	                           jmp 0x400be0d	      3687	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x400bf1a	          0x4889df	                            mov rdi, rbx	      3604	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x400bf1d	    0xff1500000000	                 call qword [0x0400bf23]	      3604	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x400bf23	            0x4898	                                    cdqe	      3604	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x400bf25	      0xe9eafdffff	                           jmp 0x400bd14	      3604	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x400bf2a	        0x488b4338	            mov rax, qword [rbx + 0x38] 	      3924	ops.c	FUNCTION_48	ELSE_14
0x400bf2e	      0x4889442470	             mov qword [rsp + 0x70], rax	      3924	ops.c	FUNCTION_48	ELSE_14
0x400bf33	          0x8b4340	            mov eax, dword [rbx + 0x40] 	      3924	ops.c	FUNCTION_48	ELSE_14
0x400bf36	    0x8984248c0000	             mov dword [rsp + 0x8c], eax	      3924	ops.c	FUNCTION_48	ELSE_14
0x400bf3d	      0xe906eeffff	                           jmp 0x400ad48	      3924	ops.c	FUNCTION_48	ELSE_14
0x400bf42	      0x48895c2430	             mov qword [rsp + 0x30], rbx	      3924	ops.c	FUNCTION_48	ELSE_14
0x400bf47	    0x448bac249000	           mov r13d, dword [rsp + 0x90] 	      3924	ops.c	FUNCTION_48	ELSE_14
0x400bf4f	    0x488b15000000	            mov rdx, qword [0x0400bf56] 	      3924	ops.c	FUNCTION_48	ELSE_14
0x400bf56	      0xe977f1ffff	                           jmp 0x400b0d2	      3924	ops.c	FUNCTION_48	ELSE_14
0x400bf5b	    0x488b1d000000	            mov rbx, qword [0x0400bf62] 	      3896	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	CALL_63
0x400bf62	      0xe800000000	                          call 0x400bf67	      3896	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	CALL_63
0x400bf67	          0x4889c7	                            mov rdi, rax	      3896	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	CALL_63
0x400bf6a	            0xffd3	                                call rbx	      3896	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	CALL_63
0x400bf6c	        0x8b542410	            mov edx, dword [rsp + 0x10] 	      3900	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x400bf70	     0x18424b00000	             add dword [rsp + 0xb0], eax	      3899	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63
0x400bf77	            0x85d2	                           test edx, edx	      3900	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x400bf79	     0xf844cfcffff	                            je 0x400bbcb	      3900	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x400bf7f	    0x488b1d000000	            mov rbx, qword [0x0400bf86] 	      3902	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x400bf86	    0x488b15000000	            mov rdx, qword [0x0400bf8d] 	      3903	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x400bf8d	           0x14340	             add dword [rbx + 0x40], eax	      3902	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x400bf90	     0x18208120000	           add dword [rdx + 0x1208], eax	      3903	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x400bf96	      0xe908e6ffff	                           jmp 0x400a5a3	      3903	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x400bf9b	      0x4c396c2410	            cmp qword [rsp + 0x10], r13 	      4038	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_82
0x400bfa0	     0xf85deeeffff	                           jne 0x400ae84	      4038	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_82
0x400bfa6	          0x4889c7	                            mov rdi, rax	      4039	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_89
0x400bfa9	    0x48898424a800	             mov qword [rsp + 0xa8], rax	      4039	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_89
0x400bfb1	      0xe800000000	                          call 0x400bfb6	      4039	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_89
0x400bfb6	    0x488b9424a800	            mov rdx, qword [rsp + 0xa8] 	      4039	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_89
0x400bfbe	    0x898424880000	             mov dword [rsp + 0x88], eax	      4039	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_89
0x400bfc5	      0xe9baeeffff	                           jmp 0x400ae84	      4039	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_89
0x400bfca	        0x8b4c2468	            mov ecx, dword [rsp + 0x68] 	      3852	ops.c	FUNCTION_48	IF_38	FOR_2	IF_58
0x400bfce	           0x14840	             add dword [rax + 0x40], ecx	      3852	ops.c	FUNCTION_48	IF_38	FOR_2	IF_58
0x400bfd1	      0xe9c9f8ffff	                           jmp 0x400b89f	      3852	ops.c	FUNCTION_48	IF_38	FOR_2	IF_58
0x400bfd6	          0x8b4240	            mov eax, dword [rdx + 0x40] 	      3746	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_47
0x400bfd9	            0x85c0	                           test eax, eax	      3746	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_47
0x400bfdb	     0xf848ef5ffff	                            je 0x400b56f	      3746	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_47
0x400bfe1	          0x83e801	                              sub eax, 1	      3747	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_47
0x400bfe4	          0x894240	             mov dword [rdx + 0x40], eax	      3747	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_47
0x400bfe7	      0xe983f5ffff	                           jmp 0x400b56f	      3747	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_47
do_addsub	SWITCH,0:DO,0:ELSE,15:functions,0:FOR,2:IF,53:WHILE,8:CALL,47	911
0x4000460	            0x4157	                                push r15	      5627	ops.c	FUNCTION_67
0x4000462	            0x4156	                                push r14	      5627	ops.c	FUNCTION_67
0x4000464	            0x4155	                                push r13	      5627	ops.c	FUNCTION_67
0x4000466	            0x4154	                                push r12	      5627	ops.c	FUNCTION_67
0x4000468	          0x4989f5	                            mov r13, rsi	      5627	ops.c	FUNCTION_67
0x400046b	              0x55	                                push rbp	      5627	ops.c	FUNCTION_67
0x400046c	              0x53	                                push rbx	      5627	ops.c	FUNCTION_67
0x400046d	      0xbe78000000	                           mov esi, 0x78	      5653	ops.c	FUNCTION_67	CALL_1
0x4000472	    0x4881ecb80000	                           sub rsp, 0xb8	      5627	ops.c	FUNCTION_67
0x4000479	    0x64488b042528	                mov rax, qword fs:[0x28]	      5627	ops.c	FUNCTION_67
0x4000482	    0x48898424a800	             mov qword [rsp + 0xa8], rax	      5627	ops.c	FUNCTION_67
0x400048a	            0x31c0	                            xor eax, eax	      5627	ops.c	FUNCTION_67
0x400048c	    0x8b0500000000	            mov eax, dword [0x04000492] 	      5646	ops.c	FUNCTION_67
0x4000492	        0x8954244c	             mov dword [rsp + 0x4c], edx	      5627	ops.c	FUNCTION_67
0x4000496	        0x897c2434	             mov dword [rsp + 0x34], edi	      5627	ops.c	FUNCTION_67
0x400049a	      0x48894c2438	             mov qword [rsp + 0x38], rcx	      5627	ops.c	FUNCTION_67
0x400049f	        0x89442428	             mov dword [rsp + 0x28], eax	      5646	ops.c	FUNCTION_67
0x40004a3	    0x488b05000000	            mov rax, qword [0x040004aa] 	      5648	ops.c	FUNCTION_67
0x40004aa	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      5648	ops.c	FUNCTION_67
0x40004ae	      0x4889542420	             mov qword [rsp + 0x20], rdx	      5648	ops.c	FUNCTION_67
0x40004b3	          0x8b5040	            mov edx, dword [rax + 0x40] 	      5648	ops.c	FUNCTION_67
0x40004b6	          0x8b4044	            mov eax, dword [rax + 0x44] 	      5648	ops.c	FUNCTION_67
0x40004b9	        0x8954242c	             mov dword [rsp + 0x2c], edx	      5648	ops.c	FUNCTION_67
0x40004bd	        0x89442430	             mov dword [rsp + 0x30], eax	      5648	ops.c	FUNCTION_67
0x40004c1	    0x488b05000000	            mov rax, qword [0x040004c8] 	      5653	ops.c	FUNCTION_67	CALL_1
0x40004c8	    0x488bb8481500	          mov rdi, qword [rax + 0x1548] 	      5653	ops.c	FUNCTION_67	CALL_1
0x40004cf	      0xe800000000	                          call 0x40004d4	      5653	ops.c	FUNCTION_67	CALL_1
0x40004d4	      0x4889442418	             mov qword [rsp + 0x18], rax	      5653	ops.c	FUNCTION_67	CALL_1
0x40004d9	    0x488b05000000	            mov rax, qword [0x040004e0] 	      5654	ops.c	FUNCTION_67	CALL_2
0x40004e0	      0xbe6f000000	                           mov esi, 0x6f	      5654	ops.c	FUNCTION_67	CALL_2
0x40004e5	    0x488bb8481500	          mov rdi, qword [rax + 0x1548] 	      5654	ops.c	FUNCTION_67	CALL_2
0x40004ec	      0xe800000000	                          call 0x40004f1	      5654	ops.c	FUNCTION_67	CALL_2
0x40004f1	      0x4889442440	             mov qword [rsp + 0x40], rax	      5654	ops.c	FUNCTION_67	CALL_2
0x40004f6	    0x488b05000000	            mov rax, qword [0x040004fd] 	      5655	ops.c	FUNCTION_67	CALL_3
0x40004fd	      0xbe62000000	                           mov esi, 0x62	      5655	ops.c	FUNCTION_67	CALL_3
0x4000502	    0x488bb8481500	          mov rdi, qword [rax + 0x1548] 	      5655	ops.c	FUNCTION_67	CALL_3
0x4000509	      0xe800000000	                          call 0x400050e	      5655	ops.c	FUNCTION_67	CALL_3
0x400050e	      0x4889442410	             mov qword [rsp + 0x10], rax	      5655	ops.c	FUNCTION_67	CALL_3
0x4000513	          0x4989c6	                            mov r14, rax	      5655	ops.c	FUNCTION_67	CALL_3
0x4000516	    0x488b05000000	            mov rax, qword [0x0400051d] 	      5656	ops.c	FUNCTION_67	CALL_4
0x400051d	      0xbe70000000	                           mov esi, 0x70	      5656	ops.c	FUNCTION_67	CALL_4
0x4000522	    0x488bb8481500	          mov rdi, qword [rax + 0x1548] 	      5656	ops.c	FUNCTION_67	CALL_4
0x4000529	      0xe800000000	                          call 0x400052e	      5656	ops.c	FUNCTION_67	CALL_4
0x400052e	        0x498b4d00	                    mov rcx, qword [r13]	      5658	ops.c	FUNCTION_67
0x4000532	      0x4889442408	                mov qword [rsp + 8], rax	      5656	ops.c	FUNCTION_67	CALL_4
0x4000537	    0x488b05000000	            mov rax, qword [0x0400053e] 	      5658	ops.c	FUNCTION_67
0x400053e	        0x498b5d08	                mov rbx, qword [r13 + 8]	      5658	ops.c	FUNCTION_67
0x4000542	        0x48894838	             mov qword [rax + 0x38], rcx	      5658	ops.c	FUNCTION_67
0x4000546	        0x498b7d00	                    mov rdi, qword [r13]	      5659	ops.c	FUNCTION_67	CALL_5
0x400054a	        0x48895840	             mov qword [rax + 0x40], rbx	      5658	ops.c	FUNCTION_67
0x400054e	      0xe800000000	                          call 0x4000553	      5659	ops.c	FUNCTION_67	CALL_5
0x4000553	          0x803800	                       cmp byte [rax], 0	      5662	ops.c	FUNCTION_67	IF_1
0x4000556	     0xf8404010000	                            je 0x4000660	      5662	ops.c	FUNCTION_67	IF_1
0x400055c	          0x4889c3	                            mov rbx, rax	      5662	ops.c	FUNCTION_67	IF_1
0x400055f	    0x8b0500000000	            mov eax, dword [0x04000565] 	      5668	ops.c	FUNCTION_67	IF_2
0x4000565	          0x4d85f6	                           test r14, r14	      5655	ops.c	FUNCTION_67	CALL_3
0x4000568	       0xf9544244b	                 setne byte [rsp + 0x4b]	      5655	ops.c	FUNCTION_67	CALL_3
0x400056d	        0x458b7508	               mov r14d, dword [r13 + 8]	      5660	ops.c	FUNCTION_67
0x4000571	            0x85c0	                           test eax, eax	      5668	ops.c	FUNCTION_67	IF_2
0x4000573	     0xf8497010000	                            je 0x4000710	      5668	ops.c	FUNCTION_67	IF_2
0x4000579	          0x4963ee	                        movsxd rbp, r14d	      5668	ops.c	FUNCTION_67	IF_2
0x400057c	        0x4c8d3c2b	                    lea r15, [rbx + rbp]	      5668	ops.c	FUNCTION_67	IF_2
0x4000580	        0x410fb63f	                   movzx edi, byte [r15]	      5668	ops.c	FUNCTION_67	IF_2
0x4000584	        0x8b742428	            mov esi, dword [rsp + 0x28] 	      5770	ops.c	FUNCTION_67	IF_12
0x4000588	            0x85f6	                           test esi, esi	      5770	ops.c	FUNCTION_67	IF_12
0x400058a	     0xf8490000000	                            je 0x4000620	      5770	ops.c	FUNCTION_67	IF_12
0x4000590	          0x4084ff	                           test dil, dil	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x4000593	        0x8b44244c	            mov eax, dword [rsp + 0x4c] 	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x4000597	     0xf84b7020000	                            je 0x4000854	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x400059d	            0x85c0	                           test eax, eax	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x400059f	     0xf8eaf020000	                           jle 0x4000854	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x40005a5	    0x48837c240800	                  cmp qword [rsp + 8], 0	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x40005ab	            0x7536	                           jne 0x40005e3	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x40005ad	      0xe93a010000	                           jmp 0x40006ec	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x40005b2	    0x660f1f440000	                    nop word [rax + rax]	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x40005b8	          0x4101c6	                           add r14d, eax	      5778	ops.c	FUNCTION_67	IF_12	WHILE_6
0x40005bb	        0x8b74244c	            mov esi, dword [rsp + 0x4c] 	      5779	ops.c	FUNCTION_67	IF_12	WHILE_6
0x40005bf	          0x4963ee	                        movsxd rbp, r14d	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x40005c2	        0x4c8d3c2b	                    lea r15, [rbx + rbp]	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x40005c6	            0x29c6	                            sub esi, eax	      5779	ops.c	FUNCTION_67	IF_12	WHILE_6
0x40005c8	        0x8974244c	             mov dword [rsp + 0x4c], esi	      5779	ops.c	FUNCTION_67	IF_12	WHILE_6
0x40005cc	        0x410fb63f	                   movzx edi, byte [r15]	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x40005d0	            0x89f0	                            mov eax, esi	      5779	ops.c	FUNCTION_67	IF_12	WHILE_6
0x40005d2	          0x4084ff	                           test dil, dil	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x40005d5	     0xf8479020000	                            je 0x4000854	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x40005db	            0x85f6	                           test esi, esi	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x40005dd	     0xf8e71020000	                           jle 0x4000854	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x40005e3	      0xe800000000	                          call 0x40005e8	      5773	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_17
0x40005e8	            0x85c0	                           test eax, eax	      5773	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_17
0x40005ea	     0xf8560020000	                           jne 0x4000850	      5773	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_17
0x40005f0	        0x410fb607	                   movzx eax, byte [r15]	      5774	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0x40005f4	          0x83e0df	                     and eax, 0xffffffdf	      5774	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0x40005f7	          0x83e841	                           sub eax, 0x41	      5774	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0x40005fa	            0x3c19	                            cmp al, 0x19	      5774	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0x40005fc	     0xf864e020000	                           jbe 0x4000850	      5774	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0x4000602	    0x8b1500000000	            mov edx, dword [0x04000608] 	      5776	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0x4000608	      0xb801000000	                              mov eax, 1	      5776	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0x400060d	            0x85d2	                           test edx, edx	      5776	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0x400060f	            0x74a7	                            je 0x40005b8	      5776	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0x4000611	          0x4c89ff	                            mov rdi, r15	      5776	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0x4000614	    0xff1500000000	                 call qword [0x0400061a]	      5776	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0x400061a	            0xeb9c	                           jmp 0x40005b8	      5776	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0x400061c	         0xf1f4000	                         nop dword [rax]	      5776	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0x4000620	          0x4531db	                          xor r11d, r11d	      5776	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0x4000623	    0xc74424100100	               mov dword [rsp + 0x10], 1	      5645	ops.c	FUNCTION_67
0x400062b	          0x4531ed	                          xor r13d, r13d	      5644	ops.c	FUNCTION_67
0x400062e	        0x440fb6e7	                         movzx r12d, dil	      5800	ops.c	FUNCTION_67
0x4000632	      0x418d4424d0	                   lea eax, [r12 - 0x30]	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x4000637	          0x83f809	                              cmp eax, 9	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x400063a	     0xf865b020000	                           jbe 0x400089b	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x4000640	    0x48837c240800	                  cmp qword [rsp + 8], 0	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x4000646	            0x7410	                            je 0x4000658	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x4000648	            0x89f8	                            mov eax, edi	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x400064a	          0x83e0df	                     and eax, 0xffffffdf	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x400064d	          0x83e841	                           sub eax, 0x41	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x4000650	            0x3c19	                            cmp al, 0x19	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x4000652	     0xf86e8060000	                           jbe 0x4000d40	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x4000658	      0xe800000000	                          call 0x400065d	      5803	ops.c	FUNCTION_67	IF_15	CALL_22
0x400065d	           0xf1f00	                         nop dword [rax]	      5803	ops.c	FUNCTION_67	IF_15	CALL_22
0x4000660	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      6040	ops.c	FUNCTION_67	IF_52
0x4000664	            0x85c0	                           test eax, eax	      6040	ops.c	FUNCTION_67	IF_52
0x4000666	     0xf84d4010000	                            je 0x4000840	      6040	ops.c	FUNCTION_67	IF_52
0x400066c	    0x488b15000000	            mov rdx, qword [0x04000673] 	      6040	ops.c	FUNCTION_67	IF_52
0x4000673	            0x31c0	                            xor eax, eax	      5647	ops.c	FUNCTION_67
0x4000675	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      6041	ops.c	FUNCTION_67	IF_52
0x400067a	        0x8b4c2430	            mov ecx, dword [rsp + 0x30] 	      6041	ops.c	FUNCTION_67	IF_52
0x400067e	        0x48897238	             mov qword [rdx + 0x38], rsi	      6041	ops.c	FUNCTION_67	IF_52
0x4000682	        0x8b74242c	            mov esi, dword [rsp + 0x2c] 	      6041	ops.c	FUNCTION_67	IF_52
0x4000686	          0x894a44	             mov dword [rdx + 0x44], ecx	      6041	ops.c	FUNCTION_67	IF_52
0x4000689	          0x897240	             mov dword [rdx + 0x40], esi	      6041	ops.c	FUNCTION_67	IF_52
0x400068c	    0x488b9424a800	            mov rdx, qword [rsp + 0xa8] 	      6046	ops.c	FUNCTION_67
0x4000694	    0x644833142528	                xor rdx, qword fs:[0x28]	      6046	ops.c	FUNCTION_67
0x400069d	     0xf85320c0000	                           jne 0x40012d5	      6046	ops.c	FUNCTION_67
0x40006a3	    0x4881c4b80000	                           add rsp, 0xb8	      6046	ops.c	FUNCTION_67
0x40006aa	              0x5b	                                 pop rbx	      6046	ops.c	FUNCTION_67
0x40006ab	              0x5d	                                 pop rbp	      6046	ops.c	FUNCTION_67
0x40006ac	            0x415c	                                 pop r12	      6046	ops.c	FUNCTION_67
0x40006ae	            0x415d	                                 pop r13	      6046	ops.c	FUNCTION_67
0x40006b0	            0x415e	                                 pop r14	      6046	ops.c	FUNCTION_67
0x40006b2	            0x415f	                                 pop r15	      6046	ops.c	FUNCTION_67
0x40006b4	              0xc3	                                     ret	      6046	ops.c	FUNCTION_67
0x40006b5	           0xf1f00	                         nop dword [rax]	      6046	ops.c	FUNCTION_67
0x40006b8	          0x4c89ff	                            mov rdi, r15	      5776	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0x40006bb	    0xff1500000000	                 call qword [0x040006c1]	      5776	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0x40006c1	          0x4101c6	                           add r14d, eax	      5778	ops.c	FUNCTION_67	IF_12	WHILE_6
0x40006c4	        0x8b54244c	            mov edx, dword [rsp + 0x4c] 	      5779	ops.c	FUNCTION_67	IF_12	WHILE_6
0x40006c8	          0x4963ee	                        movsxd rbp, r14d	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x40006cb	        0x4c8d3c2b	                    lea r15, [rbx + rbp]	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x40006cf	            0x29c2	                            sub edx, eax	      5779	ops.c	FUNCTION_67	IF_12	WHILE_6
0x40006d1	        0x8954244c	             mov dword [rsp + 0x4c], edx	      5779	ops.c	FUNCTION_67	IF_12	WHILE_6
0x40006d5	        0x410fb63f	                   movzx edi, byte [r15]	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x40006d9	            0x89d0	                            mov eax, edx	      5779	ops.c	FUNCTION_67	IF_12	WHILE_6
0x40006db	          0x4084ff	                           test dil, dil	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x40006de	     0xf8470010000	                            je 0x4000854	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x40006e4	            0x85d2	                           test edx, edx	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x40006e6	     0xf8e68010000	                           jle 0x4000854	      5772	ops.c	FUNCTION_67	IF_12	WHILE_6
0x40006ec	      0xe800000000	                          call 0x40006f1	      5773	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_17
0x40006f1	            0x85c0	                           test eax, eax	      5773	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_17
0x40006f3	     0xf8557010000	                           jne 0x4000850	      5773	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_17
0x40006f9	    0x8b0d00000000	            mov ecx, dword [0x040006ff] 	      5776	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0x40006ff	      0xb801000000	                              mov eax, 1	      5776	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0x4000704	            0x85c9	                           test ecx, ecx	      5776	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0x4000706	            0x74b9	                            je 0x40006c1	      5776	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0x4000708	            0xebae	                           jmp 0x40006b8	      5776	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0x400070a	    0x660f1f440000	                    nop word [rax + rax]	      5776	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0x4000710	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      5670	ops.c	FUNCTION_67	IF_2	IF_3
0x4000716	            0x7438	                            je 0x4000750	      5670	ops.c	FUNCTION_67	IF_2	IF_3
0x4000718	          0x4585f6	                         test r14d, r14d	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x400071b	            0x7e33	                           jle 0x4000750	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x400071d	          0x4963ee	                        movsxd rbp, r14d	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x4000720	          0x4801dd	                            add rbp, rbx	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x4000723	            0xeb1e	                           jmp 0x4000743	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x4000725	           0xf1f00	                         nop dword [rax]	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x4000728	    0x8b0500000000	            mov eax, dword [0x0400072e] 	      5675	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0x400072e	        0x4183ee01	                             sub r14d, 1	      5673	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1
0x4000732	            0x85c0	                           test eax, eax	      5675	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0x4000734	     0xf8506070000	                           jne 0x4000e40	      5675	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0x400073a	        0x4883ed01	                              sub rbp, 1	      5675	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0x400073e	          0x4585f6	                         test r14d, r14d	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x4000741	            0x740d	                            je 0x4000750	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x4000743	         0xfb67d00	                   movzx edi, byte [rbp]	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x4000747	      0xe800000000	                          call 0x400074c	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x400074c	            0x85c0	                           test eax, eax	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x400074e	            0x75d8	                           jne 0x4000728	      5671	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0x4000750	    0x48837c241800	               cmp qword [rsp + 0x18], 0	      5680	ops.c	FUNCTION_67	IF_2	IF_5
0x4000756	     0xf84960a0000	                            je 0x40011f2	      5680	ops.c	FUNCTION_67	IF_2	IF_5
0x400075c	          0x4585f6	                         test r14d, r14d	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x400075f	     0xf8e73060000	                           jle 0x4000dd8	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x4000765	          0x4d63fe	                        movsxd r15, r14d	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x4000768	          0x4901df	                            add r15, rbx	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x400076b	            0xeb22	                           jmp 0x400078f	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x400076d	           0xf1f00	                         nop dword [rax]	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x4000770	    0x8b0500000000	            mov eax, dword [0x04000776] 	      5685	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0x4000776	        0x4183ee01	                             sub r14d, 1	      5683	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2
0x400077a	            0x85c0	                           test eax, eax	      5685	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0x400077c	     0xf85de060000	                           jne 0x4000e60	      5685	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0x4000782	        0x4983ef01	                              sub r15, 1	      5685	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0x4000786	          0x4585f6	                         test r14d, r14d	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x4000789	     0xf8449060000	                            je 0x4000dd8	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x400078f	        0x410fb63f	                   movzx edi, byte [r15]	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x4000793	          0x4d89fc	                            mov r12, r15	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x4000796	          0x4c89fd	                            mov rbp, r15	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x4000799	          0x4929dc	                            sub r12, rbx	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x400079c	      0xe800000000	                          call 0x40007a1	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x40007a1	            0x85c0	                           test eax, eax	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x40007a3	            0x75cb	                           jne 0x4000770	      5681	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0x40007a5	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      5690	ops.c	FUNCTION_67	IF_2	IF_7
0x40007ab	     0xf85bf020000	                           jne 0x4000a70	      5690	ops.c	FUNCTION_67	IF_2	IF_7
0x40007b1	        0x410fb607	                   movzx eax, byte [r15]	      5719	ops.c	FUNCTION_67	IF_2	IF_9
0x40007b5	          0x83e0df	                     and eax, 0xffffffdf	      5719	ops.c	FUNCTION_67	IF_2	IF_9
0x40007b8	            0x3c58	                            cmp al, 0x58	      5719	ops.c	FUNCTION_67	IF_2	IF_9
0x40007ba	     0xf840f030000	                            je 0x4000acf	      5719	ops.c	FUNCTION_67	IF_2	IF_9
0x40007c0	        0x4d637d08	            movsxd r15, dword [r13 + 8] 	      5750	ops.c	FUNCTION_67	IF_2	ELSE_1
0x40007c4	        0x4a8d2c3b	                    lea rbp, [rbx + r15]	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x40007c8	          0x4d89fe	                            mov r14, r15	      5750	ops.c	FUNCTION_67	IF_2	ELSE_1
0x40007cb	         0xfb67d00	                   movzx edi, byte [rbp]	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x40007cf	          0x4084ff	                           test dil, dil	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x40007d2	     0xf842d020000	                            je 0x4000a05	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x40007d8	    0x48837c240800	                  cmp qword [rsp + 8], 0	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x40007de	            0x751f	                           jne 0x40007ff	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x40007e0	      0xe9ef010000	                           jmp 0x40009d4	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x40007e5	           0xf1f00	                         nop dword [rax]	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x40007e8	          0x4101c6	                           add r14d, eax	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x40007eb	          0x4d63fe	                        movsxd r15, r14d	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x40007ee	        0x4a8d2c3b	                    lea rbp, [rbx + r15]	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x40007f2	         0xfb67d00	                   movzx edi, byte [rbp]	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x40007f6	          0x4084ff	                           test dil, dil	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x40007f9	     0xf8406020000	                            je 0x4000a05	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x40007ff	      0xe800000000	                          call 0x4000804	      5753	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_12
0x4000804	            0x85c0	                           test eax, eax	      5753	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_12
0x4000806	     0xf85f9010000	                           jne 0x4000a05	      5753	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_12
0x400080c	         0xfb64500	                   movzx eax, byte [rbp]	      5754	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0x4000810	          0x83e0df	                     and eax, 0xffffffdf	      5754	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0x4000813	          0x83e841	                           sub eax, 0x41	      5754	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0x4000816	            0x3c19	                            cmp al, 0x19	      5754	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0x4000818	     0xf86e7010000	                           jbe 0x4000a05	      5754	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0x400081e	    0x448b0d000000	            mov r9d, dword [0x04000825] 	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x4000825	      0xb801000000	                              mov eax, 1	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x400082a	          0x4585c9	                           test r9d, r9d	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x400082d	            0x74b9	                            je 0x40007e8	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x400082f	          0x4889ef	                            mov rdi, rbp	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x4000832	    0xff1500000000	                 call qword [0x04000838]	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x4000838	            0xebae	                           jmp 0x40007e8	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x400083a	    0x660f1f440000	                    nop word [rax + rax]	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x4000840	            0x31c0	                            xor eax, eax	      6040	ops.c	FUNCTION_67	IF_52
0x4000842	      0xe945feffff	                           jmp 0x400068c	      6040	ops.c	FUNCTION_67	IF_52
0x4000847	    0x660f1f840000	                    nop word [rax + rax]	      6040	ops.c	FUNCTION_67	IF_52
0x4000850	        0x8b44244c	            mov eax, dword [rsp + 0x4c] 	      6040	ops.c	FUNCTION_67	IF_52
0x4000854	            0x85c0	                           test eax, eax	      5782	ops.c	FUNCTION_67	IF_12	IF_13
0x4000856	     0xf8410feffff	                            je 0x400066c	      5782	ops.c	FUNCTION_67	IF_12	IF_13
0x400085c	        0x453b7508	               cmp r14d, dword [r13 + 8]	      5785	ops.c	FUNCTION_67	IF_12	IF_14
0x4000860	            0x7e0e	                           jle 0x4000870	      5785	ops.c	FUNCTION_67	IF_12	IF_14
0x4000862	      0x488d742bff	                lea rsi, [rbx + rbp - 1]	      5785	ops.c	FUNCTION_67	IF_12	IF_14
0x4000867	          0x803e2d	                    cmp byte [rsi], 0x2d	      5785	ops.c	FUNCTION_67	IF_12	IF_14
0x400086a	     0xf847d080000	                            je 0x40010ed	      5785	ops.c	FUNCTION_67	IF_12	IF_14
0x4000870	          0x4963ee	                        movsxd rbp, r14d	      5785	ops.c	FUNCTION_67	IF_12	IF_14
0x4000873	          0x4531db	                          xor r11d, r11d	      5785	ops.c	FUNCTION_67	IF_12	IF_14
0x4000876	          0x4531ed	                          xor r13d, r13d	      5644	ops.c	FUNCTION_67
0x4000879	        0x4c8d3c2b	                    lea r15, [rbx + rbp]	      5644	ops.c	FUNCTION_67
0x400087d	        0x410fb63f	                   movzx edi, byte [r15]	      5644	ops.c	FUNCTION_67
0x4000881	    0xc74424100100	               mov dword [rsp + 0x10], 1	      5645	ops.c	FUNCTION_67
0x4000889	        0x440fb6e7	                         movzx r12d, dil	      5800	ops.c	FUNCTION_67
0x400088d	      0x418d4424d0	                   lea eax, [r12 - 0x30]	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x4000892	          0x83f809	                              cmp eax, 9	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x4000895	     0xf87a5fdffff	                            ja 0x4000640	      5801	ops.c	FUNCTION_67	IF_15	CALL_21
0x400089b	    0x48837c240800	                  cmp qword [rsp + 8], 0	      5807	ops.c	FUNCTION_67	IF_16	CALL_23
0x40008a1	            0x7410	                            je 0x40008b3	      5807	ops.c	FUNCTION_67	IF_16	CALL_23
0x40008a3	            0x89f8	                            mov eax, edi	      5807	ops.c	FUNCTION_67	IF_16	CALL_23
0x40008a5	          0x83e0df	                     and eax, 0xffffffdf	      5807	ops.c	FUNCTION_67	IF_16	CALL_23
0x40008a8	          0x83e841	                           sub eax, 0x41	      5807	ops.c	FUNCTION_67	IF_16	CALL_23
0x40008ab	            0x3c19	                            cmp al, 0x19	      5807	ops.c	FUNCTION_67	IF_16	CALL_23
0x40008ad	     0xf868d040000	                           jbe 0x4000d40	      5807	ops.c	FUNCTION_67	IF_16	CALL_23
0x40008b3	          0x4585f6	                         test r14d, r14d	      5853	ops.c	FUNCTION_67	ELSE_7	IF_23
0x40008b6	            0x7e0e	                           jle 0x40008c6	      5853	ops.c	FUNCTION_67	ELSE_7	IF_23
0x40008b8	      0x488d742bff	                lea rsi, [rbx + rbp - 1]	      5853	ops.c	FUNCTION_67	ELSE_7	IF_23
0x40008bd	          0x803e2d	                    cmp byte [rsi], 0x2d	      5853	ops.c	FUNCTION_67	ELSE_7	IF_23
0x40008c0	     0xf84b1050000	                            je 0x4000e77	      5853	ops.c	FUNCTION_67	ELSE_7	IF_23
0x40008c6	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      5865	ops.c	FUNCTION_67	ELSE_7	IF_24
0x40008ca	            0x85c0	                           test eax, eax	      5865	ops.c	FUNCTION_67	ELSE_7	IF_24
0x40008cc	     0xf84d6050000	                            je 0x4000ea8	      5865	ops.c	FUNCTION_67	ELSE_7	IF_24
0x40008d2	    0x833d00000000	           cmp dword [0x040008d9], 0x56 	      5865	ops.c	FUNCTION_67	ELSE_7	IF_24
0x40008d9	     0xf84c9050000	                            je 0x4000ea8	      5865	ops.c	FUNCTION_67	ELSE_7	IF_24
0x40008df	    0x488b15000000	            mov rdx, qword [0x040008e6] 	      5868	ops.c	FUNCTION_67	ELSE_7	IF_24
0x40008e6	        0x8b44244c	            mov eax, dword [rsp + 0x4c] 	      5868	ops.c	FUNCTION_67	ELSE_7	IF_24
0x40008ea	    0x81ba1c030000	    cmp dword [rdx + 0x31c], 0x7fffffff 	      5868	ops.c	FUNCTION_67	ELSE_7	IF_24
0x40008f4	     0xf848c080000	                            je 0x4001186	      5868	ops.c	FUNCTION_67	ELSE_7	IF_24
0x40008fa	    0x48837c244001	               cmp qword [rsp + 0x40], 1	      5872	ops.c	FUNCTION_67	ELSE_7
0x4000900	       0xfb654244b	           movzx edx, byte [rsp + 0x4b] 	      5871	ops.c	FUNCTION_67	ELSE_7
0x4000905	          0x4c89ff	                            mov rdi, r15	      5870	ops.c	FUNCTION_67	ELSE_7	CALL_33
0x4000908	      0x44885c2408	                mov byte [rsp + 8], r11b	      5870	ops.c	FUNCTION_67	ELSE_7	CALL_33
0x400090d	            0x19c9	                            sbb ecx, ecx	      5872	ops.c	FUNCTION_67	ELSE_7
0x400090f	            0xf7d1	                                 not ecx	      5872	ops.c	FUNCTION_67	ELSE_7
0x4000911	          0x83e102	                              and ecx, 2	      5872	ops.c	FUNCTION_67	ELSE_7
0x4000914	             0x1ca	                            add edx, ecx	      5872	ops.c	FUNCTION_67	ELSE_7
0x4000916	    0x48837c241801	               cmp qword [rsp + 0x18], 1	      5873	ops.c	FUNCTION_67	ELSE_7
0x400091c	            0x19c9	                            sbb ecx, ecx	      5873	ops.c	FUNCTION_67	ELSE_7
0x400091e	        0x4883ec08	                              sub rsp, 8	      5870	ops.c	FUNCTION_67	ELSE_7	CALL_33
0x4000922	          0x4531c0	                            xor r8d, r8d	      5870	ops.c	FUNCTION_67	ELSE_7	CALL_33
0x4000925	              0x50	                                push rax	      5870	ops.c	FUNCTION_67	ELSE_7	CALL_33
0x4000926	            0xf7d1	                                 not ecx	      5873	ops.c	FUNCTION_67	ELSE_7
0x4000928	          0x83e104	                              and ecx, 4	      5873	ops.c	FUNCTION_67	ELSE_7
0x400092b	             0x1d1	                            add ecx, edx	      5870	ops.c	FUNCTION_67	ELSE_7	CALL_33
0x400092d	      0x4c8d4c2468	                    lea r9, [rsp + 0x68]	      5870	ops.c	FUNCTION_67	ELSE_7	CALL_33
0x4000932	      0x488d54245c	                   lea rdx, [rsp + 0x5c]	      5870	ops.c	FUNCTION_67	ELSE_7	CALL_33
0x4000937	      0x488d742464	                   lea rsi, [rsp + 0x64]	      5870	ops.c	FUNCTION_67	ELSE_7	CALL_33
0x400093c	      0xe800000000	                          call 0x4000941	      5870	ops.c	FUNCTION_67	ELSE_7	CALL_33
0x4000941	              0x5d	                                 pop rbp	      5877	ops.c	FUNCTION_67	ELSE_7	IF_25
0x4000942	            0x415f	                                 pop r15	      5877	ops.c	FUNCTION_67	ELSE_7	IF_25
0x4000944	        0x8b442454	            mov eax, dword [rsp + 0x54] 	      5877	ops.c	FUNCTION_67	ELSE_7	IF_25
0x4000948	    0x440fb65c2408	              movzx r11d, byte [rsp + 8]	      5877	ops.c	FUNCTION_67	ELSE_7	IF_25
0x400094e	            0x85c0	                           test eax, eax	      5877	ops.c	FUNCTION_67	ELSE_7	IF_25
0x4000950	     0xf845a050000	                            je 0x4000eb0	      5877	ops.c	FUNCTION_67	ELSE_7	IF_25
0x4000956	          0x4585ed	                         test r13d, r13d	      5877	ops.c	FUNCTION_67	ELSE_7	IF_25
0x4000959	     0xf853e070000	                           jne 0x400109d	      5877	ops.c	FUNCTION_67	ELSE_7	IF_25
0x400095f	      0x837c24341d	           cmp dword [rsp + 0x34], 0x1d 	      5885	ops.c	FUNCTION_67	ELSE_7	IF_26
0x4000964	     0xf84e0080000	                            je 0x400124a	      5885	ops.c	FUNCTION_67	ELSE_7	IF_26
0x400096a	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      5885	ops.c	FUNCTION_67	ELSE_7	IF_26
0x400096f	      0x4801442458	            add qword [rsp + 0x58], rax 	      5885	ops.c	FUNCTION_67	ELSE_7	IF_26
0x4000974	          0x4531ed	                          xor r13d, r13d	      5894	ops.c	FUNCTION_67	ELSE_7	ELSE_8
0x4000977	        0x8b5c2428	            mov ebx, dword [rsp + 0x28] 	      5919	ops.c	FUNCTION_67	ELSE_7	IF_34
0x400097b	            0x85db	                           test ebx, ebx	      5919	ops.c	FUNCTION_67	ELSE_7	IF_34
0x400097d	     0xf84cd010000	                            je 0x4000b50	      5919	ops.c	FUNCTION_67	ELSE_7	IF_34
0x4000983	          0x4584db	                         test r11b, r11b	      5919	ops.c	FUNCTION_67	ELSE_7	IF_34
0x4000986	     0xf84c4010000	                            je 0x4000b50	      5919	ops.c	FUNCTION_67	ELSE_7	IF_34
0x400098c	        0x41f6c501	                            test r13b, 1	      5919	ops.c	FUNCTION_67	ELSE_7	IF_34
0x4000990	     0xf85ba010000	                           jne 0x4000b50	      5919	ops.c	FUNCTION_67	ELSE_7	IF_34
0x4000996	          0x4585f6	                         test r14d, r14d	      5919	ops.c	FUNCTION_67	ELSE_7	IF_34
0x4000999	     0xf8eb1010000	                           jle 0x4000b50	      5919	ops.c	FUNCTION_67	ELSE_7	IF_34
0x400099f	        0x8b44244c	            mov eax, dword [rsp + 0x4c] 	      5923	ops.c	FUNCTION_67	ELSE_7	IF_34
0x40009a3	        0x4183ee01	                             sub r14d, 1	      5922	ops.c	FUNCTION_67	ELSE_7	IF_34
0x40009a7	          0x8d5001	                      lea edx, [rax + 1]	      5923	ops.c	FUNCTION_67	ELSE_7	IF_34
0x40009aa	        0x8954244c	             mov dword [rsp + 0x4c], edx	      5923	ops.c	FUNCTION_67	ELSE_7	IF_34
0x40009ae	      0xe9a1010000	                           jmp 0x4000b54	      5923	ops.c	FUNCTION_67	ELSE_7	IF_34
0x40009b3	       0xf1f440000	                   nop dword [rax + rax]	      5923	ops.c	FUNCTION_67	ELSE_7	IF_34
0x40009b8	          0x4889ef	                            mov rdi, rbp	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x40009bb	    0xff1500000000	                 call qword [0x040009c1]	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x40009c1	          0x4101c6	                           add r14d, eax	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x40009c4	          0x4d63fe	                        movsxd r15, r14d	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x40009c7	        0x4a8d2c3b	                    lea rbp, [rbx + r15]	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x40009cb	         0xfb67d00	                   movzx edi, byte [rbp]	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x40009cf	          0x4084ff	                           test dil, dil	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x40009d2	            0x7431	                            je 0x4000a05	      5752	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0x40009d4	      0xe800000000	                          call 0x40009d9	      5753	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_12
0x40009d9	            0x85c0	                           test eax, eax	      5753	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_12
0x40009db	            0x7528	                           jne 0x4000a05	      5753	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_12
0x40009dd	    0x448b15000000	           mov r10d, dword [0x040009e4] 	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x40009e4	      0xb801000000	                              mov eax, 1	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x40009e9	          0x4585d2	                         test r10d, r10d	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x40009ec	            0x74d3	                            je 0x40009c1	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x40009ee	            0xebc8	                           jmp 0x40009b8	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x40009f0	          0x4963f6	                        movsxd rsi, r14d	      5764	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0x40009f3	          0x4889df	                            mov rdi, rbx	      5764	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0x40009f6	          0x4801de	                            add rsi, rbx	      5764	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0x40009f9	    0xff1500000000	                 call qword [0x040009ff]	      5764	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0x40009ff	          0x4129c6	                           sub r14d, eax	      5764	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0x4000a02	          0x4d63fe	                        movsxd r15, r14d	      5764	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0x4000a05	          0x4585f6	                         test r14d, r14d	      5757	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5
0x4000a08	     0xf8e82080000	                           jle 0x4001290	      5757	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5
0x4000a0e	    0x48837c240800	                  cmp qword [rsp + 8], 0	      5757	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5
0x4000a14	     0xf848e070000	                            je 0x40011a8	      5757	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5
0x4000a1a	          0x4901df	                            add r15, rbx	      5757	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5
0x4000a1d	            0xeb30	                           jmp 0x4000a4f	      5757	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5
0x4000a1f	              0x90	                                     nop	      5757	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5
0x4000a20	        0x410fb63f	                   movzx edi, byte [r15]	      5759	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0x4000a24	            0x89f8	                            mov eax, edi	      5759	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0x4000a26	          0x83e0df	                     and eax, 0xffffffdf	      5759	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0x4000a29	          0x83e841	                           sub eax, 0x41	      5759	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0x4000a2c	            0x3c19	                            cmp al, 0x19	      5759	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0x4000a2e	     0xf8650fbffff	                           jbe 0x4000584	      5759	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0x4000a34	    0x8b3d00000000	            mov edi, dword [0x04000a3a] 	      5763	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0x4000a3a	        0x4183ee01	                             sub r14d, 1	      5761	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5
0x4000a3e	            0x85ff	                           test edi, edi	      5763	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0x4000a40	            0x75ae	                           jne 0x40009f0	      5763	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0x4000a42	        0x4983ef01	                              sub r15, 1	      5763	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0x4000a46	          0x4585f6	                         test r14d, r14d	      5757	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5
0x4000a49	     0xf84b9040000	                            je 0x4000f08	      5757	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5
0x4000a4f	      0x410fb67fff	               movzx edi, byte [r15 - 1]	      5758	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0x4000a54	          0x4c89fd	                            mov rbp, r15	      5758	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0x4000a57	          0x4829dd	                            sub rbp, rbx	      5758	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0x4000a5a	      0xe800000000	                          call 0x4000a5f	      5758	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0x4000a5f	            0x85c0	                           test eax, eax	      5758	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0x4000a61	            0x75bd	                           jne 0x4000a20	      5758	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0x4000a63	        0x4c8d3c2b	                    lea r15, [rbx + rbp]	      5758	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0x4000a67	        0x410fb63f	                   movzx edi, byte [r15]	      5758	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0x4000a6b	      0xe914fbffff	                           jmp 0x4000584	      5758	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0x4000a70	         0xfb64500	                   movzx eax, byte [rbp]	      5693	ops.c	FUNCTION_67	IF_2	IF_7
0x4000a74	          0x83e0df	                     and eax, 0xffffffdf	      5693	ops.c	FUNCTION_67	IF_2	IF_7
0x4000a77	            0x3c58	                            cmp al, 0x58	      5693	ops.c	FUNCTION_67	IF_2	IF_7
0x4000a79	     0xf8565030000	                           jne 0x4000de4	      5693	ops.c	FUNCTION_67	IF_2	IF_7
0x4000a7f	      0x4a8d7423ff	                lea rsi, [rbx + r12 - 1]	      5695	ops.c	FUNCTION_67	IF_2	IF_7
0x4000a84	          0x803e30	                    cmp byte [rsi], 0x30	      5695	ops.c	FUNCTION_67	IF_2	IF_7
0x4000a87	     0xf8557030000	                           jne 0x4000de4	      5695	ops.c	FUNCTION_67	IF_2	IF_7
0x4000a8d	    0x8b0500000000	            mov eax, dword [0x04000a93] 	      5697	ops.c	FUNCTION_67	IF_2	IF_7
0x4000a93	            0x85c0	                           test eax, eax	      5697	ops.c	FUNCTION_67	IF_2	IF_7
0x4000a95	            0x7411	                            je 0x4000aa8	      5697	ops.c	FUNCTION_67	IF_2	IF_7
0x4000a97	          0x4889df	                            mov rdi, rbx	      5698	ops.c	FUNCTION_67	IF_2	IF_7
0x4000a9a	    0xff1500000000	                 call qword [0x04000aa0]	      5698	ops.c	FUNCTION_67	IF_2	IF_7
0x4000aa0	            0x85c0	                           test eax, eax	      5697	ops.c	FUNCTION_67	IF_2	IF_7
0x4000aa2	     0xf853c030000	                           jne 0x4000de4	      5697	ops.c	FUNCTION_67	IF_2	IF_7
0x4000aa8	    0x420fb67c2301	        movzx edi, byte [rbx + r12 + 1] 	      5700	ops.c	FUNCTION_67	IF_2	IF_7	CALL_8
0x4000aae	      0xe800000000	                          call 0x4000ab3	      5700	ops.c	FUNCTION_67	IF_2	IF_7	CALL_8
0x4000ab3	            0x85c0	                           test eax, eax	      5692	ops.c	FUNCTION_67	IF_2	IF_7
0x4000ab5	     0xf8429030000	                            je 0x4000de4	      5692	ops.c	FUNCTION_67	IF_2	IF_7
0x4000abb	       0xf1f440000	                   nop dword [rax + rax]	      5692	ops.c	FUNCTION_67	IF_2	IF_7
0x4000ac0	         0xfb64500	                   movzx eax, byte [rbp]	      5719	ops.c	FUNCTION_67	IF_2	IF_9
0x4000ac4	          0x83e0df	                     and eax, 0xffffffdf	      5719	ops.c	FUNCTION_67	IF_2	IF_9
0x4000ac7	            0x3c58	                            cmp al, 0x58	      5719	ops.c	FUNCTION_67	IF_2	IF_9
0x4000ac9	     0xf85dc050000	                           jne 0x40010ab	      5719	ops.c	FUNCTION_67	IF_2	IF_9
0x4000acf	      0x4a8d7423ff	                lea rsi, [rbx + r12 - 1]	      5721	ops.c	FUNCTION_67	IF_2	IF_9
0x4000ad4	      0xbd01000000	                              mov ebp, 1	      5721	ops.c	FUNCTION_67	IF_2	IF_9
0x4000ad9	          0x803e30	                    cmp byte [rsi], 0x30	      5721	ops.c	FUNCTION_67	IF_2	IF_9
0x4000adc	     0xf843d060000	                            je 0x400111f	      5721	ops.c	FUNCTION_67	IF_2	IF_9
0x4000ae2	      0x807c244b00	                cmp byte [rsp + 0x4b], 0	      5726	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0x4000ae7	     0xf84d3fcffff	                            je 0x40007c0	      5726	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0x4000aed	          0x4084ed	                           test bpl, bpl	      5726	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0x4000af0	     0xf84cafcffff	                            je 0x40007c0	      5726	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0x4000af6	          0x4963ee	                        movsxd rbp, r14d	      5729	ops.c	FUNCTION_67	IF_2	IF_9
0x4000af9	         0xfb6042b	             movzx eax, byte [rbx + rbp]	      5729	ops.c	FUNCTION_67	IF_2	IF_9
0x4000afd	          0x83e0df	                     and eax, 0xffffffdf	      5729	ops.c	FUNCTION_67	IF_2	IF_9
0x4000b00	            0x3c42	                            cmp al, 0x42	      5729	ops.c	FUNCTION_67	IF_2	IF_9
0x4000b02	     0xf85b8fcffff	                           jne 0x40007c0	      5729	ops.c	FUNCTION_67	IF_2	IF_9
0x4000b08	      0x488d742bff	                lea rsi, [rbx + rbp - 1]	      5731	ops.c	FUNCTION_67	IF_2	IF_9
0x4000b0d	          0x803e30	                    cmp byte [rsi], 0x30	      5731	ops.c	FUNCTION_67	IF_2	IF_9
0x4000b10	     0xf85aafcffff	                           jne 0x40007c0	      5731	ops.c	FUNCTION_67	IF_2	IF_9
0x4000b16	    0x448b25000000	           mov r12d, dword [0x04000b1d] 	      5733	ops.c	FUNCTION_67	IF_2	IF_9
0x4000b1d	          0x4585e4	                         test r12d, r12d	      5733	ops.c	FUNCTION_67	IF_2	IF_9
0x4000b20	            0x7411	                            je 0x4000b33	      5733	ops.c	FUNCTION_67	IF_2	IF_9
0x4000b22	          0x4889df	                            mov rdi, rbx	      5734	ops.c	FUNCTION_67	IF_2	IF_9
0x4000b25	    0xff1500000000	                 call qword [0x04000b2b]	      5734	ops.c	FUNCTION_67	IF_2	IF_9
0x4000b2b	            0x85c0	                           test eax, eax	      5733	ops.c	FUNCTION_67	IF_2	IF_9
0x4000b2d	     0xf858dfcffff	                           jne 0x40007c0	      5733	ops.c	FUNCTION_67	IF_2	IF_9
0x4000b33	       0xfb67c2b01	        movzx edi, byte [rbx + rbp + 1] 	      5736	ops.c	FUNCTION_67	IF_2	IF_9	CALL_11
0x4000b38	      0xe800000000	                          call 0x4000b3d	      5736	ops.c	FUNCTION_67	IF_2	IF_9	CALL_11
0x4000b3d	            0x85c0	                           test eax, eax	      5736	ops.c	FUNCTION_67	IF_2	IF_9	CALL_11
0x4000b3f	     0xf850a060000	                           jne 0x400114f	      5736	ops.c	FUNCTION_67	IF_2	IF_9	CALL_11
0x4000b45	      0xe976fcffff	                           jmp 0x40007c0	      5736	ops.c	FUNCTION_67	IF_2	IF_9	CALL_11
0x4000b4a	    0x660f1f440000	                    nop word [rax + rax]	      5736	ops.c	FUNCTION_67	IF_2	IF_9	CALL_11
0x4000b50	        0x8b54244c	            mov edx, dword [rsp + 0x4c] 	      5736	ops.c	FUNCTION_67	IF_2	IF_9	CALL_11
0x4000b54	    0x488b05000000	            mov rax, qword [0x04000b5b] 	      5929	ops.c	FUNCTION_67	ELSE_7
0x4000b5b	        0x89542418	             mov dword [rsp + 0x18], edx	      5929	ops.c	FUNCTION_67	ELSE_7
0x4000b5f	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      5931	ops.c	FUNCTION_67	ELSE_7	IF_35
0x4000b63	        0x44897040	            mov dword [rax + 0x40], r14d	      5929	ops.c	FUNCTION_67	ELSE_7
0x4000b67	          0x8b6844	            mov ebp, dword [rax + 0x44] 	      5931	ops.c	FUNCTION_67	ELSE_7	IF_35
0x4000b6a	      0x4889542408	                mov qword [rsp + 8], rdx	      5931	ops.c	FUNCTION_67	ELSE_7	IF_35
0x4000b6f	      0xe800000000	                          call 0x4000b74	      5934	ops.c	FUNCTION_67	ELSE_7	CALL_34
0x4000b74	          0x4c63f8	                         movsxd r15, eax	      5934	ops.c	FUNCTION_67	ELSE_7	CALL_34
0x4000b77	        0x8b542418	            mov edx, dword [rsp + 0x18] 	      5939	ops.c	FUNCTION_67	ELSE_7	IF_36
0x4000b7b	        0x4183ff2d	                          cmp r15d, 0x2d	      5939	ops.c	FUNCTION_67	ELSE_7	IF_36
0x4000b7f	     0xf8463060000	                            je 0x40011e8	      5939	ops.c	FUNCTION_67	ELSE_7	IF_36
0x4000b85	            0x85d2	                           test edx, edx	      5941	ops.c	FUNCTION_67	ELSE_7	WHILE_7
0x4000b87	          0x8d5aff	                      lea ebx, [rdx - 1]	      5941	ops.c	FUNCTION_67	ELSE_7	WHILE_7
0x4000b8a	            0x7e45	                           jle 0x4000bd1	      5941	ops.c	FUNCTION_67	ELSE_7	WHILE_7
0x4000b8c	         0xf1f4000	                         nop dword [rax]	      5941	ops.c	FUNCTION_67	ELSE_7	WHILE_7
0x4000b90	    0x4181ffff0000	                          cmp r15d, 0xff	      5943	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0x4000b97	            0x7f21	                            jg 0x4000bba	      5943	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0x4000b99	      0xe800000000	                          call 0x4000b9e	      5943	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0x4000b9e	          0x488b00	                    mov rax, qword [rax]	      5943	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0x4000ba1	      0x420fb70478	           movzx eax, word [rax + r15*2]	      5943	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0x4000ba6	          0xf6c404	                              test ah, 4	      5943	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0x4000ba9	            0x740f	                            je 0x4000bba	      5943	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0x4000bab	          0xf6c401	                              test ah, 1	      5946	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	IF_38
0x4000bae	           0xf95c0	                                setne al	      5946	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	IF_38
0x4000bb1	           0xfb6c0	                           movzx eax, al	      5946	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	IF_38
0x4000bb4	    0x890500000000	            mov dword [0x04000bba], eax 	      5946	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	IF_38
0x4000bba	            0x31ff	                            xor edi, edi	      5951	ops.c	FUNCTION_67	ELSE_7	WHILE_7	CALL_37
0x4000bbc	          0x83eb01	                              sub ebx, 1	      5941	ops.c	FUNCTION_67	ELSE_7	WHILE_7
0x4000bbf	      0xe800000000	                          call 0x4000bc4	      5951	ops.c	FUNCTION_67	ELSE_7	WHILE_7	CALL_37
0x4000bc4	      0xe800000000	                          call 0x4000bc9	      5952	ops.c	FUNCTION_67	ELSE_7	WHILE_7	CALL_38
0x4000bc9	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      5941	ops.c	FUNCTION_67	ELSE_7	WHILE_7
0x4000bcc	          0x4c63f8	                         movsxd r15, eax	      5952	ops.c	FUNCTION_67	ELSE_7	WHILE_7	CALL_38
0x4000bcf	            0x75bf	                           jne 0x4000b90	      5941	ops.c	FUNCTION_67	ELSE_7	WHILE_7
0x4000bd1	        0x8b44244c	            mov eax, dword [rsp + 0x4c] 	      5960	ops.c	FUNCTION_67	ELSE_7	CALL_39
0x4000bd5	          0x8d7841	                   lea edi, [rax + 0x41]	      5960	ops.c	FUNCTION_67	ELSE_7	CALL_39
0x4000bd8	      0xe800000000	                          call 0x4000bdd	      5960	ops.c	FUNCTION_67	ELSE_7	CALL_39
0x4000bdd	          0x4885c0	                           test rax, rax	      5961	ops.c	FUNCTION_67	ELSE_7	IF_39
0x4000be0	          0x4889c3	                            mov rbx, rax	      5960	ops.c	FUNCTION_67	ELSE_7	CALL_39
0x4000be3	    0x488b15000000	            mov rdx, qword [0x04000bea] 	      5960	ops.c	FUNCTION_67	ELSE_7	CALL_39
0x4000bea	     0xf842e010000	                            je 0x4000d1e	      5961	ops.c	FUNCTION_67	ELSE_7	IF_39
0x4000bf0	          0x4585ed	                         test r13d, r13d	      5964	ops.c	FUNCTION_67	ELSE_7	IF_40
0x4000bf3	          0x4989c7	                            mov r15, rax	      5964	ops.c	FUNCTION_67	ELSE_7	IF_40
0x4000bf6	            0x741c	                            je 0x4000c14	      5964	ops.c	FUNCTION_67	ELSE_7	IF_40
0x4000bf8	      0x448b542428	           mov r10d, dword [rsp + 0x28] 	      5964	ops.c	FUNCTION_67	ELSE_7	IF_40
0x4000bfd	          0x4585d2	                         test r10d, r10d	      5964	ops.c	FUNCTION_67	ELSE_7	IF_40
0x4000c00	     0xf8474050000	                            je 0x400117a	      5964	ops.c	FUNCTION_67	ELSE_7	IF_40
0x4000c06	      0x448b4c2410	            mov r9d, dword [rsp + 0x10] 	      5964	ops.c	FUNCTION_67	ELSE_7	IF_40
0x4000c0b	          0x4585c9	                           test r9d, r9d	      5964	ops.c	FUNCTION_67	ELSE_7	IF_40
0x4000c0e	     0xf8566050000	                           jne 0x400117a	      5964	ops.c	FUNCTION_67	ELSE_7	IF_40
0x4000c14	      0x448b442454	            mov r8d, dword [rsp + 0x54] 	      5968	ops.c	FUNCTION_67	ELSE_7	IF_41
0x4000c19	          0x4585c0	                           test r8d, r8d	      5968	ops.c	FUNCTION_67	ELSE_7	IF_41
0x4000c1c	     0xf85fe020000	                           jne 0x4000f20	      5968	ops.c	FUNCTION_67	ELSE_7	IF_41
0x4000c22	      0x4c8d442460	                    lea r8, [rsp + 0x60]	      5999	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45	CALL_40
0x4000c27	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	      5999	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45	CALL_40
0x4000c2c	      0xba00000000	                              mov edx, 0	      5999	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45	CALL_40
0x4000c31	      0xbe41000000	                           mov esi, 0x41	      5999	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45	CALL_40
0x4000c36	            0x31c0	                            xor eax, eax	      5999	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45	CALL_40
0x4000c38	          0x4d89fd	                            mov r13, r15	      5999	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45	CALL_40
0x4000c3b	          0x4c89c7	                             mov rdi, r8	      5999	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45	CALL_40
0x4000c3e	      0x4c89442410	              mov qword [rsp + 0x10], r8	      5999	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45	CALL_40
0x4000c43	      0xe800000000	                          call 0x4000c48	      5999	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45	CALL_40
0x4000c48	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      5999	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45	CALL_40
0x4000c4d	           0xf1f00	                         nop dword [rax]	      5999	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45	CALL_40
0x4000c50	          0x4c89c2	                             mov rdx, r8	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x4000c53	            0x8b0a	                    mov ecx, dword [rdx]	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x4000c55	        0x4883c204	                              add rdx, 4	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x4000c59	    0x8d81fffefefe	              lea eax, [rcx - 0x1010101]	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x4000c5f	            0xf7d1	                                 not ecx	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x4000c61	            0x21c8	                            and eax, ecx	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x4000c63	      0x2580808080	                     and eax, 0x80808080	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x4000c68	            0x74e9	                            je 0x4000c53	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x4000c6a	            0x89c1	                            mov ecx, eax	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x4000c6c	          0xc1e910	                           shr ecx, 0x10	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x4000c6f	      0xa980800000	                        test eax, 0x8080	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x4000c74	           0xf44c1	                          cmove eax, ecx	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x4000c77	        0x488d4a02	                      lea rcx, [rdx + 2]	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x4000c7b	            0x89c6	                            mov esi, eax	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x4000c7d	        0x480f44d1	                          cmove rdx, rcx	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x4000c81	          0x4000c6	                             add sil, al	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x4000c84	        0x8b44244c	            mov eax, dword [rsp + 0x4c] 	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x4000c88	        0x4883da03	                              sbb rdx, 3	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x4000c8c	          0x4c29c2	                             sub rdx, r8	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x4000c8f	            0x29d0	                            sub eax, edx	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x4000c91	        0x4183fc30	                          cmp r12d, 0x30	      6018	ops.c	FUNCTION_67	ELSE_7	IF_48
0x4000c95	        0x8944244c	             mov dword [rsp + 0x4c], eax	      6010	ops.c	FUNCTION_67	ELSE_7	CALL_44
0x4000c99	     0xf8416040000	                            je 0x40010b5	      6018	ops.c	FUNCTION_67	ELSE_7	IF_48
0x4000c9f	          0x4c89c6	                             mov rsi, r8	       148	string3.h	FUNCTION_102	CALL_3
0x4000ca2	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_102	CALL_3
0x4000ca5	      0x41c6450000	                       mov byte [r13], 0	      6021	ops.c	FUNCTION_67	ELSE_7
0x4000caa	      0xe800000000	                          call 0x4000caf	       148	string3.h	FUNCTION_102	CALL_3
0x4000caf	          0x4889df	                            mov rdi, rbx	      6023	ops.c	FUNCTION_67	ELSE_7	CALL_46
0x4000cb2	      0xe800000000	                          call 0x4000cb7	      6023	ops.c	FUNCTION_67	ELSE_7	CALL_46
0x4000cb7	          0x4889df	                            mov rdi, rbx	      6024	ops.c	FUNCTION_67	ELSE_7	CALL_47
0x4000cba	      0xe800000000	                          call 0x4000cbf	      6024	ops.c	FUNCTION_67	ELSE_7	CALL_47
0x4000cbf	    0x488b15000000	            mov rdx, qword [0x04000cc6] 	      6025	ops.c	FUNCTION_67	ELSE_7
0x4000cc6	          0x8b4a40	            mov ecx, dword [rdx + 0x40] 	      6025	ops.c	FUNCTION_67	ELSE_7
0x4000cc9	        0x488b7a38	            mov rdi, qword [rdx + 0x38] 	      6025	ops.c	FUNCTION_67	ELSE_7
0x4000ccd	          0x8b7244	            mov esi, dword [rdx + 0x44] 	      6025	ops.c	FUNCTION_67	ELSE_7
0x4000cd0	            0x85c9	                           test ecx, ecx	      6026	ops.c	FUNCTION_67	ELSE_7	IF_49
0x4000cd2	     0xf8438030000	                            je 0x4001010	      6026	ops.c	FUNCTION_67	ELSE_7	IF_49
0x4000cd8	          0x8d41ff	                      lea eax, [rcx - 1]	      6027	ops.c	FUNCTION_67	ELSE_7	IF_49
0x4000cdb	          0x894240	             mov dword [rdx + 0x40], eax	      6027	ops.c	FUNCTION_67	ELSE_7	IF_49
0x4000cde	    0x488b05000000	            mov rax, qword [0x04000ce5] 	      6033	ops.c	FUNCTION_67	IF_50
0x4000ce5	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      6033	ops.c	FUNCTION_67	IF_50
0x4000cea	            0x85c9	                           test ecx, ecx	      6035	ops.c	FUNCTION_67	IF_50	IF_51
0x4000cec	    0x488998e01100	          mov qword [rax + 0x11e0], rbx 	      6033	ops.c	FUNCTION_67	IF_50
0x4000cf3	    0x4489b0e81100	         mov dword [rax + 0x11e8], r14d 	      6033	ops.c	FUNCTION_67	IF_50
0x4000cfa	    0x89a8ec110000	          mov dword [rax + 0x11ec], ebp 	      6033	ops.c	FUNCTION_67	IF_50
0x4000d00	    0x4889b8001200	          mov qword [rax + 0x1200], rdi 	      6034	ops.c	FUNCTION_67	IF_50
0x4000d07	    0x898808120000	          mov dword [rax + 0x1208], ecx 	      6034	ops.c	FUNCTION_67	IF_50
0x4000d0d	    0x89b00c120000	          mov dword [rax + 0x120c], esi 	      6034	ops.c	FUNCTION_67	IF_50
0x4000d13	            0x7e09	                           jle 0x4000d1e	      6035	ops.c	FUNCTION_67	IF_50	IF_51
0x4000d15	          0x83e901	                              sub ecx, 1	      6036	ops.c	FUNCTION_67	IF_50	IF_51
0x4000d18	    0x898808120000	          mov dword [rax + 0x1208], ecx 	      6036	ops.c	FUNCTION_67	IF_50	IF_51
0x4000d1e	        0x8b4c2428	            mov ecx, dword [rsp + 0x28] 	      6040	ops.c	FUNCTION_67	IF_52
0x4000d22	            0x85c9	                           test ecx, ecx	      6040	ops.c	FUNCTION_67	IF_52
0x4000d24	     0xf85b0050000	                           jne 0x40012da	      6040	ops.c	FUNCTION_67	IF_52
0x4000d2a	    0xc7424c010000	               mov dword [rdx + 0x4c], 1	      6043	ops.c	FUNCTION_67	ELSE_15	IF_53
0x4000d31	      0xb801000000	                              mov eax, 1	      6043	ops.c	FUNCTION_67	ELSE_15	IF_53
0x4000d36	      0xe951f9ffff	                           jmp 0x400068c	      6043	ops.c	FUNCTION_67	ELSE_15	IF_53
0x4000d3b	       0xf1f440000	                   nop dword [rax + rax]	      6043	ops.c	FUNCTION_67	ELSE_15	IF_53
0x4000d40	      0x837c24341d	           cmp dword [rsp + 0x34], 0x1d 	      5810	ops.c	FUNCTION_67	IF_16	IF_17
0x4000d45	     0xf84b3040000	                            je 0x40011fe	      5810	ops.c	FUNCTION_67	IF_16	IF_17
0x4000d4b	        0x4183fc60	                          cmp r12d, 0x60	      5828	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0x4000d4f	     0xf8e12030000	                           jle 0x4001067	      5828	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0x4000d55	      0xb87a000000	                           mov eax, 0x7a	      5828	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0x4000d5a	          0x4429e0	                           sub eax, r12d	      5828	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0x4000d5d	            0x4898	                                    cdqe	      5828	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0x4000d5f	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      5839	ops.c	FUNCTION_67	IF_16	ELSE_4
0x4000d64	      0x40887c2408	                 mov byte [rsp + 8], dil	      5839	ops.c	FUNCTION_67	IF_16	ELSE_4
0x4000d69	          0x4101cc	                           add r12d, ecx	      5839	ops.c	FUNCTION_67	IF_16	ELSE_4
0x4000d6c	          0x4839c8	                            cmp rax, rcx	      5828	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0x4000d6f	            0x7d24	                           jge 0x4000d95	      5828	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0x4000d71	      0xe800000000	                          call 0x4000d76	      5830	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21	CALL_28
0x4000d76	       0xfb67c2408	               movzx edi, byte [rsp + 8]	      5830	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21	CALL_28
0x4000d7b	          0x488b00	                    mov rax, qword [rax]	      5830	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21	CALL_28
0x4000d7e	         0xfb70478	           movzx eax, word [rax + rdi*2]	      5830	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21	CALL_28
0x4000d82	        0x66250001	                           and ax, 0x100	      5830	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21	CALL_28
0x4000d86	        0x6683f801	                               cmp ax, 1	      5831	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21
0x4000d8a	          0x4519e4	                          sbb r12d, r12d	      5831	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21
0x4000d8d	        0x4183e420	                          and r12d, 0x20	      5831	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21
0x4000d91	        0x4183c45a	                          add r12d, 0x5a	      5831	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21
0x4000d95	    0x488b05000000	            mov rax, qword [0x04000d9c] 	      5842	ops.c	FUNCTION_67	IF_16
0x4000d9c	            0x31ff	                            xor edi, edi	      5846	ops.c	FUNCTION_67	IF_16	CALL_30
0x4000d9e	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      5844	ops.c	FUNCTION_67	IF_16	IF_22
0x4000da2	        0x44897040	            mov dword [rax + 0x40], r14d	      5842	ops.c	FUNCTION_67	IF_16
0x4000da6	          0x8b6844	            mov ebp, dword [rax + 0x44] 	      5844	ops.c	FUNCTION_67	IF_16	IF_22
0x4000da9	      0x4889742408	                mov qword [rsp + 8], rsi	      5844	ops.c	FUNCTION_67	IF_16	IF_22
0x4000dae	      0xe800000000	                          call 0x4000db3	      5846	ops.c	FUNCTION_67	IF_16	CALL_30
0x4000db3	          0x4489e7	                           mov edi, r12d	      5847	ops.c	FUNCTION_67	IF_16	CALL_31
0x4000db6	      0xe800000000	                          call 0x4000dbb	      5847	ops.c	FUNCTION_67	IF_16	CALL_31
0x4000dbb	    0x488b15000000	            mov rdx, qword [0x04000dc2] 	      5848	ops.c	FUNCTION_67	IF_16
0x4000dc2	          0x8b4a40	            mov ecx, dword [rdx + 0x40] 	      5848	ops.c	FUNCTION_67	IF_16
0x4000dc5	        0x488b7a38	            mov rdi, qword [rdx + 0x38] 	      5848	ops.c	FUNCTION_67	IF_16
0x4000dc9	          0x8b7244	            mov esi, dword [rdx + 0x44] 	      5848	ops.c	FUNCTION_67	IF_16
0x4000dcc	        0x44897240	            mov dword [rdx + 0x40], r14d	      5849	ops.c	FUNCTION_67	IF_16
0x4000dd0	      0xe909ffffff	                           jmp 0x4000cde	      5849	ops.c	FUNCTION_67	IF_16
0x4000dd5	           0xf1f00	                         nop dword [rax]	      5849	ops.c	FUNCTION_67	IF_16
0x4000dd8	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      5690	ops.c	FUNCTION_67	IF_2	IF_7
0x4000dde	     0xf84dcf9ffff	                            je 0x40007c0	      5690	ops.c	FUNCTION_67	IF_2	IF_7
0x4000de4	        0x458b7508	               mov r14d, dword [r13 + 8]	      5705	ops.c	FUNCTION_67	IF_2	IF_7
0x4000de8	          0x4585f6	                         test r14d, r14d	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x4000deb	     0xf8ecff9ffff	                           jle 0x40007c0	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x4000df1	          0x4d63fe	                        movsxd r15, r14d	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x4000df4	          0x4901df	                            add r15, rbx	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x4000df7	            0xeb26	                           jmp 0x4000e1f	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x4000df9	     0xf1f80000000	                         nop dword [rax]	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x4000e00	    0x8b0500000000	            mov eax, dword [0x04000e06] 	      5711	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0x4000e06	        0x4183ee01	                             sub r14d, 1	      5709	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3
0x4000e0a	            0x85c0	                           test eax, eax	      5711	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0x4000e0c	     0xf853e020000	                           jne 0x4001050	      5711	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0x4000e12	        0x4983ef01	                              sub r15, 1	      5711	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0x4000e16	          0x4585f6	                         test r14d, r14d	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x4000e19	     0xf84a1f9ffff	                            je 0x40007c0	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x4000e1f	        0x410fb63f	                   movzx edi, byte [r15]	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x4000e23	          0x4d89fc	                            mov r12, r15	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x4000e26	          0x4c89fd	                            mov rbp, r15	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x4000e29	          0x4929dc	                            sub r12, rbx	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x4000e2c	      0xe800000000	                          call 0x4000e31	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x4000e31	            0x85c0	                           test eax, eax	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x4000e33	            0x75cb	                           jne 0x4000e00	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x4000e35	      0xe986fcffff	                           jmp 0x4000ac0	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x4000e3a	    0x660f1f440000	                    nop word [rax + rax]	      5707	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0x4000e40	          0x4963f6	                        movsxd rsi, r14d	      5676	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0x4000e43	          0x4889df	                            mov rdi, rbx	      5676	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0x4000e46	          0x4801de	                            add rsi, rbx	      5676	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0x4000e49	    0xff1500000000	                 call qword [0x04000e4f]	      5676	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0x4000e4f	          0x4129c6	                           sub r14d, eax	      5676	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0x4000e52	      0xe9c1f8ffff	                           jmp 0x4000718	      5676	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0x4000e57	    0x660f1f840000	                    nop word [rax + rax]	      5676	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0x4000e60	          0x4963f6	                        movsxd rsi, r14d	      5686	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0x4000e63	          0x4889df	                            mov rdi, rbx	      5686	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0x4000e66	          0x4801de	                            add rsi, rbx	      5686	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0x4000e69	    0xff1500000000	                 call qword [0x04000e6f]	      5686	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0x4000e6f	          0x4129c6	                           sub r14d, eax	      5686	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0x4000e72	      0xe9e5f8ffff	                           jmp 0x400075c	      5686	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0x4000e77	    0x8b0500000000	            mov eax, dword [0x04000e7d] 	      5855	ops.c	FUNCTION_67	ELSE_7	IF_23
0x4000e7d	            0x85c0	                           test eax, eax	      5855	ops.c	FUNCTION_67	ELSE_7	IF_23
0x4000e7f	     0xf85ea030000	                           jne 0x400126f	      5855	ops.c	FUNCTION_67	ELSE_7	IF_23
0x4000e85	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      5858	ops.c	FUNCTION_67	ELSE_7	IF_23
0x4000e89	            0x85c0	                           test eax, eax	      5858	ops.c	FUNCTION_67	ELSE_7	IF_23
0x4000e8b	     0xf8541faffff	                           jne 0x40008d2	      5858	ops.c	FUNCTION_67	ELSE_7	IF_23
0x4000e91	        0x4183ee01	                             sub r14d, 1	      5861	ops.c	FUNCTION_67	ELSE_7	IF_23
0x4000e95	    0x41bd01000000	                             mov r13d, 1	      5862	ops.c	FUNCTION_67	ELSE_7	IF_23
0x4000e9b	          0x4d63fe	                        movsxd r15, r14d	      5862	ops.c	FUNCTION_67	ELSE_7	IF_23
0x4000e9e	          0x4901df	                            add r15, rbx	      5862	ops.c	FUNCTION_67	ELSE_7	IF_23
0x4000ea1	     0xf1f80000000	                         nop dword [rax]	      5862	ops.c	FUNCTION_67	ELSE_7	IF_23
0x4000ea8	            0x31c0	                            xor eax, eax	      5649	ops.c	FUNCTION_67
0x4000eaa	      0xe94bfaffff	                           jmp 0x40008fa	      5649	ops.c	FUNCTION_67
0x4000eaf	              0x90	                                     nop	      5649	ops.c	FUNCTION_67
0x4000eb0	          0x4585ed	                         test r13d, r13d	      5887	ops.c	FUNCTION_67	ELSE_7	IF_27
0x4000eb3	     0xf8433040000	                            je 0x40012ec	      5887	ops.c	FUNCTION_67	ELSE_7	IF_27
0x4000eb9	            0x31c0	                            xor eax, eax	      5888	ops.c	FUNCTION_67	ELSE_7	IF_27
0x4000ebb	      0x837c24341d	           cmp dword [rsp + 0x34], 0x1d 	      5888	ops.c	FUNCTION_67	ELSE_7	IF_27
0x4000ec0	    0x41bd01000000	                             mov r13d, 1	      5888	ops.c	FUNCTION_67	ELSE_7	IF_27
0x4000ec6	           0xf95c0	                                setne al	      5888	ops.c	FUNCTION_67	ELSE_7	IF_27
0x4000ec9	            0x85c0	                           test eax, eax	      5891	ops.c	FUNCTION_67	ELSE_7	IF_28
0x4000ecb	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	      5890	ops.c	FUNCTION_67	ELSE_7
0x4000ed0	     0xf85a0010000	                           jne 0x4001076	      5891	ops.c	FUNCTION_67	ELSE_7	IF_28
0x4000ed6	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      5894	ops.c	FUNCTION_67	ELSE_7	ELSE_8
0x4000edb	          0x4801d0	                            add rax, rdx	      5894	ops.c	FUNCTION_67	ELSE_7	ELSE_8
0x4000ede	          0x4839d0	                            cmp rax, rdx	      5909	ops.c	FUNCTION_67	ELSE_7	IF_29	ELSE_9	IF_32
0x4000ee1	      0x4889442458	             mov qword [rsp + 0x58], rax	      5909	ops.c	FUNCTION_67	ELSE_7	IF_29	ELSE_9	IF_32
0x4000ee6	            0x730c	                           jae 0x4000ef4	      5909	ops.c	FUNCTION_67	ELSE_7	IF_29	ELSE_9	IF_32
0x4000ee8	          0x48f7d0	                                 not rax	      5911	ops.c	FUNCTION_67	ELSE_7	IF_29	ELSE_9	IF_32
0x4000eeb	        0x4183f501	                             xor r13d, 1	      5912	ops.c	FUNCTION_67	ELSE_7	IF_29	ELSE_9	IF_32
0x4000eef	      0x4889442458	             mov qword [rsp + 0x58], rax	      5911	ops.c	FUNCTION_67	ELSE_7	IF_29	ELSE_9	IF_32
0x4000ef4	          0x4885c0	                           test rax, rax	      5916	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_33
0x4000ef7	      0xb800000000	                              mov eax, 0	      5916	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_33
0x4000efc	        0x440f44e8	                         cmove r13d, eax	      5916	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_33
0x4000f00	      0xe972faffff	                           jmp 0x4000977	      5916	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_33
0x4000f05	           0xf1f00	                         nop dword [rax]	      5916	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_33
0x4000f08	           0xfb63b	                   movzx edi, byte [rbx]	      5916	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_33
0x4000f0b	          0x4989df	                            mov r15, rbx	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x4000f0e	            0x31ed	                            xor ebp, ebp	      5755	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0x4000f10	          0x4531f6	                          xor r14d, r14d	      5761	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5
0x4000f13	      0xe96cf6ffff	                           jmp 0x4000584	      5761	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5
0x4000f18	     0xf1f84000000	                   nop dword [rax + rax]	      5761	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5
0x4000f20	        0x41c60730	                    mov byte [r15], 0x30	      5970	ops.c	FUNCTION_67	ELSE_7	IF_41
0x4000f24	        0x8b442454	            mov eax, dword [rsp + 0x54] 	      5973	ops.c	FUNCTION_67	ELSE_7	IF_42
0x4000f28	      0x836c244c01	               sub dword [rsp + 0x4c], 1	      5971	ops.c	FUNCTION_67	ELSE_7	IF_41
0x4000f2d	            0x89c2	                            mov edx, eax	      5973	ops.c	FUNCTION_67	ELSE_7	IF_42
0x4000f2f	          0x83e2df	                     and edx, 0xffffffdf	      5973	ops.c	FUNCTION_67	ELSE_7	IF_42
0x4000f32	          0x83fa58	                           cmp edx, 0x58	      5974	ops.c	FUNCTION_67	ELSE_7	IF_42
0x4000f35	            0x7457	                            je 0x4000f8e	      5974	ops.c	FUNCTION_67	ELSE_7	IF_42
0x4000f37	          0x83fa42	                           cmp edx, 0x42	      5974	ops.c	FUNCTION_67	ELSE_7	IF_42
0x4000f3a	        0x4d8d6f01	                      lea r13, [r15 + 1]	      5970	ops.c	FUNCTION_67	ELSE_7	IF_41
0x4000f3e	            0x744e	                            je 0x4000f8e	      5974	ops.c	FUNCTION_67	ELSE_7	IF_42
0x4000f40	            0x85c0	                           test eax, eax	      5998	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45
0x4000f42	     0xf849c030000	                            je 0x40012e4	      5998	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45
0x4000f48	          0x83f830	                           cmp eax, 0x30	      6001	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46
0x4000f4b	      0x4c8d442460	                    lea r8, [rsp + 0x60]	      6002	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46	CALL_41
0x4000f50	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	      6002	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46	CALL_41
0x4000f55	      0xba00000000	                              mov edx, 0	      6002	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46	CALL_41
0x4000f5a	            0x7414	                            je 0x4000f70	      6001	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46
0x4000f5c	    0x8b3d00000000	            mov edi, dword [0x04000f62] 	      6004	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47
0x4000f62	      0xba00000000	                              mov edx, 0	      6005	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47	CALL_42
0x4000f67	            0x85ff	                           test edi, edi	      6004	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47
0x4000f69	            0x7505	                           jne 0x4000f70	      6004	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47
0x4000f6b	      0xba00000000	                              mov edx, 0	      6008	ops.c	FUNCTION_67	ELSE_7	ELSE_14	CALL_43
0x4000f70	          0x4c89c7	                             mov rdi, r8	      6008	ops.c	FUNCTION_67	ELSE_7	ELSE_14	CALL_43
0x4000f73	      0xbe41000000	                           mov esi, 0x41	      6008	ops.c	FUNCTION_67	ELSE_7	ELSE_14	CALL_43
0x4000f78	            0x31c0	                            xor eax, eax	      6008	ops.c	FUNCTION_67	ELSE_7	ELSE_14	CALL_43
0x4000f7a	      0x4c89442410	              mov qword [rsp + 0x10], r8	      6008	ops.c	FUNCTION_67	ELSE_7	ELSE_14	CALL_43
0x4000f7f	      0xe800000000	                          call 0x4000f84	      6008	ops.c	FUNCTION_67	ELSE_7	ELSE_14	CALL_43
0x4000f84	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      6008	ops.c	FUNCTION_67	ELSE_7	ELSE_14	CALL_43
0x4000f89	      0xe9c2fcffff	                           jmp 0x4000c50	      6008	ops.c	FUNCTION_67	ELSE_7	ELSE_14	CALL_43
0x4000f8e	        0x41884701	                  mov byte [r15 + 1], al	      5976	ops.c	FUNCTION_67	ELSE_7	IF_42
0x4000f92	        0x8b442454	            mov eax, dword [rsp + 0x54] 	      5976	ops.c	FUNCTION_67	ELSE_7	IF_42
0x4000f96	        0x4d8d6f02	                      lea r13, [r15 + 2]	      5976	ops.c	FUNCTION_67	ELSE_7	IF_42
0x4000f9a	      0x836c244c01	               sub dword [rsp + 0x4c], 1	      5977	ops.c	FUNCTION_67	ELSE_7	IF_42
0x4000f9f	            0x89c2	                            mov edx, eax	      5983	ops.c	FUNCTION_67	ELSE_7	IF_43
0x4000fa1	          0x83e2df	                     and edx, 0xffffffdf	      5983	ops.c	FUNCTION_67	ELSE_7	IF_43
0x4000fa4	          0x83fa42	                           cmp edx, 0x42	      5983	ops.c	FUNCTION_67	ELSE_7	IF_43
0x4000fa7	            0x7597	                           jne 0x4000f40	      5983	ops.c	FUNCTION_67	ELSE_7	IF_43
0x4000fa9	      0x488b542458	            mov rdx, qword [rsp + 0x58] 	      5983	ops.c	FUNCTION_67	ELSE_7	IF_43
0x4000fae	      0xbe40000000	                           mov esi, 0x40	      5983	ops.c	FUNCTION_67	ELSE_7	IF_43
0x4000fb3	            0xeb0e	                           jmp 0x4000fc3	      5983	ops.c	FUNCTION_67	ELSE_7	IF_43
0x4000fb5	           0xf1f00	                         nop dword [rax]	      5983	ops.c	FUNCTION_67	ELSE_7	IF_43
0x4000fb8	          0x4863f0	                         movsxd rsi, eax	      5983	ops.c	FUNCTION_67	ELSE_7	IF_43
0x4000fbb	            0x85f6	                           test esi, esi	      5990	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_1
0x4000fbd	     0xf8499020000	                            je 0x400125c	      5990	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_1
0x4000fc3	          0x8d46ff	                      lea eax, [rsi - 1]	      5991	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0x4000fc6	        0x480fa3c2	                             bt rdx, rax	      5991	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0x4000fca	            0x73ec	                           jae 0x4000fb8	      5991	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0x4000fcc	      0x4c8d442460	                    lea r8, [rsp + 0x60]	      5991	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0x4000fd1	            0x89f1	                            mov ecx, esi	      5991	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0x4000fd3	          0x4c89c0	                             mov rax, r8	      5991	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0x4000fd6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5991	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0x4000fe0	          0x83e901	                              sub ecx, 1	      5994	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x4000fe3	          0x4889d7	                            mov rdi, rdx	      5994	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x4000fe6	          0x48d3ef	                             shr rdi, cl	      5994	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x4000fe9	          0x83e701	                              and edi, 1	      5994	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x4000fec	        0x4883ff01	                              cmp rdi, 1	      5994	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x4000ff0	            0x19ff	                            sbb edi, edi	      5994	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x4000ff2	        0x4883c001	                              add rax, 1	      5994	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x4000ff6	          0x83c731	                           add edi, 0x31	      5994	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x4000ff9	        0x408878ff	                 mov byte [rax - 1], dil	      5994	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x4000ffd	            0x85c9	                           test ecx, ecx	      5993	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x4000fff	            0x75df	                           jne 0x4000fe0	      5993	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0x4001001	      0xc644346000	          mov byte [rsp + rsi + 0x60], 0	      5996	ops.c	FUNCTION_67	ELSE_7	IF_43
0x4001006	      0xe945fcffff	                           jmp 0x4000c50	      5996	ops.c	FUNCTION_67	ELSE_7	IF_43
0x400100b	       0xf1f440000	                   nop dword [rax + rax]	      5996	ops.c	FUNCTION_67	ELSE_7	IF_43
0x4001010	    0x488b05000000	            mov rax, qword [0x04001017] 	      6033	ops.c	FUNCTION_67	IF_50
0x4001017	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      6033	ops.c	FUNCTION_67	IF_50
0x400101c	    0x4489b0e81100	         mov dword [rax + 0x11e8], r14d 	      6033	ops.c	FUNCTION_67	IF_50
0x4001023	    0x488988e01100	          mov qword [rax + 0x11e0], rcx 	      6033	ops.c	FUNCTION_67	IF_50
0x400102a	    0x89a8ec110000	          mov dword [rax + 0x11ec], ebp 	      6033	ops.c	FUNCTION_67	IF_50
0x4001030	    0x4889b8001200	          mov qword [rax + 0x1200], rdi 	      6034	ops.c	FUNCTION_67	IF_50
0x4001037	    0xc78008120000	            mov dword [rax + 0x1208], 0 	      6034	ops.c	FUNCTION_67	IF_50
0x4001041	    0x89b00c120000	          mov dword [rax + 0x120c], esi 	      6034	ops.c	FUNCTION_67	IF_50
0x4001047	      0xe9d2fcffff	                           jmp 0x4000d1e	      6034	ops.c	FUNCTION_67	IF_50
0x400104c	         0xf1f4000	                         nop dword [rax]	      6034	ops.c	FUNCTION_67	IF_50
0x4001050	          0x4963f6	                        movsxd rsi, r14d	      5712	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0x4001053	          0x4889df	                            mov rdi, rbx	      5712	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0x4001056	          0x4801de	                            add rsi, rbx	      5712	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0x4001059	    0xff1500000000	                 call qword [0x0400105f]	      5712	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0x400105f	          0x4129c6	                           sub r14d, eax	      5712	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0x4001062	      0xe981fdffff	                           jmp 0x4000de8	      5712	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0x4001067	      0xb85a000000	                           mov eax, 0x5a	      5828	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0x400106c	          0x4429e0	                           sub eax, r12d	      5828	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0x400106f	            0x4898	                                    cdqe	      5828	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0x4001071	      0xe9e9fcffff	                           jmp 0x4000d5f	      5828	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0x4001076	          0x4889d0	                            mov rax, rdx	      5892	ops.c	FUNCTION_67	ELSE_7	IF_28
0x4001079	      0x482b442438	             sub rax, qword [rsp + 0x38]	      5892	ops.c	FUNCTION_67	ELSE_7	IF_28
0x400107e	          0x4839c2	                            cmp rdx, rax	      5900	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_30	IF_31
0x4001081	      0x4889442458	             mov qword [rsp + 0x58], rax	      5900	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_30	IF_31
0x4001086	     0xf8368feffff	                           jae 0x4000ef4	      5900	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_30	IF_31
0x400108c	          0x48f7d8	                                 neg rax	      5902	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_30	IF_31
0x400108f	        0x4183f501	                             xor r13d, 1	      5903	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_30	IF_31
0x4001093	      0x4889442458	             mov qword [rsp + 0x58], rax	      5902	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_30	IF_31
0x4001098	      0xe957feffff	                           jmp 0x4000ef4	      5902	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_30	IF_31
0x400109d	        0x4183c601	                             add r14d, 1	      5879	ops.c	FUNCTION_67	ELSE_7	IF_25
0x40010a1	      0x836c244c01	               sub dword [rsp + 0x4c], 1	      5880	ops.c	FUNCTION_67	ELSE_7	IF_25
0x40010a6	      0xe9b4f8ffff	                           jmp 0x400095f	      5880	ops.c	FUNCTION_67	ELSE_7	IF_25
0x40010ab	      0xbd01000000	                              mov ebp, 1	      5718	ops.c	FUNCTION_67	IF_2	IF_9
0x40010b0	      0xe92dfaffff	                           jmp 0x4000ae2	      5718	ops.c	FUNCTION_67	IF_2	IF_9
0x40010b5	    0x48837c244000	               cmp qword [rsp + 0x40], 0	      6018	ops.c	FUNCTION_67	ELSE_7	IF_48
0x40010bb	            0x7420	                            je 0x40010dd	      6018	ops.c	FUNCTION_67	ELSE_7	IF_48
0x40010bd	        0x8b742454	            mov esi, dword [rsp + 0x54] 	      6018	ops.c	FUNCTION_67	ELSE_7	IF_48
0x40010c1	            0x85f6	                           test esi, esi	      6018	ops.c	FUNCTION_67	ELSE_7	IF_48
0x40010c3	            0x7518	                           jne 0x40010dd	      6018	ops.c	FUNCTION_67	ELSE_7	IF_48
0x40010c5	      0xe9d5fbffff	                           jmp 0x4000c9f	      6018	ops.c	FUNCTION_67	ELSE_7	IF_48
0x40010ca	    0x660f1f440000	                    nop word [rax + rax]	      6018	ops.c	FUNCTION_67	ELSE_7	IF_48
0x40010d0	        0x4983c501	                              add r13, 1	      6020	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0x40010d4	      0x41c645ff30	                mov byte [r13 - 1], 0x30	      6020	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0x40010d9	        0x8b44244c	            mov eax, dword [rsp + 0x4c] 	      6019	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0x40010dd	          0x8d50ff	                      lea edx, [rax - 1]	      6019	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0x40010e0	            0x85c0	                           test eax, eax	      6019	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0x40010e2	        0x8954244c	             mov dword [rsp + 0x4c], edx	      6019	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0x40010e6	            0x7fe8	                            jg 0x40010d0	      6019	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0x40010e8	      0xe9b2fbffff	                           jmp 0x4000c9f	      6019	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0x40010ed	    0x8b0500000000	            mov eax, dword [0x040010f3] 	      5787	ops.c	FUNCTION_67	IF_12	IF_14
0x40010f3	            0x85c0	                           test eax, eax	      5787	ops.c	FUNCTION_67	IF_12	IF_14
0x40010f5	     0xf85a5010000	                           jne 0x40012a0	      5787	ops.c	FUNCTION_67	IF_12	IF_14
0x40010fb	          0x4963ee	                        movsxd rbp, r14d	      5787	ops.c	FUNCTION_67	IF_12	IF_14
0x40010fe	    0x41bb01000000	                             mov r11d, 1	      5787	ops.c	FUNCTION_67	IF_12	IF_14
0x4001104	    0xc74424100000	               mov dword [rsp + 0x10], 0	      5793	ops.c	FUNCTION_67	IF_12	IF_14
0x400110c	        0x4c8d3c2b	                    lea r15, [rbx + rbp]	      5793	ops.c	FUNCTION_67	IF_12	IF_14
0x4001110	    0x41bd01000000	                             mov r13d, 1	      5792	ops.c	FUNCTION_67	IF_12	IF_14
0x4001116	        0x410fb63f	                   movzx edi, byte [r15]	      5792	ops.c	FUNCTION_67	IF_12	IF_14
0x400111a	      0xe90ff5ffff	                           jmp 0x400062e	      5792	ops.c	FUNCTION_67	IF_12	IF_14
0x400111f	    0x448b3d000000	           mov r15d, dword [0x04001126] 	      5723	ops.c	FUNCTION_67	IF_2	IF_9
0x4001126	          0x4585ff	                         test r15d, r15d	      5723	ops.c	FUNCTION_67	IF_2	IF_9
0x4001129	            0x7411	                            je 0x400113c	      5723	ops.c	FUNCTION_67	IF_2	IF_9
0x400112b	          0x4889df	                            mov rdi, rbx	      5724	ops.c	FUNCTION_67	IF_2	IF_9
0x400112e	    0xff1500000000	                 call qword [0x04001134]	      5724	ops.c	FUNCTION_67	IF_2	IF_9
0x4001134	            0x85c0	                           test eax, eax	      5723	ops.c	FUNCTION_67	IF_2	IF_9
0x4001136	     0xf85a6f9ffff	                           jne 0x4000ae2	      5723	ops.c	FUNCTION_67	IF_2	IF_9
0x400113c	    0x420fb67c2301	        movzx edi, byte [rbx + r12 + 1] 	      5726	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0x4001142	      0xe800000000	                          call 0x4001147	      5726	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0x4001147	            0x85c0	                           test eax, eax	      5726	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0x4001149	     0xf845cffffff	                            je 0x40010ab	      5726	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0x400114f	    0x448b1d000000	           mov r11d, dword [0x04001156] 	      5741	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0x4001156	        0x4183ee01	                             sub r14d, 1	      5739	ops.c	FUNCTION_67	IF_2	IF_9
0x400115a	          0x4585db	                         test r11d, r11d	      5741	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0x400115d	     0xf8416f4ffff	                            je 0x4000579	      5741	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0x4001163	          0x4963f6	                        movsxd rsi, r14d	      5742	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0x4001166	          0x4889df	                            mov rdi, rbx	      5742	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0x4001169	          0x4801de	                            add rsi, rbx	      5742	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0x400116c	    0xff1500000000	                 call qword [0x04001172]	      5742	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0x4001172	          0x4129c6	                           sub r14d, eax	      5742	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0x4001175	      0xe9fff3ffff	                           jmp 0x4000579	      5742	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0x400117a	        0x4c8d7b01	                      lea r15, [rbx + 1]	      5966	ops.c	FUNCTION_67	ELSE_7	IF_40
0x400117e	          0xc6032d	                    mov byte [rbx], 0x2d	      5966	ops.c	FUNCTION_67	ELSE_7	IF_40
0x4001181	      0xe98efaffff	                           jmp 0x4000c14	      5966	ops.c	FUNCTION_67	ELSE_7	IF_40
0x4001186	          0x4889df	                            mov rdi, rbx	      5867	ops.c	FUNCTION_67	ELSE_7	IF_24	CALL_32
0x4001189	      0x44885c2408	                mov byte [rsp + 8], r11b	      5867	ops.c	FUNCTION_67	ELSE_7	IF_24	CALL_32
0x400118e	      0xe800000000	                          call 0x4001193	      5867	ops.c	FUNCTION_67	ELSE_7	IF_24	CALL_32
0x4001193	    0x440fb65c2408	              movzx r11d, byte [rsp + 8]	      5868	ops.c	FUNCTION_67	ELSE_7	IF_24
0x4001199	          0x4429f0	                           sub eax, r14d	      5868	ops.c	FUNCTION_67	ELSE_7	IF_24
0x400119c	      0xe959f7ffff	                           jmp 0x40008fa	      5868	ops.c	FUNCTION_67	ELSE_7	IF_24
0x40011a1	     0xf1f80000000	                         nop dword [rax]	      5868	ops.c	FUNCTION_67	ELSE_7	IF_24
0x40011a8	          0x4c89fd	                            mov rbp, r15	      5868	ops.c	FUNCTION_67	ELSE_7	IF_24
0x40011ab	            0xeb24	                           jmp 0x40011d1	      5868	ops.c	FUNCTION_67	ELSE_7	IF_24
0x40011ad	           0xf1f00	                         nop dword [rax]	      5868	ops.c	FUNCTION_67	ELSE_7	IF_24
0x40011b0	    0x448b05000000	            mov r8d, dword [0x040011b7] 	      5763	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0x40011b7	        0x4183ee01	                             sub r14d, 1	      5761	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5
0x40011bb	          0x4585c0	                           test r8d, r8d	      5763	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0x40011be	     0xf852cf8ffff	                           jne 0x40009f0	      5763	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0x40011c4	        0x4883ed01	                              sub rbp, 1	      5763	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0x40011c8	          0x4585f6	                         test r14d, r14d	      5757	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5
0x40011cb	     0xf8437fdffff	                            je 0x4000f08	      5757	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5
0x40011d1	       0xfb67c2bff	         movzx edi, byte [rbx + rbp - 1]	      5758	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0x40011d6	      0xe800000000	                          call 0x40011db	      5758	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0x40011db	            0x85c0	                           test eax, eax	      5758	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0x40011dd	            0x75d1	                           jne 0x40011b0	      5758	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0x40011df	      0xe97ff8ffff	                           jmp 0x4000a63	      5758	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0x40011e4	         0xf1f4000	                         nop dword [rax]	      5758	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0x40011e8	      0x836c244c01	               sub dword [rsp + 0x4c], 1	      5940	ops.c	FUNCTION_67	ELSE_7	IF_36
0x40011ed	      0xe993f9ffff	                           jmp 0x4000b85	      5940	ops.c	FUNCTION_67	ELSE_7	IF_36
0x40011f2	          0x4585f6	                         test r14d, r14d	      5718	ops.c	FUNCTION_67	IF_2	IF_9
0x40011f5	        0x400f9fc5	                                setg bpl	      5718	ops.c	FUNCTION_67	IF_2	IF_9
0x40011f9	      0xe9e4f8ffff	                           jmp 0x4000ae2	      5718	ops.c	FUNCTION_67	IF_2	IF_9
0x40011fe	        0x4183fc60	                          cmp r12d, 0x60	      5812	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0x4001202	            0x7f62	                            jg 0x4001266	      5812	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0x4001204	      0x418d4424bf	                   lea eax, [r12 - 0x41]	      5812	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0x4001209	            0x4898	                                    cdqe	      5812	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0x400120b	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      5823	ops.c	FUNCTION_67	IF_16	IF_17
0x4001210	      0x40887c2408	                 mov byte [rsp + 8], dil	      5823	ops.c	FUNCTION_67	IF_16	IF_17
0x4001215	          0x4129d4	                           sub r12d, edx	      5823	ops.c	FUNCTION_67	IF_16	IF_17
0x4001218	          0x4839d0	                            cmp rax, rdx	      5812	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0x400121b	     0xf8d74fbffff	                           jge 0x4000d95	      5812	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0x4001221	      0xe800000000	                          call 0x4001226	      5814	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19	CALL_25
0x4001226	       0xfb67c2408	               movzx edi, byte [rsp + 8]	      5814	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19	CALL_25
0x400122b	          0x488b00	                    mov rax, qword [rax]	      5814	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19	CALL_25
0x400122e	         0xfb70478	           movzx eax, word [rax + rdi*2]	      5814	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19	CALL_25
0x4001232	        0x66250001	                           and ax, 0x100	      5814	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19	CALL_25
0x4001236	        0x6683f801	                               cmp ax, 1	      5815	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19
0x400123a	          0x4519e4	                          sbb r12d, r12d	      5815	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19
0x400123d	        0x4183e420	                          and r12d, 0x20	      5815	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19
0x4001241	        0x4183c441	                          add r12d, 0x41	      5815	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19
0x4001245	      0xe94bfbffff	                           jmp 0x4000d95	      5815	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19
0x400124a	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      5815	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19
0x400124f	          0x4531ed	                          xor r13d, r13d	      5892	ops.c	FUNCTION_67	ELSE_7	IF_28
0x4001252	      0x4829442458	             sub qword [rsp + 0x58], rax	      5892	ops.c	FUNCTION_67	ELSE_7	IF_28
0x4001257	      0xe91bf7ffff	                           jmp 0x4000977	      5892	ops.c	FUNCTION_67	ELSE_7	IF_28
0x400125c	      0x4c8d442460	                    lea r8, [rsp + 0x60]	      5892	ops.c	FUNCTION_67	ELSE_7	IF_28
0x4001261	      0xe99bfdffff	                           jmp 0x4001001	      5892	ops.c	FUNCTION_67	ELSE_7	IF_28
0x4001266	      0x418d44249f	                   lea eax, [r12 - 0x61]	      5812	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0x400126b	            0x4898	                                    cdqe	      5812	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0x400126d	            0xeb9c	                           jmp 0x400120b	      5812	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0x400126f	      0x44885c2408	                mov byte [rsp + 8], r11b	      5812	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0x4001274	          0x4889df	                            mov rdi, rbx	      5856	ops.c	FUNCTION_67	ELSE_7	IF_23
0x4001277	    0xff1500000000	                 call qword [0x0400127d]	      5856	ops.c	FUNCTION_67	ELSE_7	IF_23
0x400127d	            0x85c0	                           test eax, eax	      5855	ops.c	FUNCTION_67	ELSE_7	IF_23
0x400127f	    0x440fb65c2408	              movzx r11d, byte [rsp + 8]	      5855	ops.c	FUNCTION_67	ELSE_7	IF_23
0x4001285	     0xf84fafbffff	                            je 0x4000e85	      5855	ops.c	FUNCTION_67	ELSE_7	IF_23
0x400128b	      0xe936f6ffff	                           jmp 0x40008c6	      5855	ops.c	FUNCTION_67	ELSE_7	IF_23
0x4001290	          0x4c89fd	                            mov rbp, r15	      5855	ops.c	FUNCTION_67	ELSE_7	IF_23
0x4001293	        0x4e8d3c3b	                    lea r15, [rbx + r15]	      5855	ops.c	FUNCTION_67	ELSE_7	IF_23
0x4001297	        0x410fb63f	                   movzx edi, byte [r15]	      5855	ops.c	FUNCTION_67	ELSE_7	IF_23
0x400129b	      0xe9e4f2ffff	                           jmp 0x4000584	      5855	ops.c	FUNCTION_67	ELSE_7	IF_23
0x40012a0	          0x4963ee	                        movsxd rbp, r14d	      5855	ops.c	FUNCTION_67	ELSE_7	IF_23
0x40012a3	          0x4889df	                            mov rdi, rbx	      5788	ops.c	FUNCTION_67	IF_12	IF_14
0x40012a6	        0x4c8d3c2b	                    lea r15, [rbx + rbp]	      5788	ops.c	FUNCTION_67	IF_12	IF_14
0x40012aa	    0xff1500000000	                 call qword [0x040012b0]	      5788	ops.c	FUNCTION_67	IF_12	IF_14
0x40012b0	            0x85c0	                           test eax, eax	      5787	ops.c	FUNCTION_67	IF_12	IF_14
0x40012b2	        0x410fb63f	                   movzx edi, byte [r15]	      5787	ops.c	FUNCTION_67	IF_12	IF_14
0x40012b6	     0xf8564f3ffff	                           jne 0x4000620	      5787	ops.c	FUNCTION_67	IF_12	IF_14
0x40012bc	    0x41bb01000000	                             mov r11d, 1	      5787	ops.c	FUNCTION_67	IF_12	IF_14
0x40012c2	    0xc74424100000	               mov dword [rsp + 0x10], 0	      5793	ops.c	FUNCTION_67	IF_12	IF_14
0x40012ca	    0x41bd01000000	                             mov r13d, 1	      5792	ops.c	FUNCTION_67	IF_12	IF_14
0x40012d0	      0xe959f3ffff	                           jmp 0x400062e	      5792	ops.c	FUNCTION_67	IF_12	IF_14
0x40012d5	      0xe800000000	                          call 0x40012da	      6046	ops.c	FUNCTION_67
0x40012da	      0xb801000000	                              mov eax, 1	      6046	ops.c	FUNCTION_67
0x40012df	      0xe991f3ffff	                           jmp 0x4000675	      6046	ops.c	FUNCTION_67
0x40012e4	          0x4d89ef	                            mov r15, r13	      6046	ops.c	FUNCTION_67
0x40012e7	      0xe936f9ffff	                           jmp 0x4000c22	      6046	ops.c	FUNCTION_67
0x40012ec	            0x31c0	                            xor eax, eax	      5884	ops.c	FUNCTION_67	ELSE_7
0x40012ee	      0x837c24341d	           cmp dword [rsp + 0x34], 0x1d 	      5884	ops.c	FUNCTION_67	ELSE_7
0x40012f3	           0xf94c0	                                 sete al	      5884	ops.c	FUNCTION_67	ELSE_7
0x40012f6	      0xe9cefbffff	                           jmp 0x4000ec9	      5884	ops.c	FUNCTION_67	ELSE_7
handle_viminfo_register	SWITCH,0:DO,0:ELSE,3:functions,0:FOR,2:IF,13:WHILE,0:CALL,5	165
0x4008500	            0x8b07	                    mov eax, dword [rdi]	      6240	ops.c	FUNCTION_71	IF_1
0x4008502	          0x83f805	                              cmp eax, 5	      6240	ops.c	FUNCTION_71	IF_1
0x4008505	     0xf8e83010000	                           jle 0x400868e	      6240	ops.c	FUNCTION_71	IF_1
0x400850b	            0x4157	                                push r15	      6225	ops.c	FUNCTION_71
0x400850d	            0x4156	                                push r14	      6225	ops.c	FUNCTION_71
0x400850f	            0x4155	                                push r13	      6225	ops.c	FUNCTION_71
0x4008511	            0x4154	                                push r12	      6225	ops.c	FUNCTION_71
0x4008513	              0x55	                                push rbp	      6225	ops.c	FUNCTION_71
0x4008514	              0x53	                                push rbx	      6225	ops.c	FUNCTION_71
0x4008515	        0x4883ec38	                           sub rsp, 0x38	      6225	ops.c	FUNCTION_71
0x4008519	        0x488b5f10	            mov rbx, qword [rdi + 0x10] 	      6226	ops.c	FUNCTION_71
0x400851d	            0x8b2b	                    mov ebp, dword [rbx]	      6241	ops.c	FUNCTION_71	IF_1
0x400851f	            0x85ed	                           test ebp, ebp	      6241	ops.c	FUNCTION_71	IF_1
0x4008521	     0xf8559010000	                           jne 0x4008680	      6241	ops.c	FUNCTION_71	IF_1
0x4008527	        0x448b5b20	           mov r11d, dword [rbx + 0x20] 	      6242	ops.c	FUNCTION_71	IF_1
0x400852b	          0x4585db	                         test r11d, r11d	      6242	ops.c	FUNCTION_71	IF_1
0x400852e	     0xf854c010000	                           jne 0x4008680	      6242	ops.c	FUNCTION_71	IF_1
0x4008534	        0x448b5340	           mov r10d, dword [rbx + 0x40] 	      6243	ops.c	FUNCTION_71	IF_1
0x4008538	          0x4585d2	                         test r10d, r10d	      6243	ops.c	FUNCTION_71	IF_1
0x400853b	     0xf853f010000	                           jne 0x4008680	      6243	ops.c	FUNCTION_71	IF_1
0x4008541	        0x448b4b60	            mov r9d, dword [rbx + 0x60] 	      6244	ops.c	FUNCTION_71	IF_1
0x4008545	          0x4585c9	                           test r9d, r9d	      6244	ops.c	FUNCTION_71	IF_1
0x4008548	     0xf8532010000	                           jne 0x4008680	      6244	ops.c	FUNCTION_71	IF_1
0x400854e	    0x448b83800000	            mov r8d, dword [rbx + 0x80] 	      6245	ops.c	FUNCTION_71	IF_1
0x4008555	          0x4585c0	                           test r8d, r8d	      6245	ops.c	FUNCTION_71	IF_1
0x4008558	     0xf8522010000	                           jne 0x4008680	      6245	ops.c	FUNCTION_71	IF_1
0x400855e	    0x8bbba0000000	            mov edi, dword [rbx + 0xa0] 	      6246	ops.c	FUNCTION_71	IF_1
0x4008564	            0x85ff	                           test edi, edi	      6246	ops.c	FUNCTION_71	IF_1
0x4008566	     0xf8514010000	                           jne 0x4008680	      6246	ops.c	FUNCTION_71	IF_1
0x400856c	        0x488b6b28	            mov rbp, qword [rbx + 0x28] 	      6249	ops.c	FUNCTION_71
0x4008570	          0x83fd27	                           cmp ebp, 0x27	      6250	ops.c	FUNCTION_71	IF_2
0x4008573	     0xf8707010000	                            ja 0x4008680	      6250	ops.c	FUNCTION_71	IF_2
0x4008579	        0x4c8b6348	            mov r12, qword [rbx + 0x48] 	      6252	ops.c	FUNCTION_71
0x400857d	        0x4183fc02	                             cmp r12d, 2	      6253	ops.c	FUNCTION_71	IF_3
0x4008581	     0xf87f9000000	                            ja 0x4008680	      6253	ops.c	FUNCTION_71	IF_3
0x4008587	        0x488b5368	            mov rdx, qword [rbx + 0x68] 	      6255	ops.c	FUNCTION_71
0x400858b	            0x89d1	                            mov ecx, edx	      6256	ops.c	FUNCTION_71	IF_4
0x400858d	      0x4889542408	                mov qword [rsp + 8], rdx	      6255	ops.c	FUNCTION_71
0x4008592	          0x83c105	                              add ecx, 5	      6256	ops.c	FUNCTION_71	IF_4
0x4008595	            0x39c8	                            cmp eax, ecx	      6256	ops.c	FUNCTION_71	IF_4
0x4008597	     0xf8ee3000000	                           jle 0x4008680	      6256	ops.c	FUNCTION_71	IF_4
0x400859d	    0x488b83880000	            mov rax, qword [rbx + 0x88] 	      6258	ops.c	FUNCTION_71
0x40085a4	            0x85c0	                           test eax, eax	      6259	ops.c	FUNCTION_71	IF_5
0x40085a6	      0x4889442418	             mov qword [rsp + 0x18], rax	      6258	ops.c	FUNCTION_71
0x40085ab	     0xf88cf000000	                            js 0x4008680	      6259	ops.c	FUNCTION_71	IF_5
0x40085b1	    0x488b0d000000	            mov rcx, qword [0x040085b8] 	      6262	ops.c	FUNCTION_71	IF_6
0x40085b8	          0x4885c9	                           test rcx, rcx	      6262	ops.c	FUNCTION_71	IF_6
0x40085bb	     0xf8436010000	                            je 0x40086f7	      6262	ops.c	FUNCTION_71	IF_6
0x40085c1	          0x4863c5	                         movsxd rax, ebp	      6265	ops.c	FUNCTION_71	IF_6
0x40085c4	        0x48c1e005	                              shl rax, 5	      6265	ops.c	FUNCTION_71	IF_6
0x40085c8	        0x4c8d3c01	                    lea r15, [rcx + rax]	      6265	ops.c	FUNCTION_71	IF_6
0x40085cc	        0x488b4308	                mov rax, qword [rbx + 8]	      6248	ops.c	FUNCTION_71
0x40085d0	          0x498b3f	                    mov rdi, qword [r15]	      6271	ops.c	FUNCTION_71	IF_7
0x40085d3	        0x89742424	             mov dword [rsp + 0x24], esi	      6271	ops.c	FUNCTION_71	IF_7
0x40085d7	      0x4889442428	             mov qword [rsp + 0x28], rax	      6248	ops.c	FUNCTION_71
0x40085dc	    0x488b83a80000	            mov rax, qword [rbx + 0xa8] 	      6270	ops.c	FUNCTION_71
0x40085e3	          0x4885ff	                           test rdi, rdi	      6271	ops.c	FUNCTION_71	IF_7
0x40085e6	      0x4889442410	             mov qword [rsp + 0x10], rax	      6270	ops.c	FUNCTION_71
0x40085eb	            0x7450	                            je 0x400863d	      6271	ops.c	FUNCTION_71	IF_7
0x40085ed	        0x8b4c2424	            mov ecx, dword [rsp + 0x24] 	      6271	ops.c	FUNCTION_71	IF_7
0x40085f1	            0x85c9	                           test ecx, ecx	      6271	ops.c	FUNCTION_71	IF_7
0x40085f3	            0x750f	                           jne 0x4008604	      6271	ops.c	FUNCTION_71	IF_7
0x40085f5	          0x4885c0	                           test rax, rax	      6272	ops.c	FUNCTION_71	IF_7
0x40085f8	     0xf8482000000	                            je 0x4008680	      6272	ops.c	FUNCTION_71	IF_7
0x40085fe	        0x493b4718	            cmp rax, qword [r15 + 0x18] 	      6272	ops.c	FUNCTION_71	IF_7
0x4008602	            0x7c7c	                            jl 0x4008680	      6272	ops.c	FUNCTION_71	IF_7
0x4008604	      0x49837f0800	                  cmp qword [r15 + 8], 0	      6276	ops.c	FUNCTION_71	IF_8	FOR_1
0x4008609	            0x7e32	                           jle 0x400863d	      6276	ops.c	FUNCTION_71	IF_8	FOR_1
0x400860b	    0x41bd01000000	                             mov r13d, 1	      6276	ops.c	FUNCTION_71	IF_8	FOR_1
0x4008611	          0x4531f6	                          xor r14d, r14d	      6276	ops.c	FUNCTION_71	IF_8	FOR_1
0x4008614	            0xeb0d	                           jmp 0x4008623	      6276	ops.c	FUNCTION_71	IF_8	FOR_1
0x4008616	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      6276	ops.c	FUNCTION_71	IF_8	FOR_1
0x4008620	          0x498b3f	                    mov rdi, qword [r15]	      6276	ops.c	FUNCTION_71	IF_8	FOR_1
0x4008623	        0x4a8b3c37	              mov rdi, qword [rdi + r14]	      6277	ops.c	FUNCTION_71	IF_8	FOR_1
0x4008627	        0x4983c608	                              add r14, 8	      6277	ops.c	FUNCTION_71	IF_8	FOR_1
0x400862b	      0xe800000000	                          call 0x4008630	      6277	ops.c	FUNCTION_71	IF_8	FOR_1
0x4008630	          0x4c89ef	                            mov rdi, r13	      6276	ops.c	FUNCTION_71	IF_8	FOR_1
0x4008633	        0x4983c501	                              add r13, 1	      6276	ops.c	FUNCTION_71	IF_8	FOR_1
0x4008637	        0x493b7f08	                cmp rdi, qword [r15 + 8]	      6276	ops.c	FUNCTION_71	IF_8	FOR_1
0x400863b	            0x7ce3	                            jl 0x4008620	      6276	ops.c	FUNCTION_71	IF_8	FOR_1
0x400863d	          0x498b3f	                    mov rdi, qword [r15]	      6278	ops.c	FUNCTION_71	CALL_2
0x4008640	      0xe800000000	                          call 0x4008645	      6278	ops.c	FUNCTION_71	CALL_2
0x4008645	    0x48833d000000	               cmp qword [0x0400864d], 0	      6280	ops.c	FUNCTION_71	IF_9
0x400864d	     0xf84b7000000	                            je 0x400870a	      6280	ops.c	FUNCTION_71	IF_9
0x4008653	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      6288	ops.c	FUNCTION_71
0x4008657	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      6289	ops.c	FUNCTION_71
0x400865c	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      6290	ops.c	FUNCTION_71
0x4008661	        0x45886710	             mov byte [r15 + 0x10], r12b	      6287	ops.c	FUNCTION_71
0x4008665	        0x41894714	             mov dword [r15 + 0x14], eax	      6288	ops.c	FUNCTION_71
0x4008669	            0x85c9	                           test ecx, ecx	      6291	ops.c	FUNCTION_71	IF_12
0x400866b	          0x4863c1	                         movsxd rax, ecx	      6289	ops.c	FUNCTION_71
0x400866e	        0x49894708	                mov qword [r15 + 8], rax	      6289	ops.c	FUNCTION_71
0x4008672	        0x49895718	             mov qword [r15 + 0x18], rdx	      6290	ops.c	FUNCTION_71
0x4008676	            0x7518	                           jne 0x4008690	      6291	ops.c	FUNCTION_71	IF_12
0x4008678	    0x49c707000000	                      mov qword [r15], 0	      6292	ops.c	FUNCTION_71	IF_12
0x400867f	              0x90	                                     nop	      6292	ops.c	FUNCTION_71	IF_12
0x4008680	        0x4883c438	                           add rsp, 0x38	      6308	ops.c	FUNCTION_71
0x4008684	              0x5b	                                 pop rbx	      6308	ops.c	FUNCTION_71
0x4008685	              0x5d	                                 pop rbp	      6308	ops.c	FUNCTION_71
0x4008686	            0x415c	                                 pop r12	      6308	ops.c	FUNCTION_71
0x4008688	            0x415d	                                 pop r13	      6308	ops.c	FUNCTION_71
0x400868a	            0x415e	                                 pop r14	      6308	ops.c	FUNCTION_71
0x400868c	            0x415f	                                 pop r15	      6308	ops.c	FUNCTION_71
0x400868e	            0xf3c3	                                     ret	      6308	ops.c	FUNCTION_71
0x4008690	    0x8d3cc5000000	                        lea edi, [rax*8]	      6296	ops.c	FUNCTION_71	ELSE_2	CALL_4
0x4008697	      0xe800000000	                          call 0x400869c	      6296	ops.c	FUNCTION_71	ELSE_2	CALL_4
0x400869c	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      6297	ops.c	FUNCTION_71	ELSE_2	FOR_2
0x40086a1	          0x498907	                    mov qword [r15], rax	      6295	ops.c	FUNCTION_71	ELSE_2
0x40086a4	            0x85c9	                           test ecx, ecx	      6297	ops.c	FUNCTION_71	ELSE_2	FOR_2
0x40086a6	            0x7ed8	                           jle 0x4008680	      6297	ops.c	FUNCTION_71	ELSE_2	FOR_2
0x40086a8	        0x448d69ff	                     lea r13d, [rcx - 1]	      6297	ops.c	FUNCTION_71	ELSE_2	FOR_2
0x40086ac	    0x4881c3d00000	                           add rbx, 0xd0	      6297	ops.c	FUNCTION_71	ELSE_2	FOR_2
0x40086b3	            0x31ed	                            xor ebp, ebp	      6297	ops.c	FUNCTION_71	ELSE_2	FOR_2
0x40086b5	        0x49c1e503	                              shl r13, 3	      6297	ops.c	FUNCTION_71	ELSE_2	FOR_2
0x40086b9	            0xeb23	                           jmp 0x40086de	      6297	ops.c	FUNCTION_71	ELSE_2	FOR_2
0x40086bb	       0xf1f440000	                   nop dword [rax + rax]	      6297	ops.c	FUNCTION_71	ELSE_2	FOR_2
0x40086c0	          0x488b13	                    mov rdx, qword [rbx]	      6301	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x40086c3	        0x48891428	              mov qword [rax + rbp], rdx	      6301	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x40086c7	    0x48c703000000	                      mov qword [rbx], 0	      6302	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x40086ce	        0x4883c320	                           add rbx, 0x20	      6302	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x40086d2	          0x4939ed	                            cmp r13, rbp	      6297	ops.c	FUNCTION_71	ELSE_2	FOR_2
0x40086d5	            0x74a9	                            je 0x4008680	      6297	ops.c	FUNCTION_71	ELSE_2	FOR_2
0x40086d7	          0x498b07	                    mov rax, qword [r15]	      6297	ops.c	FUNCTION_71	ELSE_2	FOR_2
0x40086da	        0x4883c508	                              add rbp, 8	      6297	ops.c	FUNCTION_71	ELSE_2	FOR_2
0x40086de	          0x8b530c	              mov edx, dword [rbx + 0xc]	      6299	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x40086e1	            0x85d2	                           test edx, edx	      6299	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x40086e3	            0x75db	                           jne 0x40086c0	      6299	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0x40086e5	          0x488b3b	                    mov rdi, qword [rbx]	      6305	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0x40086e8	        0x4c8d2428	                    lea r12, [rax + rbp]	      6305	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0x40086ec	      0xe800000000	                          call 0x40086f1	      6305	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0x40086f1	        0x49890424	                    mov qword [r12], rax	      6305	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0x40086f5	            0xebd7	                           jmp 0x40086ce	      6305	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0x40086f7	          0x4863cd	                         movsxd rcx, ebp	      6267	ops.c	FUNCTION_71	ELSE_1
0x40086fa	        0x48c1e105	                              shl rcx, 5	      6267	ops.c	FUNCTION_71	ELSE_1
0x40086fe	    0x4c8db9000000	                          lea r15, [rcx]	      6267	ops.c	FUNCTION_71	ELSE_1
0x4008705	      0xe9c2feffff	                           jmp 0x40085cc	      6267	ops.c	FUNCTION_71	ELSE_1
0x400870a	      0xf644242801	               test byte [rsp + 0x28], 1	      6282	ops.c	FUNCTION_71	IF_9	IF_10
0x400870f	            0x7407	                            je 0x4008718	      6282	ops.c	FUNCTION_71	IF_9	IF_10
0x4008711	    0x4c893d000000	            mov qword [0x04008718], r15 	      6283	ops.c	FUNCTION_71	IF_9	IF_10
0x4008718	      0xf644242802	               test byte [rsp + 0x28], 2	      6284	ops.c	FUNCTION_71	IF_9	IF_11
0x400871d	     0xf8430ffffff	                            je 0x4008653	      6284	ops.c	FUNCTION_71	IF_9	IF_11
0x4008723	      0x837c242400	               cmp dword [rsp + 0x24], 0	      6284	ops.c	FUNCTION_71	IF_9	IF_11
0x4008728	            0x750d	                           jne 0x4008737	      6284	ops.c	FUNCTION_71	IF_9	IF_11
0x400872a	    0x833d00000000	               cmp dword [0x04008731], 0	      6284	ops.c	FUNCTION_71	IF_9	IF_11
0x4008731	     0xf851cffffff	                           jne 0x4008653	      6284	ops.c	FUNCTION_71	IF_9	IF_11
0x4008737	          0x83fdff	             cmp ebp, 0xffffffffffffffff	      4210	ops.c	FUNCTION_51	IF_1
0x400873a	            0x7430	                            je 0x400876c	      4210	ops.c	FUNCTION_51	IF_1
0x400873c	          0x83fd09	                              cmp ebp, 9	      4212	ops.c	FUNCTION_51	ELSE_1	IF_2
0x400873f	          0x8d4530	                   lea eax, [rbp + 0x30]	      4213	ops.c	FUNCTION_51	ELSE_1	IF_2
0x4008742	            0x7e1d	                           jle 0x4008761	      4212	ops.c	FUNCTION_51	ELSE_1	IF_2
0x4008744	          0x83fd24	                           cmp ebp, 0x24	      4214	ops.c	FUNCTION_51	ELSE_2	IF_3
0x4008747	            0x742a	                            je 0x4008773	      4214	ops.c	FUNCTION_51	ELSE_2	IF_3
0x4008749	          0x83fd25	                           cmp ebp, 0x25	      4217	ops.c	FUNCTION_51	ELSE_3	IF_4
0x400874c	      0xb82a000000	                           mov eax, 0x2a	      4218	ops.c	FUNCTION_51	ELSE_3	IF_4
0x4008751	            0x740e	                            je 0x4008761	      4217	ops.c	FUNCTION_51	ELSE_3	IF_4
0x4008753	          0x8d4557	                   lea eax, [rbp + 0x57]	      4235	ops.c	FUNCTION_51	ELSE_5
0x4008756	          0x83fd26	                           cmp ebp, 0x26	      4235	ops.c	FUNCTION_51	ELSE_5
0x4008759	      0xbe2b000000	                           mov esi, 0x2b	      4235	ops.c	FUNCTION_51	ELSE_5
0x400875e	           0xf44c6	                          cmove eax, esi	      4235	ops.c	FUNCTION_51	ELSE_5
0x4008761	    0x890500000000	            mov dword [0x04008767], eax 	      6285	ops.c	FUNCTION_71	IF_9	CALL_3
0x4008767	      0xe9e7feffff	                           jmp 0x4008653	      6285	ops.c	FUNCTION_71	IF_9	CALL_3
0x400876c	      0xb822000000	                           mov eax, 0x22	      4211	ops.c	FUNCTION_51	IF_1
0x4008771	            0xebee	                           jmp 0x4008761	      4211	ops.c	FUNCTION_51	IF_1
0x4008773	      0xb82d000000	                           mov eax, 0x2d	      4215	ops.c	FUNCTION_51	ELSE_2	IF_3
0x4008778	            0xebe7	                           jmp 0x4008761	      4215	ops.c	FUNCTION_51	ELSE_2	IF_3
op_addsub	SWITCH,0:DO,0:ELSE,4:functions,0:FOR,1:IF,19:WHILE,0:CALL,23	226
0x4007b20	            0x4157	                                push r15	      5512	ops.c	FUNCTION_66
0x4007b22	            0x4156	                                push r14	      5512	ops.c	FUNCTION_66
0x4007b24	          0x4989ff	                            mov r15, rdi	      5512	ops.c	FUNCTION_66
0x4007b27	            0x4155	                                push r13	      5512	ops.c	FUNCTION_66
0x4007b29	            0x4154	                                push r12	      5512	ops.c	FUNCTION_66
0x4007b2b	          0x4989f5	                            mov r13, rsi	      5512	ops.c	FUNCTION_66
0x4007b2e	              0x55	                                push rbp	      5512	ops.c	FUNCTION_66
0x4007b2f	              0x53	                                push rbx	      5512	ops.c	FUNCTION_66
0x4007b30	    0x4881ec880000	                           sub rsp, 0x88	      5512	ops.c	FUNCTION_66
0x4007b37	    0x8b3500000000	            mov esi, dword [0x04007b3d] 	      5518	ops.c	FUNCTION_66	IF_1
0x4007b3d	    0x64488b042528	                mov rax, qword fs:[0x28]	      5512	ops.c	FUNCTION_66
0x4007b46	      0x4889442478	             mov qword [rsp + 0x78], rax	      5512	ops.c	FUNCTION_66
0x4007b4b	            0x31c0	                            xor eax, eax	      5512	ops.c	FUNCTION_66
0x4007b4d	            0x85f6	                           test esi, esi	      5518	ops.c	FUNCTION_66	IF_1
0x4007b4f	            0x754f	                           jne 0x4007ba0	      5518	ops.c	FUNCTION_66	IF_1
0x4007b51	    0x488b05000000	            mov rax, qword [0x04007b58] 	      5520	ops.c	FUNCTION_66	IF_1
0x4007b58	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      5520	ops.c	FUNCTION_66	IF_1
0x4007b5c	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5520	ops.c	FUNCTION_66	IF_1
0x4007b60	      0x4889542428	             mov qword [rsp + 0x28], rdx	      5520	ops.c	FUNCTION_66	IF_1
0x4007b65	      0x4889442420	             mov qword [rsp + 0x20], rax	      5520	ops.c	FUNCTION_66	IF_1
0x4007b6a	      0xe800000000	                          call 0x4007b6f	      5521	ops.c	FUNCTION_66	IF_1	IF_2	CALL_1
0x4007b6f	            0x85c0	                           test eax, eax	      5521	ops.c	FUNCTION_66	IF_1	IF_2	CALL_1
0x4007b71	     0xf8591020000	                           jne 0x4007e08	      5521	ops.c	FUNCTION_66	IF_1	IF_2	CALL_1
0x4007b77	      0x488b442478	            mov rax, qword [rsp + 0x78] 	      5613	ops.c	FUNCTION_66
0x4007b7c	    0x644833042528	                xor rax, qword fs:[0x28]	      5613	ops.c	FUNCTION_66
0x4007b85	     0xf8534030000	                           jne 0x4007ebf	      5613	ops.c	FUNCTION_66
0x4007b8b	    0x4881c4880000	                           add rsp, 0x88	      5613	ops.c	FUNCTION_66
0x4007b92	              0x5b	                                 pop rbx	      5613	ops.c	FUNCTION_66
0x4007b93	              0x5d	                                 pop rbp	      5613	ops.c	FUNCTION_66
0x4007b94	            0x415c	                                 pop r12	      5613	ops.c	FUNCTION_66
0x4007b96	            0x415d	                                 pop r13	      5613	ops.c	FUNCTION_66
0x4007b98	            0x415e	                                 pop r14	      5613	ops.c	FUNCTION_66
0x4007b9a	            0x415f	                                 pop r15	      5613	ops.c	FUNCTION_66
0x4007b9c	              0xc3	                                     ret	      5613	ops.c	FUNCTION_66
0x4007b9d	           0xf1f00	                         nop dword [rax]	      5613	ops.c	FUNCTION_66
0x4007ba0	        0x488b4730	            mov rax, qword [rdi + 0x30] 	      5533	ops.c	FUNCTION_66	ELSE_1	IF_4	CALL_4
0x4007ba4	          0x4189d6	                           mov r14d, edx	      5533	ops.c	FUNCTION_66	ELSE_1	IF_4	CALL_4
0x4007ba7	        0x488d7001	                      lea rsi, [rax + 1]	      5533	ops.c	FUNCTION_66	ELSE_1	IF_4	CALL_4
0x4007bab	        0x488b4720	            mov rax, qword [rdi + 0x20] 	      5533	ops.c	FUNCTION_66	ELSE_1	IF_4	CALL_4
0x4007baf	        0x488d78ff	                      lea rdi, [rax - 1]	      5533	ops.c	FUNCTION_66	ELSE_1	IF_4	CALL_4
0x4007bb3	      0xe800000000	                          call 0x4007bb8	      5533	ops.c	FUNCTION_66	ELSE_1	IF_4	CALL_4
0x4007bb8	            0x85c0	                           test eax, eax	      5533	ops.c	FUNCTION_66	ELSE_1	IF_4	CALL_4
0x4007bba	            0x74bb	                            je 0x4007b77	      5533	ops.c	FUNCTION_66	ELSE_1	IF_4	CALL_4
0x4007bbc	        0x498b4720	            mov rax, qword [r15 + 0x20] 	      5537	ops.c	FUNCTION_66	ELSE_1
0x4007bc0	        0x493b4730	            cmp rax, qword [r15 + 0x30] 	      5538	ops.c	FUNCTION_66	ELSE_1	FOR_1
0x4007bc4	        0x498b5728	            mov rdx, qword [r15 + 0x28] 	      5537	ops.c	FUNCTION_66	ELSE_1
0x4007bc8	          0x4889c7	                            mov rdi, rax	      5537	ops.c	FUNCTION_66	ELSE_1
0x4007bcb	      0x4889442420	             mov qword [rsp + 0x20], rax	      5537	ops.c	FUNCTION_66	ELSE_1
0x4007bd0	      0x4889542428	             mov qword [rsp + 0x28], rdx	      5537	ops.c	FUNCTION_66	ELSE_1
0x4007bd5	     0xf8fea010000	                            jg 0x4007dc5	      5538	ops.c	FUNCTION_66	ELSE_1	FOR_1
0x4007bdb	        0x498d4730	                   lea rax, [r15 + 0x30]	      5555	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_8
0x4007bdf	          0x4c89ed	                            mov rbp, r13	      5538	ops.c	FUNCTION_66	ELSE_1	FOR_1
0x4007be2	          0x4531e4	                          xor r12d, r12d	      5538	ops.c	FUNCTION_66	ELSE_1	FOR_1
0x4007be5	      0x4889442418	             mov qword [rsp + 0x18], rax	      5555	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_8
0x4007bea	      0xe9b0000000	                           jmp 0x4007c9f	      5555	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_8
0x4007bef	              0x90	                                     nop	      5555	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_8
0x4007bf0	          0x4585e4	                         test r12d, r12d	      5575	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11	IF_12
0x4007bf3	            0x7526	                           jne 0x4007c1b	      5575	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11	IF_12
0x4007bf5	    0x488b05000000	            mov rax, qword [0x04007bfc] 	      5576	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11	IF_12
0x4007bfc	    0x488b88e01100	          mov rcx, qword [rax + 0x11e0] 	      5576	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11	IF_12
0x4007c03	      0x48894c2408	                mov qword [rsp + 8], rcx	      5576	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11	IF_12
0x4007c08	    0x8b88e8110000	          mov ecx, dword [rax + 0x11e8] 	      5576	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11	IF_12
0x4007c0e	    0x8b80ec110000	          mov eax, dword [rax + 0x11ec] 	      5576	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11	IF_12
0x4007c14	        0x894c2404	                mov dword [rsp + 4], ecx	      5576	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11	IF_12
0x4007c18	          0x890424	                    mov dword [rsp], eax	      5576	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11	IF_12
0x4007c1b	        0x4183c401	                             add r12d, 1	      5577	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11
0x4007c1f	      0xe800000000	                          call 0x4007c24	      5581	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_14
0x4007c24	            0x85c0	                           test eax, eax	      5581	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_14
0x4007c26	            0x7454	                            je 0x4007c7c	      5581	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_14
0x4007c28	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      5583	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_15
0x4007c2d	    0x488b3d000000	            mov rdi, qword [0x04007c34] 	      5583	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_15
0x4007c34	            0x31d2	                            xor edx, edx	      5583	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_15
0x4007c36	      0xe800000000	                          call 0x4007c3b	      5583	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_15
0x4007c3b	        0x8b542428	            mov edx, dword [rsp + 0x28] 	      5585	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_16
0x4007c3f	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      5585	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_16
0x4007c44	          0x4863cb	                         movsxd rcx, ebx	      5585	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_16
0x4007c47	    0x488b3d000000	            mov rdi, qword [0x04007c4e] 	      5585	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_16
0x4007c4e	      0x4889442410	             mov qword [rsp + 0x10], rax	      5583	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_15
0x4007c53	      0xe800000000	                          call 0x4007c58	      5585	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_16
0x4007c58	      0x48634c2428	         movsxd rcx, dword [rsp + 0x28] 	      5587	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13
0x4007c5d	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5586	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_17
0x4007c62	          0x4189d8	                            mov r8d, ebx	      5586	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_17
0x4007c65	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      5586	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_17
0x4007c6a	    0x488b3d000000	            mov rdi, qword [0x04007c71] 	      5586	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_17
0x4007c71	          0x4889ca	                            mov rdx, rcx	      5587	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13
0x4007c74	          0x4801c1	                            add rcx, rax	      5586	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_17
0x4007c77	      0xe800000000	                          call 0x4007c7c	      5586	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_17
0x4007c7c	          0x4585f6	                         test r14d, r14d	      5590	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_14
0x4007c7f	            0x7403	                            je 0x4007c84	      5590	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_14
0x4007c81	          0x4c01ed	                            add rbp, r13	      5591	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_14
0x4007c84	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      5538	ops.c	FUNCTION_66	ELSE_1	FOR_1
0x4007c89	        0x498b5730	            mov rdx, qword [r15 + 0x30] 	      5538	ops.c	FUNCTION_66	ELSE_1	FOR_1
0x4007c8d	        0x488d7801	                      lea rdi, [rax + 1]	      5538	ops.c	FUNCTION_66	ELSE_1	FOR_1
0x4007c91	          0x4839fa	                            cmp rdx, rdi	      5538	ops.c	FUNCTION_66	ELSE_1	FOR_1
0x4007c94	      0x48897c2420	             mov qword [rsp + 0x20], rdi	      5538	ops.c	FUNCTION_66	ELSE_1	FOR_1
0x4007c99	     0xf8c21010000	                            jl 0x4007dc0	      5538	ops.c	FUNCTION_66	ELSE_1	FOR_1
0x4007c9f	        0x418b4f60	            mov ecx, dword [r15 + 0x60] 	      5540	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5
0x4007ca3	            0x85c9	                           test ecx, ecx	      5540	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5
0x4007ca5	            0x7569	                           jne 0x4007d10	      5540	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5
0x4007ca7	      0x41837f0801	                  cmp dword [r15 + 8], 1	      5546	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6
0x4007cac	     0xf84de000000	                            je 0x4007d90	      5546	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6
0x4007cb2	        0x49397f20	            cmp qword [r15 + 0x20], rdi 	      5554	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_7
0x4007cb6	     0xf84b4000000	                            je 0x4007d70	      5554	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_7
0x4007cbc	      0xe800000000	                          call 0x4007cc1	      5556	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_10
0x4007cc1	          0x4889c7	                            mov rdi, rax	      5556	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_10
0x4007cc4	      0xe800000000	                          call 0x4007cc9	      5556	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_10
0x4007cc9	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      5558	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_8
0x4007cce	        0x493b7f20	            cmp rdi, qword [r15 + 0x20] 	      5558	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_8
0x4007cd2	            0x89c3	                            mov ebx, eax	      5556	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_10
0x4007cd4	    0xc74424280000	               mov dword [rsp + 0x28], 0	      5557	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3
0x4007cdc	            0x7452	                            je 0x4007d30	      5558	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_8
0x4007cde	        0x493b7f30	            cmp rdi, qword [r15 + 0x30] 	      5563	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9
0x4007ce2	            0x745c	                            je 0x4007d40	      5563	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9
0x4007ce4	          0x418b3f	                    mov edi, dword [r15]	      5571	ops.c	FUNCTION_66	ELSE_1	FOR_1	CALL_13
0x4007ce7	      0x488d742420	                   lea rsi, [rsp + 0x20]	      5571	ops.c	FUNCTION_66	ELSE_1	FOR_1	CALL_13
0x4007cec	          0x4889e9	                            mov rcx, rbp	      5571	ops.c	FUNCTION_66	ELSE_1	FOR_1	CALL_13
0x4007cef	            0x89da	                            mov edx, ebx	      5571	ops.c	FUNCTION_66	ELSE_1	FOR_1	CALL_13
0x4007cf1	      0xe86a87ffff	                      call sym.do_addsub	      5571	ops.c	FUNCTION_66	ELSE_1	FOR_1	CALL_13
0x4007cf6	            0x85c0	                           test eax, eax	      5572	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11
0x4007cf8	     0xf85f2feffff	                           jne 0x4007bf0	      5572	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11
0x4007cfe	      0xe800000000	                          call 0x4007d03	      5581	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_14
0x4007d03	      0xe97cffffff	                           jmp 0x4007c84	      5581	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_14
0x4007d08	     0xf1f84000000	                   nop dword [rax + rax]	      5581	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_14
0x4007d10	      0x488d742430	                   lea rsi, [rsp + 0x30]	      5542	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5	CALL_5
0x4007d15	          0x4889fa	                            mov rdx, rdi	      5542	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5	CALL_5
0x4007d18	            0x31c9	                            xor ecx, ecx	      5542	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5	CALL_5
0x4007d1a	          0x4c89ff	                            mov rdi, r15	      5542	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5	CALL_5
0x4007d1d	      0xe81e83ffff	                     call sym.block_prep	      5542	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5	CALL_5
0x4007d22	        0x8b442448	            mov eax, dword [rsp + 0x48] 	      5543	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5
0x4007d26	        0x8b5c2438	            mov ebx, dword [rsp + 0x38] 	      5544	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5
0x4007d2a	        0x89442428	             mov dword [rsp + 0x28], eax	      5543	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5
0x4007d2e	            0xebb4	                           jmp 0x4007ce4	      5543	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5
0x4007d30	        0x418b5728	            mov edx, dword [r15 + 0x28] 	      5560	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_8
0x4007d34	            0x29d3	                            sub ebx, edx	      5561	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_8
0x4007d36	        0x493b7f30	            cmp rdi, qword [r15 + 0x30] 	      5563	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9
0x4007d3a	        0x89542428	             mov dword [rsp + 0x28], edx	      5560	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_8
0x4007d3e	            0x75a4	                           jne 0x4007ce4	      5563	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9
0x4007d40	      0xe800000000	                          call 0x4007d45	      5565	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	CALL_12
0x4007d45	          0x4889c7	                            mov rdi, rax	      5565	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	CALL_12
0x4007d48	      0xe800000000	                          call 0x4007d4d	      5565	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	CALL_12
0x4007d4d	        0x418b5f38	            mov ebx, dword [r15 + 0x38] 	      5566	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	IF_10
0x4007d51	            0x39d8	                            cmp eax, ebx	      5566	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	IF_10
0x4007d53	            0x7f07	                            jg 0x4007d5c	      5566	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	IF_10
0x4007d55	          0x8d58ff	                      lea ebx, [rax - 1]	      5567	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	IF_10
0x4007d58	        0x41895f38	             mov dword [r15 + 0x38], ebx	      5567	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	IF_10
0x4007d5c	        0x2b5c2428	             sub ebx, dword [rsp + 0x28]	      5568	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9
0x4007d60	          0x83c301	                              add ebx, 1	      5568	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9
0x4007d63	      0xe97cffffff	                           jmp 0x4007ce4	      5568	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9
0x4007d68	     0xf1f84000000	                   nop dword [rax + rax]	      5568	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9
0x4007d70	        0x418b5714	            mov edx, dword [r15 + 0x14] 	      5554	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_7
0x4007d74	            0x85d2	                           test edx, edx	      5554	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_7
0x4007d76	     0xf8540ffffff	                           jne 0x4007cbc	      5554	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_7
0x4007d7c	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      5555	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_8
0x4007d81	      0xe800000000	                          call 0x4007d86	      5555	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_8
0x4007d86	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      5555	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_8
0x4007d8b	      0xe92cffffff	                           jmp 0x4007cbc	      5555	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_8
0x4007d90	    0x488b05000000	            mov rax, qword [0x04007d97] 	      5548	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6
0x4007d97	    0xc74424280000	               mov dword [rsp + 0x28], 0	      5549	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6
0x4007d9f	    0xc74040000000	               mov dword [rax + 0x40], 0	      5548	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6
0x4007da6	      0xe800000000	                          call 0x4007dab	      5550	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6	CALL_7
0x4007dab	          0x4889c7	                            mov rdi, rax	      5550	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6	CALL_7
0x4007dae	      0xe800000000	                          call 0x4007db3	      5550	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6	CALL_7
0x4007db3	            0x89c3	                            mov ebx, eax	      5550	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6	CALL_7
0x4007db5	      0xe92affffff	                           jmp 0x4007ce4	      5550	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6	CALL_7
0x4007dba	    0x660f1f440000	                    nop word [rax + rax]	      5550	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6	CALL_7
0x4007dc0	          0x4585e4	                         test r12d, r12d	      5593	ops.c	FUNCTION_66	ELSE_1	IF_15
0x4007dc3	            0x757b	                           jne 0x4007e40	      5593	ops.c	FUNCTION_66	ELSE_1	IF_15
0x4007dc5	        0x418b475c	            mov eax, dword [r15 + 0x5c] 	      5596	ops.c	FUNCTION_66	ELSE_1	IF_16
0x4007dc9	            0x85c0	                           test eax, eax	      5596	ops.c	FUNCTION_66	ELSE_1	IF_16
0x4007dcb	     0xf85df000000	                           jne 0x4007eb0	      5596	ops.c	FUNCTION_66	ELSE_1	IF_16
0x4007dd1	          0x4531e4	                          xor r12d, r12d	      5605	ops.c	FUNCTION_66	ELSE_1	IF_18
0x4007dd4	    0x48833d000000	               cmp qword [0x04007ddc], 0	      5605	ops.c	FUNCTION_66	ELSE_1	IF_18
0x4007ddc	     0xf8995fdffff	                           jns 0x4007b77	      5605	ops.c	FUNCTION_66	ELSE_1	IF_18
0x4007de2	            0x31ff	                            xor edi, edi	      5610	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0x4007de4	      0xba05000000	                              mov edx, 5	      5610	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0x4007de9	      0xbe00000000	                              mov esi, 0	      5610	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0x4007dee	      0xe800000000	                          call 0x4007df3	      5610	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0x4007df3	          0x4489e6	                           mov esi, r12d	      5610	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0x4007df6	          0x4889c7	                            mov rdi, rax	      5610	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0x4007df9	            0x31c0	                            xor eax, eax	      5610	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0x4007dfb	      0xe800000000	                          call 0x4007e00	      5610	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0x4007e00	      0xe972fdffff	                           jmp 0x4007b77	      5610	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0x4007e05	           0xf1f00	                         nop dword [rax]	      5610	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0x4007e08	          0x418b3f	                    mov edi, dword [r15]	      5523	ops.c	FUNCTION_66	IF_1	CALL_2
0x4007e0b	      0x488d742420	                   lea rsi, [rsp + 0x20]	      5523	ops.c	FUNCTION_66	IF_1	CALL_2
0x4007e10	            0x31d2	                            xor edx, edx	      5523	ops.c	FUNCTION_66	IF_1	CALL_2
0x4007e12	          0x4c89e9	                            mov rcx, r13	      5523	ops.c	FUNCTION_66	IF_1	CALL_2
0x4007e15	      0xe84686ffff	                      call sym.do_addsub	      5523	ops.c	FUNCTION_66	IF_1	CALL_2
0x4007e1a	            0x85c0	                           test eax, eax	      5524	ops.c	FUNCTION_66	IF_1	IF_3
0x4007e1c	     0xf8455fdffff	                            je 0x4007b77	      5524	ops.c	FUNCTION_66	IF_1	IF_3
0x4007e22	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      5525	ops.c	FUNCTION_66	IF_1	CALL_3
0x4007e27	            0x31c9	                            xor ecx, ecx	      5525	ops.c	FUNCTION_66	IF_1	CALL_3
0x4007e29	            0x31f6	                            xor esi, esi	      5525	ops.c	FUNCTION_66	IF_1	CALL_3
0x4007e2b	        0x488d5701	                      lea rdx, [rdi + 1]	      5525	ops.c	FUNCTION_66	IF_1	CALL_3
0x4007e2f	      0xe800000000	                          call 0x4007e34	      5525	ops.c	FUNCTION_66	IF_1	CALL_3
0x4007e34	      0xe93efdffff	                           jmp 0x4007b77	      5525	ops.c	FUNCTION_66	IF_1	CALL_3
0x4007e39	     0xf1f80000000	                         nop dword [rax]	      5525	ops.c	FUNCTION_66	IF_1	CALL_3
0x4007e40	        0x498b7f20	            mov rdi, qword [r15 + 0x20] 	      5594	ops.c	FUNCTION_66	ELSE_1	CALL_18
0x4007e44	            0x31c9	                            xor ecx, ecx	      5594	ops.c	FUNCTION_66	ELSE_1	CALL_18
0x4007e46	            0x31f6	                            xor esi, esi	      5594	ops.c	FUNCTION_66	ELSE_1	CALL_18
0x4007e48	        0x4883c201	                              add rdx, 1	      5594	ops.c	FUNCTION_66	ELSE_1	CALL_18
0x4007e4c	      0xe800000000	                          call 0x4007e51	      5594	ops.c	FUNCTION_66	ELSE_1	CALL_18
0x4007e51	    0x488b05000000	            mov rax, qword [0x04007e58] 	      5603	ops.c	FUNCTION_66	ELSE_1	IF_17
0x4007e58	      0x488b742408	                mov rsi, qword [rsp + 8]	      5603	ops.c	FUNCTION_66	ELSE_1	IF_17
0x4007e5d	        0x8b5c2404	                mov ebx, dword [rsp + 4]	      5603	ops.c	FUNCTION_66	ELSE_1	IF_17
0x4007e61	          0x8b0c24	                    mov ecx, dword [rsp]	      5603	ops.c	FUNCTION_66	ELSE_1	IF_17
0x4007e64	    0x4889b0e01100	          mov qword [rax + 0x11e0], rsi 	      5603	ops.c	FUNCTION_66	ELSE_1	IF_17
0x4007e6b	    0x8998e8110000	          mov dword [rax + 0x11e8], ebx 	      5603	ops.c	FUNCTION_66	ELSE_1	IF_17
0x4007e71	    0x8988ec110000	          mov dword [rax + 0x11ec], ecx 	      5603	ops.c	FUNCTION_66	ELSE_1	IF_17
0x4007e77	          0x4963c4	                        movsxd rax, r12d	      5605	ops.c	FUNCTION_66	ELSE_1	IF_18
0x4007e7a	    0x483b05000000	            cmp rax, qword [0x04007e81] 	      5605	ops.c	FUNCTION_66	ELSE_1	IF_18
0x4007e81	     0xf8ef0fcffff	                           jle 0x4007b77	      5605	ops.c	FUNCTION_66	ELSE_1	IF_18
0x4007e87	        0x4183fc01	                             cmp r12d, 1	      5607	ops.c	FUNCTION_66	ELSE_1	IF_18	IF_19
0x4007e8b	     0xf8551ffffff	                           jne 0x4007de2	      5607	ops.c	FUNCTION_66	ELSE_1	IF_18	IF_19
0x4007e91	            0x31ff	                            xor edi, edi	      5608	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_21
0x4007e93	      0xba05000000	                              mov edx, 5	      5608	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_21
0x4007e98	      0xbe00000000	                              mov esi, 0	      5608	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_21
0x4007e9d	      0xe800000000	                          call 0x4007ea2	      5608	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_21
0x4007ea2	          0x4889c7	                            mov rdi, rax	      5608	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_21
0x4007ea5	      0xe800000000	                          call 0x4007eaa	      5608	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_21
0x4007eaa	      0xe9c8fcffff	                           jmp 0x4007b77	      5608	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_21
0x4007eaf	              0x90	                                     nop	      5608	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_21
0x4007eb0	      0xbf14000000	                           mov edi, 0x14	      5598	ops.c	FUNCTION_66	ELSE_1	CALL_19
0x4007eb5	      0xe800000000	                          call 0x4007eba	      5598	ops.c	FUNCTION_66	ELSE_1	CALL_19
0x4007eba	      0xe912ffffff	                           jmp 0x4007dd1	      5598	ops.c	FUNCTION_66	ELSE_1	CALL_19
0x4007ebf	      0xe800000000	                          call 0x4007ec4	      5613	ops.c	FUNCTION_66
copy_yank_reg	SWITCH,0:DO,0:ELSE,1:functions,0:FOR,1:IF,2:WHILE,0:CALL,4	99
0x4001e40	            0x4154	                                push r12	      3426	ops.c	FUNCTION_47
0x4001e42	              0x55	                                push rbp	      3426	ops.c	FUNCTION_47
0x4001e43	              0x53	                                push rbx	      3426	ops.c	FUNCTION_47
0x4001e44	          0x488b07	                    mov rax, qword [rdi]	      3012	ops.c	FUNCTION_43	IF_1
0x4001e47	    0x488b2d000000	            mov rbp, qword [0x04001e4e] 	      3427	ops.c	FUNCTION_47
0x4001e4e	        0x488b5f08	                mov rbx, qword [rdi + 8]	      3045	ops.c	FUNCTION_44	CALL_1
0x4001e52	    0x48893d000000	            mov qword [0x04001e59], rdi 	      3430	ops.c	FUNCTION_47
0x4001e59	          0x4885c0	                           test rax, rax	      3012	ops.c	FUNCTION_43	IF_1
0x4001e5c	     0xf8466010000	                            je 0x4001fc8	      3012	ops.c	FUNCTION_43	IF_1
0x4001e62	        0x4883eb01	                              sub rbx, 1	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4001e66	            0x7840	                            js 0x4001ea8	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4001e68	    0x4c8d24dd0000	                        lea r12, [rbx*8]	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4001e70	            0xeb10	                           jmp 0x4001e82	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4001e72	    0x660f1f440000	                    nop word [rax + rax]	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4001e78	    0x488b05000000	            mov rax, qword [0x04001e7f] 	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4001e7f	          0x488b00	                    mov rax, qword [rax]	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4001e82	        0x4a8b3c20	              mov rdi, qword [rax + r12]	      3032	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x4001e86	        0x4883eb01	                              sub rbx, 1	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4001e8a	        0x4983ec08	                              sub r12, 8	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4001e8e	      0xe800000000	                          call 0x4001e93	      3032	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x4001e93	        0x4883fbff	             cmp rbx, 0xffffffffffffffff	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4001e97	            0x75df	                           jne 0x4001e78	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4001e99	    0x488b1d000000	            mov rbx, qword [0x04001ea0] 	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4001ea0	          0x488b03	                    mov rax, qword [rbx]	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4001ea3	          0x4885c0	                           test rax, rax	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4001ea6	            0x7416	                            je 0x4001ebe	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4001ea8	          0x4889c7	                            mov rdi, rax	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4001eab	      0xe800000000	                          call 0x4001eb0	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4001eb0	    0x488b1d000000	            mov rbx, qword [0x04001eb7] 	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4001eb7	    0x48c703000000	                      mov qword [rbx], 0	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4001ebe	        0x488b4500	                    mov rax, qword [rbp]	      3432	ops.c	FUNCTION_47
0x4001ec2	      0xbe01000000	                              mov esi, 1	      3433	ops.c	FUNCTION_47	CALL_2
0x4001ec7	          0x488903	                    mov qword [rbx], rax	      3432	ops.c	FUNCTION_47
0x4001eca	        0x488b7d08	                mov rdi, qword [rbp + 8]	      3432	ops.c	FUNCTION_47
0x4001ece	        0x48897b08	                mov qword [rbx + 8], rdi	      3432	ops.c	FUNCTION_47
0x4001ed2	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      3432	ops.c	FUNCTION_47
0x4001ed6	        0x48c1e703	                              shl rdi, 3	      3433	ops.c	FUNCTION_47	CALL_2
0x4001eda	        0x48894310	             mov qword [rbx + 0x10], rax	      3432	ops.c	FUNCTION_47
0x4001ede	        0x488b4518	            mov rax, qword [rbp + 0x18] 	      3432	ops.c	FUNCTION_47
0x4001ee2	        0x48894318	             mov qword [rbx + 0x18], rax	      3432	ops.c	FUNCTION_47
0x4001ee6	      0xe800000000	                          call 0x4001eeb	      3433	ops.c	FUNCTION_47	CALL_2
0x4001eeb	    0x488b15000000	            mov rdx, qword [0x04001ef2] 	      3435	ops.c	FUNCTION_47	IF_1
0x4001ef2	          0x488903	                    mov qword [rbx], rax	      3433	ops.c	FUNCTION_47	CALL_2
0x4001ef5	          0x488b02	                    mov rax, qword [rdx]	      3435	ops.c	FUNCTION_47	IF_1
0x4001ef8	          0x4885c0	                           test rax, rax	      3435	ops.c	FUNCTION_47	IF_1
0x4001efb	     0xf84af000000	                            je 0x4001fb0	      3435	ops.c	FUNCTION_47	IF_1
0x4001f01	      0x48837a0800	                  cmp qword [rdx + 8], 0	      3438	ops.c	FUNCTION_47	ELSE_1	FOR_1
0x4001f06	     0xf8e95000000	                           jle 0x4001fa1	      3438	ops.c	FUNCTION_47	ELSE_1	FOR_1
0x4001f0c	            0x31db	                            xor ebx, ebx	      3438	ops.c	FUNCTION_47	ELSE_1	FOR_1
0x4001f0e	            0xeb18	                           jmp 0x4001f28	      3438	ops.c	FUNCTION_47	ELSE_1	FOR_1
0x4001f10	    0x488b05000000	            mov rax, qword [0x04001f17] 	      3438	ops.c	FUNCTION_47	ELSE_1	FOR_1
0x4001f17	        0x4883c301	                              add rbx, 1	      3438	ops.c	FUNCTION_47	ELSE_1	FOR_1
0x4001f1b	        0x48395808	                cmp qword [rax + 8], rbx	      3438	ops.c	FUNCTION_47	ELSE_1	FOR_1
0x4001f1f	     0xf8e7c000000	                           jle 0x4001fa1	      3438	ops.c	FUNCTION_47	ELSE_1	FOR_1
0x4001f25	          0x488b00	                    mov rax, qword [rax]	      3438	ops.c	FUNCTION_47	ELSE_1	FOR_1
0x4001f28	        0x4c8d24d8	                  lea r12, [rax + rbx*8]	      3439	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x4001f2c	        0x488b4500	                    mov rax, qword [rbp]	      3439	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x4001f30	        0x488b3cd8	            mov rdi, qword [rax + rbx*8]	      3439	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x4001f34	      0xe800000000	                          call 0x4001f39	      3439	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x4001f39	          0x4885c0	                           test rax, rax	      3439	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x4001f3c	        0x49890424	                    mov qword [r12], rax	      3439	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x4001f40	            0x75ce	                           jne 0x4001f10	      3439	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x4001f42	    0x488b05000000	            mov rax, qword [0x04001f49] 	      3012	ops.c	FUNCTION_43	IF_1
0x4001f49	          0x488b38	                    mov rdi, qword [rax]	      3012	ops.c	FUNCTION_43	IF_1
0x4001f4c	          0x4885ff	                           test rdi, rdi	      3012	ops.c	FUNCTION_43	IF_1
0x4001f4f	            0x7448	                            je 0x4001f99	      3012	ops.c	FUNCTION_43	IF_1
0x4001f51	        0x4883eb01	                              sub rbx, 1	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4001f55	            0x782f	                            js 0x4001f86	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4001f57	    0x4c8d24dd0000	                        lea r12, [rbx*8]	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4001f5f	              0x90	                                     nop	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4001f60	        0x4a8b3c27	              mov rdi, qword [rdi + r12]	      3032	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x4001f64	        0x4883eb01	                              sub rbx, 1	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4001f68	        0x4983ec08	                              sub r12, 8	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4001f6c	      0xe800000000	                          call 0x4001f71	      3032	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x4001f71	    0x488b05000000	            mov rax, qword [0x04001f78] 	      3032	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x4001f78	        0x4883fbff	             cmp rbx, 0xffffffffffffffff	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4001f7c	          0x488b38	                    mov rdi, qword [rax]	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4001f7f	            0x75df	                           jne 0x4001f60	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4001f81	          0x4885ff	                           test rdi, rdi	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4001f84	            0x7413	                            je 0x4001f99	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4001f86	      0xe800000000	                          call 0x4001f8b	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4001f8b	    0x488b05000000	            mov rax, qword [0x04001f92] 	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4001f92	    0x48c700000000	                      mov qword [rax], 0	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4001f99	    0x48c740080000	                  mov qword [rax + 8], 0	      3442	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2
0x4001fa1	              0x5b	                                 pop rbx	      3446	ops.c	FUNCTION_47
0x4001fa2	    0x48892d000000	            mov qword [0x04001fa9], rbp 	      3445	ops.c	FUNCTION_47
0x4001fa9	              0x5d	                                 pop rbp	      3446	ops.c	FUNCTION_47
0x4001faa	            0x415c	                                 pop r12	      3446	ops.c	FUNCTION_47
0x4001fac	              0xc3	                                     ret	      3446	ops.c	FUNCTION_47
0x4001fad	           0xf1f00	                         nop dword [rax]	      3446	ops.c	FUNCTION_47
0x4001fb0	    0x48c742080000	                  mov qword [rdx + 8], 0	      3436	ops.c	FUNCTION_47	IF_1
0x4001fb8	    0x48892d000000	            mov qword [0x04001fbf], rbp 	      3445	ops.c	FUNCTION_47
0x4001fbf	              0x5b	                                 pop rbx	      3446	ops.c	FUNCTION_47
0x4001fc0	              0x5d	                                 pop rbp	      3446	ops.c	FUNCTION_47
0x4001fc1	            0x415c	                                 pop r12	      3446	ops.c	FUNCTION_47
0x4001fc3	              0xc3	                                     ret	      3446	ops.c	FUNCTION_47
0x4001fc4	         0xf1f4000	                         nop dword [rax]	      3446	ops.c	FUNCTION_47
0x4001fc8	          0x4889fb	                            mov rbx, rdi	      3012	ops.c	FUNCTION_43	IF_1
0x4001fcb	      0xe9eefeffff	                           jmp 0x4001ebe	      3012	ops.c	FUNCTION_43	IF_1
do_record	SWITCH,0:DO,0:ELSE,3:functions,0:FOR,0:IF,3:WHILE,0:CALL,6	209
0x4003420	            0x4157	                                push r15	      1088	ops.c	FUNCTION_21
0x4003422	            0x4156	                                push r14	      1088	ops.c	FUNCTION_21
0x4003424	            0x4155	                                push r13	      1088	ops.c	FUNCTION_21
0x4003426	            0x4154	                                push r12	      1088	ops.c	FUNCTION_21
0x4003428	              0x55	                                push rbp	      1088	ops.c	FUNCTION_21
0x4003429	              0x53	                                push rbx	      1088	ops.c	FUNCTION_21
0x400342a	        0x4883ec18	                           sub rsp, 0x18	      1088	ops.c	FUNCTION_21
0x400342e	    0x8b3500000000	            mov esi, dword [0x04003434] 	      1094	ops.c	FUNCTION_21	IF_1
0x4003434	            0x85f6	                           test esi, esi	      1094	ops.c	FUNCTION_21	IF_1
0x4003436	            0x7568	                           jne 0x40034a0	      1094	ops.c	FUNCTION_21	IF_1
0x4003438	            0x85ff	                           test edi, edi	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x400343a	            0x781a	                            js 0x4003456	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x400343c	            0x89f8	                            mov eax, edi	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x400343e	          0x83e0df	                     and eax, 0xffffffdf	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x4003441	          0x83e841	                           sub eax, 0x41	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x4003444	          0x83f819	                           cmp eax, 0x19	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x4003447	            0x7627	                           jbe 0x4003470	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x4003449	          0x8d47d0	                   lea eax, [rdi - 0x30]	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x400344c	          0x83f809	                              cmp eax, 9	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x400344f	            0x761f	                           jbe 0x4003470	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x4003451	          0x83ff22	                           cmp edi, 0x22	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x4003454	            0x741a	                            je 0x4003470	      1097	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x4003456	        0x4883c418	                           add rsp, 0x18	      1138	ops.c	FUNCTION_21
0x400345a	            0x31c0	                            xor eax, eax	      1098	ops.c	FUNCTION_21	IF_1	IF_2
0x400345c	              0x5b	                                 pop rbx	      1138	ops.c	FUNCTION_21
0x400345d	              0x5d	                                 pop rbp	      1138	ops.c	FUNCTION_21
0x400345e	            0x415c	                                 pop r12	      1138	ops.c	FUNCTION_21
0x4003460	            0x415d	                                 pop r13	      1138	ops.c	FUNCTION_21
0x4003462	            0x415e	                                 pop r14	      1138	ops.c	FUNCTION_21
0x4003464	            0x415f	                                 pop r15	      1138	ops.c	FUNCTION_21
0x4003466	              0xc3	                                     ret	      1138	ops.c	FUNCTION_21
0x4003467	    0x660f1f840000	                    nop word [rax + rax]	      1138	ops.c	FUNCTION_21
0x4003470	        0x897c240c	              mov dword [rsp + 0xc], edi	      1101	ops.c	FUNCTION_21	IF_1	ELSE_1
0x4003474	    0x893d00000000	            mov dword [0x0400347a], edi 	      1101	ops.c	FUNCTION_21	IF_1	ELSE_1
0x400347a	      0xe800000000	                          call 0x400347f	      1102	ops.c	FUNCTION_21	IF_1	ELSE_1	CALL_2
0x400347f	        0x8b7c240c	              mov edi, dword [rsp + 0xc]	      1103	ops.c	FUNCTION_21	IF_1	ELSE_1
0x4003483	      0xb801000000	                              mov eax, 1	      1104	ops.c	FUNCTION_21	IF_1	ELSE_1
0x4003488	    0x893d00000000	            mov dword [0x0400348e], edi 	      1103	ops.c	FUNCTION_21	IF_1	ELSE_1
0x400348e	        0x4883c418	                           add rsp, 0x18	      1138	ops.c	FUNCTION_21
0x4003492	              0x5b	                                 pop rbx	      1138	ops.c	FUNCTION_21
0x4003493	              0x5d	                                 pop rbp	      1138	ops.c	FUNCTION_21
0x4003494	            0x415c	                                 pop r12	      1138	ops.c	FUNCTION_21
0x4003496	            0x415d	                                 pop r13	      1138	ops.c	FUNCTION_21
0x4003498	            0x415e	                                 pop r14	      1138	ops.c	FUNCTION_21
0x400349a	            0x415f	                                 pop r15	      1138	ops.c	FUNCTION_21
0x400349c	              0xc3	                                     ret	      1138	ops.c	FUNCTION_21
0x400349d	           0xf1f00	                         nop dword [rax]	      1138	ops.c	FUNCTION_21
0x40034a0	      0xbf00000000	                              mov edi, 0	      1115	ops.c	FUNCTION_21	ELSE_2	CALL_3
0x40034a5	    0xc70500000000	               mov dword [0x040034af], 0	      1114	ops.c	FUNCTION_21	ELSE_2
0x40034af	      0xe800000000	                          call 0x40034b4	      1115	ops.c	FUNCTION_21	ELSE_2	CALL_3
0x40034b4	      0xe800000000	                          call 0x40034b9	      1116	ops.c	FUNCTION_21	ELSE_2	CALL_4
0x40034b9	          0x4885c0	                           test rax, rax	      1117	ops.c	FUNCTION_21	ELSE_2	IF_3
0x40034bc	          0x4989c4	                            mov r12, rax	      1116	ops.c	FUNCTION_21	ELSE_2	CALL_4
0x40034bf	            0x7495	                            je 0x4003456	      1117	ops.c	FUNCTION_21	ELSE_2	IF_3
0x40034c1	          0x4889c7	                            mov rdi, rax	      1122	ops.c	FUNCTION_21	ELSE_2	ELSE_3	CALL_5
0x40034c4	      0xe800000000	                          call 0x40034c9	      1122	ops.c	FUNCTION_21	ELSE_2	ELSE_3	CALL_5
0x40034c9	    0x8b0500000000	            mov eax, dword [0x040034cf] 	      1131	ops.c	FUNCTION_21	ELSE_2	ELSE_3	CALL_6
0x40034cf	    0x4c8b2d000000	            mov r13, qword [0x040034d6] 	      1128	ops.c	FUNCTION_21	ELSE_2	ELSE_3
0x40034d6	    0x4c8b35000000	            mov r14, qword [0x040034dd] 	      1129	ops.c	FUNCTION_21	ELSE_2	ELSE_3
0x40034dd	          0x83f800	                              cmp eax, 0	      1153	ops.c	FUNCTION_22	IF_1	CALL_1
0x40034e0	     0xf85fa000000	                           jne 0x40035e0	      1153	ops.c	FUNCTION_22	IF_1	CALL_1
0x40034e6	    0xc70500000000	               mov dword [0x040034f0], 0	       912	ops.c	FUNCTION_15
0x40034f0	    0x8b0d00000000	            mov ecx, dword [0x040034f6] 	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x40034f6	            0x85c9	                           test ecx, ecx	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x40034f8	            0x740a	                            je 0x4003504	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x40034fa	          0x83f82a	                           cmp eax, 0x2a	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x40034fd	      0xba25000000	                           mov edx, 0x25	       934	ops.c	FUNCTION_15	ELSE_4	IF_6
0x4003502	            0x741c	                            je 0x4003520	       932	ops.c	FUNCTION_15	ELSE_4	IF_6
0x4003504	    0x8b1500000000	            mov edx, dword [0x0400350a] 	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x400350a	            0x85d2	                           test edx, edx	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x400350c	            0x740a	                            je 0x4003518	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x400350e	          0x83f82b	                           cmp eax, 0x2b	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x4003511	      0xba26000000	                           mov edx, 0x26	       940	ops.c	FUNCTION_15	ELSE_5	IF_7
0x4003516	            0x7408	                            je 0x4003520	       938	ops.c	FUNCTION_15	ELSE_5	IF_7
0x4003518	            0x31d2	                            xor edx, edx	       949	ops.c	FUNCTION_15	ELSE_7
0x400351a	    0x660f1f440000	                    nop word [rax + rax]	       949	ops.c	FUNCTION_15	ELSE_7
0x4003520	          0x4863c2	                         movsxd rax, edx	       950	ops.c	FUNCTION_15
0x4003523	        0x48c1e005	                              shl rax, 5	       950	ops.c	FUNCTION_15
0x4003527	    0x4883b8000000	                      cmp qword [rax], 0	      3012	ops.c	FUNCTION_43	IF_1
0x400352f	    0x488d98000000	                          lea rbx, [rax]	       950	ops.c	FUNCTION_15
0x4003536	    0x48891d000000	            mov qword [0x0400353d], rbx 	       950	ops.c	FUNCTION_15
0x400353d	    0x48891d000000	            mov qword [0x04003544], rbx 	       952	ops.c	FUNCTION_15	IF_9
0x4003544	        0x488b6b08	                mov rbp, qword [rbx + 8]	      3045	ops.c	FUNCTION_44	CALL_1
0x4003548	            0x7452	                            je 0x400359c	      3012	ops.c	FUNCTION_43	IF_1
0x400354a	        0x4883ed01	                              sub rbp, 1	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x400354e	     0xf8826010000	                            js 0x400367a	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4003554	    0x4c8d3ced0000	                        lea r15, [rbp*8]	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x400355c	         0xf1f4000	                         nop dword [rax]	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4003560	          0x488b03	                    mov rax, qword [rbx]	      3032	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x4003563	        0x4883ed01	                              sub rbp, 1	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4003567	        0x4a8b3c38	              mov rdi, qword [rax + r15]	      3032	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x400356b	        0x4983ef08	                              sub r15, 8	      3032	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x400356f	      0xe800000000	                          call 0x4003574	      3032	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x4003574	        0x4883fdff	             cmp rbp, 0xffffffffffffffff	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4003578	    0x488b1d000000	            mov rbx, qword [0x0400357f] 	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x400357f	            0x75df	                           jne 0x4003560	      3016	ops.c	FUNCTION_43	IF_1	FOR_1
0x4003581	          0x488b3b	                    mov rdi, qword [rbx]	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4003584	          0x4885ff	                           test rdi, rdi	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4003587	            0x7413	                            je 0x400359c	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4003589	      0xe800000000	                          call 0x400358e	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x400358e	    0x488b1d000000	            mov rbx, qword [0x04003595] 	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4003595	    0x48c703000000	                      mov qword [rbx], 0	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x400359c	      0xbf08000000	                              mov edi, 8	      1183	ops.c	FUNCTION_22	ELSE_1	IF_5	CALL_14
0x40035a1	      0xe800000000	                          call 0x40035a6	      1183	ops.c	FUNCTION_22	ELSE_1	IF_5	CALL_14
0x40035a6	          0x4885c0	                           test rax, rax	      1182	ops.c	FUNCTION_22	ELSE_1	IF_5
0x40035a9	          0x488903	                    mov qword [rbx], rax	      1182	ops.c	FUNCTION_22	ELSE_1	IF_5
0x40035ac	            0x7465	                            je 0x4003613	      1182	ops.c	FUNCTION_22	ELSE_1	IF_5
0x40035ae	    0x488b1d000000	            mov rbx, qword [0x040035b5] 	      1188	ops.c	FUNCTION_22	ELSE_1
0x40035b5	          0x488b03	                    mov rax, qword [rbx]	      1188	ops.c	FUNCTION_22	ELSE_1
0x40035b8	          0x4c8920	                    mov qword [rax], r12	      1188	ops.c	FUNCTION_22	ELSE_1
0x40035bb	    0x48c743080100	                  mov qword [rbx + 8], 1	      1189	ops.c	FUNCTION_22	ELSE_1
0x40035c3	        0xc6431000	                mov byte [rbx + 0x10], 0	      1190	ops.c	FUNCTION_22	ELSE_1
0x40035c7	      0xe800000000	                          call 0x40035cc	      1192	ops.c	FUNCTION_22	ELSE_1	CALL_16
0x40035cc	        0x48894318	             mov qword [rbx + 0x18], rax	      1192	ops.c	FUNCTION_22	ELSE_1	CALL_16
0x40035d0	      0xb801000000	                              mov eax, 1	      1195	ops.c	FUNCTION_22
0x40035d5	            0xeb46	                           jmp 0x400361d	      1195	ops.c	FUNCTION_22
0x40035d7	    0x660f1f840000	                    nop word [rax + rax]	      1195	ops.c	FUNCTION_22
0x40035e0	            0x7e19	                           jle 0x40035fb	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x40035e2	            0x89c2	                            mov edx, eax	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x40035e4	          0x83e2df	                     and edx, 0xffffffdf	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x40035e7	          0x83ea41	                           sub edx, 0x41	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x40035ea	          0x83fa19	                           cmp edx, 0x19	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x40035ed	            0x7651	                           jbe 0x4003640	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x40035ef	          0x8d50d0	                   lea edx, [rax - 0x30]	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x40035f2	          0x83fa09	                              cmp edx, 9	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x40035f5	     0xf8695000000	                           jbe 0x4003690	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x40035fb	          0x8d50de	                   lea edx, [rax - 0x22]	       880	ops.c	FUNCTION_14	IF_1
0x40035fe	          0x83fa3d	                           cmp edx, 0x3d	       880	ops.c	FUNCTION_14	IF_1
0x4003601	            0x7710	                            ja 0x4003613	       880	ops.c	FUNCTION_14	IF_1
0x4003603	    0x48b9030b0000	         movabs rcx, 0x2000000000000b03 	       880	ops.c	FUNCTION_14	IF_1
0x400360d	        0x480fa3d1	                             bt rcx, rdx	       880	ops.c	FUNCTION_14	IF_1
0x4003611	            0x722d	                            jb 0x4003640	       880	ops.c	FUNCTION_14	IF_1
0x4003613	          0x4c89e7	                            mov rdi, r12	      1185	ops.c	FUNCTION_22	ELSE_1	IF_5	CALL_15
0x4003616	      0xe800000000	                          call 0x400361b	      1185	ops.c	FUNCTION_22	ELSE_1	IF_5	CALL_15
0x400361b	            0x31c0	                            xor eax, eax	      1186	ops.c	FUNCTION_22	ELSE_1	IF_5
0x400361d	    0x4c892d000000	            mov qword [0x04003624], r13 	      1133	ops.c	FUNCTION_21	ELSE_2	ELSE_3
0x4003624	    0x4c8935000000	            mov qword [0x0400362b], r14 	      1134	ops.c	FUNCTION_21	ELSE_2	ELSE_3
0x400362b	        0x4883c418	                           add rsp, 0x18	      1138	ops.c	FUNCTION_21
0x400362f	              0x5b	                                 pop rbx	      1138	ops.c	FUNCTION_21
0x4003630	              0x5d	                                 pop rbp	      1138	ops.c	FUNCTION_21
0x4003631	            0x415c	                                 pop r12	      1138	ops.c	FUNCTION_21
0x4003633	            0x415d	                                 pop r13	      1138	ops.c	FUNCTION_21
0x4003635	            0x415e	                                 pop r14	      1138	ops.c	FUNCTION_21
0x4003637	            0x415f	                                 pop r15	      1138	ops.c	FUNCTION_21
0x4003639	              0xc3	                                     ret	      1138	ops.c	FUNCTION_21
0x400363a	    0x660f1f440000	                    nop word [rax + rax]	      1138	ops.c	FUNCTION_21
0x4003640	          0x83f85f	                           cmp eax, 0x5f	      1158	ops.c	FUNCTION_22	IF_2
0x4003643	            0x750f	                           jne 0x4003654	      1158	ops.c	FUNCTION_22	IF_2
0x4003645	          0x4c89e7	                            mov rdi, r12	      1160	ops.c	FUNCTION_22	IF_2	CALL_3
0x4003648	      0xe800000000	                          call 0x400364d	      1160	ops.c	FUNCTION_22	IF_2	CALL_3
0x400364d	      0xb801000000	                              mov eax, 1	      1161	ops.c	FUNCTION_22	IF_2
0x4003652	            0xebc9	                           jmp 0x400361d	      1161	ops.c	FUNCTION_22	IF_2
0x4003654	          0x8d50d0	                   lea edx, [rax - 0x30]	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x4003657	    0xc70500000000	               mov dword [0x04003661], 0	       912	ops.c	FUNCTION_15
0x4003661	          0x83fa09	                              cmp edx, 9	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x4003664	     0xf86b6feffff	                           jbe 0x4003520	       919	ops.c	FUNCTION_15	IF_2	CALL_1
0x400366a	          0x8d509f	                   lea edx, [rax - 0x61]	       921	ops.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x400366d	          0x83fa19	                           cmp edx, 0x19	       921	ops.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x4003670	            0x772d	                            ja 0x400369f	       921	ops.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x4003672	          0x8d50a9	                   lea edx, [rax - 0x57]	       922	ops.c	FUNCTION_15	ELSE_1	IF_3
0x4003675	      0xe9a6feffff	                           jmp 0x4003520	       922	ops.c	FUNCTION_15	ELSE_1	IF_3
0x400367a	    0x488bb8000000	                    mov rdi, qword [rax]	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4003681	      0xe903ffffff	                           jmp 0x4003589	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4003686	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3034	ops.c	FUNCTION_43	IF_1	CALL_4
0x4003690	    0xc70500000000	               mov dword [0x0400369a], 0	       912	ops.c	FUNCTION_15
0x400369a	      0xe981feffff	                           jmp 0x4003520	       912	ops.c	FUNCTION_15
0x400369f	          0x8d50bf	                   lea edx, [rax - 0x41]	       923	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_4
0x40036a2	          0x83fa19	                           cmp edx, 0x19	       923	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_4
0x40036a5	     0xf87a2000000	                            ja 0x400374d	       923	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_4
0x40036ab	          0x83e837	                           sub eax, 0x37	       925	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_5
0x40036ae	    0xc70500000000	               mov dword [0x040036b8], 1	       926	ops.c	FUNCTION_15	ELSE_2	IF_4
0x40036b8	            0x4898	                                    cdqe	       950	ops.c	FUNCTION_15
0x40036ba	        0x48c1e005	                              shl rax, 5	       950	ops.c	FUNCTION_15
0x40036be	    0x488d98000000	                          lea rbx, [rax]	       950	ops.c	FUNCTION_15
0x40036c5	    0x488b80000000	                    mov rax, qword [rax]	      1164	ops.c	FUNCTION_22	IF_3
0x40036cc	    0x48891d000000	            mov qword [0x040036d3], rbx 	       950	ops.c	FUNCTION_15
0x40036d3	    0x48891d000000	            mov qword [0x040036da], rbx 	       952	ops.c	FUNCTION_15	IF_9
0x40036da	          0x4885c0	                           test rax, rax	      1164	ops.c	FUNCTION_22	IF_3
0x40036dd	     0xf84b9feffff	                            je 0x400359c	      1164	ops.c	FUNCTION_22	IF_3
0x40036e3	        0x488b5308	                mov rdx, qword [rbx + 8]	      1166	ops.c	FUNCTION_22	IF_3
0x40036e7	      0x488d5cd0f8	              lea rbx, [rax + rdx*8 - 8]	      1166	ops.c	FUNCTION_22	IF_3
0x40036ec	          0x488b3b	                    mov rdi, qword [rbx]	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x40036ef	      0xe800000000	                          call 0x40036f4	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x40036f4	          0x4c89e7	                            mov rdi, r12	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x40036f7	          0x4889c5	                            mov rbp, rax	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x40036fa	      0xe800000000	                          call 0x40036ff	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x40036ff	      0x488d7c0501	                lea rdi, [rbp + rax + 1]	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x4003704	      0xbe01000000	                              mov esi, 1	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x4003709	      0xe800000000	                          call 0x400370e	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x400370e	          0x4885c0	                           test rax, rax	      1168	ops.c	FUNCTION_22	IF_3	IF_4
0x4003711	          0x4889c5	                            mov rbp, rax	      1167	ops.c	FUNCTION_22	IF_3	CALL_7
0x4003714	     0xf84f9feffff	                            je 0x4003613	      1168	ops.c	FUNCTION_22	IF_3	IF_4
0x400371a	          0x488b33	                    mov rsi, qword [rbx]	       110	string3.h	FUNCTION_98	CALL_3
0x400371d	          0x4889c7	                            mov rdi, rax	       110	string3.h	FUNCTION_98	CALL_3
0x4003720	      0xe800000000	                          call 0x4003725	       110	string3.h	FUNCTION_98	CALL_3
0x4003725	          0x4c89e6	                            mov rsi, r12	       148	string3.h	FUNCTION_102	CALL_3
0x4003728	          0x4889c7	                            mov rdi, rax	       148	string3.h	FUNCTION_102	CALL_3
0x400372b	      0xe800000000	                          call 0x4003730	       148	string3.h	FUNCTION_102	CALL_3
0x4003730	          0x4c89e7	                            mov rdi, r12	      1175	ops.c	FUNCTION_22	IF_3	CALL_11
0x4003733	      0xe800000000	                          call 0x4003738	      1175	ops.c	FUNCTION_22	IF_3	CALL_11
0x4003738	          0x488b3b	                    mov rdi, qword [rbx]	      1176	ops.c	FUNCTION_22	IF_3	CALL_12
0x400373b	      0xe800000000	                          call 0x4003740	      1176	ops.c	FUNCTION_22	IF_3	CALL_12
0x4003740	          0x48892b	                    mov qword [rbx], rbp	      1177	ops.c	FUNCTION_22	IF_3
0x4003743	      0xb801000000	                              mov eax, 1	      1195	ops.c	FUNCTION_22
0x4003748	      0xe9d0feffff	                           jmp 0x400361d	      1195	ops.c	FUNCTION_22
0x400374d	          0x83f82d	                           cmp eax, 0x2d	       928	ops.c	FUNCTION_15	ELSE_3	IF_5
0x4003750	      0xba24000000	                           mov edx, 0x24	       929	ops.c	FUNCTION_15	ELSE_3	IF_5
0x4003755	     0xf8595fdffff	                           jne 0x40034f0	       928	ops.c	FUNCTION_15	ELSE_3	IF_5
0x400375b	      0xe9c0fdffff	                           jmp 0x4003520	       928	ops.c	FUNCTION_15	ELSE_3	IF_5
op_delete	SWITCH,0:DO,0:ELSE,6:functions,0:FOR,1:IF,48:WHILE,0:CALL,68	633
0x400d5a0	            0x4157	                                push r15	      1745	ops.c	FUNCTION_33
0x400d5a2	            0x4156	                                push r14	      1745	ops.c	FUNCTION_33
0x400d5a4	            0x4155	                                push r13	      1745	ops.c	FUNCTION_33
0x400d5a6	            0x4154	                                push r12	      1745	ops.c	FUNCTION_33
0x400d5a8	              0x55	                                push rbp	      1745	ops.c	FUNCTION_33
0x400d5a9	              0x53	                                push rbx	      1745	ops.c	FUNCTION_33
0x400d5aa	        0x4883ec58	                           sub rsp, 0x58	      1745	ops.c	FUNCTION_33
0x400d5ae	    0x64488b042528	                mov rax, qword fs:[0x28]	      1745	ops.c	FUNCTION_33
0x400d5b7	      0x4889442448	             mov qword [rsp + 0x48], rax	      1745	ops.c	FUNCTION_33
0x400d5bc	            0x31c0	                            xor eax, eax	      1745	ops.c	FUNCTION_33
0x400d5be	    0x488b05000000	            mov rax, qword [0x0400d5c5] 	      1751	ops.c	FUNCTION_33
0x400d5c5	        0xf6401001	               test byte [rax + 0x10], 1	      1755	ops.c	FUNCTION_33	IF_1
0x400d5c9	     0xf85ad020000	                           jne 0x400d87c	      1755	ops.c	FUNCTION_33	IF_1
0x400d5cf	        0x448b4758	            mov r8d, dword [rdi + 0x58] 	      1759	ops.c	FUNCTION_33	IF_2
0x400d5d3	          0x4889fb	                            mov rbx, rdi	      1759	ops.c	FUNCTION_33	IF_2
0x400d5d6	          0x4585c0	                           test r8d, r8d	      1759	ops.c	FUNCTION_33	IF_2
0x400d5d9	     0xf8509030000	                           jne 0x400d8e8	      1759	ops.c	FUNCTION_33	IF_2
0x400d5df	    0x8ba840150000	          mov ebp, dword [rax + 0x1540] 	      1762	ops.c	FUNCTION_33	IF_3
0x400d5e5	            0x85ed	                           test ebp, ebp	      1762	ops.c	FUNCTION_33	IF_3
0x400d5e7	     0xf8413030000	                            je 0x400d900	      1762	ops.c	FUNCTION_33	IF_3
0x400d5ed	          0x8b6f04	                mov ebp, dword [rdi + 4]	      1753	ops.c	FUNCTION_33
0x400d5f0	          0x4c8b28	                    mov r13, qword [rax]	      1751	ops.c	FUNCTION_33
0x400d5f3	            0x85ed	                           test ebp, ebp	      1643	ops.c	FUNCTION_30	IF_1
0x400d5f5	     0xf84b5020000	                            je 0x400d8b0	      1643	ops.c	FUNCTION_30	IF_1
0x400d5fb	    0x8b1500000000	            mov edx, dword [0x0400d601] 	      1643	ops.c	FUNCTION_30	IF_1
0x400d601	            0x89e8	                            mov eax, ebp	      1643	ops.c	FUNCTION_30	IF_1
0x400d603	    0x8b3d00000000	            mov edi, dword [0x0400d609] 	      1652	ops.c	FUNCTION_30	IF_3
0x400d609	            0x85ff	                           test edi, edi	      1652	ops.c	FUNCTION_30	IF_3
0x400d60b	            0x7509	                           jne 0x400d616	      1652	ops.c	FUNCTION_30	IF_3
0x400d60d	          0x83f82a	                           cmp eax, 0x2a	      1652	ops.c	FUNCTION_30	IF_3
0x400d610	     0xf840a030000	                            je 0x400d920	      1652	ops.c	FUNCTION_30	IF_3
0x400d616	            0x85d2	                           test edx, edx	      1654	ops.c	FUNCTION_30	IF_4
0x400d618	            0x7509	                           jne 0x400d623	      1654	ops.c	FUNCTION_30	IF_4
0x400d61a	          0x83f82b	                           cmp eax, 0x2b	      1654	ops.c	FUNCTION_30	IF_4
0x400d61d	     0xf84fd020000	                            je 0x400d920	      1654	ops.c	FUNCTION_30	IF_4
0x400d623	    0x8b3500000000	            mov esi, dword [0x0400d629] 	      1773	ops.c	FUNCTION_33	IF_4
0x400d629	            0x85f6	                           test esi, esi	      1773	ops.c	FUNCTION_33	IF_4
0x400d62b	            0x740b	                            je 0x400d638	      1773	ops.c	FUNCTION_33	IF_4
0x400d62d	          0x8b4b14	            mov ecx, dword [rbx + 0x14] 	      2117	ops.c	ELSE_6	FUNCTION_34	IF_1
0x400d630	            0x85c9	                           test ecx, ecx	      2117	ops.c	ELSE_6	FUNCTION_34	IF_1
0x400d632	     0xf8588060000	                           jne 0x400dcc0	      2117	ops.c	ELSE_6	FUNCTION_34	IF_1
0x400d638	          0x8b5308	                mov edx, dword [rbx + 8]	      1782	ops.c	FUNCTION_33	IF_5
0x400d63b	            0x85d2	                           test edx, edx	      1782	ops.c	FUNCTION_33	IF_5
0x400d63d	            0x7520	                           jne 0x400d65f	      1782	ops.c	FUNCTION_33	IF_5
0x400d63f	          0x8b435c	            mov eax, dword [rbx + 0x5c] 	      1783	ops.c	FUNCTION_33	IF_5
0x400d642	            0x85c0	                           test eax, eax	      1783	ops.c	FUNCTION_33	IF_5
0x400d644	            0x750b	                           jne 0x400d651	      1783	ops.c	FUNCTION_33	IF_5
0x400d646	          0x8b4360	            mov eax, dword [rbx + 0x60] 	      1784	ops.c	FUNCTION_33	IF_5
0x400d649	            0x85c0	                           test eax, eax	      1784	ops.c	FUNCTION_33	IF_5
0x400d64b	     0xf84b7040000	                            je 0x400db08	      1784	ops.c	FUNCTION_33	IF_5
0x400d651	        0x488b4350	            mov rax, qword [rbx + 0x50] 	      1784	ops.c	FUNCTION_33	IF_5
0x400d655	        0x4883f801	                              cmp rax, 1	      1802	ops.c	FUNCTION_33	IF_8
0x400d659	     0xf8409050000	                            je 0x400db68	      1802	ops.c	FUNCTION_33	IF_8
0x400d65f	          0x8b7b04	                mov edi, dword [rbx + 4]	      1826	ops.c	FUNCTION_33	IF_11
0x400d662	          0x83ff5f	                           cmp edi, 0x5f	      1826	ops.c	FUNCTION_33	IF_11
0x400d665	     0xf84d9000000	                            je 0x400d744	      1826	ops.c	FUNCTION_33	IF_11
0x400d66b	          0x4531e4	                          xor r12d, r12d	      1752	ops.c	FUNCTION_33
0x400d66e	            0x85ff	                           test edi, edi	      1828	ops.c	FUNCTION_33	IF_11	IF_12
0x400d670	     0xf85f2030000	                           jne 0x400da68	      1828	ops.c	FUNCTION_33	IF_11	IF_12
0x400d676	            0x85ed	                           test ebp, ebp	      1847	ops.c	FUNCTION_33	IF_11	IF_15
0x400d678	            0x7511	                           jne 0x400d68b	      1847	ops.c	FUNCTION_33	IF_11	IF_15
0x400d67a	        0x837b0801	                  cmp dword [rbx + 8], 1	      1847	ops.c	FUNCTION_33	IF_11	IF_15
0x400d67e	            0x740b	                            je 0x400d68b	      1847	ops.c	FUNCTION_33	IF_11	IF_15
0x400d680	      0x48837b5001	               cmp qword [rbx + 0x50], 1	      1848	ops.c	FUNCTION_33	IF_11	IF_15
0x400d685	     0xf8e65070000	                           jle 0x400ddf0	      1848	ops.c	FUNCTION_33	IF_11	IF_15
0x400d68b	    0x488b3d000000	            mov rdi, qword [0x0400d692] 	      3045	ops.c	FUNCTION_44	CALL_1
0x400d692	    0x48c705000000	               mov qword [0x0400d69d], 0	      1667	ops.c	FUNCTION_31
0x400d69d	      0xe84e2dffff	                      call sym.free_yank	      3045	ops.c	FUNCTION_44	CALL_1
0x400d6a2	      0xba00010000	                          mov edx, 0x100	      3045	ops.c	FUNCTION_44	CALL_1
0x400d6a7	      0xbe00000000	                              mov esi, 0	      3045	ops.c	FUNCTION_44	CALL_1
0x400d6ac	      0xbf00000000	                              mov edi, 0	      3045	ops.c	FUNCTION_44	CALL_1
0x400d6b1	      0xe800000000	                          call 0x400d6b6	      3045	ops.c	FUNCTION_44	CALL_1
0x400d6b6	    0x448b3d000000	           mov r15d, dword [0x0400d6bd] 	      1672	ops.c	FUNCTION_31	IF_1
0x400d6bd	    0x48c705000000	               mov qword [0x0400d6c8], 0	      1671	ops.c	FUNCTION_31
0x400d6c8	          0x4585ff	                         test r15d, r15d	      1672	ops.c	FUNCTION_31	IF_1
0x400d6cb	            0x750b	                           jne 0x400d6d8	      1672	ops.c	FUNCTION_31	IF_1
0x400d6cd	    0x48c705000000	               mov qword [0x0400d6d8], 0	      1673	ops.c	FUNCTION_31	IF_1
0x400d6d8	            0x31d2	                            xor edx, edx	      1851	ops.c	FUNCTION_33	IF_11	IF_15	IF_16	CALL_17
0x400d6da	      0xbe01000000	                              mov esi, 1	      1851	ops.c	FUNCTION_33	IF_11	IF_15	IF_16	CALL_17
0x400d6df	          0x4889df	                            mov rdi, rbx	      1851	ops.c	FUNCTION_33	IF_11	IF_15	IF_16	CALL_17
0x400d6e2	    0x48c705000000	               mov qword [0x0400d6ed], 0	      1674	ops.c	FUNCTION_31
0x400d6ed	      0xe800000000	                          call 0x400d6f2	      1851	ops.c	FUNCTION_33	IF_11	IF_15	IF_16	CALL_17
0x400d6f2	          0x83f801	                              cmp eax, 1	      1852	ops.c	FUNCTION_33	IF_11	IF_15	IF_16
0x400d6f5	      0xb801000000	                              mov eax, 1	      1852	ops.c	FUNCTION_33	IF_11	IF_15	IF_16
0x400d6fa	        0x440f44e0	                         cmove r12d, eax	      1852	ops.c	FUNCTION_33	IF_11	IF_15	IF_16
0x400d6fe	    0x8b0500000000	            mov eax, dword [0x0400d704] 	      1859	ops.c	FUNCTION_33	IF_11	IF_17
0x400d704	          0x8b5304	                mov edx, dword [rbx + 4]	      1859	ops.c	FUNCTION_33	IF_11	IF_17
0x400d707	            0xa801	                              test al, 1	      1857	ops.c	FUNCTION_33	IF_11	IF_17
0x400d709	            0x7405	                            je 0x400d710	      1857	ops.c	FUNCTION_33	IF_11	IF_17
0x400d70b	          0x83fa2a	                           cmp edx, 0x2a	      1859	ops.c	FUNCTION_33	IF_11	IF_17
0x400d70e	            0x740d	                            je 0x400d71d	      1859	ops.c	FUNCTION_33	IF_11	IF_17
0x400d710	            0xa802	                              test al, 2	      1859	ops.c	FUNCTION_33	IF_11	IF_17
0x400d712	            0x7405	                            je 0x400d719	      1859	ops.c	FUNCTION_33	IF_11	IF_17
0x400d714	          0x83fa2b	                           cmp edx, 0x2b	      1860	ops.c	FUNCTION_33	IF_11	IF_17
0x400d717	            0x7404	                            je 0x400d71d	      1860	ops.c	FUNCTION_33	IF_11	IF_17
0x400d719	            0x85d2	                           test edx, edx	      1860	ops.c	FUNCTION_33	IF_11	IF_17
0x400d71b	            0x7511	                           jne 0x400d72e	      1860	ops.c	FUNCTION_33	IF_11	IF_17
0x400d71d	        0x837b0801	                  cmp dword [rbx + 8], 1	      1862	ops.c	FUNCTION_33	IF_11	IF_17
0x400d721	            0x740b	                            je 0x400d72e	      1862	ops.c	FUNCTION_33	IF_11	IF_17
0x400d723	      0x48837b5001	               cmp qword [rbx + 0x50], 1	      1863	ops.c	FUNCTION_33	IF_11	IF_17
0x400d728	     0xf8412070000	                            je 0x400de40	      1863	ops.c	FUNCTION_33	IF_11	IF_17
0x400d72e	          0x4585e4	                         test r12d, r12d	      1878	ops.c	FUNCTION_33	IF_11	IF_19
0x400d731	     0xf8471030000	                            je 0x400daa8	      1878	ops.c	FUNCTION_33	IF_11	IF_19
0x400d737	      0xe800000000	                          call 0x400d73c	      1893	ops.c	FUNCTION_33	IF_11	IF_21	CALL_24
0x400d73c	            0x85c0	                           test eax, eax	      1893	ops.c	FUNCTION_33	IF_11	IF_21	CALL_24
0x400d73e	     0xf85dc060000	                           jne 0x400de20	      1893	ops.c	FUNCTION_33	IF_11	IF_21	CALL_24
0x400d744	          0x8b6b60	            mov ebp, dword [rbx + 0x60] 	      1901	ops.c	FUNCTION_33	IF_22
0x400d747	            0x85ed	                           test ebp, ebp	      1901	ops.c	FUNCTION_33	IF_22
0x400d749	     0xf85e1010000	                           jne 0x400d930	      1901	ops.c	FUNCTION_33	IF_22
0x400d74f	        0x837b0801	                  cmp dword [rbx + 8], 1	      1948	ops.c	FUNCTION_33	ELSE_1	IF_27
0x400d753	     0xf8487040000	                            je 0x400dbe0	      1948	ops.c	FUNCTION_33	ELSE_1	IF_27
0x400d759	    0x448b25000000	           mov r12d, dword [0x0400d760] 	      1988	ops.c	FUNCTION_33	ELSE_4	IF_33
0x400d760	          0x4585e4	                         test r12d, r12d	      1988	ops.c	FUNCTION_33	ELSE_4	IF_33
0x400d763	     0xf8577050000	                           jne 0x400dce0	      1988	ops.c	FUNCTION_33	ELSE_4	IF_33
0x400d769	        0x488b7350	            mov rsi, qword [rbx + 0x50] 	      2026	ops.c	FUNCTION_33	ELSE_4	IF_40
0x400d76d	        0x4883fe01	                              cmp rsi, 1	      2026	ops.c	FUNCTION_33	ELSE_4	IF_40
0x400d771	     0xf8409060000	                            je 0x400dd80	      2026	ops.c	FUNCTION_33	ELSE_4	IF_40
0x400d777	    0x488b05000000	            mov rax, qword [0x0400d77e] 	      2071	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47
0x400d77e	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      2071	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47
0x400d782	          0x4801fe	                            add rsi, rdi	      2070	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47	CALL_63
0x400d785	        0x4883ef01	                              sub rdi, 1	      2070	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47	CALL_63
0x400d789	      0xe800000000	                          call 0x400d78e	      2070	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47	CALL_63
0x400d78e	            0x85c0	                           test eax, eax	      2070	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47	CALL_63
0x400d790	            0x750e	                           jne 0x400d7a0	      2070	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47	CALL_63
0x400d792	            0x31ed	                            xor ebp, ebp	      1905	ops.c	FUNCTION_33	IF_22	IF_23
0x400d794	      0xe9e8000000	                           jmp 0x400d881	      1905	ops.c	FUNCTION_33	IF_22	IF_23
0x400d799	     0xf1f80000000	                         nop dword [rax]	      1905	ops.c	FUNCTION_33	IF_22	IF_23
0x400d7a0	      0xbf01000000	                              mov edi, 1	      2074	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_64
0x400d7a5	      0xe800000000	                          call 0x400d7aa	      2074	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_64
0x400d7aa	    0x488b05000000	            mov rax, qword [0x0400d7b1] 	      2076	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400d7b1	            0x31f6	                            xor esi, esi	      2078	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_65
0x400d7b3	        0x4c8b6038	            mov r12, qword [rax + 0x38] 	      2076	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400d7b7	        0x448b7840	           mov r15d, dword [rax + 0x40] 	      2076	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400d7bb	        0x448b7044	           mov r14d, dword [rax + 0x44] 	      2076	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400d7bf	      0x498d542401	                      lea rdx, [r12 + 1]	      2077	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400d7c4	        0x48895038	             mov qword [rax + 0x38], rdx	      2077	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400d7c8	        0x488b4350	            mov rax, qword [rbx + 0x50] 	      2078	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_65
0x400d7cc	        0x488d78fe	                      lea rdi, [rax - 2]	      2078	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_65
0x400d7d0	      0xe800000000	                          call 0x400d7d5	      2078	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_65
0x400d7d5	        0x448b4314	            mov r8d, dword [rbx + 0x14] 	      2081	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400d7d9	            0x31ff	                            xor edi, edi	      2081	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400d7db	    0x488b05000000	            mov rax, qword [0x0400d7e2] 	      2082	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400d7e2	          0x4585c0	                           test r8d, r8d	      2081	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400d7e5	        0x400f95c7	                               setne dil	      2081	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400d7e9	           0x37b38	             add edi, dword [rbx + 0x38]	      2081	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400d7ec	          0x833b01	                      cmp dword [rbx], 1	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x400d7ef	    0xc74040000000	               mov dword [rax + 0x40], 0	      2082	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400d7f6	     0xf8414070000	                            je 0x400df10	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x400d7fc	    0x8b0d00000000	            mov ecx, dword [0x0400d802] 	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x400d802	            0x31f6	                            xor esi, esi	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x400d804	          0x4863ff	                         movsxd rdi, edi	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x400d807	            0x89ea	                            mov edx, ebp	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x400d809	            0x85c9	                           test ecx, ecx	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x400d80b	        0x400f94c6	                                sete sil	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x400d80f	      0xe800000000	                          call 0x400d814	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x400d814	    0x488b05000000	            mov rax, qword [0x0400d81b] 	      2085	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400d81b	            0x31ff	                            xor edi, edi	      2086	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_67
0x400d81d	        0x4c896038	             mov qword [rax + 0x38], r12	      2085	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400d821	        0x44897840	            mov dword [rax + 0x40], r15d	      2085	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400d825	        0x44897044	            mov dword [rax + 0x44], r14d	      2085	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x400d829	      0xe89285ffff	           call sym.do_join.constprop.15	      2086	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_67
0x400d82e	    0x488b05000000	            mov rax, qword [0x0400d835] 	      2090	ops.c	FUNCTION_33	CALL_68
0x400d835	          0x488b38	                    mov rdi, qword [rax]	      2090	ops.c	FUNCTION_33	CALL_68
0x400d838	          0x4c29ef	                            sub rdi, r13	      2090	ops.c	FUNCTION_33	CALL_68
0x400d83b	      0xe800000000	                          call 0x400d840	      2090	ops.c	FUNCTION_33	CALL_68
0x400d840	          0x8b5360	            mov edx, dword [rbx + 0x60] 	      2095	ops.c	FUNCTION_33	IF_48
0x400d843	    0x488b05000000	            mov rax, qword [0x0400d84a] 	      2097	ops.c	FUNCTION_33	IF_48
0x400d84a	            0x85d2	                           test edx, edx	      2095	ops.c	FUNCTION_33	IF_48
0x400d84c	     0xf846e030000	                            je 0x400dbc0	      2095	ops.c	FUNCTION_33	IF_48
0x400d852	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	      2097	ops.c	FUNCTION_33	IF_48
0x400d856	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	      2097	ops.c	FUNCTION_33	IF_48
0x400d85a	    0x488990001200	          mov qword [rax + 0x1200], rdx 	      2097	ops.c	FUNCTION_33	IF_48
0x400d861	          0x8b5328	            mov edx, dword [rbx + 0x28] 	      2098	ops.c	FUNCTION_33	IF_48
0x400d864	        0x488b5b28	            mov rbx, qword [rbx + 0x28] 	      2098	ops.c	FUNCTION_33	IF_48
0x400d868	    0x899008120000	          mov dword [rax + 0x1208], edx 	      2098	ops.c	FUNCTION_33	IF_48
0x400d86e	    0x488988e01100	          mov qword [rax + 0x11e0], rcx 	      2102	ops.c	FUNCTION_33	ELSE_6
0x400d875	    0x488998e81100	          mov qword [rax + 0x11e8], rbx 	      2102	ops.c	FUNCTION_33	ELSE_6
0x400d87c	      0xbd01000000	                              mov ebp, 1	      2104	ops.c	FUNCTION_33	ELSE_6
0x400d881	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      2105	ops.c	FUNCTION_33	ELSE_6
0x400d886	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2105	ops.c	FUNCTION_33	ELSE_6
0x400d88f	            0x89e8	                            mov eax, ebp	      2105	ops.c	FUNCTION_33	ELSE_6
0x400d891	     0xf8564070000	                           jne 0x400dffb	      2105	ops.c	FUNCTION_33	ELSE_6
0x400d897	        0x4883c458	                           add rsp, 0x58	      2105	ops.c	FUNCTION_33	ELSE_6
0x400d89b	              0x5b	                                 pop rbx	      2105	ops.c	FUNCTION_33	ELSE_6
0x400d89c	              0x5d	                                 pop rbp	      2105	ops.c	FUNCTION_33	ELSE_6
0x400d89d	            0x415c	                                 pop r12	      2105	ops.c	FUNCTION_33	ELSE_6
0x400d89f	            0x415d	                                 pop r13	      2105	ops.c	FUNCTION_33	ELSE_6
0x400d8a1	            0x415e	                                 pop r14	      2105	ops.c	FUNCTION_33	ELSE_6
0x400d8a3	            0x415f	                                 pop r15	      2105	ops.c	FUNCTION_33	ELSE_6
0x400d8a5	              0xc3	                                     ret	      2105	ops.c	FUNCTION_33	ELSE_6
0x400d8a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2105	ops.c	FUNCTION_33	ELSE_6
0x400d8b0	    0x8b0500000000	            mov eax, dword [0x0400d8b6] 	      1643	ops.c	FUNCTION_30	IF_1
0x400d8b6	            0x85c0	                           test eax, eax	      1643	ops.c	FUNCTION_30	IF_1
0x400d8b8	            0x750e	                           jne 0x400d8c8	      1643	ops.c	FUNCTION_30	IF_1
0x400d8ba	    0x8b0500000000	            mov eax, dword [0x0400d8c0] 	      1643	ops.c	FUNCTION_30	IF_1
0x400d8c0	            0x85c0	                           test eax, eax	      1643	ops.c	FUNCTION_30	IF_1
0x400d8c2	     0xf845bfdffff	                            je 0x400d623	      1643	ops.c	FUNCTION_30	IF_1
0x400d8c8	            0xa802	                              test al, 2	      1650	ops.c	FUNCTION_30	IF_1	ELSE_1
0x400d8ca	    0x8b1500000000	            mov edx, dword [0x0400d8d0] 	      1649	ops.c	FUNCTION_30	IF_1	ELSE_1
0x400d8d0	            0x7426	                            je 0x400d8f8	      1650	ops.c	FUNCTION_30	IF_1	ELSE_1
0x400d8d2	            0x85d2	                           test edx, edx	      1649	ops.c	FUNCTION_30	IF_1	ELSE_1
0x400d8d4	      0xb82b000000	                           mov eax, 0x2b	      1650	ops.c	FUNCTION_30	IF_1	ELSE_1
0x400d8d9	            0x741d	                            je 0x400d8f8	      1649	ops.c	FUNCTION_30	IF_1	ELSE_1
0x400d8db	          0x894304	                mov dword [rbx + 4], eax	      1649	ops.c	FUNCTION_30	IF_1	ELSE_1
0x400d8de	      0xe920fdffff	                           jmp 0x400d603	      1649	ops.c	FUNCTION_30	IF_1	ELSE_1
0x400d8e3	       0xf1f440000	                   nop dword [rax + rax]	      1649	ops.c	FUNCTION_30	IF_1	ELSE_1
0x400d8e8	      0xe800000000	                          call 0x400d8ed	      1760	ops.c	FUNCTION_33	CALL_1
0x400d8ed	            0x89c5	                            mov ebp, eax	      1760	ops.c	FUNCTION_33	CALL_1
0x400d8ef	            0xeb90	                           jmp 0x400d881	      1760	ops.c	FUNCTION_33	CALL_1
0x400d8f1	     0xf1f80000000	                         nop dword [rax]	      1760	ops.c	FUNCTION_33	CALL_1
0x400d8f8	      0xb82a000000	                           mov eax, 0x2a	      1650	ops.c	FUNCTION_30	IF_1	ELSE_1
0x400d8fd	            0xebdc	                           jmp 0x400d8db	      1650	ops.c	FUNCTION_30	IF_1	ELSE_1
0x400d8ff	              0x90	                                     nop	      1650	ops.c	FUNCTION_30	IF_1	ELSE_1
0x400d900	            0x31ff	                            xor edi, edi	      1764	ops.c	FUNCTION_33	IF_3	CALL_3
0x400d902	      0xba05000000	                              mov edx, 5	      1764	ops.c	FUNCTION_33	IF_3	CALL_3
0x400d907	      0xbe00000000	                              mov esi, 0	      1764	ops.c	FUNCTION_33	IF_3	CALL_3
0x400d90c	      0xe800000000	                          call 0x400d911	      1764	ops.c	FUNCTION_33	IF_3	CALL_3
0x400d911	          0x4889c7	                            mov rdi, rax	      1764	ops.c	FUNCTION_33	IF_3	CALL_3
0x400d914	      0xe800000000	                          call 0x400d919	      1764	ops.c	FUNCTION_33	IF_3	CALL_3
0x400d919	      0xe963ffffff	                           jmp 0x400d881	      1765	ops.c	FUNCTION_33	IF_3
0x400d91e	            0x6690	                                     nop	      1765	ops.c	FUNCTION_33	IF_3
0x400d920	    0xc74304000000	                  mov dword [rbx + 4], 0	      1655	ops.c	FUNCTION_30	IF_4
0x400d927	      0xe9f7fcffff	                           jmp 0x400d623	      1655	ops.c	FUNCTION_30	IF_4
0x400d92c	         0xf1f4000	                         nop dword [rax]	      1655	ops.c	FUNCTION_30	IF_4
0x400d930	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      1903	ops.c	FUNCTION_33	IF_22	IF_23	CALL_26
0x400d934	        0x488d7001	                      lea rsi, [rax + 1]	      1903	ops.c	FUNCTION_33	IF_22	IF_23	CALL_26
0x400d938	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      1903	ops.c	FUNCTION_33	IF_22	IF_23	CALL_26
0x400d93c	        0x488d78ff	                      lea rdi, [rax - 1]	      1903	ops.c	FUNCTION_33	IF_22	IF_23	CALL_26
0x400d940	      0xe800000000	                          call 0x400d945	      1903	ops.c	FUNCTION_33	IF_22	IF_23	CALL_26
0x400d945	            0x85c0	                           test eax, eax	      1903	ops.c	FUNCTION_33	IF_22	IF_23	CALL_26
0x400d947	     0xf8445feffff	                            je 0x400d792	      1903	ops.c	FUNCTION_33	IF_22	IF_23	CALL_26
0x400d94d	    0x488b05000000	            mov rax, qword [0x0400d954] 	      1907	ops.c	FUNCTION_33	IF_22	FOR_1
0x400d954	        0x488b6838	            mov rbp, qword [rax + 0x38] 	      1907	ops.c	FUNCTION_33	IF_22	FOR_1
0x400d958	        0x483b6b30	            cmp rbp, qword [rbx + 0x30] 	      1907	ops.c	FUNCTION_33	IF_22	FOR_1
0x400d95c	     0xf8ebd000000	                           jle 0x400da1f	      1907	ops.c	FUNCTION_33	IF_22	FOR_1
0x400d962	      0xe921030000	                           jmp 0x400dc88	      1907	ops.c	FUNCTION_33	IF_22	FOR_1
0x400d967	    0x660f1f840000	                    nop word [rax + rax]	      1907	ops.c	FUNCTION_33	IF_22	FOR_1
0x400d970	            0x29c8	                            sub eax, ecx	      1926	ops.c	FUNCTION_33	IF_22	FOR_1
0x400d972	        0x2b442404	                sub eax, dword [rsp + 4]	      1926	ops.c	FUNCTION_33	IF_22	FOR_1
0x400d976	          0x4889ef	                            mov rdi, rbp	      1927	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_28
0x400d979	          0x4189c4	                           mov r12d, eax	      1926	ops.c	FUNCTION_33	IF_22	FOR_1
0x400d97c	      0xe800000000	                          call 0x400d981	      1927	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_28
0x400d981	          0x4889c7	                            mov rdi, rax	      1928	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_30
0x400d984	          0x4989c6	                            mov r14, rax	      1927	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_28
0x400d987	      0xe800000000	                          call 0x400d98c	      1928	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_30
0x400d98c	          0x8d7801	                      lea edi, [rax + 1]	      1928	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_30
0x400d98f	          0x4429e7	                           sub edi, r12d	      1928	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_30
0x400d992	      0xe800000000	                          call 0x400d997	      1928	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_30
0x400d997	          0x4885c0	                           test rax, rax	      1929	ops.c	FUNCTION_33	IF_22	FOR_1	IF_26
0x400d99a	          0x4989c4	                            mov r12, rax	      1928	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_30
0x400d99d	            0x7472	                            je 0x400da11	      1929	ops.c	FUNCTION_33	IF_22	FOR_1	IF_26
0x400d99f	      0x4863542418	         movsxd rdx, dword [rsp + 0x18] 	        59	string3.h	FUNCTION_93	CALL_3
0x400d9a4	          0x4c89f6	                            mov rsi, r14	        59	string3.h	FUNCTION_93	CALL_3
0x400d9a7	          0x4889c7	                            mov rdi, rax	        59	string3.h	FUNCTION_93	CALL_3
0x400d9aa	      0xe800000000	                          call 0x400d9af	        59	string3.h	FUNCTION_93	CALL_3
0x400d9af	        0x8b542404	                mov edx, dword [rsp + 4]	        90	string3.h	FUNCTION_95	CALL_6
0x400d9b3	      0x48637c2418	         movsxd rdi, dword [rsp + 0x18] 	        90	string3.h	FUNCTION_95	CALL_6
0x400d9b8	      0xbe20000000	                           mov esi, 0x20	        90	string3.h	FUNCTION_95	CALL_6
0x400d9bd	           0x31424	                    add edx, dword [rsp]	        90	string3.h	FUNCTION_95	CALL_6
0x400d9c0	          0x4c01e7	                            add rdi, r12	        90	string3.h	FUNCTION_95	CALL_6
0x400d9c3	          0x4863d2	                         movsxd rdx, edx	        90	string3.h	FUNCTION_95	CALL_6
0x400d9c6	      0xe800000000	                          call 0x400d9cb	        90	string3.h	FUNCTION_95	CALL_6
0x400d9cb	      0x4c637c2418	         movsxd r15, dword [rsp + 0x18] 	      1937	ops.c	FUNCTION_33	IF_22	FOR_1
0x400d9d0	        0x8b742408	                mov esi, dword [rsp + 8]	      1937	ops.c	FUNCTION_33	IF_22	FOR_1
0x400d9d4	          0x4401fe	                           add esi, r15d	      1937	ops.c	FUNCTION_33	IF_22	FOR_1
0x400d9d7	          0x4863f6	                         movsxd rsi, esi	      1937	ops.c	FUNCTION_33	IF_22	FOR_1
0x400d9da	          0x4901f6	                            add r14, rsi	      1937	ops.c	FUNCTION_33	IF_22	FOR_1
0x400d9dd	          0x4c89f7	                            mov rdi, r14	      1938	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_33
0x400d9e0	      0xe800000000	                          call 0x400d9e5	      1938	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_33
0x400d9e5	        0x48633c24	                 movsxd rdi, dword [rsp]	        59	string3.h	FUNCTION_93	CALL_3
0x400d9e9	        0x488d5001	                      lea rdx, [rax + 1]	        59	string3.h	FUNCTION_93	CALL_3
0x400d9ed	          0x4c89f6	                            mov rsi, r14	        59	string3.h	FUNCTION_93	CALL_3
0x400d9f0	          0x4901ff	                            add r15, rdi	        59	string3.h	FUNCTION_93	CALL_3
0x400d9f3	      0x48637c2404	            movsxd rdi, dword [rsp + 4] 	        59	string3.h	FUNCTION_93	CALL_3
0x400d9f8	          0x4901ff	                            add r15, rdi	        59	string3.h	FUNCTION_93	CALL_3
0x400d9fb	        0x4b8d3c3c	                    lea rdi, [r12 + r15]	        59	string3.h	FUNCTION_93	CALL_3
0x400d9ff	      0xe800000000	                          call 0x400da04	        59	string3.h	FUNCTION_93	CALL_3
0x400da04	            0x31d2	                            xor edx, edx	      1940	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_34
0x400da06	          0x4c89e6	                            mov rsi, r12	      1940	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_34
0x400da09	          0x4889ef	                            mov rdi, rbp	      1940	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_34
0x400da0c	      0xe800000000	                          call 0x400da11	      1940	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_34
0x400da11	        0x4883c501	                              add rbp, 1	      1907	ops.c	FUNCTION_33	IF_22	FOR_1
0x400da15	        0x48396b30	            cmp qword [rbx + 0x30], rbp 	      1907	ops.c	FUNCTION_33	IF_22	FOR_1
0x400da19	     0xf8c69020000	                            jl 0x400dc88	      1907	ops.c	FUNCTION_33	IF_22	FOR_1
0x400da1f	      0xb901000000	                              mov ecx, 1	      1909	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_27
0x400da24	          0x4889ea	                            mov rdx, rbp	      1909	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_27
0x400da27	          0x4889e6	                            mov rsi, rsp	      1909	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_27
0x400da2a	          0x4889df	                            mov rdi, rbx	      1909	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_27
0x400da2d	      0xe80e26ffff	                     call sym.block_prep	      1909	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_27
0x400da32	        0x8b442408	                mov eax, dword [rsp + 8]	      1910	ops.c	FUNCTION_33	IF_22	FOR_1	IF_24
0x400da36	            0x85c0	                           test eax, eax	      1910	ops.c	FUNCTION_33	IF_22	FOR_1	IF_24
0x400da38	            0x74d7	                            je 0x400da11	      1910	ops.c	FUNCTION_33	IF_22	FOR_1	IF_24
0x400da3a	    0x488b15000000	            mov rdx, qword [0x0400da41] 	      1914	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x400da41	          0x8b0c24	                    mov ecx, dword [rsp]	      1916	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x400da44	        0x48396a38	            cmp qword [rdx + 0x38], rbp 	      1914	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x400da48	     0xf8522ffffff	                           jne 0x400d970	      1914	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x400da4e	        0x8b742418	            mov esi, dword [rsp + 0x18] 	      1916	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x400da52	    0xc74244000000	               mov dword [rdx + 0x44], 0	      1918	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x400da59	             0x1ce	                            add esi, ecx	      1916	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x400da5b	          0x897240	             mov dword [rdx + 0x40], esi	      1916	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x400da5e	      0xe90dffffff	                           jmp 0x400d970	      1916	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x400da63	       0xf1f440000	                   nop dword [rax + rax]	      1916	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x400da68	      0xbe01000000	                              mov esi, 1	      1831	ops.c	FUNCTION_33	IF_11	IF_12	IF_13	CALL_12
0x400da6d	      0xe800000000	                          call 0x400da72	      1831	ops.c	FUNCTION_33	IF_11	IF_12	IF_13	CALL_12
0x400da72	            0x85c0	                           test eax, eax	      1831	ops.c	FUNCTION_33	IF_11	IF_12	IF_13	CALL_12
0x400da74	     0xf8436010000	                            je 0x400dbb0	      1831	ops.c	FUNCTION_33	IF_11	IF_12	IF_13	CALL_12
0x400da7a	          0x8b7b04	                mov edi, dword [rbx + 4]	      1836	ops.c	FUNCTION_33	IF_11	IF_12	CALL_14
0x400da7d	      0xbe01000000	                              mov esi, 1	      1836	ops.c	FUNCTION_33	IF_11	IF_12	CALL_14
0x400da82	          0x4531e4	                          xor r12d, r12d	      1752	ops.c	FUNCTION_33
0x400da85	      0xe800000000	                          call 0x400da8a	      1836	ops.c	FUNCTION_33	IF_11	IF_12	CALL_14
0x400da8a	            0x31d2	                            xor edx, edx	      1837	ops.c	FUNCTION_33	IF_11	IF_12	IF_14	CALL_15
0x400da8c	      0xbe01000000	                              mov esi, 1	      1837	ops.c	FUNCTION_33	IF_11	IF_12	IF_14	CALL_15
0x400da91	          0x4889df	                            mov rdi, rbx	      1837	ops.c	FUNCTION_33	IF_11	IF_12	IF_14	CALL_15
0x400da94	      0xe800000000	                          call 0x400da99	      1837	ops.c	FUNCTION_33	IF_11	IF_12	IF_14	CALL_15
0x400da99	          0x83f801	                              cmp eax, 1	      1752	ops.c	FUNCTION_33
0x400da9c	        0x410f94c4	                               sete r12b	      1752	ops.c	FUNCTION_33
0x400daa0	      0xe9d1fbffff	                           jmp 0x400d676	      1752	ops.c	FUNCTION_33
0x400daa5	           0xf1f00	                         nop dword [rax]	      1752	ops.c	FUNCTION_33
0x400daa8	    0x8b2d00000000	            mov ebp, dword [0x0400daae] 	      1880	ops.c	FUNCTION_33	IF_11	IF_19
0x400daae	            0x31ff	                            xor edi, edi	      1883	ops.c	FUNCTION_33	IF_11	IF_19	CALL_21
0x400dab0	      0xba05000000	                              mov edx, 5	      1883	ops.c	FUNCTION_33	IF_11	IF_19	CALL_21
0x400dab5	      0xbe00000000	                              mov esi, 0	      1883	ops.c	FUNCTION_33	IF_11	IF_19	CALL_21
0x400daba	    0xc70500000000	               mov dword [0x0400dac4], 0	      1882	ops.c	FUNCTION_33	IF_11	IF_19
0x400dac4	      0xe800000000	                          call 0x400dac9	      1883	ops.c	FUNCTION_33	IF_11	IF_19	CALL_21
0x400dac9	      0xbe01000000	                              mov esi, 1	      1883	ops.c	FUNCTION_33	IF_11	IF_19	CALL_21
0x400dace	          0x4889c7	                            mov rdi, rax	      1883	ops.c	FUNCTION_33	IF_11	IF_19	CALL_21
0x400dad1	      0xe800000000	                          call 0x400dad6	      1883	ops.c	FUNCTION_33	IF_11	IF_19	CALL_21
0x400dad6	          0x83f879	                           cmp eax, 0x79	      1885	ops.c	FUNCTION_33	IF_11	IF_19	IF_20
0x400dad9	    0x892d00000000	            mov dword [0x0400dadf], ebp 	      1884	ops.c	FUNCTION_33	IF_11	IF_19
0x400dadf	     0xf845ffcffff	                            je 0x400d744	      1885	ops.c	FUNCTION_33	IF_11	IF_19	IF_20
0x400dae5	      0xba05000000	                              mov edx, 5	      1887	ops.c	FUNCTION_33	IF_11	IF_19	IF_20	CALL_23
0x400daea	      0xbe00000000	                              mov esi, 0	      1887	ops.c	FUNCTION_33	IF_11	IF_19	IF_20	CALL_23
0x400daef	            0x31ff	                            xor edi, edi	      1887	ops.c	FUNCTION_33	IF_11	IF_19	IF_20	CALL_23
0x400daf1	      0xe800000000	                          call 0x400daf6	      1887	ops.c	FUNCTION_33	IF_11	IF_19	IF_20	CALL_23
0x400daf6	          0x4889c7	                            mov rdi, rax	      1887	ops.c	FUNCTION_33	IF_11	IF_19	IF_20	CALL_23
0x400daf9	            0x31ed	                            xor ebp, ebp	      1888	ops.c	FUNCTION_33	IF_11	IF_19	IF_20
0x400dafb	      0xe800000000	                          call 0x400db00	      1887	ops.c	FUNCTION_33	IF_11	IF_19	IF_20	CALL_23
0x400db00	      0xe97cfdffff	                           jmp 0x400d881	      1888	ops.c	FUNCTION_33	IF_11	IF_19	IF_20
0x400db05	           0xf1f00	                         nop dword [rax]	      1888	ops.c	FUNCTION_33	IF_11	IF_19	IF_20
0x400db08	        0x488b4350	            mov rax, qword [rbx + 0x50] 	      1785	ops.c	FUNCTION_33	IF_5
0x400db0c	        0x4883f801	                              cmp rax, 1	      1785	ops.c	FUNCTION_33	IF_5
0x400db10	     0xf8e3ffbffff	                           jle 0x400d655	      1785	ops.c	FUNCTION_33	IF_5
0x400db16	          0x8b430c	              mov eax, dword [rbx + 0xc]	      1786	ops.c	FUNCTION_33	IF_5
0x400db19	            0x85c0	                           test eax, eax	      1786	ops.c	FUNCTION_33	IF_5
0x400db1b	     0xf853efbffff	                           jne 0x400d65f	      1786	ops.c	FUNCTION_33	IF_5
0x400db21	          0x833b01	                      cmp dword [rbx], 1	      1787	ops.c	FUNCTION_33	IF_5
0x400db24	     0xf8535fbffff	                           jne 0x400d65f	      1787	ops.c	FUNCTION_33	IF_5
0x400db2a	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	      1789	ops.c	FUNCTION_33	IF_5	CALL_6
0x400db2e	      0xe800000000	                          call 0x400db33	      1789	ops.c	FUNCTION_33	IF_5	CALL_6
0x400db33	        0x48635338	         movsxd rdx, dword [rbx + 0x38] 	      1789	ops.c	FUNCTION_33	IF_5	CALL_6
0x400db37	        0x488d3c10	                    lea rdi, [rax + rdx]	      1789	ops.c	FUNCTION_33	IF_5	CALL_6
0x400db3b	          0x803f00	                       cmp byte [rdi], 0	      1790	ops.c	FUNCTION_33	IF_5	IF_6
0x400db3e	            0x7407	                            je 0x400db47	      1790	ops.c	FUNCTION_33	IF_5	IF_6
0x400db40	        0x48634314	         movsxd rax, dword [rbx + 0x14] 	      1791	ops.c	FUNCTION_33	IF_5	IF_6
0x400db44	          0x4801c7	                            add rdi, rax	      1791	ops.c	FUNCTION_33	IF_5	IF_6
0x400db47	      0xe800000000	                          call 0x400db4c	      1792	ops.c	FUNCTION_33	IF_5	CALL_7
0x400db4c	          0x803800	                       cmp byte [rax], 0	      1793	ops.c	FUNCTION_33	IF_5	IF_7	CALL_8
0x400db4f	     0xf848b040000	                            je 0x400dfe0	      1793	ops.c	FUNCTION_33	IF_5	IF_7	CALL_8
0x400db55	          0x8b4308	                mov eax, dword [rbx + 8]	      1801	ops.c	FUNCTION_33	IF_8
0x400db58	            0x85c0	                           test eax, eax	      1801	ops.c	FUNCTION_33	IF_8
0x400db5a	     0xf84f1faffff	                            je 0x400d651	      1801	ops.c	FUNCTION_33	IF_8
0x400db60	      0xe9fafaffff	                           jmp 0x400d65f	      1801	ops.c	FUNCTION_33	IF_8
0x400db65	           0xf1f00	                         nop dword [rax]	      1801	ops.c	FUNCTION_33	IF_8
0x400db68	          0x833b01	                      cmp dword [rbx], 1	      1803	ops.c	FUNCTION_33	IF_8
0x400db6b	     0xf85eefaffff	                           jne 0x400d65f	      1803	ops.c	FUNCTION_33	IF_8
0x400db71	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      1804	ops.c	FUNCTION_33	IF_8	CALL_9
0x400db75	      0xe800000000	                          call 0x400db7a	      1804	ops.c	FUNCTION_33	IF_8	CALL_9
0x400db7a	          0x803800	                       cmp byte [rax], 0	      1804	ops.c	FUNCTION_33	IF_8	CALL_9
0x400db7d	     0xf85dcfaffff	                           jne 0x400d65f	      1804	ops.c	FUNCTION_33	IF_8	CALL_9
0x400db83	    0x8b0500000000	            mov eax, dword [0x0400db89] 	      1811	ops.c	FUNCTION_33	IF_8	IF_9
0x400db89	            0x85c0	                           test eax, eax	      1811	ops.c	FUNCTION_33	IF_8	IF_9
0x400db8b	     0xf85affcffff	                           jne 0x400d840	      1811	ops.c	FUNCTION_33	IF_8	IF_9
0x400db91	    0x488b3d000000	            mov rdi, qword [0x0400db98] 	      1816	ops.c	FUNCTION_33	IF_8	IF_10	CALL_10
0x400db98	      0xbe45000000	                           mov esi, 0x45	      1816	ops.c	FUNCTION_33	IF_8	IF_10	CALL_10
0x400db9d	      0xe800000000	                          call 0x400dba2	      1816	ops.c	FUNCTION_33	IF_8	IF_10	CALL_10
0x400dba2	          0x4885c0	                           test rax, rax	      1816	ops.c	FUNCTION_33	IF_8	IF_10	CALL_10
0x400dba5	     0xf84d1fcffff	                            je 0x400d87c	      1816	ops.c	FUNCTION_33	IF_8	IF_10	CALL_10
0x400dbab	       0xf1f440000	                   nop dword [rax + rax]	      1816	ops.c	FUNCTION_33	IF_8	IF_10	CALL_10
0x400dbb0	      0xe800000000	                          call 0x400dbb5	      1817	ops.c	FUNCTION_33	IF_8	CALL_11
0x400dbb5	      0xbd01000000	                              mov ebp, 1	      1818	ops.c	FUNCTION_33	IF_8
0x400dbba	      0xe9c2fcffff	                           jmp 0x400d881	      1818	ops.c	FUNCTION_33	IF_8
0x400dbbf	              0x90	                                     nop	      1818	ops.c	FUNCTION_33	IF_8
0x400dbc0	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	      2101	ops.c	FUNCTION_33	ELSE_6
0x400dbc4	        0x488b5b28	            mov rbx, qword [rbx + 0x28] 	      2101	ops.c	FUNCTION_33	ELSE_6
0x400dbc8	    0x488988001200	          mov qword [rax + 0x1200], rcx 	      2101	ops.c	FUNCTION_33	ELSE_6
0x400dbcf	    0x488998081200	          mov qword [rax + 0x1208], rbx 	      2101	ops.c	FUNCTION_33	ELSE_6
0x400dbd6	      0xe993fcffff	                           jmp 0x400d86e	      2101	ops.c	FUNCTION_33	ELSE_6
0x400dbdb	       0xf1f440000	                   nop dword [rax + rax]	      2101	ops.c	FUNCTION_33	ELSE_6
0x400dbe0	          0x833b03	                      cmp dword [rbx], 3	      1950	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28
0x400dbe3	     0xf8517020000	                           jne 0x400de00	      1950	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28
0x400dbe9	        0x488b4350	            mov rax, qword [rbx + 0x50] 	      1956	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x400dbed	        0x4883f801	                              cmp rax, 1	      1956	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x400dbf1	            0x7e2c	                           jle 0x400dc1f	      1956	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x400dbf3	    0x488b15000000	            mov rdx, qword [0x0400dbfa] 	      1958	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x400dbfa	        0x488d78ff	                      lea rdi, [rax - 1]	      1960	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29	CALL_37
0x400dbfe	      0xbe01000000	                              mov esi, 1	      1960	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29	CALL_37
0x400dc03	        0x488b6a38	            mov rbp, qword [rdx + 0x38] 	      1958	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x400dc07	        0x488d4d01	                      lea rcx, [rbp + 1]	      1959	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x400dc0b	        0x48894a38	             mov qword [rdx + 0x38], rcx	      1959	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x400dc0f	      0xe800000000	                          call 0x400dc14	      1960	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29	CALL_37
0x400dc14	    0x488b05000000	            mov rax, qword [0x0400dc1b] 	      1961	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x400dc1b	        0x48896838	             mov qword [rax + 0x38], rbp	      1961	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x400dc1f	      0xe800000000	                          call 0x400dc24	      1963	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_30	CALL_38
0x400dc24	            0x85c0	                           test eax, eax	      1963	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_30	CALL_38
0x400dc26	     0xf8466fbffff	                            je 0x400d792	      1963	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_30	CALL_38
0x400dc2c	    0x488b05000000	            mov rax, qword [0x0400dc33] 	      1965	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31
0x400dc33	    0x448bb0ec1300	         mov r14d, dword [rax + 0x13ec] 	      1965	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31
0x400dc3a	          0x4585f6	                         test r14d, r14d	      1965	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31
0x400dc3d	     0xf84dd020000	                            je 0x400df20	      1965	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31
0x400dc43	      0xbf01000000	                              mov edi, 1	      1967	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31	CALL_39
0x400dc48	      0xe800000000	                          call 0x400dc4d	      1967	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31	CALL_39
0x400dc4d	    0x488b05000000	            mov rax, qword [0x0400dc54] 	      1969	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31
0x400dc54	    0xc70500000000	               mov dword [0x0400dc5e], 1	      1968	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31
0x400dc5e	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1969	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31
0x400dc61	    0x890500000000	            mov dword [0x0400dc67], eax 	      1969	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31
0x400dc67	            0x31ff	                            xor edi, edi	      1973	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	CALL_41
0x400dc69	      0xe800000000	                          call 0x400dc6e	      1973	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	CALL_41
0x400dc6e	      0x48837b5001	               cmp qword [rbx + 0x50], 1	      1975	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_32
0x400dc73	     0xf8eb5fbffff	                           jle 0x400d82e	      1975	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_32
0x400dc79	      0xe800000000	                          call 0x400dc7e	      1982	ops.c	FUNCTION_33	ELSE_1	IF_27	ELSE_3	CALL_45
0x400dc7e	      0xe9abfbffff	                           jmp 0x400d82e	      1982	ops.c	FUNCTION_33	ELSE_1	IF_27	ELSE_3	CALL_45
0x400dc83	       0xf1f440000	                   nop dword [rax + rax]	      1982	ops.c	FUNCTION_33	ELSE_1	IF_27	ELSE_3	CALL_45
0x400dc88	      0xe800000000	                          call 0x400dc8d	      1943	ops.c	FUNCTION_33	IF_22	CALL_35
0x400dc8d	    0x488b05000000	            mov rax, qword [0x0400dc94] 	      1944	ops.c	FUNCTION_33	IF_22	CALL_36
0x400dc94	        0x488b4b30	            mov rcx, qword [rbx + 0x30] 	      1944	ops.c	FUNCTION_33	IF_22	CALL_36
0x400dc98	          0x8b7040	            mov esi, dword [rax + 0x40] 	      1944	ops.c	FUNCTION_33	IF_22	CALL_36
0x400dc9b	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      1944	ops.c	FUNCTION_33	IF_22	CALL_36
0x400dc9f	        0x488d5101	                      lea rdx, [rcx + 1]	      1944	ops.c	FUNCTION_33	IF_22	CALL_36
0x400dca3	            0x31c9	                            xor ecx, ecx	      1944	ops.c	FUNCTION_33	IF_22	CALL_36
0x400dca5	      0xe800000000	                          call 0x400dcaa	      1944	ops.c	FUNCTION_33	IF_22	CALL_36
0x400dcaa	    0x48c743500000	               mov qword [rbx + 0x50], 0	      1946	ops.c	FUNCTION_33	IF_22
0x400dcb2	      0xe977fbffff	                           jmp 0x400d82e	      1946	ops.c	FUNCTION_33	IF_22
0x400dcb7	    0x660f1f840000	                    nop word [rax + rax]	      1946	ops.c	FUNCTION_33	IF_22
0x400dcc0	        0x488b7b30	            mov rdi, qword [rbx + 0x30] 	      2119	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_1
0x400dcc4	      0xe800000000	                          call 0x400dcc9	      2119	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_1
0x400dcc9	        0x48637338	         movsxd rsi, dword [rbx + 0x38] 	      2120	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x400dccd	          0x4889c7	                            mov rdi, rax	      2120	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x400dcd0	          0x4801c6	                            add rsi, rax	      2120	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x400dcd3	      0xe800000000	                          call 0x400dcd8	      2120	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x400dcd8	           0x14338	             add dword [rbx + 0x38], eax	      2120	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x400dcdb	      0xe958f9ffff	                           jmp 0x400d638	      2120	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x400dce0	        0x488d7b20	                   lea rdi, [rbx + 0x20]	      1993	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_46
0x400dce4	      0xe800000000	                          call 0x400dce9	      1993	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_46
0x400dce9	          0x83f809	                              cmp eax, 9	      1993	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_46
0x400dcec	     0xf849e010000	                            je 0x400de90	      1993	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_46
0x400dcf2	        0x488d7b30	                   lea rdi, [rbx + 0x30]	      2011	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_52
0x400dcf6	      0xe800000000	                          call 0x400dcfb	      2011	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_52
0x400dcfb	          0x83f809	                              cmp eax, 9	      2011	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_52
0x400dcfe	     0xf8565faffff	                           jne 0x400d769	      2011	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_52
0x400dd04	          0x8b4314	            mov eax, dword [rbx + 0x14] 	      2012	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400dd07	          0x39433c	            cmp dword [rbx + 0x3c], eax 	      2012	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400dd0a	     0xf8d59faffff	                           jge 0x400d769	      2012	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400dd10	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      2016	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	IF_39
0x400dd14	        0x488d7001	                      lea rsi, [rax + 1]	      2015	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	IF_39	CALL_53
0x400dd18	        0x488d78ff	                      lea rdi, [rax - 1]	      2015	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	IF_39	CALL_53
0x400dd1c	      0xe800000000	                          call 0x400dd21	      2015	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	IF_39	CALL_53
0x400dd21	            0x85c0	                           test eax, eax	      2015	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	IF_39	CALL_53
0x400dd23	     0xf8469faffff	                            je 0x400d792	      2015	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	IF_39	CALL_53
0x400dd29	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      2018	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400dd2d	        0x488b7b38	            mov rdi, qword [rbx + 0x38] 	      2018	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400dd31	    0x488b05000000	            mov rax, qword [0x0400dd38] 	      2018	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400dd38	        0x48897038	             mov qword [rax + 0x38], rsi	      2018	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400dd3c	        0x48897840	             mov qword [rax + 0x40], rdi	      2018	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400dd40	          0x8b733c	            mov esi, dword [rbx + 0x3c] 	      2019	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_55
0x400dd43	          0x8b7b38	            mov edi, dword [rbx + 0x38] 	      2019	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_55
0x400dd46	      0xe800000000	                          call 0x400dd4b	      2019	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_55
0x400dd4b	            0x89c7	                            mov edi, eax	      2019	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_55
0x400dd4d	      0xe800000000	                          call 0x400dd52	      2019	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_55
0x400dd52	    0x488b05000000	            mov rax, qword [0x0400dd59] 	      2020	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400dd59	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      2020	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400dd5d	        0x488b7840	            mov rdi, qword [rax + 0x40] 	      2020	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400dd61	        0x48897330	             mov qword [rbx + 0x30], rsi	      2020	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400dd65	        0x48897b38	             mov qword [rbx + 0x38], rdi	      2020	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400dd69	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	      2021	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400dd6d	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      2021	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400dd71	        0x48897038	             mov qword [rax + 0x38], rsi	      2021	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400dd75	        0x48897840	             mov qword [rax + 0x40], rdi	      2021	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400dd79	      0xe9ebf9ffff	                           jmp 0x400d769	      2021	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400dd7e	            0x6690	                                     nop	      2021	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x400dd80	      0xe800000000	                          call 0x400dd85	      2028	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_41	CALL_56
0x400dd85	            0x85c0	                           test eax, eax	      2028	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_41	CALL_56
0x400dd87	     0xf8405faffff	                            je 0x400d792	      2028	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_41	CALL_56
0x400dd8d	    0x488b3d000000	            mov rdi, qword [0x0400dd94] 	      2032	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42	CALL_57
0x400dd94	      0xbe24000000	                           mov esi, 0x24	      2032	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42	CALL_57
0x400dd99	      0xe800000000	                          call 0x400dd9e	      2032	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42	CALL_57
0x400dd9e	          0x4885c0	                           test rax, rax	      2032	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42	CALL_57
0x400dda1	            0x7409	                            je 0x400ddac	      2032	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42	CALL_57
0x400dda3	          0x833b03	                      cmp dword [rbx], 3	      2033	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x400dda6	     0xf84e7010000	                            je 0x400df93	      2033	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x400ddac	        0x448b5314	           mov r10d, dword [rbx + 0x14] 	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40
0x400ddb0	          0x8b4338	            mov eax, dword [rbx + 0x38] 	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40
0x400ddb3	            0x31d2	                            xor edx, edx	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40
0x400ddb5	          0x2b4328	             sub eax, dword [rbx + 0x28]	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40
0x400ddb8	          0x4585d2	                         test r10d, r10d	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40
0x400ddbb	           0xf95c2	                                setne dl	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40
0x400ddbe	        0x448d2402	                   lea r12d, [rdx + rax]	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40
0x400ddc2	    0x8b0500000000	            mov eax, dword [0x0400ddc8] 	      2041	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43
0x400ddc8	            0x85c0	                           test eax, eax	      2041	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43
0x400ddca	     0xf856e010000	                           jne 0x400df3e	      2041	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43
0x400ddd0	          0x833b01	                      cmp dword [rbx], 1	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x400ddd3	     0xf8453010000	                            je 0x400df2c	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x400ddd9	            0x31f6	                            xor esi, esi	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x400dddb	            0x85c0	                           test eax, eax	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x400dddd	          0x4963fc	                        movsxd rdi, r12d	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x400dde0	        0x400f94c6	                                sete sil	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x400dde4	            0x89ea	                            mov edx, ebp	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x400dde6	      0xe800000000	                          call 0x400ddeb	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x400ddeb	      0xe93efaffff	                           jmp 0x400d82e	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x400ddf0	          0x8b4310	            mov eax, dword [rbx + 0x10] 	      1848	ops.c	FUNCTION_33	IF_11	IF_15
0x400ddf3	            0x85c0	                           test eax, eax	      1848	ops.c	FUNCTION_33	IF_11	IF_15
0x400ddf5	     0xf8403f9ffff	                            je 0x400d6fe	      1848	ops.c	FUNCTION_33	IF_11	IF_15
0x400ddfb	      0xe98bf8ffff	                           jmp 0x400d68b	      1848	ops.c	FUNCTION_33	IF_11	IF_15
0x400de00	        0x488b7b50	            mov rdi, qword [rbx + 0x50] 	      1980	ops.c	FUNCTION_33	ELSE_1	IF_27	ELSE_3	CALL_43
0x400de04	      0xbe01000000	                              mov esi, 1	      1980	ops.c	FUNCTION_33	ELSE_1	IF_27	ELSE_3	CALL_43
0x400de09	      0xe800000000	                          call 0x400de0e	      1980	ops.c	FUNCTION_33	ELSE_1	IF_27	ELSE_3	CALL_43
0x400de0e	      0xbf05000000	                              mov edi, 5	      1981	ops.c	FUNCTION_33	ELSE_1	IF_27	ELSE_3	CALL_44
0x400de13	      0xe800000000	                          call 0x400de18	      1981	ops.c	FUNCTION_33	ELSE_1	IF_27	ELSE_3	CALL_44
0x400de18	      0xe95cfeffff	                           jmp 0x400dc79	      1981	ops.c	FUNCTION_33	ELSE_1	IF_27	ELSE_3	CALL_44
0x400de1d	           0xf1f00	                         nop dword [rax]	      1981	ops.c	FUNCTION_33	ELSE_1	IF_27	ELSE_3	CALL_44
0x400de20	    0x488b15000000	            mov rdx, qword [0x0400de27] 	      1894	ops.c	FUNCTION_33	IF_11	CALL_25
0x400de27	        0x488d7304	                      lea rsi, [rbx + 4]	      1769	ops.c	FUNCTION_33	CALL_4
0x400de2b	          0x4889df	                            mov rdi, rbx	      1894	ops.c	FUNCTION_33	IF_11	CALL_25
0x400de2e	        0x488d4a08	                      lea rcx, [rdx + 8]	      1894	ops.c	FUNCTION_33	IF_11	CALL_25
0x400de32	      0xe809e9ffff	        call sym.yank_do_autocmd.isra.12	      1894	ops.c	FUNCTION_33	IF_11	CALL_25
0x400de37	      0xe908f9ffff	                           jmp 0x400d744	      1894	ops.c	FUNCTION_33	IF_11	CALL_25
0x400de3c	         0xf1f4000	                         nop dword [rax]	      1894	ops.c	FUNCTION_33	IF_11	CALL_25
0x400de40	            0x31d2	                            xor edx, edx	      1867	ops.c	FUNCTION_33	IF_11	IF_17	IF_18	CALL_19
0x400de42	    0xc743042d0000	               mov dword [rbx + 4], 0x2d	      1865	ops.c	FUNCTION_33	IF_11	IF_17
0x400de49	      0xbe01000000	                              mov esi, 1	      1867	ops.c	FUNCTION_33	IF_11	IF_17	IF_18	CALL_19
0x400de4e	          0x4889df	                            mov rdi, rbx	      1867	ops.c	FUNCTION_33	IF_11	IF_17	IF_18	CALL_19
0x400de51	    0xc70500000000	               mov dword [0x0400de5b], 0	       912	ops.c	FUNCTION_15
0x400de5b	    0x48c705000000	               mov qword [0x0400de66], 0	       950	ops.c	FUNCTION_15
0x400de66	    0x48c705000000	               mov qword [0x0400de71], 0	       952	ops.c	FUNCTION_15	IF_9
0x400de71	      0xe800000000	                          call 0x400de76	      1867	ops.c	FUNCTION_33	IF_11	IF_17	IF_18	CALL_19
0x400de76	          0x83f801	                              cmp eax, 1	      1868	ops.c	FUNCTION_33	IF_11	IF_17	IF_18
0x400de79	      0xb801000000	                              mov eax, 1	      1868	ops.c	FUNCTION_33	IF_11	IF_17	IF_18
0x400de7e	    0xc74304000000	                  mov dword [rbx + 4], 0	      1869	ops.c	FUNCTION_33	IF_11	IF_17
0x400de85	        0x440f44e0	                         cmove r12d, eax	      1868	ops.c	FUNCTION_33	IF_11	IF_17	IF_18
0x400de89	      0xe9a0f8ffff	                           jmp 0x400d72e	      1868	ops.c	FUNCTION_33	IF_11	IF_17	IF_18
0x400de8e	            0x6690	                                     nop	      1868	ops.c	FUNCTION_33	IF_11	IF_17	IF_18
0x400de90	      0xe800000000	                          call 0x400de95	      1995	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_35	CALL_47
0x400de95	            0x85c0	                           test eax, eax	      1995	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_35	CALL_47
0x400de97	     0xf84f5f8ffff	                            je 0x400d792	      1995	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_35	CALL_47
0x400de9d	          0x4531e4	                          xor r12d, r12d	      1990	ops.c	FUNCTION_33	ELSE_4	IF_33
0x400dea0	      0x48837b5001	               cmp qword [rbx + 0x50], 1	      1997	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_36
0x400dea5	     0xf8422010000	                            je 0x400dfcd	      1997	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_36
0x400deab	          0x8b732c	            mov esi, dword [rbx + 0x2c] 	      1999	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_50
0x400deae	          0x8b7b28	            mov edi, dword [rbx + 0x28] 	      1999	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_50
0x400deb1	      0xe800000000	                          call 0x400deb6	      1999	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_50
0x400deb6	            0x89c7	                            mov edi, eax	      1999	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_50
0x400deb8	      0xe800000000	                          call 0x400debd	      1999	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_50
0x400debd	    0x488b05000000	            mov rax, qword [0x0400dec4] 	      2000	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34
0x400dec4	      0x48837b5001	               cmp qword [rbx + 0x50], 1	      2001	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x400dec9	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      2000	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34
0x400decd	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2000	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34
0x400ded1	        0x48895328	             mov qword [rbx + 0x28], rdx	      2000	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34
0x400ded5	        0x48894320	             mov qword [rbx + 0x20], rax	      2000	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34
0x400ded9	     0xf8513feffff	                           jne 0x400dcf2	      2001	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x400dedf	          0x4489e7	                           mov edi, r12d	      2003	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37	CALL_51
0x400dee2	      0xe800000000	                          call 0x400dee7	      2003	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37	CALL_51
0x400dee7	    0x488b05000000	            mov rax, qword [0x0400deee] 	      2004	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x400deee	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	      2006	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x400def2	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	      2006	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x400def6	          0x8b5040	            mov edx, dword [rax + 0x40] 	      2004	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x400def9	          0x895338	             mov dword [rbx + 0x38], edx	      2004	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x400defc	          0x8b5044	            mov edx, dword [rax + 0x44] 	      2005	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x400deff	          0x89533c	             mov dword [rbx + 0x3c], edx	      2005	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x400df02	        0x48897038	             mov qword [rax + 0x38], rsi	      2006	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x400df06	        0x48897840	             mov qword [rax + 0x40], rdi	      2006	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x400df0a	      0xe9e3fdffff	                           jmp 0x400dcf2	      2006	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x400df0f	              0x90	                                     nop	      2006	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x400df10	          0x8b735c	            mov esi, dword [rbx + 0x5c] 	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x400df13	            0x31ed	                            xor ebp, ebp	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x400df15	            0x85f6	                           test esi, esi	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x400df17	        0x400f94c5	                                sete bpl	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x400df1b	      0xe9dcf8ffff	                           jmp 0x400d7fc	      2083	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x400df20	            0x31ff	                            xor edi, edi	      1972	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	CALL_40
0x400df22	      0xe800000000	                          call 0x400df27	      1972	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	CALL_40
0x400df27	      0xe93bfdffff	                           jmp 0x400dc67	      1972	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	CALL_40
0x400df2c	        0x448b4b5c	            mov r9d, dword [rbx + 0x5c] 	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x400df30	            0x31ed	                            xor ebp, ebp	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x400df32	          0x4585c9	                           test r9d, r9d	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x400df35	        0x400f94c5	                                sete bpl	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x400df39	      0xe99bfeffff	                           jmp 0x400ddd9	      2062	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x400df3e	      0xe800000000	                          call 0x400df43	      2046	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	CALL_59
0x400df43	          0x4889c7	                            mov rdi, rax	      2047	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	CALL_60
0x400df46	      0xe800000000	                          call 0x400df4b	      2047	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	CALL_60
0x400df4b	          0x8b533c	            mov edx, dword [rbx + 0x3c] 	      2049	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x400df4e	            0x85d2	                           test edx, edx	      2049	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x400df50	            0x7410	                            je 0x400df62	      2049	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x400df52	          0x83e801	                              sub eax, 1	      2050	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x400df55	          0x394338	            cmp dword [rbx + 0x38], eax 	      2050	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x400df58	            0x7c08	                            jl 0x400df62	      2050	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x400df5a	        0x837b2c01	               cmp dword [rbx + 0x2c], 1	      2052	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x400df5e	        0x4183d400	                             adc r12d, 0	      2052	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x400df62	          0x4585e4	                         test r12d, r12d	      2054	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_45
0x400df65	            0x750a	                           jne 0x400df71	      2054	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_45
0x400df67	          0x4531e4	                          xor r12d, r12d	      2054	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_45
0x400df6a	          0x39532c	            cmp dword [rbx + 0x2c], edx 	      2054	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_45
0x400df6d	        0x410f95c4	                              setne r12b	      2054	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_45
0x400df71	      0xe800000000	                          call 0x400df76	      2058	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_46	CALL_61
0x400df76	            0x85c0	                           test eax, eax	      2058	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_46	CALL_61
0x400df78	            0x740e	                            je 0x400df88	      2058	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_46	CALL_61
0x400df7a	    0x488b05000000	            mov rax, qword [0x0400df81] 	      2059	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_46
0x400df81	    0xc74044000000	               mov dword [rax + 0x44], 0	      2059	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_46
0x400df88	    0x8b0500000000	            mov eax, dword [0x0400df8e] 	      2059	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_46
0x400df8e	      0xe93dfeffff	                           jmp 0x400ddd0	      2059	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_46
0x400df93	    0x488b05000000	            mov rax, qword [0x0400df9a] 	      2034	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x400df9a	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2034	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x400df9e	        0x48394330	            cmp qword [rbx + 0x30], rax 	      2034	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x400dfa2	     0xf8504feffff	                           jne 0x400ddac	      2034	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x400dfa8	        0x448b5b5c	           mov r11d, dword [rbx + 0x5c] 	      2035	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x400dfac	          0x4585db	                         test r11d, r11d	      2035	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x400dfaf	     0xf85f7fdffff	                           jne 0x400ddac	      2035	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x400dfb5	            0x31c0	                            xor eax, eax	      2036	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_58
0x400dfb7	        0x837b1400	               cmp dword [rbx + 0x14], 0	      2036	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_58
0x400dfbb	          0x8b7b38	            mov edi, dword [rbx + 0x38] 	      2036	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_58
0x400dfbe	           0xf94c0	                                 sete al	      2036	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_58
0x400dfc1	            0x29c7	                            sub edi, eax	      2036	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_58
0x400dfc3	      0xe800000000	                          call 0x400dfc8	      2036	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_58
0x400dfc8	      0xe9dffdffff	                           jmp 0x400ddac	      2036	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_58
0x400dfcd	          0x8b733c	            mov esi, dword [rbx + 0x3c] 	      1998	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_48
0x400dfd0	          0x8b7b38	            mov edi, dword [rbx + 0x38] 	      1998	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_48
0x400dfd3	      0xe800000000	                          call 0x400dfd8	      1998	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_48
0x400dfd8	          0x4189c4	                           mov r12d, eax	      1998	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_48
0x400dfdb	      0xe9cbfeffff	                           jmp 0x400deab	      1998	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_48
0x400dfe0	            0x31ff	                            xor edi, edi	      1793	ops.c	FUNCTION_33	IF_5	IF_7	CALL_8
0x400dfe2	      0xe800000000	                          call 0x400dfe7	      1793	ops.c	FUNCTION_33	IF_5	IF_7	CALL_8
0x400dfe7	            0x85c0	                           test eax, eax	      1793	ops.c	FUNCTION_33	IF_5	IF_7	CALL_8
0x400dfe9	     0xf8466fbffff	                            je 0x400db55	      1793	ops.c	FUNCTION_33	IF_5	IF_7	CALL_8
0x400dfef	    0xc74308010000	                  mov dword [rbx + 8], 1	      1794	ops.c	FUNCTION_33	IF_5	IF_7
0x400dff6	      0xe964f6ffff	                           jmp 0x400d65f	      1794	ops.c	FUNCTION_33	IF_5	IF_7
0x400dffb	      0xe800000000	                      call sym.op_change	      2105	ops.c	FUNCTION_33	ELSE_6
paragraph_start	SWITCH,0:DO,0:ELSE,0:functions,0:FOR,0:IF,7:WHILE,0:CALL,9	190
0x4007870	            0x4157	                                push r15	      5296	ops.c	FUNCTION_64
0x4007872	            0x4156	                                push r14	      5296	ops.c	FUNCTION_64
0x4007874	            0x4155	                                push r13	      5296	ops.c	FUNCTION_64
0x4007876	            0x4154	                                push r12	      5296	ops.c	FUNCTION_64
0x4007878	              0x55	                                push rbp	      5296	ops.c	FUNCTION_64
0x4007879	              0x53	                                push rbx	      5296	ops.c	FUNCTION_64
0x400787a	        0x4883ec28	                           sub rsp, 0x28	      5296	ops.c	FUNCTION_64
0x400787e	    0x64488b042528	                mov rax, qword fs:[0x28]	      5296	ops.c	FUNCTION_64
0x4007887	      0x4889442418	             mov qword [rsp + 0x18], rax	      5296	ops.c	FUNCTION_64
0x400788c	            0x31c0	                            xor eax, eax	      5296	ops.c	FUNCTION_64
0x400788e	        0x4883ff01	                              cmp rdi, 1	      5306	ops.c	FUNCTION_64	IF_1
0x4007892	    0x48c744240800	                  mov qword [rsp + 8], 0	      5300	ops.c	FUNCTION_64
0x400789b	            0x7e14	                           jle 0x40078b1	      5306	ops.c	FUNCTION_64	IF_1
0x400789d	        0x4c8d67ff	                      lea r12, [rdi - 1]	      5309	ops.c	FUNCTION_64	CALL_1
0x40078a1	          0x4889fd	                            mov rbp, rdi	      5309	ops.c	FUNCTION_64	CALL_1
0x40078a4	          0x4c89e7	                            mov rdi, r12	      5309	ops.c	FUNCTION_64	CALL_1
0x40078a7	      0xe800000000	                          call 0x40078ac	      5309	ops.c	FUNCTION_64	CALL_1
0x40078ac	          0x803800	                       cmp byte [rax], 0	      5310	ops.c	FUNCTION_64	IF_2
0x40078af	            0x752f	                           jne 0x40078e0	      5310	ops.c	FUNCTION_64	IF_2
0x40078b1	      0xb801000000	                              mov eax, 1	      5321	ops.c	FUNCTION_64	IF_3
0x40078b6	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      5343	ops.c	FUNCTION_64
0x40078bb	    0x644833342528	                xor rsi, qword fs:[0x28]	      5343	ops.c	FUNCTION_64
0x40078c4	     0xf8533020000	                           jne 0x4007afd	      5343	ops.c	FUNCTION_64
0x40078ca	        0x4883c428	                           add rsp, 0x28	      5343	ops.c	FUNCTION_64
0x40078ce	              0x5b	                                 pop rbx	      5343	ops.c	FUNCTION_64
0x40078cf	              0x5d	                                 pop rbp	      5343	ops.c	FUNCTION_64
0x40078d0	            0x415c	                                 pop r12	      5343	ops.c	FUNCTION_64
0x40078d2	            0x415d	                                 pop r13	      5343	ops.c	FUNCTION_64
0x40078d4	            0x415e	                                 pop r14	      5343	ops.c	FUNCTION_64
0x40078d6	            0x415f	                                 pop r15	      5343	ops.c	FUNCTION_64
0x40078d8	              0xc3	                                     ret	      5343	ops.c	FUNCTION_64
0x40078d9	     0xf1f80000000	                         nop dword [rax]	      5343	ops.c	FUNCTION_64
0x40078e0	      0xbf71000000	                           mov edi, 0x71	      5314	ops.c	FUNCTION_64	CALL_2
0x40078e5	          0x4531ed	                          xor r13d, r13d	      5266	ops.c	FUNCTION_62	ELSE_1
0x40078e8	      0xe800000000	                          call 0x40078ed	      5314	ops.c	FUNCTION_64	CALL_2
0x40078ed	          0x4c89e7	                            mov rdi, r12	      5262	ops.c	FUNCTION_62	CALL_1
0x40078f0	            0x89c3	                            mov ebx, eax	      5314	ops.c	FUNCTION_64	CALL_2
0x40078f2	      0xe800000000	                          call 0x40078f7	      5262	ops.c	FUNCTION_62	CALL_1
0x40078f7	            0x31ff	                            xor edi, edi	      5263	ops.c	FUNCTION_62	IF_1
0x40078f9	            0x85db	                           test ebx, ebx	      5263	ops.c	FUNCTION_62	IF_1
0x40078fb	          0x4989c6	                            mov r14, rax	      5262	ops.c	FUNCTION_62	CALL_1
0x40078fe	     0xf85cc000000	                           jne 0x40079d0	      5263	ops.c	FUNCTION_62	IF_1
0x4007904	          0x4c01f7	                            add rdi, r14	      5278	ops.c	FUNCTION_62	CALL_3
0x4007907	      0xe800000000	                          call 0x400790c	      5278	ops.c	FUNCTION_62	CALL_3
0x400790c	          0x803800	                       cmp byte [rax], 0	      5280	ops.c	FUNCTION_62	CALL_4
0x400790f	            0x74a0	                            je 0x40078b1	      5280	ops.c	FUNCTION_62	CALL_4
0x4007911	            0x31d2	                            xor edx, edx	      5280	ops.c	FUNCTION_62	CALL_4
0x4007913	            0x31f6	                            xor esi, esi	      5280	ops.c	FUNCTION_62	CALL_4
0x4007915	          0x4c89e7	                            mov rdi, r12	      5280	ops.c	FUNCTION_62	CALL_4
0x4007918	      0xe800000000	                          call 0x400791d	      5280	ops.c	FUNCTION_62	CALL_4
0x400791d	            0x85c0	                           test eax, eax	      5280	ops.c	FUNCTION_62	CALL_4
0x400791f	            0x7590	                           jne 0x40078b1	      5280	ops.c	FUNCTION_62	CALL_4
0x4007921	          0x4889ef	                            mov rdi, rbp	      5262	ops.c	FUNCTION_62	CALL_1
0x4007924	      0xe800000000	                          call 0x4007929	      5262	ops.c	FUNCTION_62	CALL_1
0x4007929	            0x85db	                           test ebx, ebx	      5263	ops.c	FUNCTION_62	IF_1
0x400792b	          0x4989c7	                            mov r15, rax	      5262	ops.c	FUNCTION_62	CALL_1
0x400792e	     0xf8521010000	                           jne 0x4007a55	      5263	ops.c	FUNCTION_62	IF_1
0x4007934	            0x31ff	                            xor edi, edi	      5263	ops.c	FUNCTION_62	IF_1
0x4007936	          0x4531f6	                          xor r14d, r14d	      5266	ops.c	FUNCTION_62	ELSE_1
0x4007939	          0x4c01ff	                            add rdi, r15	      5278	ops.c	FUNCTION_62	CALL_3
0x400793c	      0xe800000000	                          call 0x4007941	      5278	ops.c	FUNCTION_62	CALL_3
0x4007941	          0x803800	                       cmp byte [rax], 0	      5280	ops.c	FUNCTION_62	CALL_4
0x4007944	     0xf8467ffffff	                            je 0x40078b1	      5280	ops.c	FUNCTION_62	CALL_4
0x400794a	    0x660f1f440000	                    nop word [rax + rax]	      5280	ops.c	FUNCTION_62	CALL_4
0x4007950	            0x31d2	                            xor edx, edx	      5280	ops.c	FUNCTION_62	CALL_4
0x4007952	            0x31f6	                            xor esi, esi	      5280	ops.c	FUNCTION_62	CALL_4
0x4007954	          0x4889ef	                            mov rdi, rbp	      5280	ops.c	FUNCTION_62	CALL_4
0x4007957	      0xe800000000	                          call 0x400795c	      5280	ops.c	FUNCTION_62	CALL_4
0x400795c	            0x85c0	                           test eax, eax	      5280	ops.c	FUNCTION_62	CALL_4
0x400795e	     0xf854dffffff	                           jne 0x40078b1	      5280	ops.c	FUNCTION_62	CALL_4
0x4007964	      0xbf77000000	                           mov edi, 0x77	      5330	ops.c	FUNCTION_64	IF_5	CALL_6
0x4007969	      0xe800000000	                          call 0x400796e	      5330	ops.c	FUNCTION_64	IF_5	CALL_6
0x400796e	            0x85c0	                           test eax, eax	      5330	ops.c	FUNCTION_64	IF_5	CALL_6
0x4007970	            0x742e	                            je 0x40079a0	      5330	ops.c	FUNCTION_64	IF_5	CALL_6
0x4007972	          0x4c89e7	                            mov rdi, r12	      5232	ops.c	FUNCTION_61	CALL_1
0x4007975	      0xe800000000	                          call 0x400797a	      5232	ops.c	FUNCTION_61	CALL_1
0x400797a	          0x803800	                       cmp byte [rax], 0	      5235	ops.c	FUNCTION_61	IF_1
0x400797d	          0x4889c3	                            mov rbx, rax	      5232	ops.c	FUNCTION_61	CALL_1
0x4007980	     0xf842bffffff	                            je 0x40078b1	      5235	ops.c	FUNCTION_61	IF_1
0x4007986	          0x4889c7	                            mov rdi, rax	      5239	ops.c	FUNCTION_61	CALL_2
0x4007989	      0xe800000000	                          call 0x400798e	      5239	ops.c	FUNCTION_61	CALL_2
0x400798e	       0xfb64403ff	         movzx eax, byte [rbx + rax - 1]	      5240	ops.c	FUNCTION_61	CALL_3
0x4007993	            0x3c20	                            cmp al, 0x20	      5330	ops.c	FUNCTION_64	IF_5	CALL_6
0x4007995	            0x7409	                            je 0x40079a0	      5330	ops.c	FUNCTION_64	IF_5	CALL_6
0x4007997	            0x3c09	                               cmp al, 9	      5330	ops.c	FUNCTION_64	IF_5	CALL_6
0x4007999	     0xf8512ffffff	                           jne 0x40078b1	      5330	ops.c	FUNCTION_64	IF_5	CALL_6
0x400799f	              0x90	                                     nop	      5330	ops.c	FUNCTION_64	IF_5	CALL_6
0x40079a0	      0xbf6e000000	                           mov edi, 0x6e	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x40079a5	      0xe800000000	                          call 0x40079aa	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x40079aa	            0x85c0	                           test eax, eax	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x40079ac	     0xf8519010000	                           jne 0x4007acb	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x40079b2	            0x31c0	                            xor eax, eax	      4763	ops.c	FUNCTION_56	IF_1
0x40079b4	          0x4585f6	                         test r14d, r14d	      4763	ops.c	FUNCTION_56	IF_1
0x40079b7	           0xf94c0	                                 sete al	      4763	ops.c	FUNCTION_56	IF_1
0x40079ba	          0x4585ed	                         test r13d, r13d	      4762	ops.c	FUNCTION_56	IF_1
0x40079bd	     0xf851d010000	                           jne 0x4007ae0	      4762	ops.c	FUNCTION_56	IF_1
0x40079c3	            0x85c0	                           test eax, eax	      5307	ops.c	FUNCTION_64	IF_1
0x40079c5	           0xf94c0	                                 sete al	      5307	ops.c	FUNCTION_64	IF_1
0x40079c8	           0xfb6c0	                           movzx eax, al	      5307	ops.c	FUNCTION_64	IF_1
0x40079cb	      0xe9e6feffff	                           jmp 0x40078b6	      5307	ops.c	FUNCTION_64	IF_1
0x40079d0	      0x488d742408	                      lea rsi, [rsp + 8]	      5264	ops.c	FUNCTION_62	CALL_2
0x40079d5	            0x31d2	                            xor edx, edx	      5264	ops.c	FUNCTION_62	CALL_2
0x40079d7	      0xb901000000	                              mov ecx, 1	      5264	ops.c	FUNCTION_62	CALL_2
0x40079dc	          0x4889c7	                            mov rdi, rax	      5264	ops.c	FUNCTION_62	CALL_2
0x40079df	      0xe800000000	                          call 0x40079e4	      5264	ops.c	FUNCTION_62	CALL_2
0x40079e4	            0x85c0	                           test eax, eax	      5268	ops.c	FUNCTION_62	ELSE_1	IF_2
0x40079e6	          0x4189c5	                           mov r13d, eax	      5264	ops.c	FUNCTION_62	CALL_2
0x40079e9	     0xf8e1b010000	                           jle 0x4007b0a	      5268	ops.c	FUNCTION_62	ELSE_1	IF_2
0x40079ef	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      5273	ops.c	FUNCTION_62	ELSE_1	IF_2
0x40079f4	            0xeb12	                           jmp 0x4007a08	      5273	ops.c	FUNCTION_62	ELSE_1	IF_2
0x40079f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5273	ops.c	FUNCTION_62	ELSE_1	IF_2
0x4007a00	            0x3c65	                            cmp al, 0x65	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007a02	            0x7415	                            je 0x4007a19	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007a04	        0x4883c301	                              add rbx, 1	      5275	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007a08	           0xfb603	                   movzx eax, byte [rbx]	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007a0b	            0x84c0	                             test al, al	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007a0d	           0xf95c1	                                setne cl	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007a10	            0x3c3a	                            cmp al, 0x3a	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007a12	           0xf95c2	                                setne dl	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007a15	            0x84d1	                             test cl, dl	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007a17	            0x75e7	                           jne 0x4007a00	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007a19	          0x4963fd	                        movsxd rdi, r13d	      5278	ops.c	FUNCTION_62	CALL_3
0x4007a1c	          0x4c01f7	                            add rdi, r14	      5278	ops.c	FUNCTION_62	CALL_3
0x4007a1f	      0xe800000000	                          call 0x4007a24	      5278	ops.c	FUNCTION_62	CALL_3
0x4007a24	          0x803800	                       cmp byte [rax], 0	      5280	ops.c	FUNCTION_62	CALL_4
0x4007a27	     0xf8484feffff	                            je 0x40078b1	      5280	ops.c	FUNCTION_62	CALL_4
0x4007a2d	          0x803b65	                    cmp byte [rbx], 0x65	      5279	ops.c	FUNCTION_62
0x4007a30	     0xf847bfeffff	                            je 0x40078b1	      5279	ops.c	FUNCTION_62
0x4007a36	            0x31d2	                            xor edx, edx	      5280	ops.c	FUNCTION_62	CALL_4
0x4007a38	            0x31f6	                            xor esi, esi	      5280	ops.c	FUNCTION_62	CALL_4
0x4007a3a	          0x4c89e7	                            mov rdi, r12	      5280	ops.c	FUNCTION_62	CALL_4
0x4007a3d	      0xe800000000	                          call 0x4007a42	      5280	ops.c	FUNCTION_62	CALL_4
0x4007a42	            0x85c0	                           test eax, eax	      5280	ops.c	FUNCTION_62	CALL_4
0x4007a44	     0xf8567feffff	                           jne 0x40078b1	      5280	ops.c	FUNCTION_62	CALL_4
0x4007a4a	          0x4889ef	                            mov rdi, rbp	      5262	ops.c	FUNCTION_62	CALL_1
0x4007a4d	      0xe800000000	                          call 0x4007a52	      5262	ops.c	FUNCTION_62	CALL_1
0x4007a52	          0x4989c7	                            mov r15, rax	      5262	ops.c	FUNCTION_62	CALL_1
0x4007a55	      0x488d742410	                   lea rsi, [rsp + 0x10]	      5264	ops.c	FUNCTION_62	CALL_2
0x4007a5a	            0x31d2	                            xor edx, edx	      5264	ops.c	FUNCTION_62	CALL_2
0x4007a5c	      0xb901000000	                              mov ecx, 1	      5264	ops.c	FUNCTION_62	CALL_2
0x4007a61	          0x4c89ff	                            mov rdi, r15	      5264	ops.c	FUNCTION_62	CALL_2
0x4007a64	      0xe800000000	                          call 0x4007a69	      5264	ops.c	FUNCTION_62	CALL_2
0x4007a69	            0x85c0	                           test eax, eax	      5268	ops.c	FUNCTION_62	ELSE_1	IF_2
0x4007a6b	          0x4189c6	                           mov r14d, eax	      5264	ops.c	FUNCTION_62	CALL_2
0x4007a6e	     0xf8e8e000000	                           jle 0x4007b02	      5268	ops.c	FUNCTION_62	ELSE_1	IF_2
0x4007a74	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      5273	ops.c	FUNCTION_62	ELSE_1	IF_2
0x4007a79	           0xfb603	                   movzx eax, byte [rbx]	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007a7c	            0x3c3a	                            cmp al, 0x3a	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007a7e	           0xf95c1	                                setne cl	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007a81	            0x84c0	                             test al, al	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007a83	           0xf95c2	                                setne dl	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007a86	            0x84d1	                             test cl, dl	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007a88	            0x751b	                           jne 0x4007aa5	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007a8a	            0xeb1d	                           jmp 0x4007aa9	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007a8c	         0xf1f4000	                         nop dword [rax]	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007a90	        0x4883c301	                              add rbx, 1	      5275	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007a94	           0xfb603	                   movzx eax, byte [rbx]	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007a97	            0x84c0	                             test al, al	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007a99	           0xf95c1	                                setne cl	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007a9c	            0x3c3a	                            cmp al, 0x3a	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007a9e	           0xf95c2	                                setne dl	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007aa1	            0x84d1	                             test cl, dl	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007aa3	            0x7404	                            je 0x4007aa9	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007aa5	            0x3c65	                            cmp al, 0x65	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007aa7	            0x75e7	                           jne 0x4007a90	      5274	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0x4007aa9	          0x4963fe	                        movsxd rdi, r14d	      5278	ops.c	FUNCTION_62	CALL_3
0x4007aac	          0x4c01ff	                            add rdi, r15	      5278	ops.c	FUNCTION_62	CALL_3
0x4007aaf	      0xe800000000	                          call 0x4007ab4	      5278	ops.c	FUNCTION_62	CALL_3
0x4007ab4	          0x803800	                       cmp byte [rax], 0	      5280	ops.c	FUNCTION_62	CALL_4
0x4007ab7	     0xf84f4fdffff	                            je 0x40078b1	      5280	ops.c	FUNCTION_62	CALL_4
0x4007abd	          0x803b65	                    cmp byte [rbx], 0x65	      5279	ops.c	FUNCTION_62
0x4007ac0	     0xf858afeffff	                           jne 0x4007950	      5279	ops.c	FUNCTION_62
0x4007ac6	      0xe9e6fdffff	                           jmp 0x40078b1	      5279	ops.c	FUNCTION_62
0x4007acb	          0x4889ef	                            mov rdi, rbp	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x4007ace	      0xe800000000	                          call 0x4007ad3	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x4007ad3	            0x85c0	                           test eax, eax	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x4007ad5	     0xf8fd6fdffff	                            jg 0x40078b1	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x4007adb	      0xe9d2feffff	                           jmp 0x40079b2	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x4007ae0	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x4007ae5	      0x488b542408	                mov rdx, qword [rsp + 8]	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x4007aea	          0x4489f1	                           mov ecx, r14d	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x4007aed	          0x4489ee	                           mov esi, r13d	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x4007af0	          0x4c89e7	                            mov rdi, r12	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x4007af3	      0xe80898ffff	             call sym.same_leader.part.0	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x4007af8	      0xe9c6feffff	                           jmp 0x40079c3	      5333	ops.c	FUNCTION_64	IF_6	CALL_8
0x4007afd	      0xe800000000	                          call 0x4007b02	      5343	ops.c	FUNCTION_64
0x4007b02	          0x4863f8	                         movsxd rdi, eax	      5343	ops.c	FUNCTION_64
0x4007b05	      0xe92ffeffff	                           jmp 0x4007939	      5343	ops.c	FUNCTION_64
0x4007b0a	          0x4863f8	                         movsxd rdi, eax	      5343	ops.c	FUNCTION_64
0x4007b0d	      0xe9f2fdffff	                           jmp 0x4007904	      5343	ops.c	FUNCTION_64
finish_viminfo_registers	SWITCH,0:DO,0:ELSE,0:functions,0:FOR,2:IF,2:WHILE,0:CALL,3	41
0x4007ef0	    0x488b15000000	            mov rdx, qword [0x04007ef7] 	      6071	ops.c	FUNCTION_69	IF_1
0x4007ef7	          0x4885d2	                           test rdx, rdx	      6071	ops.c	FUNCTION_69	IF_1
0x4007efa	     0xf848c000000	                            je 0x4007f8c	      6071	ops.c	FUNCTION_69	IF_1
0x4007f00	            0x4154	                                push r12	      6067	ops.c	FUNCTION_69
0x4007f02	              0x55	                                push rbp	      6067	ops.c	FUNCTION_69
0x4007f03	          0x4531e4	                          xor r12d, r12d	      6067	ops.c	FUNCTION_69
0x4007f06	              0x53	                                push rbx	      6067	ops.c	FUNCTION_69
0x4007f07	    0x660f1f840000	                    nop word [rax + rax]	      6067	ops.c	FUNCTION_69
0x4007f10	        0x4a8d0422	                    lea rax, [rdx + r12]	      6074	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x4007f14	          0x488b38	                    mov rdi, qword [rax]	      6074	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x4007f17	          0x4885ff	                           test rdi, rdi	      6074	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x4007f1a	            0x7447	                            je 0x4007f63	      6074	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2
0x4007f1c	      0x4883780800	                  cmp qword [rax + 8], 0	      6076	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0x4007f21	            0x7e34	                           jle 0x4007f57	      6076	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0x4007f23	      0xbd01000000	                              mov ebp, 1	      6076	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0x4007f28	            0x31db	                            xor ebx, ebx	      6076	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0x4007f2a	    0x660f1f440000	                    nop word [rax + rax]	      6076	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0x4007f30	        0x488b3c1f	              mov rdi, qword [rdi + rbx]	      6077	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_1
0x4007f34	        0x4883c308	                              add rbx, 8	      6077	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_1
0x4007f38	      0xe800000000	                          call 0x4007f3d	      6077	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_1
0x4007f3d	          0x4c89e0	                            mov rax, r12	      6076	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0x4007f40	    0x480305000000	             add rax, qword [0x04007f47]	      6076	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0x4007f47	          0x4889ea	                            mov rdx, rbp	      6076	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0x4007f4a	        0x4883c501	                              add rbp, 1	      6076	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0x4007f4e	        0x483b5008	                cmp rdx, qword [rax + 8]	      6076	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0x4007f52	          0x488b38	                    mov rdi, qword [rax]	      6076	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0x4007f55	            0x7cd9	                            jl 0x4007f30	      6076	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0x4007f57	      0xe800000000	                          call 0x4007f5c	      6078	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_2
0x4007f5c	    0x488b15000000	            mov rdx, qword [0x04007f63] 	      6078	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_2
0x4007f63	        0x4983c420	                           add r12, 0x20	      6078	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_2
0x4007f67	    0x4981fc000500	                          cmp r12, 0x500	      6073	ops.c	FUNCTION_69	IF_1	FOR_1
0x4007f6e	            0x75a0	                           jne 0x4007f10	      6073	ops.c	FUNCTION_69	IF_1	FOR_1
0x4007f70	          0x4885d2	                           test rdx, rdx	      6080	ops.c	FUNCTION_69	IF_1	CALL_3
0x4007f73	            0x7413	                            je 0x4007f88	      6080	ops.c	FUNCTION_69	IF_1	CALL_3
0x4007f75	          0x4889d7	                            mov rdi, rdx	      6080	ops.c	FUNCTION_69	IF_1	CALL_3
0x4007f78	      0xe800000000	                          call 0x4007f7d	      6080	ops.c	FUNCTION_69	IF_1	CALL_3
0x4007f7d	    0x48c705000000	               mov qword [0x04007f88], 0	      6080	ops.c	FUNCTION_69	IF_1	CALL_3
0x4007f88	              0x5b	                                 pop rbx	      6082	ops.c	FUNCTION_69
0x4007f89	              0x5d	                                 pop rbp	      6082	ops.c	FUNCTION_69
0x4007f8a	            0x415c	                                 pop r12	      6082	ops.c	FUNCTION_69
0x4007f8c	            0xf3c3	                                     ret	      6082	ops.c	FUNCTION_69
prepare_viminfo_registers	SWITCH,0:DO,0:ELSE,0:functions,0:FOR,0:IF,0:WHILE,0:CALL,1	6
0x4007ed0	        0x4883ec08	                              sub rsp, 8	      6060	ops.c	FUNCTION_68
0x4007ed4	      0xbf00050000	                          mov edi, 0x500	      6061	ops.c	FUNCTION_68	CALL_1
0x4007ed9	      0xe800000000	                          call 0x4007ede	      6061	ops.c	FUNCTION_68	CALL_1
0x4007ede	    0x488905000000	            mov qword [0x04007ee5], rax 	      6061	ops.c	FUNCTION_68	CALL_1
0x4007ee5	        0x4883c408	                              add rsp, 8	      6063	ops.c	FUNCTION_68
0x4007ee9	              0xc3	                                     ret	      6063	ops.c	FUNCTION_68
ex_display	SWITCH,0:DO,0:ELSE,2:functions,0:FOR,3:IF,15:WHILE,0:CALL,41	514
0x4009070	            0x4157	                                push r15	      4245	ops.c	FUNCTION_52
0x4009072	            0x4156	                                push r14	      4245	ops.c	FUNCTION_52
0x4009074	            0x4155	                                push r13	      4245	ops.c	FUNCTION_52
0x4009076	            0x4154	                                push r12	      4245	ops.c	FUNCTION_52
0x4009078	              0x55	                                push rbp	      4245	ops.c	FUNCTION_52
0x4009079	              0x53	                                push rbx	      4245	ops.c	FUNCTION_52
0x400907a	        0x4883ec48	                           sub rsp, 0x48	      4245	ops.c	FUNCTION_52
0x400907e	    0x64488b042528	                mov rax, qword fs:[0x28]	      4245	ops.c	FUNCTION_52
0x4009087	      0x4889442438	             mov qword [rsp + 0x38], rax	      4245	ops.c	FUNCTION_52
0x400908c	            0x31c0	                            xor eax, eax	      4245	ops.c	FUNCTION_52
0x400908e	          0x488b07	                    mov rax, qword [rdi]	      4252	ops.c	FUNCTION_52
0x4009091	          0x4885c0	                           test rax, rax	      4259	ops.c	FUNCTION_52	IF_1
0x4009094	      0x4889442408	                mov qword [rsp + 8], rax	      4252	ops.c	FUNCTION_52
0x4009099	            0x7417	                            je 0x40090b2	      4259	ops.c	FUNCTION_52	IF_1
0x400909b	          0x803800	                       cmp byte [rax], 0	      4260	ops.c	FUNCTION_52	IF_1
0x400909e	          0x4889c1	                            mov rcx, rax	      4260	ops.c	FUNCTION_52	IF_1
0x40090a1	      0xb800000000	                              mov eax, 0	      4260	ops.c	FUNCTION_52	IF_1
0x40090a6	          0x4889c6	                            mov rsi, rax	      4260	ops.c	FUNCTION_52	IF_1
0x40090a9	        0x480f45f1	                         cmovne rsi, rcx	      4260	ops.c	FUNCTION_52	IF_1
0x40090ad	      0x4889742408	                mov qword [rsp + 8], rsi	      4260	ops.c	FUNCTION_52	IF_1
0x40090b2	    0x8b0500000000	            mov eax, dword [0x040090b8] 	      4261	ops.c	FUNCTION_52	CALL_1
0x40090b8	            0x31ff	                            xor edi, edi	      4264	ops.c	FUNCTION_52	CALL_3
0x40090ba	      0xba05000000	                              mov edx, 5	      4264	ops.c	FUNCTION_52	CALL_3
0x40090bf	      0xbe00000000	                              mov esi, 0	      4264	ops.c	FUNCTION_52	CALL_3
0x40090c4	    0x41beffffffff	                    mov r14d, 0xffffffff	      4264	ops.c	FUNCTION_52	CALL_3
0x40090ca	        0x8944241c	             mov dword [rsp + 0x1c], eax	      4261	ops.c	FUNCTION_52	CALL_1
0x40090ce	      0xe800000000	                          call 0x40090d3	      4264	ops.c	FUNCTION_52	CALL_3
0x40090d3	          0x4889c7	                            mov rdi, rax	      4264	ops.c	FUNCTION_52	CALL_3
0x40090d6	      0xe800000000	                          call 0x40090db	      4264	ops.c	FUNCTION_52	CALL_3
0x40090db	    0x8b0500000000	            mov eax, dword [0x040090e1] 	      4265	ops.c	FUNCTION_52	FOR_1
0x40090e1	    0x48c744241000	               mov qword [rsp + 0x10], 0	      4265	ops.c	FUNCTION_52	FOR_1
0x40090ea	    0xc74424180000	               mov dword [rsp + 0x18], 0	      4264	ops.c	FUNCTION_52	CALL_3
0x40090f2	            0x85c0	                           test eax, eax	      4265	ops.c	FUNCTION_52	FOR_1
0x40090f4	     0xf85a7010000	                           jne 0x40092a1	      4265	ops.c	FUNCTION_52	FOR_1
0x40090fa	    0x660f1f440000	                    nop word [rax + rax]	      4265	ops.c	FUNCTION_52	FOR_1
0x4009100	        0x4183feff	            cmp r14d, 0xffffffffffffffff	      4210	ops.c	FUNCTION_51	IF_1
0x4009104	     0xf84a8070000	                            je 0x40098b2	      4210	ops.c	FUNCTION_51	IF_1
0x400910a	        0x4183fe09	                             cmp r14d, 9	      4212	ops.c	FUNCTION_51	ELSE_1	IF_2
0x400910e	     0xf8e5c030000	                           jle 0x4009470	      4212	ops.c	FUNCTION_51	ELSE_1	IF_2
0x4009114	        0x4183fe24	                          cmp r14d, 0x24	      4214	ops.c	FUNCTION_51	ELSE_2	IF_3
0x4009118	     0xf845d070000	                            je 0x400987b	      4214	ops.c	FUNCTION_51	ELSE_2	IF_3
0x400911e	        0x4183fe25	                          cmp r14d, 0x25	      4217	ops.c	FUNCTION_51	ELSE_3	IF_4
0x4009122	     0xf843e030000	                            je 0x4009466	      4217	ops.c	FUNCTION_51	ELSE_3	IF_4
0x4009128	        0x4183fe26	                          cmp r14d, 0x26	      4219	ops.c	FUNCTION_51	ELSE_4	IF_5
0x400912c	     0xf8461030000	                            je 0x4009493	      4219	ops.c	FUNCTION_51	ELSE_4	IF_5
0x4009132	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      4219	ops.c	FUNCTION_51	ELSE_4	IF_5
0x4009136	          0x8d5856	                   lea ebx, [rax + 0x56]	      4219	ops.c	FUNCTION_51	ELSE_4	IF_5
0x4009139	    0x48837c240800	                  cmp qword [rsp + 8], 0	      4268	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x400913f	            0x7415	                            je 0x4009156	      4268	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x4009141	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4268	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x4009146	            0x89de	                            mov esi, ebx	      4268	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x4009148	      0xe800000000	                          call 0x400914d	      4268	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x400914d	          0x4885c0	                           test rax, rax	      4268	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x4009150	     0xf8427010000	                            je 0x400927d	      4268	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x4009156	    0x8b2d00000000	            mov ebp, dword [0x0400915c] 	      1652	ops.c	FUNCTION_30	IF_3
0x400915c	            0x85ed	                           test ebp, ebp	      1652	ops.c	FUNCTION_30	IF_3
0x400915e	           0xf94c0	                                 sete al	      1652	ops.c	FUNCTION_30	IF_3
0x4009161	          0x83fb2a	                           cmp ebx, 0x2a	      1652	ops.c	FUNCTION_30	IF_3
0x4009164	            0x89c1	                            mov ecx, eax	      1652	ops.c	FUNCTION_30	IF_3
0x4009166	            0x7504	                           jne 0x400916c	      1652	ops.c	FUNCTION_30	IF_3
0x4009168	            0x84c0	                             test al, al	      1652	ops.c	FUNCTION_30	IF_3
0x400916a	            0x7521	                           jne 0x400918d	      1652	ops.c	FUNCTION_30	IF_3
0x400916c	          0x83fb2b	                           cmp ebx, 0x2b	      1652	ops.c	FUNCTION_30	IF_3
0x400916f	           0xf94c0	                                 sete al	      1652	ops.c	FUNCTION_30	IF_3
0x4009172	    0x448b1d000000	           mov r11d, dword [0x04009179] 	      1654	ops.c	FUNCTION_30	IF_4
0x4009179	          0x4585db	                         test r11d, r11d	      1654	ops.c	FUNCTION_30	IF_4
0x400917c	           0xf94c2	                                 sete dl	      1654	ops.c	FUNCTION_30	IF_4
0x400917f	     0xf8583020000	                           jne 0x4009408	      1654	ops.c	FUNCTION_30	IF_4
0x4009185	            0x84c0	                             test al, al	      1654	ops.c	FUNCTION_30	IF_4
0x4009187	     0xf847b020000	                            je 0x4009408	      1654	ops.c	FUNCTION_30	IF_4
0x400918d	            0x31db	                            xor ebx, ebx	      1655	ops.c	FUNCTION_30	IF_4
0x400918f	        0x4183feff	            cmp r14d, 0xffffffffffffffff	      4284	ops.c	FUNCTION_52	FOR_1	IF_3
0x4009193	     0xf84ee060000	                            je 0x4009887	      4284	ops.c	FUNCTION_52	FOR_1	IF_3
0x4009199	    0x8b3d00000000	            mov edi, dword [0x0400919f] 	      4295	ops.c	FUNCTION_52	FOR_1	IF_5	CALL_9
0x400919f	      0xe800000000	                          call 0x40091a4	      4295	ops.c	FUNCTION_52	FOR_1	IF_5	CALL_9
0x40091a4	            0x39d8	                            cmp eax, ebx	      4295	ops.c	FUNCTION_52	FOR_1	IF_5	CALL_9
0x40091a6	     0xf84d1000000	                            je 0x400927d	      4295	ops.c	FUNCTION_52	FOR_1	IF_5	CALL_9
0x40091ac	      0x4c8b6c2410	            mov r13, qword [rsp + 0x10] 	      4292	ops.c	FUNCTION_52	FOR_1	ELSE_2
0x40091b1	    0x833d00000000	           cmp dword [0x040091b8], 0x22 	      4296	ops.c	FUNCTION_52	FOR_1	IF_5
0x40091b8	     0xf84fb020000	                            je 0x40094b9	      4296	ops.c	FUNCTION_52	FOR_1	IF_5
0x40091be	      0x49837d0000	                      cmp qword [r13], 0	      4301	ops.c	FUNCTION_52	FOR_1	IF_6
0x40091c3	     0xf84af000000	                            je 0x4009278	      4301	ops.c	FUNCTION_52	FOR_1	IF_6
0x40091c9	      0xbf0a000000	                            mov edi, 0xa	      4303	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_10
0x40091ce	      0xe800000000	                          call 0x40091d3	      4303	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_10
0x40091d3	      0xbf22000000	                           mov edi, 0x22	      4304	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_11
0x40091d8	      0xe800000000	                          call 0x40091dd	      4304	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_11
0x40091dd	            0x89df	                            mov edi, ebx	      4305	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_12
0x40091df	      0xe800000000	                          call 0x40091e4	      4305	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_12
0x40091e4	      0xbf00000000	                              mov edi, 0	      4306	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_13
0x40091e9	      0xe800000000	                          call 0x40091ee	      4306	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_13
0x40091ee	      0x49837d0800	                  cmp qword [r13 + 8], 0	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x40091f3	    0x8b0500000000	            mov eax, dword [0x040091f9] 	      4308	ops.c	FUNCTION_52	FOR_1	IF_6
0x40091f9	          0x8d68fa	                      lea ebp, [rax - 6]	      4308	ops.c	FUNCTION_52	FOR_1	IF_6
0x40091fc	            0x7e65	                           jle 0x4009263	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x40091fe	          0x83fd01	                              cmp ebp, 1	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x4009201	            0x7e70	                           jle 0x4009273	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x4009203	          0x4531e4	                          xor r12d, r12d	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x4009206	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x4009210	        0x498b4500	                    mov rax, qword [r13]	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x4009214	        0x4a8b1ce0	            mov rbx, qword [rax + r12*8]	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x4009218	          0x803b00	                       cmp byte [rbx], 0	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x400921b	            0x7530	                           jne 0x400924d	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x400921d	      0xe90e020000	                           jmp 0x4009430	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x4009222	    0x660f1f440000	                    nop word [rax + rax]	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x4009228	          0x4889df	                            mov rdi, rbx	      4319	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3
0x400922b	    0xff1500000000	                 call qword [0x04009231]	      4319	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3
0x4009231	          0x4889df	                            mov rdi, rbx	      4321	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_16
0x4009234	          0x4189c7	                           mov r15d, eax	      4319	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3
0x4009237	            0x89c6	                            mov esi, eax	      4321	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_16
0x4009239	      0xe800000000	                          call 0x400923e	      4321	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_16
0x400923e	          0x4963d7	                        movsxd rdx, r15d	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x4009241	          0x4801d3	                            add rbx, rdx	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x4009244	          0x803b00	                       cmp byte [rbx], 0	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x4009247	     0xf84e3010000	                            je 0x4009430	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x400924d	          0x4889df	                            mov rdi, rbx	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x4009250	      0xe800000000	                          call 0x4009255	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x4009255	            0x29c5	                            sub ebp, eax	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x4009257	            0x79cf	                           jns 0x4009228	      4316	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x4009259	        0x4983c401	                              add r12, 1	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x400925d	        0x4d396508	                cmp qword [r13 + 8], r12	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x4009261	            0x7f10	                            jg 0x4009273	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x4009263	          0x83fd01	                              cmp ebp, 1	      4327	ops.c	FUNCTION_52	FOR_1	IF_6	IF_8
0x4009266	            0x7e0b	                           jle 0x4009273	      4327	ops.c	FUNCTION_52	FOR_1	IF_6	IF_8
0x4009268	      0x41807d1001	                cmp byte [r13 + 0x10], 1	      4327	ops.c	FUNCTION_52	FOR_1	IF_6	IF_8
0x400926d	     0xf8458020000	                            je 0x40094cb	      4327	ops.c	FUNCTION_52	FOR_1	IF_6	IF_8
0x4009273	      0xe800000000	                          call 0x4009278	      4329	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_18
0x4009278	      0xe800000000	                          call 0x400927d	      4331	ops.c	FUNCTION_52	FOR_1	CALL_19
0x400927d	      0x837c241828	           cmp dword [rsp + 0x18], 0x28 	      4265	ops.c	FUNCTION_52	FOR_1
0x4009282	            0x741d	                            je 0x40092a1	      4265	ops.c	FUNCTION_52	FOR_1
0x4009284	    0x8b0500000000	            mov eax, dword [0x0400928a] 	      4265	ops.c	FUNCTION_52	FOR_1
0x400928a	      0x8344241801	               add dword [rsp + 0x18], 1	      4265	ops.c	FUNCTION_52	FOR_1
0x400928f	        0x4183c601	                             add r14d, 1	      4265	ops.c	FUNCTION_52	FOR_1
0x4009293	    0x488344241020	            add qword [rsp + 0x10], 0x20	      4265	ops.c	FUNCTION_52	FOR_1
0x4009299	            0x85c0	                           test eax, eax	      4265	ops.c	FUNCTION_52	FOR_1
0x400929b	     0xf845ffeffff	                            je 0x4009100	      4265	ops.c	FUNCTION_52	FOR_1
0x40092a1	      0xe800000000	                          call 0x40092a6	      4337	ops.c	FUNCTION_52	IF_9	CALL_20
0x40092a6	          0x4885c0	                           test rax, rax	      4337	ops.c	FUNCTION_52	IF_9	CALL_20
0x40092a9	          0x4889c3	                            mov rbx, rax	      4337	ops.c	FUNCTION_52	IF_9	CALL_20
0x40092ac	            0x742e	                            je 0x40092dc	      4337	ops.c	FUNCTION_52	IF_9	CALL_20
0x40092ae	    0x48837c240800	                  cmp qword [rsp + 8], 0	      4338	ops.c	FUNCTION_52	IF_9	CALL_21
0x40092b4	            0x7418	                            je 0x40092ce	      4338	ops.c	FUNCTION_52	IF_9	CALL_21
0x40092b6	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4338	ops.c	FUNCTION_52	IF_9	CALL_21
0x40092bb	      0xbe2e000000	                           mov esi, 0x2e	      4338	ops.c	FUNCTION_52	IF_9	CALL_21
0x40092c0	      0xe800000000	                          call 0x40092c5	      4338	ops.c	FUNCTION_52	IF_9	CALL_21
0x40092c5	          0x4885c0	                           test rax, rax	      4338	ops.c	FUNCTION_52	IF_9	CALL_21
0x40092c8	     0xf849a050000	                            je 0x4009868	      4338	ops.c	FUNCTION_52	IF_9	CALL_21
0x40092ce	    0x8b0500000000	            mov eax, dword [0x040092d4] 	      4338	ops.c	FUNCTION_52	IF_9	CALL_21
0x40092d4	            0x85c0	                           test eax, eax	      4338	ops.c	FUNCTION_52	IF_9	CALL_21
0x40092d6	     0xf84b1040000	                            je 0x400978d	      4338	ops.c	FUNCTION_52	IF_9	CALL_21
0x40092dc	    0x48833d000000	               cmp qword [0x040092e4], 0	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x40092e4	            0x742e	                            je 0x4009314	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x40092e6	    0x48837c240800	                  cmp qword [rsp + 8], 0	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x40092ec	            0x7418	                            je 0x4009306	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x40092ee	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x40092f3	      0xbe3a000000	                           mov esi, 0x3a	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x40092f8	      0xe800000000	                          call 0x40092fd	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x40092fd	          0x4885c0	                           test rax, rax	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x4009300	     0xf8429050000	                            je 0x400982f	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x4009306	    0x8b0500000000	            mov eax, dword [0x0400930c] 	      4348	ops.c	FUNCTION_52	IF_10
0x400930c	            0x85c0	                           test eax, eax	      4348	ops.c	FUNCTION_52	IF_10
0x400930e	     0xf84fd030000	                            je 0x4009711	      4348	ops.c	FUNCTION_52	IF_10
0x4009314	    0x488b05000000	            mov rax, qword [0x0400931b] 	      4357	ops.c	FUNCTION_52	IF_11
0x400931b	    0x4883b8980000	               cmp qword [rax + 0x98], 0	      4357	ops.c	FUNCTION_52	IF_11
0x4009323	     0xf8433020000	                            je 0x400955c	      4357	ops.c	FUNCTION_52	IF_11
0x4009329	    0x48837c240800	                  cmp qword [rsp + 8], 0	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x400932f	     0xf84a9010000	                            je 0x40094de	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x4009335	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x400933a	      0xbe25000000	                           mov esi, 0x25	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x400933f	      0xe800000000	                          call 0x4009344	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x4009344	          0x4885c0	                           test rax, rax	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x4009347	            0x740e	                            je 0x4009357	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x4009349	    0x8b0500000000	            mov eax, dword [0x0400934f] 	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x400934f	            0x85c0	                           test eax, eax	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x4009351	     0xf8495010000	                            je 0x40094ec	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x4009357	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x400935c	      0xbe25000000	                           mov esi, 0x25	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x4009361	      0xe800000000	                          call 0x4009366	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x4009366	          0x4885c0	                           test rax, rax	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x4009369	            0x740e	                            je 0x4009379	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x400936b	    0x8b0500000000	            mov eax, dword [0x04009371] 	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x4009371	            0x85c0	                           test eax, eax	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x4009373	     0xf84fd010000	                            je 0x4009576	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x4009379	      0xe800000000	                          call 0x400937e	      4382	ops.c	FUNCTION_52	IF_14	CALL_34
0x400937e	          0x4885c0	                           test rax, rax	      4382	ops.c	FUNCTION_52	IF_14	CALL_34
0x4009381	            0x742e	                            je 0x40093b1	      4382	ops.c	FUNCTION_52	IF_14	CALL_34
0x4009383	    0x48837c240800	                  cmp qword [rsp + 8], 0	      4383	ops.c	FUNCTION_52	IF_14	CALL_35
0x4009389	            0x7418	                            je 0x40093a3	      4383	ops.c	FUNCTION_52	IF_14	CALL_35
0x400938b	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4383	ops.c	FUNCTION_52	IF_14	CALL_35
0x4009390	      0xbe2f000000	                           mov esi, 0x2f	      4383	ops.c	FUNCTION_52	IF_14	CALL_35
0x4009395	      0xe800000000	                          call 0x400939a	      4383	ops.c	FUNCTION_52	IF_14	CALL_35
0x400939a	          0x4885c0	                           test rax, rax	      4383	ops.c	FUNCTION_52	IF_14	CALL_35
0x400939d	     0xf84ad040000	                            je 0x4009850	      4383	ops.c	FUNCTION_52	IF_14	CALL_35
0x40093a3	    0x8b0500000000	            mov eax, dword [0x040093a9] 	      4383	ops.c	FUNCTION_52	IF_14	CALL_35
0x40093a9	            0x85c0	                           test eax, eax	      4383	ops.c	FUNCTION_52	IF_14	CALL_35
0x40093ab	     0xf84e5020000	                            je 0x4009696	      4383	ops.c	FUNCTION_52	IF_14	CALL_35
0x40093b1	    0x48833d000000	               cmp qword [0x040093b9], 0	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x40093b9	            0x742a	                            je 0x40093e5	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x40093bb	    0x48837c240800	                  cmp qword [rsp + 8], 0	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x40093c1	            0x7414	                            je 0x40093d7	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x40093c3	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x40093c8	      0xbe3d000000	                           mov esi, 0x3d	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x40093cd	      0xe800000000	                          call 0x40093d2	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x40093d2	          0x4885c0	                           test rax, rax	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x40093d5	            0x740e	                            je 0x40093e5	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x40093d7	    0x8b0500000000	            mov eax, dword [0x040093dd] 	      4394	ops.c	FUNCTION_52	IF_15
0x40093dd	            0x85c0	                           test eax, eax	      4394	ops.c	FUNCTION_52	IF_15
0x40093df	     0xf8434020000	                            je 0x4009619	      4394	ops.c	FUNCTION_52	IF_15
0x40093e5	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      4400	ops.c	FUNCTION_52
0x40093ea	    0x644833042528	                xor rax, qword fs:[0x28]	      4400	ops.c	FUNCTION_52
0x40093f3	     0xf85c5040000	                           jne 0x40098be	      4400	ops.c	FUNCTION_52
0x40093f9	        0x4883c448	                           add rsp, 0x48	      4400	ops.c	FUNCTION_52
0x40093fd	              0x5b	                                 pop rbx	      4400	ops.c	FUNCTION_52
0x40093fe	              0x5d	                                 pop rbp	      4400	ops.c	FUNCTION_52
0x40093ff	            0x415c	                                 pop r12	      4400	ops.c	FUNCTION_52
0x4009401	            0x415d	                                 pop r13	      4400	ops.c	FUNCTION_52
0x4009403	            0x415e	                                 pop r14	      4400	ops.c	FUNCTION_52
0x4009405	            0x415f	                                 pop r15	      4400	ops.c	FUNCTION_52
0x4009407	              0xc3	                                     ret	      4400	ops.c	FUNCTION_52
0x4009408	          0x83fb2a	                           cmp ebx, 0x2a	       964	ops.c	FUNCTION_16	IF_1
0x400940b	            0x746f	                            je 0x400947c	       964	ops.c	FUNCTION_16	IF_1
0x400940d	          0x83fb2b	                           cmp ebx, 0x2b	       973	ops.c	FUNCTION_16	ELSE_2	IF_3	IF_4
0x4009410	     0xf8579fdffff	                           jne 0x400918f	       973	ops.c	FUNCTION_16	ELSE_2	IF_3	IF_4
0x4009416	            0x84d2	                             test dl, dl	       973	ops.c	FUNCTION_16	ELSE_2	IF_3	IF_4
0x4009418	     0xf8571fdffff	                           jne 0x400918f	       973	ops.c	FUNCTION_16	ELSE_2	IF_3	IF_4
0x400941e	      0xbf00000000	                              mov edi, 0	       976	ops.c	FUNCTION_16	ELSE_2	IF_3	CALL_2
0x4009423	      0xe800000000	                          call 0x4009428	       976	ops.c	FUNCTION_16	ELSE_2	IF_3	CALL_2
0x4009428	      0xe962fdffff	                           jmp 0x400918f	       976	ops.c	FUNCTION_16	ELSE_2	IF_3	CALL_2
0x400942d	           0xf1f00	                         nop dword [rax]	       976	ops.c	FUNCTION_16	ELSE_2	IF_3	CALL_2
0x4009430	        0x4983c401	                              add r12, 1	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x4009434	        0x4d396508	                cmp qword [r13 + 8], r12	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x4009438	     0xf8e25feffff	                           jle 0x4009263	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x400943e	          0x83fd01	                              cmp ebp, 1	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x4009441	     0xf8e2cfeffff	                           jle 0x4009273	      4309	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x4009447	          0x4d85e4	                           test r12, r12	      4311	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	IF_7
0x400944a	     0xf84c0fdffff	                            je 0x4009210	      4311	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	IF_7
0x4009450	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	      4313	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	IF_7	CALL_14
0x4009454	      0xbf00000000	                              mov edi, 0	      4313	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	IF_7	CALL_14
0x4009459	          0x83ed02	                              sub ebp, 2	      4314	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	IF_7
0x400945c	      0xe800000000	                          call 0x4009461	      4313	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	IF_7	CALL_14
0x4009461	      0xe9aafdffff	                           jmp 0x4009210	      4313	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	IF_7	CALL_14
0x4009466	      0xbb2a000000	                           mov ebx, 0x2a	      4218	ops.c	FUNCTION_51	ELSE_3	IF_4
0x400946b	      0xe9c9fcffff	                           jmp 0x4009139	      4218	ops.c	FUNCTION_51	ELSE_3	IF_4
0x4009470	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      4218	ops.c	FUNCTION_51	ELSE_3	IF_4
0x4009474	          0x8d582f	                   lea ebx, [rax + 0x2f]	      4218	ops.c	FUNCTION_51	ELSE_3	IF_4
0x4009477	      0xe9bdfcffff	                           jmp 0x4009139	      4218	ops.c	FUNCTION_51	ELSE_3	IF_4
0x400947c	            0x84c9	                             test cl, cl	       966	ops.c	FUNCTION_16	IF_1	IF_2
0x400947e	     0xf850bfdffff	                           jne 0x400918f	       966	ops.c	FUNCTION_16	IF_1	IF_2
0x4009484	      0xbf00000000	                              mov edi, 0	       969	ops.c	FUNCTION_16	IF_1	CALL_1
0x4009489	      0xe800000000	                          call 0x400948e	       969	ops.c	FUNCTION_16	IF_1	CALL_1
0x400948e	      0xe9fcfcffff	                           jmp 0x400918f	       969	ops.c	FUNCTION_16	IF_1	CALL_1
0x4009493	      0xb801000000	                              mov eax, 1	      4219	ops.c	FUNCTION_51	ELSE_4	IF_5
0x4009498	      0xbb2b000000	                           mov ebx, 0x2b	      4220	ops.c	FUNCTION_51	ELSE_4	IF_5
0x400949d	    0x48837c240800	                  cmp qword [rsp + 8], 0	      4268	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x40094a3	     0xf8598fcffff	                           jne 0x4009141	      4268	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x40094a9	    0x8b1500000000	            mov edx, dword [0x040094af] 	      1652	ops.c	FUNCTION_30	IF_3
0x40094af	            0x85d2	                           test edx, edx	      1652	ops.c	FUNCTION_30	IF_3
0x40094b1	           0xf94c1	                                 sete cl	      1652	ops.c	FUNCTION_30	IF_3
0x40094b4	      0xe9b9fcffff	                           jmp 0x4009172	      1652	ops.c	FUNCTION_30	IF_3
0x40094b9	    0x4c392d000000	            cmp qword [0x040094c0], r13 	      4296	ops.c	FUNCTION_52	FOR_1	IF_5
0x40094c0	     0xf85f8fcffff	                           jne 0x40091be	      4296	ops.c	FUNCTION_52	FOR_1	IF_5
0x40094c6	      0xe9b2fdffff	                           jmp 0x400927d	      4296	ops.c	FUNCTION_52	FOR_1	IF_5
0x40094cb	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	      4328	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_17
0x40094cf	      0xbf00000000	                              mov edi, 0	      4328	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_17
0x40094d4	      0xe800000000	                          call 0x40094d9	      4328	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_17
0x40094d9	      0xe995fdffff	                           jmp 0x4009273	      4328	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_17
0x40094de	    0x8b0500000000	            mov eax, dword [0x040094e4] 	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x40094e4	            0x85c0	                           test eax, eax	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x40094e6	     0xf857ffeffff	                           jne 0x400936b	      4358	ops.c	FUNCTION_52	IF_11	CALL_27
0x40094ec	      0xbf00000000	                              mov edi, 0	      4360	ops.c	FUNCTION_52	IF_11	CALL_28
0x40094f1	      0xe800000000	                          call 0x40094f6	      4360	ops.c	FUNCTION_52	IF_11	CALL_28
0x40094f6	    0x488b05000000	            mov rax, qword [0x040094fd] 	      4361	ops.c	FUNCTION_52	IF_11	CALL_29
0x40094fd	    0x488b98980000	            mov rbx, qword [rax + 0x98] 	      4361	ops.c	FUNCTION_52	IF_11	CALL_29
0x4009504	    0x8b0500000000	            mov eax, dword [0x0400950a] 	      4416	ops.c	FUNCTION_53
0x400950a	          0x8d68fa	                      lea ebp, [rax - 6]	      4416	ops.c	FUNCTION_53
0x400950d	          0x803b00	                       cmp byte [rbx], 0	      4417	ops.c	FUNCTION_53	WHILE_1
0x4009510	            0x7445	                            je 0x4009557	      4417	ops.c	FUNCTION_53	WHILE_1
0x4009512	          0x4889df	                            mov rdi, rbx	      4419	ops.c	FUNCTION_53	WHILE_1	CALL_1
0x4009515	      0xe800000000	                          call 0x400951a	      4419	ops.c	FUNCTION_53	WHILE_1	CALL_1
0x400951a	            0x29c5	                            sub ebp, eax	      4419	ops.c	FUNCTION_53	WHILE_1	CALL_1
0x400951c	            0x7839	                            js 0x4009557	      4419	ops.c	FUNCTION_53	WHILE_1	CALL_1
0x400951e	    0x448b05000000	            mov r8d, dword [0x04009525] 	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4009525	          0x4585c0	                           test r8d, r8d	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4009528	     0xf84d2000000	                            je 0x4009600	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x400952e	          0x4889df	                            mov rdi, rbx	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4009531	    0xff1500000000	                 call qword [0x04009537]	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4009537	          0x4c63e0	                         movsxd r12, eax	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x400953a	        0x4183fc01	                             cmp r12d, 1	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x400953e	     0xf8ebc000000	                           jle 0x4009600	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4009544	          0x4889df	                            mov rdi, rbx	      4424	ops.c	FUNCTION_53	WHILE_1	IF_1	CALL_2
0x4009547	          0x4489e6	                           mov esi, r12d	      4424	ops.c	FUNCTION_53	WHILE_1	IF_1	CALL_2
0x400954a	          0x4c01e3	                            add rbx, r12	      4425	ops.c	FUNCTION_53	WHILE_1	IF_1
0x400954d	      0xe800000000	                          call 0x4009552	      4424	ops.c	FUNCTION_53	WHILE_1	IF_1	CALL_2
0x4009552	          0x803b00	                       cmp byte [rbx], 0	      4417	ops.c	FUNCTION_53	WHILE_1
0x4009555	            0x75bb	                           jne 0x4009512	      4417	ops.c	FUNCTION_53	WHILE_1
0x4009557	      0xe800000000	                          call 0x400955c	      4431	ops.c	FUNCTION_53	CALL_4
0x400955c	    0x48837c240800	                  cmp qword [rsp + 8], 0	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x4009562	     0xf85effdffff	                           jne 0x4009357	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x4009568	    0x8b0500000000	            mov eax, dword [0x0400956e] 	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x400956e	            0x85c0	                           test eax, eax	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x4009570	     0xf8503feffff	                           jne 0x4009379	      4367	ops.c	FUNCTION_52	IF_12	CALL_30
0x4009576	      0x488d542430	                   lea rdx, [rsp + 0x30]	      4372	ops.c	FUNCTION_52	IF_12	IF_13	CALL_31
0x400957b	      0x488d742428	                   lea rsi, [rsp + 0x28]	      4372	ops.c	FUNCTION_52	IF_12	IF_13	CALL_31
0x4009580	            0x31ff	                            xor edi, edi	      4372	ops.c	FUNCTION_52	IF_12	IF_13	CALL_31
0x4009582	      0xe800000000	                          call 0x4009587	      4372	ops.c	FUNCTION_52	IF_12	IF_13	CALL_31
0x4009587	            0x85c0	                           test eax, eax	      4372	ops.c	FUNCTION_52	IF_12	IF_13	CALL_31
0x4009589	     0xf84eafdffff	                            je 0x4009379	      4372	ops.c	FUNCTION_52	IF_12	IF_13	CALL_31
0x400958f	      0xbf00000000	                              mov edi, 0	      4374	ops.c	FUNCTION_52	IF_12	IF_13	CALL_32
0x4009594	      0xe800000000	                          call 0x4009599	      4374	ops.c	FUNCTION_52	IF_12	IF_13	CALL_32
0x4009599	    0x8b0500000000	            mov eax, dword [0x0400959f] 	      4416	ops.c	FUNCTION_53
0x400959f	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	      4375	ops.c	FUNCTION_52	IF_12	IF_13	CALL_33
0x40095a4	          0x8d68fa	                      lea ebp, [rax - 6]	      4416	ops.c	FUNCTION_53
0x40095a7	          0x803b00	                       cmp byte [rbx], 0	      4417	ops.c	FUNCTION_53	WHILE_1
0x40095aa	            0x7443	                            je 0x40095ef	      4417	ops.c	FUNCTION_53	WHILE_1
0x40095ac	          0x4889df	                            mov rdi, rbx	      4419	ops.c	FUNCTION_53	WHILE_1	CALL_1
0x40095af	      0xe800000000	                          call 0x40095b4	      4419	ops.c	FUNCTION_53	WHILE_1	CALL_1
0x40095b4	            0x29c5	                            sub ebp, eax	      4419	ops.c	FUNCTION_53	WHILE_1	CALL_1
0x40095b6	            0x7837	                            js 0x40095ef	      4419	ops.c	FUNCTION_53	WHILE_1	CALL_1
0x40095b8	    0x8b3d00000000	            mov edi, dword [0x040095be] 	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x40095be	            0x85ff	                           test edi, edi	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x40095c0	     0xf8450020000	                            je 0x4009816	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x40095c6	          0x4889df	                            mov rdi, rbx	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x40095c9	    0xff1500000000	                 call qword [0x040095cf]	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x40095cf	          0x4c63e0	                         movsxd r12, eax	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x40095d2	        0x4183fc01	                             cmp r12d, 1	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x40095d6	     0xf8e3a020000	                           jle 0x4009816	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x40095dc	          0x4889df	                            mov rdi, rbx	      4424	ops.c	FUNCTION_53	WHILE_1	IF_1	CALL_2
0x40095df	          0x4489e6	                           mov esi, r12d	      4424	ops.c	FUNCTION_53	WHILE_1	IF_1	CALL_2
0x40095e2	          0x4c01e3	                            add rbx, r12	      4425	ops.c	FUNCTION_53	WHILE_1	IF_1
0x40095e5	      0xe800000000	                          call 0x40095ea	      4424	ops.c	FUNCTION_53	WHILE_1	IF_1	CALL_2
0x40095ea	          0x803b00	                       cmp byte [rbx], 0	      4417	ops.c	FUNCTION_53	WHILE_1
0x40095ed	            0x75bd	                           jne 0x40095ac	      4417	ops.c	FUNCTION_53	WHILE_1
0x40095ef	      0xe800000000	                          call 0x40095f4	      4431	ops.c	FUNCTION_53	CALL_4
0x40095f4	      0xe980fdffff	                           jmp 0x4009379	      4431	ops.c	FUNCTION_53	CALL_4
0x40095f9	     0xf1f80000000	                         nop dword [rax]	      4431	ops.c	FUNCTION_53	CALL_4
0x4009600	        0x4c8d6301	                      lea r12, [rbx + 1]	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x4009604	          0x4889df	                            mov rdi, rbx	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x4009607	      0xbe01000000	                              mov esi, 1	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x400960c	      0xe800000000	                          call 0x4009611	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x4009611	          0x4c89e3	                            mov rbx, r12	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x4009614	      0xe9f4feffff	                           jmp 0x400950d	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x4009619	      0xbf00000000	                              mov edi, 0	      4396	ops.c	FUNCTION_52	IF_15	CALL_40
0x400961e	      0xe800000000	                          call 0x4009623	      4396	ops.c	FUNCTION_52	IF_15	CALL_40
0x4009623	    0x8b0500000000	            mov eax, dword [0x04009629] 	      4416	ops.c	FUNCTION_53
0x4009629	    0x488b1d000000	            mov rbx, qword [0x04009630] 	      4397	ops.c	FUNCTION_52	IF_15	CALL_41
0x4009630	          0x8d68fa	                      lea ebp, [rax - 6]	      4416	ops.c	FUNCTION_53
0x4009633	          0x803b00	                       cmp byte [rbx], 0	      4417	ops.c	FUNCTION_53	WHILE_1
0x4009636	            0x743b	                            je 0x4009673	      4417	ops.c	FUNCTION_53	WHILE_1
0x4009638	          0x4889df	                            mov rdi, rbx	      4419	ops.c	FUNCTION_53	WHILE_1	CALL_1
0x400963b	      0xe800000000	                          call 0x4009640	      4419	ops.c	FUNCTION_53	WHILE_1	CALL_1
0x4009640	            0x29c5	                            sub ebp, eax	      4419	ops.c	FUNCTION_53	WHILE_1	CALL_1
0x4009642	            0x782f	                            js 0x4009673	      4419	ops.c	FUNCTION_53	WHILE_1	CALL_1
0x4009644	    0x8b0d00000000	            mov ecx, dword [0x0400964a] 	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x400964a	            0x85c9	                           test ecx, ecx	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x400964c	            0x7432	                            je 0x4009680	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x400964e	          0x4889df	                            mov rdi, rbx	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4009651	    0xff1500000000	                 call qword [0x04009657]	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4009657	          0x4c63e0	                         movsxd r12, eax	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x400965a	        0x4183fc01	                             cmp r12d, 1	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x400965e	            0x7e20	                           jle 0x4009680	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4009660	          0x4889df	                            mov rdi, rbx	      4424	ops.c	FUNCTION_53	WHILE_1	IF_1	CALL_2
0x4009663	          0x4489e6	                           mov esi, r12d	      4424	ops.c	FUNCTION_53	WHILE_1	IF_1	CALL_2
0x4009666	          0x4c01e3	                            add rbx, r12	      4425	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4009669	      0xe800000000	                          call 0x400966e	      4424	ops.c	FUNCTION_53	WHILE_1	IF_1	CALL_2
0x400966e	          0x803b00	                       cmp byte [rbx], 0	      4417	ops.c	FUNCTION_53	WHILE_1
0x4009671	            0x75c5	                           jne 0x4009638	      4417	ops.c	FUNCTION_53	WHILE_1
0x4009673	      0xe800000000	                          call 0x4009678	      4431	ops.c	FUNCTION_53	CALL_4
0x4009678	      0xe968fdffff	                           jmp 0x40093e5	      4431	ops.c	FUNCTION_53	CALL_4
0x400967d	           0xf1f00	                         nop dword [rax]	      4431	ops.c	FUNCTION_53	CALL_4
0x4009680	        0x4c8d6301	                      lea r12, [rbx + 1]	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x4009684	          0x4889df	                            mov rdi, rbx	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x4009687	      0xbe01000000	                              mov esi, 1	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x400968c	      0xe800000000	                          call 0x4009691	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x4009691	          0x4c89e3	                            mov rbx, r12	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x4009694	            0xeb9d	                           jmp 0x4009633	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x4009696	      0xbf00000000	                              mov edi, 0	      4385	ops.c	FUNCTION_52	IF_14	CALL_36
0x400969b	      0xe800000000	                          call 0x40096a0	      4385	ops.c	FUNCTION_52	IF_14	CALL_36
0x40096a0	      0xe800000000	                          call 0x40096a5	      4386	ops.c	FUNCTION_52	IF_14	CALL_38
0x40096a5	          0x4889c3	                            mov rbx, rax	      4386	ops.c	FUNCTION_52	IF_14	CALL_38
0x40096a8	    0x8b0500000000	            mov eax, dword [0x040096ae] 	      4416	ops.c	FUNCTION_53
0x40096ae	          0x8d68fa	                      lea ebp, [rax - 6]	      4416	ops.c	FUNCTION_53
0x40096b1	          0x803b00	                       cmp byte [rbx], 0	      4417	ops.c	FUNCTION_53	WHILE_1
0x40096b4	            0x743b	                            je 0x40096f1	      4417	ops.c	FUNCTION_53	WHILE_1
0x40096b6	          0x4889df	                            mov rdi, rbx	      4419	ops.c	FUNCTION_53	WHILE_1	CALL_1
0x40096b9	      0xe800000000	                          call 0x40096be	      4419	ops.c	FUNCTION_53	WHILE_1	CALL_1
0x40096be	            0x29c5	                            sub ebp, eax	      4419	ops.c	FUNCTION_53	WHILE_1	CALL_1
0x40096c0	            0x782f	                            js 0x40096f1	      4419	ops.c	FUNCTION_53	WHILE_1	CALL_1
0x40096c2	    0x8b3500000000	            mov esi, dword [0x040096c8] 	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x40096c8	            0x85f6	                           test esi, esi	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x40096ca	            0x742f	                            je 0x40096fb	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x40096cc	          0x4889df	                            mov rdi, rbx	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x40096cf	    0xff1500000000	                 call qword [0x040096d5]	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x40096d5	          0x4c63e0	                         movsxd r12, eax	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x40096d8	        0x4183fc01	                             cmp r12d, 1	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x40096dc	            0x7e1d	                           jle 0x40096fb	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x40096de	          0x4889df	                            mov rdi, rbx	      4424	ops.c	FUNCTION_53	WHILE_1	IF_1	CALL_2
0x40096e1	          0x4489e6	                           mov esi, r12d	      4424	ops.c	FUNCTION_53	WHILE_1	IF_1	CALL_2
0x40096e4	          0x4c01e3	                            add rbx, r12	      4425	ops.c	FUNCTION_53	WHILE_1	IF_1
0x40096e7	      0xe800000000	                          call 0x40096ec	      4424	ops.c	FUNCTION_53	WHILE_1	IF_1	CALL_2
0x40096ec	          0x803b00	                       cmp byte [rbx], 0	      4417	ops.c	FUNCTION_53	WHILE_1
0x40096ef	            0x75c5	                           jne 0x40096b6	      4417	ops.c	FUNCTION_53	WHILE_1
0x40096f1	      0xe800000000	                          call 0x40096f6	      4431	ops.c	FUNCTION_53	CALL_4
0x40096f6	      0xe9b6fcffff	                           jmp 0x40093b1	      4431	ops.c	FUNCTION_53	CALL_4
0x40096fb	        0x4c8d6301	                      lea r12, [rbx + 1]	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x40096ff	          0x4889df	                            mov rdi, rbx	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x4009702	      0xbe01000000	                              mov esi, 1	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x4009707	      0xe800000000	                          call 0x400970c	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x400970c	          0x4c89e3	                            mov rbx, r12	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x400970f	            0xeba0	                           jmp 0x40096b1	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x4009711	      0xbf00000000	                              mov edi, 0	      4350	ops.c	FUNCTION_52	IF_10	CALL_25
0x4009716	      0xe800000000	                          call 0x400971b	      4350	ops.c	FUNCTION_52	IF_10	CALL_25
0x400971b	    0x8b0500000000	            mov eax, dword [0x04009721] 	      4416	ops.c	FUNCTION_53
0x4009721	    0x488b1d000000	            mov rbx, qword [0x04009728] 	      4351	ops.c	FUNCTION_52	IF_10	CALL_26
0x4009728	          0x8d68fa	                      lea ebp, [rax - 6]	      4416	ops.c	FUNCTION_53
0x400972b	          0x803b00	                       cmp byte [rbx], 0	      4417	ops.c	FUNCTION_53	WHILE_1
0x400972e	            0x743d	                            je 0x400976d	      4417	ops.c	FUNCTION_53	WHILE_1
0x4009730	          0x4889df	                            mov rdi, rbx	      4419	ops.c	FUNCTION_53	WHILE_1	CALL_1
0x4009733	      0xe800000000	                          call 0x4009738	      4419	ops.c	FUNCTION_53	WHILE_1	CALL_1
0x4009738	            0x29c5	                            sub ebp, eax	      4419	ops.c	FUNCTION_53	WHILE_1	CALL_1
0x400973a	            0x7831	                            js 0x400976d	      4419	ops.c	FUNCTION_53	WHILE_1	CALL_1
0x400973c	    0x448b0d000000	            mov r9d, dword [0x04009743] 	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4009743	          0x4585c9	                           test r9d, r9d	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4009746	            0x742f	                            je 0x4009777	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4009748	          0x4889df	                            mov rdi, rbx	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x400974b	    0xff1500000000	                 call qword [0x04009751]	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4009751	          0x4c63e0	                         movsxd r12, eax	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4009754	        0x4183fc01	                             cmp r12d, 1	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4009758	            0x7e1d	                           jle 0x4009777	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x400975a	          0x4889df	                            mov rdi, rbx	      4424	ops.c	FUNCTION_53	WHILE_1	IF_1	CALL_2
0x400975d	          0x4489e6	                           mov esi, r12d	      4424	ops.c	FUNCTION_53	WHILE_1	IF_1	CALL_2
0x4009760	          0x4c01e3	                            add rbx, r12	      4425	ops.c	FUNCTION_53	WHILE_1	IF_1
0x4009763	      0xe800000000	                          call 0x4009768	      4424	ops.c	FUNCTION_53	WHILE_1	IF_1	CALL_2
0x4009768	          0x803b00	                       cmp byte [rbx], 0	      4417	ops.c	FUNCTION_53	WHILE_1
0x400976b	            0x75c3	                           jne 0x4009730	      4417	ops.c	FUNCTION_53	WHILE_1
0x400976d	      0xe800000000	                          call 0x4009772	      4431	ops.c	FUNCTION_53	CALL_4
0x4009772	      0xe99dfbffff	                           jmp 0x4009314	      4431	ops.c	FUNCTION_53	CALL_4
0x4009777	        0x4c8d6301	                      lea r12, [rbx + 1]	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x400977b	          0x4889df	                            mov rdi, rbx	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x400977e	      0xbe01000000	                              mov esi, 1	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x4009783	      0xe800000000	                          call 0x4009788	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x4009788	          0x4c89e3	                            mov rbx, r12	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x400978b	            0xeb9e	                           jmp 0x400972b	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x400978d	      0xbf00000000	                              mov edi, 0	      4340	ops.c	FUNCTION_52	IF_9	CALL_22
0x4009792	      0xe800000000	                          call 0x4009797	      4340	ops.c	FUNCTION_52	IF_9	CALL_22
0x4009797	    0x8b0500000000	            mov eax, dword [0x0400979d] 	      4416	ops.c	FUNCTION_53
0x400979d	          0x8d68fa	                      lea ebp, [rax - 6]	      4416	ops.c	FUNCTION_53
0x40097a0	           0xfb603	                   movzx eax, byte [rbx]	      4417	ops.c	FUNCTION_53	WHILE_1
0x40097a3	            0x84c0	                             test al, al	      4417	ops.c	FUNCTION_53	WHILE_1
0x40097a5	            0x7449	                            je 0x40097f0	      4417	ops.c	FUNCTION_53	WHILE_1
0x40097a7	            0x3c1b	                            cmp al, 0x1b	      4418	ops.c	FUNCTION_53	WHILE_1
0x40097a9	            0x7506	                           jne 0x40097b1	      4418	ops.c	FUNCTION_53	WHILE_1
0x40097ab	        0x807b0100	                   cmp byte [rbx + 1], 0	      4418	ops.c	FUNCTION_53	WHILE_1
0x40097af	            0x743f	                            je 0x40097f0	      4418	ops.c	FUNCTION_53	WHILE_1
0x40097b1	          0x4889df	                            mov rdi, rbx	      4419	ops.c	FUNCTION_53	WHILE_1	CALL_1
0x40097b4	      0xe800000000	                          call 0x40097b9	      4419	ops.c	FUNCTION_53	WHILE_1	CALL_1
0x40097b9	            0x29c5	                            sub ebp, eax	      4419	ops.c	FUNCTION_53	WHILE_1	CALL_1
0x40097bb	            0x7833	                            js 0x40097f0	      4419	ops.c	FUNCTION_53	WHILE_1	CALL_1
0x40097bd	    0x448b15000000	           mov r10d, dword [0x040097c4] 	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x40097c4	          0x4585d2	                         test r10d, r10d	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x40097c7	            0x7437	                            je 0x4009800	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x40097c9	          0x4889df	                            mov rdi, rbx	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x40097cc	    0xff1500000000	                 call qword [0x040097d2]	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x40097d2	          0x4c63e0	                         movsxd r12, eax	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x40097d5	        0x4183fc01	                             cmp r12d, 1	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x40097d9	            0x7e25	                           jle 0x4009800	      4422	ops.c	FUNCTION_53	WHILE_1	IF_1
0x40097db	          0x4889df	                            mov rdi, rbx	      4424	ops.c	FUNCTION_53	WHILE_1	IF_1	CALL_2
0x40097de	          0x4489e6	                           mov esi, r12d	      4424	ops.c	FUNCTION_53	WHILE_1	IF_1	CALL_2
0x40097e1	          0x4c01e3	                            add rbx, r12	      4425	ops.c	FUNCTION_53	WHILE_1	IF_1
0x40097e4	      0xe800000000	                          call 0x40097e9	      4424	ops.c	FUNCTION_53	WHILE_1	IF_1	CALL_2
0x40097e9	           0xfb603	                   movzx eax, byte [rbx]	      4417	ops.c	FUNCTION_53	WHILE_1
0x40097ec	            0x84c0	                             test al, al	      4417	ops.c	FUNCTION_53	WHILE_1
0x40097ee	            0x75b7	                           jne 0x40097a7	      4417	ops.c	FUNCTION_53	WHILE_1
0x40097f0	      0xe800000000	                          call 0x40097f5	      4431	ops.c	FUNCTION_53	CALL_4
0x40097f5	      0xe9e2faffff	                           jmp 0x40092dc	      4431	ops.c	FUNCTION_53	CALL_4
0x40097fa	    0x660f1f440000	                    nop word [rax + rax]	      4431	ops.c	FUNCTION_53	CALL_4
0x4009800	        0x4c8d6301	                      lea r12, [rbx + 1]	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x4009804	          0x4889df	                            mov rdi, rbx	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x4009807	      0xbe01000000	                              mov esi, 1	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x400980c	      0xe800000000	                          call 0x4009811	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x4009811	          0x4c89e3	                            mov rbx, r12	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x4009814	            0xeb8a	                           jmp 0x40097a0	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x4009816	        0x4c8d6301	                      lea r12, [rbx + 1]	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x400981a	          0x4889df	                            mov rdi, rbx	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x400981d	      0xbe01000000	                              mov esi, 1	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x4009822	      0xe800000000	                          call 0x4009827	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x4009827	          0x4c89e3	                            mov rbx, r12	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x400982a	      0xe978fdffff	                           jmp 0x40095a7	      4429	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x400982f	    0x488b05000000	            mov rax, qword [0x04009836] 	      4357	ops.c	FUNCTION_52	IF_11
0x4009836	    0x4883b8980000	               cmp qword [rax + 0x98], 0	      4357	ops.c	FUNCTION_52	IF_11
0x400983e	     0xf85f1faffff	                           jne 0x4009335	      4357	ops.c	FUNCTION_52	IF_11
0x4009844	      0xe913fdffff	                           jmp 0x400955c	      4357	ops.c	FUNCTION_52	IF_11
0x4009849	     0xf1f80000000	                         nop dword [rax]	      4357	ops.c	FUNCTION_52	IF_11
0x4009850	    0x48833d000000	               cmp qword [0x04009858], 0	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x4009858	     0xf8565fbffff	                           jne 0x40093c3	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x400985e	      0xe982fbffff	                           jmp 0x40093e5	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x4009863	       0xf1f440000	                   nop dword [rax + rax]	      4393	ops.c	FUNCTION_52	IF_15	CALL_39
0x4009868	    0x48833d000000	               cmp qword [0x04009870], 0	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x4009870	     0xf8578faffff	                           jne 0x40092ee	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x4009876	      0xe999faffff	                           jmp 0x4009314	      4347	ops.c	FUNCTION_52	IF_10	CALL_24
0x400987b	            0x31c0	                            xor eax, eax	      4214	ops.c	FUNCTION_51	ELSE_2	IF_3
0x400987d	      0xbb2d000000	                           mov ebx, 0x2d	      4215	ops.c	FUNCTION_51	ELSE_2	IF_3
0x4009882	      0xe916fcffff	                           jmp 0x400949d	      4215	ops.c	FUNCTION_51	ELSE_2	IF_3
0x4009887	    0x4c8b2d000000	            mov r13, qword [0x0400988e] 	      4286	ops.c	FUNCTION_52	FOR_1	IF_3	IF_4
0x400988e	    0x8b3d00000000	            mov edi, dword [0x04009894] 	      4295	ops.c	FUNCTION_52	FOR_1	IF_5	CALL_9
0x4009894	      0xb800000000	                              mov eax, 0	      4289	ops.c	FUNCTION_52	FOR_1	IF_3	ELSE_1
0x4009899	          0x4d85ed	                           test r13, r13	      4289	ops.c	FUNCTION_52	FOR_1	IF_3	ELSE_1
0x400989c	        0x4c0f44e8	                          cmove r13, rax	      4289	ops.c	FUNCTION_52	FOR_1	IF_3	ELSE_1
0x40098a0	      0xe800000000	                          call 0x40098a5	      4295	ops.c	FUNCTION_52	FOR_1	IF_5	CALL_9
0x40098a5	            0x39c3	                            cmp ebx, eax	      4295	ops.c	FUNCTION_52	FOR_1	IF_5	CALL_9
0x40098a7	     0xf8504f9ffff	                           jne 0x40091b1	      4295	ops.c	FUNCTION_52	FOR_1	IF_5	CALL_9
0x40098ad	      0xe9d2f9ffff	                           jmp 0x4009284	      4295	ops.c	FUNCTION_52	FOR_1	IF_5	CALL_9
0x40098b2	            0x31c0	                            xor eax, eax	      4210	ops.c	FUNCTION_51	IF_1
0x40098b4	      0xbb22000000	                           mov ebx, 0x22	      4211	ops.c	FUNCTION_51	IF_1
0x40098b9	      0xe9dffbffff	                           jmp 0x400949d	      4211	ops.c	FUNCTION_51	IF_1
0x40098be	      0xe800000000	                          call 0x40098c3	      4400	ops.c	FUNCTION_52
get_reg_contents	SWITCH,0:DO,0:ELSE,0:functions,0:FOR,3:IF,16:WHILE,0:CALL,18	261
0x400e3f0	            0x4156	                                push r14	      6838	ops.c	FUNCTION_82
0x400e3f2	            0x4155	                                push r13	      6838	ops.c	FUNCTION_82
0x400e3f4	            0x4154	                                push r12	      6838	ops.c	FUNCTION_82
0x400e3f6	              0x55	                                push rbp	      6838	ops.c	FUNCTION_82
0x400e3f7	            0x89f5	                            mov ebp, esi	      6838	ops.c	FUNCTION_82
0x400e3f9	              0x53	                                push rbx	      6838	ops.c	FUNCTION_82
0x400e3fa	        0x4883ec20	                           sub rsp, 0x20	      6838	ops.c	FUNCTION_82
0x400e3fe	    0x64488b042528	                mov rax, qword fs:[0x28]	      6838	ops.c	FUNCTION_82
0x400e407	      0x4889442418	             mov qword [rsp + 0x18], rax	      6838	ops.c	FUNCTION_82
0x400e40c	            0x31c0	                            xor eax, eax	      6838	ops.c	FUNCTION_82
0x400e40e	          0x83ff3d	                           cmp edi, 0x3d	      6845	ops.c	FUNCTION_82	IF_1
0x400e411	     0xf84b1000000	                            je 0x400e4c8	      6845	ops.c	FUNCTION_82	IF_1
0x400e417	          0x83ff40	                           cmp edi, 0x40	      6854	ops.c	FUNCTION_82	IF_4
0x400e41a	            0x89fb	                            mov ebx, edi	      6854	ops.c	FUNCTION_82	IF_4
0x400e41c	     0xf84de000000	                            je 0x400e500	      6854	ops.c	FUNCTION_82	IF_4
0x400e422	          0x83ff00	                              cmp edi, 0	      6858	ops.c	FUNCTION_82	IF_5	CALL_5
0x400e425	     0xf8515020000	                           jne 0x400e640	      6858	ops.c	FUNCTION_82	IF_5	CALL_5
0x400e42b	            0x31db	                            xor ebx, ebx	      6855	ops.c	FUNCTION_82	IF_4
0x400e42d	      0x488d54240c	                    lea rdx, [rsp + 0xc]	      6865	ops.c	FUNCTION_82	IF_6	CALL_7
0x400e432	      0x488d742410	                   lea rsi, [rsp + 0x10]	      6865	ops.c	FUNCTION_82	IF_6	CALL_7
0x400e437	            0x31c9	                            xor ecx, ecx	      6865	ops.c	FUNCTION_82	IF_6	CALL_7
0x400e439	            0x89df	                            mov edi, ebx	      6865	ops.c	FUNCTION_82	IF_6	CALL_7
0x400e43b	      0xe800000000	                          call 0x400e440	      6865	ops.c	FUNCTION_82	IF_6	CALL_7
0x400e440	            0x85c0	                           test eax, eax	      6865	ops.c	FUNCTION_82	IF_6	CALL_7
0x400e442	     0xf84f8000000	                            je 0x400e540	      6865	ops.c	FUNCTION_82	IF_6	CALL_7
0x400e448	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      6867	ops.c	FUNCTION_82	IF_6	IF_7
0x400e44d	          0x4885db	                           test rbx, rbx	      6867	ops.c	FUNCTION_82	IF_6	IF_7
0x400e450	     0xf840a030000	                            je 0x400e760	      6867	ops.c	FUNCTION_82	IF_6	IF_7
0x400e456	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      6869	ops.c	FUNCTION_82	IF_6	IF_8
0x400e45a	            0x85c0	                           test eax, eax	      6869	ops.c	FUNCTION_82	IF_6	IF_8
0x400e45c	     0xf848a000000	                            je 0x400e4ec	      6869	ops.c	FUNCTION_82	IF_6	IF_8
0x400e462	          0x83e504	                              and ebp, 4	      6808	ops.c	FUNCTION_81	IF_1
0x400e465	            0x7529	                           jne 0x400e490	      6808	ops.c	FUNCTION_81	IF_1
0x400e467	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      6935	ops.c	FUNCTION_82
0x400e46c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      6935	ops.c	FUNCTION_82
0x400e475	          0x4889d8	                            mov rax, rbx	      6935	ops.c	FUNCTION_82
0x400e478	     0xf8594030000	                           jne 0x400e812	      6935	ops.c	FUNCTION_82
0x400e47e	        0x4883c420	                           add rsp, 0x20	      6935	ops.c	FUNCTION_82
0x400e482	              0x5b	                                 pop rbx	      6935	ops.c	FUNCTION_82
0x400e483	              0x5d	                                 pop rbp	      6935	ops.c	FUNCTION_82
0x400e484	            0x415c	                                 pop r12	      6935	ops.c	FUNCTION_82
0x400e486	            0x415d	                                 pop r13	      6935	ops.c	FUNCTION_82
0x400e488	            0x415e	                                 pop r14	      6935	ops.c	FUNCTION_82
0x400e48a	              0xc3	                                     ret	      6935	ops.c	FUNCTION_82
0x400e48b	       0xf1f440000	                   nop dword [rax + rax]	      6935	ops.c	FUNCTION_82
0x400e490	      0xe800000000	                          call 0x400e495	      6810	ops.c	FUNCTION_81	IF_1	CALL_1
0x400e495	          0x4885c0	                           test rax, rax	      6812	ops.c	FUNCTION_81	IF_1	IF_2
0x400e498	          0x4889c5	                            mov rbp, rax	      6810	ops.c	FUNCTION_81	IF_1	CALL_1
0x400e49b	     0xf84bf020000	                            je 0x400e760	      6812	ops.c	FUNCTION_81	IF_1	IF_2
0x400e4a1	            0x31f6	                            xor esi, esi	      6814	ops.c	FUNCTION_81	IF_1	IF_2	IF_3	CALL_2
0x400e4a3	      0xbaffffffff	                     mov edx, 0xffffffff	      6814	ops.c	FUNCTION_81	IF_1	IF_2	IF_3	CALL_2
0x400e4a8	          0x4889c7	                            mov rdi, rax	      6814	ops.c	FUNCTION_81	IF_1	IF_2	IF_3	CALL_2
0x400e4ab	      0xe800000000	                          call 0x400e4b0	      6814	ops.c	FUNCTION_81	IF_1	IF_2	IF_3	CALL_2
0x400e4b0	            0x85c0	                           test eax, eax	      6814	ops.c	FUNCTION_81	IF_1	IF_2	IF_3	CALL_2
0x400e4b2	     0xf8444030000	                            je 0x400e7fc	      6814	ops.c	FUNCTION_81	IF_1	IF_2	IF_3	CALL_2
0x400e4b8	        0x488b4500	                    mov rax, qword [rbp]	      6819	ops.c	FUNCTION_81	IF_1	IF_2
0x400e4bc	        0x48895818	             mov qword [rax + 0x18], rbx	      6819	ops.c	FUNCTION_81	IF_1	IF_2
0x400e4c0	          0x4889eb	                            mov rbx, rbp	      6819	ops.c	FUNCTION_81	IF_1	IF_2
0x400e4c3	            0xeba2	                           jmp 0x400e467	      6819	ops.c	FUNCTION_81	IF_1	IF_2
0x400e4c5	           0xf1f00	                         nop dword [rax]	      6819	ops.c	FUNCTION_81	IF_1	IF_2
0x400e4c8	        0x40f6c601	                             test sil, 1	      6847	ops.c	FUNCTION_82	IF_1	IF_2
0x400e4cc	     0xf858e020000	                           jne 0x400e760	      6847	ops.c	FUNCTION_82	IF_1	IF_2
0x400e4d2	        0x40f6c602	                             test sil, 2	      6849	ops.c	FUNCTION_82	IF_1	IF_3
0x400e4d6	     0xf84ac010000	                            je 0x400e688	      6849	ops.c	FUNCTION_82	IF_1	IF_3
0x400e4dc	    0x488b1d000000	            mov rbx, qword [0x0400e4e3] 	       856	ops.c	FUNCTION_13	IF_1
0x400e4e3	          0x4885db	                           test rbx, rbx	       856	ops.c	FUNCTION_13	IF_1
0x400e4e6	     0xf8476ffffff	                            je 0x400e462	       856	ops.c	FUNCTION_13	IF_1
0x400e4ec	          0x4889df	                            mov rdi, rbx	      6871	ops.c	FUNCTION_82	IF_6	CALL_10
0x400e4ef	      0xe800000000	                          call 0x400e4f4	      6871	ops.c	FUNCTION_82	IF_6	CALL_10
0x400e4f4	          0x4889c3	                            mov rbx, rax	      6871	ops.c	FUNCTION_82	IF_6	CALL_10
0x400e4f7	      0xe966ffffff	                           jmp 0x400e462	      6871	ops.c	FUNCTION_82	IF_6	CALL_10
0x400e4fc	         0xf1f4000	                         nop dword [rax]	      6871	ops.c	FUNCTION_82	IF_6	CALL_10
0x400e500	      0xbb22000000	                           mov ebx, 0x22	      6855	ops.c	FUNCTION_82	IF_4
0x400e505	            0x89de	                            mov esi, ebx	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x400e507	      0xbf00000000	                              mov edi, 0	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x400e50c	      0xe800000000	                          call 0x400e511	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x400e511	          0x4885c0	                           test rax, rax	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x400e514	     0xf847e020000	                            je 0x400e798	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x400e51a	          0x83fb2a	                           cmp ebx, 0x2a	       964	ops.c	FUNCTION_16	IF_1
0x400e51d	     0xf8538010000	                           jne 0x400e65b	       964	ops.c	FUNCTION_16	IF_1
0x400e523	    0x8b0d00000000	            mov ecx, dword [0x0400e529] 	       966	ops.c	FUNCTION_16	IF_1	IF_2
0x400e529	            0x85c9	                           test ecx, ecx	       966	ops.c	FUNCTION_16	IF_1	IF_2
0x400e52b	     0xf84fafeffff	                            je 0x400e42b	       966	ops.c	FUNCTION_16	IF_1	IF_2
0x400e531	      0xbf00000000	                              mov edi, 0	       969	ops.c	FUNCTION_16	IF_1	CALL_1
0x400e536	      0xe800000000	                          call 0x400e53b	       969	ops.c	FUNCTION_16	IF_1	CALL_1
0x400e53b	      0xe9edfeffff	                           jmp 0x400e42d	       969	ops.c	FUNCTION_16	IF_1	CALL_1
0x400e540	            0x89df	                            mov edi, ebx	      6874	ops.c	FUNCTION_82	CALL_11
0x400e542	      0xe85936ffff	 call sym.get_yank_register.constprop.17	      6874	ops.c	FUNCTION_82	CALL_11
0x400e547	    0x488b05000000	            mov rax, qword [0x0400e54e] 	      6875	ops.c	FUNCTION_82	IF_9
0x400e54e	          0x4c8b20	                    mov r12, qword [rax]	      6875	ops.c	FUNCTION_82	IF_9
0x400e551	          0x4d85e4	                           test r12, r12	      6875	ops.c	FUNCTION_82	IF_9
0x400e554	     0xf8406020000	                            je 0x400e760	      6875	ops.c	FUNCTION_82	IF_9
0x400e55a	          0x83e504	                              and ebp, 4	      6878	ops.c	FUNCTION_82	IF_10
0x400e55d	     0xf858d010000	                           jne 0x400e6f0	      6878	ops.c	FUNCTION_82	IF_10
0x400e563	        0x4c8b6808	                mov r13, qword [rax + 8]	      6900	ops.c	FUNCTION_82	FOR_2
0x400e567	      0xbf01000000	                              mov edi, 1	      6900	ops.c	FUNCTION_82	FOR_2
0x400e56c	          0x4d85ed	                           test r13, r13	      6900	ops.c	FUNCTION_82	FOR_2
0x400e56f	            0x7e3b	                           jle 0x400e5ac	      6900	ops.c	FUNCTION_82	FOR_2
0x400e571	        0x80781001	                cmp byte [rax + 0x10], 1	      6900	ops.c	FUNCTION_82	FOR_2
0x400e575	     0xf8455020000	                            je 0x400e7d0	      6900	ops.c	FUNCTION_82	FOR_2
0x400e57b	        0x4d8d75ff	                      lea r14, [r13 - 1]	      6900	ops.c	FUNCTION_82	FOR_2
0x400e57f	            0x31db	                            xor ebx, ebx	      6900	ops.c	FUNCTION_82	FOR_2
0x400e581	            0x31ed	                            xor ebp, ebp	      6900	ops.c	FUNCTION_82	FOR_2
0x400e583	       0xf1f440000	                   nop dword [rax + rax]	      6900	ops.c	FUNCTION_82	FOR_2
0x400e588	        0x498b3cec	            mov rdi, qword [r12 + rbp*8]	      6902	ops.c	FUNCTION_82	FOR_2	CALL_15
0x400e58c	      0xe800000000	                          call 0x400e591	      6902	ops.c	FUNCTION_82	FOR_2	CALL_15
0x400e591	          0x4801c3	                            add rbx, rax	      6902	ops.c	FUNCTION_82	FOR_2	CALL_15
0x400e594	            0x31c0	                            xor eax, eax	      6908	ops.c	FUNCTION_82	FOR_2	IF_14
0x400e596	          0x4939ee	                            cmp r14, rbp	      6908	ops.c	FUNCTION_82	FOR_2	IF_14
0x400e599	           0xf9fc0	                                 setg al	      6908	ops.c	FUNCTION_82	FOR_2	IF_14
0x400e59c	        0x4883c501	                              add rbp, 1	      6900	ops.c	FUNCTION_82	FOR_2
0x400e5a0	          0x4801c3	                            add rbx, rax	      6908	ops.c	FUNCTION_82	FOR_2	IF_14
0x400e5a3	          0x4c39ed	                            cmp rbp, r13	      6900	ops.c	FUNCTION_82	FOR_2
0x400e5a6	            0x75e0	                           jne 0x400e588	      6900	ops.c	FUNCTION_82	FOR_2
0x400e5a8	        0x488d7b01	                      lea rdi, [rbx + 1]	      6900	ops.c	FUNCTION_82	FOR_2
0x400e5ac	      0xbe01000000	                              mov esi, 1	      6911	ops.c	FUNCTION_82	CALL_16
0x400e5b1	      0xe800000000	                          call 0x400e5b6	      6911	ops.c	FUNCTION_82	CALL_16
0x400e5b6	          0x4885c0	                           test rax, rax	      6916	ops.c	FUNCTION_82	IF_15
0x400e5b9	          0x4889c3	                            mov rbx, rax	      6911	ops.c	FUNCTION_82	CALL_16
0x400e5bc	      0x4889442410	             mov qword [rsp + 0x10], rax	      6911	ops.c	FUNCTION_82	CALL_16
0x400e5c1	     0xf84a0feffff	                            je 0x400e467	      6916	ops.c	FUNCTION_82	IF_15
0x400e5c7	    0x4c8b2d000000	            mov r13, qword [0x0400e5ce] 	      6919	ops.c	FUNCTION_82	IF_15	FOR_3
0x400e5ce	            0x31ed	                            xor ebp, ebp	      6919	ops.c	FUNCTION_82	IF_15	FOR_3
0x400e5d0	      0x49837d0800	                  cmp qword [r13 + 8], 0	      6919	ops.c	FUNCTION_82	IF_15	FOR_3
0x400e5d5	            0x7e59	                           jle 0x400e630	      6919	ops.c	FUNCTION_82	IF_15	FOR_3
0x400e5d7	          0x4531e4	                          xor r12d, r12d	      6919	ops.c	FUNCTION_82	IF_15	FOR_3
0x400e5da	    0x660f1f440000	                    nop word [rax + rax]	      6919	ops.c	FUNCTION_82	IF_15	FOR_3
0x400e5e0	        0x498b4500	                    mov rax, qword [r13]	      6921	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_17
0x400e5e4	        0x488d3c2b	                    lea rdi, [rbx + rbp]	       110	string3.h	FUNCTION_98	CALL_3
0x400e5e8	        0x4a8b34e0	            mov rsi, qword [rax + r12*8]	       110	string3.h	FUNCTION_98	CALL_3
0x400e5ec	      0xe800000000	                          call 0x400e5f1	       110	string3.h	FUNCTION_98	CALL_3
0x400e5f1	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      6922	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_18
0x400e5f6	        0x488d3c2b	                    lea rdi, [rbx + rbp]	      6922	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_18
0x400e5fa	      0xe800000000	                          call 0x400e5ff	      6922	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_18
0x400e5ff	          0x4801c5	                            add rbp, rax	      6922	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_18
0x400e602	      0x41807d1001	                cmp byte [r13 + 0x10], 1	      6928	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0x400e607	            0x740d	                            je 0x400e616	      6928	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0x400e609	        0x498b4508	                mov rax, qword [r13 + 8]	      6928	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0x400e60d	        0x488d50ff	                      lea rdx, [rax - 1]	      6928	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0x400e611	          0x4c39e2	                            cmp rdx, r12	      6928	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0x400e614	            0x7e11	                           jle 0x400e627	      6928	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0x400e616	        0xc6042b0a	               mov byte [rbx + rbp], 0xa	      6929	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0x400e61a	        0x498b4508	                mov rax, qword [r13 + 8]	      6929	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0x400e61e	        0x4883c501	                              add rbp, 1	      6929	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0x400e622	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      6929	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0x400e627	        0x4983c401	                              add r12, 1	      6919	ops.c	FUNCTION_82	IF_15	FOR_3
0x400e62b	          0x4939c4	                            cmp r12, rax	      6919	ops.c	FUNCTION_82	IF_15	FOR_3
0x400e62e	            0x7cb0	                            jl 0x400e5e0	      6919	ops.c	FUNCTION_82	IF_15	FOR_3
0x400e630	        0xc6042b00	                 mov byte [rbx + rbp], 0	      6931	ops.c	FUNCTION_82	IF_15
0x400e634	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      6931	ops.c	FUNCTION_82	IF_15
0x400e639	      0xe929feffff	                           jmp 0x400e467	      6934	ops.c	FUNCTION_82
0x400e63e	            0x6690	                                     nop	      6934	ops.c	FUNCTION_82
0x400e640	     0xf8f2a010000	                            jg 0x400e770	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x400e646	            0x89fe	                            mov esi, edi	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x400e648	      0xbf00000000	                              mov edi, 0	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x400e64d	      0xe800000000	                          call 0x400e652	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x400e652	          0x4885c0	                           test rax, rax	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x400e655	     0xf843d010000	                            je 0x400e798	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x400e65b	          0x83fb2b	                           cmp ebx, 0x2b	       971	ops.c	FUNCTION_16	ELSE_2	IF_3
0x400e65e	     0xf85c9fdffff	                           jne 0x400e42d	       971	ops.c	FUNCTION_16	ELSE_2	IF_3
0x400e664	    0x8b1500000000	            mov edx, dword [0x0400e66a] 	       973	ops.c	FUNCTION_16	ELSE_2	IF_3	IF_4
0x400e66a	            0x85d2	                           test edx, edx	       973	ops.c	FUNCTION_16	ELSE_2	IF_3	IF_4
0x400e66c	     0xf84b9fdffff	                            je 0x400e42b	       973	ops.c	FUNCTION_16	ELSE_2	IF_3	IF_4
0x400e672	      0xbf00000000	                              mov edi, 0	       976	ops.c	FUNCTION_16	ELSE_2	IF_3	CALL_2
0x400e677	      0xe800000000	                          call 0x400e67c	       976	ops.c	FUNCTION_16	ELSE_2	IF_3	CALL_2
0x400e67c	      0xe9acfdffff	                           jmp 0x400e42d	       976	ops.c	FUNCTION_16	ELSE_2	IF_3	CALL_2
0x400e681	     0xf1f80000000	                         nop dword [rax]	       976	ops.c	FUNCTION_16	ELSE_2	IF_3	CALL_2
0x400e688	    0x488b3d000000	            mov rdi, qword [0x0400e68f] 	       829	ops.c	FUNCTION_12	IF_1
0x400e68f	          0x4885ff	                           test rdi, rdi	       829	ops.c	FUNCTION_12	IF_1
0x400e692	     0xf8473010000	                            je 0x400e80b	       829	ops.c	FUNCTION_12	IF_1
0x400e698	      0xe800000000	                          call 0x400e69d	       834	ops.c	FUNCTION_12	CALL_1
0x400e69d	          0x4885c0	                           test rax, rax	       835	ops.c	FUNCTION_12	IF_2
0x400e6a0	     0xf8465010000	                            je 0x400e80b	       835	ops.c	FUNCTION_12	IF_2
0x400e6a6	    0x8b1500000000	            mov edx, dword [0x0400e6ac] 	       840	ops.c	FUNCTION_12	IF_3
0x400e6ac	          0x4889c3	                            mov rbx, rax	       840	ops.c	FUNCTION_12	IF_3
0x400e6af	          0x83fa09	                              cmp edx, 9	       840	ops.c	FUNCTION_12	IF_3
0x400e6b2	     0xf8faafdffff	                            jg 0x400e462	       840	ops.c	FUNCTION_12	IF_3
0x400e6b8	          0x83c201	                              add edx, 1	       843	ops.c	FUNCTION_12
0x400e6bb	            0x31f6	                            xor esi, esi	       844	ops.c	FUNCTION_12	CALL_2
0x400e6bd	          0x4889c7	                            mov rdi, rax	       844	ops.c	FUNCTION_12	CALL_2
0x400e6c0	    0x891500000000	            mov dword [0x0400e6c6], edx 	       843	ops.c	FUNCTION_12
0x400e6c6	      0xba01000000	                              mov edx, 1	       844	ops.c	FUNCTION_12	CALL_2
0x400e6cb	      0xe800000000	                          call 0x400e6d0	       844	ops.c	FUNCTION_12	CALL_2
0x400e6d0	          0x4889df	                            mov rdi, rbx	       846	ops.c	FUNCTION_12	CALL_3
0x400e6d3	          0x4989c4	                            mov r12, rax	       844	ops.c	FUNCTION_12	CALL_2
0x400e6d6	    0x832d00000000	               sub dword [0x0400e6dd], 1	       845	ops.c	FUNCTION_12
0x400e6dd	          0x4c89e3	                            mov rbx, r12	       847	ops.c	FUNCTION_12
0x400e6e0	      0xe800000000	                          call 0x400e6e5	       846	ops.c	FUNCTION_12	CALL_3
0x400e6e5	      0xe978fdffff	                           jmp 0x400e462	       846	ops.c	FUNCTION_12	CALL_3
0x400e6ea	    0x660f1f440000	                    nop word [rax + rax]	       846	ops.c	FUNCTION_12	CALL_3
0x400e6f0	      0xe800000000	                          call 0x400e6f5	      6880	ops.c	FUNCTION_82	IF_10	CALL_12
0x400e6f5	          0x4885c0	                           test rax, rax	      6883	ops.c	FUNCTION_82	IF_10	IF_11
0x400e6f8	          0x4889c3	                            mov rbx, rax	      6880	ops.c	FUNCTION_82	IF_10	CALL_12
0x400e6fb	            0x7463	                            je 0x400e760	      6883	ops.c	FUNCTION_82	IF_10	IF_11
0x400e6fd	    0x488b05000000	            mov rax, qword [0x0400e704] 	      6885	ops.c	FUNCTION_82	IF_10	FOR_1
0x400e704	      0x4883780800	                  cmp qword [rax + 8], 0	      6885	ops.c	FUNCTION_82	IF_10	FOR_1
0x400e709	     0xf8e58fdffff	                           jle 0x400e467	      6885	ops.c	FUNCTION_82	IF_10	FOR_1
0x400e70f	          0x4531e4	                          xor r12d, r12d	      6885	ops.c	FUNCTION_82	IF_10	FOR_1
0x400e712	            0x31ed	                            xor ebp, ebp	      6885	ops.c	FUNCTION_82	IF_10	FOR_1
0x400e714	    0x41bd01000000	                             mov r13d, 1	      6887	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12
0x400e71a	    0x660f1f440000	                    nop word [rax + rax]	      6887	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12
0x400e720	          0x488b00	                    mov rax, qword [rax]	      6886	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12	CALL_13
0x400e723	      0xbaffffffff	                     mov edx, 0xffffffff	      6886	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12	CALL_13
0x400e728	          0x4889df	                            mov rdi, rbx	      6886	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12	CALL_13
0x400e72b	        0x488b34e8	            mov rsi, qword [rax + rbp*8]	      6886	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12	CALL_13
0x400e72f	      0xe800000000	                          call 0x400e734	      6886	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12	CALL_13
0x400e734	            0x85c0	                           test eax, eax	      6887	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12
0x400e736	    0x488b05000000	            mov rax, qword [0x0400e73d] 	      6885	ops.c	FUNCTION_82	IF_10	FOR_1
0x400e73d	        0x450f44e5	                        cmove r12d, r13d	      6887	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12
0x400e741	        0x4883c501	                              add rbp, 1	      6885	ops.c	FUNCTION_82	IF_10	FOR_1
0x400e745	        0x48396808	                cmp qword [rax + 8], rbp	      6885	ops.c	FUNCTION_82	IF_10	FOR_1
0x400e749	            0x7fd5	                            jg 0x400e720	      6885	ops.c	FUNCTION_82	IF_10	FOR_1
0x400e74b	          0x4585e4	                         test r12d, r12d	      6888	ops.c	FUNCTION_82	IF_10	IF_13
0x400e74e	     0xf8413fdffff	                            je 0x400e467	      6888	ops.c	FUNCTION_82	IF_10	IF_13
0x400e754	          0x4889df	                            mov rdi, rbx	      6890	ops.c	FUNCTION_82	IF_10	IF_13	CALL_14
0x400e757	      0xe800000000	                          call 0x400e75c	      6890	ops.c	FUNCTION_82	IF_10	IF_13	CALL_14
0x400e75c	         0xf1f4000	                         nop dword [rax]	      6890	ops.c	FUNCTION_82	IF_10	IF_13	CALL_14
0x400e760	            0x31db	                            xor ebx, ebx	      6891	ops.c	FUNCTION_82	IF_10	IF_13
0x400e762	      0xe900fdffff	                           jmp 0x400e467	      6891	ops.c	FUNCTION_82	IF_10	IF_13
0x400e767	    0x660f1f840000	                    nop word [rax + rax]	      6891	ops.c	FUNCTION_82	IF_10	IF_13
0x400e770	            0x89f8	                            mov eax, edi	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x400e772	          0x83e0df	                     and eax, 0xffffffdf	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x400e775	          0x83e841	                           sub eax, 0x41	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x400e778	          0x83f819	                           cmp eax, 0x19	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x400e77b	     0xf8699fdffff	                           jbe 0x400e51a	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x400e781	          0x8d47d0	                   lea eax, [rdi - 0x30]	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x400e784	          0x83f809	                              cmp eax, 9	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x400e787	     0xf868dfdffff	                           jbe 0x400e51a	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x400e78d	      0xe973fdffff	                           jmp 0x400e505	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x400e792	    0x660f1f440000	                    nop word [rax + rax]	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x400e798	          0x8d43de	                   lea eax, [rbx - 0x22]	       880	ops.c	FUNCTION_14	IF_1
0x400e79b	          0x83f83d	                           cmp eax, 0x3d	       880	ops.c	FUNCTION_14	IF_1
0x400e79e	            0x7610	                           jbe 0x400e7b0	       880	ops.c	FUNCTION_14	IF_1
0x400e7a0	          0x83fb7e	                           cmp ebx, 0x7e	       888	ops.c	FUNCTION_14	IF_1
0x400e7a3	     0xf8484fcffff	                            je 0x400e42d	       888	ops.c	FUNCTION_14	IF_1
0x400e7a9	            0x31db	                            xor ebx, ebx	      6891	ops.c	FUNCTION_82	IF_10	IF_13
0x400e7ab	      0xe9b7fcffff	                           jmp 0x400e467	      6891	ops.c	FUNCTION_82	IF_10	IF_13
0x400e7b0	    0x48ba030b0000	         movabs rdx, 0x2000000000000b03 	       880	ops.c	FUNCTION_14	IF_1
0x400e7ba	        0x480fa3c2	                             bt rdx, rax	       880	ops.c	FUNCTION_14	IF_1
0x400e7be	     0xf8256fdffff	                            jb 0x400e51a	       880	ops.c	FUNCTION_14	IF_1
0x400e7c4	            0x31db	                            xor ebx, ebx	      6891	ops.c	FUNCTION_82	IF_10	IF_13
0x400e7c6	      0xe99cfcffff	                           jmp 0x400e467	      6891	ops.c	FUNCTION_82	IF_10	IF_13
0x400e7cb	       0xf1f440000	                   nop dword [rax + rax]	      6891	ops.c	FUNCTION_82	IF_10	IF_13
0x400e7d0	          0x4c89e5	                            mov rbp, r12	      6891	ops.c	FUNCTION_82	IF_10	IF_13
0x400e7d3	        0x4f8d24ec	                  lea r12, [r12 + r13*8]	      6891	ops.c	FUNCTION_82	IF_10	IF_13
0x400e7d7	            0x31db	                            xor ebx, ebx	      6900	ops.c	FUNCTION_82	FOR_2
0x400e7d9	     0xf1f80000000	                         nop dword [rax]	      6900	ops.c	FUNCTION_82	FOR_2
0x400e7e0	        0x488b7d00	                    mov rdi, qword [rbp]	      6902	ops.c	FUNCTION_82	FOR_2	CALL_15
0x400e7e4	        0x4883c508	                              add rbp, 8	      6902	ops.c	FUNCTION_82	FOR_2	CALL_15
0x400e7e8	      0xe800000000	                          call 0x400e7ed	      6902	ops.c	FUNCTION_82	FOR_2	CALL_15
0x400e7ed	          0x4939ec	                            cmp r12, rbp	      6900	ops.c	FUNCTION_82	FOR_2
0x400e7f0	      0x488d5c0301	                lea rbx, [rbx + rax + 1]	      6908	ops.c	FUNCTION_82	FOR_2	IF_14
0x400e7f5	            0x75e9	                           jne 0x400e7e0	      6900	ops.c	FUNCTION_82	FOR_2
0x400e7f7	      0xe9acfdffff	                           jmp 0x400e5a8	      6900	ops.c	FUNCTION_82	FOR_2
0x400e7fc	          0x4889ef	                            mov rdi, rbp	      6816	ops.c	FUNCTION_81	IF_1	IF_2	IF_3	CALL_3
0x400e7ff	            0x31db	                            xor ebx, ebx	      6817	ops.c	FUNCTION_81	IF_1	IF_2	IF_3
0x400e801	      0xe800000000	                          call 0x400e806	      6816	ops.c	FUNCTION_81	IF_1	IF_2	IF_3	CALL_3
0x400e806	      0xe95cfcffff	                           jmp 0x400e467	      6816	ops.c	FUNCTION_81	IF_1	IF_2	IF_3	CALL_3
0x400e80b	            0x31db	                            xor ebx, ebx	       830	ops.c	FUNCTION_12	IF_1
0x400e80d	      0xe950fcffff	                           jmp 0x400e462	       830	ops.c	FUNCTION_12	IF_1
0x400e812	      0xe800000000	                          call 0x400e817	      6935	ops.c	FUNCTION_82
op_insert	SWITCH,0:DO,0:ELSE,3:functions,0:FOR,1:IF,25:WHILE,1:CALL,28	517
0x4005280	            0x4157	                                push r15	      2611	ops.c	FUNCTION_39
0x4005282	            0x4156	                                push r14	      2611	ops.c	FUNCTION_39
0x4005284	            0x31d2	                            xor edx, edx	      2620	ops.c	FUNCTION_39
0x4005286	            0x4155	                                push r13	      2611	ops.c	FUNCTION_39
0x4005288	            0x4154	                                push r12	      2611	ops.c	FUNCTION_39
0x400528a	              0x55	                                push rbp	      2611	ops.c	FUNCTION_39
0x400528b	              0x53	                                push rbx	      2611	ops.c	FUNCTION_39
0x400528c	          0x4889fb	                            mov rbx, rdi	      2611	ops.c	FUNCTION_39
0x400528f	          0x4889f5	                            mov rbp, rsi	      2611	ops.c	FUNCTION_39
0x4005292	    0x4881ecd80000	                           sub rsp, 0xd8	      2611	ops.c	FUNCTION_39
0x4005299	    0x64488b042528	                mov rax, qword fs:[0x28]	      2611	ops.c	FUNCTION_39
0x40052a2	    0x48898424c800	             mov qword [rsp + 0xc8], rax	      2611	ops.c	FUNCTION_39
0x40052aa	            0x31c0	                            xor eax, eax	      2611	ops.c	FUNCTION_39
0x40052ac	    0x488b05000000	            mov rax, qword [0x040052b3] 	      2620	ops.c	FUNCTION_39
0x40052b3	    0x817848ffffff	     cmp dword [rax + 0x48], 0x7fffffff 	      2620	ops.c	FUNCTION_39
0x40052ba	           0xf94c2	                                 sete dl	      2620	ops.c	FUNCTION_39
0x40052bd	        0x89542468	             mov dword [rsp + 0x68], edx	      2620	ops.c	FUNCTION_39
0x40052c1	        0x488b5720	            mov rdx, qword [rdi + 0x20] 	      2623	ops.c	FUNCTION_39
0x40052c5	      0xbf14000000	                           mov edi, 0x14	      2624	ops.c	FUNCTION_39	CALL_1
0x40052ca	        0x48895038	             mov qword [rax + 0x38], rdx	      2623	ops.c	FUNCTION_39
0x40052ce	      0xe800000000	                          call 0x40052d3	      2624	ops.c	FUNCTION_39	CALL_1
0x40052d3	          0x8b7b60	            mov edi, dword [rbx + 0x60] 	      2626	ops.c	FUNCTION_39	IF_1
0x40052d6	            0x85ff	                           test edi, edi	      2626	ops.c	FUNCTION_39	IF_1
0x40052d8	     0xf8402010000	                            je 0x40053e0	      2626	ops.c	FUNCTION_39	IF_1
0x40052de	    0x488b05000000	            mov rax, qword [0x040052e5] 	      2633	ops.c	FUNCTION_39	IF_1	IF_2
0x40052e5	          0x8b7044	            mov esi, dword [rax + 0x44] 	      2633	ops.c	FUNCTION_39	IF_1	IF_2
0x40052e8	            0x85f6	                           test esi, esi	      2633	ops.c	FUNCTION_39	IF_1	IF_2
0x40052ea	            0x7e42	                           jle 0x400532e	      2633	ops.c	FUNCTION_39	IF_1	IF_2
0x40052ec	    0x448b25000000	           mov r12d, dword [0x040052f3] 	      2635	ops.c	FUNCTION_39	IF_1	IF_2
0x40052f3	    0xc70500000000	               mov dword [0x040052fd], 4	      2637	ops.c	FUNCTION_39	IF_1	IF_2
0x40052fd	      0xe800000000	                          call 0x4005302	      2638	ops.c	FUNCTION_39	IF_1	IF_2	IF_3	CALL_2
0x4005302	            0x85c0	                           test eax, eax	      2638	ops.c	FUNCTION_39	IF_1	IF_2	IF_3	CALL_2
0x4005304	     0xf84ac000000	                            je 0x40053b6	      2638	ops.c	FUNCTION_39	IF_1	IF_2	IF_3	CALL_2
0x400530a	          0x833b12	                   cmp dword [rbx], 0x12	      2640	ops.c	FUNCTION_39	IF_1	IF_2	CALL_3
0x400530d	     0xf8525030000	                           jne 0x4005638	      2640	ops.c	FUNCTION_39	IF_1	IF_2	CALL_3
0x4005313	          0x8b4368	            mov eax, dword [rbx + 0x68] 	      2640	ops.c	FUNCTION_39	IF_1	IF_2	CALL_3
0x4005316	          0x8d7801	                      lea edi, [rax + 1]	      2640	ops.c	FUNCTION_39	IF_1	IF_2	CALL_3
0x4005319	      0xe800000000	                          call 0x400531e	      2640	ops.c	FUNCTION_39	IF_1	IF_2	CALL_3
0x400531e	          0x833b12	                   cmp dword [rbx], 0x12	      2642	ops.c	FUNCTION_39	IF_1	IF_2	IF_4
0x4005321	     0xf8459030000	                            je 0x4005680	      2642	ops.c	FUNCTION_39	IF_1	IF_2	IF_4
0x4005327	    0x448925000000	           mov dword [0x0400532e], r12d 	      2644	ops.c	FUNCTION_39	IF_1	IF_2
0x400532e	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      2648	ops.c	FUNCTION_39	IF_1	CALL_5
0x4005332	      0x4c8d742440	                   lea r14, [rsp + 0x40]	      2648	ops.c	FUNCTION_39	IF_1	CALL_5
0x4005337	      0xb901000000	                              mov ecx, 1	      2648	ops.c	FUNCTION_39	IF_1	CALL_5
0x400533c	          0x4889df	                            mov rdi, rbx	      2648	ops.c	FUNCTION_39	IF_1	CALL_5
0x400533f	          0x4c89f6	                            mov rsi, r14	      2648	ops.c	FUNCTION_39	IF_1	CALL_5
0x4005342	      0xe8f9acffff	                     call sym.block_prep	      2648	ops.c	FUNCTION_39	IF_1	CALL_5
0x4005347	      0xe800000000	                          call 0x400534c	      2650	ops.c	FUNCTION_39	IF_1	CALL_6
0x400534c	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      2651	ops.c	FUNCTION_39	IF_1	CALL_7
0x4005350	          0x4189c5	                           mov r13d, eax	      2650	ops.c	FUNCTION_39	IF_1	CALL_6
0x4005353	      0xe800000000	                          call 0x4005358	      2651	ops.c	FUNCTION_39	IF_1	CALL_7
0x4005358	      0x4863542458	         movsxd rdx, dword [rsp + 0x58] 	      2651	ops.c	FUNCTION_39	IF_1	CALL_7
0x400535d	          0x833b12	                   cmp dword [rbx], 0x12	      2653	ops.c	FUNCTION_39	IF_1	IF_5
0x4005360	        0x488d3c10	                    lea rdi, [rax + rdx]	      2651	ops.c	FUNCTION_39	IF_1	CALL_7
0x4005364	     0xf84d6000000	                            je 0x4005440	      2653	ops.c	FUNCTION_39	IF_1	IF_5
0x400536a	      0xe800000000	                          call 0x400536f	      2655	ops.c	FUNCTION_39	IF_1	CALL_8
0x400536f	          0x4989c4	                            mov r12, rax	      2655	ops.c	FUNCTION_39	IF_1	CALL_8
0x4005372	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	      2694	ops.c	FUNCTION_39
0x4005375	            0x31f6	                            xor esi, esi	      2695	ops.c	FUNCTION_39	CALL_15
0x4005377	            0x31ff	                            xor edi, edi	      2695	ops.c	FUNCTION_39	CALL_15
0x4005379	          0x4889ea	                            mov rdx, rbp	      2695	ops.c	FUNCTION_39	CALL_15
0x400537c	        0x4c8b7b20	            mov r15, qword [rbx + 0x20] 	      2694	ops.c	FUNCTION_39
0x4005380	        0x448b7328	           mov r14d, dword [rbx + 0x28] 	      2694	ops.c	FUNCTION_39
0x4005384	        0x89442404	                mov dword [rsp + 4], eax	      2694	ops.c	FUNCTION_39
0x4005388	      0xe800000000	                          call 0x400538d	      2695	ops.c	FUNCTION_39	CALL_15
0x400538d	    0x488b05000000	            mov rax, qword [0x04005394] 	      2700	ops.c	FUNCTION_39	IF_11
0x4005394	    0x4c39b8f01100	          cmp qword [rax + 0x11f0], r15 	      2700	ops.c	FUNCTION_39	IF_11
0x400539b	     0xf84a7020000	                            je 0x4005648	      2700	ops.c	FUNCTION_39	IF_11
0x40053a1	    0x488b05000000	            mov rax, qword [0x040053a8] 	      2707	ops.c	FUNCTION_39	IF_12
0x40053a8	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	      2707	ops.c	FUNCTION_39	IF_12
0x40053ac	        0x48397038	            cmp qword [rax + 0x38], rsi 	      2707	ops.c	FUNCTION_39	IF_12
0x40053b0	     0xf843a010000	                            je 0x40054f0	      2707	ops.c	FUNCTION_39	IF_12
0x40053b6	    0x488b8424c800	            mov rax, qword [rsp + 0xc8] 	      2821	ops.c	FUNCTION_39
0x40053be	    0x644833042528	                xor rax, qword fs:[0x28]	      2821	ops.c	FUNCTION_39
0x40053c7	     0xf8510070000	                           jne 0x4005add	      2821	ops.c	FUNCTION_39
0x40053cd	    0x4881c4d80000	                           add rsp, 0xd8	      2821	ops.c	FUNCTION_39
0x40053d4	              0x5b	                                 pop rbx	      2821	ops.c	FUNCTION_39
0x40053d5	              0x5d	                                 pop rbp	      2821	ops.c	FUNCTION_39
0x40053d6	            0x415c	                                 pop r12	      2821	ops.c	FUNCTION_39
0x40053d8	            0x415d	                                 pop r13	      2821	ops.c	FUNCTION_39
0x40053da	            0x415e	                                 pop r14	      2821	ops.c	FUNCTION_39
0x40053dc	            0x415f	                                 pop r15	      2821	ops.c	FUNCTION_39
0x40053de	              0xc3	                                     ret	      2821	ops.c	FUNCTION_39
0x40053df	              0x90	                                     nop	      2821	ops.c	FUNCTION_39
0x40053e0	          0x4531ed	                          xor r13d, r13d	      2614	ops.c	FUNCTION_39
0x40053e3	          0x4531e4	                          xor r12d, r12d	      2612	ops.c	FUNCTION_39
0x40053e6	          0x833b12	                   cmp dword [rbx], 0x12	      2658	ops.c	FUNCTION_39	IF_6
0x40053e9	    0x488b05000000	            mov rax, qword [0x040053f0] 	      2658	ops.c	FUNCTION_39	IF_6
0x40053f0	     0xf857cffffff	                           jne 0x4005372	      2658	ops.c	FUNCTION_39	IF_6
0x40053f6	        0x488b7330	            mov rsi, qword [rbx + 0x30] 	      2684	ops.c	FUNCTION_39	IF_6	ELSE_1
0x40053fa	        0x488b7b38	            mov rdi, qword [rbx + 0x38] 	      2684	ops.c	FUNCTION_39	IF_6	ELSE_1
0x40053fe	        0x48897038	             mov qword [rax + 0x38], rsi	      2684	ops.c	FUNCTION_39	IF_6	ELSE_1
0x4005402	        0x48897840	             mov qword [rax + 0x40], rdi	      2684	ops.c	FUNCTION_39	IF_6	ELSE_1
0x4005406	      0xe800000000	                          call 0x400540b	      2685	ops.c	FUNCTION_39	IF_6	ELSE_1	CALL_12
0x400540b	    0x488b05000000	            mov rax, qword [0x04005412] 	      2688	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10	CALL_13
0x4005412	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      2688	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10	CALL_13
0x4005416	      0xe800000000	                          call 0x400541b	      2688	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10	CALL_13
0x400541b	          0x803800	                       cmp byte [rax], 0	      2688	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10	CALL_13
0x400541e	     0xf844effffff	                            je 0x4005372	      2688	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10	CALL_13
0x4005424	          0x8b4368	            mov eax, dword [rbx + 0x68] 	      2689	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10
0x4005427	          0x394364	            cmp dword [rbx + 0x64], eax 	      2689	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10
0x400542a	     0xf8442ffffff	                            je 0x4005372	      2689	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10
0x4005430	      0xe800000000	                          call 0x4005435	      2690	ops.c	FUNCTION_39	IF_6	ELSE_1	CALL_14
0x4005435	      0xe938ffffff	                           jmp 0x4005372	      2690	ops.c	FUNCTION_39	IF_6	ELSE_1	CALL_14
0x400543a	    0x660f1f440000	                    nop word [rax + rax]	      2690	ops.c	FUNCTION_39	IF_6	ELSE_1	CALL_14
0x4005440	      0x4863442448	         movsxd rax, dword [rsp + 0x48] 	      2655	ops.c	FUNCTION_39	IF_1	CALL_8
0x4005445	          0x4801c7	                            add rdi, rax	      2655	ops.c	FUNCTION_39	IF_1	CALL_8
0x4005448	      0xe800000000	                          call 0x400544d	      2655	ops.c	FUNCTION_39	IF_1	CALL_8
0x400544d	          0x8b4b60	            mov ecx, dword [rbx + 0x60] 	      2660	ops.c	FUNCTION_39	IF_6	IF_7
0x4005450	          0x4989c4	                            mov r12, rax	      2655	ops.c	FUNCTION_39	IF_1	CALL_8
0x4005453	    0x488b05000000	            mov rax, qword [0x0400545a] 	      2662	ops.c	FUNCTION_39	IF_6	IF_7
0x400545a	            0x85c9	                           test ecx, ecx	      2660	ops.c	FUNCTION_39	IF_6	IF_7
0x400545c	            0x7498	                            je 0x40053f6	      2660	ops.c	FUNCTION_39	IF_6	IF_7
0x400545e	          0x8b5044	            mov edx, dword [rax + 0x44] 	      2662	ops.c	FUNCTION_39	IF_6	IF_7
0x4005461	            0x85d2	                           test edx, edx	      2662	ops.c	FUNCTION_39	IF_6	IF_7
0x4005463	            0x7591	                           jne 0x40053f6	      2662	ops.c	FUNCTION_39	IF_6	IF_7
0x4005465	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      2667	ops.c	FUNCTION_39	IF_6	IF_7
0x400546c	            0xeb1e	                           jmp 0x400548c	      2668	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1	CALL_9
0x400546e	            0x6690	                                     nop	      2668	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1	CALL_9
0x4005470	    0x488b0d000000	            mov rcx, qword [0x04005477] 	      2669	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1
0x4005477	        0x8b542448	            mov edx, dword [rsp + 0x48] 	      2669	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1
0x400547b	         0x3542458	             add edx, dword [rsp + 0x58]	      2669	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1
0x400547f	          0x8b4140	            mov eax, dword [rcx + 0x40] 	      2669	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1
0x4005482	            0x39d0	                            cmp eax, edx	      2669	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1
0x4005484	            0x7d10	                           jge 0x4005496	      2669	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1
0x4005486	          0x83c001	                              add eax, 1	      2670	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1
0x4005489	          0x894140	             mov dword [rcx + 0x40], eax	      2670	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1
0x400548c	      0xe800000000	                          call 0x4005491	      2668	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1	CALL_9
0x4005491	          0x803800	                       cmp byte [rax], 0	      2668	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1	CALL_9
0x4005494	            0x75da	                           jne 0x4005470	      2668	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1	CALL_9
0x4005496	      0x448b7c2464	           mov r15d, dword [rsp + 0x64] 	      2671	ops.c	FUNCTION_39	IF_6	IF_7	IF_8
0x400549b	          0x4585ff	                         test r15d, r15d	      2671	ops.c	FUNCTION_39	IF_6	IF_7	IF_8
0x400549e	     0xf84cefeffff	                            je 0x4005372	      2671	ops.c	FUNCTION_39	IF_6	IF_7	IF_8
0x40054a4	      0x448b742468	           mov r14d, dword [rsp + 0x68] 	      2671	ops.c	FUNCTION_39	IF_6	IF_7	IF_8
0x40054a9	          0x4585f6	                         test r14d, r14d	      2671	ops.c	FUNCTION_39	IF_6	IF_7	IF_8
0x40054ac	     0xf85c0feffff	                           jne 0x4005372	      2671	ops.c	FUNCTION_39	IF_6	IF_7	IF_8
0x40054b2	      0xe800000000	                          call 0x40054b7	      2675	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	IF_9	CALL_10
0x40054b7	            0x85c0	                           test eax, eax	      2675	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	IF_9	CALL_10
0x40054b9	     0xf84f7feffff	                            je 0x40053b6	      2675	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	IF_9	CALL_10
0x40054bf	        0x8b442444	            mov eax, dword [rsp + 0x44] 	      2677	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	FOR_1
0x40054c3	            0x85c0	                           test eax, eax	      2677	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	FOR_1
0x40054c5	            0x7e20	                           jle 0x40054e7	      2677	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	FOR_1
0x40054c7	          0x4531f6	                          xor r14d, r14d	      2677	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	FOR_1
0x40054ca	    0x660f1f440000	                    nop word [rax + rax]	      2677	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	FOR_1
0x40054d0	      0xbf20000000	                           mov edi, 0x20	      2678	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	CALL_11
0x40054d5	        0x4183c601	                             add r14d, 1	      2677	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	FOR_1
0x40054d9	      0xe800000000	                          call 0x40054de	      2678	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	CALL_11
0x40054de	        0x8b442444	            mov eax, dword [rsp + 0x44] 	      2677	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	FOR_1
0x40054e2	          0x4439f0	                           cmp eax, r14d	      2677	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	FOR_1
0x40054e5	            0x7fe9	                            jg 0x40054d0	      2677	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	FOR_1
0x40054e7	         0x1442448	             add dword [rsp + 0x48], eax	      2679	ops.c	FUNCTION_39	IF_6	IF_7	IF_8
0x40054eb	      0xe982feffff	                           jmp 0x4005372	      2679	ops.c	FUNCTION_39	IF_6	IF_7	IF_8
0x40054f0	    0x8b0500000000	            mov eax, dword [0x040054f6] 	      2707	ops.c	FUNCTION_39	IF_12
0x40054f6	            0x85c0	                           test eax, eax	      2707	ops.c	FUNCTION_39	IF_12
0x40054f8	     0xf85b8feffff	                           jne 0x40053b6	      2707	ops.c	FUNCTION_39	IF_12
0x40054fe	        0x448b5b60	           mov r11d, dword [rbx + 0x60] 	      2710	ops.c	FUNCTION_39	IF_13
0x4005502	          0x4585db	                         test r11d, r11d	      2710	ops.c	FUNCTION_39	IF_13
0x4005505	     0xf84abfeffff	                            je 0x40053b6	      2710	ops.c	FUNCTION_39	IF_13
0x400550b	      0xe800000000	                          call 0x4005510	      2719	ops.c	FUNCTION_39	IF_13	CALL_17
0x4005510	    0x488b0d000000	            mov rcx, qword [0x04005517] 	      2720	ops.c	FUNCTION_39	IF_13	IF_14
0x4005517	    0x4439a9e81100	         cmp dword [rcx + 0x11e8], r13d 	      2720	ops.c	FUNCTION_39	IF_13	IF_14
0x400551e	     0xf8e7c010000	                           jle 0x40056a0	      2720	ops.c	FUNCTION_39	IF_13	IF_14
0x4005524	          0x4439e8	                           cmp eax, r13d	      2720	ops.c	FUNCTION_39	IF_13	IF_14
0x4005527	     0xf8e73010000	                           jle 0x40056a0	      2720	ops.c	FUNCTION_39	IF_13	IF_14
0x400552d	          0x4429e8	                           sub eax, r13d	      2722	ops.c	FUNCTION_39	IF_13	IF_14
0x4005530	         0x1442458	             add dword [rsp + 0x58], eax	      2722	ops.c	FUNCTION_39	IF_13	IF_14
0x4005534	         0x144245c	             add dword [rsp + 0x5c], eax	      2723	ops.c	FUNCTION_39	IF_13	IF_14
0x4005538	      0xb801000000	                              mov eax, 1	      2724	ops.c	FUNCTION_39	IF_13	IF_14
0x400553d	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      2730	ops.c	FUNCTION_39	IF_13	IF_15
0x4005541	    0x483b91f01100	          cmp rdx, qword [rcx + 0x11f0] 	      2730	ops.c	FUNCTION_39	IF_13	IF_15
0x4005548	     0xf8459010000	                            je 0x40056a7	      2730	ops.c	FUNCTION_39	IF_13	IF_15
0x400554e	    0x488db4248000	                   lea rsi, [rsp + 0x80]	      2777	ops.c	FUNCTION_39	IF_13	CALL_20
0x4005556	      0xb901000000	                              mov ecx, 1	      2777	ops.c	FUNCTION_39	IF_13	CALL_20
0x400555b	          0x4889df	                            mov rdi, rbx	      2777	ops.c	FUNCTION_39	IF_13	CALL_20
0x400555e	      0xe8ddaaffff	                     call sym.block_prep	      2777	ops.c	FUNCTION_39	IF_13	CALL_20
0x4005563	      0x448b542468	           mov r10d, dword [rsp + 0x68] 	      2778	ops.c	FUNCTION_39	IF_13	IF_18
0x4005568	    0x8b8424880000	            mov eax, dword [rsp + 0x88] 	      2778	ops.c	FUNCTION_39	IF_13	IF_18
0x400556f	          0x4585d2	                         test r10d, r10d	      2778	ops.c	FUNCTION_39	IF_13	IF_18
0x4005572	            0x7406	                            je 0x400557a	      2778	ops.c	FUNCTION_39	IF_13	IF_18
0x4005574	        0x3b442448	            cmp eax, dword [rsp + 0x48] 	      2778	ops.c	FUNCTION_39	IF_13	IF_18
0x4005578	            0x7d18	                           jge 0x4005592	      2778	ops.c	FUNCTION_39	IF_13	IF_18
0x400557a	          0x833b12	                   cmp dword [rbx], 0x12	      2780	ops.c	FUNCTION_39	IF_13	IF_18	IF_19
0x400557d	     0xf84a6010000	                            je 0x4005729	      2780	ops.c	FUNCTION_39	IF_13	IF_18	IF_19
0x4005583	    0x8b9424980000	            mov edx, dword [rsp + 0x98] 	      2786	ops.c	FUNCTION_39	IF_13	IF_18
0x400558a	        0x89442448	             mov dword [rsp + 0x48], eax	      2787	ops.c	FUNCTION_39	IF_13	IF_18
0x400558e	        0x89542458	             mov dword [rsp + 0x58], edx	      2786	ops.c	FUNCTION_39	IF_13	IF_18
0x4005592	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      2794	ops.c	FUNCTION_39	IF_13	CALL_21
0x4005596	      0xe800000000	                          call 0x400559b	      2794	ops.c	FUNCTION_39	IF_13	CALL_21
0x400559b	          0x4889c7	                            mov rdi, rax	      2795	ops.c	FUNCTION_39	IF_13	CALL_22
0x400559e	          0x4889c5	                            mov rbp, rax	      2794	ops.c	FUNCTION_39	IF_13	CALL_21
0x40055a1	      0xe800000000	                          call 0x40055a6	      2795	ops.c	FUNCTION_39	IF_13	CALL_22
0x40055a6	          0x833b12	                   cmp dword [rbx], 0x12	      2797	ops.c	FUNCTION_39	IF_13	IF_21
0x40055a9	        0x8b542458	            mov edx, dword [rsp + 0x58] 	      2796	ops.c	FUNCTION_39	IF_13
0x40055ad	     0xf846d010000	                            je 0x4005720	      2797	ops.c	FUNCTION_39	IF_13	IF_21
0x40055b3	          0x4863d2	                         movsxd rdx, edx	      2799	ops.c	FUNCTION_39	IF_13	IF_22
0x40055b6	      0x488d4c0500	                    lea rcx, [rbp + rax]	      2800	ops.c	FUNCTION_39	IF_13	IF_22
0x40055bb	          0x4801d5	                            add rbp, rdx	      2800	ops.c	FUNCTION_39	IF_13	IF_22
0x40055be	          0x4839d0	                            cmp rax, rdx	      2800	ops.c	FUNCTION_39	IF_13	IF_22
0x40055c1	        0x480f42e9	                          cmovb rbp, rcx	      2800	ops.c	FUNCTION_39	IF_13	IF_22
0x40055c5	          0x4d85e4	                           test r12, r12	      2803	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23
0x40055c8	     0xf88e8fdffff	                            js 0x40053b6	      2803	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23
0x40055ce	          0x4889ef	                            mov rdi, rbp	      2804	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	CALL_23
0x40055d1	      0xe800000000	                          call 0x40055d6	      2804	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	CALL_23
0x40055d6	          0x4c29e0	                            sub rax, r12	      2804	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	CALL_23
0x40055d9	          0x4885c0	                           test rax, rax	      2804	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	CALL_23
0x40055dc	          0x4889c6	                            mov rsi, rax	      2804	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	CALL_23
0x40055df	     0xf8ed1fdffff	                           jle 0x40053b6	      2804	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	CALL_23
0x40055e5	          0x4889ef	                            mov rdi, rbp	      2806	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	CALL_24
0x40055e8	      0xe800000000	                          call 0x40055ed	      2806	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	CALL_24
0x40055ed	          0x4885c0	                           test rax, rax	      2807	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24
0x40055f0	          0x4989c7	                            mov r15, rax	      2806	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	CALL_24
0x40055f3	     0xf84bdfdffff	                            je 0x40053b6	      2807	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24
0x40055f9	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      2810	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	IF_25	CALL_25
0x40055fd	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      2810	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	IF_25	CALL_25
0x4005601	        0x488d7001	                      lea rsi, [rax + 1]	      2810	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	IF_25	CALL_25
0x4005605	      0xe800000000	                          call 0x400560a	      2810	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	IF_25	CALL_25
0x400560a	          0x83f801	                              cmp eax, 1	      2810	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	IF_25	CALL_25
0x400560d	     0xf848b010000	                            je 0x400579e	      2810	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	IF_25	CALL_25
0x4005613	          0x8b5328	            mov edx, dword [rbx + 0x28] 	      2815	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24
0x4005616	    0x488b05000000	            mov rax, qword [0x0400561d] 	      2815	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24
0x400561d	          0x895040	             mov dword [rax + 0x40], edx	      2815	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24
0x4005620	      0xe800000000	                          call 0x4005625	      2816	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	CALL_27
0x4005625	          0x4c89ff	                            mov rdi, r15	      2817	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	CALL_28
0x4005628	      0xe800000000	                          call 0x400562d	      2817	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	CALL_28
0x400562d	      0xe984fdffff	                           jmp 0x40053b6	      2817	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	CALL_28
0x4005632	    0x660f1f440000	                    nop word [rax + rax]	      2817	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	CALL_28
0x4005638	      0xe800000000	                          call 0x400563d	      2640	ops.c	FUNCTION_39	IF_1	IF_2	CALL_3
0x400563d	            0x89c7	                            mov edi, eax	      2640	ops.c	FUNCTION_39	IF_1	IF_2	CALL_3
0x400563f	      0xe9d5fcffff	                           jmp 0x4005319	      2640	ops.c	FUNCTION_39	IF_1	IF_2	CALL_3
0x4005644	         0xf1f4000	                         nop dword [rax]	      2640	ops.c	FUNCTION_39	IF_1	IF_2	CALL_3
0x4005648	    0x4439b0f81100	         cmp dword [rax + 0x11f8], r14d 	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x400564f	            0x743f	                            je 0x4005690	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x4005651	           0xf9cc2	                                 setl dl	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x4005654	            0x84d2	                             test dl, dl	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x4005656	     0xf8445fdffff	                            je 0x40053a1	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x400565c	    0x488b90f81100	          mov rdx, qword [rax + 0x11f8] 	      2702	ops.c	FUNCTION_39	IF_11
0x4005663	    0x488b80f01100	          mov rax, qword [rax + 0x11f0] 	      2702	ops.c	FUNCTION_39	IF_11
0x400566a	        0x48895328	             mov qword [rbx + 0x28], rdx	      2702	ops.c	FUNCTION_39	IF_11
0x400566e	        0x48894320	             mov qword [rbx + 0x20], rax	      2702	ops.c	FUNCTION_39	IF_11
0x4005672	      0xe92afdffff	                           jmp 0x40053a1	      2702	ops.c	FUNCTION_39	IF_11
0x4005677	    0x660f1f840000	                    nop word [rax + rax]	      2702	ops.c	FUNCTION_39	IF_11
0x4005680	    0x488b05000000	            mov rax, qword [0x04005687] 	      2643	ops.c	FUNCTION_39	IF_1	IF_2	IF_4
0x4005687	        0x83684001	               sub dword [rax + 0x40], 1	      2643	ops.c	FUNCTION_39	IF_1	IF_2	IF_4
0x400568b	      0xe997fcffff	                           jmp 0x4005327	      2643	ops.c	FUNCTION_39	IF_1	IF_2	IF_4
0x4005690	        0x8b742404	                mov esi, dword [rsp + 4]	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x4005694	    0x39b0fc110000	          cmp dword [rax + 0x11fc], esi 	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x400569a	            0xebb5	                           jmp 0x4005651	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x400569c	         0xf1f4000	                         nop dword [rax]	      2701	ops.c	FUNCTION_39	IF_11	CALL_16
0x40056a0	            0x31c0	                            xor eax, eax	      2713	ops.c	FUNCTION_39	IF_13
0x40056a2	      0xe996feffff	                           jmp 0x400553d	      2713	ops.c	FUNCTION_39	IF_13
0x40056a7	         0xb442468	              or eax, dword [rsp + 0x68]	      2731	ops.c	FUNCTION_39	IF_13	IF_15
0x40056ab	     0xf859dfeffff	                           jne 0x400554e	      2731	ops.c	FUNCTION_39	IF_13	IF_15
0x40056b1	            0x8b03	                    mov eax, dword [rbx]	      2733	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x40056b3	          0x83f811	                           cmp eax, 0x11	      2733	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x40056b6	     0xf8499000000	                            je 0x4005755	      2733	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x40056bc	          0x83f812	                           cmp eax, 0x12	      2750	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x40056bf	     0xf8589feffff	                           jne 0x400554e	      2750	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x40056c5	    0x8bb9f8110000	          mov edi, dword [rcx + 0x11f8] 	      2755	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x40056cb	    0x8bb1fc110000	          mov esi, dword [rcx + 0x11fc] 	      2757	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x40056d1	          0x8b433c	            mov eax, dword [rbx + 0x3c] 	      2751	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x40056d4	           0x34338	             add eax, dword [rbx + 0x38]	      2751	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x40056d7	          0x8d0c37	                    lea ecx, [rdi + rsi]	      2751	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x40056da	            0x39c8	                            cmp eax, ecx	      2751	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x40056dc	     0xf8c6cfeffff	                            jl 0x400554e	      2751	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x40056e2	      0xe800000000	                          call 0x40056e7	      2761	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17	CALL_19
0x40056e7	    0x488b15000000	            mov rdx, qword [0x040056ee] 	      2763	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x40056ee	    0x8b92f8110000	          mov edx, dword [rdx + 0x11f8] 	      2763	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x40056f4	    0xc70311000000	                   mov dword [rbx], 0x11	      2768	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x40056fa	          0x895328	             mov dword [rbx + 0x28], edx	      2763	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x40056fd	      0x4863542448	         movsxd rdx, dword [rsp + 0x48] 	      2765	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4005702	          0x4901d4	                            add r12, rdx	      2765	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4005705	            0x89c2	                            mov edx, eax	      2766	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4005707	          0x2b5364	             sub edx, dword [rbx + 0x64]	      2766	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x400570a	          0x894364	             mov dword [rbx + 0x64], eax	      2767	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x400570d	          0x4863d2	                         movsxd rdx, edx	      2766	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4005710	          0x4929d4	                            sub r12, rdx	      2766	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4005713	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      2766	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4005717	      0xe932feffff	                           jmp 0x400554e	      2766	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x400571c	         0xf1f4000	                         nop dword [rax]	      2766	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x4005720	         0x3542448	             add edx, dword [rsp + 0x48]	      2798	ops.c	FUNCTION_39	IF_13	IF_21
0x4005724	      0xe98afeffff	                           jmp 0x40055b3	      2798	ops.c	FUNCTION_39	IF_13	IF_21
0x4005729	            0x89c2	                            mov edx, eax	      2782	ops.c	FUNCTION_39	IF_13	IF_18	IF_19
0x400572b	        0x2b542448	             sub edx, dword [rsp + 0x48]	      2782	ops.c	FUNCTION_39	IF_13	IF_18	IF_19
0x400572f	    0x448b8c248400	            mov r9d, dword [rsp + 0x84] 	      2783	ops.c	FUNCTION_39	IF_13	IF_18	IF_19	IF_20
0x4005737	          0x4863d2	                         movsxd rdx, edx	      2782	ops.c	FUNCTION_39	IF_13	IF_18	IF_19
0x400573a	          0x4901d4	                            add r12, rdx	      2782	ops.c	FUNCTION_39	IF_13	IF_18	IF_19
0x400573d	          0x4585c9	                           test r9d, r9d	      2783	ops.c	FUNCTION_39	IF_13	IF_18	IF_19	IF_20
0x4005740	     0xf843dfeffff	                            je 0x4005583	      2783	ops.c	FUNCTION_39	IF_13	IF_18	IF_19	IF_20
0x4005746	          0x83e801	                              sub eax, 1	      2784	ops.c	FUNCTION_39	IF_13	IF_18	IF_19	IF_20
0x4005749	    0x898424880000	             mov dword [rsp + 0x88], eax	      2784	ops.c	FUNCTION_39	IF_13	IF_18	IF_19	IF_20
0x4005750	      0xe92efeffff	                           jmp 0x4005583	      2784	ops.c	FUNCTION_39	IF_13	IF_18	IF_19	IF_20
0x4005755	    0x8bb9f8110000	          mov edi, dword [rcx + 0x11f8] 	      2738	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x400575b	    0x8bb1fc110000	          mov esi, dword [rcx + 0x11fc] 	      2740	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x4005761	          0x8b432c	            mov eax, dword [rbx + 0x2c] 	      2734	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x4005764	           0x34328	             add eax, dword [rbx + 0x28]	      2734	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x4005767	          0x8d0c37	                    lea ecx, [rdi + rsi]	      2734	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x400576a	            0x39c8	                            cmp eax, ecx	      2734	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x400576c	     0xf84dcfdffff	                            je 0x400554e	      2734	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x4005772	      0xe800000000	                          call 0x4005777	      2744	ops.c	FUNCTION_39	IF_13	IF_15	IF_16	CALL_18
0x4005777	    0x488b15000000	            mov rdx, qword [0x0400577e] 	      2746	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x400577e	    0x8b92f8110000	          mov edx, dword [rdx + 0x11f8] 	      2746	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x4005784	          0x895328	             mov dword [rbx + 0x28], edx	      2746	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x4005787	            0x89c2	                            mov edx, eax	      2747	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x4005789	          0x2b5364	             sub edx, dword [rbx + 0x64]	      2747	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x400578c	          0x894364	             mov dword [rbx + 0x64], eax	      2748	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x400578f	          0x4863d2	                         movsxd rdx, edx	      2747	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x4005792	          0x4929d4	                            sub r12, rdx	      2747	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x4005795	        0x488b5320	            mov rdx, qword [rbx + 0x20] 	      2747	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x4005799	      0xe9b0fdffff	                           jmp 0x400554e	      2743	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x400579e	            0x8b03	                    mov eax, dword [rbx]	      2812	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	IF_25	CALL_26
0x40057a0	          0x4c89ff	                            mov rdi, r15	       592	ops.c	FUNCTION_8	CALL_1
0x40057a3	        0x8944240c	              mov dword [rsp + 0xc], eax	      2812	ops.c	FUNCTION_39	IF_13	ELSE_3	IF_23	IF_24	IF_25	CALL_26
0x40057a7	    0x8b0500000000	            mov eax, dword [0x040057ad] 	       589	ops.c	FUNCTION_8
0x40057ad	    0xc70500000000	           mov dword [0x040057b7], 0x10 	       591	ops.c	FUNCTION_8
0x40057b7	        0x8944243c	             mov dword [rsp + 0x3c], eax	       589	ops.c	FUNCTION_8
0x40057bb	      0xe800000000	                          call 0x40057c0	       592	ops.c	FUNCTION_8	CALL_1
0x40057c0	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	       594	ops.c	FUNCTION_8	FOR_1
0x40057c4	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	       594	ops.c	FUNCTION_8	FOR_1
0x40057c8	            0x89c6	                            mov esi, eax	       592	ops.c	FUNCTION_8	CALL_1
0x40057ca	        0x89442438	             mov dword [rsp + 0x38], eax	       592	ops.c	FUNCTION_8	CALL_1
0x40057ce	        0x4c8d6101	                      lea r12, [rcx + 1]	       594	ops.c	FUNCTION_8	FOR_1
0x40057d2	          0x4939d4	                            cmp r12, rdx	       594	ops.c	FUNCTION_8	FOR_1
0x40057d5	     0xf8fab020000	                            jg 0x4005a86	       594	ops.c	FUNCTION_8	FOR_1
0x40057db	      0x4c8d742440	                   lea r14, [rsp + 0x40]	       594	ops.c	FUNCTION_8	FOR_1
0x40057e0	            0x31c9	                            xor ecx, ecx	       594	ops.c	FUNCTION_8	FOR_1
0x40057e2	          0x83c601	                              add esi, 1	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0x40057e5	            0x89c0	                            mov eax, eax	        59	string3.h	FUNCTION_93	CALL_3
0x40057e7	    0xc74424040000	                  mov dword [rsp + 4], 0	       594	ops.c	FUNCTION_8	FOR_1
0x40057ef	        0x89742424	             mov dword [rsp + 0x24], esi	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0x40057f3	      0x4c89742410	             mov qword [rsp + 0x10], r14	        59	string3.h	FUNCTION_93	CALL_3
0x40057f8	      0x4889442430	             mov qword [rsp + 0x30], rax	        59	string3.h	FUNCTION_93	CALL_3
0x40057fd	          0x4189ce	                           mov r14d, ecx	        59	string3.h	FUNCTION_93	CALL_3
0x4005800	      0x4c897c2428	             mov qword [rsp + 0x28], r15	        59	string3.h	FUNCTION_93	CALL_3
0x4005805	      0xe97b010000	                           jmp 0x4005985	        59	string3.h	FUNCTION_93	CALL_3
0x400580a	          0x4c89e7	                            mov rdi, r12	       600	ops.c	FUNCTION_8	FOR_1	CALL_3
0x400580d	      0xe800000000	                          call 0x4005812	       600	ops.c	FUNCTION_8	FOR_1	CALL_3
0x4005812	          0x4889c5	                            mov rbp, rax	       600	ops.c	FUNCTION_8	FOR_1	CALL_3
0x4005815	        0x8b742464	            mov esi, dword [rsp + 0x64] 	       613	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4005819	        0x8b442478	            mov eax, dword [rsp + 0x78] 	       612	ops.c	FUNCTION_8	FOR_1	ELSE_1
0x400581d	            0x85f6	                           test esi, esi	       613	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x400581f	        0x89442420	             mov dword [rsp + 0x20], eax	       612	ops.c	FUNCTION_8	FOR_1	ELSE_1
0x4005823	     0xf8503020000	                           jne 0x4005a2c	       613	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4005829	        0x8b542444	            mov edx, dword [rsp + 0x44] 	       615	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x400582d	            0x85d2	                           test edx, edx	       615	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x400582f	     0xf8471020000	                            je 0x4005aa6	       615	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4005835	          0x4189c6	                           mov r14d, eax	       616	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4	IF_5
0x4005838	          0x4129d6	                           sub r14d, edx	       616	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4	IF_5
0x400583b	     0xf84a1020000	                            je 0x4005ae2	       616	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4	IF_5
0x4005841	          0x83e801	                              sub eax, 1	       617	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4	IF_5
0x4005844	          0x4585f6	                         test r14d, r14d	       617	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4	IF_5
0x4005847	      0xba01000000	                              mov edx, 1	       617	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4	IF_5
0x400584c	        0x89442404	                mov dword [rsp + 4], eax	       617	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4	IF_5
0x4005850	           0xf9fc0	                                 setg al	       617	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4	IF_5
0x4005853	      0x448b6c2448	           mov r13d, dword [rsp + 0x48] 	       618	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4005858	      0x44036c2458	            add r13d, dword [rsp + 0x58]	       618	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x400585d	          0x4129d5	                           sub r13d, edx	       618	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4005860	      0x44896c2408	               mov dword [rsp + 8], r13d	       618	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4005865	    0x8b1500000000	            mov edx, dword [0x0400586b] 	       631	ops.c	FUNCTION_8	FOR_1	IF_7
0x400586b	            0x85d2	                           test edx, edx	       631	ops.c	FUNCTION_8	FOR_1	IF_7
0x400586d	            0x7432	                            je 0x40058a1	       631	ops.c	FUNCTION_8	FOR_1	IF_7
0x400586f	            0x84c0	                             test al, al	       631	ops.c	FUNCTION_8	FOR_1	IF_7
0x4005871	            0x742e	                            je 0x40058a1	       631	ops.c	FUNCTION_8	FOR_1	IF_7
0x4005873	      0x837c240c11	            cmp dword [rsp + 0xc], 0x11 	       636	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0x4005878	     0xf8485010000	                            je 0x4005a03	       636	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0x400587e	      0x448b7c2408	               mov r15d, dword [rsp + 8]	       642	ops.c	FUNCTION_8	FOR_1	IF_7	ELSE_3
0x4005883	          0x4889ef	                            mov rdi, rbp	       642	ops.c	FUNCTION_8	FOR_1	IF_7	ELSE_3
0x4005886	          0x4963f7	                        movsxd rsi, r15d	       642	ops.c	FUNCTION_8	FOR_1	IF_7	ELSE_3
0x4005889	          0x4801ee	                            add rsi, rbp	       642	ops.c	FUNCTION_8	FOR_1	IF_7	ELSE_3
0x400588c	      0xe800000000	                          call 0x4005891	       642	ops.c	FUNCTION_8	FOR_1	IF_7	ELSE_3
0x4005891	          0x4489fe	                           mov esi, r15d	       643	ops.c	FUNCTION_8	FOR_1	IF_7	ELSE_3
0x4005894	             0x1c6	                            add esi, eax	       643	ops.c	FUNCTION_8	FOR_1	IF_7	ELSE_3
0x4005896	        0x89742408	                mov dword [rsp + 8], esi	       643	ops.c	FUNCTION_8	FOR_1	IF_7	ELSE_3
0x400589a	        0x29442404	                sub dword [rsp + 4], eax	       646	ops.c	FUNCTION_8	FOR_1	IF_7
0x400589e	          0x4129c6	                           sub r14d, eax	       645	ops.c	FUNCTION_8	FOR_1	IF_7
0x40058a1	          0x4889ef	                            mov rdi, rbp	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0x40058a4	      0xe800000000	                          call 0x40058a9	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0x40058a9	        0x8b742424	            mov esi, dword [rsp + 0x24] 	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0x40058ad	          0x8d3c06	                    lea edi, [rsi + rax]	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0x40058b0	         0x37c2404	                add edi, dword [rsp + 4]	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0x40058b4	      0xe800000000	                          call 0x40058b9	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0x40058b9	          0x4885c0	                           test rax, rax	       651	ops.c	FUNCTION_8	FOR_1	IF_9
0x40058bc	          0x4989c7	                            mov r15, rax	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0x40058bf	     0xf84ea000000	                            je 0x40059af	       651	ops.c	FUNCTION_8	FOR_1	IF_9
0x40058c5	      0x4c636c2408	            movsxd r13, dword [rsp + 8] 	       655	ops.c	FUNCTION_8	FOR_1	CALL_6
0x40058ca	          0x4889ee	                            mov rsi, rbp	        59	string3.h	FUNCTION_93	CALL_3
0x40058cd	          0x4889c7	                            mov rdi, rax	        59	string3.h	FUNCTION_93	CALL_3
0x40058d0	          0x4c89ea	                            mov rdx, r13	        59	string3.h	FUNCTION_93	CALL_3
0x40058d3	      0xe800000000	                          call 0x40058d8	        59	string3.h	FUNCTION_93	CALL_3
0x40058d8	      0x4a8d742d00	                    lea rsi, [rbp + r13]	       656	ops.c	FUNCTION_8	FOR_1
0x40058dd	        0x4b8d3c2f	                    lea rdi, [r15 + r13]	        90	string3.h	FUNCTION_95	CALL_6
0x40058e1	          0x4963ee	                        movsxd rbp, r14d	       659	ops.c	FUNCTION_8	FOR_1	CALL_7
0x40058e4	          0x4889ea	                            mov rdx, rbp	        90	string3.h	FUNCTION_95	CALL_6
0x40058e7	      0x4889742418	             mov qword [rsp + 0x18], rsi	       656	ops.c	FUNCTION_8	FOR_1
0x40058ec	      0xbe20000000	                           mov esi, 0x20	        90	string3.h	FUNCTION_95	CALL_6
0x40058f1	      0xe800000000	                          call 0x40058f6	        90	string3.h	FUNCTION_95	CALL_6
0x40058f6	      0x498d4c2d00	                    lea rcx, [r13 + rbp]	        59	string3.h	FUNCTION_93	CALL_3
0x40058fb	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	        59	string3.h	FUNCTION_93	CALL_3
0x4005900	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	        59	string3.h	FUNCTION_93	CALL_3
0x4005905	        0x498d3c0f	                    lea rdi, [r15 + rcx]	        59	string3.h	FUNCTION_93	CALL_3
0x4005909	      0xe800000000	                          call 0x400590e	        59	string3.h	FUNCTION_93	CALL_3
0x400590e	      0x448b6c2408	               mov r13d, dword [rsp + 8]	       663	ops.c	FUNCTION_8	FOR_1
0x4005913	      0x44036c2438	            add r13d, dword [rsp + 0x38]	       663	ops.c	FUNCTION_8	FOR_1
0x4005918	          0x4585f6	                         test r14d, r14d	       665	ops.c	FUNCTION_8	FOR_1	IF_10
0x400591b	      0x44896c2408	               mov dword [rsp + 8], r13d	       663	ops.c	FUNCTION_8	FOR_1
0x4005920	            0x741b	                            je 0x400593d	       665	ops.c	FUNCTION_8	FOR_1	IF_10
0x4005922	        0x8b442464	            mov eax, dword [rsp + 0x64] 	       665	ops.c	FUNCTION_8	FOR_1	IF_10
0x4005926	            0x85c0	                           test eax, eax	       665	ops.c	FUNCTION_8	FOR_1	IF_10
0x4005928	     0xf8482010000	                            je 0x4005ab0	       665	ops.c	FUNCTION_8	FOR_1	IF_10
0x400592e	          0x4585f6	                         test r14d, r14d	       675	ops.c	FUNCTION_8	FOR_1	IF_11
0x4005931	            0x7e0a	                           jle 0x400593d	       675	ops.c	FUNCTION_8	FOR_1	IF_11
0x4005933	      0x44036c2404	               add r13d, dword [rsp + 4]	       676	ops.c	FUNCTION_8	FOR_1	IF_11
0x4005938	      0x44896c2408	               mov dword [rsp + 8], r13d	       676	ops.c	FUNCTION_8	FOR_1	IF_11
0x400593d	      0x488b6c2418	            mov rbp, qword [rsp + 0x18] 	       677	ops.c	FUNCTION_8	FOR_1	CALL_10
0x4005942	          0x4889ef	                            mov rdi, rbp	       677	ops.c	FUNCTION_8	FOR_1	CALL_10
0x4005945	      0xe800000000	                          call 0x400594a	       677	ops.c	FUNCTION_8	FOR_1	CALL_10
0x400594a	      0x48637c2408	            movsxd rdi, dword [rsp + 8] 	        59	string3.h	FUNCTION_93	CALL_3
0x400594f	        0x488d5001	                      lea rdx, [rax + 1]	        59	string3.h	FUNCTION_93	CALL_3
0x4005953	          0x4889ee	                            mov rsi, rbp	        59	string3.h	FUNCTION_93	CALL_3
0x4005956	          0x4c01ff	                            add rdi, r15	        59	string3.h	FUNCTION_93	CALL_3
0x4005959	      0xe800000000	                          call 0x400595e	        59	string3.h	FUNCTION_93	CALL_3
0x400595e	            0x31d2	                            xor edx, edx	       679	ops.c	FUNCTION_8	FOR_1	CALL_11
0x4005960	          0x4c89fe	                            mov rsi, r15	       679	ops.c	FUNCTION_8	FOR_1	CALL_11
0x4005963	          0x4c89e7	                            mov rdi, r12	       679	ops.c	FUNCTION_8	FOR_1	CALL_11
0x4005966	      0xe800000000	                          call 0x400596b	       679	ops.c	FUNCTION_8	FOR_1	CALL_11
0x400596b	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	       681	ops.c	FUNCTION_8	FOR_1	IF_12
0x400596f	          0x4939d4	                            cmp r12, rdx	       681	ops.c	FUNCTION_8	FOR_1	IF_12
0x4005972	     0xf84e8000000	                            je 0x4005a60	       681	ops.c	FUNCTION_8	FOR_1	IF_12
0x4005978	        0x4983c401	                              add r12, 1	       594	ops.c	FUNCTION_8	FOR_1
0x400597c	          0x4939d4	                            cmp r12, rdx	       594	ops.c	FUNCTION_8	FOR_1
0x400597f	     0xf8ff8000000	                            jg 0x4005a7d	       594	ops.c	FUNCTION_8	FOR_1
0x4005985	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       596	ops.c	FUNCTION_8	FOR_1	CALL_2
0x400598a	      0xb901000000	                              mov ecx, 1	       596	ops.c	FUNCTION_8	FOR_1	CALL_2
0x400598f	          0x4c89e2	                            mov rdx, r12	       596	ops.c	FUNCTION_8	FOR_1	CALL_2
0x4005992	          0x4889df	                            mov rdi, rbx	       596	ops.c	FUNCTION_8	FOR_1	CALL_2
0x4005995	      0xe8a6a6ffff	                     call sym.block_prep	       596	ops.c	FUNCTION_8	FOR_1	CALL_2
0x400599a	      0x448b442464	            mov r8d, dword [rsp + 0x64] 	       597	ops.c	FUNCTION_8	FOR_1	IF_1
0x400599f	          0x4585c0	                           test r8d, r8d	       597	ops.c	FUNCTION_8	FOR_1	IF_1
0x40059a2	            0x7411	                            je 0x40059b5	       597	ops.c	FUNCTION_8	FOR_1	IF_1
0x40059a4	      0x837c240c11	            cmp dword [rsp + 0xc], 0x11 	       597	ops.c	FUNCTION_8	FOR_1	IF_1
0x40059a9	     0xf855bfeffff	                           jne 0x400580a	       597	ops.c	FUNCTION_8	FOR_1	IF_1
0x40059af	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	       597	ops.c	FUNCTION_8	FOR_1	IF_1
0x40059b3	            0xebc3	                           jmp 0x4005978	       597	ops.c	FUNCTION_8	FOR_1	IF_1
0x40059b5	          0x4c89e7	                            mov rdi, r12	       600	ops.c	FUNCTION_8	FOR_1	CALL_3
0x40059b8	      0xe800000000	                          call 0x40059bd	       600	ops.c	FUNCTION_8	FOR_1	CALL_3
0x40059bd	      0x837c240c11	            cmp dword [rsp + 0xc], 0x11 	       602	ops.c	FUNCTION_8	FOR_1	IF_2
0x40059c2	          0x4889c5	                            mov rbp, rax	       600	ops.c	FUNCTION_8	FOR_1	CALL_3
0x40059c5	     0xf854afeffff	                           jne 0x4005815	       602	ops.c	FUNCTION_8	FOR_1	IF_2
0x40059cb	      0x448b742440	           mov r14d, dword [rsp + 0x40] 	       605	ops.c	FUNCTION_8	FOR_1	IF_2
0x40059d0	        0x8b44247c	            mov eax, dword [rsp + 0x7c] 	       604	ops.c	FUNCTION_8	FOR_1	IF_2
0x40059d4	          0x4585f6	                         test r14d, r14d	       606	ops.c	FUNCTION_8	FOR_1	IF_2	IF_3
0x40059d7	        0x89442420	             mov dword [rsp + 0x20], eax	       604	ops.c	FUNCTION_8	FOR_1	IF_2
0x40059db	            0x7442	                            je 0x4005a1f	       606	ops.c	FUNCTION_8	FOR_1	IF_2	IF_3
0x40059dd	          0x83e801	                              sub eax, 1	       607	ops.c	FUNCTION_8	FOR_1	IF_2	IF_3
0x40059e0	    0x8b3d00000000	            mov edi, dword [0x040059e6] 	       631	ops.c	FUNCTION_8	FOR_1	IF_7
0x40059e6	        0x89442404	                mov dword [rsp + 4], eax	       607	ops.c	FUNCTION_8	FOR_1	IF_2	IF_3
0x40059ea	        0x8b442458	            mov eax, dword [rsp + 0x58] 	       608	ops.c	FUNCTION_8	FOR_1	IF_2
0x40059ee	            0x85ff	                           test edi, edi	       631	ops.c	FUNCTION_8	FOR_1	IF_7
0x40059f0	        0x89442408	                mov dword [rsp + 8], eax	       608	ops.c	FUNCTION_8	FOR_1	IF_2
0x40059f4	     0xf84a7feffff	                            je 0x40058a1	       631	ops.c	FUNCTION_8	FOR_1	IF_7
0x40059fa	          0x4585f6	                         test r14d, r14d	       631	ops.c	FUNCTION_8	FOR_1	IF_7
0x40059fd	     0xf8e9efeffff	                           jle 0x40058a1	       631	ops.c	FUNCTION_8	FOR_1	IF_7
0x4005a03	      0x4863742408	            movsxd rsi, dword [rsp + 8] 	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0x4005a08	          0x4963c6	                        movsxd rax, r14d	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0x4005a0b	          0x4889ef	                            mov rdi, rbp	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0x4005a0e	          0x4801c6	                            add rsi, rax	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0x4005a11	          0x4801ee	                            add rsi, rbp	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0x4005a14	    0xff1500000000	                 call qword [0x04005a1a]	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0x4005a1a	      0xe97bfeffff	                           jmp 0x400589a	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0x4005a1f	        0x8b442458	            mov eax, dword [rsp + 0x58] 	       608	ops.c	FUNCTION_8	FOR_1	IF_2
0x4005a23	        0x89442408	                mov dword [rsp + 8], eax	       608	ops.c	FUNCTION_8	FOR_1	IF_2
0x4005a27	      0xe975feffff	                           jmp 0x40058a1	       608	ops.c	FUNCTION_8	FOR_1	IF_2
0x4005a2c	        0x8b4c2468	            mov ecx, dword [rsp + 0x68] 	       623	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2	IF_6
0x4005a30	            0x85c9	                           test ecx, ecx	       623	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2	IF_6
0x4005a32	            0x750d	                           jne 0x4005a41	       623	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2	IF_6
0x4005a34	        0x448b7368	           mov r14d, dword [rbx + 0x68] 	       624	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2	IF_6
0x4005a38	      0x442b742460	            sub r14d, dword [rsp + 0x60]	       624	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2	IF_6
0x4005a3d	        0x4183c601	                             add r14d, 1	       624	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2	IF_6
0x4005a41	      0x448b6c2448	           mov r13d, dword [rsp + 0x48] 	       626	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2
0x4005a46	      0x44036c2458	            add r13d, dword [rsp + 0x58]	       626	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2
0x4005a4b	          0x4585f6	                         test r14d, r14d	       626	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2
0x4005a4e	           0xf9fc0	                                 setg al	       626	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2
0x4005a51	      0x4489742404	               mov dword [rsp + 4], r14d	       625	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2
0x4005a56	      0x44896c2408	               mov dword [rsp + 8], r13d	       626	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2
0x4005a5b	      0xe905feffff	                           jmp 0x4005865	       626	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2
0x4005a60	    0x488b05000000	            mov rax, qword [0x04005a67] 	       685	ops.c	FUNCTION_8	FOR_1	IF_12
0x4005a67	        0x8b742408	                mov esi, dword [rsp + 8]	       686	ops.c	FUNCTION_8	FOR_1	IF_12
0x4005a6b	    0x4c89a0001200	          mov qword [rax + 0x1200], r12 	       685	ops.c	FUNCTION_8	FOR_1	IF_12
0x4005a72	    0x89b008120000	          mov dword [rax + 0x1208], esi 	       686	ops.c	FUNCTION_8	FOR_1	IF_12
0x4005a78	      0xe9fbfeffff	                           jmp 0x4005978	       686	ops.c	FUNCTION_8	FOR_1	IF_12
0x4005a7d	      0x4c8b7c2428	            mov r15, qword [rsp + 0x28] 	       686	ops.c	FUNCTION_8	FOR_1	IF_12
0x4005a82	        0x488b4b20	            mov rcx, qword [rbx + 0x20] 	       686	ops.c	FUNCTION_8	FOR_1	IF_12
0x4005a86	        0x488d7901	                      lea rdi, [rcx + 1]	       690	ops.c	FUNCTION_8	CALL_12
0x4005a8a	        0x4883c201	                              add rdx, 1	       690	ops.c	FUNCTION_8	CALL_12
0x4005a8e	            0x31c9	                            xor ecx, ecx	       690	ops.c	FUNCTION_8	CALL_12
0x4005a90	            0x31f6	                            xor esi, esi	       690	ops.c	FUNCTION_8	CALL_12
0x4005a92	      0xe800000000	                          call 0x4005a97	       690	ops.c	FUNCTION_8	CALL_12
0x4005a97	        0x8b44243c	            mov eax, dword [rsp + 0x3c] 	       692	ops.c	FUNCTION_8
0x4005a9b	    0x890500000000	            mov dword [0x04005aa1], eax 	       692	ops.c	FUNCTION_8
0x4005aa1	      0xe96dfbffff	                           jmp 0x4005613	       692	ops.c	FUNCTION_8
0x4005aa6	            0x31c0	                            xor eax, eax	       615	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4005aa8	          0x4531f6	                          xor r14d, r14d	       615	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4005aab	      0xe9a3fdffff	                           jmp 0x4005853	       615	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0x4005ab0	        0x8b542420	            mov edx, dword [rsp + 0x20] 	        90	string3.h	FUNCTION_95	CALL_6
0x4005ab4	          0x4963fd	                        movsxd rdi, r13d	        90	string3.h	FUNCTION_95	CALL_6
0x4005ab7	      0xbe20000000	                           mov esi, 0x20	        90	string3.h	FUNCTION_95	CALL_6
0x4005abc	          0x4801ef	                            add rdi, rbp	        90	string3.h	FUNCTION_95	CALL_6
0x4005abf	          0x4c01ff	                            add rdi, r15	        90	string3.h	FUNCTION_95	CALL_6
0x4005ac2	          0x4429f2	                           sub edx, r14d	        90	string3.h	FUNCTION_95	CALL_6
0x4005ac5	          0x4863d2	                         movsxd rdx, edx	        90	string3.h	FUNCTION_95	CALL_6
0x4005ac8	      0xe800000000	                          call 0x4005acd	        90	string3.h	FUNCTION_95	CALL_6
0x4005acd	    0x488344241801	               add qword [rsp + 0x18], 1	       670	ops.c	FUNCTION_8	FOR_1	IF_10
0x4005ad3	      0x8344240401	                  add dword [rsp + 4], 1	       672	ops.c	FUNCTION_8	FOR_1	IF_10
0x4005ad8	      0xe951feffff	                           jmp 0x400592e	       672	ops.c	FUNCTION_8	FOR_1	IF_10
0x4005add	      0xe800000000	                          call 0x4005ae2	      2821	ops.c	FUNCTION_39
0x4005ae2	            0x31d2	                            xor edx, edx	       616	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4	IF_5
0x4005ae4	            0x31c0	                            xor eax, eax	       616	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4	IF_5
0x4005ae6	      0xe968fdffff	                           jmp 0x4005853	       616	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4	IF_5
op_on_lines	SWITCH,0:DO,0:ELSE,0:functions,0:FOR,0:IF,0:WHILE,0:CALL,0	3
0x4002060	          0x4863ff	                         movsxd rdi, edi	       204	ops.c	FUNCTION_2
0x4002063	     0xfbe847f0000	           movsx eax, byte [rdi + rdi*2]	       204	ops.c	FUNCTION_2
0x400206b	              0xc3	                                     ret	       205	ops.c	FUNCTION_2
op_change	SWITCH,0:DO,0:ELSE,2:functions,0:FOR,1:IF,16:WHILE,0:CALL,30	235
0x400e000	            0x4157	                                push r15	      2831	ops.c	FUNCTION_40
0x400e002	            0x4156	                                push r14	      2831	ops.c	FUNCTION_40
0x400e004	            0x4155	                                push r13	      2831	ops.c	FUNCTION_40
0x400e006	            0x4154	                                push r12	      2831	ops.c	FUNCTION_40
0x400e008	              0x55	                                push rbp	      2831	ops.c	FUNCTION_40
0x400e009	              0x53	                                push rbx	      2831	ops.c	FUNCTION_40
0x400e00a	          0x4889fb	                            mov rbx, rdi	      2831	ops.c	FUNCTION_40
0x400e00d	    0x4881ec880000	                           sub rsp, 0x88	      2831	ops.c	FUNCTION_40
0x400e014	    0x64488b042528	                mov rax, qword fs:[0x28]	      2831	ops.c	FUNCTION_40
0x400e01d	      0x4889442478	             mov qword [rsp + 0x78], rax	      2831	ops.c	FUNCTION_40
0x400e022	            0x31c0	                            xor eax, eax	      2831	ops.c	FUNCTION_40
0x400e024	        0x837f0801	                  cmp dword [rdi + 8], 1	      2846	ops.c	FUNCTION_40	IF_1
0x400e028	     0xf84aa010000	                            je 0x400e1d8	      2846	ops.c	FUNCTION_40	IF_1
0x400e02e	          0x8b6f28	            mov ebp, dword [rdi + 0x28] 	      2845	ops.c	FUNCTION_40
0x400e031	    0x488b05000000	            mov rax, qword [0x0400e038] 	      2845	ops.c	FUNCTION_40
0x400e038	        0xf6401001	               test byte [rax + 0x10], 1	      2861	ops.c	FUNCTION_40	IF_3
0x400e03c	     0xf840e010000	                            je 0x400e150	      2861	ops.c	FUNCTION_40	IF_3
0x400e042	      0xe800000000	                          call 0x400e047	      2863	ops.c	FUNCTION_40	IF_3	IF_4	CALL_1
0x400e047	            0x85c0	                           test eax, eax	      2863	ops.c	FUNCTION_40	IF_3	IF_4	CALL_1
0x400e049	     0xf8411010000	                            je 0x400e160	      2863	ops.c	FUNCTION_40	IF_3	IF_4	CALL_1
0x400e04f	    0x488b05000000	            mov rax, qword [0x0400e056] 	      2869	ops.c	FUNCTION_40	IF_6	CALL_3
0x400e056	          0x3b6840	            cmp ebp, dword [rax + 0x40] 	      2869	ops.c	FUNCTION_40	IF_6	CALL_3
0x400e059	     0xf8fc1010000	                            jg 0x400e220	      2869	ops.c	FUNCTION_40	IF_6	CALL_3
0x400e05f	        0x448b4b60	            mov r9d, dword [rbx + 0x60] 	      2876	ops.c	FUNCTION_40	IF_7
0x400e063	          0x4585c9	                           test r9d, r9d	      2876	ops.c	FUNCTION_40	IF_7
0x400e066	     0xf8524010000	                           jne 0x400e190	      2876	ops.c	FUNCTION_40	IF_7
0x400e06c	          0x4531e4	                          xor r12d, r12d	      2839	ops.c	FUNCTION_40
0x400e06f	          0x4531f6	                          xor r14d, r14d	      2838	ops.c	FUNCTION_40
0x400e072	        0x837b0801	                  cmp dword [rbx + 8], 1	      2892	ops.c	FUNCTION_40	IF_9
0x400e076	     0xf840c030000	                            je 0x400e388	      2892	ops.c	FUNCTION_40	IF_9
0x400e07c	            0x31f6	                            xor esi, esi	      2896	ops.c	FUNCTION_40	CALL_12
0x400e07e	            0x31ff	                            xor edi, edi	      2896	ops.c	FUNCTION_40	CALL_12
0x400e080	      0xba01000000	                              mov edx, 1	      2896	ops.c	FUNCTION_40	CALL_12
0x400e085	      0xe800000000	                          call 0x400e08a	      2896	ops.c	FUNCTION_40	CALL_12
0x400e08a	          0x8b7360	            mov esi, dword [rbx + 0x60] 	      2904	ops.c	FUNCTION_40	IF_10
0x400e08d	          0x4189c5	                           mov r13d, eax	      2896	ops.c	FUNCTION_40	CALL_12
0x400e090	            0x85f6	                           test esi, esi	      2904	ops.c	FUNCTION_40	IF_10
0x400e092	     0xf84ca000000	                            je 0x400e162	      2904	ops.c	FUNCTION_40	IF_10
0x400e098	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      2904	ops.c	FUNCTION_40	IF_10
0x400e09c	        0x483b7b30	            cmp rdi, qword [rbx + 0x30] 	      2904	ops.c	FUNCTION_40	IF_10
0x400e0a0	     0xf84bc000000	                            je 0x400e162	      2904	ops.c	FUNCTION_40	IF_10
0x400e0a6	    0x8b1500000000	            mov edx, dword [0x0400e0ac] 	      2904	ops.c	FUNCTION_40	IF_10
0x400e0ac	            0x85d2	                           test edx, edx	      2904	ops.c	FUNCTION_40	IF_10
0x400e0ae	     0xf85ae000000	                           jne 0x400e162	      2904	ops.c	FUNCTION_40	IF_10
0x400e0b4	      0xe800000000	                          call 0x400e0b9	      2908	ops.c	FUNCTION_40	IF_10	CALL_13
0x400e0b9	      0x4439642448	           cmp dword [rsp + 0x48], r12d 	      2909	ops.c	FUNCTION_40	IF_10	IF_11
0x400e0be	          0x4889c5	                            mov rbp, rax	      2908	ops.c	FUNCTION_40	IF_10	CALL_13
0x400e0c1	     0xf8fe9020000	                            jg 0x400e3b0	      2909	ops.c	FUNCTION_40	IF_10	IF_11
0x400e0c7	          0x4889ef	                            mov rdi, rbp	      2917	ops.c	FUNCTION_40	IF_10	CALL_15
0x400e0ca	      0xe800000000	                          call 0x400e0cf	      2917	ops.c	FUNCTION_40	IF_10	CALL_15
0x400e0cf	          0x4c29f0	                            sub rax, r14	      2917	ops.c	FUNCTION_40	IF_10	CALL_15
0x400e0d2	          0x4989c7	                            mov r15, rax	      2917	ops.c	FUNCTION_40	IF_10	CALL_15
0x400e0d5	          0x4489e8	                           mov eax, r13d	      2975	ops.c	FUNCTION_40
0x400e0d8	          0x4d85ff	                           test r15, r15	      2918	ops.c	FUNCTION_40	IF_10	IF_12
0x400e0db	     0xf8e81000000	                           jle 0x400e162	      2918	ops.c	FUNCTION_40	IF_10	IF_12
0x400e0e1	        0x418d7f01	                      lea edi, [r15 + 1]	      2922	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_16
0x400e0e5	      0x44897c2414	            mov dword [rsp + 0x14], r15d	      2922	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_16
0x400e0ea	      0xe800000000	                          call 0x400e0ef	      2922	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_16
0x400e0ef	          0x4885c0	                           test rax, rax	      2922	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_16
0x400e0f2	      0x4889442418	             mov qword [rsp + 0x18], rax	      2922	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_16
0x400e0f7	            0x7445	                            je 0x400e13e	      2922	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_16
0x400e0f9	      0x4863742448	         movsxd rsi, dword [rsp + 0x48] 	      2924	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_17
0x400e0fe	          0x4889c7	                            mov rdi, rax	      2924	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_17
0x400e101	          0x4c89fa	                            mov rdx, r15	      2924	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_17
0x400e104	          0x4801ee	                            add rsi, rbp	      2924	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_17
0x400e107	      0xe800000000	                          call 0x400e10c	      2924	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_17
0x400e10c	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      2925	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1
0x400e110	        0x488d6801	                      lea rbp, [rax + 1]	      2925	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1
0x400e114	        0x483b6b30	            cmp rbp, qword [rbx + 0x30] 	      2925	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1
0x400e118	     0xf8e35020000	                           jle 0x400e353	      2925	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1
0x400e11e	            0x6690	                                     nop	      2925	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1
0x400e120	      0xe800000000	                          call 0x400e125	      2966	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_28
0x400e125	        0x488b4330	            mov rax, qword [rbx + 0x30] 	      2968	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_29
0x400e129	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      2968	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_29
0x400e12d	            0x31c9	                            xor ecx, ecx	      2968	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_29
0x400e12f	            0x31f6	                            xor esi, esi	      2968	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_29
0x400e131	        0x488d5001	                      lea rdx, [rax + 1]	      2968	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_29
0x400e135	        0x4883c701	                              add rdi, 1	      2968	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_29
0x400e139	      0xe800000000	                          call 0x400e13e	      2968	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_29
0x400e13e	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      2970	ops.c	FUNCTION_40	IF_10	IF_12	CALL_30
0x400e143	      0xe800000000	                          call 0x400e148	      2970	ops.c	FUNCTION_40	IF_10	IF_12	CALL_30
0x400e148	          0x4489e8	                           mov eax, r13d	      2975	ops.c	FUNCTION_40
0x400e14b	            0xeb15	                           jmp 0x400e162	      2975	ops.c	FUNCTION_40
0x400e14d	           0xf1f00	                         nop dword [rax]	      2975	ops.c	FUNCTION_40
0x400e150	          0x4889df	                            mov rdi, rbx	      2866	ops.c	FUNCTION_40	ELSE_1	IF_5	CALL_2
0x400e153	      0xe800000000	                          call 0x400e158	      2866	ops.c	FUNCTION_40	ELSE_1	IF_5	CALL_2
0x400e158	            0x85c0	                           test eax, eax	      2866	ops.c	FUNCTION_40	ELSE_1	IF_5	CALL_2
0x400e15a	     0xf85effeffff	                           jne 0x400e04f	      2866	ops.c	FUNCTION_40	ELSE_1	IF_5	CALL_2
0x400e160	            0x31c0	                            xor eax, eax	      2864	ops.c	FUNCTION_40	IF_3	IF_4
0x400e162	      0x488b4c2478	            mov rcx, qword [rsp + 0x78] 	      2976	ops.c	FUNCTION_40
0x400e167	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2976	ops.c	FUNCTION_40
0x400e170	     0xf856c020000	                           jne 0x400e3e2	      2976	ops.c	FUNCTION_40
0x400e176	    0x4881c4880000	                           add rsp, 0x88	      2976	ops.c	FUNCTION_40
0x400e17d	              0x5b	                                 pop rbx	      2976	ops.c	FUNCTION_40
0x400e17e	              0x5d	                                 pop rbp	      2976	ops.c	FUNCTION_40
0x400e17f	            0x415c	                                 pop r12	      2976	ops.c	FUNCTION_40
0x400e181	            0x415d	                                 pop r13	      2976	ops.c	FUNCTION_40
0x400e183	            0x415e	                                 pop r14	      2976	ops.c	FUNCTION_40
0x400e185	            0x415f	                                 pop r15	      2976	ops.c	FUNCTION_40
0x400e187	              0xc3	                                     ret	      2976	ops.c	FUNCTION_40
0x400e188	     0xf1f84000000	                   nop dword [rax + rax]	      2976	ops.c	FUNCTION_40
0x400e190	    0x448b05000000	            mov r8d, dword [0x0400e197] 	      2880	ops.c	FUNCTION_40	IF_7	IF_8
0x400e197	          0x4585c0	                           test r8d, r8d	      2880	ops.c	FUNCTION_40	IF_7	IF_8
0x400e19a	     0xf85ad000000	                           jne 0x400e24d	      2880	ops.c	FUNCTION_40	IF_7	IF_8
0x400e1a0	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	      2884	ops.c	FUNCTION_40	IF_7	CALL_8
0x400e1a4	      0xe800000000	                          call 0x400e1a9	      2884	ops.c	FUNCTION_40	IF_7	CALL_8
0x400e1a9	          0x4889c5	                            mov rbp, rax	      2884	ops.c	FUNCTION_40	IF_7	CALL_8
0x400e1ac	          0x4889c7	                            mov rdi, rax	      2885	ops.c	FUNCTION_40	IF_7	CALL_9
0x400e1af	      0xe800000000	                          call 0x400e1b4	      2885	ops.c	FUNCTION_40	IF_7	CALL_9
0x400e1b4	          0x4889ef	                            mov rdi, rbp	      2886	ops.c	FUNCTION_40	IF_7	CALL_10
0x400e1b7	          0x4989c6	                            mov r14, rax	      2885	ops.c	FUNCTION_40	IF_7	CALL_9
0x400e1ba	      0xe800000000	                          call 0x400e1bf	      2886	ops.c	FUNCTION_40	IF_7	CALL_10
0x400e1bf	          0x4c63e0	                         movsxd r12, eax	      2886	ops.c	FUNCTION_40	IF_7	CALL_10
0x400e1c2	    0x488b05000000	            mov rax, qword [0x0400e1c9] 	      2887	ops.c	FUNCTION_40	IF_7
0x400e1c9	          0x8b4040	            mov eax, dword [rax + 0x40] 	      2887	ops.c	FUNCTION_40	IF_7
0x400e1cc	        0x89442448	             mov dword [rsp + 0x48], eax	      2887	ops.c	FUNCTION_40	IF_7
0x400e1d0	      0xe99dfeffff	                           jmp 0x400e072	      2887	ops.c	FUNCTION_40	IF_7
0x400e1d5	           0xf1f00	                         nop dword [rax]	      2887	ops.c	FUNCTION_40	IF_7
0x400e1d8	    0x448b2d000000	           mov r13d, dword [0x0400e1df] 	      2850	ops.c	FUNCTION_40	IF_1	IF_2
0x400e1df	            0x31ed	                            xor ebp, ebp	      2848	ops.c	FUNCTION_40	IF_1
0x400e1e1	    0x488b05000000	            mov rax, qword [0x0400e1e8] 	      2850	ops.c	FUNCTION_40	IF_1	IF_2
0x400e1e8	          0x4585ed	                         test r13d, r13d	      2850	ops.c	FUNCTION_40	IF_1	IF_2
0x400e1eb	     0xf8547feffff	                           jne 0x400e038	      2850	ops.c	FUNCTION_40	IF_1	IF_2
0x400e1f1	    0x448ba0741500	         mov r12d, dword [rax + 0x1574] 	      2850	ops.c	FUNCTION_40	IF_1	IF_2
0x400e1f8	          0x4585e4	                         test r12d, r12d	      2850	ops.c	FUNCTION_40	IF_1	IF_2
0x400e1fb	     0xf8437feffff	                            je 0x400e038	      2850	ops.c	FUNCTION_40	IF_1	IF_2
0x400e201	    0x448b98281400	         mov r11d, dword [rax + 0x1428] 	      2852	ops.c	FUNCTION_40	IF_1	IF_2
0x400e208	          0x4585db	                         test r11d, r11d	      2852	ops.c	FUNCTION_40	IF_1	IF_2
0x400e20b	     0xf8527feffff	                           jne 0x400e038	      2852	ops.c	FUNCTION_40	IF_1	IF_2
0x400e211	    0xc70500000000	               mov dword [0x0400e21b], 1	      2855	ops.c	FUNCTION_40	IF_1	IF_2
0x400e21b	      0xe918feffff	                           jmp 0x400e038	      2855	ops.c	FUNCTION_40	IF_1	IF_2
0x400e220	        0x488b7838	            mov rdi, qword [rax + 0x38] 	      2869	ops.c	FUNCTION_40	IF_6	CALL_3
0x400e224	      0xe800000000	                          call 0x400e229	      2869	ops.c	FUNCTION_40	IF_6	CALL_3
0x400e229	          0x803800	                       cmp byte [rax], 0	      2869	ops.c	FUNCTION_40	IF_6	CALL_3
0x400e22c	     0xf842dfeffff	                            je 0x400e05f	      2869	ops.c	FUNCTION_40	IF_6	CALL_3
0x400e232	    0x448b15000000	           mov r10d, dword [0x0400e239] 	      2870	ops.c	FUNCTION_40	IF_6
0x400e239	          0x4585d2	                         test r10d, r10d	      2870	ops.c	FUNCTION_40	IF_6
0x400e23c	     0xf8496010000	                            je 0x400e3d8	      2870	ops.c	FUNCTION_40	IF_6
0x400e242	          0x8b4360	            mov eax, dword [rbx + 0x60] 	      2876	ops.c	FUNCTION_40	IF_7
0x400e245	            0x85c0	                           test eax, eax	      2876	ops.c	FUNCTION_40	IF_7
0x400e247	     0xf841ffeffff	                            je 0x400e06c	      2876	ops.c	FUNCTION_40	IF_7
0x400e24d	    0x488b05000000	            mov rax, qword [0x0400e254] 	      2880	ops.c	FUNCTION_40	IF_7	IF_8
0x400e254	          0x8b7844	            mov edi, dword [rax + 0x44] 	      2880	ops.c	FUNCTION_40	IF_7	IF_8
0x400e257	            0x85ff	                           test edi, edi	      2880	ops.c	FUNCTION_40	IF_7	IF_8
0x400e259	     0xf8e39010000	                           jle 0x400e398	      2880	ops.c	FUNCTION_40	IF_7	IF_8
0x400e25f	      0xe800000000	                          call 0x400e264	      2882	ops.c	FUNCTION_40	IF_7	CALL_7
0x400e264	            0x89c7	                            mov edi, eax	      2882	ops.c	FUNCTION_40	IF_7	CALL_7
0x400e266	      0xe800000000	                          call 0x400e26b	      2882	ops.c	FUNCTION_40	IF_7	CALL_7
0x400e26b	      0xe930ffffff	                           jmp 0x400e1a0	      2882	ops.c	FUNCTION_40	IF_7	CALL_7
0x400e270	    0x8b1500000000	            mov edx, dword [0x0400e276] 	      2929	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x400e276	            0x85d2	                           test edx, edx	      2929	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x400e278	     0xf84c7000000	                            je 0x400e345	      2929	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x400e27e	          0x8b7364	            mov esi, dword [rbx + 0x64] 	      2939	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_15	CALL_19
0x400e281	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      2939	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_15	CALL_19
0x400e286	      0x48896c2420	             mov qword [rsp + 0x20], rbp	      2938	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_15
0x400e28b	      0xe800000000	                          call 0x400e290	      2939	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_15	CALL_19
0x400e290	          0x4889ef	                            mov rdi, rbp	      2944	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_20
0x400e293	      0xe800000000	                          call 0x400e298	      2944	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_20
0x400e298	          0x4889c7	                            mov rdi, rax	      2945	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_22
0x400e29b	          0x4989c6	                            mov r14, rax	      2944	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_20
0x400e29e	      0xe800000000	                          call 0x400e2a3	      2945	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_22
0x400e2a3	        0x8b542414	            mov edx, dword [rsp + 0x14] 	      2945	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_22
0x400e2a7	         0x354242c	             add edx, dword [rsp + 0x2c]	      2945	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_22
0x400e2ab	        0x8d7c0201	                lea edi, [rdx + rax + 1]	      2945	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_22
0x400e2af	      0xe800000000	                          call 0x400e2b4	      2945	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_22
0x400e2b4	          0x4885c0	                           test rax, rax	      2950	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_16
0x400e2b7	          0x4989c4	                            mov r12, rax	      2945	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_22
0x400e2ba	     0xf8485000000	                            je 0x400e345	      2950	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_16
0x400e2c0	      0x4863542448	         movsxd rdx, dword [rsp + 0x48] 	        59	string3.h	FUNCTION_93	CALL_3
0x400e2c5	          0x4c89f6	                            mov rsi, r14	        59	string3.h	FUNCTION_93	CALL_3
0x400e2c8	          0x4889c7	                            mov rdi, rax	        59	string3.h	FUNCTION_93	CALL_3
0x400e2cb	      0xe800000000	                          call 0x400e2d0	        59	string3.h	FUNCTION_93	CALL_3
0x400e2d0	      0x48634c2448	         movsxd rcx, dword [rsp + 0x48] 	      2954	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x400e2d5	      0x486354242c	         movsxd rdx, dword [rsp + 0x2c] 	        90	string3.h	FUNCTION_95	CALL_6
0x400e2da	      0xbe20000000	                           mov esi, 0x20	        90	string3.h	FUNCTION_95	CALL_6
0x400e2df	        0x498d3c0c	                    lea rdi, [r12 + rcx]	        90	string3.h	FUNCTION_95	CALL_6
0x400e2e3	      0x48894c2408	                mov qword [rsp + 8], rcx	        90	string3.h	FUNCTION_95	CALL_6
0x400e2e8	      0xe800000000	                          call 0x400e2ed	        90	string3.h	FUNCTION_95	CALL_6
0x400e2ed	      0x48637c242c	         movsxd rdi, dword [rsp + 0x2c] 	      2957	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x400e2f2	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      2957	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x400e2f7	          0x4c89fa	                            mov rdx, r15	        59	string3.h	FUNCTION_93	CALL_3
0x400e2fa	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	        59	string3.h	FUNCTION_93	CALL_3
0x400e2ff	          0x4801f9	                            add rcx, rdi	      2957	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x400e302	        0x498d3c0c	                    lea rdi, [r12 + rcx]	        59	string3.h	FUNCTION_93	CALL_3
0x400e306	      0x48894c2408	                mov qword [rsp + 8], rcx	        59	string3.h	FUNCTION_93	CALL_3
0x400e30b	      0xe800000000	                          call 0x400e310	        59	string3.h	FUNCTION_93	CALL_3
0x400e310	      0x4863742448	         movsxd rsi, dword [rsp + 0x48] 	      2961	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x400e315	          0x4901f6	                            add r14, rsi	      2961	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x400e318	          0x4c89f7	                            mov rdi, r14	      2962	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_26
0x400e31b	      0xe800000000	                          call 0x400e320	      2962	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_26
0x400e320	      0x488b4c2408	                mov rcx, qword [rsp + 8]	        59	string3.h	FUNCTION_93	CALL_3
0x400e325	        0x488d5001	                      lea rdx, [rax + 1]	        59	string3.h	FUNCTION_93	CALL_3
0x400e329	          0x4c89f6	                            mov rsi, r14	        59	string3.h	FUNCTION_93	CALL_3
0x400e32c	        0x498d3c0f	                    lea rdi, [r15 + rcx]	        59	string3.h	FUNCTION_93	CALL_3
0x400e330	          0x4c01e7	                            add rdi, r12	        59	string3.h	FUNCTION_93	CALL_3
0x400e333	      0xe800000000	                          call 0x400e338	        59	string3.h	FUNCTION_93	CALL_3
0x400e338	            0x31d2	                            xor edx, edx	      2963	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_27
0x400e33a	          0x4c89e6	                            mov rsi, r12	      2963	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_27
0x400e33d	          0x4889ef	                            mov rdi, rbp	      2963	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_27
0x400e340	      0xe800000000	                          call 0x400e345	      2963	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_27
0x400e345	        0x4883c501	                              add rbp, 1	      2926	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1
0x400e349	        0x48396b30	            cmp qword [rbx + 0x30], rbp 	      2925	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1
0x400e34d	     0xf8ccdfdffff	                            jl 0x400e120	      2925	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1
0x400e353	      0x488d742430	                   lea rsi, [rsp + 0x30]	      2928	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	CALL_18
0x400e358	      0xb901000000	                              mov ecx, 1	      2928	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	CALL_18
0x400e35d	          0x4889ea	                            mov rdx, rbp	      2928	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	CALL_18
0x400e360	          0x4889df	                            mov rdi, rbx	      2928	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	CALL_18
0x400e363	      0xe8d81cffff	                     call sym.block_prep	      2928	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	CALL_18
0x400e368	        0x8b4c2454	            mov ecx, dword [rsp + 0x54] 	      2929	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x400e36c	            0x85c9	                           test ecx, ecx	      2929	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x400e36e	     0xf85fcfeffff	                           jne 0x400e270	      2929	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x400e374	    0xc744242c0000	               mov dword [rsp + 0x2c], 0	      2942	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	ELSE_2
0x400e37c	      0xe90fffffff	                           jmp 0x400e290	      2942	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	ELSE_2
0x400e381	     0xf1f80000000	                         nop dword [rax]	      2942	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	ELSE_2
0x400e388	      0xe800000000	                          call 0x400e38d	      2893	ops.c	FUNCTION_40	CALL_11
0x400e38d	      0xe9eafcffff	                           jmp 0x400e07c	      2893	ops.c	FUNCTION_40	CALL_11
0x400e392	    0x660f1f440000	                    nop word [rax + rax]	      2893	ops.c	FUNCTION_40	CALL_11
0x400e398	      0xe800000000	                          call 0x400e39d	      2881	ops.c	FUNCTION_40	IF_7	IF_8	CALL_5
0x400e39d	            0x85c0	                           test eax, eax	      2881	ops.c	FUNCTION_40	IF_7	IF_8	CALL_5
0x400e39f	     0xf84bafeffff	                            je 0x400e25f	      2881	ops.c	FUNCTION_40	IF_7	IF_8	CALL_5
0x400e3a5	      0xe9f6fdffff	                           jmp 0x400e1a0	      2881	ops.c	FUNCTION_40	IF_7	IF_8	CALL_5
0x400e3aa	    0x660f1f440000	                    nop word [rax + rax]	      2881	ops.c	FUNCTION_40	IF_7	IF_8	CALL_5
0x400e3b0	          0x4889c7	                            mov rdi, rax	      2911	ops.c	FUNCTION_40	IF_10	IF_11	CALL_14
0x400e3b3	      0xe800000000	                          call 0x400e3b8	      2911	ops.c	FUNCTION_40	IF_10	IF_11	CALL_14
0x400e3b8	          0x4863d0	                         movsxd rdx, eax	      2913	ops.c	FUNCTION_40	IF_10	IF_11
0x400e3bb	         0x3442448	             add eax, dword [rsp + 0x48]	      2914	ops.c	FUNCTION_40	IF_10	IF_11
0x400e3bf	          0x4c29e2	                            sub rdx, r12	      2913	ops.c	FUNCTION_40	IF_10	IF_11
0x400e3c2	          0x4901d6	                            add r14, rdx	      2913	ops.c	FUNCTION_40	IF_10	IF_11
0x400e3c5	          0x4429e0	                           sub eax, r12d	      2914	ops.c	FUNCTION_40	IF_10	IF_11
0x400e3c8	        0x89442448	             mov dword [rsp + 0x48], eax	      2914	ops.c	FUNCTION_40	IF_10	IF_11
0x400e3cc	      0xe9f6fcffff	                           jmp 0x400e0c7	      2914	ops.c	FUNCTION_40	IF_10	IF_11
0x400e3d1	     0xf1f80000000	                         nop dword [rax]	      2914	ops.c	FUNCTION_40	IF_10	IF_11
0x400e3d8	      0xe800000000	                          call 0x400e3dd	      2871	ops.c	FUNCTION_40	CALL_4
0x400e3dd	      0xe97dfcffff	                           jmp 0x400e05f	      2871	ops.c	FUNCTION_40	CALL_4
0x400e3e2	      0xe800000000	                          call 0x400e3e7	      2976	ops.c	FUNCTION_40
write_viminfo_registers	SWITCH,1:DO,0:ELSE,2:functions,0:FOR,4:IF,15:WHILE,0:CALL,14	305
0x4008780	            0x4157	                                push r15	      6312	ops.c	FUNCTION_72
0x4008782	            0x4156	                                push r14	      6312	ops.c	FUNCTION_72
0x4008784	      0xba05000000	                              mov edx, 5	      6322	ops.c	FUNCTION_72	CALL_2
0x4008789	            0x4155	                                push r13	      6312	ops.c	FUNCTION_72
0x400878b	            0x4154	                                push r12	      6312	ops.c	FUNCTION_72
0x400878d	      0xbe00000000	                              mov esi, 0	      6322	ops.c	FUNCTION_72	CALL_2
0x4008792	              0x55	                                push rbp	      6312	ops.c	FUNCTION_72
0x4008793	              0x53	                                push rbx	      6312	ops.c	FUNCTION_72
0x4008794	          0x4889fd	                            mov rbp, rdi	      6312	ops.c	FUNCTION_72
0x4008797	            0x31ff	                            xor edi, edi	      6322	ops.c	FUNCTION_72	CALL_2
0x4008799	        0x4883ec38	                           sub rsp, 0x38	      6312	ops.c	FUNCTION_72
0x400879d	      0xe800000000	                          call 0x40087a2	      6322	ops.c	FUNCTION_72	CALL_2
0x40087a2	          0x4889ee	                            mov rsi, rbp	      6322	ops.c	FUNCTION_72	CALL_2
0x40087a5	          0x4889c7	                            mov rdi, rax	      6322	ops.c	FUNCTION_72	CALL_2
0x40087a8	      0xe800000000	                          call 0x40087ad	      6322	ops.c	FUNCTION_72	CALL_2
0x40087ad	      0xbf3c000000	                           mov edi, 0x3c	      6325	ops.c	FUNCTION_72	CALL_3
0x40087b2	      0xe800000000	                          call 0x40087b7	      6325	ops.c	FUNCTION_72	CALL_3
0x40087b7	            0x85c0	                           test eax, eax	      6326	ops.c	FUNCTION_72	IF_1
0x40087b9	        0x89442420	             mov dword [rsp + 0x20], eax	      6325	ops.c	FUNCTION_72	CALL_3
0x40087bd	     0xf8814040000	                            js 0x4008bd7	      6326	ops.c	FUNCTION_72	IF_1
0x40087c3	      0x448b442420	            mov r8d, dword [rsp + 0x20] 	      6328	ops.c	FUNCTION_72	IF_2
0x40087c8	          0x4585c0	                           test r8d, r8d	      6328	ops.c	FUNCTION_72	IF_2
0x40087cb	            0x7513	                           jne 0x40087e0	      6328	ops.c	FUNCTION_72	IF_2
0x40087cd	        0x4883c438	                           add rsp, 0x38	      6439	ops.c	FUNCTION_72
0x40087d1	              0x5b	                                 pop rbx	      6439	ops.c	FUNCTION_72
0x40087d2	              0x5d	                                 pop rbp	      6439	ops.c	FUNCTION_72
0x40087d3	            0x415c	                                 pop r12	      6439	ops.c	FUNCTION_72
0x40087d5	            0x415d	                                 pop r13	      6439	ops.c	FUNCTION_72
0x40087d7	            0x415e	                                 pop r14	      6439	ops.c	FUNCTION_72
0x40087d9	            0x415f	                                 pop r15	      6439	ops.c	FUNCTION_72
0x40087db	              0xc3	                                     ret	      6439	ops.c	FUNCTION_72
0x40087dc	         0xf1f4000	                         nop dword [rax]	      6439	ops.c	FUNCTION_72
0x40087e0	      0xbf73000000	                           mov edi, 0x73	      6330	ops.c	FUNCTION_72	CALL_5
0x40087e5	      0xe800000000	                          call 0x40087ea	      6330	ops.c	FUNCTION_72	CALL_5
0x40087ea	            0x85c0	                           test eax, eax	      6331	ops.c	FUNCTION_72	IF_3
0x40087ec	        0x89442424	             mov dword [rsp + 0x24], eax	      6330	ops.c	FUNCTION_72	CALL_5
0x40087f0	            0x74db	                            je 0x40087cd	      6331	ops.c	FUNCTION_72	IF_3
0x40087f2	            0x4898	                                    cdqe	      6331	ops.c	FUNCTION_72	IF_3
0x40087f4	    0x48c704240000	                      mov qword [rsp], 0	      6371	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0x40087fc	          0x4531f6	                          xor r14d, r14d	      6371	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0x40087ff	        0x48c1e00a	                            shl rax, 0xa	      6371	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0x4008803	      0x4889442428	             mov qword [rsp + 0x28], rax	      6371	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0x4008808	     0xf1f84000000	                   nop dword [rax + rax]	      6371	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0x4008810	        0x418d46db	                   lea eax, [r14 - 0x25]	      6343	ops.c	FUNCTION_72	FOR_1	IF_5
0x4008814	          0x83f802	                              cmp eax, 2	      6343	ops.c	FUNCTION_72	FOR_1	IF_5
0x4008817	     0xf868b020000	                           jbe 0x4008aa8	      6343	ops.c	FUNCTION_72	FOR_1	IF_5
0x400881d	    0x488b05000000	            mov rax, qword [0x04008824] 	      6348	ops.c	FUNCTION_72	FOR_1	IF_6
0x4008824	          0x4885c0	                           test rax, rax	      6348	ops.c	FUNCTION_72	FOR_1	IF_6
0x4008827	     0xf84a3020000	                            je 0x4008ad0	      6348	ops.c	FUNCTION_72	FOR_1	IF_6
0x400882d	        0x488b0c24	                    mov rcx, qword [rsp]	      6349	ops.c	FUNCTION_72	FOR_1	IF_6
0x4008831	          0x4889cb	                            mov rbx, rcx	      6349	ops.c	FUNCTION_72	FOR_1	IF_6
0x4008834	    0x4881eb000000	                              sub rbx, 0	      6349	ops.c	FUNCTION_72	FOR_1	IF_6
0x400883b	          0x4801c3	                            add rbx, rax	      6349	ops.c	FUNCTION_72	FOR_1	IF_6
0x400883e	        0x48833b00	                      cmp qword [rbx], 0	      6349	ops.c	FUNCTION_72	FOR_1	IF_6
0x4008842	     0xf8488020000	                            je 0x4008ad0	      6349	ops.c	FUNCTION_72	FOR_1	IF_6
0x4008848	        0x48833900	                      cmp qword [rcx], 0	      6350	ops.c	FUNCTION_72	FOR_1	IF_6
0x400884c	            0x740e	                            je 0x400885c	      6350	ops.c	FUNCTION_72	FOR_1	IF_6
0x400884e	        0x488b4118	            mov rax, qword [rcx + 0x18] 	      6350	ops.c	FUNCTION_72	FOR_1	IF_6
0x4008852	        0x48394318	            cmp qword [rbx + 0x18], rax 	      6350	ops.c	FUNCTION_72	FOR_1	IF_6
0x4008856	            0x7f04	                            jg 0x400885c	      6350	ops.c	FUNCTION_72	FOR_1	IF_6
0x4008858	        0x488b1c24	                    mov rbx, qword [rsp]	      6356	ops.c	FUNCTION_72	FOR_1	ELSE_2
0x400885c	        0x488b4308	                mov rax, qword [rbx + 8]	      6359	ops.c	FUNCTION_72	FOR_1
0x4008860	            0x85c0	                           test eax, eax	      6360	ops.c	FUNCTION_72	FOR_1	IF_8
0x4008862	      0x4889442410	             mov qword [rsp + 0x10], rax	      6359	ops.c	FUNCTION_72	FOR_1
0x4008867	        0x8944240c	              mov dword [rsp + 0xc], eax	      6359	ops.c	FUNCTION_72	FOR_1
0x400886b	     0xf8437020000	                            je 0x4008aa8	      6360	ops.c	FUNCTION_72	FOR_1	IF_8
0x4008871	          0x83f801	                              cmp eax, 1	      6361	ops.c	FUNCTION_72	FOR_1	IF_8
0x4008874	     0xf84ce020000	                            je 0x4008b48	      6361	ops.c	FUNCTION_72	FOR_1	IF_8
0x400887a	        0x8b7c2424	            mov edi, dword [rsp + 0x24] 	      6365	ops.c	FUNCTION_72	FOR_1	IF_9
0x400887e	            0x85ff	                           test edi, edi	      6365	ops.c	FUNCTION_72	FOR_1	IF_9
0x4008880	            0x7e4d	                           jle 0x40088cf	      6365	ops.c	FUNCTION_72	FOR_1	IF_9
0x4008882	        0x8b742410	            mov esi, dword [rsp + 0x10] 	      6369	ops.c	FUNCTION_72	FOR_1	IF_9	FOR_2
0x4008886	            0x85f6	                           test esi, esi	      6369	ops.c	FUNCTION_72	FOR_1	IF_9	FOR_2
0x4008888	     0xf8e41030000	                           jle 0x4008bcf	      6369	ops.c	FUNCTION_72	FOR_1	IF_9	FOR_2
0x400888e	          0x4c8b23	                    mov r12, qword [rbx]	      6369	ops.c	FUNCTION_72	FOR_1	IF_9	FOR_2
0x4008891	      0x48895c2418	             mov qword [rsp + 0x18], rbx	      6371	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0x4008896	          0x4c89e3	                            mov rbx, r12	      6371	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0x4008899	      0x448b64240c	            mov r12d, dword [rsp + 0xc] 	      6371	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0x400889e	          0x4531ed	                          xor r13d, r13d	      6371	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0x40088a1	          0x4531ff	                          xor r15d, r15d	      6371	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0x40088a4	         0xf1f4000	                         nop dword [rax]	      6371	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0x40088a8	        0x4a8b3ceb	            mov rdi, qword [rbx + r13*8]	      6370	ops.c	FUNCTION_72	FOR_1	IF_9	CALL_6
0x40088ac	        0x4983c501	                              add r13, 1	      6370	ops.c	FUNCTION_72	FOR_1	IF_9	CALL_6
0x40088b0	      0xe800000000	                          call 0x40088b5	      6370	ops.c	FUNCTION_72	FOR_1	IF_9	CALL_6
0x40088b5	          0x4539ec	                          cmp r12d, r13d	      6369	ops.c	FUNCTION_72	FOR_1	IF_9	FOR_2
0x40088b8	      0x4d8d7c0701	                lea r15, [r15 + rax + 1]	      6370	ops.c	FUNCTION_72	FOR_1	IF_9	CALL_6
0x40088bd	            0x7fe9	                            jg 0x40088a8	      6369	ops.c	FUNCTION_72	FOR_1	IF_9	FOR_2
0x40088bf	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	      6369	ops.c	FUNCTION_72	FOR_1	IF_9	FOR_2
0x40088c4	      0x4c397c2428	            cmp qword [rsp + 0x28], r15 	      6371	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0x40088c9	     0xf8cd9010000	                            jl 0x4008aa8	      6371	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0x40088cf	      0x440fb66b10	          movzx r13d, byte [rbx + 0x10] 	      6371	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0x40088d4	        0x4180fd01	                             cmp r13b, 1	      6375	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x40088d8	    0x41b900000000	                              mov r9d, 0	      6378	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x40088de	            0x7458	                            je 0x4008938	      6375	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x40088e0	    0x41b900000000	                              mov r9d, 0	      6381	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x40088e6	            0x7250	                            jb 0x4008938	      6375	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x40088e8	        0x4180fd02	                             cmp r13b, 2	      6375	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x40088ec	    0x41b900000000	                              mov r9d, 0	      6384	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x40088f2	            0x7444	                            je 0x4008938	      6375	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x40088f4	      0xba05000000	                              mov edx, 5	      6387	ops.c	FUNCTION_72	FOR_1	SWITCH_1	CALL_7
0x40088f9	      0xbe00000000	                              mov esi, 0	      6387	ops.c	FUNCTION_72	FOR_1	SWITCH_1	CALL_7
0x40088fe	            0x31ff	                            xor edi, edi	      6387	ops.c	FUNCTION_72	FOR_1	SWITCH_1	CALL_7
0x4008900	      0xe800000000	                          call 0x4008905	      6387	ops.c	FUNCTION_72	FOR_1	SWITCH_1	CALL_7
0x4008905	    0x488b3d000000	            mov rdi, qword [0x0400890c] 	        33	stdio2.h	FUNCTION_104	CALL_1
0x400890c	          0x4889c1	                            mov rcx, rax	        33	stdio2.h	FUNCTION_104	CALL_1
0x400890f	        0x450fb6c5	                         movzx r8d, r13b	        33	stdio2.h	FUNCTION_104	CALL_1
0x4008913	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_104	CALL_1
0x400891a	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_104	CALL_1
0x400891f	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_104	CALL_1
0x4008921	      0xe800000000	                          call 0x4008926	        33	stdio2.h	FUNCTION_104	CALL_1
0x4008926	    0x488b3d000000	            mov rdi, qword [0x0400892d] 	      6389	ops.c	FUNCTION_72	FOR_1	SWITCH_1	CALL_8
0x400892d	      0xe800000000	                          call 0x4008932	      6389	ops.c	FUNCTION_72	FOR_1	SWITCH_1	CALL_8
0x4008932	    0x41b900000000	                              mov r9d, 0	      6390	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x4008938	        0x488b0424	                    mov rax, qword [rsp]	      6393	ops.c	FUNCTION_72	FOR_1	IF_11
0x400893c	    0x483b05000000	            cmp rax, qword [0x04008943] 	      6393	ops.c	FUNCTION_72	FOR_1	IF_11
0x4008943	     0xf84a1020000	                            je 0x4008bea	      6393	ops.c	FUNCTION_72	FOR_1	IF_11
0x4008949	        0x418d4630	                   lea eax, [r14 + 0x30]	      6393	ops.c	FUNCTION_72	FOR_1	IF_11
0x400894d	        0x4183fe09	                             cmp r14d, 9	      4212	ops.c	FUNCTION_51	ELSE_1	IF_2
0x4008951	          0x4189c7	                           mov r15d, eax	      4212	ops.c	FUNCTION_51	ELSE_1	IF_2
0x4008954	            0x7e11	                           jle 0x4008967	      4212	ops.c	FUNCTION_51	ELSE_1	IF_2
0x4008956	        0x4183fe24	                          cmp r14d, 0x24	      4214	ops.c	FUNCTION_51	ELSE_2	IF_3
0x400895a	     0xf84c3020000	                            je 0x4008c23	      4214	ops.c	FUNCTION_51	ELSE_2	IF_3
0x4008960	        0x418d4657	                   lea eax, [r14 + 0x57]	      4214	ops.c	FUNCTION_51	ELSE_2	IF_3
0x4008964	          0x4189c7	                           mov r15d, eax	      4214	ops.c	FUNCTION_51	ELSE_2	IF_3
0x4008967	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_35
0x4008969	          0x4489f9	                           mov ecx, r15d	        97	stdio2.h	CALL_35
0x400896c	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_35
0x4008971	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_35
0x4008976	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_35
0x4008979	      0x4c894c2418	              mov qword [rsp + 0x18], r9	        97	stdio2.h	CALL_35
0x400897e	      0xe800000000	                          call 0x4008983	        97	stdio2.h	CALL_35
0x4008983	    0x44393d000000	           cmp dword [0x0400898a], r15d 	      6397	ops.c	FUNCTION_72	FOR_1	IF_12
0x400898a	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	      6397	ops.c	FUNCTION_72	FOR_1	IF_12
0x400898f	     0xf8423020000	                            je 0x4008bb8	      6397	ops.c	FUNCTION_72	FOR_1	IF_12
0x4008995	        0x448b4314	            mov r8d, dword [rbx + 0x14] 	        97	stdio2.h	CALL_35
0x4008999	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_35
0x400899b	          0x4c89c9	                             mov rcx, r9	        97	stdio2.h	CALL_35
0x400899e	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_35
0x40089a3	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_35
0x40089a8	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_35
0x40089ab	      0xe800000000	                          call 0x40089b0	        97	stdio2.h	CALL_35
0x40089b0	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      6402	ops.c	FUNCTION_72	FOR_1	IF_13
0x40089b4	            0x85c0	                           test eax, eax	      6402	ops.c	FUNCTION_72	FOR_1	IF_13
0x40089b6	     0xf8e24010000	                           jle 0x4008ae0	      6402	ops.c	FUNCTION_72	FOR_1	IF_13
0x40089bc	        0x8b4c2410	            mov ecx, dword [rsp + 0x10] 	      6402	ops.c	FUNCTION_72	FOR_1	IF_13
0x40089c0	            0x39c8	                            cmp eax, ecx	      6402	ops.c	FUNCTION_72	FOR_1	IF_13
0x40089c2	     0xf8d18010000	                           jge 0x4008ae0	      6402	ops.c	FUNCTION_72	FOR_1	IF_13
0x40089c8	        0x8944240c	              mov dword [rsp + 0xc], eax	      6402	ops.c	FUNCTION_72	FOR_1	IF_13
0x40089cc	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      6402	ops.c	FUNCTION_72	FOR_1	IF_13
0x40089d0	          0x4531e4	                          xor r12d, r12d	      6402	ops.c	FUNCTION_72	FOR_1	IF_13
0x40089d3	          0x83e801	                              sub eax, 1	      6402	ops.c	FUNCTION_72	FOR_1	IF_13
0x40089d6	    0x4c8d2cc50800	                    lea r13, [rax*8 + 8]	      6402	ops.c	FUNCTION_72	FOR_1	IF_13
0x40089de	            0x6690	                                     nop	      6402	ops.c	FUNCTION_72	FOR_1	IF_13
0x40089e0	          0x4889ee	                            mov rsi, rbp	      6406	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_10
0x40089e3	      0xbf09000000	                              mov edi, 9	      6406	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_10
0x40089e8	      0xe800000000	                          call 0x40089ed	      6406	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_10
0x40089ed	          0x488b03	                    mov rax, qword [rbx]	      6407	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_11
0x40089f0	          0x4889ef	                            mov rdi, rbp	      6407	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_11
0x40089f3	        0x4a8b3420	              mov rsi, qword [rax + r12]	      6407	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_11
0x40089f7	        0x4983c408	                              add r12, 8	      6407	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_11
0x40089fb	      0xe800000000	                          call 0x4008a00	      6407	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_11
0x4008a00	          0x4d39ec	                            cmp r12, r13	      6404	ops.c	FUNCTION_72	FOR_1	FOR_3
0x4008a03	            0x75db	                           jne 0x40089e0	      6404	ops.c	FUNCTION_72	FOR_1	FOR_3
0x4008a05	          0x4531c0	                            xor r8d, r8d	      6411	ops.c	FUNCTION_72	FOR_1
0x4008a08	        0x488b0424	                    mov rax, qword [rsp]	      6411	ops.c	FUNCTION_72	FOR_1
0x4008a0c	    0x483905000000	            cmp qword [0x04008a13], rax 	      6411	ops.c	FUNCTION_72	FOR_1
0x4008a13	        0x410f94c0	                                sete r8b	      6411	ops.c	FUNCTION_72	FOR_1
0x4008a17	    0x443b3d000000	           cmp r15d, dword [0x04008a1e] 	      6422	ops.c	FUNCTION_72	FOR_1	IF_15
0x4008a1e	     0xf845c010000	                            je 0x4008b80	      6422	ops.c	FUNCTION_72	FOR_1	IF_15
0x4008a24	          0x8b4314	            mov eax, dword [rbx + 0x14] 	        97	stdio2.h	CALL_35
0x4008a27	          0xff7318	                 push qword [rbx + 0x18]	        97	stdio2.h	CALL_35
0x4008a2a	          0x4589f1	                           mov r9d, r14d	        97	stdio2.h	CALL_35
0x4008a2d	              0x50	                                push rax	        97	stdio2.h	CALL_35
0x4008a2e	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	        97	stdio2.h	CALL_35
0x4008a32	              0x50	                                push rax	        97	stdio2.h	CALL_35
0x4008a33	         0xfb64310	           movzx eax, byte [rbx + 0x10] 	        97	stdio2.h	CALL_35
0x4008a37	              0x50	                                push rax	        97	stdio2.h	CALL_35
0x4008a38	      0xb903000000	                              mov ecx, 3	        97	stdio2.h	CALL_35
0x4008a3d	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_35
0x4008a42	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_35
0x4008a47	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_35
0x4008a4a	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_35
0x4008a4c	          0x4531ed	                          xor r13d, r13d	        97	stdio2.h	CALL_35
0x4008a4f	      0xe800000000	                          call 0x4008a54	        97	stdio2.h	CALL_35
0x4008a54	        0x4883c420	                           add rsp, 0x20	        97	stdio2.h	CALL_35
0x4008a58	      0x448b7c240c	            mov r15d, dword [rsp + 0xc] 	        97	stdio2.h	CALL_35
0x4008a5d	    0x41bcb9010000	                         mov r12d, 0x1b9	        97	stdio2.h	CALL_35
0x4008a63	       0xf1f440000	                   nop dword [rax + rax]	        97	stdio2.h	CALL_35
0x4008a68	          0x4889ee	                            mov rsi, rbp	      6431	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_12
0x4008a6b	      0xbf2c000000	                           mov edi, 0x2c	      6431	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_12
0x4008a70	      0xe800000000	                          call 0x4008a75	      6431	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_12
0x4008a75	          0x488b03	                    mov rax, qword [rbx]	      6433	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_13
0x4008a78	      0x418d5424ff	                      lea edx, [r12 - 1]	      6432	ops.c	FUNCTION_72	FOR_1	FOR_4
0x4008a7d	          0x4889ef	                            mov rdi, rbp	      6433	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_13
0x4008a80	        0x4a8b34e8	            mov rsi, qword [rax + r13*8]	      6433	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_13
0x4008a84	        0x4983c501	                              add r13, 1	      6433	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_13
0x4008a88	      0xe800000000	                          call 0x4008a8d	      6433	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_13
0x4008a8d	          0x4539ef	                          cmp r15d, r13d	      6429	ops.c	FUNCTION_72	FOR_1	FOR_4
0x4008a90	          0x4189c4	                           mov r12d, eax	      6433	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_13
0x4008a93	            0x7fd3	                            jg 0x4008a68	      6429	ops.c	FUNCTION_72	FOR_1	FOR_4
0x4008a95	          0x4889ee	                            mov rsi, rbp	      6436	ops.c	FUNCTION_72	FOR_1	CALL_14
0x4008a98	      0xbf0a000000	                            mov edi, 0xa	      6436	ops.c	FUNCTION_72	FOR_1	CALL_14
0x4008a9d	      0xe800000000	                          call 0x4008aa2	      6436	ops.c	FUNCTION_72	FOR_1	CALL_14
0x4008aa2	    0x660f1f440000	                    nop word [rax + rax]	      6436	ops.c	FUNCTION_72	FOR_1	CALL_14
0x4008aa8	        0x4183c601	                             add r14d, 1	      6334	ops.c	FUNCTION_72	FOR_1
0x4008aac	      0x4883042420	                   add qword [rsp], 0x20	      6334	ops.c	FUNCTION_72	FOR_1
0x4008ab1	        0x4183fe28	                          cmp r14d, 0x28	      6334	ops.c	FUNCTION_72	FOR_1
0x4008ab5	     0xf8555fdffff	                           jne 0x4008810	      6334	ops.c	FUNCTION_72	FOR_1
0x4008abb	        0x4883c438	                           add rsp, 0x38	      6439	ops.c	FUNCTION_72
0x4008abf	              0x5b	                                 pop rbx	      6439	ops.c	FUNCTION_72
0x4008ac0	              0x5d	                                 pop rbp	      6439	ops.c	FUNCTION_72
0x4008ac1	            0x415c	                                 pop r12	      6439	ops.c	FUNCTION_72
0x4008ac3	            0x415d	                                 pop r13	      6439	ops.c	FUNCTION_72
0x4008ac5	            0x415e	                                 pop r14	      6439	ops.c	FUNCTION_72
0x4008ac7	            0x415f	                                 pop r15	      6439	ops.c	FUNCTION_72
0x4008ac9	              0xc3	                                     ret	      6439	ops.c	FUNCTION_72
0x4008aca	    0x660f1f440000	                    nop word [rax + rax]	      6439	ops.c	FUNCTION_72
0x4008ad0	        0x488b0424	                    mov rax, qword [rsp]	      6353	ops.c	FUNCTION_72	FOR_1	ELSE_1	IF_7
0x4008ad4	        0x48833800	                      cmp qword [rax], 0	      6353	ops.c	FUNCTION_72	FOR_1	ELSE_1	IF_7
0x4008ad8	     0xf857afdffff	                           jne 0x4008858	      6353	ops.c	FUNCTION_72	FOR_1	ELSE_1	IF_7
0x4008ade	            0xebc8	                           jmp 0x4008aa8	      6353	ops.c	FUNCTION_72	FOR_1	ELSE_1	IF_7
0x4008ae0	        0x8b4c2410	            mov ecx, dword [rsp + 0x10] 	      6404	ops.c	FUNCTION_72	FOR_1	FOR_3
0x4008ae4	            0x85c9	                           test ecx, ecx	      6404	ops.c	FUNCTION_72	FOR_1	FOR_3
0x4008ae6	     0xf8fe0feffff	                            jg 0x40089cc	      6404	ops.c	FUNCTION_72	FOR_1	FOR_3
0x4008aec	          0x4531c0	                            xor r8d, r8d	      6411	ops.c	FUNCTION_72	FOR_1
0x4008aef	        0x488b0424	                    mov rax, qword [rsp]	      6411	ops.c	FUNCTION_72	FOR_1
0x4008af3	    0x483905000000	            cmp qword [0x04008afa], rax 	      6411	ops.c	FUNCTION_72	FOR_1
0x4008afa	        0x410f94c0	                                sete r8b	      6411	ops.c	FUNCTION_72	FOR_1
0x4008afe	    0x443b3d000000	           cmp r15d, dword [0x04008b05] 	      6422	ops.c	FUNCTION_72	FOR_1	IF_15
0x4008b05	     0xf84fb000000	                            je 0x4008c06	      6422	ops.c	FUNCTION_72	FOR_1	IF_15
0x4008b0b	          0x8b4314	            mov eax, dword [rbx + 0x14] 	        97	stdio2.h	CALL_35
0x4008b0e	          0xff7318	                 push qword [rbx + 0x18]	        97	stdio2.h	CALL_35
0x4008b11	          0x4589f1	                           mov r9d, r14d	        97	stdio2.h	CALL_35
0x4008b14	              0x50	                                push rax	        97	stdio2.h	CALL_35
0x4008b15	        0x8b442420	            mov eax, dword [rsp + 0x20] 	        97	stdio2.h	CALL_35
0x4008b19	              0x50	                                push rax	        97	stdio2.h	CALL_35
0x4008b1a	         0xfb64310	           movzx eax, byte [rbx + 0x10] 	        97	stdio2.h	CALL_35
0x4008b1e	              0x50	                                push rax	        97	stdio2.h	CALL_35
0x4008b1f	      0xb903000000	                              mov ecx, 3	        97	stdio2.h	CALL_35
0x4008b24	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_35
0x4008b29	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_35
0x4008b2e	          0x4889ef	                            mov rdi, rbp	        97	stdio2.h	CALL_35
0x4008b31	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_35
0x4008b33	      0xe800000000	                          call 0x4008b38	        97	stdio2.h	CALL_35
0x4008b38	        0x4883c420	                           add rsp, 0x20	        97	stdio2.h	CALL_35
0x4008b3c	      0xe954ffffff	                           jmp 0x4008a95	        97	stdio2.h	CALL_35
0x4008b41	     0xf1f80000000	                         nop dword [rax]	        97	stdio2.h	CALL_35
0x4008b48	      0x440fb66b10	          movzx r13d, byte [rbx + 0x10] 	      6361	ops.c	FUNCTION_72	FOR_1	IF_8
0x4008b4d	          0x4584ed	                         test r13b, r13b	      6361	ops.c	FUNCTION_72	FOR_1	IF_8
0x4008b50	            0x754e	                           jne 0x4008ba0	      6361	ops.c	FUNCTION_72	FOR_1	IF_8
0x4008b52	          0x4c8b23	                    mov r12, qword [rbx]	      6362	ops.c	FUNCTION_72	FOR_1	IF_8
0x4008b55	        0x498b0424	                    mov rax, qword [r12]	      6362	ops.c	FUNCTION_72	FOR_1	IF_8
0x4008b59	          0x803800	                       cmp byte [rax], 0	      6362	ops.c	FUNCTION_72	FOR_1	IF_8
0x4008b5c	     0xf8446ffffff	                            je 0x4008aa8	      6362	ops.c	FUNCTION_72	FOR_1	IF_8
0x4008b62	        0x8b442424	            mov eax, dword [rsp + 0x24] 	      6365	ops.c	FUNCTION_72	FOR_1	IF_9
0x4008b66	    0x41b900000000	                              mov r9d, 0	      6381	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0x4008b6c	            0x85c0	                           test eax, eax	      6365	ops.c	FUNCTION_72	FOR_1	IF_9
0x4008b6e	     0xf8f1dfdffff	                            jg 0x4008891	      6365	ops.c	FUNCTION_72	FOR_1	IF_9
0x4008b74	      0xe9bffdffff	                           jmp 0x4008938	      6365	ops.c	FUNCTION_72	FOR_1	IF_9
0x4008b79	     0xf1f80000000	                         nop dword [rax]	      6365	ops.c	FUNCTION_72	FOR_1	IF_9
0x4008b80	          0x8b4314	            mov eax, dword [rbx + 0x14] 	        97	stdio2.h	CALL_35
0x4008b83	          0xff7318	                 push qword [rbx + 0x18]	        97	stdio2.h	CALL_35
0x4008b86	          0x4589f1	                           mov r9d, r14d	        97	stdio2.h	CALL_35
0x4008b89	        0x4183c802	                               or r8d, 2	        97	stdio2.h	CALL_35
0x4008b8d	              0x50	                                push rax	        97	stdio2.h	CALL_35
0x4008b8e	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	        97	stdio2.h	CALL_35
0x4008b92	              0x50	                                push rax	        97	stdio2.h	CALL_35
0x4008b93	         0xfb64310	           movzx eax, byte [rbx + 0x10] 	        97	stdio2.h	CALL_35
0x4008b97	              0x50	                                push rax	        97	stdio2.h	CALL_35
0x4008b98	      0xe99bfeffff	                           jmp 0x4008a38	        97	stdio2.h	CALL_35
0x4008b9d	           0xf1f00	                         nop dword [rax]	        97	stdio2.h	CALL_35
0x4008ba0	        0x8b542424	            mov edx, dword [rsp + 0x24] 	      6365	ops.c	FUNCTION_72	FOR_1	IF_9
0x4008ba4	            0x85d2	                           test edx, edx	      6365	ops.c	FUNCTION_72	FOR_1	IF_9
0x4008ba6	     0xf8fe2fcffff	                            jg 0x400888e	      6365	ops.c	FUNCTION_72	FOR_1	IF_9
0x4008bac	      0xe923fdffff	                           jmp 0x40088d4	      6365	ops.c	FUNCTION_72	FOR_1	IF_9
0x4008bb1	     0xf1f80000000	                         nop dword [rax]	      6365	ops.c	FUNCTION_72	FOR_1	IF_9
0x4008bb8	          0x4889ee	                            mov rsi, rbp	        97	stdio2.h	CALL_35
0x4008bbb	      0xbf40000000	                           mov edi, 0x40	        97	stdio2.h	CALL_35
0x4008bc0	      0xe800000000	                          call 0x4008bc5	        97	stdio2.h	CALL_35
0x4008bc5	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	        97	stdio2.h	CALL_35
0x4008bca	      0xe9c6fdffff	                           jmp 0x4008995	        97	stdio2.h	CALL_35
0x4008bcf	          0x4531ff	                          xor r15d, r15d	      6369	ops.c	FUNCTION_72	FOR_1	IF_9	FOR_2
0x4008bd2	      0xe9edfcffff	                           jmp 0x40088c4	      6369	ops.c	FUNCTION_72	FOR_1	IF_9	FOR_2
0x4008bd7	      0xbf22000000	                           mov edi, 0x22	      6327	ops.c	FUNCTION_72	CALL_4
0x4008bdc	      0xe800000000	                          call 0x4008be1	      6327	ops.c	FUNCTION_72	CALL_4
0x4008be1	        0x89442420	             mov dword [rsp + 0x20], eax	      6327	ops.c	FUNCTION_72	CALL_4
0x4008be5	      0xe9d9fbffff	                           jmp 0x40087c3	      6327	ops.c	FUNCTION_72	CALL_4
0x4008bea	          0x4889ee	                            mov rsi, rbp	        97	stdio2.h	CALL_35
0x4008bed	      0xbf22000000	                           mov edi, 0x22	        97	stdio2.h	CALL_35
0x4008bf2	      0x4c894c2418	              mov qword [rsp + 0x18], r9	        97	stdio2.h	CALL_35
0x4008bf7	      0xe800000000	                          call 0x4008bfc	        97	stdio2.h	CALL_35
0x4008bfc	      0x4c8b4c2418	              mov r9, qword [rsp + 0x18]	        97	stdio2.h	CALL_35
0x4008c01	      0xe943fdffff	                           jmp 0x4008949	        97	stdio2.h	CALL_35
0x4008c06	          0x8b4314	            mov eax, dword [rbx + 0x14] 	        97	stdio2.h	CALL_35
0x4008c09	          0xff7318	                 push qword [rbx + 0x18]	        97	stdio2.h	CALL_35
0x4008c0c	          0x4589f1	                           mov r9d, r14d	        97	stdio2.h	CALL_35
0x4008c0f	        0x4183c802	                               or r8d, 2	        97	stdio2.h	CALL_35
0x4008c13	              0x50	                                push rax	        97	stdio2.h	CALL_35
0x4008c14	        0x8b442420	            mov eax, dword [rsp + 0x20] 	        97	stdio2.h	CALL_35
0x4008c18	              0x50	                                push rax	        97	stdio2.h	CALL_35
0x4008c19	         0xfb64310	           movzx eax, byte [rbx + 0x10] 	        97	stdio2.h	CALL_35
0x4008c1d	              0x50	                                push rax	        97	stdio2.h	CALL_35
0x4008c1e	      0xe9fcfeffff	                           jmp 0x4008b1f	        97	stdio2.h	CALL_35
0x4008c23	    0x41bf2d000000	                          mov r15d, 0x2d	      4215	ops.c	FUNCTION_51	ELSE_2	IF_3
0x4008c29	      0xe939fdffff	                           jmp 0x4008967	      4215	ops.c	FUNCTION_51	ELSE_2	IF_3
block_prep	SWITCH,0:DO,0:ELSE,7:functions,0:FOR,0:IF,14:WHILE,2:CALL,5	254
0x4000040	            0x4157	                                push r15	      5364	ops.c	FUNCTION_65
0x4000042	            0x4156	                                push r14	      5364	ops.c	FUNCTION_65
0x4000044	            0x4155	                                push r13	      5364	ops.c	FUNCTION_65
0x4000046	            0x4154	                                push r12	      5364	ops.c	FUNCTION_65
0x4000048	          0x4989fd	                            mov r13, rdi	      5364	ops.c	FUNCTION_65
0x400004b	              0x55	                                push rbp	      5364	ops.c	FUNCTION_65
0x400004c	              0x53	                                push rbx	      5364	ops.c	FUNCTION_65
0x400004d	          0x4889d7	                            mov rdi, rdx	      5386	ops.c	FUNCTION_65	CALL_1
0x4000050	          0x4889f3	                            mov rbx, rsi	      5364	ops.c	FUNCTION_65
0x4000053	        0x4883ec28	                           sub rsp, 0x28	      5364	ops.c	FUNCTION_65
0x4000057	    0xc70600000000	                      mov dword [rsi], 0	      5372	ops.c	FUNCTION_65
0x400005d	    0xc74604000000	                  mov dword [rsi + 4], 0	      5373	ops.c	FUNCTION_65
0x4000064	    0xc74608000000	                  mov dword [rsi + 8], 0	      5374	ops.c	FUNCTION_65
0x400006b	    0xc7461c000000	               mov dword [rsi + 0x1c], 0	      5375	ops.c	FUNCTION_65
0x4000072	    0xc74620000000	               mov dword [rsi + 0x20], 0	      5376	ops.c	FUNCTION_65
0x4000079	    0xc74624000000	               mov dword [rsi + 0x24], 0	      5378	ops.c	FUNCTION_65
0x4000080	    0xc7462c000000	               mov dword [rsi + 0x2c], 0	      5379	ops.c	FUNCTION_65
0x4000087	    0xc74630000000	               mov dword [rsi + 0x30], 0	      5380	ops.c	FUNCTION_65
0x400008e	    0xc74634000000	               mov dword [rsi + 0x34], 0	      5381	ops.c	FUNCTION_65
0x4000095	    0xc74638000000	               mov dword [rsi + 0x38], 0	      5382	ops.c	FUNCTION_65
0x400009c	    0xc7463c000000	               mov dword [rsi + 0x3c], 0	      5384	ops.c	FUNCTION_65
0x40000a3	        0x894c240c	              mov dword [rsp + 0xc], ecx	      5364	ops.c	FUNCTION_65
0x40000a7	    0x64488b042528	                mov rax, qword fs:[0x28]	      5364	ops.c	FUNCTION_65
0x40000b0	      0x4889442418	             mov qword [rsp + 0x18], rax	      5364	ops.c	FUNCTION_65
0x40000b5	            0x31c0	                            xor eax, eax	      5364	ops.c	FUNCTION_65
0x40000b7	      0xe800000000	                          call 0x40000bc	      5386	ops.c	FUNCTION_65	CALL_1
0x40000bc	          0x8b531c	            mov edx, dword [rbx + 0x1c] 	      5389	ops.c	FUNCTION_65	WHILE_1
0x40000bf	          0x4989c4	                            mov r12, rax	      5386	ops.c	FUNCTION_65	CALL_1
0x40000c2	        0x418b4564	            mov eax, dword [r13 + 0x64] 	      5389	ops.c	FUNCTION_65	WHILE_1
0x40000c6	            0x39c2	                            cmp edx, eax	      5389	ops.c	FUNCTION_65	WHILE_1
0x40000c8	     0xf8df9020000	                           jge 0x40003c7	      5389	ops.c	FUNCTION_65	WHILE_1
0x40000ce	      0x41803c2400	                       cmp byte [r12], 0	      5389	ops.c	FUNCTION_65	WHILE_1
0x40000d3	     0xf84fc020000	                            je 0x40003d5	      5389	ops.c	FUNCTION_65	WHILE_1
0x40000d9	          0x4d89e7	                            mov r15, r12	      5389	ops.c	FUNCTION_65	WHILE_1
0x40000dc	            0xeb1a	                           jmp 0x40000f8	      5389	ops.c	FUNCTION_65	WHILE_1
0x40000de	            0x6690	                                     nop	      5389	ops.c	FUNCTION_65	WHILE_1
0x40000e0	        0x418b4564	            mov eax, dword [r13 + 0x64] 	      5389	ops.c	FUNCTION_65	WHILE_1
0x40000e4	          0x4c01fd	                            add rbp, r15	      5407	ops.c	FUNCTION_65	WHILE_1	CALL_4
0x40000e7	            0x39d0	                            cmp eax, edx	      5389	ops.c	FUNCTION_65	WHILE_1
0x40000e9	            0x7e6e	                           jle 0x4000159	      5389	ops.c	FUNCTION_65	WHILE_1
0x40000eb	        0x807d0000	                       cmp byte [rbp], 0	      5389	ops.c	FUNCTION_65	WHILE_1
0x40000ef	     0xf84ab010000	                            je 0x40002a0	      5389	ops.c	FUNCTION_65	WHILE_1
0x40000f5	          0x4989ef	                            mov r15, rbp	      5389	ops.c	FUNCTION_65	WHILE_1
0x40000f8	          0x4c89fe	                            mov rsi, r15	      5392	ops.c	FUNCTION_65	WHILE_1	CALL_2
0x40000fb	          0x4c89e7	                            mov rdi, r12	      5392	ops.c	FUNCTION_65	WHILE_1	CALL_2
0x40000fe	      0xe800000000	                          call 0x4000103	      5392	ops.c	FUNCTION_65	WHILE_1	CALL_2
0x4000103	          0x8b531c	            mov edx, dword [rbx + 0x1c] 	      5393	ops.c	FUNCTION_65	WHILE_1
0x4000106	          0x4189c6	                           mov r14d, eax	      5392	ops.c	FUNCTION_65	WHILE_1	CALL_2
0x4000109	             0x1c2	                            add edx, eax	      5393	ops.c	FUNCTION_65	WHILE_1
0x400010b	          0x89531c	             mov dword [rbx + 0x1c], edx	      5393	ops.c	FUNCTION_65	WHILE_1
0x400010e	        0x410fb637	                   movzx esi, byte [r15]	      5395	ops.c	FUNCTION_65	WHILE_1	IF_1	CALL_3
0x4000112	        0x4080fe20	                           cmp sil, 0x20	      5395	ops.c	FUNCTION_65	WHILE_1	IF_1	CALL_3
0x4000116	     0xf84f4000000	                            je 0x4000210	      5395	ops.c	FUNCTION_65	WHILE_1	IF_1	CALL_3
0x400011c	            0x31c0	                            xor eax, eax	      5403	ops.c	FUNCTION_65	WHILE_1	ELSE_1
0x400011e	            0x31ff	                            xor edi, edi	      5402	ops.c	FUNCTION_65	WHILE_1	ELSE_1
0x4000120	        0x4080fe09	                              cmp sil, 9	      5395	ops.c	FUNCTION_65	WHILE_1	IF_1	CALL_3
0x4000124	     0xf84e6000000	                            je 0x4000210	      5395	ops.c	FUNCTION_65	WHILE_1	IF_1	CALL_3
0x400012a	          0x894334	             mov dword [rbx + 0x34], eax	      5395	ops.c	FUNCTION_65	WHILE_1	IF_1	CALL_3
0x400012d	    0x8b0500000000	            mov eax, dword [0x04000133] 	      5407	ops.c	FUNCTION_65	WHILE_1	CALL_4
0x4000133	      0xbd01000000	                              mov ebp, 1	      5407	ops.c	FUNCTION_65	WHILE_1	CALL_4
0x4000138	          0x897b30	             mov dword [rbx + 0x30], edi	      5407	ops.c	FUNCTION_65	WHILE_1	CALL_4
0x400013b	            0x85c0	                           test eax, eax	      5407	ops.c	FUNCTION_65	WHILE_1	CALL_4
0x400013d	            0x74a1	                            je 0x40000e0	      5407	ops.c	FUNCTION_65	WHILE_1	CALL_4
0x400013f	          0x4c89ff	                            mov rdi, r15	      5407	ops.c	FUNCTION_65	WHILE_1	CALL_4
0x4000142	    0xff1500000000	                 call qword [0x04000148]	      5407	ops.c	FUNCTION_65	WHILE_1	CALL_4
0x4000148	          0x8b531c	            mov edx, dword [rbx + 0x1c] 	      5407	ops.c	FUNCTION_65	WHILE_1	CALL_4
0x400014b	          0x4863e8	                         movsxd rbp, eax	      5407	ops.c	FUNCTION_65	WHILE_1	CALL_4
0x400014e	        0x418b4564	            mov eax, dword [r13 + 0x64] 	      5389	ops.c	FUNCTION_65	WHILE_1
0x4000152	          0x4c01fd	                            add rbp, r15	      5407	ops.c	FUNCTION_65	WHILE_1	CALL_4
0x4000155	            0x39d0	                            cmp eax, edx	      5389	ops.c	FUNCTION_65	WHILE_1
0x4000157	            0x7f92	                            jg 0x40000eb	      5389	ops.c	FUNCTION_65	WHILE_1
0x4000159	            0x89d7	                            mov edi, edx	      5423	ops.c	FUNCTION_65	ELSE_2
0x400015b	        0x4489733c	            mov dword [rbx + 0x3c], r14d	      5409	ops.c	FUNCTION_65
0x400015f	            0x29c7	                            sub edi, eax	      5423	ops.c	FUNCTION_65	ELSE_2
0x4000161	            0x85ff	                           test edi, edi	      5424	ops.c	FUNCTION_65	ELSE_2	IF_4
0x4000163	            0x893b	                    mov dword [rbx], edi	      5423	ops.c	FUNCTION_65	ELSE_2
0x4000165	     0xf84bd000000	                            je 0x4000228	      5424	ops.c	FUNCTION_65	ELSE_2	IF_4
0x400016b	      0x448b44240c	              mov r8d, dword [rsp + 0xc]	      5424	ops.c	FUNCTION_65	ELSE_2	IF_4
0x4000170	          0x4585c0	                           test r8d, r8d	      5424	ops.c	FUNCTION_65	ELSE_2	IF_4
0x4000173	     0xf84af000000	                            je 0x4000228	      5424	ops.c	FUNCTION_65	ELSE_2	IF_4
0x4000179	        0x418b7568	            mov esi, dword [r13 + 0x68] 	      5428	ops.c	FUNCTION_65	ELSE_2	IF_5
0x400017d	          0x4589f0	                           mov r8d, r14d	      5425	ops.c	FUNCTION_65	ELSE_2	IF_4
0x4000180	      0x48896c2410	             mov qword [rsp + 0x10], rbp	      5426	ops.c	FUNCTION_65	ELSE_2
0x4000185	          0x4129f8	                            sub r8d, edi	      5425	ops.c	FUNCTION_65	ELSE_2	IF_4
0x4000188	          0x895320	             mov dword [rbx + 0x20], edx	      5427	ops.c	FUNCTION_65	ELSE_2
0x400018b	          0x448903	                    mov dword [rbx], r8d	      5425	ops.c	FUNCTION_65	ELSE_2	IF_4
0x400018e	            0x39d6	                            cmp esi, edx	      5428	ops.c	FUNCTION_65	ELSE_2	IF_5
0x4000190	     0xf8ca9000000	                            jl 0x400023f	      5428	ops.c	FUNCTION_65	ELSE_2	IF_5
0x4000196	        0x807d0000	                       cmp byte [rbp], 0	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x400019a	          0x4989e8	                             mov r8, rbp	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x400019d	            0x7518	                           jne 0x40001b7	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x400019f	      0xe994010000	                           jmp 0x4000338	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x40001a4	         0xf1f4000	                         nop dword [rax]	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x40001a8	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x40001ad	        0x41803800	                        cmp byte [r8], 0	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x40001b1	     0xf8481010000	                            je 0x4000338	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x40001b7	      0x488d742410	                   lea rsi, [rsp + 0x10]	      5461	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2	CALL_5
0x40001bc	          0x4c89e7	                            mov rdi, r12	      5461	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2	CALL_5
0x40001bf	        0x4c890424	                     mov qword [rsp], r8	      5461	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2	CALL_5
0x40001c3	      0xe800000000	                          call 0x40001c8	      5461	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2	CALL_5
0x40001c8	          0x8b5320	            mov edx, dword [rbx + 0x20] 	      5462	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x40001cb	        0x418b7568	            mov esi, dword [r13 + 0x68] 	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x40001cf	          0x4189c6	                           mov r14d, eax	      5461	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2	CALL_5
0x40001d2	        0x4c8b0424	                     mov r8, qword [rsp]	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x40001d6	             0x1c2	                            add edx, eax	      5462	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x40001d8	            0x39d6	                            cmp esi, edx	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x40001da	          0x895320	             mov dword [rbx + 0x20], edx	      5462	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x40001dd	            0x7dc9	                           jge 0x40001a8	      5457	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0x40001df	            0x29f2	                            sub edx, esi	      5484	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11
0x40001e1	          0x8d42ff	                      lea eax, [rdx - 1]	      5484	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11
0x40001e4	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      5485	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0x40001e8	          0x894304	                mov dword [rbx + 4], eax	      5484	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11
0x40001eb	            0x85d2	                           test edx, edx	      5485	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0x40001ed	     0xf8589010000	                           jne 0x400037c	      5485	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0x40001f3	            0x85c0	                           test eax, eax	      5485	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0x40001f5	     0xf85b3010000	                           jne 0x40003ae	      5485	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0x40001fb	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5485	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0x4000200	        0x44897338	            mov dword [rbx + 0x38], r14d	      5494	ops.c	FUNCTION_65	ELSE_2
0x4000204	      0xe91d010000	                           jmp 0x4000326	      5494	ops.c	FUNCTION_65	ELSE_2
0x4000209	     0xf1f80000000	                         nop dword [rax]	      5494	ops.c	FUNCTION_65	ELSE_2
0x4000210	          0x8b7b30	            mov edi, dword [rbx + 0x30] 	      5397	ops.c	FUNCTION_65	WHILE_1	IF_1
0x4000213	          0x8b4334	            mov eax, dword [rbx + 0x34] 	      5398	ops.c	FUNCTION_65	WHILE_1	IF_1
0x4000216	          0x4401f7	                           add edi, r14d	      5397	ops.c	FUNCTION_65	WHILE_1	IF_1
0x4000219	          0x83c001	                              add eax, 1	      5398	ops.c	FUNCTION_65	WHILE_1	IF_1
0x400021c	      0xe909ffffff	                           jmp 0x400012a	      5398	ops.c	FUNCTION_65	WHILE_1	IF_1
0x4000221	     0xf1f80000000	                         nop dword [rax]	      5398	ops.c	FUNCTION_65	WHILE_1	IF_1
0x4000228	        0x418b7568	            mov esi, dword [r13 + 0x68] 	      5428	ops.c	FUNCTION_65	ELSE_2	IF_5
0x400022c	      0x48896c2410	             mov qword [rsp + 0x10], rbp	      5426	ops.c	FUNCTION_65	ELSE_2
0x4000231	          0x895320	             mov dword [rbx + 0x20], edx	      5427	ops.c	FUNCTION_65	ELSE_2
0x4000234	            0x39d6	                            cmp esi, edx	      5428	ops.c	FUNCTION_65	ELSE_2	IF_5
0x4000236	     0xf8d5affffff	                           jge 0x4000196	      5428	ops.c	FUNCTION_65	ELSE_2	IF_5
0x400023c	          0x4189f8	                            mov r8d, edi	      5423	ops.c	FUNCTION_65	ELSE_2
0x400023f	        0x458b4d00	                    mov r9d, dword [r13]	      5433	ops.c	FUNCTION_65	ELSE_2	IF_5	IF_6
0x4000243	    0xc7432c010000	               mov dword [rbx + 0x2c], 1	      5431	ops.c	FUNCTION_65	ELSE_2	IF_5
0x400024a	        0x4183f911	                           cmp r9d, 0x11	      5433	ops.c	FUNCTION_65	ELSE_2	IF_5	IF_6
0x400024e	     0xf84ac000000	                            je 0x4000300	      5433	ops.c	FUNCTION_65	ELSE_2	IF_5	IF_6
0x4000254	        0x4183f912	                           cmp r9d, 0x12	      5435	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x4000258	     0xf8426010000	                            je 0x4000384	      5435	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x400025e	      0x448b5c240c	            mov r11d, dword [rsp + 0xc] 	      5443	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x4000263	          0x4189f0	                            mov r8d, esi	      5442	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4
0x4000266	          0x4129c0	                            sub r8d, eax	      5442	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4
0x4000269	        0x4183c001	                              add r8d, 1	      5442	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4
0x400026d	          0x4585db	                         test r11d, r11d	      5443	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x4000270	          0x448903	                    mov dword [rbx], r8d	      5442	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4
0x4000273	            0x7486	                            je 0x40001fb	      5443	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x4000275	        0x4183f904	                              cmp r9d, 4	      5443	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x4000279	            0x7411	                            je 0x400028c	      5443	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x400027b	            0x29f2	                            sub edx, esi	      5450	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x400027d	          0x4589f0	                           mov r8d, r14d	      5449	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x4000280	          0x8d42ff	                      lea eax, [rdx - 1]	      5450	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x4000283	          0x4129f8	                            sub r8d, edi	      5449	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x4000286	          0x448903	                    mov dword [rbx], r8d	      5448	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x4000289	          0x894304	                mov dword [rbx + 4], eax	      5450	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0x400028c	        0x44897338	            mov dword [rbx + 0x38], r14d	      5494	ops.c	FUNCTION_65	ELSE_2
0x4000290	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5494	ops.c	FUNCTION_65	ELSE_2
0x4000295	      0xe985000000	                           jmp 0x400031f	      5494	ops.c	FUNCTION_65	ELSE_2
0x400029a	    0x660f1f440000	                    nop word [rax + rax]	      5494	ops.c	FUNCTION_65	ELSE_2
0x40002a0	            0x89ee	                            mov esi, ebp	      5494	ops.c	FUNCTION_65	ELSE_2
0x40002a2	          0x4429e6	                           sub esi, r12d	      5494	ops.c	FUNCTION_65	ELSE_2
0x40002a5	        0x8b7c240c	              mov edi, dword [rsp + 0xc]	      5416	ops.c	FUNCTION_65	IF_2	IF_3
0x40002a9	        0x4489733c	            mov dword [rbx + 0x3c], r14d	      5409	ops.c	FUNCTION_65
0x40002ad	          0x895320	             mov dword [rbx + 0x20], edx	      5412	ops.c	FUNCTION_65	IF_2
0x40002b0	    0xc74324010000	               mov dword [rbx + 0x24], 1	      5414	ops.c	FUNCTION_65	IF_2
0x40002b7	            0x85ff	                           test edi, edi	      5416	ops.c	FUNCTION_65	IF_2	IF_3
0x40002b9	            0x7435	                            je 0x40002f0	      5416	ops.c	FUNCTION_65	IF_2	IF_3
0x40002bb	      0x41837d0012	                   cmp dword [r13], 0x12	      5416	ops.c	FUNCTION_65	IF_2	IF_3
0x40002c0	            0x742e	                            je 0x40002f0	      5416	ops.c	FUNCTION_65	IF_2	IF_3
0x40002c2	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5502	ops.c	FUNCTION_65
0x40002c7	    0x644833042528	                xor rax, qword fs:[0x28]	      5502	ops.c	FUNCTION_65
0x40002d0	          0x897318	             mov dword [rbx + 0x18], esi	      5500	ops.c	FUNCTION_65
0x40002d3	        0x48896b10	             mov qword [rbx + 0x10], rbp	      5501	ops.c	FUNCTION_65
0x40002d7	     0xf8505010000	                           jne 0x40003e2	      5502	ops.c	FUNCTION_65
0x40002dd	        0x4883c428	                           add rsp, 0x28	      5502	ops.c	FUNCTION_65
0x40002e1	              0x5b	                                 pop rbx	      5502	ops.c	FUNCTION_65
0x40002e2	              0x5d	                                 pop rbp	      5502	ops.c	FUNCTION_65
0x40002e3	            0x415c	                                 pop r12	      5502	ops.c	FUNCTION_65
0x40002e5	            0x415d	                                 pop r13	      5502	ops.c	FUNCTION_65
0x40002e7	            0x415e	                                 pop r14	      5502	ops.c	FUNCTION_65
0x40002e9	            0x415f	                                 pop r15	      5502	ops.c	FUNCTION_65
0x40002eb	              0xc3	                                     ret	      5502	ops.c	FUNCTION_65
0x40002ec	         0xf1f4000	                         nop dword [rax]	      5502	ops.c	FUNCTION_65
0x40002f0	        0x418b5568	            mov edx, dword [r13 + 0x68] 	      5417	ops.c	FUNCTION_65	IF_2	IF_3
0x40002f4	            0x29c2	                            sub edx, eax	      5417	ops.c	FUNCTION_65	IF_2	IF_3
0x40002f6	            0x89d0	                            mov eax, edx	      5417	ops.c	FUNCTION_65	IF_2	IF_3
0x40002f8	          0x83c001	                              add eax, 1	      5417	ops.c	FUNCTION_65	IF_2	IF_3
0x40002fb	          0x894304	                mov dword [rbx + 4], eax	      5417	ops.c	FUNCTION_65	IF_2	IF_3
0x40002fe	            0xebc2	                           jmp 0x40002c2	      5417	ops.c	FUNCTION_65	IF_2	IF_3
0x4000300	          0x4489f0	                           mov eax, r14d	      5434	ops.c	FUNCTION_65	ELSE_2	IF_5	IF_6
0x4000303	          0x4429c0	                            sub eax, r8d	      5434	ops.c	FUNCTION_65	ELSE_2	IF_5	IF_6
0x4000306	          0x894304	                mov dword [rbx + 4], eax	      5434	ops.c	FUNCTION_65	ELSE_2	IF_5	IF_6
0x4000309	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5434	ops.c	FUNCTION_65	ELSE_2	IF_5	IF_6
0x400030e	      0x448b4c240c	              mov r9d, dword [rsp + 0xc]	      5496	ops.c	FUNCTION_65	ELSE_2	IF_14
0x4000313	        0x44897338	            mov dword [rbx + 0x38], r14d	      5494	ops.c	FUNCTION_65	ELSE_2
0x4000317	          0x4585c9	                           test r9d, r9d	      5496	ops.c	FUNCTION_65	ELSE_2	IF_14
0x400031a	            0x740a	                            je 0x4000326	      5496	ops.c	FUNCTION_65	ELSE_2	IF_14
0x400031c	          0x448b03	                    mov r8d, dword [rbx]	      5496	ops.c	FUNCTION_65	ELSE_2	IF_14
0x400031f	          0x4585c0	                           test r8d, r8d	      5496	ops.c	FUNCTION_65	ELSE_2	IF_14
0x4000322	        0x490f45ef	                         cmovne rbp, r15	      5496	ops.c	FUNCTION_65	ELSE_2	IF_14
0x4000326	          0x4829e8	                            sub rax, rbp	      5498	ops.c	FUNCTION_65	ELSE_2
0x4000329	            0x89ee	                            mov esi, ebp	      5498	ops.c	FUNCTION_65	ELSE_2
0x400032b	          0x894308	                mov dword [rbx + 8], eax	      5498	ops.c	FUNCTION_65	ELSE_2
0x400032e	          0x4429e6	                           sub esi, r12d	      5498	ops.c	FUNCTION_65	ELSE_2
0x4000331	            0xeb8f	                           jmp 0x40002c2	      5498	ops.c	FUNCTION_65	ELSE_2
0x4000333	       0xf1f440000	                   nop dword [rax + rax]	      5498	ops.c	FUNCTION_65	ELSE_2
0x4000338	        0x8b4c240c	              mov ecx, dword [rsp + 0xc]	      5465	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0x400033c	        0x418b7d00	                    mov edi, dword [r13]	      5465	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0x4000340	            0x85c9	                           test ecx, ecx	      5465	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0x4000342	            0x7410	                            je 0x4000354	      5465	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0x4000344	          0x4189f9	                            mov r9d, edi	      5467	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0x4000347	          0x4c89c0	                             mov rax, r8	      5467	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0x400034a	        0x4183e1fd	                     and r9d, 0xfffffffd	      5467	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0x400034e	        0x4183f910	                           cmp r9d, 0x10	      5467	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0x4000352	            0x75ba	                           jne 0x400030e	      5467	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0x4000354	          0x83ff12	                           cmp edi, 0x12	      5476	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x4000357	    0xc74324010000	               mov dword [rbx + 0x24], 1	      5470	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0x400035e	            0x740c	                            je 0x400036c	      5476	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x4000360	    0x448b15000000	           mov r10d, dword [0x04000367] 	      5476	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x4000367	          0x4585d2	                         test r10d, r10d	      5476	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x400036a	            0x7433	                            je 0x400039f	      5476	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x400036c	        0x418b4514	            mov eax, dword [r13 + 0x14] 	      5477	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x4000370	            0x29d6	                            sub esi, edx	      5477	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x4000372	             0x1f0	                            add eax, esi	      5477	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x4000374	          0x894304	                mov dword [rbx + 4], eax	      5477	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x4000377	          0x4c89c0	                             mov rax, r8	      5477	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x400037a	            0xeb92	                           jmp 0x400030e	      5477	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x400037c	          0x448b03	                    mov r8d, dword [rbx]	      5477	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x400037f	      0xe908ffffff	                           jmp 0x400028c	      5477	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0x4000384	            0x29c6	                            sub esi, eax	      5437	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x4000386	          0x4489f1	                           mov ecx, r14d	      5438	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x4000389	      0x418d443001	                 lea eax, [r8 + rsi + 1]	      5437	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x400038e	            0x29c1	                            sub ecx, eax	      5438	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x4000390	            0x8903	                    mov dword [rbx], eax	      5437	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x4000392	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5437	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x4000397	          0x894b04	                mov dword [rbx + 4], ecx	      5438	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x400039a	      0xe96fffffff	                           jmp 0x400030e	      5438	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0x400039f	    0xc74304000000	                  mov dword [rbx + 4], 0	      5480	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	ELSE_6
0x40003a6	          0x4c89c0	                             mov rax, r8	      5480	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	ELSE_6
0x40003a9	      0xe960ffffff	                           jmp 0x400030e	      5480	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	ELSE_6
0x40003ae	          0x4489f1	                           mov ecx, r14d	      5487	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0x40003b1	            0x29c1	                            sub ecx, eax	      5487	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0x40003b3	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5488	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12	IF_13
0x40003b8	          0x894b04	                mov dword [rbx + 4], ecx	      5487	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0x40003bb	          0x4839e8	                            cmp rax, rbp	      5488	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12	IF_13
0x40003be	        0x490f45c0	                          cmovne rax, r8	      5488	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12	IF_13
0x40003c2	      0xe939feffff	                           jmp 0x4000200	      5488	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12	IF_13
0x40003c7	          0x4d89e7	                            mov r15, r12	      5386	ops.c	FUNCTION_65	CALL_1
0x40003ca	          0x4c89e5	                            mov rbp, r12	      5386	ops.c	FUNCTION_65	CALL_1
0x40003cd	          0x4531f6	                          xor r14d, r14d	      5365	ops.c	FUNCTION_65
0x40003d0	      0xe984fdffff	                           jmp 0x4000159	      5365	ops.c	FUNCTION_65
0x40003d5	          0x4c89e5	                            mov rbp, r12	      5389	ops.c	FUNCTION_65	WHILE_1
0x40003d8	            0x31f6	                            xor esi, esi	      5389	ops.c	FUNCTION_65	WHILE_1
0x40003da	          0x4531f6	                          xor r14d, r14d	      5365	ops.c	FUNCTION_65
0x40003dd	      0xe9c3feffff	                           jmp 0x40002a5	      5365	ops.c	FUNCTION_65
0x40003e2	      0xe800000000	                          call 0x40003e7	      5502	ops.c	FUNCTION_65
insert_reg	SWITCH,0:DO,0:ELSE,3:functions,0:FOR,1:IF,9:WHILE,0:CALL,10	234
0x40098d0	            0x4154	                                push r12	      1402	ops.c	FUNCTION_26
0x40098d2	              0x55	                                push rbp	      1402	ops.c	FUNCTION_26
0x40098d3	            0x89f5	                            mov ebp, esi	      1402	ops.c	FUNCTION_26
0x40098d5	              0x53	                                push rbx	      1402	ops.c	FUNCTION_26
0x40098d6	            0x89fb	                            mov ebx, edi	      1402	ops.c	FUNCTION_26
0x40098d8	        0x4883ec30	                           sub rsp, 0x30	      1402	ops.c	FUNCTION_26
0x40098dc	    0x64488b042528	                mov rax, qword fs:[0x28]	      1402	ops.c	FUNCTION_26
0x40098e5	      0x4889442428	             mov qword [rsp + 0x28], rax	      1402	ops.c	FUNCTION_26
0x40098ea	            0x31c0	                            xor eax, eax	      1402	ops.c	FUNCTION_26
0x40098ec	      0xe800000000	                          call 0x40098f1	      1414	ops.c	FUNCTION_26	CALL_1
0x40098f1	    0x8b0500000000	            mov eax, dword [0x040098f7] 	      1415	ops.c	FUNCTION_26	IF_1
0x40098f7	            0x85c0	                           test eax, eax	      1415	ops.c	FUNCTION_26	IF_1
0x40098f9	     0xf85f0000000	                           jne 0x40099ef	      1415	ops.c	FUNCTION_26	IF_1
0x40098ff	          0x83fb00	                              cmp ebx, 0	      1419	ops.c	FUNCTION_26	IF_2	CALL_2
0x4009902	     0xf85a3000000	                           jne 0x40099ab	      1419	ops.c	FUNCTION_26	IF_2	CALL_2
0x4009908	      0x488d54240c	                    lea rdx, [rsp + 0xc]	      1428	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_5
0x400990d	      0x488d742410	                   lea rsi, [rsp + 0x10]	      1428	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_5
0x4009912	      0xb901000000	                              mov ecx, 1	      1428	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_5
0x4009917	            0x89df	                            mov edi, ebx	      1428	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_5
0x4009919	      0xe800000000	                          call 0x400991e	      1428	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_5
0x400991e	            0x85c0	                           test eax, eax	      1428	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_5
0x4009920	     0xf8477010000	                            je 0x4009a9d	      1428	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_5
0x4009926	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1430	ops.c	FUNCTION_26	ELSE_1	IF_4	IF_5
0x400992b	          0x4885ff	                           test rdi, rdi	      1430	ops.c	FUNCTION_26	ELSE_1	IF_4	IF_5
0x400992e	     0xf84bb000000	                            je 0x40099ef	      1430	ops.c	FUNCTION_26	ELSE_1	IF_4	IF_5
0x4009934	      0x48897c2418	             mov qword [rsp + 0x18], rdi	      1430	ops.c	FUNCTION_26	ELSE_1	IF_4	IF_5
0x4009939	           0xfb607	                   movzx eax, byte [rdi]	      1430	ops.c	FUNCTION_26	ELSE_1	IF_4	IF_5
0x400993c	            0x84c0	                             test al, al	      1470	ops.c	FUNCTION_27	WHILE_1
0x400993e	            0x743d	                            je 0x400997d	      1470	ops.c	FUNCTION_27	WHILE_1
0x4009940	            0x85ed	                           test ebp, ebp	      1470	ops.c	FUNCTION_27	WHILE_1
0x4009942	          0x4889fe	                            mov rsi, rdi	      1470	ops.c	FUNCTION_27	WHILE_1
0x4009945	           0xf94c1	                                 sete cl	      1470	ops.c	FUNCTION_27	WHILE_1
0x4009948	            0xeb16	                           jmp 0x4009960	      1470	ops.c	FUNCTION_27	WHILE_1
0x400994a	    0x660f1f440000	                    nop word [rax + rax]	      1470	ops.c	FUNCTION_27	WHILE_1
0x4009950	            0x84c9	                             test cl, cl	      1481	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x4009952	            0x7418	                            je 0x400996c	      1481	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x4009954	        0x4883c601	                              add rsi, 1	      1482	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x4009958	      0x4889742418	             mov qword [rsp + 0x18], rsi	      1482	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x400995d	           0xfb606	                   movzx eax, byte [rsi]	      1482	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x4009960	          0x8d50e0	                   lea edx, [rax - 0x20]	      1476	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x4009963	          0x80fa5e	                            cmp dl, 0x5e	      1476	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x4009966	            0x76ec	                           jbe 0x4009954	      1476	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x4009968	            0x3c80	                            cmp al, 0x80	      1481	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x400996a	            0x74e4	                            je 0x4009950	      1481	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x400996c	          0x4839f7	                            cmp rdi, rsi	      1483	ops.c	FUNCTION_27	WHILE_1	IF_1
0x400996f	     0xf829c000000	                            jb 0x4009a11	      1483	ops.c	FUNCTION_27	WHILE_1	IF_1
0x4009975	            0x84c0	                             test al, al	      1487	ops.c	FUNCTION_27	WHILE_1	IF_2
0x4009977	     0xf85ac000000	                           jne 0x4009a29	      1487	ops.c	FUNCTION_27	WHILE_1	IF_2
0x400997d	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      1433	ops.c	FUNCTION_26	ELSE_1	IF_4	IF_6
0x4009981	            0x85d2	                           test edx, edx	      1433	ops.c	FUNCTION_26	ELSE_1	IF_4	IF_6
0x4009983	     0xf85e8000000	                           jne 0x4009a71	      1433	ops.c	FUNCTION_26	ELSE_1	IF_4	IF_6
0x4009989	      0xb801000000	                              mov eax, 1	      1404	ops.c	FUNCTION_26
0x400998e	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	      1458	ops.c	FUNCTION_26
0x4009993	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1458	ops.c	FUNCTION_26
0x400999c	     0xf8573020000	                           jne 0x4009c15	      1458	ops.c	FUNCTION_26
0x40099a2	        0x4883c430	                           add rsp, 0x30	      1458	ops.c	FUNCTION_26
0x40099a6	              0x5b	                                 pop rbx	      1458	ops.c	FUNCTION_26
0x40099a7	              0x5d	                                 pop rbp	      1458	ops.c	FUNCTION_26
0x40099a8	            0x415c	                                 pop r12	      1458	ops.c	FUNCTION_26
0x40099aa	              0xc3	                                     ret	      1458	ops.c	FUNCTION_26
0x40099ab	            0x7e15	                           jle 0x40099c2	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x40099ad	            0x89d8	                            mov eax, ebx	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x40099af	          0x83e0df	                     and eax, 0xffffffdf	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x40099b2	          0x83e841	                           sub eax, 0x41	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x40099b5	          0x83f819	                           cmp eax, 0x19	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x40099b8	            0x7639	                           jbe 0x40099f3	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x40099ba	          0x8d43d0	                   lea eax, [rbx - 0x30]	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x40099bd	          0x83f809	                              cmp eax, 9	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x40099c0	            0x7631	                           jbe 0x40099f3	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x40099c2	            0x89de	                            mov esi, ebx	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x40099c4	      0xbf00000000	                              mov edi, 0	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x40099c9	      0xe800000000	                          call 0x40099ce	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x40099ce	          0x4885c0	                           test rax, rax	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x40099d1	            0x7520	                           jne 0x40099f3	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x40099d3	          0x8d43de	                   lea eax, [rbx - 0x22]	       880	ops.c	FUNCTION_14	IF_1
0x40099d6	          0x83f83d	                           cmp eax, 0x3d	       880	ops.c	FUNCTION_14	IF_1
0x40099d9	     0xf8704020000	                            ja 0x4009be3	       880	ops.c	FUNCTION_14	IF_1
0x40099df	    0x48ba030b0000	         movabs rdx, 0x2000000000000b03 	       880	ops.c	FUNCTION_14	IF_1
0x40099e9	        0x480fa3c2	                             bt rdx, rax	       880	ops.c	FUNCTION_14	IF_1
0x40099ed	            0x7204	                            jb 0x40099f3	       880	ops.c	FUNCTION_14	IF_1
0x40099ef	            0x31c0	                            xor eax, eax	      1416	ops.c	FUNCTION_26	IF_1
0x40099f1	            0xeb9b	                           jmp 0x400998e	      1416	ops.c	FUNCTION_26	IF_1
0x40099f3	          0x83fb2a	                           cmp ebx, 0x2a	       964	ops.c	FUNCTION_16	IF_1
0x40099f6	     0xf85f7010000	                           jne 0x4009bf3	       964	ops.c	FUNCTION_16	IF_1
0x40099fc	    0x8b3d00000000	            mov edi, dword [0x04009a02] 	       966	ops.c	FUNCTION_16	IF_1	IF_2
0x4009a02	            0x85ff	                           test edi, edi	       966	ops.c	FUNCTION_16	IF_1	IF_2
0x4009a04	     0xf8584000000	                           jne 0x4009a8e	       966	ops.c	FUNCTION_16	IF_1	IF_2
0x4009a0a	            0x31db	                            xor ebx, ebx	       967	ops.c	FUNCTION_16	IF_1	IF_2
0x4009a0c	      0xe9f7feffff	                           jmp 0x4009908	       967	ops.c	FUNCTION_16	IF_1	IF_2
0x4009a11	          0x4829fe	                            sub rsi, rdi	      1484	ops.c	FUNCTION_27	WHILE_1	CALL_1
0x4009a14	      0xe800000000	                          call 0x4009a19	      1484	ops.c	FUNCTION_27	WHILE_1	CALL_1
0x4009a19	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1484	ops.c	FUNCTION_27	WHILE_1	CALL_1
0x4009a1e	           0xfb606	                   movzx eax, byte [rsi]	      1484	ops.c	FUNCTION_27	WHILE_1	CALL_1
0x4009a21	            0x84c0	                             test al, al	      1487	ops.c	FUNCTION_27	WHILE_1	IF_2
0x4009a23	     0xf8454ffffff	                            je 0x400997d	      1487	ops.c	FUNCTION_27	WHILE_1	IF_2
0x4009a29	    0x8b0d00000000	            mov ecx, dword [0x04009a2f] 	      1490	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_3
0x4009a2f	            0x85c9	                           test ecx, ecx	      1490	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_3
0x4009a31	            0x754d	                           jne 0x4009a80	      1490	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_3
0x4009a33	        0x488d4601	                      lea rax, [rsi + 1]	      1494	ops.c	FUNCTION_27	WHILE_1	IF_2	ELSE_1
0x4009a37	      0x4889442418	             mov qword [rsp + 0x18], rax	      1494	ops.c	FUNCTION_27	WHILE_1	IF_2	ELSE_1
0x4009a3c	           0xfb61e	                   movzx ebx, byte [rsi]	      1494	ops.c	FUNCTION_27	WHILE_1	IF_2	ELSE_1
0x4009a3f	            0x85ed	                           test ebp, ebp	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x4009a41	            0x741d	                            je 0x4009a60	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x4009a43	          0x83fb1f	                           cmp ebx, 0x1f	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x4009a46	           0xf9ec2	                                setle dl	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x4009a49	          0x83fb09	                              cmp ebx, 9	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x4009a4c	           0xf95c0	                                setne al	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x4009a4f	            0x84c2	                             test dl, al	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x4009a51	     0xf857d010000	                           jne 0x4009bd4	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x4009a57	          0x83fb7f	                           cmp ebx, 0x7f	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x4009a5a	     0xf8474010000	                            je 0x4009bd4	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x4009a60	            0x89df	                            mov edi, ebx	      1497	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_4
0x4009a62	      0xe800000000	                          call 0x4009a67	      1497	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_4
0x4009a67	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1497	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_4
0x4009a6c	      0xe9c8feffff	                           jmp 0x4009939	      1497	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_4
0x4009a71	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1434	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_7
0x4009a76	      0xe800000000	                          call 0x4009a7b	      1434	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_7
0x4009a7b	      0xe909ffffff	                           jmp 0x4009989	      1434	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_7
0x4009a80	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      1491	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_2
0x4009a85	      0xe800000000	                          call 0x4009a8a	      1491	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_2
0x4009a8a	            0x89c3	                            mov ebx, eax	      1491	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_2
0x4009a8c	            0xebb1	                           jmp 0x4009a3f	      1491	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_2
0x4009a8e	      0xbf00000000	                              mov edi, 0	       969	ops.c	FUNCTION_16	IF_1	CALL_1
0x4009a93	      0xe800000000	                          call 0x4009a98	       969	ops.c	FUNCTION_16	IF_1	CALL_1
0x4009a98	      0xe96bfeffff	                           jmp 0x4009908	       969	ops.c	FUNCTION_16	IF_1	CALL_1
0x4009a9d	            0x89df	                            mov edi, ebx	      1438	ops.c	FUNCTION_26	ELSE_2	IF_7	CALL_8
0x4009a9f	      0xe8fc80ffff	 call sym.get_yank_register.constprop.17	      1438	ops.c	FUNCTION_26	ELSE_2	IF_7	CALL_8
0x4009aa4	    0x488b15000000	            mov rdx, qword [0x04009aab] 	      1440	ops.c	FUNCTION_26	ELSE_2	IF_8
0x4009aab	            0x85c0	                           test eax, eax	      1439	ops.c	FUNCTION_26	ELSE_2	IF_7
0x4009aad	      0xb801000000	                              mov eax, 1	      1439	ops.c	FUNCTION_26	ELSE_2	IF_7
0x4009ab2	           0xf45e8	                         cmovne ebp, eax	      1439	ops.c	FUNCTION_26	ELSE_2	IF_7
0x4009ab5	          0x488b02	                    mov rax, qword [rdx]	      1440	ops.c	FUNCTION_26	ELSE_2	IF_8
0x4009ab8	          0x4885c0	                           test rax, rax	      1440	ops.c	FUNCTION_26	ELSE_2	IF_8
0x4009abb	     0xf842effffff	                            je 0x40099ef	      1440	ops.c	FUNCTION_26	ELSE_2	IF_8
0x4009ac1	      0x48837a0800	                  cmp qword [rdx + 8], 0	      1444	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1
0x4009ac6	     0xf8ebdfeffff	                           jle 0x4009989	      1444	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1
0x4009acc	            0x31db	                            xor ebx, ebx	      1444	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1
0x4009ace	        0x488b3cd8	            mov rdi, qword [rax + rbx*8]	      1446	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	CALL_9
0x4009ad2	      0x48897c2420	             mov qword [rsp + 0x20], rdi	      1446	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	CALL_9
0x4009ad7	           0xfb607	                   movzx eax, byte [rdi]	      1446	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	CALL_9
0x4009ada	            0x84c0	                             test al, al	      1470	ops.c	FUNCTION_27	WHILE_1
0x4009adc	            0x7437	                            je 0x4009b15	      1470	ops.c	FUNCTION_27	WHILE_1
0x4009ade	            0x85ed	                           test ebp, ebp	      1470	ops.c	FUNCTION_27	WHILE_1
0x4009ae0	          0x4889fe	                            mov rsi, rdi	      1470	ops.c	FUNCTION_27	WHILE_1
0x4009ae3	           0xf94c1	                                 sete cl	      1470	ops.c	FUNCTION_27	WHILE_1
0x4009ae6	            0xeb18	                           jmp 0x4009b00	      1470	ops.c	FUNCTION_27	WHILE_1
0x4009ae8	     0xf1f84000000	                   nop dword [rax + rax]	      1470	ops.c	FUNCTION_27	WHILE_1
0x4009af0	            0x84c9	                             test cl, cl	      1481	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x4009af2	            0x7418	                            je 0x4009b0c	      1481	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x4009af4	        0x4883c601	                              add rsi, 1	      1482	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x4009af8	      0x4889742420	             mov qword [rsp + 0x20], rsi	      1482	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x4009afd	           0xfb606	                   movzx eax, byte [rsi]	      1482	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x4009b00	          0x8d50e0	                   lea edx, [rax - 0x20]	      1476	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x4009b03	          0x80fa5e	                            cmp dl, 0x5e	      1476	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x4009b06	            0x76ec	                           jbe 0x4009af4	      1476	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x4009b08	            0x3c80	                            cmp al, 0x80	      1481	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x4009b0a	            0x74e4	                            je 0x4009af0	      1481	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x4009b0c	          0x4839f7	                            cmp rdi, rsi	      1483	ops.c	FUNCTION_27	WHILE_1	IF_1
0x4009b0f	            0x724f	                            jb 0x4009b60	      1483	ops.c	FUNCTION_27	WHILE_1	IF_1
0x4009b11	            0x84c0	                             test al, al	      1487	ops.c	FUNCTION_27	WHILE_1	IF_2
0x4009b13	            0x755f	                           jne 0x4009b74	      1487	ops.c	FUNCTION_27	WHILE_1	IF_2
0x4009b15	    0x488b05000000	            mov rax, qword [0x04009b1c] 	      1451	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	IF_9
0x4009b1c	        0x80781001	                cmp byte [rax + 0x10], 1	      1451	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	IF_9
0x4009b20	            0x740d	                            je 0x4009b2f	      1451	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	IF_9
0x4009b22	        0x488b5008	                mov rdx, qword [rax + 8]	      1451	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	IF_9
0x4009b26	        0x488d4aff	                      lea rcx, [rdx - 1]	      1451	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	IF_9
0x4009b2a	          0x4839d9	                            cmp rcx, rbx	      1451	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	IF_9
0x4009b2d	            0x7e15	                           jle 0x4009b44	      1451	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	IF_9
0x4009b2f	      0xbf0a000000	                            mov edi, 0xa	      1452	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	CALL_10
0x4009b34	      0xe800000000	                          call 0x4009b39	      1452	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	CALL_10
0x4009b39	    0x488b05000000	            mov rax, qword [0x04009b40] 	      1452	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	CALL_10
0x4009b40	        0x488b5008	                mov rdx, qword [rax + 8]	      1452	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	CALL_10
0x4009b44	        0x4883c301	                              add rbx, 1	      1444	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1
0x4009b48	          0x4839d3	                            cmp rbx, rdx	      1444	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1
0x4009b4b	     0xf8d38feffff	                           jge 0x4009989	      1444	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1
0x4009b51	          0x488b00	                    mov rax, qword [rax]	      1444	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1
0x4009b54	      0xe975ffffff	                           jmp 0x4009ace	      1444	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1
0x4009b59	     0xf1f80000000	                         nop dword [rax]	      1444	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1
0x4009b60	          0x4829fe	                            sub rsi, rdi	      1484	ops.c	FUNCTION_27	WHILE_1	CALL_1
0x4009b63	      0xe800000000	                          call 0x4009b68	      1484	ops.c	FUNCTION_27	WHILE_1	CALL_1
0x4009b68	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      1484	ops.c	FUNCTION_27	WHILE_1	CALL_1
0x4009b6d	           0xfb606	                   movzx eax, byte [rsi]	      1484	ops.c	FUNCTION_27	WHILE_1	CALL_1
0x4009b70	            0x84c0	                             test al, al	      1487	ops.c	FUNCTION_27	WHILE_1	IF_2
0x4009b72	            0x74a1	                            je 0x4009b15	      1487	ops.c	FUNCTION_27	WHILE_1	IF_2
0x4009b74	    0x8b0500000000	            mov eax, dword [0x04009b7a] 	      1490	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_3
0x4009b7a	            0x85c0	                           test eax, eax	      1490	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_3
0x4009b7c	            0x753b	                           jne 0x4009bb9	      1490	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_3
0x4009b7e	        0x488d4601	                      lea rax, [rsi + 1]	      1494	ops.c	FUNCTION_27	WHILE_1	IF_2	ELSE_1
0x4009b82	      0x4889442420	             mov qword [rsp + 0x20], rax	      1494	ops.c	FUNCTION_27	WHILE_1	IF_2	ELSE_1
0x4009b87	        0x440fb626	                  movzx r12d, byte [rsi]	      1494	ops.c	FUNCTION_27	WHILE_1	IF_2	ELSE_1
0x4009b8b	            0x85ed	                           test ebp, ebp	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x4009b8d	            0x7418	                            je 0x4009ba7	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x4009b8f	        0x4183fc1f	                          cmp r12d, 0x1f	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x4009b93	           0xf9ec1	                                setle cl	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x4009b96	        0x4183fc09	                             cmp r12d, 9	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x4009b9a	           0xf95c2	                                setne dl	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x4009b9d	            0x84d1	                             test cl, dl	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x4009b9f	            0x7527	                           jne 0x4009bc8	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x4009ba1	        0x4183fc7f	                          cmp r12d, 0x7f	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x4009ba5	            0x7421	                            je 0x4009bc8	      1495	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x4009ba7	          0x4489e7	                           mov edi, r12d	      1497	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_4
0x4009baa	      0xe800000000	                          call 0x4009baf	      1497	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_4
0x4009baf	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      1497	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_4
0x4009bb4	      0xe91effffff	                           jmp 0x4009ad7	      1497	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_4
0x4009bb9	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      1491	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_2
0x4009bbe	      0xe800000000	                          call 0x4009bc3	      1491	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_2
0x4009bc3	          0x4189c4	                           mov r12d, eax	      1491	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_2
0x4009bc6	            0xebc3	                           jmp 0x4009b8b	      1491	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_2
0x4009bc8	      0xbf16000000	                           mov edi, 0x16	      1496	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_3
0x4009bcd	      0xe800000000	                          call 0x4009bd2	      1496	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_3
0x4009bd2	            0xebd3	                           jmp 0x4009ba7	      1496	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_3
0x4009bd4	      0xbf16000000	                           mov edi, 0x16	      1496	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_3
0x4009bd9	      0xe800000000	                          call 0x4009bde	      1496	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_3
0x4009bde	      0xe97dfeffff	                           jmp 0x4009a60	      1496	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_3
0x4009be3	          0x83fb7e	                           cmp ebx, 0x7e	       888	ops.c	FUNCTION_14	IF_1
0x4009be6	     0xf841cfdffff	                            je 0x4009908	       888	ops.c	FUNCTION_14	IF_1
0x4009bec	            0x31c0	                            xor eax, eax	      1416	ops.c	FUNCTION_26	IF_1
0x4009bee	      0xe99bfdffff	                           jmp 0x400998e	      1416	ops.c	FUNCTION_26	IF_1
0x4009bf3	          0x83fb2b	                           cmp ebx, 0x2b	       971	ops.c	FUNCTION_16	ELSE_2	IF_3
0x4009bf6	            0x7522	                           jne 0x4009c1a	       971	ops.c	FUNCTION_16	ELSE_2	IF_3
0x4009bf8	    0x8b3500000000	            mov esi, dword [0x04009bfe] 	       973	ops.c	FUNCTION_16	ELSE_2	IF_3	IF_4
0x4009bfe	            0x85f6	                           test esi, esi	       973	ops.c	FUNCTION_16	ELSE_2	IF_3	IF_4
0x4009c00	     0xf8404feffff	                            je 0x4009a0a	       973	ops.c	FUNCTION_16	ELSE_2	IF_3	IF_4
0x4009c06	      0xbf00000000	                              mov edi, 0	       976	ops.c	FUNCTION_16	ELSE_2	IF_3	CALL_2
0x4009c0b	      0xe800000000	                          call 0x4009c10	       976	ops.c	FUNCTION_16	ELSE_2	IF_3	CALL_2
0x4009c10	      0xe9f3fcffff	                           jmp 0x4009908	       976	ops.c	FUNCTION_16	ELSE_2	IF_3	CALL_2
0x4009c15	      0xe800000000	                          call 0x4009c1a	      1458	ops.c	FUNCTION_26
0x4009c1a	          0x83fb2e	                           cmp ebx, 0x2e	      1426	ops.c	FUNCTION_26	IF_3
0x4009c1d	     0xf85e5fcffff	                           jne 0x4009908	      1426	ops.c	FUNCTION_26	IF_3
0x4009c23	      0xba01000000	                              mov edx, 1	      1427	ops.c	FUNCTION_26	CALL_4
0x4009c28	      0xbe01000000	                              mov esi, 1	      1427	ops.c	FUNCTION_26	CALL_4
0x4009c2d	            0x31ff	                            xor edi, edi	      1427	ops.c	FUNCTION_26	CALL_4
0x4009c2f	      0xe800000000	                          call 0x4009c34	      1427	ops.c	FUNCTION_26	CALL_4
0x4009c34	      0xe955fdffff	                           jmp 0x400998e	      1427	ops.c	FUNCTION_26	CALL_4
put_in_typebuf	SWITCH,0:DO,0:ELSE,2:functions,0:FOR,0:IF,6:WHILE,0:CALL,6	111
0x4001cb0	            0x4155	                                push r13	      1365	ops.c	FUNCTION_25
0x4001cb2	            0x4154	                                push r12	      1365	ops.c	FUNCTION_25
0x4001cb4	          0x4989fd	                            mov r13, rdi	      1365	ops.c	FUNCTION_25
0x4001cb7	              0x55	                                push rbp	      1365	ops.c	FUNCTION_25
0x4001cb8	              0x53	                                push rbx	      1365	ops.c	FUNCTION_25
0x4001cb9	          0x4189f4	                           mov r12d, esi	      1365	ops.c	FUNCTION_25
0x4001cbc	            0x89d5	                            mov ebp, edx	      1365	ops.c	FUNCTION_25
0x4001cbe	            0x89cb	                            mov ebx, ecx	      1365	ops.c	FUNCTION_25
0x4001cc0	        0x4883ec28	                           sub rsp, 0x28	      1365	ops.c	FUNCTION_25
0x4001cc4	    0x64488b042528	                mov rax, qword fs:[0x28]	      1365	ops.c	FUNCTION_25
0x4001ccd	      0x4889442418	             mov qword [rsp + 0x18], rax	      1365	ops.c	FUNCTION_25
0x4001cd2	            0x31c0	                            xor eax, eax	      1365	ops.c	FUNCTION_25
0x4001cd4	    0x8b0500000000	            mov eax, dword [0x04001cda] 	      1335	ops.c	FUNCTION_24	IF_1
0x4001cda	            0x85c0	                           test eax, eax	      1335	ops.c	FUNCTION_24	IF_1
0x4001cdc	            0x7445	                            je 0x4001d23	      1335	ops.c	FUNCTION_24	IF_1
0x4001cde	          0x83f856	                           cmp eax, 0x56	      1337	ops.c	FUNCTION_24	IF_1	IF_2
0x4001ce1	     0xf84d9000000	                            je 0x4001dc0	      1337	ops.c	FUNCTION_24	IF_1	IF_2
0x4001ce7	          0x83f849	                           cmp eax, 0x49	      1345	ops.c	FUNCTION_24	IF_1	ELSE_1
0x4001cea	      0xba69000000	                           mov edx, 0x69	      1345	ops.c	FUNCTION_24	IF_1	ELSE_1
0x4001cef	      0xc644241100	                mov byte [rsp + 0x11], 0	      1346	ops.c	FUNCTION_24	IF_1	ELSE_1
0x4001cf4	           0xf44c2	                          cmove eax, edx	      1345	ops.c	FUNCTION_24	IF_1	ELSE_1
0x4001cf7	        0x88442410	               mov byte [rsp + 0x10], al	      1345	ops.c	FUNCTION_24	IF_1	ELSE_1
0x4001cfb	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1348	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x4001d00	            0x31d2	                            xor edx, edx	      1348	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x4001d02	          0x4189d8	                            mov r8d, ebx	      1348	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x4001d05	      0xb901000000	                              mov ecx, 1	      1348	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x4001d0a	      0xbeffffffff	                     mov esi, 0xffffffff	      1348	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x4001d0f	      0xe800000000	                          call 0x4001d14	      1348	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x4001d14	          0x83f801	                              cmp eax, 1	      1348	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x4001d17	            0x750a	                           jne 0x4001d23	      1348	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x4001d19	    0xc70500000000	               mov dword [0x04001d23], 0	      1349	ops.c	FUNCTION_24	IF_1	IF_3
0x4001d23	            0x85ed	                           test ebp, ebp	      1369	ops.c	FUNCTION_25	IF_1
0x4001d25	            0x7559	                           jne 0x4001d80	      1369	ops.c	FUNCTION_25	IF_1
0x4001d27	          0x4585e4	                         test r12d, r12d	      1375	ops.c	FUNCTION_25	IF_2	IF_3
0x4001d2a	     0xf85a8000000	                           jne 0x4001dd8	      1375	ops.c	FUNCTION_25	IF_2	IF_3
0x4001d30	          0x4d85ed	                           test r13, r13	      1379	ops.c	FUNCTION_25	IF_2	IF_4
0x4001d33	     0xf84ef000000	                            je 0x4001e28	      1379	ops.c	FUNCTION_25	IF_2	IF_4
0x4001d39	            0x31d2	                            xor edx, edx	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x4001d3b	      0xb901000000	                              mov ecx, 1	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x4001d40	            0x31f6	                            xor esi, esi	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x4001d42	          0x4189d8	                            mov r8d, ebx	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x4001d45	          0x4c89ef	                            mov rdi, r13	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x4001d48	      0xe800000000	                          call 0x4001d4d	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x4001d4d	          0x83f801	                              cmp eax, 1	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x4001d50	           0xf94c1	                                 sete cl	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x4001d53	            0x85ed	                           test ebp, ebp	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x4001d55	           0xf95c2	                                setne dl	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x4001d58	            0x21d1	                            and ecx, edx	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x4001d5a	            0x89cd	                            mov ebp, ecx	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x4001d5c	          0x4084ed	                           test bpl, bpl	      1387	ops.c	FUNCTION_25	IF_6
0x4001d5f	            0x743d	                            je 0x4001d9e	      1387	ops.c	FUNCTION_25	IF_6
0x4001d61	          0x4189d8	                            mov r8d, ebx	      1388	ops.c	FUNCTION_25	CALL_6
0x4001d64	      0xb901000000	                              mov ecx, 1	      1388	ops.c	FUNCTION_25	CALL_6
0x4001d69	            0x31d2	                            xor edx, edx	      1388	ops.c	FUNCTION_25	CALL_6
0x4001d6b	      0xbeffffffff	                     mov esi, 0xffffffff	      1388	ops.c	FUNCTION_25	CALL_6
0x4001d70	      0xbf00000000	                              mov edi, 0	      1388	ops.c	FUNCTION_25	CALL_6
0x4001d75	      0xe800000000	                          call 0x4001d7a	      1388	ops.c	FUNCTION_25	CALL_6
0x4001d7a	            0xeb22	                           jmp 0x4001d9e	      1388	ops.c	FUNCTION_25	CALL_6
0x4001d7c	         0xf1f4000	                         nop dword [rax]	      1388	ops.c	FUNCTION_25	CALL_6
0x4001d80	            0x31d2	                            xor edx, edx	      1370	ops.c	FUNCTION_25	CALL_2
0x4001d82	          0x4189d8	                            mov r8d, ebx	      1370	ops.c	FUNCTION_25	CALL_2
0x4001d85	      0xb901000000	                              mov ecx, 1	      1370	ops.c	FUNCTION_25	CALL_2
0x4001d8a	      0xbeffffffff	                     mov esi, 0xffffffff	      1370	ops.c	FUNCTION_25	CALL_2
0x4001d8f	      0xbf00000000	                              mov edi, 0	      1370	ops.c	FUNCTION_25	CALL_2
0x4001d94	      0xe800000000	                          call 0x4001d99	      1370	ops.c	FUNCTION_25	CALL_2
0x4001d99	          0x83f801	                              cmp eax, 1	      1371	ops.c	FUNCTION_25	IF_2
0x4001d9c	            0x7489	                            je 0x4001d27	      1371	ops.c	FUNCTION_25	IF_2
0x4001d9e	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      1390	ops.c	FUNCTION_25
0x4001da3	    0x644833342528	                xor rsi, qword fs:[0x28]	      1390	ops.c	FUNCTION_25
0x4001dac	     0xf8584000000	                           jne 0x4001e36	      1390	ops.c	FUNCTION_25
0x4001db2	        0x4883c428	                           add rsp, 0x28	      1390	ops.c	FUNCTION_25
0x4001db6	              0x5b	                                 pop rbx	      1390	ops.c	FUNCTION_25
0x4001db7	              0x5d	                                 pop rbp	      1390	ops.c	FUNCTION_25
0x4001db8	            0x415c	                                 pop r12	      1390	ops.c	FUNCTION_25
0x4001dba	            0x415d	                                 pop r13	      1390	ops.c	FUNCTION_25
0x4001dbc	              0xc3	                                     ret	      1390	ops.c	FUNCTION_25
0x4001dbd	           0xf1f00	                         nop dword [rax]	      1390	ops.c	FUNCTION_25
0x4001dc0	      0xc644241067	            mov byte [rsp + 0x10], 0x67 	      1339	ops.c	FUNCTION_24	IF_1	IF_2
0x4001dc5	      0xc644241152	            mov byte [rsp + 0x11], 0x52 	      1340	ops.c	FUNCTION_24	IF_1	IF_2
0x4001dca	      0xc644241200	                mov byte [rsp + 0x12], 0	      1341	ops.c	FUNCTION_24	IF_1	IF_2
0x4001dcf	      0xe927ffffff	                           jmp 0x4001cfb	      1341	ops.c	FUNCTION_24	IF_1	IF_2
0x4001dd4	         0xf1f4000	                         nop dword [rax]	      1341	ops.c	FUNCTION_24	IF_1	IF_2
0x4001dd8	          0x4c89ef	                            mov rdi, r13	      1376	ops.c	FUNCTION_25	IF_2	CALL_3
0x4001ddb	      0xe800000000	                          call 0x4001de0	      1376	ops.c	FUNCTION_25	IF_2	CALL_3
0x4001de0	          0x4885c0	                           test rax, rax	      1379	ops.c	FUNCTION_25	IF_2	IF_4
0x4001de3	          0x4989c4	                            mov r12, rax	      1376	ops.c	FUNCTION_25	IF_2	CALL_3
0x4001de6	            0x7448	                            je 0x4001e30	      1379	ops.c	FUNCTION_25	IF_2	IF_4
0x4001de8	            0x31d2	                            xor edx, edx	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x4001dea	          0x4189d8	                            mov r8d, ebx	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x4001ded	      0xb901000000	                              mov ecx, 1	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x4001df2	      0xbeffffffff	                     mov esi, 0xffffffff	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x4001df7	          0x4889c7	                            mov rdi, rax	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x4001dfa	      0xe800000000	                          call 0x4001dff	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x4001dff	            0x85ed	                           test ebp, ebp	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x4001e01	        0x400f95c5	                               setne bpl	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x4001e05	          0x83f801	                              cmp eax, 1	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x4001e08	           0xf94c2	                                 sete dl	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x4001e0b	            0x21d5	                            and ebp, edx	      1382	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x4001e0d	          0x4c89e7	                            mov rdi, r12	      1385	ops.c	FUNCTION_25	IF_2	CALL_5
0x4001e10	        0x8944240c	              mov dword [rsp + 0xc], eax	      1385	ops.c	FUNCTION_25	IF_2	CALL_5
0x4001e14	      0xe800000000	                          call 0x4001e19	      1385	ops.c	FUNCTION_25	IF_2	CALL_5
0x4001e19	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      1385	ops.c	FUNCTION_25	IF_2	CALL_5
0x4001e1d	      0xe93affffff	                           jmp 0x4001d5c	      1385	ops.c	FUNCTION_25	IF_2	CALL_5
0x4001e22	    0x660f1f440000	                    nop word [rax + rax]	      1385	ops.c	FUNCTION_25	IF_2	CALL_5
0x4001e28	            0x31c0	                            xor eax, eax	      1380	ops.c	FUNCTION_25	IF_2	IF_4
0x4001e2a	      0xe96fffffff	                           jmp 0x4001d9e	      1380	ops.c	FUNCTION_25	IF_2	IF_4
0x4001e2f	              0x90	                                     nop	      1380	ops.c	FUNCTION_25	IF_2	IF_4
0x4001e30	            0x31ed	                            xor ebp, ebp	      1379	ops.c	FUNCTION_25	IF_2	IF_4
0x4001e32	            0x31c0	                            xor eax, eax	      1380	ops.c	FUNCTION_25	IF_2	IF_4
0x4001e34	            0xebd7	                           jmp 0x4001e0d	      1380	ops.c	FUNCTION_25	IF_2	IF_4
0x4001e36	      0xe800000000	                          call 0x4001e3b	      1390	ops.c	FUNCTION_25
op_reindent	SWITCH,0:DO,0:ELSE,3:functions,0:FOR,1:IF,10:WHILE,0:CALL,15	190
0x4002a30	            0x4157	                                push r15	       702	ops.c	FUNCTION_9
0x4002a32	            0x4156	                                push r14	       702	ops.c	FUNCTION_9
0x4002a34	            0x4155	                                push r13	       702	ops.c	FUNCTION_9
0x4002a36	            0x4154	                                push r12	       702	ops.c	FUNCTION_9
0x4002a38	              0x55	                                push rbp	       702	ops.c	FUNCTION_9
0x4002a39	              0x53	                                push rbx	       702	ops.c	FUNCTION_9
0x4002a3a	        0x4883ec18	                           sub rsp, 0x18	       702	ops.c	FUNCTION_9
0x4002a3e	    0x488b05000000	            mov rax, qword [0x04002a45] 	       711	ops.c	FUNCTION_9	IF_1
0x4002a45	    0x448b80401500	          mov r8d, dword [rax + 0x1540] 	       711	ops.c	FUNCTION_9	IF_1
0x4002a4c	          0x4585c0	                           test r8d, r8d	       711	ops.c	FUNCTION_9	IF_1
0x4002a4f	     0xf847b020000	                            je 0x4002cd0	       711	ops.c	FUNCTION_9	IF_1
0x4002a55	        0x488b6f50	            mov rbp, qword [rdi + 0x50] 	       717	ops.c	FUNCTION_9	FOR_1
0x4002a59	          0x4889fb	                            mov rbx, rdi	       717	ops.c	FUNCTION_9	FOR_1
0x4002a5c	          0x4989ef	                            mov r15, rbp	       717	ops.c	FUNCTION_9	FOR_1
0x4002a5f	        0x4983ef01	                              sub r15, 1	       717	ops.c	FUNCTION_9	FOR_1
0x4002a63	     0xf88cf010000	                            js 0x4002c38	       717	ops.c	FUNCTION_9	FOR_1
0x4002a69	    0x8b0500000000	            mov eax, dword [0x04002a6f] 	       717	ops.c	FUNCTION_9	FOR_1
0x4002a6f	            0x85c0	                           test eax, eax	       717	ops.c	FUNCTION_9	FOR_1
0x4002a71	     0xf85c1010000	                           jne 0x4002c38	       717	ops.c	FUNCTION_9	FOR_1
0x4002a77	    0x488b05000000	            mov rax, qword [0x04002a7e] 	       708	ops.c	FUNCTION_9
0x4002a7e	          0x4889e9	                            mov rcx, rbp	       708	ops.c	FUNCTION_9
0x4002a81	          0x4989f4	                            mov r12, rsi	       708	ops.c	FUNCTION_9
0x4002a84	          0x4531ed	                          xor r13d, r13d	       708	ops.c	FUNCTION_9
0x4002a87	          0x4531f6	                          xor r14d, r14d	       708	ops.c	FUNCTION_9
0x4002a8a	    0x48bd0bd7a370	          movabs rbp, 0xa3d70a3d70a3d70b	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4002a94	        0x488b4038	            mov rax, qword [rax + 0x38] 	       708	ops.c	FUNCTION_9
0x4002a98	      0x4889442408	                mov qword [rsp + 8], rax	       708	ops.c	FUNCTION_9
0x4002a9d	      0xe986000000	                           jmp 0x4002b28	       708	ops.c	FUNCTION_9
0x4002aa2	    0x660f1f440000	                    nop word [rax + rax]	       708	ops.c	FUNCTION_9
0x4002aa8	        0x488d41ff	                      lea rax, [rcx - 1]	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4002aac	          0x4c39f8	                            cmp rax, r15	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4002aaf	     0xf84a4000000	                            je 0x4002b59	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4002ab5	      0xe800000000	                          call 0x4002aba	       736	ops.c	FUNCTION_9	FOR_1	IF_3	CALL_6
0x4002aba	          0x4889c7	                            mov rdi, rax	       736	ops.c	FUNCTION_9	FOR_1	IF_3	CALL_6
0x4002abd	      0xe800000000	                          call 0x4002ac2	       736	ops.c	FUNCTION_9	FOR_1	IF_3	CALL_6
0x4002ac2	            0x31ff	                            xor edi, edi	       738	ops.c	FUNCTION_9	FOR_1	IF_3	IF_4
0x4002ac4	          0x803800	                       cmp byte [rax], 0	       737	ops.c	FUNCTION_9	FOR_1	IF_3	IF_4
0x4002ac7	     0xf85d3000000	                           jne 0x4002ba0	       737	ops.c	FUNCTION_9	FOR_1	IF_3	IF_4
0x4002acd	      0xbe04000000	                              mov esi, 4	       742	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	CALL_8
0x4002ad2	      0xe800000000	                          call 0x4002ad7	       742	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	CALL_8
0x4002ad7	            0x85c0	                           test eax, eax	       742	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	CALL_8
0x4002ad9	     0xf84a9000000	                            je 0x4002b88	       742	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	CALL_8
0x4002adf	          0x4d85f6	                           test r14, r14	       745	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	IF_6
0x4002ae2	    0x488b05000000	            mov rax, qword [0x04002ae9] 	       746	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	IF_6
0x4002ae9	     0xf8401010000	                            je 0x4002bf0	       745	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	IF_6
0x4002aef	        0x4c8b6838	            mov r13, qword [rax + 0x38] 	       745	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	IF_6
0x4002af3	          0x4c89ea	                            mov rdx, r13	       746	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	IF_6
0x4002af6	        0x4883c201	                              add rdx, 1	       750	ops.c	FUNCTION_9	FOR_1
0x4002afa	    0xc74040000000	               mov dword [rax + 0x40], 0	       751	ops.c	FUNCTION_9	FOR_1
0x4002b01	        0x48895038	             mov qword [rax + 0x38], rdx	       750	ops.c	FUNCTION_9	FOR_1
0x4002b05	        0x498d57ff	                      lea rdx, [r15 - 1]	       717	ops.c	FUNCTION_9	FOR_1
0x4002b09	        0x4883faff	             cmp rdx, 0xffffffffffffffff	       717	ops.c	FUNCTION_9	FOR_1
0x4002b0d	     0xf84ed000000	                            je 0x4002c00	       717	ops.c	FUNCTION_9	FOR_1
0x4002b13	    0x8b0d00000000	            mov ecx, dword [0x04002b19] 	       717	ops.c	FUNCTION_9	FOR_1
0x4002b19	            0x85c9	                           test ecx, ecx	       717	ops.c	FUNCTION_9	FOR_1
0x4002b1b	     0xf85df000000	                           jne 0x4002c00	       717	ops.c	FUNCTION_9	FOR_1
0x4002b21	        0x488b4b50	            mov rcx, qword [rbx + 0x50] 	       717	ops.c	FUNCTION_9	FOR_1
0x4002b25	          0x4989d7	                            mov r15, rdx	       717	ops.c	FUNCTION_9	FOR_1
0x4002b28	        0x4983ff01	                              cmp r15, 1	       722	ops.c	FUNCTION_9	FOR_1	IF_2
0x4002b2c	            0x7e34	                           jle 0x4002b62	       722	ops.c	FUNCTION_9	FOR_1	IF_2
0x4002b2e	          0x4c89f8	                            mov rax, r15	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4002b31	          0x48f7ed	                                imul rbp	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4002b34	          0x4c89f8	                            mov rax, r15	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4002b37	        0x48c1f83f	                           sar rax, 0x3f	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4002b3b	          0x4c01fa	                            add rdx, r15	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4002b3e	        0x48c1fa05	                              sar rdx, 5	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4002b42	          0x4829c2	                            sub rdx, rax	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4002b45	        0x488d0492	                  lea rax, [rdx + rdx*4]	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4002b49	        0x488d0480	                  lea rax, [rax + rax*4]	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4002b4d	          0x4801c0	                            add rax, rax	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4002b50	          0x4939c7	                            cmp r15, rax	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4002b53	     0xf854fffffff	                           jne 0x4002aa8	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x4002b59	    0x48390d000000	            cmp qword [0x04002b60], rcx 	       724	ops.c	FUNCTION_9	FOR_1	IF_2
0x4002b60	            0x7c5e	                            jl 0x4002bc0	       724	ops.c	FUNCTION_9	FOR_1	IF_2
0x4002b62	    0x4981fc000000	                              cmp r12, 0	       733	ops.c	FUNCTION_9	FOR_1	IF_3
0x4002b69	           0xf95c2	                                setne dl	       733	ops.c	FUNCTION_9	FOR_1	IF_3
0x4002b6c	        0x4883f901	                              cmp rcx, 1	       733	ops.c	FUNCTION_9	FOR_1	IF_3
0x4002b70	           0xf94c0	                                 sete al	       733	ops.c	FUNCTION_9	FOR_1	IF_3
0x4002b73	             0x8c2	                               or dl, al	       733	ops.c	FUNCTION_9	FOR_1	IF_3
0x4002b75	     0xf853affffff	                           jne 0x4002ab5	       733	ops.c	FUNCTION_9	FOR_1	IF_3
0x4002b7b	        0x4883e901	                              sub rcx, 1	       733	ops.c	FUNCTION_9	FOR_1	IF_3
0x4002b7f	          0x4c39f9	                            cmp rcx, r15	       733	ops.c	FUNCTION_9	FOR_1	IF_3
0x4002b82	     0xf852dffffff	                           jne 0x4002ab5	       733	ops.c	FUNCTION_9	FOR_1	IF_3
0x4002b88	    0x488b05000000	            mov rax, qword [0x04002b8f] 	       733	ops.c	FUNCTION_9	FOR_1	IF_3
0x4002b8f	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       733	ops.c	FUNCTION_9	FOR_1	IF_3
0x4002b93	      0xe95effffff	                           jmp 0x4002af6	       733	ops.c	FUNCTION_9	FOR_1	IF_3
0x4002b98	     0xf1f84000000	                   nop dword [rax + rax]	       733	ops.c	FUNCTION_9	FOR_1	IF_3
0x4002ba0	          0x41ffd4	                                call r12	       740	ops.c	FUNCTION_9	FOR_1	IF_3	CALL_7
0x4002ba3	            0x85c0	                           test eax, eax	       742	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	CALL_8
0x4002ba5	            0x89c7	                            mov edi, eax	       740	ops.c	FUNCTION_9	FOR_1	IF_3	CALL_7
0x4002ba7	     0xf8920ffffff	                           jns 0x4002acd	       742	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	CALL_8
0x4002bad	    0x488b05000000	            mov rax, qword [0x04002bb4] 	       742	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	CALL_8
0x4002bb4	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       742	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	CALL_8
0x4002bb8	      0xe939ffffff	                           jmp 0x4002af6	       742	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	CALL_8
0x4002bbd	           0xf1f00	                         nop dword [rax]	       742	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	CALL_8
0x4002bc0	      0xba05000000	                              mov edx, 5	       725	ops.c	FUNCTION_9	FOR_1	CALL_4
0x4002bc5	      0xbe00000000	                              mov esi, 0	       725	ops.c	FUNCTION_9	FOR_1	CALL_4
0x4002bca	            0x31ff	                            xor edi, edi	       725	ops.c	FUNCTION_9	FOR_1	CALL_4
0x4002bcc	      0xe800000000	                          call 0x4002bd1	       725	ops.c	FUNCTION_9	FOR_1	CALL_4
0x4002bd1	          0x4c89fe	                            mov rsi, r15	       725	ops.c	FUNCTION_9	FOR_1	CALL_4
0x4002bd4	          0x4889c7	                            mov rdi, rax	       725	ops.c	FUNCTION_9	FOR_1	CALL_4
0x4002bd7	            0x31c0	                            xor eax, eax	       725	ops.c	FUNCTION_9	FOR_1	CALL_4
0x4002bd9	      0xe800000000	                          call 0x4002bde	       725	ops.c	FUNCTION_9	FOR_1	CALL_4
0x4002bde	        0x488b4b50	            mov rcx, qword [rbx + 0x50] 	       725	ops.c	FUNCTION_9	FOR_1	CALL_4
0x4002be2	      0xe97bffffff	                           jmp 0x4002b62	       725	ops.c	FUNCTION_9	FOR_1	CALL_4
0x4002be7	    0x660f1f840000	                    nop word [rax + rax]	       725	ops.c	FUNCTION_9	FOR_1	CALL_4
0x4002bf0	        0x4c8b7038	            mov r14, qword [rax + 0x38] 	       746	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	IF_6
0x4002bf4	          0x4d89f5	                            mov r13, r14	       746	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	IF_6
0x4002bf7	      0xe9f7feffff	                           jmp 0x4002af3	       746	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	IF_6
0x4002bfc	         0xf1f4000	                         nop dword [rax]	       746	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	IF_6
0x4002c00	      0x488b6c2408	                mov rbp, qword [rsp + 8]	       755	ops.c	FUNCTION_9
0x4002c05	      0xbf06000000	                              mov edi, 6	       756	ops.c	FUNCTION_9	CALL_9
0x4002c0a	        0x48896838	             mov qword [rax + 0x38], rbp	       755	ops.c	FUNCTION_9
0x4002c0e	      0xe800000000	                          call 0x4002c13	       756	ops.c	FUNCTION_9	CALL_9
0x4002c13	          0x4d85ed	                           test r13, r13	       761	ops.c	FUNCTION_9	IF_7
0x4002c16	            0x7430	                            je 0x4002c48	       761	ops.c	FUNCTION_9	IF_7
0x4002c18	          0x8b4b5c	            mov ecx, dword [rbx + 0x5c] 	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x4002c1b	        0x498d5501	                      lea rdx, [r13 + 1]	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x4002c1f	            0x85c9	                           test ecx, ecx	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x4002c21	            0x7407	                            je 0x4002c2a	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x4002c23	          0x4889ea	                            mov rdx, rbp	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x4002c26	        0x48035350	             add rdx, qword [rbx + 0x50]	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x4002c2a	            0x31c9	                            xor ecx, ecx	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x4002c2c	            0x31f6	                            xor esi, esi	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x4002c2e	          0x4c89f7	                            mov rdi, r14	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x4002c31	      0xe800000000	                          call 0x4002c36	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x4002c36	            0xeb1b	                           jmp 0x4002c53	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x4002c38	      0xbf06000000	                              mov edi, 6	       756	ops.c	FUNCTION_9	CALL_9
0x4002c3d	          0x4989ef	                            mov r15, rbp	       756	ops.c	FUNCTION_9	CALL_9
0x4002c40	      0xe800000000	                          call 0x4002c45	       756	ops.c	FUNCTION_9	CALL_9
0x4002c45	           0xf1f00	                         nop dword [rax]	       756	ops.c	FUNCTION_9	CALL_9
0x4002c48	          0x8b435c	            mov eax, dword [rbx + 0x5c] 	       765	ops.c	FUNCTION_9	ELSE_2	IF_8
0x4002c4b	            0x85c0	                           test eax, eax	       765	ops.c	FUNCTION_9	ELSE_2	IF_8
0x4002c4d	     0xf85ad000000	                           jne 0x4002d00	       765	ops.c	FUNCTION_9	ELSE_2	IF_8
0x4002c53	        0x488b7350	            mov rsi, qword [rbx + 0x50] 	       768	ops.c	FUNCTION_9	IF_9
0x4002c57	    0x483b35000000	            cmp rsi, qword [0x04002c5e] 	       768	ops.c	FUNCTION_9	IF_9
0x4002c5e	            0x7e2e	                           jle 0x4002c8e	       768	ops.c	FUNCTION_9	IF_9
0x4002c60	          0x4c29fe	                            sub rsi, r15	       770	ops.c	FUNCTION_9	IF_9
0x4002c63	      0xba05000000	                              mov edx, 5	       772	ops.c	FUNCTION_9	IF_9	CALL_13
0x4002c68	        0x4883fe01	                              cmp rsi, 1	       771	ops.c	FUNCTION_9	IF_9	IF_10
0x4002c6c	          0x4889f5	                            mov rbp, rsi	       770	ops.c	FUNCTION_9	IF_9
0x4002c6f	     0xf849b000000	                            je 0x4002d10	       771	ops.c	FUNCTION_9	IF_9	IF_10
0x4002c75	      0xbe00000000	                              mov esi, 0	       774	ops.c	FUNCTION_9	IF_9	CALL_15
0x4002c7a	            0x31ff	                            xor edi, edi	       774	ops.c	FUNCTION_9	IF_9	CALL_15
0x4002c7c	      0xe800000000	                          call 0x4002c81	       774	ops.c	FUNCTION_9	IF_9	CALL_15
0x4002c81	          0x4889ee	                            mov rsi, rbp	       774	ops.c	FUNCTION_9	IF_9	CALL_15
0x4002c84	          0x4889c7	                            mov rdi, rax	       774	ops.c	FUNCTION_9	IF_9	CALL_15
0x4002c87	            0x31c0	                            xor eax, eax	       774	ops.c	FUNCTION_9	IF_9	CALL_15
0x4002c89	      0xe800000000	                          call 0x4002c8e	       774	ops.c	FUNCTION_9	IF_9	CALL_15
0x4002c8e	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	       777	ops.c	FUNCTION_9
0x4002c92	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	       777	ops.c	FUNCTION_9
0x4002c96	    0x488b05000000	            mov rax, qword [0x04002c9d] 	       777	ops.c	FUNCTION_9
0x4002c9d	        0x488b4b30	            mov rcx, qword [rbx + 0x30] 	       778	ops.c	FUNCTION_9
0x4002ca1	        0x488b5b38	            mov rbx, qword [rbx + 0x38] 	       778	ops.c	FUNCTION_9
0x4002ca5	    0x4889b0e01100	          mov qword [rax + 0x11e0], rsi 	       777	ops.c	FUNCTION_9
0x4002cac	    0x4889b8e81100	          mov qword [rax + 0x11e8], rdi 	       777	ops.c	FUNCTION_9
0x4002cb3	    0x488988001200	          mov qword [rax + 0x1200], rcx 	       778	ops.c	FUNCTION_9
0x4002cba	    0x488998081200	          mov qword [rax + 0x1208], rbx 	       778	ops.c	FUNCTION_9
0x4002cc1	        0x4883c418	                           add rsp, 0x18	       779	ops.c	FUNCTION_9
0x4002cc5	              0x5b	                                 pop rbx	       779	ops.c	FUNCTION_9
0x4002cc6	              0x5d	                                 pop rbp	       779	ops.c	FUNCTION_9
0x4002cc7	            0x415c	                                 pop r12	       779	ops.c	FUNCTION_9
0x4002cc9	            0x415d	                                 pop r13	       779	ops.c	FUNCTION_9
0x4002ccb	            0x415e	                                 pop r14	       779	ops.c	FUNCTION_9
0x4002ccd	            0x415f	                                 pop r15	       779	ops.c	FUNCTION_9
0x4002ccf	              0xc3	                                     ret	       779	ops.c	FUNCTION_9
0x4002cd0	            0x31ff	                            xor edi, edi	       713	ops.c	FUNCTION_9	IF_1	CALL_2
0x4002cd2	      0xba05000000	                              mov edx, 5	       713	ops.c	FUNCTION_9	IF_1	CALL_2
0x4002cd7	      0xbe00000000	                              mov esi, 0	       713	ops.c	FUNCTION_9	IF_1	CALL_2
0x4002cdc	      0xe800000000	                          call 0x4002ce1	       713	ops.c	FUNCTION_9	IF_1	CALL_2
0x4002ce1	        0x4883c418	                           add rsp, 0x18	       779	ops.c	FUNCTION_9
0x4002ce5	          0x4889c7	                            mov rdi, rax	       713	ops.c	FUNCTION_9	IF_1	CALL_2
0x4002ce8	              0x5b	                                 pop rbx	       779	ops.c	FUNCTION_9
0x4002ce9	              0x5d	                                 pop rbp	       779	ops.c	FUNCTION_9
0x4002cea	            0x415c	                                 pop r12	       779	ops.c	FUNCTION_9
0x4002cec	            0x415d	                                 pop r13	       779	ops.c	FUNCTION_9
0x4002cee	            0x415e	                                 pop r14	       779	ops.c	FUNCTION_9
0x4002cf0	            0x415f	                                 pop r15	       779	ops.c	FUNCTION_9
0x4002cf2	      0xe900000000	                           jmp 0x4002cf7	       713	ops.c	FUNCTION_9	IF_1	CALL_2
0x4002cf7	    0x660f1f840000	                    nop word [rax + rax]	       713	ops.c	FUNCTION_9	IF_1	CALL_2
0x4002d00	      0xbf14000000	                           mov edi, 0x14	       766	ops.c	FUNCTION_9	ELSE_2	IF_8
0x4002d05	      0xe800000000	                          call 0x4002d0a	       766	ops.c	FUNCTION_9	ELSE_2	IF_8
0x4002d0a	      0xe944ffffff	                           jmp 0x4002c53	       766	ops.c	FUNCTION_9	ELSE_2	IF_8
0x4002d0f	              0x90	                                     nop	       766	ops.c	FUNCTION_9	ELSE_2	IF_8
0x4002d10	            0x31ff	                            xor edi, edi	       772	ops.c	FUNCTION_9	IF_9	CALL_13
0x4002d12	      0xbe00000000	                              mov esi, 0	       772	ops.c	FUNCTION_9	IF_9	CALL_13
0x4002d17	      0xe800000000	                          call 0x4002d1c	       772	ops.c	FUNCTION_9	IF_9	CALL_13
0x4002d1c	          0x4889c7	                            mov rdi, rax	       772	ops.c	FUNCTION_9	IF_9	CALL_13
0x4002d1f	      0xe800000000	                          call 0x4002d24	       772	ops.c	FUNCTION_9	IF_9	CALL_13
0x4002d24	      0xe965ffffff	                           jmp 0x4002c8e	       772	ops.c	FUNCTION_9	IF_9	CALL_13
