ex_vimgrep	functions,0:WHILE,0:DO,0:CALL,55:SWITCH,0:IF,30:ELSE,6:FOR,1	1117
0x40081d0	            0x4157	                                push r15	      4482	quickfix.c	FUNCTION_80
0x40081d2	            0x4156	                                push r14	      4482	quickfix.c	FUNCTION_80
0x40081d4	            0x4155	                                push r13	      4482	quickfix.c	FUNCTION_80
0x40081d6	            0x4154	                                push r12	      4482	quickfix.c	FUNCTION_80
0x40081d8	              0x55	                                push rbp	      4482	quickfix.c	FUNCTION_80
0x40081d9	              0x53	                                push rbx	      4482	quickfix.c	FUNCTION_80
0x40081da	    0x4881ec880300	                          sub rsp, 0x388	      4482	quickfix.c	FUNCTION_80
0x40081e1	          0x8b4720	            mov eax, dword [rdi + 0x20] 	      4509	quickfix.c	FUNCTION_80	CALL_1
0x40081e4	    0x64488b1c2528	                mov rbx, qword fs:[0x28]	      4482	quickfix.c	FUNCTION_80
0x40081ed	    0x48899c247803	            mov qword [rsp + 0x378], rbx	      4482	quickfix.c	FUNCTION_80
0x40081f5	            0x31db	                            xor ebx, ebx	      4482	quickfix.c	FUNCTION_80
0x40081f7	      0x48897c2438	             mov qword [rsp + 0x38], rdi	      4482	quickfix.c	FUNCTION_80
0x40081fc	    0xc78424ac0000	               mov dword [rsp + 0xac], 0	      4502	quickfix.c	FUNCTION_80
0x4008207	      0x3de4000000	                           cmp eax, 0xe4	      4240	quickfix.c	FUNCTION_73	SWITCH_1
0x400820c	     0xf845e100000	                            je 0x4009270	      4240	quickfix.c	FUNCTION_73	SWITCH_1
0x4008212	     0xf8eb0000000	                           jle 0x40082c8	      4240	quickfix.c	FUNCTION_73	SWITCH_1
0x4008218	      0x3d00010000	                          cmp eax, 0x100	      4240	quickfix.c	FUNCTION_73	SWITCH_1
0x400821d	     0xf8420030000	                            je 0x4008543	      4240	quickfix.c	FUNCTION_73	SWITCH_1
0x4008223	     0xf8e9f040000	                           jle 0x40086c8	      4240	quickfix.c	FUNCTION_73	SWITCH_1
0x4008229	      0x3dee010000	                          cmp eax, 0x1ee	      4240	quickfix.c	FUNCTION_73	SWITCH_1
0x400822e	     0xf84ed020000	                            je 0x4008521	      4240	quickfix.c	FUNCTION_73	SWITCH_1
0x4008234	      0x3def010000	                          cmp eax, 0x1ef	      4240	quickfix.c	FUNCTION_73	SWITCH_1
0x4008239	    0x48c784248000	               mov qword [rsp + 0x80], 0	      4244	quickfix.c	FUNCTION_73	SWITCH_1
0x4008245	     0xf859e000000	                           jne 0x40082e9	      4240	quickfix.c	FUNCTION_73	SWITCH_1
0x400824b	       0xf1f440000	                   nop dword [rax + rax]	      4240	quickfix.c	FUNCTION_73	SWITCH_1
0x4008250	    0x4c8b05000000	              mov r8, qword [0x04008257]	      4511	quickfix.c	FUNCTION_80	IF_1
0x4008257	    0x488bb4248000	            mov rsi, qword [rsp + 0x80] 	      4510	quickfix.c	FUNCTION_80	IF_1	CALL_2
0x400825f	      0xb901000000	                              mov ecx, 1	      4510	quickfix.c	FUNCTION_80	IF_1	CALL_2
0x4008264	      0xbf40000000	                           mov edi, 0x40	      4510	quickfix.c	FUNCTION_80	IF_1	CALL_2
0x4008269	    0x498b90980000	              mov rdx, qword [r8 + 0x98]	      4510	quickfix.c	FUNCTION_80	IF_1	CALL_2
0x4008270	      0xe800000000	                          call 0x4008275	      4510	quickfix.c	FUNCTION_80	IF_1	CALL_2
0x4008275	            0x85c0	                           test eax, eax	      4510	quickfix.c	FUNCTION_80	IF_1	CALL_2
0x4008277	     0xf8513040000	                           jne 0x4008690	      4510	quickfix.c	FUNCTION_80	IF_1	CALL_2
0x400827d	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      4510	quickfix.c	FUNCTION_80	IF_1	CALL_2
0x4008282	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4510	quickfix.c	FUNCTION_80	IF_1	CALL_2
0x4008285	    0x8d901dffffff	                   lea edx, [rax - 0xe3]	      4522	quickfix.c	FUNCTION_80	IF_3
0x400828b	          0x83fa01	                              cmp edx, 1	      4522	quickfix.c	FUNCTION_80	IF_3
0x400828e	            0x7770	                            ja 0x4008300	      4522	quickfix.c	FUNCTION_80	IF_3
0x4008290	    0x4c8b25000000	            mov r12, qword [0x04008297] 	      4524	quickfix.c	FUNCTION_80	IF_3	CALL_4
0x4008297	      0x498b7c2408	                mov rdi, qword [r12 + 8]	      1576	quickfix.c	FUNCTION_19	IF_1
0x400829c	      0xe800000000	                          call 0x40082a1	      1576	quickfix.c	FUNCTION_19	IF_1
0x40082a1	            0x85c0	                           test eax, eax	      1576	quickfix.c	FUNCTION_19	IF_1
0x40082a3	     0xf84be020000	                            je 0x4008567	      1576	quickfix.c	FUNCTION_19	IF_1
0x40082a9	    0x4d8bbc245019	          mov r15, qword [r12 + 0x1950] 	      1576	quickfix.c	FUNCTION_19	IF_1
0x40082b1	          0x4d85ff	                           test r15, r15	      1576	quickfix.c	FUNCTION_19	IF_1
0x40082b4	     0xf8466030000	                            je 0x4008620	      1576	quickfix.c	FUNCTION_19	IF_1
0x40082ba	    0x488b05000000	            mov rax, qword [0x040082c1] 	      4527	quickfix.c	FUNCTION_80	IF_3
0x40082c1	      0x4889442440	             mov qword [rsp + 0x40], rax	      4527	quickfix.c	FUNCTION_80	IF_3
0x40082c6	            0xeb55	                           jmp 0x400831d	      4527	quickfix.c	FUNCTION_80	IF_3
0x40082c8	      0x3da4000000	                           cmp eax, 0xa4	      4240	quickfix.c	FUNCTION_73	SWITCH_1
0x40082cd	     0xf84bf0f0000	                            je 0x4009292	      4240	quickfix.c	FUNCTION_73	SWITCH_1
0x40082d3	      0x3de3000000	                           cmp eax, 0xe3	      4240	quickfix.c	FUNCTION_73	SWITCH_1
0x40082d8	     0xf8454020000	                            je 0x4008532	      4240	quickfix.c	FUNCTION_73	SWITCH_1
0x40082de	      0x3da3000000	                           cmp eax, 0xa3	      4240	quickfix.c	FUNCTION_73	SWITCH_1
0x40082e3	     0xf84980f0000	                            je 0x4009281	      4240	quickfix.c	FUNCTION_73	SWITCH_1
0x40082e9	    0x8d901dffffff	                   lea edx, [rax - 0xe3]	      4522	quickfix.c	FUNCTION_80	IF_3
0x40082ef	    0x48c784248000	               mov qword [rsp + 0x80], 0	      4250	quickfix.c	FUNCTION_73	SWITCH_1
0x40082fb	          0x83fa01	                              cmp edx, 1	      4522	quickfix.c	FUNCTION_80	IF_3
0x40082fe	            0x7690	                           jbe 0x4008290	      4522	quickfix.c	FUNCTION_80	IF_3
0x4008300	      0x2dff000000	                           sub eax, 0xff	      4522	quickfix.c	FUNCTION_80	IF_3
0x4008305	    0x48c744244000	               mov qword [rsp + 0x40], 0	      4493	quickfix.c	FUNCTION_80
0x400830e	    0x41bf00000000	                             mov r15d, 0	      4491	quickfix.c	FUNCTION_80
0x4008314	          0x83f801	                              cmp eax, 1	      4522	quickfix.c	FUNCTION_80	IF_3
0x4008317	     0xf8673ffffff	                           jbe 0x4008290	      4522	quickfix.c	FUNCTION_80	IF_3
0x400831d	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      4530	quickfix.c	FUNCTION_80	IF_5
0x4008322	    0x48c7442460ff	     mov qword [rsp + 0x60], 0x7fffffff 	      4533	quickfix.c	FUNCTION_80	ELSE_1
0x400832b	        0x448b5838	           mov r11d, dword [rax + 0x38] 	      4530	quickfix.c	FUNCTION_80	IF_5
0x400832f	          0x4585db	                         test r11d, r11d	      4530	quickfix.c	FUNCTION_80	IF_5
0x4008332	            0x7e09	                           jle 0x400833d	      4530	quickfix.c	FUNCTION_80	IF_5
0x4008334	        0x488b4048	            mov rax, qword [rax + 0x48] 	      4531	quickfix.c	FUNCTION_80	IF_5
0x4008338	      0x4889442460	             mov qword [rsp + 0x60], rax	      4531	quickfix.c	FUNCTION_80	IF_5
0x400833d	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	      4537	quickfix.c	FUNCTION_80	CALL_5
0x4008342	    0x48c784242002	              mov qword [rsp + 0x220], 0	      4536	quickfix.c	FUNCTION_80
0x400834e	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      4537	quickfix.c	FUNCTION_80	CALL_5
0x4008352	          0x488b38	                    mov rdi, qword [rax]	      4537	quickfix.c	FUNCTION_80	CALL_5
0x4008355	      0xe800000000	                          call 0x400835a	      4537	quickfix.c	FUNCTION_80	CALL_5
0x400835a	          0x488b3b	                    mov rdi, qword [rbx]	      4538	quickfix.c	FUNCTION_80	CALL_6
0x400835d	    0x488d9424ac00	                   lea rdx, [rsp + 0xac]	      4538	quickfix.c	FUNCTION_80	CALL_6
0x4008365	    0x488db424b800	                   lea rsi, [rsp + 0xb8]	      4538	quickfix.c	FUNCTION_80	CALL_6
0x400836d	      0x4889442470	             mov qword [rsp + 0x70], rax	      4537	quickfix.c	FUNCTION_80	CALL_5
0x4008372	      0xe800000000	                          call 0x4008377	      4538	quickfix.c	FUNCTION_80	CALL_6
0x4008377	          0x4885c0	                           test rax, rax	      4539	quickfix.c	FUNCTION_80	IF_6
0x400837a	          0x4889c3	                            mov rbx, rax	      4538	quickfix.c	FUNCTION_80	CALL_6
0x400837d	      0xba05000000	                              mov edx, 5	      4541	quickfix.c	FUNCTION_80	IF_6	CALL_8
0x4008382	      0xbe00000000	                              mov esi, 0	      4541	quickfix.c	FUNCTION_80	IF_6	CALL_8
0x4008387	     0xf840c010000	                            je 0x4008499	      4539	quickfix.c	FUNCTION_80	IF_6
0x400838d	    0x488bbc24b800	            mov rdi, qword [rsp + 0xb8] 	      4545	quickfix.c	FUNCTION_80	CALL_9
0x4008395	    0x48c784242002	              mov qword [rsp + 0x220], 0	      4261	quickfix.c	FUNCTION_74
0x40083a1	          0x4885ff	                           test rdi, rdi	      4263	quickfix.c	FUNCTION_74	IF_1
0x40083a4	            0x7409	                            je 0x40083af	      4263	quickfix.c	FUNCTION_74	IF_1
0x40083a6	          0x803f00	                       cmp byte [rdi], 0	      4263	quickfix.c	FUNCTION_74	IF_1
0x40083a9	     0xf85f3020000	                           jne 0x40086a2	      4263	quickfix.c	FUNCTION_74	IF_1
0x40083af	      0xe800000000	                          call 0x40083b4	      4266	quickfix.c	FUNCTION_74	IF_1	IF_2	CALL_1
0x40083b4	          0x4885c0	                           test rax, rax	      4266	quickfix.c	FUNCTION_74	IF_1	IF_2	CALL_1
0x40083b7	     0xf84b10f0000	                            je 0x400936e	      4266	quickfix.c	FUNCTION_74	IF_1	IF_2	CALL_1
0x40083bd	      0xe800000000	                          call 0x40083c2	      4271	quickfix.c	FUNCTION_74	IF_1	CALL_5
0x40083c2	      0xbe01000000	                              mov esi, 1	      4271	quickfix.c	FUNCTION_74	IF_1	CALL_5
0x40083c7	          0x4889c7	                            mov rdi, rax	      4271	quickfix.c	FUNCTION_74	IF_1	CALL_5
0x40083ca	      0xe800000000	                          call 0x40083cf	      4271	quickfix.c	FUNCTION_74	IF_1	CALL_5
0x40083cf	    0x488984242002	            mov qword [rsp + 0x220], rax	      4271	quickfix.c	FUNCTION_74	IF_1	CALL_5
0x40083d7	    0x8b1500000000	            mov edx, dword [0x040083dd] 	      4276	quickfix.c	FUNCTION_74
0x40083dd	    0xc784246c0300	              mov dword [rsp + 0x36c], 0	      4277	quickfix.c	FUNCTION_74
0x40083e8	    0x899424680300	            mov dword [rsp + 0x368], edx	      4276	quickfix.c	FUNCTION_74
0x40083ef	          0x4885c0	                           test rax, rax	      4546	quickfix.c	FUNCTION_80	IF_7
0x40083f2	     0xf84b0000000	                            je 0x40084a8	      4546	quickfix.c	FUNCTION_80	IF_7
0x40083f8	          0x4889df	                            mov rdi, rbx	      4549	quickfix.c	FUNCTION_80	CALL_10
0x40083fb	      0xe800000000	                          call 0x4008400	      4549	quickfix.c	FUNCTION_80	CALL_10
0x4008400	          0x803800	                       cmp byte [rax], 0	      4550	quickfix.c	FUNCTION_80	IF_8
0x4008403	     0xf84b0020000	                            je 0x40086b9	      4550	quickfix.c	FUNCTION_80	IF_8
0x4008409	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	      4556	quickfix.c	FUNCTION_80	IF_9
0x400840e	          0x8b5320	            mov edx, dword [rbx + 0x20] 	      4556	quickfix.c	FUNCTION_80	IF_9
0x4008411	    0x81faef010000	                          cmp edx, 0x1ef	      4558	quickfix.c	FUNCTION_80	IF_9
0x4008417	        0x400f95c6	                               setne sil	      4558	quickfix.c	FUNCTION_80	IF_9
0x400841b	    0x81fa00010000	                          cmp edx, 0x100	      4558	quickfix.c	FUNCTION_80	IF_9
0x4008421	           0xf95c1	                                setne cl	      4558	quickfix.c	FUNCTION_80	IF_9
0x4008424	          0x4084ce	                            test sil, cl	      4558	quickfix.c	FUNCTION_80	IF_9
0x4008427	     0xf8427010000	                            je 0x4008554	      4558	quickfix.c	FUNCTION_80	IF_9
0x400842d	          0x83e2bf	                     and edx, 0xffffffbf	      4558	quickfix.c	FUNCTION_80	IF_9
0x4008430	    0x81faa4000000	                           cmp edx, 0xa4	      4558	quickfix.c	FUNCTION_80	IF_9
0x4008436	     0xf8418010000	                            je 0x4008554	      4558	quickfix.c	FUNCTION_80	IF_9
0x400843c	      0x488b5c2470	            mov rbx, qword [rsp + 0x70] 	      4558	quickfix.c	FUNCTION_80	IF_9
0x4008441	          0x4885db	                           test rbx, rbx	      4561	quickfix.c	FUNCTION_80	CALL_13
0x4008444	          0x4889de	                            mov rsi, rbx	      4561	quickfix.c	FUNCTION_80	CALL_13
0x4008447	     0xf845a0f0000	                            je 0x40093a7	      4561	quickfix.c	FUNCTION_80	CALL_13
0x400844d	          0x4c89ff	                            mov rdi, r15	      4561	quickfix.c	FUNCTION_80	CALL_13
0x4008450	        0x48890424	                    mov qword [rsp], rax	      4561	quickfix.c	FUNCTION_80	CALL_13
0x4008454	      0xe8e789ffff	                    call sym.qf_new_list	      4561	quickfix.c	FUNCTION_80	CALL_13
0x4008459	        0x488b0424	                    mov rax, qword [rsp]	      4561	quickfix.c	FUNCTION_80	CALL_13
0x400845d	    0x488d9424b000	                   lea rdx, [rsp + 0xb0]	      4564	quickfix.c	FUNCTION_80	IF_10	CALL_14
0x4008465	    0x488db424a800	                   lea rsi, [rsp + 0xa8]	      4564	quickfix.c	FUNCTION_80	IF_10	CALL_14
0x400846d	      0xb901000000	                              mov ecx, 1	      4564	quickfix.c	FUNCTION_80	IF_10	CALL_14
0x4008472	          0x4889c7	                            mov rdi, rax	      4564	quickfix.c	FUNCTION_80	IF_10	CALL_14
0x4008475	      0xe800000000	                          call 0x400847a	      4564	quickfix.c	FUNCTION_80	IF_10	CALL_14
0x400847a	            0x85c0	                           test eax, eax	      4564	quickfix.c	FUNCTION_80	IF_10	CALL_14
0x400847c	            0x742a	                            je 0x40084a8	      4564	quickfix.c	FUNCTION_80	IF_10	CALL_14
0x400847e	    0x448b9424a800	           mov r10d, dword [rsp + 0xa8] 	      4566	quickfix.c	FUNCTION_80	IF_11
0x4008486	          0x4585d2	                         test r10d, r10d	      4566	quickfix.c	FUNCTION_80	IF_11
0x4008489	     0xf8555020000	                           jne 0x40086e4	      4566	quickfix.c	FUNCTION_80	IF_11
0x400848f	      0xba05000000	                              mov edx, 5	      4568	quickfix.c	FUNCTION_80	IF_11	CALL_16
0x4008494	      0xbe00000000	                              mov esi, 0	      4568	quickfix.c	FUNCTION_80	IF_11	CALL_16
0x4008499	            0x31ff	                            xor edi, edi	      4552	quickfix.c	FUNCTION_80	IF_8	CALL_12
0x400849b	      0xe800000000	                          call 0x40084a0	      4552	quickfix.c	FUNCTION_80	IF_8	CALL_12
0x40084a0	          0x4889c7	                            mov rdi, rax	      4552	quickfix.c	FUNCTION_80	IF_8	CALL_12
0x40084a3	      0xe800000000	                          call 0x40084a8	      4552	quickfix.c	FUNCTION_80	IF_8	CALL_12
0x40084a8	    0x48c744245000	               mov qword [rsp + 0x50], 0	      4506	quickfix.c	FUNCTION_80
0x40084b1	    0x48c744247800	               mov qword [rsp + 0x78], 0	      4505	quickfix.c	FUNCTION_80
0x40084ba	    0x48c744245800	               mov qword [rsp + 0x58], 0	      4504	quickfix.c	FUNCTION_80
0x40084c3	      0x488b7c2470	            mov rdi, qword [rsp + 0x70] 	      4740	quickfix.c	FUNCTION_80	CALL_51
0x40084c8	      0xe800000000	                          call 0x40084cd	      4740	quickfix.c	FUNCTION_80	CALL_51
0x40084cd	      0x488b7c2478	            mov rdi, qword [rsp + 0x78] 	      4741	quickfix.c	FUNCTION_80	CALL_52
0x40084d2	      0xe800000000	                          call 0x40084d7	      4741	quickfix.c	FUNCTION_80	CALL_52
0x40084d7	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      4742	quickfix.c	FUNCTION_80	CALL_53
0x40084dc	      0xe800000000	                          call 0x40084e1	      4742	quickfix.c	FUNCTION_80	CALL_53
0x40084e1	      0x488b7c2450	            mov rdi, qword [rsp + 0x50] 	      4743	quickfix.c	FUNCTION_80	CALL_54
0x40084e6	      0xe800000000	                          call 0x40084eb	      4743	quickfix.c	FUNCTION_80	CALL_54
0x40084eb	    0x488bbc242002	           mov rdi, qword [rsp + 0x220] 	      4744	quickfix.c	FUNCTION_80	CALL_55
0x40084f3	      0xe800000000	                          call 0x40084f8	      4744	quickfix.c	FUNCTION_80	CALL_55
0x40084f8	    0x488b84247803	           mov rax, qword [rsp + 0x378] 	      4745	quickfix.c	FUNCTION_80
0x4008500	    0x644833042528	                xor rax, qword fs:[0x28]	      4745	quickfix.c	FUNCTION_80
0x4008509	     0xf85d7110000	                           jne 0x40096e6	      4745	quickfix.c	FUNCTION_80
0x400850f	    0x4881c4880300	                          add rsp, 0x388	      4745	quickfix.c	FUNCTION_80
0x4008516	              0x5b	                                 pop rbx	      4745	quickfix.c	FUNCTION_80
0x4008517	              0x5d	                                 pop rbp	      4745	quickfix.c	FUNCTION_80
0x4008518	            0x415c	                                 pop r12	      4745	quickfix.c	FUNCTION_80
0x400851a	            0x415d	                                 pop r13	      4745	quickfix.c	FUNCTION_80
0x400851c	            0x415e	                                 pop r14	      4745	quickfix.c	FUNCTION_80
0x400851e	            0x415f	                                 pop r15	      4745	quickfix.c	FUNCTION_80
0x4008520	              0xc3	                                     ret	      4745	quickfix.c	FUNCTION_80
0x4008521	    0x48c784248000	               mov qword [rsp + 0x80], 0	      4242	quickfix.c	FUNCTION_73	SWITCH_1
0x400852d	      0xe91efdffff	                           jmp 0x4008250	      4242	quickfix.c	FUNCTION_73	SWITCH_1
0x4008532	    0x48c784248000	               mov qword [rsp + 0x80], 0	      4247	quickfix.c	FUNCTION_73	SWITCH_1
0x400853e	      0xe90dfdffff	                           jmp 0x4008250	      4247	quickfix.c	FUNCTION_73	SWITCH_1
0x4008543	    0x48c784248000	               mov qword [rsp + 0x80], 0	      4245	quickfix.c	FUNCTION_73	SWITCH_1
0x400854f	      0xe9fcfcffff	                           jmp 0x4008250	      4245	quickfix.c	FUNCTION_73	SWITCH_1
0x4008554	        0x418b5f04	                mov ebx, dword [r15 + 4]	      4559	quickfix.c	FUNCTION_80	IF_9
0x4008558	        0x41395f08	                cmp dword [r15 + 8], ebx	      4559	quickfix.c	FUNCTION_80	IF_9
0x400855c	     0xf85fbfeffff	                           jne 0x400845d	      4559	quickfix.c	FUNCTION_80	IF_9
0x4008562	      0xe9d5feffff	                           jmp 0x400843c	      4559	quickfix.c	FUNCTION_80	IF_9
0x4008567	    0x498bac245019	          mov rbp, qword [r12 + 0x1950] 	      4559	quickfix.c	FUNCTION_80	IF_9
0x400856f	          0x4885ed	                           test rbp, rbp	      1422	quickfix.c	FUNCTION_15	IF_1
0x4008572	     0xf84a8000000	                            je 0x4008620	      1422	quickfix.c	FUNCTION_15	IF_1
0x4008578	          0x8b4500	                    mov eax, dword [rbp]	      1426	quickfix.c	FUNCTION_15
0x400857b	    0x49c784245019	            mov qword [r12 + 0x1950], 0 	      1424	quickfix.c	FUNCTION_15
0x4008587	          0x83e801	                              sub eax, 1	      1426	quickfix.c	FUNCTION_15
0x400858a	            0x85c0	                           test eax, eax	      1427	quickfix.c	FUNCTION_15	IF_2
0x400858c	          0x894500	                    mov dword [rbp], eax	      1426	quickfix.c	FUNCTION_15
0x400858f	     0xf8f8b000000	                            jg 0x4008620	      1427	quickfix.c	FUNCTION_15	IF_2
0x4008595	          0x8b5d04	                mov ebx, dword [rbp + 4]	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x4008598	          0x4531ed	                          xor r13d, r13d	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400859b	            0x85db	                           test ebx, ebx	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400859d	            0x7e79	                           jle 0x4008618	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400859f	              0x90	                                     nop	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x40085a0	          0x4889ef	                            mov rdi, rbp	      3031	quickfix.c	FUNCTION_44	CALL_1
0x40085a3	          0x4963dd	                        movsxd rbx, r13d	      3033	quickfix.c	FUNCTION_44	CALL_2
0x40085a6	          0x4489ee	                           mov esi, r13d	      3031	quickfix.c	FUNCTION_44	CALL_1
0x40085a9	      0xe8e286ffff	                  call sym.qf_free_items	      3031	quickfix.c	FUNCTION_44	CALL_1
0x40085ae	          0x4989de	                            mov r14, rbx	      3033	quickfix.c	FUNCTION_44	CALL_2
0x40085b1	    0x488d04dd0000	                        lea rax, [rbx*8]	      3033	quickfix.c	FUNCTION_44	CALL_2
0x40085b9	        0x49c1e607	                              shl r14, 7	      3033	quickfix.c	FUNCTION_44	CALL_2
0x40085bd	          0x4929c6	                            sub r14, rax	      3033	quickfix.c	FUNCTION_44	CALL_2
0x40085c0	          0x4901ee	                            add r14, rbp	      3033	quickfix.c	FUNCTION_44	CALL_2
0x40085c3	        0x498b7e40	            mov rdi, qword [r14 + 0x40] 	      3033	quickfix.c	FUNCTION_44	CALL_2
0x40085c7	          0x4885ff	                           test rdi, rdi	      3033	quickfix.c	FUNCTION_44	CALL_2
0x40085ca	            0x740d	                            je 0x40085d9	      3033	quickfix.c	FUNCTION_44	CALL_2
0x40085cc	      0xe800000000	                          call 0x40085d1	      3033	quickfix.c	FUNCTION_44	CALL_2
0x40085d1	    0x49c746400000	               mov qword [r14 + 0x40], 0	      3033	quickfix.c	FUNCTION_44	CALL_2
0x40085d9	    0x488d04dd0000	                        lea rax, [rbx*8]	      3034	quickfix.c	FUNCTION_44	CALL_3
0x40085e1	        0x48c1e307	                              shl rbx, 7	      3034	quickfix.c	FUNCTION_44	CALL_3
0x40085e5	        0x4183c501	                             add r13d, 1	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x40085e9	          0x4829c3	                            sub rbx, rax	      3034	quickfix.c	FUNCTION_44	CALL_3
0x40085ec	          0x4801eb	                            add rbx, rbp	      3034	quickfix.c	FUNCTION_44	CALL_3
0x40085ef	        0x488b7b48	            mov rdi, qword [rbx + 0x48] 	      3034	quickfix.c	FUNCTION_44	CALL_3
0x40085f3	      0xe800000000	                          call 0x40085f8	      3034	quickfix.c	FUNCTION_44	CALL_3
0x40085f8	    0x48c743480000	               mov qword [rbx + 0x48], 0	      3035	quickfix.c	FUNCTION_44
0x4008600	    0xc74310000000	               mov dword [rbx + 0x10], 0	      3036	quickfix.c	FUNCTION_44
0x4008607	    0x48c783800000	               mov qword [rbx + 0x80], 0	      3037	quickfix.c	FUNCTION_44
0x4008612	        0x443b6d04	               cmp r13d, dword [rbp + 4]	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x4008616	            0x7c88	                            jl 0x40085a0	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x4008618	          0x4889ef	                            mov rdi, rbp	      1432	quickfix.c	FUNCTION_15	IF_2	CALL_2
0x400861b	      0xe800000000	                          call 0x4008620	      1432	quickfix.c	FUNCTION_15	IF_2	CALL_2
0x4008620	    0x4d8bbc244819	          mov r15, qword [r12 + 0x1948] 	      1586	quickfix.c	FUNCTION_19	IF_2
0x4008628	          0x4d85ff	                           test r15, r15	      1586	quickfix.c	FUNCTION_19	IF_2
0x400862b	     0xf8589fcffff	                           jne 0x40082ba	      1586	quickfix.c	FUNCTION_19	IF_2
0x4008631	      0xbfc0040000	                          mov edi, 0x4c0	      1559	quickfix.c	FUNCTION_18	CALL_1
0x4008636	      0xe800000000	                          call 0x400863b	      1559	quickfix.c	FUNCTION_18	CALL_1
0x400863b	          0x4885c0	                           test rax, rax	      1560	quickfix.c	FUNCTION_18	IF_1
0x400863e	          0x4989c7	                            mov r15, rax	      1559	quickfix.c	FUNCTION_18	CALL_1
0x4008641	     0xf8469100000	                            je 0x40096b0	      1560	quickfix.c	FUNCTION_18	IF_1
0x4008647	        0x488d7808	                      lea rdi, [rax + 8]	        90	string3.h	FUNCTION_118	CALL_6
0x400864b	          0x4889c1	                            mov rcx, rax	        90	string3.h	FUNCTION_118	CALL_6
0x400864e	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_118	CALL_6
0x4008655	    0x48c780b80400	              mov qword [rax + 0x4b8], 0	        90	string3.h	FUNCTION_118	CALL_6
0x4008660	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_118	CALL_6
0x4008662	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_118	CALL_6
0x4008666	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_118	CALL_6
0x4008669	    0x81c1c0040000	                          add ecx, 0x4c0	        90	string3.h	FUNCTION_118	CALL_6
0x400866f	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_118	CALL_6
0x4008672	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_118	CALL_6
0x4008675	        0x41830701	                      add dword [r15], 1	      1563	quickfix.c	FUNCTION_18	IF_1
0x4008679	    0x4d89bc244819	          mov qword [r12 + 0x1948], r15 	      1587	quickfix.c	FUNCTION_19	CALL_2
0x4008681	      0xe934fcffff	                           jmp 0x40082ba	      1587	quickfix.c	FUNCTION_19	CALL_2
0x4008686	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1587	quickfix.c	FUNCTION_19	CALL_2
0x4008690	      0xe800000000	                          call 0x4008695	      4514	quickfix.c	FUNCTION_80	IF_1	IF_2	CALL_3
0x4008695	            0x85c0	                           test eax, eax	      4514	quickfix.c	FUNCTION_80	IF_1	IF_2	CALL_3
0x4008697	     0xf855bfeffff	                           jne 0x40084f8	      4514	quickfix.c	FUNCTION_80	IF_1	IF_2	CALL_3
0x400869d	      0xe9dbfbffff	                           jmp 0x400827d	      4514	quickfix.c	FUNCTION_80	IF_1	IF_2	CALL_3
0x40086a2	      0xbe01000000	                              mov esi, 1	      4274	quickfix.c	FUNCTION_74	CALL_6
0x40086a7	      0xe800000000	                          call 0x40086ac	      4274	quickfix.c	FUNCTION_74	CALL_6
0x40086ac	    0x488984242002	            mov qword [rsp + 0x220], rax	      4274	quickfix.c	FUNCTION_74	CALL_6
0x40086b4	      0xe91efdffff	                           jmp 0x40083d7	      4274	quickfix.c	FUNCTION_74	CALL_6
0x40086b9	      0xba05000000	                              mov edx, 5	      4552	quickfix.c	FUNCTION_80	IF_8	CALL_12
0x40086be	      0xbe00000000	                              mov esi, 0	      4552	quickfix.c	FUNCTION_80	IF_8	CALL_12
0x40086c3	      0xe9d1fdffff	                           jmp 0x4008499	      4552	quickfix.c	FUNCTION_80	IF_8	CALL_12
0x40086c8	      0x3dff000000	                           cmp eax, 0xff	      4240	quickfix.c	FUNCTION_73	SWITCH_1
0x40086cd	    0x48c784248000	               mov qword [rsp + 0x80], 0	      4243	quickfix.c	FUNCTION_73	SWITCH_1
0x40086d9	     0xf8471fbffff	                            je 0x4008250	      4240	quickfix.c	FUNCTION_73	SWITCH_1
0x40086df	      0xe905fcffff	                           jmp 0x40082e9	      4240	quickfix.c	FUNCTION_73	SWITCH_1
0x40086e4	      0xbe01000000	                              mov esi, 1	      4572	quickfix.c	FUNCTION_80	CALL_17
0x40086e9	      0xbf00100000	                         mov edi, 0x1000	      4572	quickfix.c	FUNCTION_80	CALL_17
0x40086ee	      0xe800000000	                          call 0x40086f3	      4572	quickfix.c	FUNCTION_80	CALL_17
0x40086f3	      0xbe02000000	                              mov esi, 2	      4573	quickfix.c	FUNCTION_80	CALL_18
0x40086f8	          0x4889c3	                            mov rbx, rax	      4572	quickfix.c	FUNCTION_80	CALL_17
0x40086fb	      0xbf00100000	                         mov edi, 0x1000	      4573	quickfix.c	FUNCTION_80	CALL_18
0x4008700	      0x4889442458	             mov qword [rsp + 0x58], rax	      4572	quickfix.c	FUNCTION_80	CALL_17
0x4008705	      0xe800000000	                          call 0x400870a	      4573	quickfix.c	FUNCTION_80	CALL_18
0x400870a	          0x4885db	                           test rbx, rbx	      4574	quickfix.c	FUNCTION_80	IF_12
0x400870d	      0x4889442478	             mov qword [rsp + 0x78], rax	      4573	quickfix.c	FUNCTION_80	CALL_18
0x4008712	     0xf84340c0000	                            je 0x400934c	      4574	quickfix.c	FUNCTION_80	IF_12
0x4008718	          0x4885c0	                           test rax, rax	      4574	quickfix.c	FUNCTION_80	IF_12
0x400871b	     0xf842b0c0000	                            je 0x400934c	      4574	quickfix.c	FUNCTION_80	IF_12
0x4008721	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      4582	quickfix.c	FUNCTION_80	CALL_20
0x4008726	      0xbe00100000	                         mov esi, 0x1000	      4582	quickfix.c	FUNCTION_80	CALL_20
0x400872b	      0xe800000000	                          call 0x4008730	      4582	quickfix.c	FUNCTION_80	CALL_20
0x4008730	        0x49634708	            movsxd rax, dword [r15 + 8] 	      4586	quickfix.c	FUNCTION_80
0x4008734	    0x8bbc24a80000	            mov edi, dword [rsp + 0xa8] 	      4589	quickfix.c	FUNCTION_80	FOR_1
0x400873b	    0x488d14c50000	                        lea rdx, [rax*8]	      4586	quickfix.c	FUNCTION_80
0x4008743	        0x48c1e007	                              shl rax, 7	      4586	quickfix.c	FUNCTION_80
0x4008747	          0x4829d0	                            sub rax, rdx	      4586	quickfix.c	FUNCTION_80
0x400874a	            0x85ff	                           test edi, edi	      4589	quickfix.c	FUNCTION_80	FOR_1
0x400874c	      0x418b440710	      mov eax, dword [r15 + rax + 0x10] 	      4586	quickfix.c	FUNCTION_80
0x4008751	        0x8944244c	             mov dword [rsp + 0x4c], eax	      4586	quickfix.c	FUNCTION_80
0x4008755	     0xf8e660f0000	                           jle 0x40096c1	      4589	quickfix.c	FUNCTION_80	FOR_1
0x400875b	    0x48837c246000	               cmp qword [rsp + 0x60], 0	      4589	quickfix.c	FUNCTION_80	FOR_1
0x4008761	    0x8b0500000000	            mov eax, dword [0x04008767] 	      4589	quickfix.c	FUNCTION_80	FOR_1
0x4008767	     0xf8e540f0000	                           jle 0x40096c1	      4589	quickfix.c	FUNCTION_80	FOR_1
0x400876d	            0x85c0	                           test eax, eax	      4589	quickfix.c	FUNCTION_80	FOR_1
0x400876f	     0xf854c0f0000	                           jne 0x40096c1	      4589	quickfix.c	FUNCTION_80	FOR_1
0x4008775	            0x31c0	                            xor eax, eax	      4589	quickfix.c	FUNCTION_80	FOR_1
0x4008777	    0x4981ff000000	                              cmp r15, 0	      4589	quickfix.c	FUNCTION_80	FOR_1
0x400877e	    0x48c744246800	               mov qword [rsp + 0x68], 0	      4589	quickfix.c	FUNCTION_80	FOR_1
0x4008787	           0xf95c0	                                setne al	      4589	quickfix.c	FUNCTION_80	FOR_1
0x400878a	    0xc784249c0000	               mov dword [rsp + 0x9c], 0	      4589	quickfix.c	FUNCTION_80	FOR_1
0x4008795	    0x48c744245000	               mov qword [rsp + 0x50], 0	      4589	quickfix.c	FUNCTION_80	FOR_1
0x400879e	          0x83c001	                              add eax, 1	      4589	quickfix.c	FUNCTION_80	FOR_1
0x40087a1	    0x48c784248800	               mov qword [rsp + 0x88], 0	      4589	quickfix.c	FUNCTION_80	FOR_1
0x40087ad	    0x48c784249000	               mov qword [rsp + 0x90], 0	      4589	quickfix.c	FUNCTION_80	FOR_1
0x40087b9	        0x89442448	             mov dword [rsp + 0x48], eax	      4589	quickfix.c	FUNCTION_80	FOR_1
0x40087bd	    0xc74424240000	               mov dword [rsp + 0x24], 0	      4589	quickfix.c	FUNCTION_80	FOR_1
0x40087c5	        0x4c893c24	                    mov qword [rsp], r15	      4814	quickfix.c	FUNCTION_82	IF_2	CALL_5
0x40087c9	     0xf1f80000000	                         nop dword [rax]	      4814	quickfix.c	FUNCTION_82	IF_2	CALL_5
0x40087d0	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	      4814	quickfix.c	FUNCTION_82	IF_2	CALL_5
0x40087d5	    0x488b8424b000	            mov rax, qword [rsp + 0xb0] 	      4591	quickfix.c	FUNCTION_80	FOR_1	CALL_21
0x40087dd	        0x488b3cc8	            mov rdi, qword [rax + rcx*8]	      4591	quickfix.c	FUNCTION_80	FOR_1	CALL_21
0x40087e1	    0x488d1ccd0000	                        lea rbx, [rcx*8]	      4591	quickfix.c	FUNCTION_80	FOR_1	CALL_21
0x40087e9	      0xe800000000	                          call 0x40087ee	      4591	quickfix.c	FUNCTION_80	FOR_1	CALL_21
0x40087ee	            0x31ff	                            xor edi, edi	      4592	quickfix.c	FUNCTION_80	FOR_1	IF_13	CALL_22
0x40087f0	      0x4889442418	             mov qword [rsp + 0x18], rax	      4591	quickfix.c	FUNCTION_80	FOR_1	CALL_21
0x40087f5	      0xe800000000	                          call 0x40087fa	      4592	quickfix.c	FUNCTION_80	FOR_1	IF_13	CALL_22
0x40087fa	    0x483b84248800	            cmp rax, qword [rsp + 0x88] 	      4592	quickfix.c	FUNCTION_80	FOR_1	IF_13	CALL_22
0x4008802	     0xf8ff7070000	                            jg 0x4008fff	      4592	quickfix.c	FUNCTION_80	FOR_1	IF_13	CALL_22
0x4008808	    0x488b8424b000	            mov rax, qword [rsp + 0xb0] 	      4600	quickfix.c	FUNCTION_80	FOR_1	CALL_25
0x4008810	        0x488b3c18	              mov rdi, qword [rax + rbx]	      4600	quickfix.c	FUNCTION_80	FOR_1	CALL_25
0x4008814	      0xe800000000	                          call 0x4008819	      4600	quickfix.c	FUNCTION_80	FOR_1	CALL_25
0x4008819	          0x4885c0	                           test rax, rax	      4601	quickfix.c	FUNCTION_80	FOR_1	IF_14
0x400881c	          0x4989c4	                            mov r12, rax	      4600	quickfix.c	FUNCTION_80	FOR_1	CALL_25
0x400881f	     0xf8446080000	                            je 0x400906b	      4601	quickfix.c	FUNCTION_80	FOR_1	IF_14
0x4008825	      0x4883780800	                  cmp qword [rax + 8], 0	      4601	quickfix.c	FUNCTION_80	FOR_1	IF_14
0x400882a	    0xc78424980000	               mov dword [rsp + 0x98], 0	      4612	quickfix.c	FUNCTION_80	FOR_1	ELSE_2
0x4008835	     0xf8430080000	                            je 0x400906b	      4601	quickfix.c	FUNCTION_80	FOR_1	IF_14
0x400883b	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      4616	quickfix.c	FUNCTION_80	FOR_1	ELSE_2	IF_15	CALL_27
0x4008840	      0x4c8b742440	            mov r14, qword [rsp + 0x40] 	      1962	quickfix.c	FUNCTION_26	IF_1
0x4008845	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4616	quickfix.c	FUNCTION_80	FOR_1	ELSE_2	IF_15	CALL_27
0x4008849	          0x4d85f6	                           test r14, r14	      1962	quickfix.c	FUNCTION_26	IF_1
0x400884c	          0x488b18	                    mov rbx, qword [rax]	      4616	quickfix.c	FUNCTION_80	FOR_1	ELSE_2	IF_15	CALL_27
0x400884f	     0xf8435070000	                            je 0x4008f8a	      1962	quickfix.c	FUNCTION_26	IF_1
0x4008855	        0x498b7e08	                mov rdi, qword [r14 + 8]	      1964	quickfix.c	FUNCTION_26	IF_1
0x4008859	      0xe800000000	                          call 0x400885e	      1964	quickfix.c	FUNCTION_26	IF_1
0x400885e	            0x85c0	                           test eax, eax	      1964	quickfix.c	FUNCTION_26	IF_1
0x4008860	     0xf840a070000	                            je 0x4008f70	      1964	quickfix.c	FUNCTION_26	IF_1
0x4008866	    0x498b86501900	          mov rax, qword [r14 + 0x1950] 	      1964	quickfix.c	FUNCTION_26	IF_1
0x400886d	          0x4885c0	                           test rax, rax	      1964	quickfix.c	FUNCTION_26	IF_1
0x4008870	     0xf84fa060000	                            je 0x4008f70	      1964	quickfix.c	FUNCTION_26	IF_1
0x4008876	          0x8b4804	                mov ecx, dword [rax + 4]	      1969	quickfix.c	FUNCTION_26	FOR_1
0x4008879	            0x85c9	                           test ecx, ecx	      1969	quickfix.c	FUNCTION_26	FOR_1
0x400887b	            0x7e37	                           jle 0x40088b4	      1969	quickfix.c	FUNCTION_26	FOR_1
0x400887d	        0x8b74244c	            mov esi, dword [rsp + 0x4c] 	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x4008881	          0x397010	            cmp dword [rax + 0x10], esi 	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x4008884	     0xf84420b0000	                            je 0x40093cc	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x400888a	    0x480588000000	                           add rax, 0x88	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x4008890	            0x31d2	                            xor edx, edx	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x4008892	            0xeb0d	                           jmp 0x40088a1	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x4008894	         0xf1f4000	                         nop dword [rax]	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x4008898	        0x4883c078	                           add rax, 0x78	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x400889c	          0x397088	            cmp dword [rax - 0x78], esi 	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x400889f	            0x7445	                            je 0x40088e6	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x40088a1	          0x83c201	                              add edx, 1	      1969	quickfix.c	FUNCTION_26	FOR_1
0x40088a4	            0x39ca	                            cmp edx, ecx	      1969	quickfix.c	FUNCTION_26	FOR_1
0x40088a6	            0x7cf0	                            jl 0x4008898	      1969	quickfix.c	FUNCTION_26	FOR_1
0x40088a8	    0x48837c244000	               cmp qword [rsp + 0x40], 0	      4355	quickfix.c	FUNCTION_77	IF_1	IF_2
0x40088ae	     0xf84e9060000	                            je 0x4008f9d	      4355	quickfix.c	FUNCTION_77	IF_1	IF_2
0x40088b4	      0xba05000000	                              mov edx, 5	      4358	quickfix.c	FUNCTION_77	IF_1	IF_2	CALL_3
0x40088b9	      0xbe00000000	                              mov esi, 0	      4358	quickfix.c	FUNCTION_77	IF_1	IF_2	CALL_3
0x40088be	            0x31ff	                            xor edi, edi	      4358	quickfix.c	FUNCTION_77	IF_1	IF_2	CALL_3
0x40088c0	      0xe800000000	                          call 0x40088c5	      4358	quickfix.c	FUNCTION_77	IF_1	IF_2	CALL_3
0x40088c5	          0x4889c7	                            mov rdi, rax	      4358	quickfix.c	FUNCTION_77	IF_1	IF_2	CALL_3
0x40088c8	      0xe800000000	                          call 0x40088cd	      4358	quickfix.c	FUNCTION_77	IF_1	IF_2	CALL_3
0x40088cd	    0x488bb424b000	            mov rsi, qword [rsp + 0xb0] 	      4618	quickfix.c	FUNCTION_80	FOR_1	ELSE_2	IF_15	CALL_28
0x40088d5	    0x8bbc24a80000	            mov edi, dword [rsp + 0xa8] 	      4618	quickfix.c	FUNCTION_80	FOR_1	ELSE_2	IF_15	CALL_28
0x40088dc	      0xe800000000	                          call 0x40088e1	      4618	quickfix.c	FUNCTION_80	FOR_1	ELSE_2	IF_15	CALL_28
0x40088e1	      0xe9ddfbffff	                           jmp 0x40084c3	      4619	quickfix.c	FUNCTION_80	FOR_1	ELSE_2	IF_15
0x40088e6	        0x8b4c244c	            mov ecx, dword [rsp + 0x4c] 	      4619	quickfix.c	FUNCTION_80	FOR_1	ELSE_2	IF_15
0x40088ea	        0x488b1c24	                    mov rbx, qword [rsp]	      4369	quickfix.c	FUNCTION_77	IF_3
0x40088ee	        0x48634308	            movsxd rax, dword [rbx + 8] 	      4369	quickfix.c	FUNCTION_77	IF_3
0x40088f2	    0x488d14c50000	                        lea rdx, [rax*8]	      4369	quickfix.c	FUNCTION_77	IF_3
0x40088fa	        0x48c1e007	                              shl rax, 7	      4369	quickfix.c	FUNCTION_77	IF_3
0x40088fe	          0x4829d0	                            sub rax, rdx	      4369	quickfix.c	FUNCTION_77	IF_3
0x4008901	        0x394c0310	      cmp dword [rbx + rax + 0x10], ecx 	      4369	quickfix.c	FUNCTION_77	IF_3
0x4008905	            0x745e	                            je 0x4008965	      4369	quickfix.c	FUNCTION_77	IF_3
0x4008907	          0x8b7304	                mov esi, dword [rbx + 4]	      4228	quickfix.c	FUNCTION_72	FOR_1
0x400890a	          0x4889d8	                            mov rax, rbx	      4228	quickfix.c	FUNCTION_72	FOR_1
0x400890d	            0x85f6	                           test esi, esi	      4228	quickfix.c	FUNCTION_72	FOR_1
0x400890f	     0xf8e5d0c0000	                           jle 0x4009572	      4228	quickfix.c	FUNCTION_72	FOR_1
0x4008915	          0x8b4b10	            mov ecx, dword [rbx + 0x10] 	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x4008918	        0x3b4c244c	            cmp ecx, dword [rsp + 0x4c] 	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x400891c	     0xf848e080000	                            je 0x40091b0	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x4008922	    0x488d90880000	                   lea rdx, [rax + 0x88]	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x4008929	        0x8b7c244c	            mov edi, dword [rsp + 0x4c] 	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x400892d	            0x31c0	                            xor eax, eax	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x400892f	            0xeb16	                           jmp 0x4008947	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x4008931	     0xf1f80000000	                         nop dword [rax]	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x4008938	        0x4883c278	                           add rdx, 0x78	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x400893c	          0x8b4a88	             mov ecx, dword [rdx - 0x78]	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x400893f	            0x39f9	                            cmp ecx, edi	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x4008941	     0xf846b080000	                            je 0x40091b2	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x4008947	          0x83c001	                              add eax, 1	      4228	quickfix.c	FUNCTION_72	FOR_1
0x400894a	            0x39f0	                            cmp eax, esi	      4228	quickfix.c	FUNCTION_72	FOR_1
0x400894c	            0x75ea	                           jne 0x4008938	      4228	quickfix.c	FUNCTION_72	FOR_1
0x400894e	        0x488b0424	                    mov rax, qword [rsp]	      4228	quickfix.c	FUNCTION_72	FOR_1
0x4008952	        0x488b1c24	                    mov rbx, qword [rsp]	      4228	quickfix.c	FUNCTION_72	FOR_1
0x4008956	          0x8b4898	             mov ecx, dword [rax - 0x68]	      4228	quickfix.c	FUNCTION_72	FOR_1
0x4008959	      0xb8ffffffff	                     mov eax, 0xffffffff	      4231	quickfix.c	FUNCTION_72
0x400895e	          0x894308	                mov dword [rbx + 8], eax	      4372	quickfix.c	FUNCTION_77	CALL_5
0x4008961	        0x894c244c	             mov dword [rsp + 0x4c], ecx	      4372	quickfix.c	FUNCTION_77	CALL_5
0x4008965	          0x4d85e4	                           test r12, r12	      4623	quickfix.c	FUNCTION_80	FOR_1	IF_16
0x4008968	     0xf845e060000	                            je 0x4008fcc	      4623	quickfix.c	FUNCTION_80	FOR_1	IF_16
0x400896e	      0x49833c2400	                      cmp qword [r12], 0	      4395	quickfix.c	FUNCTION_78	FOR_1
0x4008973	    0x8b8424ac0000	            mov eax, dword [rsp + 0xac] 	      4632	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	CALL_31
0x400897a	     0xf8e090c0000	                           jle 0x4009589	      4395	quickfix.c	FUNCTION_78	FOR_1
0x4008980	          0x83e001	                              and eax, 1	      4427	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_3
0x4008983	    0x41be01000000	                             mov r14d, 1	      4427	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_3
0x4008989	    0xc74424300000	               mov dword [rsp + 0x30], 0	      4427	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_3
0x4008991	        0x89442434	             mov dword [rsp + 0x34], eax	      4427	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_3
0x4008995	      0x488b442460	            mov rax, qword [rsp + 0x60] 	      4427	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_3
0x400899a	      0x4889442428	             mov qword [rsp + 0x28], rax	      4427	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_3
0x400899f	          0x4c89f0	                            mov rax, r14	      4427	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_3
0x40089a2	          0x4d89e6	                            mov r14, r12	      4427	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_3
0x40089a5	          0x4989c4	                            mov r12, rax	      4427	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_3
0x40089a8	     0xf1f84000000	                   nop dword [rax + rax]	      4427	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_3
0x40089b0	            0x31ed	                            xor ebp, ebp	      4427	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_3
0x40089b2	            0x89eb	                            mov ebx, ebp	      4427	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_3
0x40089b4	      0xe981010000	                           jmp 0x4008b3a	      4427	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_3
0x40089b9	     0xf1f80000000	                         nop dword [rax]	      4427	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_3
0x40089c0	        0x488b0424	                    mov rax, qword [rsp]	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x40089c4	      0xbf48000000	                           mov edi, 0x48	      1478	quickfix.c	FUNCTION_17	IF_1	CALL_1
0x40089c9	    0x458baeb80000	           mov r13d, dword [r14 + 0xb8] 	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x40089d0	          0x8b4008	                mov eax, dword [rax + 8]	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x40089d3	        0x89442420	             mov dword [rsp + 0x20], eax	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x40089d7	      0xe800000000	                          call 0x40089dc	      1478	quickfix.c	FUNCTION_17	IF_1	CALL_1
0x40089dc	          0x4885c0	                           test rax, rax	      1478	quickfix.c	FUNCTION_17	IF_1	CALL_1
0x40089df	          0x4989c7	                            mov r15, rax	      1478	quickfix.c	FUNCTION_17	IF_1	CALL_1
0x40089e2	     0xf8498020000	                            je 0x4008c80	      1478	quickfix.c	FUNCTION_17	IF_1	CALL_1
0x40089e8	          0x4585ed	                         test r13d, r13d	      1480	quickfix.c	FUNCTION_17	IF_2
0x40089eb	     0xf84d3010000	                            je 0x4008bc4	      1480	quickfix.c	FUNCTION_17	IF_2
0x40089f1	          0x4489ef	                           mov edi, r13d	      1482	quickfix.c	FUNCTION_17	IF_2	CALL_2
0x40089f4	      0xe800000000	                          call 0x40089f9	      1482	quickfix.c	FUNCTION_17	IF_2	CALL_2
0x40089f9	          0x4885c0	                           test rax, rax	      1485	quickfix.c	FUNCTION_17	IF_2	IF_3
0x40089fc	        0x45896f18	            mov dword [r15 + 0x18], r13d	      1484	quickfix.c	FUNCTION_17	IF_2
0x4008a00	            0x740a	                            je 0x4008a0c	      1485	quickfix.c	FUNCTION_17	IF_2	IF_3
0x4008a02	        0x8b4c2448	            mov ecx, dword [rsp + 0x48] 	      1486	quickfix.c	FUNCTION_17	IF_2	IF_3
0x4008a06	     0x98820140000	            or dword [rax + 0x1420], ecx	      1486	quickfix.c	FUNCTION_17	IF_2	IF_3
0x4008a0c	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1491	quickfix.c	FUNCTION_17	IF_4	CALL_4
0x4008a11	      0xe800000000	                          call 0x4008a16	      1491	quickfix.c	FUNCTION_17	IF_4	CALL_4
0x4008a16	          0x4885c0	                           test rax, rax	      1491	quickfix.c	FUNCTION_17	IF_4	CALL_4
0x4008a19	        0x49894738	             mov qword [r15 + 0x38], rax	      1491	quickfix.c	FUNCTION_17	IF_4	CALL_4
0x4008a1d	     0xf8455020000	                            je 0x4008c78	      1491	quickfix.c	FUNCTION_17	IF_4	CALL_4
0x4008a23	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      1497	quickfix.c	FUNCTION_17
0x4008a27	            0x31ff	                            xor edi, edi	      1517	quickfix.c	FUNCTION_17	IF_9	CALL_13
0x4008a29	        0x49896f10	             mov qword [r15 + 0x10], rbp	      1496	quickfix.c	FUNCTION_17
0x4008a2d	      0x41c6474000	                mov byte [r15 + 0x40], 0	      1498	quickfix.c	FUNCTION_17
0x4008a32	    0x49c747300000	               mov qword [r15 + 0x30], 0	      1500	quickfix.c	FUNCTION_17	IF_5
0x4008a3a	    0x49c747280000	               mov qword [r15 + 0x28], 0	      1508	quickfix.c	FUNCTION_17	IF_7
0x4008a42	    0x41c747200000	               mov dword [r15 + 0x20], 0	      1516	quickfix.c	FUNCTION_17
0x4008a4a	        0x4189471c	             mov dword [r15 + 0x1c], eax	      1497	quickfix.c	FUNCTION_17
0x4008a4e	      0xe800000000	                          call 0x4008a53	      1517	quickfix.c	FUNCTION_17	IF_9	CALL_13
0x4008a53	      0x4863442420	         movsxd rax, dword [rsp + 0x20] 	      1523	quickfix.c	FUNCTION_17	IF_10
0x4008a58	      0x41c6474200	                mov byte [r15 + 0x42], 0	      1519	quickfix.c	FUNCTION_17
0x4008a5d	      0x41c6474301	                mov byte [r15 + 0x43], 1	      1520	quickfix.c	FUNCTION_17
0x4008a62	    0x488d0cc50000	                        lea rcx, [rax*8]	      1523	quickfix.c	FUNCTION_17	IF_10
0x4008a6a	          0x4889c2	                            mov rdx, rax	      1523	quickfix.c	FUNCTION_17	IF_10
0x4008a6d	        0x48c1e207	                              shl rdx, 7	      1523	quickfix.c	FUNCTION_17	IF_10
0x4008a71	          0x4829ca	                            sub rdx, rcx	      1523	quickfix.c	FUNCTION_17	IF_10
0x4008a74	        0x48031424	                    add rdx, qword [rsp]	      1523	quickfix.c	FUNCTION_17	IF_10
0x4008a78	          0x8b7230	            mov esi, dword [rdx + 0x30] 	      1523	quickfix.c	FUNCTION_17	IF_10
0x4008a7b	            0x85f6	                           test esi, esi	      1523	quickfix.c	FUNCTION_17	IF_10
0x4008a7d	     0xf85dd010000	                           jne 0x4008c60	      1523	quickfix.c	FUNCTION_17	IF_10
0x4008a83	        0x4c897a18	             mov qword [rdx + 0x18], r15	      1526	quickfix.c	FUNCTION_17	IF_10
0x4008a87	        0x4c897a28	             mov qword [rdx + 0x28], r15	      1527	quickfix.c	FUNCTION_17	IF_10
0x4008a8b	    0xc74234000000	               mov dword [rdx + 0x34], 0	      1528	quickfix.c	FUNCTION_17	IF_10
0x4008a92	    0x49c747080000	                  mov qword [r15 + 8], 0	      1529	quickfix.c	FUNCTION_17	IF_10
0x4008a9a	    0x488d14c50000	                        lea rdx, [rax*8]	      1538	quickfix.c	FUNCTION_17
0x4008aa2	        0x48c1e007	                              shl rax, 7	      1538	quickfix.c	FUNCTION_17
0x4008aa6	      0x41c6474100	                mov byte [r15 + 0x41], 0	      1537	quickfix.c	FUNCTION_17
0x4008aab	    0x49c707000000	                      mov qword [r15], 0	      1536	quickfix.c	FUNCTION_17
0x4008ab2	          0x4829d0	                            sub rax, rdx	      1538	quickfix.c	FUNCTION_17
0x4008ab5	        0x48030424	                    add rax, qword [rsp]	      1538	quickfix.c	FUNCTION_17
0x4008ab9	          0x8b7030	            mov esi, dword [rax + 0x30] 	      1539	quickfix.c	FUNCTION_17
0x4008abc	          0x8b4834	            mov ecx, dword [rax + 0x34] 	      1540	quickfix.c	FUNCTION_17	IF_11
0x4008abf	        0x4c897820	             mov qword [rax + 0x20], r15	      1538	quickfix.c	FUNCTION_17
0x4008ac3	          0x8d5601	                      lea edx, [rsi + 1]	      1539	quickfix.c	FUNCTION_17
0x4008ac6	            0x85c9	                           test ecx, ecx	      1540	quickfix.c	FUNCTION_17	IF_11
0x4008ac8	          0x895030	             mov dword [rax + 0x30], edx	      1539	quickfix.c	FUNCTION_17
0x4008acb	            0x750e	                           jne 0x4008adb	      1540	quickfix.c	FUNCTION_17	IF_11
0x4008acd	      0x41807f4300	                cmp byte [r15 + 0x43], 0	      1540	quickfix.c	FUNCTION_17	IF_11
0x4008ad2	            0x7407	                            je 0x4008adb	      1540	quickfix.c	FUNCTION_17	IF_11
0x4008ad4	          0x895034	             mov dword [rax + 0x34], edx	      1543	quickfix.c	FUNCTION_17	IF_11
0x4008ad7	        0x4c897828	             mov qword [rax + 0x28], r15	      1545	quickfix.c	FUNCTION_17	IF_11
0x4008adb	    0x48836c242801	               sub qword [rsp + 0x28], 1	      4425	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_2
0x4008ae1	     0xf8409020000	                            je 0x4008cf0	      4425	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_2
0x4008ae7	      0x448b6c2434	           mov r13d, dword [rsp + 0x34] 	      4427	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_3
0x4008aec	          0x4585ed	                         test r13d, r13d	      4427	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_3
0x4008aef	     0xf84eb010000	                            je 0x4008ce0	      4427	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_3
0x4008af5	    0x4883bc24c802	              cmp qword [rsp + 0x2c8], 0	      4428	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_3
0x4008afe	     0xf8fdc010000	                            jg 0x4008ce0	      4428	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_3
0x4008b04	    0x8b8424d00200	           mov eax, dword [rsp + 0x2d0] 	      4431	quickfix.c	FUNCTION_78	FOR_1	WHILE_1
0x4008b0b	            0x31d2	                            xor edx, edx	      4431	quickfix.c	FUNCTION_78	FOR_1	WHILE_1
0x4008b0d	          0x4c89e6	                            mov rsi, r12	      4432	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_4	CALL_5
0x4008b10	          0x4c89f7	                            mov rdi, r14	      4432	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_4	CALL_5
0x4008b13	            0x39d8	                            cmp eax, ebx	      4431	quickfix.c	FUNCTION_78	FOR_1	WHILE_1
0x4008b15	           0xf94c2	                                 sete dl	      4431	quickfix.c	FUNCTION_78	FOR_1	WHILE_1
0x4008b18	          0x8d1c10	                    lea ebx, [rax + rdx]	      4430	quickfix.c	FUNCTION_78	FOR_1	WHILE_1
0x4008b1b	            0x31d2	                            xor edx, edx	      4432	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_4	CALL_5
0x4008b1d	      0xe800000000	                          call 0x4008b22	      4432	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_4	CALL_5
0x4008b22	          0x4889c7	                            mov rdi, rax	      4432	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_4	CALL_5
0x4008b25	      0xe800000000	                          call 0x4008b2a	      4432	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_4	CALL_5
0x4008b2a	            0x39c3	                            cmp ebx, eax	      4432	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_4	CALL_5
0x4008b2c	    0xc74424300100	               mov dword [rsp + 0x30], 1	      4424	quickfix.c	FUNCTION_78	FOR_1	WHILE_1
0x4008b34	     0xf8f50010000	                            jg 0x4008c8a	      4432	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_4	CALL_5
0x4008b3a	        0x4883ec08	                              sub rsp, 8	      4398	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	CALL_1
0x4008b3e	    0x488b35000000	            mov rsi, qword [0x04008b45] 	      4398	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	CALL_1
0x4008b45	          0x4531c9	                            xor r9d, r9d	      4398	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	CALL_1
0x4008b48	            0x6a00	                                  push 0	      4398	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	CALL_1
0x4008b4a	          0x4189d8	                            mov r8d, ebx	      4398	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	CALL_1
0x4008b4d	          0x4c89e1	                            mov rcx, r12	      4398	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	CALL_1
0x4008b50	          0x4c89f2	                            mov rdx, r14	      4398	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	CALL_1
0x4008b53	    0x488dbc243002	                  lea rdi, [rsp + 0x230]	      4398	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	CALL_1
0x4008b5b	      0xe800000000	                          call 0x4008b60	      4398	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	CALL_1
0x4008b60	          0x4885c0	                           test rax, rax	      4398	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	CALL_1
0x4008b63	            0x415b	                                 pop r11	      4398	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	CALL_1
0x4008b65	              0x5d	                                 pop rbp	      4398	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	CALL_1
0x4008b66	     0xf8e1e010000	                           jle 0x4008c8a	      4398	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	CALL_1
0x4008b6c	          0x4c89e5	                            mov rbp, r12	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x4008b6f	    0x4803ac242802	            add rbp, qword [rsp + 0x228]	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x4008b77	    0x8b8424300200	           mov eax, dword [rsp + 0x230] 	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x4008b7e	            0x31d2	                            xor edx, edx	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x4008b80	          0x4c89f7	                            mov rdi, r14	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x4008b83	          0x83c001	                              add eax, 1	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x4008b86	          0x4889ee	                            mov rsi, rbp	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x4008b89	        0x89442414	             mov dword [rsp + 0x14], eax	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x4008b8d	      0xe800000000	                          call 0x4008b92	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x4008b92	        0x8b7c2424	            mov edi, dword [rsp + 0x24] 	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x4008b96	      0x4889442408	                mov qword [rsp + 8], rax	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x4008b9b	            0x85ff	                           test edi, edi	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x4008b9d	     0xf841dfeffff	                            je 0x40089c0	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x4008ba3	        0x488b0424	                    mov rax, qword [rsp]	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x4008ba7	      0xbf48000000	                           mov edi, 0x48	      1478	quickfix.c	FUNCTION_17	IF_1	CALL_1
0x4008bac	          0x8b4008	                mov eax, dword [rax + 8]	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x4008baf	        0x89442420	             mov dword [rsp + 0x20], eax	      4404	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1	CALL_2
0x4008bb3	      0xe800000000	                          call 0x4008bb8	      1478	quickfix.c	FUNCTION_17	IF_1	CALL_1
0x4008bb8	          0x4885c0	                           test rax, rax	      1478	quickfix.c	FUNCTION_17	IF_1	CALL_1
0x4008bbb	          0x4989c7	                            mov r15, rax	      1478	quickfix.c	FUNCTION_17	IF_1	CALL_1
0x4008bbe	     0xf84bc000000	                            je 0x4008c80	      1478	quickfix.c	FUNCTION_17	IF_1	CALL_1
0x4008bc4	    0x48837c241800	               cmp qword [rsp + 0x18], 0	      1721	quickfix.c	FUNCTION_21	IF_1
0x4008bca	            0x740a	                            je 0x4008bd6	      1721	quickfix.c	FUNCTION_21	IF_1
0x4008bcc	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1721	quickfix.c	FUNCTION_21	IF_1
0x4008bd1	          0x803800	                       cmp byte [rax], 0	      1721	quickfix.c	FUNCTION_21	IF_1
0x4008bd4	            0x7512	                           jne 0x4008be8	      1721	quickfix.c	FUNCTION_21	IF_1
0x4008bd6	            0x31c0	                            xor eax, eax	      1722	quickfix.c	FUNCTION_21	IF_1
0x4008bd8	        0x41894718	             mov dword [r15 + 0x18], eax	      1490	quickfix.c	FUNCTION_17	CALL_3
0x4008bdc	      0xe92bfeffff	                           jmp 0x4008a0c	      1490	quickfix.c	FUNCTION_17	CALL_3
0x4008be1	     0xf1f80000000	                         nop dword [rax]	      1490	quickfix.c	FUNCTION_17	CALL_3
0x4008be8	    0x4c8b2d000000	            mov r13, qword [0x04008bef] 	      1756	quickfix.c	FUNCTION_21	ELSE_2	IF_6	CALL_11
0x4008bef	          0x4d85ed	                           test r13, r13	      1756	quickfix.c	FUNCTION_21	ELSE_2	IF_6	CALL_11
0x4008bf2	            0x7413	                            je 0x4008c07	      1756	quickfix.c	FUNCTION_21	ELSE_2	IF_6	CALL_11
0x4008bf4	          0x4c89ee	                            mov rsi, r13	      1756	quickfix.c	FUNCTION_21	ELSE_2	IF_6	CALL_11
0x4008bf7	          0x4889c7	                            mov rdi, rax	      1756	quickfix.c	FUNCTION_21	ELSE_2	IF_6	CALL_11
0x4008bfa	      0xe800000000	                          call 0x4008bff	      1756	quickfix.c	FUNCTION_21	ELSE_2	IF_6	CALL_11
0x4008bff	            0x85c0	                           test eax, eax	      1756	quickfix.c	FUNCTION_21	ELSE_2	IF_6	CALL_11
0x4008c01	     0xf84a9000000	                            je 0x4008cb0	      1756	quickfix.c	FUNCTION_21	ELSE_2	IF_6	CALL_11
0x4008c07	          0x4c89ef	                            mov rdi, r13	      1764	quickfix.c	FUNCTION_21	ELSE_3	CALL_14
0x4008c0a	      0xe800000000	                          call 0x4008c0f	      1764	quickfix.c	FUNCTION_21	ELSE_3	CALL_14
0x4008c0f	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1765	quickfix.c	FUNCTION_21	ELSE_3	CALL_15
0x4008c14	            0x31f6	                            xor esi, esi	      1765	quickfix.c	FUNCTION_21	ELSE_3	CALL_15
0x4008c16	      0xb910000000	                           mov ecx, 0x10	      1765	quickfix.c	FUNCTION_21	ELSE_3	CALL_15
0x4008c1b	            0x31d2	                            xor edx, edx	      1765	quickfix.c	FUNCTION_21	ELSE_3	CALL_15
0x4008c1d	      0xe800000000	                          call 0x4008c22	      1765	quickfix.c	FUNCTION_21	ELSE_3	CALL_15
0x4008c22	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      1769	quickfix.c	FUNCTION_21	ELSE_3	CALL_16
0x4008c27	          0x4989c5	                            mov r13, rax	      1765	quickfix.c	FUNCTION_21	ELSE_3	CALL_15
0x4008c2a	      0xe800000000	                          call 0x4008c2f	      1769	quickfix.c	FUNCTION_21	ELSE_3	CALL_16
0x4008c2f	          0x4c89ee	                            mov rsi, r13	      1770	quickfix.c	FUNCTION_21	ELSE_3	CALL_17
0x4008c32	      0xbf00000000	                              mov edi, 0	      1770	quickfix.c	FUNCTION_21	ELSE_3	CALL_17
0x4008c37	    0x488905000000	            mov qword [0x04008c3e], rax 	      1769	quickfix.c	FUNCTION_21	ELSE_3	CALL_16
0x4008c3e	      0xe800000000	                          call 0x4008c43	      1770	quickfix.c	FUNCTION_21	ELSE_3	CALL_17
0x4008c43	          0x4d85ed	                           test r13, r13	      1772	quickfix.c	FUNCTION_21	IF_8
0x4008c46	            0x748e	                            je 0x4008bd6	      1772	quickfix.c	FUNCTION_21	IF_8
0x4008c48	        0x8b442448	            mov eax, dword [rsp + 0x48] 	      1775	quickfix.c	FUNCTION_21
0x4008c4c	    0x418985201400	          mov dword [r13 + 0x1420], eax 	      1775	quickfix.c	FUNCTION_21
0x4008c53	    0x418b85b80000	            mov eax, dword [r13 + 0xb8] 	      1777	quickfix.c	FUNCTION_21
0x4008c5a	      0xe979ffffff	                           jmp 0x4008bd8	      1777	quickfix.c	FUNCTION_21
0x4008c5f	              0x90	                                     nop	      1777	quickfix.c	FUNCTION_21
0x4008c60	        0x488b4a20	            mov rcx, qword [rdx + 0x20] 	      1533	quickfix.c	FUNCTION_17	ELSE_4
0x4008c64	        0x49894f08	                mov qword [r15 + 8], rcx	      1533	quickfix.c	FUNCTION_17	ELSE_4
0x4008c68	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      1534	quickfix.c	FUNCTION_17	ELSE_4
0x4008c6c	          0x4c893a	                    mov qword [rdx], r15	      1534	quickfix.c	FUNCTION_17	ELSE_4
0x4008c6f	      0xe926feffff	                           jmp 0x4008a9a	      1534	quickfix.c	FUNCTION_17	ELSE_4
0x4008c74	         0xf1f4000	                         nop dword [rax]	      1534	quickfix.c	FUNCTION_17	ELSE_4
0x4008c78	          0x4c89ff	                            mov rdi, r15	      1493	quickfix.c	FUNCTION_17	IF_4	CALL_5
0x4008c7b	      0xe800000000	                          call 0x4008c80	      1493	quickfix.c	FUNCTION_17	IF_4	CALL_5
0x4008c80	    0xc70500000000	               mov dword [0x04008c8a], 1	      4421	quickfix.c	FUNCTION_78	FOR_1	WHILE_1	IF_1
0x4008c8a	      0xe800000000	                          call 0x4008c8f	      4435	quickfix.c	FUNCTION_78	FOR_1	CALL_6
0x4008c8f	    0x8b0500000000	            mov eax, dword [0x04008c95] 	      4436	quickfix.c	FUNCTION_78	FOR_1	IF_5
0x4008c95	            0x85c0	                           test eax, eax	      4436	quickfix.c	FUNCTION_78	FOR_1	IF_5
0x4008c97	            0x750d	                           jne 0x4008ca6	      4436	quickfix.c	FUNCTION_78	FOR_1	IF_5
0x4008c99	        0x4983c401	                              add r12, 1	      4395	quickfix.c	FUNCTION_78	FOR_1
0x4008c9d	          0x4d3b26	                    cmp r12, qword [r14]	      4395	quickfix.c	FUNCTION_78	FOR_1
0x4008ca0	     0xf8e0afdffff	                           jle 0x40089b0	      4395	quickfix.c	FUNCTION_78	FOR_1
0x4008ca6	          0x4d89f4	                            mov r12, r14	      4395	quickfix.c	FUNCTION_78	FOR_1
0x4008ca9	            0xeb5b	                           jmp 0x4008d06	      4395	quickfix.c	FUNCTION_78	FOR_1
0x4008cab	       0xf1f440000	                   nop dword [rax + rax]	      4395	quickfix.c	FUNCTION_78	FOR_1
0x4008cb0	      0xbf00000000	                              mov edi, 0	      1757	quickfix.c	FUNCTION_21	ELSE_2	IF_6	CALL_12
0x4008cb5	      0xe800000000	                          call 0x4008cba	      1757	quickfix.c	FUNCTION_21	ELSE_2	IF_6	CALL_12
0x4008cba	            0x85c0	                           test eax, eax	      1757	quickfix.c	FUNCTION_21	ELSE_2	IF_6	CALL_12
0x4008cbc	    0x4c8b2d000000	            mov r13, qword [0x04008cc3] 	      1757	quickfix.c	FUNCTION_21	ELSE_2	IF_6	CALL_12
0x4008cc3	     0xf843effffff	                            je 0x4008c07	      1757	quickfix.c	FUNCTION_21	ELSE_2	IF_6	CALL_12
0x4008cc9	            0x31ff	                            xor edi, edi	      1760	quickfix.c	FUNCTION_21	ELSE_2	IF_6	CALL_13
0x4008ccb	    0x4c8b2d000000	            mov r13, qword [0x04008cd2] 	      1759	quickfix.c	FUNCTION_21	ELSE_2	IF_6
0x4008cd2	      0xe800000000	                          call 0x4008cd7	      1760	quickfix.c	FUNCTION_21	ELSE_2	IF_6	CALL_13
0x4008cd7	      0xe967ffffff	                           jmp 0x4008c43	      1760	quickfix.c	FUNCTION_21	ELSE_2	IF_6	CALL_13
0x4008cdc	         0xf1f4000	                         nop dword [rax]	      1760	quickfix.c	FUNCTION_21	ELSE_2	IF_6	CALL_13
0x4008ce0	    0xc74424300100	               mov dword [rsp + 0x30], 1	      4424	quickfix.c	FUNCTION_78	FOR_1	WHILE_1
0x4008ce8	            0xeba0	                           jmp 0x4008c8a	      4424	quickfix.c	FUNCTION_78	FOR_1	WHILE_1
0x4008cea	    0x660f1f440000	                    nop word [rax + rax]	      4424	quickfix.c	FUNCTION_78	FOR_1	WHILE_1
0x4008cf0	      0xe800000000	                          call 0x4008cf5	      4435	quickfix.c	FUNCTION_78	FOR_1	CALL_6
0x4008cf5	    0x8b0500000000	            mov eax, dword [0x04008cfb] 	      4436	quickfix.c	FUNCTION_78	FOR_1	IF_5
0x4008cfb	          0x4d89f4	                            mov r12, r14	      4436	quickfix.c	FUNCTION_78	FOR_1	IF_5
0x4008cfe	    0xc74424300100	               mov dword [rsp + 0x30], 1	      4424	quickfix.c	FUNCTION_78	FOR_1	WHILE_1
0x4008d06	    0x448b94249800	           mov r10d, dword [rsp + 0x98] 	      4635	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18
0x4008d0e	          0x4585d2	                         test r10d, r10d	      4635	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18
0x4008d11	     0xf84e2000000	                            je 0x4008df9	      4635	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18
0x4008d17	      0x448b4c2430	            mov r9d, dword [rsp + 0x30] 	      4637	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_19
0x4008d1c	          0x4585c9	                           test r9d, r9d	      4637	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_19
0x4008d1f	            0x7417	                            je 0x4008d38	      4637	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_19
0x4008d21	    0x488b84249000	            mov rax, qword [rsp + 0x90] 	      4637	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_19
0x4008d29	          0x4885c0	                           test rax, rax	      4637	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_19
0x4008d2c	        0x490f44c4	                          cmove rax, r12	      4637	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_19
0x4008d30	    0x488984249000	             mov qword [rsp + 0x90], rax	      4637	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_19
0x4008d38	      0x448b442424	            mov r8d, dword [rsp + 0x24] 	      4639	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_20
0x4008d3d	          0x4585c0	                           test r8d, r8d	      4639	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_20
0x4008d40	     0xf855d050000	                           jne 0x40092a3	      4639	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_20
0x4008d46	    0x8b3d00000000	            mov edi, dword [0x04008d4c] 	      4646	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	ELSE_4	IF_21
0x4008d4c	            0x85ff	                           test edi, edi	      4646	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	ELSE_4	IF_21
0x4008d4e	     0xf8467040000	                            je 0x40091bb	      4646	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	ELSE_4	IF_21
0x4008d54	    0x498b84241014	          mov rax, qword [r12 + 0x1410] 	      4647	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	ELSE_4	IF_21
0x4008d5c	           0xfb600	                   movzx eax, byte [rax]	      4647	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	ELSE_4	IF_21
0x4008d5f	            0x89c2	                            mov edx, eax	      4649	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	ELSE_4	IF_21
0x4008d61	          0x83e2fd	                     and edx, 0xfffffffd	      4649	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	ELSE_4	IF_21
0x4008d64	          0x80fa75	                            cmp dl, 0x75	      4649	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	ELSE_4	IF_21
0x4008d67	     0xf844e040000	                            je 0x40091bb	      4649	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	ELSE_4	IF_21
0x4008d6d	            0x3c64	                            cmp al, 0x64	      4649	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	ELSE_4	IF_21
0x4008d6f	     0xf8446040000	                            je 0x40091bb	      4649	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	ELSE_4	IF_21
0x4008d75	    0x418164247c7f	      and dword [r12 + 0x7c], 0xffffff7f	      4674	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24
0x4008d7e	    0x4c3ba4249000	            cmp r12, qword [rsp + 0x90] 	      4678	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	IF_25
0x4008d86	            0x7528	                           jne 0x4008db0	      4678	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	IF_25
0x4008d88	    0x48837c245000	               cmp qword [rsp + 0x50], 0	      4678	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	IF_25
0x4008d8e	            0x7520	                           jne 0x4008db0	      4678	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	IF_25
0x4008d90	      0x488b742478	            mov rsi, qword [rsp + 0x78] 	      4680	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	IF_25	CALL_35
0x4008d95	      0x488b7c2458	            mov rdi, qword [rsp + 0x58] 	      4680	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	IF_25	CALL_35
0x4008d9a	      0xe800000000	                          call 0x4008d9f	      4680	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	IF_25	CALL_35
0x4008d9f	            0x85c0	                           test eax, eax	      4680	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	IF_25	CALL_35
0x4008da1	    0x48c744245000	               mov qword [rsp + 0x50], 0	      4680	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	IF_25	CALL_35
0x4008daa	     0xf8508060000	                           jne 0x40093b8	      4680	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	IF_25	CALL_35
0x4008db0	    0x488dbc24f000	                   lea rdi, [rsp + 0xf0]	      4687	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	CALL_37
0x4008db8	          0x4c89e6	                            mov rsi, r12	      4687	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	CALL_37
0x4008dbb	      0xe800000000	                          call 0x4008dc0	      4687	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	CALL_37
0x4008dc0	    0x498b94249800	            mov rdx, qword [r12 + 0x98] 	      4689	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	CALL_38
0x4008dc8	    0x498bb4249814	          mov rsi, qword [r12 + 0x1498] 	      4689	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	CALL_38
0x4008dd0	          0x4d89e0	                             mov r8, r12	      4689	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	CALL_38
0x4008dd3	      0xb901000000	                              mov ecx, 1	      4689	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	CALL_38
0x4008dd8	      0xbf2c000000	                           mov edi, 0x2c	      4689	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	CALL_38
0x4008ddd	      0xe800000000	                          call 0x4008de2	      4689	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	CALL_38
0x4008de2	      0xbf20000000	                           mov edi, 0x20	      4692	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	CALL_39
0x4008de7	      0xe800000000	                          call 0x4008dec	      4692	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	CALL_39
0x4008dec	    0x488dbc24f000	                   lea rdi, [rsp + 0xf0]	      4693	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	CALL_40
0x4008df4	      0xe800000000	                          call 0x4008df9	      4693	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	CALL_40
0x4008df9	      0x488b5c2468	            mov rbx, qword [rsp + 0x68] 	      4589	quickfix.c	FUNCTION_80	FOR_1
0x4008dfe	    0x8bbc24a80000	            mov edi, dword [rsp + 0xa8] 	      4589	quickfix.c	FUNCTION_80	FOR_1
0x4008e05	            0x89d8	                            mov eax, ebx	      4589	quickfix.c	FUNCTION_80	FOR_1
0x4008e07	          0x83c001	                              add eax, 1	      4589	quickfix.c	FUNCTION_80	FOR_1
0x4008e0a	            0x39f8	                            cmp eax, edi	      4589	quickfix.c	FUNCTION_80	FOR_1
0x4008e0c	            0x7d17	                           jge 0x4008e25	      4589	quickfix.c	FUNCTION_80	FOR_1
0x4008e0e	    0x8b0500000000	            mov eax, dword [0x04008e14] 	      4589	quickfix.c	FUNCTION_80	FOR_1
0x4008e14	        0x4883c301	                              add rbx, 1	      4589	quickfix.c	FUNCTION_80	FOR_1
0x4008e18	      0x48895c2468	             mov qword [rsp + 0x68], rbx	      4589	quickfix.c	FUNCTION_80	FOR_1
0x4008e1d	            0x85c0	                           test eax, eax	      4589	quickfix.c	FUNCTION_80	FOR_1
0x4008e1f	     0xf84abf9ffff	                            je 0x40087d0	      4589	quickfix.c	FUNCTION_80	FOR_1
0x4008e25	        0x4c8b3c24	                    mov r15, qword [rsp]	      4589	quickfix.c	FUNCTION_80	FOR_1
0x4008e29	    0x488bb424b000	            mov rsi, qword [rsp + 0xb0] 	      4699	quickfix.c	FUNCTION_80	CALL_41
0x4008e31	      0xe800000000	                          call 0x4008e36	      4699	quickfix.c	FUNCTION_80	CALL_41
0x4008e36	        0x49634708	            movsxd rax, dword [r15 + 8] 	      4701	quickfix.c	FUNCTION_80
0x4008e3a	            0x31f6	                            xor esi, esi	      4706	quickfix.c	FUNCTION_80	CALL_43
0x4008e3c	          0x4c89ff	                            mov rdi, r15	      4706	quickfix.c	FUNCTION_80	CALL_43
0x4008e3f	    0x488d14c50000	                        lea rdx, [rax*8]	      4701	quickfix.c	FUNCTION_80
0x4008e47	        0x48c1e007	                              shl rax, 7	      4701	quickfix.c	FUNCTION_80
0x4008e4b	          0x4829d0	                            sub rax, rdx	      4701	quickfix.c	FUNCTION_80
0x4008e4e	          0x4c01f8	                            add rax, r15	      4701	quickfix.c	FUNCTION_80
0x4008e51	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      4702	quickfix.c	FUNCTION_80
0x4008e55	    0x488380800000	               add qword [rax + 0x80], 1	      3701	quickfix.c	FUNCTION_61
0x4008e5d	    0xc74038000000	               mov dword [rax + 0x38], 0	      4701	quickfix.c	FUNCTION_80
0x4008e64	    0xc74034010000	               mov dword [rax + 0x34], 1	      4703	quickfix.c	FUNCTION_80
0x4008e6b	        0x48895028	             mov qword [rax + 0x28], rdx	      4702	quickfix.c	FUNCTION_80
0x4008e6f	      0xe84c89ffff	               call sym.qf_update_buffer	      4706	quickfix.c	FUNCTION_80	CALL_43
0x4008e74	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	      4708	quickfix.c	FUNCTION_80	IF_26
0x4008e7c	          0x4885c0	                           test rax, rax	      4708	quickfix.c	FUNCTION_80	IF_26
0x4008e7f	            0x7420	                            je 0x4008ea1	      4708	quickfix.c	FUNCTION_80	IF_26
0x4008e81	    0x4c8b05000000	              mov r8, qword [0x04008e88]	      4710	quickfix.c	FUNCTION_80	IF_26
0x4008e88	      0xb901000000	                              mov ecx, 1	      4709	quickfix.c	FUNCTION_80	IF_26	CALL_44
0x4008e8d	          0x4889c6	                            mov rsi, rax	      4709	quickfix.c	FUNCTION_80	IF_26	CALL_44
0x4008e90	      0xbf3f000000	                           mov edi, 0x3f	      4709	quickfix.c	FUNCTION_80	IF_26	CALL_44
0x4008e95	    0x498b90980000	              mov rdx, qword [r8 + 0x98]	      4709	quickfix.c	FUNCTION_80	IF_26	CALL_44
0x4008e9c	      0xe800000000	                          call 0x4008ea1	      4709	quickfix.c	FUNCTION_80	IF_26	CALL_44
0x4008ea1	      0x488b5c2440	            mov rbx, qword [rsp + 0x40] 	      1962	quickfix.c	FUNCTION_26	IF_1
0x4008ea6	          0x4885db	                           test rbx, rbx	      1962	quickfix.c	FUNCTION_26	IF_1
0x4008ea9	     0xf84d0060000	                            je 0x400957f	      1962	quickfix.c	FUNCTION_26	IF_1
0x4008eaf	        0x488b7b08	                mov rdi, qword [rbx + 8]	      1964	quickfix.c	FUNCTION_26	IF_1
0x4008eb3	      0xe800000000	                          call 0x4008eb8	      1964	quickfix.c	FUNCTION_26	IF_1
0x4008eb8	            0x85c0	                           test eax, eax	      1964	quickfix.c	FUNCTION_26	IF_1
0x4008eba	     0xf8413050000	                            je 0x40093d3	      1964	quickfix.c	FUNCTION_26	IF_1
0x4008ec0	    0x488b93501900	          mov rdx, qword [rbx + 0x1950] 	      1964	quickfix.c	FUNCTION_26	IF_1
0x4008ec7	          0x4885d2	                           test rdx, rdx	      1964	quickfix.c	FUNCTION_26	IF_1
0x4008eca	     0xf8403050000	                            je 0x40093d3	      1964	quickfix.c	FUNCTION_26	IF_1
0x4008ed0	          0x8b4a04	                mov ecx, dword [rdx + 4]	      1969	quickfix.c	FUNCTION_26	FOR_1
0x4008ed3	            0x85c9	                           test ecx, ecx	      1969	quickfix.c	FUNCTION_26	FOR_1
0x4008ed5	     0xf8ee8f5ffff	                           jle 0x40084c3	      1969	quickfix.c	FUNCTION_26	FOR_1
0x4008edb	        0x8b44244c	            mov eax, dword [rsp + 0x4c] 	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x4008edf	          0x3b4210	            cmp eax, dword [rdx + 0x10] 	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x4008ee2	            0x743e	                            je 0x4008f22	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x4008ee4	          0x83e901	                              sub ecx, 1	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x4008ee7	    0x488d82880000	                   lea rax, [rdx + 0x88]	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x4008eee	    0x488d34cd0000	                        lea rsi, [rcx*8]	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x4008ef6	        0x48c1e107	                              shl rcx, 7	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x4008efa	          0x4829f1	                            sub rcx, rsi	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x4008efd	    0x488d940a8800	            lea rdx, [rdx + rcx + 0x88] 	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x4008f05	        0x8b4c244c	            mov ecx, dword [rsp + 0x4c] 	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x4008f09	     0xf1f80000000	                         nop dword [rax]	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x4008f10	          0x4839d0	                            cmp rax, rdx	      1969	quickfix.c	FUNCTION_26	FOR_1
0x4008f13	     0xf84aaf5ffff	                            je 0x40084c3	      1969	quickfix.c	FUNCTION_26	FOR_1
0x4008f19	        0x4883c078	                           add rax, 0x78	      1969	quickfix.c	FUNCTION_26	FOR_1
0x4008f1d	          0x3b4888	             cmp ecx, dword [rax - 0x78]	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x4008f20	            0x75ee	                           jne 0x4008f10	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x4008f22	        0x49634708	            movsxd rax, dword [r15 + 8] 	      4719	quickfix.c	FUNCTION_80	IF_28
0x4008f26	    0x488d14c50000	                        lea rdx, [rax*8]	      4719	quickfix.c	FUNCTION_80	IF_28
0x4008f2e	        0x48c1e007	                              shl rax, 7	      4719	quickfix.c	FUNCTION_80	IF_28
0x4008f32	          0x4829d0	                            sub rax, rdx	      4719	quickfix.c	FUNCTION_80	IF_28
0x4008f35	      0x418b540730	      mov edx, dword [r15 + rax + 0x30] 	      4719	quickfix.c	FUNCTION_80	IF_28
0x4008f3a	            0x85d2	                           test edx, edx	      4719	quickfix.c	FUNCTION_80	IF_28
0x4008f3c	     0xf8ede060000	                           jle 0x4009620	      4719	quickfix.c	FUNCTION_80	IF_28
0x4008f42	    0xf68424ac0000	               test byte [rsp + 0xac], 2	      4721	quickfix.c	FUNCTION_80	IF_28	IF_29
0x4008f4a	     0xf8455060000	                            je 0x40095a5	      4721	quickfix.c	FUNCTION_80	IF_28	IF_29
0x4008f50	    0x8b8c249c0000	            mov ecx, dword [rsp + 0x9c] 	      4730	quickfix.c	FUNCTION_80	IF_30
0x4008f57	            0x85c9	                           test ecx, ecx	      4730	quickfix.c	FUNCTION_80	IF_30
0x4008f59	     0xf8464f5ffff	                            je 0x40084c3	      4730	quickfix.c	FUNCTION_80	IF_30
0x4008f5f	    0x488b3d000000	            mov rdi, qword [0x04008f66] 	      4733	quickfix.c	FUNCTION_80	IF_30	CALL_49
0x4008f66	      0xe800000000	                          call 0x4008f6b	      4733	quickfix.c	FUNCTION_80	IF_30	CALL_49
0x4008f6b	      0xe953f5ffff	                           jmp 0x40084c3	      4733	quickfix.c	FUNCTION_80	IF_30	CALL_49
0x4008f70	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      1964	quickfix.c	FUNCTION_26	IF_1
0x4008f75	    0x488b80481900	          mov rax, qword [rax + 0x1948] 	      1964	quickfix.c	FUNCTION_26	IF_1
0x4008f7c	          0x4885c0	                           test rax, rax	      1965	quickfix.c	FUNCTION_26	IF_1	IF_2
0x4008f7f	     0xf85f1f8ffff	                           jne 0x4008876	      1965	quickfix.c	FUNCTION_26	IF_1	IF_2
0x4008f85	      0xe92af9ffff	                           jmp 0x40088b4	      1965	quickfix.c	FUNCTION_26	IF_1	IF_2
0x4008f8a	    0x8b0d00000000	            mov ecx, dword [0x04008f90] 	      1969	quickfix.c	FUNCTION_26	FOR_1
0x4008f90	      0xb800000000	                              mov eax, 0	      1959	quickfix.c	FUNCTION_26
0x4008f95	            0x85c9	                           test ecx, ecx	      1969	quickfix.c	FUNCTION_26	FOR_1
0x4008f97	     0xf8fe0f8ffff	                            jg 0x400887d	      1969	quickfix.c	FUNCTION_26	FOR_1
0x4008f9d	          0x4889de	                            mov rsi, rbx	      4364	quickfix.c	FUNCTION_77	IF_1	ELSE_1	CALL_4
0x4008fa0	        0x488b1c24	                    mov rbx, qword [rsp]	      4364	quickfix.c	FUNCTION_77	IF_1	ELSE_1	CALL_4
0x4008fa4	          0x4889df	                            mov rdi, rbx	      4364	quickfix.c	FUNCTION_77	IF_1	ELSE_1	CALL_4
0x4008fa7	      0xe8947effff	                    call sym.qf_new_list	      4364	quickfix.c	FUNCTION_77	IF_1	ELSE_1	CALL_4
0x4008fac	        0x48634308	            movsxd rax, dword [rbx + 8] 	      4364	quickfix.c	FUNCTION_77	IF_1	ELSE_1	CALL_4
0x4008fb0	    0x488d14c50000	                        lea rdx, [rax*8]	      4364	quickfix.c	FUNCTION_77	IF_1	ELSE_1	CALL_4
0x4008fb8	        0x48c1e007	                              shl rax, 7	      4364	quickfix.c	FUNCTION_77	IF_1	ELSE_1	CALL_4
0x4008fbc	          0x4829d0	                            sub rax, rdx	      4364	quickfix.c	FUNCTION_77	IF_1	ELSE_1	CALL_4
0x4008fbf	        0x8b440310	      mov eax, dword [rbx + rax + 0x10] 	      4364	quickfix.c	FUNCTION_77	IF_1	ELSE_1	CALL_4
0x4008fc3	        0x8944244c	             mov dword [rsp + 0x4c], eax	      4364	quickfix.c	FUNCTION_77	IF_1	ELSE_1	CALL_4
0x4008fc7	      0xe999f9ffff	                           jmp 0x4008965	      4364	quickfix.c	FUNCTION_77	IF_1	ELSE_1	CALL_4
0x4008fcc	    0x8b0500000000	            mov eax, dword [0x04008fd2] 	      4625	quickfix.c	FUNCTION_80	FOR_1	IF_16	IF_17
0x4008fd2	            0x85c0	                           test eax, eax	      4625	quickfix.c	FUNCTION_80	FOR_1	IF_16	IF_17
0x4008fd4	     0xf851ffeffff	                           jne 0x4008df9	      4625	quickfix.c	FUNCTION_80	FOR_1	IF_16	IF_17
0x4008fda	            0x31ff	                            xor edi, edi	      4626	quickfix.c	FUNCTION_80	FOR_1	IF_16	CALL_30
0x4008fdc	      0xba05000000	                              mov edx, 5	      4626	quickfix.c	FUNCTION_80	FOR_1	IF_16	CALL_30
0x4008fe1	      0xbe00000000	                              mov esi, 0	      4626	quickfix.c	FUNCTION_80	FOR_1	IF_16	CALL_30
0x4008fe6	      0xe800000000	                          call 0x4008feb	      4626	quickfix.c	FUNCTION_80	FOR_1	IF_16	CALL_30
0x4008feb	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      4626	quickfix.c	FUNCTION_80	FOR_1	IF_16	CALL_30
0x4008ff0	          0x4889c7	                            mov rdi, rax	      4626	quickfix.c	FUNCTION_80	FOR_1	IF_16	CALL_30
0x4008ff3	            0x31c0	                            xor eax, eax	      4626	quickfix.c	FUNCTION_80	FOR_1	IF_16	CALL_30
0x4008ff5	      0xe800000000	                          call 0x4008ffa	      4626	quickfix.c	FUNCTION_80	FOR_1	IF_16	CALL_30
0x4008ffa	      0xe9fafdffff	                           jmp 0x4008df9	      4626	quickfix.c	FUNCTION_80	FOR_1	IF_16	CALL_30
0x4008fff	            0x31ff	                            xor edi, edi	      4596	quickfix.c	FUNCTION_80	FOR_1	IF_13	CALL_23
0x4009001	      0xe800000000	                          call 0x4009006	      4596	quickfix.c	FUNCTION_80	FOR_1	IF_13	CALL_23
0x4009006	    0x488984248800	             mov qword [rsp + 0x88], rax	      4596	quickfix.c	FUNCTION_80	FOR_1	IF_13	CALL_23
0x400900e	      0xe800000000	                          call 0x4009013	      4288	quickfix.c	FUNCTION_75	CALL_1
0x4009013	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4289	quickfix.c	FUNCTION_75	CALL_2
0x4009018	      0xbe01000000	                              mov esi, 1	      4289	quickfix.c	FUNCTION_75	CALL_2
0x400901d	      0xe800000000	                          call 0x4009022	      4289	quickfix.c	FUNCTION_75	CALL_2
0x4009022	          0x4885c0	                           test rax, rax	      4290	quickfix.c	FUNCTION_75	IF_1
0x4009025	          0x4889c5	                            mov rbp, rax	      4289	quickfix.c	FUNCTION_75	CALL_2
0x4009028	     0xf8467040000	                            je 0x4009495	      4290	quickfix.c	FUNCTION_75	IF_1
0x400902e	          0x4889c7	                            mov rdi, rax	      4294	quickfix.c	FUNCTION_75	ELSE_1	CALL_4
0x4009031	      0xe800000000	                          call 0x4009036	      4294	quickfix.c	FUNCTION_75	ELSE_1	CALL_4
0x4009036	          0x4889ef	                            mov rdi, rbp	      4295	quickfix.c	FUNCTION_75	ELSE_1	CALL_5
0x4009039	      0xe800000000	                          call 0x400903e	      4295	quickfix.c	FUNCTION_75	ELSE_1	CALL_5
0x400903e	      0xe800000000	                          call 0x4009043	      4297	quickfix.c	FUNCTION_75	CALL_6
0x4009043	    0xc70500000000	               mov dword [0x0400904d], 0	      4298	quickfix.c	FUNCTION_75
0x400904d	    0xc70500000000	               mov dword [0x04009057], 1	      4299	quickfix.c	FUNCTION_75
0x4009057	    0xc70500000000	               mov dword [0x04009061], 0	      4300	quickfix.c	FUNCTION_75
0x4009061	      0xe800000000	                          call 0x4009066	      4301	quickfix.c	FUNCTION_75	CALL_7
0x4009066	      0xe99df7ffff	                           jmp 0x4008808	      4301	quickfix.c	FUNCTION_75	CALL_7
0x400906b	            0x31c0	                            xor eax, eax	      4604	quickfix.c	FUNCTION_80	FOR_1	IF_14
0x400906d	          0x4d85e4	                           test r12, r12	      4604	quickfix.c	FUNCTION_80	FOR_1	IF_14
0x4009070	      0xbf00000000	                              mov edi, 0	      4322	quickfix.c	FUNCTION_76	CALL_1
0x4009075	           0xf95c0	                                setne al	      4604	quickfix.c	FUNCTION_80	FOR_1	IF_14
0x4009078	        0x89442424	             mov dword [rsp + 0x24], eax	      4604	quickfix.c	FUNCTION_80	FOR_1	IF_14
0x400907c	      0xe800000000	                          call 0x4009081	      4322	quickfix.c	FUNCTION_76	CALL_1
0x4009081	            0x31f6	                            xor esi, esi	      4799	quickfix.c	FUNCTION_82	CALL_1
0x4009083	            0x31ff	                            xor edi, edi	      4799	quickfix.c	FUNCTION_82	CALL_1
0x4009085	      0xb904000000	                              mov ecx, 4	      4799	quickfix.c	FUNCTION_82	CALL_1
0x400908a	      0xba01000000	                              mov edx, 1	      4799	quickfix.c	FUNCTION_82	CALL_1
0x400908f	    0x488b2d000000	            mov rbp, qword [0x04009096] 	      4325	quickfix.c	FUNCTION_76
0x4009096	          0x4989c6	                            mov r14, rax	      4322	quickfix.c	FUNCTION_76	CALL_1
0x4009099	    0x48c705000000	               mov qword [0x040090a4], 0	      4326	quickfix.c	FUNCTION_76
0x40090a4	      0xe800000000	                          call 0x40090a9	      4799	quickfix.c	FUNCTION_82	CALL_1
0x40090a9	          0x4885c0	                           test rax, rax	      4800	quickfix.c	FUNCTION_82	IF_1
0x40090ac	          0x4989c4	                            mov r12, rax	      4799	quickfix.c	FUNCTION_82	CALL_1
0x40090af	     0xf84d8030000	                            je 0x400948d	      4800	quickfix.c	FUNCTION_82	IF_1
0x40090b5	    0x488dbc24c000	                   lea rdi, [rsp + 0xc0]	      4802	quickfix.c	FUNCTION_82	CALL_2
0x40090bd	          0x4889c6	                            mov rsi, rax	      4802	quickfix.c	FUNCTION_82	CALL_2
0x40090c0	      0xbb01000000	                              mov ebx, 1	      4794	quickfix.c	FUNCTION_82
0x40090c5	      0xe800000000	                          call 0x40090ca	      4802	quickfix.c	FUNCTION_82	CALL_2
0x40090ca	      0xbe05000000	                              mov esi, 5	      4805	quickfix.c	FUNCTION_82	CALL_3
0x40090cf	          0x4c89e7	                            mov rdi, r12	      4805	quickfix.c	FUNCTION_82	CALL_3
0x40090d2	      0xe800000000	                          call 0x40090d7	      4805	quickfix.c	FUNCTION_82	CALL_3
0x40090d7	          0x4c89e7	                            mov rdi, r12	      4808	quickfix.c	FUNCTION_82	IF_2	CALL_4
0x40090da	      0xe800000000	                          call 0x40090df	      4808	quickfix.c	FUNCTION_82	IF_2	CALL_4
0x40090df	          0x83f801	                              cmp eax, 1	      4808	quickfix.c	FUNCTION_82	IF_2	CALL_4
0x40090e2	     0xf84bc030000	                            je 0x40094a4	      4808	quickfix.c	FUNCTION_82	IF_2	CALL_4
0x40090e8	      0x488b7c2478	            mov rdi, qword [rsp + 0x78] 	      4862	quickfix.c	FUNCTION_82	CALL_13
0x40090ed	      0xbe00100000	                         mov esi, 0x1000	      4862	quickfix.c	FUNCTION_82	CALL_13
0x40090f2	      0xe800000000	                          call 0x40090f7	      4862	quickfix.c	FUNCTION_82	CALL_13
0x40090f7	      0xbf00100000	                         mov edi, 0x1000	      4754	quickfix.c	FUNCTION_81	CALL_1
0x40090fc	      0xe800000000	                          call 0x4009101	      4754	quickfix.c	FUNCTION_81	CALL_1
0x4009101	          0x4885c0	                           test rax, rax	      4756	quickfix.c	FUNCTION_81	IF_1
0x4009104	          0x4989c5	                            mov r13, rax	      4754	quickfix.c	FUNCTION_81	CALL_1
0x4009107	            0x745d	                            je 0x4009166	      4756	quickfix.c	FUNCTION_81	IF_1
0x4009109	      0xbe00100000	                         mov esi, 0x1000	      4758	quickfix.c	FUNCTION_81	IF_1	CALL_2
0x400910e	          0x4889c7	                            mov rdi, rax	      4758	quickfix.c	FUNCTION_81	IF_1	CALL_2
0x4009111	      0xe800000000	                          call 0x4009116	      4758	quickfix.c	FUNCTION_81	IF_1	CALL_2
0x4009116	      0x4c8b7c2458	            mov r15, qword [rsp + 0x58] 	      4759	quickfix.c	FUNCTION_81	IF_1	IF_2	CALL_3
0x400911b	          0x4c89ee	                            mov rsi, r13	      4759	quickfix.c	FUNCTION_81	IF_1	IF_2	CALL_3
0x400911e	          0x4c89ff	                            mov rdi, r15	      4759	quickfix.c	FUNCTION_81	IF_1	IF_2	CALL_3
0x4009121	      0xe800000000	                          call 0x4009126	      4759	quickfix.c	FUNCTION_81	IF_1	IF_2	CALL_3
0x4009126	            0x85c0	                           test eax, eax	      4759	quickfix.c	FUNCTION_81	IF_1	IF_2	CALL_3
0x4009128	            0x7434	                            je 0x400915e	      4759	quickfix.c	FUNCTION_81	IF_1	IF_2	CALL_3
0x400912a	    0x488b05000000	            mov rax, qword [0x04009131] 	      4766	quickfix.c	FUNCTION_81	IF_1	IF_2
0x4009131	    0x488dbc247001	                  lea rdi, [rsp + 0x170]	      4767	quickfix.c	FUNCTION_81	IF_1	IF_2	CALL_4
0x4009139	    0x4c89bc247001	            mov qword [rsp + 0x170], r15	      4765	quickfix.c	FUNCTION_81	IF_1	IF_2
0x4009141	    0x4883b8900100	              cmp qword [rax + 0x190], 1	      4766	quickfix.c	FUNCTION_81	IF_1	IF_2
0x4009149	            0x19c0	                            sbb eax, eax	      4766	quickfix.c	FUNCTION_81	IF_1	IF_2
0x400914b	            0x2464	                            and al, 0x64	      4766	quickfix.c	FUNCTION_81	IF_1	IF_2
0x400914d	       0x5d4000000	                           add eax, 0xd4	      4766	quickfix.c	FUNCTION_81	IF_1	IF_2
0x4009152	    0x898424900100	            mov dword [rsp + 0x190], eax	      4766	quickfix.c	FUNCTION_81	IF_1	IF_2
0x4009159	      0xe800000000	                          call 0x400915e	      4767	quickfix.c	FUNCTION_81	IF_1	IF_2	CALL_4
0x400915e	          0x4c89ef	                            mov rdi, r13	      4769	quickfix.c	FUNCTION_81	IF_1	CALL_5
0x4009161	      0xe800000000	                          call 0x4009166	      4769	quickfix.c	FUNCTION_81	IF_1	CALL_5
0x4009166	    0x488dbc24c000	                   lea rdi, [rsp + 0xc0]	      4865	quickfix.c	FUNCTION_82	IF_6	CALL_15
0x400916e	      0xe800000000	                          call 0x4009173	      4865	quickfix.c	FUNCTION_82	IF_6	CALL_15
0x4009173	            0x85c0	                           test eax, eax	      4865	quickfix.c	FUNCTION_82	IF_6	CALL_15
0x4009175	     0xf8412030000	                            je 0x400948d	      4865	quickfix.c	FUNCTION_82	IF_6	CALL_15
0x400917b	            0x85db	                           test ebx, ebx	      4867	quickfix.c	FUNCTION_82	IF_7
0x400917d	     0xf856a020000	                           jne 0x40093ed	      4867	quickfix.c	FUNCTION_82	IF_7
0x4009183	          0x4863ed	                         movsxd rbp, ebp	      4332	quickfix.c	FUNCTION_76
0x4009186	          0x4c89f7	                            mov rdi, r14	      4334	quickfix.c	FUNCTION_76	CALL_3
0x4009189	    0x48892d000000	            mov qword [0x04009190], rbp 	      4332	quickfix.c	FUNCTION_76
0x4009190	      0xe800000000	                          call 0x4009195	      4334	quickfix.c	FUNCTION_76	CALL_3
0x4009195	    0xc784249c0000	               mov dword [rsp + 0x9c], 1	      4606	quickfix.c	FUNCTION_80	FOR_1	IF_14
0x40091a0	    0xc78424980000	               mov dword [rsp + 0x98], 1	      4605	quickfix.c	FUNCTION_80	FOR_1	IF_14
0x40091ab	      0xe98bf6ffff	                           jmp 0x400883b	      4608	quickfix.c	FUNCTION_80	FOR_1	IF_14	CALL_26
0x40091b0	            0x31c0	                            xor eax, eax	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x40091b2	        0x488b1c24	                    mov rbx, qword [rsp]	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x40091b6	      0xe9a3f7ffff	                           jmp 0x400895e	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x40091bb	        0x8b742430	            mov esi, dword [rsp + 0x30] 	      4657	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	ELSE_4	IF_21	IF_22
0x40091bf	            0x85f6	                           test esi, esi	      4657	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	ELSE_4	IF_21	IF_22
0x40091c1	     0xf84dc000000	                            je 0x40092a3	      4657	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	ELSE_4	IF_21	IF_22
0x40091c7	    0x4c3ba4249000	            cmp r12, qword [rsp + 0x90] 	      4662	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	ELSE_4	IF_21	ELSE_5	IF_23
0x40091cf	     0xf84bf010000	                            je 0x4009394	      4662	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	ELSE_4	IF_21	ELSE_5	IF_23
0x40091d5	    0x4c3b25000000	            cmp r12, qword [0x040091dc] 	      4914	quickfix.c	FUNCTION_84	IF_1
0x40091dc	     0xf8480000000	                            je 0x4009262	      4914	quickfix.c	FUNCTION_84	IF_1
0x40091e2	            0x31c9	                            xor ecx, ecx	      4916	quickfix.c	FUNCTION_84	IF_1	CALL_1
0x40091e4	            0x31ff	                            xor edi, edi	      4916	quickfix.c	FUNCTION_84	IF_1	CALL_1
0x40091e6	      0xba02000000	                              mov edx, 2	      4916	quickfix.c	FUNCTION_84	IF_1	CALL_1
0x40091eb	          0x4c89e6	                            mov rsi, r12	      4916	quickfix.c	FUNCTION_84	IF_1	CALL_1
0x40091ee	      0xe800000000	                          call 0x40091f3	      4916	quickfix.c	FUNCTION_84	IF_1	CALL_1
0x40091f3	      0xbf00100000	                         mov edi, 0x1000	      4754	quickfix.c	FUNCTION_81	CALL_1
0x40091f8	      0xe800000000	                          call 0x40091fd	      4754	quickfix.c	FUNCTION_81	CALL_1
0x40091fd	          0x4885c0	                           test rax, rax	      4756	quickfix.c	FUNCTION_81	IF_1
0x4009200	          0x4889c3	                            mov rbx, rax	      4754	quickfix.c	FUNCTION_81	CALL_1
0x4009203	            0x745d	                            je 0x4009262	      4756	quickfix.c	FUNCTION_81	IF_1
0x4009205	      0xbe00100000	                         mov esi, 0x1000	      4758	quickfix.c	FUNCTION_81	IF_1	CALL_2
0x400920a	          0x4889c7	                            mov rdi, rax	      4758	quickfix.c	FUNCTION_81	IF_1	CALL_2
0x400920d	      0xe800000000	                          call 0x4009212	      4758	quickfix.c	FUNCTION_81	IF_1	CALL_2
0x4009212	      0x4c8b742458	            mov r14, qword [rsp + 0x58] 	      4759	quickfix.c	FUNCTION_81	IF_1	IF_2	CALL_3
0x4009217	          0x4889de	                            mov rsi, rbx	      4759	quickfix.c	FUNCTION_81	IF_1	IF_2	CALL_3
0x400921a	          0x4c89f7	                            mov rdi, r14	      4759	quickfix.c	FUNCTION_81	IF_1	IF_2	CALL_3
0x400921d	      0xe800000000	                          call 0x4009222	      4759	quickfix.c	FUNCTION_81	IF_1	IF_2	CALL_3
0x4009222	            0x85c0	                           test eax, eax	      4759	quickfix.c	FUNCTION_81	IF_1	IF_2	CALL_3
0x4009224	            0x7434	                            je 0x400925a	      4759	quickfix.c	FUNCTION_81	IF_1	IF_2	CALL_3
0x4009226	    0x488b05000000	            mov rax, qword [0x0400922d] 	      4766	quickfix.c	FUNCTION_81	IF_1	IF_2
0x400922d	    0x488dbc247001	                  lea rdi, [rsp + 0x170]	      4767	quickfix.c	FUNCTION_81	IF_1	IF_2	CALL_4
0x4009235	    0x4c89b4247001	            mov qword [rsp + 0x170], r14	      4765	quickfix.c	FUNCTION_81	IF_1	IF_2
0x400923d	    0x4883b8900100	              cmp qword [rax + 0x190], 1	      4766	quickfix.c	FUNCTION_81	IF_1	IF_2
0x4009245	            0x19c0	                            sbb eax, eax	      4766	quickfix.c	FUNCTION_81	IF_1	IF_2
0x4009247	            0x2464	                            and al, 0x64	      4766	quickfix.c	FUNCTION_81	IF_1	IF_2
0x4009249	       0x5d4000000	                           add eax, 0xd4	      4766	quickfix.c	FUNCTION_81	IF_1	IF_2
0x400924e	    0x898424900100	            mov dword [rsp + 0x190], eax	      4766	quickfix.c	FUNCTION_81	IF_1	IF_2
0x4009255	      0xe800000000	                          call 0x400925a	      4767	quickfix.c	FUNCTION_81	IF_1	IF_2	CALL_4
0x400925a	          0x4889df	                            mov rdi, rbx	      4769	quickfix.c	FUNCTION_81	IF_1	CALL_5
0x400925d	      0xe800000000	                          call 0x4009262	      4769	quickfix.c	FUNCTION_81	IF_1	CALL_5
0x4009262	    0x418164247c7f	      and dword [r12 + 0x7c], 0xffffff7f	      4666	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	ELSE_4	IF_21	ELSE_5	IF_23
0x400926b	      0xe989fbffff	                           jmp 0x4008df9	      4666	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	ELSE_4	IF_21	ELSE_5	IF_23
0x4009270	    0x48c784248000	               mov qword [rsp + 0x80], 0	      4249	quickfix.c	FUNCTION_73	SWITCH_1
0x400927c	      0xe9cfefffff	                           jmp 0x4008250	      4249	quickfix.c	FUNCTION_73	SWITCH_1
0x4009281	    0x48c784248000	               mov qword [rsp + 0x80], 0	      4246	quickfix.c	FUNCTION_73	SWITCH_1
0x400928d	      0xe9beefffff	                           jmp 0x4008250	      4246	quickfix.c	FUNCTION_73	SWITCH_1
0x4009292	    0x48c784248000	               mov qword [rsp + 0x80], 0	      4248	quickfix.c	FUNCTION_73	SWITCH_1
0x400929e	      0xe9adefffff	                           jmp 0x4008250	      4248	quickfix.c	FUNCTION_73	SWITCH_1
0x40092a3	    0x4c3b25000000	            cmp r12, qword [0x040092aa] 	      4883	quickfix.c	FUNCTION_83	IF_1
0x40092aa	     0xf8449fbffff	                            je 0x4008df9	      4883	quickfix.c	FUNCTION_83	IF_1
0x40092b0	    0x488dbc243001	                  lea rdi, [rsp + 0x130]	      4891	quickfix.c	FUNCTION_83	IF_1	CALL_1
0x40092b8	      0xe800000000	                          call 0x40092bd	      4891	quickfix.c	FUNCTION_83	IF_1	CALL_1
0x40092bd	            0x31f6	                            xor esi, esi	      4894	quickfix.c	FUNCTION_83	IF_1	CALL_2
0x40092bf	          0x4c89e7	                            mov rdi, r12	      4894	quickfix.c	FUNCTION_83	IF_1	CALL_2
0x40092c2	      0xe800000000	                          call 0x40092c7	      4894	quickfix.c	FUNCTION_83	IF_1	CALL_2
0x40092c7	    0x488dbc243001	                  lea rdi, [rsp + 0x130]	      4899	quickfix.c	FUNCTION_83	IF_1	CALL_3
0x40092cf	      0xe800000000	                          call 0x40092d4	      4899	quickfix.c	FUNCTION_83	IF_1	CALL_3
0x40092d4	      0xbf00100000	                         mov edi, 0x1000	      4754	quickfix.c	FUNCTION_81	CALL_1
0x40092d9	      0xe800000000	                          call 0x40092de	      4754	quickfix.c	FUNCTION_81	CALL_1
0x40092de	          0x4885c0	                           test rax, rax	      4756	quickfix.c	FUNCTION_81	IF_1
0x40092e1	          0x4889c3	                            mov rbx, rax	      4754	quickfix.c	FUNCTION_81	CALL_1
0x40092e4	     0xf840ffbffff	                            je 0x4008df9	      4756	quickfix.c	FUNCTION_81	IF_1
0x40092ea	      0xbe00100000	                         mov esi, 0x1000	      4758	quickfix.c	FUNCTION_81	IF_1	CALL_2
0x40092ef	          0x4889c7	                            mov rdi, rax	      4758	quickfix.c	FUNCTION_81	IF_1	CALL_2
0x40092f2	      0xe800000000	                          call 0x40092f7	      4758	quickfix.c	FUNCTION_81	IF_1	CALL_2
0x40092f7	      0x4c8b742458	            mov r14, qword [rsp + 0x58] 	      4759	quickfix.c	FUNCTION_81	IF_1	IF_2	CALL_3
0x40092fc	          0x4889de	                            mov rsi, rbx	      4759	quickfix.c	FUNCTION_81	IF_1	IF_2	CALL_3
0x40092ff	          0x4c89f7	                            mov rdi, r14	      4759	quickfix.c	FUNCTION_81	IF_1	IF_2	CALL_3
0x4009302	      0xe800000000	                          call 0x4009307	      4759	quickfix.c	FUNCTION_81	IF_1	IF_2	CALL_3
0x4009307	            0x85c0	                           test eax, eax	      4759	quickfix.c	FUNCTION_81	IF_1	IF_2	CALL_3
0x4009309	            0x7434	                            je 0x400933f	      4759	quickfix.c	FUNCTION_81	IF_1	IF_2	CALL_3
0x400930b	    0x488b05000000	            mov rax, qword [0x04009312] 	      4766	quickfix.c	FUNCTION_81	IF_1	IF_2
0x4009312	    0x4c89b4247001	            mov qword [rsp + 0x170], r14	      4765	quickfix.c	FUNCTION_81	IF_1	IF_2
0x400931a	    0x488dbc247001	                  lea rdi, [rsp + 0x170]	      4767	quickfix.c	FUNCTION_81	IF_1	IF_2	CALL_4
0x4009322	    0x4883b8900100	              cmp qword [rax + 0x190], 1	      4766	quickfix.c	FUNCTION_81	IF_1	IF_2
0x400932a	            0x19c0	                            sbb eax, eax	      4766	quickfix.c	FUNCTION_81	IF_1	IF_2
0x400932c	            0x2464	                            and al, 0x64	      4766	quickfix.c	FUNCTION_81	IF_1	IF_2
0x400932e	       0x5d4000000	                           add eax, 0xd4	      4766	quickfix.c	FUNCTION_81	IF_1	IF_2
0x4009333	    0x898424900100	            mov dword [rsp + 0x190], eax	      4766	quickfix.c	FUNCTION_81	IF_1	IF_2
0x400933a	      0xe800000000	                          call 0x400933f	      4767	quickfix.c	FUNCTION_81	IF_1	IF_2	CALL_4
0x400933f	          0x4889df	                            mov rdi, rbx	      4769	quickfix.c	FUNCTION_81	IF_1	CALL_5
0x4009342	      0xe800000000	                          call 0x4009347	      4769	quickfix.c	FUNCTION_81	IF_1	CALL_5
0x4009347	      0xe9adfaffff	                           jmp 0x4008df9	      4769	quickfix.c	FUNCTION_81	IF_1	CALL_5
0x400934c	    0x488bb424b000	            mov rsi, qword [rsp + 0xb0] 	      4576	quickfix.c	FUNCTION_80	IF_12	CALL_19
0x4009354	    0x8bbc24a80000	            mov edi, dword [rsp + 0xa8] 	      4576	quickfix.c	FUNCTION_80	IF_12	CALL_19
0x400935b	      0xe800000000	                          call 0x4009360	      4576	quickfix.c	FUNCTION_80	IF_12	CALL_19
0x4009360	    0x48c744245000	               mov qword [rsp + 0x50], 0	      4506	quickfix.c	FUNCTION_80
0x4009369	      0xe955f1ffff	                           jmp 0x40084c3	      4577	quickfix.c	FUNCTION_80	IF_12
0x400936e	      0xba05000000	                              mov edx, 5	      4268	quickfix.c	FUNCTION_74	IF_1	IF_2	CALL_3
0x4009373	      0xbe00000000	                              mov esi, 0	      4268	quickfix.c	FUNCTION_74	IF_1	IF_2	CALL_3
0x4009378	            0x31ff	                            xor edi, edi	      4268	quickfix.c	FUNCTION_74	IF_1	IF_2	CALL_3
0x400937a	      0xe800000000	                          call 0x400937f	      4268	quickfix.c	FUNCTION_74	IF_1	IF_2	CALL_3
0x400937f	          0x4889c7	                            mov rdi, rax	      4268	quickfix.c	FUNCTION_74	IF_1	IF_2	CALL_3
0x4009382	      0xe800000000	                          call 0x4009387	      4268	quickfix.c	FUNCTION_74	IF_1	IF_2	CALL_3
0x4009387	    0x488b84242002	           mov rax, qword [rsp + 0x220] 	      4268	quickfix.c	FUNCTION_74	IF_1	IF_2	CALL_3
0x400938f	      0xe95bf0ffff	                           jmp 0x40083ef	      4268	quickfix.c	FUNCTION_74	IF_1	IF_2	CALL_3
0x4009394	    0xf68424ac0000	               test byte [rsp + 0xac], 2	      4662	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	ELSE_4	IF_21	ELSE_5	IF_23
0x400939c	     0xf84d3f9ffff	                            je 0x4008d75	      4662	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	ELSE_4	IF_21	ELSE_5	IF_23
0x40093a2	      0xe92efeffff	                           jmp 0x40091d5	      4662	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	ELSE_4	IF_21	ELSE_5	IF_23
0x40093a7	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	      4561	quickfix.c	FUNCTION_80	CALL_13
0x40093ac	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      4561	quickfix.c	FUNCTION_80	CALL_13
0x40093b0	          0x488b32	                    mov rsi, qword [rdx]	      4561	quickfix.c	FUNCTION_80	CALL_13
0x40093b3	      0xe995f0ffff	                           jmp 0x400844d	      4561	quickfix.c	FUNCTION_80	CALL_13
0x40093b8	      0x488b7c2478	            mov rdi, qword [rsp + 0x78] 	      4681	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	CALL_36
0x40093bd	      0xe800000000	                          call 0x40093c2	      4681	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	CALL_36
0x40093c2	      0x4889442450	             mov qword [rsp + 0x50], rax	      4681	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	CALL_36
0x40093c7	      0xe9e4f9ffff	                           jmp 0x4008db0	      4681	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	CALL_36
0x40093cc	            0x89f1	                            mov ecx, esi	      4681	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	CALL_36
0x40093ce	      0xe917f5ffff	                           jmp 0x40088ea	      4681	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18	IF_24	CALL_36
0x40093d3	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      1964	quickfix.c	FUNCTION_26	IF_1
0x40093d8	    0x488b90481900	          mov rdx, qword [rax + 0x1948] 	      1964	quickfix.c	FUNCTION_26	IF_1
0x40093df	          0x4885d2	                           test rdx, rdx	      1965	quickfix.c	FUNCTION_26	IF_1	IF_2
0x40093e2	     0xf85e8faffff	                           jne 0x4008ed0	      1965	quickfix.c	FUNCTION_26	IF_1	IF_2
0x40093e8	      0xe9d6f0ffff	                           jmp 0x40084c3	      1965	quickfix.c	FUNCTION_26	IF_1	IF_2
0x40093ed	    0x4c3b25000000	            cmp r12, qword [0x040093f4] 	      4883	quickfix.c	FUNCTION_83	IF_1
0x40093f4	     0xf8493000000	                            je 0x400948d	      4883	quickfix.c	FUNCTION_83	IF_1
0x40093fa	    0x488dbc24e000	                   lea rdi, [rsp + 0xe0]	      4891	quickfix.c	FUNCTION_83	IF_1	CALL_1
0x4009402	      0xe800000000	                          call 0x4009407	      4891	quickfix.c	FUNCTION_83	IF_1	CALL_1
0x4009407	            0x31f6	                            xor esi, esi	      4894	quickfix.c	FUNCTION_83	IF_1	CALL_2
0x4009409	          0x4c89e7	                            mov rdi, r12	      4894	quickfix.c	FUNCTION_83	IF_1	CALL_2
0x400940c	      0xe800000000	                          call 0x4009411	      4894	quickfix.c	FUNCTION_83	IF_1	CALL_2
0x4009411	    0x488dbc24e000	                   lea rdi, [rsp + 0xe0]	      4899	quickfix.c	FUNCTION_83	IF_1	CALL_3
0x4009419	      0xe800000000	                          call 0x400941e	      4899	quickfix.c	FUNCTION_83	IF_1	CALL_3
0x400941e	      0xbf00100000	                         mov edi, 0x1000	      4754	quickfix.c	FUNCTION_81	CALL_1
0x4009423	      0xe800000000	                          call 0x4009428	      4754	quickfix.c	FUNCTION_81	CALL_1
0x4009428	          0x4885c0	                           test rax, rax	      4756	quickfix.c	FUNCTION_81	IF_1
0x400942b	          0x4889c3	                            mov rbx, rax	      4754	quickfix.c	FUNCTION_81	CALL_1
0x400942e	            0x745d	                            je 0x400948d	      4756	quickfix.c	FUNCTION_81	IF_1
0x4009430	      0xbe00100000	                         mov esi, 0x1000	      4758	quickfix.c	FUNCTION_81	IF_1	CALL_2
0x4009435	          0x4889c7	                            mov rdi, rax	      4758	quickfix.c	FUNCTION_81	IF_1	CALL_2
0x4009438	      0xe800000000	                          call 0x400943d	      4758	quickfix.c	FUNCTION_81	IF_1	CALL_2
0x400943d	      0x4c8b7c2458	            mov r15, qword [rsp + 0x58] 	      4759	quickfix.c	FUNCTION_81	IF_1	IF_2	CALL_3
0x4009442	          0x4889de	                            mov rsi, rbx	      4759	quickfix.c	FUNCTION_81	IF_1	IF_2	CALL_3
0x4009445	          0x4c89ff	                            mov rdi, r15	      4759	quickfix.c	FUNCTION_81	IF_1	IF_2	CALL_3
0x4009448	      0xe800000000	                          call 0x400944d	      4759	quickfix.c	FUNCTION_81	IF_1	IF_2	CALL_3
0x400944d	            0x85c0	                           test eax, eax	      4759	quickfix.c	FUNCTION_81	IF_1	IF_2	CALL_3
0x400944f	            0x7434	                            je 0x4009485	      4759	quickfix.c	FUNCTION_81	IF_1	IF_2	CALL_3
0x4009451	    0x488b05000000	            mov rax, qword [0x04009458] 	      4766	quickfix.c	FUNCTION_81	IF_1	IF_2
0x4009458	    0x488dbc247001	                  lea rdi, [rsp + 0x170]	      4767	quickfix.c	FUNCTION_81	IF_1	IF_2	CALL_4
0x4009460	    0x4c89bc247001	            mov qword [rsp + 0x170], r15	      4765	quickfix.c	FUNCTION_81	IF_1	IF_2
0x4009468	    0x4883b8900100	              cmp qword [rax + 0x190], 1	      4766	quickfix.c	FUNCTION_81	IF_1	IF_2
0x4009470	            0x19c0	                            sbb eax, eax	      4766	quickfix.c	FUNCTION_81	IF_1	IF_2
0x4009472	            0x2464	                            and al, 0x64	      4766	quickfix.c	FUNCTION_81	IF_1	IF_2
0x4009474	       0x5d4000000	                           add eax, 0xd4	      4766	quickfix.c	FUNCTION_81	IF_1	IF_2
0x4009479	    0x898424900100	            mov dword [rsp + 0x190], eax	      4766	quickfix.c	FUNCTION_81	IF_1	IF_2
0x4009480	      0xe800000000	                          call 0x4009485	      4767	quickfix.c	FUNCTION_81	IF_1	IF_2	CALL_4
0x4009485	          0x4889df	                            mov rdi, rbx	      4769	quickfix.c	FUNCTION_81	IF_1	CALL_5
0x4009488	      0xe800000000	                          call 0x400948d	      4769	quickfix.c	FUNCTION_81	IF_1	CALL_5
0x400948d	          0x4531e4	                          xor r12d, r12d	      4870	quickfix.c	FUNCTION_82	IF_7
0x4009490	      0xe9eefcffff	                           jmp 0x4009183	      4870	quickfix.c	FUNCTION_82	IF_7
0x4009495	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	      4291	quickfix.c	FUNCTION_75	CALL_3
0x400949a	      0xe800000000	                          call 0x400949f	      4291	quickfix.c	FUNCTION_75	CALL_3
0x400949f	      0xe99afbffff	                           jmp 0x400903e	      4291	quickfix.c	FUNCTION_75	CALL_3
0x40094a4	    0x418384248000	               add dword [r12 + 0x80], 1	      4811	quickfix.c	FUNCTION_82	IF_2
0x40094ad	    0x488dbc243001	                  lea rdi, [rsp + 0x130]	      4814	quickfix.c	FUNCTION_82	IF_2	CALL_5
0x40094b5	          0x4c89e6	                            mov rsi, r12	      4814	quickfix.c	FUNCTION_82	IF_2	CALL_5
0x40094b8	      0xe800000000	                          call 0x40094bd	      4814	quickfix.c	FUNCTION_82	IF_2	CALL_5
0x40094bd	      0x4c8b7c2418	            mov r15, qword [rsp + 0x18] 	      4817	quickfix.c	FUNCTION_82	IF_2	CALL_6
0x40094c2	    0x488b3d000000	            mov rdi, qword [0x040094c9] 	      4817	quickfix.c	FUNCTION_82	IF_2	CALL_6
0x40094c9	            0x31c9	                            xor ecx, ecx	      4817	quickfix.c	FUNCTION_82	IF_2	CALL_6
0x40094cb	            0x31d2	                            xor edx, edx	      4817	quickfix.c	FUNCTION_82	IF_2	CALL_6
0x40094cd	          0x4c89fe	                            mov rsi, r15	      4817	quickfix.c	FUNCTION_82	IF_2	CALL_6
0x40094d0	      0xe800000000	                          call 0x40094d5	      4817	quickfix.c	FUNCTION_82	IF_2	CALL_6
0x40094d5	      0xbf01000000	                              mov edi, 1	      4820	quickfix.c	FUNCTION_82	IF_2	CALL_7
0x40094da	      0xe800000000	                          call 0x40094df	      4820	quickfix.c	FUNCTION_82	IF_2	CALL_7
0x40094df	    0x488b05000000	            mov rax, qword [0x040094e6] 	      4824	quickfix.c	FUNCTION_82	IF_2
0x40094e6	    0x48c78424d000	               mov qword [rsp + 0xd0], 0	      4826	quickfix.c	FUNCTION_82	IF_2
0x40094f2	        0x4883ec08	                              sub rsp, 8	      4827	quickfix.c	FUNCTION_82	IF_2	CALL_8
0x40094f6	          0x4531c9	                            xor r9d, r9d	      4827	quickfix.c	FUNCTION_82	IF_2	CALL_8
0x40094f9	    0x41b8ffffff7f	                     mov r8d, 0x7fffffff	      4827	quickfix.c	FUNCTION_82	IF_2	CALL_8
0x40094ff	            0x31c9	                            xor ecx, ecx	      4827	quickfix.c	FUNCTION_82	IF_2	CALL_8
0x4009501	            0x31d2	                            xor edx, edx	      4827	quickfix.c	FUNCTION_82	IF_2	CALL_8
0x4009503	            0x31f6	                            xor esi, esi	      4827	quickfix.c	FUNCTION_82	IF_2	CALL_8
0x4009505	          0x4c89ff	                            mov rdi, r15	      4827	quickfix.c	FUNCTION_82	IF_2	CALL_8
0x4009508	    0x81607c7fffff	      and dword [rax + 0x7c], 0xffffff7f	      4824	quickfix.c	FUNCTION_82	IF_2
0x400950f	            0x6a11	                               push 0x11	      4827	quickfix.c	FUNCTION_82	IF_2	CALL_8
0x4009511	      0xe800000000	                          call 0x4009516	      4827	quickfix.c	FUNCTION_82	IF_2	CALL_8
0x4009516	    0x4183ac248000	               sub dword [r12 + 0x80], 1	      4830	quickfix.c	FUNCTION_82	IF_2
0x400951f	          0x83f801	                              cmp eax, 1	      4831	quickfix.c	FUNCTION_82	IF_2	IF_3
0x4009522	            0x4158	                                  pop r8	      4831	quickfix.c	FUNCTION_82	IF_2	IF_3
0x4009524	            0x4159	                                  pop r9	      4831	quickfix.c	FUNCTION_82	IF_2	IF_3
0x4009526	     0xf843c010000	                            je 0x4009668	      4831	quickfix.c	FUNCTION_82	IF_2	IF_3
0x400952c	    0x488dbc243001	                  lea rdi, [rsp + 0x130]	      4848	quickfix.c	FUNCTION_82	IF_2	CALL_10
0x4009534	      0xe800000000	                          call 0x4009539	      4848	quickfix.c	FUNCTION_82	IF_2	CALL_10
0x4009539	    0x4883bc24d000	               cmp qword [rsp + 0xd0], 0	      4849	quickfix.c	FUNCTION_82	IF_2	IF_5	CALL_11
0x4009542	            0x7420	                            je 0x4009564	      4849	quickfix.c	FUNCTION_82	IF_2	IF_5	CALL_11
0x4009544	    0x488dbc24d000	                   lea rdi, [rsp + 0xd0]	      4849	quickfix.c	FUNCTION_82	IF_2	IF_5	CALL_11
0x400954c	      0xe800000000	                          call 0x4009551	      4849	quickfix.c	FUNCTION_82	IF_2	IF_5	CALL_11
0x4009551	            0x85c0	                           test eax, eax	      4849	quickfix.c	FUNCTION_82	IF_2	IF_5	CALL_11
0x4009553	            0x740f	                            je 0x4009564	      4849	quickfix.c	FUNCTION_82	IF_2	IF_5	CALL_11
0x4009555	    0x488bbc24d000	            mov rdi, qword [rsp + 0xd0] 	      4850	quickfix.c	FUNCTION_82	IF_2	CALL_12
0x400955d	            0x31f6	                            xor esi, esi	      4850	quickfix.c	FUNCTION_82	IF_2	CALL_12
0x400955f	      0xe800000000	                          call 0x4009564	      4850	quickfix.c	FUNCTION_82	IF_2	CALL_12
0x4009564	    0x41814c247c80	             or dword [r12 + 0x7c], 0x80	      4854	quickfix.c	FUNCTION_82	IF_2
0x400956d	      0xe976fbffff	                           jmp 0x40090e8	      4854	quickfix.c	FUNCTION_82	IF_2
0x4009572	          0x8b4b98	             mov ecx, dword [rbx - 0x68]	      4854	quickfix.c	FUNCTION_82	IF_2
0x4009575	      0xb8ffffffff	                     mov eax, 0xffffffff	      4231	quickfix.c	FUNCTION_72
0x400957a	      0xe9dff3ffff	                           jmp 0x400895e	      4231	quickfix.c	FUNCTION_72
0x400957f	      0xba00000000	                              mov edx, 0	      1959	quickfix.c	FUNCTION_26
0x4009584	      0xe947f9ffff	                           jmp 0x4008ed0	      1959	quickfix.c	FUNCTION_26
0x4009589	    0x8b8424980000	            mov eax, dword [rsp + 0x98] 	      4635	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18
0x4009590	            0x85c0	                           test eax, eax	      4635	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18
0x4009592	     0xf8461f8ffff	                            je 0x4008df9	      4635	quickfix.c	FUNCTION_80	FOR_1	ELSE_3	IF_18
0x4009598	    0xc74424300000	               mov dword [rsp + 0x30], 0	      4391	quickfix.c	FUNCTION_78
0x40095a0	      0xe993f7ffff	                           jmp 0x4008d38	      4391	quickfix.c	FUNCTION_78
0x40095a5	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      4457	quickfix.c	FUNCTION_79	CALL_1
0x40095aa	            0x31f6	                            xor esi, esi	      4457	quickfix.c	FUNCTION_79	CALL_1
0x40095ac	          0x4c89ff	                            mov rdi, r15	      4457	quickfix.c	FUNCTION_79	CALL_1
0x40095af	    0x488b1d000000	            mov rbx, qword [0x040095b6] 	      4456	quickfix.c	FUNCTION_79
0x40095b6	          0x8b5034	            mov edx, dword [rax + 0x34] 	      4457	quickfix.c	FUNCTION_79	CALL_1
0x40095b9	      0xe8028affff	            call sym.qf_jump.constprop.7	      4457	quickfix.c	FUNCTION_79	CALL_1
0x40095be	    0x488b05000000	            mov rax, qword [0x040095c5] 	      4458	quickfix.c	FUNCTION_79	IF_1
0x40095c5	          0x4839c3	                            cmp rbx, rax	      4458	quickfix.c	FUNCTION_79	IF_1
0x40095c8	            0x747f	                            je 0x4009649	      4458	quickfix.c	FUNCTION_79	IF_1
0x40095ca	    0x483984249000	            cmp qword [rsp + 0x90], rax 	      4464	quickfix.c	FUNCTION_79	IF_2
0x40095d2	     0xf85ebeeffff	                           jne 0x40084c3	      4464	quickfix.c	FUNCTION_79	IF_2
0x40095d8	    0x48837c245000	               cmp qword [rsp + 0x50], 0	      4464	quickfix.c	FUNCTION_79	IF_2
0x40095de	    0xc784249c0000	               mov dword [rsp + 0x9c], 0	      4461	quickfix.c	FUNCTION_79	IF_1
0x40095e9	     0xf84d4eeffff	                            je 0x40084c3	      4464	quickfix.c	FUNCTION_79	IF_2
0x40095ef	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      4468	quickfix.c	FUNCTION_79	IF_2
0x40095f4	    0x488dbc247001	                  lea rdi, [rsp + 0x170]	      4470	quickfix.c	FUNCTION_79	IF_2	CALL_2
0x40095fc	    0xc78424900100	          mov dword [rsp + 0x190], 0xd4 	      4469	quickfix.c	FUNCTION_79	IF_2
0x4009607	    0x488984247001	            mov qword [rsp + 0x170], rax	      4468	quickfix.c	FUNCTION_79	IF_2
0x400960f	      0xe800000000	                          call 0x4009614	      4470	quickfix.c	FUNCTION_79	IF_2	CALL_2
0x4009614	      0xe937f9ffff	                           jmp 0x4008f50	      4470	quickfix.c	FUNCTION_79	IF_2	CALL_2
0x4009619	     0xf1f80000000	                         nop dword [rax]	      4470	quickfix.c	FUNCTION_79	IF_2	CALL_2
0x4009620	    0x488b9c24b800	            mov rbx, qword [rsp + 0xb8] 	      4726	quickfix.c	FUNCTION_80	CALL_48
0x4009628	            0x31ff	                            xor edi, edi	      4726	quickfix.c	FUNCTION_80	CALL_48
0x400962a	      0xba05000000	                              mov edx, 5	      4726	quickfix.c	FUNCTION_80	CALL_48
0x400962f	      0xbe00000000	                              mov esi, 0	      4726	quickfix.c	FUNCTION_80	CALL_48
0x4009634	      0xe800000000	                          call 0x4009639	      4726	quickfix.c	FUNCTION_80	CALL_48
0x4009639	          0x4889de	                            mov rsi, rbx	      4726	quickfix.c	FUNCTION_80	CALL_48
0x400963c	          0x4889c7	                            mov rdi, rax	      4726	quickfix.c	FUNCTION_80	CALL_48
0x400963f	      0xe800000000	                          call 0x4009644	      4726	quickfix.c	FUNCTION_80	CALL_48
0x4009644	      0xe907f9ffff	                           jmp 0x4008f50	      4726	quickfix.c	FUNCTION_80	CALL_48
0x4009649	    0x483b9c249000	            cmp rbx, qword [rsp + 0x90] 	      4464	quickfix.c	FUNCTION_79	IF_2
0x4009651	     0xf85f9f8ffff	                           jne 0x4008f50	      4464	quickfix.c	FUNCTION_79	IF_2
0x4009657	    0x48837c245000	               cmp qword [rsp + 0x50], 0	      4464	quickfix.c	FUNCTION_79	IF_2
0x400965d	            0x7590	                           jne 0x40095ef	      4464	quickfix.c	FUNCTION_79	IF_2
0x400965f	      0xe9ecf8ffff	                           jmp 0x4008f50	      4464	quickfix.c	FUNCTION_79	IF_2
0x4009664	         0xf1f4000	                         nop dword [rax]	      4464	quickfix.c	FUNCTION_79	IF_2
0x4009668	    0x8b0500000000	            mov eax, dword [0x0400966e] 	      4832	quickfix.c	FUNCTION_82	IF_2	IF_3
0x400966e	            0x85c0	                           test eax, eax	      4832	quickfix.c	FUNCTION_82	IF_2	IF_3
0x4009670	     0xf85b6feffff	                           jne 0x400952c	      4832	quickfix.c	FUNCTION_82	IF_2	IF_3
0x4009676	    0x488b05000000	            mov rax, qword [0x0400967d] 	      4833	quickfix.c	FUNCTION_82	IF_2	IF_3
0x400967d	        0xf6407c10	           test byte [rax + 0x7c], 0x10 	      4833	quickfix.c	FUNCTION_82	IF_2	IF_3
0x4009681	     0xf85a5feffff	                           jne 0x400952c	      4833	quickfix.c	FUNCTION_82	IF_2	IF_3
0x4009687	            0x31db	                            xor ebx, ebx	      4835	quickfix.c	FUNCTION_82	IF_2	IF_3
0x4009689	          0x4939c4	                            cmp r12, rax	      4836	quickfix.c	FUNCTION_82	IF_2	IF_3	IF_4
0x400968c	     0xf849afeffff	                            je 0x400952c	      4836	quickfix.c	FUNCTION_82	IF_2	IF_3	IF_4
0x4009692	    0x488dbc24d000	                   lea rdi, [rsp + 0xd0]	      4842	quickfix.c	FUNCTION_82	IF_2	IF_3	IF_4	CALL_9
0x400969a	          0x4c89e6	                            mov rsi, r12	      4842	quickfix.c	FUNCTION_82	IF_2	IF_3	IF_4	CALL_9
0x400969d	      0xe800000000	                          call 0x40096a2	      4842	quickfix.c	FUNCTION_82	IF_2	IF_3	IF_4	CALL_9
0x40096a2	    0x4c8b25000000	            mov r12, qword [0x040096a9] 	      4843	quickfix.c	FUNCTION_82	IF_2	IF_3	IF_4
0x40096a9	      0xe97efeffff	                           jmp 0x400952c	      4843	quickfix.c	FUNCTION_82	IF_2	IF_3	IF_4
0x40096ae	            0x6690	                                     nop	      4843	quickfix.c	FUNCTION_82	IF_2	IF_3	IF_4
0x40096b0	    0x49c784244819	            mov qword [r12 + 0x1948], 0 	      1587	quickfix.c	FUNCTION_19	CALL_2
0x40096bc	      0xe937eeffff	                           jmp 0x40084f8	      1587	quickfix.c	FUNCTION_19	CALL_2
0x40096c1	    0xc784249c0000	               mov dword [rsp + 0x9c], 0	      4497	quickfix.c	FUNCTION_80
0x40096cc	    0x48c744245000	               mov qword [rsp + 0x50], 0	      4506	quickfix.c	FUNCTION_80
0x40096d5	    0x48c784249000	               mov qword [rsp + 0x90], 0	      4499	quickfix.c	FUNCTION_80
0x40096e1	      0xe943f7ffff	                           jmp 0x4008e29	      4499	quickfix.c	FUNCTION_80
0x40096e6	      0xe800000000	                          call 0x40096eb	      4745	quickfix.c	FUNCTION_80
qf_list	functions,0:WHILE,0:DO,0:CALL,35:SWITCH,0:IF,23:ELSE,5:FOR,1	433
0x4005ff0	            0x4157	                                push r15	      2710	quickfix.c	FUNCTION_38
0x4005ff2	            0x4156	                                push r14	      2710	quickfix.c	FUNCTION_38
0x4005ff4	    0x41bf00000000	                             mov r15d, 0	      2724	quickfix.c	FUNCTION_38
0x4005ffa	            0x4155	                                push r13	      2710	quickfix.c	FUNCTION_38
0x4005ffc	            0x4154	                                push r12	      2710	quickfix.c	FUNCTION_38
0x4005ffe	              0x55	                                push rbp	      2710	quickfix.c	FUNCTION_38
0x4005fff	              0x53	                                push rbx	      2710	quickfix.c	FUNCTION_38
0x4006000	        0x4883ec48	                           sub rsp, 0x48	      2710	quickfix.c	FUNCTION_38
0x4006004	          0x8b5f34	            mov ebx, dword [rdi + 0x34] 	      2722	quickfix.c	FUNCTION_38
0x4006007	    0x64488b042528	                mov rax, qword fs:[0x28]	      2710	quickfix.c	FUNCTION_38
0x4006010	      0x4889442438	             mov qword [rsp + 0x38], rax	      2710	quickfix.c	FUNCTION_38
0x4006015	            0x31c0	                            xor eax, eax	      2710	quickfix.c	FUNCTION_38
0x4006017	    0x817f20e90000	           cmp dword [rdi + 0x20], 0xe9 	      2726	quickfix.c	FUNCTION_38	IF_1
0x400601e	          0x488b07	                    mov rax, qword [rdi]	      2717	quickfix.c	FUNCTION_38
0x4006021	    0xc74424280100	               mov dword [rsp + 0x28], 1	      2715	quickfix.c	FUNCTION_38
0x4006029	    0xc744242cffff	     mov dword [rsp + 0x2c], 0xffffffff 	      2716	quickfix.c	FUNCTION_38
0x4006031	      0x4889442430	             mov qword [rsp + 0x30], rax	      2717	quickfix.c	FUNCTION_38
0x4006036	     0xf84f4020000	                            je 0x4006330	      2726	quickfix.c	FUNCTION_38	IF_1
0x400603c	        0x49634708	            movsxd rax, dword [r15 + 8] 	      2736	quickfix.c	FUNCTION_38	IF_3
0x4006040	        0x413b4704	                cmp eax, dword [r15 + 4]	      2736	quickfix.c	FUNCTION_38	IF_3
0x4006044	            0x7d18	                           jge 0x400605e	      2736	quickfix.c	FUNCTION_38	IF_3
0x4006046	    0x488d14c50000	                        lea rdx, [rax*8]	      2737	quickfix.c	FUNCTION_38	IF_3
0x400604e	        0x48c1e007	                              shl rax, 7	      2737	quickfix.c	FUNCTION_38	IF_3
0x4006052	          0x4829d0	                            sub rax, rdx	      2737	quickfix.c	FUNCTION_38	IF_3
0x4006055	      0x418b4c0730	      mov ecx, dword [r15 + rax + 0x30] 	      2737	quickfix.c	FUNCTION_38	IF_3
0x400605a	            0x85c9	                           test ecx, ecx	      2737	quickfix.c	FUNCTION_38	IF_3
0x400605c	            0x7542	                           jne 0x40060a0	      2737	quickfix.c	FUNCTION_38	IF_3
0x400605e	            0x31ff	                            xor edi, edi	      2739	quickfix.c	FUNCTION_38	IF_3	CALL_4
0x4006060	      0xba05000000	                              mov edx, 5	      2739	quickfix.c	FUNCTION_38	IF_3	CALL_4
0x4006065	      0xbe00000000	                              mov esi, 0	      2739	quickfix.c	FUNCTION_38	IF_3	CALL_4
0x400606a	      0xe800000000	                          call 0x400606f	      2739	quickfix.c	FUNCTION_38	IF_3	CALL_4
0x400606f	          0x4889c7	                            mov rdi, rax	      2739	quickfix.c	FUNCTION_38	IF_3	CALL_4
0x4006072	      0xe800000000	                          call 0x4006077	      2739	quickfix.c	FUNCTION_38	IF_3	CALL_4
0x4006077	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      2852	quickfix.c	FUNCTION_38
0x400607c	    0x644833042528	                xor rax, qword fs:[0x28]	      2852	quickfix.c	FUNCTION_38
0x4006085	     0xf8573060000	                           jne 0x40066fe	      2852	quickfix.c	FUNCTION_38
0x400608b	        0x4883c448	                           add rsp, 0x48	      2852	quickfix.c	FUNCTION_38
0x400608f	              0x5b	                                 pop rbx	      2852	quickfix.c	FUNCTION_38
0x4006090	              0x5d	                                 pop rbp	      2852	quickfix.c	FUNCTION_38
0x4006091	            0x415c	                                 pop r12	      2852	quickfix.c	FUNCTION_38
0x4006093	            0x415d	                                 pop r13	      2852	quickfix.c	FUNCTION_38
0x4006095	            0x415e	                                 pop r14	      2852	quickfix.c	FUNCTION_38
0x4006097	            0x415f	                                 pop r15	      2852	quickfix.c	FUNCTION_38
0x4006099	              0xc3	                                     ret	      2852	quickfix.c	FUNCTION_38
0x400609a	    0x660f1f440000	                    nop word [rax + rax]	      2852	quickfix.c	FUNCTION_38
0x40060a0	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      2742	quickfix.c	FUNCTION_38	IF_4
0x40060a5	            0x31ed	                            xor ebp, ebp	      2718	quickfix.c	FUNCTION_38
0x40060a7	          0x80382b	                    cmp byte [rax], 0x2b	      2742	quickfix.c	FUNCTION_38	IF_4
0x40060aa	     0xf84e0020000	                            je 0x4006390	      2742	quickfix.c	FUNCTION_38	IF_4
0x40060b0	      0x488d54242c	                   lea rdx, [rsp + 0x2c]	      2747	quickfix.c	FUNCTION_38	IF_5	CALL_5
0x40060b5	      0x488d742428	                   lea rsi, [rsp + 0x28]	      2747	quickfix.c	FUNCTION_38	IF_5	CALL_5
0x40060ba	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      2747	quickfix.c	FUNCTION_38	IF_5	CALL_5
0x40060bf	      0xe800000000	                          call 0x40060c4	      2747	quickfix.c	FUNCTION_38	IF_5	CALL_5
0x40060c4	            0x85c0	                           test eax, eax	      2747	quickfix.c	FUNCTION_38	IF_5	CALL_5
0x40060c6	     0xf8444020000	                            je 0x4006310	      2747	quickfix.c	FUNCTION_38	IF_5	CALL_5
0x40060cc	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      2747	quickfix.c	FUNCTION_38	IF_5	CALL_5
0x40060d1	          0x803800	                       cmp byte [rax], 0	      2747	quickfix.c	FUNCTION_38	IF_5	CALL_5
0x40060d4	     0xf8536020000	                           jne 0x4006310	      2747	quickfix.c	FUNCTION_38	IF_5	CALL_5
0x40060da	        0x49634708	            movsxd rax, dword [r15 + 8] 	      2754	quickfix.c	FUNCTION_38	IF_6
0x40060de	    0x488d14c50000	                        lea rdx, [rax*8]	      2754	quickfix.c	FUNCTION_38	IF_6
0x40060e6	        0x48c1e007	                              shl rax, 7	      2754	quickfix.c	FUNCTION_38	IF_6
0x40060ea	          0x4829d0	                            sub rax, rdx	      2754	quickfix.c	FUNCTION_38	IF_6
0x40060ed	            0x85ed	                           test ebp, ebp	      2752	quickfix.c	FUNCTION_38	IF_6
0x40060ef	     0xf848a040000	                            je 0x400657f	      2752	quickfix.c	FUNCTION_38	IF_6
0x40060f5	      0x418b440734	      mov eax, dword [r15 + rax + 0x34] 	      2754	quickfix.c	FUNCTION_38	IF_6
0x40060fa	        0x8b542428	            mov edx, dword [rsp + 0x28] 	      2755	quickfix.c	FUNCTION_38	IF_6
0x40060fe	             0x1c2	                            add edx, eax	      2755	quickfix.c	FUNCTION_38	IF_6
0x4006100	        0x89442428	             mov dword [rsp + 0x28], eax	      2756	quickfix.c	FUNCTION_38	IF_6
0x4006104	        0x8954242c	             mov dword [rsp + 0x2c], edx	      2755	quickfix.c	FUNCTION_38	IF_6
0x4006108	            0x31ff	                            xor edi, edi	      2768	quickfix.c	FUNCTION_38	CALL_8
0x400610a	      0xe800000000	                          call 0x400610f	      2768	quickfix.c	FUNCTION_38	CALL_8
0x400610f	      0xbf00000000	                              mov edi, 0	      2774	quickfix.c	FUNCTION_38	CALL_9
0x4006114	      0xe800000000	                          call 0x4006119	      2774	quickfix.c	FUNCTION_38	CALL_9
0x4006119	      0xbf00000000	                              mov edi, 0	      2777	quickfix.c	FUNCTION_38	CALL_11
0x400611e	            0x85c0	                           test eax, eax	      2776	quickfix.c	FUNCTION_38	CALL_10
0x4006120	          0x4189c5	                           mov r13d, eax	      2774	quickfix.c	FUNCTION_38	CALL_9
0x4006123	    0x440f442d0000	          cmove r13d, dword [0x0400612b]	      2776	quickfix.c	FUNCTION_38	CALL_10
0x400612b	      0xe800000000	                          call 0x4006130	      2777	quickfix.c	FUNCTION_38	CALL_11
0x4006130	      0xbf00000000	                              mov edi, 0	      2780	quickfix.c	FUNCTION_38	CALL_13
0x4006135	            0x85c0	                           test eax, eax	      2779	quickfix.c	FUNCTION_38	CALL_12
0x4006137	          0x4189c4	                           mov r12d, eax	      2777	quickfix.c	FUNCTION_38	CALL_11
0x400613a	    0x440f44250000	          cmove r12d, dword [0x04006142]	      2779	quickfix.c	FUNCTION_38	CALL_12
0x4006142	      0xe800000000	                          call 0x4006147	      2780	quickfix.c	FUNCTION_38	CALL_13
0x4006147	            0x85c0	                           test eax, eax	      2782	quickfix.c	FUNCTION_38	CALL_14
0x4006149	     0xf4405000000	           cmove eax, dword [0x04006150]	      2782	quickfix.c	FUNCTION_38	CALL_14
0x4006150	        0x8944241c	             mov dword [rsp + 0x1c], eax	      2782	quickfix.c	FUNCTION_38	CALL_14
0x4006154	        0x49634708	            movsxd rax, dword [r15 + 8] 	      2784	quickfix.c	FUNCTION_38	IF_12
0x4006158	    0x488d14c50000	                        lea rdx, [rax*8]	      2784	quickfix.c	FUNCTION_38	IF_12
0x4006160	        0x48c1e007	                              shl rax, 7	      2784	quickfix.c	FUNCTION_38	IF_12
0x4006164	          0x4829d0	                            sub rax, rdx	      2784	quickfix.c	FUNCTION_38	IF_12
0x4006167	          0x4c01f8	                            add rax, r15	      2784	quickfix.c	FUNCTION_38	IF_12
0x400616a	          0x8b5038	            mov edx, dword [rax + 0x38] 	      2785	quickfix.c	FUNCTION_38	IF_12
0x400616d	        0x4c8b7018	            mov r14, qword [rax + 0x18] 	      2786	quickfix.c	FUNCTION_38
0x4006171	            0x85d2	                           test edx, edx	      2785	quickfix.c	FUNCTION_38	IF_12
0x4006173	      0xba01000000	                              mov edx, 1	      2785	quickfix.c	FUNCTION_38	IF_12
0x4006178	           0xf45da	                         cmovne ebx, edx	      2785	quickfix.c	FUNCTION_38	IF_12
0x400617b	    0x8b1500000000	            mov edx, dword [0x04006181] 	      2787	quickfix.c	FUNCTION_38	FOR_1
0x4006181	            0x85d2	                           test edx, edx	      2787	quickfix.c	FUNCTION_38	FOR_1
0x4006183	     0xf85eefeffff	                           jne 0x4006077	      2787	quickfix.c	FUNCTION_38	FOR_1
0x4006189	          0x8b4030	            mov eax, dword [rax + 0x30] 	      2787	quickfix.c	FUNCTION_38	FOR_1
0x400618c	            0x85c0	                           test eax, eax	      2787	quickfix.c	FUNCTION_38	FOR_1
0x400618e	     0xf8ee3feffff	                           jle 0x4006077	      2787	quickfix.c	FUNCTION_38	FOR_1
0x4006194	            0x85db	                           test ebx, ebx	      2787	quickfix.c	FUNCTION_38	FOR_1
0x4006196	      0xbb01000000	                              mov ebx, 1	      2787	quickfix.c	FUNCTION_38	FOR_1
0x400619b	        0x400f95c5	                               setne bpl	      2787	quickfix.c	FUNCTION_38	FOR_1
0x400619f	            0xeb4c	                           jmp 0x40061ed	      2787	quickfix.c	FUNCTION_38	FOR_1
0x40061a1	     0xf1f80000000	                         nop dword [rax]	      2787	quickfix.c	FUNCTION_38	FOR_1
0x40061a8	          0x4084ed	                           test bpl, bpl	      2789	quickfix.c	FUNCTION_38	FOR_1	IF_13
0x40061ab	            0x7547	                           jne 0x40061f4	      2789	quickfix.c	FUNCTION_38	FOR_1	IF_13
0x40061ad	          0x4d8b36	                    mov r14, qword [r14]	      2846	quickfix.c	FUNCTION_38	FOR_1
0x40061b0	          0x4d85f6	                           test r14, r14	      2847	quickfix.c	FUNCTION_38	FOR_1	IF_23
0x40061b3	     0xf84befeffff	                            je 0x4006077	      2847	quickfix.c	FUNCTION_38	FOR_1	IF_23
0x40061b9	      0xe800000000	                          call 0x40061be	      2850	quickfix.c	FUNCTION_38	FOR_1	CALL_35
0x40061be	    0x8b0500000000	            mov eax, dword [0x040061c4] 	      2787	quickfix.c	FUNCTION_38	FOR_1
0x40061c4	          0x83c301	                              add ebx, 1	      2849	quickfix.c	FUNCTION_38	FOR_1
0x40061c7	            0x85c0	                           test eax, eax	      2787	quickfix.c	FUNCTION_38	FOR_1
0x40061c9	     0xf85a8feffff	                           jne 0x4006077	      2787	quickfix.c	FUNCTION_38	FOR_1
0x40061cf	        0x49634708	            movsxd rax, dword [r15 + 8] 	      2787	quickfix.c	FUNCTION_38	FOR_1
0x40061d3	    0x488d14c50000	                        lea rdx, [rax*8]	      2787	quickfix.c	FUNCTION_38	FOR_1
0x40061db	        0x48c1e007	                              shl rax, 7	      2787	quickfix.c	FUNCTION_38	FOR_1
0x40061df	          0x4829d0	                            sub rax, rdx	      2787	quickfix.c	FUNCTION_38	FOR_1
0x40061e2	      0x41395c0730	      cmp dword [r15 + rax + 0x30], ebx 	      2787	quickfix.c	FUNCTION_38	FOR_1
0x40061e7	     0xf8c8afeffff	                            jl 0x4006077	      2787	quickfix.c	FUNCTION_38	FOR_1
0x40061ed	      0x41807e4300	                cmp byte [r14 + 0x43], 0	      2789	quickfix.c	FUNCTION_38	FOR_1	IF_13
0x40061f2	            0x74b4	                            je 0x40061a8	      2789	quickfix.c	FUNCTION_38	FOR_1	IF_13
0x40061f4	        0x395c2428	            cmp dword [rsp + 0x28], ebx 	      2789	quickfix.c	FUNCTION_38	FOR_1	IF_13
0x40061f8	            0x7fb3	                            jg 0x40061ad	      2789	quickfix.c	FUNCTION_38	FOR_1	IF_13
0x40061fa	        0x395c242c	            cmp dword [rsp + 0x2c], ebx 	      2789	quickfix.c	FUNCTION_38	FOR_1	IF_13
0x40061fe	            0x7cad	                            jl 0x40061ad	      2789	quickfix.c	FUNCTION_38	FOR_1	IF_13
0x4006200	      0xbf0a000000	                            mov edi, 0xa	      2791	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_15
0x4006205	      0xe800000000	                          call 0x400620a	      2791	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_15
0x400620a	    0x8b0500000000	            mov eax, dword [0x04006210] 	      2792	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_14
0x4006210	            0x85c0	                           test eax, eax	      2792	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_14
0x4006212	     0xf855ffeffff	                           jne 0x4006077	      2792	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_14
0x4006218	        0x4d8b4628	              mov r8, qword [r14 + 0x28]	      2796	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_15
0x400621c	          0x4d85c0	                             test r8, r8	      2796	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_15
0x400621f	            0x740a	                            je 0x400622b	      2796	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_15
0x4006221	        0x41803800	                        cmp byte [r8], 0	      2796	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_15
0x4006225	     0xf853b040000	                           jne 0x4006666	      2796	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_15
0x400622b	        0x418b7e18	            mov edi, dword [r14 + 0x18] 	      2799	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	IF_16
0x400622f	            0x85ff	                           test edi, edi	      2799	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	IF_16
0x4006231	     0xf8554040000	                           jne 0x400668b	      2799	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	IF_16
0x4006237	    0x488b3d000000	            mov rdi, qword [0x0400623e] 	        33	stdio2.h	FUNCTION_127	CALL_1
0x400623e	          0x4189d8	                            mov r8d, ebx	        33	stdio2.h	FUNCTION_127	CALL_1
0x4006241	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_127	CALL_1
0x4006246	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_127	CALL_1
0x400624d	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_127	CALL_1
0x4006252	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_127	CALL_1
0x4006254	      0xe800000000	                          call 0x4006259	        33	stdio2.h	FUNCTION_127	CALL_1
0x4006259	    0x48c704240000	                      mov qword [rsp], 0	        33	stdio2.h	FUNCTION_127	CALL_1
0x4006261	        0x49634708	            movsxd rax, dword [r15 + 8] 	      2812	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_20
0x4006265	          0x4489ee	                           mov esi, r13d	      2812	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_20
0x4006268	    0x488b3d000000	            mov rdi, qword [0x0400626f] 	      2812	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_20
0x400626f	    0x488d14c50000	                        lea rdx, [rax*8]	      2812	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_20
0x4006277	        0x48c1e007	                              shl rax, 7	      2812	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_20
0x400627b	          0x4829d0	                            sub rax, rdx	      2812	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_20
0x400627e	      0x41395c0734	      cmp dword [r15 + rax + 0x34], ebx 	      2812	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_20
0x4006283	     0xf4435000000	           cmove esi, dword [0x0400628a]	      2812	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_20
0x400628a	      0xe800000000	                          call 0x400628f	      2812	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_20
0x400628f	      0x49837e1000	               cmp qword [r14 + 0x10], 0	      2815	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_19
0x4006294	     0xf853b030000	                           jne 0x40065d5	      2815	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_19
0x400629a	    0x488b05000000	            mov rax, qword [0x040062a1] 	      2818	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_20
0x40062a1	          0xc60000	                       mov byte [rax], 0	      2818	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_20
0x40062a4	      0x410fb65642	           movzx edx, byte [r14 + 0x42] 	      2825	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_24
0x40062a9	        0x458b4e20	            mov r9d, dword [r14 + 0x20] 	      2825	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_24
0x40062ad	            0x89d0	                            mov eax, edx	      3112	quickfix.c	FUNCTION_46	IF_1
0x40062af	          0x83e0df	                     and eax, 0xffffffdf	      3112	quickfix.c	FUNCTION_46	IF_1
0x40062b2	            0x3c57	                            cmp al, 0x57	      3112	quickfix.c	FUNCTION_46	IF_1
0x40062b4	     0xf84ee000000	                            je 0x40063a8	      3112	quickfix.c	FUNCTION_46	IF_1
0x40062ba	            0x3c49	                            cmp al, 0x49	      3114	quickfix.c	FUNCTION_46	ELSE_1	IF_2
0x40062bc	     0xf845a030000	                            je 0x400661c	      3114	quickfix.c	FUNCTION_46	ELSE_1	IF_2
0x40062c2	            0x3c45	                            cmp al, 0x45	      3116	quickfix.c	FUNCTION_46	ELSE_2	IF_3
0x40062c4	     0xf840d040000	                            je 0x40066d7	      3116	quickfix.c	FUNCTION_46	ELSE_2	IF_3
0x40062ca	            0x84d2	                             test dl, dl	      3116	quickfix.c	FUNCTION_46	ELSE_2	IF_3
0x40062cc	            0x750f	                           jne 0x40062dd	      3116	quickfix.c	FUNCTION_46	ELSE_2	IF_3
0x40062ce	          0x4585c9	                           test r9d, r9d	      3116	quickfix.c	FUNCTION_46	ELSE_2	IF_3
0x40062d1	    0x41b800000000	                              mov r8d, 0	      3117	quickfix.c	FUNCTION_46	ELSE_2	IF_3
0x40062d7	     0xf8fd9000000	                            jg 0x40063b6	      3116	quickfix.c	FUNCTION_46	ELSE_2	IF_3
0x40062dd	          0x80fa01	                               cmp dl, 1	      3118	quickfix.c	FUNCTION_46	ELSE_3	IF_4
0x40062e0	    0x41b800000000	                              mov r8d, 0	      3119	quickfix.c	FUNCTION_46	ELSE_3	IF_4
0x40062e6	     0xf86c2000000	                           jbe 0x40063ae	      3118	quickfix.c	FUNCTION_46	ELSE_3	IF_4
0x40062ec	    0xc60500000000	            mov byte [0x040062f3], 0x20 	      3122	quickfix.c	FUNCTION_46	ELSE_4
0x40062f3	    0x881500000000	               mov byte [0x040062f9], dl	      3123	quickfix.c	FUNCTION_46	ELSE_4
0x40062f9	    0x41b800000000	                              mov r8d, 0	      3125	quickfix.c	FUNCTION_46	ELSE_4
0x40062ff	    0xc60500000000	                mov byte [0x04006306], 0	      3124	quickfix.c	FUNCTION_46	ELSE_4
0x4006306	      0xe9a3000000	                           jmp 0x40063ae	      3124	quickfix.c	FUNCTION_46	ELSE_4
0x400630b	       0xf1f440000	                   nop dword [rax + rax]	      3124	quickfix.c	FUNCTION_46	ELSE_4
0x4006310	            0x31ff	                            xor edi, edi	      2749	quickfix.c	FUNCTION_38	IF_5	CALL_7
0x4006312	      0xba05000000	                              mov edx, 5	      2749	quickfix.c	FUNCTION_38	IF_5	CALL_7
0x4006317	      0xbe00000000	                              mov esi, 0	      2749	quickfix.c	FUNCTION_38	IF_5	CALL_7
0x400631c	      0xe800000000	                          call 0x4006321	      2749	quickfix.c	FUNCTION_38	IF_5	CALL_7
0x4006321	          0x4889c7	                            mov rdi, rax	      2749	quickfix.c	FUNCTION_38	IF_5	CALL_7
0x4006324	      0xe800000000	                          call 0x4006329	      2749	quickfix.c	FUNCTION_38	IF_5	CALL_7
0x4006329	      0xe949fdffff	                           jmp 0x4006077	      2750	quickfix.c	FUNCTION_38	IF_5
0x400632e	            0x6690	                                     nop	      2750	quickfix.c	FUNCTION_38	IF_5
0x4006330	    0x488b05000000	            mov rax, qword [0x04006337] 	      2728	quickfix.c	FUNCTION_38	IF_1
0x4006337	        0x488b7808	                mov rdi, qword [rax + 8]	      2728	quickfix.c	FUNCTION_38	IF_1
0x400633b	      0xe800000000	                          call 0x4006340	      2728	quickfix.c	FUNCTION_38	IF_1
0x4006340	            0x85c0	                           test eax, eax	      2728	quickfix.c	FUNCTION_38	IF_1
0x4006342	    0x488b05000000	            mov rax, qword [0x04006349] 	      2728	quickfix.c	FUNCTION_38	IF_1
0x4006349	            0x7410	                            je 0x400635b	      2728	quickfix.c	FUNCTION_38	IF_1
0x400634b	    0x4c8bb8501900	          mov r15, qword [rax + 0x1950] 	      2728	quickfix.c	FUNCTION_38	IF_1
0x4006352	          0x4d85ff	                           test r15, r15	      2728	quickfix.c	FUNCTION_38	IF_1
0x4006355	     0xf85e1fcffff	                           jne 0x400603c	      2728	quickfix.c	FUNCTION_38	IF_1
0x400635b	    0x4c8bb8481900	          mov r15, qword [rax + 0x1948] 	      2728	quickfix.c	FUNCTION_38	IF_1
0x4006362	          0x4d85ff	                           test r15, r15	      2729	quickfix.c	FUNCTION_38	IF_1	IF_2
0x4006365	     0xf85d1fcffff	                           jne 0x400603c	      2729	quickfix.c	FUNCTION_38	IF_1	IF_2
0x400636b	            0x31ff	                            xor edi, edi	      2731	quickfix.c	FUNCTION_38	IF_1	IF_2	CALL_2
0x400636d	      0xba05000000	                              mov edx, 5	      2731	quickfix.c	FUNCTION_38	IF_1	IF_2	CALL_2
0x4006372	      0xbe00000000	                              mov esi, 0	      2731	quickfix.c	FUNCTION_38	IF_1	IF_2	CALL_2
0x4006377	      0xe800000000	                          call 0x400637c	      2731	quickfix.c	FUNCTION_38	IF_1	IF_2	CALL_2
0x400637c	          0x4889c7	                            mov rdi, rax	      2731	quickfix.c	FUNCTION_38	IF_1	IF_2	CALL_2
0x400637f	      0xe800000000	                          call 0x4006384	      2731	quickfix.c	FUNCTION_38	IF_1	IF_2	CALL_2
0x4006384	      0xe9eefcffff	                           jmp 0x4006077	      2732	quickfix.c	FUNCTION_38	IF_1	IF_2
0x4006389	     0xf1f80000000	                         nop dword [rax]	      2732	quickfix.c	FUNCTION_38	IF_1	IF_2
0x4006390	        0x4883c001	                              add rax, 1	      2744	quickfix.c	FUNCTION_38	IF_4
0x4006394	      0xbd01000000	                              mov ebp, 1	      2745	quickfix.c	FUNCTION_38	IF_4
0x4006399	      0x4889442430	             mov qword [rsp + 0x30], rax	      2744	quickfix.c	FUNCTION_38	IF_4
0x400639e	      0xe90dfdffff	                           jmp 0x40060b0	      2744	quickfix.c	FUNCTION_38	IF_4
0x40063a3	       0xf1f440000	                   nop dword [rax + rax]	      2744	quickfix.c	FUNCTION_38	IF_4
0x40063a8	    0x41b800000000	                              mov r8d, 0	      3113	quickfix.c	FUNCTION_46	IF_1
0x40063ae	          0x4585c9	                           test r9d, r9d	      3128	quickfix.c	FUNCTION_46	IF_5
0x40063b1	          0x4c89c6	                             mov rsi, r8	      3128	quickfix.c	FUNCTION_46	IF_5
0x40063b4	            0x7e20	                           jle 0x40063d6	      3128	quickfix.c	FUNCTION_46	IF_5
0x40063b6	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_127	CALL_1
0x40063bb	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_127	CALL_1
0x40063c0	      0xba14000000	                           mov edx, 0x14	        33	stdio2.h	FUNCTION_127	CALL_1
0x40063c5	      0xbf00000000	                              mov edi, 0	        33	stdio2.h	FUNCTION_127	CALL_1
0x40063ca	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_127	CALL_1
0x40063cc	      0xe800000000	                          call 0x40063d1	        33	stdio2.h	FUNCTION_127	CALL_1
0x40063d1	      0xbe00000000	                              mov esi, 0	      3132	quickfix.c	FUNCTION_46
0x40063d6	    0x488b15000000	            mov rdx, qword [0x040063dd] 	      2824	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_23
0x40063dd	      0x4889742410	             mov qword [rsp + 0x10], rsi	      2824	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_23
0x40063e2	          0x4889d7	                            mov rdi, rdx	      2824	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_23
0x40063e5	      0x4889542408	                mov qword [rsp + 8], rdx	      2824	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_23
0x40063ea	      0xe800000000	                          call 0x40063ef	      2824	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_23
0x40063ef	      0x488b542408	                mov rdx, qword [rsp + 8]	        33	stdio2.h	FUNCTION_127	CALL_1
0x40063f4	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	        33	stdio2.h	FUNCTION_127	CALL_1
0x40063f9	        0x488d3c02	                    lea rdi, [rdx + rax]	        33	stdio2.h	FUNCTION_127	CALL_1
0x40063fd	      0xe800000000	                          call 0x4006402	        33	stdio2.h	FUNCTION_127	CALL_1
0x4006402	        0x8b74241c	            mov esi, dword [rsp + 0x1c] 	      2826	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_25
0x4006406	    0x488b3d000000	            mov rdi, qword [0x0400640d] 	      2826	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_25
0x400640d	      0xe800000000	                          call 0x4006412	      2826	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_25
0x4006412	          0x4489e6	                           mov esi, r12d	      2827	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_26
0x4006415	      0xbf00000000	                              mov edi, 0	      2827	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_26
0x400641a	      0xe800000000	                          call 0x400641f	      2827	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_26
0x400641f	        0x498b5630	            mov rdx, qword [r14 + 0x30] 	      2828	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_22
0x4006423	          0x4885d2	                           test rdx, rdx	      2828	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_22
0x4006426	     0xf8490000000	                            je 0x40064bc	      2828	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_22
0x400642c	           0xfb602	                   movzx eax, byte [rdx]	      2864	quickfix.c	FUNCTION_39	FOR_1
0x400642f	    0x4c8b05000000	              mov r8, qword [0x04006436]	      2830	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_22	CALL_27
0x4006436	            0x84c0	                             test al, al	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4006438	     0xf84ab020000	                            je 0x40066e9	      2864	quickfix.c	FUNCTION_39	FOR_1
0x400643e	          0x4c89c7	                             mov rdi, r8	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4006441	            0x31f6	                            xor esi, esi	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4006443	            0xeb27	                           jmp 0x400646c	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4006445	           0xf1f00	                         nop dword [rax]	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4006448	            0x8807	                      mov byte [rdi], al	      2874	quickfix.c	FUNCTION_39	FOR_1	ELSE_1
0x400644a	         0xfb64201	               movzx eax, byte [rdx + 1]	      2874	quickfix.c	FUNCTION_39	FOR_1	ELSE_1
0x400644e	          0x83c601	                              add esi, 1	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4006451	        0x488d4a01	                      lea rcx, [rdx + 1]	      2874	quickfix.c	FUNCTION_39	FOR_1	ELSE_1
0x4006455	            0x84c0	                             test al, al	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4006457	            0x7442	                            je 0x400649b	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4006459	          0x4889ca	                            mov rdx, rcx	      2874	quickfix.c	FUNCTION_39	FOR_1	ELSE_1
0x400645c	        0x4883c701	                              add rdi, 1	      2874	quickfix.c	FUNCTION_39	FOR_1	ELSE_1
0x4006460	    0x81fe00040000	                          cmp esi, 0x400	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4006466	     0xf844b010000	                            je 0x40065b7	      2864	quickfix.c	FUNCTION_39	FOR_1
0x400646c	            0x3c0a	                             cmp al, 0xa	      2866	quickfix.c	FUNCTION_39	FOR_1	IF_1
0x400646e	            0x75d8	                           jne 0x4006448	      2866	quickfix.c	FUNCTION_39	FOR_1	IF_1
0x4006470	          0xc60720	                    mov byte [rdi], 0x20	      2868	quickfix.c	FUNCTION_39	FOR_1	IF_1
0x4006473	       0xf1f440000	                   nop dword [rax + rax]	      2868	quickfix.c	FUNCTION_39	FOR_1	IF_1
0x4006478	        0x4883c201	                              add rdx, 1	      2869	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1
0x400647c	           0xfb602	                   movzx eax, byte [rdx]	      2869	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1
0x400647f	            0x84c0	                             test al, al	      2869	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1
0x4006481	            0x7415	                            je 0x4006498	      2869	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1
0x4006483	          0x8d48f7	                      lea ecx, [rax - 9]	      2870	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4006486	          0x80f901	                               cmp cl, 1	      2870	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4006489	            0x76ed	                           jbe 0x4006478	      2870	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x400648b	            0x3c20	                            cmp al, 0x20	      2870	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x400648d	            0x74e9	                            je 0x4006478	      2870	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x400648f	          0x83c601	                              add esi, 1	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4006492	            0xebc8	                           jmp 0x400645c	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4006494	         0xf1f4000	                         nop dword [rax]	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4006498	          0x83c601	                              add esi, 1	      2864	quickfix.c	FUNCTION_39	FOR_1
0x400649b	          0x4863f6	                         movsxd rsi, esi	      2864	quickfix.c	FUNCTION_39	FOR_1
0x400649e	      0x41c6043000	                  mov byte [r8 + rsi], 0	      2876	quickfix.c	FUNCTION_39	ELSE_1
0x40064a3	    0x488b3d000000	            mov rdi, qword [0x040064aa] 	      2831	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_22	CALL_28
0x40064aa	      0xe800000000	                          call 0x40064af	      2831	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_22	CALL_28
0x40064af	          0x4489e6	                           mov esi, r12d	      2832	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_22	CALL_29
0x40064b2	      0xbf00000000	                              mov edi, 0	      2832	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_22	CALL_29
0x40064b7	      0xe800000000	                          call 0x40064bc	      2832	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_22	CALL_29
0x40064bc	      0xbf00000000	                              mov edi, 0	      2834	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_30
0x40064c1	      0xe800000000	                          call 0x40064c6	      2834	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_30
0x40064c6	      0x48833c2400	                      cmp qword [rsp], 0	      2839	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_31
0x40064cb	    0x4c8b05000000	              mov r8, qword [0x040064d2]	      2839	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_31
0x40064d2	     0xf84e9000000	                            je 0x40065c1	      2839	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_31
0x40064d8	        0x498b7e38	            mov rdi, qword [r14 + 0x38] 	      2839	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_31
0x40064dc	        0x4c890424	                     mov qword [rsp], r8	      2839	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_31
0x40064e0	      0xe800000000	                          call 0x40064e5	      2839	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_31
0x40064e5	        0x4c8b0424	                     mov r8, qword [rsp]	      2839	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_31
0x40064e9	           0xfb610	                   movzx edx, byte [rax]	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40064ec	            0x31f6	                            xor esi, esi	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40064ee	          0x4c89c7	                             mov rdi, r8	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40064f1	            0x84d2	                             test dl, dl	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40064f3	            0x752b	                           jne 0x4006520	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40064f5	      0xe9e8010000	                           jmp 0x40066e2	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40064fa	    0x660f1f440000	                    nop word [rax + rax]	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4006500	            0x8817	                      mov byte [rdi], dl	      2874	quickfix.c	FUNCTION_39	FOR_1	ELSE_1
0x4006502	         0xfb65001	               movzx edx, byte [rax + 1]	      2874	quickfix.c	FUNCTION_39	FOR_1	ELSE_1
0x4006506	          0x83c601	                              add esi, 1	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4006509	        0x488d4801	                      lea rcx, [rax + 1]	      2874	quickfix.c	FUNCTION_39	FOR_1	ELSE_1
0x400650d	            0x84d2	                             test dl, dl	      2864	quickfix.c	FUNCTION_39	FOR_1
0x400650f	            0x7442	                            je 0x4006553	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4006511	          0x4889c8	                            mov rax, rcx	      2874	quickfix.c	FUNCTION_39	FOR_1	ELSE_1
0x4006514	        0x4883c701	                              add rdi, 1	      2874	quickfix.c	FUNCTION_39	FOR_1	ELSE_1
0x4006518	    0x81fe00040000	                          cmp esi, 0x400	      2864	quickfix.c	FUNCTION_39	FOR_1
0x400651e	            0x7458	                            je 0x4006578	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4006520	          0x80fa0a	                             cmp dl, 0xa	      2866	quickfix.c	FUNCTION_39	FOR_1	IF_1
0x4006523	            0x75db	                           jne 0x4006500	      2866	quickfix.c	FUNCTION_39	FOR_1	IF_1
0x4006525	          0xc60720	                    mov byte [rdi], 0x20	      2868	quickfix.c	FUNCTION_39	FOR_1	IF_1
0x4006528	     0xf1f84000000	                   nop dword [rax + rax]	      2868	quickfix.c	FUNCTION_39	FOR_1	IF_1
0x4006530	        0x4883c001	                              add rax, 1	      2869	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1
0x4006534	           0xfb610	                   movzx edx, byte [rax]	      2869	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1
0x4006537	            0x84d2	                             test dl, dl	      2869	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1
0x4006539	            0x7415	                            je 0x4006550	      2869	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1
0x400653b	          0x8d4af7	                      lea ecx, [rdx - 9]	      2870	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x400653e	          0x80f901	                               cmp cl, 1	      2870	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4006541	            0x76ed	                           jbe 0x4006530	      2870	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4006543	          0x80fa20	                            cmp dl, 0x20	      2870	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4006546	            0x74e8	                            je 0x4006530	      2870	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4006548	          0x83c601	                              add esi, 1	      2864	quickfix.c	FUNCTION_39	FOR_1
0x400654b	            0xebc7	                           jmp 0x4006514	      2864	quickfix.c	FUNCTION_39	FOR_1
0x400654d	           0xf1f00	                         nop dword [rax]	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4006550	          0x83c601	                              add esi, 1	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4006553	          0x4863f6	                         movsxd rsi, esi	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4006556	      0x41c6043000	                  mov byte [r8 + rsi], 0	      2876	quickfix.c	FUNCTION_39	ELSE_1
0x400655b	    0x488b3d000000	            mov rdi, qword [0x04006562] 	      2842	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_33
0x4006562	            0x31f6	                            xor esi, esi	      2842	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_33
0x4006564	      0xe800000000	                          call 0x4006569	      2842	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_33
0x4006569	      0xe800000000	                          call 0x400656e	      2843	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_34
0x400656e	      0xe93afcffff	                           jmp 0x40061ad	      2843	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_34
0x4006573	       0xf1f440000	                   nop dword [rax + rax]	      2843	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_34
0x4006578	      0xbe00040000	                          mov esi, 0x400	      2864	quickfix.c	FUNCTION_39	FOR_1
0x400657d	            0xebd7	                           jmp 0x4006556	      2864	quickfix.c	FUNCTION_39	FOR_1
0x400657f	        0x8b542428	            mov edx, dword [rsp + 0x28] 	      2761	quickfix.c	FUNCTION_38	ELSE_1	IF_7
0x4006583	      0x418b440730	      mov eax, dword [r15 + rax + 0x30] 	      2760	quickfix.c	FUNCTION_38	ELSE_1
0x4006588	            0x85d2	                           test edx, edx	      2761	quickfix.c	FUNCTION_38	ELSE_1	IF_7
0x400658a	     0xf88bb000000	                            js 0x400664b	      2761	quickfix.c	FUNCTION_38	ELSE_1	IF_7
0x4006590	        0x8b54242c	            mov edx, dword [rsp + 0x2c] 	      2763	quickfix.c	FUNCTION_38	ELSE_1	IF_8
0x4006594	            0x85d2	                           test edx, edx	      2763	quickfix.c	FUNCTION_38	ELSE_1	IF_8
0x4006596	     0xf896cfbffff	                           jns 0x4006108	      2763	quickfix.c	FUNCTION_38	ELSE_1	IF_8
0x400659c	            0x89d6	                            mov esi, edx	      2764	quickfix.c	FUNCTION_38	ELSE_1	IF_8
0x400659e	        0x8d541001	                lea edx, [rax + rdx + 1]	      2764	quickfix.c	FUNCTION_38	ELSE_1	IF_8
0x40065a2	      0xb900000000	                              mov ecx, 0	      2764	quickfix.c	FUNCTION_38	ELSE_1	IF_8
0x40065a7	            0xf7de	                                 neg esi	      2764	quickfix.c	FUNCTION_38	ELSE_1	IF_8
0x40065a9	            0x39f0	                            cmp eax, esi	      2764	quickfix.c	FUNCTION_38	ELSE_1	IF_8
0x40065ab	           0xf4dca	                         cmovge ecx, edx	      2764	quickfix.c	FUNCTION_38	ELSE_1	IF_8
0x40065ae	        0x894c242c	             mov dword [rsp + 0x2c], ecx	      2764	quickfix.c	FUNCTION_38	ELSE_1	IF_8
0x40065b2	      0xe951fbffff	                           jmp 0x4006108	      2764	quickfix.c	FUNCTION_38	ELSE_1	IF_8
0x40065b7	      0xbe00040000	                          mov esi, 0x400	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40065bc	      0xe9ddfeffff	                           jmp 0x400649e	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40065c1	      0x49837e1000	               cmp qword [r14 + 0x10], 0	      2839	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_31
0x40065c6	     0xf850cffffff	                           jne 0x40064d8	      2839	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_31
0x40065cc	        0x498b4638	            mov rax, qword [r14 + 0x38] 	      2839	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_31
0x40065d0	      0xe914ffffff	                           jmp 0x40064e9	      2839	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_31
0x40065d5	          0x4489e6	                           mov esi, r12d	      2816	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_22
0x40065d8	      0xbf00000000	                              mov edi, 0	      2816	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_22
0x40065dd	      0xe800000000	                          call 0x40065e2	      2816	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_22
0x40065e2	        0x4d8b4610	              mov r8, qword [r14 + 0x10]	      2817	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_20
0x40065e6	          0x4d85c0	                             test r8, r8	      2817	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_20
0x40065e9	     0xf84abfcffff	                            je 0x400629a	      2817	quickfix.c	FUNCTION_38	FOR_1	IF_13	IF_20
0x40065ef	        0x458b4e1c	            mov r9d, dword [r14 + 0x1c] 	      2819	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_4	IF_21
0x40065f3	          0x4585c9	                           test r9d, r9d	      2819	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_4	IF_21
0x40065f6	            0x752f	                           jne 0x4006627	      2819	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_4	IF_21
0x40065f8	    0x488b3d000000	            mov rdi, qword [0x040065ff] 	        33	stdio2.h	FUNCTION_127	CALL_1
0x40065ff	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_127	CALL_1
0x4006604	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_127	CALL_1
0x400660b	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_127	CALL_1
0x4006610	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_127	CALL_1
0x4006612	      0xe800000000	                          call 0x4006617	        33	stdio2.h	FUNCTION_127	CALL_1
0x4006617	      0xe988fcffff	                           jmp 0x40062a4	        33	stdio2.h	FUNCTION_127	CALL_1
0x400661c	    0x41b800000000	                              mov r8d, 0	      3115	quickfix.c	FUNCTION_46	ELSE_1	IF_2
0x4006622	      0xe987fdffff	                           jmp 0x40063ae	      3115	quickfix.c	FUNCTION_46	ELSE_1	IF_2
0x4006627	    0x488b3d000000	            mov rdi, qword [0x0400662e] 	        33	stdio2.h	FUNCTION_127	CALL_1
0x400662e	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_127	CALL_1
0x4006633	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_127	CALL_1
0x400663a	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_127	CALL_1
0x400663f	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_127	CALL_1
0x4006641	      0xe800000000	                          call 0x4006646	        33	stdio2.h	FUNCTION_127	CALL_1
0x4006646	      0xe959fcffff	                           jmp 0x40062a4	        33	stdio2.h	FUNCTION_127	CALL_1
0x400664b	            0x89d6	                            mov esi, edx	      2762	quickfix.c	FUNCTION_38	ELSE_1	IF_7
0x400664d	        0x8d541001	                lea edx, [rax + rdx + 1]	      2762	quickfix.c	FUNCTION_38	ELSE_1	IF_7
0x4006651	      0xb900000000	                              mov ecx, 0	      2762	quickfix.c	FUNCTION_38	ELSE_1	IF_7
0x4006656	            0xf7de	                                 neg esi	      2762	quickfix.c	FUNCTION_38	ELSE_1	IF_7
0x4006658	            0x39f0	                            cmp eax, esi	      2762	quickfix.c	FUNCTION_38	ELSE_1	IF_7
0x400665a	           0xf4dca	                         cmovge ecx, edx	      2762	quickfix.c	FUNCTION_38	ELSE_1	IF_7
0x400665d	        0x894c2428	             mov dword [rsp + 0x28], ecx	      2762	quickfix.c	FUNCTION_38	ELSE_1	IF_7
0x4006661	      0xe92affffff	                           jmp 0x4006590	      2762	quickfix.c	FUNCTION_38	ELSE_1	IF_7
0x4006666	    0x488b3d000000	            mov rdi, qword [0x0400666d] 	      2797	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_16
0x400666d	            0x89d9	                            mov ecx, ebx	      2797	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_16
0x400666f	      0xba00000000	                              mov edx, 0	      2797	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_16
0x4006674	      0xbe01040000	                          mov esi, 0x401	      2797	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_16
0x4006679	      0xe800000000	                          call 0x400667e	      2797	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_16
0x400667e	    0x48c704240000	                      mov qword [rsp], 0	      2795	quickfix.c	FUNCTION_38	FOR_1	IF_13
0x4006686	      0xe9d6fbffff	                           jmp 0x4006261	      2797	quickfix.c	FUNCTION_38	FOR_1	IF_13	CALL_16
0x400668b	      0xe800000000	                          call 0x4006690	      2800	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	IF_16	CALL_17
0x4006690	          0x4885c0	                           test rax, rax	      2800	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	IF_16	CALL_17
0x4006693	     0xf849efbffff	                            je 0x4006237	      2800	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	IF_16	CALL_17
0x4006699	      0x41807e4201	                cmp byte [r14 + 0x42], 1	      2803	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	IF_16	IF_17
0x400669e	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      2802	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	IF_16
0x40066a5	        0x48890424	                    mov qword [rsp], rax	      2802	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	IF_16
0x40066a9	            0x7445	                            je 0x40066f0	      2803	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	IF_16	IF_17
0x40066ab	        0x4c8b0424	                     mov r8, qword [rsp]	      2806	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	IF_18
0x40066af	          0x4d85c0	                             test r8, r8	      2806	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	IF_18
0x40066b2	     0xf847ffbffff	                            je 0x4006237	      2806	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	IF_18
0x40066b8	    0x488b3d000000	            mov rdi, qword [0x040066bf] 	      2809	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	ELSE_3	CALL_19
0x40066bf	            0x89d9	                            mov ecx, ebx	      2809	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	ELSE_3	CALL_19
0x40066c1	      0xba00000000	                              mov edx, 0	      2809	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	ELSE_3	CALL_19
0x40066c6	      0xbe01040000	                          mov esi, 0x401	      2809	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	ELSE_3	CALL_19
0x40066cb	            0x31c0	                            xor eax, eax	      2809	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	ELSE_3	CALL_19
0x40066cd	      0xe800000000	                          call 0x40066d2	      2809	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	ELSE_3	CALL_19
0x40066d2	      0xe98afbffff	                           jmp 0x4006261	      2809	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	ELSE_3	CALL_19
0x40066d7	    0x41b800000000	                              mov r8d, 0	      3117	quickfix.c	FUNCTION_46	ELSE_2	IF_3
0x40066dd	      0xe9ccfcffff	                           jmp 0x40063ae	      3117	quickfix.c	FUNCTION_46	ELSE_2	IF_3
0x40066e2	            0x31f6	                            xor esi, esi	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40066e4	      0xe96dfeffff	                           jmp 0x4006556	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40066e9	            0x31f6	                            xor esi, esi	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40066eb	      0xe9aefdffff	                           jmp 0x400649e	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40066f0	          0x4889c7	                            mov rdi, rax	      2804	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	IF_16	CALL_18
0x40066f3	      0xe800000000	                          call 0x40066f8	      2804	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	IF_16	CALL_18
0x40066f8	        0x48890424	                    mov qword [rsp], rax	      2804	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	IF_16	CALL_18
0x40066fc	            0xebad	                           jmp 0x40066ab	      2804	quickfix.c	FUNCTION_38	FOR_1	IF_13	ELSE_2	IF_16	CALL_18
0x40066fe	      0xe800000000	                          call 0x4006703	      2852	quickfix.c	FUNCTION_38
qf_history	functions,0:WHILE,0:DO,0:CALL,3:SWITCH,0:IF,2:ELSE,1:FOR,1	57
0x4006850	            0x4154	                                push r12	      2960	quickfix.c	FUNCTION_42
0x4006852	              0x55	                                push rbp	      2960	quickfix.c	FUNCTION_42
0x4006853	      0xbd00000000	                              mov ebp, 0	      2961	quickfix.c	FUNCTION_42
0x4006858	              0x53	                                push rbx	      2960	quickfix.c	FUNCTION_42
0x4006859	    0x817f20e60000	           cmp dword [rdi + 0x20], 0xe6 	      2964	quickfix.c	FUNCTION_42	IF_1
0x4006860	            0x747e	                            je 0x40068e0	      2964	quickfix.c	FUNCTION_42	IF_1
0x4006862	        0x837d0400	                  cmp dword [rbp + 4], 0	      2966	quickfix.c	FUNCTION_42	IF_2
0x4006866	            0x7438	                            je 0x40068a0	      2966	quickfix.c	FUNCTION_42	IF_2
0x4006868	            0x7e2c	                           jle 0x4006896	      2970	quickfix.c	FUNCTION_42	ELSE_1	FOR_1
0x400686a	            0x31db	                            xor ebx, ebx	      2970	quickfix.c	FUNCTION_42	ELSE_1	FOR_1
0x400686c	    0x41bc00000000	                             mov r12d, 0	      2971	quickfix.c	FUNCTION_42	ELSE_1	FOR_1
0x4006872	    0x660f1f440000	                    nop word [rax + rax]	      2971	quickfix.c	FUNCTION_42	ELSE_1	FOR_1
0x4006878	          0x395d08	                cmp dword [rbp + 8], ebx	      2971	quickfix.c	FUNCTION_42	ELSE_1	FOR_1
0x400687b	      0xba00000000	                              mov edx, 0	      2971	quickfix.c	FUNCTION_42	ELSE_1	FOR_1
0x4006880	            0x89de	                            mov esi, ebx	      2971	quickfix.c	FUNCTION_42	ELSE_1	FOR_1
0x4006882	          0x4889ef	                            mov rdi, rbp	      2971	quickfix.c	FUNCTION_42	ELSE_1	FOR_1
0x4006885	        0x490f45d4	                         cmovne rdx, r12	      2971	quickfix.c	FUNCTION_42	ELSE_1	FOR_1
0x4006889	          0x83c301	                              add ebx, 1	      2970	quickfix.c	FUNCTION_42	ELSE_1	FOR_1
0x400688c	      0xe82f9fffff	                         call sym.qf_msg	      2971	quickfix.c	FUNCTION_42	ELSE_1	FOR_1
0x4006891	          0x395d04	                cmp dword [rbp + 4], ebx	      2970	quickfix.c	FUNCTION_42	ELSE_1	FOR_1
0x4006894	            0x7fe2	                            jg 0x4006878	      2970	quickfix.c	FUNCTION_42	ELSE_1	FOR_1
0x4006896	              0x5b	                                 pop rbx	      2972	quickfix.c	FUNCTION_42
0x4006897	              0x5d	                                 pop rbp	      2972	quickfix.c	FUNCTION_42
0x4006898	            0x415c	                                 pop r12	      2972	quickfix.c	FUNCTION_42
0x400689a	              0xc3	                                     ret	      2972	quickfix.c	FUNCTION_42
0x400689b	       0xf1f440000	                   nop dword [rax + rax]	      2972	quickfix.c	FUNCTION_42
0x40068a0	        0x48634508	            movsxd rax, dword [rbp + 8] 	      2967	quickfix.c	FUNCTION_42	IF_2
0x40068a4	    0x488d14c50000	                        lea rdx, [rax*8]	      2967	quickfix.c	FUNCTION_42	IF_2
0x40068ac	        0x48c1e007	                              shl rax, 7	      2967	quickfix.c	FUNCTION_42	IF_2
0x40068b0	          0x4829d0	                            sub rax, rdx	      2967	quickfix.c	FUNCTION_42	IF_2
0x40068b3	        0x8b440530	      mov eax, dword [rbp + rax + 0x30] 	      2967	quickfix.c	FUNCTION_42	IF_2
0x40068b7	            0x85c0	                           test eax, eax	      2967	quickfix.c	FUNCTION_42	IF_2
0x40068b9	            0x75db	                           jne 0x4006896	      2967	quickfix.c	FUNCTION_42	IF_2
0x40068bb	            0x31ff	                            xor edi, edi	      2968	quickfix.c	FUNCTION_42	CALL_2
0x40068bd	      0xba05000000	                              mov edx, 5	      2968	quickfix.c	FUNCTION_42	CALL_2
0x40068c2	      0xbe00000000	                              mov esi, 0	      2968	quickfix.c	FUNCTION_42	CALL_2
0x40068c7	      0xe800000000	                          call 0x40068cc	      2968	quickfix.c	FUNCTION_42	CALL_2
0x40068cc	              0x5b	                                 pop rbx	      2972	quickfix.c	FUNCTION_42
0x40068cd	              0x5d	                                 pop rbp	      2972	quickfix.c	FUNCTION_42
0x40068ce	            0x415c	                                 pop r12	      2972	quickfix.c	FUNCTION_42
0x40068d0	          0x4889c7	                            mov rdi, rax	      2968	quickfix.c	FUNCTION_42	CALL_2
0x40068d3	      0xe900000000	                           jmp 0x40068d8	      2968	quickfix.c	FUNCTION_42	CALL_2
0x40068d8	     0xf1f84000000	                   nop dword [rax + rax]	      2968	quickfix.c	FUNCTION_42	CALL_2
0x40068e0	    0x488b05000000	            mov rax, qword [0x040068e7] 	      2965	quickfix.c	FUNCTION_42	IF_1
0x40068e7	        0x488b7808	                mov rdi, qword [rax + 8]	      2965	quickfix.c	FUNCTION_42	IF_1
0x40068eb	      0xe800000000	                          call 0x40068f0	      2965	quickfix.c	FUNCTION_42	IF_1
0x40068f0	            0x85c0	                           test eax, eax	      2965	quickfix.c	FUNCTION_42	IF_1
0x40068f2	    0x488b05000000	            mov rax, qword [0x040068f9] 	      2965	quickfix.c	FUNCTION_42	IF_1
0x40068f9	            0x7415	                            je 0x4006910	      2965	quickfix.c	FUNCTION_42	IF_1
0x40068fb	    0x488ba8501900	          mov rbp, qword [rax + 0x1950] 	      2965	quickfix.c	FUNCTION_42	IF_1
0x4006902	          0x4885ed	                           test rbp, rbp	      2965	quickfix.c	FUNCTION_42	IF_1
0x4006905	     0xf8557ffffff	                           jne 0x4006862	      2965	quickfix.c	FUNCTION_42	IF_1
0x400690b	       0xf1f440000	                   nop dword [rax + rax]	      2965	quickfix.c	FUNCTION_42	IF_1
0x4006910	    0x488ba8481900	          mov rbp, qword [rax + 0x1948] 	      2965	quickfix.c	FUNCTION_42	IF_1
0x4006917	          0x4885ed	                           test rbp, rbp	      2966	quickfix.c	FUNCTION_42	IF_2
0x400691a	            0x749f	                            je 0x40068bb	      2966	quickfix.c	FUNCTION_42	IF_2
0x400691c	      0xe941ffffff	                           jmp 0x4006862	      2966	quickfix.c	FUNCTION_42	IF_2
jump_to_help_window	functions,0:WHILE,0:DO,0:CALL,5:SWITCH,0:IF,9:ELSE,2:FOR,0	71
0x40001c0	            0x4154	                                push r12	      2148	quickfix.c	FUNCTION_32
0x40001c2	          0x4989f4	                            mov r12, rsi	      2148	quickfix.c	FUNCTION_32
0x40001c5	    0x8b3500000000	            mov esi, dword [0x040001cb] 	      2152	quickfix.c	FUNCTION_32	IF_1
0x40001cb	              0x55	                                push rbp	      2148	quickfix.c	FUNCTION_32
0x40001cc	          0x4889fd	                            mov rbp, rdi	      2148	quickfix.c	FUNCTION_32
0x40001cf	              0x53	                                push rbx	      2148	quickfix.c	FUNCTION_32
0x40001d0	            0x85f6	                           test esi, esi	      2152	quickfix.c	FUNCTION_32	IF_1
0x40001d2	            0x750c	                           jne 0x40001e0	      2152	quickfix.c	FUNCTION_32	IF_1
0x40001d4	    0x488b1d000000	            mov rbx, qword [0x040001db] 	      2155	quickfix.c	FUNCTION_32	ELSE_1	CALL_1
0x40001db	          0x4885db	                           test rbx, rbx	      2155	quickfix.c	FUNCTION_32	ELSE_1	CALL_1
0x40001de	            0x7541	                           jne 0x4000221	      2155	quickfix.c	FUNCTION_32	ELSE_1	CALL_1
0x40001e0	    0x8b0500000000	            mov eax, dword [0x040001e6] 	      2167	quickfix.c	FUNCTION_32	ELSE_2	IF_4
0x40001e6	            0x85c0	                           test eax, eax	      2167	quickfix.c	FUNCTION_32	ELSE_2	IF_4
0x40001e8	            0x757e	                           jne 0x4000268	      2167	quickfix.c	FUNCTION_32	ELSE_2	IF_4
0x40001ea	    0x488b05000000	            mov rax, qword [0x040001f1] 	      2167	quickfix.c	FUNCTION_32	ELSE_2	IF_4
0x40001f1	    0x486390ac0000	         movsxd rdx, dword [rax + 0xac] 	      2167	quickfix.c	FUNCTION_32	ELSE_2	IF_4
0x40001f8	    0x483915000000	            cmp qword [0x040001ff], rdx 	      2168	quickfix.c	FUNCTION_32	ELSE_2	IF_4
0x40001ff	            0x7467	                            je 0x4000268	      2168	quickfix.c	FUNCTION_32	ELSE_2	IF_4
0x4000201	          0x83fa4f	                           cmp edx, 0x4f	      2168	quickfix.c	FUNCTION_32	ELSE_2	IF_4
0x4000204	            0x7f62	                            jg 0x4000268	      2168	quickfix.c	FUNCTION_32	ELSE_2	IF_4
0x4000206	      0xbe94000000	                           mov esi, 0x94	      2168	quickfix.c	FUNCTION_32	ELSE_2	IF_4
0x400020b	      0xb814000000	                           mov eax, 0x14	      2169	quickfix.c	FUNCTION_32	ELSE_2	IF_4
0x4000210	            0xeb60	                           jmp 0x4000272	      2169	quickfix.c	FUNCTION_32	ELSE_2	IF_4
0x4000212	    0x660f1f440000	                    nop word [rax + rax]	      2169	quickfix.c	FUNCTION_32	ELSE_2	IF_4
0x4000218	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      2155	quickfix.c	FUNCTION_32	ELSE_1	CALL_1
0x400021c	          0x4885db	                           test rbx, rbx	      2155	quickfix.c	FUNCTION_32	ELSE_1	CALL_1
0x400021f	            0x74bf	                            je 0x40001e0	      2155	quickfix.c	FUNCTION_32	ELSE_1	CALL_1
0x4000221	        0x488b7b08	                mov rdi, qword [rbx + 8]	      2156	quickfix.c	FUNCTION_32	ELSE_1	IF_2	CALL_2
0x4000225	      0xe800000000	                          call 0x400022a	      2156	quickfix.c	FUNCTION_32	ELSE_1	IF_2	CALL_2
0x400022a	            0x85c0	                           test eax, eax	      2156	quickfix.c	FUNCTION_32	ELSE_1	IF_2	CALL_2
0x400022c	            0x74ea	                            je 0x4000218	      2156	quickfix.c	FUNCTION_32	ELSE_1	IF_2	CALL_2
0x400022e	        0x488b4308	                mov rax, qword [rbx + 8]	      2158	quickfix.c	FUNCTION_32	IF_3
0x4000232	          0x8b5078	            mov edx, dword [rax + 0x78] 	      2158	quickfix.c	FUNCTION_32	IF_3
0x4000235	            0x85d2	                           test edx, edx	      2158	quickfix.c	FUNCTION_32	IF_3
0x4000237	            0x7ea7	                           jle 0x40001e0	      2158	quickfix.c	FUNCTION_32	IF_3
0x4000239	      0xbe01000000	                              mov esi, 1	      2159	quickfix.c	FUNCTION_32	CALL_3
0x400023e	          0x4889df	                            mov rdi, rbx	      2159	quickfix.c	FUNCTION_32	CALL_3
0x4000241	      0xe800000000	                          call 0x4000246	      2159	quickfix.c	FUNCTION_32	CALL_3
0x4000246	    0x8b0d00000000	            mov ecx, dword [0x0400024c] 	      2189	quickfix.c	FUNCTION_32	IF_9
0x400024c	      0xb801000000	                              mov eax, 1	      2192	quickfix.c	FUNCTION_32
0x4000251	            0x85c9	                           test ecx, ecx	      2189	quickfix.c	FUNCTION_32	IF_9
0x4000253	            0x750a	                           jne 0x400025f	      2189	quickfix.c	FUNCTION_32	IF_9
0x4000255	    0xc70500000000	               mov dword [0x0400025f], 0	      2190	quickfix.c	FUNCTION_32	IF_9
0x400025f	              0x5b	                                 pop rbx	      2193	quickfix.c	FUNCTION_32
0x4000260	              0x5d	                                 pop rbp	      2193	quickfix.c	FUNCTION_32
0x4000261	            0x415c	                                 pop r12	      2193	quickfix.c	FUNCTION_32
0x4000263	              0xc3	                                     ret	      2193	quickfix.c	FUNCTION_32
0x4000264	         0xf1f4000	                         nop dword [rax]	      2193	quickfix.c	FUNCTION_32
0x4000268	      0xbe90000000	                           mov esi, 0x90	      2193	quickfix.c	FUNCTION_32
0x400026d	      0xb810000000	                           mov eax, 0x10	      2166	quickfix.c	FUNCTION_32	ELSE_2
0x4000272	    0x4881fd000000	                              cmp rbp, 0	      2166	quickfix.c	FUNCTION_32	ELSE_2
0x4000279	           0xf44f0	                          cmove esi, eax	      2166	quickfix.c	FUNCTION_32	ELSE_2
0x400027c	            0x31ff	                            xor edi, edi	      2173	quickfix.c	FUNCTION_32	ELSE_2	IF_6	CALL_4
0x400027e	      0xe800000000	                          call 0x4000283	      2173	quickfix.c	FUNCTION_32	ELSE_2	IF_6	CALL_4
0x4000283	            0x85c0	                           test eax, eax	      2173	quickfix.c	FUNCTION_32	ELSE_2	IF_6	CALL_4
0x4000285	            0x74d8	                            je 0x400025f	      2173	quickfix.c	FUNCTION_32	ELSE_2	IF_6	CALL_4
0x4000287	    0x488b05000000	            mov rax, qword [0x0400028e] 	      2178	quickfix.c	FUNCTION_32	ELSE_2	IF_7
0x400028e	    0x41c704240100	                      mov dword [r12], 1	      2176	quickfix.c	FUNCTION_32	ELSE_2
0x4000296	    0x488b3d000000	            mov rdi, qword [0x0400029d] 	      2178	quickfix.c	FUNCTION_32	ELSE_2	IF_7
0x400029d	    0x486380a00000	         movsxd rax, dword [rax + 0xa0] 	      2178	quickfix.c	FUNCTION_32	ELSE_2	IF_7
0x40002a4	          0x4839f8	                            cmp rax, rdi	      2178	quickfix.c	FUNCTION_32	ELSE_2	IF_7
0x40002a7	            0x7c27	                            jl 0x40002d0	      2178	quickfix.c	FUNCTION_32	ELSE_2	IF_7
0x40002a9	    0x4881fd000000	                              cmp rbp, 0	      2181	quickfix.c	FUNCTION_32	ELSE_2	IF_8
0x40002b0	            0x7494	                            je 0x4000246	      2181	quickfix.c	FUNCTION_32	ELSE_2	IF_8
0x40002b2	    0x488b05000000	            mov rax, qword [0x040002b9] 	      2184	quickfix.c	FUNCTION_32	ELSE_2	IF_8
0x40002b9	    0x4889a8481900	          mov qword [rax + 0x1948], rbp 	      2184	quickfix.c	FUNCTION_32	ELSE_2	IF_8
0x40002c0	        0x83450001	                      add dword [rbp], 1	      2185	quickfix.c	FUNCTION_32	ELSE_2	IF_8
0x40002c4	            0xeb80	                           jmp 0x4000246	      2185	quickfix.c	FUNCTION_32	ELSE_2	IF_8
0x40002c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2185	quickfix.c	FUNCTION_32	ELSE_2	IF_8
0x40002d0	      0xe800000000	                          call 0x40002d5	      2179	quickfix.c	FUNCTION_32	ELSE_2	CALL_5
0x40002d5	            0xebd2	                           jmp 0x40002a9	      2179	quickfix.c	FUNCTION_32	ELSE_2	CALL_5
qf_update_buffer	functions,0:WHILE,0:DO,0:CALL,9:SWITCH,0:IF,4:ELSE,0:FOR,0	172
0x40017c0	            0x4157	                                push r15	      3503	quickfix.c	FUNCTION_58
0x40017c2	            0x4156	                                push r14	      3503	quickfix.c	FUNCTION_58
0x40017c4	            0x4155	                                push r13	      3503	quickfix.c	FUNCTION_58
0x40017c6	            0x4154	                                push r12	      3503	quickfix.c	FUNCTION_58
0x40017c8	              0x55	                                push rbp	      3503	quickfix.c	FUNCTION_58
0x40017c9	              0x53	                                push rbx	      3503	quickfix.c	FUNCTION_58
0x40017ca	        0x4883ec48	                           sub rsp, 0x48	      3503	quickfix.c	FUNCTION_58
0x40017ce	    0x4c8b25000000	            mov r12, qword [0x040017d5] 	      3473	quickfix.c	FUNCTION_56	CALL_1
0x40017d5	    0x64488b042528	                mov rax, qword fs:[0x28]	      3503	quickfix.c	FUNCTION_58
0x40017de	      0x4889442438	             mov qword [rsp + 0x38], rax	      3503	quickfix.c	FUNCTION_58
0x40017e3	            0x31c0	                            xor eax, eax	      3503	quickfix.c	FUNCTION_58
0x40017e5	          0x4d85e4	                           test r12, r12	      3473	quickfix.c	FUNCTION_56	CALL_1
0x40017e8	            0x7456	                            je 0x4001840	      3473	quickfix.c	FUNCTION_56	CALL_1
0x40017ea	          0x4889fd	                            mov rbp, rdi	      3473	quickfix.c	FUNCTION_56	CALL_1
0x40017ed	          0x4989f5	                            mov r13, rsi	      3473	quickfix.c	FUNCTION_56	CALL_1
0x40017f0	    0x4c3925000000	            cmp qword [0x040017f7], r12 	      3473	quickfix.c	FUNCTION_56	CALL_1
0x40017f7	     0xf8413020000	                            je 0x4001a10	      3473	quickfix.c	FUNCTION_56	CALL_1
0x40017fd	      0x498b5c2420	            mov rbx, qword [r12 + 0x20] 	      3473	quickfix.c	FUNCTION_56	CALL_1
0x4001802	          0x4885db	                           test rbx, rbx	      3473	quickfix.c	FUNCTION_56	CALL_1
0x4001805	            0x7428	                            je 0x400182f	      3473	quickfix.c	FUNCTION_56	CALL_1
0x4001807	    0x4881fd000000	                              cmp rbp, 0	      3473	quickfix.c	FUNCTION_56	CALL_1
0x400180e	            0x7461	                            je 0x4001871	      3473	quickfix.c	FUNCTION_56	CALL_1
0x4001810	        0x488b7b08	                mov rdi, qword [rbx + 8]	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x4001814	      0xe800000000	                          call 0x4001819	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x4001819	            0x85c0	                           test eax, eax	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400181b	            0x7409	                            je 0x4001826	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400181d	    0x483bab501900	          cmp rbp, qword [rbx + 0x1950] 	      3442	quickfix.c	FUNCTION_54	IF_1	IF_2
0x4001824	            0x746a	                            je 0x4001890	      3442	quickfix.c	FUNCTION_54	IF_1	IF_2
0x4001826	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      3473	quickfix.c	FUNCTION_56	CALL_1
0x400182a	          0x4885db	                           test rbx, rbx	      3473	quickfix.c	FUNCTION_56	CALL_1
0x400182d	            0x75e1	                           jne 0x4001810	      3473	quickfix.c	FUNCTION_56	CALL_1
0x400182f	        0x4d8b2424	                    mov r12, qword [r12]	      3473	quickfix.c	FUNCTION_56	CALL_1
0x4001833	          0x4d85e4	                           test r12, r12	      3473	quickfix.c	FUNCTION_56	CALL_1
0x4001836	            0x75b8	                           jne 0x40017f0	      3473	quickfix.c	FUNCTION_56	CALL_1
0x4001838	     0xf1f84000000	                   nop dword [rax + rax]	      3473	quickfix.c	FUNCTION_56	CALL_1
0x4001840	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      3536	quickfix.c	FUNCTION_58
0x4001845	    0x644833042528	                xor rax, qword fs:[0x28]	      3536	quickfix.c	FUNCTION_58
0x400184e	     0xf8538020000	                           jne 0x4001a8c	      3536	quickfix.c	FUNCTION_58
0x4001854	        0x4883c448	                           add rsp, 0x48	      3536	quickfix.c	FUNCTION_58
0x4001858	              0x5b	                                 pop rbx	      3536	quickfix.c	FUNCTION_58
0x4001859	              0x5d	                                 pop rbp	      3536	quickfix.c	FUNCTION_58
0x400185a	            0x415c	                                 pop r12	      3536	quickfix.c	FUNCTION_58
0x400185c	            0x415d	                                 pop r13	      3536	quickfix.c	FUNCTION_58
0x400185e	            0x415e	                                 pop r14	      3536	quickfix.c	FUNCTION_58
0x4001860	            0x415f	                                 pop r15	      3536	quickfix.c	FUNCTION_58
0x4001862	              0xc3	                                     ret	      3536	quickfix.c	FUNCTION_58
0x4001863	       0xf1f440000	                   nop dword [rax + rax]	      3536	quickfix.c	FUNCTION_58
0x4001868	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      3473	quickfix.c	FUNCTION_56	CALL_1
0x400186c	          0x4885db	                           test rbx, rbx	      3473	quickfix.c	FUNCTION_56	CALL_1
0x400186f	            0x74be	                            je 0x400182f	      3473	quickfix.c	FUNCTION_56	CALL_1
0x4001871	        0x488b7b08	                mov rdi, qword [rbx + 8]	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x4001875	      0xe800000000	                          call 0x400187a	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400187a	            0x85c0	                           test eax, eax	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400187c	            0x74ea	                            je 0x4001868	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400187e	    0x4883bb501900	             cmp qword [rbx + 0x1950], 0	      3441	quickfix.c	FUNCTION_54	IF_1	IF_2
0x4001886	            0x75e0	                           jne 0x4001868	      3441	quickfix.c	FUNCTION_54	IF_1	IF_2
0x4001888	     0xf1f84000000	                   nop dword [rax + rax]	      3441	quickfix.c	FUNCTION_54	IF_1	IF_2
0x4001890	        0x4c8b6308	                mov r12, qword [rbx + 8]	      3475	quickfix.c	FUNCTION_56	IF_1
0x4001894	          0x4d85e4	                           test r12, r12	      3510	quickfix.c	FUNCTION_58	IF_1
0x4001897	            0x74a7	                            je 0x4001840	      3510	quickfix.c	FUNCTION_58	IF_1
0x4001899	          0x4d85ed	                           test r13, r13	      3514	quickfix.c	FUNCTION_58	IF_1	IF_2
0x400189c	        0x4d8b3424	                    mov r14, qword [r12]	      3512	quickfix.c	FUNCTION_58	IF_1
0x40018a0	     0xf8490010000	                            je 0x4001a36	      3514	quickfix.c	FUNCTION_58	IF_1	IF_2
0x40018a6	    0x488b1d000000	            mov rbx, qword [0x040018ad] 	      3457	quickfix.c	FUNCTION_55	CALL_1
0x40018ad	          0x4885db	                           test rbx, rbx	      3457	quickfix.c	FUNCTION_55	CALL_1
0x40018b0	     0xf84ba010000	                            je 0x4001a70	      3457	quickfix.c	FUNCTION_55	CALL_1
0x40018b6	    0x4881fd000000	                              cmp rbp, 0	      3457	quickfix.c	FUNCTION_55	CALL_1
0x40018bd	     0xf84a6000000	                            je 0x4001969	      3457	quickfix.c	FUNCTION_55	CALL_1
0x40018c3	       0xf1f440000	                   nop dword [rax + rax]	      3457	quickfix.c	FUNCTION_55	CALL_1
0x40018c8	        0x488b7b08	                mov rdi, qword [rbx + 8]	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x40018cc	      0xe800000000	                          call 0x40018d1	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x40018d1	            0x85c0	                           test eax, eax	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x40018d3	            0x740d	                            je 0x40018e2	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x40018d5	    0x483bab501900	          cmp rbp, qword [rbx + 0x1950] 	      3442	quickfix.c	FUNCTION_54	IF_1	IF_2
0x40018dc	     0xf849e000000	                            je 0x4001980	      3442	quickfix.c	FUNCTION_54	IF_1	IF_2
0x40018e2	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      3457	quickfix.c	FUNCTION_55	CALL_1
0x40018e6	          0x4885db	                           test rbx, rbx	      3457	quickfix.c	FUNCTION_55	CALL_1
0x40018e9	            0x75dd	                           jne 0x40018c8	      3457	quickfix.c	FUNCTION_55	CALL_1
0x40018eb	          0x4c89ea	                            mov rdx, r13	      3520	quickfix.c	FUNCTION_58	IF_1	CALL_4
0x40018ee	          0x4c89e6	                            mov rsi, r12	      3520	quickfix.c	FUNCTION_58	IF_1	CALL_4
0x40018f1	          0x4889ef	                            mov rdi, rbp	      3520	quickfix.c	FUNCTION_58	IF_1	CALL_4
0x40018f4	      0xe8a7f8ffff	                 call sym.qf_fill_buffer	      3520	quickfix.c	FUNCTION_58	IF_1	CALL_4
0x40018f9	    0x49838424d800	               add qword [r12 + 0xd8], 1	      3521	quickfix.c	FUNCTION_58	IF_1	CALL_5
0x4001902	          0x4d85ed	                           test r13, r13	      3523	quickfix.c	FUNCTION_58	IF_1	IF_3
0x4001905	     0xf8411010000	                            je 0x4001a1c	      3523	quickfix.c	FUNCTION_58	IF_1	IF_3
0x400190b	    0x488b1d000000	            mov rbx, qword [0x04001912] 	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4001912	          0x4885db	                           test rbx, rbx	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4001915	     0xf8425ffffff	                            je 0x4001840	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400191b	    0x4881fd000000	                              cmp rbp, 0	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4001922	     0xf84ad000000	                            je 0x40019d5	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4001928	     0xf1f84000000	                   nop dword [rax + rax]	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4001930	        0x488b7b08	                mov rdi, qword [rbx + 8]	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x4001934	      0xe800000000	                          call 0x4001939	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x4001939	            0x85c0	                           test eax, eax	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400193b	            0x740d	                            je 0x400194a	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400193d	    0x483bab501900	          cmp rbp, qword [rbx + 0x1950] 	      3442	quickfix.c	FUNCTION_54	IF_1	IF_2
0x4001944	     0xf84a6000000	                            je 0x40019f0	      3442	quickfix.c	FUNCTION_54	IF_1	IF_2
0x400194a	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400194e	          0x4885db	                           test rbx, rbx	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4001951	            0x75dd	                           jne 0x4001930	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4001953	      0xe9e8feffff	                           jmp 0x4001840	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4001958	     0xf1f84000000	                   nop dword [rax + rax]	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4001960	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4001964	          0x4885db	                           test rbx, rbx	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4001967	            0x7482	                            je 0x40018eb	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4001969	        0x488b7b08	                mov rdi, qword [rbx + 8]	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400196d	      0xe800000000	                          call 0x4001972	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x4001972	            0x85c0	                           test eax, eax	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x4001974	            0x74ea	                            je 0x4001960	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x4001976	    0x4883bb501900	             cmp qword [rbx + 0x1950], 0	      3441	quickfix.c	FUNCTION_54	IF_1	IF_2
0x400197e	            0x75e0	                           jne 0x4001960	      3441	quickfix.c	FUNCTION_54	IF_1	IF_2
0x4001980	        0x48634508	            movsxd rax, dword [rbp + 8] 	      3544	quickfix.c	FUNCTION_59	IF_1
0x4001984	    0x4c8b3d000000	            mov r15, qword [0x0400198b] 	      3491	quickfix.c	FUNCTION_57	IF_1
0x400198b	    0x48891d000000	            mov qword [0x04001992], rbx 	      3492	quickfix.c	FUNCTION_57	IF_1
0x4001992	    0x488d14c50000	                        lea rdx, [rax*8]	      3544	quickfix.c	FUNCTION_59	IF_1
0x400199a	        0x48c1e007	                              shl rax, 7	      3544	quickfix.c	FUNCTION_59	IF_1
0x400199e	          0x4829d0	                            sub rax, rdx	      3544	quickfix.c	FUNCTION_59	IF_1
0x40019a1	      0x488b740540	      mov rsi, qword [rbp + rax + 0x40] 	      3544	quickfix.c	FUNCTION_59	IF_1
0x40019a6	          0x4885f6	                           test rsi, rsi	      3544	quickfix.c	FUNCTION_59	IF_1
0x40019a9	            0x740a	                            je 0x40019b5	      3544	quickfix.c	FUNCTION_59	IF_1
0x40019ab	      0xbf00000000	                              mov edi, 0	      3545	quickfix.c	FUNCTION_59	IF_1	CALL_1
0x40019b0	      0xe800000000	                          call 0x40019b5	      3545	quickfix.c	FUNCTION_59	IF_1	CALL_1
0x40019b5	    0x4c893d000000	            mov qword [0x040019bc], r15 	      3494	quickfix.c	FUNCTION_57	IF_1
0x40019bc	      0xe92affffff	                           jmp 0x40018eb	      3494	quickfix.c	FUNCTION_57	IF_1
0x40019c1	     0xf1f80000000	                         nop dword [rax]	      3494	quickfix.c	FUNCTION_57	IF_1
0x40019c8	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      3457	quickfix.c	FUNCTION_55	CALL_1
0x40019cc	          0x4885db	                           test rbx, rbx	      3457	quickfix.c	FUNCTION_55	CALL_1
0x40019cf	     0xf846bfeffff	                            je 0x4001840	      3457	quickfix.c	FUNCTION_55	CALL_1
0x40019d5	        0x488b7b08	                mov rdi, qword [rbx + 8]	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x40019d9	      0xe800000000	                          call 0x40019de	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x40019de	            0x85c0	                           test eax, eax	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x40019e0	            0x74e6	                            je 0x40019c8	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x40019e2	    0x4883bb501900	             cmp qword [rbx + 0x1950], 0	      3441	quickfix.c	FUNCTION_54	IF_1	IF_2
0x40019ea	            0x75dc	                           jne 0x40019c8	      3441	quickfix.c	FUNCTION_54	IF_1	IF_2
0x40019ec	         0xf1f4000	                         nop dword [rax]	      3441	quickfix.c	FUNCTION_54	IF_1	IF_2
0x40019f0	    0x4c3bb3e80000	            cmp r14, qword [rbx + 0xe8] 	      3533	quickfix.c	FUNCTION_58	IF_1	IF_4	CALL_8
0x40019f7	     0xf8d43feffff	                           jge 0x4001840	      3533	quickfix.c	FUNCTION_58	IF_1	IF_4	CALL_8
0x40019fd	      0xbe28000000	                           mov esi, 0x28	      3534	quickfix.c	FUNCTION_58	IF_1	CALL_9
0x4001a02	          0x4c89e7	                            mov rdi, r12	      3534	quickfix.c	FUNCTION_58	IF_1	CALL_9
0x4001a05	      0xe800000000	                          call 0x4001a0a	      3534	quickfix.c	FUNCTION_58	IF_1	CALL_9
0x4001a0a	      0xe931feffff	                           jmp 0x4001840	      3536	quickfix.c	FUNCTION_58
0x4001a0f	              0x90	                                     nop	      3536	quickfix.c	FUNCTION_58
0x4001a10	    0x488b1d000000	            mov rbx, qword [0x04001a17] 	      3473	quickfix.c	FUNCTION_56	CALL_1
0x4001a17	      0xe9e6fdffff	                           jmp 0x4001802	      3473	quickfix.c	FUNCTION_56	CALL_1
0x4001a1c	          0x4989e7	                            mov r15, rsp	      3473	quickfix.c	FUNCTION_56	CALL_1
0x4001a1f	          0x4889ef	                            mov rdi, rbp	      3525	quickfix.c	FUNCTION_58	IF_1	IF_3	CALL_6
0x4001a22	            0x31f6	                            xor esi, esi	      3525	quickfix.c	FUNCTION_58	IF_1	IF_3	CALL_6
0x4001a24	      0xe827f6ffff	              call sym.qf_win_pos_update	      3525	quickfix.c	FUNCTION_58	IF_1	IF_3	CALL_6
0x4001a29	          0x4c89ff	                            mov rdi, r15	      3528	quickfix.c	FUNCTION_58	IF_1	IF_3	CALL_7
0x4001a2c	      0xe800000000	                          call 0x4001a31	      3528	quickfix.c	FUNCTION_58	IF_1	IF_3	CALL_7
0x4001a31	      0xe9d5feffff	                           jmp 0x400190b	      3528	quickfix.c	FUNCTION_58	IF_1	IF_3	CALL_7
0x4001a36	          0x4c89e6	                            mov rsi, r12	      3516	quickfix.c	FUNCTION_58	IF_1	CALL_2
0x4001a39	          0x4889e7	                            mov rdi, rsp	      3516	quickfix.c	FUNCTION_58	IF_1	CALL_2
0x4001a3c	          0x4989e7	                            mov r15, rsp	      3516	quickfix.c	FUNCTION_58	IF_1	CALL_2
0x4001a3f	      0xe800000000	                          call 0x4001a44	      3516	quickfix.c	FUNCTION_58	IF_1	CALL_2
0x4001a44	    0x488b1d000000	            mov rbx, qword [0x04001a4b] 	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4001a4b	          0x4885db	                           test rbx, rbx	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4001a4e	     0xf8562feffff	                           jne 0x40018b6	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4001a54	            0x31d2	                            xor edx, edx	      3520	quickfix.c	FUNCTION_58	IF_1	CALL_4
0x4001a56	          0x4c89e6	                            mov rsi, r12	      3520	quickfix.c	FUNCTION_58	IF_1	CALL_4
0x4001a59	          0x4889ef	                            mov rdi, rbp	      3520	quickfix.c	FUNCTION_58	IF_1	CALL_4
0x4001a5c	      0xe83ff7ffff	                 call sym.qf_fill_buffer	      3520	quickfix.c	FUNCTION_58	IF_1	CALL_4
0x4001a61	    0x49838424d800	               add qword [r12 + 0xd8], 1	      3521	quickfix.c	FUNCTION_58	IF_1	CALL_5
0x4001a6a	            0xebb3	                           jmp 0x4001a1f	      3521	quickfix.c	FUNCTION_58	IF_1	CALL_5
0x4001a6c	         0xf1f4000	                         nop dword [rax]	      3521	quickfix.c	FUNCTION_58	IF_1	CALL_5
0x4001a70	          0x4c89ea	                            mov rdx, r13	      3520	quickfix.c	FUNCTION_58	IF_1	CALL_4
0x4001a73	          0x4c89e6	                            mov rsi, r12	      3520	quickfix.c	FUNCTION_58	IF_1	CALL_4
0x4001a76	          0x4889ef	                            mov rdi, rbp	      3520	quickfix.c	FUNCTION_58	IF_1	CALL_4
0x4001a79	      0xe822f7ffff	                 call sym.qf_fill_buffer	      3520	quickfix.c	FUNCTION_58	IF_1	CALL_4
0x4001a7e	    0x49838424d800	               add qword [r12 + 0xd8], 1	      3521	quickfix.c	FUNCTION_58	IF_1	CALL_5
0x4001a87	      0xe97ffeffff	                           jmp 0x400190b	      3521	quickfix.c	FUNCTION_58	IF_1	CALL_5
0x4001a8c	      0xe800000000	                          call 0x4001a91	      3536	quickfix.c	FUNCTION_58
qf_mark_adjust	functions,0:WHILE,0:DO,0:CALL,0:SWITCH,0:IF,9:ELSE,2:FOR,2	134
0x4006930	            0x4157	                                push r15	      3050	quickfix.c	FUNCTION_45
0x4006932	            0x4156	                                push r14	      3050	quickfix.c	FUNCTION_45
0x4006934	          0x4885ff	                           test rdi, rdi	      3056	quickfix.c	FUNCTION_45
0x4006937	            0x4155	                                push r13	      3050	quickfix.c	FUNCTION_45
0x4006939	            0x4154	                                push r12	      3050	quickfix.c	FUNCTION_45
0x400693b	              0x55	                                push rbp	      3050	quickfix.c	FUNCTION_45
0x400693c	    0x488b2d000000	            mov rbp, qword [0x04006943] 	      3058	quickfix.c	FUNCTION_45	IF_1
0x4006943	              0x53	                                push rbx	      3050	quickfix.c	FUNCTION_45
0x4006944	    0x8b8520140000	          mov eax, dword [rbp + 0x1420] 	      3058	quickfix.c	FUNCTION_45	IF_1
0x400694a	     0xf84a3010000	                            je 0x4006af3	      3056	quickfix.c	FUNCTION_45
0x4006950	            0xa802	                              test al, 2	      3058	quickfix.c	FUNCTION_45	IF_1
0x4006952	     0xf84c1000000	                            je 0x4006a19	      3058	quickfix.c	FUNCTION_45	IF_1
0x4006958	    0x4c8baf481900	          mov r13, qword [rdi + 0x1948] 	      3062	quickfix.c	FUNCTION_45	IF_2	IF_3
0x400695f	          0x4d85ed	                           test r13, r13	      3062	quickfix.c	FUNCTION_45	IF_2	IF_3
0x4006962	     0xf84b1000000	                            je 0x4006a19	      3062	quickfix.c	FUNCTION_45	IF_2	IF_3
0x4006968	    0x41befdffffff	                    mov r14d, 0xfffffffd	      3062	quickfix.c	FUNCTION_45	IF_2	IF_3
0x400696e	        0x458b7d04	               mov r15d, dword [r13 + 4]	      3067	quickfix.c	FUNCTION_45	FOR_1
0x4006972	          0x4585ff	                         test r15d, r15d	      3067	quickfix.c	FUNCTION_45	FOR_1
0x4006975	     0xf8e94000000	                           jle 0x4006a0f	      3067	quickfix.c	FUNCTION_45	FOR_1
0x400697b	        0x4d8d5d30	                   lea r11, [r13 + 0x30]	      3067	quickfix.c	FUNCTION_45	FOR_1
0x400697f	          0x4531e4	                          xor r12d, r12d	      3067	quickfix.c	FUNCTION_45	FOR_1
0x4006982	            0x31db	                            xor ebx, ebx	      3067	quickfix.c	FUNCTION_45	FOR_1
0x4006984	         0xf1f4000	                         nop dword [rax]	      3067	quickfix.c	FUNCTION_45	FOR_1
0x4006988	          0x458b0b	                    mov r9d, dword [r11]	      3068	quickfix.c	FUNCTION_45	FOR_1	IF_4
0x400698b	        0x4183f900	                              cmp r9d, 0	      3068	quickfix.c	FUNCTION_45	FOR_1	IF_4
0x400698f	            0x7467	                            je 0x40069f8	      3068	quickfix.c	FUNCTION_45	FOR_1	IF_4
0x4006991	        0x498b43e8	             mov rax, qword [r11 - 0x18]	      3069	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x4006995	            0x7e61	                           jle 0x40069f8	      3070	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x4006997	          0x4885c0	                           test rax, rax	      3070	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x400699a	            0x745c	                            je 0x40069f8	      3070	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x400699c	    0x4881f9ffffff	                     cmp rcx, 0x7fffffff	      3070	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x40069a3	     0xf84af000000	                            je 0x4006a58	      3070	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x40069a9	    0x448b95b80000	           mov r10d, dword [rbp + 0xb8] 	      3072	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5
0x40069b0	            0x31ff	                            xor edi, edi	      3072	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5
0x40069b2	            0xeb14	                           jmp 0x40069c8	      3072	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5
0x40069b4	         0xf1f4000	                         nop dword [rax]	      3072	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5
0x40069b8	          0x83c701	                              add edi, 1	      3071	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x40069bb	          0x488b00	                    mov rax, qword [rax]	      3071	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x40069be	          0x4439cf	                            cmp edi, r9d	      3070	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x40069c1	            0x7d35	                           jge 0x40069f8	      3070	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x40069c3	          0x4885c0	                           test rax, rax	      3070	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x40069c6	            0x7430	                            je 0x40069f8	      3070	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x40069c8	        0x443b5018	           cmp r10d, dword [rax + 0x18] 	      3072	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5
0x40069cc	            0x75ea	                           jne 0x40069b8	      3072	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5
0x40069ce	        0x4c8b6010	            mov r12, qword [rax + 0x10] 	      3075	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5	IF_6
0x40069d2	          0x4c39e6	                            cmp rsi, r12	      3075	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5	IF_6
0x40069d5	            0x7f51	                            jg 0x4006a28	      3075	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5	IF_6
0x40069d7	          0x4c39e2	                            cmp rdx, r12	      3075	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5	IF_6
0x40069da	            0x7c4c	                            jl 0x4006a28	      3075	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5	IF_6
0x40069dc	          0x83c701	                              add edi, 1	      3071	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x40069df	          0x4901cc	                            add r12, rcx	      3080	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5	IF_6	ELSE_1
0x40069e2	          0x4439cf	                            cmp edi, r9d	      3070	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x40069e5	        0x4c896010	             mov qword [rax + 0x10], r12	      3080	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5	IF_6	ELSE_1
0x40069e9	    0x41bc01000000	                             mov r12d, 1	      3074	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5
0x40069ef	          0x488b00	                    mov rax, qword [rax]	      3071	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x40069f2	            0x7ccf	                            jl 0x40069c3	      3070	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x40069f4	         0xf1f4000	                         nop dword [rax]	      3070	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x40069f8	          0x83c301	                              add ebx, 1	      3067	quickfix.c	FUNCTION_45	FOR_1
0x40069fb	        0x4983c378	                           add r11, 0x78	      3067	quickfix.c	FUNCTION_45	FOR_1
0x40069ff	          0x4439fb	                           cmp ebx, r15d	      3067	quickfix.c	FUNCTION_45	FOR_1
0x4006a02	            0x7c84	                            jl 0x4006988	      3067	quickfix.c	FUNCTION_45	FOR_1
0x4006a04	          0x4585e4	                         test r12d, r12d	      3086	quickfix.c	FUNCTION_45	IF_9
0x4006a07	            0x7510	                           jne 0x4006a19	      3086	quickfix.c	FUNCTION_45	IF_9
0x4006a09	    0x8b8520140000	          mov eax, dword [rbp + 0x1420] 	      3086	quickfix.c	FUNCTION_45	IF_9
0x4006a0f	          0x4121c6	                           and r14d, eax	      3087	quickfix.c	FUNCTION_45	IF_9
0x4006a12	    0x4489b5201400	         mov dword [rbp + 0x1420], r14d 	      3087	quickfix.c	FUNCTION_45	IF_9
0x4006a19	              0x5b	                                 pop rbx	      3088	quickfix.c	FUNCTION_45
0x4006a1a	              0x5d	                                 pop rbp	      3088	quickfix.c	FUNCTION_45
0x4006a1b	            0x415c	                                 pop r12	      3088	quickfix.c	FUNCTION_45
0x4006a1d	            0x415d	                                 pop r13	      3088	quickfix.c	FUNCTION_45
0x4006a1f	            0x415e	                                 pop r14	      3088	quickfix.c	FUNCTION_45
0x4006a21	            0x415f	                                 pop r15	      3088	quickfix.c	FUNCTION_45
0x4006a23	              0xc3	                                     ret	      3088	quickfix.c	FUNCTION_45
0x4006a24	         0xf1f4000	                         nop dword [rax]	      3088	quickfix.c	FUNCTION_45
0x4006a28	          0x4d85c0	                             test r8, r8	      3082	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5	ELSE_2	IF_8
0x4006a2b	            0x741b	                            je 0x4006a48	      3082	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5	ELSE_2	IF_8
0x4006a2d	          0x4c39e2	                            cmp rdx, r12	      3082	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5	ELSE_2	IF_8
0x4006a30	            0x7d16	                           jge 0x4006a48	      3082	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5	ELSE_2	IF_8
0x4006a32	          0x4d01c4	                             add r12, r8	      3083	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5	ELSE_2	IF_8
0x4006a35	        0x4c896010	             mov qword [rax + 0x10], r12	      3083	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5	ELSE_2	IF_8
0x4006a39	    0x41bc01000000	                             mov r12d, 1	      3074	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5
0x4006a3f	      0xe974ffffff	                           jmp 0x40069b8	      3074	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5
0x4006a44	         0xf1f4000	                         nop dword [rax]	      3074	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5
0x4006a48	    0x41bc01000000	                             mov r12d, 1	      3074	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5
0x4006a4e	      0xe965ffffff	                           jmp 0x40069b8	      3074	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5
0x4006a53	       0xf1f440000	                   nop dword [rax + rax]	      3074	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5
0x4006a58	            0x31ff	                            xor edi, edi	      3070	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x4006a5a	            0xeb14	                           jmp 0x4006a70	      3070	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x4006a5c	         0xf1f4000	                         nop dword [rax]	      3070	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x4006a60	          0x488b00	                    mov rax, qword [rax]	      3071	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x4006a63	          0x83c701	                              add edi, 1	      3071	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x4006a66	          0x4885c0	                           test rax, rax	      3070	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x4006a69	            0x743d	                            je 0x4006aa8	      3070	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x4006a6b	          0x4439cf	                            cmp edi, r9d	      3070	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x4006a6e	            0x7d38	                           jge 0x4006aa8	      3070	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x4006a70	    0x448bbdb80000	           mov r15d, dword [rbp + 0xb8] 	      3072	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5
0x4006a77	        0x44397818	           cmp dword [rax + 0x18], r15d 	      3072	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5
0x4006a7b	            0x75e3	                           jne 0x4006a60	      3072	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5
0x4006a7d	        0x4c8b5010	            mov r10, qword [rax + 0x10] 	      3075	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5	IF_6
0x4006a81	          0x4939d2	                            cmp r10, rdx	      3075	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5	IF_6
0x4006a84	            0x7f42	                            jg 0x4006ac8	      3075	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5	IF_6
0x4006a86	          0x4939f2	                            cmp r10, rsi	      3075	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5	IF_6
0x4006a89	            0x7c3d	                            jl 0x4006ac8	      3075	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5	IF_6
0x4006a8b	        0xc6404101	                mov byte [rax + 0x41], 1	      3078	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5	IF_6	IF_7
0x4006a8f	          0x488b00	                    mov rax, qword [rax]	      3071	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x4006a92	          0x83c701	                              add edi, 1	      3071	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x4006a95	          0x458b0b	                    mov r9d, dword [r11]	      3071	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x4006a98	    0x41bc01000000	                             mov r12d, 1	      3074	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5
0x4006a9e	          0x4885c0	                           test rax, rax	      3070	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x4006aa1	            0x75c8	                           jne 0x4006a6b	      3070	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x4006aa3	       0xf1f440000	                   nop dword [rax + rax]	      3070	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x4006aa8	        0x458b7d04	               mov r15d, dword [r13 + 4]	      3070	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2
0x4006aac	          0x83c301	                              add ebx, 1	      3067	quickfix.c	FUNCTION_45	FOR_1
0x4006aaf	        0x4983c378	                           add r11, 0x78	      3067	quickfix.c	FUNCTION_45	FOR_1
0x4006ab3	          0x4439fb	                           cmp ebx, r15d	      3067	quickfix.c	FUNCTION_45	FOR_1
0x4006ab6	     0xf8cccfeffff	                            jl 0x4006988	      3067	quickfix.c	FUNCTION_45	FOR_1
0x4006abc	      0xe943ffffff	                           jmp 0x4006a04	      3067	quickfix.c	FUNCTION_45	FOR_1
0x4006ac1	     0xf1f80000000	                         nop dword [rax]	      3067	quickfix.c	FUNCTION_45	FOR_1
0x4006ac8	          0x4d85c0	                             test r8, r8	      3082	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5	ELSE_2	IF_8
0x4006acb	            0x741b	                            je 0x4006ae8	      3082	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5	ELSE_2	IF_8
0x4006acd	          0x4939d2	                            cmp r10, rdx	      3082	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5	ELSE_2	IF_8
0x4006ad0	            0x7e16	                           jle 0x4006ae8	      3082	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5	ELSE_2	IF_8
0x4006ad2	          0x4d01c2	                             add r10, r8	      3083	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5	ELSE_2	IF_8
0x4006ad5	    0x41bc01000000	                             mov r12d, 1	      3074	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5
0x4006adb	        0x4c895010	             mov qword [rax + 0x10], r10	      3083	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5	ELSE_2	IF_8
0x4006adf	      0xe97cffffff	                           jmp 0x4006a60	      3083	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5	ELSE_2	IF_8
0x4006ae4	         0xf1f4000	                         nop dword [rax]	      3083	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5	ELSE_2	IF_8
0x4006ae8	    0x41bc01000000	                             mov r12d, 1	      3074	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5
0x4006aee	      0xe96dffffff	                           jmp 0x4006a60	      3074	quickfix.c	FUNCTION_45	FOR_1	IF_4	FOR_2	IF_5
0x4006af3	            0xa801	                              test al, 1	      3058	quickfix.c	FUNCTION_45	IF_1
0x4006af5	    0x41befeffffff	                    mov r14d, 0xfffffffe	      3058	quickfix.c	FUNCTION_45	IF_1
0x4006afb	    0x41bd00000000	                             mov r13d, 0	      3054	quickfix.c	FUNCTION_45
0x4006b01	     0xf8567feffff	                           jne 0x400696e	      3058	quickfix.c	FUNCTION_45	IF_1
0x4006b07	      0xe90dffffff	                           jmp 0x4006a19	      3058	quickfix.c	FUNCTION_45	IF_1
copy_loclist	functions,0:WHILE,0:DO,0:CALL,6:SWITCH,0:IF,10:ELSE,3:FOR,2	416
0x40052f0	            0x4157	                                push r15	      1596	quickfix.c	FUNCTION_20
0x40052f2	            0x4156	                                push r14	      1596	quickfix.c	FUNCTION_20
0x40052f4	          0x4989f7	                            mov r15, rsi	      1596	quickfix.c	FUNCTION_20
0x40052f7	            0x4155	                                push r13	      1596	quickfix.c	FUNCTION_20
0x40052f9	            0x4154	                                push r12	      1596	quickfix.c	FUNCTION_20
0x40052fb	              0x55	                                push rbp	      1596	quickfix.c	FUNCTION_20
0x40052fc	              0x53	                                push rbx	      1596	quickfix.c	FUNCTION_20
0x40052fd	          0x4889fb	                            mov rbx, rdi	      1596	quickfix.c	FUNCTION_20
0x4005300	        0x4883ec58	                           sub rsp, 0x58	      1596	quickfix.c	FUNCTION_20
0x4005304	        0x488b7f08	                mov rdi, qword [rdi + 8]	      1606	quickfix.c	FUNCTION_20	IF_1
0x4005308	      0xe800000000	                          call 0x400530d	      1606	quickfix.c	FUNCTION_20	IF_1
0x400530d	            0x85c0	                           test eax, eax	      1606	quickfix.c	FUNCTION_20	IF_1
0x400530f	     0xf846b030000	                            je 0x4005680	      1606	quickfix.c	FUNCTION_20	IF_1
0x4005315	    0x488b83501900	          mov rax, qword [rbx + 0x1950] 	      1606	quickfix.c	FUNCTION_20	IF_1
0x400531c	          0x4885c0	                           test rax, rax	      1606	quickfix.c	FUNCTION_20	IF_1
0x400531f	      0x4889442428	             mov qword [rsp + 0x28], rax	      1606	quickfix.c	FUNCTION_20	IF_1
0x4005324	     0xf8456030000	                            je 0x4005680	      1606	quickfix.c	FUNCTION_20	IF_1
0x400532a	      0xbfc0040000	                          mov edi, 0x4c0	      1559	quickfix.c	FUNCTION_18	CALL_1
0x400532f	      0xe800000000	                          call 0x4005334	      1559	quickfix.c	FUNCTION_18	CALL_1
0x4005334	          0x4885c0	                           test rax, rax	      1560	quickfix.c	FUNCTION_18	IF_1
0x4005337	          0x4889c2	                            mov rdx, rax	      1559	quickfix.c	FUNCTION_18	CALL_1
0x400533a	     0xf8453060000	                            je 0x4005993	      1560	quickfix.c	FUNCTION_18	IF_1
0x4005340	        0x488d7808	                      lea rdi, [rax + 8]	        90	string3.h	FUNCTION_118	CALL_6
0x4005344	          0x4889c1	                            mov rcx, rax	        90	string3.h	FUNCTION_118	CALL_6
0x4005347	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_118	CALL_6
0x400534e	    0x48c780b80400	              mov qword [rax + 0x4b8], 0	        90	string3.h	FUNCTION_118	CALL_6
0x4005359	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_118	CALL_6
0x400535b	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_118	CALL_6
0x400535f	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_118	CALL_6
0x4005362	    0x81c1c0040000	                          add ecx, 0x4c0	        90	string3.h	FUNCTION_118	CALL_6
0x4005368	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_118	CALL_6
0x400536b	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_118	CALL_6
0x400536e	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      1618	quickfix.c	FUNCTION_20
0x4005373	          0x830201	                      add dword [rdx], 1	      1563	quickfix.c	FUNCTION_18	IF_1
0x4005376	    0x498997481900	          mov qword [r15 + 0x1948], rdx 	      1615	quickfix.c	FUNCTION_20	IF_3	CALL_1
0x400537d	          0x8b4104	                mov eax, dword [rcx + 4]	      1618	quickfix.c	FUNCTION_20
0x4005380	          0x894204	                mov dword [rdx + 4], eax	      1618	quickfix.c	FUNCTION_20
0x4005383	        0x448b4904	                mov r9d, dword [rcx + 4]	      1621	quickfix.c	FUNCTION_20	FOR_1
0x4005387	          0x4585c9	                           test r9d, r9d	      1621	quickfix.c	FUNCTION_20	FOR_1
0x400538a	     0xf8e24060000	                           jle 0x40059b4	      1621	quickfix.c	FUNCTION_20	FOR_1
0x4005390	    0xc74424440000	               mov dword [rsp + 0x44], 0	      1621	quickfix.c	FUNCTION_20	FOR_1
0x4005398	      0x4889542430	             mov qword [rsp + 0x30], rdx	      1621	quickfix.c	FUNCTION_20	FOR_1
0x400539d	          0x4d89fd	                            mov r13, r15	      1621	quickfix.c	FUNCTION_20	FOR_1
0x40053a0	          0x4889d1	                            mov rcx, rdx	      1621	quickfix.c	FUNCTION_20	FOR_1
0x40053a3	        0x8b7c2444	            mov edi, dword [rsp + 0x44] 	      1626	quickfix.c	FUNCTION_20	FOR_1
0x40053a7	          0x4863c7	                         movsxd rax, edi	      1632	quickfix.c	FUNCTION_20	FOR_1
0x40053aa	          0x897908	                mov dword [rcx + 8], edi	      1626	quickfix.c	FUNCTION_20	FOR_1
0x40053ad	          0x4889c3	                            mov rbx, rax	      1632	quickfix.c	FUNCTION_20	FOR_1
0x40053b0	      0x4889442438	             mov qword [rsp + 0x38], rax	      1632	quickfix.c	FUNCTION_20	FOR_1
0x40053b5	        0x48c1e003	                              shl rax, 3	      1632	quickfix.c	FUNCTION_20	FOR_1
0x40053b9	        0x48c1e307	                              shl rbx, 7	      1632	quickfix.c	FUNCTION_20	FOR_1
0x40053bd	          0x4829c3	                            sub rbx, rax	      1632	quickfix.c	FUNCTION_20	FOR_1
0x40053c0	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1632	quickfix.c	FUNCTION_20	FOR_1
0x40053c5	          0x4801d8	                            add rax, rbx	      1632	quickfix.c	FUNCTION_20	FOR_1
0x40053c8	          0x4801cb	                            add rbx, rcx	      1632	quickfix.c	FUNCTION_20	FOR_1
0x40053cb	          0x8b5038	            mov edx, dword [rax + 0x38] 	      1632	quickfix.c	FUNCTION_20	FOR_1
0x40053ce	    0xc74330000000	               mov dword [rbx + 0x30], 0	      1633	quickfix.c	FUNCTION_20	FOR_1
0x40053d5	    0xc74334000000	               mov dword [rbx + 0x34], 0	      1634	quickfix.c	FUNCTION_20	FOR_1
0x40053dc	    0x48c743180000	               mov qword [rbx + 0x18], 0	      1635	quickfix.c	FUNCTION_20	FOR_1
0x40053e4	    0x48c743200000	               mov qword [rbx + 0x20], 0	      1636	quickfix.c	FUNCTION_20	FOR_1
0x40053ec	    0x48c743280000	               mov qword [rbx + 0x28], 0	      1637	quickfix.c	FUNCTION_20	FOR_1
0x40053f4	          0x895338	             mov dword [rbx + 0x38], edx	      1632	quickfix.c	FUNCTION_20	FOR_1
0x40053f7	        0x488b7840	            mov rdi, qword [rax + 0x40] 	      1638	quickfix.c	FUNCTION_20	FOR_1	IF_4
0x40053fb	          0x4885ff	                           test rdi, rdi	      1638	quickfix.c	FUNCTION_20	FOR_1	IF_4
0x40053fe	     0xf8454050000	                            je 0x4005958	      1638	quickfix.c	FUNCTION_20	FOR_1	IF_4
0x4005404	      0xe800000000	                          call 0x4005409	      1639	quickfix.c	FUNCTION_20	FOR_1	CALL_2
0x4005409	        0x48894340	             mov qword [rbx + 0x40], rax	      1639	quickfix.c	FUNCTION_20	FOR_1	CALL_2
0x400540d	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	      1642	quickfix.c	FUNCTION_20	FOR_1	ELSE_2	IF_5
0x4005412	          0x4889d8	                            mov rax, rbx	      1642	quickfix.c	FUNCTION_20	FOR_1	ELSE_2	IF_5
0x4005415	        0x48c1e307	                              shl rbx, 7	      1642	quickfix.c	FUNCTION_20	FOR_1	ELSE_2	IF_5
0x4005419	        0x48c1e003	                              shl rax, 3	      1642	quickfix.c	FUNCTION_20	FOR_1	ELSE_2	IF_5
0x400541d	          0x4829c3	                            sub rbx, rax	      1642	quickfix.c	FUNCTION_20	FOR_1	ELSE_2	IF_5
0x4005420	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1642	quickfix.c	FUNCTION_20	FOR_1	ELSE_2	IF_5
0x4005425	        0x488d2c18	                    lea rbp, [rax + rbx]	      1642	quickfix.c	FUNCTION_20	FOR_1	ELSE_2	IF_5
0x4005429	      0x48837d4800	               cmp qword [rbp + 0x48], 0	      1642	quickfix.c	FUNCTION_20	FOR_1	ELSE_2	IF_5
0x400542e	     0xf8434050000	                            je 0x4005968	      1642	quickfix.c	FUNCTION_20	FOR_1	ELSE_2	IF_5
0x4005434	      0xe800000000	                          call 0x4005439	      1644	quickfix.c	FUNCTION_20	FOR_1	ELSE_2	IF_5	CALL_3
0x4005439	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      1644	quickfix.c	FUNCTION_20	FOR_1	ELSE_2	IF_5	CALL_3
0x400543e	          0x4885c0	                           test rax, rax	      1645	quickfix.c	FUNCTION_20	FOR_1	ELSE_2	IF_5	IF_6
0x4005441	      0x4889441948	       mov qword [rcx + rbx + 0x48], rax	      1644	quickfix.c	FUNCTION_20	FOR_1	ELSE_2	IF_5	CALL_3
0x4005446	            0x740c	                            je 0x4005454	      1645	quickfix.c	FUNCTION_20	FOR_1	ELSE_2	IF_5	IF_6
0x4005448	        0x488b7d48	            mov rdi, qword [rbp + 0x48] 	      1646	quickfix.c	FUNCTION_20	FOR_1	ELSE_2	IF_5	CALL_4
0x400544c	          0x4889c6	                            mov rsi, rax	      1646	quickfix.c	FUNCTION_20	FOR_1	ELSE_2	IF_5	CALL_4
0x400544f	      0xe800000000	                          call 0x4005454	      1646	quickfix.c	FUNCTION_20	FOR_1	ELSE_2	IF_5	CALL_4
0x4005454	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      1651	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7
0x4005459	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      1651	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7
0x400545e	    0x488d14c50000	                        lea rdx, [rax*8]	      1651	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7
0x4005466	        0x48c1e007	                              shl rax, 7	      1651	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7
0x400546a	          0x4829d0	                            sub rax, rdx	      1651	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7
0x400546d	        0x488d1401	                    lea rdx, [rcx + rax]	      1651	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7
0x4005471	          0x8b7230	            mov esi, dword [rdx + 0x30] 	      1651	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7
0x4005474	            0x85f6	                           test esi, esi	      1651	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7
0x4005476	     0xf8474030000	                            je 0x40057f0	      1651	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7
0x400547c	        0x4c8b7a18	            mov r15, qword [rdx + 0x18] 	      1657	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x4005480	          0x4d85ff	                           test r15, r15	      1658	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x4005483	     0xf8467030000	                            je 0x40057f0	      1658	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x4005489	            0x85f6	                           test esi, esi	      1658	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x400548b	     0xf8e5f030000	                           jle 0x40057f0	      1658	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x4005491	    0xc74424100000	               mov dword [rsp + 0x10], 0	      1658	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x4005499	      0x4889442448	             mov qword [rsp + 0x48], rax	      1687	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_9
0x400549e	          0x4d89fe	                            mov r14, r15	      1687	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_9
0x40054a1	        0x48891424	                    mov qword [rsp], rdx	      1687	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_9
0x40054a5	      0xe9b7000000	                           jmp 0x4005561	      1687	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_9
0x40054aa	    0x660f1f440000	                    nop word [rax + rax]	      1687	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_9
0x40054b0	        0x4c897e18	             mov qword [rsi + 0x18], r15	      1526	quickfix.c	FUNCTION_17	IF_10
0x40054b4	        0x4c897e28	             mov qword [rsi + 0x28], r15	      1527	quickfix.c	FUNCTION_17	IF_10
0x40054b8	    0xc74634000000	               mov dword [rsi + 0x34], 0	      1528	quickfix.c	FUNCTION_17	IF_10
0x40054bf	    0x49c747080000	                  mov qword [r15 + 8], 0	      1529	quickfix.c	FUNCTION_17	IF_10
0x40054c7	    0x488d34c50000	                        lea rsi, [rax*8]	      1538	quickfix.c	FUNCTION_17
0x40054cf	        0x48c1e007	                              shl rax, 7	      1538	quickfix.c	FUNCTION_17
0x40054d3	      0x41c6474100	                mov byte [r15 + 0x41], 0	      1537	quickfix.c	FUNCTION_17
0x40054d8	    0x49c707000000	                      mov qword [r15], 0	      1536	quickfix.c	FUNCTION_17
0x40054df	          0x4829f0	                            sub rax, rsi	      1538	quickfix.c	FUNCTION_17
0x40054e2	          0x4801c3	                            add rbx, rax	      1538	quickfix.c	FUNCTION_17
0x40054e5	          0x8b4330	            mov eax, dword [rbx + 0x30] 	      1539	quickfix.c	FUNCTION_17
0x40054e8	          0x8b4b34	            mov ecx, dword [rbx + 0x34] 	      1540	quickfix.c	FUNCTION_17	IF_11
0x40054eb	        0x4c897b20	             mov qword [rbx + 0x20], r15	      1538	quickfix.c	FUNCTION_17
0x40054ef	          0x83c001	                              add eax, 1	      1539	quickfix.c	FUNCTION_17
0x40054f2	            0x85c9	                           test ecx, ecx	      1540	quickfix.c	FUNCTION_17	IF_11
0x40054f4	          0x894330	             mov dword [rbx + 0x30], eax	      1539	quickfix.c	FUNCTION_17
0x40054f7	            0x750e	                           jne 0x4005507	      1540	quickfix.c	FUNCTION_17	IF_11
0x40054f9	      0x41807f4300	                cmp byte [r15 + 0x43], 0	      1540	quickfix.c	FUNCTION_17	IF_11
0x40054fe	            0x7407	                            je 0x4005507	      1540	quickfix.c	FUNCTION_17	IF_11
0x4005500	          0x894334	             mov dword [rbx + 0x34], eax	      1543	quickfix.c	FUNCTION_17	IF_11
0x4005503	        0x4c897b28	             mov qword [rbx + 0x28], r15	      1545	quickfix.c	FUNCTION_17	IF_11
0x4005507	    0x498b95481900	          mov rdx, qword [r13 + 0x1948] 	      1684	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x400550e	        0x488b0c24	                    mov rcx, qword [rsp]	      1687	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_9
0x4005512	        0x48634208	            movsxd rax, dword [rdx + 8] 	      1684	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x4005516	    0x488d34c50000	                        lea rsi, [rax*8]	      1684	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x400551e	        0x48c1e007	                              shl rax, 7	      1684	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x4005522	          0x4829f0	                            sub rax, rsi	      1684	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x4005525	      0x488b440220	      mov rax, qword [rdx + rax + 0x20] 	      1684	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x400552a	        0x418b5618	            mov edx, dword [r14 + 0x18] 	      1685	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x400552e	          0x895018	             mov dword [rax + 0x18], edx	      1685	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x4005531	      0x410fb65642	           movzx edx, byte [r14 + 0x42] 	      1686	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x4005536	          0x885042	               mov byte [rax + 0x42], dl	      1686	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x4005539	        0x4c397128	            cmp qword [rcx + 0x28], r14 	      1687	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_9
0x400553d	     0xf8435030000	                            je 0x4005878	      1687	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_9
0x4005543	      0x8344241001	               add dword [rsp + 0x10], 1	      1659	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x4005548	          0x4d8b36	                    mov r14, qword [r14]	      1659	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x400554b	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      1659	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x400554f	          0x394130	            cmp dword [rcx + 0x30], eax 	      1658	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x4005552	     0xf8e98020000	                           jle 0x40057f0	      1658	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x4005558	          0x4d85f6	                           test r14, r14	      1658	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x400555b	     0xf848f020000	                            je 0x40057f0	      1658	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2
0x4005561	      0x410fb64643	           movzx eax, byte [r14 + 0x43] 	      1674	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_8
0x4005566	    0x498b9d481900	          mov rbx, qword [r13 + 0x1948] 	      1662	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_8
0x400556d	      0xbf48000000	                           mov edi, 0x48	      1478	quickfix.c	FUNCTION_17	IF_1	CALL_1
0x4005572	        0x498b6e30	            mov rbp, qword [r14 + 0x30] 	      1661	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_8	CALL_5
0x4005576	        0x4d8b6628	            mov r12, qword [r14 + 0x28] 	      1661	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_8	CALL_5
0x400557a	        0x88442423	               mov byte [rsp + 0x23], al	      1674	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_8
0x400557e	        0x418b4620	            mov eax, dword [r14 + 0x20] 	      1661	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_8	CALL_5
0x4005582	        0x89442424	             mov dword [rsp + 0x24], eax	      1661	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_8	CALL_5
0x4005586	      0x410fb64640	           movzx eax, byte [r14 + 0x40] 	      1670	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_8
0x400558b	        0x88442422	               mov byte [rsp + 0x22], al	      1670	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_8
0x400558f	        0x418b461c	            mov eax, dword [r14 + 0x1c] 	      1661	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_8	CALL_5
0x4005593	        0x89442414	             mov dword [rsp + 0x14], eax	      1661	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_8	CALL_5
0x4005597	        0x498b4610	            mov rax, qword [r14 + 0x10] 	      1661	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_8	CALL_5
0x400559b	      0x4889442418	             mov qword [rsp + 0x18], rax	      1661	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_8	CALL_5
0x40055a0	        0x498b4638	            mov rax, qword [r14 + 0x38] 	      1661	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_8	CALL_5
0x40055a4	      0x4889442408	                mov qword [rsp + 8], rax	      1661	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_8	CALL_5
0x40055a9	          0x8b4308	                mov eax, dword [rbx + 8]	      1661	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_8	CALL_5
0x40055ac	        0x89442440	             mov dword [rsp + 0x40], eax	      1661	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_8	CALL_5
0x40055b0	      0xe800000000	                          call 0x40055b5	      1478	quickfix.c	FUNCTION_17	IF_1	CALL_1
0x40055b5	          0x4885c0	                           test rax, rax	      1478	quickfix.c	FUNCTION_17	IF_1	CALL_1
0x40055b8	          0x4989c7	                            mov r15, rax	      1478	quickfix.c	FUNCTION_17	IF_1	CALL_1
0x40055bb	     0xf84cf020000	                            je 0x4005890	      1478	quickfix.c	FUNCTION_17	IF_1	CALL_1
0x40055c1	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      1491	quickfix.c	FUNCTION_17	IF_4	CALL_4
0x40055c6	    0xc74018000000	               mov dword [rax + 0x18], 0	      1490	quickfix.c	FUNCTION_17	CALL_3
0x40055cd	      0xe800000000	                          call 0x40055d2	      1491	quickfix.c	FUNCTION_17	IF_4	CALL_4
0x40055d2	          0x4885c0	                           test rax, rax	      1491	quickfix.c	FUNCTION_17	IF_4	CALL_4
0x40055d5	        0x49894738	             mov qword [r15 + 0x38], rax	      1491	quickfix.c	FUNCTION_17	IF_4	CALL_4
0x40055d9	     0xf84a1030000	                            je 0x4005980	      1491	quickfix.c	FUNCTION_17	IF_4	CALL_4
0x40055df	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1496	quickfix.c	FUNCTION_17
0x40055e4	          0x4885ed	                           test rbp, rbp	      1499	quickfix.c	FUNCTION_17	IF_5
0x40055e7	        0x49894710	             mov qword [r15 + 0x10], rax	      1496	quickfix.c	FUNCTION_17
0x40055eb	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      1497	quickfix.c	FUNCTION_17
0x40055ef	        0x4189471c	             mov dword [r15 + 0x1c], eax	      1497	quickfix.c	FUNCTION_17
0x40055f3	       0xfb6442422	           movzx eax, byte [rsp + 0x22] 	      1498	quickfix.c	FUNCTION_17
0x40055f8	        0x41884740	               mov byte [r15 + 0x40], al	      1498	quickfix.c	FUNCTION_17
0x40055fc	            0x740a	                            je 0x4005608	      1499	quickfix.c	FUNCTION_17	IF_5
0x40055fe	        0x807d0000	                       cmp byte [rbp], 0	      1499	quickfix.c	FUNCTION_17	IF_5
0x4005602	     0xf85a0000000	                           jne 0x40056a8	      1499	quickfix.c	FUNCTION_17	IF_5
0x4005608	    0x49c747300000	               mov qword [r15 + 0x30], 0	      1500	quickfix.c	FUNCTION_17	IF_5
0x4005610	          0x4d85e4	                           test r12, r12	      1507	quickfix.c	FUNCTION_17	IF_7
0x4005613	            0x740b	                            je 0x4005620	      1507	quickfix.c	FUNCTION_17	IF_7
0x4005615	      0x41803c2400	                       cmp byte [r12], 0	      1507	quickfix.c	FUNCTION_17	IF_7
0x400561a	     0xf8590010000	                           jne 0x40057b0	      1507	quickfix.c	FUNCTION_17	IF_7
0x4005620	    0x49c747280000	               mov qword [r15 + 0x28], 0	      1508	quickfix.c	FUNCTION_17	IF_7
0x4005628	        0x8b442424	            mov eax, dword [rsp + 0x24] 	      1516	quickfix.c	FUNCTION_17
0x400562c	            0x31ff	                            xor edi, edi	      1517	quickfix.c	FUNCTION_17	IF_9	CALL_13
0x400562e	        0x41894720	             mov dword [r15 + 0x20], eax	      1516	quickfix.c	FUNCTION_17
0x4005632	      0xe800000000	                          call 0x4005637	      1517	quickfix.c	FUNCTION_17	IF_9	CALL_13
0x4005637	       0xfb6442423	           movzx eax, byte [rsp + 0x23] 	      1520	quickfix.c	FUNCTION_17
0x400563c	      0x41c6474200	                mov byte [r15 + 0x42], 0	      1519	quickfix.c	FUNCTION_17
0x4005641	        0x41884743	               mov byte [r15 + 0x43], al	      1520	quickfix.c	FUNCTION_17
0x4005645	      0x4863442440	         movsxd rax, dword [rsp + 0x40] 	      1523	quickfix.c	FUNCTION_17	IF_10
0x400564a	    0x488d3cc50000	                        lea rdi, [rax*8]	      1523	quickfix.c	FUNCTION_17	IF_10
0x4005652	          0x4889c6	                            mov rsi, rax	      1523	quickfix.c	FUNCTION_17	IF_10
0x4005655	        0x48c1e607	                              shl rsi, 7	      1523	quickfix.c	FUNCTION_17	IF_10
0x4005659	          0x4829fe	                            sub rsi, rdi	      1523	quickfix.c	FUNCTION_17	IF_10
0x400565c	          0x4801de	                            add rsi, rbx	      1523	quickfix.c	FUNCTION_17	IF_10
0x400565f	          0x8b7e30	            mov edi, dword [rsi + 0x30] 	      1523	quickfix.c	FUNCTION_17	IF_10
0x4005662	            0x85ff	                           test edi, edi	      1523	quickfix.c	FUNCTION_17	IF_10
0x4005664	     0xf8446feffff	                            je 0x40054b0	      1523	quickfix.c	FUNCTION_17	IF_10
0x400566a	        0x488b7e20	            mov rdi, qword [rsi + 0x20] 	      1533	quickfix.c	FUNCTION_17	ELSE_4
0x400566e	        0x49897f08	                mov qword [r15 + 8], rdi	      1533	quickfix.c	FUNCTION_17	ELSE_4
0x4005672	        0x488b7620	            mov rsi, qword [rsi + 0x20] 	      1534	quickfix.c	FUNCTION_17	ELSE_4
0x4005676	          0x4c893e	                    mov qword [rsi], r15	      1534	quickfix.c	FUNCTION_17	ELSE_4
0x4005679	      0xe949feffff	                           jmp 0x40054c7	      1534	quickfix.c	FUNCTION_17	ELSE_4
0x400567e	            0x6690	                                     nop	      1534	quickfix.c	FUNCTION_17	ELSE_4
0x4005680	    0x488b83481900	          mov rax, qword [rbx + 0x1948] 	      1609	quickfix.c	FUNCTION_20	ELSE_1
0x4005687	          0x4885c0	                           test rax, rax	      1611	quickfix.c	FUNCTION_20	IF_2
0x400568a	      0x4889442428	             mov qword [rsp + 0x28], rax	      1609	quickfix.c	FUNCTION_20	ELSE_1
0x400568f	     0xf8595fcffff	                           jne 0x400532a	      1611	quickfix.c	FUNCTION_20	IF_2
0x4005695	        0x4883c458	                           add rsp, 0x58	      1708	quickfix.c	FUNCTION_20
0x4005699	              0x5b	                                 pop rbx	      1708	quickfix.c	FUNCTION_20
0x400569a	              0x5d	                                 pop rbp	      1708	quickfix.c	FUNCTION_20
0x400569b	            0x415c	                                 pop r12	      1708	quickfix.c	FUNCTION_20
0x400569d	            0x415d	                                 pop r13	      1708	quickfix.c	FUNCTION_20
0x400569f	            0x415e	                                 pop r14	      1708	quickfix.c	FUNCTION_20
0x40056a1	            0x415f	                                 pop r15	      1708	quickfix.c	FUNCTION_20
0x40056a3	              0xc3	                                     ret	      1708	quickfix.c	FUNCTION_20
0x40056a4	         0xf1f4000	                         nop dword [rax]	      1708	quickfix.c	FUNCTION_20
0x40056a8	          0x4889ef	                            mov rdi, rbp	      1501	quickfix.c	FUNCTION_17	ELSE_2	IF_6	CALL_6
0x40056ab	      0xe800000000	                          call 0x40056b0	      1501	quickfix.c	FUNCTION_17	ELSE_2	IF_6	CALL_6
0x40056b0	          0x4885c0	                           test rax, rax	      1501	quickfix.c	FUNCTION_17	ELSE_2	IF_6	CALL_6
0x40056b3	        0x49894730	             mov qword [r15 + 0x30], rax	      1501	quickfix.c	FUNCTION_17	ELSE_2	IF_6	CALL_6
0x40056b7	     0xf8553ffffff	                           jne 0x4005610	      1501	quickfix.c	FUNCTION_17	ELSE_2	IF_6	CALL_6
0x40056bd	          0x4d89fe	                            mov r14, r15	      1501	quickfix.c	FUNCTION_17	ELSE_2	IF_6	CALL_6
0x40056c0	          0x4d89ef	                            mov r15, r13	      1501	quickfix.c	FUNCTION_17	ELSE_2	IF_6	CALL_6
0x40056c3	        0x498b7e38	            mov rdi, qword [r14 + 0x38] 	      1503	quickfix.c	FUNCTION_17	ELSE_2	IF_6	CALL_7
0x40056c7	      0xe800000000	                          call 0x40056cc	      1503	quickfix.c	FUNCTION_17	ELSE_2	IF_6	CALL_7
0x40056cc	          0x4c89f7	                            mov rdi, r14	      1504	quickfix.c	FUNCTION_17	ELSE_2	IF_6	CALL_8
0x40056cf	      0xe800000000	                          call 0x40056d4	      1504	quickfix.c	FUNCTION_17	ELSE_2	IF_6	CALL_8
0x40056d4	    0x4d8ba7481900	          mov r12, qword [r15 + 0x1948] 	      1421	quickfix.c	FUNCTION_15
0x40056db	          0x4d85e4	                           test r12, r12	      1422	quickfix.c	FUNCTION_15	IF_1
0x40056de	     0xf85bf010000	                           jne 0x40058a3	      1422	quickfix.c	FUNCTION_15	IF_1
0x40056e4	         0xf1f4000	                         nop dword [rax]	      1422	quickfix.c	FUNCTION_15	IF_1
0x40056e8	    0x498baf501900	          mov rbp, qword [r15 + 0x1950] 	      1421	quickfix.c	FUNCTION_15
0x40056ef	          0x4885ed	                           test rbp, rbp	      1422	quickfix.c	FUNCTION_15	IF_1
0x40056f2	            0x74a1	                            je 0x4005695	      1422	quickfix.c	FUNCTION_15	IF_1
0x40056f4	          0x8b4500	                    mov eax, dword [rbp]	      1426	quickfix.c	FUNCTION_15
0x40056f7	    0x49c787501900	            mov qword [r15 + 0x1950], 0 	      1424	quickfix.c	FUNCTION_15
0x4005702	          0x83e801	                              sub eax, 1	      1426	quickfix.c	FUNCTION_15
0x4005705	            0x85c0	                           test eax, eax	      1427	quickfix.c	FUNCTION_15	IF_2
0x4005707	          0x894500	                    mov dword [rbp], eax	      1426	quickfix.c	FUNCTION_15
0x400570a	            0x7f89	                            jg 0x4005695	      1427	quickfix.c	FUNCTION_15	IF_2
0x400570c	          0x8b4504	                mov eax, dword [rbp + 4]	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400570f	          0x4531e4	                          xor r12d, r12d	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x4005712	            0x85c0	                           test eax, eax	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x4005714	     0xf8e7e000000	                           jle 0x4005798	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400571a	    0x660f1f440000	                    nop word [rax + rax]	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x4005720	          0x4889ef	                            mov rdi, rbp	      3031	quickfix.c	FUNCTION_44	CALL_1
0x4005723	          0x4963dc	                        movsxd rbx, r12d	      3033	quickfix.c	FUNCTION_44	CALL_2
0x4005726	          0x4489e6	                           mov esi, r12d	      3031	quickfix.c	FUNCTION_44	CALL_1
0x4005729	      0xe862b5ffff	                  call sym.qf_free_items	      3031	quickfix.c	FUNCTION_44	CALL_1
0x400572e	          0x4989dd	                            mov r13, rbx	      3033	quickfix.c	FUNCTION_44	CALL_2
0x4005731	    0x488d04dd0000	                        lea rax, [rbx*8]	      3033	quickfix.c	FUNCTION_44	CALL_2
0x4005739	        0x49c1e507	                              shl r13, 7	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400573d	          0x4929c5	                            sub r13, rax	      3033	quickfix.c	FUNCTION_44	CALL_2
0x4005740	          0x4901ed	                            add r13, rbp	      3033	quickfix.c	FUNCTION_44	CALL_2
0x4005743	        0x498b7d40	            mov rdi, qword [r13 + 0x40] 	      3033	quickfix.c	FUNCTION_44	CALL_2
0x4005747	          0x4885ff	                           test rdi, rdi	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400574a	            0x740d	                            je 0x4005759	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400574c	      0xe800000000	                          call 0x4005751	      3033	quickfix.c	FUNCTION_44	CALL_2
0x4005751	    0x49c745400000	               mov qword [r13 + 0x40], 0	      3033	quickfix.c	FUNCTION_44	CALL_2
0x4005759	    0x488d04dd0000	                        lea rax, [rbx*8]	      3034	quickfix.c	FUNCTION_44	CALL_3
0x4005761	        0x48c1e307	                              shl rbx, 7	      3034	quickfix.c	FUNCTION_44	CALL_3
0x4005765	        0x4183c401	                             add r12d, 1	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x4005769	          0x4829c3	                            sub rbx, rax	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400576c	          0x4801eb	                            add rbx, rbp	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400576f	        0x488b7b48	            mov rdi, qword [rbx + 0x48] 	      3034	quickfix.c	FUNCTION_44	CALL_3
0x4005773	      0xe800000000	                          call 0x4005778	      3034	quickfix.c	FUNCTION_44	CALL_3
0x4005778	    0x48c743480000	               mov qword [rbx + 0x48], 0	      3035	quickfix.c	FUNCTION_44
0x4005780	    0xc74310000000	               mov dword [rbx + 0x10], 0	      3036	quickfix.c	FUNCTION_44
0x4005787	    0x48c783800000	               mov qword [rbx + 0x80], 0	      3037	quickfix.c	FUNCTION_44
0x4005792	        0x443b6504	               cmp r12d, dword [rbp + 4]	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x4005796	            0x7c88	                            jl 0x4005720	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x4005798	        0x4883c458	                           add rsp, 0x58	      1708	quickfix.c	FUNCTION_20
0x400579c	          0x4889ef	                            mov rdi, rbp	      1432	quickfix.c	FUNCTION_15	IF_2	CALL_2
0x400579f	              0x5b	                                 pop rbx	      1708	quickfix.c	FUNCTION_20
0x40057a0	              0x5d	                                 pop rbp	      1708	quickfix.c	FUNCTION_20
0x40057a1	            0x415c	                                 pop r12	      1708	quickfix.c	FUNCTION_20
0x40057a3	            0x415d	                                 pop r13	      1708	quickfix.c	FUNCTION_20
0x40057a5	            0x415e	                                 pop r14	      1708	quickfix.c	FUNCTION_20
0x40057a7	            0x415f	                                 pop r15	      1708	quickfix.c	FUNCTION_20
0x40057a9	      0xe900000000	                           jmp 0x40057ae	      1432	quickfix.c	FUNCTION_15	IF_2	CALL_2
0x40057ae	            0x6690	                                     nop	      1432	quickfix.c	FUNCTION_15	IF_2	CALL_2
0x40057b0	          0x4c89e7	                            mov rdi, r12	      1509	quickfix.c	FUNCTION_17	ELSE_3	IF_8	CALL_9
0x40057b3	      0xe800000000	                          call 0x40057b8	      1509	quickfix.c	FUNCTION_17	ELSE_3	IF_8	CALL_9
0x40057b8	          0x4885c0	                           test rax, rax	      1509	quickfix.c	FUNCTION_17	ELSE_3	IF_8	CALL_9
0x40057bb	        0x49894728	             mov qword [r15 + 0x28], rax	      1509	quickfix.c	FUNCTION_17	ELSE_3	IF_8	CALL_9
0x40057bf	     0xf8563feffff	                           jne 0x4005628	      1509	quickfix.c	FUNCTION_17	ELSE_3	IF_8	CALL_9
0x40057c5	          0x4d89fe	                            mov r14, r15	      1509	quickfix.c	FUNCTION_17	ELSE_3	IF_8	CALL_9
0x40057c8	          0x4d89ef	                            mov r15, r13	      1509	quickfix.c	FUNCTION_17	ELSE_3	IF_8	CALL_9
0x40057cb	        0x498b7e38	            mov rdi, qword [r14 + 0x38] 	      1511	quickfix.c	FUNCTION_17	ELSE_3	IF_8	CALL_10
0x40057cf	      0xe800000000	                          call 0x40057d4	      1511	quickfix.c	FUNCTION_17	ELSE_3	IF_8	CALL_10
0x40057d4	        0x498b7e30	            mov rdi, qword [r14 + 0x30] 	      1512	quickfix.c	FUNCTION_17	ELSE_3	IF_8	CALL_11
0x40057d8	      0xe800000000	                          call 0x40057dd	      1512	quickfix.c	FUNCTION_17	ELSE_3	IF_8	CALL_11
0x40057dd	          0x4c89f7	                            mov rdi, r14	      1513	quickfix.c	FUNCTION_17	ELSE_3	IF_8	CALL_12
0x40057e0	      0xe800000000	                          call 0x40057e5	      1513	quickfix.c	FUNCTION_17	ELSE_3	IF_8	CALL_12
0x40057e5	      0xe9a9000000	                           jmp 0x4005893	      1513	quickfix.c	FUNCTION_17	ELSE_3	IF_8	CALL_12
0x40057ea	    0x660f1f440000	                    nop word [rax + rax]	      1513	quickfix.c	FUNCTION_17	ELSE_3	IF_8	CALL_12
0x40057f0	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      1692	quickfix.c	FUNCTION_20	FOR_1
0x40057f5	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      1692	quickfix.c	FUNCTION_20	FOR_1
0x40057fa	    0x488d14c50000	                        lea rdx, [rax*8]	      1692	quickfix.c	FUNCTION_20	FOR_1
0x4005802	        0x48c1e007	                              shl rax, 7	      1692	quickfix.c	FUNCTION_20	FOR_1
0x4005806	          0x4829d0	                            sub rax, rdx	      1692	quickfix.c	FUNCTION_20	FOR_1
0x4005809	        0x8b540134	      mov edx, dword [rcx + rax + 0x34] 	      1692	quickfix.c	FUNCTION_20	FOR_1
0x400580d	      0x4803442430	             add rax, qword [rsp + 0x30]	      1692	quickfix.c	FUNCTION_20	FOR_1
0x4005812	    0x8b0d00000000	            mov ecx, dword [0x04005818] 	      1695	quickfix.c	FUNCTION_20	FOR_1
0x4005818	        0x448b4038	            mov r8d, dword [rax + 0x38] 	      1700	quickfix.c	FUNCTION_20	FOR_1	IF_10
0x400581c	          0x895034	             mov dword [rax + 0x34], edx	      1692	quickfix.c	FUNCTION_20	FOR_1
0x400581f	          0x8d5101	                      lea edx, [rcx + 1]	      1695	quickfix.c	FUNCTION_20	FOR_1
0x4005822	    0x48c780800000	               mov qword [rax + 0x80], 0	      1696	quickfix.c	FUNCTION_20	FOR_1
0x400582d	    0x891500000000	            mov dword [0x04005833], edx 	      1695	quickfix.c	FUNCTION_20	FOR_1
0x4005833	          0x895010	             mov dword [rax + 0x10], edx	      1695	quickfix.c	FUNCTION_20	FOR_1
0x4005836	          0x4585c0	                           test r8d, r8d	      1700	quickfix.c	FUNCTION_20	FOR_1	IF_10
0x4005839	            0x740f	                            je 0x400584a	      1700	quickfix.c	FUNCTION_20	FOR_1	IF_10
0x400583b	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      1702	quickfix.c	FUNCTION_20	FOR_1	IF_10
0x400583f	    0xc74034010000	               mov dword [rax + 0x34], 1	      1703	quickfix.c	FUNCTION_20	FOR_1	IF_10
0x4005846	        0x48895028	             mov qword [rax + 0x28], rdx	      1702	quickfix.c	FUNCTION_20	FOR_1	IF_10
0x400584a	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      1621	quickfix.c	FUNCTION_20	FOR_1
0x400584f	      0x8344244401	               add dword [rsp + 0x44], 1	      1621	quickfix.c	FUNCTION_20	FOR_1
0x4005854	        0x8b442444	            mov eax, dword [rsp + 0x44] 	      1621	quickfix.c	FUNCTION_20	FOR_1
0x4005858	          0x394104	                cmp dword [rcx + 4], eax	      1621	quickfix.c	FUNCTION_20	FOR_1
0x400585b	     0xf8e4c010000	                           jle 0x40059ad	      1621	quickfix.c	FUNCTION_20	FOR_1
0x4005861	    0x498b85481900	          mov rax, qword [r13 + 0x1948] 	      1621	quickfix.c	FUNCTION_20	FOR_1
0x4005868	      0x4889442430	             mov qword [rsp + 0x30], rax	      1621	quickfix.c	FUNCTION_20	FOR_1
0x400586d	          0x4889c1	                            mov rcx, rax	      1621	quickfix.c	FUNCTION_20	FOR_1
0x4005870	      0xe92efbffff	                           jmp 0x40053a3	      1621	quickfix.c	FUNCTION_20	FOR_1
0x4005875	           0xf1f00	                         nop dword [rax]	      1621	quickfix.c	FUNCTION_20	FOR_1
0x4005878	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      1688	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_9
0x400587d	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      1688	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_9
0x4005882	      0x4889443928	       mov qword [rcx + rdi + 0x28], rax	      1688	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_9
0x4005887	        0x488b0c24	                    mov rcx, qword [rsp]	      1688	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_9
0x400588b	      0xe9b3fcffff	                           jmp 0x4005543	      1688	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_9
0x4005890	          0x4d89ef	                            mov r15, r13	      1688	quickfix.c	FUNCTION_20	FOR_1	ELSE_3	IF_7	FOR_2	IF_9
0x4005893	    0x4d8ba7481900	          mov r12, qword [r15 + 0x1948] 	      1421	quickfix.c	FUNCTION_15
0x400589a	          0x4d85e4	                           test r12, r12	      1422	quickfix.c	FUNCTION_15	IF_1
0x400589d	     0xf8445feffff	                            je 0x40056e8	      1422	quickfix.c	FUNCTION_15	IF_1
0x40058a3	        0x418b0424	                    mov eax, dword [r12]	      1426	quickfix.c	FUNCTION_15
0x40058a7	    0x49c787481900	            mov qword [r15 + 0x1948], 0 	      1424	quickfix.c	FUNCTION_15
0x40058b2	          0x83e801	                              sub eax, 1	      1426	quickfix.c	FUNCTION_15
0x40058b5	            0x85c0	                           test eax, eax	      1427	quickfix.c	FUNCTION_15	IF_2
0x40058b7	        0x41890424	                    mov dword [r12], eax	      1426	quickfix.c	FUNCTION_15
0x40058bb	     0xf8f27feffff	                            jg 0x40056e8	      1427	quickfix.c	FUNCTION_15	IF_2
0x40058c1	      0x418b542404	                mov edx, dword [r12 + 4]	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x40058c6	            0x31ed	                            xor ebp, ebp	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x40058c8	            0x85d2	                           test edx, edx	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x40058ca	            0x7e7b	                           jle 0x4005947	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x40058cc	         0xf1f4000	                         nop dword [rax]	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x40058d0	          0x4c89e7	                            mov rdi, r12	      3031	quickfix.c	FUNCTION_44	CALL_1
0x40058d3	          0x4863dd	                         movsxd rbx, ebp	      3033	quickfix.c	FUNCTION_44	CALL_2
0x40058d6	            0x89ee	                            mov esi, ebp	      3031	quickfix.c	FUNCTION_44	CALL_1
0x40058d8	      0xe8b3b3ffff	                  call sym.qf_free_items	      3031	quickfix.c	FUNCTION_44	CALL_1
0x40058dd	          0x4989dd	                            mov r13, rbx	      3033	quickfix.c	FUNCTION_44	CALL_2
0x40058e0	    0x488d04dd0000	                        lea rax, [rbx*8]	      3033	quickfix.c	FUNCTION_44	CALL_2
0x40058e8	        0x49c1e507	                              shl r13, 7	      3033	quickfix.c	FUNCTION_44	CALL_2
0x40058ec	          0x4929c5	                            sub r13, rax	      3033	quickfix.c	FUNCTION_44	CALL_2
0x40058ef	          0x4d01e5	                            add r13, r12	      3033	quickfix.c	FUNCTION_44	CALL_2
0x40058f2	        0x498b7d40	            mov rdi, qword [r13 + 0x40] 	      3033	quickfix.c	FUNCTION_44	CALL_2
0x40058f6	          0x4885ff	                           test rdi, rdi	      3033	quickfix.c	FUNCTION_44	CALL_2
0x40058f9	            0x740d	                            je 0x4005908	      3033	quickfix.c	FUNCTION_44	CALL_2
0x40058fb	      0xe800000000	                          call 0x4005900	      3033	quickfix.c	FUNCTION_44	CALL_2
0x4005900	    0x49c745400000	               mov qword [r13 + 0x40], 0	      3033	quickfix.c	FUNCTION_44	CALL_2
0x4005908	    0x488d04dd0000	                        lea rax, [rbx*8]	      3034	quickfix.c	FUNCTION_44	CALL_3
0x4005910	        0x48c1e307	                              shl rbx, 7	      3034	quickfix.c	FUNCTION_44	CALL_3
0x4005914	          0x83c501	                              add ebp, 1	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x4005917	          0x4829c3	                            sub rbx, rax	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400591a	          0x4c01e3	                            add rbx, r12	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400591d	        0x488b7b48	            mov rdi, qword [rbx + 0x48] 	      3034	quickfix.c	FUNCTION_44	CALL_3
0x4005921	      0xe800000000	                          call 0x4005926	      3034	quickfix.c	FUNCTION_44	CALL_3
0x4005926	    0x48c743480000	               mov qword [rbx + 0x48], 0	      3035	quickfix.c	FUNCTION_44
0x400592e	    0xc74310000000	               mov dword [rbx + 0x10], 0	      3036	quickfix.c	FUNCTION_44
0x4005935	    0x48c783800000	               mov qword [rbx + 0x80], 0	      3037	quickfix.c	FUNCTION_44
0x4005940	      0x413b6c2404	                cmp ebp, dword [r12 + 4]	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x4005945	            0x7c89	                            jl 0x40058d0	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x4005947	          0x4c89e7	                            mov rdi, r12	      1432	quickfix.c	FUNCTION_15	IF_2	CALL_2
0x400594a	      0xe800000000	                          call 0x400594f	      1432	quickfix.c	FUNCTION_15	IF_2	CALL_2
0x400594f	      0xe994fdffff	                           jmp 0x40056e8	      1432	quickfix.c	FUNCTION_15	IF_2	CALL_2
0x4005954	         0xf1f4000	                         nop dword [rax]	      1432	quickfix.c	FUNCTION_15	IF_2	CALL_2
0x4005958	    0x48c743400000	               mov qword [rbx + 0x40], 0	      1641	quickfix.c	FUNCTION_20	FOR_1	ELSE_2
0x4005960	      0xe9a8faffff	                           jmp 0x400540d	      1641	quickfix.c	FUNCTION_20	FOR_1	ELSE_2
0x4005965	           0xf1f00	                         nop dword [rax]	      1641	quickfix.c	FUNCTION_20	FOR_1	ELSE_2
0x4005968	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      1649	quickfix.c	FUNCTION_20	FOR_1	ELSE_3
0x400596d	    0x48c744184800	         mov qword [rax + rbx + 0x48], 0	      1649	quickfix.c	FUNCTION_20	FOR_1	ELSE_3
0x4005976	      0xe9d9faffff	                           jmp 0x4005454	      1649	quickfix.c	FUNCTION_20	FOR_1	ELSE_3
0x400597b	       0xf1f440000	                   nop dword [rax + rax]	      1649	quickfix.c	FUNCTION_20	FOR_1	ELSE_3
0x4005980	          0x4d89fe	                            mov r14, r15	      1649	quickfix.c	FUNCTION_20	FOR_1	ELSE_3
0x4005983	          0x4d89ef	                            mov r15, r13	      1649	quickfix.c	FUNCTION_20	FOR_1	ELSE_3
0x4005986	          0x4c89f7	                            mov rdi, r14	      1493	quickfix.c	FUNCTION_17	IF_4	CALL_5
0x4005989	      0xe800000000	                          call 0x400598e	      1493	quickfix.c	FUNCTION_17	IF_4	CALL_5
0x400598e	      0xe900ffffff	                           jmp 0x4005893	      1493	quickfix.c	FUNCTION_17	IF_4	CALL_5
0x4005993	    0x49c787481900	            mov qword [r15 + 0x1948], 0 	      1615	quickfix.c	FUNCTION_20	IF_3	CALL_1
0x400599e	        0x4883c458	                           add rsp, 0x58	      1708	quickfix.c	FUNCTION_20
0x40059a2	              0x5b	                                 pop rbx	      1708	quickfix.c	FUNCTION_20
0x40059a3	              0x5d	                                 pop rbp	      1708	quickfix.c	FUNCTION_20
0x40059a4	            0x415c	                                 pop r12	      1708	quickfix.c	FUNCTION_20
0x40059a6	            0x415d	                                 pop r13	      1708	quickfix.c	FUNCTION_20
0x40059a8	            0x415e	                                 pop r14	      1708	quickfix.c	FUNCTION_20
0x40059aa	            0x415f	                                 pop r15	      1708	quickfix.c	FUNCTION_20
0x40059ac	              0xc3	                                     ret	      1708	quickfix.c	FUNCTION_20
0x40059ad	    0x498b95481900	          mov rdx, qword [r13 + 0x1948] 	      1708	quickfix.c	FUNCTION_20
0x40059b4	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      1707	quickfix.c	FUNCTION_20
0x40059b9	          0x8b4008	                mov eax, dword [rax + 8]	      1707	quickfix.c	FUNCTION_20
0x40059bc	          0x894208	                mov dword [rdx + 8], eax	      1707	quickfix.c	FUNCTION_20
0x40059bf	        0x4883c458	                           add rsp, 0x58	      1708	quickfix.c	FUNCTION_20
0x40059c3	              0x5b	                                 pop rbx	      1708	quickfix.c	FUNCTION_20
0x40059c4	              0x5d	                                 pop rbp	      1708	quickfix.c	FUNCTION_20
0x40059c5	            0x415c	                                 pop r12	      1708	quickfix.c	FUNCTION_20
0x40059c7	            0x415d	                                 pop r13	      1708	quickfix.c	FUNCTION_20
0x40059c9	            0x415e	                                 pop r14	      1708	quickfix.c	FUNCTION_20
0x40059cb	            0x415f	                                 pop r15	      1708	quickfix.c	FUNCTION_20
0x40059cd	              0xc3	                                     ret	      1708	quickfix.c	FUNCTION_20
qf_jump_print_msg	functions,0:WHILE,0:DO,0:CALL,9:SWITCH,0:IF,3:ELSE,1:FOR,0	171
0x4001aa0	            0x4157	                                push r15	      2517	quickfix.c	FUNCTION_36
0x4001aa2	            0x4156	                                push r14	      2517	quickfix.c	FUNCTION_36
0x4001aa4	          0x4989fe	                            mov r14, rdi	      2517	quickfix.c	FUNCTION_36
0x4001aa7	            0x4155	                                push r13	      2517	quickfix.c	FUNCTION_36
0x4001aa9	            0x4154	                                push r12	      2517	quickfix.c	FUNCTION_36
0x4001aab	          0x4989d5	                            mov r13, rdx	      2517	quickfix.c	FUNCTION_36
0x4001aae	              0x55	                                push rbp	      2517	quickfix.c	FUNCTION_36
0x4001aaf	              0x53	                                push rbx	      2517	quickfix.c	FUNCTION_36
0x4001ab0	          0x4189f4	                           mov r12d, esi	      2517	quickfix.c	FUNCTION_36
0x4001ab3	          0x4889cb	                            mov rbx, rcx	      2517	quickfix.c	FUNCTION_36
0x4001ab6	        0x4883ec18	                           sub rsp, 0x18	      2517	quickfix.c	FUNCTION_36
0x4001aba	    0x8b3d00000000	            mov edi, dword [0x04001ac0] 	      2523	quickfix.c	FUNCTION_36	IF_1
0x4001ac0	      0x4c89442408	                 mov qword [rsp + 8], r8	      2517	quickfix.c	FUNCTION_36
0x4001ac5	            0x85ff	                           test edi, edi	      2523	quickfix.c	FUNCTION_36	IF_1
0x4001ac7	     0xf8415020000	                            je 0x4001ce2	      2523	quickfix.c	FUNCTION_36	IF_1
0x4001acd	      0x410fb65542	           movzx edx, byte [r13 + 0x42] 	      2528	quickfix.c	FUNCTION_36	CALL_4
0x4001ad2	        0x458b4d20	            mov r9d, dword [r13 + 0x20] 	      2528	quickfix.c	FUNCTION_36	CALL_4
0x4001ad6	            0x89d0	                            mov eax, edx	      3112	quickfix.c	FUNCTION_46	IF_1
0x4001ad8	          0x83e0df	                     and eax, 0xffffffdf	      3112	quickfix.c	FUNCTION_46	IF_1
0x4001adb	            0x3c57	                            cmp al, 0x57	      3112	quickfix.c	FUNCTION_46	IF_1
0x4001add	            0x7411	                            je 0x4001af0	      3112	quickfix.c	FUNCTION_46	IF_1
0x4001adf	            0x3c49	                            cmp al, 0x49	      3114	quickfix.c	FUNCTION_46	ELSE_1	IF_2
0x4001ae1	     0xf8591010000	                           jne 0x4001c78	      3114	quickfix.c	FUNCTION_46	ELSE_1	IF_2
0x4001ae7	    0x41b800000000	                              mov r8d, 0	      3115	quickfix.c	FUNCTION_46	ELSE_1	IF_2
0x4001aed	            0xeb07	                           jmp 0x4001af6	      3115	quickfix.c	FUNCTION_46	ELSE_1	IF_2
0x4001aef	              0x90	                                     nop	      3115	quickfix.c	FUNCTION_46	ELSE_1	IF_2
0x4001af0	    0x41b800000000	                              mov r8d, 0	      3113	quickfix.c	FUNCTION_46	IF_1
0x4001af6	          0x4585c9	                           test r9d, r9d	      3128	quickfix.c	FUNCTION_46	IF_5
0x4001af9	          0x4d89c7	                             mov r15, r8	      3128	quickfix.c	FUNCTION_46	IF_5
0x4001afc	            0x7e21	                           jle 0x4001b1f	      3128	quickfix.c	FUNCTION_46	IF_5
0x4001afe	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_127	CALL_1
0x4001b03	      0xba14000000	                           mov edx, 0x14	        33	stdio2.h	FUNCTION_127	CALL_1
0x4001b08	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_127	CALL_1
0x4001b0d	      0xbf00000000	                              mov edi, 0	        33	stdio2.h	FUNCTION_127	CALL_1
0x4001b12	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_127	CALL_1
0x4001b14	    0x41bf00000000	                             mov r15d, 0	      3132	quickfix.c	FUNCTION_46
0x4001b1a	      0xe800000000	                          call 0x4001b1f	        33	stdio2.h	FUNCTION_127	CALL_1
0x4001b1f	      0x41807d4100	                cmp byte [r13 + 0x41], 0	      2525	quickfix.c	FUNCTION_36	CALL_2
0x4001b24	      0xbd00000000	                              mov ebp, 0	      2525	quickfix.c	FUNCTION_36	CALL_2
0x4001b29	     0xf85bd010000	                           jne 0x4001cec	      2525	quickfix.c	FUNCTION_36	CALL_2
0x4001b2f	        0x49634608	            movsxd rax, dword [r14 + 8] 	      2525	quickfix.c	FUNCTION_36	CALL_2
0x4001b33	            0x31ff	                            xor edi, edi	      2525	quickfix.c	FUNCTION_36	CALL_2
0x4001b35	      0xbe00000000	                              mov esi, 0	      2525	quickfix.c	FUNCTION_36	CALL_2
0x4001b3a	    0x488d14c50000	                        lea rdx, [rax*8]	      2525	quickfix.c	FUNCTION_36	CALL_2
0x4001b42	        0x48c1e007	                              shl rax, 7	      2525	quickfix.c	FUNCTION_36	CALL_2
0x4001b46	          0x4829d0	                            sub rax, rdx	      2525	quickfix.c	FUNCTION_36	CALL_2
0x4001b49	      0xba05000000	                              mov edx, 5	      2525	quickfix.c	FUNCTION_36	CALL_2
0x4001b4e	      0x458b740630	     mov r14d, dword [r14 + rax + 0x30] 	      2525	quickfix.c	FUNCTION_36	CALL_2
0x4001b53	      0xe800000000	                          call 0x4001b58	      2525	quickfix.c	FUNCTION_36	CALL_2
0x4001b58	    0x488b3d000000	            mov rdi, qword [0x04001b5f] 	        33	stdio2.h	FUNCTION_127	CALL_1
0x4001b5f	            0x4157	                                push r15	        33	stdio2.h	FUNCTION_127	CALL_1
0x4001b61	          0x4889c1	                            mov rcx, rax	        33	stdio2.h	FUNCTION_127	CALL_1
0x4001b64	              0x55	                                push rbp	        33	stdio2.h	FUNCTION_127	CALL_1
0x4001b65	          0x4589f1	                           mov r9d, r14d	        33	stdio2.h	FUNCTION_127	CALL_1
0x4001b68	          0x4589e0	                           mov r8d, r12d	        33	stdio2.h	FUNCTION_127	CALL_1
0x4001b6b	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_127	CALL_1
0x4001b72	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_127	CALL_1
0x4001b77	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_127	CALL_1
0x4001b79	      0xe800000000	                          call 0x4001b7e	        33	stdio2.h	FUNCTION_127	CALL_1
0x4001b7e	    0x4c8b25000000	            mov r12, qword [0x04001b85] 	      2530	quickfix.c	FUNCTION_36	CALL_5
0x4001b85	          0x4c89e7	                            mov rdi, r12	      2530	quickfix.c	FUNCTION_36	CALL_5
0x4001b88	      0xe800000000	                          call 0x4001b8d	      2530	quickfix.c	FUNCTION_36	CALL_5
0x4001b8d	        0x498b7d38	            mov rdi, qword [r13 + 0x38] 	      2531	quickfix.c	FUNCTION_36	CALL_7
0x4001b91	          0x4989c6	                            mov r14, rax	      2530	quickfix.c	FUNCTION_36	CALL_5
0x4001b94	            0x4898	                                    cdqe	      2531	quickfix.c	FUNCTION_36	CALL_7
0x4001b96	          0x4901c4	                            add r12, rax	      2531	quickfix.c	FUNCTION_36	CALL_7
0x4001b99	      0xe800000000	                          call 0x4001b9e	      2531	quickfix.c	FUNCTION_36	CALL_7
0x4001b9e	           0xfb610	                   movzx edx, byte [rax]	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001ba1	              0x59	                                 pop rcx	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001ba2	              0x5e	                                 pop rsi	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001ba3	            0x84d2	                             test dl, dl	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001ba5	     0xf848a010000	                            je 0x4001d35	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001bab	    0x41b800040000	                          mov r8d, 0x400	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001bb1	          0x4529f0	                           sub r8d, r14d	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001bb4	          0x4585c0	                           test r8d, r8d	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001bb7	     0xf8e78010000	                           jle 0x4001d35	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001bbd	          0x4c89e7	                            mov rdi, r12	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001bc0	            0x31f6	                            xor esi, esi	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001bc2	            0xeb25	                           jmp 0x4001be9	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001bc4	         0xf1f4000	                         nop dword [rax]	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001bc8	            0x8817	                      mov byte [rdi], dl	      2874	quickfix.c	FUNCTION_39	FOR_1	ELSE_1
0x4001bca	         0xfb65001	               movzx edx, byte [rax + 1]	      2874	quickfix.c	FUNCTION_39	FOR_1	ELSE_1
0x4001bce	          0x83c601	                              add esi, 1	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001bd1	        0x488d4801	                      lea rcx, [rax + 1]	      2874	quickfix.c	FUNCTION_39	FOR_1	ELSE_1
0x4001bd5	            0x84d2	                             test dl, dl	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001bd7	     0xf8496000000	                            je 0x4001c73	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001bdd	        0x4883c701	                              add rdi, 1	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001be1	          0x4139f0	                            cmp r8d, esi	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001be4	          0x4889c8	                            mov rax, rcx	      2874	quickfix.c	FUNCTION_39	FOR_1	ELSE_1
0x4001be7	            0x7433	                            je 0x4001c1c	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001be9	          0x80fa0a	                             cmp dl, 0xa	      2866	quickfix.c	FUNCTION_39	FOR_1	IF_1
0x4001bec	            0x75da	                           jne 0x4001bc8	      2866	quickfix.c	FUNCTION_39	FOR_1	IF_1
0x4001bee	          0xc60720	                    mov byte [rdi], 0x20	      2868	quickfix.c	FUNCTION_39	FOR_1	IF_1
0x4001bf1	     0xf1f80000000	                         nop dword [rax]	      2868	quickfix.c	FUNCTION_39	FOR_1	IF_1
0x4001bf8	        0x4883c001	                              add rax, 1	      2869	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1
0x4001bfc	           0xfb610	                   movzx edx, byte [rax]	      2869	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1
0x4001bff	            0x84d2	                             test dl, dl	      2869	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1
0x4001c01	            0x746d	                            je 0x4001c70	      2869	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1
0x4001c03	          0x8d4af7	                      lea ecx, [rdx - 9]	      2870	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4001c06	          0x80f901	                               cmp cl, 1	      2870	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4001c09	            0x76ed	                           jbe 0x4001bf8	      2870	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4001c0b	          0x80fa20	                            cmp dl, 0x20	      2870	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4001c0e	            0x74e8	                            je 0x4001bf8	      2870	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4001c10	          0x83c601	                              add esi, 1	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001c13	        0x4883c701	                              add rdi, 1	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001c17	          0x4139f0	                            cmp r8d, esi	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001c1a	            0x75cd	                           jne 0x4001be9	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001c1c	          0x4963f0	                         movsxd rsi, r8d	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001c1f	      0x41c6043400	                 mov byte [r12 + rsi], 0	      2876	quickfix.c	FUNCTION_39	ELSE_1
0x4001c24	    0x48391d000000	            cmp qword [0x04001c2b], rbx 	      2537	quickfix.c	FUNCTION_36	IF_2
0x4001c2b	    0x448b25000000	           mov r12d, dword [0x04001c32] 	      2536	quickfix.c	FUNCTION_36
0x4001c32	     0xf84d8000000	                            je 0x4001d10	      2537	quickfix.c	FUNCTION_36	IF_2
0x4001c38	    0x8b0500000000	            mov eax, dword [0x04001c3e] 	      2539	quickfix.c	FUNCTION_36	ELSE_1	IF_3	CALL_8
0x4001c3e	            0x85c0	                           test eax, eax	      2539	quickfix.c	FUNCTION_36	ELSE_1	IF_3	CALL_8
0x4001c40	            0x747f	                            je 0x4001cc1	      2539	quickfix.c	FUNCTION_36	ELSE_1	IF_3	CALL_8
0x4001c42	    0x488b3d000000	            mov rdi, qword [0x04001c49] 	      2541	quickfix.c	FUNCTION_36	CALL_9
0x4001c49	      0xba01000000	                              mov edx, 1	      2541	quickfix.c	FUNCTION_36	CALL_9
0x4001c4e	            0x31f6	                            xor esi, esi	      2541	quickfix.c	FUNCTION_36	CALL_9
0x4001c50	      0xe800000000	                          call 0x4001c55	      2541	quickfix.c	FUNCTION_36	CALL_9
0x4001c55	    0x448925000000	           mov dword [0x04001c5c], r12d 	      2542	quickfix.c	FUNCTION_36
0x4001c5c	        0x4883c418	                           add rsp, 0x18	      2543	quickfix.c	FUNCTION_36
0x4001c60	              0x5b	                                 pop rbx	      2543	quickfix.c	FUNCTION_36
0x4001c61	              0x5d	                                 pop rbp	      2543	quickfix.c	FUNCTION_36
0x4001c62	            0x415c	                                 pop r12	      2543	quickfix.c	FUNCTION_36
0x4001c64	            0x415d	                                 pop r13	      2543	quickfix.c	FUNCTION_36
0x4001c66	            0x415e	                                 pop r14	      2543	quickfix.c	FUNCTION_36
0x4001c68	            0x415f	                                 pop r15	      2543	quickfix.c	FUNCTION_36
0x4001c6a	              0xc3	                                     ret	      2543	quickfix.c	FUNCTION_36
0x4001c6b	       0xf1f440000	                   nop dword [rax + rax]	      2543	quickfix.c	FUNCTION_36
0x4001c70	          0x83c601	                              add esi, 1	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001c73	          0x4863f6	                         movsxd rsi, esi	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001c76	            0xeba7	                           jmp 0x4001c1f	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001c78	            0x3c45	                            cmp al, 0x45	      3116	quickfix.c	FUNCTION_46	ELSE_2	IF_3
0x4001c7a	     0xf8485000000	                            je 0x4001d05	      3116	quickfix.c	FUNCTION_46	ELSE_2	IF_3
0x4001c80	            0x84d2	                             test dl, dl	      3116	quickfix.c	FUNCTION_46	ELSE_2	IF_3
0x4001c82	            0x750f	                           jne 0x4001c93	      3116	quickfix.c	FUNCTION_46	ELSE_2	IF_3
0x4001c84	          0x4585c9	                           test r9d, r9d	      3116	quickfix.c	FUNCTION_46	ELSE_2	IF_3
0x4001c87	    0x41b800000000	                              mov r8d, 0	      3117	quickfix.c	FUNCTION_46	ELSE_2	IF_3
0x4001c8d	     0xf8f6bfeffff	                            jg 0x4001afe	      3116	quickfix.c	FUNCTION_46	ELSE_2	IF_3
0x4001c93	          0x80fa01	                               cmp dl, 1	      3118	quickfix.c	FUNCTION_46	ELSE_3	IF_4
0x4001c96	    0x41b800000000	                              mov r8d, 0	      3119	quickfix.c	FUNCTION_46	ELSE_3	IF_4
0x4001c9c	     0xf8654feffff	                           jbe 0x4001af6	      3118	quickfix.c	FUNCTION_46	ELSE_3	IF_4
0x4001ca2	    0xc60500000000	            mov byte [0x04001ca9], 0x20 	      3122	quickfix.c	FUNCTION_46	ELSE_4
0x4001ca9	    0x881500000000	               mov byte [0x04001caf], dl	      3123	quickfix.c	FUNCTION_46	ELSE_4
0x4001caf	    0x41b800000000	                              mov r8d, 0	      3125	quickfix.c	FUNCTION_46	ELSE_4
0x4001cb5	    0xc60500000000	                mov byte [0x04001cbc], 0	      3124	quickfix.c	FUNCTION_46	ELSE_4
0x4001cbc	      0xe935feffff	                           jmp 0x4001af6	      3124	quickfix.c	FUNCTION_46	ELSE_4
0x4001cc1	      0xbf4f000000	                           mov edi, 0x4f	      2539	quickfix.c	FUNCTION_36	ELSE_1	IF_3	CALL_8
0x4001cc6	      0xe800000000	                          call 0x4001ccb	      2539	quickfix.c	FUNCTION_36	ELSE_1	IF_3	CALL_8
0x4001ccb	            0x85c0	                           test eax, eax	      2539	quickfix.c	FUNCTION_36	ELSE_1	IF_3	CALL_8
0x4001ccd	     0xf846fffffff	                            je 0x4001c42	      2539	quickfix.c	FUNCTION_36	ELSE_1	IF_3	CALL_8
0x4001cd3	    0xc70500000000	               mov dword [0x04001cdd], 0	      2540	quickfix.c	FUNCTION_36	ELSE_1	IF_3
0x4001cdd	      0xe960ffffff	                           jmp 0x4001c42	      2540	quickfix.c	FUNCTION_36	ELSE_1	IF_3
0x4001ce2	      0xe800000000	                          call 0x4001ce7	      2524	quickfix.c	FUNCTION_36	CALL_1
0x4001ce7	      0xe9e1fdffff	                           jmp 0x4001acd	      2524	quickfix.c	FUNCTION_36	CALL_1
0x4001cec	      0xba05000000	                              mov edx, 5	      2525	quickfix.c	FUNCTION_36	CALL_2
0x4001cf1	      0xbe00000000	                              mov esi, 0	      2525	quickfix.c	FUNCTION_36	CALL_2
0x4001cf6	            0x31ff	                            xor edi, edi	      2525	quickfix.c	FUNCTION_36	CALL_2
0x4001cf8	      0xe800000000	                          call 0x4001cfd	      2525	quickfix.c	FUNCTION_36	CALL_2
0x4001cfd	          0x4889c5	                            mov rbp, rax	      2525	quickfix.c	FUNCTION_36	CALL_2
0x4001d00	      0xe92afeffff	                           jmp 0x4001b2f	      2525	quickfix.c	FUNCTION_36	CALL_2
0x4001d05	    0x41b800000000	                              mov r8d, 0	      3117	quickfix.c	FUNCTION_46	ELSE_2	IF_3
0x4001d0b	      0xe9e6fdffff	                           jmp 0x4001af6	      3117	quickfix.c	FUNCTION_46	ELSE_2	IF_3
0x4001d10	    0x488b05000000	            mov rax, qword [0x04001d17] 	      2537	quickfix.c	FUNCTION_36	IF_2
0x4001d17	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      2537	quickfix.c	FUNCTION_36	IF_2
0x4001d1c	        0x48395838	            cmp qword [rax + 0x38], rbx 	      2537	quickfix.c	FUNCTION_36	IF_2
0x4001d20	     0xf8512ffffff	                           jne 0x4001c38	      2537	quickfix.c	FUNCTION_36	IF_2
0x4001d26	    0xc70500000000	               mov dword [0x04001d30], 1	      2538	quickfix.c	FUNCTION_36	IF_2
0x4001d30	      0xe90dffffff	                           jmp 0x4001c42	      2538	quickfix.c	FUNCTION_36	IF_2
0x4001d35	            0x31f6	                            xor esi, esi	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001d37	      0xe9e3feffff	                           jmp 0x4001c1f	      2864	quickfix.c	FUNCTION_39	FOR_1
qf_current_entry	functions,0:WHILE,0:DO,0:CALL,0:SWITCH,0:IF,1:ELSE,0:FOR,0	18
0x4007480	              0x53	                                push rbx	      3381	quickfix.c	FUNCTION_52
0x4007481	          0x4889fb	                            mov rbx, rdi	      3381	quickfix.c	FUNCTION_52
0x4007484	        0x488b7f08	                mov rdi, qword [rdi + 8]	      3384	quickfix.c	FUNCTION_52	IF_1
0x4007488	      0xe800000000	                          call 0x400748d	      3384	quickfix.c	FUNCTION_52	IF_1
0x400748d	            0x85c0	                           test eax, eax	      3384	quickfix.c	FUNCTION_52	IF_1
0x400748f	      0xba00000000	                              mov edx, 0	      3384	quickfix.c	FUNCTION_52	IF_1
0x4007494	            0x7413	                            je 0x40074a9	      3384	quickfix.c	FUNCTION_52	IF_1
0x4007496	    0x488b93501900	          mov rdx, qword [rbx + 0x1950] 	      3384	quickfix.c	FUNCTION_52	IF_1
0x400749d	      0xb800000000	                              mov eax, 0	      3382	quickfix.c	FUNCTION_52
0x40074a2	          0x4885d2	                           test rdx, rdx	      3382	quickfix.c	FUNCTION_52
0x40074a5	        0x480f44d0	                          cmove rdx, rax	      3382	quickfix.c	FUNCTION_52
0x40074a9	        0x48634208	            movsxd rax, dword [rdx + 8] 	      3388	quickfix.c	FUNCTION_52
0x40074ad	              0x5b	                                 pop rbx	      3389	quickfix.c	FUNCTION_52
0x40074ae	    0x488d0cc50000	                        lea rcx, [rax*8]	      3388	quickfix.c	FUNCTION_52
0x40074b6	        0x48c1e007	                              shl rax, 7	      3388	quickfix.c	FUNCTION_52
0x40074ba	          0x4829c8	                            sub rax, rcx	      3388	quickfix.c	FUNCTION_52
0x40074bd	      0x4863440234	   movsxd rax, dword [rdx + rax + 0x34] 	      3388	quickfix.c	FUNCTION_52
0x40074c2	              0xc3	                                     ret	      3389	quickfix.c	FUNCTION_52
ex_cbottom	functions,0:WHILE,0:DO,0:CALL,4:SWITCH,0:IF,3:ELSE,0:FOR,0	86
0x4007310	              0x55	                                push rbp	      3356	quickfix.c	FUNCTION_51
0x4007311	              0x53	                                push rbx	      3356	quickfix.c	FUNCTION_51
0x4007312	        0x4883ec08	                              sub rsp, 8	      3356	quickfix.c	FUNCTION_51
0x4007316	    0x817f20d30000	           cmp dword [rdi + 0x20], 0xd3 	      3360	quickfix.c	FUNCTION_51	IF_1
0x400731d	     0xf84b5000000	                            je 0x40073d8	      3360	quickfix.c	FUNCTION_51	IF_1
0x4007323	    0x488b1d000000	            mov rbx, qword [0x0400732a] 	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400732a	          0x4885db	                           test rbx, rbx	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400732d	            0x751a	                           jne 0x4007349	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400732f	        0x4883c408	                              add rsp, 8	      3373	quickfix.c	FUNCTION_51
0x4007333	              0x5b	                                 pop rbx	      3373	quickfix.c	FUNCTION_51
0x4007334	              0x5d	                                 pop rbp	      3373	quickfix.c	FUNCTION_51
0x4007335	              0xc3	                                     ret	      3373	quickfix.c	FUNCTION_51
0x4007336	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3373	quickfix.c	FUNCTION_51
0x4007340	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4007344	          0x4885db	                           test rbx, rbx	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4007347	            0x74e6	                            je 0x400732f	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4007349	        0x488b7b08	                mov rdi, qword [rbx + 8]	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400734d	      0xe800000000	                          call 0x4007352	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x4007352	            0x85c0	                           test eax, eax	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x4007354	            0x74ea	                            je 0x4007340	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x4007356	    0x4883bb501900	             cmp qword [rbx + 0x1950], 0	      3441	quickfix.c	FUNCTION_54	IF_1	IF_2
0x400735e	            0x75e0	                           jne 0x4007340	      3441	quickfix.c	FUNCTION_54	IF_1	IF_2
0x4007360	        0x488b5308	                mov rdx, qword [rbx + 8]	      3371	quickfix.c	FUNCTION_51	IF_3
0x4007364	          0x488b02	                    mov rax, qword [rdx]	      3371	quickfix.c	FUNCTION_51	IF_3
0x4007367	        0x48394338	            cmp qword [rbx + 0x38], rax 	      3371	quickfix.c	FUNCTION_51	IF_3
0x400736b	            0x74c2	                            je 0x400732f	      3371	quickfix.c	FUNCTION_51	IF_3
0x400736d	        0x48894338	             mov qword [rbx + 0x38], rax	      3338	quickfix.c	FUNCTION_50
0x4007371	    0xc74340000000	               mov dword [rbx + 0x40], 0	      3339	quickfix.c	FUNCTION_50
0x4007378	    0xc74344000000	               mov dword [rbx + 0x44], 0	      3341	quickfix.c	FUNCTION_50
0x400737f	    0xc74348000000	               mov dword [rbx + 0x48], 0	      3343	quickfix.c	FUNCTION_50
0x4007386	    0x488b2d000000	            mov rbp, qword [0x0400738d] 	      3334	quickfix.c	FUNCTION_50
0x400738d	    0x488915000000	            mov qword [0x04007394], rdx 	      3337	quickfix.c	FUNCTION_50
0x4007394	    0x48891d000000	            mov qword [0x0400739b], rbx 	      3336	quickfix.c	FUNCTION_50
0x400739b	      0xe800000000	                          call 0x40073a0	      3344	quickfix.c	FUNCTION_50	CALL_1
0x40073a0	      0xbf0a000000	                            mov edi, 0xa	      3345	quickfix.c	FUNCTION_50	CALL_2
0x40073a5	      0xe800000000	                          call 0x40073aa	      3345	quickfix.c	FUNCTION_50	CALL_2
0x40073aa	    0x488b05000000	            mov rax, qword [0x040073b1] 	      3346	quickfix.c	FUNCTION_50
0x40073b1	    0x48892d000000	            mov qword [0x040073b8], rbp 	      3347	quickfix.c	FUNCTION_50
0x40073b8	    0xc78040010000	              mov dword [rax + 0x140], 1	      3346	quickfix.c	FUNCTION_50
0x40073c2	        0x488b4508	                mov rax, qword [rbp + 8]	      3348	quickfix.c	FUNCTION_50
0x40073c6	    0x488905000000	            mov qword [0x040073cd], rax 	      3348	quickfix.c	FUNCTION_50
0x40073cd	        0x4883c408	                              add rsp, 8	      3373	quickfix.c	FUNCTION_51
0x40073d1	              0x5b	                                 pop rbx	      3373	quickfix.c	FUNCTION_51
0x40073d2	              0x5d	                                 pop rbp	      3373	quickfix.c	FUNCTION_51
0x40073d3	              0xc3	                                     ret	      3373	quickfix.c	FUNCTION_51
0x40073d4	         0xf1f4000	                         nop dword [rax]	      3373	quickfix.c	FUNCTION_51
0x40073d8	    0x488b05000000	            mov rax, qword [0x040073df] 	      3362	quickfix.c	FUNCTION_51	IF_1
0x40073df	        0x488b7808	                mov rdi, qword [rax + 8]	      3362	quickfix.c	FUNCTION_51	IF_1
0x40073e3	      0xe800000000	                          call 0x40073e8	      3362	quickfix.c	FUNCTION_51	IF_1
0x40073e8	            0x85c0	                           test eax, eax	      3362	quickfix.c	FUNCTION_51	IF_1
0x40073ea	    0x488b05000000	            mov rax, qword [0x040073f1] 	      3362	quickfix.c	FUNCTION_51	IF_1
0x40073f1	            0x755d	                           jne 0x4007450	      3362	quickfix.c	FUNCTION_51	IF_1
0x40073f3	    0x488ba8481900	          mov rbp, qword [rax + 0x1948] 	      3362	quickfix.c	FUNCTION_51	IF_1
0x40073fa	          0x4885ed	                           test rbp, rbp	      3363	quickfix.c	FUNCTION_51	IF_1	IF_2
0x40073fd	            0x745f	                            je 0x400745e	      3363	quickfix.c	FUNCTION_51	IF_1	IF_2
0x40073ff	    0x488b1d000000	            mov rbx, qword [0x04007406] 	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4007406	          0x4885db	                           test rbx, rbx	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4007409	     0xf8420ffffff	                            je 0x400732f	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400740f	    0x4881fd000000	                              cmp rbp, 0	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4007416	            0x7515	                           jne 0x400742d	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4007418	      0xe92cffffff	                           jmp 0x4007349	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400741d	           0xf1f00	                         nop dword [rax]	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4007420	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4007424	          0x4885db	                           test rbx, rbx	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4007427	     0xf8402ffffff	                            je 0x400732f	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400742d	        0x488b7b08	                mov rdi, qword [rbx + 8]	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x4007431	      0xe800000000	                          call 0x4007436	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x4007436	            0x85c0	                           test eax, eax	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x4007438	            0x74e6	                            je 0x4007420	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400743a	    0x483bab501900	          cmp rbp, qword [rbx + 0x1950] 	      3442	quickfix.c	FUNCTION_54	IF_1	IF_2
0x4007441	            0x75dd	                           jne 0x4007420	      3442	quickfix.c	FUNCTION_54	IF_1	IF_2
0x4007443	      0xe918ffffff	                           jmp 0x4007360	      3442	quickfix.c	FUNCTION_54	IF_1	IF_2
0x4007448	     0xf1f84000000	                   nop dword [rax + rax]	      3442	quickfix.c	FUNCTION_54	IF_1	IF_2
0x4007450	    0x488ba8501900	          mov rbp, qword [rax + 0x1950] 	      3362	quickfix.c	FUNCTION_51	IF_1
0x4007457	          0x4885ed	                           test rbp, rbp	      3362	quickfix.c	FUNCTION_51	IF_1
0x400745a	            0x75a3	                           jne 0x40073ff	      3362	quickfix.c	FUNCTION_51	IF_1
0x400745c	            0xeb95	                           jmp 0x40073f3	      3362	quickfix.c	FUNCTION_51	IF_1
0x400745e	            0x31ff	                            xor edi, edi	      3365	quickfix.c	FUNCTION_51	IF_1	IF_2	CALL_2
0x4007460	      0xba05000000	                              mov edx, 5	      3365	quickfix.c	FUNCTION_51	IF_1	IF_2	CALL_2
0x4007465	      0xbe00000000	                              mov esi, 0	      3365	quickfix.c	FUNCTION_51	IF_1	IF_2	CALL_2
0x400746a	      0xe800000000	                          call 0x400746f	      3365	quickfix.c	FUNCTION_51	IF_1	IF_2	CALL_2
0x400746f	        0x4883c408	                              add rsp, 8	      3373	quickfix.c	FUNCTION_51
0x4007473	          0x4889c7	                            mov rdi, rax	      3365	quickfix.c	FUNCTION_51	IF_1	IF_2	CALL_2
0x4007476	              0x5b	                                 pop rbx	      3373	quickfix.c	FUNCTION_51
0x4007477	              0x5d	                                 pop rbp	      3373	quickfix.c	FUNCTION_51
0x4007478	      0xe900000000	                           jmp 0x400747d	      3365	quickfix.c	FUNCTION_51	IF_1	IF_2	CALL_2
ex_cexpr	functions,0:WHILE,0:DO,0:CALL,11:SWITCH,1:IF,9:ELSE,1:FOR,0	228
0x400be10	            0x4157	                                push r15	      5943	quickfix.c	FUNCTION_109
0x400be12	            0x4156	                                push r14	      5943	quickfix.c	FUNCTION_109
0x400be14	            0x4155	                                push r13	      5943	quickfix.c	FUNCTION_109
0x400be16	            0x4154	                                push r12	      5943	quickfix.c	FUNCTION_109
0x400be18	              0x55	                                push rbp	      5943	quickfix.c	FUNCTION_109
0x400be19	              0x53	                                push rbx	      5943	quickfix.c	FUNCTION_109
0x400be1a	          0x4889fd	                            mov rbp, rdi	      5943	quickfix.c	FUNCTION_109
0x400be1d	        0x4883ec18	                           sub rsp, 0x18	      5943	quickfix.c	FUNCTION_109
0x400be21	          0x8b4720	            mov eax, dword [rdi + 0x20] 	      5949	quickfix.c	FUNCTION_109	SWITCH_1
0x400be24	          0x83f841	                           cmp eax, 0x41	      5949	quickfix.c	FUNCTION_109	SWITCH_1
0x400be27	     0xf847b030000	                            je 0x400c1a8	      5949	quickfix.c	FUNCTION_109	SWITCH_1
0x400be2d	            0x7e41	                           jle 0x400be70	      5949	quickfix.c	FUNCTION_109	SWITCH_1
0x400be2f	      0x3ddc000000	                           cmp eax, 0xdc	      5949	quickfix.c	FUNCTION_109	SWITCH_1
0x400be34	     0xf8406020000	                            je 0x400c040	      5949	quickfix.c	FUNCTION_109	SWITCH_1
0x400be3a	      0x3de2000000	                           cmp eax, 0xe2	      5949	quickfix.c	FUNCTION_109	SWITCH_1
0x400be3f	     0xf8453030000	                            je 0x400c198	      5949	quickfix.c	FUNCTION_109	SWITCH_1
0x400be45	      0x3dce000000	                           cmp eax, 0xce	      5949	quickfix.c	FUNCTION_109	SWITCH_1
0x400be4a	     0xf8400020000	                            je 0x400c050	      5949	quickfix.c	FUNCTION_109	SWITCH_1
0x400be50	      0x2dce000000	                           sub eax, 0xce	      5970	quickfix.c	FUNCTION_109	IF_3
0x400be55	          0x4531f6	                          xor r14d, r14d	      5946	quickfix.c	FUNCTION_109
0x400be58	          0x83f814	                           cmp eax, 0x14	      5970	quickfix.c	FUNCTION_109	IF_3
0x400be5b	            0x7660	                           jbe 0x400bebd	      5970	quickfix.c	FUNCTION_109	IF_3
0x400be5d	           0xf1f00	                         nop dword [rax]	      5970	quickfix.c	FUNCTION_109	IF_3
0x400be60	    0x41bc00000000	                             mov r12d, 0	      5945	quickfix.c	FUNCTION_109
0x400be66	      0xe985000000	                           jmp 0x400bef0	      5945	quickfix.c	FUNCTION_109
0x400be6b	       0xf1f440000	                   nop dword [rax + rax]	      5945	quickfix.c	FUNCTION_109
0x400be70	          0x83f830	                           cmp eax, 0x30	      5949	quickfix.c	FUNCTION_109	SWITCH_1
0x400be73	     0xf843f030000	                            je 0x400c1b8	      5949	quickfix.c	FUNCTION_109	SWITCH_1
0x400be79	          0x83f83b	                           cmp eax, 0x3b	      5949	quickfix.c	FUNCTION_109	SWITCH_1
0x400be7c	    0x41be00000000	                             mov r14d, 0	      5951	quickfix.c	FUNCTION_109	SWITCH_1
0x400be82	            0x75cc	                           jne 0x400be50	      5949	quickfix.c	FUNCTION_109	SWITCH_1
0x400be84	         0xf1f4000	                         nop dword [rax]	      5949	quickfix.c	FUNCTION_109	SWITCH_1
0x400be88	    0x4c8b05000000	              mov r8, qword [0x0400be8f]	      5960	quickfix.c	FUNCTION_109	IF_1
0x400be8f	      0xb901000000	                              mov ecx, 1	      5959	quickfix.c	FUNCTION_109	IF_1	CALL_1
0x400be94	          0x4c89f6	                            mov rsi, r14	      5959	quickfix.c	FUNCTION_109	IF_1	CALL_1
0x400be97	      0xbf40000000	                           mov edi, 0x40	      5959	quickfix.c	FUNCTION_109	IF_1	CALL_1
0x400be9c	    0x498b90980000	              mov rdx, qword [r8 + 0x98]	      5959	quickfix.c	FUNCTION_109	IF_1	CALL_1
0x400bea3	      0xe800000000	                          call 0x400bea8	      5959	quickfix.c	FUNCTION_109	IF_1	CALL_1
0x400bea8	            0x85c0	                           test eax, eax	      5959	quickfix.c	FUNCTION_109	IF_1	CALL_1
0x400beaa	     0xf8580010000	                           jne 0x400c030	      5959	quickfix.c	FUNCTION_109	IF_1	CALL_1
0x400beb0	          0x8b4520	            mov eax, dword [rbp + 0x20] 	      5959	quickfix.c	FUNCTION_109	IF_1	CALL_1
0x400beb3	      0x2dce000000	                           sub eax, 0xce	      5970	quickfix.c	FUNCTION_109	IF_3
0x400beb8	          0x83f814	                           cmp eax, 0x14	      5970	quickfix.c	FUNCTION_109	IF_3
0x400bebb	            0x77a3	                            ja 0x400be60	      5970	quickfix.c	FUNCTION_109	IF_3
0x400bebd	      0xba01401000	                       mov edx, 0x104001	      5970	quickfix.c	FUNCTION_109	IF_3
0x400bec2	        0x480fa3c2	                             bt rdx, rax	      5970	quickfix.c	FUNCTION_109	IF_3
0x400bec6	            0x7398	                           jae 0x400be60	      5970	quickfix.c	FUNCTION_109	IF_3
0x400bec8	    0x4c8b3d000000	            mov r15, qword [0x0400becf] 	      5972	quickfix.c	FUNCTION_109	IF_3	CALL_3
0x400becf	        0x498b7f08	                mov rdi, qword [r15 + 8]	      1576	quickfix.c	FUNCTION_19	IF_1
0x400bed3	      0xe800000000	                          call 0x400bed8	      1576	quickfix.c	FUNCTION_19	IF_1
0x400bed8	            0x85c0	                           test eax, eax	      1576	quickfix.c	FUNCTION_19	IF_1
0x400beda	    0x4d8ba7501900	          mov r12, qword [r15 + 0x1950] 	      1576	quickfix.c	FUNCTION_19	IF_1
0x400bee1	     0xf8479010000	                            je 0x400c060	      1576	quickfix.c	FUNCTION_19	IF_1
0x400bee7	          0x4d85e4	                           test r12, r12	      1576	quickfix.c	FUNCTION_19	IF_1
0x400beea	     0xf843f020000	                            je 0x400c12f	      1576	quickfix.c	FUNCTION_19	IF_1
0x400bef0	        0x488b7d00	                    mov rdi, qword [rbp]	      5979	quickfix.c	FUNCTION_109	CALL_4
0x400bef4	            0x31f6	                            xor esi, esi	      5979	quickfix.c	FUNCTION_109	CALL_4
0x400bef6	      0xe800000000	                          call 0x400befb	      5979	quickfix.c	FUNCTION_109	CALL_4
0x400befb	          0x4885c0	                           test rax, rax	      5980	quickfix.c	FUNCTION_109	IF_5
0x400befe	          0x4889c3	                            mov rbx, rax	      5979	quickfix.c	FUNCTION_109	CALL_4
0x400bf01	     0xf8411010000	                            je 0x400c018	      5980	quickfix.c	FUNCTION_109	IF_5
0x400bf07	            0x8b00	                    mov eax, dword [rax]	      5982	quickfix.c	FUNCTION_109	IF_5	IF_6
0x400bf09	          0x83f802	                              cmp eax, 2	      5982	quickfix.c	FUNCTION_109	IF_5	IF_6
0x400bf0c	            0x743a	                            je 0x400bf48	      5982	quickfix.c	FUNCTION_109	IF_5	IF_6
0x400bf0e	          0x83f805	                              cmp eax, 5	      5983	quickfix.c	FUNCTION_109	IF_5	IF_6
0x400bf11	            0x7435	                            je 0x400bf48	      5983	quickfix.c	FUNCTION_109	IF_5	IF_6
0x400bf13	            0x31ff	                            xor edi, edi	      6000	quickfix.c	FUNCTION_109	IF_5	CALL_10
0x400bf15	      0xba05000000	                              mov edx, 5	      6000	quickfix.c	FUNCTION_109	IF_5	CALL_10
0x400bf1a	      0xbe00000000	                              mov esi, 0	      6000	quickfix.c	FUNCTION_109	IF_5	CALL_10
0x400bf1f	      0xe800000000	                          call 0x400bf24	      6000	quickfix.c	FUNCTION_109	IF_5	CALL_10
0x400bf24	          0x4889c7	                            mov rdi, rax	      6000	quickfix.c	FUNCTION_109	IF_5	CALL_10
0x400bf27	      0xe800000000	                          call 0x400bf2c	      6000	quickfix.c	FUNCTION_109	IF_5	CALL_10
0x400bf2c	        0x4883c418	                           add rsp, 0x18	      6003	quickfix.c	FUNCTION_109
0x400bf30	          0x4889df	                            mov rdi, rbx	      6001	quickfix.c	FUNCTION_109	IF_5	CALL_11
0x400bf33	              0x5b	                                 pop rbx	      6003	quickfix.c	FUNCTION_109
0x400bf34	              0x5d	                                 pop rbp	      6003	quickfix.c	FUNCTION_109
0x400bf35	            0x415c	                                 pop r12	      6003	quickfix.c	FUNCTION_109
0x400bf37	            0x415d	                                 pop r13	      6003	quickfix.c	FUNCTION_109
0x400bf39	            0x415e	                                 pop r14	      6003	quickfix.c	FUNCTION_109
0x400bf3b	            0x415f	                                 pop r15	      6003	quickfix.c	FUNCTION_109
0x400bf3d	      0xe900000000	                           jmp 0x400bf42	      6001	quickfix.c	FUNCTION_109	IF_5	CALL_11
0x400bf42	    0x660f1f440000	                    nop word [rax + rax]	      6001	quickfix.c	FUNCTION_109	IF_5	CALL_11
0x400bf48	      0x48837b0800	                  cmp qword [rbx + 8], 0	      5983	quickfix.c	FUNCTION_109	IF_5	IF_6
0x400bf4d	            0x74c4	                            je 0x400bf13	      5983	quickfix.c	FUNCTION_109	IF_5	IF_6
0x400bf4f	          0x8b5520	            mov edx, dword [rbp + 0x20] 	      5986	quickfix.c	FUNCTION_109	IF_5	IF_6
0x400bf52	        0x4883ec08	                              sub rsp, 8	      5985	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_5
0x400bf56	      0x418b742408	                mov esi, dword [r12 + 8]	      5985	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_5
0x400bf5b	            0x6a00	                                  push 0	      5985	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_5
0x400bf5d	        0x488b4518	            mov rax, qword [rbp + 0x18] 	      5985	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_5
0x400bf61	          0x4989d8	                             mov r8, rbx	      5985	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_5
0x400bf64	    0x4c8b0d000000	              mov r9, qword [0x0400bf6b]	      5985	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_5
0x400bf6b	          0x4c89e7	                            mov rdi, r12	      5985	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_5
0x400bf6e	          0x83fa30	                           cmp edx, 0x30	      5985	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_5
0x400bf71	            0xff30	                        push qword [rax]	      5985	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_5
0x400bf73	           0xf95c0	                                setne al	      5985	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_5
0x400bf76	    0x81face000000	                           cmp edx, 0xce	      5985	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_5
0x400bf7c	           0xf95c2	                                setne dl	      5985	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_5
0x400bf7f	            0x6a00	                                  push 0	      5985	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_5
0x400bf81	            0x6a00	                                  push 0	      5985	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_5
0x400bf83	           0xfb6d2	                           movzx edx, dl	      5985	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_5
0x400bf86	            0x31c9	                            xor ecx, ecx	      5985	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_5
0x400bf88	            0x21d0	                            and eax, edx	      5985	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_5
0x400bf8a	            0x31d2	                            xor edx, edx	      5985	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_5
0x400bf8c	              0x50	                                push rax	      5985	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_5
0x400bf8d	      0xe80e6cffff	                    call sym.qf_init_ext	      5985	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_5
0x400bf92	        0x4883c430	                           add rsp, 0x30	      5990	quickfix.c	FUNCTION_109	IF_5	IF_6	IF_7
0x400bf96	            0x85c0	                           test eax, eax	      5990	quickfix.c	FUNCTION_109	IF_5	IF_6	IF_7
0x400bf98	          0x4189c5	                           mov r13d, eax	      5985	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_5
0x400bf9b	            0x781d	                            js 0x400bfba	      5990	quickfix.c	FUNCTION_109	IF_5	IF_6	IF_7
0x400bf9d	      0x4963442408	            movsxd rax, dword [r12 + 8] 	      3701	quickfix.c	FUNCTION_61
0x400bfa2	    0x488d14c50000	                        lea rdx, [rax*8]	      3701	quickfix.c	FUNCTION_61
0x400bfaa	        0x48c1e007	                              shl rax, 7	      3701	quickfix.c	FUNCTION_61
0x400bfae	          0x4829d0	                            sub rax, rdx	      3701	quickfix.c	FUNCTION_61
0x400bfb1	    0x498384048000	         add qword [r12 + rax + 0x80], 1	      3701	quickfix.c	FUNCTION_61
0x400bfba	          0x4d85f6	                           test r14, r14	      5992	quickfix.c	FUNCTION_109	IF_5	IF_6	IF_8
0x400bfbd	            0x7420	                            je 0x400bfdf	      5992	quickfix.c	FUNCTION_109	IF_5	IF_6	IF_8
0x400bfbf	    0x4c8b05000000	              mov r8, qword [0x0400bfc6]	      5994	quickfix.c	FUNCTION_109	IF_5	IF_6	IF_8
0x400bfc6	      0xb901000000	                              mov ecx, 1	      5993	quickfix.c	FUNCTION_109	IF_5	IF_6	IF_8	CALL_7
0x400bfcb	          0x4c89f6	                            mov rsi, r14	      5993	quickfix.c	FUNCTION_109	IF_5	IF_6	IF_8	CALL_7
0x400bfce	      0xbf3f000000	                           mov edi, 0x3f	      5993	quickfix.c	FUNCTION_109	IF_5	IF_6	IF_8	CALL_7
0x400bfd3	    0x498b90980000	              mov rdx, qword [r8 + 0x98]	      5993	quickfix.c	FUNCTION_109	IF_5	IF_6	IF_8	CALL_7
0x400bfda	      0xe800000000	                          call 0x400bfdf	      5993	quickfix.c	FUNCTION_109	IF_5	IF_6	IF_8	CALL_7
0x400bfdf	          0x4585ed	                         test r13d, r13d	      5995	quickfix.c	FUNCTION_109	IF_5	IF_6	IF_9
0x400bfe2	     0xf8e44ffffff	                           jle 0x400bf2c	      5995	quickfix.c	FUNCTION_109	IF_5	IF_6	IF_9
0x400bfe8	          0x8b4520	            mov eax, dword [rbp + 0x20] 	      5995	quickfix.c	FUNCTION_109	IF_5	IF_6	IF_9
0x400bfeb	          0x83f83b	                           cmp eax, 0x3b	      5995	quickfix.c	FUNCTION_109	IF_5	IF_6	IF_9
0x400bfee	            0x740b	                            je 0x400bffb	      5995	quickfix.c	FUNCTION_109	IF_5	IF_6	IF_9
0x400bff0	      0x3ddc000000	                           cmp eax, 0xdc	      5995	quickfix.c	FUNCTION_109	IF_5	IF_6	IF_9
0x400bff5	     0xf8531ffffff	                           jne 0x400bf2c	      5995	quickfix.c	FUNCTION_109	IF_5	IF_6	IF_9
0x400bffb	          0x8b5534	            mov edx, dword [rbp + 0x34] 	      5997	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_8
0x400bffe	            0x31f6	                            xor esi, esi	      5997	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_8
0x400c000	          0x4c89e7	                            mov rdi, r12	      5997	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_8
0x400c003	      0xe8b85fffff	            call sym.qf_jump.constprop.7	      5997	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_8
0x400c008	      0xe91fffffff	                           jmp 0x400bf2c	      5997	quickfix.c	FUNCTION_109	IF_5	IF_6	CALL_8
0x400c00d	    0x49c787481900	            mov qword [r15 + 0x1948], 0 	      1587	quickfix.c	FUNCTION_19	CALL_2
0x400c018	        0x4883c418	                           add rsp, 0x18	      6003	quickfix.c	FUNCTION_109
0x400c01c	              0x5b	                                 pop rbx	      6003	quickfix.c	FUNCTION_109
0x400c01d	              0x5d	                                 pop rbp	      6003	quickfix.c	FUNCTION_109
0x400c01e	            0x415c	                                 pop r12	      6003	quickfix.c	FUNCTION_109
0x400c020	            0x415d	                                 pop r13	      6003	quickfix.c	FUNCTION_109
0x400c022	            0x415e	                                 pop r14	      6003	quickfix.c	FUNCTION_109
0x400c024	            0x415f	                                 pop r15	      6003	quickfix.c	FUNCTION_109
0x400c026	              0xc3	                                     ret	      6003	quickfix.c	FUNCTION_109
0x400c027	    0x660f1f840000	                    nop word [rax + rax]	      6003	quickfix.c	FUNCTION_109
0x400c030	      0xe800000000	                          call 0x400c035	      5963	quickfix.c	FUNCTION_109	IF_1	IF_2	CALL_2
0x400c035	            0x85c0	                           test eax, eax	      5963	quickfix.c	FUNCTION_109	IF_1	IF_2	CALL_2
0x400c037	     0xf8473feffff	                            je 0x400beb0	      5963	quickfix.c	FUNCTION_109	IF_1	IF_2	CALL_2
0x400c03d	            0xebd9	                           jmp 0x400c018	      5963	quickfix.c	FUNCTION_109	IF_1	IF_2	CALL_2
0x400c03f	              0x90	                                     nop	      5963	quickfix.c	FUNCTION_109	IF_1	IF_2	CALL_2
0x400c040	    0x41be00000000	                             mov r14d, 0	      5954	quickfix.c	FUNCTION_109	SWITCH_1
0x400c046	      0xe93dfeffff	                           jmp 0x400be88	      5954	quickfix.c	FUNCTION_109	SWITCH_1
0x400c04b	       0xf1f440000	                   nop dword [rax + rax]	      5954	quickfix.c	FUNCTION_109	SWITCH_1
0x400c050	    0x41be00000000	                             mov r14d, 0	      5956	quickfix.c	FUNCTION_109	SWITCH_1
0x400c056	      0xe92dfeffff	                           jmp 0x400be88	      5956	quickfix.c	FUNCTION_109	SWITCH_1
0x400c05b	       0xf1f440000	                   nop dword [rax + rax]	      5956	quickfix.c	FUNCTION_109	SWITCH_1
0x400c060	          0x4d85e4	                           test r12, r12	      1422	quickfix.c	FUNCTION_15	IF_1
0x400c063	     0xf84c6000000	                            je 0x400c12f	      1422	quickfix.c	FUNCTION_15	IF_1
0x400c069	        0x418b0424	                    mov eax, dword [r12]	      1426	quickfix.c	FUNCTION_15
0x400c06d	    0x49c787501900	            mov qword [r15 + 0x1950], 0 	      1424	quickfix.c	FUNCTION_15
0x400c078	          0x83e801	                              sub eax, 1	      1426	quickfix.c	FUNCTION_15
0x400c07b	            0x85c0	                           test eax, eax	      1427	quickfix.c	FUNCTION_15	IF_2
0x400c07d	        0x41890424	                    mov dword [r12], eax	      1426	quickfix.c	FUNCTION_15
0x400c081	     0xf8fa8000000	                            jg 0x400c12f	      1427	quickfix.c	FUNCTION_15	IF_2
0x400c087	      0x418b442404	                mov eax, dword [r12 + 4]	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400c08c	          0x4531ed	                          xor r13d, r13d	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400c08f	            0x85c0	                           test eax, eax	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400c091	     0xf8e90000000	                           jle 0x400c127	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400c097	    0x660f1f840000	                    nop word [rax + rax]	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400c0a0	          0x4c89e7	                            mov rdi, r12	      3031	quickfix.c	FUNCTION_44	CALL_1
0x400c0a3	          0x4963dd	                        movsxd rbx, r13d	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400c0a6	          0x4489ee	                           mov esi, r13d	      3031	quickfix.c	FUNCTION_44	CALL_1
0x400c0a9	      0xe8e24bffff	                  call sym.qf_free_items	      3031	quickfix.c	FUNCTION_44	CALL_1
0x400c0ae	    0x488d14dd0000	                        lea rdx, [rbx*8]	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400c0b6	          0x4889d8	                            mov rax, rbx	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400c0b9	        0x48c1e007	                              shl rax, 7	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400c0bd	          0x4829d0	                            sub rax, rdx	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400c0c0	          0x4c01e0	                            add rax, r12	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400c0c3	        0x488b7840	            mov rdi, qword [rax + 0x40] 	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400c0c7	      0x4889442408	                mov qword [rsp + 8], rax	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400c0cc	          0x4885ff	                           test rdi, rdi	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400c0cf	            0x7412	                            je 0x400c0e3	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400c0d1	      0xe800000000	                          call 0x400c0d6	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400c0d6	      0x488b442408	                mov rax, qword [rsp + 8]	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400c0db	    0x48c740400000	               mov qword [rax + 0x40], 0	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400c0e3	    0x488d04dd0000	                        lea rax, [rbx*8]	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400c0eb	        0x48c1e307	                              shl rbx, 7	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400c0ef	        0x4183c501	                             add r13d, 1	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400c0f3	          0x4829c3	                            sub rbx, rax	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400c0f6	          0x4c01e3	                            add rbx, r12	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400c0f9	        0x488b7b48	            mov rdi, qword [rbx + 0x48] 	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400c0fd	      0xe800000000	                          call 0x400c102	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400c102	    0x48c743480000	               mov qword [rbx + 0x48], 0	      3035	quickfix.c	FUNCTION_44
0x400c10a	    0xc74310000000	               mov dword [rbx + 0x10], 0	      3036	quickfix.c	FUNCTION_44
0x400c111	    0x48c783800000	               mov qword [rbx + 0x80], 0	      3037	quickfix.c	FUNCTION_44
0x400c11c	      0x453b6c2404	               cmp r13d, dword [r12 + 4]	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400c121	     0xf8c79ffffff	                            jl 0x400c0a0	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400c127	          0x4c89e7	                            mov rdi, r12	      1432	quickfix.c	FUNCTION_15	IF_2	CALL_2
0x400c12a	      0xe800000000	                          call 0x400c12f	      1432	quickfix.c	FUNCTION_15	IF_2	CALL_2
0x400c12f	    0x4d8ba7481900	          mov r12, qword [r15 + 0x1948] 	      1586	quickfix.c	FUNCTION_19	IF_2
0x400c136	          0x4d85e4	                           test r12, r12	      1586	quickfix.c	FUNCTION_19	IF_2
0x400c139	     0xf85b1fdffff	                           jne 0x400bef0	      1586	quickfix.c	FUNCTION_19	IF_2
0x400c13f	      0xbfc0040000	                          mov edi, 0x4c0	      1559	quickfix.c	FUNCTION_18	CALL_1
0x400c144	      0xe800000000	                          call 0x400c149	      1559	quickfix.c	FUNCTION_18	CALL_1
0x400c149	          0x4885c0	                           test rax, rax	      1560	quickfix.c	FUNCTION_18	IF_1
0x400c14c	          0x4989c4	                            mov r12, rax	      1559	quickfix.c	FUNCTION_18	CALL_1
0x400c14f	     0xf84b8feffff	                            je 0x400c00d	      1560	quickfix.c	FUNCTION_18	IF_1
0x400c155	        0x488d7808	                      lea rdi, [rax + 8]	        90	string3.h	FUNCTION_118	CALL_6
0x400c159	          0x4889c1	                            mov rcx, rax	        90	string3.h	FUNCTION_118	CALL_6
0x400c15c	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_118	CALL_6
0x400c163	    0x48c780b80400	              mov qword [rax + 0x4b8], 0	        90	string3.h	FUNCTION_118	CALL_6
0x400c16e	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_118	CALL_6
0x400c170	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_118	CALL_6
0x400c174	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_118	CALL_6
0x400c177	    0x81c1c0040000	                          add ecx, 0x4c0	        90	string3.h	FUNCTION_118	CALL_6
0x400c17d	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_118	CALL_6
0x400c180	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_118	CALL_6
0x400c183	      0x4183042401	                      add dword [r12], 1	      1563	quickfix.c	FUNCTION_18	IF_1
0x400c188	    0x4d89a7481900	          mov qword [r15 + 0x1948], r12 	      1587	quickfix.c	FUNCTION_19	CALL_2
0x400c18f	      0xe95cfdffff	                           jmp 0x400bef0	      1587	quickfix.c	FUNCTION_19	CALL_2
0x400c194	         0xf1f4000	                         nop dword [rax]	      1587	quickfix.c	FUNCTION_19	CALL_2
0x400c198	    0x41be00000000	                             mov r14d, 0	      5955	quickfix.c	FUNCTION_109	SWITCH_1
0x400c19e	      0xe9e5fcffff	                           jmp 0x400be88	      5955	quickfix.c	FUNCTION_109	SWITCH_1
0x400c1a3	       0xf1f440000	                   nop dword [rax + rax]	      5955	quickfix.c	FUNCTION_109	SWITCH_1
0x400c1a8	    0x41be00000000	                             mov r14d, 0	      5952	quickfix.c	FUNCTION_109	SWITCH_1
0x400c1ae	      0xe9d5fcffff	                           jmp 0x400be88	      5952	quickfix.c	FUNCTION_109	SWITCH_1
0x400c1b3	       0xf1f440000	                   nop dword [rax + rax]	      5952	quickfix.c	FUNCTION_109	SWITCH_1
0x400c1b8	    0x41be00000000	                             mov r14d, 0	      5953	quickfix.c	FUNCTION_109	SWITCH_1
0x400c1be	      0xe9c5fcffff	                           jmp 0x400be88	      5953	quickfix.c	FUNCTION_109	SWITCH_1
qf_push_dir	functions,0:WHILE,2:DO,0:CALL,11:SWITCH,0:IF,5:ELSE,2:FOR,0	100
0x4000040	            0x4156	                                push r14	      1786	quickfix.c	FUNCTION_22
0x4000042	            0x4155	                                push r13	      1786	quickfix.c	FUNCTION_22
0x4000044	          0x4989fd	                            mov r13, rdi	      1786	quickfix.c	FUNCTION_22
0x4000047	            0x4154	                                push r12	      1786	quickfix.c	FUNCTION_22
0x4000049	              0x55	                                push rbp	      1786	quickfix.c	FUNCTION_22
0x400004a	      0xbf10000000	                           mov edi, 0x10	      1791	quickfix.c	FUNCTION_22	CALL_1
0x400004f	              0x53	                                push rbx	      1786	quickfix.c	FUNCTION_22
0x4000050	          0x4189d6	                           mov r14d, edx	      1786	quickfix.c	FUNCTION_22
0x4000053	          0x4889f3	                            mov rbx, rsi	      1786	quickfix.c	FUNCTION_22
0x4000056	        0x4883ec10	                           sub rsp, 0x10	      1786	quickfix.c	FUNCTION_22
0x400005a	      0xe800000000	                          call 0x400005f	      1791	quickfix.c	FUNCTION_22	CALL_1
0x400005f	          0x4885c0	                           test rax, rax	      1792	quickfix.c	FUNCTION_22	IF_1
0x4000062	     0xf8430010000	                            je 0x4000198	      1792	quickfix.c	FUNCTION_22	IF_1
0x4000068	          0x488b13	                    mov rdx, qword [rbx]	      1795	quickfix.c	FUNCTION_22
0x400006b	          0x4c89ef	                            mov rdi, r13	      1799	quickfix.c	FUNCTION_22	IF_2	CALL_2
0x400006e	          0x488910	                    mov qword [rax], rdx	      1795	quickfix.c	FUNCTION_22
0x4000071	          0x488903	                    mov qword [rbx], rax	      1796	quickfix.c	FUNCTION_22
0x4000074	      0xe800000000	                          call 0x4000079	      1799	quickfix.c	FUNCTION_22	IF_2	CALL_2
0x4000079	            0x85c0	                           test eax, eax	      1799	quickfix.c	FUNCTION_22	IF_2	CALL_2
0x400007b	          0x4c8b23	                    mov r12, qword [rbx]	      1799	quickfix.c	FUNCTION_22	IF_2	CALL_2
0x400007e	     0xf85cc000000	                           jne 0x4000150	      1799	quickfix.c	FUNCTION_22	IF_2	CALL_2
0x4000084	        0x498b2c24	                    mov rbp, qword [r12]	      1800	quickfix.c	FUNCTION_22	IF_2
0x4000088	          0x4885ed	                           test rbp, rbp	      1801	quickfix.c	FUNCTION_22	IF_2
0x400008b	     0xf84bf000000	                            je 0x4000150	      1801	quickfix.c	FUNCTION_22	IF_2
0x4000091	          0x4585f6	                         test r14d, r14d	      1801	quickfix.c	FUNCTION_22	IF_2
0x4000094	     0xf85b6000000	                           jne 0x4000150	      1801	quickfix.c	FUNCTION_22	IF_2
0x400009a	    0x49c744240800	                  mov qword [r12 + 8], 0	      1810	quickfix.c	FUNCTION_22	ELSE_1
0x40000a3	       0xf1f440000	                   nop dword [rax + rax]	      1810	quickfix.c	FUNCTION_22	ELSE_1
0x40000a8	          0x488b03	                    mov rax, qword [rbx]	      1813	quickfix.c	FUNCTION_22	ELSE_1	WHILE_1	CALL_4
0x40000ab	        0x488b7808	                mov rdi, qword [rax + 8]	      1813	quickfix.c	FUNCTION_22	ELSE_1	WHILE_1	CALL_4
0x40000af	      0xe800000000	                          call 0x40000b4	      1813	quickfix.c	FUNCTION_22	ELSE_1	WHILE_1	CALL_4
0x40000b4	          0x4c8b23	                    mov r12, qword [rbx]	      1814	quickfix.c	FUNCTION_22	ELSE_1	WHILE_1	CALL_5
0x40000b7	        0x488b7d08	                mov rdi, qword [rbp + 8]	      1814	quickfix.c	FUNCTION_22	ELSE_1	WHILE_1	CALL_5
0x40000bb	      0xba01000000	                              mov edx, 1	      1814	quickfix.c	FUNCTION_22	ELSE_1	WHILE_1	CALL_5
0x40000c0	          0x4c89ee	                            mov rsi, r13	      1814	quickfix.c	FUNCTION_22	ELSE_1	WHILE_1	CALL_5
0x40000c3	      0xe800000000	                          call 0x40000c8	      1814	quickfix.c	FUNCTION_22	ELSE_1	WHILE_1	CALL_5
0x40000c8	      0x4989442408	                mov qword [r12 + 8], rax	      1814	quickfix.c	FUNCTION_22	ELSE_1	WHILE_1	CALL_5
0x40000cd	          0x488b03	                    mov rax, qword [rbx]	      1816	quickfix.c	FUNCTION_22	ELSE_1	WHILE_1	IF_3	CALL_6
0x40000d0	        0x488b7808	                mov rdi, qword [rax + 8]	      1816	quickfix.c	FUNCTION_22	ELSE_1	WHILE_1	IF_3	CALL_6
0x40000d4	      0xe800000000	                          call 0x40000d9	      1816	quickfix.c	FUNCTION_22	ELSE_1	WHILE_1	IF_3	CALL_6
0x40000d9	          0x83f801	                              cmp eax, 1	      1816	quickfix.c	FUNCTION_22	ELSE_1	WHILE_1	IF_3	CALL_6
0x40000dc	     0xf849e000000	                            je 0x4000180	      1816	quickfix.c	FUNCTION_22	ELSE_1	WHILE_1	IF_3	CALL_6
0x40000e2	        0x488b6d00	                    mov rbp, qword [rbp]	      1819	quickfix.c	FUNCTION_22	ELSE_1	WHILE_1
0x40000e6	          0x4885ed	                           test rbp, rbp	      1811	quickfix.c	FUNCTION_22	ELSE_1	WHILE_1
0x40000e9	            0x75bd	                           jne 0x40000a8	      1811	quickfix.c	FUNCTION_22	ELSE_1	WHILE_1
0x40000eb	          0x488b3b	                    mov rdi, qword [rbx]	      1823	quickfix.c	FUNCTION_22	ELSE_1	WHILE_2
0x40000ee	          0x4c8b27	                    mov r12, qword [rdi]	      1823	quickfix.c	FUNCTION_22	ELSE_1	WHILE_2
0x40000f1	          0x4d85e4	                           test r12, r12	      1823	quickfix.c	FUNCTION_22	ELSE_1	WHILE_2
0x40000f4	            0x7433	                            je 0x4000129	      1823	quickfix.c	FUNCTION_22	ELSE_1	WHILE_2
0x40000f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1823	quickfix.c	FUNCTION_22	ELSE_1	WHILE_2
0x4000100	        0x498b0424	                    mov rax, qword [r12]	      1826	quickfix.c	FUNCTION_22	ELSE_1	WHILE_2
0x4000104	          0x488907	                    mov qword [rdi], rax	      1826	quickfix.c	FUNCTION_22	ELSE_1	WHILE_2
0x4000107	      0x498b7c2408	                mov rdi, qword [r12 + 8]	      1827	quickfix.c	FUNCTION_22	ELSE_1	WHILE_2	CALL_7
0x400010c	      0xe800000000	                          call 0x4000111	      1827	quickfix.c	FUNCTION_22	ELSE_1	WHILE_2	CALL_7
0x4000111	          0x4c89e7	                            mov rdi, r12	      1828	quickfix.c	FUNCTION_22	ELSE_1	WHILE_2	CALL_8
0x4000114	      0xe800000000	                          call 0x4000119	      1828	quickfix.c	FUNCTION_22	ELSE_1	WHILE_2	CALL_8
0x4000119	          0x488b3b	                    mov rdi, qword [rbx]	      1823	quickfix.c	FUNCTION_22	ELSE_1	WHILE_2
0x400011c	          0x4c8b27	                    mov r12, qword [rdi]	      1823	quickfix.c	FUNCTION_22	ELSE_1	WHILE_2
0x400011f	          0x4939ec	                            cmp r12, rbp	      1823	quickfix.c	FUNCTION_22	ELSE_1	WHILE_2
0x4000122	            0x75dc	                           jne 0x4000100	      1823	quickfix.c	FUNCTION_22	ELSE_1	WHILE_2
0x4000124	          0x4d85e4	                           test r12, r12	      1832	quickfix.c	FUNCTION_22	ELSE_1	IF_4
0x4000127	            0x7537	                           jne 0x4000160	      1832	quickfix.c	FUNCTION_22	ELSE_1	IF_4
0x4000129	        0x488b7f08	                mov rdi, qword [rdi + 8]	      1834	quickfix.c	FUNCTION_22	ELSE_1	IF_4	CALL_9
0x400012d	      0xe800000000	                          call 0x4000132	      1834	quickfix.c	FUNCTION_22	ELSE_1	IF_4	CALL_9
0x4000132	          0x488b2b	                    mov rbp, qword [rbx]	      1835	quickfix.c	FUNCTION_22	ELSE_1	IF_4	CALL_10
0x4000135	          0x4c89ef	                            mov rdi, r13	      1835	quickfix.c	FUNCTION_22	ELSE_1	IF_4	CALL_10
0x4000138	      0xe800000000	                          call 0x400013d	      1835	quickfix.c	FUNCTION_22	ELSE_1	IF_4	CALL_10
0x400013d	        0x48894508	                mov qword [rbp + 8], rax	      1835	quickfix.c	FUNCTION_22	ELSE_1	IF_4	CALL_10
0x4000141	          0x488b3b	                    mov rdi, qword [rbx]	      1835	quickfix.c	FUNCTION_22	ELSE_1	IF_4	CALL_10
0x4000144	            0xeb1a	                           jmp 0x4000160	      1835	quickfix.c	FUNCTION_22	ELSE_1	IF_4	CALL_10
0x4000146	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1835	quickfix.c	FUNCTION_22	ELSE_1	IF_4	CALL_10
0x4000150	          0x4c89ef	                            mov rdi, r13	      1802	quickfix.c	FUNCTION_22	CALL_3
0x4000153	      0xe800000000	                          call 0x4000158	      1802	quickfix.c	FUNCTION_22	CALL_3
0x4000158	      0x4989442408	                mov qword [r12 + 8], rax	      1802	quickfix.c	FUNCTION_22	CALL_3
0x400015d	          0x488b3b	                    mov rdi, qword [rbx]	      1802	quickfix.c	FUNCTION_22	CALL_3
0x4000160	        0x488b4708	                mov rax, qword [rdi + 8]	      1839	quickfix.c	FUNCTION_22	IF_5
0x4000164	          0x4885c0	                           test rax, rax	      1839	quickfix.c	FUNCTION_22	IF_5
0x4000167	            0x7433	                            je 0x400019c	      1839	quickfix.c	FUNCTION_22	IF_5
0x4000169	        0x4883c410	                           add rsp, 0x10	      1848	quickfix.c	FUNCTION_22
0x400016d	              0x5b	                                 pop rbx	      1848	quickfix.c	FUNCTION_22
0x400016e	              0x5d	                                 pop rbp	      1848	quickfix.c	FUNCTION_22
0x400016f	            0x415c	                                 pop r12	      1848	quickfix.c	FUNCTION_22
0x4000171	            0x415d	                                 pop r13	      1848	quickfix.c	FUNCTION_22
0x4000173	            0x415e	                                 pop r14	      1848	quickfix.c	FUNCTION_22
0x4000175	              0xc3	                                     ret	      1848	quickfix.c	FUNCTION_22
0x4000176	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1848	quickfix.c	FUNCTION_22
0x4000180	          0x488b3b	                    mov rdi, qword [rbx]	      1823	quickfix.c	FUNCTION_22	ELSE_1	WHILE_2
0x4000183	          0x4c8b27	                    mov r12, qword [rdi]	      1823	quickfix.c	FUNCTION_22	ELSE_1	WHILE_2
0x4000186	          0x4939ec	                            cmp r12, rbp	      1823	quickfix.c	FUNCTION_22	ELSE_1	WHILE_2
0x4000189	     0xf8571ffffff	                           jne 0x4000100	      1823	quickfix.c	FUNCTION_22	ELSE_1	WHILE_2
0x400018f	            0xebcf	                           jmp 0x4000160	      1823	quickfix.c	FUNCTION_22	ELSE_1	WHILE_2
0x4000191	     0xf1f80000000	                         nop dword [rax]	      1823	quickfix.c	FUNCTION_22	ELSE_1	WHILE_2
0x4000198	            0x31c0	                            xor eax, eax	      1793	quickfix.c	FUNCTION_22	IF_1
0x400019a	            0xebcd	                           jmp 0x4000169	      1793	quickfix.c	FUNCTION_22	IF_1
0x400019c	          0x488b17	                    mov rdx, qword [rdi]	      1844	quickfix.c	FUNCTION_22	ELSE_2
0x400019f	      0x4889442408	                mov qword [rsp + 8], rax	      1844	quickfix.c	FUNCTION_22	ELSE_2
0x40001a4	          0x488913	                    mov qword [rbx], rdx	      1844	quickfix.c	FUNCTION_22	ELSE_2
0x40001a7	      0xe800000000	                          call 0x40001ac	      1845	quickfix.c	FUNCTION_22	ELSE_2	CALL_11
0x40001ac	      0x488b442408	                mov rax, qword [rsp + 8]	      1846	quickfix.c	FUNCTION_22	ELSE_2
0x40001b1	            0xebb6	                           jmp 0x4000169	      1846	quickfix.c	FUNCTION_22	ELSE_2
qf_get_size	functions,0:WHILE,0:DO,0:CALL,0:SWITCH,0:IF,5:ELSE,1:FOR,1	69
0x4007510	              0x53	                                push rbx	      3892	quickfix.c	FUNCTION_65
0x4007511	          0x8b5720	            mov edx, dword [rdi + 0x20] 	      3898	quickfix.c	FUNCTION_65	IF_1
0x4007514	          0x4889fb	                            mov rbx, rdi	      3892	quickfix.c	FUNCTION_65
0x4007517	    0x81fad8000000	                           cmp edx, 0xd8	      3898	quickfix.c	FUNCTION_65	IF_1
0x400751d	     0xf849d000000	                            je 0x40075c0	      3898	quickfix.c	FUNCTION_65	IF_1
0x4007523	    0x81fade000000	                           cmp edx, 0xde	      3898	quickfix.c	FUNCTION_65	IF_1
0x4007529	      0xb800000000	                              mov eax, 0	      3893	quickfix.c	FUNCTION_65
0x400752e	     0xf848c000000	                            je 0x40075c0	      3898	quickfix.c	FUNCTION_65	IF_1
0x4007534	        0x48635008	            movsxd rdx, dword [rax + 8] 	      3906	quickfix.c	FUNCTION_65	FOR_1
0x4007538	    0x488d0cd50000	                        lea rcx, [rdx*8]	      3906	quickfix.c	FUNCTION_65	FOR_1
0x4007540	        0x48c1e207	                              shl rdx, 7	      3906	quickfix.c	FUNCTION_65	FOR_1
0x4007544	          0x4829ca	                            sub rdx, rcx	      3906	quickfix.c	FUNCTION_65	FOR_1
0x4007547	          0x4801d0	                            add rax, rdx	      3906	quickfix.c	FUNCTION_65	FOR_1
0x400754a	          0x8b7830	            mov edi, dword [rax + 0x30] 	      3907	quickfix.c	FUNCTION_65	FOR_1
0x400754d	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      3906	quickfix.c	FUNCTION_65	FOR_1
0x4007551	            0x85ff	                           test edi, edi	      3907	quickfix.c	FUNCTION_65	FOR_1
0x4007553	     0xf8ea7000000	                           jle 0x4007600	      3907	quickfix.c	FUNCTION_65	FOR_1
0x4007559	          0x4885d2	                           test rdx, rdx	      3907	quickfix.c	FUNCTION_65	FOR_1
0x400755c	     0xf849e000000	                            je 0x4007600	      3907	quickfix.c	FUNCTION_65	FOR_1
0x4007562	          0x4531c0	                            xor r8d, r8d	      3907	quickfix.c	FUNCTION_65	FOR_1
0x4007565	            0x31c0	                            xor eax, eax	      3907	quickfix.c	FUNCTION_65	FOR_1
0x4007567	            0x31c9	                            xor ecx, ecx	      3907	quickfix.c	FUNCTION_65	FOR_1
0x4007569	            0xeb34	                           jmp 0x400759f	      3907	quickfix.c	FUNCTION_65	FOR_1
0x400756b	       0xf1f440000	                   nop dword [rax + rax]	      3907	quickfix.c	FUNCTION_65	FOR_1
0x4007570	    0x81fed8000000	                           cmp esi, 0xd8	      3912	quickfix.c	FUNCTION_65	FOR_1	IF_3	IF_4
0x4007576	            0x7435	                            je 0x40075ad	      3912	quickfix.c	FUNCTION_65	FOR_1	IF_3	IF_4
0x4007578	          0x8b7218	            mov esi, dword [rdx + 0x18] 	      3914	quickfix.c	FUNCTION_65	FOR_1	IF_3	ELSE_1	IF_5
0x400757b	          0x4439c6	                            cmp esi, r8d	      3914	quickfix.c	FUNCTION_65	FOR_1	IF_3	ELSE_1	IF_5
0x400757e	            0x7410	                            je 0x4007590	      3914	quickfix.c	FUNCTION_65	FOR_1	IF_3	ELSE_1	IF_5
0x4007580	            0x85f6	                           test esi, esi	      3914	quickfix.c	FUNCTION_65	FOR_1	IF_3	ELSE_1	IF_5
0x4007582	            0x7e0c	                           jle 0x4007590	      3914	quickfix.c	FUNCTION_65	FOR_1	IF_3	ELSE_1	IF_5
0x4007584	          0x83c001	                              add eax, 1	      3917	quickfix.c	FUNCTION_65	FOR_1	IF_3	ELSE_1	IF_5
0x4007587	          0x4189f0	                            mov r8d, esi	      3917	quickfix.c	FUNCTION_65	FOR_1	IF_3	ELSE_1	IF_5
0x400758a	    0x660f1f440000	                    nop word [rax + rax]	      3917	quickfix.c	FUNCTION_65	FOR_1	IF_3	ELSE_1	IF_5
0x4007590	          0x83c101	                              add ecx, 1	      3908	quickfix.c	FUNCTION_65	FOR_1
0x4007593	          0x488b12	                    mov rdx, qword [rdx]	      3908	quickfix.c	FUNCTION_65	FOR_1
0x4007596	            0x39f9	                            cmp ecx, edi	      3907	quickfix.c	FUNCTION_65	FOR_1
0x4007598	            0x7d20	                           jge 0x40075ba	      3907	quickfix.c	FUNCTION_65	FOR_1
0x400759a	          0x4885d2	                           test rdx, rdx	      3907	quickfix.c	FUNCTION_65	FOR_1
0x400759d	            0x741b	                            je 0x40075ba	      3907	quickfix.c	FUNCTION_65	FOR_1
0x400759f	        0x807a4300	                cmp byte [rdx + 0x43], 0	      3910	quickfix.c	FUNCTION_65	FOR_1	IF_3
0x40075a3	            0x74eb	                            je 0x4007590	      3910	quickfix.c	FUNCTION_65	FOR_1	IF_3
0x40075a5	          0x8b7320	            mov esi, dword [rbx + 0x20] 	      3912	quickfix.c	FUNCTION_65	FOR_1	IF_3	IF_4
0x40075a8	          0x83fe39	                           cmp esi, 0x39	      3912	quickfix.c	FUNCTION_65	FOR_1	IF_3	IF_4
0x40075ab	            0x75c3	                           jne 0x4007570	      3912	quickfix.c	FUNCTION_65	FOR_1	IF_3	IF_4
0x40075ad	          0x83c101	                              add ecx, 1	      3908	quickfix.c	FUNCTION_65	FOR_1
0x40075b0	          0x83c001	                              add eax, 1	      3913	quickfix.c	FUNCTION_65	FOR_1	IF_3	IF_4
0x40075b3	          0x488b12	                    mov rdx, qword [rdx]	      3908	quickfix.c	FUNCTION_65	FOR_1
0x40075b6	            0x39f9	                            cmp ecx, edi	      3907	quickfix.c	FUNCTION_65	FOR_1
0x40075b8	            0x7ce0	                            jl 0x400759a	      3907	quickfix.c	FUNCTION_65	FOR_1
0x40075ba	              0x5b	                                 pop rbx	      3924	quickfix.c	FUNCTION_65
0x40075bb	              0xc3	                                     ret	      3924	quickfix.c	FUNCTION_65
0x40075bc	         0xf1f4000	                         nop dword [rax]	      3924	quickfix.c	FUNCTION_65
0x40075c0	    0x488b05000000	            mov rax, qword [0x040075c7] 	      3901	quickfix.c	FUNCTION_65	IF_1
0x40075c7	        0x488b7808	                mov rdi, qword [rax + 8]	      3901	quickfix.c	FUNCTION_65	IF_1
0x40075cb	      0xe800000000	                          call 0x40075d0	      3901	quickfix.c	FUNCTION_65	IF_1
0x40075d0	            0x85c0	                           test eax, eax	      3901	quickfix.c	FUNCTION_65	IF_1
0x40075d2	    0x488b15000000	            mov rdx, qword [0x040075d9] 	      3901	quickfix.c	FUNCTION_65	IF_1
0x40075d9	            0x7415	                            je 0x40075f0	      3901	quickfix.c	FUNCTION_65	IF_1
0x40075db	    0x488b82501900	          mov rax, qword [rdx + 0x1950] 	      3901	quickfix.c	FUNCTION_65	IF_1
0x40075e2	          0x4885c0	                           test rax, rax	      3901	quickfix.c	FUNCTION_65	IF_1
0x40075e5	     0xf8549ffffff	                           jne 0x4007534	      3901	quickfix.c	FUNCTION_65	IF_1
0x40075eb	       0xf1f440000	                   nop dword [rax + rax]	      3901	quickfix.c	FUNCTION_65	IF_1
0x40075f0	    0x488b82481900	          mov rax, qword [rdx + 0x1948] 	      3901	quickfix.c	FUNCTION_65	IF_1
0x40075f7	          0x4885c0	                           test rax, rax	      3902	quickfix.c	FUNCTION_65	IF_1	IF_2
0x40075fa	     0xf8534ffffff	                           jne 0x4007534	      3902	quickfix.c	FUNCTION_65	IF_1	IF_2
0x4007600	            0x31c0	                            xor eax, eax	      3903	quickfix.c	FUNCTION_65	IF_1	IF_2
0x4007602	              0x5b	                                 pop rbx	      3924	quickfix.c	FUNCTION_65
0x4007603	              0xc3	                                     ret	      3924	quickfix.c	FUNCTION_65
ex_cfile	functions,0:WHILE,0:DO,0:CALL,12:SWITCH,1:IF,11:ELSE,1:FOR,0	379
0x4007ba0	            0x4157	                                push r15	      4146	quickfix.c	FUNCTION_71
0x4007ba2	            0x4156	                                push r14	      4146	quickfix.c	FUNCTION_71
0x4007ba4	            0x4155	                                push r13	      4146	quickfix.c	FUNCTION_71
0x4007ba6	            0x4154	                                push r12	      4146	quickfix.c	FUNCTION_71
0x4007ba8	          0x4989fd	                            mov r13, rdi	      4146	quickfix.c	FUNCTION_71
0x4007bab	              0x55	                                push rbp	      4146	quickfix.c	FUNCTION_71
0x4007bac	              0x53	                                push rbx	      4146	quickfix.c	FUNCTION_71
0x4007bad	        0x4883ec48	                           sub rsp, 0x48	      4146	quickfix.c	FUNCTION_71
0x4007bb1	          0x8b4720	            mov eax, dword [rdi + 0x20] 	      4154	quickfix.c	FUNCTION_71	SWITCH_1
0x4007bb4	          0x83f83f	                           cmp eax, 0x3f	      4154	quickfix.c	FUNCTION_71	SWITCH_1
0x4007bb7	     0xf8493050000	                            je 0x4008150	      4154	quickfix.c	FUNCTION_71	SWITCH_1
0x4007bbd	            0x7e29	                           jle 0x4007be8	      4154	quickfix.c	FUNCTION_71	SWITCH_1
0x4007bbf	      0x3ddd000000	                           cmp eax, 0xdd	      4154	quickfix.c	FUNCTION_71	SWITCH_1
0x4007bc4	     0xf8446050000	                            je 0x4008110	      4154	quickfix.c	FUNCTION_71	SWITCH_1
0x4007bca	      0x3de0000000	                           cmp eax, 0xe0	      4154	quickfix.c	FUNCTION_71	SWITCH_1
0x4007bcf	     0xf848b050000	                            je 0x4008160	      4154	quickfix.c	FUNCTION_71	SWITCH_1
0x4007bd5	      0x3dd0000000	                           cmp eax, 0xd0	      4154	quickfix.c	FUNCTION_71	SWITCH_1
0x4007bda	     0xf8440050000	                            je 0x4008120	      4154	quickfix.c	FUNCTION_71	SWITCH_1
0x4007be0	          0x4531ff	                          xor r15d, r15d	      4150	quickfix.c	FUNCTION_71
0x4007be3	            0xeb33	                           jmp 0x4007c18	      4150	quickfix.c	FUNCTION_71
0x4007be5	           0xf1f00	                         nop dword [rax]	      4150	quickfix.c	FUNCTION_71
0x4007be8	          0x83f831	                           cmp eax, 0x31	      4154	quickfix.c	FUNCTION_71	SWITCH_1
0x4007beb	     0xf844f050000	                            je 0x4008140	      4154	quickfix.c	FUNCTION_71	SWITCH_1
0x4007bf1	          0x83f83c	                           cmp eax, 0x3c	      4154	quickfix.c	FUNCTION_71	SWITCH_1
0x4007bf4	    0x41bf00000000	                             mov r15d, 0	      4156	quickfix.c	FUNCTION_71	SWITCH_1
0x4007bfa	            0x75e4	                           jne 0x4007be0	      4154	quickfix.c	FUNCTION_71	SWITCH_1
0x4007bfc	         0xf1f4000	                         nop dword [rax]	      4154	quickfix.c	FUNCTION_71	SWITCH_1
0x4007c00	    0x4c8b05000000	              mov r8, qword [0x04007c07]	      4165	quickfix.c	FUNCTION_71	CALL_1
0x4007c07	            0x31c9	                            xor ecx, ecx	      4165	quickfix.c	FUNCTION_71	CALL_1
0x4007c09	            0x31d2	                            xor edx, edx	      4165	quickfix.c	FUNCTION_71	CALL_1
0x4007c0b	          0x4c89fe	                            mov rsi, r15	      4165	quickfix.c	FUNCTION_71	CALL_1
0x4007c0e	      0xbf40000000	                           mov edi, 0x40	      4165	quickfix.c	FUNCTION_71	CALL_1
0x4007c13	      0xe800000000	                          call 0x4007c18	      4165	quickfix.c	FUNCTION_71	CALL_1
0x4007c18	    0x488b05000000	            mov rax, qword [0x04007c1f] 	      4167	quickfix.c	FUNCTION_71
0x4007c1f	    0x8b3500000000	            mov esi, dword [0x04007c25] 	      4170	quickfix.c	FUNCTION_71	IF_2
0x4007c25	    0x4c8bb0281500	          mov r14, qword [rax + 0x1528] 	      4167	quickfix.c	FUNCTION_71
0x4007c2c	        0x41803e00	                       cmp byte [r14], 0	      4167	quickfix.c	FUNCTION_71
0x4007c30	    0x4c0f44350000	           cmove r14, qword [0x04007c38]	      4167	quickfix.c	FUNCTION_71
0x4007c38	            0x85f6	                           test esi, esi	      4170	quickfix.c	FUNCTION_71	IF_2
0x4007c3a	     0xf8530040000	                           jne 0x4008070	      4170	quickfix.c	FUNCTION_71	IF_2
0x4007c40	        0x498b5500	                    mov rdx, qword [r13]	      4182	quickfix.c	FUNCTION_71	ELSE_1	IF_4
0x4007c44	          0x803a00	                       cmp byte [rdx], 0	      4182	quickfix.c	FUNCTION_71	ELSE_1	IF_4
0x4007c47	     0xf85a3040000	                           jne 0x40080f0	      4182	quickfix.c	FUNCTION_71	ELSE_1	IF_4
0x4007c4d	        0x418b4520	            mov eax, dword [r13 + 0x20] 	      4185	quickfix.c	FUNCTION_71	IF_5
0x4007c51	    0x8d9030ffffff	                   lea edx, [rax - 0xd0]	      4185	quickfix.c	FUNCTION_71	IF_5
0x4007c57	          0x83e2ef	                     and edx, 0xffffffef	      4185	quickfix.c	FUNCTION_71	IF_5
0x4007c5a	           0xf94c1	                                 sete cl	      4185	quickfix.c	FUNCTION_71	IF_5
0x4007c5d	      0x3ddd000000	                           cmp eax, 0xdd	      4185	quickfix.c	FUNCTION_71	IF_5
0x4007c62	           0xf94c2	                                 sete dl	      4185	quickfix.c	FUNCTION_71	IF_5
0x4007c65	             0x8d1	                               or cl, dl	      4187	quickfix.c	FUNCTION_71	IF_5
0x4007c67	          0x880c24	                      mov byte [rsp], cl	      4187	quickfix.c	FUNCTION_71	IF_5
0x4007c6a	     0xf8570010000	                           jne 0x4007de0	      4187	quickfix.c	FUNCTION_71	IF_5
0x4007c70	        0x498b5518	            mov rdx, qword [r13 + 0x18] 	      4200	quickfix.c	FUNCTION_71	CALL_8
0x4007c74	          0x83f831	                           cmp eax, 0x31	      4200	quickfix.c	FUNCTION_71	CALL_8
0x4007c77	          0x488b1a	                    mov rbx, qword [rdx]	      4200	quickfix.c	FUNCTION_71	CALL_8
0x4007c7a	           0xf95c2	                                setne dl	      4200	quickfix.c	FUNCTION_71	CALL_8
0x4007c7d	      0x3dd0000000	                           cmp eax, 0xd0	      4200	quickfix.c	FUNCTION_71	CALL_8
0x4007c82	           0xf95c0	                                setne al	      4200	quickfix.c	FUNCTION_71	CALL_8
0x4007c85	           0xfb6c0	                           movzx eax, al	      4200	quickfix.c	FUNCTION_71	CALL_8
0x4007c88	            0x21d0	                            and eax, edx	      4200	quickfix.c	FUNCTION_71	CALL_8
0x4007c8a	      0x48895c2420	             mov qword [rsp + 0x20], rbx	      4200	quickfix.c	FUNCTION_71	CALL_8
0x4007c8f	        0x8944241c	             mov dword [rsp + 0x1c], eax	      4200	quickfix.c	FUNCTION_71	CALL_8
0x4007c93	    0x488b05000000	            mov rax, qword [0x04007c9a] 	      4200	quickfix.c	FUNCTION_71	CALL_8
0x4007c9a	      0x4889442428	             mov qword [rsp + 0x28], rax	      4200	quickfix.c	FUNCTION_71	CALL_8
0x4007c9f	    0x488b05000000	            mov rax, qword [0x04007ca6] 	      4200	quickfix.c	FUNCTION_71	CALL_8
0x4007ca6	      0x4889442430	             mov qword [rsp + 0x30], rax	      4200	quickfix.c	FUNCTION_71	CALL_8
0x4007cab	        0x4883ec08	                              sub rsp, 8	       202	quickfix.c	FUNCTION_1	CALL_2
0x4007caf	    0x488b0d000000	            mov rcx, qword [0x04007cb6] 	       202	quickfix.c	FUNCTION_1	CALL_2
0x4007cb6	    0x8b3500000000	            mov esi, dword [0x04007cbc] 	       202	quickfix.c	FUNCTION_1	CALL_2
0x4007cbc	            0x4156	                                push r14	       202	quickfix.c	FUNCTION_1	CALL_2
0x4007cbe	        0xff742430	                 push qword [rsp + 0x30]	       202	quickfix.c	FUNCTION_1	CALL_2
0x4007cc2	          0x4531c0	                            xor r8d, r8d	       202	quickfix.c	FUNCTION_1	CALL_2
0x4007cc5	            0x6a00	                                  push 0	       202	quickfix.c	FUNCTION_1	CALL_2
0x4007cc7	            0x6a00	                                  push 0	       202	quickfix.c	FUNCTION_1	CALL_2
0x4007cc9	      0xbf00000000	                              mov edi, 0	       202	quickfix.c	FUNCTION_1	CALL_2
0x4007cce	        0x8b442444	            mov eax, dword [rsp + 0x44] 	       202	quickfix.c	FUNCTION_1	CALL_2
0x4007cd2	            0x31db	                            xor ebx, ebx	       202	quickfix.c	FUNCTION_1	CALL_2
0x4007cd4	    0x41be00000000	                             mov r14d, 0	      4149	quickfix.c	FUNCTION_71
0x4007cda	              0x50	                                push rax	       202	quickfix.c	FUNCTION_1	CALL_2
0x4007cdb	      0x4c8b4c2458	              mov r9, qword [rsp + 0x58]	       202	quickfix.c	FUNCTION_1	CALL_2
0x4007ce0	      0x488b542460	            mov rdx, qword [rsp + 0x60] 	       202	quickfix.c	FUNCTION_1	CALL_2
0x4007ce5	      0xe8b6aeffff	                    call sym.qf_init_ext	       202	quickfix.c	FUNCTION_1	CALL_2
0x4007cea	            0x89c5	                            mov ebp, eax	       202	quickfix.c	FUNCTION_1	CALL_2
0x4007cec	            0xf7d0	                                 not eax	       202	quickfix.c	FUNCTION_1	CALL_2
0x4007cee	          0xc1e81f	                           shr eax, 0x1f	       202	quickfix.c	FUNCTION_1	CALL_2
0x4007cf1	        0x89442430	             mov dword [rsp + 0x30], eax	       202	quickfix.c	FUNCTION_1	CALL_2
0x4007cf5	        0x4883c430	                           add rsp, 0x30	       202	quickfix.c	FUNCTION_1	CALL_2
0x4007cf9	        0x803c2400	                       cmp byte [rsp], 0	      4204	quickfix.c	FUNCTION_71	IF_7
0x4007cfd	     0xf851d020000	                           jne 0x4007f20	      4204	quickfix.c	FUNCTION_71	IF_7
0x4007d03	        0x49634608	            movsxd rax, dword [r14 + 8] 	      4204	quickfix.c	FUNCTION_71	IF_7
0x4007d07	    0x488d14c50000	                        lea rdx, [rax*8]	      4207	quickfix.c	FUNCTION_71	IF_8
0x4007d0f	        0x48c1e007	                              shl rax, 7	      4207	quickfix.c	FUNCTION_71	IF_8
0x4007d13	          0x4829d0	                            sub rax, rdx	      4207	quickfix.c	FUNCTION_71	IF_8
0x4007d16	          0x4d85ff	                           test r15, r15	      4208	quickfix.c	FUNCTION_71	IF_9
0x4007d19	      0x458b640610	     mov r12d, dword [r14 + rax + 0x10] 	      4207	quickfix.c	FUNCTION_71	IF_8
0x4007d1e	            0x7421	                            je 0x4007d41	      4208	quickfix.c	FUNCTION_71	IF_9
0x4007d20	    0x4c8b05000000	              mov r8, qword [0x04007d27]	      4209	quickfix.c	FUNCTION_71	CALL_10
0x4007d27	            0x31c9	                            xor ecx, ecx	      4209	quickfix.c	FUNCTION_71	CALL_10
0x4007d29	            0x31d2	                            xor edx, edx	      4209	quickfix.c	FUNCTION_71	CALL_10
0x4007d2b	          0x4c89fe	                            mov rsi, r15	      4209	quickfix.c	FUNCTION_71	CALL_10
0x4007d2e	      0xbf3f000000	                           mov edi, 0x3f	      4209	quickfix.c	FUNCTION_71	CALL_10
0x4007d33	      0xe800000000	                          call 0x4007d38	      4209	quickfix.c	FUNCTION_71	CALL_10
0x4007d38	          0x4d85f6	                           test r14, r14	      4213	quickfix.c	FUNCTION_71	IF_10	CALL_11
0x4007d3b	     0xf849f010000	                            je 0x4007ee0	      4213	quickfix.c	FUNCTION_71	IF_10	CALL_11
0x4007d41	          0x4885db	                           test rbx, rbx	      1962	quickfix.c	FUNCTION_26	IF_1
0x4007d44	     0xf84e6030000	                            je 0x4008130	      1962	quickfix.c	FUNCTION_26	IF_1
0x4007d4a	        0x488b7b08	                mov rdi, qword [rbx + 8]	      1964	quickfix.c	FUNCTION_26	IF_1
0x4007d4e	      0xe800000000	                          call 0x4007d53	      1964	quickfix.c	FUNCTION_26	IF_1
0x4007d53	            0x85c0	                           test eax, eax	      1964	quickfix.c	FUNCTION_26	IF_1
0x4007d55	            0x7471	                            je 0x4007dc8	      1964	quickfix.c	FUNCTION_26	IF_1
0x4007d57	    0x488b8b501900	          mov rcx, qword [rbx + 0x1950] 	      1964	quickfix.c	FUNCTION_26	IF_1
0x4007d5e	          0x4885c9	                           test rcx, rcx	      1964	quickfix.c	FUNCTION_26	IF_1
0x4007d61	            0x7465	                            je 0x4007dc8	      1964	quickfix.c	FUNCTION_26	IF_1
0x4007d63	          0x8b5104	                mov edx, dword [rcx + 4]	      1969	quickfix.c	FUNCTION_26	FOR_1
0x4007d66	            0x85d2	                           test edx, edx	      1969	quickfix.c	FUNCTION_26	FOR_1
0x4007d68	            0x7e49	                           jle 0x4007db3	      1969	quickfix.c	FUNCTION_26	FOR_1
0x4007d6a	        0x443b6110	           cmp r12d, dword [rcx + 0x10] 	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x4007d6e	     0xf846c010000	                            je 0x4007ee0	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x4007d74	          0x83ea01	                              sub edx, 1	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x4007d77	    0x488d81880000	                   lea rax, [rcx + 0x88]	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x4007d7e	    0x488d34d50000	                        lea rsi, [rdx*8]	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x4007d86	        0x48c1e207	                              shl rdx, 7	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x4007d8a	          0x4829f2	                            sub rdx, rsi	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x4007d8d	    0x488d94118800	            lea rdx, [rcx + rdx + 0x88] 	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x4007d95	            0xeb17	                           jmp 0x4007dae	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x4007d97	    0x660f1f840000	                    nop word [rax + rax]	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x4007da0	        0x4883c078	                           add rax, 0x78	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x4007da4	        0x443b6088	            cmp r12d, dword [rax - 0x78]	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x4007da8	     0xf8432010000	                            je 0x4007ee0	      1970	quickfix.c	FUNCTION_26	FOR_1	IF_3
0x4007dae	          0x4839c2	                            cmp rdx, rax	      1969	quickfix.c	FUNCTION_26	FOR_1
0x4007db1	            0x75ed	                           jne 0x4007da0	      1969	quickfix.c	FUNCTION_26	FOR_1
0x4007db3	        0x4883c448	                           add rsp, 0x48	      4217	quickfix.c	FUNCTION_71
0x4007db7	              0x5b	                                 pop rbx	      4217	quickfix.c	FUNCTION_71
0x4007db8	              0x5d	                                 pop rbp	      4217	quickfix.c	FUNCTION_71
0x4007db9	            0x415c	                                 pop r12	      4217	quickfix.c	FUNCTION_71
0x4007dbb	            0x415d	                                 pop r13	      4217	quickfix.c	FUNCTION_71
0x4007dbd	            0x415e	                                 pop r14	      4217	quickfix.c	FUNCTION_71
0x4007dbf	            0x415f	                                 pop r15	      4217	quickfix.c	FUNCTION_71
0x4007dc1	              0xc3	                                     ret	      4217	quickfix.c	FUNCTION_71
0x4007dc2	    0x660f1f440000	                    nop word [rax + rax]	      4217	quickfix.c	FUNCTION_71
0x4007dc8	    0x488b8b481900	          mov rcx, qword [rbx + 0x1948] 	      1964	quickfix.c	FUNCTION_26	IF_1
0x4007dcf	          0x4885c9	                           test rcx, rcx	      1965	quickfix.c	FUNCTION_26	IF_1	IF_2
0x4007dd2	            0x758f	                           jne 0x4007d63	      1965	quickfix.c	FUNCTION_26	IF_1	IF_2
0x4007dd4	            0xebdd	                           jmp 0x4007db3	      1965	quickfix.c	FUNCTION_26	IF_1	IF_2
0x4007dd6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1965	quickfix.c	FUNCTION_26	IF_1	IF_2
0x4007de0	        0x498b5518	            mov rdx, qword [r13 + 0x18] 	      4200	quickfix.c	FUNCTION_71	CALL_8
0x4007de4	          0x83f831	                           cmp eax, 0x31	      4200	quickfix.c	FUNCTION_71	CALL_8
0x4007de7	    0x488b1d000000	            mov rbx, qword [0x04007dee] 	      4188	quickfix.c	FUNCTION_71	IF_5
0x4007dee	          0x488b32	                    mov rsi, qword [rdx]	      4200	quickfix.c	FUNCTION_71	CALL_8
0x4007df1	           0xf95c2	                                setne dl	      4200	quickfix.c	FUNCTION_71	CALL_8
0x4007df4	      0x3dd0000000	                           cmp eax, 0xd0	      4200	quickfix.c	FUNCTION_71	CALL_8
0x4007df9	           0xf95c0	                                setne al	      4200	quickfix.c	FUNCTION_71	CALL_8
0x4007dfc	           0xfb6c0	                           movzx eax, al	      4200	quickfix.c	FUNCTION_71	CALL_8
0x4007dff	            0x21d0	                            and eax, edx	      4200	quickfix.c	FUNCTION_71	CALL_8
0x4007e01	          0x4885db	                           test rbx, rbx	       195	quickfix.c	FUNCTION_1	IF_1
0x4007e04	      0x4889742420	             mov qword [rsp + 0x20], rsi	      4200	quickfix.c	FUNCTION_71	CALL_8
0x4007e09	        0x8944241c	             mov dword [rsp + 0x1c], eax	      4200	quickfix.c	FUNCTION_71	CALL_8
0x4007e0d	    0x488b05000000	            mov rax, qword [0x04007e14] 	      4200	quickfix.c	FUNCTION_71	CALL_8
0x4007e14	      0x4889442428	             mov qword [rsp + 0x28], rax	      4200	quickfix.c	FUNCTION_71	CALL_8
0x4007e19	    0x488b05000000	            mov rax, qword [0x04007e20] 	      4200	quickfix.c	FUNCTION_71	CALL_8
0x4007e20	      0x4889442430	             mov qword [rsp + 0x30], rax	      4200	quickfix.c	FUNCTION_71	CALL_8
0x4007e25	     0xf8480feffff	                            je 0x4007cab	       195	quickfix.c	FUNCTION_1	IF_1
0x4007e2b	        0x488b7b08	                mov rdi, qword [rbx + 8]	      1576	quickfix.c	FUNCTION_19	IF_1
0x4007e2f	      0xe800000000	                          call 0x4007e34	      1576	quickfix.c	FUNCTION_19	IF_1
0x4007e34	            0x85c0	                           test eax, eax	      1576	quickfix.c	FUNCTION_19	IF_1
0x4007e36	     0xf840c010000	                            je 0x4007f48	      1576	quickfix.c	FUNCTION_19	IF_1
0x4007e3c	    0x4c8b93501900	          mov r10, qword [rbx + 0x1950] 	      1576	quickfix.c	FUNCTION_19	IF_1
0x4007e43	          0x4d85d2	                           test r10, r10	      1576	quickfix.c	FUNCTION_19	IF_1
0x4007e46	     0xf84de010000	                            je 0x400802a	      1576	quickfix.c	FUNCTION_19	IF_1
0x4007e4c	        0x4883ec08	                              sub rsp, 8	       202	quickfix.c	FUNCTION_1	CALL_2
0x4007e50	        0x418b7208	                mov esi, dword [r10 + 8]	       202	quickfix.c	FUNCTION_1	CALL_2
0x4007e54	    0x488b0d000000	            mov rcx, qword [0x04007e5b] 	       202	quickfix.c	FUNCTION_1	CALL_2
0x4007e5b	            0x4156	                                push r14	       202	quickfix.c	FUNCTION_1	CALL_2
0x4007e5d	        0xff742430	                 push qword [rsp + 0x30]	       202	quickfix.c	FUNCTION_1	CALL_2
0x4007e61	          0x4531c0	                            xor r8d, r8d	       202	quickfix.c	FUNCTION_1	CALL_2
0x4007e64	            0x6a00	                                  push 0	       202	quickfix.c	FUNCTION_1	CALL_2
0x4007e66	            0x6a00	                                  push 0	       202	quickfix.c	FUNCTION_1	CALL_2
0x4007e68	          0x4c89d7	                            mov rdi, r10	       202	quickfix.c	FUNCTION_1	CALL_2
0x4007e6b	        0x8b442444	            mov eax, dword [rsp + 0x44] 	       202	quickfix.c	FUNCTION_1	CALL_2
0x4007e6f	              0x50	                                push rax	       202	quickfix.c	FUNCTION_1	CALL_2
0x4007e70	      0x4c8b4c2458	              mov r9, qword [rsp + 0x58]	       202	quickfix.c	FUNCTION_1	CALL_2
0x4007e75	      0x488b542460	            mov rdx, qword [rsp + 0x60] 	       202	quickfix.c	FUNCTION_1	CALL_2
0x4007e7a	      0xe821adffff	                    call sym.qf_init_ext	       202	quickfix.c	FUNCTION_1	CALL_2
0x4007e7f	            0x89c5	                            mov ebp, eax	       202	quickfix.c	FUNCTION_1	CALL_2
0x4007e81	            0xf7d0	                                 not eax	       202	quickfix.c	FUNCTION_1	CALL_2
0x4007e83	          0xc1e81f	                           shr eax, 0x1f	       202	quickfix.c	FUNCTION_1	CALL_2
0x4007e86	        0x89442430	             mov dword [rsp + 0x30], eax	       202	quickfix.c	FUNCTION_1	CALL_2
0x4007e8a	        0x4883c430	                           add rsp, 0x30	       202	quickfix.c	FUNCTION_1	CALL_2
0x4007e8e	        0x488b7b08	                mov rdi, qword [rbx + 8]	      4203	quickfix.c	FUNCTION_71	IF_6
0x4007e92	      0xe800000000	                          call 0x4007e97	      4203	quickfix.c	FUNCTION_71	IF_6
0x4007e97	            0x85c0	                           test eax, eax	      4203	quickfix.c	FUNCTION_71	IF_6
0x4007e99	            0x7415	                            je 0x4007eb0	      4203	quickfix.c	FUNCTION_71	IF_6
0x4007e9b	    0x4c8bb3501900	          mov r14, qword [rbx + 0x1950] 	      4203	quickfix.c	FUNCTION_71	IF_6
0x4007ea2	          0x4d85f6	                           test r14, r14	      4203	quickfix.c	FUNCTION_71	IF_6
0x4007ea5	     0xf854efeffff	                           jne 0x4007cf9	      4203	quickfix.c	FUNCTION_71	IF_6
0x4007eab	       0xf1f440000	                   nop dword [rax + rax]	      4203	quickfix.c	FUNCTION_71	IF_6
0x4007eb0	    0x4c8bb3481900	          mov r14, qword [rbx + 0x1948] 	      4203	quickfix.c	FUNCTION_71	IF_6
0x4007eb7	          0x4d85f6	                           test r14, r14	      4204	quickfix.c	FUNCTION_71	IF_7
0x4007eba	            0x7406	                            je 0x4007ec2	      4204	quickfix.c	FUNCTION_71	IF_7
0x4007ebc	        0x803c2400	                       cmp byte [rsp], 0	      4204	quickfix.c	FUNCTION_71	IF_7
0x4007ec0	            0x755e	                           jne 0x4007f20	      4204	quickfix.c	FUNCTION_71	IF_7
0x4007ec2	          0x4d85f6	                           test r14, r14	      4206	quickfix.c	FUNCTION_71	IF_8
0x4007ec5	     0xf8538feffff	                           jne 0x4007d03	      4206	quickfix.c	FUNCTION_71	IF_8
0x4007ecb	          0x4531e4	                          xor r12d, r12d	      4151	quickfix.c	FUNCTION_71
0x4007ece	          0x4d85ff	                           test r15, r15	      4208	quickfix.c	FUNCTION_71	IF_9
0x4007ed1	     0xf8549feffff	                           jne 0x4007d20	      4208	quickfix.c	FUNCTION_71	IF_9
0x4007ed7	    0x660f1f840000	                    nop word [rax + rax]	      4208	quickfix.c	FUNCTION_71	IF_9
0x4007ee0	            0x85ed	                           test ebp, ebp	      4215	quickfix.c	FUNCTION_71	IF_11
0x4007ee2	     0xf8ecbfeffff	                           jle 0x4007db3	      4215	quickfix.c	FUNCTION_71	IF_11
0x4007ee8	        0x418b4520	            mov eax, dword [r13 + 0x20] 	      4215	quickfix.c	FUNCTION_71	IF_11
0x4007eec	          0x83f83c	                           cmp eax, 0x3c	      4215	quickfix.c	FUNCTION_71	IF_11
0x4007eef	            0x740b	                            je 0x4007efc	      4215	quickfix.c	FUNCTION_71	IF_11
0x4007ef1	      0x3ddd000000	                           cmp eax, 0xdd	      4215	quickfix.c	FUNCTION_71	IF_11
0x4007ef6	     0xf85b7feffff	                           jne 0x4007db3	      4215	quickfix.c	FUNCTION_71	IF_11
0x4007efc	        0x418b5534	            mov edx, dword [r13 + 0x34] 	      4216	quickfix.c	FUNCTION_71	CALL_12
0x4007f00	        0x4883c448	                           add rsp, 0x48	      4217	quickfix.c	FUNCTION_71
0x4007f04	          0x4c89f7	                            mov rdi, r14	      4216	quickfix.c	FUNCTION_71	CALL_12
0x4007f07	              0x5b	                                 pop rbx	      4217	quickfix.c	FUNCTION_71
0x4007f08	              0x5d	                                 pop rbp	      4217	quickfix.c	FUNCTION_71
0x4007f09	            0x415c	                                 pop r12	      4217	quickfix.c	FUNCTION_71
0x4007f0b	            0x415d	                                 pop r13	      4217	quickfix.c	FUNCTION_71
0x4007f0d	            0x415e	                                 pop r14	      4217	quickfix.c	FUNCTION_71
0x4007f0f	            0x415f	                                 pop r15	      4217	quickfix.c	FUNCTION_71
0x4007f11	            0x31f6	                            xor esi, esi	      4216	quickfix.c	FUNCTION_71	CALL_12
0x4007f13	      0xe9a8a0ffff	             jmp sym.qf_jump.constprop.7	      4216	quickfix.c	FUNCTION_71	CALL_12
0x4007f18	     0xf1f84000000	                   nop dword [rax + rax]	      4216	quickfix.c	FUNCTION_71	CALL_12
0x4007f20	        0x49634608	            movsxd rax, dword [r14 + 8] 	      3701	quickfix.c	FUNCTION_61
0x4007f24	    0x488d0cc50000	                        lea rcx, [rax*8]	      3701	quickfix.c	FUNCTION_61
0x4007f2c	          0x4889c2	                            mov rdx, rax	      3701	quickfix.c	FUNCTION_61
0x4007f2f	        0x48c1e207	                              shl rdx, 7	      3701	quickfix.c	FUNCTION_61
0x4007f33	          0x4829ca	                            sub rdx, rcx	      3701	quickfix.c	FUNCTION_61
0x4007f36	    0x498384168000	         add qword [r14 + rdx + 0x80], 1	      3701	quickfix.c	FUNCTION_61
0x4007f3f	      0xe9c3fdffff	                           jmp 0x4007d07	      3701	quickfix.c	FUNCTION_61
0x4007f44	         0xf1f4000	                         nop dword [rax]	      3701	quickfix.c	FUNCTION_61
0x4007f48	    0x488bab501900	          mov rbp, qword [rbx + 0x1950] 	      3701	quickfix.c	FUNCTION_61
0x4007f4f	          0x4885ed	                           test rbp, rbp	      1422	quickfix.c	FUNCTION_15	IF_1
0x4007f52	     0xf84d2000000	                            je 0x400802a	      1422	quickfix.c	FUNCTION_15	IF_1
0x4007f58	          0x8b4500	                    mov eax, dword [rbp]	      1426	quickfix.c	FUNCTION_15
0x4007f5b	    0x48c783501900	            mov qword [rbx + 0x1950], 0 	      1424	quickfix.c	FUNCTION_15
0x4007f66	          0x83e801	                              sub eax, 1	      1426	quickfix.c	FUNCTION_15
0x4007f69	            0x85c0	                           test eax, eax	      1427	quickfix.c	FUNCTION_15	IF_2
0x4007f6b	          0x894500	                    mov dword [rbp], eax	      1426	quickfix.c	FUNCTION_15
0x4007f6e	     0xf8fb6000000	                            jg 0x400802a	      1427	quickfix.c	FUNCTION_15	IF_2
0x4007f74	          0x8b4504	                mov eax, dword [rbp + 4]	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x4007f77	          0x4531e4	                          xor r12d, r12d	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x4007f7a	            0x85c0	                           test eax, eax	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x4007f7c	     0xf8ea0000000	                           jle 0x4008022	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x4007f82	    0x660f1f440000	                    nop word [rax + rax]	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x4007f88	          0x4889ef	                            mov rdi, rbp	      3031	quickfix.c	FUNCTION_44	CALL_1
0x4007f8b	          0x4489e6	                           mov esi, r12d	      3031	quickfix.c	FUNCTION_44	CALL_1
0x4007f8e	      0xe8fd8cffff	                  call sym.qf_free_items	      3031	quickfix.c	FUNCTION_44	CALL_1
0x4007f93	          0x4963c4	                        movsxd rax, r12d	      3033	quickfix.c	FUNCTION_44	CALL_2
0x4007f96	    0x488d0cc50000	                        lea rcx, [rax*8]	      3033	quickfix.c	FUNCTION_44	CALL_2
0x4007f9e	          0x4889c2	                            mov rdx, rax	      3033	quickfix.c	FUNCTION_44	CALL_2
0x4007fa1	        0x48c1e207	                              shl rdx, 7	      3033	quickfix.c	FUNCTION_44	CALL_2
0x4007fa5	          0x4829ca	                            sub rdx, rcx	      3033	quickfix.c	FUNCTION_44	CALL_2
0x4007fa8	          0x4801ea	                            add rdx, rbp	      3033	quickfix.c	FUNCTION_44	CALL_2
0x4007fab	        0x488b7a40	            mov rdi, qword [rdx + 0x40] 	      3033	quickfix.c	FUNCTION_44	CALL_2
0x4007faf	      0x4889542410	             mov qword [rsp + 0x10], rdx	      3033	quickfix.c	FUNCTION_44	CALL_2
0x4007fb4	          0x4885ff	                           test rdi, rdi	      3033	quickfix.c	FUNCTION_44	CALL_2
0x4007fb7	            0x741c	                            je 0x4007fd5	      3033	quickfix.c	FUNCTION_44	CALL_2
0x4007fb9	      0x4889442438	             mov qword [rsp + 0x38], rax	      3033	quickfix.c	FUNCTION_44	CALL_2
0x4007fbe	      0xe800000000	                          call 0x4007fc3	      3033	quickfix.c	FUNCTION_44	CALL_2
0x4007fc3	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      3033	quickfix.c	FUNCTION_44	CALL_2
0x4007fc8	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      3033	quickfix.c	FUNCTION_44	CALL_2
0x4007fcd	    0x48c742400000	               mov qword [rdx + 0x40], 0	      3033	quickfix.c	FUNCTION_44	CALL_2
0x4007fd5	    0x488d14c50000	                        lea rdx, [rax*8]	      3034	quickfix.c	FUNCTION_44	CALL_3
0x4007fdd	        0x48c1e007	                              shl rax, 7	      3034	quickfix.c	FUNCTION_44	CALL_3
0x4007fe1	        0x4183c401	                             add r12d, 1	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x4007fe5	          0x4829d0	                            sub rax, rdx	      3034	quickfix.c	FUNCTION_44	CALL_3
0x4007fe8	          0x4801e8	                            add rax, rbp	      3034	quickfix.c	FUNCTION_44	CALL_3
0x4007feb	        0x488b7848	            mov rdi, qword [rax + 0x48] 	      3034	quickfix.c	FUNCTION_44	CALL_3
0x4007fef	      0x4889442410	             mov qword [rsp + 0x10], rax	      3034	quickfix.c	FUNCTION_44	CALL_3
0x4007ff4	      0xe800000000	                          call 0x4007ff9	      3034	quickfix.c	FUNCTION_44	CALL_3
0x4007ff9	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3035	quickfix.c	FUNCTION_44
0x4007ffe	    0x48c740480000	               mov qword [rax + 0x48], 0	      3035	quickfix.c	FUNCTION_44
0x4008006	    0xc74010000000	               mov dword [rax + 0x10], 0	      3036	quickfix.c	FUNCTION_44
0x400800d	    0x48c780800000	               mov qword [rax + 0x80], 0	      3037	quickfix.c	FUNCTION_44
0x4008018	        0x443b6504	               cmp r12d, dword [rbp + 4]	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400801c	     0xf8c66ffffff	                            jl 0x4007f88	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x4008022	          0x4889ef	                            mov rdi, rbp	      1432	quickfix.c	FUNCTION_15	IF_2	CALL_2
0x4008025	      0xe800000000	                          call 0x400802a	      1432	quickfix.c	FUNCTION_15	IF_2	CALL_2
0x400802a	    0x488bab481900	          mov rbp, qword [rbx + 0x1948] 	      1586	quickfix.c	FUNCTION_19	IF_2
0x4008031	          0x4885ed	                           test rbp, rbp	      1586	quickfix.c	FUNCTION_19	IF_2
0x4008034	     0xf8431010000	                            je 0x400816b	      1586	quickfix.c	FUNCTION_19	IF_2
0x400803a	        0x4883ec08	                              sub rsp, 8	       202	quickfix.c	FUNCTION_1	CALL_2
0x400803e	          0x8b7508	                mov esi, dword [rbp + 8]	       202	quickfix.c	FUNCTION_1	CALL_2
0x4008041	          0x4531c0	                            xor r8d, r8d	       202	quickfix.c	FUNCTION_1	CALL_2
0x4008044	            0x4156	                                push r14	       202	quickfix.c	FUNCTION_1	CALL_2
0x4008046	        0xff742430	                 push qword [rsp + 0x30]	       202	quickfix.c	FUNCTION_1	CALL_2
0x400804a	          0x4889ef	                            mov rdi, rbp	       202	quickfix.c	FUNCTION_1	CALL_2
0x400804d	            0x6a00	                                  push 0	       202	quickfix.c	FUNCTION_1	CALL_2
0x400804f	            0x6a00	                                  push 0	       202	quickfix.c	FUNCTION_1	CALL_2
0x4008051	        0x8b442444	            mov eax, dword [rsp + 0x44] 	       202	quickfix.c	FUNCTION_1	CALL_2
0x4008055	    0x488b0d000000	            mov rcx, qword [0x0400805c] 	       202	quickfix.c	FUNCTION_1	CALL_2
0x400805c	              0x50	                                push rax	       202	quickfix.c	FUNCTION_1	CALL_2
0x400805d	      0x4c8b4c2458	              mov r9, qword [rsp + 0x58]	       202	quickfix.c	FUNCTION_1	CALL_2
0x4008062	      0x488b542460	            mov rdx, qword [rsp + 0x60] 	       202	quickfix.c	FUNCTION_1	CALL_2
0x4008067	      0xe90efeffff	                           jmp 0x4007e7a	       202	quickfix.c	FUNCTION_1	CALL_2
0x400806c	         0xf1f4000	                         nop dword [rax]	       202	quickfix.c	FUNCTION_1	CALL_2
0x4008070	            0x31ff	                            xor edi, edi	      4174	quickfix.c	FUNCTION_71	IF_2	CALL_4
0x4008072	      0xba05000000	                              mov edx, 5	      4174	quickfix.c	FUNCTION_71	IF_2	CALL_4
0x4008077	      0xbe00000000	                              mov esi, 0	      4174	quickfix.c	FUNCTION_71	IF_2	CALL_4
0x400807c	      0xe800000000	                          call 0x4008081	      4174	quickfix.c	FUNCTION_71	IF_2	CALL_4
0x4008081	        0x498b5d00	                    mov rbx, qword [r13]	      4172	quickfix.c	FUNCTION_71	IF_2	CALL_3
0x4008085	            0x31ff	                            xor edi, edi	      4172	quickfix.c	FUNCTION_71	IF_2	CALL_3
0x4008087	      0xba05000000	                              mov edx, 5	      4172	quickfix.c	FUNCTION_71	IF_2	CALL_3
0x400808c	      0xbe00000000	                              mov esi, 0	      4172	quickfix.c	FUNCTION_71	IF_2	CALL_3
0x4008091	          0x4889c5	                            mov rbp, rax	      4174	quickfix.c	FUNCTION_71	IF_2	CALL_4
0x4008094	      0xe800000000	                          call 0x4008099	      4172	quickfix.c	FUNCTION_71	IF_2	CALL_3
0x4008099	        0x4883ec08	                              sub rsp, 8	      4172	quickfix.c	FUNCTION_71	IF_2	CALL_3
0x400809d	            0x31c9	                            xor ecx, ecx	      4172	quickfix.c	FUNCTION_71	IF_2	CALL_3
0x400809f	          0x4889da	                            mov rdx, rbx	      4172	quickfix.c	FUNCTION_71	IF_2	CALL_3
0x40080a2	            0x6a00	                                  push 0	      4172	quickfix.c	FUNCTION_71	IF_2	CALL_3
0x40080a4	          0x4531c0	                            xor r8d, r8d	      4172	quickfix.c	FUNCTION_71	IF_2	CALL_3
0x40080a7	            0x31ff	                            xor edi, edi	      4172	quickfix.c	FUNCTION_71	IF_2	CALL_3
0x40080a9	          0x4989e9	                             mov r9, rbp	      4172	quickfix.c	FUNCTION_71	IF_2	CALL_3
0x40080ac	          0x4889c6	                            mov rsi, rax	      4172	quickfix.c	FUNCTION_71	IF_2	CALL_3
0x40080af	      0xe800000000	                          call 0x40080b4	      4172	quickfix.c	FUNCTION_71	IF_2	CALL_3
0x40080b4	          0x4885c0	                           test rax, rax	      4175	quickfix.c	FUNCTION_71	IF_2	IF_3
0x40080b7	          0x4889c3	                            mov rbx, rax	      4172	quickfix.c	FUNCTION_71	IF_2	CALL_3
0x40080ba	              0x5a	                                 pop rdx	      4175	quickfix.c	FUNCTION_71	IF_2	IF_3
0x40080bb	              0x59	                                 pop rcx	      4175	quickfix.c	FUNCTION_71	IF_2	IF_3
0x40080bc	     0xf84f1fcffff	                            je 0x4007db3	      4175	quickfix.c	FUNCTION_71	IF_2	IF_3
0x40080c2	          0x4531c0	                            xor r8d, r8d	      4177	quickfix.c	FUNCTION_71	IF_2	CALL_5
0x40080c5	      0xb901000000	                              mov ecx, 1	      4177	quickfix.c	FUNCTION_71	IF_2	CALL_5
0x40080ca	          0x4889c2	                            mov rdx, rax	      4177	quickfix.c	FUNCTION_71	IF_2	CALL_5
0x40080cd	      0xbeffffffff	                     mov esi, 0xffffffff	      4177	quickfix.c	FUNCTION_71	IF_2	CALL_5
0x40080d2	      0xbf00000000	                              mov edi, 0	      4177	quickfix.c	FUNCTION_71	IF_2	CALL_5
0x40080d7	      0xe800000000	                          call 0x40080dc	      4177	quickfix.c	FUNCTION_71	IF_2	CALL_5
0x40080dc	          0x4889df	                            mov rdi, rbx	      4178	quickfix.c	FUNCTION_71	IF_2	CALL_6
0x40080df	      0xe800000000	                          call 0x40080e4	      4178	quickfix.c	FUNCTION_71	IF_2	CALL_6
0x40080e4	      0xe964fbffff	                           jmp 0x4007c4d	      4178	quickfix.c	FUNCTION_71	IF_2	CALL_6
0x40080e9	     0xf1f80000000	                         nop dword [rax]	      4178	quickfix.c	FUNCTION_71	IF_2	CALL_6
0x40080f0	          0x4531c0	                            xor r8d, r8d	      4183	quickfix.c	FUNCTION_71	ELSE_1	IF_4
0x40080f3	      0xb901000000	                              mov ecx, 1	      4183	quickfix.c	FUNCTION_71	ELSE_1	IF_4
0x40080f8	      0xbeffffffff	                     mov esi, 0xffffffff	      4183	quickfix.c	FUNCTION_71	ELSE_1	IF_4
0x40080fd	      0xbf00000000	                              mov edi, 0	      4183	quickfix.c	FUNCTION_71	ELSE_1	IF_4
0x4008102	      0xe800000000	                          call 0x4008107	      4183	quickfix.c	FUNCTION_71	ELSE_1	IF_4
0x4008107	      0xe941fbffff	                           jmp 0x4007c4d	      4183	quickfix.c	FUNCTION_71	ELSE_1	IF_4
0x400810c	         0xf1f4000	                         nop dword [rax]	      4183	quickfix.c	FUNCTION_71	ELSE_1	IF_4
0x4008110	    0x41bf00000000	                             mov r15d, 0	      4159	quickfix.c	FUNCTION_71	SWITCH_1
0x4008116	      0xe9e5faffff	                           jmp 0x4007c00	      4159	quickfix.c	FUNCTION_71	SWITCH_1
0x400811b	       0xf1f440000	                   nop dword [rax + rax]	      4159	quickfix.c	FUNCTION_71	SWITCH_1
0x4008120	    0x41bf00000000	                             mov r15d, 0	      4161	quickfix.c	FUNCTION_71	SWITCH_1
0x4008126	      0xe9d5faffff	                           jmp 0x4007c00	      4161	quickfix.c	FUNCTION_71	SWITCH_1
0x400812b	       0xf1f440000	                   nop dword [rax + rax]	      4161	quickfix.c	FUNCTION_71	SWITCH_1
0x4008130	      0xb900000000	                              mov ecx, 0	      1959	quickfix.c	FUNCTION_26
0x4008135	      0xe929fcffff	                           jmp 0x4007d63	      1959	quickfix.c	FUNCTION_26
0x400813a	    0x660f1f440000	                    nop word [rax + rax]	      1959	quickfix.c	FUNCTION_26
0x4008140	    0x41bf00000000	                             mov r15d, 0	      4158	quickfix.c	FUNCTION_71	SWITCH_1
0x4008146	      0xe9b5faffff	                           jmp 0x4007c00	      4158	quickfix.c	FUNCTION_71	SWITCH_1
0x400814b	       0xf1f440000	                   nop dword [rax + rax]	      4158	quickfix.c	FUNCTION_71	SWITCH_1
0x4008150	    0x41bf00000000	                             mov r15d, 0	      4157	quickfix.c	FUNCTION_71	SWITCH_1
0x4008156	      0xe9a5faffff	                           jmp 0x4007c00	      4157	quickfix.c	FUNCTION_71	SWITCH_1
0x400815b	       0xf1f440000	                   nop dword [rax + rax]	      4157	quickfix.c	FUNCTION_71	SWITCH_1
0x4008160	    0x41bf00000000	                             mov r15d, 0	      4160	quickfix.c	FUNCTION_71	SWITCH_1
0x4008166	      0xe995faffff	                           jmp 0x4007c00	      4160	quickfix.c	FUNCTION_71	SWITCH_1
0x400816b	      0xbfc0040000	                          mov edi, 0x4c0	      1559	quickfix.c	FUNCTION_18	CALL_1
0x4008170	      0xe800000000	                          call 0x4008175	      1559	quickfix.c	FUNCTION_18	CALL_1
0x4008175	          0x4885c0	                           test rax, rax	      1560	quickfix.c	FUNCTION_18	IF_1
0x4008178	          0x4989c2	                            mov r10, rax	      1559	quickfix.c	FUNCTION_18	CALL_1
0x400817b	            0x743f	                            je 0x40081bc	      1560	quickfix.c	FUNCTION_18	IF_1
0x400817d	        0x488d7808	                      lea rdi, [rax + 8]	        90	string3.h	FUNCTION_118	CALL_6
0x4008181	          0x4889c1	                            mov rcx, rax	        90	string3.h	FUNCTION_118	CALL_6
0x4008184	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_118	CALL_6
0x400818b	    0x48c780b80400	              mov qword [rax + 0x4b8], 0	        90	string3.h	FUNCTION_118	CALL_6
0x4008196	          0x4889e8	                            mov rax, rbp	        90	string3.h	FUNCTION_118	CALL_6
0x4008199	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_118	CALL_6
0x400819d	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_118	CALL_6
0x40081a0	    0x81c1c0040000	                          add ecx, 0x4c0	        90	string3.h	FUNCTION_118	CALL_6
0x40081a6	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_118	CALL_6
0x40081a9	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_118	CALL_6
0x40081ac	        0x41830201	                      add dword [r10], 1	      1563	quickfix.c	FUNCTION_18	IF_1
0x40081b0	    0x4c8993481900	          mov qword [rbx + 0x1948], r10 	      1587	quickfix.c	FUNCTION_19	CALL_2
0x40081b7	      0xe990fcffff	                           jmp 0x4007e4c	      1587	quickfix.c	FUNCTION_19	CALL_2
0x40081bc	    0x48c783481900	            mov qword [rbx + 0x1948], 0 	      1587	quickfix.c	FUNCTION_19	CALL_2
0x40081c7	            0x31ed	                            xor ebp, ebp	       199	quickfix.c	FUNCTION_1	IF_1	IF_2
0x40081c9	      0xe9c0fcffff	                           jmp 0x4007e8e	       199	quickfix.c	FUNCTION_1	IF_1	IF_2
qf_get_cur_valid_idx	functions,0:WHILE,0:DO,0:CALL,0:SWITCH,0:IF,6:ELSE,1:FOR,1	78
0x4007690	              0x53	                                push rbx	      3952	quickfix.c	FUNCTION_67
0x4007691	          0x8b5720	            mov edx, dword [rdi + 0x20] 	      3959	quickfix.c	FUNCTION_67	IF_1
0x4007694	          0x4889fb	                            mov rbx, rdi	      3952	quickfix.c	FUNCTION_67
0x4007697	    0x81fad8000000	                           cmp edx, 0xd8	      3959	quickfix.c	FUNCTION_67	IF_1
0x400769d	     0xf84bd000000	                            je 0x4007760	      3959	quickfix.c	FUNCTION_67	IF_1
0x40076a3	    0x81fade000000	                           cmp edx, 0xde	      3959	quickfix.c	FUNCTION_67	IF_1
0x40076a9	      0xb800000000	                              mov eax, 0	      3953	quickfix.c	FUNCTION_67
0x40076ae	     0xf84ac000000	                            je 0x4007760	      3959	quickfix.c	FUNCTION_67	IF_1
0x40076b4	        0x48635008	            movsxd rdx, dword [rax + 8] 	      3971	quickfix.c	FUNCTION_67	IF_3
0x40076b8	    0x488d0cd50000	                        lea rcx, [rdx*8]	      3971	quickfix.c	FUNCTION_67	IF_3
0x40076c0	        0x48c1e207	                              shl rdx, 7	      3971	quickfix.c	FUNCTION_67	IF_3
0x40076c4	          0x4829ca	                            sub rdx, rcx	      3971	quickfix.c	FUNCTION_67	IF_3
0x40076c7	          0x4801d0	                            add rax, rdx	      3971	quickfix.c	FUNCTION_67	IF_3
0x40076ca	          0x8b4830	            mov ecx, dword [rax + 0x30] 	      3971	quickfix.c	FUNCTION_67	IF_3
0x40076cd	            0x85c9	                           test ecx, ecx	      3971	quickfix.c	FUNCTION_67	IF_3
0x40076cf	     0xf8eb6000000	                           jle 0x400778b	      3971	quickfix.c	FUNCTION_67	IF_3
0x40076d5	          0x8b5038	            mov edx, dword [rax + 0x38] 	      3971	quickfix.c	FUNCTION_67	IF_3
0x40076d8	            0x85d2	                           test edx, edx	      3971	quickfix.c	FUNCTION_67	IF_3
0x40076da	     0xf85ab000000	                           jne 0x400778b	      3971	quickfix.c	FUNCTION_67	IF_3
0x40076e0	          0x8b7834	            mov edi, dword [rax + 0x34] 	      3974	quickfix.c	FUNCTION_67	FOR_1
0x40076e3	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      3968	quickfix.c	FUNCTION_67
0x40076e7	            0x85ff	                           test edi, edi	      3974	quickfix.c	FUNCTION_67	FOR_1
0x40076e9	     0xf8e9c000000	                           jle 0x400778b	      3974	quickfix.c	FUNCTION_67	FOR_1
0x40076ef	          0x4885d2	                           test rdx, rdx	      3974	quickfix.c	FUNCTION_67	FOR_1
0x40076f2	     0xf8493000000	                            je 0x400778b	      3974	quickfix.c	FUNCTION_67	FOR_1
0x40076f8	          0x4531c0	                            xor r8d, r8d	      3974	quickfix.c	FUNCTION_67	FOR_1
0x40076fb	            0x31c0	                            xor eax, eax	      3974	quickfix.c	FUNCTION_67	FOR_1
0x40076fd	      0xb901000000	                              mov ecx, 1	      3974	quickfix.c	FUNCTION_67	FOR_1
0x4007702	            0xeb1e	                           jmp 0x4007722	      3974	quickfix.c	FUNCTION_67	FOR_1
0x4007704	         0xf1f4000	                         nop dword [rax]	      3974	quickfix.c	FUNCTION_67	FOR_1
0x4007708	    0x81fede000000	                           cmp esi, 0xde	      3978	quickfix.c	FUNCTION_67	FOR_1	IF_4	IF_5
0x400770e	            0x7420	                            je 0x4007730	      3978	quickfix.c	FUNCTION_67	FOR_1	IF_4	IF_5
0x4007710	          0x83c001	                              add eax, 1	      3988	quickfix.c	FUNCTION_67	FOR_1	IF_4	ELSE_1
0x4007713	          0x83c101	                              add ecx, 1	      3974	quickfix.c	FUNCTION_67	FOR_1
0x4007716	          0x488b12	                    mov rdx, qword [rdx]	      3974	quickfix.c	FUNCTION_67	FOR_1
0x4007719	            0x39f9	                            cmp ecx, edi	      3974	quickfix.c	FUNCTION_67	FOR_1
0x400771b	            0x7f33	                            jg 0x4007750	      3974	quickfix.c	FUNCTION_67	FOR_1
0x400771d	          0x4885d2	                           test rdx, rdx	      3974	quickfix.c	FUNCTION_67	FOR_1
0x4007720	            0x742e	                            je 0x4007750	      3974	quickfix.c	FUNCTION_67	FOR_1
0x4007722	        0x807a4300	                cmp byte [rdx + 0x43], 0	      3976	quickfix.c	FUNCTION_67	FOR_1	IF_4
0x4007726	            0x74eb	                            je 0x4007713	      3976	quickfix.c	FUNCTION_67	FOR_1	IF_4
0x4007728	          0x8b7320	            mov esi, dword [rbx + 0x20] 	      3978	quickfix.c	FUNCTION_67	FOR_1	IF_4	IF_5
0x400772b	          0x83fe3d	                           cmp esi, 0x3d	      3978	quickfix.c	FUNCTION_67	FOR_1	IF_4	IF_5
0x400772e	            0x75d8	                           jne 0x4007708	      3978	quickfix.c	FUNCTION_67	FOR_1	IF_4	IF_5
0x4007730	          0x8b7218	            mov esi, dword [rdx + 0x18] 	      3980	quickfix.c	FUNCTION_67	FOR_1	IF_4	IF_5	IF_6
0x4007733	          0x4439c6	                            cmp esi, r8d	      3980	quickfix.c	FUNCTION_67	FOR_1	IF_4	IF_5	IF_6
0x4007736	            0x74db	                            je 0x4007713	      3980	quickfix.c	FUNCTION_67	FOR_1	IF_4	IF_5	IF_6
0x4007738	            0x85f6	                           test esi, esi	      3980	quickfix.c	FUNCTION_67	FOR_1	IF_4	IF_5	IF_6
0x400773a	            0x7ed7	                           jle 0x4007713	      3980	quickfix.c	FUNCTION_67	FOR_1	IF_4	IF_5	IF_6
0x400773c	          0x83c101	                              add ecx, 1	      3974	quickfix.c	FUNCTION_67	FOR_1
0x400773f	          0x83c001	                              add eax, 1	      3983	quickfix.c	FUNCTION_67	FOR_1	IF_4	IF_5	IF_6
0x4007742	          0x4189f0	                            mov r8d, esi	      3983	quickfix.c	FUNCTION_67	FOR_1	IF_4	IF_5	IF_6
0x4007745	            0x39f9	                            cmp ecx, edi	      3974	quickfix.c	FUNCTION_67	FOR_1
0x4007747	          0x488b12	                    mov rdx, qword [rdx]	      3974	quickfix.c	FUNCTION_67	FOR_1
0x400774a	            0x7ed1	                           jle 0x400771d	      3974	quickfix.c	FUNCTION_67	FOR_1
0x400774c	         0xf1f4000	                         nop dword [rax]	      3974	quickfix.c	FUNCTION_67	FOR_1
0x4007750	            0x85c0	                           test eax, eax	      3992	quickfix.c	FUNCTION_67	ELSE_1
0x4007752	            0x7437	                            je 0x400778b	      3992	quickfix.c	FUNCTION_67	ELSE_1
0x4007754	              0x5b	                                 pop rbx	      3993	quickfix.c	FUNCTION_67	ELSE_1
0x4007755	              0xc3	                                     ret	      3993	quickfix.c	FUNCTION_67	ELSE_1
0x4007756	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3993	quickfix.c	FUNCTION_67	ELSE_1
0x4007760	    0x488b05000000	            mov rax, qword [0x04007767] 	      3962	quickfix.c	FUNCTION_67	IF_1
0x4007767	        0x488b7808	                mov rdi, qword [rax + 8]	      3962	quickfix.c	FUNCTION_67	IF_1
0x400776b	      0xe800000000	                          call 0x4007770	      3962	quickfix.c	FUNCTION_67	IF_1
0x4007770	            0x85c0	                           test eax, eax	      3962	quickfix.c	FUNCTION_67	IF_1
0x4007772	    0x488b15000000	            mov rdx, qword [0x04007779] 	      3962	quickfix.c	FUNCTION_67	IF_1
0x4007779	            0x751d	                           jne 0x4007798	      3962	quickfix.c	FUNCTION_67	IF_1
0x400777b	    0x488b82481900	          mov rax, qword [rdx + 0x1948] 	      3962	quickfix.c	FUNCTION_67	IF_1
0x4007782	          0x4885c0	                           test rax, rax	      3963	quickfix.c	FUNCTION_67	IF_1	IF_2
0x4007785	     0xf8529ffffff	                           jne 0x40076b4	      3963	quickfix.c	FUNCTION_67	IF_1	IF_2
0x400778b	      0xb801000000	                              mov eax, 1	      3992	quickfix.c	FUNCTION_67	ELSE_1
0x4007790	              0x5b	                                 pop rbx	      3993	quickfix.c	FUNCTION_67	ELSE_1
0x4007791	              0xc3	                                     ret	      3993	quickfix.c	FUNCTION_67	ELSE_1
0x4007792	    0x660f1f440000	                    nop word [rax + rax]	      3993	quickfix.c	FUNCTION_67	ELSE_1
0x4007798	    0x488b82501900	          mov rax, qword [rdx + 0x1950] 	      3962	quickfix.c	FUNCTION_67	IF_1
0x400779f	          0x4885c0	                           test rax, rax	      3962	quickfix.c	FUNCTION_67	IF_1
0x40077a2	     0xf850cffffff	                           jne 0x40076b4	      3962	quickfix.c	FUNCTION_67	IF_1
0x40077a8	            0xebd1	                           jmp 0x400777b	      3962	quickfix.c	FUNCTION_67	IF_1
ex_cnext	functions,0:WHILE,0:DO,0:CALL,3:SWITCH,0:IF,3:ELSE,1:FOR,0	97
0x4007a00	              0x53	                                push rbx	      4099	quickfix.c	FUNCTION_70
0x4007a01	          0x8b4720	            mov eax, dword [rdi + 0x20] 	      4103	quickfix.c	FUNCTION_70	IF_1
0x4007a04	          0x4889fb	                            mov rbx, rdi	      4099	quickfix.c	FUNCTION_70
0x4007a07	    0x8d9036ffffff	                   lea edx, [rax - 0xca]	      4104	quickfix.c	FUNCTION_70	IF_1
0x4007a0d	          0x83fa2e	                           cmp edx, 0x2e	      4104	quickfix.c	FUNCTION_70	IF_1
0x4007a10	     0xf8742010000	                            ja 0x4007b58	      4104	quickfix.c	FUNCTION_70	IF_1
0x4007a16	    0x48b903401000	              movabs rcx, 0x605000104003	      4110	quickfix.c	FUNCTION_70	IF_1
0x4007a20	        0x480fa3d1	                             bt rcx, rdx	      4110	quickfix.c	FUNCTION_70	IF_1
0x4007a24	     0xf832e010000	                           jae 0x4007b58	      4110	quickfix.c	FUNCTION_70	IF_1
0x4007a2a	    0x488b05000000	            mov rax, qword [0x04007a31] 	      4112	quickfix.c	FUNCTION_70	IF_1
0x4007a31	        0x488b7808	                mov rdi, qword [rax + 8]	      4112	quickfix.c	FUNCTION_70	IF_1
0x4007a35	      0xe800000000	                          call 0x4007a3a	      4112	quickfix.c	FUNCTION_70	IF_1
0x4007a3a	            0x85c0	                           test eax, eax	      4112	quickfix.c	FUNCTION_70	IF_1
0x4007a3c	    0x488b05000000	            mov rax, qword [0x04007a43] 	      4112	quickfix.c	FUNCTION_70	IF_1
0x4007a43	     0xf84df000000	                            je 0x4007b28	      4112	quickfix.c	FUNCTION_70	IF_1
0x4007a49	    0x488bb8501900	          mov rdi, qword [rax + 0x1950] 	      4112	quickfix.c	FUNCTION_70	IF_1
0x4007a50	          0x4885ff	                           test rdi, rdi	      4112	quickfix.c	FUNCTION_70	IF_1
0x4007a53	     0xf84cf000000	                            je 0x4007b28	      4112	quickfix.c	FUNCTION_70	IF_1
0x4007a59	          0x8b4320	            mov eax, dword [rbx + 0x20] 	      4112	quickfix.c	FUNCTION_70	IF_1
0x4007a5c	          0x8b5338	            mov edx, dword [rbx + 0x38] 	      4120	quickfix.c	FUNCTION_70	IF_3
0x4007a5f	      0x3dd8000000	                           cmp eax, 0xd8	      4121	quickfix.c	FUNCTION_70	IF_3
0x4007a64	        0x410f95c0	                               setne r8b	      4121	quickfix.c	FUNCTION_70	IF_3
0x4007a68	            0x85d2	                           test edx, edx	      4120	quickfix.c	FUNCTION_70	IF_3
0x4007a6a	     0xf8e01010000	                           jle 0x4007b71	      4120	quickfix.c	FUNCTION_70	IF_3
0x4007a70	            0x89c2	                            mov edx, eax	      4122	quickfix.c	FUNCTION_70	IF_3
0x4007a72	          0x83e2fb	                     and edx, 0xfffffffb	      4122	quickfix.c	FUNCTION_70	IF_3
0x4007a75	          0x83fa39	                           cmp edx, 0x39	      4122	quickfix.c	FUNCTION_70	IF_3
0x4007a78	     0xf84f3000000	                            je 0x4007b71	      4122	quickfix.c	FUNCTION_70	IF_3
0x4007a7e	      0x3dde000000	                           cmp eax, 0xde	      4122	quickfix.c	FUNCTION_70	IF_3
0x4007a83	           0xf95c2	                                setne dl	      4122	quickfix.c	FUNCTION_70	IF_3
0x4007a86	          0x4484c2	                            test dl, r8b	      4122	quickfix.c	FUNCTION_70	IF_3
0x4007a89	     0xf84e2000000	                            je 0x4007b71	      4122	quickfix.c	FUNCTION_70	IF_3
0x4007a8f	          0x8b5348	            mov edx, dword [rbx + 0x48] 	      4123	quickfix.c	FUNCTION_70	IF_3
0x4007a92	          0x83f84e	                           cmp eax, 0x4e	      4128	quickfix.c	FUNCTION_70
0x4007a95	          0x8b4b34	            mov ecx, dword [rbx + 0x34] 	      4127	quickfix.c	FUNCTION_70	CALL_3
0x4007a98	        0x410f95c1	                               setne r9b	      4128	quickfix.c	FUNCTION_70
0x4007a9c	      0x3dee000000	                           cmp eax, 0xee	      4128	quickfix.c	FUNCTION_70
0x4007aa1	        0x400f95c6	                               setne sil	      4128	quickfix.c	FUNCTION_70
0x4007aa5	          0x4421ce	                            and esi, r9d	      4128	quickfix.c	FUNCTION_70
0x4007aa8	          0x83f839	                           cmp eax, 0x39	      4128	quickfix.c	FUNCTION_70
0x4007aab	        0x410f95c1	                               setne r9b	      4128	quickfix.c	FUNCTION_70
0x4007aaf	          0x4484ce	                           test sil, r9b	      4128	quickfix.c	FUNCTION_70
0x4007ab2	     0xf84c8000000	                            je 0x4007b80	      4128	quickfix.c	FUNCTION_70
0x4007ab8	          0x4584c0	                           test r8b, r8b	      4128	quickfix.c	FUNCTION_70
0x4007abb	     0xf84bf000000	                            je 0x4007b80	      4128	quickfix.c	FUNCTION_70
0x4007ac1	          0x83f850	                           cmp eax, 0x50	      4131	quickfix.c	FUNCTION_70
0x4007ac4	        0x410f95c0	                               setne r8b	      4131	quickfix.c	FUNCTION_70
0x4007ac8	      0x3df0000000	                           cmp eax, 0xf0	      4131	quickfix.c	FUNCTION_70
0x4007acd	        0x400f95c6	                               setne sil	      4131	quickfix.c	FUNCTION_70
0x4007ad1	          0x4421c6	                            and esi, r8d	      4131	quickfix.c	FUNCTION_70
0x4007ad4	          0x83f83d	                           cmp eax, 0x3d	      4131	quickfix.c	FUNCTION_70
0x4007ad7	        0x410f95c0	                               setne r8b	      4131	quickfix.c	FUNCTION_70
0x4007adb	          0x4484c6	                           test sil, r8b	      4131	quickfix.c	FUNCTION_70
0x4007ade	     0xf84ac000000	                            je 0x4007b90	      4131	quickfix.c	FUNCTION_70
0x4007ae4	      0x3dde000000	                           cmp eax, 0xde	      4131	quickfix.c	FUNCTION_70
0x4007ae9	     0xf84a1000000	                            je 0x4007b90	      4131	quickfix.c	FUNCTION_70
0x4007aef	          0x83f85e	                           cmp eax, 0x5e	      4134	quickfix.c	FUNCTION_70
0x4007af2	        0x410f94c0	                                sete r8b	      4134	quickfix.c	FUNCTION_70
0x4007af6	      0x3df8000000	                           cmp eax, 0xf8	      4134	quickfix.c	FUNCTION_70
0x4007afb	        0x400f94c6	                                sete sil	      4134	quickfix.c	FUNCTION_70
0x4007aff	          0x4409c6	                             or esi, r8d	      4134	quickfix.c	FUNCTION_70
0x4007b02	          0x83f82c	                           cmp eax, 0x2c	      4134	quickfix.c	FUNCTION_70
0x4007b05	        0x410f94c0	                                sete r8b	      4134	quickfix.c	FUNCTION_70
0x4007b09	          0x4408c6	                             or sil, r8b	      4134	quickfix.c	FUNCTION_70
0x4007b0c	            0x750c	                           jne 0x4007b1a	      4134	quickfix.c	FUNCTION_70
0x4007b0e	      0x3dcb000000	                           cmp eax, 0xcb	      4134	quickfix.c	FUNCTION_70
0x4007b13	      0xbeffffffff	                     mov esi, 0xffffffff	      4136	quickfix.c	FUNCTION_70
0x4007b18	            0x756b	                           jne 0x4007b85	      4134	quickfix.c	FUNCTION_70
0x4007b1a	      0xbefdffffff	                     mov esi, 0xfffffffd	      4136	quickfix.c	FUNCTION_70
0x4007b1f	            0xeb64	                           jmp 0x4007b85	      4136	quickfix.c	FUNCTION_70
0x4007b21	     0xf1f80000000	                         nop dword [rax]	      4136	quickfix.c	FUNCTION_70
0x4007b28	    0x488bb8481900	          mov rdi, qword [rax + 0x1948] 	      4112	quickfix.c	FUNCTION_70	IF_1
0x4007b2f	          0x4885ff	                           test rdi, rdi	      4113	quickfix.c	FUNCTION_70	IF_1	IF_2
0x4007b32	     0xf8521ffffff	                           jne 0x4007a59	      4113	quickfix.c	FUNCTION_70	IF_1	IF_2
0x4007b38	            0x31ff	                            xor edi, edi	      4115	quickfix.c	FUNCTION_70	IF_1	IF_2	CALL_2
0x4007b3a	      0xba05000000	                              mov edx, 5	      4115	quickfix.c	FUNCTION_70	IF_1	IF_2	CALL_2
0x4007b3f	      0xbe00000000	                              mov esi, 0	      4115	quickfix.c	FUNCTION_70	IF_1	IF_2	CALL_2
0x4007b44	      0xe800000000	                          call 0x4007b49	      4115	quickfix.c	FUNCTION_70	IF_1	IF_2	CALL_2
0x4007b49	              0x5b	                                 pop rbx	      4138	quickfix.c	FUNCTION_70
0x4007b4a	          0x4889c7	                            mov rdi, rax	      4115	quickfix.c	FUNCTION_70	IF_1	IF_2	CALL_2
0x4007b4d	      0xe900000000	                           jmp 0x4007b52	      4115	quickfix.c	FUNCTION_70	IF_1	IF_2	CALL_2
0x4007b52	    0x660f1f440000	                    nop word [rax + rax]	      4115	quickfix.c	FUNCTION_70	IF_1	IF_2	CALL_2
0x4007b58	          0x8b5338	            mov edx, dword [rbx + 0x38] 	      4120	quickfix.c	FUNCTION_70	IF_3
0x4007b5b	      0x3dd8000000	                           cmp eax, 0xd8	      4121	quickfix.c	FUNCTION_70	IF_3
0x4007b60	      0xbf00000000	                              mov edi, 0	      4100	quickfix.c	FUNCTION_70
0x4007b65	        0x410f95c0	                               setne r8b	      4121	quickfix.c	FUNCTION_70	IF_3
0x4007b69	            0x85d2	                           test edx, edx	      4120	quickfix.c	FUNCTION_70	IF_3
0x4007b6b	     0xf8ffffeffff	                            jg 0x4007a70	      4120	quickfix.c	FUNCTION_70	IF_3
0x4007b71	      0xba01000000	                              mov edx, 1	      4125	quickfix.c	FUNCTION_70	ELSE_1
0x4007b76	      0xe917ffffff	                           jmp 0x4007a92	      4125	quickfix.c	FUNCTION_70	ELSE_1
0x4007b7b	       0xf1f440000	                   nop dword [rax + rax]	      4125	quickfix.c	FUNCTION_70	ELSE_1
0x4007b80	      0xbe01000000	                              mov esi, 1	      4127	quickfix.c	FUNCTION_70	CALL_3
0x4007b85	              0x5b	                                 pop rbx	      4138	quickfix.c	FUNCTION_70
0x4007b86	      0xe945deffff	                         jmp sym.qf_jump	      4127	quickfix.c	FUNCTION_70	CALL_3
0x4007b8b	       0xf1f440000	                   nop dword [rax + rax]	      4127	quickfix.c	FUNCTION_70	CALL_3
0x4007b90	      0xbe03000000	                              mov esi, 3	      4133	quickfix.c	FUNCTION_70
0x4007b95	            0xebee	                           jmp 0x4007b85	      4133	quickfix.c	FUNCTION_70
qf_msg	functions,0:WHILE,0:DO,0:CALL,7:SWITCH,0:IF,2:ELSE,0:FOR,0	128
0x40007c0	            0x4157	                                push r15	      2881	quickfix.c	ELSE_1	FUNCTION_40
0x40007c2	            0x4156	                                push r14	      2881	quickfix.c	ELSE_1	FUNCTION_40
0x40007c4	            0x4155	                                push r13	      2881	quickfix.c	ELSE_1	FUNCTION_40
0x40007c6	            0x4154	                                push r12	      2881	quickfix.c	ELSE_1	FUNCTION_40
0x40007c8	          0x4989d4	                            mov r12, rdx	      2881	quickfix.c	ELSE_1	FUNCTION_40
0x40007cb	              0x55	                                push rbp	      2881	quickfix.c	ELSE_1	FUNCTION_40
0x40007cc	              0x53	                                push rbx	      2881	quickfix.c	ELSE_1	FUNCTION_40
0x40007cd	          0x4189f5	                           mov r13d, esi	      2881	quickfix.c	ELSE_1	FUNCTION_40
0x40007d0	    0x4881ec180400	                          sub rsp, 0x418	      2881	quickfix.c	ELSE_1	FUNCTION_40
0x40007d7	        0x448b7704	               mov r14d, dword [rdi + 4]	      2886	quickfix.c	ELSE_1	FUNCTION_40	CALL_2
0x40007db	    0x64488b042528	                mov rax, qword fs:[0x28]	      2881	quickfix.c	ELSE_1	FUNCTION_40
0x40007e4	    0x488984240804	            mov qword [rsp + 0x408], rax	      2881	quickfix.c	ELSE_1	FUNCTION_40
0x40007ec	            0x31c0	                            xor eax, eax	      2881	quickfix.c	ELSE_1	FUNCTION_40
0x40007ee	          0x4863c6	                         movsxd rax, esi	      2882	quickfix.c	ELSE_1	FUNCTION_40
0x40007f1	      0xbe00000000	                              mov esi, 0	      2886	quickfix.c	ELSE_1	FUNCTION_40	CALL_2
0x40007f6	          0x4889e5	                            mov rbp, rsp	      2886	quickfix.c	ELSE_1	FUNCTION_40	CALL_2
0x40007f9	    0x488d14c50000	                        lea rdx, [rax*8]	      2882	quickfix.c	ELSE_1	FUNCTION_40
0x4000801	        0x48c1e007	                              shl rax, 7	      2882	quickfix.c	ELSE_1	FUNCTION_40
0x4000805	          0x4829d0	                            sub rax, rdx	      2882	quickfix.c	ELSE_1	FUNCTION_40
0x4000808	      0xba05000000	                              mov edx, 5	      2886	quickfix.c	ELSE_1	FUNCTION_40	CALL_2
0x400080d	          0x4801f8	                            add rax, rdi	      2882	quickfix.c	ELSE_1	FUNCTION_40
0x4000810	            0x31ff	                            xor edi, edi	      2886	quickfix.c	ELSE_1	FUNCTION_40	CALL_2
0x4000812	        0x448b7830	           mov r15d, dword [rax + 0x30] 	      2883	quickfix.c	ELSE_1	FUNCTION_40
0x4000816	        0x488b5840	            mov rbx, qword [rax + 0x40] 	      2882	quickfix.c	ELSE_1	FUNCTION_40
0x400081a	      0xe800000000	                          call 0x400081f	      2886	quickfix.c	ELSE_1	FUNCTION_40	CALL_2
0x400081f	        0x4883ec08	                              sub rsp, 8	      2886	quickfix.c	ELSE_1	FUNCTION_40	CALL_2
0x4000823	        0x458d4501	                      lea r8d, [r13 + 1]	      2886	quickfix.c	ELSE_1	FUNCTION_40	CALL_2
0x4000827	          0x4889c2	                            mov rdx, rax	      2886	quickfix.c	ELSE_1	FUNCTION_40	CALL_2
0x400082a	            0x4157	                                push r15	      2886	quickfix.c	ELSE_1	FUNCTION_40	CALL_2
0x400082c	      0xbe01040000	                          mov esi, 0x401	      2886	quickfix.c	ELSE_1	FUNCTION_40	CALL_2
0x4000831	          0x4889ef	                            mov rdi, rbp	      2886	quickfix.c	ELSE_1	FUNCTION_40	CALL_2
0x4000834	            0x31c0	                            xor eax, eax	      2886	quickfix.c	ELSE_1	FUNCTION_40	CALL_2
0x4000836	          0x4589f1	                           mov r9d, r14d	      2886	quickfix.c	ELSE_1	FUNCTION_40	CALL_2
0x4000839	          0x4c89e1	                            mov rcx, r12	      2886	quickfix.c	ELSE_1	FUNCTION_40	CALL_2
0x400083c	      0xe800000000	                          call 0x4000841	      2886	quickfix.c	ELSE_1	FUNCTION_40	CALL_2
0x4000841	          0x4885db	                           test rbx, rbx	      2892	quickfix.c	ELSE_1	FUNCTION_40	IF_1
0x4000844	              0x5e	                                 pop rsi	      2892	quickfix.c	ELSE_1	FUNCTION_40	IF_1
0x4000845	              0x5f	                                 pop rdi	      2892	quickfix.c	ELSE_1	FUNCTION_40	IF_1
0x4000846	            0x7453	                            je 0x400089b	      2892	quickfix.c	ELSE_1	FUNCTION_40	IF_1
0x4000848	          0x4889e8	                            mov rax, rbp	      2894	quickfix.c	ELSE_1	FUNCTION_40	IF_1	CALL_3
0x400084b	            0x8b08	                    mov ecx, dword [rax]	      2894	quickfix.c	ELSE_1	FUNCTION_40	IF_1	CALL_3
0x400084d	        0x4883c004	                              add rax, 4	      2894	quickfix.c	ELSE_1	FUNCTION_40	IF_1	CALL_3
0x4000851	    0x8d91fffefefe	              lea edx, [rcx - 0x1010101]	      2894	quickfix.c	ELSE_1	FUNCTION_40	IF_1	CALL_3
0x4000857	            0xf7d1	                                 not ecx	      2894	quickfix.c	ELSE_1	FUNCTION_40	IF_1	CALL_3
0x4000859	            0x21ca	                            and edx, ecx	      2894	quickfix.c	ELSE_1	FUNCTION_40	IF_1	CALL_3
0x400085b	    0x81e280808080	                     and edx, 0x80808080	      2894	quickfix.c	ELSE_1	FUNCTION_40	IF_1	CALL_3
0x4000861	            0x74e8	                            je 0x400084b	      2894	quickfix.c	ELSE_1	FUNCTION_40	IF_1	CALL_3
0x4000863	            0x89d1	                            mov ecx, edx	      2894	quickfix.c	ELSE_1	FUNCTION_40	IF_1	CALL_3
0x4000865	          0xc1e910	                           shr ecx, 0x10	      2894	quickfix.c	ELSE_1	FUNCTION_40	IF_1	CALL_3
0x4000868	    0xf7c280800000	                        test edx, 0x8080	      2894	quickfix.c	ELSE_1	FUNCTION_40	IF_1	CALL_3
0x400086e	           0xf44d1	                          cmove edx, ecx	      2894	quickfix.c	ELSE_1	FUNCTION_40	IF_1	CALL_3
0x4000871	        0x488d4802	                      lea rcx, [rax + 2]	      2894	quickfix.c	ELSE_1	FUNCTION_40	IF_1	CALL_3
0x4000875	            0x89d6	                            mov esi, edx	      2894	quickfix.c	ELSE_1	FUNCTION_40	IF_1	CALL_3
0x4000877	        0x480f44c1	                          cmove rax, rcx	      2894	quickfix.c	ELSE_1	FUNCTION_40	IF_1	CALL_3
0x400087b	          0x4000d6	                             add sil, dl	      2894	quickfix.c	ELSE_1	FUNCTION_40	IF_1	CALL_3
0x400087e	        0x4883d803	                              sbb rax, 3	      2894	quickfix.c	ELSE_1	FUNCTION_40	IF_1	CALL_3
0x4000882	          0x4829e8	                            sub rax, rbp	      2894	quickfix.c	ELSE_1	FUNCTION_40	IF_1	CALL_3
0x4000885	        0x4883f821	                           cmp rax, 0x21	      2896	quickfix.c	ELSE_1	FUNCTION_40	IF_1	IF_2
0x4000889	            0x765d	                           jbe 0x40008e8	      2896	quickfix.c	ELSE_1	FUNCTION_40	IF_1	IF_2
0x400088b	      0xba01040000	                          mov edx, 0x401	      2901	quickfix.c	ELSE_1	FUNCTION_40	IF_1	CALL_5
0x4000890	          0x4889de	                            mov rsi, rbx	      2901	quickfix.c	ELSE_1	FUNCTION_40	IF_1	CALL_5
0x4000893	          0x4889ef	                            mov rdi, rbp	      2901	quickfix.c	ELSE_1	FUNCTION_40	IF_1	CALL_5
0x4000896	      0xe800000000	                          call 0x400089b	      2901	quickfix.c	ELSE_1	FUNCTION_40	IF_1	CALL_5
0x400089b	    0x8b0500000000	            mov eax, dword [0x040008a1] 	      2903	quickfix.c	ELSE_1	FUNCTION_40	CALL_6
0x40008a1	      0xb901040000	                          mov ecx, 0x401	      2903	quickfix.c	ELSE_1	FUNCTION_40	CALL_6
0x40008a6	          0x4889ee	                            mov rsi, rbp	      2903	quickfix.c	ELSE_1	FUNCTION_40	CALL_6
0x40008a9	          0x4889ef	                            mov rdi, rbp	      2903	quickfix.c	ELSE_1	FUNCTION_40	CALL_6
0x40008ac	          0x8d50ff	                      lea edx, [rax - 1]	      2903	quickfix.c	ELSE_1	FUNCTION_40	CALL_6
0x40008af	      0xe800000000	                          call 0x40008b4	      2903	quickfix.c	ELSE_1	FUNCTION_40	CALL_6
0x40008b4	          0x4889ef	                            mov rdi, rbp	      2904	quickfix.c	ELSE_1	FUNCTION_40	CALL_7
0x40008b7	      0xe800000000	                          call 0x40008bc	      2904	quickfix.c	ELSE_1	FUNCTION_40	CALL_7
0x40008bc	    0x488b84240804	           mov rax, qword [rsp + 0x408] 	      2905	quickfix.c	ELSE_1	FUNCTION_40
0x40008c4	    0x644833042528	                xor rax, qword fs:[0x28]	      2905	quickfix.c	ELSE_1	FUNCTION_40
0x40008cd	     0xf85ad000000	                           jne 0x4000980	      2905	quickfix.c	ELSE_1	FUNCTION_40
0x40008d3	    0x4881c4180400	                          add rsp, 0x418	      2905	quickfix.c	ELSE_1	FUNCTION_40
0x40008da	              0x5b	                                 pop rbx	      2905	quickfix.c	ELSE_1	FUNCTION_40
0x40008db	              0x5d	                                 pop rbp	      2905	quickfix.c	ELSE_1	FUNCTION_40
0x40008dc	            0x415c	                                 pop r12	      2905	quickfix.c	ELSE_1	FUNCTION_40
0x40008de	            0x415d	                                 pop r13	      2905	quickfix.c	ELSE_1	FUNCTION_40
0x40008e0	            0x415e	                                 pop r14	      2905	quickfix.c	ELSE_1	FUNCTION_40
0x40008e2	            0x415f	                                 pop r15	      2905	quickfix.c	ELSE_1	FUNCTION_40
0x40008e4	              0xc3	                                     ret	      2905	quickfix.c	ELSE_1	FUNCTION_40
0x40008e5	           0xf1f00	                         nop dword [rax]	      2905	quickfix.c	ELSE_1	FUNCTION_40
0x40008e8	      0xba22000000	                           mov edx, 0x22	        90	string3.h	FUNCTION_118	CALL_6
0x40008ed	          0x4829c2	                            sub rdx, rax	        90	string3.h	FUNCTION_118	CALL_6
0x40008f0	          0x4801e8	                            add rax, rbp	        90	string3.h	FUNCTION_118	CALL_6
0x40008f3	          0x83fa08	                              cmp edx, 8	        90	string3.h	FUNCTION_118	CALL_6
0x40008f6	            0x7320	                           jae 0x4000918	        90	string3.h	FUNCTION_118	CALL_6
0x40008f8	          0xf6c204	                              test dl, 4	        90	string3.h	FUNCTION_118	CALL_6
0x40008fb	            0x7563	                           jne 0x4000960	        90	string3.h	FUNCTION_118	CALL_6
0x40008fd	            0x85d2	                           test edx, edx	        90	string3.h	FUNCTION_118	CALL_6
0x40008ff	            0x7408	                            je 0x4000909	        90	string3.h	FUNCTION_118	CALL_6
0x4000901	          0xf6c202	                              test dl, 2	        90	string3.h	FUNCTION_118	CALL_6
0x4000904	          0xc60020	                    mov byte [rax], 0x20	        90	string3.h	FUNCTION_118	CALL_6
0x4000907	            0x7569	                           jne 0x4000972	        90	string3.h	FUNCTION_118	CALL_6
0x4000909	      0xc644242200	                mov byte [rsp + 0x22], 0	      2899	quickfix.c	ELSE_1	FUNCTION_40	IF_1	IF_2
0x400090e	      0xe978ffffff	                           jmp 0x400088b	      2899	quickfix.c	ELSE_1	FUNCTION_40	IF_1	IF_2
0x4000913	       0xf1f440000	                   nop dword [rax + rax]	      2899	quickfix.c	ELSE_1	FUNCTION_40	IF_1	IF_2
0x4000918	    0x48be20202020	          movabs rsi, 0x2020202020202020	        90	string3.h	FUNCTION_118	CALL_6
0x4000922	            0x89d1	                            mov ecx, edx	        90	string3.h	FUNCTION_118	CALL_6
0x4000924	          0x488930	                    mov qword [rax], rsi	        90	string3.h	FUNCTION_118	CALL_6
0x4000927	      0x48897408f8	          mov qword [rax + rcx - 8], rsi	        90	string3.h	FUNCTION_118	CALL_6
0x400092c	        0x488d4808	                      lea rcx, [rax + 8]	        90	string3.h	FUNCTION_118	CALL_6
0x4000930	        0x4883e1f8	             and rcx, 0xfffffffffffffff8	        90	string3.h	FUNCTION_118	CALL_6
0x4000934	          0x4829c8	                            sub rax, rcx	        90	string3.h	FUNCTION_118	CALL_6
0x4000937	             0x1d0	                            add eax, edx	        90	string3.h	FUNCTION_118	CALL_6
0x4000939	          0x83e0f8	                     and eax, 0xfffffff8	        90	string3.h	FUNCTION_118	CALL_6
0x400093c	          0x83f808	                              cmp eax, 8	        90	string3.h	FUNCTION_118	CALL_6
0x400093f	            0x72c8	                            jb 0x4000909	        90	string3.h	FUNCTION_118	CALL_6
0x4000941	          0x83e0f8	                     and eax, 0xfffffff8	        90	string3.h	FUNCTION_118	CALL_6
0x4000944	            0x31d2	                            xor edx, edx	        90	string3.h	FUNCTION_118	CALL_6
0x4000946	            0x89d6	                            mov esi, edx	        90	string3.h	FUNCTION_118	CALL_6
0x4000948	          0x83c208	                              add edx, 8	        90	string3.h	FUNCTION_118	CALL_6
0x400094b	    0x48bf20202020	          movabs rdi, 0x2020202020202020	        90	string3.h	FUNCTION_118	CALL_6
0x4000955	            0x39c2	                            cmp edx, eax	        90	string3.h	FUNCTION_118	CALL_6
0x4000957	        0x48893c31	              mov qword [rcx + rsi], rdi	        90	string3.h	FUNCTION_118	CALL_6
0x400095b	            0x72e9	                            jb 0x4000946	        90	string3.h	FUNCTION_118	CALL_6
0x400095d	            0xebaa	                           jmp 0x4000909	        90	string3.h	FUNCTION_118	CALL_6
0x400095f	              0x90	                                     nop	        90	string3.h	FUNCTION_118	CALL_6
0x4000960	            0x89d2	                            mov edx, edx	        90	string3.h	FUNCTION_118	CALL_6
0x4000962	    0xc70020202020	            mov dword [rax], 0x20202020 	        90	string3.h	FUNCTION_118	CALL_6
0x4000968	    0xc74410fc2020	  mov dword [rax + rdx - 4], 0x20202020 	        90	string3.h	FUNCTION_118	CALL_6
0x4000970	            0xeb97	                           jmp 0x4000909	        90	string3.h	FUNCTION_118	CALL_6
0x4000972	            0x89d2	                            mov edx, edx	        90	string3.h	FUNCTION_118	CALL_6
0x4000974	      0xb920200000	                         mov ecx, 0x2020	        90	string3.h	FUNCTION_118	CALL_6
0x4000979	      0x66894c10fe	            mov word [rax + rdx - 2], cx	        90	string3.h	FUNCTION_118	CALL_6
0x400097e	            0xeb89	                           jmp 0x4000909	        90	string3.h	FUNCTION_118	CALL_6
0x4000980	      0xe800000000	                          call 0x4000985	      2905	quickfix.c	ELSE_1	FUNCTION_40
ex_copen	functions,0:WHILE,0:DO,0:CALL,24:SWITCH,0:IF,16:ELSE,4:FOR,0	283
0x4006bf0	            0x4157	                                push r15	      3202	quickfix.c	FUNCTION_49
0x4006bf2	            0x4156	                                push r14	      3202	quickfix.c	FUNCTION_49
0x4006bf4	            0x4155	                                push r13	      3202	quickfix.c	FUNCTION_49
0x4006bf6	            0x4154	                                push r12	      3202	quickfix.c	FUNCTION_49
0x4006bf8	              0x55	                                push rbp	      3202	quickfix.c	FUNCTION_49
0x4006bf9	              0x53	                                push rbx	      3202	quickfix.c	FUNCTION_49
0x4006bfa	          0x4889fd	                            mov rbp, rdi	      3202	quickfix.c	FUNCTION_49
0x4006bfd	        0x4883ec18	                           sub rsp, 0x18	      3202	quickfix.c	FUNCTION_49
0x4006c01	    0x488b05000000	            mov rax, qword [0x04006c08] 	      3206	quickfix.c	FUNCTION_49
0x4006c08	    0x4c8b25000000	            mov r12, qword [0x04006c0f] 	      3208	quickfix.c	FUNCTION_49
0x4006c0f	      0x4889442408	                mov qword [rsp + 8], rax	      3206	quickfix.c	FUNCTION_49
0x4006c14	          0x8b4720	            mov eax, dword [rdi + 0x20] 	      3210	quickfix.c	FUNCTION_49	IF_1
0x4006c17	      0x3df6000000	                           cmp eax, 0xf6	      3210	quickfix.c	FUNCTION_49	IF_1
0x4006c1c	     0xf8426030000	                            je 0x4006f48	      3210	quickfix.c	FUNCTION_49	IF_1
0x4006c22	      0x3d01010000	                          cmp eax, 0x101	      3210	quickfix.c	FUNCTION_49	IF_1
0x4006c27	      0xbb00000000	                              mov ebx, 0	      3203	quickfix.c	FUNCTION_49
0x4006c2c	     0xf8416030000	                            je 0x4006f48	      3210	quickfix.c	FUNCTION_49	IF_1
0x4006c32	        0x448b5d38	           mov r11d, dword [rbp + 0x38] 	      3220	quickfix.c	FUNCTION_49	IF_3
0x4006c36	    0x41bd0a000000	                           mov r13d, 0xa	      3223	quickfix.c	FUNCTION_49	ELSE_1
0x4006c3c	          0x4585db	                         test r11d, r11d	      3220	quickfix.c	FUNCTION_49	IF_3
0x4006c3f	     0xf85bb020000	                           jne 0x4006f00	      3220	quickfix.c	FUNCTION_49	IF_3
0x4006c45	      0xe800000000	                          call 0x4006c4a	      3225	quickfix.c	FUNCTION_49	CALL_3
0x4006c4a	    0x4c8b35000000	            mov r14, qword [0x04006c51] 	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4006c51	    0xc70500000000	               mov dword [0x04006c5b], 1	      3227	quickfix.c	FUNCTION_49
0x4006c5b	          0x4d85f6	                           test r14, r14	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4006c5e	            0x7433	                            je 0x4006c93	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4006c60	    0x4881fb000000	                              cmp rbx, 0	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4006c67	     0xf849c000000	                            je 0x4006d09	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4006c6d	           0xf1f00	                         nop dword [rax]	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4006c70	        0x498b7e08	                mov rdi, qword [r14 + 8]	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x4006c74	      0xe800000000	                          call 0x4006c79	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x4006c79	            0x85c0	                           test eax, eax	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x4006c7b	            0x740d	                            je 0x4006c8a	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x4006c7d	    0x493b9e501900	          cmp rbx, qword [r14 + 0x1950] 	      3442	quickfix.c	FUNCTION_54	IF_1	IF_2
0x4006c84	     0xf8496000000	                            je 0x4006d20	      3442	quickfix.c	FUNCTION_54	IF_1	IF_2
0x4006c8a	        0x4d8b7620	            mov r14, qword [r14 + 0x20] 	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4006c8e	          0x4d85f6	                           test r14, r14	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4006c91	            0x75dd	                           jne 0x4006c70	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4006c93	    0x4c8b35000000	            mov r14, qword [0x04006c9a] 	      3473	quickfix.c	FUNCTION_56	CALL_1
0x4006c9a	          0x4d85f6	                           test r14, r14	      3473	quickfix.c	FUNCTION_56	CALL_1
0x4006c9d	            0x7454	                            je 0x4006cf3	      3473	quickfix.c	FUNCTION_56	CALL_1
0x4006c9f	    0x4c3b35000000	            cmp r14, qword [0x04006ca6] 	      3473	quickfix.c	FUNCTION_56	CALL_1
0x4006ca6	     0xf8424030000	                            je 0x4006fd0	      3473	quickfix.c	FUNCTION_56	CALL_1
0x4006cac	        0x4d8b7e20	            mov r15, qword [r14 + 0x20] 	      3473	quickfix.c	FUNCTION_56	CALL_1
0x4006cb0	          0x4d85ff	                           test r15, r15	      3473	quickfix.c	FUNCTION_56	CALL_1
0x4006cb3	            0x7436	                            je 0x4006ceb	      3473	quickfix.c	FUNCTION_56	CALL_1
0x4006cb5	    0x4881fb000000	                              cmp rbx, 0	      3473	quickfix.c	FUNCTION_56	CALL_1
0x4006cbc	     0xf84bb000000	                            je 0x4006d7d	      3473	quickfix.c	FUNCTION_56	CALL_1
0x4006cc2	    0x660f1f440000	                    nop word [rax + rax]	      3473	quickfix.c	FUNCTION_56	CALL_1
0x4006cc8	        0x498b7f08	                mov rdi, qword [r15 + 8]	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x4006ccc	      0xe800000000	                          call 0x4006cd1	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x4006cd1	            0x85c0	                           test eax, eax	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x4006cd3	            0x740d	                            je 0x4006ce2	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x4006cd5	    0x493b9f501900	          cmp rbx, qword [r15 + 0x1950] 	      3442	quickfix.c	FUNCTION_54	IF_1	IF_2
0x4006cdc	     0xf84b6000000	                            je 0x4006d98	      3442	quickfix.c	FUNCTION_54	IF_1	IF_2
0x4006ce2	        0x4d8b7f20	            mov r15, qword [r15 + 0x20] 	      3473	quickfix.c	FUNCTION_56	CALL_1
0x4006ce6	          0x4d85ff	                           test r15, r15	      3473	quickfix.c	FUNCTION_56	CALL_1
0x4006ce9	            0x75dd	                           jne 0x4006cc8	      3473	quickfix.c	FUNCTION_56	CALL_1
0x4006ceb	          0x4d8b36	                    mov r14, qword [r14]	      3473	quickfix.c	FUNCTION_56	CALL_1
0x4006cee	          0x4d85f6	                           test r14, r14	      3473	quickfix.c	FUNCTION_56	CALL_1
0x4006cf1	            0x75ac	                           jne 0x4006c9f	      3473	quickfix.c	FUNCTION_56	CALL_1
0x4006cf3	          0x4531f6	                          xor r14d, r14d	      3477	quickfix.c	FUNCTION_56
0x4006cf6	      0xe9a1000000	                           jmp 0x4006d9c	      3477	quickfix.c	FUNCTION_56
0x4006cfb	       0xf1f440000	                   nop dword [rax + rax]	      3477	quickfix.c	FUNCTION_56
0x4006d00	        0x4d8b7620	            mov r14, qword [r14 + 0x20] 	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4006d04	          0x4d85f6	                           test r14, r14	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4006d07	            0x748a	                            je 0x4006c93	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4006d09	        0x498b7e08	                mov rdi, qword [r14 + 8]	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x4006d0d	      0xe800000000	                          call 0x4006d12	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x4006d12	            0x85c0	                           test eax, eax	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x4006d14	            0x74ea	                            je 0x4006d00	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x4006d16	    0x4983be501900	             cmp qword [r14 + 0x1950], 0	      3441	quickfix.c	FUNCTION_54	IF_1	IF_2
0x4006d1e	            0x75e0	                           jne 0x4006d00	      3441	quickfix.c	FUNCTION_54	IF_1	IF_2
0x4006d20	    0x448b15000000	           mov r10d, dword [0x04006d27] 	      3235	quickfix.c	FUNCTION_49	IF_4
0x4006d27	          0x4585d2	                         test r10d, r10d	      3235	quickfix.c	FUNCTION_49	IF_4
0x4006d2a	     0xf8563ffffff	                           jne 0x4006c93	      3235	quickfix.c	FUNCTION_49	IF_4
0x4006d30	          0x4c89f7	                            mov rdi, r14	      3237	quickfix.c	FUNCTION_49	IF_4	CALL_5
0x4006d33	      0xe800000000	                          call 0x4006d38	      3237	quickfix.c	FUNCTION_49	IF_4	CALL_5
0x4006d38	        0x448b4d38	            mov r9d, dword [rbp + 0x38] 	      3238	quickfix.c	FUNCTION_49	IF_4	IF_5
0x4006d3c	          0x4585c9	                           test r9d, r9d	      3238	quickfix.c	FUNCTION_49	IF_4	IF_5
0x4006d3f	     0xf843d010000	                            je 0x4006e82	      3238	quickfix.c	FUNCTION_49	IF_4	IF_5
0x4006d45	    0xf60500000000	               test byte [0x04006d4c], 2	      3240	quickfix.c	FUNCTION_49	IF_4	IF_5	IF_6
0x4006d4c	     0xf849b020000	                            je 0x4006fed	      3240	quickfix.c	FUNCTION_49	IF_4	IF_5	IF_6
0x4006d52	    0x453baeac0000	           cmp r13d, dword [r14 + 0xac] 	      3242	quickfix.c	FUNCTION_49	IF_4	IF_5	IF_6	IF_7
0x4006d59	     0xf8423010000	                            je 0x4006e82	      3242	quickfix.c	FUNCTION_49	IF_4	IF_5	IF_6	IF_7
0x4006d5f	          0x4489ef	                           mov edi, r13d	      3243	quickfix.c	FUNCTION_49	IF_4	IF_5	IF_6	CALL_6
0x4006d62	      0xe800000000	                          call 0x4006d67	      3243	quickfix.c	FUNCTION_49	IF_4	IF_5	IF_6	CALL_6
0x4006d67	      0xe916010000	                           jmp 0x4006e82	      3243	quickfix.c	FUNCTION_49	IF_4	IF_5	IF_6	CALL_6
0x4006d6c	         0xf1f4000	                         nop dword [rax]	      3243	quickfix.c	FUNCTION_49	IF_4	IF_5	IF_6	CALL_6
0x4006d70	        0x4d8b7f20	            mov r15, qword [r15 + 0x20] 	      3473	quickfix.c	FUNCTION_56	CALL_1
0x4006d74	          0x4d85ff	                           test r15, r15	      3473	quickfix.c	FUNCTION_56	CALL_1
0x4006d77	     0xf846effffff	                            je 0x4006ceb	      3473	quickfix.c	FUNCTION_56	CALL_1
0x4006d7d	        0x498b7f08	                mov rdi, qword [r15 + 8]	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x4006d81	      0xe800000000	                          call 0x4006d86	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x4006d86	            0x85c0	                           test eax, eax	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x4006d88	            0x74e6	                            je 0x4006d70	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x4006d8a	    0x4983bf501900	             cmp qword [r15 + 0x1950], 0	      3441	quickfix.c	FUNCTION_54	IF_1	IF_2
0x4006d92	            0x75dc	                           jne 0x4006d70	      3441	quickfix.c	FUNCTION_54	IF_1	IF_2
0x4006d94	         0xf1f4000	                         nop dword [rax]	      3441	quickfix.c	FUNCTION_54	IF_1	IF_2
0x4006d98	        0x4d8b7708	                mov r14, qword [r15 + 8]	      3475	quickfix.c	FUNCTION_56	IF_1
0x4006d9c	          0x8b4520	            mov eax, dword [rbp + 0x20] 	      3258	quickfix.c	FUNCTION_49	ELSE_3	IF_9
0x4006d9f	    0x4c8b3d000000	            mov r15, qword [0x04006da6] 	      3256	quickfix.c	FUNCTION_49	ELSE_3
0x4006da6	          0x83f85c	                           cmp eax, 0x5c	      3258	quickfix.c	FUNCTION_49	ELSE_3	IF_9
0x4006da9	     0xf8461010000	                            je 0x4006f10	      3258	quickfix.c	FUNCTION_49	ELSE_3	IF_9
0x4006daf	          0x83f866	                           cmp eax, 0x66	      3258	quickfix.c	FUNCTION_49	ELSE_3	IF_9
0x4006db2	     0xf8458010000	                            je 0x4006f10	      3258	quickfix.c	FUNCTION_49	ELSE_3	IF_9
0x4006db8	    0x8b3d00000000	            mov edi, dword [0x04006dbe] 	      3264	quickfix.c	FUNCTION_49	ELSE_3	IF_10
0x4006dbe	            0x85ff	                           test edi, edi	      3264	quickfix.c	FUNCTION_49	ELSE_3	IF_10
0x4006dc0	     0xf855a010000	                           jne 0x4006f20	      3264	quickfix.c	FUNCTION_49	ELSE_3	IF_10
0x4006dc6	      0xbea0000000	                           mov esi, 0xa0	      3264	quickfix.c	FUNCTION_49	ELSE_3	IF_10
0x4006dcb	          0x4489ef	                           mov edi, r13d	      3267	quickfix.c	FUNCTION_49	ELSE_3	IF_11	CALL_10
0x4006dce	      0xe800000000	                          call 0x4006dd3	      3267	quickfix.c	FUNCTION_49	ELSE_3	IF_11	CALL_10
0x4006dd3	            0x85c0	                           test eax, eax	      3267	quickfix.c	FUNCTION_49	ELSE_3	IF_11	CALL_10
0x4006dd5	     0xf845a010000	                            je 0x4006f35	      3267	quickfix.c	FUNCTION_49	ELSE_3	IF_11	CALL_10
0x4006ddb	          0x8b5520	            mov edx, dword [rbp + 0x20] 	      3271	quickfix.c	FUNCTION_49	ELSE_3	IF_12
0x4006dde	    0x488b05000000	            mov rax, qword [0x04006de5] 	      3269	quickfix.c	FUNCTION_49	ELSE_3	CALL_11
0x4006de5	    0x81faf6000000	                           cmp edx, 0xf6	      3271	quickfix.c	FUNCTION_49	ELSE_3	IF_12
0x4006deb	    0xc78088020000	              mov dword [rax + 0x288], 0	      3269	quickfix.c	FUNCTION_49	ELSE_3	CALL_11
0x4006df5	    0xc780b0020000	              mov dword [rax + 0x2b0], 0	      3269	quickfix.c	FUNCTION_49	ELSE_3	CALL_11
0x4006dff	     0xf84ab010000	                            je 0x4006fb0	      3271	quickfix.c	FUNCTION_49	ELSE_3	IF_12
0x4006e05	    0x81fa01010000	                          cmp edx, 0x101	      3271	quickfix.c	FUNCTION_49	ELSE_3	IF_12
0x4006e0b	     0xf849f010000	                            je 0x4006fb0	      3271	quickfix.c	FUNCTION_49	ELSE_3	IF_12
0x4006e11	          0x4939c4	                            cmp r12, rax	      3282	quickfix.c	FUNCTION_49	ELSE_3	IF_13
0x4006e14	      0xb800000000	                              mov eax, 0	      3282	quickfix.c	FUNCTION_49	ELSE_3	IF_13
0x4006e19	        0x4c0f45e0	                         cmovne r12, rax	      3282	quickfix.c	FUNCTION_49	ELSE_3	IF_13
0x4006e1d	          0x4d85f6	                           test r14, r14	      3283	quickfix.c	FUNCTION_49	ELSE_3	IF_14
0x4006e20	     0xf8409020000	                            je 0x400702f	      3283	quickfix.c	FUNCTION_49	ELSE_3	IF_14
0x4006e26	        0x4883ec08	                              sub rsp, 8	      3285	quickfix.c	FUNCTION_49	ELSE_3	IF_14	CALL_12
0x4006e2a	    0x418bbeb80000	            mov edi, dword [r14 + 0xb8] 	      3285	quickfix.c	FUNCTION_49	ELSE_3	IF_14	CALL_12
0x4006e31	            0x31c9	                            xor ecx, ecx	      3285	quickfix.c	FUNCTION_49	ELSE_3	IF_14	CALL_12
0x4006e33	            0x4154	                                push r12	      3285	quickfix.c	FUNCTION_49	ELSE_3	IF_14	CALL_12
0x4006e35	            0x31f6	                            xor esi, esi	      3285	quickfix.c	FUNCTION_49	ELSE_3	IF_14	CALL_12
0x4006e37	    0x41b905000000	                              mov r9d, 5	      3285	quickfix.c	FUNCTION_49	ELSE_3	IF_14	CALL_12
0x4006e3d	    0x41b801000000	                              mov r8d, 1	      3285	quickfix.c	FUNCTION_49	ELSE_3	IF_14	CALL_12
0x4006e43	            0x31d2	                            xor edx, edx	      3285	quickfix.c	FUNCTION_49	ELSE_3	IF_14	CALL_12
0x4006e45	      0xe800000000	                          call 0x4006e4a	      3285	quickfix.c	FUNCTION_49	ELSE_3	IF_14	CALL_12
0x4006e4a	              0x59	                                 pop rcx	      3285	quickfix.c	FUNCTION_49	ELSE_3	IF_14	CALL_12
0x4006e4b	              0x5e	                                 pop rsi	      3285	quickfix.c	FUNCTION_49	ELSE_3	IF_14	CALL_12
0x4006e4c	      0x488b442408	                mov rax, qword [rsp + 8]	      3308	quickfix.c	FUNCTION_49	ELSE_3	IF_15
0x4006e51	    0x483b05000000	            cmp rax, qword [0x04006e58] 	      3308	quickfix.c	FUNCTION_49	ELSE_3	IF_15
0x4006e58	    0x488b05000000	            mov rax, qword [0x04006e5f] 	      3308	quickfix.c	FUNCTION_49	ELSE_3	IF_15
0x4006e5f	     0xf84a2010000	                            je 0x4007007	      3308	quickfix.c	FUNCTION_49	ELSE_3	IF_15
0x4006e65	    0xc78048020000	              mov dword [rax + 0x248], 1	      3310	quickfix.c	FUNCTION_49	ELSE_3
0x4006e6f	          0x4c89ff	                            mov rdi, r15	      3311	quickfix.c	FUNCTION_49	ELSE_3	IF_16	CALL_20
0x4006e72	      0xe800000000	                          call 0x4006e77	      3311	quickfix.c	FUNCTION_49	ELSE_3	IF_16	CALL_20
0x4006e77	            0x85c0	                           test eax, eax	      3311	quickfix.c	FUNCTION_49	ELSE_3	IF_16	CALL_20
0x4006e79	            0x7407	                            je 0x4006e82	      3311	quickfix.c	FUNCTION_49	ELSE_3	IF_16	CALL_20
0x4006e7b	    0x4c893d000000	            mov qword [0x04006e82], r15 	      3312	quickfix.c	FUNCTION_49	ELSE_3	IF_16
0x4006e82	        0x48634308	            movsxd rax, dword [rbx + 8] 	      3544	quickfix.c	FUNCTION_59	IF_1
0x4006e86	    0x488d14c50000	                        lea rdx, [rax*8]	      3544	quickfix.c	FUNCTION_59	IF_1
0x4006e8e	        0x48c1e007	                              shl rax, 7	      3544	quickfix.c	FUNCTION_59	IF_1
0x4006e92	          0x4829d0	                            sub rax, rdx	      3544	quickfix.c	FUNCTION_59	IF_1
0x4006e95	      0x488b740340	      mov rsi, qword [rbx + rax + 0x40] 	      3544	quickfix.c	FUNCTION_59	IF_1
0x4006e9a	          0x4885f6	                           test rsi, rsi	      3544	quickfix.c	FUNCTION_59	IF_1
0x4006e9d	            0x740a	                            je 0x4006ea9	      3544	quickfix.c	FUNCTION_59	IF_1
0x4006e9f	      0xbf00000000	                              mov edi, 0	      3545	quickfix.c	FUNCTION_59	IF_1	CALL_1
0x4006ea4	      0xe800000000	                          call 0x4006ea9	      3545	quickfix.c	FUNCTION_59	IF_1	CALL_1
0x4006ea9	    0x488b35000000	            mov rsi, qword [0x04006eb0] 	      3320	quickfix.c	FUNCTION_49	CALL_22
0x4006eb0	          0x4889df	                            mov rdi, rbx	      3320	quickfix.c	FUNCTION_49	CALL_22
0x4006eb3	            0x31d2	                            xor edx, edx	      3320	quickfix.c	FUNCTION_49	CALL_22
0x4006eb5	      0xe8e6a2ffff	                 call sym.qf_fill_buffer	      3320	quickfix.c	FUNCTION_49	CALL_22
0x4006eba	        0x48634308	            movsxd rax, dword [rbx + 8] 	      3322	quickfix.c	FUNCTION_49
0x4006ebe	    0x488b15000000	            mov rdx, qword [0x04006ec5] 	      3322	quickfix.c	FUNCTION_49
0x4006ec5	    0x488d0cc50000	                        lea rcx, [rax*8]	      3322	quickfix.c	FUNCTION_49
0x4006ecd	        0x48c1e007	                              shl rax, 7	      3322	quickfix.c	FUNCTION_49
0x4006ed1	          0x4829c8	                            sub rax, rcx	      3322	quickfix.c	FUNCTION_49
0x4006ed4	      0x4863440334	   movsxd rax, dword [rbx + rax + 0x34] 	      3322	quickfix.c	FUNCTION_49
0x4006ed9	    0xc74240000000	               mov dword [rdx + 0x40], 0	      3323	quickfix.c	FUNCTION_49
0x4006ee0	        0x48894238	             mov qword [rdx + 0x38], rax	      3322	quickfix.c	FUNCTION_49
0x4006ee4	      0xe800000000	                          call 0x4006ee9	      3324	quickfix.c	FUNCTION_49	CALL_23
0x4006ee9	        0x4883c418	                           add rsp, 0x18	      3326	quickfix.c	FUNCTION_49
0x4006eed	              0x5b	                                 pop rbx	      3326	quickfix.c	FUNCTION_49
0x4006eee	              0x5d	                                 pop rbp	      3326	quickfix.c	FUNCTION_49
0x4006eef	            0x415c	                                 pop r12	      3326	quickfix.c	FUNCTION_49
0x4006ef1	            0x415d	                                 pop r13	      3326	quickfix.c	FUNCTION_49
0x4006ef3	            0x415e	                                 pop r14	      3326	quickfix.c	FUNCTION_49
0x4006ef5	            0x415f	                                 pop r15	      3326	quickfix.c	FUNCTION_49
0x4006ef7	      0xe900000000	                           jmp 0x4006efc	      3325	quickfix.c	FUNCTION_49	CALL_24
0x4006efc	         0xf1f4000	                         nop dword [rax]	      3325	quickfix.c	FUNCTION_49	CALL_24
0x4006f00	        0x448b6d48	           mov r13d, dword [rbp + 0x48] 	      3221	quickfix.c	FUNCTION_49	IF_3
0x4006f04	      0xe93cfdffff	                           jmp 0x4006c45	      3221	quickfix.c	FUNCTION_49	IF_3
0x4006f09	     0xf1f80000000	                         nop dword [rax]	      3221	quickfix.c	FUNCTION_49	IF_3
0x4006f10	    0x448b05000000	            mov r8d, dword [0x04006f17] 	      3259	quickfix.c	FUNCTION_49	ELSE_3	IF_9
0x4006f17	          0x4585c0	                           test r8d, r8d	      3259	quickfix.c	FUNCTION_49	ELSE_3	IF_9
0x4006f1a	     0xf84bc000000	                            je 0x4006fdc	      3259	quickfix.c	FUNCTION_49	ELSE_3	IF_9
0x4006f20	      0xbe80000000	                           mov esi, 0x80	      3477	quickfix.c	FUNCTION_56
0x4006f25	          0x4489ef	                           mov edi, r13d	      3267	quickfix.c	FUNCTION_49	ELSE_3	IF_11	CALL_10
0x4006f28	      0xe800000000	                          call 0x4006f2d	      3267	quickfix.c	FUNCTION_49	ELSE_3	IF_11	CALL_10
0x4006f2d	            0x85c0	                           test eax, eax	      3267	quickfix.c	FUNCTION_49	ELSE_3	IF_11	CALL_10
0x4006f2f	     0xf85a6feffff	                           jne 0x4006ddb	      3267	quickfix.c	FUNCTION_49	ELSE_3	IF_11	CALL_10
0x4006f35	        0x4883c418	                           add rsp, 0x18	      3326	quickfix.c	FUNCTION_49
0x4006f39	              0x5b	                                 pop rbx	      3326	quickfix.c	FUNCTION_49
0x4006f3a	              0x5d	                                 pop rbp	      3326	quickfix.c	FUNCTION_49
0x4006f3b	            0x415c	                                 pop r12	      3326	quickfix.c	FUNCTION_49
0x4006f3d	            0x415d	                                 pop r13	      3326	quickfix.c	FUNCTION_49
0x4006f3f	            0x415e	                                 pop r14	      3326	quickfix.c	FUNCTION_49
0x4006f41	            0x415f	                                 pop r15	      3326	quickfix.c	FUNCTION_49
0x4006f43	              0xc3	                                     ret	      3326	quickfix.c	FUNCTION_49
0x4006f44	         0xf1f4000	                         nop dword [rax]	      3326	quickfix.c	FUNCTION_49
0x4006f48	      0x498b7c2408	                mov rdi, qword [r12 + 8]	      3212	quickfix.c	FUNCTION_49	IF_1
0x4006f4d	      0xe800000000	                          call 0x4006f52	      3212	quickfix.c	FUNCTION_49	IF_1
0x4006f52	            0x85c0	                           test eax, eax	      3212	quickfix.c	FUNCTION_49	IF_1
0x4006f54	    0x488b05000000	            mov rax, qword [0x04006f5b] 	      3212	quickfix.c	FUNCTION_49	IF_1
0x4006f5b	            0x7413	                            je 0x4006f70	      3212	quickfix.c	FUNCTION_49	IF_1
0x4006f5d	    0x488b98501900	          mov rbx, qword [rax + 0x1950] 	      3212	quickfix.c	FUNCTION_49	IF_1
0x4006f64	          0x4885db	                           test rbx, rbx	      3212	quickfix.c	FUNCTION_49	IF_1
0x4006f67	     0xf85c5fcffff	                           jne 0x4006c32	      3212	quickfix.c	FUNCTION_49	IF_1
0x4006f6d	           0xf1f00	                         nop dword [rax]	      3212	quickfix.c	FUNCTION_49	IF_1
0x4006f70	    0x488b98481900	          mov rbx, qword [rax + 0x1948] 	      3212	quickfix.c	FUNCTION_49	IF_1
0x4006f77	          0x4885db	                           test rbx, rbx	      3213	quickfix.c	FUNCTION_49	IF_1	IF_2
0x4006f7a	     0xf85b2fcffff	                           jne 0x4006c32	      3213	quickfix.c	FUNCTION_49	IF_1	IF_2
0x4006f80	            0x31ff	                            xor edi, edi	      3215	quickfix.c	FUNCTION_49	IF_1	IF_2	CALL_2
0x4006f82	      0xba05000000	                              mov edx, 5	      3215	quickfix.c	FUNCTION_49	IF_1	IF_2	CALL_2
0x4006f87	      0xbe00000000	                              mov esi, 0	      3215	quickfix.c	FUNCTION_49	IF_1	IF_2	CALL_2
0x4006f8c	      0xe800000000	                          call 0x4006f91	      3215	quickfix.c	FUNCTION_49	IF_1	IF_2	CALL_2
0x4006f91	        0x4883c418	                           add rsp, 0x18	      3326	quickfix.c	FUNCTION_49
0x4006f95	          0x4889c7	                            mov rdi, rax	      3215	quickfix.c	FUNCTION_49	IF_1	IF_2	CALL_2
0x4006f98	              0x5b	                                 pop rbx	      3326	quickfix.c	FUNCTION_49
0x4006f99	              0x5d	                                 pop rbp	      3326	quickfix.c	FUNCTION_49
0x4006f9a	            0x415c	                                 pop r12	      3326	quickfix.c	FUNCTION_49
0x4006f9c	            0x415d	                                 pop r13	      3326	quickfix.c	FUNCTION_49
0x4006f9e	            0x415e	                                 pop r14	      3326	quickfix.c	FUNCTION_49
0x4006fa0	            0x415f	                                 pop r15	      3326	quickfix.c	FUNCTION_49
0x4006fa2	      0xe900000000	                           jmp 0x4006fa7	      3215	quickfix.c	FUNCTION_49	IF_1	IF_2	CALL_2
0x4006fa7	    0x660f1f840000	                    nop word [rax + rax]	      3215	quickfix.c	FUNCTION_49	IF_1	IF_2	CALL_2
0x4006fb0	    0x498b97481900	          mov rdx, qword [r15 + 0x1948] 	      3277	quickfix.c	FUNCTION_49	ELSE_3	IF_12
0x4006fb7	    0x488990501900	          mov qword [rax + 0x1950], rdx 	      3277	quickfix.c	FUNCTION_49	ELSE_3	IF_12
0x4006fbe	          0x830201	                      add dword [rdx], 1	      3278	quickfix.c	FUNCTION_49	ELSE_3	IF_12
0x4006fc1	      0xe94bfeffff	                           jmp 0x4006e11	      3278	quickfix.c	FUNCTION_49	ELSE_3	IF_12
0x4006fc6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3278	quickfix.c	FUNCTION_49	ELSE_3	IF_12
0x4006fd0	    0x4c8b3d000000	            mov r15, qword [0x04006fd7] 	      3473	quickfix.c	FUNCTION_56	CALL_1
0x4006fd7	      0xe9d4fcffff	                           jmp 0x4006cb0	      3473	quickfix.c	FUNCTION_56	CALL_1
0x4006fdc	    0x488b3d000000	            mov rdi, qword [0x04006fe3] 	      3262	quickfix.c	FUNCTION_49	ELSE_3	CALL_9
0x4006fe3	      0xe800000000	                          call 0x4006fe8	      3262	quickfix.c	FUNCTION_49	ELSE_3	CALL_9
0x4006fe8	      0xe9cbfdffff	                           jmp 0x4006db8	      3262	quickfix.c	FUNCTION_49	ELSE_3	CALL_9
0x4006fed	    0x453baea00000	           cmp r13d, dword [r14 + 0xa0] 	      3245	quickfix.c	FUNCTION_49	IF_4	IF_5	ELSE_2	IF_8
0x4006ff4	     0xf8488feffff	                            je 0x4006e82	      3245	quickfix.c	FUNCTION_49	IF_4	IF_5	ELSE_2	IF_8
0x4006ffa	          0x4489ef	                           mov edi, r13d	      3246	quickfix.c	FUNCTION_49	IF_4	IF_5	ELSE_2	IF_8
0x4006ffd	      0xe800000000	                          call 0x4007002	      3246	quickfix.c	FUNCTION_49	IF_4	IF_5	ELSE_2	IF_8
0x4007002	      0xe97bfeffff	                           jmp 0x4006e82	      3246	quickfix.c	FUNCTION_49	IF_4	IF_5	ELSE_2	IF_8
0x4007007	    0x486390ac0000	         movsxd rdx, dword [rax + 0xac] 	      3308	quickfix.c	FUNCTION_49	ELSE_3	IF_15
0x400700e	    0x483b15000000	            cmp rdx, qword [0x04007015] 	      3308	quickfix.c	FUNCTION_49	ELSE_3	IF_15
0x4007015	     0xf854afeffff	                           jne 0x4006e65	      3308	quickfix.c	FUNCTION_49	ELSE_3	IF_15
0x400701b	          0x4489ef	                           mov edi, r13d	      3309	quickfix.c	FUNCTION_49	ELSE_3	CALL_19
0x400701e	      0xe800000000	                          call 0x4007023	      3309	quickfix.c	FUNCTION_49	ELSE_3	CALL_19
0x4007023	    0x488b05000000	            mov rax, qword [0x0400702a] 	      3309	quickfix.c	FUNCTION_49	ELSE_3	CALL_19
0x400702a	      0xe936feffff	                           jmp 0x4006e65	      3309	quickfix.c	FUNCTION_49	ELSE_3	CALL_19
0x400702f	        0x4883ec08	                              sub rsp, 8	      3290	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_13
0x4007033	    0x41b901000000	                              mov r9d, 1	      3290	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_13
0x4007039	    0x41b801000000	                              mov r8d, 1	      3290	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_13
0x400703f	            0x4154	                                push r12	      3290	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_13
0x4007041	            0x31c9	                            xor ecx, ecx	      3290	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_13
0x4007043	            0x31d2	                            xor edx, edx	      3290	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_13
0x4007045	            0x31f6	                            xor esi, esi	      3290	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_13
0x4007047	            0x31ff	                            xor edi, edi	      3290	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_13
0x4007049	      0xe800000000	                          call 0x400704e	      3290	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_13
0x400704e	      0xb904000000	                              mov ecx, 4	      3292	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_14
0x4007053	            0x31d2	                            xor edx, edx	      3292	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_14
0x4007055	            0x31f6	                            xor esi, esi	      3292	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_14
0x4007057	      0xbf00000000	                              mov edi, 0	      3292	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_14
0x400705c	      0xe800000000	                          call 0x4007061	      3292	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_14
0x4007061	      0xb904000000	                              mov ecx, 4	      3293	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_15
0x4007066	      0xba00000000	                              mov edx, 0	      3293	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_15
0x400706b	            0x31f6	                            xor esi, esi	      3293	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_15
0x400706d	      0xbf00000000	                              mov edi, 0	      3293	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_15
0x4007072	      0xe800000000	                          call 0x4007077	      3293	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_15
0x4007077	      0xb904000000	                              mov ecx, 4	      3295	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_16
0x400707c	      0xba00000000	                              mov edx, 0	      3295	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_16
0x4007081	            0x31f6	                            xor esi, esi	      3295	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_16
0x4007083	      0xbf00000000	                              mov edi, 0	      3295	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_16
0x4007088	      0xe800000000	                          call 0x400708d	      3295	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_16
0x400708d	    0x488b05000000	            mov rax, qword [0x04007094] 	      3296	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_17
0x4007094	      0xba00000000	                              mov edx, 0	      3301	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_18
0x4007099	      0xb904000000	                              mov ecx, 4	      3301	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_18
0x400709e	            0x31f6	                            xor esi, esi	      3301	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_18
0x40070a0	      0xbf00000000	                              mov edi, 0	      3301	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_18
0x40070a5	    0xc78088020000	              mov dword [rax + 0x288], 0	      3296	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_17
0x40070af	    0xc780b0020000	              mov dword [rax + 0x2b0], 0	      3296	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_17
0x40070b9	    0xc780c0010000	              mov dword [rax + 0x1c0], 0	      3298	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4
0x40070c3	      0xe800000000	                          call 0x40070c8	      3301	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_18
0x40070c8	              0x58	                                 pop rax	      3301	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_18
0x40070c9	              0x5a	                                 pop rdx	      3301	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_18
0x40070ca	      0xe97dfdffff	                           jmp 0x4006e4c	      3301	quickfix.c	FUNCTION_49	ELSE_3	ELSE_4	CALL_18
qf_get_properties	functions,0:WHILE,0:DO,0:CALL,15:SWITCH,0:IF,13:ELSE,0:FOR,0	598
0x400a190	            0x4157	                                push r15	      5295	quickfix.c	FUNCTION_95
0x400a192	            0x4156	                                push r14	      5295	quickfix.c	FUNCTION_95
0x400a194	          0x4989fe	                            mov r14, rdi	      5295	quickfix.c	FUNCTION_95
0x400a197	            0x4155	                                push r13	      5295	quickfix.c	FUNCTION_95
0x400a199	            0x4154	                                push r12	      5295	quickfix.c	FUNCTION_95
0x400a19b	          0x4989d4	                            mov r12, rdx	      5295	quickfix.c	FUNCTION_95
0x400a19e	              0x55	                                push rbp	      5295	quickfix.c	FUNCTION_95
0x400a19f	              0x53	                                push rbx	      5295	quickfix.c	FUNCTION_95
0x400a1a0	          0x4889f5	                            mov rbp, rsi	      5295	quickfix.c	FUNCTION_95
0x400a1a3	      0xbaffffffff	                     mov edx, 0xffffffff	      5302	quickfix.c	FUNCTION_95	IF_1	CALL_1
0x400a1a8	      0xbe00000000	                              mov esi, 0	      5302	quickfix.c	FUNCTION_95	IF_1	CALL_1
0x400a1ad	          0x4889ef	                            mov rdi, rbp	      5302	quickfix.c	FUNCTION_95	IF_1	CALL_1
0x400a1b0	        0x4883ec18	                           sub rsp, 0x18	      5295	quickfix.c	FUNCTION_95
0x400a1b4	      0xe800000000	                          call 0x400a1b9	      5302	quickfix.c	FUNCTION_95	IF_1	CALL_1
0x400a1b9	          0x4885c0	                           test rax, rax	      5302	quickfix.c	FUNCTION_95	IF_1	CALL_1
0x400a1bc	     0xf842e010000	                            je 0x400a2f0	      5302	quickfix.c	FUNCTION_95	IF_1	CALL_1
0x400a1c2	          0x833805	                      cmp dword [rax], 5	      5024	quickfix.c	FUNCTION_86	IF_1
0x400a1c5	          0x4889c3	                            mov rbx, rax	      5024	quickfix.c	FUNCTION_86	IF_1
0x400a1c8	            0x7416	                            je 0x400a1e0	      5024	quickfix.c	FUNCTION_86	IF_1
0x400a1ca	            0x31c0	                            xor eax, eax	      5267	quickfix.c	FUNCTION_93	IF_1	ELSE_1
0x400a1cc	        0x4883c418	                           add rsp, 0x18	      5340	quickfix.c	FUNCTION_95
0x400a1d0	              0x5b	                                 pop rbx	      5340	quickfix.c	FUNCTION_95
0x400a1d1	              0x5d	                                 pop rbp	      5340	quickfix.c	FUNCTION_95
0x400a1d2	            0x415c	                                 pop r12	      5340	quickfix.c	FUNCTION_95
0x400a1d4	            0x415d	                                 pop r13	      5340	quickfix.c	FUNCTION_95
0x400a1d6	            0x415e	                                 pop r14	      5340	quickfix.c	FUNCTION_95
0x400a1d8	            0x415f	                                 pop r15	      5340	quickfix.c	FUNCTION_95
0x400a1da	              0xc3	                                     ret	      5340	quickfix.c	FUNCTION_95
0x400a1db	       0xf1f440000	                   nop dword [rax + rax]	      5340	quickfix.c	FUNCTION_95
0x400a1e0	      0x4883780800	                  cmp qword [rax + 8], 0	      5024	quickfix.c	FUNCTION_86	IF_1
0x400a1e5	            0x74e3	                            je 0x400a1ca	      5024	quickfix.c	FUNCTION_86	IF_1
0x400a1e7	      0xbaffffffff	                     mov edx, 0xffffffff	      5029	quickfix.c	FUNCTION_86	IF_1	IF_2	CALL_1
0x400a1ec	      0xbe00000000	                              mov esi, 0	      5029	quickfix.c	FUNCTION_86	IF_1	IF_2	CALL_1
0x400a1f1	          0x4889ef	                            mov rdi, rbp	      5029	quickfix.c	FUNCTION_86	IF_1	IF_2	CALL_1
0x400a1f4	    0x4c8b2d000000	            mov r13, qword [0x0400a1fb] 	      5019	quickfix.c	FUNCTION_86
0x400a1fb	      0xe800000000	                          call 0x400a200	      5029	quickfix.c	FUNCTION_86	IF_1	IF_2	CALL_1
0x400a200	          0x4885c0	                           test rax, rax	      5029	quickfix.c	FUNCTION_86	IF_1	IF_2	CALL_1
0x400a203	            0x740e	                            je 0x400a213	      5029	quickfix.c	FUNCTION_86	IF_1	IF_2	CALL_1
0x400a205	          0x833802	                      cmp dword [rax], 2	      5031	quickfix.c	FUNCTION_86	IF_1	IF_2	IF_3
0x400a208	            0x75c0	                           jne 0x400a1ca	      5031	quickfix.c	FUNCTION_86	IF_1	IF_2	IF_3
0x400a20a	        0x4c8b6808	                mov r13, qword [rax + 8]	      5032	quickfix.c	FUNCTION_86	IF_1	IF_2	IF_3
0x400a20e	          0x4d85ed	                           test r13, r13	      5031	quickfix.c	FUNCTION_86	IF_1	IF_2	IF_3
0x400a211	            0x74b7	                            je 0x400a1ca	      5031	quickfix.c	FUNCTION_86	IF_1	IF_2	IF_3
0x400a213	      0xe800000000	                          call 0x400a218	      5037	quickfix.c	FUNCTION_86	IF_1	CALL_2
0x400a218	          0x4885c0	                           test rax, rax	      5038	quickfix.c	FUNCTION_86	IF_1	IF_4
0x400a21b	          0x4989c6	                            mov r14, rax	      5037	quickfix.c	FUNCTION_86	IF_1	CALL_2
0x400a21e	            0x74aa	                            je 0x400a1ca	      5038	quickfix.c	FUNCTION_86	IF_1	IF_4
0x400a220	      0xbfc0040000	                          mov edi, 0x4c0	      5041	quickfix.c	FUNCTION_86	IF_1	CALL_3
0x400a225	      0xe800000000	                          call 0x400a22a	      5041	quickfix.c	FUNCTION_86	IF_1	CALL_3
0x400a22a	          0x4885c0	                           test rax, rax	      5042	quickfix.c	FUNCTION_86	IF_1	IF_5
0x400a22d	          0x4889c5	                            mov rbp, rax	      5041	quickfix.c	FUNCTION_86	IF_1	CALL_3
0x400a230	     0xf849a000000	                            je 0x400a2d0	      5042	quickfix.c	FUNCTION_86	IF_1	IF_5
0x400a236	        0x488d7808	                      lea rdi, [rax + 8]	        90	string3.h	FUNCTION_118	CALL_6
0x400a23a	          0x4889c1	                            mov rcx, rax	        90	string3.h	FUNCTION_118	CALL_6
0x400a23d	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_118	CALL_6
0x400a244	    0x48c780b80400	              mov qword [rax + 0x4b8], 0	        90	string3.h	FUNCTION_118	CALL_6
0x400a24f	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_118	CALL_6
0x400a251	        0x4883ec08	                              sub rsp, 8	      5047	quickfix.c	FUNCTION_86	IF_1	IF_5	IF_6	CALL_5
0x400a255	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_118	CALL_6
0x400a259	            0x31d2	                            xor edx, edx	      5047	quickfix.c	FUNCTION_86	IF_1	IF_5	IF_6	CALL_5
0x400a25b	            0x31f6	                            xor esi, esi	      5047	quickfix.c	FUNCTION_86	IF_1	IF_5	IF_6	CALL_5
0x400a25d	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_118	CALL_6
0x400a260	          0x4d89e9	                             mov r9, r13	      5047	quickfix.c	FUNCTION_86	IF_1	IF_5	IF_6	CALL_5
0x400a263	          0x4989d8	                             mov r8, rbx	      5047	quickfix.c	FUNCTION_86	IF_1	IF_5	IF_6	CALL_5
0x400a266	    0x81c1c0040000	                          add ecx, 0x4c0	        90	string3.h	FUNCTION_118	CALL_6
0x400a26c	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_118	CALL_6
0x400a26f	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_118	CALL_6
0x400a272	          0x4889ef	                            mov rdi, rbp	      5047	quickfix.c	FUNCTION_86	IF_1	IF_5	IF_6	CALL_5
0x400a275	        0x83450001	                      add dword [rbp], 1	      5045	quickfix.c	FUNCTION_86	IF_1	IF_5
0x400a279	            0x6a00	                                  push 0	      5047	quickfix.c	FUNCTION_86	IF_1	IF_5	IF_6	CALL_5
0x400a27b	            0x6a00	                                  push 0	      5047	quickfix.c	FUNCTION_86	IF_1	IF_5	IF_6	CALL_5
0x400a27d	            0x6a00	                                  push 0	      5047	quickfix.c	FUNCTION_86	IF_1	IF_5	IF_6	CALL_5
0x400a27f	            0x6a00	                                  push 0	      5047	quickfix.c	FUNCTION_86	IF_1	IF_5	IF_6	CALL_5
0x400a281	            0x6a01	                                  push 1	      5047	quickfix.c	FUNCTION_86	IF_1	IF_5	IF_6	CALL_5
0x400a283	      0xe81889ffff	                    call sym.qf_init_ext	      5047	quickfix.c	FUNCTION_86	IF_1	IF_5	IF_6	CALL_5
0x400a288	        0x4883c430	                           add rsp, 0x30	      5047	quickfix.c	FUNCTION_86	IF_1	IF_5	IF_6	CALL_5
0x400a28c	            0x85c0	                           test eax, eax	      5047	quickfix.c	FUNCTION_86	IF_1	IF_5	IF_6	CALL_5
0x400a28e	            0x7e38	                           jle 0x400a2c8	      5047	quickfix.c	FUNCTION_86	IF_1	IF_5	IF_6	CALL_5
0x400a290	            0x31d2	                            xor edx, edx	      5050	quickfix.c	FUNCTION_86	IF_1	IF_5	IF_6	CALL_6
0x400a292	            0x31f6	                            xor esi, esi	      5050	quickfix.c	FUNCTION_86	IF_1	IF_5	IF_6	CALL_6
0x400a294	          0x4c89f1	                            mov rcx, r14	      5050	quickfix.c	FUNCTION_86	IF_1	IF_5	IF_6	CALL_6
0x400a297	          0x4889ef	                            mov rdi, rbp	      5050	quickfix.c	FUNCTION_86	IF_1	IF_5	IF_6	CALL_6
0x400a29a	      0xe800000000	                          call 0x400a29f	      5050	quickfix.c	FUNCTION_86	IF_1	IF_5	IF_6	CALL_6
0x400a29f	            0x31f6	                            xor esi, esi	      3031	quickfix.c	FUNCTION_44	CALL_1
0x400a2a1	          0x4889ef	                            mov rdi, rbp	      3031	quickfix.c	FUNCTION_44	CALL_1
0x400a2a4	      0xe8e769ffff	                  call sym.qf_free_items	      3031	quickfix.c	FUNCTION_44	CALL_1
0x400a2a9	        0x488b7d40	            mov rdi, qword [rbp + 0x40] 	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400a2ad	          0x4885ff	                           test rdi, rdi	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400a2b0	            0x740d	                            je 0x400a2bf	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400a2b2	      0xe800000000	                          call 0x400a2b7	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400a2b7	    0x48c745400000	               mov qword [rbp + 0x40], 0	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400a2bf	        0x488b7d48	            mov rdi, qword [rbp + 0x48] 	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400a2c3	      0xe800000000	                          call 0x400a2c8	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400a2c8	          0x4889ef	                            mov rdi, rbp	      5053	quickfix.c	FUNCTION_86	IF_1	IF_5	CALL_8
0x400a2cb	      0xe800000000	                          call 0x400a2d0	      5053	quickfix.c	FUNCTION_86	IF_1	IF_5	CALL_8
0x400a2d0	          0x4c89f2	                            mov rdx, r14	      5055	quickfix.c	FUNCTION_86	IF_1	CALL_9
0x400a2d3	      0xbe00000000	                              mov esi, 0	      5055	quickfix.c	FUNCTION_86	IF_1	CALL_9
0x400a2d8	          0x4c89e7	                            mov rdi, r12	      5055	quickfix.c	FUNCTION_86	IF_1	CALL_9
0x400a2db	      0xe800000000	                          call 0x400a2e0	      5055	quickfix.c	FUNCTION_86	IF_1	CALL_9
0x400a2e0	      0xb801000000	                              mov eax, 1	      5056	quickfix.c	FUNCTION_86	IF_1
0x400a2e5	      0xe9e2feffff	                           jmp 0x400a1cc	      5056	quickfix.c	FUNCTION_86	IF_1
0x400a2ea	    0x660f1f440000	                    nop word [rax + rax]	      5056	quickfix.c	FUNCTION_86	IF_1
0x400a2f0	          0x4d85f6	                           test r14, r14	      5305	quickfix.c	FUNCTION_95	IF_2
0x400a2f3	    0x41bd00000000	                             mov r13d, 0	      5296	quickfix.c	FUNCTION_95
0x400a2f9	            0x7421	                            je 0x400a31c	      5305	quickfix.c	FUNCTION_95	IF_2
0x400a2fb	        0x498b7e08	                mov rdi, qword [r14 + 8]	      5306	quickfix.c	FUNCTION_95	IF_2
0x400a2ff	      0xe800000000	                          call 0x400a304	      5306	quickfix.c	FUNCTION_95	IF_2
0x400a304	            0x85c0	                           test eax, eax	      5306	quickfix.c	FUNCTION_95	IF_2
0x400a306	     0xf8414020000	                            je 0x400a520	      5306	quickfix.c	FUNCTION_95	IF_2
0x400a30c	    0x4d8bae501900	          mov r13, qword [r14 + 0x1950] 	      5306	quickfix.c	FUNCTION_95	IF_2
0x400a313	          0x4d85ed	                           test r13, r13	      5306	quickfix.c	FUNCTION_95	IF_2
0x400a316	     0xf8404020000	                            je 0x400a520	      5306	quickfix.c	FUNCTION_95	IF_2
0x400a31c	      0xbaffffffff	                     mov edx, 0xffffffff	      5088	quickfix.c	FUNCTION_88	IF_1	CALL_1
0x400a321	      0xbe00000000	                              mov esi, 0	      5088	quickfix.c	FUNCTION_88	IF_1	CALL_1
0x400a326	          0x4889ef	                            mov rdi, rbp	      5088	quickfix.c	FUNCTION_88	IF_1	CALL_1
0x400a329	      0xe800000000	                          call 0x400a32e	      5088	quickfix.c	FUNCTION_88	IF_1	CALL_1
0x400a32e	        0x4883f801	                              cmp rax, 1	      5088	quickfix.c	FUNCTION_88	IF_1	CALL_1
0x400a332	      0xbaffffffff	                     mov edx, 0xffffffff	      5091	quickfix.c	FUNCTION_88	IF_2	CALL_2
0x400a337	      0xbe00000000	                              mov esi, 0	      5091	quickfix.c	FUNCTION_88	IF_2	CALL_2
0x400a33c	            0x19db	                            sbb ebx, ebx	      5088	quickfix.c	FUNCTION_88	IF_1	CALL_1
0x400a33e	          0x4889ef	                            mov rdi, rbp	      5091	quickfix.c	FUNCTION_88	IF_2	CALL_2
0x400a341	    0x81e302feffff	                     and ebx, 0xfffffe02	      5088	quickfix.c	FUNCTION_88	IF_1	CALL_1
0x400a347	    0x81c3ff010000	                          add ebx, 0x1ff	      5088	quickfix.c	FUNCTION_88	IF_1	CALL_1
0x400a34d	        0x4883f801	                              cmp rax, 1	      5088	quickfix.c	FUNCTION_88	IF_1	CALL_1
0x400a351	          0x4519f6	                          sbb r14d, r14d	      5088	quickfix.c	FUNCTION_88	IF_1	CALL_1
0x400a354	          0x41f7d6	                                not r14d	      5088	quickfix.c	FUNCTION_88	IF_1	CALL_1
0x400a357	      0xe800000000	                          call 0x400a35c	      5091	quickfix.c	FUNCTION_88	IF_2	CALL_2
0x400a35c	    0x4181e6ff0100	                         and r14d, 0x1ff	      5088	quickfix.c	FUNCTION_88	IF_1	CALL_1
0x400a363	          0x4885c0	                           test rax, rax	      5091	quickfix.c	FUNCTION_88	IF_2	CALL_2
0x400a366	      0xbaffffffff	                     mov edx, 0xffffffff	      5094	quickfix.c	FUNCTION_88	IF_3	CALL_3
0x400a36b	        0x410f44de	                         cmove ebx, r14d	      5091	quickfix.c	FUNCTION_88	IF_2	CALL_2
0x400a36f	      0xbe00000000	                              mov esi, 0	      5094	quickfix.c	FUNCTION_88	IF_3	CALL_3
0x400a374	          0x4889ef	                            mov rdi, rbp	      5094	quickfix.c	FUNCTION_88	IF_3	CALL_3
0x400a377	      0xe800000000	                          call 0x400a37c	      5094	quickfix.c	FUNCTION_88	IF_3	CALL_3
0x400a37c	            0x89da	                            mov edx, ebx	      5095	quickfix.c	FUNCTION_88	IF_3
0x400a37e	      0xbe00000000	                              mov esi, 0	      5097	quickfix.c	FUNCTION_88	IF_4	CALL_4
0x400a383	          0x4889ef	                            mov rdi, rbp	      5097	quickfix.c	FUNCTION_88	IF_4	CALL_4
0x400a386	          0x83ca04	                               or edx, 4	      5095	quickfix.c	FUNCTION_88	IF_3
0x400a389	          0x4885c0	                           test rax, rax	      5095	quickfix.c	FUNCTION_88	IF_3
0x400a38c	           0xf45da	                         cmovne ebx, edx	      5095	quickfix.c	FUNCTION_88	IF_3
0x400a38f	      0xbaffffffff	                     mov edx, 0xffffffff	      5097	quickfix.c	FUNCTION_88	IF_4	CALL_4
0x400a394	      0xe800000000	                          call 0x400a399	      5097	quickfix.c	FUNCTION_88	IF_4	CALL_4
0x400a399	            0x89da	                            mov edx, ebx	      5098	quickfix.c	FUNCTION_88	IF_4
0x400a39b	      0xbe00000000	                              mov esi, 0	      5100	quickfix.c	FUNCTION_88	IF_5	CALL_5
0x400a3a0	          0x4889ef	                            mov rdi, rbp	      5100	quickfix.c	FUNCTION_88	IF_5	CALL_5
0x400a3a3	          0x83ca08	                               or edx, 8	      5098	quickfix.c	FUNCTION_88	IF_4
0x400a3a6	          0x4885c0	                           test rax, rax	      5098	quickfix.c	FUNCTION_88	IF_4
0x400a3a9	           0xf45da	                         cmovne ebx, edx	      5098	quickfix.c	FUNCTION_88	IF_4
0x400a3ac	      0xbaffffffff	                     mov edx, 0xffffffff	      5100	quickfix.c	FUNCTION_88	IF_5	CALL_5
0x400a3b1	      0xe800000000	                          call 0x400a3b6	      5100	quickfix.c	FUNCTION_88	IF_5	CALL_5
0x400a3b6	            0x89da	                            mov edx, ebx	      5101	quickfix.c	FUNCTION_88	IF_5
0x400a3b8	      0xbe00000000	                              mov esi, 0	      5103	quickfix.c	FUNCTION_88	IF_6	CALL_6
0x400a3bd	          0x4889ef	                            mov rdi, rbp	      5103	quickfix.c	FUNCTION_88	IF_6	CALL_6
0x400a3c0	          0x83ca10	                            or edx, 0x10	      5101	quickfix.c	FUNCTION_88	IF_5
0x400a3c3	          0x4885c0	                           test rax, rax	      5101	quickfix.c	FUNCTION_88	IF_5
0x400a3c6	           0xf45da	                         cmovne ebx, edx	      5101	quickfix.c	FUNCTION_88	IF_5
0x400a3c9	      0xbaffffffff	                     mov edx, 0xffffffff	      5103	quickfix.c	FUNCTION_88	IF_6	CALL_6
0x400a3ce	      0xe800000000	                          call 0x400a3d3	      5103	quickfix.c	FUNCTION_88	IF_6	CALL_6
0x400a3d3	            0x89da	                            mov edx, ebx	      5104	quickfix.c	FUNCTION_88	IF_6
0x400a3d5	      0xbe00000000	                              mov esi, 0	      5106	quickfix.c	FUNCTION_88	IF_7	CALL_7
0x400a3da	          0x4889ef	                            mov rdi, rbp	      5106	quickfix.c	FUNCTION_88	IF_7	CALL_7
0x400a3dd	          0x83ca20	                            or edx, 0x20	      5104	quickfix.c	FUNCTION_88	IF_6
0x400a3e0	          0x4885c0	                           test rax, rax	      5104	quickfix.c	FUNCTION_88	IF_6
0x400a3e3	           0xf45da	                         cmovne ebx, edx	      5104	quickfix.c	FUNCTION_88	IF_6
0x400a3e6	      0xbaffffffff	                     mov edx, 0xffffffff	      5106	quickfix.c	FUNCTION_88	IF_7	CALL_7
0x400a3eb	      0xe800000000	                          call 0x400a3f0	      5106	quickfix.c	FUNCTION_88	IF_7	CALL_7
0x400a3f0	            0x89da	                            mov edx, ebx	      5107	quickfix.c	FUNCTION_88	IF_7
0x400a3f2	      0xbe00000000	                              mov esi, 0	      5109	quickfix.c	FUNCTION_88	IF_8	CALL_8
0x400a3f7	          0x4889ef	                            mov rdi, rbp	      5109	quickfix.c	FUNCTION_88	IF_8	CALL_8
0x400a3fa	          0x83ca02	                               or edx, 2	      5107	quickfix.c	FUNCTION_88	IF_7
0x400a3fd	          0x4885c0	                           test rax, rax	      5107	quickfix.c	FUNCTION_88	IF_7
0x400a400	           0xf45da	                         cmovne ebx, edx	      5107	quickfix.c	FUNCTION_88	IF_7
0x400a403	      0xbaffffffff	                     mov edx, 0xffffffff	      5109	quickfix.c	FUNCTION_88	IF_8	CALL_8
0x400a408	      0xe800000000	                          call 0x400a40d	      5109	quickfix.c	FUNCTION_88	IF_8	CALL_8
0x400a40d	            0x89da	                            mov edx, ebx	      5110	quickfix.c	FUNCTION_88	IF_8
0x400a40f	      0xbe00000000	                              mov esi, 0	      5112	quickfix.c	FUNCTION_88	IF_9	CALL_9
0x400a414	          0x4889ef	                            mov rdi, rbp	      5112	quickfix.c	FUNCTION_88	IF_9	CALL_9
0x400a417	          0x83ca40	                            or edx, 0x40	      5110	quickfix.c	FUNCTION_88	IF_8
0x400a41a	          0x4885c0	                           test rax, rax	      5110	quickfix.c	FUNCTION_88	IF_8
0x400a41d	           0xf45da	                         cmovne ebx, edx	      5110	quickfix.c	FUNCTION_88	IF_8
0x400a420	      0xbaffffffff	                     mov edx, 0xffffffff	      5112	quickfix.c	FUNCTION_88	IF_9	CALL_9
0x400a425	      0xe800000000	                          call 0x400a42a	      5112	quickfix.c	FUNCTION_88	IF_9	CALL_9
0x400a42a	            0x89da	                            mov edx, ebx	      5113	quickfix.c	FUNCTION_88	IF_9
0x400a42c	      0xbe00000000	                              mov esi, 0	      5115	quickfix.c	FUNCTION_88	IF_10	CALL_10
0x400a431	          0x4889ef	                            mov rdi, rbp	      5115	quickfix.c	FUNCTION_88	IF_10	CALL_10
0x400a434	          0x80ca80	                             or dl, 0x80	      5113	quickfix.c	FUNCTION_88	IF_9
0x400a437	          0x4885c0	                           test rax, rax	      5113	quickfix.c	FUNCTION_88	IF_9
0x400a43a	           0xf45da	                         cmovne ebx, edx	      5113	quickfix.c	FUNCTION_88	IF_9
0x400a43d	      0xbaffffffff	                     mov edx, 0xffffffff	      5115	quickfix.c	FUNCTION_88	IF_10	CALL_10
0x400a442	      0xe800000000	                          call 0x400a447	      5115	quickfix.c	FUNCTION_88	IF_10	CALL_10
0x400a447	            0x89da	                            mov edx, ebx	      5116	quickfix.c	FUNCTION_88	IF_10
0x400a449	          0x80ce01	                                or dh, 1	      5116	quickfix.c	FUNCTION_88	IF_10
0x400a44c	          0x4885c0	                           test rax, rax	      5116	quickfix.c	FUNCTION_88	IF_10
0x400a44f	           0xf45da	                         cmovne ebx, edx	      5116	quickfix.c	FUNCTION_88	IF_10
0x400a452	          0x4d85ed	                           test r13, r13	      5310	quickfix.c	FUNCTION_95	IF_3
0x400a455	            0x740c	                            je 0x400a463	      5310	quickfix.c	FUNCTION_95	IF_3
0x400a457	        0x418b5504	                mov edx, dword [r13 + 4]	      5310	quickfix.c	FUNCTION_95	IF_3
0x400a45b	            0x85d2	                           test edx, edx	      5310	quickfix.c	FUNCTION_95	IF_3
0x400a45d	     0xf85cd000000	                           jne 0x400a530	      5310	quickfix.c	FUNCTION_95	IF_3
0x400a463	          0xf6c301	                              test bl, 1	      5186	quickfix.c	ELSE_3	FUNCTION_90	IF_1
0x400a466	     0xf8574010000	                           jne 0x400a5e0	      5186	quickfix.c	ELSE_3	FUNCTION_90	IF_1
0x400a46c	          0xf6c302	                              test bl, 2	      5188	quickfix.c	ELSE_3	FUNCTION_90	IF_2
0x400a46f	     0xf8593010000	                           jne 0x400a608	      5188	quickfix.c	ELSE_3	FUNCTION_90	IF_2
0x400a475	          0xf6c304	                              test bl, 4	      5196	quickfix.c	ELSE_3	FUNCTION_90	IF_4
0x400a478	     0xf85d2030000	                           jne 0x400a850	      5196	quickfix.c	ELSE_3	FUNCTION_90	IF_4
0x400a47e	          0xf6c308	                              test bl, 8	      5198	quickfix.c	ELSE_3	FUNCTION_90	IF_5
0x400a481	            0x7462	                            je 0x400a4e5	      5198	quickfix.c	ELSE_3	FUNCTION_90	IF_5
0x400a483	          0x4d85ed	                           test r13, r13	      5072	quickfix.c	FUNCTION_87	IF_1
0x400a486	            0x7443	                            je 0x400a4cb	      5072	quickfix.c	FUNCTION_87	IF_1
0x400a488	    0x488b2d000000	            mov rbp, qword [0x0400a48f] 	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400a48f	          0x4885ed	                           test rbp, rbp	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400a492	            0x7437	                            je 0x400a4cb	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400a494	    0x4981fd000000	                              cmp r13, 0	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400a49b	     0xf842f030000	                            je 0x400a7d0	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400a4a1	     0xf1f80000000	                         nop dword [rax]	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400a4a8	        0x488b7d08	                mov rdi, qword [rbp + 8]	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400a4ac	      0xe800000000	                          call 0x400a4b1	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400a4b1	            0x85c0	                           test eax, eax	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400a4b3	            0x740d	                            je 0x400a4c2	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400a4b5	    0x4c3bad501900	          cmp r13, qword [rbp + 0x1950] 	      3442	quickfix.c	FUNCTION_54	IF_1	IF_2
0x400a4bc	     0xf8487040000	                            je 0x400a949	      3442	quickfix.c	FUNCTION_54	IF_1	IF_2
0x400a4c2	        0x488b6d20	            mov rbp, qword [rbp + 0x20] 	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400a4c6	          0x4885ed	                           test rbp, rbp	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400a4c9	            0x75dd	                           jne 0x400a4a8	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400a4cb	            0x31d2	                            xor edx, edx	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x400a4cd	            0x31c9	                            xor ecx, ecx	      5199	quickfix.c	ELSE_3	FUNCTION_90	CALL_6
0x400a4cf	      0xbe00000000	                              mov esi, 0	      5199	quickfix.c	ELSE_3	FUNCTION_90	CALL_6
0x400a4d4	          0x4c89e7	                            mov rdi, r12	      5199	quickfix.c	ELSE_3	FUNCTION_90	CALL_6
0x400a4d7	      0xe800000000	                          call 0x400a4dc	      5199	quickfix.c	ELSE_3	FUNCTION_90	CALL_6
0x400a4dc	          0x83f801	                              cmp eax, 1	      5200	quickfix.c	ELSE_3	FUNCTION_90	IF_6
0x400a4df	     0xf85e7fcffff	                           jne 0x400a1cc	      5200	quickfix.c	ELSE_3	FUNCTION_90	IF_6
0x400a4e5	          0xf6c310	                           test bl, 0x10	      5200	quickfix.c	ELSE_3	FUNCTION_90	IF_6
0x400a4e8	     0xf85c2030000	                           jne 0x400a8b0	      5200	quickfix.c	ELSE_3	FUNCTION_90	IF_6
0x400a4ee	          0xf6c320	                           test bl, 0x20	      5202	quickfix.c	ELSE_3	FUNCTION_90	IF_7
0x400a4f1	     0xf8599030000	                           jne 0x400a890	      5202	quickfix.c	ELSE_3	FUNCTION_90	IF_7
0x400a4f7	          0xf6c340	                           test bl, 0x40	      5204	quickfix.c	ELSE_3	FUNCTION_90	IF_8
0x400a4fa	     0xf8570030000	                           jne 0x400a870	      5204	quickfix.c	ELSE_3	FUNCTION_90	IF_8
0x400a500	          0xf6c380	                           test bl, 0x80	      5206	quickfix.c	ELSE_3	FUNCTION_90	IF_9
0x400a503	     0xf8527030000	                           jne 0x400a830	      5206	quickfix.c	ELSE_3	FUNCTION_90	IF_9
0x400a509	          0x80e701	                               and bh, 1	      5208	quickfix.c	ELSE_3	FUNCTION_90	IF_10
0x400a50c	     0xf8526010000	                           jne 0x400a638	      5208	quickfix.c	ELSE_3	FUNCTION_90	IF_10
0x400a512	      0xb801000000	                              mov eax, 1	      5208	quickfix.c	ELSE_3	FUNCTION_90	IF_10
0x400a517	      0xe9b0fcffff	                           jmp 0x400a1cc	      5208	quickfix.c	ELSE_3	FUNCTION_90	IF_10
0x400a51c	         0xf1f4000	                         nop dword [rax]	      5208	quickfix.c	ELSE_3	FUNCTION_90	IF_10
0x400a520	    0x4d8bae481900	          mov r13, qword [r14 + 0x1948] 	      5306	quickfix.c	FUNCTION_95	IF_2
0x400a527	      0xe9f0fdffff	                           jmp 0x400a31c	      5306	quickfix.c	FUNCTION_95	IF_2
0x400a52c	         0xf1f4000	                         nop dword [rax]	      5306	quickfix.c	FUNCTION_95	IF_2
0x400a530	      0xbaffffffff	                     mov edx, 0xffffffff	      5138	quickfix.c	FUNCTION_89	IF_1	CALL_1
0x400a535	      0xbe00000000	                              mov esi, 0	      5138	quickfix.c	FUNCTION_89	IF_1	CALL_1
0x400a53a	          0x4889ef	                            mov rdi, rbp	      5138	quickfix.c	FUNCTION_89	IF_1	CALL_1
0x400a53d	        0x458b7508	               mov r14d, dword [r13 + 8]	      5137	quickfix.c	FUNCTION_89
0x400a541	      0xe800000000	                          call 0x400a546	      5138	quickfix.c	FUNCTION_89	IF_1	CALL_1
0x400a546	          0x4885c0	                           test rax, rax	      5138	quickfix.c	FUNCTION_89	IF_1	CALL_1
0x400a549	     0xf8441010000	                            je 0x400a690	      5138	quickfix.c	FUNCTION_89	IF_1	CALL_1
0x400a54f	            0x8b10	                    mov edx, dword [rax]	      5141	quickfix.c	FUNCTION_89	IF_1	IF_2
0x400a551	          0x83fa01	                              cmp edx, 1	      5141	quickfix.c	FUNCTION_89	IF_1	IF_2
0x400a554	     0xf84c6030000	                            je 0x400a920	      5141	quickfix.c	FUNCTION_89	IF_1	IF_2
0x400a55a	          0x83fa02	                              cmp edx, 2	      5151	quickfix.c	FUNCTION_89	IF_1	ELSE_1	IF_5
0x400a55d	     0xf84fd000000	                            je 0x400a660	      5151	quickfix.c	FUNCTION_89	IF_1	ELSE_1	IF_5
0x400a563	      0xbaffffffff	                     mov edx, 0xffffffff	      5160	quickfix.c	FUNCTION_89	ELSE_2	IF_6	CALL_3
0x400a568	      0xbe00000000	                              mov esi, 0	      5160	quickfix.c	FUNCTION_89	ELSE_2	IF_6	CALL_3
0x400a56d	          0x4889ef	                            mov rdi, rbp	      5160	quickfix.c	FUNCTION_89	ELSE_2	IF_6	CALL_3
0x400a570	      0xe800000000	                          call 0x400a575	      5160	quickfix.c	FUNCTION_89	ELSE_2	IF_6	CALL_3
0x400a575	          0x4885c0	                           test rax, rax	      5160	quickfix.c	FUNCTION_89	ELSE_2	IF_6	CALL_3
0x400a578	    0x41beffffffff	                    mov r14d, 0xffffffff	      5160	quickfix.c	FUNCTION_89	ELSE_2	IF_6	CALL_3
0x400a57e	     0xf84dffeffff	                            je 0x400a463	      5160	quickfix.c	FUNCTION_89	ELSE_2	IF_6	CALL_3
0x400a584	          0x833801	                      cmp dword [rax], 1	      5163	quickfix.c	FUNCTION_89	ELSE_2	IF_6	IF_7
0x400a587	     0xf85d6feffff	                           jne 0x400a463	      5163	quickfix.c	FUNCTION_89	ELSE_2	IF_6	IF_7
0x400a58d	        0x488b4008	                mov rax, qword [rax + 8]	      5168	quickfix.c	FUNCTION_89	ELSE_2	IF_6	IF_7	IF_8
0x400a591	          0x4885c0	                           test rax, rax	      5168	quickfix.c	FUNCTION_89	ELSE_2	IF_6	IF_7	IF_8
0x400a594	     0xf8416010000	                            je 0x400a6b0	      5168	quickfix.c	FUNCTION_89	ELSE_2	IF_6	IF_7	IF_8
0x400a59a	        0x418b5504	                mov edx, dword [r13 + 4]	      4228	quickfix.c	FUNCTION_72	FOR_1
0x400a59e	            0x89c1	                            mov ecx, eax	      5169	quickfix.c	FUNCTION_89	ELSE_2	IF_6	IF_7	CALL_4
0x400a5a0	            0x85d2	                           test edx, edx	      4228	quickfix.c	FUNCTION_72	FOR_1
0x400a5a2	     0xf8ebbfeffff	                           jle 0x400a463	      4228	quickfix.c	FUNCTION_72	FOR_1
0x400a5a8	        0x41394510	            cmp dword [r13 + 0x10], eax 	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x400a5ac	     0xf841f050000	                            je 0x400aad1	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x400a5b2	    0x498d85880000	                   lea rax, [r13 + 0x88]	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x400a5b9	          0x4531f6	                          xor r14d, r14d	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x400a5bc	         0xf1f4000	                         nop dword [rax]	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x400a5c0	        0x4183c601	                             add r14d, 1	      4228	quickfix.c	FUNCTION_72	FOR_1
0x400a5c4	          0x4439f2	                           cmp edx, r14d	      4228	quickfix.c	FUNCTION_72	FOR_1
0x400a5c7	     0xf8496feffff	                            je 0x400a463	      4228	quickfix.c	FUNCTION_72	FOR_1
0x400a5cd	        0x4883c078	                           add rax, 0x78	      4228	quickfix.c	FUNCTION_72	FOR_1
0x400a5d1	          0x3b4888	             cmp ecx, dword [rax - 0x78]	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x400a5d4	            0x75ea	                           jne 0x400a5c0	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x400a5d6	      0xe9d9000000	                           jmp 0x400a6b4	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x400a5db	       0xf1f440000	                   nop dword [rax + rax]	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x400a5e0	            0x31d2	                            xor edx, edx	      5187	quickfix.c	ELSE_3	FUNCTION_90	CALL_1
0x400a5e2	      0xb900000000	                              mov ecx, 0	      5187	quickfix.c	ELSE_3	FUNCTION_90	CALL_1
0x400a5e7	      0xbe00000000	                              mov esi, 0	      5187	quickfix.c	ELSE_3	FUNCTION_90	CALL_1
0x400a5ec	          0x4c89e7	                            mov rdi, r12	      5187	quickfix.c	ELSE_3	FUNCTION_90	CALL_1
0x400a5ef	      0xe800000000	                          call 0x400a5f4	      5187	quickfix.c	ELSE_3	FUNCTION_90	CALL_1
0x400a5f4	          0x83f801	                              cmp eax, 1	      5188	quickfix.c	ELSE_3	FUNCTION_90	IF_2
0x400a5f7	     0xf85cffbffff	                           jne 0x400a1cc	      5188	quickfix.c	ELSE_3	FUNCTION_90	IF_2
0x400a5fd	      0xe96afeffff	                           jmp 0x400a46c	      5188	quickfix.c	ELSE_3	FUNCTION_90	IF_2
0x400a602	    0x660f1f440000	                    nop word [rax + rax]	      5188	quickfix.c	ELSE_3	FUNCTION_90	IF_2
0x400a608	      0xe800000000	                          call 0x400a60d	      5190	quickfix.c	ELSE_3	FUNCTION_90	IF_2	CALL_2
0x400a60d	          0x4885c0	                           test rax, rax	      5191	quickfix.c	ELSE_3	FUNCTION_90	IF_2	IF_3
0x400a610	     0xf84b4fbffff	                            je 0x400a1ca	      5191	quickfix.c	ELSE_3	FUNCTION_90	IF_2	IF_3
0x400a616	          0x4889c2	                            mov rdx, rax	      5192	quickfix.c	ELSE_3	FUNCTION_90	IF_2	CALL_3
0x400a619	      0xbe00000000	                              mov esi, 0	      5192	quickfix.c	ELSE_3	FUNCTION_90	IF_2	CALL_3
0x400a61e	          0x4c89e7	                            mov rdi, r12	      5192	quickfix.c	ELSE_3	FUNCTION_90	IF_2	CALL_3
0x400a621	      0xe800000000	                          call 0x400a626	      5192	quickfix.c	ELSE_3	FUNCTION_90	IF_2	CALL_3
0x400a626	          0x83f801	                              cmp eax, 1	      5196	quickfix.c	ELSE_3	FUNCTION_90	IF_4
0x400a629	     0xf8446feffff	                            je 0x400a475	      5196	quickfix.c	ELSE_3	FUNCTION_90	IF_4
0x400a62f	      0xe998fbffff	                           jmp 0x400a1cc	      5196	quickfix.c	ELSE_3	FUNCTION_90	IF_4
0x400a634	         0xf1f4000	                         nop dword [rax]	      5196	quickfix.c	ELSE_3	FUNCTION_90	IF_4
0x400a638	            0x31c9	                            xor ecx, ecx	      5209	quickfix.c	ELSE_3	FUNCTION_90	CALL_11
0x400a63a	            0x31d2	                            xor edx, edx	      5209	quickfix.c	ELSE_3	FUNCTION_90	CALL_11
0x400a63c	        0x4883c418	                           add rsp, 0x18	      5340	quickfix.c	FUNCTION_95
0x400a640	          0x4c89e7	                            mov rdi, r12	      5336	quickfix.c	FUNCTION_95	IF_13	CALL_15
0x400a643	      0xbe00000000	                              mov esi, 0	      5336	quickfix.c	FUNCTION_95	IF_13	CALL_15
0x400a648	              0x5b	                                 pop rbx	      5340	quickfix.c	FUNCTION_95
0x400a649	              0x5d	                                 pop rbp	      5340	quickfix.c	FUNCTION_95
0x400a64a	            0x415c	                                 pop r12	      5340	quickfix.c	FUNCTION_95
0x400a64c	            0x415d	                                 pop r13	      5340	quickfix.c	FUNCTION_95
0x400a64e	            0x415e	                                 pop r14	      5340	quickfix.c	FUNCTION_95
0x400a650	            0x415f	                                 pop r15	      5340	quickfix.c	FUNCTION_95
0x400a652	      0xe900000000	                           jmp 0x400a657	      5336	quickfix.c	FUNCTION_95	IF_13	CALL_15
0x400a657	    0x660f1f840000	                    nop word [rax + rax]	      5336	quickfix.c	FUNCTION_95	IF_13	CALL_15
0x400a660	        0x488b4008	                mov rax, qword [rax + 8]	      5152	quickfix.c	FUNCTION_89	IF_1	ELSE_1	IF_5
0x400a664	          0x4885c0	                           test rax, rax	      5152	quickfix.c	FUNCTION_89	IF_1	ELSE_1	IF_5
0x400a667	     0xf84f6feffff	                            je 0x400a563	      5152	quickfix.c	FUNCTION_89	IF_1	ELSE_1	IF_5
0x400a66d	          0x803824	                    cmp byte [rax], 0x24	      5153	quickfix.c	FUNCTION_89	IF_1	ELSE_1	IF_5	CALL_2
0x400a670	     0xf8522040000	                           jne 0x400aa98	      5153	quickfix.c	FUNCTION_89	IF_1	ELSE_1	IF_5	CALL_2
0x400a676	        0x80780100	                   cmp byte [rax + 1], 0	      5153	quickfix.c	FUNCTION_89	IF_1	ELSE_1	IF_5	CALL_2
0x400a67a	     0xf85e3feffff	                           jne 0x400a563	      5153	quickfix.c	FUNCTION_89	IF_1	ELSE_1	IF_5	CALL_2
0x400a680	        0x418b4504	                mov eax, dword [r13 + 4]	      5155	quickfix.c	FUNCTION_89	IF_1	ELSE_1	IF_5
0x400a684	        0x448d70ff	                     lea r14d, [rax - 1]	      5155	quickfix.c	FUNCTION_89	IF_1	ELSE_1	IF_5
0x400a688	     0xf1f84000000	                   nop dword [rax + rax]	      5155	quickfix.c	FUNCTION_89	IF_1	ELSE_1	IF_5
0x400a690	      0xbaffffffff	                     mov edx, 0xffffffff	      5160	quickfix.c	FUNCTION_89	ELSE_2	IF_6	CALL_3
0x400a695	      0xbe00000000	                              mov esi, 0	      5160	quickfix.c	FUNCTION_89	ELSE_2	IF_6	CALL_3
0x400a69a	          0x4889ef	                            mov rdi, rbp	      5160	quickfix.c	FUNCTION_89	ELSE_2	IF_6	CALL_3
0x400a69d	      0xe800000000	                          call 0x400a6a2	      5160	quickfix.c	FUNCTION_89	ELSE_2	IF_6	CALL_3
0x400a6a2	          0x4885c0	                           test rax, rax	      5160	quickfix.c	FUNCTION_89	ELSE_2	IF_6	CALL_3
0x400a6a5	     0xf85d9feffff	                           jne 0x400a584	      5160	quickfix.c	FUNCTION_89	ELSE_2	IF_6	CALL_3
0x400a6ab	       0xf1f440000	                   nop dword [rax + rax]	      5160	quickfix.c	FUNCTION_89	ELSE_2	IF_6	CALL_3
0x400a6b0	        0x418b5504	                mov edx, dword [r13 + 4]	      5160	quickfix.c	FUNCTION_89	ELSE_2	IF_6	CALL_3
0x400a6b4	        0x4183feff	            cmp r14d, 0xffffffffffffffff	      5160	quickfix.c	FUNCTION_89	ELSE_2	IF_6	CALL_3
0x400a6b8	           0xf94c0	                                 sete al	      5160	quickfix.c	FUNCTION_89	ELSE_2	IF_6	CALL_3
0x400a6bb	            0x85d2	                           test edx, edx	      5314	quickfix.c	FUNCTION_95	IF_4
0x400a6bd	     0xf84a0fdffff	                            je 0x400a463	      5314	quickfix.c	FUNCTION_95	IF_4
0x400a6c3	            0x84c0	                             test al, al	      5314	quickfix.c	FUNCTION_95	IF_4
0x400a6c5	     0xf8598fdffff	                           jne 0x400a463	      5314	quickfix.c	FUNCTION_95	IF_4
0x400a6cb	          0xf6c301	                              test bl, 1	      5317	quickfix.c	FUNCTION_95	IF_5
0x400a6ce	     0xf8504020000	                           jne 0x400a8d8	      5317	quickfix.c	FUNCTION_95	IF_5
0x400a6d4	          0xf6c304	                              test bl, 4	      5319	quickfix.c	FUNCTION_95	IF_6
0x400a6d7	     0xf8593030000	                           jne 0x400aa70	      5319	quickfix.c	FUNCTION_95	IF_6
0x400a6dd	          0xf6c308	                              test bl, 8	      5321	quickfix.c	FUNCTION_95	IF_7
0x400a6e0	            0x745b	                            je 0x400a73d	      5321	quickfix.c	FUNCTION_95	IF_7
0x400a6e2	    0x488b2d000000	            mov rbp, qword [0x0400a6e9] 	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400a6e9	          0x4885ed	                           test rbp, rbp	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400a6ec	            0x7435	                            je 0x400a723	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400a6ee	    0x4981fd000000	                              cmp r13, 0	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400a6f5	     0xf8405010000	                            je 0x400a800	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400a6fb	       0xf1f440000	                   nop dword [rax + rax]	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400a700	        0x488b7d08	                mov rdi, qword [rbp + 8]	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400a704	      0xe800000000	                          call 0x400a709	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400a709	            0x85c0	                           test eax, eax	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400a70b	            0x740d	                            je 0x400a71a	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400a70d	    0x4c3bad501900	          cmp r13, qword [rbp + 0x1950] 	      3442	quickfix.c	FUNCTION_54	IF_1	IF_2
0x400a714	     0xf8438020000	                            je 0x400a952	      3442	quickfix.c	FUNCTION_54	IF_1	IF_2
0x400a71a	        0x488b6d20	            mov rbp, qword [rbp + 0x20] 	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400a71e	          0x4885ed	                           test rbp, rbp	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400a721	            0x75dd	                           jne 0x400a700	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400a723	            0x31d2	                            xor edx, edx	      5224	quickfix.c	FUNCTION_91	IF_1
0x400a725	            0x31c9	                            xor ecx, ecx	      5322	quickfix.c	FUNCTION_95	CALL_9
0x400a727	      0xbe00000000	                              mov esi, 0	      5322	quickfix.c	FUNCTION_95	CALL_9
0x400a72c	          0x4c89e7	                            mov rdi, r12	      5322	quickfix.c	FUNCTION_95	CALL_9
0x400a72f	      0xe800000000	                          call 0x400a734	      5322	quickfix.c	FUNCTION_95	CALL_9
0x400a734	          0x83f801	                              cmp eax, 1	      5323	quickfix.c	FUNCTION_95	IF_8
0x400a737	     0xf858ffaffff	                           jne 0x400a1cc	      5323	quickfix.c	FUNCTION_95	IF_8
0x400a73d	          0xf6c302	                              test bl, 2	      5323	quickfix.c	FUNCTION_95	IF_8
0x400a740	     0xf85f2020000	                           jne 0x400aa38	      5323	quickfix.c	FUNCTION_95	IF_8
0x400a746	          0xf6c310	                           test bl, 0x10	      5325	quickfix.c	FUNCTION_95	IF_9
0x400a749	     0xf8581020000	                           jne 0x400a9d0	      5325	quickfix.c	FUNCTION_95	IF_9
0x400a74f	          0xf6c320	                           test bl, 0x20	      5327	quickfix.c	FUNCTION_95	IF_10
0x400a752	     0xf8540020000	                           jne 0x400a998	      5327	quickfix.c	FUNCTION_95	IF_10
0x400a758	          0xf6c340	                           test bl, 0x40	      5330	quickfix.c	FUNCTION_95	IF_11
0x400a75b	            0x743f	                            je 0x400a79c	      5330	quickfix.c	FUNCTION_95	IF_11
0x400a75d	          0x4963c6	                        movsxd rax, r14d	      5281	quickfix.c	FUNCTION_94
0x400a760	      0xbe00000000	                              mov esi, 0	      5285	quickfix.c	FUNCTION_94	CALL_1
0x400a765	          0x4c89e7	                            mov rdi, r12	      5285	quickfix.c	FUNCTION_94	CALL_1
0x400a768	    0x488d14c50000	                        lea rdx, [rax*8]	      5281	quickfix.c	FUNCTION_94
0x400a770	        0x48c1e007	                              shl rax, 7	      5281	quickfix.c	FUNCTION_94
0x400a774	          0x4829d0	                            sub rax, rdx	      5281	quickfix.c	FUNCTION_94
0x400a777	          0x4c01e8	                            add rax, r13	      5281	quickfix.c	FUNCTION_94
0x400a77a	        0x48635034	         movsxd rdx, dword [rax + 0x34] 	      5281	quickfix.c	FUNCTION_94
0x400a77e	          0x8b4030	            mov eax, dword [rax + 0x30] 	      5281	quickfix.c	FUNCTION_94
0x400a781	            0x85c0	                           test eax, eax	      5281	quickfix.c	FUNCTION_94
0x400a783	      0xb800000000	                              mov eax, 0	      5281	quickfix.c	FUNCTION_94
0x400a788	        0x480f44d0	                          cmove rdx, rax	      5281	quickfix.c	FUNCTION_94
0x400a78c	            0x31c9	                            xor ecx, ecx	      5285	quickfix.c	FUNCTION_94	CALL_1
0x400a78e	      0xe800000000	                          call 0x400a793	      5285	quickfix.c	FUNCTION_94	CALL_1
0x400a793	          0x83f801	                              cmp eax, 1	      5332	quickfix.c	FUNCTION_95	IF_12
0x400a796	     0xf8530faffff	                           jne 0x400a1cc	      5332	quickfix.c	FUNCTION_95	IF_12
0x400a79c	          0xf6c380	                           test bl, 0x80	      5332	quickfix.c	FUNCTION_95	IF_12
0x400a79f	     0xf85bb010000	                           jne 0x400a960	      5332	quickfix.c	FUNCTION_95	IF_12
0x400a7a5	          0x80e701	                               and bh, 1	      5335	quickfix.c	FUNCTION_95	IF_13
0x400a7a8	     0xf8464fdffff	                            je 0x400a512	      5335	quickfix.c	FUNCTION_95	IF_13
0x400a7ae	          0x4d63f6	                        movsxd r14, r14d	      5336	quickfix.c	FUNCTION_95	IF_13	CALL_15
0x400a7b1	            0x31c9	                            xor ecx, ecx	      5336	quickfix.c	FUNCTION_95	IF_13	CALL_15
0x400a7b3	    0x4a8d04f50000	                        lea rax, [r14*8]	      5336	quickfix.c	FUNCTION_95	IF_13	CALL_15
0x400a7bb	        0x49c1e607	                              shl r14, 7	      5336	quickfix.c	FUNCTION_95	IF_13	CALL_15
0x400a7bf	          0x4929c6	                            sub r14, rax	      5336	quickfix.c	FUNCTION_95	IF_13	CALL_15
0x400a7c2	    0x4b8b94358000	      mov rdx, qword [r13 + r14 + 0x80] 	      5336	quickfix.c	FUNCTION_95	IF_13	CALL_15
0x400a7ca	      0xe96dfeffff	                           jmp 0x400a63c	      5336	quickfix.c	FUNCTION_95	IF_13	CALL_15
0x400a7cf	              0x90	                                     nop	      5336	quickfix.c	FUNCTION_95	IF_13	CALL_15
0x400a7d0	        0x488b7d08	                mov rdi, qword [rbp + 8]	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400a7d4	      0xe800000000	                          call 0x400a7d9	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400a7d9	            0x85c0	                           test eax, eax	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400a7db	            0x7413	                            je 0x400a7f0	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400a7dd	    0x4883bd501900	             cmp qword [rbp + 0x1950], 0	      3441	quickfix.c	FUNCTION_54	IF_1	IF_2
0x400a7e5	     0xf845e010000	                            je 0x400a949	      3441	quickfix.c	FUNCTION_54	IF_1	IF_2
0x400a7eb	       0xf1f440000	                   nop dword [rax + rax]	      3441	quickfix.c	FUNCTION_54	IF_1	IF_2
0x400a7f0	        0x488b6d20	            mov rbp, qword [rbp + 0x20] 	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400a7f4	          0x4885ed	                           test rbp, rbp	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400a7f7	            0x75d7	                           jne 0x400a7d0	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400a7f9	      0xe9cdfcffff	                           jmp 0x400a4cb	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400a7fe	            0x6690	                                     nop	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400a800	        0x488b7d08	                mov rdi, qword [rbp + 8]	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400a804	      0xe800000000	                          call 0x400a809	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400a809	            0x85c0	                           test eax, eax	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400a80b	            0x7413	                            je 0x400a820	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400a80d	    0x4883bd501900	             cmp qword [rbp + 0x1950], 0	      3441	quickfix.c	FUNCTION_54	IF_1	IF_2
0x400a815	     0xf8437010000	                            je 0x400a952	      3441	quickfix.c	FUNCTION_54	IF_1	IF_2
0x400a81b	       0xf1f440000	                   nop dword [rax + rax]	      3441	quickfix.c	FUNCTION_54	IF_1	IF_2
0x400a820	        0x488b6d20	            mov rbp, qword [rbp + 0x20] 	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400a824	          0x4885ed	                           test rbp, rbp	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400a827	            0x75d7	                           jne 0x400a800	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400a829	      0xe9f5feffff	                           jmp 0x400a723	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400a82e	            0x6690	                                     nop	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400a830	            0x31c9	                            xor ecx, ecx	      5207	quickfix.c	ELSE_3	FUNCTION_90	CALL_10
0x400a832	            0x31d2	                            xor edx, edx	      5207	quickfix.c	ELSE_3	FUNCTION_90	CALL_10
0x400a834	      0xbe00000000	                              mov esi, 0	      5207	quickfix.c	ELSE_3	FUNCTION_90	CALL_10
0x400a839	          0x4c89e7	                            mov rdi, r12	      5207	quickfix.c	ELSE_3	FUNCTION_90	CALL_10
0x400a83c	      0xe800000000	                          call 0x400a841	      5207	quickfix.c	ELSE_3	FUNCTION_90	CALL_10
0x400a841	          0x83f801	                              cmp eax, 1	      5208	quickfix.c	ELSE_3	FUNCTION_90	IF_10
0x400a844	     0xf84bffcffff	                            je 0x400a509	      5208	quickfix.c	ELSE_3	FUNCTION_90	IF_10
0x400a84a	      0xe97df9ffff	                           jmp 0x400a1cc	      5208	quickfix.c	ELSE_3	FUNCTION_90	IF_10
0x400a84f	              0x90	                                     nop	      5208	quickfix.c	ELSE_3	FUNCTION_90	IF_10
0x400a850	            0x31c9	                            xor ecx, ecx	      5197	quickfix.c	ELSE_3	FUNCTION_90	CALL_4
0x400a852	            0x31d2	                            xor edx, edx	      5197	quickfix.c	ELSE_3	FUNCTION_90	CALL_4
0x400a854	      0xbe00000000	                              mov esi, 0	      5197	quickfix.c	ELSE_3	FUNCTION_90	CALL_4
0x400a859	          0x4c89e7	                            mov rdi, r12	      5197	quickfix.c	ELSE_3	FUNCTION_90	CALL_4
0x400a85c	      0xe800000000	                          call 0x400a861	      5197	quickfix.c	ELSE_3	FUNCTION_90	CALL_4
0x400a861	          0x83f801	                              cmp eax, 1	      5198	quickfix.c	ELSE_3	FUNCTION_90	IF_5
0x400a864	     0xf8414fcffff	                            je 0x400a47e	      5198	quickfix.c	ELSE_3	FUNCTION_90	IF_5
0x400a86a	      0xe95df9ffff	                           jmp 0x400a1cc	      5198	quickfix.c	ELSE_3	FUNCTION_90	IF_5
0x400a86f	              0x90	                                     nop	      5198	quickfix.c	ELSE_3	FUNCTION_90	IF_5
0x400a870	            0x31c9	                            xor ecx, ecx	      5205	quickfix.c	ELSE_3	FUNCTION_90	CALL_9
0x400a872	            0x31d2	                            xor edx, edx	      5205	quickfix.c	ELSE_3	FUNCTION_90	CALL_9
0x400a874	      0xbe00000000	                              mov esi, 0	      5205	quickfix.c	ELSE_3	FUNCTION_90	CALL_9
0x400a879	          0x4c89e7	                            mov rdi, r12	      5205	quickfix.c	ELSE_3	FUNCTION_90	CALL_9
0x400a87c	      0xe800000000	                          call 0x400a881	      5205	quickfix.c	ELSE_3	FUNCTION_90	CALL_9
0x400a881	          0x83f801	                              cmp eax, 1	      5206	quickfix.c	ELSE_3	FUNCTION_90	IF_9
0x400a884	     0xf8476fcffff	                            je 0x400a500	      5206	quickfix.c	ELSE_3	FUNCTION_90	IF_9
0x400a88a	      0xe93df9ffff	                           jmp 0x400a1cc	      5206	quickfix.c	ELSE_3	FUNCTION_90	IF_9
0x400a88f	              0x90	                                     nop	      5206	quickfix.c	ELSE_3	FUNCTION_90	IF_9
0x400a890	            0x31c9	                            xor ecx, ecx	      5203	quickfix.c	ELSE_3	FUNCTION_90	CALL_8
0x400a892	            0x31d2	                            xor edx, edx	      5203	quickfix.c	ELSE_3	FUNCTION_90	CALL_8
0x400a894	      0xbe00000000	                              mov esi, 0	      5203	quickfix.c	ELSE_3	FUNCTION_90	CALL_8
0x400a899	          0x4c89e7	                            mov rdi, r12	      5203	quickfix.c	ELSE_3	FUNCTION_90	CALL_8
0x400a89c	      0xe800000000	                          call 0x400a8a1	      5203	quickfix.c	ELSE_3	FUNCTION_90	CALL_8
0x400a8a1	          0x83f801	                              cmp eax, 1	      5204	quickfix.c	ELSE_3	FUNCTION_90	IF_8
0x400a8a4	     0xf844dfcffff	                            je 0x400a4f7	      5204	quickfix.c	ELSE_3	FUNCTION_90	IF_8
0x400a8aa	      0xe91df9ffff	                           jmp 0x400a1cc	      5204	quickfix.c	ELSE_3	FUNCTION_90	IF_8
0x400a8af	              0x90	                                     nop	      5204	quickfix.c	ELSE_3	FUNCTION_90	IF_8
0x400a8b0	            0x31d2	                            xor edx, edx	      5201	quickfix.c	ELSE_3	FUNCTION_90	CALL_7
0x400a8b2	      0xb900000000	                              mov ecx, 0	      5201	quickfix.c	ELSE_3	FUNCTION_90	CALL_7
0x400a8b7	      0xbe00000000	                              mov esi, 0	      5201	quickfix.c	ELSE_3	FUNCTION_90	CALL_7
0x400a8bc	          0x4c89e7	                            mov rdi, r12	      5201	quickfix.c	ELSE_3	FUNCTION_90	CALL_7
0x400a8bf	      0xe800000000	                          call 0x400a8c4	      5201	quickfix.c	ELSE_3	FUNCTION_90	CALL_7
0x400a8c4	          0x83f801	                              cmp eax, 1	      5202	quickfix.c	ELSE_3	FUNCTION_90	IF_7
0x400a8c7	     0xf8421fcffff	                            je 0x400a4ee	      5202	quickfix.c	ELSE_3	FUNCTION_90	IF_7
0x400a8cd	      0xe9faf8ffff	                           jmp 0x400a1cc	      5202	quickfix.c	ELSE_3	FUNCTION_90	IF_7
0x400a8d2	    0x660f1f440000	                    nop word [rax + rax]	      5202	quickfix.c	ELSE_3	FUNCTION_90	IF_7
0x400a8d8	          0x4963c6	                        movsxd rax, r14d	      5222	quickfix.c	FUNCTION_91
0x400a8db	      0xbe00000000	                              mov esi, 0	      5225	quickfix.c	FUNCTION_91	CALL_1
0x400a8e0	          0x4c89e7	                            mov rdi, r12	      5225	quickfix.c	FUNCTION_91	CALL_1
0x400a8e3	    0x488d14c50000	                        lea rdx, [rax*8]	      5222	quickfix.c	FUNCTION_91
0x400a8eb	        0x48c1e007	                              shl rax, 7	      5222	quickfix.c	FUNCTION_91
0x400a8ef	          0x4829d0	                            sub rax, rdx	      5222	quickfix.c	FUNCTION_91
0x400a8f2	      0x498b4c0540	      mov rcx, qword [r13 + rax + 0x40] 	      5222	quickfix.c	FUNCTION_91
0x400a8f7	      0xb800000000	                              mov eax, 0	      5224	quickfix.c	FUNCTION_91	IF_1
0x400a8fc	          0x4885c9	                           test rcx, rcx	      5224	quickfix.c	FUNCTION_91	IF_1
0x400a8ff	        0x480f44c8	                          cmove rcx, rax	      5224	quickfix.c	FUNCTION_91	IF_1
0x400a903	            0x31d2	                            xor edx, edx	      5225	quickfix.c	FUNCTION_91	CALL_1
0x400a905	      0xe800000000	                          call 0x400a90a	      5225	quickfix.c	FUNCTION_91	CALL_1
0x400a90a	          0x83f801	                              cmp eax, 1	      5319	quickfix.c	FUNCTION_95	IF_6
0x400a90d	     0xf85b9f8ffff	                           jne 0x400a1cc	      5319	quickfix.c	FUNCTION_95	IF_6
0x400a913	      0xe9bcfdffff	                           jmp 0x400a6d4	      5319	quickfix.c	FUNCTION_95	IF_6
0x400a918	     0xf1f84000000	                   nop dword [rax + rax]	      5319	quickfix.c	FUNCTION_95	IF_6
0x400a920	        0x488b4008	                mov rax, qword [rax + 8]	      5144	quickfix.c	FUNCTION_89	IF_1	IF_2	IF_3
0x400a924	          0x4885c0	                           test rax, rax	      5144	quickfix.c	FUNCTION_89	IF_1	IF_2	IF_3
0x400a927	     0xf8463fdffff	                            je 0x400a690	      5144	quickfix.c	FUNCTION_89	IF_1	IF_2	IF_3
0x400a92d	          0x4189c6	                           mov r14d, eax	      5147	quickfix.c	FUNCTION_89	IF_1	IF_2	IF_3	IF_4
0x400a930	        0x4183ee01	                             sub r14d, 1	      5147	quickfix.c	FUNCTION_89	IF_1	IF_2	IF_3	IF_4
0x400a934	     0xf8829fcffff	                            js 0x400a563	      5147	quickfix.c	FUNCTION_89	IF_1	IF_2	IF_3	IF_4
0x400a93a	        0x453b7504	               cmp r14d, dword [r13 + 4]	      5147	quickfix.c	FUNCTION_89	IF_1	IF_2	IF_3	IF_4
0x400a93e	     0xf8d1ffcffff	                           jge 0x400a563	      5147	quickfix.c	FUNCTION_89	IF_1	IF_2	IF_3	IF_4
0x400a944	      0xe947fdffff	                           jmp 0x400a690	      5147	quickfix.c	FUNCTION_89	IF_1	IF_2	IF_3	IF_4
0x400a949	        0x48635500	                 movsxd rdx, dword [rbp]	      5147	quickfix.c	FUNCTION_89	IF_1	IF_2	IF_3	IF_4
0x400a94d	      0xe97bfbffff	                           jmp 0x400a4cd	      5147	quickfix.c	FUNCTION_89	IF_1	IF_2	IF_3	IF_4
0x400a952	        0x48635500	                 movsxd rdx, dword [rbp]	      5147	quickfix.c	FUNCTION_89	IF_1	IF_2	IF_3	IF_4
0x400a956	      0xe9cafdffff	                           jmp 0x400a725	      5147	quickfix.c	FUNCTION_89	IF_1	IF_2	IF_3	IF_4
0x400a95b	       0xf1f440000	                   nop dword [rax + rax]	      5147	quickfix.c	FUNCTION_89	IF_1	IF_2	IF_3	IF_4
0x400a960	          0x4963c6	                        movsxd rax, r14d	      5334	quickfix.c	FUNCTION_95	IF_12
0x400a963	            0x31c9	                            xor ecx, ecx	      5333	quickfix.c	FUNCTION_95	IF_12	CALL_14
0x400a965	      0xbe00000000	                              mov esi, 0	      5333	quickfix.c	FUNCTION_95	IF_12	CALL_14
0x400a96a	    0x488d14c50000	                        lea rdx, [rax*8]	      5334	quickfix.c	FUNCTION_95	IF_12
0x400a972	        0x48c1e007	                              shl rax, 7	      5334	quickfix.c	FUNCTION_95	IF_12
0x400a976	          0x4c89e7	                            mov rdi, r12	      5333	quickfix.c	FUNCTION_95	IF_12	CALL_14
0x400a979	          0x4829d0	                            sub rax, rdx	      5334	quickfix.c	FUNCTION_95	IF_12
0x400a97c	      0x4963540530	   movsxd rdx, dword [r13 + rax + 0x30] 	      5333	quickfix.c	FUNCTION_95	IF_12	CALL_14
0x400a981	      0xe800000000	                          call 0x400a986	      5333	quickfix.c	FUNCTION_95	IF_12	CALL_14
0x400a986	          0x83f801	                              cmp eax, 1	      5335	quickfix.c	FUNCTION_95	IF_13
0x400a989	     0xf8416feffff	                            je 0x400a7a5	      5335	quickfix.c	FUNCTION_95	IF_13
0x400a98f	      0xe938f8ffff	                           jmp 0x400a1cc	      5335	quickfix.c	FUNCTION_95	IF_13
0x400a994	         0xf1f4000	                         nop dword [rax]	      5335	quickfix.c	FUNCTION_95	IF_13
0x400a998	          0x4963c6	                        movsxd rax, r14d	      5328	quickfix.c	FUNCTION_95	IF_10	CALL_12
0x400a99b	            0x31c9	                            xor ecx, ecx	      5328	quickfix.c	FUNCTION_95	IF_10	CALL_12
0x400a99d	      0xbe00000000	                              mov esi, 0	      5328	quickfix.c	FUNCTION_95	IF_10	CALL_12
0x400a9a2	    0x488d14c50000	                        lea rdx, [rax*8]	      5328	quickfix.c	FUNCTION_95	IF_10	CALL_12
0x400a9aa	        0x48c1e007	                              shl rax, 7	      5328	quickfix.c	FUNCTION_95	IF_10	CALL_12
0x400a9ae	          0x4c89e7	                            mov rdi, r12	      5328	quickfix.c	FUNCTION_95	IF_10	CALL_12
0x400a9b1	          0x4829d0	                            sub rax, rdx	      5328	quickfix.c	FUNCTION_95	IF_10	CALL_12
0x400a9b4	      0x418b540510	      mov edx, dword [r13 + rax + 0x10] 	      5328	quickfix.c	FUNCTION_95	IF_10	CALL_12
0x400a9b9	      0xe800000000	                          call 0x400a9be	      5328	quickfix.c	FUNCTION_95	IF_10	CALL_12
0x400a9be	          0x83f801	                              cmp eax, 1	      5330	quickfix.c	FUNCTION_95	IF_11
0x400a9c1	     0xf8491fdffff	                            je 0x400a758	      5330	quickfix.c	FUNCTION_95	IF_11
0x400a9c7	      0xe900f8ffff	                           jmp 0x400a1cc	      5330	quickfix.c	FUNCTION_95	IF_11
0x400a9cc	         0xf1f4000	                         nop dword [rax]	      5330	quickfix.c	FUNCTION_95	IF_11
0x400a9d0	          0x4963c6	                        movsxd rax, r14d	      5256	quickfix.c	ELSE_1	FUNCTION_93	IF_1
0x400a9d3	    0x488d14c50000	                        lea rdx, [rax*8]	      5256	quickfix.c	ELSE_1	FUNCTION_93	IF_1
0x400a9db	        0x48c1e007	                              shl rax, 7	      5256	quickfix.c	ELSE_1	FUNCTION_93	IF_1
0x400a9df	          0x4829d0	                            sub rax, rdx	      5256	quickfix.c	ELSE_1	FUNCTION_93	IF_1
0x400a9e2	      0x498d6c0500	                    lea rbp, [r13 + rax]	      5256	quickfix.c	ELSE_1	FUNCTION_93	IF_1
0x400a9e7	      0x48837d4800	               cmp qword [rbp + 0x48], 0	      5256	quickfix.c	ELSE_1	FUNCTION_93	IF_1
0x400a9ec	     0xf84c6000000	                            je 0x400aab8	      5256	quickfix.c	ELSE_1	FUNCTION_93	IF_1
0x400a9f2	      0xbf00000000	                              mov edi, 0	      5258	quickfix.c	ELSE_1	FUNCTION_93	IF_1	CALL_1
0x400a9f7	      0xe800000000	                          call 0x400a9fc	      5258	quickfix.c	ELSE_1	FUNCTION_93	IF_1	CALL_1
0x400a9fc	          0x4885c0	                           test rax, rax	      5259	quickfix.c	ELSE_1	FUNCTION_93	IF_1	IF_2
0x400a9ff	          0x4989c7	                            mov r15, rax	      5258	quickfix.c	ELSE_1	FUNCTION_93	IF_1	CALL_1
0x400aa02	     0xf84c2f7ffff	                            je 0x400a1ca	      5259	quickfix.c	ELSE_1	FUNCTION_93	IF_1	IF_2
0x400aa08	        0x488b7d48	            mov rdi, qword [rbp + 0x48] 	      5261	quickfix.c	ELSE_1	FUNCTION_93	IF_1	IF_2	CALL_2
0x400aa0c	          0x4889c6	                            mov rsi, rax	      5261	quickfix.c	ELSE_1	FUNCTION_93	IF_1	IF_2	CALL_2
0x400aa0f	      0xe800000000	                          call 0x400aa14	      5261	quickfix.c	ELSE_1	FUNCTION_93	IF_1	IF_2	CALL_2
0x400aa14	          0x4c89fe	                            mov rsi, r15	      5262	quickfix.c	ELSE_1	FUNCTION_93	IF_1	IF_2	CALL_3
0x400aa17	          0x4c89e7	                            mov rdi, r12	      5262	quickfix.c	ELSE_1	FUNCTION_93	IF_1	IF_2	CALL_3
0x400aa1a	      0xe800000000	                          call 0x400aa1f	      5262	quickfix.c	ELSE_1	FUNCTION_93	IF_1	IF_2	CALL_3
0x400aa1f	            0x85c0	                           test eax, eax	      5263	quickfix.c	ELSE_1	FUNCTION_93	IF_1	IF_2	IF_3
0x400aa21	     0xf847c000000	                            je 0x400aaa3	      5263	quickfix.c	ELSE_1	FUNCTION_93	IF_1	IF_2	IF_3
0x400aa27	          0x83f801	                              cmp eax, 1	      5327	quickfix.c	FUNCTION_95	IF_10
0x400aa2a	     0xf841ffdffff	                            je 0x400a74f	      5327	quickfix.c	FUNCTION_95	IF_10
0x400aa30	      0xe997f7ffff	                           jmp 0x400a1cc	      5327	quickfix.c	FUNCTION_95	IF_10
0x400aa35	           0xf1f00	                         nop dword [rax]	      5327	quickfix.c	FUNCTION_95	IF_10
0x400aa38	      0xe800000000	                          call 0x400aa3d	      5235	quickfix.c	FUNCTION_92	CALL_1
0x400aa3d	          0x4885c0	                           test rax, rax	      5236	quickfix.c	FUNCTION_92	IF_1
0x400aa40	          0x4889c5	                            mov rbp, rax	      5235	quickfix.c	FUNCTION_92	CALL_1
0x400aa43	     0xf8481f7ffff	                            je 0x400a1ca	      5236	quickfix.c	FUNCTION_92	IF_1
0x400aa49	          0x4489f2	                           mov edx, r14d	      5238	quickfix.c	FUNCTION_92	IF_1	CALL_2
0x400aa4c	            0x31f6	                            xor esi, esi	      5238	quickfix.c	FUNCTION_92	IF_1	CALL_2
0x400aa4e	          0x4c89ef	                            mov rdi, r13	      5238	quickfix.c	FUNCTION_92	IF_1	CALL_2
0x400aa51	          0x4889c1	                            mov rcx, rax	      5238	quickfix.c	FUNCTION_92	IF_1	CALL_2
0x400aa54	      0xe800000000	                          call 0x400aa59	      5238	quickfix.c	FUNCTION_92	IF_1	CALL_2
0x400aa59	          0x4889ea	                            mov rdx, rbp	      5239	quickfix.c	FUNCTION_92	IF_1	CALL_3
0x400aa5c	      0xbe00000000	                              mov esi, 0	      5239	quickfix.c	FUNCTION_92	IF_1	CALL_3
0x400aa61	          0x4c89e7	                            mov rdi, r12	      5239	quickfix.c	FUNCTION_92	IF_1	CALL_3
0x400aa64	      0xe800000000	                          call 0x400aa69	      5239	quickfix.c	FUNCTION_92	IF_1	CALL_3
0x400aa69	      0xe9d8fcffff	                           jmp 0x400a746	      5239	quickfix.c	FUNCTION_92	IF_1	CALL_3
0x400aa6e	            0x6690	                                     nop	      5239	quickfix.c	FUNCTION_92	IF_1	CALL_3
0x400aa70	        0x418d5601	                      lea edx, [r14 + 1]	      5320	quickfix.c	FUNCTION_95	CALL_7
0x400aa74	            0x31c9	                            xor ecx, ecx	      5320	quickfix.c	FUNCTION_95	CALL_7
0x400aa76	      0xbe00000000	                              mov esi, 0	      5320	quickfix.c	FUNCTION_95	CALL_7
0x400aa7b	          0x4c89e7	                            mov rdi, r12	      5320	quickfix.c	FUNCTION_95	CALL_7
0x400aa7e	          0x4863d2	                         movsxd rdx, edx	      5320	quickfix.c	FUNCTION_95	CALL_7
0x400aa81	      0xe800000000	                          call 0x400aa86	      5320	quickfix.c	FUNCTION_95	CALL_7
0x400aa86	          0x83f801	                              cmp eax, 1	      5321	quickfix.c	FUNCTION_95	IF_7
0x400aa89	     0xf844efcffff	                            je 0x400a6dd	      5321	quickfix.c	FUNCTION_95	IF_7
0x400aa8f	      0xe938f7ffff	                           jmp 0x400a1cc	      5321	quickfix.c	FUNCTION_95	IF_7
0x400aa94	         0xf1f4000	                         nop dword [rax]	      5321	quickfix.c	FUNCTION_95	IF_7
0x400aa98	    0x41beffffffff	                    mov r14d, 0xffffffff	      5157	quickfix.c	FUNCTION_89	IF_1	ELSE_2
0x400aa9e	      0xe9edfbffff	                           jmp 0x400a690	      5157	quickfix.c	FUNCTION_89	IF_1	ELSE_2
0x400aaa3	          0x4c89ff	                            mov rdi, r15	      5264	quickfix.c	ELSE_1	FUNCTION_93	IF_1	IF_2	CALL_4
0x400aaa6	        0x8944240c	              mov dword [rsp + 0xc], eax	      5264	quickfix.c	ELSE_1	FUNCTION_93	IF_1	IF_2	CALL_4
0x400aaaa	      0xe800000000	                          call 0x400aaaf	      5264	quickfix.c	ELSE_1	FUNCTION_93	IF_1	IF_2	CALL_4
0x400aaaf	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      5264	quickfix.c	ELSE_1	FUNCTION_93	IF_1	IF_2	CALL_4
0x400aab3	      0xe914f7ffff	                           jmp 0x400a1cc	      5264	quickfix.c	ELSE_1	FUNCTION_93	IF_1	IF_2	CALL_4
0x400aab8	      0xb900000000	                              mov ecx, 0	      5270	quickfix.c	FUNCTION_93	ELSE_1	CALL_5
0x400aabd	            0x31d2	                            xor edx, edx	      5270	quickfix.c	FUNCTION_93	ELSE_1	CALL_5
0x400aabf	      0xbe00000000	                              mov esi, 0	      5270	quickfix.c	FUNCTION_93	ELSE_1	CALL_5
0x400aac4	          0x4c89e7	                            mov rdi, r12	      5270	quickfix.c	FUNCTION_93	ELSE_1	CALL_5
0x400aac7	      0xe800000000	                          call 0x400aacc	      5270	quickfix.c	FUNCTION_93	ELSE_1	CALL_5
0x400aacc	      0xe956ffffff	                           jmp 0x400aa27	      5270	quickfix.c	FUNCTION_93	ELSE_1	CALL_5
0x400aad1	          0x4531f6	                          xor r14d, r14d	      4228	quickfix.c	FUNCTION_72	FOR_1
0x400aad4	      0xe9f2fbffff	                           jmp 0x400a6cb	      4228	quickfix.c	FUNCTION_72	FOR_1
qf_age	functions,0:WHILE,1:DO,0:CALL,8:SWITCH,0:IF,6:ELSE,2:FOR,0	82
0x4006710	              0x55	                                push rbp	      2915	quickfix.c	FUNCTION_41
0x4006711	              0x53	                                push rbx	      2915	quickfix.c	FUNCTION_41
0x4006712	          0x4889fd	                            mov rbp, rdi	      2915	quickfix.c	FUNCTION_41
0x4006715	        0x4883ec08	                              sub rsp, 8	      2915	quickfix.c	FUNCTION_41
0x4006719	          0x8b4720	            mov eax, dword [rdi + 0x20] 	      2919	quickfix.c	FUNCTION_41	IF_1
0x400671c	      0x3df5000000	                           cmp eax, 0xf5	      2919	quickfix.c	FUNCTION_41	IF_1
0x4006721	     0xf84b9000000	                            je 0x40067e0	      2919	quickfix.c	FUNCTION_41	IF_1
0x4006727	      0x3def000000	                           cmp eax, 0xef	      2919	quickfix.c	FUNCTION_41	IF_1
0x400672c	      0xbb00000000	                              mov ebx, 0	      2916	quickfix.c	FUNCTION_41
0x4006731	     0xf84a9000000	                            je 0x40067e0	      2919	quickfix.c	FUNCTION_41	IF_1
0x4006737	          0x8b5538	            mov edx, dword [rbp + 0x38] 	      2929	quickfix.c	FUNCTION_41	IF_3
0x400673a	      0xb801000000	                              mov eax, 1	      2932	quickfix.c	FUNCTION_41	ELSE_1
0x400673f	            0x85d2	                           test edx, edx	      2929	quickfix.c	FUNCTION_41	IF_3
0x4006741	     0xf8589000000	                           jne 0x40067d0	      2929	quickfix.c	FUNCTION_41	IF_3
0x4006747	          0x8b7308	                mov esi, dword [rbx + 8]	      2929	quickfix.c	FUNCTION_41	IF_3
0x400674a	            0xeb23	                           jmp 0x400676f	      2929	quickfix.c	FUNCTION_41	IF_3
0x400674c	         0xf1f4000	                         nop dword [rax]	      2929	quickfix.c	FUNCTION_41	IF_3
0x4006750	    0x81faf5000000	                           cmp edx, 0xf5	      2935	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	IF_4
0x4006756	            0x7423	                            je 0x400677b	      2935	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	IF_4
0x4006758	          0x8b4b04	                mov ecx, dword [rbx + 4]	      2946	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	ELSE_2	IF_6
0x400675b	          0x8d51ff	                      lea edx, [rcx - 1]	      2946	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	ELSE_2	IF_6
0x400675e	            0x39f2	                            cmp edx, esi	      2946	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	ELSE_2	IF_6
0x4006760	     0xf8eda000000	                           jle 0x4006840	      2946	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	ELSE_2	IF_6
0x4006766	          0x83c601	                              add esi, 1	      2951	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	ELSE_2
0x4006769	          0x897308	                mov dword [rbx + 8], esi	      2951	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	ELSE_2
0x400676c	          0x83e801	                              sub eax, 1	      2951	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	ELSE_2
0x400676f	            0x85c0	                           test eax, eax	      2933	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1
0x4006771	            0x7439	                            je 0x40067ac	      2933	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1
0x4006773	          0x8b5520	            mov edx, dword [rbp + 0x20] 	      2935	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	IF_4
0x4006776	          0x83fa55	                           cmp edx, 0x55	      2935	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	IF_4
0x4006779	            0x75d5	                           jne 0x4006750	      2935	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	IF_4
0x400677b	            0x85f6	                           test esi, esi	      2937	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	IF_4	IF_5
0x400677d	            0x7411	                            je 0x4006790	      2937	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	IF_4	IF_5
0x400677f	          0x83ee01	                              sub esi, 1	      2942	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	IF_4
0x4006782	          0x897308	                mov dword [rbx + 8], esi	      2942	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	IF_4
0x4006785	            0xebe5	                           jmp 0x400676c	      2942	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	IF_4
0x4006787	    0x660f1f840000	                    nop word [rax + rax]	      2942	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	IF_4
0x4006790	      0xba05000000	                              mov edx, 5	      2939	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	IF_4	IF_5	CALL_4
0x4006795	      0xbe00000000	                              mov esi, 0	      2939	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	IF_4	IF_5	CALL_4
0x400679a	            0x31ff	                            xor edi, edi	      2948	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	ELSE_2	IF_6	CALL_6
0x400679c	      0xe800000000	                          call 0x40067a1	      2948	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	ELSE_2	IF_6	CALL_6
0x40067a1	          0x4889c7	                            mov rdi, rax	      2948	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	ELSE_2	IF_6	CALL_6
0x40067a4	      0xe800000000	                          call 0x40067a9	      2948	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	ELSE_2	IF_6	CALL_6
0x40067a9	          0x8b7308	                mov esi, dword [rbx + 8]	      2948	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	ELSE_2	IF_6	CALL_6
0x40067ac	          0x4889df	                            mov rdi, rbx	      2954	quickfix.c	FUNCTION_41	CALL_7
0x40067af	      0xba00000000	                              mov edx, 0	      2954	quickfix.c	FUNCTION_41	CALL_7
0x40067b4	      0xe807a0ffff	                         call sym.qf_msg	      2954	quickfix.c	FUNCTION_41	CALL_7
0x40067b9	        0x4883c408	                              add rsp, 8	      2956	quickfix.c	FUNCTION_41
0x40067bd	          0x4889df	                            mov rdi, rbx	      2955	quickfix.c	FUNCTION_41	CALL_8
0x40067c0	            0x31f6	                            xor esi, esi	      2955	quickfix.c	FUNCTION_41	CALL_8
0x40067c2	              0x5b	                                 pop rbx	      2956	quickfix.c	FUNCTION_41
0x40067c3	              0x5d	                                 pop rbp	      2956	quickfix.c	FUNCTION_41
0x40067c4	      0xe9f7afffff	                jmp sym.qf_update_buffer	      2955	quickfix.c	FUNCTION_41	CALL_8
0x40067c9	     0xf1f80000000	                         nop dword [rax]	      2955	quickfix.c	FUNCTION_41	CALL_8
0x40067d0	          0x8b4548	            mov eax, dword [rbp + 0x48] 	      2930	quickfix.c	FUNCTION_41	IF_3
0x40067d3	      0xe96fffffff	                           jmp 0x4006747	      2930	quickfix.c	FUNCTION_41	IF_3
0x40067d8	     0xf1f84000000	                   nop dword [rax + rax]	      2930	quickfix.c	FUNCTION_41	IF_3
0x40067e0	    0x488b05000000	            mov rax, qword [0x040067e7] 	      2921	quickfix.c	FUNCTION_41	IF_1
0x40067e7	        0x488b7808	                mov rdi, qword [rax + 8]	      2921	quickfix.c	FUNCTION_41	IF_1
0x40067eb	      0xe800000000	                          call 0x40067f0	      2921	quickfix.c	FUNCTION_41	IF_1
0x40067f0	            0x85c0	                           test eax, eax	      2921	quickfix.c	FUNCTION_41	IF_1
0x40067f2	    0x488b05000000	            mov rax, qword [0x040067f9] 	      2921	quickfix.c	FUNCTION_41	IF_1
0x40067f9	            0x7410	                            je 0x400680b	      2921	quickfix.c	FUNCTION_41	IF_1
0x40067fb	    0x488b98501900	          mov rbx, qword [rax + 0x1950] 	      2921	quickfix.c	FUNCTION_41	IF_1
0x4006802	          0x4885db	                           test rbx, rbx	      2921	quickfix.c	FUNCTION_41	IF_1
0x4006805	     0xf852cffffff	                           jne 0x4006737	      2921	quickfix.c	FUNCTION_41	IF_1
0x400680b	    0x488b98481900	          mov rbx, qword [rax + 0x1948] 	      2921	quickfix.c	FUNCTION_41	IF_1
0x4006812	          0x4885db	                           test rbx, rbx	      2922	quickfix.c	FUNCTION_41	IF_1	IF_2
0x4006815	     0xf851cffffff	                           jne 0x4006737	      2922	quickfix.c	FUNCTION_41	IF_1	IF_2
0x400681b	            0x31ff	                            xor edi, edi	      2924	quickfix.c	FUNCTION_41	IF_1	IF_2	CALL_2
0x400681d	      0xba05000000	                              mov edx, 5	      2924	quickfix.c	FUNCTION_41	IF_1	IF_2	CALL_2
0x4006822	      0xbe00000000	                              mov esi, 0	      2924	quickfix.c	FUNCTION_41	IF_1	IF_2	CALL_2
0x4006827	      0xe800000000	                          call 0x400682c	      2924	quickfix.c	FUNCTION_41	IF_1	IF_2	CALL_2
0x400682c	        0x4883c408	                              add rsp, 8	      2956	quickfix.c	FUNCTION_41
0x4006830	          0x4889c7	                            mov rdi, rax	      2924	quickfix.c	FUNCTION_41	IF_1	IF_2	CALL_2
0x4006833	              0x5b	                                 pop rbx	      2956	quickfix.c	FUNCTION_41
0x4006834	              0x5d	                                 pop rbp	      2956	quickfix.c	FUNCTION_41
0x4006835	      0xe900000000	                           jmp 0x400683a	      2924	quickfix.c	FUNCTION_41	IF_1	IF_2	CALL_2
0x400683a	    0x660f1f440000	                    nop word [rax + rax]	      2924	quickfix.c	FUNCTION_41	IF_1	IF_2	CALL_2
0x4006840	      0xba05000000	                              mov edx, 5	      2948	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	ELSE_2	IF_6	CALL_6
0x4006845	      0xbe00000000	                              mov esi, 0	      2948	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	ELSE_2	IF_6	CALL_6
0x400684a	      0xe94bffffff	                           jmp 0x400679a	      2948	quickfix.c	FUNCTION_41	ELSE_1	WHILE_1	ELSE_2	IF_6	CALL_6
get_errorlist	functions,0:WHILE,0:DO,0:CALL,13:SWITCH,0:IF,10:ELSE,0:FOR,1	180
0x4009ed0	            0x4157	                                push r15	      4930	quickfix.c	FUNCTION_85
0x4009ed2	            0x4156	                                push r14	      4930	quickfix.c	FUNCTION_85
0x4009ed4	            0x4155	                                push r13	      4930	quickfix.c	FUNCTION_85
0x4009ed6	            0x4154	                                push r12	      4930	quickfix.c	FUNCTION_85
0x4009ed8	          0x4989cc	                            mov r12, rcx	      4930	quickfix.c	FUNCTION_85
0x4009edb	              0x55	                                push rbp	      4930	quickfix.c	FUNCTION_85
0x4009edc	              0x53	                                push rbx	      4930	quickfix.c	FUNCTION_85
0x4009edd	        0x4883ec28	                           sub rsp, 0x28	      4930	quickfix.c	FUNCTION_85
0x4009ee1	    0x64488b042528	                mov rax, qword fs:[0x28]	      4930	quickfix.c	FUNCTION_85
0x4009eea	      0x4889442418	             mov qword [rsp + 0x18], rax	      4930	quickfix.c	FUNCTION_85
0x4009eef	            0x31c0	                            xor eax, eax	      4930	quickfix.c	FUNCTION_85
0x4009ef1	          0x4885ff	                           test rdi, rdi	      4938	quickfix.c	FUNCTION_85	IF_1
0x4009ef4	     0xf84e6010000	                            je 0x400a0e0	      4938	quickfix.c	FUNCTION_85	IF_1
0x4009efa	          0x83faff	             cmp edx, 0xffffffffffffffff	      4949	quickfix.c	FUNCTION_85	IF_4
0x4009efd	     0xf846d020000	                            je 0x400a170	      4949	quickfix.c	FUNCTION_85	IF_4
0x4009f03	          0x3b5704	                cmp edx, dword [rdi + 4]	      4952	quickfix.c	FUNCTION_85	IF_5
0x4009f06	     0xf8d24020000	                           jge 0x400a130	      4952	quickfix.c	FUNCTION_85	IF_5
0x4009f0c	          0x4863d2	                         movsxd rdx, edx	      4953	quickfix.c	FUNCTION_85	IF_5
0x4009f0f	    0x488d04d50000	                        lea rax, [rdx*8]	      4953	quickfix.c	FUNCTION_85	IF_5
0x4009f17	        0x48c1e207	                              shl rdx, 7	      4953	quickfix.c	FUNCTION_85	IF_5
0x4009f1b	          0x4829c2	                            sub rdx, rax	      4953	quickfix.c	FUNCTION_85	IF_5
0x4009f1e	          0x4801d7	                            add rdi, rdx	      4953	quickfix.c	FUNCTION_85	IF_5
0x4009f21	          0x8b4730	            mov eax, dword [rdi + 0x30] 	      4953	quickfix.c	FUNCTION_85	IF_5
0x4009f24	            0x85c0	                           test eax, eax	      4953	quickfix.c	FUNCTION_85	IF_5
0x4009f26	     0xf8404020000	                            je 0x400a130	      4953	quickfix.c	FUNCTION_85	IF_5
0x4009f2c	    0x8b1500000000	            mov edx, dword [0x04009f32] 	      4957	quickfix.c	FUNCTION_85	FOR_1
0x4009f32	        0x488b6f18	            mov rbp, qword [rdi + 0x18] 	      4956	quickfix.c	FUNCTION_85
0x4009f36	            0x85d2	                           test edx, edx	      4957	quickfix.c	FUNCTION_85	FOR_1
0x4009f38	     0xf8598010000	                           jne 0x400a0d6	      4957	quickfix.c	FUNCTION_85	FOR_1
0x4009f3e	            0x85c0	                           test eax, eax	      4957	quickfix.c	FUNCTION_85	FOR_1
0x4009f40	     0xf8e90010000	                           jle 0x400a0d6	      4957	quickfix.c	FUNCTION_85	FOR_1
0x4009f46	    0x41be01000000	                             mov r14d, 1	      4957	quickfix.c	FUNCTION_85	FOR_1
0x4009f4c	          0x4989fd	                            mov r13, rdi	      4957	quickfix.c	FUNCTION_85	FOR_1
0x4009f4f	        0x448b7d18	           mov r15d, dword [rbp + 0x18] 	      4960	quickfix.c	FUNCTION_85	FOR_1
0x4009f53	          0x4585ff	                         test r15d, r15d	      4961	quickfix.c	FUNCTION_85	FOR_1	IF_6	CALL_1
0x4009f56	     0xf85fc010000	                           jne 0x400a158	      4961	quickfix.c	FUNCTION_85	FOR_1	IF_6	CALL_1
0x4009f5c	          0x4531ff	                          xor r15d, r15d	      4962	quickfix.c	FUNCTION_85	FOR_1	IF_6
0x4009f5f	      0xe800000000	                          call 0x4009f64	      4964	quickfix.c	FUNCTION_85	FOR_1	IF_7	CALL_2
0x4009f64	          0x4885c0	                           test rax, rax	      4964	quickfix.c	FUNCTION_85	FOR_1	IF_7	CALL_2
0x4009f67	          0x4889c3	                            mov rbx, rax	      4964	quickfix.c	FUNCTION_85	FOR_1	IF_7	CALL_2
0x4009f6a	     0xf84c0010000	                            je 0x400a130	      4964	quickfix.c	FUNCTION_85	FOR_1	IF_7	CALL_2
0x4009f70	          0x4889c6	                            mov rsi, rax	      4966	quickfix.c	FUNCTION_85	FOR_1	IF_8	CALL_3
0x4009f73	          0x4c89e7	                            mov rdi, r12	      4966	quickfix.c	FUNCTION_85	FOR_1	IF_8	CALL_3
0x4009f76	      0xe800000000	                          call 0x4009f7b	      4966	quickfix.c	FUNCTION_85	FOR_1	IF_8	CALL_3
0x4009f7b	            0x85c0	                           test eax, eax	      4966	quickfix.c	FUNCTION_85	FOR_1	IF_8	CALL_3
0x4009f7d	     0xf84ad010000	                            je 0x400a130	      4966	quickfix.c	FUNCTION_85	FOR_1	IF_8	CALL_3
0x4009f83	         0xfb64542	           movzx eax, byte [rbp + 0x42] 	      4969	quickfix.c	FUNCTION_85	FOR_1
0x4009f87	            0x31c9	                            xor ecx, ecx	      4971	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_4
0x4009f89	          0x4963d7	                        movsxd rdx, r15d	      4971	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_4
0x4009f8c	      0xbe00000000	                              mov esi, 0	      4971	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_4
0x4009f91	          0x4889df	                            mov rdi, rbx	      4971	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_4
0x4009f94	      0xc644241100	                mov byte [rsp + 0x11], 0	      4970	quickfix.c	FUNCTION_85	FOR_1
0x4009f99	        0x88442410	               mov byte [rsp + 0x10], al	      4969	quickfix.c	FUNCTION_85	FOR_1
0x4009f9d	      0xe800000000	                          call 0x4009fa2	      4971	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_4
0x4009fa2	            0x85c0	                           test eax, eax	      4971	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_4
0x4009fa4	     0xf8486010000	                            je 0x400a130	      4971	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_4
0x4009faa	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	      4972	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_5
0x4009fae	            0x31c9	                            xor ecx, ecx	      4972	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_5
0x4009fb0	      0xbe00000000	                              mov esi, 0	      4972	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_5
0x4009fb5	          0x4889df	                            mov rdi, rbx	      4972	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_5
0x4009fb8	      0xe800000000	                          call 0x4009fbd	      4972	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_5
0x4009fbd	            0x85c0	                           test eax, eax	      4972	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_5
0x4009fbf	     0xf846b010000	                            je 0x400a130	      4972	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_5
0x4009fc5	        0x4863551c	         movsxd rdx, dword [rbp + 0x1c] 	      4973	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_6
0x4009fc9	            0x31c9	                            xor ecx, ecx	      4973	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_6
0x4009fcb	      0xbe00000000	                              mov esi, 0	      4973	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_6
0x4009fd0	          0x4889df	                            mov rdi, rbx	      4973	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_6
0x4009fd3	      0xe800000000	                          call 0x4009fd8	      4973	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_6
0x4009fd8	            0x85c0	                           test eax, eax	      4973	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_6
0x4009fda	     0xf8450010000	                            je 0x400a130	      4973	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_6
0x4009fe0	         0xfb65540	           movzx edx, byte [rbp + 0x40] 	      4974	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_7
0x4009fe4	            0x31c9	                            xor ecx, ecx	      4974	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_7
0x4009fe6	      0xbe00000000	                              mov esi, 0	      4974	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_7
0x4009feb	          0x4889df	                            mov rdi, rbx	      4974	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_7
0x4009fee	      0xe800000000	                          call 0x4009ff3	      4974	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_7
0x4009ff3	            0x85c0	                           test eax, eax	      4974	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_7
0x4009ff5	     0xf8435010000	                            je 0x400a130	      4974	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_7
0x4009ffb	        0x48635520	         movsxd rdx, dword [rbp + 0x20] 	      4975	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_8
0x4009fff	            0x31c9	                            xor ecx, ecx	      4975	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_8
0x400a001	      0xbe00000000	                              mov esi, 0	      4975	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_8
0x400a006	          0x4889df	                            mov rdi, rbx	      4975	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_8
0x400a009	      0xe800000000	                          call 0x400a00e	      4975	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_8
0x400a00e	            0x85c0	                           test eax, eax	      4975	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_8
0x400a010	     0xf841a010000	                            je 0x400a130	      4975	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_8
0x400a016	        0x488b4d28	            mov rcx, qword [rbp + 0x28] 	      4977	quickfix.c	FUNCTION_85	FOR_1	IF_9
0x400a01a	    0x41bf00000000	                             mov r15d, 0	      4976	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_9
0x400a020	      0xbe00000000	                              mov esi, 0	      4976	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_9
0x400a025	          0x4889df	                            mov rdi, rbx	      4976	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_9
0x400a028	          0x4885c9	                           test rcx, rcx	      4976	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_9
0x400a02b	        0x490f44cf	                          cmove rcx, r15	      4976	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_9
0x400a02f	            0x31d2	                            xor edx, edx	      4976	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_9
0x400a031	      0xe800000000	                          call 0x400a036	      4976	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_9
0x400a036	            0x85c0	                           test eax, eax	      4976	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_9
0x400a038	     0xf84f2000000	                            je 0x400a130	      4976	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_9
0x400a03e	        0x488b4d30	            mov rcx, qword [rbp + 0x30] 	      4979	quickfix.c	FUNCTION_85	FOR_1	IF_9
0x400a042	      0xbe00000000	                              mov esi, 0	      4978	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_10
0x400a047	          0x4889df	                            mov rdi, rbx	      4978	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_10
0x400a04a	          0x4885c9	                           test rcx, rcx	      4978	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_10
0x400a04d	        0x490f44cf	                          cmove rcx, r15	      4978	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_10
0x400a051	            0x31d2	                            xor edx, edx	      4978	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_10
0x400a053	      0xe800000000	                          call 0x400a058	      4978	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_10
0x400a058	            0x85c0	                           test eax, eax	      4978	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_10
0x400a05a	     0xf84d0000000	                            je 0x400a130	      4978	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_10
0x400a060	        0x488b4d38	            mov rcx, qword [rbp + 0x38] 	      4981	quickfix.c	FUNCTION_85	FOR_1	IF_9
0x400a064	      0xbe00000000	                              mov esi, 0	      4980	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_11
0x400a069	          0x4889df	                            mov rdi, rbx	      4980	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_11
0x400a06c	          0x4885c9	                           test rcx, rcx	      4980	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_11
0x400a06f	        0x490f44cf	                          cmove rcx, r15	      4980	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_11
0x400a073	            0x31d2	                            xor edx, edx	      4980	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_11
0x400a075	      0xe800000000	                          call 0x400a07a	      4980	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_11
0x400a07a	            0x85c0	                           test eax, eax	      4980	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_11
0x400a07c	     0xf84ae000000	                            je 0x400a130	      4980	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_11
0x400a082	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	      4982	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_12
0x400a087	            0x31d2	                            xor edx, edx	      4982	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_12
0x400a089	      0xbe00000000	                              mov esi, 0	      4982	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_12
0x400a08e	          0x4889df	                            mov rdi, rbx	      4982	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_12
0x400a091	      0xe800000000	                          call 0x400a096	      4982	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_12
0x400a096	            0x85c0	                           test eax, eax	      4982	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_12
0x400a098	     0xf8492000000	                            je 0x400a130	      4982	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_12
0x400a09e	         0xfb65543	           movzx edx, byte [rbp + 0x43] 	      4983	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_13
0x400a0a2	            0x31c9	                            xor ecx, ecx	      4983	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_13
0x400a0a4	      0xbe00000000	                              mov esi, 0	      4983	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_13
0x400a0a9	          0x4889df	                            mov rdi, rbx	      4983	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_13
0x400a0ac	      0xe800000000	                          call 0x400a0b1	      4983	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_13
0x400a0b1	            0x85c0	                           test eax, eax	      4983	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_13
0x400a0b3	            0x747b	                            je 0x400a130	      4983	quickfix.c	FUNCTION_85	FOR_1	IF_9	CALL_13
0x400a0b5	        0x488b6d00	                    mov rbp, qword [rbp]	      4986	quickfix.c	FUNCTION_85	FOR_1
0x400a0b9	          0x4885ed	                           test rbp, rbp	      4987	quickfix.c	FUNCTION_85	FOR_1	IF_10
0x400a0bc	            0x7418	                            je 0x400a0d6	      4987	quickfix.c	FUNCTION_85	FOR_1	IF_10
0x400a0be	    0x8b0500000000	            mov eax, dword [0x0400a0c4] 	      4957	quickfix.c	FUNCTION_85	FOR_1
0x400a0c4	        0x4183c601	                             add r14d, 1	      4957	quickfix.c	FUNCTION_85	FOR_1
0x400a0c8	            0x85c0	                           test eax, eax	      4957	quickfix.c	FUNCTION_85	FOR_1
0x400a0ca	            0x750a	                           jne 0x400a0d6	      4957	quickfix.c	FUNCTION_85	FOR_1
0x400a0cc	        0x45397530	           cmp dword [r13 + 0x30], r14d 	      4957	quickfix.c	FUNCTION_85	FOR_1
0x400a0d0	     0xf8d79feffff	                           jge 0x4009f4f	      4957	quickfix.c	FUNCTION_85	FOR_1
0x400a0d6	      0xb801000000	                              mov eax, 1	      4990	quickfix.c	FUNCTION_85
0x400a0db	            0xeb55	                           jmp 0x400a132	      4990	quickfix.c	FUNCTION_85
0x400a0dd	           0xf1f00	                         nop dword [rax]	      4990	quickfix.c	FUNCTION_85
0x400a0e0	          0x4885f6	                           test rsi, rsi	      4941	quickfix.c	FUNCTION_85	IF_1	IF_2
0x400a0e3	     0xf8497000000	                            je 0x400a180	      4941	quickfix.c	FUNCTION_85	IF_1	IF_2
0x400a0e9	        0x488b7e08	                mov rdi, qword [rsi + 8]	      4943	quickfix.c	FUNCTION_85	IF_1	IF_2
0x400a0ed	        0x8954240c	              mov dword [rsp + 0xc], edx	      4943	quickfix.c	FUNCTION_85	IF_1	IF_2
0x400a0f1	        0x48893424	                    mov qword [rsp], rsi	      4943	quickfix.c	FUNCTION_85	IF_1	IF_2
0x400a0f5	      0xe800000000	                          call 0x400a0fa	      4943	quickfix.c	FUNCTION_85	IF_1	IF_2
0x400a0fa	            0x85c0	                           test eax, eax	      4943	quickfix.c	FUNCTION_85	IF_1	IF_2
0x400a0fc	        0x488b3424	                    mov rsi, qword [rsp]	      4943	quickfix.c	FUNCTION_85	IF_1	IF_2
0x400a100	        0x8b54240c	              mov edx, dword [rsp + 0xc]	      4943	quickfix.c	FUNCTION_85	IF_1	IF_2
0x400a104	            0x741a	                            je 0x400a120	      4943	quickfix.c	FUNCTION_85	IF_1	IF_2
0x400a106	    0x488bbe501900	          mov rdi, qword [rsi + 0x1950] 	      4943	quickfix.c	FUNCTION_85	IF_1	IF_2
0x400a10d	          0x4885ff	                           test rdi, rdi	      4943	quickfix.c	FUNCTION_85	IF_1	IF_2
0x400a110	     0xf85e4fdffff	                           jne 0x4009efa	      4943	quickfix.c	FUNCTION_85	IF_1	IF_2
0x400a116	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4943	quickfix.c	FUNCTION_85	IF_1	IF_2
0x400a120	    0x488bbe481900	          mov rdi, qword [rsi + 0x1948] 	      4943	quickfix.c	FUNCTION_85	IF_1	IF_2
0x400a127	          0x4885ff	                           test rdi, rdi	      4944	quickfix.c	FUNCTION_85	IF_1	IF_2	IF_3
0x400a12a	     0xf85cafdffff	                           jne 0x4009efa	      4944	quickfix.c	FUNCTION_85	IF_1	IF_2	IF_3
0x400a130	            0x31c0	                            xor eax, eax	      4945	quickfix.c	FUNCTION_85	IF_1	IF_2	IF_3
0x400a132	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      4991	quickfix.c	FUNCTION_85
0x400a137	    0x644833342528	                xor rsi, qword fs:[0x28]	      4991	quickfix.c	FUNCTION_85
0x400a140	            0x7548	                           jne 0x400a18a	      4991	quickfix.c	FUNCTION_85
0x400a142	        0x4883c428	                           add rsp, 0x28	      4991	quickfix.c	FUNCTION_85
0x400a146	              0x5b	                                 pop rbx	      4991	quickfix.c	FUNCTION_85
0x400a147	              0x5d	                                 pop rbp	      4991	quickfix.c	FUNCTION_85
0x400a148	            0x415c	                                 pop r12	      4991	quickfix.c	FUNCTION_85
0x400a14a	            0x415d	                                 pop r13	      4991	quickfix.c	FUNCTION_85
0x400a14c	            0x415e	                                 pop r14	      4991	quickfix.c	FUNCTION_85
0x400a14e	            0x415f	                                 pop r15	      4991	quickfix.c	FUNCTION_85
0x400a150	              0xc3	                                     ret	      4991	quickfix.c	FUNCTION_85
0x400a151	     0xf1f80000000	                         nop dword [rax]	      4991	quickfix.c	FUNCTION_85
0x400a158	          0x4489ff	                           mov edi, r15d	      4961	quickfix.c	FUNCTION_85	FOR_1	IF_6	CALL_1
0x400a15b	      0xe800000000	                          call 0x400a160	      4961	quickfix.c	FUNCTION_85	FOR_1	IF_6	CALL_1
0x400a160	          0x4885c0	                           test rax, rax	      4961	quickfix.c	FUNCTION_85	FOR_1	IF_6	CALL_1
0x400a163	     0xf85f6fdffff	                           jne 0x4009f5f	      4961	quickfix.c	FUNCTION_85	FOR_1	IF_6	CALL_1
0x400a169	      0xe9eefdffff	                           jmp 0x4009f5c	      4961	quickfix.c	FUNCTION_85	FOR_1	IF_6	CALL_1
0x400a16e	            0x6690	                                     nop	      4961	quickfix.c	FUNCTION_85	FOR_1	IF_6	CALL_1
0x400a170	          0x8b5708	                mov edx, dword [rdi + 8]	      4950	quickfix.c	FUNCTION_85	IF_4
0x400a173	      0xe98bfdffff	                           jmp 0x4009f03	      4950	quickfix.c	FUNCTION_85	IF_4
0x400a178	     0xf1f84000000	                   nop dword [rax + rax]	      4950	quickfix.c	FUNCTION_85	IF_4
0x400a180	      0xbf00000000	                              mov edi, 0	      4940	quickfix.c	FUNCTION_85	IF_1
0x400a185	      0xe970fdffff	                           jmp 0x4009efa	      4940	quickfix.c	FUNCTION_85	IF_1
0x400a18a	      0xe800000000	                          call 0x400a18f	      4991	quickfix.c	FUNCTION_85
qf_fill_buffer	functions,0:WHILE,2:DO,0:CALL,28:SWITCH,0:IF,16:ELSE,5:FOR,0	372
0x40011a0	            0x4157	                                push r15	      3558	quickfix.c	FUNCTION_60
0x40011a2	            0x4156	                                push r14	      3558	quickfix.c	FUNCTION_60
0x40011a4	            0x4155	                                push r13	      3558	quickfix.c	FUNCTION_60
0x40011a6	            0x4154	                                push r12	      3558	quickfix.c	FUNCTION_60
0x40011a8	              0x55	                                push rbp	      3558	quickfix.c	FUNCTION_60
0x40011a9	              0x53	                                push rbx	      3558	quickfix.c	FUNCTION_60
0x40011aa	          0x4889fd	                            mov rbp, rdi	      3558	quickfix.c	FUNCTION_60
0x40011ad	    0x4881ec381000	                         sub rsp, 0x1038	      3558	quickfix.c	FUNCTION_60
0x40011b4	    0x64488b1c2528	                mov rbx, qword fs:[0x28]	      3558	quickfix.c	FUNCTION_60
0x40011bd	    0x48899c242810	          mov qword [rsp + 0x1028], rbx 	      3558	quickfix.c	FUNCTION_60
0x40011c5	            0x31db	                            xor ebx, ebx	      3558	quickfix.c	FUNCTION_60
0x40011c7	    0x8b1d00000000	            mov ebx, dword [0x040011cd] 	      3563	quickfix.c	FUNCTION_60
0x40011cd	          0x4885d2	                           test rdx, rdx	      3565	quickfix.c	FUNCTION_60	IF_1
0x40011d0	      0x4889742408	                mov qword [rsp + 8], rsi	      3558	quickfix.c	FUNCTION_60
0x40011d5	      0x4889542410	             mov qword [rsp + 0x10], rdx	      3558	quickfix.c	FUNCTION_60
0x40011da	        0x895c241c	             mov dword [rsp + 0x1c], ebx	      3563	quickfix.c	FUNCTION_60
0x40011de	     0xf8429050000	                            je 0x400170d	      3565	quickfix.c	FUNCTION_60	IF_1
0x40011e4	        0x48634708	            movsxd rax, dword [rdi + 8] 	      3579	quickfix.c	FUNCTION_60	IF_3
0x40011e8	          0x394704	                cmp dword [rdi + 4], eax	      3579	quickfix.c	FUNCTION_60	IF_3
0x40011eb	            0x7f3d	                            jg 0x400122a	      3579	quickfix.c	FUNCTION_60	IF_3
0x40011ed	      0xbf01000000	                              mov edi, 1	      3671	quickfix.c	FUNCTION_60	CALL_24
0x40011f2	      0xe800000000	                          call 0x40011f7	      3671	quickfix.c	FUNCTION_60	CALL_24
0x40011f7	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      3695	quickfix.c	FUNCTION_60
0x40011fb	    0x890500000000	            mov dword [0x04001201], eax 	      3695	quickfix.c	FUNCTION_60
0x4001201	    0x488b84242810	          mov rax, qword [rsp + 0x1028] 	      3696	quickfix.c	FUNCTION_60
0x4001209	    0x644833042528	                xor rax, qword fs:[0x28]	      3696	quickfix.c	FUNCTION_60
0x4001212	     0xf8594050000	                           jne 0x40017ac	      3696	quickfix.c	FUNCTION_60
0x4001218	    0x4881c4381000	                         add rsp, 0x1038	      3696	quickfix.c	FUNCTION_60
0x400121f	              0x5b	                                 pop rbx	      3696	quickfix.c	FUNCTION_60
0x4001220	              0x5d	                                 pop rbp	      3696	quickfix.c	FUNCTION_60
0x4001221	            0x415c	                                 pop r12	      3696	quickfix.c	FUNCTION_60
0x4001223	            0x415d	                                 pop r13	      3696	quickfix.c	FUNCTION_60
0x4001225	            0x415e	                                 pop r14	      3696	quickfix.c	FUNCTION_60
0x4001227	            0x415f	                                 pop r15	      3696	quickfix.c	FUNCTION_60
0x4001229	              0xc3	                                     ret	      3696	quickfix.c	FUNCTION_60
0x400122a	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      3593	quickfix.c	FUNCTION_60	IF_3	ELSE_1
0x400122f	      0xc644242000	                mov byte [rsp + 0x20], 0	      3583	quickfix.c	FUNCTION_60	IF_3
0x4001234	          0x4c8b33	                    mov r14, qword [rbx]	      3593	quickfix.c	FUNCTION_60	IF_3	ELSE_1
0x4001237	      0x488b5c2408	                mov rbx, qword [rsp + 8]	      3594	quickfix.c	FUNCTION_60	IF_3	ELSE_1
0x400123c	          0x488b1b	                    mov rbx, qword [rbx]	      3594	quickfix.c	FUNCTION_60	IF_3	ELSE_1
0x400123f	              0x90	                                     nop	      3594	quickfix.c	FUNCTION_60	IF_3	ELSE_1
0x4001240	    0x488d14c50000	                        lea rdx, [rax*8]	      3596	quickfix.c	FUNCTION_60	IF_3	WHILE_2
0x4001248	        0x48c1e007	                              shl rax, 7	      3596	quickfix.c	FUNCTION_60	IF_3	WHILE_2
0x400124c	          0x4829d0	                            sub rax, rdx	      3596	quickfix.c	FUNCTION_60	IF_3	WHILE_2
0x400124f	      0x4863440530	   movsxd rax, dword [rbp + rax + 0x30] 	      3596	quickfix.c	FUNCTION_60	IF_3	WHILE_2
0x4001254	          0x4839c3	                            cmp rbx, rax	      3596	quickfix.c	FUNCTION_60	IF_3	WHILE_2
0x4001257	     0xf8d5b030000	                           jge 0x40015b8	      3596	quickfix.c	FUNCTION_60	IF_3	WHILE_2
0x400125d	        0x498b7628	            mov rsi, qword [r14 + 0x28] 	      3598	quickfix.c	FUNCTION_60	IF_3	WHILE_2	IF_5
0x4001261	          0x4885f6	                           test rsi, rsi	      3598	quickfix.c	FUNCTION_60	IF_3	WHILE_2	IF_5
0x4001264	     0xf84e6020000	                            je 0x4001550	      3598	quickfix.c	FUNCTION_60	IF_3	WHILE_2	IF_5
0x400126a	    0x488b3d000000	            mov rdi, qword [0x04001271] 	       110	string3.h	FUNCTION_121	CALL_3
0x4001271	      0xe800000000	                          call 0x4001276	       110	string3.h	FUNCTION_121	CALL_3
0x4001276	    0x4c8b25000000	            mov r12, qword [0x0400127d] 	      3621	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	CALL_12
0x400127d	          0x4c89e7	                            mov rdi, r12	      3621	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	CALL_12
0x4001280	      0xe800000000	                          call 0x4001285	      3621	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	CALL_12
0x4001285	        0x448d7801	                     lea r15d, [rax + 1]	      3621	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	CALL_12
0x4001289	            0x4898	                                    cdqe	      3621	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	CALL_12
0x400128b	          0x4d63ef	                        movsxd r13, r15d	      3621	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	CALL_12
0x400128e	      0x41c604047c	              mov byte [r12 + rax], 0x7c	      3625	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_4
0x4001293	        0x4d8b4610	              mov r8, qword [r14 + 0x10]	      3627	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_4	IF_10
0x4001297	          0x4d85c0	                             test r8, r8	      3627	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_4	IF_10
0x400129a	     0xf8e00020000	                           jle 0x40014a0	      3627	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_4	IF_10
0x40012a0	          0x4c89ef	                            mov rdi, r13	        33	stdio2.h	FUNCTION_127	CALL_1
0x40012a3	    0x48033d000000	             add rdi, qword [0x040012aa]	        33	stdio2.h	FUNCTION_127	CALL_1
0x40012aa	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_127	CALL_1
0x40012af	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_127	CALL_1
0x40012b6	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_127	CALL_1
0x40012bb	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_127	CALL_1
0x40012bd	      0xe800000000	                          call 0x40012c2	        33	stdio2.h	FUNCTION_127	CALL_1
0x40012c2	    0x4c8b25000000	            mov r12, qword [0x040012c9] 	      3630	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_4	IF_10	CALL_13
0x40012c9	        0x4b8d3c2c	                    lea rdi, [r12 + r13]	      3630	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_4	IF_10	CALL_13
0x40012cd	      0xe800000000	                          call 0x40012d2	      3630	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_4	IF_10	CALL_13
0x40012d2	        0x458b461c	            mov r8d, dword [r14 + 0x1c] 	      3632	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_4	IF_10	IF_11
0x40012d6	          0x4101c7	                           add r15d, eax	      3630	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_4	IF_10	CALL_13
0x40012d9	          0x4585c0	                           test r8d, r8d	      3632	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_4	IF_10	IF_11
0x40012dc	            0x7e32	                           jle 0x4001310	      3632	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_4	IF_10	IF_11
0x40012de	          0x4d63ef	                        movsxd r13, r15d	      3634	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_4	IF_10	IF_11
0x40012e1	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_127	CALL_1
0x40012e6	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_127	CALL_1
0x40012ed	        0x4b8d3c2c	                    lea rdi, [r12 + r13]	        33	stdio2.h	FUNCTION_127	CALL_1
0x40012f1	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_127	CALL_1
0x40012f6	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_127	CALL_1
0x40012f8	      0xe800000000	                          call 0x40012fd	        33	stdio2.h	FUNCTION_127	CALL_1
0x40012fd	    0x4c8b25000000	            mov r12, qword [0x04001304] 	      3635	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_4	IF_10	IF_11	CALL_14
0x4001304	        0x4b8d3c2c	                    lea rdi, [r12 + r13]	      3635	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_4	IF_10	IF_11	CALL_14
0x4001308	      0xe800000000	                          call 0x400130d	      3635	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_4	IF_10	IF_11	CALL_14
0x400130d	          0x4101c7	                           add r15d, eax	      3635	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_4	IF_10	IF_11	CALL_14
0x4001310	      0x410fb64e42	           movzx ecx, byte [r14 + 0x42] 	      3639	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_4	IF_10	CALL_15
0x4001315	        0x458b4e20	            mov r9d, dword [r14 + 0x20] 	      3639	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_4	IF_10	CALL_15
0x4001319	            0x89c8	                            mov eax, ecx	      3112	quickfix.c	FUNCTION_46	IF_1
0x400131b	          0x83e0df	                     and eax, 0xffffffdf	      3112	quickfix.c	FUNCTION_46	IF_1
0x400131e	            0x3c57	                            cmp al, 0x57	      3112	quickfix.c	FUNCTION_46	IF_1
0x4001320	     0xf8473020000	                            je 0x4001599	      3112	quickfix.c	FUNCTION_46	IF_1
0x4001326	            0x3c49	                            cmp al, 0x49	      3114	quickfix.c	FUNCTION_46	ELSE_1	IF_2
0x4001328	     0xf8482020000	                            je 0x40015b0	      3114	quickfix.c	FUNCTION_46	ELSE_1	IF_2
0x400132e	            0x3c45	                            cmp al, 0x45	      3116	quickfix.c	FUNCTION_46	ELSE_2	IF_3
0x4001330	     0xf848d030000	                            je 0x40016c3	      3116	quickfix.c	FUNCTION_46	ELSE_2	IF_3
0x4001336	            0x84c9	                             test cl, cl	      3116	quickfix.c	FUNCTION_46	ELSE_2	IF_3
0x4001338	     0xf8590030000	                           jne 0x40016ce	      3116	quickfix.c	FUNCTION_46	ELSE_2	IF_3
0x400133e	          0x4585c9	                           test r9d, r9d	      3116	quickfix.c	FUNCTION_46	ELSE_2	IF_3
0x4001341	    0x41b800000000	                              mov r8d, 0	      3117	quickfix.c	FUNCTION_46	ELSE_2	IF_3
0x4001347	     0xf8e81030000	                           jle 0x40016ce	      3116	quickfix.c	FUNCTION_46	ELSE_2	IF_3
0x400134d	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_127	CALL_1
0x4001352	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_127	CALL_1
0x4001357	      0xba14000000	                           mov edx, 0x14	        33	stdio2.h	FUNCTION_127	CALL_1
0x400135c	      0xbf00000000	                              mov edi, 0	        33	stdio2.h	FUNCTION_127	CALL_1
0x4001361	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_127	CALL_1
0x4001363	      0xe800000000	                          call 0x4001368	        33	stdio2.h	FUNCTION_127	CALL_1
0x4001368	    0x4c8b25000000	            mov r12, qword [0x0400136f] 	        33	stdio2.h	FUNCTION_127	CALL_1
0x400136f	      0xbe00000000	                              mov esi, 0	      3132	quickfix.c	FUNCTION_46
0x4001374	          0x4d63ef	                        movsxd r13, r15d	      3638	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_4	IF_10
0x4001377	        0x4b8d3c2c	                    lea rdi, [r12 + r13]	        33	stdio2.h	FUNCTION_127	CALL_1
0x400137b	      0xe800000000	                          call 0x4001380	        33	stdio2.h	FUNCTION_127	CALL_1
0x4001380	    0x4c8b25000000	            mov r12, qword [0x04001387] 	      3645	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_5	IF_12	CALL_18
0x4001387	        0x4b8d3c2c	                    lea rdi, [r12 + r13]	      3645	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_5	IF_12	CALL_18
0x400138b	      0xe800000000	                          call 0x4001390	      3645	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_5	IF_12	CALL_18
0x4001390	          0x4101c7	                           add r15d, eax	      3645	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_5	IF_12	CALL_18
0x4001393	          0x4d63ef	                        movsxd r13, r15d	      3645	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_5	IF_12	CALL_18
0x4001396	      0x43c6042c7c	              mov byte [r12 + r13], 0x7c	      3647	quickfix.c	FUNCTION_60	IF_3	WHILE_2
0x400139b	    0x488b05000000	            mov rax, qword [0x040013a2] 	      3648	quickfix.c	FUNCTION_60	IF_3	WHILE_2
0x40013a2	        0x418d4f02	                      lea ecx, [r15 + 2]	      3648	quickfix.c	FUNCTION_60	IF_3	WHILE_2
0x40013a6	        0x4183c701	                             add r15d, 1	      3648	quickfix.c	FUNCTION_60	IF_3	WHILE_2
0x40013aa	          0x4d63ff	                        movsxd r15, r15d	      3648	quickfix.c	FUNCTION_60	IF_3	WHILE_2
0x40013ad	      0x42c6043820	              mov byte [rax + r15], 0x20	      3648	quickfix.c	FUNCTION_60	IF_3	WHILE_2
0x40013b2	          0x4c63f9	                         movsxd r15, ecx	      3653	quickfix.c	FUNCTION_60	IF_3	WHILE_2	CALL_20
0x40013b5	    0x4c033d000000	             add r15, qword [0x040013bc]	      3653	quickfix.c	FUNCTION_60	IF_3	WHILE_2	CALL_20
0x40013bc	          0x83f903	                              cmp ecx, 3	      3653	quickfix.c	FUNCTION_60	IF_3	WHILE_2	CALL_20
0x40013bf	     0xf8fb1010000	                            jg 0x4001576	      3653	quickfix.c	FUNCTION_60	IF_3	WHILE_2	CALL_20
0x40013c5	        0x498b4638	            mov rax, qword [r14 + 0x38] 	      3653	quickfix.c	FUNCTION_60	IF_3	WHILE_2	CALL_20
0x40013c9	           0xfb610	                   movzx edx, byte [rax]	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40013cc	            0x84d2	                             test dl, dl	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40013ce	     0xf84be010000	                            je 0x4001592	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40013d4	    0x41b800040000	                          mov r8d, 0x400	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40013da	            0x31f6	                            xor esi, esi	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40013dc	          0x4c89ff	                            mov rdi, r15	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40013df	          0x4129c8	                            sub r8d, ecx	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40013e2	          0x4585c0	                           test r8d, r8d	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40013e5	            0x7f26	                            jg 0x400140d	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40013e7	      0xe9a6010000	                           jmp 0x4001592	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40013ec	         0xf1f4000	                         nop dword [rax]	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40013f0	            0x8817	                      mov byte [rdi], dl	      2874	quickfix.c	FUNCTION_39	FOR_1	ELSE_1
0x40013f2	         0xfb65001	               movzx edx, byte [rax + 1]	      2874	quickfix.c	FUNCTION_39	FOR_1	ELSE_1
0x40013f6	          0x83c601	                              add esi, 1	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40013f9	        0x488d4801	                      lea rcx, [rax + 1]	      2874	quickfix.c	FUNCTION_39	FOR_1	ELSE_1
0x40013fd	            0x84d2	                             test dl, dl	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40013ff	            0x744a	                            je 0x400144b	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001401	        0x4883c701	                              add rdi, 1	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001405	          0x4139f0	                            cmp r8d, esi	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001408	          0x4889c8	                            mov rax, rcx	      2874	quickfix.c	FUNCTION_39	FOR_1	ELSE_1
0x400140b	            0x742f	                            je 0x400143c	      2864	quickfix.c	FUNCTION_39	FOR_1
0x400140d	          0x80fa0a	                             cmp dl, 0xa	      2866	quickfix.c	FUNCTION_39	FOR_1	IF_1
0x4001410	            0x75de	                           jne 0x40013f0	      2866	quickfix.c	FUNCTION_39	FOR_1	IF_1
0x4001412	          0xc60720	                    mov byte [rdi], 0x20	      2868	quickfix.c	FUNCTION_39	FOR_1	IF_1
0x4001415	           0xf1f00	                         nop dword [rax]	      2868	quickfix.c	FUNCTION_39	FOR_1	IF_1
0x4001418	        0x4883c001	                              add rax, 1	      2869	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1
0x400141c	           0xfb610	                   movzx edx, byte [rax]	      2869	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1
0x400141f	            0x84d2	                             test dl, dl	      2869	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1
0x4001421	            0x7425	                            je 0x4001448	      2869	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1
0x4001423	          0x8d4af7	                      lea ecx, [rdx - 9]	      2870	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4001426	          0x80f901	                               cmp cl, 1	      2870	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4001429	            0x76ed	                           jbe 0x4001418	      2870	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x400142b	          0x80fa20	                            cmp dl, 0x20	      2870	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x400142e	            0x74e8	                            je 0x4001418	      2870	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4001430	          0x83c601	                              add esi, 1	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001433	        0x4883c701	                              add rdi, 1	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001437	          0x4139f0	                            cmp r8d, esi	      2864	quickfix.c	FUNCTION_39	FOR_1
0x400143a	            0x75d1	                           jne 0x400140d	      2864	quickfix.c	FUNCTION_39	FOR_1
0x400143c	          0x4963f0	                         movsxd rsi, r8d	      2864	quickfix.c	FUNCTION_39	FOR_1
0x400143f	            0xeb0d	                           jmp 0x400144e	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001441	     0xf1f80000000	                         nop dword [rax]	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001448	          0x83c601	                              add esi, 1	      2864	quickfix.c	FUNCTION_39	FOR_1
0x400144b	          0x4863f6	                         movsxd rsi, esi	      2864	quickfix.c	FUNCTION_39	FOR_1
0x400144e	      0x41c6043700	                 mov byte [r15 + rsi], 0	      2876	quickfix.c	FUNCTION_39	ELSE_1
0x4001453	    0x4c8b3d000000	            mov r15, qword [0x0400145a] 	      3657	quickfix.c	FUNCTION_60	IF_3	WHILE_2	IF_13	CALL_22
0x400145a	          0x4c89ff	                            mov rdi, r15	      3657	quickfix.c	FUNCTION_60	IF_3	WHILE_2	IF_13	CALL_22
0x400145d	      0xe800000000	                          call 0x4001462	      3657	quickfix.c	FUNCTION_60	IF_3	WHILE_2	IF_13	CALL_22
0x4001462	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3656	quickfix.c	FUNCTION_60	IF_3	WHILE_2	IF_13	CALL_21
0x4001467	          0x8d4801	                      lea ecx, [rax + 1]	      3656	quickfix.c	FUNCTION_60	IF_3	WHILE_2	IF_13	CALL_21
0x400146a	          0x4531c0	                            xor r8d, r8d	      3656	quickfix.c	FUNCTION_60	IF_3	WHILE_2	IF_13	CALL_21
0x400146d	          0x4c89fa	                            mov rdx, r15	      3656	quickfix.c	FUNCTION_60	IF_3	WHILE_2	IF_13	CALL_21
0x4001470	          0x4889de	                            mov rsi, rbx	      3656	quickfix.c	FUNCTION_60	IF_3	WHILE_2	IF_13	CALL_21
0x4001473	      0xe800000000	                          call 0x4001478	      3656	quickfix.c	FUNCTION_60	IF_3	WHILE_2	IF_13	CALL_21
0x4001478	            0x85c0	                           test eax, eax	      3656	quickfix.c	FUNCTION_60	IF_3	WHILE_2	IF_13	CALL_21
0x400147a	     0xf8438010000	                            je 0x40015b8	      3656	quickfix.c	FUNCTION_60	IF_3	WHILE_2	IF_13	CALL_21
0x4001480	          0x4d8b36	                    mov r14, qword [r14]	      3660	quickfix.c	FUNCTION_60	IF_3	WHILE_2
0x4001483	        0x4883c301	                              add rbx, 1	      3659	quickfix.c	FUNCTION_60	IF_3	WHILE_2
0x4001487	          0x4d85f6	                           test r14, r14	      3661	quickfix.c	FUNCTION_60	IF_3	WHILE_2	IF_14
0x400148a	     0xf8428010000	                            je 0x40015b8	      3661	quickfix.c	FUNCTION_60	IF_3	WHILE_2	IF_14
0x4001490	        0x48634508	            movsxd rax, dword [rbp + 8] 	      3661	quickfix.c	FUNCTION_60	IF_3	WHILE_2	IF_14
0x4001494	      0xe9a7fdffff	                           jmp 0x4001240	      3661	quickfix.c	FUNCTION_60	IF_3	WHILE_2	IF_14
0x4001499	     0xf1f80000000	                         nop dword [rax]	      3661	quickfix.c	FUNCTION_60	IF_3	WHILE_2	IF_14
0x40014a0	        0x498b5630	            mov rdx, qword [r14 + 0x30] 	      3642	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_5	IF_12
0x40014a4	    0x4c8b25000000	            mov r12, qword [0x040014ab] 	      3642	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_5	IF_12
0x40014ab	          0x4885d2	                           test rdx, rdx	      3642	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_5	IF_12
0x40014ae	     0xf84e2feffff	                            je 0x4001396	      3642	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_5	IF_12
0x40014b4	           0xfb602	                   movzx eax, byte [rdx]	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40014b7	          0x4d89eb	                            mov r11, r13	      3644	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_5	IF_12	CALL_17
0x40014ba	    0x4c031d000000	             add r11, qword [0x040014c1]	      3644	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_5	IF_12	CALL_17
0x40014c1	            0x84c0	                             test al, al	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40014c3	     0xf84a4020000	                            je 0x400176d	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40014c9	    0x41b800040000	                          mov r8d, 0x400	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40014cf	          0x4529f8	                           sub r8d, r15d	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40014d2	          0x4585c0	                           test r8d, r8d	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40014d5	     0xf8e92020000	                           jle 0x400176d	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40014db	          0x4c89df	                            mov rdi, r11	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40014de	            0x31f6	                            xor esi, esi	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40014e0	            0xeb23	                           jmp 0x4001505	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40014e2	    0x660f1f440000	                    nop word [rax + rax]	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40014e8	            0x8807	                      mov byte [rdi], al	      2874	quickfix.c	FUNCTION_39	FOR_1	ELSE_1
0x40014ea	         0xfb64201	               movzx eax, byte [rdx + 1]	      2874	quickfix.c	FUNCTION_39	FOR_1	ELSE_1
0x40014ee	          0x83c601	                              add esi, 1	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40014f1	        0x488d4a01	                      lea rcx, [rdx + 1]	      2874	quickfix.c	FUNCTION_39	FOR_1	ELSE_1
0x40014f5	            0x84c0	                             test al, al	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40014f7	            0x744a	                            je 0x4001543	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40014f9	        0x4883c701	                              add rdi, 1	      2864	quickfix.c	FUNCTION_39	FOR_1
0x40014fd	          0x4139f0	                            cmp r8d, esi	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001500	          0x4889ca	                            mov rdx, rcx	      2874	quickfix.c	FUNCTION_39	FOR_1	ELSE_1
0x4001503	            0x742e	                            je 0x4001533	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001505	            0x3c0a	                             cmp al, 0xa	      2866	quickfix.c	FUNCTION_39	FOR_1	IF_1
0x4001507	            0x75df	                           jne 0x40014e8	      2866	quickfix.c	FUNCTION_39	FOR_1	IF_1
0x4001509	          0xc60720	                    mov byte [rdi], 0x20	      2868	quickfix.c	FUNCTION_39	FOR_1	IF_1
0x400150c	         0xf1f4000	                         nop dword [rax]	      2868	quickfix.c	FUNCTION_39	FOR_1	IF_1
0x4001510	        0x4883c201	                              add rdx, 1	      2869	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1
0x4001514	           0xfb602	                   movzx eax, byte [rdx]	      2869	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1
0x4001517	            0x84c0	                             test al, al	      2869	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1
0x4001519	            0x7425	                            je 0x4001540	      2869	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1
0x400151b	          0x8d48f7	                      lea ecx, [rax - 9]	      2870	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x400151e	          0x80f901	                               cmp cl, 1	      2870	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4001521	            0x76ed	                           jbe 0x4001510	      2870	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4001523	            0x3c20	                            cmp al, 0x20	      2870	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4001525	            0x74e9	                            je 0x4001510	      2870	quickfix.c	FUNCTION_39	FOR_1	IF_1	WHILE_1	IF_2	CALL_1
0x4001527	          0x83c601	                              add esi, 1	      2864	quickfix.c	FUNCTION_39	FOR_1
0x400152a	        0x4883c701	                              add rdi, 1	      2864	quickfix.c	FUNCTION_39	FOR_1
0x400152e	          0x4139f0	                            cmp r8d, esi	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001531	            0x75d2	                           jne 0x4001505	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001533	          0x4963f0	                         movsxd rsi, r8d	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001536	            0xeb0e	                           jmp 0x4001546	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001538	     0xf1f84000000	                   nop dword [rax + rax]	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001540	          0x83c601	                              add esi, 1	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001543	          0x4863f6	                         movsxd rsi, esi	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001546	      0x41c6043300	                 mov byte [r11 + rsi], 0	      2876	quickfix.c	FUNCTION_39	ELSE_1
0x400154b	      0xe930feffff	                           jmp 0x4001380	      2876	quickfix.c	FUNCTION_39	ELSE_1
0x4001550	        0x418b7e18	            mov edi, dword [r14 + 0x18] 	      3603	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6
0x4001554	            0x85ff	                           test edi, edi	      3603	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6
0x4001556	     0xf8504010000	                           jne 0x4001660	      3603	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6
0x400155c	    0x4c8b25000000	            mov r12, qword [0x04001563] 	      3603	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6
0x4001563	    0x41bd01000000	                             mov r13d, 1	      3621	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	CALL_12
0x4001569	            0x31c0	                            xor eax, eax	      3621	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	CALL_12
0x400156b	    0x41bf01000000	                             mov r15d, 1	      3621	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	CALL_12
0x4001571	      0xe918fdffff	                           jmp 0x400128e	      3621	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	CALL_12
0x4001576	        0x498b7e38	            mov rdi, qword [r14 + 0x38] 	      3653	quickfix.c	FUNCTION_60	IF_3	WHILE_2	CALL_20
0x400157a	        0x894c2418	             mov dword [rsp + 0x18], ecx	      3653	quickfix.c	FUNCTION_60	IF_3	WHILE_2	CALL_20
0x400157e	      0xe800000000	                          call 0x4001583	      3653	quickfix.c	FUNCTION_60	IF_3	WHILE_2	CALL_20
0x4001583	           0xfb610	                   movzx edx, byte [rax]	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001586	        0x8b4c2418	            mov ecx, dword [rsp + 0x18] 	      3653	quickfix.c	FUNCTION_60	IF_3	WHILE_2	CALL_20
0x400158a	            0x84d2	                             test dl, dl	      2864	quickfix.c	FUNCTION_39	FOR_1
0x400158c	     0xf8542feffff	                           jne 0x40013d4	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001592	            0x31f6	                            xor esi, esi	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001594	      0xe9b5feffff	                           jmp 0x400144e	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001599	    0x41b800000000	                              mov r8d, 0	      3113	quickfix.c	FUNCTION_46	IF_1
0x400159f	          0x4585c9	                           test r9d, r9d	      3128	quickfix.c	FUNCTION_46	IF_5
0x40015a2	          0x4c89c6	                             mov rsi, r8	      3128	quickfix.c	FUNCTION_46	IF_5
0x40015a5	     0xf8fa2fdffff	                            jg 0x400134d	      3128	quickfix.c	FUNCTION_46	IF_5
0x40015ab	      0xe9c4fdffff	                           jmp 0x4001374	      3128	quickfix.c	FUNCTION_46	IF_5
0x40015b0	    0x41b800000000	                              mov r8d, 0	      3115	quickfix.c	FUNCTION_46	ELSE_1	IF_2
0x40015b6	            0xebe7	                           jmp 0x400159f	      3115	quickfix.c	FUNCTION_46	ELSE_1	IF_2
0x40015b8	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      3665	quickfix.c	FUNCTION_60	IF_3	IF_15
0x40015be	     0xf84c9010000	                            je 0x400178d	      3665	quickfix.c	FUNCTION_60	IF_3	IF_15
0x40015c4	      0xbf01000000	                              mov edi, 1	      3671	quickfix.c	FUNCTION_60	CALL_24
0x40015c9	      0xe800000000	                          call 0x40015ce	      3671	quickfix.c	FUNCTION_60	CALL_24
0x40015ce	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      3673	quickfix.c	FUNCTION_60	IF_16
0x40015d4	     0xf851dfcffff	                           jne 0x40011f7	      3673	quickfix.c	FUNCTION_60	IF_16
0x40015da	            0x31f6	                            xor esi, esi	      3679	quickfix.c	FUNCTION_60	IF_16	CALL_25
0x40015dc	      0xb904000000	                              mov ecx, 4	      3679	quickfix.c	FUNCTION_60	IF_16	CALL_25
0x40015e1	      0xba00000000	                              mov edx, 0	      3679	quickfix.c	FUNCTION_60	IF_16	CALL_25
0x40015e6	      0xbf00000000	                              mov edi, 0	      3679	quickfix.c	FUNCTION_60	IF_16	CALL_25
0x40015eb	    0x830500000000	               add dword [0x040015f2], 1	      3678	quickfix.c	FUNCTION_60	IF_16
0x40015f2	      0xe800000000	                          call 0x40015f7	      3679	quickfix.c	FUNCTION_60	IF_16	CALL_25
0x40015f7	    0x4c8b05000000	              mov r8, qword [0x040015fe]	      3680	quickfix.c	FUNCTION_60	IF_16
0x40015fe	            0x31c9	                            xor ecx, ecx	      3683	quickfix.c	FUNCTION_60	IF_16	CALL_26
0x4001600	            0x31d2	                            xor edx, edx	      3683	quickfix.c	FUNCTION_60	IF_16	CALL_26
0x4001602	      0xbe00000000	                              mov esi, 0	      3683	quickfix.c	FUNCTION_60	IF_16	CALL_26
0x4001607	      0xbf0a000000	                            mov edi, 0xa	      3683	quickfix.c	FUNCTION_60	IF_16	CALL_26
0x400160c	    0xc70500000000	               mov dword [0x04001616], 1	      3682	quickfix.c	FUNCTION_60	IF_16
0x4001616	    0x41c780401500	              mov dword [r8 + 0x1540], 0	      3680	quickfix.c	FUNCTION_60	IF_16
0x4001621	      0xe800000000	                          call 0x4001626	      3683	quickfix.c	FUNCTION_60	IF_16	CALL_26
0x4001626	    0x4c8b05000000	              mov r8, qword [0x0400162d]	      3685	quickfix.c	FUNCTION_60	IF_16	CALL_27
0x400162d	            0x31c9	                            xor ecx, ecx	      3685	quickfix.c	FUNCTION_60	IF_16	CALL_27
0x400162f	            0x31d2	                            xor edx, edx	      3685	quickfix.c	FUNCTION_60	IF_16	CALL_27
0x4001631	      0xbe00000000	                              mov esi, 0	      3685	quickfix.c	FUNCTION_60	IF_16	CALL_27
0x4001636	      0xbf0d000000	                            mov edi, 0xd	      3685	quickfix.c	FUNCTION_60	IF_16	CALL_27
0x400163b	      0xe800000000	                          call 0x4001640	      3685	quickfix.c	FUNCTION_60	IF_16	CALL_27
0x4001640	      0xbf28000000	                           mov edi, 0x28	      3691	quickfix.c	FUNCTION_60	IF_16	CALL_28
0x4001645	    0x832d00000000	               sub dword [0x0400164c], 1	      3688	quickfix.c	FUNCTION_60	IF_16
0x400164c	    0xc70500000000	               mov dword [0x04001656], 0	      3687	quickfix.c	FUNCTION_60	IF_16
0x4001656	      0xe800000000	                          call 0x400165b	      3691	quickfix.c	FUNCTION_60	IF_16	CALL_28
0x400165b	      0xe997fbffff	                           jmp 0x40011f7	      3691	quickfix.c	FUNCTION_60	IF_16	CALL_28
0x4001660	      0xe800000000	                          call 0x4001665	      3604	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	CALL_5
0x4001665	          0x4885c0	                           test rax, rax	      3604	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	CALL_5
0x4001668	          0x4989c7	                            mov r15, rax	      3604	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	CALL_5
0x400166b	     0xf84ebfeffff	                            je 0x400155c	      3604	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	CALL_5
0x4001671	    0x488bb8980000	            mov rdi, qword [rax + 0x98] 	      3605	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6
0x4001678	          0x4885ff	                           test rdi, rdi	      3605	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6
0x400167b	     0xf84dbfeffff	                            je 0x400155c	      3605	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6
0x4001681	      0x41807e4201	                cmp byte [r14 + 0x42], 1	      3607	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	IF_7
0x4001686	     0xf84e8000000	                            je 0x4001774	      3607	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	IF_7
0x400168c	    0x488bb8900000	            mov rdi, qword [rax + 0x90] 	      3612	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	ELSE_3	IF_8
0x4001693	          0x4885ff	                           test rdi, rdi	      3612	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	ELSE_3	IF_8
0x4001696	            0x7409	                            je 0x40016a1	      3612	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	ELSE_3	IF_8
0x4001698	      0xe800000000	                          call 0x400169d	      3613	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	ELSE_3	IF_8	CALL_8
0x400169d	            0x85c0	                           test eax, eax	      3613	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	ELSE_3	IF_8	CALL_8
0x400169f	            0x7416	                            je 0x40016b7	      3613	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	ELSE_3	IF_8	CALL_8
0x40016a1	      0x807c242000	                cmp byte [rsp + 0x20], 0	      3615	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	ELSE_3	IF_8	IF_9
0x40016a6	            0x7454	                            je 0x40016fc	      3615	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	ELSE_3	IF_8	IF_9
0x40016a8	      0x488d742420	                   lea rsi, [rsp + 0x20]	      3617	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	ELSE_3	IF_8	CALL_10
0x40016ad	            0x31d2	                            xor edx, edx	      3617	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	ELSE_3	IF_8	CALL_10
0x40016af	          0x4c89ff	                            mov rdi, r15	      3617	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	ELSE_3	IF_8	CALL_10
0x40016b2	      0xe800000000	                          call 0x40016b7	      3617	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	ELSE_3	IF_8	CALL_10
0x40016b7	    0x498bb7980000	            mov rsi, qword [r15 + 0x98] 	       110	string3.h	FUNCTION_121	CALL_3
0x40016be	      0xe9a7fbffff	                           jmp 0x400126a	       110	string3.h	FUNCTION_121	CALL_3
0x40016c3	    0x41b800000000	                              mov r8d, 0	      3117	quickfix.c	FUNCTION_46	ELSE_2	IF_3
0x40016c9	      0xe9d1feffff	                           jmp 0x400159f	      3117	quickfix.c	FUNCTION_46	ELSE_2	IF_3
0x40016ce	          0x80f901	                               cmp cl, 1	      3118	quickfix.c	FUNCTION_46	ELSE_3	IF_4
0x40016d1	    0x41b800000000	                              mov r8d, 0	      3119	quickfix.c	FUNCTION_46	ELSE_3	IF_4
0x40016d7	     0xf86c2feffff	                           jbe 0x400159f	      3118	quickfix.c	FUNCTION_46	ELSE_3	IF_4
0x40016dd	    0xc60500000000	            mov byte [0x040016e4], 0x20 	      3122	quickfix.c	FUNCTION_46	ELSE_4
0x40016e4	    0x880d00000000	               mov byte [0x040016ea], cl	      3123	quickfix.c	FUNCTION_46	ELSE_4
0x40016ea	    0x41b800000000	                              mov r8d, 0	      3125	quickfix.c	FUNCTION_46	ELSE_4
0x40016f0	    0xc60500000000	                mov byte [0x040016f7], 0	      3124	quickfix.c	FUNCTION_46	ELSE_4
0x40016f7	      0xe9a3feffff	                           jmp 0x400159f	      3124	quickfix.c	FUNCTION_46	ELSE_4
0x40016fc	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      3616	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	ELSE_3	IF_8	CALL_9
0x4001701	      0xbe00100000	                         mov esi, 0x1000	      3616	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	ELSE_3	IF_8	CALL_9
0x4001706	      0xe800000000	                          call 0x400170b	      3616	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	ELSE_3	IF_8	CALL_9
0x400170b	            0xeb9b	                           jmp 0x40016a8	      3616	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	ELSE_3	IF_8	CALL_9
0x400170d	    0x483935000000	            cmp qword [0x04001714], rsi 	      3567	quickfix.c	FUNCTION_60	IF_1	IF_2
0x4001714	          0x4889f0	                            mov rax, rsi	      3567	quickfix.c	FUNCTION_60	IF_1	IF_2
0x4001717	            0x7422	                            je 0x400173b	      3567	quickfix.c	FUNCTION_60	IF_1	IF_2
0x4001719	      0xbf00000000	                              mov edi, 0	      3569	quickfix.c	FUNCTION_60	IF_1	IF_2	CALL_1
0x400171e	      0xe800000000	                          call 0x4001723	      3569	quickfix.c	FUNCTION_60	IF_1	IF_2	CALL_1
0x4001723	      0xe9d9faffff	                           jmp 0x4001201	      3570	quickfix.c	FUNCTION_60	IF_1	IF_2
0x4001728	            0x31f6	                            xor esi, esi	      3575	quickfix.c	FUNCTION_60	IF_1	CALL_2
0x400172a	      0xbf01000000	                              mov edi, 1	      3575	quickfix.c	FUNCTION_60	IF_1	CALL_2
0x400172f	      0xe800000000	                          call 0x4001734	      3575	quickfix.c	FUNCTION_60	IF_1	CALL_2
0x4001734	    0x488b05000000	            mov rax, qword [0x0400173b] 	      3574	quickfix.c	FUNCTION_60	IF_1	WHILE_1
0x400173b	        0xf6401001	               test byte [rax + 0x10], 1	      3574	quickfix.c	FUNCTION_60	IF_1	WHILE_1
0x400173f	            0x74e7	                            je 0x4001728	      3574	quickfix.c	FUNCTION_60	IF_1	WHILE_1
0x4001741	        0x48634508	            movsxd rax, dword [rbp + 8] 	      3579	quickfix.c	FUNCTION_60	IF_3
0x4001745	          0x394504	                cmp dword [rbp + 4], eax	      3579	quickfix.c	FUNCTION_60	IF_3
0x4001748	            0x7e53	                           jle 0x400179d	      3579	quickfix.c	FUNCTION_60	IF_3
0x400174a	    0x488d0cc50000	                        lea rcx, [rax*8]	      3588	quickfix.c	FUNCTION_60	IF_3	IF_4
0x4001752	          0x4889c2	                            mov rdx, rax	      3588	quickfix.c	FUNCTION_60	IF_3	IF_4
0x4001755	      0xc644242000	                mov byte [rsp + 0x20], 0	      3583	quickfix.c	FUNCTION_60	IF_3
0x400175a	        0x48c1e207	                              shl rdx, 7	      3588	quickfix.c	FUNCTION_60	IF_3	IF_4
0x400175e	            0x31db	                            xor ebx, ebx	      3589	quickfix.c	FUNCTION_60	IF_3	IF_4
0x4001760	          0x4829ca	                            sub rdx, rcx	      3588	quickfix.c	FUNCTION_60	IF_3	IF_4
0x4001763	      0x4c8b741518	      mov r14, qword [rbp + rdx + 0x18] 	      3588	quickfix.c	FUNCTION_60	IF_3	IF_4
0x4001768	      0xe9d3faffff	                           jmp 0x4001240	      3588	quickfix.c	FUNCTION_60	IF_3	IF_4
0x400176d	            0x31f6	                            xor esi, esi	      2864	quickfix.c	FUNCTION_39	FOR_1
0x400176f	      0xe9d2fdffff	                           jmp 0x4001546	      2864	quickfix.c	FUNCTION_39	FOR_1
0x4001774	      0xe800000000	                          call 0x4001779	      3608	quickfix.c	FUNCTION_60	IF_3	WHILE_2	ELSE_2	IF_6	CALL_7
0x4001779	    0x488b3d000000	            mov rdi, qword [0x04001780] 	       110	string3.h	FUNCTION_121	CALL_3
0x4001780	          0x4889c6	                            mov rsi, rax	       110	string3.h	FUNCTION_121	CALL_3
0x4001783	      0xe800000000	                          call 0x4001788	       110	string3.h	FUNCTION_121	CALL_3
0x4001788	      0xe9e9faffff	                           jmp 0x4001276	       110	string3.h	FUNCTION_121	CALL_3
0x400178d	        0x488d7b01	                      lea rdi, [rbx + 1]	      3667	quickfix.c	FUNCTION_60	IF_3	CALL_23
0x4001791	            0x31f6	                            xor esi, esi	      3667	quickfix.c	FUNCTION_60	IF_3	CALL_23
0x4001793	      0xe800000000	                          call 0x4001798	      3667	quickfix.c	FUNCTION_60	IF_3	CALL_23
0x4001798	      0xe927feffff	                           jmp 0x40015c4	      3667	quickfix.c	FUNCTION_60	IF_3	CALL_23
0x400179d	      0xbf01000000	                              mov edi, 1	      3671	quickfix.c	FUNCTION_60	CALL_24
0x40017a2	      0xe800000000	                          call 0x40017a7	      3671	quickfix.c	FUNCTION_60	CALL_24
0x40017a7	      0xe92efeffff	                           jmp 0x40015da	      3671	quickfix.c	FUNCTION_60	CALL_24
0x40017ac	      0xe800000000	                          call 0x40017b1	      3696	quickfix.c	FUNCTION_60
qf_win_pos_update	functions,0:WHILE,0:DO,0:CALL,2:SWITCH,0:IF,2:ELSE,1:FOR,0	87
0x4001050	            0x4155	                                push r13	      3399	quickfix.c	FUNCTION_53
0x4001052	            0x4154	                                push r12	      3399	quickfix.c	FUNCTION_53
0x4001054	              0x55	                                push rbp	      3399	quickfix.c	FUNCTION_53
0x4001055	              0x53	                                push rbx	      3399	quickfix.c	FUNCTION_53
0x4001056	        0x4883ec08	                              sub rsp, 8	      3399	quickfix.c	FUNCTION_53
0x400105a	        0x48634708	            movsxd rax, dword [rdi + 8] 	      3401	quickfix.c	FUNCTION_53
0x400105e	    0x488b1d000000	            mov rbx, qword [0x04001065] 	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4001065	    0x488d14c50000	                        lea rdx, [rax*8]	      3401	quickfix.c	FUNCTION_53
0x400106d	        0x48c1e007	                              shl rax, 7	      3401	quickfix.c	FUNCTION_53
0x4001071	          0x4829d0	                            sub rax, rdx	      3401	quickfix.c	FUNCTION_53
0x4001074	          0x4885db	                           test rbx, rbx	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4001077	      0x448b6c0734	     mov r13d, dword [rdi + rax + 0x34] 	      3401	quickfix.c	FUNCTION_53
0x400107c	            0x7431	                            je 0x40010af	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400107e	    0x4881ff000000	                              cmp rdi, 0	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4001085	          0x4c63e6	                         movsxd r12, esi	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4001088	          0x4889fd	                            mov rbp, rdi	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400108b	            0x743c	                            je 0x40010c9	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400108d	           0xf1f00	                         nop dword [rax]	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4001090	        0x488b7b08	                mov rdi, qword [rbx + 8]	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x4001094	      0xe800000000	                          call 0x4001099	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x4001099	            0x85c0	                           test eax, eax	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400109b	            0x7409	                            je 0x40010a6	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400109d	    0x483bab501900	          cmp rbp, qword [rbx + 0x1950] 	      3442	quickfix.c	FUNCTION_54	IF_1	IF_2
0x40010a4	            0x743a	                            je 0x40010e0	      3442	quickfix.c	FUNCTION_54	IF_1	IF_2
0x40010a6	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      3457	quickfix.c	FUNCTION_55	CALL_1
0x40010aa	          0x4885db	                           test rbx, rbx	      3457	quickfix.c	FUNCTION_55	CALL_1
0x40010ad	            0x75e1	                           jne 0x4001090	      3457	quickfix.c	FUNCTION_55	CALL_1
0x40010af	        0x4883c408	                              add rsp, 8	      3425	quickfix.c	FUNCTION_53
0x40010b3	            0x31c0	                            xor eax, eax	      3420	quickfix.c	FUNCTION_53	IF_1	ELSE_1
0x40010b5	              0x5b	                                 pop rbx	      3425	quickfix.c	FUNCTION_53
0x40010b6	              0x5d	                                 pop rbp	      3425	quickfix.c	FUNCTION_53
0x40010b7	            0x415c	                                 pop r12	      3425	quickfix.c	FUNCTION_53
0x40010b9	            0x415d	                                 pop r13	      3425	quickfix.c	FUNCTION_53
0x40010bb	              0xc3	                                     ret	      3425	quickfix.c	FUNCTION_53
0x40010bc	         0xf1f4000	                         nop dword [rax]	      3425	quickfix.c	FUNCTION_53
0x40010c0	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      3457	quickfix.c	FUNCTION_55	CALL_1
0x40010c4	          0x4885db	                           test rbx, rbx	      3457	quickfix.c	FUNCTION_55	CALL_1
0x40010c7	            0x74e6	                            je 0x40010af	      3457	quickfix.c	FUNCTION_55	CALL_1
0x40010c9	        0x488b7b08	                mov rdi, qword [rbx + 8]	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x40010cd	      0xe800000000	                          call 0x40010d2	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x40010d2	            0x85c0	                           test eax, eax	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x40010d4	            0x74ea	                            je 0x40010c0	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x40010d6	    0x4883bb501900	             cmp qword [rbx + 0x1950], 0	      3441	quickfix.c	FUNCTION_54	IF_1	IF_2
0x40010de	            0x75e0	                           jne 0x40010c0	      3441	quickfix.c	FUNCTION_54	IF_1	IF_2
0x40010e0	        0x488b4b08	                mov rcx, qword [rbx + 8]	      3409	quickfix.c	FUNCTION_53	IF_1
0x40010e4	          0x4963d5	                        movsxd rdx, r13d	      3409	quickfix.c	FUNCTION_53	IF_1
0x40010e7	          0x483b11	                    cmp rdx, qword [rcx]	      3410	quickfix.c	FUNCTION_53	IF_1
0x40010ea	     0xf8f98000000	                            jg 0x4001188	      3410	quickfix.c	FUNCTION_53	IF_1
0x40010f0	          0x4539e5	                          cmp r13d, r12d	      3410	quickfix.c	FUNCTION_53	IF_1
0x40010f3	     0xf848f000000	                            je 0x4001188	      3410	quickfix.c	FUNCTION_53	IF_1
0x40010f9	          0x4539e5	                          cmp r13d, r12d	      3412	quickfix.c	FUNCTION_53	IF_1	IF_2
0x40010fc	          0x4889d0	                            mov rax, rdx	      3412	quickfix.c	FUNCTION_53	IF_1	IF_2
0x40010ff	            0x7f06	                            jg 0x4001107	      3412	quickfix.c	FUNCTION_53	IF_1	IF_2
0x4001101	          0x4963c4	                        movsxd rax, r12d	      3420	quickfix.c	FUNCTION_53	IF_1	ELSE_1
0x4001104	          0x4989d4	                            mov r12, rdx	      3420	quickfix.c	FUNCTION_53	IF_1	ELSE_1
0x4001107	    0x488983380100	            mov qword [rbx + 0x138], rax	      3420	quickfix.c	FUNCTION_53	IF_1	ELSE_1
0x400110e	    0x4c89a3300100	            mov qword [rbx + 0x130], r12	      3420	quickfix.c	FUNCTION_53	IF_1	ELSE_1
0x4001115	        0x48895338	             mov qword [rbx + 0x38], rdx	      3338	quickfix.c	FUNCTION_50
0x4001119	    0xc74340000000	               mov dword [rbx + 0x40], 0	      3339	quickfix.c	FUNCTION_50
0x4001120	    0xc74344000000	               mov dword [rbx + 0x44], 0	      3341	quickfix.c	FUNCTION_50
0x4001127	    0xc74348000000	               mov dword [rbx + 0x48], 0	      3343	quickfix.c	FUNCTION_50
0x400112e	    0x488b2d000000	            mov rbp, qword [0x04001135] 	      3334	quickfix.c	FUNCTION_50
0x4001135	    0x48890d000000	            mov qword [0x0400113c], rcx 	      3337	quickfix.c	FUNCTION_50
0x400113c	    0x48891d000000	            mov qword [0x04001143], rbx 	      3336	quickfix.c	FUNCTION_50
0x4001143	      0xe800000000	                          call 0x4001148	      3344	quickfix.c	FUNCTION_50	CALL_1
0x4001148	      0xbf0a000000	                            mov edi, 0xa	      3345	quickfix.c	FUNCTION_50	CALL_2
0x400114d	      0xe800000000	                          call 0x4001152	      3345	quickfix.c	FUNCTION_50	CALL_2
0x4001152	    0x488b05000000	            mov rax, qword [0x04001159] 	      3346	quickfix.c	FUNCTION_50
0x4001159	    0x48892d000000	            mov qword [0x04001160], rbp 	      3347	quickfix.c	FUNCTION_50
0x4001160	    0xc78040010000	              mov dword [rax + 0x140], 1	      3346	quickfix.c	FUNCTION_50
0x400116a	        0x488b4508	                mov rax, qword [rbp + 8]	      3348	quickfix.c	FUNCTION_50
0x400116e	    0x488905000000	            mov qword [0x04001175], rax 	      3348	quickfix.c	FUNCTION_50
0x4001175	        0x4883c408	                              add rsp, 8	      3425	quickfix.c	FUNCTION_53
0x4001179	      0xb801000000	                              mov eax, 1	      3348	quickfix.c	FUNCTION_50
0x400117e	              0x5b	                                 pop rbx	      3425	quickfix.c	FUNCTION_53
0x400117f	              0x5d	                                 pop rbp	      3425	quickfix.c	FUNCTION_53
0x4001180	            0x415c	                                 pop r12	      3425	quickfix.c	FUNCTION_53
0x4001182	            0x415d	                                 pop r13	      3425	quickfix.c	FUNCTION_53
0x4001184	              0xc3	                                     ret	      3425	quickfix.c	FUNCTION_53
0x4001185	           0xf1f00	                         nop dword [rax]	      3425	quickfix.c	FUNCTION_53
0x4001188	        0x4883c408	                              add rsp, 8	      3425	quickfix.c	FUNCTION_53
0x400118c	      0xb801000000	                              mov eax, 1	      3425	quickfix.c	FUNCTION_53
0x4001191	              0x5b	                                 pop rbx	      3425	quickfix.c	FUNCTION_53
0x4001192	              0x5d	                                 pop rbp	      3425	quickfix.c	FUNCTION_53
0x4001193	            0x415c	                                 pop r12	      3425	quickfix.c	FUNCTION_53
0x4001195	            0x415d	                                 pop r13	      3425	quickfix.c	FUNCTION_53
0x4001197	              0xc3	                                     ret	      3425	quickfix.c	FUNCTION_53
qf_jump_to_usable_window	functions,1:WHILE,0:DO,1:CALL,9:SWITCH,0:IF,22:ELSE,6:FOR,1	219
0x40002e0	            0x4155	                                push r13	      2201	quickfix.c	FUNCTION_33
0x40002e2	            0x4154	                                push r12	      2201	quickfix.c	FUNCTION_33
0x40002e4	          0x4189fd	                           mov r13d, edi	      2201	quickfix.c	FUNCTION_33
0x40002e7	              0x55	                                push rbp	      2201	quickfix.c	FUNCTION_33
0x40002e8	              0x53	                                push rbx	      2201	quickfix.c	FUNCTION_33
0x40002e9	          0x4989f4	                            mov r12, rsi	      2201	quickfix.c	FUNCTION_33
0x40002ec	        0x4883ec08	                              sub rsp, 8	      2201	quickfix.c	FUNCTION_33
0x40002f0	    0x488b05000000	            mov rax, qword [0x040002f7] 	      2211	quickfix.c	FUNCTION_33
0x40002f7	    0x488ba8501900	          mov rbp, qword [rax + 0x1950] 	      2211	quickfix.c	FUNCTION_33
0x40002fe	          0x4885ed	                           test rbp, rbp	      2212	quickfix.c	FUNCTION_33	IF_1
0x4000301	            0x7445	                            je 0x4000348	      2212	quickfix.c	FUNCTION_33	IF_1
0x4000303	    0x488b1d000000	            mov rbx, qword [0x0400030a] 	      2216	quickfix.c	FUNCTION_33	IF_1	CALL_1
0x400030a	          0x4885db	                           test rbx, rbx	      2216	quickfix.c	FUNCTION_33	IF_1	CALL_1
0x400030d	            0x7512	                           jne 0x4000321	      2216	quickfix.c	FUNCTION_33	IF_1	CALL_1
0x400030f	      0xe961030000	                           jmp 0x4000675	      2216	quickfix.c	FUNCTION_33	IF_1	CALL_1
0x4000314	         0xf1f4000	                         nop dword [rax]	      2216	quickfix.c	FUNCTION_33	IF_1	CALL_1
0x4000318	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      2216	quickfix.c	FUNCTION_33	IF_1	CALL_1
0x400031c	          0x4885db	                           test rbx, rbx	      2216	quickfix.c	FUNCTION_33	IF_1	CALL_1
0x400031f	            0x7427	                            je 0x4000348	      2216	quickfix.c	FUNCTION_33	IF_1	CALL_1
0x4000321	    0x483bab481900	          cmp rbp, qword [rbx + 0x1948] 	      2217	quickfix.c	FUNCTION_33	IF_1	IF_2
0x4000328	            0x75ee	                           jne 0x4000318	      2217	quickfix.c	FUNCTION_33	IF_1	IF_2
0x400032a	        0x488b7b08	                mov rdi, qword [rbx + 8]	      2218	quickfix.c	FUNCTION_33	IF_1	IF_2	CALL_2
0x400032e	      0xe800000000	                          call 0x4000333	      2218	quickfix.c	FUNCTION_33	IF_1	IF_2	CALL_2
0x4000333	            0x85c0	                           test eax, eax	      2218	quickfix.c	FUNCTION_33	IF_1	IF_2	CALL_2
0x4000335	            0x75e1	                           jne 0x4000318	      2218	quickfix.c	FUNCTION_33	IF_1	IF_2	CALL_2
0x4000337	    0x488b0d000000	            mov rcx, qword [0x0400033e] 	      2218	quickfix.c	FUNCTION_33	IF_1	IF_2	CALL_2
0x400033e	      0xe93f010000	                           jmp 0x4000482	      2218	quickfix.c	FUNCTION_33	IF_1	IF_2	CALL_2
0x4000343	       0xf1f440000	                   nop dword [rax + rax]	      2218	quickfix.c	FUNCTION_33	IF_1	IF_2	CALL_2
0x4000348	    0x488b0d000000	            mov rcx, qword [0x0400034f] 	      2228	quickfix.c	FUNCTION_33	IF_3	CALL_3
0x400034f	          0x4885c9	                           test rcx, rcx	      2228	quickfix.c	FUNCTION_33	IF_3	CALL_3
0x4000352	            0x7439	                            je 0x400038d	      2228	quickfix.c	FUNCTION_33	IF_3	CALL_3
0x4000354	        0x488b4108	                mov rax, qword [rcx + 8]	      2229	quickfix.c	FUNCTION_33	IF_3	IF_4
0x4000358	    0x488b80181400	          mov rax, qword [rax + 0x1418] 	      2229	quickfix.c	FUNCTION_33	IF_3	IF_4
0x400035f	          0x803800	                       cmp byte [rax], 0	      2229	quickfix.c	FUNCTION_33	IF_3	IF_4
0x4000362	     0xf8418010000	                            je 0x4000480	      2229	quickfix.c	FUNCTION_33	IF_3	IF_4
0x4000368	          0x4889c8	                            mov rax, rcx	      2229	quickfix.c	FUNCTION_33	IF_3	IF_4
0x400036b	            0xeb17	                           jmp 0x4000384	      2229	quickfix.c	FUNCTION_33	IF_3	IF_4
0x400036d	           0xf1f00	                         nop dword [rax]	      2229	quickfix.c	FUNCTION_33	IF_3	IF_4
0x4000370	        0x488b5008	                mov rdx, qword [rax + 8]	      2229	quickfix.c	FUNCTION_33	IF_3	IF_4
0x4000374	    0x488b92181400	          mov rdx, qword [rdx + 0x1418] 	      2229	quickfix.c	FUNCTION_33	IF_3	IF_4
0x400037b	          0x803a00	                       cmp byte [rdx], 0	      2229	quickfix.c	FUNCTION_33	IF_3	IF_4
0x400037e	     0xf84fc000000	                            je 0x4000480	      2229	quickfix.c	FUNCTION_33	IF_3	IF_4
0x4000384	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2228	quickfix.c	FUNCTION_33	IF_3	CALL_3
0x4000388	          0x4885c0	                           test rax, rax	      2228	quickfix.c	FUNCTION_33	IF_3	CALL_3
0x400038b	            0x75e3	                           jne 0x4000370	      2228	quickfix.c	FUNCTION_33	IF_3	CALL_3
0x400038d	    0xf60500000000	               test byte [0x04000394], 2	      2240	quickfix.c	FUNCTION_33	IF_5
0x4000394	            0x7462	                            je 0x40003f8	      2240	quickfix.c	FUNCTION_33	IF_5
0x4000396	    0x488b3d000000	            mov rdi, qword [0x0400039d] 	      2245	quickfix.c	FUNCTION_33	IF_5
0x400039d	          0x4885ff	                           test rdi, rdi	      2245	quickfix.c	FUNCTION_33	IF_5
0x40003a0	            0x7456	                            je 0x40003f8	      2245	quickfix.c	FUNCTION_33	IF_5
0x40003a2	    0x488b15000000	            mov rdx, qword [0x040003a9] 	      2245	quickfix.c	FUNCTION_33	IF_5
0x40003a9	          0x4839d7	                            cmp rdi, rdx	      2245	quickfix.c	FUNCTION_33	IF_5
0x40003ac	     0xf8404020000	                            je 0x40005b6	      2245	quickfix.c	FUNCTION_33	IF_5
0x40003b2	        0x488b7720	            mov rsi, qword [rdi + 0x20] 	      2245	quickfix.c	FUNCTION_33	IF_5
0x40003b6	          0x4885f6	                           test rsi, rsi	      2245	quickfix.c	FUNCTION_33	IF_5
0x40003b9	            0x742f	                            je 0x40003ea	      2245	quickfix.c	FUNCTION_33	IF_5
0x40003bb	        0x488b4608	                mov rax, qword [rsi + 8]	      2247	quickfix.c	FUNCTION_33	IF_5	FUNCTION_1	IF_1
0x40003bf	    0x443ba8b80000	           cmp r13d, dword [rax + 0xb8] 	      2247	quickfix.c	FUNCTION_33	IF_5	FUNCTION_1	IF_1
0x40003c6	            0x7519	                           jne 0x40003e1	      2247	quickfix.c	FUNCTION_33	IF_5	FUNCTION_1	IF_1
0x40003c8	      0xe903010000	                           jmp 0x40004d0	      2247	quickfix.c	FUNCTION_33	IF_5	FUNCTION_1	IF_1
0x40003cd	           0xf1f00	                         nop dword [rax]	      2247	quickfix.c	FUNCTION_33	IF_5	FUNCTION_1	IF_1
0x40003d0	        0x488b4608	                mov rax, qword [rsi + 8]	      2247	quickfix.c	FUNCTION_33	IF_5	FUNCTION_1	IF_1
0x40003d4	    0x4439a8b80000	           cmp dword [rax + 0xb8], r13d 	      2247	quickfix.c	FUNCTION_33	IF_5	FUNCTION_1	IF_1
0x40003db	     0xf84ef000000	                            je 0x40004d0	      2247	quickfix.c	FUNCTION_33	IF_5	FUNCTION_1	IF_1
0x40003e1	        0x488b7620	            mov rsi, qword [rsi + 0x20] 	      2245	quickfix.c	FUNCTION_33	IF_5
0x40003e5	          0x4885f6	                           test rsi, rsi	      2245	quickfix.c	FUNCTION_33	IF_5
0x40003e8	            0x75e6	                           jne 0x40003d0	      2245	quickfix.c	FUNCTION_33	IF_5
0x40003ea	          0x488b3f	                    mov rdi, qword [rdi]	      2245	quickfix.c	FUNCTION_33	IF_5
0x40003ed	          0x4885ff	                           test rdi, rdi	      2245	quickfix.c	FUNCTION_33	IF_5
0x40003f0	            0x75b7	                           jne 0x40003a9	      2245	quickfix.c	FUNCTION_33	IF_5
0x40003f2	    0x660f1f440000	                    nop word [rax + rax]	      2245	quickfix.c	FUNCTION_33	IF_5
0x40003f8	    0x483b0d000000	            cmp rcx, qword [0x040003ff] 	      2261	quickfix.c	FUNCTION_33	IF_6	CALL_4
0x40003ff	     0xf8477020000	                            je 0x400067c	      2261	quickfix.c	FUNCTION_33	IF_6	CALL_4
0x4000405	          0x4885ed	                           test rbp, rbp	      2264	quickfix.c	FUNCTION_33	IF_6	IF_7
0x4000408	     0xf84f2000000	                            je 0x4000500	      2264	quickfix.c	FUNCTION_33	IF_6	IF_7
0x400040e	            0x31ff	                            xor edi, edi	      2266	quickfix.c	FUNCTION_33	IF_6	IF_8	CALL_5
0x4000410	      0xbec0000000	                           mov esi, 0xc0	      2266	quickfix.c	FUNCTION_33	IF_6	IF_8	CALL_5
0x4000415	      0xe800000000	                          call 0x400041a	      2266	quickfix.c	FUNCTION_33	IF_6	IF_8	CALL_5
0x400041a	            0x85c0	                           test eax, eax	      2266	quickfix.c	FUNCTION_33	IF_6	IF_8	CALL_5
0x400041c	     0xf84f2000000	                            je 0x4000514	      2266	quickfix.c	FUNCTION_33	IF_6	IF_8	CALL_5
0x4000422	    0x488b05000000	            mov rax, qword [0x04000429] 	      2269	quickfix.c	FUNCTION_33	IF_6
0x4000429	    0x41c704240100	                      mov dword [r12], 1	      2268	quickfix.c	FUNCTION_33	IF_6
0x4000431	    0xc70500000000	               mov dword [0x0400043b], 0	      2270	quickfix.c	FUNCTION_33	IF_6
0x400043b	    0x488905000000	            mov qword [0x04000442], rax 	      2269	quickfix.c	FUNCTION_33	IF_6
0x4000442	    0x488b05000000	            mov rax, qword [0x04000449] 	      2271	quickfix.c	FUNCTION_33	IF_6	CALL_6
0x4000449	    0xc78088020000	              mov dword [rax + 0x288], 0	      2271	quickfix.c	FUNCTION_33	IF_6	CALL_6
0x4000453	    0xc780b0020000	              mov dword [rax + 0x2b0], 0	      2271	quickfix.c	FUNCTION_33	IF_6	CALL_6
0x400045d	    0x4889a8481900	          mov qword [rax + 0x1948], rbp 	      2276	quickfix.c	FUNCTION_33	IF_6	IF_9
0x4000464	        0x83450001	                      add dword [rbp], 1	      2277	quickfix.c	FUNCTION_33	IF_6	IF_9
0x4000468	      0xb801000000	                              mov eax, 1	      2358	quickfix.c	FUNCTION_33
0x400046d	        0x4883c408	                              add rsp, 8	      2359	quickfix.c	FUNCTION_33
0x4000471	              0x5b	                                 pop rbx	      2359	quickfix.c	FUNCTION_33
0x4000472	              0x5d	                                 pop rbp	      2359	quickfix.c	FUNCTION_33
0x4000473	            0x415c	                                 pop r12	      2359	quickfix.c	FUNCTION_33
0x4000475	            0x415d	                                 pop r13	      2359	quickfix.c	FUNCTION_33
0x4000477	              0xc3	                                     ret	      2359	quickfix.c	FUNCTION_33
0x4000478	     0xf1f84000000	                   nop dword [rax + rax]	      2359	quickfix.c	FUNCTION_33
0x4000480	            0x31db	                            xor ebx, ebx	      2229	quickfix.c	FUNCTION_33	IF_3	IF_4
0x4000482	    0x48390d000000	            cmp qword [0x04000489], rcx 	      2261	quickfix.c	FUNCTION_33	IF_6	CALL_4
0x4000489	            0x745c	                            je 0x40004e7	      2261	quickfix.c	FUNCTION_33	IF_6	CALL_4
0x400048b	    0x4c8b25000000	            mov r12, qword [0x04000492] 	      2282	quickfix.c	FUNCTION_33	ELSE_1	IF_10
0x4000492	    0x4983bc245019	             cmp qword [r12 + 0x1950], 0	      2282	quickfix.c	FUNCTION_33	ELSE_1	IF_10
0x400049b	     0xf8480000000	                            je 0x4000521	      2282	quickfix.c	FUNCTION_33	ELSE_1	IF_10
0x40004a1	          0x4885db	                           test rbx, rbx	      2286	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11
0x40004a4	     0xf8414010000	                            je 0x40005be	      2286	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11
0x40004aa	          0x4889df	                            mov rdi, rbx	      2307	quickfix.c	FUNCTION_33	ELSE_1	IF_10	CALL_8
0x40004ad	      0xe800000000	                          call 0x40004b2	      2307	quickfix.c	FUNCTION_33	ELSE_1	IF_10	CALL_8
0x40004b2	    0x4883bb481900	             cmp qword [rbx + 0x1948], 0	      2311	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_16
0x40004ba	     0xf8460010000	                            je 0x4000620	      2311	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_16
0x40004c0	        0x4883c408	                              add rsp, 8	      2359	quickfix.c	FUNCTION_33
0x40004c4	      0xb801000000	                              mov eax, 1	      2358	quickfix.c	FUNCTION_33
0x40004c9	              0x5b	                                 pop rbx	      2359	quickfix.c	FUNCTION_33
0x40004ca	              0x5d	                                 pop rbp	      2359	quickfix.c	FUNCTION_33
0x40004cb	            0x415c	                                 pop r12	      2359	quickfix.c	FUNCTION_33
0x40004cd	            0x415d	                                 pop r13	      2359	quickfix.c	FUNCTION_33
0x40004cf	              0xc3	                                     ret	      2359	quickfix.c	FUNCTION_33
0x40004d0	      0xe800000000	                          call 0x40004d5	      2249	quickfix.c	FUNCTION_33	IF_5	FUNCTION_1	IF_1	CALL_1
0x40004d5	            0x31db	                            xor ebx, ebx	      2251	quickfix.c	FUNCTION_33	IF_5	FUNCTION_1	IF_1
0x40004d7	    0x488b0d000000	            mov rcx, qword [0x040004de] 	      2251	quickfix.c	FUNCTION_33	IF_5	FUNCTION_1	IF_1
0x40004de	    0x48390d000000	            cmp qword [0x040004e5], rcx 	      2261	quickfix.c	FUNCTION_33	IF_6	CALL_4
0x40004e5	            0x75a4	                           jne 0x400048b	      2261	quickfix.c	FUNCTION_33	IF_6	CALL_4
0x40004e7	    0x488b3d000000	            mov rdi, qword [0x040004ee] 	      2261	quickfix.c	FUNCTION_33	IF_6	CALL_4
0x40004ee	      0xe800000000	                          call 0x40004f3	      2261	quickfix.c	FUNCTION_33	IF_6	CALL_4
0x40004f3	            0x85c0	                           test eax, eax	      2261	quickfix.c	FUNCTION_33	IF_6	CALL_4
0x40004f5	     0xf850affffff	                           jne 0x4000405	      2261	quickfix.c	FUNCTION_33	IF_6	CALL_4
0x40004fb	            0xeb8e	                           jmp 0x400048b	      2261	quickfix.c	FUNCTION_33	IF_6	CALL_4
0x40004fd	           0xf1f00	                         nop dword [rax]	      2261	quickfix.c	FUNCTION_33	IF_6	CALL_4
0x4000500	            0x31ff	                            xor edi, edi	      2266	quickfix.c	FUNCTION_33	IF_6	IF_8	CALL_5
0x4000502	      0xbe40000000	                           mov esi, 0x40	      2266	quickfix.c	FUNCTION_33	IF_6	IF_8	CALL_5
0x4000507	      0xe800000000	                          call 0x400050c	      2266	quickfix.c	FUNCTION_33	IF_6	IF_8	CALL_5
0x400050c	            0x85c0	                           test eax, eax	      2266	quickfix.c	FUNCTION_33	IF_6	IF_8	CALL_5
0x400050e	     0xf8521010000	                           jne 0x4000635	      2266	quickfix.c	FUNCTION_33	IF_6	IF_8	CALL_5
0x4000514	        0x4883c408	                              add rsp, 8	      2359	quickfix.c	FUNCTION_33
0x4000518	            0x31c0	                            xor eax, eax	      2267	quickfix.c	FUNCTION_33	IF_6	IF_8
0x400051a	              0x5b	                                 pop rbx	      2359	quickfix.c	FUNCTION_33
0x400051b	              0x5d	                                 pop rbp	      2359	quickfix.c	FUNCTION_33
0x400051c	            0x415c	                                 pop r12	      2359	quickfix.c	FUNCTION_33
0x400051e	            0x415d	                                 pop r13	      2359	quickfix.c	FUNCTION_33
0x4000520	              0xc3	                                     ret	      2359	quickfix.c	FUNCTION_33
0x4000521	      0x498b442408	                mov rax, qword [r12 + 8]	      2359	quickfix.c	FUNCTION_33
0x4000526	            0x31db	                            xor ebx, ebx	      2282	quickfix.c	FUNCTION_33	ELSE_1	IF_10
0x4000528	            0xeb0b	                           jmp 0x4000535	      2282	quickfix.c	FUNCTION_33	ELSE_1	IF_10
0x400052a	    0x660f1f440000	                    nop word [rax + rax]	      2282	quickfix.c	FUNCTION_33	ELSE_1	IF_10
0x4000530	      0x498b442408	                mov rax, qword [r12 + 8]	      2282	quickfix.c	FUNCTION_33	ELSE_1	IF_10
0x4000535	    0x443ba8b80000	           cmp r13d, dword [rax + 0xb8] 	      2328	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	IF_17
0x400053c	            0x746b	                            je 0x40005a9	      2328	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	IF_17
0x400053e	      0x4d8b642418	            mov r12, qword [r12 + 0x18] 	      2330	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	IF_18
0x4000543	          0x4d85e4	                           test r12, r12	      2331	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	IF_18
0x4000546	    0x4c0f44250000	           cmove r12, qword [0x0400054e]	      2331	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	IF_18
0x400054e	      0x498b7c2408	                mov rdi, qword [r12 + 8]	      2335	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	ELSE_4	IF_19
0x4000553	      0xe800000000	                          call 0x4000558	      2335	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	ELSE_4	IF_19
0x4000558	            0x85c0	                           test eax, eax	      2335	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	ELSE_4	IF_19
0x400055a	            0x740b	                            je 0x4000567	      2335	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	ELSE_4	IF_19
0x400055c	    0x4983bc245019	             cmp qword [r12 + 0x1950], 0	      2335	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	ELSE_4	IF_19
0x4000565	            0x7426	                            je 0x400058d	      2335	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	ELSE_4	IF_19
0x4000567	          0x4885db	                           test rbx, rbx	      2349	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	IF_22
0x400056a	            0x75c4	                           jne 0x4000530	      2349	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	IF_22
0x400056c	    0x418b84245002	           mov eax, dword [r12 + 0x250] 	      2349	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	IF_22
0x4000574	            0x85c0	                           test eax, eax	      2349	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	IF_22
0x4000576	            0x75b8	                           jne 0x4000530	      2349	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	IF_22
0x4000578	      0x498b442408	                mov rax, qword [r12 + 8]	      2350	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	IF_22
0x400057d	    0x488b90181400	          mov rdx, qword [rax + 0x1418] 	      2350	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	IF_22
0x4000584	          0x803a00	                       cmp byte [rdx], 0	      2350	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	IF_22
0x4000587	        0x490f44dc	                          cmove rbx, r12	      2350	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	IF_22
0x400058b	            0xeba8	                           jmp 0x4000535	      2350	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	IF_22
0x400058d	          0x4885db	                           test rbx, rbx	      2339	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	ELSE_4	IF_19	IF_20
0x4000590	          0x4989dc	                            mov r12, rbx	      2339	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	ELSE_4	IF_19	IF_20
0x4000593	            0x7514	                           jne 0x40005a9	      2339	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	ELSE_4	IF_19	IF_20
0x4000595	    0x488b05000000	            mov rax, qword [0x0400059c] 	      2341	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	ELSE_4	IF_19	ELSE_5	IF_21
0x400059c	        0x4c8b6018	            mov r12, qword [rax + 0x18] 	      2341	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	ELSE_4	IF_19	ELSE_5	IF_21
0x40005a0	          0x4d85e4	                           test r12, r12	      2341	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	ELSE_4	IF_19	ELSE_5	IF_21
0x40005a3	            0x7504	                           jne 0x40005a9	      2341	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	ELSE_4	IF_19	ELSE_5	IF_21
0x40005a5	        0x4c8b6020	            mov r12, qword [rax + 0x20] 	      2344	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	FOR_1	ELSE_4	IF_19	ELSE_6
0x40005a9	          0x4c89e7	                            mov rdi, r12	      2354	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	CALL_9
0x40005ac	      0xe800000000	                          call 0x40005b1	      2354	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	CALL_9
0x40005b1	      0xe90affffff	                           jmp 0x40004c0	      2354	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	CALL_9
0x40005b6	          0x4889ce	                            mov rsi, rcx	      2354	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	CALL_9
0x40005b9	      0xe9f8fdffff	                           jmp 0x40003b6	      2354	quickfix.c	FUNCTION_33	ELSE_1	ELSE_3	CALL_9
0x40005be	    0x488b1d000000	            mov rbx, qword [0x040005c5] 	      2289	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	CALL_7
0x40005c5	          0x4885db	                           test rbx, rbx	      2289	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	CALL_7
0x40005c8	            0x7420	                            je 0x40005ea	      2289	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	CALL_7
0x40005ca	    0x660f1f440000	                    nop word [rax + rax]	      2289	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	CALL_7
0x40005d0	        0x488b4308	                mov rax, qword [rbx + 8]	      2290	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	IF_12
0x40005d4	    0x443ba8b80000	           cmp r13d, dword [rax + 0xb8] 	      2290	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	IF_12
0x40005db	     0xf84c9feffff	                            je 0x40004aa	      2290	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	IF_12
0x40005e1	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      2289	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	CALL_7
0x40005e5	          0x4885db	                           test rbx, rbx	      2289	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	CALL_7
0x40005e8	            0x75e6	                           jne 0x40005d0	      2289	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	CALL_7
0x40005ea	    0x488b15000000	            mov rdx, qword [0x040005f1] 	      2301	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	IF_13	DO_1	IF_15
0x40005f1	          0x4c89e3	                            mov rbx, r12	      2301	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	IF_13	DO_1	IF_15
0x40005f4	            0xeb14	                           jmp 0x400060a	      2301	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	IF_13	DO_1	IF_15
0x40005f6	        0x488b5b18	            mov rbx, qword [rbx + 0x18] 	      2300	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	IF_13	DO_1	IF_15
0x40005fa	          0x4885db	                           test rbx, rbx	      2301	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	IF_13	DO_1	IF_15
0x40005fd	        0x480f44da	                          cmove rbx, rdx	      2301	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	IF_13	DO_1	IF_15
0x4000601	          0x4c39e3	                            cmp rbx, r12	      2304	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	IF_13	DO_1
0x4000604	     0xf84a0feffff	                            je 0x40004aa	      2304	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	IF_13	DO_1
0x400060a	        0x488b4308	                mov rax, qword [rbx + 8]	      2298	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	IF_13	DO_1	IF_14
0x400060e	    0x488b80181400	          mov rax, qword [rax + 0x1418] 	      2298	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	IF_13	DO_1	IF_14
0x4000615	          0x803800	                       cmp byte [rax], 0	      2298	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	IF_13	DO_1	IF_14
0x4000618	            0x75dc	                           jne 0x40005f6	      2298	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	IF_13	DO_1	IF_14
0x400061a	      0xe98bfeffff	                           jmp 0x40004aa	      2298	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	IF_13	DO_1	IF_14
0x400061f	              0x90	                                     nop	      2298	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_11	IF_13	DO_1	IF_14
0x4000620	    0x4889ab481900	          mov qword [rbx + 0x1948], rbp 	      2313	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_16
0x4000627	      0xb801000000	                              mov eax, 1	      2358	quickfix.c	FUNCTION_33
0x400062c	        0x83450001	                      add dword [rbp], 1	      2314	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_16
0x4000630	      0xe938feffff	                           jmp 0x400046d	      2314	quickfix.c	FUNCTION_33	ELSE_1	IF_10	IF_16
0x4000635	    0x488b05000000	            mov rax, qword [0x0400063c] 	      2269	quickfix.c	FUNCTION_33	IF_6
0x400063c	    0x41c704240100	                      mov dword [r12], 1	      2268	quickfix.c	FUNCTION_33	IF_6
0x4000644	    0xc70500000000	               mov dword [0x0400064e], 0	      2270	quickfix.c	FUNCTION_33	IF_6
0x400064e	    0x488905000000	            mov qword [0x04000655], rax 	      2269	quickfix.c	FUNCTION_33	IF_6
0x4000655	    0x488b05000000	            mov rax, qword [0x0400065c] 	      2271	quickfix.c	FUNCTION_33	IF_6	CALL_6
0x400065c	    0xc78088020000	              mov dword [rax + 0x288], 0	      2271	quickfix.c	FUNCTION_33	IF_6	CALL_6
0x4000666	    0xc780b0020000	              mov dword [rax + 0x2b0], 0	      2271	quickfix.c	FUNCTION_33	IF_6	CALL_6
0x4000670	      0xe94bfeffff	                           jmp 0x40004c0	      2271	quickfix.c	FUNCTION_33	IF_6	CALL_6
0x4000675	            0x31c9	                            xor ecx, ecx	      2228	quickfix.c	FUNCTION_33	IF_3	CALL_3
0x4000677	      0xe911fdffff	                           jmp 0x400038d	      2228	quickfix.c	FUNCTION_33	IF_3	CALL_3
0x400067c	    0x488b3d000000	            mov rdi, qword [0x04000683] 	      2261	quickfix.c	FUNCTION_33	IF_6	CALL_4
0x4000683	      0xe800000000	                          call 0x4000688	      2261	quickfix.c	FUNCTION_33	IF_6	CALL_4
0x4000688	      0xe978fdffff	                           jmp 0x4000405	      2261	quickfix.c	FUNCTION_33	IF_6	CALL_4
qf_get_cur_idx	functions,0:WHILE,0:DO,0:CALL,0:SWITCH,0:IF,2:ELSE,0:FOR,0	30
0x4007610	        0x4883ec08	                              sub rsp, 8	      3932	quickfix.c	FUNCTION_66
0x4007614	          0x8b4720	            mov eax, dword [rdi + 0x20] 	      3935	quickfix.c	FUNCTION_66	IF_1
0x4007617	      0x3dd8000000	                           cmp eax, 0xd8	      3935	quickfix.c	FUNCTION_66	IF_1
0x400761c	            0x7432	                            je 0x4007650	      3935	quickfix.c	FUNCTION_66	IF_1
0x400761e	      0x3dde000000	                           cmp eax, 0xde	      3935	quickfix.c	FUNCTION_66	IF_1
0x4007623	      0xba00000000	                              mov edx, 0	      3933	quickfix.c	FUNCTION_66
0x4007628	            0x7426	                            je 0x4007650	      3935	quickfix.c	FUNCTION_66	IF_1
0x400762a	        0x48634208	            movsxd rax, dword [rdx + 8] 	      3943	quickfix.c	FUNCTION_66
0x400762e	    0x488d0cc50000	                        lea rcx, [rax*8]	      3943	quickfix.c	FUNCTION_66
0x4007636	        0x48c1e007	                              shl rax, 7	      3943	quickfix.c	FUNCTION_66
0x400763a	          0x4829c8	                            sub rax, rcx	      3943	quickfix.c	FUNCTION_66
0x400763d	        0x8b440234	      mov eax, dword [rdx + rax + 0x34] 	      3943	quickfix.c	FUNCTION_66
0x4007641	        0x4883c408	                              add rsp, 8	      3944	quickfix.c	FUNCTION_66
0x4007645	              0xc3	                                     ret	      3944	quickfix.c	FUNCTION_66
0x4007646	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3944	quickfix.c	FUNCTION_66
0x4007650	    0x488b05000000	            mov rax, qword [0x04007657] 	      3938	quickfix.c	FUNCTION_66	IF_1
0x4007657	        0x488b7808	                mov rdi, qword [rax + 8]	      3938	quickfix.c	FUNCTION_66	IF_1
0x400765b	      0xe800000000	                          call 0x4007660	      3938	quickfix.c	FUNCTION_66	IF_1
0x4007660	            0x85c0	                           test eax, eax	      3938	quickfix.c	FUNCTION_66	IF_1
0x4007662	    0x488b05000000	            mov rax, qword [0x04007669] 	      3938	quickfix.c	FUNCTION_66	IF_1
0x4007669	            0x7415	                            je 0x4007680	      3938	quickfix.c	FUNCTION_66	IF_1
0x400766b	    0x488b90501900	          mov rdx, qword [rax + 0x1950] 	      3938	quickfix.c	FUNCTION_66	IF_1
0x4007672	          0x4885d2	                           test rdx, rdx	      3938	quickfix.c	FUNCTION_66	IF_1
0x4007675	            0x75b3	                           jne 0x400762a	      3938	quickfix.c	FUNCTION_66	IF_1
0x4007677	    0x660f1f840000	                    nop word [rax + rax]	      3938	quickfix.c	FUNCTION_66	IF_1
0x4007680	    0x488b90481900	          mov rdx, qword [rax + 0x1948] 	      3938	quickfix.c	FUNCTION_66	IF_1
0x4007687	          0x4885d2	                           test rdx, rdx	      3939	quickfix.c	FUNCTION_66	IF_1	IF_2
0x400768a	            0x759e	                           jne 0x400762a	      3939	quickfix.c	FUNCTION_66	IF_1	IF_2
0x400768c	            0x31c0	                            xor eax, eax	      3940	quickfix.c	FUNCTION_66	IF_1	IF_2
0x400768e	            0xebb1	                           jmp 0x4007641	      3940	quickfix.c	FUNCTION_66	IF_1	IF_2
qf_jump_goto_line	functions,0:WHILE,0:DO,0:CALL,4:SWITCH,0:IF,8:ELSE,3:FOR,1	94
0x4000690	          0x4885c9	                           test rcx, rcx	      2448	quickfix.c	FUNCTION_35	IF_1
0x4000693	            0x4154	                                push r12	      2442	quickfix.c	FUNCTION_35
0x4000695	              0x55	                                push rbp	      2442	quickfix.c	FUNCTION_35
0x4000696	              0x53	                                push rbx	      2442	quickfix.c	FUNCTION_35
0x4000697	            0x745f	                            je 0x40006f8	      2448	quickfix.c	FUNCTION_35	IF_1
0x4000699	    0x488b05000000	            mov rax, qword [0x040006a0] 	      2499	quickfix.c	FUNCTION_35	ELSE_3
0x40006a0	        0x4883ec08	                              sub rsp, 8	      2501	quickfix.c	FUNCTION_35	ELSE_3	IF_8	CALL_4
0x40006a4	          0x4989ca	                            mov r10, rcx	      2501	quickfix.c	FUNCTION_35	ELSE_3	IF_8	CALL_4
0x40006a7	          0x4531c9	                            xor r9d, r9d	      2501	quickfix.c	FUNCTION_35	ELSE_3	IF_8	CALL_4
0x40006aa	      0xb901000000	                              mov ecx, 1	      2501	quickfix.c	FUNCTION_35	ELSE_3	IF_8	CALL_4
0x40006af	          0x4c89d2	                            mov rdx, r10	      2501	quickfix.c	FUNCTION_35	ELSE_3	IF_8	CALL_4
0x40006b2	            0x31ff	                            xor edi, edi	      2501	quickfix.c	FUNCTION_35	ELSE_3	IF_8	CALL_4
0x40006b4	    0x41b800040000	                          mov r8d, 0x400	      2501	quickfix.c	FUNCTION_35	ELSE_3	IF_8	CALL_4
0x40006ba	      0xbe2f000000	                           mov esi, 0x2f	      2501	quickfix.c	FUNCTION_35	ELSE_3	IF_8	CALL_4
0x40006bf	        0x4c8b6038	            mov r12, qword [rax + 0x38] 	      2499	quickfix.c	FUNCTION_35	ELSE_3
0x40006c3	          0x8b6840	            mov ebp, dword [rax + 0x40] 	      2499	quickfix.c	FUNCTION_35	ELSE_3
0x40006c6	          0x8b5844	            mov ebx, dword [rax + 0x44] 	      2499	quickfix.c	FUNCTION_35	ELSE_3
0x40006c9	    0x48c740380000	               mov qword [rax + 0x38], 0	      2500	quickfix.c	FUNCTION_35	ELSE_3
0x40006d1	            0x6a00	                                  push 0	      2501	quickfix.c	FUNCTION_35	ELSE_3	IF_8	CALL_4
0x40006d3	      0xe800000000	                          call 0x40006d8	      2501	quickfix.c	FUNCTION_35	ELSE_3	IF_8	CALL_4
0x40006d8	            0x85c0	                           test eax, eax	      2501	quickfix.c	FUNCTION_35	ELSE_3	IF_8	CALL_4
0x40006da	              0x5a	                                 pop rdx	      2501	quickfix.c	FUNCTION_35	ELSE_3	IF_8	CALL_4
0x40006db	              0x59	                                 pop rcx	      2501	quickfix.c	FUNCTION_35	ELSE_3	IF_8	CALL_4
0x40006dc	            0x7511	                           jne 0x40006ef	      2501	quickfix.c	FUNCTION_35	ELSE_3	IF_8	CALL_4
0x40006de	    0x488b05000000	            mov rax, qword [0x040006e5] 	      2503	quickfix.c	FUNCTION_35	ELSE_3	IF_8
0x40006e5	        0x4c896038	             mov qword [rax + 0x38], r12	      2503	quickfix.c	FUNCTION_35	ELSE_3	IF_8
0x40006e9	          0x896840	             mov dword [rax + 0x40], ebp	      2503	quickfix.c	FUNCTION_35	ELSE_3	IF_8
0x40006ec	          0x895844	             mov dword [rax + 0x44], ebx	      2503	quickfix.c	FUNCTION_35	ELSE_3	IF_8
0x40006ef	              0x5b	                                 pop rbx	      2505	quickfix.c	FUNCTION_35
0x40006f0	              0x5d	                                 pop rbp	      2505	quickfix.c	FUNCTION_35
0x40006f1	            0x415c	                                 pop r12	      2505	quickfix.c	FUNCTION_35
0x40006f3	              0xc3	                                     ret	      2505	quickfix.c	FUNCTION_35
0x40006f4	         0xf1f4000	                         nop dword [rax]	      2505	quickfix.c	FUNCTION_35
0x40006f8	          0x4885ff	                           test rdi, rdi	      2454	quickfix.c	FUNCTION_35	IF_1	IF_2
0x40006fb	            0x7e1c	                           jle 0x4000719	      2454	quickfix.c	FUNCTION_35	IF_1	IF_2
0x40006fd	    0x488b05000000	            mov rax, qword [0x04000704] 	      2456	quickfix.c	FUNCTION_35	IF_1	IF_2	IF_3
0x4000704	          0x488b00	                    mov rax, qword [rax]	      2456	quickfix.c	FUNCTION_35	IF_1	IF_2	IF_3
0x4000707	          0x4839c7	                            cmp rdi, rax	      2458	quickfix.c	FUNCTION_35	IF_1	IF_2
0x400070a	        0x480f4ff8	                          cmovg rdi, rax	      2458	quickfix.c	FUNCTION_35	IF_1	IF_2
0x400070e	    0x488b05000000	            mov rax, qword [0x04000715] 	      2458	quickfix.c	FUNCTION_35	IF_1	IF_2
0x4000715	        0x48897838	             mov qword [rax + 0x38], rdi	      2458	quickfix.c	FUNCTION_35	IF_1	IF_2
0x4000719	            0x85f6	                           test esi, esi	      2460	quickfix.c	FUNCTION_35	IF_1	IF_4
0x400071b	     0xf8e8f000000	                           jle 0x40007b0	      2460	quickfix.c	FUNCTION_35	IF_1	IF_4
0x4000721	    0x488b05000000	            mov rax, qword [0x04000728] 	      2462	quickfix.c	FUNCTION_35	IF_1	IF_4
0x4000728	          0x83ee01	                              sub esi, 1	      2462	quickfix.c	FUNCTION_35	IF_1	IF_4
0x400072b	          0x80fa01	                               cmp dl, 1	      2466	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5
0x400072e	          0x897040	             mov dword [rax + 0x40], esi	      2462	quickfix.c	FUNCTION_35	IF_1	IF_4
0x4000731	    0xc74044000000	               mov dword [rax + 0x44], 0	      2464	quickfix.c	FUNCTION_35	IF_1	IF_4
0x4000738	            0x740e	                            je 0x4000748	      2466	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5
0x400073a	              0x5b	                                 pop rbx	      2505	quickfix.c	FUNCTION_35
0x400073b	              0x5d	                                 pop rbp	      2505	quickfix.c	FUNCTION_35
0x400073c	            0x415c	                                 pop r12	      2505	quickfix.c	FUNCTION_35
0x400073e	      0xe900000000	                           jmp 0x4000743	      2489	quickfix.c	FUNCTION_35	IF_1	IF_4	CALL_2
0x4000743	       0xf1f440000	                   nop dword [rax + rax]	      2489	quickfix.c	FUNCTION_35	IF_1	IF_4	CALL_2
0x4000748	      0xe800000000	                          call 0x400074d	      2474	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	CALL_1
0x400074d	    0x4c8b0d000000	              mov r9, qword [0x04000754]	      2476	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1
0x4000754	        0x418b7940	              mov edi, dword [r9 + 0x40]	      2476	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1
0x4000758	            0x85ff	                           test edi, edi	      2476	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1
0x400075a	            0x7ede	                           jle 0x400073a	      2476	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1
0x400075c	           0xfb610	                   movzx edx, byte [rax]	      2478	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_6
0x400075f	            0x84d2	                             test dl, dl	      2478	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_6
0x4000761	            0x74d7	                            je 0x400073a	      2478	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_6
0x4000763	            0x31c9	                            xor ecx, ecx	      2478	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_6
0x4000765	            0x31f6	                            xor esi, esi	      2478	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_6
0x4000767	    0x41ba08000000	                             mov r10d, 8	      2483	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_7
0x400076d	            0xeb12	                           jmp 0x4000781	      2483	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_7
0x400076f	              0x90	                                     nop	      2483	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_7
0x4000770	          0x83c601	                              add esi, 1	      2486	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	ELSE_1
0x4000773	          0x83c101	                              add ecx, 1	      2476	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1
0x4000776	            0x39cf	                            cmp edi, ecx	      2476	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1
0x4000778	            0x7ec0	                           jle 0x400073a	      2476	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1
0x400077a	           0xfb610	                   movzx edx, byte [rax]	      2478	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_6
0x400077d	            0x84d2	                             test dl, dl	      2478	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_6
0x400077f	            0x74b9	                            je 0x400073a	      2478	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_6
0x4000781	        0x4883c001	                              add rax, 1	      2480	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_7
0x4000785	          0x80fa09	                               cmp dl, 9	      2480	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_7
0x4000788	            0x75e6	                           jne 0x4000770	      2480	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_7
0x400078a	          0x4189f0	                            mov r8d, esi	      2482	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_7
0x400078d	          0x4489d3	                           mov ebx, r10d	      2483	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_7
0x4000790	        0x41c1f81f	                           sar r8d, 0x1f	      2482	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_7
0x4000794	        0x41c1e81d	                           shr r8d, 0x1d	      2482	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_7
0x4000798	        0x428d1406	                     lea edx, [rsi + r8]	      2482	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_7
0x400079c	          0x83e207	                              and edx, 7	      2482	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_7
0x400079f	          0x4429c2	                            sub edx, r8d	      2482	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_7
0x40007a2	        0x8d7c17f9	                lea edi, [rdi + rdx - 7]	      2482	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_7
0x40007a6	            0x29d3	                            sub ebx, edx	      2483	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_7
0x40007a8	             0x1de	                            add esi, ebx	      2483	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_7
0x40007aa	        0x41897940	              mov dword [r9 + 0x40], edi	      2482	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_7
0x40007ae	            0xebc3	                           jmp 0x4000773	      2482	quickfix.c	FUNCTION_35	IF_1	IF_4	IF_5	FOR_1	IF_7
0x40007b0	              0x5b	                                 pop rbx	      2505	quickfix.c	FUNCTION_35
0x40007b1	              0x5d	                                 pop rbp	      2505	quickfix.c	FUNCTION_35
0x40007b2	            0x415c	                                 pop r12	      2505	quickfix.c	FUNCTION_35
0x40007b4	      0xbf05000000	                              mov edi, 5	      2492	quickfix.c	FUNCTION_35	IF_1	CALL_3
0x40007b9	      0xe900000000	                           jmp 0x40007be	      2492	quickfix.c	FUNCTION_35	IF_1	CALL_3
ex_helpgrep	functions,0:WHILE,0:DO,0:CALL,17:SWITCH,1:IF,13:ELSE,3:FOR,0	572
0x400c1d0	            0x4157	                                push r15	      6222	quickfix.c	FUNCTION_114
0x400c1d2	            0x4156	                                push r14	      6222	quickfix.c	FUNCTION_114
0x400c1d4	            0x4155	                                push r13	      6222	quickfix.c	FUNCTION_114
0x400c1d6	            0x4154	                                push r12	      6222	quickfix.c	FUNCTION_114
0x400c1d8	              0x55	                                push rbp	      6222	quickfix.c	FUNCTION_114
0x400c1d9	              0x53	                                push rbx	      6222	quickfix.c	FUNCTION_114
0x400c1da	    0x4881ec580100	                          sub rsp, 0x158	      6222	quickfix.c	FUNCTION_114
0x400c1e1	          0x8b4720	            mov eax, dword [rdi + 0x20] 	      6229	quickfix.c	FUNCTION_114	SWITCH_1
0x400c1e4	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	      6222	quickfix.c	FUNCTION_114
0x400c1ed	    0x48898c244801	            mov qword [rsp + 0x148], rcx	      6222	quickfix.c	FUNCTION_114
0x400c1f5	            0x31c9	                            xor ecx, ecx	      6222	quickfix.c	FUNCTION_114
0x400c1f7	      0x48897c2430	             mov qword [rsp + 0x30], rdi	      6222	quickfix.c	FUNCTION_114
0x400c1fc	      0x3daa000000	                           cmp eax, 0xaa	      6229	quickfix.c	FUNCTION_114	SWITCH_1
0x400c201	     0xf84f1070000	                            je 0x400c9f8	      6229	quickfix.c	FUNCTION_114	SWITCH_1
0x400c207	      0x3de5000000	                           cmp eax, 0xe5	      6229	quickfix.c	FUNCTION_114	SWITCH_1
0x400c20c	     0xf842a040000	                            je 0x400c63c	      6229	quickfix.c	FUNCTION_114	SWITCH_1
0x400c212	    0x48c744243800	               mov qword [rsp + 0x38], 0	      6227	quickfix.c	FUNCTION_114
0x400c21b	    0x488b0d000000	            mov rcx, qword [0x0400c222] 	      6245	quickfix.c	FUNCTION_114
0x400c222	    0x488b15000000	            mov rdx, qword [0x0400c229] 	      6246	quickfix.c	FUNCTION_114
0x400c229	      0x3de5000000	                           cmp eax, 0xe5	      6248	quickfix.c	FUNCTION_114	IF_3
0x400c22e	    0xc74424440000	               mov dword [rsp + 0x44], 0	      6226	quickfix.c	FUNCTION_114
0x400c236	    0x48c704240000	                      mov qword [rsp], 0	      6225	quickfix.c	FUNCTION_114
0x400c23e	      0x48894c2448	             mov qword [rsp + 0x48], rcx	      6245	quickfix.c	FUNCTION_114
0x400c243	    0x488915000000	            mov qword [0x0400c24a], rdx 	      6246	quickfix.c	FUNCTION_114
0x400c24a	     0xf84f0070000	                            je 0x400ca40	      6248	quickfix.c	FUNCTION_114	IF_3
0x400c250	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	      6255	quickfix.c	FUNCTION_114	CALL_4
0x400c255	      0xbe03000000	                              mov esi, 3	      6255	quickfix.c	FUNCTION_114	CALL_4
0x400c25a	          0x488b3b	                    mov rdi, qword [rbx]	      6255	quickfix.c	FUNCTION_114	CALL_4
0x400c25d	      0xe800000000	                          call 0x400c262	      6255	quickfix.c	FUNCTION_114	CALL_4
0x400c262	          0x4885c0	                           test rax, rax	      6257	quickfix.c	FUNCTION_114	IF_5
0x400c265	    0x488984249000	             mov qword [rsp + 0x90], rax	      6255	quickfix.c	FUNCTION_114	CALL_4
0x400c26d	    0xc78424380100	              mov dword [rsp + 0x138], 0	      6256	quickfix.c	FUNCTION_114
0x400c278	     0xf8423050000	                            je 0x400c7a1	      6257	quickfix.c	FUNCTION_114	IF_5
0x400c27e	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      6260	quickfix.c	FUNCTION_114	IF_5	CALL_5
0x400c282	        0x488b3c24	                    mov rdi, qword [rsp]	      6260	quickfix.c	FUNCTION_114	IF_5	CALL_5
0x400c286	          0x488b30	                    mov rsi, qword [rax]	      6260	quickfix.c	FUNCTION_114	IF_5	CALL_5
0x400c289	      0xe8b24bffff	                    call sym.qf_new_list	      6260	quickfix.c	FUNCTION_114	IF_5	CALL_5
0x400c28e	    0x8b2d00000000	            mov ebp, dword [0x0400c294] 	      6186	quickfix.c	FUNCTION_113	IF_1
0x400c294	          0x488b1b	                    mov rbx, qword [rbx]	      6262	quickfix.c	FUNCTION_114	IF_5	CALL_6
0x400c297	    0xc74424700000	               mov dword [rsp + 0x70], 0	      6185	quickfix.c	FUNCTION_113
0x400c29f	            0x85ed	                           test ebp, ebp	      6186	quickfix.c	FUNCTION_113	IF_1
0x400c2a1	     0xf84e2070000	                            je 0x400ca89	      6186	quickfix.c	FUNCTION_113	IF_1
0x400c2a7	          0x4889df	                            mov rdi, rbx	      6192	quickfix.c	FUNCTION_113	CALL_2
0x400c2aa	      0xe800000000	                          call 0x400c2af	      6192	quickfix.c	FUNCTION_113	CALL_2
0x400c2af	      0x4889442420	             mov qword [rsp + 0x20], rax	      6192	quickfix.c	FUNCTION_113	CALL_2
0x400c2b4	    0x488b05000000	            mov rax, qword [0x0400c2bb] 	      6196	quickfix.c	FUNCTION_113
0x400c2bb	      0x4889442458	             mov qword [rsp + 0x58], rax	      6196	quickfix.c	FUNCTION_113
0x400c2c0	          0x803800	                       cmp byte [rax], 0	      6197	quickfix.c	FUNCTION_113	WHILE_1
0x400c2c3	     0xf8483040000	                            je 0x400c74c	      6197	quickfix.c	FUNCTION_113	WHILE_1
0x400c2c9	    0x8b0500000000	            mov eax, dword [0x0400c2cf] 	      6197	quickfix.c	FUNCTION_113	WHILE_1
0x400c2cf	            0x85c0	                           test eax, eax	      6197	quickfix.c	FUNCTION_113	WHILE_1
0x400c2d1	     0xf8575040000	                           jne 0x400c74c	      6197	quickfix.c	FUNCTION_113	WHILE_1
0x400c2d7	            0x31c0	                            xor eax, eax	      6197	quickfix.c	FUNCTION_113	WHILE_1
0x400c2d9	    0x48813c240000	                      cmp qword [rsp], 0	      6197	quickfix.c	FUNCTION_113	WHILE_1
0x400c2e1	           0xf95c0	                                setne al	      6197	quickfix.c	FUNCTION_113	WHILE_1
0x400c2e4	          0x83c001	                              add eax, 1	      6197	quickfix.c	FUNCTION_113	WHILE_1
0x400c2e7	        0x89442440	             mov dword [rsp + 0x40], eax	      6197	quickfix.c	FUNCTION_113	WHILE_1
0x400c2eb	            0xeb1c	                           jmp 0x400c309	      6197	quickfix.c	FUNCTION_113	WHILE_1
0x400c2ed	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      6197	quickfix.c	FUNCTION_113	WHILE_1
0x400c2f2	          0x803800	                       cmp byte [rax], 0	      6197	quickfix.c	FUNCTION_113	WHILE_1
0x400c2f5	     0xf8451040000	                            je 0x400c74c	      6197	quickfix.c	FUNCTION_113	WHILE_1
0x400c2fb	    0x8b0500000000	            mov eax, dword [0x0400c301] 	      6197	quickfix.c	FUNCTION_113	WHILE_1
0x400c301	            0x85c0	                           test eax, eax	      6197	quickfix.c	FUNCTION_113	WHILE_1
0x400c303	     0xf8543040000	                           jne 0x400c74c	      6197	quickfix.c	FUNCTION_113	WHILE_1
0x400c309	    0x488b35000000	            mov rsi, qword [0x0400c310] 	      6199	quickfix.c	FUNCTION_113	WHILE_1	CALL_3
0x400c310	      0x488d7c2458	                   lea rdi, [rsp + 0x58]	      6199	quickfix.c	FUNCTION_113	WHILE_1	CALL_3
0x400c315	      0xb900000000	                              mov ecx, 0	      6199	quickfix.c	FUNCTION_113	WHILE_1	CALL_3
0x400c31a	      0xba00100000	                         mov edx, 0x1000	      6199	quickfix.c	FUNCTION_113	WHILE_1	CALL_3
0x400c31f	      0xe800000000	                          call 0x400c324	      6199	quickfix.c	FUNCTION_113	WHILE_1	CALL_3
0x400c324	    0x488b3d000000	            mov rdi, qword [0x0400c32b] 	      6201	quickfix.c	FUNCTION_113	WHILE_1	CALL_4
0x400c32b	      0x48897c2460	             mov qword [rsp + 0x60], rdi	      6201	quickfix.c	FUNCTION_113	WHILE_1	CALL_4
0x400c330	      0xe800000000	                          call 0x400c335	      6140	quickfix.c	FUNCTION_112	CALL_1
0x400c335	      0x488b5c2460	            mov rbx, qword [rsp + 0x60] 	      6141	quickfix.c	FUNCTION_112	CALL_2
0x400c33a	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_125	CALL_3
0x400c33d	      0xe800000000	                          call 0x400c342	       148	string3.h	FUNCTION_125	CALL_3
0x400c342	    0x48b9646f632f	          movabs rcx, 0x285c2e2a2f636f64	       148	string3.h	FUNCTION_125	CALL_3
0x400c34c	          0x4801d8	                            add rax, rbx	       148	string3.h	FUNCTION_125	CALL_3
0x400c34f	    0x41ba5c290000	                        mov r10d, 0x295c	       148	string3.h	FUNCTION_125	CALL_3
0x400c355	          0x488908	                    mov qword [rax], rcx	       148	string3.h	FUNCTION_125	CALL_3
0x400c358	    0x48b97478745c	          movabs rcx, 0x783f3f7c5c747874	       148	string3.h	FUNCTION_125	CALL_3
0x400c362	      0x488d542454	                   lea rdx, [rsp + 0x54]	      6142	quickfix.c	FUNCTION_112	IF_1	CALL_3
0x400c367	        0x48894808	                mov qword [rax + 8], rcx	       148	string3.h	FUNCTION_125	CALL_3
0x400c36b	      0x488d742460	                   lea rsi, [rsp + 0x60]	      6142	quickfix.c	FUNCTION_112	IF_1	CALL_3
0x400c370	      0x488d4c2468	                   lea rcx, [rsp + 0x68]	      6142	quickfix.c	FUNCTION_112	IF_1	CALL_3
0x400c375	      0x6644895010	             mov word [rax + 0x10], r10w	       148	string3.h	FUNCTION_125	CALL_3
0x400c37a	        0xc6401200	                mov byte [rax + 0x12], 0	       148	string3.h	FUNCTION_125	CALL_3
0x400c37e	    0x41b822000000	                           mov r8d, 0x22	      6142	quickfix.c	FUNCTION_112	IF_1	CALL_3
0x400c384	      0xbf01000000	                              mov edi, 1	      6142	quickfix.c	FUNCTION_112	IF_1	CALL_3
0x400c389	      0xe800000000	                          call 0x400c38e	      6142	quickfix.c	FUNCTION_112	IF_1	CALL_3
0x400c38e	          0x83f801	                              cmp eax, 1	      6142	quickfix.c	FUNCTION_112	IF_1	CALL_3
0x400c391	     0xf8556ffffff	                           jne 0x400c2ed	      6142	quickfix.c	FUNCTION_112	IF_1	CALL_3
0x400c397	        0x8b6c2454	            mov ebp, dword [rsp + 0x54] 	      6144	quickfix.c	FUNCTION_112	IF_1
0x400c39b	            0x85ed	                           test ebp, ebp	      6144	quickfix.c	FUNCTION_112	IF_1
0x400c39d	     0xf8e4affffff	                           jle 0x400c2ed	      6144	quickfix.c	FUNCTION_112	IF_1
0x400c3a3	    0x8b0500000000	            mov eax, dword [0x0400c3a9] 	      6146	quickfix.c	FUNCTION_112	IF_1	FOR_1
0x400c3a9	      0x4c8b642468	            mov r12, qword [rsp + 0x68] 	      6146	quickfix.c	FUNCTION_112	IF_1	FOR_1
0x400c3ae	            0x85c0	                           test eax, eax	      6146	quickfix.c	FUNCTION_112	IF_1	FOR_1
0x400c3b0	     0xf857e030000	                           jne 0x400c734	      6146	quickfix.c	FUNCTION_112	IF_1	FOR_1
0x400c3b6	    0x48c744241800	               mov qword [rsp + 0x18], 0	      6146	quickfix.c	FUNCTION_112	IF_1	FOR_1
0x400c3bf	    0xc74424140000	               mov dword [rsp + 0x14], 0	      6146	quickfix.c	FUNCTION_112	IF_1	FOR_1
0x400c3c7	    0x660f1f840000	                    nop word [rax + rax]	      6146	quickfix.c	FUNCTION_112	IF_1	FOR_1
0x400c3d0	    0x48837c242000	               cmp qword [rsp + 0x20], 0	      6150	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2
0x400c3d6	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      6151	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_4
0x400c3db	        0x4d8b3404	              mov r14, qword [r12 + rax]	      6151	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_4
0x400c3df	            0x745f	                            je 0x400c440	      6150	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2
0x400c3e1	          0x4c89f7	                            mov rdi, r14	      6151	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_4
0x400c3e4	      0xe800000000	                          call 0x400c3e9	      6151	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_4
0x400c3e9	      0x4c8b7c2420	            mov r15, qword [rsp + 0x20] 	      6151	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_4
0x400c3ee	      0x498d5c06fd	                lea rbx, [r14 + rax - 3]	      6151	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_4
0x400c3f3	      0xba02000000	                              mov edx, 2	      6151	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_4
0x400c3f8	          0x4889de	                            mov rsi, rbx	      6151	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_4
0x400c3fb	          0x4c89ff	                            mov rdi, r15	      6151	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_4
0x400c3fe	      0xe800000000	                          call 0x400c403	      6151	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_4
0x400c403	            0x85c0	                           test eax, eax	      6151	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_4
0x400c405	            0x7439	                            je 0x400c440	      6151	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_4
0x400c407	      0xba02000000	                              mov edx, 2	      6153	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_6
0x400c40c	      0xbe00000000	                              mov esi, 0	      6153	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_6
0x400c411	          0x4c89ff	                            mov rdi, r15	      6153	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_6
0x400c414	      0xe800000000	                          call 0x400c419	      6153	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_6
0x400c419	            0x85c0	                           test eax, eax	      6153	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_6
0x400c41b	     0xf85f2020000	                           jne 0x400c713	      6153	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_6
0x400c421	      0xba03000000	                              mov edx, 3	      6154	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_7
0x400c426	          0x4889de	                            mov rsi, rbx	      6154	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_7
0x400c429	      0xbf00000000	                              mov edi, 0	      6154	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_7
0x400c42e	      0xe800000000	                          call 0x400c433	      6154	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_7
0x400c433	            0x85c0	                           test eax, eax	      6153	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_6
0x400c435	     0xf85d8020000	                           jne 0x400c713	      6153	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_6
0x400c43b	       0xf1f440000	                   nop dword [rax + rax]	      6153	quickfix.c	FUNCTION_112	IF_1	FOR_1	IF_2	CALL_6
0x400c440	      0xbe00000000	                              mov esi, 0	      6055	quickfix.c	FUNCTION_111	CALL_1
0x400c445	          0x4c89f7	                            mov rdi, r14	      6055	quickfix.c	FUNCTION_111	CALL_1
0x400c448	      0xe800000000	                          call 0x400c44d	      6055	quickfix.c	FUNCTION_111	CALL_1
0x400c44d	          0x4885c0	                           test rax, rax	      6056	quickfix.c	FUNCTION_111	IF_1
0x400c450	      0x4889442408	                mov qword [rsp + 8], rax	      6055	quickfix.c	FUNCTION_111	CALL_1
0x400c455	     0xf84af020000	                            je 0x400c70a	      6056	quickfix.c	FUNCTION_111	IF_1
0x400c45b	    0x41bd01000000	                             mov r13d, 1	      6056	quickfix.c	FUNCTION_111	IF_1
0x400c461	          0x4889c2	                            mov rdx, rax	      6056	quickfix.c	FUNCTION_111	IF_1
0x400c464	         0xf1f4000	                         nop dword [rax]	      6056	quickfix.c	FUNCTION_111	IF_1
0x400c468	    0x488b3d000000	            mov rdi, qword [0x0400c46f] 	      6060	quickfix.c	FUNCTION_111	WHILE_1	CALL_2
0x400c46f	      0xbe01040000	                          mov esi, 0x401	      6060	quickfix.c	FUNCTION_111	WHILE_1	CALL_2
0x400c474	      0xe800000000	                          call 0x400c479	      6060	quickfix.c	FUNCTION_111	WHILE_1	CALL_2
0x400c479	            0x85c0	                           test eax, eax	      6060	quickfix.c	FUNCTION_111	WHILE_1	CALL_2
0x400c47b	     0xf857f020000	                           jne 0x400c700	      6060	quickfix.c	FUNCTION_111	WHILE_1	CALL_2
0x400c481	    0x8b2d00000000	            mov ebp, dword [0x0400c487] 	      6060	quickfix.c	FUNCTION_111	WHILE_1	CALL_2
0x400c487	            0x85ed	                           test ebp, ebp	      6060	quickfix.c	FUNCTION_111	WHILE_1	CALL_2
0x400c489	     0xf8571020000	                           jne 0x400c700	      6060	quickfix.c	FUNCTION_111	WHILE_1	CALL_2
0x400c48f	      0x448b4c2470	            mov r9d, dword [rsp + 0x70] 	      6066	quickfix.c	FUNCTION_111	WHILE_1	IF_2
0x400c494	    0x4c8b3d000000	            mov r15, qword [0x0400c49b] 	      6062	quickfix.c	FUNCTION_111	WHILE_1
0x400c49b	          0x4585c9	                           test r9d, r9d	      6066	quickfix.c	FUNCTION_111	WHILE_1	IF_2
0x400c49e	     0xf85dc010000	                           jne 0x400c680	      6066	quickfix.c	FUNCTION_111	WHILE_1	IF_2
0x400c4a4	    0x488dbc249000	                   lea rdi, [rsp + 0x90]	      6075	quickfix.c	FUNCTION_111	WHILE_1	IF_4	CALL_5
0x400c4ac	            0x31d2	                            xor edx, edx	      6075	quickfix.c	FUNCTION_111	WHILE_1	IF_4	CALL_5
0x400c4ae	          0x4c89fe	                            mov rsi, r15	      6075	quickfix.c	FUNCTION_111	WHILE_1	IF_4	CALL_5
0x400c4b1	      0xe800000000	                          call 0x400c4b6	      6075	quickfix.c	FUNCTION_111	WHILE_1	IF_4	CALL_5
0x400c4b6	            0x85c0	                           test eax, eax	      6075	quickfix.c	FUNCTION_111	WHILE_1	IF_4	CALL_5
0x400c4b8	     0xf845a010000	                            je 0x400c618	      6075	quickfix.c	FUNCTION_111	WHILE_1	IF_4	CALL_5
0x400c4be	          0x4c89ff	                            mov rdi, r15	      6077	quickfix.c	FUNCTION_111	WHILE_1	IF_4	CALL_6
0x400c4c1	      0xe800000000	                          call 0x400c4c6	      6077	quickfix.c	FUNCTION_111	WHILE_1	IF_4	CALL_6
0x400c4c6	            0x85c0	                           test eax, eax	      6080	quickfix.c	FUNCTION_111	WHILE_1	IF_4	WHILE_2
0x400c4c8	            0x7e31	                           jle 0x400c4fb	      6080	quickfix.c	FUNCTION_111	WHILE_1	IF_4	WHILE_2
0x400c4ca	          0x4863c8	                         movsxd rcx, eax	      6080	quickfix.c	FUNCTION_111	WHILE_1	IF_4	WHILE_2
0x400c4cd	    0x41807c0fff20	         cmp byte [r15 + rcx - 1], 0x20 	      6080	quickfix.c	FUNCTION_111	WHILE_1	IF_4	WHILE_2
0x400c4d3	            0x7726	                            ja 0x400c4fb	      6080	quickfix.c	FUNCTION_111	WHILE_1	IF_4	WHILE_2
0x400c4d5	          0x83e801	                              sub eax, 1	      6080	quickfix.c	FUNCTION_111	WHILE_1	IF_4	WHILE_2
0x400c4d8	        0x498d140f	                    lea rdx, [r15 + rcx]	      6080	quickfix.c	FUNCTION_111	WHILE_1	IF_4	WHILE_2
0x400c4dc	          0x4829c1	                            sub rcx, rax	      6080	quickfix.c	FUNCTION_111	WHILE_1	IF_4	WHILE_2
0x400c4df	        0x498d040f	                    lea rax, [r15 + rcx]	      6080	quickfix.c	FUNCTION_111	WHILE_1	IF_4	WHILE_2
0x400c4e3	            0xeb0d	                           jmp 0x400c4f2	      6080	quickfix.c	FUNCTION_111	WHILE_1	IF_4	WHILE_2
0x400c4e5	           0xf1f00	                         nop dword [rax]	      6080	quickfix.c	FUNCTION_111	WHILE_1	IF_4	WHILE_2
0x400c4e8	        0x4883ea01	                              sub rdx, 1	      6080	quickfix.c	FUNCTION_111	WHILE_1	IF_4	WHILE_2
0x400c4ec	        0x807aff20	                cmp byte [rdx - 1], 0x20	      6080	quickfix.c	FUNCTION_111	WHILE_1	IF_4	WHILE_2
0x400c4f0	            0x7709	                            ja 0x400c4fb	      6080	quickfix.c	FUNCTION_111	WHILE_1	IF_4	WHILE_2
0x400c4f2	          0x4839d0	                            cmp rax, rdx	      6080	quickfix.c	FUNCTION_111	WHILE_1	IF_4	WHILE_2
0x400c4f5	        0xc642ff00	                   mov byte [rdx - 1], 0	      6081	quickfix.c	FUNCTION_111	WHILE_1	IF_4	WHILE_2
0x400c4f9	            0x75ed	                           jne 0x400c4e8	      6080	quickfix.c	FUNCTION_111	WHILE_1	IF_4	WHILE_2
0x400c4fb	    0x4c8ba4249800	            mov r12, qword [rsp + 0x98] 	      6083	quickfix.c	FUNCTION_111	WHILE_1	IF_4	IF_5	CALL_7
0x400c503	      0xbf48000000	                           mov edi, 0x48	      1478	quickfix.c	FUNCTION_17	IF_1	CALL_1
0x400c508	          0x4d29fc	                            sub r12, r15	      6083	quickfix.c	FUNCTION_111	WHILE_1	IF_4	IF_5	CALL_7
0x400c50b	      0x418d442401	                      lea eax, [r12 + 1]	      6083	quickfix.c	FUNCTION_111	WHILE_1	IF_4	IF_5	CALL_7
0x400c510	        0x89442410	             mov dword [rsp + 0x10], eax	      6083	quickfix.c	FUNCTION_111	WHILE_1	IF_4	IF_5	CALL_7
0x400c514	        0x488b0424	                    mov rax, qword [rsp]	      6083	quickfix.c	FUNCTION_111	WHILE_1	IF_4	IF_5	CALL_7
0x400c518	        0x48635808	            movsxd rbx, dword [rax + 8] 	      6083	quickfix.c	FUNCTION_111	WHILE_1	IF_4	IF_5	CALL_7
0x400c51c	      0xe800000000	                          call 0x400c521	      1478	quickfix.c	FUNCTION_17	IF_1	CALL_1
0x400c521	          0x4885c0	                           test rax, rax	      1478	quickfix.c	FUNCTION_17	IF_1	CALL_1
0x400c524	          0x4989c4	                            mov r12, rax	      1478	quickfix.c	FUNCTION_17	IF_1	CALL_1
0x400c527	     0xf84b0010000	                            je 0x400c6dd	      1478	quickfix.c	FUNCTION_17	IF_1	CALL_1
0x400c52d	          0x4d85f6	                           test r14, r14	      1721	quickfix.c	FUNCTION_21	IF_1
0x400c530	            0x740a	                            je 0x400c53c	      1721	quickfix.c	FUNCTION_21	IF_1
0x400c532	        0x41803e00	                       cmp byte [r14], 0	      1721	quickfix.c	FUNCTION_21	IF_1
0x400c536	     0xf8574030000	                           jne 0x400c8b0	      1721	quickfix.c	FUNCTION_21	IF_1
0x400c53c	      0x41896c2418	             mov dword [r12 + 0x18], ebp	      1490	quickfix.c	FUNCTION_17	CALL_3
0x400c541	          0x4c89ff	                            mov rdi, r15	      1491	quickfix.c	FUNCTION_17	IF_4	CALL_4
0x400c544	      0xe800000000	                          call 0x400c549	      1491	quickfix.c	FUNCTION_17	IF_4	CALL_4
0x400c549	          0x4885c0	                           test rax, rax	      1491	quickfix.c	FUNCTION_17	IF_4	CALL_4
0x400c54c	      0x4989442438	             mov qword [r12 + 0x38], rax	      1491	quickfix.c	FUNCTION_17	IF_4	CALL_4
0x400c551	     0xf847e010000	                            je 0x400c6d5	      1491	quickfix.c	FUNCTION_17	IF_4	CALL_4
0x400c557	        0x8b442410	            mov eax, dword [rsp + 0x10] 	      1497	quickfix.c	FUNCTION_17
0x400c55b	    0x488d14dd0000	                        lea rdx, [rbx*8]	      1523	quickfix.c	FUNCTION_17	IF_10
0x400c563	    0x41c644244000	                mov byte [r12 + 0x40], 0	      1498	quickfix.c	FUNCTION_17
0x400c569	    0x41c644244201	                mov byte [r12 + 0x42], 1	      1519	quickfix.c	FUNCTION_17
0x400c56f	    0x41c644244301	                mov byte [r12 + 0x43], 1	      1520	quickfix.c	FUNCTION_17
0x400c575	      0x4d896c2410	             mov qword [r12 + 0x10], r13	      1496	quickfix.c	FUNCTION_17
0x400c57a	    0x49c744243000	               mov qword [r12 + 0x30], 0	      1500	quickfix.c	FUNCTION_17	IF_5
0x400c583	      0x418944241c	             mov dword [r12 + 0x1c], eax	      1497	quickfix.c	FUNCTION_17
0x400c588	          0x4889d8	                            mov rax, rbx	      1523	quickfix.c	FUNCTION_17	IF_10
0x400c58b	    0x49c744242800	               mov qword [r12 + 0x28], 0	      1508	quickfix.c	FUNCTION_17	IF_7
0x400c594	        0x48c1e007	                              shl rax, 7	      1523	quickfix.c	FUNCTION_17	IF_10
0x400c598	    0x41c744242000	               mov dword [r12 + 0x20], 0	      1516	quickfix.c	FUNCTION_17
0x400c5a1	          0x4829d0	                            sub rax, rdx	      1523	quickfix.c	FUNCTION_17	IF_10
0x400c5a4	        0x48030424	                    add rax, qword [rsp]	      1523	quickfix.c	FUNCTION_17	IF_10
0x400c5a8	        0x448b4030	            mov r8d, dword [rax + 0x30] 	      1523	quickfix.c	FUNCTION_17	IF_10
0x400c5ac	          0x4585c0	                           test r8d, r8d	      1523	quickfix.c	FUNCTION_17	IF_10
0x400c5af	     0xf850b010000	                           jne 0x400c6c0	      1523	quickfix.c	FUNCTION_17	IF_10
0x400c5b5	        0x4c896018	             mov qword [rax + 0x18], r12	      1526	quickfix.c	FUNCTION_17	IF_10
0x400c5b9	        0x4c896028	             mov qword [rax + 0x28], r12	      1527	quickfix.c	FUNCTION_17	IF_10
0x400c5bd	    0xc74034000000	               mov dword [rax + 0x34], 0	      1528	quickfix.c	FUNCTION_17	IF_10
0x400c5c4	    0x49c744240800	                  mov qword [r12 + 8], 0	      1529	quickfix.c	FUNCTION_17	IF_10
0x400c5cd	    0x488d04dd0000	                        lea rax, [rbx*8]	      1538	quickfix.c	FUNCTION_17
0x400c5d5	        0x48c1e307	                              shl rbx, 7	      1538	quickfix.c	FUNCTION_17
0x400c5d9	    0x41c644244100	                mov byte [r12 + 0x41], 0	      1537	quickfix.c	FUNCTION_17
0x400c5df	    0x49c704240000	                      mov qword [r12], 0	      1536	quickfix.c	FUNCTION_17
0x400c5e7	          0x4829c3	                            sub rbx, rax	      1538	quickfix.c	FUNCTION_17
0x400c5ea	        0x488b0424	                    mov rax, qword [rsp]	      1538	quickfix.c	FUNCTION_17
0x400c5ee	          0x4801d8	                            add rax, rbx	      1538	quickfix.c	FUNCTION_17
0x400c5f1	          0x8b4830	            mov ecx, dword [rax + 0x30] 	      1539	quickfix.c	FUNCTION_17
0x400c5f4	          0x8b7834	            mov edi, dword [rax + 0x34] 	      1540	quickfix.c	FUNCTION_17	IF_11
0x400c5f7	        0x4c896020	             mov qword [rax + 0x20], r12	      1538	quickfix.c	FUNCTION_17
0x400c5fb	          0x8d5101	                      lea edx, [rcx + 1]	      1539	quickfix.c	FUNCTION_17
0x400c5fe	            0x85ff	                           test edi, edi	      1540	quickfix.c	FUNCTION_17	IF_11
0x400c600	          0x895030	             mov dword [rax + 0x30], edx	      1539	quickfix.c	FUNCTION_17
0x400c603	            0x7513	                           jne 0x400c618	      1540	quickfix.c	FUNCTION_17	IF_11
0x400c605	    0x41807c244300	                cmp byte [r12 + 0x43], 0	      1540	quickfix.c	FUNCTION_17	IF_11
0x400c60b	            0x740b	                            je 0x400c618	      1540	quickfix.c	FUNCTION_17	IF_11
0x400c60d	          0x895034	             mov dword [rax + 0x34], edx	      1543	quickfix.c	FUNCTION_17	IF_11
0x400c610	        0x4c896028	             mov qword [rax + 0x28], r12	      1545	quickfix.c	FUNCTION_17	IF_11
0x400c614	         0xf1f4000	                         nop dword [rax]	      1545	quickfix.c	FUNCTION_17	IF_11
0x400c618	    0x4c3b3d000000	            cmp r15, qword [0x0400c61f] 	      6109	quickfix.c	FUNCTION_111	WHILE_1	IF_7
0x400c61f	            0x7408	                            je 0x400c629	      6109	quickfix.c	FUNCTION_111	WHILE_1	IF_7
0x400c621	          0x4c89ff	                            mov rdi, r15	      6110	quickfix.c	FUNCTION_111	WHILE_1	CALL_9
0x400c624	      0xe800000000	                          call 0x400c629	      6110	quickfix.c	FUNCTION_111	WHILE_1	CALL_9
0x400c629	      0xe800000000	                          call 0x400c62e	      6113	quickfix.c	FUNCTION_111	WHILE_1	CALL_10
0x400c62e	        0x4983c501	                              add r13, 1	      6112	quickfix.c	FUNCTION_111	WHILE_1
0x400c632	      0x488b542408	                mov rdx, qword [rsp + 8]	      6112	quickfix.c	FUNCTION_111	WHILE_1
0x400c637	      0xe92cfeffff	                           jmp 0x400c468	      6112	quickfix.c	FUNCTION_111	WHILE_1
0x400c63c	    0x48c744243800	               mov qword [rsp + 0x38], 0	      6232	quickfix.c	FUNCTION_114	SWITCH_1
0x400c645	    0x4c8b05000000	              mov r8, qword [0x0400c64c]	      6236	quickfix.c	FUNCTION_114	IF_1
0x400c64c	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	      6235	quickfix.c	FUNCTION_114	IF_1	CALL_1
0x400c651	      0xb901000000	                              mov ecx, 1	      6235	quickfix.c	FUNCTION_114	IF_1	CALL_1
0x400c656	      0xbf40000000	                           mov edi, 0x40	      6235	quickfix.c	FUNCTION_114	IF_1	CALL_1
0x400c65b	    0x498b90980000	              mov rdx, qword [r8 + 0x98]	      6235	quickfix.c	FUNCTION_114	IF_1	CALL_1
0x400c662	      0xe800000000	                          call 0x400c667	      6235	quickfix.c	FUNCTION_114	IF_1	CALL_1
0x400c667	            0x85c0	                           test eax, eax	      6235	quickfix.c	FUNCTION_114	IF_1	CALL_1
0x400c669	     0xf8535040000	                           jne 0x400caa4	      6235	quickfix.c	FUNCTION_114	IF_1	CALL_1
0x400c66f	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      6235	quickfix.c	FUNCTION_114	IF_1	CALL_1
0x400c674	          0x8b4020	            mov eax, dword [rax + 0x20] 	      6235	quickfix.c	FUNCTION_114	IF_1	CALL_1
0x400c677	      0xe99ffbffff	                           jmp 0x400c21b	      6235	quickfix.c	FUNCTION_114	IF_1	CALL_1
0x400c67c	         0xf1f4000	                         nop dword [rax]	      6235	quickfix.c	FUNCTION_114	IF_1	CALL_1
0x400c680	          0x4c89ff	                            mov rdi, r15	      6067	quickfix.c	FUNCTION_111	WHILE_1	IF_2	CALL_3
0x400c683	      0xe800000000	                          call 0x400c688	      6067	quickfix.c	FUNCTION_111	WHILE_1	IF_2	CALL_3
0x400c688	            0x85c0	                           test eax, eax	      6067	quickfix.c	FUNCTION_111	WHILE_1	IF_2	CALL_3
0x400c68a	     0xf8414feffff	                            je 0x400c4a4	      6067	quickfix.c	FUNCTION_111	WHILE_1	IF_2	CALL_3
0x400c690	    0x488b35000000	            mov rsi, qword [0x0400c697] 	      6069	quickfix.c	FUNCTION_111	WHILE_1	IF_2	CALL_4
0x400c697	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      6069	quickfix.c	FUNCTION_111	WHILE_1	IF_2	CALL_4
0x400c69c	            0x31d2	                            xor edx, edx	      6069	quickfix.c	FUNCTION_111	WHILE_1	IF_2	CALL_4
0x400c69e	      0xe800000000	                          call 0x400c6a3	      6069	quickfix.c	FUNCTION_111	WHILE_1	IF_2	CALL_4
0x400c6a3	          0x4989c7	                            mov r15, rax	      6069	quickfix.c	FUNCTION_111	WHILE_1	IF_2	CALL_4
0x400c6a6	          0x4885c0	                           test rax, rax	      6071	quickfix.c	FUNCTION_111	WHILE_1	IF_2	IF_3
0x400c6a9	    0x4c0f443d0000	           cmove r15, qword [0x0400c6b1]	      6071	quickfix.c	FUNCTION_111	WHILE_1	IF_2	IF_3
0x400c6b1	      0xe9eefdffff	                           jmp 0x400c4a4	      6071	quickfix.c	FUNCTION_111	WHILE_1	IF_2	IF_3
0x400c6b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      6071	quickfix.c	FUNCTION_111	WHILE_1	IF_2	IF_3
0x400c6c0	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1533	quickfix.c	FUNCTION_17	ELSE_4
0x400c6c4	      0x4989542408	                mov qword [r12 + 8], rdx	      1533	quickfix.c	FUNCTION_17	ELSE_4
0x400c6c9	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1534	quickfix.c	FUNCTION_17	ELSE_4
0x400c6cd	          0x4c8920	                    mov qword [rax], r12	      1534	quickfix.c	FUNCTION_17	ELSE_4
0x400c6d0	      0xe9f8feffff	                           jmp 0x400c5cd	      1534	quickfix.c	FUNCTION_17	ELSE_4
0x400c6d5	          0x4c89e7	                            mov rdi, r12	      1493	quickfix.c	FUNCTION_17	IF_4	CALL_5
0x400c6d8	      0xe800000000	                          call 0x400c6dd	      1493	quickfix.c	FUNCTION_17	IF_4	CALL_5
0x400c6dd	    0x4c3b3d000000	            cmp r15, qword [0x0400c6e4] 	      6102	quickfix.c	FUNCTION_111	WHILE_1	IF_4	IF_5	IF_6
0x400c6e4	    0xc70500000000	               mov dword [0x0400c6ee], 1	      6100	quickfix.c	FUNCTION_111	WHILE_1	IF_4	IF_5
0x400c6ee	            0x7410	                            je 0x400c700	      6102	quickfix.c	FUNCTION_111	WHILE_1	IF_4	IF_5	IF_6
0x400c6f0	          0x4c89ff	                            mov rdi, r15	      6103	quickfix.c	FUNCTION_111	WHILE_1	IF_4	IF_5	CALL_8
0x400c6f3	      0xe800000000	                          call 0x400c6f8	      6103	quickfix.c	FUNCTION_111	WHILE_1	IF_4	IF_5	CALL_8
0x400c6f8	     0xf1f84000000	                   nop dword [rax + rax]	      6103	quickfix.c	FUNCTION_111	WHILE_1	IF_4	IF_5	CALL_8
0x400c700	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      6115	quickfix.c	FUNCTION_111	CALL_11
0x400c705	      0xe800000000	                          call 0x400c70a	      6115	quickfix.c	FUNCTION_111	CALL_11
0x400c70a	      0x4c8b642468	            mov r12, qword [rsp + 0x68] 	      6115	quickfix.c	FUNCTION_111	CALL_11
0x400c70f	        0x8b6c2454	            mov ebp, dword [rsp + 0x54] 	      6115	quickfix.c	FUNCTION_111	CALL_11
0x400c713	      0x8344241401	               add dword [rsp + 0x14], 1	      6146	quickfix.c	FUNCTION_112	IF_1	FOR_1
0x400c718	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      6146	quickfix.c	FUNCTION_112	IF_1	FOR_1
0x400c71c	            0x39e8	                            cmp eax, ebp	      6146	quickfix.c	FUNCTION_112	IF_1	FOR_1
0x400c71e	            0x7d14	                           jge 0x400c734	      6146	quickfix.c	FUNCTION_112	IF_1	FOR_1
0x400c720	    0x8b0500000000	            mov eax, dword [0x0400c726] 	      6146	quickfix.c	FUNCTION_112	IF_1	FOR_1
0x400c726	    0x488344241808	               add qword [rsp + 0x18], 8	      6146	quickfix.c	FUNCTION_112	IF_1	FOR_1
0x400c72c	            0x85c0	                           test eax, eax	      6146	quickfix.c	FUNCTION_112	IF_1	FOR_1
0x400c72e	     0xf849cfcffff	                            je 0x400c3d0	      6146	quickfix.c	FUNCTION_112	IF_1	FOR_1
0x400c734	          0x4c89e6	                            mov rsi, r12	      6165	quickfix.c	FUNCTION_112	IF_1	CALL_10
0x400c737	            0x89ef	                            mov edi, ebp	      6165	quickfix.c	FUNCTION_112	IF_1	CALL_10
0x400c739	      0xe800000000	                          call 0x400c73e	      6165	quickfix.c	FUNCTION_112	IF_1	CALL_10
0x400c73e	      0x488b442458	            mov rax, qword [rsp + 0x58] 	      6197	quickfix.c	FUNCTION_113	WHILE_1
0x400c743	          0x803800	                       cmp byte [rax], 0	      6197	quickfix.c	FUNCTION_113	WHILE_1
0x400c746	     0xf85affbffff	                           jne 0x400c2fb	      6197	quickfix.c	FUNCTION_113	WHILE_1
0x400c74c	      0x448b5c2470	           mov r11d, dword [rsp + 0x70] 	      6212	quickfix.c	FUNCTION_113	IF_2
0x400c751	          0x4585db	                         test r11d, r11d	      6212	quickfix.c	FUNCTION_113	IF_2
0x400c754	            0x740e	                            je 0x400c764	      6212	quickfix.c	FUNCTION_113	IF_2
0x400c756	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      6213	quickfix.c	FUNCTION_113	CALL_5
0x400c75b	            0x31d2	                            xor edx, edx	      6213	quickfix.c	FUNCTION_113	CALL_5
0x400c75d	            0x31f6	                            xor esi, esi	      6213	quickfix.c	FUNCTION_113	CALL_5
0x400c75f	      0xe800000000	                          call 0x400c764	      6213	quickfix.c	FUNCTION_113	CALL_5
0x400c764	    0x488bbc249000	            mov rdi, qword [rsp + 0x90] 	      6264	quickfix.c	FUNCTION_114	IF_5	CALL_7
0x400c76c	      0xe800000000	                          call 0x400c771	      6264	quickfix.c	FUNCTION_114	IF_5	CALL_7
0x400c771	        0x488b0c24	                    mov rcx, qword [rsp]	      6266	quickfix.c	FUNCTION_114	IF_5
0x400c775	        0x48634108	            movsxd rax, dword [rcx + 8] 	      6266	quickfix.c	FUNCTION_114	IF_5
0x400c779	    0x488d14c50000	                        lea rdx, [rax*8]	      6266	quickfix.c	FUNCTION_114	IF_5
0x400c781	        0x48c1e007	                              shl rax, 7	      6266	quickfix.c	FUNCTION_114	IF_5
0x400c785	          0x4829d0	                            sub rax, rdx	      6266	quickfix.c	FUNCTION_114	IF_5
0x400c788	          0x4801c8	                            add rax, rcx	      6266	quickfix.c	FUNCTION_114	IF_5
0x400c78b	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      6268	quickfix.c	FUNCTION_114	IF_5
0x400c78f	    0xc74038000000	               mov dword [rax + 0x38], 0	      6266	quickfix.c	FUNCTION_114	IF_5
0x400c796	    0xc74034010000	               mov dword [rax + 0x34], 1	      6269	quickfix.c	FUNCTION_114	IF_5
0x400c79d	        0x48895028	             mov qword [rax + 0x28], rdx	      6267	quickfix.c	FUNCTION_114	IF_5
0x400c7a1	    0x488b05000000	            mov rax, qword [0x0400c7a8] 	      6272	quickfix.c	FUNCTION_114	IF_6
0x400c7a8	    0x483905000000	            cmp qword [0x0400c7af], rax 	      6272	quickfix.c	FUNCTION_114	IF_6
0x400c7af	     0xf847a020000	                            je 0x400ca2f	      6272	quickfix.c	FUNCTION_114	IF_6
0x400c7b5	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      6276	quickfix.c	FUNCTION_114	CALL_8
0x400c7ba	      0xe800000000	                          call 0x400c7bf	      6276	quickfix.c	FUNCTION_114	CALL_8
0x400c7bf	        0x488b1c24	                    mov rbx, qword [rsp]	      3701	quickfix.c	FUNCTION_61
0x400c7c3	            0x31f6	                            xor esi, esi	      6279	quickfix.c	FUNCTION_114	CALL_10
0x400c7c5	        0x48634308	            movsxd rax, dword [rbx + 8] 	      3701	quickfix.c	FUNCTION_61
0x400c7c9	          0x4889df	                            mov rdi, rbx	      6279	quickfix.c	FUNCTION_114	CALL_10
0x400c7cc	    0x488d14c50000	                        lea rdx, [rax*8]	      3701	quickfix.c	FUNCTION_61
0x400c7d4	        0x48c1e007	                              shl rax, 7	      3701	quickfix.c	FUNCTION_61
0x400c7d8	          0x4829d0	                            sub rax, rdx	      3701	quickfix.c	FUNCTION_61
0x400c7db	    0x488384038000	         add qword [rbx + rax + 0x80], 1	      3701	quickfix.c	FUNCTION_61
0x400c7e4	      0xe8d74fffff	               call sym.qf_update_buffer	      6279	quickfix.c	FUNCTION_114	CALL_10
0x400c7e9	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      6281	quickfix.c	FUNCTION_114	IF_7
0x400c7ee	          0x4885c0	                           test rax, rax	      6281	quickfix.c	FUNCTION_114	IF_7
0x400c7f1	     0xf847a010000	                            je 0x400c971	      6281	quickfix.c	FUNCTION_114	IF_7
0x400c7f7	    0x4c8b05000000	              mov r8, qword [0x0400c7fe]	      6284	quickfix.c	FUNCTION_114	IF_7
0x400c7fe	      0xb901000000	                              mov ecx, 1	      6283	quickfix.c	FUNCTION_114	IF_7	CALL_11
0x400c803	          0x4889c6	                            mov rsi, rax	      6283	quickfix.c	FUNCTION_114	IF_7	CALL_11
0x400c806	      0xbf3f000000	                           mov edi, 0x3f	      6283	quickfix.c	FUNCTION_114	IF_7	CALL_11
0x400c80b	    0x498b90980000	              mov rdx, qword [r8 + 0x98]	      6283	quickfix.c	FUNCTION_114	IF_7	CALL_11
0x400c812	      0xe800000000	                          call 0x400c817	      6283	quickfix.c	FUNCTION_114	IF_7	CALL_11
0x400c817	    0x4881fb000000	                              cmp rbx, 0	      6285	quickfix.c	FUNCTION_114	IF_7	IF_8	CALL_12
0x400c81e	     0xf844d010000	                            je 0x400c971	      6285	quickfix.c	FUNCTION_114	IF_7	IF_8	CALL_12
0x400c824	        0x8b742444	            mov esi, dword [rsp + 0x44] 	      6285	quickfix.c	FUNCTION_114	IF_7	IF_8	CALL_12
0x400c828	            0x85f6	                           test esi, esi	      6285	quickfix.c	FUNCTION_114	IF_7	IF_8	CALL_12
0x400c82a	     0xf8541010000	                           jne 0x400c971	      6285	quickfix.c	FUNCTION_114	IF_7	IF_8	CALL_12
0x400c830	    0x488b2d000000	            mov rbp, qword [0x0400c837] 	      3473	quickfix.c	FUNCTION_56	CALL_1
0x400c837	          0x4885ed	                           test rbp, rbp	      3473	quickfix.c	FUNCTION_56	CALL_1
0x400c83a	            0x7448	                            je 0x400c884	      3473	quickfix.c	FUNCTION_56	CALL_1
0x400c83c	          0x4989dc	                            mov r12, rbx	      3473	quickfix.c	FUNCTION_56	CALL_1
0x400c83f	    0x48392d000000	            cmp qword [0x0400c846], rbp 	      3473	quickfix.c	FUNCTION_56	CALL_1
0x400c846	     0xf8424030000	                            je 0x400cb70	      3473	quickfix.c	FUNCTION_56	CALL_1
0x400c84c	        0x488b5d20	            mov rbx, qword [rbp + 0x20] 	      3473	quickfix.c	FUNCTION_56	CALL_1
0x400c850	            0xeb24	                           jmp 0x400c876	      3473	quickfix.c	FUNCTION_56	CALL_1
0x400c852	    0x660f1f440000	                    nop word [rax + rax]	      3473	quickfix.c	FUNCTION_56	CALL_1
0x400c858	        0x488b7b08	                mov rdi, qword [rbx + 8]	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400c85c	      0xe800000000	                          call 0x400c861	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400c861	            0x85c0	                           test eax, eax	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400c863	            0x740d	                            je 0x400c872	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400c865	    0x4c3ba3501900	          cmp r12, qword [rbx + 0x1950] 	      3442	quickfix.c	FUNCTION_54	IF_1	IF_2
0x400c86c	     0xf84f4000000	                            je 0x400c966	      3442	quickfix.c	FUNCTION_54	IF_1	IF_2
0x400c872	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      3473	quickfix.c	FUNCTION_56	CALL_1
0x400c876	          0x4885db	                           test rbx, rbx	      3473	quickfix.c	FUNCTION_56	CALL_1
0x400c879	            0x75dd	                           jne 0x400c858	      3473	quickfix.c	FUNCTION_56	CALL_1
0x400c87b	        0x488b6d00	                    mov rbp, qword [rbp]	      3473	quickfix.c	FUNCTION_56	CALL_1
0x400c87f	          0x4885ed	                           test rbp, rbp	      3473	quickfix.c	FUNCTION_56	CALL_1
0x400c882	            0x75bb	                           jne 0x400c83f	      3473	quickfix.c	FUNCTION_56	CALL_1
0x400c884	    0x488b84244801	           mov rax, qword [rsp + 0x148] 	      6308	quickfix.c	FUNCTION_114
0x400c88c	    0x644833042528	                xor rax, qword fs:[0x28]	      6308	quickfix.c	FUNCTION_114
0x400c895	     0xf8568030000	                           jne 0x400cc03	      6308	quickfix.c	FUNCTION_114
0x400c89b	    0x4881c4580100	                          add rsp, 0x158	      6308	quickfix.c	FUNCTION_114
0x400c8a2	              0x5b	                                 pop rbx	      6308	quickfix.c	FUNCTION_114
0x400c8a3	              0x5d	                                 pop rbp	      6308	quickfix.c	FUNCTION_114
0x400c8a4	            0x415c	                                 pop r12	      6308	quickfix.c	FUNCTION_114
0x400c8a6	            0x415d	                                 pop r13	      6308	quickfix.c	FUNCTION_114
0x400c8a8	            0x415e	                                 pop r14	      6308	quickfix.c	FUNCTION_114
0x400c8aa	            0x415f	                                 pop r15	      6308	quickfix.c	FUNCTION_114
0x400c8ac	              0xc3	                                     ret	      6308	quickfix.c	FUNCTION_114
0x400c8ad	           0xf1f00	                         nop dword [rax]	      6308	quickfix.c	FUNCTION_114
0x400c8b0	    0x488b15000000	            mov rdx, qword [0x0400c8b7] 	      1756	quickfix.c	FUNCTION_21	ELSE_2	IF_6	CALL_11
0x400c8b7	          0x4885d2	                           test rdx, rdx	      1756	quickfix.c	FUNCTION_21	ELSE_2	IF_6	CALL_11
0x400c8ba	            0x7419	                            je 0x400c8d5	      1756	quickfix.c	FUNCTION_21	ELSE_2	IF_6	CALL_11
0x400c8bc	          0x4889d6	                            mov rsi, rdx	      1756	quickfix.c	FUNCTION_21	ELSE_2	IF_6	CALL_11
0x400c8bf	          0x4c89f7	                            mov rdi, r14	      1756	quickfix.c	FUNCTION_21	ELSE_2	IF_6	CALL_11
0x400c8c2	      0x4889542428	             mov qword [rsp + 0x28], rdx	      1756	quickfix.c	FUNCTION_21	ELSE_2	IF_6	CALL_11
0x400c8c7	      0xe800000000	                          call 0x400c8cc	      1756	quickfix.c	FUNCTION_21	ELSE_2	IF_6	CALL_11
0x400c8cc	            0x85c0	                           test eax, eax	      1756	quickfix.c	FUNCTION_21	ELSE_2	IF_6	CALL_11
0x400c8ce	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      1756	quickfix.c	FUNCTION_21	ELSE_2	IF_6	CALL_11
0x400c8d3	            0x7462	                            je 0x400c937	      1756	quickfix.c	FUNCTION_21	ELSE_2	IF_6	CALL_11
0x400c8d5	          0x4889d7	                            mov rdi, rdx	      1764	quickfix.c	FUNCTION_21	ELSE_3	CALL_14
0x400c8d8	      0xe800000000	                          call 0x400c8dd	      1764	quickfix.c	FUNCTION_21	ELSE_3	CALL_14
0x400c8dd	      0xb910000000	                           mov ecx, 0x10	      1765	quickfix.c	FUNCTION_21	ELSE_3	CALL_15
0x400c8e2	            0x31d2	                            xor edx, edx	      1765	quickfix.c	FUNCTION_21	ELSE_3	CALL_15
0x400c8e4	            0x31f6	                            xor esi, esi	      1765	quickfix.c	FUNCTION_21	ELSE_3	CALL_15
0x400c8e6	          0x4c89f7	                            mov rdi, r14	      1765	quickfix.c	FUNCTION_21	ELSE_3	CALL_15
0x400c8e9	      0xe800000000	                          call 0x400c8ee	      1765	quickfix.c	FUNCTION_21	ELSE_3	CALL_15
0x400c8ee	          0x4c89f7	                            mov rdi, r14	      1769	quickfix.c	FUNCTION_21	ELSE_3	CALL_16
0x400c8f1	      0x4889442428	             mov qword [rsp + 0x28], rax	      1765	quickfix.c	FUNCTION_21	ELSE_3	CALL_15
0x400c8f6	      0xe800000000	                          call 0x400c8fb	      1769	quickfix.c	FUNCTION_21	ELSE_3	CALL_16
0x400c8fb	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      1770	quickfix.c	FUNCTION_21	ELSE_3	CALL_17
0x400c900	      0xbf00000000	                              mov edi, 0	      1770	quickfix.c	FUNCTION_21	ELSE_3	CALL_17
0x400c905	    0x488905000000	            mov qword [0x0400c90c], rax 	      1769	quickfix.c	FUNCTION_21	ELSE_3	CALL_16
0x400c90c	          0x4889d6	                            mov rsi, rdx	      1770	quickfix.c	FUNCTION_21	ELSE_3	CALL_17
0x400c90f	      0xe800000000	                          call 0x400c914	      1770	quickfix.c	FUNCTION_21	ELSE_3	CALL_17
0x400c914	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      1770	quickfix.c	FUNCTION_21	ELSE_3	CALL_17
0x400c919	          0x4885d2	                           test rdx, rdx	      1772	quickfix.c	FUNCTION_21	IF_8
0x400c91c	     0xf841afcffff	                            je 0x400c53c	      1772	quickfix.c	FUNCTION_21	IF_8
0x400c922	        0x8b442440	            mov eax, dword [rsp + 0x40] 	      1775	quickfix.c	FUNCTION_21
0x400c926	    0x8baab8000000	            mov ebp, dword [rdx + 0xb8] 	      1777	quickfix.c	FUNCTION_21
0x400c92c	    0x898220140000	          mov dword [rdx + 0x1420], eax 	      1775	quickfix.c	FUNCTION_21
0x400c932	      0xe905fcffff	                           jmp 0x400c53c	      1775	quickfix.c	FUNCTION_21
0x400c937	      0xbf00000000	                              mov edi, 0	      1757	quickfix.c	FUNCTION_21	ELSE_2	IF_6	CALL_12
0x400c93c	      0xe800000000	                          call 0x400c941	      1757	quickfix.c	FUNCTION_21	ELSE_2	IF_6	CALL_12
0x400c941	            0x85c0	                           test eax, eax	      1757	quickfix.c	FUNCTION_21	ELSE_2	IF_6	CALL_12
0x400c943	    0x488b15000000	            mov rdx, qword [0x0400c94a] 	      1757	quickfix.c	FUNCTION_21	ELSE_2	IF_6	CALL_12
0x400c94a	            0x7489	                            je 0x400c8d5	      1757	quickfix.c	FUNCTION_21	ELSE_2	IF_6	CALL_12
0x400c94c	    0x488b15000000	            mov rdx, qword [0x0400c953] 	      1759	quickfix.c	FUNCTION_21	ELSE_2	IF_6
0x400c953	            0x31ff	                            xor edi, edi	      1760	quickfix.c	FUNCTION_21	ELSE_2	IF_6	CALL_13
0x400c955	      0x4889542428	             mov qword [rsp + 0x28], rdx	      1759	quickfix.c	FUNCTION_21	ELSE_2	IF_6
0x400c95a	      0xe800000000	                          call 0x400c95f	      1760	quickfix.c	FUNCTION_21	ELSE_2	IF_6	CALL_13
0x400c95f	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	      1760	quickfix.c	FUNCTION_21	ELSE_2	IF_6	CALL_13
0x400c964	            0xebb3	                           jmp 0x400c919	      1760	quickfix.c	FUNCTION_21	ELSE_2	IF_6	CALL_13
0x400c966	      0x48837b0800	                  cmp qword [rbx + 8], 0	      6285	quickfix.c	FUNCTION_114	IF_7	IF_8	CALL_12
0x400c96b	     0xf8413ffffff	                            je 0x400c884	      6285	quickfix.c	FUNCTION_114	IF_7	IF_8	CALL_12
0x400c971	        0x488b3c24	                    mov rdi, qword [rsp]	      6291	quickfix.c	FUNCTION_114	IF_9
0x400c975	        0x48634708	            movsxd rax, dword [rdi + 8] 	      6291	quickfix.c	FUNCTION_114	IF_9
0x400c979	    0x488d14c50000	                        lea rdx, [rax*8]	      6291	quickfix.c	FUNCTION_114	IF_9
0x400c981	        0x48c1e007	                              shl rax, 7	      6291	quickfix.c	FUNCTION_114	IF_9
0x400c985	          0x4829d0	                            sub rax, rdx	      6291	quickfix.c	FUNCTION_114	IF_9
0x400c988	        0x8b4c0730	      mov ecx, dword [rdi + rax + 0x30] 	      6291	quickfix.c	FUNCTION_114	IF_9
0x400c98c	            0x85c9	                           test ecx, ecx	      6291	quickfix.c	FUNCTION_114	IF_9
0x400c98e	            0x7e76	                           jle 0x400ca06	      6291	quickfix.c	FUNCTION_114	IF_9
0x400c990	            0x31d2	                            xor edx, edx	      6292	quickfix.c	FUNCTION_114	CALL_13
0x400c992	            0x31f6	                            xor esi, esi	      6292	quickfix.c	FUNCTION_114	CALL_13
0x400c994	      0xe82756ffff	            call sym.qf_jump.constprop.7	      6292	quickfix.c	FUNCTION_114	CALL_13
0x400c999	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      6296	quickfix.c	FUNCTION_114	IF_10
0x400c99e	    0x817820e50000	           cmp dword [rax + 0x20], 0xe5 	      6296	quickfix.c	FUNCTION_114	IF_10
0x400c9a5	     0xf85d9feffff	                           jne 0x400c884	      6296	quickfix.c	FUNCTION_114	IF_10
0x400c9ab	    0x488b05000000	            mov rax, qword [0x0400c9b2] 	      6300	quickfix.c	FUNCTION_114	IF_10	IF_11	CALL_16
0x400c9b2	        0x488b7808	                mov rdi, qword [rax + 8]	      6300	quickfix.c	FUNCTION_114	IF_10	IF_11	CALL_16
0x400c9b6	      0xe800000000	                          call 0x400c9bb	      6300	quickfix.c	FUNCTION_114	IF_10	IF_11	CALL_16
0x400c9bb	            0x85c0	                           test eax, eax	      6300	quickfix.c	FUNCTION_114	IF_10	IF_11	CALL_16
0x400c9bd	     0xf84f3000000	                            je 0x400cab6	      6300	quickfix.c	FUNCTION_114	IF_10	IF_11	CALL_16
0x400c9c3	    0x488b05000000	            mov rax, qword [0x0400c9ca] 	      6300	quickfix.c	FUNCTION_114	IF_10	IF_11	CALL_16
0x400c9ca	    0x488b90481900	          mov rdx, qword [rax + 0x1948] 	      6300	quickfix.c	FUNCTION_114	IF_10	IF_11	CALL_16
0x400c9d1	        0x483b1424	                    cmp rdx, qword [rsp]	      6300	quickfix.c	FUNCTION_114	IF_10	IF_11	CALL_16
0x400c9d5	     0xf84db000000	                            je 0x400cab6	      6300	quickfix.c	FUNCTION_114	IF_10	IF_11	CALL_16
0x400c9db	          0x4885d2	                           test rdx, rdx	      6305	quickfix.c	FUNCTION_114	IF_10	ELSE_3	IF_13
0x400c9de	     0xf85a0feffff	                           jne 0x400c884	      6305	quickfix.c	FUNCTION_114	IF_10	ELSE_3	IF_13
0x400c9e4	        0x488b3424	                    mov rsi, qword [rsp]	      6306	quickfix.c	FUNCTION_114	IF_10	ELSE_3	IF_13
0x400c9e8	    0x4889b0481900	          mov qword [rax + 0x1948], rsi 	      6306	quickfix.c	FUNCTION_114	IF_10	ELSE_3	IF_13
0x400c9ef	      0xe990feffff	                           jmp 0x400c884	      6306	quickfix.c	FUNCTION_114	IF_10	ELSE_3	IF_13
0x400c9f4	         0xf1f4000	                         nop dword [rax]	      6306	quickfix.c	FUNCTION_114	IF_10	ELSE_3	IF_13
0x400c9f8	    0x48c744243800	               mov qword [rsp + 0x38], 0	      6231	quickfix.c	FUNCTION_114	SWITCH_1
0x400ca01	      0xe93ffcffff	                           jmp 0x400c645	      6231	quickfix.c	FUNCTION_114	SWITCH_1
0x400ca06	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      6294	quickfix.c	FUNCTION_114	CALL_15
0x400ca0b	            0x31ff	                            xor edi, edi	      6294	quickfix.c	FUNCTION_114	CALL_15
0x400ca0d	      0xba05000000	                              mov edx, 5	      6294	quickfix.c	FUNCTION_114	CALL_15
0x400ca12	      0xbe00000000	                              mov esi, 0	      6294	quickfix.c	FUNCTION_114	CALL_15
0x400ca17	          0x488b18	                    mov rbx, qword [rax]	      6294	quickfix.c	FUNCTION_114	CALL_15
0x400ca1a	      0xe800000000	                          call 0x400ca1f	      6294	quickfix.c	FUNCTION_114	CALL_15
0x400ca1f	          0x4889c7	                            mov rdi, rax	      6294	quickfix.c	FUNCTION_114	CALL_15
0x400ca22	          0x4889de	                            mov rsi, rbx	      6294	quickfix.c	FUNCTION_114	CALL_15
0x400ca25	      0xe800000000	                          call 0x400ca2a	      6294	quickfix.c	FUNCTION_114	CALL_15
0x400ca2a	      0xe96affffff	                           jmp 0x400c999	      6294	quickfix.c	FUNCTION_114	CALL_15
0x400ca2f	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      6273	quickfix.c	FUNCTION_114	IF_6
0x400ca34	    0x488905000000	            mov qword [0x0400ca3b], rax 	      6273	quickfix.c	FUNCTION_114	IF_6
0x400ca3b	      0xe97ffdffff	                           jmp 0x400c7bf	      6273	quickfix.c	FUNCTION_114	IF_6
0x400ca40	    0x488b05000000	            mov rax, qword [0x0400ca47] 	      6016	quickfix.c	FUNCTION_110	IF_1	CALL_1
0x400ca47	        0x488b7808	                mov rdi, qword [rax + 8]	      6016	quickfix.c	FUNCTION_110	IF_1	CALL_1
0x400ca4b	      0xe800000000	                          call 0x400ca50	      6016	quickfix.c	FUNCTION_110	IF_1	CALL_1
0x400ca50	            0x85c0	                           test eax, eax	      6016	quickfix.c	FUNCTION_110	IF_1	CALL_1
0x400ca52	     0xf8424010000	                            je 0x400cb7c	      6016	quickfix.c	FUNCTION_110	IF_1	CALL_1
0x400ca58	    0x488b1d000000	            mov rbx, qword [0x0400ca5f] 	      6017	quickfix.c	FUNCTION_110	IF_1
0x400ca5f	          0x4885db	                           test rbx, rbx	      6024	quickfix.c	FUNCTION_110	IF_3
0x400ca62	     0xf8443010000	                            je 0x400cbab	      6024	quickfix.c	FUNCTION_110	IF_3
0x400ca68	    0x488b83481900	          mov rax, qword [rbx + 0x1948] 	      6027	quickfix.c	FUNCTION_110	ELSE_2
0x400ca6f	          0x4885c0	                           test rax, rax	      6029	quickfix.c	FUNCTION_110	ELSE_2	IF_4
0x400ca72	        0x48890424	                    mov qword [rsp], rax	      6027	quickfix.c	FUNCTION_110	ELSE_2
0x400ca76	     0xf842f010000	                            je 0x400cbab	      6029	quickfix.c	FUNCTION_110	ELSE_2	IF_4
0x400ca7c	    0xc74424440000	               mov dword [rsp + 0x44], 0	      6226	quickfix.c	FUNCTION_114
0x400ca84	      0xe9c7f7ffff	                           jmp 0x400c250	      6226	quickfix.c	FUNCTION_114
0x400ca89	    0x488b15000000	            mov rdx, qword [0x0400ca90] 	      6187	quickfix.c	FUNCTION_113	CALL_1
0x400ca90	      0x488d7c2470	                   lea rdi, [rsp + 0x70]	      6187	quickfix.c	FUNCTION_113	CALL_1
0x400ca95	      0xbe00000000	                              mov esi, 0	      6187	quickfix.c	FUNCTION_113	CALL_1
0x400ca9a	      0xe800000000	                          call 0x400ca9f	      6187	quickfix.c	FUNCTION_113	CALL_1
0x400ca9f	      0xe903f8ffff	                           jmp 0x400c2a7	      6187	quickfix.c	FUNCTION_113	CALL_1
0x400caa4	      0xe800000000	                          call 0x400caa9	      6239	quickfix.c	FUNCTION_114	IF_1	IF_2	CALL_2
0x400caa9	            0x85c0	                           test eax, eax	      6239	quickfix.c	FUNCTION_114	IF_1	IF_2	CALL_2
0x400caab	     0xf85d3fdffff	                           jne 0x400c884	      6239	quickfix.c	FUNCTION_114	IF_1	IF_2	CALL_2
0x400cab1	      0xe9b9fbffff	                           jmp 0x400c66f	      6239	quickfix.c	FUNCTION_114	IF_1	IF_2	CALL_2
0x400cab6	        0x8b442444	            mov eax, dword [rsp + 0x44] 	      6302	quickfix.c	FUNCTION_114	IF_10	IF_11	IF_12
0x400caba	            0x85c0	                           test eax, eax	      6302	quickfix.c	FUNCTION_114	IF_10	IF_11	IF_12
0x400cabc	     0xf84c2fdffff	                            je 0x400c884	      6302	quickfix.c	FUNCTION_114	IF_10	IF_11	IF_12
0x400cac2	        0x488b3424	                    mov rsi, qword [rsp]	      1426	quickfix.c	FUNCTION_15
0x400cac6	            0x8b06	                    mov eax, dword [rsi]	      1426	quickfix.c	FUNCTION_15
0x400cac8	        0x89442408	                mov dword [rsp + 8], eax	      1426	quickfix.c	FUNCTION_15
0x400cacc	          0x83e801	                              sub eax, 1	      1426	quickfix.c	FUNCTION_15
0x400cacf	            0x85c0	                           test eax, eax	      1427	quickfix.c	FUNCTION_15	IF_2
0x400cad1	            0x8906	                    mov dword [rsi], eax	      1426	quickfix.c	FUNCTION_15
0x400cad3	     0xf8fabfdffff	                            jg 0x400c884	      1427	quickfix.c	FUNCTION_15	IF_2
0x400cad9	          0x8b5604	                mov edx, dword [rsi + 4]	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400cadc	            0x31ed	                            xor ebp, ebp	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400cade	          0x4989f5	                            mov r13, rsi	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400cae1	            0x85d2	                           test edx, edx	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400cae3	            0x7e78	                           jle 0x400cb5d	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400cae5	          0x4c89ef	                            mov rdi, r13	      3031	quickfix.c	FUNCTION_44	CALL_1
0x400cae8	          0x4863dd	                         movsxd rbx, ebp	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400caeb	            0x89ee	                            mov esi, ebp	      3031	quickfix.c	FUNCTION_44	CALL_1
0x400caed	      0xe89e41ffff	                  call sym.qf_free_items	      3031	quickfix.c	FUNCTION_44	CALL_1
0x400caf2	          0x4989dc	                            mov r12, rbx	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400caf5	    0x488d04dd0000	                        lea rax, [rbx*8]	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400cafd	        0x49c1e407	                              shl r12, 7	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400cb01	          0x4929c4	                            sub r12, rax	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400cb04	          0x4d01ec	                            add r12, r13	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400cb07	      0x498b7c2440	            mov rdi, qword [r12 + 0x40] 	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400cb0c	          0x4885ff	                           test rdi, rdi	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400cb0f	            0x740e	                            je 0x400cb1f	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400cb11	      0xe800000000	                          call 0x400cb16	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400cb16	    0x49c744244000	               mov qword [r12 + 0x40], 0	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400cb1f	    0x488d04dd0000	                        lea rax, [rbx*8]	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400cb27	        0x48c1e307	                              shl rbx, 7	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400cb2b	          0x83c501	                              add ebp, 1	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400cb2e	          0x4829c3	                            sub rbx, rax	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400cb31	          0x4c01eb	                            add rbx, r13	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400cb34	        0x488b7b48	            mov rdi, qword [rbx + 0x48] 	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400cb38	      0xe800000000	                          call 0x400cb3d	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400cb3d	    0x48c743480000	               mov qword [rbx + 0x48], 0	      3035	quickfix.c	FUNCTION_44
0x400cb45	    0xc74310000000	               mov dword [rbx + 0x10], 0	      3036	quickfix.c	FUNCTION_44
0x400cb4c	    0x48c783800000	               mov qword [rbx + 0x80], 0	      3037	quickfix.c	FUNCTION_44
0x400cb57	        0x413b6d04	                cmp ebp, dword [r13 + 4]	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400cb5b	            0x7c88	                            jl 0x400cae5	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400cb5d	        0x488b3c24	                    mov rdi, qword [rsp]	      1432	quickfix.c	FUNCTION_15	IF_2	CALL_2
0x400cb61	      0xe800000000	                          call 0x400cb66	      1432	quickfix.c	FUNCTION_15	IF_2	CALL_2
0x400cb66	      0xe919fdffff	                           jmp 0x400c884	      1432	quickfix.c	FUNCTION_15	IF_2	CALL_2
0x400cb6b	       0xf1f440000	                   nop dword [rax + rax]	      1432	quickfix.c	FUNCTION_15	IF_2	CALL_2
0x400cb70	    0x488b1d000000	            mov rbx, qword [0x0400cb77] 	      3473	quickfix.c	FUNCTION_56	CALL_1
0x400cb77	      0xe9fafcffff	                           jmp 0x400c876	      3473	quickfix.c	FUNCTION_56	CALL_1
0x400cb7c	    0x488b1d000000	            mov rbx, qword [0x0400cb83] 	      6020	quickfix.c	FUNCTION_110	ELSE_1	CALL_2
0x400cb83	          0x4885db	                           test rbx, rbx	      6020	quickfix.c	FUNCTION_110	ELSE_1	CALL_2
0x400cb86	            0x7511	                           jne 0x400cb99	      6020	quickfix.c	FUNCTION_110	ELSE_1	CALL_2
0x400cb88	            0xeb21	                           jmp 0x400cbab	      6020	quickfix.c	FUNCTION_110	ELSE_1	CALL_2
0x400cb8a	    0x660f1f440000	                    nop word [rax + rax]	      6020	quickfix.c	FUNCTION_110	ELSE_1	CALL_2
0x400cb90	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      6020	quickfix.c	FUNCTION_110	ELSE_1	CALL_2
0x400cb94	          0x4885db	                           test rbx, rbx	      6020	quickfix.c	FUNCTION_110	ELSE_1	CALL_2
0x400cb97	            0x7412	                            je 0x400cbab	      6020	quickfix.c	FUNCTION_110	ELSE_1	CALL_2
0x400cb99	        0x488b7b08	                mov rdi, qword [rbx + 8]	      6021	quickfix.c	FUNCTION_110	ELSE_1	IF_2	CALL_3
0x400cb9d	      0xe800000000	                          call 0x400cba2	      6021	quickfix.c	FUNCTION_110	ELSE_1	IF_2	CALL_3
0x400cba2	            0x85c0	                           test eax, eax	      6021	quickfix.c	FUNCTION_110	ELSE_1	IF_2	CALL_3
0x400cba4	            0x74ea	                            je 0x400cb90	      6021	quickfix.c	FUNCTION_110	ELSE_1	IF_2	CALL_3
0x400cba6	      0xe9bdfeffff	                           jmp 0x400ca68	      6021	quickfix.c	FUNCTION_110	ELSE_1	IF_2	CALL_3
0x400cbab	      0xbfc0040000	                          mov edi, 0x4c0	      1559	quickfix.c	FUNCTION_18	CALL_1
0x400cbb0	      0xe800000000	                          call 0x400cbb5	      1559	quickfix.c	FUNCTION_18	CALL_1
0x400cbb5	          0x4885c0	                           test rax, rax	      1560	quickfix.c	FUNCTION_18	IF_1
0x400cbb8	        0x48890424	                    mov qword [rsp], rax	      1559	quickfix.c	FUNCTION_18	CALL_1
0x400cbbc	     0xf84c2fcffff	                            je 0x400c884	      1560	quickfix.c	FUNCTION_18	IF_1
0x400cbc2	        0x488d7808	                      lea rdi, [rax + 8]	        90	string3.h	FUNCTION_118	CALL_6
0x400cbc6	          0x4889c1	                            mov rcx, rax	        90	string3.h	FUNCTION_118	CALL_6
0x400cbc9	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_118	CALL_6
0x400cbd0	    0x48c780b80400	              mov qword [rax + 0x4b8], 0	        90	string3.h	FUNCTION_118	CALL_6
0x400cbdb	          0x4889c6	                            mov rsi, rax	        90	string3.h	FUNCTION_118	CALL_6
0x400cbde	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_118	CALL_6
0x400cbe0	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_118	CALL_6
0x400cbe4	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_118	CALL_6
0x400cbe7	    0x81c1c0040000	                          add ecx, 0x4c0	        90	string3.h	FUNCTION_118	CALL_6
0x400cbed	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_118	CALL_6
0x400cbf0	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_118	CALL_6
0x400cbf3	    0xc74424440100	               mov dword [rsp + 0x44], 1	      6034	quickfix.c	FUNCTION_110	ELSE_2	IF_4
0x400cbfb	          0x830601	                      add dword [rsi], 1	      1563	quickfix.c	FUNCTION_18	IF_1
0x400cbfe	      0xe94df6ffff	                           jmp 0x400c250	      1563	quickfix.c	FUNCTION_18	IF_1
0x400cc03	      0xe800000000	                    call obj.start.72258	      6308	quickfix.c	FUNCTION_114
ex_cwindow	functions,0:WHILE,0:DO,0:CALL,3:SWITCH,0:IF,5:ELSE,1:FOR,0	151
0x40070d0	            0x4154	                                push r12	      3143	quickfix.c	FUNCTION_47
0x40070d2	              0x55	                                push rbp	      3143	quickfix.c	FUNCTION_47
0x40070d3	          0x4989fc	                            mov r12, rdi	      3143	quickfix.c	FUNCTION_47
0x40070d6	              0x53	                                push rbx	      3143	quickfix.c	FUNCTION_47
0x40070d7	    0x817f20010100	          cmp dword [rdi + 0x20], 0x101 	      3147	quickfix.c	FUNCTION_47	IF_1
0x40070de	     0xf840c010000	                            je 0x40071f0	      3147	quickfix.c	FUNCTION_47	IF_1
0x40070e4	    0x488b1d000000	            mov rbx, qword [0x040070eb] 	      3457	quickfix.c	FUNCTION_55	CALL_1
0x40070eb	          0x4885db	                           test rbx, rbx	      3457	quickfix.c	FUNCTION_55	CALL_1
0x40070ee	            0x7559	                           jne 0x4007149	      3457	quickfix.c	FUNCTION_55	CALL_1
0x40070f0	      0xbd00000000	                              mov ebp, 0	      3144	quickfix.c	FUNCTION_47
0x40070f5	        0x48634508	            movsxd rax, dword [rbp + 8] 	      3162	quickfix.c	FUNCTION_47	IF_3
0x40070f9	    0x488d0cc50000	                        lea rcx, [rax*8]	      3162	quickfix.c	FUNCTION_47	IF_3
0x4007101	          0x4889c2	                            mov rdx, rax	      3162	quickfix.c	FUNCTION_47	IF_3
0x4007104	        0x48c1e007	                              shl rax, 7	      3162	quickfix.c	FUNCTION_47	IF_3
0x4007108	          0x4829c8	                            sub rax, rcx	      3162	quickfix.c	FUNCTION_47	IF_3
0x400710b	          0x4801e8	                            add rax, rbp	      3162	quickfix.c	FUNCTION_47	IF_3
0x400710e	        0x448b4038	            mov r8d, dword [rax + 0x38] 	      3162	quickfix.c	FUNCTION_47	IF_3
0x4007112	          0x4585c0	                           test r8d, r8d	      3162	quickfix.c	FUNCTION_47	IF_3
0x4007115	     0xf85ce000000	                           jne 0x40071e9	      3162	quickfix.c	FUNCTION_47	IF_3
0x400711b	          0x8b7030	            mov esi, dword [rax + 0x30] 	      3163	quickfix.c	FUNCTION_47	IF_3
0x400711e	            0x85f6	                           test esi, esi	      3163	quickfix.c	FUNCTION_47	IF_3
0x4007120	     0xf84c3000000	                            je 0x40071e9	      3163	quickfix.c	FUNCTION_47	IF_3
0x4007126	          0x3b5504	                cmp edx, dword [rbp + 4]	      3164	quickfix.c	FUNCTION_47	IF_3
0x4007129	     0xf8dba000000	                           jge 0x40071e9	      3164	quickfix.c	FUNCTION_47	IF_3
0x400712f	              0x5b	                                 pop rbx	      3171	quickfix.c	FUNCTION_47
0x4007130	          0x4c89e7	                            mov rdi, r12	      3170	quickfix.c	FUNCTION_47	ELSE_1	IF_5
0x4007133	              0x5d	                                 pop rbp	      3171	quickfix.c	FUNCTION_47
0x4007134	            0x415c	                                 pop r12	      3171	quickfix.c	FUNCTION_47
0x4007136	      0xe9b5faffff	                        jmp sym.ex_copen	      3170	quickfix.c	FUNCTION_47	ELSE_1	IF_5
0x400713b	       0xf1f440000	                   nop dword [rax + rax]	      3170	quickfix.c	FUNCTION_47	ELSE_1	IF_5
0x4007140	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4007144	          0x4885db	                           test rbx, rbx	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4007147	            0x74a7	                            je 0x40070f0	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4007149	        0x488b7b08	                mov rdi, qword [rbx + 8]	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400714d	      0xe800000000	                          call 0x4007152	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x4007152	            0x85c0	                           test eax, eax	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x4007154	            0x74ea	                            je 0x4007140	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x4007156	    0x4883bb501900	             cmp qword [rbx + 0x1950], 0	      3441	quickfix.c	FUNCTION_54	IF_1	IF_2
0x400715e	            0x75e0	                           jne 0x4007140	      3441	quickfix.c	FUNCTION_54	IF_1	IF_2
0x4007160	      0xbd00000000	                              mov ebp, 0	      3441	quickfix.c	FUNCTION_54	IF_1	IF_2
0x4007165	           0xf1f00	                         nop dword [rax]	      3441	quickfix.c	FUNCTION_54	IF_1	IF_2
0x4007168	        0x48634508	            movsxd rax, dword [rbp + 8] 	      3162	quickfix.c	FUNCTION_47	IF_3
0x400716c	    0x488d0cc50000	                        lea rcx, [rax*8]	      3162	quickfix.c	FUNCTION_47	IF_3
0x4007174	          0x4889c2	                            mov rdx, rax	      3162	quickfix.c	FUNCTION_47	IF_3
0x4007177	        0x48c1e007	                              shl rax, 7	      3162	quickfix.c	FUNCTION_47	IF_3
0x400717b	          0x4829c8	                            sub rax, rcx	      3162	quickfix.c	FUNCTION_47	IF_3
0x400717e	          0x4801e8	                            add rax, rbp	      3162	quickfix.c	FUNCTION_47	IF_3
0x4007181	          0x8b4838	            mov ecx, dword [rax + 0x38] 	      3162	quickfix.c	FUNCTION_47	IF_3
0x4007184	            0x85c9	                           test ecx, ecx	      3162	quickfix.c	FUNCTION_47	IF_3
0x4007186	            0x750b	                           jne 0x4007193	      3162	quickfix.c	FUNCTION_47	IF_3
0x4007188	          0x8b7830	            mov edi, dword [rax + 0x30] 	      3163	quickfix.c	FUNCTION_47	IF_3
0x400718b	            0x85ff	                           test edi, edi	      3163	quickfix.c	FUNCTION_47	IF_3
0x400718d	     0xf856e010000	                           jne 0x4007301	      3163	quickfix.c	FUNCTION_47	IF_3
0x4007193	      0x418b442420	            mov eax, dword [r12 + 0x20] 	      3183	quickfix.c	FUNCTION_48	IF_1
0x4007198	      0x3dd6000000	                           cmp eax, 0xd6	      3183	quickfix.c	FUNCTION_48	IF_1
0x400719d	     0xf84dd000000	                            je 0x4007280	      3183	quickfix.c	FUNCTION_48	IF_1
0x40071a3	      0x3d01010000	                          cmp eax, 0x101	      3183	quickfix.c	FUNCTION_48	IF_1
0x40071a8	     0xf84d2000000	                            je 0x4007280	      3183	quickfix.c	FUNCTION_48	IF_1
0x40071ae	    0x488b1d000000	            mov rbx, qword [0x040071b5] 	      3457	quickfix.c	FUNCTION_55	CALL_1
0x40071b5	          0x4885db	                           test rbx, rbx	      3457	quickfix.c	FUNCTION_55	CALL_1
0x40071b8	            0x742f	                            je 0x40071e9	      3457	quickfix.c	FUNCTION_55	CALL_1
0x40071ba	    0x660f1f440000	                    nop word [rax + rax]	      3457	quickfix.c	FUNCTION_55	CALL_1
0x40071c0	        0x488b7b08	                mov rdi, qword [rbx + 8]	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x40071c4	      0xe800000000	                          call 0x40071c9	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x40071c9	            0x85c0	                           test eax, eax	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x40071cb	            0x7413	                            je 0x40071e0	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x40071cd	    0x4883bb501900	             cmp qword [rbx + 0x1950], 0	      3441	quickfix.c	FUNCTION_54	IF_1	IF_2
0x40071d5	     0xf8495000000	                            je 0x4007270	      3441	quickfix.c	FUNCTION_54	IF_1	IF_2
0x40071db	       0xf1f440000	                   nop dword [rax + rax]	      3441	quickfix.c	FUNCTION_54	IF_1	IF_2
0x40071e0	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      3457	quickfix.c	FUNCTION_55	CALL_1
0x40071e4	          0x4885db	                           test rbx, rbx	      3457	quickfix.c	FUNCTION_55	CALL_1
0x40071e7	            0x75d7	                           jne 0x40071c0	      3457	quickfix.c	FUNCTION_55	CALL_1
0x40071e9	              0x5b	                                 pop rbx	      3171	quickfix.c	FUNCTION_47
0x40071ea	              0x5d	                                 pop rbp	      3171	quickfix.c	FUNCTION_47
0x40071eb	            0x415c	                                 pop r12	      3171	quickfix.c	FUNCTION_47
0x40071ed	              0xc3	                                     ret	      3171	quickfix.c	FUNCTION_47
0x40071ee	            0x6690	                                     nop	      3171	quickfix.c	FUNCTION_47
0x40071f0	    0x488b05000000	            mov rax, qword [0x040071f7] 	      3149	quickfix.c	FUNCTION_47	IF_1
0x40071f7	        0x488b7808	                mov rdi, qword [rax + 8]	      3149	quickfix.c	FUNCTION_47	IF_1
0x40071fb	      0xe800000000	                          call 0x4007200	      3149	quickfix.c	FUNCTION_47	IF_1
0x4007200	            0x85c0	                           test eax, eax	      3149	quickfix.c	FUNCTION_47	IF_1
0x4007202	    0x488b05000000	            mov rax, qword [0x04007209] 	      3149	quickfix.c	FUNCTION_47	IF_1
0x4007209	            0x7555	                           jne 0x4007260	      3149	quickfix.c	FUNCTION_47	IF_1
0x400720b	    0x488ba8481900	          mov rbp, qword [rax + 0x1948] 	      3149	quickfix.c	FUNCTION_47	IF_1
0x4007212	          0x4885ed	                           test rbp, rbp	      3150	quickfix.c	FUNCTION_47	IF_1	IF_2
0x4007215	            0x74d2	                            je 0x40071e9	      3150	quickfix.c	FUNCTION_47	IF_1	IF_2
0x4007217	    0x488b1d000000	            mov rbx, qword [0x0400721e] 	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400721e	          0x4885db	                           test rbx, rbx	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4007221	     0xf84cefeffff	                            je 0x40070f5	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4007227	    0x4881fd000000	                              cmp rbp, 0	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400722e	            0x7515	                           jne 0x4007245	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4007230	      0xe914ffffff	                           jmp 0x4007149	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4007235	           0xf1f00	                         nop dword [rax]	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4007238	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400723c	          0x4885db	                           test rbx, rbx	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400723f	     0xf84b0feffff	                            je 0x40070f5	      3457	quickfix.c	FUNCTION_55	CALL_1
0x4007245	        0x488b7b08	                mov rdi, qword [rbx + 8]	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x4007249	      0xe800000000	                          call 0x400724e	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400724e	            0x85c0	                           test eax, eax	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x4007250	            0x74e6	                            je 0x4007238	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x4007252	    0x483bab501900	          cmp rbp, qword [rbx + 0x1950] 	      3442	quickfix.c	FUNCTION_54	IF_1	IF_2
0x4007259	            0x75dd	                           jne 0x4007238	      3442	quickfix.c	FUNCTION_54	IF_1	IF_2
0x400725b	      0xe908ffffff	                           jmp 0x4007168	      3442	quickfix.c	FUNCTION_54	IF_1	IF_2
0x4007260	    0x488ba8501900	          mov rbp, qword [rax + 0x1950] 	      3149	quickfix.c	FUNCTION_47	IF_1
0x4007267	          0x4885ed	                           test rbp, rbp	      3149	quickfix.c	FUNCTION_47	IF_1
0x400726a	            0x75ab	                           jne 0x4007217	      3149	quickfix.c	FUNCTION_47	IF_1
0x400726c	            0xeb9d	                           jmp 0x400720b	      3149	quickfix.c	FUNCTION_47	IF_1
0x400726e	            0x6690	                                     nop	      3149	quickfix.c	FUNCTION_47	IF_1
0x4007270	          0x4889df	                            mov rdi, rbx	      3193	quickfix.c	FUNCTION_48	CALL_2
0x4007273	            0x31f6	                            xor esi, esi	      3193	quickfix.c	FUNCTION_48	CALL_2
0x4007275	              0x5b	                                 pop rbx	      3171	quickfix.c	FUNCTION_47
0x4007276	              0x5d	                                 pop rbp	      3171	quickfix.c	FUNCTION_47
0x4007277	            0x415c	                                 pop r12	      3171	quickfix.c	FUNCTION_47
0x4007279	      0xe900000000	                           jmp 0x400727e	      3193	quickfix.c	FUNCTION_48	CALL_2
0x400727e	            0x6690	                                     nop	      3193	quickfix.c	FUNCTION_48	CALL_2
0x4007280	    0x488b05000000	            mov rax, qword [0x04007287] 	      3185	quickfix.c	FUNCTION_48	IF_1
0x4007287	        0x488b7808	                mov rdi, qword [rax + 8]	      3185	quickfix.c	FUNCTION_48	IF_1
0x400728b	      0xe800000000	                          call 0x4007290	      3185	quickfix.c	FUNCTION_48	IF_1
0x4007290	            0x85c0	                           test eax, eax	      3185	quickfix.c	FUNCTION_48	IF_1
0x4007292	    0x488b05000000	            mov rax, qword [0x04007299] 	      3185	quickfix.c	FUNCTION_48	IF_1
0x4007299	            0x7455	                            je 0x40072f0	      3185	quickfix.c	FUNCTION_48	IF_1
0x400729b	    0x488ba8501900	          mov rbp, qword [rax + 0x1950] 	      3185	quickfix.c	FUNCTION_48	IF_1
0x40072a2	          0x4885ed	                           test rbp, rbp	      3185	quickfix.c	FUNCTION_48	IF_1
0x40072a5	            0x7449	                            je 0x40072f0	      3185	quickfix.c	FUNCTION_48	IF_1
0x40072a7	    0x488b1d000000	            mov rbx, qword [0x040072ae] 	      3457	quickfix.c	FUNCTION_55	CALL_1
0x40072ae	          0x4885db	                           test rbx, rbx	      3457	quickfix.c	FUNCTION_55	CALL_1
0x40072b1	     0xf8432ffffff	                            je 0x40071e9	      3457	quickfix.c	FUNCTION_55	CALL_1
0x40072b7	    0x4881fd000000	                              cmp rbp, 0	      3457	quickfix.c	FUNCTION_55	CALL_1
0x40072be	     0xf84fcfeffff	                            je 0x40071c0	      3457	quickfix.c	FUNCTION_55	CALL_1
0x40072c4	         0xf1f4000	                         nop dword [rax]	      3457	quickfix.c	FUNCTION_55	CALL_1
0x40072c8	        0x488b7b08	                mov rdi, qword [rbx + 8]	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x40072cc	      0xe800000000	                          call 0x40072d1	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x40072d1	            0x85c0	                           test eax, eax	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x40072d3	            0x7409	                            je 0x40072de	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x40072d5	    0x4839ab501900	          cmp qword [rbx + 0x1950], rbp 	      3442	quickfix.c	FUNCTION_54	IF_1	IF_2
0x40072dc	            0x7492	                            je 0x4007270	      3442	quickfix.c	FUNCTION_54	IF_1	IF_2
0x40072de	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      3457	quickfix.c	FUNCTION_55	CALL_1
0x40072e2	          0x4885db	                           test rbx, rbx	      3457	quickfix.c	FUNCTION_55	CALL_1
0x40072e5	            0x75e1	                           jne 0x40072c8	      3457	quickfix.c	FUNCTION_55	CALL_1
0x40072e7	              0x5b	                                 pop rbx	      3171	quickfix.c	FUNCTION_47
0x40072e8	              0x5d	                                 pop rbp	      3171	quickfix.c	FUNCTION_47
0x40072e9	            0x415c	                                 pop r12	      3171	quickfix.c	FUNCTION_47
0x40072eb	              0xc3	                                     ret	      3171	quickfix.c	FUNCTION_47
0x40072ec	         0xf1f4000	                         nop dword [rax]	      3171	quickfix.c	FUNCTION_47
0x40072f0	    0x488ba8481900	          mov rbp, qword [rax + 0x1948] 	      3185	quickfix.c	FUNCTION_48	IF_1
0x40072f7	          0x4885ed	                           test rbp, rbp	      3186	quickfix.c	FUNCTION_48	IF_1	IF_2
0x40072fa	            0x75ab	                           jne 0x40072a7	      3186	quickfix.c	FUNCTION_48	IF_1	IF_2
0x40072fc	      0xe9e8feffff	                           jmp 0x40071e9	      3186	quickfix.c	FUNCTION_48	IF_1	IF_2
0x4007301	          0x395504	                cmp dword [rbp + 4], edx	      3164	quickfix.c	FUNCTION_47	IF_3
0x4007304	     0xf8e89feffff	                           jle 0x4007193	      3164	quickfix.c	FUNCTION_47	IF_3
0x400730a	      0xe9dafeffff	                           jmp 0x40071e9	      3164	quickfix.c	FUNCTION_47	IF_3
set_errorlist	functions,0:WHILE,0:DO,0:CALL,5:SWITCH,0:IF,5:ELSE,2:FOR,0	740
0x400aae0	            0x4157	                                push r15	      5760	quickfix.c	FUNCTION_105
0x400aae2	            0x4156	                                push r14	      5760	quickfix.c	FUNCTION_105
0x400aae4	          0x4189d6	                           mov r14d, edx	      5760	quickfix.c	FUNCTION_105
0x400aae7	            0x4155	                                push r13	      5760	quickfix.c	FUNCTION_105
0x400aae9	            0x4154	                                push r12	      5760	quickfix.c	FUNCTION_105
0x400aaeb	          0x4989fd	                            mov r13, rdi	      5760	quickfix.c	FUNCTION_105
0x400aaee	              0x55	                                push rbp	      5760	quickfix.c	FUNCTION_105
0x400aaef	              0x53	                                push rbx	      5760	quickfix.c	FUNCTION_105
0x400aaf0	          0x4c89c3	                             mov rbx, r8	      5760	quickfix.c	FUNCTION_105
0x400aaf3	        0x4883ec28	                           sub rsp, 0x28	      5760	quickfix.c	FUNCTION_105
0x400aaf7	          0x4885ff	                           test rdi, rdi	      5764	quickfix.c	FUNCTION_105	IF_1
0x400aafa	      0x4889742418	             mov qword [rsp + 0x18], rsi	      5760	quickfix.c	FUNCTION_105
0x400aaff	      0x48894c2410	             mov qword [rsp + 0x10], rcx	      5760	quickfix.c	FUNCTION_105
0x400ab04	     0xf84f6010000	                            je 0x400ad00	      5764	quickfix.c	FUNCTION_105	IF_1
0x400ab0a	        0x488b7f08	                mov rdi, qword [rdi + 8]	      1576	quickfix.c	FUNCTION_19	IF_1
0x400ab0e	      0xe800000000	                          call 0x400ab13	      1576	quickfix.c	FUNCTION_19	IF_1
0x400ab13	            0x85c0	                           test eax, eax	      1576	quickfix.c	FUNCTION_19	IF_1
0x400ab15	    0x498bad501900	          mov rbp, qword [r13 + 0x1950] 	      1576	quickfix.c	FUNCTION_19	IF_1
0x400ab1c	     0xf8416010000	                            je 0x400ac38	      1576	quickfix.c	FUNCTION_19	IF_1
0x400ab22	          0x4885ed	                           test rbp, rbp	      1576	quickfix.c	FUNCTION_19	IF_1
0x400ab25	     0xf842e010000	                            je 0x400ac59	      1576	quickfix.c	FUNCTION_19	IF_1
0x400ab2b	        0x4183fe66	                          cmp r14d, 0x66	      5771	quickfix.c	FUNCTION_105	IF_3
0x400ab2f	     0xf8463050000	                            je 0x400b098	      5771	quickfix.c	FUNCTION_105	IF_3
0x400ab35	          0x4885db	                           test rbx, rbx	      5776	quickfix.c	FUNCTION_105	ELSE_1	IF_4
0x400ab38	     0xf8492020000	                            je 0x400add0	      5776	quickfix.c	FUNCTION_105	ELSE_1	IF_4
0x400ab3e	        0x4183fe20	                          cmp r14d, 0x20	      5650	quickfix.c	FUNCTION_102	IF_1
0x400ab42	        0x448b6508	               mov r12d, dword [rbp + 8]	      5650	quickfix.c	FUNCTION_102	IF_1
0x400ab46	     0xf8474010000	                            je 0x400acc0	      5650	quickfix.c	FUNCTION_102	IF_1
0x400ab4c	        0x443b6504	               cmp r12d, dword [rbp + 4]	      5650	quickfix.c	FUNCTION_102	IF_1
0x400ab50	     0xf846a010000	                            je 0x400acc0	      5650	quickfix.c	FUNCTION_102	IF_1
0x400ab56	      0xbaffffffff	                     mov edx, 0xffffffff	      5484	quickfix.c	FUNCTION_97	IF_1	CALL_1
0x400ab5b	      0xbe00000000	                              mov esi, 0	      5484	quickfix.c	FUNCTION_97	IF_1	CALL_1
0x400ab60	          0x4889df	                            mov rdi, rbx	      5484	quickfix.c	FUNCTION_97	IF_1	CALL_1
0x400ab63	      0xe800000000	                          call 0x400ab68	      5484	quickfix.c	FUNCTION_97	IF_1	CALL_1
0x400ab68	          0x4885c0	                           test rax, rax	      5484	quickfix.c	FUNCTION_97	IF_1	CALL_1
0x400ab6b	            0x744f	                            je 0x400abbc	      5484	quickfix.c	FUNCTION_97	IF_1	CALL_1
0x400ab6d	            0x31c9	                            xor ecx, ecx	      5648	quickfix.c	FUNCTION_102
0x400ab6f	            0x8b10	                    mov edx, dword [rax]	      5487	quickfix.c	FUNCTION_97	IF_1	IF_2
0x400ab71	          0x83fa01	                              cmp edx, 1	      5487	quickfix.c	FUNCTION_97	IF_1	IF_2
0x400ab74	     0xf849e020000	                            je 0x400ae18	      5487	quickfix.c	FUNCTION_97	IF_1	IF_2
0x400ab7a	          0x83fa02	                              cmp edx, 2	      5508	quickfix.c	FUNCTION_97	IF_1	ELSE_3	IF_7
0x400ab7d	     0xf859d000000	                           jne 0x400ac20	      5508	quickfix.c	FUNCTION_97	IF_1	ELSE_3	IF_7
0x400ab83	        0x488b4008	                mov rax, qword [rax + 8]	      5509	quickfix.c	FUNCTION_97	IF_1	ELSE_3	IF_7
0x400ab87	          0x4885c0	                           test rax, rax	      5509	quickfix.c	FUNCTION_97	IF_1	ELSE_3	IF_7
0x400ab8a	     0xf8490000000	                            je 0x400ac20	      5509	quickfix.c	FUNCTION_97	IF_1	ELSE_3	IF_7
0x400ab90	          0x803824	                    cmp byte [rax], 0x24	      5510	quickfix.c	FUNCTION_97	IF_1	ELSE_3	IF_7	CALL_2
0x400ab93	     0xf8587000000	                           jne 0x400ac20	      5510	quickfix.c	FUNCTION_97	IF_1	ELSE_3	IF_7	CALL_2
0x400ab99	        0x80780100	                   cmp byte [rax + 1], 0	      5510	quickfix.c	FUNCTION_97	IF_1	ELSE_3	IF_7	CALL_2
0x400ab9d	     0xf857d000000	                           jne 0x400ac20	      5510	quickfix.c	FUNCTION_97	IF_1	ELSE_3	IF_7	CALL_2
0x400aba3	        0x448b6504	               mov r12d, dword [rbp + 4]	      5512	quickfix.c	FUNCTION_97	IF_1	ELSE_3	IF_7	IF_8
0x400aba7	          0x4585e4	                         test r12d, r12d	      5512	quickfix.c	FUNCTION_97	IF_1	ELSE_3	IF_7	IF_8
0x400abaa	     0xf8ec0040000	                           jle 0x400b070	      5512	quickfix.c	FUNCTION_97	IF_1	ELSE_3	IF_7	IF_8
0x400abb0	        0x4183ec01	                             sub r12d, 1	      5513	quickfix.c	FUNCTION_97	IF_1	ELSE_3	IF_7	IF_8
0x400abb4	            0x85c9	                           test ecx, ecx	      5523	quickfix.c	FUNCTION_97	ELSE_5	ELSE_6	IF_10	CALL_3
0x400abb6	     0xf8534010000	                           jne 0x400acf0	      5523	quickfix.c	FUNCTION_97	ELSE_5	ELSE_6	IF_10	CALL_3
0x400abbc	      0xbaffffffff	                     mov edx, 0xffffffff	      5523	quickfix.c	FUNCTION_97	ELSE_5	ELSE_6	IF_10	CALL_3
0x400abc1	      0xbe00000000	                              mov esi, 0	      5523	quickfix.c	FUNCTION_97	ELSE_5	ELSE_6	IF_10	CALL_3
0x400abc6	          0x4889df	                            mov rdi, rbx	      5523	quickfix.c	FUNCTION_97	ELSE_5	ELSE_6	IF_10	CALL_3
0x400abc9	      0xe800000000	                          call 0x400abce	      5523	quickfix.c	FUNCTION_97	ELSE_5	ELSE_6	IF_10	CALL_3
0x400abce	          0x4885c0	                           test rax, rax	      5523	quickfix.c	FUNCTION_97	ELSE_5	ELSE_6	IF_10	CALL_3
0x400abd1	     0xf8481040000	                            je 0x400b058	      5523	quickfix.c	FUNCTION_97	ELSE_5	ELSE_6	IF_10	CALL_3
0x400abd7	          0x833801	                      cmp dword [rax], 1	      5526	quickfix.c	FUNCTION_97	ELSE_5	ELSE_6	IF_10	IF_11
0x400abda	            0x7544	                           jne 0x400ac20	      5526	quickfix.c	FUNCTION_97	ELSE_5	ELSE_6	IF_10	IF_11
0x400abdc	          0x8b5504	                mov edx, dword [rbp + 4]	      4228	quickfix.c	FUNCTION_72	FOR_1
0x400abdf	        0x488b4008	                mov rax, qword [rax + 8]	      5529	quickfix.c	FUNCTION_97	ELSE_5	ELSE_6	IF_10	CALL_4
0x400abe3	            0x85d2	                           test edx, edx	      4228	quickfix.c	FUNCTION_72	FOR_1
0x400abe5	            0x89c1	                            mov ecx, eax	      5529	quickfix.c	FUNCTION_97	ELSE_5	ELSE_6	IF_10	CALL_4
0x400abe7	            0x7e37	                           jle 0x400ac20	      4228	quickfix.c	FUNCTION_72	FOR_1
0x400abe9	          0x3b4510	            cmp eax, dword [rbp + 0x10] 	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x400abec	     0xf84850b0000	                            je 0x400b777	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x400abf2	    0x488d85880000	                   lea rax, [rbp + 0x88]	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x400abf9	          0x4531e4	                          xor r12d, r12d	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x400abfc	            0xeb0f	                           jmp 0x400ac0d	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x400abfe	            0x6690	                                     nop	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x400ac00	        0x4883c078	                           add rax, 0x78	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x400ac04	          0x3b4888	             cmp ecx, dword [rax - 0x78]	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x400ac07	     0xf844b040000	                            je 0x400b058	      4229	quickfix.c	FUNCTION_72	FOR_1	IF_1
0x400ac0d	        0x4183c401	                             add r12d, 1	      4228	quickfix.c	FUNCTION_72	FOR_1
0x400ac11	          0x4439e2	                           cmp edx, r12d	      4228	quickfix.c	FUNCTION_72	FOR_1
0x400ac14	            0x75ea	                           jne 0x400ac00	      4228	quickfix.c	FUNCTION_72	FOR_1
0x400ac16	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4228	quickfix.c	FUNCTION_72	FOR_1
0x400ac20	            0x31c0	                            xor eax, eax	      5655	quickfix.c	FUNCTION_102	IF_2
0x400ac22	        0x4883c428	                           add rsp, 0x28	      5786	quickfix.c	FUNCTION_105
0x400ac26	              0x5b	                                 pop rbx	      5786	quickfix.c	FUNCTION_105
0x400ac27	              0x5d	                                 pop rbp	      5786	quickfix.c	FUNCTION_105
0x400ac28	            0x415c	                                 pop r12	      5786	quickfix.c	FUNCTION_105
0x400ac2a	            0x415d	                                 pop r13	      5786	quickfix.c	FUNCTION_105
0x400ac2c	            0x415e	                                 pop r14	      5786	quickfix.c	FUNCTION_105
0x400ac2e	            0x415f	                                 pop r15	      5786	quickfix.c	FUNCTION_105
0x400ac30	              0xc3	                                     ret	      5786	quickfix.c	FUNCTION_105
0x400ac31	     0xf1f80000000	                         nop dword [rax]	      5786	quickfix.c	FUNCTION_105
0x400ac38	          0x4885ed	                           test rbp, rbp	      1422	quickfix.c	FUNCTION_15	IF_1
0x400ac3b	            0x741c	                            je 0x400ac59	      1422	quickfix.c	FUNCTION_15	IF_1
0x400ac3d	          0x8b4500	                    mov eax, dword [rbp]	      1426	quickfix.c	FUNCTION_15
0x400ac40	    0x49c785501900	            mov qword [r13 + 0x1950], 0 	      1424	quickfix.c	FUNCTION_15
0x400ac4b	          0x83e801	                              sub eax, 1	      1426	quickfix.c	FUNCTION_15
0x400ac4e	            0x85c0	                           test eax, eax	      1427	quickfix.c	FUNCTION_15	IF_2
0x400ac50	          0x894500	                    mov dword [rbp], eax	      1426	quickfix.c	FUNCTION_15
0x400ac53	     0xf8eb7000000	                           jle 0x400ad10	      1427	quickfix.c	FUNCTION_15	IF_2
0x400ac59	    0x498bad481900	          mov rbp, qword [r13 + 0x1948] 	      1586	quickfix.c	FUNCTION_19	IF_2
0x400ac60	          0x4885ed	                           test rbp, rbp	      1586	quickfix.c	FUNCTION_19	IF_2
0x400ac63	     0xf85c2feffff	                           jne 0x400ab2b	      1586	quickfix.c	FUNCTION_19	IF_2
0x400ac69	      0xbfc0040000	                          mov edi, 0x4c0	      1559	quickfix.c	FUNCTION_18	CALL_1
0x400ac6e	      0xe800000000	                          call 0x400ac73	      1559	quickfix.c	FUNCTION_18	CALL_1
0x400ac73	          0x4885c0	                           test rax, rax	      1560	quickfix.c	FUNCTION_18	IF_1
0x400ac76	          0x4889c5	                            mov rbp, rax	      1559	quickfix.c	FUNCTION_18	CALL_1
0x400ac79	     0xf84000b0000	                            je 0x400b77f	      1560	quickfix.c	FUNCTION_18	IF_1
0x400ac7f	        0x488d7808	                      lea rdi, [rax + 8]	        90	string3.h	FUNCTION_118	CALL_6
0x400ac83	          0x4889c1	                            mov rcx, rax	        90	string3.h	FUNCTION_118	CALL_6
0x400ac86	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_118	CALL_6
0x400ac8d	    0x48c780b80400	              mov qword [rax + 0x4b8], 0	        90	string3.h	FUNCTION_118	CALL_6
0x400ac98	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_118	CALL_6
0x400ac9a	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_118	CALL_6
0x400ac9e	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_118	CALL_6
0x400aca1	    0x81c1c0040000	                          add ecx, 0x4c0	        90	string3.h	FUNCTION_118	CALL_6
0x400aca7	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_118	CALL_6
0x400acaa	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_118	CALL_6
0x400acad	        0x83450001	                      add dword [rbp], 1	      1563	quickfix.c	FUNCTION_18	IF_1
0x400acb1	    0x4989ad481900	          mov qword [r13 + 0x1948], rbp 	      1587	quickfix.c	FUNCTION_19	CALL_2
0x400acb8	      0xe96efeffff	                           jmp 0x400ab2b	      1587	quickfix.c	FUNCTION_19	CALL_2
0x400acbd	           0xf1f00	                         nop dword [rax]	      1587	quickfix.c	FUNCTION_19	CALL_2
0x400acc0	      0xbaffffffff	                     mov edx, 0xffffffff	      5484	quickfix.c	FUNCTION_97	IF_1	CALL_1
0x400acc5	      0xbe00000000	                              mov esi, 0	      5484	quickfix.c	FUNCTION_97	IF_1	CALL_1
0x400acca	          0x4889df	                            mov rdi, rbx	      5484	quickfix.c	FUNCTION_97	IF_1	CALL_1
0x400accd	      0xe800000000	                          call 0x400acd2	      5484	quickfix.c	FUNCTION_97	IF_1	CALL_1
0x400acd2	          0x4885c0	                           test rax, rax	      5484	quickfix.c	FUNCTION_97	IF_1	CALL_1
0x400acd5	      0xb901000000	                              mov ecx, 1	      5484	quickfix.c	FUNCTION_97	IF_1	CALL_1
0x400acda	     0xf858ffeffff	                           jne 0x400ab6f	      5484	quickfix.c	FUNCTION_97	IF_1	CALL_1
0x400ace0	        0x4183fcff	            cmp r12d, 0xffffffffffffffff	      5654	quickfix.c	FUNCTION_102	IF_2
0x400ace4	     0xf8436ffffff	                            je 0x400ac20	      5654	quickfix.c	FUNCTION_102	IF_2
0x400acea	    0x660f1f440000	                    nop word [rax + rax]	      5654	quickfix.c	FUNCTION_102	IF_2
0x400acf0	          0x4489e0	                           mov eax, r12d	      5523	quickfix.c	FUNCTION_97	ELSE_5	ELSE_6	IF_10	CALL_3
0x400acf3	      0xe982030000	                           jmp 0x400b07a	      5523	quickfix.c	FUNCTION_97	ELSE_5	ELSE_6	IF_10	CALL_3
0x400acf8	     0xf1f84000000	                   nop dword [rax + rax]	      5523	quickfix.c	FUNCTION_97	ELSE_5	ELSE_6	IF_10	CALL_3
0x400ad00	      0xbd00000000	                              mov ebp, 0	      5761	quickfix.c	FUNCTION_105
0x400ad05	      0xe921feffff	                           jmp 0x400ab2b	      5761	quickfix.c	FUNCTION_105
0x400ad0a	    0x660f1f440000	                    nop word [rax + rax]	      5761	quickfix.c	FUNCTION_105
0x400ad10	          0x8b7d04	                mov edi, dword [rbp + 4]	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400ad13	          0x4531e4	                          xor r12d, r12d	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400ad16	            0x85ff	                           test edi, edi	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400ad18	     0xf8e8e000000	                           jle 0x400adac	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400ad1e	            0x6690	                                     nop	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400ad20	          0x4889ef	                            mov rdi, rbp	      3031	quickfix.c	FUNCTION_44	CALL_1
0x400ad23	          0x4d63fc	                        movsxd r15, r12d	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400ad26	          0x4489e6	                           mov esi, r12d	      3031	quickfix.c	FUNCTION_44	CALL_1
0x400ad29	      0xe8625fffff	                  call sym.qf_free_items	      3031	quickfix.c	FUNCTION_44	CALL_1
0x400ad2e	    0x4a8d0cfd0000	                        lea rcx, [r15*8]	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400ad36	          0x4c89fa	                            mov rdx, r15	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400ad39	        0x48c1e207	                              shl rdx, 7	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400ad3d	          0x4829ca	                            sub rdx, rcx	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400ad40	          0x4801ea	                            add rdx, rbp	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400ad43	        0x488b7a40	            mov rdi, qword [rdx + 0x40] 	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400ad47	      0x4889542408	                mov qword [rsp + 8], rdx	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400ad4c	          0x4885ff	                           test rdi, rdi	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400ad4f	            0x7412	                            je 0x400ad63	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400ad51	      0xe800000000	                          call 0x400ad56	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400ad56	      0x488b542408	                mov rdx, qword [rsp + 8]	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400ad5b	    0x48c742400000	               mov qword [rdx + 0x40], 0	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400ad63	    0x4a8d14fd0000	                        lea rdx, [r15*8]	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400ad6b	          0x4c89f8	                            mov rax, r15	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400ad6e	        0x4183c401	                             add r12d, 1	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400ad72	        0x48c1e007	                              shl rax, 7	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400ad76	          0x4829d0	                            sub rax, rdx	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400ad79	      0x4c8d7c0500	                    lea r15, [rbp + rax]	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400ad7e	        0x498b7f48	            mov rdi, qword [r15 + 0x48] 	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400ad82	      0xe800000000	                          call 0x400ad87	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400ad87	    0x49c747480000	               mov qword [r15 + 0x48], 0	      3035	quickfix.c	FUNCTION_44
0x400ad8f	    0x41c747100000	               mov dword [r15 + 0x10], 0	      3036	quickfix.c	FUNCTION_44
0x400ad97	    0x49c787800000	               mov qword [r15 + 0x80], 0	      3037	quickfix.c	FUNCTION_44
0x400ada2	        0x443b6504	               cmp r12d, dword [rbp + 4]	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400ada6	     0xf8c74ffffff	                            jl 0x400ad20	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400adac	          0x4889ef	                            mov rdi, rbp	      1432	quickfix.c	FUNCTION_15	IF_2	CALL_2
0x400adaf	      0xe800000000	                          call 0x400adb4	      1432	quickfix.c	FUNCTION_15	IF_2	CALL_2
0x400adb4	    0x498bad481900	          mov rbp, qword [r13 + 0x1948] 	      1586	quickfix.c	FUNCTION_19	IF_2
0x400adbb	          0x4885ed	                           test rbp, rbp	      1586	quickfix.c	FUNCTION_19	IF_2
0x400adbe	     0xf8567fdffff	                           jne 0x400ab2b	      1586	quickfix.c	FUNCTION_19	IF_2
0x400adc4	      0xe9a0feffff	                           jmp 0x400ac69	      1586	quickfix.c	FUNCTION_19	IF_2
0x400adc9	     0xf1f80000000	                         nop dword [rax]	      1586	quickfix.c	FUNCTION_19	IF_2
0x400add0	          0x8b7508	                mov esi, dword [rbp + 8]	      5780	quickfix.c	FUNCTION_105	ELSE_2	CALL_4
0x400add3	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      5780	quickfix.c	FUNCTION_105	ELSE_2	CALL_4
0x400add8	          0x4589f0	                           mov r8d, r14d	      5780	quickfix.c	FUNCTION_105	ELSE_2	CALL_4
0x400addb	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      5780	quickfix.c	FUNCTION_105	ELSE_2	CALL_4
0x400ade0	          0x4889ef	                            mov rdi, rbp	      5780	quickfix.c	FUNCTION_105	ELSE_2	CALL_4
0x400ade3	      0xe8c875ffff	          call sym.qf_add_entries.isra.4	      5780	quickfix.c	FUNCTION_105	ELSE_2	CALL_4
0x400ade8	          0x83f801	                              cmp eax, 1	      5781	quickfix.c	FUNCTION_105	ELSE_2	IF_5
0x400adeb	     0xf8531feffff	                           jne 0x400ac22	      5781	quickfix.c	FUNCTION_105	ELSE_2	IF_5
0x400adf1	        0x48635508	            movsxd rdx, dword [rbp + 8] 	      3701	quickfix.c	FUNCTION_61
0x400adf5	    0x488d0cd50000	                        lea rcx, [rdx*8]	      3701	quickfix.c	FUNCTION_61
0x400adfd	        0x48c1e207	                              shl rdx, 7	      3701	quickfix.c	FUNCTION_61
0x400ae01	          0x4829ca	                            sub rdx, rcx	      3701	quickfix.c	FUNCTION_61
0x400ae04	    0x488384158000	         add qword [rbp + rdx + 0x80], 1	      3701	quickfix.c	FUNCTION_61
0x400ae0d	      0xe910feffff	                           jmp 0x400ac22	      3701	quickfix.c	FUNCTION_61
0x400ae12	    0x660f1f440000	                    nop word [rax + rax]	      3701	quickfix.c	FUNCTION_61
0x400ae18	        0x488b4008	                mov rax, qword [rax + 8]	      5490	quickfix.c	FUNCTION_97	IF_1	IF_2	IF_3
0x400ae1c	          0x8d50ff	                      lea edx, [rax - 1]	      5491	quickfix.c	FUNCTION_97	IF_1	IF_2	IF_3
0x400ae1f	          0x4885c0	                           test rax, rax	      5491	quickfix.c	FUNCTION_97	IF_1	IF_2	IF_3
0x400ae22	        0x440f45e2	                        cmovne r12d, edx	      5491	quickfix.c	FUNCTION_97	IF_1	IF_2	IF_3
0x400ae26	        0x4183fe20	                          cmp r14d, 0x20	      5493	quickfix.c	FUNCTION_97	IF_1	IF_2	IF_4
0x400ae2a	     0xf84c0050000	                            je 0x400b3f0	      5493	quickfix.c	FUNCTION_97	IF_1	IF_2	IF_4
0x400ae30	        0x4183fe61	                          cmp r14d, 0x61	      5493	quickfix.c	FUNCTION_97	IF_1	IF_2	IF_4
0x400ae34	     0xf84b6050000	                            je 0x400b3f0	      5493	quickfix.c	FUNCTION_97	IF_1	IF_2	IF_4
0x400ae3a	          0x4585e4	                         test r12d, r12d	      5503	quickfix.c	FUNCTION_97	IF_1	IF_2	ELSE_1	IF_5
0x400ae3d	     0xf88ddfdffff	                            js 0x400ac20	      5503	quickfix.c	FUNCTION_97	IF_1	IF_2	ELSE_1	IF_5
0x400ae43	        0x443b6504	               cmp r12d, dword [rbp + 4]	      5503	quickfix.c	FUNCTION_97	IF_1	IF_2	ELSE_1	IF_5
0x400ae47	     0xf8dd3fdffff	                           jge 0x400ac20	      5503	quickfix.c	FUNCTION_97	IF_1	IF_2	ELSE_1	IF_5
0x400ae4d	        0x4183fe20	                          cmp r14d, 0x20	      5505	quickfix.c	FUNCTION_97	IF_1	IF_2	ELSE_2	IF_6
0x400ae51	     0xf845dfdffff	                            je 0x400abb4	      5505	quickfix.c	FUNCTION_97	IF_1	IF_2	ELSE_2	IF_6
0x400ae57	      0xbaffffffff	                     mov edx, 0xffffffff	      5523	quickfix.c	FUNCTION_97	ELSE_5	ELSE_6	IF_10	CALL_3
0x400ae5c	      0xbe00000000	                              mov esi, 0	      5523	quickfix.c	FUNCTION_97	ELSE_5	ELSE_6	IF_10	CALL_3
0x400ae61	          0x4889df	                            mov rdi, rbx	      5523	quickfix.c	FUNCTION_97	ELSE_5	ELSE_6	IF_10	CALL_3
0x400ae64	      0xe800000000	                          call 0x400ae69	      5523	quickfix.c	FUNCTION_97	ELSE_5	ELSE_6	IF_10	CALL_3
0x400ae69	          0x4885c0	                           test rax, rax	      5523	quickfix.c	FUNCTION_97	ELSE_5	ELSE_6	IF_10	CALL_3
0x400ae6c	     0xf8565fdffff	                           jne 0x400abd7	      5523	quickfix.c	FUNCTION_97	ELSE_5	ELSE_6	IF_10	CALL_3
0x400ae72	    0x660f1f440000	                    nop word [rax + rax]	      5523	quickfix.c	FUNCTION_97	ELSE_5	ELSE_6	IF_10	CALL_3
0x400ae78	      0xbaffffffff	                     mov edx, 0xffffffff	      5664	quickfix.c	FUNCTION_102	IF_4	CALL_3
0x400ae7d	      0xbe00000000	                              mov esi, 0	      5664	quickfix.c	FUNCTION_102	IF_4	CALL_3
0x400ae82	          0x4889df	                            mov rdi, rbx	      5664	quickfix.c	FUNCTION_102	IF_4	CALL_3
0x400ae85	      0xe800000000	                          call 0x400ae8a	      5664	quickfix.c	FUNCTION_102	IF_4	CALL_3
0x400ae8a	          0x4531ff	                          xor r15d, r15d	      5646	quickfix.c	FUNCTION_102
0x400ae8d	          0x4885c0	                           test rax, rax	      5664	quickfix.c	FUNCTION_102	IF_4	CALL_3
0x400ae90	            0x7409	                            je 0x400ae9b	      5664	quickfix.c	FUNCTION_102	IF_4	CALL_3
0x400ae92	          0x833802	                      cmp dword [rax], 2	      5541	quickfix.c	FUNCTION_98	IF_1
0x400ae95	     0xf8475050000	                            je 0x400b410	      5541	quickfix.c	FUNCTION_98	IF_1
0x400ae9b	      0xbaffffffff	                     mov edx, 0xffffffff	      5666	quickfix.c	FUNCTION_102	IF_5	CALL_5
0x400aea0	      0xbe00000000	                              mov esi, 0	      5666	quickfix.c	FUNCTION_102	IF_5	CALL_5
0x400aea5	          0x4889df	                            mov rdi, rbx	      5666	quickfix.c	FUNCTION_102	IF_5	CALL_5
0x400aea8	      0xe800000000	                          call 0x400aead	      5666	quickfix.c	FUNCTION_102	IF_5	CALL_5
0x400aead	          0x4885c0	                           test rax, rax	      5666	quickfix.c	FUNCTION_102	IF_5	CALL_5
0x400aeb0	            0x740c	                            je 0x400aebe	      5666	quickfix.c	FUNCTION_102	IF_5	CALL_5
0x400aeb2	          0x4531ff	                          xor r15d, r15d	      5563	quickfix.c	FUNCTION_99	IF_1
0x400aeb5	          0x833805	                      cmp dword [rax], 5	      5562	quickfix.c	FUNCTION_99	IF_1
0x400aeb8	     0xf84a2050000	                            je 0x400b460	      5562	quickfix.c	FUNCTION_99	IF_1
0x400aebe	      0xbaffffffff	                     mov edx, 0xffffffff	      5668	quickfix.c	FUNCTION_102	IF_6	CALL_7
0x400aec3	      0xbe00000000	                              mov esi, 0	      5668	quickfix.c	FUNCTION_102	IF_6	CALL_7
0x400aec8	          0x4889df	                            mov rdi, rbx	      5668	quickfix.c	FUNCTION_102	IF_6	CALL_7
0x400aecb	      0xe800000000	                          call 0x400aed0	      5668	quickfix.c	FUNCTION_102	IF_6	CALL_7
0x400aed0	          0x4885c0	                           test rax, rax	      5668	quickfix.c	FUNCTION_102	IF_6	CALL_7
0x400aed3	          0x4989c5	                            mov r13, rax	      5668	quickfix.c	FUNCTION_102	IF_6	CALL_7
0x400aed6	     0xf844c010000	                            je 0x400b028	      5668	quickfix.c	FUNCTION_102	IF_6	CALL_7
0x400aedc	      0xbaffffffff	                     mov edx, 0xffffffff	      5599	quickfix.c	FUNCTION_100	IF_1	CALL_1
0x400aee1	      0xbe00000000	                              mov esi, 0	      5599	quickfix.c	FUNCTION_100	IF_1	CALL_1
0x400aee6	          0x4889df	                            mov rdi, rbx	      5599	quickfix.c	FUNCTION_100	IF_1	CALL_1
0x400aee9	    0x4c8b3d000000	            mov r15, qword [0x0400aef0] 	      5594	quickfix.c	FUNCTION_100
0x400aef0	      0xe800000000	                          call 0x400aef5	      5599	quickfix.c	FUNCTION_100	IF_1	CALL_1
0x400aef5	          0x4885c0	                           test rax, rax	      5599	quickfix.c	FUNCTION_100	IF_1	CALL_1
0x400aef8	     0xf84af000000	                            je 0x400afad	      5599	quickfix.c	FUNCTION_100	IF_1	CALL_1
0x400aefe	          0x833802	                      cmp dword [rax], 2	      5601	quickfix.c	FUNCTION_100	IF_1	IF_2
0x400af01	     0xf8499000000	                            je 0x400afa0	      5601	quickfix.c	FUNCTION_100	IF_1	IF_2
0x400af07	      0xbaffffffff	                     mov edx, 0xffffffff	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x400af0c	      0xbe00000000	                              mov esi, 0	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x400af11	          0x4889df	                            mov rdi, rbx	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x400af14	      0xe800000000	                          call 0x400af19	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x400af19	          0x4885c0	                           test rax, rax	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x400af1c	          0x4989c6	                            mov r14, rax	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x400af1f	     0xf84fbfcffff	                            je 0x400ac20	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x400af25	          0x4d63ec	                        movsxd r13, r12d	      5628	quickfix.c	FUNCTION_101	CALL_1
0x400af28	    0x4a8d14ed0000	                        lea rdx, [r13*8]	      5628	quickfix.c	FUNCTION_101	CALL_1
0x400af30	          0x4c89e8	                            mov rax, r13	      5628	quickfix.c	FUNCTION_101	CALL_1
0x400af33	        0x48c1e007	                              shl rax, 7	      5628	quickfix.c	FUNCTION_101	CALL_1
0x400af37	          0x4829d0	                            sub rax, rdx	      5628	quickfix.c	FUNCTION_101	CALL_1
0x400af3a	      0x488b7c0548	      mov rdi, qword [rbp + rax + 0x48] 	      5628	quickfix.c	FUNCTION_101	CALL_1
0x400af3f	      0xe800000000	                          call 0x400af44	      5628	quickfix.c	FUNCTION_101	CALL_1
0x400af44	      0xe800000000	                          call 0x400af49	      5629	quickfix.c	FUNCTION_101	CALL_2
0x400af49	          0x4885c0	                           test rax, rax	      5630	quickfix.c	FUNCTION_101	IF_1
0x400af4c	          0x4889c3	                            mov rbx, rax	      5629	quickfix.c	FUNCTION_101	CALL_2
0x400af4f	            0x740b	                            je 0x400af5c	      5630	quickfix.c	FUNCTION_101	IF_1
0x400af51	          0x4889c6	                            mov rsi, rax	      5631	quickfix.c	FUNCTION_101	CALL_3
0x400af54	          0x4c89f7	                            mov rdi, r14	      5631	quickfix.c	FUNCTION_101	CALL_3
0x400af57	      0xe800000000	                          call 0x400af5c	      5631	quickfix.c	FUNCTION_101	CALL_3
0x400af5c	    0x4a8d04ed0000	                        lea rax, [r13*8]	      5632	quickfix.c	FUNCTION_101
0x400af64	          0x4c89ea	                            mov rdx, r13	      5632	quickfix.c	FUNCTION_101
0x400af67	        0x48c1e207	                              shl rdx, 7	      5632	quickfix.c	FUNCTION_101
0x400af6b	          0x4829c2	                            sub rdx, rax	      5632	quickfix.c	FUNCTION_101
0x400af6e	      0x48895c1548	      mov qword [rbp + rdx + 0x48], rbx 	      5632	quickfix.c	FUNCTION_101
0x400af73	    0x4a8d04ed0000	                        lea rax, [r13*8]	      3701	quickfix.c	FUNCTION_61
0x400af7b	        0x49c1e507	                              shl r13, 7	      3701	quickfix.c	FUNCTION_61
0x400af7f	          0x4929c5	                            sub r13, rax	      3701	quickfix.c	FUNCTION_61
0x400af82	      0xb801000000	                              mov eax, 1	      3701	quickfix.c	FUNCTION_61
0x400af87	    0x4a83842d8000	         add qword [rbp + r13 + 0x80], 1	      3701	quickfix.c	FUNCTION_61
0x400af90	        0x4883c428	                           add rsp, 0x28	      5786	quickfix.c	FUNCTION_105
0x400af94	              0x5b	                                 pop rbx	      5786	quickfix.c	FUNCTION_105
0x400af95	              0x5d	                                 pop rbp	      5786	quickfix.c	FUNCTION_105
0x400af96	            0x415c	                                 pop r12	      5786	quickfix.c	FUNCTION_105
0x400af98	            0x415d	                                 pop r13	      5786	quickfix.c	FUNCTION_105
0x400af9a	            0x415e	                                 pop r14	      5786	quickfix.c	FUNCTION_105
0x400af9c	            0x415f	                                 pop r15	      5786	quickfix.c	FUNCTION_105
0x400af9e	              0xc3	                                     ret	      5786	quickfix.c	FUNCTION_105
0x400af9f	              0x90	                                     nop	      5786	quickfix.c	FUNCTION_105
0x400afa0	        0x4c8b7808	                mov r15, qword [rax + 8]	      5602	quickfix.c	FUNCTION_100	IF_1	IF_2
0x400afa4	          0x4d85ff	                           test r15, r15	      5601	quickfix.c	FUNCTION_100	IF_1	IF_2
0x400afa7	     0xf845affffff	                            je 0x400af07	      5601	quickfix.c	FUNCTION_100	IF_1	IF_2
0x400afad	      0x41837d0005	                      cmp dword [r13], 5	      5608	quickfix.c	FUNCTION_100	IF_3
0x400afb2	     0xf854fffffff	                           jne 0x400af07	      5608	quickfix.c	FUNCTION_100	IF_3
0x400afb8	      0x49837d0800	                  cmp qword [r13 + 8], 0	      5608	quickfix.c	FUNCTION_100	IF_3
0x400afbd	     0xf8444ffffff	                            je 0x400af07	      5608	quickfix.c	FUNCTION_100	IF_3
0x400afc3	        0x4183fe72	                          cmp r14d, 0x72	      5611	quickfix.c	FUNCTION_100	IF_4
0x400afc7	     0xf84b6050000	                            je 0x400b583	      5611	quickfix.c	FUNCTION_100	IF_4
0x400afcd	        0x4883ec08	                              sub rsp, 8	      5613	quickfix.c	FUNCTION_100	IF_5	CALL_3
0x400afd1	            0x31c9	                            xor ecx, ecx	      5613	quickfix.c	FUNCTION_100	IF_5	CALL_3
0x400afd3	            0x31d2	                            xor edx, edx	      5613	quickfix.c	FUNCTION_100	IF_5	CALL_3
0x400afd5	            0x6a00	                                  push 0	      5613	quickfix.c	FUNCTION_100	IF_5	CALL_3
0x400afd7	            0x6a00	                                  push 0	      5613	quickfix.c	FUNCTION_100	IF_5	CALL_3
0x400afd9	          0x4d89f9	                             mov r9, r15	      5613	quickfix.c	FUNCTION_100	IF_5	CALL_3
0x400afdc	            0x6a00	                                  push 0	      5613	quickfix.c	FUNCTION_100	IF_5	CALL_3
0x400afde	            0x6a00	                                  push 0	      5613	quickfix.c	FUNCTION_100	IF_5	CALL_3
0x400afe0	          0x4d89e8	                             mov r8, r13	      5613	quickfix.c	FUNCTION_100	IF_5	CALL_3
0x400afe3	            0x6a00	                                  push 0	      5613	quickfix.c	FUNCTION_100	IF_5	CALL_3
0x400afe5	          0x4489e6	                           mov esi, r12d	      5613	quickfix.c	FUNCTION_100	IF_5	CALL_3
0x400afe8	          0x4889ef	                            mov rdi, rbp	      5613	quickfix.c	FUNCTION_100	IF_5	CALL_3
0x400afeb	      0xe8b07bffff	                    call sym.qf_init_ext	      5613	quickfix.c	FUNCTION_100	IF_5	CALL_3
0x400aff0	        0x4883c430	                           add rsp, 0x30	      5613	quickfix.c	FUNCTION_100	IF_5	CALL_3
0x400aff4	            0x85c0	                           test eax, eax	      5613	quickfix.c	FUNCTION_100	IF_5	CALL_3
0x400aff6	     0xf8e0bffffff	                           jle 0x400af07	      5613	quickfix.c	FUNCTION_100	IF_5	CALL_3
0x400affc	      0xbaffffffff	                     mov edx, 0xffffffff	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x400b001	      0xbe00000000	                              mov esi, 0	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x400b006	          0x4889df	                            mov rdi, rbx	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x400b009	      0xe800000000	                          call 0x400b00e	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x400b00e	          0x4885c0	                           test rax, rax	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x400b011	          0x4989c6	                            mov r14, rax	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x400b014	     0xf850bffffff	                           jne 0x400af25	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x400b01a	          0x4d63ec	                        movsxd r13, r12d	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x400b01d	      0xe951ffffff	                           jmp 0x400af73	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x400b022	    0x660f1f440000	                    nop word [rax + rax]	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x400b028	      0xbaffffffff	                     mov edx, 0xffffffff	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x400b02d	      0xbe00000000	                              mov esi, 0	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x400b032	          0x4889df	                            mov rdi, rbx	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x400b035	      0xe800000000	                          call 0x400b03a	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x400b03a	          0x4885c0	                           test rax, rax	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x400b03d	          0x4989c6	                            mov r14, rax	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x400b040	     0xf85dffeffff	                           jne 0x400af25	      5670	quickfix.c	FUNCTION_102	IF_7	CALL_9
0x400b046	        0x4183ff01	                             cmp r15d, 1	      5673	quickfix.c	FUNCTION_102	IF_8
0x400b04a	          0x4489f8	                           mov eax, r15d	      5673	quickfix.c	FUNCTION_102	IF_8
0x400b04d	     0xf85cffbffff	                           jne 0x400ac22	      5673	quickfix.c	FUNCTION_102	IF_8
0x400b053	            0xebc5	                           jmp 0x400b01a	      5673	quickfix.c	FUNCTION_102	IF_8
0x400b055	           0xf1f00	                         nop dword [rax]	      5673	quickfix.c	FUNCTION_102	IF_8
0x400b058	        0x4183fcff	            cmp r12d, 0xffffffffffffffff	      5654	quickfix.c	FUNCTION_102	IF_2
0x400b05c	     0xf8516feffff	                           jne 0x400ae78	      5654	quickfix.c	FUNCTION_102	IF_2
0x400b062	      0xe9b9fbffff	                           jmp 0x400ac20	      5654	quickfix.c	FUNCTION_102	IF_2
0x400b067	    0x660f1f840000	                    nop word [rax + rax]	      5654	quickfix.c	FUNCTION_102	IF_2
0x400b070	            0x31c0	                            xor eax, eax	      5514	quickfix.c	FUNCTION_97	IF_1	ELSE_3	IF_7	ELSE_4	IF_9
0x400b072	            0x85c9	                           test ecx, ecx	      5514	quickfix.c	FUNCTION_97	IF_1	ELSE_3	IF_7	ELSE_4	IF_9
0x400b074	     0xf84a6fbffff	                            je 0x400ac20	      5514	quickfix.c	FUNCTION_97	IF_1	ELSE_3	IF_7	ELSE_4	IF_9
0x400b07a	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      5660	quickfix.c	FUNCTION_102	IF_3	CALL_2
0x400b07f	          0x894508	                mov dword [rbp + 8], eax	      5659	quickfix.c	FUNCTION_102	IF_3
0x400b082	          0x4889ef	                            mov rdi, rbp	      5660	quickfix.c	FUNCTION_102	IF_3	CALL_2
0x400b085	      0xe8b65dffff	                    call sym.qf_new_list	      5660	quickfix.c	FUNCTION_102	IF_3	CALL_2
0x400b08a	        0x448b6508	               mov r12d, dword [rbp + 8]	      5661	quickfix.c	FUNCTION_102	IF_3
0x400b08e	      0xe9e5fdffff	                           jmp 0x400ae78	      5661	quickfix.c	FUNCTION_102	IF_3
0x400b093	       0xf1f440000	                   nop dword [rax + rax]	      5661	quickfix.c	FUNCTION_102	IF_3
0x400b098	    0x488b1d000000	            mov rbx, qword [0x0400b09f] 	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400b09f	          0x4885db	                           test rbx, rbx	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400b0a2	            0x7437	                            je 0x400b0db	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400b0a4	    0x4881fd000000	                              cmp rbp, 0	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400b0ab	     0xf8498000000	                            je 0x400b149	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400b0b1	     0xf1f80000000	                         nop dword [rax]	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400b0b8	        0x488b7b08	                mov rdi, qword [rbx + 8]	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400b0bc	      0xe800000000	                          call 0x400b0c1	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400b0c1	            0x85c0	                           test eax, eax	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400b0c3	            0x740d	                            je 0x400b0d2	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400b0c5	    0x483bab501900	          cmp rbp, qword [rbx + 0x1950] 	      3442	quickfix.c	FUNCTION_54	IF_1	IF_2
0x400b0cc	     0xf848e000000	                            je 0x400b160	      3442	quickfix.c	FUNCTION_54	IF_1	IF_2
0x400b0d2	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400b0d6	          0x4885db	                           test rbx, rbx	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400b0d9	            0x75dd	                           jne 0x400b0b8	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400b0db	          0x4d85ed	                           test r13, r13	      5713	quickfix.c	FUNCTION_104	IF_3
0x400b0de	     0xf8444020000	                            je 0x400b328	      5713	quickfix.c	FUNCTION_104	IF_3
0x400b0e4	        0x498b7d08	                mov rdi, qword [r13 + 8]	      5713	quickfix.c	FUNCTION_104	IF_3
0x400b0e8	      0xe800000000	                          call 0x400b0ed	      5713	quickfix.c	FUNCTION_104	IF_3
0x400b0ed	            0x85c0	                           test eax, eax	      5713	quickfix.c	FUNCTION_104	IF_3
0x400b0ef	     0xf848b000000	                            je 0x400b180	      5713	quickfix.c	FUNCTION_104	IF_3
0x400b0f5	    0x4983bd501900	             cmp qword [r13 + 0x1950], 0	      5713	quickfix.c	FUNCTION_104	IF_3
0x400b0fd	     0xf847d000000	                            je 0x400b180	      5713	quickfix.c	FUNCTION_104	IF_3
0x400b103	    0x4c8b3d000000	            mov r15, qword [0x0400b10a] 	      5687	quickfix.c	FUNCTION_103	CALL_1
0x400b10a	          0x4d85ff	                           test r15, r15	      5687	quickfix.c	FUNCTION_103	CALL_1
0x400b10d	            0x7512	                           jne 0x400b121	      5687	quickfix.c	FUNCTION_103	CALL_1
0x400b10f	            0xeb6f	                           jmp 0x400b180	      5687	quickfix.c	FUNCTION_103	CALL_1
0x400b111	     0xf1f80000000	                         nop dword [rax]	      5687	quickfix.c	FUNCTION_103	CALL_1
0x400b118	        0x4d8b7f20	            mov r15, qword [r15 + 0x20] 	      5687	quickfix.c	FUNCTION_103	CALL_1
0x400b11c	          0x4d85ff	                           test r15, r15	      5687	quickfix.c	FUNCTION_103	CALL_1
0x400b11f	            0x745f	                            je 0x400b180	      5687	quickfix.c	FUNCTION_103	CALL_1
0x400b121	    0x493baf481900	          cmp rbp, qword [r15 + 0x1948] 	      5688	quickfix.c	FUNCTION_103	IF_1	CALL_2
0x400b128	            0x75ee	                           jne 0x400b118	      5688	quickfix.c	FUNCTION_103	IF_1	CALL_2
0x400b12a	        0x498b7f08	                mov rdi, qword [r15 + 8]	      5688	quickfix.c	FUNCTION_103	IF_1	CALL_2
0x400b12e	      0xe800000000	                          call 0x400b133	      5688	quickfix.c	FUNCTION_103	IF_1	CALL_2
0x400b133	            0x85c0	                           test eax, eax	      5688	quickfix.c	FUNCTION_103	IF_1	CALL_2
0x400b135	            0x75e1	                           jne 0x400b118	      5688	quickfix.c	FUNCTION_103	IF_1	CALL_2
0x400b137	      0x4c897c2408	                mov qword [rsp + 8], r15	      5688	quickfix.c	FUNCTION_103	IF_1	CALL_2
0x400b13c	            0xeb4e	                           jmp 0x400b18c	      5688	quickfix.c	FUNCTION_103	IF_1	CALL_2
0x400b13e	            0x6690	                                     nop	      5688	quickfix.c	FUNCTION_103	IF_1	CALL_2
0x400b140	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400b144	          0x4885db	                           test rbx, rbx	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400b147	            0x7492	                            je 0x400b0db	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400b149	        0x488b7b08	                mov rdi, qword [rbx + 8]	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400b14d	      0xe800000000	                          call 0x400b152	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400b152	            0x85c0	                           test eax, eax	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400b154	            0x74ea	                            je 0x400b140	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400b156	    0x4883bb501900	             cmp qword [rbx + 0x1950], 0	      3441	quickfix.c	FUNCTION_54	IF_1	IF_2
0x400b15e	            0x75e0	                           jne 0x400b140	      3441	quickfix.c	FUNCTION_54	IF_1	IF_2
0x400b160	        0x48635d08	            movsxd rbx, dword [rbp + 8] 	      5708	quickfix.c	FUNCTION_104	IF_1	IF_2
0x400b164	          0x3b5d04	                cmp ebx, dword [rbp + 4]	      5708	quickfix.c	FUNCTION_104	IF_1	IF_2
0x400b167	     0xf8c2b040000	                            jl 0x400b598	      5708	quickfix.c	FUNCTION_104	IF_1	IF_2
0x400b16d	            0x31f6	                            xor esi, esi	      5710	quickfix.c	FUNCTION_104	IF_1	CALL_3
0x400b16f	          0x4889ef	                            mov rdi, rbp	      5710	quickfix.c	FUNCTION_104	IF_1	CALL_3
0x400b172	      0xe84966ffff	               call sym.qf_update_buffer	      5710	quickfix.c	FUNCTION_104	IF_1	CALL_3
0x400b177	      0xe95fffffff	                           jmp 0x400b0db	      5710	quickfix.c	FUNCTION_104	IF_1	CALL_3
0x400b17c	         0xf1f4000	                         nop dword [rax]	      5710	quickfix.c	FUNCTION_104	IF_1	CALL_3
0x400b180	          0x4d89ef	                            mov r15, r13	      5688	quickfix.c	FUNCTION_103	IF_1	CALL_2
0x400b183	    0x48c744240800	                  mov qword [rsp + 8], 0	      5702	quickfix.c	FUNCTION_104
0x400b18c	    0x498baf481900	          mov rbp, qword [r15 + 0x1948] 	      1421	quickfix.c	FUNCTION_15
0x400b193	          0x4885ed	                           test rbp, rbp	      1422	quickfix.c	FUNCTION_15	IF_1
0x400b196	            0x741c	                            je 0x400b1b4	      1422	quickfix.c	FUNCTION_15	IF_1
0x400b198	          0x8b4500	                    mov eax, dword [rbp]	      1426	quickfix.c	FUNCTION_15
0x400b19b	    0x49c787481900	            mov qword [r15 + 0x1948], 0 	      1424	quickfix.c	FUNCTION_15
0x400b1a6	          0x83e801	                              sub eax, 1	      1426	quickfix.c	FUNCTION_15
0x400b1a9	            0x85c0	                           test eax, eax	      1427	quickfix.c	FUNCTION_15	IF_2
0x400b1ab	          0x894500	                    mov dword [rbp], eax	      1426	quickfix.c	FUNCTION_15
0x400b1ae	     0xf8e17030000	                           jle 0x400b4cb	      1427	quickfix.c	FUNCTION_15	IF_2
0x400b1b4	    0x498baf501900	          mov rbp, qword [r15 + 0x1950] 	      1421	quickfix.c	FUNCTION_15
0x400b1bb	          0x4885ed	                           test rbp, rbp	      1422	quickfix.c	FUNCTION_15	IF_1
0x400b1be	     0xf84ac000000	                            je 0x400b270	      1422	quickfix.c	FUNCTION_15	IF_1
0x400b1c4	          0x8b4500	                    mov eax, dword [rbp]	      1426	quickfix.c	FUNCTION_15
0x400b1c7	    0x49c787501900	            mov qword [r15 + 0x1950], 0 	      1424	quickfix.c	FUNCTION_15
0x400b1d2	          0x83e801	                              sub eax, 1	      1426	quickfix.c	FUNCTION_15
0x400b1d5	            0x85c0	                           test eax, eax	      1427	quickfix.c	FUNCTION_15	IF_2
0x400b1d7	          0x894500	                    mov dword [rbp], eax	      1426	quickfix.c	FUNCTION_15
0x400b1da	     0xf8f90000000	                            jg 0x400b270	      1427	quickfix.c	FUNCTION_15	IF_2
0x400b1e0	          0x8b5504	                mov edx, dword [rbp + 4]	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400b1e3	          0x4531e4	                          xor r12d, r12d	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400b1e6	            0x85d2	                           test edx, edx	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400b1e8	            0x7e7e	                           jle 0x400b268	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400b1ea	    0x660f1f440000	                    nop word [rax + rax]	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400b1f0	          0x4889ef	                            mov rdi, rbp	      3031	quickfix.c	FUNCTION_44	CALL_1
0x400b1f3	          0x4963dc	                        movsxd rbx, r12d	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b1f6	          0x4489e6	                           mov esi, r12d	      3031	quickfix.c	FUNCTION_44	CALL_1
0x400b1f9	      0xe8925affff	                  call sym.qf_free_items	      3031	quickfix.c	FUNCTION_44	CALL_1
0x400b1fe	          0x4989df	                            mov r15, rbx	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b201	    0x488d04dd0000	                        lea rax, [rbx*8]	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b209	        0x49c1e707	                              shl r15, 7	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b20d	          0x4929c7	                            sub r15, rax	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b210	          0x4901ef	                            add r15, rbp	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b213	        0x498b7f40	            mov rdi, qword [r15 + 0x40] 	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b217	          0x4885ff	                           test rdi, rdi	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b21a	            0x740d	                            je 0x400b229	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b21c	      0xe800000000	                          call 0x400b221	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b221	    0x49c747400000	               mov qword [r15 + 0x40], 0	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b229	    0x488d04dd0000	                        lea rax, [rbx*8]	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400b231	        0x48c1e307	                              shl rbx, 7	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400b235	        0x4183c401	                             add r12d, 1	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400b239	          0x4829c3	                            sub rbx, rax	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400b23c	          0x4801eb	                            add rbx, rbp	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400b23f	        0x488b7b48	            mov rdi, qword [rbx + 0x48] 	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400b243	      0xe800000000	                          call 0x400b248	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400b248	    0x48c743480000	               mov qword [rbx + 0x48], 0	      3035	quickfix.c	FUNCTION_44
0x400b250	    0xc74310000000	               mov dword [rbx + 0x10], 0	      3036	quickfix.c	FUNCTION_44
0x400b257	    0x48c783800000	               mov qword [rbx + 0x80], 0	      3037	quickfix.c	FUNCTION_44
0x400b262	        0x443b6504	               cmp r12d, dword [rbp + 4]	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400b266	            0x7c88	                            jl 0x400b1f0	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400b268	          0x4889ef	                            mov rdi, rbp	      1432	quickfix.c	FUNCTION_15	IF_2	CALL_2
0x400b26b	      0xe800000000	                          call 0x400b270	      1432	quickfix.c	FUNCTION_15	IF_2	CALL_2
0x400b270	        0x498b7d08	                mov rdi, qword [r13 + 8]	      5730	quickfix.c	FUNCTION_104	ELSE_1	IF_6
0x400b274	      0xe800000000	                          call 0x400b279	      5730	quickfix.c	FUNCTION_104	ELSE_1	IF_6
0x400b279	            0x85c0	                           test eax, eax	      5730	quickfix.c	FUNCTION_104	ELSE_1	IF_6
0x400b27b	     0xf845b010000	                            je 0x400b3dc	      5730	quickfix.c	FUNCTION_104	ELSE_1	IF_6
0x400b281	    0x4983bd501900	             cmp qword [r13 + 0x1950], 0	      5730	quickfix.c	FUNCTION_104	ELSE_1	IF_6
0x400b289	     0xf844d010000	                            je 0x400b3dc	      5730	quickfix.c	FUNCTION_104	ELSE_1	IF_6
0x400b28f	      0xbfc0040000	                          mov edi, 0x4c0	      1559	quickfix.c	FUNCTION_18	CALL_1
0x400b294	      0xe800000000	                          call 0x400b299	      1559	quickfix.c	FUNCTION_18	CALL_1
0x400b299	          0x4885c0	                           test rax, rax	      1560	quickfix.c	FUNCTION_18	IF_1
0x400b29c	          0x4989c7	                            mov r15, rax	      1559	quickfix.c	FUNCTION_18	CALL_1
0x400b29f	            0x7432	                            je 0x400b2d3	      1560	quickfix.c	FUNCTION_18	IF_1
0x400b2a1	        0x488d7808	                      lea rdi, [rax + 8]	        90	string3.h	FUNCTION_118	CALL_6
0x400b2a5	          0x4889c1	                            mov rcx, rax	        90	string3.h	FUNCTION_118	CALL_6
0x400b2a8	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_118	CALL_6
0x400b2af	    0x48c780b80400	              mov qword [rax + 0x4b8], 0	        90	string3.h	FUNCTION_118	CALL_6
0x400b2ba	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_118	CALL_6
0x400b2bc	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_118	CALL_6
0x400b2c0	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_118	CALL_6
0x400b2c3	    0x81c1c0040000	                          add ecx, 0x4c0	        90	string3.h	FUNCTION_118	CALL_6
0x400b2c9	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_118	CALL_6
0x400b2cc	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_118	CALL_6
0x400b2cf	        0x41830701	                      add dword [r15], 1	      1563	quickfix.c	FUNCTION_18	IF_1
0x400b2d3	    0x498bad501900	          mov rbp, qword [r13 + 0x1950] 	      1421	quickfix.c	FUNCTION_15
0x400b2da	          0x4885ed	                           test rbp, rbp	      1422	quickfix.c	FUNCTION_15	IF_1
0x400b2dd	            0x741c	                            je 0x400b2fb	      1422	quickfix.c	FUNCTION_15	IF_1
0x400b2df	          0x8b4500	                    mov eax, dword [rbp]	      1426	quickfix.c	FUNCTION_15
0x400b2e2	    0x49c785501900	            mov qword [r13 + 0x1950], 0 	      1424	quickfix.c	FUNCTION_15
0x400b2ed	          0x83e801	                              sub eax, 1	      1426	quickfix.c	FUNCTION_15
0x400b2f0	            0x85c0	                           test eax, eax	      1427	quickfix.c	FUNCTION_15	IF_2
0x400b2f2	          0x894500	                    mov dword [rbp], eax	      1426	quickfix.c	FUNCTION_15
0x400b2f5	     0xf8ee5030000	                           jle 0x400b6e0	      1427	quickfix.c	FUNCTION_15	IF_2
0x400b2fb	      0x488b442408	                mov rax, qword [rsp + 8]	      5740	quickfix.c	FUNCTION_104	ELSE_1	IF_6	IF_7
0x400b300	    0x4d89bd501900	          mov qword [r13 + 0x1950], r15 	      5739	quickfix.c	FUNCTION_104	ELSE_1	IF_6
0x400b307	          0x4885c0	                           test rax, rax	      5740	quickfix.c	FUNCTION_104	ELSE_1	IF_6	IF_7
0x400b30a	     0xf84cc000000	                            je 0x400b3dc	      5740	quickfix.c	FUNCTION_104	ELSE_1	IF_6	IF_7
0x400b310	    0x4c89b8481900	          mov qword [rax + 0x1948], r15 	      5742	quickfix.c	FUNCTION_104	ELSE_1	IF_6	IF_7
0x400b317	        0x41830701	                      add dword [r15], 1	      5743	quickfix.c	FUNCTION_104	ELSE_1	IF_6	IF_7
0x400b31b	      0xb801000000	                              mov eax, 1	      5762	quickfix.c	FUNCTION_105
0x400b320	      0xe9fdf8ffff	                           jmp 0x400ac22	      5762	quickfix.c	FUNCTION_105
0x400b325	           0xf1f00	                         nop dword [rax]	      5762	quickfix.c	FUNCTION_105
0x400b328	    0x8b3500000000	            mov esi, dword [0x0400b32e] 	      1450	quickfix.c	FUNCTION_16	ELSE_1	FOR_1
0x400b32e	          0x4531e4	                          xor r12d, r12d	      1450	quickfix.c	FUNCTION_16	ELSE_1	FOR_1
0x400b331	            0x85f6	                           test esi, esi	      1450	quickfix.c	FUNCTION_16	ELSE_1	FOR_1
0x400b333	     0xf8e95000000	                           jle 0x400b3ce	      1450	quickfix.c	FUNCTION_16	ELSE_1	FOR_1
0x400b339	     0xf1f80000000	                         nop dword [rax]	      1450	quickfix.c	FUNCTION_16	ELSE_1	FOR_1
0x400b340	      0xbf00000000	                              mov edi, 0	      3031	quickfix.c	FUNCTION_44	CALL_1
0x400b345	          0x4963dc	                        movsxd rbx, r12d	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b348	          0x4489e6	                           mov esi, r12d	      3031	quickfix.c	FUNCTION_44	CALL_1
0x400b34b	      0xe84059ffff	                  call sym.qf_free_items	      3031	quickfix.c	FUNCTION_44	CALL_1
0x400b350	          0x4989dd	                            mov r13, rbx	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b353	    0x488d04dd0000	                        lea rax, [rbx*8]	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b35b	        0x49c1e507	                              shl r13, 7	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b35f	          0x4929c5	                            sub r13, rax	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b362	    0x498bbd000000	                    mov rdi, qword [r13]	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b369	    0x4981c5000000	                              add r13, 0	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b370	          0x4885ff	                           test rdi, rdi	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b373	            0x740d	                            je 0x400b382	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b375	      0xe800000000	                          call 0x400b37a	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b37a	    0x49c745400000	               mov qword [r13 + 0x40], 0	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b382	    0x488d04dd0000	                        lea rax, [rbx*8]	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400b38a	        0x48c1e307	                              shl rbx, 7	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400b38e	        0x4183c401	                             add r12d, 1	      1450	quickfix.c	FUNCTION_16	ELSE_1	FOR_1
0x400b392	          0x4829c3	                            sub rbx, rax	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400b395	    0x488bbb000000	                    mov rdi, qword [rbx]	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400b39c	      0xe800000000	                          call 0x400b3a1	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400b3a1	    0x443b25000000	           cmp r12d, dword [0x0400b3a8] 	      1450	quickfix.c	FUNCTION_16	ELSE_1	FOR_1
0x400b3a8	    0x48c783000000	                      mov qword [rbx], 0	      3035	quickfix.c	FUNCTION_44
0x400b3b3	    0xc78300000000	                      mov dword [rbx], 0	      3036	quickfix.c	FUNCTION_44
0x400b3bd	    0x48c783000000	                      mov qword [rbx], 0	      3037	quickfix.c	FUNCTION_44
0x400b3c8	     0xf8c72ffffff	                            jl 0x400b340	      1450	quickfix.c	FUNCTION_16	ELSE_1	FOR_1
0x400b3ce	    0xc74508000000	                  mov dword [rbp + 8], 0	      5727	quickfix.c	FUNCTION_104	IF_5
0x400b3d5	    0xc74504000000	                  mov dword [rbp + 4], 0	      5728	quickfix.c	FUNCTION_104	IF_5
0x400b3dc	      0xb801000000	                              mov eax, 1	      5762	quickfix.c	FUNCTION_105
0x400b3e1	      0xe93cf8ffff	                           jmp 0x400ac22	      5762	quickfix.c	FUNCTION_105
0x400b3e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5762	quickfix.c	FUNCTION_105
0x400b3f0	        0x44396504	               cmp dword [rbp + 4], r12d	      5493	quickfix.c	FUNCTION_97	IF_1	IF_2	IF_4
0x400b3f4	     0xf8540faffff	                           jne 0x400ae3a	      5493	quickfix.c	FUNCTION_97	IF_1	IF_2	IF_4
0x400b3fa	      0x418d4424ff	                      lea eax, [r12 - 1]	      5501	quickfix.c	FUNCTION_97	IF_1	IF_2	IF_4
0x400b3ff	          0x4585e4	                         test r12d, r12d	      5501	quickfix.c	FUNCTION_97	IF_1	IF_2	IF_4
0x400b402	      0xba00000000	                              mov edx, 0	      5501	quickfix.c	FUNCTION_97	IF_1	IF_2	IF_4
0x400b407	           0xf4ec2	                         cmovle eax, edx	      5501	quickfix.c	FUNCTION_97	IF_1	IF_2	IF_4
0x400b40a	      0xe96bfcffff	                           jmp 0x400b07a	      5501	quickfix.c	FUNCTION_97	IF_1	IF_2	IF_4
0x400b40f	              0x90	                                     nop	      5501	quickfix.c	FUNCTION_97	IF_1	IF_2	IF_4
0x400b410	          0x4d63ec	                        movsxd r13, r12d	      5544	quickfix.c	FUNCTION_98	CALL_1
0x400b413	    0x4a8d04ed0000	                        lea rax, [r13*8]	      5544	quickfix.c	FUNCTION_98	CALL_1
0x400b41b	        0x49c1e507	                              shl r13, 7	      5544	quickfix.c	FUNCTION_98	CALL_1
0x400b41f	          0x4929c5	                            sub r13, rax	      5544	quickfix.c	FUNCTION_98	CALL_1
0x400b422	          0x4901ed	                            add r13, rbp	      5544	quickfix.c	FUNCTION_98	CALL_1
0x400b425	        0x498b7d40	            mov rdi, qword [r13 + 0x40] 	      5544	quickfix.c	FUNCTION_98	CALL_1
0x400b429	      0xe800000000	                          call 0x400b42e	      5544	quickfix.c	FUNCTION_98	CALL_1
0x400b42e	      0xba01000000	                              mov edx, 1	      5546	quickfix.c	FUNCTION_98	CALL_2
0x400b433	      0xbe00000000	                              mov esi, 0	      5546	quickfix.c	FUNCTION_98	CALL_2
0x400b438	          0x4889df	                            mov rdi, rbx	      5546	quickfix.c	FUNCTION_98	CALL_2
0x400b43b	      0xe800000000	                          call 0x400b440	      5546	quickfix.c	FUNCTION_98	CALL_2
0x400b440	        0x443b6508	               cmp r12d, dword [rbp + 8]	      5547	quickfix.c	FUNCTION_98	IF_2
0x400b444	        0x49894540	             mov qword [r13 + 0x40], rax	      5545	quickfix.c	FUNCTION_98
0x400b448	     0xf84de010000	                            je 0x400b62c	      5547	quickfix.c	FUNCTION_98	IF_2
0x400b44e	    0x41bf01000000	                             mov r15d, 1	      5550	quickfix.c	FUNCTION_98
0x400b454	      0xe942faffff	                           jmp 0x400ae9b	      5550	quickfix.c	FUNCTION_98
0x400b459	     0xf1f80000000	                         nop dword [rax]	      5550	quickfix.c	FUNCTION_98
0x400b460	          0x4d63ec	                        movsxd r13, r12d	      5565	quickfix.c	FUNCTION_99	CALL_1
0x400b463	      0x4889442408	                mov qword [rsp + 8], rax	      5565	quickfix.c	FUNCTION_99	CALL_1
0x400b468	    0x4a8d04ed0000	                        lea rax, [r13*8]	      5565	quickfix.c	FUNCTION_99	CALL_1
0x400b470	        0x49c1e507	                              shl r13, 7	      5565	quickfix.c	FUNCTION_99	CALL_1
0x400b474	          0x4929c5	                            sub r13, rax	      5565	quickfix.c	FUNCTION_99	CALL_1
0x400b477	      0x4a8d442d00	                    lea rax, [rbp + r13]	      5565	quickfix.c	FUNCTION_99	CALL_1
0x400b47c	        0x488b7840	            mov rdi, qword [rax + 0x40] 	      5565	quickfix.c	FUNCTION_99	CALL_1
0x400b480	      0x4889442410	             mov qword [rsp + 0x10], rax	      5565	quickfix.c	FUNCTION_99	CALL_1
0x400b485	      0xe800000000	                          call 0x400b48a	      5565	quickfix.c	FUNCTION_99	CALL_1
0x400b48a	      0x488b542408	                mov rdx, qword [rsp + 8]	      5566	quickfix.c	FUNCTION_99	CALL_2
0x400b48f	        0x4183fe20	                          cmp r14d, 0x20	      5566	quickfix.c	FUNCTION_99	CALL_2
0x400b493	          0x4989c5	                            mov r13, rax	      5565	quickfix.c	FUNCTION_99	CALL_1
0x400b496	        0x488b5208	                mov rdx, qword [rdx + 8]	      5566	quickfix.c	FUNCTION_99	CALL_2
0x400b49a	     0xf8470010000	                            je 0x400b610	      5566	quickfix.c	FUNCTION_99	CALL_2
0x400b4a0	          0x4589f0	                           mov r8d, r14d	      5566	quickfix.c	FUNCTION_99	CALL_2
0x400b4a3	          0x4889c1	                            mov rcx, rax	      5566	quickfix.c	FUNCTION_99	CALL_2
0x400b4a6	          0x4489e6	                           mov esi, r12d	      5566	quickfix.c	FUNCTION_99	CALL_2
0x400b4a9	          0x4889ef	                            mov rdi, rbp	      5566	quickfix.c	FUNCTION_99	CALL_2
0x400b4ac	      0xe8ff6effff	          call sym.qf_add_entries.isra.4	      5566	quickfix.c	FUNCTION_99	CALL_2
0x400b4b1	        0x4183fe72	                          cmp r14d, 0x72	      5568	quickfix.c	FUNCTION_99	IF_2
0x400b4b5	          0x4189c7	                           mov r15d, eax	      5566	quickfix.c	FUNCTION_99	CALL_2
0x400b4b8	     0xf84a1000000	                            je 0x400b55f	      5568	quickfix.c	FUNCTION_99	IF_2
0x400b4be	          0x4c89ef	                            mov rdi, r13	      5578	quickfix.c	FUNCTION_99	CALL_5
0x400b4c1	      0xe800000000	                          call 0x400b4c6	      5578	quickfix.c	FUNCTION_99	CALL_5
0x400b4c6	      0xe9f3f9ffff	                           jmp 0x400aebe	      5578	quickfix.c	FUNCTION_99	CALL_5
0x400b4cb	          0x8b4d04	                mov ecx, dword [rbp + 4]	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400b4ce	          0x4531e4	                          xor r12d, r12d	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400b4d1	            0x85c9	                           test ecx, ecx	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400b4d3	            0x7e7d	                           jle 0x400b552	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400b4d5	           0xf1f00	                         nop dword [rax]	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400b4d8	          0x4889ef	                            mov rdi, rbp	      3031	quickfix.c	FUNCTION_44	CALL_1
0x400b4db	          0x4963dc	                        movsxd rbx, r12d	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b4de	          0x4489e6	                           mov esi, r12d	      3031	quickfix.c	FUNCTION_44	CALL_1
0x400b4e1	      0xe8aa57ffff	                  call sym.qf_free_items	      3031	quickfix.c	FUNCTION_44	CALL_1
0x400b4e6	    0x488d14dd0000	                        lea rdx, [rbx*8]	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b4ee	          0x4889d8	                            mov rax, rbx	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b4f1	        0x48c1e007	                              shl rax, 7	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b4f5	          0x4829d0	                            sub rax, rdx	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b4f8	      0x4c8d740500	                    lea r14, [rbp + rax]	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b4fd	        0x498b7e40	            mov rdi, qword [r14 + 0x40] 	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b501	          0x4885ff	                           test rdi, rdi	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b504	            0x740d	                            je 0x400b513	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b506	      0xe800000000	                          call 0x400b50b	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b50b	    0x49c746400000	               mov qword [r14 + 0x40], 0	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b513	    0x488d04dd0000	                        lea rax, [rbx*8]	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400b51b	        0x48c1e307	                              shl rbx, 7	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400b51f	        0x4183c401	                             add r12d, 1	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400b523	          0x4829c3	                            sub rbx, rax	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400b526	          0x4801eb	                            add rbx, rbp	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400b529	        0x488b7b48	            mov rdi, qword [rbx + 0x48] 	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400b52d	      0xe800000000	                          call 0x400b532	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400b532	    0x48c743480000	               mov qword [rbx + 0x48], 0	      3035	quickfix.c	FUNCTION_44
0x400b53a	    0xc74310000000	               mov dword [rbx + 0x10], 0	      3036	quickfix.c	FUNCTION_44
0x400b541	    0x48c783800000	               mov qword [rbx + 0x80], 0	      3037	quickfix.c	FUNCTION_44
0x400b54c	        0x443b6504	               cmp r12d, dword [rbp + 4]	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400b550	            0x7c86	                            jl 0x400b4d8	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400b552	          0x4889ef	                            mov rdi, rbp	      1432	quickfix.c	FUNCTION_15	IF_2	CALL_2
0x400b555	      0xe800000000	                          call 0x400b55a	      1432	quickfix.c	FUNCTION_15	IF_2	CALL_2
0x400b55a	      0xe955fcffff	                           jmp 0x400b1b4	      1432	quickfix.c	FUNCTION_15	IF_2	CALL_2
0x400b55f	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5575	quickfix.c	FUNCTION_99	IF_2	CALL_3
0x400b564	        0x488b7840	            mov rdi, qword [rax + 0x40] 	      5575	quickfix.c	FUNCTION_99	IF_2	CALL_3
0x400b568	      0xe800000000	                          call 0x400b56d	      5575	quickfix.c	FUNCTION_99	IF_2	CALL_3
0x400b56d	          0x4c89ef	                            mov rdi, r13	      5576	quickfix.c	FUNCTION_99	IF_2	CALL_4
0x400b570	      0xe800000000	                          call 0x400b575	      5576	quickfix.c	FUNCTION_99	IF_2	CALL_4
0x400b575	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	      5576	quickfix.c	FUNCTION_99	IF_2	CALL_4
0x400b57a	        0x48894140	             mov qword [rcx + 0x40], rax	      5576	quickfix.c	FUNCTION_99	IF_2	CALL_4
0x400b57e	      0xe93bffffff	                           jmp 0x400b4be	      5576	quickfix.c	FUNCTION_99	IF_2	CALL_4
0x400b583	          0x4489e6	                           mov esi, r12d	      5612	quickfix.c	FUNCTION_100	CALL_2
0x400b586	          0x4889ef	                            mov rdi, rbp	      5612	quickfix.c	FUNCTION_100	CALL_2
0x400b589	      0xe80257ffff	                  call sym.qf_free_items	      5612	quickfix.c	FUNCTION_100	CALL_2
0x400b58e	      0xe93afaffff	                           jmp 0x400afcd	      5612	quickfix.c	FUNCTION_100	CALL_2
0x400b593	       0xf1f440000	                   nop dword [rax + rax]	      5612	quickfix.c	FUNCTION_100	CALL_2
0x400b598	          0x4889ef	                            mov rdi, rbp	      3031	quickfix.c	FUNCTION_44	CALL_1
0x400b59b	            0x89de	                            mov esi, ebx	      3031	quickfix.c	FUNCTION_44	CALL_1
0x400b59d	          0x4989dc	                            mov r12, rbx	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b5a0	      0xe8eb56ffff	                  call sym.qf_free_items	      3031	quickfix.c	FUNCTION_44	CALL_1
0x400b5a5	    0x488d04dd0000	                        lea rax, [rbx*8]	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b5ad	        0x49c1e407	                              shl r12, 7	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b5b1	          0x4929c4	                            sub r12, rax	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b5b4	          0x4901ec	                            add r12, rbp	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b5b7	      0x498b7c2440	            mov rdi, qword [r12 + 0x40] 	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b5bc	          0x4885ff	                           test rdi, rdi	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b5bf	            0x740e	                            je 0x400b5cf	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b5c1	      0xe800000000	                          call 0x400b5c6	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b5c6	    0x49c744244000	               mov qword [r12 + 0x40], 0	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b5cf	    0x488d04dd0000	                        lea rax, [rbx*8]	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400b5d7	        0x48c1e307	                              shl rbx, 7	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400b5db	          0x4829c3	                            sub rbx, rax	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400b5de	          0x4801eb	                            add rbx, rbp	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400b5e1	        0x488b7b48	            mov rdi, qword [rbx + 0x48] 	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400b5e5	      0xe800000000	                          call 0x400b5ea	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400b5ea	    0x48c743480000	               mov qword [rbx + 0x48], 0	      3035	quickfix.c	FUNCTION_44
0x400b5f2	    0xc74310000000	               mov dword [rbx + 0x10], 0	      3036	quickfix.c	FUNCTION_44
0x400b5f9	    0x48c783800000	               mov qword [rbx + 0x80], 0	      3037	quickfix.c	FUNCTION_44
0x400b604	      0xe964fbffff	                           jmp 0x400b16d	      3037	quickfix.c	FUNCTION_44
0x400b609	     0xf1f80000000	                         nop dword [rax]	      3037	quickfix.c	FUNCTION_44
0x400b610	    0x41b861000000	                           mov r8d, 0x61	      5566	quickfix.c	FUNCTION_99	CALL_2
0x400b616	          0x4889c1	                            mov rcx, rax	      5566	quickfix.c	FUNCTION_99	CALL_2
0x400b619	          0x4489e6	                           mov esi, r12d	      5566	quickfix.c	FUNCTION_99	CALL_2
0x400b61c	          0x4889ef	                            mov rdi, rbp	      5566	quickfix.c	FUNCTION_99	CALL_2
0x400b61f	      0xe88c6dffff	          call sym.qf_add_entries.isra.4	      5566	quickfix.c	FUNCTION_99	CALL_2
0x400b624	          0x4189c7	                           mov r15d, eax	      5566	quickfix.c	FUNCTION_99	CALL_2
0x400b627	      0xe992feffff	                           jmp 0x400b4be	      5566	quickfix.c	FUNCTION_99	CALL_2
0x400b62c	    0x4c8b2d000000	            mov r13, qword [0x0400b633] 	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400b633	          0x4d85ed	                           test r13, r13	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400b636	     0xf8412feffff	                            je 0x400b44e	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400b63c	    0x4881fd000000	                              cmp rbp, 0	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400b643	            0x7518	                           jne 0x400b65d	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400b645	            0xeb7a	                           jmp 0x400b6c1	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400b647	    0x660f1f840000	                    nop word [rax + rax]	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400b650	        0x4d8b6d20	            mov r13, qword [r13 + 0x20] 	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400b654	          0x4d85ed	                           test r13, r13	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400b657	     0xf84f1fdffff	                            je 0x400b44e	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400b65d	        0x498b7d08	                mov rdi, qword [r13 + 8]	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400b661	      0xe800000000	                          call 0x400b666	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400b666	            0x85c0	                           test eax, eax	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400b668	            0x74e6	                            je 0x400b650	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400b66a	    0x493bad501900	          cmp rbp, qword [r13 + 0x1950] 	      3442	quickfix.c	FUNCTION_54	IF_1	IF_2
0x400b671	            0x75dd	                           jne 0x400b650	      3442	quickfix.c	FUNCTION_54	IF_1	IF_2
0x400b673	        0x48634508	            movsxd rax, dword [rbp + 8] 	      3544	quickfix.c	FUNCTION_59	IF_1
0x400b677	    0x4c8b3d000000	            mov r15, qword [0x0400b67e] 	      3491	quickfix.c	FUNCTION_57	IF_1
0x400b67e	    0x4c892d000000	            mov qword [0x0400b685], r13 	      3492	quickfix.c	FUNCTION_57	IF_1
0x400b685	    0x488d14c50000	                        lea rdx, [rax*8]	      3544	quickfix.c	FUNCTION_59	IF_1
0x400b68d	        0x48c1e007	                              shl rax, 7	      3544	quickfix.c	FUNCTION_59	IF_1
0x400b691	          0x4829d0	                            sub rax, rdx	      3544	quickfix.c	FUNCTION_59	IF_1
0x400b694	      0x488b740540	      mov rsi, qword [rbp + rax + 0x40] 	      3544	quickfix.c	FUNCTION_59	IF_1
0x400b699	          0x4885f6	                           test rsi, rsi	      3544	quickfix.c	FUNCTION_59	IF_1
0x400b69c	            0x740a	                            je 0x400b6a8	      3544	quickfix.c	FUNCTION_59	IF_1
0x400b69e	      0xbf00000000	                              mov edi, 0	      3545	quickfix.c	FUNCTION_59	IF_1	CALL_1
0x400b6a3	      0xe800000000	                          call 0x400b6a8	      3545	quickfix.c	FUNCTION_59	IF_1	CALL_1
0x400b6a8	    0x4c893d000000	            mov qword [0x0400b6af], r15 	      3494	quickfix.c	FUNCTION_57	IF_1
0x400b6af	      0xe99afdffff	                           jmp 0x400b44e	      3494	quickfix.c	FUNCTION_57	IF_1
0x400b6b4	        0x4d8b6d20	            mov r13, qword [r13 + 0x20] 	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400b6b8	          0x4d85ed	                           test r13, r13	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400b6bb	     0xf848dfdffff	                            je 0x400b44e	      3457	quickfix.c	FUNCTION_55	CALL_1
0x400b6c1	        0x498b7d08	                mov rdi, qword [r13 + 8]	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400b6c5	      0xe800000000	                          call 0x400b6ca	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400b6ca	            0x85c0	                           test eax, eax	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400b6cc	            0x74e6	                            je 0x400b6b4	      3440	quickfix.c	FUNCTION_54	IF_1	CALL_1
0x400b6ce	    0x4983bd501900	             cmp qword [r13 + 0x1950], 0	      3441	quickfix.c	FUNCTION_54	IF_1	IF_2
0x400b6d6	            0x75dc	                           jne 0x400b6b4	      3441	quickfix.c	FUNCTION_54	IF_1	IF_2
0x400b6d8	            0xeb99	                           jmp 0x400b673	      3441	quickfix.c	FUNCTION_54	IF_1	IF_2
0x400b6da	    0x660f1f440000	                    nop word [rax + rax]	      3441	quickfix.c	FUNCTION_54	IF_1	IF_2
0x400b6e0	          0x8b4504	                mov eax, dword [rbp + 4]	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400b6e3	          0x4531e4	                          xor r12d, r12d	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400b6e6	            0x85c0	                           test eax, eax	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400b6e8	     0xf8e7c000000	                           jle 0x400b76a	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400b6ee	            0x6690	                                     nop	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400b6f0	          0x4889ef	                            mov rdi, rbp	      3031	quickfix.c	FUNCTION_44	CALL_1
0x400b6f3	          0x4963dc	                        movsxd rbx, r12d	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b6f6	          0x4489e6	                           mov esi, r12d	      3031	quickfix.c	FUNCTION_44	CALL_1
0x400b6f9	      0xe89255ffff	                  call sym.qf_free_items	      3031	quickfix.c	FUNCTION_44	CALL_1
0x400b6fe	    0x488d14dd0000	                        lea rdx, [rbx*8]	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b706	          0x4889d8	                            mov rax, rbx	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b709	        0x48c1e007	                              shl rax, 7	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b70d	          0x4829d0	                            sub rax, rdx	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b710	      0x4c8d740500	                    lea r14, [rbp + rax]	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b715	        0x498b7e40	            mov rdi, qword [r14 + 0x40] 	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b719	          0x4885ff	                           test rdi, rdi	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b71c	            0x740d	                            je 0x400b72b	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b71e	      0xe800000000	                          call 0x400b723	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b723	    0x49c746400000	               mov qword [r14 + 0x40], 0	      3033	quickfix.c	FUNCTION_44	CALL_2
0x400b72b	    0x488d04dd0000	                        lea rax, [rbx*8]	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400b733	        0x48c1e307	                              shl rbx, 7	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400b737	        0x4183c401	                             add r12d, 1	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400b73b	          0x4829c3	                            sub rbx, rax	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400b73e	          0x4801eb	                            add rbx, rbp	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400b741	        0x488b7b48	            mov rdi, qword [rbx + 0x48] 	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400b745	      0xe800000000	                          call 0x400b74a	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400b74a	    0x48c743480000	               mov qword [rbx + 0x48], 0	      3035	quickfix.c	FUNCTION_44
0x400b752	    0xc74310000000	               mov dword [rbx + 0x10], 0	      3036	quickfix.c	FUNCTION_44
0x400b759	    0x48c783800000	               mov qword [rbx + 0x80], 0	      3037	quickfix.c	FUNCTION_44
0x400b764	        0x443b6504	               cmp r12d, dword [rbp + 4]	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400b768	            0x7c86	                            jl 0x400b6f0	      1430	quickfix.c	FUNCTION_15	IF_2	FOR_1
0x400b76a	          0x4889ef	                            mov rdi, rbp	      1432	quickfix.c	FUNCTION_15	IF_2	CALL_2
0x400b76d	      0xe800000000	                          call 0x400b772	      1432	quickfix.c	FUNCTION_15	IF_2	CALL_2
0x400b772	      0xe984fbffff	                           jmp 0x400b2fb	      1432	quickfix.c	FUNCTION_15	IF_2	CALL_2
0x400b777	          0x4531e4	                          xor r12d, r12d	      4228	quickfix.c	FUNCTION_72	FOR_1
0x400b77a	      0xe9f9f6ffff	                           jmp 0x400ae78	      4228	quickfix.c	FUNCTION_72	FOR_1
0x400b77f	    0x49c785481900	            mov qword [r13 + 0x1948], 0 	      1587	quickfix.c	FUNCTION_19	CALL_2
0x400b78a	      0xe991f4ffff	                           jmp 0x400ac20	      1587	quickfix.c	FUNCTION_19	CALL_2
qf_free_items	functions,0:WHILE,1:DO,0:CALL,6:SWITCH,0:IF,2:ELSE,0:FOR,0	109
0x4000c90	            0x4157	                                push r15	      2980	quickfix.c	FUNCTION_43
0x4000c92	            0x4156	                                push r14	      2980	quickfix.c	FUNCTION_43
0x4000c94	            0x4155	                                push r13	      2980	quickfix.c	FUNCTION_43
0x4000c96	            0x4154	                                push r12	      2980	quickfix.c	FUNCTION_43
0x4000c98	          0x4989fc	                            mov r12, rdi	      2980	quickfix.c	FUNCTION_43
0x4000c9b	              0x55	                                push rbp	      2980	quickfix.c	FUNCTION_43
0x4000c9c	          0x4863ee	                         movsxd rbp, esi	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x4000c9f	              0x53	                                push rbx	      2980	quickfix.c	FUNCTION_43
0x4000ca0	    0x488d04ed0000	                        lea rax, [rbp*8]	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x4000ca8	          0x4889eb	                            mov rbx, rbp	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x4000cab	        0x48c1e307	                              shl rbx, 7	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x4000caf	        0x4883ec08	                              sub rsp, 8	      2980	quickfix.c	FUNCTION_43
0x4000cb3	          0x4829c3	                            sub rbx, rax	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x4000cb6	          0x4801fb	                            add rbx, rdi	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x4000cb9	          0x8b4330	            mov eax, dword [rbx + 0x30] 	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x4000cbc	            0x85c0	                           test eax, eax	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x4000cbe	            0x7478	                            je 0x4000d38	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x4000cc0	        0x4c8b6b18	            mov r13, qword [rbx + 0x18] 	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x4000cc4	          0x4d85ed	                           test r13, r13	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x4000cc7	            0x746f	                            je 0x4000d38	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x4000cc9	          0x4531ff	                          xor r15d, r15d	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x4000ccc	            0xeb1a	                           jmp 0x4000ce8	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x4000cce	            0x6690	                                     nop	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x4000cd0	    0x41bf01000000	                             mov r15d, 1	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x4000cd6	        0x836b3001	               sub dword [rbx + 0x30], 1	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x4000cda	        0x4c897318	             mov qword [rbx + 0x18], r14	      3003	quickfix.c	FUNCTION_43	WHILE_1
0x4000cde	            0x7458	                            je 0x4000d38	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x4000ce0	          0x4d85f6	                           test r14, r14	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x4000ce3	          0x4d89f5	                            mov r13, r14	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x4000ce6	            0x7450	                            je 0x4000d38	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x4000ce8	          0x4585ff	                         test r15d, r15d	      2990	quickfix.c	FUNCTION_43	WHILE_1	IF_1
0x4000ceb	        0x4d8b7500	                    mov r14, qword [r13]	      2989	quickfix.c	FUNCTION_43	WHILE_1
0x4000cef	            0x75df	                           jne 0x4000cd0	      2990	quickfix.c	FUNCTION_43	WHILE_1	IF_1
0x4000cf1	        0x498b7d28	            mov rdi, qword [r13 + 0x28] 	      2992	quickfix.c	FUNCTION_43	WHILE_1	IF_1	CALL_1
0x4000cf5	          0x4531ff	                          xor r15d, r15d	      2995	quickfix.c	FUNCTION_43	WHILE_1	IF_1
0x4000cf8	      0xe800000000	                          call 0x4000cfd	      2992	quickfix.c	FUNCTION_43	WHILE_1	IF_1	CALL_1
0x4000cfd	        0x498b7d38	            mov rdi, qword [r13 + 0x38] 	      2993	quickfix.c	FUNCTION_43	WHILE_1	IF_1	CALL_2
0x4000d01	      0xe800000000	                          call 0x4000d06	      2993	quickfix.c	FUNCTION_43	WHILE_1	IF_1	CALL_2
0x4000d06	        0x498b7d30	            mov rdi, qword [r13 + 0x30] 	      2994	quickfix.c	FUNCTION_43	WHILE_1	IF_1	CALL_3
0x4000d0a	      0xe800000000	                          call 0x4000d0f	      2994	quickfix.c	FUNCTION_43	WHILE_1	IF_1	CALL_3
0x4000d0f	          0x4d39ee	                            cmp r14, r13	      2995	quickfix.c	FUNCTION_43	WHILE_1	IF_1
0x4000d12	          0x4c89ef	                            mov rdi, r13	      2996	quickfix.c	FUNCTION_43	WHILE_1	IF_1	CALL_4
0x4000d15	        0x410f94c7	                               sete r15b	      2995	quickfix.c	FUNCTION_43	WHILE_1	IF_1
0x4000d19	      0xe800000000	                          call 0x4000d1e	      2996	quickfix.c	FUNCTION_43	WHILE_1	IF_1	CALL_4
0x4000d1e	          0x4d39ee	                            cmp r14, r13	      2997	quickfix.c	FUNCTION_43	WHILE_1	IF_1	IF_2
0x4000d21	            0x75b3	                           jne 0x4000cd6	      2997	quickfix.c	FUNCTION_43	WHILE_1	IF_1	IF_2
0x4000d23	    0xc74330010000	               mov dword [rbx + 0x30], 1	      3001	quickfix.c	FUNCTION_43	WHILE_1	IF_1	IF_2
0x4000d2a	        0x836b3001	               sub dword [rbx + 0x30], 1	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x4000d2e	        0x4c897318	             mov qword [rbx + 0x18], r14	      3003	quickfix.c	FUNCTION_43	WHILE_1
0x4000d32	            0x75ac	                           jne 0x4000ce0	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x4000d34	         0xf1f4000	                         nop dword [rax]	      2986	quickfix.c	FUNCTION_43	WHILE_1
0x4000d38	    0x488d04ed0000	                        lea rax, [rbp*8]	      3007	quickfix.c	FUNCTION_43
0x4000d40	          0x4989ed	                            mov r13, rbp	      3007	quickfix.c	FUNCTION_43
0x4000d43	        0x49c1e507	                              shl r13, 7	      3007	quickfix.c	FUNCTION_43
0x4000d47	          0x4929c5	                            sub r13, rax	      3007	quickfix.c	FUNCTION_43
0x4000d4a	          0x4d01e5	                            add r13, r12	      3007	quickfix.c	FUNCTION_43
0x4000d4d	        0x498b5d50	            mov rbx, qword [r13 + 0x50] 	      1883	quickfix.c	FUNCTION_24	WHILE_1
0x4000d51	    0x41c745340000	               mov dword [r13 + 0x34], 0	      3007	quickfix.c	FUNCTION_43
0x4000d59	    0x49c745180000	               mov qword [r13 + 0x18], 0	      3008	quickfix.c	FUNCTION_43
0x4000d61	    0x49c745200000	               mov qword [r13 + 0x20], 0	      3009	quickfix.c	FUNCTION_43
0x4000d69	    0x49c745280000	               mov qword [r13 + 0x28], 0	      3010	quickfix.c	FUNCTION_43
0x4000d71	    0x41c745380100	               mov dword [r13 + 0x38], 1	      3011	quickfix.c	FUNCTION_43
0x4000d79	          0x4885db	                           test rbx, rbx	      1883	quickfix.c	FUNCTION_24	WHILE_1
0x4000d7c	            0x7423	                            je 0x4000da1	      1883	quickfix.c	FUNCTION_24	WHILE_1
0x4000d7e	            0x6690	                                     nop	      1883	quickfix.c	FUNCTION_24	WHILE_1
0x4000d80	          0x488b03	                    mov rax, qword [rbx]	      1885	quickfix.c	FUNCTION_24	WHILE_1
0x4000d83	        0x49894550	             mov qword [r13 + 0x50], rax	      1885	quickfix.c	FUNCTION_24	WHILE_1
0x4000d87	        0x488b7b08	                mov rdi, qword [rbx + 8]	      1886	quickfix.c	FUNCTION_24	WHILE_1	CALL_1
0x4000d8b	      0xe800000000	                          call 0x4000d90	      1886	quickfix.c	FUNCTION_24	WHILE_1	CALL_1
0x4000d90	          0x4889df	                            mov rdi, rbx	      1887	quickfix.c	FUNCTION_24	WHILE_1	CALL_2
0x4000d93	      0xe800000000	                          call 0x4000d98	      1887	quickfix.c	FUNCTION_24	WHILE_1	CALL_2
0x4000d98	        0x498b5d50	            mov rbx, qword [r13 + 0x50] 	      1883	quickfix.c	FUNCTION_24	WHILE_1
0x4000d9c	          0x4885db	                           test rbx, rbx	      1883	quickfix.c	FUNCTION_24	WHILE_1
0x4000d9f	            0x75df	                           jne 0x4000d80	      1883	quickfix.c	FUNCTION_24	WHILE_1
0x4000da1	    0x488d04ed0000	                        lea rax, [rbp*8]	      3014	quickfix.c	FUNCTION_43
0x4000da9	          0x4989ed	                            mov r13, rbp	      3014	quickfix.c	FUNCTION_43
0x4000dac	        0x49c1e507	                              shl r13, 7	      3014	quickfix.c	FUNCTION_43
0x4000db0	          0x4929c5	                            sub r13, rax	      3014	quickfix.c	FUNCTION_43
0x4000db3	          0x4d01e5	                            add r13, r12	      3014	quickfix.c	FUNCTION_43
0x4000db6	        0x498b5d60	            mov rbx, qword [r13 + 0x60] 	      1883	quickfix.c	FUNCTION_24	WHILE_1
0x4000dba	    0x49c745580000	               mov qword [r13 + 0x58], 0	      3014	quickfix.c	FUNCTION_43
0x4000dc2	          0x4885db	                           test rbx, rbx	      1883	quickfix.c	FUNCTION_24	WHILE_1
0x4000dc5	            0x742a	                            je 0x4000df1	      1883	quickfix.c	FUNCTION_24	WHILE_1
0x4000dc7	    0x660f1f840000	                    nop word [rax + rax]	      1883	quickfix.c	FUNCTION_24	WHILE_1
0x4000dd0	          0x488b03	                    mov rax, qword [rbx]	      1885	quickfix.c	FUNCTION_24	WHILE_1
0x4000dd3	        0x49894560	             mov qword [r13 + 0x60], rax	      1885	quickfix.c	FUNCTION_24	WHILE_1
0x4000dd7	        0x488b7b08	                mov rdi, qword [rbx + 8]	      1886	quickfix.c	FUNCTION_24	WHILE_1	CALL_1
0x4000ddb	      0xe800000000	                          call 0x4000de0	      1886	quickfix.c	FUNCTION_24	WHILE_1	CALL_1
0x4000de0	          0x4889df	                            mov rdi, rbx	      1887	quickfix.c	FUNCTION_24	WHILE_1	CALL_2
0x4000de3	      0xe800000000	                          call 0x4000de8	      1887	quickfix.c	FUNCTION_24	WHILE_1	CALL_2
0x4000de8	        0x498b5d60	            mov rbx, qword [r13 + 0x60] 	      1883	quickfix.c	FUNCTION_24	WHILE_1
0x4000dec	          0x4885db	                           test rbx, rbx	      1883	quickfix.c	FUNCTION_24	WHILE_1
0x4000def	            0x75df	                           jne 0x4000dd0	      1883	quickfix.c	FUNCTION_24	WHILE_1
0x4000df1	    0x488d04ed0000	                        lea rax, [rbp*8]	      3016	quickfix.c	FUNCTION_43
0x4000df9	        0x48c1e507	                              shl rbp, 7	      3016	quickfix.c	FUNCTION_43
0x4000dfd	          0x4829c5	                            sub rbp, rax	      3016	quickfix.c	FUNCTION_43
0x4000e00	          0x4901ec	                            add r12, rbp	      3016	quickfix.c	FUNCTION_43
0x4000e03	    0x49c744246800	               mov qword [r12 + 0x68], 0	      3016	quickfix.c	FUNCTION_43
0x4000e0c	    0x41c744247000	               mov dword [r12 + 0x70], 0	      3017	quickfix.c	FUNCTION_43
0x4000e15	    0x41c744247400	               mov dword [r12 + 0x74], 0	      3018	quickfix.c	FUNCTION_43
0x4000e1e	    0x41c744247800	               mov dword [r12 + 0x78], 0	      3019	quickfix.c	FUNCTION_43
0x4000e27	        0x4883c408	                              add rsp, 8	      3020	quickfix.c	FUNCTION_43
0x4000e2b	              0x5b	                                 pop rbx	      3020	quickfix.c	FUNCTION_43
0x4000e2c	              0x5d	                                 pop rbp	      3020	quickfix.c	FUNCTION_43
0x4000e2d	            0x415c	                                 pop r12	      3020	quickfix.c	FUNCTION_43
0x4000e2f	            0x415d	                                 pop r13	      3020	quickfix.c	FUNCTION_43
0x4000e31	            0x415e	                                 pop r14	      3020	quickfix.c	FUNCTION_43
0x4000e33	            0x415f	                                 pop r15	      3020	quickfix.c	FUNCTION_43
0x4000e35	              0xc3	                                     ret	      3020	quickfix.c	FUNCTION_43
qf_new_list	functions,0:WHILE,1:DO,0:CALL,4:SWITCH,0:IF,1:ELSE,1:FOR,1	122
0x4000e40	            0x4155	                                push r13	      1383	quickfix.c	FUNCTION_14
0x4000e42	            0x4154	                                push r12	      1383	quickfix.c	FUNCTION_14
0x4000e44	          0x4989fc	                            mov r12, rdi	      1383	quickfix.c	FUNCTION_14
0x4000e47	              0x55	                                push rbp	      1383	quickfix.c	FUNCTION_14
0x4000e48	              0x53	                                push rbx	      1383	quickfix.c	FUNCTION_14
0x4000e49	          0x4889f5	                            mov rbp, rsi	      1383	quickfix.c	FUNCTION_14
0x4000e4c	        0x4883ec08	                              sub rsp, 8	      1383	quickfix.c	FUNCTION_14
0x4000e50	        0x48635f04	            movsxd rbx, dword [rdi + 4] 	      1391	quickfix.c	FUNCTION_14	WHILE_1
0x4000e54	          0x8b4708	                mov eax, dword [rdi + 8]	      1391	quickfix.c	FUNCTION_14	WHILE_1
0x4000e57	          0x83c001	                              add eax, 1	      1391	quickfix.c	FUNCTION_14	WHILE_1
0x4000e5a	            0x39c3	                            cmp ebx, eax	      1391	quickfix.c	FUNCTION_14	WHILE_1
0x4000e5c	     0xf8e90000000	                           jle 0x4000ef2	      1391	quickfix.c	FUNCTION_14	WHILE_1
0x4000e62	    0x660f1f440000	                    nop word [rax + rax]	      1391	quickfix.c	FUNCTION_14	WHILE_1
0x4000e68	          0x83eb01	                              sub ebx, 1	      1392	quickfix.c	FUNCTION_14	CALL_1
0x4000e6b	          0x4c89e7	                            mov rdi, r12	      3031	quickfix.c	FUNCTION_44	CALL_1
0x4000e6e	      0x41895c2404	                mov dword [r12 + 4], ebx	      1392	quickfix.c	FUNCTION_14	CALL_1
0x4000e73	            0x89de	                            mov esi, ebx	      3031	quickfix.c	FUNCTION_44	CALL_1
0x4000e75	          0x4863db	                         movsxd rbx, ebx	      3033	quickfix.c	FUNCTION_44	CALL_2
0x4000e78	      0xe813feffff	                  call sym.qf_free_items	      3031	quickfix.c	FUNCTION_44	CALL_1
0x4000e7d	          0x4989dd	                            mov r13, rbx	      3033	quickfix.c	FUNCTION_44	CALL_2
0x4000e80	    0x488d04dd0000	                        lea rax, [rbx*8]	      3033	quickfix.c	FUNCTION_44	CALL_2
0x4000e88	        0x49c1e507	                              shl r13, 7	      3033	quickfix.c	FUNCTION_44	CALL_2
0x4000e8c	          0x4929c5	                            sub r13, rax	      3033	quickfix.c	FUNCTION_44	CALL_2
0x4000e8f	          0x4d01e5	                            add r13, r12	      3033	quickfix.c	FUNCTION_44	CALL_2
0x4000e92	        0x498b7d40	            mov rdi, qword [r13 + 0x40] 	      3033	quickfix.c	FUNCTION_44	CALL_2
0x4000e96	          0x4885ff	                           test rdi, rdi	      3033	quickfix.c	FUNCTION_44	CALL_2
0x4000e99	            0x740d	                            je 0x4000ea8	      3033	quickfix.c	FUNCTION_44	CALL_2
0x4000e9b	      0xe800000000	                          call 0x4000ea0	      3033	quickfix.c	FUNCTION_44	CALL_2
0x4000ea0	    0x49c745400000	               mov qword [r13 + 0x40], 0	      3033	quickfix.c	FUNCTION_44	CALL_2
0x4000ea8	    0x488d04dd0000	                        lea rax, [rbx*8]	      3034	quickfix.c	FUNCTION_44	CALL_3
0x4000eb0	        0x48c1e307	                              shl rbx, 7	      3034	quickfix.c	FUNCTION_44	CALL_3
0x4000eb4	          0x4829c3	                            sub rbx, rax	      3034	quickfix.c	FUNCTION_44	CALL_3
0x4000eb7	          0x4c01e3	                            add rbx, r12	      3034	quickfix.c	FUNCTION_44	CALL_3
0x4000eba	        0x488b7b48	            mov rdi, qword [rbx + 0x48] 	      3034	quickfix.c	FUNCTION_44	CALL_3
0x4000ebe	      0xe800000000	                          call 0x4000ec3	      3034	quickfix.c	FUNCTION_44	CALL_3
0x4000ec3	    0x48c743480000	               mov qword [rbx + 0x48], 0	      3035	quickfix.c	FUNCTION_44
0x4000ecb	    0xc74310000000	               mov dword [rbx + 0x10], 0	      3036	quickfix.c	FUNCTION_44
0x4000ed2	    0x48c783800000	               mov qword [rbx + 0x80], 0	      3037	quickfix.c	FUNCTION_44
0x4000edd	      0x49635c2404	            movsxd rbx, dword [r12 + 4] 	      1391	quickfix.c	FUNCTION_14	WHILE_1
0x4000ee2	      0x418b442408	                mov eax, dword [r12 + 8]	      1391	quickfix.c	FUNCTION_14	WHILE_1
0x4000ee7	          0x83c001	                              add eax, 1	      1391	quickfix.c	FUNCTION_14	WHILE_1
0x4000eea	            0x39c3	                            cmp ebx, eax	      1391	quickfix.c	FUNCTION_14	WHILE_1
0x4000eec	     0xf8f76ffffff	                            jg 0x4000e68	      1391	quickfix.c	FUNCTION_14	WHILE_1
0x4000ef2	          0x83fb0a	                            cmp ebx, 0xa	      1398	quickfix.c	FUNCTION_14	IF_1
0x4000ef5	     0xf84f5000000	                            je 0x4000ff0	      1398	quickfix.c	FUNCTION_14	IF_1
0x4000efb	          0x8d4301	                      lea eax, [rbx + 1]	      1406	quickfix.c	FUNCTION_14	ELSE_1
0x4000efe	      0x41895c2408	                mov dword [r12 + 8], ebx	      1406	quickfix.c	FUNCTION_14	ELSE_1
0x4000f03	      0x4189442404	                mov dword [r12 + 4], eax	      1406	quickfix.c	FUNCTION_14	ELSE_1
0x4000f08	    0x488d04dd0000	                        lea rax, [rbx*8]	        90	string3.h	FUNCTION_118	CALL_6
0x4000f10	        0x48c1e307	                              shl rbx, 7	        90	string3.h	FUNCTION_118	CALL_6
0x4000f14	          0x4829c3	                            sub rbx, rax	        90	string3.h	FUNCTION_118	CALL_6
0x4000f17	      0x498d441c10	            lea rax, [r12 + rbx + 0x10] 	        90	string3.h	FUNCTION_118	CALL_6
0x4000f1c	        0x488d7808	                      lea rdi, [rax + 8]	        90	string3.h	FUNCTION_118	CALL_6
0x4000f20	    0x48c700000000	                      mov qword [rax], 0	        90	string3.h	FUNCTION_118	CALL_6
0x4000f27	    0x48c740700000	               mov qword [rax + 0x70], 0	        90	string3.h	FUNCTION_118	CALL_6
0x4000f2f	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_118	CALL_6
0x4000f33	          0x4829f8	                            sub rax, rdi	        90	string3.h	FUNCTION_118	CALL_6
0x4000f36	          0x8d4878	                   lea ecx, [rax + 0x78]	        90	string3.h	FUNCTION_118	CALL_6
0x4000f39	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_118	CALL_6
0x4000f3b	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_118	CALL_6
0x4000f3e	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_118	CALL_6
0x4000f41	      0x49635c2408	            movsxd rbx, dword [r12 + 8] 	      1364	quickfix.c	FUNCTION_13	CALL_1
0x4000f46	    0x488d04dd0000	                        lea rax, [rbx*8]	      1364	quickfix.c	FUNCTION_13	CALL_1
0x4000f4e	          0x4989dd	                            mov r13, rbx	      1364	quickfix.c	FUNCTION_13	CALL_1
0x4000f51	        0x49c1e507	                              shl r13, 7	      1364	quickfix.c	FUNCTION_13	CALL_1
0x4000f55	          0x4929c5	                            sub r13, rax	      1364	quickfix.c	FUNCTION_13	CALL_1
0x4000f58	          0x4d01e5	                            add r13, r12	      1364	quickfix.c	FUNCTION_13	CALL_1
0x4000f5b	        0x498b7d40	            mov rdi, qword [r13 + 0x40] 	      1364	quickfix.c	FUNCTION_13	CALL_1
0x4000f5f	          0x4885ff	                           test rdi, rdi	      1364	quickfix.c	FUNCTION_13	CALL_1
0x4000f62	            0x740d	                            je 0x4000f71	      1364	quickfix.c	FUNCTION_13	CALL_1
0x4000f64	      0xe800000000	                          call 0x4000f69	      1364	quickfix.c	FUNCTION_13	CALL_1
0x4000f69	    0x49c745400000	               mov qword [r13 + 0x40], 0	      1364	quickfix.c	FUNCTION_13	CALL_1
0x4000f71	          0x4885ed	                           test rbp, rbp	      1366	quickfix.c	FUNCTION_13	IF_1
0x4000f74	            0x7447	                            je 0x4000fbd	      1366	quickfix.c	FUNCTION_13	IF_1
0x4000f76	          0x4889ef	                            mov rdi, rbp	      1368	quickfix.c	FUNCTION_13	IF_1	CALL_3
0x4000f79	      0xe800000000	                          call 0x4000f7e	      1368	quickfix.c	FUNCTION_13	IF_1	CALL_3
0x4000f7e	          0x8d7802	                      lea edi, [rax + 2]	      1368	quickfix.c	FUNCTION_13	IF_1	CALL_3
0x4000f81	      0xe800000000	                          call 0x4000f86	      1368	quickfix.c	FUNCTION_13	IF_1	CALL_3
0x4000f86	    0x488d14dd0000	                        lea rdx, [rbx*8]	      1370	quickfix.c	FUNCTION_13	IF_1
0x4000f8e	        0x48c1e307	                              shl rbx, 7	      1370	quickfix.c	FUNCTION_13	IF_1
0x4000f92	          0x4829d3	                            sub rbx, rdx	      1370	quickfix.c	FUNCTION_13	IF_1
0x4000f95	          0x4885c0	                           test rax, rax	      1371	quickfix.c	FUNCTION_13	IF_1	IF_2
0x4000f98	      0x4989441c40	       mov qword [r12 + rbx + 0x40], rax	      1370	quickfix.c	FUNCTION_13	IF_1
0x4000f9d	            0x741e	                            je 0x4000fbd	      1371	quickfix.c	FUNCTION_13	IF_1	IF_2
0x4000f9f	          0x4889c7	                            mov rdi, rax	        33	stdio2.h	FUNCTION_127	CALL_1
0x4000fa2	          0x4989e8	                             mov r8, rbp	        33	stdio2.h	FUNCTION_127	CALL_1
0x4000fa5	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_127	CALL_1
0x4000faa	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_127	CALL_1
0x4000fb1	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_127	CALL_1
0x4000fb6	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_127	CALL_1
0x4000fb8	      0xe800000000	                          call 0x4000fbd	        33	stdio2.h	FUNCTION_127	CALL_1
0x4000fbd	    0x8b0500000000	            mov eax, dword [0x04000fc3] 	      1409	quickfix.c	FUNCTION_14
0x4000fc3	          0x8d5001	                      lea edx, [rax + 1]	      1409	quickfix.c	FUNCTION_14
0x4000fc6	      0x4963442408	            movsxd rax, dword [r12 + 8] 	      1409	quickfix.c	FUNCTION_14
0x4000fcb	    0x891500000000	            mov dword [0x04000fd1], edx 	      1409	quickfix.c	FUNCTION_14
0x4000fd1	    0x488d0cc50000	                        lea rcx, [rax*8]	      1409	quickfix.c	FUNCTION_14
0x4000fd9	        0x48c1e007	                              shl rax, 7	      1409	quickfix.c	FUNCTION_14
0x4000fdd	          0x4829c8	                            sub rax, rcx	      1409	quickfix.c	FUNCTION_14
0x4000fe0	      0x4189540410	       mov dword [r12 + rax + 0x10], edx	      1409	quickfix.c	FUNCTION_14
0x4000fe5	        0x4883c408	                              add rsp, 8	      1410	quickfix.c	FUNCTION_14
0x4000fe9	              0x5b	                                 pop rbx	      1410	quickfix.c	FUNCTION_14
0x4000fea	              0x5d	                                 pop rbp	      1410	quickfix.c	FUNCTION_14
0x4000feb	            0x415c	                                 pop r12	      1410	quickfix.c	FUNCTION_14
0x4000fed	            0x415d	                                 pop r13	      1410	quickfix.c	FUNCTION_14
0x4000fef	              0xc3	                                     ret	      1410	quickfix.c	FUNCTION_14
0x4000ff0	            0x31f6	                            xor esi, esi	      3031	quickfix.c	FUNCTION_44	CALL_1
0x4000ff2	          0x4c89e7	                            mov rdi, r12	      3031	quickfix.c	FUNCTION_44	CALL_1
0x4000ff5	      0xe896fcffff	                  call sym.qf_free_items	      3031	quickfix.c	FUNCTION_44	CALL_1
0x4000ffa	      0x498b7c2440	            mov rdi, qword [r12 + 0x40] 	      3033	quickfix.c	FUNCTION_44	CALL_2
0x4000fff	          0x4885ff	                           test rdi, rdi	      3033	quickfix.c	FUNCTION_44	CALL_2
0x4001002	            0x740e	                            je 0x4001012	      3033	quickfix.c	FUNCTION_44	CALL_2
0x4001004	      0xe800000000	                          call 0x4001009	      3033	quickfix.c	FUNCTION_44	CALL_2
0x4001009	    0x49c744244000	               mov qword [r12 + 0x40], 0	      3033	quickfix.c	FUNCTION_44	CALL_2
0x4001012	      0x498b7c2448	            mov rdi, qword [r12 + 0x48] 	      3034	quickfix.c	FUNCTION_44	CALL_3
0x4001017	      0xbb09000000	                              mov ebx, 9	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400101c	      0xe800000000	                          call 0x4001021	      3034	quickfix.c	FUNCTION_44	CALL_3
0x4001021	    0x498db4248800	                   lea rsi, [r12 + 0x88]	      3034	quickfix.c	FUNCTION_44	CALL_3
0x4001029	      0x498d7c2410	                   lea rdi, [r12 + 0x10]	      3034	quickfix.c	FUNCTION_44	CALL_3
0x400102e	      0xba38040000	                          mov edx, 0x438	      3034	quickfix.c	FUNCTION_44	CALL_3
0x4001033	      0xe800000000	                          call 0x4001038	      3034	quickfix.c	FUNCTION_44	CALL_3
0x4001038	    0x41c744240809	                  mov dword [r12 + 8], 9	      1403	quickfix.c	FUNCTION_14	IF_1
0x4001041	      0xe9c2feffff	                           jmp 0x4000f08	      1403	quickfix.c	FUNCTION_14	IF_1
set_ref_in_quickfix	functions,1:WHILE,0:DO,0:CALL,1:SWITCH,0:IF,1:ELSE,0:FOR,0	143
0x400b790	            0x4156	                                push r14	      5812	quickfix.c	FUNCTION_107
0x400b792	            0x4155	                                push r13	      5812	quickfix.c	FUNCTION_107
0x400b794	            0x4154	                                push r12	      5812	quickfix.c	FUNCTION_107
0x400b796	    0x41bc00000000	                             mov r12d, 0	      5812	quickfix.c	FUNCTION_107
0x400b79c	              0x55	                                push rbp	      5812	quickfix.c	FUNCTION_107
0x400b79d	            0x89fd	                            mov ebp, edi	      5812	quickfix.c	FUNCTION_107
0x400b79f	              0x53	                                push rbx	      5812	quickfix.c	FUNCTION_107
0x400b7a0	            0x31db	                            xor ebx, ebx	      5812	quickfix.c	FUNCTION_107
0x400b7a2	            0xeb29	                           jmp 0x400b7cd	      5812	quickfix.c	FUNCTION_107
0x400b7a4	         0xf1f4000	                         nop dword [rax]	      5812	quickfix.c	FUNCTION_107
0x400b7a8	          0x83f807	                              cmp eax, 7	      5799	quickfix.c	FUNCTION_106	FOR_1	IF_1
0x400b7ab	            0x7433	                            je 0x400b7e0	      5799	quickfix.c	FUNCTION_106	FOR_1	IF_1
0x400b7ad	            0x31d2	                            xor edx, edx	      5800	quickfix.c	FUNCTION_106	FOR_1	CALL_1
0x400b7af	            0x31c9	                            xor ecx, ecx	      5800	quickfix.c	FUNCTION_106	FOR_1	CALL_1
0x400b7b1	            0x89ee	                            mov esi, ebp	      5800	quickfix.c	FUNCTION_106	FOR_1	CALL_1
0x400b7b3	      0xe800000000	                          call 0x400b7b8	      5800	quickfix.c	FUNCTION_106	FOR_1	CALL_1
0x400b7b8	            0x85c0	                           test eax, eax	      5800	quickfix.c	FUNCTION_106	FOR_1	CALL_1
0x400b7ba	           0xf94c2	                                 sete dl	      5800	quickfix.c	FUNCTION_106	FOR_1	CALL_1
0x400b7bd	          0x83c301	                              add ebx, 1	      5795	quickfix.c	FUNCTION_106	FOR_1
0x400b7c0	        0x4983c478	                           add r12, 0x78	      5795	quickfix.c	FUNCTION_106	FOR_1
0x400b7c4	          0x83fb09	                              cmp ebx, 9	      5795	quickfix.c	FUNCTION_106	FOR_1
0x400b7c7	            0x7f2a	                            jg 0x400b7f3	      5795	quickfix.c	FUNCTION_106	FOR_1
0x400b7c9	            0x84d2	                             test dl, dl	      5795	quickfix.c	FUNCTION_106	FOR_1
0x400b7cb	            0x7426	                            je 0x400b7f3	      5795	quickfix.c	FUNCTION_106	FOR_1
0x400b7cd	        0x498b3c24	                    mov rdi, qword [r12]	      5797	quickfix.c	FUNCTION_106	FOR_1
0x400b7d1	          0x4885ff	                           test rdi, rdi	      5798	quickfix.c	FUNCTION_106	FOR_1	IF_1
0x400b7d4	            0x740a	                            je 0x400b7e0	      5798	quickfix.c	FUNCTION_106	FOR_1	IF_1
0x400b7d6	            0x8b07	                    mov eax, dword [rdi]	      5798	quickfix.c	FUNCTION_106	FOR_1	IF_1
0x400b7d8	          0x8d50ff	                      lea edx, [rax - 1]	      5799	quickfix.c	FUNCTION_106	FOR_1	IF_1
0x400b7db	          0x83fa01	                              cmp edx, 1	      5799	quickfix.c	FUNCTION_106	FOR_1	IF_1
0x400b7de	            0x77c8	                            ja 0x400b7a8	      5799	quickfix.c	FUNCTION_106	FOR_1	IF_1
0x400b7e0	          0x83c301	                              add ebx, 1	      5795	quickfix.c	FUNCTION_106	FOR_1
0x400b7e3	            0x31c0	                            xor eax, eax	      5799	quickfix.c	FUNCTION_106	FOR_1	IF_1
0x400b7e5	        0x4983c478	                           add r12, 0x78	      5799	quickfix.c	FUNCTION_106	FOR_1	IF_1
0x400b7e9	          0x83fb09	                              cmp ebx, 9	      5795	quickfix.c	FUNCTION_106	FOR_1
0x400b7ec	      0xba01000000	                              mov edx, 1	      5799	quickfix.c	FUNCTION_106	FOR_1	IF_1
0x400b7f1	            0x7ed6	                           jle 0x400b7c9	      5795	quickfix.c	FUNCTION_106	FOR_1
0x400b7f3	            0x85c0	                           test eax, eax	      5818	quickfix.c	FUNCTION_107	IF_1
0x400b7f5	     0xf85db000000	                           jne 0x400b8d6	      5818	quickfix.c	FUNCTION_107	IF_1
0x400b7fb	    0x4c8b25000000	            mov r12, qword [0x0400b802] 	      5821	quickfix.c	FUNCTION_107
0x400b802	          0x4d85e4	                           test r12, r12	      5821	quickfix.c	FUNCTION_107
0x400b805	     0xf84c9000000	                            je 0x400b8d4	      5821	quickfix.c	FUNCTION_107
0x400b80b	    0x4c3925000000	            cmp qword [0x0400b812], r12 	      5821	quickfix.c	FUNCTION_107
0x400b812	     0xf8430010000	                            je 0x400b948	      5821	quickfix.c	FUNCTION_107
0x400b818	      0x4d8b742420	            mov r14, qword [r12 + 0x20] 	      5821	quickfix.c	FUNCTION_107
0x400b81d	          0x4d85f6	                           test r14, r14	      5821	quickfix.c	FUNCTION_107
0x400b820	     0xf84a1000000	                            je 0x400b8c7	      5821	quickfix.c	FUNCTION_107
0x400b826	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5821	quickfix.c	FUNCTION_107
0x400b830	    0x4d8bae481900	          mov r13, qword [r14 + 0x1948] 	      5823	quickfix.c	FUNCTION_107	FUNCTION_1	IF_1
0x400b837	            0x31db	                            xor ebx, ebx	      5823	quickfix.c	FUNCTION_107	FUNCTION_1	IF_1
0x400b839	          0x4d85ed	                           test r13, r13	      5823	quickfix.c	FUNCTION_107	FUNCTION_1	IF_1
0x400b83c	            0x7523	                           jne 0x400b861	      5823	quickfix.c	FUNCTION_107	FUNCTION_1	IF_1
0x400b83e	            0xeb5a	                           jmp 0x400b89a	      5823	quickfix.c	FUNCTION_107	FUNCTION_1	IF_1
0x400b840	          0x83f807	                              cmp eax, 7	      5799	quickfix.c	FUNCTION_106	FOR_1	IF_1
0x400b843	            0x7442	                            je 0x400b887	      5799	quickfix.c	FUNCTION_106	FOR_1	IF_1
0x400b845	            0x31d2	                            xor edx, edx	      5800	quickfix.c	FUNCTION_106	FOR_1	CALL_1
0x400b847	            0x31c9	                            xor ecx, ecx	      5800	quickfix.c	FUNCTION_106	FOR_1	CALL_1
0x400b849	            0x89ee	                            mov esi, ebp	      5800	quickfix.c	FUNCTION_106	FOR_1	CALL_1
0x400b84b	      0xe800000000	                          call 0x400b850	      5800	quickfix.c	FUNCTION_106	FOR_1	CALL_1
0x400b850	            0x85c0	                           test eax, eax	      5800	quickfix.c	FUNCTION_106	FOR_1	CALL_1
0x400b852	           0xf94c2	                                 sete dl	      5800	quickfix.c	FUNCTION_106	FOR_1	CALL_1
0x400b855	          0x83c301	                              add ebx, 1	      5795	quickfix.c	FUNCTION_106	FOR_1
0x400b858	          0x83fb09	                              cmp ebx, 9	      5795	quickfix.c	FUNCTION_106	FOR_1
0x400b85b	            0x7f39	                            jg 0x400b896	      5795	quickfix.c	FUNCTION_106	FOR_1
0x400b85d	            0x84d2	                             test dl, dl	      5795	quickfix.c	FUNCTION_106	FOR_1
0x400b85f	            0x7435	                            je 0x400b896	      5795	quickfix.c	FUNCTION_106	FOR_1
0x400b861	          0x4863c3	                         movsxd rax, ebx	      5797	quickfix.c	FUNCTION_106	FOR_1
0x400b864	    0x488d14c50000	                        lea rdx, [rax*8]	      5797	quickfix.c	FUNCTION_106	FOR_1
0x400b86c	        0x48c1e007	                              shl rax, 7	      5797	quickfix.c	FUNCTION_106	FOR_1
0x400b870	          0x4829d0	                            sub rax, rdx	      5797	quickfix.c	FUNCTION_106	FOR_1
0x400b873	      0x498b7c0548	      mov rdi, qword [r13 + rax + 0x48] 	      5797	quickfix.c	FUNCTION_106	FOR_1
0x400b878	          0x4885ff	                           test rdi, rdi	      5798	quickfix.c	FUNCTION_106	FOR_1	IF_1
0x400b87b	            0x740a	                            je 0x400b887	      5798	quickfix.c	FUNCTION_106	FOR_1	IF_1
0x400b87d	            0x8b07	                    mov eax, dword [rdi]	      5798	quickfix.c	FUNCTION_106	FOR_1	IF_1
0x400b87f	          0x8d50ff	                      lea edx, [rax - 1]	      5799	quickfix.c	FUNCTION_106	FOR_1	IF_1
0x400b882	          0x83fa01	                              cmp edx, 1	      5799	quickfix.c	FUNCTION_106	FOR_1	IF_1
0x400b885	            0x77b9	                            ja 0x400b840	      5799	quickfix.c	FUNCTION_106	FOR_1	IF_1
0x400b887	          0x83c301	                              add ebx, 1	      5795	quickfix.c	FUNCTION_106	FOR_1
0x400b88a	            0x31c0	                            xor eax, eax	      5799	quickfix.c	FUNCTION_106	FOR_1	IF_1
0x400b88c	      0xba01000000	                              mov edx, 1	      5799	quickfix.c	FUNCTION_106	FOR_1	IF_1
0x400b891	          0x83fb09	                              cmp ebx, 9	      5795	quickfix.c	FUNCTION_106	FOR_1
0x400b894	            0x7ec7	                           jle 0x400b85d	      5795	quickfix.c	FUNCTION_106	FOR_1
0x400b896	            0x85c0	                           test eax, eax	      5826	quickfix.c	FUNCTION_107	FUNCTION_1	IF_1	IF_2
0x400b898	            0x753c	                           jne 0x400b8d6	      5826	quickfix.c	FUNCTION_107	FUNCTION_1	IF_1	IF_2
0x400b89a	        0x498b7e08	                mov rdi, qword [r14 + 8]	      5829	quickfix.c	FUNCTION_107	FUNCTION_1	IF_3
0x400b89e	      0xe800000000	                          call 0x400b8a3	      5829	quickfix.c	FUNCTION_107	FUNCTION_1	IF_3
0x400b8a3	            0x85c0	                           test eax, eax	      5829	quickfix.c	FUNCTION_107	FUNCTION_1	IF_3
0x400b8a5	            0x7413	                            je 0x400b8ba	      5829	quickfix.c	FUNCTION_107	FUNCTION_1	IF_3
0x400b8a7	    0x4d8bae501900	          mov r13, qword [r14 + 0x1950] 	      5829	quickfix.c	FUNCTION_107	FUNCTION_1	IF_3
0x400b8ae	          0x4d85ed	                           test r13, r13	      5829	quickfix.c	FUNCTION_107	FUNCTION_1	IF_3
0x400b8b1	            0x7407	                            je 0x400b8ba	      5829	quickfix.c	FUNCTION_107	FUNCTION_1	IF_3
0x400b8b3	      0x41837d0001	                      cmp dword [r13], 1	      5829	quickfix.c	FUNCTION_107	FUNCTION_1	IF_3
0x400b8b8	            0x7425	                            je 0x400b8df	      5829	quickfix.c	FUNCTION_107	FUNCTION_1	IF_3
0x400b8ba	        0x4d8b7620	            mov r14, qword [r14 + 0x20] 	      5821	quickfix.c	FUNCTION_107
0x400b8be	          0x4d85f6	                           test r14, r14	      5821	quickfix.c	FUNCTION_107
0x400b8c1	     0xf8569ffffff	                           jne 0x400b830	      5821	quickfix.c	FUNCTION_107
0x400b8c7	        0x4d8b2424	                    mov r12, qword [r12]	      5821	quickfix.c	FUNCTION_107
0x400b8cb	          0x4d85e4	                           test r12, r12	      5821	quickfix.c	FUNCTION_107
0x400b8ce	     0xf8537ffffff	                           jne 0x400b80b	      5821	quickfix.c	FUNCTION_107
0x400b8d4	            0x31c0	                            xor eax, eax	      5841	quickfix.c	FUNCTION_107
0x400b8d6	              0x5b	                                 pop rbx	      5842	quickfix.c	FUNCTION_107
0x400b8d7	              0x5d	                                 pop rbp	      5842	quickfix.c	FUNCTION_107
0x400b8d8	            0x415c	                                 pop r12	      5842	quickfix.c	FUNCTION_107
0x400b8da	            0x415d	                                 pop r13	      5842	quickfix.c	FUNCTION_107
0x400b8dc	            0x415e	                                 pop r14	      5842	quickfix.c	FUNCTION_107
0x400b8de	              0xc3	                                     ret	      5842	quickfix.c	FUNCTION_107
0x400b8df	            0x31db	                            xor ebx, ebx	      5842	quickfix.c	FUNCTION_107
0x400b8e1	            0xeb26	                           jmp 0x400b909	      5842	quickfix.c	FUNCTION_107
0x400b8e3	       0xf1f440000	                   nop dword [rax + rax]	      5842	quickfix.c	FUNCTION_107
0x400b8e8	          0x83f807	                              cmp eax, 7	      5799	quickfix.c	FUNCTION_106	FOR_1	IF_1
0x400b8eb	            0x7442	                            je 0x400b92f	      5799	quickfix.c	FUNCTION_106	FOR_1	IF_1
0x400b8ed	            0x31d2	                            xor edx, edx	      5800	quickfix.c	FUNCTION_106	FOR_1	CALL_1
0x400b8ef	            0x31c9	                            xor ecx, ecx	      5800	quickfix.c	FUNCTION_106	FOR_1	CALL_1
0x400b8f1	            0x89ee	                            mov esi, ebp	      5800	quickfix.c	FUNCTION_106	FOR_1	CALL_1
0x400b8f3	      0xe800000000	                          call 0x400b8f8	      5800	quickfix.c	FUNCTION_106	FOR_1	CALL_1
0x400b8f8	            0x85c0	                           test eax, eax	      5800	quickfix.c	FUNCTION_106	FOR_1	CALL_1
0x400b8fa	           0xf94c2	                                 sete dl	      5800	quickfix.c	FUNCTION_106	FOR_1	CALL_1
0x400b8fd	          0x83c301	                              add ebx, 1	      5795	quickfix.c	FUNCTION_106	FOR_1
0x400b900	          0x83fb09	                              cmp ebx, 9	      5795	quickfix.c	FUNCTION_106	FOR_1
0x400b903	            0x7f39	                            jg 0x400b93e	      5795	quickfix.c	FUNCTION_106	FOR_1
0x400b905	            0x84d2	                             test dl, dl	      5795	quickfix.c	FUNCTION_106	FOR_1
0x400b907	            0x7435	                            je 0x400b93e	      5795	quickfix.c	FUNCTION_106	FOR_1
0x400b909	          0x4863c3	                         movsxd rax, ebx	      5797	quickfix.c	FUNCTION_106	FOR_1
0x400b90c	    0x488d14c50000	                        lea rdx, [rax*8]	      5797	quickfix.c	FUNCTION_106	FOR_1
0x400b914	        0x48c1e007	                              shl rax, 7	      5797	quickfix.c	FUNCTION_106	FOR_1
0x400b918	          0x4829d0	                            sub rax, rdx	      5797	quickfix.c	FUNCTION_106	FOR_1
0x400b91b	      0x498b7c0548	      mov rdi, qword [r13 + rax + 0x48] 	      5797	quickfix.c	FUNCTION_106	FOR_1
0x400b920	          0x4885ff	                           test rdi, rdi	      5798	quickfix.c	FUNCTION_106	FOR_1	IF_1
0x400b923	            0x740a	                            je 0x400b92f	      5798	quickfix.c	FUNCTION_106	FOR_1	IF_1
0x400b925	            0x8b07	                    mov eax, dword [rdi]	      5798	quickfix.c	FUNCTION_106	FOR_1	IF_1
0x400b927	          0x8d50ff	                      lea edx, [rax - 1]	      5799	quickfix.c	FUNCTION_106	FOR_1	IF_1
0x400b92a	          0x83fa01	                              cmp edx, 1	      5799	quickfix.c	FUNCTION_106	FOR_1	IF_1
0x400b92d	            0x77b9	                            ja 0x400b8e8	      5799	quickfix.c	FUNCTION_106	FOR_1	IF_1
0x400b92f	          0x83c301	                              add ebx, 1	      5795	quickfix.c	FUNCTION_106	FOR_1
0x400b932	            0x31c0	                            xor eax, eax	      5799	quickfix.c	FUNCTION_106	FOR_1	IF_1
0x400b934	      0xba01000000	                              mov edx, 1	      5799	quickfix.c	FUNCTION_106	FOR_1	IF_1
0x400b939	          0x83fb09	                              cmp ebx, 9	      5795	quickfix.c	FUNCTION_106	FOR_1
0x400b93c	            0x7ec7	                           jle 0x400b905	      5795	quickfix.c	FUNCTION_106	FOR_1
0x400b93e	            0x85c0	                           test eax, eax	      5836	quickfix.c	FUNCTION_107	FUNCTION_1	IF_3	IF_4
0x400b940	     0xf8474ffffff	                            je 0x400b8ba	      5836	quickfix.c	FUNCTION_107	FUNCTION_1	IF_3	IF_4
0x400b946	            0xeb8e	                           jmp 0x400b8d6	      5836	quickfix.c	FUNCTION_107	FUNCTION_1	IF_3	IF_4
0x400b948	    0x4c8b35000000	            mov r14, qword [0x0400b94f] 	      5821	quickfix.c	FUNCTION_107
0x400b94f	      0xe9c9feffff	                           jmp 0x400b81d	      5821	quickfix.c	FUNCTION_107
ex_cc	functions,0:WHILE,0:DO,0:CALL,4:SWITCH,0:IF,6:ELSE,3:FOR,0	160
0x40077b0	              0x53	                                push rbx	      4048	quickfix.c	ELSE_2	FUNCTION_69
0x40077b1	          0x8b4720	            mov eax, dword [rdi + 0x20] 	      4052	quickfix.c	ELSE_2	FUNCTION_69	IF_1
0x40077b4	          0x4889fb	                            mov rbx, rdi	      4048	quickfix.c	ELSE_2	FUNCTION_69
0x40077b7	    0x8d9028ffffff	                   lea edx, [rax - 0xd8]	      4056	quickfix.c	ELSE_2	FUNCTION_69	IF_1
0x40077bd	          0x83fa21	                           cmp edx, 0x21	      4056	quickfix.c	ELSE_2	FUNCTION_69	IF_1
0x40077c0	     0xf87ca000000	                            ja 0x4007890	      4056	quickfix.c	ELSE_2	FUNCTION_69	IF_1
0x40077c6	    0x48b9c1800100	                 movabs rcx, 0x2000180c1	      4057	quickfix.c	ELSE_2	FUNCTION_69	IF_1
0x40077d0	        0x480fa3d1	                             bt rcx, rdx	      4057	quickfix.c	ELSE_2	FUNCTION_69	IF_1
0x40077d4	     0xf83b6000000	                           jae 0x4007890	      4057	quickfix.c	ELSE_2	FUNCTION_69	IF_1
0x40077da	    0x488b05000000	            mov rax, qword [0x040077e1] 	      4059	quickfix.c	ELSE_2	FUNCTION_69	IF_1
0x40077e1	        0x488b7808	                mov rdi, qword [rax + 8]	      4059	quickfix.c	ELSE_2	FUNCTION_69	IF_1
0x40077e5	      0xe800000000	                          call 0x40077ea	      4059	quickfix.c	ELSE_2	FUNCTION_69	IF_1
0x40077ea	            0x85c0	                           test eax, eax	      4059	quickfix.c	ELSE_2	FUNCTION_69	IF_1
0x40077ec	    0x488b05000000	            mov rax, qword [0x040077f3] 	      4059	quickfix.c	ELSE_2	FUNCTION_69	IF_1
0x40077f3	     0xf8567010000	                           jne 0x4007960	      4059	quickfix.c	ELSE_2	FUNCTION_69	IF_1
0x40077f9	    0x488bb8481900	          mov rdi, qword [rax + 0x1948] 	      4059	quickfix.c	ELSE_2	FUNCTION_69	IF_1
0x4007800	          0x4885ff	                           test rdi, rdi	      4060	quickfix.c	ELSE_2	FUNCTION_69	IF_1	IF_2
0x4007803	     0xf84cf010000	                            je 0x40079d8	      4060	quickfix.c	ELSE_2	FUNCTION_69	IF_1	IF_2
0x4007809	        0x448b5338	           mov r10d, dword [rbx + 0x38] 	      4067	quickfix.c	ELSE_2	FUNCTION_69	IF_3
0x400780d	          0x8b4320	            mov eax, dword [rbx + 0x20] 	      4067	quickfix.c	ELSE_2	FUNCTION_69	IF_3
0x4007810	          0x4585d2	                         test r10d, r10d	      4067	quickfix.c	ELSE_2	FUNCTION_69	IF_3
0x4007813	     0xf8f89000000	                            jg 0x40078a2	      4067	quickfix.c	ELSE_2	FUNCTION_69	IF_3
0x4007819	          0x83f836	                           cmp eax, 0x36	      4071	quickfix.c	ELSE_2	FUNCTION_69	ELSE_1	IF_4
0x400781c	     0xf8486010000	                            je 0x40079a8	      4071	quickfix.c	ELSE_2	FUNCTION_69	ELSE_1	IF_4
0x4007822	      0x3de7000000	                           cmp eax, 0xe7	      4071	quickfix.c	ELSE_2	FUNCTION_69	ELSE_1	IF_4
0x4007827	     0xf847b010000	                            je 0x40079a8	      4071	quickfix.c	ELSE_2	FUNCTION_69	ELSE_1	IF_4
0x400782d	          0x83f860	                           cmp eax, 0x60	      4074	quickfix.c	FUNCTION_69	ELSE_1	IF_5
0x4007830	           0xf94c1	                                 sete cl	      4074	quickfix.c	FUNCTION_69	ELSE_1	IF_5
0x4007833	      0x3df9000000	                           cmp eax, 0xf9	      4074	quickfix.c	FUNCTION_69	ELSE_1	IF_5
0x4007838	           0xf94c2	                                 sete dl	      4074	quickfix.c	FUNCTION_69	ELSE_1	IF_5
0x400783b	             0x9ca	                             or edx, ecx	      4074	quickfix.c	FUNCTION_69	ELSE_1	IF_5
0x400783d	          0x83f83e	                           cmp eax, 0x3e	      4074	quickfix.c	FUNCTION_69	ELSE_1	IF_5
0x4007840	           0xf94c1	                                 sete cl	      4074	quickfix.c	FUNCTION_69	ELSE_1	IF_5
0x4007843	             0x8ca	                               or dl, cl	      4074	quickfix.c	FUNCTION_69	ELSE_1	IF_5
0x4007845	     0xf857d010000	                           jne 0x40079c8	      4074	quickfix.c	FUNCTION_69	ELSE_1	IF_5
0x400784b	      0x3ddf000000	                           cmp eax, 0xdf	      4074	quickfix.c	FUNCTION_69	ELSE_1	IF_5
0x4007850	      0xbeff7f0000	                         mov esi, 0x7fff	      4077	quickfix.c	FUNCTION_69	ELSE_1	ELSE_2	ELSE_3
0x4007855	     0xf846d010000	                            je 0x40079c8	      4074	quickfix.c	FUNCTION_69	ELSE_1	IF_5
0x400785b	          0x83f83d	                           cmp eax, 0x3d	      4084	quickfix.c	FUNCTION_69	ELSE_2	IF_6
0x400785e	        0x410f94c0	                                sete r8b	      4084	quickfix.c	FUNCTION_69	ELSE_2	IF_6
0x4007862	      0x3dde000000	                           cmp eax, 0xde	      4084	quickfix.c	FUNCTION_69	ELSE_2	IF_6
0x4007867	           0xf94c2	                                 sete dl	      4084	quickfix.c	FUNCTION_69	ELSE_2	IF_6
0x400786a	      0x3dd8000000	                           cmp eax, 0xd8	      4084	quickfix.c	FUNCTION_69	ELSE_2	IF_6
0x400786f	           0xf94c1	                                 sete cl	      4084	quickfix.c	FUNCTION_69	ELSE_2	IF_6
0x4007872	             0x8d1	                               or cl, dl	      4084	quickfix.c	FUNCTION_69	ELSE_2	IF_6
0x4007874	            0x7508	                           jne 0x400787e	      4084	quickfix.c	FUNCTION_69	ELSE_2	IF_6
0x4007876	          0x83e0fb	                     and eax, 0xfffffffb	      4084	quickfix.c	FUNCTION_69	ELSE_2	IF_6
0x4007879	          0x83f839	                           cmp eax, 0x39	      4084	quickfix.c	FUNCTION_69	ELSE_2	IF_6
0x400787c	            0x7545	                           jne 0x40078c3	      4084	quickfix.c	FUNCTION_69	ELSE_2	IF_6
0x400787e	          0x4409c2	                             or edx, r8d	      4085	quickfix.c	FUNCTION_69	ELSE_2	IF_6	CALL_3
0x4007881	    0x41b801000000	                              mov r8d, 1	      4085	quickfix.c	FUNCTION_69	ELSE_2	IF_6	CALL_3
0x4007887	            0xeb53	                           jmp 0x40078dc	      4085	quickfix.c	FUNCTION_69	ELSE_2	IF_6	CALL_3
0x4007889	     0xf1f80000000	                         nop dword [rax]	      4085	quickfix.c	FUNCTION_69	ELSE_2	IF_6	CALL_3
0x4007890	        0x448b5338	           mov r10d, dword [rbx + 0x38] 	      4067	quickfix.c	ELSE_2	FUNCTION_69	IF_3
0x4007894	      0xbf00000000	                              mov edi, 0	      4049	quickfix.c	ELSE_2	FUNCTION_69
0x4007899	          0x4585d2	                         test r10d, r10d	      4067	quickfix.c	ELSE_2	FUNCTION_69	IF_3
0x400789c	     0xf8e77ffffff	                           jle 0x4007819	      4067	quickfix.c	ELSE_2	FUNCTION_69	IF_3
0x40078a2	      0x3dde000000	                           cmp eax, 0xde	      4084	quickfix.c	FUNCTION_69	ELSE_2	IF_6
0x40078a7	          0x8b7348	            mov esi, dword [rbx + 0x48] 	      4068	quickfix.c	ELSE_2	FUNCTION_69	IF_3
0x40078aa	           0xf94c2	                                 sete dl	      4084	quickfix.c	FUNCTION_69	ELSE_2	IF_6
0x40078ad	      0x3dd8000000	                           cmp eax, 0xd8	      4084	quickfix.c	FUNCTION_69	ELSE_2	IF_6
0x40078b2	           0xf94c1	                                 sete cl	      4084	quickfix.c	FUNCTION_69	ELSE_2	IF_6
0x40078b5	             0x8d1	                               or cl, dl	      4084	quickfix.c	FUNCTION_69	ELSE_2	IF_6
0x40078b7	            0x7517	                           jne 0x40078d0	      4084	quickfix.c	FUNCTION_69	ELSE_2	IF_6
0x40078b9	            0x89c1	                            mov ecx, eax	      4084	quickfix.c	FUNCTION_69	ELSE_2	IF_6
0x40078bb	          0x83e1fb	                     and ecx, 0xfffffffb	      4084	quickfix.c	FUNCTION_69	ELSE_2	IF_6
0x40078be	          0x83f939	                           cmp ecx, 0x39	      4084	quickfix.c	FUNCTION_69	ELSE_2	IF_6
0x40078c1	            0x740d	                            je 0x40078d0	      4084	quickfix.c	FUNCTION_69	ELSE_2	IF_6
0x40078c3	          0x8b5334	            mov edx, dword [rbx + 0x34] 	      4089	quickfix.c	FUNCTION_69	ELSE_2	CALL_4
0x40078c6	              0x5b	                                 pop rbx	      4090	quickfix.c	FUNCTION_69	ELSE_2
0x40078c7	      0xe9f4a6ffff	             jmp sym.qf_jump.constprop.7	      4089	quickfix.c	FUNCTION_69	ELSE_2	CALL_4
0x40078cc	         0xf1f4000	                         nop dword [rax]	      4089	quickfix.c	FUNCTION_69	ELSE_2	CALL_4
0x40078d0	          0x83f83d	                           cmp eax, 0x3d	      4085	quickfix.c	FUNCTION_69	ELSE_2	IF_6	CALL_3
0x40078d3	        0x448b4340	            mov r8d, dword [rbx + 0x40] 	      4085	quickfix.c	FUNCTION_69	ELSE_2	IF_6	CALL_3
0x40078d7	           0xf94c0	                                 sete al	      4085	quickfix.c	FUNCTION_69	ELSE_2	IF_6	CALL_3
0x40078da	             0x9c2	                             or edx, eax	      4085	quickfix.c	FUNCTION_69	ELSE_2	IF_6	CALL_3
0x40078dc	        0x48634708	            movsxd rax, dword [rdi + 8] 	      4010	quickfix.c	ELSE_1	FUNCTION_68	IF_1
0x40078e0	      0xbe01000000	                              mov esi, 1	      4038	quickfix.c	FUNCTION_68	ELSE_1	ELSE_2
0x40078e5	    0x488d0cc50000	                        lea rcx, [rax*8]	      4010	quickfix.c	ELSE_1	FUNCTION_68	IF_1
0x40078ed	        0x48c1e007	                              shl rax, 7	      4010	quickfix.c	ELSE_1	FUNCTION_68	IF_1
0x40078f1	          0x4829c8	                            sub rax, rcx	      4010	quickfix.c	ELSE_1	FUNCTION_68	IF_1
0x40078f4	          0x4801f8	                            add rax, rdi	      4010	quickfix.c	ELSE_1	FUNCTION_68	IF_1
0x40078f7	          0x8b4830	            mov ecx, dword [rax + 0x30] 	      4010	quickfix.c	ELSE_1	FUNCTION_68	IF_1
0x40078fa	            0x85c9	                           test ecx, ecx	      4010	quickfix.c	ELSE_1	FUNCTION_68	IF_1
0x40078fc	            0x7ec5	                           jle 0x40078c3	      4010	quickfix.c	ELSE_1	FUNCTION_68	IF_1
0x40078fe	        0x448b4838	            mov r9d, dword [rax + 0x38] 	      4010	quickfix.c	ELSE_1	FUNCTION_68	IF_1
0x4007902	          0x4585c9	                           test r9d, r9d	      4010	quickfix.c	ELSE_1	FUNCTION_68	IF_1
0x4007905	            0x75bc	                           jne 0x40078c3	      4010	quickfix.c	ELSE_1	FUNCTION_68	IF_1
0x4007907	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4005	quickfix.c	ELSE_1	FUNCTION_68
0x400790b	          0x4885c0	                           test rax, rax	      4013	quickfix.c	ELSE_1	FUNCTION_68	FOR_1
0x400790e	            0x74b3	                            je 0x40078c3	      4013	quickfix.c	ELSE_1	FUNCTION_68	FOR_1
0x4007910	            0x84d2	                             test dl, dl	      4013	quickfix.c	ELSE_1	FUNCTION_68	FOR_1
0x4007912	            0x7464	                            je 0x4007978	      4013	quickfix.c	ELSE_1	FUNCTION_68	FOR_1
0x4007914	          0x4531d2	                          xor r10d, r10d	      4013	quickfix.c	ELSE_1	FUNCTION_68	FOR_1
0x4007917	            0x31d2	                            xor edx, edx	      4013	quickfix.c	ELSE_1	FUNCTION_68	FOR_1
0x4007919	            0xeb0a	                           jmp 0x4007925	      4013	quickfix.c	ELSE_1	FUNCTION_68	FOR_1
0x400791b	       0xf1f440000	                   nop dword [rax + rax]	      4013	quickfix.c	ELSE_1	FUNCTION_68	FOR_1
0x4007920	          0x4885c0	                           test rax, rax	      4013	quickfix.c	ELSE_1	FUNCTION_68	FOR_1
0x4007923	            0x749e	                            je 0x40078c3	      4013	quickfix.c	ELSE_1	FUNCTION_68	FOR_1
0x4007925	        0x80784300	                cmp byte [rax + 0x43], 0	      4016	quickfix.c	ELSE_1	FUNCTION_68	FOR_1	IF_2
0x4007929	            0x7415	                            je 0x4007940	      4016	quickfix.c	ELSE_1	FUNCTION_68	FOR_1	IF_2
0x400792b	        0x448b4818	            mov r9d, dword [rax + 0x18] 	      4020	quickfix.c	ELSE_1	FUNCTION_68	FOR_1	IF_2	IF_3	IF_4
0x400792f	          0x4539d1	                           cmp r9d, r10d	      4020	quickfix.c	ELSE_1	FUNCTION_68	FOR_1	IF_2	IF_3	IF_4
0x4007932	            0x740c	                            je 0x4007940	      4020	quickfix.c	ELSE_1	FUNCTION_68	FOR_1	IF_2	IF_3	IF_4
0x4007934	          0x4585c9	                           test r9d, r9d	      4020	quickfix.c	ELSE_1	FUNCTION_68	FOR_1	IF_2	IF_3	IF_4
0x4007937	            0x7e07	                           jle 0x4007940	      4020	quickfix.c	ELSE_1	FUNCTION_68	FOR_1	IF_2	IF_3	IF_4
0x4007939	          0x83c201	                              add edx, 1	      4023	quickfix.c	ELSE_1	FUNCTION_68	FOR_1	IF_2	IF_3	IF_4
0x400793c	          0x4589ca	                           mov r10d, r9d	      4023	quickfix.c	ELSE_1	FUNCTION_68	FOR_1	IF_2	IF_3	IF_4
0x400793f	              0x90	                                     nop	      4023	quickfix.c	ELSE_1	FUNCTION_68	FOR_1	IF_2	IF_3	IF_4
0x4007940	          0x4139d0	                            cmp r8d, edx	      4031	quickfix.c	FUNCTION_68	FOR_1	ELSE_1	IF_5
0x4007943	            0x746b	                            je 0x40079b0	      4031	quickfix.c	FUNCTION_68	FOR_1	ELSE_1	IF_5
0x4007945	          0x83c601	                              add esi, 1	      4014	quickfix.c	ELSE_1	FUNCTION_68	FOR_1
0x4007948	          0x488b00	                    mov rax, qword [rax]	      4014	quickfix.c	ELSE_1	FUNCTION_68	FOR_1
0x400794b	            0x39f1	                            cmp ecx, esi	      4013	quickfix.c	ELSE_1	FUNCTION_68	FOR_1
0x400794d	            0x7dd1	                           jge 0x4007920	      4013	quickfix.c	ELSE_1	FUNCTION_68	FOR_1
0x400794f	          0x8b5334	            mov edx, dword [rbx + 0x34] 	      4089	quickfix.c	FUNCTION_69	ELSE_2	CALL_4
0x4007952	      0xbe01000000	                              mov esi, 1	      4038	quickfix.c	FUNCTION_68	ELSE_1	ELSE_2
0x4007957	              0x5b	                                 pop rbx	      4090	quickfix.c	FUNCTION_69	ELSE_2
0x4007958	      0xe963a6ffff	             jmp sym.qf_jump.constprop.7	      4089	quickfix.c	FUNCTION_69	ELSE_2	CALL_4
0x400795d	           0xf1f00	                         nop dword [rax]	      4089	quickfix.c	FUNCTION_69	ELSE_2	CALL_4
0x4007960	    0x488bb8501900	          mov rdi, qword [rax + 0x1950] 	      4059	quickfix.c	ELSE_2	FUNCTION_69	IF_1
0x4007967	          0x4885ff	                           test rdi, rdi	      4059	quickfix.c	ELSE_2	FUNCTION_69	IF_1
0x400796a	     0xf8599feffff	                           jne 0x4007809	      4059	quickfix.c	ELSE_2	FUNCTION_69	IF_1
0x4007970	      0xe984feffff	                           jmp 0x40077f9	      4059	quickfix.c	ELSE_2	FUNCTION_69	IF_1
0x4007975	           0xf1f00	                         nop dword [rax]	      4059	quickfix.c	ELSE_2	FUNCTION_69	IF_1
0x4007978	            0x31d2	                            xor edx, edx	      4013	quickfix.c	ELSE_1	FUNCTION_68	FOR_1
0x400797a	            0xeb0d	                           jmp 0x4007989	      4013	quickfix.c	ELSE_1	FUNCTION_68	FOR_1
0x400797c	         0xf1f4000	                         nop dword [rax]	      4013	quickfix.c	ELSE_1	FUNCTION_68	FOR_1
0x4007980	          0x4885c0	                           test rax, rax	      4013	quickfix.c	ELSE_1	FUNCTION_68	FOR_1
0x4007983	     0xf843affffff	                            je 0x40078c3	      4013	quickfix.c	ELSE_1	FUNCTION_68	FOR_1
0x4007989	        0x80784301	                cmp byte [rax + 0x43], 1	      4028	quickfix.c	FUNCTION_68	FOR_1	IF_2	ELSE_1
0x400798d	          0x83daff	             sbb edx, 0xffffffffffffffff	      4028	quickfix.c	FUNCTION_68	FOR_1	IF_2	ELSE_1
0x4007990	          0x4139d0	                            cmp r8d, edx	      4031	quickfix.c	FUNCTION_68	FOR_1	ELSE_1	IF_5
0x4007993	            0x741b	                            je 0x40079b0	      4031	quickfix.c	FUNCTION_68	FOR_1	ELSE_1	IF_5
0x4007995	          0x83c601	                              add esi, 1	      4014	quickfix.c	ELSE_1	FUNCTION_68	FOR_1
0x4007998	          0x488b00	                    mov rax, qword [rax]	      4014	quickfix.c	ELSE_1	FUNCTION_68	FOR_1
0x400799b	            0x39f1	                            cmp ecx, esi	      4013	quickfix.c	ELSE_1	FUNCTION_68	FOR_1
0x400799d	            0x7de1	                           jge 0x4007980	      4013	quickfix.c	ELSE_1	FUNCTION_68	FOR_1
0x400799f	            0xebae	                           jmp 0x400794f	      4013	quickfix.c	ELSE_1	FUNCTION_68	FOR_1
0x40079a1	     0xf1f80000000	                         nop dword [rax]	      4013	quickfix.c	ELSE_1	FUNCTION_68	FOR_1
0x40079a8	            0x31f6	                            xor esi, esi	      4072	quickfix.c	ELSE_2	FUNCTION_69	ELSE_1	IF_4
0x40079aa	      0xe9acfeffff	                           jmp 0x400785b	      4072	quickfix.c	ELSE_2	FUNCTION_69	ELSE_1	IF_4
0x40079af	              0x90	                                     nop	      4072	quickfix.c	ELSE_2	FUNCTION_69	ELSE_1	IF_4
0x40079b0	          0x8b5334	            mov edx, dword [rbx + 0x34] 	      4089	quickfix.c	FUNCTION_69	ELSE_2	CALL_4
0x40079b3	            0x39f1	                            cmp ecx, esi	      4038	quickfix.c	FUNCTION_68	ELSE_1	ELSE_2
0x40079b5	      0xb801000000	                              mov eax, 1	      4038	quickfix.c	FUNCTION_68	ELSE_1	ELSE_2
0x40079ba	              0x5b	                                 pop rbx	      4090	quickfix.c	FUNCTION_69	ELSE_2
0x40079bb	           0xf4cf0	                          cmovl esi, eax	      4038	quickfix.c	FUNCTION_68	ELSE_1	ELSE_2
0x40079be	      0xe9fda5ffff	             jmp sym.qf_jump.constprop.7	      4089	quickfix.c	FUNCTION_69	ELSE_2	CALL_4
0x40079c3	       0xf1f440000	                   nop dword [rax + rax]	      4089	quickfix.c	FUNCTION_69	ELSE_2	CALL_4
0x40079c8	      0xbe01000000	                              mov esi, 1	      4075	quickfix.c	FUNCTION_69	ELSE_1	IF_5	ELSE_2
0x40079cd	      0xe989feffff	                           jmp 0x400785b	      4075	quickfix.c	FUNCTION_69	ELSE_1	IF_5	ELSE_2
0x40079d2	    0x660f1f440000	                    nop word [rax + rax]	      4075	quickfix.c	FUNCTION_69	ELSE_1	IF_5	ELSE_2
0x40079d8	            0x31ff	                            xor edi, edi	      4062	quickfix.c	ELSE_2	FUNCTION_69	IF_1	IF_2	CALL_2
0x40079da	      0xba05000000	                              mov edx, 5	      4062	quickfix.c	ELSE_2	FUNCTION_69	IF_1	IF_2	CALL_2
0x40079df	      0xbe00000000	                              mov esi, 0	      4062	quickfix.c	ELSE_2	FUNCTION_69	IF_1	IF_2	CALL_2
0x40079e4	      0xe800000000	                          call 0x40079e9	      4062	quickfix.c	ELSE_2	FUNCTION_69	IF_1	IF_2	CALL_2
0x40079e9	              0x5b	                                 pop rbx	      4090	quickfix.c	FUNCTION_69	ELSE_2
0x40079ea	          0x4889c7	                            mov rdi, rax	      4062	quickfix.c	ELSE_2	FUNCTION_69	IF_1	IF_2	CALL_2
0x40079ed	      0xe900000000	                           jmp 0x40079f2	      4062	quickfix.c	ELSE_2	FUNCTION_69	IF_1	IF_2	CALL_2
