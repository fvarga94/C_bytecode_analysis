get_bkc_value	SWITCH,0:CALL,0:DO,0:WHILE,0:IF,0:functions,0:ELSE,0:FOR,0	4
0x4013470	    0x8b8700140000	          mov eax, dword [rdi + 0x1400] 	     12687	option.c	FUNCTION_117
0x4013476	            0x85c0	                           test eax, eax	     12687	option.c	FUNCTION_117
0x4013478	     0xf4405000000	           cmove eax, dword [0x0401347f]	     12687	option.c	FUNCTION_117
0x401347f	              0xc3	                                     ret	     12688	option.c	FUNCTION_117
was_set_insecurely	SWITCH,0:CALL,2:DO,0:WHILE,0:IF,1:functions,0:ELSE,0:FOR,0	61
0x4004630	              0x53	                                push rbx	      5800	option.c	FUNCTION_34
0x4004631	            0x89f3	                            mov ebx, esi	      5800	option.c	FUNCTION_34
0x4004633	      0xe8e8bcffff	                     call sym.findoption	      5801	option.c	FUNCTION_34	CALL_1
0x4004638	            0x85c0	                           test eax, eax	      5804	option.c	FUNCTION_34	IF_1
0x400463a	     0xf88eb000000	                            js 0x400472b	      5804	option.c	FUNCTION_34	IF_1
0x4004640	          0x83e304	                              and ebx, 4	      5820	option.c	IF_1
0x4004643	            0x4898	                                    cdqe	      5821	option.c	IF_1	SWITCH_1
0x4004645	            0x7439	                            je 0x4004680	      5820	option.c	IF_1
0x4004647	          0x4889c2	                            mov rdx, rax	      5821	option.c	IF_1	SWITCH_1
0x400464a	        0x48c1e206	                              shl rdx, 6	      5821	option.c	IF_1	SWITCH_1
0x400464e	    0x8b9200000000	                    mov edx, dword [rdx]	      5821	option.c	IF_1	SWITCH_1
0x4004654	    0x81fa20400000	                         cmp edx, 0x4020	      5821	option.c	IF_1	SWITCH_1
0x400465a	     0xf84b8000000	                            je 0x4004718	      5821	option.c	IF_1	SWITCH_1
0x4004660	            0x7736	                            ja 0x4004698	      5821	option.c	IF_1	SWITCH_1
0x4004662	    0x81fa12200000	                         cmp edx, 0x2012	      5821	option.c	IF_1	SWITCH_1
0x4004668	            0x7466	                            je 0x40046d0	      5821	option.c	IF_1	SWITCH_1
0x400466a	    0x81fa21300000	                         cmp edx, 0x3021	      5821	option.c	IF_1	SWITCH_1
0x4004670	            0x747e	                            je 0x40046f0	      5821	option.c	IF_1	SWITCH_1
0x4004672	    0x81fa11200000	                         cmp edx, 0x2011	      5821	option.c	IF_1	SWITCH_1
0x4004678	            0x7466	                            je 0x40046e0	      5821	option.c	IF_1	SWITCH_1
0x400467a	    0x660f1f440000	                    nop word [rax + rax]	      5821	option.c	IF_1	SWITCH_1
0x4004680	        0x48c1e006	                              shl rax, 6	      5845	option.c	
0x4004684	    0x488b80000000	                    mov rax, qword [rax]	      5845	option.c	
0x400468b	        0x48c1e817	                           shr rax, 0x17	      5807	option.c	FUNCTION_34	IF_1
0x400468f	          0x83e001	                              and eax, 1	      5807	option.c	FUNCTION_34	IF_1
0x4004692	              0x5b	                                 pop rbx	      5811	option.c	FUNCTION_34
0x4004693	              0xc3	                                     ret	      5811	option.c	FUNCTION_34
0x4004694	         0xf1f4000	                         nop dword [rax]	      5811	option.c	FUNCTION_34
0x4004698	    0x81fa29400000	                         cmp edx, 0x4029	      5821	option.c	IF_1	SWITCH_1
0x400469e	            0x7420	                            je 0x40046c0	      5821	option.c	IF_1	SWITCH_1
0x40046a0	    0x81fa1f500000	                         cmp edx, 0x501f	      5821	option.c	IF_1	SWITCH_1
0x40046a6	            0x7458	                            je 0x4004700	      5821	option.c	IF_1	SWITCH_1
0x40046a8	    0x81fa27400000	                         cmp edx, 0x4027	      5821	option.c	IF_1	SWITCH_1
0x40046ae	            0x75d0	                           jne 0x4004680	      5821	option.c	IF_1	SWITCH_1
0x40046b0	    0x488b05000000	            mov rax, qword [0x040046b7] 	      5835	option.c	IF_1	SWITCH_1
0x40046b7	    0x488b80e81400	          mov rax, qword [rax + 0x14e8] 	      5835	option.c	IF_1	SWITCH_1
0x40046be	            0xebcb	                           jmp 0x400468b	      5835	option.c	IF_1	SWITCH_1
0x40046c0	    0x488b05000000	            mov rax, qword [0x040046c7] 	      5839	option.c	IF_1	SWITCH_1
0x40046c7	    0x488b80d81400	          mov rax, qword [rax + 0x14d8] 	      5839	option.c	IF_1	SWITCH_1
0x40046ce	            0xebbb	                           jmp 0x400468b	      5839	option.c	IF_1	SWITCH_1
0x40046d0	    0x488b05000000	            mov rax, qword [0x040046d7] 	      5829	option.c	IF_1	SWITCH_1
0x40046d7	    0x488b80300500	           mov rax, qword [rax + 0x530] 	      5829	option.c	IF_1	SWITCH_1
0x40046de	            0xebab	                           jmp 0x400468b	      5829	option.c	IF_1	SWITCH_1
0x40046e0	    0x488b05000000	            mov rax, qword [0x040046e7] 	      5828	option.c	IF_1	SWITCH_1
0x40046e7	    0x488b80280500	           mov rax, qword [rax + 0x528] 	      5828	option.c	IF_1	SWITCH_1
0x40046ee	            0xeb9b	                           jmp 0x400468b	      5828	option.c	IF_1	SWITCH_1
0x40046f0	    0x488b05000000	            mov rax, qword [0x040046f7] 	      5824	option.c	IF_1	SWITCH_1
0x40046f7	    0x488b80200500	           mov rax, qword [rax + 0x520] 	      5824	option.c	IF_1	SWITCH_1
0x40046fe	            0xeb8b	                           jmp 0x400468b	      5824	option.c	IF_1	SWITCH_1
0x4004700	    0x488b05000000	            mov rax, qword [0x04004707] 	      5832	option.c	IF_1	SWITCH_1
0x4004707	    0x488b80401700	          mov rax, qword [rax + 0x1740] 	      5832	option.c	IF_1	SWITCH_1
0x400470e	      0xe978ffffff	                           jmp 0x400468b	      5832	option.c	IF_1	SWITCH_1
0x4004713	       0xf1f440000	                   nop dword [rax + rax]	      5832	option.c	IF_1	SWITCH_1
0x4004718	    0x488b05000000	            mov rax, qword [0x0400471f] 	      5837	option.c	IF_1	SWITCH_1
0x400471f	    0x488b80081500	          mov rax, qword [rax + 0x1508] 	      5837	option.c	IF_1	SWITCH_1
0x4004726	      0xe960ffffff	                           jmp 0x400468b	      5837	option.c	IF_1	SWITCH_1
0x400472b	      0xbf00000000	                              mov edi, 0	      5809	option.c	FUNCTION_34	CALL_2
0x4004730	      0xe800000000	                          call 0x4004735	      5809	option.c	FUNCTION_34	CALL_2
0x4004735	      0xb8ffffffff	                     mov eax, 0xffffffff	      5810	option.c	FUNCTION_34
0x400473a	              0x5b	                                 pop rbx	      5811	option.c	FUNCTION_34
0x400473b	              0xc3	                                     ret	      5811	option.c	FUNCTION_34
free_termoptions	SWITCH,0:CALL,4:DO,0:WHILE,0:IF,3:functions,0:ELSE,0:FOR,1	48
0x4006360	    0x488b05000000	            mov rax, qword [0x04006367] 	     10306	option.c	FUNCTION_70	FOR_1
0x4006367	          0x4885c0	                           test rax, rax	     10306	option.c	FUNCTION_70	FOR_1
0x400636a	     0xf84a0000000	                            je 0x4006410	     10306	option.c	FUNCTION_70	FOR_1
0x4006370	              0x53	                                push rbx	     10303	option.c	FUNCTION_70
0x4006371	      0xbb00000000	                              mov ebx, 0	     10303	option.c	FUNCTION_70
0x4006376	            0xeb14	                           jmp 0x400638c	     10303	option.c	FUNCTION_70
0x4006378	     0xf1f84000000	                   nop dword [rax + rax]	     10303	option.c	FUNCTION_70
0x4006380	        0x4883c340	                           add rbx, 0x40	     10306	option.c	FUNCTION_70	FOR_1
0x4006384	          0x488b03	                    mov rax, qword [rbx]	     10306	option.c	FUNCTION_70	FOR_1
0x4006387	          0x4885c0	                           test rax, rax	     10306	option.c	FUNCTION_70	FOR_1
0x400638a	            0x747e	                            je 0x400640a	     10306	option.c	FUNCTION_70	FOR_1
0x400638c	          0x803874	                    cmp byte [rax], 0x74	     10375	option.c	FUNCTION_73
0x400638f	            0x75ef	                           jne 0x4006380	     10375	option.c	FUNCTION_73
0x4006391	        0x8078015f	                cmp byte [rax + 1], 0x5f	     10375	option.c	FUNCTION_73
0x4006395	            0x75e9	                           jne 0x4006380	     10375	option.c	FUNCTION_73
0x4006397	        0x488b4310	            mov rax, qword [rbx + 0x10] 	     10309	option.c	FUNCTION_70	FOR_1	IF_1	IF_2
0x400639b	    0x488b15000000	            mov rdx, qword [0x040063a2] 	     10309	option.c	FUNCTION_70	FOR_1	IF_1	IF_2
0x40063a2	            0xa808	                              test al, 8	     10309	option.c	FUNCTION_70	FOR_1	IF_1	IF_2
0x40063a4	            0x7423	                            je 0x40063c9	     10309	option.c	FUNCTION_70	FOR_1	IF_1	IF_2
0x40063a6	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	     10310	option.c	FUNCTION_70	FOR_1	IF_1	CALL_2
0x40063aa	          0x488b3a	                    mov rdi, qword [rdx]	     10310	option.c	FUNCTION_70	FOR_1	IF_1	CALL_2
0x40063ad	    0x488b15000000	            mov rdx, qword [0x040063b4] 	      5756	option.c	FUNCTION_30	IF_1
0x40063b4	          0x4839d7	                            cmp rdi, rdx	      5756	option.c	FUNCTION_30	IF_1
0x40063b7	            0x7410	                            je 0x40063c9	      5756	option.c	FUNCTION_30	IF_1
0x40063b9	      0xe800000000	                          call 0x40063be	      5757	option.c	FUNCTION_30	CALL_1
0x40063be	    0x488b15000000	            mov rdx, qword [0x040063c5] 	      5757	option.c	FUNCTION_30	CALL_1
0x40063c5	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      5757	option.c	FUNCTION_30	CALL_1
0x40063c9	            0xa880	                           test al, 0x80	     10311	option.c	FUNCTION_70	FOR_1	IF_1	IF_3
0x40063cb	            0x7419	                            je 0x40063e6	     10311	option.c	FUNCTION_70	FOR_1	IF_1	IF_3
0x40063cd	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	     10312	option.c	FUNCTION_70	FOR_1	IF_1	CALL_3
0x40063d1	          0x4839d7	                            cmp rdi, rdx	      5756	option.c	FUNCTION_30	IF_1
0x40063d4	            0x7410	                            je 0x40063e6	      5756	option.c	FUNCTION_30	IF_1
0x40063d6	      0xe800000000	                          call 0x40063db	      5757	option.c	FUNCTION_30	CALL_1
0x40063db	    0x488b15000000	            mov rdx, qword [0x040063e2] 	      5757	option.c	FUNCTION_30	CALL_1
0x40063e2	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      5757	option.c	FUNCTION_30	CALL_1
0x40063e6	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	     10313	option.c	FUNCTION_70	FOR_1	IF_1
0x40063ea	            0x2477	                            and al, 0x77	     10315	option.c	FUNCTION_70	FOR_1	IF_1
0x40063ec	        0x4883c340	                           add rbx, 0x40	     10306	option.c	FUNCTION_70	FOR_1
0x40063f0	          0x488911	                    mov qword [rcx], rdx	     10313	option.c	FUNCTION_70	FOR_1	IF_1
0x40063f3	    0x488b15000000	            mov rdx, qword [0x040063fa] 	     10314	option.c	FUNCTION_70	FOR_1	IF_1
0x40063fa	        0x488943d0	             mov qword [rbx - 0x30], rax	     10315	option.c	FUNCTION_70	FOR_1	IF_1
0x40063fe	        0x488953e8	             mov qword [rbx - 0x18], rdx	     10314	option.c	FUNCTION_70	FOR_1	IF_1
0x4006402	          0x488b03	                    mov rax, qword [rbx]	     10306	option.c	FUNCTION_70	FOR_1
0x4006405	          0x4885c0	                           test rax, rax	     10306	option.c	FUNCTION_70	FOR_1
0x4006408	            0x7582	                           jne 0x400638c	     10306	option.c	FUNCTION_70	FOR_1
0x400640a	              0x5b	                                 pop rbx	     10318	option.c	FUNCTION_70
0x400640b	      0xe900000000	                           jmp 0x4006410	     10317	option.c	FUNCTION_70	CALL_4
0x4006410	      0xe900000000	                           jmp 0x4006415	     10317	option.c	FUNCTION_70	CALL_4
set_term_defaults	SWITCH,0:CALL,2:DO,0:WHILE,0:IF,3:functions,0:ELSE,0:FOR,1	43
0x40064f0	    0x488b05000000	            mov rax, qword [0x040064f7] 	     10350	option.c	FUNCTION_72	FOR_1
0x40064f7	          0x4885c0	                           test rax, rax	     10350	option.c	FUNCTION_72	FOR_1
0x40064fa	            0x7479	                            je 0x4006575	     10350	option.c	FUNCTION_72	FOR_1
0x40064fc	              0x53	                                push rbx	     10347	option.c	FUNCTION_72
0x40064fd	      0xbb00000000	                              mov ebx, 0	     10347	option.c	FUNCTION_72
0x4006502	            0xeb10	                           jmp 0x4006514	     10347	option.c	FUNCTION_72
0x4006504	         0xf1f4000	                         nop dword [rax]	     10347	option.c	FUNCTION_72
0x4006508	        0x4883c340	                           add rbx, 0x40	     10350	option.c	FUNCTION_72	FOR_1
0x400650c	          0x488b03	                    mov rax, qword [rbx]	     10350	option.c	FUNCTION_72	FOR_1
0x400650f	          0x4885c0	                           test rax, rax	     10350	option.c	FUNCTION_72	FOR_1
0x4006512	            0x7460	                            je 0x4006574	     10350	option.c	FUNCTION_72	FOR_1
0x4006514	          0x803874	                    cmp byte [rax], 0x74	     10375	option.c	FUNCTION_73
0x4006517	            0x75ef	                           jne 0x4006508	     10375	option.c	FUNCTION_73
0x4006519	        0x8078015f	                cmp byte [rax + 1], 0x5f	     10375	option.c	FUNCTION_73
0x400651d	            0x75e9	                           jne 0x4006508	     10375	option.c	FUNCTION_73
0x400651f	        0x488b4318	            mov rax, qword [rbx + 0x18] 	     10352	option.c	FUNCTION_72	FOR_1	IF_1	CALL_1
0x4006523	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	     10352	option.c	FUNCTION_72	FOR_1	IF_1	CALL_1
0x4006527	          0x488b10	                    mov rdx, qword [rax]	     10352	option.c	FUNCTION_72	FOR_1	IF_1	CALL_1
0x400652a	          0x4839d7	                            cmp rdi, rdx	     10352	option.c	FUNCTION_72	FOR_1	IF_1	CALL_1
0x400652d	            0x74d9	                            je 0x4006508	     10352	option.c	FUNCTION_72	FOR_1	IF_1	CALL_1
0x400652f	        0x488b4310	            mov rax, qword [rbx + 0x10] 	     10354	option.c	FUNCTION_72	FOR_1	IF_1	IF_2
0x4006533	            0xa880	                           test al, 0x80	     10354	option.c	FUNCTION_72	FOR_1	IF_1	IF_2
0x4006535	            0x741f	                            je 0x4006556	     10354	option.c	FUNCTION_72	FOR_1	IF_1	IF_2
0x4006537	    0x483b3d000000	            cmp rdi, qword [0x0400653e] 	      5756	option.c	FUNCTION_30	IF_1
0x400653e	            0x7410	                            je 0x4006550	      5756	option.c	FUNCTION_30	IF_1
0x4006540	      0xe800000000	                          call 0x4006545	      5757	option.c	FUNCTION_30	CALL_1
0x4006545	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	      5757	option.c	FUNCTION_30	CALL_1
0x4006549	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      5757	option.c	FUNCTION_30	CALL_1
0x400654d	          0x488b12	                    mov rdx, qword [rdx]	      5757	option.c	FUNCTION_30	CALL_1
0x4006550	            0x247f	                            and al, 0x7f	     10357	option.c	FUNCTION_72	FOR_1	IF_1	IF_2
0x4006552	        0x48894310	             mov qword [rbx + 0x10], rax	     10357	option.c	FUNCTION_72	FOR_1	IF_1	IF_2
0x4006556	            0xa808	                              test al, 8	     10360	option.c	FUNCTION_72	FOR_1	IF_1	IF_3
0x4006558	        0x48895328	             mov qword [rbx + 0x28], rdx	     10359	option.c	FUNCTION_72	FOR_1	IF_1
0x400655c	            0x74aa	                            je 0x4006508	     10360	option.c	FUNCTION_72	FOR_1	IF_1	IF_3
0x400655e	        0x4883e0f7	             and rax, 0xfffffffffffffff7	     10363	option.c	FUNCTION_72	FOR_1	IF_1	IF_3
0x4006562	        0x4883c340	                           add rbx, 0x40	     10350	option.c	FUNCTION_72	FOR_1
0x4006566	             0xc80	                             or al, 0x80	     10363	option.c	FUNCTION_72	FOR_1	IF_1	IF_3
0x4006568	        0x488943d0	             mov qword [rbx - 0x30], rax	     10363	option.c	FUNCTION_72	FOR_1	IF_1	IF_3
0x400656c	          0x488b03	                    mov rax, qword [rbx]	     10350	option.c	FUNCTION_72	FOR_1
0x400656f	          0x4885c0	                           test rax, rax	     10350	option.c	FUNCTION_72	FOR_1
0x4006572	            0x75a0	                           jne 0x4006514	     10350	option.c	FUNCTION_72	FOR_1
0x4006574	              0x5b	                                 pop rbx	     10367	option.c	FUNCTION_72
0x4006575	            0xf3c3	                                     ret	     10367	option.c	FUNCTION_72
findoption	SWITCH,0:CALL,6:DO,0:WHILE,0:IF,10:functions,0:ELSE,2:FOR,3	115
0x4000320	            0x4155	                                push r13	      9332	option.c	FUNCTION_52
0x4000322	            0x4154	                                push r12	      9332	option.c	FUNCTION_52
0x4000324	              0x55	                                push rbp	      9332	option.c	FUNCTION_52
0x4000325	              0x53	                                push rbx	      9332	option.c	FUNCTION_52
0x4000326	        0x4883ec08	                              sub rsp, 8	      9332	option.c	FUNCTION_52
0x400032a	    0x66833d000000	                cmp word [0x04000332], 0	      9343	option.c	FUNCTION_52	IF_1
0x4000332	            0x756c	                           jne 0x40003a0	      9343	option.c	FUNCTION_52	IF_1
0x4000334	    0x488b15000000	            mov rdx, qword [0x0400033b] 	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x400033b	    0x488b05000000	            mov rax, qword [0x04000342] 	      9345	option.c	FUNCTION_52	IF_1
0x4000342	          0x4885d2	                           test rdx, rdx	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x4000345	            0x7459	                            je 0x40003a0	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x4000347	        0x440fb600	                   movzx r8d, byte [rax]	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x400034b	      0xb900000000	                              mov ecx, 0	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x4000350	      0xbe01000000	                              mov esi, 1	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x4000355	            0xeb2d	                           jmp 0x4000384	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x4000357	    0x660f1f840000	                    nop word [rax + rax]	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x4000360	           0xfbed0	                           movsx edx, al	      9353	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	CALL_1
0x4000363	          0x83ea61	                           sub edx, 0x61	      9353	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	CALL_1
0x4000366	          0x4863d2	                         movsxd rdx, edx	      9353	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	CALL_1
0x4000369	    0x6689b4120000	                mov word [rdx + rdx], si	      9353	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	CALL_1
0x4000371	        0x4883c140	                           add rcx, 0x40	      9353	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	CALL_1
0x4000375	        0x488b51c0	             mov rdx, qword [rcx - 0x40]	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x4000379	          0x83c601	                              add esi, 1	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x400037c	          0x4189c0	                            mov r8d, eax	      9348	option.c	FUNCTION_52	IF_1	FOR_1	IF_2
0x400037f	          0x4885d2	                           test rdx, rdx	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x4000382	            0x741c	                            je 0x40003a0	      9346	option.c	FUNCTION_52	IF_1	FOR_1
0x4000384	           0xfb602	                   movzx eax, byte [rdx]	      9348	option.c	FUNCTION_52	IF_1	FOR_1	IF_2
0x4000387	          0x4438c0	                             cmp al, r8b	      9348	option.c	FUNCTION_52	IF_1	FOR_1	IF_2
0x400038a	            0x74e5	                            je 0x4000371	      9348	option.c	FUNCTION_52	IF_1	FOR_1	IF_2
0x400038c	            0x3c74	                            cmp al, 0x74	      9350	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x400038e	            0x75d0	                           jne 0x4000360	      9350	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4000390	        0x807a015f	                cmp byte [rdx + 1], 0x5f	      9350	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4000394	            0x75ca	                           jne 0x4000360	      9350	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x4000396	    0x668935000000	               mov word [0x0400039d], si	      9351	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x400039d	            0xebd2	                           jmp 0x4000371	      9351	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x400039f	              0x90	                                     nop	      9351	option.c	FUNCTION_52	IF_1	FOR_1	IF_2	IF_3
0x40003a0	        0x440fb627	                  movzx r12d, byte [rdi]	      9365	option.c	FUNCTION_52	IF_4	IF_5
0x40003a4	      0x418d44249f	                   lea eax, [r12 - 0x61]	      9365	option.c	FUNCTION_52	IF_4	IF_5
0x40003a9	            0x3c19	                            cmp al, 0x19	      9365	option.c	FUNCTION_52	IF_4	IF_5
0x40003ab	     0xf87d2000000	                            ja 0x4000483	      9365	option.c	FUNCTION_52	IF_4	IF_5
0x40003b1	        0x4180fc74	                          cmp r12b, 0x74	      9369	option.c	FUNCTION_52
0x40003b5	          0x4889fd	                            mov rbp, rdi	      9369	option.c	FUNCTION_52
0x40003b8	     0xf84d5000000	                            je 0x4000493	      9369	option.c	FUNCTION_52
0x40003be	        0x410fb6c4	                         movzx eax, r12b	      9373	option.c	FUNCTION_52	CALL_3
0x40003c2	    0x41bd01000000	                             mov r13d, 1	      9374	option.c	FUNCTION_52	FOR_2
0x40003c8	          0x83e861	                           sub eax, 0x61	      9373	option.c	FUNCTION_52	CALL_3
0x40003cb	            0x4898	                                    cdqe	      9373	option.c	FUNCTION_52	CALL_3
0x40003cd	    0x480fbf840000	             movsx rax, word [rax + rax]	      9373	option.c	FUNCTION_52	CALL_3
0x40003d6	          0x4889c3	                            mov rbx, rax	      9373	option.c	FUNCTION_52	CALL_3
0x40003d9	        0x48c1e006	                              shl rax, 6	      9374	option.c	FUNCTION_52	FOR_2
0x40003dd	    0x488bb0000000	                    mov rsi, qword [rax]	      9374	option.c	FUNCTION_52	FOR_2
0x40003e4	          0x4885f6	                           test rsi, rsi	      9374	option.c	FUNCTION_52	FOR_2
0x40003e7	            0x751d	                           jne 0x4000406	      9374	option.c	FUNCTION_52	FOR_2
0x40003e9	      0xe995000000	                           jmp 0x4000483	      9374	option.c	FUNCTION_52	FOR_2
0x40003ee	            0x6690	                                     nop	      9374	option.c	FUNCTION_52	FOR_2
0x40003f0	          0x83c301	                              add ebx, 1	      9374	option.c	FUNCTION_52	FOR_2
0x40003f3	          0x4863c3	                         movsxd rax, ebx	      9374	option.c	FUNCTION_52	FOR_2
0x40003f6	        0x48c1e006	                              shl rax, 6	      9374	option.c	FUNCTION_52	FOR_2
0x40003fa	    0x488bb0000000	                    mov rsi, qword [rax]	      9374	option.c	FUNCTION_52	FOR_2
0x4000401	          0x4885f6	                           test rsi, rsi	      9374	option.c	FUNCTION_52	FOR_2
0x4000404	            0x7419	                            je 0x400041f	      9374	option.c	FUNCTION_52	FOR_2
0x4000406	          0x4889ef	                            mov rdi, rbp	      9376	option.c	FUNCTION_52	FOR_2	IF_7	CALL_4
0x4000409	      0xe800000000	                          call 0x400040e	      9376	option.c	FUNCTION_52	FOR_2	IF_7	CALL_4
0x400040e	            0x85c0	                           test eax, eax	      9376	option.c	FUNCTION_52	FOR_2	IF_7	CALL_4
0x4000410	            0x75de	                           jne 0x40003f0	      9376	option.c	FUNCTION_52	FOR_2	IF_7	CALL_4
0x4000412	        0x4883c408	                              add rsp, 8	      9393	option.c	FUNCTION_52
0x4000416	            0x89d8	                            mov eax, ebx	      9393	option.c	FUNCTION_52
0x4000418	              0x5b	                                 pop rbx	      9393	option.c	FUNCTION_52
0x4000419	              0x5d	                                 pop rbp	      9393	option.c	FUNCTION_52
0x400041a	            0x415c	                                 pop r12	      9393	option.c	FUNCTION_52
0x400041c	            0x415d	                                 pop r13	      9393	option.c	FUNCTION_52
0x400041e	              0xc3	                                     ret	      9393	option.c	FUNCTION_52
0x400041f	          0x4584ed	                         test r13b, r13b	      9379	option.c	FUNCTION_52	IF_8
0x4000422	            0x745f	                            je 0x4000483	      9379	option.c	FUNCTION_52	IF_8
0x4000424	        0x410fb6c4	                         movzx eax, r12b	      9379	option.c	FUNCTION_52	IF_8
0x4000428	          0x83e861	                           sub eax, 0x61	      9379	option.c	FUNCTION_52	IF_8
0x400042b	            0x4898	                                    cdqe	      9379	option.c	FUNCTION_52	IF_8
0x400042d	    0x480fbf840000	             movsx rax, word [rax + rax]	      9379	option.c	FUNCTION_52	IF_8
0x4000436	          0x4889c2	                            mov rdx, rax	      9379	option.c	FUNCTION_52	IF_8
0x4000439	          0x4889c3	                            mov rbx, rax	      9379	option.c	FUNCTION_52	IF_8
0x400043c	        0x48c1e206	                              shl rdx, 6	      9379	option.c	FUNCTION_52	IF_8
0x4000440	    0x4883ba000000	                      cmp qword [rdx], 0	      9382	option.c	FUNCTION_52	IF_8	FOR_3
0x4000448	            0x7439	                            je 0x4000483	      9382	option.c	FUNCTION_52	IF_8	FOR_3
0x400044a	    0x660f1f440000	                    nop word [rax + rax]	      9382	option.c	FUNCTION_52	IF_8	FOR_3
0x4000450	        0x48c1e006	                              shl rax, 6	      9384	option.c	FUNCTION_52	IF_8	FOR_3
0x4000454	    0x488bb0000000	                    mov rsi, qword [rax]	      9384	option.c	FUNCTION_52	IF_8	FOR_3
0x400045b	          0x4885f6	                           test rsi, rsi	      9385	option.c	FUNCTION_52	IF_8	FOR_3	IF_9	CALL_6
0x400045e	            0x740c	                            je 0x400046c	      9385	option.c	FUNCTION_52	IF_8	FOR_3	IF_9	CALL_6
0x4000460	          0x4889ef	                            mov rdi, rbp	      9385	option.c	FUNCTION_52	IF_8	FOR_3	IF_9	CALL_6
0x4000463	      0xe800000000	                          call 0x4000468	      9385	option.c	FUNCTION_52	IF_8	FOR_3	IF_9	CALL_6
0x4000468	            0x85c0	                           test eax, eax	      9385	option.c	FUNCTION_52	IF_8	FOR_3	IF_9	CALL_6
0x400046a	            0x74a6	                            je 0x4000412	      9385	option.c	FUNCTION_52	IF_8	FOR_3	IF_9	CALL_6
0x400046c	          0x83c301	                              add ebx, 1	      9382	option.c	FUNCTION_52	IF_8	FOR_3
0x400046f	          0x4863c3	                         movsxd rax, ebx	      9382	option.c	FUNCTION_52	IF_8	FOR_3
0x4000472	          0x4889c2	                            mov rdx, rax	      9382	option.c	FUNCTION_52	IF_8	FOR_3
0x4000475	        0x48c1e206	                              shl rdx, 6	      9382	option.c	FUNCTION_52	IF_8	FOR_3
0x4000479	    0x4883ba000000	                      cmp qword [rdx], 0	      9382	option.c	FUNCTION_52	IF_8	FOR_3
0x4000481	            0x75cd	                           jne 0x4000450	      9382	option.c	FUNCTION_52	IF_8	FOR_3
0x4000483	        0x4883c408	                              add rsp, 8	      9393	option.c	FUNCTION_52
0x4000487	      0xb8ffffffff	                     mov eax, 0xffffffff	      9391	option.c	FUNCTION_52	IF_10
0x400048c	              0x5b	                                 pop rbx	      9393	option.c	FUNCTION_52
0x400048d	              0x5d	                                 pop rbp	      9393	option.c	FUNCTION_52
0x400048e	            0x415c	                                 pop r12	      9393	option.c	FUNCTION_52
0x4000490	            0x415d	                                 pop r13	      9393	option.c	FUNCTION_52
0x4000492	              0xc3	                                     ret	      9393	option.c	FUNCTION_52
0x4000493	        0x807f015f	                cmp byte [rdi + 1], 0x5f	      9369	option.c	FUNCTION_52
0x4000497	     0xf8521ffffff	                           jne 0x40003be	      9369	option.c	FUNCTION_52
0x400049d	    0x480fbf050000	           movsx rax, word [0x040004a5] 	      9371	option.c	FUNCTION_52	IF_6
0x40004a5	          0x4889c3	                            mov rbx, rax	      9371	option.c	FUNCTION_52	IF_6
0x40004a8	        0x48c1e006	                              shl rax, 6	      9374	option.c	FUNCTION_52	FOR_2
0x40004ac	    0x488bb0000000	                    mov rsi, qword [rax]	      9374	option.c	FUNCTION_52	FOR_2
0x40004b3	          0x4885f6	                           test rsi, rsi	      9374	option.c	FUNCTION_52	FOR_2
0x40004b6	            0x74cb	                            je 0x4000483	      9374	option.c	FUNCTION_52	FOR_2
0x40004b8	          0x4531ed	                          xor r13d, r13d	      9374	option.c	FUNCTION_52	FOR_2
0x40004bb	      0xe946ffffff	                           jmp 0x4000406	      9374	option.c	FUNCTION_52	FOR_2
set_term_option_alloced	SWITCH,0:CALL,0:DO,0:WHILE,0:IF,1:functions,0:ELSE,0:FOR,1	20
0x40045e0	    0x48833d000000	               cmp qword [0x040045e8], 0	      5783	option.c	FUNCTION_33	FOR_1
0x40045e8	            0x7429	                            je 0x4004613	      5783	option.c	FUNCTION_33	FOR_1
0x40045ea	    0x483b3d000000	            cmp rdi, qword [0x040045f1] 	      5784	option.c	FUNCTION_33	FOR_1	IF_1
0x40045f1	      0xb800000000	                              mov eax, 0	      5784	option.c	FUNCTION_33	FOR_1	IF_1
0x40045f6	      0xba01000000	                              mov edx, 1	      5784	option.c	FUNCTION_33	FOR_1	IF_1
0x40045fb	            0x750d	                           jne 0x400460a	      5784	option.c	FUNCTION_33	FOR_1	IF_1
0x40045fd	            0xeb16	                           jmp 0x4004615	      5784	option.c	FUNCTION_33	FOR_1	IF_1
0x40045ff	              0x90	                                     nop	      5784	option.c	FUNCTION_33	FOR_1	IF_1
0x4004600	        0x4883c040	                           add rax, 0x40	      5784	option.c	FUNCTION_33	FOR_1	IF_1
0x4004604	        0x483978d8	            cmp qword [rax - 0x28], rdi 	      5784	option.c	FUNCTION_33	FOR_1	IF_1
0x4004608	            0x7410	                            je 0x400461a	      5784	option.c	FUNCTION_33	FOR_1	IF_1
0x400460a	          0x83c201	                              add edx, 1	      5783	option.c	FUNCTION_33	FOR_1
0x400460d	        0x48833800	                      cmp qword [rax], 0	      5783	option.c	FUNCTION_33	FOR_1
0x4004611	            0x75ed	                           jne 0x4004600	      5783	option.c	FUNCTION_33	FOR_1
0x4004613	            0xf3c3	                                     ret	      5783	option.c	FUNCTION_33	FOR_1
0x4004615	      0xba01000000	                              mov edx, 1	      5783	option.c	FUNCTION_33	FOR_1
0x400461a	          0x4863d2	                         movsxd rdx, edx	      5786	option.c	FUNCTION_33	FOR_1	IF_1
0x400461d	        0x48c1e206	                              shl rdx, 6	      5786	option.c	FUNCTION_33	FOR_1	IF_1
0x4004621	    0x48838a000000	                       or qword [rdx], 8	      5786	option.c	FUNCTION_33	FOR_1	IF_1
0x4004629	              0xc3	                                     ret	      5787	option.c	FUNCTION_33	FOR_1	IF_1
clear_winopt	SWITCH,0:CALL,14:DO,0:WHILE,0:IF,0:functions,0:ELSE,0:FOR,0	89
0x400bc80	              0x53	                                push rbx	     11000	option.c	FUNCTION_83
0x400bc81	    0x488b05000000	            mov rax, qword [0x0400bc88] 	      5763	option.c	FUNCTION_31	IF_1
0x400bc88	          0x4889fb	                            mov rbx, rdi	     11000	option.c	FUNCTION_83
0x400bc8b	        0x488b7f30	            mov rdi, qword [rdi + 0x30] 	      5763	option.c	FUNCTION_31	IF_1
0x400bc8f	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x400bc92	            0x740c	                            je 0x400bca0	      5763	option.c	FUNCTION_31	IF_1
0x400bc94	      0xe800000000	                          call 0x400bc99	      5764	option.c	FUNCTION_31	CALL_1
0x400bc99	    0x488b05000000	            mov rax, qword [0x0400bca0] 	      5764	option.c	FUNCTION_31	CALL_1
0x400bca0	        0x488b7b48	            mov rdi, qword [rbx + 0x48] 	      5763	option.c	FUNCTION_31	IF_1
0x400bca4	        0x48894330	             mov qword [rbx + 0x30], rax	      5765	option.c	FUNCTION_31
0x400bca8	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x400bcab	            0x740c	                            je 0x400bcb9	      5763	option.c	FUNCTION_31	IF_1
0x400bcad	      0xe800000000	                          call 0x400bcb2	      5764	option.c	FUNCTION_31	CALL_1
0x400bcb2	    0x488b05000000	            mov rax, qword [0x0400bcb9] 	      5764	option.c	FUNCTION_31	CALL_1
0x400bcb9	        0x488b7b50	            mov rdi, qword [rbx + 0x50] 	      5763	option.c	FUNCTION_31	IF_1
0x400bcbd	        0x48894348	             mov qword [rbx + 0x48], rax	      5765	option.c	FUNCTION_31
0x400bcc1	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x400bcc4	            0x740c	                            je 0x400bcd2	      5763	option.c	FUNCTION_31	IF_1
0x400bcc6	      0xe800000000	                          call 0x400bccb	      5764	option.c	FUNCTION_31	CALL_1
0x400bccb	    0x488b05000000	            mov rax, qword [0x0400bcd2] 	      5764	option.c	FUNCTION_31	CALL_1
0x400bcd2	        0x488b7b68	            mov rdi, qword [rbx + 0x68] 	      5763	option.c	FUNCTION_31	IF_1
0x400bcd6	        0x48894350	             mov qword [rbx + 0x50], rax	      5765	option.c	FUNCTION_31
0x400bcda	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x400bcdd	            0x740c	                            je 0x400bceb	      5763	option.c	FUNCTION_31	IF_1
0x400bcdf	      0xe800000000	                          call 0x400bce4	      5764	option.c	FUNCTION_31	CALL_1
0x400bce4	    0x488b05000000	            mov rax, qword [0x0400bceb] 	      5764	option.c	FUNCTION_31	CALL_1
0x400bceb	        0x488b7b70	            mov rdi, qword [rbx + 0x70] 	      5763	option.c	FUNCTION_31	IF_1
0x400bcef	        0x48894368	             mov qword [rbx + 0x68], rax	      5765	option.c	FUNCTION_31
0x400bcf3	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x400bcf6	            0x740c	                            je 0x400bd04	      5763	option.c	FUNCTION_31	IF_1
0x400bcf8	      0xe800000000	                          call 0x400bcfd	      5764	option.c	FUNCTION_31	CALL_1
0x400bcfd	    0x488b05000000	            mov rax, qword [0x0400bd04] 	      5764	option.c	FUNCTION_31	CALL_1
0x400bd04	        0x488b7b78	            mov rdi, qword [rbx + 0x78] 	      5763	option.c	FUNCTION_31	IF_1
0x400bd08	        0x48894370	             mov qword [rbx + 0x70], rax	      5765	option.c	FUNCTION_31
0x400bd0c	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x400bd0f	            0x740c	                            je 0x400bd1d	      5763	option.c	FUNCTION_31	IF_1
0x400bd11	      0xe800000000	                          call 0x400bd16	      5764	option.c	FUNCTION_31	CALL_1
0x400bd16	    0x488b05000000	            mov rax, qword [0x0400bd1d] 	      5764	option.c	FUNCTION_31	CALL_1
0x400bd1d	    0x488bbb080100	           mov rdi, qword [rbx + 0x108] 	      5763	option.c	FUNCTION_31	IF_1
0x400bd24	        0x48894378	             mov qword [rbx + 0x78], rax	      5765	option.c	FUNCTION_31
0x400bd28	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x400bd2b	            0x740c	                            je 0x400bd39	      5763	option.c	FUNCTION_31	IF_1
0x400bd2d	      0xe800000000	                          call 0x400bd32	      5764	option.c	FUNCTION_31	CALL_1
0x400bd32	    0x488b05000000	            mov rax, qword [0x0400bd39] 	      5764	option.c	FUNCTION_31	CALL_1
0x400bd39	        0x488b7b08	                mov rdi, qword [rbx + 8]	      5763	option.c	FUNCTION_31	IF_1
0x400bd3d	    0x488983080100	            mov qword [rbx + 0x108], rax	      5765	option.c	FUNCTION_31
0x400bd44	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x400bd47	            0x740c	                            je 0x400bd55	      5763	option.c	FUNCTION_31	IF_1
0x400bd49	      0xe800000000	                          call 0x400bd4e	      5764	option.c	FUNCTION_31	CALL_1
0x400bd4e	    0x488b05000000	            mov rax, qword [0x0400bd55] 	      5764	option.c	FUNCTION_31	CALL_1
0x400bd55	    0x488bbba80000	            mov rdi, qword [rbx + 0xa8] 	      5763	option.c	FUNCTION_31	IF_1
0x400bd5c	        0x48894308	                mov qword [rbx + 8], rax	      5765	option.c	FUNCTION_31
0x400bd60	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x400bd63	            0x740c	                            je 0x400bd71	      5763	option.c	FUNCTION_31	IF_1
0x400bd65	      0xe800000000	                          call 0x400bd6a	      5764	option.c	FUNCTION_31	CALL_1
0x400bd6a	    0x488b05000000	            mov rax, qword [0x0400bd71] 	      5764	option.c	FUNCTION_31	CALL_1
0x400bd71	    0x488bbbd00000	            mov rdi, qword [rbx + 0xd0] 	      5763	option.c	FUNCTION_31	IF_1
0x400bd78	    0x488983a80000	             mov qword [rbx + 0xa8], rax	      5765	option.c	FUNCTION_31
0x400bd7f	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x400bd82	            0x740c	                            je 0x400bd90	      5763	option.c	FUNCTION_31	IF_1
0x400bd84	      0xe800000000	                          call 0x400bd89	      5764	option.c	FUNCTION_31	CALL_1
0x400bd89	    0x488b05000000	            mov rax, qword [0x0400bd90] 	      5764	option.c	FUNCTION_31	CALL_1
0x400bd90	    0x488bbbc80000	            mov rdi, qword [rbx + 0xc8] 	      5763	option.c	FUNCTION_31	IF_1
0x400bd97	    0x488983d00000	             mov qword [rbx + 0xd0], rax	      5765	option.c	FUNCTION_31
0x400bd9e	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x400bda1	            0x740c	                            je 0x400bdaf	      5763	option.c	FUNCTION_31	IF_1
0x400bda3	      0xe800000000	                          call 0x400bda8	      5764	option.c	FUNCTION_31	CALL_1
0x400bda8	    0x488b05000000	            mov rax, qword [0x0400bdaf] 	      5764	option.c	FUNCTION_31	CALL_1
0x400bdaf	    0x488bbbf00000	            mov rdi, qword [rbx + 0xf0] 	      5763	option.c	FUNCTION_31	IF_1
0x400bdb6	    0x488983c80000	             mov qword [rbx + 0xc8], rax	      5765	option.c	FUNCTION_31
0x400bdbd	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x400bdc0	            0x740c	                            je 0x400bdce	      5763	option.c	FUNCTION_31	IF_1
0x400bdc2	      0xe800000000	                          call 0x400bdc7	      5764	option.c	FUNCTION_31	CALL_1
0x400bdc7	    0x488b05000000	            mov rax, qword [0x0400bdce] 	      5764	option.c	FUNCTION_31	CALL_1
0x400bdce	    0x488bbb100100	           mov rdi, qword [rbx + 0x110] 	      5763	option.c	FUNCTION_31	IF_1
0x400bdd5	    0x488983f00000	             mov qword [rbx + 0xf0], rax	      5765	option.c	FUNCTION_31
0x400bddc	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x400bddf	            0x740c	                            je 0x400bded	      5763	option.c	FUNCTION_31	IF_1
0x400bde1	      0xe800000000	                          call 0x400bde6	      5764	option.c	FUNCTION_31	CALL_1
0x400bde6	    0x488b05000000	            mov rax, qword [0x0400bded] 	      5764	option.c	FUNCTION_31	CALL_1
0x400bded	    0x488bbb180100	           mov rdi, qword [rbx + 0x118] 	      5763	option.c	FUNCTION_31	IF_1
0x400bdf4	    0x488983100100	            mov qword [rbx + 0x110], rax	      5765	option.c	FUNCTION_31
0x400bdfb	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x400bdfe	            0x740c	                            je 0x400be0c	      5763	option.c	FUNCTION_31	IF_1
0x400be00	      0xe800000000	                          call 0x400be05	      5764	option.c	FUNCTION_31	CALL_1
0x400be05	    0x488b05000000	            mov rax, qword [0x0400be0c] 	      5764	option.c	FUNCTION_31	CALL_1
0x400be0c	    0x488983180100	            mov qword [rbx + 0x118], rax	      5765	option.c	FUNCTION_31
0x400be13	              0x5b	                                 pop rbx	     11033	option.c	FUNCTION_83
0x400be14	              0xc3	                                     ret	     11033	option.c	FUNCTION_83
didset_options	SWITCH,0:CALL,20:DO,0:WHILE,0:IF,0:functions,0:ELSE,0:FOR,0	704
0x4002800	            0x4157	                                push r15	      5557	option.c	FUNCTION_26
0x4002802	            0x4156	                                push r14	      5557	option.c	FUNCTION_26
0x4002804	            0x4155	                                push r13	      5557	option.c	FUNCTION_26
0x4002806	            0x4154	                                push r12	      5557	option.c	FUNCTION_26
0x4002808	              0x55	                                push rbp	      5557	option.c	FUNCTION_26
0x4002809	              0x53	                                push rbx	      5557	option.c	FUNCTION_26
0x400280a	        0x4883ec38	                           sub rsp, 0x38	      5557	option.c	FUNCTION_26
0x400280e	    0x64488b042528	                mov rax, qword fs:[0x28]	      5557	option.c	FUNCTION_26
0x4002817	      0x4889442428	             mov qword [rsp + 0x28], rax	      5557	option.c	FUNCTION_26
0x400281c	            0x31c0	                            xor eax, eax	      5557	option.c	FUNCTION_26
0x400281e	      0xe800000000	                          call 0x4002823	      5559	option.c	FUNCTION_26	CALL_1
0x4002823	    0x488b1d000000	            mov rbx, qword [0x0400282a] 	      5562	option.c	FUNCTION_26	CALL_2
0x400282a	    0x488b05000000	            mov rax, qword [0x04002831] 	      5562	option.c	FUNCTION_26	CALL_2
0x4002831	    0xc744240c0000	                mov dword [rsp + 0xc], 0	     12360	option.c	FUNCTION_107	WHILE_1
0x4002839	        0x48890424	                    mov qword [rsp], rax	     12360	option.c	FUNCTION_107	WHILE_1
0x400283d	          0x803b00	                       cmp byte [rbx], 0	     12360	option.c	FUNCTION_107	WHILE_1
0x4002840	     0xf8478090000	                            je 0x40031be	     12360	option.c	FUNCTION_107	WHILE_1
0x4002846	        0x488b0424	                    mov rax, qword [rsp]	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x400284a	          0x4885c0	                           test rax, rax	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x400284d	            0x744e	                            je 0x400289d	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x400284f	          0x4989c6	                            mov r14, rax	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002852	          0x4531ff	                          xor r15d, r15d	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002855	           0xf1f00	                         nop dword [rax]	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002858	          0x4c89f7	                            mov rdi, r14	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x400285b	      0xe800000000	                          call 0x4002860	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x4002860	          0x4c63e8	                         movsxd r13, eax	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002863	          0x4889de	                            mov rsi, rbx	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002866	          0x4c89f7	                            mov rdi, r14	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002869	          0x4c89ea	                            mov rdx, r13	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x400286c	            0x89c5	                            mov ebp, eax	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x400286e	      0xe800000000	                          call 0x4002873	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002873	            0x85c0	                           test eax, eax	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002875	            0x7515	                           jne 0x400288c	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002877	      0x420fb6042b	             movzx eax, byte [rbx + r13]	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x400287c	            0x3c2c	                            cmp al, 0x2c	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x400287e	     0xf8494070000	                            je 0x4003018	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002884	            0x84c0	                             test al, al	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002886	     0xf8424090000	                            je 0x40031b0	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x400288c	        0x4983c701	                              add r15, 1	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002890	    0x4e8b34fd0000	                  mov r14, qword [r15*8]	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002898	          0x4d85f6	                           test r14, r14	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x400289b	            0x75bb	                           jne 0x4002858	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x400289d	    0x488b1d000000	            mov rbx, qword [0x040028a4] 	      5564	option.c	FUNCTION_26	CALL_3
0x40028a4	    0x488b05000000	            mov rax, qword [0x040028ab] 	      5564	option.c	FUNCTION_26	CALL_3
0x40028ab	    0xc744240c0000	                mov dword [rsp + 0xc], 0	     12360	option.c	FUNCTION_107	WHILE_1
0x40028b3	        0x48890424	                    mov qword [rsp], rax	     12360	option.c	FUNCTION_107	WHILE_1
0x40028b7	          0x803b00	                       cmp byte [rbx], 0	     12360	option.c	FUNCTION_107	WHILE_1
0x40028ba	     0xf847e080000	                            je 0x400313e	     12360	option.c	FUNCTION_107	WHILE_1
0x40028c0	        0x488b0424	                    mov rax, qword [rsp]	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x40028c4	          0x4885c0	                           test rax, rax	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x40028c7	            0x744c	                            je 0x4002915	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x40028c9	          0x4989c6	                            mov r14, rax	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x40028cc	          0x4531ff	                          xor r15d, r15d	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x40028cf	              0x90	                                     nop	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x40028d0	          0x4c89f7	                            mov rdi, r14	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x40028d3	      0xe800000000	                          call 0x40028d8	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x40028d8	          0x4c63e8	                         movsxd r13, eax	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x40028db	          0x4889de	                            mov rsi, rbx	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x40028de	          0x4c89f7	                            mov rdi, r14	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x40028e1	          0x4c89ea	                            mov rdx, r13	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x40028e4	            0x89c5	                            mov ebp, eax	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x40028e6	      0xe800000000	                          call 0x40028eb	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x40028eb	            0x85c0	                           test eax, eax	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x40028ed	            0x7515	                           jne 0x4002904	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x40028ef	      0x420fb6042b	             movzx eax, byte [rbx + r13]	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40028f4	            0x3c2c	                            cmp al, 0x2c	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40028f6	     0xf840c080000	                            je 0x4003108	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40028fc	            0x84c0	                             test al, al	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40028fe	     0xf842c080000	                            je 0x4003130	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002904	        0x4983c701	                              add r15, 1	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002908	    0x4e8b34fd0000	                  mov r14, qword [r15*8]	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002910	          0x4d85f6	                           test r14, r14	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002913	            0x75bb	                           jne 0x40028d0	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002915	    0x488b1d000000	            mov rbx, qword [0x0400291c] 	      5565	option.c	FUNCTION_26	CALL_4
0x400291c	    0x488b05000000	            mov rax, qword [0x04002923] 	      5565	option.c	FUNCTION_26	CALL_4
0x4002923	    0xc744240c0000	                mov dword [rsp + 0xc], 0	     12360	option.c	FUNCTION_107	WHILE_1
0x400292b	        0x48890424	                    mov qword [rsp], rax	     12360	option.c	FUNCTION_107	WHILE_1
0x400292f	          0x803b00	                       cmp byte [rbx], 0	     12360	option.c	FUNCTION_107	WHILE_1
0x4002932	     0xf8446080000	                            je 0x400317e	     12360	option.c	FUNCTION_107	WHILE_1
0x4002938	        0x488b0424	                    mov rax, qword [rsp]	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x400293c	          0x4885c0	                           test rax, rax	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x400293f	            0x7454	                            je 0x4002995	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002941	          0x4989c6	                            mov r14, rax	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002944	          0x4531ff	                          xor r15d, r15d	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002947	    0x660f1f840000	                    nop word [rax + rax]	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002950	          0x4c89f7	                            mov rdi, r14	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x4002953	      0xe800000000	                          call 0x4002958	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x4002958	          0x4c63e8	                         movsxd r13, eax	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x400295b	          0x4889de	                            mov rsi, rbx	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x400295e	          0x4c89f7	                            mov rdi, r14	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002961	          0x4c89ea	                            mov rdx, r13	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002964	            0x89c5	                            mov ebp, eax	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x4002966	      0xe800000000	                          call 0x400296b	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x400296b	            0x85c0	                           test eax, eax	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x400296d	            0x7515	                           jne 0x4002984	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x400296f	      0x420fb6042b	             movzx eax, byte [rbx + r13]	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002974	            0x3c2c	                            cmp al, 0x2c	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002976	     0xf8464070000	                            je 0x40030e0	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x400297c	            0x84c0	                             test al, al	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x400297e	     0xf84ec070000	                            je 0x4003170	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002984	        0x4983c701	                              add r15, 1	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002988	    0x4e8b34fd0000	                  mov r14, qword [r15*8]	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002990	          0x4d85f6	                           test r14, r14	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002993	            0x75bb	                           jne 0x4002950	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002995	    0x488b1d000000	            mov rbx, qword [0x0400299c] 	      5567	option.c	FUNCTION_26	CALL_5
0x400299c	    0x488b05000000	            mov rax, qword [0x040029a3] 	      5567	option.c	FUNCTION_26	CALL_5
0x40029a3	    0xc744240c0000	                mov dword [rsp + 0xc], 0	     12360	option.c	FUNCTION_107	WHILE_1
0x40029ab	        0x48890424	                    mov qword [rsp], rax	     12360	option.c	FUNCTION_107	WHILE_1
0x40029af	          0x803b00	                       cmp byte [rbx], 0	     12360	option.c	FUNCTION_107	WHILE_1
0x40029b2	     0xf84a6070000	                            je 0x400315e	     12360	option.c	FUNCTION_107	WHILE_1
0x40029b8	        0x488b0424	                    mov rax, qword [rsp]	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x40029bc	          0x4885c0	                           test rax, rax	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x40029bf	            0x7454	                            je 0x4002a15	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x40029c1	          0x4989c6	                            mov r14, rax	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x40029c4	          0x4531ff	                          xor r15d, r15d	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x40029c7	    0x660f1f840000	                    nop word [rax + rax]	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x40029d0	          0x4c89f7	                            mov rdi, r14	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x40029d3	      0xe800000000	                          call 0x40029d8	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x40029d8	          0x4c63e8	                         movsxd r13, eax	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x40029db	          0x4889de	                            mov rsi, rbx	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x40029de	          0x4c89f7	                            mov rdi, r14	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x40029e1	          0x4c89ea	                            mov rdx, r13	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x40029e4	            0x89c5	                            mov ebp, eax	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x40029e6	      0xe800000000	                          call 0x40029eb	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x40029eb	            0x85c0	                           test eax, eax	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x40029ed	            0x7515	                           jne 0x4002a04	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x40029ef	      0x420fb6042b	             movzx eax, byte [rbx + r13]	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40029f4	            0x3c2c	                            cmp al, 0x2c	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40029f6	     0xf84bc060000	                            je 0x40030b8	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40029fc	            0x84c0	                             test al, al	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40029fe	     0xf844c070000	                            je 0x4003150	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002a04	        0x4983c701	                              add r15, 1	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002a08	    0x4e8b34fd0000	                  mov r14, qword [r15*8]	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002a10	          0x4d85f6	                           test r14, r14	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002a13	            0x75bb	                           jne 0x40029d0	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002a15	    0x488b1d000000	            mov rbx, qword [0x04002a1c] 	      5568	option.c	FUNCTION_26	CALL_6
0x4002a1c	    0x488b05000000	            mov rax, qword [0x04002a23] 	      5568	option.c	FUNCTION_26	CALL_6
0x4002a23	    0xc744240c0000	                mov dword [rsp + 0xc], 0	     12360	option.c	FUNCTION_107	WHILE_1
0x4002a2b	        0x48890424	                    mov qword [rsp], rax	     12360	option.c	FUNCTION_107	WHILE_1
0x4002a2f	          0x803b00	                       cmp byte [rbx], 0	     12360	option.c	FUNCTION_107	WHILE_1
0x4002a32	     0xf8406080000	                            je 0x400323e	     12360	option.c	FUNCTION_107	WHILE_1
0x4002a38	        0x488b0424	                    mov rax, qword [rsp]	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002a3c	          0x4885c0	                           test rax, rax	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002a3f	            0x7454	                            je 0x4002a95	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002a41	          0x4989c6	                            mov r14, rax	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002a44	          0x4531ff	                          xor r15d, r15d	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002a47	    0x660f1f840000	                    nop word [rax + rax]	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002a50	          0x4c89f7	                            mov rdi, r14	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x4002a53	      0xe800000000	                          call 0x4002a58	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x4002a58	          0x4c63e8	                         movsxd r13, eax	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002a5b	          0x4889de	                            mov rsi, rbx	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002a5e	          0x4c89f7	                            mov rdi, r14	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002a61	          0x4c89ea	                            mov rdx, r13	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002a64	            0x89c5	                            mov ebp, eax	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x4002a66	      0xe800000000	                          call 0x4002a6b	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002a6b	            0x85c0	                           test eax, eax	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002a6d	            0x7515	                           jne 0x4002a84	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002a6f	      0x420fb6042b	             movzx eax, byte [rbx + r13]	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002a74	            0x3c2c	                            cmp al, 0x2c	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002a76	     0xf8414060000	                            je 0x4003090	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002a7c	            0x84c0	                             test al, al	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002a7e	     0xf84ac070000	                            je 0x4003230	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002a84	        0x4983c701	                              add r15, 1	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002a88	    0x4e8b34fd0000	                  mov r14, qword [r15*8]	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002a90	          0x4d85f6	                           test r14, r14	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002a93	            0x75bb	                           jne 0x4002a50	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002a95	    0x488b1d000000	            mov rbx, qword [0x04002a9c] 	      5571	option.c	FUNCTION_26	CALL_7
0x4002a9c	    0x488b05000000	            mov rax, qword [0x04002aa3] 	      5571	option.c	FUNCTION_26	CALL_7
0x4002aa3	    0xc744240c0000	                mov dword [rsp + 0xc], 0	     12360	option.c	FUNCTION_107	WHILE_1
0x4002aab	        0x48890424	                    mov qword [rsp], rax	     12360	option.c	FUNCTION_107	WHILE_1
0x4002aaf	          0x803b00	                       cmp byte [rbx], 0	     12360	option.c	FUNCTION_107	WHILE_1
0x4002ab2	     0xf8446070000	                            je 0x40031fe	     12360	option.c	FUNCTION_107	WHILE_1
0x4002ab8	        0x488b0424	                    mov rax, qword [rsp]	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002abc	          0x4885c0	                           test rax, rax	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002abf	            0x7454	                            je 0x4002b15	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002ac1	          0x4989c6	                            mov r14, rax	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002ac4	          0x4531ff	                          xor r15d, r15d	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002ac7	    0x660f1f840000	                    nop word [rax + rax]	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002ad0	          0x4c89f7	                            mov rdi, r14	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x4002ad3	      0xe800000000	                          call 0x4002ad8	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x4002ad8	          0x4c63e8	                         movsxd r13, eax	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002adb	          0x4889de	                            mov rsi, rbx	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002ade	          0x4c89f7	                            mov rdi, r14	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002ae1	          0x4c89ea	                            mov rdx, r13	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002ae4	            0x89c5	                            mov ebp, eax	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x4002ae6	      0xe800000000	                          call 0x4002aeb	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002aeb	            0x85c0	                           test eax, eax	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002aed	            0x7515	                           jne 0x4002b04	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002aef	      0x420fb6042b	             movzx eax, byte [rbx + r13]	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002af4	            0x3c2c	                            cmp al, 0x2c	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002af6	     0xf846c050000	                            je 0x4003068	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002afc	            0x84c0	                             test al, al	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002afe	     0xf84ec060000	                            je 0x40031f0	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002b04	        0x4983c701	                              add r15, 1	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002b08	    0x4e8b34fd0000	                  mov r14, qword [r15*8]	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002b10	          0x4d85f6	                           test r14, r14	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002b13	            0x75bb	                           jne 0x4002ad0	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002b15	    0x488b1d000000	            mov rbx, qword [0x04002b1c] 	      5573	option.c	FUNCTION_26	CALL_8
0x4002b1c	    0x488b05000000	            mov rax, qword [0x04002b23] 	      5573	option.c	FUNCTION_26	CALL_8
0x4002b23	    0xc744240c0000	                mov dword [rsp + 0xc], 0	     12360	option.c	FUNCTION_107	WHILE_1
0x4002b2b	        0x48890424	                    mov qword [rsp], rax	     12360	option.c	FUNCTION_107	WHILE_1
0x4002b2f	          0x803b00	                       cmp byte [rbx], 0	     12360	option.c	FUNCTION_107	WHILE_1
0x4002b32	     0xf8466060000	                            je 0x400319e	     12360	option.c	FUNCTION_107	WHILE_1
0x4002b38	        0x488b0424	                    mov rax, qword [rsp]	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002b3c	          0x4885c0	                           test rax, rax	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002b3f	            0x7454	                            je 0x4002b95	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002b41	          0x4989c6	                            mov r14, rax	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002b44	          0x4531ff	                          xor r15d, r15d	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002b47	    0x660f1f840000	                    nop word [rax + rax]	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002b50	          0x4c89f7	                            mov rdi, r14	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x4002b53	      0xe800000000	                          call 0x4002b58	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x4002b58	          0x4c63e8	                         movsxd r13, eax	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002b5b	          0x4889de	                            mov rsi, rbx	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002b5e	          0x4c89f7	                            mov rdi, r14	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002b61	          0x4c89ea	                            mov rdx, r13	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002b64	            0x89c5	                            mov ebp, eax	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x4002b66	      0xe800000000	                          call 0x4002b6b	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002b6b	            0x85c0	                           test eax, eax	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002b6d	            0x7515	                           jne 0x4002b84	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002b6f	      0x420fb6042b	             movzx eax, byte [rbx + r13]	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002b74	            0x3c2c	                            cmp al, 0x2c	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002b76	     0xf84c4040000	                            je 0x4003040	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002b7c	            0x84c0	                             test al, al	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002b7e	     0xf840c060000	                            je 0x4003190	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002b84	        0x4983c701	                              add r15, 1	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002b88	    0x4e8b34fd0000	                  mov r14, qword [r15*8]	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002b90	          0x4d85f6	                           test r14, r14	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002b93	            0x75bb	                           jne 0x4002b50	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002b95	    0x4c8b2d000000	            mov r13, qword [0x04002b9c] 	      5574	option.c	FUNCTION_26	CALL_9
0x4002b9c	            0x31c0	                            xor eax, eax	     12358	option.c	FUNCTION_107
0x4002b9e	      0x41807d0000	                       cmp byte [r13], 0	     12360	option.c	FUNCTION_107	WHILE_1
0x4002ba3	     0xf8411040000	                            je 0x4002fba	     12360	option.c	FUNCTION_107	WHILE_1
0x4002ba9	    0x488b2d000000	            mov rbp, qword [0x04002bb0] 	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002bb0	          0x4885ed	                           test rbp, rbp	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002bb3	            0x7445	                            je 0x4002bfa	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002bb5	          0x4531e4	                          xor r12d, r12d	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002bb8	     0xf1f84000000	                   nop dword [rax + rax]	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002bc0	          0x4889ef	                            mov rdi, rbp	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x4002bc3	      0xe800000000	                          call 0x4002bc8	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x4002bc8	          0x4863d8	                         movsxd rbx, eax	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002bcb	          0x4c89ee	                            mov rsi, r13	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002bce	          0x4889ef	                            mov rdi, rbp	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002bd1	          0x4889da	                            mov rdx, rbx	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002bd4	      0xe800000000	                          call 0x4002bd9	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002bd9	            0x85c0	                           test eax, eax	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002bdb	            0x750c	                           jne 0x4002be9	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002bdd	    0x41807c1d0000	                 cmp byte [r13 + rbx], 0	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002be3	     0xf84c7030000	                            je 0x4002fb0	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002be9	        0x4983c401	                              add r12, 1	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002bed	    0x4a8b2ce50000	                  mov rbp, qword [r12*8]	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002bf5	          0x4885ed	                           test rbp, rbp	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002bf8	            0x75c6	                           jne 0x4002bc0	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002bfa	    0x488b1d000000	            mov rbx, qword [0x04002c01] 	      5576	option.c	FUNCTION_26	CALL_10
0x4002c01	    0x488b05000000	            mov rax, qword [0x04002c08] 	      5576	option.c	FUNCTION_26	CALL_10
0x4002c08	    0xc744240c0000	                mov dword [rsp + 0xc], 0	     12360	option.c	FUNCTION_107	WHILE_1
0x4002c10	        0x48890424	                    mov qword [rsp], rax	     12360	option.c	FUNCTION_107	WHILE_1
0x4002c14	          0x803b00	                       cmp byte [rbx], 0	     12360	option.c	FUNCTION_107	WHILE_1
0x4002c17	     0xf84c1050000	                            je 0x40031de	     12360	option.c	FUNCTION_107	WHILE_1
0x4002c1d	        0x488b0424	                    mov rax, qword [rsp]	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002c21	          0x4885c0	                           test rax, rax	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002c24	            0x744f	                            je 0x4002c75	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002c26	          0x4989c6	                            mov r14, rax	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002c29	          0x4531ff	                          xor r15d, r15d	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002c2c	         0xf1f4000	                         nop dword [rax]	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002c30	          0x4c89f7	                            mov rdi, r14	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x4002c33	      0xe800000000	                          call 0x4002c38	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x4002c38	          0x4c63e8	                         movsxd r13, eax	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002c3b	          0x4889de	                            mov rsi, rbx	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002c3e	          0x4c89f7	                            mov rdi, r14	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002c41	          0x4c89ea	                            mov rdx, r13	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002c44	            0x89c5	                            mov ebp, eax	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x4002c46	      0xe800000000	                          call 0x4002c4b	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002c4b	            0x85c0	                           test eax, eax	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002c4d	            0x7515	                           jne 0x4002c64	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002c4f	      0x420fb6042b	             movzx eax, byte [rbx + r13]	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002c54	            0x3c2c	                            cmp al, 0x2c	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002c56	     0xf846c030000	                            je 0x4002fc8	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002c5c	            0x84c0	                             test al, al	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002c5e	     0xf846c050000	                            je 0x40031d0	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002c64	        0x4983c701	                              add r15, 1	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002c68	    0x4e8b34fd0000	                  mov r14, qword [r15*8]	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002c70	          0x4d85f6	                           test r14, r14	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002c73	            0x75bb	                           jne 0x4002c30	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002c75	    0x4c8b2d000000	            mov r13, qword [0x04002c7c] 	      5579	option.c	FUNCTION_26	CALL_11
0x4002c7c	            0x31c0	                            xor eax, eax	     12358	option.c	FUNCTION_107
0x4002c7e	      0x41807d0000	                       cmp byte [r13], 0	     12360	option.c	FUNCTION_107	WHILE_1
0x4002c83	     0xf8419030000	                            je 0x4002fa2	     12360	option.c	FUNCTION_107	WHILE_1
0x4002c89	    0x488b2d000000	            mov rbp, qword [0x04002c90] 	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002c90	          0x4885ed	                           test rbp, rbp	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002c93	            0x7445	                            je 0x4002cda	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002c95	          0x4531e4	                          xor r12d, r12d	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002c98	     0xf1f84000000	                   nop dword [rax + rax]	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002ca0	          0x4889ef	                            mov rdi, rbp	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x4002ca3	      0xe800000000	                          call 0x4002ca8	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x4002ca8	          0x4863d8	                         movsxd rbx, eax	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002cab	          0x4c89ee	                            mov rsi, r13	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002cae	          0x4889ef	                            mov rdi, rbp	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002cb1	          0x4889da	                            mov rdx, rbx	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002cb4	      0xe800000000	                          call 0x4002cb9	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002cb9	            0x85c0	                           test eax, eax	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002cbb	            0x750c	                           jne 0x4002cc9	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002cbd	    0x41807c1d0000	                 cmp byte [r13 + rbx], 0	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002cc3	     0xf84cf020000	                            je 0x4002f98	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002cc9	        0x4983c401	                              add r12, 1	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002ccd	    0x4a8b2ce50000	                  mov rbp, qword [r12*8]	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002cd5	          0x4885ed	                           test rbp, rbp	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002cd8	            0x75c6	                           jne 0x4002ca0	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002cda	      0xe800000000	                          call 0x4002cdf	      5582	option.c	FUNCTION_26	CALL_12
0x4002cdf	      0xe800000000	                          call 0x4002ce4	      5583	option.c	FUNCTION_26	CALL_13
0x4002ce4	    0x488b05000000	            mov rax, qword [0x04002ceb] 	      5584	option.c	FUNCTION_26	CALL_14
0x4002ceb	        0x488b5810	            mov rbx, qword [rax + 0x10] 	      5584	option.c	FUNCTION_26	CALL_14
0x4002cef	    0x488bb3680400	           mov rsi, qword [rbx + 0x468] 	      5584	option.c	FUNCTION_26	CALL_14
0x4002cf6	    0x4c8ba3700400	           mov r12, qword [rbx + 0x470] 	      8069	option.c	FUNCTION_47
0x4002cfd	          0x803e00	                       cmp byte [rsi], 0	      8072	option.c	FUNCTION_47	IF_1
0x4002d00	            0x7441	                            je 0x4002d43	      8072	option.c	FUNCTION_47	IF_1
0x4002d02	      0xbf00000000	                              mov edi, 0	      8077	option.c	FUNCTION_47	ELSE_1	CALL_1
0x4002d07	      0xe800000000	                          call 0x4002d0c	      8077	option.c	FUNCTION_47	ELSE_1	CALL_1
0x4002d0c	          0x4885c0	                           test rax, rax	      8078	option.c	FUNCTION_47	ELSE_1	IF_2
0x4002d0f	          0x4889c5	                            mov rbp, rax	      8077	option.c	FUNCTION_47	ELSE_1	CALL_1
0x4002d12	            0x743a	                            je 0x4002d4e	      8078	option.c	FUNCTION_47	ELSE_1	IF_2
0x4002d14	      0xbe01000000	                              mov esi, 1	      8080	option.c	FUNCTION_47	ELSE_1	IF_2	CALL_2
0x4002d19	          0x4889c7	                            mov rdi, rax	      8080	option.c	FUNCTION_47	ELSE_1	IF_2	CALL_2
0x4002d1c	      0xe800000000	                          call 0x4002d21	      8080	option.c	FUNCTION_47	ELSE_1	IF_2	CALL_2
0x4002d21	          0x4889ef	                            mov rdi, rbp	      8081	option.c	FUNCTION_47	ELSE_1	IF_2	CALL_3
0x4002d24	    0x488983700400	            mov qword [rbx + 0x470], rax	      8080	option.c	FUNCTION_47	ELSE_1	IF_2	CALL_2
0x4002d2b	      0xe800000000	                          call 0x4002d30	      8081	option.c	FUNCTION_47	ELSE_1	IF_2	CALL_3
0x4002d30	    0x4883bb700400	              cmp qword [rbx + 0x470], 0	      8082	option.c	FUNCTION_47	ELSE_1	IF_2	IF_3
0x4002d38	            0x7514	                           jne 0x4002d4e	      8082	option.c	FUNCTION_47	ELSE_1	IF_2	IF_3
0x4002d3a	    0x4c89a3700400	            mov qword [rbx + 0x470], r12	      8084	option.c	FUNCTION_47	ELSE_1	IF_2	IF_3
0x4002d41	            0xeb13	                           jmp 0x4002d56	      8084	option.c	FUNCTION_47	ELSE_1	IF_2	IF_3
0x4002d43	    0x48c783700400	              mov qword [rbx + 0x470], 0	      8073	option.c	FUNCTION_47	IF_1
0x4002d4e	          0x4c89e7	                            mov rdi, r12	      8090	option.c	FUNCTION_47	CALL_4
0x4002d51	      0xe800000000	                          call 0x4002d56	      8090	option.c	FUNCTION_47	CALL_4
0x4002d56	    0x488b05000000	            mov rax, qword [0x04002d5d] 	      8044	option.c	FUNCTION_46	IF_1	CALL_1
0x4002d5d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8044	option.c	FUNCTION_46	IF_1	CALL_1
0x4002d61	    0x488b98780400	           mov rbx, qword [rax + 0x478] 	      8044	option.c	FUNCTION_46	IF_1	CALL_1
0x4002d68	          0x4889df	                            mov rdi, rbx	      8044	option.c	FUNCTION_46	IF_1	CALL_1
0x4002d6b	      0xe800000000	                          call 0x4002d70	      8044	option.c	FUNCTION_46	IF_1	CALL_1
0x4002d70	            0x85c0	                           test eax, eax	      8045	option.c	FUNCTION_46	IF_1	IF_2
0x4002d72	     0xf8ec1010000	                           jle 0x4002f39	      8045	option.c	FUNCTION_46	IF_1	IF_2
0x4002d78	          0x83f803	                              cmp eax, 3	      8045	option.c	FUNCTION_46	IF_1	IF_2
0x4002d7b	     0xf8f9f010000	                            jg 0x4002f20	      8045	option.c	FUNCTION_46	IF_1	IF_2
0x4002d81	    0x488b1d000000	            mov rbx, qword [0x04002d88] 	      5588	option.c	FUNCTION_26	CALL_16
0x4002d88	    0x488b05000000	            mov rax, qword [0x04002d8f] 	      5588	option.c	FUNCTION_26	CALL_16
0x4002d8f	    0xc744240c0000	                mov dword [rsp + 0xc], 0	     12360	option.c	FUNCTION_107	WHILE_1
0x4002d97	        0x48890424	                    mov qword [rsp], rax	     12360	option.c	FUNCTION_107	WHILE_1
0x4002d9b	          0x803b00	                       cmp byte [rbx], 0	     12360	option.c	FUNCTION_107	WHILE_1
0x4002d9e	     0xf847a040000	                            je 0x400321e	     12360	option.c	FUNCTION_107	WHILE_1
0x4002da4	        0x488b0424	                    mov rax, qword [rsp]	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002da8	          0x4885c0	                           test rax, rax	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002dab	            0x7450	                            je 0x4002dfd	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002dad	          0x4989c6	                            mov r14, rax	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002db0	          0x4531ff	                          xor r15d, r15d	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002db3	       0xf1f440000	                   nop dword [rax + rax]	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002db8	          0x4c89f7	                            mov rdi, r14	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x4002dbb	      0xe800000000	                          call 0x4002dc0	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x4002dc0	          0x4c63e8	                         movsxd r13, eax	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002dc3	          0x4889de	                            mov rsi, rbx	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002dc6	          0x4c89f7	                            mov rdi, r14	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002dc9	          0x4c89ea	                            mov rdx, r13	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002dcc	            0x89c5	                            mov ebp, eax	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x4002dce	      0xe800000000	                          call 0x4002dd3	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002dd3	            0x85c0	                           test eax, eax	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002dd5	            0x7515	                           jne 0x4002dec	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002dd7	      0x420fb6042b	             movzx eax, byte [rbx + r13]	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002ddc	            0x3c2c	                            cmp al, 0x2c	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002dde	     0xf840c020000	                            je 0x4002ff0	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002de4	            0x84c0	                             test al, al	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002de6	     0xf8424040000	                            je 0x4003210	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002dec	        0x4983c701	                              add r15, 1	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002df0	    0x4e8b34fd0000	                  mov r14, qword [r15*8]	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002df8	          0x4d85f6	                           test r14, r14	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002dfb	            0x75bb	                           jne 0x4002db8	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002dfd	    0x4c8b2d000000	            mov r13, qword [0x04002e04] 	      5591	option.c	FUNCTION_26	CALL_17
0x4002e04	            0x31c0	                            xor eax, eax	     12358	option.c	FUNCTION_107
0x4002e06	      0x41807d0000	                       cmp byte [r13], 0	     12360	option.c	FUNCTION_107	WHILE_1
0x4002e0b	     0xf8479010000	                            je 0x4002f8a	     12360	option.c	FUNCTION_107	WHILE_1
0x4002e11	    0x488b2d000000	            mov rbp, qword [0x04002e18] 	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002e18	          0x4885ed	                           test rbp, rbp	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002e1b	            0x743d	                            je 0x4002e5a	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002e1d	          0x4531e4	                          xor r12d, r12d	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002e20	          0x4889ef	                            mov rdi, rbp	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x4002e23	      0xe800000000	                          call 0x4002e28	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x4002e28	          0x4863d8	                         movsxd rbx, eax	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002e2b	          0x4c89ee	                            mov rsi, r13	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002e2e	          0x4889ef	                            mov rdi, rbp	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002e31	          0x4889da	                            mov rdx, rbx	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002e34	      0xe800000000	                          call 0x4002e39	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002e39	            0x85c0	                           test eax, eax	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002e3b	            0x750c	                           jne 0x4002e49	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x4002e3d	    0x41807c1d0000	                 cmp byte [r13 + rbx], 0	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002e43	     0xf8437010000	                            je 0x4002f80	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002e49	        0x4983c401	                              add r12, 1	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002e4d	    0x4a8b2ce50000	                  mov rbp, qword [r12*8]	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002e55	          0x4885ed	                           test rbp, rbp	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002e58	            0x75c6	                           jne 0x4002e20	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x4002e5a	    0x488b15000000	            mov rdx, qword [0x04002e61] 	      5356	option.c	FUNCTION_20	IF_1
0x4002e61	           0xfb602	                   movzx eax, byte [rdx]	      5356	option.c	FUNCTION_20	IF_1
0x4002e64	            0x84c0	                             test al, al	      5356	option.c	FUNCTION_20	IF_1
0x4002e66	     0xf84e1030000	                            je 0x400324d	      5356	option.c	FUNCTION_20	IF_1
0x4002e6c	            0x3c3c	                            cmp al, 0x3c	      5337	option.c	FUNCTION_19	IF_1
0x4002e6e	     0xf8418040000	                            je 0x400328c	      5337	option.c	FUNCTION_19	IF_1
0x4002e74	            0x3c5e	                            cmp al, 0x5e	      5339	option.c	FUNCTION_19	IF_2
0x4002e76	           0xfb6d8	                           movzx ebx, al	      5343	option.c	FUNCTION_19
0x4002e79	     0xf84dd030000	                            je 0x400325c	      5339	option.c	FUNCTION_19	IF_2
0x4002e7f	            0x89df	                            mov edi, ebx	      5361	option.c	FUNCTION_20	ELSE_1	IF_2	CALL_2
0x4002e81	      0xe800000000	                          call 0x4002e86	      5361	option.c	FUNCTION_20	ELSE_1	IF_2	CALL_2
0x4002e86	            0x85c0	                           test eax, eax	      5361	option.c	FUNCTION_20	ELSE_1	IF_2	CALL_2
0x4002e88	     0xf84f3030000	                            je 0x4003281	      5361	option.c	FUNCTION_20	ELSE_1	IF_2	CALL_2
0x4002e8e	    0x488b3d000000	            mov rdi, qword [0x04002e95] 	      5598	option.c	FUNCTION_26	CALL_19
0x4002e95	      0xe8f6d7ffff	                   call sym.briopt_check	      5598	option.c	FUNCTION_26	CALL_19
0x4002e9a	      0xbf00000000	                              mov edi, 0	      5598	option.c	FUNCTION_26	CALL_19
0x4002e9f	      0xb900000000	                              mov ecx, 0	      5598	option.c	FUNCTION_26	CALL_19
0x4002ea4	            0x31c0	                            xor eax, eax	      5598	option.c	FUNCTION_26	CALL_19
0x4002ea6	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	      5598	option.c	FUNCTION_26	CALL_19
0x4002eaa	    0x48c705000000	               mov qword [0x04002eb5], 0	      5598	option.c	FUNCTION_26	CALL_19
0x4002eb5	    0x48c705000000	               mov qword [0x04002ec0], 0	      5598	option.c	FUNCTION_26	CALL_19
0x4002ec0	          0x4829f9	                            sub rcx, rdi	      5598	option.c	FUNCTION_26	CALL_19
0x4002ec3	    0x81c100010000	                          add ecx, 0x100	      5598	option.c	FUNCTION_26	CALL_19
0x4002ec9	          0xc1e903	                              shr ecx, 3	      5598	option.c	FUNCTION_26	CALL_19
0x4002ecc	          0xf348ab	              rep stosq qword [rdi], rax	      5598	option.c	FUNCTION_26	CALL_19
0x4002ecf	    0x488b15000000	            mov rdx, qword [0x04002ed6] 	     12316	option.c	FUNCTION_105	IF_1
0x4002ed6	          0x4885d2	                           test rdx, rdx	     12316	option.c	FUNCTION_105	IF_1
0x4002ed9	            0x741f	                            je 0x4002efa	     12316	option.c	FUNCTION_105	IF_1
0x4002edb	           0xfb602	                   movzx eax, byte [rdx]	     12317	option.c	FUNCTION_105	IF_1	FOR_2
0x4002ede	            0x84c0	                             test al, al	     12317	option.c	FUNCTION_105	IF_1	FOR_2
0x4002ee0	            0x7418	                            je 0x4002efa	     12317	option.c	FUNCTION_105	IF_1	FOR_2
0x4002ee2	    0x660f1f440000	                    nop word [rax + rax]	     12317	option.c	FUNCTION_105	IF_1	FOR_2
0x4002ee8	        0x4883c201	                              add rdx, 1	     12317	option.c	FUNCTION_105	IF_1	FOR_2
0x4002eec	    0xc68000000000	                       mov byte [rax], 1	     12318	option.c	FUNCTION_105	IF_1	FOR_2
0x4002ef3	           0xfb602	                   movzx eax, byte [rdx]	     12317	option.c	FUNCTION_105	IF_1	FOR_2
0x4002ef6	            0x84c0	                             test al, al	     12317	option.c	FUNCTION_105	IF_1	FOR_2
0x4002ef8	            0x75ee	                           jne 0x4002ee8	     12317	option.c	FUNCTION_105	IF_1	FOR_2
0x4002efa	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      5605	option.c	FUNCTION_26
0x4002eff	    0x644833042528	                xor rax, qword fs:[0x28]	      5605	option.c	FUNCTION_26
0x4002f08	     0xf85f2030000	                           jne 0x4003300	      5605	option.c	FUNCTION_26
0x4002f0e	        0x4883c438	                           add rsp, 0x38	      5605	option.c	FUNCTION_26
0x4002f12	              0x5b	                                 pop rbx	      5605	option.c	FUNCTION_26
0x4002f13	              0x5d	                                 pop rbp	      5605	option.c	FUNCTION_26
0x4002f14	            0x415c	                                 pop r12	      5605	option.c	FUNCTION_26
0x4002f16	            0x415d	                                 pop r13	      5605	option.c	FUNCTION_26
0x4002f18	            0x415e	                                 pop r14	      5605	option.c	FUNCTION_26
0x4002f1a	            0x415f	                                 pop r15	      5605	option.c	FUNCTION_26
0x4002f1c	              0xc3	                                     ret	      5605	option.c	FUNCTION_26
0x4002f1d	           0xf1f00	                         nop dword [rax]	      5605	option.c	FUNCTION_26
0x4002f20	            0x4898	                                    cdqe	      8046	option.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x4002f22	      0xbf00000000	                              mov edi, 0	      8046	option.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x4002f27	      0xb905000000	                              mov ecx, 5	      8046	option.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x4002f2c	      0x488d7403fc	                lea rsi, [rbx + rax - 4]	      8046	option.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x4002f31	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      8046	option.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x4002f33	     0xf8548feffff	                           jne 0x4002d81	      8046	option.c	FUNCTION_46	IF_1	IF_2	CALL_2
0x4002f39	    0x488b3d000000	            mov rdi, qword [0x04002f40] 	      8052	option.c	FUNCTION_46	IF_3	CALL_3
0x4002f40	          0x4885ff	                           test rdi, rdi	      8052	option.c	FUNCTION_46	IF_3	CALL_3
0x4002f43	     0xf8438feffff	                            je 0x4002d81	      8052	option.c	FUNCTION_46	IF_3	CALL_3
0x4002f49	    0x488b05000000	            mov rax, qword [0x04002f50] 	      8052	option.c	FUNCTION_46	IF_3	CALL_3
0x4002f50	            0xeb13	                           jmp 0x4002f65	      8052	option.c	FUNCTION_46	IF_3	CALL_3
0x4002f52	    0x660f1f440000	                    nop word [rax + rax]	      8052	option.c	FUNCTION_46	IF_3	CALL_3
0x4002f58	        0x488b7f20	            mov rdi, qword [rdi + 0x20] 	      8052	option.c	FUNCTION_46	IF_3	CALL_3
0x4002f5c	          0x4885ff	                           test rdi, rdi	      8052	option.c	FUNCTION_46	IF_3	CALL_3
0x4002f5f	     0xf841cfeffff	                            je 0x4002d81	      8052	option.c	FUNCTION_46	IF_3	CALL_3
0x4002f65	        0x48394708	                cmp qword [rdi + 8], rax	      8053	option.c	FUNCTION_46	IF_3	IF_4
0x4002f69	            0x75ed	                           jne 0x4002f58	      8053	option.c	FUNCTION_46	IF_3	IF_4
0x4002f6b	    0x8b8f68020000	           mov ecx, dword [rdi + 0x268] 	      8053	option.c	FUNCTION_46	IF_3	IF_4
0x4002f71	            0x85c9	                           test ecx, ecx	      8053	option.c	FUNCTION_46	IF_3	IF_4
0x4002f73	            0x74e3	                            je 0x4002f58	      8053	option.c	FUNCTION_46	IF_3	IF_4
0x4002f75	      0xe800000000	                          call 0x4002f7a	      8055	option.c	FUNCTION_46	IF_3	IF_4	CALL_4
0x4002f7a	      0xe902feffff	                           jmp 0x4002d81	      8055	option.c	FUNCTION_46	IF_3	IF_4	CALL_4
0x4002f7f	              0x90	                                     nop	      8055	option.c	FUNCTION_46	IF_3	IF_4	CALL_4
0x4002f80	      0xb801000000	                              mov eax, 1	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002f85	          0x4489e1	                           mov ecx, r12d	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002f88	            0xd3e0	                             shl eax, cl	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002f8a	    0x890500000000	            mov dword [0x04002f90], eax 	     12378	option.c	FUNCTION_107	IF_3
0x4002f90	      0xe9c5feffff	                           jmp 0x4002e5a	     12378	option.c	FUNCTION_107	IF_3
0x4002f95	           0xf1f00	                         nop dword [rax]	     12378	option.c	FUNCTION_107	IF_3
0x4002f98	      0xb801000000	                              mov eax, 1	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002f9d	          0x4489e1	                           mov ecx, r12d	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002fa0	            0xd3e0	                             shl eax, cl	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002fa2	    0x890500000000	            mov dword [0x04002fa8], eax 	     12378	option.c	FUNCTION_107	IF_3
0x4002fa8	      0xe92dfdffff	                           jmp 0x4002cda	     12378	option.c	FUNCTION_107	IF_3
0x4002fad	           0xf1f00	                         nop dword [rax]	     12378	option.c	FUNCTION_107	IF_3
0x4002fb0	      0xb801000000	                              mov eax, 1	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002fb5	          0x4489e1	                           mov ecx, r12d	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002fb8	            0xd3e0	                             shl eax, cl	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002fba	    0x890500000000	            mov dword [0x04002fc0], eax 	     12378	option.c	FUNCTION_107	IF_3
0x4002fc0	      0xe935fcffff	                           jmp 0x4002bfa	     12378	option.c	FUNCTION_107	IF_3
0x4002fc5	           0xf1f00	                         nop dword [rax]	     12378	option.c	FUNCTION_107	IF_3
0x4002fc8	          0x8d4501	                      lea eax, [rbp + 1]	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002fcb	          0x4489f9	                           mov ecx, r15d	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002fce	            0x4898	                                    cdqe	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002fd0	          0x4801c3	                            add rbx, rax	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002fd3	      0xb801000000	                              mov eax, 1	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002fd8	            0xd3e0	                             shl eax, cl	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002fda	         0x944240c	               or dword [rsp + 0xc], eax	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002fde	          0x803b00	                       cmp byte [rbx], 0	     12360	option.c	FUNCTION_107	WHILE_1
0x4002fe1	     0xf8536fcffff	                           jne 0x4002c1d	     12360	option.c	FUNCTION_107	WHILE_1
0x4002fe7	      0xe9f2010000	                           jmp 0x40031de	     12360	option.c	FUNCTION_107	WHILE_1
0x4002fec	         0xf1f4000	                         nop dword [rax]	     12360	option.c	FUNCTION_107	WHILE_1
0x4002ff0	          0x8d4501	                      lea eax, [rbp + 1]	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002ff3	          0x4489f9	                           mov ecx, r15d	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002ff6	            0x4898	                                    cdqe	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002ff8	          0x4801c3	                            add rbx, rax	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4002ffb	      0xb801000000	                              mov eax, 1	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4003000	            0xd3e0	                             shl eax, cl	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4003002	         0x944240c	               or dword [rsp + 0xc], eax	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4003006	          0x803b00	                       cmp byte [rbx], 0	     12360	option.c	FUNCTION_107	WHILE_1
0x4003009	     0xf8595fdffff	                           jne 0x4002da4	     12360	option.c	FUNCTION_107	WHILE_1
0x400300f	      0xe90a020000	                           jmp 0x400321e	     12360	option.c	FUNCTION_107	WHILE_1
0x4003014	         0xf1f4000	                         nop dword [rax]	     12360	option.c	FUNCTION_107	WHILE_1
0x4003018	          0x8d4501	                      lea eax, [rbp + 1]	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x400301b	          0x4489f9	                           mov ecx, r15d	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x400301e	            0x4898	                                    cdqe	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4003020	          0x4801c3	                            add rbx, rax	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4003023	      0xb801000000	                              mov eax, 1	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4003028	            0xd3e0	                             shl eax, cl	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x400302a	         0x944240c	               or dword [rsp + 0xc], eax	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x400302e	          0x803b00	                       cmp byte [rbx], 0	     12360	option.c	FUNCTION_107	WHILE_1
0x4003031	     0xf850ff8ffff	                           jne 0x4002846	     12360	option.c	FUNCTION_107	WHILE_1
0x4003037	      0xe982010000	                           jmp 0x40031be	     12360	option.c	FUNCTION_107	WHILE_1
0x400303c	         0xf1f4000	                         nop dword [rax]	     12360	option.c	FUNCTION_107	WHILE_1
0x4003040	          0x8d4501	                      lea eax, [rbp + 1]	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4003043	          0x4489f9	                           mov ecx, r15d	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4003046	            0x4898	                                    cdqe	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4003048	          0x4801c3	                            add rbx, rax	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x400304b	      0xb801000000	                              mov eax, 1	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4003050	            0xd3e0	                             shl eax, cl	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4003052	         0x944240c	               or dword [rsp + 0xc], eax	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4003056	          0x803b00	                       cmp byte [rbx], 0	     12360	option.c	FUNCTION_107	WHILE_1
0x4003059	     0xf85d9faffff	                           jne 0x4002b38	     12360	option.c	FUNCTION_107	WHILE_1
0x400305f	      0xe93a010000	                           jmp 0x400319e	     12360	option.c	FUNCTION_107	WHILE_1
0x4003064	         0xf1f4000	                         nop dword [rax]	     12360	option.c	FUNCTION_107	WHILE_1
0x4003068	          0x8d4501	                      lea eax, [rbp + 1]	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x400306b	          0x4489f9	                           mov ecx, r15d	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x400306e	            0x4898	                                    cdqe	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4003070	          0x4801c3	                            add rbx, rax	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4003073	      0xb801000000	                              mov eax, 1	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4003078	            0xd3e0	                             shl eax, cl	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x400307a	         0x944240c	               or dword [rsp + 0xc], eax	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x400307e	          0x803b00	                       cmp byte [rbx], 0	     12360	option.c	FUNCTION_107	WHILE_1
0x4003081	     0xf8531faffff	                           jne 0x4002ab8	     12360	option.c	FUNCTION_107	WHILE_1
0x4003087	      0xe972010000	                           jmp 0x40031fe	     12360	option.c	FUNCTION_107	WHILE_1
0x400308c	         0xf1f4000	                         nop dword [rax]	     12360	option.c	FUNCTION_107	WHILE_1
0x4003090	          0x8d4501	                      lea eax, [rbp + 1]	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4003093	          0x4489f9	                           mov ecx, r15d	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4003096	            0x4898	                                    cdqe	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4003098	          0x4801c3	                            add rbx, rax	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x400309b	      0xb801000000	                              mov eax, 1	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40030a0	            0xd3e0	                             shl eax, cl	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40030a2	         0x944240c	               or dword [rsp + 0xc], eax	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40030a6	          0x803b00	                       cmp byte [rbx], 0	     12360	option.c	FUNCTION_107	WHILE_1
0x40030a9	     0xf8589f9ffff	                           jne 0x4002a38	     12360	option.c	FUNCTION_107	WHILE_1
0x40030af	      0xe98a010000	                           jmp 0x400323e	     12360	option.c	FUNCTION_107	WHILE_1
0x40030b4	         0xf1f4000	                         nop dword [rax]	     12360	option.c	FUNCTION_107	WHILE_1
0x40030b8	          0x8d4501	                      lea eax, [rbp + 1]	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40030bb	          0x4489f9	                           mov ecx, r15d	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40030be	            0x4898	                                    cdqe	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40030c0	          0x4801c3	                            add rbx, rax	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40030c3	      0xb801000000	                              mov eax, 1	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40030c8	            0xd3e0	                             shl eax, cl	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40030ca	         0x944240c	               or dword [rsp + 0xc], eax	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40030ce	          0x803b00	                       cmp byte [rbx], 0	     12360	option.c	FUNCTION_107	WHILE_1
0x40030d1	     0xf85e1f8ffff	                           jne 0x40029b8	     12360	option.c	FUNCTION_107	WHILE_1
0x40030d7	      0xe982000000	                           jmp 0x400315e	     12360	option.c	FUNCTION_107	WHILE_1
0x40030dc	         0xf1f4000	                         nop dword [rax]	     12360	option.c	FUNCTION_107	WHILE_1
0x40030e0	          0x8d4501	                      lea eax, [rbp + 1]	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40030e3	          0x4489f9	                           mov ecx, r15d	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40030e6	            0x4898	                                    cdqe	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40030e8	          0x4801c3	                            add rbx, rax	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40030eb	      0xb801000000	                              mov eax, 1	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40030f0	            0xd3e0	                             shl eax, cl	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40030f2	         0x944240c	               or dword [rsp + 0xc], eax	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40030f6	          0x803b00	                       cmp byte [rbx], 0	     12360	option.c	FUNCTION_107	WHILE_1
0x40030f9	     0xf8539f8ffff	                           jne 0x4002938	     12360	option.c	FUNCTION_107	WHILE_1
0x40030ff	            0xeb7d	                           jmp 0x400317e	     12360	option.c	FUNCTION_107	WHILE_1
0x4003101	     0xf1f80000000	                         nop dword [rax]	     12360	option.c	FUNCTION_107	WHILE_1
0x4003108	          0x8d4501	                      lea eax, [rbp + 1]	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x400310b	          0x4489f9	                           mov ecx, r15d	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x400310e	            0x4898	                                    cdqe	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4003110	          0x4801c3	                            add rbx, rax	     12371	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4003113	      0xb801000000	                              mov eax, 1	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4003118	            0xd3e0	                             shl eax, cl	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x400311a	         0x944240c	               or dword [rsp + 0xc], eax	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x400311e	          0x803b00	                       cmp byte [rbx], 0	     12360	option.c	FUNCTION_107	WHILE_1
0x4003121	     0xf8599f7ffff	                           jne 0x40028c0	     12360	option.c	FUNCTION_107	WHILE_1
0x4003127	            0xeb15	                           jmp 0x400313e	     12360	option.c	FUNCTION_107	WHILE_1
0x4003129	     0xf1f80000000	                         nop dword [rax]	     12360	option.c	FUNCTION_107	WHILE_1
0x4003130	      0xb801000000	                              mov eax, 1	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4003135	          0x4489f9	                           mov ecx, r15d	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4003138	            0xd3e0	                             shl eax, cl	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x400313a	         0x944240c	               or dword [rsp + 0xc], eax	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x400313e	        0x8b44240c	              mov eax, dword [rsp + 0xc]	     12378	option.c	FUNCTION_107	IF_3
0x4003142	    0x890500000000	            mov dword [0x04003148], eax 	     12378	option.c	FUNCTION_107	IF_3
0x4003148	      0xe9c8f7ffff	                           jmp 0x4002915	     12378	option.c	FUNCTION_107	IF_3
0x400314d	           0xf1f00	                         nop dword [rax]	     12378	option.c	FUNCTION_107	IF_3
0x4003150	      0xb801000000	                              mov eax, 1	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4003155	          0x4489f9	                           mov ecx, r15d	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4003158	            0xd3e0	                             shl eax, cl	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x400315a	         0x944240c	               or dword [rsp + 0xc], eax	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x400315e	        0x8b44240c	              mov eax, dword [rsp + 0xc]	     12378	option.c	FUNCTION_107	IF_3
0x4003162	    0x890500000000	            mov dword [0x04003168], eax 	     12378	option.c	FUNCTION_107	IF_3
0x4003168	      0xe9a8f8ffff	                           jmp 0x4002a15	     12378	option.c	FUNCTION_107	IF_3
0x400316d	           0xf1f00	                         nop dword [rax]	     12378	option.c	FUNCTION_107	IF_3
0x4003170	      0xb801000000	                              mov eax, 1	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4003175	          0x4489f9	                           mov ecx, r15d	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4003178	            0xd3e0	                             shl eax, cl	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x400317a	         0x944240c	               or dword [rsp + 0xc], eax	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x400317e	        0x8b44240c	              mov eax, dword [rsp + 0xc]	     12378	option.c	FUNCTION_107	IF_3
0x4003182	    0x890500000000	            mov dword [0x04003188], eax 	     12378	option.c	FUNCTION_107	IF_3
0x4003188	      0xe908f8ffff	                           jmp 0x4002995	     12378	option.c	FUNCTION_107	IF_3
0x400318d	           0xf1f00	                         nop dword [rax]	     12378	option.c	FUNCTION_107	IF_3
0x4003190	      0xb801000000	                              mov eax, 1	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4003195	          0x4489f9	                           mov ecx, r15d	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4003198	            0xd3e0	                             shl eax, cl	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x400319a	         0x944240c	               or dword [rsp + 0xc], eax	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x400319e	        0x8b44240c	              mov eax, dword [rsp + 0xc]	     12378	option.c	FUNCTION_107	IF_3
0x40031a2	    0x890500000000	            mov dword [0x040031a8], eax 	     12378	option.c	FUNCTION_107	IF_3
0x40031a8	      0xe9e8f9ffff	                           jmp 0x4002b95	     12378	option.c	FUNCTION_107	IF_3
0x40031ad	           0xf1f00	                         nop dword [rax]	     12378	option.c	FUNCTION_107	IF_3
0x40031b0	      0xb801000000	                              mov eax, 1	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40031b5	          0x4489f9	                           mov ecx, r15d	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40031b8	            0xd3e0	                             shl eax, cl	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40031ba	         0x944240c	               or dword [rsp + 0xc], eax	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40031be	        0x8b44240c	              mov eax, dword [rsp + 0xc]	     12378	option.c	FUNCTION_107	IF_3
0x40031c2	    0x890500000000	            mov dword [0x040031c8], eax 	     12378	option.c	FUNCTION_107	IF_3
0x40031c8	      0xe9d0f6ffff	                           jmp 0x400289d	     12378	option.c	FUNCTION_107	IF_3
0x40031cd	           0xf1f00	                         nop dword [rax]	     12378	option.c	FUNCTION_107	IF_3
0x40031d0	      0xb801000000	                              mov eax, 1	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40031d5	          0x4489f9	                           mov ecx, r15d	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40031d8	            0xd3e0	                             shl eax, cl	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40031da	         0x944240c	               or dword [rsp + 0xc], eax	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40031de	        0x8b44240c	              mov eax, dword [rsp + 0xc]	     12378	option.c	FUNCTION_107	IF_3
0x40031e2	    0x890500000000	            mov dword [0x040031e8], eax 	     12378	option.c	FUNCTION_107	IF_3
0x40031e8	      0xe988faffff	                           jmp 0x4002c75	     12378	option.c	FUNCTION_107	IF_3
0x40031ed	           0xf1f00	                         nop dword [rax]	     12378	option.c	FUNCTION_107	IF_3
0x40031f0	      0xb801000000	                              mov eax, 1	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40031f5	          0x4489f9	                           mov ecx, r15d	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40031f8	            0xd3e0	                             shl eax, cl	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40031fa	         0x944240c	               or dword [rsp + 0xc], eax	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40031fe	        0x8b44240c	              mov eax, dword [rsp + 0xc]	     12378	option.c	FUNCTION_107	IF_3
0x4003202	    0x890500000000	            mov dword [0x04003208], eax 	     12378	option.c	FUNCTION_107	IF_3
0x4003208	      0xe908f9ffff	                           jmp 0x4002b15	     12378	option.c	FUNCTION_107	IF_3
0x400320d	           0xf1f00	                         nop dword [rax]	     12378	option.c	FUNCTION_107	IF_3
0x4003210	      0xb801000000	                              mov eax, 1	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4003215	          0x4489f9	                           mov ecx, r15d	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4003218	            0xd3e0	                             shl eax, cl	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x400321a	         0x944240c	               or dword [rsp + 0xc], eax	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x400321e	        0x8b44240c	              mov eax, dword [rsp + 0xc]	     12378	option.c	FUNCTION_107	IF_3
0x4003222	    0x890500000000	            mov dword [0x04003228], eax 	     12378	option.c	FUNCTION_107	IF_3
0x4003228	      0xe9d0fbffff	                           jmp 0x4002dfd	     12378	option.c	FUNCTION_107	IF_3
0x400322d	           0xf1f00	                         nop dword [rax]	     12378	option.c	FUNCTION_107	IF_3
0x4003230	      0xb801000000	                              mov eax, 1	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4003235	          0x4489f9	                           mov ecx, r15d	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x4003238	            0xd3e0	                             shl eax, cl	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x400323a	         0x944240c	               or dword [rsp + 0xc], eax	     12372	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x400323e	        0x8b44240c	              mov eax, dword [rsp + 0xc]	     12378	option.c	FUNCTION_107	IF_3
0x4003242	    0x890500000000	            mov dword [0x04003248], eax 	     12378	option.c	FUNCTION_107	IF_3
0x4003248	      0xe948f8ffff	                           jmp 0x4002a95	     12378	option.c	FUNCTION_107	IF_3
0x400324d	    0xc70500000000	     mov dword [0x04003257], 0xffffffff 	      5357	option.c	FUNCTION_20	IF_1
0x4003257	      0xe932fcffff	                           jmp 0x4002e8e	      5357	option.c	FUNCTION_20	IF_1
0x400325c	         0xfb64201	               movzx eax, byte [rdx + 1]	      5340	option.c	FUNCTION_19	CALL_2
0x4003260	          0x8d509f	                   lea edx, [rax - 0x61]	      5340	option.c	FUNCTION_19	CALL_2
0x4003263	          0x80fa19	                            cmp dl, 0x19	      5340	option.c	FUNCTION_19	CALL_2
0x4003266	            0x760b	                           jbe 0x4003273	      5340	option.c	FUNCTION_19	CALL_2
0x4003268	          0x83f040	                           xor eax, 0x40	      5340	option.c	FUNCTION_19	CALL_2
0x400326b	           0xfb6d8	                           movzx ebx, al	      5340	option.c	FUNCTION_19	CALL_2
0x400326e	      0xe90cfcffff	                           jmp 0x4002e7f	      5340	option.c	FUNCTION_19	CALL_2
0x4003273	           0xfb6d8	                           movzx ebx, al	      5340	option.c	FUNCTION_19	CALL_2
0x4003276	          0x83eb20	                           sub ebx, 0x20	      5340	option.c	FUNCTION_19	CALL_2
0x4003279	          0x83f340	                           xor ebx, 0x40	      5340	option.c	FUNCTION_19	CALL_2
0x400327c	      0xe9fefbffff	                           jmp 0x4002e7f	      5340	option.c	FUNCTION_19	CALL_2
0x4003281	    0x891d00000000	            mov dword [0x04003287], ebx 	      5363	option.c	FUNCTION_20	ELSE_1
0x4003287	      0xe902fcffff	                           jmp 0x4002e8e	      5363	option.c	FUNCTION_20	ELSE_1
0x400328c	        0x488d4201	                      lea rax, [rdx + 1]	      5363	option.c	FUNCTION_20	ELSE_1
0x4003290	      0x4889442420	             mov qword [rsp + 0x20], rax	      5363	option.c	FUNCTION_20	ELSE_1
0x4003295	        0x807a0174	                cmp byte [rdx + 1], 0x74	      9840	option.c	FUNCTION_60	IF_1
0x4003299	            0x743e	                            je 0x40032d9	      9840	option.c	FUNCTION_60	IF_1
0x400329b	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x40032a0	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x40032a5	      0x4889542420	             mov qword [rsp + 0x20], rdx	      9844	option.c	FUNCTION_60	ELSE_1
0x40032aa	          0x4531c0	                            xor r8d, r8d	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x40032ad	      0xba01000000	                              mov edx, 1	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x40032b2	      0xb901000000	                              mov ecx, 1	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x40032b7	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      9845	option.c	FUNCTION_60	ELSE_1
0x40032bf	      0xe800000000	                          call 0x40032c4	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x40032c4	        0x8b54241c	            mov edx, dword [rsp + 0x1c] 	      9848	option.c	FUNCTION_60	ELSE_1	IF_2
0x40032c8	            0x85d2	                           test edx, edx	      9848	option.c	FUNCTION_60	ELSE_1	IF_2
0x40032ca	      0xba00000000	                              mov edx, 0	      9848	option.c	FUNCTION_60	ELSE_1	IF_2
0x40032cf	           0xf45c2	                         cmovne eax, edx	      9848	option.c	FUNCTION_60	ELSE_1	IF_2
0x40032d2	            0x89c3	                            mov ebx, eax	      9848	option.c	FUNCTION_60	ELSE_1	IF_2
0x40032d4	      0xe9a6fbffff	                           jmp 0x4002e7f	      9848	option.c	FUNCTION_60	ELSE_1	IF_2
0x40032d9	        0x807a025f	                cmp byte [rdx + 2], 0x5f	      9840	option.c	FUNCTION_60	IF_1
0x40032dd	            0x75bc	                           jne 0x400329b	      9840	option.c	FUNCTION_60	IF_1
0x40032df	         0xfb64203	               movzx eax, byte [rdx + 3]	      9840	option.c	FUNCTION_60	IF_1
0x40032e3	            0x84c0	                             test al, al	      9840	option.c	FUNCTION_60	IF_1
0x40032e5	            0x74b4	                            je 0x400329b	      9840	option.c	FUNCTION_60	IF_1
0x40032e7	         0xfb64a04	               movzx ecx, byte [rdx + 4]	      9840	option.c	FUNCTION_60	IF_1
0x40032eb	            0x84c9	                             test cl, cl	      9840	option.c	FUNCTION_60	IF_1
0x40032ed	            0x74ac	                            je 0x400329b	      9840	option.c	FUNCTION_60	IF_1
0x40032ef	           0xfb6d1	                           movzx edx, cl	      9841	option.c	FUNCTION_60	CALL_1
0x40032f2	          0xc1e208	                              shl edx, 8	      9841	option.c	FUNCTION_60	CALL_1
0x40032f5	             0x1d0	                            add eax, edx	      9841	option.c	FUNCTION_60	CALL_1
0x40032f7	            0xf7d8	                                 neg eax	      9841	option.c	FUNCTION_60	CALL_1
0x40032f9	            0x89c3	                            mov ebx, eax	      9841	option.c	FUNCTION_60	CALL_1
0x40032fb	      0xe97ffbffff	                           jmp 0x4002e7f	      9841	option.c	FUNCTION_60	CALL_1
0x4003300	      0xe800000000	                          call 0x4003305	      5605	option.c	FUNCTION_26
init_gui_options	SWITCH,0:CALL,6:DO,0:WHILE,0:IF,1:functions,0:ELSE,0:FOR,0	40
0x4013010	              0x55	                                push rbp	      4266	option.c	FUNCTION_13
0x4013011	              0x53	                                push rbx	      4266	option.c	FUNCTION_13
0x4013012	      0xbf00000000	                              mov edi, 0	     12256	option.c	FUNCTION_102	CALL_1
0x4013017	        0x4883ec08	                              sub rsp, 8	      4266	option.c	FUNCTION_13
0x401301b	      0xe800d3feff	                     call sym.findoption	     12256	option.c	FUNCTION_102	CALL_1
0x4013020	            0x85c0	                           test eax, eax	     12257	option.c	FUNCTION_102	IF_1
0x4013022	            0x781c	                            js 0x4013040	     12257	option.c	FUNCTION_102	IF_1
0x4013024	            0x4898	                                    cdqe	     12259	option.c	FUNCTION_102	IF_2
0x4013026	        0x48c1e006	                              shl rax, 6	     12259	option.c	FUNCTION_102	IF_2
0x401302a	    0xf68000000000	                      test byte [rax], 1	     12259	option.c	FUNCTION_102	IF_2
0x4013031	            0x740d	                            je 0x4013040	     12259	option.c	FUNCTION_102	IF_2
0x4013033	        0x4883c408	                              add rsp, 8	      4274	option.c	FUNCTION_13
0x4013037	              0x5b	                                 pop rbx	      4274	option.c	FUNCTION_13
0x4013038	              0x5d	                                 pop rbp	      4274	option.c	FUNCTION_13
0x4013039	              0xc3	                                     ret	      4274	option.c	FUNCTION_13
0x401303a	    0x660f1f440000	                    nop word [rax + rax]	      4274	option.c	FUNCTION_13
0x4013040	    0x488b3d000000	            mov rdi, qword [0x04013047] 	      4256	option.c	FUNCTION_12	IF_1	CALL_1
0x4013047	      0xbd00000000	                              mov ebp, 0	      4258	option.c	FUNCTION_12
0x401304c	      0xbb00000000	                              mov ebx, 0	      4258	option.c	FUNCTION_12
0x4013051	      0xe800000000	                          call 0x4013056	      4256	option.c	FUNCTION_12	IF_1	CALL_1
0x4013056	    0x488b3d000000	            mov rdi, qword [0x0401305d] 	      4269	option.c	FUNCTION_13	IF_1	CALL_3
0x401305d	          0x83f87f	                           cmp eax, 0x7f	      4258	option.c	FUNCTION_12
0x4013060	          0x4889ee	                            mov rsi, rbp	      4258	option.c	FUNCTION_12
0x4013063	        0x480f4cf3	                          cmovl rsi, rbx	      4258	option.c	FUNCTION_12
0x4013067	      0xe800000000	                          call 0x401306c	      4269	option.c	FUNCTION_13	IF_1	CALL_3
0x401306c	            0x85c0	                           test eax, eax	      4269	option.c	FUNCTION_13	IF_1	CALL_3
0x401306e	            0x74c3	                            je 0x4013033	      4269	option.c	FUNCTION_13	IF_1	CALL_3
0x4013070	    0x488b3d000000	            mov rdi, qword [0x04013077] 	      4256	option.c	FUNCTION_12	IF_1	CALL_1
0x4013077	      0xe800000000	                          call 0x401307c	      4256	option.c	FUNCTION_12	IF_1	CALL_1
0x401307c	          0x4889ea	                            mov rdx, rbp	      4258	option.c	FUNCTION_12
0x401307f	          0x83f87f	                           cmp eax, 0x7f	      4258	option.c	FUNCTION_12
0x4013082	      0xbf00000000	                              mov edi, 0	      4271	option.c	FUNCTION_13	IF_1	CALL_5
0x4013087	        0x480f4cd3	                          cmovl rdx, rbx	      4258	option.c	FUNCTION_12
0x401308b	            0x31c9	                            xor ecx, ecx	      4271	option.c	FUNCTION_13	IF_1	CALL_5
0x401308d	            0x31f6	                            xor esi, esi	      4271	option.c	FUNCTION_13	IF_1	CALL_5
0x401308f	      0xe800000000	                          call 0x4013094	      4271	option.c	FUNCTION_13	IF_1	CALL_5
0x4013094	        0x4883c408	                              add rsp, 8	      4274	option.c	FUNCTION_13
0x4013098	              0x5b	                                 pop rbx	      4274	option.c	FUNCTION_13
0x4013099	              0x5d	                                 pop rbp	      4274	option.c	FUNCTION_13
0x401309a	      0xe900000000	                           jmp 0x401309f	      4272	option.c	FUNCTION_13	IF_1	CALL_6
signcolumn_on	SWITCH,0:CALL,0:DO,0:WHILE,0:IF,2:functions,0:ELSE,0:FOR,0	23
0x4013480	    0x488b87b80200	           mov rax, qword [rdi + 0x2b8] 	     12697	option.c	FUNCTION_118	IF_1
0x4013487	           0xfb600	                   movzx eax, byte [rax]	     12697	option.c	FUNCTION_118	IF_1
0x401348a	            0x3c6e	                            cmp al, 0x6e	     12697	option.c	FUNCTION_118	IF_1
0x401348c	            0x7432	                            je 0x40134c0	     12697	option.c	FUNCTION_118	IF_1
0x401348e	            0x3c79	                            cmp al, 0x79	     12699	option.c	FUNCTION_118	IF_2
0x4013490	            0x7436	                            je 0x40134c8	     12699	option.c	FUNCTION_118	IF_2
0x4013492	        0x488b5708	                mov rdx, qword [rdi + 8]	     12701	option.c	FUNCTION_118
0x4013496	      0xb801000000	                              mov eax, 1	     12700	option.c	FUNCTION_118	IF_2
0x401349b	    0x4883ba201c00	             cmp qword [rdx + 0x1c20], 0	     12703	option.c	FUNCTION_118
0x40134a3	            0x740b	                            je 0x40134b0	     12703	option.c	FUNCTION_118
0x40134a5	            0xf3c3	                                     ret	     12706	option.c	FUNCTION_118
0x40134a7	    0x660f1f840000	                    nop word [rax + rax]	     12706	option.c	FUNCTION_118
0x40134b0	    0x8b92281c0000	          mov edx, dword [rdx + 0x1c28] 	     12698	option.c	FUNCTION_118	IF_1
0x40134b6	            0x31c0	                            xor eax, eax	     12698	option.c	FUNCTION_118	IF_1
0x40134b8	            0x85d2	                           test edx, edx	     12698	option.c	FUNCTION_118	IF_1
0x40134ba	           0xf95c0	                                setne al	     12698	option.c	FUNCTION_118	IF_1
0x40134bd	              0xc3	                                     ret	     12698	option.c	FUNCTION_118	IF_1
0x40134be	            0x6690	                                     nop	     12698	option.c	FUNCTION_118	IF_1
0x40134c0	            0x31c0	                            xor eax, eax	     12698	option.c	FUNCTION_118	IF_1
0x40134c2	              0xc3	                                     ret	     12698	option.c	FUNCTION_118	IF_1
0x40134c3	       0xf1f440000	                   nop dword [rax + rax]	     12698	option.c	FUNCTION_118	IF_1
0x40134c8	      0xb801000000	                              mov eax, 1	     12700	option.c	FUNCTION_118	IF_2
0x40134cd	              0xc3	                                     ret	     12706	option.c	FUNCTION_118
buf_copy_options	SWITCH,1:CALL,37:DO,0:WHILE,0:IF,10:functions,0:ELSE,2:FOR,0	349
0x400be20	            0x4157	                                push r15	     11046	option.c	FUNCTION_84
0x400be22	            0x4156	                                push r14	     11046	option.c	FUNCTION_84
0x400be24	            0x4155	                                push r13	     11046	option.c	FUNCTION_84
0x400be26	            0x4154	                                push r12	     11046	option.c	FUNCTION_84
0x400be28	              0x55	                                push rbp	     11046	option.c	FUNCTION_84
0x400be29	              0x53	                                push rbx	     11046	option.c	FUNCTION_84
0x400be2a	          0x4889fb	                            mov rbx, rdi	     11046	option.c	FUNCTION_84
0x400be2d	        0x4883ec08	                              sub rsp, 8	     11046	option.c	FUNCTION_84
0x400be31	    0x488b3d000000	            mov rdi, qword [0x0400be38] 	     11056	option.c	FUNCTION_84	IF_1
0x400be38	          0x4885ff	                           test rdi, rdi	     11056	option.c	FUNCTION_84	IF_1
0x400be3b	     0xf84bd050000	                            je 0x400c3fe	     11056	option.c	FUNCTION_84	IF_1
0x400be41	            0x89f5	                            mov ebp, esi	     11056	option.c	FUNCTION_84	IF_1
0x400be43	      0xbe53000000	                           mov esi, 0x53	     11070	option.c	FUNCTION_84	IF_1	IF_2	CALL_1
0x400be48	      0xe800000000	                          call 0x400be4d	     11070	option.c	FUNCTION_84	IF_1	IF_2	CALL_1
0x400be4d	          0x4885c0	                           test rax, rax	     11070	option.c	FUNCTION_84	IF_1	IF_2	CALL_1
0x400be50	     0xf84ba060000	                            je 0x400c510	     11070	option.c	FUNCTION_84	IF_1	IF_2	CALL_1
0x400be56	        0x40f6c501	                             test bpl, 1	     11070	option.c	FUNCTION_84	IF_1	IF_2	CALL_1
0x400be5a	     0xf84b8050000	                            je 0x400c418	     11070	option.c	FUNCTION_84	IF_1	IF_2	CALL_1
0x400be60	    0x8b83a8120000	          mov eax, dword [rbx + 0x12a8] 	     11070	option.c	FUNCTION_84	IF_1	IF_2	CALL_1
0x400be66	    0x41bc01000000	                             mov r12d, 1	     11046	option.c	FUNCTION_84
0x400be6c	          0x83e504	                              and ebp, 4	     11082	option.c	FUNCTION_84	IF_1	IF_3
0x400be6f	            0x742f	                            je 0x400bea0	     11082	option.c	FUNCTION_84	IF_1	IF_3
0x400be71	    0x8b8b58170000	          mov ecx, dword [rbx + 0x1758] 	     11081	option.c	FUNCTION_84	IF_1	IF_3
0x400be77	            0x85c9	                           test ecx, ecx	     11081	option.c	FUNCTION_84	IF_1	IF_3
0x400be79	            0x7425	                            je 0x400bea0	     11081	option.c	FUNCTION_84	IF_1	IF_3
0x400be7b	            0x85c0	                           test eax, eax	     11092	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x400be7d	    0x4c8babb81400	          mov r13, qword [rbx + 0x14b8] 	     11085	option.c	FUNCTION_84	IF_1	IF_3	IF_4
0x400be84	    0x48c783b81400	            mov qword [rbx + 0x14b8], 0 	     11086	option.c	FUNCTION_84	IF_1	IF_3	IF_4
0x400be8f	     0xf85bd050000	                           jne 0x400c452	     11092	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x400be95	      0xbd01000000	                              mov ebp, 1	     11092	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x400be9a	            0xeb11	                           jmp 0x400bead	     11092	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x400be9c	         0xf1f4000	                         nop dword [rax]	     11092	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x400bea0	            0x85c0	                           test eax, eax	     11082	option.c	FUNCTION_84	IF_1	IF_3
0x400bea2	     0xf8598050000	                           jne 0x400c440	     11082	option.c	FUNCTION_84	IF_1	IF_3
0x400bea8	            0x31ed	                            xor ebp, ebp	     11082	option.c	FUNCTION_84	IF_1	IF_3
0x400beaa	          0x4531ed	                          xor r13d, r13d	     11048	option.c	FUNCTION_84
0x400bead	      0xbe01000000	                              mov esi, 1	     11094	option.c	FUNCTION_84	IF_1	IF_3	IF_5	CALL_3
0x400beb2	          0x4889df	                            mov rdi, rbx	     11094	option.c	FUNCTION_84	IF_1	IF_3	IF_5	CALL_3
0x400beb5	      0xe800000000	                          call 0x400beba	     11094	option.c	FUNCTION_84	IF_1	IF_3	IF_5	CALL_3
0x400beba	    0x8b0500000000	            mov eax, dword [0x0400bec0] 	     11096	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x400bec0	    0x488b3d000000	            mov rdi, qword [0x0400bec7] 	     11098	option.c	FUNCTION_84	IF_1	IF_3	IF_5	CALL_4
0x400bec7	    0xc78360150000	            mov dword [rbx + 0x1560], 0 	     11095	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x400bed1	    0x8983b0150000	          mov dword [rbx + 0x15b0], eax 	     11096	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x400bed7	      0xe800000000	                          call 0x400bedc	     11098	option.c	FUNCTION_84	IF_1	IF_3	IF_5	CALL_4
0x400bedc	    0x488983881400	          mov qword [rbx + 0x1488], rax 	     11098	option.c	FUNCTION_84	IF_1	IF_3	IF_5	CALL_4
0x400bee3	    0x488b05000000	            mov rax, qword [0x0400beea] 	     11100	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1
0x400beea	           0xfb600	                   movzx eax, byte [rax]	     11100	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1
0x400beed	            0x3c6d	                            cmp al, 0x6d	     11100	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1
0x400beef	     0xf845b060000	                            je 0x400c550	     11100	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1
0x400bef5	            0x3c75	                            cmp al, 0x75	     11100	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1
0x400bef7	     0xf8493060000	                            je 0x400c590	     11100	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1
0x400befd	            0x3c64	                            cmp al, 0x64	     11100	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1
0x400beff	     0xf846b060000	                            je 0x400c570	     11100	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1
0x400bf05	    0x488b3d000000	            mov rdi, qword [0x0400bf0c] 	     11109	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_8
0x400bf0c	      0xe800000000	                          call 0x400bf11	     11109	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_8
0x400bf11	    0x488983901400	          mov qword [rbx + 0x1490], rax 	     11109	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_8
0x400bf18	          0x4885c0	                           test rax, rax	     11111	option.c	FUNCTION_84	IF_1	IF_3	IF_5	IF_6
0x400bf1b	            0x7409	                            je 0x400bf26	     11111	option.c	FUNCTION_84	IF_1	IF_3	IF_5	IF_6
0x400bf1d	           0xfb600	                   movzx eax, byte [rax]	     11112	option.c	FUNCTION_84	IF_1	IF_3	IF_5	IF_6
0x400bf20	    0x898304170000	          mov dword [rbx + 0x1704], eax 	     11112	option.c	FUNCTION_84	IF_1	IF_3	IF_5	IF_6
0x400bf26	    0x488b05000000	            mov rax, qword [0x0400bf2d] 	     11113	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x400bf2d	    0x488983101400	          mov qword [rbx + 0x1410], rax 	     11113	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x400bf34	    0x488983181400	          mov qword [rbx + 0x1418], rax 	     11114	option.c	FUNCTION_84	IF_1	IF_3	IF_5
0x400bf3b	    0x8b0500000000	            mov eax, dword [0x0400bf41] 	     11119	option.c	FUNCTION_84	IF_1	IF_3
0x400bf41	    0x8983ec130000	          mov dword [rbx + 0x13ec], eax 	     11119	option.c	FUNCTION_84	IF_1	IF_3
0x400bf47	    0x8b0500000000	            mov eax, dword [0x0400bf4d] 	     11120	option.c	FUNCTION_84	IF_1	IF_3
0x400bf4d	    0x8983f0130000	          mov dword [rbx + 0x13f0], eax 	     11120	option.c	FUNCTION_84	IF_1	IF_3
0x400bf53	    0x488b05000000	            mov rax, qword [0x0400bf5a] 	     11121	option.c	FUNCTION_84	IF_1	IF_3
0x400bf5a	    0x488983681500	          mov qword [rbx + 0x1568], rax 	     11121	option.c	FUNCTION_84	IF_1	IF_3
0x400bf61	    0x488b05000000	            mov rax, qword [0x0400bf68] 	     11122	option.c	FUNCTION_84	IF_1	IF_3
0x400bf68	    0x488983b81500	          mov qword [rbx + 0x15b8], rax 	     11122	option.c	FUNCTION_84	IF_1	IF_3
0x400bf6f	    0x488b05000000	            mov rax, qword [0x0400bf76] 	     11123	option.c	FUNCTION_84	IF_1	IF_3
0x400bf76	    0x488983c81500	          mov qword [rbx + 0x15c8], rax 	     11123	option.c	FUNCTION_84	IF_1	IF_3
0x400bf7d	    0x488b05000000	            mov rax, qword [0x0400bf84] 	     11124	option.c	FUNCTION_84	IF_1	IF_3
0x400bf84	    0x488983c01500	          mov qword [rbx + 0x15c0], rax 	     11124	option.c	FUNCTION_84	IF_1	IF_3
0x400bf8b	    0x488b05000000	            mov rax, qword [0x0400bf92] 	     11125	option.c	FUNCTION_84	IF_1	IF_3
0x400bf92	    0x488983d01500	          mov qword [rbx + 0x15d0], rax 	     11125	option.c	FUNCTION_84	IF_1	IF_3
0x400bf99	    0x488b05000000	            mov rax, qword [0x0400bfa0] 	     11126	option.c	FUNCTION_84	IF_1	IF_3
0x400bfa0	    0x488983e01500	          mov qword [rbx + 0x15e0], rax 	     11126	option.c	FUNCTION_84	IF_1	IF_3
0x400bfa7	    0x488b05000000	            mov rax, qword [0x0400bfae] 	     11127	option.c	FUNCTION_84	IF_1	IF_3
0x400bfae	    0x488983d81500	          mov qword [rbx + 0x15d8], rax 	     11127	option.c	FUNCTION_84	IF_1	IF_3
0x400bfb5	    0x8b0500000000	            mov eax, dword [0x0400bfbb] 	     11128	option.c	FUNCTION_84	IF_1	IF_3
0x400bfbb	    0x898308140000	          mov dword [rbx + 0x1408], eax 	     11128	option.c	FUNCTION_84	IF_1	IF_3
0x400bfc1	    0x8b0500000000	            mov eax, dword [0x0400bfc7] 	     11130	option.c	FUNCTION_84	IF_1	IF_3
0x400bfc7	    0x89830c140000	          mov dword [rbx + 0x140c], eax 	     11130	option.c	FUNCTION_84	IF_1	IF_3
0x400bfcd	    0x8b0500000000	            mov eax, dword [0x0400bfd3] 	     11132	option.c	FUNCTION_84	IF_1	IF_3
0x400bfd3	    0x898374140000	          mov dword [rbx + 0x1474], eax 	     11132	option.c	FUNCTION_84	IF_1	IF_3
0x400bfd9	    0x8b0500000000	            mov eax, dword [0x0400bfdf] 	     11133	option.c	FUNCTION_84	IF_1	IF_3
0x400bfdf	    0x898378140000	          mov dword [rbx + 0x1478], eax 	     11133	option.c	FUNCTION_84	IF_1	IF_3
0x400bfe5	    0x8b0500000000	            mov eax, dword [0x0400bfeb] 	     11134	option.c	FUNCTION_84	IF_1	IF_3
0x400bfeb	    0x89837c140000	          mov dword [rbx + 0x147c], eax 	     11134	option.c	FUNCTION_84	IF_1	IF_3
0x400bff1	    0x8b0500000000	            mov eax, dword [0x0400bff7] 	     11135	option.c	FUNCTION_84	IF_1	IF_3
0x400bff7	    0x898380140000	          mov dword [rbx + 0x1480], eax 	     11135	option.c	FUNCTION_84	IF_1	IF_3
0x400bffd	    0x8b0500000000	            mov eax, dword [0x0400c003] 	     11136	option.c	FUNCTION_84	IF_1	IF_3
0x400c003	    0x898338150000	          mov dword [rbx + 0x1538], eax 	     11136	option.c	FUNCTION_84	IF_1	IF_3
0x400c009	    0x8b0500000000	            mov eax, dword [0x0400c00f] 	     11137	option.c	FUNCTION_84	IF_1	IF_3
0x400c00f	    0x8b1500000000	            mov edx, dword [0x0400c015] 	     11139	option.c	FUNCTION_84	IF_1	IF_3
0x400c015	    0x488b3d000000	            mov rdi, qword [0x0400c01c] 	     11141	option.c	FUNCTION_84	IF_1	IF_3	CALL_10
0x400c01c	    0x89833c150000	          mov dword [rbx + 0x153c], eax 	     11137	option.c	FUNCTION_84	IF_1	IF_3
0x400c022	    0x8b0500000000	            mov eax, dword [0x0400c028] 	     11138	option.c	FUNCTION_84	IF_1	IF_3
0x400c028	            0x85d2	                           test edx, edx	     11139	option.c	FUNCTION_84	IF_1	IF_3
0x400c02a	    0x8983b0140000	          mov dword [rbx + 0x14b0], eax 	     11138	option.c	FUNCTION_84	IF_1	IF_3
0x400c030	      0xb800000000	                              mov eax, 0	     11139	option.c	FUNCTION_84	IF_1	IF_3
0x400c035	     0xf4405000000	           cmove eax, dword [0x0400c03c]	     11139	option.c	FUNCTION_84	IF_1	IF_3
0x400c03c	    0x898390150000	          mov dword [rbx + 0x1590], eax 	     11139	option.c	FUNCTION_84	IF_1	IF_3
0x400c042	      0xe800000000	                          call 0x400c047	     11141	option.c	FUNCTION_84	IF_1	IF_3	CALL_10
0x400c047	    0x488b3d000000	            mov rdi, qword [0x0400c04e] 	     11144	option.c	FUNCTION_84	IF_1	IF_3	CALL_11
0x400c04e	    0x488983581400	          mov qword [rbx + 0x1458], rax 	     11141	option.c	FUNCTION_84	IF_1	IF_3	CALL_10
0x400c055	      0xe800000000	                          call 0x400c05a	     11144	option.c	FUNCTION_84	IF_1	IF_3	CALL_11
0x400c05a	    0x488b3d000000	            mov rdi, qword [0x0400c061] 	     11145	option.c	FUNCTION_84	IF_1	IF_3	CALL_12
0x400c061	    0x488983601400	          mov qword [rbx + 0x1460], rax 	     11144	option.c	FUNCTION_84	IF_1	IF_3	CALL_11
0x400c068	      0xe800000000	                          call 0x400c06d	     11145	option.c	FUNCTION_84	IF_1	IF_3	CALL_12
0x400c06d	    0x488983681400	          mov qword [rbx + 0x1468], rax 	     11145	option.c	FUNCTION_84	IF_1	IF_3	CALL_12
0x400c074	    0x488b05000000	            mov rax, qword [0x0400c07b] 	     11147	option.c	FUNCTION_84	IF_1	IF_3
0x400c07b	    0x488b3d000000	            mov rdi, qword [0x0400c082] 	     11151	option.c	FUNCTION_84	IF_1	IF_3	CALL_13
0x400c082	    0x488983781500	          mov qword [rbx + 0x1578], rax 	     11147	option.c	FUNCTION_84	IF_1	IF_3
0x400c089	    0x488b05000000	            mov rax, qword [0x0400c090] 	     11148	option.c	FUNCTION_84	IF_1	IF_3
0x400c090	    0x488983801500	          mov qword [rbx + 0x1580], rax 	     11148	option.c	FUNCTION_84	IF_1	IF_3
0x400c097	    0x8b0500000000	            mov eax, dword [0x0400c09d] 	     11149	option.c	FUNCTION_84	IF_1	IF_3
0x400c09d	    0x898370150000	          mov dword [rbx + 0x1570], eax 	     11149	option.c	FUNCTION_84	IF_1	IF_3
0x400c0a3	      0xe800000000	                          call 0x400c0a8	     11151	option.c	FUNCTION_84	IF_1	IF_3	CALL_13
0x400c0a8	    0x488b3d000000	            mov rdi, qword [0x0400c0af] 	     11154	option.c	FUNCTION_84	IF_1	IF_3	CALL_14
0x400c0af	    0x488983481400	          mov qword [rbx + 0x1448], rax 	     11151	option.c	FUNCTION_84	IF_1	IF_3	CALL_13
0x400c0b6	      0xe800000000	                          call 0x400c0bb	     11154	option.c	FUNCTION_84	IF_1	IF_3	CALL_14
0x400c0bb	    0x488b3d000000	            mov rdi, qword [0x0400c0c2] 	     11156	option.c	FUNCTION_84	IF_1	IF_3	CALL_15
0x400c0c2	    0x488983501400	          mov qword [rbx + 0x1450], rax 	     11154	option.c	FUNCTION_84	IF_1	IF_3	CALL_14
0x400c0c9	      0xe800000000	                          call 0x400c0ce	     11156	option.c	FUNCTION_84	IF_1	IF_3	CALL_15
0x400c0ce	    0x488b3d000000	            mov rdi, qword [0x0400c0d5] 	     11157	option.c	FUNCTION_84	IF_1	IF_3	CALL_16
0x400c0d5	    0x488983a01400	          mov qword [rbx + 0x14a0], rax 	     11156	option.c	FUNCTION_84	IF_1	IF_3	CALL_15
0x400c0dc	      0xe800000000	                          call 0x400c0e1	     11157	option.c	FUNCTION_84	IF_1	IF_3	CALL_16
0x400c0e1	    0x488b3d000000	            mov rdi, qword [0x0400c0e8] 	     11158	option.c	FUNCTION_84	IF_1	IF_3	CALL_17
0x400c0e8	    0x488983a81400	          mov qword [rbx + 0x14a8], rax 	     11157	option.c	FUNCTION_84	IF_1	IF_3	CALL_16
0x400c0ef	      0xe800000000	                          call 0x400c0f4	     11158	option.c	FUNCTION_84	IF_1	IF_3	CALL_17
0x400c0f4	    0x488b3d000000	            mov rdi, qword [0x0400c0fb] 	     11159	option.c	FUNCTION_84	IF_1	IF_3	CALL_18
0x400c0fb	    0x488983481500	          mov qword [rbx + 0x1548], rax 	     11158	option.c	FUNCTION_84	IF_1	IF_3	CALL_17
0x400c102	      0xe800000000	                          call 0x400c107	     11159	option.c	FUNCTION_84	IF_1	IF_3	CALL_18
0x400c107	    0x488983301500	          mov qword [rbx + 0x1530], rax 	     11159	option.c	FUNCTION_84	IF_1	IF_3	CALL_18
0x400c10e	    0x8b0500000000	            mov eax, dword [0x0400c114] 	     11161	option.c	FUNCTION_84	IF_1	IF_3
0x400c114	    0x488b3d000000	            mov rdi, qword [0x0400c11b] 	     11166	option.c	FUNCTION_84	IF_1	IF_3	CALL_19
0x400c11b	    0x898374150000	          mov dword [rbx + 0x1574], eax 	     11161	option.c	FUNCTION_84	IF_1	IF_3
0x400c121	    0x8b0500000000	            mov eax, dword [0x0400c127] 	     11163	option.c	FUNCTION_84	IF_1	IF_3
0x400c127	    0x898304140000	          mov dword [rbx + 0x1404], eax 	     11163	option.c	FUNCTION_84	IF_1	IF_3
0x400c12d	    0x8b0500000000	            mov eax, dword [0x0400c133] 	     11165	option.c	FUNCTION_84	IF_1	IF_3
0x400c133	    0x898328140000	          mov dword [rbx + 0x1428], eax 	     11165	option.c	FUNCTION_84	IF_1	IF_3
0x400c139	      0xe800000000	                          call 0x400c13e	     11166	option.c	FUNCTION_84	IF_1	IF_3	CALL_19
0x400c13e	    0x488b3d000000	            mov rdi, qword [0x0400c145] 	     11167	option.c	FUNCTION_84	IF_1	IF_3	CALL_20
0x400c145	    0x488983381400	          mov qword [rbx + 0x1438], rax 	     11166	option.c	FUNCTION_84	IF_1	IF_3	CALL_19
0x400c14c	      0xe800000000	                          call 0x400c151	     11167	option.c	FUNCTION_84	IF_1	IF_3	CALL_20
0x400c151	    0x488983301400	          mov qword [rbx + 0x1430], rax 	     11167	option.c	FUNCTION_84	IF_1	IF_3	CALL_20
0x400c158	    0x488b05000000	            mov rax, qword [0x0400c15f] 	     11170	option.c	FUNCTION_84	IF_1	IF_3
0x400c15f	    0x488b3d000000	            mov rdi, qword [0x0400c166] 	     11173	option.c	FUNCTION_84	IF_1	IF_3	CALL_21
0x400c166	    0x488983981400	          mov qword [rbx + 0x1498], rax 	     11170	option.c	FUNCTION_84	IF_1	IF_3
0x400c16d	    0x8b0500000000	            mov eax, dword [0x0400c173] 	     11171	option.c	FUNCTION_84	IF_1	IF_3
0x400c173	    0x898350150000	          mov dword [rbx + 0x1550], eax 	     11171	option.c	FUNCTION_84	IF_1	IF_3
0x400c179	      0xe800000000	                          call 0x400c17e	     11173	option.c	FUNCTION_84	IF_1	IF_3	CALL_21
0x400c17e	    0x488983401400	          mov qword [rbx + 0x1440], rax 	     11173	option.c	FUNCTION_84	IF_1	IF_3	CALL_21
0x400c185	    0x8b0500000000	            mov eax, dword [0x0400c18b] 	     11176	option.c	FUNCTION_84	IF_1	IF_3
0x400c18b	    0x488b15000000	            mov rdx, qword [0x0400c192] 	     11181	option.c	FUNCTION_84	IF_1	IF_3
0x400c192	    0x488b3d000000	            mov rdi, qword [0x0400c199] 	     11185	option.c	FUNCTION_84	IF_1	IF_3	CALL_22
0x400c199	    0x898320150000	          mov dword [rbx + 0x1520], eax 	     11176	option.c	FUNCTION_84	IF_1	IF_3
0x400c19f	    0x488b05000000	            mov rax, qword [0x0400c1a6] 	     11180	option.c	FUNCTION_84	IF_1	IF_3
0x400c1a6	    0x488993981500	          mov qword [rbx + 0x1598], rdx 	     11181	option.c	FUNCTION_84	IF_1	IF_3
0x400c1ad	    0x488983a01500	          mov qword [rbx + 0x15a0], rax 	     11180	option.c	FUNCTION_84	IF_1	IF_3
0x400c1b4	    0x488983181c00	          mov qword [rbx + 0x1c18], rax 	     11182	option.c	FUNCTION_84	IF_1	IF_3
0x400c1bb	      0xe800000000	                          call 0x400c1c0	     11185	option.c	FUNCTION_84	IF_1	IF_3	CALL_22
0x400c1c0	    0x488983d01b00	          mov qword [rbx + 0x1bd0], rax 	     11185	option.c	FUNCTION_84	IF_1	IF_3	CALL_22
0x400c1c7	          0x803800	                       cmp byte [rax], 0	      8072	option.c	FUNCTION_47	IF_1
0x400c1ca	    0x4c8bb3d81b00	          mov r14, qword [rbx + 0x1bd8] 	      8069	option.c	FUNCTION_47
0x400c1d1	     0xf8499020000	                            je 0x400c470	      8072	option.c	FUNCTION_47	IF_1
0x400c1d7	          0x4889c6	                            mov rsi, rax	      8077	option.c	FUNCTION_47	ELSE_1	CALL_1
0x400c1da	      0xbf00000000	                              mov edi, 0	      8077	option.c	FUNCTION_47	ELSE_1	CALL_1
0x400c1df	      0xe800000000	                          call 0x400c1e4	      8077	option.c	FUNCTION_47	ELSE_1	CALL_1
0x400c1e4	          0x4885c0	                           test rax, rax	      8078	option.c	FUNCTION_47	ELSE_1	IF_2
0x400c1e7	          0x4989c7	                            mov r15, rax	      8077	option.c	FUNCTION_47	ELSE_1	CALL_1
0x400c1ea	     0xf848b020000	                            je 0x400c47b	      8078	option.c	FUNCTION_47	ELSE_1	IF_2
0x400c1f0	      0xbe01000000	                              mov esi, 1	      8080	option.c	FUNCTION_47	ELSE_1	IF_2	CALL_2
0x400c1f5	          0x4889c7	                            mov rdi, rax	      8080	option.c	FUNCTION_47	ELSE_1	IF_2	CALL_2
0x400c1f8	      0xe800000000	                          call 0x400c1fd	      8080	option.c	FUNCTION_47	ELSE_1	IF_2	CALL_2
0x400c1fd	          0x4c89ff	                            mov rdi, r15	      8081	option.c	FUNCTION_47	ELSE_1	IF_2	CALL_3
0x400c200	    0x488983d81b00	          mov qword [rbx + 0x1bd8], rax 	      8080	option.c	FUNCTION_47	ELSE_1	IF_2	CALL_2
0x400c207	      0xe800000000	                          call 0x400c20c	      8081	option.c	FUNCTION_47	ELSE_1	IF_2	CALL_3
0x400c20c	    0x4883bbd81b00	             cmp qword [rbx + 0x1bd8], 0	      8082	option.c	FUNCTION_47	ELSE_1	IF_2	IF_3
0x400c214	     0xf8561020000	                           jne 0x400c47b	      8082	option.c	FUNCTION_47	ELSE_1	IF_2	IF_3
0x400c21a	    0x4c89b3d81b00	          mov qword [rbx + 0x1bd8], r14 	      8084	option.c	FUNCTION_47	ELSE_1	IF_2	IF_3
0x400c221	    0x488b3d000000	            mov rdi, qword [0x0400c228] 	     11187	option.c	FUNCTION_84	IF_1	IF_3	CALL_24
0x400c228	      0xe800000000	                          call 0x400c22d	     11187	option.c	FUNCTION_84	IF_1	IF_3	CALL_24
0x400c22d	    0x488b3d000000	            mov rdi, qword [0x0400c234] 	     11188	option.c	FUNCTION_84	IF_1	IF_3	CALL_25
0x400c234	    0x488983e01b00	          mov qword [rbx + 0x1be0], rax 	     11187	option.c	FUNCTION_84	IF_1	IF_3	CALL_24
0x400c23b	      0xe800000000	                          call 0x400c240	     11188	option.c	FUNCTION_84	IF_1	IF_3	CALL_25
0x400c240	    0x488b3d000000	            mov rdi, qword [0x0400c247] 	     11191	option.c	FUNCTION_84	IF_1	IF_3	CALL_26
0x400c247	    0x488983e81b00	          mov qword [rbx + 0x1be8], rax 	     11188	option.c	FUNCTION_84	IF_1	IF_3	CALL_25
0x400c24e	      0xe800000000	                          call 0x400c253	     11191	option.c	FUNCTION_84	IF_1	IF_3	CALL_26
0x400c253	    0x488b3d000000	            mov rdi, qword [0x0400c25a] 	     11192	option.c	FUNCTION_84	IF_1	IF_3	CALL_27
0x400c25a	    0x488983e01400	          mov qword [rbx + 0x14e0], rax 	     11191	option.c	FUNCTION_84	IF_1	IF_3	CALL_26
0x400c261	      0xe800000000	                          call 0x400c266	     11192	option.c	FUNCTION_84	IF_1	IF_3	CALL_27
0x400c266	    0x488983f01400	          mov qword [rbx + 0x14f0], rax 	     11192	option.c	FUNCTION_84	IF_1	IF_3	CALL_27
0x400c26d	    0x488b05000000	            mov rax, qword [0x0400c274] 	     11194	option.c	FUNCTION_84	IF_1	IF_3
0x400c274	    0x488b3d000000	            mov rdi, qword [0x0400c27b] 	     11196	option.c	FUNCTION_84	IF_1	IF_3	CALL_28
0x400c27b	    0x488983f81400	          mov qword [rbx + 0x14f8], rax 	     11194	option.c	FUNCTION_84	IF_1	IF_3
0x400c282	      0xe800000000	                          call 0x400c287	     11196	option.c	FUNCTION_84	IF_1	IF_3	CALL_28
0x400c287	    0x488b3d000000	            mov rdi, qword [0x0400c28e] 	     11199	option.c	FUNCTION_84	IF_1	IF_3	CALL_29
0x400c28e	    0x488983001500	          mov qword [rbx + 0x1500], rax 	     11196	option.c	FUNCTION_84	IF_1	IF_3	CALL_28
0x400c295	      0xe800000000	                          call 0x400c29a	     11199	option.c	FUNCTION_84	IF_1	IF_3	CALL_29
0x400c29a	    0x488b3d000000	            mov rdi, qword [0x0400c2a1] 	     11202	option.c	FUNCTION_84	IF_1	IF_3	CALL_30
0x400c2a1	    0x488983101500	          mov qword [rbx + 0x1510], rax 	     11199	option.c	FUNCTION_84	IF_1	IF_3	CALL_29
0x400c2a8	      0xe800000000	                          call 0x400c2ad	     11202	option.c	FUNCTION_84	IF_1	IF_3	CALL_30
0x400c2ad	    0x488b3d000000	            mov rdi, qword [0x0400c2b4] 	     11205	option.c	FUNCTION_84	IF_1	IF_3	CALL_31
0x400c2b4	    0x488983881500	          mov qword [rbx + 0x1588], rax 	     11202	option.c	FUNCTION_84	IF_1	IF_3	CALL_30
0x400c2bb	      0xe800000000	                          call 0x400c2c0	     11205	option.c	FUNCTION_84	IF_1	IF_3	CALL_31
0x400c2c0	    0x488983e81500	          mov qword [rbx + 0x15e8], rax 	     11205	option.c	FUNCTION_84	IF_1	IF_3	CALL_31
0x400c2c7	    0x488b05000000	            mov rax, qword [0x0400c2ce] 	     11209	option.c	FUNCTION_84	IF_1	IF_3
0x400c2ce	    0x66838b881200	               or word [rbx + 0x1288], 1	     11206	option.c	FUNCTION_84	IF_1	IF_3
0x400c2d6	    0x488b3d000000	            mov rdi, qword [0x0400c2dd] 	     11237	option.c	FUNCTION_84	IF_1	IF_3	CALL_32
0x400c2dd	    0xc78318160000	   mov dword [rbx + 0x1618], 0xffffffff 	     11218	option.c	FUNCTION_84	IF_1	IF_3
0x400c2e7	    0x48c783481600	mov qword [rbx + 0x1648], 0xfffffffffffe1dc0 	     11219	option.c	FUNCTION_84	IF_1	IF_3
0x400c2f2	    0x488983601600	          mov qword [rbx + 0x1660], rax 	     11209	option.c	FUNCTION_84	IF_1	IF_3
0x400c2f9	    0x488b05000000	            mov rax, qword [0x0400c300] 	     11213	option.c	FUNCTION_84	IF_1	IF_3
0x400c300	    0xc78300140000	            mov dword [rbx + 0x1400], 0 	     11221	option.c	FUNCTION_84	IF_1	IF_3
0x400c30a	    0xc78330160000	            mov dword [rbx + 0x1630], 0 	     11232	option.c	FUNCTION_84	IF_1	IF_3
0x400c314	    0x488983781200	          mov qword [rbx + 0x1278], rax 	     11213	option.c	FUNCTION_84	IF_1	IF_3
0x400c31b	    0x488b05000000	            mov rax, qword [0x0400c322] 	     11214	option.c	FUNCTION_84	IF_1	IF_3
0x400c322	    0x488983801200	          mov qword [rbx + 0x1280], rax 	     11214	option.c	FUNCTION_84	IF_1	IF_3
0x400c329	    0x488b05000000	            mov rax, qword [0x0400c330] 	     11220	option.c	FUNCTION_84	IF_1	IF_3
0x400c330	    0x488983f81300	          mov qword [rbx + 0x13f8], rax 	     11220	option.c	FUNCTION_84	IF_1	IF_3
0x400c337	    0x488983f01500	          mov qword [rbx + 0x15f0], rax 	     11223	option.c	FUNCTION_84	IF_1	IF_3
0x400c33e	    0x488983f81500	          mov qword [rbx + 0x15f8], rax 	     11224	option.c	FUNCTION_84	IF_1	IF_3
0x400c345	    0x488983001600	          mov qword [rbx + 0x1600], rax 	     11225	option.c	FUNCTION_84	IF_1	IF_3
0x400c34c	    0x488983081600	          mov qword [rbx + 0x1608], rax 	     11227	option.c	FUNCTION_84	IF_1	IF_3
0x400c353	    0x488983181500	          mov qword [rbx + 0x1518], rax 	     11228	option.c	FUNCTION_84	IF_1	IF_3
0x400c35a	    0x488983101600	          mov qword [rbx + 0x1610], rax 	     11229	option.c	FUNCTION_84	IF_1	IF_3
0x400c361	    0x488983201600	          mov qword [rbx + 0x1620], rax 	     11230	option.c	FUNCTION_84	IF_1	IF_3
0x400c368	    0x488983281600	          mov qword [rbx + 0x1628], rax 	     11231	option.c	FUNCTION_84	IF_1	IF_3
0x400c36f	    0x488983c01400	          mov qword [rbx + 0x14c0], rax 	     11234	option.c	FUNCTION_84	IF_1	IF_3
0x400c376	    0x488983c81400	          mov qword [rbx + 0x14c8], rax 	     11235	option.c	FUNCTION_84	IF_1	IF_3
0x400c37d	      0xe800000000	                          call 0x400c382	     11237	option.c	FUNCTION_84	IF_1	IF_3	CALL_32
0x400c382	    0x488983d01400	          mov qword [rbx + 0x14d0], rax 	     11237	option.c	FUNCTION_84	IF_1	IF_3	CALL_32
0x400c389	    0x488b05000000	            mov rax, qword [0x0400c390] 	     11241	option.c	FUNCTION_84	IF_1	IF_3
0x400c390	    0x488b3d000000	            mov rdi, qword [0x0400c397] 	     11245	option.c	FUNCTION_84	IF_1	IF_3	CALL_33
0x400c397	    0x488983381600	          mov qword [rbx + 0x1638], rax 	     11241	option.c	FUNCTION_84	IF_1	IF_3
0x400c39e	    0x488983401600	          mov qword [rbx + 0x1640], rax 	     11242	option.c	FUNCTION_84	IF_1	IF_3
0x400c3a5	      0xe800000000	                          call 0x400c3aa	     11245	option.c	FUNCTION_84	IF_1	IF_3	CALL_33
0x400c3aa	    0x8b1500000000	            mov edx, dword [0x0400c3b0] 	     11254	option.c	FUNCTION_84	IF_1	IF_3
0x400c3b0	    0x488983581500	          mov qword [rbx + 0x1558], rax 	     11245	option.c	FUNCTION_84	IF_1	IF_3	CALL_33
0x400c3b7	            0x85ed	                           test ebp, ebp	     11269	option.c	FUNCTION_84	IF_1	IF_3	IF_7
0x400c3b9	    0x488b05000000	            mov rax, qword [0x0400c3c0] 	     11248	option.c	FUNCTION_84	IF_1	IF_3
0x400c3c0	    0x899350160000	          mov dword [rbx + 0x1650], edx 	     11254	option.c	FUNCTION_84	IF_1	IF_3
0x400c3c6	    0x488983381700	          mov qword [rbx + 0x1738], rax 	     11248	option.c	FUNCTION_84	IF_1	IF_3
0x400c3cd	    0x488983481700	          mov qword [rbx + 0x1748], rax 	     11251	option.c	FUNCTION_84	IF_1	IF_3
0x400c3d4	    0x488983581600	          mov qword [rbx + 0x1658], rax 	     11257	option.c	FUNCTION_84	IF_1	IF_3
0x400c3db	    0x488983281500	          mov qword [rbx + 0x1528], rax 	     11260	option.c	FUNCTION_84	IF_1	IF_3
0x400c3e2	     0xf84a8000000	                            je 0x400c490	     11269	option.c	FUNCTION_84	IF_1	IF_3	IF_7
0x400c3e8	          0x4585e4	                         test r12d, r12d	     11287	option.c	FUNCTION_84	IF_1	IF_9
0x400c3eb	    0x4c89abb81400	          mov qword [rbx + 0x14b8], r13 	     11270	option.c	FUNCTION_84	IF_1	IF_3	IF_7
0x400c3f2	            0x740a	                            je 0x400c3fe	     11287	option.c	FUNCTION_84	IF_1	IF_9
0x400c3f4	    0xc783a8120000	            mov dword [rbx + 0x12a8], 1 	     11288	option.c	FUNCTION_84	IF_1	IF_9
0x400c3fe	        0x4883c408	                              add rsp, 8	     11294	option.c	FUNCTION_84
0x400c402	          0x4889df	                            mov rdi, rbx	     11291	option.c	FUNCTION_84	CALL_36
0x400c405	              0x5b	                                 pop rbx	     11294	option.c	FUNCTION_84
0x400c406	              0x5d	                                 pop rbp	     11294	option.c	FUNCTION_84
0x400c407	            0x415c	                                 pop r12	     11294	option.c	FUNCTION_84
0x400c409	            0x415d	                                 pop r13	     11294	option.c	FUNCTION_84
0x400c40b	            0x415e	                                 pop r14	     11294	option.c	FUNCTION_84
0x400c40d	            0x415f	                                 pop r15	     11294	option.c	FUNCTION_84
0x400c40f	      0xe9cc78ffff	               jmp sym.check_buf_options	     11291	option.c	FUNCTION_84	CALL_36
0x400c414	         0xf1f4000	                         nop dword [rax]	     11291	option.c	FUNCTION_84	CALL_36
0x400c418	    0x8b83a8120000	          mov eax, dword [rbx + 0x12a8] 	     11071	option.c	FUNCTION_84	IF_1	IF_2
0x400c41e	            0x85c0	                           test eax, eax	     11071	option.c	FUNCTION_84	IF_1	IF_2
0x400c420	     0xf840a010000	                            je 0x400c530	     11071	option.c	FUNCTION_84	IF_1	IF_2
0x400c426	        0x40f6c502	                             test bpl, 2	     11076	option.c	FUNCTION_84	IF_1	IF_3
0x400c42a	            0x74d2	                            je 0x400c3fe	     11076	option.c	FUNCTION_84	IF_1	IF_3
0x400c42c	    0x8b83a8120000	          mov eax, dword [rbx + 0x12a8] 	     11076	option.c	FUNCTION_84	IF_1	IF_3
0x400c432	          0x4531e4	                          xor r12d, r12d	     11076	option.c	FUNCTION_84	IF_1	IF_3
0x400c435	      0xe932faffff	                           jmp 0x400be6c	     11076	option.c	FUNCTION_84	IF_1	IF_3
0x400c43a	    0x660f1f440000	                    nop word [rax + rax]	     11076	option.c	FUNCTION_84	IF_1	IF_3
0x400c440	    0x4c8babb81400	          mov r13, qword [rbx + 0x14b8] 	     11085	option.c	FUNCTION_84	IF_1	IF_3	IF_4
0x400c447	    0x48c783b81400	            mov qword [rbx + 0x14b8], 0 	     11086	option.c	FUNCTION_84	IF_1	IF_3	IF_4
0x400c452	            0x31f6	                            xor esi, esi	     11117	option.c	FUNCTION_84	IF_1	IF_3	CALL_9
0x400c454	          0x4889df	                            mov rdi, rbx	     11117	option.c	FUNCTION_84	IF_1	IF_3	CALL_9
0x400c457	      0xbd01000000	                              mov ebp, 1	     11117	option.c	FUNCTION_84	IF_1	IF_3	CALL_9
0x400c45c	      0xe800000000	                          call 0x400c461	     11117	option.c	FUNCTION_84	IF_1	IF_3	CALL_9
0x400c461	      0xe9d5faffff	                           jmp 0x400bf3b	     11117	option.c	FUNCTION_84	IF_1	IF_3	CALL_9
0x400c466	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     11117	option.c	FUNCTION_84	IF_1	IF_3	CALL_9
0x400c470	    0x48c783d81b00	            mov qword [rbx + 0x1bd8], 0 	      8073	option.c	FUNCTION_47	IF_1
0x400c47b	          0x4c89f7	                            mov rdi, r14	      8090	option.c	FUNCTION_47	CALL_4
0x400c47e	      0xe800000000	                          call 0x400c483	      8090	option.c	FUNCTION_47	CALL_4
0x400c483	      0xe999fdffff	                           jmp 0x400c221	      8090	option.c	FUNCTION_47	CALL_4
0x400c488	     0xf1f84000000	                   nop dword [rax + rax]	      8090	option.c	FUNCTION_47	CALL_4
0x400c490	    0x488b3d000000	            mov rdi, qword [0x0400c497] 	     11273	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2	CALL_34
0x400c497	      0xe800000000	                          call 0x400c49c	     11273	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2	CALL_34
0x400c49c	    0x488bbb181400	          mov rdi, qword [rbx + 0x1418] 	     11277	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2	IF_8
0x400c4a3	    0x488983b81400	          mov qword [rbx + 0x14b8], rax 	     11273	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2	CALL_34
0x400c4aa	    0x488b05000000	            mov rax, qword [0x0400c4b1] 	     11275	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2
0x400c4b1	    0xc78358170000	            mov dword [rbx + 0x1758], 0 	     11276	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2
0x400c4bb	    0x488983a81500	          mov qword [rbx + 0x15a8], rax 	     11275	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2
0x400c4c2	          0x803f68	                    cmp byte [rdi], 0x68	     11277	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2	IF_8
0x400c4c5	     0xf84e5000000	                            je 0x400c5b0	     11277	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2	IF_8
0x400c4cb	    0x8b0500000000	            mov eax, dword [0x0400c4d1] 	     11279	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2
0x400c4d1	          0x4585e4	                         test r12d, r12d	     11287	option.c	FUNCTION_84	IF_1	IF_9
0x400c4d4	    0x898340150000	          mov dword [rbx + 0x1540], eax 	     11279	option.c	FUNCTION_84	IF_1	IF_3	ELSE_2
0x400c4da	            0x740a	                            je 0x400c4e6	     11287	option.c	FUNCTION_84	IF_1	IF_9
0x400c4dc	    0xc783a8120000	            mov dword [rbx + 0x12a8], 1 	     11288	option.c	FUNCTION_84	IF_1	IF_9
0x400c4e6	          0x4889df	                            mov rdi, rbx	     11291	option.c	FUNCTION_84	CALL_36
0x400c4e9	      0xe800000000	                          call 0x400c4ee	     11291	option.c	FUNCTION_84	CALL_36
0x400c4ee	        0x4883c408	                              add rsp, 8	     11294	option.c	FUNCTION_84
0x400c4f2	          0x4889df	                            mov rdi, rbx	     11293	option.c	FUNCTION_84	CALL_37
0x400c4f5	            0x31f6	                            xor esi, esi	     11293	option.c	FUNCTION_84	CALL_37
0x400c4f7	              0x5b	                                 pop rbx	     11294	option.c	FUNCTION_84
0x400c4f8	              0x5d	                                 pop rbp	     11294	option.c	FUNCTION_84
0x400c4f9	            0x415c	                                 pop r12	     11294	option.c	FUNCTION_84
0x400c4fb	            0x415d	                                 pop r13	     11294	option.c	FUNCTION_84
0x400c4fd	            0x415e	                                 pop r14	     11294	option.c	FUNCTION_84
0x400c4ff	            0x415f	                                 pop r15	     11294	option.c	FUNCTION_84
0x400c501	      0xe900000000	                           jmp 0x400c506	     11293	option.c	FUNCTION_84	CALL_37
0x400c506	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     11293	option.c	FUNCTION_84	CALL_37
0x400c510	    0x8b83a8120000	          mov eax, dword [rbx + 0x12a8] 	     11071	option.c	FUNCTION_84	IF_1	IF_2
0x400c516	            0x85c0	                           test eax, eax	     11071	option.c	FUNCTION_84	IF_1	IF_2
0x400c518	     0xf8508ffffff	                           jne 0x400c426	     11071	option.c	FUNCTION_84	IF_1	IF_2
0x400c51e	        0x40f6c501	                             test bpl, 1	     11072	option.c	FUNCTION_84	IF_1	IF_2
0x400c522	     0xf853ef9ffff	                           jne 0x400be66	     11072	option.c	FUNCTION_84	IF_1	IF_2
0x400c528	     0xf1f84000000	                   nop dword [rax + rax]	     11072	option.c	FUNCTION_84	IF_1	IF_2
0x400c530	    0x488b3d000000	            mov rdi, qword [0x0400c537] 	     11073	option.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x400c537	      0xbe73000000	                           mov esi, 0x73	     11073	option.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x400c53c	      0xe800000000	                          call 0x400c541	     11073	option.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x400c541	          0x4885c0	                           test rax, rax	     11073	option.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x400c544	     0xf85dcfeffff	                           jne 0x400c426	     11073	option.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x400c54a	      0xe911f9ffff	                           jmp 0x400be60	     11073	option.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x400c54f	              0x90	                                     nop	     11073	option.c	FUNCTION_84	IF_1	IF_2	CALL_2
0x400c550	      0xbf00000000	                              mov edi, 0	     11103	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_5
0x400c555	      0xe800000000	                          call 0x400c55a	     11103	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_5
0x400c55a	    0x488983901400	          mov qword [rbx + 0x1490], rax 	     11103	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_5
0x400c561	      0xe9b2f9ffff	                           jmp 0x400bf18	     11103	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_5
0x400c566	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     11103	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_5
0x400c570	      0xbf00000000	                              mov edi, 0	     11105	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_6
0x400c575	      0xe800000000	                          call 0x400c57a	     11105	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_6
0x400c57a	    0x488983901400	          mov qword [rbx + 0x1490], rax 	     11105	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_6
0x400c581	      0xe992f9ffff	                           jmp 0x400bf18	     11105	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_6
0x400c586	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     11105	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_6
0x400c590	      0xbf00000000	                              mov edi, 0	     11107	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_7
0x400c595	      0xe800000000	                          call 0x400c59a	     11107	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_7
0x400c59a	    0x488983901400	          mov qword [rbx + 0x1490], rax 	     11107	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_7
0x400c5a1	      0xe972f9ffff	                           jmp 0x400bf18	     11107	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_7
0x400c5a6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     11107	option.c	FUNCTION_84	IF_1	IF_3	IF_5	SWITCH_1	CALL_7
0x400c5b0	    0x488b05000000	            mov rax, qword [0x0400c5b7] 	      5763	option.c	FUNCTION_31	IF_1
0x400c5b7	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x400c5ba	            0x740c	                            je 0x400c5c8	      5763	option.c	FUNCTION_31	IF_1
0x400c5bc	      0xe800000000	                          call 0x400c5c1	      5764	option.c	FUNCTION_31	CALL_1
0x400c5c1	    0x488b05000000	            mov rax, qword [0x0400c5c8] 	      5764	option.c	FUNCTION_31	CALL_1
0x400c5c8	    0x488983181400	          mov qword [rbx + 0x1418], rax 	      5765	option.c	FUNCTION_31
0x400c5cf	      0xe9f7feffff	                           jmp 0x400c4cb	      5765	option.c	FUNCTION_31
set_init_2	SWITCH,0:CALL,11:DO,0:WHILE,0:IF,3:functions,0:ELSE,0:FOR,0	70
0x4006650	              0x55	                                push rbp	      3949	option.c	FUNCTION_8
0x4006651	              0x53	                                push rbx	      3949	option.c	FUNCTION_8
0x4006652	      0xbf00000000	                              mov edi, 0	      3956	option.c	FUNCTION_8	CALL_1
0x4006657	        0x4883ec08	                              sub rsp, 8	      3949	option.c	FUNCTION_8
0x400665b	      0xe8c09cffff	                     call sym.findoption	      3956	option.c	FUNCTION_8	CALL_1
0x4006660	            0x85c0	                           test eax, eax	      3957	option.c	FUNCTION_8	IF_1
0x4006662	            0x7814	                            js 0x4006678	      3957	option.c	FUNCTION_8	IF_1
0x4006664	          0x4863d0	                         movsxd rdx, eax	      3957	option.c	FUNCTION_8	IF_1
0x4006667	        0x48c1e206	                              shl rdx, 6	      3957	option.c	FUNCTION_8	IF_1
0x400666b	    0xf68200000000	                      test byte [rdx], 1	      3957	option.c	FUNCTION_8	IF_1
0x4006672	     0xf84d8000000	                            je 0x4006750	      3957	option.c	FUNCTION_8	IF_1
0x4006678	      0xe800000000	                          call 0x400667d	      3959	option.c	FUNCTION_8	CALL_3
0x400667d	      0xbf00000000	                              mov edi, 0	     12256	option.c	FUNCTION_102	CALL_1
0x4006682	      0xe8999cffff	                     call sym.findoption	     12256	option.c	FUNCTION_102	CALL_1
0x4006687	            0x85c0	                           test eax, eax	     12257	option.c	FUNCTION_102	IF_1
0x4006689	            0x780f	                            js 0x400669a	     12257	option.c	FUNCTION_102	IF_1
0x400668b	            0x4898	                                    cdqe	     12259	option.c	FUNCTION_102	IF_2
0x400668d	        0x48c1e006	                              shl rax, 6	     12259	option.c	FUNCTION_102	IF_2
0x4006691	    0xf68000000000	                      test byte [rax], 1	     12259	option.c	FUNCTION_102	IF_2
0x4006698	            0x7576	                           jne 0x4006710	     12259	option.c	FUNCTION_102	IF_2
0x400669a	    0x488b05000000	            mov rax, qword [0x040066a1] 	      3966	option.c	FUNCTION_8	IF_2
0x40066a1	        0x488d58ff	                      lea rbx, [rax - 1]	      3966	option.c	FUNCTION_8	IF_2
0x40066a5	    0x48891d000000	            mov qword [0x040066ac], rbx 	      3966	option.c	FUNCTION_8	IF_2
0x40066ac	      0xbf00000000	                              mov edi, 0	      3910	option.c	FUNCTION_6	CALL_1
0x40066b1	      0xe86a9cffff	                     call sym.findoption	      3910	option.c	FUNCTION_6	CALL_1
0x40066b6	            0x85c0	                           test eax, eax	      3911	option.c	FUNCTION_6	IF_1
0x40066b8	            0x780d	                            js 0x40066c7	      3911	option.c	FUNCTION_6	IF_1
0x40066ba	            0x4898	                                    cdqe	      3912	option.c	FUNCTION_6	IF_1
0x40066bc	        0x48c1e006	                              shl rax, 6	      3912	option.c	FUNCTION_6	IF_1
0x40066c0	    0x488998000000	                    mov qword [rax], rbx	      3912	option.c	FUNCTION_6	IF_1
0x40066c7	      0xbf00000000	                              mov edi, 0	      3976	option.c	FUNCTION_8	CALL_6
0x40066cc	      0xe84f9cffff	                     call sym.findoption	      3976	option.c	FUNCTION_8	CALL_6
0x40066d1	            0x85c0	                           test eax, eax	      3977	option.c	FUNCTION_8	IF_3
0x40066d3	            0x89c5	                            mov ebp, eax	      3976	option.c	FUNCTION_8	CALL_6
0x40066d5	            0x7814	                            js 0x40066eb	      3977	option.c	FUNCTION_8	IF_3
0x40066d7	          0x4863d8	                         movsxd rbx, eax	      3977	option.c	FUNCTION_8	IF_3
0x40066da	        0x48c1e306	                              shl rbx, 6	      3977	option.c	FUNCTION_8	IF_3
0x40066de	    0x4881c3000000	                              add rbx, 0	      3977	option.c	FUNCTION_8	IF_3
0x40066e5	        0xf6431101	               test byte [rbx + 0x11], 1	      3977	option.c	FUNCTION_8	IF_3
0x40066e9	            0x7435	                            je 0x4006720	      3977	option.c	FUNCTION_8	IF_3
0x40066eb	      0xbf02000000	                              mov edi, 2	      3988	option.c	FUNCTION_8	CALL_9
0x40066f0	      0xe800000000	                          call 0x40066f5	      3988	option.c	FUNCTION_8	CALL_9
0x40066f5	      0xbf01000000	                              mov edi, 1	      3991	option.c	FUNCTION_8	CALL_10
0x40066fa	      0xe800000000	                          call 0x40066ff	      3991	option.c	FUNCTION_8	CALL_10
0x40066ff	        0x4883c408	                              add rsp, 8	      3996	option.c	FUNCTION_8
0x4006703	              0x5b	                                 pop rbx	      3996	option.c	FUNCTION_8
0x4006704	              0x5d	                                 pop rbp	      3996	option.c	FUNCTION_8
0x4006705	      0xe900000000	                           jmp 0x400670a	      3994	option.c	FUNCTION_8	CALL_11
0x400670a	    0x660f1f440000	                    nop word [rax + rax]	      3994	option.c	FUNCTION_8	CALL_11
0x4006710	    0x488b05000000	            mov rax, qword [0x04006717] 	      3994	option.c	FUNCTION_8	CALL_11
0x4006717	        0x488d58ff	                      lea rbx, [rax - 1]	      3994	option.c	FUNCTION_8	CALL_11
0x400671b	            0xeb8f	                           jmp 0x40066ac	      3994	option.c	FUNCTION_8	CALL_11
0x400671d	           0xf1f00	                         nop dword [rax]	      3994	option.c	FUNCTION_8	CALL_11
0x4006720	      0xe83bb5ffff	                call sym.term_bg_default	      3978	option.c	FUNCTION_8	IF_3	CALL_7
0x4006725	          0x803864	                    cmp byte [rax], 0x64	      3978	option.c	FUNCTION_8	IF_3	CALL_7
0x4006728	            0x75c1	                           jne 0x40066eb	      3978	option.c	FUNCTION_8	IF_3	CALL_7
0x400672a	          0x4531c0	                            xor r8d, r8d	      3980	option.c	FUNCTION_8	IF_3	CALL_8
0x400672d	      0xb901000000	                              mov ecx, 1	      3980	option.c	FUNCTION_8	IF_3	CALL_8
0x4006732	      0xba00000000	                              mov edx, 0	      3980	option.c	FUNCTION_8	IF_3	CALL_8
0x4006737	            0x89ee	                            mov esi, ebp	      3980	option.c	FUNCTION_8	IF_3	CALL_8
0x4006739	            0x31ff	                            xor edi, edi	      3980	option.c	FUNCTION_8	IF_3	CALL_8
0x400673b	      0xe800000000	                          call 0x4006740	      3980	option.c	FUNCTION_8	IF_3	CALL_8
0x4006740	    0x48816310fffe	and qword [rbx + 0x10], 0xfffffffffffffeff	      3983	option.c	FUNCTION_8	IF_3
0x4006748	            0xeba1	                           jmp 0x40066eb	      3983	option.c	FUNCTION_8	IF_3
0x400674a	    0x660f1f440000	                    nop word [rax + rax]	      3983	option.c	FUNCTION_8	IF_3
0x4006750	    0x8b1500000000	            mov edx, dword [0x04006756] 	      3958	option.c	FUNCTION_8	CALL_2
0x4006756	      0xbe04000000	                              mov esi, 4	      3958	option.c	FUNCTION_8	CALL_2
0x400675b	            0x89c7	                            mov edi, eax	      3958	option.c	FUNCTION_8	CALL_2
0x400675d	      0xe8dee2ffff	             call sym.set_option_default	      3958	option.c	FUNCTION_8	CALL_2
0x4006762	      0xe911ffffff	                           jmp 0x4006678	      3958	option.c	FUNCTION_8	CALL_2
ExpandSettings	SWITCH,0:CALL,19:DO,0:WHILE,0:IF,24:functions,0:ELSE,9:FOR,5	309
0x400cb30	            0x4157	                                push r15	     11547	option.c	FUNCTION_89
0x400cb32	            0x4156	                                push r14	     11547	option.c	FUNCTION_89
0x400cb34	          0x4989ce	                            mov r14, rcx	     11547	option.c	FUNCTION_89
0x400cb37	            0x4155	                                push r13	     11547	option.c	FUNCTION_89
0x400cb39	            0x4154	                                push r12	     11547	option.c	FUNCTION_89
0x400cb3b	              0x55	                                push rbp	     11547	option.c	FUNCTION_89
0x400cb3c	              0x53	                                push rbx	     11547	option.c	FUNCTION_89
0x400cb3d	          0x4889f5	                            mov rbp, rsi	     11547	option.c	FUNCTION_89
0x400cb40	            0x31db	                            xor ebx, ebx	     11552	option.c	FUNCTION_89
0x400cb42	        0x4883ec68	                           sub rsp, 0x68	     11547	option.c	FUNCTION_89
0x400cb46	    0x64488b042528	                mov rax, qword fs:[0x28]	     11547	option.c	FUNCTION_89
0x400cb4f	      0x4889442458	             mov qword [rsp + 0x58], rax	     11547	option.c	FUNCTION_89
0x400cb54	            0x31c0	                            xor eax, eax	     11547	option.c	FUNCTION_89
0x400cb56	    0x8b86a8000000	            mov eax, dword [rsi + 0xa8] 	     11558	option.c	FUNCTION_89
0x400cb5c	      0x48897c2408	                mov qword [rsp + 8], rdi	     11547	option.c	FUNCTION_89
0x400cb61	      0x4889542428	             mov qword [rsp + 0x28], rdx	     11547	option.c	FUNCTION_89
0x400cb66	    0xc74424100000	               mov dword [rsp + 0x10], 0	     11558	option.c	FUNCTION_89
0x400cb6e	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	     11549	option.c	FUNCTION_89
0x400cb76	    0xc74424140000	               mov dword [rsp + 0x14], 0	     11548	option.c	FUNCTION_89
0x400cb7e	        0x89442418	             mov dword [rsp + 0x18], eax	     11558	option.c	FUNCTION_89
0x400cb82	      0x488d442431	                   lea rax, [rsp + 0x31]	       110	string3.h	FUNCTION_143	CALL_3
0x400cb87	      0x4889442420	             mov qword [rsp + 0x20], rax	       110	string3.h	FUNCTION_143	CALL_3
0x400cb8c	        0x8b442418	            mov eax, dword [rsp + 0x18] 	     11566	option.c	FUNCTION_89	FOR_1
0x400cb90	    0x41bc00000000	                             mov r12d, 0	     11566	option.c	FUNCTION_89	FOR_1
0x400cb96	    0x8985a8000000	            mov dword [rbp + 0xa8], eax 	     11566	option.c	FUNCTION_89	FOR_1
0x400cb9c	      0x488b442408	                mov rax, qword [rsp + 8]	     11567	option.c	FUNCTION_89	FOR_1	IF_1
0x400cba1	            0x8b10	                    mov edx, dword [rax]	     11567	option.c	FUNCTION_89	FOR_1	IF_1
0x400cba3	          0x83fa05	                              cmp edx, 5	     11567	option.c	FUNCTION_89	FOR_1	IF_1
0x400cba6	            0x7450	                            je 0x400cbf8	     11567	option.c	FUNCTION_89	FOR_1	IF_1
0x400cba8	        0x4d8b3c24	                    mov r15, qword [r12]	     11571	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0x400cbac	            0x31d2	                            xor edx, edx	     11571	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0x400cbae	          0x4889ef	                            mov rdi, rbp	     11571	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0x400cbb1	          0x4c89fe	                            mov rsi, r15	     11571	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0x400cbb4	      0xe800000000	                          call 0x400cbb9	     11571	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0x400cbb9	            0x85c0	                           test eax, eax	     11571	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0x400cbbb	            0x7427	                            je 0x400cbe4	     11571	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_1
0x400cbbd	      0x448b542410	           mov r10d, dword [rsp + 0x10] 	     11573	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x400cbc2	          0x4585d2	                         test r10d, r10d	     11573	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x400cbc5	     0xf8435040000	                            je 0x400d000	     11573	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x400cbcb	          0x498b06	                    mov rax, qword [r14]	     11576	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0x400cbce	        0x448d6b01	                     lea r13d, [rbx + 1]	     11576	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0x400cbd2	          0x4c89ff	                            mov rdi, r15	     11576	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0x400cbd5	        0x488d1cd8	                  lea rbx, [rax + rbx*8]	     11576	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0x400cbd9	      0xe800000000	                          call 0x400cbde	     11576	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0x400cbde	          0x488903	                    mov qword [rbx], rax	     11576	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0x400cbe1	          0x4963dd	                        movsxd rbx, r13d	     11576	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0x400cbe4	        0x4983c408	                              add r12, 8	     11576	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	CALL_2
0x400cbe8	    0x4981fc000000	                              cmp r12, 0	     11569	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2
0x400cbef	            0x75b7	                           jne 0x400cba8	     11569	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2
0x400cbf1	      0x488b442408	                mov rax, qword [rsp + 8]	     11569	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2
0x400cbf6	            0x8b10	                    mov edx, dword [rax]	     11569	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2
0x400cbf8	    0x4c8b25000000	            mov r12, qword [0x0400cbff] 	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x400cbff	          0x4d85e4	                           test r12, r12	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x400cc02	     0xf84a8000000	                            je 0x400ccb0	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x400cc08	    0x41bd00000000	                             mov r13d, 0	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x400cc0e	          0x4c89e8	                            mov rax, r13	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x400cc11	          0x4d89e5	                            mov r13, r12	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x400cc14	          0x4989c4	                            mov r12, rax	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x400cc17	            0xeb6d	                           jmp 0x400cc86	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x400cc19	     0xf1f80000000	                         nop dword [rax]	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x400cc20	      0x498b4424e8	             mov rax, qword [r12 - 0x18]	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x400cc25	          0x4531ff	                          xor r15d, r15d	     10375	option.c	FUNCTION_73
0x400cc28	          0x803874	                    cmp byte [rax], 0x74	     10375	option.c	FUNCTION_73
0x400cc2b	     0xf843f010000	                            je 0x400cd70	     10375	option.c	FUNCTION_73
0x400cc31	            0x31d2	                            xor edx, edx	     11591	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_4
0x400cc33	          0x4c89ee	                            mov rsi, r13	     11591	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_4
0x400cc36	          0x4889ef	                            mov rdi, rbp	     11591	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_4
0x400cc39	      0xe800000000	                          call 0x400cc3e	     11591	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_4
0x400cc3e	            0x85c0	                           test eax, eax	     11591	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_4
0x400cc40	     0xf8552010000	                           jne 0x400cd98	     11591	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_4
0x400cc46	      0x498b7424f0	             mov rsi, qword [r12 - 0x10]	     11592	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7
0x400cc4b	          0x4885f6	                           test rsi, rsi	     11592	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7
0x400cc4e	            0x7412	                            je 0x400cc62	     11592	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7
0x400cc50	            0x31d2	                            xor edx, edx	     11593	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_5
0x400cc52	          0x4889ef	                            mov rdi, rbp	     11593	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_5
0x400cc55	      0xe800000000	                          call 0x400cc5a	     11593	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_5
0x400cc5a	            0x85c0	                           test eax, eax	     11593	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_5
0x400cc5c	     0xf8536010000	                           jne 0x400cd98	     11593	option.c	FUNCTION_89	FOR_1	FOR_3	IF_7	CALL_5
0x400cc62	          0x4585ff	                         test r15d, r15d	     11596	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x400cc65	     0xf8565010000	                           jne 0x400cdd0	     11596	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x400cc6b	      0x488b442408	                mov rax, qword [rsp + 8]	     11596	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x400cc70	            0x8b10	                    mov edx, dword [rax]	     11596	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x400cc72	    0x660f1f440000	                    nop word [rax + rax]	     11596	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x400cc78	        0x4983c440	                           add r12, 0x40	     11596	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x400cc7c	      0x4d8b6c24e8	             mov r13, qword [r12 - 0x18]	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x400cc81	          0x4d85ed	                           test r13, r13	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x400cc84	            0x742a	                            je 0x400ccb0	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x400cc86	      0x49833c2400	                      cmp qword [r12], 0	     11582	option.c	FUNCTION_89	FOR_1	FOR_3	IF_4
0x400cc8b	            0x74eb	                            je 0x400cc78	     11582	option.c	FUNCTION_89	FOR_1	FOR_3	IF_4
0x400cc8d	          0x83fa05	                              cmp edx, 5	     11584	option.c	FUNCTION_89	FOR_1	FOR_3	IF_5
0x400cc90	            0x758e	                           jne 0x400cc20	     11584	option.c	FUNCTION_89	FOR_1	FOR_3	IF_5
0x400cc92	    0x41f64424f801	                  test byte [r12 - 8], 1	     11585	option.c	FUNCTION_89	FOR_1	FOR_3	IF_5
0x400cc98	            0x7586	                           jne 0x400cc20	     11585	option.c	FUNCTION_89	FOR_1	FOR_3	IF_5
0x400cc9a	        0x4983c440	                           add r12, 0x40	     11585	option.c	FUNCTION_89	FOR_1	FOR_3	IF_5
0x400cc9e	      0x4d8b6c24e8	             mov r13, qword [r12 - 0x18]	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x400cca3	          0x4d85ed	                           test r13, r13	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x400cca6	            0x75de	                           jne 0x400cc86	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x400cca8	     0xf1f84000000	                   nop dword [rax + rax]	     11579	option.c	FUNCTION_89	FOR_1	FOR_3
0x400ccb0	      0x448b442414	            mov r8d, dword [rsp + 0x14] 	     11627	option.c	FUNCTION_89	FOR_1	IF_13
0x400ccb5	          0x4585c0	                           test r8d, r8d	     11627	option.c	FUNCTION_89	FOR_1	IF_13
0x400ccb8	     0xf856a010000	                           jne 0x400ce28	     11627	option.c	FUNCTION_89	FOR_1	IF_13
0x400ccbe	          0x4531ff	                          xor r15d, r15d	     11627	option.c	FUNCTION_89	FOR_1	IF_13
0x400ccc1	          0x83fa05	                              cmp edx, 5	     11627	option.c	FUNCTION_89	FOR_1	IF_13
0x400ccc4	            0x750e	                           jne 0x400ccd4	     11627	option.c	FUNCTION_89	FOR_1	IF_13
0x400ccc6	      0xe95d010000	                           jmp 0x400ce28	     11627	option.c	FUNCTION_89	FOR_1	IF_13
0x400cccb	       0xf1f440000	                   nop dword [rax + rax]	     11627	option.c	FUNCTION_89	FOR_1	IF_13
0x400ccd0	        0x4183c701	                             add r15d, 1	     11629	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	CALL_8
0x400ccd4	          0x4489ff	                           mov edi, r15d	     11629	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	CALL_8
0x400ccd7	      0xe800000000	                          call 0x400ccdc	     11629	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	CALL_8
0x400ccdc	          0x4885c0	                           test rax, rax	     11629	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	CALL_8
0x400ccdf	          0x4989c4	                            mov r12, rax	     11629	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	CALL_8
0x400cce2	     0xf8485010000	                            je 0x400ce6d	     11629	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	CALL_8
0x400cce8	      0xe800000000	                          call 0x400cced	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x400cced	      0x410fb61424	                   movzx edx, byte [r12]	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x400ccf2	          0x488b00	                    mov rax, qword [rax]	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x400ccf5	      0xf644500140	      test byte [rax + rdx*2 + 1], 0x40 	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x400ccfa	            0x74d4	                            je 0x400ccd0	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x400ccfc	    0x410fb6542401	               movzx edx, byte [r12 + 1]	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x400cd02	      0xf644500140	      test byte [rax + rdx*2 + 1], 0x40 	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x400cd07	            0x74c7	                            je 0x400ccd0	     11631	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_14	CALL_10
0x400cd09	      0xc644243074	            mov byte [rsp + 0x30], 0x74 	     11634	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4
0x400cd0e	      0xc64424315f	            mov byte [rsp + 0x31], 0x5f 	     11635	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4
0x400cd13	      0x488d742430	                   lea rsi, [rsp + 0x30]	     11641	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_15	CALL_11
0x400cd18	      0x410fb60424	                   movzx eax, byte [r12]	     11636	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4
0x400cd1d	            0x31d2	                            xor edx, edx	     11641	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_15	CALL_11
0x400cd1f	          0x4889ef	                            mov rdi, rbp	     11641	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_15	CALL_11
0x400cd22	        0x88442432	               mov byte [rsp + 0x32], al	     11636	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4
0x400cd26	    0x410fb6442401	               movzx eax, byte [r12 + 1]	     11637	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4
0x400cd2c	      0xc644243400	                mov byte [rsp + 0x34], 0	     11638	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4
0x400cd31	        0x88442433	               mov byte [rsp + 0x33], al	     11637	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4
0x400cd35	      0xe800000000	                          call 0x400cd3a	     11641	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_15	CALL_11
0x400cd3a	            0x85c0	                           test eax, eax	     11641	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_15	CALL_11
0x400cd3c	     0xf84bb010000	                            je 0x400cefd	     11641	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_15	CALL_11
0x400cd42	        0x8b542410	            mov edx, dword [rsp + 0x10] 	     11658	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	IF_18
0x400cd46	            0x85d2	                           test edx, edx	     11658	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	IF_18
0x400cd48	     0xf84bc020000	                            je 0x400d00a	     11658	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	IF_18
0x400cd4e	          0x498b06	                    mov rax, qword [r14]	     11661	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0x400cd51	        0x448d6301	                     lea r12d, [rbx + 1]	     11661	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0x400cd55	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	     11661	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0x400cd5a	        0x488d1cd8	                  lea rbx, [rax + rbx*8]	     11661	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0x400cd5e	      0xe800000000	                          call 0x400cd63	     11661	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0x400cd63	          0x488903	                    mov qword [rbx], rax	     11661	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0x400cd66	          0x4963dc	                        movsxd rbx, r12d	     11661	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0x400cd69	      0xe962ffffff	                           jmp 0x400ccd0	     11661	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0x400cd6e	            0x6690	                                     nop	     11661	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	CALL_13
0x400cd70	        0x8078015f	                cmp byte [rax + 1], 0x5f	     10375	option.c	FUNCTION_73
0x400cd74	     0xf85b7feffff	                           jne 0x400cc31	     10375	option.c	FUNCTION_73
0x400cd7a	      0x448b4c2414	            mov r9d, dword [rsp + 0x14] 	     11588	option.c	FUNCTION_89	FOR_1	FOR_3	IF_6
0x400cd7f	          0x4585c9	                           test r9d, r9d	     11588	option.c	FUNCTION_89	FOR_1	FOR_3	IF_6
0x400cd82	     0xf85f0feffff	                           jne 0x400cc78	     11588	option.c	FUNCTION_89	FOR_1	FOR_3	IF_6
0x400cd88	    0x41bf01000000	                             mov r15d, 1	     10375	option.c	FUNCTION_73
0x400cd8e	      0xe99efeffff	                           jmp 0x400cc31	     10375	option.c	FUNCTION_73
0x400cd93	       0xf1f440000	                   nop dword [rax + rax]	     10375	option.c	FUNCTION_73
0x400cd98	        0x8b4c2410	            mov ecx, dword [rsp + 0x10] 	     11613	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11
0x400cd9c	            0x85c9	                           test ecx, ecx	     11613	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11
0x400cd9e	     0xf84b2010000	                            je 0x400cf56	     11613	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11
0x400cda4	          0x498b06	                    mov rax, qword [r14]	     11621	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	CALL_7
0x400cda7	        0x448d7b01	                     lea r15d, [rbx + 1]	     11621	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	CALL_7
0x400cdab	          0x4c89ef	                            mov rdi, r13	     11621	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	CALL_7
0x400cdae	        0x488d1cd8	                  lea rbx, [rax + rbx*8]	     11621	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	CALL_7
0x400cdb2	      0xe800000000	                          call 0x400cdb7	     11621	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	CALL_7
0x400cdb7	          0x488903	                    mov qword [rbx], rax	     11621	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	CALL_7
0x400cdba	      0x488b442408	                mov rax, qword [rsp + 8]	     11621	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	CALL_7
0x400cdbf	          0x4963df	                        movsxd rbx, r15d	     11621	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	CALL_7
0x400cdc2	            0x8b10	                    mov edx, dword [rax]	     11621	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	CALL_7
0x400cdc4	      0xe9affeffff	                           jmp 0x400cc78	     11621	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	CALL_7
0x400cdc9	     0xf1f80000000	                         nop dword [rax]	     11621	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	CALL_7
0x400cdd0	      0xc64424303c	            mov byte [rsp + 0x30], 0x3c 	     11598	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x400cdd5	      0xc644243174	            mov byte [rsp + 0x31], 0x74 	     11599	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x400cdda	      0x488d742430	                   lea rsi, [rsp + 0x30]	     11605	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8	IF_9	CALL_6
0x400cddf	      0xc64424325f	            mov byte [rsp + 0x32], 0x5f 	     11600	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x400cde4	      0x410fb64502	               movzx eax, byte [r13 + 2]	     11601	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x400cde9	            0x31d2	                            xor edx, edx	     11605	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8	IF_9	CALL_6
0x400cdeb	          0x4889ef	                            mov rdi, rbp	     11605	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8	IF_9	CALL_6
0x400cdee	        0x88442433	               mov byte [rsp + 0x33], al	     11601	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x400cdf2	      0x410fb64503	               movzx eax, byte [r13 + 3]	     11602	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x400cdf7	      0xc64424353e	            mov byte [rsp + 0x35], 0x3e 	     11603	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x400cdfc	      0xc644243600	                mov byte [rsp + 0x36], 0	     11604	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x400ce01	        0x88442434	               mov byte [rsp + 0x34], al	     11602	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8
0x400ce05	      0xe800000000	                          call 0x400ce0a	     11605	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8	IF_9	CALL_6
0x400ce0a	            0x85c0	                           test eax, eax	     11605	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8	IF_9	CALL_6
0x400ce0c	     0xf8459feffff	                            je 0x400cc6b	     11605	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8	IF_9	CALL_6
0x400ce12	        0x8b442410	            mov eax, dword [rsp + 0x10] 	     11613	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11
0x400ce16	            0x85c0	                           test eax, eax	     11613	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11
0x400ce18	     0xf8427010000	                            je 0x400cf45	     11613	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11
0x400ce1e	      0x4c8d6c2430	                   lea r13, [rsp + 0x30]	     11608	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8	IF_9
0x400ce23	      0xe97cffffff	                           jmp 0x400cda4	     11608	option.c	FUNCTION_89	FOR_1	FOR_3	ELSE_2	IF_8	IF_9
0x400ce28	        0x8b742410	            mov esi, dword [rsp + 0x10] 	     11684	option.c	FUNCTION_89	FOR_1	IF_21
0x400ce2c	            0x85f6	                           test esi, esi	     11684	option.c	FUNCTION_89	FOR_1	IF_21
0x400ce2e	     0xf848d010000	                            je 0x400cfc1	     11684	option.c	FUNCTION_89	FOR_1	IF_21
0x400ce34	      0x837c241001	               cmp dword [rsp + 0x10], 1	     11564	option.c	FUNCTION_89	FOR_1
0x400ce39	            0x7528	                           jne 0x400ce63	     11564	option.c	FUNCTION_89	FOR_1
0x400ce3b	      0xb801000000	                              mov eax, 1	     11691	option.c	FUNCTION_89	FOR_1	IF_21	ELSE_9
0x400ce40	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	     11701	option.c	FUNCTION_89
0x400ce45	    0x6448330c2528	                xor rcx, qword fs:[0x28]	     11701	option.c	FUNCTION_89
0x400ce4e	     0xf85c0010000	                           jne 0x400d014	     11701	option.c	FUNCTION_89
0x400ce54	        0x4883c468	                           add rsp, 0x68	     11701	option.c	FUNCTION_89
0x400ce58	              0x5b	                                 pop rbx	     11701	option.c	FUNCTION_89
0x400ce59	              0x5d	                                 pop rbp	     11701	option.c	FUNCTION_89
0x400ce5a	            0x415c	                                 pop r12	     11701	option.c	FUNCTION_89
0x400ce5c	            0x415d	                                 pop r13	     11701	option.c	FUNCTION_89
0x400ce5e	            0x415e	                                 pop r14	     11701	option.c	FUNCTION_89
0x400ce60	            0x415f	                                 pop r15	     11701	option.c	FUNCTION_89
0x400ce62	              0xc3	                                     ret	     11701	option.c	FUNCTION_89
0x400ce63	      0x8344241001	               add dword [rsp + 0x10], 1	     11701	option.c	FUNCTION_89
0x400ce68	      0xe91ffdffff	                           jmp 0x400cb8c	     11701	option.c	FUNCTION_89
0x400ce6d	        0x8b7c2410	            mov edi, dword [rsp + 0x10] 	     11701	option.c	FUNCTION_89
0x400ce71	          0x4531ff	                          xor r15d, r15d	     11668	option.c	FUNCTION_89	FOR_1	IF_13
0x400ce74	    0xc785a8000000	               mov dword [rbp + 0xa8], 1	     11668	option.c	FUNCTION_89	FOR_1	IF_13
0x400ce7e	            0x85ff	                           test edi, edi	     11668	option.c	FUNCTION_89	FOR_1	IF_13
0x400ce80	     0xf84e6000000	                            je 0x400cf6c	     11668	option.c	FUNCTION_89	FOR_1	IF_13
0x400ce86	      0x4c8b642420	            mov r12, qword [rsp + 0x20] 	     11668	option.c	FUNCTION_89	FOR_1	IF_13
0x400ce8b	            0xeb5e	                           jmp 0x400ceeb	     11668	option.c	FUNCTION_89	FOR_1	IF_13
0x400ce8d	           0xf1f00	                         nop dword [rax]	     11668	option.c	FUNCTION_89	FOR_1	IF_13
0x400ce90	      0xba1f000000	                           mov edx, 0x1f	       110	string3.h	FUNCTION_143	CALL_3
0x400ce95	          0x4889c6	                            mov rsi, rax	       110	string3.h	FUNCTION_143	CALL_3
0x400ce98	          0x4c89e7	                            mov rdi, r12	       110	string3.h	FUNCTION_143	CALL_3
0x400ce9b	      0xc64424303c	            mov byte [rsp + 0x30], 0x3c 	     11671	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5
0x400cea0	      0xe800000000	                          call 0x400cea5	       110	string3.h	FUNCTION_143	CALL_3
0x400cea5	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       148	string3.h	FUNCTION_147	CALL_3
0x400ceaa	      0xba20000000	                           mov edx, 0x20	       148	string3.h	FUNCTION_147	CALL_3
0x400ceaf	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_147	CALL_3
0x400ceb4	      0xe800000000	                          call 0x400ceb9	       148	string3.h	FUNCTION_147	CALL_3
0x400ceb9	      0x488d742430	                   lea rsi, [rsp + 0x30]	     11675	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_17
0x400cebe	            0x31d2	                            xor edx, edx	     11675	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_17
0x400cec0	          0x4889ef	                            mov rdi, rbp	     11675	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_17
0x400cec3	      0xe800000000	                          call 0x400cec8	     11675	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_17
0x400cec8	            0x85c0	                           test eax, eax	     11675	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_17
0x400ceca	            0x741b	                            je 0x400cee7	     11675	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_17
0x400cecc	          0x498b06	                    mov rax, qword [r14]	     11680	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_18
0x400cecf	        0x448d6b01	                     lea r13d, [rbx + 1]	     11680	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_18
0x400ced3	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	     11680	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_18
0x400ced8	        0x488d1cd8	                  lea rbx, [rax + rbx*8]	     11680	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_18
0x400cedc	      0xe800000000	                          call 0x400cee1	     11680	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_18
0x400cee1	          0x488903	                    mov qword [rbx], rax	     11680	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_18
0x400cee4	          0x4963dd	                        movsxd rbx, r13d	     11680	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_18
0x400cee7	        0x4183c701	                             add r15d, 1	     11669	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_14
0x400ceeb	          0x4489ff	                           mov edi, r15d	     11669	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_14
0x400ceee	      0xe800000000	                          call 0x400cef3	     11669	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_14
0x400cef3	          0x4885c0	                           test rax, rax	     11669	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_14
0x400cef6	            0x7598	                           jne 0x400ce90	     11669	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_14
0x400cef8	      0xe937ffffff	                           jmp 0x400ce34	     11669	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_14
0x400cefd	      0xc64424303c	            mov byte [rsp + 0x30], 0x3c 	     11645	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5
0x400cf02	      0xc644243174	            mov byte [rsp + 0x31], 0x74 	     11646	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5
0x400cf07	      0x488d742430	                   lea rsi, [rsp + 0x30]	     11653	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5	IF_16	CALL_12
0x400cf0c	      0xc64424325f	            mov byte [rsp + 0x32], 0x5f 	     11647	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5
0x400cf11	      0x410fb60424	                   movzx eax, byte [r12]	     11648	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5
0x400cf16	            0x31d2	                            xor edx, edx	     11653	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5	IF_16	CALL_12
0x400cf18	          0x4889ef	                            mov rdi, rbp	     11653	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5	IF_16	CALL_12
0x400cf1b	        0x88442433	               mov byte [rsp + 0x33], al	     11648	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5
0x400cf1f	    0x410fb6442401	               movzx eax, byte [r12 + 1]	     11649	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5
0x400cf25	      0xc64424353e	            mov byte [rsp + 0x35], 0x3e 	     11650	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5
0x400cf2a	      0xc644243600	                mov byte [rsp + 0x36], 0	     11651	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5
0x400cf2f	        0x88442434	               mov byte [rsp + 0x34], al	     11649	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5
0x400cf33	      0xe800000000	                          call 0x400cf38	     11653	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5	IF_16	CALL_12
0x400cf38	            0x85c0	                           test eax, eax	     11653	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5	IF_16	CALL_12
0x400cf3a	     0xf8502feffff	                           jne 0x400cd42	     11653	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5	IF_16	CALL_12
0x400cf40	      0xe98bfdffff	                           jmp 0x400ccd0	     11653	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5	IF_16	CALL_12
0x400cf45	      0x488b442408	                mov rax, qword [rsp + 8]	     11653	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	ELSE_5	IF_16	CALL_12
0x400cf4a	      0x8344241c01	               add dword [rsp + 0x1c], 1	     11616	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11	IF_12
0x400cf4f	            0x8b10	                    mov edx, dword [rax]	     11616	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11	IF_12
0x400cf51	      0xe922fdffff	                           jmp 0x400cc78	     11616	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11	IF_12
0x400cf56	          0x4585ff	                         test r15d, r15d	     11615	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11	IF_12
0x400cf59	            0x75ea	                           jne 0x400cf45	     11615	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11	IF_12
0x400cf5b	      0x488b442408	                mov rax, qword [rsp + 8]	     11615	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11	IF_12
0x400cf60	      0x8344241401	               add dword [rsp + 0x14], 1	     11618	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11	ELSE_3
0x400cf65	            0x8b10	                    mov edx, dword [rax]	     11618	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11	ELSE_3
0x400cf67	      0xe90cfdffff	                           jmp 0x400cc78	     11618	option.c	FUNCTION_89	FOR_1	FOR_3	IF_10	IF_11	ELSE_3
0x400cf6c	          0x4489ff	                           mov edi, r15d	     11669	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_14
0x400cf6f	      0xe800000000	                          call 0x400cf74	     11669	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_14
0x400cf74	          0x4885c0	                           test rax, rax	     11669	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_14
0x400cf77	            0x7450	                            je 0x400cfc9	     11669	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_14
0x400cf79	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       110	string3.h	FUNCTION_143	CALL_3
0x400cf7e	      0xba1f000000	                           mov edx, 0x1f	       110	string3.h	FUNCTION_143	CALL_3
0x400cf83	          0x4889c6	                            mov rsi, rax	       110	string3.h	FUNCTION_143	CALL_3
0x400cf86	      0xc64424303c	            mov byte [rsp + 0x30], 0x3c 	     11671	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5
0x400cf8b	      0xe800000000	                          call 0x400cf90	       110	string3.h	FUNCTION_143	CALL_3
0x400cf90	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       148	string3.h	FUNCTION_147	CALL_3
0x400cf95	      0xba20000000	                           mov edx, 0x20	       148	string3.h	FUNCTION_147	CALL_3
0x400cf9a	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_147	CALL_3
0x400cf9f	      0xe800000000	                          call 0x400cfa4	       148	string3.h	FUNCTION_147	CALL_3
0x400cfa4	      0x488d742430	                   lea rsi, [rsp + 0x30]	     11675	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_17
0x400cfa9	            0x31d2	                            xor edx, edx	     11675	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_17
0x400cfab	          0x4889ef	                            mov rdi, rbp	     11675	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_17
0x400cfae	      0xe800000000	                          call 0x400cfb3	     11675	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	CALL_17
0x400cfb3	          0x83f801	                              cmp eax, 1	     11678	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	IF_20
0x400cfb6	      0x835c241cff	sbb dword [rsp + 0x1c], 0xffffffffffffffff	     11678	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	IF_19	IF_20
0x400cfbb	        0x4183c701	                             add r15d, 1	     11669	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_14
0x400cfbf	            0xebab	                           jmp 0x400cf6c	     11669	option.c	FUNCTION_89	FOR_1	IF_13	FOR_5	CALL_14
0x400cfc1	        0x8b442414	            mov eax, dword [rsp + 0x14] 	     11686	option.c	FUNCTION_89	FOR_1	IF_21	IF_22
0x400cfc5	            0x85c0	                           test eax, eax	     11686	option.c	FUNCTION_89	FOR_1	IF_21	IF_22
0x400cfc7	            0x750c	                           jne 0x400cfd5	     11686	option.c	FUNCTION_89	FOR_1	IF_21	IF_22
0x400cfc9	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	     11688	option.c	FUNCTION_89	FOR_1	IF_21	ELSE_8	IF_23
0x400cfcd	            0x85c0	                           test eax, eax	     11688	option.c	FUNCTION_89	FOR_1	IF_21	ELSE_8	IF_23
0x400cfcf	     0xf8466feffff	                            je 0x400ce3b	     11688	option.c	FUNCTION_89	FOR_1	IF_21	ELSE_8	IF_23
0x400cfd5	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	     11689	option.c	FUNCTION_89	FOR_1	IF_21	ELSE_8	IF_23
0x400cfda	    0x8d3cc5000000	                        lea edi, [rax*8]	     11692	option.c	FUNCTION_89	FOR_1	IF_21	CALL_19
0x400cfe1	            0x8901	                    mov dword [rcx], eax	     11689	option.c	FUNCTION_89	FOR_1	IF_21	ELSE_8	IF_23
0x400cfe3	      0xe800000000	                          call 0x400cfe8	     11692	option.c	FUNCTION_89	FOR_1	IF_21	CALL_19
0x400cfe8	          0x4885c0	                           test rax, rax	     11693	option.c	FUNCTION_89	FOR_1	IF_21	IF_24
0x400cfeb	          0x498906	                    mov qword [r14], rax	     11692	option.c	FUNCTION_89	FOR_1	IF_21	CALL_19
0x400cfee	     0xf856ffeffff	                           jne 0x400ce63	     11693	option.c	FUNCTION_89	FOR_1	IF_21	IF_24
0x400cff4	    0x49c706000000	                      mov qword [r14], 0	     11695	option.c	FUNCTION_89	FOR_1	IF_21	IF_24
0x400cffb	      0xe940feffff	                           jmp 0x400ce40	     11696	option.c	FUNCTION_89	FOR_1	IF_21	IF_24
0x400d000	      0x8344241401	               add dword [rsp + 0x14], 1	     11574	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x400d005	      0xe9dafbffff	                           jmp 0x400cbe4	     11574	option.c	FUNCTION_89	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x400d00a	      0x8344241c01	               add dword [rsp + 0x1c], 1	     11659	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	IF_18
0x400d00f	      0xe9bcfcffff	                           jmp 0x400ccd0	     11659	option.c	FUNCTION_89	FOR_1	IF_13	FOR_4	IF_17	IF_18
0x400d014	      0xe800000000	                          call 0x400d019	     11701	option.c	FUNCTION_89
briopt_check	SWITCH,0:CALL,8:DO,0:WHILE,1:IF,5:functions,0:ELSE,2:FOR,0	97
0x4000690	            0x4155	                                push r13	     12642	option.c	FUNCTION_116
0x4000692	            0x4154	                                push r12	     12642	option.c	FUNCTION_116
0x4000694	          0x4531ed	                          xor r13d, r13d	     12644	option.c	FUNCTION_116
0x4000697	              0x55	                                push rbp	     12642	option.c	FUNCTION_116
0x4000698	              0x53	                                push rbx	     12642	option.c	FUNCTION_116
0x4000699	          0x4889fd	                            mov rbp, rdi	     12642	option.c	FUNCTION_116
0x400069c	            0x31db	                            xor ebx, ebx	     12646	option.c	FUNCTION_116
0x400069e	    0x41bc14000000	                          mov r12d, 0x14	     12645	option.c	FUNCTION_116
0x40006a4	        0x4883ec18	                           sub rsp, 0x18	     12642	option.c	FUNCTION_116
0x40006a8	    0x488b97b80100	           mov rdx, qword [rdi + 0x1b8] 	     12648	option.c	FUNCTION_116
0x40006af	    0x64488b042528	                mov rax, qword fs:[0x28]	     12642	option.c	FUNCTION_116
0x40006b8	      0x4889442408	                mov qword [rsp + 8], rax	     12642	option.c	FUNCTION_116
0x40006bd	            0x31c0	                            xor eax, eax	     12642	option.c	FUNCTION_116
0x40006bf	        0x48891424	                    mov qword [rsp], rdx	     12648	option.c	FUNCTION_116
0x40006c3	        0x440fb602	                   movzx r8d, byte [rdx]	     12648	option.c	FUNCTION_116
0x40006c7	    0x660f1f840000	                    nop word [rax + rax]	     12648	option.c	FUNCTION_116
0x40006d0	          0x4584c0	                           test r8b, r8b	     12649	option.c	FUNCTION_116	WHILE_1
0x40006d3	            0x7473	                            je 0x4000748	     12649	option.c	FUNCTION_116	WHILE_1
0x40006d5	      0xbf00000000	                              mov edi, 0	     12651	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_1
0x40006da	      0xb906000000	                              mov ecx, 6	     12651	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_1
0x40006df	          0x4889d6	                            mov rsi, rdx	     12651	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_1
0x40006e2	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     12651	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_1
0x40006e4	     0xf85a6000000	                           jne 0x4000790	     12651	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_1
0x40006ea	         0xfb64a06	               movzx ecx, byte [rdx + 6]	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x40006ee	          0x80f92d	                            cmp cl, 0x2d	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x40006f1	     0xf8489000000	                            je 0x4000780	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x40006f7	          0x83e930	                           sub ecx, 0x30	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x40006fa	          0x83f909	                              cmp ecx, 9	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x40006fd	     0xf878d000000	                            ja 0x4000790	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x4000703	        0x4883c206	                              add rdx, 6	     12654	option.c	FUNCTION_116	WHILE_1	IF_1
0x4000707	          0x4889e7	                            mov rdi, rsp	     12655	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_4
0x400070a	        0x48891424	                    mov qword [rsp], rdx	     12654	option.c	FUNCTION_116	WHILE_1	IF_1
0x400070e	      0xe800000000	                          call 0x4000713	     12655	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_4
0x4000713	        0x488b1424	                    mov rdx, qword [rsp]	     12655	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_4
0x4000717	          0x4189c5	                           mov r13d, eax	     12655	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_4
0x400071a	        0x440fb602	                   movzx r8d, byte [rdx]	     12655	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_4
0x400071e	        0x4180f82c	                           cmp r8b, 0x2c	     12667	option.c	FUNCTION_116	WHILE_1	IF_4
0x4000722	            0x7409	                            je 0x400072d	     12667	option.c	FUNCTION_116	WHILE_1	IF_4
0x4000724	          0x4584c0	                           test r8b, r8b	     12667	option.c	FUNCTION_116	WHILE_1	IF_4
0x4000727	     0xf85d3000000	                           jne 0x4000800	     12667	option.c	FUNCTION_116	WHILE_1	IF_4
0x400072d	        0x4180f82c	                           cmp r8b, 0x2c	     12669	option.c	FUNCTION_116	WHILE_1	IF_5
0x4000731	            0x759d	                           jne 0x40006d0	     12669	option.c	FUNCTION_116	WHILE_1	IF_5
0x4000733	        0x488d4201	                      lea rax, [rdx + 1]	     12670	option.c	FUNCTION_116	WHILE_1	IF_5
0x4000737	        0x48890424	                    mov qword [rsp], rax	     12670	option.c	FUNCTION_116	WHILE_1	IF_5
0x400073b	      0x440fb64201	               movzx r8d, byte [rdx + 1]	     12670	option.c	FUNCTION_116	WHILE_1	IF_5
0x4000740	          0x4889c2	                            mov rdx, rax	     12670	option.c	FUNCTION_116	WHILE_1	IF_5
0x4000743	          0x4584c0	                           test r8b, r8b	     12649	option.c	FUNCTION_116	WHILE_1
0x4000746	            0x758d	                           jne 0x40006d5	     12649	option.c	FUNCTION_116	WHILE_1
0x4000748	    0x4489ad440500	          mov dword [rbp + 0x544], r13d 	     12673	option.c	FUNCTION_116
0x400074f	    0x4489a5400500	          mov dword [rbp + 0x540], r12d 	     12674	option.c	FUNCTION_116
0x4000756	      0xb801000000	                              mov eax, 1	     12677	option.c	FUNCTION_116
0x400075b	    0x899d48050000	           mov dword [rbp + 0x548], ebx 	     12675	option.c	FUNCTION_116
0x4000761	      0x488b5c2408	                mov rbx, qword [rsp + 8]	     12678	option.c	FUNCTION_116
0x4000766	    0x6448331c2528	                xor rbx, qword fs:[0x28]	     12678	option.c	FUNCTION_116
0x400076f	     0xf8592000000	                           jne 0x4000807	     12678	option.c	FUNCTION_116
0x4000775	        0x4883c418	                           add rsp, 0x18	     12678	option.c	FUNCTION_116
0x4000779	              0x5b	                                 pop rbx	     12678	option.c	FUNCTION_116
0x400077a	              0x5d	                                 pop rbp	     12678	option.c	FUNCTION_116
0x400077b	            0x415c	                                 pop r12	     12678	option.c	FUNCTION_116
0x400077d	            0x415d	                                 pop r13	     12678	option.c	FUNCTION_116
0x400077f	              0xc3	                                     ret	     12678	option.c	FUNCTION_116
0x4000780	         0xfb64207	               movzx eax, byte [rdx + 7]	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x4000784	          0x83e830	                           sub eax, 0x30	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x4000787	          0x83f809	                              cmp eax, 9	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x400078a	     0xf8673ffffff	                           jbe 0x4000703	     12652	option.c	FUNCTION_116	WHILE_1	IF_1	CALL_3
0x4000790	      0xbf00000000	                              mov edi, 0	     12657	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_6
0x4000795	      0xb904000000	                              mov ecx, 4	     12657	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_6
0x400079a	          0x4889d6	                            mov rsi, rdx	     12657	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_6
0x400079d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     12657	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_6
0x400079f	            0x750c	                           jne 0x40007ad	     12657	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_6
0x40007a1	         0xfb64204	               movzx eax, byte [rdx + 4]	     12657	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_6
0x40007a5	          0x83e830	                           sub eax, 0x30	     12657	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_6
0x40007a8	          0x83f809	                              cmp eax, 9	     12657	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_6
0x40007ab	            0x7633	                           jbe 0x40007e0	     12657	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_6
0x40007ad	      0xbf00000000	                              mov edi, 0	     12662	option.c	FUNCTION_116	WHILE_1	ELSE_2	IF_3	CALL_8
0x40007b2	      0xb903000000	                              mov ecx, 3	     12662	option.c	FUNCTION_116	WHILE_1	ELSE_2	IF_3	CALL_8
0x40007b7	          0x4889d6	                            mov rsi, rdx	     12662	option.c	FUNCTION_116	WHILE_1	ELSE_2	IF_3	CALL_8
0x40007ba	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     12662	option.c	FUNCTION_116	WHILE_1	ELSE_2	IF_3	CALL_8
0x40007bc	     0xf855cffffff	                           jne 0x400071e	     12662	option.c	FUNCTION_116	WHILE_1	ELSE_2	IF_3	CALL_8
0x40007c2	        0x488d4203	                      lea rax, [rdx + 3]	     12664	option.c	FUNCTION_116	WHILE_1	ELSE_2	IF_3
0x40007c6	      0xbb01000000	                              mov ebx, 1	     12665	option.c	FUNCTION_116	WHILE_1	ELSE_2	IF_3
0x40007cb	        0x48890424	                    mov qword [rsp], rax	     12664	option.c	FUNCTION_116	WHILE_1	ELSE_2	IF_3
0x40007cf	      0x440fb64203	               movzx r8d, byte [rdx + 3]	     12664	option.c	FUNCTION_116	WHILE_1	ELSE_2	IF_3
0x40007d4	          0x4889c2	                            mov rdx, rax	     12664	option.c	FUNCTION_116	WHILE_1	ELSE_2	IF_3
0x40007d7	      0xe942ffffff	                           jmp 0x400071e	     12664	option.c	FUNCTION_116	WHILE_1	ELSE_2	IF_3
0x40007dc	         0xf1f4000	                         nop dword [rax]	     12664	option.c	FUNCTION_116	WHILE_1	ELSE_2	IF_3
0x40007e0	        0x4883c204	                              add rdx, 4	     12659	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2
0x40007e4	          0x4889e7	                            mov rdi, rsp	     12660	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_7
0x40007e7	        0x48891424	                    mov qword [rsp], rdx	     12659	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2
0x40007eb	      0xe800000000	                          call 0x40007f0	     12660	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_7
0x40007f0	        0x488b1424	                    mov rdx, qword [rsp]	     12660	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_7
0x40007f4	          0x4989c4	                            mov r12, rax	     12660	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_7
0x40007f7	        0x440fb602	                   movzx r8d, byte [rdx]	     12660	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_7
0x40007fb	      0xe91effffff	                           jmp 0x400071e	     12660	option.c	FUNCTION_116	WHILE_1	ELSE_1	IF_2	CALL_7
0x4000800	            0x31c0	                            xor eax, eax	     12668	option.c	FUNCTION_116	WHILE_1	IF_4
0x4000802	      0xe95affffff	                           jmp 0x4000761	     12668	option.c	FUNCTION_116	WHILE_1	IF_4
0x4000807	      0xe800000000	                          call 0x400080c	     12678	option.c	FUNCTION_116
compatible_set	SWITCH,0:CALL,4:DO,0:WHILE,0:IF,1:functions,0:ELSE,0:FOR,1	262
0x4004e80	            0x4156	                                push r14	     12286	option.c	FUNCTION_104
0x4004e82	            0x4155	                                push r13	     12286	option.c	FUNCTION_104
0x4004e84	            0x4154	                                push r12	     12286	option.c	FUNCTION_104
0x4004e86	              0x55	                                push rbp	     12286	option.c	FUNCTION_104
0x4004e87	            0x31ed	                            xor ebp, ebp	     12289	option.c	FUNCTION_104	FOR_1	CALL_1
0x4004e89	              0x53	                                push rbx	     12286	option.c	FUNCTION_104
0x4004e8a	      0xbb00000000	                              mov ebx, 0	     12286	option.c	FUNCTION_104
0x4004e8f	      0xe92b010000	                           jmp 0x4004fbf	     12289	option.c	FUNCTION_104	FOR_1	CALL_1
0x4004e94	         0xf1f4000	                         nop dword [rax]	     12289	option.c	FUNCTION_104	FOR_1	CALL_1
0x4004e98	    0x448b35000000	           mov r14d, dword [0x04004e9f] 	     12290	option.c	FUNCTION_104	FOR_1	IF_1
0x4004e9f	          0x4585f6	                         test r14d, r14d	     12290	option.c	FUNCTION_104	FOR_1	IF_1
0x4004ea2	            0x7509	                           jne 0x4004ead	     12290	option.c	FUNCTION_104	FOR_1	IF_1
0x4004ea4	          0xf6c404	                              test ah, 4	     12291	option.c	FUNCTION_104	FOR_1	IF_1
0x4004ea7	     0xf850b010000	                           jne 0x4004fb8	     12291	option.c	FUNCTION_104	FOR_1	IF_1
0x4004ead	            0x8b0b	                    mov ecx, dword [rbx]	     10538	option.c	FUNCTION_76	IF_3
0x4004eaf	          0xf6c510	                           test ch, 0x10	     10538	option.c	FUNCTION_76	IF_3
0x4004eb2	            0x89ca	                            mov edx, ecx	     10538	option.c	FUNCTION_76	IF_3
0x4004eb4	     0xf8446010000	                            je 0x4005000	     10538	option.c	FUNCTION_76	IF_3
0x4004eba	    0x81f918500000	                         cmp ecx, 0x5018	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4004ec0	     0xf846f040000	                            je 0x4005335	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4004ec6	     0xf8764020000	                            ja 0x4005130	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4004ecc	    0x81f906500000	                         cmp ecx, 0x5006	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4004ed2	     0xf8426040000	                            je 0x40052fe	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4004ed8	     0xf86a2020000	                           jbe 0x4005180	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4004ede	    0x81f914500000	                         cmp ecx, 0x5014	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4004ee4	    0x488b3d000000	            mov rdi, qword [0x04004eeb] 	     10559	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4004eeb	     0xf8463040000	                            je 0x4005354	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4004ef1	     0xf8769030000	                            ja 0x4005260	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4004ef7	    0x81f907500000	                         cmp ecx, 0x5007	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4004efd	     0xf841a040000	                            je 0x400531d	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4004f03	    0x81f910500000	                         cmp ecx, 0x5010	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4004f09	    0x4c8da7481700	                 lea r12, [rdi + 0x1748]	     10566	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4004f10	            0x7577	                           jne 0x4004f89	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4004f12	    0x660f1f440000	                    nop word [rax + rax]	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4004f18	          0x4d85e4	                           test r12, r12	      3773	option.c	FUNCTION_2	IF_1
0x4004f1b	            0x89ca	                            mov edx, ecx	      3773	option.c	FUNCTION_2	IF_1
0x4004f1d	            0x746a	                            je 0x4004f89	      3773	option.c	FUNCTION_2	IF_1
0x4004f1f	          0x4889c2	                            mov rdx, rax	      3775	option.c	FUNCTION_2	IF_1
0x4004f22	            0x31f6	                            xor esi, esi	      3775	option.c	FUNCTION_2	IF_1
0x4004f24	        0x48c1ea0a	                            shr rdx, 0xa	      3775	option.c	FUNCTION_2	IF_1
0x4004f28	        0x4883f201	                              xor rdx, 1	      3775	option.c	FUNCTION_2	IF_1
0x4004f2c	          0x4585f6	                         test r14d, r14d	      3775	option.c	FUNCTION_2	IF_1
0x4004f2f	        0x400f94c6	                                sete sil	      3775	option.c	FUNCTION_2	IF_1
0x4004f33	            0x21d6	                            and esi, edx	      3775	option.c	FUNCTION_2	IF_1
0x4004f35	            0xa804	                              test al, 4	      3776	option.c	FUNCTION_2	IF_1	IF_2
0x4004f37	          0x4189f6	                           mov r14d, esi	      3775	option.c	FUNCTION_2	IF_1
0x4004f3a	     0xf8410010000	                            je 0x4005050	      3776	option.c	FUNCTION_2	IF_1	IF_2
0x4004f40	            0x85c9	                           test ecx, ecx	      3780	option.c	FUNCTION_2	IF_1	IF_2	IF_3
0x4004f42	     0xf85b8010000	                           jne 0x4005100	      3780	option.c	FUNCTION_2	IF_1	IF_2	IF_3
0x4004f48	            0xa808	                              test al, 8	      3785	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1	IF_4
0x4004f4a	            0x7416	                            je 0x4004f62	      3785	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1	IF_4
0x4004f4c	        0x498b3c24	                    mov rdi, qword [r12]	      3786	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1	CALL_3
0x4004f50	    0x483b3d000000	            cmp rdi, qword [0x04004f57] 	      5756	option.c	FUNCTION_30	IF_1
0x4004f57	            0x7409	                            je 0x4004f62	      5756	option.c	FUNCTION_30	IF_1
0x4004f59	      0xe800000000	                          call 0x4004f5e	      5757	option.c	FUNCTION_30	CALL_1
0x4004f5e	        0x488b43f0	             mov rax, qword [rbx - 0x10]	      5757	option.c	FUNCTION_30	CALL_1
0x4004f62	          0x4963d6	                        movsxd rdx, r14d	      3787	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x4004f65	          0x4863cd	                         movsxd rcx, ebp	      3787	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x4004f68	        0x4883e0f7	             and rax, 0xfffffffffffffff7	      3788	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x4004f6c	      0x488d54ca04	              lea rdx, [rdx + rcx*8 + 4]	      3787	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x4004f71	    0x488b14d50000	                  mov rdx, qword [rdx*8]	      3787	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x4004f79	        0x49891424	                    mov qword [r12], rdx	      3787	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x4004f7d	            0x8b13	                    mov edx, dword [rbx]	      3787	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x4004f7f	    0x4825ffff7fff	             and rax, 0xffffffffff7fffff	      3822	option.c	FUNCTION_2	IF_1
0x4004f85	        0x488943f0	             mov qword [rbx - 0x10], rax	      3822	option.c	FUNCTION_2	IF_1
0x4004f89	    0x8b0500000000	            mov eax, dword [0x04004f8f] 	      3826	option.c	FUNCTION_2	CALL_8
0x4004f8f	          0xf6c640	                           test dh, 0x40	      8112	option.c	FUNCTION_48	IF_2	IF_3
0x4004f92	          0x894318	             mov dword [rbx + 0x18], eax	      8109	option.c	FUNCTION_48	IF_1
0x4004f95	     0xf85fd000000	                           jne 0x4005098	      8112	option.c	FUNCTION_48	IF_2	IF_3
0x4004f9b	          0xf6c620	                           test dh, 0x20	      8114	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x4004f9e	            0x7418	                            je 0x4004fb8	      8114	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x4004fa0	    0x488b0d000000	            mov rcx, qword [0x04004fa7] 	      8115	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x4004fa7	    0x81e2ff0f0000	                          and edx, 0xfff	      8115	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x4004fad	    0x898491d00200	    mov dword [rcx + rdx*4 + 0x2d0], eax	      8115	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x4004fb4	         0xf1f4000	                         nop dword [rax]	      8115	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x4004fb8	          0x83c501	                              add ebp, 1	     12289	option.c	FUNCTION_104	FOR_1	CALL_1
0x4004fbb	        0x4883c340	                           add rbx, 0x40	     12289	option.c	FUNCTION_104	FOR_1	CALL_1
0x4004fbf	        0x488b43e0	             mov rax, qword [rbx - 0x20]	     12289	option.c	FUNCTION_104	FOR_1	CALL_1
0x4004fc3	        0x4c8d6be0	                   lea r13, [rbx - 0x20]	     12289	option.c	FUNCTION_104	FOR_1	CALL_1
0x4004fc7	          0x803874	                    cmp byte [rax], 0x74	     10375	option.c	FUNCTION_73
0x4004fca	            0x7454	                            je 0x4005020	     10375	option.c	FUNCTION_73
0x4004fcc	        0x488b43f0	             mov rax, qword [rbx - 0x10]	     12290	option.c	FUNCTION_104	FOR_1	IF_1
0x4004fd0	          0xf6c408	                              test ah, 8	     12290	option.c	FUNCTION_104	FOR_1	IF_1
0x4004fd3	     0xf85bffeffff	                           jne 0x4004e98	     12290	option.c	FUNCTION_104	FOR_1	IF_1
0x4004fd9	          0xf6c404	                              test ah, 4	     12291	option.c	FUNCTION_104	FOR_1	IF_1
0x4004fdc	            0x75da	                           jne 0x4004fb8	     12291	option.c	FUNCTION_104	FOR_1	IF_1
0x4004fde	    0x448b35000000	           mov r14d, dword [0x04004fe5] 	     12291	option.c	FUNCTION_104	FOR_1	IF_1
0x4004fe5	          0x4585f6	                         test r14d, r14d	     12291	option.c	FUNCTION_104	FOR_1	IF_1
0x4004fe8	            0x75ce	                           jne 0x4004fb8	     12291	option.c	FUNCTION_104	FOR_1	IF_1
0x4004fea	            0x8b0b	                    mov ecx, dword [rbx]	     10538	option.c	FUNCTION_76	IF_3
0x4004fec	          0xf6c510	                           test ch, 0x10	     10538	option.c	FUNCTION_76	IF_3
0x4004fef	            0x89ca	                            mov edx, ecx	     10538	option.c	FUNCTION_76	IF_3
0x4004ff1	     0xf85c3feffff	                           jne 0x4004eba	     10538	option.c	FUNCTION_76	IF_3
0x4004ff7	    0x660f1f840000	                    nop word [rax + rax]	     10538	option.c	FUNCTION_76	IF_3
0x4005000	        0x488b7bf8	                mov rdi, qword [rbx - 8]	     10582	option.c	FUNCTION_76	CALL_3
0x4005004	          0x4889de	                            mov rsi, rbx	     10582	option.c	FUNCTION_76	CALL_3
0x4005007	      0xe844baffff	                call sym.get_varp.isra.1	     10582	option.c	FUNCTION_76	CALL_3
0x400500c	            0x8b0b	                    mov ecx, dword [rbx]	     10582	option.c	FUNCTION_76	CALL_3
0x400500e	          0x4989c4	                            mov r12, rax	     10582	option.c	FUNCTION_76	CALL_3
0x4005011	        0x488b43f0	             mov rax, qword [rbx - 0x10]	     10582	option.c	FUNCTION_76	CALL_3
0x4005015	      0xe9fefeffff	                           jmp 0x4004f18	     10582	option.c	FUNCTION_76	CALL_3
0x400501a	    0x660f1f440000	                    nop word [rax + rax]	     10582	option.c	FUNCTION_76	CALL_3
0x4005020	        0x8078015f	                cmp byte [rax + 1], 0x5f	     10375	option.c	FUNCTION_73
0x4005024	            0x75a6	                           jne 0x4004fcc	     10375	option.c	FUNCTION_73
0x4005026	      0xe8d5d7ffff	                 call sym.didset_options	     12293	option.c	FUNCTION_104	CALL_3
0x400502b	      0xe800000000	                          call 0x4005030	      5614	option.c	FUNCTION_27	CALL_1
0x4005030	      0xe88bb4ffff	                  call sym.check_opt_wim	      5617	option.c	FUNCTION_27	CALL_2
0x4005035	      0xe8c6d0ffff	  call sym.set_chars_option.constprop.22	      5619	option.c	FUNCTION_27	CALL_3
0x400503a	      0xe801d3ffff	  call sym.set_chars_option.constprop.23	      5621	option.c	FUNCTION_27	CALL_4
0x400503f	              0x5b	                                 pop rbx	     12295	option.c	FUNCTION_104
0x4005040	              0x5d	                                 pop rbp	     12295	option.c	FUNCTION_104
0x4005041	            0x415c	                                 pop r12	     12295	option.c	FUNCTION_104
0x4005043	            0x415d	                                 pop r13	     12295	option.c	FUNCTION_104
0x4005045	            0x415e	                                 pop r14	     12295	option.c	FUNCTION_104
0x4005047	      0xe9c4b7ffff	          jmp sym.check_clipboard_option	      5625	option.c	FUNCTION_27	CALL_5
0x400504c	         0xf1f4000	                         nop dword [rax]	      5625	option.c	FUNCTION_27	CALL_5
0x4005050	            0xa802	                              test al, 2	      3791	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5
0x4005052	            0x7464	                            je 0x40050b8	      3791	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5
0x4005054	    0x81f91c200000	                         cmp ecx, 0x201c	      3793	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	IF_6
0x400505a	     0xf84c0010000	                            je 0x4005220	      3793	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	IF_6
0x4005060	          0x4863d6	                         movsxd rdx, esi	      3797	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3
0x4005063	          0x4863c5	                         movsxd rax, ebp	      3797	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3
0x4005066	      0xbe02000000	                              mov esi, 2	      3800	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x400506b	      0x488d44c204	              lea rax, [rdx + rax*8 + 4]	      3797	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3
0x4005070	          0x4c89ef	                            mov rdi, r13	      3800	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x4005073	    0x488b04c50000	                  mov rax, qword [rax*8]	      3797	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3
0x400507b	        0x49890424	                    mov qword [r12], rax	      3797	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3
0x400507f	      0xe8fcc8ffff	                 call sym.get_varp_scope	      3800	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x4005084	        0x498b1424	                    mov rdx, qword [r12]	      3801	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7
0x4005088	          0x488910	                    mov qword [rax], rdx	      3800	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x400508b	        0x488b43f0	             mov rax, qword [rbx - 0x10]	      3800	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x400508f	      0xe9e9feffff	                           jmp 0x4004f7d	      3800	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x4005094	         0xf1f4000	                         nop dword [rax]	      3800	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x4005098	    0x488b0d000000	            mov rcx, qword [0x0400509f] 	      8113	option.c	FUNCTION_48	IF_2	IF_3
0x400509f	    0x81e2ff0f0000	                          and edx, 0xfff	      8113	option.c	FUNCTION_48	IF_2	IF_3
0x40050a5	    0x898491ac1200	  mov dword [rcx + rdx*4 + 0x12ac], eax 	      8113	option.c	FUNCTION_48	IF_2	IF_3
0x40050ac	      0xe907ffffff	                           jmp 0x4004fb8	      8113	option.c	FUNCTION_48	IF_2	IF_3
0x40050b1	     0xf1f80000000	                         nop dword [rax]	      8113	option.c	FUNCTION_48	IF_2	IF_3
0x40050b8	          0x4863d6	                         movsxd rdx, esi	      3808	option.c	FUNCTION_2	IF_1	ELSE_4
0x40050bb	          0x4863c5	                         movsxd rax, ebp	      3808	option.c	FUNCTION_2	IF_1	ELSE_4
0x40050be	    0x81f933400000	                         cmp ecx, 0x4033	      3811	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8	CALL_6
0x40050c4	      0x488d44c204	              lea rax, [rdx + rax*8 + 4]	      3808	option.c	FUNCTION_2	IF_1	ELSE_4
0x40050c9	    0x488b04c50000	                  mov rax, qword [rax*8]	      3808	option.c	FUNCTION_2	IF_1	ELSE_4
0x40050d1	        0x41890424	                    mov dword [r12], eax	      3808	option.c	FUNCTION_2	IF_1	ELSE_4
0x40050d5	     0xf8425010000	                            je 0x4005200	      3811	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8	CALL_6
0x40050db	      0xbe02000000	                              mov esi, 2	      3816	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9	CALL_7
0x40050e0	          0x4c89ef	                            mov rdi, r13	      3816	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9	CALL_7
0x40050e3	      0xe898c8ffff	                 call sym.get_varp_scope	      3816	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9	CALL_7
0x40050e8	        0x418b1424	                    mov edx, dword [r12]	      3817	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9
0x40050ec	            0x8910	                    mov dword [rax], edx	      3816	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9	CALL_7
0x40050ee	        0x488b43f0	             mov rax, qword [rbx - 0x10]	      3816	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9	CALL_7
0x40050f2	      0xe986feffff	                           jmp 0x4004f7d	      3816	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9	CALL_7
0x40050f7	    0x660f1f840000	                    nop word [rax + rax]	      3816	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9	CALL_7
0x4005100	          0x4863d6	                         movsxd rdx, esi	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x4005103	          0x4863c5	                         movsxd rax, ebp	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x4005106	          0x4531c0	                            xor r8d, r8d	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x4005109	      0x488d44c204	              lea rax, [rdx + rax*8 + 4]	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x400510e	      0xb901000000	                              mov ecx, 1	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x4005113	            0x89ee	                            mov esi, ebp	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x4005115	            0x31ff	                            xor edi, edi	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x4005117	    0x488b14c50000	                  mov rdx, qword [rax*8]	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x400511f	      0xe800000000	                          call 0x4005124	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x4005124	        0x488b43f0	             mov rax, qword [rbx - 0x10]	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x4005128	      0xe950feffff	                           jmp 0x4004f7d	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x400512d	           0xf1f00	                         nop dword [rax]	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x4005130	    0x81f930500000	                         cmp ecx, 0x5030	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4005136	    0x488b3d000000	            mov rdi, qword [0x0400513d] 	     10573	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400513d	     0xf8484010000	                            je 0x40052c7	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4005143	            0x767b	                           jbe 0x40051c0	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4005145	    0x81f947500000	                         cmp ecx, 0x5047	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400514b	     0xf84f7010000	                            je 0x4005348	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4005151	     0xf87e1000000	                            ja 0x4005238	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4005157	    0x81f931500000	                         cmp ecx, 0x5031	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400515d	     0xf84ae010000	                            je 0x4005311	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4005163	    0x81f938500000	                         cmp ecx, 0x5038	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4005169	    0x4c8da7101600	                 lea r12, [rdi + 0x1610]	     10550	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4005170	     0xf84a2fdffff	                            je 0x4004f18	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4005176	      0xe90efeffff	                           jmp 0x4004f89	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400517b	       0xf1f440000	                   nop dword [rax + rax]	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4005180	    0x81f901500000	                         cmp ecx, 0x5001	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4005186	     0xf8453010000	                            je 0x40052df	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400518c	     0xf86f2000000	                           jbe 0x4005284	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4005192	    0x81f903500000	                         cmp ecx, 0x5003	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4005198	    0x488b3d000000	            mov rdi, qword [0x0400519f] 	     10575	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400519f	     0xf842e010000	                            je 0x40052d3	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40051a5	    0x81f905500000	                         cmp ecx, 0x5005	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40051ab	    0x4c8da7001600	                 lea r12, [rdi + 0x1600]	     10544	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40051b2	     0xf8460fdffff	                            je 0x4004f18	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40051b8	      0xe9ccfdffff	                           jmp 0x4004f89	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40051bd	           0xf1f00	                         nop dword [rax]	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40051c0	    0x81f91e500000	                         cmp ecx, 0x501e	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40051c6	     0xf84ef000000	                            je 0x40052bb	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40051cc	     0xf86d1000000	                           jbe 0x40052a3	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40051d2	    0x81f91f500000	                         cmp ecx, 0x501f	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40051d8	     0xf844b010000	                            je 0x4005329	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40051de	    0x81f92e500000	                         cmp ecx, 0x502e	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40051e4	    0x4c8da7181500	                 lea r12, [rdi + 0x1518]	     10549	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40051eb	     0xf8427fdffff	                            je 0x4004f18	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40051f1	      0xe993fdffff	                           jmp 0x4004f89	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40051f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4005200	      0xe800000000	                          call 0x4005205	      3811	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8	CALL_6
0x4005205	            0x85c0	                           test eax, eax	      3811	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8	CALL_6
0x4005207	     0xf85cefeffff	                           jne 0x40050db	      3811	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8	CALL_6
0x400520d	    0x41c704240000	                      mov dword [r12], 0	      3812	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8
0x4005215	      0xe9c1feffff	                           jmp 0x40050db	      3812	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8
0x400521a	    0x660f1f440000	                    nop word [rax + rax]	      3812	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8
0x4005220	    0x488b3d000000	            mov rdi, qword [0x04005227] 	      3794	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	CALL_4
0x4005227	      0xe800000000	                          call 0x400522c	      3794	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	CALL_4
0x400522c	        0x488b43f0	             mov rax, qword [rbx - 0x10]	      3794	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	CALL_4
0x4005230	      0xe948fdffff	                           jmp 0x4004f7d	      3794	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	CALL_4
0x4005235	           0xf1f00	                         nop dword [rax]	      3794	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	CALL_4
0x4005238	    0x81f948500000	                         cmp ecx, 0x5048	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400523e	     0xf841c010000	                            je 0x4005360	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4005244	    0x81f94d500000	                         cmp ecx, 0x504d	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400524a	    0x4c8da7481600	                 lea r12, [rdi + 0x1648]	     10571	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4005251	     0xf84c1fcffff	                            je 0x4004f18	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4005257	      0xe92dfdffff	                           jmp 0x4004f89	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400525c	         0xf1f4000	                         nop dword [rax]	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4005260	    0x81f915500000	                         cmp ecx, 0x5015	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4005266	     0xf8486000000	                            je 0x40052f2	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400526c	    0x81f917500000	                         cmp ecx, 0x5017	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4005272	    0x4c8da7c01400	                 lea r12, [rdi + 0x14c0]	     10555	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4005279	     0xf8499fcffff	                            je 0x4004f18	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400527f	      0xe905fdffff	                           jmp 0x4004f89	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4005284	    0x488b3d000000	            mov rdi, qword [0x0400528b] 	     10569	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400528b	    0x81f921300000	                         cmp ecx, 0x3021	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4005291	    0x4c8da7800200	                  lea r12, [rdi + 0x280]	     10569	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4005298	     0xf847afcffff	                            je 0x4004f18	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400529e	      0xe9e6fcffff	                           jmp 0x4004f89	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40052a3	    0x81f91b500000	                         cmp ecx, 0x501b	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40052a9	    0x4c8da7081600	                 lea r12, [rdi + 0x1608]	     10548	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40052b0	     0xf8462fcffff	                            je 0x4004f18	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40052b6	      0xe9cefcffff	                           jmp 0x4004f89	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40052bb	    0x4c8da7f81400	                 lea r12, [rdi + 0x14f8]	     10542	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40052c2	      0xe951fcffff	                           jmp 0x4004f18	     10542	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40052c7	    0x4c8da7581600	                 lea r12, [rdi + 0x1658]	     10573	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40052ce	      0xe945fcffff	                           jmp 0x4004f18	     10573	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40052d3	    0x4c8da7f81300	                 lea r12, [rdi + 0x13f8]	     10575	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40052da	      0xe939fcffff	                           jmp 0x4004f18	     10575	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40052df	    0x488b3d000000	            mov rdi, qword [0x040052e6] 	     10551	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40052e6	    0x4c8da7181600	                 lea r12, [rdi + 0x1618]	     10551	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40052ed	      0xe926fcffff	                           jmp 0x4004f18	     10551	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40052f2	    0x4c8da7401600	                 lea r12, [rdi + 0x1640]	     10560	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40052f9	      0xe91afcffff	                           jmp 0x4004f18	     10560	option.c	FUNCTION_76	IF_3	SWITCH_1
0x40052fe	    0x488b3d000000	            mov rdi, qword [0x04005305] 	     10545	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4005305	    0x4c8da7f01500	                 lea r12, [rdi + 0x15f0]	     10545	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400530c	      0xe907fcffff	                           jmp 0x4004f18	     10545	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4005311	    0x4c8da7281500	                 lea r12, [rdi + 0x1528]	     10577	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4005318	      0xe9fbfbffff	                           jmp 0x4004f18	     10577	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400531d	    0x4c8da7f81500	                 lea r12, [rdi + 0x15f8]	     10546	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4005324	      0xe9effbffff	                           jmp 0x4004f18	     10546	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4005329	    0x4c8da7381700	                 lea r12, [rdi + 0x1738]	     10563	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4005330	      0xe9e3fbffff	                           jmp 0x4004f18	     10563	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4005335	    0x488b3d000000	            mov rdi, qword [0x0400533c] 	     10556	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400533c	    0x4c8da7c81400	                 lea r12, [rdi + 0x14c8]	     10556	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4005343	      0xe9d0fbffff	                           jmp 0x4004f18	     10556	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4005348	    0x4c8da7201600	                 lea r12, [rdi + 0x1620]	     10552	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400534f	      0xe9c4fbffff	                           jmp 0x4004f18	     10552	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4005354	    0x4c8da7381600	                 lea r12, [rdi + 0x1638]	     10559	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400535b	      0xe9b8fbffff	                           jmp 0x4004f18	     10559	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4005360	    0x4c8da7281600	                 lea r12, [rdi + 0x1628]	     10553	option.c	FUNCTION_76	IF_3	SWITCH_1
0x4005367	      0xe9acfbffff	                           jmp 0x4004f18	     10553	option.c	FUNCTION_76	IF_3	SWITCH_1
ExpandOldSetting	SWITCH,0:CALL,9:DO,0:WHILE,0:IF,7:functions,0:ELSE,1:FOR,1	62
0x400d020	              0x55	                                push rbp	     11705	option.c	FUNCTION_90
0x400d021	              0x53	                                push rbx	     11705	option.c	FUNCTION_90
0x400d022	          0x4889fd	                            mov rbp, rdi	     11705	option.c	FUNCTION_90
0x400d025	          0x4889f3	                            mov rbx, rsi	     11705	option.c	FUNCTION_90
0x400d028	        0x4883ec08	                              sub rsp, 8	     11705	option.c	FUNCTION_90
0x400d02c	    0xc70700000000	                      mov dword [rdi], 0	     11709	option.c	FUNCTION_90
0x400d032	      0xbf08000000	                              mov edi, 8	     11710	option.c	FUNCTION_90	CALL_1
0x400d037	      0xe800000000	                          call 0x400d03c	     11710	option.c	FUNCTION_90	CALL_1
0x400d03c	          0x4885c0	                           test rax, rax	     11711	option.c	FUNCTION_90	IF_1
0x400d03f	          0x488903	                    mov qword [rbx], rax	     11710	option.c	FUNCTION_90	CALL_1
0x400d042	            0x7470	                            je 0x400d0b4	     11711	option.c	FUNCTION_90	IF_1
0x400d044	    0x8b0500000000	            mov eax, dword [0x0400d04a] 	     11717	option.c	FUNCTION_90	IF_2
0x400d04a	            0x85c0	                           test eax, eax	     11717	option.c	FUNCTION_90	IF_2
0x400d04c	            0x7872	                            js 0x400d0c0	     11717	option.c	FUNCTION_90	IF_2
0x400d04e	          0x4863f8	                         movsxd rdi, eax	     11727	option.c	FUNCTION_90	IF_4	CALL_4
0x400d051	    0x8b3500000000	            mov esi, dword [0x0400d057] 	     11727	option.c	FUNCTION_90	IF_4	CALL_4
0x400d057	          0x4889fa	                            mov rdx, rdi	     11727	option.c	FUNCTION_90	IF_4	CALL_4
0x400d05a	        0x48c1e206	                              shl rdx, 6	     11727	option.c	FUNCTION_90	IF_4	CALL_4
0x400d05e	    0x488dba000000	                          lea rdi, [rdx]	     11727	option.c	FUNCTION_90	IF_4	CALL_4
0x400d065	      0xe8a64cffff	            call sym.option_value2string	     11727	option.c	FUNCTION_90	IF_4	CALL_4
0x400d06a	    0x488b3d000000	            mov rdi, qword [0x0400d071] 	     11728	option.c	FUNCTION_90	IF_4
0x400d071	    0x488b35000000	            mov rsi, qword [0x0400d078] 	     11735	option.c	FUNCTION_90	CALL_5
0x400d078	      0xe800000000	                          call 0x400d07d	     11735	option.c	FUNCTION_90	CALL_5
0x400d07d	          0x4885c0	                           test rax, rax	     11737	option.c	FUNCTION_90	IF_6
0x400d080	            0x741e	                            je 0x400d0a0	     11737	option.c	FUNCTION_90	IF_6
0x400d082	          0x488b13	                    mov rdx, qword [rbx]	     11755	option.c	FUNCTION_90
0x400d085	          0x488902	                    mov qword [rdx], rax	     11755	option.c	FUNCTION_90
0x400d088	    0xc74500010000	                      mov dword [rbp], 1	     11756	option.c	FUNCTION_90
0x400d08f	        0x4883c408	                              add rsp, 8	     11758	option.c	FUNCTION_90
0x400d093	      0xb801000000	                              mov eax, 1	     11757	option.c	FUNCTION_90
0x400d098	              0x5b	                                 pop rbx	     11758	option.c	FUNCTION_90
0x400d099	              0x5d	                                 pop rbp	     11758	option.c	FUNCTION_90
0x400d09a	              0xc3	                                     ret	     11758	option.c	FUNCTION_90
0x400d09b	       0xf1f440000	                   nop dword [rax + rax]	     11758	option.c	FUNCTION_90
0x400d0a0	          0x488b3b	                    mov rdi, qword [rbx]	     11739	option.c	FUNCTION_90	IF_6	CALL_6
0x400d0a3	          0x4885ff	                           test rdi, rdi	     11739	option.c	FUNCTION_90	IF_6	CALL_6
0x400d0a6	            0x740c	                            je 0x400d0b4	     11739	option.c	FUNCTION_90	IF_6	CALL_6
0x400d0a8	      0xe800000000	                          call 0x400d0ad	     11739	option.c	FUNCTION_90	IF_6	CALL_6
0x400d0ad	    0x48c703000000	                      mov qword [rbx], 0	     11739	option.c	FUNCTION_90	IF_6	CALL_6
0x400d0b4	        0x4883c408	                              add rsp, 8	     11758	option.c	FUNCTION_90
0x400d0b8	            0x31c0	                            xor eax, eax	     11740	option.c	FUNCTION_90	IF_6
0x400d0ba	              0x5b	                                 pop rbx	     11758	option.c	FUNCTION_90
0x400d0bb	              0x5d	                                 pop rbp	     11758	option.c	FUNCTION_90
0x400d0bc	              0xc3	                                     ret	     11758	option.c	FUNCTION_90
0x400d0bd	           0xf1f00	                         nop dword [rax]	     11758	option.c	FUNCTION_90
0x400d0c0	      0xbf00000000	                              mov edi, 0	     11719	option.c	FUNCTION_90	IF_2	CALL_2
0x400d0c5	      0xe800000000	                          call 0x400d0ca	     11719	option.c	FUNCTION_90	IF_2	CALL_2
0x400d0ca	          0x4885c0	                           test rax, rax	     11720	option.c	FUNCTION_90	IF_2	IF_3
0x400d0cd	          0x4889c7	                            mov rdi, rax	     11719	option.c	FUNCTION_90	IF_2	CALL_2
0x400d0d0	            0x7416	                            je 0x400d0e8	     11720	option.c	FUNCTION_90	IF_2	IF_3
0x400d0d2	    0x8b0500000000	            mov eax, dword [0x0400d0d8] 	     11724	option.c	FUNCTION_90	IF_4
0x400d0d8	            0x85c0	                           test eax, eax	     11724	option.c	FUNCTION_90	IF_4
0x400d0da	            0x7895	                            js 0x400d071	     11724	option.c	FUNCTION_90	IF_4
0x400d0dc	      0xe96dffffff	                           jmp 0x400d04e	     11724	option.c	FUNCTION_90	IF_4
0x400d0e1	     0xf1f80000000	                         nop dword [rax]	     11724	option.c	FUNCTION_90	IF_4
0x400d0e8	      0xbf00000000	                              mov edi, 0	     11721	option.c	FUNCTION_90	IF_2	CALL_3
0x400d0ed	      0xe82e32ffff	                     call sym.findoption	     11721	option.c	FUNCTION_90	IF_2	CALL_3
0x400d0f2	            0x85c0	                           test eax, eax	     11724	option.c	FUNCTION_90	IF_4
0x400d0f4	    0x890500000000	            mov dword [0x0400d0fa], eax 	     11721	option.c	FUNCTION_90	IF_2	CALL_3
0x400d0fa	     0xf894effffff	                           jns 0x400d04e	     11724	option.c	FUNCTION_90	IF_4
0x400d100	      0xbf00000000	                              mov edi, 0	     11731	option.c	FUNCTION_90	ELSE_1	IF_5
0x400d105	      0xe967ffffff	                           jmp 0x400d071	     11731	option.c	FUNCTION_90	ELSE_1	IF_5
clear_termoptions	SWITCH,0:CALL,5:DO,0:WHILE,0:IF,1:functions,0:ELSE,0:FOR,0	12
0x4006420	        0x4883ec08	                              sub rsp, 8	     10278	option.c	FUNCTION_69
0x4006424	            0x31ff	                            xor edi, edi	     10285	option.c	FUNCTION_69	CALL_1
0x4006426	      0xe800000000	                          call 0x400642b	     10285	option.c	FUNCTION_69	CALL_1
0x400642b	      0xbf03000000	                              mov edi, 3	     10288	option.c	FUNCTION_69	CALL_2
0x4006430	      0xe800000000	                          call 0x4006435	     10288	option.c	FUNCTION_69	CALL_2
0x4006435	    0x8b0500000000	            mov eax, dword [0x0400643b] 	     10293	option.c	FUNCTION_69	IF_1
0x400643b	            0x85c0	                           test eax, eax	     10293	option.c	FUNCTION_69	IF_1
0x400643d	            0x7405	                            je 0x4006444	     10293	option.c	FUNCTION_69	IF_1
0x400643f	      0xe800000000	                          call 0x4006444	     10294	option.c	FUNCTION_69	CALL_3
0x4006444	      0xe800000000	                          call 0x4006449	     10296	option.c	FUNCTION_69	CALL_4
0x4006449	        0x4883c408	                              add rsp, 8	     10299	option.c	FUNCTION_69
0x400644d	      0xe90effffff	                jmp sym.free_termoptions	     10298	option.c	FUNCTION_69	CALL_5
do_set	SWITCH,1:CALL,129:DO,0:WHILE,6:IF,120:functions,0:ELSE,45:FOR,4	2311
0x400ed10	            0x4157	                                push r15	      4366	option.c	FUNCTION_16
0x400ed12	            0x4156	                                push r14	      4366	option.c	FUNCTION_16
0x400ed14	          0x4189f7	                           mov r15d, esi	      4366	option.c	FUNCTION_16
0x400ed17	            0x4155	                                push r13	      4366	option.c	FUNCTION_16
0x400ed19	            0x4154	                                push r12	      4366	option.c	FUNCTION_16
0x400ed1b	              0x55	                                push rbp	      4366	option.c	FUNCTION_16
0x400ed1c	              0x53	                                push rbx	      4366	option.c	FUNCTION_16
0x400ed1d	    0x4881ec380100	                          sub rsp, 0x138	      4366	option.c	FUNCTION_16
0x400ed24	    0x64488b1c2528	                mov rbx, qword fs:[0x28]	      4366	option.c	FUNCTION_16
0x400ed2d	    0x48899c242801	            mov qword [rsp + 0x128], rbx	      4366	option.c	FUNCTION_16
0x400ed35	            0x31db	                            xor ebx, ebx	      4366	option.c	FUNCTION_16
0x400ed37	    0x4889bc248800	             mov qword [rsp + 0x88], rdi	      4366	option.c	FUNCTION_16
0x400ed3f	           0xfb61f	                   movzx ebx, byte [rdi]	      4387	option.c	FUNCTION_16	IF_1
0x400ed42	            0x84db	                             test bl, bl	      4387	option.c	FUNCTION_16	IF_1
0x400ed44	     0xf841f140000	                            je 0x4010169	      4387	option.c	FUNCTION_16	IF_1
0x400ed4a	            0x89f0	                            mov eax, esi	      4400	option.c	FUNCTION_16	WHILE_1	IF_2
0x400ed4c	      0xba00000000	                              mov edx, 0	      4400	option.c	FUNCTION_16	WHILE_1	IF_2
0x400ed51	          0x4889fd	                            mov rbp, rdi	      4400	option.c	FUNCTION_16	WHILE_1	IF_2
0x400ed54	          0x83e008	                              and eax, 8	      4400	option.c	FUNCTION_16	WHILE_1	IF_2
0x400ed57	    0xc74424600000	               mov dword [rsp + 0x60], 0	      4827	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x400ed5f	    0xc74424500000	               mov dword [rsp + 0x50], 0	      4827	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x400ed67	        0x89442454	             mov dword [rsp + 0x54], eax	      4400	option.c	FUNCTION_16	WHILE_1	IF_2
0x400ed6b	            0x89f0	                            mov eax, esi	      9886	option.c	FUNCTION_61	ELSE_1	IF_3
0x400ed6d	    0x48c744242000	               mov qword [rsp + 0x20], 0	      4827	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x400ed76	          0x83e002	                              and eax, 2	      9886	option.c	FUNCTION_61	ELSE_1	IF_3
0x400ed79	        0x89442478	             mov dword [rsp + 0x78], eax	      9886	option.c	FUNCTION_61	ELSE_1	IF_3
0x400ed7d	            0x89f0	                            mov eax, esi	      4558	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x400ed7f	          0x83e010	                           and eax, 0x10	      4558	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x400ed82	        0x89442464	             mov dword [rsp + 0x64], eax	      4558	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x400ed86	            0x89f0	                            mov eax, esi	      4827	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x400ed88	          0x83e006	                              and eax, 6	      4827	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x400ed8b	        0x8944246c	             mov dword [rsp + 0x6c], eax	      4827	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x400ed8f	            0x89f0	                            mov eax, esi	      4827	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x400ed91	          0x83e004	                              and eax, 4	      4827	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x400ed94	        0x89442468	             mov dword [rsp + 0x68], eax	      4827	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x400ed98	      0xb800000000	                              mov eax, 0	      4827	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x400ed9d	        0x480f45c2	                         cmovne rax, rdx	      4827	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x400eda1	      0x4889442470	             mov qword [rsp + 0x70], rax	      4827	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x400eda6	            0x89f0	                            mov eax, esi	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400eda8	          0xc1e805	                              shr eax, 5	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400edab	          0x83e001	                              and eax, 1	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400edae	        0x8844247f	               mov byte [rsp + 0x7f], al	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400edb2	    0x660f1f440000	                    nop word [rax + rax]	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400edb8	      0xb903000000	                              mov ecx, 3	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x400edbd	          0x4889ee	                            mov rsi, rbp	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x400edc0	      0xbf00000000	                              mov edi, 0	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x400edc5	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x400edc7	     0xf852a020000	                           jne 0x400eff7	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x400edcd	      0xe800000000	                          call 0x400edd2	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x400edd2	         0xfb65503	               movzx edx, byte [rbp + 3]	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x400edd6	          0x488b00	                    mov rax, qword [rax]	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x400edd9	      0xf644500104	         test byte [rax + rdx*2 + 1], 4 	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x400edde	     0xf8513020000	                           jne 0x400eff7	      4399	option.c	FUNCTION_16	WHILE_1	IF_2	CALL_3
0x400ede4	        0x8b442454	            mov eax, dword [rsp + 0x54] 	      4400	option.c	FUNCTION_16	WHILE_1	IF_2
0x400ede8	            0x85c0	                           test eax, eax	      4400	option.c	FUNCTION_16	WHILE_1	IF_2
0x400edea	     0xf8524020000	                           jne 0x400f014	      4400	option.c	FUNCTION_16	WHILE_1	IF_2
0x400edf0	        0x488d4503	                      lea rax, [rbp + 3]	      4406	option.c	FUNCTION_16	WHILE_1	IF_2
0x400edf4	    0x488984248800	             mov qword [rsp + 0x88], rax	      4406	option.c	FUNCTION_16	WHILE_1	IF_2
0x400edfc	        0x807d0326	                cmp byte [rbp + 3], 0x26	      4407	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3
0x400ee00	     0xf845a0c0000	                            je 0x400fa60	      4407	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3
0x400ee06	      0xbf200f0000	                          mov edi, 0xf20	      9878	option.c	FUNCTION_61	CALL_1
0x400ee0b	      0xe800000000	                          call 0x400ee10	      9878	option.c	FUNCTION_61	CALL_1
0x400ee10	          0x4885c0	                           test rax, rax	      9880	option.c	FUNCTION_61	IF_1
0x400ee13	      0x4889442430	             mov qword [rsp + 0x30], rax	      9878	option.c	FUNCTION_61	CALL_1
0x400ee18	     0xf844b190000	                            je 0x4010769	      9880	option.c	FUNCTION_61	IF_1
0x400ee1e	        0x8b442478	            mov eax, dword [rsp + 0x78] 	      9886	option.c	FUNCTION_61	ELSE_1	IF_3
0x400ee22	      0xba05000000	                              mov edx, 5	      9887	option.c	FUNCTION_61	ELSE_1	IF_3
0x400ee27	            0x85c0	                           test eax, eax	      9886	option.c	FUNCTION_61	ELSE_1	IF_3
0x400ee29	     0xf85c40d0000	                           jne 0x400fbf3	      9886	option.c	FUNCTION_61	ELSE_1	IF_3
0x400ee2f	        0x8b442468	            mov eax, dword [rsp + 0x68] 	      9888	option.c	FUNCTION_61	ELSE_2	IF_4
0x400ee33	            0x85c0	                           test eax, eax	      9888	option.c	FUNCTION_61	ELSE_2	IF_4
0x400ee35	     0xf849f0d0000	                            je 0x400fbda	      9888	option.c	FUNCTION_61	ELSE_2	IF_4
0x400ee3b	            0x31ff	                            xor edi, edi	      9889	option.c	FUNCTION_61	ELSE_2	IF_4
0x400ee3d	      0xbe00000000	                              mov esi, 0	      9889	option.c	FUNCTION_61	ELSE_2	IF_4
0x400ee42	      0xe800000000	                          call 0x400ee47	      9889	option.c	FUNCTION_61	ELSE_2	IF_4
0x400ee47	          0x4889c7	                            mov rdi, rax	      9889	option.c	FUNCTION_61	ELSE_2	IF_4
0x400ee4a	      0xe800000000	                          call 0x400ee4f	      9889	option.c	FUNCTION_61	ELSE_2	IF_4
0x400ee4f	    0xc74424280100	               mov dword [rsp + 0x28], 1	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x400ee57	    0xc74424380200	               mov dword [rsp + 0x38], 2	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x400ee5f	    0x8b0500000000	            mov eax, dword [0x0400ee65] 	      9898	option.c	FUNCTION_61	FOR_1
0x400ee65	            0x85c0	                           test eax, eax	      9898	option.c	FUNCTION_61	FOR_1
0x400ee67	     0xf856b010000	                           jne 0x400efd8	      9898	option.c	FUNCTION_61	FOR_1
0x400ee6d	    0x488b05000000	            mov rax, qword [0x0400ee74] 	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x400ee74	            0x31db	                            xor ebx, ebx	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x400ee76	      0xbd00000000	                              mov ebp, 0	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x400ee7b	          0x4885c0	                           test rax, rax	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x400ee7e	     0xf84390b0000	                            je 0x400f9bd	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x400ee84	      0x4c8b6c2430	            mov r13, qword [rsp + 0x30] 	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x400ee89	      0x448b642428	           mov r12d, dword [rsp + 0x28] 	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x400ee8e	            0xeb21	                           jmp 0x400eeb1	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x400ee90	          0x4585ff	                         test r15d, r15d	      9908	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5
0x400ee93	     0xf848f070000	                            je 0x400f628	      9908	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5
0x400ee99	          0x8b4520	            mov eax, dword [rbp + 0x20] 	      9910	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	IF_6
0x400ee9c	            0x85c0	                           test eax, eax	      9910	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	IF_6
0x400ee9e	     0xf8564080000	                           jne 0x400f708	      9910	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	IF_6
0x400eea4	        0x4883c540	                           add rbp, 0x40	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x400eea8	        0x488b4500	                    mov rax, qword [rbp]	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x400eeac	          0x4885c0	                           test rax, rax	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x400eeaf	            0x7452	                            je 0x400ef03	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x400eeb1	          0x803874	                    cmp byte [rax], 0x74	     10375	option.c	FUNCTION_73
0x400eeb4	            0x75da	                           jne 0x400ee90	     10375	option.c	FUNCTION_73
0x400eeb6	        0x8078015f	                cmp byte [rax + 1], 0x5f	     10375	option.c	FUNCTION_73
0x400eeba	            0x75d4	                           jne 0x400ee90	     10375	option.c	FUNCTION_73
0x400eebc	          0x4531f6	                          xor r14d, r14d	      9908	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5
0x400eebf	          0x4585ff	                         test r15d, r15d	      9908	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5
0x400eec2	            0x75e0	                           jne 0x400eea4	      9908	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5
0x400eec4	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	      9914	option.c	FUNCTION_61	FOR_1	FOR_2	CALL_12
0x400eec8	        0x488d7520	                   lea rsi, [rbp + 0x20]	      9914	option.c	FUNCTION_61	FOR_1	FOR_2	CALL_12
0x400eecc	      0xe87f1bffff	                call sym.get_varp.isra.1	      9914	option.c	FUNCTION_61	FOR_1	FOR_2	CALL_12
0x400eed1	          0x4885c0	                           test rax, rax	      9917	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7
0x400eed4	            0x74ce	                            je 0x400eea4	      9917	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7
0x400eed6	          0x4584f6	                         test r14b, r14b	      9917	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7
0x400eed9	            0x74c9	                            je 0x400eea4	      9917	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7
0x400eedb	        0xf6451001	               test byte [rbp + 0x10], 1	      9920	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_8
0x400eedf	     0xf84c1070000	                            je 0x400f6a6	      9920	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_8
0x400eee5	        0x4183fc01	                             cmp r12d, 1	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400eee9	            0x75b9	                           jne 0x400eea4	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400eeeb	          0x4863c3	                         movsxd rax, ebx	      9929	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400eeee	          0x83c301	                              add ebx, 1	      9929	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400eef1	      0x49896cc500	            mov qword [r13 + rax*8], rbp	      9929	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400eef6	        0x4883c540	                           add rbp, 0x40	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x400eefa	        0x488b4500	                    mov rax, qword [rbp]	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x400eefe	          0x4885c0	                           test rax, rax	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x400ef01	            0x75ae	                           jne 0x400eeb1	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x400ef03	      0x837c242801	               cmp dword [rsp + 0x28], 1	      9936	option.c	FUNCTION_61	FOR_1	IF_10
0x400ef08	     0xf840a190000	                            je 0x4010818	      9936	option.c	FUNCTION_61	FOR_1	IF_10
0x400ef0e	            0x85db	                           test ebx, ebx	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400ef10	     0xf84b7000000	                            je 0x400efcd	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400ef16	            0x89dd	                            mov ebp, ebx	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400ef18	    0x8b0500000000	            mov eax, dword [0x0400ef1e] 	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400ef1e	            0x85c0	                           test eax, eax	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400ef20	     0xf85a7000000	                           jne 0x400efcd	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400ef26	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400ef2b	          0x4c63e5	                         movsxd r12, ebp	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400ef2e	    0xc74424140000	               mov dword [rsp + 0x14], 0	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400ef36	      0x4889442418	             mov qword [rsp + 0x18], rax	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400ef3b	    0x4a8d04e50000	                        lea rax, [r12*8]	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400ef43	      0x4889442408	                mov qword [rsp + 8], rax	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400ef48	     0xf1f84000000	                   nop dword [rax + rax]	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400ef50	      0xbf0a000000	                            mov edi, 0xa	      9947	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	CALL_17
0x400ef55	      0xe800000000	                          call 0x400ef5a	      9947	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	CALL_17
0x400ef5a	    0x8b0500000000	            mov eax, dword [0x0400ef60] 	      9948	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	IF_12
0x400ef60	            0x85c0	                           test eax, eax	      9948	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	IF_12
0x400ef62	            0x7569	                           jne 0x400efcd	      9948	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	IF_12
0x400ef64	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      9948	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	IF_12
0x400ef68	          0x4531f6	                          xor r14d, r14d	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x400ef6b	      0x4c8b6c2418	            mov r13, qword [rsp + 0x18] 	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x400ef70	            0x39d8	                            cmp eax, ebx	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x400ef72	        0x448d2428	                   lea r12d, [rax + rbp]	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x400ef76	            0x7d2e	                           jge 0x400efa6	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x400ef78	     0xf1f84000000	                   nop dword [rax + rax]	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x400ef80	        0x498b7d00	                    mov rdi, qword [r13]	      9954	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0x400ef84	          0x4489fe	                           mov esi, r15d	      9954	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0x400ef87	    0x448935000000	           mov dword [0x0400ef8e], r14d 	      9953	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x400ef8e	        0x4183c614	                          add r14d, 0x14	      9955	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x400ef92	      0xe8e92effff	                     call sym.showoneopt	      9954	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0x400ef97	          0x4489e2	                           mov edx, r12d	      9954	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0x400ef9a	      0x4c036c2408	                add r13, qword [rsp + 8]	      9954	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0x400ef9f	          0x4101ec	                           add r12d, ebp	      9954	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0x400efa2	            0x39d3	                            cmp ebx, edx	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x400efa4	            0x7fda	                            jg 0x400ef80	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x400efa6	      0xe800000000	                          call 0x400efab	      9957	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	CALL_19
0x400efab	      0xe800000000	                          call 0x400efb0	      9958	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	CALL_20
0x400efb0	      0x8344241401	               add dword [rsp + 0x14], 1	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400efb5	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400efb9	            0x39e8	                            cmp eax, ebp	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400efbb	            0x7d10	                           jge 0x400efcd	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400efbd	    0x8b0500000000	            mov eax, dword [0x0400efc3] 	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400efc3	    0x488344241808	               add qword [rsp + 0x18], 8	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400efc9	            0x85c0	                           test eax, eax	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400efcb	            0x7483	                            je 0x400ef50	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400efcd	      0x837c243803	               cmp dword [rsp + 0x38], 3	      9898	option.c	FUNCTION_61	FOR_1
0x400efd2	     0xf85290a0000	                           jne 0x400fa01	      9898	option.c	FUNCTION_61	FOR_1
0x400efd8	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      9961	option.c	FUNCTION_61	CALL_21
0x400efdd	      0xe800000000	                          call 0x400efe2	      9961	option.c	FUNCTION_61	CALL_21
0x400efe2	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	      9961	option.c	FUNCTION_61	CALL_21
0x400efea	    0xc74424500100	               mov dword [rsp + 0x50], 1	      4419	option.c	FUNCTION_16	WHILE_1	IF_2	ELSE_1
0x400eff2	      0xe991020000	                           jmp 0x400f288	      4419	option.c	FUNCTION_16	WHILE_1	IF_2	ELSE_1
0x400eff7	      0xbf00000000	                              mov edi, 0	      4422	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x400effc	      0xb907000000	                              mov ecx, 7	      4422	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x400f001	          0x4889ee	                            mov rsi, rbp	      4422	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x400f004	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4422	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x400f006	            0x750c	                           jne 0x400f014	      4422	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x400f008	        0x8b442454	            mov eax, dword [rsp + 0x54] 	      4422	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x400f00c	            0x85c0	                           test eax, eax	      4422	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x400f00e	     0xf84cd020000	                            je 0x400f2e1	      4422	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_9
0x400f014	      0xbf00000000	                              mov edi, 0	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x400f019	      0xb902000000	                              mov ecx, 2	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x400f01e	          0x4889ee	                            mov rsi, rbp	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x400f021	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x400f023	     0xf85c3040000	                           jne 0x400f4ec	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x400f029	      0xbf00000000	                              mov edi, 0	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x400f02e	      0xb906000000	                              mov ecx, 6	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x400f033	          0x4889ee	                            mov rsi, rbp	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x400f036	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x400f038	     0xf84ae040000	                            je 0x400f4ec	      4432	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5	CALL_13
0x400f03e	        0x488d7d02	                      lea rdi, [rbp + 2]	      4435	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5
0x400f042	    0xc74424300000	               mov dword [rsp + 0x30], 0	      4434	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5
0x400f04a	    0x4889bc248800	             mov qword [rsp + 0x88], rdi	      4435	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5
0x400f052	         0xfb65d02	               movzx ebx, byte [rbp + 2]	      4435	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_5
0x400f056	          0x80fb3c	                            cmp bl, 0x3c	      4445	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x400f059	     0xf84c3040000	                            je 0x400f522	      4445	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x400f05f	          0x80fb74	                            cmp bl, 0x74	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x400f062	     0xf84ae010000	                            je 0x400f216	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x400f068	            0x31c9	                            xor ecx, ecx	      9848	option.c	FUNCTION_60	ELSE_1	IF_2
0x400f06a	            0xeb0c	                           jmp 0x400f078	      9848	option.c	FUNCTION_60	ELSE_1	IF_2
0x400f06c	         0xf1f4000	                         nop dword [rax]	      9848	option.c	FUNCTION_60	ELSE_1	IF_2
0x400f070	        0x4883c101	                              add rcx, 1	      9848	option.c	FUNCTION_60	ELSE_1	IF_2
0x400f074	        0x4883c701	                              add rdi, 1	      9848	option.c	FUNCTION_60	ELSE_1	IF_2
0x400f078	        0x440fb62f	                  movzx r13d, byte [rdi]	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x400f07c	          0x4189ce	                           mov r14d, ecx	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x400f07f	          0x4989cc	                            mov r12, rcx	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x400f082	          0x4889f8	                            mov rax, rdi	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x400f085	          0x4489ea	                           mov edx, r13d	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x400f088	          0x83e2df	                     and edx, 0xffffffdf	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x400f08b	          0x83ea41	                           sub edx, 0x41	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x400f08e	          0x80fa19	                            cmp dl, 0x19	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x400f091	            0x76dd	                           jbe 0x400f070	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x400f093	        0x410fb6d5	                         movzx edx, r13b	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x400f097	          0x83ea30	                           sub edx, 0x30	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x400f09a	          0x83fa09	                              cmp edx, 9	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x400f09d	            0x76d1	                           jbe 0x400f070	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x400f09f	        0x4180fd5f	                          cmp r13b, 0x5f	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x400f0a3	            0x74cb	                            je 0x400f070	      4479	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	ELSE_7	WHILE_3	CALL_17
0x400f0a5	          0xc60000	                       mov byte [rax], 0	      4482	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x400f0a8	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	      4483	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	CALL_18
0x400f0b0	      0xe86b12ffff	                     call sym.findoption	      4483	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	CALL_18
0x400f0b5	          0x4863d8	                         movsxd rbx, eax	      4483	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	CALL_18
0x400f0b8	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	      4484	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x400f0c0	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      4485	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_13
0x400f0c3	        0x46882c20	              mov byte [rax + r12], r13b	      4484	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6
0x400f0c7	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	      4486	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	CALL_19
0x400f0cf	     0xf846d080000	                            je 0x400f942	      4485	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_13
0x400f0d5	            0x31f6	                            xor esi, esi	      4485	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_13
0x400f0d7	            0x31c0	                            xor eax, eax	      4444	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400f0d9	      0x420fb60c27	             movzx ecx, byte [rdi + r12]	      4490	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400f0de	          0x80f909	                               cmp cl, 9	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x400f0e1	            0x7409	                            je 0x400f0ec	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x400f0e3	          0x80f920	                            cmp cl, 0x20	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x400f0e6	     0xf8524090000	                           jne 0x400fa10	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x400f0ec	          0x4d63ce	                         movsxd r9, r14d	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x400f0ef	        0x4d8d6101	                       lea r12, [r9 + 1]	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x400f0f3	            0xeb06	                           jmp 0x400f0fb	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x400f0f5	           0xf1f00	                         nop dword [rax]	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x400f0f8	          0x4989d4	                            mov r12, rdx	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x400f0fb	      0x460fb62c27	            movzx r13d, byte [rdi + r12]	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x400f100	        0x4183c601	                             add r14d, 1	      4494	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4
0x400f104	      0x498d542401	                      lea rdx, [r12 + 1]	      4494	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4
0x400f109	        0x4180fd20	                          cmp r13b, 0x20	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x400f10d	            0x74e9	                            je 0x400f0f8	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x400f10f	        0x4180fd09	                             cmp r13b, 9	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x400f113	            0x74e3	                            je 0x400f0f8	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x400f115	          0x4584ed	                         test r13b, r13b	      4499	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14
0x400f118	            0x740c	                            je 0x400f126	      4499	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14
0x400f11a	    0x42807c27013d	         cmp byte [rdi + r12 + 1], 0x3d 	      4499	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14
0x400f120	     0xf84bd070000	                            je 0x400f8e3	      4499	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14
0x400f126	    0xc74424400100	               mov dword [rsp + 0x40], 1	      4499	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14
0x400f12e	    0xc74424380000	               mov dword [rsp + 0x38], 0	      4499	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14
0x400f136	    0xc74424140000	               mov dword [rsp + 0x14], 0	      4499	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14
0x400f13e	    0xc74424180000	               mov dword [rsp + 0x18], 0	      4498	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400f146	    0xc74424480000	               mov dword [rsp + 0x48], 0	      4497	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400f14e	    0xc74424280000	               mov dword [rsp + 0x28], 0	      4496	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400f156	          0x4084f6	                           test sil, sil	      4519	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_18
0x400f159	     0xf8521050000	                           jne 0x400f680	      4519	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_18
0x400f15f	            0x85db	                           test ebx, ebx	      4525	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19
0x400f161	     0xf88b7050000	                            js 0x400f71e	      4525	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19
0x400f167	          0x4863d3	                         movsxd rdx, ebx	      4527	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20
0x400f16a	        0x48c1e206	                              shl rdx, 6	      4527	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20
0x400f16e	    0x4c8db2000000	                          lea r14, [rdx]	      4527	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20
0x400f175	      0x49837e1800	               cmp qword [r14 + 0x18], 0	      4527	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20
0x400f17a	     0xf84d3090000	                            je 0x400fb53	      4527	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20
0x400f180	        0x498b4610	            mov rax, qword [r14 + 0x10] 	      4538	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19
0x400f184	          0x4489fe	                           mov esi, r15d	      4539	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	CALL_24
0x400f187	          0x4c89f7	                            mov rdi, r14	      4539	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	CALL_24
0x400f18a	        0x884c2458	               mov byte [rsp + 0x58], cl	      4539	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	CALL_24
0x400f18e	      0x4889442408	                mov qword [rsp + 8], rax	      4538	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19
0x400f193	      0xe8e827ffff	                 call sym.get_varp_scope	      4539	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	CALL_24
0x400f198	      0x448b542464	           mov r10d, dword [rsp + 0x64] 	      4558	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x400f19d	      0x4889442420	             mov qword [rsp + 0x20], rax	      4539	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	CALL_24
0x400f1a2	       0xfb64c2458	           movzx ecx, byte [rsp + 0x58] 	      4558	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x400f1a7	          0x4585d2	                         test r10d, r10d	      4558	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x400f1aa	     0xf849a050000	                            je 0x400f74a	      4558	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x400f1b0	      0x49837e18ff	cmp qword [r14 + 0x18], 0xffffffffffffffff	      4559	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x400f1b5	     0xf844d130000	                            je 0x4010508	      4559	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x400f1bb	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	      4559	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x400f1c3	    0xc78424900000	               mov dword [rsp + 0x90], 0	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x400f1ce	          0x4531f6	                          xor r14d, r14d	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x400f1d1	     0xf1f80000000	                         nop dword [rax]	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x400f1d8	           0xfb607	                   movzx eax, byte [rdi]	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x400f1db	            0xeb06	                           jmp 0x400f1e3	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x400f1dd	           0xf1f00	                         nop dword [rax]	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x400f1e0	          0x4889d7	                            mov rdi, rdx	      4794	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_29	CALL_54
0x400f1e3	            0xa8df	                           test al, 0xdf	      5242	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	CALL_117
0x400f1e5	            0x7469	                            je 0x400f250	      5242	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	CALL_117
0x400f1e7	            0x3c09	                               cmp al, 9	      5242	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	CALL_117
0x400f1e9	            0x7465	                            je 0x400f250	      5242	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	CALL_117
0x400f1eb	        0x488d5701	                      lea rdx, [rdi + 1]	      5243	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x400f1ef	    0x488994248800	             mov qword [rsp + 0x88], rdx	      5243	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x400f1f7	          0x803f5c	                    cmp byte [rdi], 0x5c	      5243	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x400f1fa	         0xfb64701	               movzx eax, byte [rdi + 1]	      5243	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x400f1fe	            0x75e0	                           jne 0x400f1e0	      5243	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x400f200	            0x84c0	                             test al, al	      5243	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x400f202	            0x74dc	                            je 0x400f1e0	      5243	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x400f204	        0x488d5702	                      lea rdx, [rdi + 2]	      5244	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x400f208	    0x488994248800	             mov qword [rsp + 0x88], rdx	      5244	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x400f210	         0xfb64702	               movzx eax, byte [rdi + 2]	      5244	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x400f214	            0xebca	                           jmp 0x400f1e0	      5244	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	WHILE_6	IF_116
0x400f216	        0x807f015f	                cmp byte [rdi + 1], 0x5f	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x400f21a	     0xf8548feffff	                           jne 0x400f068	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x400f220	        0x807f0200	                   cmp byte [rdi + 2], 0	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x400f224	     0xf843efeffff	                            je 0x400f068	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x400f22a	        0x807f0300	                   cmp byte [rdi + 3], 0	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x400f22e	     0xf8434feffff	                            je 0x400f068	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x400f234	        0x488d4704	                      lea rax, [rdi + 4]	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x400f238	      0x440fb66f04	              movzx r13d, byte [rdi + 4]	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x400f23d	    0x41bc04000000	                             mov r12d, 4	      4476	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x400f243	    0x41be04000000	                             mov r14d, 4	      4477	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x400f249	      0xe957feffff	                           jmp 0x400f0a5	      4477	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x400f24e	            0x6690	                                     nop	      4477	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_6	IF_12
0x400f250	      0xe800000000	                          call 0x400f255	      5245	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	CALL_118
0x400f255	    0x488984248800	             mov qword [rsp + 0x88], rax	      5245	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	CALL_118
0x400f25d	          0x80383d	                    cmp byte [rax], 0x3d	      5246	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	IF_117
0x400f260	          0x4889c7	                            mov rdi, rax	      5245	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	CALL_118
0x400f263	            0x751a	                           jne 0x400f27f	      5246	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4	IF_117
0x400f265	    0x8b8424900000	            mov eax, dword [rsp + 0x90] 	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x400f26c	          0x83c001	                              add eax, 1	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x400f26f	          0x83f801	                              cmp eax, 1	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x400f272	    0x898424900000	             mov dword [rsp + 0x90], eax	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x400f279	     0xf8e59ffffff	                           jle 0x400f1d8	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x400f27f	          0x4d85f6	                           test r14, r14	      5251	option.c	FUNCTION_16	WHILE_1	IF_118
0x400f282	     0xf8598090000	                           jne 0x400fc20	      5251	option.c	FUNCTION_16	WHILE_1	IF_118
0x400f288	      0xe800000000	                          call 0x400f28d	      5272	option.c	FUNCTION_16	WHILE_1	CALL_126
0x400f28d	    0x488984248800	             mov qword [rsp + 0x88], rax	      5272	option.c	FUNCTION_16	WHILE_1	CALL_126
0x400f295	           0xfb618	                   movzx ebx, byte [rax]	      4394	option.c	FUNCTION_16	WHILE_1
0x400f298	          0x4889c5	                            mov rbp, rax	      5272	option.c	FUNCTION_16	WHILE_1	CALL_126
0x400f29b	            0x84db	                             test bl, bl	      4394	option.c	FUNCTION_16	WHILE_1
0x400f29d	     0xf8515fbffff	                           jne 0x400edb8	      4394	option.c	FUNCTION_16	WHILE_1
0x400f2a3	    0x448b1d000000	           mov r11d, dword [0x0400f2aa] 	      5276	option.c	FUNCTION_16	IF_120
0x400f2aa	          0x4585db	                         test r11d, r11d	      5276	option.c	FUNCTION_16	IF_120
0x400f2ad	     0xf8559090000	                           jne 0x400fc0c	      5276	option.c	FUNCTION_16	IF_120
0x400f2b3	      0xb801000000	                              mov eax, 1	      5288	option.c	FUNCTION_16
0x400f2b8	    0x488b9c242801	           mov rbx, qword [rsp + 0x128] 	      5289	option.c	FUNCTION_16
0x400f2c0	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      5289	option.c	FUNCTION_16
0x400f2c9	     0xf8577150000	                           jne 0x4010846	      5289	option.c	FUNCTION_16
0x400f2cf	    0x4881c4380100	                          add rsp, 0x138	      5289	option.c	FUNCTION_16
0x400f2d6	              0x5b	                                 pop rbx	      5289	option.c	FUNCTION_16
0x400f2d7	              0x5d	                                 pop rbp	      5289	option.c	FUNCTION_16
0x400f2d8	            0x415c	                                 pop r12	      5289	option.c	FUNCTION_16
0x400f2da	            0x415d	                                 pop r13	      5289	option.c	FUNCTION_16
0x400f2dc	            0x415e	                                 pop r14	      5289	option.c	FUNCTION_16
0x400f2de	            0x415f	                                 pop r15	      5289	option.c	FUNCTION_16
0x400f2e0	              0xc3	                                     ret	      5289	option.c	FUNCTION_16
0x400f2e1	      0xbf200f0000	                          mov edi, 0xf20	      9878	option.c	FUNCTION_61	CALL_1
0x400f2e6	      0xe800000000	                          call 0x400f2eb	      9878	option.c	FUNCTION_61	CALL_1
0x400f2eb	          0x4885c0	                           test rax, rax	      9880	option.c	FUNCTION_61	IF_1
0x400f2ee	      0x4889442430	             mov qword [rsp + 0x30], rax	      9878	option.c	FUNCTION_61	CALL_1
0x400f2f3	     0xf84cd010000	                            je 0x400f4c6	      9880	option.c	FUNCTION_61	IF_1
0x400f2f9	            0x31ff	                            xor edi, edi	      9885	option.c	FUNCTION_61	CALL_3
0x400f2fb	      0xba05000000	                              mov edx, 5	      9885	option.c	FUNCTION_61	CALL_3
0x400f300	      0xbe00000000	                              mov esi, 0	      9885	option.c	FUNCTION_61	CALL_3
0x400f305	      0xe800000000	                          call 0x400f30a	      9885	option.c	FUNCTION_61	CALL_3
0x400f30a	          0x4889c7	                            mov rdi, rax	      9885	option.c	FUNCTION_61	CALL_3
0x400f30d	      0xe800000000	                          call 0x400f312	      9885	option.c	FUNCTION_61	CALL_3
0x400f312	    0x8b0500000000	            mov eax, dword [0x0400f318] 	      9898	option.c	FUNCTION_61	FOR_1
0x400f318	    0xc74424280100	               mov dword [rsp + 0x28], 1	      9885	option.c	FUNCTION_61	CALL_3
0x400f320	    0xc74424380200	               mov dword [rsp + 0x38], 2	      9885	option.c	FUNCTION_61	CALL_3
0x400f328	            0x85c0	                           test eax, eax	      9898	option.c	FUNCTION_61	FOR_1
0x400f32a	     0xf858c010000	                           jne 0x400f4bc	      9898	option.c	FUNCTION_61	FOR_1
0x400f330	    0x488b05000000	            mov rax, qword [0x0400f337] 	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x400f337	            0x31db	                            xor ebx, ebx	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x400f339	    0x41bc00000000	                             mov r12d, 0	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x400f33f	          0x4885c0	                           test rax, rax	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x400f342	     0xf846c110000	                            je 0x40104b4	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x400f348	      0x4c8b6c2430	            mov r13, qword [rsp + 0x30] 	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x400f34d	        0x8b6c2428	            mov ebp, dword [rsp + 0x28] 	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x400f351	            0xeb29	                           jmp 0x400f37c	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x400f353	       0xf1f440000	                   nop dword [rax + rax]	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x400f358	          0x4585ff	                         test r15d, r15d	      9908	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5
0x400f35b	     0xf84bf020000	                            je 0x400f620	      9908	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5
0x400f361	      0x458b742420	           mov r14d, dword [r12 + 0x20] 	      9910	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	IF_6
0x400f366	          0x4585f6	                         test r14d, r14d	      9910	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	IF_6
0x400f369	     0xf8589030000	                           jne 0x400f6f8	      9910	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	IF_6
0x400f36f	        0x4983c440	                           add r12, 0x40	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x400f373	        0x498b0424	                    mov rax, qword [r12]	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x400f377	          0x4885c0	                           test rax, rax	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x400f37a	            0x7458	                            je 0x400f3d4	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x400f37c	          0x803874	                    cmp byte [rax], 0x74	     10375	option.c	FUNCTION_73
0x400f37f	            0x75d7	                           jne 0x400f358	     10375	option.c	FUNCTION_73
0x400f381	        0x8078015f	                cmp byte [rax + 1], 0x5f	     10375	option.c	FUNCTION_73
0x400f385	            0x75d1	                           jne 0x400f358	     10375	option.c	FUNCTION_73
0x400f387	          0x4585ff	                         test r15d, r15d	      9908	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5
0x400f38a	    0x41be01000000	                             mov r14d, 1	      9908	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5
0x400f390	            0x75dd	                           jne 0x400f36f	      9908	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5
0x400f392	      0x498b7c2418	            mov rdi, qword [r12 + 0x18] 	      9914	option.c	FUNCTION_61	FOR_1	FOR_2	CALL_12
0x400f397	      0x498d742420	                   lea rsi, [r12 + 0x20]	      9914	option.c	FUNCTION_61	FOR_1	FOR_2	CALL_12
0x400f39c	      0xe8af16ffff	                call sym.get_varp.isra.1	      9914	option.c	FUNCTION_61	FOR_1	FOR_2	CALL_12
0x400f3a1	          0x4885c0	                           test rax, rax	      9916	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7
0x400f3a4	            0x74c9	                            je 0x400f36f	      9916	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7
0x400f3a6	          0x4584f6	                         test r14b, r14b	      9916	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7
0x400f3a9	            0x74c4	                            je 0x400f36f	      9916	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7
0x400f3ab	    0x41f644241001	               test byte [r12 + 0x10], 1	      9920	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_8
0x400f3b1	     0xf847c020000	                            je 0x400f633	      9920	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_8
0x400f3b7	          0x83fd01	                              cmp ebp, 1	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400f3ba	            0x75b3	                           jne 0x400f36f	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400f3bc	          0x4863c3	                         movsxd rax, ebx	      9929	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400f3bf	          0x83c301	                              add ebx, 1	      9929	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400f3c2	      0x4d8964c500	            mov qword [r13 + rax*8], r12	      9929	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400f3c7	        0x4983c440	                           add r12, 0x40	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x400f3cb	        0x498b0424	                    mov rax, qword [r12]	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x400f3cf	          0x4885c0	                           test rax, rax	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x400f3d2	            0x75a8	                           jne 0x400f37c	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x400f3d4	      0x837c242801	               cmp dword [rsp + 0x28], 1	      9936	option.c	FUNCTION_61	FOR_1	IF_10
0x400f3d9	     0xf840b140000	                            je 0x40107ea	      9936	option.c	FUNCTION_61	FOR_1	IF_10
0x400f3df	            0x85db	                           test ebx, ebx	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400f3e1	     0xf84b6000000	                            je 0x400f49d	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400f3e7	            0x89dd	                            mov ebp, ebx	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400f3e9	    0x8b0500000000	            mov eax, dword [0x0400f3ef] 	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400f3ef	            0x85c0	                           test eax, eax	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400f3f1	     0xf85a6000000	                           jne 0x400f49d	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400f3f7	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400f3fc	          0x4c63e5	                         movsxd r12, ebp	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400f3ff	    0xc74424140000	               mov dword [rsp + 0x14], 0	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400f407	      0x4889442418	             mov qword [rsp + 0x18], rax	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400f40c	    0x4a8d04e50000	                        lea rax, [r12*8]	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400f414	      0x4889442408	                mov qword [rsp + 8], rax	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400f419	     0xf1f80000000	                         nop dword [rax]	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400f420	      0xbf0a000000	                            mov edi, 0xa	      9947	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	CALL_17
0x400f425	      0xe800000000	                          call 0x400f42a	      9947	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	CALL_17
0x400f42a	    0x8b0500000000	            mov eax, dword [0x0400f430] 	      9948	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	IF_12
0x400f430	            0x85c0	                           test eax, eax	      9948	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	IF_12
0x400f432	            0x7569	                           jne 0x400f49d	      9948	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	IF_12
0x400f434	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      9948	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	IF_12
0x400f438	          0x4531f6	                          xor r14d, r14d	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x400f43b	      0x4c8b6c2418	            mov r13, qword [rsp + 0x18] 	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x400f440	            0x39d8	                            cmp eax, ebx	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x400f442	        0x448d2428	                   lea r12d, [rax + rbp]	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x400f446	            0x7d2e	                           jge 0x400f476	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x400f448	     0xf1f84000000	                   nop dword [rax + rax]	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x400f450	        0x498b7d00	                    mov rdi, qword [r13]	      9954	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0x400f454	          0x4489fe	                           mov esi, r15d	      9954	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0x400f457	    0x448935000000	           mov dword [0x0400f45e], r14d 	      9953	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x400f45e	        0x4183c614	                          add r14d, 0x14	      9955	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x400f462	      0xe8192affff	                     call sym.showoneopt	      9954	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0x400f467	          0x4489e2	                           mov edx, r12d	      9954	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0x400f46a	      0x4c036c2408	                add r13, qword [rsp + 8]	      9954	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0x400f46f	          0x4101ec	                           add r12d, ebp	      9954	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0x400f472	            0x39d3	                            cmp ebx, edx	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x400f474	            0x7fda	                            jg 0x400f450	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x400f476	      0xe800000000	                          call 0x400f47b	      9957	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	CALL_19
0x400f47b	      0xe800000000	                          call 0x400f480	      9958	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	CALL_20
0x400f480	      0x8344241401	               add dword [rsp + 0x14], 1	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400f485	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400f489	            0x39e8	                            cmp eax, ebp	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400f48b	            0x7d10	                           jge 0x400f49d	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400f48d	    0x8b0500000000	            mov eax, dword [0x0400f493] 	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400f493	    0x488344241808	               add qword [rsp + 0x18], 8	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400f499	            0x85c0	                           test eax, eax	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400f49b	            0x7483	                            je 0x400f420	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400f49d	      0x837c243803	               cmp dword [rsp + 0x38], 3	      9898	option.c	FUNCTION_61	FOR_1
0x400f4a2	            0x7418	                            je 0x400f4bc	      9898	option.c	FUNCTION_61	FOR_1
0x400f4a4	    0x8b0500000000	            mov eax, dword [0x0400f4aa] 	      9898	option.c	FUNCTION_61	FOR_1
0x400f4aa	      0x8344243801	               add dword [rsp + 0x38], 1	      9898	option.c	FUNCTION_61	FOR_1
0x400f4af	      0x8344242801	               add dword [rsp + 0x28], 1	      9898	option.c	FUNCTION_61	FOR_1
0x400f4b4	            0x85c0	                           test eax, eax	      9898	option.c	FUNCTION_61	FOR_1
0x400f4b6	     0xf8474feffff	                            je 0x400f330	      9898	option.c	FUNCTION_61	FOR_1
0x400f4bc	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      9961	option.c	FUNCTION_61	CALL_21
0x400f4c1	      0xe800000000	                          call 0x400f4c6	      9961	option.c	FUNCTION_61	CALL_21
0x400f4c6	      0xe800000000	                          call 0x400f4cb	      4425	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4	CALL_11
0x400f4cb	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	      4427	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4
0x400f4d3	    0xc74424500100	               mov dword [rsp + 0x50], 1	      4426	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4
0x400f4db	        0x488d7807	                      lea rdi, [rax + 7]	      4427	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4
0x400f4df	    0x4889bc248800	             mov qword [rsp + 0x88], rdi	      4427	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4
0x400f4e7	      0xe99cfdffff	                           jmp 0x400f288	      4427	option.c	FUNCTION_16	WHILE_1	ELSE_2	IF_4
0x400f4ec	      0xbf00000000	                              mov edi, 0	      4437	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6	CALL_14
0x400f4f1	      0xb903000000	                              mov ecx, 3	      4437	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6	CALL_14
0x400f4f6	          0x4889ee	                            mov rsi, rbp	      4437	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6	CALL_14
0x400f4f9	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4437	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6	CALL_14
0x400f4fb	     0xf8595010000	                           jne 0x400f696	      4437	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6	CALL_14
0x400f501	        0x488d7d03	                      lea rdi, [rbp + 3]	      4440	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6
0x400f505	    0xc74424300200	               mov dword [rsp + 0x30], 2	      4439	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6
0x400f50d	    0x4889bc248800	             mov qword [rsp + 0x88], rdi	      4440	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6
0x400f515	         0xfb65d03	               movzx ebx, byte [rbp + 3]	      4440	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6
0x400f519	          0x80fb3c	                            cmp bl, 0x3c	      4445	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x400f51c	     0xf853dfbffff	                           jne 0x400f05f	      4445	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x400f522	         0xfb65701	               movzx edx, byte [rdi + 1]	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x400f526	          0x80fa74	                            cmp dl, 0x74	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x400f529	     0xf84ea040000	                            je 0x400fa19	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x400f52f	          0x80fa3e	                            cmp dl, 0x3e	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400f532	     0xf84580f0000	                            je 0x4010490	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400f538	            0x84d2	                             test dl, dl	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400f53a	     0xf84500f0000	                            je 0x4010490	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400f540	        0x488d4702	                      lea rax, [rdi + 2]	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400f544	    0x41bd02000000	                             mov r13d, 2	      4439	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6
0x400f54a	            0xeb0c	                           jmp 0x400f558	      4439	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6
0x400f54c	         0xf1f4000	                         nop dword [rax]	      4439	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_4	IF_6
0x400f550	          0x80fa3e	                            cmp dl, 0x3e	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400f553	            0x7418	                            je 0x400f56d	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400f555	          0x4989cd	                            mov r13, rcx	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400f558	           0xfb610	                   movzx edx, byte [rax]	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400f55b	          0x4989c0	                             mov r8, rax	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400f55e	        0x4883c001	                              add rax, 1	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400f562	          0x4589ec	                          mov r12d, r13d	      4456	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400f565	        0x498d4d01	                      lea rcx, [r13 + 1]	      4456	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400f569	            0x84d2	                             test dl, dl	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400f56b	            0x75e3	                           jne 0x400f550	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x400f56d	          0x80fa3e	                            cmp dl, 0x3e	      4458	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x400f570	    0x41be00000000	                             mov r14d, 0	      4460	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x400f576	     0xf850a010000	                           jne 0x400f686	      4458	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x400f57c	        0x41c60000	                        mov byte [r8], 0	      4463	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x400f580	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	      4464	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_10
0x400f588	        0x80780174	                cmp byte [rax + 1], 0x74	      4464	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_10
0x400f58c	     0xf84b70e0000	                            je 0x4010449	      4464	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_10
0x400f592	      0x458d742401	                     lea r14d, [r12 + 1]	      4466	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x400f597	      0x42c604283e	              mov byte [rax + r13], 0x3e	      4466	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x400f59c	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	      4468	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_16
0x400f5a4	        0x488d4701	                      lea rax, [rdi + 1]	      4468	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_16
0x400f5a8	    0x48898424a000	             mov qword [rsp + 0xa0], rax	      4468	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_16
0x400f5b0	        0x807f0174	                cmp byte [rdi + 1], 0x74	      9840	option.c	FUNCTION_60	IF_1
0x400f5b4	     0xf8400120000	                            je 0x40107ba	      9840	option.c	FUNCTION_60	IF_1
0x400f5ba	    0x4889bc24a000	             mov qword [rsp + 0xa0], rdi	      9844	option.c	FUNCTION_60	ELSE_1
0x400f5c2	    0x488db4249400	                   lea rsi, [rsp + 0x94]	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x400f5ca	    0x488dbc24a000	                   lea rdi, [rsp + 0xa0]	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x400f5d2	          0x4531c0	                            xor r8d, r8d	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x400f5d5	      0xb901000000	                              mov ecx, 1	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x400f5da	      0xba01000000	                              mov edx, 1	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x400f5df	    0xc78424940000	               mov dword [rsp + 0x94], 0	      9845	option.c	FUNCTION_60	ELSE_1
0x400f5ea	      0xe800000000	                          call 0x400f5ef	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x400f5ef	    0x8b9c24940000	            mov ebx, dword [rsp + 0x94] 	      9847	option.c	FUNCTION_60	ELSE_1	IF_2
0x400f5f6	            0x85c0	                           test eax, eax	      9847	option.c	FUNCTION_60	ELSE_1	IF_2
0x400f5f8	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	      9847	option.c	FUNCTION_60	ELSE_1	IF_2
0x400f600	        0x400f94c6	                                sete sil	      9847	option.c	FUNCTION_60	ELSE_1	IF_2
0x400f604	            0x85db	                           test ebx, ebx	      9847	option.c	FUNCTION_60	ELSE_1	IF_2
0x400f606	            0x7407	                            je 0x400f60f	      9847	option.c	FUNCTION_60	ELSE_1	IF_2
0x400f608	      0xbe01000000	                              mov esi, 1	      9847	option.c	FUNCTION_60	ELSE_1	IF_2
0x400f60d	            0x31c0	                            xor eax, eax	      9848	option.c	FUNCTION_60	ELSE_1	IF_2
0x400f60f	          0x4d63e6	                        movsxd r12, r14d	      9848	option.c	FUNCTION_60	ELSE_1	IF_2
0x400f612	    0x48c7c3ffffff	             mov rbx, 0xffffffffffffffff	      9848	option.c	FUNCTION_60	ELSE_1	IF_2
0x400f619	      0xe9bbfaffff	                           jmp 0x400f0d9	      9848	option.c	FUNCTION_60	ELSE_1	IF_2
0x400f61e	            0x6690	                                     nop	      9848	option.c	FUNCTION_60	ELSE_1	IF_2
0x400f620	          0x4531f6	                          xor r14d, r14d	      9908	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5
0x400f623	      0xe96afdffff	                           jmp 0x400f392	      9908	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5
0x400f628	    0x41be01000000	                             mov r14d, 1	      9908	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5
0x400f62e	      0xe991f8ffff	                           jmp 0x400eec4	      9908	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5
0x400f633	            0x31f6	                            xor esi, esi	      9924	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_14
0x400f635	          0x4c89e7	                            mov rdi, r12	      9924	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_14
0x400f638	      0xe8d326ffff	            call sym.option_value2string	      9924	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_14
0x400f63d	        0x498b3c24	                    mov rdi, qword [r12]	      9925	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0x400f641	      0xe800000000	                          call 0x400f646	      9925	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0x400f646	    0x488b3d000000	            mov rdi, qword [0x0400f64d] 	      9925	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0x400f64d	          0x4989c6	                            mov r14, rax	      9925	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0x400f650	      0xe800000000	                          call 0x400f655	      9925	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0x400f655	      0x428d443001	                lea eax, [rax + r14 + 1]	      9925	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0x400f65a	          0x83f811	                           cmp eax, 0x11	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400f65d	            0x7f09	                            jg 0x400f668	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400f65f	          0x83fd01	                              cmp ebp, 1	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400f662	     0xf8454fdffff	                            je 0x400f3bc	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400f668	          0x83f811	                           cmp eax, 0x11	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400f66b	     0xf8efefcffff	                           jle 0x400f36f	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400f671	          0x83fd02	                              cmp ebp, 2	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400f674	     0xf8442fdffff	                            je 0x400f3bc	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400f67a	      0xe9f0fcffff	                           jmp 0x400f36f	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400f67f	              0x90	                                     nop	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400f680	    0x41be00000000	                             mov r14d, 0	      4521	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_18	CALL_21
0x400f686	    0xc78424900000	               mov dword [rsp + 0x90], 0	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x400f691	      0xe942fbffff	                           jmp 0x400f1d8	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x400f696	          0x4889ef	                            mov rdi, rbp	      5240	option.c	FUNCTION_16	WHILE_1	ELSE_3	FOR_4
0x400f699	    0xc74424300100	               mov dword [rsp + 0x30], 1	      4431	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400f6a1	      0xe9b0f9ffff	                           jmp 0x400f056	      4431	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400f6a6	          0x4489fe	                           mov esi, r15d	      9924	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_14
0x400f6a9	          0x4889ef	                            mov rdi, rbp	      9924	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_14
0x400f6ac	      0xe85f26ffff	            call sym.option_value2string	      9924	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_14
0x400f6b1	        0x488b7d00	                    mov rdi, qword [rbp]	      9925	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0x400f6b5	      0xe800000000	                          call 0x400f6ba	      9925	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0x400f6ba	    0x488b3d000000	            mov rdi, qword [0x0400f6c1] 	      9925	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0x400f6c1	          0x4989c6	                            mov r14, rax	      9925	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0x400f6c4	      0xe800000000	                          call 0x400f6c9	      9925	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0x400f6c9	      0x428d443001	                lea eax, [rax + r14 + 1]	      9925	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0x400f6ce	          0x83f811	                           cmp eax, 0x11	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400f6d1	            0x7f0a	                            jg 0x400f6dd	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400f6d3	        0x4183fc01	                             cmp r12d, 1	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400f6d7	     0xf840ef8ffff	                            je 0x400eeeb	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400f6dd	          0x83f811	                           cmp eax, 0x11	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400f6e0	     0xf8ebef7ffff	                           jle 0x400eea4	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400f6e6	        0x4183fc02	                             cmp r12d, 2	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400f6ea	     0xf84fbf7ffff	                            je 0x400eeeb	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400f6f0	      0xe9aff7ffff	                           jmp 0x400eea4	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400f6f5	           0xf1f00	                         nop dword [rax]	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x400f6f8	          0x4489fe	                           mov esi, r15d	      9911	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	CALL_11
0x400f6fb	          0x4c89e7	                            mov rdi, r12	      9911	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	CALL_11
0x400f6fe	      0xe87d22ffff	                 call sym.get_varp_scope	      9911	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	CALL_11
0x400f703	      0xe967fcffff	                           jmp 0x400f36f	      9911	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	CALL_11
0x400f708	          0x4489fe	                           mov esi, r15d	      9911	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	CALL_11
0x400f70b	          0x4889ef	                            mov rdi, rbp	      9911	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	CALL_11
0x400f70e	    0x41be01000000	                             mov r14d, 1	      9911	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	CALL_11
0x400f714	      0xe86722ffff	                 call sym.get_varp_scope	      9911	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	CALL_11
0x400f719	      0xe9b3f7ffff	                           jmp 0x400eed1	      9911	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	CALL_11
0x400f71e	            0x85c0	                           test eax, eax	      4544	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22
0x400f720	     0xf8820060000	                            js 0x400fd46	      4544	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22
0x400f726	    0xc68424b00000	            mov byte [rsp + 0xb0], 0xf2 	      4551	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	ELSE_11
0x400f72e	    0x888424b10000	               mov byte [rsp + 0xb1], al	      4552	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	ELSE_11
0x400f735	        0x8b442464	            mov eax, dword [rsp + 0x64] 	      4558	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x400f739	            0x85c0	                           test eax, eax	      4558	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x400f73b	     0xf8582faffff	                           jne 0x400f1c3	      4558	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x400f741	    0x48c744240804	                  mov qword [rsp + 8], 4	      4558	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_23
0x400f74a	       0xfb674247f	           movzx esi, byte [rsp + 0x7f] 	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400f74f	            0x89d8	                            mov eax, ebx	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400f751	            0xf7d0	                                 not eax	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400f753	          0xc1e81f	                           shr eax, 0x1f	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400f756	          0x4020c6	                             and sil, al	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400f759	      0x4088742458	              mov byte [rsp + 0x58], sil	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400f75e	     0xf842c040000	                            je 0x400fb90	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400f764	          0x4863c3	                         movsxd rax, ebx	      4564	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400f767	        0x48c1e006	                              shl rax, 6	      4564	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400f76b	    0x4883b8000000	     cmp qword [rax], 0xffffffffffffffff	      4564	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400f773	     0xf8442faffff	                            je 0x400f1bb	      4564	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400f779	      0x448b4c2454	            mov r9d, dword [rsp + 0x54] 	      4568	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25
0x400f77e	          0x4585c9	                           test r9d, r9d	      4568	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25
0x400f781	            0x744c	                            je 0x400f7cf	      4568	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25
0x400f783	    0x48f744240800	        test qword [rsp + 8], 0x2080000 	      4570	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_26
0x400f78c	     0xf85960c0000	                           jne 0x4010428	      4570	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_26
0x400f792	    0x488b05000000	            mov rax, qword [0x0400f799] 	      4580	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x400f799	    0x448b80c00100	           mov r8d, dword [rax + 0x1c0] 	      4580	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x400f7a0	          0x4585c0	                           test r8d, r8d	      4580	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x400f7a3	            0x742a	                            je 0x400f7cf	      4580	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x400f7a5	      0x807c245800	                cmp byte [rsp + 0x58], 0	      4580	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x400f7aa	            0x7423	                            je 0x400f7cf	      4580	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x400f7ac	          0x4863c3	                         movsxd rax, ebx	      4583	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x400f7af	        0x48c1e006	                              shl rax, 6	      4583	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x400f7b3	    0x8b8000000000	                    mov eax, dword [rax]	      4583	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x400f7b9	      0x3d0e200000	                         cmp eax, 0x200e	      4581	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x400f7be	     0xf84f7f9ffff	                            je 0x400f1bb	      4581	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x400f7c4	      0x3d24200000	                         cmp eax, 0x2024	      4581	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x400f7c9	     0xf84ecf9ffff	                            je 0x400f1bb	      4581	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_27
0x400f7cf	    0x8b3d00000000	            mov edi, dword [0x0400f7d5] 	      4592	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28
0x400f7d5	            0x85ff	                           test edi, edi	      4592	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28
0x400f7d7	            0x740f	                            je 0x400f7e8	      4592	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28
0x400f7d9	    0x48f744240800	          test qword [rsp + 8], 0x80000 	      4592	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28
0x400f7e2	     0xf8560090000	                           jne 0x4010148	      4592	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28
0x400f7e8	           0xfb6c1	                           movzx eax, cl	      4490	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400f7eb	          0x4489ee	                           mov esi, r13d	      4599	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	CALL_29
0x400f7ee	      0xbf00000000	                              mov edi, 0	      4599	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	CALL_29
0x400f7f3	          0x4189c6	                           mov r14d, eax	      4490	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400f7f6	      0xe800000000	                          call 0x400f7fb	      4599	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	CALL_29
0x400f7fb	          0x4885c0	                           test rax, rax	      4599	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	CALL_29
0x400f7fe	            0x744d	                            je 0x400f84d	      4599	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	CALL_29
0x400f800	          0x4d89e1	                             mov r9, r12	      4601	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29
0x400f803	    0x4c038c248800	              add r9, qword [rsp + 0x88]	      4601	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29
0x400f80b	    0x8b0500000000	            mov eax, dword [0x0400f811] 	      4602	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29
0x400f811	        0x4183fd26	                          cmp r13d, 0x26	      4603	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30
0x400f815	        0x89442460	             mov dword [rsp + 0x60], eax	      4602	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29
0x400f819	    0x4c898c248800	              mov qword [rsp + 0x88], r9	      4601	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29
0x400f821	     0xf843b050000	                            je 0x400fd62	      4603	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30
0x400f827	          0x4489ee	                           mov esi, r13d	      4616	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_30
0x400f82a	      0xbf00000000	                              mov edi, 0	      4616	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_30
0x400f82f	      0xe800000000	                          call 0x400f834	      4616	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_30
0x400f834	          0x4885c0	                           test rax, rax	      4616	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_30
0x400f837	            0x7414	                            je 0x400f84d	      4616	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_30
0x400f839	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x400f841	         0xfb64701	               movzx eax, byte [rdi + 1]	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x400f845	            0xa8df	                           test al, 0xdf	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x400f847	            0x7404	                            je 0x400f84d	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x400f849	            0x3c09	                               cmp al, 9	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x400f84b	            0x756b	                           jne 0x400f8b8	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x400f84d	        0x4183fd3f	                          cmp r13d, 0x3f	      4628	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33
0x400f851	     0xf84d00c0000	                            je 0x4010527	      4628	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33
0x400f857	      0x837c243001	               cmp dword [rsp + 0x30], 1	      4629	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33
0x400f85c	     0xf8442050000	                            je 0x400fda4	      4629	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33
0x400f862	      0xf644240801	                  test byte [rsp + 8], 1	      4680	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42
0x400f867	            0x745a	                            je 0x400f8c3	      4680	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42
0x400f869	        0x4183fd3d	                          cmp r13d, 0x3d	      4682	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_43
0x400f86d	            0x7461	                            je 0x400f8d0	      4682	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_43
0x400f86f	        0x4183fd3a	                          cmp r13d, 0x3a	      4682	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_43
0x400f873	            0x745b	                            je 0x400f8d0	      4682	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_43
0x400f875	        0x4183fd21	                          cmp r13d, 0x21	      4693	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_44
0x400f879	     0xf84e20d0000	                            je 0x4010661	      4693	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	IF_44
0x400f87f	        0x4183fd26	                          cmp r13d, 0x26	      4695	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x400f883	     0xf84f50e0000	                            je 0x401077e	      4695	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x400f889	        0x4183fd3c	                          cmp r13d, 0x3c	      4699	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46
0x400f88d	     0xf84a71c0000	                            je 0x401153a	      4699	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46
0x400f893	          0x4585ed	                         test r13d, r13d	      4715	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48	CALL_44
0x400f896	     0xf847b0d0000	                            je 0x4010617	      4715	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48	CALL_44
0x400f89c	        0x4183fe20	                          cmp r14d, 0x20	      4715	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48	CALL_44
0x400f8a0	     0xf84710d0000	                            je 0x4010617	      4715	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48	CALL_44
0x400f8a6	        0x4183fe09	                             cmp r14d, 9	      4715	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48	CALL_44
0x400f8aa	     0xf84670d0000	                            je 0x4010617	      4715	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48	CALL_44
0x400f8b0	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	      4715	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48	CALL_44
0x400f8b8	    0x41be00000000	                             mov r14d, 0	      4717	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48
0x400f8be	      0xe9c3fdffff	                           jmp 0x400f686	      4717	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48
0x400f8c3	          0x4489ee	                           mov esi, r13d	      4731	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50	CALL_46
0x400f8c6	      0xbf00000000	                              mov edi, 0	      4731	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50	CALL_46
0x400f8cb	      0xe800000000	                          call 0x400f8d0	      4731	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50	CALL_46
0x400f8d0	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	      4731	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50	CALL_46
0x400f8d8	    0x41be00000000	                             mov r14d, 0	      4776	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	IF_56
0x400f8de	      0xe9a3fdffff	                           jmp 0x400f686	      4776	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	IF_56
0x400f8e3	        0x4180fd2b	                          cmp r13b, 0x2b	      4501	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	IF_15
0x400f8e7	     0xf84ac020000	                            je 0x400fb99	      4501	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	IF_15
0x400f8ed	        0x4180fd5e	                          cmp r13b, 0x5e	      4506	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_8	IF_16
0x400f8f1	     0xf840e040000	                            je 0x400fd05	      4506	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_8	IF_16
0x400f8f7	        0x4180fd2d	                          cmp r13b, 0x2d	      4511	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_9	IF_17
0x400f8fb	     0xf8525f8ffff	                           jne 0x400f126	      4511	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_9	IF_17
0x400f901	        0x458d4e01	                      lea r9d, [r14 + 1]	      4511	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_9	IF_17
0x400f905	    0xc74424400000	               mov dword [rsp + 0x40], 0	      4514	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_9	IF_17
0x400f90d	    0xc74424380100	               mov dword [rsp + 0x38], 1	      4514	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_9	IF_17
0x400f915	    0xc74424140000	               mov dword [rsp + 0x14], 0	      4514	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_9	IF_17
0x400f91d	    0xc74424180100	               mov dword [rsp + 0x18], 1	      4513	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_9	IF_17
0x400f925	          0x4d63e1	                         movsxd r12, r9d	      4513	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_9	IF_17
0x400f928	    0xc74424480000	               mov dword [rsp + 0x48], 0	      4497	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400f930	    0xc74424280000	               mov dword [rsp + 0x28], 0	      4496	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400f938	      0x460fb62c27	            movzx r13d, byte [rdi + r12]	      4496	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400f93d	      0xe914f8ffff	                           jmp 0x400f156	      4496	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400f942	    0x4889bc24a800	             mov qword [rsp + 0xa8], rdi	      4496	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400f94a	          0x803f74	                    cmp byte [rdi], 0x74	      9840	option.c	FUNCTION_60	IF_1
0x400f94d	            0x750a	                           jne 0x400f959	      9840	option.c	FUNCTION_60	IF_1
0x400f94f	        0x807f015f	                cmp byte [rdi + 1], 0x5f	      9840	option.c	FUNCTION_60	IF_1
0x400f953	     0xf84250d0000	                            je 0x401067e	      9840	option.c	FUNCTION_60	IF_1
0x400f959	        0x4883ef01	                              sub rdi, 1	      9844	option.c	FUNCTION_60	ELSE_1
0x400f95d	    0x488db4249400	                   lea rsi, [rsp + 0x94]	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x400f965	          0x4531c0	                            xor r8d, r8d	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x400f968	    0x4889bc24a800	             mov qword [rsp + 0xa8], rdi	      9844	option.c	FUNCTION_60	ELSE_1
0x400f970	    0x488dbc24a800	                   lea rdi, [rsp + 0xa8]	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x400f978	      0xb901000000	                              mov ecx, 1	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x400f97d	      0xba01000000	                              mov edx, 1	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x400f982	    0xc78424940000	               mov dword [rsp + 0x94], 0	      9845	option.c	FUNCTION_60	ELSE_1
0x400f98d	      0xe800000000	                          call 0x400f992	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x400f992	    0x448b9c249400	           mov r11d, dword [rsp + 0x94] 	      9847	option.c	FUNCTION_60	ELSE_1	IF_2
0x400f99a	            0x85c0	                           test eax, eax	      9847	option.c	FUNCTION_60	ELSE_1	IF_2
0x400f99c	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	      9847	option.c	FUNCTION_60	ELSE_1	IF_2
0x400f9a4	        0x400f94c6	                                sete sil	      9847	option.c	FUNCTION_60	ELSE_1	IF_2
0x400f9a8	          0x4585db	                         test r11d, r11d	      9847	option.c	FUNCTION_60	ELSE_1	IF_2
0x400f9ab	     0xf8428f7ffff	                            je 0x400f0d9	      9847	option.c	FUNCTION_60	ELSE_1	IF_2
0x400f9b1	      0xbe01000000	                              mov esi, 1	      9847	option.c	FUNCTION_60	ELSE_1	IF_2
0x400f9b6	            0x31c0	                            xor eax, eax	      9848	option.c	FUNCTION_60	ELSE_1	IF_2
0x400f9b8	      0xe91cf7ffff	                           jmp 0x400f0d9	      9848	option.c	FUNCTION_60	ELSE_1	IF_2
0x400f9bd	      0x837c242801	               cmp dword [rsp + 0x28], 1	      9936	option.c	FUNCTION_61	FOR_1	IF_10
0x400f9c2	     0xf8505f6ffff	                           jne 0x400efcd	      9936	option.c	FUNCTION_61	FOR_1	IF_10
0x400f9c8	    0x488b0d000000	            mov rcx, qword [0x0400f9cf] 	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x400f9cf	    0x48b867666666	          movabs rax, 0x6666666666666667	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x400f9d9	          0x48f7e9	                                imul rcx	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x400f9dc	        0x48c1f93f	                           sar rcx, 0x3f	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x400f9e0	          0x4889d0	                            mov rax, rdx	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x400f9e3	        0x48c1f803	                              sar rax, 3	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x400f9e7	          0x4829c8	                            sub rax, rcx	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x400f9ea	            0x85c0	                           test eax, eax	      9939	option.c	FUNCTION_61	FOR_1	IF_10	IF_11
0x400f9ec	            0x89c1	                            mov ecx, eax	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x400f9ee	            0x7411	                            je 0x400fa01	      9939	option.c	FUNCTION_61	FOR_1	IF_10	IF_11
0x400f9f0	        0x8d4419ff	                lea eax, [rcx + rbx - 1]	      9941	option.c	FUNCTION_61	FOR_1	IF_10
0x400f9f4	              0x99	                                     cdq	      9941	option.c	FUNCTION_61	FOR_1	IF_10
0x400f9f5	            0xf7f9	                                idiv ecx	      9941	option.c	FUNCTION_61	FOR_1	IF_10
0x400f9f7	            0x85c0	                           test eax, eax	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400f9f9	            0x89c5	                            mov ebp, eax	      9941	option.c	FUNCTION_61	FOR_1	IF_10
0x400f9fb	     0xf8f17f5ffff	                            jg 0x400ef18	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400fa01	      0x8344243801	               add dword [rsp + 0x38], 1	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400fa06	      0x8344242801	               add dword [rsp + 0x28], 1	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400fa0b	      0xe94ff4ffff	                           jmp 0x400ee5f	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x400fa10	        0x440fb6e9	                          movzx r13d, cl	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x400fa14	      0xe9fcf6ffff	                           jmp 0x400f115	      4493	option.c	FUNCTION_16	WHILE_1	ELSE_3	WHILE_4	CALL_20
0x400fa19	        0x807f025f	                cmp byte [rdi + 2], 0x5f	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x400fa1d	     0xf851dfbffff	                           jne 0x400f540	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x400fa23	        0x807f0300	                   cmp byte [rdi + 3], 0	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x400fa27	     0xf8413fbffff	                            je 0x400f540	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x400fa2d	        0x807f0400	                   cmp byte [rdi + 4], 0	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x400fa31	     0xf8409fbffff	                            je 0x400f540	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x400fa37	         0xfb65705	               movzx edx, byte [rdi + 5]	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x400fa3b	        0x4c8d4705	                       lea r8, [rdi + 5]	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x400fa3f	    0x41bd05000000	                             mov r13d, 5	      4450	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x400fa45	    0x41bc05000000	                             mov r12d, 5	      4451	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_8
0x400fa4b	    0x41be00000000	                             mov r14d, 0	      4460	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x400fa51	          0x80fa3e	                            cmp dl, 0x3e	      4458	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x400fa54	     0xf852cfcffff	                           jne 0x400f686	      4458	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x400fa5a	      0xe91dfbffff	                           jmp 0x400f57c	      4458	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x400fa5f	              0x90	                                     nop	      4458	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x400fa60	        0x4883c504	                              add rbp, 4	      4409	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3
0x400fa64	          0x4489fb	                           mov ebx, r15d	      4411	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3	CALL_4
0x400fa67	          0x4531e4	                          xor r12d, r12d	      3842	option.c	FUNCTION_3	FOR_1	CALL_1
0x400fa6a	    0x4889ac248800	             mov qword [rsp + 0x88], rbp	      4409	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3
0x400fa72	          0x83cb01	                               or ebx, 1	      4411	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3	CALL_4
0x400fa75	      0xbd00000000	                              mov ebp, 0	      4411	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3	CALL_4
0x400fa7a	            0xeb44	                           jmp 0x400fac0	      4411	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3	CALL_4
0x400fa7c	         0xf1f4000	                         nop dword [rax]	      4411	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3	CALL_4
0x400fa80	        0xf6451040	           test byte [rbp + 0x10], 0x40 	      3843	option.c	FUNCTION_3	FOR_1	IF_1
0x400fa84	            0x7532	                           jne 0x400fab8	      3843	option.c	FUNCTION_3	FOR_1	IF_1
0x400fa86	        0x488b4518	            mov rax, qword [rbp + 0x18] 	      3848	option.c	FUNCTION_3	FOR_1	IF_1
0x400fa8a	    0x483d00000000	                              cmp rax, 0	      3852	option.c	FUNCTION_3	FOR_1	IF_1
0x400fa90	           0xf95c1	                                setne cl	      3852	option.c	FUNCTION_3	FOR_1	IF_1
0x400fa93	    0x483d00000000	                              cmp rax, 0	      3852	option.c	FUNCTION_3	FOR_1	IF_1
0x400fa99	           0xf95c2	                                setne dl	      3852	option.c	FUNCTION_3	FOR_1	IF_1
0x400fa9c	            0x84d1	                             test cl, dl	      3852	option.c	FUNCTION_3	FOR_1	IF_1
0x400fa9e	            0x7418	                            je 0x400fab8	      3852	option.c	FUNCTION_3	FOR_1	IF_1
0x400faa0	    0x483d00000000	                              cmp rax, 0	      3852	option.c	FUNCTION_3	FOR_1	IF_1
0x400faa6	            0x7410	                            je 0x400fab8	      3852	option.c	FUNCTION_3	FOR_1	IF_1
0x400faa8	    0x8b1500000000	            mov edx, dword [0x0400faae] 	      3857	option.c	FUNCTION_3	FOR_1	IF_1
0x400faae	            0x89de	                            mov esi, ebx	      3857	option.c	FUNCTION_3	FOR_1	IF_1
0x400fab0	          0x4489e7	                           mov edi, r12d	      3857	option.c	FUNCTION_3	FOR_1	IF_1
0x400fab3	      0xe8884fffff	             call sym.set_option_default	      3857	option.c	FUNCTION_3	FOR_1	IF_1
0x400fab8	        0x4183c401	                             add r12d, 1	      3842	option.c	FUNCTION_3	FOR_1	CALL_1
0x400fabc	        0x4883c540	                           add rbp, 0x40	      3842	option.c	FUNCTION_3	FOR_1	CALL_1
0x400fac0	        0x488b4500	                    mov rax, qword [rbp]	      3842	option.c	FUNCTION_3	FOR_1	CALL_1
0x400fac4	          0x803874	                    cmp byte [rax], 0x74	     10375	option.c	FUNCTION_73
0x400fac7	            0x75b7	                           jne 0x400fa80	     10375	option.c	FUNCTION_73
0x400fac9	        0x8078015f	                cmp byte [rax + 1], 0x5f	     10375	option.c	FUNCTION_73
0x400facd	            0x75b1	                           jne 0x400fa80	     10375	option.c	FUNCTION_73
0x400facf	    0x488b1d000000	            mov rbx, qword [0x0400fad6] 	      3860	option.c	FUNCTION_3	CALL_3
0x400fad6	          0x4885db	                           test rbx, rbx	      3860	option.c	FUNCTION_3	CALL_3
0x400fad9	            0x742e	                            je 0x400fb09	      3860	option.c	FUNCTION_3	CALL_3
0x400fadb	    0x48391d000000	            cmp qword [0x0400fae2], rbx 	      3860	option.c	FUNCTION_3	CALL_3
0x400fae2	            0x7466	                            je 0x400fb4a	      3860	option.c	FUNCTION_3	CALL_3
0x400fae4	        0x488b6b20	            mov rbp, qword [rbx + 0x20] 	      3860	option.c	FUNCTION_3	CALL_3
0x400fae8	            0xeb12	                           jmp 0x400fafc	      3860	option.c	FUNCTION_3	CALL_3
0x400faea	    0x660f1f440000	                    nop word [rax + rax]	      3860	option.c	FUNCTION_3	CALL_3
0x400faf0	          0x4889ef	                            mov rdi, rbp	      3861	option.c	FUNCTION_3	CALL_4
0x400faf3	      0xe800000000	                          call 0x400faf8	      3861	option.c	FUNCTION_3	CALL_4
0x400faf8	        0x488b6d20	            mov rbp, qword [rbp + 0x20] 	      3860	option.c	FUNCTION_3	CALL_3
0x400fafc	          0x4885ed	                           test rbp, rbp	      3860	option.c	FUNCTION_3	CALL_3
0x400faff	            0x75ef	                           jne 0x400faf0	      3860	option.c	FUNCTION_3	CALL_3
0x400fb01	          0x488b1b	                    mov rbx, qword [rbx]	      3860	option.c	FUNCTION_3	CALL_3
0x400fb04	          0x4885db	                           test rbx, rbx	      3860	option.c	FUNCTION_3	CALL_3
0x400fb07	            0x75d2	                           jne 0x400fadb	      3860	option.c	FUNCTION_3	CALL_3
0x400fb09	    0x488b3d000000	            mov rdi, qword [0x0400fb10] 	      3863	option.c	FUNCTION_3	CALL_5
0x400fb10	      0xe800000000	                          call 0x400fb15	      3863	option.c	FUNCTION_3	CALL_5
0x400fb15	      0xe8e62cffff	                 call sym.didset_options	      4412	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3	CALL_5
0x400fb1a	      0xe800000000	                          call 0x400fb1f	      5614	option.c	FUNCTION_27	CALL_1
0x400fb1f	      0xe89c09ffff	                  call sym.check_opt_wim	      5617	option.c	FUNCTION_27	CALL_2
0x400fb24	      0xe8d725ffff	  call sym.set_chars_option.constprop.22	      5619	option.c	FUNCTION_27	CALL_3
0x400fb29	      0xe81228ffff	  call sym.set_chars_option.constprop.23	      5621	option.c	FUNCTION_27	CALL_4
0x400fb2e	      0xe8dd0cffff	         call sym.check_clipboard_option	      5625	option.c	FUNCTION_27	CALL_5
0x400fb33	      0xbf32000000	                           mov edi, 0x32	      4414	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3	CALL_7
0x400fb38	      0xe800000000	                          call 0x400fb3d	      4414	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3	CALL_7
0x400fb3d	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	      4414	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3	CALL_7
0x400fb45	      0xe93ef7ffff	                           jmp 0x400f288	      4414	option.c	FUNCTION_16	WHILE_1	IF_2	IF_3	CALL_7
0x400fb4a	    0x488b2d000000	            mov rbp, qword [0x0400fb51] 	      3860	option.c	FUNCTION_3	CALL_3
0x400fb51	            0xeba9	                           jmp 0x400fafc	      3860	option.c	FUNCTION_3	CALL_3
0x400fb53	      0xbf00000000	                              mov edi, 0	      4531	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21	CALL_22
0x400fb58	          0x4489ee	                           mov esi, r13d	      4531	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21	CALL_22
0x400fb5b	      0xe800000000	                          call 0x400fb60	      4531	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21	CALL_22
0x400fb60	          0x4885c0	                           test rax, rax	      4531	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21	CALL_22
0x400fb63	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	      4531	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21	CALL_22
0x400fb6b	     0xf8552f6ffff	                           jne 0x400f1c3	      4531	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21	CALL_22
0x400fb71	      0x41f6461001	               test byte [r14 + 0x10], 1	      4533	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21
0x400fb76	            0x740a	                            je 0x400fb82	      4533	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21
0x400fb78	        0x4183fd3f	                          cmp r13d, 0x3f	      4533	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21
0x400fb7c	     0xf8541f6ffff	                           jne 0x400f1c3	      4533	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	IF_21
0x400fb82	    0x41be00000000	                             mov r14d, 0	      4534	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	CALL_23
0x400fb88	      0xe9f9faffff	                           jmp 0x400f686	      4534	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	CALL_23
0x400fb8d	           0xf1f00	                         nop dword [rax]	      4534	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_19	IF_20	CALL_23
0x400fb90	        0x88442458	               mov byte [rsp + 0x58], al	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400fb94	      0xe9e0fbffff	                           jmp 0x400f779	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400fb99	        0x458d4e01	                      lea r9d, [r14 + 1]	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400fb9d	    0xc74424400000	               mov dword [rsp + 0x40], 0	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400fba5	    0xc74424380100	               mov dword [rsp + 0x38], 1	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400fbad	    0xc74424140100	               mov dword [rsp + 0x14], 1	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x400fbb5	    0xc74424180000	               mov dword [rsp + 0x18], 0	      4498	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400fbbd	          0x4d63e1	                         movsxd r12, r9d	      4498	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400fbc0	    0xc74424480000	               mov dword [rsp + 0x48], 0	      4497	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400fbc8	    0xc74424280100	               mov dword [rsp + 0x28], 1	      4503	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	IF_15
0x400fbd0	      0x460fb62c27	            movzx r13d, byte [rdi + r12]	      4503	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	IF_15
0x400fbd5	      0xe97cf5ffff	                           jmp 0x400f156	      4503	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	IF_15
0x400fbda	            0x31ff	                            xor edi, edi	      9891	option.c	FUNCTION_61	CALL_9
0x400fbdc	      0xbe00000000	                              mov esi, 0	      9891	option.c	FUNCTION_61	CALL_9
0x400fbe1	      0xe800000000	                          call 0x400fbe6	      9891	option.c	FUNCTION_61	CALL_9
0x400fbe6	          0x4889c7	                            mov rdi, rax	      9891	option.c	FUNCTION_61	CALL_9
0x400fbe9	      0xe800000000	                          call 0x400fbee	      9891	option.c	FUNCTION_61	CALL_9
0x400fbee	      0xe95cf2ffff	                           jmp 0x400ee4f	      9891	option.c	FUNCTION_61	CALL_9
0x400fbf3	            0x31ff	                            xor edi, edi	      9887	option.c	FUNCTION_61	ELSE_1	IF_3
0x400fbf5	      0xbe00000000	                              mov esi, 0	      9887	option.c	FUNCTION_61	ELSE_1	IF_3
0x400fbfa	      0xe800000000	                          call 0x400fbff	      9887	option.c	FUNCTION_61	ELSE_1	IF_3
0x400fbff	          0x4889c7	                            mov rdi, rax	      9887	option.c	FUNCTION_61	ELSE_1	IF_3
0x400fc02	      0xe800000000	                          call 0x400fc07	      9887	option.c	FUNCTION_61	ELSE_1	IF_3
0x400fc07	      0xe943f2ffff	                           jmp 0x400ee4f	      9887	option.c	FUNCTION_61	ELSE_1	IF_3
0x400fc0c	      0x448b542450	           mov r10d, dword [rsp + 0x50] 	      5276	option.c	FUNCTION_16	IF_120
0x400fc11	          0x4585d2	                         test r10d, r10d	      5276	option.c	FUNCTION_16	IF_120
0x400fc14	     0xf8499f6ffff	                            je 0x400f2b3	      5276	option.c	FUNCTION_16	IF_120
0x400fc1a	      0xe991070000	                           jmp 0x40103b0	      5276	option.c	FUNCTION_16	IF_120
0x400fc1f	              0x90	                                     nop	      5276	option.c	FUNCTION_16	IF_120
0x400fc20	            0x31ff	                            xor edi, edi	      5253	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_120
0x400fc22	      0xba05000000	                              mov edx, 5	      5253	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_120
0x400fc27	          0x4c89f6	                            mov rsi, r14	      5253	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_120
0x400fc2a	      0xe800000000	                          call 0x400fc2f	      5253	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_120
0x400fc2f	    0x488b3d000000	            mov rdi, qword [0x0400fc36] 	      5253	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_120
0x400fc36	      0xba00040000	                          mov edx, 0x400	      5253	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_120
0x400fc3b	          0x4889c6	                            mov rsi, rax	      5253	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_120
0x400fc3e	      0xe800000000	                          call 0x400fc43	      5253	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_120
0x400fc43	    0x488b1d000000	            mov rbx, qword [0x0400fc4a] 	      5254	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_121
0x400fc4a	          0x4889df	                            mov rdi, rbx	      5254	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_121
0x400fc4d	      0xe800000000	                          call 0x400fc52	      5254	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_121
0x400fc52	    0x488b94248800	            mov rdx, qword [rsp + 0x88] 	      5255	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x400fc5a	          0x83c002	                              add eax, 2	      5254	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_121
0x400fc5d	    0x898424900000	             mov dword [rsp + 0x90], eax	      5254	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_121
0x400fc64	            0x4898	                                    cdqe	      5255	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x400fc66	          0x4829ea	                            sub rdx, rbp	      5255	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x400fc69	          0x4801d0	                            add rax, rdx	      5255	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x400fc6c	    0x483d00040000	                          cmp rax, 0x400	      5255	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x400fc72	            0x7f63	                            jg 0x400fcd7	      5255	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x400fc74	          0x4889df	                            mov rdi, rbx	       148	string3.h	FUNCTION_147	CALL_3
0x400fc77	    0x41bc3a200000	                        mov r12d, 0x203a	       148	string3.h	FUNCTION_147	CALL_3
0x400fc7d	      0xe800000000	                          call 0x400fc82	       148	string3.h	FUNCTION_147	CALL_3
0x400fc82	          0x4801c3	                            add rbx, rax	       148	string3.h	FUNCTION_147	CALL_3
0x400fc85	          0x4889ee	                            mov rsi, rbp	        59	string3.h	FUNCTION_138	CALL_3
0x400fc88	        0x66448923	                    mov word [rbx], r12w	       148	string3.h	FUNCTION_147	CALL_3
0x400fc8c	        0xc6430200	                   mov byte [rbx + 2], 0	       148	string3.h	FUNCTION_147	CALL_3
0x400fc90	    0x4863bc249000	         movsxd rdi, dword [rsp + 0x90] 	        59	string3.h	FUNCTION_138	CALL_3
0x400fc98	    0x488b94248800	            mov rdx, qword [rsp + 0x88] 	        59	string3.h	FUNCTION_138	CALL_3
0x400fca0	    0x48033d000000	             add rdi, qword [0x0400fca7]	        59	string3.h	FUNCTION_138	CALL_3
0x400fca7	          0x4829ea	                            sub rdx, rbp	        59	string3.h	FUNCTION_138	CALL_3
0x400fcaa	      0xe800000000	                          call 0x400fcaf	        59	string3.h	FUNCTION_138	CALL_3
0x400fcaf	    0x488bb4248800	            mov rsi, qword [rsp + 0x88] 	      5260	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x400fcb7	    0x486394249000	         movsxd rdx, dword [rsp + 0x90] 	      5260	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x400fcbf	          0x4829ee	                            sub rsi, rbp	      5260	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x400fcc2	          0x4889f0	                            mov rax, rsi	      5260	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x400fcc5	    0x480305000000	             add rax, qword [0x0400fccc]	      5260	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x400fccc	        0xc6041000	                 mov byte [rax + rdx], 0	      5260	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x400fcd0	    0x488b1d000000	            mov rbx, qword [0x0400fcd7] 	      5260	option.c	FUNCTION_16	WHILE_1	IF_118	IF_119
0x400fcd7	      0xbe01040000	                          mov esi, 0x401	      5263	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_124
0x400fcdc	          0x4889df	                            mov rdi, rbx	      5263	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_124
0x400fcdf	      0xe800000000	                          call 0x400fce4	      5263	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_124
0x400fce4	    0x488b3d000000	            mov rdi, qword [0x0400fceb] 	      5266	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_125
0x400fceb	    0x830500000000	               add dword [0x0400fcf2], 1	      5265	option.c	FUNCTION_16	WHILE_1	IF_118
0x400fcf2	      0xe800000000	                          call 0x400fcf7	      5266	option.c	FUNCTION_16	WHILE_1	IF_118	CALL_125
0x400fcf7	    0x832d00000000	               sub dword [0x0400fcfe], 1	      5267	option.c	FUNCTION_16	WHILE_1	IF_118
0x400fcfe	            0x31c0	                            xor eax, eax	      5269	option.c	FUNCTION_16	WHILE_1	IF_118
0x400fd00	      0xe9b3f5ffff	                           jmp 0x400f2b8	      5269	option.c	FUNCTION_16	WHILE_1	IF_118
0x400fd05	        0x458d4e01	                      lea r9d, [r14 + 1]	      5269	option.c	FUNCTION_16	WHILE_1	IF_118
0x400fd09	    0xc74424400000	               mov dword [rsp + 0x40], 0	      5269	option.c	FUNCTION_16	WHILE_1	IF_118
0x400fd11	    0xc74424380100	               mov dword [rsp + 0x38], 1	      5269	option.c	FUNCTION_16	WHILE_1	IF_118
0x400fd19	    0xc74424140100	               mov dword [rsp + 0x14], 1	      5269	option.c	FUNCTION_16	WHILE_1	IF_118
0x400fd21	    0xc74424180000	               mov dword [rsp + 0x18], 0	      4498	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400fd29	          0x4d63e1	                         movsxd r12, r9d	      4498	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400fd2c	    0xc74424480100	               mov dword [rsp + 0x48], 1	      4508	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_14	ELSE_8	IF_16
0x400fd34	    0xc74424280000	               mov dword [rsp + 0x28], 0	      4496	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400fd3c	      0x460fb62c27	            movzx r13d, byte [rdi + r12]	      4496	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400fd41	      0xe910f4ffff	                           jmp 0x400f156	      4496	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x400fd46	            0x89c2	                            mov edx, eax	      4546	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22	CALL_25
0x400fd48	            0xf7d8	                                 neg eax	      4547	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22	CALL_26
0x400fd4a	            0xf7da	                                 neg edx	      4546	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22	CALL_25
0x400fd4c	          0xc1e808	                              shr eax, 8	      4547	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22	CALL_26
0x400fd4f	    0x889424b00000	               mov byte [rsp + 0xb0], dl	      4546	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22	CALL_25
0x400fd56	    0x888424b10000	               mov byte [rsp + 0xb1], al	      4547	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22	CALL_26
0x400fd5d	      0xe9d3f9ffff	                           jmp 0x400f735	      4547	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_10	IF_22	CALL_26
0x400fd62	      0x4180790176	                 cmp byte [r9 + 1], 0x76	      4603	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30
0x400fd67	     0xf843b090000	                            je 0x40106a8	      4603	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30
0x400fd6d	      0xbe26000000	                           mov esi, 0x26	      4616	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_30
0x400fd72	      0xbf00000000	                              mov edi, 0	      4616	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_30
0x400fd77	      0xe800000000	                          call 0x400fd7c	      4616	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_30
0x400fd7c	          0x4885c0	                           test rax, rax	      4616	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_30
0x400fd7f	     0xf84d2faffff	                            je 0x400f857	      4616	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_30
0x400fd85	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x400fd8d	         0xfb64701	               movzx eax, byte [rdi + 1]	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x400fd91	            0xa8df	                           test al, 0xdf	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x400fd93	     0xf85b0faffff	                           jne 0x400f849	      4617	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_32	CALL_31
0x400fd99	      0x837c243001	               cmp dword [rsp + 0x30], 1	      4629	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33
0x400fd9e	     0xf85befaffff	                           jne 0x400f862	      4629	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33
0x400fda4	          0x4489ee	                           mov esi, r13d	      4630	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	CALL_32
0x400fda7	      0xbf00000000	                              mov edi, 0	      4630	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	CALL_32
0x400fdac	      0xe800000000	                          call 0x400fdb1	      4630	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	CALL_32
0x400fdb1	          0x4885c0	                           test rax, rax	      4630	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	CALL_32
0x400fdb4	     0xf8462070000	                            je 0x401051c	      4630	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	CALL_32
0x400fdba	      0xf644240801	                  test byte [rsp + 8], 1	      4680	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42
0x400fdbf	     0xf85a4faffff	                           jne 0x400f869	      4680	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42
0x400fdc5	          0x4489ee	                           mov esi, r13d	      4731	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50	CALL_46
0x400fdc8	      0xbf00000000	                              mov edi, 0	      4731	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50	CALL_46
0x400fdcd	      0xe800000000	                          call 0x400fdd2	      4731	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50	CALL_46
0x400fdd2	          0x4885c0	                           test rax, rax	      4732	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50
0x400fdd5	     0xf84f5faffff	                            je 0x400f8d0	      4732	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_50
0x400fddb	      0x4c8b642408	                mov r12, qword [rsp + 8]	      4738	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51
0x400fde0	        0x4183e402	                             and r12d, 2	      4738	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51
0x400fde4	     0xf855b140000	                           jne 0x4011245	      4738	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51
0x400fdea	      0x807c245800	                cmp byte [rsp + 0x58], 0	      4807	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x400fdef	     0xf845a130000	                            je 0x401114f	      4807	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x400fdf5	      0x448b44246c	            mov r8d, dword [rsp + 0x6c] 	      4827	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x400fdfa	          0x4585c0	                           test r8d, r8d	      4827	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x400fdfd	     0xf8521130000	                           jne 0x4011124	      4827	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x400fe03	          0x4863c3	                         movsxd rax, ebx	      4828	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x400fe06	      0x4889442448	             mov qword [rsp + 0x48], rax	      4828	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x400fe0b	        0x48c1e006	                              shl rax, 6	      4828	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x400fe0f	    0x480500000000	                              add rax, 0	      4828	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x400fe15	        0xf6402110	           test byte [rax + 0x21], 0x10 	      4828	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x400fe19	     0xf84f3120000	                            je 0x4011112	      4828	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x400fe1f	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4829	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x400fe23	      0x4889442420	             mov qword [rsp + 0x20], rax	      4829	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_63
0x400fe28	          0x488b00	                    mov rax, qword [rax]	      4833	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x400fe2b	      0x4889442440	             mov qword [rsp + 0x40], rax	      4833	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x400fe30	          0x4989c4	                            mov r12, rax	      4833	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x400fe33	        0x8b7c2468	            mov edi, dword [rsp + 0x68] 	      4838	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x400fe37	            0x85ff	                           test edi, edi	      4838	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x400fe39	            0x741f	                            je 0x400fe5a	      4838	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x400fe3b	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      4839	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64	CALL_56
0x400fe40	        0x48c1e006	                              shl rax, 6	      4839	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64	CALL_56
0x400fe44	    0x488bb8000000	                    mov rdi, qword [rax]	      4839	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64	CALL_56
0x400fe4b	    0x488db0000000	                          lea rsi, [rax]	      4839	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64	CALL_56
0x400fe52	      0xe8f90bffff	                call sym.get_varp.isra.1	      4839	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64	CALL_56
0x400fe57	          0x4c8b20	                    mov r12, qword [rax]	      4839	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64	CALL_56
0x400fe5a	        0x4183fd26	                          cmp r13d, 0x26	      4844	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x400fe5e	     0xf84f80c0000	                            je 0x4010b5c	      4844	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x400fe64	        0x4183fd3c	                          cmp r13d, 0x3c	      4875	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70
0x400fe68	     0xf84440c0000	                            je 0x4010ab2	      4875	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70
0x400fe6e	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	      4883	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35
0x400fe76	    0x48817c242000	               cmp qword [rsp + 0x20], 0	      4890	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x400fe7f	        0x488d7001	                      lea rsi, [rax + 1]	      4883	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35
0x400fe83	      0x4889742430	             mov qword [rsp + 0x30], rsi	      4883	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35
0x400fe88	    0x4889b4248800	             mov qword [rsp + 0x88], rsi	      4883	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35
0x400fe90	     0xf84e20b0000	                            je 0x4010a78	      4890	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x400fe96	    0x48817c242000	               cmp qword [rsp + 0x20], 0	      4901	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72
0x400fe9f	     0xf84280b0000	                            je 0x40109cd	      4901	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72
0x400fea5	    0x48817c242000	               cmp qword [rsp + 0x20], 0	      4929	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74
0x400feae	     0xf84da090000	                            je 0x401088e	      4929	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74
0x400feb4	         0xfb65001	               movzx edx, byte [rax + 1]	      4929	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74
0x400feb8	          0x80fa3e	                            cmp dl, 0x3e	      4953	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x400febb	     0xf848a090000	                            je 0x401084b	      4953	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x400fec1	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      4953	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x400fec6	    0x48c744243000	               mov qword [rsp + 0x30], 0	      4809	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x400fecf	      0xe800000000	                          call 0x400fed4	      4966	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_77
0x400fed4	          0x4989c5	                            mov r13, rax	      4966	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_77
0x400fed7	          0x8d7801	                      lea edi, [rax + 1]	      4966	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_77
0x400feda	        0x8b442438	            mov eax, dword [rsp + 0x38] 	      4967	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_82
0x400fede	            0x85c0	                           test eax, eax	      4967	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_82
0x400fee0	            0x740d	                            je 0x400feef	      4967	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_82
0x400fee2	          0x4c89e7	                            mov rdi, r12	      4968	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_78
0x400fee5	      0xe800000000	                          call 0x400feea	      4968	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_78
0x400feea	      0x418d7c0502	                lea edi, [r13 + rax + 2]	      4968	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_78
0x400feef	      0xe800000000	                          call 0x400fef4	      4969	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_79
0x400fef4	          0x4885c0	                           test rax, rax	      4970	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_83
0x400fef7	          0x4989c5	                            mov r13, rax	      4969	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	CALL_79
0x400fefa	     0xf84a3f3ffff	                            je 0x400f2a3	      4970	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_83
0x400ff00	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	      4970	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_83
0x400ff08	          0x4989c6	                            mov r14, rax	      4970	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_83
0x400ff0b	            0xeb3c	                           jmp 0x400ff49	      4970	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_83
0x400ff0d	           0xf1f00	                         nop dword [rax]	      4970	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_83
0x400ff10	            0x3c09	                               cmp al, 9	      4982	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	CALL_80
0x400ff12	            0x743c	                            je 0x400ff50	      4982	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	CALL_80
0x400ff14	            0x3c5c	                            cmp al, 0x5c	      4984	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_84
0x400ff16	     0xf84e90d0000	                            je 0x4010d05	      4984	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_84
0x400ff1c	    0x8b0500000000	            mov eax, dword [0x0400ff22] 	      4995	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x400ff22	            0x85c0	                           test eax, eax	      4995	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x400ff24	     0xf85ff0d0000	                           jne 0x4010d29	      4995	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x400ff2a	        0x488d4701	                      lea rax, [rdi + 1]	      5005	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	ELSE_39
0x400ff2e	        0x4983c601	                              add r14, 1	      5005	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	ELSE_39
0x400ff32	    0x488984248800	             mov qword [rsp + 0x88], rax	      5005	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	ELSE_39
0x400ff3a	           0xfb607	                   movzx eax, byte [rdi]	      5005	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	ELSE_39
0x400ff3d	        0x418846ff	                  mov byte [r14 - 1], al	      5005	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	ELSE_39
0x400ff41	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	      5005	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	ELSE_39
0x400ff49	           0xfb607	                   movzx eax, byte [rdi]	      4982	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	CALL_80
0x400ff4c	            0xa8df	                           test al, 0xdf	      4982	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	CALL_80
0x400ff4e	            0x75c0	                           jne 0x400ff10	      4982	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	CALL_80
0x400ff50	        0x8b442438	            mov eax, dword [rsp + 0x38] 	      5014	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86
0x400ff54	        0x41c60600	                       mov byte [r14], 0	      5007	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39
0x400ff58	            0x85c0	                           test eax, eax	      5014	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86
0x400ff5a	     0xf8466110000	                            je 0x40110c6	      5014	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86
0x400ff60	    0x48f744240800	           test qword [rsp + 8], 0x8000 	      5015	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86
0x400ff69	            0x744e	                            je 0x400ffb9	      5015	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86
0x400ff6b	          0x4c89ee	                            mov rsi, r13	      5017	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	CALL_83
0x400ff6e	            0x89df	                            mov edi, ebx	      5017	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	CALL_83
0x400ff70	      0xe800000000	                          call 0x400ff75	      5017	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	CALL_83
0x400ff75	          0x4885c0	                           test rax, rax	      5018	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87
0x400ff78	          0x4989c6	                            mov r14, rax	      5017	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	CALL_83
0x400ff7b	            0x743c	                            je 0x400ffb9	      5018	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87
0x400ff7d	          0x4c89ef	                            mov rdi, r13	      5020	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_84
0x400ff80	      0xe800000000	                          call 0x400ff85	      5020	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_84
0x400ff85	          0x4c89f7	                            mov rdi, r14	      5021	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_85
0x400ff88	      0xe800000000	                          call 0x400ff8d	      5021	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_85
0x400ff8d	          0x4c89e7	                            mov rdi, r12	      5023	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_86
0x400ff90	          0x4989c5	                            mov r13, rax	      5021	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_85
0x400ff93	      0xe800000000	                          call 0x400ff98	      5023	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_86
0x400ff98	      0x428d7c2802	                lea edi, [rax + r13 + 2]	      5023	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_86
0x400ff9d	      0xe800000000	                          call 0x400ffa2	      5024	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_87
0x400ffa2	          0x4885c0	                           test rax, rax	      5025	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	IF_89
0x400ffa5	          0x4989c5	                            mov r13, rax	      5024	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_87
0x400ffa8	     0xf84f5f2ffff	                            je 0x400f2a3	      5025	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	IF_89
0x400ffae	          0x4c89f6	                            mov rsi, r14	       110	string3.h	FUNCTION_143	CALL_3
0x400ffb1	          0x4889c7	                            mov rdi, rax	       110	string3.h	FUNCTION_143	CALL_3
0x400ffb4	      0xe800000000	                          call 0x400ffb9	       110	string3.h	FUNCTION_143	CALL_3
0x400ffb9	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      5034	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90
0x400ffbd	    0xc78424900000	               mov dword [rsp + 0x90], 0	      5033	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35
0x400ffc8	            0x85c0	                           test eax, eax	      5034	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90
0x400ffca	            0x750f	                           jne 0x400ffdb	      5034	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90
0x400ffcc	    0x48f744240800	          test qword [rsp + 8], 0x20000 	      5034	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90
0x400ffd5	     0xf8419110000	                            je 0x40110f4	      5034	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90
0x400ffdb	          0x4c89ef	                            mov rdi, r13	      5036	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	CALL_89
0x400ffde	          0x4d89e6	                            mov r14, r12	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x400ffe1	      0xe800000000	                          call 0x400ffe6	      5036	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	CALL_89
0x400ffe6	    0x898424900000	             mov dword [rsp + 0x90], eax	      5036	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	CALL_89
0x400ffed	      0x41803c2400	                       cmp byte [r12], 0	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x400fff2	          0x4c63c0	                          movsxd r8, eax	      5036	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	CALL_89
0x400fff5	            0x7467	                            je 0x401005e	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x400fff7	    0x48f744240800	           test qword [rsp + 8], 0x8000 	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x4010000	     0xf842f0e0000	                            je 0x4010e35	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x4010006	          0x4531c9	                            xor r9d, r9d	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x4010009	      0x4d8d542401	                      lea r10, [r12 + 1]	      5052	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x401000e	            0xeb19	                           jmp 0x4010029	      5052	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x4010010	          0x4d39f2	                            cmp r10, r14	      5055	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x4010013	            0x7507	                           jne 0x401001c	      5055	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x4010015	      0x41807aff5c	                cmp byte [r10 - 1], 0x5c	      5056	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x401001a	            0x7434	                            je 0x4010050	      5056	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x401001c	        0x4983c601	                              add r14, 1	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x4010020	          0x4531c9	                            xor r9d, r9d	      5060	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	ELSE_40
0x4010023	        0x41803e00	                       cmp byte [r14], 0	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x4010027	            0x7435	                            je 0x401005e	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x4010029	          0x4d39f4	                            cmp r12, r14	      5041	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x401002c	     0xf844e0d0000	                            je 0x4010d80	      5041	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x4010032	      0x41807eff2c	                cmp byte [r14 - 1], 0x2c	      5042	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x4010037	     0xf84e00d0000	                            je 0x4010e1d	      5042	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x401003d	          0x4d39f2	                            cmp r10, r14	      5052	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x4010040	            0x73ce	                           jae 0x4010010	      5052	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x4010042	      0x41807eff5c	                cmp byte [r14 - 1], 0x5c	      5053	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x4010047	            0x75d3	                           jne 0x401001c	      5053	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x4010049	      0x41807efe2c	                cmp byte [r14 - 2], 0x2c	      5054	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x401004e	            0x74cc	                            je 0x401001c	      5054	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x4010050	        0x4983c601	                              add r14, 1	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x4010054	        0x4183c101	                              add r9d, 1	      5058	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x4010058	        0x41803e00	                       cmp byte [r14], 0	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x401005c	            0x75cb	                           jne 0x4010029	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x401005e	      0x448b442414	            mov r8d, dword [rsp + 0x14] 	      5064	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93
0x4010063	          0x4585c0	                           test r8d, r8d	      5064	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93
0x4010066	     0xf84740d0000	                            je 0x4010de0	      5064	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93
0x401006c	    0x48f744240800	           test qword [rsp + 8], 0x8000 	      5077	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x4010075	     0xf8421100000	                            je 0x401109c	      5077	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x401007b	      0x41803c2400	                       cmp byte [r12], 0	      5076	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x4010080	     0xf8416100000	                            je 0x401109c	      5076	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x4010086	      0x41807d0000	                       cmp byte [r13], 0	      5077	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x401008b	     0xf840b100000	                            je 0x401109c	      5077	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x4010091	        0x8b742428	            mov esi, dword [rsp + 0x28] 	      5078	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95
0x4010095	            0x85f6	                           test esi, esi	      5078	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95
0x4010097	     0xf84a30f0000	                            je 0x4011040	      5078	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95
0x401009d	          0x4c89e7	                            mov rdi, r12	      5080	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_92
0x40100a0	      0xe800000000	                          call 0x40100a5	      5080	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_92
0x40100a5	          0x83f801	                              cmp eax, 1	      5082	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x40100a8	    0x898424900000	             mov dword [rsp + 0x90], eax	      5080	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_92
0x40100af	     0xf8e770f0000	                           jle 0x401102c	      5082	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x40100b5	      0x488b542408	                mov rdx, qword [rsp + 8]	      5083	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x40100ba	          0x4863f0	                         movsxd rsi, eax	      5084	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x40100bd	    0x41b901000000	                              mov r9d, 1	      5084	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x40100c3	    0x41b801000000	                              mov r8d, 1	      5077	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x40100c9	    0x81e200800100	                        and edx, 0x18000	      5083	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x40100cf	    0x4881fa008001	                        cmp rdx, 0x18000	      5083	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x40100d6	     0xf84260f0000	                            je 0x4011002	      5083	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x40100dc	          0x4c89ef	                            mov rdi, r13	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_93
0x40100df	      0x4489442438	             mov dword [rsp + 0x38], r8d	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_93
0x40100e4	      0x4c894c2458	              mov qword [rsp + 0x58], r9	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_93
0x40100e9	      0x4889742428	             mov qword [rsp + 0x28], rsi	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_93
0x40100ee	      0xe800000000	                          call 0x40100f3	      5087	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_93
0x40100f3	      0x4c8b4c2458	              mov r9, qword [rsp + 0x58]	        59	string3.h	FUNCTION_138	CALL_3
0x40100f8	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	        59	string3.h	FUNCTION_138	CALL_3
0x40100fd	        0x488d5001	                      lea rdx, [rax + 1]	        59	string3.h	FUNCTION_138	CALL_3
0x4010101	          0x4c01ce	                             add rsi, r9	        59	string3.h	FUNCTION_138	CALL_3
0x4010104	      0x498d7c3500	                    lea rdi, [r13 + rsi]	        59	string3.h	FUNCTION_138	CALL_3
0x4010109	          0x4c89ee	                            mov rsi, r13	        59	string3.h	FUNCTION_138	CALL_3
0x401010c	      0xe800000000	                          call 0x4010111	        59	string3.h	FUNCTION_138	CALL_3
0x4010111	    0x486394249000	         movsxd rdx, dword [rsp + 0x90] 	        59	string3.h	FUNCTION_138	CALL_3
0x4010119	          0x4c89e6	                            mov rsi, r12	        59	string3.h	FUNCTION_138	CALL_3
0x401011c	          0x4c89ef	                            mov rdi, r13	        59	string3.h	FUNCTION_138	CALL_3
0x401011f	      0xe800000000	                          call 0x4010124	        59	string3.h	FUNCTION_138	CALL_3
0x4010124	      0x448b442438	            mov r8d, dword [rsp + 0x38] 	        59	string3.h	FUNCTION_138	CALL_3
0x4010129	          0x4585c0	                           test r8d, r8d	      5096	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_97
0x401012c	     0xf84b60c0000	                            je 0x4010de8	      5096	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_97
0x4010132	    0x486384249000	         movsxd rax, dword [rsp + 0x90] 	      5097	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_97
0x401013a	    0x41c64405002c	              mov byte [r13 + rax], 0x2c	      5097	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_97
0x4010140	      0xe9a30c0000	                           jmp 0x4010de8	      5097	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_97
0x4010145	           0xf1f00	                         nop dword [rax]	      5097	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_97
0x4010148	            0x31ff	                            xor edi, edi	      4594	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28	CALL_28
0x401014a	      0xba05000000	                              mov edx, 5	      4594	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28	CALL_28
0x401014f	      0xbe00000000	                              mov esi, 0	      4594	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28	CALL_28
0x4010154	      0xe800000000	                          call 0x4010159	      4594	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28	CALL_28
0x4010159	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	      4594	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28	CALL_28
0x4010161	          0x4989c6	                            mov r14, rax	      4594	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28	CALL_28
0x4010164	      0xe91df5ffff	                           jmp 0x400f686	      4595	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_28
0x4010169	      0xbf200f0000	                          mov edi, 0xf20	      9878	option.c	FUNCTION_61	CALL_1
0x401016e	      0xe800000000	                          call 0x4010173	      9878	option.c	FUNCTION_61	CALL_1
0x4010173	          0x4885c0	                           test rax, rax	      9880	option.c	FUNCTION_61	IF_1
0x4010176	      0x4889442428	             mov qword [rsp + 0x28], rax	      9878	option.c	FUNCTION_61	CALL_1
0x401017b	     0xf8421020000	                            je 0x40103a2	      9880	option.c	FUNCTION_61	IF_1
0x4010181	        0x41f6c702	                            test r15b, 2	      9886	option.c	FUNCTION_61	ELSE_1	IF_3
0x4010185	      0xba05000000	                              mov edx, 5	      9887	option.c	FUNCTION_61	ELSE_1	IF_3
0x401018a	     0xf85a7050000	                           jne 0x4010737	      9886	option.c	FUNCTION_61	ELSE_1	IF_3
0x4010190	        0x41f6c704	                            test r15b, 4	      9888	option.c	FUNCTION_61	ELSE_2	IF_4
0x4010194	     0xf84b6050000	                            je 0x4010750	      9888	option.c	FUNCTION_61	ELSE_2	IF_4
0x401019a	            0x31ff	                            xor edi, edi	      9889	option.c	FUNCTION_61	ELSE_2	IF_4
0x401019c	      0xbe00000000	                              mov esi, 0	      9889	option.c	FUNCTION_61	ELSE_2	IF_4
0x40101a1	      0xe800000000	                          call 0x40101a6	      9889	option.c	FUNCTION_61	ELSE_2	IF_4
0x40101a6	          0x4889c7	                            mov rdi, rax	      9889	option.c	FUNCTION_61	ELSE_2	IF_4
0x40101a9	      0xe800000000	                          call 0x40101ae	      9889	option.c	FUNCTION_61	ELSE_2	IF_4
0x40101ae	    0xc74424180100	               mov dword [rsp + 0x18], 1	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x40101b6	    0xc74424300200	               mov dword [rsp + 0x30], 2	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x40101be	    0x8b0500000000	            mov eax, dword [0x040101c4] 	      9898	option.c	FUNCTION_61	FOR_1
0x40101c4	            0x85c0	                           test eax, eax	      9898	option.c	FUNCTION_61	FOR_1
0x40101c6	     0xf85cc010000	                           jne 0x4010398	      9898	option.c	FUNCTION_61	FOR_1
0x40101cc	    0x488b05000000	            mov rax, qword [0x040101d3] 	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x40101d3	            0x31db	                            xor ebx, ebx	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x40101d5	      0xbd00000000	                              mov ebp, 0	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x40101da	          0x4885c0	                           test rax, rax	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x40101dd	            0x752a	                           jne 0x4010209	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x40101df	      0xe90d050000	                           jmp 0x40106f1	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x40101e4	         0xf1f4000	                         nop dword [rax]	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x40101e8	          0x4585ff	                         test r15d, r15d	      9908	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5
0x40101eb	            0x742c	                            je 0x4010219	      9908	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5
0x40101ed	          0x8b7d20	            mov edi, dword [rbp + 0x20] 	      9910	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	IF_6
0x40101f0	            0x85ff	                           test edi, edi	      9910	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	IF_6
0x40101f2	     0xf85f9010000	                           jne 0x40103f1	      9910	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	IF_6
0x40101f8	        0x4883c540	                           add rbp, 0x40	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x40101fc	        0x488b4500	                    mov rax, qword [rbp]	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x4010200	          0x4885c0	                           test rax, rax	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x4010203	     0xf84c9000000	                            je 0x40102d2	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x4010209	          0x803874	                    cmp byte [rax], 0x74	     10375	option.c	FUNCTION_73
0x401020c	            0x75da	                           jne 0x40101e8	     10375	option.c	FUNCTION_73
0x401020e	        0x8078015f	                cmp byte [rax + 1], 0x5f	     10375	option.c	FUNCTION_73
0x4010212	            0x75d4	                           jne 0x40101e8	     10375	option.c	FUNCTION_73
0x4010214	          0x4585ff	                         test r15d, r15d	      9908	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5
0x4010217	            0x75df	                           jne 0x40101f8	      9908	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5
0x4010219	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	      9914	option.c	FUNCTION_61	FOR_1	FOR_2	CALL_12
0x401021d	        0x488d7520	                   lea rsi, [rbp + 0x20]	      9914	option.c	FUNCTION_61	FOR_1	FOR_2	CALL_12
0x4010221	      0xe82a08ffff	                call sym.get_varp.isra.1	      9914	option.c	FUNCTION_61	FOR_1	FOR_2	CALL_12
0x4010226	          0x4885c0	                           test rax, rax	      9915	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7
0x4010229	            0x74cd	                            je 0x40101f8	      9915	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7
0x401022b	        0x488b4d10	            mov rcx, qword [rbp + 0x10] 	      9974	option.c	FUNCTION_62
0x401022f	            0x31d2	                            xor edx, edx	      9974	option.c	FUNCTION_62
0x4010231	          0xf6c504	                              test ch, 4	      9974	option.c	FUNCTION_62
0x4010234	            0x750d	                           jne 0x4010243	      9974	option.c	FUNCTION_62
0x4010236	    0x8b3500000000	            mov esi, dword [0x0401023c] 	      9974	option.c	FUNCTION_62
0x401023c	            0x31d2	                            xor edx, edx	      9974	option.c	FUNCTION_62
0x401023e	            0x85f6	                           test esi, esi	      9974	option.c	FUNCTION_62
0x4010240	           0xf94c2	                                 sete dl	      9974	option.c	FUNCTION_62
0x4010243	        0x4883c204	                              add rdx, 4	      9976	option.c	FUNCTION_62	IF_2
0x4010247	          0xf6c102	                              test cl, 2	      9975	option.c	FUNCTION_62	IF_2
0x401024a	     0xf85b1010000	                           jne 0x4010401	      9975	option.c	FUNCTION_62	IF_2
0x4010250	          0x83e101	                              and ecx, 1	      9977	option.c	FUNCTION_62	IF_3
0x4010253	     0xf8587040000	                           jne 0x40106e0	      9977	option.c	FUNCTION_62	IF_3
0x4010259	      0x488b74d508	       mov rsi, qword [rbp + rdx*8 + 8] 	      9982	option.c	FUNCTION_62	CALL_1
0x401025e	          0x488b38	                    mov rdi, qword [rax]	      9982	option.c	FUNCTION_62	CALL_1
0x4010261	      0xe800000000	                          call 0x4010266	      9982	option.c	FUNCTION_62	CALL_1
0x4010266	            0x85c0	                           test eax, eax	      9918	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	CALL_13
0x4010268	            0x748e	                            je 0x40101f8	      9918	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	CALL_13
0x401026a	          0x4489fe	                           mov esi, r15d	      9924	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_14
0x401026d	          0x4889ef	                            mov rdi, rbp	      9924	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_14
0x4010270	      0xe89b1affff	            call sym.option_value2string	      9924	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_14
0x4010275	        0x488b7d00	                    mov rdi, qword [rbp]	      9925	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0x4010279	      0xe800000000	                          call 0x401027e	      9925	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0x401027e	    0x488b3d000000	            mov rdi, qword [0x04010285] 	      9925	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0x4010285	          0x4989c4	                            mov r12, rax	      9925	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0x4010288	      0xe800000000	                          call 0x401028d	      9925	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0x401028d	      0x428d442001	                lea eax, [rax + r12 + 1]	      9925	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	ELSE_5	CALL_16
0x4010292	          0x83f811	                           cmp eax, 0x11	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x4010295	            0x7f07	                            jg 0x401029e	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x4010297	      0x837c241801	               cmp dword [rsp + 0x18], 1	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x401029c	            0x7414	                            je 0x40102b2	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x401029e	          0x83f811	                           cmp eax, 0x11	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x40102a1	     0xf8e51ffffff	                           jle 0x40101f8	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x40102a7	      0x837c241802	               cmp dword [rsp + 0x18], 2	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x40102ac	     0xf8546ffffff	                           jne 0x40101f8	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x40102b2	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      9929	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x40102b7	          0x4863c3	                         movsxd rax, ebx	      9929	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x40102ba	          0x83c301	                              add ebx, 1	      9929	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x40102bd	        0x48892cc6	            mov qword [rsi + rax*8], rbp	      9929	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x40102c1	        0x4883c540	                           add rbp, 0x40	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x40102c5	        0x488b4500	                    mov rax, qword [rbp]	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x40102c9	          0x4885c0	                           test rax, rax	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x40102cc	     0xf8537ffffff	                           jne 0x4010209	      9904	option.c	FUNCTION_61	FOR_1	FOR_2
0x40102d2	      0x837c241801	               cmp dword [rsp + 0x18], 1	      9936	option.c	FUNCTION_61	FOR_1	IF_10
0x40102d7	     0xf8414120000	                            je 0x40114f1	      9936	option.c	FUNCTION_61	FOR_1	IF_10
0x40102dd	            0x85db	                           test ebx, ebx	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x40102df	     0xf84a8000000	                            je 0x401038d	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x40102e5	            0x89dd	                            mov ebp, ebx	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x40102e7	    0x8b0500000000	            mov eax, dword [0x040102ed] 	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x40102ed	            0x85c0	                           test eax, eax	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x40102ef	     0xf8598000000	                           jne 0x401038d	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x40102f5	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x40102fa	          0x4c63e5	                         movsxd r12, ebp	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x40102fd	    0xc74424140000	               mov dword [rsp + 0x14], 0	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4010305	      0x4889442420	             mov qword [rsp + 0x20], rax	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x401030a	    0x4a8d04e50000	                        lea rax, [r12*8]	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4010312	      0x4889442408	                mov qword [rsp + 8], rax	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4010317	      0xbf0a000000	                            mov edi, 0xa	      9947	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	CALL_17
0x401031c	      0xe800000000	                          call 0x4010321	      9947	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	CALL_17
0x4010321	    0x8b0500000000	            mov eax, dword [0x04010327] 	      9948	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	IF_12
0x4010327	            0x85c0	                           test eax, eax	      9948	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	IF_12
0x4010329	            0x7562	                           jne 0x401038d	      9948	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	IF_12
0x401032b	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      9948	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	IF_12
0x401032f	          0x4531f6	                          xor r14d, r14d	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x4010332	      0x4c8b6c2420	            mov r13, qword [rsp + 0x20] 	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x4010337	            0x39c3	                            cmp ebx, eax	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x4010339	        0x448d2428	                   lea r12d, [rax + rbp]	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x401033d	            0x7e27	                           jle 0x4010366	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x401033f	              0x90	                                     nop	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x4010340	        0x498b7d00	                    mov rdi, qword [r13]	      9954	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0x4010344	          0x4489fe	                           mov esi, r15d	      9954	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0x4010347	    0x448935000000	           mov dword [0x0401034e], r14d 	      9953	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x401034e	        0x4183c614	                          add r14d, 0x14	      9955	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x4010352	      0xe8291bffff	                     call sym.showoneopt	      9954	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0x4010357	          0x4489e6	                           mov esi, r12d	      9954	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0x401035a	      0x4c036c2408	                add r13, qword [rsp + 8]	      9954	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0x401035f	          0x4101ec	                           add r12d, ebp	      9954	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4	CALL_18
0x4010362	            0x39f3	                            cmp ebx, esi	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x4010364	            0x7fda	                            jg 0x4010340	      9951	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	FOR_4
0x4010366	      0xe800000000	                          call 0x401036b	      9957	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	CALL_19
0x401036b	      0xe800000000	                          call 0x4010370	      9958	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3	CALL_20
0x4010370	      0x8344241401	               add dword [rsp + 0x14], 1	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4010375	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4010379	            0x39e8	                            cmp eax, ebp	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x401037b	            0x7d10	                           jge 0x401038d	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x401037d	    0x8b0500000000	            mov eax, dword [0x04010383] 	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4010383	    0x488344242008	               add qword [rsp + 0x20], 8	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4010389	            0x85c0	                           test eax, eax	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x401038b	            0x748a	                            je 0x4010317	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x401038d	      0x837c243003	               cmp dword [rsp + 0x30], 3	      9898	option.c	FUNCTION_61	FOR_1
0x4010392	     0xf8590030000	                           jne 0x4010728	      9898	option.c	FUNCTION_61	FOR_1
0x4010398	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	      9961	option.c	FUNCTION_61	CALL_21
0x401039d	      0xe800000000	                          call 0x40103a2	      9961	option.c	FUNCTION_61	CALL_21
0x40103a2	    0x8b0d00000000	            mov ecx, dword [0x040103a8] 	      5276	option.c	FUNCTION_16	IF_120
0x40103a8	            0x85c9	                           test ecx, ecx	      5276	option.c	FUNCTION_16	IF_120
0x40103aa	     0xf8403efffff	                            je 0x400f2b3	      5276	option.c	FUNCTION_16	IF_120
0x40103b0	      0xbf0a000000	                            mov edi, 0xa	      5281	option.c	FUNCTION_16	IF_120	CALL_127
0x40103b5	    0xc70500000000	               mov dword [0x040103bf], 0	      5279	option.c	FUNCTION_16	IF_120
0x40103bf	    0xc70500000000	               mov dword [0x040103c9], 1	      5280	option.c	FUNCTION_16	IF_120
0x40103c9	      0xe800000000	                          call 0x40103ce	      5281	option.c	FUNCTION_16	IF_120	CALL_127
0x40103ce	      0xe800000000	                          call 0x40103d3	      5282	option.c	FUNCTION_16	IF_120	CALL_128
0x40103d3	      0xe800000000	                          call 0x40103d8	      5283	option.c	FUNCTION_16	IF_120	CALL_129
0x40103d8	    0xc70500000000	               mov dword [0x040103e2], 1	      5284	option.c	FUNCTION_16	IF_120
0x40103e2	    0xc70500000000	               mov dword [0x040103ec], 0	      5285	option.c	FUNCTION_16	IF_120
0x40103ec	      0xe9c2eeffff	                           jmp 0x400f2b3	      5285	option.c	FUNCTION_16	IF_120
0x40103f1	          0x4489fe	                           mov esi, r15d	      9911	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	CALL_11
0x40103f4	          0x4889ef	                            mov rdi, rbp	      9911	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	CALL_11
0x40103f7	      0xe88415ffff	                 call sym.get_varp_scope	      9911	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	CALL_11
0x40103fc	      0xe925feffff	                           jmp 0x4010226	      9911	option.c	FUNCTION_61	FOR_1	FOR_2	IF_5	CALL_11
0x4010401	          0x488b00	                    mov rax, qword [rax]	      9918	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	CALL_13
0x4010404	      0x483944d508	       cmp qword [rbp + rdx*8 + 8], rax 	      9918	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	CALL_13
0x4010409	     0xf84e9fdffff	                            je 0x40101f8	      9918	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	CALL_13
0x401040f	          0x83e101	                              and ecx, 1	      9920	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_8
0x4010412	     0xf8452feffff	                            je 0x401026a	      9920	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_8
0x4010418	      0x837c241801	               cmp dword [rsp + 0x18], 1	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x401041d	     0xf848ffeffff	                            je 0x40102b2	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x4010423	      0xe9d0fdffff	                           jmp 0x40101f8	      9927	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	IF_9
0x4010428	            0x31ff	                            xor edi, edi	      4572	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_26	CALL_27
0x401042a	      0xba05000000	                              mov edx, 5	      4572	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_26	CALL_27
0x401042f	      0xbe00000000	                              mov esi, 0	      4572	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_26	CALL_27
0x4010434	      0xe800000000	                          call 0x4010439	      4572	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_26	CALL_27
0x4010439	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	      4572	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_26	CALL_27
0x4010441	          0x4989c6	                            mov r14, rax	      4572	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_26	CALL_27
0x4010444	      0xe93df2ffff	                           jmp 0x400f686	      4573	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_25	IF_26
0x4010449	        0x8078025f	                cmp byte [rax + 2], 0x5f	      4464	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_10
0x401044d	     0xf853ff1ffff	                           jne 0x400f592	      4464	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_10
0x4010453	        0x488d7801	                      lea rdi, [rax + 1]	      4465	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_15
0x4010457	      0x458d742401	                     lea r14d, [r12 + 1]	      4466	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x401045c	      0xe8bffefeff	                     call sym.findoption	      4465	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_15
0x4010461	          0x4863d8	                         movsxd rbx, eax	      4465	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	CALL_15
0x4010464	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	      4466	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x401046c	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      4467	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_11
0x401046f	      0x42c604283e	              mov byte [rax + r13], 0x3e	      4466	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7
0x4010474	     0xf8422f1ffff	                            je 0x400f59c	      4467	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_11
0x401047a	          0x4d63e6	                        movsxd r12, r14d	      4467	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_11
0x401047d	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	      4467	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_11
0x4010485	            0x31f6	                            xor esi, esi	      4467	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_11
0x4010487	            0x31c0	                            xor eax, eax	      4444	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x4010489	      0xe94becffff	                           jmp 0x400f0d9	      4444	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x401048e	            0x6690	                                     nop	      4444	option.c	FUNCTION_16	WHILE_1	ELSE_3
0x4010490	          0x80fa3e	                            cmp dl, 0x3e	      4458	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x4010493	        0x4c8d4701	                       lea r8, [rdi + 1]	      4458	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x4010497	    0x41bd01000000	                             mov r13d, 1	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x401049d	    0x41bc01000000	                             mov r12d, 1	      4455	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	ELSE_5	WHILE_2
0x40104a3	    0x41be00000000	                             mov r14d, 0	      4460	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x40104a9	     0xf85d7f1ffff	                           jne 0x400f686	      4458	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x40104af	      0xe9c8f0ffff	                           jmp 0x400f57c	      4458	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_7	IF_9
0x40104b4	      0x837c242801	               cmp dword [rsp + 0x28], 1	      9936	option.c	FUNCTION_61	FOR_1	IF_10
0x40104b9	     0xf85deefffff	                           jne 0x400f49d	      9936	option.c	FUNCTION_61	FOR_1	IF_10
0x40104bf	    0x488b0d000000	            mov rcx, qword [0x040104c6] 	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x40104c6	    0x48b867666666	          movabs rax, 0x6666666666666667	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x40104d0	          0x48f7e9	                                imul rcx	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x40104d3	        0x48c1f93f	                           sar rcx, 0x3f	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x40104d7	          0x4889d0	                            mov rax, rdx	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x40104da	        0x48c1f803	                              sar rax, 3	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x40104de	          0x4829c8	                            sub rax, rcx	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x40104e1	            0x85c0	                           test eax, eax	      9939	option.c	FUNCTION_61	FOR_1	IF_10	IF_11
0x40104e3	            0x89c1	                            mov ecx, eax	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x40104e5	     0xf84b9efffff	                            je 0x400f4a4	      9939	option.c	FUNCTION_61	FOR_1	IF_10	IF_11
0x40104eb	        0x8d4419ff	                lea eax, [rcx + rbx - 1]	      9941	option.c	FUNCTION_61	FOR_1	IF_10
0x40104ef	              0x99	                                     cdq	      9941	option.c	FUNCTION_61	FOR_1	IF_10
0x40104f0	            0xf7f9	                                idiv ecx	      9941	option.c	FUNCTION_61	FOR_1	IF_10
0x40104f2	            0x85c0	                           test eax, eax	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x40104f4	            0x89c5	                            mov ebp, eax	      9941	option.c	FUNCTION_61	FOR_1	IF_10
0x40104f6	     0xf8fedeeffff	                            jg 0x400f3e9	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x40104fc	      0xe9a3efffff	                           jmp 0x400f4a4	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4010501	     0xf1f80000000	                         nop dword [rax]	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4010508	        0x41f6c720	                         test r15b, 0x20	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x401050c	     0xf85a9ecffff	                           jne 0x400f1bb	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x4010512	      0xc644245801	                mov byte [rsp + 0x58], 1	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x4010517	      0xe95df2ffff	                           jmp 0x400f779	      4563	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_24
0x401051c	      0xf644240801	                  test byte [rsp + 8], 1	      4631	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33
0x4010521	     0xf8542f3ffff	                           jne 0x400f869	      4631	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33
0x4010527	        0x8b742450	            mov esi, dword [rsp + 0x50] 	      4636	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_34
0x401052b	            0x85f6	                           test esi, esi	      4636	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_34
0x401052d	     0xf84d5000000	                            je 0x4010608	      4636	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_34
0x4010533	      0xbf0a000000	                            mov edi, 0xa	      4637	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	CALL_33
0x4010538	      0xe800000000	                          call 0x401053d	      4637	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	CALL_33
0x401053d	      0x807c245800	                cmp byte [rsp + 0x58], 0	      4643	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35
0x4010542	            0x747e	                            je 0x40105c2	      4643	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35
0x4010544	        0x48c1e306	                              shl rbx, 6	      4645	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	CALL_35
0x4010548	          0x4489fe	                           mov esi, r15d	      4645	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	CALL_35
0x401054b	    0x4881c3000000	                              add rbx, 0	      4645	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	CALL_35
0x4010552	          0x4889df	                            mov rdi, rbx	      4645	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	CALL_35
0x4010555	      0xe82619ffff	                     call sym.showoneopt	      4645	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	CALL_35
0x401055a	    0x48833d000000	               cmp qword [0x04010562], 0	      4647	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36
0x4010562	            0x7e24	                           jle 0x4010588	      4647	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36
0x4010564	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4650	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	IF_37
0x4010569	        0x48394318	            cmp qword [rbx + 0x18], rax 	      4650	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	IF_37
0x401056d	     0xf84710f0000	                            je 0x40114e4	      4650	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	IF_37
0x4010573	          0x8b4320	            mov eax, dword [rbx + 0x20] 	      4652	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38
0x4010576	          0xf6c420	                           test ah, 0x20	      4652	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38
0x4010579	     0xf85480f0000	                           jne 0x40114c7	      4652	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38
0x401057f	          0xf6c440	                           test ah, 0x40	      4655	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39
0x4010582	     0xf85220f0000	                           jne 0x40114aa	      4655	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39
0x4010588	        0x4183fd3f	                          cmp r13d, 0x3f	      4674	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41
0x401058c	            0x7465	                            je 0x40105f3	      4674	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41
0x401058e	          0x4585ed	                         test r13d, r13d	      4674	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41
0x4010591	            0x7460	                            je 0x40105f3	      4674	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41
0x4010593	        0x4183fe20	                          cmp r14d, 0x20	      4675	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41	CALL_42
0x4010597	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	      4675	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41	CALL_42
0x401059f	    0xc74424500100	               mov dword [rsp + 0x50], 1	      4675	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41	CALL_42
0x40105a7	     0xf8416ecffff	                            je 0x400f1c3	      4675	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41	CALL_42
0x40105ad	        0x4183fe09	                             cmp r14d, 9	      4675	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41	CALL_42
0x40105b1	     0xf840cecffff	                            je 0x400f1c3	      4675	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41	CALL_42
0x40105b7	    0x41be00000000	                             mov r14d, 0	      4717	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48
0x40105bd	      0xe9c4f0ffff	                           jmp 0x400f686	      4717	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_48
0x40105c2	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	      4665	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	CALL_39
0x40105ca	      0xe800000000	                          call 0x40105cf	      4665	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	CALL_39
0x40105cf	          0x4885c0	                           test rax, rax	      4666	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	IF_40
0x40105d2	     0xf84b70e0000	                            je 0x401148f	      4666	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	IF_40
0x40105d8	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	      4672	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	CALL_41
0x40105e0	      0xba01000000	                              mov edx, 1	      4672	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	CALL_41
0x40105e5	          0x4889c6	                            mov rsi, rax	      4672	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	CALL_41
0x40105e8	      0xe800000000	                          call 0x40105ed	      4672	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	CALL_41
0x40105ed	        0x4183fd3f	                          cmp r13d, 0x3f	      4674	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41
0x40105f1	            0x759b	                           jne 0x401058e	      4674	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41
0x40105f3	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	      4674	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41
0x40105fb	    0xc74424500100	               mov dword [rsp + 0x50], 1	      4674	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41
0x4010603	      0xe9bbebffff	                           jmp 0x400f1c3	      4674	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_41
0x4010608	      0xbf01000000	                              mov edi, 1	      4640	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_13	CALL_34
0x401060d	      0xe800000000	                          call 0x4010612	      4640	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_13	CALL_34
0x4010612	      0xe926ffffff	                           jmp 0x401053d	      4640	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_13	CALL_34
0x4010617	      0x837c243002	               cmp dword [rsp + 0x30], 2	      4720	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_49
0x401061c	            0x7443	                            je 0x4010661	      4720	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_49
0x401061e	        0x8b542430	            mov edx, dword [rsp + 0x30] 	      4723	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	ELSE_23
0x4010622	          0x4863c2	                         movsxd rax, edx	      4723	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	ELSE_23
0x4010625	    0x488984249800	             mov qword [rsp + 0x98], rax	      4723	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	ELSE_23
0x401062d	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      4726	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	CALL_45
0x4010632	          0x4489f9	                           mov ecx, r15d	      4726	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	CALL_45
0x4010635	            0x89df	                            mov edi, ebx	      4726	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	CALL_45
0x4010637	      0xe804d3ffff	                call sym.set_bool_option	      4726	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	CALL_45
0x401063c	          0x4989c6	                            mov r14, rax	      4726	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	CALL_45
0x401063f	      0x807c245800	                cmp byte [rsp + 0x58], 0	      5228	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115
0x4010644	            0x740e	                            je 0x4010654	      5228	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115
0x4010646	        0x8b542440	            mov edx, dword [rsp + 0x40] 	      5229	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x401064a	          0x4489fe	                           mov esi, r15d	      5229	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x401064d	            0x89df	                            mov edi, ebx	      5229	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x401064f	      0xe85c20ffff	                 call sym.did_set_option	      5229	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x4010654	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	      5229	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x401065c	      0xe925f0ffff	                           jmp 0x400f686	      5229	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_115	CALL_116
0x4010661	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4721	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_49
0x4010666	            0x8b00	                    mov eax, dword [rax]	      4721	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_49
0x4010668	            0x89c2	                            mov edx, eax	      4721	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_49
0x401066a	        0x89442408	                mov dword [rsp + 8], eax	      4721	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_49
0x401066e	          0x83f201	                              xor edx, 1	      4721	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_49
0x4010671	          0x4863c2	                         movsxd rax, edx	      4721	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_49
0x4010674	    0x488984249800	             mov qword [rsp + 0x98], rax	      4721	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_49
0x401067c	            0xebaf	                           jmp 0x401062d	      4721	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_22	IF_49
0x401067e	         0xfb64702	               movzx eax, byte [rdi + 2]	      9840	option.c	FUNCTION_60	IF_1
0x4010682	            0x84c0	                             test al, al	      9840	option.c	FUNCTION_60	IF_1
0x4010684	     0xf84cff2ffff	                            je 0x400f959	      9840	option.c	FUNCTION_60	IF_1
0x401068a	         0xfb65703	               movzx edx, byte [rdi + 3]	      9840	option.c	FUNCTION_60	IF_1
0x401068e	            0x84d2	                             test dl, dl	      9840	option.c	FUNCTION_60	IF_1
0x4010690	     0xf84c3f2ffff	                            je 0x400f959	      9840	option.c	FUNCTION_60	IF_1
0x4010696	          0xc1e208	                              shl edx, 8	      9841	option.c	FUNCTION_60	CALL_1
0x4010699	            0x31f6	                            xor esi, esi	      9841	option.c	FUNCTION_60	CALL_1
0x401069b	             0x1d0	                            add eax, edx	      9841	option.c	FUNCTION_60	CALL_1
0x401069d	            0xf7d8	                                 neg eax	      9841	option.c	FUNCTION_60	CALL_1
0x401069f	      0xe935eaffff	                           jmp 0x400f0d9	      9841	option.c	FUNCTION_60	CALL_1
0x40106a4	         0xf1f4000	                         nop dword [rax]	      9841	option.c	FUNCTION_60	CALL_1
0x40106a8	      0x4180790269	                 cmp byte [r9 + 2], 0x69	      4603	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30
0x40106ad	     0xf85baf6ffff	                           jne 0x400fd6d	      4603	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30
0x40106b3	      0x418079036d	                 cmp byte [r9 + 3], 0x6d	      4605	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	IF_31
0x40106b8	     0xf84eb0a0000	                            je 0x40111a9	      4605	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	IF_31
0x40106be	        0x4983c102	                               add r9, 2	      4613	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	ELSE_12
0x40106c2	    0xc74424600100	               mov dword [rsp + 0x60], 1	      4612	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	ELSE_12
0x40106ca	    0x4c898c248800	              mov qword [rsp + 0x88], r9	      4613	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	ELSE_12
0x40106d2	      0xe996f6ffff	                           jmp 0x400fd6d	      4613	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	ELSE_12
0x40106d7	    0x660f1f840000	                    nop word [rax + rax]	      4613	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	ELSE_12
0x40106e0	            0x8b00	                    mov eax, dword [rax]	      9918	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	CALL_13
0x40106e2	        0x3944d508	       cmp dword [rbp + rdx*8 + 8], eax 	      9918	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	CALL_13
0x40106e6	     0xf852cfdffff	                           jne 0x4010418	      9918	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	CALL_13
0x40106ec	      0xe907fbffff	                           jmp 0x40101f8	      9918	option.c	FUNCTION_61	FOR_1	FOR_2	IF_7	CALL_13
0x40106f1	      0x837c241801	               cmp dword [rsp + 0x18], 1	      9936	option.c	FUNCTION_61	FOR_1	IF_10
0x40106f6	     0xf8591fcffff	                           jne 0x401038d	      9936	option.c	FUNCTION_61	FOR_1	IF_10
0x40106fc	    0x488b0d000000	            mov rcx, qword [0x04010703] 	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4010703	    0x48b867666666	          movabs rax, 0x6666666666666667	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x401070d	          0x48f7e9	                                imul rcx	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4010710	        0x48c1f93f	                           sar rcx, 0x3f	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4010714	          0x4889d0	                            mov rax, rdx	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4010717	        0x48c1f803	                              sar rax, 3	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x401071b	          0x4829c8	                            sub rax, rcx	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x401071e	            0x85c0	                           test eax, eax	      9939	option.c	FUNCTION_61	FOR_1	IF_10	IF_11
0x4010720	            0x89c1	                            mov ecx, eax	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4010722	     0xf85f20d0000	                           jne 0x401151a	      9939	option.c	FUNCTION_61	FOR_1	IF_10	IF_11
0x4010728	      0x8344243001	               add dword [rsp + 0x30], 1	      9939	option.c	FUNCTION_61	FOR_1	IF_10	IF_11
0x401072d	      0x8344241801	               add dword [rsp + 0x18], 1	      9939	option.c	FUNCTION_61	FOR_1	IF_10	IF_11
0x4010732	      0xe987faffff	                           jmp 0x40101be	      9939	option.c	FUNCTION_61	FOR_1	IF_10	IF_11
0x4010737	            0x31ff	                            xor edi, edi	      9887	option.c	FUNCTION_61	ELSE_1	IF_3
0x4010739	      0xbe00000000	                              mov esi, 0	      9887	option.c	FUNCTION_61	ELSE_1	IF_3
0x401073e	      0xe800000000	                          call 0x4010743	      9887	option.c	FUNCTION_61	ELSE_1	IF_3
0x4010743	          0x4889c7	                            mov rdi, rax	      9887	option.c	FUNCTION_61	ELSE_1	IF_3
0x4010746	      0xe800000000	                          call 0x401074b	      9887	option.c	FUNCTION_61	ELSE_1	IF_3
0x401074b	      0xe95efaffff	                           jmp 0x40101ae	      9887	option.c	FUNCTION_61	ELSE_1	IF_3
0x4010750	            0x31ff	                            xor edi, edi	      9891	option.c	FUNCTION_61	CALL_9
0x4010752	      0xbe00000000	                              mov esi, 0	      9891	option.c	FUNCTION_61	CALL_9
0x4010757	      0xe800000000	                          call 0x401075c	      9891	option.c	FUNCTION_61	CALL_9
0x401075c	          0x4889c7	                            mov rdi, rax	      9891	option.c	FUNCTION_61	CALL_9
0x401075f	      0xe800000000	                          call 0x4010764	      9891	option.c	FUNCTION_61	CALL_9
0x4010764	      0xe945faffff	                           jmp 0x40101ae	      9891	option.c	FUNCTION_61	CALL_9
0x4010769	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	      9891	option.c	FUNCTION_61	CALL_9
0x4010771	    0xc74424500100	               mov dword [rsp + 0x50], 1	      4419	option.c	FUNCTION_16	WHILE_1	IF_2	ELSE_1
0x4010779	      0xe90aebffff	                           jmp 0x400f288	      4419	option.c	FUNCTION_16	WHILE_1	IF_2	ELSE_1
0x401077e	      0x488b442408	                mov rax, qword [rsp + 8]	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x4010783	        0x8b4c2460	            mov ecx, dword [rsp + 0x60] 	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x4010787	            0x31d2	                            xor edx, edx	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x4010789	        0x48c1e80a	                            shr rax, 0xa	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x401078d	        0x4883f001	                              xor rax, 1	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x4010791	            0x85c9	                           test ecx, ecx	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x4010793	           0xf94c2	                                 sete dl	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x4010796	          0x4821d0	                            and rax, rdx	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x4010799	          0x4863d3	                         movsxd rdx, ebx	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x401079c	      0x488d44d004	              lea rax, [rax + rdx*8 + 4]	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x40107a1	    0x488b04c50000	                  mov rax, qword [rax*8]	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x40107a9	            0x89c2	                            mov edx, eax	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x40107ab	            0x4898	                                    cdqe	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x40107ad	    0x488984249800	             mov qword [rsp + 0x98], rax	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x40107b5	      0xe973feffff	                           jmp 0x401062d	      4696	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_19	IF_45
0x40107ba	        0x807f025f	                cmp byte [rdi + 2], 0x5f	      9840	option.c	FUNCTION_60	IF_1
0x40107be	     0xf85f6edffff	                           jne 0x400f5ba	      9840	option.c	FUNCTION_60	IF_1
0x40107c4	         0xfb64703	               movzx eax, byte [rdi + 3]	      9840	option.c	FUNCTION_60	IF_1
0x40107c8	            0x84c0	                             test al, al	      9840	option.c	FUNCTION_60	IF_1
0x40107ca	     0xf84eaedffff	                            je 0x400f5ba	      9840	option.c	FUNCTION_60	IF_1
0x40107d0	         0xfb65704	               movzx edx, byte [rdi + 4]	      9840	option.c	FUNCTION_60	IF_1
0x40107d4	            0x84d2	                             test dl, dl	      9840	option.c	FUNCTION_60	IF_1
0x40107d6	     0xf84deedffff	                            je 0x400f5ba	      9840	option.c	FUNCTION_60	IF_1
0x40107dc	          0xc1e208	                              shl edx, 8	      9841	option.c	FUNCTION_60	CALL_1
0x40107df	            0x31f6	                            xor esi, esi	      9841	option.c	FUNCTION_60	CALL_1
0x40107e1	             0x1d0	                            add eax, edx	      9841	option.c	FUNCTION_60	CALL_1
0x40107e3	            0xf7d8	                                 neg eax	      9841	option.c	FUNCTION_60	CALL_1
0x40107e5	      0xe925eeffff	                           jmp 0x400f60f	      9841	option.c	FUNCTION_60	CALL_1
0x40107ea	    0x488b35000000	            mov rsi, qword [0x040107f1] 	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x40107f1	    0x48b867666666	          movabs rax, 0x6666666666666667	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x40107fb	          0x48f7ee	                                imul rsi	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x40107fe	        0x48c1fe3f	                           sar rsi, 0x3f	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4010802	          0x4889d1	                            mov rcx, rdx	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4010805	        0x48c1f903	                              sar rcx, 3	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4010809	          0x4829f1	                            sub rcx, rsi	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x401080c	            0x85c9	                           test ecx, ecx	      9940	option.c	FUNCTION_61	FOR_1	IF_10	IF_11
0x401080e	       0xf444c2428	           cmove ecx, dword [rsp + 0x28]	      9940	option.c	FUNCTION_61	FOR_1	IF_10	IF_11
0x4010813	      0xe9d3fcffff	                           jmp 0x40104eb	      9940	option.c	FUNCTION_61	FOR_1	IF_10	IF_11
0x4010818	    0x488b35000000	            mov rsi, qword [0x0401081f] 	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x401081f	    0x48b867666666	          movabs rax, 0x6666666666666667	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4010829	          0x48f7ee	                                imul rsi	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x401082c	        0x48c1fe3f	                           sar rsi, 0x3f	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4010830	          0x4889d1	                            mov rcx, rdx	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4010833	        0x48c1f903	                              sar rcx, 3	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4010837	          0x4829f1	                            sub rcx, rsi	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x401083a	            0x85c9	                           test ecx, ecx	      9940	option.c	FUNCTION_61	FOR_1	IF_10	IF_11
0x401083c	       0xf444c2428	           cmove ecx, dword [rsp + 0x28]	      9940	option.c	FUNCTION_61	FOR_1	IF_10	IF_11
0x4010841	      0xe9aaf1ffff	                           jmp 0x400f9f0	      9940	option.c	FUNCTION_61	FOR_1	IF_10	IF_11
0x4010846	      0xe800000000	                          call 0x401084b	      5289	option.c	FUNCTION_16
0x401084b	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      4955	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x4010850	    0x4881fe000000	                              cmp rsi, 0	      4955	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x4010857	            0x741b	                            je 0x4010874	      4955	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x4010859	    0x4881fe000000	                              cmp rsi, 0	      4955	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x4010860	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      4955	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x4010865	    0x48c744243000	               mov qword [rsp + 0x30], 0	      4809	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x401086e	     0xf855bf6ffff	                           jne 0x400fecf	      4955	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x4010874	        0x488d7802	                      lea rdi, [rax + 2]	      4957	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x4010878	    0x48c744243000	               mov qword [rsp + 0x30], 0	      4809	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x4010881	    0x4889bc248800	             mov qword [rsp + 0x88], rdi	      4957	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x4010889	      0xe941f6ffff	                           jmp 0x400fecf	      4957	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_38	IF_81
0x401088e	         0xfb64801	               movzx ecx, byte [rax + 1]	      4930	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_69
0x4010892	            0x89ca	                            mov edx, ecx	      4930	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_69
0x4010894	          0x83e930	                           sub ecx, 0x30	      4930	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_69
0x4010897	          0x83f909	                              cmp ecx, 9	      4930	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_69
0x401089a	     0xf8718f6ffff	                            ja 0x400feb8	      4930	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_69
0x40108a0	    0x488dbc248800	                   lea rdi, [rsp + 0x88]	      4933	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_70
0x40108a8	    0xc68424d00000	                mov byte [rsp + 0xd0], 0	      4932	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74
0x40108b0	      0xe800000000	                          call 0x40108b5	      4933	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_70
0x40108b5	            0xa801	                              test al, 1	      4934	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_75
0x40108b7	          0x4989c5	                            mov r13, rax	      4933	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_70
0x40108ba	    0x898424900000	             mov dword [rsp + 0x90], eax	      4933	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_70
0x40108c1	            0x7417	                            je 0x40108da	      4934	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_75
0x40108c3	    0x488dbc24d000	                   lea rdi, [rsp + 0xd0]	       148	string3.h	FUNCTION_147	CALL_3
0x40108cb	      0xba50000000	                           mov edx, 0x50	       148	string3.h	FUNCTION_147	CALL_3
0x40108d0	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_147	CALL_3
0x40108d5	      0xe800000000	                          call 0x40108da	       148	string3.h	FUNCTION_147	CALL_3
0x40108da	        0x41f6c502	                            test r13b, 2	      4936	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_76
0x40108de	            0x7417	                            je 0x40108f7	      4936	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_76
0x40108e0	    0x488dbc24d000	                   lea rdi, [rsp + 0xd0]	       148	string3.h	FUNCTION_147	CALL_3
0x40108e8	      0xba50000000	                           mov edx, 0x50	       148	string3.h	FUNCTION_147	CALL_3
0x40108ed	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_147	CALL_3
0x40108f2	      0xe800000000	                          call 0x40108f7	       148	string3.h	FUNCTION_147	CALL_3
0x40108f7	        0x41f6c504	                            test r13b, 4	      4938	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_77
0x40108fb	            0x7417	                            je 0x4010914	      4938	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_77
0x40108fd	    0x488dbc24d000	                   lea rdi, [rsp + 0xd0]	       148	string3.h	FUNCTION_147	CALL_3
0x4010905	      0xba50000000	                           mov edx, 0x50	       148	string3.h	FUNCTION_147	CALL_3
0x401090a	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_147	CALL_3
0x401090f	      0xe800000000	                          call 0x4010914	       148	string3.h	FUNCTION_147	CALL_3
0x4010914	        0x41f6c508	                            test r13b, 8	      4940	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_78
0x4010918	            0x7417	                            je 0x4010931	      4940	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_78
0x401091a	    0x488dbc24d000	                   lea rdi, [rsp + 0xd0]	       148	string3.h	FUNCTION_147	CALL_3
0x4010922	      0xba50000000	                           mov edx, 0x50	       148	string3.h	FUNCTION_147	CALL_3
0x4010927	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_147	CALL_3
0x401092c	      0xe800000000	                          call 0x4010931	       148	string3.h	FUNCTION_147	CALL_3
0x4010931	        0x4183e510	                          and r13d, 0x10	      4942	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_79
0x4010935	            0x7417	                            je 0x401094e	      4942	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_79
0x4010937	    0x488dbc24d000	                   lea rdi, [rsp + 0xd0]	       148	string3.h	FUNCTION_147	CALL_3
0x401093f	      0xba50000000	                           mov edx, 0x50	       148	string3.h	FUNCTION_147	CALL_3
0x4010944	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_147	CALL_3
0x4010949	      0xe800000000	                          call 0x401094e	       148	string3.h	FUNCTION_147	CALL_3
0x401094e	    0x80bc24d00000	                cmp byte [rsp + 0xd0], 0	      4944	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_80
0x4010956	            0x7450	                            je 0x40109a8	      4944	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	IF_80
0x4010958	    0x488d9424d000	                   lea rdx, [rsp + 0xd0]	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x4010960	            0x8b0a	                    mov ecx, dword [rdx]	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x4010962	        0x4883c204	                              add rdx, 4	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x4010966	    0x8d81fffefefe	              lea eax, [rcx - 0x1010101]	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x401096c	            0xf7d1	                                 not ecx	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x401096e	            0x21c8	                            and eax, ecx	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x4010970	      0x2580808080	                     and eax, 0x80808080	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x4010975	            0x74e9	                            je 0x4010960	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x4010977	            0x89c1	                            mov ecx, eax	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x4010979	          0xc1e910	                           shr ecx, 0x10	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x401097c	      0xa980800000	                        test eax, 0x8080	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x4010981	           0xf44c1	                          cmove eax, ecx	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x4010984	        0x488d4a02	                      lea rcx, [rdx + 2]	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x4010988	            0x89c6	                            mov esi, eax	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x401098a	        0x480f44d1	                          cmove rdx, rcx	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x401098e	          0x4000c6	                             add sil, al	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x4010991	    0x488d8424d000	                   lea rax, [rsp + 0xd0]	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x4010999	        0x4883da03	                              sbb rdx, 3	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x401099d	          0x4829c2	                            sub rdx, rax	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x40109a0	    0xc68414cf0000	          mov byte [rsp + rdx + 0xcf], 0	      4945	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74	CALL_76
0x40109a8	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	      4946	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74
0x40109b0	      0x4889442430	             mov qword [rsp + 0x30], rax	      4946	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74
0x40109b5	    0x488d8424d000	                   lea rax, [rsp + 0xd0]	      4947	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74
0x40109bd	    0x488984248800	             mov qword [rsp + 0x88], rax	      4947	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74
0x40109c5	          0x4889c7	                            mov rdi, rax	      4947	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74
0x40109c8	      0xe902f5ffff	                           jmp 0x400fecf	      4947	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_37	IF_74
0x40109cd	    0x488b15000000	            mov rdx, qword [0x040109d4] 	      4902	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_64
0x40109d4	           0xfb612	                   movzx edx, byte [rdx]	      4902	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_64
0x40109d7	          0x83ea30	                           sub edx, 0x30	      4902	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_64
0x40109da	          0x83fa09	                              cmp edx, 9	      4902	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_64
0x40109dd	     0xf87c2f4ffff	                            ja 0x400fea5	      4902	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_64
0x40109e3	      0xbf00000000	                              mov edi, 0	      4904	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_65
0x40109e8	      0xe800000000	                          call 0x40109ed	      4904	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_65
0x40109ed	          0x83f801	                              cmp eax, 1	      4905	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x40109f0	    0x898424900000	             mov dword [rsp + 0x90], eax	      4904	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_65
0x40109f7	            0x746c	                            je 0x4010a65	      4905	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x40109f9	          0x83f802	                              cmp eax, 2	      4905	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x40109fc	            0x7446	                            je 0x4010a44	      4905	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x40109fe	            0x85c0	                           test eax, eax	      4905	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x4010a00	            0x750e	                           jne 0x4010a10	      4905	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x4010a02	    0x488b05000000	            mov rax, qword [0x04010a09] 	      4908	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x4010a09	    0x488905000000	            mov qword [0x04010a10], rax 	      4908	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x4010a10	      0x4c8b742440	            mov r14, qword [rsp + 0x40] 	      4919	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_68
0x4010a15	          0x4c89f7	                            mov rdi, r14	      4919	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_68
0x4010a18	      0xe800000000	                          call 0x4010a1d	      4919	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	CALL_68
0x4010a1d	          0x4d39f4	                            cmp r12, r14	      4920	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	IF_73
0x4010a20	            0x7435	                            je 0x4010a57	      4920	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	IF_73
0x4010a22	    0x488b05000000	            mov rax, qword [0x04010a29] 	      4920	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	IF_73
0x4010a29	      0x4889442440	             mov qword [rsp + 0x40], rax	      4920	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	IF_73
0x4010a2e	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	      4920	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	IF_73
0x4010a36	    0x48c744243000	               mov qword [rsp + 0x30], 0	      4809	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x4010a3f	      0xe98bf4ffff	                           jmp 0x400fecf	      4922	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72
0x4010a44	      0xbf00000000	                              mov edi, 0	      4915	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1	CALL_67
0x4010a49	      0xe800000000	                          call 0x4010a4e	      4915	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1	CALL_67
0x4010a4e	    0x488905000000	            mov qword [0x04010a55], rax 	      4915	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1	CALL_67
0x4010a55	            0xebb9	                           jmp 0x4010a10	      4917	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x4010a57	    0x4c8b25000000	            mov r12, qword [0x04010a5e] 	      4921	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	IF_73
0x4010a5e	      0x4c89642440	             mov qword [rsp + 0x40], r12	      4921	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	IF_73
0x4010a63	            0xebc9	                           jmp 0x4010a2e	      4921	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	IF_73
0x4010a65	      0xbf00000000	                              mov edi, 0	      4911	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1	CALL_66
0x4010a6a	      0xe800000000	                          call 0x4010a6f	      4911	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1	CALL_66
0x4010a6f	    0x488905000000	            mov qword [0x04010a76], rax 	      4911	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1	CALL_66
0x4010a76	            0xeb98	                           jmp 0x4010a10	      4913	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_36	IF_72	SWITCH_1
0x4010a78	        0xf64001df	               test byte [rax + 1], 0xdf	      4891	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x4010a7c	     0xf8514f4ffff	                           jne 0x400fe96	      4891	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x4010a82	    0x488d8424d000	                   lea rax, [rsp + 0xd0]	      4895	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x4010a8a	      0xba70000000	                           mov edx, 0x70	       110	string3.h	FUNCTION_143	CALL_3
0x4010a8f	    0xc78424d00000	     mov dword [rsp + 0xd0], 0x6c65683a 	       110	string3.h	FUNCTION_143	CALL_3
0x4010a9a	    0x66899424d400	               mov word [rsp + 0xd4], dx	       110	string3.h	FUNCTION_143	CALL_3
0x4010aa2	    0x488984248800	             mov qword [rsp + 0x88], rax	      4895	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x4010aaa	          0x4889c7	                            mov rdi, rax	      4895	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x4010aad	      0xe91df4ffff	                           jmp 0x400fecf	      4895	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_71
0x4010ab2	      0x488b7c2448	            mov rdi, qword [rsp + 0x48] 	      4877	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x4010ab7	      0xbe02000000	                              mov esi, 2	      4877	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x4010abc	        0x48c1e706	                              shl rdi, 6	      4877	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x4010ac0	    0x4881c7000000	                              add rdi, 0	      4877	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x4010ac7	      0xe8b40effff	                 call sym.get_varp_scope	      4877	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x4010acc	          0x488b38	                    mov rdi, qword [rax]	      4877	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x4010acf	      0xe800000000	                          call 0x4010ad4	      4877	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x4010ad4	          0x4989c5	                            mov r13, rax	      4877	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_34	IF_70	CALL_62
0x4010ad7	    0x8b0500000000	            mov eax, dword [0x04010add] 	      5169	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x4010add	      0x4c8b742420	            mov r14, qword [rsp + 0x20] 	      5166	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x4010ae2	            0x85c0	                           test eax, eax	      5169	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x4010ae4	          0x4d892e	                    mov qword [r14], r13	      5166	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x4010ae7	            0x7528	                           jne 0x4010b11	      5169	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x4010ae9	      0x488b442448	            mov rax, qword [rsp + 0x48] 	      5171	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x4010aee	        0x48c1e006	                              shl rax, 6	      5171	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x4010af2	    0x81b800000000	                 cmp dword [rax], 0x402c	      5171	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x4010afc	      0x4889442408	                mov qword [rsp + 8], rax	      5171	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x4010b01	            0x740e	                            je 0x4010b11	      5171	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x4010b03	          0x4d85e4	                           test r12, r12	      5173	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x4010b06	            0x7409	                            je 0x4010b11	      5173	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x4010b08	          0x4d85ed	                           test r13, r13	      5173	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x4010b0b	     0xf85b1000000	                           jne 0x4010bc2	      5173	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108
0x4010b11	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x4010b16	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x4010b1b	    0x488d8c24d000	                   lea rcx, [rsp + 0xd0]	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x4010b23	          0x4589f8	                           mov r8d, r15d	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x4010b26	            0x89df	                            mov edi, ebx	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x4010b28	          0x4531e4	                          xor r12d, r12d	      5192	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_109
0x4010b2b	      0xe8706dffff	call sym.did_set_string_option.constprop.17	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x4010b30	          0x4531c9	                            xor r9d, r9d	      5192	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_109
0x4010b33	          0x4885c0	                           test rax, rax	      5192	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_109
0x4010b36	          0x4989c6	                            mov r14, rax	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x4010b39	     0xf8462010000	                            je 0x4010ca1	      5192	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_109
0x4010b3f	          0x4c89cf	                             mov rdi, r9	      5195	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_108
0x4010b42	      0xe800000000	                          call 0x4010b47	      5195	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_108
0x4010b47	          0x4c89e7	                            mov rdi, r12	      5196	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_109
0x4010b4a	      0xe800000000	                          call 0x4010b4f	      5196	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_109
0x4010b4f	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	      5196	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_109
0x4010b57	      0xe92aebffff	                           jmp 0x400f686	      5196	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_109
0x4010b5c	      0x488b442408	                mov rax, qword [rsp + 8]	      4846	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x4010b61	        0x8b742460	            mov esi, dword [rsp + 0x60] 	      4846	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x4010b65	            0x31d2	                            xor edx, edx	      4846	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x4010b67	        0x48c1e80a	                            shr rax, 0xa	      4846	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x4010b6b	        0x4883f001	                              xor rax, 1	      4846	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x4010b6f	            0x85f6	                           test esi, esi	      4846	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x4010b71	      0x488b742448	            mov rsi, qword [rsp + 0x48] 	      4846	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x4010b76	           0xf94c2	                                 sete dl	      4846	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x4010b79	          0x4821d0	                            and rax, rdx	      4846	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x4010b7c	    0x48817c242000	               cmp qword [rsp + 0x20], 0	      4849	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_66
0x4010b85	      0x488d44f004	              lea rax, [rax + rsi*8 + 4]	      4846	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x4010b8a	    0x4c8b2cc50000	                  mov r13, qword [rax*8]	      4846	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65
0x4010b92	     0xf843c010000	                            je 0x4010cd4	      4849	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_66
0x4010b98	          0x4d85ed	                           test r13, r13	      4864	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_68
0x4010b9b	     0xf8427010000	                            je 0x4010cc8	      4864	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_68
0x4010ba1	          0x4c89ee	                            mov rsi, r13	      4868	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	CALL_59
0x4010ba4	            0x89df	                            mov edi, ebx	      4868	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	CALL_59
0x4010ba6	      0xe800000000	                          call 0x4010bab	      4868	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	CALL_59
0x4010bab	          0x4885c0	                           test rax, rax	      4869	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	IF_69
0x4010bae	        0x4c0f45e8	                         cmovne r13, rax	      4869	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	IF_69
0x4010bb2	          0x4c89ef	                            mov rdi, r13	      4871	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	CALL_60
0x4010bb5	      0xe800000000	                          call 0x4010bba	      4871	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	CALL_60
0x4010bba	          0x4989c5	                            mov r13, rax	      4871	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	CALL_60
0x4010bbd	      0xe915ffffff	                           jmp 0x4010ad7	      4871	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	ELSE_33	CALL_60
0x4010bc2	          0x4c89e7	                            mov rdi, r12	      5177	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108	CALL_104
0x4010bc5	      0xe800000000	                          call 0x4010bca	      5177	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108	CALL_104
0x4010bca	          0x4c89ef	                            mov rdi, r13	      5180	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108	CALL_105
0x4010bcd	      0x4889442428	             mov qword [rsp + 0x28], rax	      5177	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108	CALL_104
0x4010bd2	      0xe800000000	                          call 0x4010bd7	      5180	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108	CALL_105
0x4010bd7	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x4010bdc	    0x488d8c24d000	                   lea rcx, [rsp + 0xd0]	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x4010be4	          0x4c89f6	                            mov rsi, r14	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x4010be7	          0x4589f8	                           mov r8d, r15d	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x4010bea	            0x89df	                            mov edi, ebx	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x4010bec	          0x4989c4	                            mov r12, rax	      5180	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_108	CALL_105
0x4010bef	      0xe8ac6cffff	call sym.did_set_string_option.constprop.17	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x4010bf4	          0x4885c0	                           test rax, rax	      5192	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_109
0x4010bf7	          0x4989c6	                            mov r14, rax	      5188	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_106
0x4010bfa	      0x4c8b4c2428	              mov r9, qword [rsp + 0x28]	      5192	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_109
0x4010bff	     0xf853affffff	                           jne 0x4010b3f	      5192	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_109
0x4010c05	          0x4d85c9	                             test r9, r9	      4331	option.c	FUNCTION_15	IF_1
0x4010c08	     0xf8493000000	                            je 0x4010ca1	      4331	option.c	FUNCTION_15	IF_1
0x4010c0e	          0x4d85e4	                           test r12, r12	      4331	option.c	FUNCTION_15	IF_1
0x4010c11	     0xf848a000000	                            je 0x4010ca1	      4331	option.c	FUNCTION_15	IF_1
0x4010c17	      0x4c8b442470	              mov r8, qword [rsp + 0x70]	        33	stdio2.h	FUNCTION_120	CALL_1
0x4010c1c	    0x488dbc24c000	                   lea rdi, [rsp + 0xc0]	        33	stdio2.h	FUNCTION_120	CALL_1
0x4010c24	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_120	CALL_1
0x4010c29	      0xba07000000	                              mov edx, 7	        33	stdio2.h	FUNCTION_120	CALL_1
0x4010c2e	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_120	CALL_1
0x4010c33	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_120	CALL_1
0x4010c35	      0xe800000000	                          call 0x4010c3a	        33	stdio2.h	FUNCTION_120	CALL_1
0x4010c3a	      0x4c8b4c2428	              mov r9, qword [rsp + 0x28]	      4337	option.c	FUNCTION_15	IF_1	CALL_1
0x4010c3f	      0xbaffffffff	                     mov edx, 0xffffffff	      4337	option.c	FUNCTION_15	IF_1	CALL_1
0x4010c44	      0xbf3e000000	                           mov edi, 0x3e	      4337	option.c	FUNCTION_15	IF_1	CALL_1
0x4010c49	          0x4c89ce	                             mov rsi, r9	      4337	option.c	FUNCTION_15	IF_1	CALL_1
0x4010c4c	      0xe800000000	                          call 0x4010c51	      4337	option.c	FUNCTION_15	IF_1	CALL_1
0x4010c51	      0xbaffffffff	                     mov edx, 0xffffffff	      4338	option.c	FUNCTION_15	IF_1	CALL_2
0x4010c56	          0x4c89e6	                            mov rsi, r12	      4338	option.c	FUNCTION_15	IF_1	CALL_2
0x4010c59	      0xbf3d000000	                           mov edi, 0x3d	      4338	option.c	FUNCTION_15	IF_1	CALL_2
0x4010c5e	      0xe800000000	                          call 0x4010c63	      4338	option.c	FUNCTION_15	IF_1	CALL_2
0x4010c63	    0x488db424c000	                   lea rsi, [rsp + 0xc0]	      4339	option.c	FUNCTION_15	IF_1	CALL_3
0x4010c6b	      0xbaffffffff	                     mov edx, 0xffffffff	      4339	option.c	FUNCTION_15	IF_1	CALL_3
0x4010c70	      0xbf3f000000	                           mov edi, 0x3f	      4339	option.c	FUNCTION_15	IF_1	CALL_3
0x4010c75	      0xe800000000	                          call 0x4010c7a	      4339	option.c	FUNCTION_15	IF_1	CALL_3
0x4010c7a	      0x488b442408	                mov rax, qword [rsp + 8]	      4340	option.c	FUNCTION_15	IF_1	CALL_4
0x4010c7f	          0x4531c0	                            xor r8d, r8d	      4340	option.c	FUNCTION_15	IF_1	CALL_4
0x4010c82	            0x31c9	                            xor ecx, ecx	      4340	option.c	FUNCTION_15	IF_1	CALL_4
0x4010c84	            0x31d2	                            xor edx, edx	      4340	option.c	FUNCTION_15	IF_1	CALL_4
0x4010c86	      0xbf3e000000	                           mov edi, 0x3e	      4340	option.c	FUNCTION_15	IF_1	CALL_4
0x4010c8b	    0x488bb0000000	                    mov rsi, qword [rax]	      4340	option.c	FUNCTION_15	IF_1	CALL_4
0x4010c92	      0xe800000000	                          call 0x4010c97	      4340	option.c	FUNCTION_15	IF_1	CALL_4
0x4010c97	      0xe800000000	                          call 0x4010c9c	      4342	option.c	FUNCTION_15	IF_1	CALL_5
0x4010c9c	      0x4c8b4c2428	              mov r9, qword [rsp + 0x28]	      4342	option.c	FUNCTION_15	IF_1	CALL_5
0x4010ca1	          0x4c89cf	                             mov rdi, r9	      5195	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_108
0x4010ca4	          0x4531f6	                          xor r14d, r14d	      5196	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_109
0x4010ca7	      0xe800000000	                          call 0x4010cac	      5195	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_108
0x4010cac	          0x4c89e7	                            mov rdi, r12	      5196	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_109
0x4010caf	      0xe800000000	                          call 0x4010cb4	      5196	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_109
0x4010cb4	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      5196	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_109
0x4010cb8	         0xb442414	              or eax, dword [rsp + 0x14]	      5196	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_109
0x4010cbc	          0x83f001	                              xor eax, 1	      5196	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_109
0x4010cbf	        0x89442440	             mov dword [rsp + 0x40], eax	      5196	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_109
0x4010cc3	      0xe97ef9ffff	                           jmp 0x4010646	      5196	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	CALL_109
0x4010cc8	    0x4c8b2d000000	            mov r13, qword [0x04010ccf] 	      4865	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_68
0x4010ccf	      0xe903feffff	                           jmp 0x4010ad7	      4865	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_68
0x4010cd4	    0x8b0d00000000	            mov ecx, dword [0x04010cda] 	      4853	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_66	IF_67
0x4010cda	            0x85c9	                           test ecx, ecx	      4853	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_66	IF_67
0x4010cdc	     0xf8423040000	                            je 0x4011105	      4853	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_66	IF_67
0x4010ce2	    0x488b3d000000	            mov rdi, qword [0x04010ce9] 	      4256	option.c	FUNCTION_12	IF_1	CALL_1
0x4010ce9	    0x41bd00000000	                             mov r13d, 0	      4258	option.c	FUNCTION_12
0x4010cef	      0xe800000000	                          call 0x4010cf4	      4256	option.c	FUNCTION_12	IF_1	CALL_1
0x4010cf4	          0x83f87f	                           cmp eax, 0x7f	      4258	option.c	FUNCTION_12
0x4010cf7	      0xb800000000	                              mov eax, 0	      4258	option.c	FUNCTION_12
0x4010cfc	        0x4c0f4ce8	                          cmovl r13, rax	      4258	option.c	FUNCTION_12
0x4010d00	      0xe99cfeffff	                           jmp 0x4010ba1	      4258	option.c	FUNCTION_12
0x4010d05	        0x807f0100	                   cmp byte [rdi + 1], 0	      4984	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_84
0x4010d09	     0xf840df2ffff	                            je 0x400ff1c	      4984	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_84
0x4010d0f	    0x8b0500000000	            mov eax, dword [0x04010d15] 	      4995	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x4010d15	        0x4883c701	                              add rdi, 1	      4993	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_84
0x4010d19	    0x4889bc248800	             mov qword [rsp + 0x88], rdi	      4993	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_84
0x4010d21	            0x85c0	                           test eax, eax	      4995	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x4010d23	     0xf8401f2ffff	                            je 0x400ff2a	      4995	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x4010d29	    0xff1500000000	                 call qword [0x04010d2f]	      4996	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x4010d2f	          0x83f801	                              cmp eax, 1	      4996	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x4010d32	    0x898424900000	             mov dword [rsp + 0x90], eax	      4996	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x4010d39	            0x7f0d	                            jg 0x4010d48	      4996	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x4010d3b	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	      4996	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x4010d43	      0xe9e2f1ffff	                           jmp 0x400ff2a	      4996	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x4010d48	    0x488bb4248800	            mov rsi, qword [rsp + 0x88] 	        59	string3.h	FUNCTION_138	CALL_3
0x4010d50	          0x4c89f7	                            mov rdi, r14	        59	string3.h	FUNCTION_138	CALL_3
0x4010d53	          0x4863d0	                         movsxd rdx, eax	        59	string3.h	FUNCTION_138	CALL_3
0x4010d56	      0xe800000000	                          call 0x4010d5b	        59	string3.h	FUNCTION_138	CALL_3
0x4010d5b	    0x486384249000	         movsxd rax, dword [rsp + 0x90] 	      5000	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x4010d63	          0x4889c7	                            mov rdi, rax	      5000	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x4010d66	    0x4803bc248800	             add rdi, qword [rsp + 0x88]	      5000	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x4010d6e	          0x4901c6	                            add r14, rax	      5001	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x4010d71	    0x4889bc248800	             mov qword [rsp + 0x88], rdi	      5000	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x4010d79	      0xe9cbf1ffff	                           jmp 0x400ff49	      5001	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x4010d7e	            0x6690	                                     nop	      5001	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	WHILE_5	IF_85
0x4010d80	          0x4c89c2	                             mov rdx, r8	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x4010d83	          0x4c89ee	                            mov rsi, r13	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x4010d86	          0x4c89f7	                            mov rdi, r14	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x4010d89	    0x4c8994248000	             mov qword [rsp + 0x80], r10	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x4010d91	      0x44894c2458	             mov dword [rsp + 0x58], r9d	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x4010d96	      0x4c89442438	              mov qword [rsp + 0x38], r8	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x4010d9b	      0xe800000000	                          call 0x4010da0	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x4010da0	            0x85c0	                           test eax, eax	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x4010da2	      0x4c8b442438	              mov r8, qword [rsp + 0x38]	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x4010da7	      0x448b4c2458	            mov r9d, dword [rsp + 0x58] 	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x4010dac	    0x4c8b94248000	            mov r10, qword [rsp + 0x80] 	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x4010db4	     0xf8583f2ffff	                           jne 0x401003d	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x4010dba	      0x430fb60406	              movzx eax, byte [r14 + r8]	      5045	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x4010dbf	            0x84c0	                             test al, al	      5046	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x4010dc1	            0x7408	                            je 0x4010dcb	      5046	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x4010dc3	            0x3c2c	                            cmp al, 0x2c	      5046	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x4010dc5	     0xf8572f2ffff	                           jne 0x401003d	      5046	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x4010dcb	      0x448b4c2414	            mov r9d, dword [rsp + 0x14] 	      5064	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93
0x4010dd0	          0x4585c9	                           test r9d, r9d	      5064	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93
0x4010dd3	            0x740b	                            je 0x4010de0	      5064	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	ELSE_40	IF_93
0x4010dd5	          0x4c89e6	                            mov rsi, r12	       110	string3.h	FUNCTION_143	CALL_3
0x4010dd8	          0x4c89ef	                            mov rdi, r13	       110	string3.h	FUNCTION_143	CALL_3
0x4010ddb	      0xe800000000	                          call 0x4010de0	       110	string3.h	FUNCTION_143	CALL_3
0x4010de0	    0xc74424140000	               mov dword [rsp + 0x14], 0	      5078	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95
0x4010de8	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      5102	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98
0x4010dec	            0x85c0	                           test eax, eax	      5102	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98
0x4010dee	     0xf85da000000	                           jne 0x4010ece	      5102	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98
0x4010df4	    0x48f744240800	          test qword [rsp + 8], 0x40000 	      5127	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103
0x4010dfd	            0x7565	                           jne 0x4010e64	      5127	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103
0x4010dff	    0x48837c243000	               cmp qword [rsp + 0x30], 0	      5158	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_107
0x4010e05	     0xf84ccfcffff	                            je 0x4010ad7	      5158	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_107
0x4010e0b	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      5159	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_107
0x4010e10	    0x488984248800	             mov qword [rsp + 0x88], rax	      5159	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_107
0x4010e18	      0xe9bafcffff	                           jmp 0x4010ad7	      5159	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_107
0x4010e1d	        0x41f6c101	                             test r9b, 1	      5042	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x4010e21	     0xf8459ffffff	                            je 0x4010d80	      5042	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91
0x4010e27	          0x4d39f2	                            cmp r10, r14	      5052	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x4010e2a	     0xf82ecf1ffff	                            jb 0x401001c	      5052	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x4010e30	      0xe9dbf1ffff	                           jmp 0x4010010	      5052	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x4010e35	          0x4963c0	                         movsxd rax, r8d	      5052	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x4010e38	      0x4889442438	             mov qword [rsp + 0x38], rax	      5052	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_92
0x4010e3d	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x4010e42	          0x4c89ee	                            mov rsi, r13	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x4010e45	          0x4c89f7	                            mov rdi, r14	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x4010e48	      0xe800000000	                          call 0x4010e4d	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x4010e4d	            0x85c0	                           test eax, eax	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x4010e4f	     0xf8476ffffff	                            je 0x4010dcb	      5043	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1	IF_91	CALL_90
0x4010e55	        0x4983c601	                              add r14, 1	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x4010e59	        0x41803e00	                       cmp byte [r14], 0	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x4010e5d	            0x75de	                           jne 0x4010e3d	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x4010e5f	      0xe9faf1ffff	                           jmp 0x401005e	      5038	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_90	FOR_1
0x4010e64	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      5134	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104
0x4010e69	      0x410fb64500	                   movzx eax, byte [r13]	      5134	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104
0x4010e6e	        0x895c2438	             mov dword [rsp + 0x38], ebx	      5134	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104
0x4010e72	          0x4889eb	                            mov rbx, rbp	      5134	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104
0x4010e75	          0x4c89ed	                            mov rbp, r13	      5134	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104
0x4010e78	          0x4989de	                            mov r14, rbx	      5134	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104
0x4010e7b	          0x4889ce	                            mov rsi, rcx	      5134	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104
0x4010e7e	    0x81e600800100	                        and esi, 0x18000	      5134	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104
0x4010e84	      0x4889742408	                mov qword [rsp + 8], rsi	      5134	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104
0x4010e89	          0x4889ce	                            mov rsi, rcx	      5147	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x4010e8c	        0x48c1ee0f	                            shr rsi, 0xf	      5147	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x4010e90	          0x4889f2	                            mov rdx, rsi	      5147	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x4010e93	        0x4883f201	                              xor rdx, 1	      5147	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x4010e97	            0x89d6	                            mov esi, edx	      5147	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x4010e99	          0x83e601	                              and esi, 1	      5147	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x4010e9c	      0x4088742428	              mov byte [rsp + 0x28], sil	      5147	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x4010ea1	            0x84c0	                             test al, al	      5130	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2
0x4010ea3	     0xf8411010000	                            je 0x4010fba	      5130	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2
0x4010ea9	    0x48837c240800	                  cmp qword [rsp + 8], 0	      5134	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104
0x4010eaf	     0xf84ac000000	                            je 0x4010f61	      5134	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104
0x4010eb5	            0x3c2c	                            cmp al, 0x2c	      5136	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105
0x4010eb7	         0xfb65501	               movzx edx, byte [rbp + 1]	      5136	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105
0x4010ebb	     0xf84cb000000	                            je 0x4010f8c	      5136	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105
0x4010ec1	          0x80fa2c	                            cmp dl, 0x2c	      5136	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105
0x4010ec4	            0x7463	                            je 0x4010f29	      5136	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105
0x4010ec6	        0x4883c501	                              add rbp, 1	      5136	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105
0x4010eca	            0x89d0	                            mov eax, edx	      5137	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_100
0x4010ecc	            0xebd3	                           jmp 0x4010ea1	      5137	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_100
0x4010ece	          0x4c89e6	                            mov rsi, r12	       110	string3.h	FUNCTION_143	CALL_3
0x4010ed1	          0x4c89ef	                            mov rdi, r13	       110	string3.h	FUNCTION_143	CALL_3
0x4010ed4	      0xe800000000	                          call 0x4010ed9	       110	string3.h	FUNCTION_143	CALL_3
0x4010ed9	        0x41803e00	                       cmp byte [r14], 0	      5105	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99
0x4010edd	     0xf8411ffffff	                            je 0x4010df4	      5105	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99
0x4010ee3	    0x48f744240800	           test qword [rsp + 8], 0x8000 	      5108	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100
0x4010eec	     0xf85a3000000	                           jne 0x4010f95	      5108	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100
0x4010ef2	    0x486384249000	         movsxd rax, dword [rsp + 0x90] 	      5108	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100
0x4010efa	        0x498d3406	                    lea rsi, [r14 + rax]	      5108	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100
0x4010efe	          0x4889f7	                            mov rdi, rsi	      5123	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x4010f01	      0x4889742428	             mov qword [rsp + 0x28], rsi	      5123	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x4010f06	      0xe800000000	                          call 0x4010f0b	      5123	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	CALL_99
0x4010f0b	          0x4c89f1	                            mov rcx, r14	        59	string3.h	FUNCTION_138	CALL_3
0x4010f0e	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	        59	string3.h	FUNCTION_138	CALL_3
0x4010f13	        0x488d5001	                      lea rdx, [rax + 1]	        59	string3.h	FUNCTION_138	CALL_3
0x4010f17	          0x4c29e1	                            sub rcx, r12	        59	string3.h	FUNCTION_138	CALL_3
0x4010f1a	      0x498d7c0d00	                    lea rdi, [r13 + rcx]	        59	string3.h	FUNCTION_138	CALL_3
0x4010f1f	      0xe800000000	                          call 0x4010f24	        59	string3.h	FUNCTION_138	CALL_3
0x4010f24	      0xe9cbfeffff	                           jmp 0x4010df4	        59	string3.h	FUNCTION_138	CALL_3
0x4010f29	        0x488d5d02	                      lea rbx, [rbp + 2]	      5137	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_100
0x4010f2d	           0xfb6f0	                           movzx esi, al	      5137	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_100
0x4010f30	          0x4889df	                            mov rdi, rbx	      5137	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_100
0x4010f33	      0xe800000000	                          call 0x4010f38	      5137	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_100
0x4010f38	          0x4885c0	                           test rax, rax	      5137	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_100
0x4010f3b	     0xf8485000000	                            je 0x4010fc6	      5137	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105	CALL_100
0x4010f41	          0x4889df	                            mov rdi, rbx	      5150	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_103
0x4010f44	      0xe800000000	                          call 0x4010f49	      5150	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_103
0x4010f49	        0x488d5001	                      lea rdx, [rax + 1]	        59	string3.h	FUNCTION_138	CALL_3
0x4010f4d	          0x4889de	                            mov rsi, rbx	        59	string3.h	FUNCTION_138	CALL_3
0x4010f50	          0x4889ef	                            mov rdi, rbp	        59	string3.h	FUNCTION_138	CALL_3
0x4010f53	      0xe800000000	                          call 0x4010f58	        59	string3.h	FUNCTION_138	CALL_3
0x4010f58	         0xfb64500	                   movzx eax, byte [rbp]	        59	string3.h	FUNCTION_138	CALL_3
0x4010f5c	      0xe940ffffff	                           jmp 0x4010ea1	      5151	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x4010f61	      0x807c242800	                cmp byte [rsp + 0x28], 0	      5147	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x4010f66	            0x7504	                           jne 0x4010f6c	      5147	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x4010f68	            0x3c2c	                            cmp al, 0x2c	      5147	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x4010f6a	            0x745a	                            je 0x4010fc6	      5147	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x4010f6c	        0x488d5d01	                      lea rbx, [rbp + 1]	      5148	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_102
0x4010f70	           0xfb6f0	                           movzx esi, al	      5148	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_102
0x4010f73	          0x4889df	                            mov rdi, rbx	      5148	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_102
0x4010f76	      0xe800000000	                          call 0x4010f7b	      5148	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_102
0x4010f7b	          0x4885c0	                           test rax, rax	      5148	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_102
0x4010f7e	            0x75c1	                           jne 0x4010f41	      5148	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_102
0x4010f80	         0xfb65501	               movzx edx, byte [rbp + 1]	      5148	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_102
0x4010f84	          0x4889dd	                            mov rbp, rbx	      5148	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_102
0x4010f87	      0xe93effffff	                           jmp 0x4010eca	      5148	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106	CALL_102
0x4010f8c	        0x4883c501	                              add rbp, 1	      5136	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105
0x4010f90	      0xe935ffffff	                           jmp 0x4010eca	      5136	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	IF_104	IF_105
0x4010f95	          0x4d39f4	                            cmp r12, r14	      5110	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101
0x4010f98	            0x7439	                            je 0x4010fd3	      5110	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101
0x4010f9a	    0x8b8424900000	            mov eax, dword [rsp + 0x90] 	      5120	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	ELSE_42
0x4010fa1	        0x4983ee01	                              sub r14, 1	      5119	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	ELSE_42
0x4010fa5	          0x83c001	                              add eax, 1	      5120	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	ELSE_42
0x4010fa8	    0x898424900000	             mov dword [rsp + 0x90], eax	      5120	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	ELSE_42
0x4010faf	            0x4898	                                    cdqe	      5120	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	ELSE_42
0x4010fb1	        0x498d3406	                    lea rsi, [r14 + rax]	      5120	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	ELSE_42
0x4010fb5	      0xe944ffffff	                           jmp 0x4010efe	      5120	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	ELSE_42
0x4010fba	        0x8b5c2438	            mov ebx, dword [rsp + 0x38] 	      5120	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	ELSE_42
0x4010fbe	          0x4c89f5	                            mov rbp, r14	      5120	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	ELSE_42
0x4010fc1	      0xe939feffff	                           jmp 0x4010dff	      5120	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	ELSE_42
0x4010fc6	         0xfb65501	               movzx edx, byte [rbp + 1]	      5120	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	ELSE_42
0x4010fca	        0x4883c501	                              add rbp, 1	      5147	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x4010fce	      0xe9f7feffff	                           jmp 0x4010eca	      5147	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_103	FOR_2	ELSE_43	IF_106
0x4010fd3	    0x4863b4249000	         movsxd rsi, dword [rsp + 0x90] 	      5113	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x4010fdb	          0x4d89e6	                            mov r14, r12	      5113	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x4010fde	          0x4889f0	                            mov rax, rsi	      5113	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x4010fe1	          0x4c01e6	                            add rsi, r12	      5113	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x4010fe4	          0x803e2c	                    cmp byte [rsi], 0x2c	      5113	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x4010fe7	     0xf8511ffffff	                           jne 0x4010efe	      5113	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x4010fed	          0x83c001	                              add eax, 1	      5114	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x4010ff0	    0x898424900000	             mov dword [rsp + 0x90], eax	      5114	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x4010ff7	            0x4898	                                    cdqe	      5114	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x4010ff9	        0x498d3404	                    lea rsi, [r12 + rax]	      5114	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x4010ffd	      0xe9fcfeffff	                           jmp 0x4010efe	      5114	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_98	IF_99	IF_100	IF_101	IF_102
0x4011002	    0x41807c34ff2c	         cmp byte [r12 + rsi - 1], 0x2c 	      5084	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x4011008	     0xf85cef0ffff	                           jne 0x40100dc	      5084	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x401100e	    0x41807c34fe5c	         cmp byte [r12 + rsi - 2], 0x5c 	      5085	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x4011014	     0xf84c2f0ffff	                            je 0x40100dc	      5085	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x401101a	          0x83e801	                              sub eax, 1	      5086	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x401101d	    0x898424900000	             mov dword [rsp + 0x90], eax	      5086	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x4011024	          0x4863f0	                         movsxd rsi, eax	      5086	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x4011027	      0xe9b0f0ffff	                           jmp 0x40100dc	      5086	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x401102c	          0x4863f0	                         movsxd rsi, eax	      5086	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x401102f	    0x41b901000000	                              mov r9d, 1	      5082	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	IF_96
0x4011035	    0x41b801000000	                              mov r8d, 1	      5077	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x401103b	      0xe99cf0ffff	                           jmp 0x40100dc	      5077	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x4011040	      0xbe01000000	                              mov esi, 1	      5078	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95
0x4011045	    0x41b801000000	                              mov r8d, 1	      5077	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x401104b	          0x4c89ef	                            mov rdi, r13	      5093	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_96
0x401104e	      0x4489442438	             mov dword [rsp + 0x38], r8d	      5093	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_96
0x4011053	      0x4889742458	             mov qword [rsp + 0x58], rsi	      5093	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_96
0x4011058	      0xe800000000	                          call 0x401105d	      5093	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_96
0x401105d	          0x4c89e7	                            mov rdi, r12	      5094	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_97
0x4011060	    0x898424900000	             mov dword [rsp + 0x90], eax	      5093	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_96
0x4011067	      0x4889442428	             mov qword [rsp + 0x28], rax	      5093	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_96
0x401106c	      0xe800000000	                          call 0x4011071	      5094	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	ELSE_41	CALL_97
0x4011071	      0x4c8b4c2428	              mov r9, qword [rsp + 0x28]	        59	string3.h	FUNCTION_138	CALL_3
0x4011076	      0x488b742458	            mov rsi, qword [rsp + 0x58] 	        59	string3.h	FUNCTION_138	CALL_3
0x401107b	        0x488d5001	                      lea rdx, [rax + 1]	        59	string3.h	FUNCTION_138	CALL_3
0x401107f	          0x4963f9	                         movsxd rdi, r9d	        59	string3.h	FUNCTION_138	CALL_3
0x4011082	          0x4801fe	                            add rsi, rdi	        59	string3.h	FUNCTION_138	CALL_3
0x4011085	      0x498d7c3500	                    lea rdi, [r13 + rsi]	        59	string3.h	FUNCTION_138	CALL_3
0x401108a	          0x4c89e6	                            mov rsi, r12	        59	string3.h	FUNCTION_138	CALL_3
0x401108d	      0xe800000000	                          call 0x4011092	        59	string3.h	FUNCTION_138	CALL_3
0x4011092	      0x448b442438	            mov r8d, dword [rsp + 0x38] 	        59	string3.h	FUNCTION_138	CALL_3
0x4011097	      0xe98df0ffff	                           jmp 0x4010129	        59	string3.h	FUNCTION_138	CALL_3
0x401109c	        0x8b7c2428	            mov edi, dword [rsp + 0x28] 	      5078	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95
0x40110a0	            0x31f6	                            xor esi, esi	      5078	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95
0x40110a2	          0x4531c0	                            xor r8d, r8d	      5078	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95
0x40110a5	            0x85ff	                           test edi, edi	      5078	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95
0x40110a7	            0x74a2	                            je 0x401104b	      5078	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95
0x40110a9	          0x4c89e7	                            mov rdi, r12	      5080	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_92
0x40110ac	      0xe800000000	                          call 0x40110b1	      5080	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_92
0x40110b1	          0x4531c9	                            xor r9d, r9d	      5080	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_92
0x40110b4	    0x898424900000	             mov dword [rsp + 0x90], eax	      5080	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_92
0x40110bb	          0x4863f0	                         movsxd rsi, eax	      5080	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_92
0x40110be	          0x4531c0	                            xor r8d, r8d	      5080	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_92
0x40110c1	      0xe916f0ffff	                           jmp 0x40100dc	      5080	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94	IF_95	CALL_92
0x40110c6	          0x4c89ee	                            mov rsi, r13	      5017	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	CALL_83
0x40110c9	            0x89df	                            mov edi, ebx	      5017	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	CALL_83
0x40110cb	      0xe800000000	                          call 0x40110d0	      5017	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	CALL_83
0x40110d0	          0x4885c0	                           test rax, rax	      5018	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87
0x40110d3	          0x4989c6	                            mov r14, rax	      5017	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	CALL_83
0x40110d6	     0xf84ddeeffff	                            je 0x400ffb9	      5018	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87
0x40110dc	          0x4c89ef	                            mov rdi, r13	      5020	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_84
0x40110df	      0xe800000000	                          call 0x40110e4	      5020	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_84
0x40110e4	          0x4c89f7	                            mov rdi, r14	      5021	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_85
0x40110e7	      0xe800000000	                          call 0x40110ec	      5021	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_85
0x40110ec	          0x8d7801	                      lea edi, [rax + 1]	      5021	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_85
0x40110ef	      0xe9a9eeffff	                           jmp 0x400ff9d	      5021	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	ELSE_39	IF_86	IF_87	CALL_85
0x40110f4	        0x8b542414	            mov edx, dword [rsp + 0x14] 	      5074	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x40110f8	            0x85d2	                           test edx, edx	      5074	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x40110fa	     0xf856cefffff	                           jne 0x401006c	      5074	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x4011100	      0xe9effcffff	                           jmp 0x4010df4	      5074	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_35	IF_94
0x4011105	      0xe8560bffff	                call sym.term_bg_default	      4857	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_66	CALL_58
0x401110a	          0x4989c5	                            mov r13, rax	      4857	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_66	CALL_58
0x401110d	      0xe986faffff	                           jmp 0x4010b98	      4857	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	ELSE_31	IF_65	IF_66	CALL_58
0x4011112	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4833	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x4011117	          0x4c8b20	                    mov r12, qword [rax]	      4833	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x401111a	      0x4c89642440	             mov qword [rsp + 0x40], r12	      4833	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x401111f	      0xe936edffff	                           jmp 0x400fe5a	      4833	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x4011124	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4833	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x4011129	          0x4c8b20	                    mov r12, qword [rax]	      4833	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x401112c	          0x4863c3	                         movsxd rax, ebx	      4837	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x401112f	      0x4889442448	             mov qword [rsp + 0x48], rax	      4837	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x4011134	        0x48c1e006	                              shl rax, 6	      4837	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x4011138	    0xf68000000000	                   test byte [rax], 0x10	      4837	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x401113f	      0x4c89642440	             mov qword [rsp + 0x40], r12	      4833	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62
0x4011144	     0xf8410edffff	                            je 0x400fe5a	      4837	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x401114a	      0xe9e4ecffff	                           jmp 0x400fe33	      4837	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_30	IF_62	IF_64
0x401114f	        0x4183fd26	                          cmp r13d, 0x26	      5206	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_111
0x4011153	     0xf84cc000000	                            je 0x4011225	      5206	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_111
0x4011159	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	      5213	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45
0x4011161	        0x488d5801	                      lea rbx, [rax + 1]	      5213	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45
0x4011165	    0x48899c248800	             mov qword [rsp + 0x88], rbx	      5213	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45
0x401116d	      0x440fb66001	              movzx r12d, byte [rax + 1]	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x4011172	          0x4584e4	                         test r12b, r12b	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x4011175	            0x7452	                            je 0x40111c9	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x4011177	        0x4180fc09	                             cmp r12b, 9	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x401117b	            0x744c	                            je 0x40111c9	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x401117d	        0x4180fc20	                          cmp r12b, 0x20	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x4011181	            0x7446	                            je 0x40111c9	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x4011183	        0x4180fc5c	                          cmp r12b, 0x5c	      5215	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	IF_113
0x4011187	     0xf8484000000	                            je 0x4011211	      5215	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	IF_113
0x401118d	      0x440fb66301	              movzx r12d, byte [rbx + 1]	      5215	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	IF_113
0x4011192	        0x4883c301	                              add rbx, 1	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x4011196	          0x4584e4	                         test r12b, r12b	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x4011199	            0x742b	                            je 0x40111c6	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x401119b	        0x4180fc20	                          cmp r12b, 0x20	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x401119f	            0x7428	                            je 0x40111c9	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x40111a1	        0x4180fc09	                             cmp r12b, 9	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x40111a5	            0x75dc	                           jne 0x4011183	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x40111a7	            0xeb20	                           jmp 0x40111c9	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x40111a9	        0x4983c103	                               add r9, 3	      4608	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	IF_31
0x40111ad	    0xc74424600000	               mov dword [rsp + 0x60], 0	      4607	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	IF_31
0x40111b5	    0x4c898c248800	              mov qword [rsp + 0x88], r9	      4608	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	IF_31
0x40111bd	      0xe9abebffff	                           jmp 0x400fd6d	      4608	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_29	IF_30	IF_31
0x40111c2	        0x4883c301	                              add rbx, 1	      5214	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	CALL_112
0x40111c6	          0x4531e4	                          xor r12d, r12d	      5216	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	IF_113
0x40111c9	          0xc60300	                       mov byte [rbx], 0	      5218	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45
0x40111cc	    0x488bb4248800	            mov rsi, qword [rsp + 0x88] 	      5219	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	CALL_113
0x40111d4	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	      5219	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	CALL_113
0x40111dc	            0x31d2	                            xor edx, edx	      5219	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	CALL_113
0x40111de	          0x4531f6	                          xor r14d, r14d	      4396	option.c	FUNCTION_16	WHILE_1
0x40111e1	      0xe800000000	                          call 0x40111e6	      5219	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	CALL_113
0x40111e6	          0x448823	                    mov byte [rbx], r12b	      5220	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45
0x40111e9	    0x8b0500000000	            mov eax, dword [0x040111ef] 	      5222	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_114
0x40111ef	            0x85c0	                           test eax, eax	      5222	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_114
0x40111f1	            0x7407	                            je 0x40111fa	      5222	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_114
0x40111f3	            0x31ff	                            xor edi, edi	      5223	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	CALL_114
0x40111f5	      0xe800000000	                          call 0x40111fa	      5223	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	CALL_114
0x40111fa	      0xbf32000000	                           mov edi, 0x32	      5224	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	CALL_115
0x40111ff	      0xe800000000	                          call 0x4011204	      5224	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	CALL_115
0x4011204	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	      5224	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	CALL_115
0x401120c	      0xe975e4ffff	                           jmp 0x400f686	      5224	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	CALL_115
0x4011211	        0x807b0100	                   cmp byte [rbx + 1], 0	      5215	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	IF_113
0x4011215	            0x74ab	                            je 0x40111c2	      5215	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	IF_113
0x4011217	      0x440fb66302	              movzx r12d, byte [rbx + 2]	      5215	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	IF_113
0x401121c	        0x4883c301	                              add rbx, 1	      5216	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	IF_113
0x4011220	      0xe96dffffff	                           jmp 0x4011192	      5216	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	ELSE_45	FOR_3	IF_113
0x4011225	    0x488dbc24b000	                   lea rdi, [rsp + 0xb0]	      5208	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_111	IF_112	CALL_110
0x401122d	      0xbe01000000	                              mov esi, 1	      5208	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_111	IF_112	CALL_110
0x4011232	    0x41be00000000	                             mov r14d, 0	      4396	option.c	FUNCTION_16	WHILE_1
0x4011238	      0xe800000000	                          call 0x401123d	      5208	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	ELSE_44	IF_111	IF_112	CALL_110
0x401123d	            0x85c0	                           test eax, eax	      4396	option.c	FUNCTION_16	WHILE_1
0x401123f	        0x4d0f45f4	                         cmovne r14, r12	      4396	option.c	FUNCTION_16	WHILE_1
0x4011243	            0xeba4	                           jmp 0x40111e9	      4396	option.c	FUNCTION_16	WHILE_1
0x4011245	    0x488b94248800	            mov rdx, qword [rsp + 0x88] 	      4749	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51
0x401124d	        0x4183fd26	                          cmp r13d, 0x26	      4750	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x4011251	        0x488d7a01	                      lea rdi, [rdx + 1]	      4749	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51
0x4011255	    0x4889bc248800	             mov qword [rsp + 0x88], rdi	      4749	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51
0x401125d	     0xf84f2010000	                            je 0x4011455	      4750	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x4011263	        0x4183fd3c	                          cmp r13d, 0x3c	      4754	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53
0x4011267	     0xf848e010000	                            je 0x40113fb	      4754	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53
0x401126d	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4766	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x4011272	    0x483d00000000	                              cmp rax, 0	      4766	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x4011278	     0xf8405010000	                            je 0x4011383	      4766	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x401127e	    0x483d00000000	                              cmp rax, 0	      4766	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x4011284	     0xf84f9000000	                            je 0x4011383	      4766	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x401128a	         0xfb64201	               movzx eax, byte [rdx + 1]	      4766	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x401128e	          0x8d50d0	                   lea edx, [rax - 0x30]	      4780	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_51
0x4011291	          0x80fa09	                               cmp dl, 9	      4780	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_51
0x4011294	            0x760e	                           jbe 0x40112a4	      4780	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_51
0x4011296	            0x3c2d	                            cmp al, 0x2d	      4780	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_51
0x4011298	    0x41be00000000	                             mov r14d, 0	      4794	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_29	CALL_54
0x401129e	     0xf85e2e3ffff	                           jne 0x400f686	      4780	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_51
0x40112a4	        0x4883ec08	                              sub rsp, 8	      4784	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x40112a8	          0x4531c9	                            xor r9d, r9d	      4784	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x40112ab	            0x31f6	                            xor esi, esi	      4784	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x40112ad	            0x6a00	                                  push 0	      4784	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x40112af	      0xb907000000	                              mov ecx, 7	      4784	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x40112b4	    0x4c8d8424a800	                    lea r8, [rsp + 0xa8]	      4784	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x40112bc	    0x488d9424a000	                   lea rdx, [rsp + 0xa0]	      4784	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x40112c4	      0xe800000000	                          call 0x40112c9	      4784	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	CALL_52
0x40112c9	    0x48638424a000	         movsxd rax, dword [rsp + 0xa0] 	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x40112d1	    0x488bbc249800	            mov rdi, qword [rsp + 0x98] 	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x40112d9	            0x415c	                                 pop r12	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x40112db	            0x415d	                                 pop r13	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x40112dd	         0xfb60407	             movzx eax, byte [rdi + rax]	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x40112e1	            0xa8df	                           test al, 0xdf	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x40112e3	     0xf8587000000	                           jne 0x4011370	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x40112e9	    0x488b94249800	            mov rdx, qword [rsp + 0x98] 	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x40112f1	      0x448b5c2428	           mov r11d, dword [rsp + 0x28] 	      4798	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_59
0x40112f6	          0x4585db	                         test r11d, r11d	      4798	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_59
0x40112f9	            0x7410	                            je 0x401130b	      4798	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_59
0x40112fb	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4799	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_59
0x4011300	          0x480310	                    add rdx, qword [rax]	      4799	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_59
0x4011303	    0x488994249800	             mov qword [rsp + 0x98], rdx	      4799	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_59
0x401130b	      0x448b542448	           mov r10d, dword [rsp + 0x48] 	      4800	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_60
0x4011310	          0x4585d2	                         test r10d, r10d	      4800	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_60
0x4011313	            0x7411	                            je 0x4011326	      4800	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_60
0x4011315	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4801	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_60
0x401131a	        0x480faf10	                   imul rdx, qword [rax]	      4801	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_60
0x401131e	    0x488994249800	             mov qword [rsp + 0x98], rdx	      4801	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_60
0x4011326	      0x448b4c2418	            mov r9d, dword [rsp + 0x18] 	      4802	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_61
0x401132b	          0x4585c9	                           test r9d, r9d	      4802	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_61
0x401132e	            0x741b	                            je 0x401134b	      4802	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_61
0x4011330	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4803	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_61
0x4011335	          0x488b00	                    mov rax, qword [rax]	      4803	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_61
0x4011338	      0x4889442408	                mov qword [rsp + 8], rax	      4803	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_61
0x401133d	          0x4829d0	                            sub rax, rdx	      4803	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_61
0x4011340	          0x4889c2	                            mov rdx, rax	      4803	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_61
0x4011343	    0x488984249800	             mov qword [rsp + 0x98], rax	      4803	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_61
0x401134b	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      4804	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x4011350	    0x488d8c24d000	                   lea rcx, [rsp + 0xd0]	      4804	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x4011358	          0x4589f9	                           mov r9d, r15d	      4804	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x401135b	    0x41b850000000	                           mov r8d, 0x50	      4804	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x4011361	            0x89df	                            mov edi, ebx	      4804	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x4011363	      0xe80854ffff	                 call sym.set_num_option	      4804	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x4011368	          0x4989c6	                            mov r14, rax	      4804	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x401136b	      0xe9cff2ffff	                           jmp 0x401063f	      4804	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	CALL_55
0x4011370	            0x3c09	                               cmp al, 9	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x4011372	    0x41be00000000	                             mov r14d, 0	      4788	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58
0x4011378	     0xf8508e3ffff	                           jne 0x400f686	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x401137e	      0xe966ffffff	                           jmp 0x40112e9	      4786	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_28	IF_57	IF_58	CALL_53
0x4011383	         0xfb64201	               movzx eax, byte [rdx + 1]	      4767	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x4011387	            0x3c3c	                            cmp al, 0x3c	      4767	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x4011389	            0x7433	                            je 0x40113be	      4767	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x401138b	            0x3c5e	                            cmp al, 0x5e	      4767	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x401138d	            0x742f	                            je 0x40113be	      4767	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x401138f	            0x84c0	                             test al, al	      4769	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x4011391	    0x41be00000000	                             mov r14d, 0	      4794	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_29	CALL_54
0x4011397	     0xf84e9e2ffff	                            je 0x400f686	      4769	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55
0x401139d	         0xfb65202	               movzx edx, byte [rdx + 2]	      4770	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_48
0x40113a1	          0xf6c2df	                           test dl, 0xdf	      4770	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_48
0x40113a4	            0x7409	                            je 0x40113af	      4770	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_48
0x40113a6	          0x80fa09	                               cmp dl, 9	      4770	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_48
0x40113a9	     0xf85dffeffff	                           jne 0x401128e	      4770	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_48
0x40113af	           0xfb6d0	                           movzx edx, al	      4771	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_49
0x40113b2	          0x83ea30	                           sub edx, 0x30	      4771	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_49
0x40113b5	          0x83fa09	                              cmp edx, 9	      4771	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_49
0x40113b8	     0xf86d0feffff	                           jbe 0x401128e	      4771	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_49
0x40113be	            0x31f6	                            xor esi, esi	      4773	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_50
0x40113c0	      0xe800000000	                          call 0x40113c5	      4773	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_50
0x40113c5	    0x48817c242000	               cmp qword [rsp + 0x20], 0	      4774	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	IF_56
0x40113ce	          0x4863d0	                         movsxd rdx, eax	      4773	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_50
0x40113d1	    0x488994249800	             mov qword [rsp + 0x98], rdx	      4773	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	CALL_50
0x40113d9	     0xf8412ffffff	                            je 0x40112f1	      4774	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	IF_56
0x40113df	          0x4885d2	                           test rdx, rdx	      4774	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	IF_56
0x40113e2	     0xf8509ffffff	                           jne 0x40112f1	      4774	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	IF_56
0x40113e8	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	      4774	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	IF_56
0x40113f0	    0x41be00000000	                             mov r14d, 0	      4776	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	IF_56
0x40113f6	      0xe98be2ffff	                           jmp 0x400f686	      4776	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_27	IF_55	IF_56
0x40113fb	    0x488b05000000	            mov rax, qword [0x04011402] 	      4758	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	IF_54
0x4011402	    0x480548160000	                         add rax, 0x1648	      4758	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	IF_54
0x4011408	      0x4839442420	            cmp qword [rsp + 0x20], rax 	      4759	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	IF_54
0x401140d	            0x7506	                           jne 0x4011415	      4759	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	IF_54
0x401140f	        0x4183ff04	                             cmp r15d, 4	      4759	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	IF_54
0x4011413	            0x7428	                            je 0x401143d	      4759	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	IF_54
0x4011415	          0x4863fb	                         movsxd rdi, ebx	      4762	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	ELSE_26	CALL_47
0x4011418	      0xbe02000000	                              mov esi, 2	      4762	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	ELSE_26	CALL_47
0x401141d	        0x48c1e706	                              shl rdi, 6	      4762	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	ELSE_26	CALL_47
0x4011421	    0x4881c7000000	                              add rdi, 0	      4762	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	ELSE_26	CALL_47
0x4011428	      0xe85305ffff	                 call sym.get_varp_scope	      4762	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	ELSE_26	CALL_47
0x401142d	          0x488b10	                    mov rdx, qword [rax]	      4762	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	ELSE_26	CALL_47
0x4011430	    0x488994249800	             mov qword [rsp + 0x98], rdx	      4762	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	ELSE_26	CALL_47
0x4011438	      0xe9b4feffff	                           jmp 0x40112f1	      4762	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	ELSE_26	CALL_47
0x401143d	    0x48c784249800	mov qword [rsp + 0x98], 0xfffffffffffe1dc0	      4760	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	IF_54
0x4011449	    0x48c7c2c01dfe	             mov rdx, 0xfffffffffffe1dc0	      4760	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	IF_54
0x4011450	      0xe99cfeffff	                           jmp 0x40112f1	      4760	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	ELSE_25	IF_53	IF_54
0x4011455	      0x488b442408	                mov rax, qword [rsp + 8]	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x401145a	      0x448b742460	           mov r14d, dword [rsp + 0x60] 	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x401145f	            0x31d2	                            xor edx, edx	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x4011461	        0x48c1e80a	                            shr rax, 0xa	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x4011465	        0x4883f001	                              xor rax, 1	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x4011469	          0x4585f6	                         test r14d, r14d	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x401146c	           0xf94c2	                                 sete dl	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x401146f	          0x4821d0	                            and rax, rdx	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x4011472	          0x4863d3	                         movsxd rdx, ebx	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x4011475	      0x488d44d004	              lea rax, [rax + rdx*8 + 4]	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x401147a	    0x488b14c50000	                  mov rdx, qword [rax*8]	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x4011482	    0x488994249800	             mov qword [rsp + 0x98], rdx	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x401148a	      0xe962feffff	                           jmp 0x40112f1	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x401148f	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	      4751	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	ELSE_24	IF_51	IF_52
0x4011497	    0xc74424500100	               mov dword [rsp + 0x50], 1	      4666	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	IF_40
0x401149f	    0x41be00000000	                             mov r14d, 0	      4668	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	IF_40	CALL_40
0x40114a5	      0xe9dce1ffff	                           jmp 0x400f686	      4668	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	ELSE_16	IF_40	CALL_40
0x40114aa	    0x488b15000000	            mov rdx, qword [0x040114b1] 	      4656	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39	CALL_38
0x40114b1	      0x25ff0f0000	                          and eax, 0xfff	      4656	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39	CALL_38
0x40114b6	    0x8bbc82ac1200	  mov edi, dword [rdx + rax*4 + 0x12ac] 	      4656	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39	CALL_38
0x40114bd	      0xe800000000	                          call 0x40114c2	      4656	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39	CALL_38
0x40114c2	      0xe9c1f0ffff	                           jmp 0x4010588	      4656	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_15	IF_39	CALL_38
0x40114c7	    0x488b15000000	            mov rdx, qword [0x040114ce] 	      4653	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38	CALL_37
0x40114ce	      0x25ff0f0000	                          and eax, 0xfff	      4653	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38	CALL_37
0x40114d3	    0x8bbc82d00200	   mov edi, dword [rdx + rax*4 + 0x2d0] 	      4653	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38	CALL_37
0x40114da	      0xe800000000	                          call 0x40114df	      4653	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38	CALL_37
0x40114df	      0xe9a4f0ffff	                           jmp 0x4010588	      4653	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	ELSE_14	IF_38	CALL_37
0x40114e4	          0x8b7b38	            mov edi, dword [rbx + 0x38] 	      4651	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	CALL_36
0x40114e7	      0xe800000000	                          call 0x40114ec	      4651	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	CALL_36
0x40114ec	      0xe997f0ffff	                           jmp 0x4010588	      4651	option.c	FUNCTION_16	WHILE_1	ELSE_3	IF_33	IF_35	IF_36	CALL_36
0x40114f1	    0x488b35000000	            mov rsi, qword [0x040114f8] 	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x40114f8	    0x48b867666666	          movabs rax, 0x6666666666666667	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4011502	          0x48f7ee	                                imul rsi	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4011505	        0x48c1fe3f	                           sar rsi, 0x3f	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4011509	          0x4889d1	                            mov rcx, rdx	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x401150c	        0x48c1f903	                              sar rcx, 3	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4011510	          0x4829f1	                            sub rcx, rsi	      9938	option.c	FUNCTION_61	FOR_1	IF_10
0x4011513	            0x85c9	                           test ecx, ecx	      9940	option.c	FUNCTION_61	FOR_1	IF_10	IF_11
0x4011515	       0xf444c2418	           cmove ecx, dword [rsp + 0x18]	      9940	option.c	FUNCTION_61	FOR_1	IF_10	IF_11
0x401151a	        0x8d4419ff	                lea eax, [rcx + rbx - 1]	      9941	option.c	FUNCTION_61	FOR_1	IF_10
0x401151e	              0x99	                                     cdq	      9941	option.c	FUNCTION_61	FOR_1	IF_10
0x401151f	            0xf7f9	                                idiv ecx	      9941	option.c	FUNCTION_61	FOR_1	IF_10
0x4011521	            0x85c0	                           test eax, eax	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4011523	            0x89c5	                            mov ebp, eax	      9941	option.c	FUNCTION_61	FOR_1	IF_10
0x4011525	     0xf8fbcedffff	                            jg 0x40102e7	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x401152b	      0x8344243001	               add dword [rsp + 0x30], 1	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4011530	      0x8344241801	               add dword [rsp + 0x18], 1	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x4011535	      0xe984ecffff	                           jmp 0x40101be	      9945	option.c	FUNCTION_61	FOR_1	ELSE_6	FOR_3
0x401153a	    0x488b05000000	            mov rax, qword [0x04011541] 	      4702	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	IF_47
0x4011541	    0x480518160000	                         add rax, 0x1618	      4702	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	IF_47
0x4011547	      0x4839442420	            cmp qword [rsp + 0x20], rax 	      4703	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	IF_47
0x401154c	            0x7506	                           jne 0x4011554	      4703	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	IF_47
0x401154e	        0x4183ff04	                             cmp r15d, 4	      4703	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	IF_47
0x4011552	            0x742b	                            je 0x401157f	      4703	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	IF_47
0x4011554	          0x4863fb	                         movsxd rdi, ebx	      4706	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x4011557	      0xbe02000000	                              mov esi, 2	      4706	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x401155c	        0x48c1e706	                              shl rdi, 6	      4706	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x4011560	    0x4881c7000000	                              add rdi, 0	      4706	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x4011567	      0xe81404ffff	                 call sym.get_varp_scope	      4706	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x401156c	          0x486300	                 movsxd rax, dword [rax]	      4706	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x401156f	          0x4889c2	                            mov rdx, rax	      4706	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x4011572	    0x488984249800	             mov qword [rsp + 0x98], rax	      4706	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x401157a	      0xe9aef0ffff	                           jmp 0x401062d	      4706	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	ELSE_21	CALL_43
0x401157f	    0x48c784249800	mov qword [rsp + 0x98], 0xffffffffffffffff	      4704	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	IF_47
0x401158b	      0xbaffffffff	                     mov edx, 0xffffffff	      4704	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	IF_47
0x4011590	      0xe998f0ffff	                           jmp 0x401062d	      4704	option.c	FUNCTION_16	WHILE_1	ELSE_3	ELSE_18	IF_42	ELSE_20	IF_46	IF_47
option_value2string	SWITCH,0:CALL,10:DO,0:WHILE,0:IF,7:functions,0:ELSE,7:FOR,0	98
0x4001d10	            0x4154	                                push r12	     11769	option.c	FUNCTION_91
0x4001d12	              0x55	                                push rbp	     11769	option.c	FUNCTION_91
0x4001d13	              0x53	                                push rbx	     11769	option.c	FUNCTION_91
0x4001d14	          0x4889fb	                            mov rbx, rdi	     11769	option.c	FUNCTION_91
0x4001d17	      0xe864fcffff	                 call sym.get_varp_scope	     11772	option.c	FUNCTION_91	CALL_1
0x4001d1c	          0x4889c5	                            mov rbp, rax	     11772	option.c	FUNCTION_91	CALL_1
0x4001d1f	        0x488b4310	            mov rax, qword [rbx + 0x10] 	     11774	option.c	FUNCTION_91	IF_1
0x4001d23	            0xa802	                              test al, 2	     11774	option.c	FUNCTION_91	IF_1
0x4001d25	            0x7449	                            je 0x4001d70	     11774	option.c	FUNCTION_91	IF_1
0x4001d27	    0x4881fd000000	                              cmp rbp, 0	     11813	option.c	FUNCTION_92	IF_1
0x4001d2e	     0xf848c000000	                            je 0x4001dc0	     11813	option.c	FUNCTION_92	IF_1
0x4001d34	    0x4881fd000000	                              cmp rbp, 0	     11813	option.c	FUNCTION_92	IF_1
0x4001d3b	     0xf847f000000	                            je 0x4001dc0	     11813	option.c	FUNCTION_92	IF_1
0x4001d41	              0x5b	                                 pop rbx	     11803	option.c	FUNCTION_91
0x4001d42	        0x4c8b4500	                     mov r8, qword [rbp]	        33	stdio2.h	FUNCTION_120	CALL_1
0x4001d46	    0x488b3d000000	            mov rdi, qword [0x04001d4d] 	        33	stdio2.h	FUNCTION_120	CALL_1
0x4001d4d	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_120	CALL_1
0x4001d52	              0x5d	                                 pop rbp	     11803	option.c	FUNCTION_91
0x4001d53	            0x415c	                                 pop r12	     11803	option.c	FUNCTION_91
0x4001d55	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	        33	stdio2.h	FUNCTION_120	CALL_1
0x4001d5c	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_120	CALL_1
0x4001d61	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_120	CALL_1
0x4001d63	      0xe900000000	                           jmp 0x4001d68	        33	stdio2.h	FUNCTION_120	CALL_1
0x4001d68	     0xf1f84000000	                   nop dword [rax + rax]	        33	stdio2.h	FUNCTION_120	CALL_1
0x4001d70	        0x488b7500	                    mov rsi, qword [rbp]	     11787	option.c	FUNCTION_91	ELSE_3
0x4001d74	          0x4885f6	                           test rsi, rsi	     11788	option.c	FUNCTION_91	ELSE_3	IF_4
0x4001d77	            0x7437	                            je 0x4001db0	     11788	option.c	FUNCTION_91	ELSE_3	IF_4
0x4001d79	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	     11792	option.c	FUNCTION_91	ELSE_3	ELSE_4	IF_5
0x4001d7d	    0x4881fa000000	                              cmp rdx, 0	     11792	option.c	FUNCTION_91	ELSE_3	ELSE_4	IF_5
0x4001d84	            0x747a	                            je 0x4001e00	     11792	option.c	FUNCTION_91	ELSE_3	ELSE_4	IF_5
0x4001d86	            0xa810	                           test al, 0x10	     11795	option.c	FUNCTION_91	ELSE_3	ELSE_5	IF_6
0x4001d88	            0x757f	                           jne 0x4001e09	     11795	option.c	FUNCTION_91	ELSE_3	ELSE_5	IF_6
0x4001d8a	    0x4881fa000000	                              cmp rdx, 0	     11798	option.c	FUNCTION_91	ELSE_3	ELSE_6	IF_7
0x4001d91	     0xf8491000000	                            je 0x4001e28	     11798	option.c	FUNCTION_91	ELSE_3	ELSE_6	IF_7
0x4001d97	              0x5b	                                 pop rbx	     11803	option.c	FUNCTION_91
0x4001d98	              0x5d	                                 pop rbp	     11803	option.c	FUNCTION_91
0x4001d99	            0x415c	                                 pop r12	     11803	option.c	FUNCTION_91
0x4001d9b	    0x488b3d000000	            mov rdi, qword [0x04001da2] 	     11801	option.c	FUNCTION_91	ELSE_3	CALL_10
0x4001da2	      0xbaff0f0000	                          mov edx, 0xfff	     11801	option.c	FUNCTION_91	ELSE_3	CALL_10
0x4001da7	      0xe900000000	                           jmp 0x4001dac	     11801	option.c	FUNCTION_91	ELSE_3	CALL_10
0x4001dac	         0xf1f4000	                         nop dword [rax]	     11801	option.c	FUNCTION_91	ELSE_3	CALL_10
0x4001db0	    0x488b05000000	            mov rax, qword [0x04001db7] 	     11789	option.c	FUNCTION_91	ELSE_3	IF_4
0x4001db7	          0xc60000	                       mov byte [rax], 0	     11789	option.c	FUNCTION_91	ELSE_3	IF_4
0x4001dba	              0x5b	                                 pop rbx	     11803	option.c	FUNCTION_91
0x4001dbb	              0x5d	                                 pop rbp	     11803	option.c	FUNCTION_91
0x4001dbc	            0x415c	                                 pop r12	     11803	option.c	FUNCTION_91
0x4001dbe	              0xc3	                                     ret	     11803	option.c	FUNCTION_91
0x4001dbf	              0x90	                                     nop	     11803	option.c	FUNCTION_91
0x4001dc0	        0x488b5d00	                    mov rbx, qword [rbp]	     11815	option.c	FUNCTION_92	IF_1
0x4001dc4	          0x4885db	                           test rbx, rbx	     11816	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0x4001dc7	          0x4189dc	                           mov r12d, ebx	     11816	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0x4001dca	            0x780f	                            js 0x4001ddb	     11816	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0x4001dcc	            0x89df	                            mov edi, ebx	     11816	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0x4001dce	      0xe800000000	                          call 0x4001dd3	     11816	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0x4001dd3	            0x85c0	                           test eax, eax	     11816	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0x4001dd5	     0xf888d000000	                            js 0x4001e68	     11816	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0x4001ddb	            0x31f6	                            xor esi, esi	     11779	option.c	FUNCTION_91	IF_1	CALL_4
0x4001ddd	          0x4489e7	                           mov edi, r12d	     11779	option.c	FUNCTION_91	IF_1	CALL_4
0x4001de0	      0xe800000000	                          call 0x4001de5	     11779	option.c	FUNCTION_91	IF_1	CALL_4
0x4001de5	              0x5b	                                 pop rbx	     11803	option.c	FUNCTION_91
0x4001de6	              0x5d	                                 pop rbp	     11803	option.c	FUNCTION_91
0x4001de7	            0x415c	                                 pop r12	     11803	option.c	FUNCTION_91
0x4001de9	    0x488b3d000000	            mov rdi, qword [0x04001df0] 	       110	string3.h	FUNCTION_143	CALL_3
0x4001df0	          0x4889c6	                            mov rsi, rax	       110	string3.h	FUNCTION_143	CALL_3
0x4001df3	      0xe900000000	                           jmp 0x4001df8	       110	string3.h	FUNCTION_143	CALL_3
0x4001df8	     0xf1f84000000	                   nop dword [rax + rax]	       110	string3.h	FUNCTION_143	CALL_3
0x4001e00	          0x803e00	                       cmp byte [rsi], 0	     11792	option.c	FUNCTION_91	ELSE_3	ELSE_4	IF_5
0x4001e03	            0x7543	                           jne 0x4001e48	     11792	option.c	FUNCTION_91	ELSE_3	ELSE_4	IF_5
0x4001e05	            0xa810	                           test al, 0x10	     11795	option.c	FUNCTION_91	ELSE_3	ELSE_5	IF_6
0x4001e07	            0x748e	                            je 0x4001d97	     11795	option.c	FUNCTION_91	ELSE_3	ELSE_5	IF_6
0x4001e09	              0x5b	                                 pop rbx	     11803	option.c	FUNCTION_91
0x4001e0a	              0x5d	                                 pop rbp	     11803	option.c	FUNCTION_91
0x4001e0b	            0x415c	                                 pop r12	     11803	option.c	FUNCTION_91
0x4001e0d	    0x488b15000000	            mov rdx, qword [0x04001e14] 	     11796	option.c	FUNCTION_91	ELSE_3	ELSE_5	IF_6
0x4001e14	          0x4531c0	                            xor r8d, r8d	     11796	option.c	FUNCTION_91	ELSE_3	ELSE_5	IF_6
0x4001e17	      0xb900100000	                         mov ecx, 0x1000	     11796	option.c	FUNCTION_91	ELSE_3	ELSE_5	IF_6
0x4001e1c	            0x31ff	                            xor edi, edi	     11796	option.c	FUNCTION_91	ELSE_3	ELSE_5	IF_6
0x4001e1e	      0xe900000000	                           jmp 0x4001e23	     11796	option.c	FUNCTION_91	ELSE_3	ELSE_5	IF_6
0x4001e23	       0xf1f440000	                   nop dword [rax + rax]	     11796	option.c	FUNCTION_91	ELSE_3	ELSE_5	IF_6
0x4001e28	              0x5b	                                 pop rbx	     11803	option.c	FUNCTION_91
0x4001e29	              0x5d	                                 pop rbp	     11803	option.c	FUNCTION_91
0x4001e2a	            0x415c	                                 pop r12	     11803	option.c	FUNCTION_91
0x4001e2c	    0x488b35000000	            mov rsi, qword [0x04001e33] 	     11799	option.c	FUNCTION_91	ELSE_3	ELSE_6	IF_7
0x4001e33	    0x488b3d000000	            mov rdi, qword [0x04001e3a] 	     11799	option.c	FUNCTION_91	ELSE_3	ELSE_6	IF_7
0x4001e3a	      0xba00100000	                         mov edx, 0x1000	     11799	option.c	FUNCTION_91	ELSE_3	ELSE_6	IF_7
0x4001e3f	      0xe900000000	                           jmp 0x4001e44	     11799	option.c	FUNCTION_91	ELSE_3	ELSE_6	IF_7
0x4001e44	         0xf1f4000	                         nop dword [rax]	     11799	option.c	FUNCTION_91	ELSE_3	ELSE_6	IF_7
0x4001e48	    0x488b05000000	            mov rax, qword [0x04001e4f] 	       110	string3.h	FUNCTION_143	CALL_3
0x4001e4f	      0xba2a000000	                           mov edx, 0x2a	       110	string3.h	FUNCTION_143	CALL_3
0x4001e54	    0xc7002a2a2a2a	            mov dword [rax], 0x2a2a2a2a 	       110	string3.h	FUNCTION_143	CALL_3
0x4001e5a	        0x66895004	                  mov word [rax + 4], dx	       110	string3.h	FUNCTION_143	CALL_3
0x4001e5e	      0xe957ffffff	                           jmp 0x4001dba	       110	string3.h	FUNCTION_143	CALL_3
0x4001e63	       0xf1f440000	                   nop dword [rax + rax]	       110	string3.h	FUNCTION_143	CALL_3
0x4001e68	          0x4885db	                           test rbx, rbx	     11780	option.c	FUNCTION_91	IF_1	ELSE_1	IF_3
0x4001e6b	     0xf84d0feffff	                            je 0x4001d41	     11780	option.c	FUNCTION_91	IF_1	ELSE_1	IF_3
0x4001e71	            0x89df	                            mov edi, ebx	     11781	option.c	FUNCTION_91	IF_1	ELSE_1	IF_3
0x4001e73	      0xe800000000	                          call 0x4001e78	     11781	option.c	FUNCTION_91	IF_1	ELSE_1	IF_3
0x4001e78	      0xe968ffffff	                           jmp 0x4001de5	     11781	option.c	FUNCTION_91	IF_1	ELSE_1	IF_3
check_stl_option	SWITCH,0:CALL,7:DO,0:WHILE,5:IF,14:functions,0:ELSE,0:FOR,0	141
0x4005570	            0x4154	                                push r12	      7877	option.c	FUNCTION_44
0x4005572	              0x55	                                push rbp	      7877	option.c	FUNCTION_44
0x4005573	          0x4531e4	                          xor r12d, r12d	      7879	option.c	FUNCTION_44
0x4005576	              0x53	                                push rbx	      7877	option.c	FUNCTION_44
0x4005577	           0xfb607	                   movzx eax, byte [rdi]	      7877	option.c	FUNCTION_44
0x400557a	          0x4889fb	                            mov rbx, rdi	      7877	option.c	FUNCTION_44
0x400557d	            0x31ed	                            xor ebp, ebp	      7878	option.c	FUNCTION_44
0x400557f	            0x84c0	                             test al, al	      7882	option.c	FUNCTION_44	WHILE_1
0x4005581	     0xf84bb000000	                            je 0x4005642	      7882	option.c	FUNCTION_44	WHILE_1
0x4005587	          0x83fd4f	                           cmp ebp, 0x4f	      7882	option.c	FUNCTION_44	WHILE_1
0x400558a	     0xf8f8e000000	                            jg 0x400561e	      7882	option.c	FUNCTION_44	WHILE_1
0x4005590	            0x3c25	                            cmp al, 0x25	      7885	option.c	FUNCTION_44	WHILE_1	WHILE_2
0x4005592	            0x7510	                           jne 0x40055a4	      7885	option.c	FUNCTION_44	WHILE_1	WHILE_2
0x4005594	            0xeb21	                           jmp 0x40055b7	      7885	option.c	FUNCTION_44	WHILE_1	WHILE_2
0x4005596	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7885	option.c	FUNCTION_44	WHILE_1	WHILE_2
0x40055a0	            0x3c25	                            cmp al, 0x25	      7885	option.c	FUNCTION_44	WHILE_1	WHILE_2
0x40055a2	            0x740b	                            je 0x40055af	      7885	option.c	FUNCTION_44	WHILE_1	WHILE_2
0x40055a4	        0x4883c301	                              add rbx, 1	      7886	option.c	FUNCTION_44	WHILE_1	WHILE_2
0x40055a8	           0xfb603	                   movzx eax, byte [rbx]	      7885	option.c	FUNCTION_44	WHILE_1	WHILE_2
0x40055ab	            0x84c0	                             test al, al	      7885	option.c	FUNCTION_44	WHILE_1	WHILE_2
0x40055ad	            0x75f1	                           jne 0x40055a0	      7885	option.c	FUNCTION_44	WHILE_1	WHILE_2
0x40055af	            0x84c0	                             test al, al	      7887	option.c	FUNCTION_44	WHILE_1	IF_1
0x40055b1	     0xf8495000000	                            je 0x400564c	      7887	option.c	FUNCTION_44	WHILE_1	IF_1
0x40055b7	         0xfb64301	               movzx eax, byte [rbx + 1]	      7890	option.c	FUNCTION_44	WHILE_1	IF_2
0x40055bb	          0x8d50db	                   lea edx, [rax - 0x25]	      7890	option.c	FUNCTION_44	WHILE_1	IF_2
0x40055be	          0x83e2fb	                     and edx, 0xfffffffb	      7890	option.c	FUNCTION_44	WHILE_1	IF_2
0x40055c1	          0x80fa01	                               cmp dl, 1	      7891	option.c	FUNCTION_44	WHILE_1	IF_2
0x40055c4	          0x8d50c4	                   lea edx, [rax - 0x3c]	      7892	option.c	FUNCTION_44	WHILE_1	IF_3
0x40055c7	          0x83ddff	             sbb ebp, 0xffffffffffffffff	      7891	option.c	FUNCTION_44	WHILE_1	IF_2
0x40055ca	          0x80fa01	                               cmp dl, 1	      7892	option.c	FUNCTION_44	WHILE_1	IF_3
0x40055cd	            0x7663	                           jbe 0x4005632	      7892	option.c	FUNCTION_44	WHILE_1	IF_3
0x40055cf	            0x3c25	                            cmp al, 0x25	      7892	option.c	FUNCTION_44	WHILE_1	IF_3
0x40055d1	            0x745f	                            je 0x4005632	      7892	option.c	FUNCTION_44	WHILE_1	IF_3
0x40055d3	            0x3c29	                            cmp al, 0x29	      7897	option.c	FUNCTION_44	WHILE_1	IF_4
0x40055d5	            0x7451	                            je 0x4005628	      7897	option.c	FUNCTION_44	WHILE_1	IF_4
0x40055d7	            0x3c2d	                            cmp al, 0x2d	      7904	option.c	FUNCTION_44	WHILE_1	IF_6
0x40055d9	     0xf84e1000000	                            je 0x40056c0	      7904	option.c	FUNCTION_44	WHILE_1	IF_6
0x40055df	        0x4883c301	                              add rbx, 1	      7889	option.c	FUNCTION_44	WHILE_1
0x40055e3	           0xfb6d0	                           movzx edx, al	      7906	option.c	FUNCTION_44	WHILE_1	WHILE_3	CALL_1
0x40055e6	          0x83ea30	                           sub edx, 0x30	      7906	option.c	FUNCTION_44	WHILE_1	WHILE_3	CALL_1
0x40055e9	          0x83fa09	                              cmp edx, 9	      7906	option.c	FUNCTION_44	WHILE_1	WHILE_3	CALL_1
0x40055ec	            0x7713	                            ja 0x4005601	      7906	option.c	FUNCTION_44	WHILE_1	WHILE_3	CALL_1
0x40055ee	            0x6690	                                     nop	      7906	option.c	FUNCTION_44	WHILE_1	WHILE_3	CALL_1
0x40055f0	        0x4883c301	                              add rbx, 1	      7907	option.c	FUNCTION_44	WHILE_1	WHILE_3
0x40055f4	           0xfb613	                   movzx edx, byte [rbx]	      7906	option.c	FUNCTION_44	WHILE_1	WHILE_3	CALL_1
0x40055f7	            0x89d0	                            mov eax, edx	      7906	option.c	FUNCTION_44	WHILE_1	WHILE_3	CALL_1
0x40055f9	          0x83ea30	                           sub edx, 0x30	      7906	option.c	FUNCTION_44	WHILE_1	WHILE_3	CALL_1
0x40055fc	          0x83fa09	                              cmp edx, 9	      7906	option.c	FUNCTION_44	WHILE_1	WHILE_3	CALL_1
0x40055ff	            0x76ef	                           jbe 0x40055f0	      7906	option.c	FUNCTION_44	WHILE_1	WHILE_3	CALL_1
0x4005601	            0x3c2a	                            cmp al, 0x2a	      7908	option.c	FUNCTION_44	WHILE_1	IF_7
0x4005603	            0x7482	                            je 0x4005587	      7908	option.c	FUNCTION_44	WHILE_1	IF_7
0x4005605	            0x3c2e	                            cmp al, 0x2e	      7910	option.c	FUNCTION_44	WHILE_1	IF_8
0x4005607	     0xf84c0000000	                            je 0x40056cd	      7910	option.c	FUNCTION_44	WHILE_1	IF_8
0x400560d	            0x3c28	                            cmp al, 0x28	      7916	option.c	FUNCTION_44	WHILE_1	IF_9
0x400560f	            0x7551	                           jne 0x4005662	      7916	option.c	FUNCTION_44	WHILE_1	IF_9
0x4005611	        0x4183c401	                             add r12d, 1	      7918	option.c	FUNCTION_44	WHILE_1	IF_9
0x4005615	          0x83fd4f	                           cmp ebp, 0x4f	      7882	option.c	FUNCTION_44	WHILE_1
0x4005618	     0xf8e72ffffff	                           jle 0x4005590	      7882	option.c	FUNCTION_44	WHILE_1
0x400561e	              0x5b	                                 pop rbx	      7939	option.c	FUNCTION_44
0x400561f	      0xb800000000	                              mov eax, 0	      7935	option.c	FUNCTION_44	CALL_6
0x4005624	              0x5d	                                 pop rbp	      7939	option.c	FUNCTION_44
0x4005625	            0x415c	                                 pop r12	      7939	option.c	FUNCTION_44
0x4005627	              0xc3	                                     ret	      7939	option.c	FUNCTION_44
0x4005628	        0x4183ec01	                             sub r12d, 1	      7900	option.c	FUNCTION_44	WHILE_1	IF_4	IF_5
0x400562c	        0x4183fcff	            cmp r12d, 0xffffffffffffffff	      7900	option.c	FUNCTION_44	WHILE_1	IF_4	IF_5
0x4005630	            0x7410	                            je 0x4005642	      7900	option.c	FUNCTION_44	WHILE_1	IF_4	IF_5
0x4005632	         0xfb64302	               movzx eax, byte [rbx + 2]	      7900	option.c	FUNCTION_44	WHILE_1	IF_4	IF_5
0x4005636	        0x4883c302	                              add rbx, 2	      7899	option.c	FUNCTION_44	WHILE_1	IF_4
0x400563a	            0x84c0	                             test al, al	      7882	option.c	FUNCTION_44	WHILE_1
0x400563c	     0xf8545ffffff	                           jne 0x4005587	      7882	option.c	FUNCTION_44	WHILE_1
0x4005642	          0x83fd4f	                           cmp ebp, 0x4f	      7934	option.c	FUNCTION_44	IF_13
0x4005645	      0xb800000000	                              mov eax, 0	      7935	option.c	FUNCTION_44	CALL_6
0x400564a	            0x7f11	                            jg 0x400565d	      7934	option.c	FUNCTION_44	IF_13
0x400564c	          0x4585e4	                         test r12d, r12d	      7937	option.c	FUNCTION_44	CALL_7
0x400564f	      0xba00000000	                              mov edx, 0	      7937	option.c	FUNCTION_44	CALL_7
0x4005654	      0xb800000000	                              mov eax, 0	      7937	option.c	FUNCTION_44	CALL_7
0x4005659	        0x480f44c2	                          cmove rax, rdx	      7937	option.c	FUNCTION_44	CALL_7
0x400565d	              0x5b	                                 pop rbx	      7939	option.c	FUNCTION_44
0x400565e	              0x5d	                                 pop rbp	      7939	option.c	FUNCTION_44
0x400565f	            0x415c	                                 pop r12	      7939	option.c	FUNCTION_44
0x4005661	              0xc3	                                     ret	      7939	option.c	FUNCTION_44
0x4005662	           0xfb6f0	                           movzx esi, al	      7921	option.c	FUNCTION_44	WHILE_1	IF_10	CALL_3
0x4005665	      0xbf00000000	                              mov edi, 0	      7921	option.c	FUNCTION_44	WHILE_1	IF_10	CALL_3
0x400566a	      0xe800000000	                          call 0x400566f	      7921	option.c	FUNCTION_44	WHILE_1	IF_10	CALL_3
0x400566f	          0x4885c0	                           test rax, rax	      7921	option.c	FUNCTION_44	WHILE_1	IF_10	CALL_3
0x4005672	     0xf8484000000	                            je 0x40056fc	      7921	option.c	FUNCTION_44	WHILE_1	IF_10	CALL_3
0x4005678	           0xfb603	                   movzx eax, byte [rbx]	      7925	option.c	FUNCTION_44	WHILE_1	IF_11
0x400567b	            0x3c7b	                            cmp al, 0x7b	      7925	option.c	FUNCTION_44	WHILE_1	IF_11
0x400567d	     0xf85fcfeffff	                           jne 0x400557f	      7925	option.c	FUNCTION_44	WHILE_1	IF_11
0x4005683	         0xfb64301	               movzx eax, byte [rbx + 1]	      7928	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x4005687	        0x488d5301	                      lea rdx, [rbx + 1]	      7927	option.c	FUNCTION_44	WHILE_1	IF_11
0x400568b	          0x4889d3	                            mov rbx, rdx	      7928	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x400568e	            0x84c0	                             test al, al	      7928	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x4005690	            0x741d	                            je 0x40056af	      7928	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x4005692	            0x3c7d	                            cmp al, 0x7d	      7928	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x4005694	            0x750e	                           jne 0x40056a4	      7928	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x4005696	            0xeb17	                           jmp 0x40056af	      7928	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x4005698	     0xf1f84000000	                   nop dword [rax + rax]	      7928	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x40056a0	            0x84c0	                             test al, al	      7928	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x40056a2	            0x740b	                            je 0x40056af	      7928	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x40056a4	        0x4883c301	                              add rbx, 1	      7929	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x40056a8	           0xfb603	                   movzx eax, byte [rbx]	      7928	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x40056ab	            0x3c7d	                            cmp al, 0x7d	      7928	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x40056ad	            0x75f1	                           jne 0x40056a0	      7928	option.c	FUNCTION_44	WHILE_1	IF_11	WHILE_5
0x40056af	            0x3c7d	                            cmp al, 0x7d	      7930	option.c	FUNCTION_44	WHILE_1	IF_11	IF_12
0x40056b1	     0xf84d0feffff	                            je 0x4005587	      7930	option.c	FUNCTION_44	WHILE_1	IF_11	IF_12
0x40056b7	      0xb800000000	                              mov eax, 0	      7931	option.c	FUNCTION_44	WHILE_1	IF_11	CALL_5
0x40056bc	            0xeb9f	                           jmp 0x400565d	      7931	option.c	FUNCTION_44	WHILE_1	IF_11	CALL_5
0x40056be	            0x6690	                                     nop	      7931	option.c	FUNCTION_44	WHILE_1	IF_11	CALL_5
0x40056c0	         0xfb64302	               movzx eax, byte [rbx + 2]	      7931	option.c	FUNCTION_44	WHILE_1	IF_11	CALL_5
0x40056c4	        0x4883c302	                              add rbx, 2	      7905	option.c	FUNCTION_44	WHILE_1	IF_6
0x40056c8	      0xe916ffffff	                           jmp 0x40055e3	      7905	option.c	FUNCTION_44	WHILE_1	IF_6
0x40056cd	         0xfb64301	               movzx eax, byte [rbx + 1]	      7913	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4	CALL_2
0x40056d1	        0x488d5301	                      lea rdx, [rbx + 1]	      7912	option.c	FUNCTION_44	WHILE_1	IF_8
0x40056d5	          0x4889d3	                            mov rbx, rdx	      7913	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4	CALL_2
0x40056d8	          0x8d48d0	                   lea ecx, [rax - 0x30]	      7913	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4	CALL_2
0x40056db	          0x80f909	                               cmp cl, 9	      7913	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4	CALL_2
0x40056de	     0xf8729ffffff	                            ja 0x400560d	      7913	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4	CALL_2
0x40056e4	         0xf1f4000	                         nop dword [rax]	      7913	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4	CALL_2
0x40056e8	        0x4883c301	                              add rbx, 1	      7914	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4
0x40056ec	           0xfb603	                   movzx eax, byte [rbx]	      7913	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4	CALL_2
0x40056ef	          0x8d50d0	                   lea edx, [rax - 0x30]	      7913	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4	CALL_2
0x40056f2	          0x80fa09	                               cmp dl, 9	      7913	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4	CALL_2
0x40056f5	            0x76f1	                           jbe 0x40056e8	      7913	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4	CALL_2
0x40056f7	      0xe911ffffff	                           jmp 0x400560d	      7913	option.c	FUNCTION_44	WHILE_1	IF_8	WHILE_4	CALL_2
0x40056fc	           0xfb63b	                   movzx edi, byte [rbx]	      5325	option.c	FUNCTION_18	CALL_2
0x40056ff	      0xe800000000	                          call 0x4005704	      5325	option.c	FUNCTION_18	CALL_2
0x4005704	      0xba05000000	                              mov edx, 5	      5324	option.c	FUNCTION_18	CALL_1
0x4005709	          0x4889c3	                            mov rbx, rax	      5325	option.c	FUNCTION_18	CALL_2
0x400570c	      0xbe00000000	                              mov esi, 0	      5324	option.c	FUNCTION_18	CALL_1
0x4005711	            0x31ff	                            xor edi, edi	      5324	option.c	FUNCTION_18	CALL_1
0x4005713	      0xe800000000	                          call 0x4005718	      5324	option.c	FUNCTION_18	CALL_1
0x4005718	          0x4989d8	                             mov r8, rbx	        33	stdio2.h	FUNCTION_120	CALL_1
0x400571b	          0x4889c1	                            mov rcx, rax	        33	stdio2.h	FUNCTION_120	CALL_1
0x400571e	      0xba50000000	                           mov edx, 0x50	        33	stdio2.h	FUNCTION_120	CALL_1
0x4005723	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_120	CALL_1
0x4005728	      0xbf00000000	                              mov edi, 0	        33	stdio2.h	FUNCTION_120	CALL_1
0x400572d	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_120	CALL_1
0x400572f	      0xe800000000	                          call 0x4005734	        33	stdio2.h	FUNCTION_120	CALL_1
0x4005734	      0xb800000000	                              mov eax, 0	      7923	option.c	FUNCTION_44	WHILE_1	IF_10	CALL_4
0x4005739	      0xe91fffffff	                           jmp 0x400565d	      7923	option.c	FUNCTION_44	WHILE_1	IF_10	CALL_4
vimrc_found	SWITCH,0:CALL,10:DO,0:WHILE,0:IF,6:functions,0:ELSE,1:FOR,1	293
0x400d240	            0x4157	                                push r15	     12196	option.c	FUNCTION_100
0x400d242	            0x4156	                                push r14	     12196	option.c	FUNCTION_100
0x400d244	            0x4155	                                push r13	     12196	option.c	FUNCTION_100
0x400d246	            0x4154	                                push r12	     12196	option.c	FUNCTION_100
0x400d248	          0x4989fc	                            mov r12, rdi	     12196	option.c	FUNCTION_100
0x400d24b	              0x55	                                push rbp	     12196	option.c	FUNCTION_100
0x400d24c	              0x53	                                push rbx	     12196	option.c	FUNCTION_100
0x400d24d	      0xbf00000000	                              mov edi, 0	     12256	option.c	FUNCTION_102	CALL_1
0x400d252	        0x4883ec28	                           sub rsp, 0x28	     12196	option.c	FUNCTION_100
0x400d256	    0x64488b042528	                mov rax, qword fs:[0x28]	     12196	option.c	FUNCTION_100
0x400d25f	      0x4889442418	             mov qword [rsp + 0x18], rax	     12196	option.c	FUNCTION_100
0x400d264	            0x31c0	                            xor eax, eax	     12196	option.c	FUNCTION_100
0x400d266	      0x4889742408	                mov qword [rsp + 8], rsi	     12196	option.c	FUNCTION_100
0x400d26b	    0xc74424140000	               mov dword [rsp + 0x14], 0	     12198	option.c	FUNCTION_100
0x400d273	      0xe8a830ffff	                     call sym.findoption	     12256	option.c	FUNCTION_102	CALL_1
0x400d278	            0x85c0	                           test eax, eax	     12257	option.c	FUNCTION_102	IF_1
0x400d27a	            0x7813	                            js 0x400d28f	     12257	option.c	FUNCTION_102	IF_1
0x400d27c	            0x4898	                                    cdqe	     12259	option.c	FUNCTION_102	IF_2
0x400d27e	        0x48c1e006	                              shl rax, 6	     12259	option.c	FUNCTION_102	IF_2
0x400d282	    0xf68000000000	                      test byte [rax], 1	     12259	option.c	FUNCTION_102	IF_2
0x400d289	     0xf85d1000000	                           jne 0x400d360	     12259	option.c	FUNCTION_102	IF_2
0x400d28f	    0xc70500000000	               mov dword [0x0400d299], 0	     12203	option.c	FUNCTION_100	IF_1
0x400d299	      0xbb00000000	                              mov ebx, 0	     12203	option.c	FUNCTION_100	IF_1
0x400d29e	            0x31ed	                            xor ebp, ebp	     12204	option.c	FUNCTION_100	IF_1	FOR_1	CALL_2
0x400d2a0	            0xeb0d	                           jmp 0x400d2af	     12204	option.c	FUNCTION_100	IF_1	FOR_1	CALL_2
0x400d2a2	    0x660f1f440000	                    nop word [rax + rax]	     12204	option.c	FUNCTION_100	IF_1	FOR_1	CALL_2
0x400d2a8	          0x83c501	                              add ebp, 1	     12204	option.c	FUNCTION_100	IF_1	FOR_1	CALL_2
0x400d2ab	        0x4883c340	                           add rbx, 0x40	     12204	option.c	FUNCTION_100	IF_1	FOR_1	CALL_2
0x400d2af	        0x488b43e0	             mov rax, qword [rbx - 0x20]	     12204	option.c	FUNCTION_100	IF_1	FOR_1	CALL_2
0x400d2b3	        0x4c8d73e0	                   lea r14, [rbx - 0x20]	     12204	option.c	FUNCTION_100	IF_1	FOR_1	CALL_2
0x400d2b7	          0x803874	                    cmp byte [rax], 0x74	     10375	option.c	FUNCTION_73
0x400d2ba	            0x747c	                            je 0x400d338	     10375	option.c	FUNCTION_73
0x400d2bc	        0x488b43f0	             mov rax, qword [rbx - 0x10]	     12205	option.c	FUNCTION_100	IF_1	FOR_1	IF_2
0x400d2c0	          0xf6c405	                              test ah, 5	     12205	option.c	FUNCTION_100	IF_1	FOR_1	IF_2
0x400d2c3	            0x75e3	                           jne 0x400d2a8	     12205	option.c	FUNCTION_100	IF_1	FOR_1	IF_2
0x400d2c5	            0x8b0b	                    mov ecx, dword [rbx]	     10538	option.c	FUNCTION_76	IF_3
0x400d2c7	          0xf6c510	                           test ch, 0x10	     10538	option.c	FUNCTION_76	IF_3
0x400d2ca	            0x89ca	                            mov edx, ecx	     10538	option.c	FUNCTION_76	IF_3
0x400d2cc	     0xf84de000000	                            je 0x400d3b0	     10538	option.c	FUNCTION_76	IF_3
0x400d2d2	    0x81f918500000	                         cmp ecx, 0x5018	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d2d8	     0xf84f4030000	                            je 0x400d6d2	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d2de	     0xf8754020000	                            ja 0x400d538	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d2e4	    0x81f906500000	                         cmp ecx, 0x5006	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d2ea	     0xf84f5030000	                            je 0x400d6e5	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d2f0	     0xf8692020000	                           jbe 0x400d588	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d2f6	    0x81f914500000	                         cmp ecx, 0x5014	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d2fc	    0x488b35000000	            mov rsi, qword [0x0400d303] 	     10559	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d303	     0xf84ef030000	                            je 0x400d6f8	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d309	     0xf87f1020000	                            ja 0x400d600	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d30f	    0x81f907500000	                         cmp ecx, 0x5007	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d315	     0xf8444040000	                            je 0x400d75f	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d31b	    0x81f910500000	                         cmp ecx, 0x5010	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d321	    0x4c8dbe481700	                 lea r15, [rsi + 0x1748]	     10566	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d328	     0xf8497000000	                            je 0x400d3c5	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d32e	      0xe9f6000000	                           jmp 0x400d429	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d333	       0xf1f440000	                   nop dword [rax + rax]	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d338	        0x8078015f	                cmp byte [rax + 1], 0x5f	     10375	option.c	FUNCTION_73
0x400d33c	     0xf857affffff	                           jne 0x400d2bc	     10375	option.c	FUNCTION_73
0x400d342	      0xe8b954ffff	                 call sym.didset_options	     12207	option.c	FUNCTION_100	IF_1	CALL_4
0x400d347	      0xe800000000	                          call 0x400d34c	      5614	option.c	FUNCTION_27	CALL_1
0x400d34c	      0xe86f31ffff	                  call sym.check_opt_wim	      5617	option.c	FUNCTION_27	CALL_2
0x400d351	      0xe8aa4dffff	  call sym.set_chars_option.constprop.22	      5619	option.c	FUNCTION_27	CALL_3
0x400d356	      0xe8e54fffff	  call sym.set_chars_option.constprop.23	      5621	option.c	FUNCTION_27	CALL_4
0x400d35b	      0xe8b034ffff	         call sym.check_clipboard_option	      5625	option.c	FUNCTION_27	CALL_5
0x400d360	          0x4d85e4	                           test r12, r12	     12211	option.c	FUNCTION_100	IF_3
0x400d363	            0x7424	                            je 0x400d389	     12211	option.c	FUNCTION_100	IF_3
0x400d365	      0x488b7c2408	                mov rdi, qword [rsp + 8]	     12213	option.c	FUNCTION_100	IF_3	CALL_6
0x400d36a	      0x488d742414	                   lea rsi, [rsp + 0x14]	     12213	option.c	FUNCTION_100	IF_3	CALL_6
0x400d36f	      0xe800000000	                          call 0x400d374	     12213	option.c	FUNCTION_100	IF_3	CALL_6
0x400d374	          0x4885c0	                           test rax, rax	     12214	option.c	FUNCTION_100	IF_3	IF_4
0x400d377	     0xf84fa030000	                            je 0x400d777	     12214	option.c	FUNCTION_100	IF_3	IF_4
0x400d37d	        0x8b542414	            mov edx, dword [rsp + 0x14] 	     12224	option.c	FUNCTION_100	IF_3	ELSE_1	IF_6
0x400d381	            0x85d2	                           test edx, edx	     12224	option.c	FUNCTION_100	IF_3	ELSE_1	IF_6
0x400d383	     0xf85c7020000	                           jne 0x400d650	     12224	option.c	FUNCTION_100	IF_3	ELSE_1	IF_6
0x400d389	      0x488b442418	            mov rax, qword [rsp + 0x18] 	     12227	option.c	FUNCTION_100
0x400d38e	    0x644833042528	                xor rax, qword fs:[0x28]	     12227	option.c	FUNCTION_100
0x400d397	     0xf850a040000	                           jne 0x400d7a7	     12227	option.c	FUNCTION_100
0x400d39d	        0x4883c428	                           add rsp, 0x28	     12227	option.c	FUNCTION_100
0x400d3a1	              0x5b	                                 pop rbx	     12227	option.c	FUNCTION_100
0x400d3a2	              0x5d	                                 pop rbp	     12227	option.c	FUNCTION_100
0x400d3a3	            0x415c	                                 pop r12	     12227	option.c	FUNCTION_100
0x400d3a5	            0x415d	                                 pop r13	     12227	option.c	FUNCTION_100
0x400d3a7	            0x415e	                                 pop r14	     12227	option.c	FUNCTION_100
0x400d3a9	            0x415f	                                 pop r15	     12227	option.c	FUNCTION_100
0x400d3ab	              0xc3	                                     ret	     12227	option.c	FUNCTION_100
0x400d3ac	         0xf1f4000	                         nop dword [rax]	     12227	option.c	FUNCTION_100
0x400d3b0	        0x488b7bf8	                mov rdi, qword [rbx - 8]	     10582	option.c	FUNCTION_76	CALL_3
0x400d3b4	          0x4889de	                            mov rsi, rbx	     10582	option.c	FUNCTION_76	CALL_3
0x400d3b7	      0xe89436ffff	                call sym.get_varp.isra.1	     10582	option.c	FUNCTION_76	CALL_3
0x400d3bc	            0x8b0b	                    mov ecx, dword [rbx]	     10582	option.c	FUNCTION_76	CALL_3
0x400d3be	          0x4989c7	                            mov r15, rax	     10582	option.c	FUNCTION_76	CALL_3
0x400d3c1	        0x488b43f0	             mov rax, qword [rbx - 0x10]	     10582	option.c	FUNCTION_76	CALL_3
0x400d3c5	          0x4d85ff	                           test r15, r15	      3773	option.c	FUNCTION_2	IF_1
0x400d3c8	            0x89ca	                            mov edx, ecx	      3773	option.c	FUNCTION_2	IF_1
0x400d3ca	            0x745d	                            je 0x400d429	      3773	option.c	FUNCTION_2	IF_1
0x400d3cc	          0x4889c2	                            mov rdx, rax	      3775	option.c	FUNCTION_2	IF_1
0x400d3cf	        0x48c1ea0a	                            shr rdx, 0xa	      3775	option.c	FUNCTION_2	IF_1
0x400d3d3	        0x4883f201	                              xor rdx, 1	      3775	option.c	FUNCTION_2	IF_1
0x400d3d7	          0x4189d5	                           mov r13d, edx	      3775	option.c	FUNCTION_2	IF_1
0x400d3da	        0x4183e501	                             and r13d, 1	      3775	option.c	FUNCTION_2	IF_1
0x400d3de	            0xa804	                              test al, 4	      3776	option.c	FUNCTION_2	IF_1	IF_2
0x400d3e0	            0x747e	                            je 0x400d460	      3776	option.c	FUNCTION_2	IF_1	IF_2
0x400d3e2	            0x85c9	                           test ecx, ecx	      3780	option.c	FUNCTION_2	IF_1	IF_2	IF_3
0x400d3e4	     0xf851e010000	                           jne 0x400d508	      3780	option.c	FUNCTION_2	IF_1	IF_2	IF_3
0x400d3ea	            0xa808	                              test al, 8	      3785	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1	IF_4
0x400d3ec	            0x7415	                            je 0x400d403	      3785	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1	IF_4
0x400d3ee	          0x498b3f	                    mov rdi, qword [r15]	      3786	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1	CALL_3
0x400d3f1	    0x483b3d000000	            cmp rdi, qword [0x0400d3f8] 	      5756	option.c	FUNCTION_30	IF_1
0x400d3f8	            0x7409	                            je 0x400d403	      5756	option.c	FUNCTION_30	IF_1
0x400d3fa	      0xe800000000	                          call 0x400d3ff	      5757	option.c	FUNCTION_30	CALL_1
0x400d3ff	        0x488b43f0	             mov rax, qword [rbx - 0x10]	      5757	option.c	FUNCTION_30	CALL_1
0x400d403	          0x4963d5	                        movsxd rdx, r13d	      3787	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x400d406	          0x4863cd	                         movsxd rcx, ebp	      3787	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x400d409	        0x4883e0f7	             and rax, 0xfffffffffffffff7	      3788	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x400d40d	      0x488d54ca04	              lea rdx, [rdx + rcx*8 + 4]	      3787	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x400d412	    0x488b14d50000	                  mov rdx, qword [rdx*8]	      3787	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x400d41a	          0x498917	                    mov qword [r15], rdx	      3787	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x400d41d	            0x8b13	                    mov edx, dword [rbx]	      3787	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x400d41f	    0x4825ffff7fff	             and rax, 0xffffffffff7fffff	      3822	option.c	FUNCTION_2	IF_1
0x400d425	        0x488943f0	             mov qword [rbx - 0x10], rax	      3822	option.c	FUNCTION_2	IF_1
0x400d429	    0x8b0500000000	            mov eax, dword [0x0400d42f] 	      3826	option.c	FUNCTION_2	CALL_8
0x400d42f	          0xf6c640	                           test dh, 0x40	      8112	option.c	FUNCTION_48	IF_2	IF_3
0x400d432	          0x894318	             mov dword [rbx + 0x18], eax	      8109	option.c	FUNCTION_48	IF_1
0x400d435	            0x7571	                           jne 0x400d4a8	      8112	option.c	FUNCTION_48	IF_2	IF_3
0x400d437	          0xf6c620	                           test dh, 0x20	      8114	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x400d43a	     0xf8468feffff	                            je 0x400d2a8	      8114	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x400d440	    0x488b0d000000	            mov rcx, qword [0x0400d447] 	      8115	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x400d447	    0x81e2ff0f0000	                          and edx, 0xfff	      8115	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x400d44d	    0x898491d00200	    mov dword [rcx + rdx*4 + 0x2d0], eax	      8115	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x400d454	      0xe94ffeffff	                           jmp 0x400d2a8	      8115	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x400d459	     0xf1f80000000	                         nop dword [rax]	      8115	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x400d460	            0xa802	                              test al, 2	      3791	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5
0x400d462	            0x7464	                            je 0x400d4c8	      3791	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5
0x400d464	    0x81f91c200000	                         cmp ecx, 0x201c	      3793	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	IF_6
0x400d46a	     0xf8441020000	                            je 0x400d6b1	      3793	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	IF_6
0x400d470	          0x4963d5	                        movsxd rdx, r13d	      3797	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3
0x400d473	          0x4863c5	                         movsxd rax, ebp	      3797	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3
0x400d476	      0xbe02000000	                              mov esi, 2	      3800	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x400d47b	      0x488d44c204	              lea rax, [rdx + rax*8 + 4]	      3797	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3
0x400d480	          0x4c89f7	                            mov rdi, r14	      3800	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x400d483	    0x488b04c50000	                  mov rax, qword [rax*8]	      3797	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3
0x400d48b	          0x498907	                    mov qword [r15], rax	      3797	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3
0x400d48e	      0xe8ed44ffff	                 call sym.get_varp_scope	      3800	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x400d493	          0x498b17	                    mov rdx, qword [r15]	      3801	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7
0x400d496	          0x488910	                    mov qword [rax], rdx	      3800	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x400d499	        0x488b43f0	             mov rax, qword [rbx - 0x10]	      3800	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x400d49d	      0xe97bffffff	                           jmp 0x400d41d	      3800	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x400d4a2	    0x660f1f440000	                    nop word [rax + rax]	      3800	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x400d4a8	    0x488b0d000000	            mov rcx, qword [0x0400d4af] 	      8113	option.c	FUNCTION_48	IF_2	IF_3
0x400d4af	    0x81e2ff0f0000	                          and edx, 0xfff	      8113	option.c	FUNCTION_48	IF_2	IF_3
0x400d4b5	    0x898491ac1200	  mov dword [rcx + rdx*4 + 0x12ac], eax 	      8113	option.c	FUNCTION_48	IF_2	IF_3
0x400d4bc	      0xe9e7fdffff	                           jmp 0x400d2a8	      8113	option.c	FUNCTION_48	IF_2	IF_3
0x400d4c1	     0xf1f80000000	                         nop dword [rax]	      8113	option.c	FUNCTION_48	IF_2	IF_3
0x400d4c8	          0x4963d5	                        movsxd rdx, r13d	      3808	option.c	FUNCTION_2	IF_1	ELSE_4
0x400d4cb	          0x4863c5	                         movsxd rax, ebp	      3808	option.c	FUNCTION_2	IF_1	ELSE_4
0x400d4ce	    0x81f933400000	                         cmp ecx, 0x4033	      3811	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8	CALL_6
0x400d4d4	      0x488d44c204	              lea rax, [rdx + rax*8 + 4]	      3808	option.c	FUNCTION_2	IF_1	ELSE_4
0x400d4d9	    0x488b04c50000	                  mov rax, qword [rax*8]	      3808	option.c	FUNCTION_2	IF_1	ELSE_4
0x400d4e1	          0x418907	                    mov dword [r15], eax	      3808	option.c	FUNCTION_2	IF_1	ELSE_4
0x400d4e4	     0xf84ae010000	                            je 0x400d698	      3811	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8	CALL_6
0x400d4ea	      0xbe02000000	                              mov esi, 2	      3816	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9	CALL_7
0x400d4ef	          0x4c89f7	                            mov rdi, r14	      3816	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9	CALL_7
0x400d4f2	      0xe88944ffff	                 call sym.get_varp_scope	      3816	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9	CALL_7
0x400d4f7	          0x418b17	                    mov edx, dword [r15]	      3817	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9
0x400d4fa	            0x8910	                    mov dword [rax], edx	      3816	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9	CALL_7
0x400d4fc	        0x488b43f0	             mov rax, qword [rbx - 0x10]	      3816	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9	CALL_7
0x400d500	      0xe918ffffff	                           jmp 0x400d41d	      3816	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9	CALL_7
0x400d505	           0xf1f00	                         nop dword [rax]	      3816	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9	CALL_7
0x400d508	          0x4963d5	                        movsxd rdx, r13d	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x400d50b	          0x4863c5	                         movsxd rax, ebp	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x400d50e	          0x4531c0	                            xor r8d, r8d	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x400d511	      0x488d44c204	              lea rax, [rdx + rax*8 + 4]	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x400d516	      0xb901000000	                              mov ecx, 1	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x400d51b	            0x89ee	                            mov esi, ebp	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x400d51d	            0x31ff	                            xor edi, edi	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x400d51f	    0x488b14c50000	                  mov rdx, qword [rax*8]	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x400d527	      0xe800000000	                          call 0x400d52c	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x400d52c	        0x488b43f0	             mov rax, qword [rbx - 0x10]	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x400d530	      0xe9e8feffff	                           jmp 0x400d41d	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x400d535	           0xf1f00	                         nop dword [rax]	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x400d538	    0x81f930500000	                         cmp ecx, 0x5030	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d53e	    0x488b35000000	            mov rsi, qword [0x0400d545] 	     10573	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d545	     0xf84b9010000	                            je 0x400d704	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d54b	            0x767b	                           jbe 0x400d5c8	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d54d	    0x81f947500000	                         cmp ecx, 0x5047	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d553	     0xf84b7010000	                            je 0x400d710	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d559	     0xf87c9000000	                            ja 0x400d628	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d55f	    0x81f931500000	                         cmp ecx, 0x5031	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d565	     0xf8400020000	                            je 0x400d76b	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d56b	    0x81f938500000	                         cmp ecx, 0x5038	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d571	    0x4c8dbe101600	                 lea r15, [rsi + 0x1610]	     10550	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d578	     0xf8447feffff	                            je 0x400d3c5	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d57e	      0xe9a6feffff	                           jmp 0x400d429	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d583	       0xf1f440000	                   nop dword [rax + rax]	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d588	    0x81f901500000	                         cmp ecx, 0x5001	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d58e	     0xf8488010000	                            je 0x400d71c	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d594	     0xf86db000000	                           jbe 0x400d675	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d59a	    0x81f903500000	                         cmp ecx, 0x5003	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d5a0	    0x488b35000000	            mov rsi, qword [0x0400d5a7] 	     10575	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d5a7	     0xf8419010000	                            je 0x400d6c6	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d5ad	    0x81f905500000	                         cmp ecx, 0x5005	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d5b3	    0x4c8dbe001600	                 lea r15, [rsi + 0x1600]	     10544	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d5ba	     0xf8405feffff	                            je 0x400d3c5	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d5c0	      0xe964feffff	                           jmp 0x400d429	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d5c5	           0xf1f00	                         nop dword [rax]	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d5c8	    0x81f91e500000	                         cmp ecx, 0x501e	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d5ce	     0xf845b010000	                            je 0x400d72f	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d5d4	     0xf8683000000	                           jbe 0x400d65d	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d5da	    0x81f91f500000	                         cmp ecx, 0x501f	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d5e0	     0xf8455010000	                            je 0x400d73b	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d5e6	    0x81f92e500000	                         cmp ecx, 0x502e	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d5ec	    0x4c8dbe181500	                 lea r15, [rsi + 0x1518]	     10549	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d5f3	     0xf84ccfdffff	                            je 0x400d3c5	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d5f9	      0xe92bfeffff	                           jmp 0x400d429	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d5fe	            0x6690	                                     nop	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d600	    0x81f915500000	                         cmp ecx, 0x5015	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d606	     0xf8447010000	                            je 0x400d753	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d60c	    0x81f917500000	                         cmp ecx, 0x5017	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d612	    0x4c8dbec01400	                 lea r15, [rsi + 0x14c0]	     10555	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d619	     0xf84a6fdffff	                            je 0x400d3c5	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d61f	      0xe905feffff	                           jmp 0x400d429	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d624	         0xf1f4000	                         nop dword [rax]	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d628	    0x81f948500000	                         cmp ecx, 0x5048	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d62e	     0xf8413010000	                            je 0x400d747	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d634	    0x81f94d500000	                         cmp ecx, 0x504d	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d63a	    0x4c8dbe481600	                 lea r15, [rsi + 0x1648]	     10571	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d641	     0xf847efdffff	                            je 0x400d3c5	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d647	      0xe9ddfdffff	                           jmp 0x400d429	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d64c	         0xf1f4000	                         nop dword [rax]	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d650	          0x4889c7	                            mov rdi, rax	     12225	option.c	FUNCTION_100	IF_3	ELSE_1	IF_6
0x400d653	      0xe800000000	                          call 0x400d658	     12225	option.c	FUNCTION_100	IF_3	ELSE_1	IF_6
0x400d658	      0xe92cfdffff	                           jmp 0x400d389	     12227	option.c	FUNCTION_100
0x400d65d	    0x81f91b500000	                         cmp ecx, 0x501b	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d663	    0x4c8dbe081600	                 lea r15, [rsi + 0x1608]	     10548	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d66a	     0xf8455fdffff	                            je 0x400d3c5	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d670	      0xe9b4fdffff	                           jmp 0x400d429	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d675	    0x488b35000000	            mov rsi, qword [0x0400d67c] 	     10569	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d67c	    0x81f921300000	                         cmp ecx, 0x3021	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d682	    0x4c8dbe800200	                  lea r15, [rsi + 0x280]	     10569	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d689	     0xf8436fdffff	                            je 0x400d3c5	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d68f	      0xe995fdffff	                           jmp 0x400d429	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d694	         0xf1f4000	                         nop dword [rax]	     10540	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d698	      0xe800000000	                          call 0x400d69d	      3811	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8	CALL_6
0x400d69d	            0x85c0	                           test eax, eax	      3811	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8	CALL_6
0x400d69f	     0xf8545feffff	                           jne 0x400d4ea	      3811	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8	CALL_6
0x400d6a5	    0x41c707000000	                      mov dword [r15], 0	      3812	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8
0x400d6ac	      0xe939feffff	                           jmp 0x400d4ea	      3812	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8
0x400d6b1	    0x488b3d000000	            mov rdi, qword [0x0400d6b8] 	      3794	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	CALL_4
0x400d6b8	      0xe800000000	                          call 0x400d6bd	      3794	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	CALL_4
0x400d6bd	        0x488b43f0	             mov rax, qword [rbx - 0x10]	      3794	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	CALL_4
0x400d6c1	      0xe957fdffff	                           jmp 0x400d41d	      3794	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	CALL_4
0x400d6c6	    0x4c8dbef81300	                 lea r15, [rsi + 0x13f8]	     10575	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d6cd	      0xe9f3fcffff	                           jmp 0x400d3c5	     10575	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d6d2	    0x488b35000000	            mov rsi, qword [0x0400d6d9] 	     10556	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d6d9	    0x4c8dbec81400	                 lea r15, [rsi + 0x14c8]	     10556	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d6e0	      0xe9e0fcffff	                           jmp 0x400d3c5	     10556	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d6e5	    0x488b35000000	            mov rsi, qword [0x0400d6ec] 	     10545	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d6ec	    0x4c8dbef01500	                 lea r15, [rsi + 0x15f0]	     10545	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d6f3	      0xe9cdfcffff	                           jmp 0x400d3c5	     10545	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d6f8	    0x4c8dbe381600	                 lea r15, [rsi + 0x1638]	     10559	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d6ff	      0xe9c1fcffff	                           jmp 0x400d3c5	     10559	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d704	    0x4c8dbe581600	                 lea r15, [rsi + 0x1658]	     10573	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d70b	      0xe9b5fcffff	                           jmp 0x400d3c5	     10573	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d710	    0x4c8dbe201600	                 lea r15, [rsi + 0x1620]	     10552	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d717	      0xe9a9fcffff	                           jmp 0x400d3c5	     10552	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d71c	    0x488b35000000	            mov rsi, qword [0x0400d723] 	     10551	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d723	    0x4c8dbe181600	                 lea r15, [rsi + 0x1618]	     10551	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d72a	      0xe996fcffff	                           jmp 0x400d3c5	     10551	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d72f	    0x4c8dbef81400	                 lea r15, [rsi + 0x14f8]	     10542	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d736	      0xe98afcffff	                           jmp 0x400d3c5	     10542	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d73b	    0x4c8dbe381700	                 lea r15, [rsi + 0x1738]	     10563	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d742	      0xe97efcffff	                           jmp 0x400d3c5	     10563	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d747	    0x4c8dbe281600	                 lea r15, [rsi + 0x1628]	     10553	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d74e	      0xe972fcffff	                           jmp 0x400d3c5	     10553	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d753	    0x4c8dbe401600	                 lea r15, [rsi + 0x1640]	     10560	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d75a	      0xe966fcffff	                           jmp 0x400d3c5	     10560	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d75f	    0x4c8dbef81500	                 lea r15, [rsi + 0x15f8]	     10546	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d766	      0xe95afcffff	                           jmp 0x400d3c5	     10546	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d76b	    0x4c8dbe281500	                 lea r15, [rsi + 0x1528]	     10577	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d772	      0xe94efcffff	                           jmp 0x400d3c5	     10577	option.c	FUNCTION_76	IF_3	SWITCH_1
0x400d777	            0x31f6	                            xor esi, esi	     12217	option.c	FUNCTION_100	IF_3	IF_4	CALL_7
0x400d779	          0x4c89e7	                            mov rdi, r12	     12217	option.c	FUNCTION_100	IF_3	IF_4	CALL_7
0x400d77c	      0xe800000000	                          call 0x400d781	     12217	option.c	FUNCTION_100	IF_3	IF_4	CALL_7
0x400d781	          0x4885c0	                           test rax, rax	     12218	option.c	FUNCTION_100	IF_3	IF_4	IF_5
0x400d784	          0x4889c3	                            mov rbx, rax	     12217	option.c	FUNCTION_100	IF_3	IF_4	CALL_7
0x400d787	     0xf84fcfbffff	                            je 0x400d389	     12218	option.c	FUNCTION_100	IF_3	IF_4	IF_5
0x400d78d	      0x488b7c2408	                mov rdi, qword [rsp + 8]	     12220	option.c	FUNCTION_100	IF_3	IF_4	IF_5	CALL_8
0x400d792	          0x4889c6	                            mov rsi, rax	     12220	option.c	FUNCTION_100	IF_3	IF_4	IF_5	CALL_8
0x400d795	      0xe800000000	                          call 0x400d79a	     12220	option.c	FUNCTION_100	IF_3	IF_4	IF_5	CALL_8
0x400d79a	          0x4889df	                            mov rdi, rbx	     12221	option.c	FUNCTION_100	IF_3	IF_4	IF_5	CALL_9
0x400d79d	      0xe800000000	                          call 0x400d7a2	     12221	option.c	FUNCTION_100	IF_3	IF_4	IF_5	CALL_9
0x400d7a2	      0xe9e2fbffff	                           jmp 0x400d389	     12221	option.c	FUNCTION_100	IF_3	IF_4	IF_5	CALL_9
0x400d7a7	      0xe800000000	                          call 0x400d7ac	     12227	option.c	FUNCTION_100
get_encoding_default	SWITCH,0:CALL,1:DO,0:WHILE,0:IF,1:functions,0:ELSE,0:FOR,0	13
0x4005a20	        0x4883ec08	                              sub rsp, 8	      9817	option.c	FUNCTION_59
0x4005a24	      0xbf00000000	                              mov edi, 0	      9820	option.c	FUNCTION_59	CALL_1
0x4005a29	      0xe8f2a8ffff	                     call sym.findoption	      9820	option.c	FUNCTION_59	CALL_1
0x4005a2e	            0x85c0	                           test eax, eax	      9821	option.c	FUNCTION_59	IF_1
0x4005a30	            0x7816	                            js 0x4005a48	      9821	option.c	FUNCTION_59	IF_1
0x4005a32	            0x4898	                                    cdqe	      9822	option.c	FUNCTION_59	IF_1
0x4005a34	        0x48c1e006	                              shl rax, 6	      9822	option.c	FUNCTION_59	IF_1
0x4005a38	    0x488b80000000	                    mov rax, qword [rax]	      9822	option.c	FUNCTION_59	IF_1
0x4005a3f	        0x4883c408	                              add rsp, 8	      9824	option.c	FUNCTION_59
0x4005a43	              0xc3	                                     ret	      9824	option.c	FUNCTION_59
0x4005a44	         0xf1f4000	                         nop dword [rax]	      9824	option.c	FUNCTION_59
0x4005a48	            0x31c0	                            xor eax, eax	      9823	option.c	FUNCTION_59
0x4005a4a	            0xebf3	                           jmp 0x4005a3f	      9823	option.c	FUNCTION_59
makeset	SWITCH,0:CALL,11:DO,0:WHILE,0:IF,19:functions,0:ELSE,3:FOR,3	333
0x4005a50	            0x4157	                                push r15	     10047	option.c	FUNCTION_64
0x4005a52	            0x4156	                                push r14	     10047	option.c	FUNCTION_64
0x4005a54	            0x89f0	                            mov eax, esi	     10047	option.c	FUNCTION_64
0x4005a56	            0x4155	                                push r13	     10047	option.c	FUNCTION_64
0x4005a58	            0x4154	                                push r12	     10047	option.c	FUNCTION_64
0x4005a5a	          0x83e002	                              and eax, 2	     10070	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_2
0x4005a5d	              0x55	                                push rbp	     10047	option.c	FUNCTION_64
0x4005a5e	              0x53	                                push rbx	     10047	option.c	FUNCTION_64
0x4005a5f	          0x4989ff	                            mov r15, rdi	     10047	option.c	FUNCTION_64
0x4005a62	        0x4883ec48	                           sub rsp, 0x48	     10047	option.c	FUNCTION_64
0x4005a66	        0x8944241c	             mov dword [rsp + 0x1c], eax	     10070	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_2
0x4005a6a	            0x89f0	                            mov eax, esi	     10089	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_7
0x4005a6c	    0xc74424200100	               mov dword [rsp + 0x20], 1	     10062	option.c	FUNCTION_64	FOR_1
0x4005a74	          0x83e004	                              and eax, 4	     10089	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_7
0x4005a77	        0x89742424	             mov dword [rsp + 0x24], esi	     10047	option.c	FUNCTION_64
0x4005a7b	        0x8954242c	             mov dword [rsp + 0x2c], edx	     10047	option.c	FUNCTION_64
0x4005a7f	        0x89442428	             mov dword [rsp + 0x28], eax	     10089	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_7
0x4005a83	        0x8b442420	            mov eax, dword [rsp + 0x20] 	     10089	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_7
0x4005a87	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	     10047	option.c	FUNCTION_64
0x4005a90	      0x48894c2438	             mov qword [rsp + 0x38], rcx	     10047	option.c	FUNCTION_64
0x4005a95	            0x31c9	                            xor ecx, ecx	     10047	option.c	FUNCTION_64
0x4005a97	    0x48c744240800	                  mov qword [rsp + 8], 0	     10051	option.c	FUNCTION_64
0x4005aa0	          0x83f001	                              xor eax, 1	     10067	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x4005aa3	      0xbb00000000	                              mov ebx, 0	     10141	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15
0x4005aa8	          0x83e001	                              and eax, 1	     10067	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x4005aab	        0x8844241b	               mov byte [rsp + 0x1b], al	     10067	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x4005aaf	          0x488b03	                    mov rax, qword [rbx]	     10067	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x4005ab2	          0x803874	                    cmp byte [rax], 0x74	     10375	option.c	FUNCTION_73
0x4005ab5	     0xf84a5020000	                            je 0x4005d60	     10375	option.c	FUNCTION_73
0x4005abb	       0xf1f440000	                   nop dword [rax + rax]	     10375	option.c	FUNCTION_73
0x4005ac0	        0x488b4310	            mov rax, qword [rbx + 0x10] 	     10065	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x4005ac4	          0xf6c402	                              test ah, 2	     10065	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x4005ac7	     0xf8583020000	                           jne 0x4005d50	     10065	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x4005acd	          0x4889c2	                            mov rdx, rax	     10067	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x4005ad0	        0x48c1ea18	                           shr rdx, 0x18	     10067	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x4005ad4	          0x83e201	                              and edx, 1	     10067	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x4005ad7	        0x3854241b	               cmp byte [rsp + 0x1b], dl	     10067	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x4005adb	     0xf846f020000	                            je 0x4005d50	     10067	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x4005ae1	        0x448b5320	           mov r10d, dword [rbx + 0x20] 	     10070	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_2
0x4005ae5	          0x4585d2	                         test r10d, r10d	     10070	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_2
0x4005ae8	     0xf851a020000	                           jne 0x4005d08	     10070	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_2
0x4005aee	      0x448b4c241c	            mov r9d, dword [rsp + 0x1c] 	     10070	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_2
0x4005af3	          0x4585c9	                           test r9d, r9d	     10070	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_2
0x4005af6	     0xf8454020000	                            je 0x4005d50	     10070	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_2
0x4005afc	      0xa900002000	                      test eax, 0x200000	     10075	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_3
0x4005b01	     0xf8549020000	                           jne 0x4005d50	     10075	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_3
0x4005b07	        0x8b742424	            mov esi, dword [rsp + 0x24] 	     10079	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	CALL_3
0x4005b0b	          0x4889df	                            mov rdi, rbx	     10079	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	CALL_3
0x4005b0e	      0xe86dbeffff	                 call sym.get_varp_scope	     10079	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	CALL_3
0x4005b13	          0x4885c0	                           test rax, rax	      9972	option.c	FUNCTION_62	IF_1
0x4005b16	          0x4989c5	                            mov r13, rax	     10079	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	CALL_3
0x4005b19	     0xf8431020000	                            je 0x4005d50	      9972	option.c	FUNCTION_62	IF_1
0x4005b1f	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      9974	option.c	FUNCTION_62
0x4005b23	            0x31c0	                            xor eax, eax	      9974	option.c	FUNCTION_62
0x4005b25	          0xf6c604	                              test dh, 4	      9974	option.c	FUNCTION_62
0x4005b28	            0x750d	                           jne 0x4005b37	      9974	option.c	FUNCTION_62
0x4005b2a	    0x8b3d00000000	            mov edi, dword [0x04005b30] 	      9974	option.c	FUNCTION_62
0x4005b30	            0x31c0	                            xor eax, eax	      9974	option.c	FUNCTION_62
0x4005b32	            0x85ff	                           test edi, edi	      9974	option.c	FUNCTION_62
0x4005b34	           0xf94c0	                                 sete al	      9974	option.c	FUNCTION_62
0x4005b37	        0x4883c004	                              add rax, 4	      9976	option.c	FUNCTION_62	IF_2
0x4005b3b	          0xf6c202	                              test dl, 2	      9975	option.c	FUNCTION_62	IF_2
0x4005b3e	     0xf8564030000	                           jne 0x4005ea8	      9975	option.c	FUNCTION_62	IF_2
0x4005b44	          0x83e201	                              and edx, 1	      9977	option.c	FUNCTION_62	IF_3
0x4005b47	     0xf856f030000	                           jne 0x4005ebc	      9977	option.c	FUNCTION_62	IF_3
0x4005b4d	      0x488b74c308	       mov rsi, qword [rbx + rax*8 + 8] 	      9982	option.c	FUNCTION_62	CALL_1
0x4005b52	        0x498b7d00	                    mov rdi, qword [r13]	      9982	option.c	FUNCTION_62	CALL_1
0x4005b56	      0xe800000000	                          call 0x4005b5b	      9982	option.c	FUNCTION_62	CALL_1
0x4005b5b	            0x85c0	                           test eax, eax	      9982	option.c	FUNCTION_62	CALL_1
0x4005b5d	           0xf94c0	                                 sete al	      9982	option.c	FUNCTION_62	CALL_1
0x4005b60	           0xfb6c0	                           movzx eax, al	      9982	option.c	FUNCTION_62	CALL_1
0x4005b63	            0x85c0	                           test eax, eax	     10080	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_4	CALL_4
0x4005b65	     0xf85e5010000	                           jne 0x4005d50	     10080	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_4	CALL_4
0x4005b6b	          0x8b7320	            mov esi, dword [rbx + 0x20] 	     10084	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5
0x4005b6e	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	     10084	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5
0x4005b72	            0x85f6	                           test esi, esi	     10084	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5
0x4005b74	     0xf85b8010000	                           jne 0x4005d32	     10084	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5
0x4005b7a	    0x660f1f440000	                    nop word [rax + rax]	     10084	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5
0x4005b80	            0x85c0	                           test eax, eax	     10084	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5
0x4005b82	        0x4c8b7310	            mov r14, qword [rbx + 0x10] 	     10084	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5
0x4005b86	      0xbd02000000	                              mov ebp, 2	     10083	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x4005b8b	       0xf9544241a	                 setne byte [rsp + 0x1a]	     10083	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x4005b90	      0xe9e5000000	                           jmp 0x4005c7a	     10083	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x4005b95	           0xf1f00	                         nop dword [rax]	     10083	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x4005b98	        0x41f6c602	                            test r14b, 2	     10120	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13
0x4005b9c	     0xf854e020000	                           jne 0x4005df0	     10120	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13
0x4005ba2	          0x8b4320	            mov eax, dword [rbx + 0x20] 	     10133	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15
0x4005ba5	      0x3d3f400000	                         cmp eax, 0x403f	     10131	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15
0x4005baa	     0xf84f0010000	                            je 0x4005da0	     10131	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15
0x4005bb0	          0x4531e4	                          xor r12d, r12d	     10127	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3
0x4005bb3	      0x3d24400000	                         cmp eax, 0x4024	     10131	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15
0x4005bb8	     0xf84e2010000	                            je 0x4005da0	     10131	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15
0x4005bbe	          0x4c8b03	                     mov r8, qword [rbx]	        97	stdio2.h	CALL_61
0x4005bc1	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_61
0x4005bc3	          0x4c89d1	                            mov rcx, r10	        97	stdio2.h	CALL_61
0x4005bc6	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_61
0x4005bcb	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_61
0x4005bd0	          0x4c89ff	                            mov rdi, r15	        97	stdio2.h	CALL_61
0x4005bd3	      0xe800000000	                          call 0x4005bd8	        97	stdio2.h	CALL_61
0x4005bd8	            0x85c0	                           test eax, eax	     10197	option.c	FUNCTION_66	IF_1
0x4005bda	     0xf8800010000	                            js 0x4005ce0	     10197	option.c	FUNCTION_66	IF_1
0x4005be0	        0x498b7500	                    mov rsi, qword [r13]	     10199	option.c	FUNCTION_66	IF_2
0x4005be4	          0x4885f6	                           test rsi, rsi	     10199	option.c	FUNCTION_66	IF_2
0x4005be7	            0x7463	                            je 0x4005c4c	     10199	option.c	FUNCTION_66	IF_2
0x4005be9	    0x4981fd000000	                              cmp r13, 0	     10204	option.c	FUNCTION_66	IF_2	IF_3
0x4005bf0	     0xf845a020000	                            je 0x4005e50	     10204	option.c	FUNCTION_66	IF_2	IF_3
0x4005bf6	        0x4183e610	                          and r14d, 0x10	     10211	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5
0x4005bfa	     0xf8410020000	                            je 0x4005e10	     10211	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5
0x4005c00	      0xbf00100000	                         mov edi, 0x1000	     10213	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_3
0x4005c05	      0xe800000000	                          call 0x4005c0a	     10213	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_3
0x4005c0a	          0x4885c0	                           test rax, rax	     10214	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_6
0x4005c0d	          0x4989c6	                            mov r14, rax	     10213	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_3
0x4005c10	     0xf84ca000000	                            je 0x4005ce0	     10214	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_6
0x4005c16	        0x498b7500	                    mov rsi, qword [r13]	     10216	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_4
0x4005c1a	          0x4531c0	                            xor r8d, r8d	     10216	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_4
0x4005c1d	          0x4889c2	                            mov rdx, rax	     10216	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_4
0x4005c20	            0x31ff	                            xor edi, edi	     10216	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_4
0x4005c22	      0xb900100000	                         mov ecx, 0x1000	     10216	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_4
0x4005c27	      0xe800000000	                          call 0x4005c2c	     10216	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_4
0x4005c2c	      0xba02000000	                              mov edx, 2	     10217	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_7	CALL_5
0x4005c31	          0x4c89f6	                            mov rsi, r14	     10217	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_7	CALL_5
0x4005c34	          0x4c89ff	                            mov rdi, r15	     10217	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_7	CALL_5
0x4005c37	      0xe800000000	                          call 0x4005c3c	     10217	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_7	CALL_5
0x4005c3c	            0x85c0	                           test eax, eax	     10217	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_7	CALL_5
0x4005c3e	     0xf8454020000	                            je 0x4005e98	     10217	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_7	CALL_5
0x4005c44	          0x4c89f7	                            mov rdi, r14	     10222	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_7
0x4005c47	      0xe800000000	                          call 0x4005c4c	     10222	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	CALL_7
0x4005c4c	          0x4c89ff	                            mov rdi, r15	     10227	option.c	FUNCTION_66	IF_9	CALL_9
0x4005c4f	      0xe800000000	                          call 0x4005c54	     10227	option.c	FUNCTION_66	IF_9	CALL_9
0x4005c54	            0x85c0	                           test eax, eax	     10227	option.c	FUNCTION_66	IF_9	CALL_9
0x4005c56	     0xf8884000000	                            js 0x4005ce0	     10227	option.c	FUNCTION_66	IF_9	CALL_9
0x4005c5c	          0x4585e4	                         test r12d, r12d	     10146	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_18
0x4005c5f	     0xf85cb010000	                           jne 0x4005e30	     10146	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_18
0x4005c65	          0x83c501	                              add ebp, 1	     10108	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3
0x4005c68	          0x83fd03	                              cmp ebp, 3	     10108	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3
0x4005c6b	     0xf84df000000	                            je 0x4005d50	     10108	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3
0x4005c71	        0x4c8b7310	            mov r14, qword [rbx + 0x10] 	     10108	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3
0x4005c75	      0x4c8b6c2408	                mov r13, qword [rsp + 8]	     10108	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3
0x4005c7a	          0x83fd01	                              cmp ebp, 1	     10110	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	IF_10
0x4005c7d	     0xf840d010000	                            je 0x4005d90	     10110	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	IF_10
0x4005c83	      0x807c241a00	                cmp byte [rsp + 0x1a], 0	     10110	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	IF_10
0x4005c88	    0x41ba00000000	                             mov r10d, 0	     10113	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1
0x4005c8e	     0xf85fc000000	                           jne 0x4005d90	     10110	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	IF_10
0x4005c94	        0x41f6c601	                            test r14b, 1	     10115	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11
0x4005c98	     0xf84fafeffff	                            je 0x4005b98	     10115	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_1	IF_11
0x4005c9e	        0x418b4500	                    mov eax, dword [r13]	     10263	option.c	FUNCTION_68	IF_1
0x4005ca2	            0x85c0	                           test eax, eax	     10263	option.c	FUNCTION_68	IF_1
0x4005ca4	            0x78bf	                            js 0x4005c65	     10263	option.c	FUNCTION_68	IF_1
0x4005ca6	          0x4c8b0b	                     mov r9, qword [rbx]	        97	stdio2.h	CALL_61
0x4005ca9	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_61
0x4005cae	    0x41b800000000	                              mov r8d, 0	        97	stdio2.h	CALL_61
0x4005cb4	        0x4c0f44c0	                           cmove r8, rax	        97	stdio2.h	CALL_61
0x4005cb8	          0x4c89d1	                            mov rcx, r10	        97	stdio2.h	CALL_61
0x4005cbb	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_61
0x4005cbd	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_61
0x4005cc2	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_61
0x4005cc7	          0x4c89ff	                            mov rdi, r15	        97	stdio2.h	CALL_61
0x4005cca	      0xe800000000	                          call 0x4005ccf	        97	stdio2.h	CALL_61
0x4005ccf	            0x85c0	                           test eax, eax	     10265	option.c	FUNCTION_68	IF_2
0x4005cd1	            0x780d	                            js 0x4005ce0	     10265	option.c	FUNCTION_68	IF_2
0x4005cd3	          0x4c89ff	                            mov rdi, r15	     10266	option.c	FUNCTION_68	IF_2	CALL_1
0x4005cd6	      0xe800000000	                          call 0x4005cdb	     10266	option.c	FUNCTION_68	IF_2	CALL_1
0x4005cdb	            0x85c0	                           test eax, eax	     10266	option.c	FUNCTION_68	IF_2	CALL_1
0x4005cdd	            0x7986	                           jns 0x4005c65	     10266	option.c	FUNCTION_68	IF_2	CALL_1
0x4005cdf	              0x90	                                     nop	     10266	option.c	FUNCTION_68	IF_2	CALL_1
0x4005ce0	            0x31c0	                            xor eax, eax	     10145	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_17
0x4005ce2	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	     10156	option.c	FUNCTION_64
0x4005ce7	    0x6448330c2528	                xor rcx, qword fs:[0x28]	     10156	option.c	FUNCTION_64
0x4005cf0	     0xf8586020000	                           jne 0x4005f7c	     10156	option.c	FUNCTION_64
0x4005cf6	        0x4883c448	                           add rsp, 0x48	     10156	option.c	FUNCTION_64
0x4005cfa	              0x5b	                                 pop rbx	     10156	option.c	FUNCTION_64
0x4005cfb	              0x5d	                                 pop rbp	     10156	option.c	FUNCTION_64
0x4005cfc	            0x415c	                                 pop r12	     10156	option.c	FUNCTION_64
0x4005cfe	            0x415d	                                 pop r13	     10156	option.c	FUNCTION_64
0x4005d00	            0x415e	                                 pop r14	     10156	option.c	FUNCTION_64
0x4005d02	            0x415f	                                 pop r15	     10156	option.c	FUNCTION_64
0x4005d04	              0xc3	                                     ret	     10156	option.c	FUNCTION_64
0x4005d05	           0xf1f00	                         nop dword [rax]	     10156	option.c	FUNCTION_64
0x4005d08	      0x448b44241c	            mov r8d, dword [rsp + 0x1c] 	     10075	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_3
0x4005d0d	          0x4585c0	                           test r8d, r8d	     10075	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_3
0x4005d10	     0xf85e6fdffff	                           jne 0x4005afc	     10075	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_3
0x4005d16	        0x8b742424	            mov esi, dword [rsp + 0x24] 	     10079	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	CALL_3
0x4005d1a	          0x4889df	                            mov rdi, rbx	     10079	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	CALL_3
0x4005d1d	      0xe85ebcffff	                 call sym.get_varp_scope	     10079	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	CALL_3
0x4005d22	          0x8b7320	            mov esi, dword [rbx + 0x20] 	     10084	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5
0x4005d25	          0x4989c5	                            mov r13, rax	     10079	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	CALL_3
0x4005d28	            0x31c0	                            xor eax, eax	     10079	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	CALL_3
0x4005d2a	            0x85f6	                           test esi, esi	     10084	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5
0x4005d2c	     0xf844efeffff	                            je 0x4005b80	     10084	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5
0x4005d32	      0x48837b18ff	cmp qword [rbx + 0x18], 0xffffffffffffffff	     10086	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6
0x4005d37	     0xf8543feffff	                           jne 0x4005b80	     10086	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6
0x4005d3d	        0x8b4c2428	            mov ecx, dword [rsp + 0x28] 	     10089	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_7
0x4005d41	            0x85c9	                           test ecx, ecx	     10089	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_7
0x4005d43	     0xf8586010000	                           jne 0x4005ecf	     10089	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_7
0x4005d49	     0xf1f80000000	                         nop dword [rax]	     10089	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_7
0x4005d50	        0x4883c340	                           add rbx, 0x40	     10064	option.c	FUNCTION_64	FOR_1	FOR_2	CALL_1
0x4005d54	          0x488b03	                    mov rax, qword [rbx]	     10064	option.c	FUNCTION_64	FOR_1	FOR_2	CALL_1
0x4005d57	          0x803874	                    cmp byte [rax], 0x74	     10375	option.c	FUNCTION_73
0x4005d5a	     0xf8560fdffff	                           jne 0x4005ac0	     10375	option.c	FUNCTION_73
0x4005d60	        0x8078015f	                cmp byte [rax + 1], 0x5f	     10375	option.c	FUNCTION_73
0x4005d64	     0xf8556fdffff	                           jne 0x4005ac0	     10375	option.c	FUNCTION_73
0x4005d6a	      0x836c242001	               sub dword [rsp + 0x20], 1	     10062	option.c	FUNCTION_64	FOR_1
0x4005d6f	        0x8b442420	            mov eax, dword [rsp + 0x20] 	     10062	option.c	FUNCTION_64	FOR_1
0x4005d73	          0x83f8ff	             cmp eax, 0xffffffffffffffff	     10062	option.c	FUNCTION_64	FOR_1
0x4005d76	     0xf8524fdffff	                           jne 0x4005aa0	     10062	option.c	FUNCTION_64	FOR_1
0x4005d7c	      0xb801000000	                              mov eax, 1	     10155	option.c	FUNCTION_64
0x4005d81	      0xe95cffffff	                           jmp 0x4005ce2	     10155	option.c	FUNCTION_64
0x4005d86	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     10155	option.c	FUNCTION_64
0x4005d90	    0x41ba00000000	                             mov r10d, 0	     10111	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	IF_10
0x4005d96	      0xe9f9feffff	                           jmp 0x4005c94	     10111	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	IF_10
0x4005d9b	       0xf1f440000	                   nop dword [rax + rax]	     10111	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	IF_10
0x4005da0	        0x4d8b4500	                     mov r8, qword [r13]	        97	stdio2.h	CALL_61
0x4005da4	          0x488b0b	                    mov rcx, qword [rbx]	        97	stdio2.h	CALL_61
0x4005da7	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_61
0x4005da9	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_61
0x4005dae	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_61
0x4005db3	          0x4c89ff	                            mov rdi, r15	        97	stdio2.h	CALL_61
0x4005db6	      0x4c89542410	             mov qword [rsp + 0x10], r10	        97	stdio2.h	CALL_61
0x4005dbb	      0xe800000000	                          call 0x4005dc0	        97	stdio2.h	CALL_61
0x4005dc0	            0x85c0	                           test eax, eax	     10137	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16
0x4005dc2	     0xf8818ffffff	                            js 0x4005ce0	     10137	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16
0x4005dc8	          0x4c89ff	                            mov rdi, r15	     10139	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16	CALL_9
0x4005dcb	      0xe800000000	                          call 0x4005dd0	     10139	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16	CALL_9
0x4005dd0	            0x85c0	                           test eax, eax	     10139	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16	CALL_9
0x4005dd2	     0xf8808ffffff	                            js 0x4005ce0	     10139	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16	CALL_9
0x4005dd8	        0x4c8b7310	            mov r14, qword [rbx + 0x10] 	     10139	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15	IF_16	CALL_9
0x4005ddc	    0x41bc01000000	                             mov r12d, 1	     10141	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15
0x4005de2	      0x4c8b542410	            mov r10, qword [rsp + 0x10] 	     10141	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15
0x4005de7	      0xe9d2fdffff	                           jmp 0x4005bbe	     10141	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15
0x4005dec	         0xf1f4000	                         nop dword [rax]	     10141	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_15
0x4005df0	          0x488b13	                    mov rdx, qword [rbx]	     10122	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14	CALL_8
0x4005df3	          0x4c89e9	                            mov rcx, r13	     10122	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14	CALL_8
0x4005df6	          0x4c89d6	                            mov rsi, r10	     10122	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14	CALL_8
0x4005df9	          0x4c89ff	                            mov rdi, r15	     10122	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14	CALL_8
0x4005dfc	      0xe80fc8ffff	                     call sym.put_setnum	     10122	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14	CALL_8
0x4005e01	            0x85c0	                           test eax, eax	     10122	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14	CALL_8
0x4005e03	     0xf855cfeffff	                           jne 0x4005c65	     10122	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14	CALL_8
0x4005e09	      0xe9d2feffff	                           jmp 0x4005ce0	     10122	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14	CALL_8
0x4005e0e	            0x6690	                                     nop	     10122	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_2	IF_13	IF_14	CALL_8
0x4005e10	      0xba02000000	                              mov edx, 2	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_8
0x4005e15	          0x4c89ff	                            mov rdi, r15	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_8
0x4005e18	      0xe800000000	                          call 0x4005e1d	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_8
0x4005e1d	            0x85c0	                           test eax, eax	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_8
0x4005e1f	     0xf8527feffff	                           jne 0x4005c4c	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_8
0x4005e25	      0xe9b6feffff	                           jmp 0x4005ce0	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_8
0x4005e2a	    0x660f1f440000	                    nop word [rax + rax]	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_8
0x4005e30	      0xbe00000000	                              mov esi, 0	     10148	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_18	IF_19	CALL_11
0x4005e35	          0x4c89ff	                            mov rdi, r15	     10148	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_18	IF_19	CALL_11
0x4005e38	      0xe800000000	                          call 0x4005e3d	     10148	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_18	IF_19	CALL_11
0x4005e3d	            0x85c0	                           test eax, eax	     10148	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_18	IF_19	CALL_11
0x4005e3f	     0xf8520feffff	                           jne 0x4005c65	     10148	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_18	IF_19	CALL_11
0x4005e45	      0xe996feffff	                           jmp 0x4005ce0	     10148	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_18	IF_19	CALL_11
0x4005e4a	    0x660f1f440000	                    nop word [rax + rax]	     10148	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	FOR_3	ELSE_3	IF_18	IF_19	CALL_11
0x4005e50	      0x4889742430	             mov qword [rsp + 0x30], rsi	     10206	option.c	FUNCTION_66	IF_2	IF_3
0x4005e55	            0xeb0e	                           jmp 0x4005e65	     10206	option.c	FUNCTION_66	IF_2	IF_3
0x4005e57	    0x660f1f840000	                    nop word [rax + rax]	     10206	option.c	FUNCTION_66	IF_2	IF_3
0x4005e60	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	     10206	option.c	FUNCTION_66	IF_2	IF_3
0x4005e65	          0x803e00	                       cmp byte [rsi], 0	     10207	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1
0x4005e68	     0xf84defdffff	                            je 0x4005c4c	     10207	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1
0x4005e6e	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x4005e73	            0x31f6	                            xor esi, esi	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x4005e75	      0xe800000000	                          call 0x4005e7a	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x4005e7a	      0xba02000000	                              mov edx, 2	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x4005e7f	          0x4889c6	                            mov rsi, rax	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x4005e82	          0x4c89ff	                            mov rdi, r15	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x4005e85	      0xe800000000	                          call 0x4005e8a	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x4005e8a	            0x85c0	                           test eax, eax	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x4005e8c	            0x75d2	                           jne 0x4005e60	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x4005e8e	      0xe94dfeffff	                           jmp 0x4005ce0	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x4005e93	       0xf1f440000	                   nop dword [rax + rax]	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x4005e98	          0x4c89f7	                            mov rdi, r14	     10219	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_7	CALL_6
0x4005e9b	      0xe800000000	                          call 0x4005ea0	     10219	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_7	CALL_6
0x4005ea0	      0xe93bfeffff	                           jmp 0x4005ce0	     10219	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_7	CALL_6
0x4005ea5	           0xf1f00	                         nop dword [rax]	     10219	option.c	FUNCTION_66	IF_2	ELSE_1	IF_5	IF_7	CALL_6
0x4005ea8	        0x498b4d00	                    mov rcx, qword [r13]	      9976	option.c	FUNCTION_62	IF_2
0x4005eac	      0x48394cc308	       cmp qword [rbx + rax*8 + 8], rcx 	      9976	option.c	FUNCTION_62	IF_2
0x4005eb1	           0xf94c0	                                 sete al	      9976	option.c	FUNCTION_62	IF_2
0x4005eb4	           0xfb6c0	                           movzx eax, al	      9976	option.c	FUNCTION_62	IF_2
0x4005eb7	      0xe9a7fcffff	                           jmp 0x4005b63	      9976	option.c	FUNCTION_62	IF_2
0x4005ebc	        0x418b4d00	                    mov ecx, dword [r13]	      9980	option.c	FUNCTION_62	IF_3
0x4005ec0	        0x394cc308	       cmp dword [rbx + rax*8 + 8], ecx 	      9980	option.c	FUNCTION_62	IF_3
0x4005ec4	           0xf94c0	                                 sete al	      9980	option.c	FUNCTION_62	IF_3
0x4005ec7	           0xfb6c0	                           movzx eax, al	      9980	option.c	FUNCTION_62	IF_3
0x4005eca	      0xe994fcffff	                           jmp 0x4005b63	      9980	option.c	FUNCTION_62	IF_3
0x4005ecf	        0x8b4c242c	            mov ecx, dword [rsp + 0x2c] 	     10093	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8
0x4005ed3	             0x9c1	                             or ecx, eax	     10093	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8
0x4005ed5	     0xf85a5fcffff	                           jne 0x4005b80	     10093	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8
0x4005edb	      0xbe02000000	                              mov esi, 2	     10095	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	CALL_5
0x4005ee0	          0x4889df	                            mov rdi, rbx	     10095	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	CALL_5
0x4005ee3	      0xe898baffff	                 call sym.get_varp_scope	     10095	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	CALL_5
0x4005ee8	          0x4885c0	                           test rax, rax	      9972	option.c	FUNCTION_62	IF_1
0x4005eeb	          0x4889c5	                            mov rbp, rax	     10095	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	CALL_5
0x4005eee	        0x4c8b7310	            mov r14, qword [rbx + 0x10] 	     10095	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	CALL_5
0x4005ef2	            0x7459	                            je 0x4005f4d	      9972	option.c	FUNCTION_62	IF_1
0x4005ef4	            0x31c0	                            xor eax, eax	      9974	option.c	FUNCTION_62
0x4005ef6	    0x41f7c6000400	                        test r14d, 0x400	      9974	option.c	FUNCTION_62
0x4005efd	            0x750d	                           jne 0x4005f0c	      9974	option.c	FUNCTION_62
0x4005eff	    0x8b1500000000	            mov edx, dword [0x04005f05] 	      9974	option.c	FUNCTION_62
0x4005f05	            0x31c0	                            xor eax, eax	      9974	option.c	FUNCTION_62
0x4005f07	            0x85d2	                           test edx, edx	      9974	option.c	FUNCTION_62
0x4005f09	           0xf94c0	                                 sete al	      9974	option.c	FUNCTION_62
0x4005f0c	        0x4883c004	                              add rax, 4	      9976	option.c	FUNCTION_62	IF_2
0x4005f10	        0x41f6c602	                            test r14b, 2	      9975	option.c	FUNCTION_62	IF_2
0x4005f14	            0x7546	                           jne 0x4005f5c	      9975	option.c	FUNCTION_62	IF_2
0x4005f16	        0x41f6c601	                            test r14b, 1	      9977	option.c	FUNCTION_62	IF_3
0x4005f1a	            0x7551	                           jne 0x4005f6d	      9977	option.c	FUNCTION_62	IF_3
0x4005f1c	      0x488b74c308	       mov rsi, qword [rbx + rax*8 + 8] 	      9982	option.c	FUNCTION_62	CALL_1
0x4005f21	        0x488b7d00	                    mov rdi, qword [rbp]	      9982	option.c	FUNCTION_62	CALL_1
0x4005f25	      0xe800000000	                          call 0x4005f2a	      9982	option.c	FUNCTION_62	CALL_1
0x4005f2a	            0x85c0	                           test eax, eax	      9982	option.c	FUNCTION_62	CALL_1
0x4005f2c	           0xf94c0	                                 sete al	      9982	option.c	FUNCTION_62	CALL_1
0x4005f2f	           0xfb6c0	                           movzx eax, al	      9982	option.c	FUNCTION_62	CALL_1
0x4005f32	            0x85c0	                           test eax, eax	     10096	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9	CALL_6
0x4005f34	            0x7517	                           jne 0x4005f4d	     10096	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9	CALL_6
0x4005f36	      0x4c896c2408	                mov qword [rsp + 8], r13	     10096	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9	CALL_6
0x4005f3b	      0xc644241a00	                mov byte [rsp + 0x1a], 0	     10096	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9	CALL_6
0x4005f40	          0x4989ed	                            mov r13, rbp	     10096	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9	CALL_6
0x4005f43	      0xbd01000000	                              mov ebp, 1	     10098	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9
0x4005f48	      0xe92dfdffff	                           jmp 0x4005c7a	     10098	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9
0x4005f4d	      0xc644241a00	                mov byte [rsp + 0x1a], 0	     10096	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1	IF_5	IF_6	IF_8	IF_9	CALL_6
0x4005f52	      0xbd02000000	                              mov ebp, 2	     10083	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x4005f57	      0xe91efdffff	                           jmp 0x4005c7a	     10083	option.c	FUNCTION_64	FOR_1	FOR_2	IF_1
0x4005f5c	        0x488b4d00	                    mov rcx, qword [rbp]	      9976	option.c	FUNCTION_62	IF_2
0x4005f60	      0x48394cc308	       cmp qword [rbx + rax*8 + 8], rcx 	      9976	option.c	FUNCTION_62	IF_2
0x4005f65	           0xf94c0	                                 sete al	      9976	option.c	FUNCTION_62	IF_2
0x4005f68	           0xfb6c0	                           movzx eax, al	      9976	option.c	FUNCTION_62	IF_2
0x4005f6b	            0xebc5	                           jmp 0x4005f32	      9976	option.c	FUNCTION_62	IF_2
0x4005f6d	          0x8b4d00	                    mov ecx, dword [rbp]	      9980	option.c	FUNCTION_62	IF_3
0x4005f70	        0x394cc308	       cmp dword [rbx + rax*8 + 8], ecx 	      9980	option.c	FUNCTION_62	IF_3
0x4005f74	           0xf94c0	                                 sete al	      9980	option.c	FUNCTION_62	IF_3
0x4005f77	           0xfb6c0	                           movzx eax, al	      9980	option.c	FUNCTION_62	IF_3
0x4005f7a	            0xebb6	                           jmp 0x4005f32	      9980	option.c	FUNCTION_62	IF_3
0x4005f7c	      0xe800000000	                          call 0x4005f81	     10156	option.c	FUNCTION_64
check_buf_options	SWITCH,0:CALL,50:DO,0:WHILE,0:IF,0:functions,0:ELSE,0:FOR,0	345
0x4003ce0	              0x53	                                push rbx	      5647	option.c	FUNCTION_29
0x4003ce1	    0x4883bf101400	             cmp qword [rdi + 0x1410], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003ce9	          0x4889fb	                            mov rbx, rdi	      5647	option.c	FUNCTION_29
0x4003cec	     0xf84ce020000	                            je 0x4003fc0	      5771	option.c	FUNCTION_32	IF_1
0x4003cf2	    0x4883bb181400	             cmp qword [rbx + 0x1418], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003cfa	     0xf84e0020000	                            je 0x4003fe0	      5771	option.c	FUNCTION_32	IF_1
0x4003d00	    0x4883bb881400	             cmp qword [rbx + 0x1488], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003d08	     0xf84f2020000	                            je 0x4004000	      5771	option.c	FUNCTION_32	IF_1
0x4003d0e	    0x4883bb901400	             cmp qword [rbx + 0x1490], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003d16	     0xf8404030000	                            je 0x4004020	      5771	option.c	FUNCTION_32	IF_1
0x4003d1c	    0x4883bbc01400	             cmp qword [rbx + 0x14c0], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003d24	     0xf8416030000	                            je 0x4004040	      5771	option.c	FUNCTION_32	IF_1
0x4003d2a	    0x4883bbc81400	             cmp qword [rbx + 0x14c8], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003d32	     0xf8428030000	                            je 0x4004060	      5771	option.c	FUNCTION_32	IF_1
0x4003d38	    0x4883bbd01400	             cmp qword [rbx + 0x14d0], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003d40	     0xf843a030000	                            je 0x4004080	      5771	option.c	FUNCTION_32	IF_1
0x4003d46	    0x4883bbe01400	             cmp qword [rbx + 0x14e0], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003d4e	     0xf844c030000	                            je 0x40040a0	      5771	option.c	FUNCTION_32	IF_1
0x4003d54	    0x4883bbf01400	             cmp qword [rbx + 0x14f0], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003d5c	     0xf845e030000	                            je 0x40040c0	      5771	option.c	FUNCTION_32	IF_1
0x4003d62	    0x4883bb381700	             cmp qword [rbx + 0x1738], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003d6a	     0xf8470030000	                            je 0x40040e0	      5771	option.c	FUNCTION_32	IF_1
0x4003d70	    0x4883bb481700	             cmp qword [rbx + 0x1748], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003d78	     0xf8482030000	                            je 0x4004100	      5771	option.c	FUNCTION_32	IF_1
0x4003d7e	    0x4883bbf81400	             cmp qword [rbx + 0x14f8], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003d86	     0xf8494030000	                            je 0x4004120	      5771	option.c	FUNCTION_32	IF_1
0x4003d8c	    0x4883bb001500	             cmp qword [rbx + 0x1500], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003d94	     0xf84a6030000	                            je 0x4004140	      5771	option.c	FUNCTION_32	IF_1
0x4003d9a	    0x4883bb101500	             cmp qword [rbx + 0x1510], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003da2	     0xf84b8030000	                            je 0x4004160	      5771	option.c	FUNCTION_32	IF_1
0x4003da8	    0x4883bb181500	             cmp qword [rbx + 0x1518], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003db0	     0xf84ca030000	                            je 0x4004180	      5771	option.c	FUNCTION_32	IF_1
0x4003db6	    0x4883bb301500	             cmp qword [rbx + 0x1530], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003dbe	     0xf84dc030000	                            je 0x40041a0	      5771	option.c	FUNCTION_32	IF_1
0x4003dc4	    0x4883bba01400	             cmp qword [rbx + 0x14a0], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003dcc	     0xf84ee030000	                            je 0x40041c0	      5771	option.c	FUNCTION_32	IF_1
0x4003dd2	    0x4883bba81400	             cmp qword [rbx + 0x14a8], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003dda	     0xf8400040000	                            je 0x40041e0	      5771	option.c	FUNCTION_32	IF_1
0x4003de0	    0x4883bbb81400	             cmp qword [rbx + 0x14b8], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003de8	     0xf8412040000	                            je 0x4004200	      5771	option.c	FUNCTION_32	IF_1
0x4003dee	    0x4883bb481400	             cmp qword [rbx + 0x1448], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003df6	     0xf8424040000	                            je 0x4004220	      5771	option.c	FUNCTION_32	IF_1
0x4003dfc	    0x4883bb501400	             cmp qword [rbx + 0x1450], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003e04	     0xf8436040000	                            je 0x4004240	      5771	option.c	FUNCTION_32	IF_1
0x4003e0a	    0x4883bb481500	             cmp qword [rbx + 0x1548], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003e12	     0xf8448040000	                            je 0x4004260	      5771	option.c	FUNCTION_32	IF_1
0x4003e18	    0x4883bb581500	             cmp qword [rbx + 0x1558], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003e20	     0xf845a040000	                            je 0x4004280	      5771	option.c	FUNCTION_32	IF_1
0x4003e26	    0x4883bba01500	             cmp qword [rbx + 0x15a0], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003e2e	     0xf846c040000	                            je 0x40042a0	      5771	option.c	FUNCTION_32	IF_1
0x4003e34	    0x4883bb181c00	             cmp qword [rbx + 0x1c18], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003e3c	     0xf847e040000	                            je 0x40042c0	      5771	option.c	FUNCTION_32	IF_1
0x4003e42	    0x4883bbd01b00	             cmp qword [rbx + 0x1bd0], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003e4a	     0xf8490040000	                            je 0x40042e0	      5771	option.c	FUNCTION_32	IF_1
0x4003e50	    0x4883bbe01b00	             cmp qword [rbx + 0x1be0], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003e58	     0xf84a2040000	                            je 0x4004300	      5771	option.c	FUNCTION_32	IF_1
0x4003e5e	    0x4883bbe81b00	             cmp qword [rbx + 0x1be8], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003e66	     0xf84b4040000	                            je 0x4004320	      5771	option.c	FUNCTION_32	IF_1
0x4003e6c	    0x4883bb881500	             cmp qword [rbx + 0x1588], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003e74	     0xf84c6040000	                            je 0x4004340	      5771	option.c	FUNCTION_32	IF_1
0x4003e7a	    0x4883bb381400	             cmp qword [rbx + 0x1438], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003e82	     0xf84d8040000	                            je 0x4004360	      5771	option.c	FUNCTION_32	IF_1
0x4003e88	    0x4883bb301400	             cmp qword [rbx + 0x1430], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003e90	     0xf84ea040000	                            je 0x4004380	      5771	option.c	FUNCTION_32	IF_1
0x4003e96	          0x4889df	                            mov rdi, rbx	      5708	option.c	FUNCTION_29	CALL_32
0x4003e99	      0xe800000000	                          call 0x4003e9e	      5708	option.c	FUNCTION_29	CALL_32
0x4003e9e	    0x4883bb981400	             cmp qword [rbx + 0x1498], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003ea6	     0xf84ec040000	                            je 0x4004398	      5771	option.c	FUNCTION_32	IF_1
0x4003eac	    0x4883bb401400	             cmp qword [rbx + 0x1440], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003eb4	     0xf84fe040000	                            je 0x40043b8	      5771	option.c	FUNCTION_32	IF_1
0x4003eba	    0x4883bb581400	             cmp qword [rbx + 0x1458], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003ec2	     0xf8410050000	                            je 0x40043d8	      5771	option.c	FUNCTION_32	IF_1
0x4003ec8	    0x4883bb601400	             cmp qword [rbx + 0x1460], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003ed0	     0xf8422050000	                            je 0x40043f8	      5771	option.c	FUNCTION_32	IF_1
0x4003ed6	    0x4883bb681400	             cmp qword [rbx + 0x1468], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003ede	     0xf8434050000	                            je 0x4004418	      5771	option.c	FUNCTION_32	IF_1
0x4003ee4	    0x4883bbe81500	             cmp qword [rbx + 0x15e8], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003eec	     0xf8446050000	                            je 0x4004438	      5771	option.c	FUNCTION_32	IF_1
0x4003ef2	    0x4883bbf01500	             cmp qword [rbx + 0x15f0], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003efa	     0xf8458050000	                            je 0x4004458	      5771	option.c	FUNCTION_32	IF_1
0x4003f00	    0x4883bbf81500	             cmp qword [rbx + 0x15f8], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003f08	     0xf846a050000	                            je 0x4004478	      5771	option.c	FUNCTION_32	IF_1
0x4003f0e	    0x4883bb001600	             cmp qword [rbx + 0x1600], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003f16	     0xf847c050000	                            je 0x4004498	      5771	option.c	FUNCTION_32	IF_1
0x4003f1c	    0x4883bb081600	             cmp qword [rbx + 0x1608], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003f24	     0xf848e050000	                            je 0x40044b8	      5771	option.c	FUNCTION_32	IF_1
0x4003f2a	    0x4883bb101600	             cmp qword [rbx + 0x1610], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003f32	     0xf84a0050000	                            je 0x40044d8	      5771	option.c	FUNCTION_32	IF_1
0x4003f38	    0x4883bb201600	             cmp qword [rbx + 0x1620], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003f40	     0xf84b2050000	                            je 0x40044f8	      5771	option.c	FUNCTION_32	IF_1
0x4003f46	    0x4883bb281600	             cmp qword [rbx + 0x1628], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003f4e	     0xf84c4050000	                            je 0x4004518	      5771	option.c	FUNCTION_32	IF_1
0x4003f54	    0x4883bb381600	             cmp qword [rbx + 0x1638], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003f5c	     0xf84d6050000	                            je 0x4004538	      5771	option.c	FUNCTION_32	IF_1
0x4003f62	    0x4883bb401600	             cmp qword [rbx + 0x1640], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003f6a	     0xf84e8050000	                            je 0x4004558	      5771	option.c	FUNCTION_32	IF_1
0x4003f70	    0x4883bb581600	             cmp qword [rbx + 0x1658], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003f78	     0xf84fa050000	                            je 0x4004578	      5771	option.c	FUNCTION_32	IF_1
0x4003f7e	    0x4883bbf81300	             cmp qword [rbx + 0x13f8], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003f86	            0x7428	                            je 0x4003fb0	      5771	option.c	FUNCTION_32	IF_1
0x4003f88	    0x4883bb281500	             cmp qword [rbx + 0x1528], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003f90	            0x7406	                            je 0x4003f98	      5771	option.c	FUNCTION_32	IF_1
0x4003f92	              0x5b	                                 pop rbx	      5744	option.c	FUNCTION_29
0x4003f93	              0xc3	                                     ret	      5744	option.c	FUNCTION_29
0x4003f94	         0xf1f4000	                         nop dword [rax]	      5744	option.c	FUNCTION_29
0x4003f98	    0x488b05000000	            mov rax, qword [0x04003f9f] 	      5772	option.c	FUNCTION_32	IF_1
0x4003f9f	    0x488983281500	          mov qword [rbx + 0x1528], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4003fa6	              0x5b	                                 pop rbx	      5744	option.c	FUNCTION_29
0x4003fa7	              0xc3	                                     ret	      5744	option.c	FUNCTION_29
0x4003fa8	     0xf1f84000000	                   nop dword [rax + rax]	      5744	option.c	FUNCTION_29
0x4003fb0	    0x488b05000000	            mov rax, qword [0x04003fb7] 	      5772	option.c	FUNCTION_32	IF_1
0x4003fb7	    0x488983f81300	          mov qword [rbx + 0x13f8], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4003fbe	            0xebc8	                           jmp 0x4003f88	      5772	option.c	FUNCTION_32	IF_1
0x4003fc0	    0x488b05000000	            mov rax, qword [0x04003fc7] 	      5772	option.c	FUNCTION_32	IF_1
0x4003fc7	    0x488987101400	          mov qword [rdi + 0x1410], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4003fce	    0x4883bb181400	             cmp qword [rbx + 0x1418], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003fd6	     0xf8524fdffff	                           jne 0x4003d00	      5771	option.c	FUNCTION_32	IF_1
0x4003fdc	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4003fe0	    0x4883bb881400	             cmp qword [rbx + 0x1488], 0	      5771	option.c	FUNCTION_32	IF_1
0x4003fe8	    0x488b05000000	            mov rax, qword [0x04003fef] 	      5772	option.c	FUNCTION_32	IF_1
0x4003fef	    0x488983181400	          mov qword [rbx + 0x1418], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4003ff6	     0xf8512fdffff	                           jne 0x4003d0e	      5771	option.c	FUNCTION_32	IF_1
0x4003ffc	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4004000	    0x4883bb901400	             cmp qword [rbx + 0x1490], 0	      5771	option.c	FUNCTION_32	IF_1
0x4004008	    0x488b05000000	            mov rax, qword [0x0400400f] 	      5772	option.c	FUNCTION_32	IF_1
0x400400f	    0x488983881400	          mov qword [rbx + 0x1488], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4004016	     0xf8500fdffff	                           jne 0x4003d1c	      5771	option.c	FUNCTION_32	IF_1
0x400401c	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4004020	    0x4883bbc01400	             cmp qword [rbx + 0x14c0], 0	      5771	option.c	FUNCTION_32	IF_1
0x4004028	    0x488b05000000	            mov rax, qword [0x0400402f] 	      5772	option.c	FUNCTION_32	IF_1
0x400402f	    0x488983901400	          mov qword [rbx + 0x1490], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4004036	     0xf85eefcffff	                           jne 0x4003d2a	      5771	option.c	FUNCTION_32	IF_1
0x400403c	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4004040	    0x4883bbc81400	             cmp qword [rbx + 0x14c8], 0	      5771	option.c	FUNCTION_32	IF_1
0x4004048	    0x488b05000000	            mov rax, qword [0x0400404f] 	      5772	option.c	FUNCTION_32	IF_1
0x400404f	    0x488983c01400	          mov qword [rbx + 0x14c0], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4004056	     0xf85dcfcffff	                           jne 0x4003d38	      5771	option.c	FUNCTION_32	IF_1
0x400405c	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4004060	    0x4883bbd01400	             cmp qword [rbx + 0x14d0], 0	      5771	option.c	FUNCTION_32	IF_1
0x4004068	    0x488b05000000	            mov rax, qword [0x0400406f] 	      5772	option.c	FUNCTION_32	IF_1
0x400406f	    0x488983c81400	          mov qword [rbx + 0x14c8], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4004076	     0xf85cafcffff	                           jne 0x4003d46	      5771	option.c	FUNCTION_32	IF_1
0x400407c	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4004080	    0x4883bbe01400	             cmp qword [rbx + 0x14e0], 0	      5771	option.c	FUNCTION_32	IF_1
0x4004088	    0x488b05000000	            mov rax, qword [0x0400408f] 	      5772	option.c	FUNCTION_32	IF_1
0x400408f	    0x488983d01400	          mov qword [rbx + 0x14d0], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4004096	     0xf85b8fcffff	                           jne 0x4003d54	      5771	option.c	FUNCTION_32	IF_1
0x400409c	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x40040a0	    0x4883bbf01400	             cmp qword [rbx + 0x14f0], 0	      5771	option.c	FUNCTION_32	IF_1
0x40040a8	    0x488b05000000	            mov rax, qword [0x040040af] 	      5772	option.c	FUNCTION_32	IF_1
0x40040af	    0x488983e01400	          mov qword [rbx + 0x14e0], rax 	      5772	option.c	FUNCTION_32	IF_1
0x40040b6	     0xf85a6fcffff	                           jne 0x4003d62	      5771	option.c	FUNCTION_32	IF_1
0x40040bc	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x40040c0	    0x4883bb381700	             cmp qword [rbx + 0x1738], 0	      5771	option.c	FUNCTION_32	IF_1
0x40040c8	    0x488b05000000	            mov rax, qword [0x040040cf] 	      5772	option.c	FUNCTION_32	IF_1
0x40040cf	    0x488983f01400	          mov qword [rbx + 0x14f0], rax 	      5772	option.c	FUNCTION_32	IF_1
0x40040d6	     0xf8594fcffff	                           jne 0x4003d70	      5771	option.c	FUNCTION_32	IF_1
0x40040dc	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x40040e0	    0x4883bb481700	             cmp qword [rbx + 0x1748], 0	      5771	option.c	FUNCTION_32	IF_1
0x40040e8	    0x488b05000000	            mov rax, qword [0x040040ef] 	      5772	option.c	FUNCTION_32	IF_1
0x40040ef	    0x488983381700	          mov qword [rbx + 0x1738], rax 	      5772	option.c	FUNCTION_32	IF_1
0x40040f6	     0xf8582fcffff	                           jne 0x4003d7e	      5771	option.c	FUNCTION_32	IF_1
0x40040fc	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4004100	    0x4883bbf81400	             cmp qword [rbx + 0x14f8], 0	      5771	option.c	FUNCTION_32	IF_1
0x4004108	    0x488b05000000	            mov rax, qword [0x0400410f] 	      5772	option.c	FUNCTION_32	IF_1
0x400410f	    0x488983481700	          mov qword [rbx + 0x1748], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4004116	     0xf8570fcffff	                           jne 0x4003d8c	      5771	option.c	FUNCTION_32	IF_1
0x400411c	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4004120	    0x4883bb001500	             cmp qword [rbx + 0x1500], 0	      5771	option.c	FUNCTION_32	IF_1
0x4004128	    0x488b05000000	            mov rax, qword [0x0400412f] 	      5772	option.c	FUNCTION_32	IF_1
0x400412f	    0x488983f81400	          mov qword [rbx + 0x14f8], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4004136	     0xf855efcffff	                           jne 0x4003d9a	      5771	option.c	FUNCTION_32	IF_1
0x400413c	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4004140	    0x4883bb101500	             cmp qword [rbx + 0x1510], 0	      5771	option.c	FUNCTION_32	IF_1
0x4004148	    0x488b05000000	            mov rax, qword [0x0400414f] 	      5772	option.c	FUNCTION_32	IF_1
0x400414f	    0x488983001500	          mov qword [rbx + 0x1500], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4004156	     0xf854cfcffff	                           jne 0x4003da8	      5771	option.c	FUNCTION_32	IF_1
0x400415c	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4004160	    0x4883bb181500	             cmp qword [rbx + 0x1518], 0	      5771	option.c	FUNCTION_32	IF_1
0x4004168	    0x488b05000000	            mov rax, qword [0x0400416f] 	      5772	option.c	FUNCTION_32	IF_1
0x400416f	    0x488983101500	          mov qword [rbx + 0x1510], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4004176	     0xf853afcffff	                           jne 0x4003db6	      5771	option.c	FUNCTION_32	IF_1
0x400417c	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4004180	    0x4883bb301500	             cmp qword [rbx + 0x1530], 0	      5771	option.c	FUNCTION_32	IF_1
0x4004188	    0x488b05000000	            mov rax, qword [0x0400418f] 	      5772	option.c	FUNCTION_32	IF_1
0x400418f	    0x488983181500	          mov qword [rbx + 0x1518], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4004196	     0xf8528fcffff	                           jne 0x4003dc4	      5771	option.c	FUNCTION_32	IF_1
0x400419c	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x40041a0	    0x4883bba01400	             cmp qword [rbx + 0x14a0], 0	      5771	option.c	FUNCTION_32	IF_1
0x40041a8	    0x488b05000000	            mov rax, qword [0x040041af] 	      5772	option.c	FUNCTION_32	IF_1
0x40041af	    0x488983301500	          mov qword [rbx + 0x1530], rax 	      5772	option.c	FUNCTION_32	IF_1
0x40041b6	     0xf8516fcffff	                           jne 0x4003dd2	      5771	option.c	FUNCTION_32	IF_1
0x40041bc	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x40041c0	    0x4883bba81400	             cmp qword [rbx + 0x14a8], 0	      5771	option.c	FUNCTION_32	IF_1
0x40041c8	    0x488b05000000	            mov rax, qword [0x040041cf] 	      5772	option.c	FUNCTION_32	IF_1
0x40041cf	    0x488983a01400	          mov qword [rbx + 0x14a0], rax 	      5772	option.c	FUNCTION_32	IF_1
0x40041d6	     0xf8504fcffff	                           jne 0x4003de0	      5771	option.c	FUNCTION_32	IF_1
0x40041dc	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x40041e0	    0x4883bbb81400	             cmp qword [rbx + 0x14b8], 0	      5771	option.c	FUNCTION_32	IF_1
0x40041e8	    0x488b05000000	            mov rax, qword [0x040041ef] 	      5772	option.c	FUNCTION_32	IF_1
0x40041ef	    0x488983a81400	          mov qword [rbx + 0x14a8], rax 	      5772	option.c	FUNCTION_32	IF_1
0x40041f6	     0xf85f2fbffff	                           jne 0x4003dee	      5771	option.c	FUNCTION_32	IF_1
0x40041fc	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4004200	    0x4883bb481400	             cmp qword [rbx + 0x1448], 0	      5771	option.c	FUNCTION_32	IF_1
0x4004208	    0x488b05000000	            mov rax, qword [0x0400420f] 	      5772	option.c	FUNCTION_32	IF_1
0x400420f	    0x488983b81400	          mov qword [rbx + 0x14b8], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4004216	     0xf85e0fbffff	                           jne 0x4003dfc	      5771	option.c	FUNCTION_32	IF_1
0x400421c	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4004220	    0x4883bb501400	             cmp qword [rbx + 0x1450], 0	      5771	option.c	FUNCTION_32	IF_1
0x4004228	    0x488b05000000	            mov rax, qword [0x0400422f] 	      5772	option.c	FUNCTION_32	IF_1
0x400422f	    0x488983481400	          mov qword [rbx + 0x1448], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4004236	     0xf85cefbffff	                           jne 0x4003e0a	      5771	option.c	FUNCTION_32	IF_1
0x400423c	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4004240	    0x4883bb481500	             cmp qword [rbx + 0x1548], 0	      5771	option.c	FUNCTION_32	IF_1
0x4004248	    0x488b05000000	            mov rax, qword [0x0400424f] 	      5772	option.c	FUNCTION_32	IF_1
0x400424f	    0x488983501400	          mov qword [rbx + 0x1450], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4004256	     0xf85bcfbffff	                           jne 0x4003e18	      5771	option.c	FUNCTION_32	IF_1
0x400425c	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4004260	    0x4883bb581500	             cmp qword [rbx + 0x1558], 0	      5771	option.c	FUNCTION_32	IF_1
0x4004268	    0x488b05000000	            mov rax, qword [0x0400426f] 	      5772	option.c	FUNCTION_32	IF_1
0x400426f	    0x488983481500	          mov qword [rbx + 0x1548], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4004276	     0xf85aafbffff	                           jne 0x4003e26	      5771	option.c	FUNCTION_32	IF_1
0x400427c	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4004280	    0x4883bba01500	             cmp qword [rbx + 0x15a0], 0	      5771	option.c	FUNCTION_32	IF_1
0x4004288	    0x488b05000000	            mov rax, qword [0x0400428f] 	      5772	option.c	FUNCTION_32	IF_1
0x400428f	    0x488983581500	          mov qword [rbx + 0x1558], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4004296	     0xf8598fbffff	                           jne 0x4003e34	      5771	option.c	FUNCTION_32	IF_1
0x400429c	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x40042a0	    0x4883bb181c00	             cmp qword [rbx + 0x1c18], 0	      5771	option.c	FUNCTION_32	IF_1
0x40042a8	    0x488b05000000	            mov rax, qword [0x040042af] 	      5772	option.c	FUNCTION_32	IF_1
0x40042af	    0x488983a01500	          mov qword [rbx + 0x15a0], rax 	      5772	option.c	FUNCTION_32	IF_1
0x40042b6	     0xf8586fbffff	                           jne 0x4003e42	      5771	option.c	FUNCTION_32	IF_1
0x40042bc	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x40042c0	    0x4883bbd01b00	             cmp qword [rbx + 0x1bd0], 0	      5771	option.c	FUNCTION_32	IF_1
0x40042c8	    0x488b05000000	            mov rax, qword [0x040042cf] 	      5772	option.c	FUNCTION_32	IF_1
0x40042cf	    0x488983181c00	          mov qword [rbx + 0x1c18], rax 	      5772	option.c	FUNCTION_32	IF_1
0x40042d6	     0xf8574fbffff	                           jne 0x4003e50	      5771	option.c	FUNCTION_32	IF_1
0x40042dc	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x40042e0	    0x4883bbe01b00	             cmp qword [rbx + 0x1be0], 0	      5771	option.c	FUNCTION_32	IF_1
0x40042e8	    0x488b05000000	            mov rax, qword [0x040042ef] 	      5772	option.c	FUNCTION_32	IF_1
0x40042ef	    0x488983d01b00	          mov qword [rbx + 0x1bd0], rax 	      5772	option.c	FUNCTION_32	IF_1
0x40042f6	     0xf8562fbffff	                           jne 0x4003e5e	      5771	option.c	FUNCTION_32	IF_1
0x40042fc	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4004300	    0x4883bbe81b00	             cmp qword [rbx + 0x1be8], 0	      5771	option.c	FUNCTION_32	IF_1
0x4004308	    0x488b05000000	            mov rax, qword [0x0400430f] 	      5772	option.c	FUNCTION_32	IF_1
0x400430f	    0x488983e01b00	          mov qword [rbx + 0x1be0], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4004316	     0xf8550fbffff	                           jne 0x4003e6c	      5771	option.c	FUNCTION_32	IF_1
0x400431c	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4004320	    0x4883bb881500	             cmp qword [rbx + 0x1588], 0	      5771	option.c	FUNCTION_32	IF_1
0x4004328	    0x488b05000000	            mov rax, qword [0x0400432f] 	      5772	option.c	FUNCTION_32	IF_1
0x400432f	    0x488983e81b00	          mov qword [rbx + 0x1be8], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4004336	     0xf853efbffff	                           jne 0x4003e7a	      5771	option.c	FUNCTION_32	IF_1
0x400433c	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4004340	    0x4883bb381400	             cmp qword [rbx + 0x1438], 0	      5771	option.c	FUNCTION_32	IF_1
0x4004348	    0x488b05000000	            mov rax, qword [0x0400434f] 	      5772	option.c	FUNCTION_32	IF_1
0x400434f	    0x488983881500	          mov qword [rbx + 0x1588], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4004356	     0xf852cfbffff	                           jne 0x4003e88	      5771	option.c	FUNCTION_32	IF_1
0x400435c	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4004360	    0x4883bb301400	             cmp qword [rbx + 0x1430], 0	      5771	option.c	FUNCTION_32	IF_1
0x4004368	    0x488b05000000	            mov rax, qword [0x0400436f] 	      5772	option.c	FUNCTION_32	IF_1
0x400436f	    0x488983381400	          mov qword [rbx + 0x1438], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4004376	     0xf851afbffff	                           jne 0x4003e96	      5771	option.c	FUNCTION_32	IF_1
0x400437c	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4004380	    0x488b05000000	            mov rax, qword [0x04004387] 	      5772	option.c	FUNCTION_32	IF_1
0x4004387	    0x488983301400	          mov qword [rbx + 0x1430], rax 	      5772	option.c	FUNCTION_32	IF_1
0x400438e	      0xe903fbffff	                           jmp 0x4003e96	      5772	option.c	FUNCTION_32	IF_1
0x4004393	       0xf1f440000	                   nop dword [rax + rax]	      5772	option.c	FUNCTION_32	IF_1
0x4004398	    0x4883bb401400	             cmp qword [rbx + 0x1440], 0	      5771	option.c	FUNCTION_32	IF_1
0x40043a0	    0x488b05000000	            mov rax, qword [0x040043a7] 	      5772	option.c	FUNCTION_32	IF_1
0x40043a7	    0x488983981400	          mov qword [rbx + 0x1498], rax 	      5772	option.c	FUNCTION_32	IF_1
0x40043ae	     0xf8506fbffff	                           jne 0x4003eba	      5771	option.c	FUNCTION_32	IF_1
0x40043b4	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x40043b8	    0x4883bb581400	             cmp qword [rbx + 0x1458], 0	      5771	option.c	FUNCTION_32	IF_1
0x40043c0	    0x488b05000000	            mov rax, qword [0x040043c7] 	      5772	option.c	FUNCTION_32	IF_1
0x40043c7	    0x488983401400	          mov qword [rbx + 0x1440], rax 	      5772	option.c	FUNCTION_32	IF_1
0x40043ce	     0xf85f4faffff	                           jne 0x4003ec8	      5771	option.c	FUNCTION_32	IF_1
0x40043d4	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x40043d8	    0x4883bb601400	             cmp qword [rbx + 0x1460], 0	      5771	option.c	FUNCTION_32	IF_1
0x40043e0	    0x488b05000000	            mov rax, qword [0x040043e7] 	      5772	option.c	FUNCTION_32	IF_1
0x40043e7	    0x488983581400	          mov qword [rbx + 0x1458], rax 	      5772	option.c	FUNCTION_32	IF_1
0x40043ee	     0xf85e2faffff	                           jne 0x4003ed6	      5771	option.c	FUNCTION_32	IF_1
0x40043f4	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x40043f8	    0x4883bb681400	             cmp qword [rbx + 0x1468], 0	      5771	option.c	FUNCTION_32	IF_1
0x4004400	    0x488b05000000	            mov rax, qword [0x04004407] 	      5772	option.c	FUNCTION_32	IF_1
0x4004407	    0x488983601400	          mov qword [rbx + 0x1460], rax 	      5772	option.c	FUNCTION_32	IF_1
0x400440e	     0xf85d0faffff	                           jne 0x4003ee4	      5771	option.c	FUNCTION_32	IF_1
0x4004414	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4004418	    0x4883bbe81500	             cmp qword [rbx + 0x15e8], 0	      5771	option.c	FUNCTION_32	IF_1
0x4004420	    0x488b05000000	            mov rax, qword [0x04004427] 	      5772	option.c	FUNCTION_32	IF_1
0x4004427	    0x488983681400	          mov qword [rbx + 0x1468], rax 	      5772	option.c	FUNCTION_32	IF_1
0x400442e	     0xf85befaffff	                           jne 0x4003ef2	      5771	option.c	FUNCTION_32	IF_1
0x4004434	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4004438	    0x4883bbf01500	             cmp qword [rbx + 0x15f0], 0	      5771	option.c	FUNCTION_32	IF_1
0x4004440	    0x488b05000000	            mov rax, qword [0x04004447] 	      5772	option.c	FUNCTION_32	IF_1
0x4004447	    0x488983e81500	          mov qword [rbx + 0x15e8], rax 	      5772	option.c	FUNCTION_32	IF_1
0x400444e	     0xf85acfaffff	                           jne 0x4003f00	      5771	option.c	FUNCTION_32	IF_1
0x4004454	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4004458	    0x4883bbf81500	             cmp qword [rbx + 0x15f8], 0	      5771	option.c	FUNCTION_32	IF_1
0x4004460	    0x488b05000000	            mov rax, qword [0x04004467] 	      5772	option.c	FUNCTION_32	IF_1
0x4004467	    0x488983f01500	          mov qword [rbx + 0x15f0], rax 	      5772	option.c	FUNCTION_32	IF_1
0x400446e	     0xf859afaffff	                           jne 0x4003f0e	      5771	option.c	FUNCTION_32	IF_1
0x4004474	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4004478	    0x4883bb001600	             cmp qword [rbx + 0x1600], 0	      5771	option.c	FUNCTION_32	IF_1
0x4004480	    0x488b05000000	            mov rax, qword [0x04004487] 	      5772	option.c	FUNCTION_32	IF_1
0x4004487	    0x488983f81500	          mov qword [rbx + 0x15f8], rax 	      5772	option.c	FUNCTION_32	IF_1
0x400448e	     0xf8588faffff	                           jne 0x4003f1c	      5771	option.c	FUNCTION_32	IF_1
0x4004494	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4004498	    0x4883bb081600	             cmp qword [rbx + 0x1608], 0	      5771	option.c	FUNCTION_32	IF_1
0x40044a0	    0x488b05000000	            mov rax, qword [0x040044a7] 	      5772	option.c	FUNCTION_32	IF_1
0x40044a7	    0x488983001600	          mov qword [rbx + 0x1600], rax 	      5772	option.c	FUNCTION_32	IF_1
0x40044ae	     0xf8576faffff	                           jne 0x4003f2a	      5771	option.c	FUNCTION_32	IF_1
0x40044b4	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x40044b8	    0x4883bb101600	             cmp qword [rbx + 0x1610], 0	      5771	option.c	FUNCTION_32	IF_1
0x40044c0	    0x488b05000000	            mov rax, qword [0x040044c7] 	      5772	option.c	FUNCTION_32	IF_1
0x40044c7	    0x488983081600	          mov qword [rbx + 0x1608], rax 	      5772	option.c	FUNCTION_32	IF_1
0x40044ce	     0xf8564faffff	                           jne 0x4003f38	      5771	option.c	FUNCTION_32	IF_1
0x40044d4	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x40044d8	    0x4883bb201600	             cmp qword [rbx + 0x1620], 0	      5771	option.c	FUNCTION_32	IF_1
0x40044e0	    0x488b05000000	            mov rax, qword [0x040044e7] 	      5772	option.c	FUNCTION_32	IF_1
0x40044e7	    0x488983101600	          mov qword [rbx + 0x1610], rax 	      5772	option.c	FUNCTION_32	IF_1
0x40044ee	     0xf8552faffff	                           jne 0x4003f46	      5771	option.c	FUNCTION_32	IF_1
0x40044f4	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x40044f8	    0x4883bb281600	             cmp qword [rbx + 0x1628], 0	      5771	option.c	FUNCTION_32	IF_1
0x4004500	    0x488b05000000	            mov rax, qword [0x04004507] 	      5772	option.c	FUNCTION_32	IF_1
0x4004507	    0x488983201600	          mov qword [rbx + 0x1620], rax 	      5772	option.c	FUNCTION_32	IF_1
0x400450e	     0xf8540faffff	                           jne 0x4003f54	      5771	option.c	FUNCTION_32	IF_1
0x4004514	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4004518	    0x4883bb381600	             cmp qword [rbx + 0x1638], 0	      5771	option.c	FUNCTION_32	IF_1
0x4004520	    0x488b05000000	            mov rax, qword [0x04004527] 	      5772	option.c	FUNCTION_32	IF_1
0x4004527	    0x488983281600	          mov qword [rbx + 0x1628], rax 	      5772	option.c	FUNCTION_32	IF_1
0x400452e	     0xf852efaffff	                           jne 0x4003f62	      5771	option.c	FUNCTION_32	IF_1
0x4004534	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4004538	    0x4883bb401600	             cmp qword [rbx + 0x1640], 0	      5771	option.c	FUNCTION_32	IF_1
0x4004540	    0x488b05000000	            mov rax, qword [0x04004547] 	      5772	option.c	FUNCTION_32	IF_1
0x4004547	    0x488983381600	          mov qword [rbx + 0x1638], rax 	      5772	option.c	FUNCTION_32	IF_1
0x400454e	     0xf851cfaffff	                           jne 0x4003f70	      5771	option.c	FUNCTION_32	IF_1
0x4004554	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4004558	    0x4883bb581600	             cmp qword [rbx + 0x1658], 0	      5771	option.c	FUNCTION_32	IF_1
0x4004560	    0x488b05000000	            mov rax, qword [0x04004567] 	      5772	option.c	FUNCTION_32	IF_1
0x4004567	    0x488983401600	          mov qword [rbx + 0x1640], rax 	      5772	option.c	FUNCTION_32	IF_1
0x400456e	     0xf850afaffff	                           jne 0x4003f7e	      5771	option.c	FUNCTION_32	IF_1
0x4004574	         0xf1f4000	                         nop dword [rax]	      5771	option.c	FUNCTION_32	IF_1
0x4004578	    0x488b05000000	            mov rax, qword [0x0400457f] 	      5772	option.c	FUNCTION_32	IF_1
0x400457f	    0x488983581600	          mov qword [rbx + 0x1658], rax 	      5772	option.c	FUNCTION_32	IF_1
0x4004586	      0xe9f3f9ffff	                           jmp 0x4003f7e	      5772	option.c	FUNCTION_32	IF_1
put_setnum	SWITCH,0:CALL,4:DO,0:WHILE,0:IF,5:functions,0:ELSE,1:FOR,0	54
0x4002610	            0x4154	                                push r12	     10238	option.c	FUNCTION_67
0x4002612	              0x55	                                push rbp	     10238	option.c	FUNCTION_67
0x4002613	          0x4989d0	                             mov r8, rdx	     10238	option.c	FUNCTION_67
0x4002616	              0x53	                                push rbx	     10238	option.c	FUNCTION_67
0x4002617	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_61
0x4002619	          0x4889cd	                            mov rbp, rcx	     10238	option.c	FUNCTION_67
0x400261c	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_61
0x4002621	          0x4889f1	                            mov rcx, rsi	        97	stdio2.h	CALL_61
0x4002624	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_61
0x4002629	          0x4889fb	                            mov rbx, rdi	     10238	option.c	FUNCTION_67
0x400262c	      0xe800000000	                          call 0x4002631	        97	stdio2.h	CALL_61
0x4002631	            0x85c0	                           test eax, eax	     10241	option.c	FUNCTION_67	IF_1
0x4002633	            0x7871	                            js 0x40026a6	     10241	option.c	FUNCTION_67	IF_1
0x4002635	    0x4881fd000000	                              cmp rbp, 0	     11813	option.c	FUNCTION_92	IF_1
0x400263c	            0x743a	                            je 0x4002678	     11813	option.c	FUNCTION_92	IF_1
0x400263e	    0x4881fd000000	                              cmp rbp, 0	     11813	option.c	FUNCTION_92	IF_1
0x4002645	            0x7431	                            je 0x4002678	     11813	option.c	FUNCTION_92	IF_1
0x4002647	        0x488b4d00	                    mov rcx, qword [rbp]	        97	stdio2.h	CALL_61
0x400264b	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_61
0x400264d	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_61
0x4002652	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_61
0x4002657	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_61
0x400265a	      0xe800000000	                          call 0x400265f	        97	stdio2.h	CALL_61
0x400265f	            0x85c0	                           test eax, eax	     10249	option.c	FUNCTION_67	ELSE_1	IF_4
0x4002661	            0x7843	                            js 0x40026a6	     10249	option.c	FUNCTION_67	ELSE_1	IF_4
0x4002663	          0x4889df	                            mov rdi, rbx	     10251	option.c	FUNCTION_67	IF_5	CALL_4
0x4002666	      0xe800000000	                          call 0x400266b	     10251	option.c	FUNCTION_67	IF_5	CALL_4
0x400266b	            0xf7d0	                                 not eax	     10242	option.c	FUNCTION_67	IF_1
0x400266d	              0x5b	                                 pop rbx	     10254	option.c	FUNCTION_67
0x400266e	          0xc1e81f	                           shr eax, 0x1f	     10242	option.c	FUNCTION_67	IF_1
0x4002671	              0x5d	                                 pop rbp	     10254	option.c	FUNCTION_67
0x4002672	            0x415c	                                 pop r12	     10254	option.c	FUNCTION_67
0x4002674	              0xc3	                                     ret	     10254	option.c	FUNCTION_67
0x4002675	           0xf1f00	                         nop dword [rax]	     10254	option.c	FUNCTION_67
0x4002678	        0x488b7d00	                    mov rdi, qword [rbp]	     11815	option.c	FUNCTION_92	IF_1
0x400267c	          0x4885ff	                           test rdi, rdi	     11816	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0x400267f	          0x4189fc	                           mov r12d, edi	     11816	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0x4002682	            0x7809	                            js 0x400268d	     11816	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0x4002684	      0xe800000000	                          call 0x4002689	     11816	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0x4002689	            0x85c0	                           test eax, eax	     11816	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0x400268b	            0x78ba	                            js 0x4002647	     11816	option.c	FUNCTION_92	IF_1	IF_2	CALL_2
0x400268d	            0x31f6	                            xor esi, esi	     10246	option.c	FUNCTION_67	IF_2	IF_3	CALL_3
0x400268f	          0x4489e7	                           mov edi, r12d	     10246	option.c	FUNCTION_67	IF_2	IF_3	CALL_3
0x4002692	      0xe800000000	                          call 0x4002697	     10246	option.c	FUNCTION_67	IF_2	IF_3	CALL_3
0x4002697	          0x4889de	                            mov rsi, rbx	     10246	option.c	FUNCTION_67	IF_2	IF_3	CALL_3
0x400269a	          0x4889c7	                            mov rdi, rax	     10246	option.c	FUNCTION_67	IF_2	IF_3	CALL_3
0x400269d	      0xe800000000	                          call 0x40026a2	     10246	option.c	FUNCTION_67	IF_2	IF_3	CALL_3
0x40026a2	            0x85c0	                           test eax, eax	     10246	option.c	FUNCTION_67	IF_2	IF_3	CALL_3
0x40026a4	            0x79bd	                           jns 0x4002663	     10246	option.c	FUNCTION_67	IF_2	IF_3	CALL_3
0x40026a6	              0x5b	                                 pop rbx	     10254	option.c	FUNCTION_67
0x40026a7	            0x31c0	                            xor eax, eax	     10242	option.c	FUNCTION_67	IF_1
0x40026a9	              0x5d	                                 pop rbp	     10254	option.c	FUNCTION_67
0x40026aa	            0x415c	                                 pop r12	     10254	option.c	FUNCTION_67
0x40026ac	              0xc3	                                     ret	     10254	option.c	FUNCTION_67
has_format_option	SWITCH,0:CALL,1:DO,0:WHILE,0:IF,1:functions,0:ELSE,0:FOR,0	16
0x400d1a0	    0x8b0500000000	            mov eax, dword [0x0400d1a6] 	     12043	option.c	FUNCTION_97	IF_1
0x400d1a6	            0x85c0	                           test eax, eax	     12043	option.c	FUNCTION_97	IF_1
0x400d1a8	            0x7406	                            je 0x400d1b0	     12043	option.c	FUNCTION_97	IF_1
0x400d1aa	            0x31c0	                            xor eax, eax	     12043	option.c	FUNCTION_97	IF_1
0x400d1ac	              0xc3	                                     ret	     12043	option.c	FUNCTION_97	IF_1
0x400d1ad	           0xf1f00	                         nop dword [rax]	     12043	option.c	FUNCTION_97	IF_1
0x400d1b0	        0x4883ec08	                              sub rsp, 8	     12042	option.c	FUNCTION_97
0x400d1b4	    0x488b05000000	            mov rax, qword [0x0400d1bb] 	     12045	option.c	FUNCTION_97	CALL_1
0x400d1bb	            0x89fe	                            mov esi, edi	     12045	option.c	FUNCTION_97	CALL_1
0x400d1bd	    0x488bb8a01400	          mov rdi, qword [rax + 0x14a0] 	     12045	option.c	FUNCTION_97	CALL_1
0x400d1c4	      0xe800000000	                          call 0x400d1c9	     12045	option.c	FUNCTION_97	CALL_1
0x400d1c9	          0x4885c0	                           test rax, rax	     12045	option.c	FUNCTION_97	CALL_1
0x400d1cc	           0xf95c0	                                setne al	     12045	option.c	FUNCTION_97	CALL_1
0x400d1cf	        0x4883c408	                              add rsp, 8	     12046	option.c	FUNCTION_97
0x400d1d3	           0xfb6c0	                           movzx eax, al	     12045	option.c	FUNCTION_97	CALL_1
0x400d1d6	              0xc3	                                     ret	     12046	option.c	FUNCTION_97
get_equalprg	SWITCH,0:CALL,0:DO,0:WHILE,0:IF,1:functions,0:ELSE,0:FOR,0	5
0x400aff0	    0x488b05000000	            mov rax, qword [0x0400aff7] 	     10837	option.c	FUNCTION_78	IF_1
0x400aff7	    0x488b80081600	          mov rax, qword [rax + 0x1608] 	     10837	option.c	FUNCTION_78	IF_1
0x400affe	          0x803800	                       cmp byte [rax], 0	     10838	option.c	FUNCTION_78	IF_1
0x400b001	    0x480f44050000	           cmove rax, qword [0x0400b009]	     10838	option.c	FUNCTION_78	IF_1
0x400b009	              0xc3	                                     ret	     10840	option.c	FUNCTION_78
win_copy_options	SWITCH,0:CALL,3:DO,0:WHILE,0:IF,0:functions,0:ELSE,0:FOR,0	226
0x400b010	            0x4154	                                push r12	     10848	option.c	FUNCTION_79
0x400b012	              0x55	                                push rbp	     10848	option.c	FUNCTION_79
0x400b013	          0x4889fd	                            mov rbp, rdi	     10848	option.c	FUNCTION_79
0x400b016	              0x53	                                push rbx	     10848	option.c	FUNCTION_79
0x400b017	    0x8b87b0010000	           mov eax, dword [rdi + 0x1b0] 	     10872	option.c	FUNCTION_80
0x400b01d	          0x4889f3	                            mov rbx, rsi	     10848	option.c	FUNCTION_79
0x400b020	    0x4c8da6b00100	                  lea r12, [rsi + 0x1b0]	     10849	option.c	FUNCTION_79	CALL_1
0x400b027	    0x8986b0010000	            mov dword [rsi + 0x1b0], eax	     10872	option.c	FUNCTION_80
0x400b02d	    0x8b8734020000	           mov eax, dword [rdi + 0x234] 	     10874	option.c	FUNCTION_80
0x400b033	    0x898634020000	            mov dword [rsi + 0x234], eax	     10874	option.c	FUNCTION_80
0x400b039	    0x8b8738020000	           mov eax, dword [rdi + 0x238] 	     10875	option.c	FUNCTION_80
0x400b03f	    0x898638020000	            mov dword [rsi + 0x238], eax	     10875	option.c	FUNCTION_80
0x400b045	    0x8b873c020000	           mov eax, dword [rdi + 0x23c] 	     10876	option.c	FUNCTION_80
0x400b04b	    0x89863c020000	            mov dword [rsi + 0x23c], eax	     10876	option.c	FUNCTION_80
0x400b051	    0x488b87400200	           mov rax, qword [rdi + 0x240] 	     10878	option.c	FUNCTION_80
0x400b058	    0x488986400200	            mov qword [rsi + 0x240], rax	     10878	option.c	FUNCTION_80
0x400b05f	    0x8b8754020000	           mov eax, dword [rdi + 0x254] 	     10881	option.c	FUNCTION_80
0x400b065	    0x488bbf580200	           mov rdi, qword [rdi + 0x258] 	     10882	option.c	FUNCTION_80	CALL_1
0x400b06c	    0x898654020000	            mov dword [rsi + 0x254], eax	     10881	option.c	FUNCTION_80
0x400b072	      0xe800000000	                          call 0x400b077	     10882	option.c	FUNCTION_80	CALL_1
0x400b077	    0x488bbd800200	           mov rdi, qword [rbp + 0x280] 	     10885	option.c	FUNCTION_80	CALL_2
0x400b07e	    0x488983580200	            mov qword [rbx + 0x258], rax	     10882	option.c	FUNCTION_80	CALL_1
0x400b085	      0xe800000000	                          call 0x400b08a	     10885	option.c	FUNCTION_80	CALL_2
0x400b08a	    0x488983800200	            mov qword [rbx + 0x280], rax	     10885	option.c	FUNCTION_80	CALL_2
0x400b091	    0x8b8594020000	           mov eax, dword [rbp + 0x294] 	     10887	option.c	FUNCTION_80
0x400b097	    0x488bbdb80100	           mov rdi, qword [rbp + 0x1b8] 	     10894	option.c	FUNCTION_80	CALL_3
0x400b09e	    0x898394020000	            mov dword [rbx + 0x294], eax	     10887	option.c	FUNCTION_80
0x400b0a4	    0x8b8598020000	           mov eax, dword [rbp + 0x298] 	     10889	option.c	FUNCTION_80
0x400b0aa	    0x898398020000	            mov dword [rbx + 0x298], eax	     10889	option.c	FUNCTION_80
0x400b0b0	    0x8b8530020000	           mov eax, dword [rbp + 0x230] 	     10892	option.c	FUNCTION_80
0x400b0b6	    0x898330020000	            mov dword [rbx + 0x230], eax	     10892	option.c	FUNCTION_80
0x400b0bc	    0x8b85b4010000	           mov eax, dword [rbp + 0x1b4] 	     10893	option.c	FUNCTION_80
0x400b0c2	    0x8983b4010000	            mov dword [rbx + 0x1b4], eax	     10893	option.c	FUNCTION_80
0x400b0c8	      0xe800000000	                          call 0x400b0cd	     10894	option.c	FUNCTION_80	CALL_3
0x400b0cd	    0x488983b80100	            mov qword [rbx + 0x1b8], rax	     10894	option.c	FUNCTION_80	CALL_3
0x400b0d4	    0x8b8588020000	           mov eax, dword [rbp + 0x288] 	     10896	option.c	FUNCTION_80
0x400b0da	    0x488bbd780200	           mov rdi, qword [rbp + 0x278] 	     10906	option.c	FUNCTION_80	CALL_4
0x400b0e1	    0x898388020000	            mov dword [rbx + 0x288], eax	     10896	option.c	FUNCTION_80
0x400b0e7	    0x8b8590020000	           mov eax, dword [rbp + 0x290] 	     10897	option.c	FUNCTION_80
0x400b0ed	    0x898390020000	            mov dword [rbx + 0x290], eax	     10897	option.c	FUNCTION_80
0x400b0f3	    0x8b85b0020000	           mov eax, dword [rbp + 0x2b0] 	     10898	option.c	FUNCTION_80
0x400b0f9	    0x8983b0020000	            mov dword [rbx + 0x2b0], eax	     10898	option.c	FUNCTION_80
0x400b0ff	    0x8b85b4020000	           mov eax, dword [rbp + 0x2b4] 	     10899	option.c	FUNCTION_80
0x400b105	    0x8983b4020000	            mov dword [rbx + 0x2b4], eax	     10899	option.c	FUNCTION_80
0x400b10b	    0x8b8568020000	           mov eax, dword [rbp + 0x268] 	     10901	option.c	FUNCTION_80
0x400b111	    0x898368020000	            mov dword [rbx + 0x268], eax	     10901	option.c	FUNCTION_80
0x400b117	    0x8b856c020000	           mov eax, dword [rbp + 0x26c] 	     10904	option.c	FUNCTION_80
0x400b11d	    0x89836c020000	            mov dword [rbx + 0x26c], eax	     10904	option.c	FUNCTION_80
0x400b123	    0x8b8570020000	           mov eax, dword [rbp + 0x270] 	     10905	option.c	FUNCTION_80
0x400b129	    0x898370020000	            mov dword [rbx + 0x270], eax	     10905	option.c	FUNCTION_80
0x400b12f	      0xe800000000	                          call 0x400b134	     10906	option.c	FUNCTION_80	CALL_4
0x400b134	    0x488983780200	            mov qword [rbx + 0x278], rax	     10906	option.c	FUNCTION_80	CALL_4
0x400b13b	    0x8b85c0010000	           mov eax, dword [rbp + 0x1c0] 	     10909	option.c	FUNCTION_80
0x400b141	    0x488bbda00200	           mov rdi, qword [rbp + 0x2a0] 	     10913	option.c	FUNCTION_80	CALL_5
0x400b148	    0x8983c0010000	            mov dword [rbx + 0x1c0], eax	     10909	option.c	FUNCTION_80
0x400b14e	    0x8b858c020000	           mov eax, dword [rbp + 0x28c] 	     10910	option.c	FUNCTION_80
0x400b154	    0x89838c020000	            mov dword [rbx + 0x28c], eax	     10910	option.c	FUNCTION_80
0x400b15a	      0xe800000000	                          call 0x400b15f	     10913	option.c	FUNCTION_80	CALL_5
0x400b15f	    0x488983a00200	            mov qword [rbx + 0x2a0], rax	     10913	option.c	FUNCTION_80	CALL_5
0x400b166	    0x488b85a80200	           mov rax, qword [rbp + 0x2a8] 	     10914	option.c	FUNCTION_80
0x400b16d	    0x488bbdc00200	           mov rdi, qword [rbp + 0x2c0] 	     10917	option.c	FUNCTION_80	CALL_6
0x400b174	    0x488983a80200	            mov qword [rbx + 0x2a8], rax	     10914	option.c	FUNCTION_80
0x400b17b	      0xe800000000	                          call 0x400b180	     10917	option.c	FUNCTION_80	CALL_6
0x400b180	    0x488bbdc80200	           mov rdi, qword [rbp + 0x2c8] 	     10918	option.c	FUNCTION_80	CALL_7
0x400b187	    0x488983c00200	            mov qword [rbx + 0x2c0], rax	     10917	option.c	FUNCTION_80	CALL_6
0x400b18e	      0xe800000000	                          call 0x400b193	     10918	option.c	FUNCTION_80	CALL_7
0x400b193	    0x488983c80200	            mov qword [rbx + 0x2c8], rax	     10918	option.c	FUNCTION_80	CALL_7
0x400b19a	    0x488b85c80100	           mov rax, qword [rbp + 0x1c8] 	     10921	option.c	FUNCTION_80
0x400b1a1	    0x488bbde00100	           mov rdi, qword [rbp + 0x1e0] 	     10925	option.c	FUNCTION_80	CALL_8
0x400b1a8	    0x488983c80100	            mov qword [rbx + 0x1c8], rax	     10921	option.c	FUNCTION_80
0x400b1af	    0x8b85d0010000	           mov eax, dword [rbp + 0x1d0] 	     10922	option.c	FUNCTION_80
0x400b1b5	    0x8983d0010000	            mov dword [rbx + 0x1d0], eax	     10922	option.c	FUNCTION_80
0x400b1bb	    0x8b85d4010000	           mov eax, dword [rbp + 0x1d4] 	     10923	option.c	FUNCTION_80
0x400b1c1	    0x8983d4010000	            mov dword [rbx + 0x1d4], eax	     10923	option.c	FUNCTION_80
0x400b1c7	    0x8b85d8010000	           mov eax, dword [rbp + 0x1d8] 	     10924	option.c	FUNCTION_80
0x400b1cd	    0x8983d8010000	            mov dword [rbx + 0x1d8], eax	     10924	option.c	FUNCTION_80
0x400b1d3	      0xe800000000	                          call 0x400b1d8	     10925	option.c	FUNCTION_80	CALL_8
0x400b1d8	    0x488983e00100	            mov qword [rbx + 0x1e0], rax	     10925	option.c	FUNCTION_80	CALL_8
0x400b1df	    0x488b85080200	           mov rax, qword [rbp + 0x208] 	     10926	option.c	FUNCTION_80
0x400b1e6	    0x488bbdf80100	           mov rdi, qword [rbp + 0x1f8] 	     10929	option.c	FUNCTION_80	CALL_9
0x400b1ed	    0x488983080200	            mov qword [rbx + 0x208], rax	     10926	option.c	FUNCTION_80
0x400b1f4	    0x488b85e80100	           mov rax, qword [rbp + 0x1e8] 	     10927	option.c	FUNCTION_80
0x400b1fb	    0x488983e80100	            mov qword [rbx + 0x1e8], rax	     10927	option.c	FUNCTION_80
0x400b202	    0x8b85f0010000	           mov eax, dword [rbp + 0x1f0] 	     10928	option.c	FUNCTION_80
0x400b208	    0x8983f0010000	            mov dword [rbx + 0x1f0], eax	     10928	option.c	FUNCTION_80
0x400b20e	      0xe800000000	                          call 0x400b213	     10929	option.c	FUNCTION_80	CALL_9
0x400b213	    0x8b8d8c020000	           mov ecx, dword [rbp + 0x28c] 	     10931	option.c	FUNCTION_80	CALL_10
0x400b219	    0x488983f80100	            mov qword [rbx + 0x1f8], rax	     10929	option.c	FUNCTION_80	CALL_9
0x400b220	    0x488b05000000	            mov rax, qword [0x0400b227] 	     10931	option.c	FUNCTION_80	CALL_10
0x400b227	            0x85c9	                           test ecx, ecx	     10931	option.c	FUNCTION_80	CALL_10
0x400b229	     0xf8501030000	                           jne 0x400b530	     10931	option.c	FUNCTION_80	CALL_10
0x400b22f	    0x488983000200	            mov qword [rbx + 0x200], rax	     10930	option.c	FUNCTION_80
0x400b236	    0x488b85100200	           mov rax, qword [rbp + 0x210] 	     10932	option.c	FUNCTION_80
0x400b23d	    0x488bbd180200	           mov rdi, qword [rbp + 0x218] 	     10934	option.c	FUNCTION_80	CALL_11
0x400b244	    0x488983100200	            mov qword [rbx + 0x210], rax	     10932	option.c	FUNCTION_80
0x400b24b	      0xe800000000	                          call 0x400b250	     10934	option.c	FUNCTION_80	CALL_11
0x400b250	    0x488bbd200200	           mov rdi, qword [rbp + 0x220] 	     10935	option.c	FUNCTION_80	CALL_12
0x400b257	    0x488983180200	            mov qword [rbx + 0x218], rax	     10934	option.c	FUNCTION_80	CALL_11
0x400b25e	      0xe800000000	                          call 0x400b263	     10935	option.c	FUNCTION_80	CALL_12
0x400b263	    0x488bbd280200	           mov rdi, qword [rbp + 0x228] 	     10937	option.c	FUNCTION_80	CALL_13
0x400b26a	    0x488983200200	            mov qword [rbx + 0x220], rax	     10935	option.c	FUNCTION_80	CALL_12
0x400b271	      0xe800000000	                          call 0x400b276	     10937	option.c	FUNCTION_80	CALL_13
0x400b276	    0x488bbdb80200	           mov rdi, qword [rbp + 0x2b8] 	     10940	option.c	FUNCTION_80	CALL_14
0x400b27d	    0x488983280200	            mov qword [rbx + 0x228], rax	     10937	option.c	FUNCTION_80	CALL_13
0x400b284	      0xe800000000	                          call 0x400b289	     10940	option.c	FUNCTION_80	CALL_14
0x400b289	          0x4c89e7	                            mov rdi, r12	     10942	option.c	FUNCTION_80	CALL_15
0x400b28c	    0x488983b80200	            mov qword [rbx + 0x2b8], rax	     10940	option.c	FUNCTION_80	CALL_14
0x400b293	    0x4c8da3680300	                  lea r12, [rbx + 0x368]	     10850	option.c	FUNCTION_79	CALL_2
0x400b29a	      0xe8314effff	                   call sym.check_winopt	     10942	option.c	FUNCTION_80	CALL_15
0x400b29f	    0x8b8568030000	           mov eax, dword [rbp + 0x368] 	     10872	option.c	FUNCTION_80
0x400b2a5	    0x488bbd100400	           mov rdi, qword [rbp + 0x410] 	     10882	option.c	FUNCTION_80	CALL_1
0x400b2ac	    0x898368030000	            mov dword [rbx + 0x368], eax	     10872	option.c	FUNCTION_80
0x400b2b2	    0x8b85ec030000	           mov eax, dword [rbp + 0x3ec] 	     10874	option.c	FUNCTION_80
0x400b2b8	    0x8983ec030000	            mov dword [rbx + 0x3ec], eax	     10874	option.c	FUNCTION_80
0x400b2be	    0x8b85f0030000	           mov eax, dword [rbp + 0x3f0] 	     10875	option.c	FUNCTION_80
0x400b2c4	    0x8983f0030000	            mov dword [rbx + 0x3f0], eax	     10875	option.c	FUNCTION_80
0x400b2ca	    0x8b85f4030000	           mov eax, dword [rbp + 0x3f4] 	     10876	option.c	FUNCTION_80
0x400b2d0	    0x8983f4030000	            mov dword [rbx + 0x3f4], eax	     10876	option.c	FUNCTION_80
0x400b2d6	    0x488b85f80300	           mov rax, qword [rbp + 0x3f8] 	     10878	option.c	FUNCTION_80
0x400b2dd	    0x488983f80300	            mov qword [rbx + 0x3f8], rax	     10878	option.c	FUNCTION_80
0x400b2e4	    0x8b850c040000	           mov eax, dword [rbp + 0x40c] 	     10881	option.c	FUNCTION_80
0x400b2ea	    0x89830c040000	            mov dword [rbx + 0x40c], eax	     10881	option.c	FUNCTION_80
0x400b2f0	      0xe800000000	                          call 0x400b2f5	     10882	option.c	FUNCTION_80	CALL_1
0x400b2f5	    0x488bbd380400	           mov rdi, qword [rbp + 0x438] 	     10885	option.c	FUNCTION_80	CALL_2
0x400b2fc	    0x488983100400	            mov qword [rbx + 0x410], rax	     10882	option.c	FUNCTION_80	CALL_1
0x400b303	      0xe800000000	                          call 0x400b308	     10885	option.c	FUNCTION_80	CALL_2
0x400b308	    0x488983380400	            mov qword [rbx + 0x438], rax	     10885	option.c	FUNCTION_80	CALL_2
0x400b30f	    0x8b854c040000	           mov eax, dword [rbp + 0x44c] 	     10887	option.c	FUNCTION_80
0x400b315	    0x488bbd700300	           mov rdi, qword [rbp + 0x370] 	     10894	option.c	FUNCTION_80	CALL_3
0x400b31c	    0x89834c040000	            mov dword [rbx + 0x44c], eax	     10887	option.c	FUNCTION_80
0x400b322	    0x8b8550040000	           mov eax, dword [rbp + 0x450] 	     10889	option.c	FUNCTION_80
0x400b328	    0x898350040000	            mov dword [rbx + 0x450], eax	     10889	option.c	FUNCTION_80
0x400b32e	    0x8b85e8030000	           mov eax, dword [rbp + 0x3e8] 	     10892	option.c	FUNCTION_80
0x400b334	    0x8983e8030000	            mov dword [rbx + 0x3e8], eax	     10892	option.c	FUNCTION_80
0x400b33a	    0x8b856c030000	           mov eax, dword [rbp + 0x36c] 	     10893	option.c	FUNCTION_80
0x400b340	    0x89836c030000	            mov dword [rbx + 0x36c], eax	     10893	option.c	FUNCTION_80
0x400b346	      0xe800000000	                          call 0x400b34b	     10894	option.c	FUNCTION_80	CALL_3
0x400b34b	    0x488983700300	            mov qword [rbx + 0x370], rax	     10894	option.c	FUNCTION_80	CALL_3
0x400b352	    0x8b8540040000	           mov eax, dword [rbp + 0x440] 	     10896	option.c	FUNCTION_80
0x400b358	    0x488bbd300400	           mov rdi, qword [rbp + 0x430] 	     10906	option.c	FUNCTION_80	CALL_4
0x400b35f	    0x898340040000	            mov dword [rbx + 0x440], eax	     10896	option.c	FUNCTION_80
0x400b365	    0x8b8548040000	           mov eax, dword [rbp + 0x448] 	     10897	option.c	FUNCTION_80
0x400b36b	    0x898348040000	            mov dword [rbx + 0x448], eax	     10897	option.c	FUNCTION_80
0x400b371	    0x8b8568040000	           mov eax, dword [rbp + 0x468] 	     10898	option.c	FUNCTION_80
0x400b377	    0x898368040000	            mov dword [rbx + 0x468], eax	     10898	option.c	FUNCTION_80
0x400b37d	    0x8b856c040000	           mov eax, dword [rbp + 0x46c] 	     10899	option.c	FUNCTION_80
0x400b383	    0x89836c040000	            mov dword [rbx + 0x46c], eax	     10899	option.c	FUNCTION_80
0x400b389	    0x8b8520040000	           mov eax, dword [rbp + 0x420] 	     10901	option.c	FUNCTION_80
0x400b38f	    0x898320040000	            mov dword [rbx + 0x420], eax	     10901	option.c	FUNCTION_80
0x400b395	    0x8b8524040000	           mov eax, dword [rbp + 0x424] 	     10904	option.c	FUNCTION_80
0x400b39b	    0x898324040000	            mov dword [rbx + 0x424], eax	     10904	option.c	FUNCTION_80
0x400b3a1	    0x8b8528040000	           mov eax, dword [rbp + 0x428] 	     10905	option.c	FUNCTION_80
0x400b3a7	    0x898328040000	            mov dword [rbx + 0x428], eax	     10905	option.c	FUNCTION_80
0x400b3ad	      0xe800000000	                          call 0x400b3b2	     10906	option.c	FUNCTION_80	CALL_4
0x400b3b2	    0x488983300400	            mov qword [rbx + 0x430], rax	     10906	option.c	FUNCTION_80	CALL_4
0x400b3b9	    0x8b8578030000	           mov eax, dword [rbp + 0x378] 	     10909	option.c	FUNCTION_80
0x400b3bf	    0x488bbd580400	           mov rdi, qword [rbp + 0x458] 	     10913	option.c	FUNCTION_80	CALL_5
0x400b3c6	    0x898378030000	            mov dword [rbx + 0x378], eax	     10909	option.c	FUNCTION_80
0x400b3cc	    0x8b8544040000	           mov eax, dword [rbp + 0x444] 	     10910	option.c	FUNCTION_80
0x400b3d2	    0x898344040000	            mov dword [rbx + 0x444], eax	     10910	option.c	FUNCTION_80
0x400b3d8	      0xe800000000	                          call 0x400b3dd	     10913	option.c	FUNCTION_80	CALL_5
0x400b3dd	    0x488983580400	            mov qword [rbx + 0x458], rax	     10913	option.c	FUNCTION_80	CALL_5
0x400b3e4	    0x488b85600400	           mov rax, qword [rbp + 0x460] 	     10914	option.c	FUNCTION_80
0x400b3eb	    0x488bbd780400	           mov rdi, qword [rbp + 0x478] 	     10917	option.c	FUNCTION_80	CALL_6
0x400b3f2	    0x488983600400	            mov qword [rbx + 0x460], rax	     10914	option.c	FUNCTION_80
0x400b3f9	      0xe800000000	                          call 0x400b3fe	     10917	option.c	FUNCTION_80	CALL_6
0x400b3fe	    0x488bbd800400	           mov rdi, qword [rbp + 0x480] 	     10918	option.c	FUNCTION_80	CALL_7
0x400b405	    0x488983780400	            mov qword [rbx + 0x478], rax	     10917	option.c	FUNCTION_80	CALL_6
0x400b40c	      0xe800000000	                          call 0x400b411	     10918	option.c	FUNCTION_80	CALL_7
0x400b411	    0x488983800400	            mov qword [rbx + 0x480], rax	     10918	option.c	FUNCTION_80	CALL_7
0x400b418	    0x488b85800300	           mov rax, qword [rbp + 0x380] 	     10921	option.c	FUNCTION_80
0x400b41f	    0x488bbd980300	           mov rdi, qword [rbp + 0x398] 	     10925	option.c	FUNCTION_80	CALL_8
0x400b426	    0x488983800300	            mov qword [rbx + 0x380], rax	     10921	option.c	FUNCTION_80
0x400b42d	    0x8b8588030000	           mov eax, dword [rbp + 0x388] 	     10922	option.c	FUNCTION_80
0x400b433	    0x898388030000	            mov dword [rbx + 0x388], eax	     10922	option.c	FUNCTION_80
0x400b439	    0x8b858c030000	           mov eax, dword [rbp + 0x38c] 	     10923	option.c	FUNCTION_80
0x400b43f	    0x89838c030000	            mov dword [rbx + 0x38c], eax	     10923	option.c	FUNCTION_80
0x400b445	    0x8b8590030000	           mov eax, dword [rbp + 0x390] 	     10924	option.c	FUNCTION_80
0x400b44b	    0x898390030000	            mov dword [rbx + 0x390], eax	     10924	option.c	FUNCTION_80
0x400b451	      0xe800000000	                          call 0x400b456	     10925	option.c	FUNCTION_80	CALL_8
0x400b456	    0x488983980300	            mov qword [rbx + 0x398], rax	     10925	option.c	FUNCTION_80	CALL_8
0x400b45d	    0x488b85c00300	           mov rax, qword [rbp + 0x3c0] 	     10926	option.c	FUNCTION_80
0x400b464	    0x488bbdb00300	           mov rdi, qword [rbp + 0x3b0] 	     10929	option.c	FUNCTION_80	CALL_9
0x400b46b	    0x488983c00300	            mov qword [rbx + 0x3c0], rax	     10926	option.c	FUNCTION_80
0x400b472	    0x488b85a00300	           mov rax, qword [rbp + 0x3a0] 	     10927	option.c	FUNCTION_80
0x400b479	    0x488983a00300	            mov qword [rbx + 0x3a0], rax	     10927	option.c	FUNCTION_80
0x400b480	    0x8b85a8030000	           mov eax, dword [rbp + 0x3a8] 	     10928	option.c	FUNCTION_80
0x400b486	    0x8983a8030000	            mov dword [rbx + 0x3a8], eax	     10928	option.c	FUNCTION_80
0x400b48c	      0xe800000000	                          call 0x400b491	     10929	option.c	FUNCTION_80	CALL_9
0x400b491	    0x8b9544040000	           mov edx, dword [rbp + 0x444] 	     10931	option.c	FUNCTION_80	CALL_10
0x400b497	    0x488983b00300	            mov qword [rbx + 0x3b0], rax	     10929	option.c	FUNCTION_80	CALL_9
0x400b49e	    0x488b05000000	            mov rax, qword [0x0400b4a5] 	     10931	option.c	FUNCTION_80	CALL_10
0x400b4a5	            0x85d2	                           test edx, edx	     10931	option.c	FUNCTION_80	CALL_10
0x400b4a7	     0xf859b000000	                           jne 0x400b548	     10931	option.c	FUNCTION_80	CALL_10
0x400b4ad	    0x488983b80300	            mov qword [rbx + 0x3b8], rax	     10930	option.c	FUNCTION_80
0x400b4b4	    0x488b85c80300	           mov rax, qword [rbp + 0x3c8] 	     10932	option.c	FUNCTION_80
0x400b4bb	    0x488bbdd00300	           mov rdi, qword [rbp + 0x3d0] 	     10934	option.c	FUNCTION_80	CALL_11
0x400b4c2	    0x488983c80300	            mov qword [rbx + 0x3c8], rax	     10932	option.c	FUNCTION_80
0x400b4c9	      0xe800000000	                          call 0x400b4ce	     10934	option.c	FUNCTION_80	CALL_11
0x400b4ce	    0x488bbdd80300	           mov rdi, qword [rbp + 0x3d8] 	     10935	option.c	FUNCTION_80	CALL_12
0x400b4d5	    0x488983d00300	            mov qword [rbx + 0x3d0], rax	     10934	option.c	FUNCTION_80	CALL_11
0x400b4dc	      0xe800000000	                          call 0x400b4e1	     10935	option.c	FUNCTION_80	CALL_12
0x400b4e1	    0x488bbde00300	           mov rdi, qword [rbp + 0x3e0] 	     10937	option.c	FUNCTION_80	CALL_13
0x400b4e8	    0x488983d80300	            mov qword [rbx + 0x3d8], rax	     10935	option.c	FUNCTION_80	CALL_12
0x400b4ef	      0xe800000000	                          call 0x400b4f4	     10937	option.c	FUNCTION_80	CALL_13
0x400b4f4	    0x488bbd700400	           mov rdi, qword [rbp + 0x470] 	     10940	option.c	FUNCTION_80	CALL_14
0x400b4fb	    0x488983e00300	            mov qword [rbx + 0x3e0], rax	     10937	option.c	FUNCTION_80	CALL_13
0x400b502	      0xe800000000	                          call 0x400b507	     10940	option.c	FUNCTION_80	CALL_14
0x400b507	          0x4c89e7	                            mov rdi, r12	     10942	option.c	FUNCTION_80	CALL_15
0x400b50a	    0x488983700400	            mov qword [rbx + 0x470], rax	     10940	option.c	FUNCTION_80	CALL_14
0x400b511	      0xe8ba4bffff	                   call sym.check_winopt	     10942	option.c	FUNCTION_80	CALL_15
0x400b516	    0x8b8578050000	           mov eax, dword [rbp + 0x578] 	     10854	option.c	FUNCTION_79
0x400b51c	          0x4889df	                            mov rdi, rbx	     10858	option.c	FUNCTION_79	CALL_3
0x400b51f	    0x898378050000	            mov dword [rbx + 0x578], eax	     10854	option.c	FUNCTION_79
0x400b525	              0x5b	                                 pop rbx	     10860	option.c	FUNCTION_79
0x400b526	              0x5d	                                 pop rbp	     10860	option.c	FUNCTION_79
0x400b527	            0x415c	                                 pop r12	     10860	option.c	FUNCTION_79
0x400b529	      0xe96251ffff	                    jmp sym.briopt_check	     10858	option.c	FUNCTION_79	CALL_3
0x400b52e	            0x6690	                                     nop	     10858	option.c	FUNCTION_79	CALL_3
0x400b530	    0x488bbd000200	           mov rdi, qword [rbp + 0x200] 	     10931	option.c	FUNCTION_80	CALL_10
0x400b537	      0xe800000000	                          call 0x400b53c	     10931	option.c	FUNCTION_80	CALL_10
0x400b53c	      0xe9eefcffff	                           jmp 0x400b22f	     10931	option.c	FUNCTION_80	CALL_10
0x400b541	     0xf1f80000000	                         nop dword [rax]	     10931	option.c	FUNCTION_80	CALL_10
0x400b548	    0x488bbdb80300	           mov rdi, qword [rbp + 0x3b8] 	     10931	option.c	FUNCTION_80	CALL_10
0x400b54f	      0xe800000000	                          call 0x400b554	     10931	option.c	FUNCTION_80	CALL_10
0x400b554	      0xe954ffffff	                           jmp 0x400b4ad	     10931	option.c	FUNCTION_80	CALL_10
get_winbuf_options	SWITCH,0:CALL,6:DO,0:WHILE,0:IF,5:functions,0:ELSE,2:FOR,1	75
0x40134d0	            0x4156	                                push r14	     12715	option.c	FUNCTION_119
0x40134d2	            0x4155	                                push r13	     12715	option.c	FUNCTION_119
0x40134d4	          0x4189fd	                           mov r13d, edi	     12715	option.c	FUNCTION_119
0x40134d7	            0x4154	                                push r12	     12715	option.c	FUNCTION_119
0x40134d9	              0x55	                                push rbp	     12715	option.c	FUNCTION_119
0x40134da	              0x53	                                push rbx	     12715	option.c	FUNCTION_119
0x40134db	      0xe800000000	                          call 0x40134e0	     12719	option.c	FUNCTION_119	CALL_1
0x40134e0	          0x4885c0	                           test rax, rax	     12720	option.c	FUNCTION_119	IF_1
0x40134e3	     0xf84dd000000	                            je 0x40135c6	     12720	option.c	FUNCTION_119	IF_1
0x40134e9	          0x4989c6	                            mov r14, rax	     12720	option.c	FUNCTION_119	IF_1
0x40134ec	      0xbb00000000	                              mov ebx, 0	     12720	option.c	FUNCTION_119	IF_1
0x40134f1	          0x4531e4	                          xor r12d, r12d	     12720	option.c	FUNCTION_119	IF_1
0x40134f4	            0xeb62	                           jmp 0x4013558	     12720	option.c	FUNCTION_119	IF_1
0x40134f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     12720	option.c	FUNCTION_119	IF_1
0x4013500	          0x4963ec	                        movsxd rbp, r12d	     12728	option.c	FUNCTION_119	FOR_1	IF_2
0x4013503	          0x4889e8	                            mov rax, rbp	     12728	option.c	FUNCTION_119	FOR_1	IF_2
0x4013506	        0x48c1e006	                              shl rax, 6	     12728	option.c	FUNCTION_119	FOR_1	IF_2
0x401350a	    0xf68000000000	                   test byte [rax], 0x20	     12728	option.c	FUNCTION_119	FOR_1	IF_2
0x4013511	            0x743d	                            je 0x4013550	     12728	option.c	FUNCTION_119	FOR_1	IF_2
0x4013513	        0x488b7bf8	                mov rdi, qword [rbx - 8]	     12730	option.c	FUNCTION_119	FOR_1	IF_2	CALL_3
0x4013517	          0x4889de	                            mov rsi, rbx	     12730	option.c	FUNCTION_119	FOR_1	IF_2	CALL_3
0x401351a	      0xe831d5feff	                call sym.get_varp.isra.1	     12730	option.c	FUNCTION_119	FOR_1	IF_2	CALL_3
0x401351f	          0x4885c0	                           test rax, rax	     12732	option.c	FUNCTION_119	FOR_1	IF_2	IF_3
0x4013522	            0x742c	                            je 0x4013550	     12732	option.c	FUNCTION_119	FOR_1	IF_2	IF_3
0x4013524	        0x48c1e506	                              shl rbp, 6	     12734	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	IF_4
0x4013528	    0x488b95000000	                    mov rdx, qword [rbp]	     12734	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	IF_4
0x401352f	          0xf6c204	                              test dl, 4	     12734	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	IF_4
0x4013532	            0x757c	                           jne 0x40135b0	     12734	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	IF_4
0x4013534	          0x83e202	                              and edx, 2	     12736	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x4013537	            0x745f	                            je 0x4013598	     12736	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x4013539	          0x488b10	                    mov rdx, qword [rax]	     12737	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x401353c	    0x488bb5000000	                    mov rsi, qword [rbp]	     12737	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x4013543	            0x31c9	                            xor ecx, ecx	     12737	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x4013545	          0x4c89f7	                            mov rdi, r14	     12737	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x4013548	      0xe800000000	                          call 0x401354d	     12737	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x401354d	           0xf1f00	                         nop dword [rax]	     12737	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	ELSE_1	IF_5
0x4013550	        0x4183c401	                             add r12d, 1	     12723	option.c	FUNCTION_119	FOR_1	CALL_2
0x4013554	        0x4883c340	                           add rbx, 0x40	     12723	option.c	FUNCTION_119	FOR_1	CALL_2
0x4013558	        0x488b43e0	             mov rax, qword [rbx - 0x20]	     12723	option.c	FUNCTION_119	FOR_1	CALL_2
0x401355c	          0x803874	                    cmp byte [rax], 0x74	     10375	option.c	FUNCTION_73
0x401355f	            0x741f	                            je 0x4013580	     10375	option.c	FUNCTION_73
0x4013561	          0x4585ed	                         test r13d, r13d	     12727	option.c	FUNCTION_119	FOR_1	IF_2
0x4013564	            0x749a	                            je 0x4013500	     12727	option.c	FUNCTION_119	FOR_1	IF_2
0x4013566	          0x4963ec	                        movsxd rbp, r12d	     12727	option.c	FUNCTION_119	FOR_1	IF_2
0x4013569	          0x4889e8	                            mov rax, rbp	     12727	option.c	FUNCTION_119	FOR_1	IF_2
0x401356c	        0x48c1e006	                              shl rax, 6	     12727	option.c	FUNCTION_119	FOR_1	IF_2
0x4013570	    0xf68000000000	                   test byte [rax], 0x40	     12727	option.c	FUNCTION_119	FOR_1	IF_2
0x4013577	            0x759a	                           jne 0x4013513	     12727	option.c	FUNCTION_119	FOR_1	IF_2
0x4013579	            0xebd5	                           jmp 0x4013550	     12727	option.c	FUNCTION_119	FOR_1	IF_2
0x401357b	       0xf1f440000	                   nop dword [rax + rax]	     12727	option.c	FUNCTION_119	FOR_1	IF_2
0x4013580	        0x8078015f	                cmp byte [rax + 1], 0x5f	     10375	option.c	FUNCTION_73
0x4013584	            0x75db	                           jne 0x4013561	     10375	option.c	FUNCTION_73
0x4013586	          0x4c89f0	                            mov rax, r14	     10375	option.c	FUNCTION_73
0x4013589	              0x5b	                                 pop rbx	     12745	option.c	FUNCTION_119
0x401358a	              0x5d	                                 pop rbp	     12745	option.c	FUNCTION_119
0x401358b	            0x415c	                                 pop r12	     12745	option.c	FUNCTION_119
0x401358d	            0x415d	                                 pop r13	     12745	option.c	FUNCTION_119
0x401358f	            0x415e	                                 pop r14	     12745	option.c	FUNCTION_119
0x4013591	              0xc3	                                     ret	     12745	option.c	FUNCTION_119
0x4013592	    0x660f1f440000	                    nop word [rax + rax]	     12745	option.c	FUNCTION_119
0x4013598	          0x486310	                 movsxd rdx, dword [rax]	     12739	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_6
0x401359b	    0x488bb5000000	                    mov rsi, qword [rbp]	     12739	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_6
0x40135a2	            0x31c9	                            xor ecx, ecx	     12739	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_6
0x40135a4	          0x4c89f7	                            mov rdi, r14	     12739	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_6
0x40135a7	      0xe800000000	                          call 0x40135ac	     12739	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_6
0x40135ac	            0xeba2	                           jmp 0x4013550	     12739	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_6
0x40135ae	            0x6690	                                     nop	     12739	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_6
0x40135b0	          0x488b08	                    mov rcx, qword [rax]	     12735	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_4
0x40135b3	    0x488bb5000000	                    mov rsi, qword [rbp]	     12735	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_4
0x40135ba	            0x31d2	                            xor edx, edx	     12735	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_4
0x40135bc	          0x4c89f7	                            mov rdi, r14	     12735	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_4
0x40135bf	      0xe800000000	                          call 0x40135c4	     12735	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_4
0x40135c4	            0xeb8a	                           jmp 0x4013550	     12735	option.c	FUNCTION_119	FOR_1	IF_2	IF_3	CALL_4
0x40135c6	            0x31c0	                            xor eax, eax	     12721	option.c	FUNCTION_119	IF_1
0x40135c8	            0xebbf	                           jmp 0x4013589	     12721	option.c	FUNCTION_119	IF_1
set_num_option	SWITCH,0:CALL,53:DO,0:WHILE,0:IF,99:functions,0:ELSE,36:FOR,0	847
0x4006770	            0x4157	                                push r15	      8764	option.c	FUNCTION_50
0x4006772	            0x4156	                                push r14	      8764	option.c	FUNCTION_50
0x4006774	          0x4989cf	                            mov r15, rcx	      8764	option.c	FUNCTION_50
0x4006777	            0x4155	                                push r13	      8764	option.c	FUNCTION_50
0x4006779	            0x4154	                                push r12	      8764	option.c	FUNCTION_50
0x400677b	          0x4989f5	                            mov r13, rsi	      8764	option.c	FUNCTION_50
0x400677e	              0x55	                                push rbp	      8764	option.c	FUNCTION_50
0x400677f	              0x53	                                push rbx	      8764	option.c	FUNCTION_50
0x4006780	          0x4989d6	                            mov r14, rdx	      8764	option.c	FUNCTION_50
0x4006783	          0x4589cc	                           mov r12d, r9d	      8764	option.c	FUNCTION_50
0x4006786	          0x4863df	                         movsxd rbx, edi	      8776	option.c	FUNCTION_50	IF_1
0x4006789	    0x4881ec880000	                           sub rsp, 0x88	      8764	option.c	FUNCTION_50
0x4006790	    0x64488b042528	                mov rax, qword fs:[0x28]	      8764	option.c	FUNCTION_50
0x4006799	      0x4889442478	             mov qword [rsp + 0x78], rax	      8764	option.c	FUNCTION_50
0x400679e	            0x31c0	                            xor eax, eax	      8764	option.c	FUNCTION_50
0x40067a0	    0x8b0500000000	            mov eax, dword [0x040067a6] 	      8772	option.c	FUNCTION_50	IF_1
0x40067a6	      0x4c89442418	              mov qword [rsp + 0x18], r8	      8764	option.c	FUNCTION_50
0x40067ab	            0x85c0	                           test eax, eax	      8772	option.c	FUNCTION_50	IF_1
0x40067ad	            0x750a	                           jne 0x40067b9	      8772	option.c	FUNCTION_50	IF_1
0x40067af	    0x8b0500000000	            mov eax, dword [0x040067b5] 	      8774	option.c	FUNCTION_50	IF_1
0x40067b5	            0x85c0	                           test eax, eax	      8774	option.c	FUNCTION_50	IF_1
0x40067b7	            0x7419	                            je 0x40067d2	      8774	option.c	FUNCTION_50	IF_1
0x40067b9	          0x4889da	                            mov rdx, rbx	      8776	option.c	FUNCTION_50	IF_1
0x40067bc	      0xb800000000	                              mov eax, 0	      8777	option.c	FUNCTION_50	IF_1
0x40067c1	        0x48c1e206	                              shl rdx, 6	      8776	option.c	FUNCTION_50	IF_1
0x40067c5	    0xf68200000000	                      test byte [rdx], 8	      8776	option.c	FUNCTION_50	IF_1
0x40067cc	     0xf8531060000	                           jne 0x4006e03	      8776	option.c	FUNCTION_50	IF_1
0x40067d2	        0x498b4500	                    mov rax, qword [r13]	      8766	option.c	FUNCTION_50
0x40067d6	          0x4489e6	                           mov esi, r12d	      8108	option.c	FUNCTION_48	IF_1
0x40067d9	    0x8b0d00000000	            mov ecx, dword [0x040067df] 	      8782	option.c	FUNCTION_50	CALL_1
0x40067df	      0x4889442420	             mov qword [rsp + 0x20], rax	      8766	option.c	FUNCTION_50
0x40067e4	    0x488b05000000	            mov rax, qword [0x040067eb] 	      8767	option.c	FUNCTION_50
0x40067eb	      0x4889442408	                mov qword [rsp + 8], rax	      8767	option.c	FUNCTION_50
0x40067f0	    0x488b05000000	            mov rax, qword [0x040067f7] 	      8768	option.c	FUNCTION_50
0x40067f7	        0x4d897500	                    mov qword [r13], r14	      8779	option.c	FUNCTION_50
0x40067fb	      0x4889442428	             mov qword [rsp + 0x28], rax	      8768	option.c	FUNCTION_50
0x4006800	          0x4889d8	                            mov rax, rbx	      8104	option.c	FUNCTION_48
0x4006803	        0x48c1e006	                              shl rax, 6	      8104	option.c	FUNCTION_48
0x4006807	    0x480500000000	                              add rax, 0	      8104	option.c	FUNCTION_48
0x400680d	          0x83e606	                              and esi, 6	      8108	option.c	FUNCTION_48	IF_1
0x4006810	          0x8b5020	            mov edx, dword [rax + 0x20] 	      8104	option.c	FUNCTION_48
0x4006813	        0x89742414	             mov dword [rsp + 0x14], esi	      8108	option.c	FUNCTION_48	IF_1
0x4006817	     0xf8513060000	                           jne 0x4006e30	      8108	option.c	FUNCTION_48	IF_1
0x400681d	          0xf6c640	                           test dh, 0x40	      8112	option.c	FUNCTION_48	IF_2	IF_3
0x4006820	          0x894838	             mov dword [rax + 0x38], ecx	      8109	option.c	FUNCTION_48	IF_1
0x4006823	     0xf852d060000	                           jne 0x4006e56	      8112	option.c	FUNCTION_48	IF_2	IF_3
0x4006829	          0xf6c620	                           test dh, 0x20	      8114	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x400682c	            0x7414	                            je 0x4006842	      8114	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x400682e	    0x488b05000000	            mov rax, qword [0x04006835] 	      8115	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x4006835	    0x81e2ff0f0000	                          and edx, 0xfff	      8115	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x400683b	    0x898c90d00200	    mov dword [rax + rdx*4 + 0x2d0], ecx	      8115	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x4006842	    0x488b05000000	            mov rax, qword [0x04006849] 	      8115	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x4006849	            0x31ed	                            xor ebp, ebp	      8765	option.c	FUNCTION_50
0x400684b	    0x4883b8681500	             cmp qword [rax + 0x1568], 0	      8788	option.c	FUNCTION_50	IF_2
0x4006853	    0xc70500000000	               mov dword [0x0400685d], 1	      8785	option.c	FUNCTION_50
0x400685d	     0xf8815080000	                            js 0x4007078	      8788	option.c	FUNCTION_50	IF_2
0x4006863	    0x4981fd000000	                              cmp r13, 0	      8797	option.c	FUNCTION_50	IF_3
0x400686a	     0xf84f0010000	                            je 0x4006a60	      8797	option.c	FUNCTION_50	IF_3
0x4006870	    0x4981fd000000	                              cmp r13, 0	      8797	option.c	FUNCTION_50	IF_3
0x4006877	     0xf84e3010000	                            je 0x4006a60	      8797	option.c	FUNCTION_50	IF_3
0x400687d	    0x4981fd000000	                              cmp r13, 0	      8826	option.c	FUNCTION_50	ELSE_1	IF_10
0x4006884	     0xf8436080000	                            je 0x40070c0	      8826	option.c	FUNCTION_50	ELSE_1	IF_10
0x400688a	    0x4981fd000000	                              cmp r13, 0	      8840	option.c	FUNCTION_50	ELSE_2	IF_13
0x4006891	     0xf8499080000	                            je 0x4007130	      8840	option.c	FUNCTION_50	ELSE_2	IF_13
0x4006897	    0x4981fd000000	                              cmp r13, 0	      8859	option.c	FUNCTION_50	ELSE_3	IF_17
0x400689e	     0xf84fc080000	                            je 0x40071a0	      8859	option.c	FUNCTION_50	ELSE_3	IF_17
0x40068a4	    0x4981fd000000	                              cmp r13, 0	      8875	option.c	FUNCTION_50	ELSE_4	IF_20
0x40068ab	     0xf843f0c0000	                            je 0x40074f0	      8875	option.c	FUNCTION_50	ELSE_4	IF_20
0x40068b1	    0x4981fd000000	                              cmp r13, 0	      8881	option.c	FUNCTION_50	ELSE_5	IF_21
0x40068b8	     0xf84620c0000	                            je 0x4007520	      8881	option.c	FUNCTION_50	ELSE_5	IF_21
0x40068be	    0x4981fd000000	                              cmp r13, 0	      8887	option.c	FUNCTION_50	ELSE_6	IF_22
0x40068c5	     0xf84050a0000	                            je 0x40072d0	      8887	option.c	FUNCTION_50	ELSE_6	IF_22
0x40068cb	    0x488b3d000000	            mov rdi, qword [0x040068d2] 	      8898	option.c	FUNCTION_50	ELSE_7	IF_24
0x40068d2	    0x488d97e80100	                  lea rdx, [rdi + 0x1e8]	      8898	option.c	FUNCTION_50	ELSE_7	IF_24
0x40068d9	          0x4939d5	                            cmp r13, rdx	      8898	option.c	FUNCTION_50	ELSE_7	IF_24
0x40068dc	     0xf842e090000	                            je 0x4007210	      8898	option.c	FUNCTION_50	ELSE_7	IF_24
0x40068e2	    0x488d97080200	                  lea rdx, [rdi + 0x208]	      8906	option.c	FUNCTION_50	ELSE_8	IF_26
0x40068e9	          0x4939d5	                            cmp r13, rdx	      8906	option.c	FUNCTION_50	ELSE_8	IF_26
0x40068ec	     0xf84ea0b0000	                            je 0x40074dc	      8906	option.c	FUNCTION_50	ELSE_8	IF_26
0x40068f2	    0x488d97100200	                  lea rdx, [rdi + 0x210]	      8912	option.c	FUNCTION_50	ELSE_9	IF_27
0x40068f9	          0x4939d5	                            cmp r13, rdx	      8912	option.c	FUNCTION_50	ELSE_9	IF_27
0x40068fc	     0xf84b60b0000	                            je 0x40074b8	      8912	option.c	FUNCTION_50	ELSE_9	IF_27
0x4006902	    0x488d97c80100	                  lea rdx, [rdi + 0x1c8]	      8919	option.c	FUNCTION_50	ELSE_10	IF_29
0x4006909	          0x4939d5	                            cmp r13, rdx	      8919	option.c	FUNCTION_50	ELSE_10	IF_29
0x400690c	     0xf844e0a0000	                            je 0x4007360	      8919	option.c	FUNCTION_50	ELSE_10	IF_29
0x4006912	    0x488d90681500	                 lea rdx, [rax + 0x1568]	      8936	option.c	FUNCTION_50	ELSE_12	IF_32
0x4006919	          0x4939d5	                            cmp r13, rdx	      8936	option.c	FUNCTION_50	ELSE_12	IF_32
0x400691c	     0xf84e6090000	                            je 0x4007308	      8936	option.c	FUNCTION_50	ELSE_12	IF_32
0x4006922	    0x488d90a81500	                 lea rdx, [rax + 0x15a8]	      8936	option.c	FUNCTION_50	ELSE_12	IF_32
0x4006929	          0x4939d5	                            cmp r13, rdx	      8936	option.c	FUNCTION_50	ELSE_12	IF_32
0x400692c	     0xf84d6090000	                            je 0x4007308	      8936	option.c	FUNCTION_50	ELSE_12	IF_32
0x4006932	    0x4981fd000000	                              cmp r13, 0	      8953	option.c	FUNCTION_50	ELSE_13	IF_35
0x4006939	     0xf84f10b0000	                            je 0x4007530	      8953	option.c	FUNCTION_50	ELSE_13	IF_35
0x400693f	    0x488d90781200	                 lea rdx, [rax + 0x1278]	      8963	option.c	FUNCTION_50	ELSE_15	IF_38
0x4006946	          0x4939d5	                            cmp r13, rdx	      8963	option.c	FUNCTION_50	ELSE_15	IF_38
0x4006949	     0xf84110c0000	                            je 0x4007560	      8963	option.c	FUNCTION_50	ELSE_15	IF_38
0x400694f	    0x4981fd000000	                              cmp r13, 0	      8981	option.c	FUNCTION_50	ELSE_16	IF_41
0x4006956	     0xf84440c0000	                            je 0x40075a0	      8981	option.c	FUNCTION_50	ELSE_16	IF_41
0x400695c	    0x4981fd000000	                              cmp r13, 0	      8988	option.c	FUNCTION_50	ELSE_17	IF_43
0x4006963	     0xf84570c0000	                            je 0x40075c0	      8988	option.c	FUNCTION_50	ELSE_17	IF_43
0x4006969	    0x488d90801200	                 lea rdx, [rax + 0x1280]	      8996	option.c	FUNCTION_50	ELSE_19	IF_46
0x4006970	          0x4939d5	                            cmp r13, rdx	      8996	option.c	FUNCTION_50	ELSE_19	IF_46
0x4006973	     0xf84870c0000	                            je 0x4007600	      8996	option.c	FUNCTION_50	ELSE_19	IF_46
0x4006979	    0x4981fd000000	                              cmp r13, 0	      9008	option.c	FUNCTION_50	ELSE_20	IF_48
0x4006980	     0xf84f9080000	                            je 0x400727f	      9008	option.c	FUNCTION_50	ELSE_20	IF_48
0x4006986	    0x4981fd000000	                              cmp r13, 0	      9021	option.c	FUNCTION_50	ELSE_21	IF_51
0x400698d	     0xf84db0c0000	                            je 0x400766e	      9021	option.c	FUNCTION_50	ELSE_21	IF_51
0x4006993	    0x4981fd000000	                              cmp r13, 0	      9042	option.c	FUNCTION_50	ELSE_22	IF_55
0x400699a	     0xf84410d0000	                            je 0x40076e1	      9042	option.c	FUNCTION_50	ELSE_22	IF_55
0x40069a0	    0x488d97a80200	                  lea rdx, [rdi + 0x2a8]	      9053	option.c	FUNCTION_50	ELSE_23	IF_58
0x40069a7	          0x4939d5	                            cmp r13, rdx	      9053	option.c	FUNCTION_50	ELSE_23	IF_58
0x40069aa	     0xf84600d0000	                            je 0x4007710	      9053	option.c	FUNCTION_50	ELSE_23	IF_58
0x40069b0	    0x4981fd000000	                              cmp r13, 0	      9082	option.c	FUNCTION_50	ELSE_27	IF_64
0x40069b7	     0xf84380e0000	                            je 0x40077f5	      9082	option.c	FUNCTION_50	ELSE_27	IF_64
0x40069bd	    0x488d90481600	                 lea rdx, [rax + 0x1648]	      9089	option.c	FUNCTION_50	ELSE_28	IF_65
0x40069c4	          0x4939d5	                            cmp r13, rdx	      9089	option.c	FUNCTION_50	ELSE_28	IF_65
0x40069c7	     0xf844a0e0000	                            je 0x4007817	      9089	option.c	FUNCTION_50	ELSE_28	IF_65
0x40069cd	    0x488d97400200	                  lea rdx, [rdi + 0x240]	      9099	option.c	FUNCTION_50	ELSE_29	IF_66
0x40069d4	          0x4939d5	                            cmp r13, rdx	      9099	option.c	FUNCTION_50	ELSE_29	IF_66
0x40069d7	     0xf84780d0000	                            je 0x4007755	      9099	option.c	FUNCTION_50	ELSE_29	IF_66
0x40069dd	    0x488d90b81500	                 lea rdx, [rax + 0x15b8]	      9115	option.c	FUNCTION_50	ELSE_30	IF_69
0x40069e4	          0x4939d5	                            cmp r13, rdx	      9115	option.c	FUNCTION_50	ELSE_30	IF_69
0x40069e7	     0xf85d6000000	                           jne 0x4006ac3	      9115	option.c	FUNCTION_50	ELSE_30	IF_69
0x40069ed	    0x4883b8b81500	             cmp qword [rax + 0x15b8], 0	      9117	option.c	FUNCTION_50	ELSE_30	IF_69	IF_70
0x40069f5	     0xf88890e0000	                            js 0x4007884	      9117	option.c	FUNCTION_50	ELSE_30	IF_69	IF_70
0x40069fb	    0x488b05000000	            mov rax, qword [0x04006a02] 	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x4006a02	          0x4885c0	                           test rax, rax	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x4006a05	      0x4889442438	             mov qword [rsp + 0x38], rax	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x4006a0a	     0xf84b3000000	                            je 0x4006ac3	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x4006a10	    0x483905000000	            cmp qword [0x04006a17], rax 	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x4006a17	     0xf84220d0000	                            je 0x400773f	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x4006a1d	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x4006a21	            0xeb1b	                           jmp 0x4006a3e	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x4006a23	       0xf1f440000	                   nop dword [rax + rax]	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x4006a28	          0x4889d7	                            mov rdi, rdx	      9128	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_30
0x4006a2b	      0x4889542430	             mov qword [rsp + 0x30], rdx	      9128	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_30
0x4006a30	      0xe800000000	                          call 0x4006a35	      9128	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_30
0x4006a35	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x4006a3a	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x4006a3e	          0x4885d2	                           test rdx, rdx	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x4006a41	            0x75e5	                           jne 0x4006a28	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x4006a43	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x4006a48	          0x488b00	                    mov rax, qword [rax]	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x4006a4b	          0x4885c0	                           test rax, rax	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x4006a4e	      0x4889442438	             mov qword [rsp + 0x38], rax	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x4006a53	            0x75bb	                           jne 0x4006a10	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x4006a55	            0xeb6c	                           jmp 0x4006ac3	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x4006a57	    0x660f1f840000	                    nop word [rax + rax]	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x4006a60	    0x488b3d000000	            mov rdi, qword [0x04006a67] 	      8799	option.c	FUNCTION_50	IF_3	IF_4
0x4006a67	          0x4885ff	                           test rdi, rdi	      8799	option.c	FUNCTION_50	IF_3	IF_4
0x4006a6a	     0xf8e80070000	                           jle 0x40071f0	      8799	option.c	FUNCTION_50	IF_3	IF_4
0x4006a70	    0x488b05000000	            mov rax, qword [0x04006a77] 	      8804	option.c	FUNCTION_50	IF_3	IF_5
0x4006a77	          0x4839f8	                            cmp rax, rdi	      8804	option.c	FUNCTION_50	IF_3	IF_5
0x4006a7a	            0x7e0f	                           jle 0x4006a8b	      8804	option.c	FUNCTION_50	IF_3	IF_5
0x4006a7c	    0x488905000000	            mov qword [0x04006a83], rax 	      8807	option.c	FUNCTION_50	IF_3	IF_5
0x4006a83	          0x4889c7	                            mov rdi, rax	      8807	option.c	FUNCTION_50	IF_3	IF_5
0x4006a86	      0xbd00000000	                              mov ebp, 0	      8806	option.c	FUNCTION_50	IF_3	IF_5
0x4006a8b	    0x48833d000000	               cmp qword [0x04006a93], 0	      8809	option.c	FUNCTION_50	IF_3	IF_6
0x4006a93	     0xf883f070000	                            js 0x40071d8	      8809	option.c	FUNCTION_50	IF_3	IF_6
0x4006a99	    0x488b05000000	            mov rax, qword [0x04006aa0] 	      8816	option.c	FUNCTION_50	IF_3	IF_7
0x4006aa0	    0x483905000000	            cmp qword [0x04006aa7], rax 	      8816	option.c	FUNCTION_50	IF_3	IF_7
0x4006aa7	            0x741a	                            je 0x4006ac3	      8816	option.c	FUNCTION_50	IF_3	IF_7
0x4006aa9	    0x4981fd000000	                              cmp r13, 0	      8818	option.c	FUNCTION_50	IF_3	IF_7	IF_8
0x4006ab0	     0xf841a090000	                            je 0x40073d0	      8818	option.c	FUNCTION_50	IF_3	IF_7	IF_8
0x4006ab6	    0x4981fd000000	                              cmp r13, 0	      8820	option.c	FUNCTION_50	IF_3	IF_7	IF_9
0x4006abd	     0xf84cd080000	                            je 0x4007390	      8820	option.c	FUNCTION_50	IF_3	IF_7	IF_9
0x4006ac3	      0xe800000000	                          call 0x4006ac8	      9136	option.c	FUNCTION_50	IF_71	CALL_31
0x4006ac8	            0x4898	                                    cdqe	      9136	option.c	FUNCTION_50	IF_71	CALL_31
0x4006aca	    0x483b05000000	            cmp rax, qword [0x04006ad1] 	      9136	option.c	FUNCTION_50	IF_71	CALL_31
0x4006ad1	            0x7e4c	                           jle 0x4006b1f	      9136	option.c	FUNCTION_50	IF_71	CALL_31
0x4006ad3	    0x8b0500000000	            mov eax, dword [0x04006ad9] 	      9136	option.c	FUNCTION_50	IF_71	CALL_31
0x4006ad9	            0x85c0	                           test eax, eax	      9136	option.c	FUNCTION_50	IF_71	CALL_31
0x4006adb	            0x7442	                            je 0x4006b1f	      9136	option.c	FUNCTION_50	IF_71	CALL_31
0x4006add	          0x4d85ff	                           test r15, r15	      9138	option.c	FUNCTION_50	IF_71	IF_72
0x4006ae0	            0x742f	                            je 0x4006b11	      9138	option.c	FUNCTION_50	IF_71	IF_72
0x4006ae2	      0xe800000000	                          call 0x4006ae7	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x4006ae7	      0xba05000000	                              mov edx, 5	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x4006aec	      0xbe00000000	                              mov esi, 0	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x4006af1	            0x31ff	                            xor edi, edi	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x4006af3	            0x89c5	                            mov ebp, eax	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x4006af5	      0xe800000000	                          call 0x4006afa	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x4006afa	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x4006aff	            0x89e9	                            mov ecx, ebp	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x4006b01	          0x4889c2	                            mov rdx, rax	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x4006b04	          0x4c89ff	                            mov rdi, r15	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x4006b07	            0x31c0	                            xor eax, eax	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x4006b09	          0x4c89fd	                            mov rbp, r15	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x4006b0c	      0xe800000000	                          call 0x4006b11	      9140	option.c	FUNCTION_50	IF_71	IF_72	CALL_32
0x4006b11	      0xe800000000	                          call 0x4006b16	      9144	option.c	FUNCTION_50	IF_71	CALL_35
0x4006b16	            0x4898	                                    cdqe	      9144	option.c	FUNCTION_50	IF_71	CALL_35
0x4006b18	    0x488905000000	            mov qword [0x04006b1f], rax 	      9144	option.c	FUNCTION_50	IF_71	CALL_35
0x4006b1f	    0x48833d000000	            cmp qword [0x04006b27], 0xb 	      9146	option.c	FUNCTION_50	IF_73
0x4006b27	            0x7f45	                            jg 0x4006b6e	      9146	option.c	FUNCTION_50	IF_73
0x4006b29	    0x8b0500000000	            mov eax, dword [0x04006b2f] 	      9146	option.c	FUNCTION_50	IF_73
0x4006b2f	            0x85c0	                           test eax, eax	      9146	option.c	FUNCTION_50	IF_73
0x4006b31	            0x743b	                            je 0x4006b6e	      9146	option.c	FUNCTION_50	IF_73
0x4006b33	          0x4d85ff	                           test r15, r15	      9148	option.c	FUNCTION_50	IF_73	IF_74
0x4006b36	            0x742b	                            je 0x4006b63	      9148	option.c	FUNCTION_50	IF_73	IF_74
0x4006b38	      0xba05000000	                              mov edx, 5	      9150	option.c	FUNCTION_50	IF_73	IF_74	CALL_36
0x4006b3d	      0xbe00000000	                              mov esi, 0	      9150	option.c	FUNCTION_50	IF_73	IF_74	CALL_36
0x4006b42	            0x31ff	                            xor edi, edi	      9150	option.c	FUNCTION_50	IF_73	IF_74	CALL_36
0x4006b44	      0xe800000000	                          call 0x4006b49	      9150	option.c	FUNCTION_50	IF_73	IF_74	CALL_36
0x4006b49	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      9150	option.c	FUNCTION_50	IF_73	IF_74	CALL_36
0x4006b4e	          0x4889c2	                            mov rdx, rax	      9150	option.c	FUNCTION_50	IF_73	IF_74	CALL_36
0x4006b51	      0xb90c000000	                            mov ecx, 0xc	      9150	option.c	FUNCTION_50	IF_73	IF_74	CALL_36
0x4006b56	          0x4c89ff	                            mov rdi, r15	      9150	option.c	FUNCTION_50	IF_73	IF_74	CALL_36
0x4006b59	            0x31c0	                            xor eax, eax	      9150	option.c	FUNCTION_50	IF_73	IF_74	CALL_36
0x4006b5b	          0x4c89fd	                            mov rbp, r15	      9150	option.c	FUNCTION_50	IF_73	IF_74	CALL_36
0x4006b5e	      0xe800000000	                          call 0x4006b63	      9150	option.c	FUNCTION_50	IF_73	IF_74	CALL_36
0x4006b63	    0x48c705000000	            mov qword [0x04006b6e], 0xc 	      9154	option.c	FUNCTION_50	IF_73
0x4006b6e	      0xe800000000	                          call 0x4006b73	      9156	option.c	FUNCTION_50	CALL_38
0x4006b73	    0x488b35000000	            mov rsi, qword [0x04006b7a] 	      9162	option.c	FUNCTION_50	IF_75
0x4006b7a	      0x4839742408	                cmp qword [rsp + 8], rsi	      9162	option.c	FUNCTION_50	IF_75
0x4006b7f	     0xf84bb030000	                            je 0x4006f40	      9162	option.c	FUNCTION_50	IF_75
0x4006b85	    0x448b05000000	            mov r8d, dword [0x04006b8c] 	      9165	option.c	FUNCTION_50	IF_75	IF_76
0x4006b8c	          0x4585c0	                           test r8d, r8d	      9165	option.c	FUNCTION_50	IF_75	IF_76
0x4006b8f	     0xf84fb020000	                            je 0x4006e90	      9165	option.c	FUNCTION_50	IF_75	IF_76
0x4006b95	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      9166	option.c	FUNCTION_50	IF_75	IF_76
0x4006b9a	        0x49894500	                    mov qword [r13], rax	      9166	option.c	FUNCTION_50	IF_75	IF_76
0x4006b9e	    0x488b05000000	            mov rax, qword [0x04006ba5] 	      9166	option.c	FUNCTION_50	IF_75	IF_76
0x4006ba5	    0x483905000000	            cmp qword [0x04006bac], rax 	      9181	option.c	FUNCTION_50	IF_75	IF_79	CALL_41
0x4006bac	     0xf8cde040000	                            jl 0x4007090	      9181	option.c	FUNCTION_50	IF_75	IF_79	CALL_41
0x4006bb2	        0x4883e801	                              sub rax, 1	      9182	option.c	FUNCTION_50	IF_75	IF_79
0x4006bb6	    0x488905000000	            mov qword [0x04006bbd], rax 	      9182	option.c	FUNCTION_50	IF_75	IF_79
0x4006bbd	    0x488b05000000	            mov rax, qword [0x04006bc4] 	      9185	option.c	FUNCTION_50	IF_80
0x4006bc4	    0x4883b8a81500	             cmp qword [rax + 0x15a8], 0	      9185	option.c	FUNCTION_50	IF_80
0x4006bcc	     0xf8e26040000	                           jle 0x4006ff8	      9185	option.c	FUNCTION_50	IF_80
0x4006bd2	    0x48833d000000	               cmp qword [0x04006bda], 0	      9190	option.c	FUNCTION_50	IF_81
0x4006bda	     0xf8800040000	                            js 0x4006fe0	      9190	option.c	FUNCTION_50	IF_81
0x4006be0	    0x488b3d000000	            mov rdi, qword [0x04006be7] 	      9195	option.c	FUNCTION_50	IF_82
0x4006be7	    0x488b87600200	           mov rax, qword [rdi + 0x260] 	      9195	option.c	FUNCTION_50	IF_82
0x4006bee	          0x4885c0	                           test rax, rax	      9195	option.c	FUNCTION_50	IF_82
0x4006bf1	            0x7e10	                           jle 0x4006c03	      9195	option.c	FUNCTION_50	IF_82
0x4006bf3	    0x48638fa00000	         movsxd rcx, dword [rdi + 0xa0] 	      9196	option.c	FUNCTION_50	IF_82
0x4006bfa	          0x4839c8	                            cmp rax, rcx	      9197	option.c	FUNCTION_50	IF_82
0x4006bfd	            0x7e35	                           jle 0x4006c34	      9197	option.c	FUNCTION_50	IF_82
0x4006bff	            0x85c9	                           test ecx, ecx	      9197	option.c	FUNCTION_50	IF_82
0x4006c01	            0x7e31	                           jle 0x4006c34	      9197	option.c	FUNCTION_50	IF_82
0x4006c03	    0x8b1500000000	            mov edx, dword [0x04006c09] 	      9198	option.c	FUNCTION_50	IF_82
0x4006c09	            0x85d2	                           test edx, edx	      9198	option.c	FUNCTION_50	IF_82
0x4006c0b	            0x7427	                            je 0x4006c34	      9198	option.c	FUNCTION_50	IF_82
0x4006c0d	    0x488d97600200	                  lea rdx, [rdi + 0x260]	      9200	option.c	FUNCTION_50	IF_82	IF_83
0x4006c14	          0x4939d5	                            cmp r13, rdx	      9200	option.c	FUNCTION_50	IF_82	IF_83
0x4006c17	     0xf8423070000	                            je 0x4007340	      9200	option.c	FUNCTION_50	IF_82	IF_83
0x4006c1d	          0x4885c0	                           test rax, rax	      9208	option.c	FUNCTION_50	IF_82	ELSE_33	IF_85
0x4006c20	     0xf8e9a060000	                           jle 0x40072c0	      9208	option.c	FUNCTION_50	IF_82	ELSE_33	IF_85
0x4006c26	    0x486387a00000	         movsxd rax, dword [rdi + 0xa0] 	      9211	option.c	FUNCTION_50	IF_82	ELSE_34
0x4006c2d	    0x488987600200	            mov qword [rdi + 0x260], rax	      9211	option.c	FUNCTION_50	IF_82	ELSE_34
0x4006c34	    0x488b05000000	            mov rax, qword [0x04006c3b] 	      9213	option.c	FUNCTION_50	ELSE_34	IF_86
0x4006c3b	          0x4885c0	                           test rax, rax	      9213	option.c	FUNCTION_50	ELSE_34	IF_86
0x4006c3e	     0xf881c030000	                            js 0x4006f60	      9213	option.c	FUNCTION_50	ELSE_34	IF_86
0x4006c44	    0x483d10270000	                         cmp rax, 0x2710	      9218	option.c	FUNCTION_50	ELSE_35	IF_87
0x4006c4a	            0x7e10	                           jle 0x4006c5c	      9218	option.c	FUNCTION_50	ELSE_35	IF_87
0x4006c4c	    0x48c705000000	         mov qword [0x04006c57], 0x2710 	      9221	option.c	FUNCTION_50	ELSE_35	IF_87
0x4006c57	      0xbd00000000	                              mov ebp, 0	      9220	option.c	FUNCTION_50	ELSE_35	IF_87
0x4006c5c	    0x48833d000000	               cmp qword [0x04006c64], 2	      9223	option.c	FUNCTION_50	IF_88
0x4006c64	            0x7610	                           jbe 0x4006c76	      9223	option.c	FUNCTION_50	IF_88
0x4006c66	    0x48c705000000	               mov qword [0x04006c71], 0	      9226	option.c	FUNCTION_50	IF_88
0x4006c71	      0xbd00000000	                              mov ebp, 0	      9225	option.c	FUNCTION_50	IF_88
0x4006c76	    0x48833d000000	               cmp qword [0x04006c7e], 0	      9228	option.c	FUNCTION_50	IF_89
0x4006c7e	     0xf88dc030000	                            js 0x4007060	      9228	option.c	FUNCTION_50	IF_89
0x4006c84	    0x488b05000000	            mov rax, qword [0x04006c8b] 	      9233	option.c	FUNCTION_50	IF_90
0x4006c8b	        0x4883f89c	             cmp rax, 0xffffffffffffff9c	      9233	option.c	FUNCTION_50	IF_90
0x4006c8f	            0x7c09	                            jl 0x4006c9a	      9233	option.c	FUNCTION_50	IF_90
0x4006c91	    0x483b05000000	            cmp rax, qword [0x04006c98] 	      9233	option.c	FUNCTION_50	IF_90
0x4006c98	            0x7c30	                            jl 0x4006cca	      9233	option.c	FUNCTION_50	IF_90
0x4006c9a	    0x8b0500000000	            mov eax, dword [0x04006ca0] 	      9233	option.c	FUNCTION_50	IF_90
0x4006ca0	            0x85c0	                           test eax, eax	      9233	option.c	FUNCTION_50	IF_90
0x4006ca2	            0x7426	                            je 0x4006cca	      9233	option.c	FUNCTION_50	IF_90
0x4006ca4	    0x488b05000000	            mov rax, qword [0x04006cab] 	      9235	option.c	FUNCTION_50	IF_90	IF_91
0x4006cab	      0x4839442408	                cmp qword [rsp + 8], rax	      9235	option.c	FUNCTION_50	IF_90	IF_91
0x4006cb0	     0xf8442040000	                            je 0x40070f8	      9235	option.c	FUNCTION_50	IF_90	IF_91
0x4006cb6	          0x4889c2	                            mov rdx, rax	      9236	option.c	FUNCTION_50	IF_90	IF_91
0x4006cb9	        0x48c1ea3f	                           shr rdx, 0x3f	      9236	option.c	FUNCTION_50	IF_90	IF_91
0x4006cbd	          0x4801d0	                            add rax, rdx	      9236	option.c	FUNCTION_50	IF_90	IF_91
0x4006cc0	          0x48d1f8	                              sar rax, 1	      9236	option.c	FUNCTION_50	IF_90	IF_91
0x4006cc3	    0x488905000000	            mov qword [0x04006cca], rax 	      9236	option.c	FUNCTION_50	IF_90	IF_91
0x4006cca	    0x48833d000000	               cmp qword [0x04006cd2], 0	      9243	option.c	FUNCTION_50	IF_92
0x4006cd2	     0xf8860030000	                            js 0x4007038	      9243	option.c	FUNCTION_50	IF_92
0x4006cd8	    0x48833d000000	               cmp qword [0x04006ce0], 0	      9248	option.c	FUNCTION_50	IF_93
0x4006ce0	     0xf882a030000	                            js 0x4007010	      9248	option.c	FUNCTION_50	IF_93
0x4006ce6	    0x48833d000000	               cmp qword [0x04006cee], 0	      9254	option.c	FUNCTION_50	IF_94
0x4006cee	     0xf8ed4020000	                           jle 0x4006fc8	      9254	option.c	FUNCTION_50	IF_94
0x4006cf4	    0x48833d000000	               cmp qword [0x04006cfc], 0	      9260	option.c	FUNCTION_50	IF_95
0x4006cfc	     0xf88ae020000	                            js 0x4006fb0	      9260	option.c	FUNCTION_50	IF_95
0x4006d02	    0x48833d000000	               cmp qword [0x04006d0a], 0	      9265	option.c	FUNCTION_50	IF_96
0x4006d0a	     0xf8868020000	                            js 0x4006f78	      9265	option.c	FUNCTION_50	IF_96
0x4006d10	        0x8b542414	            mov edx, dword [rsp + 0x14] 	      9272	option.c	FUNCTION_50	IF_97
0x4006d14	          0x4885ed	                           test rbp, rbp	      9272	option.c	FUNCTION_50	IF_97
0x4006d17	        0x410f94c7	                               sete r15b	      9272	option.c	FUNCTION_50	IF_97
0x4006d1b	            0x85d2	                           test edx, edx	      9272	option.c	FUNCTION_50	IF_97
0x4006d1d	     0xf84d5010000	                            je 0x4006ef8	      9272	option.c	FUNCTION_50	IF_97
0x4006d23	    0x8b0500000000	            mov eax, dword [0x04006d29] 	      9278	option.c	FUNCTION_50	IF_98
0x4006d29	          0x4989dd	                            mov r13, rbx	      9275	option.c	FUNCTION_50
0x4006d2c	        0x49c1e506	                              shl r13, 6	      9275	option.c	FUNCTION_50
0x4006d30	    0x49818d000000	                   or qword [r13], 0x100	      9275	option.c	FUNCTION_50
0x4006d3b	            0x85c0	                           test eax, eax	      9278	option.c	FUNCTION_50	IF_98
0x4006d3d	            0x7509	                           jne 0x4006d48	      9278	option.c	FUNCTION_50	IF_98
0x4006d3f	          0x4584ff	                         test r15b, r15b	      9278	option.c	FUNCTION_50	IF_98
0x4006d42	     0xf85b0060000	                           jne 0x40073f8	      9278	option.c	FUNCTION_50	IF_98
0x4006d48	      0xe800000000	                          call 0x4006d4d	      9292	option.c	FUNCTION_50	CALL_52
0x4006d4d	    0x488b05000000	            mov rax, qword [0x04006d54] 	      9293	option.c	FUNCTION_50	IF_99
0x4006d54	        0x48c1e306	                              shl rbx, 6	      9294	option.c	FUNCTION_50	IF_99
0x4006d58	    0x488b9b000000	                    mov rbx, qword [rbx]	      9294	option.c	FUNCTION_50	IF_99
0x4006d5f	    0x817848ffffff	     cmp dword [rax + 0x48], 0x7fffffff 	      9293	option.c	FUNCTION_50	IF_99
0x4006d66	            0x740f	                            je 0x4006d77	      9293	option.c	FUNCTION_50	IF_99
0x4006d68	    0xf7c300600004	                     test ebx, 0x4006000	      9294	option.c	FUNCTION_50	IF_99
0x4006d6e	            0x7407	                            je 0x4006d77	      9294	option.c	FUNCTION_50	IF_99
0x4006d70	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      9295	option.c	FUNCTION_50	IF_99
0x4006d77	          0x4889da	                            mov rdx, rbx	      9309	option.c	FUNCTION_51
0x4006d7a	          0x4989dd	                            mov r13, rbx	      9308	option.c	FUNCTION_51
0x4006d7d	    0x81e200600000	                         and edx, 0x6000	      9309	option.c	FUNCTION_51
0x4006d83	    0x4181e5007000	                        and r13d, 0x7000	      9308	option.c	FUNCTION_51
0x4006d8a	    0x4881fa006000	                         cmp rdx, 0x6000	      9308	option.c	FUNCTION_51
0x4006d91	        0x410f94c4	                               sete r12b	      9308	option.c	FUNCTION_51
0x4006d95	    0x4981fd007000	                         cmp r13, 0x7000	      9308	option.c	FUNCTION_51
0x4006d9c	           0xf94c0	                                 sete al	      9308	option.c	FUNCTION_51
0x4006d9f	          0x4108c4	                             or r12b, al	      9309	option.c	FUNCTION_51
0x4006da2	     0xf85d8000000	                           jne 0x4006e80	      9309	option.c	FUNCTION_51
0x4006da8	          0x4885d2	                           test rdx, rdx	      9309	option.c	FUNCTION_51
0x4006dab	        0x410f95c4	                              setne r12b	      9309	option.c	FUNCTION_51
0x4006daf	          0x4531f6	                          xor r14d, r14d	      9309	option.c	FUNCTION_51
0x4006db2	          0xf6c710	                           test bh, 0x10	      9311	option.c	FUNCTION_51	IF_1
0x4006db5	     0xf85cb000000	                           jne 0x4006e86	      9311	option.c	FUNCTION_51	IF_1
0x4006dbb	          0x4584e4	                         test r12b, r12b	      9314	option.c	FUNCTION_51	IF_2
0x4006dbe	            0x7405	                            je 0x4006dc5	      9314	option.c	FUNCTION_51	IF_2
0x4006dc0	      0xe800000000	                          call 0x4006dc5	      9315	option.c	FUNCTION_51	CALL_2
0x4006dc5	          0xf6c740	                           test bh, 0x40	      9316	option.c	FUNCTION_51	IF_3
0x4006dc8	     0xf8562010000	                           jne 0x4006f30	      9316	option.c	FUNCTION_51	IF_3
0x4006dce	    0xf7c300000010	                    test ebx, 0x10000000	      9318	option.c	FUNCTION_51	IF_4
0x4006dd4	     0xf8546010000	                           jne 0x4006f20	      9318	option.c	FUNCTION_51	IF_4
0x4006dda	    0x4981fd007000	                         cmp r13, 0x7000	      9320	option.c	FUNCTION_51	IF_5
0x4006de1	     0xf84a1030000	                            je 0x4007188	      9320	option.c	FUNCTION_51	IF_5
0x4006de7	          0x4585f6	                         test r14d, r14d	      9322	option.c	FUNCTION_51	ELSE_1	IF_6
0x4006dea	          0x4889e8	                            mov rax, rbp	      9322	option.c	FUNCTION_51	ELSE_1	IF_6
0x4006ded	            0x7414	                            je 0x4006e03	      9322	option.c	FUNCTION_51	ELSE_1	IF_6
0x4006def	      0xbf28000000	                           mov edi, 0x28	      9323	option.c	FUNCTION_51	ELSE_1	IF_6
0x4006df4	      0x48896c2408	                mov qword [rsp + 8], rbp	      9323	option.c	FUNCTION_51	ELSE_1	IF_6
0x4006df9	      0xe800000000	                          call 0x4006dfe	      9323	option.c	FUNCTION_51	ELSE_1	IF_6
0x4006dfe	      0x488b442408	                mov rax, qword [rsp + 8]	      9323	option.c	FUNCTION_51	ELSE_1	IF_6
0x4006e03	      0x488b4c2478	            mov rcx, qword [rsp + 0x78] 	      9299	option.c	FUNCTION_50
0x4006e08	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      9299	option.c	FUNCTION_50
0x4006e11	     0xf85820a0000	                           jne 0x4007899	      9299	option.c	FUNCTION_50
0x4006e17	    0x4881c4880000	                           add rsp, 0x88	      9299	option.c	FUNCTION_50
0x4006e1e	              0x5b	                                 pop rbx	      9299	option.c	FUNCTION_50
0x4006e1f	              0x5d	                                 pop rbp	      9299	option.c	FUNCTION_50
0x4006e20	            0x415c	                                 pop r12	      9299	option.c	FUNCTION_50
0x4006e22	            0x415d	                                 pop r13	      9299	option.c	FUNCTION_50
0x4006e24	            0x415e	                                 pop r14	      9299	option.c	FUNCTION_50
0x4006e26	            0x415f	                                 pop r15	      9299	option.c	FUNCTION_50
0x4006e28	              0xc3	                                     ret	      9299	option.c	FUNCTION_50
0x4006e29	     0xf1f80000000	                         nop dword [rax]	      9299	option.c	FUNCTION_50
0x4006e30	        0x41f6c402	                            test r12b, 2	      8108	option.c	FUNCTION_48	IF_1
0x4006e34	            0x743a	                            je 0x4006e70	      8108	option.c	FUNCTION_48	IF_1
0x4006e36	          0x4889d8	                            mov rax, rbx	      8109	option.c	FUNCTION_48	IF_1
0x4006e39	        0x48c1e006	                              shl rax, 6	      8109	option.c	FUNCTION_48	IF_1
0x4006e3d	    0x898800000000	                    mov dword [rax], ecx	      8109	option.c	FUNCTION_48	IF_1
0x4006e43	        0x41f6c404	                            test r12b, 4	      8110	option.c	FUNCTION_48	IF_2
0x4006e47	     0xf84f5f9ffff	                            je 0x4006842	      8110	option.c	FUNCTION_48	IF_2
0x4006e4d	          0xf6c640	                           test dh, 0x40	      8112	option.c	FUNCTION_48	IF_2	IF_3
0x4006e50	     0xf84d3f9ffff	                            je 0x4006829	      8112	option.c	FUNCTION_48	IF_2	IF_3
0x4006e56	    0x488b05000000	            mov rax, qword [0x04006e5d] 	      8113	option.c	FUNCTION_48	IF_2	IF_3
0x4006e5d	    0x81e2ff0f0000	                          and edx, 0xfff	      8113	option.c	FUNCTION_48	IF_2	IF_3
0x4006e63	    0x898c90ac1200	  mov dword [rax + rdx*4 + 0x12ac], ecx 	      8113	option.c	FUNCTION_48	IF_2	IF_3
0x4006e6a	      0xe9daf9ffff	                           jmp 0x4006849	      8113	option.c	FUNCTION_48	IF_2	IF_3
0x4006e6f	              0x90	                                     nop	      8113	option.c	FUNCTION_48	IF_2	IF_3
0x4006e70	          0xf6c660	                           test dh, 0x60	      8108	option.c	FUNCTION_48	IF_1
0x4006e73	            0x74c1	                            je 0x4006e36	      8108	option.c	FUNCTION_48	IF_1
0x4006e75	            0xebcc	                           jmp 0x4006e43	      8108	option.c	FUNCTION_48	IF_1
0x4006e77	    0x660f1f840000	                    nop word [rax + rax]	      8108	option.c	FUNCTION_48	IF_1
0x4006e80	    0x41be01000000	                             mov r14d, 1	      9309	option.c	FUNCTION_51
0x4006e86	      0xe800000000	                          call 0x4006e8b	      9312	option.c	FUNCTION_51	CALL_1
0x4006e8b	      0xe92bffffff	                           jmp 0x4006dbb	      9312	option.c	FUNCTION_51	CALL_1
0x4006e90	    0x8b0500000000	            mov eax, dword [0x04006e96] 	      9167	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x4006e96	            0x85c0	                           test eax, eax	      9167	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x4006e98	            0x740e	                            je 0x4006ea8	      9167	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x4006e9a	    0x8b3d00000000	            mov edi, dword [0x04006ea0] 	      9169	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x4006ea0	            0x85ff	                           test edi, edi	      9169	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x4006ea2	     0xf8468020000	                            je 0x4007110	      9169	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x4006ea8	      0xe800000000	                          call 0x4006ead	      9177	option.c	FUNCTION_50	IF_75	ELSE_32	CALL_40
0x4006ead	    0x488b05000000	            mov rax, qword [0x04006eb4] 	      9178	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x4006eb4	    0x488b15000000	            mov rdx, qword [0x04006ebb] 	      9178	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x4006ebb	    0x486335000000	         movsxd rsi, dword [0x04006ec2] 	      9178	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x4006ec2	          0x4889c1	                            mov rcx, rax	      9178	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x4006ec5	          0x4829d1	                            sub rcx, rdx	      9178	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x4006ec8	          0x4839ce	                            cmp rsi, rcx	      9178	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x4006ecb	     0xf8ed4fcffff	                           jle 0x4006ba5	      9178	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x4006ed1	          0x4839d0	                            cmp rax, rdx	      9178	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x4006ed4	     0xf8ecbfcffff	                           jle 0x4006ba5	      9178	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x4006eda	            0x89c1	                            mov ecx, eax	      9179	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x4006edc	            0x29d1	                            sub ecx, edx	      9179	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x4006ede	    0x890d00000000	            mov dword [0x04006ee4], ecx 	      9179	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x4006ee4	      0xe9bcfcffff	                           jmp 0x4006ba5	      9179	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x4006ee9	     0xf1f80000000	                         nop dword [rax]	      9179	option.c	FUNCTION_50	IF_75	ELSE_32	IF_78
0x4006ef0	          0x4531ff	                          xor r15d, r15d	      9272	option.c	FUNCTION_50	IF_97
0x4006ef3	      0xbd00000000	                              mov ebp, 0	      9267	option.c	FUNCTION_50	IF_96
0x4006ef8	          0x4889df	                            mov rdi, rbx	      9273	option.c	FUNCTION_50	CALL_43
0x4006efb	      0xbe02000000	                              mov esi, 2	      9273	option.c	FUNCTION_50	CALL_43
0x4006f00	        0x48c1e706	                              shl rdi, 6	      9273	option.c	FUNCTION_50	CALL_43
0x4006f04	    0x4881c7000000	                              add rdi, 0	      9273	option.c	FUNCTION_50	CALL_43
0x4006f0b	      0xe870aaffff	                 call sym.get_varp_scope	      9273	option.c	FUNCTION_50	CALL_43
0x4006f10	        0x498b5500	                    mov rdx, qword [r13]	      9273	option.c	FUNCTION_50	CALL_43
0x4006f14	          0x488910	                    mov qword [rax], rdx	      9273	option.c	FUNCTION_50	CALL_43
0x4006f17	      0xe907feffff	                           jmp 0x4006d23	      9273	option.c	FUNCTION_50	CALL_43
0x4006f1c	         0xf1f4000	                         nop dword [rax]	      9273	option.c	FUNCTION_50	CALL_43
0x4006f20	      0xbf28000000	                           mov edi, 0x28	      9319	option.c	FUNCTION_51	CALL_4
0x4006f25	      0xe800000000	                          call 0x4006f2a	      9319	option.c	FUNCTION_51	CALL_4
0x4006f2a	      0xe9abfeffff	                           jmp 0x4006dda	      9319	option.c	FUNCTION_51	CALL_4
0x4006f2f	              0x90	                                     nop	      9319	option.c	FUNCTION_51	CALL_4
0x4006f30	      0xbf28000000	                           mov edi, 0x28	      9317	option.c	FUNCTION_51	CALL_3
0x4006f35	      0xe800000000	                          call 0x4006f3a	      9317	option.c	FUNCTION_51	CALL_3
0x4006f3a	      0xe98ffeffff	                           jmp 0x4006dce	      9317	option.c	FUNCTION_51	CALL_3
0x4006f3f	              0x90	                                     nop	      9317	option.c	FUNCTION_51	CALL_3
0x4006f40	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      9162	option.c	FUNCTION_50	IF_75
0x4006f45	    0x483b05000000	            cmp rax, qword [0x04006f4c] 	      9162	option.c	FUNCTION_50	IF_75
0x4006f4c	     0xf8533fcffff	                           jne 0x4006b85	      9162	option.c	FUNCTION_50	IF_75
0x4006f52	      0xe966fcffff	                           jmp 0x4006bbd	      9162	option.c	FUNCTION_50	IF_75
0x4006f57	    0x660f1f840000	                    nop word [rax + rax]	      9162	option.c	FUNCTION_50	IF_75
0x4006f60	    0x48c705000000	               mov qword [0x04006f6b], 0	      9216	option.c	FUNCTION_50	ELSE_34	IF_86
0x4006f6b	      0xbd00000000	                              mov ebp, 0	      9215	option.c	FUNCTION_50	ELSE_34	IF_86
0x4006f70	      0xe9e7fcffff	                           jmp 0x4006c5c	      9215	option.c	FUNCTION_50	ELSE_34	IF_86
0x4006f75	           0xf1f00	                         nop dword [rax]	      9215	option.c	FUNCTION_50	ELSE_34	IF_86
0x4006f78	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	      9272	option.c	FUNCTION_50	IF_97
0x4006f7c	    0x48c705000000	               mov qword [0x04006f87], 0	      9268	option.c	FUNCTION_50	IF_96
0x4006f87	            0x85c9	                           test ecx, ecx	      9272	option.c	FUNCTION_50	IF_97
0x4006f89	     0xf8461ffffff	                            je 0x4006ef0	      9272	option.c	FUNCTION_50	IF_97
0x4006f8f	          0x4889d8	                            mov rax, rbx	      9275	option.c	FUNCTION_50
0x4006f92	      0xbd00000000	                              mov ebp, 0	      9267	option.c	FUNCTION_50	IF_96
0x4006f97	        0x48c1e006	                              shl rax, 6	      9275	option.c	FUNCTION_50
0x4006f9b	    0x488188000000	                   or qword [rax], 0x100	      9275	option.c	FUNCTION_50
0x4006fa6	      0xe99dfdffff	                           jmp 0x4006d48	      9275	option.c	FUNCTION_50
0x4006fab	       0xf1f440000	                   nop dword [rax + rax]	      9275	option.c	FUNCTION_50
0x4006fb0	    0x48c705000000	          mov qword [0x04006fbb], 0x7d0 	      9263	option.c	FUNCTION_50	IF_95
0x4006fbb	      0xbd00000000	                              mov ebp, 0	      9262	option.c	FUNCTION_50	IF_95
0x4006fc0	      0xe93dfdffff	                           jmp 0x4006d02	      9262	option.c	FUNCTION_50	IF_95
0x4006fc5	           0xf1f00	                         nop dword [rax]	      9262	option.c	FUNCTION_50	IF_95
0x4006fc8	    0x48c705000000	               mov qword [0x04006fd3], 1	      9257	option.c	FUNCTION_50	IF_94
0x4006fd3	      0xbd00000000	                              mov ebp, 0	      9256	option.c	FUNCTION_50	IF_94
0x4006fd8	      0xe917fdffff	                           jmp 0x4006cf4	      9256	option.c	FUNCTION_50	IF_94
0x4006fdd	           0xf1f00	                         nop dword [rax]	      9256	option.c	FUNCTION_50	IF_94
0x4006fe0	    0x48c705000000	               mov qword [0x04006feb], 0	      9193	option.c	FUNCTION_50	IF_81
0x4006feb	      0xbd00000000	                              mov ebp, 0	      9192	option.c	FUNCTION_50	IF_81
0x4006ff0	      0xe9ebfbffff	                           jmp 0x4006be0	      9192	option.c	FUNCTION_50	IF_81
0x4006ff5	           0xf1f00	                         nop dword [rax]	      9192	option.c	FUNCTION_50	IF_81
0x4006ff8	    0x48c780a81500	            mov qword [rax + 0x15a8], 8 	      9188	option.c	FUNCTION_50	IF_80
0x4007003	      0xbd00000000	                              mov ebp, 0	      9187	option.c	FUNCTION_50	IF_80
0x4007008	      0xe9c5fbffff	                           jmp 0x4006bd2	      9187	option.c	FUNCTION_50	IF_80
0x400700d	           0xf1f00	                         nop dword [rax]	      9187	option.c	FUNCTION_50	IF_80
0x4007010	    0x8b0500000000	            mov eax, dword [0x04007016] 	      9248	option.c	FUNCTION_50	IF_93
0x4007016	            0x85c0	                           test eax, eax	      9248	option.c	FUNCTION_50	IF_93
0x4007018	     0xf84c8fcffff	                            je 0x4006ce6	      9248	option.c	FUNCTION_50	IF_93
0x400701e	    0x48c705000000	               mov qword [0x04007029], 0	      9251	option.c	FUNCTION_50	IF_93
0x4007029	      0xbd00000000	                              mov ebp, 0	      9250	option.c	FUNCTION_50	IF_93
0x400702e	      0xe9b3fcffff	                           jmp 0x4006ce6	      9250	option.c	FUNCTION_50	IF_93
0x4007033	       0xf1f440000	                   nop dword [rax + rax]	      9250	option.c	FUNCTION_50	IF_93
0x4007038	    0x8b0500000000	            mov eax, dword [0x0400703e] 	      9243	option.c	FUNCTION_50	IF_92
0x400703e	            0x85c0	                           test eax, eax	      9243	option.c	FUNCTION_50	IF_92
0x4007040	     0xf8492fcffff	                            je 0x4006cd8	      9243	option.c	FUNCTION_50	IF_92
0x4007046	    0x48c705000000	               mov qword [0x04007051], 0	      9246	option.c	FUNCTION_50	IF_92
0x4007051	      0xbd00000000	                              mov ebp, 0	      9245	option.c	FUNCTION_50	IF_92
0x4007056	      0xe97dfcffff	                           jmp 0x4006cd8	      9245	option.c	FUNCTION_50	IF_92
0x400705b	       0xf1f440000	                   nop dword [rax + rax]	      9245	option.c	FUNCTION_50	IF_92
0x4007060	    0x48c705000000	               mov qword [0x0400706b], 1	      9231	option.c	FUNCTION_50	IF_89
0x400706b	      0xbd00000000	                              mov ebp, 0	      9230	option.c	FUNCTION_50	IF_89
0x4007070	      0xe90ffcffff	                           jmp 0x4006c84	      9230	option.c	FUNCTION_50	IF_89
0x4007075	           0xf1f00	                         nop dword [rax]	      9230	option.c	FUNCTION_50	IF_89
0x4007078	    0x488b90a81500	          mov rdx, qword [rax + 0x15a8] 	      8791	option.c	FUNCTION_50	IF_2
0x400707f	      0xbd00000000	                              mov ebp, 0	      8790	option.c	FUNCTION_50	IF_2
0x4007084	    0x488990681500	          mov qword [rax + 0x1568], rdx 	      8791	option.c	FUNCTION_50	IF_2
0x400708b	      0xe9d3f7ffff	                           jmp 0x4006863	      8791	option.c	FUNCTION_50	IF_2
0x4007090	      0xbf00000000	                              mov edi, 0	     12256	option.c	FUNCTION_102	CALL_1
0x4007095	      0xe88692ffff	                     call sym.findoption	     12256	option.c	FUNCTION_102	CALL_1
0x400709a	            0x85c0	                           test eax, eax	     12257	option.c	FUNCTION_102	IF_1
0x400709c	            0x7813	                            js 0x40070b1	     12257	option.c	FUNCTION_102	IF_1
0x400709e	            0x4898	                                    cdqe	     12259	option.c	FUNCTION_102	IF_2
0x40070a0	        0x48c1e006	                              shl rax, 6	     12259	option.c	FUNCTION_102	IF_2
0x40070a4	    0xf68000000000	                      test byte [rax], 1	     12259	option.c	FUNCTION_102	IF_2
0x40070ab	     0xf850cfbffff	                           jne 0x4006bbd	     12259	option.c	FUNCTION_102	IF_2
0x40070b1	    0x488b05000000	            mov rax, qword [0x040070b8] 	     12259	option.c	FUNCTION_102	IF_2
0x40070b8	      0xe9f5faffff	                           jmp 0x4006bb2	     12259	option.c	FUNCTION_102	IF_2
0x40070bd	           0xf1f00	                         nop dword [rax]	     12259	option.c	FUNCTION_102	IF_2
0x40070c0	    0x488b05000000	            mov rax, qword [0x040070c7] 	      8828	option.c	FUNCTION_50	ELSE_1	IF_10	IF_11
0x40070c7	          0x4885c0	                           test rax, rax	      8828	option.c	FUNCTION_50	ELSE_1	IF_10	IF_11
0x40070ca	     0xf8830040000	                            js 0x4007500	      8828	option.c	FUNCTION_50	ELSE_1	IF_10	IF_11
0x40070d0	    0x488b15000000	            mov rdx, qword [0x040070d7] 	      8833	option.c	FUNCTION_50	ELSE_1	IF_10	IF_12
0x40070d7	          0x4839c2	                            cmp rdx, rax	      8833	option.c	FUNCTION_50	ELSE_1	IF_10	IF_12
0x40070da	            0x7d0c	                           jge 0x40070e8	      8833	option.c	FUNCTION_50	ELSE_1	IF_10	IF_12
0x40070dc	    0x488915000000	            mov qword [0x040070e3], rdx 	      8836	option.c	FUNCTION_50	ELSE_1	IF_10	IF_12
0x40070e3	      0xbd00000000	                              mov ebp, 0	      8835	option.c	FUNCTION_50	ELSE_1	IF_10	IF_12
0x40070e8	      0xe800000000	                          call 0x40070ed	      8871	option.c	FUNCTION_50	ELSE_3	IF_17	CALL_6
0x40070ed	      0xe9d1f9ffff	                           jmp 0x4006ac3	      8871	option.c	FUNCTION_50	ELSE_3	IF_17	CALL_6
0x40070f2	    0x660f1f440000	                    nop word [rax + rax]	      8871	option.c	FUNCTION_50	ELSE_3	IF_17	CALL_6
0x40070f8	    0x48c705000000	               mov qword [0x04007103], 1	      9240	option.c	FUNCTION_50	IF_90	ELSE_36
0x4007103	      0xbd00000000	                              mov ebp, 0	      9239	option.c	FUNCTION_50	IF_90	ELSE_36
0x4007108	      0xe9bdfbffff	                           jmp 0x4006cca	      9239	option.c	FUNCTION_50	IF_90	ELSE_36
0x400710d	           0xf1f00	                         nop dword [rax]	      9239	option.c	FUNCTION_50	IF_90	ELSE_36
0x4007110	    0x8b3d00000000	            mov edi, dword [0x04007116] 	      9172	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x4007116	      0xba01000000	                              mov edx, 1	      9172	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x400711b	      0xe800000000	                          call 0x4007120	      9172	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x4007120	    0x488b05000000	            mov rax, qword [0x04007127] 	      9172	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x4007127	      0xe979faffff	                           jmp 0x4006ba5	      9172	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x400712c	         0xf1f4000	                         nop dword [rax]	      9172	option.c	FUNCTION_50	IF_75	ELSE_31	IF_77
0x4007130	    0x488b3d000000	            mov rdi, qword [0x04007137] 	      8842	option.c	FUNCTION_50	ELSE_2	IF_13	IF_14
0x4007137	          0x4885ff	                           test rdi, rdi	      8842	option.c	FUNCTION_50	ELSE_2	IF_13	IF_14
0x400713a	     0xf8e08010000	                           jle 0x4007248	      8842	option.c	FUNCTION_50	ELSE_2	IF_13	IF_14
0x4007140	    0x488b05000000	            mov rax, qword [0x04007147] 	      8847	option.c	FUNCTION_50	ELSE_2	IF_13	IF_15
0x4007147	          0x4839f8	                            cmp rax, rdi	      8847	option.c	FUNCTION_50	ELSE_2	IF_13	IF_15
0x400714a	     0xf8fe0000000	                            jg 0x4007230	      8847	option.c	FUNCTION_50	ELSE_2	IF_13	IF_15
0x4007150	    0x488b05000000	            mov rax, qword [0x04007157] 	      8854	option.c	FUNCTION_50	ELSE_2	IF_13	IF_16
0x4007157	    0x483905000000	            cmp qword [0x0400715e], rax 	      8854	option.c	FUNCTION_50	ELSE_2	IF_13	IF_16
0x400715e	     0xf845ff9ffff	                            je 0x4006ac3	      8854	option.c	FUNCTION_50	ELSE_2	IF_13	IF_16
0x4007164	    0x488b05000000	            mov rax, qword [0x0400716b] 	      8854	option.c	FUNCTION_50	ELSE_2	IF_13	IF_16
0x400716b	    0x486380ac0000	         movsxd rax, dword [rax + 0xac] 	      8854	option.c	FUNCTION_50	ELSE_2	IF_13	IF_16
0x4007172	          0x4839f8	                            cmp rax, rdi	      8854	option.c	FUNCTION_50	ELSE_2	IF_13	IF_16
0x4007175	     0xf8d48f9ffff	                           jge 0x4006ac3	      8854	option.c	FUNCTION_50	ELSE_2	IF_13	IF_16
0x400717b	      0xe800000000	                          call 0x4007180	      8855	option.c	FUNCTION_50	ELSE_2	IF_13	CALL_5
0x4007180	      0xe93ef9ffff	                           jmp 0x4006ac3	      8855	option.c	FUNCTION_50	ELSE_2	IF_13	CALL_5
0x4007185	           0xf1f00	                         nop dword [rax]	      8855	option.c	FUNCTION_50	ELSE_2	IF_13	CALL_5
0x4007188	      0xbf32000000	                           mov edi, 0x32	      9321	option.c	FUNCTION_51	CALL_5
0x400718d	      0xe800000000	                          call 0x4007192	      9321	option.c	FUNCTION_51	CALL_5
0x4007192	          0x4889e8	                            mov rax, rbp	      9321	option.c	FUNCTION_51	CALL_5
0x4007195	      0xe969fcffff	                           jmp 0x4006e03	      9321	option.c	FUNCTION_51	CALL_5
0x400719a	    0x660f1f440000	                    nop word [rax + rax]	      9321	option.c	FUNCTION_51	CALL_5
0x40071a0	    0x488b05000000	            mov rax, qword [0x040071a7] 	      8861	option.c	FUNCTION_50	ELSE_3	IF_17	IF_18
0x40071a7	          0x4885c0	                           test rax, rax	      8861	option.c	FUNCTION_50	ELSE_3	IF_17	IF_18
0x40071aa	     0xf88b8000000	                            js 0x4007268	      8861	option.c	FUNCTION_50	ELSE_3	IF_17	IF_18
0x40071b0	    0x488b15000000	            mov rdx, qword [0x040071b7] 	      8866	option.c	FUNCTION_50	ELSE_3	IF_17	IF_19
0x40071b7	          0x4839c2	                            cmp rdx, rax	      8866	option.c	FUNCTION_50	ELSE_3	IF_17	IF_19
0x40071ba	     0xf8d28ffffff	                           jge 0x40070e8	      8866	option.c	FUNCTION_50	ELSE_3	IF_17	IF_19
0x40071c0	    0x488915000000	            mov qword [0x040071c7], rdx 	      8869	option.c	FUNCTION_50	ELSE_3	IF_17	IF_19
0x40071c7	      0xbd00000000	                              mov ebp, 0	      8868	option.c	FUNCTION_50	ELSE_3	IF_17	IF_19
0x40071cc	      0xe917ffffff	                           jmp 0x40070e8	      8868	option.c	FUNCTION_50	ELSE_3	IF_17	IF_19
0x40071d1	     0xf1f80000000	                         nop dword [rax]	      8868	option.c	FUNCTION_50	ELSE_3	IF_17	IF_19
0x40071d8	    0x48c705000000	               mov qword [0x040071e3], 0	      8812	option.c	FUNCTION_50	IF_3	IF_6
0x40071e3	      0xbd00000000	                              mov ebp, 0	      8811	option.c	FUNCTION_50	IF_3	IF_6
0x40071e8	      0xe9acf8ffff	                           jmp 0x4006a99	      8811	option.c	FUNCTION_50	IF_3	IF_6
0x40071ed	           0xf1f00	                         nop dword [rax]	      8811	option.c	FUNCTION_50	IF_3	IF_6
0x40071f0	    0x48c705000000	               mov qword [0x040071fb], 1	      8802	option.c	FUNCTION_50	IF_3	IF_4
0x40071fb	      0xbf01000000	                              mov edi, 1	      8802	option.c	FUNCTION_50	IF_3	IF_4
0x4007200	      0xbd00000000	                              mov ebp, 0	      8801	option.c	FUNCTION_50	IF_3	IF_4
0x4007205	      0xe966f8ffff	                           jmp 0x4006a70	      8801	option.c	FUNCTION_50	IF_3	IF_4
0x400720a	    0x660f1f440000	                    nop word [rax + rax]	      8801	option.c	FUNCTION_50	IF_3	IF_4
0x4007210	    0x4883bfe80100	              cmp qword [rdi + 0x1e8], 0	      8900	option.c	FUNCTION_50	ELSE_7	IF_24	IF_25
0x4007218	     0xf88d2030000	                            js 0x40075f0	      8900	option.c	FUNCTION_50	ELSE_7	IF_24	IF_25
0x400721e	      0xe800000000	                          call 0x4007223	      8902	option.c	FUNCTION_50	ELSE_7	IF_24	CALL_11
0x4007223	      0xe99bf8ffff	                           jmp 0x4006ac3	      8902	option.c	FUNCTION_50	ELSE_7	IF_24	CALL_11
0x4007228	     0xf1f84000000	                   nop dword [rax + rax]	      8902	option.c	FUNCTION_50	ELSE_7	IF_24	CALL_11
0x4007230	    0x488905000000	            mov qword [0x04007237], rax 	      8850	option.c	FUNCTION_50	ELSE_2	IF_13	IF_15
0x4007237	          0x4889c7	                            mov rdi, rax	      8850	option.c	FUNCTION_50	ELSE_2	IF_13	IF_15
0x400723a	      0xbd00000000	                              mov ebp, 0	      8849	option.c	FUNCTION_50	ELSE_2	IF_13	IF_15
0x400723f	      0xe90cffffff	                           jmp 0x4007150	      8849	option.c	FUNCTION_50	ELSE_2	IF_13	IF_15
0x4007244	         0xf1f4000	                         nop dword [rax]	      8849	option.c	FUNCTION_50	ELSE_2	IF_13	IF_15
0x4007248	    0x48c705000000	               mov qword [0x04007253], 1	      8845	option.c	FUNCTION_50	ELSE_2	IF_13	IF_14
0x4007253	      0xbf01000000	                              mov edi, 1	      8845	option.c	FUNCTION_50	ELSE_2	IF_13	IF_14
0x4007258	      0xbd00000000	                              mov ebp, 0	      8844	option.c	FUNCTION_50	ELSE_2	IF_13	IF_14
0x400725d	      0xe9defeffff	                           jmp 0x4007140	      8844	option.c	FUNCTION_50	ELSE_2	IF_13	IF_14
0x4007262	    0x660f1f440000	                    nop word [rax + rax]	      8844	option.c	FUNCTION_50	ELSE_2	IF_13	IF_14
0x4007268	    0x48c705000000	               mov qword [0x04007273], 0	      8864	option.c	FUNCTION_50	ELSE_3	IF_17	IF_18
0x4007273	            0x31c0	                            xor eax, eax	      8864	option.c	FUNCTION_50	ELSE_3	IF_17	IF_18
0x4007275	      0xbd00000000	                              mov ebp, 0	      8863	option.c	FUNCTION_50	ELSE_3	IF_17	IF_18
0x400727a	      0xe931ffffff	                           jmp 0x40071b0	      8863	option.c	FUNCTION_50	ELSE_3	IF_17	IF_18
0x400727f	    0x488b05000000	            mov rax, qword [0x04007286] 	      9010	option.c	FUNCTION_50	ELSE_20	IF_48	IF_49
0x4007286	          0x4885c0	                           test rax, rax	      9010	option.c	FUNCTION_50	ELSE_20	IF_48	IF_49
0x4007289	     0xf880c050000	                            js 0x400779b	      9010	option.c	FUNCTION_50	ELSE_20	IF_48	IF_49
0x400728f	    0x833d00000000	               cmp dword [0x04007296], 2	      9015	option.c	FUNCTION_50	ELSE_20	IF_48	IF_50
0x4007296	     0xf8427f8ffff	                            je 0x4006ac3	      9015	option.c	FUNCTION_50	ELSE_20	IF_48	IF_50
0x400729c	      0x4839442420	            cmp qword [rsp + 0x20], rax 	      9015	option.c	FUNCTION_50	ELSE_20	IF_48	IF_50
0x40072a1	     0xf841cf8ffff	                            je 0x4006ac3	      9015	option.c	FUNCTION_50	ELSE_20	IF_48	IF_50
0x40072a7	    0xc70500000000	               mov dword [0x040072b1], 1	      9016	option.c	FUNCTION_50	ELSE_20	IF_48	IF_50
0x40072b1	      0xe90df8ffff	                           jmp 0x4006ac3	      9016	option.c	FUNCTION_50	ELSE_20	IF_48	IF_50
0x40072b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      9016	option.c	FUNCTION_50	ELSE_20	IF_48	IF_50
0x40072c0	    0x48c787600200	              mov qword [rdi + 0x260], 1	      9209	option.c	FUNCTION_50	IF_82	ELSE_33	IF_85
0x40072cb	      0xe964f9ffff	                           jmp 0x4006c34	      9209	option.c	FUNCTION_50	IF_82	ELSE_33	IF_85
0x40072d0	    0x448b1d000000	           mov r11d, dword [0x040072d7] 	      8891	option.c	FUNCTION_50	ELSE_6	IF_22	IF_23	CALL_9
0x40072d7	          0x4585db	                         test r11d, r11d	      8891	option.c	FUNCTION_50	ELSE_6	IF_22	IF_23	CALL_9
0x40072da	     0xf84e3f7ffff	                            je 0x4006ac3	      8891	option.c	FUNCTION_50	ELSE_6	IF_22	IF_23	CALL_9
0x40072e0	      0xe800000000	                          call 0x40072e5	      8891	option.c	FUNCTION_50	ELSE_6	IF_22	IF_23	CALL_9
0x40072e5	          0x83f801	                              cmp eax, 1	      8891	option.c	FUNCTION_50	ELSE_6	IF_22	IF_23	CALL_9
0x40072e8	     0xf85d5f7ffff	                           jne 0x4006ac3	      8891	option.c	FUNCTION_50	ELSE_6	IF_22	IF_23	CALL_9
0x40072ee	      0xba01000000	                              mov edx, 1	      8892	option.c	FUNCTION_50	ELSE_6	IF_22	CALL_10
0x40072f3	            0x31f6	                            xor esi, esi	      8892	option.c	FUNCTION_50	ELSE_6	IF_22	CALL_10
0x40072f5	            0x31ff	                            xor edi, edi	      8892	option.c	FUNCTION_50	ELSE_6	IF_22	CALL_10
0x40072f7	      0xe800000000	                          call 0x40072fc	      8892	option.c	FUNCTION_50	ELSE_6	IF_22	CALL_10
0x40072fc	      0xe9c2f7ffff	                           jmp 0x4006ac3	      8892	option.c	FUNCTION_50	ELSE_6	IF_22	CALL_10
0x4007301	     0xf1f80000000	                         nop dword [rax]	      8892	option.c	FUNCTION_50	ELSE_6	IF_22	CALL_10
0x4007308	      0xe800000000	                          call 0x400730d	      8939	option.c	FUNCTION_50	ELSE_12	IF_32	IF_33	CALL_16
0x400730d	            0x85c0	                           test eax, eax	      8939	option.c	FUNCTION_50	ELSE_12	IF_32	IF_33	CALL_16
0x400730f	     0xf851a030000	                           jne 0x400762f	      8939	option.c	FUNCTION_50	ELSE_12	IF_32	IF_33	CALL_16
0x4007315	    0x488b3d000000	            mov rdi, qword [0x0400731c] 	      8945	option.c	FUNCTION_50	ELSE_12	IF_32	IF_34
0x400731c	    0x488d87681500	                 lea rax, [rdi + 0x1568]	      8945	option.c	FUNCTION_50	ELSE_12	IF_32	IF_34
0x4007323	          0x4939c5	                            cmp r13, rax	      8945	option.c	FUNCTION_50	ELSE_12	IF_32	IF_34
0x4007326	            0x740e	                            je 0x4007336	      8945	option.c	FUNCTION_50	ELSE_12	IF_32	IF_34
0x4007328	    0x4883bf681500	             cmp qword [rdi + 0x1568], 0	      8945	option.c	FUNCTION_50	ELSE_12	IF_32	IF_34
0x4007330	     0xf858df7ffff	                           jne 0x4006ac3	      8945	option.c	FUNCTION_50	ELSE_12	IF_32	IF_34
0x4007336	      0xe800000000	                          call 0x400733b	      8946	option.c	FUNCTION_50	ELSE_12	IF_32	CALL_18
0x400733b	      0xe983f7ffff	                           jmp 0x4006ac3	      8946	option.c	FUNCTION_50	ELSE_12	IF_32	CALL_18
0x4007340	          0x4885c0	                           test rax, rax	      9203	option.c	FUNCTION_50	IF_82	IF_83	IF_84
0x4007343	      0xb800000000	                              mov eax, 0	      9203	option.c	FUNCTION_50	IF_82	IF_83	IF_84
0x4007348	        0x480f45e8	                         cmovne rbp, rax	      9203	option.c	FUNCTION_50	IF_82	IF_83	IF_84
0x400734c	      0xe800000000	                          call 0x4007351	      9204	option.c	FUNCTION_50	IF_82	IF_83	CALL_42
0x4007351	      0xe9def8ffff	                           jmp 0x4006c34	      9204	option.c	FUNCTION_50	IF_82	IF_83	CALL_42
0x4007356	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      9204	option.c	FUNCTION_50	IF_82	IF_83	CALL_42
0x4007360	    0x488b87c80100	           mov rax, qword [rdi + 0x1c8] 	      8921	option.c	FUNCTION_50	ELSE_10	IF_29	IF_30
0x4007367	          0x4885c0	                           test rax, rax	      8921	option.c	FUNCTION_50	ELSE_10	IF_29	IF_30
0x400736a	     0xf88e9020000	                            js 0x4007659	      8921	option.c	FUNCTION_50	ELSE_10	IF_29	IF_30
0x4007370	        0x4883f80c	                            cmp rax, 0xc	      8926	option.c	FUNCTION_50	ELSE_10	IF_29	ELSE_11	IF_31
0x4007374	     0xf8e49f7ffff	                           jle 0x4006ac3	      8926	option.c	FUNCTION_50	ELSE_10	IF_29	ELSE_11	IF_31
0x400737a	    0x48c787c80100	           mov qword [rdi + 0x1c8], 0xc 	      8929	option.c	FUNCTION_50	ELSE_10	IF_29	ELSE_11	IF_31
0x4007385	      0xbd00000000	                              mov ebp, 0	      8928	option.c	FUNCTION_50	ELSE_10	IF_29	ELSE_11	IF_31
0x400738a	      0xe934f7ffff	                           jmp 0x4006ac3	      8928	option.c	FUNCTION_50	ELSE_10	IF_29	ELSE_11	IF_31
0x400738f	              0x90	                                     nop	      8928	option.c	FUNCTION_50	ELSE_10	IF_29	ELSE_11	IF_31
0x4007390	    0x488b05000000	            mov rax, qword [0x04007397] 	      8820	option.c	FUNCTION_50	IF_3	IF_7	IF_9
0x4007397	    0x8b8058170000	          mov eax, dword [rax + 0x1758] 	      8820	option.c	FUNCTION_50	IF_3	IF_7	IF_9
0x400739d	            0x85c0	                           test eax, eax	      8820	option.c	FUNCTION_50	IF_3	IF_7	IF_9
0x400739f	     0xf841ef7ffff	                            je 0x4006ac3	      8820	option.c	FUNCTION_50	IF_3	IF_7	IF_9
0x40073a5	    0x488b05000000	            mov rax, qword [0x040073ac] 	      8820	option.c	FUNCTION_50	IF_3	IF_7	IF_9
0x40073ac	    0x488b3d000000	            mov rdi, qword [0x040073b3] 	      8820	option.c	FUNCTION_50	IF_3	IF_7	IF_9
0x40073b3	    0x486380a00000	         movsxd rax, dword [rax + 0xa0] 	      8820	option.c	FUNCTION_50	IF_3	IF_7	IF_9
0x40073ba	          0x4839f8	                            cmp rax, rdi	      8820	option.c	FUNCTION_50	IF_3	IF_7	IF_9
0x40073bd	     0xf8d00f7ffff	                           jge 0x4006ac3	      8820	option.c	FUNCTION_50	IF_3	IF_7	IF_9
0x40073c3	      0xe800000000	                          call 0x40073c8	      8821	option.c	FUNCTION_50	IF_3	IF_7	CALL_3
0x40073c8	      0xe9f6f6ffff	                           jmp 0x4006ac3	      8821	option.c	FUNCTION_50	IF_3	IF_7	CALL_3
0x40073cd	           0xf1f00	                         nop dword [rax]	      8821	option.c	FUNCTION_50	IF_3	IF_7	CALL_3
0x40073d0	    0x488b05000000	            mov rax, qword [0x040073d7] 	      8818	option.c	FUNCTION_50	IF_3	IF_7	IF_8
0x40073d7	    0x486380a00000	         movsxd rax, dword [rax + 0xa0] 	      8818	option.c	FUNCTION_50	IF_3	IF_7	IF_8
0x40073de	          0x4839f8	                            cmp rax, rdi	      8818	option.c	FUNCTION_50	IF_3	IF_7	IF_8
0x40073e1	     0xf8dcff6ffff	                           jge 0x4006ab6	      8818	option.c	FUNCTION_50	IF_3	IF_7	IF_8
0x40073e7	      0xe800000000	                          call 0x40073ec	      8819	option.c	FUNCTION_50	IF_3	IF_7	CALL_2
0x40073ec	      0xe9c5f6ffff	                           jmp 0x4006ab6	      8819	option.c	FUNCTION_50	IF_3	IF_7	CALL_2
0x40073f1	     0xf1f80000000	                         nop dword [rax]	      8819	option.c	FUNCTION_50	IF_3	IF_7	CALL_2
0x40073f8	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      9281	option.c	FUNCTION_50	IF_98	CALL_44
0x40073fd	      0x488d7c2450	                   lea rdi, [rsp + 0x50]	      9281	option.c	FUNCTION_50	IF_98	CALL_44
0x4007402	      0xba00000000	                              mov edx, 0	      9281	option.c	FUNCTION_50	IF_98	CALL_44
0x4007407	      0xbe0a000000	                            mov esi, 0xa	      9281	option.c	FUNCTION_50	IF_98	CALL_44
0x400740c	            0x31c0	                            xor eax, eax	      9281	option.c	FUNCTION_50	IF_98	CALL_44
0x400740e	      0xe800000000	                          call 0x4007413	      9281	option.c	FUNCTION_50	IF_98	CALL_44
0x4007413	      0x488d7c2460	                   lea rdi, [rsp + 0x60]	      9282	option.c	FUNCTION_50	IF_98	CALL_45
0x4007418	          0x4c89f1	                            mov rcx, r14	      9282	option.c	FUNCTION_50	IF_98	CALL_45
0x400741b	      0xba00000000	                              mov edx, 0	      9282	option.c	FUNCTION_50	IF_98	CALL_45
0x4007420	      0xbe0a000000	                            mov esi, 0xa	      9282	option.c	FUNCTION_50	IF_98	CALL_45
0x4007425	            0x31c0	                            xor eax, eax	      9282	option.c	FUNCTION_50	IF_98	CALL_45
0x4007427	      0xe800000000	                          call 0x400742c	      9282	option.c	FUNCTION_50	IF_98	CALL_45
0x400742c	        0x4183e404	                             and r12d, 4	      9283	option.c	FUNCTION_50	IF_98	CALL_46
0x4007430	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	      9283	option.c	FUNCTION_50	IF_98	CALL_46
0x4007435	      0xb800000000	                              mov eax, 0	      9283	option.c	FUNCTION_50	IF_98	CALL_46
0x400743a	      0xb900000000	                              mov ecx, 0	      9283	option.c	FUNCTION_50	IF_98	CALL_46
0x400743f	      0xba00000000	                              mov edx, 0	      9283	option.c	FUNCTION_50	IF_98	CALL_46
0x4007444	      0xbe07000000	                              mov esi, 7	      9283	option.c	FUNCTION_50	IF_98	CALL_46
0x4007449	        0x480f44c8	                          cmove rcx, rax	      9283	option.c	FUNCTION_50	IF_98	CALL_46
0x400744d	            0x31c0	                            xor eax, eax	      9283	option.c	FUNCTION_50	IF_98	CALL_46
0x400744f	      0xe800000000	                          call 0x4007454	      9283	option.c	FUNCTION_50	IF_98	CALL_46
0x4007454	      0x488d742460	                   lea rsi, [rsp + 0x60]	      9284	option.c	FUNCTION_50	IF_98	CALL_47
0x4007459	      0xbaffffffff	                     mov edx, 0xffffffff	      9284	option.c	FUNCTION_50	IF_98	CALL_47
0x400745e	      0xbf3d000000	                           mov edi, 0x3d	      9284	option.c	FUNCTION_50	IF_98	CALL_47
0x4007463	      0xe800000000	                          call 0x4007468	      9284	option.c	FUNCTION_50	IF_98	CALL_47
0x4007468	      0x488d742450	                   lea rsi, [rsp + 0x50]	      9285	option.c	FUNCTION_50	IF_98	CALL_48
0x400746d	      0xbaffffffff	                     mov edx, 0xffffffff	      9285	option.c	FUNCTION_50	IF_98	CALL_48
0x4007472	      0xbf3e000000	                           mov edi, 0x3e	      9285	option.c	FUNCTION_50	IF_98	CALL_48
0x4007477	      0xe800000000	                          call 0x400747c	      9285	option.c	FUNCTION_50	IF_98	CALL_48
0x400747c	      0x488d742440	                   lea rsi, [rsp + 0x40]	      9286	option.c	FUNCTION_50	IF_98	CALL_49
0x4007481	      0xbaffffffff	                     mov edx, 0xffffffff	      9286	option.c	FUNCTION_50	IF_98	CALL_49
0x4007486	      0xbf3f000000	                           mov edi, 0x3f	      9286	option.c	FUNCTION_50	IF_98	CALL_49
0x400748b	      0xe800000000	                          call 0x4007490	      9286	option.c	FUNCTION_50	IF_98	CALL_49
0x4007490	    0x498bb5000000	                    mov rsi, qword [r13]	      9287	option.c	FUNCTION_50	IF_98	CALL_50
0x4007497	          0x4531c0	                            xor r8d, r8d	      9287	option.c	FUNCTION_50	IF_98	CALL_50
0x400749a	            0x31c9	                            xor ecx, ecx	      9287	option.c	FUNCTION_50	IF_98	CALL_50
0x400749c	            0x31d2	                            xor edx, edx	      9287	option.c	FUNCTION_50	IF_98	CALL_50
0x400749e	      0xbf3e000000	                           mov edi, 0x3e	      9287	option.c	FUNCTION_50	IF_98	CALL_50
0x40074a3	      0xe800000000	                          call 0x40074a8	      9287	option.c	FUNCTION_50	IF_98	CALL_50
0x40074a8	      0xe800000000	                          call 0x40074ad	      9288	option.c	FUNCTION_50	IF_98	CALL_51
0x40074ad	      0xe996f8ffff	                           jmp 0x4006d48	      9288	option.c	FUNCTION_50	IF_98	CALL_51
0x40074b2	    0x660f1f440000	                    nop word [rax + rax]	      9288	option.c	FUNCTION_50	IF_98	CALL_51
0x40074b8	      0xe800000000	                          call 0x40074bd	      8914	option.c	FUNCTION_50	ELSE_9	IF_27	IF_28	CALL_14
0x40074bd	            0x85c0	                           test eax, eax	      8914	option.c	FUNCTION_50	ELSE_9	IF_27	IF_28	CALL_14
0x40074bf	            0x7514	                           jne 0x40074d5	      8914	option.c	FUNCTION_50	ELSE_9	IF_27	IF_28	CALL_14
0x40074c1	    0x488b3d000000	            mov rdi, qword [0x040074c8] 	      8914	option.c	FUNCTION_50	ELSE_9	IF_27	IF_28	CALL_14
0x40074c8	      0xe800000000	                          call 0x40074cd	      8914	option.c	FUNCTION_50	ELSE_9	IF_27	IF_28	CALL_14
0x40074cd	            0x85c0	                           test eax, eax	      8914	option.c	FUNCTION_50	ELSE_9	IF_27	IF_28	CALL_14
0x40074cf	     0xf84eef5ffff	                            je 0x4006ac3	      8914	option.c	FUNCTION_50	ELSE_9	IF_27	IF_28	CALL_14
0x40074d5	    0x488b3d000000	            mov rdi, qword [0x040074dc] 	      8915	option.c	FUNCTION_50	ELSE_9	IF_27	CALL_15
0x40074dc	      0xe800000000	                          call 0x40074e1	      8915	option.c	FUNCTION_50	ELSE_9	IF_27	CALL_15
0x40074e1	      0xe9ddf5ffff	                           jmp 0x4006ac3	      8915	option.c	FUNCTION_50	ELSE_9	IF_27	CALL_15
0x40074e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      8915	option.c	FUNCTION_50	ELSE_9	IF_27	CALL_15
0x40074f0	            0x31ff	                            xor edi, edi	      8877	option.c	FUNCTION_50	ELSE_4	IF_20	CALL_7
0x40074f2	      0xe800000000	                          call 0x40074f7	      8877	option.c	FUNCTION_50	ELSE_4	IF_20	CALL_7
0x40074f7	      0xe9c7f5ffff	                           jmp 0x4006ac3	      8877	option.c	FUNCTION_50	ELSE_4	IF_20	CALL_7
0x40074fc	         0xf1f4000	                         nop dword [rax]	      8877	option.c	FUNCTION_50	ELSE_4	IF_20	CALL_7
0x4007500	    0x48c705000000	               mov qword [0x0400750b], 0	      8831	option.c	FUNCTION_50	ELSE_1	IF_10	IF_11
0x400750b	            0x31c0	                            xor eax, eax	      8831	option.c	FUNCTION_50	ELSE_1	IF_10	IF_11
0x400750d	      0xbd00000000	                              mov ebp, 0	      8830	option.c	FUNCTION_50	ELSE_1	IF_10	IF_11
0x4007512	      0xe9b9fbffff	                           jmp 0x40070d0	      8830	option.c	FUNCTION_50	ELSE_1	IF_10	IF_11
0x4007517	    0x660f1f840000	                    nop word [rax + rax]	      8830	option.c	FUNCTION_50	ELSE_1	IF_10	IF_11
0x4007520	      0xe800000000	                          call 0x4007525	      8883	option.c	FUNCTION_50	ELSE_5	IF_21	CALL_8
0x4007525	      0xe999f5ffff	                           jmp 0x4006ac3	      8883	option.c	FUNCTION_50	ELSE_5	IF_21	CALL_8
0x400752a	    0x660f1f440000	                    nop word [rax + rax]	      8883	option.c	FUNCTION_50	ELSE_5	IF_21	CALL_8
0x4007530	    0x488b05000000	            mov rax, qword [0x04007537] 	      8955	option.c	FUNCTION_50	ELSE_13	IF_35	IF_36
0x4007537	        0x4883f806	                              cmp rax, 6	      8955	option.c	FUNCTION_50	ELSE_13	IF_35	IF_36
0x400753b	     0xf8eff000000	                           jle 0x4007640	      8955	option.c	FUNCTION_50	ELSE_13	IF_35	IF_36
0x4007541	    0x48c705000000	               mov qword [0x0400754c], 6	      8956	option.c	FUNCTION_50	ELSE_13	IF_35	IF_36
0x400754c	      0xe800000000	                          call 0x4007551	      8959	option.c	FUNCTION_50	ELSE_13	IF_35	CALL_19
0x4007551	      0xe96df5ffff	                           jmp 0x4006ac3	      8959	option.c	FUNCTION_50	ELSE_13	IF_35	CALL_19
0x4007556	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      8959	option.c	FUNCTION_50	ELSE_13	IF_35	CALL_19
0x4007560	    0x488b90781200	          mov rdx, qword [rax + 0x1278] 	      8965	option.c	FUNCTION_50	ELSE_15	IF_38	IF_39
0x4007567	        0x4883fa02	                              cmp rdx, 2	      8965	option.c	FUNCTION_50	ELSE_15	IF_38	IF_39
0x400756b	            0x7612	                           jbe 0x400757f	      8965	option.c	FUNCTION_50	ELSE_15	IF_38	IF_39
0x400756d	    0x48c780781200	            mov qword [rax + 0x1278], 0 	      8968	option.c	FUNCTION_50	ELSE_15	IF_38	IF_39
0x4007578	            0x31d2	                            xor edx, edx	      8968	option.c	FUNCTION_50	ELSE_15	IF_38	IF_39
0x400757a	      0xbd00000000	                              mov ebp, 0	      8967	option.c	FUNCTION_50	ELSE_15	IF_38	IF_39
0x400757f	    0x448b15000000	           mov r10d, dword [0x04007586] 	      8971	option.c	FUNCTION_50	ELSE_15	IF_38	IF_40
0x4007586	    0x488915000000	            mov qword [0x0400758d], rdx 	      8970	option.c	FUNCTION_50	ELSE_15	IF_38
0x400758d	          0x4585d2	                         test r10d, r10d	      8971	option.c	FUNCTION_50	ELSE_15	IF_38	IF_40
0x4007590	     0xf85b5010000	                           jne 0x400774b	      8971	option.c	FUNCTION_50	ELSE_15	IF_38	IF_40
0x4007596	      0xe800000000	                          call 0x400759b	      8975	option.c	FUNCTION_50	ELSE_15	IF_38	CALL_21
0x400759b	      0xe923f5ffff	                           jmp 0x4006ac3	      8975	option.c	FUNCTION_50	ELSE_15	IF_38	CALL_21
0x40075a0	    0x48833d000000	               cmp qword [0x040075a8], 2	      8984	option.c	FUNCTION_50	ELSE_16	IF_41	IF_42
0x40075a8	      0xb800000000	                              mov eax, 0	      8984	option.c	FUNCTION_50	ELSE_16	IF_41	IF_42
0x40075ad	        0x480f43e8	                         cmovae rbp, rax	      8984	option.c	FUNCTION_50	ELSE_16	IF_41	IF_42
0x40075b1	      0xe90df5ffff	                           jmp 0x4006ac3	      8984	option.c	FUNCTION_50	ELSE_16	IF_41	IF_42
0x40075b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      8984	option.c	FUNCTION_50	ELSE_16	IF_41	IF_42
0x40075c0	    0x488b05000000	            mov rax, qword [0x040075c7] 	      8990	option.c	FUNCTION_50	ELSE_17	IF_43	IF_44
0x40075c7	          0x4885c0	                           test rax, rax	      8990	option.c	FUNCTION_50	ELSE_17	IF_43	IF_44
0x40075ca	     0xf8ebb010000	                           jle 0x400778b	      8990	option.c	FUNCTION_50	ELSE_17	IF_43	IF_44
0x40075d0	    0x488b15000000	            mov rdx, qword [0x040075d7] 	      8992	option.c	FUNCTION_50	ELSE_17	IF_43	ELSE_18	IF_45
0x40075d7	          0x4839d0	                            cmp rax, rdx	      8992	option.c	FUNCTION_50	ELSE_17	IF_43	ELSE_18	IF_45
0x40075da	     0xf8ce3f4ffff	                            jl 0x4006ac3	      8992	option.c	FUNCTION_50	ELSE_17	IF_43	ELSE_18	IF_45
0x40075e0	        0x4883ea01	                              sub rdx, 1	      8993	option.c	FUNCTION_50	ELSE_17	IF_43	ELSE_18	IF_45
0x40075e4	    0x488915000000	            mov qword [0x040075eb], rdx 	      8993	option.c	FUNCTION_50	ELSE_17	IF_43	ELSE_18	IF_45
0x40075eb	      0xe9d3f4ffff	                           jmp 0x4006ac3	      8993	option.c	FUNCTION_50	ELSE_17	IF_43	ELSE_18	IF_45
0x40075f0	    0x48c787e80100	              mov qword [rdi + 0x1e8], 0	      8901	option.c	FUNCTION_50	ELSE_7	IF_24	IF_25
0x40075fb	      0xe91efcffff	                           jmp 0x400721e	      8901	option.c	FUNCTION_50	ELSE_7	IF_24	IF_25
0x4007600	    0x488b90801200	          mov rdx, qword [rax + 0x1280] 	      8998	option.c	FUNCTION_50	ELSE_19	IF_46	IF_47
0x4007607	        0x488d4a01	                      lea rcx, [rdx + 1]	      8998	option.c	FUNCTION_50	ELSE_19	IF_46	IF_47
0x400760b	        0x4883f903	                              cmp rcx, 3	      8998	option.c	FUNCTION_50	ELSE_19	IF_46	IF_47
0x400760f	            0x7612	                           jbe 0x4007623	      8998	option.c	FUNCTION_50	ELSE_19	IF_46	IF_47
0x4007611	    0x48c780801200	            mov qword [rax + 0x1280], 0 	      9001	option.c	FUNCTION_50	ELSE_19	IF_46	IF_47
0x400761c	            0x31d2	                            xor edx, edx	      9001	option.c	FUNCTION_50	ELSE_19	IF_46	IF_47
0x400761e	      0xbd00000000	                              mov ebp, 0	      9000	option.c	FUNCTION_50	ELSE_19	IF_46	IF_47
0x4007623	    0x488915000000	            mov qword [0x0400762a], rdx 	      9003	option.c	FUNCTION_50	ELSE_19	IF_46
0x400762a	      0xe994f4ffff	                           jmp 0x4006ac3	      9003	option.c	FUNCTION_50	ELSE_19	IF_46
0x400762f	    0x488b3d000000	            mov rdi, qword [0x04007636] 	      8940	option.c	FUNCTION_50	ELSE_12	IF_32	CALL_17
0x4007636	      0xe800000000	                          call 0x400763b	      8940	option.c	FUNCTION_50	ELSE_12	IF_32	CALL_17
0x400763b	      0xe9d5fcffff	                           jmp 0x4007315	      8940	option.c	FUNCTION_50	ELSE_12	IF_32	CALL_17
0x4007640	          0x4885c0	                           test rax, rax	      8957	option.c	FUNCTION_50	ELSE_13	IF_35	ELSE_14	IF_37
0x4007643	     0xf8903ffffff	                           jns 0x400754c	      8957	option.c	FUNCTION_50	ELSE_13	IF_35	ELSE_14	IF_37
0x4007649	    0x48c705000000	               mov qword [0x04007654], 0	      8958	option.c	FUNCTION_50	ELSE_13	IF_35	ELSE_14	IF_37
0x4007654	      0xe9f3feffff	                           jmp 0x400754c	      8958	option.c	FUNCTION_50	ELSE_13	IF_35	ELSE_14	IF_37
0x4007659	    0x48c787c80100	              mov qword [rdi + 0x1c8], 0	      8924	option.c	FUNCTION_50	ELSE_10	IF_29	IF_30
0x4007664	      0xbd00000000	                              mov ebp, 0	      8923	option.c	FUNCTION_50	ELSE_10	IF_29	IF_30
0x4007669	      0xe955f4ffff	                           jmp 0x4006ac3	      8923	option.c	FUNCTION_50	ELSE_10	IF_29	IF_30
0x400766e	    0x48833d000000	               cmp qword [0x04007676], 0	      9023	option.c	FUNCTION_50	ELSE_21	IF_51	IF_52
0x4007676	     0xf8e64010000	                           jle 0x40077e0	      9023	option.c	FUNCTION_50	ELSE_21	IF_51	IF_52
0x400767c	    0x488b05000000	            mov rax, qword [0x04007683] 	      9028	option.c	FUNCTION_50	ELSE_21	IF_51	IF_53	CALL_22
0x4007683	      0x4889442430	             mov qword [rsp + 0x30], rax	      9028	option.c	FUNCTION_50	ELSE_21	IF_51	IF_53	CALL_22
0x4007688	      0xe800000000	                          call 0x400768d	      9028	option.c	FUNCTION_50	ELSE_21	IF_51	IF_53	CALL_22
0x400768d	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      9028	option.c	FUNCTION_50	ELSE_21	IF_51	IF_53	CALL_22
0x4007692	            0x4898	                                    cdqe	      9028	option.c	FUNCTION_50	ELSE_21	IF_51	IF_53	CALL_22
0x4007694	    0x488b15000000	            mov rdx, qword [0x0400769b] 	      9028	option.c	FUNCTION_50	ELSE_21	IF_51	IF_53	CALL_22
0x400769b	          0x4829c6	                            sub rsi, rax	      9028	option.c	FUNCTION_50	ELSE_21	IF_51	IF_53	CALL_22
0x400769e	          0x4889f0	                            mov rax, rsi	      9028	option.c	FUNCTION_50	ELSE_21	IF_51	IF_53	CALL_22
0x40076a1	        0x4883c001	                              add rax, 1	      9028	option.c	FUNCTION_50	ELSE_21	IF_51	IF_53	CALL_22
0x40076a5	          0x4839d0	                            cmp rax, rdx	      9028	option.c	FUNCTION_50	ELSE_21	IF_51	IF_53	CALL_22
0x40076a8	     0xf8c07010000	                            jl 0x40077b5	      9028	option.c	FUNCTION_50	ELSE_21	IF_51	IF_53	CALL_22
0x40076ae	      0x4839542420	            cmp qword [rsp + 0x20], rdx 	      9033	option.c	FUNCTION_50	ELSE_21	IF_51	IF_54
0x40076b3	     0xf840af4ffff	                            je 0x4006ac3	      9033	option.c	FUNCTION_50	ELSE_21	IF_51	IF_54
0x40076b9	    0x8b0500000000	            mov eax, dword [0x040076bf] 	      9033	option.c	FUNCTION_50	ELSE_21	IF_51	IF_54
0x40076bf	            0x85c0	                           test eax, eax	      9033	option.c	FUNCTION_50	ELSE_21	IF_51	IF_54
0x40076c1	     0xf84fcf3ffff	                            je 0x4006ac3	      9033	option.c	FUNCTION_50	ELSE_21	IF_51	IF_54
0x40076c7	    0x448b0d000000	            mov r9d, dword [0x040076ce] 	      9035	option.c	FUNCTION_50	ELSE_21	IF_51	IF_54
0x40076ce	          0x4585c9	                           test r9d, r9d	      9035	option.c	FUNCTION_50	ELSE_21	IF_51	IF_54
0x40076d1	     0xf85ecf3ffff	                           jne 0x4006ac3	      9035	option.c	FUNCTION_50	ELSE_21	IF_51	IF_54
0x40076d7	      0xe800000000	                          call 0x40076dc	      9038	option.c	FUNCTION_50	ELSE_21	IF_51	CALL_24
0x40076dc	      0xe9e2f3ffff	                           jmp 0x4006ac3	      9038	option.c	FUNCTION_50	ELSE_21	IF_51	CALL_24
0x40076e1	    0x48833d000000	               cmp qword [0x040076e9], 0	      9044	option.c	FUNCTION_50	ELSE_22	IF_55	IF_56
0x40076e9	     0xf8851010000	                            js 0x4007840	      9044	option.c	FUNCTION_50	ELSE_22	IF_55	IF_56
0x40076ef	           0xf95c0	                                setne al	      9044	option.c	FUNCTION_50	ELSE_22	IF_55	IF_56
0x40076f2	    0x48837c242000	               cmp qword [rsp + 0x20], 0	      9049	option.c	FUNCTION_50	ELSE_22	IF_55	IF_57
0x40076f8	     0xf85c5f3ffff	                           jne 0x4006ac3	      9049	option.c	FUNCTION_50	ELSE_22	IF_55	IF_57
0x40076fe	            0x84c0	                             test al, al	      9049	option.c	FUNCTION_50	ELSE_22	IF_55	IF_57
0x4007700	     0xf84bdf3ffff	                            je 0x4006ac3	      9049	option.c	FUNCTION_50	ELSE_22	IF_55	IF_57
0x4007706	      0xe800000000	                          call 0x400770b	      9050	option.c	FUNCTION_50	ELSE_22	IF_55	CALL_25
0x400770b	      0xe9b3f3ffff	                           jmp 0x4006ac3	      9050	option.c	FUNCTION_50	ELSE_22	IF_55	CALL_25
0x4007710	    0x488b87a80200	           mov rax, qword [rdi + 0x2a8] 	      9055	option.c	FUNCTION_50	ELSE_23	IF_58	IF_59
0x4007717	          0x4885c0	                           test rax, rax	      9055	option.c	FUNCTION_50	ELSE_23	IF_58	IF_59
0x400771a	     0xf883a010000	                            js 0x400785a	      9055	option.c	FUNCTION_50	ELSE_23	IF_58	IF_59
0x4007720	        0x4883f803	                              cmp rax, 3	      9060	option.c	FUNCTION_50	ELSE_23	IF_58	ELSE_24	IF_60
0x4007724	     0xf8e99f3ffff	                           jle 0x4006ac3	      9060	option.c	FUNCTION_50	ELSE_23	IF_58	ELSE_24	IF_60
0x400772a	    0x48c787a80200	              mov qword [rdi + 0x2a8], 3	      9063	option.c	FUNCTION_50	ELSE_23	IF_58	ELSE_24	IF_60
0x4007735	      0xbd00000000	                              mov ebp, 0	      9062	option.c	FUNCTION_50	ELSE_23	IF_58	ELSE_24	IF_60
0x400773a	      0xe984f3ffff	                           jmp 0x4006ac3	      9062	option.c	FUNCTION_50	ELSE_23	IF_58	ELSE_24	IF_60
0x400773f	    0x488b15000000	            mov rdx, qword [0x04007746] 	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x4007746	      0xe9f3f2ffff	                           jmp 0x4006a3e	      9127	option.c	FUNCTION_50	ELSE_30	IF_69	CALL_29
0x400774b	      0xe800000000	                          call 0x4007750	      8972	option.c	FUNCTION_50	ELSE_15	IF_38	CALL_20
0x4007750	      0xe941feffff	                           jmp 0x4007596	      8972	option.c	FUNCTION_50	ELSE_15	IF_38	CALL_20
0x4007755	    0x488b87400200	           mov rax, qword [rdi + 0x240] 	      9101	option.c	FUNCTION_50	ELSE_29	IF_66	IF_67
0x400775c	          0x4885c0	                           test rax, rax	      9101	option.c	FUNCTION_50	ELSE_29	IF_66	IF_67
0x400775f	     0xf8e0a010000	                           jle 0x400786f	      9101	option.c	FUNCTION_50	ELSE_29	IF_66	IF_67
0x4007765	        0x4883f80a	                            cmp rax, 0xa	      9106	option.c	FUNCTION_50	ELSE_29	IF_66	IF_68
0x4007769	            0x7e10	                           jle 0x400777b	      9106	option.c	FUNCTION_50	ELSE_29	IF_66	IF_68
0x400776b	    0x48c787400200	            mov qword [rdi + 0x240], 0xa	      9109	option.c	FUNCTION_50	ELSE_29	IF_66	IF_68
0x4007776	      0xbd00000000	                              mov ebp, 0	      9108	option.c	FUNCTION_50	ELSE_29	IF_66	IF_68
0x400777b	    0x48c787301900	            mov qword [rdi + 0x1930], 0 	      9111	option.c	FUNCTION_50	ELSE_29	IF_66
0x4007786	      0xe938f3ffff	                           jmp 0x4006ac3	      9111	option.c	FUNCTION_50	ELSE_29	IF_66
0x400778b	    0x48c705000000	               mov qword [0x04007796], 1	      8991	option.c	FUNCTION_50	ELSE_17	IF_43	IF_44
0x4007796	      0xe928f3ffff	                           jmp 0x4006ac3	      8991	option.c	FUNCTION_50	ELSE_17	IF_43	IF_44
0x400779b	    0x48c705000000	           mov qword [0x040077a6], 0x55 	      9013	option.c	FUNCTION_50	ELSE_20	IF_48	IF_49
0x40077a6	      0xb855000000	                           mov eax, 0x55	      9013	option.c	FUNCTION_50	ELSE_20	IF_48	IF_49
0x40077ab	      0xbd00000000	                              mov ebp, 0	      9012	option.c	FUNCTION_50	ELSE_20	IF_48	IF_49
0x40077b0	      0xe9dafaffff	                           jmp 0x400728f	      9012	option.c	FUNCTION_50	ELSE_20	IF_48	IF_49
0x40077b5	    0x488b05000000	            mov rax, qword [0x040077bc] 	      9029	option.c	FUNCTION_50	ELSE_21	IF_51	CALL_23
0x40077bc	      0x4889442430	             mov qword [rsp + 0x30], rax	      9029	option.c	FUNCTION_50	ELSE_21	IF_51	CALL_23
0x40077c1	      0xe800000000	                          call 0x40077c6	      9029	option.c	FUNCTION_50	ELSE_21	IF_51	CALL_23
0x40077c6	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      9029	option.c	FUNCTION_50	ELSE_21	IF_51	CALL_23
0x40077cb	            0x4898	                                    cdqe	      9029	option.c	FUNCTION_50	ELSE_21	IF_51	CALL_23
0x40077cd	          0x4829c2	                            sub rdx, rax	      9029	option.c	FUNCTION_50	ELSE_21	IF_51	CALL_23
0x40077d0	        0x4883c201	                              add rdx, 1	      9029	option.c	FUNCTION_50	ELSE_21	IF_51	CALL_23
0x40077d4	    0x488915000000	            mov qword [0x040077db], rdx 	      9029	option.c	FUNCTION_50	ELSE_21	IF_51	CALL_23
0x40077db	      0xe9cefeffff	                           jmp 0x40076ae	      9029	option.c	FUNCTION_50	ELSE_21	IF_51	CALL_23
0x40077e0	    0x48c705000000	               mov qword [0x040077eb], 1	      9026	option.c	FUNCTION_50	ELSE_21	IF_51	IF_52
0x40077eb	      0xbd00000000	                              mov ebp, 0	      9025	option.c	FUNCTION_50	ELSE_21	IF_51	IF_52
0x40077f0	      0xe987feffff	                           jmp 0x400767c	      9025	option.c	FUNCTION_50	ELSE_21	IF_51	IF_52
0x40077f5	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      9085	option.c	FUNCTION_50	ELSE_27	IF_64
0x40077fa	      0xbf01000000	                              mov edi, 1	      9086	option.c	FUNCTION_50	ELSE_27	IF_64	CALL_27
0x40077ff	    0x488905000000	            mov qword [0x04007806], rax 	      9085	option.c	FUNCTION_50	ELSE_27	IF_64
0x4007806	      0xe800000000	                          call 0x400780b	      9086	option.c	FUNCTION_50	ELSE_27	IF_64	CALL_27
0x400780b	    0x4c8935000000	            mov qword [0x04007812], r14 	      9087	option.c	FUNCTION_50	ELSE_27	IF_64
0x4007812	      0xe9acf2ffff	                           jmp 0x4006ac3	      9087	option.c	FUNCTION_50	ELSE_27	IF_64
0x4007817	      0x488b742420	            mov rsi, qword [rsp + 0x20] 	      9092	option.c	FUNCTION_50	ELSE_28	IF_65
0x400781c	      0xbf01000000	                              mov edi, 1	      9093	option.c	FUNCTION_50	ELSE_28	IF_65	CALL_28
0x4007821	    0x4889b0481600	          mov qword [rax + 0x1648], rsi 	      9092	option.c	FUNCTION_50	ELSE_28	IF_65
0x4007828	      0xe800000000	                          call 0x400782d	      9093	option.c	FUNCTION_50	ELSE_28	IF_65	CALL_28
0x400782d	    0x488b05000000	            mov rax, qword [0x04007834] 	      9094	option.c	FUNCTION_50	ELSE_28	IF_65
0x4007834	    0x4c89b0481600	          mov qword [rax + 0x1648], r14 	      9094	option.c	FUNCTION_50	ELSE_28	IF_65
0x400783b	      0xe983f2ffff	                           jmp 0x4006ac3	      9094	option.c	FUNCTION_50	ELSE_28	IF_65
0x4007840	    0x48c705000000	           mov qword [0x0400784b], 0x64 	      9047	option.c	FUNCTION_50	ELSE_22	IF_55	IF_56
0x400784b	      0xb801000000	                              mov eax, 1	      9047	option.c	FUNCTION_50	ELSE_22	IF_55	IF_56
0x4007850	      0xbd00000000	                              mov ebp, 0	      9046	option.c	FUNCTION_50	ELSE_22	IF_55	IF_56
0x4007855	      0xe998feffff	                           jmp 0x40076f2	      9046	option.c	FUNCTION_50	ELSE_22	IF_55	IF_56
0x400785a	    0x48c787a80200	              mov qword [rdi + 0x2a8], 0	      9058	option.c	FUNCTION_50	ELSE_23	IF_58	IF_59
0x4007865	      0xbd00000000	                              mov ebp, 0	      9057	option.c	FUNCTION_50	ELSE_23	IF_58	IF_59
0x400786a	      0xe954f2ffff	                           jmp 0x4006ac3	      9057	option.c	FUNCTION_50	ELSE_23	IF_58	IF_59
0x400786f	    0x48c787400200	              mov qword [rdi + 0x240], 1	      9104	option.c	FUNCTION_50	ELSE_29	IF_66	IF_67
0x400787a	      0xbd00000000	                              mov ebp, 0	      9103	option.c	FUNCTION_50	ELSE_29	IF_66	IF_67
0x400787f	      0xe9f7feffff	                           jmp 0x400777b	      9103	option.c	FUNCTION_50	ELSE_29	IF_66	IF_67
0x4007884	    0x48c780b81500	            mov qword [rax + 0x15b8], 0 	      9120	option.c	FUNCTION_50	ELSE_30	IF_69	IF_70
0x400788f	      0xbd00000000	                              mov ebp, 0	      9119	option.c	FUNCTION_50	ELSE_30	IF_69	IF_70
0x4007894	      0xe962f1ffff	                           jmp 0x40069fb	      9119	option.c	FUNCTION_50	ELSE_30	IF_69	IF_70
0x4007899	      0xe800000000	                          call 0x400789e	      9299	option.c	FUNCTION_50
can_bs	SWITCH,1:CALL,1:DO,0:WHILE,0:IF,0:functions,0:ELSE,0:FOR,0	26
0x400d860	    0x488b0d000000	            mov rcx, qword [0x0400d867] 	     12442	option.c	FUNCTION_109	SWITCH_1
0x400d867	           0xfb611	                   movzx edx, byte [rcx]	     12442	option.c	FUNCTION_109	SWITCH_1
0x400d86a	          0x80fa31	                            cmp dl, 0x31	     12442	option.c	FUNCTION_109	SWITCH_1
0x400d86d	            0x7439	                            je 0x400d8a8	     12442	option.c	FUNCTION_109	SWITCH_1
0x400d86f	          0x80fa32	                            cmp dl, 0x32	     12442	option.c	FUNCTION_109	SWITCH_1
0x400d872	      0xb801000000	                              mov eax, 1	     12444	option.c	FUNCTION_109	SWITCH_1
0x400d877	            0x7422	                            je 0x400d89b	     12442	option.c	FUNCTION_109	SWITCH_1
0x400d879	            0x31c0	                            xor eax, eax	     12446	option.c	FUNCTION_109	SWITCH_1
0x400d87b	          0x80fa30	                            cmp dl, 0x30	     12442	option.c	FUNCTION_109	SWITCH_1
0x400d87e	            0x7420	                            je 0x400d8a0	     12442	option.c	FUNCTION_109	SWITCH_1
0x400d880	        0x4883ec08	                              sub rsp, 8	     12441	option.c	FUNCTION_109
0x400d884	            0x89fe	                            mov esi, edi	     12441	option.c	FUNCTION_109
0x400d886	          0x4889cf	                            mov rdi, rcx	     12448	option.c	FUNCTION_109	CALL_1
0x400d889	      0xe800000000	                          call 0x400d88e	     12448	option.c	FUNCTION_109	CALL_1
0x400d88e	          0x4885c0	                           test rax, rax	     12448	option.c	FUNCTION_109	CALL_1
0x400d891	           0xf95c0	                                setne al	     12448	option.c	FUNCTION_109	CALL_1
0x400d894	        0x4883c408	                              add rsp, 8	     12449	option.c	FUNCTION_109
0x400d898	           0xfb6c0	                           movzx eax, al	     12448	option.c	FUNCTION_109	CALL_1
0x400d89b	            0xf3c3	                                     ret	     12449	option.c	FUNCTION_109
0x400d89d	           0xf1f00	                         nop dword [rax]	     12449	option.c	FUNCTION_109
0x400d8a0	            0xf3c3	                                     ret	     12449	option.c	FUNCTION_109
0x400d8a2	    0x660f1f440000	                    nop word [rax + rax]	     12449	option.c	FUNCTION_109
0x400d8a8	            0x31c0	                            xor eax, eax	     12445	option.c	FUNCTION_109	SWITCH_1
0x400d8aa	          0x83ff73	                           cmp edi, 0x73	     12445	option.c	FUNCTION_109	SWITCH_1
0x400d8ad	           0xf95c0	                                setne al	     12445	option.c	FUNCTION_109	SWITCH_1
0x400d8b0	              0xc3	                                     ret	     12445	option.c	FUNCTION_109	SWITCH_1
get_term_code	SWITCH,0:CALL,3:DO,0:WHILE,0:IF,3:functions,0:ELSE,0:FOR,0	34
0x4005980	          0x803f74	                    cmp byte [rdi], 0x74	      9790	option.c	FUNCTION_57	IF_1
0x4005983	            0x754b	                           jne 0x40059d0	      9790	option.c	FUNCTION_57	IF_1
0x4005985	        0x807f015f	                cmp byte [rdi + 1], 0x5f	      9790	option.c	FUNCTION_57	IF_1
0x4005989	            0x7545	                           jne 0x40059d0	      9790	option.c	FUNCTION_57	IF_1
0x400598b	        0x807f0200	                   cmp byte [rdi + 2], 0	      9790	option.c	FUNCTION_57	IF_1
0x400598f	            0x743f	                            je 0x40059d0	      9790	option.c	FUNCTION_57	IF_1
0x4005991	        0x807f0300	                   cmp byte [rdi + 3], 0	      9791	option.c	FUNCTION_57	IF_1
0x4005995	            0x7439	                            je 0x40059d0	      9791	option.c	FUNCTION_57	IF_1
0x4005997	              0x53	                                push rbx	      9786	option.c	FUNCTION_57
0x4005998	          0x4889fb	                            mov rbx, rdi	      9786	option.c	FUNCTION_57
0x400599b	      0xe880a9ffff	                     call sym.findoption	      9793	option.c	FUNCTION_57	IF_2	CALL_1
0x40059a0	            0x85c0	                           test eax, eax	      9793	option.c	FUNCTION_57	IF_2	CALL_1
0x40059a2	            0x7834	                            js 0x40059d8	      9793	option.c	FUNCTION_57	IF_2	CALL_1
0x40059a4	            0x4898	                                    cdqe	      9795	option.c	FUNCTION_57	IF_2	CALL_2
0x40059a6	        0x48c1e006	                              shl rax, 6	      9795	option.c	FUNCTION_57	IF_2	CALL_2
0x40059aa	    0x488bb8000000	                    mov rdi, qword [rax]	      9795	option.c	FUNCTION_57	IF_2	CALL_2
0x40059b1	    0x488db0000000	                          lea rsi, [rax]	      9795	option.c	FUNCTION_57	IF_2	CALL_2
0x40059b8	      0xe893b0ffff	                call sym.get_varp.isra.1	      9795	option.c	FUNCTION_57	IF_2	CALL_2
0x40059bd	          0x4885c0	                           test rax, rax	      9796	option.c	FUNCTION_57	IF_2	IF_3
0x40059c0	            0x7426	                            je 0x40059e8	      9796	option.c	FUNCTION_57	IF_2	IF_3
0x40059c2	          0x488b00	                    mov rax, qword [rax]	      9797	option.c	FUNCTION_57	IF_2	IF_3
0x40059c5	              0x5b	                                 pop rbx	      9801	option.c	FUNCTION_57
0x40059c6	              0xc3	                                     ret	      9801	option.c	FUNCTION_57
0x40059c7	    0x660f1f840000	                    nop word [rax + rax]	      9801	option.c	FUNCTION_57
0x40059d0	            0x31c0	                            xor eax, eax	      9792	option.c	FUNCTION_57	IF_1
0x40059d2	              0xc3	                                     ret	      9801	option.c	FUNCTION_57
0x40059d3	       0xf1f440000	                   nop dword [rax + rax]	      9801	option.c	FUNCTION_57
0x40059d8	        0x488d7b02	                      lea rdi, [rbx + 2]	      9800	option.c	FUNCTION_57	CALL_3
0x40059dc	              0x5b	                                 pop rbx	      9801	option.c	FUNCTION_57
0x40059dd	      0xe900000000	                           jmp 0x40059e2	      9800	option.c	FUNCTION_57	CALL_3
0x40059e2	    0x660f1f440000	                    nop word [rax + rax]	      9800	option.c	FUNCTION_57	CALL_3
0x40059e8	            0x31c0	                            xor eax, eax	      9792	option.c	FUNCTION_57	IF_1
0x40059ea	              0x5b	                                 pop rbx	      9801	option.c	FUNCTION_57
0x40059eb	              0xc3	                                     ret	      9801	option.c	FUNCTION_57
set_init_3	SWITCH,0:CALL,38:DO,0:WHILE,0:IF,17:functions,0:ELSE,4:FOR,0	189
0x40033a0	            0x4156	                                push r14	      4037	option.c	FUNCTION_10
0x40033a2	            0x4155	                                push r13	      4037	option.c	FUNCTION_10
0x40033a4	      0xbf00000000	                              mov edi, 0	      4052	option.c	FUNCTION_10	CALL_1
0x40033a9	            0x4154	                                push r12	      4037	option.c	FUNCTION_10
0x40033ab	              0x55	                                push rbp	      4037	option.c	FUNCTION_10
0x40033ac	              0x53	                                push rbx	      4037	option.c	FUNCTION_10
0x40033ad	            0x31db	                            xor ebx, ebx	      4037	option.c	FUNCTION_10
0x40033af	      0xe86ccfffff	                     call sym.findoption	      4052	option.c	FUNCTION_10	CALL_1
0x40033b4	          0x4c63e0	                         movsxd r12, eax	      4052	option.c	FUNCTION_10	CALL_1
0x40033b7	          0x4585e4	                         test r12d, r12d	      4053	option.c	FUNCTION_10	IF_1
0x40033ba	            0x7819	                            js 0x40033d5	      4053	option.c	FUNCTION_10	IF_1
0x40033bc	          0x4963c4	                        movsxd rax, r12d	      4056	option.c	FUNCTION_10	ELSE_1
0x40033bf	        0x48c1e006	                              shl rax, 6	      4056	option.c	FUNCTION_10	ELSE_1
0x40033c3	    0x488b98000000	                    mov rbx, qword [rax]	      4056	option.c	FUNCTION_10	ELSE_1
0x40033ca	        0x48c1eb08	                              shr rbx, 8	      4056	option.c	FUNCTION_10	ELSE_1
0x40033ce	        0x4883f301	                              xor rbx, 1	      4056	option.c	FUNCTION_10	ELSE_1
0x40033d2	          0x83e301	                              and ebx, 1	      4056	option.c	FUNCTION_10	ELSE_1
0x40033d5	      0xbf00000000	                              mov edi, 0	      4058	option.c	FUNCTION_10	CALL_2
0x40033da	            0x31ed	                            xor ebp, ebp	      4060	option.c	FUNCTION_10	IF_2
0x40033dc	      0xe83fcfffff	                     call sym.findoption	      4058	option.c	FUNCTION_10	CALL_2
0x40033e1	          0x4c63e8	                         movsxd r13, eax	      4058	option.c	FUNCTION_10	CALL_2
0x40033e4	          0x4585ed	                         test r13d, r13d	      4059	option.c	FUNCTION_10	IF_2
0x40033e7	            0x7819	                            js 0x4003402	      4059	option.c	FUNCTION_10	IF_2
0x40033e9	          0x4963c5	                        movsxd rax, r13d	      4062	option.c	FUNCTION_10	ELSE_2
0x40033ec	        0x48c1e006	                              shl rax, 6	      4062	option.c	FUNCTION_10	ELSE_2
0x40033f0	    0x488ba8000000	                    mov rbp, qword [rax]	      4062	option.c	FUNCTION_10	ELSE_2
0x40033f7	        0x48c1ed08	                              shr rbp, 8	      4062	option.c	FUNCTION_10	ELSE_2
0x40033fb	        0x4883f501	                              xor rbp, 1	      4062	option.c	FUNCTION_10	ELSE_2
0x40033ff	          0x83e501	                              and ebp, 1	      4062	option.c	FUNCTION_10	ELSE_2
0x4003402	      0xe800000000	                          call 0x4003407	      4064	option.c	FUNCTION_10	CALL_3
0x4003407	          0x4885c0	                           test rax, rax	      4065	option.c	FUNCTION_10	IF_3
0x400340a	          0x4989c6	                            mov r14, rax	      4064	option.c	FUNCTION_10	CALL_3
0x400340d	            0x7443	                            je 0x4003452	      4065	option.c	FUNCTION_10	IF_3
0x400340f	      0xbe00000000	                              mov esi, 0	      4071	option.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x4003414	          0x4889c7	                            mov rdi, rax	      4071	option.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x4003417	      0xe800000000	                          call 0x400341c	      4071	option.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x400341c	            0x85c0	                           test eax, eax	      4071	option.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x400341e	     0xf853c010000	                           jne 0x4003560	      4071	option.c	FUNCTION_10	IF_3	IF_4	CALL_4
0x4003424	            0x85ed	                           test ebp, ebp	      4080	option.c	FUNCTION_10	IF_3	IF_4	IF_5
0x4003426	            0x741a	                            je 0x4003442	      4080	option.c	FUNCTION_10	IF_3	IF_4	IF_5
0x4003428	        0x49c1e506	                              shl r13, 6	      4087	option.c	FUNCTION_10	IF_3	IF_4	IF_5
0x400342c	    0x48c705000000	               mov qword [0x04003437], 0	      4085	option.c	FUNCTION_10	IF_3	IF_4	IF_5
0x4003437	    0x49c785000000	                      mov qword [r13], 0	      4087	option.c	FUNCTION_10	IF_3	IF_4	IF_5
0x4003442	            0x85db	                           test ebx, ebx	      4090	option.c	FUNCTION_10	IF_3	IF_4	IF_6
0x4003444	     0xf85ee000000	                           jne 0x4003538	      4090	option.c	FUNCTION_10	IF_3	IF_4	IF_6
0x400344a	          0x4c89f7	                            mov rdi, r14	      4136	option.c	FUNCTION_10	IF_3	CALL_25
0x400344d	      0xe800000000	                          call 0x4003452	      4136	option.c	FUNCTION_10	IF_3	CALL_25
0x4003452	    0x488b05000000	            mov rax, qword [0x04003459] 	      4201	option.c	FUNCTION_10	IF_16	CALL_34
0x4003459	        0x48833801	                      cmp qword [rax], 1	      4201	option.c	FUNCTION_10	IF_16	CALL_34
0x400345d	     0xf847d010000	                            je 0x40035e0	      4201	option.c	FUNCTION_10	IF_16	CALL_34
0x4003463	      0xbf00000000	                              mov edi, 0	      4296	option.c	FUNCTION_14	CALL_1
0x4003468	      0xe8b3ceffff	                     call sym.findoption	      4296	option.c	FUNCTION_14	CALL_1
0x400346d	            0x85c0	                           test eax, eax	      4297	option.c	FUNCTION_14	IF_1
0x400346f	            0x7813	                            js 0x4003484	      4297	option.c	FUNCTION_14	IF_1
0x4003471	          0x4863d8	                         movsxd rbx, eax	      4297	option.c	FUNCTION_14	IF_1
0x4003474	          0x4889d8	                            mov rax, rbx	      4297	option.c	FUNCTION_14	IF_1
0x4003477	        0x48c1e006	                              shl rax, 6	      4297	option.c	FUNCTION_14	IF_1
0x400347b	    0xf68000000000	                      test byte [rax], 1	      4297	option.c	FUNCTION_14	IF_1
0x4003482	            0x7464	                            je 0x40034e8	      4297	option.c	FUNCTION_14	IF_1
0x4003484	      0xbf00000000	                              mov edi, 0	      4308	option.c	FUNCTION_14	CALL_3
0x4003489	      0xe892ceffff	                     call sym.findoption	      4308	option.c	FUNCTION_14	CALL_3
0x400348e	            0x85c0	                           test eax, eax	      4309	option.c	FUNCTION_14	IF_3
0x4003490	            0x7849	                            js 0x40034db	      4309	option.c	FUNCTION_14	IF_3
0x4003492	          0x4863d8	                         movsxd rbx, eax	      4309	option.c	FUNCTION_14	IF_3
0x4003495	          0x4889d8	                            mov rax, rbx	      4309	option.c	FUNCTION_14	IF_3
0x4003498	        0x48c1e006	                              shl rax, 6	      4309	option.c	FUNCTION_14	IF_3
0x400349c	    0xf68000000000	                      test byte [rax], 1	      4309	option.c	FUNCTION_14	IF_3
0x40034a3	            0x7536	                           jne 0x40034db	      4309	option.c	FUNCTION_14	IF_3
0x40034a5	    0x8b3500000000	            mov esi, dword [0x040034ab] 	      4312	option.c	FUNCTION_14	IF_3	IF_4
0x40034ab	      0xba01000000	                              mov edx, 1	      4312	option.c	FUNCTION_14	IF_3	IF_4
0x40034b0	      0xb901000000	                              mov ecx, 1	      4312	option.c	FUNCTION_14	IF_3	IF_4
0x40034b5	            0x85f6	                           test esi, esi	      4312	option.c	FUNCTION_14	IF_3	IF_4
0x40034b7	            0x750e	                           jne 0x40034c7	      4312	option.c	FUNCTION_14	IF_3	IF_4
0x40034b9	    0x8b0500000000	            mov eax, dword [0x040034bf] 	      4312	option.c	FUNCTION_14	IF_3	IF_4
0x40034bf	            0x85c0	                           test eax, eax	      4312	option.c	FUNCTION_14	IF_3	IF_4
0x40034c1	     0xf8409010000	                            je 0x40035d0	      4312	option.c	FUNCTION_14	IF_3	IF_4
0x40034c7	          0x4889d8	                            mov rax, rbx	      4317	option.c	FUNCTION_14	IF_3
0x40034ca	    0x891500000000	            mov dword [0x040034d0], edx 	      4318	option.c	FUNCTION_14	IF_3
0x40034d0	        0x48c1e006	                              shl rax, 6	      4317	option.c	FUNCTION_14	IF_3
0x40034d4	    0x488988000000	                    mov qword [rax], rcx	      4317	option.c	FUNCTION_14	IF_3
0x40034db	              0x5b	                                 pop rbx	      4213	option.c	FUNCTION_10
0x40034dc	              0x5d	                                 pop rbp	      4213	option.c	FUNCTION_10
0x40034dd	            0x415c	                                 pop r12	      4213	option.c	FUNCTION_10
0x40034df	            0x415d	                                 pop r13	      4213	option.c	FUNCTION_10
0x40034e1	            0x415e	                                 pop r14	      4213	option.c	FUNCTION_10
0x40034e3	              0xc3	                                     ret	      4213	option.c	FUNCTION_10
0x40034e4	         0xf1f4000	                         nop dword [rax]	      4213	option.c	FUNCTION_10
0x40034e8	    0x448b05000000	            mov r8d, dword [0x040034ef] 	      4300	option.c	FUNCTION_14	IF_1	IF_2
0x40034ef	      0xba01000000	                              mov edx, 1	      4300	option.c	FUNCTION_14	IF_1	IF_2
0x40034f4	      0xb901000000	                              mov ecx, 1	      4300	option.c	FUNCTION_14	IF_1	IF_2
0x40034f9	          0x4585c0	                           test r8d, r8d	      4300	option.c	FUNCTION_14	IF_1	IF_2
0x40034fc	            0x751a	                           jne 0x4003518	      4300	option.c	FUNCTION_14	IF_1	IF_2
0x40034fe	    0x8b3d00000000	            mov edi, dword [0x04003504] 	      4300	option.c	FUNCTION_14	IF_1	IF_2
0x4003504	            0x85ff	                           test edi, edi	      4300	option.c	FUNCTION_14	IF_1	IF_2
0x4003506	            0x7510	                           jne 0x4003518	      4300	option.c	FUNCTION_14	IF_1	IF_2
0x4003508	      0xe800000000	                          call 0x400350d	      4304	option.c	FUNCTION_14	IF_1	CALL_2
0x400350d	          0x4863c8	                         movsxd rcx, eax	      4304	option.c	FUNCTION_14	IF_1	CALL_2
0x4003510	          0x4889ca	                            mov rdx, rcx	      4304	option.c	FUNCTION_14	IF_1	CALL_2
0x4003513	       0xf1f440000	                   nop dword [rax + rax]	      4304	option.c	FUNCTION_14	IF_1	CALL_2
0x4003518	          0x4889d8	                            mov rax, rbx	      4305	option.c	FUNCTION_14	IF_1
0x400351b	    0x891500000000	            mov dword [0x04003521], edx 	      4306	option.c	FUNCTION_14	IF_1
0x4003521	        0x48c1e006	                              shl rax, 6	      4305	option.c	FUNCTION_14	IF_1
0x4003525	    0x488988000000	                    mov qword [rax], rcx	      4305	option.c	FUNCTION_14	IF_1
0x400352c	      0xe953ffffff	                           jmp 0x4003484	      4305	option.c	FUNCTION_14	IF_1
0x4003531	     0xf1f80000000	                         nop dword [rax]	      4305	option.c	FUNCTION_14	IF_1
0x4003538	        0x49c1e406	                              shl r12, 6	      4093	option.c	FUNCTION_10	IF_3	IF_4	IF_6
0x400353c	    0x48c705000000	               mov qword [0x04003547], 0	      4092	option.c	FUNCTION_10	IF_3	IF_4	IF_6
0x4003547	    0x49c784240000	                      mov qword [r12], 0	      4093	option.c	FUNCTION_10	IF_3	IF_4	IF_6
0x4003553	      0xe9f2feffff	                           jmp 0x400344a	      4093	option.c	FUNCTION_10	IF_3	IF_4	IF_6
0x4003558	     0xf1f84000000	                   nop dword [rax + rax]	      4093	option.c	FUNCTION_10	IF_3	IF_4	IF_6
0x4003560	      0xbe00000000	                              mov esi, 0	      4072	option.c	FUNCTION_10	IF_3	IF_4	CALL_5
0x4003565	          0x4c89f7	                            mov rdi, r14	      4072	option.c	FUNCTION_10	IF_3	IF_4	CALL_5
0x4003568	      0xe800000000	                          call 0x400356d	      4072	option.c	FUNCTION_10	IF_3	IF_4	CALL_5
0x400356d	            0x85c0	                           test eax, eax	      4072	option.c	FUNCTION_10	IF_3	IF_4	CALL_5
0x400356f	     0xf84affeffff	                            je 0x4003424	      4072	option.c	FUNCTION_10	IF_3	IF_4	CALL_5
0x4003575	      0xbe00000000	                              mov esi, 0	      4098	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_8
0x400357a	          0x4c89f7	                            mov rdi, r14	      4098	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_8
0x400357d	      0xe800000000	                          call 0x4003582	      4098	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_8
0x4003582	            0x85c0	                           test eax, eax	      4098	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_8
0x4003584	     0xf85a6000000	                           jne 0x4003630	      4098	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_8
0x400358a	            0x85ed	                           test ebp, ebp	      4120	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_8
0x400358c	            0x741a	                            je 0x40035a8	      4120	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_8
0x400358e	        0x49c1e506	                              shl r13, 6	      4127	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_8
0x4003592	    0x48c705000000	               mov qword [0x0400359d], 0	      4125	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_8
0x400359d	    0x49c785000000	                      mov qword [r13], 0	      4127	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_8
0x40035a8	            0x85db	                           test ebx, ebx	      4130	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_9
0x40035aa	     0xf849afeffff	                            je 0x400344a	      4130	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_9
0x40035b0	        0x49c1e406	                              shl r12, 6	      4133	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_9
0x40035b4	    0x48c705000000	               mov qword [0x040035bf], 0	      4132	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_9
0x40035bf	    0x49c784240000	                      mov qword [r12], 0	      4133	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_9
0x40035cb	      0xe97afeffff	                           jmp 0x400344a	      4133	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	IF_9
0x40035d0	      0xe800000000	                          call 0x40035d5	      4316	option.c	FUNCTION_14	IF_3	CALL_4
0x40035d5	          0x4863c8	                         movsxd rcx, eax	      4316	option.c	FUNCTION_14	IF_3	CALL_4
0x40035d8	          0x4889ca	                            mov rdx, rcx	      4316	option.c	FUNCTION_14	IF_3	CALL_4
0x40035db	      0xe9e7feffff	                           jmp 0x40034c7	      4316	option.c	FUNCTION_14	IF_3	CALL_4
0x40035e0	      0xbf01000000	                              mov edi, 1	      4201	option.c	FUNCTION_10	IF_16	CALL_34
0x40035e5	      0xe800000000	                          call 0x40035ea	      4201	option.c	FUNCTION_10	IF_16	CALL_34
0x40035ea	          0x803800	                       cmp byte [rax], 0	      4201	option.c	FUNCTION_10	IF_16	CALL_34
0x40035ed	     0xf8570feffff	                           jne 0x4003463	      4201	option.c	FUNCTION_10	IF_16	CALL_34
0x40035f3	      0xbf00000000	                              mov edi, 0	      4203	option.c	FUNCTION_10	IF_16	CALL_35
0x40035f8	      0xe823cdffff	                     call sym.findoption	      4203	option.c	FUNCTION_10	IF_16	CALL_35
0x40035fd	            0x85c0	                           test eax, eax	      4206	option.c	FUNCTION_10	IF_16	IF_17
0x40035ff	     0xf885efeffff	                            js 0x4003463	      4206	option.c	FUNCTION_10	IF_16	IF_17
0x4003605	            0x4898	                                    cdqe	      4206	option.c	FUNCTION_10	IF_16	IF_17
0x4003607	        0x48c1e006	                              shl rax, 6	      4206	option.c	FUNCTION_10	IF_16	IF_17
0x400360b	    0xf68000000000	                      test byte [rax], 1	      4206	option.c	FUNCTION_10	IF_16	IF_17
0x4003612	     0xf844bfeffff	                            je 0x4003463	      4206	option.c	FUNCTION_10	IF_16	IF_17
0x4003618	      0xe800000000	                          call 0x400361d	      4207	option.c	FUNCTION_10	IF_16	CALL_37
0x400361d	      0xbe04000000	                              mov esi, 4	      4207	option.c	FUNCTION_10	IF_16	CALL_37
0x4003622	            0x89c7	                            mov edi, eax	      4207	option.c	FUNCTION_10	IF_16	CALL_37
0x4003624	      0xe800000000	                          call 0x4003629	      4207	option.c	FUNCTION_10	IF_16	CALL_37
0x4003629	      0xe935feffff	                           jmp 0x4003463	      4207	option.c	FUNCTION_10	IF_16	CALL_37
0x400362e	            0x6690	                                     nop	      4207	option.c	FUNCTION_10	IF_16	CALL_37
0x4003630	      0xbe00000000	                              mov esi, 0	      4099	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_9
0x4003635	          0x4c89f7	                            mov rdi, r14	      4099	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_9
0x4003638	      0xe800000000	                          call 0x400363d	      4099	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_9
0x400363d	            0x85c0	                           test eax, eax	      4099	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_9
0x400363f	     0xf8445ffffff	                            je 0x400358a	      4099	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_9
0x4003645	      0xbe00000000	                              mov esi, 0	      4100	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_10
0x400364a	          0x4c89f7	                            mov rdi, r14	      4100	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_10
0x400364d	      0xe800000000	                          call 0x4003652	      4100	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_10
0x4003652	            0x85c0	                           test eax, eax	      4100	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_10
0x4003654	     0xf8430ffffff	                            je 0x400358a	      4100	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_10
0x400365a	      0xbe00000000	                              mov esi, 0	      4101	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_11
0x400365f	          0x4c89f7	                            mov rdi, r14	      4101	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_11
0x4003662	      0xe800000000	                          call 0x4003667	      4101	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_11
0x4003667	            0x85c0	                           test eax, eax	      4101	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_11
0x4003669	     0xf841bffffff	                            je 0x400358a	      4101	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_11
0x400366f	      0xbe00000000	                              mov esi, 0	      4102	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_12
0x4003674	          0x4c89f7	                            mov rdi, r14	      4102	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_12
0x4003677	      0xe800000000	                          call 0x400367c	      4102	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_12
0x400367c	            0x85c0	                           test eax, eax	      4102	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_12
0x400367e	     0xf8406ffffff	                            je 0x400358a	      4102	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_12
0x4003684	      0xbe00000000	                              mov esi, 0	      4103	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_13
0x4003689	          0x4c89f7	                            mov rdi, r14	      4103	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_13
0x400368c	      0xe800000000	                          call 0x4003691	      4103	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_13
0x4003691	            0x85c0	                           test eax, eax	      4103	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_13
0x4003693	     0xf84f1feffff	                            je 0x400358a	      4103	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_13
0x4003699	      0xbe00000000	                              mov esi, 0	      4104	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_14
0x400369e	          0x4c89f7	                            mov rdi, r14	      4104	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_14
0x40036a1	      0xe800000000	                          call 0x40036a6	      4104	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_14
0x40036a6	            0x85c0	                           test eax, eax	      4104	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_14
0x40036a8	     0xf84dcfeffff	                            je 0x400358a	      4104	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_14
0x40036ae	      0xbe00000000	                              mov esi, 0	      4105	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_15
0x40036b3	          0x4c89f7	                            mov rdi, r14	      4105	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_15
0x40036b6	      0xe800000000	                          call 0x40036bb	      4105	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_15
0x40036bb	            0x85c0	                           test eax, eax	      4105	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_15
0x40036bd	     0xf84c7feffff	                            je 0x400358a	      4105	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_15
0x40036c3	      0xe982fdffff	                           jmp 0x400344a	      4105	option.c	FUNCTION_10	IF_3	ELSE_3	IF_7	CALL_15
get_highlight_default	SWITCH,0:CALL,1:DO,0:WHILE,0:IF,1:functions,0:ELSE,0:FOR,0	13
0x40059f0	        0x4883ec08	                              sub rsp, 8	      9805	option.c	FUNCTION_58
0x40059f4	      0xbf00000000	                              mov edi, 0	      9808	option.c	FUNCTION_58	CALL_1
0x40059f9	      0xe822a9ffff	                     call sym.findoption	      9808	option.c	FUNCTION_58	CALL_1
0x40059fe	            0x85c0	                           test eax, eax	      9809	option.c	FUNCTION_58	IF_1
0x4005a00	            0x7816	                            js 0x4005a18	      9809	option.c	FUNCTION_58	IF_1
0x4005a02	            0x4898	                                    cdqe	      9810	option.c	FUNCTION_58	IF_1
0x4005a04	        0x48c1e006	                              shl rax, 6	      9810	option.c	FUNCTION_58	IF_1
0x4005a08	    0x488b80000000	                    mov rax, qword [rax]	      9810	option.c	FUNCTION_58	IF_1
0x4005a0f	        0x4883c408	                              add rsp, 8	      9812	option.c	FUNCTION_58
0x4005a13	              0xc3	                                     ret	      9812	option.c	FUNCTION_58
0x4005a14	         0xf1f4000	                         nop dword [rax]	      9812	option.c	FUNCTION_58
0x4005a18	            0x31c0	                            xor eax, eax	      9811	option.c	FUNCTION_58
0x4005a1a	            0xebf3	                           jmp 0x4005a0f	      9811	option.c	FUNCTION_58
int_cmp	SWITCH,0:CALL,0:DO,0:WHILE,0:IF,0:functions,0:ELSE,0:FOR,0	3
0x4000040	            0x8b07	                    mov eax, dword [rdi]	      7671	option.c	FUNCTION_41
0x4000042	            0x2b06	                    sub eax, dword [rsi]	      7671	option.c	FUNCTION_41
0x4000044	              0xc3	                                     ret	      7672	option.c	FUNCTION_41
file_ff_differs	SWITCH,0:CALL,2:DO,0:WHILE,0:IF,6:functions,0:ELSE,0:FOR,0	68
0x40130a0	          0x8b477c	            mov eax, dword [rdi + 0x7c] 	     12486	option.c	FUNCTION_111	IF_1
0x40130a3	            0xa804	                              test al, 4	     12486	option.c	FUNCTION_111	IF_1
0x40130a5	            0x7579	                           jne 0x4013120	     12486	option.c	FUNCTION_111	IF_1
0x40130a7	            0x85f6	                           test esi, esi	     12488	option.c	FUNCTION_111	IF_2
0x40130a9	              0x53	                                push rbx	     12484	option.c	FUNCTION_111
0x40130aa	          0x4889fb	                            mov rbx, rdi	     12484	option.c	FUNCTION_111
0x40130ad	            0x740e	                            je 0x40130bd	     12488	option.c	FUNCTION_111	IF_2
0x40130af	            0xa810	                           test al, 0x10	     12489	option.c	FUNCTION_111	IF_2
0x40130b1	            0x740a	                            je 0x40130bd	     12489	option.c	FUNCTION_111	IF_2
0x40130b3	        0x48833f01	                      cmp qword [rdi], 1	     12490	option.c	FUNCTION_111	IF_2
0x40130b7	     0xf84a3000000	                            je 0x4013160	     12490	option.c	FUNCTION_111	IF_2
0x40130bd	    0x488b83901400	          mov rax, qword [rbx + 0x1490] 	     12493	option.c	FUNCTION_111	IF_3
0x40130c4	           0xfb610	                   movzx edx, byte [rax]	     12493	option.c	FUNCTION_111	IF_3
0x40130c7	      0xb801000000	                              mov eax, 1	     12494	option.c	FUNCTION_111	IF_3
0x40130cc	    0x399304170000	          cmp dword [rbx + 0x1704], edx 	     12493	option.c	FUNCTION_111	IF_3
0x40130d2	            0x740c	                            je 0x40130e0	     12493	option.c	FUNCTION_111	IF_3
0x40130d4	              0x5b	                                 pop rbx	     12506	option.c	FUNCTION_111
0x40130d5	              0xc3	                                     ret	     12506	option.c	FUNCTION_111
0x40130d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     12506	option.c	FUNCTION_111
0x40130e0	    0x8b8b08140000	          mov ecx, dword [rbx + 0x1408] 	     12495	option.c	FUNCTION_111	IF_4
0x40130e6	            0x85c9	                           test ecx, ecx	     12495	option.c	FUNCTION_111	IF_4
0x40130e8	            0x743e	                            je 0x4013128	     12495	option.c	FUNCTION_111	IF_4
0x40130ea	    0x8b8b70140000	          mov ecx, dword [rbx + 0x1470] 	     12495	option.c	FUNCTION_111	IF_4
0x40130f0	    0x398b00170000	          cmp dword [rbx + 0x1700], ecx 	     12495	option.c	FUNCTION_111	IF_4
0x40130f6	            0x75dc	                           jne 0x40130d4	     12495	option.c	FUNCTION_111	IF_4
0x40130f8	    0x488bbb081700	          mov rdi, qword [rbx + 0x1708] 	     12500	option.c	FUNCTION_111	IF_6
0x40130ff	          0x4885ff	                           test rdi, rdi	     12500	option.c	FUNCTION_111	IF_6
0x4013102	            0x7475	                            je 0x4013179	     12500	option.c	FUNCTION_111	IF_6
0x4013104	    0x488bb3881400	          mov rsi, qword [rbx + 0x1488] 	     12502	option.c	FUNCTION_111	CALL_2
0x401310b	      0xe800000000	                          call 0x4013110	     12502	option.c	FUNCTION_111	CALL_2
0x4013110	            0x85c0	                           test eax, eax	     12502	option.c	FUNCTION_111	CALL_2
0x4013112	           0xf95c0	                                setne al	     12502	option.c	FUNCTION_111	CALL_2
0x4013115	           0xfb6c0	                           movzx eax, al	     12502	option.c	FUNCTION_111	CALL_2
0x4013118	              0x5b	                                 pop rbx	     12506	option.c	FUNCTION_111
0x4013119	              0xc3	                                     ret	     12506	option.c	FUNCTION_111
0x401311a	    0x660f1f440000	                    nop word [rax + rax]	     12506	option.c	FUNCTION_111
0x4013120	            0x31c0	                            xor eax, eax	     12487	option.c	FUNCTION_111	IF_1
0x4013122	              0xc3	                                     ret	     12506	option.c	FUNCTION_111
0x4013123	       0xf1f440000	                   nop dword [rax + rax]	     12506	option.c	FUNCTION_111
0x4013128	    0x8b9374140000	          mov edx, dword [rbx + 0x1474] 	     12495	option.c	FUNCTION_111	IF_4
0x401312e	            0x85d2	                           test edx, edx	     12495	option.c	FUNCTION_111	IF_4
0x4013130	            0x741e	                            je 0x4013150	     12495	option.c	FUNCTION_111	IF_4
0x4013132	    0x8b8b0c140000	          mov ecx, dword [rbx + 0x140c] 	     12498	option.c	FUNCTION_111	IF_5
0x4013138	    0x398b14170000	          cmp dword [rbx + 0x1714], ecx 	     12498	option.c	FUNCTION_111	IF_5
0x401313e	      0xb801000000	                              mov eax, 1	     12494	option.c	FUNCTION_111	IF_3
0x4013143	            0x74b3	                            je 0x40130f8	     12498	option.c	FUNCTION_111	IF_5
0x4013145	              0x5b	                                 pop rbx	     12506	option.c	FUNCTION_111
0x4013146	              0xc3	                                     ret	     12506	option.c	FUNCTION_111
0x4013147	    0x660f1f840000	                    nop word [rax + rax]	     12506	option.c	FUNCTION_111
0x4013150	    0x8b8b00170000	          mov ecx, dword [rbx + 0x1700] 	     12495	option.c	FUNCTION_111	IF_4
0x4013156	    0x398b70140000	          cmp dword [rbx + 0x1470], ecx 	     12495	option.c	FUNCTION_111	IF_4
0x401315c	            0x74d4	                            je 0x4013132	     12495	option.c	FUNCTION_111	IF_4
0x401315e	              0x5b	                                 pop rbx	     12506	option.c	FUNCTION_111
0x401315f	              0xc3	                                     ret	     12506	option.c	FUNCTION_111
0x4013160	            0x31d2	                            xor edx, edx	     12491	option.c	FUNCTION_111	IF_2	CALL_1
0x4013162	      0xbe01000000	                              mov esi, 1	     12491	option.c	FUNCTION_111	IF_2	CALL_1
0x4013167	      0xe800000000	                          call 0x401316c	     12491	option.c	FUNCTION_111	IF_2	CALL_1
0x401316c	          0x803800	                       cmp byte [rax], 0	     12491	option.c	FUNCTION_111	IF_2	CALL_1
0x401316f	     0xf8548ffffff	                           jne 0x40130bd	     12491	option.c	FUNCTION_111	IF_2	CALL_1
0x4013175	            0x31c0	                            xor eax, eax	     12487	option.c	FUNCTION_111	IF_1
0x4013177	              0x5b	                                 pop rbx	     12506	option.c	FUNCTION_111
0x4013178	              0xc3	                                     ret	     12506	option.c	FUNCTION_111
0x4013179	    0x488b83881400	          mov rax, qword [rbx + 0x1488] 	     12501	option.c	FUNCTION_111	IF_6
0x4013180	              0x5b	                                 pop rbx	     12506	option.c	FUNCTION_111
0x4013181	          0x803800	                       cmp byte [rax], 0	     12501	option.c	FUNCTION_111	IF_6
0x4013184	           0xf95c0	                                setne al	     12501	option.c	FUNCTION_111	IF_6
0x4013187	           0xfb6c0	                           movzx eax, al	     12501	option.c	FUNCTION_111	IF_6
0x401318a	              0xc3	                                     ret	     12506	option.c	FUNCTION_111
reset_modifiable	SWITCH,0:CALL,1:DO,0:WHILE,0:IF,1:functions,0:ELSE,0:FOR,0	13
0x400c5e0	        0x4883ec08	                              sub rsp, 8	     11301	option.c	FUNCTION_85
0x400c5e4	    0x488b05000000	            mov rax, qword [0x0400c5eb] 	     11304	option.c	FUNCTION_85
0x400c5eb	      0xbf00000000	                              mov edi, 0	     11306	option.c	FUNCTION_85	CALL_1
0x400c5f0	    0xc70500000000	               mov dword [0x0400c5fa], 0	     11305	option.c	FUNCTION_85
0x400c5fa	    0xc78040150000	            mov dword [rax + 0x1540], 0 	     11304	option.c	FUNCTION_85
0x400c604	      0xe8173dffff	                     call sym.findoption	     11306	option.c	FUNCTION_85	CALL_1
0x400c609	            0x85c0	                           test eax, eax	     11307	option.c	FUNCTION_85	IF_1
0x400c60b	            0x7811	                            js 0x400c61e	     11307	option.c	FUNCTION_85	IF_1
0x400c60d	            0x4898	                                    cdqe	     11308	option.c	FUNCTION_85	IF_1
0x400c60f	        0x48c1e006	                              shl rax, 6	     11308	option.c	FUNCTION_85	IF_1
0x400c613	    0x48c780000000	                      mov qword [rax], 0	     11308	option.c	FUNCTION_85	IF_1
0x400c61e	        0x4883c408	                              add rsp, 8	     11309	option.c	FUNCTION_85
0x400c622	              0xc3	                                     ret	     11309	option.c	FUNCTION_85
langmap_adjust_mb	SWITCH,0:CALL,0:DO,0:WHILE,1:IF,2:functions,0:ELSE,1:FOR,0	42
0x400d110	    0x488b05000000	            mov rax, qword [0x0400d117] 	     11895	option.c	FUNCTION_94
0x400d117	    0x448b15000000	           mov r10d, dword [0x0400d11e] 	     11897	option.c	FUNCTION_94
0x400d11e	            0x31f6	                            xor esi, esi	     11896	option.c	FUNCTION_94
0x400d120	          0x4439d6	                           cmp esi, r10d	     11899	option.c	FUNCTION_94	WHILE_1
0x400d123	            0x7449	                            je 0x400d16e	     11899	option.c	FUNCTION_94	WHILE_1
0x400d125	        0x428d1416	                    lea edx, [rsi + r10]	     11901	option.c	FUNCTION_94	WHILE_1
0x400d129	            0x89d1	                            mov ecx, edx	     11901	option.c	FUNCTION_94	WHILE_1
0x400d12b	          0xc1e91f	                           shr ecx, 0x1f	     11901	option.c	FUNCTION_94	WHILE_1
0x400d12e	             0x1d1	                            add ecx, edx	     11901	option.c	FUNCTION_94	WHILE_1
0x400d130	            0xd1f9	                              sar ecx, 1	     11901	option.c	FUNCTION_94	WHILE_1
0x400d132	          0x4863d1	                         movsxd rdx, ecx	     11902	option.c	FUNCTION_94	WHILE_1
0x400d135	        0x4c8d04d0	                   lea r8, [rax + rdx*8]	     11902	option.c	FUNCTION_94	WHILE_1
0x400d139	          0x413938	                     cmp dword [r8], edi	     11904	option.c	FUNCTION_94	WHILE_1	IF_1
0x400d13c	            0x743a	                            je 0x400d178	     11904	option.c	FUNCTION_94	WHILE_1	IF_1
0x400d13e	            0x792a	                           jns 0x400d16a	     11906	option.c	FUNCTION_94	WHILE_1	IF_2
0x400d140	            0xeb3b	                           jmp 0x400d17d	     11906	option.c	FUNCTION_94	WHILE_1	IF_2
0x400d142	    0x660f1f440000	                    nop word [rax + rax]	     11906	option.c	FUNCTION_94	WHILE_1	IF_2
0x400d148	          0x8d140e	                    lea edx, [rsi + rcx]	     11901	option.c	FUNCTION_94	WHILE_1
0x400d14b	          0x4189d0	                            mov r8d, edx	     11901	option.c	FUNCTION_94	WHILE_1
0x400d14e	        0x41c1e81f	                           shr r8d, 0x1f	     11901	option.c	FUNCTION_94	WHILE_1
0x400d152	          0x4401c2	                            add edx, r8d	     11901	option.c	FUNCTION_94	WHILE_1
0x400d155	            0xd1fa	                              sar edx, 1	     11901	option.c	FUNCTION_94	WHILE_1
0x400d157	          0x4c63c2	                          movsxd r8, edx	     11902	option.c	FUNCTION_94	WHILE_1
0x400d15a	          0x4189d1	                            mov r9d, edx	     11901	option.c	FUNCTION_94	WHILE_1
0x400d15d	        0x4e8d04c0	                    lea r8, [rax + r8*8]	     11902	option.c	FUNCTION_94	WHILE_1
0x400d161	          0x413938	                     cmp dword [r8], edi	     11904	option.c	FUNCTION_94	WHILE_1	IF_1
0x400d164	            0x7412	                            je 0x400d178	     11904	option.c	FUNCTION_94	WHILE_1	IF_1
0x400d166	            0x7820	                            js 0x400d188	     11906	option.c	FUNCTION_94	WHILE_1	IF_2
0x400d168	            0x89d1	                            mov ecx, edx	     11901	option.c	FUNCTION_94	WHILE_1
0x400d16a	            0x39ce	                            cmp esi, ecx	     11899	option.c	FUNCTION_94	WHILE_1
0x400d16c	            0x75da	                           jne 0x400d148	     11899	option.c	FUNCTION_94	WHILE_1
0x400d16e	            0x89f8	                            mov eax, edi	     11911	option.c	FUNCTION_94	ELSE_1
0x400d170	              0xc3	                                     ret	     11912	option.c	FUNCTION_94	ELSE_1
0x400d171	     0xf1f80000000	                         nop dword [rax]	     11912	option.c	FUNCTION_94	ELSE_1
0x400d178	        0x418b4004	                 mov eax, dword [r8 + 4]	     11905	option.c	FUNCTION_94	WHILE_1	IF_1
0x400d17c	              0xc3	                                     ret	     11905	option.c	FUNCTION_94	WHILE_1	IF_1
0x400d17d	          0x4189c9	                            mov r9d, ecx	     11901	option.c	FUNCTION_94	WHILE_1
0x400d180	          0x4489d1	                           mov ecx, r10d	     11906	option.c	FUNCTION_94	WHILE_1	IF_2
0x400d183	       0xf1f440000	                   nop dword [rax + rax]	     11906	option.c	FUNCTION_94	WHILE_1	IF_2
0x400d188	        0x418d7101	                       lea esi, [r9 + 1]	     11907	option.c	FUNCTION_94	WHILE_1	IF_2
0x400d18c	          0x4189ca	                           mov r10d, ecx	     11907	option.c	FUNCTION_94	WHILE_1	IF_2
0x400d18f	            0xeb8f	                           jmp 0x400d120	     11907	option.c	FUNCTION_94	WHILE_1	IF_2
unset_global_local_option	SWITCH,1:CALL,20:DO,0:WHILE,0:IF,1:functions,0:ELSE,0:FOR,0	255
0x400ab30	              0x53	                                push rbx	     10429	option.c	FUNCTION_75
0x400ab31	          0x4889f3	                            mov rbx, rsi	     10429	option.c	FUNCTION_75
0x400ab34	      0xe8e757ffff	                     call sym.findoption	     10434	option.c	FUNCTION_75	CALL_1
0x400ab39	            0x85c0	                           test eax, eax	     10435	option.c	FUNCTION_75	IF_1
0x400ab3b	            0x7873	                            js 0x400abb0	     10435	option.c	FUNCTION_75	IF_1
0x400ab3d	            0x4898	                                    cdqe	     10439	option.c	FUNCTION_75	SWITCH_1
0x400ab3f	        0x48c1e006	                              shl rax, 6	     10439	option.c	FUNCTION_75	SWITCH_1
0x400ab43	    0x8b8000000000	                    mov eax, dword [rax]	     10439	option.c	FUNCTION_75	SWITCH_1
0x400ab49	      0x3d18500000	                         cmp eax, 0x5018	     10439	option.c	FUNCTION_75	SWITCH_1
0x400ab4e	     0xf843c040000	                            je 0x400af90	     10439	option.c	FUNCTION_75	SWITCH_1
0x400ab54	            0x7762	                            ja 0x400abb8	     10439	option.c	FUNCTION_75	SWITCH_1
0x400ab56	      0x3d06500000	                         cmp eax, 0x5006	     10439	option.c	FUNCTION_75	SWITCH_1
0x400ab5b	     0xf845f040000	                            je 0x400afc0	     10439	option.c	FUNCTION_75	SWITCH_1
0x400ab61	     0xf86b1000000	                           jbe 0x400ac18	     10439	option.c	FUNCTION_75	SWITCH_1
0x400ab67	      0x3d14500000	                         cmp eax, 0x5014	     10439	option.c	FUNCTION_75	SWITCH_1
0x400ab6c	     0xf844e030000	                            je 0x400aec0	     10439	option.c	FUNCTION_75	SWITCH_1
0x400ab72	     0xf8748010000	                            ja 0x400acc0	     10439	option.c	FUNCTION_75	SWITCH_1
0x400ab78	      0x3d07500000	                         cmp eax, 0x5007	     10439	option.c	FUNCTION_75	SWITCH_1
0x400ab7d	     0xf84cd010000	                            je 0x400ad50	     10439	option.c	FUNCTION_75	SWITCH_1
0x400ab83	      0x3d10500000	                         cmp eax, 0x5010	     10439	option.c	FUNCTION_75	SWITCH_1
0x400ab88	            0x7526	                           jne 0x400abb0	     10439	option.c	FUNCTION_75	SWITCH_1
0x400ab8a	    0x488bbb481700	          mov rdi, qword [rbx + 0x1748] 	      5763	option.c	FUNCTION_31	IF_1
0x400ab91	    0x488b05000000	            mov rax, qword [0x0400ab98] 	      5763	option.c	FUNCTION_31	IF_1
0x400ab98	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x400ab9b	            0x740c	                            je 0x400aba9	      5763	option.c	FUNCTION_31	IF_1
0x400ab9d	      0xe800000000	                          call 0x400aba2	      5764	option.c	FUNCTION_31	CALL_1
0x400aba2	    0x488b05000000	            mov rax, qword [0x0400aba9] 	      5764	option.c	FUNCTION_31	CALL_1
0x400aba9	    0x488983481700	          mov qword [rbx + 0x1748], rax 	      5765	option.c	FUNCTION_31
0x400abb0	              0x5b	                                 pop rbx	     10524	option.c	FUNCTION_75
0x400abb1	              0xc3	                                     ret	     10524	option.c	FUNCTION_75
0x400abb2	    0x660f1f440000	                    nop word [rax + rax]	     10524	option.c	FUNCTION_75
0x400abb8	      0x3d30500000	                         cmp eax, 0x5030	     10439	option.c	FUNCTION_75	SWITCH_1
0x400abbd	     0xf849d030000	                            je 0x400af60	     10439	option.c	FUNCTION_75	SWITCH_1
0x400abc3	     0xf86a7000000	                           jbe 0x400ac70	     10439	option.c	FUNCTION_75	SWITCH_1
0x400abc9	      0x3d47500000	                         cmp eax, 0x5047	     10439	option.c	FUNCTION_75	SWITCH_1
0x400abce	     0xf845c030000	                            je 0x400af30	     10439	option.c	FUNCTION_75	SWITCH_1
0x400abd4	     0xf8726010000	                            ja 0x400ad00	     10439	option.c	FUNCTION_75	SWITCH_1
0x400abda	      0x3d31500000	                         cmp eax, 0x5031	     10439	option.c	FUNCTION_75	SWITCH_1
0x400abdf	     0xf8443010000	                            je 0x400ad28	     10439	option.c	FUNCTION_75	SWITCH_1
0x400abe5	      0x3d38500000	                         cmp eax, 0x5038	     10439	option.c	FUNCTION_75	SWITCH_1
0x400abea	            0x75c4	                           jne 0x400abb0	     10439	option.c	FUNCTION_75	SWITCH_1
0x400abec	    0x488bbb101600	          mov rdi, qword [rbx + 0x1610] 	      5763	option.c	FUNCTION_31	IF_1
0x400abf3	    0x488b05000000	            mov rax, qword [0x0400abfa] 	      5763	option.c	FUNCTION_31	IF_1
0x400abfa	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x400abfd	            0x740c	                            je 0x400ac0b	      5763	option.c	FUNCTION_31	IF_1
0x400abff	      0xe800000000	                          call 0x400ac04	      5764	option.c	FUNCTION_31	CALL_1
0x400ac04	    0x488b05000000	            mov rax, qword [0x0400ac0b] 	      5764	option.c	FUNCTION_31	CALL_1
0x400ac0b	    0x488983101600	          mov qword [rbx + 0x1610], rax 	      5765	option.c	FUNCTION_31
0x400ac12	              0x5b	                                 pop rbx	     10524	option.c	FUNCTION_75
0x400ac13	              0xc3	                                     ret	     10524	option.c	FUNCTION_75
0x400ac14	         0xf1f4000	                         nop dword [rax]	     10524	option.c	FUNCTION_75
0x400ac18	      0x3d01500000	                         cmp eax, 0x5001	     10439	option.c	FUNCTION_75	SWITCH_1
0x400ac1d	     0xf84fd020000	                            je 0x400af20	     10439	option.c	FUNCTION_75	SWITCH_1
0x400ac23	     0xf865f020000	                           jbe 0x400ae88	     10439	option.c	FUNCTION_75	SWITCH_1
0x400ac29	      0x3d03500000	                         cmp eax, 0x5003	     10439	option.c	FUNCTION_75	SWITCH_1
0x400ac2e	     0xf844c010000	                            je 0x400ad80	     10439	option.c	FUNCTION_75	SWITCH_1
0x400ac34	      0x3d05500000	                         cmp eax, 0x5005	     10439	option.c	FUNCTION_75	SWITCH_1
0x400ac39	     0xf8571ffffff	                           jne 0x400abb0	     10439	option.c	FUNCTION_75	SWITCH_1
0x400ac3f	    0x488bbb001600	          mov rdi, qword [rbx + 0x1600] 	      5763	option.c	FUNCTION_31	IF_1
0x400ac46	    0x488b05000000	            mov rax, qword [0x0400ac4d] 	      5763	option.c	FUNCTION_31	IF_1
0x400ac4d	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x400ac50	            0x740c	                            je 0x400ac5e	      5763	option.c	FUNCTION_31	IF_1
0x400ac52	      0xe800000000	                          call 0x400ac57	      5764	option.c	FUNCTION_31	CALL_1
0x400ac57	    0x488b05000000	            mov rax, qword [0x0400ac5e] 	      5764	option.c	FUNCTION_31	CALL_1
0x400ac5e	    0x488983001600	          mov qword [rbx + 0x1600], rax 	      5765	option.c	FUNCTION_31
0x400ac65	              0x5b	                                 pop rbx	     10524	option.c	FUNCTION_75
0x400ac66	              0xc3	                                     ret	     10524	option.c	FUNCTION_75
0x400ac67	    0x660f1f840000	                    nop word [rax + rax]	     10524	option.c	FUNCTION_75
0x400ac70	      0x3d1e500000	                         cmp eax, 0x501e	     10439	option.c	FUNCTION_75	SWITCH_1
0x400ac75	     0xf8475020000	                            je 0x400aef0	     10439	option.c	FUNCTION_75	SWITCH_1
0x400ac7b	     0xf86cf010000	                           jbe 0x400ae50	     10439	option.c	FUNCTION_75	SWITCH_1
0x400ac81	      0x3d1f500000	                         cmp eax, 0x501f	     10439	option.c	FUNCTION_75	SWITCH_1
0x400ac86	     0xf8494010000	                            je 0x400ae20	     10439	option.c	FUNCTION_75	SWITCH_1
0x400ac8c	      0x3d2e500000	                         cmp eax, 0x502e	     10439	option.c	FUNCTION_75	SWITCH_1
0x400ac91	     0xf8519ffffff	                           jne 0x400abb0	     10439	option.c	FUNCTION_75	SWITCH_1
0x400ac97	    0x488bbb181500	          mov rdi, qword [rbx + 0x1518] 	      5763	option.c	FUNCTION_31	IF_1
0x400ac9e	    0x488b05000000	            mov rax, qword [0x0400aca5] 	      5763	option.c	FUNCTION_31	IF_1
0x400aca5	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x400aca8	            0x740c	                            je 0x400acb6	      5763	option.c	FUNCTION_31	IF_1
0x400acaa	      0xe800000000	                          call 0x400acaf	      5764	option.c	FUNCTION_31	CALL_1
0x400acaf	    0x488b05000000	            mov rax, qword [0x0400acb6] 	      5764	option.c	FUNCTION_31	CALL_1
0x400acb6	    0x488983181500	          mov qword [rbx + 0x1518], rax 	      5765	option.c	FUNCTION_31
0x400acbd	              0x5b	                                 pop rbx	     10524	option.c	FUNCTION_75
0x400acbe	              0xc3	                                     ret	     10524	option.c	FUNCTION_75
0x400acbf	              0x90	                                     nop	     10524	option.c	FUNCTION_75
0x400acc0	      0x3d15500000	                         cmp eax, 0x5015	     10439	option.c	FUNCTION_75	SWITCH_1
0x400acc5	     0xf8425010000	                            je 0x400adf0	     10439	option.c	FUNCTION_75	SWITCH_1
0x400accb	      0x3d17500000	                         cmp eax, 0x5017	     10439	option.c	FUNCTION_75	SWITCH_1
0x400acd0	     0xf85dafeffff	                           jne 0x400abb0	     10439	option.c	FUNCTION_75	SWITCH_1
0x400acd6	    0x488bbbc01400	          mov rdi, qword [rbx + 0x14c0] 	      5763	option.c	FUNCTION_31	IF_1
0x400acdd	    0x488b05000000	            mov rax, qword [0x0400ace4] 	      5763	option.c	FUNCTION_31	IF_1
0x400ace4	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x400ace7	            0x740c	                            je 0x400acf5	      5763	option.c	FUNCTION_31	IF_1
0x400ace9	      0xe800000000	                          call 0x400acee	      5764	option.c	FUNCTION_31	CALL_1
0x400acee	    0x488b05000000	            mov rax, qword [0x0400acf5] 	      5764	option.c	FUNCTION_31	CALL_1
0x400acf5	    0x488983c01400	          mov qword [rbx + 0x14c0], rax 	      5765	option.c	FUNCTION_31
0x400acfc	              0x5b	                                 pop rbx	     10524	option.c	FUNCTION_75
0x400acfd	              0xc3	                                     ret	     10524	option.c	FUNCTION_75
0x400acfe	            0x6690	                                     nop	     10524	option.c	FUNCTION_75
0x400ad00	      0x3d48500000	                         cmp eax, 0x5048	     10439	option.c	FUNCTION_75	SWITCH_1
0x400ad05	     0xf84ad000000	                            je 0x400adb8	     10439	option.c	FUNCTION_75	SWITCH_1
0x400ad0b	      0x3d4d500000	                         cmp eax, 0x504d	     10439	option.c	FUNCTION_75	SWITCH_1
0x400ad10	     0xf859afeffff	                           jne 0x400abb0	     10439	option.c	FUNCTION_75	SWITCH_1
0x400ad16	    0x48c783481600	mov qword [rbx + 0x1648], 0xfffffffffffe1dc0 	     10511	option.c	FUNCTION_75	SWITCH_1
0x400ad21	              0x5b	                                 pop rbx	     10524	option.c	FUNCTION_75
0x400ad22	              0xc3	                                     ret	     10524	option.c	FUNCTION_75
0x400ad23	       0xf1f440000	                   nop dword [rax + rax]	     10524	option.c	FUNCTION_75
0x400ad28	    0x488bbb281500	          mov rdi, qword [rbx + 0x1528] 	      5763	option.c	FUNCTION_31	IF_1
0x400ad2f	    0x488b05000000	            mov rax, qword [0x0400ad36] 	      5763	option.c	FUNCTION_31	IF_1
0x400ad36	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x400ad39	            0x740c	                            je 0x400ad47	      5763	option.c	FUNCTION_31	IF_1
0x400ad3b	      0xe800000000	                          call 0x400ad40	      5764	option.c	FUNCTION_31	CALL_1
0x400ad40	    0x488b05000000	            mov rax, qword [0x0400ad47] 	      5764	option.c	FUNCTION_31	CALL_1
0x400ad47	    0x488983281500	          mov qword [rbx + 0x1528], rax 	      5765	option.c	FUNCTION_31
0x400ad4e	              0x5b	                                 pop rbx	     10524	option.c	FUNCTION_75
0x400ad4f	              0xc3	                                     ret	     10524	option.c	FUNCTION_75
0x400ad50	    0x488bbbf81500	          mov rdi, qword [rbx + 0x15f8] 	      5763	option.c	FUNCTION_31	IF_1
0x400ad57	    0x488b05000000	            mov rax, qword [0x0400ad5e] 	      5763	option.c	FUNCTION_31	IF_1
0x400ad5e	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x400ad61	            0x740c	                            je 0x400ad6f	      5763	option.c	FUNCTION_31	IF_1
0x400ad63	      0xe800000000	                          call 0x400ad68	      5764	option.c	FUNCTION_31	CALL_1
0x400ad68	    0x488b05000000	            mov rax, qword [0x0400ad6f] 	      5764	option.c	FUNCTION_31	CALL_1
0x400ad6f	    0x488983f81500	          mov qword [rbx + 0x15f8], rax 	      5765	option.c	FUNCTION_31
0x400ad76	              0x5b	                                 pop rbx	     10524	option.c	FUNCTION_75
0x400ad77	              0xc3	                                     ret	     10524	option.c	FUNCTION_75
0x400ad78	     0xf1f84000000	                   nop dword [rax + rax]	     10524	option.c	FUNCTION_75
0x400ad80	    0x488bbbf81300	          mov rdi, qword [rbx + 0x13f8] 	      5763	option.c	FUNCTION_31	IF_1
0x400ad87	    0x488b05000000	            mov rax, qword [0x0400ad8e] 	      5763	option.c	FUNCTION_31	IF_1
0x400ad8e	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x400ad91	            0x740c	                            je 0x400ad9f	      5763	option.c	FUNCTION_31	IF_1
0x400ad93	      0xe800000000	                          call 0x400ad98	      5764	option.c	FUNCTION_31	CALL_1
0x400ad98	    0x488b05000000	            mov rax, qword [0x0400ad9f] 	      5764	option.c	FUNCTION_31	CALL_1
0x400ad9f	    0x488983f81300	          mov qword [rbx + 0x13f8], rax 	      5765	option.c	FUNCTION_31
0x400ada6	    0xc78300140000	            mov dword [rbx + 0x1400], 0 	     10456	option.c	FUNCTION_75	SWITCH_1
0x400adb0	              0x5b	                                 pop rbx	     10524	option.c	FUNCTION_75
0x400adb1	              0xc3	                                     ret	     10524	option.c	FUNCTION_75
0x400adb2	    0x660f1f440000	                    nop word [rax + rax]	     10524	option.c	FUNCTION_75
0x400adb8	    0x488bbb281600	          mov rdi, qword [rbx + 0x1628] 	      5763	option.c	FUNCTION_31	IF_1
0x400adbf	    0x488b05000000	            mov rax, qword [0x0400adc6] 	      5763	option.c	FUNCTION_31	IF_1
0x400adc6	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x400adc9	            0x740c	                            je 0x400add7	      5763	option.c	FUNCTION_31	IF_1
0x400adcb	      0xe800000000	                          call 0x400add0	      5764	option.c	FUNCTION_31	CALL_1
0x400add0	    0x488b05000000	            mov rax, qword [0x0400add7] 	      5764	option.c	FUNCTION_31	CALL_1
0x400add7	    0x488983281600	          mov qword [rbx + 0x1628], rax 	      5765	option.c	FUNCTION_31
0x400adde	    0xc78330160000	            mov dword [rbx + 0x1630], 0 	     10463	option.c	FUNCTION_75	SWITCH_1
0x400ade8	              0x5b	                                 pop rbx	     10524	option.c	FUNCTION_75
0x400ade9	              0xc3	                                     ret	     10524	option.c	FUNCTION_75
0x400adea	    0x660f1f440000	                    nop word [rax + rax]	     10524	option.c	FUNCTION_75
0x400adf0	    0x488bbb401600	          mov rdi, qword [rbx + 0x1640] 	      5763	option.c	FUNCTION_31	IF_1
0x400adf7	    0x488b05000000	            mov rax, qword [0x0400adfe] 	      5763	option.c	FUNCTION_31	IF_1
0x400adfe	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x400ae01	            0x740c	                            je 0x400ae0f	      5763	option.c	FUNCTION_31	IF_1
0x400ae03	      0xe800000000	                          call 0x400ae08	      5764	option.c	FUNCTION_31	CALL_1
0x400ae08	    0x488b05000000	            mov rax, qword [0x0400ae0f] 	      5764	option.c	FUNCTION_31	CALL_1
0x400ae0f	    0x488983401600	          mov qword [rbx + 0x1640], rax 	      5765	option.c	FUNCTION_31
0x400ae16	              0x5b	                                 pop rbx	     10524	option.c	FUNCTION_75
0x400ae17	              0xc3	                                     ret	     10524	option.c	FUNCTION_75
0x400ae18	     0xf1f84000000	                   nop dword [rax + rax]	     10524	option.c	FUNCTION_75
0x400ae20	    0x488bbb381700	          mov rdi, qword [rbx + 0x1738] 	      5763	option.c	FUNCTION_31	IF_1
0x400ae27	    0x488b05000000	            mov rax, qword [0x0400ae2e] 	      5763	option.c	FUNCTION_31	IF_1
0x400ae2e	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x400ae31	            0x740c	                            je 0x400ae3f	      5763	option.c	FUNCTION_31	IF_1
0x400ae33	      0xe800000000	                          call 0x400ae38	      5764	option.c	FUNCTION_31	CALL_1
0x400ae38	    0x488b05000000	            mov rax, qword [0x0400ae3f] 	      5764	option.c	FUNCTION_31	CALL_1
0x400ae3f	    0x488983381700	          mov qword [rbx + 0x1738], rax 	      5765	option.c	FUNCTION_31
0x400ae46	              0x5b	                                 pop rbx	     10524	option.c	FUNCTION_75
0x400ae47	              0xc3	                                     ret	     10524	option.c	FUNCTION_75
0x400ae48	     0xf1f84000000	                   nop dword [rax + rax]	     10524	option.c	FUNCTION_75
0x400ae50	      0x3d1b500000	                         cmp eax, 0x501b	     10439	option.c	FUNCTION_75	SWITCH_1
0x400ae55	     0xf8555fdffff	                           jne 0x400abb0	     10439	option.c	FUNCTION_75	SWITCH_1
0x400ae5b	    0x488bbb081600	          mov rdi, qword [rbx + 0x1608] 	      5763	option.c	FUNCTION_31	IF_1
0x400ae62	    0x488b05000000	            mov rax, qword [0x0400ae69] 	      5763	option.c	FUNCTION_31	IF_1
0x400ae69	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x400ae6c	            0x740c	                            je 0x400ae7a	      5763	option.c	FUNCTION_31	IF_1
0x400ae6e	      0xe800000000	                          call 0x400ae73	      5764	option.c	FUNCTION_31	CALL_1
0x400ae73	    0x488b05000000	            mov rax, qword [0x0400ae7a] 	      5764	option.c	FUNCTION_31	CALL_1
0x400ae7a	    0x488983081600	          mov qword [rbx + 0x1608], rax 	      5765	option.c	FUNCTION_31
0x400ae81	              0x5b	                                 pop rbx	     10524	option.c	FUNCTION_75
0x400ae82	              0xc3	                                     ret	     10524	option.c	FUNCTION_75
0x400ae83	       0xf1f440000	                   nop dword [rax + rax]	     10524	option.c	FUNCTION_75
0x400ae88	      0x3d21300000	                         cmp eax, 0x3021	     10439	option.c	FUNCTION_75	SWITCH_1
0x400ae8d	     0xf851dfdffff	                           jne 0x400abb0	     10439	option.c	FUNCTION_75	SWITCH_1
0x400ae93	    0x488bbb800200	           mov rdi, qword [rbx + 0x280] 	      5763	option.c	FUNCTION_31	IF_1
0x400ae9a	    0x488b05000000	            mov rax, qword [0x0400aea1] 	      5763	option.c	FUNCTION_31	IF_1
0x400aea1	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x400aea4	            0x740c	                            je 0x400aeb2	      5763	option.c	FUNCTION_31	IF_1
0x400aea6	      0xe800000000	                          call 0x400aeab	      5764	option.c	FUNCTION_31	CALL_1
0x400aeab	    0x488b05000000	            mov rax, qword [0x0400aeb2] 	      5764	option.c	FUNCTION_31	CALL_1
0x400aeb2	    0x488983800200	            mov qword [rbx + 0x280], rax	      5765	option.c	FUNCTION_31
0x400aeb9	              0x5b	                                 pop rbx	     10524	option.c	FUNCTION_75
0x400aeba	              0xc3	                                     ret	     10524	option.c	FUNCTION_75
0x400aebb	       0xf1f440000	                   nop dword [rax + rax]	     10524	option.c	FUNCTION_75
0x400aec0	    0x488bbb381600	          mov rdi, qword [rbx + 0x1638] 	      5763	option.c	FUNCTION_31	IF_1
0x400aec7	    0x488b05000000	            mov rax, qword [0x0400aece] 	      5763	option.c	FUNCTION_31	IF_1
0x400aece	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x400aed1	            0x740c	                            je 0x400aedf	      5763	option.c	FUNCTION_31	IF_1
0x400aed3	      0xe800000000	                          call 0x400aed8	      5764	option.c	FUNCTION_31	CALL_1
0x400aed8	    0x488b05000000	            mov rax, qword [0x0400aedf] 	      5764	option.c	FUNCTION_31	CALL_1
0x400aedf	    0x488983381600	          mov qword [rbx + 0x1638], rax 	      5765	option.c	FUNCTION_31
0x400aee6	              0x5b	                                 pop rbx	     10524	option.c	FUNCTION_75
0x400aee7	              0xc3	                                     ret	     10524	option.c	FUNCTION_75
0x400aee8	     0xf1f84000000	                   nop dword [rax + rax]	     10524	option.c	FUNCTION_75
0x400aef0	    0x488bbbf81400	          mov rdi, qword [rbx + 0x14f8] 	      5763	option.c	FUNCTION_31	IF_1
0x400aef7	    0x488b05000000	            mov rax, qword [0x0400aefe] 	      5763	option.c	FUNCTION_31	IF_1
0x400aefe	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x400af01	            0x740c	                            je 0x400af0f	      5763	option.c	FUNCTION_31	IF_1
0x400af03	      0xe800000000	                          call 0x400af08	      5764	option.c	FUNCTION_31	CALL_1
0x400af08	    0x488b05000000	            mov rax, qword [0x0400af0f] 	      5764	option.c	FUNCTION_31	CALL_1
0x400af0f	    0x488983f81400	          mov qword [rbx + 0x14f8], rax 	      5765	option.c	FUNCTION_31
0x400af16	              0x5b	                                 pop rbx	     10524	option.c	FUNCTION_75
0x400af17	              0xc3	                                     ret	     10524	option.c	FUNCTION_75
0x400af18	     0xf1f84000000	                   nop dword [rax + rax]	     10524	option.c	FUNCTION_75
0x400af20	    0xc78318160000	   mov dword [rbx + 0x1618], 0xffffffff 	     10452	option.c	FUNCTION_75	SWITCH_1
0x400af2a	              0x5b	                                 pop rbx	     10524	option.c	FUNCTION_75
0x400af2b	              0xc3	                                     ret	     10524	option.c	FUNCTION_75
0x400af2c	         0xf1f4000	                         nop dword [rax]	     10524	option.c	FUNCTION_75
0x400af30	    0x488bbb201600	          mov rdi, qword [rbx + 0x1620] 	      5763	option.c	FUNCTION_31	IF_1
0x400af37	    0x488b05000000	            mov rax, qword [0x0400af3e] 	      5763	option.c	FUNCTION_31	IF_1
0x400af3e	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x400af41	            0x740c	                            je 0x400af4f	      5763	option.c	FUNCTION_31	IF_1
0x400af43	      0xe800000000	                          call 0x400af48	      5764	option.c	FUNCTION_31	CALL_1
0x400af48	    0x488b05000000	            mov rax, qword [0x0400af4f] 	      5764	option.c	FUNCTION_31	CALL_1
0x400af4f	    0x488983201600	          mov qword [rbx + 0x1620], rax 	      5765	option.c	FUNCTION_31
0x400af56	              0x5b	                                 pop rbx	     10524	option.c	FUNCTION_75
0x400af57	              0xc3	                                     ret	     10524	option.c	FUNCTION_75
0x400af58	     0xf1f84000000	                   nop dword [rax + rax]	     10524	option.c	FUNCTION_75
0x400af60	    0x488bbb581600	          mov rdi, qword [rbx + 0x1658] 	      5763	option.c	FUNCTION_31	IF_1
0x400af67	    0x488b05000000	            mov rax, qword [0x0400af6e] 	      5763	option.c	FUNCTION_31	IF_1
0x400af6e	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x400af71	            0x740c	                            je 0x400af7f	      5763	option.c	FUNCTION_31	IF_1
0x400af73	      0xe800000000	                          call 0x400af78	      5764	option.c	FUNCTION_31	CALL_1
0x400af78	    0x488b05000000	            mov rax, qword [0x0400af7f] 	      5764	option.c	FUNCTION_31	CALL_1
0x400af7f	    0x488983581600	          mov qword [rbx + 0x1658], rax 	      5765	option.c	FUNCTION_31
0x400af86	              0x5b	                                 pop rbx	     10524	option.c	FUNCTION_75
0x400af87	              0xc3	                                     ret	     10524	option.c	FUNCTION_75
0x400af88	     0xf1f84000000	                   nop dword [rax + rax]	     10524	option.c	FUNCTION_75
0x400af90	    0x488bbbc81400	          mov rdi, qword [rbx + 0x14c8] 	      5763	option.c	FUNCTION_31	IF_1
0x400af97	    0x488b05000000	            mov rax, qword [0x0400af9e] 	      5763	option.c	FUNCTION_31	IF_1
0x400af9e	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x400afa1	            0x740c	                            je 0x400afaf	      5763	option.c	FUNCTION_31	IF_1
0x400afa3	      0xe800000000	                          call 0x400afa8	      5764	option.c	FUNCTION_31	CALL_1
0x400afa8	    0x488b05000000	            mov rax, qword [0x0400afaf] 	      5764	option.c	FUNCTION_31	CALL_1
0x400afaf	    0x488983c81400	          mov qword [rbx + 0x14c8], rax 	      5765	option.c	FUNCTION_31
0x400afb6	              0x5b	                                 pop rbx	     10524	option.c	FUNCTION_75
0x400afb7	              0xc3	                                     ret	     10524	option.c	FUNCTION_75
0x400afb8	     0xf1f84000000	                   nop dword [rax + rax]	     10524	option.c	FUNCTION_75
0x400afc0	    0x488bbbf01500	          mov rdi, qword [rbx + 0x15f0] 	      5763	option.c	FUNCTION_31	IF_1
0x400afc7	    0x488b05000000	            mov rax, qword [0x0400afce] 	      5763	option.c	FUNCTION_31	IF_1
0x400afce	          0x4839c7	                            cmp rdi, rax	      5763	option.c	FUNCTION_31	IF_1
0x400afd1	            0x740c	                            je 0x400afdf	      5763	option.c	FUNCTION_31	IF_1
0x400afd3	      0xe800000000	                          call 0x400afd8	      5764	option.c	FUNCTION_31	CALL_1
0x400afd8	    0x488b05000000	            mov rax, qword [0x0400afdf] 	      5764	option.c	FUNCTION_31	CALL_1
0x400afdf	    0x488983f01500	          mov qword [rbx + 0x15f0], rax 	      5765	option.c	FUNCTION_31
0x400afe6	              0x5b	                                 pop rbx	     10524	option.c	FUNCTION_75
0x400afe7	              0xc3	                                     ret	     10524	option.c	FUNCTION_75
comp_col	SWITCH,0:CALL,0:DO,0:WHILE,0:IF,6:functions,0:ELSE,0:FOR,0	58
0x4006580	    0x488b05000000	            mov rax, qword [0x04006587] 	     10391	option.c	FUNCTION_74
0x4006587	      0xba01000000	                              mov edx, 1	     10391	option.c	FUNCTION_74
0x400658c	        0x4883f802	                              cmp rax, 2	     10391	option.c	FUNCTION_74
0x4006590	            0x740c	                            je 0x400659e	     10391	option.c	FUNCTION_74
0x4006592	            0x31d2	                            xor edx, edx	     10391	option.c	FUNCTION_74
0x4006594	        0x4883f801	                              cmp rax, 1	     10391	option.c	FUNCTION_74
0x4006598	     0xf8492000000	                            je 0x4006630	     10391	option.c	FUNCTION_74
0x400659e	    0x8b0d00000000	            mov ecx, dword [0x040065a4] 	     10395	option.c	FUNCTION_74	IF_1
0x40065a4	            0x85c9	                           test ecx, ecx	     10395	option.c	FUNCTION_74	IF_1
0x40065a6	            0x7428	                            je 0x40065d0	     10395	option.c	FUNCTION_74	IF_1
0x40065a8	    0x8b0500000000	            mov eax, dword [0x040065ae] 	     10398	option.c	FUNCTION_74	IF_1
0x40065ae	            0x85c0	                           test eax, eax	     10398	option.c	FUNCTION_74	IF_1
0x40065b0	            0x7556	                           jne 0x4006608	     10398	option.c	FUNCTION_74	IF_1
0x40065b2	      0xbe12000000	                           mov esi, 0x12	     10398	option.c	FUNCTION_74	IF_1
0x40065b7	      0xb812000000	                           mov eax, 0x12	     10398	option.c	FUNCTION_74	IF_1
0x40065bc	            0x85d2	                           test edx, edx	     10403	option.c	FUNCTION_74	IF_1	IF_2
0x40065be	            0x7512	                           jne 0x40065d2	     10403	option.c	FUNCTION_74	IF_1	IF_2
0x40065c0	    0x8b1500000000	            mov edx, dword [0x040065c6] 	     10406	option.c	FUNCTION_74	IF_3
0x40065c6	            0x85d2	                           test edx, edx	     10406	option.c	FUNCTION_74	IF_3
0x40065c8	            0x747e	                            je 0x4006648	     10406	option.c	FUNCTION_74	IF_3
0x40065ca	          0x83c00a	                            add eax, 0xa	     10406	option.c	FUNCTION_74	IF_3
0x40065cd	            0xeb11	                           jmp 0x40065e0	     10406	option.c	FUNCTION_74	IF_3
0x40065cf	              0x90	                                     nop	     10406	option.c	FUNCTION_74	IF_3
0x40065d0	            0x31f6	                            xor esi, esi	     10406	option.c	FUNCTION_74	IF_3
0x40065d2	    0x833d00000000	               cmp dword [0x040065d9], 1	     10406	option.c	FUNCTION_74	IF_3
0x40065d9	            0x19c0	                            sbb eax, eax	     10406	option.c	FUNCTION_74	IF_3
0x40065db	            0xf7d0	                                 not eax	     10406	option.c	FUNCTION_74	IF_3
0x40065dd	          0x83e00b	                            and eax, 0xb	     10406	option.c	FUNCTION_74	IF_3
0x40065e0	    0x488b15000000	            mov rdx, qword [0x040065e7] 	     10412	option.c	FUNCTION_74
0x40065e7	            0x89d1	                            mov ecx, edx	     10412	option.c	FUNCTION_74
0x40065e9	            0x29c1	                            sub ecx, eax	     10412	option.c	FUNCTION_74
0x40065eb	            0x89d0	                            mov eax, edx	     10413	option.c	FUNCTION_74
0x40065ed	            0x29f0	                            sub eax, esi	     10413	option.c	FUNCTION_74
0x40065ef	            0x85c9	                           test ecx, ecx	     10414	option.c	FUNCTION_74	IF_5
0x40065f1	    0x890d00000000	            mov dword [0x040065f7], ecx 	     10412	option.c	FUNCTION_74
0x40065f7	    0x890500000000	            mov dword [0x040065fd], eax 	     10413	option.c	FUNCTION_74
0x40065fd	            0x7e21	                           jle 0x4006620	     10414	option.c	FUNCTION_74	IF_5
0x40065ff	            0x85c0	                           test eax, eax	     10416	option.c	FUNCTION_74	IF_6
0x4006601	            0x7e0d	                           jle 0x4006610	     10416	option.c	FUNCTION_74	IF_6
0x4006603	            0xf3c3	                                     ret	     10416	option.c	FUNCTION_74	IF_6
0x4006605	           0xf1f00	                         nop dword [rax]	     10416	option.c	FUNCTION_74	IF_6
0x4006608	          0x83c001	                              add eax, 1	     10398	option.c	FUNCTION_74	IF_1
0x400660b	            0x89c6	                            mov esi, eax	     10398	option.c	FUNCTION_74	IF_1
0x400660d	            0xebad	                           jmp 0x40065bc	     10398	option.c	FUNCTION_74	IF_1
0x400660f	              0x90	                                     nop	     10398	option.c	FUNCTION_74	IF_1
0x4006610	    0xc70500000000	               mov dword [0x0400661a], 1	     10417	option.c	FUNCTION_74	IF_6
0x400661a	              0xc3	                                     ret	     10422	option.c	FUNCTION_74
0x400661b	       0xf1f440000	                   nop dword [rax + rax]	     10422	option.c	FUNCTION_74
0x4006620	    0xc70500000000	               mov dword [0x0400662a], 1	     10415	option.c	FUNCTION_74	IF_5
0x400662a	            0xebd3	                           jmp 0x40065ff	     10415	option.c	FUNCTION_74	IF_5
0x400662c	         0xf1f4000	                         nop dword [rax]	     10415	option.c	FUNCTION_74	IF_5
0x4006630	            0x31d2	                            xor edx, edx	     10391	option.c	FUNCTION_74
0x4006632	    0x488b05000000	            mov rax, qword [0x04006639] 	     10391	option.c	FUNCTION_74
0x4006639	    0x483905000000	            cmp qword [0x04006640], rax 	     10391	option.c	FUNCTION_74
0x4006640	           0xf95c2	                                setne dl	     10391	option.c	FUNCTION_74
0x4006643	      0xe956ffffff	                           jmp 0x400659e	     10391	option.c	FUNCTION_74
0x4006648	            0x89f0	                            mov eax, esi	     10391	option.c	FUNCTION_74
0x400664a	            0xeb94	                           jmp 0x40065e0	     10391	option.c	FUNCTION_74
check_clipboard_option	SWITCH,0:CALL,12:DO,0:WHILE,0:IF,11:functions,0:ELSE,8:FOR,1	154
0x4000810	            0x4157	                                push r15	      7948	option.c	FUNCTION_45
0x4000812	            0x4156	                                push r14	      7948	option.c	FUNCTION_45
0x4000814	          0x4531f6	                          xor r14d, r14d	      7952	option.c	FUNCTION_45
0x4000817	            0x4155	                                push r13	      7948	option.c	FUNCTION_45
0x4000819	            0x4154	                                push r12	      7948	option.c	FUNCTION_45
0x400081b	          0x4531ed	                          xor r13d, r13d	      7951	option.c	FUNCTION_45
0x400081e	              0x55	                                push rbp	      7948	option.c	FUNCTION_45
0x400081f	              0x53	                                push rbx	      7948	option.c	FUNCTION_45
0x4000820	            0x31ed	                            xor ebp, ebp	      7953	option.c	FUNCTION_45
0x4000822	          0x4531e4	                          xor r12d, r12d	      7950	option.c	FUNCTION_45
0x4000825	            0x31db	                            xor ebx, ebx	      7949	option.c	FUNCTION_45
0x4000827	        0x4883ec08	                              sub rsp, 8	      7948	option.c	FUNCTION_45
0x400082b	    0x488b05000000	            mov rax, qword [0x04000832] 	      7958	option.c	FUNCTION_45	FOR_1
0x4000832	           0xfb610	                   movzx edx, byte [rax]	      7958	option.c	FUNCTION_45	FOR_1
0x4000835	           0xf1f00	                         nop dword [rax]	      7958	option.c	FUNCTION_45	FOR_1
0x4000838	            0x84d2	                             test dl, dl	      7958	option.c	FUNCTION_45	FOR_1
0x400083a	     0xf8406010000	                            je 0x4000946	      7958	option.c	FUNCTION_45	FOR_1
0x4000840	      0xbf00000000	                              mov edi, 0	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x4000845	      0xb907000000	                              mov ecx, 7	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x400084a	          0x4889c6	                            mov rsi, rax	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x400084d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x400084f	            0x7515	                           jne 0x4000866	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x4000851	         0xfb65007	               movzx edx, byte [rax + 7]	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x4000855	          0x80fa2c	                            cmp dl, 0x2c	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x4000858	     0xf8442010000	                            je 0x40009a0	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x400085e	            0x84d2	                             test dl, dl	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x4000860	     0xf843a010000	                            je 0x40009a0	      7960	option.c	FUNCTION_45	FOR_1	IF_1	CALL_1
0x4000866	      0xbf00000000	                              mov edi, 0	      7965	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2	CALL_2
0x400086b	      0xb90b000000	                            mov ecx, 0xb	      7965	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2	CALL_2
0x4000870	          0x4889c6	                            mov rsi, rax	      7965	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2	CALL_2
0x4000873	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7965	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2	CALL_2
0x4000875	            0x7515	                           jne 0x400088c	      7965	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2	CALL_2
0x4000877	         0xfb6500b	            movzx edx, byte [rax + 0xb] 	      7966	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2
0x400087b	          0x80fa2c	                            cmp dl, 0x2c	      7966	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2
0x400087e	     0xf842c010000	                            je 0x40009b0	      7966	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2
0x4000884	            0x84d2	                             test dl, dl	      7966	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2
0x4000886	     0xf8424010000	                            je 0x40009b0	      7966	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2
0x400088c	      0xbf00000000	                              mov edi, 0	      7971	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3	CALL_3
0x4000891	      0xb90a000000	                            mov ecx, 0xa	      7971	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3	CALL_3
0x4000896	          0x4889c6	                            mov rsi, rax	      7971	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3	CALL_3
0x4000899	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7971	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3	CALL_3
0x400089b	            0x7515	                           jne 0x40008b2	      7971	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3	CALL_3
0x400089d	         0xfb6500a	            movzx edx, byte [rax + 0xa] 	      7972	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3
0x40008a1	          0x80fa2c	                            cmp dl, 0x2c	      7972	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3
0x40008a4	     0xf8416010000	                            je 0x40009c0	      7972	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3
0x40008aa	            0x84d2	                             test dl, dl	      7972	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3
0x40008ac	     0xf840e010000	                            je 0x40009c0	      7972	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3
0x40008b2	      0xbf00000000	                              mov edi, 0	      7977	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4	CALL_4
0x40008b7	      0xb90e000000	                            mov ecx, 0xe	      7977	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4	CALL_4
0x40008bc	          0x4889c6	                            mov rsi, rax	      7977	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4	CALL_4
0x40008bf	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7977	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4	CALL_4
0x40008c1	            0x7515	                           jne 0x40008d8	      7977	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4	CALL_4
0x40008c3	         0xfb6500e	            movzx edx, byte [rax + 0xe] 	      7978	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4
0x40008c7	          0x80fa2c	                            cmp dl, 0x2c	      7978	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4
0x40008ca	     0xf8400010000	                            je 0x40009d0	      7978	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4
0x40008d0	            0x84d2	                             test dl, dl	      7978	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4
0x40008d2	     0xf84f8000000	                            je 0x40009d0	      7978	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4
0x40008d8	      0xbf00000000	                              mov edi, 0	      7983	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5	CALL_5
0x40008dd	      0xb90c000000	                            mov ecx, 0xc	      7983	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5	CALL_5
0x40008e2	          0x4889c6	                            mov rsi, rax	      7983	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5	CALL_5
0x40008e5	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7983	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5	CALL_5
0x40008e7	            0x7515	                           jne 0x40008fe	      7983	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5	CALL_5
0x40008e9	         0xfb6500c	            movzx edx, byte [rax + 0xc] 	      7984	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5
0x40008ed	          0x80fa2c	                            cmp dl, 0x2c	      7984	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5
0x40008f0	     0xf84ea000000	                            je 0x40009e0	      7984	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5
0x40008f6	            0x84d2	                             test dl, dl	      7984	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5
0x40008f8	     0xf84e2000000	                            je 0x40009e0	      7984	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5
0x40008fe	      0xbf00000000	                              mov edi, 0	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x4000903	      0xb904000000	                              mov ecx, 4	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x4000908	          0x4889c6	                            mov rsi, rax	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x400090b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x400090d	     0xf85dd000000	                           jne 0x40009f0	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x4000913	         0xfb65004	               movzx edx, byte [rax + 4]	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x4000917	          0x80fa2c	                            cmp dl, 0x2c	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x400091a	            0x7408	                            je 0x4000924	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x400091c	            0x84d2	                             test dl, dl	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x400091e	     0xf85cc000000	                           jne 0x40009f0	      7989	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6	CALL_6
0x4000924	        0x4883c004	                              add rax, 4	      7992	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6
0x4000928	      0xbd01000000	                              mov ebp, 1	      7991	option.c	FUNCTION_45	FOR_1	ELSE_5	IF_6
0x400092d	          0x80fa2c	                            cmp dl, 0x2c	      8007	option.c	FUNCTION_45	FOR_1	IF_9
0x4000930	     0xf8502ffffff	                           jne 0x4000838	      8007	option.c	FUNCTION_45	FOR_1	IF_9
0x4000936	         0xfb65001	               movzx edx, byte [rax + 1]	      8007	option.c	FUNCTION_45	FOR_1	IF_9
0x400093a	        0x4883c001	                              add rax, 1	      8008	option.c	FUNCTION_45	FOR_1	IF_9
0x400093e	            0x84d2	                             test dl, dl	      7958	option.c	FUNCTION_45	FOR_1
0x4000940	     0xf85fafeffff	                           jne 0x4000840	      7958	option.c	FUNCTION_45	FOR_1
0x4000946	          0x4531ff	                          xor r15d, r15d	      7954	option.c	FUNCTION_45
0x4000949	    0x488b3d000000	            mov rdi, qword [0x04000950] 	      8017	option.c	FUNCTION_45	IF_10	CALL_9
0x4000950	    0x891d00000000	            mov dword [0x04000956], ebx 	      8012	option.c	FUNCTION_45	IF_10
0x4000956	    0x448925000000	           mov dword [0x0400095d], r12d 	      8013	option.c	FUNCTION_45	IF_10
0x400095d	    0x44892d000000	           mov dword [0x04000964], r13d 	      8014	option.c	FUNCTION_45	IF_10
0x4000964	    0x448935000000	           mov dword [0x0400096b], r14d 	      8015	option.c	FUNCTION_45	IF_10
0x400096b	    0x892d00000000	            mov dword [0x04000971], ebp 	      8016	option.c	FUNCTION_45	IF_10
0x4000971	      0xe800000000	                          call 0x4000976	      8017	option.c	FUNCTION_45	IF_10	CALL_9
0x4000976	    0x8b0500000000	            mov eax, dword [0x0400097c] 	      8020	option.c	FUNCTION_45	IF_10	IF_11
0x400097c	    0x4c893d000000	            mov qword [0x04000983], r15 	      8018	option.c	FUNCTION_45	IF_10
0x4000983	            0x85c0	                           test eax, eax	      8020	option.c	FUNCTION_45	IF_10	IF_11
0x4000985	     0xf85ac000000	                           jne 0x4000a37	      8020	option.c	FUNCTION_45	IF_10	IF_11
0x400098b	            0x31c0	                            xor eax, eax	      8020	option.c	FUNCTION_45	IF_10	IF_11
0x400098d	        0x4883c408	                              add rsp, 8	      8031	option.c	FUNCTION_45
0x4000991	              0x5b	                                 pop rbx	      8031	option.c	FUNCTION_45
0x4000992	              0x5d	                                 pop rbp	      8031	option.c	FUNCTION_45
0x4000993	            0x415c	                                 pop r12	      8031	option.c	FUNCTION_45
0x4000995	            0x415d	                                 pop r13	      8031	option.c	FUNCTION_45
0x4000997	            0x415e	                                 pop r14	      8031	option.c	FUNCTION_45
0x4000999	            0x415f	                                 pop r15	      8031	option.c	FUNCTION_45
0x400099b	              0xc3	                                     ret	      8031	option.c	FUNCTION_45
0x400099c	         0xf1f4000	                         nop dword [rax]	      8031	option.c	FUNCTION_45
0x40009a0	          0x83cb01	                               or ebx, 1	      7962	option.c	FUNCTION_45	FOR_1	IF_1
0x40009a3	        0x4883c007	                              add rax, 7	      7963	option.c	FUNCTION_45	FOR_1	IF_1
0x40009a7	            0xeb84	                           jmp 0x400092d	      7963	option.c	FUNCTION_45	FOR_1	IF_1
0x40009a9	     0xf1f80000000	                         nop dword [rax]	      7963	option.c	FUNCTION_45	FOR_1	IF_1
0x40009b0	          0x83cb02	                               or ebx, 2	      7968	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2
0x40009b3	        0x4883c00b	                            add rax, 0xb	      7969	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2
0x40009b7	      0xe971ffffff	                           jmp 0x400092d	      7969	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2
0x40009bc	         0xf1f4000	                         nop dword [rax]	      7969	option.c	FUNCTION_45	FOR_1	ELSE_1	IF_2
0x40009c0	        0x4883c00a	                            add rax, 0xa	      7975	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3
0x40009c4	    0x41bc01000000	                             mov r12d, 1	      7974	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3
0x40009ca	      0xe95effffff	                           jmp 0x400092d	      7975	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3
0x40009cf	              0x90	                                     nop	      7975	option.c	FUNCTION_45	FOR_1	ELSE_2	IF_3
0x40009d0	        0x4883c00e	                            add rax, 0xe	      7981	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4
0x40009d4	    0x41bd01000000	                             mov r13d, 1	      7980	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4
0x40009da	      0xe94effffff	                           jmp 0x400092d	      7981	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4
0x40009df	              0x90	                                     nop	      7981	option.c	FUNCTION_45	FOR_1	ELSE_3	IF_4
0x40009e0	        0x4883c00c	                            add rax, 0xc	      7987	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5
0x40009e4	    0x41be01000000	                             mov r14d, 1	      7986	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5
0x40009ea	      0xe93effffff	                           jmp 0x400092d	      7987	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5
0x40009ef	              0x90	                                     nop	      7987	option.c	FUNCTION_45	FOR_1	ELSE_4	IF_5
0x40009f0	      0xbf00000000	                              mov edi, 0	      7994	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	CALL_7
0x40009f5	      0xb908000000	                              mov ecx, 8	      7994	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	CALL_7
0x40009fa	          0x4889c6	                            mov rsi, rax	      7994	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	CALL_7
0x40009fd	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      7994	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	CALL_7
0x40009ff	            0x741b	                            je 0x4000a1c	      7994	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	CALL_7
0x4000a01	            0x31ff	                            xor edi, edi	      8028	option.c	FUNCTION_45	CALL_12
0x4000a03	      0xe800000000	                          call 0x4000a08	      8028	option.c	FUNCTION_45	CALL_12
0x4000a08	        0x4883c408	                              add rsp, 8	      8031	option.c	FUNCTION_45
0x4000a0c	      0xb800000000	                              mov eax, 0	      8028	option.c	FUNCTION_45	CALL_12
0x4000a11	              0x5b	                                 pop rbx	      8031	option.c	FUNCTION_45
0x4000a12	              0x5d	                                 pop rbp	      8031	option.c	FUNCTION_45
0x4000a13	            0x415c	                                 pop r12	      8031	option.c	FUNCTION_45
0x4000a15	            0x415d	                                 pop r13	      8031	option.c	FUNCTION_45
0x4000a17	            0x415e	                                 pop r14	      8031	option.c	FUNCTION_45
0x4000a19	            0x415f	                                 pop r15	      8031	option.c	FUNCTION_45
0x4000a1b	              0xc3	                                     ret	      8031	option.c	FUNCTION_45
0x4000a1c	        0x488d7808	                      lea rdi, [rax + 8]	      7997	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	CALL_8
0x4000a20	      0xbe01000000	                              mov esi, 1	      7997	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	CALL_8
0x4000a25	      0xe800000000	                          call 0x4000a2a	      7997	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	CALL_8
0x4000a2a	          0x4885c0	                           test rax, rax	      7998	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	IF_8
0x4000a2d	          0x4989c7	                            mov r15, rax	      7997	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	CALL_8
0x4000a30	            0x74cf	                            je 0x4000a01	      7998	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	IF_8
0x4000a32	      0xe912ffffff	                           jmp 0x4000949	      7998	option.c	FUNCTION_45	FOR_1	ELSE_6	IF_7	IF_8
0x4000a37	      0xe800000000	                          call 0x4000a3c	      8022	option.c	FUNCTION_45	IF_10	IF_11	CALL_10
0x4000a3c	      0xe800000000	                          call 0x4000a41	      8023	option.c	FUNCTION_45	IF_10	IF_11	CALL_11
0x4000a41	            0x31c0	                            xor eax, eax	      8023	option.c	FUNCTION_45	IF_10	IF_11	CALL_11
0x4000a43	      0xe945ffffff	                           jmp 0x400098d	      8023	option.c	FUNCTION_45	IF_10	IF_11	CALL_11
set_bool_option	SWITCH,0:CALL,87:DO,0:WHILE,0:IF,88:functions,1:ELSE,45:FOR,0	971
0x400d940	            0x4157	                                push r15	      8130	option.c	FUNCTION_49
0x400d942	            0x4156	                                push r14	      8130	option.c	FUNCTION_49
0x400d944	            0x4155	                                push r13	      8130	option.c	FUNCTION_49
0x400d946	            0x4154	                                push r12	      8130	option.c	FUNCTION_49
0x400d948	          0x4189d5	                           mov r13d, edx	      8130	option.c	FUNCTION_49
0x400d94b	              0x55	                                push rbp	      8130	option.c	FUNCTION_49
0x400d94c	              0x53	                                push rbx	      8130	option.c	FUNCTION_49
0x400d94d	          0x4863ef	                         movsxd rbp, edi	      8130	option.c	FUNCTION_49
0x400d950	          0x4889f3	                            mov rbx, rsi	      8130	option.c	FUNCTION_49
0x400d953	          0x4189cc	                           mov r12d, ecx	      8130	option.c	FUNCTION_49
0x400d956	        0x4883ec68	                           sub rsp, 0x68	      8130	option.c	FUNCTION_49
0x400d95a	    0x448b15000000	           mov r10d, dword [0x0400d961] 	      8134	option.c	FUNCTION_49	IF_1
0x400d961	    0x64488b042528	                mov rax, qword fs:[0x28]	      8130	option.c	FUNCTION_49
0x400d96a	      0x4889442458	             mov qword [rsp + 0x58], rax	      8130	option.c	FUNCTION_49
0x400d96f	            0x31c0	                            xor eax, eax	      8130	option.c	FUNCTION_49
0x400d971	          0x4585d2	                         test r10d, r10d	      8134	option.c	FUNCTION_49	IF_1
0x400d974	     0xf85f6010000	                           jne 0x400db70	      8134	option.c	FUNCTION_49	IF_1
0x400d97a	    0x448b0d000000	            mov r9d, dword [0x0400d981] 	      8136	option.c	FUNCTION_49	IF_1
0x400d981	          0x4585c9	                           test r9d, r9d	      8136	option.c	FUNCTION_49	IF_1
0x400d984	     0xf85e6010000	                           jne 0x400db70	      8136	option.c	FUNCTION_49	IF_1
0x400d98a	          0x448b33	                   mov r14d, dword [rbx]	      8131	option.c	FUNCTION_49
0x400d98d	          0x44892b	                   mov dword [rbx], r13d	      8141	option.c	FUNCTION_49
0x400d990	          0x4489e6	                           mov esi, r12d	      8144	option.c	FUNCTION_49	CALL_1
0x400d993	    0x8b1500000000	            mov edx, dword [0x0400d999] 	      8144	option.c	FUNCTION_49	CALL_1
0x400d999	            0x89ef	                            mov edi, ebp	      8144	option.c	FUNCTION_49	CALL_1
0x400d99b	      0xe8b026ffff	        call sym.set_option_scriptID_idx	      8144	option.c	FUNCTION_49	CALL_1
0x400d9a0	        0x41f6c406	                            test r12b, 6	      8152	option.c	FUNCTION_49	IF_2
0x400d9a4	    0xc70500000000	               mov dword [0x0400d9ae], 1	      8148	option.c	FUNCTION_49
0x400d9ae	     0xf846c040000	                            je 0x400de20	      8152	option.c	FUNCTION_49	IF_2
0x400d9b4	    0x4881fb000000	                              cmp rbx, 0	      8160	option.c	FUNCTION_49	IF_3
0x400d9bb	     0xf848f080000	                            je 0x400e250	      8160	option.c	FUNCTION_49	IF_3
0x400d9c1	    0x4881fb000000	                              cmp rbx, 0	      8166	option.c	FUNCTION_49	IF_4
0x400d9c8	     0xf846c0a0000	                            je 0x400e43a	      8166	option.c	FUNCTION_49	IF_4
0x400d9ce	    0x4881fb000000	                              cmp rbx, 0	      8169	option.c	FUNCTION_49	ELSE_1	IF_5
0x400d9d5	     0xf843a0a0000	                            je 0x400e415	      8169	option.c	FUNCTION_49	ELSE_1	IF_5
0x400d9db	    0x4c8b3d000000	            mov r15, qword [0x0400d9e2] 	      8176	option.c	FUNCTION_49	ELSE_2	IF_6
0x400d9e2	    0x498d87501600	                 lea rax, [r15 + 0x1650]	      8176	option.c	FUNCTION_49	ELSE_2	IF_6
0x400d9e9	          0x4839c3	                            cmp rbx, rax	      8176	option.c	FUNCTION_49	ELSE_2	IF_6
0x400d9ec	     0xf8479080000	                            je 0x400e26b	      8176	option.c	FUNCTION_49	ELSE_2	IF_6
0x400d9f2	    0x4881fb000000	                              cmp rbx, 0	      8176	option.c	FUNCTION_49	ELSE_2	IF_6
0x400d9f9	     0xf846c080000	                            je 0x400e26b	      8176	option.c	FUNCTION_49	ELSE_2	IF_6
0x400d9ff	    0x498d87601500	                 lea rax, [r15 + 0x1560]	      8205	option.c	FUNCTION_49	ELSE_3	IF_8
0x400da06	          0x4839c3	                            cmp rbx, rax	      8205	option.c	FUNCTION_49	ELSE_3	IF_8
0x400da09	     0xf84dc060000	                            je 0x400e0eb	      8205	option.c	FUNCTION_49	ELSE_3	IF_8
0x400da0f	    0x4881fb000000	                              cmp rbx, 0	      8221	option.c	FUNCTION_49	ELSE_4	IF_11
0x400da16	     0xf84450a0000	                            je 0x400e461	      8221	option.c	FUNCTION_49	ELSE_4	IF_11
0x400da1c	    0x498d87401500	                 lea rax, [r15 + 0x1540]	      8229	option.c	FUNCTION_49	ELSE_5	IF_13
0x400da23	          0x4839c3	                            cmp rbx, rax	      8229	option.c	FUNCTION_49	ELSE_5	IF_13
0x400da26	     0xf84e4050000	                            je 0x400e010	      8229	option.c	FUNCTION_49	ELSE_5	IF_13
0x400da2c	    0x498d87701400	                 lea rax, [r15 + 0x1470]	      8246	option.c	FUNCTION_49	ELSE_6	IF_15
0x400da33	          0x4839c3	                            cmp rbx, rax	      8246	option.c	FUNCTION_49	ELSE_6	IF_15
0x400da36	     0xf84d4060000	                            je 0x400e110	      8246	option.c	FUNCTION_49	ELSE_6	IF_15
0x400da3c	    0x498d87741400	                 lea rax, [r15 + 0x1474]	      8251	option.c	FUNCTION_49	ELSE_7	IF_16
0x400da43	          0x4839c3	                            cmp rbx, rax	      8251	option.c	FUNCTION_49	ELSE_7	IF_16
0x400da46	     0xf84c4060000	                            je 0x400e110	      8251	option.c	FUNCTION_49	ELSE_7	IF_16
0x400da4c	    0x498d870c1400	                 lea rax, [r15 + 0x140c]	      8257	option.c	FUNCTION_49	ELSE_8	IF_17
0x400da53	          0x4839c3	                            cmp rbx, rax	      8257	option.c	FUNCTION_49	ELSE_8	IF_17
0x400da56	     0xf84b4060000	                            je 0x400e110	      8257	option.c	FUNCTION_49	ELSE_8	IF_17
0x400da5c	    0x498d87081400	                 lea rax, [r15 + 0x1408]	      8265	option.c	FUNCTION_49	ELSE_9	IF_18
0x400da63	          0x4839c3	                            cmp rbx, rax	      8265	option.c	FUNCTION_49	ELSE_9	IF_18
0x400da66	     0xf84430e0000	                            je 0x400e8af	      8265	option.c	FUNCTION_49	ELSE_9	IF_18
0x400da6c	    0x498d87241400	                 lea rax, [r15 + 0x1424]	      8274	option.c	FUNCTION_49	ELSE_10	IF_19
0x400da73	          0x4839c3	                            cmp rbx, rax	      8274	option.c	FUNCTION_49	ELSE_10	IF_19
0x400da76	     0xf8464040000	                            je 0x400dee0	      8274	option.c	FUNCTION_49	ELSE_10	IF_19
0x400da7c	    0x498d87901500	                 lea rax, [r15 + 0x1590]	      8281	option.c	FUNCTION_49	ELSE_11	IF_20
0x400da83	          0x4839c3	                            cmp rbx, rax	      8281	option.c	FUNCTION_49	ELSE_11	IF_20
0x400da86	     0xf84080b0000	                            je 0x400e594	      8281	option.c	FUNCTION_49	ELSE_11	IF_20
0x400da8c	    0x4881fb000000	                              cmp rbx, 0	      8292	option.c	FUNCTION_49	ELSE_13	IF_22
0x400da93	     0xf84350f0000	                            je 0x400e9ce	      8292	option.c	FUNCTION_49	ELSE_13	IF_22
0x400da99	    0x4881fb000000	                              cmp rbx, 0	      8311	option.c	FUNCTION_49	ELSE_15	IF_25
0x400daa0	     0xf84390e0000	                            je 0x400e8df	      8311	option.c	FUNCTION_49	ELSE_15	IF_25
0x400daa6	    0x4881fb000000	                              cmp rbx, 0	      8317	option.c	FUNCTION_49	ELSE_16	IF_26
0x400daad	     0xf844d0b0000	                            je 0x400e600	      8317	option.c	FUNCTION_49	ELSE_16	IF_26
0x400dab3	    0x4881fb000000	                              cmp rbx, 0	      8337	option.c	FUNCTION_49	ELSE_18	IF_31
0x400daba	     0xf84b0060000	                            je 0x400e170	      8337	option.c	FUNCTION_49	ELSE_18	IF_31
0x400dac0	    0x4881fb000000	                              cmp rbx, 0	      8344	option.c	FUNCTION_49	ELSE_19	IF_32
0x400dac7	     0xf84f90d0000	                            je 0x400e8c6	      8344	option.c	FUNCTION_49	ELSE_19	IF_32
0x400dacd	    0x488b3d000000	            mov rdi, qword [0x0400dad4] 	      8352	option.c	FUNCTION_49	ELSE_20	IF_33
0x400dad4	    0x488d87880200	                  lea rax, [rdi + 0x288]	      8352	option.c	FUNCTION_49	ELSE_20	IF_33
0x400dadb	          0x4839c3	                            cmp rbx, rax	      8352	option.c	FUNCTION_49	ELSE_20	IF_33
0x400dade	     0xf84e80a0000	                            je 0x400e5cc	      8352	option.c	FUNCTION_49	ELSE_20	IF_33
0x400dae4	    0x488d87500200	                  lea rax, [rdi + 0x250]	      8363	option.c	FUNCTION_49	ELSE_21	IF_35
0x400daeb	          0x4839c3	                            cmp rbx, rax	      8363	option.c	FUNCTION_49	ELSE_21	IF_35
0x400daee	     0xf859c000000	                           jne 0x400db90	      8363	option.c	FUNCTION_49	ELSE_21	IF_35
0x400daf4	    0x448b87500200	           mov r8d, dword [rdi + 0x250] 	      8365	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36
0x400dafb	          0x4585c0	                           test r8d, r8d	      8365	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36
0x400dafe	     0xf84a4010000	                            je 0x400dca8	      8365	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36
0x400db04	    0x488b05000000	            mov rax, qword [0x0400db0b] 	      8369	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	CALL_28
0x400db0b	          0x4885c0	                           test rax, rax	      8369	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	CALL_28
0x400db0e	            0x7515	                           jne 0x400db25	      8369	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	CALL_28
0x400db10	      0xe993010000	                           jmp 0x400dca8	      8369	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	CALL_28
0x400db15	           0xf1f00	                         nop dword [rax]	      8369	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	CALL_28
0x400db18	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8369	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	CALL_28
0x400db1c	          0x4885c0	                           test rax, rax	      8369	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	CALL_28
0x400db1f	     0xf8483010000	                            je 0x400dca8	      8369	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	CALL_28
0x400db25	    0x8bb050020000	           mov esi, dword [rax + 0x250] 	      8370	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	IF_37
0x400db2b	            0x85f6	                           test esi, esi	      8370	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	IF_37
0x400db2d	            0x74e9	                            je 0x400db18	      8370	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	IF_37
0x400db2f	          0x4839c7	                            cmp rdi, rax	      8370	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	IF_37
0x400db32	            0x74e4	                            je 0x400db18	      8370	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	IF_37
0x400db34	    0xc78750020000	              mov dword [rdi + 0x250], 0	      8372	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	IF_37
0x400db3e	      0xb800000000	                              mov eax, 0	      8373	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	IF_37	CALL_29
0x400db43	       0xf1f440000	                   nop dword [rax + rax]	      8373	option.c	FUNCTION_49	ELSE_21	IF_35	IF_36	IF_37	CALL_29
0x400db48	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	      8749	option.c	FUNCTION_49
0x400db4d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      8749	option.c	FUNCTION_49
0x400db56	     0xf85a8110000	                           jne 0x400ed04	      8749	option.c	FUNCTION_49
0x400db5c	        0x4883c468	                           add rsp, 0x68	      8749	option.c	FUNCTION_49
0x400db60	              0x5b	                                 pop rbx	      8749	option.c	FUNCTION_49
0x400db61	              0x5d	                                 pop rbp	      8749	option.c	FUNCTION_49
0x400db62	            0x415c	                                 pop r12	      8749	option.c	FUNCTION_49
0x400db64	            0x415d	                                 pop r13	      8749	option.c	FUNCTION_49
0x400db66	            0x415e	                                 pop r14	      8749	option.c	FUNCTION_49
0x400db68	            0x415f	                                 pop r15	      8749	option.c	FUNCTION_49
0x400db6a	              0xc3	                                     ret	      8749	option.c	FUNCTION_49
0x400db6b	       0xf1f440000	                   nop dword [rax + rax]	      8749	option.c	FUNCTION_49
0x400db70	          0x4863d5	                         movsxd rdx, ebp	      8138	option.c	FUNCTION_49	IF_1
0x400db73	      0xb800000000	                              mov eax, 0	      8139	option.c	FUNCTION_49	IF_1
0x400db78	        0x48c1e206	                              shl rdx, 6	      8138	option.c	FUNCTION_49	IF_1
0x400db7c	    0xf68200000000	                      test byte [rdx], 8	      8138	option.c	FUNCTION_49	IF_1
0x400db83	     0xf8401feffff	                            je 0x400d98a	      8138	option.c	FUNCTION_49	IF_1
0x400db89	            0xebbd	                           jmp 0x400db48	      8138	option.c	FUNCTION_49	IF_1
0x400db8b	       0xf1f440000	                   nop dword [rax + rax]	      8138	option.c	FUNCTION_49	IF_1
0x400db90	    0x498d87b01500	                 lea rax, [r15 + 0x15b0]	      8380	option.c	FUNCTION_49	ELSE_22	IF_38
0x400db97	          0x4839c3	                            cmp rbx, rax	      8380	option.c	FUNCTION_49	ELSE_22	IF_38
0x400db9a	     0xf846e090000	                            je 0x400e50e	      8380	option.c	FUNCTION_49	ELSE_22	IF_38
0x400dba0	    0x4881fb000000	                              cmp rbx, 0	      8386	option.c	FUNCTION_49	ELSE_23	IF_39
0x400dba7	     0xf84d6070000	                            je 0x400e383	      8386	option.c	FUNCTION_49	ELSE_23	IF_39
0x400dbad	    0x498d87201500	                 lea rax, [r15 + 0x1520]	      8396	option.c	FUNCTION_49	ELSE_24	IF_40
0x400dbb4	          0x4839c3	                            cmp rbx, rax	      8396	option.c	FUNCTION_49	ELSE_24	IF_40
0x400dbb7	     0xf84bb090000	                            je 0x400e578	      8396	option.c	FUNCTION_49	ELSE_24	IF_40
0x400dbbd	    0x4881fb000000	                              cmp rbx, 0	      8404	option.c	FUNCTION_49	ELSE_25	IF_41
0x400dbc4	     0xf84be0a0000	                            je 0x400e688	      8404	option.c	FUNCTION_49	ELSE_25	IF_41
0x400dbca	    0x4881fb000000	                              cmp rbx, 0	      8409	option.c	FUNCTION_49	ELSE_26	IF_42
0x400dbd1	     0xf84fb0a0000	                            je 0x400e6d2	      8409	option.c	FUNCTION_49	ELSE_26	IF_42
0x400dbd7	    0x498d87c80000	                   lea rax, [r15 + 0xc8]	      8415	option.c	FUNCTION_49	ELSE_27	IF_43
0x400dbde	          0x4839c3	                            cmp rbx, rax	      8415	option.c	FUNCTION_49	ELSE_27	IF_43
0x400dbe1	     0xf84dc070000	                            je 0x400e3c3	      8415	option.c	FUNCTION_49	ELSE_27	IF_43
0x400dbe7	    0x488d87940200	                  lea rax, [rdi + 0x294]	      8451	option.c	FUNCTION_49	ELSE_30	IF_47
0x400dbee	          0x4839c3	                            cmp rbx, rax	      8451	option.c	FUNCTION_49	ELSE_30	IF_47
0x400dbf1	     0xf84fb070000	                            je 0x400e3f2	      8451	option.c	FUNCTION_49	ELSE_30	IF_47
0x400dbf7	    0x4881fb000000	                              cmp rbx, 0	      8457	option.c	FUNCTION_49	ELSE_31	IF_49
0x400dbfe	     0xf8484080000	                            je 0x400e488	      8457	option.c	FUNCTION_49	ELSE_31	IF_49
0x400dc04	    0x4881fb000000	                              cmp rbx, 0	      8463	option.c	FUNCTION_49	ELSE_32	IF_51
0x400dc0b	     0xf8426090000	                            je 0x400e537	      8463	option.c	FUNCTION_49	ELSE_32	IF_51
0x400dc11	    0x4881fb000000	                              cmp rbx, 0	      8477	option.c	FUNCTION_49	ELSE_34	IF_54
0x400dc18	     0xf841f0a0000	                            je 0x400e63d	      8477	option.c	FUNCTION_49	ELSE_34	IF_54
0x400dc1e	    0x4881fb000000	                              cmp rbx, 0	      8489	option.c	FUNCTION_49	ELSE_36	IF_58
0x400dc25	     0xf8406060000	                            je 0x400e231	      8489	option.c	FUNCTION_49	ELSE_36	IF_58
0x400dc2b	    0x4881fb000000	                              cmp rbx, 0	      8496	option.c	FUNCTION_49	ELSE_37	IF_59
0x400dc32	     0xf84e40a0000	                            je 0x400e71c	      8496	option.c	FUNCTION_49	ELSE_37	IF_59
0x400dc38	    0x488d87c00100	                  lea rax, [rdi + 0x1c0]	      8505	option.c	FUNCTION_49	ELSE_38	IF_60
0x400dc3f	          0x4839c3	                            cmp rbx, rax	      8505	option.c	FUNCTION_49	ELSE_38	IF_60
0x400dc42	     0xf84080e0000	                            je 0x400ea50	      8505	option.c	FUNCTION_49	ELSE_38	IF_60
0x400dc48	    0x4881fb000000	                              cmp rbx, 0	      8518	option.c	FUNCTION_49	ELSE_39	IF_62
0x400dc4f	     0xf843a0b0000	                            je 0x400e78f	      8518	option.c	FUNCTION_49	ELSE_39	IF_62
0x400dc55	    0x488d87680200	                  lea rax, [rdi + 0x268]	      8532	option.c	FUNCTION_49	ELSE_41	IF_65
0x400dc5c	          0x4839c3	                            cmp rbx, rax	      8532	option.c	FUNCTION_49	ELSE_41	IF_65
0x400dc5f	     0xf848a0b0000	                            je 0x400e7ef	      8532	option.c	FUNCTION_49	ELSE_41	IF_65
0x400dc65	    0x4881fb000000	                              cmp rbx, 0	      8544	option.c	FUNCTION_49	ELSE_42	IF_68
0x400dc6c	            0x753a	                           jne 0x400dca8	      8544	option.c	FUNCTION_49	ELSE_42	IF_68
0x400dc6e	    0x8b0500000000	            mov eax, dword [0x0400dc74] 	      8546	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69
0x400dc74	          0x4139c6	                           cmp r14d, eax	      8546	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69
0x400dc77	            0x742f	                            je 0x400dca8	      8546	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69
0x400dc79	            0x85c0	                           test eax, eax	      8548	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69	IF_70
0x400dc7b	    0x8b1500000000	            mov edx, dword [0x0400dc81] 	      8550	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69	IF_70
0x400dc81	            0x7408	                            je 0x400dc8b	      8548	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69	IF_70
0x400dc83	    0x8b0500000000	            mov eax, dword [0x0400dc89] 	      8555	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69	ELSE_43
0x400dc89	            0x31d2	                            xor edx, edx	      8556	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69	ELSE_43
0x400dc8b	    0x890500000000	            mov dword [0x0400dc91], eax 	      8556	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69	ELSE_43
0x400dc91	    0x891500000000	            mov dword [0x0400dc97], edx 	      8556	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69	ELSE_43
0x400dc97	      0xe800000000	                          call 0x400dc9c	      8558	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69	CALL_52
0x400dc9c	    0x488b3d000000	            mov rdi, qword [0x0400dca3] 	      8558	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69	CALL_52
0x400dca3	       0xf1f440000	                   nop dword [rax + rax]	      8558	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69	CALL_52
0x400dca8	    0x8b0500000000	            mov eax, dword [0x0400dcae] 	      8558	option.c	FUNCTION_49	ELSE_42	IF_68	IF_69	CALL_52
0x400dcae	            0x85c0	                           test eax, eax	      8570	option.c	FUNCTION_49	IF_71
0x400dcb0	     0xf851a010000	                           jne 0x400ddd0	      8570	option.c	FUNCTION_49	IF_71
0x400dcb6	    0x8b0500000000	            mov eax, dword [0x0400dcbc] 	      8570	option.c	FUNCTION_49	IF_71
0x400dcbc	            0x85c0	                           test eax, eax	      8570	option.c	FUNCTION_49	IF_71
0x400dcbe	            0x89c2	                            mov edx, eax	      8570	option.c	FUNCTION_49	IF_71
0x400dcc0	     0xf857a010000	                           jne 0x400de40	      8570	option.c	FUNCTION_49	IF_71
0x400dcc6	    0x488d87b00100	                  lea rax, [rdi + 0x1b0]	      8607	option.c	FUNCTION_49	IF_74
0x400dccd	          0x4839c3	                            cmp rbx, rax	      8607	option.c	FUNCTION_49	IF_74
0x400dcd0	     0xf847a030000	                            je 0x400e050	      8607	option.c	FUNCTION_49	IF_74
0x400dcd6	    0x4881fb000000	                              cmp rbx, 0	      8694	option.c	FUNCTION_49	ELSE_45	IF_82
0x400dcdd	     0xf845d040000	                            je 0x400e140	      8694	option.c	FUNCTION_49	ELSE_45	IF_82
0x400dce3	    0x8b0d00000000	            mov ecx, dword [0x0400dce9] 	      8728	option.c	FUNCTION_49	IF_87
0x400dce9	          0x4889eb	                            mov rbx, rbp	      8725	option.c	FUNCTION_49
0x400dcec	        0x48c1e306	                              shl rbx, 6	      8725	option.c	FUNCTION_49
0x400dcf0	    0x48818b000000	                   or qword [rbx], 0x100	      8725	option.c	FUNCTION_49
0x400dcfb	            0x85c9	                           test ecx, ecx	      8728	option.c	FUNCTION_49	IF_87
0x400dcfd	     0xf841d020000	                            je 0x400df20	      8728	option.c	FUNCTION_49	IF_87
0x400dd03	      0xe800000000	                          call 0x400dd08	      8742	option.c	FUNCTION_49	CALL_86
0x400dd08	    0x488b05000000	            mov rax, qword [0x0400dd0f] 	      8743	option.c	FUNCTION_49	IF_88
0x400dd0f	        0x48c1e506	                              shl rbp, 6	      8744	option.c	FUNCTION_49	IF_88
0x400dd13	    0x488b9d000000	                    mov rbx, qword [rbp]	      8744	option.c	FUNCTION_49	IF_88
0x400dd1a	    0x817848ffffff	     cmp dword [rax + 0x48], 0x7fffffff 	      8743	option.c	FUNCTION_49	IF_88
0x400dd21	            0x740f	                            je 0x400dd32	      8743	option.c	FUNCTION_49	IF_88
0x400dd23	    0xf7c300600004	                     test ebx, 0x4006000	      8744	option.c	FUNCTION_49	IF_88
0x400dd29	            0x7407	                            je 0x400dd32	      8744	option.c	FUNCTION_49	IF_88
0x400dd2b	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      8745	option.c	FUNCTION_49	IF_88
0x400dd32	          0x4889da	                            mov rdx, rbx	      9309	option.c	FUNCTION_51
0x400dd35	          0x4989dc	                            mov r12, rbx	      9308	option.c	FUNCTION_51
0x400dd38	    0x81e200600000	                         and edx, 0x6000	      9309	option.c	FUNCTION_51
0x400dd3e	    0x4181e4007000	                        and r12d, 0x7000	      9308	option.c	FUNCTION_51
0x400dd45	    0x4881fa006000	                         cmp rdx, 0x6000	      9308	option.c	FUNCTION_51
0x400dd4c	        0x400f94c5	                                sete bpl	      9308	option.c	FUNCTION_51
0x400dd50	    0x4981fc007000	                         cmp r12, 0x7000	      9308	option.c	FUNCTION_51
0x400dd57	           0xf94c0	                                 sete al	      9308	option.c	FUNCTION_51
0x400dd5a	          0x4008c5	                              or bpl, al	      9309	option.c	FUNCTION_51
0x400dd5d	            0x7561	                           jne 0x400ddc0	      9309	option.c	FUNCTION_51
0x400dd5f	          0x4885d2	                           test rdx, rdx	      9309	option.c	FUNCTION_51
0x400dd62	        0x400f95c5	                               setne bpl	      9309	option.c	FUNCTION_51
0x400dd66	          0x4531ed	                          xor r13d, r13d	      9309	option.c	FUNCTION_51
0x400dd69	          0xf6c710	                           test bh, 0x10	      9311	option.c	FUNCTION_51	IF_1
0x400dd6c	            0x7558	                           jne 0x400ddc6	      9311	option.c	FUNCTION_51	IF_1
0x400dd6e	          0x4084ed	                           test bpl, bpl	      9314	option.c	FUNCTION_51	IF_2
0x400dd71	            0x7405	                            je 0x400dd78	      9314	option.c	FUNCTION_51	IF_2
0x400dd73	      0xe800000000	                          call 0x400dd78	      9315	option.c	FUNCTION_51	CALL_2
0x400dd78	          0xf6c740	                           test bh, 0x40	      9316	option.c	FUNCTION_51	IF_3
0x400dd7b	     0xf857f020000	                           jne 0x400e000	      9316	option.c	FUNCTION_51	IF_3
0x400dd81	    0xf7c300000010	                    test ebx, 0x10000000	      9318	option.c	FUNCTION_51	IF_4
0x400dd87	     0xf855b020000	                           jne 0x400dfe8	      9318	option.c	FUNCTION_51	IF_4
0x400dd8d	    0x4981fc007000	                         cmp r12, 0x7000	      9320	option.c	FUNCTION_51	IF_5
0x400dd94	     0xf8406040000	                            je 0x400e1a0	      9320	option.c	FUNCTION_51	IF_5
0x400dd9a	            0x31c0	                            xor eax, eax	      8748	option.c	FUNCTION_49
0x400dd9c	          0x4585ed	                         test r13d, r13d	      9322	option.c	FUNCTION_51	ELSE_1	IF_6
0x400dd9f	     0xf84a3fdffff	                            je 0x400db48	      9322	option.c	FUNCTION_51	ELSE_1	IF_6
0x400dda5	      0xbf28000000	                           mov edi, 0x28	      9323	option.c	FUNCTION_51	ELSE_1	IF_6
0x400ddaa	      0x4889442408	                mov qword [rsp + 8], rax	      9323	option.c	FUNCTION_51	ELSE_1	IF_6
0x400ddaf	      0xe800000000	                          call 0x400ddb4	      9323	option.c	FUNCTION_51	ELSE_1	IF_6
0x400ddb4	      0x488b442408	                mov rax, qword [rsp + 8]	      9323	option.c	FUNCTION_51	ELSE_1	IF_6
0x400ddb9	      0xe98afdffff	                           jmp 0x400db48	      9323	option.c	FUNCTION_51	ELSE_1	IF_6
0x400ddbe	            0x6690	                                     nop	      9323	option.c	FUNCTION_51	ELSE_1	IF_6
0x400ddc0	    0x41bd01000000	                             mov r13d, 1	      9309	option.c	FUNCTION_51
0x400ddc6	      0xe800000000	                          call 0x400ddcb	      9312	option.c	FUNCTION_51	CALL_1
0x400ddcb	            0xeba1	                           jmp 0x400dd6e	      9312	option.c	FUNCTION_51	CALL_1
0x400ddcd	           0xf1f00	                         nop dword [rax]	      9312	option.c	FUNCTION_51	CALL_1
0x400ddd0	    0x8b1500000000	            mov edx, dword [0x0400ddd6] 	      8570	option.c	FUNCTION_49	IF_71
0x400ddd6	            0x85d2	                           test edx, edx	      8570	option.c	FUNCTION_49	IF_71
0x400ddd8	     0xf858a000000	                           jne 0x400de68	      8570	option.c	FUNCTION_49	IF_71
0x400ddde	    0x8b0500000000	            mov eax, dword [0x0400dde4] 	      8595	option.c	FUNCTION_49	IF_73
0x400dde4	            0x85c0	                           test eax, eax	      8595	option.c	FUNCTION_49	IF_73
0x400dde6	     0xf84dafeffff	                            je 0x400dcc6	      8595	option.c	FUNCTION_49	IF_73
0x400ddec	    0xc787b0010000	              mov dword [rdi + 0x1b0], 0	      8600	option.c	FUNCTION_49	IF_73
0x400ddf6	    0xc70500000000	               mov dword [0x0400de00], 1	      8597	option.c	FUNCTION_49	IF_73
0x400de00	    0xc70500000000	               mov dword [0x0400de0a], 0	      8598	option.c	FUNCTION_49	IF_73
0x400de0a	      0xe800000000	                          call 0x400de0f	      8602	option.c	FUNCTION_49	IF_73	CALL_55
0x400de0f	    0x488b3d000000	            mov rdi, qword [0x0400de16] 	      8602	option.c	FUNCTION_49	IF_73	CALL_55
0x400de16	      0xe9abfeffff	                           jmp 0x400dcc6	      8602	option.c	FUNCTION_49	IF_73	CALL_55
0x400de1b	       0xf1f440000	                   nop dword [rax + rax]	      8602	option.c	FUNCTION_49	IF_73	CALL_55
0x400de20	          0x4863fd	                         movsxd rdi, ebp	      8153	option.c	FUNCTION_49	CALL_2
0x400de23	      0xbe02000000	                              mov esi, 2	      8153	option.c	FUNCTION_49	CALL_2
0x400de28	        0x48c1e706	                              shl rdi, 6	      8153	option.c	FUNCTION_49	CALL_2
0x400de2c	    0x4881c7000000	                              add rdi, 0	      8153	option.c	FUNCTION_49	CALL_2
0x400de33	      0xe8483bffff	                 call sym.get_varp_scope	      8153	option.c	FUNCTION_49	CALL_2
0x400de38	          0x448928	                   mov dword [rax], r13d	      8153	option.c	FUNCTION_49	CALL_2
0x400de3b	      0xe974fbffff	                           jmp 0x400d9b4	      8153	option.c	FUNCTION_49	CALL_2
0x400de40	    0x8b0d00000000	            mov ecx, dword [0x0400de46] 	      8570	option.c	FUNCTION_49	IF_71
0x400de46	            0x85c9	                           test ecx, ecx	      8570	option.c	FUNCTION_49	IF_71
0x400de48	            0x7524	                           jne 0x400de6e	      8570	option.c	FUNCTION_49	IF_71
0x400de4a	            0x85c0	                           test eax, eax	      8595	option.c	FUNCTION_49	IF_73
0x400de4c	     0xf8474feffff	                            je 0x400dcc6	      8595	option.c	FUNCTION_49	IF_73
0x400de52	    0x8b0500000000	            mov eax, dword [0x0400de58] 	      8595	option.c	FUNCTION_49	IF_73
0x400de58	            0x85c0	                           test eax, eax	      8595	option.c	FUNCTION_49	IF_73
0x400de5a	     0xf8566feffff	                           jne 0x400dcc6	      8595	option.c	FUNCTION_49	IF_73
0x400de60	            0xeb8a	                           jmp 0x400ddec	      8595	option.c	FUNCTION_49	IF_73
0x400de62	    0x660f1f440000	                    nop word [rax + rax]	      8595	option.c	FUNCTION_49	IF_73
0x400de68	    0x8b1500000000	            mov edx, dword [0x0400de6e] 	      8595	option.c	FUNCTION_49	IF_73
0x400de6e	    0xc787b0010000	              mov dword [rdi + 0x1b0], 0	      8574	option.c	FUNCTION_49	IF_71
0x400de78	    0x891500000000	            mov dword [0x0400de7e], edx 	      8572	option.c	FUNCTION_49	IF_71
0x400de7e	      0xe800000000	                          call 0x400de83	      8576	option.c	FUNCTION_49	IF_71	CALL_53
0x400de83	    0x8b0500000000	            mov eax, dword [0x0400de89] 	      8582	option.c	FUNCTION_49	IF_72
0x400de89	    0x488b3d000000	            mov rdi, qword [0x0400de90] 	      8582	option.c	FUNCTION_49	IF_72
0x400de90	            0x85c0	                           test eax, eax	      8582	option.c	FUNCTION_49	IF_72
0x400de92	     0xf84c8030000	                            je 0x400e260	      8582	option.c	FUNCTION_49	IF_72
0x400de98	    0x8b0500000000	            mov eax, dword [0x0400de9e] 	      8582	option.c	FUNCTION_49	IF_72
0x400de9e	            0x85c0	                           test eax, eax	      8582	option.c	FUNCTION_49	IF_72
0x400dea0	     0xf8438ffffff	                            je 0x400ddde	      8582	option.c	FUNCTION_49	IF_72
0x400dea6	    0xc787b0010000	              mov dword [rdi + 0x1b0], 0	      8587	option.c	FUNCTION_49	IF_72
0x400deb0	    0xc70500000000	               mov dword [0x0400deba], 0	      8584	option.c	FUNCTION_49	IF_72
0x400deba	    0xc70500000000	               mov dword [0x0400dec4], 0	      8585	option.c	FUNCTION_49	IF_72
0x400dec4	      0xe800000000	                          call 0x400dec9	      8589	option.c	FUNCTION_49	IF_72	CALL_54
0x400dec9	    0x8b0500000000	            mov eax, dword [0x0400decf] 	      8589	option.c	FUNCTION_49	IF_72	CALL_54
0x400decf	    0x488b3d000000	            mov rdi, qword [0x0400ded6] 	      8589	option.c	FUNCTION_49	IF_72	CALL_54
0x400ded6	      0xe96fffffff	                           jmp 0x400de4a	      8589	option.c	FUNCTION_49	IF_72	CALL_54
0x400dedb	       0xf1f440000	                   nop dword [rax + rax]	      8589	option.c	FUNCTION_49	IF_72	CALL_54
0x400dee0	    0x418b87241400	          mov eax, dword [r15 + 0x1424] 	      8274	option.c	FUNCTION_49	ELSE_10	IF_19
0x400dee7	          0x4139c6	                           cmp r14d, eax	      8274	option.c	FUNCTION_49	ELSE_10	IF_19
0x400deea	     0xf848cfbffff	                            je 0x400da7c	      8274	option.c	FUNCTION_49	ELSE_10	IF_19
0x400def0	            0x31ff	                            xor edi, edi	      8276	option.c	FUNCTION_49	ELSE_10	IF_19	CALL_16
0x400def2	            0x85c0	                           test eax, eax	      8276	option.c	FUNCTION_49	ELSE_10	IF_19	CALL_16
0x400def4	          0x4d89f8	                             mov r8, r15	      8276	option.c	FUNCTION_49	ELSE_10	IF_19	CALL_16
0x400def7	        0x400f94c7	                                sete dil	      8276	option.c	FUNCTION_49	ELSE_10	IF_19	CALL_16
0x400defb	      0xb901000000	                              mov ecx, 1	      8276	option.c	FUNCTION_49	ELSE_10	IF_19	CALL_16
0x400df00	            0x31d2	                            xor edx, edx	      8276	option.c	FUNCTION_49	ELSE_10	IF_19	CALL_16
0x400df02	            0x31f6	                            xor esi, esi	      8276	option.c	FUNCTION_49	ELSE_10	IF_19	CALL_16
0x400df04	      0xe800000000	                          call 0x400df09	      8276	option.c	FUNCTION_49	ELSE_10	IF_19	CALL_16
0x400df09	    0x488b3d000000	            mov rdi, qword [0x0400df10] 	      8276	option.c	FUNCTION_49	ELSE_10	IF_19	CALL_16
0x400df10	    0x8b0500000000	            mov eax, dword [0x0400df16] 	      8276	option.c	FUNCTION_49	ELSE_10	IF_19	CALL_16
0x400df16	      0xe993fdffff	                           jmp 0x400dcae	      8276	option.c	FUNCTION_49	ELSE_10	IF_19	CALL_16
0x400df1b	       0xf1f440000	                   nop dword [rax + rax]	      8276	option.c	FUNCTION_49	ELSE_10	IF_19	CALL_16
0x400df20	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      8731	option.c	FUNCTION_49	IF_87	CALL_78
0x400df25	            0x31c9	                            xor ecx, ecx	      8731	option.c	FUNCTION_49	IF_87	CALL_78
0x400df27	          0x4585f6	                         test r14d, r14d	      8731	option.c	FUNCTION_49	IF_87	CALL_78
0x400df2a	           0xf95c1	                                setne cl	      8731	option.c	FUNCTION_49	IF_87	CALL_78
0x400df2d	      0xba00000000	                              mov edx, 0	      8731	option.c	FUNCTION_49	IF_87	CALL_78
0x400df32	      0xbe02000000	                              mov esi, 2	      8731	option.c	FUNCTION_49	IF_87	CALL_78
0x400df37	            0x31c0	                            xor eax, eax	      8731	option.c	FUNCTION_49	IF_87	CALL_78
0x400df39	      0xe800000000	                          call 0x400df3e	      8731	option.c	FUNCTION_49	IF_87	CALL_78
0x400df3e	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      8732	option.c	FUNCTION_49	IF_87	CALL_79
0x400df43	            0x31c9	                            xor ecx, ecx	      8732	option.c	FUNCTION_49	IF_87	CALL_79
0x400df45	          0x4585ed	                         test r13d, r13d	      8732	option.c	FUNCTION_49	IF_87	CALL_79
0x400df48	           0xf95c1	                                setne cl	      8732	option.c	FUNCTION_49	IF_87	CALL_79
0x400df4b	      0xba00000000	                              mov edx, 0	      8732	option.c	FUNCTION_49	IF_87	CALL_79
0x400df50	      0xbe02000000	                              mov esi, 2	      8732	option.c	FUNCTION_49	IF_87	CALL_79
0x400df55	            0x31c0	                            xor eax, eax	      8732	option.c	FUNCTION_49	IF_87	CALL_79
0x400df57	      0xe800000000	                          call 0x400df5c	      8732	option.c	FUNCTION_49	IF_87	CALL_79
0x400df5c	        0x4183e404	                             and r12d, 4	      8733	option.c	FUNCTION_49	IF_87	CALL_80
0x400df60	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      8733	option.c	FUNCTION_49	IF_87	CALL_80
0x400df65	      0xb800000000	                              mov eax, 0	      8733	option.c	FUNCTION_49	IF_87	CALL_80
0x400df6a	      0xb900000000	                              mov ecx, 0	      8733	option.c	FUNCTION_49	IF_87	CALL_80
0x400df6f	      0xba00000000	                              mov edx, 0	      8733	option.c	FUNCTION_49	IF_87	CALL_80
0x400df74	      0xbe07000000	                              mov esi, 7	      8733	option.c	FUNCTION_49	IF_87	CALL_80
0x400df79	        0x480f44c8	                          cmove rcx, rax	      8733	option.c	FUNCTION_49	IF_87	CALL_80
0x400df7d	            0x31c0	                            xor eax, eax	      8733	option.c	FUNCTION_49	IF_87	CALL_80
0x400df7f	      0xe800000000	                          call 0x400df84	      8733	option.c	FUNCTION_49	IF_87	CALL_80
0x400df84	      0x488d742420	                   lea rsi, [rsp + 0x20]	      8734	option.c	FUNCTION_49	IF_87	CALL_81
0x400df89	      0xbaffffffff	                     mov edx, 0xffffffff	      8734	option.c	FUNCTION_49	IF_87	CALL_81
0x400df8e	      0xbf3d000000	                           mov edi, 0x3d	      8734	option.c	FUNCTION_49	IF_87	CALL_81
0x400df93	      0xe800000000	                          call 0x400df98	      8734	option.c	FUNCTION_49	IF_87	CALL_81
0x400df98	      0x488d742410	                   lea rsi, [rsp + 0x10]	      8735	option.c	FUNCTION_49	IF_87	CALL_82
0x400df9d	      0xbaffffffff	                     mov edx, 0xffffffff	      8735	option.c	FUNCTION_49	IF_87	CALL_82
0x400dfa2	      0xbf3e000000	                           mov edi, 0x3e	      8735	option.c	FUNCTION_49	IF_87	CALL_82
0x400dfa7	      0xe800000000	                          call 0x400dfac	      8735	option.c	FUNCTION_49	IF_87	CALL_82
0x400dfac	      0x488d742430	                   lea rsi, [rsp + 0x30]	      8736	option.c	FUNCTION_49	IF_87	CALL_83
0x400dfb1	      0xbaffffffff	                     mov edx, 0xffffffff	      8736	option.c	FUNCTION_49	IF_87	CALL_83
0x400dfb6	      0xbf3f000000	                           mov edi, 0x3f	      8736	option.c	FUNCTION_49	IF_87	CALL_83
0x400dfbb	      0xe800000000	                          call 0x400dfc0	      8736	option.c	FUNCTION_49	IF_87	CALL_83
0x400dfc0	    0x488bb3000000	                    mov rsi, qword [rbx]	      8737	option.c	FUNCTION_49	IF_87	CALL_84
0x400dfc7	          0x4531c0	                            xor r8d, r8d	      8737	option.c	FUNCTION_49	IF_87	CALL_84
0x400dfca	            0x31c9	                            xor ecx, ecx	      8737	option.c	FUNCTION_49	IF_87	CALL_84
0x400dfcc	            0x31d2	                            xor edx, edx	      8737	option.c	FUNCTION_49	IF_87	CALL_84
0x400dfce	      0xbf3e000000	                           mov edi, 0x3e	      8737	option.c	FUNCTION_49	IF_87	CALL_84
0x400dfd3	      0xe800000000	                          call 0x400dfd8	      8737	option.c	FUNCTION_49	IF_87	CALL_84
0x400dfd8	      0xe800000000	                          call 0x400dfdd	      8738	option.c	FUNCTION_49	IF_87	CALL_85
0x400dfdd	      0xe921fdffff	                           jmp 0x400dd03	      8738	option.c	FUNCTION_49	IF_87	CALL_85
0x400dfe2	    0x660f1f440000	                    nop word [rax + rax]	      8738	option.c	FUNCTION_49	IF_87	CALL_85
0x400dfe8	      0xbf28000000	                           mov edi, 0x28	      9319	option.c	FUNCTION_51	CALL_4
0x400dfed	      0xe800000000	                          call 0x400dff2	      9319	option.c	FUNCTION_51	CALL_4
0x400dff2	      0xe996fdffff	                           jmp 0x400dd8d	      9319	option.c	FUNCTION_51	CALL_4
0x400dff7	    0x660f1f840000	                    nop word [rax + rax]	      9319	option.c	FUNCTION_51	CALL_4
0x400e000	      0xbf28000000	                           mov edi, 0x28	      9317	option.c	FUNCTION_51	CALL_3
0x400e005	      0xe800000000	                          call 0x400e00a	      9317	option.c	FUNCTION_51	CALL_3
0x400e00a	      0xe972fdffff	                           jmp 0x400dd81	      9317	option.c	FUNCTION_51	CALL_3
0x400e00f	              0x90	                                     nop	      9317	option.c	FUNCTION_51	CALL_3
0x400e010	    0x418b87401500	          mov eax, dword [r15 + 0x1540] 	      8233	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_7
0x400e017	            0x85c0	                           test eax, eax	      8233	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_7
0x400e019	     0xf84f1000000	                            je 0x400e110	      8233	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_7
0x400e01f	      0xe800000000	                          call 0x400e024	      8233	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_7
0x400e024	            0x85c0	                           test eax, eax	      8233	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_7
0x400e026	     0xf84ca010000	                            je 0x400e1f6	      8233	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_7
0x400e02c	    0x488b05000000	            mov rax, qword [0x0400e033] 	      8236	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14
0x400e033	    0xc78040150000	            mov dword [rax + 0x1540], 0 	      8236	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14
0x400e03d	      0xb800000000	                              mov eax, 0	      8237	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_9
0x400e042	      0xe901fbffff	                           jmp 0x400db48	      8237	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_9
0x400e047	    0x660f1f840000	                    nop word [rax + rax]	      8237	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_9
0x400e050	    0x448bbfb00100	          mov r15d, dword [rdi + 0x1b0] 	      8609	option.c	FUNCTION_49	IF_74	IF_75
0x400e057	          0x4585ff	                         test r15d, r15d	      8609	option.c	FUNCTION_49	IF_74	IF_75
0x400e05a	     0xf8458010000	                            je 0x400e1b8	      8609	option.c	FUNCTION_49	IF_74	IF_75
0x400e060	    0x8b1d00000000	            mov ebx, dword [0x0400e066] 	      8614	option.c	FUNCTION_49	IF_74	IF_75	IF_76
0x400e066	            0x85db	                           test ebx, ebx	      8614	option.c	FUNCTION_49	IF_74	IF_75	IF_76
0x400e068	            0x7520	                           jne 0x400e08a	      8614	option.c	FUNCTION_49	IF_74	IF_75	IF_76
0x400e06a	    0x448b9f540200	          mov r11d, dword [rdi + 0x254] 	      8617	option.c	FUNCTION_49	IF_74	IF_75	IF_76	IF_77
0x400e071	          0x4585db	                         test r11d, r11d	      8617	option.c	FUNCTION_49	IF_74	IF_75	IF_76	IF_77
0x400e074	     0xf8401070000	                            je 0x400e77b	      8617	option.c	FUNCTION_49	IF_74	IF_75	IF_76	IF_77
0x400e07a	    0x448b15000000	           mov r10d, dword [0x0400e081] 	      8624	option.c	FUNCTION_49	IF_74	IF_75	IF_76	IF_78
0x400e081	          0x4585d2	                         test r10d, r10d	      8624	option.c	FUNCTION_49	IF_74	IF_75	IF_76	IF_78
0x400e084	     0xf84dd060000	                            je 0x400e767	      8624	option.c	FUNCTION_49	IF_74	IF_75	IF_76	IF_78
0x400e08a	    0x488b35000000	            mov rsi, qword [0x0400e091] 	      8633	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_58
0x400e091	      0xbf00000000	                              mov edi, 0	      8633	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_58
0x400e096	      0xb906000000	                              mov ecx, 6	      8633	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_58
0x400e09b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      8633	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_58
0x400e09d	     0xf8517040000	                           jne 0x400e4ba	      8633	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_58
0x400e0a3	      0xb904000000	                              mov ecx, 4	      8651	option.c	FUNCTION_49	IF_74	IF_75	CALL_67
0x400e0a8	      0xba00000000	                              mov edx, 0	      8651	option.c	FUNCTION_49	IF_74	IF_75	CALL_67
0x400e0ad	            0x31f6	                            xor esi, esi	      8651	option.c	FUNCTION_49	IF_74	IF_75	CALL_67
0x400e0af	      0xbf00000000	                              mov edi, 0	      8651	option.c	FUNCTION_49	IF_74	IF_75	CALL_67
0x400e0b4	    0xc70500000000	               mov dword [0x0400e0be], 1	      8646	option.c	FUNCTION_49	IF_74	IF_75
0x400e0be	      0xe800000000	                          call 0x400e0c3	      8651	option.c	FUNCTION_49	IF_74	IF_75	CALL_67
0x400e0c3	    0xc70500000000	               mov dword [0x0400e0cd], 0	      8655	option.c	FUNCTION_49	IF_74	IF_75
0x400e0cd	    0xc70500000000	               mov dword [0x0400e0d7], 0	      8656	option.c	FUNCTION_49	IF_74	IF_75
0x400e0d7	    0xc70500000000	               mov dword [0x0400e0e1], 0	      8657	option.c	FUNCTION_49	IF_74	IF_75
0x400e0e1	      0xe800000000	                          call 0x400e0e6	      8658	option.c	FUNCTION_49	IF_74	IF_75	CALL_68
0x400e0e6	      0xe9f8fbffff	                           jmp 0x400dce3	      8658	option.c	FUNCTION_49	IF_74	IF_75	CALL_68
0x400e0eb	    0x418b97601500	          mov edx, dword [r15 + 0x1560] 	      8208	option.c	FUNCTION_49	ELSE_3	IF_8	IF_9
0x400e0f2	            0x85d2	                           test edx, edx	      8208	option.c	FUNCTION_49	ELSE_3	IF_8	IF_9
0x400e0f4	     0xf8549060000	                           jne 0x400e743	      8208	option.c	FUNCTION_49	ELSE_3	IF_8	IF_9
0x400e0fa	        0x41f6c404	                            test r12b, 4	      8208	option.c	FUNCTION_49	ELSE_3	IF_8	IF_9
0x400e0fe	            0x7510	                           jne 0x400e110	      8208	option.c	FUNCTION_49	ELSE_3	IF_8	IF_9
0x400e100	    0xc70500000000	               mov dword [0x0400e10a], 0	      8209	option.c	FUNCTION_49	ELSE_3	IF_8	IF_9
0x400e10a	    0x660f1f440000	                    nop word [rax + rax]	      8209	option.c	FUNCTION_49	ELSE_3	IF_8	IF_9
0x400e110	    0xc70500000000	               mov dword [0x0400e11a], 1	      5857	option.c	FUNCTION_35
0x400e11a	    0xc70500000000	               mov dword [0x0400e124], 1	      5858	option.c	FUNCTION_35
0x400e124	    0x488b3d000000	            mov rdi, qword [0x0400e12b] 	      5858	option.c	FUNCTION_35
0x400e12b	    0x8b0500000000	            mov eax, dword [0x0400e131] 	      5858	option.c	FUNCTION_35
0x400e131	      0xe978fbffff	                           jmp 0x400dcae	      5858	option.c	FUNCTION_35
0x400e136	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5858	option.c	FUNCTION_35
0x400e140	    0x8b3d00000000	            mov edi, dword [0x0400e146] 	      8707	option.c	FUNCTION_49	ELSE_45	IF_82	IF_85
0x400e146	            0x85ff	                           test edi, edi	      8707	option.c	FUNCTION_49	ELSE_45	IF_82	IF_85
0x400e148	     0xf8595fbffff	                           jne 0x400dce3	      8707	option.c	FUNCTION_49	ELSE_45	IF_82	IF_85
0x400e14e	    0x8b3500000000	            mov esi, dword [0x0400e154] 	      8707	option.c	FUNCTION_49	ELSE_45	IF_82	IF_85
0x400e154	            0x85f6	                           test esi, esi	      8707	option.c	FUNCTION_49	ELSE_45	IF_82	IF_85
0x400e156	     0xf8587fbffff	                           jne 0x400dce3	      8707	option.c	FUNCTION_49	ELSE_45	IF_82	IF_85
0x400e15c	      0xe800000000	                          call 0x400e161	      8709	option.c	FUNCTION_49	ELSE_45	IF_82	CALL_74
0x400e161	      0xe97dfbffff	                           jmp 0x400dce3	      8709	option.c	FUNCTION_49	ELSE_45	IF_82	CALL_74
0x400e166	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      8709	option.c	FUNCTION_49	ELSE_45	IF_82	CALL_74
0x400e170	    0x448b15000000	           mov r10d, dword [0x0400e177] 	      8337	option.c	FUNCTION_49	ELSE_18	IF_31
0x400e177	          0x4585d2	                         test r10d, r10d	      8337	option.c	FUNCTION_49	ELSE_18	IF_31
0x400e17a	     0xf8440f9ffff	                            je 0x400dac0	      8337	option.c	FUNCTION_49	ELSE_18	IF_31
0x400e180	      0xbf23000000	                           mov edi, 0x23	      8339	option.c	FUNCTION_49	ELSE_18	IF_31	CALL_25
0x400e185	      0xe800000000	                          call 0x400e18a	      8339	option.c	FUNCTION_49	ELSE_18	IF_31	CALL_25
0x400e18a	    0x488b3d000000	            mov rdi, qword [0x0400e191] 	      8339	option.c	FUNCTION_49	ELSE_18	IF_31	CALL_25
0x400e191	    0x8b0500000000	            mov eax, dword [0x0400e197] 	      8339	option.c	FUNCTION_49	ELSE_18	IF_31	CALL_25
0x400e197	      0xe912fbffff	                           jmp 0x400dcae	      8339	option.c	FUNCTION_49	ELSE_18	IF_31	CALL_25
0x400e19c	         0xf1f4000	                         nop dword [rax]	      8339	option.c	FUNCTION_49	ELSE_18	IF_31	CALL_25
0x400e1a0	      0xbf32000000	                           mov edi, 0x32	      9321	option.c	FUNCTION_51	CALL_5
0x400e1a5	      0xe800000000	                          call 0x400e1aa	      9321	option.c	FUNCTION_51	CALL_5
0x400e1aa	            0x31c0	                            xor eax, eax	      8748	option.c	FUNCTION_49
0x400e1ac	      0xe997f9ffff	                           jmp 0x400db48	      8748	option.c	FUNCTION_49
0x400e1b1	     0xf1f80000000	                         nop dword [rax]	      8748	option.c	FUNCTION_49
0x400e1b8	    0x448b0d000000	            mov r9d, dword [0x0400e1bf] 	      8666	option.c	FUNCTION_49	IF_74	ELSE_44	IF_80
0x400e1bf	          0x4585c9	                           test r9d, r9d	      8666	option.c	FUNCTION_49	IF_74	ELSE_44	IF_80
0x400e1c2	            0x7510	                           jne 0x400e1d4	      8666	option.c	FUNCTION_49	IF_74	ELSE_44	IF_80
0x400e1c4	    0x448b87540200	           mov r8d, dword [rdi + 0x254] 	      8669	option.c	FUNCTION_49	IF_74	ELSE_44	IF_80	IF_81
0x400e1cb	          0x4585c0	                           test r8d, r8d	      8669	option.c	FUNCTION_49	IF_74	ELSE_44	IF_80	IF_81
0x400e1ce	     0xf857f050000	                           jne 0x400e753	      8669	option.c	FUNCTION_49	IF_74	ELSE_44	IF_80	IF_81
0x400e1d4	    0x488b05000000	            mov rax, qword [0x0400e1db] 	      8684	option.c	FUNCTION_49	IF_74	ELSE_44
0x400e1db	    0x48c780781200	            mov qword [rax + 0x1278], 0 	      8684	option.c	FUNCTION_49	IF_74	ELSE_44
0x400e1e6	    0x48c780801200	mov qword [rax + 0x1280], 0xffffffffffffffff 	      8685	option.c	FUNCTION_49	IF_74	ELSE_44
0x400e1f1	      0xe9edfaffff	                           jmp 0x400dce3	      8685	option.c	FUNCTION_49	IF_74	ELSE_44
0x400e1f6	    0x488b3d000000	            mov rdi, qword [0x0400e1fd] 	      8233	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_7
0x400e1fd	      0xe800000000	                          call 0x400e202	      8233	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_7
0x400e202	            0x85c0	                           test eax, eax	      8233	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_7
0x400e204	     0xf8406ffffff	                            je 0x400e110	      8233	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_7
0x400e20a	    0x488b3d000000	            mov rdi, qword [0x0400e211] 	      8234	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_8
0x400e211	    0x4883bf481c00	             cmp qword [rdi + 0x1c48], 0	      8234	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_8
0x400e219	     0xf84f1feffff	                            je 0x400e110	      8234	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_8
0x400e21f	      0xe800000000	                          call 0x400e224	      8234	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_8
0x400e224	            0x85c0	                           test eax, eax	      8234	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_8
0x400e226	     0xf8400feffff	                            je 0x400e02c	      8234	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_8
0x400e22c	      0xe9dffeffff	                           jmp 0x400e110	      8234	option.c	FUNCTION_49	ELSE_5	IF_13	IF_14	CALL_8
0x400e231	      0xe800000000	                          call 0x400e236	      8491	option.c	FUNCTION_49	ELSE_36	IF_58	CALL_43
0x400e236	    0x488b3d000000	            mov rdi, qword [0x0400e23d] 	      8491	option.c	FUNCTION_49	ELSE_36	IF_58	CALL_43
0x400e23d	    0x8b0500000000	            mov eax, dword [0x0400e243] 	      8491	option.c	FUNCTION_49	ELSE_36	IF_58	CALL_43
0x400e243	      0xe966faffff	                           jmp 0x400dcae	      8491	option.c	FUNCTION_49	ELSE_36	IF_58	CALL_43
0x400e248	     0xf1f84000000	                   nop dword [rax + rax]	      8491	option.c	FUNCTION_49	ELSE_36	IF_58	CALL_43
0x400e250	      0xe82b6cffff	                 call sym.compatible_set	      8162	option.c	FUNCTION_49	IF_3	CALL_3
0x400e255	      0xe967f7ffff	                           jmp 0x400d9c1	      8162	option.c	FUNCTION_49	IF_3	CALL_3
0x400e25a	    0x660f1f440000	                    nop word [rax + rax]	      8162	option.c	FUNCTION_49	IF_3	CALL_3
0x400e260	    0x8b0500000000	            mov eax, dword [0x0400e266] 	      8162	option.c	FUNCTION_49	IF_3	CALL_3
0x400e266	      0xe9dffbffff	                           jmp 0x400de4a	      8162	option.c	FUNCTION_49	IF_3	CALL_3
0x400e26b	    0x418bb7501600	          mov esi, dword [r15 + 0x1650] 	      8181	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400e272	            0x85f6	                           test esi, esi	      8181	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400e274	            0x750e	                           jne 0x400e284	      8181	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400e276	    0x8b0d00000000	            mov ecx, dword [0x0400e27c] 	      8181	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400e27c	            0x85c9	                           test ecx, ecx	      8181	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400e27e	     0xf8418faffff	                            je 0x400dc9c	      8181	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400e284	    0x488b15000000	            mov rdx, qword [0x0400e28b] 	      8186	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400e28b	          0x4885d2	                           test rdx, rdx	      8186	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400e28e	    0x488915000000	            mov qword [0x0400e295], rdx 	      8186	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400e295	            0x742a	                            je 0x400e2c1	      8186	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400e297	        0x41f6c402	                            test r12b, 2	      8186	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400e29b	            0x7543	                           jne 0x400e2e0	      8186	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400e29d	          0x4585e4	                         test r12d, r12d	      8186	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400e2a0	            0x743e	                            je 0x400e2e0	      8186	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400e2a2	    0x660f1f440000	                    nop word [rax + rax]	      8186	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400e2a8	          0x4939d7	                            cmp r15, rdx	      8192	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1
0x400e2ab	     0xf8483000000	                            je 0x400e334	      8192	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1
0x400e2b1	        0x488b5268	            mov rdx, qword [rdx + 0x68] 	      8186	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400e2b5	          0x4885d2	                           test rdx, rdx	      8186	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400e2b8	    0x488915000000	            mov qword [0x0400e2bf], rdx 	      8186	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400e2bf	            0x75e7	                           jne 0x400e2a8	      8186	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400e2c1	    0x4c893d000000	            mov qword [0x0400e2c8], r15 	      8200	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400e2c8	    0x488b3d000000	            mov rdi, qword [0x0400e2cf] 	      8200	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400e2cf	    0x8b0500000000	            mov eax, dword [0x0400e2d5] 	      8200	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400e2d5	      0xe9d4f9ffff	                           jmp 0x400dcae	      8200	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400e2da	    0x660f1f440000	                    nop word [rax + rax]	      8200	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400e2e0	      0xe800000000	                          call 0x400e2e5	      8194	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_1
0x400e2e5	            0x85c0	                           test eax, eax	      8194	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_1
0x400e2e7	    0x488b05000000	            mov rax, qword [0x0400e2ee] 	      8194	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_1
0x400e2ee	            0x7532	                           jne 0x400e322	      8194	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_1
0x400e2f0	      0x4883780800	                  cmp qword [rax + 8], 0	      8194	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_1
0x400e2f5	            0x742b	                            je 0x400e322	      8194	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_1
0x400e2f7	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      8196	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_2
0x400e2fc	      0xe800000000	                          call 0x400e301	      8196	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_2
0x400e301	    0x488b05000000	            mov rax, qword [0x0400e308] 	      8197	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_3
0x400e308	      0x488d742430	                   lea rsi, [rsp + 0x30]	      8197	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_3
0x400e30d	            0x31ff	                            xor edi, edi	      8197	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_3
0x400e30f	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	      8197	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_3
0x400e316	      0xe800000000	                          call 0x400e31b	      8197	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_3
0x400e31b	    0x488b05000000	            mov rax, qword [0x0400e322] 	      8197	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_3
0x400e322	        0x488b4068	            mov rax, qword [rax + 0x68] 	      8186	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400e326	          0x4885c0	                           test rax, rax	      8186	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400e329	    0x488905000000	            mov qword [0x0400e330], rax 	      8186	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400e330	            0x75ae	                           jne 0x400e2e0	      8186	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400e332	            0xeb8d	                           jmp 0x400e2c1	      8186	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7
0x400e334	      0xe800000000	                          call 0x400e339	      8194	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_1
0x400e339	            0x85c0	                           test eax, eax	      8194	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_1
0x400e33b	    0x488b15000000	            mov rdx, qword [0x0400e342] 	      8194	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_1
0x400e342	     0xf8569ffffff	                           jne 0x400e2b1	      8194	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_1
0x400e348	      0x48837a0800	                  cmp qword [rdx + 8], 0	      8194	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_1
0x400e34d	     0xf845effffff	                            je 0x400e2b1	      8194	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_1
0x400e353	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      8196	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_2
0x400e358	      0xe800000000	                          call 0x400e35d	      8196	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_2
0x400e35d	    0x488b05000000	            mov rax, qword [0x0400e364] 	      8197	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_3
0x400e364	      0x488d742430	                   lea rsi, [rsp + 0x30]	      8197	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_3
0x400e369	            0x31ff	                            xor edi, edi	      8197	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_3
0x400e36b	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	      8197	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_3
0x400e372	      0xe800000000	                          call 0x400e377	      8197	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_3
0x400e377	    0x488b15000000	            mov rdx, qword [0x0400e37e] 	      8197	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_3
0x400e37e	      0xe92effffff	                           jmp 0x400e2b1	      8197	option.c	FUNCTION_49	ELSE_2	IF_6	IF_7	FUNCTION_1	IF_1	CALL_3
0x400e383	    0x8b1500000000	            mov edx, dword [0x0400e389] 	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x400e389	          0x4489e1	                           mov ecx, r12d	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x400e38c	      0xb800000000	                              mov eax, 0	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x400e391	          0x83c901	                               or ecx, 1	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x400e394	      0xbf00000000	                              mov edi, 0	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x400e399	      0xbeffffffff	                     mov esi, 0xffffffff	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x400e39e	            0x85d2	                           test edx, edx	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x400e3a0	      0xba00000000	                              mov edx, 0	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x400e3a5	        0x480f44d0	                          cmove rdx, rax	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x400e3a9	          0x4531c0	                            xor r8d, r8d	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x400e3ac	      0xe800000000	                          call 0x400e3b1	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x400e3b1	    0x488b3d000000	            mov rdi, qword [0x0400e3b8] 	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x400e3b8	    0x8b0500000000	            mov eax, dword [0x0400e3be] 	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x400e3be	      0xe9ebf8ffff	                           jmp 0x400dcae	      8387	option.c	FUNCTION_49	ELSE_23	IF_39	CALL_31
0x400e3c3	          0x4585ed	                         test r13d, r13d	      8417	option.c	FUNCTION_49	ELSE_27	IF_43	IF_44
0x400e3c6	     0xf8468040000	                            je 0x400e834	      8417	option.c	FUNCTION_49	ELSE_27	IF_43	IF_44
0x400e3cc	    0xc70500000000	               mov dword [0x0400e3d6], 1	      5857	option.c	FUNCTION_35
0x400e3d6	    0xc70500000000	               mov dword [0x0400e3e0], 1	      5858	option.c	FUNCTION_35
0x400e3e0	    0x44892d000000	           mov dword [0x0400e3e7], r13d 	      8422	option.c	FUNCTION_49	ELSE_27	IF_43
0x400e3e7	    0x8b0500000000	            mov eax, dword [0x0400e3ed] 	      8422	option.c	FUNCTION_49	ELSE_27	IF_43
0x400e3ed	      0xe9bcf8ffff	                           jmp 0x400dcae	      8422	option.c	FUNCTION_49	ELSE_27	IF_43
0x400e3f2	    0x8b8794020000	           mov eax, dword [rdi + 0x294] 	      8453	option.c	FUNCTION_49	ELSE_30	IF_47	IF_48
0x400e3f8	            0x85c0	                           test eax, eax	      8453	option.c	FUNCTION_49	ELSE_30	IF_47	IF_48
0x400e3fa	     0xf84a8f8ffff	                            je 0x400dca8	      8453	option.c	FUNCTION_49	ELSE_30	IF_47	IF_48
0x400e400	    0xc78794000000	               mov dword [rdi + 0x94], 0	      8454	option.c	FUNCTION_49	ELSE_30	IF_47	IF_48
0x400e40a	    0x8b0500000000	            mov eax, dword [0x0400e410] 	      8454	option.c	FUNCTION_49	ELSE_30	IF_47	IF_48
0x400e410	      0xe999f8ffff	                           jmp 0x400dcae	      8454	option.c	FUNCTION_49	ELSE_30	IF_47	IF_48
0x400e415	    0x8b3d00000000	            mov edi, dword [0x0400e41b] 	      8171	option.c	FUNCTION_49	ELSE_1	IF_5
0x400e41b	            0x31c0	                            xor eax, eax	      8171	option.c	FUNCTION_49	ELSE_1	IF_5
0x400e41d	            0x85ff	                           test edi, edi	      8171	option.c	FUNCTION_49	ELSE_1	IF_5
0x400e41f	    0x488b3d000000	            mov rdi, qword [0x0400e426] 	      8171	option.c	FUNCTION_49	ELSE_1	IF_5
0x400e426	           0xf94c0	                                 sete al	      8171	option.c	FUNCTION_49	ELSE_1	IF_5
0x400e429	    0x890500000000	            mov dword [0x0400e42f], eax 	      8171	option.c	FUNCTION_49	ELSE_1	IF_5
0x400e42f	    0x8b0500000000	            mov eax, dword [0x0400e435] 	      8171	option.c	FUNCTION_49	ELSE_1	IF_5
0x400e435	      0xe974f8ffff	                           jmp 0x400dcae	      8171	option.c	FUNCTION_49	ELSE_1	IF_5
0x400e43a	    0x448b05000000	            mov r8d, dword [0x0400e441] 	      8168	option.c	FUNCTION_49	IF_4
0x400e441	            0x31c0	                            xor eax, eax	      8168	option.c	FUNCTION_49	IF_4
0x400e443	    0x488b3d000000	            mov rdi, qword [0x0400e44a] 	      8168	option.c	FUNCTION_49	IF_4
0x400e44a	          0x4585c0	                           test r8d, r8d	      8168	option.c	FUNCTION_49	IF_4
0x400e44d	           0xf94c0	                                 sete al	      8168	option.c	FUNCTION_49	IF_4
0x400e450	    0x890500000000	            mov dword [0x0400e456], eax 	      8168	option.c	FUNCTION_49	IF_4
0x400e456	    0x8b0500000000	            mov eax, dword [0x0400e45c] 	      8168	option.c	FUNCTION_49	IF_4
0x400e45c	      0xe94df8ffff	                           jmp 0x400dcae	      8168	option.c	FUNCTION_49	IF_4
0x400e461	    0x8b0500000000	            mov eax, dword [0x0400e467] 	      8223	option.c	FUNCTION_49	ELSE_4	IF_11	IF_12
0x400e467	            0x85c0	                           test eax, eax	      8223	option.c	FUNCTION_49	ELSE_4	IF_11	IF_12
0x400e469	     0xf852df8ffff	                           jne 0x400dc9c	      8223	option.c	FUNCTION_49	ELSE_4	IF_11	IF_12
0x400e46f	            0x31ff	                            xor edi, edi	      8224	option.c	FUNCTION_49	ELSE_4	IF_11	CALL_5
0x400e471	      0xe800000000	                          call 0x400e476	      8224	option.c	FUNCTION_49	ELSE_4	IF_11	CALL_5
0x400e476	    0x488b3d000000	            mov rdi, qword [0x0400e47d] 	      8224	option.c	FUNCTION_49	ELSE_4	IF_11	CALL_5
0x400e47d	    0x8b0500000000	            mov eax, dword [0x0400e483] 	      8224	option.c	FUNCTION_49	ELSE_4	IF_11	CALL_5
0x400e483	      0xe926f8ffff	                           jmp 0x400dcae	      8224	option.c	FUNCTION_49	ELSE_4	IF_11	CALL_5
0x400e488	    0x8b0500000000	            mov eax, dword [0x0400e48e] 	      8459	option.c	FUNCTION_49	ELSE_31	IF_49	IF_50
0x400e48e	            0x85c0	                           test eax, eax	      8459	option.c	FUNCTION_49	ELSE_31	IF_49	IF_50
0x400e490	     0xf8412f8ffff	                            je 0x400dca8	      8459	option.c	FUNCTION_49	ELSE_31	IF_49	IF_50
0x400e496	          0x4585f6	                         test r14d, r14d	      8459	option.c	FUNCTION_49	ELSE_31	IF_49	IF_50
0x400e499	     0xf8509f8ffff	                           jne 0x400dca8	      8459	option.c	FUNCTION_49	ELSE_31	IF_49	IF_50
0x400e49f	            0x31d2	                            xor edx, edx	      8460	option.c	FUNCTION_49	ELSE_31	IF_49	CALL_40
0x400e4a1	            0x31f6	                            xor esi, esi	      8460	option.c	FUNCTION_49	ELSE_31	IF_49	CALL_40
0x400e4a3	      0xe800000000	                          call 0x400e4a8	      8460	option.c	FUNCTION_49	ELSE_31	IF_49	CALL_40
0x400e4a8	    0x488b3d000000	            mov rdi, qword [0x0400e4af] 	      8460	option.c	FUNCTION_49	ELSE_31	IF_49	CALL_40
0x400e4af	    0x8b0500000000	            mov eax, dword [0x0400e4b5] 	      8460	option.c	FUNCTION_49	ELSE_31	IF_49	CALL_40
0x400e4b5	      0xe9f4f7ffff	                           jmp 0x400dcae	      8460	option.c	FUNCTION_49	ELSE_31	IF_49	CALL_40
0x400e4ba	    0x8b3d00000000	            mov edi, dword [0x0400e4c0] 	      8637	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_61
0x400e4c0	      0xe800000000	                          call 0x400e4c5	      8637	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_61
0x400e4c5	    0x8b1d00000000	            mov ebx, dword [0x0400e4cb] 	      8638	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_64
0x400e4cb	      0xba05000000	                              mov edx, 5	      8638	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_64
0x400e4d0	            0x31ff	                            xor edi, edi	      8638	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_64
0x400e4d2	      0xbe00000000	                              mov esi, 0	      8638	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_64
0x400e4d7	      0xe800000000	                          call 0x400e4dc	      8638	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_64
0x400e4dc	            0x89de	                            mov esi, ebx	      8638	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_64
0x400e4de	          0x4889c7	                            mov rdi, rax	      8638	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_64
0x400e4e1	      0xe800000000	                          call 0x400e4e6	      8638	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_64
0x400e4e6	            0x31ff	                            xor edi, edi	      8640	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_66
0x400e4e8	      0xba05000000	                              mov edx, 5	      8640	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_66
0x400e4ed	      0xbe00000000	                              mov esi, 0	      8640	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_66
0x400e4f2	      0xe800000000	                          call 0x400e4f7	      8640	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_66
0x400e4f7	      0xbaffffffff	                     mov edx, 0xffffffff	      8640	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_66
0x400e4fc	          0x4889c6	                            mov rsi, rax	      8640	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_66
0x400e4ff	      0xbf04000000	                              mov edi, 4	      8640	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_66
0x400e504	      0xe800000000	                          call 0x400e509	      8640	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_66
0x400e509	      0xe995fbffff	                           jmp 0x400e0a3	      8640	option.c	FUNCTION_49	IF_74	IF_75	IF_79	CALL_66
0x400e50e	    0x418b8fb01500	          mov ecx, dword [r15 + 0x15b0] 	      8382	option.c	FUNCTION_49	ELSE_22	IF_38	CALL_30
0x400e515	            0x31ff	                            xor edi, edi	      8382	option.c	FUNCTION_49	ELSE_22	IF_38	CALL_30
0x400e517	          0x4489e6	                           mov esi, r12d	      8382	option.c	FUNCTION_49	ELSE_22	IF_38	CALL_30
0x400e51a	            0x85c9	                           test ecx, ecx	      8382	option.c	FUNCTION_49	ELSE_22	IF_38	CALL_30
0x400e51c	        0x400f95c7	                               setne dil	      8382	option.c	FUNCTION_49	ELSE_22	IF_38	CALL_30
0x400e520	      0xe800000000	                          call 0x400e525	      8382	option.c	FUNCTION_49	ELSE_22	IF_38	CALL_30
0x400e525	    0x488b3d000000	            mov rdi, qword [0x0400e52c] 	      8382	option.c	FUNCTION_49	ELSE_22	IF_38	CALL_30
0x400e52c	    0x8b0500000000	            mov eax, dword [0x0400e532] 	      8382	option.c	FUNCTION_49	ELSE_22	IF_38	CALL_30
0x400e532	      0xe977f7ffff	                           jmp 0x400dcae	      8382	option.c	FUNCTION_49	ELSE_22	IF_38	CALL_30
0x400e537	    0x448b3d000000	           mov r15d, dword [0x0400e53e] 	      8469	option.c	FUNCTION_49	ELSE_32	IF_51	IF_52
0x400e53e	          0x4585ff	                         test r15d, r15d	      8469	option.c	FUNCTION_49	ELSE_32	IF_51	IF_52
0x400e541	     0xf858a020000	                           jne 0x400e7d1	      8469	option.c	FUNCTION_49	ELSE_32	IF_51	IF_52
0x400e547	          0x4585f6	                         test r14d, r14d	      8471	option.c	FUNCTION_49	ELSE_32	IF_51	ELSE_33	IF_53
0x400e54a	     0xf8453030000	                            je 0x400e8a3	      8471	option.c	FUNCTION_49	ELSE_32	IF_51	ELSE_33	IF_53
0x400e550	    0x488b05000000	            mov rax, qword [0x0400e557] 	      8472	option.c	FUNCTION_49	ELSE_32	IF_51	ELSE_33	IF_53
0x400e557	    0x488905000000	            mov qword [0x0400e55e], rax 	      8472	option.c	FUNCTION_49	ELSE_32	IF_51	ELSE_33	IF_53
0x400e55e	          0x803800	                       cmp byte [rax], 0	      8473	option.c	FUNCTION_49	ELSE_32	IF_51
0x400e561	           0xf95c0	                                setne al	      8473	option.c	FUNCTION_49	ELSE_32	IF_51
0x400e564	           0xfb6c0	                           movzx eax, al	      8473	option.c	FUNCTION_49	ELSE_32	IF_51
0x400e567	    0x890500000000	            mov dword [0x0400e56d], eax 	      8473	option.c	FUNCTION_49	ELSE_32	IF_51
0x400e56d	    0x8b0500000000	            mov eax, dword [0x0400e573] 	      8473	option.c	FUNCTION_49	ELSE_32	IF_51
0x400e573	      0xe936f7ffff	                           jmp 0x400dcae	      8473	option.c	FUNCTION_49	ELSE_32	IF_51
0x400e578	          0x4c89ff	                            mov rdi, r15	      8398	option.c	FUNCTION_49	ELSE_24	IF_40	CALL_32
0x400e57b	            0x31f6	                            xor esi, esi	      8398	option.c	FUNCTION_49	ELSE_24	IF_40	CALL_32
0x400e57d	      0xe800000000	                          call 0x400e582	      8398	option.c	FUNCTION_49	ELSE_24	IF_40	CALL_32
0x400e582	    0x488b3d000000	            mov rdi, qword [0x0400e589] 	      8398	option.c	FUNCTION_49	ELSE_24	IF_40	CALL_32
0x400e589	    0x8b0500000000	            mov eax, dword [0x0400e58f] 	      8398	option.c	FUNCTION_49	ELSE_24	IF_40	CALL_32
0x400e58f	      0xe91af7ffff	                           jmp 0x400dcae	      8398	option.c	FUNCTION_49	ELSE_24	IF_40	CALL_32
0x400e594	    0x418b87901500	          mov eax, dword [r15 + 0x1590] 	      8283	option.c	FUNCTION_49	ELSE_11	IF_20	IF_21
0x400e59b	            0x85c0	                           test eax, eax	      8283	option.c	FUNCTION_49	ELSE_11	IF_20	IF_21
0x400e59d	            0x740e	                            je 0x400e5ad	      8283	option.c	FUNCTION_49	ELSE_11	IF_20	IF_21
0x400e59f	    0x48833d000000	               cmp qword [0x0400e5a7], 0	      8283	option.c	FUNCTION_49	ELSE_11	IF_20	IF_21
0x400e5a7	     0xf8547060000	                           jne 0x400ebf4	      8283	option.c	FUNCTION_49	ELSE_11	IF_20	IF_21
0x400e5ad	          0x4c89ff	                            mov rdi, r15	      8288	option.c	FUNCTION_49	ELSE_11	IF_20	CALL_18
0x400e5b0	      0xbe01000000	                              mov esi, 1	      8288	option.c	FUNCTION_49	ELSE_11	IF_20	CALL_18
0x400e5b5	      0xe800000000	                          call 0x400e5ba	      8288	option.c	FUNCTION_49	ELSE_11	IF_20	CALL_18
0x400e5ba	    0x488b3d000000	            mov rdi, qword [0x0400e5c1] 	      8288	option.c	FUNCTION_49	ELSE_11	IF_20	CALL_18
0x400e5c1	    0x8b0500000000	            mov eax, dword [0x0400e5c7] 	      8288	option.c	FUNCTION_49	ELSE_11	IF_20	CALL_18
0x400e5c7	      0xe9e2f6ffff	                           jmp 0x400dcae	      8288	option.c	FUNCTION_49	ELSE_11	IF_20	CALL_18
0x400e5cc	    0x448b8f880200	           mov r9d, dword [rdi + 0x288] 	      8354	option.c	FUNCTION_49	ELSE_20	IF_33	IF_34
0x400e5d3	          0x4585c9	                           test r9d, r9d	      8354	option.c	FUNCTION_49	ELSE_20	IF_33	IF_34
0x400e5d6	     0xf84ccf6ffff	                            je 0x400dca8	      8354	option.c	FUNCTION_49	ELSE_20	IF_33	IF_34
0x400e5dc	            0x31ff	                            xor edi, edi	      8356	option.c	FUNCTION_49	ELSE_20	IF_33	IF_34	CALL_27
0x400e5de	      0xe800000000	                          call 0x400e5e3	      8356	option.c	FUNCTION_49	ELSE_20	IF_33	IF_34	CALL_27
0x400e5e3	    0x488b3d000000	            mov rdi, qword [0x0400e5ea] 	      8357	option.c	FUNCTION_49	ELSE_20	IF_33	IF_34
0x400e5ea	        0x488b4778	            mov rax, qword [rdi + 0x78] 	      8357	option.c	FUNCTION_49	ELSE_20	IF_33	IF_34
0x400e5ee	    0x488987500500	            mov qword [rdi + 0x550], rax	      8357	option.c	FUNCTION_49	ELSE_20	IF_33	IF_34
0x400e5f5	    0x8b0500000000	            mov eax, dword [0x0400e5fb] 	      8357	option.c	FUNCTION_49	ELSE_20	IF_33	IF_34
0x400e5fb	      0xe9aef6ffff	                           jmp 0x400dcae	      8357	option.c	FUNCTION_49	ELSE_20	IF_33	IF_34
0x400e600	    0x8b0500000000	            mov eax, dword [0x0400e606] 	      8319	option.c	FUNCTION_49	ELSE_16	IF_26	IF_27
0x400e606	            0x85c0	                           test eax, eax	      8319	option.c	FUNCTION_49	ELSE_16	IF_26	IF_27
0x400e608	     0xf843a020000	                            je 0x400e848	      8319	option.c	FUNCTION_49	ELSE_16	IF_26	IF_27
0x400e60e	    0xf60500000000	           test byte [0x0400e615], 0x10 	      8321	option.c	FUNCTION_49	ELSE_16	IF_26	IF_27	IF_28
0x400e615	            0x750a	                           jne 0x400e621	      8321	option.c	FUNCTION_49	ELSE_16	IF_26	IF_27	IF_28
0x400e617	    0xc70500000000	               mov dword [0x0400e621], 1	      8322	option.c	FUNCTION_49	ELSE_16	IF_26	IF_27	IF_28
0x400e621	    0xc70500000000	               mov dword [0x0400e62b], 0	      8323	option.c	FUNCTION_49	ELSE_16	IF_26	IF_27
0x400e62b	    0x488b3d000000	            mov rdi, qword [0x0400e632] 	      8323	option.c	FUNCTION_49	ELSE_16	IF_26	IF_27
0x400e632	    0x8b0500000000	            mov eax, dword [0x0400e638] 	      8323	option.c	FUNCTION_49	ELSE_16	IF_26	IF_27
0x400e638	      0xe971f6ffff	                           jmp 0x400dcae	      8323	option.c	FUNCTION_49	ELSE_16	IF_26	IF_27
0x400e63d	    0x448b1d000000	           mov r11d, dword [0x0400e644] 	      8479	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55
0x400e644	          0x4585db	                         test r11d, r11d	      8479	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55
0x400e647	     0xf855bf6ffff	                           jne 0x400dca8	      8479	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55
0x400e64d	    0x448b15000000	           mov r10d, dword [0x0400e654] 	      8481	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	IF_56
0x400e654	          0x4585d2	                         test r10d, r10d	      8481	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	IF_56
0x400e657	     0xf852a040000	                           jne 0x400ea87	      8481	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	IF_56
0x400e65d	          0x4585f6	                         test r14d, r14d	      8483	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	ELSE_35	IF_57
0x400e660	     0xf8442f6ffff	                            je 0x400dca8	      8483	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	ELSE_35	IF_57
0x400e666	    0x488b3d000000	            mov rdi, qword [0x0400e66d] 	      8484	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	ELSE_35	IF_57
0x400e66d	      0xe800000000	                          call 0x400e672	      8484	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	ELSE_35	IF_57
0x400e672	    0x488b3d000000	            mov rdi, qword [0x0400e679] 	      8484	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	ELSE_35	IF_57
0x400e679	    0x8b0500000000	            mov eax, dword [0x0400e67f] 	      8484	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	ELSE_35	IF_57
0x400e67f	      0xe92af6ffff	                           jmp 0x400dcae	      8484	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	ELSE_35	IF_57
0x400e684	         0xf1f4000	                         nop dword [rax]	      8484	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	ELSE_35	IF_57
0x400e688	    0x833d00000000	               cmp dword [0x0400e68f], 2	      5380	option.c	FUNCTION_21	IF_1
0x400e68f	     0xf8413f6ffff	                            je 0x400dca8	      5380	option.c	FUNCTION_21	IF_1
0x400e695	    0x8b0500000000	            mov eax, dword [0x0400e69b] 	      5382	option.c	FUNCTION_21	IF_1
0x400e69b	            0x85c0	                           test eax, eax	      5382	option.c	FUNCTION_21	IF_1
0x400e69d	     0xf8505f6ffff	                           jne 0x400dca8	      5382	option.c	FUNCTION_21	IF_1
0x400e6a3	      0xe800000000	                          call 0x400e6a8	      5386	option.c	FUNCTION_21	IF_1	CALL_1
0x400e6a8	    0x8b0500000000	            mov eax, dword [0x0400e6ae] 	      5394	option.c	FUNCTION_21	IF_1	ELSE_1	IF_4
0x400e6ae	            0x85c0	                           test eax, eax	      5394	option.c	FUNCTION_21	IF_1	ELSE_1	IF_4
0x400e6b0	     0xf85e6f5ffff	                           jne 0x400dc9c	      5394	option.c	FUNCTION_21	IF_1	ELSE_1	IF_4
0x400e6b6	      0xbf01000000	                              mov edi, 1	      5395	option.c	FUNCTION_21	IF_1	ELSE_1	CALL_3
0x400e6bb	      0xe800000000	                          call 0x400e6c0	      5395	option.c	FUNCTION_21	IF_1	ELSE_1	CALL_3
0x400e6c0	    0x488b3d000000	            mov rdi, qword [0x0400e6c7] 	      5395	option.c	FUNCTION_21	IF_1	ELSE_1	CALL_3
0x400e6c7	    0x8b0500000000	            mov eax, dword [0x0400e6cd] 	      5395	option.c	FUNCTION_21	IF_1	ELSE_1	CALL_3
0x400e6cd	      0xe9dcf5ffff	                           jmp 0x400dcae	      5395	option.c	FUNCTION_21	IF_1	ELSE_1	CALL_3
0x400e6d2	    0x833d00000000	               cmp dword [0x0400e6d9], 2	      5380	option.c	FUNCTION_21	IF_1
0x400e6d9	     0xf84c9f5ffff	                            je 0x400dca8	      5380	option.c	FUNCTION_21	IF_1
0x400e6df	    0x8b0500000000	            mov eax, dword [0x0400e6e5] 	      5382	option.c	FUNCTION_21	IF_1
0x400e6e5	            0x85c0	                           test eax, eax	      5382	option.c	FUNCTION_21	IF_1
0x400e6e7	     0xf85bbf5ffff	                           jne 0x400dca8	      5382	option.c	FUNCTION_21	IF_1
0x400e6ed	      0xe800000000	                          call 0x400e6f2	      5386	option.c	FUNCTION_21	IF_1	CALL_1
0x400e6f2	    0x8b0500000000	            mov eax, dword [0x0400e6f8] 	      5389	option.c	FUNCTION_21	IF_1	IF_2	IF_3
0x400e6f8	            0x85c0	                           test eax, eax	      5389	option.c	FUNCTION_21	IF_1	IF_2	IF_3
0x400e6fa	     0xf859cf5ffff	                           jne 0x400dc9c	      5389	option.c	FUNCTION_21	IF_1	IF_2	IF_3
0x400e700	      0xbf02000000	                              mov edi, 2	      5390	option.c	FUNCTION_21	IF_1	IF_2	CALL_2
0x400e705	      0xe800000000	                          call 0x400e70a	      5390	option.c	FUNCTION_21	IF_1	IF_2	CALL_2
0x400e70a	    0x488b3d000000	            mov rdi, qword [0x0400e711] 	      5390	option.c	FUNCTION_21	IF_1	IF_2	CALL_2
0x400e711	    0x8b0500000000	            mov eax, dword [0x0400e717] 	      5390	option.c	FUNCTION_21	IF_1	IF_2	CALL_2
0x400e717	      0xe992f5ffff	                           jmp 0x400dcae	      5390	option.c	FUNCTION_21	IF_1	IF_2	CALL_2
0x400e71c	    0x448b0d000000	            mov r9d, dword [0x0400e723] 	      8499	option.c	FUNCTION_49	ELSE_37	IF_59
0x400e723	          0x4585c9	                           test r9d, r9d	      8499	option.c	FUNCTION_49	ELSE_37	IF_59
0x400e726	     0xf847cf5ffff	                            je 0x400dca8	      8499	option.c	FUNCTION_49	ELSE_37	IF_59
0x400e72c	      0xe800000000	                          call 0x400e731	      8499	option.c	FUNCTION_49	ELSE_37	IF_59
0x400e731	    0x488b3d000000	            mov rdi, qword [0x0400e738] 	      8499	option.c	FUNCTION_49	ELSE_37	IF_59
0x400e738	    0x8b0500000000	            mov eax, dword [0x0400e73e] 	      8499	option.c	FUNCTION_49	ELSE_37	IF_59
0x400e73e	      0xe96bf5ffff	                           jmp 0x400dcae	      8499	option.c	FUNCTION_49	ELSE_37	IF_59
0x400e743	    0x41c787541700	            mov dword [r15 + 0x1754], 0 	      8213	option.c	FUNCTION_49	ELSE_3	IF_8	IF_10
0x400e74e	      0xe9bdf9ffff	                           jmp 0x400e110	      8213	option.c	FUNCTION_49	ELSE_3	IF_8	IF_10
0x400e753	    0xc78754020000	              mov dword [rdi + 0x254], 0	      8671	option.c	FUNCTION_49	IF_74	ELSE_44	IF_80	IF_81
0x400e75d	      0xe800000000	                          call 0x400e762	      8672	option.c	FUNCTION_49	IF_74	ELSE_44	IF_80	IF_81	CALL_69
0x400e762	      0xe96dfaffff	                           jmp 0x400e1d4	      8672	option.c	FUNCTION_49	IF_74	ELSE_44	IF_80	IF_81	CALL_69
0x400e767	    0xc70500000000	               mov dword [0x0400e771], 1	      8626	option.c	FUNCTION_49	IF_74	IF_75	IF_76	IF_78
0x400e771	      0xe800000000	                          call 0x400e776	      8627	option.c	FUNCTION_49	IF_74	IF_75	IF_76	IF_78	CALL_57
0x400e776	      0xe90ff9ffff	                           jmp 0x400e08a	      8627	option.c	FUNCTION_49	IF_74	IF_75	IF_76	IF_78	CALL_57
0x400e77b	    0xc78754020000	              mov dword [rdi + 0x254], 1	      8619	option.c	FUNCTION_49	IF_74	IF_75	IF_76	IF_77
0x400e785	      0xe800000000	                          call 0x400e78a	      8620	option.c	FUNCTION_49	IF_74	IF_75	IF_76	IF_77	CALL_56
0x400e78a	      0xe9ebf8ffff	                           jmp 0x400e07a	      8620	option.c	FUNCTION_49	IF_74	IF_75	IF_76	IF_77	CALL_56
0x400e78f	    0x448b05000000	            mov r8d, dword [0x0400e796] 	      8521	option.c	FUNCTION_49	ELSE_39	IF_62	IF_63
0x400e796	          0x4585c0	                           test r8d, r8d	      8521	option.c	FUNCTION_49	ELSE_39	IF_62	IF_63
0x400e799	     0xf856f040000	                           jne 0x400ec0e	      8521	option.c	FUNCTION_49	ELSE_39	IF_62	IF_63
0x400e79f	    0xf60500000000	           test byte [0x0400e7a6], 0x10 	      8523	option.c	FUNCTION_49	ELSE_39	IF_62	ELSE_40	IF_64
0x400e7a6	     0xf84fcf4ffff	                            je 0x400dca8	      8523	option.c	FUNCTION_49	ELSE_39	IF_62	ELSE_40	IF_64
0x400e7ac	            0x31ff	                            xor edi, edi	      8526	option.c	FUNCTION_49	ELSE_39	IF_62	ELSE_40	IF_64
0x400e7ae	    0x4983bf781200	            cmp qword [r15 + 0x1278], 2 	      8526	option.c	FUNCTION_49	ELSE_39	IF_62	ELSE_40	IF_64
0x400e7b6	        0x400f94c7	                                sete dil	      8526	option.c	FUNCTION_49	ELSE_39	IF_62	ELSE_40	IF_64
0x400e7ba	      0xe800000000	                          call 0x400e7bf	      8526	option.c	FUNCTION_49	ELSE_39	IF_62	ELSE_40	IF_64
0x400e7bf	    0x488b3d000000	            mov rdi, qword [0x0400e7c6] 	      8526	option.c	FUNCTION_49	ELSE_39	IF_62	ELSE_40	IF_64
0x400e7c6	    0x8b0500000000	            mov eax, dword [0x0400e7cc] 	      8526	option.c	FUNCTION_49	ELSE_39	IF_62	ELSE_40	IF_64
0x400e7cc	      0xe9ddf4ffff	                           jmp 0x400dcae	      8526	option.c	FUNCTION_49	ELSE_39	IF_62	ELSE_40	IF_64
0x400e7d1	          0x4585f6	                         test r14d, r14d	      8469	option.c	FUNCTION_49	ELSE_32	IF_51	IF_52
0x400e7d4	     0xf85c9000000	                           jne 0x400e8a3	      8469	option.c	FUNCTION_49	ELSE_32	IF_51	IF_52
0x400e7da	    0x48c705000000	               mov qword [0x0400e7e5], 0	      8470	option.c	FUNCTION_49	ELSE_32	IF_51	IF_52
0x400e7e5	      0xb800000000	                              mov eax, 0	      8470	option.c	FUNCTION_49	ELSE_32	IF_51	IF_52
0x400e7ea	      0xe96ffdffff	                           jmp 0x400e55e	      8470	option.c	FUNCTION_49	ELSE_32	IF_51	IF_52
0x400e7ef	    0x8bb768020000	           mov esi, dword [rdi + 0x268] 	      8534	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66
0x400e7f5	            0x85f6	                           test esi, esi	      8534	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66
0x400e7f7	     0xf84abf4ffff	                            je 0x400dca8	      8534	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66
0x400e7fd	      0xe800000000	                          call 0x400e802	      8536	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66	CALL_49
0x400e802	          0x4885c0	                           test rax, rax	      8537	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66	IF_67
0x400e805	     0xf8491f4ffff	                            je 0x400dc9c	      8537	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66	IF_67
0x400e80b	      0xba05000000	                              mov edx, 5	      8538	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66	CALL_51
0x400e810	          0x4889c6	                            mov rsi, rax	      8538	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66	CALL_51
0x400e813	            0x31ff	                            xor edi, edi	      8538	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66	CALL_51
0x400e815	      0xe800000000	                          call 0x400e81a	      8538	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66	CALL_51
0x400e81a	          0x4889c7	                            mov rdi, rax	      8538	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66	CALL_51
0x400e81d	      0xe800000000	                          call 0x400e822	      8538	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66	CALL_51
0x400e822	    0x488b3d000000	            mov rdi, qword [0x0400e829] 	      8538	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66	CALL_51
0x400e829	    0x8b0500000000	            mov eax, dword [0x0400e82f] 	      8538	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66	CALL_51
0x400e82f	      0xe97af4ffff	                           jmp 0x400dcae	      8538	option.c	FUNCTION_49	ELSE_41	IF_65	IF_66	CALL_51
0x400e834	          0x4c89ff	                            mov rdi, r15	      8418	option.c	FUNCTION_49	ELSE_27	IF_43	CALL_35
0x400e837	      0xe800000000	                          call 0x400e83c	      8418	option.c	FUNCTION_49	ELSE_27	IF_43	CALL_35
0x400e83c	    0x488b3d000000	            mov rdi, qword [0x0400e843] 	      8418	option.c	FUNCTION_49	ELSE_27	IF_43	CALL_35
0x400e843	      0xe984fbffff	                           jmp 0x400e3cc	      8418	option.c	FUNCTION_49	ELSE_27	IF_43	CALL_35
0x400e848	          0x4585f6	                         test r14d, r14d	      8326	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29
0x400e84b	     0xf844bf4ffff	                            je 0x400dc9c	      8326	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29
0x400e851	    0x448b3d000000	           mov r15d, dword [0x0400e858] 	      8330	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29	IF_30
0x400e858	    0xc70500000000	               mov dword [0x0400e862], 0	      8328	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29
0x400e862	    0xc70500000000	               mov dword [0x0400e86c], 1	      8329	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29
0x400e86c	          0x4585ff	                         test r15d, r15d	      8330	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29	IF_30
0x400e86f	            0x7416	                            je 0x400e887	      8330	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29	IF_30
0x400e871	    0x448b1d000000	           mov r11d, dword [0x0400e878] 	      8330	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29	IF_30
0x400e878	          0x4585db	                         test r11d, r11d	      8330	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29	IF_30
0x400e87b	            0x740a	                            je 0x400e887	      8330	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29	IF_30
0x400e87d	    0xc70500000000	               mov dword [0x0400e887], 1	      8331	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29	IF_30
0x400e887	    0xc70500000000	               mov dword [0x0400e891], 0	      8332	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29
0x400e891	    0x488b3d000000	            mov rdi, qword [0x0400e898] 	      8332	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29
0x400e898	    0x8b0500000000	            mov eax, dword [0x0400e89e] 	      8332	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29
0x400e89e	      0xe90bf4ffff	                           jmp 0x400dcae	      8332	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29
0x400e8a3	    0x488b05000000	            mov rax, qword [0x0400e8aa] 	      8332	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29
0x400e8aa	      0xe9affcffff	                           jmp 0x400e55e	      8332	option.c	FUNCTION_49	ELSE_16	IF_26	ELSE_17	IF_29
0x400e8af	    0x418bb7081400	          mov esi, dword [r15 + 0x1408] 	      8267	option.c	FUNCTION_49	ELSE_9	IF_18	CALL_14
0x400e8b6	          0x4489e2	                           mov edx, r12d	      8267	option.c	FUNCTION_49	ELSE_9	IF_18	CALL_14
0x400e8b9	          0x4489f7	                           mov edi, r14d	      8267	option.c	FUNCTION_49	ELSE_9	IF_18	CALL_14
0x400e8bc	      0xe800000000	                          call 0x400e8c1	      8267	option.c	FUNCTION_49	ELSE_9	IF_18	CALL_14
0x400e8c1	      0xe94af8ffff	                           jmp 0x400e110	      8267	option.c	FUNCTION_49	ELSE_9	IF_18	CALL_14
0x400e8c6	            0x31ff	                            xor edi, edi	      8346	option.c	FUNCTION_49	ELSE_19	IF_32	CALL_26
0x400e8c8	      0xe800000000	                          call 0x400e8cd	      8346	option.c	FUNCTION_49	ELSE_19	IF_32	CALL_26
0x400e8cd	    0x488b3d000000	            mov rdi, qword [0x0400e8d4] 	      8346	option.c	FUNCTION_49	ELSE_19	IF_32	CALL_26
0x400e8d4	    0x8b0500000000	            mov eax, dword [0x0400e8da] 	      8346	option.c	FUNCTION_49	ELSE_19	IF_32	CALL_26
0x400e8da	      0xe9cff3ffff	                           jmp 0x400dcae	      8346	option.c	FUNCTION_49	ELSE_19	IF_32	CALL_26
0x400e8df	    0x8b0d00000000	            mov ecx, dword [0x0400e8e5] 	     12079	option.c	FUNCTION_99	IF_1
0x400e8e5	            0x85c9	                           test ecx, ecx	     12079	option.c	FUNCTION_99	IF_1
0x400e8e7	            0x89ce	                            mov esi, ecx	     12079	option.c	FUNCTION_99	IF_1
0x400e8e9	     0xf84bf010000	                            je 0x400eaae	     12079	option.c	FUNCTION_99	IF_1
0x400e8ef	    0x8b0500000000	            mov eax, dword [0x0400e8f5] 	     12085	option.c	FUNCTION_99	IF_1	IF_2
0x400e8f5	            0x85c0	                           test eax, eax	     12085	option.c	FUNCTION_99	IF_1	IF_2
0x400e8f7	     0xf842a030000	                            je 0x400ec27	     12085	option.c	FUNCTION_99	IF_1	IF_2
0x400e8fd	    0x8b1500000000	            mov edx, dword [0x0400e903] 	     12085	option.c	FUNCTION_99	IF_1	IF_2
0x400e903	    0x488b05000000	            mov rax, qword [0x0400e90a] 	     12085	option.c	FUNCTION_99	IF_1	IF_2
0x400e90a	            0xeb3d	                           jmp 0x400e949	     12085	option.c	FUNCTION_99	IF_1	IF_2
0x400e90c	         0xf1f4000	                         nop dword [rax]	     12085	option.c	FUNCTION_99	IF_1	IF_2
0x400e910	    0x48c780b81500	            mov qword [rax + 0x15b8], 0 	     12122	option.c	FUNCTION_99	IF_1	FUNCTION_2
0x400e91b	    0x48c780d01500	            mov qword [rax + 0x15d0], 0 	     12123	option.c	FUNCTION_99	IF_1	FUNCTION_2
0x400e926	    0x48c780781500	            mov qword [rax + 0x1578], 0 	     12124	option.c	FUNCTION_99	IF_1	FUNCTION_2
0x400e931	    0xc780ec130000	            mov dword [rax + 0x13ec], 0 	     12125	option.c	FUNCTION_99	IF_1	FUNCTION_2
0x400e93b	    0xc78078140000	            mov dword [rax + 0x1478], 0 	     12126	option.c	FUNCTION_99	IF_1	FUNCTION_2
0x400e945	        0x488b4068	            mov rax, qword [rax + 0x68] 	     12120	option.c	FUNCTION_99	IF_1
0x400e949	          0x4885c0	                           test rax, rax	     12120	option.c	FUNCTION_99	IF_1
0x400e94c	            0x75c2	                           jne 0x400e910	     12120	option.c	FUNCTION_99	IF_1
0x400e94e	            0x85d2	                           test edx, edx	     12133	option.c	FUNCTION_99	IF_1	IF_3
0x400e950	    0xc70500000000	               mov dword [0x0400e95a], 0	     12130	option.c	FUNCTION_99	IF_1
0x400e95a	    0xc70500000000	               mov dword [0x0400e964], 0	     12131	option.c	FUNCTION_99	IF_1
0x400e964	            0x740b	                            je 0x400e971	     12133	option.c	FUNCTION_99	IF_1	IF_3
0x400e966	      0xe800000000	                          call 0x400e96b	     12134	option.c	FUNCTION_99	IF_1	CALL_1
0x400e96b	    0x8b0d00000000	            mov ecx, dword [0x0400e971] 	     12134	option.c	FUNCTION_99	IF_1	CALL_1
0x400e971	    0xc70500000000	               mov dword [0x0400e97b], 0	     12135	option.c	FUNCTION_99	IF_1
0x400e97b	    0xc70500000000	               mov dword [0x0400e985], 0	     12138	option.c	FUNCTION_99	IF_1
0x400e985	            0x31c0	                            xor eax, eax	     12145	option.c	FUNCTION_99	IF_1
0x400e987	    0xc70500000000	               mov dword [0x0400e991], 0	     12139	option.c	FUNCTION_99	IF_1
0x400e991	    0x48c705000000	               mov qword [0x0400e99c], 0	     12142	option.c	FUNCTION_99	IF_1
0x400e99c	    0x48c705000000	               mov qword [0x0400e9a7], 0	     12143	option.c	FUNCTION_99	IF_1
0x400e9a7	    0x48c705000000	               mov qword [0x0400e9b2], 0	     12144	option.c	FUNCTION_99	IF_1
0x400e9b2	    0xc70500000000	               mov dword [0x0400e9bc], 0	     12145	option.c	FUNCTION_99	IF_1
0x400e9bc	    0x890d00000000	            mov dword [0x0400e9c2], ecx 	     12183	option.c	FUNCTION_99
0x400e9c2	    0x488b3d000000	            mov rdi, qword [0x0400e9c9] 	     12183	option.c	FUNCTION_99
0x400e9c9	      0xe9e0f2ffff	                           jmp 0x400dcae	     12183	option.c	FUNCTION_99
0x400e9ce	    0x488b3d000000	            mov rdi, qword [0x0400e9d5] 	      8296	option.c	FUNCTION_49	ELSE_13	IF_22	CALL_19
0x400e9d5	      0xbe73000000	                           mov esi, 0x73	      8296	option.c	FUNCTION_49	ELSE_13	IF_22	CALL_19
0x400e9da	      0xe800000000	                          call 0x400e9df	      8296	option.c	FUNCTION_49	ELSE_13	IF_22	CALL_19
0x400e9df	          0x4989c7	                            mov r15, rax	      8296	option.c	FUNCTION_49	ELSE_13	IF_22	CALL_19
0x400e9e2	    0x8b0500000000	            mov eax, dword [0x0400e9e8] 	      8299	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23
0x400e9e8	            0x85c0	                           test eax, eax	      8299	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23
0x400e9ea	     0xf84c7010000	                            je 0x400ebb7	      8299	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23
0x400e9f0	          0x4d85ff	                           test r15, r15	      8299	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23
0x400e9f3	     0xf85a3f2ffff	                           jne 0x400dc9c	      8299	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23
0x400e9f9	    0x488b35000000	            mov rsi, qword [0x0400ea00] 	       110	string3.h	FUNCTION_143	CALL_3
0x400ea00	    0x488b3d000000	            mov rdi, qword [0x0400ea07] 	       110	string3.h	FUNCTION_143	CALL_3
0x400ea07	      0xe800000000	                          call 0x400ea0c	       110	string3.h	FUNCTION_143	CALL_3
0x400ea0c	    0x488b3d000000	            mov rdi, qword [0x0400ea13] 	       148	string3.h	FUNCTION_147	CALL_3
0x400ea13	      0xbe00000000	                              mov esi, 0	       148	string3.h	FUNCTION_147	CALL_3
0x400ea18	      0xe800000000	                          call 0x400ea1d	       148	string3.h	FUNCTION_147	CALL_3
0x400ea1d	    0x488b15000000	            mov rdx, qword [0x0400ea24] 	      8303	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_22
0x400ea24	      0xbf00000000	                              mov edi, 0	      8303	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_22
0x400ea29	          0x4531c0	                            xor r8d, r8d	      8303	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_22
0x400ea2c	      0xb901000000	                              mov ecx, 1	      8303	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_22
0x400ea31	          0x83ceff	                      or esi, 0xffffffff	      8303	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_22
0x400ea34	      0xe800000000	                          call 0x400ea39	      8303	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_22
0x400ea39	    0x488b3d000000	            mov rdi, qword [0x0400ea40] 	      8303	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_22
0x400ea40	    0x8b0500000000	            mov eax, dword [0x0400ea46] 	      8303	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_22
0x400ea46	      0xe963f2ffff	                           jmp 0x400dcae	      8303	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_22
0x400ea4b	       0xf1f440000	                   nop dword [rax + rax]	      8303	option.c	FUNCTION_49	ELSE_13	IF_22	IF_23	CALL_22
0x400ea50	      0xe800000000	                          call 0x400ea55	      8508	option.c	FUNCTION_49	ELSE_38	IF_60	CALL_44
0x400ea55	    0x488b3d000000	            mov rdi, qword [0x0400ea5c] 	      8510	option.c	FUNCTION_49	ELSE_38	IF_60	IF_61	CALL_45
0x400ea5c	      0xe800000000	                          call 0x400ea61	      8510	option.c	FUNCTION_49	ELSE_38	IF_60	IF_61	CALL_45
0x400ea61	            0x85c0	                           test eax, eax	      8510	option.c	FUNCTION_49	ELSE_38	IF_60	IF_61	CALL_45
0x400ea63	    0x488b3d000000	            mov rdi, qword [0x0400ea6a] 	      8511	option.c	FUNCTION_49	ELSE_38	IF_60	CALL_46
0x400ea6a	     0xf8438f2ffff	                            je 0x400dca8	      8510	option.c	FUNCTION_49	ELSE_38	IF_60	IF_61	CALL_45
0x400ea70	      0xe800000000	                          call 0x400ea75	      8511	option.c	FUNCTION_49	ELSE_38	IF_60	CALL_46
0x400ea75	    0x488b3d000000	            mov rdi, qword [0x0400ea7c] 	      8511	option.c	FUNCTION_49	ELSE_38	IF_60	CALL_46
0x400ea7c	    0x8b0500000000	            mov eax, dword [0x0400ea82] 	      8511	option.c	FUNCTION_49	ELSE_38	IF_60	CALL_46
0x400ea82	      0xe927f2ffff	                           jmp 0x400dcae	      8511	option.c	FUNCTION_49	ELSE_38	IF_60	CALL_46
0x400ea87	          0x4585f6	                         test r14d, r14d	      8481	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	IF_56
0x400ea8a	     0xf8518f2ffff	                           jne 0x400dca8	      8481	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	IF_56
0x400ea90	    0x488b3d000000	            mov rdi, qword [0x0400ea97] 	      8482	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	CALL_41
0x400ea97	      0xe800000000	                          call 0x400ea9c	      8482	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	CALL_41
0x400ea9c	    0x488b3d000000	            mov rdi, qword [0x0400eaa3] 	      8482	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	CALL_41
0x400eaa3	    0x8b0500000000	            mov eax, dword [0x0400eaa9] 	      8482	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	CALL_41
0x400eaa9	      0xe900f2ffff	                           jmp 0x400dcae	      8482	option.c	FUNCTION_49	ELSE_34	IF_54	IF_55	CALL_41
0x400eaae	    0x8b0d00000000	            mov ecx, dword [0x0400eab4] 	     12151	option.c	FUNCTION_99	ELSE_1	IF_4
0x400eab4	    0x8b0500000000	            mov eax, dword [0x0400eaba] 	     12151	option.c	FUNCTION_99	ELSE_1	IF_4
0x400eaba	            0x85c9	                           test ecx, ecx	     12151	option.c	FUNCTION_99	ELSE_1	IF_4
0x400eabc	     0xf84fafeffff	                            je 0x400e9bc	     12151	option.c	FUNCTION_99	ELSE_1	IF_4
0x400eac2	    0x488b05000000	            mov rax, qword [0x0400eac9] 	     12154	option.c	FUNCTION_99	ELSE_1	IF_4
0x400eac9	          0x4885c0	                           test rax, rax	     12154	option.c	FUNCTION_99	ELSE_1	IF_4
0x400eacc	            0x744b	                            je 0x400eb19	     12154	option.c	FUNCTION_99	ELSE_1	IF_4
0x400eace	    0x488b90c81500	          mov rdx, qword [rax + 0x15c8] 	     12156	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x400ead5	    0x488990b81500	          mov qword [rax + 0x15b8], rdx 	     12156	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x400eadc	    0x488b90e01500	          mov rdx, qword [rax + 0x15e0] 	     12157	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x400eae3	    0x488990d01500	          mov qword [rax + 0x15d0], rdx 	     12157	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x400eaea	    0x488b90801500	          mov rdx, qword [rax + 0x1580] 	     12158	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x400eaf1	    0x488990781500	          mov qword [rax + 0x1578], rdx 	     12158	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x400eaf8	    0x8b90f0130000	          mov edx, dword [rax + 0x13f0] 	     12159	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x400eafe	    0x8990ec130000	          mov dword [rax + 0x13ec], edx 	     12159	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x400eb04	    0x8b9080140000	          mov edx, dword [rax + 0x1480] 	     12160	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x400eb0a	    0x899078140000	          mov dword [rax + 0x1478], edx 	     12160	option.c	FUNCTION_99	ELSE_1	IF_4	FUNCTION_3
0x400eb10	        0x488b4068	            mov rax, qword [rax + 0x68] 	     12154	option.c	FUNCTION_99	ELSE_1	IF_4
0x400eb14	          0x4885c0	                           test rax, rax	     12154	option.c	FUNCTION_99	ELSE_1	IF_4
0x400eb17	            0x75b5	                           jne 0x400eace	     12154	option.c	FUNCTION_99	ELSE_1	IF_4
0x400eb19	    0x8b0500000000	            mov eax, dword [0x0400eb1f] 	     12164	option.c	FUNCTION_99	ELSE_1	IF_4
0x400eb1f	    0x890500000000	            mov dword [0x0400eb25], eax 	     12164	option.c	FUNCTION_99	ELSE_1	IF_4
0x400eb25	    0x8b0500000000	            mov eax, dword [0x0400eb2b] 	     12165	option.c	FUNCTION_99	ELSE_1	IF_4
0x400eb2b	    0x890500000000	            mov dword [0x0400eb31], eax 	     12165	option.c	FUNCTION_99	ELSE_1	IF_4
0x400eb31	    0x8b0500000000	            mov eax, dword [0x0400eb37] 	     12167	option.c	FUNCTION_99	ELSE_1	IF_4	IF_5
0x400eb37	    0x390500000000	            cmp dword [0x0400eb3d], eax 	     12167	option.c	FUNCTION_99	ELSE_1	IF_4	IF_5
0x400eb3d	            0x7411	                            je 0x400eb50	     12167	option.c	FUNCTION_99	ELSE_1	IF_4	IF_5
0x400eb3f	      0xe800000000	                          call 0x400eb44	     12168	option.c	FUNCTION_99	ELSE_1	IF_4	CALL_2
0x400eb44	    0x8b3500000000	            mov esi, dword [0x0400eb4a] 	     12168	option.c	FUNCTION_99	ELSE_1	IF_4	CALL_2
0x400eb4a	    0x8b0500000000	            mov eax, dword [0x0400eb50] 	     12168	option.c	FUNCTION_99	ELSE_1	IF_4	CALL_2
0x400eb50	    0x8b1500000000	            mov edx, dword [0x0400eb56] 	     12176	option.c	FUNCTION_99	ELSE_1	IF_4
0x400eb56	    0x890500000000	            mov dword [0x0400eb5c], eax 	     12169	option.c	FUNCTION_99	ELSE_1	IF_4
0x400eb5c	            0x89f1	                            mov ecx, esi	     12169	option.c	FUNCTION_99	ELSE_1	IF_4
0x400eb5e	    0x8b0500000000	            mov eax, dword [0x0400eb64] 	     12172	option.c	FUNCTION_99	ELSE_1	IF_4
0x400eb64	    0x891500000000	            mov dword [0x0400eb6a], edx 	     12176	option.c	FUNCTION_99	ELSE_1	IF_4
0x400eb6a	    0x8b1500000000	            mov edx, dword [0x0400eb70] 	     12177	option.c	FUNCTION_99	ELSE_1	IF_4
0x400eb70	    0x890500000000	            mov dword [0x0400eb76], eax 	     12172	option.c	FUNCTION_99	ELSE_1	IF_4
0x400eb76	    0x8b0500000000	            mov eax, dword [0x0400eb7c] 	     12173	option.c	FUNCTION_99	ELSE_1	IF_4
0x400eb7c	    0x891500000000	            mov dword [0x0400eb82], edx 	     12177	option.c	FUNCTION_99	ELSE_1	IF_4
0x400eb82	    0x488b15000000	            mov rdx, qword [0x0400eb89] 	     12178	option.c	FUNCTION_99	ELSE_1	IF_4
0x400eb89	    0x890500000000	            mov dword [0x0400eb8f], eax 	     12173	option.c	FUNCTION_99	ELSE_1	IF_4
0x400eb8f	    0x488915000000	            mov qword [0x0400eb96], rdx 	     12178	option.c	FUNCTION_99	ELSE_1	IF_4
0x400eb96	    0x488b15000000	            mov rdx, qword [0x0400eb9d] 	     12179	option.c	FUNCTION_99	ELSE_1	IF_4
0x400eb9d	    0x488915000000	            mov qword [0x0400eba4], rdx 	     12179	option.c	FUNCTION_99	ELSE_1	IF_4
0x400eba4	    0x488b15000000	            mov rdx, qword [0x0400ebab] 	     12180	option.c	FUNCTION_99	ELSE_1	IF_4
0x400ebab	    0x488915000000	            mov qword [0x0400ebb2], rdx 	     12180	option.c	FUNCTION_99	ELSE_1	IF_4
0x400ebb2	      0xe905feffff	                           jmp 0x400e9bc	     12180	option.c	FUNCTION_99	ELSE_1	IF_4
0x400ebb7	          0x4d85ff	                           test r15, r15	      8306	option.c	FUNCTION_49	ELSE_13	IF_22	ELSE_14	IF_24
0x400ebba	     0xf84dcf0ffff	                            je 0x400dc9c	      8306	option.c	FUNCTION_49	ELSE_13	IF_22	ELSE_14	IF_24
0x400ebc0	        0x498d7701	                      lea rsi, [r15 + 1]	      8307	option.c	FUNCTION_49	ELSE_13	IF_22	ELSE_14	IF_24
0x400ebc4	          0x4889f7	                            mov rdi, rsi	      8307	option.c	FUNCTION_49	ELSE_13	IF_22	ELSE_14	IF_24
0x400ebc7	      0x4889742408	                mov qword [rsp + 8], rsi	      8307	option.c	FUNCTION_49	ELSE_13	IF_22	ELSE_14	IF_24
0x400ebcc	      0xe800000000	                          call 0x400ebd1	      8307	option.c	FUNCTION_49	ELSE_13	IF_22	ELSE_14	IF_24
0x400ebd1	      0x488b742408	                mov rsi, qword [rsp + 8]	        59	string3.h	FUNCTION_138	CALL_3
0x400ebd6	        0x488d5001	                      lea rdx, [rax + 1]	        59	string3.h	FUNCTION_138	CALL_3
0x400ebda	          0x4c89ff	                            mov rdi, r15	        59	string3.h	FUNCTION_138	CALL_3
0x400ebdd	      0xe800000000	                          call 0x400ebe2	        59	string3.h	FUNCTION_138	CALL_3
0x400ebe2	    0x488b3d000000	            mov rdi, qword [0x0400ebe9] 	        59	string3.h	FUNCTION_138	CALL_3
0x400ebe9	    0x8b0500000000	            mov eax, dword [0x0400ebef] 	        59	string3.h	FUNCTION_138	CALL_3
0x400ebef	      0xe9baf0ffff	                           jmp 0x400dcae	        59	string3.h	FUNCTION_138	CALL_3
0x400ebf4	          0x4c89ff	                            mov rdi, r15	      8284	option.c	FUNCTION_49	ELSE_11	IF_20	CALL_17
0x400ebf7	      0xe800000000	                          call 0x400ebfc	      8284	option.c	FUNCTION_49	ELSE_11	IF_20	CALL_17
0x400ebfc	    0x488b3d000000	            mov rdi, qword [0x0400ec03] 	      8284	option.c	FUNCTION_49	ELSE_11	IF_20	CALL_17
0x400ec03	    0x8b0500000000	            mov eax, dword [0x0400ec09] 	      8284	option.c	FUNCTION_49	ELSE_11	IF_20	CALL_17
0x400ec09	      0xe9a0f0ffff	                           jmp 0x400dcae	      8284	option.c	FUNCTION_49	ELSE_11	IF_20	CALL_17
0x400ec0e	            0x31ff	                            xor edi, edi	      8522	option.c	FUNCTION_49	ELSE_39	IF_62	CALL_47
0x400ec10	      0xe800000000	                          call 0x400ec15	      8522	option.c	FUNCTION_49	ELSE_39	IF_62	CALL_47
0x400ec15	    0x488b3d000000	            mov rdi, qword [0x0400ec1c] 	      8522	option.c	FUNCTION_49	ELSE_39	IF_62	CALL_47
0x400ec1c	    0x8b0500000000	            mov eax, dword [0x0400ec22] 	      8522	option.c	FUNCTION_49	ELSE_39	IF_62	CALL_47
0x400ec22	      0xe987f0ffff	                           jmp 0x400dcae	      8522	option.c	FUNCTION_49	ELSE_39	IF_62	CALL_47
0x400ec27	    0x488b05000000	            mov rax, qword [0x0400ec2e] 	     12088	option.c	FUNCTION_99	IF_1	IF_2
0x400ec2e	          0x4885c0	                           test rax, rax	     12088	option.c	FUNCTION_99	IF_1	IF_2
0x400ec31	          0x4889c2	                            mov rdx, rax	     12088	option.c	FUNCTION_99	IF_1	IF_2
0x400ec34	            0x744b	                            je 0x400ec81	     12088	option.c	FUNCTION_99	IF_1	IF_2
0x400ec36	    0x488bb2b81500	          mov rsi, qword [rdx + 0x15b8] 	     12090	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x400ec3d	    0x4889b2c81500	          mov qword [rdx + 0x15c8], rsi 	     12090	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x400ec44	    0x488bb2d01500	          mov rsi, qword [rdx + 0x15d0] 	     12091	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x400ec4b	    0x4889b2e01500	          mov qword [rdx + 0x15e0], rsi 	     12091	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x400ec52	    0x488bb2781500	          mov rsi, qword [rdx + 0x1578] 	     12092	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x400ec59	    0x4889b2801500	          mov qword [rdx + 0x1580], rsi 	     12092	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x400ec60	    0x8bb2ec130000	          mov esi, dword [rdx + 0x13ec] 	     12093	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x400ec66	    0x89b2f0130000	          mov dword [rdx + 0x13f0], esi 	     12093	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x400ec6c	    0x8bb278140000	          mov esi, dword [rdx + 0x1478] 	     12094	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x400ec72	    0x89b280140000	          mov dword [rdx + 0x1480], esi 	     12094	option.c	FUNCTION_99	IF_1	IF_2	FUNCTION_1
0x400ec78	        0x488b5268	            mov rdx, qword [rdx + 0x68] 	     12088	option.c	FUNCTION_99	IF_1	IF_2
0x400ec7c	          0x4885d2	                           test rdx, rdx	     12088	option.c	FUNCTION_99	IF_1	IF_2
0x400ec7f	            0x75b5	                           jne 0x400ec36	     12088	option.c	FUNCTION_99	IF_1	IF_2
0x400ec81	    0x8b3500000000	            mov esi, dword [0x0400ec87] 	     12104	option.c	FUNCTION_99	IF_1	IF_2
0x400ec87	    0x8b1500000000	            mov edx, dword [0x0400ec8d] 	     12098	option.c	FUNCTION_99	IF_1	IF_2
0x400ec8d	    0x893500000000	            mov dword [0x0400ec93], esi 	     12104	option.c	FUNCTION_99	IF_1	IF_2
0x400ec93	    0x8b3500000000	            mov esi, dword [0x0400ec99] 	     12105	option.c	FUNCTION_99	IF_1	IF_2
0x400ec99	    0x891500000000	            mov dword [0x0400ec9f], edx 	     12098	option.c	FUNCTION_99	IF_1	IF_2
0x400ec9f	    0x8b1500000000	            mov edx, dword [0x0400eca5] 	     12099	option.c	FUNCTION_99	IF_1	IF_2
0x400eca5	    0x893500000000	            mov dword [0x0400ecab], esi 	     12105	option.c	FUNCTION_99	IF_1	IF_2
0x400ecab	    0x8b3500000000	            mov esi, dword [0x0400ecb1] 	     12108	option.c	FUNCTION_99	IF_1	IF_2
0x400ecb1	    0x891500000000	            mov dword [0x0400ecb7], edx 	     12099	option.c	FUNCTION_99	IF_1	IF_2
0x400ecb7	    0x8b1500000000	            mov edx, dword [0x0400ecbd] 	     12101	option.c	FUNCTION_99	IF_1	IF_2
0x400ecbd	    0x893500000000	            mov dword [0x0400ecc3], esi 	     12108	option.c	FUNCTION_99	IF_1	IF_2
0x400ecc3	    0x8b3500000000	            mov esi, dword [0x0400ecc9] 	     12109	option.c	FUNCTION_99	IF_1	IF_2
0x400ecc9	    0x891500000000	            mov dword [0x0400eccf], edx 	     12101	option.c	FUNCTION_99	IF_1	IF_2
0x400eccf	    0x893500000000	            mov dword [0x0400ecd5], esi 	     12109	option.c	FUNCTION_99	IF_1	IF_2
0x400ecd5	    0x488b35000000	            mov rsi, qword [0x0400ecdc] 	     12110	option.c	FUNCTION_99	IF_1	IF_2
0x400ecdc	    0x488935000000	            mov qword [0x0400ece3], rsi 	     12110	option.c	FUNCTION_99	IF_1	IF_2
0x400ece3	    0x488b35000000	            mov rsi, qword [0x0400ecea] 	     12111	option.c	FUNCTION_99	IF_1	IF_2
0x400ecea	    0x488935000000	            mov qword [0x0400ecf1], rsi 	     12111	option.c	FUNCTION_99	IF_1	IF_2
0x400ecf1	    0x488b35000000	            mov rsi, qword [0x0400ecf8] 	     12112	option.c	FUNCTION_99	IF_1	IF_2
0x400ecf8	    0x488935000000	            mov qword [0x0400ecff], rsi 	     12112	option.c	FUNCTION_99	IF_1	IF_2
0x400ecff	      0xe945fcffff	                           jmp 0x400e949	     12112	option.c	FUNCTION_99	IF_1	IF_2
0x400ed04	      0xe800000000	                          call 0x400ed09	      8749	option.c	FUNCTION_49
set_option_value	SWITCH,0:CALL,18:DO,0:WHILE,0:IF,10:functions,0:ELSE,4:FOR,1	276
0x40115a0	            0x4157	                                push r15	      9697	option.c	FUNCTION_56
0x40115a2	            0x4156	                                push r14	      9697	option.c	FUNCTION_56
0x40115a4	            0x4155	                                push r13	      9697	option.c	FUNCTION_56
0x40115a6	            0x4154	                                push r12	      9697	option.c	FUNCTION_56
0x40115a8	          0x4989f5	                            mov r13, rsi	      9697	option.c	FUNCTION_56
0x40115ab	              0x55	                                push rbp	      9697	option.c	FUNCTION_56
0x40115ac	              0x53	                                push rbx	      9697	option.c	FUNCTION_56
0x40115ad	          0x4989d4	                            mov r12, rdx	      9697	option.c	FUNCTION_56
0x40115b0	          0x4889fb	                            mov rbx, rdi	      9697	option.c	FUNCTION_56
0x40115b3	            0x89cd	                            mov ebp, ecx	      9697	option.c	FUNCTION_56
0x40115b5	        0x4883ec38	                           sub rsp, 0x38	      9697	option.c	FUNCTION_56
0x40115b9	    0x64488b042528	                mov rax, qword fs:[0x28]	      9697	option.c	FUNCTION_56
0x40115c2	      0x4889442428	             mov qword [rsp + 0x28], rax	      9697	option.c	FUNCTION_56
0x40115c7	            0x31c0	                            xor eax, eax	      9697	option.c	FUNCTION_56
0x40115c9	      0xe852edfeff	                     call sym.findoption	      9702	option.c	FUNCTION_56	CALL_1
0x40115ce	            0x85c0	                           test eax, eax	      9703	option.c	FUNCTION_56	IF_1
0x40115d0	     0xf8882010000	                            js 0x4011758	      9703	option.c	FUNCTION_56	IF_1
0x40115d6	    0x8b1500000000	            mov edx, dword [0x040115dc] 	      9736	option.c	FUNCTION_56	ELSE_2	IF_5
0x40115dc	          0x4c63f0	                         movsxd r14, eax	      9733	option.c	FUNCTION_56	ELSE_2
0x40115df	          0x4189c7	                           mov r15d, eax	      9733	option.c	FUNCTION_56	ELSE_2
0x40115e2	          0x4c89f0	                            mov rax, r14	      9733	option.c	FUNCTION_56	ELSE_2
0x40115e5	        0x48c1e006	                              shl rax, 6	      9733	option.c	FUNCTION_56	ELSE_2
0x40115e9	            0x85d2	                           test edx, edx	      9736	option.c	FUNCTION_56	ELSE_2	IF_5
0x40115eb	    0x4c8b80000000	                     mov r8, qword [rax]	      9733	option.c	FUNCTION_56	ELSE_2
0x40115f2	            0x7e0d	                           jle 0x4011601	      9736	option.c	FUNCTION_56	ELSE_2	IF_5
0x40115f4	    0x41f7c0000008	                       test r8d, 0x80000	      9736	option.c	FUNCTION_56	ELSE_2	IF_5
0x40115fb	     0xf859f030000	                           jne 0x40119a0	      9736	option.c	FUNCTION_56	ELSE_2	IF_5
0x4011601	        0x41f6c004	                             test r8b, 4	      9742	option.c	FUNCTION_56	ELSE_2	IF_6
0x4011605	     0xf859d000000	                           jne 0x40116a8	      9742	option.c	FUNCTION_56	ELSE_2	IF_6
0x401160b	        0x49c1e606	                              shl r14, 6	      9746	option.c	FUNCTION_56	ELSE_2	ELSE_3	CALL_14
0x401160f	            0x89ee	                            mov esi, ebp	      9746	option.c	FUNCTION_56	ELSE_2	ELSE_3	CALL_14
0x4011611	        0x4c890424	                     mov qword [rsp], r8	      9746	option.c	FUNCTION_56	ELSE_2	ELSE_3	CALL_14
0x4011615	    0x498dbe000000	                          lea rdi, [r14]	      9746	option.c	FUNCTION_56	ELSE_2	ELSE_3	CALL_14
0x401161c	      0xe85f03ffff	                 call sym.get_varp_scope	      9746	option.c	FUNCTION_56	ELSE_2	ELSE_3	CALL_14
0x4011621	          0x4885c0	                           test rax, rax	      9747	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7
0x4011624	     0xf8400030000	                            je 0x401192a	      9747	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7
0x401162a	          0x4d85ed	                           test r13, r13	      9749	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8
0x401162d	        0x4c8b0424	                     mov r8, qword [rsp]	      9749	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8
0x4011631	            0x7532	                           jne 0x4011665	      9749	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8
0x4011633	          0x4d85e4	                           test r12, r12	      9749	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8
0x4011636	            0x742d	                            je 0x4011665	      9749	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8
0x4011638	      0x41803c2430	                    cmp byte [r12], 0x30	      9755	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	FOR_1
0x401163d	     0xf85c8020000	                           jne 0x401190b	      9755	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	FOR_1
0x4011643	      0x498d542401	                      lea rdx, [r12 + 1]	      9755	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	FOR_1
0x4011648	     0xf1f84000000	                   nop dword [rax + rax]	      9755	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	FOR_1
0x4011650	        0x4883c201	                              add rdx, 1	      9755	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	FOR_1
0x4011654	         0xfb64aff	               movzx ecx, byte [rdx - 1]	      9755	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	FOR_1
0x4011658	          0x80f930	                            cmp cl, 0x30	      9755	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	FOR_1
0x401165b	            0x74f3	                            je 0x4011650	      9755	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	FOR_1
0x401165d	            0x84c9	                             test cl, cl	      9757	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9
0x401165f	     0xf85a6020000	                           jne 0x401190b	      9757	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9
0x4011665	        0x4183e002	                              and r8d, 2	      9768	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_10
0x4011669	     0xf8581020000	                           jne 0x40118f0	      9768	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_10
0x401166f	            0x89e9	                            mov ecx, ebp	      9772	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	ELSE_4	CALL_18
0x4011671	          0x4489ea	                           mov edx, r13d	      9772	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	ELSE_4	CALL_18
0x4011674	          0x4889c6	                            mov rsi, rax	      9772	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	ELSE_4	CALL_18
0x4011677	          0x4489ff	                           mov edi, r15d	      9772	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	ELSE_4	CALL_18
0x401167a	      0xe8c1c2ffff	                call sym.set_bool_option	      9772	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	ELSE_4	CALL_18
0x401167f	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      9778	option.c	FUNCTION_56
0x4011684	    0x644833342528	                xor rsi, qword fs:[0x28]	      9778	option.c	FUNCTION_56
0x401168d	     0xf8547030000	                           jne 0x40119da	      9778	option.c	FUNCTION_56
0x4011693	        0x4883c438	                           add rsp, 0x38	      9778	option.c	FUNCTION_56
0x4011697	              0x5b	                                 pop rbx	      9778	option.c	FUNCTION_56
0x4011698	              0x5d	                                 pop rbp	      9778	option.c	FUNCTION_56
0x4011699	            0x415c	                                 pop r12	      9778	option.c	FUNCTION_56
0x401169b	            0x415d	                                 pop r13	      9778	option.c	FUNCTION_56
0x401169d	            0x415e	                                 pop r14	      9778	option.c	FUNCTION_56
0x401169f	            0x415f	                                 pop r15	      9778	option.c	FUNCTION_56
0x40116a1	              0xc3	                                     ret	      9778	option.c	FUNCTION_56
0x40116a2	    0x660f1f440000	                    nop word [rax + rax]	      9778	option.c	FUNCTION_56
0x40116a8	          0x4c89f3	                            mov rbx, r14	      5970	option.c	FUNCTION_38	IF_1
0x40116ab	        0x48c1e306	                              shl rbx, 6	      5970	option.c	FUNCTION_38	IF_1
0x40116af	    0x4881c3000000	                              add rbx, 0	      5970	option.c	FUNCTION_38	IF_1
0x40116b6	      0x48837b1800	               cmp qword [rbx + 0x18], 0	      5970	option.c	FUNCTION_38	IF_1
0x40116bb	     0xf8469020000	                            je 0x401192a	      5970	option.c	FUNCTION_38	IF_1
0x40116c1	          0x4c89e7	                            mov rdi, r12	      5973	option.c	FUNCTION_38	CALL_1
0x40116c4	      0xe800000000	                          call 0x40116c9	      5973	option.c	FUNCTION_38	CALL_1
0x40116c9	          0x4885c0	                           test rax, rax	      5974	option.c	FUNCTION_38	IF_2
0x40116cc	          0x4989c4	                            mov r12, rax	      5973	option.c	FUNCTION_38	CALL_1
0x40116cf	     0xf8455020000	                            je 0x401192a	      5974	option.c	FUNCTION_38	IF_2
0x40116d5	        0x40f6c506	                             test bpl, 6	      5976	option.c	FUNCTION_38	IF_2	CALL_2
0x40116d9	            0x89ee	                            mov esi, ebp	      5976	option.c	FUNCTION_38	IF_2	CALL_2
0x40116db	            0x7513	                           jne 0x40116f0	      5976	option.c	FUNCTION_38	IF_2	CALL_2
0x40116dd	          0x8b4320	            mov eax, dword [rbx + 0x20] 	      5979	option.c	FUNCTION_38	IF_2
0x40116e0	      0x2500100000	                         and eax, 0x1000	      5979	option.c	FUNCTION_38	IF_2
0x40116e5	          0x83f801	                              cmp eax, 1	      5979	option.c	FUNCTION_38	IF_2
0x40116e8	            0x19f6	                            sbb esi, esi	      5979	option.c	FUNCTION_38	IF_2
0x40116ea	          0x83e602	                              and esi, 2	      5979	option.c	FUNCTION_38	IF_2
0x40116ed	          0x83c602	                              add esi, 2	      5979	option.c	FUNCTION_38	IF_2
0x40116f0	        0x49c1e606	                              shl r14, 6	      5976	option.c	FUNCTION_38	IF_2	CALL_2
0x40116f4	    0x498d9e000000	                          lea rbx, [r14]	      5976	option.c	FUNCTION_38	IF_2	CALL_2
0x40116fb	          0x4889df	                            mov rdi, rbx	      5976	option.c	FUNCTION_38	IF_2	CALL_2
0x40116fe	      0xe87d02ffff	                 call sym.get_varp_scope	      5976	option.c	FUNCTION_38	IF_2	CALL_2
0x4011703	          0x488b10	                    mov rdx, qword [rax]	      5981	option.c	FUNCTION_38	IF_2
0x4011706	          0x4889c6	                            mov rsi, rax	      5976	option.c	FUNCTION_38	IF_2	CALL_2
0x4011709	          0x4c8920	                    mov qword [rax], r12	      5982	option.c	FUNCTION_38	IF_2
0x401170c	    0x8b0500000000	            mov eax, dword [0x04011712] 	      5985	option.c	FUNCTION_38	IF_2	IF_3
0x4011712	            0x85c0	                           test eax, eax	      5985	option.c	FUNCTION_38	IF_2	IF_3
0x4011714	     0xf84d6000000	                            je 0x40117f0	      5985	option.c	FUNCTION_38	IF_2	IF_3
0x401171a	            0x31c9	                            xor ecx, ecx	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x401171c	          0x4189e8	                            mov r8d, ebp	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x401171f	          0x4489ff	                           mov edi, r15d	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x4011722	      0xe87961ffff	call sym.did_set_string_option.constprop.17	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x4011727	          0x4885c0	                           test rax, rax	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x401172a	          0x4889c3	                            mov rbx, rax	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x401172d	     0xf848d020000	                            je 0x40119c0	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x4011733	          0x4531e4	                          xor r12d, r12d	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x4011736	          0x4531ed	                          xor r13d, r13d	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x4011739	          0x4c89ef	                            mov rdi, r13	      6004	option.c	FUNCTION_38	IF_2	CALL_8
0x401173c	      0xe800000000	                          call 0x4011741	      6004	option.c	FUNCTION_38	IF_2	CALL_8
0x4011741	          0x4c89e7	                            mov rdi, r12	      6005	option.c	FUNCTION_38	IF_2	CALL_9
0x4011744	      0xe800000000	                          call 0x4011749	      6005	option.c	FUNCTION_38	IF_2	CALL_9
0x4011749	          0x4889d8	                            mov rax, rbx	      6005	option.c	FUNCTION_38	IF_2	CALL_9
0x401174c	      0xe92effffff	                           jmp 0x401167f	      6005	option.c	FUNCTION_38	IF_2	CALL_9
0x4011751	     0xf1f80000000	                         nop dword [rax]	      6005	option.c	FUNCTION_38	IF_2	CALL_9
0x4011758	          0x4889df	                            mov rdi, rbx	      9707	option.c	FUNCTION_56	IF_1	IF_2	CALL_2
0x401175b	      0xe800000000	                          call 0x4011760	      9707	option.c	FUNCTION_56	IF_1	IF_2	CALL_2
0x4011760	        0x4883f804	                              cmp rax, 4	      9707	option.c	FUNCTION_56	IF_1	IF_2	CALL_2
0x4011764	            0x7563	                           jne 0x40117c9	      9707	option.c	FUNCTION_56	IF_1	IF_2	CALL_2
0x4011766	          0x803b74	                    cmp byte [rbx], 0x74	      9707	option.c	FUNCTION_56	IF_1	IF_2	CALL_2
0x4011769	            0x755e	                           jne 0x40117c9	      9707	option.c	FUNCTION_56	IF_1	IF_2	CALL_2
0x401176b	        0x807b015f	                cmp byte [rbx + 1], 0x5f	      9707	option.c	FUNCTION_56	IF_1	IF_2	CALL_2
0x401176f	            0x7558	                           jne 0x40117c9	      9707	option.c	FUNCTION_56	IF_1	IF_2	CALL_2
0x4011771	         0xfb64302	               movzx eax, byte [rbx + 2]	      9840	option.c	FUNCTION_60	IF_1
0x4011775	      0x48895c2418	             mov qword [rsp + 0x18], rbx	      9840	option.c	FUNCTION_60	IF_1
0x401177a	            0x84c0	                             test al, al	      9840	option.c	FUNCTION_60	IF_1
0x401177c	            0x7412	                            je 0x4011790	      9840	option.c	FUNCTION_60	IF_1
0x401177e	         0xfb65303	               movzx edx, byte [rbx + 3]	      9840	option.c	FUNCTION_60	IF_1
0x4011782	            0x84d2	                             test dl, dl	      9840	option.c	FUNCTION_60	IF_1
0x4011784	     0xf85f8010000	                           jne 0x4011982	      9840	option.c	FUNCTION_60	IF_1
0x401178a	    0x660f1f440000	                    nop word [rax + rax]	      9840	option.c	FUNCTION_60	IF_1
0x4011790	        0x488d43ff	                      lea rax, [rbx - 1]	      9844	option.c	FUNCTION_60	ELSE_1
0x4011794	      0x488d742414	                   lea rsi, [rsp + 0x14]	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x4011799	      0x488d7c2418	                   lea rdi, [rsp + 0x18]	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x401179e	          0x4531c0	                            xor r8d, r8d	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x40117a1	      0xb901000000	                              mov ecx, 1	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x40117a6	      0xba01000000	                              mov edx, 1	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x40117ab	      0x4889442418	             mov qword [rsp + 0x18], rax	      9844	option.c	FUNCTION_60	ELSE_1
0x40117b0	    0xc74424140000	               mov dword [rsp + 0x14], 0	      9845	option.c	FUNCTION_60	ELSE_1
0x40117b8	      0xe800000000	                          call 0x40117bd	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x40117bd	        0x8b4c2414	            mov ecx, dword [rsp + 0x14] 	      9847	option.c	FUNCTION_60	ELSE_1	IF_2
0x40117c1	            0x85c9	                           test ecx, ecx	      9847	option.c	FUNCTION_60	ELSE_1	IF_2
0x40117c3	     0xf846f010000	                            je 0x4011938	      9847	option.c	FUNCTION_60	ELSE_1	IF_2
0x40117c9	      0xba05000000	                              mov edx, 5	      9729	option.c	FUNCTION_56	IF_1	CALL_10
0x40117ce	      0xbe00000000	                              mov esi, 0	      9729	option.c	FUNCTION_56	IF_1	CALL_10
0x40117d3	            0x31ff	                            xor edi, edi	      9729	option.c	FUNCTION_56	IF_1	CALL_10
0x40117d5	      0xe800000000	                          call 0x40117da	      9729	option.c	FUNCTION_56	IF_1	CALL_10
0x40117da	          0x4889de	                            mov rsi, rbx	      9729	option.c	FUNCTION_56	IF_1	CALL_10
0x40117dd	          0x4889c7	                            mov rdi, rax	      9729	option.c	FUNCTION_56	IF_1	CALL_10
0x40117e0	      0xe800000000	                          call 0x40117e5	      9729	option.c	FUNCTION_56	IF_1	CALL_10
0x40117e5	            0x31c0	                            xor eax, eax	      9777	option.c	FUNCTION_56
0x40117e7	      0xe993feffff	                           jmp 0x401167f	      9777	option.c	FUNCTION_56
0x40117ec	         0xf1f4000	                         nop dword [rax]	      9777	option.c	FUNCTION_56
0x40117f0	    0x4181be000000	                 cmp dword [r14], 0x402c	      5987	option.c	FUNCTION_38	IF_2	IF_3
0x40117fb	     0xf8419ffffff	                            je 0x401171a	      5987	option.c	FUNCTION_38	IF_2	IF_3
0x4011801	          0x4889d7	                            mov rdi, rdx	      5991	option.c	FUNCTION_38	IF_2	IF_3	CALL_3
0x4011804	      0x4889742408	                mov qword [rsp + 8], rsi	      5991	option.c	FUNCTION_38	IF_2	IF_3	CALL_3
0x4011809	        0x48891424	                    mov qword [rsp], rdx	      5991	option.c	FUNCTION_38	IF_2	IF_3	CALL_3
0x401180d	      0xe800000000	                          call 0x4011812	      5991	option.c	FUNCTION_38	IF_2	IF_3	CALL_3
0x4011812	          0x4c89e7	                            mov rdi, r12	      5992	option.c	FUNCTION_38	IF_2	IF_3	CALL_4
0x4011815	          0x4989c5	                            mov r13, rax	      5991	option.c	FUNCTION_38	IF_2	IF_3	CALL_3
0x4011818	      0xe800000000	                          call 0x401181d	      5992	option.c	FUNCTION_38	IF_2	IF_3	CALL_4
0x401181d	        0x488b1424	                    mov rdx, qword [rsp]	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x4011821	      0x488b742408	                mov rsi, qword [rsp + 8]	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x4011826	            0x31c9	                            xor ecx, ecx	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x4011828	          0x4189e8	                            mov r8d, ebp	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x401182b	          0x4489ff	                           mov edi, r15d	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x401182e	          0x4989c4	                            mov r12, rax	      5992	option.c	FUNCTION_38	IF_2	IF_3	CALL_4
0x4011831	      0xe86a60ffff	call sym.did_set_string_option.constprop.17	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x4011836	          0x4885c0	                           test rax, rax	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x4011839	          0x4889c3	                            mov rbx, rax	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x401183c	     0xf85f7feffff	                           jne 0x4011739	      5995	option.c	FUNCTION_38	IF_2	IF_4	CALL_5
0x4011842	      0xba01000000	                              mov edx, 1	      5997	option.c	FUNCTION_38	IF_2	CALL_6
0x4011847	            0x89ee	                            mov esi, ebp	      5997	option.c	FUNCTION_38	IF_2	CALL_6
0x4011849	          0x4489ff	                           mov edi, r15d	      5997	option.c	FUNCTION_38	IF_2	CALL_6
0x401184c	      0xe85f0effff	                 call sym.did_set_option	      5997	option.c	FUNCTION_38	IF_2	CALL_6
0x4011851	          0x4d85ed	                           test r13, r13	      4331	option.c	FUNCTION_15	IF_1
0x4011854	     0xf84dffeffff	                            je 0x4011739	      4331	option.c	FUNCTION_15	IF_1
0x401185a	          0x4d85e4	                           test r12, r12	      4331	option.c	FUNCTION_15	IF_1
0x401185d	     0xf84d6feffff	                            je 0x4011739	      4331	option.c	FUNCTION_15	IF_1
0x4011863	          0x83e504	                              and ebp, 4	      4335	option.c	FUNCTION_15	IF_1
0x4011866	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	        33	stdio2.h	FUNCTION_120	CALL_1
0x401186b	      0xb800000000	                              mov eax, 0	      4335	option.c	FUNCTION_15	IF_1
0x4011870	    0x41b800000000	                              mov r8d, 0	      4335	option.c	FUNCTION_15	IF_1
0x4011876	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_120	CALL_1
0x401187b	      0xba07000000	                              mov edx, 7	        33	stdio2.h	FUNCTION_120	CALL_1
0x4011880	        0x4c0f45c0	                          cmovne r8, rax	      4335	option.c	FUNCTION_15	IF_1
0x4011884	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_120	CALL_1
0x4011889	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_120	CALL_1
0x401188b	      0xe800000000	                          call 0x4011890	        33	stdio2.h	FUNCTION_120	CALL_1
0x4011890	          0x4c89ee	                            mov rsi, r13	      4337	option.c	FUNCTION_15	IF_1	CALL_1
0x4011893	      0xbaffffffff	                     mov edx, 0xffffffff	      4337	option.c	FUNCTION_15	IF_1	CALL_1
0x4011898	      0xbf3e000000	                           mov edi, 0x3e	      4337	option.c	FUNCTION_15	IF_1	CALL_1
0x401189d	      0xe800000000	                          call 0x40118a2	      4337	option.c	FUNCTION_15	IF_1	CALL_1
0x40118a2	          0x4c89e6	                            mov rsi, r12	      4338	option.c	FUNCTION_15	IF_1	CALL_2
0x40118a5	      0xbaffffffff	                     mov edx, 0xffffffff	      4338	option.c	FUNCTION_15	IF_1	CALL_2
0x40118aa	      0xbf3d000000	                           mov edi, 0x3d	      4338	option.c	FUNCTION_15	IF_1	CALL_2
0x40118af	      0xe800000000	                          call 0x40118b4	      4338	option.c	FUNCTION_15	IF_1	CALL_2
0x40118b4	      0x488d742420	                   lea rsi, [rsp + 0x20]	      4339	option.c	FUNCTION_15	IF_1	CALL_3
0x40118b9	      0xbaffffffff	                     mov edx, 0xffffffff	      4339	option.c	FUNCTION_15	IF_1	CALL_3
0x40118be	      0xbf3f000000	                           mov edi, 0x3f	      4339	option.c	FUNCTION_15	IF_1	CALL_3
0x40118c3	      0xe800000000	                          call 0x40118c8	      4339	option.c	FUNCTION_15	IF_1	CALL_3
0x40118c8	    0x498bb6000000	                    mov rsi, qword [r14]	      4340	option.c	FUNCTION_15	IF_1	CALL_4
0x40118cf	          0x4531c0	                            xor r8d, r8d	      4340	option.c	FUNCTION_15	IF_1	CALL_4
0x40118d2	            0x31c9	                            xor ecx, ecx	      4340	option.c	FUNCTION_15	IF_1	CALL_4
0x40118d4	            0x31d2	                            xor edx, edx	      4340	option.c	FUNCTION_15	IF_1	CALL_4
0x40118d6	      0xbf3e000000	                           mov edi, 0x3e	      4340	option.c	FUNCTION_15	IF_1	CALL_4
0x40118db	      0xe800000000	                          call 0x40118e0	      4340	option.c	FUNCTION_15	IF_1	CALL_4
0x40118e0	      0xe800000000	                          call 0x40118e5	      4342	option.c	FUNCTION_15	IF_1	CALL_5
0x40118e5	      0xe94ffeffff	                           jmp 0x4011739	      4342	option.c	FUNCTION_15	IF_1	CALL_5
0x40118ea	    0x660f1f440000	                    nop word [rax + rax]	      4342	option.c	FUNCTION_15	IF_1	CALL_5
0x40118f0	          0x4189e9	                            mov r9d, ebp	      9769	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_10	CALL_17
0x40118f3	          0x4531c0	                            xor r8d, r8d	      9769	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_10	CALL_17
0x40118f6	            0x31c9	                            xor ecx, ecx	      9769	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_10	CALL_17
0x40118f8	          0x4c89ea	                            mov rdx, r13	      9769	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_10	CALL_17
0x40118fb	          0x4889c6	                            mov rsi, rax	      9769	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_10	CALL_17
0x40118fe	          0x4489ff	                           mov edi, r15d	      9769	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_10	CALL_17
0x4011901	      0xe86a4effff	                 call sym.set_num_option	      9769	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_10	CALL_17
0x4011906	      0xe974fdffff	                           jmp 0x401167f	      9769	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_10	CALL_17
0x401190b	      0xba05000000	                              mov edx, 5	      9762	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9	CALL_16
0x4011910	      0xbe00000000	                              mov esi, 0	      9762	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9	CALL_16
0x4011915	            0x31ff	                            xor edi, edi	      9762	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9	CALL_16
0x4011917	      0xe800000000	                          call 0x401191c	      9762	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9	CALL_16
0x401191c	          0x4c89e2	                            mov rdx, r12	      9762	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9	CALL_16
0x401191f	          0x4889de	                            mov rsi, rbx	      9762	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9	CALL_16
0x4011922	          0x4889c7	                            mov rdi, rax	      9762	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9	CALL_16
0x4011925	      0xe800000000	                          call 0x401192a	      9762	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9	CALL_16
0x401192a	            0x31c0	                            xor eax, eax	      9764	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9
0x401192c	      0xe94efdffff	                           jmp 0x401167f	      9764	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9
0x4011931	     0xf1f80000000	                         nop dword [rax]	      9764	option.c	FUNCTION_56	ELSE_2	ELSE_3	IF_7	IF_8	IF_9
0x4011938	            0x85c0	                           test eax, eax	      9708	option.c	FUNCTION_56	IF_1	IF_2	CALL_3
0x401193a	     0xf8489feffff	                            je 0x40117c9	      9708	option.c	FUNCTION_56	IF_1	IF_2	CALL_3
0x4011940	            0x89c2	                            mov edx, eax	      9720	option.c	FUNCTION_56	IF_1	IF_2	ELSE_1
0x4011942	      0xb9f2ffffff	                     mov ecx, 0xfffffff2	      9719	option.c	FUNCTION_56	IF_1	IF_2	ELSE_1
0x4011947	            0x7840	                            js 0x4011989	      9712	option.c	FUNCTION_56	IF_1	IF_2	IF_3
0x4011949	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      9722	option.c	FUNCTION_56	IF_1	IF_2	CALL_6
0x401194e	        0x88542421	               mov byte [rsp + 0x21], dl	      9722	option.c	FUNCTION_56	IF_1	IF_2	CALL_6
0x4011952	          0x4c89e6	                            mov rsi, r12	      9722	option.c	FUNCTION_56	IF_1	IF_2	CALL_6
0x4011955	            0x31d2	                            xor edx, edx	      9722	option.c	FUNCTION_56	IF_1	IF_2	CALL_6
0x4011957	        0x884c2420	               mov byte [rsp + 0x20], cl	      9722	option.c	FUNCTION_56	IF_1	IF_2	CALL_6
0x401195b	      0xe800000000	                          call 0x4011960	      9722	option.c	FUNCTION_56	IF_1	IF_2	CALL_6
0x4011960	    0x8b0500000000	            mov eax, dword [0x04011966] 	      9723	option.c	FUNCTION_56	IF_1	IF_2	IF_4
0x4011966	            0x85c0	                           test eax, eax	      9723	option.c	FUNCTION_56	IF_1	IF_2	IF_4
0x4011968	            0x7407	                            je 0x4011971	      9723	option.c	FUNCTION_56	IF_1	IF_2	IF_4
0x401196a	            0x31ff	                            xor edi, edi	      9724	option.c	FUNCTION_56	IF_1	IF_2	CALL_7
0x401196c	      0xe800000000	                          call 0x4011971	      9724	option.c	FUNCTION_56	IF_1	IF_2	CALL_7
0x4011971	      0xbf32000000	                           mov edi, 0x32	      9725	option.c	FUNCTION_56	IF_1	IF_2	CALL_8
0x4011976	      0xe800000000	                          call 0x401197b	      9725	option.c	FUNCTION_56	IF_1	IF_2	CALL_8
0x401197b	            0x31c0	                            xor eax, eax	      9726	option.c	FUNCTION_56	IF_1	IF_2
0x401197d	      0xe9fdfcffff	                           jmp 0x401167f	      9726	option.c	FUNCTION_56	IF_1	IF_2
0x4011982	          0xc1e208	                              shl edx, 8	      9841	option.c	FUNCTION_60	CALL_1
0x4011985	             0x1d0	                            add eax, edx	      9841	option.c	FUNCTION_60	CALL_1
0x4011987	            0xf7d8	                                 neg eax	      9841	option.c	FUNCTION_60	CALL_1
0x4011989	            0x89c2	                            mov edx, eax	      9715	option.c	FUNCTION_56	IF_1	IF_2	IF_3	CALL_5
0x401198b	            0x89c1	                            mov ecx, eax	      9714	option.c	FUNCTION_56	IF_1	IF_2	IF_3	CALL_4
0x401198d	            0xf7da	                                 neg edx	      9715	option.c	FUNCTION_56	IF_1	IF_2	IF_3	CALL_5
0x401198f	            0xf7d9	                                 neg ecx	      9714	option.c	FUNCTION_56	IF_1	IF_2	IF_3	CALL_4
0x4011991	          0xc1ea08	                              shr edx, 8	      9715	option.c	FUNCTION_56	IF_1	IF_2	IF_3	CALL_5
0x4011994	            0xebb3	                           jmp 0x4011949	      9715	option.c	FUNCTION_56	IF_1	IF_2	IF_3	CALL_5
0x4011996	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      9715	option.c	FUNCTION_56	IF_1	IF_2	IF_3	CALL_5
0x40119a0	      0xba05000000	                              mov edx, 5	      9738	option.c	FUNCTION_56	ELSE_2	IF_5	CALL_12
0x40119a5	      0xbe00000000	                              mov esi, 0	      9738	option.c	FUNCTION_56	ELSE_2	IF_5	CALL_12
0x40119aa	            0x31ff	                            xor edi, edi	      9738	option.c	FUNCTION_56	ELSE_2	IF_5	CALL_12
0x40119ac	      0xe800000000	                          call 0x40119b1	      9738	option.c	FUNCTION_56	ELSE_2	IF_5	CALL_12
0x40119b1	          0x4889c7	                            mov rdi, rax	      9738	option.c	FUNCTION_56	ELSE_2	IF_5	CALL_12
0x40119b4	      0xe800000000	                          call 0x40119b9	      9738	option.c	FUNCTION_56	ELSE_2	IF_5	CALL_12
0x40119b9	            0x31c0	                            xor eax, eax	      9739	option.c	FUNCTION_56	ELSE_2	IF_5
0x40119bb	      0xe9bffcffff	                           jmp 0x401167f	      9739	option.c	FUNCTION_56	ELSE_2	IF_5
0x40119c0	      0xba01000000	                              mov edx, 1	      5997	option.c	FUNCTION_38	IF_2	CALL_6
0x40119c5	            0x89ee	                            mov esi, ebp	      5997	option.c	FUNCTION_38	IF_2	CALL_6
0x40119c7	          0x4489ff	                           mov edi, r15d	      5997	option.c	FUNCTION_38	IF_2	CALL_6
0x40119ca	      0xe8e10cffff	                 call sym.did_set_option	      5997	option.c	FUNCTION_38	IF_2	CALL_6
0x40119cf	          0x4531e4	                          xor r12d, r12d	      5997	option.c	FUNCTION_38	IF_2	CALL_6
0x40119d2	          0x4531ed	                          xor r13d, r13d	      5997	option.c	FUNCTION_38	IF_2	CALL_6
0x40119d5	      0xe95ffdffff	                           jmp 0x4011739	      5997	option.c	FUNCTION_38	IF_2	CALL_6
0x40119da	      0xe800000000	                          call 0x40119df	      9778	option.c	FUNCTION_56
find_mps_values	SWITCH,0:CALL,10:DO,0:WHILE,1:IF,10:functions,0:ELSE,5:FOR,0	149
0x4013270	            0x4157	                                push r15	     12549	option.c	FUNCTION_115
0x4013272	            0x4156	                                push r14	     12549	option.c	FUNCTION_115
0x4013274	          0x4989d6	                            mov r14, rdx	     12549	option.c	FUNCTION_115
0x4013277	            0x4155	                                push r13	     12549	option.c	FUNCTION_115
0x4013279	            0x4154	                                push r12	     12549	option.c	FUNCTION_115
0x401327b	          0x4989f5	                            mov r13, rsi	     12549	option.c	FUNCTION_115
0x401327e	              0x55	                                push rbp	     12549	option.c	FUNCTION_115
0x401327f	              0x53	                                push rbx	     12549	option.c	FUNCTION_115
0x4013280	          0x4889fd	                            mov rbp, rdi	     12549	option.c	FUNCTION_115
0x4013283	          0x4189cc	                           mov r12d, ecx	     12549	option.c	FUNCTION_115
0x4013286	        0x4883ec08	                              sub rsp, 8	     12549	option.c	FUNCTION_115
0x401328a	    0x488b05000000	            mov rax, qword [0x04013291] 	     12552	option.c	FUNCTION_115
0x4013291	    0x488b98301500	          mov rbx, qword [rax + 0x1530] 	     12552	option.c	FUNCTION_115
0x4013298	           0xfb603	                   movzx eax, byte [rbx]	     12552	option.c	FUNCTION_115
0x401329b	       0xf1f440000	                   nop dword [rax + rax]	     12552	option.c	FUNCTION_115
0x40132a0	            0x84c0	                             test al, al	     12553	option.c	FUNCTION_115	WHILE_1
0x40132a2	            0x7438	                            je 0x40132dc	     12553	option.c	FUNCTION_115	WHILE_1
0x40132a4	    0x8b1500000000	            mov edx, dword [0x040132aa] 	     12556	option.c	FUNCTION_115	WHILE_1	IF_1
0x40132aa	            0x85d2	                           test edx, edx	     12556	option.c	FUNCTION_115	WHILE_1	IF_1
0x40132ac	            0x7542	                           jne 0x40132f0	     12556	option.c	FUNCTION_115	WHILE_1	IF_1
0x40132ae	          0x8b5500	                    mov edx, dword [rbp]	     12597	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6
0x40132b1	            0x39d0	                            cmp eax, edx	     12597	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6
0x40132b3	     0xf8487000000	                            je 0x4013340	     12597	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6
0x40132b9	         0xfb64302	               movzx eax, byte [rbx + 2]	     12613	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8
0x40132bd	            0x39c2	                            cmp edx, eax	     12613	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8
0x40132bf	     0xf84ab000000	                            je 0x4013370	     12613	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8
0x40132c5	        0x4883c303	                              add rbx, 3	     12628	option.c	FUNCTION_115	WHILE_1	ELSE_3
0x40132c9	           0xfb603	                   movzx eax, byte [rbx]	     12630	option.c	FUNCTION_115	WHILE_1	IF_10
0x40132cc	            0x3c2c	                            cmp al, 0x2c	     12630	option.c	FUNCTION_115	WHILE_1	IF_10
0x40132ce	            0x75d0	                           jne 0x40132a0	     12630	option.c	FUNCTION_115	WHILE_1	IF_10
0x40132d0	         0xfb64301	               movzx eax, byte [rbx + 1]	     12630	option.c	FUNCTION_115	WHILE_1	IF_10
0x40132d4	        0x4883c301	                              add rbx, 1	     12631	option.c	FUNCTION_115	WHILE_1	IF_10
0x40132d8	            0x84c0	                             test al, al	     12553	option.c	FUNCTION_115	WHILE_1
0x40132da	            0x75c8	                           jne 0x40132a4	     12553	option.c	FUNCTION_115	WHILE_1
0x40132dc	        0x4883c408	                              add rsp, 8	     12633	option.c	FUNCTION_115
0x40132e0	              0x5b	                                 pop rbx	     12633	option.c	FUNCTION_115
0x40132e1	              0x5d	                                 pop rbp	     12633	option.c	FUNCTION_115
0x40132e2	            0x415c	                                 pop r12	     12633	option.c	FUNCTION_115
0x40132e4	            0x415d	                                 pop r13	     12633	option.c	FUNCTION_115
0x40132e6	            0x415e	                                 pop r14	     12633	option.c	FUNCTION_115
0x40132e8	            0x415f	                                 pop r15	     12633	option.c	FUNCTION_115
0x40132ea	              0xc3	                                     ret	     12633	option.c	FUNCTION_115
0x40132eb	       0xf1f440000	                   nop dword [rax + rax]	     12633	option.c	FUNCTION_115
0x40132f0	          0x4889df	                            mov rdi, rbx	     12560	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	CALL_1
0x40132f3	    0xff1500000000	                 call qword [0x040132f9]	     12560	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	CALL_1
0x40132f9	          0x3b4500	                    cmp eax, dword [rbp]	     12560	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	CALL_1
0x40132fc	     0xf84d1000000	                            je 0x40133d3	     12560	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	CALL_1
0x4013302	          0x4889df	                            mov rdi, rbx	     12576	option.c	FUNCTION_115	WHILE_1	IF_1	CALL_6
0x4013305	    0xff1500000000	                 call qword [0x0401330b]	     12576	option.c	FUNCTION_115	WHILE_1	IF_1	CALL_6
0x401330b	        0x448d7801	                     lea r15d, [rax + 1]	     12576	option.c	FUNCTION_115	WHILE_1	IF_1	CALL_6
0x401330f	          0x4d63ff	                        movsxd r15, r15d	     12576	option.c	FUNCTION_115	WHILE_1	IF_1	CALL_6
0x4013312	          0x4901df	                            add r15, rbx	     12576	option.c	FUNCTION_115	WHILE_1	IF_1	CALL_6
0x4013315	          0x4c89ff	                            mov rdi, r15	     12577	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	CALL_7
0x4013318	    0xff1500000000	                 call qword [0x0401331e]	     12577	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	CALL_7
0x401331e	          0x3b4500	                    cmp eax, dword [rbp]	     12577	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	CALL_7
0x4013321	     0xf84de000000	                            je 0x4013405	     12577	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	CALL_7
0x4013327	          0x4c89ff	                            mov rdi, r15	     12592	option.c	FUNCTION_115	WHILE_1	IF_1	CALL_10
0x401332a	    0xff1500000000	                 call qword [0x04013330]	     12592	option.c	FUNCTION_115	WHILE_1	IF_1	CALL_10
0x4013330	          0x4863d8	                         movsxd rbx, eax	     12592	option.c	FUNCTION_115	WHILE_1	IF_1	CALL_10
0x4013333	          0x4c01fb	                            add rbx, r15	     12592	option.c	FUNCTION_115	WHILE_1	IF_1	CALL_10
0x4013336	            0xeb91	                           jmp 0x40132c9	     12592	option.c	FUNCTION_115	WHILE_1	IF_1	CALL_10
0x4013338	     0xf1f84000000	                   nop dword [rax + rax]	     12592	option.c	FUNCTION_115	WHILE_1	IF_1	CALL_10
0x4013340	          0x4585e4	                         test r12d, r12d	     12599	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	IF_7
0x4013343	            0x7453	                            je 0x4013398	     12599	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	IF_7
0x4013345	    0x41c706010000	                      mov dword [r14], 1	     12601	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	IF_7
0x401334c	          0x8b4500	                    mov eax, dword [rbp]	     12602	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	IF_7
0x401334f	        0x41894500	                    mov dword [r13], eax	     12602	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	IF_7
0x4013353	         0xfb64302	               movzx eax, byte [rbx + 2]	     12603	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	IF_7
0x4013357	          0x894500	                    mov dword [rbp], eax	     12603	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	IF_7
0x401335a	        0x4883c408	                              add rsp, 8	     12633	option.c	FUNCTION_115
0x401335e	              0x5b	                                 pop rbx	     12633	option.c	FUNCTION_115
0x401335f	              0x5d	                                 pop rbp	     12633	option.c	FUNCTION_115
0x4013360	            0x415c	                                 pop r12	     12633	option.c	FUNCTION_115
0x4013362	            0x415d	                                 pop r13	     12633	option.c	FUNCTION_115
0x4013364	            0x415e	                                 pop r14	     12633	option.c	FUNCTION_115
0x4013366	            0x415f	                                 pop r15	     12633	option.c	FUNCTION_115
0x4013368	              0xc3	                                     ret	     12633	option.c	FUNCTION_115
0x4013369	     0xf1f80000000	                         nop dword [rax]	     12633	option.c	FUNCTION_115
0x4013370	          0x4585e4	                         test r12d, r12d	     12615	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	IF_9
0x4013373	            0x7441	                            je 0x40133b6	     12615	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	IF_9
0x4013375	    0x41c706000000	                      mov dword [r14], 0	     12617	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	IF_9
0x401337c	          0x8b4500	                    mov eax, dword [rbp]	     12618	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	IF_9
0x401337f	        0x41894500	                    mov dword [r13], eax	     12618	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	IF_9
0x4013383	           0xfb603	                   movzx eax, byte [rbx]	     12619	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	IF_9
0x4013386	          0x894500	                    mov dword [rbp], eax	     12619	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	IF_9
0x4013389	        0x4883c408	                              add rsp, 8	     12633	option.c	FUNCTION_115
0x401338d	              0x5b	                                 pop rbx	     12633	option.c	FUNCTION_115
0x401338e	              0x5d	                                 pop rbp	     12633	option.c	FUNCTION_115
0x401338f	            0x415c	                                 pop r12	     12633	option.c	FUNCTION_115
0x4013391	            0x415d	                                 pop r13	     12633	option.c	FUNCTION_115
0x4013393	            0x415e	                                 pop r14	     12633	option.c	FUNCTION_115
0x4013395	            0x415f	                                 pop r15	     12633	option.c	FUNCTION_115
0x4013397	              0xc3	                                     ret	     12633	option.c	FUNCTION_115
0x4013398	    0x41c706000000	                      mov dword [r14], 0	     12607	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	ELSE_4
0x401339f	         0xfb64302	               movzx eax, byte [rbx + 2]	     12608	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	ELSE_4
0x40133a3	        0x41894500	                    mov dword [r13], eax	     12608	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_6	ELSE_4
0x40133a7	        0x4883c408	                              add rsp, 8	     12633	option.c	FUNCTION_115
0x40133ab	              0x5b	                                 pop rbx	     12633	option.c	FUNCTION_115
0x40133ac	              0x5d	                                 pop rbp	     12633	option.c	FUNCTION_115
0x40133ad	            0x415c	                                 pop r12	     12633	option.c	FUNCTION_115
0x40133af	            0x415d	                                 pop r13	     12633	option.c	FUNCTION_115
0x40133b1	            0x415e	                                 pop r14	     12633	option.c	FUNCTION_115
0x40133b3	            0x415f	                                 pop r15	     12633	option.c	FUNCTION_115
0x40133b5	              0xc3	                                     ret	     12633	option.c	FUNCTION_115
0x40133b6	    0x41c706010000	                      mov dword [r14], 1	     12623	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	ELSE_5
0x40133bd	           0xfb603	                   movzx eax, byte [rbx]	     12624	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	ELSE_5
0x40133c0	        0x41894500	                    mov dword [r13], eax	     12624	option.c	FUNCTION_115	WHILE_1	ELSE_3	IF_8	ELSE_5
0x40133c4	        0x4883c408	                              add rsp, 8	     12633	option.c	FUNCTION_115
0x40133c8	              0x5b	                                 pop rbx	     12633	option.c	FUNCTION_115
0x40133c9	              0x5d	                                 pop rbp	     12633	option.c	FUNCTION_115
0x40133ca	            0x415c	                                 pop r12	     12633	option.c	FUNCTION_115
0x40133cc	            0x415d	                                 pop r13	     12633	option.c	FUNCTION_115
0x40133ce	            0x415e	                                 pop r14	     12633	option.c	FUNCTION_115
0x40133d0	            0x415f	                                 pop r15	     12633	option.c	FUNCTION_115
0x40133d2	              0xc3	                                     ret	     12633	option.c	FUNCTION_115
0x40133d3	          0x4585e4	                         test r12d, r12d	     12562	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3
0x40133d6	            0x7467	                            je 0x401343f	     12562	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3
0x40133d8	    0x4c8b25000000	            mov r12, qword [0x040133df] 	     12565	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x40133df	          0x4889df	                            mov rdi, rbx	     12565	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x40133e2	        0x41894500	                    mov dword [r13], eax	     12564	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3
0x40133e6	    0xff1500000000	                 call qword [0x040133ec]	     12565	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x40133ec	            0x4898	                                    cdqe	     12565	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x40133ee	      0x488d7c0301	                lea rdi, [rbx + rax + 1]	     12565	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x40133f3	          0x41ffd4	                                call r12	     12565	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x40133f6	          0x894500	                    mov dword [rbp], eax	     12565	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3	CALL_3
0x40133f9	    0x41c706010000	                      mov dword [r14], 1	     12566	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3
0x4013400	      0xe9d7feffff	                           jmp 0x40132dc	     12566	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	IF_3
0x4013405	          0x4585e4	                         test r12d, r12d	     12579	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	IF_5
0x4013408	            0x741c	                            je 0x4013426	     12579	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	IF_5
0x401340a	        0x41894500	                    mov dword [r13], eax	     12581	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	IF_5
0x401340e	          0x4889df	                            mov rdi, rbx	     12582	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	IF_5	CALL_8
0x4013411	    0xff1500000000	                 call qword [0x04013417]	     12582	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	IF_5	CALL_8
0x4013417	          0x894500	                    mov dword [rbp], eax	     12582	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	IF_5	CALL_8
0x401341a	    0x41c706000000	                      mov dword [r14], 0	     12583	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	IF_5
0x4013421	      0xe9b6feffff	                           jmp 0x40132dc	     12583	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	IF_5
0x4013426	          0x4889df	                            mov rdi, rbx	     12587	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	ELSE_2	CALL_9
0x4013429	    0xff1500000000	                 call qword [0x0401342f]	     12587	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	ELSE_2	CALL_9
0x401342f	        0x41894500	                    mov dword [r13], eax	     12587	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	ELSE_2	CALL_9
0x4013433	    0x41c706010000	                      mov dword [r14], 1	     12588	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	ELSE_2
0x401343a	      0xe99dfeffff	                           jmp 0x40132dc	     12588	option.c	FUNCTION_115	WHILE_1	IF_1	IF_4	ELSE_2
0x401343f	    0x488b2d000000	            mov rbp, qword [0x04013446] 	     12570	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x4013446	          0x4889df	                            mov rdi, rbx	     12570	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x4013449	    0xff1500000000	                 call qword [0x0401344f]	     12570	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x401344f	            0x4898	                                    cdqe	     12570	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x4013451	      0x488d7c0301	                lea rdi, [rbx + rax + 1]	     12570	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x4013456	            0xffd5	                                call rbp	     12570	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x4013458	        0x41894500	                    mov dword [r13], eax	     12570	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	ELSE_1	CALL_5
0x401345c	    0x41c706000000	                      mov dword [r14], 0	     12571	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	ELSE_1
0x4013463	      0xe974feffff	                           jmp 0x40132dc	     12571	option.c	FUNCTION_115	WHILE_1	IF_1	IF_2	ELSE_1
shortmess	SWITCH,0:CALL,3:DO,0:WHILE,0:IF,0:functions,0:ELSE,0:FOR,0	31
0x400d1e0	            0x89fe	                            mov esi, edi	     12054	option.c	FUNCTION_98
0x400d1e2	    0x488b3d000000	            mov rdi, qword [0x0400d1e9] 	     12055	option.c	FUNCTION_98
0x400d1e9	          0x4885ff	                           test rdi, rdi	     12055	option.c	FUNCTION_98
0x400d1ec	            0x741a	                            je 0x400d208	     12055	option.c	FUNCTION_98
0x400d1ee	              0x53	                                push rbx	     12054	option.c	FUNCTION_98
0x400d1ef	            0x89f3	                            mov ebx, esi	     12054	option.c	FUNCTION_98
0x400d1f1	      0xe800000000	                          call 0x400d1f6	     12056	option.c	FUNCTION_98	CALL_1
0x400d1f6	          0x4885c0	                           test rax, rax	     12055	option.c	FUNCTION_98
0x400d1f9	      0xba01000000	                              mov edx, 1	     12055	option.c	FUNCTION_98
0x400d1fe	            0x7410	                            je 0x400d210	     12055	option.c	FUNCTION_98
0x400d200	            0x89d0	                            mov eax, edx	     12059	option.c	FUNCTION_98
0x400d202	              0x5b	                                 pop rbx	     12059	option.c	FUNCTION_98
0x400d203	              0xc3	                                     ret	     12059	option.c	FUNCTION_98
0x400d204	         0xf1f4000	                         nop dword [rax]	     12059	option.c	FUNCTION_98
0x400d208	            0x31d2	                            xor edx, edx	     12055	option.c	FUNCTION_98
0x400d20a	            0x89d0	                            mov eax, edx	     12059	option.c	FUNCTION_98
0x400d20c	              0xc3	                                     ret	     12059	option.c	FUNCTION_98
0x400d20d	           0xf1f00	                         nop dword [rax]	     12059	option.c	FUNCTION_98
0x400d210	    0x488b3d000000	            mov rdi, qword [0x0400d217] 	     12057	option.c	FUNCTION_98	CALL_2
0x400d217	      0xbe61000000	                           mov esi, 0x61	     12057	option.c	FUNCTION_98	CALL_2
0x400d21c	      0xe800000000	                          call 0x400d221	     12057	option.c	FUNCTION_98	CALL_2
0x400d221	            0x31d2	                            xor edx, edx	     12055	option.c	FUNCTION_98
0x400d223	          0x4885c0	                           test rax, rax	     12057	option.c	FUNCTION_98	CALL_2
0x400d226	            0x74d8	                            je 0x400d200	     12057	option.c	FUNCTION_98	CALL_2
0x400d228	            0x89de	                            mov esi, ebx	     12058	option.c	FUNCTION_98	CALL_3
0x400d22a	      0xbf00000000	                              mov edi, 0	     12058	option.c	FUNCTION_98	CALL_3
0x400d22f	      0xe800000000	                          call 0x400d234	     12058	option.c	FUNCTION_98	CALL_3
0x400d234	            0x31d2	                            xor edx, edx	     12055	option.c	FUNCTION_98
0x400d236	          0x4885c0	                           test rax, rax	     12055	option.c	FUNCTION_98
0x400d239	           0xf95c2	                                setne dl	     12055	option.c	FUNCTION_98
0x400d23c	            0xebc2	                           jmp 0x400d200	     12055	option.c	FUNCTION_98
did_set_option	SWITCH,0:CALL,0:DO,0:WHILE,0:IF,2:functions,0:ELSE,1:FOR,0	68
0x40026b0	          0x4863ff	                         movsxd rdi, edi	      5303	option.c	FUNCTION_17
0x40026b3	          0x4889f8	                            mov rax, rdi	      5303	option.c	FUNCTION_17
0x40026b6	        0x48c1e006	                              shl rax, 6	      5303	option.c	FUNCTION_17
0x40026ba	    0x480500000000	                              add rax, 0	      5303	option.c	FUNCTION_17
0x40026c0	    0x488148100001	            or qword [rax + 0x10], 0x100	      5303	option.c	FUNCTION_17
0x40026c8	        0x40f6c604	                             test sil, 4	      5820	option.c	IF_1
0x40026cc	            0x7432	                            je 0x4002700	      5820	option.c	IF_1
0x40026ce	          0x8b4020	            mov eax, dword [rax + 0x20] 	      5821	option.c	IF_1	SWITCH_1
0x40026d1	      0x3d20400000	                         cmp eax, 0x4020	      5821	option.c	IF_1	SWITCH_1
0x40026d6	     0xf848c000000	                            je 0x4002768	      5821	option.c	IF_1	SWITCH_1
0x40026dc	            0x7762	                            ja 0x4002740	      5821	option.c	IF_1	SWITCH_1
0x40026de	      0x3d12200000	                         cmp eax, 0x2012	      5821	option.c	IF_1	SWITCH_1
0x40026e3	     0xf84af000000	                            je 0x4002798	      5821	option.c	IF_1	SWITCH_1
0x40026e9	      0x3d21300000	                         cmp eax, 0x3021	      5821	option.c	IF_1	SWITCH_1
0x40026ee	     0xf84ec000000	                            je 0x40027e0	      5821	option.c	IF_1	SWITCH_1
0x40026f4	      0x3d11200000	                         cmp eax, 0x2011	      5821	option.c	IF_1	SWITCH_1
0x40026f9	     0xf84b1000000	                            je 0x40027b0	      5821	option.c	IF_1	SWITCH_1
0x40026ff	              0x90	                                     nop	      5821	option.c	IF_1	SWITCH_1
0x4002700	        0x48c1e706	                              shl rdi, 6	      5845	option.c	
0x4002704	    0x4881c7000000	                              add rdi, 0	      5845	option.c	
0x400270b	    0x8b0d00000000	            mov ecx, dword [0x04002711] 	      5309	option.c	FUNCTION_17	IF_1
0x4002711	            0x85c9	                           test ecx, ecx	      5309	option.c	FUNCTION_17	IF_1
0x4002713	            0x7523	                           jne 0x4002738	      5309	option.c	FUNCTION_17	IF_1
0x4002715	    0x8b0500000000	            mov eax, dword [0x0400271b] 	      5311	option.c	FUNCTION_17	IF_1
0x400271b	            0x85c0	                           test eax, eax	      5311	option.c	FUNCTION_17	IF_1
0x400271d	            0x7519	                           jne 0x4002738	      5311	option.c	FUNCTION_17	IF_1
0x400271f	          0x83e608	                              and esi, 8	      5313	option.c	FUNCTION_17	IF_1
0x4002722	            0x7514	                           jne 0x4002738	      5313	option.c	FUNCTION_17	IF_1
0x4002724	            0x85d2	                           test edx, edx	      5315	option.c	FUNCTION_17	ELSE_1	IF_2
0x4002726	            0x7407	                            je 0x400272f	      5315	option.c	FUNCTION_17	ELSE_1	IF_2
0x4002728	    0x488127ffff7f	     and qword [rdi], 0xffffffffff7fffff	      5316	option.c	FUNCTION_17	ELSE_1	IF_2
0x400272f	            0xf3c3	                                     ret	      5316	option.c	FUNCTION_17	ELSE_1	IF_2
0x4002731	     0xf1f80000000	                         nop dword [rax]	      5316	option.c	FUNCTION_17	ELSE_1	IF_2
0x4002738	    0x48810f000080	                or qword [rdi], 0x800000	      5314	option.c	FUNCTION_17	IF_1
0x400273f	              0xc3	                                     ret	      5314	option.c	FUNCTION_17	IF_1
0x4002740	      0x3d29400000	                         cmp eax, 0x4029	      5821	option.c	IF_1	SWITCH_1
0x4002745	            0x7439	                            je 0x4002780	      5821	option.c	IF_1	SWITCH_1
0x4002747	      0x3d1f500000	                         cmp eax, 0x501f	      5821	option.c	IF_1	SWITCH_1
0x400274c	            0x747a	                            je 0x40027c8	      5821	option.c	IF_1	SWITCH_1
0x400274e	      0x3d27400000	                         cmp eax, 0x4027	      5821	option.c	IF_1	SWITCH_1
0x4002753	            0x75ab	                           jne 0x4002700	      5821	option.c	IF_1	SWITCH_1
0x4002755	    0x488b05000000	            mov rax, qword [0x0400275c] 	      5835	option.c	IF_1	SWITCH_1
0x400275c	    0x488db8e81400	                 lea rdi, [rax + 0x14e8]	      5835	option.c	IF_1	SWITCH_1
0x4002763	            0xeba6	                           jmp 0x400270b	      5835	option.c	IF_1	SWITCH_1
0x4002765	           0xf1f00	                         nop dword [rax]	      5835	option.c	IF_1	SWITCH_1
0x4002768	    0x488b05000000	            mov rax, qword [0x0400276f] 	      5837	option.c	IF_1	SWITCH_1
0x400276f	    0x488db8081500	                 lea rdi, [rax + 0x1508]	      5837	option.c	IF_1	SWITCH_1
0x4002776	            0xeb93	                           jmp 0x400270b	      5837	option.c	IF_1	SWITCH_1
0x4002778	     0xf1f84000000	                   nop dword [rax + rax]	      5837	option.c	IF_1	SWITCH_1
0x4002780	    0x488b05000000	            mov rax, qword [0x04002787] 	      5839	option.c	IF_1	SWITCH_1
0x4002787	    0x488db8d81400	                 lea rdi, [rax + 0x14d8]	      5839	option.c	IF_1	SWITCH_1
0x400278e	      0xe978ffffff	                           jmp 0x400270b	      5839	option.c	IF_1	SWITCH_1
0x4002793	       0xf1f440000	                   nop dword [rax + rax]	      5839	option.c	IF_1	SWITCH_1
0x4002798	    0x488b05000000	            mov rax, qword [0x0400279f] 	      5829	option.c	IF_1	SWITCH_1
0x400279f	    0x488db8300500	                  lea rdi, [rax + 0x530]	      5829	option.c	IF_1	SWITCH_1
0x40027a6	      0xe960ffffff	                           jmp 0x400270b	      5829	option.c	IF_1	SWITCH_1
0x40027ab	       0xf1f440000	                   nop dword [rax + rax]	      5829	option.c	IF_1	SWITCH_1
0x40027b0	    0x488b05000000	            mov rax, qword [0x040027b7] 	      5828	option.c	IF_1	SWITCH_1
0x40027b7	    0x488db8280500	                  lea rdi, [rax + 0x528]	      5828	option.c	IF_1	SWITCH_1
0x40027be	      0xe948ffffff	                           jmp 0x400270b	      5828	option.c	IF_1	SWITCH_1
0x40027c3	       0xf1f440000	                   nop dword [rax + rax]	      5828	option.c	IF_1	SWITCH_1
0x40027c8	    0x488b05000000	            mov rax, qword [0x040027cf] 	      5832	option.c	IF_1	SWITCH_1
0x40027cf	    0x488db8401700	                 lea rdi, [rax + 0x1740]	      5832	option.c	IF_1	SWITCH_1
0x40027d6	      0xe930ffffff	                           jmp 0x400270b	      5832	option.c	IF_1	SWITCH_1
0x40027db	       0xf1f440000	                   nop dword [rax + rax]	      5832	option.c	IF_1	SWITCH_1
0x40027e0	    0x488b05000000	            mov rax, qword [0x040027e7] 	      5824	option.c	IF_1	SWITCH_1
0x40027e7	    0x488db8200500	                  lea rdi, [rax + 0x520]	      5824	option.c	IF_1	SWITCH_1
0x40027ee	      0xe918ffffff	                           jmp 0x400270b	      5824	option.c	IF_1	SWITCH_1
get_sts_value	SWITCH,0:CALL,1:DO,0:WHILE,0:IF,0:functions,0:ELSE,0:FOR,0	11
0x4013240	    0x488b15000000	            mov rdx, qword [0x04013247] 	     12534	option.c	FUNCTION_114	CALL_1
0x4013247	    0x488b82781500	          mov rax, qword [rdx + 0x1578] 	     12534	option.c	FUNCTION_114	CALL_1
0x401324e	          0x4885c0	                           test rax, rax	     12534	option.c	FUNCTION_114	CALL_1
0x4013251	            0x7805	                            js 0x4013258	     12534	option.c	FUNCTION_114	CALL_1
0x4013253	            0xf3c3	                                     ret	     12535	option.c	FUNCTION_114
0x4013255	           0xf1f00	                         nop dword [rax]	     12535	option.c	FUNCTION_114
0x4013258	    0x488b82681500	          mov rax, qword [rdx + 0x1568] 	     12524	option.c	FUNCTION_113
0x401325f	          0x4885c0	                           test rax, rax	     12524	option.c	FUNCTION_113
0x4013262	            0x75ef	                           jne 0x4013253	     12524	option.c	FUNCTION_113
0x4013264	    0x488b82a81500	          mov rax, qword [rdx + 0x15a8] 	     12524	option.c	FUNCTION_113
0x401326b	              0xc3	                                     ret	     12535	option.c	FUNCTION_114
change_compatible	SWITCH,0:CALL,2:DO,0:WHILE,0:IF,2:functions,0:ELSE,0:FOR,0	14
0x400d7b0	        0x4883ec08	                              sub rsp, 8	     12234	option.c	FUNCTION_101
0x400d7b4	    0x393d00000000	            cmp dword [0x0400d7ba], edi 	     12237	option.c	FUNCTION_101	IF_1
0x400d7ba	            0x740b	                            je 0x400d7c7	     12237	option.c	FUNCTION_101	IF_1
0x400d7bc	    0x893d00000000	            mov dword [0x0400d7c2], edi 	     12239	option.c	FUNCTION_101	IF_1
0x400d7c2	      0xe8b976ffff	                 call sym.compatible_set	     12240	option.c	FUNCTION_101	IF_1	CALL_1
0x400d7c7	      0xbf00000000	                              mov edi, 0	     12242	option.c	FUNCTION_101	CALL_2
0x400d7cc	      0xe84f2bffff	                     call sym.findoption	     12242	option.c	FUNCTION_101	CALL_2
0x400d7d1	            0x85c0	                           test eax, eax	     12243	option.c	FUNCTION_101	IF_2
0x400d7d3	            0x7811	                            js 0x400d7e6	     12243	option.c	FUNCTION_101	IF_2
0x400d7d5	            0x4898	                                    cdqe	     12244	option.c	FUNCTION_101	IF_2
0x400d7d7	        0x48c1e006	                              shl rax, 6	     12244	option.c	FUNCTION_101	IF_2
0x400d7db	    0x488188000000	                   or qword [rax], 0x100	     12244	option.c	FUNCTION_101	IF_2
0x400d7e6	        0x4883c408	                              add rsp, 8	     12245	option.c	FUNCTION_101
0x400d7ea	              0xc3	                                     ret	     12245	option.c	FUNCTION_101
set_init_1	SWITCH,0:CALL,86:DO,0:WHILE,0:IF,41:functions,0:ELSE,9:FOR,3	1261
0x40119e0	            0x4156	                                push r14	      3329	option.c	FUNCTION_1
0x40119e2	            0x4155	                                push r13	      3329	option.c	FUNCTION_1
0x40119e4	      0xba00000000	                              mov edx, 0	      3329	option.c	FUNCTION_1
0x40119e9	            0x4154	                                push r12	      3329	option.c	FUNCTION_1
0x40119eb	              0x55	                                push rbp	      3329	option.c	FUNCTION_1
0x40119ec	          0x48f7da	                                 neg rdx	      3329	option.c	FUNCTION_1
0x40119ef	              0x53	                                push rbx	      3329	option.c	FUNCTION_1
0x40119f0	            0x89fd	                            mov ebp, edi	      3329	option.c	FUNCTION_1
0x40119f2	        0x4883ec40	                           sub rsp, 0x40	      3329	option.c	FUNCTION_1
0x40119f6	    0x64488b042528	                mov rax, qword fs:[0x28]	      3329	option.c	FUNCTION_1
0x40119ff	      0x4889442438	             mov qword [rsp + 0x38], rax	      3329	option.c	FUNCTION_1
0x4011a04	            0x31c0	                            xor eax, eax	      3329	option.c	FUNCTION_1
0x4011a06	          0x83e20f	                            and edx, 0xf	      3329	option.c	FUNCTION_1
0x4011a09	     0xf84d9120000	                            je 0x4012ce8	      3329	option.c	FUNCTION_1
0x4011a0f	          0x83fa01	                              cmp edx, 1	      3329	option.c	FUNCTION_1
0x4011a12	    0xc60500000000	                mov byte [0x04011a19], 0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011a19	     0xf849d150000	                            je 0x4012fbc	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011a1f	          0x83fa02	                              cmp edx, 2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011a22	    0xc60500000000	                mov byte [0x04011a29], 1	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011a29	     0xf849c150000	                            je 0x4012fcb	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011a2f	          0x83fa03	                              cmp edx, 3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011a32	    0xc60500000000	                mov byte [0x04011a39], 2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011a39	     0xf849b150000	                            je 0x4012fda	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011a3f	          0x83fa04	                              cmp edx, 4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011a42	    0xc60500000000	                mov byte [0x04011a49], 3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011a49	     0xf849a150000	                            je 0x4012fe9	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011a4f	          0x83fa05	                              cmp edx, 5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011a52	    0xc60500000000	                mov byte [0x04011a59], 4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011a59	     0xf84e5140000	                            je 0x4012f44	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011a5f	          0x83fa06	                              cmp edx, 6	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011a62	    0xc60500000000	                mov byte [0x04011a69], 5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011a69	     0xf84e4140000	                            je 0x4012f53	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011a6f	          0x83fa07	                              cmp edx, 7	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011a72	    0xc60500000000	                mov byte [0x04011a79], 6	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011a79	     0xf84e3140000	                            je 0x4012f62	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011a7f	          0x83fa08	                              cmp edx, 8	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011a82	    0xc60500000000	                mov byte [0x04011a89], 7	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011a89	     0xf84e2140000	                            je 0x4012f71	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011a8f	          0x83fa09	                              cmp edx, 9	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011a92	    0xc60500000000	                mov byte [0x04011a99], 8	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011a99	     0xf84e1140000	                            je 0x4012f80	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011a9f	          0x83fa0a	                            cmp edx, 0xa	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011aa2	    0xc60500000000	                mov byte [0x04011aa9], 9	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011aa9	     0xf84e0140000	                            je 0x4012f8f	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011aaf	          0x83fa0b	                            cmp edx, 0xb	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011ab2	    0xc60500000000	              mov byte [0x04011ab9], 0xa	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011ab9	     0xf84df140000	                            je 0x4012f9e	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011abf	          0x83fa0c	                            cmp edx, 0xc	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011ac2	    0xc60500000000	              mov byte [0x04011ac9], 0xb	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011ac9	     0xf84de140000	                            je 0x4012fad	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011acf	          0x83fa0d	                            cmp edx, 0xd	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011ad2	    0xc60500000000	              mov byte [0x04011ad9], 0xc	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011ad9	     0xf8419150000	                            je 0x4012ff8	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011adf	          0x83fa0f	                            cmp edx, 0xf	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011ae2	    0xc60500000000	              mov byte [0x04011ae9], 0xd	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011ae9	     0xf8546140000	                           jne 0x4012f35	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011aef	    0xc60500000000	              mov byte [0x04011af6], 0xe	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011af6	      0xbef1000000	                           mov esi, 0xf1	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011afb	      0xb80f000000	                            mov eax, 0xf	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011b00	      0xbf00010000	                          mov edi, 0x100	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011b05	          0x4189d1	                            mov r9d, edx	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011b08	    0x41b8f0000000	                           mov r8d, 0xf0	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011b0e	            0x29d7	                            sub edi, edx	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011b10	      0xba0f000000	                            mov edx, 0xf	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011b15	        0x89442408	                mov dword [rsp + 8], eax	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011b19	          0x83fa10	                           cmp edx, 0x10	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011b1c	    0x660f6e7c2408	              movd xmm7, dword [rsp + 8]	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011b22	    0x660f6f150000	       movdqa xmm2, xmmword [0x04011b2a]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011b2a	      0x660f70c700	                    pshufd xmm0, xmm7, 0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011b2f	    0x660f6f1d0000	       movdqa xmm3, xmmword [0x04011b37]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011b37	        0x660ffed0	                        paddd xmm2, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011b3b	        0x660ffed8	                        paddd xmm3, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011b3f	        0x660f6fca	                       movdqa xmm1, xmm2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011b43	        0x660f61d3	                    punpcklwd xmm2, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011b47	    0x660f6f250000	       movdqa xmm4, xmmword [0x04011b4f]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011b4f	        0x660f69cb	                    punpckhwd xmm1, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011b53	        0x660ffee0	                        paddd xmm4, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011b57	    0x660f6f2d0000	       movdqa xmm5, xmmword [0x04011b5f]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011b5f	        0x660f6fda	                       movdqa xmm3, xmm2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011b63	        0x660f61d1	                    punpcklwd xmm2, xmm1	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011b67	        0x660ffee8	                        paddd xmm5, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011b6b	        0x660f69d9	                    punpckhwd xmm3, xmm1	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011b6f	        0x660f61d3	                    punpcklwd xmm2, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011b73	    0x660f6f1d0000	       movdqa xmm3, xmmword [0x04011b7b]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011b7b	        0x660ffed8	                        paddd xmm3, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011b7f	        0x660f6fcb	                       movdqa xmm1, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011b83	        0x660f61dc	                    punpcklwd xmm3, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011b87	        0x660f69cc	                    punpckhwd xmm1, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011b8b	        0x660f6fe3	                       movdqa xmm4, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011b8f	        0x660f61d9	                    punpcklwd xmm3, xmm1	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011b93	        0x660f69e1	                    punpckhwd xmm4, xmm1	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011b97	    0x660f6f0d0000	       movdqa xmm1, xmmword [0x04011b9f]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011b9f	        0x660fdbd1	                         pand xmm2, xmm1	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011ba3	        0x660f61dc	                    punpcklwd xmm3, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011ba7	    0x660f6f250000	       movdqa xmm4, xmmword [0x04011baf]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011baf	        0x660ffee0	                        paddd xmm4, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011bb3	        0x660fdbd9	                         pand xmm3, xmm1	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011bb7	        0x660f67d3	                     packuswb xmm2, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011bbb	    0x410f29910000	               movaps xmmword [r9], xmm2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011bc3	    0x660f6f150000	       movdqa xmm2, xmmword [0x04011bcb]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011bcb	        0x660ffed0	                        paddd xmm2, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011bcf	        0x660f6fda	                       movdqa xmm3, xmm2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011bd3	        0x660f61d4	                    punpcklwd xmm2, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011bd7	        0x660f69dc	                    punpckhwd xmm3, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011bdb	        0x660f6fe2	                       movdqa xmm4, xmm2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011bdf	        0x660f61d3	                    punpcklwd xmm2, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011be3	        0x660f69e3	                    punpckhwd xmm4, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011be7	    0x660f6f1d0000	       movdqa xmm3, xmmword [0x04011bef]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011bef	        0x660ffed8	                        paddd xmm3, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011bf3	        0x660f61d4	                    punpcklwd xmm2, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011bf7	        0x660f6fe3	                       movdqa xmm4, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011bfb	        0x660f61dd	                    punpcklwd xmm3, xmm5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011bff	        0x660f69e5	                    punpckhwd xmm4, xmm5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011c03	        0x660f6feb	                       movdqa xmm5, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011c07	        0x660fdbd1	                         pand xmm2, xmm1	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011c0b	        0x660f69ec	                    punpckhwd xmm5, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011c0f	        0x660f61dc	                    punpcklwd xmm3, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011c13	    0x660f6f250000	       movdqa xmm4, xmmword [0x04011c1b]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011c1b	        0x660ffee0	                        paddd xmm4, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011c1f	        0x660f61dd	                    punpcklwd xmm3, xmm5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011c23	    0x660f6f2d0000	       movdqa xmm5, xmmword [0x04011c2b]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011c2b	        0x660fdbd9	                         pand xmm3, xmm1	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011c2f	        0x660ffee8	                        paddd xmm5, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011c33	        0x660f67d3	                     packuswb xmm2, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011c37	    0x410f29910000	               movaps xmmword [r9], xmm2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011c3f	    0x660f6f150000	       movdqa xmm2, xmmword [0x04011c47]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011c47	        0x660ffed0	                        paddd xmm2, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011c4b	        0x660f6fda	                       movdqa xmm3, xmm2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011c4f	        0x660f61d4	                    punpcklwd xmm2, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011c53	        0x660f69dc	                    punpckhwd xmm3, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011c57	        0x660f6fe2	                       movdqa xmm4, xmm2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011c5b	        0x660f61d3	                    punpcklwd xmm2, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011c5f	        0x660f69e3	                    punpckhwd xmm4, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011c63	    0x660f6f1d0000	       movdqa xmm3, xmmword [0x04011c6b]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011c6b	        0x660ffed8	                        paddd xmm3, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011c6f	        0x660f61d4	                    punpcklwd xmm2, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011c73	        0x660f6fe3	                       movdqa xmm4, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011c77	        0x660f61dd	                    punpcklwd xmm3, xmm5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011c7b	        0x660f69e5	                    punpckhwd xmm4, xmm5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011c7f	        0x660f6feb	                       movdqa xmm5, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011c83	        0x660fdbd1	                         pand xmm2, xmm1	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011c87	        0x660f69ec	                    punpckhwd xmm5, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011c8b	        0x660f61dc	                    punpcklwd xmm3, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011c8f	    0x660f6f250000	       movdqa xmm4, xmmword [0x04011c97]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011c97	        0x660ffee0	                        paddd xmm4, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011c9b	        0x660f61dd	                    punpcklwd xmm3, xmm5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011c9f	    0x660f6f2d0000	       movdqa xmm5, xmmword [0x04011ca7]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011ca7	        0x660fdbd9	                         pand xmm3, xmm1	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011cab	        0x660ffee8	                        paddd xmm5, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011caf	        0x660f67d3	                     packuswb xmm2, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011cb3	    0x410f29910000	               movaps xmmword [r9], xmm2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011cbb	    0x660f6f150000	       movdqa xmm2, xmmword [0x04011cc3]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011cc3	        0x660ffed0	                        paddd xmm2, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011cc7	        0x660f6fda	                       movdqa xmm3, xmm2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011ccb	        0x660f61d4	                    punpcklwd xmm2, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011ccf	        0x660f69dc	                    punpckhwd xmm3, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011cd3	        0x660f6fe2	                       movdqa xmm4, xmm2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011cd7	        0x660f61d3	                    punpcklwd xmm2, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011cdb	        0x660f69e3	                    punpckhwd xmm4, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011cdf	    0x660f6f1d0000	       movdqa xmm3, xmmword [0x04011ce7]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011ce7	        0x660ffed8	                        paddd xmm3, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011ceb	        0x660f61d4	                    punpcklwd xmm2, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011cef	        0x660f6fe3	                       movdqa xmm4, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011cf3	        0x660f61dd	                    punpcklwd xmm3, xmm5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011cf7	        0x660f69e5	                    punpckhwd xmm4, xmm5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011cfb	        0x660f6feb	                       movdqa xmm5, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011cff	        0x660fdbd1	                         pand xmm2, xmm1	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011d03	        0x660f69ec	                    punpckhwd xmm5, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011d07	        0x660f61dc	                    punpcklwd xmm3, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011d0b	    0x660f6f250000	       movdqa xmm4, xmmword [0x04011d13]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011d13	        0x660ffee0	                        paddd xmm4, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011d17	        0x660f61dd	                    punpcklwd xmm3, xmm5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011d1b	    0x660f6f2d0000	       movdqa xmm5, xmmword [0x04011d23]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011d23	        0x660fdbd9	                         pand xmm3, xmm1	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011d27	        0x660ffee8	                        paddd xmm5, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011d2b	        0x660f67d3	                     packuswb xmm2, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011d2f	    0x410f29910000	               movaps xmmword [r9], xmm2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011d37	    0x660f6f150000	       movdqa xmm2, xmmword [0x04011d3f]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011d3f	        0x660ffed0	                        paddd xmm2, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011d43	        0x660f6fda	                       movdqa xmm3, xmm2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011d47	        0x660f61d4	                    punpcklwd xmm2, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011d4b	        0x660f69dc	                    punpckhwd xmm3, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011d4f	        0x660f6fe2	                       movdqa xmm4, xmm2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011d53	        0x660f61d3	                    punpcklwd xmm2, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011d57	        0x660f69e3	                    punpckhwd xmm4, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011d5b	    0x660f6f1d0000	       movdqa xmm3, xmmword [0x04011d63]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011d63	        0x660ffed8	                        paddd xmm3, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011d67	        0x660f61d4	                    punpcklwd xmm2, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011d6b	        0x660f6fe3	                       movdqa xmm4, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011d6f	        0x660f61dd	                    punpcklwd xmm3, xmm5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011d73	        0x660f69e5	                    punpckhwd xmm4, xmm5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011d77	        0x660f6feb	                       movdqa xmm5, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011d7b	        0x660fdbd1	                         pand xmm2, xmm1	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011d7f	        0x660f69ec	                    punpckhwd xmm5, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011d83	        0x660f61dc	                    punpcklwd xmm3, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011d87	    0x660f6f250000	       movdqa xmm4, xmmword [0x04011d8f]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011d8f	        0x660ffee0	                        paddd xmm4, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011d93	        0x660f61dd	                    punpcklwd xmm3, xmm5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011d97	    0x660f6f2d0000	       movdqa xmm5, xmmword [0x04011d9f]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011d9f	        0x660fdbd9	                         pand xmm3, xmm1	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011da3	        0x660ffee8	                        paddd xmm5, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011da7	        0x660f67d3	                     packuswb xmm2, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011dab	    0x410f29910000	               movaps xmmword [r9], xmm2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011db3	    0x660f6f150000	       movdqa xmm2, xmmword [0x04011dbb]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011dbb	        0x660ffed0	                        paddd xmm2, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011dbf	        0x660f6fda	                       movdqa xmm3, xmm2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011dc3	        0x660f61d4	                    punpcklwd xmm2, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011dc7	        0x660f69dc	                    punpckhwd xmm3, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011dcb	        0x660f6fe2	                       movdqa xmm4, xmm2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011dcf	        0x660f61d3	                    punpcklwd xmm2, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011dd3	        0x660f69e3	                    punpckhwd xmm4, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011dd7	    0x660f6f1d0000	       movdqa xmm3, xmmword [0x04011ddf]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011ddf	        0x660ffed8	                        paddd xmm3, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011de3	        0x660f61d4	                    punpcklwd xmm2, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011de7	        0x660f6fe3	                       movdqa xmm4, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011deb	        0x660f61dd	                    punpcklwd xmm3, xmm5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011def	        0x660f69e5	                    punpckhwd xmm4, xmm5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011df3	        0x660f6feb	                       movdqa xmm5, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011df7	        0x660fdbd1	                         pand xmm2, xmm1	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011dfb	        0x660f69ec	                    punpckhwd xmm5, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011dff	        0x660f61dc	                    punpcklwd xmm3, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011e03	        0x660f61dd	                    punpcklwd xmm3, xmm5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011e07	        0x660fdbd9	                         pand xmm3, xmm1	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011e0b	        0x660f67d3	                     packuswb xmm2, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011e0f	    0x410f29910000	               movaps xmmword [r9], xmm2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011e17	    0x660f6f150000	       movdqa xmm2, xmmword [0x04011e1f]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011e1f	    0x660f6f250000	       movdqa xmm4, xmmword [0x04011e27]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011e27	        0x660ffed0	                        paddd xmm2, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011e2b	        0x660f6fda	                       movdqa xmm3, xmm2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011e2f	        0x660ffee0	                        paddd xmm4, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011e33	        0x660f61d4	                    punpcklwd xmm2, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011e37	    0x660f6f2d0000	       movdqa xmm5, xmmword [0x04011e3f]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011e3f	        0x660f69dc	                    punpckhwd xmm3, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011e43	        0x660ffee8	                        paddd xmm5, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011e47	        0x660f6fe2	                       movdqa xmm4, xmm2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011e4b	        0x660f61d3	                    punpcklwd xmm2, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011e4f	        0x660f69e3	                    punpckhwd xmm4, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011e53	    0x660f6f1d0000	       movdqa xmm3, xmmword [0x04011e5b]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011e5b	        0x660ffed8	                        paddd xmm3, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011e5f	        0x660f61d4	                    punpcklwd xmm2, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011e63	        0x660f6fe3	                       movdqa xmm4, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011e67	        0x660f61dd	                    punpcklwd xmm3, xmm5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011e6b	        0x660f69e5	                    punpckhwd xmm4, xmm5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011e6f	        0x660f6feb	                       movdqa xmm5, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011e73	        0x660fdbd1	                         pand xmm2, xmm1	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011e77	        0x660f69ec	                    punpckhwd xmm5, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011e7b	        0x660f61dc	                    punpcklwd xmm3, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011e7f	    0x660f6f250000	       movdqa xmm4, xmmword [0x04011e87]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011e87	        0x660ffee0	                        paddd xmm4, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011e8b	        0x660f61dd	                    punpcklwd xmm3, xmm5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011e8f	    0x660f6f2d0000	       movdqa xmm5, xmmword [0x04011e97]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011e97	        0x660fdbd9	                         pand xmm3, xmm1	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011e9b	        0x660ffee8	                        paddd xmm5, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011e9f	        0x660f67d3	                     packuswb xmm2, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011ea3	    0x410f29910000	               movaps xmmword [r9], xmm2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011eab	    0x660f6f150000	       movdqa xmm2, xmmword [0x04011eb3]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011eb3	        0x660ffed0	                        paddd xmm2, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011eb7	        0x660f6fda	                       movdqa xmm3, xmm2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011ebb	        0x660f61d4	                    punpcklwd xmm2, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011ebf	        0x660f69dc	                    punpckhwd xmm3, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011ec3	        0x660f6fe2	                       movdqa xmm4, xmm2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011ec7	        0x660f61d3	                    punpcklwd xmm2, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011ecb	        0x660f69e3	                    punpckhwd xmm4, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011ecf	    0x660f6f1d0000	       movdqa xmm3, xmmword [0x04011ed7]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011ed7	        0x660ffed8	                        paddd xmm3, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011edb	        0x660f61d4	                    punpcklwd xmm2, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011edf	        0x660f6fe3	                       movdqa xmm4, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011ee3	        0x660f61dd	                    punpcklwd xmm3, xmm5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011ee7	        0x660f69e5	                    punpckhwd xmm4, xmm5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011eeb	        0x660f6feb	                       movdqa xmm5, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011eef	        0x660fdbd1	                         pand xmm2, xmm1	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011ef3	        0x660f69ec	                    punpckhwd xmm5, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011ef7	        0x660f61dc	                    punpcklwd xmm3, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011efb	    0x660f6f250000	       movdqa xmm4, xmmword [0x04011f03]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011f03	        0x660ffee0	                        paddd xmm4, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011f07	        0x660f61dd	                    punpcklwd xmm3, xmm5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011f0b	    0x660f6f2d0000	       movdqa xmm5, xmmword [0x04011f13]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011f13	        0x660fdbd9	                         pand xmm3, xmm1	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011f17	        0x660ffee8	                        paddd xmm5, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011f1b	        0x660f67d3	                     packuswb xmm2, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011f1f	    0x410f29910000	               movaps xmmword [r9], xmm2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011f27	    0x660f6f150000	       movdqa xmm2, xmmword [0x04011f2f]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011f2f	        0x660ffed0	                        paddd xmm2, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011f33	        0x660f6fda	                       movdqa xmm3, xmm2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011f37	        0x660f61d4	                    punpcklwd xmm2, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011f3b	        0x660f69dc	                    punpckhwd xmm3, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011f3f	        0x660f6fe2	                       movdqa xmm4, xmm2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011f43	        0x660f61d3	                    punpcklwd xmm2, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011f47	        0x660f69e3	                    punpckhwd xmm4, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011f4b	    0x660f6f1d0000	       movdqa xmm3, xmmword [0x04011f53]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011f53	        0x660ffed8	                        paddd xmm3, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011f57	        0x660f61d4	                    punpcklwd xmm2, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011f5b	        0x660f6fe3	                       movdqa xmm4, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011f5f	        0x660f61dd	                    punpcklwd xmm3, xmm5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011f63	        0x660f69e5	                    punpckhwd xmm4, xmm5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011f67	        0x660f6feb	                       movdqa xmm5, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011f6b	        0x660fdbd1	                         pand xmm2, xmm1	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011f6f	        0x660f69ec	                    punpckhwd xmm5, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011f73	        0x660f61dc	                    punpcklwd xmm3, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011f77	    0x660f6f250000	       movdqa xmm4, xmmword [0x04011f7f]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011f7f	        0x660ffee0	                        paddd xmm4, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011f83	        0x660f61dd	                    punpcklwd xmm3, xmm5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011f87	    0x660f6f2d0000	       movdqa xmm5, xmmword [0x04011f8f]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011f8f	        0x660fdbd9	                         pand xmm3, xmm1	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011f93	        0x660ffee8	                        paddd xmm5, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011f97	        0x660f67d3	                     packuswb xmm2, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011f9b	    0x410f29910000	               movaps xmmword [r9], xmm2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011fa3	    0x660f6f150000	       movdqa xmm2, xmmword [0x04011fab]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011fab	        0x660ffed0	                        paddd xmm2, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011faf	        0x660f6fda	                       movdqa xmm3, xmm2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011fb3	        0x660f61d4	                    punpcklwd xmm2, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011fb7	        0x660f69dc	                    punpckhwd xmm3, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011fbb	        0x660f6fe2	                       movdqa xmm4, xmm2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011fbf	        0x660f61d3	                    punpcklwd xmm2, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011fc3	        0x660f69e3	                    punpckhwd xmm4, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011fc7	    0x660f6f1d0000	       movdqa xmm3, xmmword [0x04011fcf]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011fcf	        0x660ffed8	                        paddd xmm3, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011fd3	        0x660f61d4	                    punpcklwd xmm2, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011fd7	        0x660f6fe3	                       movdqa xmm4, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011fdb	        0x660f61dd	                    punpcklwd xmm3, xmm5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011fdf	        0x660f69e5	                    punpckhwd xmm4, xmm5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011fe3	        0x660f6feb	                       movdqa xmm5, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011fe7	        0x660fdbd1	                         pand xmm2, xmm1	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011feb	        0x660f69ec	                    punpckhwd xmm5, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011fef	        0x660f61dc	                    punpcklwd xmm3, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011ff3	    0x660f6f250000	       movdqa xmm4, xmmword [0x04011ffb]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011ffb	        0x660ffee0	                        paddd xmm4, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4011fff	        0x660f61dd	                    punpcklwd xmm3, xmm5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012003	    0x660f6f2d0000	       movdqa xmm5, xmmword [0x0401200b]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401200b	        0x660fdbd9	                         pand xmm3, xmm1	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401200f	        0x660ffee8	                        paddd xmm5, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012013	        0x660f67d3	                     packuswb xmm2, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012017	    0x410f29910000	               movaps xmmword [r9], xmm2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401201f	    0x660f6f150000	       movdqa xmm2, xmmword [0x04012027]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012027	        0x660ffed0	                        paddd xmm2, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401202b	        0x660f6fda	                       movdqa xmm3, xmm2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401202f	        0x660f61d4	                    punpcklwd xmm2, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012033	        0x660f69dc	                    punpckhwd xmm3, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012037	        0x660f6fe2	                       movdqa xmm4, xmm2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401203b	        0x660f61d3	                    punpcklwd xmm2, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401203f	        0x660f69e3	                    punpckhwd xmm4, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012043	    0x660f6f1d0000	       movdqa xmm3, xmmword [0x0401204b]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401204b	        0x660ffed8	                        paddd xmm3, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401204f	        0x660f61d4	                    punpcklwd xmm2, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012053	        0x660f6fe3	                       movdqa xmm4, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012057	        0x660f61dd	                    punpcklwd xmm3, xmm5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401205b	        0x660f69e5	                    punpckhwd xmm4, xmm5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401205f	        0x660f6feb	                       movdqa xmm5, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012063	        0x660fdbd1	                         pand xmm2, xmm1	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012067	        0x660f69ec	                    punpckhwd xmm5, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401206b	        0x660f61dc	                    punpcklwd xmm3, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401206f	    0x660f6f250000	       movdqa xmm4, xmmword [0x04012077]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012077	        0x660ffee0	                        paddd xmm4, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401207b	        0x660f61dd	                    punpcklwd xmm3, xmm5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401207f	    0x660f6f2d0000	       movdqa xmm5, xmmword [0x04012087]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012087	        0x660fdbd9	                         pand xmm3, xmm1	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401208b	        0x660ffee8	                        paddd xmm5, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401208f	        0x660f67d3	                     packuswb xmm2, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012093	    0x410f29910000	               movaps xmmword [r9], xmm2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401209b	    0x660f6f150000	       movdqa xmm2, xmmword [0x040120a3]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40120a3	        0x660ffed0	                        paddd xmm2, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40120a7	        0x660f6fda	                       movdqa xmm3, xmm2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40120ab	        0x660f61d4	                    punpcklwd xmm2, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40120af	        0x660f69dc	                    punpckhwd xmm3, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40120b3	        0x660f6fe2	                       movdqa xmm4, xmm2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40120b7	        0x660f61d3	                    punpcklwd xmm2, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40120bb	        0x660f69e3	                    punpckhwd xmm4, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40120bf	    0x660f6f1d0000	       movdqa xmm3, xmmword [0x040120c7]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40120c7	        0x660ffed8	                        paddd xmm3, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40120cb	        0x660f61d4	                    punpcklwd xmm2, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40120cf	        0x660f6fe3	                       movdqa xmm4, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40120d3	        0x660f61dd	                    punpcklwd xmm3, xmm5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40120d7	        0x660f69e5	                    punpckhwd xmm4, xmm5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40120db	        0x660f6feb	                       movdqa xmm5, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40120df	        0x660fdbd1	                         pand xmm2, xmm1	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40120e3	        0x660f69ec	                    punpckhwd xmm5, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40120e7	        0x660f61dc	                    punpcklwd xmm3, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40120eb	    0x660f6f250000	       movdqa xmm4, xmmword [0x040120f3]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40120f3	        0x660ffee0	                        paddd xmm4, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40120f7	        0x660f61dd	                    punpcklwd xmm3, xmm5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40120fb	        0x660fdbd9	                         pand xmm3, xmm1	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40120ff	        0x660f67d3	                     packuswb xmm2, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012103	    0x410f29910000	               movaps xmmword [r9], xmm2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401210b	    0x660f6f150000	       movdqa xmm2, xmmword [0x04012113]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012113	        0x660ffed0	                        paddd xmm2, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012117	        0x660f6fda	                       movdqa xmm3, xmm2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401211b	        0x660f61d4	                    punpcklwd xmm2, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401211f	        0x660f69dc	                    punpckhwd xmm3, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012123	        0x660f6fe2	                       movdqa xmm4, xmm2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012127	        0x660f61d3	                    punpcklwd xmm2, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401212b	        0x660f69e3	                    punpckhwd xmm4, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401212f	    0x660f6f1d0000	       movdqa xmm3, xmmword [0x04012137]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012137	    0x660f6f2d0000	       movdqa xmm5, xmmword [0x0401213f]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401213f	        0x660ffed8	                        paddd xmm3, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012143	        0x660f61d4	                    punpcklwd xmm2, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012147	        0x660f6fe3	                       movdqa xmm4, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401214b	        0x660ffee8	                        paddd xmm5, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401214f	        0x660f61dd	                    punpcklwd xmm3, xmm5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012153	        0x660f69e5	                    punpckhwd xmm4, xmm5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012157	    0x660f6f350000	       movdqa xmm6, xmmword [0x0401215f]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401215f	        0x660fdbd1	                         pand xmm2, xmm1	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012163	        0x660f6feb	                       movdqa xmm5, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012167	        0x660ffef0	                        paddd xmm6, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401216b	        0x660f61dc	                    punpcklwd xmm3, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401216f	        0x660f69ec	                    punpckhwd xmm5, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012173	    0x660f6f250000	       movdqa xmm4, xmmword [0x0401217b]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401217b	        0x660ffee0	                        paddd xmm4, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401217f	        0x660f61dd	                    punpcklwd xmm3, xmm5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012183	    0x660f6f2d0000	       movdqa xmm5, xmmword [0x0401218b]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401218b	        0x660fdbd9	                         pand xmm3, xmm1	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401218f	        0x660ffee8	                        paddd xmm5, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012193	        0x660f67d3	                     packuswb xmm2, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012197	    0x410f29910000	               movaps xmmword [r9], xmm2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401219f	    0x660f6f150000	       movdqa xmm2, xmmword [0x040121a7]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40121a7	        0x660ffed0	                        paddd xmm2, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40121ab	        0x660f6fda	                       movdqa xmm3, xmm2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40121af	        0x660f61d4	                    punpcklwd xmm2, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40121b3	        0x660f69dc	                    punpckhwd xmm3, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40121b7	        0x660f6fe2	                       movdqa xmm4, xmm2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40121bb	        0x660f61d3	                    punpcklwd xmm2, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40121bf	        0x660f69e3	                    punpckhwd xmm4, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40121c3	    0x660f6f1d0000	       movdqa xmm3, xmmword [0x040121cb]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40121cb	        0x660ffed8	                        paddd xmm3, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40121cf	        0x660f61d4	                    punpcklwd xmm2, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40121d3	        0x660f6fe3	                       movdqa xmm4, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40121d7	        0x660f61dd	                    punpcklwd xmm3, xmm5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40121db	        0x660f69e5	                    punpckhwd xmm4, xmm5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40121df	        0x660f6feb	                       movdqa xmm5, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40121e3	        0x660fdbd1	                         pand xmm2, xmm1	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40121e7	        0x660f69ec	                    punpckhwd xmm5, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40121eb	        0x660f61dc	                    punpcklwd xmm3, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40121ef	        0x660f61dd	                    punpcklwd xmm3, xmm5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40121f3	    0x660f6f2d0000	       movdqa xmm5, xmmword [0x040121fb]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40121fb	        0x660fdbd9	                         pand xmm3, xmm1	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40121ff	        0x660ffee8	                        paddd xmm5, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012203	        0x660f67d3	                     packuswb xmm2, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012207	    0x660f6f1d0000	       movdqa xmm3, xmmword [0x0401220f]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401220f	        0x660ffed8	                        paddd xmm3, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012213	        0x660f6fe3	                       movdqa xmm4, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012217	        0x660f61dd	                    punpcklwd xmm3, xmm5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401221b	        0x660f69e5	                    punpckhwd xmm4, xmm5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401221f	    0x410f29910000	               movaps xmmword [r9], xmm2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012227	        0x660f6feb	                       movdqa xmm5, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401222b	        0x660f61dc	                    punpcklwd xmm3, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401222f	        0x660f69ec	                    punpckhwd xmm5, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012233	    0x660f6f250000	       movdqa xmm4, xmmword [0x0401223b]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401223b	        0x660f61dd	                    punpcklwd xmm3, xmm5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401223f	        0x660ffee0	                        paddd xmm4, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012243	        0x660f6fec	                       movdqa xmm5, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012247	        0x660f61e6	                    punpcklwd xmm4, xmm6	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401224b	    0x660f6f150000	       movdqa xmm2, xmmword [0x04012253]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012253	        0x660f69ee	                    punpckhwd xmm5, xmm6	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012257	        0x660f6ff4	                       movdqa xmm6, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401225b	        0x660fdbd9	                         pand xmm3, xmm1	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401225f	        0x660ffed0	                        paddd xmm2, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012263	        0x660f69f5	                    punpckhwd xmm6, xmm5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012267	        0x660f61e5	                    punpcklwd xmm4, xmm5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401226b	        0x660f61e6	                    punpcklwd xmm4, xmm6	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401226f	        0x660fdbe1	                         pand xmm4, xmm1	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012273	        0x660f67dc	                     packuswb xmm3, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012277	    0x410f29990000	               movaps xmmword [r9], xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401227f	            0x7574	                           jne 0x40122f5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012281	        0x660f6fda	                       movdqa xmm3, xmm2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012285	    0x660f6f250000	       movdqa xmm4, xmmword [0x0401228d]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401228d	        0x660ffee0	                        paddd xmm4, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012291	        0x660f61d4	                    punpcklwd xmm2, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012295	        0x660f69dc	                    punpckhwd xmm3, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012299	        0x660f6fe2	                       movdqa xmm4, xmm2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401229d	        0x660f61d3	                    punpcklwd xmm2, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40122a1	        0x660f69e3	                    punpckhwd xmm4, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40122a5	    0x660f6f1d0000	       movdqa xmm3, xmmword [0x040122ad]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40122ad	        0x660ffed8	                        paddd xmm3, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40122b1	        0x660f6ffb	                       movdqa xmm7, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40122b5	    0x660ffe050000	        paddd xmm0, xmmword [0x040122bd]	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40122bd	        0x660f61d4	                    punpcklwd xmm2, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40122c1	        0x660f6fe3	                       movdqa xmm4, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40122c5	        0x660f61f8	                    punpcklwd xmm7, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40122c9	        0x660f69e0	                    punpckhwd xmm4, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40122cd	        0x660fdbd1	                         pand xmm2, xmm1	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40122d1	        0x660f6fc7	                       movdqa xmm0, xmm7	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40122d5	        0x660f6fdf	                       movdqa xmm3, xmm7	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40122d9	        0x660f61c4	                    punpcklwd xmm0, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40122dd	        0x660f69dc	                    punpckhwd xmm3, xmm4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40122e1	        0x660f61c3	                    punpcklwd xmm0, xmm3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40122e5	        0x660fdbc8	                         pand xmm1, xmm0	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40122e9	        0x660f67d1	                     packuswb xmm2, xmm1	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40122ed	    0x410f29910000	               movaps xmmword [r9], xmm2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40122f5	          0x4429c6	                            sub esi, r8d	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40122f8	          0x4401c0	                            add eax, r8d	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40122fb	          0x4139f8	                            cmp r8d, edi	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40122fe	            0x89f2	                            mov edx, esi	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012300	     0xf8413010000	                            je 0x4012419	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012306	          0x4863c8	                         movsxd rcx, eax	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012309	          0x83fe01	                              cmp esi, 1	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401230c	    0x888100000000	                      mov byte [rcx], al	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012312	          0x8d4801	                      lea ecx, [rax + 1]	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012315	     0xf84fe000000	                            je 0x4012419	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401231b	          0x4863f1	                         movsxd rsi, ecx	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401231e	          0x83fa02	                              cmp edx, 2	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012321	    0x888e00000000	                      mov byte [rsi], cl	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012327	          0x8d4802	                      lea ecx, [rax + 2]	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401232a	     0xf84e9000000	                            je 0x4012419	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012330	          0x4863f1	                         movsxd rsi, ecx	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012333	          0x83fa03	                              cmp edx, 3	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012336	    0x888e00000000	                      mov byte [rsi], cl	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401233c	          0x8d4803	                      lea ecx, [rax + 3]	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401233f	     0xf84d4000000	                            je 0x4012419	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012345	          0x4863f1	                         movsxd rsi, ecx	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012348	          0x83fa04	                              cmp edx, 4	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401234b	    0x888e00000000	                      mov byte [rsi], cl	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012351	          0x8d4804	                      lea ecx, [rax + 4]	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012354	     0xf84bf000000	                            je 0x4012419	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401235a	          0x4863f1	                         movsxd rsi, ecx	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401235d	          0x83fa05	                              cmp edx, 5	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012360	    0x888e00000000	                      mov byte [rsi], cl	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012366	          0x8d4805	                      lea ecx, [rax + 5]	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012369	     0xf84aa000000	                            je 0x4012419	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401236f	          0x4863f1	                         movsxd rsi, ecx	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012372	          0x83fa06	                              cmp edx, 6	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012375	    0x888e00000000	                      mov byte [rsi], cl	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401237b	          0x8d4806	                      lea ecx, [rax + 6]	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401237e	     0xf8495000000	                            je 0x4012419	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012384	          0x4863f1	                         movsxd rsi, ecx	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012387	          0x83fa07	                              cmp edx, 7	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401238a	    0x888e00000000	                      mov byte [rsi], cl	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012390	          0x8d4807	                      lea ecx, [rax + 7]	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012393	     0xf8480000000	                            je 0x4012419	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012399	          0x4863f1	                         movsxd rsi, ecx	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401239c	          0x83fa08	                              cmp edx, 8	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401239f	    0x888e00000000	                      mov byte [rsi], cl	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40123a5	          0x8d4808	                      lea ecx, [rax + 8]	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40123a8	            0x746f	                            je 0x4012419	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40123aa	          0x4863f1	                         movsxd rsi, ecx	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40123ad	          0x83fa09	                              cmp edx, 9	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40123b0	    0x888e00000000	                      mov byte [rsi], cl	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40123b6	          0x8d4809	                      lea ecx, [rax + 9]	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40123b9	            0x745e	                            je 0x4012419	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40123bb	          0x4863f1	                         movsxd rsi, ecx	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40123be	          0x83fa0a	                            cmp edx, 0xa	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40123c1	    0x888e00000000	                      mov byte [rsi], cl	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40123c7	          0x8d480a	                    lea ecx, [rax + 0xa]	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40123ca	            0x744d	                            je 0x4012419	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40123cc	          0x4863f1	                         movsxd rsi, ecx	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40123cf	          0x83fa0b	                            cmp edx, 0xb	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40123d2	    0x888e00000000	                      mov byte [rsi], cl	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40123d8	          0x8d480b	                    lea ecx, [rax + 0xb]	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40123db	            0x743c	                            je 0x4012419	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40123dd	          0x4863f1	                         movsxd rsi, ecx	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40123e0	          0x83fa0c	                            cmp edx, 0xc	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40123e3	    0x888e00000000	                      mov byte [rsi], cl	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40123e9	          0x8d480c	                    lea ecx, [rax + 0xc]	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40123ec	            0x742b	                            je 0x4012419	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40123ee	          0x4863f1	                         movsxd rsi, ecx	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40123f1	          0x83fa0d	                            cmp edx, 0xd	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40123f4	    0x888e00000000	                      mov byte [rsi], cl	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40123fa	          0x8d480d	                    lea ecx, [rax + 0xd]	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40123fd	            0x741a	                            je 0x4012419	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x40123ff	          0x4863f1	                         movsxd rsi, ecx	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012402	          0x83c00e	                            add eax, 0xe	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012405	          0x83fa0e	                            cmp edx, 0xe	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012408	    0x888e00000000	                      mov byte [rsi], cl	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x401240e	            0x7409	                            je 0x4012419	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012410	          0x4863d0	                         movsxd rdx, eax	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012413	    0x888200000000	                      mov byte [rdx], al	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012419	      0xba08000000	                              mov edx, 8	     11923	option.c	ELSE_1	FUNCTION_95	CALL_1
0x401241e	      0xbe08000000	                              mov esi, 8	     11923	option.c	ELSE_1	FUNCTION_95	CALL_1
0x4012423	      0xbf00000000	                              mov edi, 0	     11923	option.c	ELSE_1	FUNCTION_95	CALL_1
0x4012428	      0xe800000000	                          call 0x401242d	     11923	option.c	ELSE_1	FUNCTION_95	CALL_1
0x401242d	      0xbf00000000	                              mov edi, 0	      3342	option.c	FUNCTION_1	IF_1	CALL_2
0x4012432	    0xc70500000000	               mov dword [0x0401243c], 1	      3339	option.c	FUNCTION_1
0x401243c	      0xe800000000	                          call 0x4012441	      3342	option.c	FUNCTION_1	IF_1	CALL_2
0x4012441	          0x4885c0	                           test rax, rax	      3342	option.c	FUNCTION_1	IF_1	CALL_2
0x4012444	     0xf84b2000000	                            je 0x40124fc	      3342	option.c	FUNCTION_1	IF_1	CALL_2
0x401244a	      0xbf00000000	                              mov edi, 0	      3881	option.c	FUNCTION_4	CALL_3
0x401244f	      0xe800000000	                          call 0x4012454	      3881	option.c	FUNCTION_4	CALL_3
0x4012454	          0x4885c0	                           test rax, rax	      3882	option.c	FUNCTION_4	IF_2
0x4012457	          0x4989c4	                            mov r12, rax	      3881	option.c	FUNCTION_4	CALL_3
0x401245a	            0x7447	                            je 0x40124a3	      3882	option.c	FUNCTION_4	IF_2
0x401245c	      0xbf00000000	                              mov edi, 0	      3884	option.c	FUNCTION_4	IF_2	CALL_4
0x4012461	      0xe8badefeff	                     call sym.findoption	      3884	option.c	FUNCTION_4	IF_2	CALL_4
0x4012466	            0x85c0	                           test eax, eax	      3885	option.c	FUNCTION_4	IF_2	IF_3
0x4012468	            0x7839	                            js 0x40124a3	      3885	option.c	FUNCTION_4	IF_2	IF_3
0x401246a	          0x4863d8	                         movsxd rbx, eax	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x401246d	          0x4989dd	                            mov r13, rbx	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x4012470	        0x49c1e506	                              shl r13, 6	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x4012474	    0x498b95000000	                    mov rdx, qword [r13]	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x401247b	    0x4981c5000000	                              add r13, 0	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x4012482	          0xf6c280	                           test dl, 0x80	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x4012485	     0xf85490a0000	                           jne 0x4012ed4	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x401248b	          0x4889d8	                            mov rax, rbx	      3889	option.c	FUNCTION_4	IF_2	IF_3
0x401248e	          0x80ca80	                             or dl, 0x80	      3890	option.c	FUNCTION_4	IF_2	IF_3
0x4012491	        0x48c1e006	                              shl rax, 6	      3889	option.c	FUNCTION_4	IF_2	IF_3
0x4012495	    0x4c89a0000000	                    mov qword [rax], r12	      3889	option.c	FUNCTION_4	IF_2	IF_3
0x401249c	    0x488990000000	                    mov qword [rax], rdx	      3890	option.c	FUNCTION_4	IF_2	IF_3
0x40124a3	      0xbf00000000	                              mov edi, 0	      3881	option.c	FUNCTION_4	CALL_3
0x40124a8	      0xe800000000	                          call 0x40124ad	      3881	option.c	FUNCTION_4	CALL_3
0x40124ad	          0x4885c0	                           test rax, rax	      3882	option.c	FUNCTION_4	IF_2
0x40124b0	          0x4989c4	                            mov r12, rax	      3881	option.c	FUNCTION_4	CALL_3
0x40124b3	            0x7447	                            je 0x40124fc	      3882	option.c	FUNCTION_4	IF_2
0x40124b5	      0xbf00000000	                              mov edi, 0	      3884	option.c	FUNCTION_4	IF_2	CALL_4
0x40124ba	      0xe861defeff	                     call sym.findoption	      3884	option.c	FUNCTION_4	IF_2	CALL_4
0x40124bf	            0x85c0	                           test eax, eax	      3885	option.c	FUNCTION_4	IF_2	IF_3
0x40124c1	            0x7839	                            js 0x40124fc	      3885	option.c	FUNCTION_4	IF_2	IF_3
0x40124c3	          0x4863d8	                         movsxd rbx, eax	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x40124c6	          0x4989dd	                            mov r13, rbx	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x40124c9	        0x49c1e506	                              shl r13, 6	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x40124cd	    0x498b95000000	                    mov rdx, qword [r13]	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x40124d4	    0x4981c5000000	                              add r13, 0	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x40124db	          0xf6c280	                           test dl, 0x80	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x40124de	     0xf85020a0000	                           jne 0x4012ee6	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x40124e4	          0x4889d8	                            mov rax, rbx	      3889	option.c	FUNCTION_4	IF_2	IF_3
0x40124e7	          0x80ca80	                             or dl, 0x80	      3890	option.c	FUNCTION_4	IF_2	IF_3
0x40124ea	        0x48c1e006	                              shl rax, 6	      3889	option.c	FUNCTION_4	IF_2	IF_3
0x40124ee	    0x4c89a0000000	                    mov qword [rax], r12	      3889	option.c	FUNCTION_4	IF_2	IF_3
0x40124f5	    0x488990000000	                    mov qword [rax], rdx	      3890	option.c	FUNCTION_4	IF_2	IF_3
0x40124fc	      0xbf00000000	                              mov edi, 0	      3352	option.c	FUNCTION_1	IF_2	CALL_5
0x4012501	      0xe800000000	                          call 0x4012506	      3352	option.c	FUNCTION_1	IF_2	CALL_5
0x4012506	          0x4885c0	                           test rax, rax	      3352	option.c	FUNCTION_1	IF_2	CALL_5
0x4012509	          0x4889c3	                            mov rbx, rax	      3352	option.c	FUNCTION_1	IF_2	CALL_5
0x401250c	            0x7409	                            je 0x4012517	      3352	option.c	FUNCTION_1	IF_2	CALL_5
0x401250e	          0x803800	                       cmp byte [rax], 0	      3352	option.c	FUNCTION_1	IF_2	CALL_5
0x4012511	     0xf8520090000	                           jne 0x4012e37	      3352	option.c	FUNCTION_1	IF_2	CALL_5
0x4012517	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      3377	option.c	FUNCTION_1	CALL_9
0x401251c	      0xba64000000	                           mov edx, 0x64	      3377	option.c	FUNCTION_1	CALL_9
0x4012521	      0xbe01000000	                              mov esi, 1	      3377	option.c	FUNCTION_1	CALL_9
0x4012526	      0xbb00000000	                              mov ebx, 0	      3377	option.c	FUNCTION_1	CALL_9
0x401252b	      0xe800000000	                          call 0x4012530	      3377	option.c	FUNCTION_1	CALL_9
0x4012530	          0x488b3b	                    mov rdi, qword [rbx]	      3382	option.c	FUNCTION_1	FOR_1	IF_3
0x4012533	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	      3380	option.c	FUNCTION_1	FOR_1
0x401253b	    0x41bd07000000	                             mov r13d, 7	      3380	option.c	FUNCTION_1	FOR_1
0x4012541	    0x41bc00000000	                             mov r12d, 0	      3386	option.c	FUNCTION_1	FOR_1
0x4012547	          0x803f00	                       cmp byte [rdi], 0	      3382	option.c	FUNCTION_1	FOR_1	IF_3
0x401254a	     0xf85f8040000	                           jne 0x4012a48	      3382	option.c	FUNCTION_1	FOR_1	IF_3
0x4012550	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	      3395	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_12
0x4012555	          0x4489ee	                           mov esi, r13d	      3395	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_12
0x4012558	      0xe800000000	                          call 0x401255d	      3395	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_12
0x401255d	          0x83f801	                              cmp eax, 1	      3395	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_12
0x4012560	     0xf8416080000	                            je 0x4012d7c	      3395	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_12
0x4012566	        0x8b7c241c	            mov edi, dword [rsp + 0x1c] 	      3405	option.c	FUNCTION_1	FOR_1	IF_7
0x401256a	            0x85ff	                           test edi, edi	      3405	option.c	FUNCTION_1	FOR_1	IF_7
0x401256c	            0x7408	                            je 0x4012576	      3405	option.c	FUNCTION_1	FOR_1	IF_7
0x401256e	          0x4c89e7	                            mov rdi, r12	      3406	option.c	FUNCTION_1	FOR_1	CALL_17
0x4012571	      0xe800000000	                          call 0x4012576	      3406	option.c	FUNCTION_1	FOR_1	CALL_17
0x4012576	        0x4883c308	                              add rbx, 8	      3406	option.c	FUNCTION_1	FOR_1	CALL_17
0x401257a	    0x4881fb000000	                              cmp rbx, 0	      3378	option.c	FUNCTION_1	FOR_1
0x4012581	            0x75ad	                           jne 0x4012530	      3378	option.c	FUNCTION_1	FOR_1
0x4012583	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      3408	option.c	FUNCTION_1	IF_8
0x4012588	          0x4885ff	                           test rdi, rdi	      3408	option.c	FUNCTION_1	IF_8
0x401258b	            0x745e	                            je 0x40125eb	      3408	option.c	FUNCTION_1	IF_8
0x401258d	      0xe800000000	                          call 0x4012592	      3881	option.c	FUNCTION_4	CALL_3
0x4012592	          0x4885c0	                           test rax, rax	      3882	option.c	FUNCTION_4	IF_2
0x4012595	          0x4989c4	                            mov r12, rax	      3881	option.c	FUNCTION_4	CALL_3
0x4012598	            0x7447	                            je 0x40125e1	      3882	option.c	FUNCTION_4	IF_2
0x401259a	      0xbf00000000	                              mov edi, 0	      3884	option.c	FUNCTION_4	IF_2	CALL_4
0x401259f	      0xe87cddfeff	                     call sym.findoption	      3884	option.c	FUNCTION_4	IF_2	CALL_4
0x40125a4	            0x85c0	                           test eax, eax	      3885	option.c	FUNCTION_4	IF_2	IF_3
0x40125a6	            0x7839	                            js 0x40125e1	      3885	option.c	FUNCTION_4	IF_2	IF_3
0x40125a8	          0x4863d8	                         movsxd rbx, eax	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x40125ab	          0x4989dd	                            mov r13, rbx	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x40125ae	        0x49c1e506	                              shl r13, 6	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x40125b2	    0x498b95000000	                    mov rdx, qword [r13]	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x40125b9	    0x4981c5000000	                              add r13, 0	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x40125c0	          0xf6c280	                           test dl, 0x80	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x40125c3	     0xf852f090000	                           jne 0x4012ef8	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x40125c9	          0x4889d8	                            mov rax, rbx	      3889	option.c	FUNCTION_4	IF_2	IF_3
0x40125cc	          0x80ca80	                             or dl, 0x80	      3890	option.c	FUNCTION_4	IF_2	IF_3
0x40125cf	        0x48c1e006	                              shl rax, 6	      3889	option.c	FUNCTION_4	IF_2	IF_3
0x40125d3	    0x4c89a0000000	                    mov qword [rax], r12	      3889	option.c	FUNCTION_4	IF_2	IF_3
0x40125da	    0x488990000000	                    mov qword [rax], rdx	      3890	option.c	FUNCTION_4	IF_2	IF_3
0x40125e1	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      3411	option.c	FUNCTION_1	IF_8	CALL_19
0x40125e6	      0xe800000000	                          call 0x40125eb	      3411	option.c	FUNCTION_1	IF_8	CALL_19
0x40125eb	      0xbf00000000	                              mov edi, 0	      3419	option.c	FUNCTION_1	CALL_20
0x40125f0	      0xe82bddfeff	                     call sym.findoption	      3419	option.c	FUNCTION_1	CALL_20
0x40125f5	          0x4863d8	                         movsxd rbx, eax	      3419	option.c	FUNCTION_1	CALL_20
0x40125f8	            0x85db	                           test ebx, ebx	      3420	option.c	FUNCTION_1	IF_9
0x40125fa	            0x7834	                            js 0x4012630	      3420	option.c	FUNCTION_1	IF_9
0x40125fc	            0x31ff	                            xor edi, edi	      3432	option.c	FUNCTION_1	IF_9	IF_10	CALL_22
0x40125fe	        0x48c1e306	                              shl rbx, 6	      3437	option.c	FUNCTION_1	IF_9	IF_10
0x4012602	      0xe800000000	                          call 0x4012607	      3432	option.c	FUNCTION_1	IF_9	IF_10	CALL_22
0x4012607	      0xbf00000000	                              mov edi, 0	      3438	option.c	FUNCTION_1	IF_9	IF_10	CALL_23
0x401260c	          0x48d1e8	                              shr rax, 1	      3437	option.c	FUNCTION_1	IF_9	IF_10
0x401260f	          0x4989c4	                            mov r12, rax	      3437	option.c	FUNCTION_1	IF_9	IF_10
0x4012612	    0x488983000000	                    mov qword [rbx], rax	      3437	option.c	FUNCTION_1	IF_9	IF_10
0x4012619	      0xe802ddfeff	                     call sym.findoption	      3438	option.c	FUNCTION_1	IF_9	IF_10	CALL_23
0x401261e	            0x85c0	                           test eax, eax	      3439	option.c	FUNCTION_1	IF_9	IF_10	IF_11
0x4012620	            0x780e	                            js 0x4012630	      3439	option.c	FUNCTION_1	IF_9	IF_10	IF_11
0x4012622	          0x4863d0	                         movsxd rdx, eax	      3445	option.c	FUNCTION_1	IF_9	IF_10	IF_11	IF_12
0x4012625	        0x48c1e206	                              shl rdx, 6	      3445	option.c	FUNCTION_1	IF_9	IF_10	IF_11	IF_12
0x4012629	    0x4c89a2000000	                    mov qword [rdx], r12	      3445	option.c	FUNCTION_1	IF_9	IF_10	IF_11	IF_12
0x4012630	      0x488d742420	                   lea rsi, [rsp + 0x20]	      3459	option.c	FUNCTION_1	CALL_24
0x4012635	      0xbf00000000	                              mov edi, 0	      3459	option.c	FUNCTION_1	CALL_24
0x401263a	    0xc74424200000	               mov dword [rsp + 0x20], 0	      3456	option.c	FUNCTION_1
0x4012642	      0xe800000000	                          call 0x4012647	      3459	option.c	FUNCTION_1	CALL_24
0x4012647	          0x4885c0	                           test rax, rax	      3460	option.c	FUNCTION_1	IF_13
0x401264a	          0x4989c5	                            mov r13, rax	      3459	option.c	FUNCTION_1	CALL_24
0x401264d	     0xf84ca000000	                            je 0x401271d	      3460	option.c	FUNCTION_1	IF_13
0x4012653	          0x4889c7	                            mov rdi, rax	      3462	option.c	FUNCTION_1	IF_13	CALL_26
0x4012656	      0xe800000000	                          call 0x401265b	      3462	option.c	FUNCTION_1	IF_13	CALL_26
0x401265b	        0x8d7c0002	                lea edi, [rax + rax + 2]	      3462	option.c	FUNCTION_1	IF_13	CALL_26
0x401265f	      0xe800000000	                          call 0x4012664	      3462	option.c	FUNCTION_1	IF_13	CALL_26
0x4012664	          0x4885c0	                           test rax, rax	      3463	option.c	FUNCTION_1	IF_13	IF_14
0x4012667	          0x4989c4	                            mov r12, rax	      3462	option.c	FUNCTION_1	IF_13	CALL_26
0x401266a	     0xf84a1000000	                            je 0x4012711	      3463	option.c	FUNCTION_1	IF_13	IF_14
0x4012670	          0xc6002c	                    mov byte [rax], 0x2c	      3465	option.c	FUNCTION_1	IF_13	IF_14
0x4012673	      0x410fb67d00	                   movzx edi, byte [r13]	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x4012678	          0x4084ff	                           test dil, dil	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x401267b	     0xf8496080000	                            je 0x4012f17	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x4012681	      0xbb01000000	                              mov ebx, 1	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x4012686	          0x4d89ee	                            mov r14, r13	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x4012689	            0xeb1d	                           jmp 0x40126a8	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x401268b	       0xf1f440000	                   nop dword [rax + rax]	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x4012690	          0x4863c3	                         movsxd rax, ebx	      3470	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	IF_15
0x4012693	        0x4983c601	                              add r14, 1	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x4012697	          0x83c301	                              add ebx, 1	      3470	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	IF_15
0x401269a	      0x41c604042c	              mov byte [r12 + rax], 0x2c	      3470	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	IF_15
0x401269f	        0x410fb63e	                   movzx edi, byte [r14]	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x40126a3	          0x4084ff	                           test dil, dil	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x40126a6	            0x7434	                            je 0x40126dc	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x40126a8	      0xe800000000	                          call 0x40126ad	      3469	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	IF_15	CALL_27
0x40126ad	            0x85c0	                           test eax, eax	      3469	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	IF_15	CALL_27
0x40126af	            0x75df	                           jne 0x4012690	      3469	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	IF_15	CALL_27
0x40126b1	        0x410fb606	                   movzx eax, byte [r14]	      3473	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x40126b5	            0x3c20	                            cmp al, 0x20	      3473	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x40126b7	     0xf8473030000	                            je 0x4012a30	      3473	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x40126bd	            0x3c2c	                            cmp al, 0x2c	      3473	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x40126bf	     0xf846b030000	                            je 0x4012a30	      3473	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x40126c5	          0x4863d3	                         movsxd rdx, ebx	      3475	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2
0x40126c8	        0x4983c601	                              add r14, 1	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x40126cc	          0x83c301	                              add ebx, 1	      3475	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2
0x40126cf	        0x41880414	                mov byte [r12 + rdx], al	      3475	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2
0x40126d3	        0x410fb63e	                   movzx edi, byte [r14]	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x40126d7	          0x4084ff	                           test dil, dil	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x40126da	            0x75cc	                           jne 0x40126a8	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x40126dc	          0x4863db	                         movsxd rbx, ebx	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x40126df	      0x41c6041c00	                 mov byte [r12 + rbx], 0	      3478	option.c	FUNCTION_1	IF_13	IF_14
0x40126e4	      0xbf00000000	                              mov edi, 0	      3479	option.c	FUNCTION_1	IF_13	IF_14	CALL_28
0x40126e9	      0xe832dcfeff	                     call sym.findoption	      3479	option.c	FUNCTION_1	IF_13	IF_14	CALL_28
0x40126ee	            0x85c0	                           test eax, eax	      3480	option.c	FUNCTION_1	IF_13	IF_14	IF_17
0x40126f0	     0xf8814080000	                            js 0x4012f0a	      3480	option.c	FUNCTION_1	IF_13	IF_14	IF_17
0x40126f6	            0x4898	                                    cdqe	      3482	option.c	FUNCTION_1	IF_13	IF_14	IF_17
0x40126f8	        0x48c1e006	                              shl rax, 6	      3482	option.c	FUNCTION_1	IF_13	IF_14	IF_17
0x40126fc	    0x4c89a0000000	                    mov qword [rax], r12	      3482	option.c	FUNCTION_1	IF_13	IF_14	IF_17
0x4012703	    0x480500000000	                              add rax, 0	      3482	option.c	FUNCTION_1	IF_13	IF_14	IF_17
0x4012709	    0x488148108000	             or qword [rax + 0x10], 0x80	      3483	option.c	FUNCTION_1	IF_13	IF_14	IF_17
0x4012711	        0x8b742420	            mov esi, dword [rsp + 0x20] 	      3488	option.c	FUNCTION_1	IF_13	IF_18
0x4012715	            0x85f6	                           test esi, esi	      3488	option.c	FUNCTION_1	IF_13	IF_18
0x4012717	     0xf85be050000	                           jne 0x4012cdb	      3488	option.c	FUNCTION_1	IF_13	IF_18
0x401271d	      0xbf00000000	                              mov edi, 0	      3881	option.c	FUNCTION_4	CALL_3
0x4012722	      0xe800000000	                          call 0x4012727	      3881	option.c	FUNCTION_4	CALL_3
0x4012727	          0x4885c0	                           test rax, rax	      3882	option.c	FUNCTION_4	IF_2
0x401272a	          0x4989c5	                            mov r13, rax	      3881	option.c	FUNCTION_4	CALL_3
0x401272d	            0x7448	                            je 0x4012777	      3882	option.c	FUNCTION_4	IF_2
0x401272f	      0xbf00000000	                              mov edi, 0	      3884	option.c	FUNCTION_4	IF_2	CALL_4
0x4012734	      0xe8e7dbfeff	                     call sym.findoption	      3884	option.c	FUNCTION_4	IF_2	CALL_4
0x4012739	            0x85c0	                           test eax, eax	      3885	option.c	FUNCTION_4	IF_2	IF_3
0x401273b	            0x783a	                            js 0x4012777	      3885	option.c	FUNCTION_4	IF_2	IF_3
0x401273d	          0x4863d8	                         movsxd rbx, eax	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x4012740	          0x4989dc	                            mov r12, rbx	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x4012743	        0x49c1e406	                              shl r12, 6	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x4012747	    0x498b94240000	                    mov rdx, qword [r12]	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x401274f	    0x4981c4000000	                              add r12, 0	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x4012756	          0xf6c280	                           test dl, 0x80	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x4012759	     0xf8554070000	                           jne 0x4012eb3	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x401275f	          0x4889d8	                            mov rax, rbx	      3889	option.c	FUNCTION_4	IF_2	IF_3
0x4012762	          0x80ca80	                             or dl, 0x80	      3890	option.c	FUNCTION_4	IF_2	IF_3
0x4012765	        0x48c1e006	                              shl rax, 6	      3889	option.c	FUNCTION_4	IF_2	IF_3
0x4012769	    0x4c89a8000000	                    mov qword [rax], r13	      3889	option.c	FUNCTION_4	IF_2	IF_3
0x4012770	    0x488990000000	                    mov qword [rax], rdx	      3890	option.c	FUNCTION_4	IF_2	IF_3
0x4012777	      0xbb00000000	                              mov ebx, 0	      3890	option.c	FUNCTION_4	IF_2	IF_3
0x401277c	          0x4531ed	                          xor r13d, r13d	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x401277f	      0xe9b4000000	                           jmp 0x4012838	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x4012784	         0xf1f4000	                         nop dword [rax]	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x4012788	        0xf6431040	           test byte [rbx + 0x10], 0x40 	      3843	option.c	FUNCTION_3	FOR_1	IF_1
0x401278c	     0xf859e000000	                           jne 0x4012830	      3843	option.c	FUNCTION_3	FOR_1	IF_1
0x4012792	      0xbe04000000	                              mov esi, 4	      3771	option.c	FUNCTION_2	CALL_1
0x4012797	          0x4889df	                            mov rdi, rbx	      3771	option.c	FUNCTION_2	CALL_1
0x401279a	    0x448b25000000	           mov r12d, dword [0x040127a1] 	      3857	option.c	FUNCTION_3	FOR_1	IF_1
0x40127a1	      0xe8daf1feff	                 call sym.get_varp_scope	      3771	option.c	FUNCTION_2	CALL_1
0x40127a6	          0x4989c6	                            mov r14, rax	      3771	option.c	FUNCTION_2	CALL_1
0x40127a9	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      3772	option.c	FUNCTION_2
0x40127ad	          0x4d85f6	                           test r14, r14	      3773	option.c	FUNCTION_2	IF_1
0x40127b0	            0x744c	                            je 0x40127fe	      3773	option.c	FUNCTION_2	IF_1
0x40127b2	          0x4889c2	                            mov rdx, rax	      3775	option.c	FUNCTION_2	IF_1
0x40127b5	            0x31c9	                            xor ecx, ecx	      3775	option.c	FUNCTION_2	IF_1
0x40127b7	        0x48c1ea0a	                            shr rdx, 0xa	      3775	option.c	FUNCTION_2	IF_1
0x40127bb	        0x4883f201	                              xor rdx, 1	      3775	option.c	FUNCTION_2	IF_1
0x40127bf	          0x4585e4	                         test r12d, r12d	      3775	option.c	FUNCTION_2	IF_1
0x40127c2	           0xf94c1	                                 sete cl	      3775	option.c	FUNCTION_2	IF_1
0x40127c5	            0x21ca	                            and edx, ecx	      3775	option.c	FUNCTION_2	IF_1
0x40127c7	            0xa804	                              test al, 4	      3776	option.c	FUNCTION_2	IF_1	IF_2
0x40127c9	     0xf84b1020000	                            je 0x4012a80	      3776	option.c	FUNCTION_2	IF_1	IF_2
0x40127cf	          0x8b4b20	            mov ecx, dword [rbx + 0x20] 	      3780	option.c	FUNCTION_2	IF_1	IF_2	IF_3
0x40127d2	          0x4863d2	                         movsxd rdx, edx	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x40127d5	            0x85c9	                           test ecx, ecx	      3780	option.c	FUNCTION_2	IF_1	IF_2	IF_3
0x40127d7	     0xf8543030000	                           jne 0x4012b20	      3780	option.c	FUNCTION_2	IF_1	IF_2	IF_3
0x40127dd	          0x4963cd	                        movsxd rcx, r13d	      3787	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x40127e0	        0x4883e0f7	             and rax, 0xfffffffffffffff7	      3788	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x40127e4	      0x488d54ca04	              lea rdx, [rdx + rcx*8 + 4]	      3787	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x40127e9	    0x488b14d50000	                  mov rdx, qword [rdx*8]	      3787	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x40127f1	          0x498916	                    mov qword [r14], rdx	      3787	option.c	FUNCTION_2	IF_1	IF_2	ELSE_1
0x40127f4	    0x4825ffff7fff	             and rax, 0xffffffffff7fffff	      3822	option.c	FUNCTION_2	IF_1
0x40127fa	        0x48894310	             mov qword [rbx + 0x10], rax	      3822	option.c	FUNCTION_2	IF_1
0x40127fe	          0x8b4320	            mov eax, dword [rbx + 0x20] 	      8104	option.c	FUNCTION_48
0x4012801	    0x8b1500000000	            mov edx, dword [0x04012807] 	      3826	option.c	FUNCTION_2	CALL_8
0x4012807	          0xf6c440	                           test ah, 0x40	      8112	option.c	FUNCTION_48	IF_2	IF_3
0x401280a	          0x895338	             mov dword [rbx + 0x38], edx	      8109	option.c	FUNCTION_48	IF_1
0x401280d	     0xf85b5020000	                           jne 0x4012ac8	      8112	option.c	FUNCTION_48	IF_2	IF_3
0x4012813	          0xf6c420	                           test ah, 0x20	      8114	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x4012816	            0x7418	                            je 0x4012830	      8114	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x4012818	    0x488b0d000000	            mov rcx, qword [0x0401281f] 	      8115	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x401281f	      0x25ff0f0000	                          and eax, 0xfff	      8115	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x4012824	    0x899481d00200	    mov dword [rcx + rax*4 + 0x2d0], edx	      8115	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x401282b	       0xf1f440000	                   nop dword [rax + rax]	      8115	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x4012830	        0x4183c501	                             add r13d, 1	      3842	option.c	FUNCTION_3	FOR_1	CALL_1
0x4012834	        0x4883c340	                           add rbx, 0x40	      3842	option.c	FUNCTION_3	FOR_1	CALL_1
0x4012838	          0x488b03	                    mov rax, qword [rbx]	      3842	option.c	FUNCTION_3	FOR_1	CALL_1
0x401283b	          0x803874	                    cmp byte [rax], 0x74	     10375	option.c	FUNCTION_73
0x401283e	     0xf8544ffffff	                           jne 0x4012788	     10375	option.c	FUNCTION_73
0x4012844	        0x8078015f	                cmp byte [rax + 1], 0x5f	     10375	option.c	FUNCTION_73
0x4012848	     0xf853affffff	                           jne 0x4012788	     10375	option.c	FUNCTION_73
0x401284e	    0x4c8b25000000	            mov r12, qword [0x04012855] 	      3860	option.c	FUNCTION_3	CALL_3
0x4012855	          0x4d85e4	                           test r12, r12	      3860	option.c	FUNCTION_3	CALL_3
0x4012858	            0x7438	                            je 0x4012892	      3860	option.c	FUNCTION_3	CALL_3
0x401285a	    0x660f1f440000	                    nop word [rax + rax]	      3860	option.c	FUNCTION_3	CALL_3
0x4012860	    0x4c3b25000000	            cmp r12, qword [0x04012867] 	      3860	option.c	FUNCTION_3	CALL_3
0x4012867	     0xf8413030000	                            je 0x4012b80	      3860	option.c	FUNCTION_3	CALL_3
0x401286d	      0x498b5c2420	            mov rbx, qword [r12 + 0x20] 	      3860	option.c	FUNCTION_3	CALL_3
0x4012872	            0xeb10	                           jmp 0x4012884	      3860	option.c	FUNCTION_3	CALL_3
0x4012874	         0xf1f4000	                         nop dword [rax]	      3860	option.c	FUNCTION_3	CALL_3
0x4012878	          0x4889df	                            mov rdi, rbx	      3861	option.c	FUNCTION_3	CALL_4
0x401287b	      0xe800000000	                          call 0x4012880	      3861	option.c	FUNCTION_3	CALL_4
0x4012880	        0x488b5b20	            mov rbx, qword [rbx + 0x20] 	      3860	option.c	FUNCTION_3	CALL_3
0x4012884	          0x4885db	                           test rbx, rbx	      3860	option.c	FUNCTION_3	CALL_3
0x4012887	            0x75ef	                           jne 0x4012878	      3860	option.c	FUNCTION_3	CALL_3
0x4012889	        0x4d8b2424	                    mov r12, qword [r12]	      3860	option.c	FUNCTION_3	CALL_3
0x401288d	          0x4d85e4	                           test r12, r12	      3860	option.c	FUNCTION_3	CALL_3
0x4012890	            0x75ce	                           jne 0x4012860	      3860	option.c	FUNCTION_3	CALL_3
0x4012892	    0x488b3d000000	            mov rdi, qword [0x04012899] 	      3863	option.c	FUNCTION_3	CALL_5
0x4012899	      0xe800000000	                          call 0x401289e	      3863	option.c	FUNCTION_3	CALL_5
0x401289e	            0x85ed	                           test ebp, ebp	      3540	option.c	FUNCTION_1	IF_19
0x40128a0	     0xf8579040000	                           jne 0x4012d1f	      3540	option.c	FUNCTION_1	IF_19
0x40128a6	    0x8b0500000000	            mov eax, dword [0x040128ac] 	      3558	option.c	FUNCTION_1	IF_22
0x40128ac	            0x85c0	                           test eax, eax	      3558	option.c	FUNCTION_1	IF_22
0x40128ae	     0xf8553040000	                           jne 0x4012d07	      3558	option.c	FUNCTION_1	IF_22
0x40128b4	    0x488b3d000000	            mov rdi, qword [0x040128bb] 	      3562	option.c	FUNCTION_1
0x40128bb	    0xc787a8120000	            mov dword [rdi + 0x12a8], 1 	      3562	option.c	FUNCTION_1
0x40128c5	    0xc78718160000	   mov dword [rdi + 0x1618], 0xffffffff 	      3563	option.c	FUNCTION_1
0x40128cf	    0x48c787481600	mov qword [rdi + 0x1648], 0xfffffffffffe1dc0 	      3564	option.c	FUNCTION_1
0x40128da	      0xe800000000	                          call 0x40128df	      3565	option.c	FUNCTION_1	CALL_37
0x40128df	    0x488b15000000	            mov rdx, qword [0x040128e6] 	      3566	option.c	FUNCTION_1	CALL_38
0x40128e6	    0x488dbab00100	                  lea rdi, [rdx + 0x1b0]	     10951	option.c	FUNCTION_81	CALL_1
0x40128ed	      0xe8ded7feff	                   call sym.check_winopt	     10951	option.c	FUNCTION_81	CALL_1
0x40128f2	    0x488dba680300	                  lea rdi, [rdx + 0x368]	     10952	option.c	FUNCTION_81	CALL_2
0x40128f9	      0xe8d2d7feff	                   call sym.check_winopt	     10952	option.c	FUNCTION_81	CALL_2
0x40128fe	    0x48833d000000	               cmp qword [0x04012906], 0	      5637	option.c	FUNCTION_28	FOR_1
0x4012906	            0x7445	                            je 0x401294d	      5637	option.c	FUNCTION_28	FOR_1
0x4012908	      0xbb00000000	                              mov ebx, 0	      5637	option.c	FUNCTION_28	FOR_1
0x401290d	            0xeb0c	                           jmp 0x401291b	      5637	option.c	FUNCTION_28	FOR_1
0x401290f	              0x90	                                     nop	      5637	option.c	FUNCTION_28	FOR_1
0x4012910	        0x4883c340	                           add rbx, 0x40	      5637	option.c	FUNCTION_28	FOR_1
0x4012914	      0x48837be000	               cmp qword [rbx - 0x20], 0	      5637	option.c	FUNCTION_28	FOR_1
0x4012919	            0x7432	                            je 0x401294d	      5637	option.c	FUNCTION_28	FOR_1
0x401291b	        0xf643f004	               test byte [rbx - 0x10], 4	      5638	option.c	FUNCTION_28	FOR_1	IF_1
0x401291f	            0x74ef	                            je 0x4012910	      5638	option.c	FUNCTION_28	FOR_1	IF_1
0x4012921	        0x488b7bf8	                mov rdi, qword [rbx - 8]	      5638	option.c	FUNCTION_28	FOR_1	IF_1
0x4012925	          0x4885ff	                           test rdi, rdi	      5638	option.c	FUNCTION_28	FOR_1	IF_1
0x4012928	            0x74e6	                            je 0x4012910	      5638	option.c	FUNCTION_28	FOR_1	IF_1
0x401292a	          0x4889de	                            mov rsi, rbx	      5639	option.c	FUNCTION_28	FOR_1	IF_1
0x401292d	      0xe81ee1feff	                call sym.get_varp.isra.1	      5639	option.c	FUNCTION_28	FOR_1	IF_1
0x4012932	        0x48833800	                      cmp qword [rax], 0	      5771	option.c	FUNCTION_32	IF_1
0x4012936	            0x75d8	                           jne 0x4012910	      5771	option.c	FUNCTION_32	IF_1
0x4012938	    0x488b15000000	            mov rdx, qword [0x0401293f] 	      5772	option.c	FUNCTION_32	IF_1
0x401293f	        0x4883c340	                           add rbx, 0x40	      5772	option.c	FUNCTION_32	IF_1
0x4012943	          0x488910	                    mov qword [rax], rdx	      5772	option.c	FUNCTION_32	IF_1
0x4012946	      0x48837be000	               cmp qword [rbx - 0x20], 0	      5637	option.c	FUNCTION_28	FOR_1
0x401294b	            0x75ce	                           jne 0x401291b	      5637	option.c	FUNCTION_28	FOR_1
0x401294d	      0xe8aefefeff	                 call sym.didset_options	      3570	option.c	FUNCTION_1	CALL_40
0x4012952	      0xbb00000000	                              mov ebx, 0	      3570	option.c	FUNCTION_1	CALL_40
0x4012957	      0xbd00000000	                              mov ebp, 0	      5539	option.c	FUNCTION_25	CALL_2
0x401295c	      0xe800000000	                          call 0x4012961	      3575	option.c	FUNCTION_1	CALL_41
0x4012961	            0xeb53	                           jmp 0x40129b6	      3587	option.c	FUNCTION_1	FOR_3	CALL_42
0x4012963	       0xf1f440000	                   nop dword [rax + rax]	      3587	option.c	FUNCTION_1	FOR_3	CALL_42
0x4012968	        0x488b4308	                mov rax, qword [rbx + 8]	      3590	option.c	FUNCTION_1	FOR_3	IF_23
0x401296c	          0x4885c0	                           test rax, rax	      3590	option.c	FUNCTION_1	FOR_3	IF_23
0x401296f	            0x7441	                            je 0x40129b2	      3590	option.c	FUNCTION_1	FOR_3	IF_23
0x4012971	          0x488b30	                    mov rsi, qword [rax]	      3591	option.c	FUNCTION_1	FOR_3	CALL_43
0x4012974	            0x31ff	                            xor edi, edi	      3591	option.c	FUNCTION_1	FOR_3	CALL_43
0x4012976	      0xba05000000	                              mov edx, 5	      3591	option.c	FUNCTION_1	FOR_3	CALL_43
0x401297b	      0xe800000000	                          call 0x4012980	      3591	option.c	FUNCTION_1	FOR_3	CALL_43
0x4012980	          0x4885c0	                           test rax, rax	      3594	option.c	FUNCTION_1	FOR_3	IF_24	CALL_45
0x4012983	          0x4989c4	                            mov r12, rax	      3591	option.c	FUNCTION_1	FOR_3	CALL_43
0x4012986	            0x742a	                            je 0x40129b2	      3594	option.c	FUNCTION_1	FOR_3	IF_24	CALL_45
0x4012988	          0x4c89e7	                            mov rdi, r12	      3594	option.c	FUNCTION_1	FOR_3	IF_24	CALL_45
0x401298b	      0xe800000000	                          call 0x4012990	      3594	option.c	FUNCTION_1	FOR_3	IF_24	CALL_45
0x4012990	          0x4885c0	                           test rax, rax	      3594	option.c	FUNCTION_1	FOR_3	IF_24	CALL_45
0x4012993	            0x741d	                            je 0x40129b2	      3594	option.c	FUNCTION_1	FOR_3	IF_24	CALL_45
0x4012995	        0x488b5308	                mov rdx, qword [rbx + 8]	      3596	option.c	FUNCTION_1	FOR_3	IF_24
0x4012999	          0x488902	                    mov qword [rdx], rax	      3596	option.c	FUNCTION_1	FOR_3	IF_24
0x401299c	          0x488b13	                    mov rdx, qword [rbx]	      3602	option.c	FUNCTION_1	FOR_3	IF_24	IF_25
0x401299f	          0xf6c280	                           test dl, 0x80	      3602	option.c	FUNCTION_1	FOR_3	IF_24	IF_25
0x40129a2	     0xf8518030000	                           jne 0x4012cc0	      3602	option.c	FUNCTION_1	FOR_3	IF_24	IF_25
0x40129a8	          0x80ca80	                             or dl, 0x80	      3605	option.c	FUNCTION_1	FOR_3	IF_24
0x40129ab	        0x48894318	             mov qword [rbx + 0x18], rax	      3604	option.c	FUNCTION_1	FOR_3	IF_24
0x40129af	          0x488913	                    mov qword [rbx], rdx	      3605	option.c	FUNCTION_1	FOR_3	IF_24
0x40129b2	        0x4883c340	                           add rbx, 0x40	      3605	option.c	FUNCTION_1	FOR_3	IF_24
0x40129b6	        0x488b43f0	             mov rax, qword [rbx - 0x10]	      3605	option.c	FUNCTION_1	FOR_3	IF_24
0x40129ba	          0x803874	                    cmp byte [rax], 0x74	     10375	option.c	FUNCTION_73
0x40129bd	     0xf84cd010000	                            je 0x4012b90	     10375	option.c	FUNCTION_73
0x40129c3	          0x488b03	                    mov rax, qword [rbx]	      3589	option.c	FUNCTION_1	FOR_3	IF_23
0x40129c6	          0x4989c1	                             mov r9, rax	      3589	option.c	FUNCTION_1	FOR_3	IF_23
0x40129c9	    0x4181e1000010	                       and r9d, 0x100000	      3589	option.c	FUNCTION_1	FOR_3	IF_23
0x40129d0	            0x7596	                           jne 0x4012968	      3589	option.c	FUNCTION_1	FOR_3	IF_23
0x40129d2	            0xa810	                           test al, 0x10	      5522	option.c	FUNCTION_25	IF_1
0x40129d4	            0x74dc	                            je 0x40129b2	      5522	option.c	FUNCTION_25	IF_1
0x40129d6	        0x488b4308	                mov rax, qword [rbx + 8]	      5522	option.c	FUNCTION_25	IF_1
0x40129da	          0x4885c0	                           test rax, rax	      5522	option.c	FUNCTION_25	IF_1
0x40129dd	            0x74d3	                            je 0x40129b2	      5522	option.c	FUNCTION_25	IF_1
0x40129df	          0x4c8b28	                    mov r13, qword [rax]	      5531	option.c	FUNCTION_25	IF_3
0x40129e2	    0x483d00000000	                              cmp rax, 0	      5539	option.c	FUNCTION_25	CALL_2
0x40129e8	    0x488b35000000	            mov rsi, qword [0x040129ef] 	      5539	option.c	FUNCTION_25	CALL_2
0x40129ef	        0x4c0f44cd	                           cmove r9, rbp	      5539	option.c	FUNCTION_25	CALL_2
0x40129f3	            0x31c9	                            xor ecx, ecx	      5539	option.c	FUNCTION_25	CALL_2
0x40129f5	    0x483d00000000	                              cmp rax, 0	      5539	option.c	FUNCTION_25	CALL_2
0x40129fb	           0xf94c1	                                 sete cl	      5539	option.c	FUNCTION_25	CALL_2
0x40129fe	      0xba00100000	                         mov edx, 0x1000	      5539	option.c	FUNCTION_25	CALL_2
0x4012a03	          0x4531c0	                            xor r8d, r8d	      5539	option.c	FUNCTION_25	CALL_2
0x4012a06	          0x4c89ef	                            mov rdi, r13	      5539	option.c	FUNCTION_25	CALL_2
0x4012a09	      0xe800000000	                          call 0x4012a0e	      5539	option.c	FUNCTION_25	CALL_2
0x4012a0e	    0x4c8b25000000	            mov r12, qword [0x04012a15] 	      5545	option.c	FUNCTION_25	IF_4	CALL_3
0x4012a15	          0x4c89ee	                            mov rsi, r13	      5545	option.c	FUNCTION_25	IF_4	CALL_3
0x4012a18	          0x4c89e7	                            mov rdi, r12	      5545	option.c	FUNCTION_25	IF_4	CALL_3
0x4012a1b	      0xe800000000	                          call 0x4012a20	      5545	option.c	FUNCTION_25	IF_4	CALL_3
0x4012a20	            0x85c0	                           test eax, eax	      5545	option.c	FUNCTION_25	IF_4	CALL_3
0x4012a22	     0xf8560ffffff	                           jne 0x4012988	      5545	option.c	FUNCTION_25	IF_4	CALL_3
0x4012a28	            0xeb88	                           jmp 0x40129b2	      5545	option.c	FUNCTION_25	IF_4	CALL_3
0x4012a2a	    0x660f1f440000	                    nop word [rax + rax]	      5545	option.c	FUNCTION_25	IF_4	CALL_3
0x4012a30	          0x4863c3	                         movsxd rax, ebx	      3474	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x4012a33	          0x83c301	                              add ebx, 1	      3474	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x4012a36	      0x41c604045c	              mov byte [r12 + rax], 0x5c	      3474	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x4012a3b	        0x410fb606	                   movzx eax, byte [r14]	      3474	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x4012a3f	      0xe981fcffff	                           jmp 0x40126c5	      3474	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x4012a44	         0xf1f4000	                         nop dword [rax]	      3474	option.c	FUNCTION_1	IF_13	IF_14	FOR_2	ELSE_2	IF_16
0x4012a48	      0x488d74241c	                   lea rsi, [rsp + 0x1c]	      3390	option.c	FUNCTION_1	FOR_1	CALL_10
0x4012a4d	      0xe800000000	                          call 0x4012a52	      3390	option.c	FUNCTION_1	FOR_1	CALL_10
0x4012a52	          0x4885c0	                           test rax, rax	      3391	option.c	FUNCTION_1	FOR_1	IF_4
0x4012a55	          0x4989c4	                            mov r12, rax	      3390	option.c	FUNCTION_1	FOR_1	CALL_10
0x4012a58	     0xf8408fbffff	                            je 0x4012566	      3391	option.c	FUNCTION_1	FOR_1	IF_4
0x4012a5e	          0x803800	                       cmp byte [rax], 0	      3391	option.c	FUNCTION_1	FOR_1	IF_4
0x4012a61	     0xf84fffaffff	                            je 0x4012566	      3391	option.c	FUNCTION_1	FOR_1	IF_4
0x4012a67	          0x4889c7	                            mov rdi, rax	      3391	option.c	FUNCTION_1	FOR_1	IF_4
0x4012a6a	      0xe800000000	                          call 0x4012a6f	      3391	option.c	FUNCTION_1	FOR_1	IF_4
0x4012a6f	        0x448d6803	                     lea r13d, [rax + 3]	      3391	option.c	FUNCTION_1	FOR_1	IF_4
0x4012a73	      0xe9d8faffff	                           jmp 0x4012550	      3391	option.c	FUNCTION_1	FOR_1	IF_4
0x4012a78	     0xf1f84000000	                   nop dword [rax + rax]	      3391	option.c	FUNCTION_1	FOR_1	IF_4
0x4012a80	            0xa802	                              test al, 2	      3791	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5
0x4012a82	            0x745c	                            je 0x4012ae0	      3791	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5
0x4012a84	    0x817b201c2000	         cmp dword [rbx + 0x20], 0x201c 	      3793	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	IF_6
0x4012a8b	     0xf84d7000000	                            je 0x4012b68	      3793	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	IF_6
0x4012a91	          0x4863d2	                         movsxd rdx, edx	      3797	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3
0x4012a94	          0x4963c5	                        movsxd rax, r13d	      3797	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3
0x4012a97	      0xbe02000000	                              mov esi, 2	      3800	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x4012a9c	      0x488d44c204	              lea rax, [rdx + rax*8 + 4]	      3797	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3
0x4012aa1	          0x4889df	                            mov rdi, rbx	      3800	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x4012aa4	    0x488b04c50000	                  mov rax, qword [rax*8]	      3797	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3
0x4012aac	          0x498906	                    mov qword [r14], rax	      3797	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3
0x4012aaf	      0xe8cceefeff	                 call sym.get_varp_scope	      3800	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x4012ab4	          0x498b16	                    mov rdx, qword [r14]	      3801	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7
0x4012ab7	          0x488910	                    mov qword [rax], rdx	      3800	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x4012aba	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      3800	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x4012abe	      0xe931fdffff	                           jmp 0x40127f4	      3800	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x4012ac3	       0xf1f440000	                   nop dword [rax + rax]	      3800	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_5
0x4012ac8	    0x488b0d000000	            mov rcx, qword [0x04012acf] 	      8113	option.c	FUNCTION_48	IF_2	IF_3
0x4012acf	      0x25ff0f0000	                          and eax, 0xfff	      8113	option.c	FUNCTION_48	IF_2	IF_3
0x4012ad4	    0x899481ac1200	  mov dword [rcx + rax*4 + 0x12ac], edx 	      8113	option.c	FUNCTION_48	IF_2	IF_3
0x4012adb	      0xe950fdffff	                           jmp 0x4012830	      8113	option.c	FUNCTION_48	IF_2	IF_3
0x4012ae0	          0x4863d2	                         movsxd rdx, edx	      3808	option.c	FUNCTION_2	IF_1	ELSE_4
0x4012ae3	          0x4963c5	                        movsxd rax, r13d	      3808	option.c	FUNCTION_2	IF_1	ELSE_4
0x4012ae6	    0x817b20334000	         cmp dword [rbx + 0x20], 0x4033 	      3811	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8	CALL_6
0x4012aed	      0x488d44c204	              lea rax, [rdx + rax*8 + 4]	      3808	option.c	FUNCTION_2	IF_1	ELSE_4
0x4012af2	    0x488b04c50000	                  mov rax, qword [rax*8]	      3808	option.c	FUNCTION_2	IF_1	ELSE_4
0x4012afa	          0x418906	                    mov dword [r14], eax	      3808	option.c	FUNCTION_2	IF_1	ELSE_4
0x4012afd	            0x7451	                            je 0x4012b50	      3811	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8	CALL_6
0x4012aff	      0xbe02000000	                              mov esi, 2	      3816	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9	CALL_7
0x4012b04	          0x4889df	                            mov rdi, rbx	      3816	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9	CALL_7
0x4012b07	      0xe874eefeff	                 call sym.get_varp_scope	      3816	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9	CALL_7
0x4012b0c	          0x418b16	                    mov edx, dword [r14]	      3817	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9
0x4012b0f	            0x8910	                    mov dword [rax], edx	      3816	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9	CALL_7
0x4012b11	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      3816	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9	CALL_7
0x4012b15	      0xe9dafcffff	                           jmp 0x40127f4	      3816	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9	CALL_7
0x4012b1a	    0x660f1f440000	                    nop word [rax + rax]	      3816	option.c	FUNCTION_2	IF_1	ELSE_4	IF_9	CALL_7
0x4012b20	          0x4963c5	                        movsxd rax, r13d	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x4012b23	          0x4531c0	                            xor r8d, r8d	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x4012b26	            0x31c9	                            xor ecx, ecx	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x4012b28	      0x488d44c204	              lea rax, [rdx + rax*8 + 4]	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x4012b2d	          0x4489ee	                           mov esi, r13d	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x4012b30	            0x31ff	                            xor edi, edi	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x4012b32	    0x488b14c50000	                  mov rdx, qword [rax*8]	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x4012b3a	      0xe800000000	                          call 0x4012b3f	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x4012b3f	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x4012b43	      0xe9acfcffff	                           jmp 0x40127f4	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x4012b48	     0xf1f84000000	                   nop dword [rax + rax]	      3781	option.c	FUNCTION_2	IF_1	IF_2	IF_3	CALL_2
0x4012b50	      0xe800000000	                          call 0x4012b55	      3811	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8	CALL_6
0x4012b55	            0x85c0	                           test eax, eax	      3811	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8	CALL_6
0x4012b57	            0x75a6	                           jne 0x4012aff	      3811	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8	CALL_6
0x4012b59	    0x41c706000000	                      mov dword [r14], 0	      3812	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8
0x4012b60	            0xeb9d	                           jmp 0x4012aff	      3812	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8
0x4012b62	    0x660f1f440000	                    nop word [rax + rax]	      3812	option.c	FUNCTION_2	IF_1	ELSE_4	IF_8
0x4012b68	    0x488b3d000000	            mov rdi, qword [0x04012b6f] 	      3794	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	CALL_4
0x4012b6f	      0xe800000000	                          call 0x4012b74	      3794	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	CALL_4
0x4012b74	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      3794	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	CALL_4
0x4012b78	      0xe977fcffff	                           jmp 0x40127f4	      3794	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	CALL_4
0x4012b7d	           0xf1f00	                         nop dword [rax]	      3794	option.c	FUNCTION_2	IF_1	ELSE_2	IF_5	CALL_4
0x4012b80	    0x488b1d000000	            mov rbx, qword [0x04012b87] 	      3860	option.c	FUNCTION_3	CALL_3
0x4012b87	      0xe9f8fcffff	                           jmp 0x4012884	      3860	option.c	FUNCTION_3	CALL_3
0x4012b8c	         0xf1f4000	                         nop dword [rax]	      3860	option.c	FUNCTION_3	CALL_3
0x4012b90	        0x8078015f	                cmp byte [rax + 1], 0x5f	     10375	option.c	FUNCTION_73
0x4012b94	     0xf8529feffff	                           jne 0x40129c3	     10375	option.c	FUNCTION_73
0x4012b9a	    0x488b1d000000	            mov rbx, qword [0x04012ba1] 	      3609	option.c	FUNCTION_1	CALL_47
0x4012ba1	    0x488b83901400	          mov rax, qword [rbx + 0x1490] 	     12458	option.c	FUNCTION_110
0x4012ba8	    0x488bab081700	          mov rbp, qword [rbx + 0x1708] 	     12464	option.c	FUNCTION_110	IF_1
0x4012baf	           0xfb600	                   movzx eax, byte [rax]	     12458	option.c	FUNCTION_110
0x4012bb2	          0x4885ed	                           test rbp, rbp	     12464	option.c	FUNCTION_110	IF_1
0x4012bb5	    0x898304170000	          mov dword [rbx + 0x1704], eax 	     12458	option.c	FUNCTION_110
0x4012bbb	    0x8b8370140000	          mov eax, dword [rbx + 0x1470] 	     12459	option.c	FUNCTION_110
0x4012bc1	    0x898300170000	          mov dword [rbx + 0x1700], eax 	     12459	option.c	FUNCTION_110
0x4012bc7	    0x8b830c140000	          mov eax, dword [rbx + 0x140c] 	     12461	option.c	FUNCTION_110
0x4012bcd	    0x898314170000	          mov dword [rbx + 0x1714], eax 	     12461	option.c	FUNCTION_110
0x4012bd3	            0x7413	                            je 0x4012be8	     12464	option.c	FUNCTION_110	IF_1
0x4012bd5	    0x488bb3881400	          mov rsi, qword [rbx + 0x1488] 	     12465	option.c	FUNCTION_110	IF_1	CALL_1
0x4012bdc	          0x4889ef	                            mov rdi, rbp	     12465	option.c	FUNCTION_110	IF_1	CALL_1
0x4012bdf	      0xe800000000	                          call 0x4012be4	     12465	option.c	FUNCTION_110	IF_1	CALL_1
0x4012be4	            0x85c0	                           test eax, eax	     12465	option.c	FUNCTION_110	IF_1	CALL_1
0x4012be6	            0x741b	                            je 0x4012c03	     12465	option.c	FUNCTION_110	IF_1	CALL_1
0x4012be8	          0x4889ef	                            mov rdi, rbp	     12467	option.c	FUNCTION_110	IF_1	CALL_2
0x4012beb	      0xe800000000	                          call 0x4012bf0	     12467	option.c	FUNCTION_110	IF_1	CALL_2
0x4012bf0	    0x488bbb881400	          mov rdi, qword [rbx + 0x1488] 	     12468	option.c	FUNCTION_110	IF_1	CALL_3
0x4012bf7	      0xe800000000	                          call 0x4012bfc	     12468	option.c	FUNCTION_110	IF_1	CALL_3
0x4012bfc	    0x488983081700	          mov qword [rbx + 0x1708], rax 	     12468	option.c	FUNCTION_110	IF_1	CALL_3
0x4012c03	      0xbf00000000	                              mov edi, 0	      3618	option.c	FUNCTION_1	IF_26	CALL_48
0x4012c08	      0xe800000000	                          call 0x4012c0d	      3618	option.c	FUNCTION_1	IF_26	CALL_48
0x4012c0d	          0x4885c0	                           test rax, rax	      3618	option.c	FUNCTION_1	IF_26	CALL_48
0x4012c10	            0x7413	                            je 0x4012c25	      3618	option.c	FUNCTION_1	IF_26	CALL_48
0x4012c12	            0x31c9	                            xor ecx, ecx	      3619	option.c	FUNCTION_1	CALL_49
0x4012c14	            0x31d2	                            xor edx, edx	      3619	option.c	FUNCTION_1	CALL_49
0x4012c16	      0xbe01000000	                              mov esi, 1	      3619	option.c	FUNCTION_1	CALL_49
0x4012c1b	      0xbf00000000	                              mov edi, 0	      3619	option.c	FUNCTION_1	CALL_49
0x4012c20	      0xe800000000	                          call 0x4012c25	      3619	option.c	FUNCTION_1	CALL_49
0x4012c25	      0xe800000000	                          call 0x4012c2a	      5614	option.c	FUNCTION_27	CALL_1
0x4012c2a	      0xe891d8feff	                  call sym.check_opt_wim	      5617	option.c	FUNCTION_27	CALL_2
0x4012c2f	      0xe8ccf4feff	  call sym.set_chars_option.constprop.22	      5619	option.c	FUNCTION_27	CALL_3
0x4012c34	      0xe807f7feff	  call sym.set_chars_option.constprop.23	      5621	option.c	FUNCTION_27	CALL_4
0x4012c39	      0xe8d2dbfeff	         call sym.check_clipboard_option	      5625	option.c	FUNCTION_27	CALL_5
0x4012c3e	      0xe800000000	                          call 0x4012c43	      3662	option.c	FUNCTION_1	CALL_64
0x4012c43	          0x4885c0	                           test rax, rax	      3663	option.c	FUNCTION_1	IF_32
0x4012c46	          0x4889c3	                            mov rbx, rax	      3662	option.c	FUNCTION_1	CALL_64
0x4012c49	            0x7444	                            je 0x4012c8f	      3663	option.c	FUNCTION_1	IF_32
0x4012c4b	    0x488b2d000000	            mov rbp, qword [0x04012c52] 	      3669	option.c	FUNCTION_1	IF_32
0x4012c52	      0xbf00000000	                              mov edi, 0	      3671	option.c	FUNCTION_1	IF_32	IF_33	CALL_65
0x4012c57	    0x488905000000	            mov qword [0x04012c5e], rax 	      3670	option.c	FUNCTION_1	IF_32
0x4012c5e	      0xb908000000	                              mov ecx, 8	      3671	option.c	FUNCTION_1	IF_32	IF_33	CALL_65
0x4012c63	          0x4889c6	                            mov rsi, rax	      3671	option.c	FUNCTION_1	IF_32	IF_33	CALL_65
0x4012c66	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3671	option.c	FUNCTION_1	IF_32	IF_33	CALL_65
0x4012c68	     0xf8469010000	                            je 0x4012dd7	      3671	option.c	FUNCTION_1	IF_32	IF_33	CALL_65
0x4012c6e	      0xe800000000	                          call 0x4012c73	      3679	option.c	FUNCTION_1	IF_32	IF_34	CALL_68
0x4012c73	          0x4885c0	                           test rax, rax	      3679	option.c	FUNCTION_1	IF_32	IF_34	CALL_68
0x4012c76	     0xf8482010000	                            je 0x4012dfe	      3679	option.c	FUNCTION_1	IF_32	IF_34	CALL_68
0x4012c7c	    0x488b3d000000	            mov rdi, qword [0x04012c83] 	      3743	option.c	FUNCTION_1	IF_32	ELSE_9	CALL_84
0x4012c83	      0xe800000000	                          call 0x4012c88	      3743	option.c	FUNCTION_1	IF_32	ELSE_9	CALL_84
0x4012c88	    0x48892d000000	            mov qword [0x04012c8f], rbp 	      3744	option.c	FUNCTION_1	IF_32	ELSE_9
0x4012c8f	      0xe800000000	                          call 0x4012c94	      3751	option.c	FUNCTION_1	CALL_86
0x4012c94	          0x4889c7	                            mov rdi, rax	      3751	option.c	FUNCTION_1	CALL_86
0x4012c97	      0xe800000000	                          call 0x4012c9c	      3751	option.c	FUNCTION_1	CALL_86
0x4012c9c	      0x488b442438	            mov rax, qword [rsp + 0x38] 	      3753	option.c	FUNCTION_1
0x4012ca1	    0x644833042528	                xor rax, qword fs:[0x28]	      3753	option.c	FUNCTION_1
0x4012caa	     0xf8557030000	                           jne 0x4013007	      3753	option.c	FUNCTION_1
0x4012cb0	        0x4883c440	                           add rsp, 0x40	      3753	option.c	FUNCTION_1
0x4012cb4	              0x5b	                                 pop rbx	      3753	option.c	FUNCTION_1
0x4012cb5	              0x5d	                                 pop rbp	      3753	option.c	FUNCTION_1
0x4012cb6	            0x415c	                                 pop r12	      3753	option.c	FUNCTION_1
0x4012cb8	            0x415d	                                 pop r13	      3753	option.c	FUNCTION_1
0x4012cba	            0x415e	                                 pop r14	      3753	option.c	FUNCTION_1
0x4012cbc	              0xc3	                                     ret	      3753	option.c	FUNCTION_1
0x4012cbd	           0xf1f00	                         nop dword [rax]	      3753	option.c	FUNCTION_1
0x4012cc0	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      3603	option.c	FUNCTION_1	FOR_3	IF_24	CALL_46
0x4012cc4	      0x4889442408	                mov qword [rsp + 8], rax	      3603	option.c	FUNCTION_1	FOR_3	IF_24	CALL_46
0x4012cc9	      0xe800000000	                          call 0x4012cce	      3603	option.c	FUNCTION_1	FOR_3	IF_24	CALL_46
0x4012cce	          0x488b13	                    mov rdx, qword [rbx]	      3603	option.c	FUNCTION_1	FOR_3	IF_24	CALL_46
0x4012cd1	      0x488b442408	                mov rax, qword [rsp + 8]	      3603	option.c	FUNCTION_1	FOR_3	IF_24	CALL_46
0x4012cd6	      0xe9cdfcffff	                           jmp 0x40129a8	      3603	option.c	FUNCTION_1	FOR_3	IF_24	CALL_46
0x4012cdb	          0x4c89ef	                            mov rdi, r13	      3489	option.c	FUNCTION_1	IF_13	CALL_30
0x4012cde	      0xe800000000	                          call 0x4012ce3	      3489	option.c	FUNCTION_1	IF_13	CALL_30
0x4012ce3	      0xe935faffff	                           jmp 0x401271d	      3489	option.c	FUNCTION_1	IF_13	CALL_30
0x4012ce8	            0x31c0	                            xor eax, eax	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012cea	      0xbe00010000	                          mov esi, 0x100	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012cef	          0x4531c9	                            xor r9d, r9d	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012cf2	      0xbf00010000	                          mov edi, 0x100	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012cf7	      0xba10000000	                           mov edx, 0x10	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012cfc	    0x41b800010000	                          mov r8d, 0x100	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012d02	      0xe90eeeffff	                           jmp 0x4011b15	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012d07	            0x31c9	                            xor ecx, ecx	      3559	option.c	FUNCTION_1	CALL_36
0x4012d09	      0xba00000000	                              mov edx, 0	      3559	option.c	FUNCTION_1	CALL_36
0x4012d0e	            0x31f6	                            xor esi, esi	      3559	option.c	FUNCTION_1	CALL_36
0x4012d10	      0xbf00000000	                              mov edi, 0	      3559	option.c	FUNCTION_1	CALL_36
0x4012d15	      0xe800000000	                          call 0x4012d1a	      3559	option.c	FUNCTION_1	CALL_36
0x4012d1a	      0xe995fbffff	                           jmp 0x40128b4	      3559	option.c	FUNCTION_1	CALL_36
0x4012d1f	      0xbf00000000	                              mov edi, 0	      3542	option.c	FUNCTION_1	IF_19	CALL_34
0x4012d24	      0xe8f7d5feff	                     call sym.findoption	      3542	option.c	FUNCTION_1	IF_19	CALL_34
0x4012d29	            0x85c0	                           test eax, eax	      3543	option.c	FUNCTION_1	IF_19	IF_20
0x4012d2b	            0x781c	                            js 0x4012d49	      3543	option.c	FUNCTION_1	IF_19	IF_20
0x4012d2d	            0x4898	                                    cdqe	      3545	option.c	FUNCTION_1	IF_19	IF_20
0x4012d2f	    0x48c705000000	               mov qword [0x04012d3a], 0	      3546	option.c	FUNCTION_1	IF_19	IF_20
0x4012d3a	        0x48c1e006	                              shl rax, 6	      3545	option.c	FUNCTION_1	IF_19	IF_20
0x4012d3e	    0x48c780000000	                      mov qword [rax], 0	      3545	option.c	FUNCTION_1	IF_19	IF_20
0x4012d49	      0xbf00000000	                              mov edi, 0	      3548	option.c	FUNCTION_1	IF_19	CALL_35
0x4012d4e	      0xe8cdd5feff	                     call sym.findoption	      3548	option.c	FUNCTION_1	IF_19	CALL_35
0x4012d53	            0x85c0	                           test eax, eax	      3549	option.c	FUNCTION_1	IF_19	IF_21
0x4012d55	     0xf884bfbffff	                            js 0x40128a6	      3549	option.c	FUNCTION_1	IF_19	IF_21
0x4012d5b	            0x4898	                                    cdqe	      3551	option.c	FUNCTION_1	IF_19	IF_21
0x4012d5d	    0x48c705000000	               mov qword [0x04012d68], 0	      3552	option.c	FUNCTION_1	IF_19	IF_21
0x4012d68	        0x48c1e006	                              shl rax, 6	      3551	option.c	FUNCTION_1	IF_19	IF_21
0x4012d6c	    0x48c780000000	                      mov qword [rax], 0	      3551	option.c	FUNCTION_1	IF_19	IF_21
0x4012d77	      0xe92afbffff	                           jmp 0x40128a6	      3551	option.c	FUNCTION_1	IF_19	IF_21
0x4012d7c	      0x448b542420	           mov r10d, dword [rsp + 0x20] 	      3397	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	IF_6
0x4012d81	          0x4585d2	                         test r10d, r10d	      3397	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	IF_6
0x4012d84	            0x7e18	                           jle 0x4012d9e	      3397	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	IF_6
0x4012d86	      0x4c8b742430	            mov r14, qword [rsp + 0x30] 	      3398	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_13
0x4012d8b	          0x4c89f7	                            mov rdi, r14	       148	string3.h	FUNCTION_147	CALL_3
0x4012d8e	      0xe800000000	                          call 0x4012d93	       148	string3.h	FUNCTION_147	CALL_3
0x4012d93	    0x41b92c000000	                           mov r9d, 0x2c	       148	string3.h	FUNCTION_147	CALL_3
0x4012d99	      0x6645890c06	               mov word [r14 + rax], r9w	       148	string3.h	FUNCTION_147	CALL_3
0x4012d9e	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	       148	string3.h	FUNCTION_147	CALL_3
0x4012da3	          0x4c89e6	                            mov rsi, r12	       148	string3.h	FUNCTION_147	CALL_3
0x4012da6	      0xe800000000	                          call 0x4012dab	       148	string3.h	FUNCTION_147	CALL_3
0x4012dab	      0x488b7c2430	            mov rdi, qword [rsp + 0x30] 	      3400	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_15
0x4012db0	      0xe800000000	                          call 0x4012db5	      3400	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_15
0x4012db5	      0x4c8b742430	            mov r14, qword [rsp + 0x30] 	      3401	option.c	FUNCTION_1	FOR_1	IF_4	IF_5	CALL_16
0x4012dba	          0x4c89f7	                            mov rdi, r14	       148	string3.h	FUNCTION_147	CALL_3
0x4012dbd	      0xe800000000	                          call 0x4012dc2	       148	string3.h	FUNCTION_147	CALL_3
0x4012dc2	    0x41b82a000000	                           mov r8d, 0x2a	       148	string3.h	FUNCTION_147	CALL_3
0x4012dc8	      0x6645890406	               mov word [r14 + rax], r8w	       148	string3.h	FUNCTION_147	CALL_3
0x4012dcd	      0x44016c2420	            add dword [rsp + 0x20], r13d	      3402	option.c	FUNCTION_1	FOR_1	IF_4	IF_5
0x4012dd2	      0xe98ff7ffff	                           jmp 0x4012566	      3402	option.c	FUNCTION_1	FOR_1	IF_4	IF_5
0x4012dd7	      0xbf00000000	                              mov edi, 0	      3676	option.c	FUNCTION_1	IF_32	IF_33	CALL_66
0x4012ddc	      0xe800000000	                          call 0x4012de1	      3676	option.c	FUNCTION_1	IF_32	IF_33	CALL_66
0x4012de1	          0x4889df	                            mov rdi, rbx	      3677	option.c	FUNCTION_1	IF_32	IF_33	CALL_67
0x4012de4	    0x488905000000	            mov qword [0x04012deb], rax 	      3676	option.c	FUNCTION_1	IF_32	IF_33	CALL_66
0x4012deb	      0xe800000000	                          call 0x4012df0	      3677	option.c	FUNCTION_1	IF_32	IF_33	CALL_67
0x4012df0	      0xe800000000	                          call 0x4012df5	      3679	option.c	FUNCTION_1	IF_32	IF_34	CALL_68
0x4012df5	          0x4885c0	                           test rax, rax	      3679	option.c	FUNCTION_1	IF_32	IF_34	CALL_68
0x4012df8	     0xf857efeffff	                           jne 0x4012c7c	      3679	option.c	FUNCTION_1	IF_32	IF_34	CALL_68
0x4012dfe	      0xbf00000000	                              mov edi, 0	      3681	option.c	FUNCTION_1	IF_32	IF_34	CALL_69
0x4012e03	      0xe818d5feff	                     call sym.findoption	      3681	option.c	FUNCTION_1	IF_32	IF_34	CALL_69
0x4012e08	            0x85c0	                           test eax, eax	      3682	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x4012e0a	     0xf887ffeffff	                            js 0x4012c8f	      3682	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x4012e10	    0x488b15000000	            mov rdx, qword [0x04012e17] 	      3684	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x4012e17	            0x4898	                                    cdqe	      3684	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x4012e19	        0x48c1e006	                              shl rax, 6	      3684	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x4012e1d	    0x488990000000	                    mov qword [rax], rdx	      3684	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x4012e24	    0x480500000000	                              add rax, 0	      3684	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x4012e2a	    0x488148108000	             or qword [rax + 0x10], 0x80	      3685	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x4012e32	      0xe958feffff	                           jmp 0x4012c8f	      3685	option.c	FUNCTION_1	IF_32	IF_34	IF_35
0x4012e37	      0xbe20000000	                           mov esi, 0x20	      3878	option.c	FUNCTION_4	IF_1	CALL_1
0x4012e3c	          0x4889c7	                            mov rdi, rax	      3878	option.c	FUNCTION_4	IF_1	CALL_1
0x4012e3f	      0xe800000000	                          call 0x4012e44	      3878	option.c	FUNCTION_4	IF_1	CALL_1
0x4012e44	          0x4885c0	                           test rax, rax	      3878	option.c	FUNCTION_4	IF_1	CALL_1
0x4012e47	            0x747e	                            je 0x4012ec7	      3878	option.c	FUNCTION_4	IF_1	CALL_1
0x4012e49	      0xbe00000000	                              mov esi, 0	      3879	option.c	FUNCTION_4	CALL_2
0x4012e4e	          0x4889df	                            mov rdi, rbx	      3879	option.c	FUNCTION_4	CALL_2
0x4012e51	      0xe800000000	                          call 0x4012e56	      3879	option.c	FUNCTION_4	CALL_2
0x4012e56	          0x4989c5	                            mov r13, rax	      3879	option.c	FUNCTION_4	CALL_2
0x4012e59	          0x4d85ed	                           test r13, r13	      3882	option.c	FUNCTION_4	IF_2
0x4012e5c	     0xf84b5f6ffff	                            je 0x4012517	      3882	option.c	FUNCTION_4	IF_2
0x4012e62	      0xbf00000000	                              mov edi, 0	      3884	option.c	FUNCTION_4	IF_2	CALL_4
0x4012e67	      0xe8b4d4feff	                     call sym.findoption	      3884	option.c	FUNCTION_4	IF_2	CALL_4
0x4012e6c	            0x85c0	                           test eax, eax	      3885	option.c	FUNCTION_4	IF_2	IF_3
0x4012e6e	     0xf88a3f6ffff	                            js 0x4012517	      3885	option.c	FUNCTION_4	IF_2	IF_3
0x4012e74	          0x4863d8	                         movsxd rbx, eax	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x4012e77	          0x4989dc	                            mov r12, rbx	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x4012e7a	        0x49c1e406	                              shl r12, 6	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x4012e7e	    0x498b94240000	                    mov rdx, qword [r12]	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x4012e86	    0x4981c4000000	                              add r12, 0	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x4012e8d	          0xf6c280	                           test dl, 0x80	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x4012e90	     0xf858b000000	                           jne 0x4012f21	      3887	option.c	FUNCTION_4	IF_2	IF_3	IF_4
0x4012e96	          0x4889d8	                            mov rax, rbx	      3889	option.c	FUNCTION_4	IF_2	IF_3
0x4012e99	          0x80ca80	                             or dl, 0x80	      3890	option.c	FUNCTION_4	IF_2	IF_3
0x4012e9c	        0x48c1e006	                              shl rax, 6	      3889	option.c	FUNCTION_4	IF_2	IF_3
0x4012ea0	    0x4c89a8000000	                    mov qword [rax], r13	      3889	option.c	FUNCTION_4	IF_2	IF_3
0x4012ea7	    0x488990000000	                    mov qword [rax], rdx	      3890	option.c	FUNCTION_4	IF_2	IF_3
0x4012eae	      0xe964f6ffff	                           jmp 0x4012517	      3890	option.c	FUNCTION_4	IF_2	IF_3
0x4012eb3	      0x498b7c2428	            mov rdi, qword [r12 + 0x28] 	      3888	option.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x4012eb8	      0xe800000000	                          call 0x4012ebd	      3888	option.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x4012ebd	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      3888	option.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x4012ec2	      0xe998f8ffff	                           jmp 0x401275f	      3888	option.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x4012ec7	          0x4889df	                            mov rdi, rbx	      3881	option.c	FUNCTION_4	CALL_3
0x4012eca	      0xe800000000	                          call 0x4012ecf	      3881	option.c	FUNCTION_4	CALL_3
0x4012ecf	          0x4989c5	                            mov r13, rax	      3881	option.c	FUNCTION_4	CALL_3
0x4012ed2	            0xeb85	                           jmp 0x4012e59	      3881	option.c	FUNCTION_4	CALL_3
0x4012ed4	        0x498b7d28	            mov rdi, qword [r13 + 0x28] 	      3888	option.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x4012ed8	      0xe800000000	                          call 0x4012edd	      3888	option.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x4012edd	        0x498b5510	            mov rdx, qword [r13 + 0x10] 	      3888	option.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x4012ee1	      0xe9a5f5ffff	                           jmp 0x401248b	      3888	option.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x4012ee6	        0x498b7d28	            mov rdi, qword [r13 + 0x28] 	      3888	option.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x4012eea	      0xe800000000	                          call 0x4012eef	      3888	option.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x4012eef	        0x498b5510	            mov rdx, qword [r13 + 0x10] 	      3888	option.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x4012ef3	      0xe9ecf5ffff	                           jmp 0x40124e4	      3888	option.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x4012ef8	        0x498b7d28	            mov rdi, qword [r13 + 0x28] 	      3888	option.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x4012efc	      0xe800000000	                          call 0x4012f01	      3888	option.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x4012f01	        0x498b5510	            mov rdx, qword [r13 + 0x10] 	      3888	option.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x4012f05	      0xe9bff6ffff	                           jmp 0x40125c9	      3888	option.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x4012f0a	          0x4c89e7	                            mov rdi, r12	      3486	option.c	FUNCTION_1	IF_13	IF_14	CALL_29
0x4012f0d	      0xe800000000	                          call 0x4012f12	      3486	option.c	FUNCTION_1	IF_13	IF_14	CALL_29
0x4012f12	      0xe9faf7ffff	                           jmp 0x4012711	      3486	option.c	FUNCTION_1	IF_13	IF_14	CALL_29
0x4012f17	      0xbb01000000	                              mov ebx, 1	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x4012f1c	      0xe9bef7ffff	                           jmp 0x40126df	      3467	option.c	FUNCTION_1	IF_13	IF_14	FOR_2
0x4012f21	      0x498b7c2428	            mov rdi, qword [r12 + 0x28] 	      3888	option.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x4012f26	      0xe800000000	                          call 0x4012f2b	      3888	option.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x4012f2b	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	      3888	option.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x4012f30	      0xe961ffffff	                           jmp 0x4012e96	      3888	option.c	FUNCTION_4	IF_2	IF_3	CALL_5
0x4012f35	      0xbef2000000	                           mov esi, 0xf2	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012f3a	      0xb80e000000	                            mov eax, 0xe	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012f3f	      0xe9bcebffff	                           jmp 0x4011b00	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012f44	      0xbefb000000	                           mov esi, 0xfb	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012f49	      0xb805000000	                              mov eax, 5	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012f4e	      0xe9adebffff	                           jmp 0x4011b00	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012f53	      0xbefa000000	                           mov esi, 0xfa	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012f58	      0xb806000000	                              mov eax, 6	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012f5d	      0xe99eebffff	                           jmp 0x4011b00	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012f62	      0xbef9000000	                           mov esi, 0xf9	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012f67	      0xb807000000	                              mov eax, 7	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012f6c	      0xe98febffff	                           jmp 0x4011b00	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012f71	      0xbef8000000	                           mov esi, 0xf8	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012f76	      0xb808000000	                              mov eax, 8	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012f7b	      0xe980ebffff	                           jmp 0x4011b00	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012f80	      0xbef7000000	                           mov esi, 0xf7	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012f85	      0xb809000000	                              mov eax, 9	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012f8a	      0xe971ebffff	                           jmp 0x4011b00	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012f8f	      0xbef6000000	                           mov esi, 0xf6	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012f94	      0xb80a000000	                            mov eax, 0xa	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012f99	      0xe962ebffff	                           jmp 0x4011b00	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012f9e	      0xbef5000000	                           mov esi, 0xf5	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012fa3	      0xb80b000000	                            mov eax, 0xb	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012fa8	      0xe953ebffff	                           jmp 0x4011b00	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012fad	      0xbef4000000	                           mov esi, 0xf4	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012fb2	      0xb80c000000	                            mov eax, 0xc	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012fb7	      0xe944ebffff	                           jmp 0x4011b00	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012fbc	      0xbeff000000	                           mov esi, 0xff	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012fc1	      0xb801000000	                              mov eax, 1	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012fc6	      0xe935ebffff	                           jmp 0x4011b00	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012fcb	      0xbefe000000	                           mov esi, 0xfe	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012fd0	      0xb802000000	                              mov eax, 2	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012fd5	      0xe926ebffff	                           jmp 0x4011b00	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012fda	      0xbefd000000	                           mov esi, 0xfd	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012fdf	      0xb803000000	                              mov eax, 3	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012fe4	      0xe917ebffff	                           jmp 0x4011b00	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012fe9	      0xbefc000000	                           mov esi, 0xfc	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012fee	      0xb804000000	                              mov eax, 4	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012ff3	      0xe908ebffff	                           jmp 0x4011b00	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012ff8	      0xbef3000000	                           mov esi, 0xf3	     11921	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4012ffd	      0xb80d000000	                            mov eax, 0xd	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4013002	      0xe9f9eaffff	                           jmp 0x4011b00	     11920	option.c	ELSE_1	FUNCTION_95	FOR_1
0x4013007	      0xe800000000	                          call 0x401300c	      3753	option.c	FUNCTION_1
makefoldset	SWITCH,0:CALL,8:DO,0:WHILE,0:IF,1:functions,0:ELSE,0:FOR,0	226
0x4005f90	            0x4154	                                push r12	     10165	option.c	FUNCTION_65
0x4005f92	              0x55	                                push rbp	     10165	option.c	FUNCTION_65
0x4005f93	    0x41b800000000	                              mov r8d, 0	        97	stdio2.h	CALL_61
0x4005f99	              0x53	                                push rbx	     10165	option.c	FUNCTION_65
0x4005f9a	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_61
0x4005f9f	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_61
0x4005fa4	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_61
0x4005fa9	          0x4889fb	                            mov rbx, rdi	     10165	option.c	FUNCTION_65
0x4005fac	        0x4883ec10	                           sub rsp, 0x10	     10165	option.c	FUNCTION_65
0x4005fb0	    0x488b2d000000	            mov rbp, qword [0x04005fb7] 	     10166	option.c	FUNCTION_65	IF_1	CALL_1
0x4005fb7	    0x64488b042528	                mov rax, qword fs:[0x28]	     10165	option.c	FUNCTION_65
0x4005fc0	      0x4889442408	                mov qword [rsp + 8], rax	     10165	option.c	FUNCTION_65
0x4005fc5	            0x31c0	                            xor eax, eax	     10165	option.c	FUNCTION_65
0x4005fc7	      0xe800000000	                          call 0x4005fcc	        97	stdio2.h	CALL_61
0x4005fcc	            0x85c0	                           test eax, eax	     10197	option.c	FUNCTION_66	IF_1
0x4005fce	     0xf889c020000	                            js 0x4006270	     10197	option.c	FUNCTION_66	IF_1
0x4005fd4	    0x488bb5f80100	           mov rsi, qword [rbp + 0x1f8] 	     10199	option.c	FUNCTION_66	IF_2
0x4005fdb	          0x4885f6	                           test rsi, rsi	     10199	option.c	FUNCTION_66	IF_2
0x4005fde	            0x7429	                            je 0x4006009	     10199	option.c	FUNCTION_66	IF_2
0x4005fe0	    0x4c8da5f80100	                  lea r12, [rbp + 0x1f8]	     10199	option.c	FUNCTION_66	IF_2
0x4005fe7	    0x4981fc000000	                              cmp r12, 0	     10204	option.c	FUNCTION_66	IF_2	IF_3
0x4005fee	     0xf849c020000	                            je 0x4006290	     10204	option.c	FUNCTION_66	IF_2	IF_3
0x4005ff4	      0xba02000000	                              mov edx, 2	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_8
0x4005ff9	          0x4889df	                            mov rdi, rbx	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_8
0x4005ffc	      0xe800000000	                          call 0x4006001	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_8
0x4006001	            0x85c0	                           test eax, eax	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_8
0x4006003	     0xf8467020000	                            je 0x4006270	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_8
0x4006009	          0x4889df	                            mov rdi, rbx	     10227	option.c	FUNCTION_66	IF_9	CALL_9
0x400600c	      0xe800000000	                          call 0x4006011	     10227	option.c	FUNCTION_66	IF_9	CALL_9
0x4006011	            0x85c0	                           test eax, eax	     10227	option.c	FUNCTION_66	IF_9	CALL_9
0x4006013	     0xf8857020000	                            js 0x4006270	     10227	option.c	FUNCTION_66	IF_9	CALL_9
0x4006019	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_61
0x400601b	    0x41b800000000	                              mov r8d, 0	        97	stdio2.h	CALL_61
0x4006021	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_61
0x4006026	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_61
0x400602b	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_61
0x4006030	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_61
0x4006033	    0x488b2d000000	            mov rbp, qword [0x0400603a] 	     10168	option.c	FUNCTION_65	IF_1	CALL_2
0x400603a	      0xe800000000	                          call 0x400603f	        97	stdio2.h	CALL_61
0x400603f	            0x85c0	                           test eax, eax	     10197	option.c	FUNCTION_66	IF_1
0x4006041	     0xf8829020000	                            js 0x4006270	     10197	option.c	FUNCTION_66	IF_1
0x4006047	    0x488bb5180200	           mov rsi, qword [rbp + 0x218] 	     10199	option.c	FUNCTION_66	IF_2
0x400604e	          0x4885f6	                           test rsi, rsi	     10199	option.c	FUNCTION_66	IF_2
0x4006051	            0x7422	                            je 0x4006075	     10199	option.c	FUNCTION_66	IF_2
0x4006053	    0x4881fd000000	                              cmp rbp, 0	     10204	option.c	FUNCTION_66	IF_2	IF_3
0x400605a	     0xf8470020000	                            je 0x40062d0	     10204	option.c	FUNCTION_66	IF_2	IF_3
0x4006060	      0xba02000000	                              mov edx, 2	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_8
0x4006065	          0x4889df	                            mov rdi, rbx	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_8
0x4006068	      0xe800000000	                          call 0x400606d	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_8
0x400606d	            0x85c0	                           test eax, eax	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_8
0x400606f	     0xf84fb010000	                            je 0x4006270	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_8
0x4006075	          0x4889df	                            mov rdi, rbx	     10227	option.c	FUNCTION_66	IF_9	CALL_9
0x4006078	      0xe800000000	                          call 0x400607d	     10227	option.c	FUNCTION_66	IF_9	CALL_9
0x400607d	            0x85c0	                           test eax, eax	     10227	option.c	FUNCTION_66	IF_9	CALL_9
0x400607f	     0xf88eb010000	                            js 0x4006270	     10227	option.c	FUNCTION_66	IF_9	CALL_9
0x4006085	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_61
0x4006087	    0x41b800000000	                              mov r8d, 0	        97	stdio2.h	CALL_61
0x400608d	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_61
0x4006092	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_61
0x4006097	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_61
0x400609c	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_61
0x400609f	    0x488b2d000000	            mov rbp, qword [0x040060a6] 	     10171	option.c	FUNCTION_65	IF_1	CALL_3
0x40060a6	      0xe800000000	                          call 0x40060ab	        97	stdio2.h	CALL_61
0x40060ab	            0x85c0	                           test eax, eax	     10197	option.c	FUNCTION_66	IF_1
0x40060ad	     0xf88bd010000	                            js 0x4006270	     10197	option.c	FUNCTION_66	IF_1
0x40060b3	    0x488bb5280200	           mov rsi, qword [rbp + 0x228] 	     10199	option.c	FUNCTION_66	IF_2
0x40060ba	          0x4885f6	                           test rsi, rsi	     10199	option.c	FUNCTION_66	IF_2
0x40060bd	            0x7422	                            je 0x40060e1	     10199	option.c	FUNCTION_66	IF_2
0x40060bf	    0x4881fd000000	                              cmp rbp, 0	     10204	option.c	FUNCTION_66	IF_2	IF_3
0x40060c6	     0xf8444020000	                            je 0x4006310	     10204	option.c	FUNCTION_66	IF_2	IF_3
0x40060cc	      0xba02000000	                              mov edx, 2	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_8
0x40060d1	          0x4889df	                            mov rdi, rbx	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_8
0x40060d4	      0xe800000000	                          call 0x40060d9	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_8
0x40060d9	            0x85c0	                           test eax, eax	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_8
0x40060db	     0xf848f010000	                            je 0x4006270	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_8
0x40060e1	          0x4889df	                            mov rdi, rbx	     10227	option.c	FUNCTION_66	IF_9	CALL_9
0x40060e4	      0xe800000000	                          call 0x40060e9	     10227	option.c	FUNCTION_66	IF_9	CALL_9
0x40060e9	            0x85c0	                           test eax, eax	     10227	option.c	FUNCTION_66	IF_9	CALL_9
0x40060eb	     0xf887f010000	                            js 0x4006270	     10227	option.c	FUNCTION_66	IF_9	CALL_9
0x40060f1	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_61
0x40060f3	    0x41b800000000	                              mov r8d, 0	        97	stdio2.h	CALL_61
0x40060f9	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_61
0x40060fe	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_61
0x4006103	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_61
0x4006108	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_61
0x400610b	    0x488b2d000000	            mov rbp, qword [0x04006112] 	     10173	option.c	FUNCTION_65	IF_1	CALL_4
0x4006112	      0xe800000000	                          call 0x4006117	        97	stdio2.h	CALL_61
0x4006117	            0x85c0	                           test eax, eax	     10197	option.c	FUNCTION_66	IF_1
0x4006119	     0xf8851010000	                            js 0x4006270	     10197	option.c	FUNCTION_66	IF_1
0x400611f	    0x488bb5e00100	           mov rsi, qword [rbp + 0x1e0] 	     10199	option.c	FUNCTION_66	IF_2
0x4006126	          0x4885f6	                           test rsi, rsi	     10199	option.c	FUNCTION_66	IF_2
0x4006129	            0x7422	                            je 0x400614d	     10199	option.c	FUNCTION_66	IF_2
0x400612b	    0x4881fd000000	                              cmp rbp, 0	     10204	option.c	FUNCTION_66	IF_2	IF_3
0x4006132	     0xf84f8000000	                            je 0x4006230	     10204	option.c	FUNCTION_66	IF_2	IF_3
0x4006138	      0xba02000000	                              mov edx, 2	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_8
0x400613d	          0x4889df	                            mov rdi, rbx	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_8
0x4006140	      0xe800000000	                          call 0x4006145	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_8
0x4006145	            0x85c0	                           test eax, eax	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_8
0x4006147	     0xf8423010000	                            je 0x4006270	     10224	option.c	FUNCTION_66	IF_2	ELSE_2	IF_8	CALL_8
0x400614d	          0x4889df	                            mov rdi, rbx	     10227	option.c	FUNCTION_66	IF_9	CALL_9
0x4006150	      0xe800000000	                          call 0x4006155	     10227	option.c	FUNCTION_66	IF_9	CALL_9
0x4006155	            0x85c0	                           test eax, eax	     10227	option.c	FUNCTION_66	IF_9	CALL_9
0x4006157	     0xf8813010000	                            js 0x4006270	     10227	option.c	FUNCTION_66	IF_9	CALL_9
0x400615d	    0x488b05000000	            mov rax, qword [0x04006164] 	     10175	option.c	FUNCTION_65	IF_1	CALL_5
0x4006164	      0xba00000000	                              mov edx, 0	     10175	option.c	FUNCTION_65	IF_1	CALL_5
0x4006169	      0xbe00000000	                              mov esi, 0	     10175	option.c	FUNCTION_65	IF_1	CALL_5
0x400616e	          0x4889df	                            mov rdi, rbx	     10175	option.c	FUNCTION_65	IF_1	CALL_5
0x4006171	    0x488d88e80100	                  lea rcx, [rax + 0x1e8]	     10175	option.c	FUNCTION_65	IF_1	CALL_5
0x4006178	      0xe893c4ffff	                     call sym.put_setnum	     10175	option.c	FUNCTION_65	IF_1	CALL_5
0x400617d	            0x85c0	                           test eax, eax	     10175	option.c	FUNCTION_65	IF_1	CALL_5
0x400617f	     0xf84eb000000	                            je 0x4006270	     10175	option.c	FUNCTION_65	IF_1	CALL_5
0x4006185	    0x488b05000000	            mov rax, qword [0x0400618c] 	     10176	option.c	FUNCTION_65	IF_1	CALL_6
0x400618c	      0xba00000000	                              mov edx, 0	     10176	option.c	FUNCTION_65	IF_1	CALL_6
0x4006191	      0xbe00000000	                              mov esi, 0	     10176	option.c	FUNCTION_65	IF_1	CALL_6
0x4006196	          0x4889df	                            mov rdi, rbx	     10176	option.c	FUNCTION_65	IF_1	CALL_6
0x4006199	    0x488d88080200	                  lea rcx, [rax + 0x208]	     10176	option.c	FUNCTION_65	IF_1	CALL_6
0x40061a0	      0xe86bc4ffff	                     call sym.put_setnum	     10176	option.c	FUNCTION_65	IF_1	CALL_6
0x40061a5	            0x85c0	                           test eax, eax	     10176	option.c	FUNCTION_65	IF_1	CALL_6
0x40061a7	     0xf84c3000000	                            je 0x4006270	     10176	option.c	FUNCTION_65	IF_1	CALL_6
0x40061ad	    0x488b05000000	            mov rax, qword [0x040061b4] 	     10177	option.c	FUNCTION_65	IF_1	CALL_7
0x40061b4	      0xba00000000	                              mov edx, 0	     10177	option.c	FUNCTION_65	IF_1	CALL_7
0x40061b9	      0xbe00000000	                              mov esi, 0	     10177	option.c	FUNCTION_65	IF_1	CALL_7
0x40061be	          0x4889df	                            mov rdi, rbx	     10177	option.c	FUNCTION_65	IF_1	CALL_7
0x40061c1	    0x488d88100200	                  lea rcx, [rax + 0x210]	     10177	option.c	FUNCTION_65	IF_1	CALL_7
0x40061c8	      0xe843c4ffff	                     call sym.put_setnum	     10177	option.c	FUNCTION_65	IF_1	CALL_7
0x40061cd	            0x85c0	                           test eax, eax	     10177	option.c	FUNCTION_65	IF_1	CALL_7
0x40061cf	     0xf849b000000	                            je 0x4006270	     10177	option.c	FUNCTION_65	IF_1	CALL_7
0x40061d5	    0x488b05000000	            mov rax, qword [0x040061dc] 	     10263	option.c	FUNCTION_68	IF_1
0x40061dc	    0x8b80d4010000	           mov eax, dword [rax + 0x1d4] 	     10263	option.c	FUNCTION_68	IF_1
0x40061e2	            0x85c0	                           test eax, eax	     10263	option.c	FUNCTION_68	IF_1
0x40061e4	            0x783e	                            js 0x4006224	     10263	option.c	FUNCTION_68	IF_1
0x40061e6	      0xb800000000	                              mov eax, 0	        97	stdio2.h	CALL_61
0x40061eb	    0x41b800000000	                              mov r8d, 0	        97	stdio2.h	CALL_61
0x40061f1	    0x41b900000000	                              mov r9d, 0	        97	stdio2.h	CALL_61
0x40061f7	        0x4c0f45c0	                          cmovne r8, rax	        97	stdio2.h	CALL_61
0x40061fb	      0xb900000000	                              mov ecx, 0	        97	stdio2.h	CALL_61
0x4006200	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_61
0x4006202	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_61
0x4006207	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_61
0x400620c	          0x4889df	                            mov rdi, rbx	        97	stdio2.h	CALL_61
0x400620f	      0xe800000000	                          call 0x4006214	        97	stdio2.h	CALL_61
0x4006214	            0x85c0	                           test eax, eax	     10265	option.c	FUNCTION_68	IF_2
0x4006216	            0x7858	                            js 0x4006270	     10265	option.c	FUNCTION_68	IF_2
0x4006218	          0x4889df	                            mov rdi, rbx	     10266	option.c	FUNCTION_68	IF_2	CALL_1
0x400621b	      0xe800000000	                          call 0x4006220	     10266	option.c	FUNCTION_68	IF_2	CALL_1
0x4006220	            0x85c0	                           test eax, eax	     10266	option.c	FUNCTION_68	IF_2	CALL_1
0x4006222	            0x784c	                            js 0x4006270	     10266	option.c	FUNCTION_68	IF_2	CALL_1
0x4006224	      0xb801000000	                              mov eax, 1	     10182	option.c	FUNCTION_65
0x4006229	            0xeb47	                           jmp 0x4006272	     10182	option.c	FUNCTION_65
0x400622b	       0xf1f440000	                   nop dword [rax + rax]	     10182	option.c	FUNCTION_65
0x4006230	        0x48893424	                    mov qword [rsp], rsi	     10206	option.c	FUNCTION_66	IF_2	IF_3
0x4006234	            0xeb0e	                           jmp 0x4006244	     10206	option.c	FUNCTION_66	IF_2	IF_3
0x4006236	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     10206	option.c	FUNCTION_66	IF_2	IF_3
0x4006240	        0x488b3424	                    mov rsi, qword [rsp]	     10206	option.c	FUNCTION_66	IF_2	IF_3
0x4006244	          0x803e00	                       cmp byte [rsi], 0	     10207	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1
0x4006247	     0xf8400ffffff	                            je 0x400614d	     10207	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1
0x400624d	            0x31f6	                            xor esi, esi	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x400624f	          0x4889e7	                            mov rdi, rsp	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x4006252	      0xe800000000	                          call 0x4006257	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x4006257	      0xba02000000	                              mov edx, 2	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x400625c	          0x4889c6	                            mov rsi, rax	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x400625f	          0x4889df	                            mov rdi, rbx	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x4006262	      0xe800000000	                          call 0x4006267	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x4006267	            0x85c0	                           test eax, eax	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x4006269	            0x75d5	                           jne 0x4006240	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x400626b	       0xf1f440000	                   nop dword [rax + rax]	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x4006270	            0x31c0	                            xor eax, eax	     10180	option.c	FUNCTION_65	IF_1
0x4006272	      0x488b4c2408	                mov rcx, qword [rsp + 8]	     10183	option.c	FUNCTION_65
0x4006277	    0x6448330c2528	                xor rcx, qword fs:[0x28]	     10183	option.c	FUNCTION_65
0x4006280	     0xf85ca000000	                           jne 0x4006350	     10183	option.c	FUNCTION_65
0x4006286	        0x4883c410	                           add rsp, 0x10	     10183	option.c	FUNCTION_65
0x400628a	              0x5b	                                 pop rbx	     10183	option.c	FUNCTION_65
0x400628b	              0x5d	                                 pop rbp	     10183	option.c	FUNCTION_65
0x400628c	            0x415c	                                 pop r12	     10183	option.c	FUNCTION_65
0x400628e	              0xc3	                                     ret	     10183	option.c	FUNCTION_65
0x400628f	              0x90	                                     nop	     10183	option.c	FUNCTION_65
0x4006290	        0x48893424	                    mov qword [rsp], rsi	     10206	option.c	FUNCTION_66	IF_2	IF_3
0x4006294	            0xeb2c	                           jmp 0x40062c2	     10206	option.c	FUNCTION_66	IF_2	IF_3
0x4006296	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     10206	option.c	FUNCTION_66	IF_2	IF_3
0x40062a0	            0x31f6	                            xor esi, esi	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x40062a2	          0x4889e7	                            mov rdi, rsp	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x40062a5	      0xe800000000	                          call 0x40062aa	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x40062aa	      0xba02000000	                              mov edx, 2	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x40062af	          0x4889c6	                            mov rsi, rax	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x40062b2	          0x4889df	                            mov rdi, rbx	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x40062b5	      0xe800000000	                          call 0x40062ba	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x40062ba	            0x85c0	                           test eax, eax	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x40062bc	            0x74b2	                            je 0x4006270	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x40062be	        0x488b3424	                    mov rsi, qword [rsp]	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x40062c2	          0x803e00	                       cmp byte [rsi], 0	     10207	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1
0x40062c5	            0x75d9	                           jne 0x40062a0	     10207	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1
0x40062c7	      0xe93dfdffff	                           jmp 0x4006009	     10207	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1
0x40062cc	         0xf1f4000	                         nop dword [rax]	     10207	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1
0x40062d0	        0x48893424	                    mov qword [rsp], rsi	     10206	option.c	FUNCTION_66	IF_2	IF_3
0x40062d4	            0xeb30	                           jmp 0x4006306	     10206	option.c	FUNCTION_66	IF_2	IF_3
0x40062d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     10206	option.c	FUNCTION_66	IF_2	IF_3
0x40062e0	            0x31f6	                            xor esi, esi	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x40062e2	          0x4889e7	                            mov rdi, rsp	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x40062e5	      0xe800000000	                          call 0x40062ea	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x40062ea	      0xba02000000	                              mov edx, 2	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x40062ef	          0x4889c6	                            mov rsi, rax	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x40062f2	          0x4889df	                            mov rdi, rbx	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x40062f5	      0xe800000000	                          call 0x40062fa	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x40062fa	            0x85c0	                           test eax, eax	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x40062fc	     0xf846effffff	                            je 0x4006270	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x4006302	        0x488b3424	                    mov rsi, qword [rsp]	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x4006306	          0x803e00	                       cmp byte [rsi], 0	     10207	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1
0x4006309	            0x75d5	                           jne 0x40062e0	     10207	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1
0x400630b	      0xe965fdffff	                           jmp 0x4006075	     10207	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1
0x4006310	        0x48893424	                    mov qword [rsp], rsi	     10206	option.c	FUNCTION_66	IF_2	IF_3
0x4006314	            0xeb0e	                           jmp 0x4006324	     10206	option.c	FUNCTION_66	IF_2	IF_3
0x4006316	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     10206	option.c	FUNCTION_66	IF_2	IF_3
0x4006320	        0x488b3424	                    mov rsi, qword [rsp]	     10206	option.c	FUNCTION_66	IF_2	IF_3
0x4006324	          0x803e00	                       cmp byte [rsi], 0	     10207	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1
0x4006327	     0xf84b4fdffff	                            je 0x40060e1	     10207	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1
0x400632d	            0x31f6	                            xor esi, esi	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x400632f	          0x4889e7	                            mov rdi, rsp	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x4006332	      0xe800000000	                          call 0x4006337	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x4006337	      0xba02000000	                              mov edx, 2	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x400633c	          0x4889c6	                            mov rsi, rax	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x400633f	          0x4889df	                            mov rdi, rbx	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x4006342	      0xe800000000	                          call 0x4006347	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x4006347	            0x85c0	                           test eax, eax	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x4006349	            0x75d5	                           jne 0x4006320	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x400634b	      0xe920ffffff	                           jmp 0x4006270	     10208	option.c	FUNCTION_66	IF_2	IF_3	WHILE_1	IF_4	CALL_2
0x4006350	      0xe800000000	                          call 0x4006355	     10183	option.c	FUNCTION_65
reset_option_was_set	SWITCH,0:CALL,1:DO,0:WHILE,0:IF,1:functions,0:ELSE,0:FOR,0	9
0x400d830	        0x4883ec08	                              sub rsp, 8	     12269	option.c	FUNCTION_103
0x400d834	      0xe8e72affff	                     call sym.findoption	     12270	option.c	FUNCTION_103	CALL_1
0x400d839	            0x85c0	                           test eax, eax	     12272	option.c	FUNCTION_103	IF_1
0x400d83b	            0x7811	                            js 0x400d84e	     12272	option.c	FUNCTION_103	IF_1
0x400d83d	            0x4898	                                    cdqe	     12273	option.c	FUNCTION_103	IF_1
0x400d83f	        0x48c1e006	                              shl rax, 6	     12273	option.c	FUNCTION_103	IF_1
0x400d843	    0x4881a0000000	     and qword [rax], 0xfffffffffffffeff	     12273	option.c	FUNCTION_103	IF_1
0x400d84e	        0x4883c408	                              add rsp, 8	     12274	option.c	FUNCTION_103
0x400d852	              0xc3	                                     ret	     12274	option.c	FUNCTION_103
check_ff_value	SWITCH,0:CALL,1:DO,0:WHILE,0:IF,0:functions,0:ELSE,0:FOR,0	45
0x4013190	          0x803f00	                       cmp byte [rdi], 0	     12360	option.c	FUNCTION_107	WHILE_1
0x4013193	            0x747b	                            je 0x4013210	     12360	option.c	FUNCTION_107	WHILE_1
0x4013195	            0x4155	                                push r13	     12513	option.c	FUNCTION_112
0x4013197	            0x4154	                                push r12	     12513	option.c	FUNCTION_112
0x4013199	              0x55	                                push rbp	     12513	option.c	FUNCTION_112
0x401319a	              0x53	                                push rbx	     12513	option.c	FUNCTION_112
0x401319b	        0x4883ec08	                              sub rsp, 8	     12513	option.c	FUNCTION_112
0x401319f	    0x488b2d000000	            mov rbp, qword [0x040131a6] 	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x40131a6	          0x4885ed	                           test rbp, rbp	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x40131a9	            0x743f	                            je 0x40131ea	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x40131ab	          0x4989fd	                            mov r13, rdi	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x40131ae	    0x41bc00000000	                             mov r12d, 0	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x40131b4	         0xf1f4000	                         nop dword [rax]	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x40131b8	          0x4889ef	                            mov rdi, rbp	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x40131bb	      0xe800000000	                          call 0x40131c0	     12367	option.c	FUNCTION_107	WHILE_1	FOR_1	CALL_1
0x40131c0	          0x4863d8	                         movsxd rbx, eax	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x40131c3	          0x4c89ee	                            mov rsi, r13	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x40131c6	          0x4889ef	                            mov rdi, rbp	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x40131c9	          0x4889da	                            mov rdx, rbx	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x40131cc	      0xe800000000	                          call 0x40131d1	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x40131d1	            0x85c0	                           test eax, eax	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x40131d3	            0x7508	                           jne 0x40131dd	     12368	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2	CALL_2
0x40131d5	    0x41807c1d0000	                 cmp byte [r13 + rbx], 0	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40131db	            0x7423	                            je 0x4013200	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40131dd	        0x4983c408	                              add r12, 8	     12369	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_2
0x40131e1	        0x498b2c24	                    mov rbp, qword [r12]	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x40131e5	          0x4885ed	                           test rbp, rbp	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x40131e8	            0x75ce	                           jne 0x40131b8	     12364	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x40131ea	        0x4883c408	                              add rsp, 8	     12515	option.c	FUNCTION_112
0x40131ee	            0x31c0	                            xor eax, eax	     12365	option.c	FUNCTION_107	WHILE_1	FOR_1	IF_1
0x40131f0	              0x5b	                                 pop rbx	     12515	option.c	FUNCTION_112
0x40131f1	              0x5d	                                 pop rbp	     12515	option.c	FUNCTION_112
0x40131f2	            0x415c	                                 pop r12	     12515	option.c	FUNCTION_112
0x40131f4	            0x415d	                                 pop r13	     12515	option.c	FUNCTION_112
0x40131f6	              0xc3	                                     ret	     12515	option.c	FUNCTION_112
0x40131f7	    0x660f1f840000	                    nop word [rax + rax]	     12515	option.c	FUNCTION_112
0x4013200	        0x4883c408	                              add rsp, 8	     12515	option.c	FUNCTION_112
0x4013204	      0xb801000000	                              mov eax, 1	     12380	option.c	FUNCTION_107
0x4013209	              0x5b	                                 pop rbx	     12515	option.c	FUNCTION_112
0x401320a	              0x5d	                                 pop rbp	     12515	option.c	FUNCTION_112
0x401320b	            0x415c	                                 pop r12	     12515	option.c	FUNCTION_112
0x401320d	            0x415d	                                 pop r13	     12515	option.c	FUNCTION_112
0x401320f	              0xc3	                                     ret	     12515	option.c	FUNCTION_112
0x4013210	      0xb801000000	                              mov eax, 1	     12380	option.c	FUNCTION_107
0x4013215	              0xc3	                                     ret	     12515	option.c	FUNCTION_112
valid_filetype	SWITCH,0:CALL,2:DO,0:WHILE,0:IF,1:functions,0:ELSE,0:FOR,1	19
0x4000040	            0x8b07	                    mov eax, dword [rdi]	      7671	option.c	FUNCTION_41
0x4000042	            0x2b06	                    sub eax, dword [rsi]	      7671	option.c	FUNCTION_41
0x4000044	              0xc3	                                     ret	      7672	option.c	FUNCTION_41
0x4000045	              0x90	                                     nop	      7672	option.c	FUNCTION_41
0x4000046	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      7672	option.c	FUNCTION_41
0x4000050	          0x4863ff	                         movsxd rdi, edi	      8104	option.c	FUNCTION_48
0x4000053	          0x4889f8	                            mov rax, rdi	      8104	option.c	FUNCTION_48
0x4000056	        0x48c1e006	                              shl rax, 6	      8104	option.c	FUNCTION_48
0x400005a	    0x480500000000	                              add rax, 0	      8104	option.c	FUNCTION_48
0x4000060	        0x40f6c606	                             test sil, 6	      8108	option.c	FUNCTION_48	IF_1
0x4000064	          0x8b4820	            mov ecx, dword [rax + 0x20] 	      8104	option.c	FUNCTION_48
0x4000067	            0x7417	                            je 0x4000080	      8108	option.c	FUNCTION_48	IF_1
0x4000069	        0x40f6c602	                             test sil, 2	      8108	option.c	FUNCTION_48	IF_1
0x400006d	            0x7451	                            je 0x40000c0	      8108	option.c	FUNCTION_48	IF_1
0x400006f	        0x48c1e706	                              shl rdi, 6	      8109	option.c	FUNCTION_48	IF_1
0x4000073	    0x899700000000	                    mov dword [rdi], edx	      8109	option.c	FUNCTION_48	IF_1
0x4000079	          0x83e604	                              and esi, 4	      8110	option.c	FUNCTION_48	IF_2
0x400007c	            0x7505	                           jne 0x4000083	      8110	option.c	FUNCTION_48	IF_2
0x400007e	            0xf3c3	                                     ret	      8110	option.c	FUNCTION_48	IF_2
check_colorcolumn	SWITCH,0:CALL,7:DO,0:WHILE,0:IF,12:functions,0:ELSE,3:FOR,2	122
0x4005370	            0x4154	                                push r12	      7680	option.c	FUNCTION_42
0x4005372	              0x55	                                push rbp	      7680	option.c	FUNCTION_42
0x4005373	              0x53	                                push rbx	      7680	option.c	FUNCTION_42
0x4005374	    0x4881ec200400	                          sub rsp, 0x420	      7680	option.c	FUNCTION_42
0x400537b	    0x64488b042528	                mov rax, qword fs:[0x28]	      7680	option.c	FUNCTION_42
0x4005384	    0x488984241804	            mov qword [rsp + 0x418], rax	      7680	option.c	FUNCTION_42
0x400538c	            0x31c0	                            xor eax, eax	      7680	option.c	FUNCTION_42
0x400538e	      0x48837f0800	                  cmp qword [rdi + 8], 0	      7688	option.c	FUNCTION_42	IF_1
0x4005393	     0xf840e010000	                            je 0x40054a7	      7688	option.c	FUNCTION_42	IF_1
0x4005399	    0x488b8f780200	           mov rcx, qword [rdi + 0x278] 	      7691	option.c	FUNCTION_42	FOR_1
0x40053a0	            0x31ed	                            xor ebp, ebp	      7683	option.c	FUNCTION_42
0x40053a2	          0x4889fb	                            mov rbx, rdi	      7683	option.c	FUNCTION_42
0x40053a5	      0x48894c2408	                mov qword [rsp + 8], rcx	      7691	option.c	FUNCTION_42	FOR_1
0x40053aa	           0xfb601	                   movzx eax, byte [rcx]	      7691	option.c	FUNCTION_42	FOR_1
0x40053ad	            0x84c0	                             test al, al	      7691	option.c	FUNCTION_42	FOR_1
0x40053af	     0xf8587000000	                           jne 0x400543c	      7691	option.c	FUNCTION_42	FOR_1
0x40053b5	      0xe9f6000000	                           jmp 0x40054b0	      7691	option.c	FUNCTION_42	FOR_1
0x40053ba	    0x660f1f440000	                    nop word [rax + rax]	      7691	option.c	FUNCTION_42	FOR_1
0x40053c0	          0x4531e4	                          xor r12d, r12d	      7696	option.c	FUNCTION_42	FOR_1	IF_2
0x40053c3	            0x3c2d	                            cmp al, 0x2d	      7696	option.c	FUNCTION_42	FOR_1	IF_2
0x40053c5	        0x488d4101	                      lea rax, [rcx + 1]	      7697	option.c	FUNCTION_42	FOR_1	IF_2
0x40053c9	        0x410f95c4	                              setne r12b	      7696	option.c	FUNCTION_42	FOR_1	IF_2
0x40053cd	      0x4889442408	                mov qword [rsp + 8], rax	      7697	option.c	FUNCTION_42	FOR_1	IF_2
0x40053d2	         0xfb64901	               movzx ecx, byte [rcx + 1]	      7698	option.c	FUNCTION_42	FOR_1	IF_2	IF_3	CALL_1
0x40053d6	      0x478d6424ff	               lea r12d, [r12 + r12 - 1]	      7696	option.c	FUNCTION_42	FOR_1	IF_2
0x40053db	          0x83e930	                           sub ecx, 0x30	      7698	option.c	FUNCTION_42	FOR_1	IF_2	IF_3	CALL_1
0x40053de	          0x83f909	                              cmp ecx, 9	      7698	option.c	FUNCTION_42	FOR_1	IF_2	IF_3	CALL_1
0x40053e1	     0xf8789000000	                            ja 0x4005470	      7698	option.c	FUNCTION_42	FOR_1	IF_2	IF_3	CALL_1
0x40053e7	      0x488d7c2408	                      lea rdi, [rsp + 8]	      7700	option.c	FUNCTION_42	FOR_1	IF_2	CALL_2
0x40053ec	      0xe800000000	                          call 0x40053f1	      7700	option.c	FUNCTION_42	FOR_1	IF_2	CALL_2
0x40053f1	        0x488b5308	                mov rdx, qword [rbx + 8]	      7701	option.c	FUNCTION_42	FOR_1	IF_2	IF_4
0x40053f5	    0x488b92b81500	          mov rdx, qword [rdx + 0x15b8] 	      7701	option.c	FUNCTION_42	FOR_1	IF_2	IF_4
0x40053fc	          0x4885d2	                           test rdx, rdx	      7701	option.c	FUNCTION_42	FOR_1	IF_2	IF_4
0x40053ff	            0x7415	                            je 0x4005416	      7701	option.c	FUNCTION_42	FOR_1	IF_2	IF_4
0x4005401	        0x410fafc4	                          imul eax, r12d	      7703	option.c	FUNCTION_42	FOR_1	IF_2
0x4005405	             0x1d0	                            add eax, edx	      7704	option.c	FUNCTION_42	FOR_1	IF_2	IF_5
0x4005407	            0x780d	                            js 0x4005416	      7704	option.c	FUNCTION_42	FOR_1	IF_2	IF_5
0x4005409	          0x4863d5	                         movsxd rdx, ebp	      7711	option.c	FUNCTION_42	FOR_1
0x400540c	          0x83e801	                              sub eax, 1	      7711	option.c	FUNCTION_42	FOR_1
0x400540f	          0x83c501	                              add ebp, 1	      7711	option.c	FUNCTION_42	FOR_1
0x4005412	        0x89449410	     mov dword [rsp + rdx*4 + 0x10], eax	      7711	option.c	FUNCTION_42	FOR_1
0x4005416	      0x488b442408	                mov rax, qword [rsp + 8]	      7713	option.c	FUNCTION_42	FOR_1	IF_7
0x400541b	           0xfb610	                   movzx edx, byte [rax]	      7713	option.c	FUNCTION_42	FOR_1	IF_7
0x400541e	            0x84d2	                             test dl, dl	      7713	option.c	FUNCTION_42	FOR_1	IF_7
0x4005420	     0xf848a000000	                            je 0x40054b0	      7713	option.c	FUNCTION_42	FOR_1	IF_7
0x4005426	          0x80fa2c	                            cmp dl, 0x2c	      7715	option.c	FUNCTION_42	FOR_1	IF_8
0x4005429	            0x7545	                           jne 0x4005470	      7715	option.c	FUNCTION_42	FOR_1	IF_8
0x400542b	        0x488d4801	                      lea rcx, [rax + 1]	      7717	option.c	FUNCTION_42	FOR_1	IF_9
0x400542f	      0x48894c2408	                mov qword [rsp + 8], rcx	      7717	option.c	FUNCTION_42	FOR_1	IF_9
0x4005434	         0xfb64001	               movzx eax, byte [rax + 1]	      7717	option.c	FUNCTION_42	FOR_1	IF_9
0x4005438	            0x84c0	                             test al, al	      7717	option.c	FUNCTION_42	FOR_1	IF_9
0x400543a	            0x7434	                            je 0x4005470	      7717	option.c	FUNCTION_42	FOR_1	IF_9
0x400543c	    0x81fdfe000000	                           cmp ebp, 0xfe	      7691	option.c	FUNCTION_42	FOR_1
0x4005442	     0xf8ff0000000	                            jg 0x4005538	      7691	option.c	FUNCTION_42	FOR_1
0x4005448	          0x8d50d5	                   lea edx, [rax - 0x2b]	      7693	option.c	FUNCTION_42	FOR_1	IF_2
0x400544b	    0x81e2fd000000	                           and edx, 0xfd	      7693	option.c	FUNCTION_42	FOR_1	IF_2
0x4005451	     0xf8469ffffff	                            je 0x40053c0	      7693	option.c	FUNCTION_42	FOR_1	IF_2
0x4005457	          0x83e830	                           sub eax, 0x30	      7707	option.c	FUNCTION_42	FOR_1	ELSE_1	IF_6	CALL_3
0x400545a	          0x83f809	                              cmp eax, 9	      7707	option.c	FUNCTION_42	FOR_1	ELSE_1	IF_6	CALL_3
0x400545d	            0x7711	                            ja 0x4005470	      7707	option.c	FUNCTION_42	FOR_1	ELSE_1	IF_6	CALL_3
0x400545f	      0x488d7c2408	                      lea rdi, [rsp + 8]	      7708	option.c	FUNCTION_42	FOR_1	ELSE_1	IF_6
0x4005464	      0xe800000000	                          call 0x4005469	      7708	option.c	FUNCTION_42	FOR_1	ELSE_1	IF_6
0x4005469	            0xeb9e	                           jmp 0x4005409	      7708	option.c	FUNCTION_42	FOR_1	ELSE_1	IF_6
0x400546b	       0xf1f440000	                   nop dword [rax + rax]	      7708	option.c	FUNCTION_42	FOR_1	ELSE_1	IF_6
0x4005470	      0xb800000000	                              mov eax, 0	      7699	option.c	FUNCTION_42	FOR_1	IF_2	IF_3
0x4005475	    0x488bb4241804	           mov rsi, qword [rsp + 0x418] 	      7742	option.c	FUNCTION_42
0x400547d	    0x644833342528	                xor rsi, qword fs:[0x28]	      7742	option.c	FUNCTION_42
0x4005486	     0xf85d6000000	                           jne 0x4005562	      7742	option.c	FUNCTION_42
0x400548c	    0x4881c4200400	                          add rsp, 0x420	      7742	option.c	FUNCTION_42
0x4005493	              0x5b	                                 pop rbx	      7742	option.c	FUNCTION_42
0x4005494	              0x5d	                                 pop rbp	      7742	option.c	FUNCTION_42
0x4005495	            0x415c	                                 pop r12	      7742	option.c	FUNCTION_42
0x4005497	              0xc3	                                     ret	      7742	option.c	FUNCTION_42
0x4005498	     0xf1f84000000	                   nop dword [rax + rax]	      7742	option.c	FUNCTION_42
0x40054a0	    0xc70407ffffff	      mov dword [rdi + rax], 0xffffffff 	      7737	option.c	FUNCTION_42	ELSE_3	IF_11
0x40054a7	            0x31c0	                            xor eax, eax	      7741	option.c	FUNCTION_42
0x40054a9	            0xebca	                           jmp 0x4005475	      7741	option.c	FUNCTION_42
0x40054ab	       0xf1f440000	                   nop dword [rax + rax]	      7741	option.c	FUNCTION_42
0x40054b0	    0x488bbb380500	           mov rdi, qword [rbx + 0x538] 	      7721	option.c	FUNCTION_42	CALL_5
0x40054b7	      0xe800000000	                          call 0x40054bc	      7721	option.c	FUNCTION_42	CALL_5
0x40054bc	            0x85ed	                           test ebp, ebp	      7722	option.c	FUNCTION_42	IF_10
0x40054be	     0xf848c000000	                            je 0x4005550	      7722	option.c	FUNCTION_42	IF_10
0x40054c4	    0x8d3cad040000	                    lea edi, [rbp*4 + 4]	      7726	option.c	FUNCTION_42	ELSE_3	CALL_6
0x40054cb	      0xe800000000	                          call 0x40054d0	      7726	option.c	FUNCTION_42	ELSE_3	CALL_6
0x40054d0	          0x4885c0	                           test rax, rax	      7727	option.c	FUNCTION_42	ELSE_3	IF_11
0x40054d3	    0x488983380500	            mov qword [rbx + 0x538], rax	      7726	option.c	FUNCTION_42	ELSE_3	CALL_6
0x40054da	            0x74cb	                            je 0x40054a7	      7727	option.c	FUNCTION_42	ELSE_3	IF_11
0x40054dc	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      7731	option.c	FUNCTION_42	ELSE_3	IF_11	CALL_7
0x40054e1	      0xb900000000	                              mov ecx, 0	      7731	option.c	FUNCTION_42	ELSE_3	IF_11	CALL_7
0x40054e6	      0xba04000000	                              mov edx, 4	      7731	option.c	FUNCTION_42	ELSE_3	IF_11	CALL_7
0x40054eb	          0x4863f5	                         movsxd rsi, ebp	      7731	option.c	FUNCTION_42	ELSE_3	IF_11	CALL_7
0x40054ee	      0xe800000000	                          call 0x40054f3	      7731	option.c	FUNCTION_42	ELSE_3	IF_11	CALL_7
0x40054f3	    0x488bbb380500	           mov rdi, qword [rbx + 0x538] 	      7731	option.c	FUNCTION_42	ELSE_3	IF_11	CALL_7
0x40054fa	            0x31c9	                            xor ecx, ecx	      7731	option.c	FUNCTION_42	ELSE_3	IF_11	CALL_7
0x40054fc	            0x31d2	                            xor edx, edx	      7686	option.c	FUNCTION_42
0x40054fe	            0xeb1b	                           jmp 0x400551b	      7686	option.c	FUNCTION_42
0x4005500	        0x8b748c10	    mov esi, dword [rsp + rcx*4 + 0x10] 	      7686	option.c	FUNCTION_42
0x4005504	            0x31c0	                            xor eax, eax	      7735	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x4005506	          0x83c201	                              add edx, 1	      7736	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x4005509	          0x893407	              mov dword [rdi + rax], esi	      7736	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x400550c	          0x4863c2	                         movsxd rax, edx	      7736	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x400550f	        0x48c1e002	                              shl rax, 2	      7736	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x4005513	        0x4883c101	                              add rcx, 1	      7736	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x4005517	            0x39cd	                            cmp ebp, ecx	      7733	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2
0x4005519	            0x7e85	                           jle 0x40054a0	      7733	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2
0x400551b	            0x85d2	                           test edx, edx	      7735	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x400551d	            0x74e1	                            je 0x4005500	      7735	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x400551f	          0x4863c2	                         movsxd rax, edx	      7735	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x4005522	        0x8b748c10	    mov esi, dword [rsp + rcx*4 + 0x10] 	      7735	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x4005526	        0x48c1e002	                              shl rax, 2	      7735	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x400552a	        0x397407fc	         cmp dword [rdi + rax - 4], esi 	      7735	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x400552e	            0x75d6	                           jne 0x4005506	      7735	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x4005530	            0xebe1	                           jmp 0x4005513	      7735	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x4005532	    0x660f1f440000	                    nop word [rax + rax]	      7735	option.c	FUNCTION_42	ELSE_3	IF_11	FOR_2	IF_12
0x4005538	    0x488bbb380500	           mov rdi, qword [rbx + 0x538] 	      7721	option.c	FUNCTION_42	CALL_5
0x400553f	      0xe800000000	                          call 0x4005544	      7721	option.c	FUNCTION_42	CALL_5
0x4005544	      0xe97bffffff	                           jmp 0x40054c4	      7721	option.c	FUNCTION_42	CALL_5
0x4005549	     0xf1f80000000	                         nop dword [rax]	      7721	option.c	FUNCTION_42	CALL_5
0x4005550	    0x48c783380500	              mov qword [rbx + 0x538], 0	      7723	option.c	FUNCTION_42	IF_10
0x400555b	            0x31c0	                            xor eax, eax	      7741	option.c	FUNCTION_42
0x400555d	      0xe913ffffff	                           jmp 0x4005475	      7741	option.c	FUNCTION_42
0x4005562	      0xe800000000	                          call 0x4005567	      7742	option.c	FUNCTION_42
set_string_option_direct	SWITCH,0:CALL,11:DO,0:WHILE,0:IF,8:functions,0:ELSE,0:FOR,0	191
0x4004740	            0x4157	                                push r15	      5876	option.c	FUNCTION_36
0x4004742	            0x4156	                                push r14	      5876	option.c	FUNCTION_36
0x4004744	            0x4155	                                push r13	      5876	option.c	FUNCTION_36
0x4004746	            0x4154	                                push r12	      5876	option.c	FUNCTION_36
0x4004748	          0x4189cd	                           mov r13d, ecx	      5876	option.c	FUNCTION_36
0x400474b	              0x55	                                push rbp	      5876	option.c	FUNCTION_36
0x400474c	              0x53	                                push rbx	      5876	option.c	FUNCTION_36
0x400474d	          0x4589c4	                           mov r12d, r8d	      5876	option.c	FUNCTION_36
0x4004750	        0x4883ec18	                           sub rsp, 0x18	      5876	option.c	FUNCTION_36
0x4004754	          0x83feff	             cmp esi, 0xffffffffffffffff	      5882	option.c	FUNCTION_36	IF_1
0x4004757	     0xf8463020000	                            je 0x40049c0	      5882	option.c	FUNCTION_36	IF_1
0x400475d	          0x4863de	                         movsxd rbx, esi	      5893	option.c	FUNCTION_36	IF_3
0x4004760	          0x4889dd	                            mov rbp, rbx	      5893	option.c	FUNCTION_36	IF_3
0x4004763	        0x48c1e506	                              shl rbp, 6	      5893	option.c	FUNCTION_36	IF_3
0x4004767	    0x4881c5000000	                              add rbp, 0	      5893	option.c	FUNCTION_36	IF_3
0x400476e	      0x48837d1800	               cmp qword [rbp + 0x18], 0	      5893	option.c	FUNCTION_36	IF_3
0x4004773	     0xf84b5000000	                            je 0x400482e	      5893	option.c	FUNCTION_36	IF_3
0x4004779	          0x4889d7	                            mov rdi, rdx	      5896	option.c	FUNCTION_36	CALL_6
0x400477c	      0xe800000000	                          call 0x4004781	      5896	option.c	FUNCTION_36	CALL_6
0x4004781	          0x4885c0	                           test rax, rax	      5897	option.c	FUNCTION_36	IF_4
0x4004784	          0x4989c6	                            mov r14, rax	      5896	option.c	FUNCTION_36	CALL_6
0x4004787	     0xf84a1000000	                            je 0x400482e	      5897	option.c	FUNCTION_36	IF_4
0x400478d	          0x4589ef	                          mov r15d, r13d	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x4004790	        0x4183e706	                             and r15d, 6	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x4004794	     0xf84a6000000	                            je 0x4004840	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x400479a	          0x4489ee	                           mov esi, r13d	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x400479d	          0x4889ef	                            mov rdi, rbp	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x40047a0	      0xe8dbd1ffff	                 call sym.get_varp_scope	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x40047a5	        0x41f6c501	                            test r13b, 1	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x40047a9	          0x4889c2	                            mov rdx, rax	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x40047ac	     0xf85ae010000	                           jne 0x4004960	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x40047b2	          0x4c8932	                    mov qword [rdx], r14	      5903	option.c	FUNCTION_36	IF_4
0x40047b5	          0x4889d8	                            mov rax, rbx	      5909	option.c	FUNCTION_36	IF_4
0x40047b8	            0x31ed	                            xor ebp, ebp	      5913	option.c	FUNCTION_36	IF_4	IF_7
0x40047ba	        0x48c1e006	                              shl rax, 6	      5909	option.c	FUNCTION_36	IF_4
0x40047be	    0x488388000000	                       or qword [rax], 8	      5909	option.c	FUNCTION_36	IF_4
0x40047c6	        0x4183fcfa	            cmp r12d, 0xfffffffffffffffa	      5919	option.c	FUNCTION_36	IF_4	IF_8
0x40047ca	            0x7462	                            je 0x400482e	      5919	option.c	FUNCTION_36	IF_4	IF_8
0x40047cc	          0x4889d8	                            mov rax, rbx	      8104	option.c	FUNCTION_48
0x40047cf	          0x4585e4	                         test r12d, r12d	      5920	option.c	FUNCTION_36	IF_4	IF_8	CALL_11
0x40047d2	    0x440f44250000	          cmove r12d, dword [0x040047da]	      5920	option.c	FUNCTION_36	IF_4	IF_8	CALL_11
0x40047da	        0x48c1e006	                              shl rax, 6	      8104	option.c	FUNCTION_48
0x40047de	    0x480500000000	                              add rax, 0	      8104	option.c	FUNCTION_48
0x40047e4	          0x4084ed	                           test bpl, bpl	      8108	option.c	FUNCTION_48	IF_1
0x40047e7	          0x8b5020	            mov edx, dword [rax + 0x20] 	      8104	option.c	FUNCTION_48
0x40047ea	     0xf8538010000	                           jne 0x4004928	      8108	option.c	FUNCTION_48	IF_1
0x40047f0	        0x41f6c502	                            test r13b, 2	      8108	option.c	FUNCTION_48	IF_1
0x40047f4	     0xf84ae010000	                            je 0x40049a8	      8108	option.c	FUNCTION_48	IF_1
0x40047fa	        0x48c1e306	                              shl rbx, 6	      8109	option.c	FUNCTION_48	IF_1
0x40047fe	    0x4489a3000000	                   mov dword [rbx], r12d	      8109	option.c	FUNCTION_48	IF_1
0x4004805	        0x4183e504	                             and r13d, 4	      8110	option.c	FUNCTION_48	IF_2
0x4004809	            0x7423	                            je 0x400482e	      8110	option.c	FUNCTION_48	IF_2
0x400480b	          0xf6c640	                           test dh, 0x40	      8112	option.c	FUNCTION_48	IF_2	IF_3
0x400480e	     0xf8521010000	                           jne 0x4004935	      8112	option.c	FUNCTION_48	IF_2	IF_3
0x4004814	          0xf6c620	                           test dh, 0x20	      8114	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x4004817	            0x7415	                            je 0x400482e	      8114	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x4004819	    0x488b05000000	            mov rax, qword [0x04004820] 	      8115	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x4004820	    0x81e2ff0f0000	                          and edx, 0xfff	      8115	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x4004826	    0x4489a490d002	   mov dword [rax + rdx*4 + 0x2d0], r12d	      8115	option.c	FUNCTION_48	IF_2	ELSE_1	IF_4
0x400482e	        0x4883c418	                           add rsp, 0x18	      5924	option.c	FUNCTION_36
0x4004832	              0x5b	                                 pop rbx	      5924	option.c	FUNCTION_36
0x4004833	              0x5d	                                 pop rbp	      5924	option.c	FUNCTION_36
0x4004834	            0x415c	                                 pop r12	      5924	option.c	FUNCTION_36
0x4004836	            0x415d	                                 pop r13	      5924	option.c	FUNCTION_36
0x4004838	            0x415e	                                 pop r14	      5924	option.c	FUNCTION_36
0x400483a	            0x415f	                                 pop r15	      5924	option.c	FUNCTION_36
0x400483c	              0xc3	                                     ret	      5924	option.c	FUNCTION_36
0x400483d	           0xf1f00	                         nop dword [rax]	      5924	option.c	FUNCTION_36
0x4004840	      0xbe04000000	                              mov esi, 4	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x4004845	          0x4889ef	                            mov rdi, rbp	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x4004848	      0xe833d1ffff	                 call sym.get_varp_scope	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x400484d	        0x41f6c501	                            test r13b, 1	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x4004851	          0x4889c2	                            mov rdx, rax	      5899	option.c	FUNCTION_36	IF_4	CALL_7
0x4004854	     0xf8516010000	                           jne 0x4004970	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x400485a	          0x4c8932	                    mov qword [rdx], r14	      5903	option.c	FUNCTION_36	IF_4
0x400485d	          0x4889d9	                            mov rcx, rbx	      5937	option.c	FUNCTION_37	IF_1
0x4004860	    0x488d82b80100	                  lea rax, [rdx + 0x1b8]	      5938	option.c	FUNCTION_37	CALL_1
0x4004867	        0x48c1e106	                              shl rcx, 6	      5937	option.c	FUNCTION_37	IF_1
0x400486b	    0x4c8bb9000000	                    mov r15, qword [rcx]	      5937	option.c	FUNCTION_37	IF_1
0x4004872	    0x4881c1000000	                              add rcx, 0	      5937	option.c	FUNCTION_37	IF_1
0x4004879	          0x8b6920	            mov ebp, dword [rcx + 0x20] 	      5941	option.c	FUNCTION_37	IF_2
0x400487c	        0x48890c24	                    mov qword [rsp], rcx	      5941	option.c	FUNCTION_37	IF_2
0x4004880	        0x4983ffff	             cmp r15, 0xffffffffffffffff	      5938	option.c	FUNCTION_37	CALL_1
0x4004884	        0x4c0f44f8	                          cmove r15, rax	      5938	option.c	FUNCTION_37	CALL_1
0x4004888	            0x85ed	                           test ebp, ebp	      5942	option.c	FUNCTION_37	IF_2
0x400488a	            0x7450	                            je 0x40048dc	      5942	option.c	FUNCTION_37	IF_2
0x400488c	          0x4939d7	                            cmp r15, rdx	      5942	option.c	FUNCTION_37	IF_2
0x400488f	            0x744b	                            je 0x40048dc	      5942	option.c	FUNCTION_37	IF_2
0x4004891	          0x4c89f7	                            mov rdi, r14	      5943	option.c	FUNCTION_37	IF_2	CALL_2
0x4004894	      0x4889542408	                mov qword [rsp + 8], rdx	      5943	option.c	FUNCTION_37	IF_2	CALL_2
0x4004899	      0xe800000000	                          call 0x400489e	      5943	option.c	FUNCTION_37	IF_2	CALL_2
0x400489e	          0x4885c0	                           test rax, rax	      5943	option.c	FUNCTION_37	IF_2	CALL_2
0x40048a1	          0x4889c5	                            mov rbp, rax	      5943	option.c	FUNCTION_37	IF_2	CALL_2
0x40048a4	      0x488b542408	                mov rdx, qword [rsp + 8]	      5943	option.c	FUNCTION_37	IF_2	CALL_2
0x40048a9	        0x488b0c24	                    mov rcx, qword [rsp]	      5943	option.c	FUNCTION_37	IF_2	CALL_2
0x40048ad	     0xf846f010000	                            je 0x4004a22	      5943	option.c	FUNCTION_37	IF_2	CALL_2
0x40048b3	          0x498b3f	                    mov rdi, qword [r15]	      5945	option.c	FUNCTION_37	IF_2	CALL_3
0x40048b6	    0x483b3d000000	            cmp rdi, qword [0x040048bd] 	      5756	option.c	FUNCTION_30	IF_1
0x40048bd	            0x740d	                            je 0x40048cc	      5756	option.c	FUNCTION_30	IF_1
0x40048bf	        0x48891424	                    mov qword [rsp], rdx	      5756	option.c	FUNCTION_30	IF_1
0x40048c3	      0xe800000000	                          call 0x40048c8	      5757	option.c	FUNCTION_30	CALL_1
0x40048c8	        0x488b1424	                    mov rdx, qword [rsp]	      5757	option.c	FUNCTION_30	CALL_1
0x40048cc	          0x4889d8	                            mov rax, rbx	      5757	option.c	FUNCTION_30	CALL_1
0x40048cf	          0x49892f	                    mov qword [r15], rbp	      5946	option.c	FUNCTION_37	IF_2
0x40048d2	        0x48c1e006	                              shl rax, 6	      5946	option.c	FUNCTION_37	IF_2
0x40048d6	    0x8ba800000000	                    mov ebp, dword [rax]	      5946	option.c	FUNCTION_37	IF_2
0x40048dc	          0x4889d8	                            mov rax, rbx	      5909	option.c	FUNCTION_36	IF_4
0x40048df	          0xc1ed0c	                            shr ebp, 0xc	      5913	option.c	FUNCTION_36	IF_4	IF_7
0x40048e2	        0x48c1e006	                              shl rax, 6	      5909	option.c	FUNCTION_36	IF_4
0x40048e6	    0x488388000000	                       or qword [rax], 8	      5909	option.c	FUNCTION_36	IF_4
0x40048ee	      0xb801000000	                              mov eax, 1	      5913	option.c	FUNCTION_36	IF_4	IF_7
0x40048f3	          0x4020c5	                             and bpl, al	      5913	option.c	FUNCTION_36	IF_4	IF_7
0x40048f6	     0xf842e010000	                            je 0x4004a2a	      5913	option.c	FUNCTION_36	IF_4	IF_7
0x40048fc	          0x488b3a	                    mov rdi, qword [rdx]	      5915	option.c	FUNCTION_36	IF_4	IF_7	CALL_10
0x40048ff	    0x48393d000000	            cmp qword [0x04004906], rdi 	      5756	option.c	FUNCTION_30	IF_1
0x4004906	            0x7414	                            je 0x400491c	      5756	option.c	FUNCTION_30	IF_1
0x4004908	        0x48891424	                    mov qword [rsp], rdx	      5756	option.c	FUNCTION_30	IF_1
0x400490c	      0xe800000000	                          call 0x4004911	      5757	option.c	FUNCTION_30	CALL_1
0x4004911	    0x488b3d000000	            mov rdi, qword [0x04004918] 	      5757	option.c	FUNCTION_30	CALL_1
0x4004918	        0x488b1424	                    mov rdx, qword [rsp]	      5757	option.c	FUNCTION_30	CALL_1
0x400491c	          0x48893a	                    mov qword [rdx], rdi	      5916	option.c	FUNCTION_36	IF_4	IF_7
0x400491f	      0xe9a2feffff	                           jmp 0x40047c6	      5916	option.c	FUNCTION_36	IF_4	IF_7
0x4004924	         0xf1f4000	                         nop dword [rax]	      5916	option.c	FUNCTION_36	IF_4	IF_7
0x4004928	          0xf6c640	                           test dh, 0x40	      8112	option.c	FUNCTION_48	IF_2	IF_3
0x400492b	        0x44896038	            mov dword [rax + 0x38], r12d	      8109	option.c	FUNCTION_48	IF_1
0x400492f	     0xf84dffeffff	                            je 0x4004814	      8112	option.c	FUNCTION_48	IF_2	IF_3
0x4004935	    0x488b05000000	            mov rax, qword [0x0400493c] 	      8113	option.c	FUNCTION_48	IF_2	IF_3
0x400493c	    0x81e2ff0f0000	                          and edx, 0xfff	      8113	option.c	FUNCTION_48	IF_2	IF_3
0x4004942	    0x4489a490ac12	 mov dword [rax + rdx*4 + 0x12ac], r12d 	      8113	option.c	FUNCTION_48	IF_2	IF_3
0x400494a	        0x4883c418	                           add rsp, 0x18	      5924	option.c	FUNCTION_36
0x400494e	              0x5b	                                 pop rbx	      5924	option.c	FUNCTION_36
0x400494f	              0x5d	                                 pop rbp	      5924	option.c	FUNCTION_36
0x4004950	            0x415c	                                 pop r12	      5924	option.c	FUNCTION_36
0x4004952	            0x415d	                                 pop r13	      5924	option.c	FUNCTION_36
0x4004954	            0x415e	                                 pop r14	      5924	option.c	FUNCTION_36
0x4004956	            0x415f	                                 pop r15	      5924	option.c	FUNCTION_36
0x4004958	              0xc3	                                     ret	      5924	option.c	FUNCTION_36
0x4004959	     0xf1f80000000	                         nop dword [rax]	      5924	option.c	FUNCTION_36
0x4004960	        0xf6451008	               test byte [rbp + 0x10], 8	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x4004964	     0xf8448feffff	                            je 0x40047b2	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x400496a	            0xeb0e	                           jmp 0x400497a	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x400496c	         0xf1f4000	                         nop dword [rax]	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x4004970	        0xf6451008	               test byte [rbp + 0x10], 8	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x4004974	     0xf84e0feffff	                            je 0x400485a	      5901	option.c	FUNCTION_36	IF_4	IF_5
0x400497a	          0x488b3a	                    mov rdi, qword [rdx]	      5902	option.c	FUNCTION_36	IF_4	CALL_8
0x400497d	    0x483b3d000000	            cmp rdi, qword [0x04004984] 	      5756	option.c	FUNCTION_30	IF_1
0x4004984	            0x740d	                            je 0x4004993	      5756	option.c	FUNCTION_30	IF_1
0x4004986	        0x48891424	                    mov qword [rsp], rdx	      5756	option.c	FUNCTION_30	IF_1
0x400498a	      0xe800000000	                          call 0x400498f	      5757	option.c	FUNCTION_30	CALL_1
0x400498f	        0x488b1424	                    mov rdx, qword [rsp]	      5757	option.c	FUNCTION_30	CALL_1
0x4004993	          0x4585ff	                         test r15d, r15d	      5906	option.c	FUNCTION_36	IF_4	IF_6
0x4004996	          0x4c8932	                    mov qword [rdx], r14	      5903	option.c	FUNCTION_36	IF_4
0x4004999	     0xf8516feffff	                           jne 0x40047b5	      5906	option.c	FUNCTION_36	IF_4	IF_6
0x400499f	      0xe9b9feffff	                           jmp 0x400485d	      5906	option.c	FUNCTION_36	IF_4	IF_6
0x40049a4	         0xf1f4000	                         nop dword [rax]	      5906	option.c	FUNCTION_36	IF_4	IF_6
0x40049a8	          0xf6c660	                           test dh, 0x60	      8108	option.c	FUNCTION_48	IF_1
0x40049ab	     0xf8449feffff	                            je 0x40047fa	      8108	option.c	FUNCTION_48	IF_1
0x40049b1	      0xe94ffeffff	                           jmp 0x4004805	      8108	option.c	FUNCTION_48	IF_1
0x40049b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      8108	option.c	FUNCTION_48	IF_1
0x40049c0	        0x48891424	                    mov qword [rsp], rdx	      8108	option.c	FUNCTION_48	IF_1
0x40049c4	          0x4889fb	                            mov rbx, rdi	      8108	option.c	FUNCTION_48	IF_1
0x40049c7	      0xe854b9ffff	                     call sym.findoption	      5884	option.c	FUNCTION_36	IF_1	CALL_1
0x40049cc	            0x85c0	                           test eax, eax	      5885	option.c	FUNCTION_36	IF_1	IF_2
0x40049ce	            0x89c6	                            mov esi, eax	      5884	option.c	FUNCTION_36	IF_1	CALL_1
0x40049d0	        0x488b1424	                    mov rdx, qword [rsp]	      5885	option.c	FUNCTION_36	IF_1	IF_2
0x40049d4	     0xf8983fdffff	                           jns 0x400475d	      5885	option.c	FUNCTION_36	IF_1	IF_2
0x40049da	      0xba05000000	                              mov edx, 5	      5887	option.c	FUNCTION_36	IF_1	IF_2	CALL_3
0x40049df	      0xbe00000000	                              mov esi, 0	      5887	option.c	FUNCTION_36	IF_1	IF_2	CALL_3
0x40049e4	            0x31ff	                            xor edi, edi	      5887	option.c	FUNCTION_36	IF_1	IF_2	CALL_3
0x40049e6	      0xe800000000	                          call 0x40049eb	      5887	option.c	FUNCTION_36	IF_1	IF_2	CALL_3
0x40049eb	      0xbe00000000	                              mov esi, 0	      5887	option.c	FUNCTION_36	IF_1	IF_2	CALL_3
0x40049f0	          0x4889c7	                            mov rdi, rax	      5887	option.c	FUNCTION_36	IF_1	IF_2	CALL_3
0x40049f3	      0xe800000000	                          call 0x40049f8	      5887	option.c	FUNCTION_36	IF_1	IF_2	CALL_3
0x40049f8	      0xbe00000000	                              mov esi, 0	      5888	option.c	FUNCTION_36	IF_1	IF_2	CALL_5
0x40049fd	            0x31ff	                            xor edi, edi	      5888	option.c	FUNCTION_36	IF_1	IF_2	CALL_5
0x40049ff	      0xba05000000	                              mov edx, 5	      5888	option.c	FUNCTION_36	IF_1	IF_2	CALL_5
0x4004a04	      0xe800000000	                          call 0x4004a09	      5888	option.c	FUNCTION_36	IF_1	IF_2	CALL_5
0x4004a09	        0x4883c418	                           add rsp, 0x18	      5924	option.c	FUNCTION_36
0x4004a0d	          0x4889de	                            mov rsi, rbx	      5888	option.c	FUNCTION_36	IF_1	IF_2	CALL_5
0x4004a10	          0x4889c7	                            mov rdi, rax	      5888	option.c	FUNCTION_36	IF_1	IF_2	CALL_5
0x4004a13	              0x5b	                                 pop rbx	      5924	option.c	FUNCTION_36
0x4004a14	              0x5d	                                 pop rbp	      5924	option.c	FUNCTION_36
0x4004a15	            0x415c	                                 pop r12	      5924	option.c	FUNCTION_36
0x4004a17	            0x415d	                                 pop r13	      5924	option.c	FUNCTION_36
0x4004a19	            0x415e	                                 pop r14	      5924	option.c	FUNCTION_36
0x4004a1b	            0x415f	                                 pop r15	      5924	option.c	FUNCTION_36
0x4004a1d	      0xe900000000	                           jmp 0x4004a22	      5888	option.c	FUNCTION_36	IF_1	IF_2	CALL_5
0x4004a22	          0x8b6920	            mov ebp, dword [rcx + 0x20] 	      5888	option.c	FUNCTION_36	IF_1	IF_2	CALL_5
0x4004a25	      0xe9b2feffff	                           jmp 0x40048dc	      5888	option.c	FUNCTION_36	IF_1	IF_2	CALL_5
0x4004a2a	            0x89c5	                            mov ebp, eax	      5913	option.c	FUNCTION_36	IF_4	IF_7
0x4004a2c	      0xe995fdffff	                           jmp 0x40047c6	      5913	option.c	FUNCTION_36	IF_4	IF_7
get_option_value	SWITCH,0:CALL,11:DO,0:WHILE,0:IF,12:functions,0:ELSE,4:FOR,0	144
0x4005740	            0x4155	                                push r13	      9412	option.c	FUNCTION_53
0x4005742	            0x4154	                                push r12	      9412	option.c	FUNCTION_53
0x4005744	          0x4189cd	                           mov r13d, ecx	      9412	option.c	FUNCTION_53
0x4005747	              0x55	                                push rbp	      9412	option.c	FUNCTION_53
0x4005748	              0x53	                                push rbx	      9412	option.c	FUNCTION_53
0x4005749	          0x4989f4	                            mov r12, rsi	      9412	option.c	FUNCTION_53
0x400574c	          0x4889fb	                            mov rbx, rdi	      9412	option.c	FUNCTION_53
0x400574f	          0x4889d5	                            mov rbp, rdx	      9412	option.c	FUNCTION_53
0x4005752	        0x4883ec28	                           sub rsp, 0x28	      9412	option.c	FUNCTION_53
0x4005756	    0x64488b042528	                mov rax, qword fs:[0x28]	      9412	option.c	FUNCTION_53
0x400575f	      0x4889442418	             mov qword [rsp + 0x18], rax	      9412	option.c	FUNCTION_53
0x4005764	            0x31c0	                            xor eax, eax	      9412	option.c	FUNCTION_53
0x4005766	      0xe8b5abffff	                     call sym.findoption	      9416	option.c	FUNCTION_53	CALL_1
0x400576b	            0x85c0	                           test eax, eax	      9417	option.c	FUNCTION_53	IF_1
0x400576d	     0xf88bd000000	                            js 0x4005830	      9417	option.c	FUNCTION_53	IF_1
0x4005773	            0x4898	                                    cdqe	      9448	option.c	FUNCTION_53	CALL_8
0x4005775	          0x4489ee	                           mov esi, r13d	      9448	option.c	FUNCTION_53	CALL_8
0x4005778	        0x48c1e006	                              shl rax, 6	      9448	option.c	FUNCTION_53	CALL_8
0x400577c	    0x488d98000000	                          lea rbx, [rax]	      9448	option.c	FUNCTION_53	CALL_8
0x4005783	          0x4889df	                            mov rdi, rbx	      9448	option.c	FUNCTION_53	CALL_8
0x4005786	      0xe8f5c1ffff	                 call sym.get_varp_scope	      9448	option.c	FUNCTION_53	CALL_8
0x400578b	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      9450	option.c	FUNCTION_53	IF_6
0x400578f	          0xf6c204	                              test dl, 4	      9450	option.c	FUNCTION_53	IF_6
0x4005792	            0x745c	                            je 0x40057f0	      9450	option.c	FUNCTION_53	IF_6
0x4005794	          0x4885c0	                           test rax, rax	      9452	option.c	FUNCTION_53	IF_6	IF_7
0x4005797	     0xf84cc010000	                            je 0x4005969	      9452	option.c	FUNCTION_53	IF_6	IF_7
0x400579d	          0x4885ed	                           test rbp, rbp	      9454	option.c	FUNCTION_53	IF_6	IF_8
0x40057a0	     0xf8457010000	                            je 0x40058fd	      9454	option.c	FUNCTION_53	IF_6	IF_8
0x40057a6	    0x488b0d000000	            mov rcx, qword [0x040057ad] 	      9458	option.c	FUNCTION_53	IF_6	IF_8	IF_9
0x40057ad	          0x488b38	                    mov rdi, qword [rax]	      9459	option.c	FUNCTION_53	IF_6	IF_8	IF_9
0x40057b0	    0x488d91101500	                 lea rdx, [rcx + 0x1510]	      9458	option.c	FUNCTION_53	IF_6	IF_8	IF_9
0x40057b7	          0x4839d0	                            cmp rax, rdx	      9458	option.c	FUNCTION_53	IF_6	IF_8	IF_9
0x40057ba	     0xf8460010000	                            je 0x4005920	      9458	option.c	FUNCTION_53	IF_6	IF_8	IF_9
0x40057c0	      0xe800000000	                          call 0x40057c5	      9463	option.c	FUNCTION_53	IF_6	IF_8	CALL_10
0x40057c5	        0x48894500	                    mov qword [rbp], rax	      9463	option.c	FUNCTION_53	IF_6	IF_8	CALL_10
0x40057c9	            0x31c0	                            xor eax, eax	      9465	option.c	FUNCTION_53	IF_6
0x40057cb	       0xf1f440000	                   nop dword [rax + rax]	      9465	option.c	FUNCTION_53	IF_6
0x40057d0	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      9482	option.c	FUNCTION_53
0x40057d5	    0x644833342528	                xor rsi, qword fs:[0x28]	      9482	option.c	FUNCTION_53
0x40057de	     0xf858f010000	                           jne 0x4005973	      9482	option.c	FUNCTION_53
0x40057e4	        0x4883c428	                           add rsp, 0x28	      9482	option.c	FUNCTION_53
0x40057e8	              0x5b	                                 pop rbx	      9482	option.c	FUNCTION_53
0x40057e9	              0x5d	                                 pop rbp	      9482	option.c	FUNCTION_53
0x40057ea	            0x415c	                                 pop r12	      9482	option.c	FUNCTION_53
0x40057ec	            0x415d	                                 pop r13	      9482	option.c	FUNCTION_53
0x40057ee	              0xc3	                                     ret	      9482	option.c	FUNCTION_53
0x40057ef	              0x90	                                     nop	      9482	option.c	FUNCTION_53
0x40057f0	          0x4885c0	                           test rax, rax	      9468	option.c	FUNCTION_53	IF_10
0x40057f3	     0xf8466010000	                            je 0x400595f	      9468	option.c	FUNCTION_53	IF_10
0x40057f9	          0x83e202	                              and edx, 2	      9470	option.c	FUNCTION_53	IF_11
0x40057fc	     0xf8506010000	                           jne 0x4005908	      9470	option.c	FUNCTION_53	IF_11
0x4005802	    0x488b0d000000	            mov rcx, qword [0x04005809] 	      9476	option.c	FUNCTION_53	ELSE_3	IF_12
0x4005809	    0x488d91c80000	                   lea rdx, [rcx + 0xc8]	      9476	option.c	FUNCTION_53	ELSE_3	IF_12
0x4005810	          0x4839d0	                            cmp rax, rdx	      9476	option.c	FUNCTION_53	ELSE_3	IF_12
0x4005813	     0xf8431010000	                            je 0x400594a	      9476	option.c	FUNCTION_53	ELSE_3	IF_12
0x4005819	          0x486300	                 movsxd rax, dword [rax]	      9479	option.c	FUNCTION_53	ELSE_3	ELSE_4
0x400581c	        0x49890424	                    mov qword [r12], rax	      9479	option.c	FUNCTION_53	ELSE_3	ELSE_4
0x4005820	      0xb801000000	                              mov eax, 1	      9481	option.c	FUNCTION_53
0x4005825	            0xeba9	                           jmp 0x40057d0	      9481	option.c	FUNCTION_53
0x4005827	    0x660f1f840000	                    nop word [rax + rax]	      9481	option.c	FUNCTION_53
0x4005830	          0x4889df	                            mov rdi, rbx	      9421	option.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x4005833	      0xe800000000	                          call 0x4005838	      9421	option.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x4005838	        0x4883f804	                              cmp rax, 4	      9421	option.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x400583c	     0xf85fe000000	                           jne 0x4005940	      9421	option.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x4005842	          0x803b74	                    cmp byte [rbx], 0x74	      9421	option.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x4005845	     0xf85f5000000	                           jne 0x4005940	      9421	option.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x400584b	        0x807b015f	                cmp byte [rbx + 1], 0x5f	      9421	option.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x400584f	     0xf85eb000000	                           jne 0x4005940	      9421	option.c	FUNCTION_53	IF_1	IF_2	CALL_2
0x4005855	         0xfb64302	               movzx eax, byte [rbx + 2]	      9840	option.c	FUNCTION_60	IF_1
0x4005859	      0x48895c2408	                mov qword [rsp + 8], rbx	      9840	option.c	FUNCTION_60	IF_1
0x400585e	            0x84c0	                             test al, al	      9840	option.c	FUNCTION_60	IF_1
0x4005860	            0x7426	                            je 0x4005888	      9840	option.c	FUNCTION_60	IF_1
0x4005862	         0xfb65303	               movzx edx, byte [rbx + 3]	      9840	option.c	FUNCTION_60	IF_1
0x4005866	            0x84d2	                             test dl, dl	      9840	option.c	FUNCTION_60	IF_1
0x4005868	            0x741e	                            je 0x4005888	      9840	option.c	FUNCTION_60	IF_1
0x400586a	          0xc1e208	                              shl edx, 8	      9841	option.c	FUNCTION_60	CALL_1
0x400586d	             0x1c2	                            add edx, eax	      9841	option.c	FUNCTION_60	CALL_1
0x400586f	            0xf7da	                                 neg edx	      9841	option.c	FUNCTION_60	CALL_1
0x4005871	     0xf1f80000000	                         nop dword [rax]	      9841	option.c	FUNCTION_60	CALL_1
0x4005878	            0x89d0	                            mov eax, edx	      9430	option.c	FUNCTION_53	IF_1	IF_2	IF_3	CALL_5
0x400587a	            0x89d1	                            mov ecx, edx	      9429	option.c	FUNCTION_53	IF_1	IF_2	IF_3	CALL_4
0x400587c	            0xf7d8	                                 neg eax	      9430	option.c	FUNCTION_53	IF_1	IF_2	IF_3	CALL_5
0x400587e	            0xf7d9	                                 neg ecx	      9429	option.c	FUNCTION_53	IF_1	IF_2	IF_3	CALL_4
0x4005880	          0xc1e808	                              shr eax, 8	      9430	option.c	FUNCTION_53	IF_1	IF_2	IF_3	CALL_5
0x4005883	            0xeb50	                           jmp 0x40058d5	      9430	option.c	FUNCTION_53	IF_1	IF_2	IF_3	CALL_5
0x4005885	           0xf1f00	                         nop dword [rax]	      9430	option.c	FUNCTION_53	IF_1	IF_2	IF_3	CALL_5
0x4005888	      0x488d742404	                      lea rsi, [rsp + 4]	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x400588d	      0x488d7c2408	                      lea rdi, [rsp + 8]	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x4005892	        0x4883eb01	                              sub rbx, 1	      9844	option.c	FUNCTION_60	ELSE_1
0x4005896	          0x4531c0	                            xor r8d, r8d	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x4005899	      0xb901000000	                              mov ecx, 1	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x400589e	      0xba01000000	                              mov edx, 1	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x40058a3	      0x48895c2408	                mov qword [rsp + 8], rbx	      9844	option.c	FUNCTION_60	ELSE_1
0x40058a8	    0xc74424040000	                  mov dword [rsp + 4], 0	      9845	option.c	FUNCTION_60	ELSE_1
0x40058b0	      0xe800000000	                          call 0x40058b5	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x40058b5	        0x8b4c2404	                mov ecx, dword [rsp + 4]	      9847	option.c	FUNCTION_60	ELSE_1	IF_2
0x40058b9	            0x89c2	                            mov edx, eax	      9846	option.c	FUNCTION_60	ELSE_1	CALL_2
0x40058bb	      0xb8fdffffff	                     mov eax, 0xfffffffd	      9445	option.c	FUNCTION_53	IF_1
0x40058c0	            0x85c9	                           test ecx, ecx	      9847	option.c	FUNCTION_60	ELSE_1	IF_2
0x40058c2	     0xf8508ffffff	                           jne 0x40057d0	      9847	option.c	FUNCTION_60	ELSE_1	IF_2
0x40058c8	            0x85d2	                           test edx, edx	      9422	option.c	FUNCTION_53	IF_1	IF_2	CALL_3
0x40058ca	            0x7474	                            je 0x4005940	      9422	option.c	FUNCTION_53	IF_1	IF_2	CALL_3
0x40058cc	            0x89d0	                            mov eax, edx	      9435	option.c	FUNCTION_53	IF_1	IF_2	ELSE_1
0x40058ce	      0xb9f2ffffff	                     mov ecx, 0xfffffff2	      9434	option.c	FUNCTION_53	IF_1	IF_2	ELSE_1
0x40058d3	            0x78a3	                            js 0x4005878	      9427	option.c	FUNCTION_53	IF_1	IF_2	IF_3
0x40058d5	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      9437	option.c	FUNCTION_53	IF_1	IF_2	CALL_6
0x40058da	        0x88442411	               mov byte [rsp + 0x11], al	      9437	option.c	FUNCTION_53	IF_1	IF_2	CALL_6
0x40058de	        0x884c2410	               mov byte [rsp + 0x10], cl	      9437	option.c	FUNCTION_53	IF_1	IF_2	CALL_6
0x40058e2	      0xe800000000	                          call 0x40058e7	      9437	option.c	FUNCTION_53	IF_1	IF_2	CALL_6
0x40058e7	          0x4885c0	                           test rax, rax	      9438	option.c	FUNCTION_53	IF_1	IF_2	IF_4
0x40058ea	            0x7454	                            je 0x4005940	      9438	option.c	FUNCTION_53	IF_1	IF_2	IF_4
0x40058ec	          0x4885ed	                           test rbp, rbp	      9440	option.c	FUNCTION_53	IF_1	IF_2	IF_4	IF_5
0x40058ef	            0x740c	                            je 0x40058fd	      9440	option.c	FUNCTION_53	IF_1	IF_2	IF_4	IF_5
0x40058f1	          0x4889c7	                            mov rdi, rax	      9441	option.c	FUNCTION_53	IF_1	IF_2	IF_4	CALL_7
0x40058f4	      0xe800000000	                          call 0x40058f9	      9441	option.c	FUNCTION_53	IF_1	IF_2	IF_4	CALL_7
0x40058f9	        0x48894500	                    mov qword [rbp], rax	      9441	option.c	FUNCTION_53	IF_1	IF_2	IF_4	CALL_7
0x40058fd	            0x31c0	                            xor eax, eax	      9465	option.c	FUNCTION_53	IF_6
0x40058ff	      0xe9ccfeffff	                           jmp 0x40057d0	      9465	option.c	FUNCTION_53	IF_6
0x4005904	         0xf1f4000	                         nop dword [rax]	      9465	option.c	FUNCTION_53	IF_6
0x4005908	          0x488b00	                    mov rax, qword [rax]	      9471	option.c	FUNCTION_53	IF_11
0x400590b	        0x49890424	                    mov qword [r12], rax	      9471	option.c	FUNCTION_53	IF_11
0x400590f	      0xb801000000	                              mov eax, 1	      9481	option.c	FUNCTION_53
0x4005914	      0xe9b7feffff	                           jmp 0x40057d0	      9481	option.c	FUNCTION_53
0x4005919	     0xf1f80000000	                         nop dword [rax]	      9481	option.c	FUNCTION_53
0x4005920	          0x803f00	                       cmp byte [rdi], 0	      9459	option.c	FUNCTION_53	IF_6	IF_8	IF_9
0x4005923	     0xf8497feffff	                            je 0x40057c0	      9459	option.c	FUNCTION_53	IF_6	IF_8	IF_9
0x4005929	      0xbf00000000	                              mov edi, 0	      9460	option.c	FUNCTION_53	IF_6	IF_8	CALL_9
0x400592e	      0xe800000000	                          call 0x4005933	      9460	option.c	FUNCTION_53	IF_6	IF_8	CALL_9
0x4005933	        0x48894500	                    mov qword [rbp], rax	      9460	option.c	FUNCTION_53	IF_6	IF_8	CALL_9
0x4005937	            0x31c0	                            xor eax, eax	      9465	option.c	FUNCTION_53	IF_6
0x4005939	      0xe992feffff	                           jmp 0x40057d0	      9460	option.c	FUNCTION_53	IF_6	IF_8	CALL_9
0x400593e	            0x6690	                                     nop	      9460	option.c	FUNCTION_53	IF_6	IF_8	CALL_9
0x4005940	      0xb8fdffffff	                     mov eax, 0xfffffffd	      9445	option.c	FUNCTION_53	IF_1
0x4005945	      0xe986feffff	                           jmp 0x40057d0	      9445	option.c	FUNCTION_53	IF_1
0x400594a	      0xe800000000	                          call 0x400594f	      9477	option.c	FUNCTION_53	ELSE_3	CALL_11
0x400594f	            0x4898	                                    cdqe	      9477	option.c	FUNCTION_53	ELSE_3	CALL_11
0x4005951	        0x49890424	                    mov qword [r12], rax	      9477	option.c	FUNCTION_53	ELSE_3	CALL_11
0x4005955	      0xb801000000	                              mov eax, 1	      9481	option.c	FUNCTION_53
0x400595a	      0xe971feffff	                           jmp 0x40057d0	      9481	option.c	FUNCTION_53
0x400595f	      0xb8ffffffff	                     mov eax, 0xffffffff	      9469	option.c	FUNCTION_53	IF_10
0x4005964	      0xe967feffff	                           jmp 0x40057d0	      9469	option.c	FUNCTION_53	IF_10
0x4005969	      0xb8feffffff	                     mov eax, 0xfffffffe	      9453	option.c	FUNCTION_53	IF_6	IF_7
0x400596e	      0xe95dfeffff	                           jmp 0x40057d0	      9453	option.c	FUNCTION_53	IF_6	IF_7
0x4005973	      0xe800000000	                          call 0x4005978	      9482	option.c	FUNCTION_53
free_one_termoption	SWITCH,0:CALL,1:DO,0:WHILE,0:IF,2:functions,0:ELSE,0:FOR,1	35
0x4006460	    0x48833d000000	               cmp qword [0x04006468], 0	     10330	option.c	FUNCTION_71	FOR_1
0x4006468	            0x742a	                            je 0x4006494	     10330	option.c	FUNCTION_71	FOR_1
0x400646a	    0x488b05000000	            mov rax, qword [0x04006471] 	     10331	option.c	FUNCTION_71	FOR_1	IF_1
0x4006471	              0x53	                                push rbx	     10327	option.c	FUNCTION_71
0x4006472	      0xbb00000000	                              mov ebx, 0	     10330	option.c	FUNCTION_71	FOR_1
0x4006477	          0x4839c7	                            cmp rdi, rax	     10331	option.c	FUNCTION_71	FOR_1	IF_1
0x400647a	            0x750d	                           jne 0x4006489	     10331	option.c	FUNCTION_71	FOR_1	IF_1
0x400647c	            0xeb22	                           jmp 0x40064a0	     10331	option.c	FUNCTION_71	FOR_1	IF_1
0x400647e	            0x6690	                                     nop	     10331	option.c	FUNCTION_71	FOR_1	IF_1
0x4006480	        0x488b4318	            mov rax, qword [rbx + 0x18] 	     10331	option.c	FUNCTION_71	FOR_1	IF_1
0x4006484	          0x4839f8	                            cmp rax, rdi	     10331	option.c	FUNCTION_71	FOR_1	IF_1
0x4006487	            0x7417	                            je 0x40064a0	     10331	option.c	FUNCTION_71	FOR_1	IF_1
0x4006489	        0x4883c340	                           add rbx, 0x40	     10330	option.c	FUNCTION_71	FOR_1
0x400648d	        0x48833b00	                      cmp qword [rbx], 0	     10330	option.c	FUNCTION_71	FOR_1
0x4006491	            0x75ed	                           jne 0x4006480	     10330	option.c	FUNCTION_71	FOR_1
0x4006493	              0x5b	                                 pop rbx	     10339	option.c	FUNCTION_71
0x4006494	            0xf3c3	                                     ret	     10339	option.c	FUNCTION_71
0x4006496	    0x662e0f1f8400	                 nop word cs:[rax + rax]	     10339	option.c	FUNCTION_71
0x40064a0	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	     10333	option.c	FUNCTION_71	FOR_1	IF_1	IF_2
0x40064a4	    0x488b0d000000	            mov rcx, qword [0x040064ab] 	     10333	option.c	FUNCTION_71	FOR_1	IF_1	IF_2
0x40064ab	          0xf6c208	                              test dl, 8	     10333	option.c	FUNCTION_71	FOR_1	IF_1	IF_2
0x40064ae	            0x7423	                            je 0x40064d3	     10333	option.c	FUNCTION_71	FOR_1	IF_1	IF_2
0x40064b0	          0x488b3f	                    mov rdi, qword [rdi]	     10334	option.c	FUNCTION_71	FOR_1	IF_1	CALL_1
0x40064b3	    0x488b0d000000	            mov rcx, qword [0x040064ba] 	      5756	option.c	FUNCTION_30	IF_1
0x40064ba	          0x4839cf	                            cmp rdi, rcx	      5756	option.c	FUNCTION_30	IF_1
0x40064bd	            0x7414	                            je 0x40064d3	      5756	option.c	FUNCTION_30	IF_1
0x40064bf	      0xe800000000	                          call 0x40064c4	      5757	option.c	FUNCTION_30	CALL_1
0x40064c4	    0x488b0d000000	            mov rcx, qword [0x040064cb] 	      5757	option.c	FUNCTION_30	CALL_1
0x40064cb	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      5757	option.c	FUNCTION_30	CALL_1
0x40064cf	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      5757	option.c	FUNCTION_30	CALL_1
0x40064d3	        0x4883e2f7	             and rdx, 0xfffffffffffffff7	     10336	option.c	FUNCTION_71	FOR_1	IF_1
0x40064d7	          0x488908	                    mov qword [rax], rcx	     10335	option.c	FUNCTION_71	FOR_1	IF_1
0x40064da	        0x48895310	             mov qword [rbx + 0x10], rdx	     10336	option.c	FUNCTION_71	FOR_1	IF_1
0x40064de	              0x5b	                                 pop rbx	     10339	option.c	FUNCTION_71
0x40064df	            0xebb3	                           jmp 0x4006494	     10339	option.c	FUNCTION_71
check_opt_wim	SWITCH,0:CALL,4:DO,0:WHILE,1:IF,7:functions,0:ELSE,3:FOR,4	112
0x40004c0	              0x53	                                push rbx	     12388	option.c	FUNCTION_108
0x40004c1	        0x4883ec10	                           sub rsp, 0x10	     12388	option.c	FUNCTION_108
0x40004c5	    0x4c8b15000000	            mov r10, qword [0x040004cc] 	     12397	option.c	FUNCTION_108	FOR_2
0x40004cc	    0x64488b042528	                mov rax, qword fs:[0x28]	     12388	option.c	FUNCTION_108
0x40004d5	      0x4889442408	                mov qword [rsp + 8], rax	     12388	option.c	FUNCTION_108
0x40004da	            0x31c0	                            xor eax, eax	     12388	option.c	FUNCTION_108
0x40004dc	        0xc6042400	                       mov byte [rsp], 0	     12395	option.c	FUNCTION_108	FOR_1
0x40004e0	      0xc644240100	                   mov byte [rsp + 1], 0	     12395	option.c	FUNCTION_108	FOR_1
0x40004e5	        0x450fb602	                   movzx r8d, byte [r10]	     12397	option.c	FUNCTION_108	FOR_2
0x40004e9	      0xc644240200	                   mov byte [rsp + 2], 0	     12395	option.c	FUNCTION_108	FOR_1
0x40004ee	      0xc644240300	                   mov byte [rsp + 3], 0	     12395	option.c	FUNCTION_108	FOR_1
0x40004f3	          0x4584c0	                           test r8b, r8b	     12397	option.c	FUNCTION_108	FOR_2
0x40004f6	     0xf846f010000	                            je 0x400066b	     12397	option.c	FUNCTION_108	FOR_2
0x40004fc	          0x4531db	                          xor r11d, r11d	     12397	option.c	FUNCTION_108	FOR_2
0x40004ff	    0x48bb01000000	          movabs rbx, 0x400100000000001 	     12401	option.c	FUNCTION_108	FOR_2	IF_1
0x4000509	     0xf1f80000000	                         nop dword [rax]	     12401	option.c	FUNCTION_108	FOR_2	IF_1
0x4000510	          0x4489c2	                            mov edx, r8d	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x4000513	            0x31c9	                            xor ecx, ecx	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x4000515	        0x498d4201	                      lea rax, [r10 + 1]	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x4000519	          0x83e2df	                     and edx, 0xffffffdf	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x400051c	          0x4d89d1	                             mov r9, r10	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x400051f	          0x83ea41	                           sub edx, 0x41	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x4000522	          0x80fa19	                            cmp dl, 0x19	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x4000525	            0x7725	                            ja 0x400054c	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x4000527	    0x660f1f840000	                    nop word [rax + rax]	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x4000530	        0x440fb600	                   movzx r8d, byte [rax]	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x4000534	          0x83c101	                              add ecx, 1	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x4000537	          0x4989c1	                             mov r9, rax	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x400053a	        0x4883c001	                              add rax, 1	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x400053e	          0x4489c2	                            mov edx, r8d	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x4000541	          0x83e2df	                     and edx, 0xffffffdf	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x4000544	          0x83ea41	                           sub edx, 0x41	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x4000547	          0x80fa19	                            cmp dl, 0x19	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x400054a	            0x76e4	                           jbe 0x4000530	     12399	option.c	FUNCTION_108	FOR_2	FOR_3	CALL_1
0x400054c	        0x4180f83a	                           cmp r8b, 0x3a	     12401	option.c	FUNCTION_108	FOR_2	IF_1
0x4000550	            0x7714	                            ja 0x4000566	     12401	option.c	FUNCTION_108	FOR_2	IF_1
0x4000552	        0x4c0fa3c3	                              bt rbx, r8	     12401	option.c	FUNCTION_108	FOR_2	IF_1
0x4000556	            0x730e	                           jae 0x4000566	     12401	option.c	FUNCTION_108	FOR_2	IF_1
0x4000558	          0x83f907	                              cmp ecx, 7	     12403	option.c	FUNCTION_108	FOR_2	IF_2	CALL_2
0x400055b	     0xf84cf000000	                            je 0x4000630	     12403	option.c	FUNCTION_108	FOR_2	IF_2	CALL_2
0x4000561	          0x83f904	                              cmp ecx, 4	     12405	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3	CALL_3
0x4000564	            0x7422	                            je 0x4000588	     12405	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3	CALL_3
0x4000566	            0x31c0	                            xor eax, eax	     12402	option.c	FUNCTION_108	FOR_2	IF_1
0x4000568	      0x488b5c2408	                mov rbx, qword [rsp + 8]	     12433	option.c	FUNCTION_108
0x400056d	    0x6448331c2528	                xor rbx, qword fs:[0x28]	     12433	option.c	FUNCTION_108
0x4000576	     0xf8500010000	                           jne 0x400067c	     12433	option.c	FUNCTION_108
0x400057c	        0x4883c410	                           add rsp, 0x10	     12433	option.c	FUNCTION_108
0x4000580	              0x5b	                                 pop rbx	     12433	option.c	FUNCTION_108
0x4000581	              0xc3	                                     ret	     12433	option.c	FUNCTION_108
0x4000582	    0x660f1f440000	                    nop word [rax + rax]	     12433	option.c	FUNCTION_108
0x4000588	      0xbf00000000	                              mov edi, 0	     12405	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3	CALL_3
0x400058d	      0xb904000000	                              mov ecx, 4	     12405	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3	CALL_3
0x4000592	          0x4c89d6	                            mov rsi, r10	     12405	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3	CALL_3
0x4000595	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     12405	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3	CALL_3
0x4000597	            0x756f	                           jne 0x4000608	     12405	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3	CALL_3
0x4000599	          0x4963c3	                        movsxd rax, r11d	     12406	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3
0x400059c	        0x800c0401	                  or byte [rsp + rax], 1	     12406	option.c	FUNCTION_108	FOR_2	ELSE_1	IF_3
0x40005a0	          0x4584c0	                           test r8b, r8b	     12412	option.c	FUNCTION_108	FOR_2	IF_5
0x40005a3	            0x741c	                            je 0x40005c1	     12412	option.c	FUNCTION_108	FOR_2	IF_5
0x40005a5	        0x4180f82c	                           cmp r8b, 0x2c	     12414	option.c	FUNCTION_108	FOR_2	IF_6
0x40005a9	     0xf84a9000000	                            je 0x4000658	     12414	option.c	FUNCTION_108	FOR_2	IF_6
0x40005af	      0x450fb64101	                movzx r8d, byte [r9 + 1]	     12397	option.c	FUNCTION_108	FOR_2
0x40005b4	        0x4d8d5101	                       lea r10, [r9 + 1]	     12397	option.c	FUNCTION_108	FOR_2
0x40005b8	          0x4584c0	                           test r8b, r8b	     12397	option.c	FUNCTION_108	FOR_2
0x40005bb	     0xf854fffffff	                           jne 0x4000510	     12397	option.c	FUNCTION_108	FOR_2
0x40005c1	        0x4183fb02	                             cmp r11d, 2	     12423	option.c	FUNCTION_108	WHILE_1
0x40005c5	            0x7f2a	                            jg 0x40005f1	     12423	option.c	FUNCTION_108	WHILE_1
0x40005c7	          0x4963c3	                        movsxd rax, r11d	     12423	option.c	FUNCTION_108	WHILE_1
0x40005ca	        0x418d5301	                      lea edx, [r11 + 1]	     12425	option.c	FUNCTION_108	WHILE_1
0x40005ce	         0xfb60404	             movzx eax, byte [rsp + rax]	     12425	option.c	FUNCTION_108	WHILE_1
0x40005d2	          0x4863ca	                         movsxd rcx, edx	     12425	option.c	FUNCTION_108	WHILE_1
0x40005d5	          0x83fa03	                              cmp edx, 3	     12423	option.c	FUNCTION_108	WHILE_1
0x40005d8	          0x88040c	                mov byte [rsp + rcx], al	     12425	option.c	FUNCTION_108	WHILE_1
0x40005db	            0x7414	                            je 0x40005f1	     12423	option.c	FUNCTION_108	WHILE_1
0x40005dd	        0x4183c302	                             add r11d, 2	     12425	option.c	FUNCTION_108	WHILE_1
0x40005e1	          0x4963d3	                        movsxd rdx, r11d	     12425	option.c	FUNCTION_108	WHILE_1
0x40005e4	        0x4183fb02	                             cmp r11d, 2	     12423	option.c	FUNCTION_108	WHILE_1
0x40005e8	          0x880414	                mov byte [rsp + rdx], al	     12425	option.c	FUNCTION_108	WHILE_1
0x40005eb	            0x7504	                           jne 0x40005f1	     12423	option.c	FUNCTION_108	WHILE_1
0x40005ed	        0x88442403	                  mov byte [rsp + 3], al	     12425	option.c	FUNCTION_108	WHILE_1
0x40005f1	          0x8b0424	                    mov eax, dword [rsp]	     12425	option.c	FUNCTION_108	WHILE_1
0x40005f4	    0x890500000000	            mov dword [0x040005fa], eax 	     12425	option.c	FUNCTION_108	WHILE_1
0x40005fa	      0xb801000000	                              mov eax, 1	     12432	option.c	FUNCTION_108
0x40005ff	      0xe964ffffff	                           jmp 0x4000568	     12432	option.c	FUNCTION_108
0x4000604	         0xf1f4000	                         nop dword [rax]	     12432	option.c	FUNCTION_108
0x4000608	      0xbf00000000	                              mov edi, 0	     12407	option.c	FUNCTION_108	FOR_2	ELSE_2	IF_4	CALL_4
0x400060d	      0xb904000000	                              mov ecx, 4	     12407	option.c	FUNCTION_108	FOR_2	ELSE_2	IF_4	CALL_4
0x4000612	          0x4c89d6	                            mov rsi, r10	     12407	option.c	FUNCTION_108	FOR_2	ELSE_2	IF_4	CALL_4
0x4000615	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     12407	option.c	FUNCTION_108	FOR_2	ELSE_2	IF_4	CALL_4
0x4000617	     0xf8549ffffff	                           jne 0x4000566	     12407	option.c	FUNCTION_108	FOR_2	ELSE_2	IF_4	CALL_4
0x400061d	          0x4963c3	                        movsxd rax, r11d	     12408	option.c	FUNCTION_108	FOR_2	ELSE_2	IF_4
0x4000620	        0x800c0404	                  or byte [rsp + rax], 4	     12408	option.c	FUNCTION_108	FOR_2	ELSE_2	IF_4
0x4000624	      0xe977ffffff	                           jmp 0x40005a0	     12408	option.c	FUNCTION_108	FOR_2	ELSE_2	IF_4
0x4000629	     0xf1f80000000	                         nop dword [rax]	     12408	option.c	FUNCTION_108	FOR_2	ELSE_2	IF_4
0x4000630	      0xbf00000000	                              mov edi, 0	     12403	option.c	FUNCTION_108	FOR_2	IF_2	CALL_2
0x4000635	      0xb907000000	                              mov ecx, 7	     12403	option.c	FUNCTION_108	FOR_2	IF_2	CALL_2
0x400063a	          0x4c89d6	                            mov rsi, r10	     12403	option.c	FUNCTION_108	FOR_2	IF_2	CALL_2
0x400063d	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     12403	option.c	FUNCTION_108	FOR_2	IF_2	CALL_2
0x400063f	     0xf8521ffffff	                           jne 0x4000566	     12403	option.c	FUNCTION_108	FOR_2	IF_2	CALL_2
0x4000645	          0x4963c3	                        movsxd rax, r11d	     12404	option.c	FUNCTION_108	FOR_2	IF_2
0x4000648	        0x800c0402	                  or byte [rsp + rax], 2	     12404	option.c	FUNCTION_108	FOR_2	IF_2
0x400064c	      0xe94fffffff	                           jmp 0x40005a0	     12404	option.c	FUNCTION_108	FOR_2	IF_2
0x4000651	     0xf1f80000000	                         nop dword [rax]	     12404	option.c	FUNCTION_108	FOR_2	IF_2
0x4000658	        0x4183fb03	                             cmp r11d, 3	     12416	option.c	FUNCTION_108	FOR_2	IF_6	IF_7
0x400065c	     0xf8404ffffff	                            je 0x4000566	     12416	option.c	FUNCTION_108	FOR_2	IF_6	IF_7
0x4000662	        0x4183c301	                             add r11d, 1	     12418	option.c	FUNCTION_108	FOR_2	IF_6
0x4000666	      0xe944ffffff	                           jmp 0x40005af	     12418	option.c	FUNCTION_108	FOR_2	IF_6
0x400066b	            0x31c0	                            xor eax, eax	     12418	option.c	FUNCTION_108	FOR_2	IF_6
0x400066d	      0xc644240100	                   mov byte [rsp + 1], 0	     12425	option.c	FUNCTION_108	WHILE_1
0x4000672	      0xc644240200	                   mov byte [rsp + 2], 0	     12425	option.c	FUNCTION_108	WHILE_1
0x4000677	      0xe971ffffff	                           jmp 0x40005ed	     12425	option.c	FUNCTION_108	WHILE_1
0x400067c	      0xe800000000	                          call 0x4000681	     12433	option.c	FUNCTION_108
set_context_in_set_cmd	SWITCH,0:CALL,11:DO,0:WHILE,5:IF,27:functions,0:ELSE,6:FOR,1	321
0x400c670	            0x4157	                                push r15	     11339	option.c	FUNCTION_88
0x400c672	            0x4156	                                push r14	     11339	option.c	FUNCTION_88
0x400c674	            0x4155	                                push r13	     11339	option.c	FUNCTION_88
0x400c676	            0x4154	                                push r12	     11339	option.c	FUNCTION_88
0x400c678	          0x4989fd	                            mov r13, rdi	     11339	option.c	FUNCTION_88
0x400c67b	              0x55	                                push rbp	     11339	option.c	FUNCTION_88
0x400c67c	              0x53	                                push rbx	     11339	option.c	FUNCTION_88
0x400c67d	          0x4889f3	                            mov rbx, rsi	     11339	option.c	FUNCTION_88
0x400c680	        0x4883ec08	                              sub rsp, 8	     11339	option.c	FUNCTION_88
0x400c684	    0xc70704000000	                      mov dword [rdi], 4	     11350	option.c	FUNCTION_88
0x400c68a	          0x803e00	                       cmp byte [rsi], 0	     11351	option.c	FUNCTION_88	IF_1
0x400c68d	    0x891500000000	            mov dword [0x0400c693], edx 	     11348	option.c	FUNCTION_88
0x400c693	     0xf844a010000	                            je 0x400c7e3	     11351	option.c	FUNCTION_88	IF_1
0x400c699	          0x4889f7	                            mov rdi, rsi	     11356	option.c	FUNCTION_88	CALL_1
0x400c69c	      0xe800000000	                          call 0x400c6a1	     11356	option.c	FUNCTION_88	CALL_1
0x400c6a1	      0x488d5403ff	                lea rdx, [rbx + rax - 1]	     11356	option.c	FUNCTION_88	CALL_1
0x400c6a6	          0x803a20	                    cmp byte [rdx], 0x20	     11357	option.c	FUNCTION_88	IF_2
0x400c6a9	     0xf8447010000	                            je 0x400c7f6	     11357	option.c	FUNCTION_88	IF_2
0x400c6af	          0x4839d3	                            cmp rbx, rdx	     11362	option.c	FUNCTION_88	WHILE_1
0x400c6b2	     0xf82ca000000	                            jb 0x400c782	     11362	option.c	FUNCTION_88	WHILE_1
0x400c6b8	          0x4889d3	                            mov rbx, rdx	     11362	option.c	FUNCTION_88	WHILE_1
0x400c6bb	       0xf1f440000	                   nop dword [rax + rax]	     11362	option.c	FUNCTION_88	WHILE_1
0x400c6c0	      0xbf00000000	                              mov edi, 0	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x400c6c5	      0xb902000000	                              mov ecx, 2	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x400c6ca	          0x4889de	                            mov rsi, rbx	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x400c6cd	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x400c6cf	            0x751d	                           jne 0x400c6ee	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x400c6d1	      0xbf00000000	                              mov edi, 0	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x400c6d6	      0xb906000000	                              mov ecx, 6	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x400c6db	          0x4889de	                            mov rsi, rbx	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x400c6de	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x400c6e0	            0x740c	                            je 0x400c6ee	     11379	option.c	FUNCTION_88	IF_5	CALL_3
0x400c6e2	    0x41c745000500	                      mov dword [r13], 5	     11381	option.c	FUNCTION_88	IF_5
0x400c6ea	        0x4883c302	                              add rbx, 2	     11382	option.c	FUNCTION_88	IF_5
0x400c6ee	      0xbf00000000	                              mov edi, 0	     11384	option.c	FUNCTION_88	IF_6	CALL_4
0x400c6f3	      0xb903000000	                              mov ecx, 3	     11384	option.c	FUNCTION_88	IF_6	CALL_4
0x400c6f8	          0x4889de	                            mov rsi, rbx	     11384	option.c	FUNCTION_88	IF_6	CALL_4
0x400c6fb	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11384	option.c	FUNCTION_88	IF_6	CALL_4
0x400c6fd	            0x750c	                           jne 0x400c70b	     11384	option.c	FUNCTION_88	IF_6	CALL_4
0x400c6ff	    0x41c745000500	                      mov dword [r13], 5	     11386	option.c	FUNCTION_88	IF_6
0x400c707	        0x4883c303	                              add rbx, 3	     11387	option.c	FUNCTION_88	IF_6
0x400c70b	        0x49895d08	                mov qword [r13 + 8], rbx	     11389	option.c	FUNCTION_88
0x400c70f	           0xfb603	                   movzx eax, byte [rbx]	     11390	option.c	FUNCTION_88	IF_7
0x400c712	            0x3c3c	                            cmp al, 0x3c	     11390	option.c	FUNCTION_88	IF_7
0x400c714	     0xf84fd000000	                            je 0x400c817	     11390	option.c	FUNCTION_88	IF_7
0x400c71a	            0x3c74	                            cmp al, 0x74	     11408	option.c	FUNCTION_88	ELSE_1	IF_10
0x400c71c	          0x4889dd	                            mov rbp, rbx	     11408	option.c	FUNCTION_88	ELSE_1	IF_10
0x400c71f	     0xf84c1010000	                            je 0x400c8e6	     11408	option.c	FUNCTION_88	ELSE_1	IF_10
0x400c725	    0x48bac1ff0000	            movabs rdx, 0x2000000000ffc1	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400c72f	              0x90	                                     nop	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400c730	      0x440fb66500	                  movzx r12d, byte [rbp]	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400c735	          0x4489e0	                           mov eax, r12d	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400c738	          0x83e0df	                     and eax, 0xffffffdf	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400c73b	          0x83e841	                           sub eax, 0x41	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400c73e	            0x3c19	                            cmp al, 0x19	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400c740	     0xf8694000000	                           jbe 0x400c7da	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400c746	      0x418d4424d6	                   lea eax, [r12 - 0x2a]	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400c74b	            0x3c35	                            cmp al, 0x35	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400c74d	     0xf867d000000	                           jbe 0x400c7d0	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400c753	          0x4584e4	                         test r12b, r12b	     11425	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_13
0x400c756	     0xf852a010000	                           jne 0x400c886	     11425	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_13
0x400c75c	        0x4883c408	                              add rsp, 8	     11539	option.c	FUNCTION_88
0x400c760	              0x5b	                                 pop rbx	     11539	option.c	FUNCTION_88
0x400c761	              0x5d	                                 pop rbp	     11539	option.c	FUNCTION_88
0x400c762	            0x415c	                                 pop r12	     11539	option.c	FUNCTION_88
0x400c764	            0x415d	                                 pop r13	     11539	option.c	FUNCTION_88
0x400c766	            0x415e	                                 pop r14	     11539	option.c	FUNCTION_88
0x400c768	            0x415f	                                 pop r15	     11539	option.c	FUNCTION_88
0x400c76a	              0xc3	                                     ret	     11539	option.c	FUNCTION_88
0x400c76b	       0xf1f440000	                   nop dword [rax + rax]	     11539	option.c	FUNCTION_88
0x400c770	          0x80f92c	                            cmp cl, 0x2c	     11366	option.c	FUNCTION_88	WHILE_1	IF_3
0x400c773	            0x7415	                            je 0x400c78a	     11366	option.c	FUNCTION_88	WHILE_1	IF_3
0x400c775	        0x4883ea01	                              sub rdx, 1	     11377	option.c	FUNCTION_88	WHILE_1
0x400c779	          0x4839d3	                            cmp rbx, rdx	     11362	option.c	FUNCTION_88	WHILE_1
0x400c77c	     0xf843effffff	                            je 0x400c6c0	     11362	option.c	FUNCTION_88	WHILE_1
0x400c782	           0xfb60a	                   movzx ecx, byte [rdx]	     11366	option.c	FUNCTION_88	WHILE_1	IF_3
0x400c785	          0x80f920	                            cmp cl, 0x20	     11366	option.c	FUNCTION_88	WHILE_1	IF_3
0x400c788	            0x75e6	                           jne 0x400c770	     11366	option.c	FUNCTION_88	WHILE_1	IF_3
0x400c78a	          0x4839d3	                            cmp rbx, rdx	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x400c78d	          0x4889d0	                            mov rax, rdx	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x400c790	            0x7320	                           jae 0x400c7b2	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x400c792	        0x807aff5c	                cmp byte [rdx - 1], 0x5c	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x400c796	            0x740e	                            je 0x400c7a6	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x400c798	            0xeb18	                           jmp 0x400c7b2	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x400c79a	    0x660f1f440000	                    nop word [rax + rax]	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x400c7a0	        0x8078ff5c	                cmp byte [rax - 1], 0x5c	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x400c7a4	            0x750c	                           jne 0x400c7b2	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x400c7a6	        0x4883e801	                              sub rax, 1	     11369	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x400c7aa	          0x4839c3	                            cmp rbx, rax	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x400c7ad	            0x75f1	                           jne 0x400c7a0	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x400c7af	          0x4889d8	                            mov rax, rbx	     11368	option.c	FUNCTION_88	WHILE_1	IF_3	WHILE_2
0x400c7b2	          0x80f920	                            cmp cl, 0x20	     11372	option.c	FUNCTION_88	WHILE_1	IF_4
0x400c7b5	            0x75be	                           jne 0x400c775	     11372	option.c	FUNCTION_88	WHILE_1	IF_4
0x400c7b7	          0x4889d6	                            mov rsi, rdx	     11372	option.c	FUNCTION_88	WHILE_1	IF_4
0x400c7ba	          0x4829c6	                            sub rsi, rax	     11372	option.c	FUNCTION_88	WHILE_1	IF_4
0x400c7bd	          0x4889f0	                            mov rax, rsi	     11372	option.c	FUNCTION_88	WHILE_1	IF_4
0x400c7c0	            0xa801	                              test al, 1	     11372	option.c	FUNCTION_88	WHILE_1	IF_4
0x400c7c2	            0x75b1	                           jne 0x400c775	     11372	option.c	FUNCTION_88	WHILE_1	IF_4
0x400c7c4	        0x488d5a01	                      lea rbx, [rdx + 1]	     11374	option.c	FUNCTION_88	WHILE_1	IF_4
0x400c7c8	      0xe9f3feffff	                           jmp 0x400c6c0	     11375	option.c	FUNCTION_88	WHILE_1	IF_4
0x400c7cd	           0xf1f00	                         nop dword [rax]	     11375	option.c	FUNCTION_88	WHILE_1	IF_4
0x400c7d0	        0x480fa3c2	                             bt rdx, rax	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400c7d4	     0xf83ac000000	                           jae 0x400c886	     11423	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4	CALL_8
0x400c7da	        0x4883c501	                              add rbp, 1	     11424	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4
0x400c7de	      0xe94dffffff	                           jmp 0x400c730	     11424	option.c	FUNCTION_88	ELSE_1	ELSE_2	WHILE_4
0x400c7e3	        0x49897508	                mov qword [r13 + 8], rsi	     11353	option.c	FUNCTION_88	IF_1
0x400c7e7	        0x4883c408	                              add rsp, 8	     11539	option.c	FUNCTION_88
0x400c7eb	              0x5b	                                 pop rbx	     11539	option.c	FUNCTION_88
0x400c7ec	              0x5d	                                 pop rbp	     11539	option.c	FUNCTION_88
0x400c7ed	            0x415c	                                 pop r12	     11539	option.c	FUNCTION_88
0x400c7ef	            0x415d	                                 pop r13	     11539	option.c	FUNCTION_88
0x400c7f1	            0x415e	                                 pop r14	     11539	option.c	FUNCTION_88
0x400c7f3	            0x415f	                                 pop r15	     11539	option.c	FUNCTION_88
0x400c7f5	              0xc3	                                     ret	     11539	option.c	FUNCTION_88
0x400c7f6	        0x807aff5c	                cmp byte [rdx - 1], 0x5c	     11357	option.c	FUNCTION_88	IF_2
0x400c7fa	     0xf84affeffff	                            je 0x400c6af	     11357	option.c	FUNCTION_88	IF_2
0x400c800	        0x4883c201	                              add rdx, 1	     11522	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400c804	        0x49895508	                mov qword [r13 + 8], rdx	     11522	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400c808	        0x4883c408	                              add rsp, 8	     11539	option.c	FUNCTION_88
0x400c80c	              0x5b	                                 pop rbx	     11539	option.c	FUNCTION_88
0x400c80d	              0x5d	                                 pop rbp	     11539	option.c	FUNCTION_88
0x400c80e	            0x415c	                                 pop r12	     11539	option.c	FUNCTION_88
0x400c810	            0x415d	                                 pop r13	     11539	option.c	FUNCTION_88
0x400c812	            0x415e	                                 pop r14	     11539	option.c	FUNCTION_88
0x400c814	            0x415f	                                 pop r15	     11539	option.c	FUNCTION_88
0x400c816	              0xc3	                                     ret	     11539	option.c	FUNCTION_88
0x400c817	          0x4989dc	                            mov r12, rbx	     11539	option.c	FUNCTION_88
0x400c81a	    0x660f1f440000	                    nop word [rax + rax]	     11539	option.c	FUNCTION_88
0x400c820	        0x4983c401	                              add r12, 1	     11393	option.c	FUNCTION_88	IF_7	WHILE_3	IF_8
0x400c824	            0x84c0	                             test al, al	     11393	option.c	FUNCTION_88	IF_7	WHILE_3	IF_8
0x400c826	     0xf8430ffffff	                            je 0x400c75c	     11393	option.c	FUNCTION_88	IF_7	WHILE_3	IF_8
0x400c82c	      0x410fb60424	                   movzx eax, byte [r12]	     11392	option.c	FUNCTION_88	IF_7	WHILE_3
0x400c831	            0x3c3e	                            cmp al, 0x3e	     11392	option.c	FUNCTION_88	IF_7	WHILE_3
0x400c833	            0x75eb	                           jne 0x400c820	     11392	option.c	FUNCTION_88	IF_7	WHILE_3
0x400c835	        0x488d7b01	                      lea rdi, [rbx + 1]	     11395	option.c	FUNCTION_88	IF_7	CALL_5
0x400c839	      0xe800000000	                          call 0x400c83e	     11395	option.c	FUNCTION_88	IF_7	CALL_5
0x400c83e	            0x85c0	                           test eax, eax	     11396	option.c	FUNCTION_88	IF_7	IF_9
0x400c840	            0x742d	                            je 0x400c86f	     11396	option.c	FUNCTION_88	IF_7	IF_9
0x400c842	            0x89c2	                            mov edx, eax	     11403	option.c	FUNCTION_88	IF_7	CALL_6
0x400c844	            0xf7d8	                                 neg eax	     11404	option.c	FUNCTION_88	IF_7	CALL_7
0x400c846	      0x498d6c2401	                      lea rbp, [r12 + 1]	     11401	option.c	FUNCTION_88	IF_7
0x400c84b	          0xc1e808	                              shr eax, 8	     11404	option.c	FUNCTION_88	IF_7	CALL_7
0x400c84e	            0xf7da	                                 neg edx	     11403	option.c	FUNCTION_88	IF_7	CALL_6
0x400c850	    0x450fb6642401	              movzx r12d, byte [r12 + 1]	     11401	option.c	FUNCTION_88	IF_7
0x400c856	          0x4531f6	                          xor r14d, r14d	     11342	option.c	FUNCTION_88
0x400c859	    0x880500000000	               mov byte [0x0400c85f], al	     11404	option.c	FUNCTION_88	IF_7	CALL_7
0x400c85f	    0x881500000000	               mov byte [0x0400c865], dl	     11403	option.c	FUNCTION_88	IF_7	CALL_6
0x400c865	      0xb801000000	                              mov eax, 1	     11402	option.c	FUNCTION_88	IF_7
0x400c86a	          0x4531ff	                          xor r15d, r15d	     11341	option.c	FUNCTION_88
0x400c86d	            0xeb4e	                           jmp 0x400c8bd	     11341	option.c	FUNCTION_88
0x400c86f	    0x41c745000000	                      mov dword [r13], 0	     11398	option.c	FUNCTION_88	IF_7	IF_9
0x400c877	        0x4883c408	                              add rsp, 8	     11539	option.c	FUNCTION_88
0x400c87b	              0x5b	                                 pop rbx	     11539	option.c	FUNCTION_88
0x400c87c	              0x5d	                                 pop rbp	     11539	option.c	FUNCTION_88
0x400c87d	            0x415c	                                 pop r12	     11539	option.c	FUNCTION_88
0x400c87f	            0x415d	                                 pop r13	     11539	option.c	FUNCTION_88
0x400c881	            0x415e	                                 pop r14	     11539	option.c	FUNCTION_88
0x400c883	            0x415f	                                 pop r15	     11539	option.c	FUNCTION_88
0x400c885	              0xc3	                                     ret	     11539	option.c	FUNCTION_88
0x400c886	        0xc6450000	                       mov byte [rbp], 0	     11428	option.c	FUNCTION_88	ELSE_1	ELSE_2
0x400c88a	          0x4889df	                            mov rdi, rbx	     11429	option.c	FUNCTION_88	ELSE_1	ELSE_2	CALL_9
0x400c88d	      0xe88e3affff	                     call sym.findoption	     11429	option.c	FUNCTION_88	ELSE_1	ELSE_2	CALL_9
0x400c892	          0x83f8ff	             cmp eax, 0xffffffffffffffff	     11431	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_14
0x400c895	          0x4189c6	                           mov r14d, eax	     11429	option.c	FUNCTION_88	ELSE_1	ELSE_2	CALL_9
0x400c898	        0x44886500	                    mov byte [rbp], r12b	     11430	option.c	FUNCTION_88	ELSE_1	ELSE_2
0x400c89c	            0x74d1	                            je 0x400c86f	     11431	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_14
0x400c89e	            0x4898	                                    cdqe	     11431	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_14
0x400c8a0	        0x48c1e006	                              shl rax, 6	     11431	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_14
0x400c8a4	    0x480500000000	                              add rax, 0	     11431	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_14
0x400c8aa	      0x4883781800	               cmp qword [rax + 0x18], 0	     11431	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_14
0x400c8af	            0x74be	                            je 0x400c86f	     11431	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_14
0x400c8b1	        0x4c8b7810	            mov r15, qword [rax + 0x10] 	     11436	option.c	FUNCTION_88	ELSE_1	ELSE_2
0x400c8b5	        0x41f6c701	                            test r15b, 1	     11437	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_15
0x400c8b9	            0x75b4	                           jne 0x400c86f	     11437	option.c	FUNCTION_88	ELSE_1	ELSE_2	IF_15
0x400c8bb	            0x31c0	                            xor eax, eax	     11345	option.c	FUNCTION_88
0x400c8bd	      0x418d5424d5	                   lea edx, [r12 - 0x2b]	     11445	option.c	FUNCTION_88	IF_16
0x400c8c2	          0x83e2fd	                     and edx, 0xfffffffd	     11445	option.c	FUNCTION_88	IF_16
0x400c8c5	            0x7465	                            je 0x400c92c	     11445	option.c	FUNCTION_88	IF_16
0x400c8c7	        0x4183fc5e	                          cmp r12d, 0x5e	     11445	option.c	FUNCTION_88	IF_16
0x400c8cb	            0x745f	                            je 0x400c92c	     11445	option.c	FUNCTION_88	IF_16
0x400c8cd	        0x4183fc3d	                          cmp r12d, 0x3d	     11450	option.c	FUNCTION_88	IF_17
0x400c8d1	            0x7463	                            je 0x400c936	     11450	option.c	FUNCTION_88	IF_17
0x400c8d3	        0x4183fc3a	                          cmp r12d, 0x3a	     11450	option.c	FUNCTION_88	IF_17
0x400c8d7	            0x745d	                            je 0x400c936	     11450	option.c	FUNCTION_88	IF_17
0x400c8d9	    0x41c74500feff	            mov dword [r13], 0xfffffffe 	     11453	option.c	FUNCTION_88	IF_17
0x400c8e1	      0xe976feffff	                           jmp 0x400c75c	     11454	option.c	FUNCTION_88	IF_17
0x400c8e6	        0x807b015f	                cmp byte [rbx + 1], 0x5f	     11408	option.c	FUNCTION_88	ELSE_1	IF_10
0x400c8ea	     0xf8535feffff	                           jne 0x400c725	     11408	option.c	FUNCTION_88	ELSE_1	IF_10
0x400c8f0	         0xfb64302	               movzx eax, byte [rbx + 2]	     11411	option.c	FUNCTION_88	ELSE_1	IF_10	IF_11
0x400c8f4	            0x84c0	                             test al, al	     11411	option.c	FUNCTION_88	ELSE_1	IF_10	IF_11
0x400c8f6	     0xf8460feffff	                            je 0x400c75c	     11411	option.c	FUNCTION_88	ELSE_1	IF_10	IF_11
0x400c8fc	        0x807b0300	                   cmp byte [rbx + 3], 0	     11413	option.c	FUNCTION_88	ELSE_1	IF_10	IF_12
0x400c900	     0xf8456feffff	                            je 0x400c75c	     11413	option.c	FUNCTION_88	ELSE_1	IF_10	IF_12
0x400c906	      0x440fb66304	              movzx r12d, byte [rbx + 4]	     11415	option.c	FUNCTION_88	ELSE_1	IF_10
0x400c90b	    0x880500000000	               mov byte [0x0400c911], al	     11417	option.c	FUNCTION_88	ELSE_1	IF_10
0x400c911	        0x488d6b04	                      lea rbp, [rbx + 4]	     11415	option.c	FUNCTION_88	ELSE_1	IF_10
0x400c915	         0xfb64303	               movzx eax, byte [rbx + 3]	     11418	option.c	FUNCTION_88	ELSE_1	IF_10
0x400c919	          0x4531f6	                          xor r14d, r14d	     11342	option.c	FUNCTION_88
0x400c91c	          0x4531ff	                          xor r15d, r15d	     11341	option.c	FUNCTION_88
0x400c91f	    0x880500000000	               mov byte [0x0400c925], al	     11418	option.c	FUNCTION_88	ELSE_1	IF_10
0x400c925	      0xb801000000	                              mov eax, 1	     11416	option.c	FUNCTION_88	ELSE_1	IF_10
0x400c92a	            0xeb91	                           jmp 0x400c8bd	     11418	option.c	FUNCTION_88	ELSE_1	IF_10
0x400c92c	        0x807d013d	                cmp byte [rbp + 1], 0x3d	     11445	option.c	FUNCTION_88	IF_16
0x400c930	            0x759b	                           jne 0x400c8cd	     11445	option.c	FUNCTION_88	IF_16
0x400c932	        0x4883c501	                              add rbp, 1	     11447	option.c	FUNCTION_88	IF_16
0x400c936	      0x41837d0005	                      cmp dword [r13], 5	     11451	option.c	FUNCTION_88	IF_17
0x400c93b	            0x749c	                            je 0x400c8d9	     11451	option.c	FUNCTION_88	IF_17
0x400c93d	        0x807d0100	                   cmp byte [rbp + 1], 0	     11456	option.c	FUNCTION_88	IF_18
0x400c941	     0xf8449010000	                            je 0x400ca90	     11456	option.c	FUNCTION_88	IF_18
0x400c947	            0x85c0	                           test eax, eax	     11467	option.c	FUNCTION_88	IF_20
0x400c949	    0x41c745000000	                      mov dword [r13], 0	     11466	option.c	FUNCTION_88
0x400c951	     0xf8505feffff	                           jne 0x400c75c	     11467	option.c	FUNCTION_88	IF_20
0x400c957	        0x41f6c702	                            test r15b, 2	     11467	option.c	FUNCTION_88	IF_20
0x400c95b	     0xf85fbfdffff	                           jne 0x400c75c	     11467	option.c	FUNCTION_88	IF_20
0x400c961	        0x4883c501	                              add rbp, 1	     11470	option.c	FUNCTION_88
0x400c965	        0x41f6c710	                         test r15b, 0x10	     11472	option.c	FUNCTION_88	IF_21
0x400c969	        0x49896d08	                mov qword [r13 + 8], rbp	     11470	option.c	FUNCTION_88
0x400c96d	            0x747f	                            je 0x400c9ee	     11472	option.c	FUNCTION_88	IF_21
0x400c96f	          0x4963c6	                        movsxd rax, r14d	     11474	option.c	FUNCTION_88	IF_21
0x400c972	        0x48c1e006	                              shl rax, 6	     11474	option.c	FUNCTION_88	IF_21
0x400c976	    0x488b80000000	                    mov rax, qword [rax]	     11474	option.c	FUNCTION_88	IF_21
0x400c97d	    0x483d00000000	                              cmp rax, 0	     11477	option.c	FUNCTION_88	IF_21	IF_22
0x400c983	        0x400f94c7	                                sete dil	     11477	option.c	FUNCTION_88	IF_21	IF_22
0x400c987	    0x483d00000000	                              cmp rax, 0	     11481	option.c	FUNCTION_88	IF_21	IF_22
0x400c98d	        0x400f94c6	                                sete sil	     11481	option.c	FUNCTION_88	IF_21	IF_22
0x400c991	    0x483d00000000	                              cmp rax, 0	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x400c997	           0xf94c1	                                 sete cl	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x400c99a	    0x483d00000000	                              cmp rax, 0	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x400c9a0	           0xf94c2	                                 sete dl	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x400c9a3	             0x9ca	                             or edx, ecx	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x400c9a5	             0x9fa	                             or edx, edi	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x400c9a7	    0x483d00000000	                              cmp rax, 0	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x400c9ad	           0xf94c1	                                 sete cl	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x400c9b0	             0x9ca	                             or edx, ecx	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x400c9b2	    0x483d00000000	                              cmp rax, 0	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x400c9b8	           0xf94c1	                                 sete cl	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x400c9bb	             0x9ca	                             or edx, ecx	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x400c9bd	          0x4008f2	                              or dl, sil	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x400c9c0	     0xf853a010000	                           jne 0x400cb00	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x400c9c6	    0x483d00000000	                              cmp rax, 0	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x400c9cc	     0xf842e010000	                            je 0x400cb00	     11484	option.c	FUNCTION_88	IF_21	IF_22
0x400c9d2	    0x483d00000000	                              cmp rax, 0	     11502	option.c	FUNCTION_88	IF_21	ELSE_5	IF_24
0x400c9d8	    0x41c745000200	                      mov dword [r13], 2	     11500	option.c	FUNCTION_88	IF_21	ELSE_5
0x400c9e0	     0xf8430010000	                            je 0x400cb16	     11502	option.c	FUNCTION_88	IF_21	ELSE_5	IF_24
0x400c9e6	    0x41c745240100	               mov dword [r13 + 0x24], 1	     11496	option.c	FUNCTION_88	IF_21	IF_22	ELSE_4
0x400c9ee	          0x4889df	                            mov rdi, rbx	     11511	option.c	FUNCTION_88	ELSE_6	FOR_1	CALL_10
0x400c9f1	      0xe800000000	                          call 0x400c9f6	     11511	option.c	FUNCTION_88	ELSE_6	FOR_1	CALL_10
0x400c9f6	      0x488d5403ff	                lea rdx, [rbx + rax - 1]	     11511	option.c	FUNCTION_88	ELSE_6	FOR_1	CALL_10
0x400c9fb	          0x4839d5	                            cmp rbp, rdx	     11511	option.c	FUNCTION_88	ELSE_6	FOR_1	CALL_10
0x400c9fe	     0xf8358fdffff	                           jae 0x400c75c	     11511	option.c	FUNCTION_88	ELSE_6	FOR_1	CALL_10
0x400ca04	          0x4d63c6	                         movsxd r8, r14d	     11529	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27
0x400ca07	    0x4181e7008000	                        and r15d, 0x8000	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400ca0e	        0x49c1e006	                               shl r8, 6	     11529	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27
0x400ca12	    0x4981c0000000	                               add r8, 0	     11529	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27
0x400ca19	            0xeb25	                           jmp 0x400ca40	     11529	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27
0x400ca1b	       0xf1f440000	                   nop dword [rax + rax]	     11529	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27
0x400ca20	          0x80f92c	                            cmp cl, 0x2c	     11514	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25
0x400ca23	            0x7423	                            je 0x400ca48	     11514	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25
0x400ca25	    0x498178180000	                cmp qword [r8 + 0x18], 0	     11529	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27
0x400ca2d	     0xf8484000000	                            je 0x400cab7	     11529	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27
0x400ca33	        0x4883ea01	                              sub rdx, 1	     11511	option.c	FUNCTION_88	ELSE_6	FOR_1	CALL_10
0x400ca37	          0x4839d5	                            cmp rbp, rdx	     11511	option.c	FUNCTION_88	ELSE_6	FOR_1	CALL_10
0x400ca3a	     0xf841cfdffff	                            je 0x400c75c	     11511	option.c	FUNCTION_88	ELSE_6	FOR_1	CALL_10
0x400ca40	           0xfb60a	                   movzx ecx, byte [rdx]	     11514	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25
0x400ca43	          0x80f920	                            cmp cl, 0x20	     11514	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25
0x400ca46	            0x75d8	                           jne 0x400ca20	     11514	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25
0x400ca48	          0x4839d5	                            cmp rbp, rdx	     11517	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x400ca4b	          0x4889d0	                            mov rax, rdx	     11517	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x400ca4e	            0x731f	                           jae 0x400ca6f	     11517	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x400ca50	        0x807aff5c	                cmp byte [rdx - 1], 0x5c	     11517	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x400ca54	            0x7410	                            je 0x400ca66	     11517	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x400ca56	            0xeb17	                           jmp 0x400ca6f	     11517	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x400ca58	     0xf1f84000000	                   nop dword [rax + rax]	     11517	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x400ca60	        0x8078ff5c	                cmp byte [rax - 1], 0x5c	     11517	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x400ca64	            0x7509	                           jne 0x400ca6f	     11517	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x400ca66	        0x4883e801	                              sub rax, 1	     11518	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x400ca6a	          0x4839c5	                            cmp rbp, rax	     11517	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x400ca6d	            0x75f1	                           jne 0x400ca60	     11517	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	WHILE_5
0x400ca6f	          0x80f920	                            cmp cl, 0x20	     11519	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400ca72	            0x746c	                            je 0x400cae0	     11519	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400ca74	          0x80f92c	                            cmp cl, 0x2c	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400ca77	            0x75ac	                           jne 0x400ca25	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400ca79	          0x4d85ff	                           test r15, r15	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400ca7c	            0x74a7	                            je 0x400ca25	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400ca7e	          0x4889d7	                            mov rdi, rdx	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400ca81	          0x4829c7	                            sub rdi, rax	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400ca84	          0x4889f8	                            mov rax, rdi	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400ca87	            0xa801	                              test al, 1	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400ca89	            0x759a	                           jne 0x400ca25	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400ca8b	      0xe970fdffff	                           jmp 0x400c800	     11520	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400ca90	            0x85c0	                           test eax, eax	     11460	option.c	FUNCTION_88	IF_18	IF_19
0x400ca92	      0xb8ffffffff	                     mov eax, 0xffffffff	     11460	option.c	FUNCTION_88	IF_18	IF_19
0x400ca97	    0x41c745000700	                      mov dword [r13], 7	     11458	option.c	FUNCTION_88	IF_18
0x400ca9f	        0x440f45f0	                        cmovne r14d, eax	     11460	option.c	FUNCTION_88	IF_18	IF_19
0x400caa3	        0x4883c501	                              add rbp, 1	     11463	option.c	FUNCTION_88	IF_18
0x400caa7	    0x448935000000	           mov dword [0x0400caae], r14d 	     11463	option.c	FUNCTION_88	IF_18
0x400caae	        0x49896d08	                mov qword [r13 + 8], rbp	     11463	option.c	FUNCTION_88	IF_18
0x400cab2	      0xe9a5fcffff	                           jmp 0x400c75c	     11464	option.c	FUNCTION_88	IF_18
0x400cab7	      0xbf00000000	                              mov edi, 0	     11530	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27	CALL_11
0x400cabc	      0xb905000000	                              mov ecx, 5	     11530	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27	CALL_11
0x400cac1	          0x4889d6	                            mov rsi, rdx	     11530	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27	CALL_11
0x400cac4	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	     11530	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27	CALL_11
0x400cac6	     0xf8567ffffff	                           jne 0x400ca33	     11530	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27	CALL_11
0x400cacc	        0x4883c205	                              add rdx, 5	     11532	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27
0x400cad0	        0x49895508	                mov qword [r13 + 8], rdx	     11532	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27
0x400cad4	      0xe983fcffff	                           jmp 0x400c75c	     11533	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27
0x400cad9	     0xf1f80000000	                         nop dword [rax]	     11533	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_27
0x400cae0	      0x41837d2402	               cmp dword [r13 + 0x24], 2	     11519	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400cae5	     0xf853affffff	                           jne 0x400ca25	     11519	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400caeb	          0x4889d7	                            mov rdi, rdx	     11519	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400caee	          0x4829c7	                            sub rdi, rax	     11519	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400caf1	        0x4883ff02	                              cmp rdi, 2	     11519	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400caf5	     0xf8f2affffff	                            jg 0x400ca25	     11519	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400cafb	      0xe900fdffff	                           jmp 0x400c800	     11519	option.c	FUNCTION_88	ELSE_6	FOR_1	IF_25	IF_26
0x400cb00	          0x4084ff	                           test dil, dil	     11491	option.c	FUNCTION_88	IF_21	IF_22	IF_23
0x400cb03	    0x41c745000300	                      mov dword [r13], 3	     11488	option.c	FUNCTION_88	IF_21	IF_22
0x400cb0b	            0x7509	                           jne 0x400cb16	     11491	option.c	FUNCTION_88	IF_21	IF_22	IF_23
0x400cb0d	          0x4084f6	                           test sil, sil	     11491	option.c	FUNCTION_88	IF_21	IF_22	IF_23
0x400cb10	     0xf84d0feffff	                            je 0x400c9e6	     11491	option.c	FUNCTION_88	IF_21	IF_22	IF_23
0x400cb16	    0x41c745240200	               mov dword [r13 + 0x24], 2	     11494	option.c	FUNCTION_88	IF_21	IF_22	IF_23
0x400cb1e	      0xe9cbfeffff	                           jmp 0x400c9ee	     11494	option.c	FUNCTION_88	IF_21	IF_22	IF_23
