using_script	WHILE,0:ELSE,0:IF,0:DO,0:CALL,0:functions,0:SWITCH,0:FOR,0	5
0x4003780	    0x486305000000	         movsxd rax, dword [0x04003787] 	      1512	getchar.c	FUNCTION_51
0x4003787	    0x48833cc50000	                    cmp qword [rax*8], 0	      1512	getchar.c	FUNCTION_51
0x4003790	           0xf95c0	                                setne al	      1512	getchar.c	FUNCTION_51
0x4003793	           0xfb6c0	                           movzx eax, al	      1512	getchar.c	FUNCTION_51
0x4003796	              0xc3	                                     ret	      1513	getchar.c	FUNCTION_51
typebuf_typed	WHILE,0:ELSE,0:IF,0:DO,0:CALL,0:functions,0:SWITCH,0:FOR,0	5
0x4002e30	    0x8b1500000000	            mov edx, dword [0x04002e36] 	      1145	getchar.c	FUNCTION_38
0x4002e36	            0x31c0	                            xor eax, eax	      1145	getchar.c	FUNCTION_38
0x4002e38	            0x85d2	                           test edx, edx	      1145	getchar.c	FUNCTION_38
0x4002e3a	           0xf94c0	                                 sete al	      1145	getchar.c	FUNCTION_38
0x4002e3d	              0xc3	                                     ret	      1146	getchar.c	FUNCTION_38
CancelRedo	WHILE,1:ELSE,0:IF,1:DO,0:CALL,3:functions,0:SWITCH,0:FOR,0	73
0x4001590	    0x8b0500000000	            mov eax, dword [0x04001596] 	       508	getchar.c	FUNCTION_16	IF_1
0x4001596	            0x85c0	                           test eax, eax	       508	getchar.c	FUNCTION_16	IF_1
0x4001598	     0xf850d010000	                           jne 0x40016ab	       508	getchar.c	FUNCTION_16	IF_1
0x400159e	    0x488b3d000000	            mov rdi, qword [0x040015a5] 	       141	getchar.c	FUNCTION_1	FOR_1
0x40015a5	              0x53	                                push rbx	       507	getchar.c	FUNCTION_16
0x40015a6	          0x4885ff	                           test rdi, rdi	       141	getchar.c	FUNCTION_1	FOR_1
0x40015a9	            0x7415	                            je 0x40015c0	       141	getchar.c	FUNCTION_1	FOR_1
0x40015ab	       0xf1f440000	                   nop dword [rax + rax]	       141	getchar.c	FUNCTION_1	FOR_1
0x40015b0	          0x488b1f	                    mov rbx, qword [rdi]	       143	getchar.c	FUNCTION_1	FOR_1
0x40015b3	      0xe800000000	                          call 0x40015b8	       144	getchar.c	FUNCTION_1	FOR_1	CALL_1
0x40015b8	          0x4885db	                           test rbx, rbx	       141	getchar.c	FUNCTION_1	FOR_1
0x40015bb	          0x4889df	                            mov rdi, rbx	       141	getchar.c	FUNCTION_1	FOR_1
0x40015be	            0x75f0	                           jne 0x40015b0	       141	getchar.c	FUNCTION_1	FOR_1
0x40015c0	    0x488b05000000	            mov rax, qword [0x040015c7] 	       511	getchar.c	FUNCTION_16	IF_1
0x40015c7	    0x488b3d000000	            mov rdi, qword [0x040015ce] 	       403	getchar.c	FUNCTION_10	IF_1
0x40015ce	    0x48c705000000	               mov qword [0x040015d9], 0	       512	getchar.c	FUNCTION_16	IF_1
0x40015d9	    0x488905000000	            mov qword [0x040015e0], rax 	       511	getchar.c	FUNCTION_16	IF_1
0x40015e0	    0x488b05000000	            mov rax, qword [0x040015e7] 	       511	getchar.c	FUNCTION_16	IF_1
0x40015e7	          0x4885ff	                           test rdi, rdi	       403	getchar.c	FUNCTION_10	IF_1
0x40015ea	    0x488905000000	            mov qword [0x040015f1], rax 	       511	getchar.c	FUNCTION_16	IF_1
0x40015f1	    0x488b05000000	            mov rax, qword [0x040015f8] 	       511	getchar.c	FUNCTION_16	IF_1
0x40015f8	    0x488905000000	            mov qword [0x040015ff], rax 	       511	getchar.c	FUNCTION_16	IF_1
0x40015ff	    0x488b05000000	            mov rax, qword [0x04001606] 	       511	getchar.c	FUNCTION_16	IF_1
0x4001606	    0x488905000000	            mov qword [0x0400160d], rax 	       511	getchar.c	FUNCTION_16	IF_1
0x400160d	            0x7415	                            je 0x4001624	       403	getchar.c	FUNCTION_10	IF_1
0x400160f	    0x48c705000000	               mov qword [0x0400161a], 0	       405	getchar.c	FUNCTION_10	IF_1
0x400161a	    0xc70500000000	               mov dword [0x04001624], 0	       406	getchar.c	FUNCTION_10	IF_1
0x4001624	    0x48833d000000	               cmp qword [0x0400162c], 0	       408	getchar.c	FUNCTION_10	IF_2
0x400162c	            0x7421	                            je 0x400164f	       408	getchar.c	FUNCTION_10	IF_2
0x400162e	    0x48c705000000	               mov qword [0x04001639], 0	       410	getchar.c	FUNCTION_10	IF_2
0x4001639	    0xc70500000000	               mov dword [0x04001643], 0	       411	getchar.c	FUNCTION_10	IF_2
0x4001643	            0xeb0a	                           jmp 0x400164f	       411	getchar.c	FUNCTION_10	IF_2
0x4001645	           0xf1f00	                         nop dword [rax]	       411	getchar.c	FUNCTION_10	IF_2
0x4001648	    0x488b3d000000	            mov rdi, qword [0x0400164f] 	       411	getchar.c	FUNCTION_10	IF_2
0x400164f	          0x4885ff	                           test rdi, rdi	       379	getchar.c	FUNCTION_9	IF_1
0x4001652	            0x7425	                            je 0x4001679	       379	getchar.c	FUNCTION_9	IF_1
0x4001654	    0x486315000000	         movsxd rdx, dword [0x0400165b] 	       383	getchar.c	FUNCTION_9
0x400165b	          0x4889d0	                            mov rax, rdx	       383	getchar.c	FUNCTION_9
0x400165e	       0xfb65c1708	        movzx ebx, byte [rdi + rdx + 8] 	       383	getchar.c	FUNCTION_9
0x4001663	          0x83c001	                              add eax, 1	       387	getchar.c	FUNCTION_9	IF_2	IF_3
0x4001666	    0x890500000000	            mov dword [0x0400166c], eax 	       387	getchar.c	FUNCTION_9	IF_2	IF_3
0x400166c	            0x4898	                                    cdqe	       387	getchar.c	FUNCTION_9	IF_2	IF_3
0x400166e	      0x807c070800	             cmp byte [rdi + rax + 8], 0	       387	getchar.c	FUNCTION_9	IF_2	IF_3
0x4001673	            0x743b	                            je 0x40016b0	       387	getchar.c	FUNCTION_9	IF_2	IF_3
0x4001675	            0x84db	                             test bl, bl	       368	getchar.c	FUNCTION_8	IF_1
0x4001677	            0x75cf	                           jne 0x4001648	       368	getchar.c	FUNCTION_8	IF_1
0x4001679	    0x488b3d000000	            mov rdi, qword [0x04001680] 	       379	getchar.c	FUNCTION_9	IF_1
0x4001680	          0x4885ff	                           test rdi, rdi	       379	getchar.c	FUNCTION_9	IF_1
0x4001683	            0x7425	                            je 0x40016aa	       379	getchar.c	FUNCTION_9	IF_1
0x4001685	    0x486315000000	         movsxd rdx, dword [0x0400168c] 	       383	getchar.c	FUNCTION_9
0x400168c	          0x4889d0	                            mov rax, rdx	       383	getchar.c	FUNCTION_9
0x400168f	       0xfb65c1708	        movzx ebx, byte [rdi + rdx + 8] 	       383	getchar.c	FUNCTION_9
0x4001694	          0x83c001	                              add eax, 1	       387	getchar.c	FUNCTION_9	IF_2	IF_3
0x4001697	    0x890500000000	            mov dword [0x0400169d], eax 	       387	getchar.c	FUNCTION_9	IF_2	IF_3
0x400169d	            0x4898	                                    cdqe	       387	getchar.c	FUNCTION_9	IF_2	IF_3
0x400169f	      0x807c070800	             cmp byte [rdi + rax + 8], 0	       387	getchar.c	FUNCTION_9	IF_2	IF_3
0x40016a4	            0x742a	                            je 0x40016d0	       387	getchar.c	FUNCTION_9	IF_2	IF_3
0x40016a6	            0x84db	                             test bl, bl	       514	getchar.c	FUNCTION_16	IF_1	WHILE_1	CALL_3
0x40016a8	            0x759e	                           jne 0x4001648	       514	getchar.c	FUNCTION_16	IF_1	WHILE_1	CALL_3
0x40016aa	              0x5b	                                 pop rbx	       517	getchar.c	FUNCTION_16
0x40016ab	            0xf3c3	                                     ret	       517	getchar.c	FUNCTION_16
0x40016ad	           0xf1f00	                         nop dword [rax]	       517	getchar.c	FUNCTION_16
0x40016b0	          0x488b07	                    mov rax, qword [rdi]	       389	getchar.c	FUNCTION_9	IF_2	IF_3
0x40016b3	    0x488905000000	            mov qword [0x040016ba], rax 	       389	getchar.c	FUNCTION_9	IF_2	IF_3
0x40016ba	      0xe800000000	                          call 0x40016bf	       390	getchar.c	FUNCTION_9	IF_2	IF_3	CALL_1
0x40016bf	    0xc70500000000	               mov dword [0x040016c9], 0	       391	getchar.c	FUNCTION_9	IF_2	IF_3
0x40016c9	            0xebaa	                           jmp 0x4001675	       391	getchar.c	FUNCTION_9	IF_2	IF_3
0x40016cb	       0xf1f440000	                   nop dword [rax + rax]	       391	getchar.c	FUNCTION_9	IF_2	IF_3
0x40016d0	          0x488b07	                    mov rax, qword [rdi]	       389	getchar.c	FUNCTION_9	IF_2	IF_3
0x40016d3	    0x488905000000	            mov qword [0x040016da], rax 	       389	getchar.c	FUNCTION_9	IF_2	IF_3
0x40016da	      0xe800000000	                          call 0x40016df	       390	getchar.c	FUNCTION_9	IF_2	IF_3	CALL_1
0x40016df	    0xc70500000000	               mov dword [0x040016e9], 0	       391	getchar.c	FUNCTION_9	IF_2	IF_3
0x40016e9	            0xebbb	                           jmp 0x40016a6	       391	getchar.c	FUNCTION_9	IF_2	IF_3
AppendNumberToRedobuff	WHILE,0:ELSE,0:IF,1:DO,0:CALL,1:functions,0:SWITCH,0:FOR,0	117
0x4001cc0	            0x4155	                                push r13	       643	getchar.c	FUNCTION_22
0x4001cc2	            0x4154	                                push r12	       643	getchar.c	FUNCTION_22
0x4001cc4	              0x55	                                push rbp	       643	getchar.c	FUNCTION_22
0x4001cc5	              0x53	                                push rbx	       643	getchar.c	FUNCTION_22
0x4001cc6	        0x4883ec38	                           sub rsp, 0x38	       643	getchar.c	FUNCTION_22
0x4001cca	    0x8b2d00000000	            mov ebp, dword [0x04001cd0] 	       644	getchar.c	FUNCTION_22	IF_1
0x4001cd0	    0x64488b042528	                mov rax, qword fs:[0x28]	       643	getchar.c	FUNCTION_22
0x4001cd9	      0x4889442428	             mov qword [rsp + 0x28], rax	       643	getchar.c	FUNCTION_22
0x4001cde	            0x31c0	                            xor eax, eax	       643	getchar.c	FUNCTION_22
0x4001ce0	            0x85ed	                           test ebp, ebp	       644	getchar.c	FUNCTION_22	IF_1
0x4001ce2	            0x7424	                            je 0x4001d08	       644	getchar.c	FUNCTION_22	IF_1
0x4001ce4	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       646	getchar.c	FUNCTION_22
0x4001ce9	    0x644833042528	                xor rax, qword fs:[0x28]	       646	getchar.c	FUNCTION_22
0x4001cf2	     0xf85b0010000	                           jne 0x4001ea8	       646	getchar.c	FUNCTION_22
0x4001cf8	        0x4883c438	                           add rsp, 0x38	       646	getchar.c	FUNCTION_22
0x4001cfc	              0x5b	                                 pop rbx	       646	getchar.c	FUNCTION_22
0x4001cfd	              0x5d	                                 pop rbp	       646	getchar.c	FUNCTION_22
0x4001cfe	            0x415c	                                 pop r12	       646	getchar.c	FUNCTION_22
0x4001d00	            0x415d	                                 pop r13	       646	getchar.c	FUNCTION_22
0x4001d02	              0xc3	                                     ret	       646	getchar.c	FUNCTION_22
0x4001d03	       0xf1f440000	                   nop dword [rax + rax]	       646	getchar.c	FUNCTION_22
0x4001d08	          0x4989f8	                             mov r8, rdi	        33	stdio2.h	FUNCTION_88	CALL_1
0x4001d0b	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_88	CALL_1
0x4001d10	      0xba20000000	                           mov edx, 0x20	        33	stdio2.h	FUNCTION_88	CALL_1
0x4001d15	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_88	CALL_1
0x4001d1a	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_88	CALL_1
0x4001d1d	          0x4989e4	                            mov r12, rsp	        33	stdio2.h	FUNCTION_88	CALL_1
0x4001d20	          0x4889e3	                            mov rbx, rsp	       238	getchar.c	FUNCTION_5	CALL_1
0x4001d23	      0xe800000000	                          call 0x4001d28	        33	stdio2.h	FUNCTION_88	CALL_1
0x4001d28	            0x8b13	                    mov edx, dword [rbx]	       238	getchar.c	FUNCTION_5	CALL_1
0x4001d2a	        0x4883c304	                              add rbx, 4	       238	getchar.c	FUNCTION_5	CALL_1
0x4001d2e	    0x8d82fffefefe	              lea eax, [rdx - 0x1010101]	       238	getchar.c	FUNCTION_5	CALL_1
0x4001d34	            0xf7d2	                                 not edx	       238	getchar.c	FUNCTION_5	CALL_1
0x4001d36	            0x21d0	                            and eax, edx	       238	getchar.c	FUNCTION_5	CALL_1
0x4001d38	      0x2580808080	                     and eax, 0x80808080	       238	getchar.c	FUNCTION_5	CALL_1
0x4001d3d	            0x74e9	                            je 0x4001d28	       238	getchar.c	FUNCTION_5	CALL_1
0x4001d3f	            0x89c2	                            mov edx, eax	       238	getchar.c	FUNCTION_5	CALL_1
0x4001d41	          0xc1ea10	                           shr edx, 0x10	       238	getchar.c	FUNCTION_5	CALL_1
0x4001d44	      0xa980800000	                        test eax, 0x8080	       238	getchar.c	FUNCTION_5	CALL_1
0x4001d49	           0xf44c2	                          cmove eax, edx	       238	getchar.c	FUNCTION_5	CALL_1
0x4001d4c	        0x488d5302	                      lea rdx, [rbx + 2]	       238	getchar.c	FUNCTION_5	CALL_1
0x4001d50	            0x89c1	                            mov ecx, eax	       238	getchar.c	FUNCTION_5	CALL_1
0x4001d52	        0x480f44da	                          cmove rbx, rdx	       238	getchar.c	FUNCTION_5	CALL_1
0x4001d56	              0xc1	                              add cl, al	       238	getchar.c	FUNCTION_5	CALL_1
0x4001d58	        0x4883db03	                              sbb rbx, 3	       238	getchar.c	FUNCTION_5	CALL_1
0x4001d5c	          0x4c29e3	                            sub rbx, r12	       239	getchar.c	FUNCTION_5	IF_2
0x4001d5f	            0x7483	                            je 0x4001ce4	       239	getchar.c	FUNCTION_5	IF_2
0x4001d61	    0x488b3d000000	            mov rdi, qword [0x04001d68] 	       242	getchar.c	FUNCTION_5	IF_3
0x4001d68	          0x4885ff	                           test rdi, rdi	       242	getchar.c	FUNCTION_5	IF_3
0x4001d6b	     0xf84ff000000	                            je 0x4001e70	       242	getchar.c	FUNCTION_5	IF_3
0x4001d71	    0x48833d000000	               cmp qword [0x04001d79], 0	       247	getchar.c	FUNCTION_5	ELSE_1	IF_4
0x4001d79	     0xf840b010000	                            je 0x4001e8a	       247	getchar.c	FUNCTION_5	ELSE_1	IF_4
0x4001d7f	    0x486305000000	         movsxd rax, dword [0x04001d86] 	       252	getchar.c	FUNCTION_5	ELSE_2	IF_5
0x4001d86	            0x85c0	                           test eax, eax	       252	getchar.c	FUNCTION_5	ELSE_2	IF_5
0x4001d88	     0xf8582000000	                           jne 0x4001e10	       252	getchar.c	FUNCTION_5	ELSE_2	IF_5
0x4001d8e	    0x8b2d00000000	            mov ebp, dword [0x04001d94] 	       252	getchar.c	FUNCTION_5	ELSE_2	IF_5
0x4001d94	            0x39dd	                            cmp ebp, ebx	       258	getchar.c	FUNCTION_5	IF_6
0x4001d96	    0xc70500000000	               mov dword [0x04001da0], 0	       256	getchar.c	FUNCTION_5
0x4001da0	     0xf8d92000000	                           jge 0x4001e38	       258	getchar.c	FUNCTION_5	IF_6
0x4001da6	        0x4883fb13	                           cmp rbx, 0x13	       266	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x4001daa	            0x7e54	                           jle 0x4001e00	       266	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x4001dac	        0x488d7b10	                   lea rdi, [rbx + 0x10]	       266	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x4001db0	          0x4989dd	                            mov r13, rbx	       266	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x4001db3	      0xbe01000000	                              mov esi, 1	       270	getchar.c	FUNCTION_5	ELSE_3	CALL_8
0x4001db8	      0xe800000000	                          call 0x4001dbd	       270	getchar.c	FUNCTION_5	ELSE_3	CALL_8
0x4001dbd	          0x4885c0	                           test rax, rax	       272	getchar.c	FUNCTION_5	ELSE_3	IF_8
0x4001dc0	          0x4889c5	                            mov rbp, rax	       270	getchar.c	FUNCTION_5	ELSE_3	CALL_8
0x4001dc3	     0xf841bffffff	                            je 0x4001ce4	       272	getchar.c	FUNCTION_5	ELSE_3	IF_8
0x4001dc9	        0x488d7808	                      lea rdi, [rax + 8]	       275	getchar.c	FUNCTION_5	ELSE_3	CALL_9
0x4001dcd	          0x4889da	                            mov rdx, rbx	       275	getchar.c	FUNCTION_5	ELSE_3	CALL_9
0x4001dd0	          0x4129dd	                           sub r13d, ebx	       274	getchar.c	FUNCTION_5	ELSE_3
0x4001dd3	          0x4c89e6	                            mov rsi, r12	       275	getchar.c	FUNCTION_5	ELSE_3	CALL_9
0x4001dd6	    0x44892d000000	           mov dword [0x04001ddd], r13d 	       274	getchar.c	FUNCTION_5	ELSE_3
0x4001ddd	      0xe800000000	                          call 0x4001de2	       275	getchar.c	FUNCTION_5	ELSE_3	CALL_9
0x4001de2	    0x488b05000000	            mov rax, qword [0x04001de9] 	       277	getchar.c	FUNCTION_5	ELSE_3
0x4001de9	          0x488b10	                    mov rdx, qword [rax]	       277	getchar.c	FUNCTION_5	ELSE_3
0x4001dec	        0x48895500	                    mov qword [rbp], rdx	       277	getchar.c	FUNCTION_5	ELSE_3
0x4001df0	          0x488928	                    mov qword [rax], rbp	       278	getchar.c	FUNCTION_5	ELSE_3
0x4001df3	    0x48892d000000	            mov qword [0x04001dfa], rbp 	       279	getchar.c	FUNCTION_5	ELSE_3
0x4001dfa	      0xe9e5feffff	                           jmp 0x4001ce4	       646	getchar.c	FUNCTION_22
0x4001dff	              0x90	                                     nop	       646	getchar.c	FUNCTION_22
0x4001e00	      0xbf24000000	                           mov edi, 0x24	       266	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x4001e05	    0x41bd14000000	                          mov r13d, 0x14	       267	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x4001e0b	            0xeba6	                           jmp 0x4001db3	       267	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x4001e0d	           0xf1f00	                         nop dword [rax]	       267	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x4001e10	        0x4c8d6f08	                      lea r13, [rdi + 8]	       253	getchar.c	FUNCTION_5	ELSE_2	IF_5	CALL_4
0x4001e14	      0x498d6c0500	                    lea rbp, [r13 + rax]	       253	getchar.c	FUNCTION_5	ELSE_2	IF_5	CALL_4
0x4001e19	          0x4889ef	                            mov rdi, rbp	       253	getchar.c	FUNCTION_5	ELSE_2	IF_5	CALL_4
0x4001e1c	      0xe800000000	                          call 0x4001e21	       253	getchar.c	FUNCTION_5	ELSE_2	IF_5	CALL_4
0x4001e21	        0x488d5001	                      lea rdx, [rax + 1]	        59	string3.h	FUNCTION_106	CALL_3
0x4001e25	          0x4889ee	                            mov rsi, rbp	        59	string3.h	FUNCTION_106	CALL_3
0x4001e28	          0x4c89ef	                            mov rdi, r13	        59	string3.h	FUNCTION_106	CALL_3
0x4001e2b	      0xe800000000	                          call 0x4001e30	        59	string3.h	FUNCTION_106	CALL_3
0x4001e30	      0xe959ffffff	                           jmp 0x4001d8e	        59	string3.h	FUNCTION_106	CALL_3
0x4001e35	           0xf1f00	                         nop dword [rax]	        59	string3.h	FUNCTION_106	CALL_3
0x4001e38	    0x488b05000000	            mov rax, qword [0x04001e3f] 	       260	getchar.c	FUNCTION_5	IF_6	CALL_6
0x4001e3f	        0x488d6808	                      lea rbp, [rax + 8]	       260	getchar.c	FUNCTION_5	IF_6	CALL_6
0x4001e43	          0x4889ef	                            mov rdi, rbp	       260	getchar.c	FUNCTION_5	IF_6	CALL_6
0x4001e46	      0xe800000000	                          call 0x4001e4b	       260	getchar.c	FUNCTION_5	IF_6	CALL_6
0x4001e4b	      0x488d7c0500	                    lea rdi, [rbp + rax]	       261	getchar.c	FUNCTION_5	IF_6	CALL_7
0x4001e50	          0x4889da	                            mov rdx, rbx	       261	getchar.c	FUNCTION_5	IF_6	CALL_7
0x4001e53	          0x4c89e6	                            mov rsi, r12	       261	getchar.c	FUNCTION_5	IF_6	CALL_7
0x4001e56	      0xe800000000	                          call 0x4001e5b	       261	getchar.c	FUNCTION_5	IF_6	CALL_7
0x4001e5b	    0x291d00000000	             sub dword [0x04001e61], ebx	       262	getchar.c	FUNCTION_5	IF_6
0x4001e61	      0xe97efeffff	                           jmp 0x4001ce4	       262	getchar.c	FUNCTION_5	IF_6
0x4001e66	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       262	getchar.c	FUNCTION_5	IF_6
0x4001e70	    0xc70500000000	               mov dword [0x04001e7a], 0	       244	getchar.c	FUNCTION_5	IF_3
0x4001e7a	    0x48c705000000	               mov qword [0x04001e85], 0	       245	getchar.c	FUNCTION_5	IF_3
0x4001e85	      0xe90affffff	                           jmp 0x4001d94	       245	getchar.c	FUNCTION_5	IF_3
0x4001e8a	            0x31ff	                            xor edi, edi	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x4001e8c	      0xba05000000	                              mov edx, 5	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x4001e91	      0xbe00000000	                              mov esi, 0	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x4001e96	      0xe800000000	                          call 0x4001e9b	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x4001e9b	          0x4889c7	                            mov rdi, rax	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x4001e9e	      0xe800000000	                          call 0x4001ea3	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x4001ea3	      0xe93cfeffff	                           jmp 0x4001ce4	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x4001ea8	      0xe800000000	                          call 0x4001ead	       646	getchar.c	FUNCTION_22
makemap	WHILE,0:ELSE,5:IF,25:DO,1:CALL,19:functions,0:SWITCH,1:FOR,6	610
0x400b140	            0x4157	                                push r15	      4764	getchar.c	ELSE_2	FUNCTION_82
0x400b142	            0x4156	                                push r14	      4764	getchar.c	ELSE_2	FUNCTION_82
0x400b144	          0x4989ff	                            mov r15, rdi	      4764	getchar.c	ELSE_2	FUNCTION_82
0x400b147	            0x4155	                                push r13	      4764	getchar.c	ELSE_2	FUNCTION_82
0x400b149	            0x4154	                                push r12	      4764	getchar.c	ELSE_2	FUNCTION_82
0x400b14b	              0x55	                                push rbp	      4764	getchar.c	ELSE_2	FUNCTION_82
0x400b14c	              0x53	                                push rbx	      4764	getchar.c	ELSE_2	FUNCTION_82
0x400b14d	        0x4883ec48	                           sub rsp, 0x48	      4764	getchar.c	ELSE_2	FUNCTION_82
0x400b151	    0x8b3d00000000	            mov edi, dword [0x0400b157] 	      3802	getchar.c	FUNCTION_68	IF_1
0x400b157	    0x64488b042528	                mov rax, qword fs:[0x28]	      4764	getchar.c	ELSE_2	FUNCTION_82
0x400b160	      0x4889442438	             mov qword [rsp + 0x38], rax	      4764	getchar.c	ELSE_2	FUNCTION_82
0x400b165	            0x31c0	                            xor eax, eax	      4764	getchar.c	ELSE_2	FUNCTION_82
0x400b167	      0x4889742410	             mov qword [rsp + 0x10], rsi	      4764	getchar.c	ELSE_2	FUNCTION_82
0x400b16c	            0x85ff	                           test edi, edi	      3802	getchar.c	FUNCTION_68	IF_1
0x400b16e	     0xf8454020000	                            je 0x400b3c8	      3802	getchar.c	FUNCTION_68	IF_1
0x400b174	          0x4531f6	                          xor r14d, r14d	      5023	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7
0x400b177	    0xc74424280000	               mov dword [rsp + 0x28], 0	      5023	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7
0x400b17f	        0x8b542428	            mov edx, dword [rsp + 0x28] 	      5023	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7
0x400b183	      0xb800000000	                              mov eax, 0	      5023	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7
0x400b188	      0xb900000000	                              mov ecx, 0	      5023	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7
0x400b18d	    0xc744242c0100	               mov dword [rsp + 0x2c], 1	      4764	getchar.c	ELSE_2	FUNCTION_82
0x400b195	    0x48c744242000	               mov qword [rsp + 0x20], 0	      4764	getchar.c	ELSE_2	FUNCTION_82
0x400b19e	            0x85d2	                           test edx, edx	      4764	getchar.c	ELSE_2	FUNCTION_82
0x400b1a0	        0x480f45c1	                         cmovne rax, rcx	      4764	getchar.c	ELSE_2	FUNCTION_82
0x400b1a4	      0x4889442418	             mov qword [rsp + 0x18], rax	      4764	getchar.c	ELSE_2	FUNCTION_82
0x400b1a9	        0x8b742428	            mov esi, dword [rsp + 0x28] 	      4783	getchar.c	ELSE_2	FUNCTION_82	FOR_1	FOR_2	IF_1
0x400b1ad	            0x85f6	                           test esi, esi	      4783	getchar.c	ELSE_2	FUNCTION_82	FOR_1	FOR_2	IF_1
0x400b1af	     0xf8404090000	                            je 0x400bab9	      4783	getchar.c	ELSE_2	FUNCTION_82	FOR_1	FOR_2	IF_1
0x400b1b5	    0x48837c242000	               cmp qword [rsp + 0x20], 0	      4785	getchar.c	ELSE_2	FUNCTION_82	FOR_1	FOR_2	IF_1	IF_2
0x400b1bb	            0x7567	                           jne 0x400b224	      4785	getchar.c	ELSE_2	FUNCTION_82	FOR_1	FOR_2	IF_1	IF_2
0x400b1bd	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4788	getchar.c	ELSE_2	FUNCTION_82	FOR_1	FOR_2	IF_1	IF_3
0x400b1c2	          0x4885c0	                           test rax, rax	      4788	getchar.c	ELSE_2	FUNCTION_82	FOR_1	FOR_2	IF_1	IF_3
0x400b1c5	     0xf84e9020000	                            je 0x400b4b4	      4788	getchar.c	ELSE_2	FUNCTION_82	FOR_1	FOR_2	IF_1	IF_3
0x400b1cb	    0x488b98c01100	          mov rbx, qword [rax + 0x11c0] 	      4789	getchar.c	ELSE_2	FUNCTION_82	FOR_1	FOR_2	IF_1	IF_3
0x400b1d2	          0x4885db	                           test rbx, rbx	      4804	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400b1d5	     0xf84d7010000	                            je 0x400b3b2	      4804	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400b1db	        0x837b28fe	cmp dword [rbx + 0x28], 0xfffffffffffffffe	      4807	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	IF_5
0x400b1df	     0xf84b3010000	                            je 0x400b398	      4807	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	IF_5
0x400b1e5	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	      4812	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	FOR_4
0x400b1e9	           0xfb602	                   movzx eax, byte [rdx]	      4812	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	FOR_4
0x400b1ec	            0x84c0	                             test al, al	      4812	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	FOR_4
0x400b1ee	            0x7518	                           jne 0x400b208	      4812	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	FOR_4
0x400b1f0	      0xe9e3000000	                           jmp 0x400b2d8	      4812	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	FOR_4
0x400b1f5	           0xf1f00	                         nop dword [rax]	      4812	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	FOR_4
0x400b1f8	         0xfb64201	               movzx eax, byte [rdx + 1]	      4812	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	FOR_4
0x400b1fc	        0x4883c201	                              add rdx, 1	      4812	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	FOR_4
0x400b200	            0x84c0	                             test al, al	      4812	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	FOR_4
0x400b202	     0xf84d0000000	                            je 0x400b2d8	      4812	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	FOR_4
0x400b208	            0x3c80	                            cmp al, 0x80	      4813	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	FOR_4	IF_6
0x400b20a	            0x75ec	                           jne 0x400b1f8	      4813	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	FOR_4	IF_6
0x400b20c	         0xfb64201	               movzx eax, byte [rdx + 1]	      4813	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	FOR_4	IF_6
0x400b210	            0x3cfd	                            cmp al, 0xfd	      4813	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	FOR_4	IF_6
0x400b212	            0x75e8	                           jne 0x400b1fc	      4813	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	FOR_4	IF_6
0x400b214	        0x807a0252	                cmp byte [rdx + 2], 0x52	      4814	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	FOR_4	IF_6
0x400b218	     0xf847a010000	                            je 0x400b398	      4814	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	FOR_4	IF_6
0x400b21e	        0x4883c201	                              add rdx, 1	      4812	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	FOR_4
0x400b222	            0xebd4	                           jmp 0x400b1f8	      4812	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	FOR_4
0x400b224	      0x8344242801	               add dword [rsp + 0x28], 1	      4780	getchar.c	ELSE_2	FUNCTION_82	FOR_1
0x400b229	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      4780	getchar.c	ELSE_2	FUNCTION_82	FOR_1
0x400b22d	          0x83f802	                              cmp eax, 2	      4780	getchar.c	ELSE_2	FUNCTION_82	FOR_1
0x400b230	     0xf8549ffffff	                           jne 0x400b17f	      4780	getchar.c	ELSE_2	FUNCTION_82	FOR_1
0x400b236	          0x4585f6	                         test r14d, r14d	      4961	getchar.c	FUNCTION_82	ELSE_2	IF_24
0x400b239	      0xb801000000	                              mov eax, 1	      4967	getchar.c	FUNCTION_82	ELSE_2
0x400b23e	            0x7523	                           jne 0x400b263	      4961	getchar.c	FUNCTION_82	ELSE_2	IF_24
0x400b240	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	      4968	getchar.c	FUNCTION_82	ELSE_2
0x400b245	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4968	getchar.c	FUNCTION_82	ELSE_2
0x400b24e	     0xf85ff070000	                           jne 0x400ba53	      4968	getchar.c	FUNCTION_82	ELSE_2
0x400b254	        0x4883c448	                           add rsp, 0x48	      4968	getchar.c	FUNCTION_82	ELSE_2
0x400b258	              0x5b	                                 pop rbx	      4968	getchar.c	FUNCTION_82	ELSE_2
0x400b259	              0x5d	                                 pop rbp	      4968	getchar.c	FUNCTION_82	ELSE_2
0x400b25a	            0x415c	                                 pop r12	      4968	getchar.c	FUNCTION_82	ELSE_2
0x400b25c	            0x415d	                                 pop r13	      4968	getchar.c	FUNCTION_82	ELSE_2
0x400b25e	            0x415e	                                 pop r14	      4968	getchar.c	FUNCTION_82	ELSE_2
0x400b260	            0x415f	                                 pop r15	      4968	getchar.c	FUNCTION_82	ELSE_2
0x400b262	              0xc3	                                     ret	      4968	getchar.c	FUNCTION_82	ELSE_2
0x400b263	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_28
0x400b265	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_28
0x400b26a	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_28
0x400b26f	          0x4c89ff	                            mov rdi, r15	        97	stdio2.h	CALL_28
0x400b272	      0xe800000000	                          call 0x400b277	        97	stdio2.h	CALL_28
0x400b277	            0x85c0	                           test eax, eax	      4962	getchar.c	FUNCTION_82	ELSE_2	IF_24	IF_25
0x400b279	            0x7850	                            js 0x400b2cb	      4962	getchar.c	FUNCTION_82	ELSE_2	IF_24	IF_25
0x400b27b	          0x4c89ff	                            mov rdi, r15	      4963	getchar.c	FUNCTION_82	ELSE_2	IF_24	IF_25	CALL_18
0x400b27e	      0xe800000000	                          call 0x400b283	      4963	getchar.c	FUNCTION_82	ELSE_2	IF_24	IF_25	CALL_18
0x400b283	            0x85c0	                           test eax, eax	      4963	getchar.c	FUNCTION_82	ELSE_2	IF_24	IF_25	CALL_18
0x400b285	            0x7844	                            js 0x400b2cb	      4963	getchar.c	FUNCTION_82	ELSE_2	IF_24	IF_25	CALL_18
0x400b287	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_28
0x400b289	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_28
0x400b28e	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_28
0x400b293	          0x4c89ff	                            mov rdi, r15	        97	stdio2.h	CALL_28
0x400b296	      0xe800000000	                          call 0x400b29b	        97	stdio2.h	CALL_28
0x400b29b	            0x85c0	                           test eax, eax	      4964	getchar.c	FUNCTION_82	ELSE_2	IF_24	IF_25
0x400b29d	            0x782c	                            js 0x400b2cb	      4964	getchar.c	FUNCTION_82	ELSE_2	IF_24	IF_25
0x400b29f	          0x4c89ff	                            mov rdi, r15	      4965	getchar.c	FUNCTION_82	ELSE_2	IF_24	IF_25	CALL_19
0x400b2a2	      0xe800000000	                          call 0x400b2a7	      4965	getchar.c	FUNCTION_82	ELSE_2	IF_24	IF_25	CALL_19
0x400b2a7	            0xf7d0	                                 not eax	      4904	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b2a9	          0xc1e81f	                           shr eax, 0x1f	      4904	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b2ac	            0xeb92	                           jmp 0x400b240	      4904	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b2ae	            0x6690	                                     nop	      4904	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b2b0	          0x4489ef	                           mov edi, r13d	      5030	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_8	IF_9	CALL_6
0x400b2b3	      0xe800000000	                          call 0x400b2b8	      5030	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_8	IF_9	CALL_6
0x400b2b8	          0x4c89fe	                            mov rsi, r15	      5030	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_8	IF_9	CALL_6
0x400b2bb	          0x4889c7	                            mov rdi, rax	      5030	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_8	IF_9	CALL_6
0x400b2be	      0xe800000000	                          call 0x400b2c3	      5030	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_8	IF_9	CALL_6
0x400b2c3	            0x85c0	                           test eax, eax	      5030	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_8	IF_9	CALL_6
0x400b2c5	     0xf891b040000	                           jns 0x400b6e6	      5030	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_8	IF_9	CALL_6
0x400b2cb	            0x31c0	                            xor eax, eax	      4953	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23
0x400b2cd	      0xe96effffff	                           jmp 0x400b240	      4953	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23
0x400b2d2	    0x660f1f440000	                    nop word [rax + rax]	      4953	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23
0x400b2d8	        0x8b442428	            mov eax, dword [rsp + 0x28] 	      4825	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	IF_8
0x400b2dc	            0x85c0	                           test eax, eax	      4825	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	IF_8
0x400b2de	     0xf8474070000	                            je 0x400ba58	      4825	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	IF_8
0x400b2e4	          0x8b4324	            mov eax, dword [rbx + 0x24] 	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b2e7	          0x83f818	                           cmp eax, 0x18	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b2ea	     0xf84d0010000	                            je 0x400b4c0	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b2f0	     0xf8ff1000000	                            jg 0x400b3e7	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b2f6	          0x83f805	                              cmp eax, 5	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b2f9	     0xf8414070000	                            je 0x400ba13	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b2ff	     0xf8f33010000	                            jg 0x400b438	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b305	          0x83f802	                              cmp eax, 2	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b308	     0xf8488060000	                            je 0x400b996	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b30e	     0xf8efe050000	                           jle 0x400b912	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b314	          0x83f803	                              cmp eax, 3	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b317	     0xf8478050000	                            je 0x400b895	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b31d	          0x83f804	                              cmp eax, 4	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b320	     0xf8530060000	                           jne 0x400b956	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b326	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b32b	    0x41b86f000000	                           mov r8d, 0x6f	      4843	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b331	          0x4531e4	                          xor r12d, r12d	      4824	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400b334	            0x31ed	                            xor ebp, ebp	      4823	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400b336	          0x4589c5	                           mov r13d, r8d	      4823	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400b339	      0x4889442408	                mov qword [rsp + 8], rax	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b33e	      0xe995010000	                           jmp 0x400b4d8	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b343	       0xf1f440000	                   nop dword [rax + rax]	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b348	          0x4c89fe	                            mov rsi, r15	      4950	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_15
0x400b34b	      0xbf20000000	                           mov edi, 0x20	      4950	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_15
0x400b350	      0xe800000000	                          call 0x400b355	      4950	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_15
0x400b355	            0x85c0	                           test eax, eax	      4950	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_15
0x400b357	     0xf886effffff	                            js 0x400b2cb	      4950	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_15
0x400b35d	        0x488b7310	            mov rsi, qword [rbx + 0x10] 	      4951	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_16
0x400b361	      0xba01000000	                              mov edx, 1	      4951	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_16
0x400b366	          0x4c89ff	                            mov rdi, r15	      4951	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_16
0x400b369	      0xe800000000	                          call 0x400b36e	      4951	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_16
0x400b36e	            0x85c0	                           test eax, eax	      4951	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_16
0x400b370	     0xf8455ffffff	                            je 0x400b2cb	      4951	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_16
0x400b376	          0x4c89ff	                            mov rdi, r15	      4952	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_17
0x400b379	      0xe800000000	                          call 0x400b37e	      4952	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_17
0x400b37e	            0x85c0	                           test eax, eax	      4952	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_17
0x400b380	     0xf8845ffffff	                            js 0x400b2cb	      4952	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_17
0x400b386	          0x4189ed	                           mov r13d, ebp	      4952	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_17
0x400b389	          0x4489e5	                           mov ebp, r12d	      4955	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1
0x400b38c	          0x4531e4	                          xor r12d, r12d	      4956	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1
0x400b38f	          0x4584ed	                         test r13b, r13b	      4957	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1
0x400b392	     0xf8540010000	                           jne 0x400b4d8	      4957	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1
0x400b398	          0x488b1b	                    mov rbx, qword [rbx]	      4804	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400b39b	          0x4885db	                           test rbx, rbx	      4804	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400b39e	     0xf8537feffff	                           jne 0x400b1db	      4804	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400b3a4	    0x817c242c0001	          cmp dword [rsp + 0x2c], 0x100 	      4781	getchar.c	ELSE_2	FUNCTION_82	FOR_1	FOR_2
0x400b3ac	     0xf8472feffff	                            je 0x400b224	      4781	getchar.c	ELSE_2	FUNCTION_82	FOR_1	FOR_2
0x400b3b2	    0x488344242001	               add qword [rsp + 0x20], 1	      4781	getchar.c	ELSE_2	FUNCTION_82	FOR_1	FOR_2
0x400b3b8	      0x8344242c01	               add dword [rsp + 0x2c], 1	      4781	getchar.c	ELSE_2	FUNCTION_82	FOR_1	FOR_2
0x400b3bd	      0xe9e7fdffff	                           jmp 0x400b1a9	      4781	getchar.c	ELSE_2	FUNCTION_82	FOR_1	FOR_2
0x400b3c2	    0x660f1f440000	                    nop word [rax + rax]	      4781	getchar.c	ELSE_2	FUNCTION_82	FOR_1	FOR_2
0x400b3c8	      0xba00000000	                              mov edx, 0	        90	string3.h	FUNCTION_108	CALL_6
0x400b3cd	      0xb900010000	                          mov ecx, 0x100	        90	string3.h	FUNCTION_108	CALL_6
0x400b3d2	    0xc70500000000	               mov dword [0x0400b3dc], 1	      3805	getchar.c	FUNCTION_68	IF_1
0x400b3dc	          0x4889d7	                            mov rdi, rdx	        90	string3.h	FUNCTION_108	CALL_6
0x400b3df	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_108	CALL_6
0x400b3e2	      0xe98dfdffff	                           jmp 0x400b174	        90	string3.h	FUNCTION_108	CALL_6
0x400b3e7	      0x3d03100000	                         cmp eax, 0x1003	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b3ec	     0xf8441060000	                            je 0x400ba33	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b3f2	            0x7e7f	                           jle 0x400b473	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b3f4	      0x3d06100000	                         cmp eax, 0x1006	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b3f9	     0xf8477050000	                            je 0x400b976	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b3ff	     0xf8e5b040000	                           jle 0x400b860	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b405	      0x3d07100000	                         cmp eax, 0x1007	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b40a	     0xf84b0000000	                            je 0x400b4c0	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b410	      0x3d00200000	                         cmp eax, 0x2000	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b415	     0xf853b050000	                           jne 0x400b956	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b41b	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b420	    0x41b874000000	                           mov r8d, 0x74	      4900	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b426	          0x4531e4	                          xor r12d, r12d	      4824	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400b429	            0x31ed	                            xor ebp, ebp	      4823	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400b42b	          0x4589c5	                           mov r13d, r8d	      4823	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400b42e	      0x4889442408	                mov qword [rsp + 8], rax	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b433	      0xe9a0000000	                           jmp 0x400b4d8	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b438	          0x83f807	                              cmp eax, 7	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b43b	     0xf84af050000	                            je 0x400b9f0	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b441	     0xf8c89050000	                            jl 0x400b9d0	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b447	          0x83f808	                              cmp eax, 8	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b44a	     0xf84a5040000	                            je 0x400b8f5	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b450	          0x83f810	                           cmp eax, 0x10	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b453	     0xf85fd040000	                           jne 0x400b956	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b459	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b45e	    0x41b869000000	                           mov r8d, 0x69	      4894	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b464	          0x4531e4	                          xor r12d, r12d	      4824	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400b467	            0x31ed	                            xor ebp, ebp	      4823	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400b469	          0x4589c5	                           mov r13d, r8d	      4823	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400b46c	      0x4889442408	                mov qword [rsp + 8], rax	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b471	            0xeb65	                           jmp 0x400b4d8	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b473	      0x3d00100000	                         cmp eax, 0x1000	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b478	     0xf8435050000	                            je 0x400b9b3	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b47e	     0xf8eb0040000	                           jle 0x400b934	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b484	      0x3d01100000	                         cmp eax, 0x1001	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b489	     0xf8446040000	                            je 0x400b8d5	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b48f	      0x3d02100000	                         cmp eax, 0x1002	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b494	     0xf85bc040000	                           jne 0x400b956	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b49a	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b49f	    0x41b876000000	                           mov r8d, 0x76	      4858	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b4a5	          0x4531e4	                          xor r12d, r12d	      4824	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400b4a8	            0x31ed	                            xor ebp, ebp	      4823	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400b4aa	          0x4589c5	                           mov r13d, r8d	      4823	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400b4ad	      0x4889442408	                mov qword [rsp + 8], rax	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b4b2	            0xeb24	                           jmp 0x400b4d8	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b4b4	    0x488b1d000000	            mov rbx, qword [0x0400b4bb] 	      4792	getchar.c	ELSE_2	FUNCTION_82	FOR_1	FOR_2	IF_1	ELSE_1
0x400b4bb	      0xe912fdffff	                           jmp 0x400b1d2	      4792	getchar.c	ELSE_2	FUNCTION_82	FOR_1	FOR_2	IF_1	ELSE_1
0x400b4c0	          0x4531c0	                            xor r8d, r8d	      4822	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400b4c3	    0x48c744240800	                  mov qword [rsp + 8], 0	      4826	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	IF_8
0x400b4cc	          0x4531e4	                          xor r12d, r12d	      4824	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400b4cf	            0x31ed	                            xor ebp, ebp	      4823	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400b4d1	          0x4589c5	                           mov r13d, r8d	      4823	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400b4d4	         0xf1f4000	                         nop dword [rax]	      4823	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400b4d8	          0x4585f6	                         test r14d, r14d	      4910	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10
0x400b4db	            0x7573	                           jne 0x400b550	      4910	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10
0x400b4dd	        0x488b4b10	            mov rcx, qword [rbx + 0x10] 	      4912	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_11
0x400b4e1	           0xfb601	                   movzx eax, byte [rcx]	      4912	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_11
0x400b4e4	            0x84c0	                             test al, al	      4912	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_11
0x400b4e6	     0xf85f4020000	                           jne 0x400b7e0	      4912	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_11
0x400b4ec	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_28
0x400b4ee	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_28
0x400b4f3	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_28
0x400b4f8	          0x4c89ff	                            mov rdi, r15	        97	stdio2.h	CALL_28
0x400b4fb	      0xe800000000	                          call 0x400b500	        97	stdio2.h	CALL_28
0x400b500	            0x85c0	                           test eax, eax	      4921	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_13	IF_14
0x400b502	     0xf88c3fdffff	                            js 0x400b2cb	      4921	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_13	IF_14
0x400b508	          0x4c89ff	                            mov rdi, r15	      4922	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_13	IF_14	CALL_4
0x400b50b	      0xe800000000	                          call 0x400b510	      4922	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_13	IF_14	CALL_4
0x400b510	            0x85c0	                           test eax, eax	      4922	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_13	IF_14	CALL_4
0x400b512	     0xf88b3fdffff	                            js 0x400b2cb	      4922	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_13	IF_14	CALL_4
0x400b518	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_28
0x400b51a	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_28
0x400b51f	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_28
0x400b524	          0x4c89ff	                            mov rdi, r15	        97	stdio2.h	CALL_28
0x400b527	      0xe800000000	                          call 0x400b52c	        97	stdio2.h	CALL_28
0x400b52c	            0x85c0	                           test eax, eax	      4923	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_13	IF_14
0x400b52e	     0xf8897fdffff	                            js 0x400b2cb	      4923	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_13	IF_14
0x400b534	          0x4c89ff	                            mov rdi, r15	      4924	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_13	IF_14	CALL_5
0x400b537	      0xe800000000	                          call 0x400b53c	      4924	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_13	IF_14	CALL_5
0x400b53c	            0x85c0	                           test eax, eax	      4924	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_13	IF_14	CALL_5
0x400b53e	     0xf8887fdffff	                            js 0x400b2cb	      4924	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_13	IF_14	CALL_5
0x400b544	    0x41be01000000	                             mov r14d, 1	      4924	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_13	IF_14	CALL_5
0x400b54a	    0x660f1f440000	                    nop word [rax + rax]	      4924	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_13	IF_14	CALL_5
0x400b550	          0x4584ed	                         test r13b, r13b	      4928	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_15	CALL_6
0x400b553	     0xf8507020000	                           jne 0x400b760	      4928	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_15	CALL_6
0x400b559	          0x8b4b28	            mov ecx, dword [rbx + 0x28] 	      4930	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_16
0x400b55c	            0x85c9	                           test ecx, ecx	      4930	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_16
0x400b55e	            0x741c	                            je 0x400b57c	      4930	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_16
0x400b560	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_28
0x400b562	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_28
0x400b567	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_28
0x400b56c	          0x4c89ff	                            mov rdi, r15	        97	stdio2.h	CALL_28
0x400b56f	      0xe800000000	                          call 0x400b574	        97	stdio2.h	CALL_28
0x400b574	            0x85c0	                           test eax, eax	      4930	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_16
0x400b576	     0xf884ffdffff	                            js 0x400b2cb	      4930	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_16
0x400b57c	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      4932	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_17	CALL_7
0x400b581	          0x4c89fe	                            mov rsi, r15	      4932	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_17	CALL_7
0x400b584	      0xe800000000	                          call 0x400b589	      4932	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_17	CALL_7
0x400b589	            0x85c0	                           test eax, eax	      4932	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_17	CALL_7
0x400b58b	     0xf883afdffff	                            js 0x400b2cb	      4932	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_17	CALL_7
0x400b591	    0x48837c241000	               cmp qword [rsp + 0x10], 0	      4934	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_18	CALL_8
0x400b597	            0x7415	                            je 0x400b5ae	      4934	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_18	CALL_8
0x400b599	          0x4c89fe	                            mov rsi, r15	      4934	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_18	CALL_8
0x400b59c	      0xbf00000000	                              mov edi, 0	      4934	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_18	CALL_8
0x400b5a1	      0xe800000000	                          call 0x400b5a6	      4934	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_18	CALL_8
0x400b5a6	            0x85c0	                           test eax, eax	      4934	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_18	CALL_8
0x400b5a8	     0xf881dfdffff	                            js 0x400b2cb	      4934	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_18	CALL_8
0x400b5ae	        0x807b2d00	                cmp byte [rbx + 0x2d], 0	      4936	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_19	CALL_9
0x400b5b2	     0xf8508020000	                           jne 0x400b7c0	      4936	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_19	CALL_9
0x400b5b8	        0x807b2c00	                cmp byte [rbx + 0x2c], 0	      4938	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_20	CALL_10
0x400b5bc	     0xf85be010000	                           jne 0x400b780	      4938	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_20	CALL_10
0x400b5c2	        0x837b28fe	cmp dword [rbx + 0x28], 0xfffffffffffffffe	      4941	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_21
0x400b5c6	     0xf84d3010000	                            je 0x400b79f	      4941	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_21
0x400b5cc	        0x807b2e00	                cmp byte [rbx + 0x2e], 0	      4944	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_22	CALL_12
0x400b5d0	            0x7415	                            je 0x400b5e7	      4944	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_22	CALL_12
0x400b5d2	          0x4c89fe	                            mov rsi, r15	      4944	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_22	CALL_12
0x400b5d5	      0xbf00000000	                              mov edi, 0	      4944	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_22	CALL_12
0x400b5da	      0xe800000000	                          call 0x400b5df	      4944	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_22	CALL_12
0x400b5df	            0x85c0	                           test eax, eax	      4944	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_22	CALL_12
0x400b5e1	     0xf88e4fcffff	                            js 0x400b2cb	      4944	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_22	CALL_12
0x400b5e7	          0x4c89fe	                            mov rsi, r15	      4948	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_13
0x400b5ea	      0xbf20000000	                           mov edi, 0x20	      4948	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_13
0x400b5ef	      0xe800000000	                          call 0x400b5f4	      4948	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_13
0x400b5f4	            0x85c0	                           test eax, eax	      4948	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_13
0x400b5f6	     0xf88cffcffff	                            js 0x400b2cb	      4948	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_13
0x400b5fc	        0x488b4308	                mov rax, qword [rbx + 8]	      4949	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23	CALL_14
0x400b600	      0x4889442430	             mov qword [rsp + 0x30], rax	      4979	getchar.c	FUNCTION_83
0x400b605	          0x803800	                       cmp byte [rax], 0	      4991	getchar.c	FUNCTION_83	FOR_1
0x400b608	            0x7522	                           jne 0x400b62c	      4991	getchar.c	FUNCTION_83	FOR_1
0x400b60a	      0xe939fdffff	                           jmp 0x400b348	      4991	getchar.c	FUNCTION_83	FOR_1
0x400b60f	              0x90	                                     nop	      4991	getchar.c	FUNCTION_83	FOR_1
0x400b610	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      5004	getchar.c	FUNCTION_83	FOR_1	IF_3
0x400b615	        0x4883e801	                              sub rax, 1	      5004	getchar.c	FUNCTION_83	FOR_1	IF_3
0x400b619	        0x488d5001	                      lea rdx, [rax + 1]	      4991	getchar.c	FUNCTION_83	FOR_1
0x400b61d	      0x4889542430	             mov qword [rsp + 0x30], rdx	      4991	getchar.c	FUNCTION_83	FOR_1
0x400b622	        0x80780100	                   cmp byte [rax + 1], 0	      4991	getchar.c	FUNCTION_83	FOR_1
0x400b626	     0xf841cfdffff	                            je 0x400b348	      4991	getchar.c	FUNCTION_83	FOR_1
0x400b62c	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      4998	getchar.c	FUNCTION_83	FOR_1	CALL_1
0x400b631	      0xe800000000	                          call 0x400b636	      4998	getchar.c	FUNCTION_83	FOR_1	CALL_1
0x400b636	          0x4885c0	                           test rax, rax	      4999	getchar.c	FUNCTION_83	FOR_1	IF_3
0x400b639	          0x4989c5	                            mov r13, rax	      4998	getchar.c	FUNCTION_83	FOR_1	CALL_1
0x400b63c	            0x7422	                            je 0x400b660	      4999	getchar.c	FUNCTION_83	FOR_1	IF_3
0x400b63e	      0x410fb67d00	                   movzx edi, byte [r13]	      5001	getchar.c	FUNCTION_83	FOR_1	IF_3	WHILE_1
0x400b643	          0x4084ff	                           test dil, dil	      5001	getchar.c	FUNCTION_83	FOR_1	IF_3	WHILE_1
0x400b646	            0x74c8	                            je 0x400b610	      5001	getchar.c	FUNCTION_83	FOR_1	IF_3	WHILE_1
0x400b648	          0x4c89fe	                            mov rsi, r15	      5002	getchar.c	FUNCTION_83	FOR_1	IF_3	WHILE_1	IF_4	CALL_2
0x400b64b	        0x4983c501	                              add r13, 1	      5002	getchar.c	FUNCTION_83	FOR_1	IF_3	WHILE_1	IF_4	CALL_2
0x400b64f	      0xe800000000	                          call 0x400b654	      5002	getchar.c	FUNCTION_83	FOR_1	IF_3	WHILE_1	IF_4	CALL_2
0x400b654	            0x85c0	                           test eax, eax	      5002	getchar.c	FUNCTION_83	FOR_1	IF_3	WHILE_1	IF_4	CALL_2
0x400b656	            0x79e6	                           jns 0x400b63e	      5002	getchar.c	FUNCTION_83	FOR_1	IF_3	WHILE_1	IF_4	CALL_2
0x400b658	            0x31c0	                            xor eax, eax	      4953	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23
0x400b65a	      0xe9e1fbffff	                           jmp 0x400b240	      4953	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23
0x400b65f	              0x90	                                     nop	      4953	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23
0x400b660	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      5009	getchar.c	FUNCTION_83	FOR_1
0x400b665	        0x440fb628	                  movzx r13d, byte [rax]	      5009	getchar.c	FUNCTION_83	FOR_1
0x400b669	    0x4181fd800000	                          cmp r13d, 0x80	      5014	getchar.c	FUNCTION_83	FOR_1	IF_5
0x400b670	            0x7547	                           jne 0x400b6b9	      5014	getchar.c	FUNCTION_83	FOR_1	IF_5
0x400b672	         0xfb65001	               movzx edx, byte [rax + 1]	      5017	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_6
0x400b676	            0x31c9	                            xor ecx, ecx	      5017	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_6
0x400b678	            0x31f6	                            xor esi, esi	      5016	getchar.c	FUNCTION_83	FOR_1	IF_5
0x400b67a	          0x80fafc	                            cmp dl, 0xfc	      5017	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_6
0x400b67d	     0xf84ad000000	                            je 0x400b730	      5017	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_6
0x400b683	          0x80fafe	                            cmp dl, 0xfe	      5025	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7	CALL_3
0x400b686	            0x7420	                            je 0x400b6a8	      5025	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7	CALL_3
0x400b688	          0x80faff	                            cmp dl, 0xff	      5025	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7	CALL_3
0x400b68b	     0xf84bf010000	                            je 0x400b850	      5025	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7	CALL_3
0x400b691	      0x440fb66802	              movzx r13d, byte [rax + 2]	      5025	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7	CALL_3
0x400b696	        0x41c1e508	                             shl r13d, 8	      5025	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7	CALL_3
0x400b69a	          0x4101d5	                           add r13d, edx	      5025	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7	CALL_3
0x400b69d	          0x41f7dd	                                neg r13d	      5025	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7	CALL_3
0x400b6a0	          0x4489ea	                           mov edx, r13d	      5025	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7	CALL_3
0x400b6a3	          0xc1ea1f	                           shr edx, 0x1f	      5025	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7	CALL_3
0x400b6a6	             0x9d1	                             or ecx, edx	      5025	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7	CALL_3
0x400b6a8	        0x4883c002	                              add rax, 2	      5026	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7
0x400b6ac	      0x4889442430	             mov qword [rsp + 0x30], rax	      5026	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7
0x400b6b1	            0x84c9	                             test cl, cl	      5028	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_8	CALL_4
0x400b6b3	     0xf85f7fbffff	                           jne 0x400b2b0	      5028	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_8	CALL_4
0x400b6b9	        0x4183fd0a	                           cmp r13d, 0xa	      5040	getchar.c	FUNCTION_83	FOR_1	IF_10
0x400b6bd	            0x7451	                            je 0x400b710	      5040	getchar.c	FUNCTION_83	FOR_1	IF_10
0x400b6bf	          0x4489e8	                           mov eax, r13d	      5074	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16
0x400b6c2	          0x83e0bf	                     and eax, 0xffffffbf	      5074	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16
0x400b6c5	          0x83f83c	                           cmp eax, 0x3c	      5074	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16
0x400b6c8	            0x7426	                            je 0x400b6f0	      5074	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16
0x400b6ca	        0x418d45df	                   lea eax, [r13 - 0x21]	      5074	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16
0x400b6ce	          0x83f85d	                           cmp eax, 0x5d	      5074	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16
0x400b6d1	            0x771d	                            ja 0x400b6f0	      5074	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16
0x400b6d3	          0x4c89fe	                            mov rsi, r15	      5079	getchar.c	FUNCTION_83	FOR_1	IF_18	CALL_11
0x400b6d6	          0x4489ef	                           mov edi, r13d	      5079	getchar.c	FUNCTION_83	FOR_1	IF_18	CALL_11
0x400b6d9	      0xe800000000	                          call 0x400b6de	      5079	getchar.c	FUNCTION_83	FOR_1	IF_18	CALL_11
0x400b6de	            0x85c0	                           test eax, eax	      5079	getchar.c	FUNCTION_83	FOR_1	IF_18	CALL_11
0x400b6e0	     0xf88e5fbffff	                            js 0x400b2cb	      5079	getchar.c	FUNCTION_83	FOR_1	IF_18	CALL_11
0x400b6e6	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      5079	getchar.c	FUNCTION_83	FOR_1	IF_18	CALL_11
0x400b6eb	      0xe929ffffff	                           jmp 0x400b619	      5079	getchar.c	FUNCTION_83	FOR_1	IF_18	CALL_11
0x400b6f0	          0x4c89fe	                            mov rsi, r15	      5076	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16	IF_17	CALL_10
0x400b6f3	      0xbf16000000	                           mov edi, 0x16	      5076	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16	IF_17	CALL_10
0x400b6f8	      0xe800000000	                          call 0x400b6fd	      5076	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16	IF_17	CALL_10
0x400b6fd	            0x85c0	                           test eax, eax	      5076	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16	IF_17	CALL_10
0x400b6ff	            0x79d2	                           jns 0x400b6d3	      5076	getchar.c	FUNCTION_83	FOR_1	ELSE_2	IF_16	IF_17	CALL_10
0x400b701	            0x31c0	                            xor eax, eax	      4953	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23
0x400b703	      0xe938fbffff	                           jmp 0x400b240	      4953	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23
0x400b708	     0xf1f84000000	                   nop dword [rax + rax]	      4953	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23
0x400b710	            0x31c0	                            xor eax, eax	        97	stdio2.h	CALL_28
0x400b712	      0xba00000000	                              mov edx, 0	        97	stdio2.h	CALL_28
0x400b717	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	CALL_28
0x400b71c	          0x4c89ff	                            mov rdi, r15	        97	stdio2.h	CALL_28
0x400b71f	      0xe800000000	                          call 0x400b724	        97	stdio2.h	CALL_28
0x400b724	            0x85c0	                           test eax, eax	      5049	getchar.c	FUNCTION_83	FOR_1	IF_10	ELSE_1	IF_13
0x400b726	            0x79be	                           jns 0x400b6e6	      5049	getchar.c	FUNCTION_83	FOR_1	IF_10	ELSE_1	IF_13
0x400b728	            0x31c0	                            xor eax, eax	      4953	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23
0x400b72a	      0xe911fbffff	                           jmp 0x400b240	      4953	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23
0x400b72f	              0x90	                                     nop	      4953	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23
0x400b730	        0x488d7803	                      lea rdi, [rax + 3]	      5020	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_6
0x400b734	         0xfb67002	               movzx esi, byte [rax + 2]	      5019	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_6
0x400b738	      0x48897c2430	             mov qword [rsp + 0x30], rdi	      5020	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_6
0x400b73d	         0xfb65003	               movzx edx, byte [rax + 3]	      5021	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_6
0x400b741	    0x81fa80000000	                           cmp edx, 0x80	      5023	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7
0x400b747	     0xf845b030000	                            je 0x400baa8	      5023	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7
0x400b74d	            0x85f6	                           test esi, esi	      5023	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7
0x400b74f	          0x4189d5	                           mov r13d, edx	      5023	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7
0x400b752	           0xf95c1	                                setne cl	      5023	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7
0x400b755	      0xe957ffffff	                           jmp 0x400b6b1	      5023	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7
0x400b75a	    0x660f1f440000	                    nop word [rax + rax]	      5023	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7
0x400b760	        0x410fb6fd	                         movzx edi, r13b	      4928	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_15	CALL_6
0x400b764	          0x4c89fe	                            mov rsi, r15	      4928	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_15	CALL_6
0x400b767	      0xe800000000	                          call 0x400b76c	      4928	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_15	CALL_6
0x400b76c	            0x85c0	                           test eax, eax	      4928	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_15	CALL_6
0x400b76e	     0xf89e5fdffff	                           jns 0x400b559	      4928	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_15	CALL_6
0x400b774	            0x31c0	                            xor eax, eax	      4953	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23
0x400b776	      0xe9c5faffff	                           jmp 0x400b240	      4953	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23
0x400b77b	       0xf1f440000	                   nop dword [rax + rax]	      4953	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23
0x400b780	          0x4c89fe	                            mov rsi, r15	      4938	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_20	CALL_10
0x400b783	      0xbf00000000	                              mov edi, 0	      4938	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_20	CALL_10
0x400b788	      0xe800000000	                          call 0x400b78d	      4938	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_20	CALL_10
0x400b78d	            0x85c0	                           test eax, eax	      4938	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_20	CALL_10
0x400b78f	     0xf8836fbffff	                            js 0x400b2cb	      4938	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_20	CALL_10
0x400b795	        0x837b28fe	cmp dword [rbx + 0x28], 0xfffffffffffffffe	      4941	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_21
0x400b799	     0xf852dfeffff	                           jne 0x400b5cc	      4941	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_21
0x400b79f	          0x4c89fe	                            mov rsi, r15	      4942	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_21	CALL_11
0x400b7a2	      0xbf00000000	                              mov edi, 0	      4942	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_21	CALL_11
0x400b7a7	      0xe800000000	                          call 0x400b7ac	      4942	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_21	CALL_11
0x400b7ac	            0x85c0	                           test eax, eax	      4942	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_21	CALL_11
0x400b7ae	     0xf8918feffff	                           jns 0x400b5cc	      4942	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_21	CALL_11
0x400b7b4	            0x31c0	                            xor eax, eax	      4953	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23
0x400b7b6	      0xe985faffff	                           jmp 0x400b240	      4953	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23
0x400b7bb	       0xf1f440000	                   nop dword [rax + rax]	      4953	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23
0x400b7c0	          0x4c89fe	                            mov rsi, r15	      4936	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_19	CALL_9
0x400b7c3	      0xbf00000000	                              mov edi, 0	      4936	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_19	CALL_9
0x400b7c8	      0xe800000000	                          call 0x400b7cd	      4936	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_19	CALL_9
0x400b7cd	            0x85c0	                           test eax, eax	      4936	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_19	CALL_9
0x400b7cf	     0xf89e3fdffff	                           jns 0x400b5b8	      4936	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_19	CALL_9
0x400b7d5	            0x31c0	                            xor eax, eax	      4953	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23
0x400b7d7	      0xe964faffff	                           jmp 0x400b240	      4953	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23
0x400b7dc	         0xf1f4000	                         nop dword [rax]	      4953	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_23
0x400b7e0	        0x488b7308	                mov rsi, qword [rbx + 8]	      4916	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6
0x400b7e4	           0xfb616	                   movzx edx, byte [rsi]	      4916	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6
0x400b7e7	            0x84d2	                             test dl, dl	      4916	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6
0x400b7e9	            0x742c	                            je 0x400b817	      4916	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6
0x400b7eb	    0x41b901000000	                              mov r9d, 1	      4916	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6
0x400b7f1	     0xf1f80000000	                         nop dword [rax]	      4916	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6
0x400b7f8	          0x80fa80	                            cmp dl, 0x80	      4916	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6
0x400b7fb	        0x400f94c7	                                sete dil	      4916	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6
0x400b7ff	          0x80fa0a	                             cmp dl, 0xa	      4916	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6
0x400b802	           0xf94c2	                                 sete dl	      4916	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6
0x400b805	          0x4008d7	                              or dil, dl	      4916	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6
0x400b808	        0x450f45f1	                        cmovne r14d, r9d	      4916	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6
0x400b80c	        0x4883c601	                              add rsi, 1	      4916	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6
0x400b810	           0xfb616	                   movzx edx, byte [rsi]	      4916	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6
0x400b813	            0x84d2	                             test dl, dl	      4916	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6
0x400b815	            0x75e1	                           jne 0x400b7f8	      4916	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6
0x400b817	      0xbe01000000	                              mov esi, 1	      4916	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6
0x400b81c	         0xf1f4000	                         nop dword [rax]	      4916	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6
0x400b820	            0x3c80	                            cmp al, 0x80	      4916	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6
0x400b822	           0xf94c2	                                 sete dl	      4916	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6
0x400b825	            0x3c0a	                             cmp al, 0xa	      4916	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6
0x400b827	           0xf94c0	                                 sete al	      4916	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6
0x400b82a	             0x8c2	                               or dl, al	      4916	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6
0x400b82c	        0x440f45f6	                        cmovne r14d, esi	      4916	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6
0x400b830	        0x4883c101	                              add rcx, 1	      4916	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6
0x400b834	           0xfb601	                   movzx eax, byte [rcx]	      4916	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6
0x400b837	            0x84c0	                             test al, al	      4916	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6
0x400b839	            0x75e5	                           jne 0x400b820	      4916	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	ELSE_5	FOR_5	FOR_6
0x400b83b	          0x4585f6	                         test r14d, r14d	      4919	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_13
0x400b83e	     0xf840cfdffff	                            je 0x400b550	      4919	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_13
0x400b844	      0xe9a3fcffff	                           jmp 0x400b4ec	      4919	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_13
0x400b849	     0xf1f80000000	                         nop dword [rax]	      4919	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	DO_1	IF_10	IF_13
0x400b850	      0xb901000000	                              mov ecx, 1	      5025	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7	CALL_3
0x400b855	    0x41bd01a7ffff	                    mov r13d, 0xffffa701	      5025	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7	CALL_3
0x400b85b	      0xe948feffff	                           jmp 0x400b6a8	      5025	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7	CALL_3
0x400b860	      0x3d04100000	                         cmp eax, 0x1004	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b865	            0x744e	                            je 0x400b8b5	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b867	      0x3d05100000	                         cmp eax, 0x1005	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b86c	     0xf85e4000000	                           jne 0x400b956	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b872	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b877	    0x41b86e000000	                           mov r8d, 0x6e	      4878	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b87d	    0x41bc6f000000	                          mov r12d, 0x6f	      4880	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b883	      0xbd73000000	                           mov ebp, 0x73	      4879	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b888	          0x4589c5	                           mov r13d, r8d	      4879	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b88b	      0x4889442408	                mov qword [rsp + 8], rax	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b890	      0xe943fcffff	                           jmp 0x400b4d8	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b895	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b89a	    0x41b86e000000	                           mov r8d, 0x6e	      4846	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b8a0	          0x4531e4	                          xor r12d, r12d	      4824	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400b8a3	      0xbd78000000	                           mov ebp, 0x78	      4847	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b8a8	          0x4589c5	                           mov r13d, r8d	      4847	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b8ab	      0x4889442408	                mov qword [rsp + 8], rax	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b8b0	      0xe923fcffff	                           jmp 0x400b4d8	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b8b5	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b8ba	    0x41b873000000	                           mov r8d, 0x73	      4865	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b8c0	          0x4531e4	                          xor r12d, r12d	      4824	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400b8c3	      0xbd6f000000	                           mov ebp, 0x6f	      4866	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b8c8	          0x4589c5	                           mov r13d, r8d	      4866	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b8cb	      0x4889442408	                mov qword [rsp + 8], rax	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b8d0	      0xe903fcffff	                           jmp 0x400b4d8	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b8d5	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b8da	    0x41b86e000000	                           mov r8d, 0x6e	      4850	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b8e0	          0x4531e4	                          xor r12d, r12d	      4824	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400b8e3	      0xbd73000000	                           mov ebp, 0x73	      4851	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b8e8	          0x4589c5	                           mov r13d, r8d	      4851	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b8eb	      0x4889442408	                mov qword [rsp + 8], rax	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b8f0	      0xe9e3fbffff	                           jmp 0x400b4d8	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b8f5	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b8fa	    0x41b863000000	                           mov r8d, 0x63	      4891	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b900	          0x4531e4	                          xor r12d, r12d	      4824	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400b903	            0x31ed	                            xor ebp, ebp	      4823	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400b905	          0x4589c5	                           mov r13d, r8d	      4823	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400b908	      0x4889442408	                mov qword [rsp + 8], rax	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b90d	      0xe9c6fbffff	                           jmp 0x400b4d8	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b912	          0x83f801	                              cmp eax, 1	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b915	            0x753f	                           jne 0x400b956	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b917	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b91c	    0x41b86e000000	                           mov r8d, 0x6e	      4834	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b922	          0x4531e4	                          xor r12d, r12d	      4824	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400b925	            0x31ed	                            xor ebp, ebp	      4823	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400b927	          0x4589c5	                           mov r13d, r8d	      4823	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400b92a	      0x4889442408	                mov qword [rsp + 8], rax	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b92f	      0xe9a4fbffff	                           jmp 0x400b4d8	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b934	          0x83f820	                           cmp eax, 0x20	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b937	            0x751d	                           jne 0x400b956	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b939	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b93e	    0x41b86c000000	                           mov r8d, 0x6c	      4897	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b944	          0x4531e4	                          xor r12d, r12d	      4824	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400b947	            0x31ed	                            xor ebp, ebp	      4823	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400b949	          0x4589c5	                           mov r13d, r8d	      4823	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400b94c	      0x4889442408	                mov qword [rsp + 8], rax	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b951	      0xe982fbffff	                           jmp 0x400b4d8	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b956	      0xba05000000	                              mov edx, 5	      4903	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1	CALL_3
0x400b95b	      0xbe00000000	                              mov esi, 0	      4903	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1	CALL_3
0x400b960	            0x31ff	                            xor edi, edi	      4903	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1	CALL_3
0x400b962	      0xe800000000	                          call 0x400b967	      4903	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1	CALL_3
0x400b967	          0x4889c7	                            mov rdi, rax	      4903	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1	CALL_3
0x400b96a	      0xe800000000	                          call 0x400b96f	      4903	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1	CALL_3
0x400b96f	            0x31c0	                            xor eax, eax	      4904	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b971	      0xe9caf8ffff	                           jmp 0x400b240	      4904	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b976	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b97b	    0x41b876000000	                           mov r8d, 0x76	      4883	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b981	          0x4531e4	                          xor r12d, r12d	      4824	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400b984	      0xbd6f000000	                           mov ebp, 0x6f	      4884	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b989	          0x4589c5	                           mov r13d, r8d	      4884	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b98c	      0x4889442408	                mov qword [rsp + 8], rax	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b991	      0xe942fbffff	                           jmp 0x400b4d8	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b996	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b99b	    0x41b878000000	                           mov r8d, 0x78	      4837	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b9a1	          0x4531e4	                          xor r12d, r12d	      4824	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400b9a4	            0x31ed	                            xor ebp, ebp	      4823	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400b9a6	          0x4589c5	                           mov r13d, r8d	      4823	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400b9a9	      0x4889442408	                mov qword [rsp + 8], rax	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b9ae	      0xe925fbffff	                           jmp 0x400b4d8	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b9b3	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b9b8	    0x41b873000000	                           mov r8d, 0x73	      4840	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b9be	          0x4531e4	                          xor r12d, r12d	      4824	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400b9c1	            0x31ed	                            xor ebp, ebp	      4823	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400b9c3	          0x4589c5	                           mov r13d, r8d	      4823	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400b9c6	      0x4889442408	                mov qword [rsp + 8], rax	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b9cb	      0xe908fbffff	                           jmp 0x400b4d8	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b9d0	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b9d5	    0x41b878000000	                           mov r8d, 0x78	      4861	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b9db	          0x4531e4	                          xor r12d, r12d	      4824	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400b9de	      0xbd6f000000	                           mov ebp, 0x6f	      4862	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b9e3	          0x4589c5	                           mov r13d, r8d	      4862	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b9e6	      0x4889442408	                mov qword [rsp + 8], rax	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b9eb	      0xe9e8faffff	                           jmp 0x400b4d8	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b9f0	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b9f5	    0x41b86e000000	                           mov r8d, 0x6e	      4873	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400b9fb	    0x41bc6f000000	                          mov r12d, 0x6f	      4875	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400ba01	      0xbd78000000	                           mov ebp, 0x78	      4874	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400ba06	          0x4589c5	                           mov r13d, r8d	      4874	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400ba09	      0x4889442408	                mov qword [rsp + 8], rax	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400ba0e	      0xe9c5faffff	                           jmp 0x400b4d8	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400ba13	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400ba18	    0x41b86e000000	                           mov r8d, 0x6e	      4854	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400ba1e	          0x4531e4	                          xor r12d, r12d	      4824	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400ba21	      0xbd6f000000	                           mov ebp, 0x6f	      4855	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400ba26	          0x4589c5	                           mov r13d, r8d	      4855	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400ba29	      0x4889442408	                mov qword [rsp + 8], rax	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400ba2e	      0xe9a5faffff	                           jmp 0x400b4d8	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400ba33	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400ba38	    0x41b86e000000	                           mov r8d, 0x6e	      4869	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400ba3e	          0x4531e4	                          xor r12d, r12d	      4824	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400ba41	      0xbd76000000	                           mov ebp, 0x76	      4870	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400ba46	          0x4589c5	                           mov r13d, r8d	      4870	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400ba49	      0x4889442408	                mov qword [rsp + 8], rax	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400ba4e	      0xe985faffff	                           jmp 0x400b4d8	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400ba53	      0xe800000000	                          call 0x400ba58	      4968	getchar.c	FUNCTION_82	ELSE_2
0x400ba58	          0x8b4324	            mov eax, dword [rbx + 0x24] 	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400ba5b	          0x83f818	                           cmp eax, 0x18	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400ba5e	            0x7475	                            je 0x400bad5	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400ba60	     0xf8e90f8ffff	                           jle 0x400b2f6	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400ba66	      0x3d03100000	                         cmp eax, 0x1003	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400ba6b	            0x74c6	                            je 0x400ba33	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400ba6d	     0xf8e00faffff	                           jle 0x400b473	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400ba73	      0x3d06100000	                         cmp eax, 0x1006	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400ba78	     0xf84f8feffff	                            je 0x400b976	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400ba7e	     0xf8edcfdffff	                           jle 0x400b860	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400ba84	      0x3d07100000	                         cmp eax, 0x1007	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400ba89	     0xf8581f9ffff	                           jne 0x400b410	      4829	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1
0x400ba8f	          0x4531c0	                            xor r8d, r8d	      4822	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400ba92	    0x48c744240800	                  mov qword [rsp + 8], 0	      4828	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4
0x400ba9b	          0x4531e4	                          xor r12d, r12d	      4824	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400ba9e	            0x31ed	                            xor ebp, ebp	      4823	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400baa0	          0x4589c5	                           mov r13d, r8d	      4823	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400baa3	      0xe930faffff	                           jmp 0x400b4d8	      4823	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400baa8	            0x85f6	                           test esi, esi	      4823	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400baaa	         0xfb65004	               movzx edx, byte [rax + 4]	      4823	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400baae	          0x4889f8	                            mov rax, rdi	      5023	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7
0x400bab1	           0xf95c1	                                setne cl	      5023	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7
0x400bab4	      0xe9cafbffff	                           jmp 0x400b683	      5023	getchar.c	FUNCTION_83	FOR_1	IF_5	IF_7
0x400bab9	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4797	getchar.c	FUNCTION_82	FOR_1	FOR_2	IF_4
0x400babe	          0x4885c0	                           test rax, rax	      4797	getchar.c	FUNCTION_82	FOR_1	FOR_2	IF_4
0x400bac1	            0x742b	                            je 0x400baee	      4797	getchar.c	FUNCTION_82	FOR_1	FOR_2	IF_4
0x400bac3	      0x488b4c2420	            mov rcx, qword [rsp + 0x20] 	      4798	getchar.c	FUNCTION_82	FOR_1	FOR_2	IF_4
0x400bac8	    0x488b9cc8c009	   mov rbx, qword [rax + rcx*8 + 0x9c0] 	      4798	getchar.c	FUNCTION_82	FOR_1	FOR_2	IF_4
0x400bad0	      0xe9c6f8ffff	                           jmp 0x400b39b	      4798	getchar.c	FUNCTION_82	FOR_1	FOR_2	IF_4
0x400bad5	          0x4531c0	                            xor r8d, r8d	      4822	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400bad8	    0x48c744240800	                  mov qword [rsp + 8], 0	      4888	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3	ELSE_4	SWITCH_1	IF_9
0x400bae1	          0x4531e4	                          xor r12d, r12d	      4824	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400bae4	            0x31ed	                            xor ebp, ebp	      4823	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400bae6	          0x4589c5	                           mov r13d, r8d	      4823	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400bae9	      0xe9eaf9ffff	                           jmp 0x400b4d8	      4823	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3	ELSE_2	FOR_3
0x400baee	      0x488b442420	            mov rax, qword [rsp + 0x20] 	      4801	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3
0x400baf3	    0x488b1cc50000	                  mov rbx, qword [rax*8]	      4801	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3
0x400bafb	      0xe99bf8ffff	                           jmp 0x400b39b	      4801	getchar.c	FUNCTION_82	FOR_1	FOR_2	ELSE_3
save_typeahead	WHILE,0:ELSE,0:IF,1:DO,0:CALL,2:functions,0:SWITCH,0:FOR,0	94
0x4003410	    0x488b05000000	            mov rax, qword [0x04003417] 	      1365	getchar.c	FUNCTION_46
0x4003417	              0x53	                                push rbx	      1364	getchar.c	FUNCTION_46
0x4003418	          0x4889fb	                            mov rbx, rdi	      1364	getchar.c	FUNCTION_46
0x400341b	          0x488907	                    mov qword [rdi], rax	      1365	getchar.c	FUNCTION_46
0x400341e	    0x488b05000000	            mov rax, qword [0x04003425] 	      1365	getchar.c	FUNCTION_46
0x4003425	        0x48894708	                mov qword [rdi + 8], rax	      1365	getchar.c	FUNCTION_46
0x4003429	    0x488b05000000	            mov rax, qword [0x04003430] 	      1365	getchar.c	FUNCTION_46
0x4003430	        0x48894710	             mov qword [rdi + 0x10], rax	      1365	getchar.c	FUNCTION_46
0x4003434	    0x488b05000000	            mov rax, qword [0x0400343b] 	      1365	getchar.c	FUNCTION_46
0x400343b	        0x48894718	             mov qword [rdi + 0x18], rax	      1365	getchar.c	FUNCTION_46
0x400343f	    0x488b05000000	            mov rax, qword [0x04003446] 	      1365	getchar.c	FUNCTION_46
0x4003446	        0x48894720	             mov qword [rdi + 0x20], rax	      1365	getchar.c	FUNCTION_46
0x400344a	    0x488b05000000	            mov rax, qword [0x04003451] 	      1365	getchar.c	FUNCTION_46
0x4003451	        0x48894728	             mov qword [rdi + 0x28], rax	      1365	getchar.c	FUNCTION_46
0x4003455	      0xbf09010000	                          mov edi, 0x109	      1298	getchar.c	FUNCTION_43	CALL_1
0x400345a	      0xe800000000	                          call 0x400345f	      1298	getchar.c	FUNCTION_43	CALL_1
0x400345f	      0xbf09010000	                          mov edi, 0x109	      1299	getchar.c	FUNCTION_43	CALL_2
0x4003464	    0x488905000000	            mov qword [0x0400346b], rax 	      1298	getchar.c	FUNCTION_43	CALL_1
0x400346b	      0xe800000000	                          call 0x4003470	      1299	getchar.c	FUNCTION_43	CALL_2
0x4003470	    0x488b3d000000	            mov rdi, qword [0x04003477] 	      1300	getchar.c	FUNCTION_43	IF_1
0x4003477	    0x488905000000	            mov qword [0x0400347e], rax 	      1299	getchar.c	FUNCTION_43	CALL_2
0x400347e	          0x4885ff	                           test rdi, rdi	      1300	getchar.c	FUNCTION_43	IF_1
0x4003481	     0xf840a010000	                            je 0x4003591	      1300	getchar.c	FUNCTION_43	IF_1
0x4003487	          0x4885c0	                           test rax, rax	      1300	getchar.c	FUNCTION_43	IF_1
0x400348a	     0xf84f8000000	                            je 0x4003588	      1300	getchar.c	FUNCTION_43	IF_1
0x4003490	    0x8b0500000000	            mov eax, dword [0x04003496] 	      1312	getchar.c	FUNCTION_43	IF_2
0x4003496	      0xba01000000	                              mov edx, 1	      1312	getchar.c	FUNCTION_43	IF_2
0x400349b	    0xc70500000000	          mov dword [0x040034a5], 0x109 	      1305	getchar.c	FUNCTION_43
0x40034a5	    0xc70500000000	           mov dword [0x040034af], 0x36 	      1306	getchar.c	FUNCTION_43
0x40034af	    0xc70500000000	               mov dword [0x040034b9], 0	      1307	getchar.c	FUNCTION_43
0x40034b9	    0xc70500000000	               mov dword [0x040034c3], 0	      1308	getchar.c	FUNCTION_43
0x40034c3	    0xc70500000000	               mov dword [0x040034cd], 0	      1309	getchar.c	FUNCTION_43
0x40034cd	          0x83c001	                              add eax, 1	      1312	getchar.c	FUNCTION_43	IF_2
0x40034d0	    0xc70500000000	               mov dword [0x040034da], 0	      1310	getchar.c	FUNCTION_43
0x40034da	    0xc74330010000	               mov dword [rbx + 0x30], 1	      1366	getchar.c	FUNCTION_46	CALL_1
0x40034e1	           0xf44c2	                          cmove eax, edx	      1312	getchar.c	FUNCTION_43	IF_2
0x40034e4	    0x890500000000	            mov dword [0x040034ea], eax 	      1312	getchar.c	FUNCTION_43	IF_2
0x40034ea	    0x8b0500000000	            mov eax, dword [0x040034f0] 	      1370	getchar.c	FUNCTION_46
0x40034f0	    0xc70500000000	     mov dword [0x040034fa], 0xffffffff 	      1372	getchar.c	FUNCTION_46
0x40034fa	          0x894334	             mov dword [rbx + 0x34], eax	      1370	getchar.c	FUNCTION_46
0x40034fd	    0x8b0500000000	            mov eax, dword [0x04003503] 	      1371	getchar.c	FUNCTION_46
0x4003503	          0x894338	             mov dword [rbx + 0x38], eax	      1371	getchar.c	FUNCTION_46
0x4003506	    0x488b05000000	            mov rax, qword [0x0400350d] 	      1374	getchar.c	FUNCTION_46
0x400350d	    0x48c705000000	               mov qword [0x04003518], 0	      1375	getchar.c	FUNCTION_46
0x4003518	        0x48894340	             mov qword [rbx + 0x40], rax	      1374	getchar.c	FUNCTION_46
0x400351c	    0x488b05000000	            mov rax, qword [0x04003523] 	      1374	getchar.c	FUNCTION_46
0x4003523	        0x48894348	             mov qword [rbx + 0x48], rax	      1374	getchar.c	FUNCTION_46
0x4003527	    0x488b05000000	            mov rax, qword [0x0400352e] 	      1374	getchar.c	FUNCTION_46
0x400352e	        0x48894350	             mov qword [rbx + 0x50], rax	      1374	getchar.c	FUNCTION_46
0x4003532	    0x488b05000000	            mov rax, qword [0x04003539] 	      1374	getchar.c	FUNCTION_46
0x4003539	        0x48894358	             mov qword [rbx + 0x58], rax	      1374	getchar.c	FUNCTION_46
0x400353d	    0x488b05000000	            mov rax, qword [0x04003544] 	      1376	getchar.c	FUNCTION_46
0x4003544	    0x48c705000000	               mov qword [0x0400354f], 0	      1377	getchar.c	FUNCTION_46
0x400354f	        0x48894360	             mov qword [rbx + 0x60], rax	      1376	getchar.c	FUNCTION_46
0x4003553	    0x488b05000000	            mov rax, qword [0x0400355a] 	      1376	getchar.c	FUNCTION_46
0x400355a	        0x48894368	             mov qword [rbx + 0x68], rax	      1376	getchar.c	FUNCTION_46
0x400355e	    0x488b05000000	            mov rax, qword [0x04003565] 	      1376	getchar.c	FUNCTION_46
0x4003565	        0x48894370	             mov qword [rbx + 0x70], rax	      1376	getchar.c	FUNCTION_46
0x4003569	    0x488b05000000	            mov rax, qword [0x04003570] 	      1376	getchar.c	FUNCTION_46
0x4003570	        0x48894378	             mov qword [rbx + 0x78], rax	      1376	getchar.c	FUNCTION_46
0x4003574	      0xe800000000	                          call 0x4003579	      1379	getchar.c	FUNCTION_46	CALL_2
0x4003579	    0x488983800000	             mov qword [rbx + 0x80], rax	      1379	getchar.c	FUNCTION_46	CALL_2
0x4003580	              0x5b	                                 pop rbx	      1381	getchar.c	FUNCTION_46
0x4003581	              0xc3	                                     ret	      1381	getchar.c	FUNCTION_46
0x4003582	    0x660f1f440000	                    nop word [rax + rax]	      1381	getchar.c	FUNCTION_46
0x4003588	    0x4881ff000000	                              cmp rdi, 0	      1322	getchar.c	FUNCTION_44	IF_1
0x400358f	            0x746f	                            je 0x4003600	      1322	getchar.c	FUNCTION_44	IF_1
0x4003591	      0xe800000000	                          call 0x4003596	      1325	getchar.c	FUNCTION_44	CALL_2
0x4003596	    0x488b3d000000	            mov rdi, qword [0x0400359d] 	      1326	getchar.c	FUNCTION_44	IF_2
0x400359d	    0x4881ff000000	                              cmp rdi, 0	      1326	getchar.c	FUNCTION_44	IF_2
0x40035a4	            0x746a	                            je 0x4003610	      1326	getchar.c	FUNCTION_44	IF_2
0x40035a6	      0xe800000000	                          call 0x40035ab	      1329	getchar.c	FUNCTION_44	CALL_4
0x40035ab	          0x488b03	                    mov rax, qword [rbx]	      1368	getchar.c	FUNCTION_46	IF_1
0x40035ae	    0xc74330000000	               mov dword [rbx + 0x30], 0	      1366	getchar.c	FUNCTION_46	CALL_1
0x40035b5	    0x488905000000	            mov qword [0x040035bc], rax 	      1368	getchar.c	FUNCTION_46	IF_1
0x40035bc	        0x488b4308	                mov rax, qword [rbx + 8]	      1368	getchar.c	FUNCTION_46	IF_1
0x40035c0	    0x488905000000	            mov qword [0x040035c7], rax 	      1368	getchar.c	FUNCTION_46	IF_1
0x40035c7	        0x488b4310	            mov rax, qword [rbx + 0x10] 	      1368	getchar.c	FUNCTION_46	IF_1
0x40035cb	    0x488905000000	            mov qword [0x040035d2], rax 	      1368	getchar.c	FUNCTION_46	IF_1
0x40035d2	        0x488b4318	            mov rax, qword [rbx + 0x18] 	      1368	getchar.c	FUNCTION_46	IF_1
0x40035d6	    0x488905000000	            mov qword [0x040035dd], rax 	      1368	getchar.c	FUNCTION_46	IF_1
0x40035dd	        0x488b4320	            mov rax, qword [rbx + 0x20] 	      1368	getchar.c	FUNCTION_46	IF_1
0x40035e1	    0x488905000000	            mov qword [0x040035e8], rax 	      1368	getchar.c	FUNCTION_46	IF_1
0x40035e8	        0x488b4328	            mov rax, qword [rbx + 0x28] 	      1368	getchar.c	FUNCTION_46	IF_1
0x40035ec	    0x488905000000	            mov qword [0x040035f3], rax 	      1368	getchar.c	FUNCTION_46	IF_1
0x40035f3	      0xe9f2feffff	                           jmp 0x40034ea	      1368	getchar.c	FUNCTION_46	IF_1
0x40035f8	     0xf1f84000000	                   nop dword [rax + rax]	      1368	getchar.c	FUNCTION_46	IF_1
0x4003600	      0xbf00000000	                              mov edi, 0	      1323	getchar.c	FUNCTION_44	CALL_1
0x4003605	      0xe800000000	                          call 0x400360a	      1323	getchar.c	FUNCTION_44	CALL_1
0x400360a	            0xeb8a	                           jmp 0x4003596	      1323	getchar.c	FUNCTION_44	CALL_1
0x400360c	         0xf1f4000	                         nop dword [rax]	      1323	getchar.c	FUNCTION_44	CALL_1
0x4003610	      0xbf00000000	                              mov edi, 0	      1327	getchar.c	FUNCTION_44	CALL_3
0x4003615	      0xe800000000	                          call 0x400361a	      1327	getchar.c	FUNCTION_44	CALL_3
0x400361a	            0xeb8f	                           jmp 0x40035ab	      1327	getchar.c	FUNCTION_44	CALL_3
check_abbr	WHILE,2:ELSE,6:IF,26:DO,0:CALL,26:functions,0:SWITCH,0:FOR,2	373
0x40087c0	            0x4157	                                push r15	      4422	getchar.c	FUNCTION_78
0x40087c2	            0x4156	                                push r14	      4422	getchar.c	FUNCTION_78
0x40087c4	            0x4155	                                push r13	      4422	getchar.c	FUNCTION_78
0x40087c6	            0x4154	                                push r12	      4422	getchar.c	FUNCTION_78
0x40087c8	              0x55	                                push rbp	      4422	getchar.c	FUNCTION_78
0x40087c9	              0x53	                                push rbx	      4422	getchar.c	FUNCTION_78
0x40087ca	        0x4883ec58	                           sub rsp, 0x58	      4422	getchar.c	FUNCTION_78
0x40087ce	    0x448b05000000	            mov r8d, dword [0x040087d5] 	      4438	getchar.c	FUNCTION_78	IF_1
0x40087d5	    0x64488b042528	                mov rax, qword fs:[0x28]	      4422	getchar.c	FUNCTION_78
0x40087de	      0x4889442448	             mov qword [rsp + 0x48], rax	      4422	getchar.c	FUNCTION_78
0x40087e3	            0x31c0	                            xor eax, eax	      4422	getchar.c	FUNCTION_78
0x40087e5	        0x894c2408	                mov dword [rsp + 8], ecx	      4422	getchar.c	FUNCTION_78
0x40087e9	          0x4585c0	                           test r8d, r8d	      4438	getchar.c	FUNCTION_78	IF_1
0x40087ec	            0x7516	                           jne 0x4008804	      4438	getchar.c	FUNCTION_78	IF_1
0x40087ee	    0xf60500000000	               test byte [0x040087f5], 3	      4442	getchar.c	FUNCTION_78	IF_2
0x40087f5	          0x4189fd	                           mov r13d, edi	      4442	getchar.c	FUNCTION_78	IF_2
0x40087f8	          0x4889f5	                            mov rbp, rsi	      4442	getchar.c	FUNCTION_78	IF_2
0x40087fb	            0x89d3	                            mov ebx, edx	      4442	getchar.c	FUNCTION_78	IF_2
0x40087fd	            0x7431	                            je 0x4008830	      4442	getchar.c	FUNCTION_78	IF_2
0x40087ff	          0x83ff1d	                           cmp edi, 0x1d	      4442	getchar.c	FUNCTION_78	IF_2
0x4008802	            0x742c	                            je 0x4008830	      4442	getchar.c	FUNCTION_78	IF_2
0x4008804	            0x31c0	                            xor eax, eax	      4439	getchar.c	FUNCTION_78	IF_1
0x4008806	      0x488b5c2448	            mov rbx, qword [rsp + 0x48] 	      4619	getchar.c	FUNCTION_78
0x400880b	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      4619	getchar.c	FUNCTION_78
0x4008814	     0xf8593050000	                           jne 0x4008dad	      4619	getchar.c	FUNCTION_78
0x400881a	        0x4883c458	                           add rsp, 0x58	      4619	getchar.c	FUNCTION_78
0x400881e	              0x5b	                                 pop rbx	      4619	getchar.c	FUNCTION_78
0x400881f	              0x5d	                                 pop rbp	      4619	getchar.c	FUNCTION_78
0x4008820	            0x415c	                                 pop r12	      4619	getchar.c	FUNCTION_78
0x4008822	            0x415d	                                 pop r13	      4619	getchar.c	FUNCTION_78
0x4008824	            0x415e	                                 pop r14	      4619	getchar.c	FUNCTION_78
0x4008826	            0x415f	                                 pop r15	      4619	getchar.c	FUNCTION_78
0x4008828	              0xc3	                                     ret	      4619	getchar.c	FUNCTION_78
0x4008829	     0xf1f80000000	                         nop dword [rax]	      4619	getchar.c	FUNCTION_78
0x4008830	            0x85db	                           test ebx, ebx	      4451	getchar.c	FUNCTION_78	IF_3
0x4008832	            0x74d0	                            je 0x4008804	      4451	getchar.c	FUNCTION_78	IF_3
0x4008834	    0x8b0d00000000	            mov ecx, dword [0x0400883a] 	      4455	getchar.c	FUNCTION_78	IF_4
0x400883a	            0x85c9	                           test ecx, ecx	      4455	getchar.c	FUNCTION_78	IF_4
0x400883c	     0xf842e010000	                            je 0x4008970	      4455	getchar.c	FUNCTION_78	IF_4
0x4008842	          0x4863f3	                         movsxd rsi, ebx	      4459	getchar.c	FUNCTION_78	IF_4	CALL_1
0x4008845	          0x4889ef	                            mov rdi, rbp	      4459	getchar.c	FUNCTION_78	IF_4	CALL_1
0x4008848	          0x4801ee	                            add rsi, rbp	      4459	getchar.c	FUNCTION_78	IF_4	CALL_1
0x400884b	      0xe800000000	                          call 0x4008850	      4459	getchar.c	FUNCTION_78	IF_4	CALL_1
0x4008850	          0x4889c7	                            mov rdi, rax	      4460	getchar.c	FUNCTION_78	IF_4	IF_5	CALL_2
0x4008853	          0x4989c6	                            mov r14, rax	      4459	getchar.c	FUNCTION_78	IF_4	CALL_1
0x4008856	      0xe800000000	                          call 0x400885b	      4460	getchar.c	FUNCTION_78	IF_4	IF_5	CALL_2
0x400885b	            0x85c0	                           test eax, eax	      4460	getchar.c	FUNCTION_78	IF_4	IF_5	CALL_2
0x400885d	     0xf841b040000	                            je 0x4008c7e	      4460	getchar.c	FUNCTION_78	IF_4	IF_5	CALL_2
0x4008863	          0x4c39f5	                            cmp rbp, r14	      4465	getchar.c	FUNCTION_78	IF_4	ELSE_1	IF_6
0x4008866	    0xc74424100100	               mov dword [rsp + 0x10], 1	      4435	getchar.c	FUNCTION_78
0x400886e	     0xf8263040000	                            jb 0x4008cd7	      4465	getchar.c	FUNCTION_78	IF_4	ELSE_1	IF_6
0x4008874	      0x4c637c2408	            movsxd r15, dword [rsp + 8] 	      4469	getchar.c	FUNCTION_78	IF_4	WHILE_1
0x4008879	    0x41bc01000000	                             mov r12d, 1	      4469	getchar.c	FUNCTION_78	IF_4	WHILE_1
0x400887f	          0x4901ef	                            add r15, rbp	      4469	getchar.c	FUNCTION_78	IF_4	WHILE_1
0x4008882	          0x4d39fe	                            cmp r14, r15	      4469	getchar.c	FUNCTION_78	IF_4	WHILE_1
0x4008885	     0xf8750010000	                            ja 0x40089db	      4469	getchar.c	FUNCTION_78	IF_4	WHILE_1
0x400888b	       0xf1f440000	                   nop dword [rax + rax]	      4469	getchar.c	FUNCTION_78	IF_4	WHILE_1
0x4008890	          0x4589f7	                          mov r15d, r14d	      4479	getchar.c	FUNCTION_78	IF_4
0x4008893	          0x4129ef	                           sub r15d, ebp	      4479	getchar.c	FUNCTION_78	IF_4
0x4008896	        0x8b442408	                mov eax, dword [rsp + 8]	      4479	getchar.c	FUNCTION_78	IF_4
0x400889a	          0x4139c7	                           cmp r15d, eax	      4479	getchar.c	FUNCTION_78	IF_4
0x400889d	            0x89c2	                            mov edx, eax	      4479	getchar.c	FUNCTION_78	IF_4
0x400889f	        0x410f4dd7	                        cmovge edx, r15d	      4479	getchar.c	FUNCTION_78	IF_4
0x40088a3	            0x39d3	                            cmp ebx, edx	      4499	getchar.c	FUNCTION_78	IF_11
0x40088a5	     0xf8e59ffffff	                           jle 0x4008804	      4499	getchar.c	FUNCTION_78	IF_11
0x40088ab	          0x4863c2	                         movsxd rax, edx	      4501	getchar.c	FUNCTION_78	IF_11
0x40088ae	            0x29d3	                            sub ebx, edx	      4502	getchar.c	FUNCTION_78	IF_11
0x40088b0	          0x4801e8	                            add rax, rbp	      4501	getchar.c	FUNCTION_78	IF_11
0x40088b3	      0x4889442410	             mov qword [rsp + 0x10], rax	      4501	getchar.c	FUNCTION_78	IF_11
0x40088b8	    0x488b05000000	            mov rax, qword [0x040088bf] 	      4504	getchar.c	FUNCTION_78	IF_11
0x40088bf	    0x4c8bb8c01100	          mov r15, qword [rax + 0x11c0] 	      4504	getchar.c	FUNCTION_78	IF_11
0x40088c6	    0x488b05000000	            mov rax, qword [0x040088cd] 	      4505	getchar.c	FUNCTION_78	IF_11
0x40088cd	          0x4d85ff	                           test r15, r15	      4506	getchar.c	FUNCTION_78	IF_11	IF_12
0x40088d0	      0x4889442408	                mov qword [rsp + 8], rax	      4505	getchar.c	FUNCTION_78	IF_11
0x40088d5	     0xf84ae040000	                            je 0x4008d89	      4506	getchar.c	FUNCTION_78	IF_11	IF_12
0x40088db	          0x4863c3	                         movsxd rax, ebx	      4538	getchar.c	FUNCTION_78	IF_11	FOR_2	CALL_16
0x40088de	      0x4889442418	             mov qword [rsp + 0x18], rax	      4538	getchar.c	FUNCTION_78	IF_11	FOR_2	CALL_16
0x40088e3	       0xf1f440000	                   nop dword [rax + rax]	      4538	getchar.c	FUNCTION_78	IF_11	FOR_2	CALL_16
0x40088e8	        0x4d8b7708	                mov r14, qword [r15 + 8]	      4521	getchar.c	FUNCTION_78	IF_11	FOR_2
0x40088ec	      0xbe80000000	                           mov esi, 0x80	      4524	getchar.c	FUNCTION_78	IF_11	FOR_2	IF_13	CALL_12
0x40088f1	        0x418b6f20	            mov ebp, dword [r15 + 0x20] 	      4520	getchar.c	FUNCTION_78	IF_11	FOR_2
0x40088f5	          0x4c89f7	                            mov rdi, r14	      4524	getchar.c	FUNCTION_78	IF_11	FOR_2	IF_13	CALL_12
0x40088f8	      0xe800000000	                          call 0x40088fd	      4524	getchar.c	FUNCTION_78	IF_11	FOR_2	IF_13	CALL_12
0x40088fd	          0x4885c0	                           test rax, rax	      4524	getchar.c	FUNCTION_78	IF_11	FOR_2	IF_13	CALL_12
0x4008900	     0xf8460010000	                            je 0x4008a66	      4524	getchar.c	FUNCTION_78	IF_11	FOR_2	IF_13	CALL_12
0x4008906	        0x498b7f08	                mov rdi, qword [r15 + 8]	      4527	getchar.c	FUNCTION_78	IF_11	FOR_2	IF_13	CALL_13
0x400890a	      0xe800000000	                          call 0x400890f	      4527	getchar.c	FUNCTION_78	IF_11	FOR_2	IF_13	CALL_13
0x400890f	          0x4885c0	                           test rax, rax	      4528	getchar.c	FUNCTION_78	IF_11	FOR_2	IF_13	IF_14
0x4008912	          0x4989c6	                            mov r14, rax	      4527	getchar.c	FUNCTION_78	IF_11	FOR_2	IF_13	CALL_13
0x4008915	     0xf844b010000	                            je 0x4008a66	      4528	getchar.c	FUNCTION_78	IF_11	FOR_2	IF_13	IF_14
0x400891b	        0x488d5001	                      lea rdx, [rax + 1]	      4528	getchar.c	FUNCTION_78	IF_11	FOR_2	IF_13	IF_14
0x400891f	          0x4889c1	                            mov rcx, rax	      4528	getchar.c	FUNCTION_78	IF_11	FOR_2	IF_13	IF_14
0x4008922	            0xeb17	                           jmp 0x400893b	      4528	getchar.c	FUNCTION_78	IF_11	FOR_2	IF_13	IF_14
0x4008924	         0xf1f4000	                         nop dword [rax]	      4528	getchar.c	FUNCTION_78	IF_11	FOR_2	IF_13	IF_14
0x4008928	            0x3c9b	                            cmp al, 0x9b	      4744	getchar.c	FUNCTION_81	WHILE_1	ELSE_1	IF_2
0x400892a	     0xf8418010000	                            je 0x4008a48	      4744	getchar.c	FUNCTION_81	WHILE_1	ELSE_1	IF_2
0x4008930	        0x4883c101	                              add rcx, 1	      4751	getchar.c	FUNCTION_81	WHILE_1	ELSE_2
0x4008934	          0x8842ff	                  mov byte [rdx - 1], al	      4751	getchar.c	FUNCTION_81	WHILE_1	ELSE_2
0x4008937	        0x4883c201	                              add rdx, 1	      4751	getchar.c	FUNCTION_81	WHILE_1	ELSE_2
0x400893b	           0xfb601	                   movzx eax, byte [rcx]	      4737	getchar.c	FUNCTION_81	WHILE_1
0x400893e	            0x84c0	                             test al, al	      4737	getchar.c	FUNCTION_81	WHILE_1
0x4008940	     0xf8412010000	                            je 0x4008a58	      4737	getchar.c	FUNCTION_81	WHILE_1
0x4008946	            0x3c80	                            cmp al, 0x80	      4739	getchar.c	FUNCTION_81	WHILE_1	IF_1
0x4008948	            0x75de	                           jne 0x4008928	      4739	getchar.c	FUNCTION_81	WHILE_1	IF_1
0x400894a	         0xfb67101	               movzx esi, byte [rcx + 1]	      4739	getchar.c	FUNCTION_81	WHILE_1	IF_1
0x400894e	        0x4080fefe	                           cmp sil, 0xfe	      4739	getchar.c	FUNCTION_81	WHILE_1	IF_1
0x4008952	     0xf8458010000	                            je 0x4008ab0	      4739	getchar.c	FUNCTION_81	WHILE_1	IF_1
0x4008958	        0x4080fefd	                           cmp sil, 0xfd	      4745	getchar.c	FUNCTION_81	WHILE_1	ELSE_1	IF_2
0x400895c	            0x75d2	                           jne 0x4008930	      4745	getchar.c	FUNCTION_81	WHILE_1	ELSE_1	IF_2
0x400895e	        0x80790251	                cmp byte [rcx + 2], 0x51	      4745	getchar.c	FUNCTION_81	WHILE_1	ELSE_1	IF_2
0x4008962	            0x75cc	                           jne 0x4008930	      4745	getchar.c	FUNCTION_81	WHILE_1	ELSE_1	IF_2
0x4008964	        0xc642ff9b	                mov byte [rdx - 1], 0x9b	      4747	getchar.c	FUNCTION_81	WHILE_1	ELSE_1	IF_2
0x4008968	        0x4883c103	                              add rcx, 3	      4748	getchar.c	FUNCTION_81	WHILE_1	ELSE_1	IF_2
0x400896c	            0xebc9	                           jmp 0x4008937	      4748	getchar.c	FUNCTION_81	WHILE_1	ELSE_1	IF_2
0x400896e	            0x6690	                                     nop	      4748	getchar.c	FUNCTION_81	WHILE_1	ELSE_1	IF_2
0x4008970	          0x4c63fb	                         movsxd r15, ebx	      4484	getchar.c	FUNCTION_78	ELSE_2	IF_8	CALL_8
0x4008973	    0x420fb67c3dff	         movzx edi, byte [rbp + r15 - 1]	      4484	getchar.c	FUNCTION_78	ELSE_2	IF_8	CALL_8
0x4008979	      0xe800000000	                          call 0x400897e	      4484	getchar.c	FUNCTION_78	ELSE_2	IF_8	CALL_8
0x400897e	            0x85c0	                           test eax, eax	      4484	getchar.c	FUNCTION_78	ELSE_2	IF_8	CALL_8
0x4008980	     0xf84bb020000	                            je 0x4008c41	      4484	getchar.c	FUNCTION_78	ELSE_2	IF_8	CALL_8
0x4008986	          0x83fb01	                              cmp ebx, 1	      4489	getchar.c	FUNCTION_78	ELSE_2	ELSE_3	IF_9
0x4008989	    0x41be01000000	                             mov r14d, 1	      4435	getchar.c	FUNCTION_78
0x400898f	            0x7e0e	                           jle 0x400899f	      4489	getchar.c	FUNCTION_78	ELSE_2	ELSE_3	IF_9
0x4008991	    0x420fb67c3dfe	         movzx edi, byte [rbp + r15 - 2]	      4490	getchar.c	FUNCTION_78	ELSE_2	ELSE_3	CALL_9
0x4008997	      0xe800000000	                          call 0x400899c	      4490	getchar.c	FUNCTION_78	ELSE_2	ELSE_3	CALL_9
0x400899c	          0x4189c6	                           mov r14d, eax	      4490	getchar.c	FUNCTION_78	ELSE_2	ELSE_3	CALL_9
0x400899f	        0x448d7bff	                     lea r15d, [rbx - 1]	      4492	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_10
0x40089a3	          0x4963d7	                        movsxd rdx, r15d	      4492	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_10
0x40089a6	          0x4585ff	                         test r15d, r15d	      4492	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_10
0x40089a9	      0x4c8d641500	                    lea r12, [rbp + rdx]	      4492	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_10
0x40089ae	            0x7f7e	                            jg 0x4008a2e	      4492	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_10
0x40089b0	          0x4531e4	                          xor r12d, r12d	      4433	getchar.c	FUNCTION_78
0x40089b3	      0xe9defeffff	                           jmp 0x4008896	      4433	getchar.c	FUNCTION_78
0x40089b8	     0xf1f84000000	                   nop dword [rax + rax]	      4433	getchar.c	FUNCTION_78
0x40089c0	          0x4c89f7	                            mov rdi, r14	      4472	getchar.c	FUNCTION_78	IF_4	WHILE_1	IF_7	CALL_7
0x40089c3	      0xe800000000	                          call 0x40089c8	      4472	getchar.c	FUNCTION_78	IF_4	WHILE_1	IF_7	CALL_7
0x40089c8	        0x3b442410	            cmp eax, dword [rsp + 0x10] 	      4472	getchar.c	FUNCTION_78	IF_4	WHILE_1	IF_7	CALL_7
0x40089cc	            0x7527	                           jne 0x40089f5	      4472	getchar.c	FUNCTION_78	IF_4	WHILE_1	IF_7	CALL_7
0x40089ce	        0x4183c401	                             add r12d, 1	      4477	getchar.c	FUNCTION_78	IF_4	WHILE_1
0x40089d2	          0x4d39fe	                            cmp r14, r15	      4469	getchar.c	FUNCTION_78	IF_4	WHILE_1
0x40089d5	     0xf86b5feffff	                           jbe 0x4008890	      4469	getchar.c	FUNCTION_78	IF_4	WHILE_1
0x40089db	          0x4c89f6	                            mov rsi, r14	      4471	getchar.c	FUNCTION_78	IF_4	WHILE_1	CALL_5
0x40089de	          0x4889ef	                            mov rdi, rbp	      4471	getchar.c	FUNCTION_78	IF_4	WHILE_1	CALL_5
0x40089e1	      0xe800000000	                          call 0x40089e6	      4471	getchar.c	FUNCTION_78	IF_4	WHILE_1	CALL_5
0x40089e6	           0xfb638	                   movzx edi, byte [rax]	      4472	getchar.c	FUNCTION_78	IF_4	WHILE_1	IF_7	CALL_7
0x40089e9	          0x4989c6	                            mov r14, rax	      4471	getchar.c	FUNCTION_78	IF_4	WHILE_1	CALL_5
0x40089ec	      0xe800000000	                          call 0x40089f1	      4472	getchar.c	FUNCTION_78	IF_4	WHILE_1	IF_7	CALL_7
0x40089f1	            0x85c0	                           test eax, eax	      4472	getchar.c	FUNCTION_78	IF_4	WHILE_1	IF_7	CALL_7
0x40089f3	            0x74cb	                            je 0x40089c0	      4472	getchar.c	FUNCTION_78	IF_4	WHILE_1	IF_7	CALL_7
0x40089f5	          0x4c89f7	                            mov rdi, r14	      4474	getchar.c	FUNCTION_78	IF_4	WHILE_1	IF_7
0x40089f8	    0xff1500000000	                 call qword [0x040089fe]	      4474	getchar.c	FUNCTION_78	IF_4	WHILE_1	IF_7
0x40089fe	            0x4898	                                    cdqe	      4474	getchar.c	FUNCTION_78	IF_4	WHILE_1	IF_7
0x4008a00	          0x4901c6	                            add r14, rax	      4474	getchar.c	FUNCTION_78	IF_4	WHILE_1	IF_7
0x4008a03	      0xe988feffff	                           jmp 0x4008890	      4475	getchar.c	FUNCTION_78	IF_4	WHILE_1	IF_7
0x4008a08	     0xf1f84000000	                   nop dword [rax + rax]	      4475	getchar.c	FUNCTION_78	IF_4	WHILE_1	IF_7
0x4008a10	    0x410fb67c24ff	               movzx edi, byte [r12 - 1]	      4493	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_11
0x4008a16	      0xe800000000	                          call 0x4008a1b	      4493	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_11
0x4008a1b	          0x4139c6	                           cmp r14d, eax	      4493	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_11
0x4008a1e	            0x7590	                           jne 0x40089b0	      4493	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_11
0x4008a20	        0x4983ec01	                              sub r12, 1	      4493	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_11
0x4008a24	        0x4183ef01	                             sub r15d, 1	      4492	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_10
0x4008a28	     0xf849e020000	                            je 0x4008ccc	      4492	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_10
0x4008a2e	    0x410fb67c24ff	               movzx edi, byte [r12 - 1]	      4492	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_10
0x4008a34	      0xe800000000	                          call 0x4008a39	      4492	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_10
0x4008a39	            0x85c0	                           test eax, eax	      4492	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_10
0x4008a3b	            0x74d3	                            je 0x4008a10	      4492	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_10
0x4008a3d	      0xe96effffff	                           jmp 0x40089b0	      4492	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_10
0x4008a42	    0x660f1f440000	                    nop word [rax + rax]	      4492	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_10
0x4008a48	         0xfb67101	               movzx esi, byte [rcx + 1]	      4492	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_10
0x4008a4c	      0xe907ffffff	                           jmp 0x4008958	      4492	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_10
0x4008a51	     0xf1f80000000	                         nop dword [rax]	      4492	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_10
0x4008a58	        0xc642ff00	                   mov byte [rdx - 1], 0	      4753	getchar.c	FUNCTION_81	ELSE_2
0x4008a5c	          0x4c89f7	                            mov rdi, r14	      4531	getchar.c	FUNCTION_78	IF_11	FOR_2	IF_13	IF_14	CALL_15
0x4008a5f	      0xe800000000	                          call 0x4008a64	      4531	getchar.c	FUNCTION_78	IF_11	FOR_2	IF_13	IF_14	CALL_15
0x4008a64	            0x89c5	                            mov ebp, eax	      4531	getchar.c	FUNCTION_78	IF_11	FOR_2	IF_13	IF_14	CALL_15
0x4008a66	        0x418b4724	            mov eax, dword [r15 + 0x24] 	      4537	getchar.c	FUNCTION_78	IF_11	FOR_2
0x4008a6a	    0x850500000000	           test dword [0x04008a70], eax 	      4537	getchar.c	FUNCTION_78	IF_11	FOR_2
0x4008a70	            0x7404	                            je 0x4008a76	      4537	getchar.c	FUNCTION_78	IF_11	FOR_2
0x4008a72	            0x39dd	                            cmp ebp, ebx	      4537	getchar.c	FUNCTION_78	IF_11	FOR_2
0x4008a74	            0x745a	                            je 0x4008ad0	      4537	getchar.c	FUNCTION_78	IF_11	FOR_2
0x4008a76	        0x4d3b7708	                cmp r14, qword [r15 + 8]	      4539	getchar.c	FUNCTION_78	IF_11	FOR_2	IF_15
0x4008a7a	            0x7408	                            je 0x4008a84	      4539	getchar.c	FUNCTION_78	IF_11	FOR_2	IF_15
0x4008a7c	          0x4c89f7	                            mov rdi, r14	      4540	getchar.c	FUNCTION_78	IF_11	FOR_2	CALL_17
0x4008a7f	      0xe800000000	                          call 0x4008a84	      4540	getchar.c	FUNCTION_78	IF_11	FOR_2	CALL_17
0x4008a84	          0x4d8b3f	                    mov r15, qword [r15]	      4516	getchar.c	FUNCTION_78	IF_11	FOR_2
0x4008a87	          0x4d85ff	                           test r15, r15	      4516	getchar.c	FUNCTION_78	IF_11	FOR_2
0x4008a8a	     0xf8558feffff	                           jne 0x40088e8	      4516	getchar.c	FUNCTION_78	IF_11	FOR_2
0x4008a90	    0x48837c240800	                  cmp qword [rsp + 8], 0	      4514	getchar.c	FUNCTION_78	IF_11	FOR_2
0x4008a96	     0xf8468fdffff	                            je 0x4008804	      4514	getchar.c	FUNCTION_78	IF_11	FOR_2
0x4008a9c	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	      4514	getchar.c	FUNCTION_78	IF_11	FOR_2
0x4008aa1	    0x48c744240800	                  mov qword [rsp + 8], 0	      4516	getchar.c	FUNCTION_78	IF_11	FOR_2
0x4008aaa	      0xe939feffff	                           jmp 0x40088e8	      4516	getchar.c	FUNCTION_78	IF_11	FOR_2
0x4008aaf	              0x90	                                     nop	      4516	getchar.c	FUNCTION_78	IF_11	FOR_2
0x4008ab0	        0x80790258	                cmp byte [rcx + 2], 0x58	      4739	getchar.c	FUNCTION_81	WHILE_1	IF_1
0x4008ab4	     0xf8576feffff	                           jne 0x4008930	      4739	getchar.c	FUNCTION_81	WHILE_1	IF_1
0x4008aba	          0x8842ff	                  mov byte [rdx - 1], al	      4741	getchar.c	FUNCTION_81	WHILE_1	IF_1
0x4008abd	        0x4883c103	                              add rcx, 3	      4742	getchar.c	FUNCTION_81	WHILE_1	IF_1
0x4008ac1	      0xe971feffff	                           jmp 0x4008937	      4742	getchar.c	FUNCTION_81	WHILE_1	IF_1
0x4008ac6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4742	getchar.c	FUNCTION_81	WHILE_1	IF_1
0x4008ad0	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      4538	getchar.c	FUNCTION_78	IF_11	FOR_2	CALL_16
0x4008ad5	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      4538	getchar.c	FUNCTION_78	IF_11	FOR_2	CALL_16
0x4008ada	          0x4c89f7	                            mov rdi, r14	      4538	getchar.c	FUNCTION_78	IF_11	FOR_2	CALL_16
0x4008add	      0xe800000000	                          call 0x4008ae2	      4538	getchar.c	FUNCTION_78	IF_11	FOR_2	CALL_16
0x4008ae2	            0x85c0	                           test eax, eax	      4538	getchar.c	FUNCTION_78	IF_11	FOR_2	CALL_16
0x4008ae4	            0x7590	                           jne 0x4008a76	      4538	getchar.c	FUNCTION_78	IF_11	FOR_2	CALL_16
0x4008ae6	        0x4d3b7708	                cmp r14, qword [r15 + 8]	      4539	getchar.c	FUNCTION_78	IF_11	FOR_2	IF_15
0x4008aea	     0xf85c2020000	                           jne 0x4008db2	      4539	getchar.c	FUNCTION_78	IF_11	FOR_2	IF_15
0x4008af0	          0x4531f6	                          xor r14d, r14d	      4559	getchar.c	FUNCTION_78	IF_11	IF_17
0x4008af3	        0x4183fd1d	                          cmp r13d, 0x1d	      4560	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18
0x4008af7	     0xf84a8000000	                            je 0x4008ba5	      4560	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18
0x4008afd	          0x4489e8	                           mov eax, r13d	      4563	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_18
0x4008b00	          0xc1e81f	                           shr eax, 0x1f	      4563	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_18
0x4008b03	            0x84c0	                             test al, al	      4563	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_18
0x4008b05	     0xf85f0010000	                           jne 0x4008cfb	      4563	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_18
0x4008b0b	    0x4181fd800000	                          cmp r13d, 0x80	      4563	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_18
0x4008b12	     0xf84e3010000	                            je 0x4008cfb	      4563	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_18
0x4008b18	        0x418d45e0	                   lea eax, [r13 - 0x20]	      4571	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	IF_20
0x4008b1c	          0x83f85e	                           cmp eax, 0x5e	      4571	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	IF_20
0x4008b1f	     0xf8655020000	                           jbe 0x4008d7a	      4571	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	IF_20
0x4008b25	    0x4181fdff0000	                          cmp r13d, 0xff	      4571	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	IF_20
0x4008b2c	     0xf8f48020000	                            jg 0x4008d7a	      4571	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	IF_20
0x4008b32	      0xc644242016	            mov byte [rsp + 0x20], 0x16 	      4572	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	IF_20
0x4008b37	    0x41be02000000	                             mov r14d, 2	      4572	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	IF_20
0x4008b3d	      0xb801000000	                              mov eax, 1	      4572	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	IF_20
0x4008b42	      0xb901000000	                              mov ecx, 1	      4572	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	IF_20
0x4008b47	    0x8b1500000000	            mov edx, dword [0x04008b4d] 	      4574	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	IF_21
0x4008b4d	            0x85d2	                           test edx, edx	      4574	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	IF_21
0x4008b4f	     0xf8413020000	                            je 0x4008d68	      4574	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	IF_21
0x4008b55	    0x418d9500ffff	                  lea edx, [r13 - 0x100]	      4578	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	IF_21	IF_22
0x4008b5c	    0x4181fd000100	                         cmp r13d, 0x100	      4578	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	IF_21	IF_22
0x4008b63	      0x488d6c2420	                   lea rbp, [rsp + 0x20]	      4579	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	IF_21
0x4008b68	        0x894c2408	                mov dword [rsp + 8], ecx	      4579	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	IF_21
0x4008b6c	        0x440f4dea	                        cmovge r13d, edx	      4578	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	IF_21	IF_22
0x4008b70	      0x488d740500	                    lea rsi, [rbp + rax]	      4579	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	IF_21
0x4008b75	          0x4489ef	                           mov edi, r13d	      4579	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	IF_21
0x4008b78	    0xff1500000000	                 call qword [0x04008b7e]	      4579	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	IF_21
0x4008b7e	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      4579	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	IF_21
0x4008b82	        0x448d3401	                   lea r14d, [rcx + rax]	      4579	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	IF_21
0x4008b86	      0x410fbe4f2c	           movsx ecx, byte [r15 + 0x2c] 	      4587	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	CALL_21
0x4008b8b	          0x4963c6	                        movsxd rax, r14d	      4585	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18
0x4008b8e	      0xba01000000	                              mov edx, 1	      4587	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	CALL_21
0x4008b93	      0xbe01000000	                              mov esi, 1	      4587	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	CALL_21
0x4008b98	          0x4889ef	                            mov rdi, rbp	      4587	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	CALL_21
0x4008b9b	      0xc644042000	          mov byte [rsp + rax + 0x20], 0	      4585	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18
0x4008ba0	      0xe8cb80ffff	       call sym.ins_typebuf.constprop.15	      4587	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	CALL_21
0x4008ba5	      0x41807f2e00	                cmp byte [r15 + 0x2e], 0	      4590	getchar.c	FUNCTION_78	IF_11	IF_17	IF_23
0x4008baa	     0xf8584010000	                           jne 0x4008d34	      4590	getchar.c	FUNCTION_78	IF_11	IF_17	IF_23
0x4008bb0	        0x498b6f10	            mov rbp, qword [r15 + 0x10] 	      4594	getchar.c	FUNCTION_78	IF_11	IF_17	ELSE_6
0x4008bb4	          0x4885ed	                           test rbp, rbp	      4595	getchar.c	FUNCTION_78	IF_11	IF_17	ELSE_6	IF_24
0x4008bb7	            0x7434	                            je 0x4008bed	      4595	getchar.c	FUNCTION_78	IF_11	IF_17	ELSE_6	IF_24
0x4008bb9	      0x410fbe4f2c	           movsx ecx, byte [r15 + 0x2c] 	      4598	getchar.c	FUNCTION_78	IF_11	IF_17	ELSE_6	IF_24	CALL_23
0x4008bbe	        0x418b7728	            mov esi, dword [r15 + 0x28] 	      4598	getchar.c	FUNCTION_78	IF_11	IF_17	ELSE_6	IF_24	CALL_23
0x4008bc2	      0xba01000000	                              mov edx, 1	      4598	getchar.c	FUNCTION_78	IF_11	IF_17	ELSE_6	IF_24	CALL_23
0x4008bc7	          0x4889ef	                            mov rdi, rbp	      4598	getchar.c	FUNCTION_78	IF_11	IF_17	ELSE_6	IF_24	CALL_23
0x4008bca	      0xe8a180ffff	       call sym.ins_typebuf.constprop.15	      4598	getchar.c	FUNCTION_78	IF_11	IF_17	ELSE_6	IF_24	CALL_23
0x4008bcf	          0x4889ef	                            mov rdi, rbp	      4600	getchar.c	FUNCTION_78	IF_11	IF_17	ELSE_6	IF_24	CALL_24
0x4008bd2	      0xe800000000	                          call 0x4008bd7	      4600	getchar.c	FUNCTION_78	IF_11	IF_17	ELSE_6	IF_24	CALL_24
0x4008bd7	      0x418d440601	                lea eax, [r14 + rax + 1]	      4600	getchar.c	FUNCTION_78	IF_11	IF_17	ELSE_6	IF_24	CALL_24
0x4008bdc	     0x10500000000	             add dword [0x04008be2], eax	      4600	getchar.c	FUNCTION_78	IF_11	IF_17	ELSE_6	IF_24	CALL_24
0x4008be2	      0x41807f2e00	                cmp byte [r15 + 0x2e], 0	      4602	getchar.c	FUNCTION_78	IF_11	IF_17	ELSE_6	IF_24	IF_25
0x4008be7	     0xf855b010000	                           jne 0x4008d48	      4602	getchar.c	FUNCTION_78	IF_11	IF_17	ELSE_6	IF_24	IF_25
0x4008bed	    0x8b0500000000	            mov eax, dword [0x04008bf3] 	      4610	getchar.c	FUNCTION_78	IF_11	IF_17	IF_26
0x4008bf3	      0xc644242008	                mov byte [rsp + 0x20], 8	      4607	getchar.c	FUNCTION_78	IF_11	IF_17
0x4008bf8	      0xc644242100	                mov byte [rsp + 0x21], 0	      4608	getchar.c	FUNCTION_78	IF_11	IF_17
0x4008bfd	            0x85c0	                           test eax, eax	      4610	getchar.c	FUNCTION_78	IF_11	IF_17	IF_26
0x4008bff	     0xf84ee000000	                            je 0x4008cf3	      4610	getchar.c	FUNCTION_78	IF_11	IF_17	IF_26
0x4008c05	          0x4585e4	                         test r12d, r12d	      4613	getchar.c	FUNCTION_78	IF_11	IF_17	WHILE_2
0x4008c08	      0x418d5c24ff	                      lea ebx, [r12 - 1]	      4613	getchar.c	FUNCTION_78	IF_11	IF_17	WHILE_2
0x4008c0d	            0x7e28	                           jle 0x4008c37	      4613	getchar.c	FUNCTION_78	IF_11	IF_17	WHILE_2
0x4008c0f	      0x488d6c2420	                   lea rbp, [rsp + 0x20]	      4613	getchar.c	FUNCTION_78	IF_11	IF_17	WHILE_2
0x4008c14	         0xf1f4000	                         nop dword [rax]	      4613	getchar.c	FUNCTION_78	IF_11	IF_17	WHILE_2
0x4008c18	      0x410fbe4f2c	           movsx ecx, byte [r15 + 0x2c] 	      4614	getchar.c	FUNCTION_78	IF_11	IF_17	CALL_26
0x4008c1d	      0xba01000000	                              mov edx, 1	      4614	getchar.c	FUNCTION_78	IF_11	IF_17	CALL_26
0x4008c22	      0xbe01000000	                              mov esi, 1	      4614	getchar.c	FUNCTION_78	IF_11	IF_17	CALL_26
0x4008c27	          0x4889ef	                            mov rdi, rbp	      4614	getchar.c	FUNCTION_78	IF_11	IF_17	CALL_26
0x4008c2a	          0x83eb01	                              sub ebx, 1	      4613	getchar.c	FUNCTION_78	IF_11	IF_17	WHILE_2
0x4008c2d	      0xe83e80ffff	       call sym.ins_typebuf.constprop.15	      4614	getchar.c	FUNCTION_78	IF_11	IF_17	CALL_26
0x4008c32	          0x83fbff	             cmp ebx, 0xffffffffffffffff	      4613	getchar.c	FUNCTION_78	IF_11	IF_17	WHILE_2
0x4008c35	            0x75e1	                           jne 0x4008c18	      4613	getchar.c	FUNCTION_78	IF_11	IF_17	WHILE_2
0x4008c37	      0xb801000000	                              mov eax, 1	      4615	getchar.c	FUNCTION_78	IF_11	IF_17
0x4008c3c	      0xe9c5fbffff	                           jmp 0x4008806	      4615	getchar.c	FUNCTION_78	IF_11	IF_17
0x4008c41	        0x448d7bff	                     lea r15d, [rbx - 1]	      4492	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_10
0x4008c45	          0x4585ff	                         test r15d, r15d	      4492	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_10
0x4008c48	     0xf8e62fdffff	                           jle 0x40089b0	      4492	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_10
0x4008c4e	          0x4d63e7	                        movsxd r12, r15d	      4492	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_10
0x4008c51	          0x4901ec	                            add r12, rbp	      4492	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_10
0x4008c54	            0xeb14	                           jmp 0x4008c6a	      4492	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_10
0x4008c56	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4492	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_10
0x4008c60	        0x4983ec01	                              sub r12, 1	      4492	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_10
0x4008c64	        0x4183ef01	                             sub r15d, 1	      4492	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_10
0x4008c68	            0x7462	                            je 0x4008ccc	      4492	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_10
0x4008c6a	    0x410fb67c24ff	               movzx edi, byte [r12 - 1]	      4492	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_10
0x4008c70	      0xe800000000	                          call 0x4008c75	      4492	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_10
0x4008c75	            0x85c0	                           test eax, eax	      4492	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_10
0x4008c77	            0x74e7	                            je 0x4008c60	      4492	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_10
0x4008c79	      0xe932fdffff	                           jmp 0x40089b0	      4492	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_10
0x4008c7e	      0x4c637c2408	            movsxd r15, dword [rsp + 8] 	      4469	getchar.c	FUNCTION_78	IF_4	WHILE_1
0x4008c83	    0x41bc01000000	                             mov r12d, 1	      4469	getchar.c	FUNCTION_78	IF_4	WHILE_1
0x4008c89	          0x4901ef	                            add r15, rbp	      4469	getchar.c	FUNCTION_78	IF_4	WHILE_1
0x4008c8c	          0x4d39fe	                            cmp r14, r15	      4469	getchar.c	FUNCTION_78	IF_4	WHILE_1
0x4008c8f	            0x771c	                            ja 0x4008cad	      4469	getchar.c	FUNCTION_78	IF_4	WHILE_1
0x4008c91	      0xe9fafbffff	                           jmp 0x4008890	      4469	getchar.c	FUNCTION_78	IF_4	WHILE_1
0x4008c96	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4469	getchar.c	FUNCTION_78	IF_4	WHILE_1
0x4008ca0	        0x4183c401	                             add r12d, 1	      4477	getchar.c	FUNCTION_78	IF_4	WHILE_1
0x4008ca4	          0x4d39f7	                            cmp r15, r14	      4469	getchar.c	FUNCTION_78	IF_4	WHILE_1
0x4008ca7	     0xf83e3fbffff	                           jae 0x4008890	      4469	getchar.c	FUNCTION_78	IF_4	WHILE_1
0x4008cad	          0x4c89f6	                            mov rsi, r14	      4471	getchar.c	FUNCTION_78	IF_4	WHILE_1	CALL_5
0x4008cb0	          0x4889ef	                            mov rdi, rbp	      4471	getchar.c	FUNCTION_78	IF_4	WHILE_1	CALL_5
0x4008cb3	      0xe800000000	                          call 0x4008cb8	      4471	getchar.c	FUNCTION_78	IF_4	WHILE_1	CALL_5
0x4008cb8	           0xfb638	                   movzx edi, byte [rax]	      4472	getchar.c	FUNCTION_78	IF_4	WHILE_1	IF_7	CALL_7
0x4008cbb	          0x4989c6	                            mov r14, rax	      4471	getchar.c	FUNCTION_78	IF_4	WHILE_1	CALL_5
0x4008cbe	      0xe800000000	                          call 0x4008cc3	      4472	getchar.c	FUNCTION_78	IF_4	WHILE_1	IF_7	CALL_7
0x4008cc3	            0x85c0	                           test eax, eax	      4472	getchar.c	FUNCTION_78	IF_4	WHILE_1	IF_7	CALL_7
0x4008cc5	            0x74d9	                            je 0x4008ca0	      4472	getchar.c	FUNCTION_78	IF_4	WHILE_1	IF_7	CALL_7
0x4008cc7	      0xe929fdffff	                           jmp 0x40089f5	      4472	getchar.c	FUNCTION_78	IF_4	WHILE_1	IF_7	CALL_7
0x4008ccc	          0x4531e4	                          xor r12d, r12d	      4433	getchar.c	FUNCTION_78
0x4008ccf	          0x4531ff	                          xor r15d, r15d	      4493	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_11
0x4008cd2	      0xe9bffbffff	                           jmp 0x4008896	      4493	getchar.c	FUNCTION_78	ELSE_2	FOR_1	CALL_11
0x4008cd7	          0x4c89f6	                            mov rsi, r14	      4466	getchar.c	FUNCTION_78	IF_4	ELSE_1	CALL_4
0x4008cda	          0x4889ef	                            mov rdi, rbp	      4466	getchar.c	FUNCTION_78	IF_4	ELSE_1	CALL_4
0x4008cdd	      0xe800000000	                          call 0x4008ce2	      4466	getchar.c	FUNCTION_78	IF_4	ELSE_1	CALL_4
0x4008ce2	          0x4889c7	                            mov rdi, rax	      4466	getchar.c	FUNCTION_78	IF_4	ELSE_1	CALL_4
0x4008ce5	      0xe800000000	                          call 0x4008cea	      4466	getchar.c	FUNCTION_78	IF_4	ELSE_1	CALL_4
0x4008cea	        0x89442410	             mov dword [rsp + 0x10], eax	      4466	getchar.c	FUNCTION_78	IF_4	ELSE_1	CALL_4
0x4008cee	      0xe981fbffff	                           jmp 0x4008874	      4466	getchar.c	FUNCTION_78	IF_4	ELSE_1	CALL_4
0x4008cf3	          0x83eb01	                              sub ebx, 1	      4613	getchar.c	FUNCTION_78	IF_11	IF_17	WHILE_2
0x4008cf6	      0xe914ffffff	                           jmp 0x4008c0f	      4613	getchar.c	FUNCTION_78	IF_11	IF_17	WHILE_2
0x4008cfb	    0x4181fd800000	                          cmp r13d, 0x80	      4566	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_19
0x4008d02	      0xc644242080	            mov byte [rsp + 0x20], 0x80 	      4565	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19
0x4008d07	     0xf8496000000	                            je 0x4008da3	      4566	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_19
0x4008d0d	          0x4585ed	                         test r13d, r13d	      4566	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_19
0x4008d10	            0x7543	                           jne 0x4008d55	      4566	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_19
0x4008d12	      0xb8ffffffff	                     mov eax, 0xffffffff	      4566	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_19
0x4008d17	        0x88442421	               mov byte [rsp + 0x21], al	      4566	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_19
0x4008d1b	      0xb858000000	                           mov eax, 0x58	      4567	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_20
0x4008d20	        0x88442422	               mov byte [rsp + 0x22], al	      4567	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_20
0x4008d24	    0x41be03000000	                             mov r14d, 3	      4567	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_20
0x4008d2a	      0x488d6c2420	                   lea rbp, [rsp + 0x20]	      4567	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_20
0x4008d2f	      0xe952feffff	                           jmp 0x4008b86	      4567	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_20
0x4008d34	        0x498b7f10	            mov rdi, qword [r15 + 0x10] 	      4591	getchar.c	FUNCTION_78	IF_11	IF_17	CALL_22
0x4008d38	          0x4489ee	                           mov esi, r13d	      4591	getchar.c	FUNCTION_78	IF_11	IF_17	CALL_22
0x4008d3b	      0xe820d9ffff	                  call sym.eval_map_expr	      4591	getchar.c	FUNCTION_78	IF_11	IF_17	CALL_22
0x4008d40	          0x4889c5	                            mov rbp, rax	      4591	getchar.c	FUNCTION_78	IF_11	IF_17	CALL_22
0x4008d43	      0xe96cfeffff	                           jmp 0x4008bb4	      4591	getchar.c	FUNCTION_78	IF_11	IF_17	CALL_22
0x4008d48	          0x4889ef	                            mov rdi, rbp	      4603	getchar.c	FUNCTION_78	IF_11	IF_17	ELSE_6	IF_24	CALL_25
0x4008d4b	      0xe800000000	                          call 0x4008d50	      4603	getchar.c	FUNCTION_78	IF_11	IF_17	ELSE_6	IF_24	CALL_25
0x4008d50	      0xe998feffff	                           jmp 0x4008bed	      4603	getchar.c	FUNCTION_78	IF_11	IF_17	ELSE_6	IF_24	CALL_25
0x4008d55	          0x4489e8	                           mov eax, r13d	      4566	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_19
0x4008d58	            0xf7d8	                                 neg eax	      4566	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_19
0x4008d5a	        0x88442421	               mov byte [rsp + 0x21], al	      4566	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_19
0x4008d5e	          0x4489e8	                           mov eax, r13d	      4567	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_20
0x4008d61	            0xf7d8	                                 neg eax	      4567	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_20
0x4008d63	          0xc1e808	                              shr eax, 8	      4567	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_20
0x4008d66	            0xebb8	                           jmp 0x4008d20	      4567	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_20
0x4008d68	          0x4863c1	                         movsxd rax, ecx	      4583	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	ELSE_5
0x4008d6b	      0x488d6c2420	                   lea rbp, [rsp + 0x20]	      4583	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	ELSE_5
0x4008d70	      0x44886c0420	       mov byte [rsp + rax + 0x20], r13b	      4583	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	ELSE_5
0x4008d75	      0xe90cfeffff	                           jmp 0x4008b86	      4583	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	ELSE_5
0x4008d7a	    0x41be01000000	                             mov r14d, 1	      4583	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	ELSE_5
0x4008d80	            0x31c0	                            xor eax, eax	      4583	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	ELSE_4	ELSE_5
0x4008d82	            0x31c9	                            xor ecx, ecx	      4559	getchar.c	FUNCTION_78	IF_11	IF_17
0x4008d84	      0xe9befdffff	                           jmp 0x4008b47	      4559	getchar.c	FUNCTION_78	IF_11	IF_17
0x4008d89	          0x4885c0	                           test rax, rax	      4514	getchar.c	FUNCTION_78	IF_11	FOR_2
0x4008d8c	     0xf8472faffff	                            je 0x4008804	      4514	getchar.c	FUNCTION_78	IF_11	FOR_2
0x4008d92	          0x4989c7	                            mov r15, rax	      4514	getchar.c	FUNCTION_78	IF_11	FOR_2
0x4008d95	    0x48c744240800	                  mov qword [rsp + 8], 0	      4509	getchar.c	FUNCTION_78	IF_11	IF_12
0x4008d9e	      0xe938fbffff	                           jmp 0x40088db	      4509	getchar.c	FUNCTION_78	IF_11	IF_12
0x4008da3	      0xb8feffffff	                     mov eax, 0xfffffffe	      4566	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_19
0x4008da8	      0xe96affffff	                           jmp 0x4008d17	      4566	getchar.c	FUNCTION_78	IF_11	IF_17	IF_18	IF_19	CALL_19
0x4008dad	      0xe800000000	                          call 0x4008db2	      4619	getchar.c	FUNCTION_78
0x4008db2	          0x4c89f7	                            mov rdi, r14	      4540	getchar.c	FUNCTION_78	IF_11	FOR_2	CALL_17
0x4008db5	      0xe800000000	                          call 0x4008dba	      4540	getchar.c	FUNCTION_78	IF_11	FOR_2	CALL_17
0x4008dba	      0xe931fdffff	                           jmp 0x4008af0	      4540	getchar.c	FUNCTION_78	IF_11	FOR_2	CALL_17
vpeekc_any	WHILE,0:ELSE,0:IF,1:DO,0:CALL,1:functions,0:SWITCH,0:FOR,0	23
0x4008700	        0x4883ec08	                              sub rsp, 8	      1882	getchar.c	FUNCTION_59
0x4008704	    0x8b0500000000	            mov eax, dword [0x0400870a] 	      1850	getchar.c	FUNCTION_57	IF_1
0x400870a	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1850	getchar.c	FUNCTION_57	IF_1
0x400870d	            0x7421	                            je 0x4008730	      1850	getchar.c	FUNCTION_57	IF_1
0x400870f	            0x85c0	                           test eax, eax	      1886	getchar.c	FUNCTION_59	IF_1
0x4008711	            0x7515	                           jne 0x4008728	      1886	getchar.c	FUNCTION_59	IF_1
0x4008713	    0x8b0500000000	            mov eax, dword [0x04008719] 	      1887	getchar.c	FUNCTION_59	IF_1
0x4008719	      0xba1b000000	                           mov edx, 0x1b	      1887	getchar.c	FUNCTION_59	IF_1
0x400871e	            0x85c0	                           test eax, eax	      1887	getchar.c	FUNCTION_59	IF_1
0x4008720	      0xb800000000	                              mov eax, 0	      1887	getchar.c	FUNCTION_59	IF_1
0x4008725	           0xf4fc2	                          cmovg eax, edx	      1887	getchar.c	FUNCTION_59	IF_1
0x4008728	        0x4883c408	                              add rsp, 8	      1889	getchar.c	FUNCTION_59
0x400872c	              0xc3	                                     ret	      1889	getchar.c	FUNCTION_59
0x400872d	           0xf1f00	                         nop dword [rax]	      1889	getchar.c	FUNCTION_59
0x4008730	    0x8b0d00000000	            mov ecx, dword [0x04008736] 	      1997	getchar.c	FUNCTION_62	IF_1
0x4008736	            0x85c9	                           test ecx, ecx	      1997	getchar.c	FUNCTION_62	IF_1
0x4008738	            0x7e0a	                           jle 0x4008744	      1997	getchar.c	FUNCTION_62	IF_1
0x400873a	    0x8b1500000000	            mov edx, dword [0x04008740] 	      1997	getchar.c	FUNCTION_62	IF_1
0x4008740	            0x85d2	                           test edx, edx	      1997	getchar.c	FUNCTION_62	IF_1
0x4008742	            0x74cf	                            je 0x4008713	      1997	getchar.c	FUNCTION_62	IF_1
0x4008744	            0x31ff	                            xor edi, edi	      1997	getchar.c	FUNCTION_62	IF_1
0x4008746	      0xe8a5e0ffff	              call sym.vgetorpeek.part.9	      1997	getchar.c	FUNCTION_62	IF_1
0x400874b	            0xebc2	                           jmp 0x400870f	      1997	getchar.c	FUNCTION_62	IF_1
stuffReadbuff	WHILE,0:ELSE,0:IF,0:DO,0:CALL,1:functions,0:SWITCH,0:FOR,0	95
0x4001eb0	            0x4155	                                push r13	       654	getchar.c	FUNCTION_23
0x4001eb2	            0x4154	                                push r12	       654	getchar.c	FUNCTION_23
0x4001eb4	              0x55	                                push rbp	       654	getchar.c	FUNCTION_23
0x4001eb5	              0x53	                                push rbx	       654	getchar.c	FUNCTION_23
0x4001eb6	          0x4889fd	                            mov rbp, rdi	       654	getchar.c	FUNCTION_23
0x4001eb9	        0x4883ec08	                              sub rsp, 8	       654	getchar.c	FUNCTION_23
0x4001ebd	      0xe800000000	                          call 0x4001ec2	       238	getchar.c	FUNCTION_5	CALL_1
0x4001ec2	          0x4885c0	                           test rax, rax	       239	getchar.c	FUNCTION_5	IF_2
0x4001ec5	     0xf8498000000	                            je 0x4001f63	       239	getchar.c	FUNCTION_5	IF_2
0x4001ecb	    0x488b3d000000	            mov rdi, qword [0x04001ed2] 	       242	getchar.c	FUNCTION_5	IF_3
0x4001ed2	          0x4889c3	                            mov rbx, rax	       242	getchar.c	FUNCTION_5	IF_3
0x4001ed5	          0x4885ff	                           test rdi, rdi	       242	getchar.c	FUNCTION_5	IF_3
0x4001ed8	     0xf8402010000	                            je 0x4001fe0	       242	getchar.c	FUNCTION_5	IF_3
0x4001ede	    0x48833d000000	               cmp qword [0x04001ee6], 0	       247	getchar.c	FUNCTION_5	ELSE_1	IF_4
0x4001ee6	     0xf8414010000	                            je 0x4002000	       247	getchar.c	FUNCTION_5	ELSE_1	IF_4
0x4001eec	    0x486335000000	         movsxd rsi, dword [0x04001ef3] 	       252	getchar.c	FUNCTION_5	ELSE_2	IF_5
0x4001ef3	            0x85f6	                           test esi, esi	       252	getchar.c	FUNCTION_5	ELSE_2	IF_5
0x4001ef5	     0xf8585000000	                           jne 0x4001f80	       252	getchar.c	FUNCTION_5	ELSE_2	IF_5
0x4001efb	    0x8b0500000000	            mov eax, dword [0x04001f01] 	       252	getchar.c	FUNCTION_5	ELSE_2	IF_5
0x4001f01	            0x39d8	                            cmp eax, ebx	       258	getchar.c	FUNCTION_5	IF_6
0x4001f03	    0xc70500000000	               mov dword [0x04001f0d], 0	       256	getchar.c	FUNCTION_5
0x4001f0d	     0xf8d95000000	                           jge 0x4001fa8	       258	getchar.c	FUNCTION_5	IF_6
0x4001f13	        0x4883fb13	                           cmp rbx, 0x13	       266	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x4001f17	            0x7e57	                           jle 0x4001f70	       266	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x4001f19	        0x488d7b10	                   lea rdi, [rbx + 0x10]	       266	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x4001f1d	          0x4989dd	                            mov r13, rbx	       266	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x4001f20	      0xbe01000000	                              mov esi, 1	       270	getchar.c	FUNCTION_5	ELSE_3	CALL_8
0x4001f25	      0xe800000000	                          call 0x4001f2a	       270	getchar.c	FUNCTION_5	ELSE_3	CALL_8
0x4001f2a	          0x4885c0	                           test rax, rax	       272	getchar.c	FUNCTION_5	ELSE_3	IF_8
0x4001f2d	          0x4989c4	                            mov r12, rax	       270	getchar.c	FUNCTION_5	ELSE_3	CALL_8
0x4001f30	            0x7431	                            je 0x4001f63	       272	getchar.c	FUNCTION_5	ELSE_3	IF_8
0x4001f32	        0x488d7808	                      lea rdi, [rax + 8]	       275	getchar.c	FUNCTION_5	ELSE_3	CALL_9
0x4001f36	          0x4889da	                            mov rdx, rbx	       275	getchar.c	FUNCTION_5	ELSE_3	CALL_9
0x4001f39	          0x4129dd	                           sub r13d, ebx	       274	getchar.c	FUNCTION_5	ELSE_3
0x4001f3c	          0x4889ee	                            mov rsi, rbp	       275	getchar.c	FUNCTION_5	ELSE_3	CALL_9
0x4001f3f	    0x44892d000000	           mov dword [0x04001f46], r13d 	       274	getchar.c	FUNCTION_5	ELSE_3
0x4001f46	      0xe800000000	                          call 0x4001f4b	       275	getchar.c	FUNCTION_5	ELSE_3	CALL_9
0x4001f4b	    0x488b05000000	            mov rax, qword [0x04001f52] 	       277	getchar.c	FUNCTION_5	ELSE_3
0x4001f52	          0x488b10	                    mov rdx, qword [rax]	       277	getchar.c	FUNCTION_5	ELSE_3
0x4001f55	        0x49891424	                    mov qword [r12], rdx	       277	getchar.c	FUNCTION_5	ELSE_3
0x4001f59	          0x4c8920	                    mov qword [rax], r12	       278	getchar.c	FUNCTION_5	ELSE_3
0x4001f5c	    0x4c8925000000	            mov qword [0x04001f63], r12 	       279	getchar.c	FUNCTION_5	ELSE_3
0x4001f63	        0x4883c408	                              add rsp, 8	       656	getchar.c	FUNCTION_23
0x4001f67	              0x5b	                                 pop rbx	       656	getchar.c	FUNCTION_23
0x4001f68	              0x5d	                                 pop rbp	       656	getchar.c	FUNCTION_23
0x4001f69	            0x415c	                                 pop r12	       656	getchar.c	FUNCTION_23
0x4001f6b	            0x415d	                                 pop r13	       656	getchar.c	FUNCTION_23
0x4001f6d	              0xc3	                                     ret	       656	getchar.c	FUNCTION_23
0x4001f6e	            0x6690	                                     nop	       656	getchar.c	FUNCTION_23
0x4001f70	      0xbf24000000	                           mov edi, 0x24	       266	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x4001f75	    0x41bd14000000	                          mov r13d, 0x14	       267	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x4001f7b	            0xeba3	                           jmp 0x4001f20	       267	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x4001f7d	           0xf1f00	                         nop dword [rax]	       267	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x4001f80	        0x4c8d6f08	                      lea r13, [rdi + 8]	       253	getchar.c	FUNCTION_5	ELSE_2	IF_5	CALL_4
0x4001f84	      0x4d8d643500	                    lea r12, [r13 + rsi]	       253	getchar.c	FUNCTION_5	ELSE_2	IF_5	CALL_4
0x4001f89	          0x4c89e7	                            mov rdi, r12	       253	getchar.c	FUNCTION_5	ELSE_2	IF_5	CALL_4
0x4001f8c	      0xe800000000	                          call 0x4001f91	       253	getchar.c	FUNCTION_5	ELSE_2	IF_5	CALL_4
0x4001f91	        0x488d5001	                      lea rdx, [rax + 1]	        59	string3.h	FUNCTION_106	CALL_3
0x4001f95	          0x4c89e6	                            mov rsi, r12	        59	string3.h	FUNCTION_106	CALL_3
0x4001f98	          0x4c89ef	                            mov rdi, r13	        59	string3.h	FUNCTION_106	CALL_3
0x4001f9b	      0xe800000000	                          call 0x4001fa0	        59	string3.h	FUNCTION_106	CALL_3
0x4001fa0	      0xe956ffffff	                           jmp 0x4001efb	        59	string3.h	FUNCTION_106	CALL_3
0x4001fa5	           0xf1f00	                         nop dword [rax]	        59	string3.h	FUNCTION_106	CALL_3
0x4001fa8	    0x488b05000000	            mov rax, qword [0x04001faf] 	       260	getchar.c	FUNCTION_5	IF_6	CALL_6
0x4001faf	        0x4c8d6008	                      lea r12, [rax + 8]	       260	getchar.c	FUNCTION_5	IF_6	CALL_6
0x4001fb3	          0x4c89e7	                            mov rdi, r12	       260	getchar.c	FUNCTION_5	IF_6	CALL_6
0x4001fb6	      0xe800000000	                          call 0x4001fbb	       260	getchar.c	FUNCTION_5	IF_6	CALL_6
0x4001fbb	        0x498d3c04	                    lea rdi, [r12 + rax]	       261	getchar.c	FUNCTION_5	IF_6	CALL_7
0x4001fbf	          0x4889da	                            mov rdx, rbx	       261	getchar.c	FUNCTION_5	IF_6	CALL_7
0x4001fc2	          0x4889ee	                            mov rsi, rbp	       261	getchar.c	FUNCTION_5	IF_6	CALL_7
0x4001fc5	      0xe800000000	                          call 0x4001fca	       261	getchar.c	FUNCTION_5	IF_6	CALL_7
0x4001fca	    0x291d00000000	             sub dword [0x04001fd0], ebx	       262	getchar.c	FUNCTION_5	IF_6
0x4001fd0	        0x4883c408	                              add rsp, 8	       656	getchar.c	FUNCTION_23
0x4001fd4	              0x5b	                                 pop rbx	       656	getchar.c	FUNCTION_23
0x4001fd5	              0x5d	                                 pop rbp	       656	getchar.c	FUNCTION_23
0x4001fd6	            0x415c	                                 pop r12	       656	getchar.c	FUNCTION_23
0x4001fd8	            0x415d	                                 pop r13	       656	getchar.c	FUNCTION_23
0x4001fda	              0xc3	                                     ret	       656	getchar.c	FUNCTION_23
0x4001fdb	       0xf1f440000	                   nop dword [rax + rax]	       656	getchar.c	FUNCTION_23
0x4001fe0	    0xc70500000000	               mov dword [0x04001fea], 0	       244	getchar.c	FUNCTION_5	IF_3
0x4001fea	    0x48c705000000	               mov qword [0x04001ff5], 0	       245	getchar.c	FUNCTION_5	IF_3
0x4001ff5	            0x31c0	                            xor eax, eax	       245	getchar.c	FUNCTION_5	IF_3
0x4001ff7	      0xe905ffffff	                           jmp 0x4001f01	       245	getchar.c	FUNCTION_5	IF_3
0x4001ffc	         0xf1f4000	                         nop dword [rax]	       245	getchar.c	FUNCTION_5	IF_3
0x4002000	            0x31ff	                            xor edi, edi	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x4002002	      0xba05000000	                              mov edx, 5	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x4002007	      0xbe00000000	                              mov esi, 0	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x400200c	      0xe800000000	                          call 0x4002011	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x4002011	        0x4883c408	                              add rsp, 8	       656	getchar.c	FUNCTION_23
0x4002015	          0x4889c7	                            mov rdi, rax	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x4002018	              0x5b	                                 pop rbx	       656	getchar.c	FUNCTION_23
0x4002019	              0x5d	                                 pop rbp	       656	getchar.c	FUNCTION_23
0x400201a	            0x415c	                                 pop r12	       656	getchar.c	FUNCTION_23
0x400201c	            0x415d	                                 pop r13	       656	getchar.c	FUNCTION_23
0x400201e	      0xe900000000	                           jmp 0x4002023	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
char_avail	WHILE,0:ELSE,0:IF,1:DO,0:CALL,1:functions,0:SWITCH,0:FOR,0	28
0x4008750	        0x4883ec08	                              sub rsp, 8	      1898	getchar.c	FUNCTION_60
0x4008754	    0x8b1500000000	            mov edx, dword [0x0400875a] 	      1904	getchar.c	FUNCTION_60	IF_1
0x400875a	            0x31c0	                            xor eax, eax	      1904	getchar.c	FUNCTION_60	IF_1
0x400875c	            0x85d2	                           test edx, edx	      1904	getchar.c	FUNCTION_60	IF_1
0x400875e	            0x752b	                           jne 0x400878b	      1904	getchar.c	FUNCTION_60	IF_1
0x4008760	    0x8b0500000000	            mov eax, dword [0x04008766] 	      1907	getchar.c	FUNCTION_60
0x4008766	          0x8d5001	                      lea edx, [rax + 1]	      1907	getchar.c	FUNCTION_60
0x4008769	    0x8b0500000000	            mov eax, dword [0x0400876f] 	      1850	getchar.c	FUNCTION_57	IF_1
0x400876f	    0x891500000000	            mov dword [0x04008775], edx 	      1907	getchar.c	FUNCTION_60
0x4008775	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1850	getchar.c	FUNCTION_57	IF_1
0x4008778	            0x7416	                            je 0x4008790	      1850	getchar.c	FUNCTION_57	IF_1
0x400877a	            0x85c0	                           test eax, eax	      1850	getchar.c	FUNCTION_57	IF_1
0x400877c	           0xf95c0	                                setne al	      1850	getchar.c	FUNCTION_57	IF_1
0x400877f	           0xfb6c0	                           movzx eax, al	      1850	getchar.c	FUNCTION_57	IF_1
0x4008782	          0x83ea01	                              sub edx, 1	      1909	getchar.c	FUNCTION_60
0x4008785	    0x891500000000	            mov dword [0x0400878b], edx 	      1909	getchar.c	FUNCTION_60
0x400878b	        0x4883c408	                              add rsp, 8	      1911	getchar.c	FUNCTION_60
0x400878f	              0xc3	                                     ret	      1911	getchar.c	FUNCTION_60
0x4008790	    0x8b0500000000	            mov eax, dword [0x04008796] 	      1997	getchar.c	FUNCTION_62	IF_1
0x4008796	            0x85c0	                           test eax, eax	      1997	getchar.c	FUNCTION_62	IF_1
0x4008798	            0x7e0a	                           jle 0x40087a4	      1997	getchar.c	FUNCTION_62	IF_1
0x400879a	    0x8b0500000000	            mov eax, dword [0x040087a0] 	      1997	getchar.c	FUNCTION_62	IF_1
0x40087a0	            0x85c0	                           test eax, eax	      1997	getchar.c	FUNCTION_62	IF_1
0x40087a2	            0x74de	                            je 0x4008782	      1997	getchar.c	FUNCTION_62	IF_1
0x40087a4	            0x31ff	                            xor edi, edi	      1997	getchar.c	FUNCTION_62	IF_1
0x40087a6	      0xe845e0ffff	              call sym.vgetorpeek.part.9	      1997	getchar.c	FUNCTION_62	IF_1
0x40087ab	    0x8b1500000000	            mov edx, dword [0x040087b1] 	      1997	getchar.c	FUNCTION_62	IF_1
0x40087b1	            0xebc7	                           jmp 0x400877a	      1997	getchar.c	FUNCTION_62	IF_1
ResetRedobuff	WHILE,0:ELSE,0:IF,1:DO,0:CALL,1:functions,0:SWITCH,0:FOR,0	24
0x4001510	    0x8b0500000000	            mov eax, dword [0x04001516] 	       493	getchar.c	FUNCTION_15	IF_1
0x4001516	            0x85c0	                           test eax, eax	       493	getchar.c	FUNCTION_15	IF_1
0x4001518	            0x756a	                           jne 0x4001584	       493	getchar.c	FUNCTION_15	IF_1
0x400151a	    0x488b3d000000	            mov rdi, qword [0x04001521] 	       141	getchar.c	FUNCTION_1	FOR_1
0x4001521	              0x53	                                push rbx	       492	getchar.c	FUNCTION_15
0x4001522	          0x4885ff	                           test rdi, rdi	       141	getchar.c	FUNCTION_1	FOR_1
0x4001525	            0x7419	                            je 0x4001540	       141	getchar.c	FUNCTION_1	FOR_1
0x4001527	    0x660f1f840000	                    nop word [rax + rax]	       141	getchar.c	FUNCTION_1	FOR_1
0x4001530	          0x488b1f	                    mov rbx, qword [rdi]	       143	getchar.c	FUNCTION_1	FOR_1
0x4001533	      0xe800000000	                          call 0x4001538	       144	getchar.c	FUNCTION_1	FOR_1	CALL_1
0x4001538	          0x4885db	                           test rbx, rbx	       141	getchar.c	FUNCTION_1	FOR_1
0x400153b	          0x4889df	                            mov rdi, rbx	       141	getchar.c	FUNCTION_1	FOR_1
0x400153e	            0x75f0	                           jne 0x4001530	       141	getchar.c	FUNCTION_1	FOR_1
0x4001540	    0x488b05000000	            mov rax, qword [0x04001547] 	       496	getchar.c	FUNCTION_15	IF_1
0x4001547	    0x48c705000000	               mov qword [0x04001552], 0	       497	getchar.c	FUNCTION_15	IF_1
0x4001552	              0x5b	                                 pop rbx	       499	getchar.c	FUNCTION_15
0x4001553	    0x488905000000	            mov qword [0x0400155a], rax 	       496	getchar.c	FUNCTION_15	IF_1
0x400155a	    0x488b05000000	            mov rax, qword [0x04001561] 	       496	getchar.c	FUNCTION_15	IF_1
0x4001561	    0x488905000000	            mov qword [0x04001568], rax 	       496	getchar.c	FUNCTION_15	IF_1
0x4001568	    0x488b05000000	            mov rax, qword [0x0400156f] 	       496	getchar.c	FUNCTION_15	IF_1
0x400156f	    0x488905000000	            mov qword [0x04001576], rax 	       496	getchar.c	FUNCTION_15	IF_1
0x4001576	    0x488b05000000	            mov rax, qword [0x0400157d] 	       496	getchar.c	FUNCTION_15	IF_1
0x400157d	    0x488905000000	            mov qword [0x04001584], rax 	       496	getchar.c	FUNCTION_15	IF_1
0x4001584	            0xf3c3	                                     ret	       499	getchar.c	FUNCTION_15
eval_map_expr	WHILE,0:ELSE,0:IF,3:DO,0:CALL,10:functions,0:SWITCH,0:FOR,0	109
0x4006660	            0x4157	                                push r15	      4630	getchar.c	FUNCTION_79
0x4006662	            0x4156	                                push r14	      4630	getchar.c	FUNCTION_79
0x4006664	            0x4155	                                push r13	      4630	getchar.c	FUNCTION_79
0x4006666	            0x4154	                                push r12	      4630	getchar.c	FUNCTION_79
0x4006668	              0x55	                                push rbp	      4630	getchar.c	FUNCTION_79
0x4006669	              0x53	                                push rbx	      4630	getchar.c	FUNCTION_79
0x400666a	            0x89f5	                            mov ebp, esi	      4630	getchar.c	FUNCTION_79
0x400666c	        0x4883ec18	                           sub rsp, 0x18	      4630	getchar.c	FUNCTION_79
0x4006670	      0xe800000000	                          call 0x4006675	      4641	getchar.c	FUNCTION_79	CALL_1
0x4006675	          0x4885c0	                           test rax, rax	      4642	getchar.c	FUNCTION_79	IF_1
0x4006678	     0xf8458010000	                            je 0x40067d6	      4642	getchar.c	FUNCTION_79	IF_1
0x400667e	          0x4889c3	                            mov rbx, rax	      4642	getchar.c	FUNCTION_79	IF_1
0x4006681	        0x488d5001	                      lea rdx, [rax + 1]	      4642	getchar.c	FUNCTION_79	IF_1
0x4006685	          0x4889c1	                            mov rcx, rax	      4642	getchar.c	FUNCTION_79	IF_1
0x4006688	            0xeb15	                           jmp 0x400669f	      4642	getchar.c	FUNCTION_79	IF_1
0x400668a	    0x660f1f440000	                    nop word [rax + rax]	      4642	getchar.c	FUNCTION_79	IF_1
0x4006690	            0x3c9b	                            cmp al, 0x9b	      4744	getchar.c	FUNCTION_81	WHILE_1	ELSE_1	IF_2
0x4006692	            0x743c	                            je 0x40066d0	      4744	getchar.c	FUNCTION_81	WHILE_1	ELSE_1	IF_2
0x4006694	        0x4883c101	                              add rcx, 1	      4751	getchar.c	FUNCTION_81	WHILE_1	ELSE_2
0x4006698	          0x8842ff	                  mov byte [rdx - 1], al	      4751	getchar.c	FUNCTION_81	WHILE_1	ELSE_2
0x400669b	        0x4883c201	                              add rdx, 1	      4751	getchar.c	FUNCTION_81	WHILE_1	ELSE_2
0x400669f	           0xfb601	                   movzx eax, byte [rcx]	      4737	getchar.c	FUNCTION_81	WHILE_1
0x40066a2	            0x84c0	                             test al, al	      4737	getchar.c	FUNCTION_81	WHILE_1
0x40066a4	            0x743a	                            je 0x40066e0	      4737	getchar.c	FUNCTION_81	WHILE_1
0x40066a6	            0x3c80	                            cmp al, 0x80	      4739	getchar.c	FUNCTION_81	WHILE_1	IF_1
0x40066a8	            0x75e6	                           jne 0x4006690	      4739	getchar.c	FUNCTION_81	WHILE_1	IF_1
0x40066aa	         0xfb67101	               movzx esi, byte [rcx + 1]	      4739	getchar.c	FUNCTION_81	WHILE_1	IF_1
0x40066ae	        0x4080fefe	                           cmp sil, 0xfe	      4739	getchar.c	FUNCTION_81	WHILE_1	IF_1
0x40066b2	     0xf8400010000	                            je 0x40067b8	      4739	getchar.c	FUNCTION_81	WHILE_1	IF_1
0x40066b8	        0x4080fefd	                           cmp sil, 0xfd	      4745	getchar.c	FUNCTION_81	WHILE_1	ELSE_1	IF_2
0x40066bc	            0x75d6	                           jne 0x4006694	      4745	getchar.c	FUNCTION_81	WHILE_1	ELSE_1	IF_2
0x40066be	        0x80790251	                cmp byte [rcx + 2], 0x51	      4745	getchar.c	FUNCTION_81	WHILE_1	ELSE_1	IF_2
0x40066c2	            0x75d0	                           jne 0x4006694	      4745	getchar.c	FUNCTION_81	WHILE_1	ELSE_1	IF_2
0x40066c4	        0xc642ff9b	                mov byte [rdx - 1], 0x9b	      4747	getchar.c	FUNCTION_81	WHILE_1	ELSE_1	IF_2
0x40066c8	        0x4883c103	                              add rcx, 3	      4748	getchar.c	FUNCTION_81	WHILE_1	ELSE_1	IF_2
0x40066cc	            0xebcd	                           jmp 0x400669b	      4748	getchar.c	FUNCTION_81	WHILE_1	ELSE_1	IF_2
0x40066ce	            0x6690	                                     nop	      4748	getchar.c	FUNCTION_81	WHILE_1	ELSE_1	IF_2
0x40066d0	         0xfb67101	               movzx esi, byte [rcx + 1]	      4748	getchar.c	FUNCTION_81	WHILE_1	ELSE_1	IF_2
0x40066d4	            0xebe2	                           jmp 0x40066b8	      4748	getchar.c	FUNCTION_81	WHILE_1	ELSE_1	IF_2
0x40066d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4748	getchar.c	FUNCTION_81	WHILE_1	ELSE_1	IF_2
0x40066e0	        0xc642ff00	                   mov byte [rdx - 1], 0	      4753	getchar.c	FUNCTION_81	ELSE_2
0x40066e4	      0xe800000000	                          call 0x40066e9	      4646	getchar.c	FUNCTION_79	CALL_3
0x40066e9	          0x4885c0	                           test rax, rax	      4647	getchar.c	FUNCTION_79	IF_2
0x40066ec	          0x4989c4	                            mov r12, rax	      4646	getchar.c	FUNCTION_79	CALL_3
0x40066ef	     0xf84d9000000	                            je 0x40067ce	      4647	getchar.c	FUNCTION_79	IF_2
0x40066f5	            0x89ef	                            mov edi, ebp	      4657	getchar.c	FUNCTION_79	CALL_5
0x40066f7	    0x830500000000	               add dword [0x040066fe], 1	      4655	getchar.c	FUNCTION_79
0x40066fe	    0x830500000000	               add dword [0x04006705], 1	      4656	getchar.c	FUNCTION_79
0x4006705	      0xe800000000	                          call 0x400670a	      4657	getchar.c	FUNCTION_79	CALL_5
0x400670a	    0x488b05000000	            mov rax, qword [0x04006711] 	      4658	getchar.c	FUNCTION_79
0x4006711	            0x31d2	                            xor edx, edx	      4661	getchar.c	FUNCTION_79	CALL_6
0x4006713	            0x31f6	                            xor esi, esi	      4661	getchar.c	FUNCTION_79	CALL_6
0x4006715	          0x4889df	                            mov rdi, rbx	      4661	getchar.c	FUNCTION_79	CALL_6
0x4006718	        0x4c8b4038	              mov r8, qword [rax + 0x38]	      4658	getchar.c	FUNCTION_79
0x400671c	          0x8b4840	            mov ecx, dword [rax + 0x40] 	      4658	getchar.c	FUNCTION_79
0x400671f	        0x448b7844	           mov r15d, dword [rax + 0x44] 	      4658	getchar.c	FUNCTION_79
0x4006723	    0x448b35000000	           mov r14d, dword [0x0400672a] 	      4659	getchar.c	FUNCTION_79
0x400672a	    0x448b2d000000	           mov r13d, dword [0x04006731] 	      4660	getchar.c	FUNCTION_79
0x4006731	      0x4c89442408	                 mov qword [rsp + 8], r8	      4658	getchar.c	FUNCTION_79
0x4006736	        0x894c2404	                mov dword [rsp + 4], ecx	      4658	getchar.c	FUNCTION_79
0x400673a	      0xe800000000	                          call 0x400673f	      4661	getchar.c	FUNCTION_79	CALL_6
0x400673f	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      4664	getchar.c	FUNCTION_79
0x4006744	        0x8b4c2404	                mov ecx, dword [rsp + 4]	      4664	getchar.c	FUNCTION_79
0x4006748	          0x4889c5	                            mov rbp, rax	      4661	getchar.c	FUNCTION_79	CALL_6
0x400674b	    0x488b05000000	            mov rax, qword [0x04006752] 	      4664	getchar.c	FUNCTION_79
0x4006752	          0x4c89e7	                            mov rdi, r12	      4668	getchar.c	FUNCTION_79	CALL_7
0x4006755	    0x832d00000000	               sub dword [0x0400675c], 1	      4662	getchar.c	FUNCTION_79
0x400675c	    0x832d00000000	               sub dword [0x04006763], 1	      4663	getchar.c	FUNCTION_79
0x4006763	    0x448935000000	           mov dword [0x0400676a], r14d 	      4665	getchar.c	FUNCTION_79
0x400676a	    0x44892d000000	           mov dword [0x04006771], r13d 	      4666	getchar.c	FUNCTION_79
0x4006771	        0x4c894038	              mov qword [rax + 0x38], r8	      4664	getchar.c	FUNCTION_79
0x4006775	          0x894840	             mov dword [rax + 0x40], ecx	      4664	getchar.c	FUNCTION_79
0x4006778	        0x44897844	            mov dword [rax + 0x44], r15d	      4664	getchar.c	FUNCTION_79
0x400677c	      0xe800000000	                          call 0x4006781	      4668	getchar.c	FUNCTION_79	CALL_7
0x4006781	          0x4889df	                            mov rdi, rbx	      4669	getchar.c	FUNCTION_79	CALL_8
0x4006784	      0xe800000000	                          call 0x4006789	      4669	getchar.c	FUNCTION_79	CALL_8
0x4006789	          0x4885ed	                           test rbp, rbp	      4671	getchar.c	FUNCTION_79	IF_3
0x400678c	            0x7448	                            je 0x40067d6	      4671	getchar.c	FUNCTION_79	IF_3
0x400678e	          0x4889ef	                            mov rdi, rbp	      4674	getchar.c	FUNCTION_79	CALL_9
0x4006791	      0xe800000000	                          call 0x4006796	      4674	getchar.c	FUNCTION_79	CALL_9
0x4006796	          0x4889ef	                            mov rdi, rbp	      4675	getchar.c	FUNCTION_79	CALL_10
0x4006799	          0x4889c3	                            mov rbx, rax	      4674	getchar.c	FUNCTION_79	CALL_9
0x400679c	      0xe800000000	                          call 0x40067a1	      4675	getchar.c	FUNCTION_79	CALL_10
0x40067a1	        0x4883c418	                           add rsp, 0x18	      4678	getchar.c	FUNCTION_79
0x40067a5	          0x4889d8	                            mov rax, rbx	      4677	getchar.c	FUNCTION_79
0x40067a8	              0x5b	                                 pop rbx	      4678	getchar.c	FUNCTION_79
0x40067a9	              0x5d	                                 pop rbp	      4678	getchar.c	FUNCTION_79
0x40067aa	            0x415c	                                 pop r12	      4678	getchar.c	FUNCTION_79
0x40067ac	            0x415d	                                 pop r13	      4678	getchar.c	FUNCTION_79
0x40067ae	            0x415e	                                 pop r14	      4678	getchar.c	FUNCTION_79
0x40067b0	            0x415f	                                 pop r15	      4678	getchar.c	FUNCTION_79
0x40067b2	              0xc3	                                     ret	      4678	getchar.c	FUNCTION_79
0x40067b3	       0xf1f440000	                   nop dword [rax + rax]	      4678	getchar.c	FUNCTION_79
0x40067b8	        0x80790258	                cmp byte [rcx + 2], 0x58	      4739	getchar.c	FUNCTION_81	WHILE_1	IF_1
0x40067bc	     0xf85d2feffff	                           jne 0x4006694	      4739	getchar.c	FUNCTION_81	WHILE_1	IF_1
0x40067c2	          0x8842ff	                  mov byte [rdx - 1], al	      4741	getchar.c	FUNCTION_81	WHILE_1	IF_1
0x40067c5	        0x4883c103	                              add rcx, 3	      4742	getchar.c	FUNCTION_81	WHILE_1	IF_1
0x40067c9	      0xe9cdfeffff	                           jmp 0x400669b	      4742	getchar.c	FUNCTION_81	WHILE_1	IF_1
0x40067ce	          0x4889df	                            mov rdi, rbx	      4649	getchar.c	FUNCTION_79	IF_2	CALL_4
0x40067d1	      0xe800000000	                          call 0x40067d6	      4649	getchar.c	FUNCTION_79	IF_2	CALL_4
0x40067d6	        0x4883c418	                           add rsp, 0x18	      4678	getchar.c	FUNCTION_79
0x40067da	            0x31c0	                            xor eax, eax	      4650	getchar.c	FUNCTION_79	IF_2
0x40067dc	              0x5b	                                 pop rbx	      4678	getchar.c	FUNCTION_79
0x40067dd	              0x5d	                                 pop rbp	      4678	getchar.c	FUNCTION_79
0x40067de	            0x415c	                                 pop r12	      4678	getchar.c	FUNCTION_79
0x40067e0	            0x415d	                                 pop r13	      4678	getchar.c	FUNCTION_79
0x40067e2	            0x415e	                                 pop r14	      4678	getchar.c	FUNCTION_79
0x40067e4	            0x415f	                                 pop r15	      4678	getchar.c	FUNCTION_79
0x40067e6	              0xc3	                                     ret	      4678	getchar.c	FUNCTION_79
init_mappings	WHILE,0:ELSE,0:IF,0:DO,0:CALL,1:functions,0:SWITCH,0:FOR,1	1
0x400bfe0	            0xf3c3	                                     ret	      5334	getchar.c	FUNCTION_86
map_clear	WHILE,0:ELSE,0:IF,1:DO,0:CALL,5:functions,0:SWITCH,0:FOR,0	66
0x4004690	          0x4989f9	                             mov r9, rdi	      3862	getchar.c	ELSE_10	FUNCTION_70
0x4004693	          0x4189ca	                           mov r10d, ecx	      3862	getchar.c	ELSE_10	FUNCTION_70
0x4004696	      0xbf00000000	                              mov edi, 0	      3867	getchar.c	ELSE_10	FUNCTION_70	CALL_1
0x400469b	      0xb909000000	                              mov ecx, 9	      3867	getchar.c	ELSE_10	FUNCTION_70	CALL_1
0x40046a0	          0x4989f0	                             mov r8, rsi	      3862	getchar.c	ELSE_10	FUNCTION_70
0x40046a3	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3867	getchar.c	ELSE_10	FUNCTION_70	CALL_1
0x40046a5	           0xf97c0	                                 seta al	      3867	getchar.c	ELSE_10	FUNCTION_70	CALL_1
0x40046a8	           0xf92c1	                                 setb cl	      3867	getchar.c	ELSE_10	FUNCTION_70	CALL_1
0x40046ab	            0x31ff	                            xor edi, edi	      3867	getchar.c	ELSE_10	FUNCTION_70	CALL_1
0x40046ad	            0x29c8	                            sub eax, ecx	      3867	getchar.c	ELSE_10	FUNCTION_70	CALL_1
0x40046af	           0xfbec0	                           movsx eax, al	      3867	getchar.c	ELSE_10	FUNCTION_70	CALL_1
0x40046b2	            0x85c0	                           test eax, eax	      3867	getchar.c	ELSE_10	FUNCTION_70	CALL_1
0x40046b4	        0x400f94c7	                                sete dil	      3867	getchar.c	ELSE_10	FUNCTION_70	CALL_1
0x40046b8	            0x740a	                            je 0x40046c4	      3868	getchar.c	ELSE_10	FUNCTION_70	IF_1
0x40046ba	        0x41803800	                        cmp byte [r8], 0	      3868	getchar.c	ELSE_10	FUNCTION_70	IF_1
0x40046be	     0xf857c000000	                           jne 0x4004740	      3868	getchar.c	ELSE_10	FUNCTION_70	IF_1
0x40046c4	        0x410fb601	                    movzx eax, byte [r9]	      3820	getchar.c	FUNCTION_69
0x40046c8	      0xbe10000000	                           mov esi, 0x10	      3822	getchar.c	FUNCTION_69	IF_1
0x40046cd	          0x83f869	                           cmp eax, 0x69	      3821	getchar.c	FUNCTION_69	IF_1
0x40046d0	            0x745c	                            je 0x400472e	      3821	getchar.c	FUNCTION_69	IF_1
0x40046d2	          0x83f86c	                           cmp eax, 0x6c	      3823	getchar.c	FUNCTION_69	ELSE_1	IF_2
0x40046d5	      0xbe20000000	                           mov esi, 0x20	      3824	getchar.c	FUNCTION_69	ELSE_1	IF_2
0x40046da	            0x7452	                            je 0x400472e	      3823	getchar.c	FUNCTION_69	ELSE_1	IF_2
0x40046dc	          0x83f863	                           cmp eax, 0x63	      3825	getchar.c	FUNCTION_69	ELSE_2	IF_3
0x40046df	      0xbe08000000	                              mov esi, 8	      3826	getchar.c	FUNCTION_69	ELSE_2	IF_3
0x40046e4	            0x7448	                            je 0x400472e	      3825	getchar.c	FUNCTION_69	ELSE_2	IF_3
0x40046e6	          0x83f86e	                           cmp eax, 0x6e	      3827	getchar.c	FUNCTION_69	ELSE_3	IF_4
0x40046e9	            0x747d	                            je 0x4004768	      3827	getchar.c	FUNCTION_69	ELSE_3	IF_4
0x40046eb	          0x83f876	                           cmp eax, 0x76	      3829	getchar.c	FUNCTION_69	ELSE_4	IF_5
0x40046ee	      0xbe02100000	                         mov esi, 0x1002	      3830	getchar.c	FUNCTION_69	ELSE_4	IF_5
0x40046f3	            0x7439	                            je 0x400472e	      3829	getchar.c	FUNCTION_69	ELSE_4	IF_5
0x40046f5	          0x83f878	                           cmp eax, 0x78	      3831	getchar.c	FUNCTION_69	ELSE_5	IF_6
0x40046f8	      0xbe02000000	                              mov esi, 2	      3832	getchar.c	FUNCTION_69	ELSE_5	IF_6
0x40046fd	            0x742f	                            je 0x400472e	      3831	getchar.c	FUNCTION_69	ELSE_5	IF_6
0x40046ff	          0x83f873	                           cmp eax, 0x73	      3833	getchar.c	FUNCTION_69	ELSE_6	IF_7
0x4004702	      0xbe00100000	                         mov esi, 0x1000	      3834	getchar.c	FUNCTION_69	ELSE_6	IF_7
0x4004707	            0x7425	                            je 0x400472e	      3833	getchar.c	FUNCTION_69	ELSE_6	IF_7
0x4004709	          0x83f86f	                           cmp eax, 0x6f	      3835	getchar.c	FUNCTION_69	ELSE_7	IF_8
0x400470c	      0xbe04000000	                              mov esi, 4	      3836	getchar.c	FUNCTION_69	ELSE_7	IF_8
0x4004711	            0x741b	                            je 0x400472e	      3835	getchar.c	FUNCTION_69	ELSE_7	IF_8
0x4004713	          0x83f874	                           cmp eax, 0x74	      3837	getchar.c	FUNCTION_69	ELSE_8	IF_9
0x4004716	      0xbe00200000	                         mov esi, 0x2000	      3838	getchar.c	FUNCTION_69	ELSE_8	IF_9
0x400471b	            0x7411	                            je 0x400472e	      3837	getchar.c	FUNCTION_69	ELSE_8	IF_9
0x400471d	           0xf1f00	                         nop dword [rax]	      3837	getchar.c	FUNCTION_69	ELSE_8	IF_9
0x4004720	          0x83fa01	                              cmp edx, 1	      3845	getchar.c	FUNCTION_69	ELSE_9	ELSE_10
0x4004723	            0x19f6	                            sbb esi, esi	      3845	getchar.c	FUNCTION_69	ELSE_9	ELSE_10
0x4004725	    0x81e6ef0f0000	                          and esi, 0xfef	      3845	getchar.c	FUNCTION_69	ELSE_9	ELSE_10
0x400472b	          0x83c618	                           add esi, 0x18	      3845	getchar.c	FUNCTION_69	ELSE_9	ELSE_10
0x400472e	            0x89fa	                            mov edx, edi	      3876	getchar.c	ELSE_10	FUNCTION_70	CALL_5
0x4004730	    0x488b3d000000	            mov rdi, qword [0x04004737] 	      3876	getchar.c	ELSE_10	FUNCTION_70	CALL_5
0x4004737	          0x4489d1	                           mov ecx, r10d	      3876	getchar.c	ELSE_10	FUNCTION_70	CALL_5
0x400473a	      0xe9e1fcffff	                   jmp sym.map_clear_int	      3876	getchar.c	ELSE_10	FUNCTION_70	CALL_5
0x400473f	              0x90	                                     nop	      3876	getchar.c	ELSE_10	FUNCTION_70	CALL_5
0x4004740	        0x4883ec08	                              sub rsp, 8	      3862	getchar.c	ELSE_10	FUNCTION_70
0x4004744	            0x31ff	                            xor edi, edi	      3870	getchar.c	ELSE_10	FUNCTION_70	IF_1	CALL_3
0x4004746	      0xba05000000	                              mov edx, 5	      3870	getchar.c	ELSE_10	FUNCTION_70	IF_1	CALL_3
0x400474b	      0xbe00000000	                              mov esi, 0	      3870	getchar.c	ELSE_10	FUNCTION_70	IF_1	CALL_3
0x4004750	      0xe800000000	                          call 0x4004755	      3870	getchar.c	ELSE_10	FUNCTION_70	IF_1	CALL_3
0x4004755	        0x4883c408	                              add rsp, 8	      3883	getchar.c	ELSE_10	FUNCTION_70
0x4004759	          0x4889c7	                            mov rdi, rax	      3870	getchar.c	ELSE_10	FUNCTION_70	IF_1	CALL_3
0x400475c	      0xe900000000	                           jmp 0x4004761	      3870	getchar.c	ELSE_10	FUNCTION_70	IF_1	CALL_3
0x4004761	     0xf1f80000000	                         nop dword [rax]	      3870	getchar.c	ELSE_10	FUNCTION_70	IF_1	CALL_3
0x4004768	      0x418079016f	                 cmp byte [r9 + 1], 0x6f	      3827	getchar.c	FUNCTION_69	ELSE_3	IF_4
0x400476d	      0xbe01000000	                              mov esi, 1	      3828	getchar.c	FUNCTION_69	ELSE_3	IF_4
0x4004772	            0x75ba	                           jne 0x400472e	      3827	getchar.c	FUNCTION_69	ELSE_3	IF_4
0x4004774	            0xebaa	                           jmp 0x4004720	      3827	getchar.c	FUNCTION_69	ELSE_3	IF_4
plain_vgetc	WHILE,0:ELSE,0:IF,1:DO,1:CALL,2:functions,0:SWITCH,0:FOR,0	22
0x400ad90	        0x4883ec08	                              sub rsp, 8	      1826	getchar.c	FUNCTION_56
0x400ad94	         0xf1f4000	                         nop dword [rax]	      1826	getchar.c	FUNCTION_56
0x400ad98	      0xe800000000	                          call 0x400ad9d	      1814	getchar.c	FUNCTION_55	CALL_1
0x400ad9d	            0x85c0	                           test eax, eax	      1815	getchar.c	FUNCTION_55	IF_1
0x400ad9f	            0x741f	                            je 0x400adc0	      1815	getchar.c	FUNCTION_55	IF_1
0x400ada1	    0x8d90f9580000	                 lea edx, [rax + 0x58f9]	      1832	getchar.c	FUNCTION_56	DO_1
0x400ada7	          0x83fa01	                              cmp edx, 1	      1832	getchar.c	FUNCTION_56	DO_1
0x400adaa	            0x76ec	                           jbe 0x400ad98	      1832	getchar.c	FUNCTION_56	DO_1
0x400adac	      0x3d03caffff	                     cmp eax, 0xffffca03	      1832	getchar.c	FUNCTION_56	DO_1
0x400adb1	            0x74e5	                            je 0x400ad98	      1832	getchar.c	FUNCTION_56	DO_1
0x400adb3	      0x3db0acffff	                     cmp eax, 0xffffacb0	      1834	getchar.c	FUNCTION_56	IF_1
0x400adb8	            0x740d	                            je 0x400adc7	      1834	getchar.c	FUNCTION_56	IF_1
0x400adba	        0x4883c408	                              add rsp, 8	      1840	getchar.c	FUNCTION_56
0x400adbe	              0xc3	                                     ret	      1840	getchar.c	FUNCTION_56
0x400adbf	              0x90	                                     nop	      1840	getchar.c	FUNCTION_56
0x400adc0	      0xe800000000	                          call 0x400adc5	      1816	getchar.c	FUNCTION_55	CALL_2
0x400adc5	            0xebda	                           jmp 0x400ada1	      1816	getchar.c	FUNCTION_55	CALL_2
0x400adc7	            0x31d2	                            xor edx, edx	      1837	getchar.c	FUNCTION_56	CALL_2
0x400adc9	            0x31f6	                            xor esi, esi	      1837	getchar.c	FUNCTION_56	CALL_2
0x400adcb	      0xbf03000000	                              mov edi, 3	      1837	getchar.c	FUNCTION_56	CALL_2
0x400add0	        0x4883c408	                              add rsp, 8	      1840	getchar.c	FUNCTION_56
0x400add4	      0xe900000000	                           jmp 0x400add9	      1837	getchar.c	FUNCTION_56	CALL_2
add_map	WHILE,0:ELSE,0:IF,1:DO,0:CALL,3:functions,0:SWITCH,0:FOR,0	22
0x400bff0	            0x4154	                                push r12	      5351	getchar.c	FUNCTION_87
0x400bff2	              0x55	                                push rbp	      5351	getchar.c	FUNCTION_87
0x400bff3	          0x4189f4	                           mov r12d, esi	      5351	getchar.c	FUNCTION_87
0x400bff6	              0x53	                                push rbx	      5351	getchar.c	FUNCTION_87
0x400bff7	    0x488b2d000000	            mov rbp, qword [0x0400bffe] 	      5353	getchar.c	FUNCTION_87
0x400bffe	    0x48c705000000	               mov qword [0x0400c009], 0	      5355	getchar.c	FUNCTION_87
0x400c009	      0xe800000000	                          call 0x400c00e	      5356	getchar.c	FUNCTION_87	CALL_1
0x400c00e	          0x4885c0	                           test rax, rax	      5357	getchar.c	FUNCTION_87	IF_1
0x400c011	            0x741a	                            je 0x400c02d	      5357	getchar.c	FUNCTION_87	IF_1
0x400c013	          0x4889c3	                            mov rbx, rax	      5357	getchar.c	FUNCTION_87	IF_1
0x400c016	            0x31ff	                            xor edi, edi	      5359	getchar.c	FUNCTION_87	IF_1	CALL_2
0x400c018	            0x31c9	                            xor ecx, ecx	      5359	getchar.c	FUNCTION_87	IF_1	CALL_2
0x400c01a	          0x4489e2	                           mov edx, r12d	      5359	getchar.c	FUNCTION_87	IF_1	CALL_2
0x400c01d	          0x4889c6	                            mov rsi, rax	      5359	getchar.c	FUNCTION_87	IF_1	CALL_2
0x400c020	      0xe800000000	                          call 0x400c025	      5359	getchar.c	FUNCTION_87	IF_1	CALL_2
0x400c025	          0x4889df	                            mov rdi, rbx	      5360	getchar.c	FUNCTION_87	IF_1	CALL_3
0x400c028	      0xe800000000	                          call 0x400c02d	      5360	getchar.c	FUNCTION_87	IF_1	CALL_3
0x400c02d	              0x5b	                                 pop rbx	      5363	getchar.c	FUNCTION_87
0x400c02e	    0x48892d000000	            mov qword [0x0400c035], rbp 	      5362	getchar.c	FUNCTION_87
0x400c035	              0x5d	                                 pop rbp	      5363	getchar.c	FUNCTION_87
0x400c036	            0x415c	                                 pop r12	      5363	getchar.c	FUNCTION_87
0x400c038	              0xc3	                                     ret	      5363	getchar.c	FUNCTION_87
start_redo	WHILE,1:ELSE,0:IF,5:DO,0:CALL,12:functions,0:SWITCH,0:FOR,0	147
0x40025c0	            0x4154	                                push r12	       828	getchar.c	FUNCTION_31
0x40025c2	              0x55	                                push rbp	       828	getchar.c	FUNCTION_31
0x40025c3	              0x53	                                push rbx	       828	getchar.c	FUNCTION_31
0x40025c4	        0x4883ec30	                           sub rsp, 0x30	       828	getchar.c	FUNCTION_31
0x40025c8	    0x64488b042528	                mov rax, qword fs:[0x28]	       828	getchar.c	FUNCTION_31
0x40025d1	      0x4889442428	             mov qword [rsp + 0x28], rax	       828	getchar.c	FUNCTION_31
0x40025d6	            0x31c0	                            xor eax, eax	       828	getchar.c	FUNCTION_31
0x40025d8	            0x85f6	                           test esi, esi	       750	getchar.c	FUNCTION_29	IF_1	IF_2
0x40025da	    0x488b05000000	            mov rax, qword [0x040025e1] 	       750	getchar.c	FUNCTION_29	IF_1	IF_2
0x40025e1	    0x480f44050000	           cmove rax, qword [0x040025e9]	       750	getchar.c	FUNCTION_29	IF_1	IF_2
0x40025e9	          0x4885c0	                           test rax, rax	       753	getchar.c	FUNCTION_29	IF_1	IF_3
0x40025ec	    0x488905000000	            mov qword [0x040025f3], rax 	       753	getchar.c	FUNCTION_29	IF_1	IF_3
0x40025f3	     0xf840f010000	                            je 0x4002708	       753	getchar.c	FUNCTION_29	IF_1	IF_3
0x40025f9	        0x4883c008	                              add rax, 8	       755	getchar.c	FUNCTION_29	IF_1
0x40025fd	          0x4889fd	                            mov rbp, rdi	       755	getchar.c	FUNCTION_29	IF_1
0x4002600	    0x488905000000	            mov qword [0x04002607], rax 	       755	getchar.c	FUNCTION_29	IF_1
0x4002607	      0xe8a4dbffff	               call sym.read_redo.part.0	       755	getchar.c	FUNCTION_29	IF_1
0x400260c	          0x83f822	                           cmp eax, 0x22	       838	getchar.c	FUNCTION_31	IF_2
0x400260f	            0x89c3	                            mov ebx, eax	       838	getchar.c	FUNCTION_31	IF_2
0x4002611	     0xf84f9000000	                            je 0x4002710	       838	getchar.c	FUNCTION_31	IF_2
0x4002617	          0x83fb76	                           cmp ebx, 0x76	       850	getchar.c	FUNCTION_31	IF_4
0x400261a	     0xf8490000000	                            je 0x40026b0	       850	getchar.c	FUNCTION_31	IF_4
0x4002620	          0x4885ed	                           test rbp, rbp	       861	getchar.c	FUNCTION_31	IF_5
0x4002623	            0x7552	                           jne 0x4002677	       861	getchar.c	FUNCTION_31	IF_5
0x4002625	            0x89de	                            mov esi, ebx	       869	getchar.c	FUNCTION_31	CALL_11
0x4002627	      0xbf00000000	                              mov edi, 0	       869	getchar.c	FUNCTION_31	CALL_11
0x400262c	      0xe8dfe9ffff	                  call sym.add_char_buff	       869	getchar.c	FUNCTION_31	CALL_11
0x4002631	            0xeb11	                           jmp 0x4002644	       869	getchar.c	FUNCTION_31	CALL_11
0x4002633	       0xf1f440000	                   nop dword [rax + rax]	       869	getchar.c	FUNCTION_31	CALL_11
0x4002638	            0x89c6	                            mov esi, eax	       814	getchar.c	FUNCTION_30	CALL_2
0x400263a	      0xbf00000000	                              mov edi, 0	       814	getchar.c	FUNCTION_30	CALL_2
0x400263f	      0xe8cce9ffff	                  call sym.add_char_buff	       814	getchar.c	FUNCTION_30	CALL_2
0x4002644	      0xe867dbffff	               call sym.read_redo.part.0	       814	getchar.c	FUNCTION_30	CALL_2
0x4002649	            0x85c0	                           test eax, eax	       813	getchar.c	FUNCTION_30	WHILE_1	CALL_1
0x400264b	            0x75eb	                           jne 0x4002638	       813	getchar.c	FUNCTION_30	WHILE_1	CALL_1
0x400264d	      0xb801000000	                              mov eax, 1	       871	getchar.c	FUNCTION_31
0x4002652	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	       872	getchar.c	FUNCTION_31
0x4002657	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       872	getchar.c	FUNCTION_31
0x4002660	     0xf85f5010000	                           jne 0x400285b	       872	getchar.c	FUNCTION_31
0x4002666	        0x4883c430	                           add rsp, 0x30	       872	getchar.c	FUNCTION_31
0x400266a	              0x5b	                                 pop rbx	       872	getchar.c	FUNCTION_31
0x400266b	              0x5d	                                 pop rbp	       872	getchar.c	FUNCTION_31
0x400266c	            0x415c	                                 pop r12	       872	getchar.c	FUNCTION_31
0x400266e	              0xc3	                                     ret	       872	getchar.c	FUNCTION_31
0x400266f	              0x90	                                     nop	       872	getchar.c	FUNCTION_31
0x4002670	      0xe83bdbffff	               call sym.read_redo.part.0	       872	getchar.c	FUNCTION_31
0x4002675	            0x89c3	                            mov ebx, eax	       872	getchar.c	FUNCTION_31
0x4002677	          0x8d43d0	                   lea eax, [rbx - 0x30]	       863	getchar.c	FUNCTION_31	IF_5	WHILE_1	CALL_8
0x400267a	          0x83f809	                              cmp eax, 9	       863	getchar.c	FUNCTION_31	IF_5	WHILE_1	CALL_8
0x400267d	            0x76f1	                           jbe 0x4002670	       863	getchar.c	FUNCTION_31	IF_5	WHILE_1	CALL_8
0x400267f	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_88	CALL_1
0x4002682	          0x4989e8	                             mov r8, rbp	        33	stdio2.h	FUNCTION_88	CALL_1
0x4002685	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_88	CALL_1
0x400268a	      0xba20000000	                           mov edx, 0x20	        33	stdio2.h	FUNCTION_88	CALL_1
0x400268f	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_88	CALL_1
0x4002694	            0x31c0	                            xor eax, eax	        33	stdio2.h	FUNCTION_88	CALL_1
0x4002696	      0xe800000000	                          call 0x400269b	        33	stdio2.h	FUNCTION_88	CALL_1
0x400269b	          0x4889e6	                            mov rsi, rsp	       293	getchar.c	FUNCTION_6	CALL_1
0x400269e	      0xbf00000000	                              mov edi, 0	       293	getchar.c	FUNCTION_6	CALL_1
0x40026a3	      0xe838deffff	          call sym.add_buff.constprop.22	       293	getchar.c	FUNCTION_6	CALL_1
0x40026a8	      0xe978ffffff	                           jmp 0x4002625	       293	getchar.c	FUNCTION_6	CALL_1
0x40026ad	           0xf1f00	                         nop dword [rax]	       293	getchar.c	FUNCTION_6	CALL_1
0x40026b0	    0x488b05000000	            mov rax, qword [0x040026b7] 	       852	getchar.c	FUNCTION_31	IF_4
0x40026b7	    0xc70500000000	               mov dword [0x040026c1], 1	       853	getchar.c	FUNCTION_31	IF_4
0x40026c1	    0xc70500000000	               mov dword [0x040026cb], 0	       854	getchar.c	FUNCTION_31	IF_4
0x40026cb	    0xc70500000000	               mov dword [0x040026d5], 1	       855	getchar.c	FUNCTION_31	IF_4
0x40026d5	    0xc70500000000	               mov dword [0x040026df], 1	       856	getchar.c	FUNCTION_31	IF_4
0x40026df	        0x488b5040	            mov rdx, qword [rax + 0x40] 	       852	getchar.c	FUNCTION_31	IF_4
0x40026e3	        0x488b4038	            mov rax, qword [rax + 0x38] 	       852	getchar.c	FUNCTION_31	IF_4
0x40026e7	    0x488915000000	            mov qword [0x040026ee], rdx 	       852	getchar.c	FUNCTION_31	IF_4
0x40026ee	    0x488905000000	            mov qword [0x040026f5], rax 	       852	getchar.c	FUNCTION_31	IF_4
0x40026f5	      0xe8b6daffff	               call sym.read_redo.part.0	       852	getchar.c	FUNCTION_31	IF_4
0x40026fa	            0x89c3	                            mov ebx, eax	       852	getchar.c	FUNCTION_31	IF_4
0x40026fc	      0xe91fffffff	                           jmp 0x4002620	       852	getchar.c	FUNCTION_31	IF_4
0x4002701	     0xf1f80000000	                         nop dword [rax]	       852	getchar.c	FUNCTION_31	IF_4
0x4002708	            0x31c0	                            xor eax, eax	       833	getchar.c	FUNCTION_31	IF_1
0x400270a	      0xe943ffffff	                           jmp 0x4002652	       833	getchar.c	FUNCTION_31	IF_1
0x400270f	              0x90	                                     nop	       833	getchar.c	FUNCTION_31	IF_1
0x4002710	    0x488b05000000	            mov rax, qword [0x04002717] 	       242	getchar.c	FUNCTION_5	IF_3
0x4002717	          0x4885c0	                           test rax, rax	       242	getchar.c	FUNCTION_5	IF_3
0x400271a	     0xf84f9000000	                            je 0x4002819	       242	getchar.c	FUNCTION_5	IF_3
0x4002720	    0x48833d000000	               cmp qword [0x04002728], 0	       247	getchar.c	FUNCTION_5	ELSE_1	IF_4
0x4002728	     0xf840f010000	                            je 0x400283d	       247	getchar.c	FUNCTION_5	ELSE_1	IF_4
0x400272e	    0x486315000000	         movsxd rdx, dword [0x04002735] 	       252	getchar.c	FUNCTION_5	ELSE_2	IF_5
0x4002735	            0x85d2	                           test edx, edx	       252	getchar.c	FUNCTION_5	ELSE_2	IF_5
0x4002737	     0xf8589000000	                           jne 0x40027c6	       252	getchar.c	FUNCTION_5	ELSE_2	IF_5
0x400273d	    0x8b0500000000	            mov eax, dword [0x04002743] 	       252	getchar.c	FUNCTION_5	ELSE_2	IF_5
0x4002743	    0xc70500000000	               mov dword [0x0400274d], 0	       256	getchar.c	FUNCTION_5
0x400274d	            0x85c0	                           test eax, eax	       258	getchar.c	FUNCTION_5	IF_6
0x400274f	     0xf8f95000000	                            jg 0x40027ea	       258	getchar.c	FUNCTION_5	IF_6
0x4002755	      0xbe01000000	                              mov esi, 1	       270	getchar.c	FUNCTION_5	ELSE_3	CALL_8
0x400275a	      0xbf24000000	                           mov edi, 0x24	       270	getchar.c	FUNCTION_5	ELSE_3	CALL_8
0x400275f	      0xe800000000	                          call 0x4002764	       270	getchar.c	FUNCTION_5	ELSE_3	CALL_8
0x4002764	          0x4885c0	                           test rax, rax	       272	getchar.c	FUNCTION_5	ELSE_3	IF_8
0x4002767	          0x4889c3	                            mov rbx, rax	       270	getchar.c	FUNCTION_5	ELSE_3	CALL_8
0x400276a	            0x7434	                            je 0x40027a0	       272	getchar.c	FUNCTION_5	ELSE_3	IF_8
0x400276c	        0x488d7808	                      lea rdi, [rax + 8]	       275	getchar.c	FUNCTION_5	ELSE_3	CALL_9
0x4002770	      0xba01000000	                              mov edx, 1	       275	getchar.c	FUNCTION_5	ELSE_3	CALL_9
0x4002775	      0xbe00000000	                              mov esi, 0	       275	getchar.c	FUNCTION_5	ELSE_3	CALL_9
0x400277a	    0xc70500000000	           mov dword [0x04002784], 0x13 	       274	getchar.c	FUNCTION_5	ELSE_3
0x4002784	      0xe800000000	                          call 0x4002789	       275	getchar.c	FUNCTION_5	ELSE_3	CALL_9
0x4002789	    0x488b05000000	            mov rax, qword [0x04002790] 	       277	getchar.c	FUNCTION_5	ELSE_3
0x4002790	          0x488b10	                    mov rdx, qword [rax]	       277	getchar.c	FUNCTION_5	ELSE_3
0x4002793	          0x488913	                    mov qword [rbx], rdx	       277	getchar.c	FUNCTION_5	ELSE_3
0x4002796	          0x488918	                    mov qword [rax], rbx	       278	getchar.c	FUNCTION_5	ELSE_3
0x4002799	    0x48891d000000	            mov qword [0x040027a0], rbx 	       279	getchar.c	FUNCTION_5	ELSE_3
0x40027a0	      0xe80bdaffff	               call sym.read_redo.part.0	       279	getchar.c	FUNCTION_5	ELSE_3
0x40027a5	          0x8d50cf	                   lea edx, [rax - 0x31]	       844	getchar.c	FUNCTION_31	IF_2	IF_3
0x40027a8	      0xbf00000000	                              mov edi, 0	       846	getchar.c	FUNCTION_31	IF_2	CALL_5
0x40027ad	          0x83fa08	                              cmp edx, 8	       845	getchar.c	FUNCTION_31	IF_2	IF_3
0x40027b0	          0x83d000	                              adc eax, 0	       845	getchar.c	FUNCTION_31	IF_2	IF_3
0x40027b3	            0x89c6	                            mov esi, eax	       846	getchar.c	FUNCTION_31	IF_2	CALL_5
0x40027b5	      0xe856e8ffff	                  call sym.add_char_buff	       846	getchar.c	FUNCTION_31	IF_2	CALL_5
0x40027ba	      0xe8f1d9ffff	               call sym.read_redo.part.0	       846	getchar.c	FUNCTION_31	IF_2	CALL_5
0x40027bf	            0x89c3	                            mov ebx, eax	       846	getchar.c	FUNCTION_31	IF_2	CALL_5
0x40027c1	      0xe951feffff	                           jmp 0x4002617	       846	getchar.c	FUNCTION_31	IF_2	CALL_5
0x40027c6	        0x488d5808	                      lea rbx, [rax + 8]	       253	getchar.c	FUNCTION_5	ELSE_2	IF_5	CALL_4
0x40027ca	        0x4c8d2413	                    lea r12, [rbx + rdx]	       253	getchar.c	FUNCTION_5	ELSE_2	IF_5	CALL_4
0x40027ce	          0x4c89e7	                            mov rdi, r12	       253	getchar.c	FUNCTION_5	ELSE_2	IF_5	CALL_4
0x40027d1	      0xe800000000	                          call 0x40027d6	       253	getchar.c	FUNCTION_5	ELSE_2	IF_5	CALL_4
0x40027d6	        0x488d5001	                      lea rdx, [rax + 1]	        59	string3.h	FUNCTION_106	CALL_3
0x40027da	          0x4c89e6	                            mov rsi, r12	        59	string3.h	FUNCTION_106	CALL_3
0x40027dd	          0x4889df	                            mov rdi, rbx	        59	string3.h	FUNCTION_106	CALL_3
0x40027e0	      0xe800000000	                          call 0x40027e5	        59	string3.h	FUNCTION_106	CALL_3
0x40027e5	      0xe953ffffff	                           jmp 0x400273d	        59	string3.h	FUNCTION_106	CALL_3
0x40027ea	    0x488b05000000	            mov rax, qword [0x040027f1] 	       260	getchar.c	FUNCTION_5	IF_6	CALL_6
0x40027f1	        0x488d5808	                      lea rbx, [rax + 8]	       260	getchar.c	FUNCTION_5	IF_6	CALL_6
0x40027f5	          0x4889df	                            mov rdi, rbx	       260	getchar.c	FUNCTION_5	IF_6	CALL_6
0x40027f8	      0xe800000000	                          call 0x40027fd	       260	getchar.c	FUNCTION_5	IF_6	CALL_6
0x40027fd	        0x488d3c03	                    lea rdi, [rbx + rax]	       261	getchar.c	FUNCTION_5	IF_6	CALL_7
0x4002801	      0xba01000000	                              mov edx, 1	       261	getchar.c	FUNCTION_5	IF_6	CALL_7
0x4002806	      0xbe00000000	                              mov esi, 0	       261	getchar.c	FUNCTION_5	IF_6	CALL_7
0x400280b	      0xe800000000	                          call 0x4002810	       261	getchar.c	FUNCTION_5	IF_6	CALL_7
0x4002810	    0x832d00000000	               sub dword [0x04002817], 1	       262	getchar.c	FUNCTION_5	IF_6
0x4002817	            0xeb87	                           jmp 0x40027a0	       262	getchar.c	FUNCTION_5	IF_6
0x4002819	    0xc70500000000	               mov dword [0x04002823], 0	       244	getchar.c	FUNCTION_5	IF_3
0x4002823	    0x48c705000000	               mov qword [0x0400282e], 0	       245	getchar.c	FUNCTION_5	IF_3
0x400282e	    0xc70500000000	               mov dword [0x04002838], 0	       256	getchar.c	FUNCTION_5
0x4002838	      0xe918ffffff	                           jmp 0x4002755	       256	getchar.c	FUNCTION_5
0x400283d	            0x31ff	                            xor edi, edi	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x400283f	      0xba05000000	                              mov edx, 5	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x4002844	      0xbe00000000	                              mov esi, 0	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x4002849	      0xe800000000	                          call 0x400284e	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x400284e	          0x4889c7	                            mov rdi, rax	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x4002851	      0xe800000000	                          call 0x4002856	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x4002856	      0xe945ffffff	                           jmp 0x40027a0	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x400285b	      0xe800000000	                 call sym.start_redo_ins	       872	getchar.c	FUNCTION_31
check_map_keycodes	WHILE,1:ELSE,4:IF,8:DO,0:CALL,2:functions,0:SWITCH,0:FOR,5	119
0x400bb00	            0x4157	                                push r15	      5091	getchar.c	FUNCTION_84
0x400bb02	            0x4156	                                push r14	      5091	getchar.c	FUNCTION_84
0x400bb04	            0x4155	                                push r13	      5091	getchar.c	FUNCTION_84
0x400bb06	            0x4154	                                push r12	      5091	getchar.c	FUNCTION_84
0x400bb08	              0x55	                                push rbp	      5091	getchar.c	FUNCTION_84
0x400bb09	              0x53	                                push rbx	      5091	getchar.c	FUNCTION_84
0x400bb0a	        0x4883ec28	                           sub rsp, 0x28	      5091	getchar.c	FUNCTION_84
0x400bb0e	    0x8b1500000000	            mov edx, dword [0x0400bb14] 	      3802	getchar.c	FUNCTION_68	IF_1
0x400bb14	    0x64488b042528	                mov rax, qword fs:[0x28]	      5091	getchar.c	FUNCTION_84
0x400bb1d	      0x4889442418	             mov qword [rsp + 0x18], rax	      5091	getchar.c	FUNCTION_84
0x400bb22	            0x31c0	                            xor eax, eax	      5091	getchar.c	FUNCTION_84
0x400bb24	            0x85d2	                           test edx, edx	      3802	getchar.c	FUNCTION_68	IF_1
0x400bb26	            0x751a	                           jne 0x400bb42	      3802	getchar.c	FUNCTION_68	IF_1
0x400bb28	      0xba00000000	                              mov edx, 0	        90	string3.h	FUNCTION_108	CALL_6
0x400bb2d	      0xb900010000	                          mov ecx, 0x100	        90	string3.h	FUNCTION_108	CALL_6
0x400bb32	    0xc70500000000	               mov dword [0x0400bb3c], 1	      3805	getchar.c	FUNCTION_68	IF_1
0x400bb3c	          0x4889d7	                            mov rdi, rdx	        90	string3.h	FUNCTION_108	CALL_6
0x400bb3f	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_108	CALL_6
0x400bb42	    0x488b05000000	            mov rax, qword [0x0400bb49] 	      5104	getchar.c	FUNCTION_84
0x400bb49	    0x4c8b2d000000	            mov r13, qword [0x0400bb50] 	      5110	getchar.c	FUNCTION_84	FOR_1
0x400bb50	    0x48c705000000	               mov qword [0x0400bb5b], 0	      5105	getchar.c	FUNCTION_84
0x400bb5b	      0x4889442408	                mov qword [rsp + 8], rax	      5104	getchar.c	FUNCTION_84
0x400bb60	    0xc74424040000	                  mov dword [rsp + 4], 0	      5117	getchar.c	FUNCTION_84	FOR_1	FOR_2
0x400bb68	        0x8b442404	                mov eax, dword [rsp + 4]	      5120	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	IF_1
0x400bb6c	          0x4531e4	                          xor r12d, r12d	      5091	getchar.c	FUNCTION_84
0x400bb6f	    0x41be01000000	                             mov r14d, 1	      5091	getchar.c	FUNCTION_84
0x400bb75	            0x85c0	                           test eax, eax	      5120	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	IF_1
0x400bb77	     0xf84dd000000	                            je 0x400bc5a	      5120	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	IF_1
0x400bb7d	          0x4d85e4	                           test r12, r12	      5122	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	IF_1	IF_2
0x400bb80	     0xf85f6000000	                           jne 0x400bc7c	      5122	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	IF_1	IF_2
0x400bb86	          0x4d85ed	                           test r13, r13	      5125	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	IF_1	IF_3
0x400bb89	     0xf84e1000000	                            je 0x400bc70	      5125	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	IF_1	IF_3
0x400bb8f	    0x498badc01100	          mov rbp, qword [r13 + 0x11c0] 	      5126	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	IF_1	IF_3
0x400bb96	          0x4885ed	                           test rbp, rbp	      5140	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4
0x400bb99	     0xf84a7000000	                            je 0x400bc46	      5140	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4
0x400bb9f	              0x90	                                     nop	      5140	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4
0x400bba0	      0xbb01000000	                              mov ebx, 1	      5091	getchar.c	FUNCTION_84
0x400bba5	          0x83fb01	                              cmp ebx, 1	      5144	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	IF_5
0x400bba8	            0x746e	                            je 0x400bc18	      5144	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	IF_5
0x400bbaa	        0x4c8b7d10	            mov r15, qword [rbp + 0x10] 	      5147	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4
0x400bbae	        0x410fb617	                   movzx edx, byte [r15]	      5148	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1
0x400bbb2	            0x84d2	                             test dl, dl	      5148	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1
0x400bbb4	            0x7516	                           jne 0x400bbcc	      5148	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1
0x400bbb6	            0xeb53	                           jmp 0x400bc0b	      5148	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1
0x400bbb8	     0xf1f84000000	                   nop dword [rax + rax]	      5148	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1
0x400bbc0	         0xfb65001	               movzx edx, byte [rax + 1]	      5148	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1
0x400bbc4	        0x4c8d7801	                      lea r15, [rax + 1]	      5162	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1
0x400bbc8	            0x84d2	                             test dl, dl	      5148	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1
0x400bbca	            0x743f	                            je 0x400bc0b	      5148	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1
0x400bbcc	          0x80fa80	                            cmp dl, 0x80	      5150	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1	IF_6
0x400bbcf	          0x4c89f8	                            mov rax, r15	      5150	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1	IF_6
0x400bbd2	            0x75ec	                           jne 0x400bbc0	      5150	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1	IF_6
0x400bbd4	      0x410fb64701	               movzx eax, byte [r15 + 1]	      5153	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1	IF_6	IF_7
0x400bbd9	            0x84c0	                             test al, al	      5153	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1	IF_6	IF_7
0x400bbdb	            0x781e	                            js 0x400bbfb	      5153	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1	IF_6	IF_7
0x400bbdd	        0x88442410	               mov byte [rsp + 0x10], al	      5155	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1	IF_6	IF_7
0x400bbe1	      0x410fb64702	               movzx eax, byte [r15 + 2]	      5156	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1	IF_6	IF_7
0x400bbe6	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      5158	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1	IF_6	IF_7	CALL_2
0x400bbeb	            0x31f6	                            xor esi, esi	      5158	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1	IF_6	IF_7	CALL_2
0x400bbed	      0xc644241200	                mov byte [rsp + 0x12], 0	      5157	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1	IF_6	IF_7
0x400bbf2	        0x88442411	               mov byte [rsp + 0x11], al	      5156	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1	IF_6	IF_7
0x400bbf6	      0xe800000000	                          call 0x400bbfb	      5158	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1	IF_6	IF_7	CALL_2
0x400bbfb	        0x498d4702	                      lea rax, [r15 + 2]	      5160	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1	IF_6
0x400bbff	         0xfb65001	               movzx edx, byte [rax + 1]	      5148	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1
0x400bc03	        0x4c8d7801	                      lea r15, [rax + 1]	      5162	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1
0x400bc07	            0x84d2	                             test dl, dl	      5148	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1
0x400bc09	            0x75c1	                           jne 0x400bbcc	      5148	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1
0x400bc0b	          0x83fb02	                              cmp ebx, 2	      5142	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5
0x400bc0e	            0x7420	                            je 0x400bc30	      5142	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5
0x400bc10	          0x83c301	                              add ebx, 1	      5142	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5
0x400bc13	          0x83fb01	                              cmp ebx, 1	      5144	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	IF_5
0x400bc16	            0x7592	                           jne 0x400bbaa	      5144	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	IF_5
0x400bc18	        0x4c8b7d08	                mov r15, qword [rbp + 8]	      5145	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	IF_5
0x400bc1c	        0x410fb617	                   movzx edx, byte [r15]	      5148	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1
0x400bc20	            0x84d2	                             test dl, dl	      5148	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1
0x400bc22	            0x75a8	                           jne 0x400bbcc	      5148	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1
0x400bc24	            0xebea	                           jmp 0x400bc10	      5148	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1
0x400bc26	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      5148	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4	FOR_5	ELSE_4	WHILE_1
0x400bc30	        0x488b6d00	                    mov rbp, qword [rbp]	      5140	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4
0x400bc34	          0x4885ed	                           test rbp, rbp	      5140	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4
0x400bc37	     0xf8563ffffff	                           jne 0x400bba0	      5140	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_3	FOR_4
0x400bc3d	    0x4181fe000100	                         cmp r14d, 0x100	      5118	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3
0x400bc44	            0x7436	                            je 0x400bc7c	      5118	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3
0x400bc46	        0x8b442404	                mov eax, dword [rsp + 4]	      5120	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	IF_1
0x400bc4a	        0x4983c401	                              add r12, 1	      5120	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	IF_1
0x400bc4e	        0x4183c601	                             add r14d, 1	      5120	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	IF_1
0x400bc52	            0x85c0	                           test eax, eax	      5120	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	IF_1
0x400bc54	     0xf8523ffffff	                           jne 0x400bb7d	      5120	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	IF_1
0x400bc5a	          0x4d85ed	                           test r13, r13	      5134	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_2	IF_4
0x400bc5d	            0x7468	                            je 0x400bcc7	      5134	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_2	IF_4
0x400bc5f	    0x4b8bace5c009	   mov rbp, qword [r13 + r12*8 + 0x9c0] 	      5135	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_2	IF_4
0x400bc67	            0xebcb	                           jmp 0x400bc34	      5135	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_2	IF_4
0x400bc69	     0xf1f80000000	                         nop dword [rax]	      5135	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_2	IF_4
0x400bc70	    0x488b2d000000	            mov rbp, qword [0x0400bc77] 	      5129	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	IF_1	ELSE_1
0x400bc77	      0xe91affffff	                           jmp 0x400bb96	      5129	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	IF_1	ELSE_1
0x400bc7c	      0x8344240401	                  add dword [rsp + 4], 1	      5117	getchar.c	FUNCTION_84	FOR_1	FOR_2
0x400bc81	        0x8b442404	                mov eax, dword [rsp + 4]	      5117	getchar.c	FUNCTION_84	FOR_1	FOR_2
0x400bc85	          0x83f802	                              cmp eax, 2	      5117	getchar.c	FUNCTION_84	FOR_1	FOR_2
0x400bc88	     0xf85dafeffff	                           jne 0x400bb68	      5117	getchar.c	FUNCTION_84	FOR_1	FOR_2
0x400bc8e	          0x4d85ed	                           test r13, r13	      5168	getchar.c	FUNCTION_84	FOR_1	IF_8
0x400bc91	            0x7409	                            je 0x400bc9c	      5168	getchar.c	FUNCTION_84	FOR_1	IF_8
0x400bc93	        0x4d8b6d68	            mov r13, qword [r13 + 0x68] 	      5110	getchar.c	FUNCTION_84	FOR_1
0x400bc97	      0xe9c4feffff	                           jmp 0x400bb60	      5170	getchar.c	FUNCTION_84	FOR_1
0x400bc9c	      0x488b442408	                mov rax, qword [rsp + 8]	      5172	getchar.c	FUNCTION_84
0x400bca1	    0x488905000000	            mov qword [0x0400bca8], rax 	      5172	getchar.c	FUNCTION_84
0x400bca8	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      5173	getchar.c	FUNCTION_84
0x400bcad	    0x644833042528	                xor rax, qword fs:[0x28]	      5173	getchar.c	FUNCTION_84
0x400bcb6	            0x751c	                           jne 0x400bcd4	      5173	getchar.c	FUNCTION_84
0x400bcb8	        0x4883c428	                           add rsp, 0x28	      5173	getchar.c	FUNCTION_84
0x400bcbc	              0x5b	                                 pop rbx	      5173	getchar.c	FUNCTION_84
0x400bcbd	              0x5d	                                 pop rbp	      5173	getchar.c	FUNCTION_84
0x400bcbe	            0x415c	                                 pop r12	      5173	getchar.c	FUNCTION_84
0x400bcc0	            0x415d	                                 pop r13	      5173	getchar.c	FUNCTION_84
0x400bcc2	            0x415e	                                 pop r14	      5173	getchar.c	FUNCTION_84
0x400bcc4	            0x415f	                                 pop r15	      5173	getchar.c	FUNCTION_84
0x400bcc6	              0xc3	                                     ret	      5173	getchar.c	FUNCTION_84
0x400bcc7	    0x4a8b2ce50000	                  mov rbp, qword [r12*8]	      5138	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_2	ELSE_3
0x400bccf	      0xe960ffffff	                           jmp 0x400bc34	      5138	getchar.c	FUNCTION_84	FOR_1	FOR_2	FOR_3	ELSE_2	ELSE_3
0x400bcd4	      0xe800000000	                          call 0x400bcd9	      5173	getchar.c	FUNCTION_84
restoreRedobuff	WHILE,0:ELSE,0:IF,0:DO,0:CALL,2:functions,0:SWITCH,0:FOR,0	41
0x4001810	              0x55	                                push rbp	       548	getchar.c	FUNCTION_18
0x4001811	              0x53	                                push rbx	       548	getchar.c	FUNCTION_18
0x4001812	          0x4889fd	                            mov rbp, rdi	       548	getchar.c	FUNCTION_18
0x4001815	        0x4883ec08	                              sub rsp, 8	       548	getchar.c	FUNCTION_18
0x4001819	    0x488b3d000000	            mov rdi, qword [0x04001820] 	       141	getchar.c	FUNCTION_1	FOR_1
0x4001820	          0x4885ff	                           test rdi, rdi	       141	getchar.c	FUNCTION_1	FOR_1
0x4001823	            0x7413	                            je 0x4001838	       141	getchar.c	FUNCTION_1	FOR_1
0x4001825	           0xf1f00	                         nop dword [rax]	       141	getchar.c	FUNCTION_1	FOR_1
0x4001828	          0x488b1f	                    mov rbx, qword [rdi]	       143	getchar.c	FUNCTION_1	FOR_1
0x400182b	      0xe800000000	                          call 0x4001830	       144	getchar.c	FUNCTION_1	FOR_1	CALL_1
0x4001830	          0x4885db	                           test rbx, rbx	       141	getchar.c	FUNCTION_1	FOR_1
0x4001833	          0x4889df	                            mov rdi, rbx	       141	getchar.c	FUNCTION_1	FOR_1
0x4001836	            0x75f0	                           jne 0x4001828	       141	getchar.c	FUNCTION_1	FOR_1
0x4001838	        0x488b4500	                    mov rax, qword [rbp]	       550	getchar.c	FUNCTION_18
0x400183c	    0x488b3d000000	            mov rdi, qword [0x04001843] 	       141	getchar.c	FUNCTION_1	FOR_1
0x4001843	    0x488905000000	            mov qword [0x0400184a], rax 	       550	getchar.c	FUNCTION_18
0x400184a	        0x488b4508	                mov rax, qword [rbp + 8]	       550	getchar.c	FUNCTION_18
0x400184e	          0x4885ff	                           test rdi, rdi	       141	getchar.c	FUNCTION_1	FOR_1
0x4001851	    0x488905000000	            mov qword [0x04001858], rax 	       550	getchar.c	FUNCTION_18
0x4001858	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       550	getchar.c	FUNCTION_18
0x400185c	    0x488905000000	            mov qword [0x04001863], rax 	       550	getchar.c	FUNCTION_18
0x4001863	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       550	getchar.c	FUNCTION_18
0x4001867	    0x488905000000	            mov qword [0x0400186e], rax 	       550	getchar.c	FUNCTION_18
0x400186e	            0x7410	                            je 0x4001880	       141	getchar.c	FUNCTION_1	FOR_1
0x4001870	          0x488b1f	                    mov rbx, qword [rdi]	       143	getchar.c	FUNCTION_1	FOR_1
0x4001873	      0xe800000000	                          call 0x4001878	       144	getchar.c	FUNCTION_1	FOR_1	CALL_1
0x4001878	          0x4885db	                           test rbx, rbx	       141	getchar.c	FUNCTION_1	FOR_1
0x400187b	          0x4889df	                            mov rdi, rbx	       141	getchar.c	FUNCTION_1	FOR_1
0x400187e	            0x75f0	                           jne 0x4001870	       141	getchar.c	FUNCTION_1	FOR_1
0x4001880	        0x488b4520	            mov rax, qword [rbp + 0x20] 	       552	getchar.c	FUNCTION_18
0x4001884	    0x488905000000	            mov qword [0x0400188b], rax 	       552	getchar.c	FUNCTION_18
0x400188b	        0x488b4528	            mov rax, qword [rbp + 0x28] 	       552	getchar.c	FUNCTION_18
0x400188f	    0x488905000000	            mov qword [0x04001896], rax 	       552	getchar.c	FUNCTION_18
0x4001896	        0x488b4530	            mov rax, qword [rbp + 0x30] 	       552	getchar.c	FUNCTION_18
0x400189a	    0x488905000000	            mov qword [0x040018a1], rax 	       552	getchar.c	FUNCTION_18
0x40018a1	        0x488b4538	            mov rax, qword [rbp + 0x38] 	       552	getchar.c	FUNCTION_18
0x40018a5	    0x488905000000	            mov qword [0x040018ac], rax 	       552	getchar.c	FUNCTION_18
0x40018ac	        0x4883c408	                              add rsp, 8	       553	getchar.c	FUNCTION_18
0x40018b0	              0x5b	                                 pop rbx	       553	getchar.c	FUNCTION_18
0x40018b1	              0x5d	                                 pop rbp	       553	getchar.c	FUNCTION_18
0x40018b2	              0xc3	                                     ret	       553	getchar.c	FUNCTION_18
openscript	WHILE,0:ELSE,0:IF,7:DO,1:CALL,11:functions,0:SWITCH,0:FOR,0	215
0x40081c0	            0x4157	                                push r15	      1415	getchar.c	FUNCTION_48
0x40081c2	            0x4156	                                push r14	      1415	getchar.c	FUNCTION_48
0x40081c4	            0x4155	                                push r13	      1415	getchar.c	FUNCTION_48
0x40081c6	            0x4154	                                push r12	      1415	getchar.c	FUNCTION_48
0x40081c8	              0x55	                                push rbp	      1415	getchar.c	FUNCTION_48
0x40081c9	              0x53	                                push rbx	      1415	getchar.c	FUNCTION_48
0x40081ca	    0x4881ec980000	                           sub rsp, 0x98	      1415	getchar.c	FUNCTION_48
0x40081d1	    0x64488b042528	                mov rax, qword fs:[0x28]	      1415	getchar.c	FUNCTION_48
0x40081da	    0x488984248800	             mov qword [rsp + 0x88], rax	      1415	getchar.c	FUNCTION_48
0x40081e2	            0x31c0	                            xor eax, eax	      1415	getchar.c	FUNCTION_48
0x40081e4	    0x8b0500000000	            mov eax, dword [0x040081ea] 	      1416	getchar.c	FUNCTION_48	IF_1
0x40081ea	          0x83f80e	                            cmp eax, 0xe	      1416	getchar.c	FUNCTION_48	IF_1
0x40081ed	     0xf84ad020000	                            je 0x40084a0	      1416	getchar.c	FUNCTION_48	IF_1
0x40081f3	    0x8b0d00000000	            mov ecx, dword [0x040081f9] 	      1422	getchar.c	FUNCTION_48	IF_2
0x40081f9	            0x85c9	                           test ecx, ecx	      1422	getchar.c	FUNCTION_48	IF_2
0x40081fb	     0xf8554010000	                           jne 0x4008355	      1422	getchar.c	FUNCTION_48	IF_2
0x4008201	          0x4863d0	                         movsxd rdx, eax	      1427	getchar.c	FUNCTION_48	IF_3
0x4008204	          0x4989fc	                            mov r12, rdi	      1427	getchar.c	FUNCTION_48	IF_3
0x4008207	            0x89f3	                            mov ebx, esi	      1427	getchar.c	FUNCTION_48	IF_3
0x4008209	    0x48833cd50000	                    cmp qword [rdx*8], 0	      1427	getchar.c	FUNCTION_48	IF_3
0x4008212	            0x7409	                            je 0x400821d	      1427	getchar.c	FUNCTION_48	IF_3
0x4008214	          0x83c001	                              add eax, 1	      1428	getchar.c	FUNCTION_48	IF_3
0x4008217	    0x890500000000	            mov dword [0x0400821d], eax 	      1428	getchar.c	FUNCTION_48	IF_3
0x400821d	    0x488b35000000	            mov rsi, qword [0x04008224] 	      1430	getchar.c	FUNCTION_48	CALL_3
0x4008224	      0xba00100000	                         mov edx, 0x1000	      1430	getchar.c	FUNCTION_48	CALL_3
0x4008229	          0x4c89e7	                            mov rdi, r12	      1430	getchar.c	FUNCTION_48	CALL_3
0x400822c	      0xe800000000	                          call 0x4008231	      1430	getchar.c	FUNCTION_48	CALL_3
0x4008231	    0x48632d000000	         movsxd rbp, dword [0x04008238] 	      1431	getchar.c	FUNCTION_48	IF_4	CALL_4
0x4008238	    0x488b3d000000	            mov rdi, qword [0x0400823f] 	      1431	getchar.c	FUNCTION_48	IF_4	CALL_4
0x400823f	      0xbe00000000	                              mov esi, 0	      1431	getchar.c	FUNCTION_48	IF_4	CALL_4
0x4008244	      0xe800000000	                          call 0x4008249	      1431	getchar.c	FUNCTION_48	IF_4	CALL_4
0x4008249	          0x4885c0	                           test rax, rax	      1431	getchar.c	FUNCTION_48	IF_4	CALL_4
0x400824c	    0x488904ed0000	                  mov qword [rbp*8], rax	      1431	getchar.c	FUNCTION_48	IF_4	CALL_4
0x4008254	     0xf84d6010000	                            je 0x4008430	      1431	getchar.c	FUNCTION_48	IF_4	CALL_4
0x400825a	    0x48833d000000	               cmp qword [0x04008262], 0	       919	getchar.c	FUNCTION_34	IF_1
0x4008262	     0xf8460030000	                            je 0x40085c8	       919	getchar.c	FUNCTION_34	IF_1
0x4008268	    0x486305000000	         movsxd rax, dword [0x0400826f] 	      1342	getchar.c	FUNCTION_45
0x400826f	    0x488b0d000000	            mov rcx, qword [0x04008276] 	      1342	getchar.c	FUNCTION_45
0x4008276	      0xbf09010000	                          mov edi, 0x109	      1298	getchar.c	FUNCTION_43	CALL_1
0x400827b	        0x488d1440	                  lea rdx, [rax + rax*2]	      1342	getchar.c	FUNCTION_45
0x400827f	        0x48c1e204	                              shl rdx, 4	      1342	getchar.c	FUNCTION_45
0x4008283	    0x48898a000000	                    mov qword [rdx], rcx	      1342	getchar.c	FUNCTION_45
0x400828a	    0x488d82000000	                          lea rax, [rdx]	      1342	getchar.c	FUNCTION_45
0x4008291	    0x488b15000000	            mov rdx, qword [0x04008298] 	      1342	getchar.c	FUNCTION_45
0x4008298	        0x48895008	                mov qword [rax + 8], rdx	      1342	getchar.c	FUNCTION_45
0x400829c	    0x488b15000000	            mov rdx, qword [0x040082a3] 	      1342	getchar.c	FUNCTION_45
0x40082a3	        0x48895010	             mov qword [rax + 0x10], rdx	      1342	getchar.c	FUNCTION_45
0x40082a7	    0x488b15000000	            mov rdx, qword [0x040082ae] 	      1342	getchar.c	FUNCTION_45
0x40082ae	        0x48895018	             mov qword [rax + 0x18], rdx	      1342	getchar.c	FUNCTION_45
0x40082b2	    0x488b15000000	            mov rdx, qword [0x040082b9] 	      1342	getchar.c	FUNCTION_45
0x40082b9	        0x48895020	             mov qword [rax + 0x20], rdx	      1342	getchar.c	FUNCTION_45
0x40082bd	    0x488b15000000	            mov rdx, qword [0x040082c4] 	      1342	getchar.c	FUNCTION_45
0x40082c4	        0x48895028	             mov qword [rax + 0x28], rdx	      1342	getchar.c	FUNCTION_45
0x40082c8	      0xe800000000	                          call 0x40082cd	      1298	getchar.c	FUNCTION_43	CALL_1
0x40082cd	      0xbf09010000	                          mov edi, 0x109	      1299	getchar.c	FUNCTION_43	CALL_2
0x40082d2	    0x488905000000	            mov qword [0x040082d9], rax 	      1298	getchar.c	FUNCTION_43	CALL_1
0x40082d9	      0xe800000000	                          call 0x40082de	      1299	getchar.c	FUNCTION_43	CALL_2
0x40082de	    0x488b3d000000	            mov rdi, qword [0x040082e5] 	      1300	getchar.c	FUNCTION_43	IF_1
0x40082e5	    0x488905000000	            mov qword [0x040082ec], rax 	      1299	getchar.c	FUNCTION_43	CALL_2
0x40082ec	          0x4885ff	                           test rdi, rdi	      1300	getchar.c	FUNCTION_43	IF_1
0x40082ef	     0xf84cb010000	                            je 0x40084c0	      1300	getchar.c	FUNCTION_43	IF_1
0x40082f5	          0x4885c0	                           test rax, rax	      1300	getchar.c	FUNCTION_43	IF_1
0x40082f8	     0xf84aa020000	                            je 0x40085a8	      1300	getchar.c	FUNCTION_43	IF_1
0x40082fe	    0x8b0500000000	            mov eax, dword [0x04008304] 	      1312	getchar.c	FUNCTION_43	IF_2
0x4008304	      0xba01000000	                              mov edx, 1	      1312	getchar.c	FUNCTION_43	IF_2
0x4008309	    0xc70500000000	          mov dword [0x04008313], 0x109 	      1305	getchar.c	FUNCTION_43
0x4008313	    0xc70500000000	           mov dword [0x0400831d], 0x36 	      1306	getchar.c	FUNCTION_43
0x400831d	    0xc70500000000	               mov dword [0x04008327], 0	      1307	getchar.c	FUNCTION_43
0x4008327	    0xc70500000000	               mov dword [0x04008331], 0	      1308	getchar.c	FUNCTION_43
0x4008331	    0xc70500000000	               mov dword [0x0400833b], 0	      1309	getchar.c	FUNCTION_43
0x400833b	          0x83c001	                              add eax, 1	      1312	getchar.c	FUNCTION_43	IF_2
0x400833e	    0xc70500000000	               mov dword [0x04008348], 0	      1310	getchar.c	FUNCTION_43
0x4008348	           0xf44c2	                          cmove eax, edx	      1312	getchar.c	FUNCTION_43	IF_2
0x400834b	            0x85db	                           test ebx, ebx	      1447	getchar.c	FUNCTION_48	IF_7
0x400834d	    0x890500000000	            mov dword [0x04008353], eax 	      1312	getchar.c	FUNCTION_43	IF_2
0x4008353	            0x752b	                           jne 0x4008380	      1447	getchar.c	FUNCTION_48	IF_7
0x4008355	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	      1479	getchar.c	FUNCTION_48
0x400835d	    0x644833042528	                xor rax, qword fs:[0x28]	      1479	getchar.c	FUNCTION_48
0x4008366	     0xf85d2020000	                           jne 0x400863e	      1479	getchar.c	FUNCTION_48
0x400836c	    0x4881c4980000	                           add rsp, 0x98	      1479	getchar.c	FUNCTION_48
0x4008373	              0x5b	                                 pop rbx	      1479	getchar.c	FUNCTION_48
0x4008374	              0x5d	                                 pop rbp	      1479	getchar.c	FUNCTION_48
0x4008375	            0x415c	                                 pop r12	      1479	getchar.c	FUNCTION_48
0x4008377	            0x415d	                                 pop r13	      1479	getchar.c	FUNCTION_48
0x4008379	            0x415e	                                 pop r14	      1479	getchar.c	FUNCTION_48
0x400837b	            0x415f	                                 pop r15	      1479	getchar.c	FUNCTION_48
0x400837d	              0xc3	                                     ret	      1479	getchar.c	FUNCTION_48
0x400837e	            0x6690	                                     nop	      1479	getchar.c	FUNCTION_48
0x4008380	          0x4889e7	                            mov rdi, rsp	      1461	getchar.c	FUNCTION_48	IF_7	CALL_8
0x4008383	    0x448b3d000000	           mov r15d, dword [0x0400838a] 	      1451	getchar.c	FUNCTION_48	IF_7
0x400838a	    0x448b2d000000	           mov r13d, dword [0x04008391] 	      1452	getchar.c	FUNCTION_48	IF_7
0x4008391	    0x448b25000000	           mov r12d, dword [0x04008398] 	      1453	getchar.c	FUNCTION_48	IF_7
0x4008398	    0x448b35000000	           mov r14d, dword [0x0400839f] 	      1455	getchar.c	FUNCTION_48	IF_7
0x400839f	    0x8b2d00000000	            mov ebp, dword [0x040083a5] 	      1454	getchar.c	FUNCTION_48	IF_7
0x40083a5	    0xc70500000000	               mov dword [0x040083af], 1	      1457	getchar.c	FUNCTION_48	IF_7
0x40083af	    0xc70500000000	               mov dword [0x040083b9], 0	      1458	getchar.c	FUNCTION_48	IF_7
0x40083b9	    0xc70500000000	               mov dword [0x040083c3], 0	      1459	getchar.c	FUNCTION_48	IF_7
0x40083c3	    0xc70500000000	               mov dword [0x040083cd], 0	      1460	getchar.c	FUNCTION_48	IF_7
0x40083cd	      0xe800000000	                          call 0x40083d2	      1461	getchar.c	FUNCTION_48	IF_7	CALL_8
0x40083d2	    0xc70500000000	               mov dword [0x040083dc], 0	      1462	getchar.c	FUNCTION_48	IF_7
0x40083dc	    0x48631d000000	         movsxd rbx, dword [0x040083e3] 	      1462	getchar.c	FUNCTION_48	IF_7
0x40083e3	            0xeb0e	                           jmp 0x40083f3	      1462	getchar.c	FUNCTION_48	IF_7
0x40083e5	           0xf1f00	                         nop dword [rax]	      1462	getchar.c	FUNCTION_48	IF_7
0x40083e8	    0x48833cdd0000	                    cmp qword [rbx*8], 0	      1471	getchar.c	FUNCTION_48	IF_7
0x40083f1	            0x747d	                            je 0x4008470	      1471	getchar.c	FUNCTION_48	IF_7
0x40083f3	      0xe800000000	                          call 0x40083f8	      1467	getchar.c	FUNCTION_48	IF_7	DO_1	CALL_9
0x40083f8	            0x31f6	                            xor esi, esi	      1468	getchar.c	FUNCTION_48	IF_7	DO_1	CALL_10
0x40083fa	          0x4889e7	                            mov rdi, rsp	      1468	getchar.c	FUNCTION_48	IF_7	DO_1	CALL_10
0x40083fd	      0xe800000000	                          call 0x4008402	      1468	getchar.c	FUNCTION_48	IF_7	DO_1	CALL_10
0x4008402	    0x833d00000000	cmp dword [0x04008409], 0xffffffffffffffff	      1850	getchar.c	FUNCTION_57	IF_1
0x4008409	            0x75dd	                           jne 0x40083e8	      1850	getchar.c	FUNCTION_57	IF_1
0x400840b	    0x8b1500000000	            mov edx, dword [0x04008411] 	      1997	getchar.c	FUNCTION_62	IF_1
0x4008411	            0x85d2	                           test edx, edx	      1997	getchar.c	FUNCTION_62	IF_1
0x4008413	            0x7e0a	                           jle 0x400841f	      1997	getchar.c	FUNCTION_62	IF_1
0x4008415	    0x8b0500000000	            mov eax, dword [0x0400841b] 	      1997	getchar.c	FUNCTION_62	IF_1
0x400841b	            0x85c0	                           test eax, eax	      1997	getchar.c	FUNCTION_62	IF_1
0x400841d	            0x74c9	                            je 0x40083e8	      1997	getchar.c	FUNCTION_62	IF_1
0x400841f	            0x31ff	                            xor edi, edi	      1997	getchar.c	FUNCTION_62	IF_1
0x4008421	      0xe8cae3ffff	              call sym.vgetorpeek.part.9	      1997	getchar.c	FUNCTION_62	IF_1
0x4008426	            0xebc0	                           jmp 0x40083e8	      1997	getchar.c	FUNCTION_62	IF_1
0x4008428	     0xf1f84000000	                   nop dword [rax + rax]	      1997	getchar.c	FUNCTION_62	IF_1
0x4008430	            0x31ff	                            xor edi, edi	      1433	getchar.c	FUNCTION_48	IF_4	CALL_6
0x4008432	      0xba05000000	                              mov edx, 5	      1433	getchar.c	FUNCTION_48	IF_4	CALL_6
0x4008437	      0xbe00000000	                              mov esi, 0	      1433	getchar.c	FUNCTION_48	IF_4	CALL_6
0x400843c	      0xe800000000	                          call 0x4008441	      1433	getchar.c	FUNCTION_48	IF_4	CALL_6
0x4008441	          0x4c89e6	                            mov rsi, r12	      1433	getchar.c	FUNCTION_48	IF_4	CALL_6
0x4008444	          0x4889c7	                            mov rdi, rax	      1433	getchar.c	FUNCTION_48	IF_4	CALL_6
0x4008447	      0xe800000000	                          call 0x400844c	      1433	getchar.c	FUNCTION_48	IF_4	CALL_6
0x400844c	    0x8b0500000000	            mov eax, dword [0x04008452] 	      1434	getchar.c	FUNCTION_48	IF_4	IF_5
0x4008452	            0x85c0	                           test eax, eax	      1434	getchar.c	FUNCTION_48	IF_4	IF_5
0x4008454	     0xf84fbfeffff	                            je 0x4008355	      1434	getchar.c	FUNCTION_48	IF_4	IF_5
0x400845a	          0x83e801	                              sub eax, 1	      1493	getchar.c	FUNCTION_49	IF_1
0x400845d	    0x890500000000	            mov dword [0x04008463], eax 	      1493	getchar.c	FUNCTION_49	IF_1
0x4008463	      0xe9edfeffff	                           jmp 0x4008355	      1493	getchar.c	FUNCTION_49	IF_1
0x4008468	     0xf1f84000000	                   nop dword [rax + rax]	      1493	getchar.c	FUNCTION_49	IF_1
0x4008470	    0x44893d000000	           mov dword [0x04008477], r15d 	      1473	getchar.c	FUNCTION_48	IF_7
0x4008477	    0x448935000000	           mov dword [0x0400847e], r14d 	      1474	getchar.c	FUNCTION_48	IF_7
0x400847e	    0x44892d000000	           mov dword [0x04008485], r13d 	      1475	getchar.c	FUNCTION_48	IF_7
0x4008485	    0x448925000000	           mov dword [0x0400848c], r12d 	      1476	getchar.c	FUNCTION_48	IF_7
0x400848c	    0x892d00000000	            mov dword [0x04008492], ebp 	      1477	getchar.c	FUNCTION_48	IF_7
0x4008492	      0xe9befeffff	                           jmp 0x4008355	      1477	getchar.c	FUNCTION_48	IF_7
0x4008497	    0x660f1f840000	                    nop word [rax + rax]	      1477	getchar.c	FUNCTION_48	IF_7
0x40084a0	            0x31ff	                            xor edi, edi	      1418	getchar.c	FUNCTION_48	IF_1	CALL_2
0x40084a2	      0xba05000000	                              mov edx, 5	      1418	getchar.c	FUNCTION_48	IF_1	CALL_2
0x40084a7	      0xbe00000000	                              mov esi, 0	      1418	getchar.c	FUNCTION_48	IF_1	CALL_2
0x40084ac	      0xe800000000	                          call 0x40084b1	      1418	getchar.c	FUNCTION_48	IF_1	CALL_2
0x40084b1	          0x4889c7	                            mov rdi, rax	      1418	getchar.c	FUNCTION_48	IF_1	CALL_2
0x40084b4	      0xe800000000	                          call 0x40084b9	      1418	getchar.c	FUNCTION_48	IF_1	CALL_2
0x40084b9	      0xe997feffff	                           jmp 0x4008355	      1419	getchar.c	FUNCTION_48	IF_1
0x40084be	            0x6690	                                     nop	      1419	getchar.c	FUNCTION_48	IF_1
0x40084c0	      0xe800000000	                          call 0x40084c5	      1325	getchar.c	FUNCTION_44	CALL_2
0x40084c5	    0x488b3d000000	            mov rdi, qword [0x040084cc] 	      1326	getchar.c	FUNCTION_44	IF_2
0x40084cc	    0x4881ff000000	                              cmp rdi, 0	      1326	getchar.c	FUNCTION_44	IF_2
0x40084d3	     0xf8456010000	                            je 0x400862f	      1326	getchar.c	FUNCTION_44	IF_2
0x40084d9	      0xe800000000	                          call 0x40084de	      1329	getchar.c	FUNCTION_44	CALL_4
0x40084de	    0x488b3d000000	            mov rdi, qword [0x040084e5] 	      1322	getchar.c	FUNCTION_44	IF_1
0x40084e5	    0x4881ff000000	                              cmp rdi, 0	      1322	getchar.c	FUNCTION_44	IF_1
0x40084ec	     0xf841e010000	                            je 0x4008610	      1322	getchar.c	FUNCTION_44	IF_1
0x40084f2	      0xe800000000	                          call 0x40084f7	      1325	getchar.c	FUNCTION_44	CALL_2
0x40084f7	    0x488b3d000000	            mov rdi, qword [0x040084fe] 	      1326	getchar.c	FUNCTION_44	IF_2
0x40084fe	    0x4881ff000000	                              cmp rdi, 0	      1326	getchar.c	FUNCTION_44	IF_2
0x4008505	     0xf8415010000	                            je 0x4008620	      1326	getchar.c	FUNCTION_44	IF_2
0x400850b	      0xe800000000	                          call 0x4008510	      1329	getchar.c	FUNCTION_44	CALL_4
0x4008510	    0x48630d000000	         movsxd rcx, dword [0x04008517] 	      1488	getchar.c	FUNCTION_49
0x4008517	        0x488d1449	                  lea rdx, [rcx + rcx*2]	      1488	getchar.c	FUNCTION_49
0x400851b	    0x488b3ccd0000	                  mov rdi, qword [rcx*8]	      1490	getchar.c	FUNCTION_49	CALL_2
0x4008523	        0x48c1e204	                              shl rdx, 4	      1488	getchar.c	FUNCTION_49
0x4008527	    0x488d82000000	                          lea rax, [rdx]	      1488	getchar.c	FUNCTION_49
0x400852e	    0x488b92000000	                    mov rdx, qword [rdx]	      1488	getchar.c	FUNCTION_49
0x4008535	    0x488915000000	            mov qword [0x0400853c], rdx 	      1488	getchar.c	FUNCTION_49
0x400853c	        0x488b5008	                mov rdx, qword [rax + 8]	      1488	getchar.c	FUNCTION_49
0x4008540	    0x488915000000	            mov qword [0x04008547], rdx 	      1488	getchar.c	FUNCTION_49
0x4008547	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1488	getchar.c	FUNCTION_49
0x400854b	    0x488915000000	            mov qword [0x04008552], rdx 	      1488	getchar.c	FUNCTION_49
0x4008552	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      1488	getchar.c	FUNCTION_49
0x4008556	    0x488915000000	            mov qword [0x0400855d], rdx 	      1488	getchar.c	FUNCTION_49
0x400855d	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1488	getchar.c	FUNCTION_49
0x4008561	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1488	getchar.c	FUNCTION_49
0x4008565	    0x488915000000	            mov qword [0x0400856c], rdx 	      1488	getchar.c	FUNCTION_49
0x400856c	    0x488905000000	            mov qword [0x04008573], rax 	      1488	getchar.c	FUNCTION_49
0x4008573	      0xe800000000	                          call 0x4008578	      1490	getchar.c	FUNCTION_49	CALL_2
0x4008578	    0x486315000000	         movsxd rdx, dword [0x0400857f] 	      1491	getchar.c	FUNCTION_49
0x400857f	            0x85d2	                           test edx, edx	      1492	getchar.c	FUNCTION_49	IF_1
0x4008581	          0x4889d0	                            mov rax, rdx	      1491	getchar.c	FUNCTION_49
0x4008584	    0x48c704d50000	                    mov qword [rdx*8], 0	      1491	getchar.c	FUNCTION_49
0x4008590	     0xf8ebffdffff	                           jle 0x4008355	      1492	getchar.c	FUNCTION_49	IF_1
0x4008596	          0x83e801	                              sub eax, 1	      1493	getchar.c	FUNCTION_49	IF_1
0x4008599	    0x890500000000	            mov dword [0x0400859f], eax 	      1493	getchar.c	FUNCTION_49	IF_1
0x400859f	      0xe9b1fdffff	                           jmp 0x4008355	      1493	getchar.c	FUNCTION_49	IF_1
0x40085a4	         0xf1f4000	                         nop dword [rax]	      1493	getchar.c	FUNCTION_49	IF_1
0x40085a8	    0x4881ff000000	                              cmp rdi, 0	      1322	getchar.c	FUNCTION_44	IF_1
0x40085af	     0xf850bffffff	                           jne 0x40084c0	      1322	getchar.c	FUNCTION_44	IF_1
0x40085b5	      0xbf00000000	                              mov edi, 0	      1323	getchar.c	FUNCTION_44	CALL_1
0x40085ba	      0xe800000000	                          call 0x40085bf	      1323	getchar.c	FUNCTION_44	CALL_1
0x40085bf	      0xe901ffffff	                           jmp 0x40084c5	      1323	getchar.c	FUNCTION_44	CALL_1
0x40085c4	         0xf1f4000	                         nop dword [rax]	      1323	getchar.c	FUNCTION_44	CALL_1
0x40085c8	    0x48c705000000	               mov qword [0x040085d3], 0	       921	getchar.c	FUNCTION_34	IF_1
0x40085d3	    0x48c705000000	               mov qword [0x040085de], 0	       922	getchar.c	FUNCTION_34	IF_1
0x40085de	    0xc70500000000	          mov dword [0x040085e8], 0x109 	       923	getchar.c	FUNCTION_34	IF_1
0x40085e8	    0xc70500000000	               mov dword [0x040085f2], 0	       924	getchar.c	FUNCTION_34	IF_1
0x40085f2	    0xc70500000000	           mov dword [0x040085fc], 0x36 	       925	getchar.c	FUNCTION_34	IF_1
0x40085fc	    0xc70500000000	               mov dword [0x04008606], 1	       926	getchar.c	FUNCTION_34	IF_1
0x4008606	      0xe95dfcffff	                           jmp 0x4008268	       926	getchar.c	FUNCTION_34	IF_1
0x400860b	       0xf1f440000	                   nop dword [rax + rax]	       926	getchar.c	FUNCTION_34	IF_1
0x4008610	      0xbf00000000	                              mov edi, 0	      1323	getchar.c	FUNCTION_44	CALL_1
0x4008615	      0xe800000000	                          call 0x400861a	      1323	getchar.c	FUNCTION_44	CALL_1
0x400861a	      0xe9d8feffff	                           jmp 0x40084f7	      1323	getchar.c	FUNCTION_44	CALL_1
0x400861f	              0x90	                                     nop	      1323	getchar.c	FUNCTION_44	CALL_1
0x4008620	      0xbf00000000	                              mov edi, 0	      1327	getchar.c	FUNCTION_44	CALL_3
0x4008625	      0xe800000000	                          call 0x400862a	      1327	getchar.c	FUNCTION_44	CALL_3
0x400862a	      0xe9e1feffff	                           jmp 0x4008510	      1327	getchar.c	FUNCTION_44	CALL_3
0x400862f	      0xbf00000000	                              mov edi, 0	      1327	getchar.c	FUNCTION_44	CALL_3
0x4008634	      0xe800000000	                          call 0x4008639	      1327	getchar.c	FUNCTION_44	CALL_3
0x4008639	      0xe9a0feffff	                           jmp 0x40084de	      1327	getchar.c	FUNCTION_44	CALL_3
0x400863e	      0xe800000000	                          call 0x4008643	      1479	getchar.c	FUNCTION_48
AppendCharToRedobuff	WHILE,0:ELSE,0:IF,1:DO,0:CALL,1:functions,0:SWITCH,0:FOR,0	8
0x4001ca0	    0x8b0500000000	            mov eax, dword [0x04001ca6] 	       634	getchar.c	FUNCTION_21	IF_1
0x4001ca6	            0x85c0	                           test eax, eax	       634	getchar.c	FUNCTION_21	IF_1
0x4001ca8	            0x7406	                            je 0x4001cb0	       634	getchar.c	FUNCTION_21	IF_1
0x4001caa	            0xf3c3	                                     ret	       634	getchar.c	FUNCTION_21	IF_1
0x4001cac	         0xf1f4000	                         nop dword [rax]	       634	getchar.c	FUNCTION_21	IF_1
0x4001cb0	            0x89fe	                            mov esi, edi	       635	getchar.c	FUNCTION_21	CALL_1
0x4001cb2	      0xbf00000000	                              mov edi, 0	       635	getchar.c	FUNCTION_21	CALL_1
0x4001cb7	      0xe954f3ffff	                   jmp sym.add_char_buff	       635	getchar.c	FUNCTION_21	CALL_1
vpeekc_nomap	WHILE,0:ELSE,0:IF,0:DO,0:CALL,1:functions,0:SWITCH,0:FOR,0	28
0x4008680	        0x4883ec08	                              sub rsp, 8	      1862	getchar.c	FUNCTION_58
0x4008684	    0x8b0500000000	            mov eax, dword [0x0400868a] 	      1865	getchar.c	FUNCTION_58
0x400868a	          0x8d4801	                      lea ecx, [rax + 1]	      1865	getchar.c	FUNCTION_58
0x400868d	    0x8b0500000000	            mov eax, dword [0x04008693] 	      1866	getchar.c	FUNCTION_58
0x4008693	    0x890d00000000	            mov dword [0x04008699], ecx 	      1865	getchar.c	FUNCTION_58
0x4008699	          0x8d5001	                      lea edx, [rax + 1]	      1866	getchar.c	FUNCTION_58
0x400869c	    0x8b0500000000	            mov eax, dword [0x040086a2] 	      1850	getchar.c	FUNCTION_57	IF_1
0x40086a2	    0x891500000000	            mov dword [0x040086a8], edx 	      1866	getchar.c	FUNCTION_58
0x40086a8	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1850	getchar.c	FUNCTION_57	IF_1
0x40086ab	            0x741b	                            je 0x40086c8	      1850	getchar.c	FUNCTION_57	IF_1
0x40086ad	          0x83e901	                              sub ecx, 1	      1868	getchar.c	FUNCTION_58
0x40086b0	          0x83ea01	                              sub edx, 1	      1869	getchar.c	FUNCTION_58
0x40086b3	    0x890d00000000	            mov dword [0x040086b9], ecx 	      1868	getchar.c	FUNCTION_58
0x40086b9	    0x891500000000	            mov dword [0x040086bf], edx 	      1869	getchar.c	FUNCTION_58
0x40086bf	        0x4883c408	                              add rsp, 8	      1871	getchar.c	FUNCTION_58
0x40086c3	              0xc3	                                     ret	      1871	getchar.c	FUNCTION_58
0x40086c4	         0xf1f4000	                         nop dword [rax]	      1871	getchar.c	FUNCTION_58
0x40086c8	    0x8b0500000000	            mov eax, dword [0x040086ce] 	      1997	getchar.c	FUNCTION_62	IF_1
0x40086ce	            0x85c0	                           test eax, eax	      1997	getchar.c	FUNCTION_62	IF_1
0x40086d0	            0x7e0a	                           jle 0x40086dc	      1997	getchar.c	FUNCTION_62	IF_1
0x40086d2	    0x8b0500000000	            mov eax, dword [0x040086d8] 	      1997	getchar.c	FUNCTION_62	IF_1
0x40086d8	            0x85c0	                           test eax, eax	      1997	getchar.c	FUNCTION_62	IF_1
0x40086da	            0x74d1	                            je 0x40086ad	      1997	getchar.c	FUNCTION_62	IF_1
0x40086dc	            0x31ff	                            xor edi, edi	      1997	getchar.c	FUNCTION_62	IF_1
0x40086de	      0xe80de1ffff	              call sym.vgetorpeek.part.9	      1997	getchar.c	FUNCTION_62	IF_1
0x40086e3	    0x8b0d00000000	            mov ecx, dword [0x040086e9] 	      1997	getchar.c	FUNCTION_62	IF_1
0x40086e9	    0x8b1500000000	            mov edx, dword [0x040086ef] 	      1997	getchar.c	FUNCTION_62	IF_1
0x40086ef	            0xebbc	                           jmp 0x40086ad	      1997	getchar.c	FUNCTION_62	IF_1
input_available	WHILE,0:ELSE,0:IF,0:DO,0:CALL,1:functions,0:SWITCH,0:FOR,0	12
0x4004360	        0x4883ec08	                              sub rsp, 8	      3156	getchar.c	FUNCTION_65
0x4004364	      0xe800000000	                          call 0x4004369	      3157	getchar.c	FUNCTION_65	CALL_1
0x4004369	            0x85c0	                           test eax, eax	      3159	getchar.c	FUNCTION_65
0x400436b	      0xba01000000	                              mov edx, 1	      3159	getchar.c	FUNCTION_65
0x4004370	            0x740d	                            je 0x400437f	      3159	getchar.c	FUNCTION_65
0x4004372	    0x8b0500000000	            mov eax, dword [0x04004378] 	      3159	getchar.c	FUNCTION_65
0x4004378	            0x31d2	                            xor edx, edx	      3159	getchar.c	FUNCTION_65
0x400437a	            0x85c0	                           test eax, eax	      3159	getchar.c	FUNCTION_65
0x400437c	           0xf95c2	                                setne dl	      3159	getchar.c	FUNCTION_65
0x400437f	            0x89d0	                            mov eax, edx	      3162	getchar.c	FUNCTION_65
0x4004381	        0x4883c408	                              add rsp, 8	      3162	getchar.c	FUNCTION_65
0x4004385	              0xc3	                                     ret	      3162	getchar.c	FUNCTION_65
AppendToRedobuffLit	WHILE,2:ELSE,2:IF,7:DO,0:CALL,6:functions,0:SWITCH,0:FOR,0	155
0x4001a40	            0x4156	                                push r14	       574	getchar.c	FUNCTION_20
0x4001a42	            0x4155	                                push r13	       574	getchar.c	FUNCTION_20
0x4001a44	            0x4154	                                push r12	       574	getchar.c	FUNCTION_20
0x4001a46	              0x55	                                push rbp	       574	getchar.c	FUNCTION_20
0x4001a47	              0x53	                                push rbx	       574	getchar.c	FUNCTION_20
0x4001a48	        0x4883ec10	                           sub rsp, 0x10	       574	getchar.c	FUNCTION_20
0x4001a4c	    0x8b1500000000	            mov edx, dword [0x04001a52] 	       579	getchar.c	FUNCTION_20	IF_1
0x4001a52	    0x64488b042528	                mov rax, qword fs:[0x28]	       574	getchar.c	FUNCTION_20
0x4001a5b	      0x4889442408	                mov qword [rsp + 8], rax	       574	getchar.c	FUNCTION_20
0x4001a60	            0x31c0	                            xor eax, eax	       574	getchar.c	FUNCTION_20
0x4001a62	        0x48893c24	                    mov qword [rsp], rdi	       575	getchar.c	FUNCTION_20
0x4001a66	            0x85d2	                           test edx, edx	       579	getchar.c	FUNCTION_20	IF_1
0x4001a68	     0xf8512010000	                           jne 0x4001b80	       579	getchar.c	FUNCTION_20	IF_1
0x4001a6e	            0x89f3	                            mov ebx, esi	       579	getchar.c	FUNCTION_20	IF_1
0x4001a70	          0x4889fd	                            mov rbp, rdi	       579	getchar.c	FUNCTION_20	IF_1
0x4001a73	          0x4889fe	                            mov rsi, rdi	       579	getchar.c	FUNCTION_20	IF_1
0x4001a76	            0x85db	                           test ebx, ebx	       582	getchar.c	FUNCTION_20	WHILE_1
0x4001a78	          0x4c63e3	                         movsxd r12, ebx	       582	getchar.c	FUNCTION_20	WHILE_1
0x4001a7b	     0xf88ef000000	                            js 0x4001b70	       582	getchar.c	FUNCTION_20	WHILE_1
0x4001a81	     0xf1f80000000	                         nop dword [rax]	       582	getchar.c	FUNCTION_20	WHILE_1
0x4001a88	          0x4889f0	                            mov rax, rsi	       582	getchar.c	FUNCTION_20	WHILE_1
0x4001a8b	          0x4829e8	                            sub rax, rbp	       582	getchar.c	FUNCTION_20	WHILE_1
0x4001a8e	          0x4c39e0	                            cmp rax, r12	       582	getchar.c	FUNCTION_20	WHILE_1
0x4001a91	           0xf9cc0	                                 setl al	       582	getchar.c	FUNCTION_20	WHILE_1
0x4001a94	            0x84c0	                             test al, al	       582	getchar.c	FUNCTION_20	WHILE_1
0x4001a96	     0xf84e4000000	                            je 0x4001b80	       582	getchar.c	FUNCTION_20	WHILE_1
0x4001a9c	           0xfb606	                   movzx eax, byte [rsi]	       587	getchar.c	FUNCTION_20	WHILE_1	WHILE_2
0x4001a9f	          0x8d50e0	                   lea edx, [rax - 0x20]	       587	getchar.c	FUNCTION_20	WHILE_1	WHILE_2
0x4001aa2	          0x80fa5e	                            cmp dl, 0x5e	       587	getchar.c	FUNCTION_20	WHILE_1	WHILE_2
0x4001aa5	     0xf87c5010000	                            ja 0x4001c70	       587	getchar.c	FUNCTION_20	WHILE_1	WHILE_2
0x4001aab	            0x85db	                           test ebx, ebx	       587	getchar.c	FUNCTION_20	WHILE_1	WHILE_2
0x4001aad	     0xf88f5000000	                            js 0x4001ba8	       587	getchar.c	FUNCTION_20	WHILE_1	WHILE_2
0x4001ab3	          0x4889f2	                            mov rdx, rsi	       587	getchar.c	FUNCTION_20	WHILE_1	WHILE_2
0x4001ab6	            0xeb1f	                           jmp 0x4001ad7	       587	getchar.c	FUNCTION_20	WHILE_1	WHILE_2
0x4001ab8	     0xf1f84000000	                   nop dword [rax + rax]	       587	getchar.c	FUNCTION_20	WHILE_1	WHILE_2
0x4001ac0	        0x4883c201	                              add rdx, 1	       592	getchar.c	FUNCTION_20	WHILE_1	WHILE_2
0x4001ac4	        0x48891424	                    mov qword [rsp], rdx	       592	getchar.c	FUNCTION_20	WHILE_1	WHILE_2
0x4001ac8	           0xfb602	                   movzx eax, byte [rdx]	       587	getchar.c	FUNCTION_20	WHILE_1	WHILE_2
0x4001acb	          0x8d48e0	                   lea ecx, [rax - 0x20]	       587	getchar.c	FUNCTION_20	WHILE_1	WHILE_2
0x4001ace	          0x80f95e	                            cmp cl, 0x5e	       587	getchar.c	FUNCTION_20	WHILE_1	WHILE_2
0x4001ad1	     0xf87f0000000	                            ja 0x4001bc7	       587	getchar.c	FUNCTION_20	WHILE_1	WHILE_2
0x4001ad7	          0x4889d0	                            mov rax, rdx	       591	getchar.c	FUNCTION_20	WHILE_1	WHILE_2
0x4001ada	          0x4829e8	                            sub rax, rbp	       591	getchar.c	FUNCTION_20	WHILE_1	WHILE_2
0x4001add	          0x4939c4	                            cmp r12, rax	       591	getchar.c	FUNCTION_20	WHILE_1	WHILE_2
0x4001ae0	            0x7fde	                            jg 0x4001ac0	       591	getchar.c	FUNCTION_20	WHILE_1	WHILE_2
0x4001ae2	          0x4839d6	                            cmp rsi, rdx	       598	getchar.c	FUNCTION_20	WHILE_1	IF_3
0x4001ae5	     0xf8205010000	                            jb 0x4001bf0	       598	getchar.c	FUNCTION_20	WHILE_1	IF_3
0x4001aeb	           0xfb602	                   movzx eax, byte [rdx]	       598	getchar.c	FUNCTION_20	WHILE_1	IF_3
0x4001aee	            0x84c0	                             test al, al	       601	getchar.c	FUNCTION_20	WHILE_1	IF_4
0x4001af0	     0xf848a000000	                            je 0x4001b80	       601	getchar.c	FUNCTION_20	WHILE_1	IF_4
0x4001af6	            0x85db	                           test ebx, ebx	       601	getchar.c	FUNCTION_20	WHILE_1	IF_4
0x4001af8	            0x780b	                            js 0x4001b05	       601	getchar.c	FUNCTION_20	WHILE_1	IF_4
0x4001afa	          0x4889d0	                            mov rax, rdx	       601	getchar.c	FUNCTION_20	WHILE_1	IF_4
0x4001afd	          0x4829e8	                            sub rax, rbp	       601	getchar.c	FUNCTION_20	WHILE_1	IF_4
0x4001b00	          0x4c39e0	                            cmp rax, r12	       601	getchar.c	FUNCTION_20	WHILE_1	IF_4
0x4001b03	            0x7d7b	                           jge 0x4001b80	       601	getchar.c	FUNCTION_20	WHILE_1	IF_4
0x4001b05	    0x8b0500000000	            mov eax, dword [0x04001b0b] 	       606	getchar.c	FUNCTION_20	WHILE_1	IF_5
0x4001b0b	            0x85c0	                           test eax, eax	       606	getchar.c	FUNCTION_20	WHILE_1	IF_5
0x4001b0d	     0xf854d010000	                           jne 0x4001c60	       606	getchar.c	FUNCTION_20	WHILE_1	IF_5
0x4001b13	        0x488d4201	                      lea rax, [rdx + 1]	       611	getchar.c	FUNCTION_20	WHILE_1	ELSE_1
0x4001b17	        0x48890424	                    mov qword [rsp], rax	       611	getchar.c	FUNCTION_20	WHILE_1	ELSE_1
0x4001b1b	        0x440fb62a	                  movzx r13d, byte [rdx]	       611	getchar.c	FUNCTION_20	WHILE_1	ELSE_1
0x4001b1f	        0x4183fd1f	                          cmp r13d, 0x1f	       612	getchar.c	FUNCTION_20	WHILE_1	IF_6
0x4001b23	     0xf8ee7000000	                           jle 0x4001c10	       612	getchar.c	FUNCTION_20	WHILE_1	IF_6
0x4001b29	        0x4183fd7f	                          cmp r13d, 0x7f	       612	getchar.c	FUNCTION_20	WHILE_1	IF_6
0x4001b2d	     0xf84dd000000	                            je 0x4001c10	       612	getchar.c	FUNCTION_20	WHILE_1	IF_6
0x4001b33	        0x488b0424	                    mov rax, qword [rsp]	       612	getchar.c	FUNCTION_20	WHILE_1	IF_6
0x4001b37	          0x803800	                       cmp byte [rax], 0	       612	getchar.c	FUNCTION_20	WHILE_1	IF_6
0x4001b3a	            0x751b	                           jne 0x4001b57	       612	getchar.c	FUNCTION_20	WHILE_1	IF_6
0x4001b3c	        0x4183fd30	                          cmp r13d, 0x30	       612	getchar.c	FUNCTION_20	WHILE_1	IF_6
0x4001b40	        0x410f94c6	                               sete r14b	       612	getchar.c	FUNCTION_20	WHILE_1	IF_6
0x4001b44	        0x4183fd5e	                          cmp r13d, 0x5e	       612	getchar.c	FUNCTION_20	WHILE_1	IF_6
0x4001b48	     0xf84ca000000	                            je 0x4001c18	       612	getchar.c	FUNCTION_20	WHILE_1	IF_6
0x4001b4e	          0x4584f6	                         test r14b, r14b	       612	getchar.c	FUNCTION_20	WHILE_1	IF_6
0x4001b51	     0xf85c1000000	                           jne 0x4001c18	       612	getchar.c	FUNCTION_20	WHILE_1	IF_6
0x4001b57	          0x4489ee	                           mov esi, r13d	       623	getchar.c	FUNCTION_20	WHILE_1	CALL_6
0x4001b5a	      0xbf00000000	                              mov edi, 0	       623	getchar.c	FUNCTION_20	WHILE_1	CALL_6
0x4001b5f	      0xe8acf4ffff	                  call sym.add_char_buff	       623	getchar.c	FUNCTION_20	WHILE_1	CALL_6
0x4001b64	            0x85db	                           test ebx, ebx	       582	getchar.c	FUNCTION_20	WHILE_1
0x4001b66	        0x488b3424	                    mov rsi, qword [rsp]	       582	getchar.c	FUNCTION_20	WHILE_1
0x4001b6a	     0xf8918ffffff	                           jns 0x4001a88	       582	getchar.c	FUNCTION_20	WHILE_1
0x4001b70	          0x803e00	                       cmp byte [rsi], 0	       582	getchar.c	FUNCTION_20	WHILE_1
0x4001b73	           0xf95c0	                                setne al	       582	getchar.c	FUNCTION_20	WHILE_1
0x4001b76	            0x84c0	                             test al, al	       582	getchar.c	FUNCTION_20	WHILE_1
0x4001b78	     0xf851effffff	                           jne 0x4001a9c	       582	getchar.c	FUNCTION_20	WHILE_1
0x4001b7e	            0x6690	                                     nop	       582	getchar.c	FUNCTION_20	WHILE_1
0x4001b80	      0x488b442408	                mov rax, qword [rsp + 8]	       625	getchar.c	FUNCTION_20
0x4001b85	    0x644833042528	                xor rax, qword fs:[0x28]	       625	getchar.c	FUNCTION_20
0x4001b8e	     0xf8504010000	                           jne 0x4001c98	       625	getchar.c	FUNCTION_20
0x4001b94	        0x4883c410	                           add rsp, 0x10	       625	getchar.c	FUNCTION_20
0x4001b98	              0x5b	                                 pop rbx	       625	getchar.c	FUNCTION_20
0x4001b99	              0x5d	                                 pop rbp	       625	getchar.c	FUNCTION_20
0x4001b9a	            0x415c	                                 pop r12	       625	getchar.c	FUNCTION_20
0x4001b9c	            0x415d	                                 pop r13	       625	getchar.c	FUNCTION_20
0x4001b9e	            0x415e	                                 pop r14	       625	getchar.c	FUNCTION_20
0x4001ba0	              0xc3	                                     ret	       625	getchar.c	FUNCTION_20
0x4001ba1	     0xf1f80000000	                         nop dword [rax]	       625	getchar.c	FUNCTION_20
0x4001ba8	        0x488d4e01	                      lea rcx, [rsi + 1]	       625	getchar.c	FUNCTION_20
0x4001bac	         0xf1f4000	                         nop dword [rax]	       625	getchar.c	FUNCTION_20
0x4001bb0	        0x48890c24	                    mov qword [rsp], rcx	       592	getchar.c	FUNCTION_20	WHILE_1	WHILE_2
0x4001bb4	           0xfb601	                   movzx eax, byte [rcx]	       587	getchar.c	FUNCTION_20	WHILE_1	WHILE_2
0x4001bb7	          0x4889ca	                            mov rdx, rcx	       592	getchar.c	FUNCTION_20	WHILE_1	WHILE_2
0x4001bba	        0x4883c101	                              add rcx, 1	       592	getchar.c	FUNCTION_20	WHILE_1	WHILE_2
0x4001bbe	          0x8d78e0	                   lea edi, [rax - 0x20]	       587	getchar.c	FUNCTION_20	WHILE_1	WHILE_2
0x4001bc1	        0x4080ff5e	                           cmp dil, 0x5e	       587	getchar.c	FUNCTION_20	WHILE_1	WHILE_2
0x4001bc5	            0x76e9	                           jbe 0x4001bb0	       587	getchar.c	FUNCTION_20	WHILE_1	WHILE_2
0x4001bc7	            0x84c0	                             test al, al	       596	getchar.c	FUNCTION_20	WHILE_1	IF_2
0x4001bc9	     0xf8513ffffff	                           jne 0x4001ae2	       596	getchar.c	FUNCTION_20	WHILE_1	IF_2
0x4001bcf	         0xfb642ff	               movzx eax, byte [rdx - 1]	       596	getchar.c	FUNCTION_20	WHILE_1	IF_2
0x4001bd3	            0x3c30	                            cmp al, 0x30	       596	getchar.c	FUNCTION_20	WHILE_1	IF_2
0x4001bd5	            0x7408	                            je 0x4001bdf	       596	getchar.c	FUNCTION_20	WHILE_1	IF_2
0x4001bd7	            0x3c5e	                            cmp al, 0x5e	       596	getchar.c	FUNCTION_20	WHILE_1	IF_2
0x4001bd9	     0xf8503ffffff	                           jne 0x4001ae2	       596	getchar.c	FUNCTION_20	WHILE_1	IF_2
0x4001bdf	        0x4883ea01	                              sub rdx, 1	       597	getchar.c	FUNCTION_20	WHILE_1	IF_2
0x4001be3	          0x4839d6	                            cmp rsi, rdx	       598	getchar.c	FUNCTION_20	WHILE_1	IF_3
0x4001be6	        0x48891424	                    mov qword [rsp], rdx	       597	getchar.c	FUNCTION_20	WHILE_1	IF_2
0x4001bea	     0xf83fbfeffff	                           jae 0x4001aeb	       598	getchar.c	FUNCTION_20	WHILE_1	IF_3
0x4001bf0	          0x4829f2	                            sub rdx, rsi	       599	getchar.c	FUNCTION_20	WHILE_1	CALL_1
0x4001bf3	      0xbf00000000	                              mov edi, 0	       599	getchar.c	FUNCTION_20	WHILE_1	CALL_1
0x4001bf8	      0xe843e4ffff	                       call sym.add_buff	       599	getchar.c	FUNCTION_20	WHILE_1	CALL_1
0x4001bfd	        0x488b1424	                    mov rdx, qword [rsp]	       599	getchar.c	FUNCTION_20	WHILE_1	CALL_1
0x4001c01	      0xe9e5feffff	                           jmp 0x4001aeb	       599	getchar.c	FUNCTION_20	WHILE_1	CALL_1
0x4001c06	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       599	getchar.c	FUNCTION_20	WHILE_1	CALL_1
0x4001c10	        0x4183fd30	                          cmp r13d, 0x30	       599	getchar.c	FUNCTION_20	WHILE_1	CALL_1
0x4001c14	        0x410f94c6	                               sete r14b	       599	getchar.c	FUNCTION_20	WHILE_1	CALL_1
0x4001c18	      0xbe16000000	                           mov esi, 0x16	       613	getchar.c	FUNCTION_20	WHILE_1	CALL_3
0x4001c1d	      0xbf00000000	                              mov edi, 0	       613	getchar.c	FUNCTION_20	WHILE_1	CALL_3
0x4001c22	      0xe8e9f3ffff	                  call sym.add_char_buff	       613	getchar.c	FUNCTION_20	WHILE_1	CALL_3
0x4001c27	        0x488b0424	                    mov rax, qword [rsp]	       616	getchar.c	FUNCTION_20	WHILE_1	IF_7
0x4001c2b	          0x803800	                       cmp byte [rax], 0	       616	getchar.c	FUNCTION_20	WHILE_1	IF_7
0x4001c2e	     0xf8523ffffff	                           jne 0x4001b57	       616	getchar.c	FUNCTION_20	WHILE_1	IF_7
0x4001c34	          0x4584f6	                         test r14b, r14b	       616	getchar.c	FUNCTION_20	WHILE_1	IF_7
0x4001c37	     0xf841affffff	                            je 0x4001b57	       616	getchar.c	FUNCTION_20	WHILE_1	IF_7
0x4001c3d	      0xba03000000	                              mov edx, 3	       620	getchar.c	FUNCTION_20	WHILE_1	CALL_5
0x4001c42	      0xbe00000000	                              mov esi, 0	       620	getchar.c	FUNCTION_20	WHILE_1	CALL_5
0x4001c47	      0xbf00000000	                              mov edi, 0	       620	getchar.c	FUNCTION_20	WHILE_1	CALL_5
0x4001c4c	      0xe8efe3ffff	                       call sym.add_buff	       620	getchar.c	FUNCTION_20	WHILE_1	CALL_5
0x4001c51	      0xe90effffff	                           jmp 0x4001b64	       620	getchar.c	FUNCTION_20	WHILE_1	CALL_5
0x4001c56	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       620	getchar.c	FUNCTION_20	WHILE_1	CALL_5
0x4001c60	          0x4889e7	                            mov rdi, rsp	       608	getchar.c	FUNCTION_20	WHILE_1	CALL_2
0x4001c63	      0xe800000000	                          call 0x4001c68	       608	getchar.c	FUNCTION_20	WHILE_1	CALL_2
0x4001c68	          0x4189c5	                           mov r13d, eax	       608	getchar.c	FUNCTION_20	WHILE_1	CALL_2
0x4001c6b	      0xe9affeffff	                           jmp 0x4001b1f	       608	getchar.c	FUNCTION_20	WHILE_1	CALL_2
0x4001c70	            0x84c0	                             test al, al	       596	getchar.c	FUNCTION_20	WHILE_1	IF_2
0x4001c72	            0x751c	                           jne 0x4001c90	       596	getchar.c	FUNCTION_20	WHILE_1	IF_2
0x4001c74	         0xfb646ff	               movzx eax, byte [rsi - 1]	       596	getchar.c	FUNCTION_20	WHILE_1	IF_2
0x4001c78	          0x4889f2	                            mov rdx, rsi	       596	getchar.c	FUNCTION_20	WHILE_1	IF_2
0x4001c7b	            0x3c30	                            cmp al, 0x30	       596	getchar.c	FUNCTION_20	WHILE_1	IF_2
0x4001c7d	     0xf845cffffff	                            je 0x4001bdf	       596	getchar.c	FUNCTION_20	WHILE_1	IF_2
0x4001c83	            0x3c5e	                            cmp al, 0x5e	       596	getchar.c	FUNCTION_20	WHILE_1	IF_2
0x4001c85	     0xf8560feffff	                           jne 0x4001aeb	       596	getchar.c	FUNCTION_20	WHILE_1	IF_2
0x4001c8b	      0xe94fffffff	                           jmp 0x4001bdf	       596	getchar.c	FUNCTION_20	WHILE_1	IF_2
0x4001c90	          0x4889f2	                            mov rdx, rsi	       596	getchar.c	FUNCTION_20	WHILE_1	IF_2
0x4001c93	      0xe95efeffff	                           jmp 0x4001af6	       596	getchar.c	FUNCTION_20	WHILE_1	IF_2
0x4001c98	      0xe800000000	                          call 0x4001c9d	       625	getchar.c	FUNCTION_20
get_recorded	WHILE,0:ELSE,0:IF,2:DO,0:CALL,3:functions,0:SWITCH,0:FOR,0	78
0x4001320	              0x55	                                push rbp	       186	getchar.c	FUNCTION_3
0x4001321	              0x53	                                push rbx	       186	getchar.c	FUNCTION_3
0x4001322	        0x4883ec08	                              sub rsp, 8	       186	getchar.c	FUNCTION_3
0x4001326	    0x488b1d000000	            mov rbx, qword [0x0400132d] 	       165	getchar.c	FUNCTION_2	FOR_1
0x400132d	          0x4885db	                           test rbx, rbx	       165	getchar.c	FUNCTION_2	FOR_1
0x4001330	     0xf84ef000000	                            je 0x4001425	       165	getchar.c	FUNCTION_2	FOR_1
0x4001336	            0x31ed	                            xor ebp, ebp	       165	getchar.c	FUNCTION_2	FOR_1
0x4001338	     0xf1f84000000	                   nop dword [rax + rax]	       165	getchar.c	FUNCTION_2	FOR_1
0x4001340	        0x488d7b08	                      lea rdi, [rbx + 8]	       166	getchar.c	FUNCTION_2	CALL_1
0x4001344	      0xe800000000	                          call 0x4001349	       166	getchar.c	FUNCTION_2	CALL_1
0x4001349	          0x488b1b	                    mov rbx, qword [rbx]	       165	getchar.c	FUNCTION_2	FOR_1
0x400134c	          0x4801c5	                            add rbp, rax	       166	getchar.c	FUNCTION_2	CALL_1
0x400134f	          0x4885db	                           test rbx, rbx	       165	getchar.c	FUNCTION_2	FOR_1
0x4001352	            0x75ec	                           jne 0x4001340	       165	getchar.c	FUNCTION_2	FOR_1
0x4001354	        0x488d7d01	                      lea rdi, [rbp + 1]	       165	getchar.c	FUNCTION_2	FOR_1
0x4001358	      0xbe01000000	                              mov esi, 1	       168	getchar.c	FUNCTION_2	IF_1	CALL_2
0x400135d	      0xe800000000	                          call 0x4001362	       168	getchar.c	FUNCTION_2	IF_1	CALL_2
0x4001362	          0x4885c0	                           test rax, rax	       168	getchar.c	FUNCTION_2	IF_1	CALL_2
0x4001365	          0x4889c3	                            mov rbx, rax	       168	getchar.c	FUNCTION_2	IF_1	CALL_2
0x4001368	            0x7443	                            je 0x40013ad	       168	getchar.c	FUNCTION_2	IF_1	CALL_2
0x400136a	    0x488b35000000	            mov rsi, qword [0x04001371] 	       171	getchar.c	FUNCTION_2	IF_1	FOR_2
0x4001371	          0x4889c1	                            mov rcx, rax	       171	getchar.c	FUNCTION_2	IF_1	FOR_2
0x4001374	          0x4885f6	                           test rsi, rsi	       171	getchar.c	FUNCTION_2	IF_1	FOR_2
0x4001377	            0x7431	                            je 0x40013aa	       171	getchar.c	FUNCTION_2	IF_1	FOR_2
0x4001379	     0xf1f80000000	                         nop dword [rax]	       171	getchar.c	FUNCTION_2	IF_1	FOR_2
0x4001380	         0xfb64608	               movzx eax, byte [rsi + 8]	       172	getchar.c	FUNCTION_2	IF_1	FOR_2	FOR_3
0x4001384	        0x488d5608	                      lea rdx, [rsi + 8]	       172	getchar.c	FUNCTION_2	IF_1	FOR_2	FOR_3
0x4001388	            0x84c0	                             test al, al	       172	getchar.c	FUNCTION_2	IF_1	FOR_2	FOR_3
0x400138a	            0x7416	                            je 0x40013a2	       172	getchar.c	FUNCTION_2	IF_1	FOR_2	FOR_3
0x400138c	         0xf1f4000	                         nop dword [rax]	       172	getchar.c	FUNCTION_2	IF_1	FOR_2	FOR_3
0x4001390	        0x4883c101	                              add rcx, 1	       173	getchar.c	FUNCTION_2	IF_1	FOR_2	FOR_3
0x4001394	        0x4883c201	                              add rdx, 1	       173	getchar.c	FUNCTION_2	IF_1	FOR_2	FOR_3
0x4001398	          0x8841ff	                  mov byte [rcx - 1], al	       173	getchar.c	FUNCTION_2	IF_1	FOR_2	FOR_3
0x400139b	           0xfb602	                   movzx eax, byte [rdx]	       172	getchar.c	FUNCTION_2	IF_1	FOR_2	FOR_3
0x400139e	            0x84c0	                             test al, al	       172	getchar.c	FUNCTION_2	IF_1	FOR_2	FOR_3
0x40013a0	            0x75ee	                           jne 0x4001390	       172	getchar.c	FUNCTION_2	IF_1	FOR_2	FOR_3
0x40013a2	          0x488b36	                    mov rsi, qword [rsi]	       171	getchar.c	FUNCTION_2	IF_1	FOR_2
0x40013a5	          0x4885f6	                           test rsi, rsi	       171	getchar.c	FUNCTION_2	IF_1	FOR_2
0x40013a8	            0x75d6	                           jne 0x4001380	       171	getchar.c	FUNCTION_2	IF_1	FOR_2
0x40013aa	          0xc60100	                       mov byte [rcx], 0	       174	getchar.c	FUNCTION_2	IF_1
0x40013ad	    0x488b3d000000	            mov rdi, qword [0x040013b4] 	       141	getchar.c	FUNCTION_1	FOR_1
0x40013b4	          0x4885ff	                           test rdi, rdi	       141	getchar.c	FUNCTION_1	FOR_1
0x40013b7	            0x7417	                            je 0x40013d0	       141	getchar.c	FUNCTION_1	FOR_1
0x40013b9	     0xf1f80000000	                         nop dword [rax]	       141	getchar.c	FUNCTION_1	FOR_1
0x40013c0	          0x488b2f	                    mov rbp, qword [rdi]	       143	getchar.c	FUNCTION_1	FOR_1
0x40013c3	      0xe800000000	                          call 0x40013c8	       144	getchar.c	FUNCTION_1	FOR_1	CALL_1
0x40013c8	          0x4885ed	                           test rbp, rbp	       141	getchar.c	FUNCTION_1	FOR_1
0x40013cb	          0x4889ef	                            mov rdi, rbp	       141	getchar.c	FUNCTION_1	FOR_1
0x40013ce	            0x75f0	                           jne 0x40013c0	       141	getchar.c	FUNCTION_1	FOR_1
0x40013d0	          0x4889df	                            mov rdi, rbx	       197	getchar.c	FUNCTION_3	CALL_3
0x40013d3	    0x48c705000000	               mov qword [0x040013de], 0	       146	getchar.c	FUNCTION_1
0x40013de	      0xe800000000	                          call 0x40013e3	       197	getchar.c	FUNCTION_3	CALL_3
0x40013e3	    0x486315000000	         movsxd rdx, dword [0x040013ea] 	       198	getchar.c	FUNCTION_3	IF_1
0x40013ea	            0x39c2	                            cmp edx, eax	       198	getchar.c	FUNCTION_3	IF_1
0x40013ec	            0x7f07	                            jg 0x40013f5	       198	getchar.c	FUNCTION_3	IF_1
0x40013ee	          0x4829d0	                            sub rax, rdx	       200	getchar.c	FUNCTION_3	IF_1
0x40013f1	        0xc6040300	                 mov byte [rbx + rax], 0	       201	getchar.c	FUNCTION_3	IF_1
0x40013f5	          0x4885c0	                           test rax, rax	       208	getchar.c	FUNCTION_3	IF_2
0x40013f8	            0x7414	                            je 0x400140e	       208	getchar.c	FUNCTION_3	IF_2
0x40013fa	    0x8b1500000000	            mov edx, dword [0x04001400] 	       208	getchar.c	FUNCTION_3	IF_2
0x4001400	            0x85d2	                           test edx, edx	       208	getchar.c	FUNCTION_3	IF_2
0x4001402	            0x740a	                            je 0x400140e	       208	getchar.c	FUNCTION_3	IF_2
0x4001404	      0x488d4403ff	                lea rax, [rbx + rax - 1]	       208	getchar.c	FUNCTION_3	IF_2
0x4001409	          0x80380f	                     cmp byte [rax], 0xf	       208	getchar.c	FUNCTION_3	IF_2
0x400140c	            0x740a	                            je 0x4001418	       208	getchar.c	FUNCTION_3	IF_2
0x400140e	        0x4883c408	                              add rsp, 8	       212	getchar.c	FUNCTION_3
0x4001412	          0x4889d8	                            mov rax, rbx	       212	getchar.c	FUNCTION_3
0x4001415	              0x5b	                                 pop rbx	       212	getchar.c	FUNCTION_3
0x4001416	              0x5d	                                 pop rbp	       212	getchar.c	FUNCTION_3
0x4001417	              0xc3	                                     ret	       212	getchar.c	FUNCTION_3
0x4001418	          0xc60000	                       mov byte [rax], 0	       209	getchar.c	FUNCTION_3	IF_2
0x400141b	        0x4883c408	                              add rsp, 8	       212	getchar.c	FUNCTION_3
0x400141f	          0x4889d8	                            mov rax, rbx	       212	getchar.c	FUNCTION_3
0x4001422	              0x5b	                                 pop rbx	       212	getchar.c	FUNCTION_3
0x4001423	              0x5d	                                 pop rbp	       212	getchar.c	FUNCTION_3
0x4001424	              0xc3	                                     ret	       212	getchar.c	FUNCTION_3
0x4001425	      0xbf01000000	                              mov edi, 1	       165	getchar.c	FUNCTION_2	FOR_1
0x400142a	      0xe929ffffff	                           jmp 0x4001358	       165	getchar.c	FUNCTION_2	FOR_1
readbuf1_empty	WHILE,0:ELSE,0:IF,0:DO,0:CALL,0:functions,0:SWITCH,0:FOR,0	4
0x40014f0	            0x31c0	                            xor eax, eax	       432	getchar.c	FUNCTION_12
0x40014f2	    0x48833d000000	               cmp qword [0x040014fa], 0	       432	getchar.c	FUNCTION_12
0x40014fa	           0xf94c0	                                 sete al	       432	getchar.c	FUNCTION_12
0x40014fd	              0xc3	                                     ret	       433	getchar.c	FUNCTION_12
before_blocking	WHILE,0:ELSE,0:IF,1:DO,0:CALL,2:functions,0:SWITCH,0:FOR,0	14
0x40037a0	        0x4883ec08	                              sub rsp, 8	      1522	getchar.c	FUNCTION_52
0x40037a4	      0xbe01000000	                              mov esi, 1	      1546	getchar.c	FUNCTION_53	IF_2	CALL_2
0x40037a9	      0xbf01000000	                              mov edi, 1	      1546	getchar.c	FUNCTION_53	IF_2	CALL_2
0x40037ae	      0xe800000000	                          call 0x40037b3	      1546	getchar.c	FUNCTION_53	IF_2	CALL_2
0x40037b3	    0x8b0500000000	            mov eax, dword [0x040037b9] 	      1525	getchar.c	FUNCTION_52	IF_1
0x40037b9	    0xc70500000000	               mov dword [0x040037c3], 0	      1547	getchar.c	FUNCTION_53	IF_2
0x40037c3	            0x85c0	                           test eax, eax	      1525	getchar.c	FUNCTION_52	IF_1
0x40037c5	            0x7509	                           jne 0x40037d0	      1525	getchar.c	FUNCTION_52	IF_1
0x40037c7	        0x4883c408	                              add rsp, 8	      1528	getchar.c	FUNCTION_52
0x40037cb	              0xc3	                                     ret	      1528	getchar.c	FUNCTION_52
0x40037cc	         0xf1f4000	                         nop dword [rax]	      1528	getchar.c	FUNCTION_52
0x40037d0	            0x31ff	                            xor edi, edi	      1526	getchar.c	FUNCTION_52	CALL_2
0x40037d2	        0x4883c408	                              add rsp, 8	      1528	getchar.c	FUNCTION_52
0x40037d6	      0xe900000000	                           jmp 0x40037db	      1526	getchar.c	FUNCTION_52	CALL_2
AppendToRedobuff	WHILE,0:ELSE,0:IF,1:DO,0:CALL,1:functions,0:SWITCH,0:FOR,0	98
0x40018c0	            0x4155	                                push r13	       561	getchar.c	FUNCTION_19
0x40018c2	            0x4154	                                push r12	       561	getchar.c	FUNCTION_19
0x40018c4	              0x55	                                push rbp	       561	getchar.c	FUNCTION_19
0x40018c5	              0x53	                                push rbx	       561	getchar.c	FUNCTION_19
0x40018c6	        0x4883ec08	                              sub rsp, 8	       561	getchar.c	FUNCTION_19
0x40018ca	    0x8b1d00000000	            mov ebx, dword [0x040018d0] 	       562	getchar.c	FUNCTION_19	IF_1
0x40018d0	            0x85db	                           test ebx, ebx	       562	getchar.c	FUNCTION_19	IF_1
0x40018d2	            0x740c	                            je 0x40018e0	       562	getchar.c	FUNCTION_19	IF_1
0x40018d4	        0x4883c408	                              add rsp, 8	       564	getchar.c	FUNCTION_19
0x40018d8	              0x5b	                                 pop rbx	       564	getchar.c	FUNCTION_19
0x40018d9	              0x5d	                                 pop rbp	       564	getchar.c	FUNCTION_19
0x40018da	            0x415c	                                 pop r12	       564	getchar.c	FUNCTION_19
0x40018dc	            0x415d	                                 pop r13	       564	getchar.c	FUNCTION_19
0x40018de	              0xc3	                                     ret	       564	getchar.c	FUNCTION_19
0x40018df	              0x90	                                     nop	       564	getchar.c	FUNCTION_19
0x40018e0	          0x4989fc	                            mov r12, rdi	       564	getchar.c	FUNCTION_19
0x40018e3	      0xe800000000	                          call 0x40018e8	       238	getchar.c	FUNCTION_5	CALL_1
0x40018e8	          0x4885c0	                           test rax, rax	       239	getchar.c	FUNCTION_5	IF_2
0x40018eb	          0x4889c5	                            mov rbp, rax	       238	getchar.c	FUNCTION_5	CALL_1
0x40018ee	            0x74e4	                            je 0x40018d4	       239	getchar.c	FUNCTION_5	IF_2
0x40018f0	    0x488b3d000000	            mov rdi, qword [0x040018f7] 	       242	getchar.c	FUNCTION_5	IF_3
0x40018f7	          0x4885ff	                           test rdi, rdi	       242	getchar.c	FUNCTION_5	IF_3
0x40018fa	     0xf8420010000	                            je 0x4001a20	       242	getchar.c	FUNCTION_5	IF_3
0x4001900	    0x48833d000000	               cmp qword [0x04001908], 0	       247	getchar.c	FUNCTION_5	ELSE_1	IF_4
0x4001908	     0xf84b7000000	                            je 0x40019c5	       247	getchar.c	FUNCTION_5	ELSE_1	IF_4
0x400190e	    0x486305000000	         movsxd rax, dword [0x04001915] 	       252	getchar.c	FUNCTION_5	ELSE_2	IF_5
0x4001915	            0x85c0	                           test eax, eax	       252	getchar.c	FUNCTION_5	ELSE_2	IF_5
0x4001917	     0xf8583000000	                           jne 0x40019a0	       252	getchar.c	FUNCTION_5	ELSE_2	IF_5
0x400191d	    0x8b1d00000000	            mov ebx, dword [0x04001923] 	       252	getchar.c	FUNCTION_5	ELSE_2	IF_5
0x4001923	            0x39eb	                            cmp ebx, ebp	       258	getchar.c	FUNCTION_5	IF_6
0x4001925	    0xc70500000000	               mov dword [0x0400192f], 0	       256	getchar.c	FUNCTION_5
0x400192f	     0xf8dbb000000	                           jge 0x40019f0	       258	getchar.c	FUNCTION_5	IF_6
0x4001935	        0x4883fd13	                           cmp rbp, 0x13	       266	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x4001939	            0x7e55	                           jle 0x4001990	       266	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x400193b	        0x488d7d10	                   lea rdi, [rbp + 0x10]	       266	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x400193f	          0x4989ed	                            mov r13, rbp	       266	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x4001942	      0xbe01000000	                              mov esi, 1	       270	getchar.c	FUNCTION_5	ELSE_3	CALL_8
0x4001947	      0xe800000000	                          call 0x400194c	       270	getchar.c	FUNCTION_5	ELSE_3	CALL_8
0x400194c	          0x4885c0	                           test rax, rax	       272	getchar.c	FUNCTION_5	ELSE_3	IF_8
0x400194f	          0x4889c3	                            mov rbx, rax	       270	getchar.c	FUNCTION_5	ELSE_3	CALL_8
0x4001952	            0x7480	                            je 0x40018d4	       272	getchar.c	FUNCTION_5	ELSE_3	IF_8
0x4001954	        0x488d7808	                      lea rdi, [rax + 8]	       275	getchar.c	FUNCTION_5	ELSE_3	CALL_9
0x4001958	          0x4129ed	                           sub r13d, ebp	       274	getchar.c	FUNCTION_5	ELSE_3
0x400195b	          0x4889ea	                            mov rdx, rbp	       275	getchar.c	FUNCTION_5	ELSE_3	CALL_9
0x400195e	          0x4c89e6	                            mov rsi, r12	       275	getchar.c	FUNCTION_5	ELSE_3	CALL_9
0x4001961	    0x44892d000000	           mov dword [0x04001968], r13d 	       274	getchar.c	FUNCTION_5	ELSE_3
0x4001968	      0xe800000000	                          call 0x400196d	       275	getchar.c	FUNCTION_5	ELSE_3	CALL_9
0x400196d	    0x488b05000000	            mov rax, qword [0x04001974] 	       277	getchar.c	FUNCTION_5	ELSE_3
0x4001974	          0x488b10	                    mov rdx, qword [rax]	       277	getchar.c	FUNCTION_5	ELSE_3
0x4001977	          0x488913	                    mov qword [rbx], rdx	       277	getchar.c	FUNCTION_5	ELSE_3
0x400197a	          0x488918	                    mov qword [rax], rbx	       278	getchar.c	FUNCTION_5	ELSE_3
0x400197d	    0x48891d000000	            mov qword [0x04001984], rbx 	       279	getchar.c	FUNCTION_5	ELSE_3
0x4001984	        0x4883c408	                              add rsp, 8	       564	getchar.c	FUNCTION_19
0x4001988	              0x5b	                                 pop rbx	       564	getchar.c	FUNCTION_19
0x4001989	              0x5d	                                 pop rbp	       564	getchar.c	FUNCTION_19
0x400198a	            0x415c	                                 pop r12	       564	getchar.c	FUNCTION_19
0x400198c	            0x415d	                                 pop r13	       564	getchar.c	FUNCTION_19
0x400198e	              0xc3	                                     ret	       564	getchar.c	FUNCTION_19
0x400198f	              0x90	                                     nop	       564	getchar.c	FUNCTION_19
0x4001990	      0xbf24000000	                           mov edi, 0x24	       266	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x4001995	    0x41bd14000000	                          mov r13d, 0x14	       267	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x400199b	            0xeba5	                           jmp 0x4001942	       267	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x400199d	           0xf1f00	                         nop dword [rax]	       267	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x40019a0	        0x4c8d6f08	                      lea r13, [rdi + 8]	       253	getchar.c	FUNCTION_5	ELSE_2	IF_5	CALL_4
0x40019a4	      0x498d5c0500	                    lea rbx, [r13 + rax]	       253	getchar.c	FUNCTION_5	ELSE_2	IF_5	CALL_4
0x40019a9	          0x4889df	                            mov rdi, rbx	       253	getchar.c	FUNCTION_5	ELSE_2	IF_5	CALL_4
0x40019ac	      0xe800000000	                          call 0x40019b1	       253	getchar.c	FUNCTION_5	ELSE_2	IF_5	CALL_4
0x40019b1	        0x488d5001	                      lea rdx, [rax + 1]	        59	string3.h	FUNCTION_106	CALL_3
0x40019b5	          0x4889de	                            mov rsi, rbx	        59	string3.h	FUNCTION_106	CALL_3
0x40019b8	          0x4c89ef	                            mov rdi, r13	        59	string3.h	FUNCTION_106	CALL_3
0x40019bb	      0xe800000000	                          call 0x40019c0	        59	string3.h	FUNCTION_106	CALL_3
0x40019c0	      0xe958ffffff	                           jmp 0x400191d	        59	string3.h	FUNCTION_106	CALL_3
0x40019c5	            0x31ff	                            xor edi, edi	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x40019c7	      0xba05000000	                              mov edx, 5	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x40019cc	      0xbe00000000	                              mov esi, 0	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x40019d1	      0xe800000000	                          call 0x40019d6	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x40019d6	        0x4883c408	                              add rsp, 8	       564	getchar.c	FUNCTION_19
0x40019da	          0x4889c7	                            mov rdi, rax	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x40019dd	              0x5b	                                 pop rbx	       564	getchar.c	FUNCTION_19
0x40019de	              0x5d	                                 pop rbp	       564	getchar.c	FUNCTION_19
0x40019df	            0x415c	                                 pop r12	       564	getchar.c	FUNCTION_19
0x40019e1	            0x415d	                                 pop r13	       564	getchar.c	FUNCTION_19
0x40019e3	      0xe900000000	                           jmp 0x40019e8	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x40019e8	     0xf1f84000000	                   nop dword [rax + rax]	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x40019f0	    0x488b05000000	            mov rax, qword [0x040019f7] 	       260	getchar.c	FUNCTION_5	IF_6	CALL_6
0x40019f7	        0x488d5808	                      lea rbx, [rax + 8]	       260	getchar.c	FUNCTION_5	IF_6	CALL_6
0x40019fb	          0x4889df	                            mov rdi, rbx	       260	getchar.c	FUNCTION_5	IF_6	CALL_6
0x40019fe	      0xe800000000	                          call 0x4001a03	       260	getchar.c	FUNCTION_5	IF_6	CALL_6
0x4001a03	        0x488d3c03	                    lea rdi, [rbx + rax]	       261	getchar.c	FUNCTION_5	IF_6	CALL_7
0x4001a07	          0x4889ea	                            mov rdx, rbp	       261	getchar.c	FUNCTION_5	IF_6	CALL_7
0x4001a0a	          0x4c89e6	                            mov rsi, r12	       261	getchar.c	FUNCTION_5	IF_6	CALL_7
0x4001a0d	      0xe800000000	                          call 0x4001a12	       261	getchar.c	FUNCTION_5	IF_6	CALL_7
0x4001a12	    0x292d00000000	             sub dword [0x04001a18], ebp	       262	getchar.c	FUNCTION_5	IF_6
0x4001a18	      0xe9b7feffff	                           jmp 0x40018d4	       262	getchar.c	FUNCTION_5	IF_6
0x4001a1d	           0xf1f00	                         nop dword [rax]	       262	getchar.c	FUNCTION_5	IF_6
0x4001a20	    0xc70500000000	               mov dword [0x04001a2a], 0	       244	getchar.c	FUNCTION_5	IF_3
0x4001a2a	    0x48c705000000	               mov qword [0x04001a35], 0	       245	getchar.c	FUNCTION_5	IF_3
0x4001a35	      0xe9e9feffff	                           jmp 0x4001923	       245	getchar.c	FUNCTION_5	IF_3
map_mode_to_chars	WHILE,0:ELSE,6:IF,10:DO,0:CALL,12:functions,0:SWITCH,0:FOR,0	96
0x4004780	              0x53	                                push rbx	      3967	getchar.c	FUNCTION_72
0x4004781	      0xba07000000	                              mov edx, 7	      3970	getchar.c	FUNCTION_72	CALL_1
0x4004786	            0x89fb	                            mov ebx, edi	      3967	getchar.c	FUNCTION_72
0x4004788	      0xbe01000000	                              mov esi, 1	      3970	getchar.c	FUNCTION_72	CALL_1
0x400478d	        0x4883ec20	                           sub rsp, 0x20	      3967	getchar.c	FUNCTION_72
0x4004791	          0x4889e7	                            mov rdi, rsp	      3970	getchar.c	FUNCTION_72	CALL_1
0x4004794	    0x64488b042528	                mov rax, qword fs:[0x28]	      3967	getchar.c	FUNCTION_72
0x400479d	      0x4889442418	             mov qword [rsp + 0x18], rax	      3967	getchar.c	FUNCTION_72
0x40047a2	            0x31c0	                            xor eax, eax	      3967	getchar.c	FUNCTION_72
0x40047a4	      0xe800000000	                          call 0x40047a9	      3970	getchar.c	FUNCTION_72	CALL_1
0x40047a9	            0x89d8	                            mov eax, ebx	      3972	getchar.c	FUNCTION_72	IF_1
0x40047ab	          0x83e018	                           and eax, 0x18	      3972	getchar.c	FUNCTION_72	IF_1
0x40047ae	          0x83f818	                           cmp eax, 0x18	      3972	getchar.c	FUNCTION_72	IF_1
0x40047b1	     0xf8421010000	                            je 0x40048d8	      3972	getchar.c	FUNCTION_72	IF_1
0x40047b7	          0xf6c310	                           test bl, 0x10	      3974	getchar.c	FUNCTION_72	ELSE_1	IF_2
0x40047ba	     0xf85b0000000	                           jne 0x4004870	      3974	getchar.c	FUNCTION_72	ELSE_1	IF_2
0x40047c0	          0xf6c320	                           test bl, 0x20	      3976	getchar.c	FUNCTION_72	ELSE_2	IF_3
0x40047c3	     0xf85b7000000	                           jne 0x4004880	      3976	getchar.c	FUNCTION_72	ELSE_2	IF_3
0x40047c9	          0xf6c308	                              test bl, 8	      3978	getchar.c	FUNCTION_72	ELSE_3	IF_4
0x40047cc	     0xf8586000000	                           jne 0x4004858	      3978	getchar.c	FUNCTION_72	ELSE_3	IF_4
0x40047d2	            0x89d8	                            mov eax, ebx	      3980	getchar.c	FUNCTION_72	ELSE_4	IF_5
0x40047d4	      0x2507100000	                         and eax, 0x1007	      3980	getchar.c	FUNCTION_72	ELSE_4	IF_5
0x40047d9	      0x3d07100000	                         cmp eax, 0x1007	      3980	getchar.c	FUNCTION_72	ELSE_4	IF_5
0x40047de	     0xf840c010000	                            je 0x40048f0	      3980	getchar.c	FUNCTION_72	ELSE_4	IF_5
0x40047e4	          0xf6c301	                              test bl, 1	      3985	getchar.c	FUNCTION_72	ELSE_5	IF_6
0x40047e7	     0xf85bb000000	                           jne 0x40048a8	      3985	getchar.c	FUNCTION_72	ELSE_5	IF_6
0x40047ed	          0xf6c304	                              test bl, 4	      3987	getchar.c	FUNCTION_72	ELSE_5	IF_7
0x40047f0	     0xf859a000000	                           jne 0x4004890	      3987	getchar.c	FUNCTION_72	ELSE_5	IF_7
0x40047f6	            0x89d8	                            mov eax, ebx	      3989	getchar.c	FUNCTION_72	ELSE_5	IF_8
0x40047f8	      0x2502100000	                         and eax, 0x1002	      3989	getchar.c	FUNCTION_72	ELSE_5	IF_8
0x40047fd	      0x3d02100000	                         cmp eax, 0x1002	      3989	getchar.c	FUNCTION_72	ELSE_5	IF_8
0x4004802	     0xf8400010000	                            je 0x4004908	      3989	getchar.c	FUNCTION_72	ELSE_5	IF_8
0x4004808	          0xf6c302	                              test bl, 2	      3993	getchar.c	FUNCTION_72	ELSE_5	ELSE_6	IF_9
0x400480b	     0xf85af000000	                           jne 0x40048c0	      3993	getchar.c	FUNCTION_72	ELSE_5	ELSE_6	IF_9
0x4004811	          0x80e710	                            and bh, 0x10	      3995	getchar.c	FUNCTION_72	ELSE_5	ELSE_6	IF_10
0x4004814	            0x7412	                            je 0x4004828	      3995	getchar.c	FUNCTION_72	ELSE_5	ELSE_6	IF_10
0x4004816	      0xbe73000000	                           mov esi, 0x73	      3996	getchar.c	FUNCTION_72	ELSE_5	ELSE_6	CALL_11
0x400481b	          0x4889e7	                            mov rdi, rsp	      3996	getchar.c	FUNCTION_72	ELSE_5	ELSE_6	CALL_11
0x400481e	      0xe800000000	                          call 0x4004823	      3996	getchar.c	FUNCTION_72	ELSE_5	ELSE_6	CALL_11
0x4004823	       0xf1f440000	                   nop dword [rax + rax]	      3996	getchar.c	FUNCTION_72	ELSE_5	ELSE_6	CALL_11
0x4004828	            0x31f6	                            xor esi, esi	      4000	getchar.c	FUNCTION_72	CALL_12
0x400482a	          0x4889e7	                            mov rdi, rsp	      4000	getchar.c	FUNCTION_72	CALL_12
0x400482d	      0xe800000000	                          call 0x4004832	      4000	getchar.c	FUNCTION_72	CALL_12
0x4004832	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      4002	getchar.c	FUNCTION_72
0x4004837	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4002	getchar.c	FUNCTION_72
0x4004840	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4002	getchar.c	FUNCTION_72
0x4004845	     0xf85cf000000	                           jne 0x400491a	      4002	getchar.c	FUNCTION_72
0x400484b	        0x4883c420	                           add rsp, 0x20	      4002	getchar.c	FUNCTION_72
0x400484f	              0x5b	                                 pop rbx	      4002	getchar.c	FUNCTION_72
0x4004850	              0xc3	                                     ret	      4002	getchar.c	FUNCTION_72
0x4004851	     0xf1f80000000	                         nop dword [rax]	      4002	getchar.c	FUNCTION_72
0x4004858	      0xbe63000000	                           mov esi, 0x63	      3979	getchar.c	FUNCTION_72	ELSE_3	IF_4
0x400485d	          0x4889e7	                            mov rdi, rsp	      3979	getchar.c	FUNCTION_72	ELSE_3	IF_4
0x4004860	      0xe800000000	                          call 0x4004865	      3979	getchar.c	FUNCTION_72	ELSE_3	IF_4
0x4004865	            0xebc1	                           jmp 0x4004828	      3979	getchar.c	FUNCTION_72	ELSE_3	IF_4
0x4004867	    0x660f1f840000	                    nop word [rax + rax]	      3979	getchar.c	FUNCTION_72	ELSE_3	IF_4
0x4004870	      0xbe69000000	                           mov esi, 0x69	      3975	getchar.c	FUNCTION_72	ELSE_1	IF_2
0x4004875	          0x4889e7	                            mov rdi, rsp	      3975	getchar.c	FUNCTION_72	ELSE_1	IF_2
0x4004878	      0xe800000000	                          call 0x400487d	      3975	getchar.c	FUNCTION_72	ELSE_1	IF_2
0x400487d	            0xeba9	                           jmp 0x4004828	      3975	getchar.c	FUNCTION_72	ELSE_1	IF_2
0x400487f	              0x90	                                     nop	      3975	getchar.c	FUNCTION_72	ELSE_1	IF_2
0x4004880	      0xbe6c000000	                           mov esi, 0x6c	      3977	getchar.c	FUNCTION_72	ELSE_2	IF_3
0x4004885	          0x4889e7	                            mov rdi, rsp	      3977	getchar.c	FUNCTION_72	ELSE_2	IF_3
0x4004888	      0xe800000000	                          call 0x400488d	      3977	getchar.c	FUNCTION_72	ELSE_2	IF_3
0x400488d	            0xeb99	                           jmp 0x4004828	      3977	getchar.c	FUNCTION_72	ELSE_2	IF_3
0x400488f	              0x90	                                     nop	      3977	getchar.c	FUNCTION_72	ELSE_2	IF_3
0x4004890	      0xbe6f000000	                           mov esi, 0x6f	      3988	getchar.c	FUNCTION_72	ELSE_5	CALL_8
0x4004895	          0x4889e7	                            mov rdi, rsp	      3988	getchar.c	FUNCTION_72	ELSE_5	CALL_8
0x4004898	      0xe800000000	                          call 0x400489d	      3988	getchar.c	FUNCTION_72	ELSE_5	CALL_8
0x400489d	      0xe954ffffff	                           jmp 0x40047f6	      3988	getchar.c	FUNCTION_72	ELSE_5	CALL_8
0x40048a2	    0x660f1f440000	                    nop word [rax + rax]	      3988	getchar.c	FUNCTION_72	ELSE_5	CALL_8
0x40048a8	      0xbe6e000000	                           mov esi, 0x6e	      3986	getchar.c	FUNCTION_72	ELSE_5	CALL_7
0x40048ad	          0x4889e7	                            mov rdi, rsp	      3986	getchar.c	FUNCTION_72	ELSE_5	CALL_7
0x40048b0	      0xe800000000	                          call 0x40048b5	      3986	getchar.c	FUNCTION_72	ELSE_5	CALL_7
0x40048b5	      0xe933ffffff	                           jmp 0x40047ed	      3986	getchar.c	FUNCTION_72	ELSE_5	CALL_7
0x40048ba	    0x660f1f440000	                    nop word [rax + rax]	      3986	getchar.c	FUNCTION_72	ELSE_5	CALL_7
0x40048c0	      0xbe78000000	                           mov esi, 0x78	      3994	getchar.c	FUNCTION_72	ELSE_5	ELSE_6	CALL_10
0x40048c5	          0x4889e7	                            mov rdi, rsp	      3994	getchar.c	FUNCTION_72	ELSE_5	ELSE_6	CALL_10
0x40048c8	      0xe800000000	                          call 0x40048cd	      3994	getchar.c	FUNCTION_72	ELSE_5	ELSE_6	CALL_10
0x40048cd	      0xe93fffffff	                           jmp 0x4004811	      3994	getchar.c	FUNCTION_72	ELSE_5	ELSE_6	CALL_10
0x40048d2	    0x660f1f440000	                    nop word [rax + rax]	      3994	getchar.c	FUNCTION_72	ELSE_5	ELSE_6	CALL_10
0x40048d8	      0xbe21000000	                           mov esi, 0x21	      3973	getchar.c	FUNCTION_72	CALL_2
0x40048dd	          0x4889e7	                            mov rdi, rsp	      3973	getchar.c	FUNCTION_72	CALL_2
0x40048e0	      0xe800000000	                          call 0x40048e5	      3973	getchar.c	FUNCTION_72	CALL_2
0x40048e5	      0xe93effffff	                           jmp 0x4004828	      3973	getchar.c	FUNCTION_72	CALL_2
0x40048ea	    0x660f1f440000	                    nop word [rax + rax]	      3973	getchar.c	FUNCTION_72	CALL_2
0x40048f0	      0xbe20000000	                           mov esi, 0x20	      3982	getchar.c	FUNCTION_72	ELSE_4	IF_5
0x40048f5	          0x4889e7	                            mov rdi, rsp	      3982	getchar.c	FUNCTION_72	ELSE_4	IF_5
0x40048f8	      0xe800000000	                          call 0x40048fd	      3982	getchar.c	FUNCTION_72	ELSE_4	IF_5
0x40048fd	      0xe926ffffff	                           jmp 0x4004828	      3982	getchar.c	FUNCTION_72	ELSE_4	IF_5
0x4004902	    0x660f1f440000	                    nop word [rax + rax]	      3982	getchar.c	FUNCTION_72	ELSE_4	IF_5
0x4004908	      0xbe76000000	                           mov esi, 0x76	      3990	getchar.c	FUNCTION_72	ELSE_5	CALL_9
0x400490d	          0x4889e7	                            mov rdi, rsp	      3990	getchar.c	FUNCTION_72	ELSE_5	CALL_9
0x4004910	      0xe800000000	                          call 0x4004915	      3990	getchar.c	FUNCTION_72	ELSE_5	CALL_9
0x4004915	      0xe90effffff	                           jmp 0x4004828	      3990	getchar.c	FUNCTION_72	ELSE_5	CALL_9
0x400491a	      0xe800000000	                          call 0x400491f	      4002	getchar.c	FUNCTION_72
do_map	WHILE,2:ELSE,20:IF,66:DO,0:CALL,67:functions,0:SWITCH,0:FOR,10	999
0x4004b20	            0x4157	                                push r15	      3210	getchar.c	FUNCTION_66
0x4004b22	            0x4156	                                push r14	      3210	getchar.c	FUNCTION_66
0x4004b24	          0x4189d7	                           mov r15d, edx	      3210	getchar.c	FUNCTION_66
0x4004b27	            0x4155	                                push r13	      3210	getchar.c	FUNCTION_66
0x4004b29	            0x4154	                                push r12	      3210	getchar.c	FUNCTION_66
0x4004b2b	    0x41be00000000	                             mov r14d, 0	      3210	getchar.c	FUNCTION_66
0x4004b31	              0x55	                                push rbp	      3210	getchar.c	FUNCTION_66
0x4004b32	              0x53	                                push rbx	      3210	getchar.c	FUNCTION_66
0x4004b33	      0xbd00000000	                              mov ebp, 0	      3210	getchar.c	FUNCTION_66
0x4004b38	      0xbb00000000	                              mov ebx, 0	      3210	getchar.c	FUNCTION_66
0x4004b3d	    0x41bc00000000	                             mov r12d, 0	      3210	getchar.c	FUNCTION_66
0x4004b43	    0x4881eca80000	                           sub rsp, 0xa8	      3210	getchar.c	FUNCTION_66
0x4004b4a	    0x64488b042528	                mov rax, qword fs:[0x28]	      3210	getchar.c	FUNCTION_66
0x4004b53	    0x488984249800	             mov qword [rsp + 0x98], rax	      3210	getchar.c	FUNCTION_66
0x4004b5b	            0x31c0	                            xor eax, eax	      3210	getchar.c	FUNCTION_66
0x4004b5d	            0x31c0	                            xor eax, eax	      3248	getchar.c	FUNCTION_66	IF_1
0x4004b5f	          0x83ff02	                              cmp edi, 2	      3248	getchar.c	FUNCTION_66	IF_1
0x4004b62	          0x893c24	                    mov dword [rsp], edi	      3210	getchar.c	FUNCTION_66
0x4004b65	           0xf94c0	                                 sete al	      3248	getchar.c	FUNCTION_66	IF_1
0x4004b68	        0x894c2438	             mov dword [rsp + 0x38], ecx	      3210	getchar.c	FUNCTION_66
0x4004b6c	    0x48c784248800	               mov qword [rsp + 0x88], 0	      3225	getchar.c	FUNCTION_66
0x4004b78	            0xf7d8	                                 neg eax	      3248	getchar.c	FUNCTION_66	IF_1
0x4004b7a	    0x48c784249000	               mov qword [rsp + 0x90], 0	      3226	getchar.c	FUNCTION_66
0x4004b86	    0xc74424740000	               mov dword [rsp + 0x74], 0	      3248	getchar.c	FUNCTION_66	IF_1
0x4004b8e	        0x89442470	             mov dword [rsp + 0x70], eax	      3248	getchar.c	FUNCTION_66	IF_1
0x4004b92	          0x4531ed	                          xor r13d, r13d	      3248	getchar.c	FUNCTION_66	IF_1
0x4004b95	    0xc74424640000	               mov dword [rsp + 0x64], 0	      3248	getchar.c	FUNCTION_66	IF_1
0x4004b9d	    0xc74424600000	               mov dword [rsp + 0x60], 0	      3248	getchar.c	FUNCTION_66	IF_1
0x4004ba5	    0xc744245c0000	               mov dword [rsp + 0x5c], 0	      3248	getchar.c	FUNCTION_66	IF_1
0x4004bad	          0x4889f0	                            mov rax, rsi	      3248	getchar.c	FUNCTION_66	IF_1
0x4004bb0	    0x48c744242800	               mov qword [rsp + 0x28], 0	      3248	getchar.c	FUNCTION_66	IF_1
0x4004bb9	    0x48c744245000	               mov qword [rsp + 0x50], 0	      3248	getchar.c	FUNCTION_66	IF_1
0x4004bc2	    0x660f1f440000	                    nop word [rax + rax]	      3248	getchar.c	FUNCTION_66	IF_1
0x4004bc8	      0xb908000000	                              mov ecx, 8	      3261	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_2	CALL_1
0x4004bcd	          0x4889c6	                            mov rsi, rax	      3261	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_2	CALL_1
0x4004bd0	          0x4889df	                            mov rdi, rbx	      3261	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_2	CALL_1
0x4004bd3	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3261	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_2	CALL_1
0x4004bd5	     0xf8445010000	                            je 0x4004d20	      3261	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_2	CALL_1
0x4004bdb	      0xb908000000	                              mov ecx, 8	      3273	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_3	CALL_3
0x4004be0	          0x4889c6	                            mov rsi, rax	      3273	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_3	CALL_3
0x4004be3	          0x4889ef	                            mov rdi, rbp	      3273	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_3	CALL_3
0x4004be6	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3273	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_3	CALL_3
0x4004be8	     0xf8462010000	                            je 0x4004d50	      3273	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_3	CALL_3
0x4004bee	      0xb908000000	                              mov ecx, 8	      3283	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_4	CALL_5
0x4004bf3	          0x4889c6	                            mov rsi, rax	      3283	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_4	CALL_5
0x4004bf6	          0x4c89e7	                            mov rdi, r12	      3283	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_4	CALL_5
0x4004bf9	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3283	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_4	CALL_5
0x4004bfb	     0xf8465010000	                            je 0x4004d66	      3283	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_4	CALL_5
0x4004c01	      0xb909000000	                              mov ecx, 9	      3293	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_5	CALL_7
0x4004c06	          0x4889c6	                            mov rsi, rax	      3293	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_5	CALL_7
0x4004c09	          0x4c89f7	                            mov rdi, r14	      3293	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_5	CALL_7
0x4004c0c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3293	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_5	CALL_7
0x4004c0e	     0xf84d0040000	                            je 0x40050e4	      3293	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_5	CALL_7
0x4004c14	      0xb908000000	                              mov ecx, 8	      3304	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_6	CALL_9
0x4004c19	          0x4889c6	                            mov rsi, rax	      3304	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_6	CALL_9
0x4004c1c	      0xbf00000000	                              mov edi, 0	      3304	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_6	CALL_9
0x4004c21	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3304	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_6	CALL_9
0x4004c23	     0xf84cf040000	                            je 0x40050f8	      3304	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_6	CALL_9
0x4004c29	      0xb906000000	                              mov ecx, 6	      3314	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_7	CALL_11
0x4004c2e	          0x4889c6	                            mov rsi, rax	      3314	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_7	CALL_11
0x4004c31	      0xbf00000000	                              mov edi, 0	      3314	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_7	CALL_11
0x4004c36	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3314	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_7	CALL_11
0x4004c38	     0xf84d0040000	                            je 0x400510e	      3314	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_7	CALL_11
0x4004c3e	      0xb908000000	                              mov ecx, 8	      3324	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_8	CALL_13
0x4004c43	          0x4889c6	                            mov rsi, rax	      3324	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_8	CALL_13
0x4004c46	      0xbf00000000	                              mov edi, 0	      3324	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_8	CALL_13
0x4004c4b	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      3324	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_8	CALL_13
0x4004c4d	     0xf84bb0b0000	                            je 0x400580e	      3324	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_8	CALL_13
0x4004c53	    0x8b3d00000000	            mov edi, dword [0x04004c59] 	      3802	getchar.c	FUNCTION_68	IF_1
0x4004c59	      0x4889442410	             mov qword [rsp + 0x10], rax	      3802	getchar.c	FUNCTION_68	IF_1
0x4004c5e	            0x85ff	                           test edi, edi	      3802	getchar.c	FUNCTION_68	IF_1
0x4004c60	     0xf84be0b0000	                            je 0x4005824	      3802	getchar.c	FUNCTION_68	IF_1
0x4004c66	    0x488b3d000000	            mov rdi, qword [0x04004c6d] 	      3341	getchar.c	FUNCTION_66	CALL_16
0x4004c6d	      0xbe42000000	                           mov esi, 0x42	      3341	getchar.c	FUNCTION_66	CALL_16
0x4004c72	      0xe800000000	                          call 0x4004c77	      3341	getchar.c	FUNCTION_66	CALL_16
0x4004c77	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3342	getchar.c	FUNCTION_66	WHILE_1	CALL_17
0x4004c7c	           0xfb616	                   movzx edx, byte [rsi]	      3342	getchar.c	FUNCTION_66	WHILE_1	CALL_17
0x4004c7f	          0x4889f7	                            mov rdi, rsi	      3342	getchar.c	FUNCTION_66	WHILE_1	CALL_17
0x4004c82	            0x84d2	                             test dl, dl	      3342	getchar.c	FUNCTION_66	WHILE_1	CALL_17
0x4004c84	     0xf849e040000	                            je 0x4005128	      3342	getchar.c	FUNCTION_66	WHILE_1	CALL_17
0x4004c8a	        0x833c2401	                      cmp dword [rsp], 1	      3342	getchar.c	FUNCTION_66	WHILE_1	CALL_17
0x4004c8e	            0x7463	                            je 0x4004cf3	      3342	getchar.c	FUNCTION_66	WHILE_1	CALL_17
0x4004c90	          0x80fa20	                            cmp dl, 0x20	      3342	getchar.c	FUNCTION_66	WHILE_1	CALL_17
0x4004c93	        0x400f95c6	                               setne sil	      3342	getchar.c	FUNCTION_66	WHILE_1	CALL_17
0x4004c97	          0x80fa09	                               cmp dl, 9	      3342	getchar.c	FUNCTION_66	WHILE_1	CALL_17
0x4004c9a	           0xf95c1	                                setne cl	      3342	getchar.c	FUNCTION_66	WHILE_1	CALL_17
0x4004c9d	          0x4020f1	                             and cl, sil	      3342	getchar.c	FUNCTION_66	WHILE_1	CALL_17
0x4004ca0	     0xf8408050000	                            je 0x40051ae	      3342	getchar.c	FUNCTION_66	WHILE_1	CALL_17
0x4004ca6	          0x80fa16	                            cmp dl, 0x16	      3344	getchar.c	FUNCTION_66	WHILE_1	IF_9
0x4004ca9	            0x7465	                            je 0x4004d10	      3344	getchar.c	FUNCTION_66	WHILE_1	IF_9
0x4004cab	          0x4885c0	                           test rax, rax	      3344	getchar.c	FUNCTION_66	WHILE_1	IF_9
0x4004cae	            0x7505	                           jne 0x4004cb5	      3344	getchar.c	FUNCTION_66	WHILE_1	IF_9
0x4004cb0	          0x80fa5c	                            cmp dl, 0x5c	      3344	getchar.c	FUNCTION_66	WHILE_1	IF_9
0x4004cb3	            0x745b	                            je 0x4004d10	      3344	getchar.c	FUNCTION_66	WHILE_1	IF_9
0x4004cb5	         0xfb65701	               movzx edx, byte [rdi + 1]	      3344	getchar.c	FUNCTION_66	WHILE_1	IF_9
0x4004cb9	          0x4889f9	                            mov rcx, rdi	      3344	getchar.c	FUNCTION_66	WHILE_1	IF_9
0x4004cbc	            0x84d2	                             test dl, dl	      3342	getchar.c	FUNCTION_66	WHILE_1	CALL_17
0x4004cbe	        0x488d7901	                      lea rdi, [rcx + 1]	      3347	getchar.c	FUNCTION_66	WHILE_1
0x4004cc2	            0x75cc	                           jne 0x4004c90	      3342	getchar.c	FUNCTION_66	WHILE_1	CALL_17
0x4004cc4	      0xe9b7000000	                           jmp 0x4004d80	      3342	getchar.c	FUNCTION_66	WHILE_1	CALL_17
0x4004cc9	     0xf1f80000000	                         nop dword [rax]	      3342	getchar.c	FUNCTION_66	WHILE_1	CALL_17
0x4004cd0	          0x4885c0	                           test rax, rax	      3344	getchar.c	FUNCTION_66	WHILE_1	IF_9
0x4004cd3	            0x7528	                           jne 0x4004cfd	      3344	getchar.c	FUNCTION_66	WHILE_1	IF_9
0x4004cd5	        0x807f0100	                   cmp byte [rdi + 1], 0	      3344	getchar.c	FUNCTION_66	WHILE_1	IF_9
0x4004cd9	     0xf8445040000	                            je 0x4005124	      3344	getchar.c	FUNCTION_66	WHILE_1	IF_9
0x4004cdf	         0xfb65702	               movzx edx, byte [rdi + 2]	      3344	getchar.c	FUNCTION_66	WHILE_1	IF_9
0x4004ce3	        0x488d4f01	                      lea rcx, [rdi + 1]	      3346	getchar.c	FUNCTION_66	WHILE_1	IF_9
0x4004ce7	            0x84d2	                             test dl, dl	      3342	getchar.c	FUNCTION_66	WHILE_1	CALL_17
0x4004ce9	        0x488d7901	                      lea rdi, [rcx + 1]	      3347	getchar.c	FUNCTION_66	WHILE_1
0x4004ced	     0xf8435040000	                            je 0x4005128	      3342	getchar.c	FUNCTION_66	WHILE_1	CALL_17
0x4004cf3	          0x80fa16	                            cmp dl, 0x16	      3344	getchar.c	FUNCTION_66	WHILE_1	IF_9
0x4004cf6	            0x74dd	                            je 0x4004cd5	      3344	getchar.c	FUNCTION_66	WHILE_1	IF_9
0x4004cf8	          0x80fa5c	                            cmp dl, 0x5c	      3344	getchar.c	FUNCTION_66	WHILE_1	IF_9
0x4004cfb	            0x74d3	                            je 0x4004cd0	      3344	getchar.c	FUNCTION_66	WHILE_1	IF_9
0x4004cfd	         0xfb65701	               movzx edx, byte [rdi + 1]	      3344	getchar.c	FUNCTION_66	WHILE_1	IF_9
0x4004d01	          0x4889f9	                            mov rcx, rdi	      3344	getchar.c	FUNCTION_66	WHILE_1	IF_9
0x4004d04	            0xebe1	                           jmp 0x4004ce7	      3344	getchar.c	FUNCTION_66	WHILE_1	IF_9
0x4004d06	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3344	getchar.c	FUNCTION_66	WHILE_1	IF_9
0x4004d10	        0x807f0100	                   cmp byte [rdi + 1], 0	      3344	getchar.c	FUNCTION_66	WHILE_1	IF_9
0x4004d14	            0x7466	                            je 0x4004d7c	      3344	getchar.c	FUNCTION_66	WHILE_1	IF_9
0x4004d16	        0x488d4f01	                      lea rcx, [rdi + 1]	      3346	getchar.c	FUNCTION_66	WHILE_1	IF_9
0x4004d1a	         0xfb65702	               movzx edx, byte [rdi + 2]	      3346	getchar.c	FUNCTION_66	WHILE_1	IF_9
0x4004d1e	            0xeb9c	                           jmp 0x4004cbc	      3346	getchar.c	FUNCTION_66	WHILE_1	IF_9
0x4004d20	        0x488d7808	                      lea rdi, [rax + 8]	      3263	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_2	CALL_2
0x4004d24	      0xe800000000	                          call 0x4004d29	      3263	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_2	CALL_2
0x4004d29	    0x488b15000000	            mov rdx, qword [0x04004d30] 	      3264	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_2
0x4004d30	    0x488db2c00900	                  lea rsi, [rdx + 0x9c0]	      3264	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_2
0x4004d37	    0x488d8ac01100	                 lea rcx, [rdx + 0x11c0]	      3265	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_2
0x4004d3e	      0x4889742428	             mov qword [rsp + 0x28], rsi	      3264	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_2
0x4004d43	      0x48894c2450	             mov qword [rsp + 0x50], rcx	      3265	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_2
0x4004d48	      0xe97bfeffff	                           jmp 0x4004bc8	      3266	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_2
0x4004d4d	           0xf1f00	                         nop dword [rax]	      3266	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_2
0x4004d50	        0x488d7808	                      lea rdi, [rax + 8]	      3275	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_3	CALL_4
0x4004d54	      0xe800000000	                          call 0x4004d59	      3275	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_3	CALL_4
0x4004d59	    0xc74424600100	               mov dword [rsp + 0x60], 1	      3276	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_3
0x4004d61	      0xe962feffff	                           jmp 0x4004bc8	      3277	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_3
0x4004d66	        0x488d7808	                      lea rdi, [rax + 8]	      3285	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_4	CALL_6
0x4004d6a	      0xe800000000	                          call 0x4004d6f	      3285	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_4	CALL_6
0x4004d6f	    0xc74424640100	               mov dword [rsp + 0x64], 1	      3286	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_4
0x4004d77	      0xe94cfeffff	                           jmp 0x4004bc8	      3287	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_4
0x4004d7c	        0x4883c701	                              add rdi, 1	      3347	getchar.c	FUNCTION_66	WHILE_1
0x4004d80	      0xe800000000	                          call 0x4004d85	      3352	getchar.c	FUNCTION_66	CALL_18
0x4004d85	      0x4889442468	             mov qword [rsp + 0x68], rax	      3352	getchar.c	FUNCTION_66	CALL_18
0x4004d8a	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3355	getchar.c	FUNCTION_66
0x4004d8f	      0xc644244800	                mov byte [rsp + 0x48], 0	      3358	getchar.c	FUNCTION_66	IF_11
0x4004d94	           0xfb600	                   movzx eax, byte [rax]	      3355	getchar.c	FUNCTION_66
0x4004d97	            0x84c0	                             test al, al	      3358	getchar.c	FUNCTION_66	IF_11
0x4004d99	       0xf94442423	                  sete byte [rsp + 0x23]	      3358	getchar.c	FUNCTION_66	IF_11
0x4004d9e	      0x488b4c2468	            mov rcx, qword [rsp + 0x68] 	      3354	getchar.c	FUNCTION_66
0x4004da3	           0xfb609	                   movzx ecx, byte [rcx]	      3354	getchar.c	FUNCTION_66
0x4004da6	            0x84c9	                             test cl, cl	      3354	getchar.c	FUNCTION_66
0x4004da8	        0x884c2449	               mov byte [rsp + 0x49], cl	      3354	getchar.c	FUNCTION_66
0x4004dac	        0x400f95c5	                               setne bpl	      3354	getchar.c	FUNCTION_66
0x4004db0	            0x84c0	                             test al, al	      3355	getchar.c	FUNCTION_66
0x4004db2	           0xf95c3	                                setne bl	      3355	getchar.c	FUNCTION_66
0x4004db5	            0x84db	                             test bl, bl	      3372	getchar.c	FUNCTION_66	IF_12
0x4004db7	     0xf852d040000	                           jne 0x40051ea	      3372	getchar.c	FUNCTION_66	IF_12
0x4004dbd	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      3372	getchar.c	FUNCTION_66	IF_12
0x4004dc2	          0x4084ed	                           test bpl, bpl	      3375	getchar.c	FUNCTION_66	IF_13
0x4004dc5	      0x4889442478	             mov qword [rsp + 0x78], rax	      3375	getchar.c	FUNCTION_66	IF_13
0x4004dca	            0x741e	                            je 0x4004dea	      3375	getchar.c	FUNCTION_66	IF_13
0x4004dcc	      0xbe00000000	                              mov esi, 0	      3377	getchar.c	FUNCTION_66	IF_13	IF_14	CALL_20
0x4004dd1	          0x4889c7	                            mov rdi, rax	      3377	getchar.c	FUNCTION_66	IF_13	IF_14	CALL_20
0x4004dd4	      0xe800000000	                          call 0x4004dd9	      3377	getchar.c	FUNCTION_66	IF_13	IF_14	CALL_20
0x4004dd9	            0x85c0	                           test eax, eax	      3377	getchar.c	FUNCTION_66	IF_13	IF_14	CALL_20
0x4004ddb	    0x48c744247800	               mov qword [rsp + 0x78], 0	      3378	getchar.c	FUNCTION_66	IF_13	IF_14
0x4004de4	     0xf85580a0000	                           jne 0x4005842	      3377	getchar.c	FUNCTION_66	IF_13	IF_14	CALL_20
0x4004dea	    0x8b3500000000	            mov esi, dword [0x04004df0] 	      3388	getchar.c	FUNCTION_66	IF_15
0x4004df0	            0x85f6	                           test esi, esi	      3388	getchar.c	FUNCTION_66	IF_15
0x4004df2	            0x7415	                            je 0x4004e09	      3388	getchar.c	FUNCTION_66	IF_15
0x4004df4	    0x488b05000000	            mov rax, qword [0x04004dfb] 	      3388	getchar.c	FUNCTION_66	IF_15
0x4004dfb	    0x8b8854020000	           mov ecx, dword [rax + 0x254] 	      3388	getchar.c	FUNCTION_66	IF_15
0x4004e01	            0x85c9	                           test ecx, ecx	      3388	getchar.c	FUNCTION_66	IF_15
0x4004e03	     0xf856d0a0000	                           jne 0x4005876	      3388	getchar.c	FUNCTION_66	IF_15
0x4004e09	            0x84db	                             test bl, bl	      3395	getchar.c	FUNCTION_66	IF_16
0x4004e0b	     0xf8415040000	                            je 0x4005226	      3395	getchar.c	FUNCTION_66	IF_16
0x4004e11	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      3397	getchar.c	FUNCTION_66	IF_16	CALL_23
0x4004e16	      0xe800000000	                          call 0x4004e1b	      3397	getchar.c	FUNCTION_66	IF_16	CALL_23
0x4004e1b	          0x83f832	                           cmp eax, 0x32	      3398	getchar.c	FUNCTION_66	IF_16	IF_17
0x4004e1e	          0x4989c4	                            mov r12, rax	      3397	getchar.c	FUNCTION_66	IF_16	CALL_23
0x4004e21	          0x4189c5	                           mov r13d, eax	      3397	getchar.c	FUNCTION_66	IF_16	CALL_23
0x4004e24	     0xf8f3a030000	                            jg 0x4005164	      3398	getchar.c	FUNCTION_66	IF_16	IF_17
0x4004e2a	        0x833c2401	                      cmp dword [rsp], 1	      3404	getchar.c	FUNCTION_66	IF_16	IF_18
0x4004e2e	        0x8b542438	            mov edx, dword [rsp + 0x38] 	      3404	getchar.c	FUNCTION_66	IF_16	IF_18
0x4004e32	         0xf950424	                        setne byte [rsp]	      3404	getchar.c	FUNCTION_66	IF_16	IF_18
0x4004e36	            0x85d2	                           test edx, edx	      3404	getchar.c	FUNCTION_66	IF_16	IF_18
0x4004e38	         0xfb60424	                   movzx eax, byte [rsp]	      3404	getchar.c	FUNCTION_66	IF_16	IF_18
0x4004e3c	     0xf8435010000	                            je 0x4004f77	      3404	getchar.c	FUNCTION_66	IF_16	IF_18
0x4004e42	            0x84c0	                             test al, al	      3404	getchar.c	FUNCTION_66	IF_16	IF_18
0x4004e44	     0xf842d010000	                            je 0x4004f77	      3404	getchar.c	FUNCTION_66	IF_16	IF_18
0x4004e4a	    0x8b0500000000	            mov eax, dword [0x04004e50] 	      3413	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19
0x4004e50	            0x85c0	                           test eax, eax	      3413	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19
0x4004e52	     0xf84560b0000	                            je 0x40059ae	      3413	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19
0x4004e58	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      3418	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	CALL_24
0x4004e5d	          0x4889df	                            mov rdi, rbx	      3418	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	CALL_24
0x4004e60	      0xe800000000	                          call 0x4004e65	      3418	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	CALL_24
0x4004e65	          0x4889df	                            mov rdi, rbx	      3420	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19
0x4004e68	        0x8944243c	             mov dword [rsp + 0x3c], eax	      3418	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	CALL_24
0x4004e6c	    0xff1500000000	                 call qword [0x04004e72]	      3420	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19
0x4004e72	          0x4863d0	                         movsxd rdx, eax	      3420	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19
0x4004e75	          0x4963c4	                        movsxd rax, r12d	      3422	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2
0x4004e78	          0x4889d9	                            mov rcx, rbx	      3420	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19
0x4004e7b	          0x4889c6	                            mov rsi, rax	      3422	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2
0x4004e7e	        0x488d1c13	                    lea rbx, [rbx + rdx]	      3420	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19
0x4004e82	    0xc7442418ffff	     mov dword [rsp + 0x18], 0xffffffff 	      3422	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2
0x4004e8a	          0x4801ce	                            add rsi, rcx	      3422	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2
0x4004e8d	    0xc74424080100	                  mov dword [rsp + 8], 1	      3422	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2
0x4004e95	          0x4839f3	                            cmp rbx, rsi	      3422	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2
0x4004e98	      0x4889742430	             mov qword [rsp + 0x30], rsi	      3422	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2
0x4004e9d	     0xf8383000000	                           jae 0x4004f26	      3422	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2
0x4004ea3	          0x4d89e6	                            mov r14, r12	      3422	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2
0x4004ea6	        0x8b442408	                mov eax, dword [rsp + 8]	      3422	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2
0x4004eaa	          0x4189ec	                           mov r12d, ebp	      3422	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2
0x4004ead	            0xeb08	                           jmp 0x4004eb7	      3422	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2
0x4004eaf	        0x8b442424	            mov eax, dword [rsp + 0x24] 	      3424	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2
0x4004eb3	        0x89442408	                mov dword [rsp + 8], eax	      3424	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2
0x4004eb7	          0x8d7001	                      lea esi, [rax + 1]	      3424	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2
0x4004eba	          0x4889df	                            mov rdi, rbx	      3425	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2	CALL_25
0x4004ebd	        0x89742424	             mov dword [rsp + 0x24], esi	      3424	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2
0x4004ec1	      0xe800000000	                          call 0x4004ec6	      3425	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2	CALL_25
0x4004ec6	            0x89c5	                            mov ebp, eax	      3425	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2	CALL_25
0x4004ec8	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      3426	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2	IF_20
0x4004ecc	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      3426	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2	IF_20
0x4004ecf	            0x750d	                           jne 0x4004ede	      3426	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2	IF_20
0x4004ed1	        0x396c243c	            cmp dword [rsp + 0x3c], ebp 	      3426	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2	IF_20
0x4004ed5	       0xf45442408	             cmovne eax, dword [rsp + 8]	      3426	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2	IF_20
0x4004eda	        0x89442418	             mov dword [rsp + 0x18], eax	      3426	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2	IF_20
0x4004ede	          0x4889df	                            mov rdi, rbx	      3428	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2
0x4004ee1	    0xff1500000000	                 call qword [0x04004ee7]	      3428	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2
0x4004ee7	            0x4898	                                    cdqe	      3428	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2
0x4004ee9	          0x4801c3	                            add rbx, rax	      3428	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2
0x4004eec	      0x48395c2430	            cmp qword [rsp + 0x30], rbx 	      3422	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2
0x4004ef1	            0x77bc	                            ja 0x4004eaf	      3422	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2
0x4004ef3	          0x4c89f0	                            mov rax, r14	      3422	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2
0x4004ef6	          0x4189ee	                           mov r14d, ebp	      3422	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2
0x4004ef9	          0x4489e5	                           mov ebp, r12d	      3422	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	WHILE_2
0x4004efc	          0x4585f6	                         test r14d, r14d	      3430	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	IF_21
0x4004eff	          0x4989c4	                            mov r12, rax	      3430	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	IF_21
0x4004f02	           0xf95c2	                                setne dl	      3430	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	IF_21
0x4004f05	      0x837c242402	               cmp dword [rsp + 0x24], 2	      3430	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	IF_21
0x4004f0a	           0xf9fc0	                                 setg al	      3430	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	IF_21
0x4004f0d	            0x84c2	                             test dl, al	      3430	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	IF_21
0x4004f0f	            0x7415	                            je 0x4004f26	      3430	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	IF_21
0x4004f11	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      3430	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	IF_21
0x4004f15	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      3430	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	IF_21
0x4004f18	            0x740c	                            je 0x4004f26	      3430	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	IF_21
0x4004f1a	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      3430	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	IF_21
0x4004f1e	            0x39c8	                            cmp eax, ecx	      3430	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	IF_21
0x4004f20	     0xf8c3e020000	                            jl 0x4005164	      3430	getchar.c	FUNCTION_66	IF_16	IF_18	IF_19	IF_21
0x4004f26	          0x4585e4	                         test r12d, r12d	      3446	getchar.c	FUNCTION_66	IF_16	IF_18	FOR_3
0x4004f29	            0x7e4c	                           jle 0x4004f77	      3446	getchar.c	FUNCTION_66	IF_16	IF_18	FOR_3
0x4004f2b	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3447	getchar.c	FUNCTION_66	IF_16	IF_18	FOR_3	IF_24	CALL_29
0x4004f30	           0xfb600	                   movzx eax, byte [rax]	      3447	getchar.c	FUNCTION_66	IF_16	IF_18	FOR_3	IF_24	CALL_29
0x4004f33	            0x3c09	                               cmp al, 9	      3447	getchar.c	FUNCTION_66	IF_16	IF_18	FOR_3	IF_24	CALL_29
0x4004f35	     0xf8429020000	                            je 0x4005164	      3447	getchar.c	FUNCTION_66	IF_16	IF_18	FOR_3	IF_24	CALL_29
0x4004f3b	            0x3c20	                            cmp al, 0x20	      3447	getchar.c	FUNCTION_66	IF_16	IF_18	FOR_3	IF_24	CALL_29
0x4004f3d	     0xf8421020000	                            je 0x4005164	      3447	getchar.c	FUNCTION_66	IF_16	IF_18	FOR_3	IF_24	CALL_29
0x4004f43	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	      3447	getchar.c	FUNCTION_66	IF_16	IF_18	FOR_3	IF_24	CALL_29
0x4004f48	      0x418d4c24ff	                      lea ecx, [r12 - 1]	      3447	getchar.c	FUNCTION_66	IF_16	IF_18	FOR_3	IF_24	CALL_29
0x4004f4d	          0x4889d8	                            mov rax, rbx	      3447	getchar.c	FUNCTION_66	IF_16	IF_18	FOR_3	IF_24	CALL_29
0x4004f50	          0x4801d9	                            add rcx, rbx	      3447	getchar.c	FUNCTION_66	IF_16	IF_18	FOR_3	IF_24	CALL_29
0x4004f53	            0xeb1d	                           jmp 0x4004f72	      3447	getchar.c	FUNCTION_66	IF_16	IF_18	FOR_3	IF_24	CALL_29
0x4004f55	           0xf1f00	                         nop dword [rax]	      3447	getchar.c	FUNCTION_66	IF_16	IF_18	FOR_3	IF_24	CALL_29
0x4004f58	         0xfb65001	               movzx edx, byte [rax + 1]	      3447	getchar.c	FUNCTION_66	IF_16	IF_18	FOR_3	IF_24	CALL_29
0x4004f5c	        0x4883c001	                              add rax, 1	      3447	getchar.c	FUNCTION_66	IF_16	IF_18	FOR_3	IF_24	CALL_29
0x4004f60	          0x80fa20	                            cmp dl, 0x20	      3447	getchar.c	FUNCTION_66	IF_16	IF_18	FOR_3	IF_24	CALL_29
0x4004f63	     0xf84fb010000	                            je 0x4005164	      3447	getchar.c	FUNCTION_66	IF_16	IF_18	FOR_3	IF_24	CALL_29
0x4004f69	          0x80fa09	                               cmp dl, 9	      3447	getchar.c	FUNCTION_66	IF_16	IF_18	FOR_3	IF_24	CALL_29
0x4004f6c	     0xf84f2010000	                            je 0x4005164	      3447	getchar.c	FUNCTION_66	IF_16	IF_18	FOR_3	IF_24	CALL_29
0x4004f72	          0x4839c1	                            cmp rcx, rax	      3446	getchar.c	FUNCTION_66	IF_16	IF_18	FOR_3
0x4004f75	            0x75e1	                           jne 0x4004f58	      3446	getchar.c	FUNCTION_66	IF_16	IF_18	FOR_3
0x4004f77	          0x4084ed	                           test bpl, bpl	      3455	getchar.c	FUNCTION_66	IF_25
0x4004f7a	     0xf84f50b0000	                            je 0x4005b75	      3455	getchar.c	FUNCTION_66	IF_25
0x4004f80	        0x8b442438	            mov eax, dword [rsp + 0x38] 	      3455	getchar.c	FUNCTION_66	IF_25
0x4004f84	            0x85c0	                           test eax, eax	      3455	getchar.c	FUNCTION_66	IF_25
0x4004f86	     0xf84b9020000	                            je 0x4005245	      3455	getchar.c	FUNCTION_66	IF_25
0x4004f8c	      0x807c244900	                cmp byte [rsp + 0x49], 0	      3459	getchar.c	FUNCTION_66	IF_26
0x4004f91	    0xc70500000000	               mov dword [0x04004f9b], 0	      3456	getchar.c	FUNCTION_66	IF_25
0x4004f9b	           0xf94c3	                                 sete bl	      3459	getchar.c	FUNCTION_66	IF_26
0x4004f9e	          0x221c24	                      and bl, byte [rsp]	      3459	getchar.c	FUNCTION_66	IF_26
0x4004fa1	     0xf84af020000	                            je 0x4005256	      3459	getchar.c	FUNCTION_66	IF_26
0x4004fa7	      0xe800000000	                          call 0x4004fac	      3460	getchar.c	FUNCTION_66	CALL_30
0x4004fac	    0x488b05000000	            mov rax, qword [0x04004fb3] 	      3466	getchar.c	FUNCTION_66	IF_27
0x4004fb3	    0x4805c0090000	                          add rax, 0x9c0	      3466	getchar.c	FUNCTION_66	IF_27
0x4004fb9	      0x4839442428	            cmp qword [rsp + 0x28], rax 	      3466	getchar.c	FUNCTION_66	IF_27
0x4004fbe	     0xf84c00a0000	                            je 0x4005a84	      3466	getchar.c	FUNCTION_66	IF_27
0x4004fc4	      0x807c244900	                cmp byte [rsp + 0x49], 0	      3503	getchar.c	FUNCTION_66	IF_32
0x4004fc9	     0xf859f020000	                           jne 0x400526e	      3503	getchar.c	FUNCTION_66	IF_32
0x4004fcf	            0x84db	                             test bl, bl	      3503	getchar.c	FUNCTION_66	IF_32
0x4004fd1	     0xf8497020000	                            je 0x400526e	      3503	getchar.c	FUNCTION_66	IF_32
0x4004fd7	    0x440fb6642423	          movzx r12d, byte [rsp + 0x23] 	      3503	getchar.c	FUNCTION_66	IF_32
0x4004fdd	      0xbd01000000	                              mov ebp, 1	      3503	getchar.c	FUNCTION_66	IF_32
0x4004fe2	    0xc744244c0000	               mov dword [rsp + 0x4c], 0	      3503	getchar.c	FUNCTION_66	IF_32
0x4004fea	    0x660f1f440000	                    nop word [rax + rax]	      3503	getchar.c	FUNCTION_66	IF_32
0x4004ff0	    0x8b1500000000	            mov edx, dword [0x04004ff6] 	      3506	getchar.c	FUNCTION_66	IF_32	FOR_6
0x4004ff6	          0x8d45ff	                      lea eax, [rbp - 1]	      3506	getchar.c	FUNCTION_66	IF_32	FOR_6
0x4004ff9	            0x85d2	                           test edx, edx	      3506	getchar.c	FUNCTION_66	IF_32	FOR_6
0x4004ffb	     0xf8575020000	                           jne 0x4005276	      3506	getchar.c	FUNCTION_66	IF_32	FOR_6
0x4005001	      0x448b5c2438	           mov r11d, dword [rsp + 0x38] 	      3508	getchar.c	FUNCTION_66	IF_32	FOR_6	IF_33
0x4005006	          0x4585db	                         test r11d, r11d	      3508	getchar.c	FUNCTION_66	IF_32	FOR_6	IF_33
0x4005009	     0xf8417090000	                            je 0x4005926	      3508	getchar.c	FUNCTION_66	IF_32	FOR_6	IF_33
0x400500f	            0x85c0	                           test eax, eax	      3510	getchar.c	FUNCTION_66	IF_32	FOR_6	IF_33	IF_34
0x4005011	     0xf855f020000	                           jne 0x4005276	      3510	getchar.c	FUNCTION_66	IF_32	FOR_6	IF_33	IF_34
0x4005017	    0x488b05000000	            mov rax, qword [0x0400501e] 	      3512	getchar.c	FUNCTION_66	IF_32	FOR_6	IF_33
0x400501e	    0x4c8bb0c01100	          mov r14, qword [rax + 0x11c0] 	      3512	getchar.c	FUNCTION_66	IF_32	FOR_6	IF_33
0x4005025	          0x4d85f6	                           test r14, r14	      3516	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7
0x4005028	            0x7536	                           jne 0x4005060	      3516	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7
0x400502a	      0xe9ad000000	                           jmp 0x40050dc	      3516	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7
0x400502f	              0x90	                                     nop	      3516	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7
0x4005030	        0x45396e20	           cmp dword [r14 + 0x20], r13d 	      3529	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7	IF_35	ELSE_7	IF_37	CALL_37
0x4005034	          0x4489ea	                           mov edx, r13d	      3529	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7	IF_35	ELSE_7	IF_37	CALL_37
0x4005037	        0x498b5e08	                mov rbx, qword [r14 + 8]	      3529	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7	IF_35	ELSE_7	IF_37	CALL_37
0x400503b	      0x410f4e5620	          cmovle edx, dword [r14 + 0x20]	      3529	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7	IF_35	ELSE_7	IF_37	CALL_37
0x4005040	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3529	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7	IF_35	ELSE_7	IF_37	CALL_37
0x4005045	          0x4889df	                            mov rdi, rbx	      3529	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7	IF_35	ELSE_7	IF_37	CALL_37
0x4005048	          0x4863d2	                         movsxd rdx, edx	      3529	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7	IF_35	ELSE_7	IF_37	CALL_37
0x400504b	      0xe800000000	                          call 0x4005050	      3529	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7	IF_35	ELSE_7	IF_37	CALL_37
0x4005050	            0x85c0	                           test eax, eax	      3529	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7	IF_35	ELSE_7	IF_37	CALL_37
0x4005052	     0xf84a8080000	                            je 0x4005900	      3529	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7	IF_35	ELSE_7	IF_37	CALL_37
0x4005058	          0x4d8b36	                    mov r14, qword [r14]	      3516	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7
0x400505b	          0x4d85f6	                           test r14, r14	      3516	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7
0x400505e	            0x7470	                            je 0x40050d0	      3516	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7
0x4005060	    0x8b0500000000	            mov eax, dword [0x04005066] 	      3516	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7
0x4005066	            0x85c0	                           test eax, eax	      3516	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7
0x4005068	            0x7566	                           jne 0x40050d0	      3516	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7
0x400506a	        0x45857e24	          test dword [r14 + 0x24], r15d 	      3519	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7	IF_35
0x400506e	            0x74e8	                            je 0x4005058	      3519	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7	IF_35
0x4005070	          0x4584e4	                         test r12b, r12b	      3521	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7	IF_35	IF_36
0x4005073	            0x74bb	                            je 0x4005030	      3521	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7	IF_35	IF_36
0x4005075	        0x498b7e08	                mov rdi, qword [r14 + 8]	      4012	getchar.c	FUNCTION_73	IF_1	CALL_2
0x4005079	      0xe800000000	                          call 0x400507e	      4012	getchar.c	FUNCTION_73	IF_1	CALL_2
0x400507e	            0x85c0	                           test eax, eax	      4012	getchar.c	FUNCTION_73	IF_1	CALL_2
0x4005080	     0xf858a080000	                           jne 0x4005910	      4012	getchar.c	FUNCTION_73	IF_1	CALL_2
0x4005086	    0x448b15000000	           mov r10d, dword [0x0400508d] 	      4015	getchar.c	FUNCTION_73	IF_2
0x400508d	          0x4585d2	                         test r10d, r10d	      4015	getchar.c	FUNCTION_73	IF_2
0x4005090	            0x750c	                           jne 0x400509e	      4015	getchar.c	FUNCTION_73	IF_2
0x4005092	    0x448b0d000000	            mov r9d, dword [0x04005099] 	      4015	getchar.c	FUNCTION_73	IF_2
0x4005099	          0x4585c9	                           test r9d, r9d	      4015	getchar.c	FUNCTION_73	IF_2
0x400509c	            0x7414	                            je 0x40050b2	      4015	getchar.c	FUNCTION_73	IF_2
0x400509e	      0xbf0a000000	                            mov edi, 0xa	      4017	getchar.c	FUNCTION_73	IF_2	CALL_3
0x40050a3	      0xe800000000	                          call 0x40050a8	      4017	getchar.c	FUNCTION_73	IF_2	CALL_3
0x40050a8	    0x8b0500000000	            mov eax, dword [0x040050ae] 	      4018	getchar.c	FUNCTION_73	IF_2	IF_3
0x40050ae	            0x85c0	                           test eax, eax	      4018	getchar.c	FUNCTION_73	IF_2	IF_3
0x40050b0	            0x750d	                           jne 0x40050bf	      4018	getchar.c	FUNCTION_73	IF_2	IF_3
0x40050b2	      0xbe01000000	                              mov esi, 1	      4018	getchar.c	FUNCTION_73	IF_2	IF_3
0x40050b7	          0x4c89f7	                            mov rdi, r14	      4018	getchar.c	FUNCTION_73	IF_2	IF_3
0x40050ba	      0xe861f8ffff	                call sym.showmap.part.11	      4018	getchar.c	FUNCTION_73	IF_2	IF_3
0x40050bf	          0x4d8b36	                    mov r14, qword [r14]	      3516	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7
0x40050c2	    0xc744244c0100	               mov dword [rsp + 0x4c], 1	      3533	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7	IF_35	ELSE_7	IF_37
0x40050ca	          0x4d85f6	                           test r14, r14	      3516	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7
0x40050cd	            0x7591	                           jne 0x4005060	      3516	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7
0x40050cf	              0x90	                                     nop	      3516	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7
0x40050d0	    0x81fd00010000	                          cmp ebp, 0x100	      3506	getchar.c	FUNCTION_66	IF_32	FOR_6
0x40050d6	     0xf849a010000	                            je 0x4005276	      3506	getchar.c	FUNCTION_66	IF_32	FOR_6
0x40050dc	          0x83c501	                              add ebp, 1	      3506	getchar.c	FUNCTION_66	IF_32	FOR_6
0x40050df	      0xe90cffffff	                           jmp 0x4004ff0	      3506	getchar.c	FUNCTION_66	IF_32	FOR_6
0x40050e4	        0x488d7809	                      lea rdi, [rax + 9]	      3295	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_5	CALL_8
0x40050e8	    0x41bd01000000	                             mov r13d, 1	      3296	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_5
0x40050ee	      0xe800000000	                          call 0x40050f3	      3295	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_5	CALL_8
0x40050f3	      0xe9d0faffff	                           jmp 0x4004bc8	      3297	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_5
0x40050f8	        0x488d7808	                      lea rdi, [rax + 8]	      3306	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_6	CALL_10
0x40050fc	      0xe800000000	                          call 0x4005101	      3306	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_6	CALL_10
0x4005101	    0xc7442470feff	     mov dword [rsp + 0x70], 0xfffffffe 	      3307	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_6
0x4005109	      0xe9bafaffff	                           jmp 0x4004bc8	      3308	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_6
0x400510e	        0x488d7806	                      lea rdi, [rax + 6]	      3316	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_7	CALL_12
0x4005112	      0xe800000000	                          call 0x4005117	      3316	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_7	CALL_12
0x4005117	    0xc74424740100	               mov dword [rsp + 0x74], 1	      3317	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_7
0x400511f	      0xe9a4faffff	                           jmp 0x4004bc8	      3318	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_7
0x4005124	        0x4883c701	                              add rdi, 1	      3347	getchar.c	FUNCTION_66	WHILE_1
0x4005128	      0xe800000000	                          call 0x400512d	      3352	getchar.c	FUNCTION_66	CALL_18
0x400512d	        0x833c2401	                      cmp dword [rsp], 1	      3358	getchar.c	FUNCTION_66	IF_11
0x4005131	      0x4889442468	             mov qword [rsp + 0x68], rax	      3352	getchar.c	FUNCTION_66	CALL_18
0x4005136	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3355	getchar.c	FUNCTION_66
0x400513b	           0xfb600	                   movzx eax, byte [rax]	      3355	getchar.c	FUNCTION_66
0x400513e	       0xf94442448	                  sete byte [rsp + 0x48]	      3358	getchar.c	FUNCTION_66	IF_11
0x4005143	       0xfb64c2448	           movzx ecx, byte [rsp + 0x48] 	      3358	getchar.c	FUNCTION_66	IF_11
0x4005148	            0x84c0	                             test al, al	      3358	getchar.c	FUNCTION_66	IF_11
0x400514a	       0xf94442423	                  sete byte [rsp + 0x23]	      3358	getchar.c	FUNCTION_66	IF_11
0x400514f	            0x84c9	                             test cl, cl	      3358	getchar.c	FUNCTION_66	IF_11
0x4005151	       0xfb65c2423	           movzx ebx, byte [rsp + 0x23] 	      3358	getchar.c	FUNCTION_66	IF_11
0x4005156	     0xf8442fcffff	                            je 0x4004d9e	      3358	getchar.c	FUNCTION_66	IF_11
0x400515c	            0x84db	                             test bl, bl	      3358	getchar.c	FUNCTION_66	IF_11
0x400515e	     0xf843afcffff	                            je 0x4004d9e	      3358	getchar.c	FUNCTION_66	IF_11
0x4005164	      0xbb01000000	                              mov ebx, 1	      3360	getchar.c	FUNCTION_66	IF_11
0x4005169	    0x488bbc248800	            mov rdi, qword [rsp + 0x88] 	      3774	getchar.c	FUNCTION_66	CALL_66
0x4005171	      0xe800000000	                          call 0x4005176	      3774	getchar.c	FUNCTION_66	CALL_66
0x4005176	    0x488bbc249000	            mov rdi, qword [rsp + 0x90] 	      3775	getchar.c	FUNCTION_66	CALL_67
0x400517e	      0xe800000000	                          call 0x4005183	      3775	getchar.c	FUNCTION_66	CALL_67
0x4005183	            0x89d8	                            mov eax, ebx	      3777	getchar.c	FUNCTION_66
0x4005185	    0x488b9c249800	            mov rbx, qword [rsp + 0x98] 	      3777	getchar.c	FUNCTION_66
0x400518d	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      3777	getchar.c	FUNCTION_66
0x4005196	     0xf85e2090000	                           jne 0x4005b7e	      3777	getchar.c	FUNCTION_66
0x400519c	    0x4881c4a80000	                           add rsp, 0xa8	      3777	getchar.c	FUNCTION_66
0x40051a3	              0x5b	                                 pop rbx	      3777	getchar.c	FUNCTION_66
0x40051a4	              0x5d	                                 pop rbp	      3777	getchar.c	FUNCTION_66
0x40051a5	            0x415c	                                 pop r12	      3777	getchar.c	FUNCTION_66
0x40051a7	            0x415d	                                 pop r13	      3777	getchar.c	FUNCTION_66
0x40051a9	            0x415e	                                 pop r14	      3777	getchar.c	FUNCTION_66
0x40051ab	            0x415f	                                 pop r15	      3777	getchar.c	FUNCTION_66
0x40051ad	              0xc3	                                     ret	      3777	getchar.c	FUNCTION_66
0x40051ae	          0xc60700	                       mov byte [rdi], 0	      3350	getchar.c	FUNCTION_66	IF_10
0x40051b1	        0x4883c701	                              add rdi, 1	      3352	getchar.c	FUNCTION_66	CALL_18
0x40051b5	        0x884c2448	               mov byte [rsp + 0x48], cl	      3352	getchar.c	FUNCTION_66	CALL_18
0x40051b9	      0xe800000000	                          call 0x40051be	      3352	getchar.c	FUNCTION_66	CALL_18
0x40051be	      0x4889442468	             mov qword [rsp + 0x68], rax	      3352	getchar.c	FUNCTION_66	CALL_18
0x40051c3	           0xfb600	                   movzx eax, byte [rax]	      3354	getchar.c	FUNCTION_66
0x40051c6	            0x84c0	                             test al, al	      3354	getchar.c	FUNCTION_66
0x40051c8	        0x88442449	               mov byte [rsp + 0x49], al	      3354	getchar.c	FUNCTION_66
0x40051cc	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3355	getchar.c	FUNCTION_66
0x40051d1	        0x400f95c5	                               setne bpl	      3354	getchar.c	FUNCTION_66
0x40051d5	           0xfb600	                   movzx eax, byte [rax]	      3355	getchar.c	FUNCTION_66
0x40051d8	            0x84c0	                             test al, al	      3355	getchar.c	FUNCTION_66
0x40051da	           0xf95c3	                                setne bl	      3355	getchar.c	FUNCTION_66
0x40051dd	       0xf94442423	                  sete byte [rsp + 0x23]	      3358	getchar.c	FUNCTION_66	IF_11
0x40051e2	            0x84db	                             test bl, bl	      3372	getchar.c	FUNCTION_66	IF_12
0x40051e4	     0xf84d3fbffff	                            je 0x4004dbd	      3372	getchar.c	FUNCTION_66	IF_12
0x40051ea	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      3373	getchar.c	FUNCTION_66	CALL_19
0x40051ef	    0x488db4248800	                   lea rsi, [rsp + 0x88]	      3373	getchar.c	FUNCTION_66	CALL_19
0x40051f7	          0x4589e8	                           mov r8d, r13d	      3373	getchar.c	FUNCTION_66	CALL_19
0x40051fa	      0xb901000000	                              mov ecx, 1	      3373	getchar.c	FUNCTION_66	CALL_19
0x40051ff	      0xba01000000	                              mov edx, 1	      3373	getchar.c	FUNCTION_66	CALL_19
0x4005204	      0xe800000000	                          call 0x4005209	      3373	getchar.c	FUNCTION_66	CALL_19
0x4005209	      0x4889442410	             mov qword [rsp + 0x10], rax	      3373	getchar.c	FUNCTION_66	CALL_19
0x400520e	      0x488b442468	            mov rax, qword [rsp + 0x68] 	      3373	getchar.c	FUNCTION_66	CALL_19
0x4005213	          0x4084ed	                           test bpl, bpl	      3375	getchar.c	FUNCTION_66	IF_13
0x4005216	      0x4889442478	             mov qword [rsp + 0x78], rax	      3375	getchar.c	FUNCTION_66	IF_13
0x400521b	     0xf84c9fbffff	                            je 0x4004dea	      3375	getchar.c	FUNCTION_66	IF_13
0x4005221	      0xe9a6fbffff	                           jmp 0x4004dcc	      3375	getchar.c	FUNCTION_66	IF_13
0x4005226	        0x833c2401	                      cmp dword [rsp], 1	      3375	getchar.c	FUNCTION_66	IF_13
0x400522a	           0xf95c3	                                setne bl	      3375	getchar.c	FUNCTION_66	IF_13
0x400522d	          0x4531ed	                          xor r13d, r13d	      3216	getchar.c	FUNCTION_66
0x4005230	            0x31ed	                            xor ebp, ebp	      3216	getchar.c	FUNCTION_66
0x4005232	      0x807c242300	                cmp byte [rsp + 0x23], 0	      3459	getchar.c	FUNCTION_66	IF_26
0x4005237	     0xf856afdffff	                           jne 0x4004fa7	      3459	getchar.c	FUNCTION_66	IF_26
0x400523d	       0xfb66c2423	           movzx ebp, byte [rsp + 0x23] 	      3459	getchar.c	FUNCTION_66	IF_26
0x4005242	          0x881c24	                      mov byte [rsp], bl	      3459	getchar.c	FUNCTION_66	IF_26
0x4005245	      0x807c244900	                cmp byte [rsp + 0x49], 0	      3459	getchar.c	FUNCTION_66	IF_26
0x400524a	           0xf94c3	                                 sete bl	      3459	getchar.c	FUNCTION_66	IF_26
0x400524d	          0x221c24	                      and bl, byte [rsp]	      3459	getchar.c	FUNCTION_66	IF_26
0x4005250	     0xf8551fdffff	                           jne 0x4004fa7	      3459	getchar.c	FUNCTION_66	IF_26
0x4005256	    0x488b05000000	            mov rax, qword [0x0400525d] 	      3466	getchar.c	FUNCTION_66	IF_27
0x400525d	    0x4805c0090000	                          add rax, 0x9c0	      3466	getchar.c	FUNCTION_66	IF_27
0x4005263	      0x4839442428	            cmp qword [rsp + 0x28], rax 	      3466	getchar.c	FUNCTION_66	IF_27
0x4005268	     0xf8412080000	                            je 0x4005a80	      3466	getchar.c	FUNCTION_66	IF_27
0x400526e	    0xc744244c0000	               mov dword [rsp + 0x4c], 0	      3222	getchar.c	FUNCTION_66
0x4005276	    0x8b0500000000	            mov eax, dword [0x0400527c] 	      3551	getchar.c	FUNCTION_66	FOR_8
0x400527c	            0x85c0	                           test eax, eax	      3551	getchar.c	FUNCTION_66	FOR_8
0x400527e	     0xf85bc030000	                           jne 0x4005640	      3551	getchar.c	FUNCTION_66	FOR_8
0x4005284	          0x4489f8	                           mov eax, r15d	      3632	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15
0x4005287	      0xc644244a00	                mov byte [rsp + 0x4a], 0	      3551	getchar.c	FUNCTION_66	FOR_8
0x400528c	    0xc74424180000	               mov dword [rsp + 0x18], 0	      3551	getchar.c	FUNCTION_66	FOR_8
0x4005294	            0xf7d0	                                 not eax	      3632	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15
0x4005296	      0x44896c2408	               mov dword [rsp + 8], r13d	      3632	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15
0x400529b	        0x89442458	             mov dword [rsp + 0x58], eax	      3632	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15
0x400529f	              0x90	                                     nop	      3632	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15
0x40052a0	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      3632	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15
0x40052a5	    0xc74424300100	               mov dword [rsp + 0x30], 1	      3551	getchar.c	FUNCTION_66	FOR_8
0x40052ad	    0xc74424240000	               mov dword [rsp + 0x24], 0	      3551	getchar.c	FUNCTION_66	FOR_8
0x40052b5	      0x4889442440	             mov qword [rsp + 0x40], rax	      3551	getchar.c	FUNCTION_66	FOR_8
0x40052ba	       0xfb644244a	           movzx eax, byte [rsp + 0x4a] 	      3597	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44	IF_45
0x40052bf	          0x83e001	                              and eax, 1	      3597	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44	IF_45
0x40052c2	        0x8844244b	               mov byte [rsp + 0x4b], al	      3597	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44	IF_45
0x40052c6	        0x8b442430	            mov eax, dword [rsp + 0x30] 	      3597	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44	IF_45
0x40052ca	          0x83e801	                              sub eax, 1	      3597	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44	IF_45
0x40052cd	        0x8944243c	             mov dword [rsp + 0x3c], eax	      3597	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44	IF_45
0x40052d1	    0x8b0500000000	            mov eax, dword [0x040052d7] 	      3554	getchar.c	FUNCTION_66	FOR_8	FOR_9
0x40052d7	            0x85c0	                           test eax, eax	      3554	getchar.c	FUNCTION_66	FOR_8	FOR_9
0x40052d9	     0xf8519030000	                           jne 0x40055f8	      3554	getchar.c	FUNCTION_66	FOR_8	FOR_9
0x40052df	      0x448b442438	            mov r8d, dword [rsp + 0x38] 	      3556	getchar.c	FUNCTION_66	FOR_8	FOR_9	IF_38
0x40052e4	          0x4585c0	                           test r8d, r8d	      3556	getchar.c	FUNCTION_66	FOR_8	FOR_9	IF_38
0x40052e7	     0xf84e3020000	                            je 0x40055d0	      3556	getchar.c	FUNCTION_66	FOR_8	FOR_9	IF_38
0x40052ed	        0x8b7c243c	            mov edi, dword [rsp + 0x3c] 	      3558	getchar.c	FUNCTION_66	FOR_8	FOR_9	IF_38	IF_39
0x40052f1	            0x85ff	                           test edi, edi	      3558	getchar.c	FUNCTION_66	FOR_8	FOR_9	IF_38	IF_39
0x40052f3	     0xf85ff020000	                           jne 0x40055f8	      3558	getchar.c	FUNCTION_66	FOR_8	FOR_9	IF_38	IF_39
0x40052f9	      0x488b442450	            mov rax, qword [rsp + 0x50] 	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x40052fe	          0x4c8b30	                    mov r14, qword [rax]	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x4005301	          0x4989c5	                            mov r13, rax	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x4005304	          0x4d85f6	                           test r14, r14	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x4005307	     0xf84f1010000	                            je 0x40054fe	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x400530d	    0x8b0500000000	            mov eax, dword [0x04005313] 	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x4005313	            0x85c0	                           test eax, eax	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x4005315	     0xf85d5010000	                           jne 0x40054f0	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x400531b	          0x4c89f0	                            mov rax, r14	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x400531e	          0x4d89ee	                            mov r14, r13	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x4005321	          0x4989c5	                            mov r13, rax	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x4005324	            0xeb77	                           jmp 0x400539d	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x4005326	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x4005330	        0x498b5d10	            mov rbx, qword [r13 + 0x10] 	      3581	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_42	CALL_40
0x4005334	          0x4889df	                            mov rdi, rbx	      3581	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_42	CALL_40
0x4005337	      0xe800000000	                          call 0x400533c	      3581	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_42	CALL_40
0x400533c	          0x4863e8	                         movsxd rbp, eax	      3581	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_42	CALL_40
0x400533f	        0x8b442408	                mov eax, dword [rsp + 8]	      3589	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	CALL_41
0x4005343	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3589	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	CALL_41
0x4005348	          0x4889df	                            mov rdi, rbx	      3589	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	CALL_41
0x400534b	            0x39c5	                            cmp ebp, eax	      3589	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	CALL_41
0x400534d	          0x4863d0	                         movsxd rdx, eax	      3589	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	CALL_41
0x4005350	        0x480f4ed5	                         cmovle rdx, rbp	      3589	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	CALL_41
0x4005354	      0xe800000000	                          call 0x4005359	      3589	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	CALL_41
0x4005359	            0x85c0	                           test eax, eax	      3589	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	CALL_41
0x400535b	            0x7523	                           jne 0x4005380	      3589	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	CALL_41
0x400535d	      0x807c244800	                cmp byte [rsp + 0x48], 0	      3591	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44
0x4005362	     0xf85d0000000	                           jne 0x4005438	      3591	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44
0x4005368	      0x807c244900	                cmp byte [rsp + 0x49], 0	      3610	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_11	IF_46
0x400536d	     0xf84bd010000	                            je 0x4005530	      3610	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_11	IF_46
0x4005373	        0x3b6c2408	                cmp ebp, dword [rsp + 8]	      3615	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_12	IF_47
0x4005377	     0xf84d3030000	                            je 0x4005750	      3615	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_12	IF_47
0x400537d	           0xf1f00	                         nop dword [rax]	      3615	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_12	IF_47
0x4005380	          0x4d89ee	                            mov r14, r13	      3676	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x4005383	          0x4d8b2e	                    mov r13, qword [r14]	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x4005386	          0x4d85ed	                           test r13, r13	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x4005389	     0xf8461010000	                            je 0x40054f0	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x400538f	    0x8b0500000000	            mov eax, dword [0x04005395] 	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x4005395	            0x85c0	                           test eax, eax	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x4005397	     0xf8553010000	                           jne 0x40054f0	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x400539d	        0x458b6524	           mov r12d, dword [r13 + 0x24] 	      3567	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	IF_40
0x40053a1	          0x4585e7	                         test r15d, r12d	      3567	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	IF_40
0x40053a4	            0x74da	                            je 0x4005380	      3567	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	IF_40
0x40053a6	      0x807c242300	                cmp byte [rsp + 0x23], 0	      3572	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	IF_41
0x40053ab	            0x7523	                           jne 0x40053d0	      3572	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	IF_41
0x40053ad	        0x8b542418	            mov edx, dword [rsp + 0x18] 	      3579	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_42
0x40053b1	        0x498b4508	                mov rax, qword [r13 + 8]	      3587	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	ELSE_10
0x40053b5	            0x85d2	                           test edx, edx	      3579	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_42
0x40053b7	        0x48890424	                    mov qword [rsp], rax	      3587	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	ELSE_10
0x40053bb	     0xf856fffffff	                           jne 0x4005330	      3579	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_42
0x40053c1	          0x4889c3	                            mov rbx, rax	      3579	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_42
0x40053c4	        0x49636d20	         movsxd rbp, dword [r13 + 0x20] 	      3586	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	ELSE_10
0x40053c8	      0xe972ffffff	                           jmp 0x400533f	      3586	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	ELSE_10
0x40053cd	           0xf1f00	                         nop dword [rax]	      3586	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	ELSE_10
0x40053d0	        0x498b7d08	                mov rdi, qword [r13 + 8]	      4012	getchar.c	FUNCTION_73	IF_1	CALL_2
0x40053d4	      0xe800000000	                          call 0x40053d9	      4012	getchar.c	FUNCTION_73	IF_1	CALL_2
0x40053d9	            0x85c0	                           test eax, eax	      4012	getchar.c	FUNCTION_73	IF_1	CALL_2
0x40053db	     0xf852f010000	                           jne 0x4005510	      4012	getchar.c	FUNCTION_73	IF_1	CALL_2
0x40053e1	    0x8b3500000000	            mov esi, dword [0x040053e7] 	      4015	getchar.c	FUNCTION_73	IF_2
0x40053e7	            0x85f6	                           test esi, esi	      4015	getchar.c	FUNCTION_73	IF_2
0x40053e9	            0x750a	                           jne 0x40053f5	      4015	getchar.c	FUNCTION_73	IF_2
0x40053eb	    0x8b0d00000000	            mov ecx, dword [0x040053f1] 	      4015	getchar.c	FUNCTION_73	IF_2
0x40053f1	            0x85c9	                           test ecx, ecx	      4015	getchar.c	FUNCTION_73	IF_2
0x40053f3	            0x7418	                            je 0x400540d	      4015	getchar.c	FUNCTION_73	IF_2
0x40053f5	      0xbf0a000000	                            mov edi, 0xa	      4017	getchar.c	FUNCTION_73	IF_2	CALL_3
0x40053fa	      0xe800000000	                          call 0x40053ff	      4017	getchar.c	FUNCTION_73	IF_2	CALL_3
0x40053ff	    0x8b0500000000	            mov eax, dword [0x04005405] 	      4018	getchar.c	FUNCTION_73	IF_2	IF_3
0x4005405	            0x85c0	                           test eax, eax	      4018	getchar.c	FUNCTION_73	IF_2	IF_3
0x4005407	     0xf8514010000	                           jne 0x4005521	      4018	getchar.c	FUNCTION_73	IF_2	IF_3
0x400540d	            0x31f6	                            xor esi, esi	      4018	getchar.c	FUNCTION_73	IF_2	IF_3
0x400540f	    0x48817c242800	               cmp qword [rsp + 0x28], 0	      4018	getchar.c	FUNCTION_73	IF_2	IF_3
0x4005418	          0x4c89ef	                            mov rdi, r13	      4018	getchar.c	FUNCTION_73	IF_2	IF_3
0x400541b	        0x400f95c6	                               setne sil	      4018	getchar.c	FUNCTION_73	IF_2	IF_3
0x400541f	      0xe8fcf4ffff	                call sym.showmap.part.11	      4018	getchar.c	FUNCTION_73	IF_2	IF_3
0x4005424	    0xc74424240100	               mov dword [rsp + 0x24], 1	      3575	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	IF_41
0x400542c	      0xe94fffffff	                           jmp 0x4005380	      3575	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	IF_41
0x4005431	     0xf1f80000000	                         nop dword [rax]	      3575	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	IF_41
0x4005438	        0x8b4c2408	                mov ecx, dword [rsp + 8]	      3597	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44	IF_45
0x400543c	            0x39cd	                            cmp ebp, ecx	      3597	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44	IF_45
0x400543e	            0x7440	                            je 0x4005480	      3597	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44	IF_45
0x4005440	      0x448b642438	           mov r12d, dword [rsp + 0x38] 	      3597	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44	IF_45
0x4005445	          0x4585e4	                         test r12d, r12d	      3597	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44	IF_45
0x4005448	           0xf94c0	                                 sete al	      3597	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44	IF_45
0x400544b	         0xa44244b	                or al, byte [rsp + 0x4b]	      3597	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44	IF_45
0x400544f	     0xf852bffffff	                           jne 0x4005380	      3597	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44	IF_45
0x4005455	            0x39cd	                            cmp ebp, ecx	      3597	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44	IF_45
0x4005457	     0xf8f23ffffff	                            jg 0x4005380	      3597	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44	IF_45
0x400545d	          0x4863fd	                         movsxd rdi, ebp	      3598	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44	IF_45	CALL_42
0x4005460	      0x48037c2410	             add rdi, qword [rsp + 0x10]	      3598	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44	IF_45	CALL_42
0x4005465	      0xe800000000	                          call 0x400546a	      3598	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44	IF_45	CALL_42
0x400546a	          0x803800	                       cmp byte [rax], 0	      3598	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44	IF_45	CALL_42
0x400546d	     0xf850dffffff	                           jne 0x4005380	      3598	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44	IF_45	CALL_42
0x4005473	        0x458b6524	           mov r12d, dword [r13 + 0x24] 	      3598	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44	IF_45	CALL_42
0x4005477	    0x660f1f840000	                    nop word [rax + rax]	      3598	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44	IF_45	CALL_42
0x4005480	      0x448b442458	            mov r8d, dword [rsp + 0x58] 	      3607	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44
0x4005485	    0xc74424240100	               mov dword [rsp + 0x24], 1	      3608	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44
0x400548d	          0x4521e0	                           and r8d, r12d	      3607	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44
0x4005490	        0x45894524	             mov dword [r13 + 0x24], r8d	      3607	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_44
0x4005494	          0x4585c0	                           test r8d, r8d	      3656	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_52
0x4005497	     0xf84fa000000	                            je 0x4005597	      3656	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_52
0x400549d	    0x4181e0073000	                         and r8d, 0x3007	      3665	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43
0x40054a4	        0x498b4508	                mov rax, qword [r13 + 8]	      3665	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43
0x40054a8	     0xf848a020000	                            je 0x4005738	      3665	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43
0x40054ae	           0xfb600	                   movzx eax, byte [rax]	      3665	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43
0x40054b1	      0x448b442438	            mov r8d, dword [rsp + 0x38] 	      3666	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_53
0x40054b6	          0x4585c0	                           test r8d, r8d	      3666	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_53
0x40054b9	     0xf85c1feffff	                           jne 0x4005380	      3666	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_53
0x40054bf	        0x3b44243c	            cmp eax, dword [rsp + 0x3c] 	      3666	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_53
0x40054c3	     0xf84b7feffff	                            je 0x4005380	      3666	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_53
0x40054c9	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      3669	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_53
0x40054ce	        0x498b5500	                    mov rdx, qword [r13]	      3668	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_53
0x40054d2	        0x488d04c1	                  lea rax, [rcx + rax*8]	      3669	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_53
0x40054d6	          0x498916	                    mov qword [r14], rdx	      3668	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_53
0x40054d9	          0x488b10	                    mov rdx, qword [rax]	      3669	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_53
0x40054dc	        0x49895500	                    mov qword [r13], rdx	      3669	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_53
0x40054e0	          0x4c8928	                    mov qword [rax], r13	      3670	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_53
0x40054e3	          0x4d8b2e	                    mov r13, qword [r14]	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x40054e6	          0x4d85ed	                           test r13, r13	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x40054e9	     0xf85a0feffff	                           jne 0x400538f	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x40054ef	              0x90	                                     nop	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x40054f0	    0x817c24300001	          cmp dword [rsp + 0x30], 0x100 	      3554	getchar.c	FUNCTION_66	FOR_8	FOR_9
0x40054f8	     0xf84fa000000	                            je 0x40055f8	      3554	getchar.c	FUNCTION_66	FOR_8	FOR_9
0x40054fe	      0x8344243001	               add dword [rsp + 0x30], 1	      3554	getchar.c	FUNCTION_66	FOR_8	FOR_9
0x4005503	    0x488344244008	               add qword [rsp + 0x40], 8	      3554	getchar.c	FUNCTION_66	FOR_8	FOR_9
0x4005509	      0xe9b8fdffff	                           jmp 0x40052c6	      3554	getchar.c	FUNCTION_66	FOR_8	FOR_9
0x400550e	            0x6690	                                     nop	      3554	getchar.c	FUNCTION_66	FOR_8	FOR_9
0x4005510	        0x498b7d10	            mov rdi, qword [r13 + 0x10] 	      4012	getchar.c	FUNCTION_73	IF_1	CALL_2
0x4005514	      0xe800000000	                          call 0x4005519	      4012	getchar.c	FUNCTION_73	IF_1	CALL_2
0x4005519	            0x85c0	                           test eax, eax	      4012	getchar.c	FUNCTION_73	IF_1	CALL_2
0x400551b	     0xf84c0feffff	                            je 0x40053e1	      4012	getchar.c	FUNCTION_73	IF_1	CALL_2
0x4005521	    0xc74424240100	               mov dword [rsp + 0x24], 1	      3575	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	IF_41
0x4005529	      0xe952feffff	                           jmp 0x4005380	      3575	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	IF_41
0x400552e	            0x6690	                                     nop	      3575	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	IF_41
0x4005530	        0x488b3c24	                    mov rdi, qword [rsp]	      4012	getchar.c	FUNCTION_73	IF_1	CALL_2
0x4005534	      0xe800000000	                          call 0x4005539	      4012	getchar.c	FUNCTION_73	IF_1	CALL_2
0x4005539	            0x85c0	                           test eax, eax	      4012	getchar.c	FUNCTION_73	IF_1	CALL_2
0x400553b	     0xf85b7020000	                           jne 0x40057f8	      4012	getchar.c	FUNCTION_73	IF_1	CALL_2
0x4005541	    0x8b1d00000000	            mov ebx, dword [0x04005547] 	      4015	getchar.c	FUNCTION_73	IF_2
0x4005547	            0x85db	                           test ebx, ebx	      4015	getchar.c	FUNCTION_73	IF_2
0x4005549	            0x750c	                           jne 0x4005557	      4015	getchar.c	FUNCTION_73	IF_2
0x400554b	    0x448b1d000000	           mov r11d, dword [0x04005552] 	      4015	getchar.c	FUNCTION_73	IF_2
0x4005552	          0x4585db	                         test r11d, r11d	      4015	getchar.c	FUNCTION_73	IF_2
0x4005555	            0x7414	                            je 0x400556b	      4015	getchar.c	FUNCTION_73	IF_2
0x4005557	      0xbf0a000000	                            mov edi, 0xa	      4017	getchar.c	FUNCTION_73	IF_2	CALL_3
0x400555c	      0xe800000000	                          call 0x4005561	      4017	getchar.c	FUNCTION_73	IF_2	CALL_3
0x4005561	    0x8b0500000000	            mov eax, dword [0x04005567] 	      4018	getchar.c	FUNCTION_73	IF_2	IF_3
0x4005567	            0x85c0	                           test eax, eax	      4018	getchar.c	FUNCTION_73	IF_2	IF_3
0x4005569	            0x7517	                           jne 0x4005582	      4018	getchar.c	FUNCTION_73	IF_2	IF_3
0x400556b	            0x31f6	                            xor esi, esi	      4018	getchar.c	FUNCTION_73	IF_2	IF_3
0x400556d	    0x48817c242800	               cmp qword [rsp + 0x28], 0	      4018	getchar.c	FUNCTION_73	IF_2	IF_3
0x4005576	          0x4c89ef	                            mov rdi, r13	      4018	getchar.c	FUNCTION_73	IF_2	IF_3
0x4005579	        0x400f95c6	                               setne sil	      4018	getchar.c	FUNCTION_73	IF_2	IF_3
0x400557d	      0xe89ef3ffff	                call sym.showmap.part.11	      4018	getchar.c	FUNCTION_73	IF_2	IF_3
0x4005582	        0x458b4524	            mov r8d, dword [r13 + 0x24] 	      4018	getchar.c	FUNCTION_73	IF_2	IF_3
0x4005586	    0xc74424240100	               mov dword [rsp + 0x24], 1	      3613	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_11	IF_46
0x400558e	          0x4585c0	                           test r8d, r8d	      3656	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_52
0x4005591	     0xf8506ffffff	                           jne 0x400549d	      3656	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_52
0x4005597	          0x498b1e	                    mov rbx, qword [r14]	      3788	getchar.c	FUNCTION_67
0x400559a	        0x488b7b08	                mov rdi, qword [rbx + 8]	      3789	getchar.c	FUNCTION_67	CALL_1
0x400559e	      0xe800000000	                          call 0x40055a3	      3789	getchar.c	FUNCTION_67	CALL_1
0x40055a3	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3790	getchar.c	FUNCTION_67	CALL_2
0x40055a7	      0xe800000000	                          call 0x40055ac	      3790	getchar.c	FUNCTION_67	CALL_2
0x40055ac	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      3791	getchar.c	FUNCTION_67	CALL_3
0x40055b0	      0xe800000000	                          call 0x40055b5	      3791	getchar.c	FUNCTION_67	CALL_3
0x40055b5	          0x488b03	                    mov rax, qword [rbx]	      3792	getchar.c	FUNCTION_67
0x40055b8	          0x4889df	                            mov rdi, rbx	      3793	getchar.c	FUNCTION_67	CALL_4
0x40055bb	          0x498906	                    mov qword [r14], rax	      3792	getchar.c	FUNCTION_67
0x40055be	      0xe800000000	                          call 0x40055c3	      3793	getchar.c	FUNCTION_67	CALL_4
0x40055c3	      0xe9bbfdffff	                           jmp 0x4005383	      3659	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_52
0x40055c8	     0xf1f84000000	                   nop dword [rax + rax]	      3659	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	IF_52
0x40055d0	      0x488b442440	            mov rax, qword [rsp + 0x40] 	      3563	getchar.c	FUNCTION_66	FOR_8	FOR_9	ELSE_8
0x40055d5	          0x4c8b30	                    mov r14, qword [rax]	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x40055d8	          0x4989c5	                            mov r13, rax	      3563	getchar.c	FUNCTION_66	FOR_8	FOR_9	ELSE_8
0x40055db	          0x4d85f6	                           test r14, r14	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x40055de	     0xf8529fdffff	                           jne 0x400530d	      3564	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10
0x40055e4	    0x817c24300001	          cmp dword [rsp + 0x30], 0x100 	      3554	getchar.c	FUNCTION_66	FOR_8	FOR_9
0x40055ec	     0xf850cffffff	                           jne 0x40054fe	      3554	getchar.c	FUNCTION_66	FOR_8	FOR_9
0x40055f2	    0x660f1f440000	                    nop word [rax + rax]	      3554	getchar.c	FUNCTION_66	FOR_8	FOR_9
0x40055f8	      0x8344241801	               add dword [rsp + 0x18], 1	      3551	getchar.c	FUNCTION_66	FOR_8
0x40055fd	      0x807c244800	                cmp byte [rsp + 0x48], 0	      3550	getchar.c	FUNCTION_66	FOR_8
0x4005602	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      3551	getchar.c	FUNCTION_66	FOR_8
0x4005606	     0xf8479030000	                            je 0x4005985	      3550	getchar.c	FUNCTION_66	FOR_8
0x400560c	          0x83f801	                              cmp eax, 1	      3551	getchar.c	FUNCTION_66	FOR_8
0x400560f	     0xf8f65030000	                            jg 0x400597a	      3551	getchar.c	FUNCTION_66	FOR_8
0x4005615	        0x8b7c2424	            mov edi, dword [rsp + 0x24] 	      3551	getchar.c	FUNCTION_66	FOR_8
0x4005619	            0x85ff	                           test edi, edi	      3551	getchar.c	FUNCTION_66	FOR_8
0x400561b	     0xf8559030000	                           jne 0x400597a	      3551	getchar.c	FUNCTION_66	FOR_8
0x4005621	      0x8044244a01	                add byte [rsp + 0x4a], 1	      3551	getchar.c	FUNCTION_66	FOR_8
0x4005626	    0x8b0500000000	            mov eax, dword [0x0400562c] 	      3551	getchar.c	FUNCTION_66	FOR_8
0x400562c	       0xfb64c244a	           movzx ecx, byte [rsp + 0x4a] 	      3551	getchar.c	FUNCTION_66	FOR_8
0x4005631	          0x83e101	                              and ecx, 1	      3551	getchar.c	FUNCTION_66	FOR_8
0x4005634	            0x85c0	                           test eax, eax	      3551	getchar.c	FUNCTION_66	FOR_8
0x4005636	        0x884c244a	               mov byte [rsp + 0x4a], cl	      3551	getchar.c	FUNCTION_66	FOR_8
0x400563a	     0xf8460fcffff	                            je 0x40052a0	      3551	getchar.c	FUNCTION_66	FOR_8
0x4005640	      0x807c244800	                cmp byte [rsp + 0x48], 0	      3681	getchar.c	FUNCTION_66	IF_54
0x4005645	     0xf85e5030000	                           jne 0x4005a30	      3681	getchar.c	FUNCTION_66	IF_54
0x400564b	      0x807c244900	                cmp byte [rsp + 0x49], 0	      3698	getchar.c	FUNCTION_66	ELSE_17	IF_58
0x4005650	     0xf8460020000	                            je 0x40058b6	      3698	getchar.c	FUNCTION_66	ELSE_17	IF_58
0x4005656	      0x807c242300	                cmp byte [rsp + 0x23], 0	      3698	getchar.c	FUNCTION_66	ELSE_17	IF_58
0x400565b	     0xf8555020000	                           jne 0x40058b6	      3698	getchar.c	FUNCTION_66	ELSE_17	IF_58
0x4005661	      0xbf38000000	                           mov edi, 0x38	      3720	getchar.c	FUNCTION_66	CALL_57
0x4005666	      0xe800000000	                          call 0x400566b	      3720	getchar.c	FUNCTION_66	CALL_57
0x400566b	          0x4885c0	                           test rax, rax	      3721	getchar.c	FUNCTION_66	IF_62
0x400566e	          0x4889c3	                            mov rbx, rax	      3720	getchar.c	FUNCTION_66	CALL_57
0x4005671	     0xf8435020000	                            je 0x40058ac	      3721	getchar.c	FUNCTION_66	IF_62
0x4005677	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3728	getchar.c	FUNCTION_66	IF_63
0x400567c	          0x803803	                       cmp byte [rax], 3	      3728	getchar.c	FUNCTION_66	IF_63
0x400567f	     0xf8434050000	                            je 0x4005bb9	      3728	getchar.c	FUNCTION_66	IF_63
0x4005685	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      3738	getchar.c	FUNCTION_66	CALL_58
0x400568a	      0xe800000000	                          call 0x400568f	      3738	getchar.c	FUNCTION_66	CALL_58
0x400568f	      0x488b7c2478	            mov rdi, qword [rsp + 0x78] 	      3739	getchar.c	FUNCTION_66	CALL_59
0x4005694	        0x48894308	                mov qword [rbx + 8], rax	      3738	getchar.c	FUNCTION_66	CALL_58
0x4005698	      0xe800000000	                          call 0x400569d	      3739	getchar.c	FUNCTION_66	CALL_59
0x400569d	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      3740	getchar.c	FUNCTION_66	CALL_60
0x40056a2	        0x48894310	             mov qword [rbx + 0x10], rax	      3739	getchar.c	FUNCTION_66	CALL_59
0x40056a6	      0xe800000000	                          call 0x40056ab	      3740	getchar.c	FUNCTION_66	CALL_60
0x40056ab	        0x488b6b08	                mov rbp, qword [rbx + 8]	      3741	getchar.c	FUNCTION_66	IF_65
0x40056af	        0x48894318	             mov qword [rbx + 0x18], rax	      3740	getchar.c	FUNCTION_66	CALL_60
0x40056b3	          0x4885ed	                           test rbp, rbp	      3741	getchar.c	FUNCTION_66	IF_65
0x40056b6	          0x4889ef	                            mov rdi, rbp	      3743	getchar.c	FUNCTION_66	IF_65	CALL_61
0x40056b9	     0xf84ce010000	                            je 0x400588d	      3741	getchar.c	FUNCTION_66	IF_65
0x40056bf	      0x48837b1000	               cmp qword [rbx + 0x10], 0	      3741	getchar.c	FUNCTION_66	IF_65
0x40056c4	     0xf84c3010000	                            je 0x400588d	      3741	getchar.c	FUNCTION_66	IF_65
0x40056ca	      0xe800000000	                          call 0x40056cf	      3750	getchar.c	FUNCTION_66	CALL_65
0x40056cf	          0x894320	             mov dword [rbx + 0x20], eax	      3750	getchar.c	FUNCTION_66	CALL_65
0x40056d2	        0x8b442470	            mov eax, dword [rsp + 0x70] 	      3751	getchar.c	FUNCTION_66
0x40056d6	        0x44897b24	            mov dword [rbx + 0x24], r15d	      3754	getchar.c	FUNCTION_66
0x40056da	          0x894328	             mov dword [rbx + 0x28], eax	      3751	getchar.c	FUNCTION_66
0x40056dd	       0xfb6442460	           movzx eax, byte [rsp + 0x60] 	      3752	getchar.c	FUNCTION_66
0x40056e2	          0x88432d	               mov byte [rbx + 0x2d], al	      3752	getchar.c	FUNCTION_66
0x40056e5	       0xfb6442464	           movzx eax, byte [rsp + 0x64] 	      3753	getchar.c	FUNCTION_66
0x40056ea	          0x88432c	               mov byte [rbx + 0x2c], al	      3753	getchar.c	FUNCTION_66
0x40056ed	       0xfb6442474	           movzx eax, byte [rsp + 0x74] 	      3756	getchar.c	FUNCTION_66
0x40056f2	          0x88432e	               mov byte [rbx + 0x2e], al	      3756	getchar.c	FUNCTION_66
0x40056f5	    0x8b0500000000	            mov eax, dword [0x040056fb] 	      3757	getchar.c	FUNCTION_66
0x40056fb	          0x894330	             mov dword [rbx + 0x30], eax	      3757	getchar.c	FUNCTION_66
0x40056fe	        0x8b442438	            mov eax, dword [rsp + 0x38] 	      3761	getchar.c	FUNCTION_66	IF_66
0x4005702	            0x85c0	                           test eax, eax	      3761	getchar.c	FUNCTION_66	IF_66
0x4005704	     0xf859a040000	                           jne 0x4005ba4	      3761	getchar.c	FUNCTION_66	IF_66
0x400570a	    0x4181e7073000	                        and r15d, 0x3007	      3768	getchar.c	FUNCTION_66	ELSE_20
0x4005711	     0xf847e040000	                            je 0x4005b95	      3768	getchar.c	FUNCTION_66	ELSE_20
0x4005717	         0xfb64500	                   movzx eax, byte [rbp]	      3768	getchar.c	FUNCTION_66	ELSE_20
0x400571b	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      3769	getchar.c	FUNCTION_66	ELSE_20
0x4005720	        0x488d04c6	                  lea rax, [rsi + rax*8]	      3769	getchar.c	FUNCTION_66	ELSE_20
0x4005724	          0x488b10	                    mov rdx, qword [rax]	      3769	getchar.c	FUNCTION_66	ELSE_20
0x4005727	          0x488913	                    mov qword [rbx], rdx	      3769	getchar.c	FUNCTION_66	ELSE_20
0x400572a	          0x488918	                    mov qword [rax], rbx	      3770	getchar.c	FUNCTION_66	ELSE_20
0x400572d	            0x31db	                            xor ebx, ebx	      3227	getchar.c	FUNCTION_66
0x400572f	      0xe935faffff	                           jmp 0x4005169	      3227	getchar.c	FUNCTION_66
0x4005734	         0xf1f4000	                         nop dword [rax]	      3227	getchar.c	FUNCTION_66
0x4005738	           0xfb600	                   movzx eax, byte [rax]	      3665	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43
0x400573b	          0x83c080	             add eax, 0xffffffffffffff80	      3665	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43
0x400573e	           0xfb6c0	                           movzx eax, al	      3665	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43
0x4005741	      0xe96bfdffff	                           jmp 0x40054b1	      3665	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43
0x4005746	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3665	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43
0x4005750	      0x448b54245c	           mov r10d, dword [rsp + 0x5c] 	      3620	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_13	IF_48
0x4005755	          0x4585d2	                         test r10d, r10d	      3620	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_13	IF_48
0x4005758	     0xf85e7010000	                           jne 0x4005945	      3620	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_13	IF_48
0x400575e	      0x448b442458	            mov r8d, dword [rsp + 0x58] 	      3632	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15
0x4005763	        0x8b442424	            mov eax, dword [rsp + 0x24] 	      3633	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50
0x4005767	          0x4521e0	                           and r8d, r12d	      3632	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15
0x400576a	          0x4409c0	                             or eax, r8d	      3633	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50
0x400576d	        0x45894524	             mov dword [r13 + 0x24], r8d	      3632	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15
0x4005771	     0xf851dfdffff	                           jne 0x4005494	      3633	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50
0x4005777	      0x488b7c2478	            mov rdi, qword [rsp + 0x78] 	      3635	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50	CALL_48
0x400577c	      0xe800000000	                          call 0x4005781	      3635	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50	CALL_48
0x4005781	          0x4885c0	                           test rax, rax	      3636	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50	IF_51
0x4005784	          0x4889c3	                            mov rbx, rax	      3635	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50	CALL_48
0x4005787	     0xf841f010000	                            je 0x40058ac	      3636	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50	IF_51
0x400578d	        0x498b7d10	            mov rdi, qword [r13 + 0x10] 	      3641	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50	CALL_49
0x4005791	      0xe800000000	                          call 0x4005796	      3641	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50	CALL_49
0x4005796	        0x498b7d18	            mov rdi, qword [r13 + 0x18] 	      3643	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50	CALL_50
0x400579a	        0x49895d10	             mov qword [r13 + 0x10], rbx	      3642	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50
0x400579e	      0xe800000000	                          call 0x40057a3	      3643	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50	CALL_50
0x40057a3	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      3644	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50	CALL_51
0x40057a8	      0xe800000000	                          call 0x40057ad	      3644	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50	CALL_51
0x40057ad	        0x49894518	             mov qword [r13 + 0x18], rax	      3644	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50	CALL_51
0x40057b1	        0x8b442470	            mov eax, dword [rsp + 0x70] 	      3645	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50
0x40057b5	          0x4589f8	                           mov r8d, r15d	      3651	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50
0x40057b8	        0x45897d24	            mov dword [r13 + 0x24], r15d	      3648	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50
0x40057bc	    0xc74424240100	               mov dword [rsp + 0x24], 1	      3653	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50
0x40057c4	        0x41894528	             mov dword [r13 + 0x28], eax	      3645	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50
0x40057c8	       0xfb6442460	           movzx eax, byte [rsp + 0x60] 	      3646	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50
0x40057cd	        0x4188452d	               mov byte [r13 + 0x2d], al	      3646	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50
0x40057d1	       0xfb6442464	           movzx eax, byte [rsp + 0x64] 	      3647	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50
0x40057d6	        0x4188452c	               mov byte [r13 + 0x2c], al	      3647	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50
0x40057da	       0xfb6442474	           movzx eax, byte [rsp + 0x74] 	      3650	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50
0x40057df	        0x4188452e	               mov byte [r13 + 0x2e], al	      3650	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50
0x40057e3	    0x8b0500000000	            mov eax, dword [0x040057e9] 	      3651	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50
0x40057e9	        0x41894530	             mov dword [r13 + 0x30], eax	      3651	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50
0x40057ed	      0xe9abfcffff	                           jmp 0x400549d	      3651	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50
0x40057f2	    0x660f1f440000	                    nop word [rax + rax]	      3651	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_15	IF_50
0x40057f8	        0x498b7d10	            mov rdi, qword [r13 + 0x10] 	      4012	getchar.c	FUNCTION_73	IF_1	CALL_2
0x40057fc	      0xe800000000	                          call 0x4005801	      4012	getchar.c	FUNCTION_73	IF_1	CALL_2
0x4005801	            0x85c0	                           test eax, eax	      4012	getchar.c	FUNCTION_73	IF_1	CALL_2
0x4005803	     0xf8438fdffff	                            je 0x4005541	      4012	getchar.c	FUNCTION_73	IF_1	CALL_2
0x4005809	      0xe974fdffff	                           jmp 0x4005582	      4012	getchar.c	FUNCTION_73	IF_1	CALL_2
0x400580e	        0x488d7808	                      lea rdi, [rax + 8]	      3326	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_8	CALL_14
0x4005812	      0xe800000000	                          call 0x4005817	      3326	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_8	CALL_14
0x4005817	    0xc744245c0100	               mov dword [rsp + 0x5c], 1	      3327	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_8
0x400581f	      0xe9a4f3ffff	                           jmp 0x4004bc8	      3328	getchar.c	FUNCTION_66	ELSE_1	FOR_1	IF_8
0x4005824	      0xb900010000	                          mov ecx, 0x100	        90	string3.h	FUNCTION_108	CALL_6
0x4005829	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_108	CALL_6
0x400582b	      0xbf00000000	                              mov edi, 0	        90	string3.h	FUNCTION_108	CALL_6
0x4005830	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_108	CALL_6
0x4005833	    0xc70500000000	               mov dword [0x0400583d], 1	      3805	getchar.c	FUNCTION_68	IF_1
0x400583d	      0xe924f4ffff	                           jmp 0x4004c66	      3805	getchar.c	FUNCTION_68	IF_1
0x4005842	      0x488b7c2468	            mov rdi, qword [rsp + 0x68] 	      3380	getchar.c	FUNCTION_66	IF_13	CALL_21
0x4005847	    0x488db4249000	                   lea rsi, [rsp + 0x90]	      3380	getchar.c	FUNCTION_66	IF_13	CALL_21
0x400584f	            0x31d2	                            xor edx, edx	      3380	getchar.c	FUNCTION_66	IF_13	CALL_21
0x4005851	          0x4589e8	                           mov r8d, r13d	      3380	getchar.c	FUNCTION_66	IF_13	CALL_21
0x4005854	      0xb901000000	                              mov ecx, 1	      3380	getchar.c	FUNCTION_66	IF_13	CALL_21
0x4005859	      0xe800000000	                          call 0x400585e	      3380	getchar.c	FUNCTION_66	IF_13	CALL_21
0x400585e	    0x8b3500000000	            mov esi, dword [0x04005864] 	      3388	getchar.c	FUNCTION_66	IF_15
0x4005864	      0x4889442478	             mov qword [rsp + 0x78], rax	      3380	getchar.c	FUNCTION_66	IF_13	CALL_21
0x4005869	            0x85f6	                           test esi, esi	      3388	getchar.c	FUNCTION_66	IF_15
0x400586b	     0xf8498f5ffff	                            je 0x4004e09	      3388	getchar.c	FUNCTION_66	IF_15
0x4005871	      0xe97ef5ffff	                           jmp 0x4004df4	      3388	getchar.c	FUNCTION_66	IF_15
0x4005876	      0x488b7c2478	            mov rdi, qword [rsp + 0x78] 	      3389	getchar.c	FUNCTION_66	CALL_22
0x400587b	      0xe800000000	                          call 0x4005880	      3389	getchar.c	FUNCTION_66	CALL_22
0x4005880	            0x84db	                             test bl, bl	      3395	getchar.c	FUNCTION_66	IF_16
0x4005882	     0xf849ef9ffff	                            je 0x4005226	      3395	getchar.c	FUNCTION_66	IF_16
0x4005888	      0xe984f5ffff	                           jmp 0x4004e11	      3395	getchar.c	FUNCTION_66	IF_16
0x400588d	      0xe800000000	                          call 0x4005892	      3743	getchar.c	FUNCTION_66	IF_65	CALL_61
0x4005892	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3744	getchar.c	FUNCTION_66	IF_65	CALL_62
0x4005896	      0xe800000000	                          call 0x400589b	      3744	getchar.c	FUNCTION_66	IF_65	CALL_62
0x400589b	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      3745	getchar.c	FUNCTION_66	IF_65	CALL_63
0x400589f	      0xe800000000	                          call 0x40058a4	      3745	getchar.c	FUNCTION_66	IF_65	CALL_63
0x40058a4	          0x4889df	                            mov rdi, rbx	      3746	getchar.c	FUNCTION_66	IF_65	CALL_64
0x40058a7	      0xe800000000	                          call 0x40058ac	      3746	getchar.c	FUNCTION_66	IF_65	CALL_64
0x40058ac	      0xbb04000000	                              mov ebx, 4	      3747	getchar.c	FUNCTION_66	IF_65
0x40058b1	      0xe9b3f8ffff	                           jmp 0x4005169	      3748	getchar.c	FUNCTION_66	IF_65
0x40058b6	    0xc74424240000	               mov dword [rsp + 0x24], 0	      3698	getchar.c	FUNCTION_66	ELSE_17	IF_58
0x40058be	        0x8b44244c	            mov eax, dword [rsp + 0x4c] 	      3700	getchar.c	FUNCTION_66	ELSE_17	IF_58	IF_59
0x40058c2	         0xb442424	              or eax, dword [rsp + 0x24]	      3700	getchar.c	FUNCTION_66	ELSE_17	IF_58	IF_59
0x40058c6	     0xf8561feffff	                           jne 0x400572d	      3700	getchar.c	FUNCTION_66	ELSE_17	IF_58	IF_59
0x40058cc	        0x8b4c2438	            mov ecx, dword [rsp + 0x38] 	      3706	getchar.c	FUNCTION_66	ELSE_17	IF_58	IF_59	IF_60
0x40058d0	      0xba05000000	                              mov edx, 5	      3707	getchar.c	FUNCTION_66	ELSE_17	IF_58	IF_59	CALL_54
0x40058d5	      0xbe00000000	                              mov esi, 0	      3707	getchar.c	FUNCTION_66	ELSE_17	IF_58	IF_59	CALL_54
0x40058da	            0x85c9	                           test ecx, ecx	      3706	getchar.c	FUNCTION_66	ELSE_17	IF_58	IF_59	IF_60
0x40058dc	            0x7505	                           jne 0x40058e3	      3706	getchar.c	FUNCTION_66	ELSE_17	IF_58	IF_59	IF_60
0x40058de	      0xbe00000000	                              mov esi, 0	      3709	getchar.c	FUNCTION_66	ELSE_17	IF_58	IF_59	CALL_56
0x40058e3	            0x31ff	                            xor edi, edi	      3709	getchar.c	FUNCTION_66	ELSE_17	IF_58	IF_59	CALL_56
0x40058e5	            0x31db	                            xor ebx, ebx	      3227	getchar.c	FUNCTION_66
0x40058e7	      0xe800000000	                          call 0x40058ec	      3709	getchar.c	FUNCTION_66	ELSE_17	IF_58	IF_59	CALL_56
0x40058ec	          0x4889c7	                            mov rdi, rax	      3709	getchar.c	FUNCTION_66	ELSE_17	IF_58	IF_59	CALL_56
0x40058ef	      0xe800000000	                          call 0x40058f4	      3709	getchar.c	FUNCTION_66	ELSE_17	IF_58	IF_59	CALL_56
0x40058f4	      0xe970f8ffff	                           jmp 0x4005169	      3709	getchar.c	FUNCTION_66	ELSE_17	IF_58	IF_59	CALL_56
0x40058f9	     0xf1f80000000	                         nop dword [rax]	      3709	getchar.c	FUNCTION_66	ELSE_17	IF_58	IF_59	CALL_56
0x4005900	          0x4889df	                            mov rdi, rbx	      4012	getchar.c	FUNCTION_73	IF_1	CALL_2
0x4005903	      0xe800000000	                          call 0x4005908	      4012	getchar.c	FUNCTION_73	IF_1	CALL_2
0x4005908	            0x85c0	                           test eax, eax	      4012	getchar.c	FUNCTION_73	IF_1	CALL_2
0x400590a	     0xf8476f7ffff	                            je 0x4005086	      4012	getchar.c	FUNCTION_73	IF_1	CALL_2
0x4005910	        0x498b7e10	            mov rdi, qword [r14 + 0x10] 	      4012	getchar.c	FUNCTION_73	IF_1	CALL_2
0x4005914	      0xe800000000	                          call 0x4005919	      4012	getchar.c	FUNCTION_73	IF_1	CALL_2
0x4005919	            0x85c0	                           test eax, eax	      4012	getchar.c	FUNCTION_73	IF_1	CALL_2
0x400591b	     0xf8465f7ffff	                            je 0x4005086	      4012	getchar.c	FUNCTION_73	IF_1	CALL_2
0x4005921	      0xe999f7ffff	                           jmp 0x40050bf	      4012	getchar.c	FUNCTION_73	IF_1	CALL_2
0x4005926	    0x488b15000000	            mov rdx, qword [0x0400592d] 	      3515	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6
0x400592d	            0x4898	                                    cdqe	      3515	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6
0x400592f	    0x4c8bb4c2c009	   mov r14, qword [rdx + rax*8 + 0x9c0] 	      3515	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6
0x4005937	          0x4d85f6	                           test r14, r14	      3516	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7
0x400593a	     0xf8520f7ffff	                           jne 0x4005060	      3516	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7
0x4005940	      0xe98bf7ffff	                           jmp 0x40050d0	      3516	getchar.c	FUNCTION_66	IF_32	FOR_6	ELSE_6	FOR_7
0x4005945	      0x448b4c2438	            mov r9d, dword [rsp + 0x38] 	      3622	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_13	IF_48	IF_49
0x400594a	      0xba05000000	                              mov edx, 5	      3623	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_13	IF_48	IF_49	CALL_45
0x400594f	      0xbe00000000	                              mov esi, 0	      3626	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_13	IF_48	CALL_47
0x4005954	          0x4585c9	                           test r9d, r9d	      3622	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_13	IF_48	IF_49
0x4005957	            0x7405	                            je 0x400595e	      3622	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_13	IF_48	IF_49
0x4005959	      0xbe00000000	                              mov esi, 0	      3623	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_13	IF_48	IF_49	CALL_45
0x400595e	            0x31ff	                            xor edi, edi	      3623	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_13	IF_48	IF_49	CALL_45
0x4005960	      0xe800000000	                          call 0x4005965	      3623	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_13	IF_48	IF_49	CALL_45
0x4005965	          0x4889de	                            mov rsi, rbx	      3623	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_13	IF_48	IF_49	CALL_45
0x4005968	          0x4889c7	                            mov rdi, rax	      3623	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_13	IF_48	IF_49	CALL_45
0x400596b	      0xbb05000000	                              mov ebx, 5	      3627	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_13	IF_48
0x4005970	      0xe800000000	                          call 0x4005975	      3623	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_13	IF_48	IF_49	CALL_45
0x4005975	      0xe9eff7ffff	                           jmp 0x4005169	      3623	getchar.c	FUNCTION_66	FOR_8	FOR_9	FOR_10	ELSE_9	IF_43	ELSE_13	IF_48	IF_49	CALL_45
0x400597a	      0x807c244800	                cmp byte [rsp + 0x48], 0	      3681	getchar.c	FUNCTION_66	IF_54
0x400597f	     0xf85b5000000	                           jne 0x4005a3a	      3681	getchar.c	FUNCTION_66	IF_54
0x4005985	      0x807c244900	                cmp byte [rsp + 0x49], 0	      3698	getchar.c	FUNCTION_66	ELSE_17	IF_58
0x400598a	     0xf842effffff	                            je 0x40058be	      3698	getchar.c	FUNCTION_66	ELSE_17	IF_58
0x4005990	      0x807c242300	                cmp byte [rsp + 0x23], 0	      3698	getchar.c	FUNCTION_66	ELSE_17	IF_58
0x4005995	     0xf8523ffffff	                           jne 0x40058be	      3698	getchar.c	FUNCTION_66	ELSE_17	IF_58
0x400599b	        0x8b542424	            mov edx, dword [rsp + 0x24] 	      3714	getchar.c	FUNCTION_66	IF_61
0x400599f	            0x85d2	                           test edx, edx	      3714	getchar.c	FUNCTION_66	IF_61
0x40059a1	     0xf84bafcffff	                            je 0x4005661	      3714	getchar.c	FUNCTION_66	IF_61
0x40059a7	            0x31db	                            xor ebx, ebx	      3227	getchar.c	FUNCTION_66
0x40059a9	      0xe9bbf7ffff	                           jmp 0x4005169	      3227	getchar.c	FUNCTION_66
0x40059ae	      0x4c8b742410	            mov r14, qword [rsp + 0x10] 	      3438	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	CALL_26
0x40059b3	          0x4963dc	                        movsxd rbx, r12d	      3438	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	CALL_26
0x40059b6	    0x410fb67c1eff	         movzx edi, byte [r14 + rbx - 1]	      3438	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	CALL_26
0x40059bc	      0xe800000000	                          call 0x40059c1	      3438	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	CALL_26
0x40059c1	            0x85c0	                           test eax, eax	      3438	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	CALL_26
0x40059c3	     0xf845df5ffff	                            je 0x4004f26	      3438	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	CALL_26
0x40059c9	        0x4183fc02	                             cmp r12d, 2	      3439	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2
0x40059cd	     0xf8e53f5ffff	                           jle 0x4004f26	      3439	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2
0x40059d3	      0x498d5c1efe	                lea rbx, [r14 + rbx - 2]	      3439	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2
0x40059d8	      0x418d4424fd	                      lea eax, [r12 - 3]	      3439	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2
0x40059dd	      0x48895c2418	             mov qword [rsp + 0x18], rbx	      3439	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2
0x40059e2	          0x4c89f3	                            mov rbx, r14	      3439	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2
0x40059e5	      0x4d8d740601	                lea r14, [r14 + rax + 1]	      3439	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2
0x40059ea	          0x4c89e0	                            mov rax, r12	      3439	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2
0x40059ed	          0x4189ec	                           mov r12d, ebp	      3439	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2
0x40059f0	          0x4889c5	                            mov rbp, rax	      3439	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2
0x40059f3	           0xfb63b	                   movzx edi, byte [rbx]	      3440	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2	IF_23	CALL_28
0x40059f6	      0xe800000000	                          call 0x40059fb	      3440	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2	IF_23	CALL_28
0x40059fb	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      3440	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2	IF_23	CALL_28
0x4005a00	        0x89442408	                mov dword [rsp + 8], eax	      3440	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2	IF_23	CALL_28
0x4005a04	           0xfb639	                   movzx edi, byte [rcx]	      3440	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2	IF_23	CALL_28
0x4005a07	      0xe800000000	                          call 0x4005a0c	      3440	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2	IF_23	CALL_28
0x4005a0c	        0x39442408	                cmp dword [rsp + 8], eax	      3440	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2	IF_23	CALL_28
0x4005a10	     0xf854ef7ffff	                           jne 0x4005164	      3440	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2	IF_23	CALL_28
0x4005a16	        0x4883c301	                              add rbx, 1	      3440	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2	IF_23	CALL_28
0x4005a1a	          0x4c39f3	                            cmp rbx, r14	      3439	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2
0x4005a1d	            0x75d4	                           jne 0x40059f3	      3439	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2
0x4005a1f	          0x4889e8	                            mov rax, rbp	      3439	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2
0x4005a22	          0x4489e5	                           mov ebp, r12d	      3439	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2
0x4005a25	          0x4989c4	                            mov r12, rax	      3439	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2
0x4005a28	      0xe9f9f4ffff	                           jmp 0x4004f26	      3439	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2
0x4005a2d	           0xf1f00	                         nop dword [rax]	      3439	getchar.c	FUNCTION_66	IF_16	IF_18	ELSE_3	IF_22	FOR_2
0x4005a30	      0xbb02000000	                              mov ebx, 2	      3684	getchar.c	FUNCTION_66	IF_54	IF_55
0x4005a35	      0xe92ff7ffff	                           jmp 0x4005169	      3684	getchar.c	FUNCTION_66	IF_54	IF_55
0x4005a3a	        0x8b742424	            mov esi, dword [rsp + 0x24] 	      3683	getchar.c	FUNCTION_66	IF_54	IF_55
0x4005a3e	            0x85f6	                           test esi, esi	      3683	getchar.c	FUNCTION_66	IF_54	IF_55
0x4005a40	            0x74ee	                            je 0x4005a30	      3683	getchar.c	FUNCTION_66	IF_54	IF_55
0x4005a42	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      3685	getchar.c	FUNCTION_66	IF_54	ELSE_16	IF_56
0x4005a47	          0x803803	                       cmp byte [rax], 3	      3685	getchar.c	FUNCTION_66	IF_54	ELSE_16	IF_56
0x4005a4a	     0xf85ddfcffff	                           jne 0x400572d	      3685	getchar.c	FUNCTION_66	IF_54	ELSE_16	IF_56
0x4005a50	    0x488b05000000	            mov rax, qword [0x04005a57] 	      3689	getchar.c	FUNCTION_66	IF_54	ELSE_16	IF_56	IF_57
0x4005a57	    0x488d90c00900	                  lea rdx, [rax + 0x9c0]	      3689	getchar.c	FUNCTION_66	IF_54	ELSE_16	IF_56	IF_57
0x4005a5e	      0x4839542428	            cmp qword [rsp + 0x28], rdx 	      3689	getchar.c	FUNCTION_66	IF_54	ELSE_16	IF_56	IF_57
0x4005a63	     0xf841a010000	                            je 0x4005b83	      3689	getchar.c	FUNCTION_66	IF_54	ELSE_16	IF_56	IF_57
0x4005a69	          0x4489f8	                           mov eax, r15d	      3693	getchar.c	FUNCTION_66	IF_54	ELSE_16	IF_56	ELSE_17
0x4005a6c	            0x31db	                            xor ebx, ebx	      3227	getchar.c	FUNCTION_66
0x4005a6e	            0xf7d0	                                 not eax	      3693	getchar.c	FUNCTION_66	IF_54	ELSE_16	IF_56	ELSE_17
0x4005a70	    0x210500000000	             and dword [0x04005a76], eax	      3693	getchar.c	FUNCTION_66	IF_54	ELSE_16	IF_56	ELSE_17
0x4005a76	      0xe9eef6ffff	                           jmp 0x4005169	      3693	getchar.c	FUNCTION_66	IF_54	ELSE_16	IF_56	ELSE_17
0x4005a7b	       0xf1f440000	                   nop dword [rax + rax]	      3693	getchar.c	FUNCTION_66	IF_54	ELSE_16	IF_56	ELSE_17
0x4005a80	         0xfb61c24	                   movzx ebx, byte [rsp]	      3466	getchar.c	FUNCTION_66	IF_27
0x4005a84	            0x84db	                             test bl, bl	      3466	getchar.c	FUNCTION_66	IF_27
0x4005a86	     0xf84e2f7ffff	                            je 0x400526e	      3466	getchar.c	FUNCTION_66	IF_27
0x4005a8c	    0x488b05000000	            mov rax, qword [0x04005a93] 	      3475	getchar.c	FUNCTION_66	IF_27	FOR_4	IF_28
0x4005a93	          0x4531e4	                          xor r12d, r12d	      3475	getchar.c	FUNCTION_66	IF_27	FOR_4	IF_28
0x4005a96	          0x4084ed	                           test bpl, bpl	      3466	getchar.c	FUNCTION_66	IF_27
0x4005a99	          0x4d63f5	                        movsxd r14, r13d	      3485	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30	CALL_31
0x4005a9c	        0x48890424	                    mov qword [rsp], rax	      3475	getchar.c	FUNCTION_66	IF_27	FOR_4	IF_28
0x4005aa0	     0xf84c8f7ffff	                            je 0x400526e	      3466	getchar.c	FUNCTION_66	IF_27
0x4005aa6	        0x8b5c245c	            mov ebx, dword [rsp + 0x5c] 	      3466	getchar.c	FUNCTION_66	IF_27
0x4005aaa	          0x4c89f1	                            mov rcx, r14	      3466	getchar.c	FUNCTION_66	IF_27
0x4005aad	    0x8b0500000000	            mov eax, dword [0x04005ab3] 	      3469	getchar.c	FUNCTION_66	IF_27	FOR_4
0x4005ab3	            0x85c0	                           test eax, eax	      3469	getchar.c	FUNCTION_66	IF_27	FOR_4
0x4005ab5	     0xf85b3f7ffff	                           jne 0x400526e	      3469	getchar.c	FUNCTION_66	IF_27	FOR_4
0x4005abb	      0x448b742438	           mov r14d, dword [rsp + 0x38] 	      3471	getchar.c	FUNCTION_66	IF_27	FOR_4	IF_28
0x4005ac0	          0x4585f6	                         test r14d, r14d	      3471	getchar.c	FUNCTION_66	IF_27	FOR_4	IF_28
0x4005ac3	     0xf847f000000	                            je 0x4005b48	      3471	getchar.c	FUNCTION_66	IF_27	FOR_4	IF_28
0x4005ac9	          0x4d85e4	                           test r12, r12	      3473	getchar.c	FUNCTION_66	IF_27	FOR_4	IF_28	IF_29
0x4005acc	     0xf859cf7ffff	                           jne 0x400526e	      3473	getchar.c	FUNCTION_66	IF_27	FOR_4	IF_28	IF_29
0x4005ad2	        0x488b2c24	                    mov rbp, qword [rsp]	      3475	getchar.c	FUNCTION_66	IF_27	FOR_4	IF_28
0x4005ad6	          0x4885ed	                           test rbp, rbp	      3479	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5
0x4005ad9	            0x7546	                           jne 0x4005b21	      3479	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5
0x4005adb	            0xeb4e	                           jmp 0x4005b2b	      3479	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5
0x4005add	           0xf1f00	                         nop dword [rax]	      3479	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5
0x4005ae0	        0x44857d24	          test dword [rbp + 0x24], r15d 	      3482	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30
0x4005ae4	            0x7432	                            je 0x4005b18	      3482	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30
0x4005ae6	        0x44396d20	           cmp dword [rbp + 0x20], r13d 	      3484	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30
0x4005aea	            0x752c	                           jne 0x4005b18	      3484	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30
0x4005aec	            0x85db	                           test ebx, ebx	      3484	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30
0x4005aee	            0x7428	                            je 0x4005b18	      3484	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30
0x4005af0	        0x4c8b7508	                mov r14, qword [rbp + 8]	      3485	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30	CALL_31
0x4005af4	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3485	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30	CALL_31
0x4005af9	          0x4889ca	                            mov rdx, rcx	      3485	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30	CALL_31
0x4005afc	      0x48894c2408	                mov qword [rsp + 8], rcx	      3485	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30	CALL_31
0x4005b01	          0x4c89f7	                            mov rdi, r14	      3485	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30	CALL_31
0x4005b04	      0xe800000000	                          call 0x4005b09	      3485	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30	CALL_31
0x4005b09	            0x85c0	                           test eax, eax	      3485	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30	CALL_31
0x4005b0b	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3485	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30	CALL_31
0x4005b10	            0x7440	                            je 0x4005b52	      3485	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30	CALL_31
0x4005b12	    0x660f1f440000	                    nop word [rax + rax]	      3485	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30	CALL_31
0x4005b18	        0x488b6d00	                    mov rbp, qword [rbp]	      3479	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5
0x4005b1c	          0x4885ed	                           test rbp, rbp	      3479	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5
0x4005b1f	            0x740a	                            je 0x4005b2b	      3479	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5
0x4005b21	    0x8b0500000000	            mov eax, dword [0x04005b27] 	      3479	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5
0x4005b27	            0x85c0	                           test eax, eax	      3479	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5
0x4005b29	            0x74b5	                            je 0x4005ae0	      3479	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5
0x4005b2b	        0x4983c401	                              add r12, 1	      3479	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5
0x4005b2f	    0x4981fc000100	                          cmp r12, 0x100	      3469	getchar.c	FUNCTION_66	IF_27	FOR_4
0x4005b36	     0xf8571ffffff	                           jne 0x4005aad	      3469	getchar.c	FUNCTION_66	IF_27	FOR_4
0x4005b3c	      0xe92df7ffff	                           jmp 0x400526e	      3469	getchar.c	FUNCTION_66	IF_27	FOR_4
0x4005b41	     0xf1f80000000	                         nop dword [rax]	      3469	getchar.c	FUNCTION_66	IF_27	FOR_4
0x4005b48	    0x4a8b2ce50000	                  mov rbp, qword [r12*8]	      3478	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4
0x4005b50	            0xeb84	                           jmp 0x4005ad6	      3478	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4
0x4005b52	        0x8b6c2438	            mov ebp, dword [rsp + 0x38] 	      3487	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30	IF_31
0x4005b56	          0x4c89f3	                            mov rbx, r14	      3487	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30	IF_31
0x4005b59	      0xba05000000	                              mov edx, 5	      3488	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30	IF_31	CALL_33
0x4005b5e	      0xbe00000000	                              mov esi, 0	      3488	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30	IF_31	CALL_33
0x4005b63	            0x85ed	                           test ebp, ebp	      3487	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30	IF_31
0x4005b65	     0xf85f3fdffff	                           jne 0x400595e	      3487	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30	IF_31
0x4005b6b	      0xbe00000000	                              mov esi, 0	      3491	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30	ELSE_5	CALL_35
0x4005b70	      0xe9e9fdffff	                           jmp 0x400595e	      3491	getchar.c	FUNCTION_66	IF_27	FOR_4	ELSE_4	FOR_5	IF_30	ELSE_5	CALL_35
0x4005b75	         0xfb61c24	                   movzx ebx, byte [rsp]	      3404	getchar.c	FUNCTION_66	IF_16	IF_18
0x4005b79	      0xe9b2f6ffff	                           jmp 0x4005230	      3404	getchar.c	FUNCTION_66	IF_16	IF_18
0x4005b7e	      0xe800000000	                          call 0x4005b83	      3777	getchar.c	FUNCTION_66
0x4005b83	          0x4489fa	                           mov edx, r15d	      3690	getchar.c	FUNCTION_66	IF_54	ELSE_16	IF_56	IF_57
0x4005b86	            0x31db	                            xor ebx, ebx	      3227	getchar.c	FUNCTION_66
0x4005b88	            0xf7d2	                                 not edx	      3690	getchar.c	FUNCTION_66	IF_54	ELSE_16	IF_56	IF_57
0x4005b8a	    0x2190401c0000	           and dword [rax + 0x1c40], edx	      3690	getchar.c	FUNCTION_66	IF_54	ELSE_16	IF_56	IF_57
0x4005b90	      0xe9d4f5ffff	                           jmp 0x4005169	      3690	getchar.c	FUNCTION_66	IF_54	ELSE_16	IF_56	IF_57
0x4005b95	         0xfb64500	                   movzx eax, byte [rbp]	      3768	getchar.c	FUNCTION_66	ELSE_20
0x4005b99	          0x83c080	             add eax, 0xffffffffffffff80	      3768	getchar.c	FUNCTION_66	ELSE_20
0x4005b9c	           0xfb6c0	                           movzx eax, al	      3768	getchar.c	FUNCTION_66	ELSE_20
0x4005b9f	      0xe977fbffff	                           jmp 0x400571b	      3768	getchar.c	FUNCTION_66	ELSE_20
0x4005ba4	      0x488b742450	            mov rsi, qword [rsp + 0x50] 	      3763	getchar.c	FUNCTION_66	IF_66
0x4005ba9	          0x488b06	                    mov rax, qword [rsi]	      3763	getchar.c	FUNCTION_66	IF_66
0x4005bac	          0x488903	                    mov qword [rbx], rax	      3763	getchar.c	FUNCTION_66	IF_66
0x4005baf	          0x48891e	                    mov qword [rsi], rbx	      3764	getchar.c	FUNCTION_66	IF_66
0x4005bb2	            0x31db	                            xor ebx, ebx	      3227	getchar.c	FUNCTION_66
0x4005bb4	      0xe9b0f5ffff	                           jmp 0x4005169	      3227	getchar.c	FUNCTION_66
0x4005bb9	    0x488b05000000	            mov rax, qword [0x04005bc0] 	      3731	getchar.c	FUNCTION_66	IF_63	IF_64
0x4005bc0	    0x488d90c00900	                  lea rdx, [rax + 0x9c0]	      3731	getchar.c	FUNCTION_66	IF_63	IF_64
0x4005bc7	      0x4839542428	            cmp qword [rsp + 0x28], rdx 	      3731	getchar.c	FUNCTION_66	IF_63	IF_64
0x4005bcc	            0x740c	                            je 0x4005bda	      3731	getchar.c	FUNCTION_66	IF_63	IF_64
0x4005bce	    0x44093d000000	             or dword [0x04005bd5], r15d	      3735	getchar.c	FUNCTION_66	IF_63	ELSE_19
0x4005bd5	      0xe9abfaffff	                           jmp 0x4005685	      3735	getchar.c	FUNCTION_66	IF_63	ELSE_19
0x4005bda	    0x4409b8401c00	           or dword [rax + 0x1c40], r15d	      3732	getchar.c	FUNCTION_66	IF_63	IF_64
0x4005be1	      0xe99ffaffff	                           jmp 0x4005685	      3732	getchar.c	FUNCTION_66	IF_63	IF_64
start_redo_ins	WHILE,1:ELSE,0:IF,3:DO,0:CALL,6:functions,0:SWITCH,0:FOR,0	49
0x4002860	    0x488b05000000	            mov rax, qword [0x04002867] 	       752	getchar.c	FUNCTION_29	IF_1	ELSE_1
0x4002867	          0x4885c0	                           test rax, rax	       753	getchar.c	FUNCTION_29	IF_1	IF_3
0x400286a	    0x488905000000	            mov qword [0x04002871], rax 	       752	getchar.c	FUNCTION_29	IF_1	ELSE_1
0x4002871	     0xf84c9000000	                            je 0x4002940	       753	getchar.c	FUNCTION_29	IF_1	IF_3
0x4002877	        0x4883c008	                              add rax, 8	       755	getchar.c	FUNCTION_29	IF_1
0x400287b	    0x48833d000000	               cmp qword [0x04002883], 0	       403	getchar.c	FUNCTION_10	IF_1
0x4002883	              0x53	                                push rbx	       881	getchar.c	FUNCTION_32
0x4002884	    0x488905000000	            mov qword [0x0400288b], rax 	       755	getchar.c	FUNCTION_29	IF_1
0x400288b	            0x7415	                            je 0x40028a2	       403	getchar.c	FUNCTION_10	IF_1
0x400288d	    0x48c705000000	               mov qword [0x04002898], 0	       405	getchar.c	FUNCTION_10	IF_1
0x4002898	    0xc70500000000	               mov dword [0x040028a2], 0	       406	getchar.c	FUNCTION_10	IF_1
0x40028a2	    0x48833d000000	               cmp qword [0x040028aa], 0	       408	getchar.c	FUNCTION_10	IF_2
0x40028aa	            0x742d	                            je 0x40028d9	       408	getchar.c	FUNCTION_10	IF_2
0x40028ac	    0x48c705000000	               mov qword [0x040028b7], 0	       410	getchar.c	FUNCTION_10	IF_2
0x40028b7	    0xc70500000000	               mov dword [0x040028c1], 0	       411	getchar.c	FUNCTION_10	IF_2
0x40028c1	            0xeb16	                           jmp 0x40028d9	       411	getchar.c	FUNCTION_10	IF_2
0x40028c3	       0xf1f440000	                   nop dword [rax + rax]	       411	getchar.c	FUNCTION_10	IF_2
0x40028c8	            0x89de	                            mov esi, ebx	       891	getchar.c	FUNCTION_32	WHILE_1	IF_2	CALL_4
0x40028ca	      0xbf00000000	                              mov edi, 0	       891	getchar.c	FUNCTION_32	WHILE_1	IF_2	CALL_4
0x40028cf	      0xe800000000	                          call 0x40028d4	       891	getchar.c	FUNCTION_32	WHILE_1	IF_2	CALL_4
0x40028d4	          0x4885c0	                           test rax, rax	       891	getchar.c	FUNCTION_32	WHILE_1	IF_2	CALL_4
0x40028d7	            0x7547	                           jne 0x4002920	       891	getchar.c	FUNCTION_32	WHILE_1	IF_2	CALL_4
0x40028d9	      0xe8d2d8ffff	               call sym.read_redo.part.0	       891	getchar.c	FUNCTION_32	WHILE_1	IF_2	CALL_4
0x40028de	            0x85c0	                           test eax, eax	       889	getchar.c	FUNCTION_32	WHILE_1	CALL_3
0x40028e0	            0x89c3	                            mov ebx, eax	       889	getchar.c	FUNCTION_32	WHILE_1	CALL_3
0x40028e2	            0x75e4	                           jne 0x40028c8	       889	getchar.c	FUNCTION_32	WHILE_1	CALL_3
0x40028e4	            0xeb16	                           jmp 0x40028fc	       889	getchar.c	FUNCTION_32	WHILE_1	CALL_3
0x40028e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       889	getchar.c	FUNCTION_32	WHILE_1	CALL_3
0x40028f0	            0x89c6	                            mov esi, eax	       814	getchar.c	FUNCTION_30	CALL_2
0x40028f2	      0xbf00000000	                              mov edi, 0	       814	getchar.c	FUNCTION_30	CALL_2
0x40028f7	      0xe814e7ffff	                  call sym.add_char_buff	       814	getchar.c	FUNCTION_30	CALL_2
0x40028fc	      0xe8afd8ffff	               call sym.read_redo.part.0	       814	getchar.c	FUNCTION_30	CALL_2
0x4002901	            0x85c0	                           test eax, eax	       813	getchar.c	FUNCTION_30	WHILE_1	CALL_1
0x4002903	            0x75eb	                           jne 0x40028f0	       813	getchar.c	FUNCTION_30	WHILE_1	CALL_1
0x4002905	      0xb801000000	                              mov eax, 1	       902	getchar.c	FUNCTION_32
0x400290a	    0xc70500000000	               mov dword [0x04002914], 1	       901	getchar.c	FUNCTION_32
0x4002914	              0x5b	                                 pop rbx	       903	getchar.c	FUNCTION_32
0x4002915	              0xc3	                                     ret	       903	getchar.c	FUNCTION_32
0x4002916	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       903	getchar.c	FUNCTION_32
0x4002920	          0x83e3df	                     and ebx, 0xffffffdf	       893	getchar.c	FUNCTION_32	WHILE_1	IF_2	IF_3
0x4002923	          0x83fb4f	                           cmp ebx, 0x4f	       893	getchar.c	FUNCTION_32	WHILE_1	IF_2	IF_3
0x4002926	            0x75d4	                           jne 0x40028fc	       893	getchar.c	FUNCTION_32	WHILE_1	IF_2	IF_3
0x4002928	      0xbe00000000	                              mov esi, 0	       894	getchar.c	FUNCTION_32	WHILE_1	IF_2	CALL_5
0x400292d	      0xbf00000000	                              mov edi, 0	       894	getchar.c	FUNCTION_32	WHILE_1	IF_2	CALL_5
0x4002932	      0xe8a9dbffff	          call sym.add_buff.constprop.22	       894	getchar.c	FUNCTION_32	WHILE_1	IF_2	CALL_5
0x4002937	            0xebc3	                           jmp 0x40028fc	       894	getchar.c	FUNCTION_32	WHILE_1	IF_2	CALL_5
0x4002939	     0xf1f80000000	                         nop dword [rax]	       894	getchar.c	FUNCTION_32	WHILE_1	IF_2	CALL_5
0x4002940	            0x31c0	                            xor eax, eax	       885	getchar.c	FUNCTION_32	IF_1
0x4002942	              0xc3	                                     ret	       885	getchar.c	FUNCTION_32	IF_1
ins_char_typebuf	WHILE,0:ELSE,1:IF,1:DO,0:CALL,4:functions,0:SWITCH,0:FOR,0	38
0x4002d70	              0x53	                                push rbx	      1093	getchar.c	FUNCTION_36
0x4002d71	        0x4883ec20	                           sub rsp, 0x20	      1093	getchar.c	FUNCTION_36
0x4002d75	    0x64488b042528	                mov rax, qword fs:[0x28]	      1093	getchar.c	FUNCTION_36
0x4002d7e	      0x4889442418	             mov qword [rsp + 0x18], rax	      1093	getchar.c	FUNCTION_36
0x4002d83	            0x31c0	                            xor eax, eax	      1093	getchar.c	FUNCTION_36
0x4002d85	            0x85ff	                           test edi, edi	      1099	getchar.c	FUNCTION_36	IF_1	CALL_1
0x4002d87	            0x784f	                            js 0x4002dd8	      1099	getchar.c	FUNCTION_36	IF_1	CALL_1
0x4002d89	          0x4889e6	                            mov rsi, rsp	      1109	getchar.c	FUNCTION_36	ELSE_1
0x4002d8c	          0x4889e3	                            mov rbx, rsp	      1109	getchar.c	FUNCTION_36	ELSE_1
0x4002d8f	    0xff1500000000	                 call qword [0x04002d95]	      1109	getchar.c	FUNCTION_36	ELSE_1
0x4002d95	            0x4898	                                    cdqe	      1109	getchar.c	FUNCTION_36	ELSE_1
0x4002d97	        0xc6040400	                 mov byte [rsp + rax], 0	      1109	getchar.c	FUNCTION_36	ELSE_1
0x4002d9b	    0x8b0500000000	            mov eax, dword [0x04002da1] 	      1115	getchar.c	FUNCTION_36	CALL_4
0x4002da1	    0x8b0d00000000	            mov ecx, dword [0x04002da7] 	      1115	getchar.c	FUNCTION_36	CALL_4
0x4002da7	            0x31d2	                            xor edx, edx	      1115	getchar.c	FUNCTION_36	CALL_4
0x4002da9	    0x8b3500000000	            mov esi, dword [0x04002daf] 	      1115	getchar.c	FUNCTION_36	CALL_4
0x4002daf	          0x4889df	                            mov rdi, rbx	      1115	getchar.c	FUNCTION_36	CALL_4
0x4002db2	            0x85c0	                           test eax, eax	      1115	getchar.c	FUNCTION_36	CALL_4
0x4002db4	           0xf94c2	                                 sete dl	      1115	getchar.c	FUNCTION_36	CALL_4
0x4002db7	      0xe8b4deffff	       call sym.ins_typebuf.constprop.15	      1115	getchar.c	FUNCTION_36	CALL_4
0x4002dbc	      0x488b442418	            mov rax, qword [rsp + 0x18] 	      1116	getchar.c	FUNCTION_36
0x4002dc1	    0x644833042528	                xor rax, qword fs:[0x28]	      1116	getchar.c	FUNCTION_36
0x4002dca	            0x752c	                           jne 0x4002df8	      1116	getchar.c	FUNCTION_36
0x4002dcc	        0x4883c420	                           add rsp, 0x20	      1116	getchar.c	FUNCTION_36
0x4002dd0	              0x5b	                                 pop rbx	      1116	getchar.c	FUNCTION_36
0x4002dd1	              0xc3	                                     ret	      1116	getchar.c	FUNCTION_36
0x4002dd2	    0x660f1f440000	                    nop word [rax + rax]	      1116	getchar.c	FUNCTION_36
0x4002dd8	            0x89f8	                            mov eax, edi	      1102	getchar.c	FUNCTION_36	IF_1	CALL_2
0x4002dda	            0xf7df	                                 neg edi	      1103	getchar.c	FUNCTION_36	IF_1	CALL_3
0x4002ddc	        0xc6042480	                    mov byte [rsp], 0x80	      1101	getchar.c	FUNCTION_36	IF_1
0x4002de0	            0xf7d8	                                 neg eax	      1102	getchar.c	FUNCTION_36	IF_1	CALL_2
0x4002de2	          0xc1ef08	                              shr edi, 8	      1103	getchar.c	FUNCTION_36	IF_1	CALL_3
0x4002de5	      0xc644240300	                   mov byte [rsp + 3], 0	      1104	getchar.c	FUNCTION_36	IF_1
0x4002dea	        0x88442401	                  mov byte [rsp + 1], al	      1102	getchar.c	FUNCTION_36	IF_1	CALL_2
0x4002dee	      0x40887c2402	                 mov byte [rsp + 2], dil	      1103	getchar.c	FUNCTION_36	IF_1	CALL_3
0x4002df3	          0x4889e3	                            mov rbx, rsp	      1103	getchar.c	FUNCTION_36	IF_1	CALL_3
0x4002df6	            0xeba3	                           jmp 0x4002d9b	      1103	getchar.c	FUNCTION_36	IF_1	CALL_3
0x4002df8	      0xe800000000	                          call 0x4002dfd	      1116	getchar.c	FUNCTION_36
map_clear_int	WHILE,1:ELSE,4:IF,8:DO,0:CALL,2:functions,0:SWITCH,0:FOR,1	167
0x4004420	            0x4157	                                push r15	      3894	getchar.c	FUNCTION_71
0x4004422	            0x4156	                                push r14	      3894	getchar.c	FUNCTION_71
0x4004424	          0x4189f7	                           mov r15d, esi	      3894	getchar.c	FUNCTION_71
0x4004427	            0x4155	                                push r13	      3894	getchar.c	FUNCTION_71
0x4004429	            0x4154	                                push r12	      3894	getchar.c	FUNCTION_71
0x400442b	              0x55	                                push rbp	      3894	getchar.c	FUNCTION_71
0x400442c	              0x53	                                push rbx	      3894	getchar.c	FUNCTION_71
0x400442d	            0x89cd	                            mov ebp, ecx	      3894	getchar.c	FUNCTION_71
0x400442f	        0x4883ec28	                           sub rsp, 0x28	      3894	getchar.c	FUNCTION_71
0x4004433	    0x8b0d00000000	            mov ecx, dword [0x04004439] 	      3802	getchar.c	FUNCTION_68	IF_1
0x4004439	        0x48893c24	                    mov qword [rsp], rdi	      3894	getchar.c	FUNCTION_71
0x400443d	        0x8954241c	             mov dword [rsp + 0x1c], edx	      3894	getchar.c	FUNCTION_71
0x4004441	            0x85c9	                           test ecx, ecx	      3802	getchar.c	FUNCTION_68	IF_1
0x4004443	     0xf8417020000	                            je 0x4004660	      3802	getchar.c	FUNCTION_68	IF_1
0x4004449	        0x488b0424	                    mov rax, qword [rsp]	      3802	getchar.c	FUNCTION_68	IF_1
0x400444d	          0x4589fe	                          mov r14d, r15d	      3928	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x4004450	    0x48c744241000	               mov qword [rsp + 0x10], 0	      3928	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x4004459	          0x4531ed	                          xor r13d, r13d	      3894	getchar.c	FUNCTION_71
0x400445c	          0x41f7d6	                                not r14d	      3928	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x400445f	    0x4805c0090000	                          add rax, 0x9c0	      3928	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x4004465	      0x4889442408	                mov qword [rsp + 8], rax	      3928	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x400446a	            0x85ed	                           test ebp, ebp	      3903	getchar.c	FUNCTION_71	FOR_1	IF_1
0x400446c	            0x7452	                            je 0x40044c0	      3903	getchar.c	FUNCTION_71	FOR_1	IF_1
0x400446e	          0x4585ed	                         test r13d, r13d	      3905	getchar.c	FUNCTION_71	FOR_1	IF_1	IF_2
0x4004471	            0x753e	                           jne 0x40044b1	      3905	getchar.c	FUNCTION_71	FOR_1	IF_1	IF_2
0x4004473	        0x8b54241c	            mov edx, dword [rsp + 0x1c] 	      3908	getchar.c	FUNCTION_71	FOR_1	IF_1	IF_3
0x4004477	            0x85d2	                           test edx, edx	      3908	getchar.c	FUNCTION_71	FOR_1	IF_1	IF_3
0x4004479	     0xf84d1010000	                            je 0x4004650	      3908	getchar.c	FUNCTION_71	FOR_1	IF_1	IF_3
0x400447f	        0x488b0424	                    mov rax, qword [rsp]	      3909	getchar.c	FUNCTION_71	FOR_1	IF_1	IF_3
0x4004483	    0x4c8da0c01100	                 lea r12, [rax + 0x11c0]	      3909	getchar.c	FUNCTION_71	FOR_1	IF_1	IF_3
0x400448a	        0x498b1c24	                    mov rbx, qword [r12]	      3923	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1
0x400448e	          0x4885db	                           test rbx, rbx	      3923	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1
0x4004491	            0x754e	                           jne 0x40044e1	      3923	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1
0x4004493	       0xf1f440000	                   nop dword [rax + rax]	      3923	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1
0x4004498	        0x4183c501	                             add r13d, 1	      3901	getchar.c	FUNCTION_71	FOR_1
0x400449c	    0x488344240808	                  add qword [rsp + 8], 8	      3901	getchar.c	FUNCTION_71	FOR_1
0x40044a2	    0x488344241008	               add qword [rsp + 0x10], 8	      3901	getchar.c	FUNCTION_71	FOR_1
0x40044a8	    0x4181fd000100	                         cmp r13d, 0x100	      3901	getchar.c	FUNCTION_71	FOR_1
0x40044af	            0x75b9	                           jne 0x400446a	      3901	getchar.c	FUNCTION_71	FOR_1
0x40044b1	        0x4883c428	                           add rsp, 0x28	      3959	getchar.c	FUNCTION_71
0x40044b5	              0x5b	                                 pop rbx	      3959	getchar.c	FUNCTION_71
0x40044b6	              0x5d	                                 pop rbp	      3959	getchar.c	FUNCTION_71
0x40044b7	            0x415c	                                 pop r12	      3959	getchar.c	FUNCTION_71
0x40044b9	            0x415d	                                 pop r13	      3959	getchar.c	FUNCTION_71
0x40044bb	            0x415e	                                 pop r14	      3959	getchar.c	FUNCTION_71
0x40044bd	            0x415f	                                 pop r15	      3959	getchar.c	FUNCTION_71
0x40044bf	              0xc3	                                     ret	      3959	getchar.c	FUNCTION_71
0x40044c0	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	      3917	getchar.c	FUNCTION_71	FOR_1	ELSE_2	IF_4
0x40044c4	            0x85c0	                           test eax, eax	      3917	getchar.c	FUNCTION_71	FOR_1	ELSE_2	IF_4
0x40044c6	     0xf84c4000000	                            je 0x4004590	      3917	getchar.c	FUNCTION_71	FOR_1	ELSE_2	IF_4
0x40044cc	      0x4c8b642408	                mov r12, qword [rsp + 8]	      3918	getchar.c	FUNCTION_71	FOR_1	ELSE_2	IF_4
0x40044d1	     0xf1f80000000	                         nop dword [rax]	      3918	getchar.c	FUNCTION_71	FOR_1	ELSE_2	IF_4
0x40044d8	        0x498b1c24	                    mov rbx, qword [r12]	      3923	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1
0x40044dc	          0x4885db	                           test rbx, rbx	      3923	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1
0x40044df	            0x74b7	                            je 0x4004498	      3923	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1
0x40044e1	          0x8b4324	            mov eax, dword [rbx + 0x24] 	      3926	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x40044e4	          0x4485f8	                          test eax, r15d	      3926	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x40044e7	            0x7457	                            je 0x4004540	      3926	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x40044e9	          0x4421f0	                           and eax, r14d	      3928	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x40044ec	            0x85c0	                           test eax, eax	      3929	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_6
0x40044ee	          0x894324	             mov dword [rbx + 0x24], eax	      3928	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x40044f1	            0x7465	                            je 0x4004558	      3929	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_6
0x40044f3	      0xa907300000	                        test eax, 0x3007	      3937	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x40044f8	        0x488b4308	                mov rax, qword [rbx + 8]	      3937	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x40044fc	            0x744a	                            je 0x4004548	      3937	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x40044fe	           0xfb600	                   movzx eax, byte [rax]	      3937	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x4004501	            0x85ed	                           test ebp, ebp	      3938	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_7
0x4004503	            0x753b	                           jne 0x4004540	      3938	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_7
0x4004505	          0x4439e8	                           cmp eax, r13d	      3938	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_7
0x4004508	            0x7436	                            je 0x4004540	      3938	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_7
0x400450a	        0x488b1424	                    mov rdx, qword [rsp]	      3938	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_7
0x400450e	          0x488b3b	                    mov rdi, qword [rbx]	      3940	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_7
0x4004511	        0x488d04c2	                  lea rax, [rdx + rax*8]	      3940	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_7
0x4004515	        0x49893c24	                    mov qword [r12], rdi	      3940	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_7
0x4004519	    0x488bb8c00900	           mov rdi, qword [rax + 0x9c0] 	      3944	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_7	IF_8
0x4004520	          0x48893b	                    mov qword [rbx], rdi	      3944	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_7	IF_8
0x4004523	    0x488998c00900	            mov qword [rax + 0x9c0], rbx	      3945	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_7	IF_8
0x400452a	        0x498b1c24	                    mov rbx, qword [r12]	      3923	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1
0x400452e	          0x4885db	                           test rbx, rbx	      3923	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1
0x4004531	     0xf8461ffffff	                            je 0x4004498	      3923	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1
0x4004537	          0x8b4324	            mov eax, dword [rbx + 0x24] 	      3926	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x400453a	          0x4485f8	                          test eax, r15d	      3926	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x400453d	            0x75aa	                           jne 0x40044e9	      3926	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x400453f	              0x90	                                     nop	      3926	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x4004540	          0x4989dc	                            mov r12, rbx	      3956	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1
0x4004543	            0xeb93	                           jmp 0x40044d8	      3956	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1
0x4004545	           0xf1f00	                         nop dword [rax]	      3956	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1
0x4004548	           0xfb600	                   movzx eax, byte [rax]	      3937	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x400454b	          0x83c080	             add eax, 0xffffffffffffff80	      3937	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x400454e	           0xfb6c0	                           movzx eax, al	      3937	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x4004551	            0xebae	                           jmp 0x4004501	      3937	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x4004553	       0xf1f440000	                   nop dword [rax + rax]	      3937	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x4004558	        0x488b7b08	                mov rdi, qword [rbx + 8]	      3789	getchar.c	FUNCTION_67	CALL_1
0x400455c	      0xe800000000	                          call 0x4004561	      3789	getchar.c	FUNCTION_67	CALL_1
0x4004561	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3790	getchar.c	FUNCTION_67	CALL_2
0x4004565	      0xe800000000	                          call 0x400456a	      3790	getchar.c	FUNCTION_67	CALL_2
0x400456a	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      3791	getchar.c	FUNCTION_67	CALL_3
0x400456e	      0xe800000000	                          call 0x4004573	      3791	getchar.c	FUNCTION_67	CALL_3
0x4004573	          0x488b03	                    mov rax, qword [rbx]	      3792	getchar.c	FUNCTION_67
0x4004576	          0x4889df	                            mov rdi, rbx	      3793	getchar.c	FUNCTION_67	CALL_4
0x4004579	        0x49890424	                    mov qword [r12], rax	      3792	getchar.c	FUNCTION_67
0x400457d	      0xe800000000	                          call 0x4004582	      3793	getchar.c	FUNCTION_67	CALL_4
0x4004582	      0xe951ffffff	                           jmp 0x40044d8	      3932	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_6
0x4004587	    0x660f1f840000	                    nop word [rax + rax]	      3932	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_6
0x4004590	      0x4c8b642410	            mov r12, qword [rsp + 0x10] 	      3921	getchar.c	FUNCTION_71	FOR_1	ELSE_2	ELSE_3
0x4004595	           0xf1f00	                         nop dword [rax]	      3921	getchar.c	FUNCTION_71	FOR_1	ELSE_2	ELSE_3
0x4004598	        0x498b1c24	                    mov rbx, qword [r12]	      3923	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1
0x400459c	          0x4885db	                           test rbx, rbx	      3923	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1
0x400459f	     0xf84f3feffff	                            je 0x4004498	      3923	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1
0x40045a5	          0x8b4324	            mov eax, dword [rbx + 0x24] 	      3926	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x40045a8	          0x4185c7	                          test r15d, eax	      3926	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x40045ab	            0x7453	                            je 0x4004600	      3926	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x40045ad	          0x4421f0	                           and eax, r14d	      3928	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x40045b0	            0x85c0	                           test eax, eax	      3929	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_6
0x40045b2	          0x894324	             mov dword [rbx + 0x24], eax	      3928	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x40045b5	            0x7469	                            je 0x4004620	      3929	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_6
0x40045b7	      0xa907300000	                        test eax, 0x3007	      3937	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x40045bc	            0x744a	                            je 0x4004608	      3937	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x40045be	        0x488b4308	                mov rax, qword [rbx + 8]	      3937	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x40045c2	           0xfb600	                   movzx eax, byte [rax]	      3937	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x40045c5	          0x4139c5	                           cmp r13d, eax	      3938	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_7
0x40045c8	            0x7436	                            je 0x4004600	      3938	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_7
0x40045ca	            0x85ed	                           test ebp, ebp	      3938	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_7
0x40045cc	            0x7532	                           jne 0x4004600	      3938	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_7
0x40045ce	          0x488b3b	                    mov rdi, qword [rbx]	      3940	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_7
0x40045d1	        0x49893c24	                    mov qword [r12], rdi	      3940	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_7
0x40045d5	    0x488b3cc50000	                  mov rdi, qword [rax*8]	      3950	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_7	ELSE_4
0x40045dd	          0x48893b	                    mov qword [rbx], rdi	      3950	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_7	ELSE_4
0x40045e0	    0x48891cc50000	                  mov qword [rax*8], rbx	      3951	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5	IF_7	ELSE_4
0x40045e8	        0x498b1c24	                    mov rbx, qword [r12]	      3923	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1
0x40045ec	          0x4885db	                           test rbx, rbx	      3923	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1
0x40045ef	     0xf84a3feffff	                            je 0x4004498	      3923	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1
0x40045f5	          0x8b4324	            mov eax, dword [rbx + 0x24] 	      3926	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x40045f8	          0x4185c7	                          test r15d, eax	      3926	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x40045fb	            0x75b0	                           jne 0x40045ad	      3926	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x40045fd	           0xf1f00	                         nop dword [rax]	      3926	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x4004600	          0x4989dc	                            mov r12, rbx	      3956	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1
0x4004603	            0xeb93	                           jmp 0x4004598	      3956	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1
0x4004605	           0xf1f00	                         nop dword [rax]	      3956	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1
0x4004608	        0x488b4308	                mov rax, qword [rbx + 8]	      3937	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x400460c	           0xfb600	                   movzx eax, byte [rax]	      3937	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x400460f	          0x83c080	             add eax, 0xffffffffffffff80	      3937	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x4004612	           0xfb6c0	                           movzx eax, al	      3937	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x4004615	            0xebae	                           jmp 0x40045c5	      3937	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x4004617	    0x660f1f840000	                    nop word [rax + rax]	      3937	getchar.c	FUNCTION_71	FOR_1	ELSE_3	WHILE_1	IF_5
0x4004620	        0x488b7b08	                mov rdi, qword [rbx + 8]	      3789	getchar.c	FUNCTION_67	CALL_1
0x4004624	      0xe800000000	                          call 0x4004629	      3789	getchar.c	FUNCTION_67	CALL_1
0x4004629	        0x488b7b10	            mov rdi, qword [rbx + 0x10] 	      3790	getchar.c	FUNCTION_67	CALL_2
0x400462d	      0xe800000000	                          call 0x4004632	      3790	getchar.c	FUNCTION_67	CALL_2
0x4004632	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	      3791	getchar.c	FUNCTION_67	CALL_3
0x4004636	      0xe800000000	                          call 0x400463b	      3791	getchar.c	FUNCTION_67	CALL_3
0x400463b	          0x488b03	                    mov rax, qword [rbx]	      3792	getchar.c	FUNCTION_67
0x400463e	          0x4889df	                            mov rdi, rbx	      3793	getchar.c	FUNCTION_67	CALL_4
0x4004641	        0x49890424	                    mov qword [r12], rax	      3792	getchar.c	FUNCTION_67
0x4004645	      0xe800000000	                          call 0x400464a	      3793	getchar.c	FUNCTION_67	CALL_4
0x400464a	      0xe949ffffff	                           jmp 0x4004598	      3793	getchar.c	FUNCTION_67	CALL_4
0x400464f	              0x90	                                     nop	      3793	getchar.c	FUNCTION_67	CALL_4
0x4004650	    0x41bc00000000	                             mov r12d, 0	      3912	getchar.c	FUNCTION_71	FOR_1	IF_1	ELSE_1
0x4004656	      0xe93dffffff	                           jmp 0x4004598	      3912	getchar.c	FUNCTION_71	FOR_1	IF_1	ELSE_1
0x400465b	       0xf1f440000	                   nop dword [rax + rax]	      3912	getchar.c	FUNCTION_71	FOR_1	IF_1	ELSE_1
0x4004660	      0xbe00000000	                              mov esi, 0	        90	string3.h	FUNCTION_108	CALL_6
0x4004665	      0xb900010000	                          mov ecx, 0x100	        90	string3.h	FUNCTION_108	CALL_6
0x400466a	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_108	CALL_6
0x400466c	          0x4889f7	                            mov rdi, rsi	        90	string3.h	FUNCTION_108	CALL_6
0x400466f	    0xc70500000000	               mov dword [0x04004679], 1	      3805	getchar.c	FUNCTION_68	IF_1
0x4004679	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_108	CALL_6
0x400467c	      0xe9c8fdffff	                           jmp 0x4004449	        90	string3.h	FUNCTION_108	CALL_6
add_char_buff	WHILE,0:ELSE,3:IF,4:DO,0:CALL,6:functions,0:SWITCH,0:FOR,1	175
0x4001010	            0x4157	                                push r15	       302	getchar.c	FUNCTION_7
0x4001012	            0x4156	                                push r14	       302	getchar.c	FUNCTION_7
0x4001014	          0x4989fe	                            mov r14, rdi	       302	getchar.c	FUNCTION_7
0x4001017	            0x4155	                                push r13	       302	getchar.c	FUNCTION_7
0x4001019	            0x4154	                                push r12	       302	getchar.c	FUNCTION_7
0x400101b	              0x55	                                push rbp	       302	getchar.c	FUNCTION_7
0x400101c	              0x53	                                push rbx	       302	getchar.c	FUNCTION_7
0x400101d	            0x89f5	                            mov ebp, esi	       302	getchar.c	FUNCTION_7
0x400101f	        0x4883ec48	                           sub rsp, 0x48	       302	getchar.c	FUNCTION_7
0x4001023	    0x64488b042528	                mov rax, qword fs:[0x28]	       302	getchar.c	FUNCTION_7
0x400102c	      0x4889442438	             mov qword [rsp + 0x38], rax	       302	getchar.c	FUNCTION_7
0x4001031	            0x31c0	                            xor eax, eax	       302	getchar.c	FUNCTION_7
0x4001033	            0x85f6	                           test esi, esi	       311	getchar.c	FUNCTION_7	IF_1	CALL_1
0x4001035	     0xf886d020000	                            js 0x40012a8	       311	getchar.c	FUNCTION_7	IF_1	CALL_1
0x400103b	      0x488d742420	                   lea rsi, [rsp + 0x20]	       314	getchar.c	FUNCTION_7	ELSE_1
0x4001040	            0x89ef	                            mov edi, ebp	       314	getchar.c	FUNCTION_7	ELSE_1
0x4001042	    0xff1500000000	                 call qword [0x04001048]	       314	getchar.c	FUNCTION_7	ELSE_1
0x4001048	            0x85c0	                           test eax, eax	       315	getchar.c	FUNCTION_7	FOR_1
0x400104a	        0x89442404	                mov dword [rsp + 4], eax	       314	getchar.c	FUNCTION_7	ELSE_1
0x400104e	     0xf8e4c010000	                           jle 0x40011a0	       315	getchar.c	FUNCTION_7	FOR_1
0x4001054	          0x4531ed	                          xor r13d, r13d	       312	getchar.c	FUNCTION_7	IF_1
0x4001057	      0x4c8d642410	                   lea r12, [rsp + 0x10]	       312	getchar.c	FUNCTION_7	IF_1
0x400105c	      0xe912010000	                           jmp 0x4001173	       312	getchar.c	FUNCTION_7	IF_1
0x4001061	     0xf1f80000000	                         nop dword [rax]	       312	getchar.c	FUNCTION_7	IF_1
0x4001068	    0x420fb66c2c20	     movzx ebp, byte [rsp + r13 + 0x20] 	       318	getchar.c	FUNCTION_7	FOR_1	IF_2
0x400106e	    0x81fd80000000	                           cmp ebp, 0x80	       321	getchar.c	FUNCTION_7	FOR_1	IF_3	CALL_3
0x4001074	     0xf844e010000	                            je 0x40011c8	       321	getchar.c	FUNCTION_7	FOR_1	IF_3	CALL_3
0x400107a	            0x85ed	                           test ebp, ebp	       321	getchar.c	FUNCTION_7	FOR_1	IF_3	CALL_3
0x400107c	     0xf8446010000	                            je 0x40011c8	       321	getchar.c	FUNCTION_7	FOR_1	IF_3	CALL_3
0x4001082	    0x81fd9b000000	                           cmp ebp, 0x9b	       330	getchar.c	FUNCTION_7	FOR_1	ELSE_2	IF_4
0x4001088	     0xf84fa010000	                            je 0x4001288	       330	getchar.c	FUNCTION_7	FOR_1	ELSE_2	IF_4
0x400108e	      0x40886c2410	              mov byte [rsp + 0x10], bpl	       341	getchar.c	FUNCTION_7	FOR_1	ELSE_3
0x4001093	      0xc644241100	                mov byte [rsp + 0x11], 0	       342	getchar.c	FUNCTION_7	FOR_1	ELSE_3
0x4001098	     0xf1f84000000	                   nop dword [rax + rax]	       342	getchar.c	FUNCTION_7	FOR_1	ELSE_3
0x40010a0	          0x4c89e3	                            mov rbx, r12	       238	getchar.c	FUNCTION_5	CALL_1
0x40010a3	            0x8b13	                    mov edx, dword [rbx]	       238	getchar.c	FUNCTION_5	CALL_1
0x40010a5	        0x4883c304	                              add rbx, 4	       238	getchar.c	FUNCTION_5	CALL_1
0x40010a9	    0x8d82fffefefe	              lea eax, [rdx - 0x1010101]	       238	getchar.c	FUNCTION_5	CALL_1
0x40010af	            0xf7d2	                                 not edx	       238	getchar.c	FUNCTION_5	CALL_1
0x40010b1	            0x21d0	                            and eax, edx	       238	getchar.c	FUNCTION_5	CALL_1
0x40010b3	      0x2580808080	                     and eax, 0x80808080	       238	getchar.c	FUNCTION_5	CALL_1
0x40010b8	            0x74e9	                            je 0x40010a3	       238	getchar.c	FUNCTION_5	CALL_1
0x40010ba	            0x89c2	                            mov edx, eax	       238	getchar.c	FUNCTION_5	CALL_1
0x40010bc	          0xc1ea10	                           shr edx, 0x10	       238	getchar.c	FUNCTION_5	CALL_1
0x40010bf	      0xa980800000	                        test eax, 0x8080	       238	getchar.c	FUNCTION_5	CALL_1
0x40010c4	           0xf44c2	                          cmove eax, edx	       238	getchar.c	FUNCTION_5	CALL_1
0x40010c7	        0x488d5302	                      lea rdx, [rbx + 2]	       238	getchar.c	FUNCTION_5	CALL_1
0x40010cb	            0x89c1	                            mov ecx, eax	       238	getchar.c	FUNCTION_5	CALL_1
0x40010cd	        0x480f44da	                          cmove rbx, rdx	       238	getchar.c	FUNCTION_5	CALL_1
0x40010d1	              0xc1	                              add cl, al	       238	getchar.c	FUNCTION_5	CALL_1
0x40010d3	        0x4883db03	                              sbb rbx, 3	       238	getchar.c	FUNCTION_5	CALL_1
0x40010d7	          0x4c29e3	                            sub rbx, r12	       239	getchar.c	FUNCTION_5	IF_2
0x40010da	     0xf8488000000	                            je 0x4001168	       239	getchar.c	FUNCTION_5	IF_2
0x40010e0	          0x498b3e	                    mov rdi, qword [r14]	       242	getchar.c	FUNCTION_5	IF_3
0x40010e3	          0x4885ff	                           test rdi, rdi	       242	getchar.c	FUNCTION_5	IF_3
0x40010e6	     0xf8484010000	                            je 0x4001270	       242	getchar.c	FUNCTION_5	IF_3
0x40010ec	      0x49837e1000	               cmp qword [r14 + 0x10], 0	       247	getchar.c	FUNCTION_5	ELSE_1	IF_4
0x40010f1	     0xf84c1010000	                            je 0x40012b8	       247	getchar.c	FUNCTION_5	ELSE_1	IF_4
0x40010f7	        0x49637618	         movsxd rsi, dword [r14 + 0x18] 	       252	getchar.c	FUNCTION_5	ELSE_2	IF_5
0x40010fb	            0x85f6	                           test esi, esi	       252	getchar.c	FUNCTION_5	ELSE_2	IF_5
0x40010fd	     0xf85fd000000	                           jne 0x4001200	       252	getchar.c	FUNCTION_5	ELSE_2	IF_5
0x4001103	        0x418b461c	            mov eax, dword [r14 + 0x1c] 	       252	getchar.c	FUNCTION_5	ELSE_2	IF_5
0x4001107	            0x39d8	                            cmp eax, ebx	       258	getchar.c	FUNCTION_5	IF_6
0x4001109	    0x41c746180000	               mov dword [r14 + 0x18], 0	       256	getchar.c	FUNCTION_5
0x4001111	     0xf8d29010000	                           jge 0x4001240	       258	getchar.c	FUNCTION_5	IF_6
0x4001117	        0x4883fb13	                           cmp rbx, 0x13	       266	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x400111b	     0xf8ecf000000	                           jle 0x40011f0	       266	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x4001121	        0x488d7b10	                   lea rdi, [rbx + 0x10]	       266	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x4001125	          0x4989df	                            mov r15, rbx	       266	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x4001128	      0xbe01000000	                              mov esi, 1	       270	getchar.c	FUNCTION_5	ELSE_3	CALL_8
0x400112d	      0xe800000000	                          call 0x4001132	       270	getchar.c	FUNCTION_5	ELSE_3	CALL_8
0x4001132	          0x4885c0	                           test rax, rax	       272	getchar.c	FUNCTION_5	ELSE_3	IF_8
0x4001135	            0x7431	                            je 0x4001168	       272	getchar.c	FUNCTION_5	ELSE_3	IF_8
0x4001137	        0x488d7808	                      lea rdi, [rax + 8]	       275	getchar.c	FUNCTION_5	ELSE_3	CALL_9
0x400113b	          0x4129df	                           sub r15d, ebx	       274	getchar.c	FUNCTION_5	ELSE_3
0x400113e	          0x4889da	                            mov rdx, rbx	       275	getchar.c	FUNCTION_5	ELSE_3	CALL_9
0x4001141	          0x4c89e6	                            mov rsi, r12	       275	getchar.c	FUNCTION_5	ELSE_3	CALL_9
0x4001144	        0x45897e1c	            mov dword [r14 + 0x1c], r15d	       274	getchar.c	FUNCTION_5	ELSE_3
0x4001148	      0x4889442408	                mov qword [rsp + 8], rax	       275	getchar.c	FUNCTION_5	ELSE_3	CALL_9
0x400114d	      0xe800000000	                          call 0x4001152	       275	getchar.c	FUNCTION_5	ELSE_3	CALL_9
0x4001152	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	       277	getchar.c	FUNCTION_5	ELSE_3
0x4001156	      0x488b442408	                mov rax, qword [rsp + 8]	       277	getchar.c	FUNCTION_5	ELSE_3
0x400115b	          0x488b32	                    mov rsi, qword [rdx]	       277	getchar.c	FUNCTION_5	ELSE_3
0x400115e	          0x488930	                    mov qword [rax], rsi	       277	getchar.c	FUNCTION_5	ELSE_3
0x4001161	          0x488902	                    mov qword [rdx], rax	       278	getchar.c	FUNCTION_5	ELSE_3
0x4001164	        0x49894610	             mov qword [r14 + 0x10], rax	       279	getchar.c	FUNCTION_5	ELSE_3
0x4001168	        0x4983c501	                              add r13, 1	       279	getchar.c	FUNCTION_5	ELSE_3
0x400116c	      0x44396c2404	               cmp dword [rsp + 4], r13d	       315	getchar.c	FUNCTION_7	FOR_1
0x4001171	            0x7e2d	                           jle 0x40011a0	       315	getchar.c	FUNCTION_7	FOR_1
0x4001173	            0x85ed	                           test ebp, ebp	       317	getchar.c	FUNCTION_7	FOR_1	IF_2	CALL_2
0x4001175	     0xf89edfeffff	                           jns 0x4001068	       317	getchar.c	FUNCTION_7	FOR_1	IF_2	CALL_2
0x400117b	      0xc644241080	            mov byte [rsp + 0x10], 0x80 	       324	getchar.c	FUNCTION_7	FOR_1	IF_3
0x4001180	            0x89e8	                            mov eax, ebp	       325	getchar.c	FUNCTION_7	FOR_1	IF_3	CALL_4
0x4001182	            0xf7d8	                                 neg eax	       325	getchar.c	FUNCTION_7	FOR_1	IF_3	CALL_4
0x4001184	        0x88442411	               mov byte [rsp + 0x11], al	       325	getchar.c	FUNCTION_7	FOR_1	IF_3	CALL_4
0x4001188	            0x89e8	                            mov eax, ebp	       326	getchar.c	FUNCTION_7	FOR_1	IF_3	CALL_5
0x400118a	            0xf7d8	                                 neg eax	       326	getchar.c	FUNCTION_7	FOR_1	IF_3	CALL_5
0x400118c	          0xc1e808	                              shr eax, 8	       326	getchar.c	FUNCTION_7	FOR_1	IF_3	CALL_5
0x400118f	        0x88442412	               mov byte [rsp + 0x12], al	       326	getchar.c	FUNCTION_7	FOR_1	IF_3	CALL_5
0x4001193	      0xc644241300	                mov byte [rsp + 0x13], 0	       327	getchar.c	FUNCTION_7	FOR_1	IF_3
0x4001198	      0xe903ffffff	                           jmp 0x40010a0	       327	getchar.c	FUNCTION_7	FOR_1	IF_3
0x400119d	           0xf1f00	                         nop dword [rax]	       327	getchar.c	FUNCTION_7	FOR_1	IF_3
0x40011a0	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       348	getchar.c	FUNCTION_7
0x40011a5	    0x644833042528	                xor rax, qword fs:[0x28]	       348	getchar.c	FUNCTION_7
0x40011ae	     0xf8522010000	                           jne 0x40012d6	       348	getchar.c	FUNCTION_7
0x40011b4	        0x4883c448	                           add rsp, 0x48	       348	getchar.c	FUNCTION_7
0x40011b8	              0x5b	                                 pop rbx	       348	getchar.c	FUNCTION_7
0x40011b9	              0x5d	                                 pop rbp	       348	getchar.c	FUNCTION_7
0x40011ba	            0x415c	                                 pop r12	       348	getchar.c	FUNCTION_7
0x40011bc	            0x415d	                                 pop r13	       348	getchar.c	FUNCTION_7
0x40011be	            0x415e	                                 pop r14	       348	getchar.c	FUNCTION_7
0x40011c0	            0x415f	                                 pop r15	       348	getchar.c	FUNCTION_7
0x40011c2	              0xc3	                                     ret	       348	getchar.c	FUNCTION_7
0x40011c3	       0xf1f440000	                   nop dword [rax + rax]	       348	getchar.c	FUNCTION_7
0x40011c8	    0x81fd80000000	                           cmp ebp, 0x80	       325	getchar.c	FUNCTION_7	FOR_1	IF_3	CALL_4
0x40011ce	      0xc644241080	            mov byte [rsp + 0x10], 0x80 	       324	getchar.c	FUNCTION_7	FOR_1	IF_3
0x40011d3	            0x745b	                            je 0x4001230	       325	getchar.c	FUNCTION_7	FOR_1	IF_3	CALL_4
0x40011d5	            0x85ed	                           test ebp, ebp	       325	getchar.c	FUNCTION_7	FOR_1	IF_3	CALL_4
0x40011d7	      0xb8ffffffff	                     mov eax, 0xffffffff	       325	getchar.c	FUNCTION_7	FOR_1	IF_3	CALL_4
0x40011dc	            0x75a2	                           jne 0x4001180	       325	getchar.c	FUNCTION_7	FOR_1	IF_3	CALL_4
0x40011de	        0x88442411	               mov byte [rsp + 0x11], al	       325	getchar.c	FUNCTION_7	FOR_1	IF_3	CALL_4
0x40011e2	      0xb858000000	                           mov eax, 0x58	       326	getchar.c	FUNCTION_7	FOR_1	IF_3	CALL_5
0x40011e7	            0xeba6	                           jmp 0x400118f	       326	getchar.c	FUNCTION_7	FOR_1	IF_3	CALL_5
0x40011e9	     0xf1f80000000	                         nop dword [rax]	       326	getchar.c	FUNCTION_7	FOR_1	IF_3	CALL_5
0x40011f0	      0xbf24000000	                           mov edi, 0x24	       266	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x40011f5	    0x41bf14000000	                          mov r15d, 0x14	       267	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x40011fb	      0xe928ffffff	                           jmp 0x4001128	       267	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x4001200	        0x4c8d4708	                       lea r8, [rdi + 8]	       253	getchar.c	FUNCTION_5	ELSE_2	IF_5	CALL_4
0x4001204	        0x4d8d3c30	                     lea r15, [r8 + rsi]	       253	getchar.c	FUNCTION_5	ELSE_2	IF_5	CALL_4
0x4001208	      0x4c89442408	                 mov qword [rsp + 8], r8	       253	getchar.c	FUNCTION_5	ELSE_2	IF_5	CALL_4
0x400120d	          0x4c89ff	                            mov rdi, r15	       253	getchar.c	FUNCTION_5	ELSE_2	IF_5	CALL_4
0x4001210	      0xe800000000	                          call 0x4001215	       253	getchar.c	FUNCTION_5	ELSE_2	IF_5	CALL_4
0x4001215	      0x4c8b442408	                 mov r8, qword [rsp + 8]	        59	string3.h	FUNCTION_106	CALL_3
0x400121a	        0x488d5001	                      lea rdx, [rax + 1]	        59	string3.h	FUNCTION_106	CALL_3
0x400121e	          0x4c89fe	                            mov rsi, r15	        59	string3.h	FUNCTION_106	CALL_3
0x4001221	          0x4c89c7	                             mov rdi, r8	        59	string3.h	FUNCTION_106	CALL_3
0x4001224	      0xe800000000	                          call 0x4001229	        59	string3.h	FUNCTION_106	CALL_3
0x4001229	      0xe9d5feffff	                           jmp 0x4001103	        59	string3.h	FUNCTION_106	CALL_3
0x400122e	            0x6690	                                     nop	        59	string3.h	FUNCTION_106	CALL_3
0x4001230	      0xb8feffffff	                     mov eax, 0xfffffffe	       325	getchar.c	FUNCTION_7	FOR_1	IF_3	CALL_4
0x4001235	            0xeba7	                           jmp 0x40011de	       325	getchar.c	FUNCTION_7	FOR_1	IF_3	CALL_4
0x4001237	    0x660f1f840000	                    nop word [rax + rax]	       325	getchar.c	FUNCTION_7	FOR_1	IF_3	CALL_4
0x4001240	        0x498b4610	            mov rax, qword [r14 + 0x10] 	       260	getchar.c	FUNCTION_5	IF_6	CALL_6
0x4001244	        0x4c8d7808	                      lea r15, [rax + 8]	       260	getchar.c	FUNCTION_5	IF_6	CALL_6
0x4001248	          0x4c89ff	                            mov rdi, r15	       260	getchar.c	FUNCTION_5	IF_6	CALL_6
0x400124b	      0xe800000000	                          call 0x4001250	       260	getchar.c	FUNCTION_5	IF_6	CALL_6
0x4001250	        0x498d3c07	                    lea rdi, [r15 + rax]	       261	getchar.c	FUNCTION_5	IF_6	CALL_7
0x4001254	          0x4889da	                            mov rdx, rbx	       261	getchar.c	FUNCTION_5	IF_6	CALL_7
0x4001257	          0x4c89e6	                            mov rsi, r12	       261	getchar.c	FUNCTION_5	IF_6	CALL_7
0x400125a	      0xe800000000	                          call 0x400125f	       261	getchar.c	FUNCTION_5	IF_6	CALL_7
0x400125f	        0x41295e1c	             sub dword [r14 + 0x1c], ebx	       262	getchar.c	FUNCTION_5	IF_6
0x4001263	      0xe900ffffff	                           jmp 0x4001168	       262	getchar.c	FUNCTION_5	IF_6
0x4001268	     0xf1f84000000	                   nop dword [rax + rax]	       262	getchar.c	FUNCTION_5	IF_6
0x4001270	    0x41c7461c0000	               mov dword [r14 + 0x1c], 0	       244	getchar.c	FUNCTION_5	IF_3
0x4001278	        0x4d897610	             mov qword [r14 + 0x10], r14	       245	getchar.c	FUNCTION_5	IF_3
0x400127c	            0x31c0	                            xor eax, eax	       245	getchar.c	FUNCTION_5	IF_3
0x400127e	      0xe984feffff	                           jmp 0x4001107	       245	getchar.c	FUNCTION_5	IF_3
0x4001283	       0xf1f440000	                   nop dword [rax + rax]	       245	getchar.c	FUNCTION_5	IF_3
0x4001288	      0xc64424109b	            mov byte [rsp + 0x10], 0x9b 	       333	getchar.c	FUNCTION_7	FOR_1	ELSE_2	IF_4
0x400128d	      0xc6442411fd	            mov byte [rsp + 0x11], 0xfd 	       334	getchar.c	FUNCTION_7	FOR_1	ELSE_2	IF_4
0x4001292	      0xc644241251	            mov byte [rsp + 0x12], 0x51 	       335	getchar.c	FUNCTION_7	FOR_1	ELSE_2	IF_4
0x4001297	      0xc644241300	                mov byte [rsp + 0x13], 0	       336	getchar.c	FUNCTION_7	FOR_1	ELSE_2	IF_4
0x400129c	      0xe9fffdffff	                           jmp 0x40010a0	       336	getchar.c	FUNCTION_7	FOR_1	ELSE_2	IF_4
0x40012a1	     0xf1f80000000	                         nop dword [rax]	       336	getchar.c	FUNCTION_7	FOR_1	ELSE_2	IF_4
0x40012a8	    0xc74424040100	                  mov dword [rsp + 4], 1	       312	getchar.c	FUNCTION_7	IF_1
0x40012b0	      0xe99ffdffff	                           jmp 0x4001054	       312	getchar.c	FUNCTION_7	IF_1
0x40012b5	           0xf1f00	                         nop dword [rax]	       312	getchar.c	FUNCTION_7	IF_1
0x40012b8	            0x31ff	                            xor edi, edi	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x40012ba	      0xba05000000	                              mov edx, 5	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x40012bf	      0xbe00000000	                              mov esi, 0	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x40012c4	      0xe800000000	                          call 0x40012c9	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x40012c9	          0x4889c7	                            mov rdi, rax	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x40012cc	      0xe800000000	                          call 0x40012d1	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x40012d1	      0xe992feffff	                           jmp 0x4001168	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x40012d6	      0xe800000000	                          call 0x40012db	       348	getchar.c	FUNCTION_7
typebuf_maplen	WHILE,0:ELSE,0:IF,0:DO,0:CALL,0:functions,0:SWITCH,0:FOR,0	2
0x4002e40	    0x8b0500000000	            mov eax, dword [0x04002e46] 	      1155	getchar.c	FUNCTION_39
0x4002e46	              0xc3	                                     ret	      1155	getchar.c	FUNCTION_39
set_context_in_map_cmd	WHILE,0:ELSE,2:IF,10:DO,0:CALL,15:functions,0:SWITCH,0:FOR,1	140
0x4005f60	            0x4157	                                push r15	      4193	getchar.c	FUNCTION_76
0x4005f62	            0x4156	                                push r14	      4193	getchar.c	FUNCTION_76
0x4005f64	          0x4889d0	                            mov rax, rdx	      4193	getchar.c	FUNCTION_76
0x4005f67	            0x4155	                                push r13	      4193	getchar.c	FUNCTION_76
0x4005f69	            0x4154	                                push r12	      4193	getchar.c	FUNCTION_76
0x4005f6b	          0x4989fe	                            mov r14, rdi	      4193	getchar.c	FUNCTION_76
0x4005f6e	              0x55	                                push rbp	      4193	getchar.c	FUNCTION_76
0x4005f6f	              0x53	                                push rbx	      4193	getchar.c	FUNCTION_76
0x4005f70	        0x4883ec08	                              sub rsp, 8	      4193	getchar.c	FUNCTION_76
0x4005f74	        0x8b542440	            mov edx, dword [rsp + 0x40] 	      4193	getchar.c	FUNCTION_76
0x4005f78	    0x81fa06010000	                          cmp edx, 0x106	      4194	getchar.c	FUNCTION_76	IF_1
0x4005f7e	        0x400f95c7	                               setne dil	      4194	getchar.c	FUNCTION_76	IF_1
0x4005f82	    0x81fae4010000	                          cmp edx, 0x1e4	      4194	getchar.c	FUNCTION_76	IF_1
0x4005f88	           0xf95c2	                                setne dl	      4194	getchar.c	FUNCTION_76	IF_1
0x4005f8b	          0x4084d7	                            test dil, dl	      4194	getchar.c	FUNCTION_76	IF_1
0x4005f8e	            0x7420	                            je 0x4005fb0	      4194	getchar.c	FUNCTION_76	IF_1
0x4005f90	            0x85c9	                           test ecx, ecx	      4194	getchar.c	FUNCTION_76	IF_1
0x4005f92	            0x741c	                            je 0x4005fb0	      4194	getchar.c	FUNCTION_76	IF_1
0x4005f94	    0x41c706000000	                      mov dword [r14], 0	      4195	getchar.c	FUNCTION_76	IF_1
0x4005f9b	        0x4883c408	                              add rsp, 8	      4259	getchar.c	FUNCTION_76
0x4005f9f	            0x31c0	                            xor eax, eax	      4259	getchar.c	FUNCTION_76
0x4005fa1	              0x5b	                                 pop rbx	      4259	getchar.c	FUNCTION_76
0x4005fa2	              0x5d	                                 pop rbp	      4259	getchar.c	FUNCTION_76
0x4005fa3	            0x415c	                                 pop r12	      4259	getchar.c	FUNCTION_76
0x4005fa5	            0x415d	                                 pop r13	      4259	getchar.c	FUNCTION_76
0x4005fa7	            0x415e	                                 pop r14	      4259	getchar.c	FUNCTION_76
0x4005fa9	            0x415f	                                 pop r15	      4259	getchar.c	FUNCTION_76
0x4005fab	              0xc3	                                     ret	      4259	getchar.c	FUNCTION_76
0x4005fac	         0xf1f4000	                         nop dword [rax]	      4259	getchar.c	FUNCTION_76
0x4005fb0	          0x4585c9	                           test r9d, r9d	      4198	getchar.c	FUNCTION_76	ELSE_1	IF_2
0x4005fb3	     0xf85e7000000	                           jne 0x40060a0	      4198	getchar.c	FUNCTION_76	ELSE_1	IF_2
0x4005fb9	        0x4183f801	                              cmp r8d, 1	      4202	getchar.c	FUNCTION_76	ELSE_1	ELSE_2
0x4005fbd	            0x19d2	                            sbb edx, edx	      4202	getchar.c	FUNCTION_76	ELSE_1	ELSE_2
0x4005fbf	    0x81e207100000	                         and edx, 0x1007	      4202	getchar.c	FUNCTION_76	ELSE_1	ELSE_2
0x4005fc5	          0x83c218	                           add edx, 0x18	      4202	getchar.c	FUNCTION_76	ELSE_1	ELSE_2
0x4005fc8	    0x891500000000	            mov dword [0x04005fce], edx 	      4202	getchar.c	FUNCTION_76	ELSE_1	ELSE_2
0x4005fce	    0x448905000000	            mov dword [0x04005fd5], r8d 	      4206	getchar.c	FUNCTION_76	ELSE_1
0x4005fd5	      0xbb00000000	                              mov ebx, 0	      4206	getchar.c	FUNCTION_76	ELSE_1
0x4005fda	    0x41c706100000	                   mov dword [r14], 0x10	      4207	getchar.c	FUNCTION_76	ELSE_1
0x4005fe1	    0xc70500000000	               mov dword [0x04005feb], 0	      4209	getchar.c	FUNCTION_76	ELSE_1
0x4005feb	      0xbd00000000	                              mov ebp, 0	      4209	getchar.c	FUNCTION_76	ELSE_1
0x4005ff0	    0x41bc00000000	                             mov r12d, 0	      4209	getchar.c	FUNCTION_76	ELSE_1
0x4005ff6	    0x41bd00000000	                             mov r13d, 0	      4209	getchar.c	FUNCTION_76	ELSE_1
0x4005ffc	    0x41bf00000000	                             mov r15d, 0	      4209	getchar.c	FUNCTION_76	ELSE_1
0x4006002	    0x660f1f440000	                    nop word [rax + rax]	      4209	getchar.c	FUNCTION_76	ELSE_1
0x4006008	      0xb908000000	                              mov ecx, 8	      4214	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_4	CALL_2
0x400600d	          0x4889c6	                            mov rsi, rax	      4214	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_4	CALL_2
0x4006010	          0x4889df	                            mov rdi, rbx	      4214	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_4	CALL_2
0x4006013	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4214	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_4	CALL_2
0x4006015	     0xf8439010000	                            je 0x4006154	      4214	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_4	CALL_2
0x400601b	      0xb908000000	                              mov ecx, 8	      4221	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_5	CALL_4
0x4006020	          0x4889c6	                            mov rsi, rax	      4221	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_5	CALL_4
0x4006023	          0x4889ef	                            mov rdi, rbp	      4221	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_5	CALL_4
0x4006026	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4221	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_5	CALL_4
0x4006028	     0xf840a010000	                            je 0x4006138	      4221	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_5	CALL_4
0x400602e	      0xb908000000	                              mov ecx, 8	      4226	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_6	CALL_6
0x4006033	          0x4889c6	                            mov rsi, rax	      4226	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_6	CALL_6
0x4006036	          0x4c89e7	                            mov rdi, r12	      4226	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_6	CALL_6
0x4006039	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4226	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_6	CALL_6
0x400603b	     0xf84f7000000	                            je 0x4006138	      4226	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_6	CALL_6
0x4006041	      0xb908000000	                              mov ecx, 8	      4231	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_7	CALL_8
0x4006046	          0x4889c6	                            mov rsi, rax	      4231	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_7	CALL_8
0x4006049	          0x4c89ef	                            mov rdi, r13	      4231	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_7	CALL_8
0x400604c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4231	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_7	CALL_8
0x400604e	     0xf84e4000000	                            je 0x4006138	      4231	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_7	CALL_8
0x4006054	      0xb909000000	                              mov ecx, 9	      4236	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_8	CALL_10
0x4006059	          0x4889c6	                            mov rsi, rax	      4236	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_8	CALL_10
0x400605c	          0x4c89ff	                            mov rdi, r15	      4236	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_8	CALL_10
0x400605f	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4236	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_8	CALL_10
0x4006061	     0xf8409010000	                            je 0x4006170	      4236	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_8	CALL_10
0x4006067	      0xb908000000	                              mov ecx, 8	      4242	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_9	CALL_12
0x400606c	          0x4889c6	                            mov rsi, rax	      4242	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_9	CALL_12
0x400606f	      0xbf00000000	                              mov edi, 0	      4242	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_9	CALL_12
0x4006074	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4242	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_9	CALL_12
0x4006076	     0xf84bc000000	                            je 0x4006138	      4242	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_9	CALL_12
0x400607c	      0xb906000000	                              mov ecx, 6	      4247	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_10	CALL_14
0x4006081	          0x4889c6	                            mov rsi, rax	      4247	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_10	CALL_14
0x4006084	      0xbf00000000	                              mov edi, 0	      4247	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_10	CALL_14
0x4006089	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4247	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_10	CALL_14
0x400608b	     0xf84ef000000	                            je 0x4006180	      4247	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_10	CALL_14
0x4006091	        0x49894608	                mov qword [r14 + 8], rax	      4255	getchar.c	FUNCTION_76	ELSE_1
0x4006095	      0xe901ffffff	                           jmp 0x4005f9b	      4255	getchar.c	FUNCTION_76	ELSE_1
0x400609a	    0x660f1f440000	                    nop word [rax + rax]	      4255	getchar.c	FUNCTION_76	ELSE_1
0x40060a0	           0xfb63e	                   movzx edi, byte [rsi]	      3820	getchar.c	FUNCTION_69
0x40060a3	      0xba10000000	                           mov edx, 0x10	      3822	getchar.c	FUNCTION_69	IF_1
0x40060a8	          0x83ff69	                           cmp edi, 0x69	      3821	getchar.c	FUNCTION_69	IF_1
0x40060ab	     0xf8417ffffff	                            je 0x4005fc8	      3821	getchar.c	FUNCTION_69	IF_1
0x40060b1	          0x83ff6c	                           cmp edi, 0x6c	      3823	getchar.c	FUNCTION_69	ELSE_1	IF_2
0x40060b4	      0xba20000000	                           mov edx, 0x20	      3824	getchar.c	FUNCTION_69	ELSE_1	IF_2
0x40060b9	     0xf8409ffffff	                            je 0x4005fc8	      3823	getchar.c	FUNCTION_69	ELSE_1	IF_2
0x40060bf	          0x83ff63	                           cmp edi, 0x63	      3825	getchar.c	FUNCTION_69	ELSE_2	IF_3
0x40060c2	      0xba08000000	                              mov edx, 8	      3826	getchar.c	FUNCTION_69	ELSE_2	IF_3
0x40060c7	     0xf84fbfeffff	                            je 0x4005fc8	      3825	getchar.c	FUNCTION_69	ELSE_2	IF_3
0x40060cd	          0x83ff6e	                           cmp edi, 0x6e	      3827	getchar.c	FUNCTION_69	ELSE_3	IF_4
0x40060d0	     0xf84b8000000	                            je 0x400618e	      3827	getchar.c	FUNCTION_69	ELSE_3	IF_4
0x40060d6	          0x83ff76	                           cmp edi, 0x76	      3829	getchar.c	FUNCTION_69	ELSE_4	IF_5
0x40060d9	      0xba02100000	                         mov edx, 0x1002	      3830	getchar.c	FUNCTION_69	ELSE_4	IF_5
0x40060de	     0xf84e4feffff	                            je 0x4005fc8	      3829	getchar.c	FUNCTION_69	ELSE_4	IF_5
0x40060e4	          0x83ff78	                           cmp edi, 0x78	      3831	getchar.c	FUNCTION_69	ELSE_5	IF_6
0x40060e7	      0xba02000000	                              mov edx, 2	      3832	getchar.c	FUNCTION_69	ELSE_5	IF_6
0x40060ec	     0xf84d6feffff	                            je 0x4005fc8	      3831	getchar.c	FUNCTION_69	ELSE_5	IF_6
0x40060f2	          0x83ff73	                           cmp edi, 0x73	      3833	getchar.c	FUNCTION_69	ELSE_6	IF_7
0x40060f5	      0xba00100000	                         mov edx, 0x1000	      3834	getchar.c	FUNCTION_69	ELSE_6	IF_7
0x40060fa	     0xf84c8feffff	                            je 0x4005fc8	      3833	getchar.c	FUNCTION_69	ELSE_6	IF_7
0x4006100	          0x83ff6f	                           cmp edi, 0x6f	      3835	getchar.c	FUNCTION_69	ELSE_7	IF_8
0x4006103	      0xba04000000	                              mov edx, 4	      3836	getchar.c	FUNCTION_69	ELSE_7	IF_8
0x4006108	     0xf84bafeffff	                            je 0x4005fc8	      3835	getchar.c	FUNCTION_69	ELSE_7	IF_8
0x400610e	          0x83ff74	                           cmp edi, 0x74	      3837	getchar.c	FUNCTION_69	ELSE_8	IF_9
0x4006111	      0xba00200000	                         mov edx, 0x2000	      3838	getchar.c	FUNCTION_69	ELSE_8	IF_9
0x4006116	     0xf84acfeffff	                            je 0x4005fc8	      3837	getchar.c	FUNCTION_69	ELSE_8	IF_9
0x400611c	          0x4409c1	                             or ecx, r8d	      3842	getchar.c	FUNCTION_69	ELSE_9	IF_10
0x400611f	          0x83f901	                              cmp ecx, 1	      3843	getchar.c	FUNCTION_69	ELSE_9	IF_10
0x4006122	            0x19d2	                            sbb edx, edx	      3843	getchar.c	FUNCTION_69	ELSE_9	IF_10
0x4006124	    0x81e2ef0f0000	                          and edx, 0xfef	      3843	getchar.c	FUNCTION_69	ELSE_9	IF_10
0x400612a	          0x83c218	                           add edx, 0x18	      3843	getchar.c	FUNCTION_69	ELSE_9	IF_10
0x400612d	      0xe996feffff	                           jmp 0x4005fc8	      3843	getchar.c	FUNCTION_69	ELSE_9	IF_10
0x4006132	    0x660f1f440000	                    nop word [rax + rax]	      3843	getchar.c	FUNCTION_69	ELSE_9	IF_10
0x4006138	        0x488d7808	                      lea rdi, [rax + 8]	      4244	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_9	CALL_13
0x400613c	      0xe800000000	                          call 0x4006141	      4244	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_9	CALL_13
0x4006141	      0xb908000000	                              mov ecx, 8	      4214	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_4	CALL_2
0x4006146	          0x4889c6	                            mov rsi, rax	      4214	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_4	CALL_2
0x4006149	          0x4889df	                            mov rdi, rbx	      4214	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_4	CALL_2
0x400614c	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	      4214	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_4	CALL_2
0x400614e	     0xf85c7feffff	                           jne 0x400601b	      4214	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_4	CALL_2
0x4006154	        0x488d7808	                      lea rdi, [rax + 8]	      4217	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_4	CALL_3
0x4006158	    0xc70500000000	               mov dword [0x04006162], 1	      4216	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_4
0x4006162	      0xe800000000	                          call 0x4006167	      4217	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_4	CALL_3
0x4006167	      0xe99cfeffff	                           jmp 0x4006008	      4218	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_4
0x400616c	         0xf1f4000	                         nop dword [rax]	      4218	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_4
0x4006170	        0x488d7809	                      lea rdi, [rax + 9]	      4238	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_8	CALL_11
0x4006174	      0xe800000000	                          call 0x4006179	      4238	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_8	CALL_11
0x4006179	      0xe98afeffff	                           jmp 0x4006008	      4239	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_8
0x400617e	            0x6690	                                     nop	      4239	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_8
0x4006180	        0x488d7806	                      lea rdi, [rax + 6]	      4249	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_10	CALL_15
0x4006184	      0xe800000000	                          call 0x4006189	      4249	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_10	CALL_15
0x4006189	      0xe97afeffff	                           jmp 0x4006008	      4250	getchar.c	FUNCTION_76	ELSE_1	FOR_1	IF_10
0x400618e	        0x807e016f	                cmp byte [rsi + 1], 0x6f	      3827	getchar.c	FUNCTION_69	ELSE_3	IF_4
0x4006192	      0xba01000000	                              mov edx, 1	      3828	getchar.c	FUNCTION_69	ELSE_3	IF_4
0x4006197	     0xf852bfeffff	                           jne 0x4005fc8	      3827	getchar.c	FUNCTION_69	ELSE_3	IF_4
0x400619d	      0xe97affffff	                           jmp 0x400611c	      3827	getchar.c	FUNCTION_69	ELSE_3	IF_4
vim_strsave_escape_csi	WHILE,0:ELSE,1:IF,2:DO,0:CALL,5:functions,0:SWITCH,0:FOR,1	60
0x4006590	            0x4154	                                push r12	      4689	getchar.c	FUNCTION_80
0x4006592	              0x55	                                push rbp	      4689	getchar.c	FUNCTION_80
0x4006593	              0x53	                                push rbx	      4689	getchar.c	FUNCTION_80
0x4006594	          0x4889fb	                            mov rbx, rdi	      4689	getchar.c	FUNCTION_80
0x4006597	      0xe800000000	                          call 0x400659c	      4696	getchar.c	FUNCTION_80	CALL_2
0x400659c	    0x8d3c85010000	                    lea edi, [rax*4 + 1]	      4696	getchar.c	FUNCTION_80	CALL_2
0x40065a3	      0xe800000000	                          call 0x40065a8	      4696	getchar.c	FUNCTION_80	CALL_2
0x40065a8	          0x4885c0	                           test rax, rax	      4703	getchar.c	FUNCTION_80	IF_1
0x40065ab	          0x4889c5	                            mov rbp, rax	      4696	getchar.c	FUNCTION_80	CALL_2
0x40065ae	     0xf8491000000	                            je 0x4006645	      4703	getchar.c	FUNCTION_80	IF_1
0x40065b4	          0x4989c4	                            mov r12, rax	      4703	getchar.c	FUNCTION_80	IF_1
0x40065b7	            0xeb11	                           jmp 0x40065ca	      4703	getchar.c	FUNCTION_80	IF_1
0x40065b9	     0xf1f80000000	                         nop dword [rax]	      4703	getchar.c	FUNCTION_80	IF_1
0x40065c0	      0xe800000000	                          call 0x40065c5	      4720	getchar.c	FUNCTION_80	IF_1	FOR_1	ELSE_1	CALL_5
0x40065c5	            0x4898	                                    cdqe	      4720	getchar.c	FUNCTION_80	IF_1	FOR_1	ELSE_1	CALL_5
0x40065c7	          0x4801c3	                            add rbx, rax	      4720	getchar.c	FUNCTION_80	IF_1	FOR_1	ELSE_1	CALL_5
0x40065ca	           0xfb63b	                   movzx edi, byte [rbx]	      4706	getchar.c	FUNCTION_80	IF_1	FOR_1
0x40065cd	          0x4084ff	                           test dil, dil	      4706	getchar.c	FUNCTION_80	IF_1	FOR_1
0x40065d0	            0x746e	                            je 0x4006640	      4706	getchar.c	FUNCTION_80	IF_1	FOR_1
0x40065d2	        0x4080ff80	                           cmp dil, 0x80	      4708	getchar.c	FUNCTION_80	IF_1	FOR_1	IF_2
0x40065d6	            0x7430	                            je 0x4006608	      4708	getchar.c	FUNCTION_80	IF_1	FOR_1	IF_2
0x40065d8	    0x8b1500000000	            mov edx, dword [0x040065de] 	      4719	getchar.c	FUNCTION_80	IF_1	FOR_1	ELSE_1	CALL_4
0x40065de	            0x85d2	                           test edx, edx	      4719	getchar.c	FUNCTION_80	IF_1	FOR_1	ELSE_1	CALL_4
0x40065e0	            0x756e	                           jne 0x4006650	      4719	getchar.c	FUNCTION_80	IF_1	FOR_1	ELSE_1	CALL_4
0x40065e2	          0x4c89e6	                            mov rsi, r12	      4719	getchar.c	FUNCTION_80	IF_1	FOR_1	ELSE_1	CALL_4
0x40065e5	      0xe800000000	                          call 0x40065ea	      4719	getchar.c	FUNCTION_80	IF_1	FOR_1	ELSE_1	CALL_4
0x40065ea	          0x4989c4	                            mov r12, rax	      4719	getchar.c	FUNCTION_80	IF_1	FOR_1	ELSE_1	CALL_4
0x40065ed	    0x8b0500000000	            mov eax, dword [0x040065f3] 	      4720	getchar.c	FUNCTION_80	IF_1	FOR_1	ELSE_1	CALL_5
0x40065f3	          0x4889df	                            mov rdi, rbx	      4720	getchar.c	FUNCTION_80	IF_1	FOR_1	ELSE_1	CALL_5
0x40065f6	            0x85c0	                           test eax, eax	      4720	getchar.c	FUNCTION_80	IF_1	FOR_1	ELSE_1	CALL_5
0x40065f8	            0x75c6	                           jne 0x40065c0	      4720	getchar.c	FUNCTION_80	IF_1	FOR_1	ELSE_1	CALL_5
0x40065fa	    0xff1500000000	                 call qword [0x04006600]	      4720	getchar.c	FUNCTION_80	IF_1	FOR_1	ELSE_1	CALL_5
0x4006600	            0xebc3	                           jmp 0x40065c5	      4720	getchar.c	FUNCTION_80	IF_1	FOR_1	ELSE_1	CALL_5
0x4006602	    0x660f1f440000	                    nop word [rax + rax]	      4720	getchar.c	FUNCTION_80	IF_1	FOR_1	ELSE_1	CALL_5
0x4006608	        0x807b0100	                   cmp byte [rbx + 1], 0	      4708	getchar.c	FUNCTION_80	IF_1	FOR_1	IF_2
0x400660c	            0x74ca	                            je 0x40065d8	      4708	getchar.c	FUNCTION_80	IF_1	FOR_1	IF_2
0x400660e	        0x807b0200	                   cmp byte [rbx + 2], 0	      4708	getchar.c	FUNCTION_80	IF_1	FOR_1	IF_2
0x4006612	            0x74c4	                            je 0x40065d8	      4708	getchar.c	FUNCTION_80	IF_1	FOR_1	IF_2
0x4006614	        0x41883c24	                     mov byte [r12], dil	      4711	getchar.c	FUNCTION_80	IF_1	FOR_1	IF_2
0x4006618	         0xfb64301	               movzx eax, byte [rbx + 1]	      4712	getchar.c	FUNCTION_80	IF_1	FOR_1	IF_2
0x400661c	        0x4883c303	                              add rbx, 3	      4713	getchar.c	FUNCTION_80	IF_1	FOR_1	IF_2
0x4006620	        0x4983c403	                              add r12, 3	      4713	getchar.c	FUNCTION_80	IF_1	FOR_1	IF_2
0x4006624	      0x41884424fe	                  mov byte [r12 - 2], al	      4712	getchar.c	FUNCTION_80	IF_1	FOR_1	IF_2
0x4006629	         0xfb643ff	               movzx eax, byte [rbx - 1]	      4713	getchar.c	FUNCTION_80	IF_1	FOR_1	IF_2
0x400662d	      0x41884424ff	                  mov byte [r12 - 1], al	      4713	getchar.c	FUNCTION_80	IF_1	FOR_1	IF_2
0x4006632	           0xfb63b	                   movzx edi, byte [rbx]	      4706	getchar.c	FUNCTION_80	IF_1	FOR_1
0x4006635	          0x4084ff	                           test dil, dil	      4706	getchar.c	FUNCTION_80	IF_1	FOR_1
0x4006638	            0x7598	                           jne 0x40065d2	      4706	getchar.c	FUNCTION_80	IF_1	FOR_1
0x400663a	    0x660f1f440000	                    nop word [rax + rax]	      4706	getchar.c	FUNCTION_80	IF_1	FOR_1
0x4006640	      0x41c6042400	                       mov byte [r12], 0	      4723	getchar.c	FUNCTION_80	IF_1
0x4006645	          0x4889e8	                            mov rax, rbp	      4726	getchar.c	FUNCTION_80
0x4006648	              0x5b	                                 pop rbx	      4726	getchar.c	FUNCTION_80
0x4006649	              0x5d	                                 pop rbp	      4726	getchar.c	FUNCTION_80
0x400664a	            0x415c	                                 pop r12	      4726	getchar.c	FUNCTION_80
0x400664c	              0xc3	                                     ret	      4726	getchar.c	FUNCTION_80
0x400664d	           0xf1f00	                         nop dword [rax]	      4726	getchar.c	FUNCTION_80
0x4006650	          0x4889df	                            mov rdi, rbx	      4719	getchar.c	FUNCTION_80	IF_1	FOR_1	ELSE_1	CALL_4
0x4006653	    0xff1500000000	                 call qword [0x04006659]	      4719	getchar.c	FUNCTION_80	IF_1	FOR_1	ELSE_1	CALL_4
0x4006659	            0x89c7	                            mov edi, eax	      4719	getchar.c	FUNCTION_80	IF_1	FOR_1	ELSE_1	CALL_4
0x400665b	            0xeb85	                           jmp 0x40065e2	      4719	getchar.c	FUNCTION_80	IF_1	FOR_1	ELSE_1	CALL_4
map_to_exists	WHILE,0:ELSE,0:IF,8:DO,0:CALL,11:functions,0:SWITCH,0:FOR,0	152
0x4005bf0	            0x4157	                                push r15	      4084	getchar.c	FUNCTION_74
0x4005bf2	            0x4156	                                push r14	      4084	getchar.c	FUNCTION_74
0x4005bf4	          0x4531c0	                            xor r8d, r8d	      4090	getchar.c	FUNCTION_74	CALL_1
0x4005bf7	            0x4155	                                push r13	      4084	getchar.c	FUNCTION_74
0x4005bf9	            0x4154	                                push r12	      4084	getchar.c	FUNCTION_74
0x4005bfb	      0xb901000000	                              mov ecx, 1	      4090	getchar.c	FUNCTION_74	CALL_1
0x4005c00	              0x55	                                push rbp	      4084	getchar.c	FUNCTION_74
0x4005c01	              0x53	                                push rbx	      4084	getchar.c	FUNCTION_74
0x4005c02	          0x4889f5	                            mov rbp, rsi	      4084	getchar.c	FUNCTION_74
0x4005c05	          0x4531ff	                          xor r15d, r15d	      4085	getchar.c	FUNCTION_74
0x4005c08	        0x4883ec38	                           sub rsp, 0x38	      4084	getchar.c	FUNCTION_74
0x4005c0c	      0x488d742420	                   lea rsi, [rsp + 0x20]	      4090	getchar.c	FUNCTION_74	CALL_1
0x4005c11	        0x8954240c	              mov dword [rsp + 0xc], edx	      4084	getchar.c	FUNCTION_74
0x4005c15	            0x31d2	                            xor edx, edx	      4090	getchar.c	FUNCTION_74	CALL_1
0x4005c17	    0x64488b042528	                mov rax, qword fs:[0x28]	      4084	getchar.c	FUNCTION_74
0x4005c20	      0x4889442428	             mov qword [rsp + 0x28], rax	      4084	getchar.c	FUNCTION_74
0x4005c25	            0x31c0	                            xor eax, eax	      4084	getchar.c	FUNCTION_74
0x4005c27	      0xe800000000	                          call 0x4005c2c	      4090	getchar.c	FUNCTION_74	CALL_1
0x4005c2c	      0xbe6e000000	                           mov esi, 0x6e	      4092	getchar.c	FUNCTION_74	IF_1	CALL_2
0x4005c31	          0x4889ef	                            mov rdi, rbp	      4092	getchar.c	FUNCTION_74	IF_1	CALL_2
0x4005c34	          0x4889c3	                            mov rbx, rax	      4090	getchar.c	FUNCTION_74	CALL_1
0x4005c37	      0xe800000000	                          call 0x4005c3c	      4092	getchar.c	FUNCTION_74	IF_1	CALL_2
0x4005c3c	          0x4885c0	                           test rax, rax	      4085	getchar.c	FUNCTION_74
0x4005c3f	      0xbe76000000	                           mov esi, 0x76	      4094	getchar.c	FUNCTION_74	IF_2	CALL_3
0x4005c44	          0x4889ef	                            mov rdi, rbp	      4094	getchar.c	FUNCTION_74	IF_2	CALL_3
0x4005c47	        0x410f95c7	                              setne r15b	      4085	getchar.c	FUNCTION_74
0x4005c4b	      0xe800000000	                          call 0x4005c50	      4094	getchar.c	FUNCTION_74	IF_2	CALL_3
0x4005c50	          0x4489fa	                           mov edx, r15d	      4095	getchar.c	FUNCTION_74	IF_2
0x4005c53	      0xbe78000000	                           mov esi, 0x78	      4096	getchar.c	FUNCTION_74	IF_3	CALL_4
0x4005c58	          0x4889ef	                            mov rdi, rbp	      4096	getchar.c	FUNCTION_74	IF_3	CALL_4
0x4005c5b	    0x81ca02100000	                          or edx, 0x1002	      4095	getchar.c	FUNCTION_74	IF_2
0x4005c61	          0x4885c0	                           test rax, rax	      4095	getchar.c	FUNCTION_74	IF_2
0x4005c64	        0x440f45fa	                        cmovne r15d, edx	      4095	getchar.c	FUNCTION_74	IF_2
0x4005c68	      0xe800000000	                          call 0x4005c6d	      4096	getchar.c	FUNCTION_74	IF_3	CALL_4
0x4005c6d	          0x4489fa	                           mov edx, r15d	      4097	getchar.c	FUNCTION_74	IF_3
0x4005c70	      0xbe73000000	                           mov esi, 0x73	      4098	getchar.c	FUNCTION_74	IF_4	CALL_5
0x4005c75	          0x4889ef	                            mov rdi, rbp	      4098	getchar.c	FUNCTION_74	IF_4	CALL_5
0x4005c78	          0x83ca02	                               or edx, 2	      4097	getchar.c	FUNCTION_74	IF_3
0x4005c7b	          0x4885c0	                           test rax, rax	      4097	getchar.c	FUNCTION_74	IF_3
0x4005c7e	        0x440f45fa	                        cmovne r15d, edx	      4097	getchar.c	FUNCTION_74	IF_3
0x4005c82	      0xe800000000	                          call 0x4005c87	      4098	getchar.c	FUNCTION_74	IF_4	CALL_5
0x4005c87	          0x4489fa	                           mov edx, r15d	      4099	getchar.c	FUNCTION_74	IF_4
0x4005c8a	      0xbe6f000000	                           mov esi, 0x6f	      4100	getchar.c	FUNCTION_74	IF_5	CALL_6
0x4005c8f	          0x4889ef	                            mov rdi, rbp	      4100	getchar.c	FUNCTION_74	IF_5	CALL_6
0x4005c92	          0x80ce10	                             or dh, 0x10	      4099	getchar.c	FUNCTION_74	IF_4
0x4005c95	          0x4885c0	                           test rax, rax	      4099	getchar.c	FUNCTION_74	IF_4
0x4005c98	        0x440f45fa	                        cmovne r15d, edx	      4099	getchar.c	FUNCTION_74	IF_4
0x4005c9c	      0xe800000000	                          call 0x4005ca1	      4100	getchar.c	FUNCTION_74	IF_5	CALL_6
0x4005ca1	          0x4489fa	                           mov edx, r15d	      4101	getchar.c	FUNCTION_74	IF_5
0x4005ca4	      0xbe69000000	                           mov esi, 0x69	      4102	getchar.c	FUNCTION_74	IF_6	CALL_7
0x4005ca9	          0x4889ef	                            mov rdi, rbp	      4102	getchar.c	FUNCTION_74	IF_6	CALL_7
0x4005cac	          0x83ca04	                               or edx, 4	      4101	getchar.c	FUNCTION_74	IF_5
0x4005caf	          0x4885c0	                           test rax, rax	      4101	getchar.c	FUNCTION_74	IF_5
0x4005cb2	        0x440f45fa	                        cmovne r15d, edx	      4101	getchar.c	FUNCTION_74	IF_5
0x4005cb6	      0xe800000000	                          call 0x4005cbb	      4102	getchar.c	FUNCTION_74	IF_6	CALL_7
0x4005cbb	          0x4489fa	                           mov edx, r15d	      4103	getchar.c	FUNCTION_74	IF_6
0x4005cbe	      0xbe6c000000	                           mov esi, 0x6c	      4104	getchar.c	FUNCTION_74	IF_7	CALL_8
0x4005cc3	          0x4889ef	                            mov rdi, rbp	      4104	getchar.c	FUNCTION_74	IF_7	CALL_8
0x4005cc6	          0x83ca10	                            or edx, 0x10	      4103	getchar.c	FUNCTION_74	IF_6
0x4005cc9	          0x4885c0	                           test rax, rax	      4103	getchar.c	FUNCTION_74	IF_6
0x4005ccc	        0x440f45fa	                        cmovne r15d, edx	      4103	getchar.c	FUNCTION_74	IF_6
0x4005cd0	      0xe800000000	                          call 0x4005cd5	      4104	getchar.c	FUNCTION_74	IF_7	CALL_8
0x4005cd5	          0x4489fa	                           mov edx, r15d	      4105	getchar.c	FUNCTION_74	IF_7
0x4005cd8	      0xbe63000000	                           mov esi, 0x63	      4106	getchar.c	FUNCTION_74	IF_8	CALL_9
0x4005cdd	          0x4889ef	                            mov rdi, rbp	      4106	getchar.c	FUNCTION_74	IF_8	CALL_9
0x4005ce0	          0x83ca20	                            or edx, 0x20	      4105	getchar.c	FUNCTION_74	IF_7
0x4005ce3	          0x4885c0	                           test rax, rax	      4105	getchar.c	FUNCTION_74	IF_7
0x4005ce6	        0x440f45fa	                        cmovne r15d, edx	      4105	getchar.c	FUNCTION_74	IF_7
0x4005cea	      0xe800000000	                          call 0x4005cef	      4106	getchar.c	FUNCTION_74	IF_8	CALL_9
0x4005cef	          0x4489fa	                           mov edx, r15d	      4107	getchar.c	FUNCTION_74	IF_8
0x4005cf2	          0x83ca08	                               or edx, 8	      4107	getchar.c	FUNCTION_74	IF_8
0x4005cf5	          0x4885c0	                           test rax, rax	      4107	getchar.c	FUNCTION_74	IF_8
0x4005cf8	        0x440f45fa	                        cmovne r15d, edx	      4107	getchar.c	FUNCTION_74	IF_8
0x4005cfc	    0x8b1500000000	            mov edx, dword [0x04005d02] 	      3802	getchar.c	FUNCTION_68	IF_1
0x4005d02	            0x85d2	                           test edx, edx	      3802	getchar.c	FUNCTION_68	IF_1
0x4005d04	     0xf84f7000000	                            je 0x4005e01	      3802	getchar.c	FUNCTION_68	IF_1
0x4005d0a	    0x488b05000000	            mov rax, qword [0x04005d11] 	      4142	getchar.c	FUNCTION_75	FOR_1	FOR_2	IF_1	IF_3
0x4005d11	          0x4531ed	                          xor r13d, r13d	      4145	getchar.c	FUNCTION_75	FOR_1	FOR_2	IF_1	ELSE_1
0x4005d14	      0x4889442410	             mov qword [rsp + 0x10], rax	      4142	getchar.c	FUNCTION_75	FOR_1	FOR_2	IF_1	IF_3
0x4005d19	    0x488b05000000	            mov rax, qword [0x04005d20] 	      4145	getchar.c	FUNCTION_75	FOR_1	FOR_2	IF_1	ELSE_1
0x4005d20	      0x4889442418	             mov qword [rsp + 0x18], rax	      4145	getchar.c	FUNCTION_75	FOR_1	FOR_2	IF_1	ELSE_1
0x4005d25	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      4136	getchar.c	FUNCTION_75	FOR_1	FOR_2	IF_1
0x4005d29	            0x31ed	                            xor ebp, ebp	      4163	getchar.c	FUNCTION_75	FOR_1
0x4005d2b	    0x41bc01000000	                             mov r12d, 1	      4163	getchar.c	FUNCTION_75	FOR_1
0x4005d31	            0x85c0	                           test eax, eax	      4136	getchar.c	FUNCTION_75	FOR_1	FOR_2	IF_1
0x4005d33	            0x7453	                            je 0x4005d88	      4136	getchar.c	FUNCTION_75	FOR_1	FOR_2	IF_1
0x4005d35	          0x4885ed	                           test rbp, rbp	      4138	getchar.c	FUNCTION_75	FOR_1	FOR_2	IF_1	IF_2
0x4005d38	            0x7566	                           jne 0x4005da0	      4138	getchar.c	FUNCTION_75	FOR_1	FOR_2	IF_1	IF_2
0x4005d3a	          0x4585ed	                         test r13d, r13d	      4141	getchar.c	FUNCTION_75	FOR_1	FOR_2	IF_1	IF_3
0x4005d3d	      0x4c8b742418	            mov r14, qword [rsp + 0x18] 	      4145	getchar.c	FUNCTION_75	FOR_1	FOR_2	IF_1	ELSE_1
0x4005d42	     0xf85a8000000	                           jne 0x4005df0	      4141	getchar.c	FUNCTION_75	FOR_1	FOR_2	IF_1	IF_3
0x4005d48	          0x4d85f6	                           test r14, r14	      4153	getchar.c	FUNCTION_75	FOR_1	FOR_2	ELSE_3	FOR_3
0x4005d4b	            0x742b	                            je 0x4005d78	      4153	getchar.c	FUNCTION_75	FOR_1	FOR_2	ELSE_3	FOR_3
0x4005d4d	           0xf1f00	                         nop dword [rax]	      4153	getchar.c	FUNCTION_75	FOR_1	FOR_2	ELSE_3	FOR_3
0x4005d50	        0x45857e24	          test dword [r14 + 0x24], r15d 	      4155	getchar.c	FUNCTION_75	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5
0x4005d54	            0x7411	                            je 0x4005d67	      4155	getchar.c	FUNCTION_75	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5
0x4005d56	        0x498b7e10	            mov rdi, qword [r14 + 0x10] 	      4156	getchar.c	FUNCTION_75	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	CALL_2
0x4005d5a	          0x4889de	                            mov rsi, rbx	      4156	getchar.c	FUNCTION_75	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	CALL_2
0x4005d5d	      0xe800000000	                          call 0x4005d62	      4156	getchar.c	FUNCTION_75	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	CALL_2
0x4005d62	          0x4885c0	                           test rax, rax	      4156	getchar.c	FUNCTION_75	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	CALL_2
0x4005d65	            0x7559	                           jne 0x4005dc0	      4156	getchar.c	FUNCTION_75	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	CALL_2
0x4005d67	          0x4d8b36	                    mov r14, qword [r14]	      4153	getchar.c	FUNCTION_75	FOR_1	FOR_2	ELSE_3	FOR_3
0x4005d6a	          0x4d85f6	                           test r14, r14	      4153	getchar.c	FUNCTION_75	FOR_1	FOR_2	ELSE_3	FOR_3
0x4005d6d	            0x75e1	                           jne 0x4005d50	      4153	getchar.c	FUNCTION_75	FOR_1	FOR_2	ELSE_3	FOR_3
0x4005d6f	    0x4181fc000100	                         cmp r12d, 0x100	      4134	getchar.c	FUNCTION_75	FOR_1	FOR_2
0x4005d76	            0x7428	                            je 0x4005da0	      4134	getchar.c	FUNCTION_75	FOR_1	FOR_2
0x4005d78	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      4136	getchar.c	FUNCTION_75	FOR_1	FOR_2	IF_1
0x4005d7c	        0x4883c501	                              add rbp, 1	      4136	getchar.c	FUNCTION_75	FOR_1	FOR_2	IF_1
0x4005d80	        0x4183c401	                             add r12d, 1	      4136	getchar.c	FUNCTION_75	FOR_1	FOR_2	IF_1
0x4005d84	            0x85c0	                           test eax, eax	      4136	getchar.c	FUNCTION_75	FOR_1	FOR_2	IF_1
0x4005d86	            0x75ad	                           jne 0x4005d35	      4136	getchar.c	FUNCTION_75	FOR_1	FOR_2	IF_1
0x4005d88	          0x4585ed	                         test r13d, r13d	      4148	getchar.c	FUNCTION_75	FOR_1	FOR_2	ELSE_2	IF_4
0x4005d8b	            0x7423	                            je 0x4005db0	      4148	getchar.c	FUNCTION_75	FOR_1	FOR_2	ELSE_2	IF_4
0x4005d8d	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4149	getchar.c	FUNCTION_75	FOR_1	FOR_2	ELSE_2	IF_4
0x4005d92	    0x4c8bb4e8c009	   mov r14, qword [rax + rbp*8 + 0x9c0] 	      4149	getchar.c	FUNCTION_75	FOR_1	FOR_2	ELSE_2	IF_4
0x4005d9a	            0xebce	                           jmp 0x4005d6a	      4149	getchar.c	FUNCTION_75	FOR_1	FOR_2	ELSE_2	IF_4
0x4005d9c	         0xf1f4000	                         nop dword [rax]	      4149	getchar.c	FUNCTION_75	FOR_1	FOR_2	ELSE_2	IF_4
0x4005da0	          0x4585ed	                         test r13d, r13d	      4161	getchar.c	FUNCTION_75	FOR_1	IF_6
0x4005da3	            0x757d	                           jne 0x4005e22	      4161	getchar.c	FUNCTION_75	FOR_1	IF_6
0x4005da5	    0x41bd01000000	                             mov r13d, 1	      4163	getchar.c	FUNCTION_75	FOR_1
0x4005dab	      0xe975ffffff	                           jmp 0x4005d25	      4163	getchar.c	FUNCTION_75	FOR_1
0x4005db0	    0x4c8b34ed0000	                  mov r14, qword [rbp*8]	      4152	getchar.c	FUNCTION_75	FOR_1	FOR_2	ELSE_3
0x4005db8	            0xebb0	                           jmp 0x4005d6a	      4152	getchar.c	FUNCTION_75	FOR_1	FOR_2	ELSE_3
0x4005dba	    0x660f1f440000	                    nop word [rax + rax]	      4152	getchar.c	FUNCTION_75	FOR_1	FOR_2	ELSE_3
0x4005dc0	      0xbb01000000	                              mov ebx, 1	      4157	getchar.c	FUNCTION_75	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5
0x4005dc5	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	      4110	getchar.c	FUNCTION_74	CALL_11
0x4005dca	      0xe800000000	                          call 0x4005dcf	      4110	getchar.c	FUNCTION_74	CALL_11
0x4005dcf	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      4113	getchar.c	FUNCTION_74
0x4005dd4	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4113	getchar.c	FUNCTION_74
0x4005ddd	            0x89d8	                            mov eax, ebx	      4113	getchar.c	FUNCTION_74
0x4005ddf	            0x7545	                           jne 0x4005e26	      4113	getchar.c	FUNCTION_74
0x4005de1	        0x4883c438	                           add rsp, 0x38	      4113	getchar.c	FUNCTION_74
0x4005de5	              0x5b	                                 pop rbx	      4113	getchar.c	FUNCTION_74
0x4005de6	              0x5d	                                 pop rbp	      4113	getchar.c	FUNCTION_74
0x4005de7	            0x415c	                                 pop r12	      4113	getchar.c	FUNCTION_74
0x4005de9	            0x415d	                                 pop r13	      4113	getchar.c	FUNCTION_74
0x4005deb	            0x415e	                                 pop r14	      4113	getchar.c	FUNCTION_74
0x4005ded	            0x415f	                                 pop r15	      4113	getchar.c	FUNCTION_74
0x4005def	              0xc3	                                     ret	      4113	getchar.c	FUNCTION_74
0x4005df0	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4142	getchar.c	FUNCTION_75	FOR_1	FOR_2	IF_1	IF_3
0x4005df5	    0x4c8bb0c01100	          mov r14, qword [rax + 0x11c0] 	      4142	getchar.c	FUNCTION_75	FOR_1	FOR_2	IF_1	IF_3
0x4005dfc	      0xe947ffffff	                           jmp 0x4005d48	      4142	getchar.c	FUNCTION_75	FOR_1	FOR_2	IF_1	IF_3
0x4005e01	      0xba00000000	                              mov edx, 0	        90	string3.h	FUNCTION_108	CALL_6
0x4005e06	      0xb900010000	                          mov ecx, 0x100	        90	string3.h	FUNCTION_108	CALL_6
0x4005e0b	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_108	CALL_6
0x4005e0d	          0x4889d7	                            mov rdi, rdx	        90	string3.h	FUNCTION_108	CALL_6
0x4005e10	    0xc70500000000	               mov dword [0x04005e1a], 1	      3805	getchar.c	FUNCTION_68	IF_1
0x4005e1a	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_108	CALL_6
0x4005e1d	      0xe9e8feffff	                           jmp 0x4005d0a	        90	string3.h	FUNCTION_108	CALL_6
0x4005e22	            0x31db	                            xor ebx, ebx	      4167	getchar.c	FUNCTION_75
0x4005e24	            0xeb9f	                           jmp 0x4005dc5	      4167	getchar.c	FUNCTION_75
0x4005e26	      0xe800000000	                          call 0x4005e2b	      4113	getchar.c	FUNCTION_74
stop_redo_ins	WHILE,0:ELSE,0:IF,0:DO,0:CALL,0:functions,0:SWITCH,0:FOR,0	2
0x4002950	    0xc70500000000	               mov dword [0x0400295a], 0	       908	getchar.c	FUNCTION_33
0x400295a	              0xc3	                                     ret	       908	getchar.c	FUNCTION_33
typeahead_noflush	WHILE,0:ELSE,0:IF,0:DO,0:CALL,0:functions,0:SWITCH,0:FOR,0	2
0x4001500	    0x893d00000000	            mov dword [0x04001506], edi 	       441	getchar.c	FUNCTION_13
0x4001506	              0xc3	                                     ret	       441	getchar.c	FUNCTION_13
ExpandMappings	WHILE,1:ELSE,12:IF,20:DO,0:CALL,10:functions,0:SWITCH,0:FOR,4	249
0x40061b0	            0x4157	                                push r15	      4271	getchar.c	FUNCTION_77
0x40061b2	            0x4156	                                push r14	      4271	getchar.c	FUNCTION_77
0x40061b4	          0x4989d7	                            mov r15, rdx	      4271	getchar.c	FUNCTION_77
0x40061b7	            0x4155	                                push r13	      4271	getchar.c	FUNCTION_77
0x40061b9	            0x4154	                                push r12	      4271	getchar.c	FUNCTION_77
0x40061bb	              0x55	                                push rbp	      4271	getchar.c	FUNCTION_77
0x40061bc	              0x53	                                push rbx	      4271	getchar.c	FUNCTION_77
0x40061bd	        0x4883ec28	                           sub rsp, 0x28	      4271	getchar.c	FUNCTION_77
0x40061c1	    0x8b0d00000000	            mov ecx, dword [0x040061c7] 	      3802	getchar.c	FUNCTION_68	IF_1
0x40061c7	        0x48893c24	                    mov qword [rsp], rdi	      4271	getchar.c	FUNCTION_77
0x40061cb	      0x4889742410	             mov qword [rsp + 0x10], rsi	      4271	getchar.c	FUNCTION_77
0x40061d0	            0x85c9	                           test ecx, ecx	      3802	getchar.c	FUNCTION_68	IF_1
0x40061d2	     0xf8495020000	                            je 0x400646d	      3802	getchar.c	FUNCTION_68	IF_1
0x40061d8	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4281	getchar.c	FUNCTION_77
0x40061dd	    0xc74424080100	                  mov dword [rsp + 8], 1	      4282	getchar.c	FUNCTION_77
0x40061e5	    0xc744240c0200	                mov dword [rsp + 0xc], 2	      4282	getchar.c	FUNCTION_77
0x40061ed	    0xc70000000000	                      mov dword [rax], 0	      4281	getchar.c	FUNCTION_77
0x40061f3	    0x49c707000000	                      mov qword [r15], 0	      4282	getchar.c	FUNCTION_77
0x40061fa	      0xbd01000000	                              mov ebp, 1	      4271	getchar.c	FUNCTION_77
0x40061ff	          0x4531e4	                          xor r12d, r12d	      4271	getchar.c	FUNCTION_77
0x4006202	            0x31db	                            xor ebx, ebx	      4271	getchar.c	FUNCTION_77
0x4006204	            0xeb1a	                           jmp 0x4006220	      4271	getchar.c	FUNCTION_77
0x4006206	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      4271	getchar.c	FUNCTION_77
0x4006210	          0x83fd07	                              cmp ebp, 7	      4292	getchar.c	FUNCTION_77	FOR_1	FOR_2
0x4006213	     0xf8497000000	                            je 0x40062b0	      4292	getchar.c	FUNCTION_77	FOR_1	FOR_2
0x4006219	        0x4183c401	                             add r12d, 1	      4292	getchar.c	FUNCTION_77	FOR_1	FOR_2
0x400621d	          0x83c501	                              add ebp, 1	      4292	getchar.c	FUNCTION_77	FOR_1	FOR_2
0x4006220	          0x4585e4	                         test r12d, r12d	      4294	getchar.c	FUNCTION_77	FOR_1	FOR_2	IF_1
0x4006223	     0xf8400030000	                            je 0x4006529	      4294	getchar.c	FUNCTION_77	FOR_1	FOR_2	IF_1
0x4006229	        0x4183fc01	                             cmp r12d, 1	      4296	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_1	IF_2
0x400622d	     0xf8424030000	                            je 0x4006557	      4296	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_1	IF_2
0x4006233	        0x4183fc02	                             cmp r12d, 2	      4299	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_2	IF_3
0x4006237	     0xf840f030000	                            je 0x400654c	      4299	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_2	IF_3
0x400623d	        0x4183fc03	                             cmp r12d, 3	      4301	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_3	IF_4
0x4006241	     0xf844b020000	                            je 0x4006492	      4301	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_3	IF_4
0x4006247	        0x4183fc04	                             cmp r12d, 4	      4305	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_4	IF_5
0x400624b	     0xf8424030000	                            je 0x4006575	      4305	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_4	IF_5
0x4006251	        0x4183fc05	                             cmp r12d, 5	      4308	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_5	IF_6
0x4006255	     0xf840f030000	                            je 0x400656a	      4308	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_5	IF_6
0x400625b	        0x4183fc06	                             cmp r12d, 6	      4310	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_6	IF_7
0x400625f	            0x75af	                           jne 0x4006210	      4310	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_6	IF_7
0x4006261	        0x488b3c24	                    mov rdi, qword [rsp]	      4315	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_2
0x4006265	            0x31d2	                            xor edx, edx	      4315	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_2
0x4006267	      0xbe00000000	                              mov esi, 0	      4315	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_2
0x400626c	      0xe800000000	                          call 0x4006271	      4315	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_2
0x4006271	            0x85c0	                           test eax, eax	      4315	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_2
0x4006273	            0x743b	                            je 0x40062b0	      4315	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_2
0x4006275	    0x41bd00000000	                             mov r13d, 0	      4311	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_6	IF_7
0x400627b	      0x837c240801	                  cmp dword [rsp + 8], 1	      4317	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	IF_9
0x4006280	     0xf84dc020000	                            je 0x4006562	      4317	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	IF_9
0x4006286	          0x498b07	                    mov rax, qword [r15]	      4320	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_3
0x4006289	        0x448d7301	                     lea r14d, [rbx + 1]	      4320	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_3
0x400628d	          0x4863db	                         movsxd rbx, ebx	      4320	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_3
0x4006290	          0x4c89ef	                            mov rdi, r13	      4320	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_3
0x4006293	        0x488d1cd8	                  lea rbx, [rax + rbx*8]	      4320	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_3
0x4006297	      0xe800000000	                          call 0x400629c	      4320	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_3
0x400629c	          0x488903	                    mov qword [rbx], rax	      4320	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_3
0x400629f	          0x4489f3	                           mov ebx, r14d	      4320	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_3
0x40062a2	      0xe969ffffff	                           jmp 0x4006210	      4320	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_3
0x40062a7	    0x660f1f840000	                    nop word [rax + rax]	      4320	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_3
0x40062b0	    0x8b0500000000	            mov eax, dword [0x040062b6] 	      4320	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_3
0x40062b6	            0x31ed	                            xor ebp, ebp	      4320	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_3
0x40062b8	    0x41bc01000000	                             mov r12d, 1	      4320	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_3
0x40062be	          0x4863d5	                         movsxd rdx, ebp	      4320	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_3
0x40062c1	            0x85c0	                           test eax, eax	      4326	getchar.c	FUNCTION_77	FOR_1	FOR_3	IF_10
0x40062c3	     0xf84a5000000	                            je 0x400636e	      4326	getchar.c	FUNCTION_77	FOR_1	FOR_3	IF_10
0x40062c9	          0x4885ed	                           test rbp, rbp	      4328	getchar.c	FUNCTION_77	FOR_1	FOR_3	IF_10	IF_11
0x40062cc	     0xf85c6000000	                           jne 0x4006398	      4328	getchar.c	FUNCTION_77	FOR_1	FOR_3	IF_10	IF_11
0x40062d2	    0x4c8b35000000	            mov r14, qword [0x040062d9] 	      4330	getchar.c	FUNCTION_77	FOR_1	FOR_3	IF_10
0x40062d9	          0x4d85f6	                           test r14, r14	      4338	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4
0x40062dc	            0x747d	                            je 0x400635b	      4338	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4
0x40062de	      0x837c240801	                  cmp dword [rsp + 8], 1	      4338	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4
0x40062e3	            0x7513	                           jne 0x40062f8	      4338	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4
0x40062e5	      0xe9c9010000	                           jmp 0x40064b3	      4338	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4
0x40062ea	    0x660f1f440000	                    nop word [rax + rax]	      4338	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4
0x40062f0	          0x4d8b36	                    mov r14, qword [r14]	      4338	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4
0x40062f3	          0x4d85f6	                           test r14, r14	      4338	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4
0x40062f6	            0x7454	                            je 0x400634c	      4338	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4
0x40062f8	    0x8b0500000000	            mov eax, dword [0x040062fe] 	      4340	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13
0x40062fe	        0x41854624	           test dword [r14 + 0x24], eax 	      4340	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13
0x4006302	            0x74ec	                            je 0x40062f0	      4340	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13
0x4006304	        0x498b7e08	                mov rdi, qword [r14 + 8]	      4342	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	CALL_4
0x4006308	      0xbe01000000	                              mov esi, 1	      4342	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	CALL_4
0x400630d	      0xe800000000	                          call 0x4006312	      4342	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	CALL_4
0x4006312	          0x4885c0	                           test rax, rax	      4343	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	IF_14	CALL_5
0x4006315	          0x4989c5	                            mov r13, rax	      4342	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	CALL_4
0x4006318	            0x7422	                            je 0x400633c	      4343	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	IF_14	CALL_5
0x400631a	        0x488b3c24	                    mov rdi, qword [rsp]	      4343	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	IF_14	CALL_5
0x400631e	            0x31d2	                            xor edx, edx	      4343	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	IF_14	CALL_5
0x4006320	          0x4889c6	                            mov rsi, rax	      4343	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	IF_14	CALL_5
0x4006323	      0xe800000000	                          call 0x4006328	      4343	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	IF_14	CALL_5
0x4006328	            0x85c0	                           test eax, eax	      4343	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	IF_14	CALL_5
0x400632a	            0x7410	                            je 0x400633c	      4343	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	IF_14	CALL_5
0x400632c	          0x498b07	                    mov rax, qword [r15]	      4349	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	IF_14	ELSE_11
0x400632f	          0x4863d3	                         movsxd rdx, ebx	      4349	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	IF_14	ELSE_11
0x4006332	          0x83c301	                              add ebx, 1	      4349	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	IF_14	ELSE_11
0x4006335	        0x4c892cd0	            mov qword [rax + rdx*8], r13	      4349	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	IF_14	ELSE_11
0x4006339	          0x4531ed	                          xor r13d, r13d	      4350	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	IF_14	ELSE_11
0x400633c	          0x4c89ef	                            mov rdi, r13	      4353	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	CALL_6
0x400633f	      0xe800000000	                          call 0x4006344	      4353	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	CALL_6
0x4006344	          0x4d8b36	                    mov r14, qword [r14]	      4338	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4
0x4006347	          0x4d85f6	                           test r14, r14	      4338	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4
0x400634a	            0x75ac	                           jne 0x40062f8	      4338	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4
0x400634c	    0x4181fc000100	                         cmp r12d, 0x100	      4324	getchar.c	FUNCTION_77	FOR_1	FOR_3
0x4006353	            0x7443	                            je 0x4006398	      4324	getchar.c	FUNCTION_77	FOR_1	FOR_3
0x4006355	    0x8b0500000000	            mov eax, dword [0x0400635b] 	      4324	getchar.c	FUNCTION_77	FOR_1	FOR_3
0x400635b	        0x4883c501	                              add rbp, 1	      4324	getchar.c	FUNCTION_77	FOR_1	FOR_3
0x400635f	        0x4183c401	                             add r12d, 1	      4324	getchar.c	FUNCTION_77	FOR_1	FOR_3
0x4006363	            0x85c0	                           test eax, eax	      4326	getchar.c	FUNCTION_77	FOR_1	FOR_3	IF_10
0x4006365	          0x4863d5	                         movsxd rdx, ebp	      4326	getchar.c	FUNCTION_77	FOR_1	FOR_3	IF_10
0x4006368	     0xf855bffffff	                           jne 0x40062c9	      4326	getchar.c	FUNCTION_77	FOR_1	FOR_3	IF_10
0x400636e	    0x8b0500000000	            mov eax, dword [0x04006374] 	      4333	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_9	IF_12
0x4006374	            0x85c0	                           test eax, eax	      4333	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_9	IF_12
0x4006376	            0x7450	                            je 0x40063c8	      4333	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_9	IF_12
0x4006378	    0x488b05000000	            mov rax, qword [0x0400637f] 	      4334	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_9	IF_12
0x400637f	    0x4c8bb4d0c009	   mov r14, qword [rax + rdx*8 + 0x9c0] 	      4334	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_9	IF_12
0x4006387	          0x4d85f6	                           test r14, r14	      4338	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4
0x400638a	     0xf854effffff	                           jne 0x40062de	      4338	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4
0x4006390	            0xebba	                           jmp 0x400634c	      4338	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4
0x4006392	    0x660f1f440000	                    nop word [rax + rax]	      4338	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4
0x4006398	            0x85db	                           test ebx, ebx	      4358	getchar.c	FUNCTION_77	FOR_1	IF_16
0x400639a	     0xf84ee000000	                            je 0x400648e	      4358	getchar.c	FUNCTION_77	FOR_1	IF_16
0x40063a0	      0x837c240801	                  cmp dword [rsp + 8], 1	      4361	getchar.c	FUNCTION_77	FOR_1	IF_17
0x40063a5	     0xf8421010000	                            je 0x40064cc	      4361	getchar.c	FUNCTION_77	FOR_1	IF_17
0x40063ab	      0x837c240c03	                cmp dword [rsp + 0xc], 3	      4288	getchar.c	FUNCTION_77	FOR_1
0x40063b0	            0x7426	                            je 0x40063d8	      4288	getchar.c	FUNCTION_77	FOR_1
0x40063b2	      0x8344240c01	                add dword [rsp + 0xc], 1	      4288	getchar.c	FUNCTION_77	FOR_1
0x40063b7	      0x8344240801	                  add dword [rsp + 8], 1	      4288	getchar.c	FUNCTION_77	FOR_1
0x40063bc	      0xe939feffff	                           jmp 0x40061fa	      4288	getchar.c	FUNCTION_77	FOR_1
0x40063c1	     0xf1f80000000	                         nop dword [rax]	      4288	getchar.c	FUNCTION_77	FOR_1
0x40063c8	    0x4c8b34ed0000	                  mov r14, qword [rbp*8]	      4337	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10
0x40063d0	            0xebb5	                           jmp 0x4006387	      4337	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10
0x40063d2	    0x660f1f440000	                    nop word [rax + rax]	      4337	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10
0x40063d8	          0x83fb01	                              cmp ebx, 1	      4369	getchar.c	FUNCTION_77	IF_19
0x40063db	      0xbd01000000	                              mov ebp, 1	      4369	getchar.c	FUNCTION_77	IF_19
0x40063e0	            0x7473	                            je 0x4006455	      4369	getchar.c	FUNCTION_77	IF_19
0x40063e2	          0x498b3f	                    mov rdi, qword [r15]	      4376	getchar.c	FUNCTION_77	IF_19	CALL_8
0x40063e5	            0x89de	                            mov esi, ebx	      4376	getchar.c	FUNCTION_77	IF_19	CALL_8
0x40063e7	      0xe800000000	                          call 0x40063ec	      4376	getchar.c	FUNCTION_77	IF_19	CALL_8
0x40063ec	          0x4d8b27	                    mov r12, qword [r15]	      4379	getchar.c	FUNCTION_77	IF_19
0x40063ef	          0x4863c3	                         movsxd rax, ebx	      4381	getchar.c	FUNCTION_77	IF_19
0x40063f2	        0x4d8d34c4	                  lea r14, [r12 + rax*8]	      4381	getchar.c	FUNCTION_77	IF_19
0x40063f6	      0x498d442408	                      lea rax, [r12 + 8]	      4383	getchar.c	FUNCTION_77	IF_19	WHILE_1
0x40063fb	          0x4939c6	                            cmp r14, rax	      4383	getchar.c	FUNCTION_77	IF_19	WHILE_1
0x40063fe	            0x7655	                           jbe 0x4006455	      4383	getchar.c	FUNCTION_77	IF_19	WHILE_1
0x4006400	      0x498d6c2410	                   lea rbp, [r12 + 0x10]	      4383	getchar.c	FUNCTION_77	IF_19	WHILE_1
0x4006405	            0xeb1b	                           jmp 0x4006422	      4383	getchar.c	FUNCTION_77	IF_19	WHILE_1
0x4006407	    0x660f1f840000	                    nop word [rax + rax]	      4383	getchar.c	FUNCTION_77	IF_19	WHILE_1
0x4006410	      0x4d897c2408	                mov qword [r12 + 8], r15	      4386	getchar.c	FUNCTION_77	IF_19	WHILE_1	IF_20
0x4006415	        0x4883c508	                              add rbp, 8	      4386	getchar.c	FUNCTION_77	IF_19	WHILE_1	IF_20
0x4006419	        0x4983c408	                              add r12, 8	      4386	getchar.c	FUNCTION_77	IF_19	WHILE_1	IF_20
0x400641d	          0x4d39f5	                            cmp r13, r14	      4383	getchar.c	FUNCTION_77	IF_19	WHILE_1
0x4006420	            0x732b	                           jae 0x400644d	      4383	getchar.c	FUNCTION_77	IF_19	WHILE_1
0x4006422	        0x4c8b7df8	                mov r15, qword [rbp - 8]	      4385	getchar.c	FUNCTION_77	IF_19	WHILE_1	IF_20	CALL_9
0x4006426	        0x498b3c24	                    mov rdi, qword [r12]	      4385	getchar.c	FUNCTION_77	IF_19	WHILE_1	IF_20	CALL_9
0x400642a	          0x4989ed	                            mov r13, rbp	      4385	getchar.c	FUNCTION_77	IF_19	WHILE_1	IF_20	CALL_9
0x400642d	          0x4c89fe	                            mov rsi, r15	      4385	getchar.c	FUNCTION_77	IF_19	WHILE_1	IF_20	CALL_9
0x4006430	      0xe800000000	                          call 0x4006435	      4385	getchar.c	FUNCTION_77	IF_19	WHILE_1	IF_20	CALL_9
0x4006435	            0x85c0	                           test eax, eax	      4385	getchar.c	FUNCTION_77	IF_19	WHILE_1	IF_20	CALL_9
0x4006437	            0x75d7	                           jne 0x4006410	      4385	getchar.c	FUNCTION_77	IF_19	WHILE_1	IF_20	CALL_9
0x4006439	          0x4c89ff	                            mov rdi, r15	      4389	getchar.c	FUNCTION_77	IF_19	WHILE_1	ELSE_12	CALL_10
0x400643c	          0x83eb01	                              sub ebx, 1	      4390	getchar.c	FUNCTION_77	IF_19	WHILE_1	ELSE_12
0x400643f	        0x4883c508	                              add rbp, 8	      4390	getchar.c	FUNCTION_77	IF_19	WHILE_1	ELSE_12
0x4006443	      0xe800000000	                          call 0x4006448	      4389	getchar.c	FUNCTION_77	IF_19	WHILE_1	ELSE_12	CALL_10
0x4006448	          0x4d39f5	                            cmp r13, r14	      4383	getchar.c	FUNCTION_77	IF_19	WHILE_1
0x400644b	            0x72d5	                            jb 0x4006422	      4383	getchar.c	FUNCTION_77	IF_19	WHILE_1
0x400644d	            0x31ed	                            xor ebp, ebp	      4383	getchar.c	FUNCTION_77	IF_19	WHILE_1
0x400644f	            0x85db	                           test ebx, ebx	      4383	getchar.c	FUNCTION_77	IF_19	WHILE_1
0x4006451	        0x400f95c5	                               setne bpl	      4383	getchar.c	FUNCTION_77	IF_19	WHILE_1
0x4006455	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      4395	getchar.c	FUNCTION_77
0x400645a	            0x8918	                    mov dword [rax], ebx	      4395	getchar.c	FUNCTION_77
0x400645c	        0x4883c428	                           add rsp, 0x28	      4397	getchar.c	FUNCTION_77
0x4006460	            0x89e8	                            mov eax, ebp	      4397	getchar.c	FUNCTION_77
0x4006462	              0x5b	                                 pop rbx	      4397	getchar.c	FUNCTION_77
0x4006463	              0x5d	                                 pop rbp	      4397	getchar.c	FUNCTION_77
0x4006464	            0x415c	                                 pop r12	      4397	getchar.c	FUNCTION_77
0x4006466	            0x415d	                                 pop r13	      4397	getchar.c	FUNCTION_77
0x4006468	            0x415e	                                 pop r14	      4397	getchar.c	FUNCTION_77
0x400646a	            0x415f	                                 pop r15	      4397	getchar.c	FUNCTION_77
0x400646c	              0xc3	                                     ret	      4397	getchar.c	FUNCTION_77
0x400646d	      0xba00000000	                              mov edx, 0	        90	string3.h	FUNCTION_108	CALL_6
0x4006472	      0xb900010000	                          mov ecx, 0x100	        90	string3.h	FUNCTION_108	CALL_6
0x4006477	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_108	CALL_6
0x4006479	          0x4889d7	                            mov rdi, rdx	        90	string3.h	FUNCTION_108	CALL_6
0x400647c	    0xc70500000000	               mov dword [0x04006486], 1	      3805	getchar.c	FUNCTION_68	IF_1
0x4006486	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_108	CALL_6
0x4006489	      0xe94afdffff	                           jmp 0x40061d8	        90	string3.h	FUNCTION_108	CALL_6
0x400648e	            0x31ed	                            xor ebp, ebp	        90	string3.h	FUNCTION_108	CALL_6
0x4006490	            0xebc3	                           jmp 0x4006455	        90	string3.h	FUNCTION_108	CALL_6
0x4006492	    0x41bd00000000	                             mov r13d, 0	      4302	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_3	IF_4
0x4006498	        0x488b3c24	                    mov rdi, qword [rsp]	      4315	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_2
0x400649c	            0x31d2	                            xor edx, edx	      4315	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_2
0x400649e	          0x4c89ee	                            mov rsi, r13	      4315	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_2
0x40064a1	      0xe800000000	                          call 0x40064a6	      4315	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_2
0x40064a6	            0x85c0	                           test eax, eax	      4315	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_2
0x40064a8	     0xf846bfdffff	                            je 0x4006219	      4315	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_2
0x40064ae	      0xe9c8fdffff	                           jmp 0x400627b	      4315	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_2
0x40064b3	        0x418b4624	            mov eax, dword [r14 + 0x24] 	      4340	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13
0x40064b7	    0x850500000000	           test dword [0x040064bd], eax 	      4340	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13
0x40064bd	            0x752c	                           jne 0x40064eb	      4340	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13
0x40064bf	          0x4d8b36	                    mov r14, qword [r14]	      4338	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4
0x40064c2	          0x4d85f6	                           test r14, r14	      4338	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4
0x40064c5	            0x75ec	                           jne 0x40064b3	      4338	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4
0x40064c7	      0xe980feffff	                           jmp 0x400634c	      4338	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4
0x40064cc	    0x8d3cdd000000	                        lea edi, [rbx*8]	      4363	getchar.c	FUNCTION_77	FOR_1	IF_17	CALL_7
0x40064d3	      0xe800000000	                          call 0x40064d8	      4363	getchar.c	FUNCTION_77	FOR_1	IF_17	CALL_7
0x40064d8	          0x4885c0	                           test rax, rax	      4364	getchar.c	FUNCTION_77	FOR_1	IF_17	IF_18
0x40064db	          0x498907	                    mov qword [r15], rax	      4363	getchar.c	FUNCTION_77	FOR_1	IF_17	CALL_7
0x40064de	     0xf85cefeffff	                           jne 0x40063b2	      4364	getchar.c	FUNCTION_77	FOR_1	IF_17	IF_18
0x40064e4	            0x31ed	                            xor ebp, ebp	      4365	getchar.c	FUNCTION_77	FOR_1	IF_17	IF_18
0x40064e6	      0xe971ffffff	                           jmp 0x400645c	      4365	getchar.c	FUNCTION_77	FOR_1	IF_17	IF_18
0x40064eb	        0x498b7e08	                mov rdi, qword [r14 + 8]	      4342	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	CALL_4
0x40064ef	      0xbe01000000	                              mov esi, 1	      4342	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	CALL_4
0x40064f4	      0xe800000000	                          call 0x40064f9	      4342	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	CALL_4
0x40064f9	          0x4885c0	                           test rax, rax	      4343	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	IF_14	CALL_5
0x40064fc	          0x4989c0	                             mov r8, rax	      4342	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	CALL_4
0x40064ff	            0x741e	                            je 0x400651f	      4343	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	IF_14	CALL_5
0x4006501	        0x488b3c24	                    mov rdi, qword [rsp]	      4343	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	IF_14	CALL_5
0x4006505	            0x31d2	                            xor edx, edx	      4343	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	IF_14	CALL_5
0x4006507	          0x4889c6	                            mov rsi, rax	      4343	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	IF_14	CALL_5
0x400650a	      0x4889442418	             mov qword [rsp + 0x18], rax	      4343	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	IF_14	CALL_5
0x400650f	      0xe800000000	                          call 0x4006514	      4343	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	IF_14	CALL_5
0x4006514	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	      4346	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	IF_14	IF_15
0x4006519	          0x83f801	                              cmp eax, 1	      4346	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	IF_14	IF_15
0x400651c	          0x83dbff	             sbb ebx, 0xffffffffffffffff	      4346	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	IF_14	IF_15
0x400651f	          0x4c89c7	                             mov rdi, r8	      4353	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	CALL_6
0x4006522	      0xe800000000	                          call 0x4006527	      4353	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	CALL_6
0x4006527	            0xeb96	                           jmp 0x40064bf	      4353	getchar.c	FUNCTION_77	FOR_1	FOR_3	ELSE_10	FOR_4	IF_13	CALL_6
0x4006529	        0x488b3c24	                    mov rdi, qword [rsp]	      4315	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_2
0x400652d	            0x31d2	                            xor edx, edx	      4315	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_2
0x400652f	      0xbe00000000	                              mov esi, 0	      4315	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_2
0x4006534	      0xe800000000	                          call 0x4006539	      4315	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_2
0x4006539	            0x85c0	                           test eax, eax	      4315	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_2
0x400653b	     0xf84d8fcffff	                            je 0x4006219	      4315	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	CALL_2
0x4006541	    0x41bd00000000	                             mov r13d, 0	      4295	getchar.c	FUNCTION_77	FOR_1	FOR_2	IF_1
0x4006547	      0xe92ffdffff	                           jmp 0x400627b	      4295	getchar.c	FUNCTION_77	FOR_1	FOR_2	IF_1
0x400654c	    0x41bd00000000	                             mov r13d, 0	      4300	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_2	IF_3
0x4006552	      0xe941ffffff	                           jmp 0x4006498	      4300	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_2	IF_3
0x4006557	    0x41bd00000000	                             mov r13d, 0	      4297	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_1	IF_2
0x400655d	      0xe936ffffff	                           jmp 0x4006498	      4297	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_1	IF_2
0x4006562	          0x83c301	                              add ebx, 1	      4318	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	IF_9
0x4006565	      0xe9a6fcffff	                           jmp 0x4006210	      4318	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_7	IF_8	IF_9
0x400656a	    0x41bd00000000	                             mov r13d, 0	      4309	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_5	IF_6
0x4006570	      0xe923ffffff	                           jmp 0x4006498	      4309	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_5	IF_6
0x4006575	    0x8b1500000000	            mov edx, dword [0x0400657b] 	      4305	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_4	IF_5
0x400657b	            0x85d2	                           test edx, edx	      4305	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_4	IF_5
0x400657d	     0xf858dfcffff	                           jne 0x4006210	      4305	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_4	IF_5
0x4006583	    0x41bd00000000	                             mov r13d, 0	      4306	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_4	IF_5
0x4006589	      0xe90affffff	                           jmp 0x4006498	      4306	getchar.c	FUNCTION_77	FOR_1	FOR_2	ELSE_4	IF_5
fix_input_buffer	WHILE,0:ELSE,2:IF,3:DO,0:CALL,4:functions,0:SWITCH,0:FOR,1	83
0x4003870	            0x4154	                                push r12	      3094	getchar.c	FUNCTION_64
0x4003872	              0x55	                                push rbp	      3094	getchar.c	FUNCTION_64
0x4003873	            0x89f5	                            mov ebp, esi	      3105	getchar.c	FUNCTION_64	FOR_1
0x4003875	          0x83ed01	                              sub ebp, 1	      3105	getchar.c	FUNCTION_64	FOR_1
0x4003878	              0x53	                                push rbx	      3094	getchar.c	FUNCTION_64
0x4003879	          0x4189f4	                           mov r12d, esi	      3094	getchar.c	FUNCTION_64
0x400387c	          0x4889fb	                            mov rbx, rdi	      3094	getchar.c	FUNCTION_64
0x400387f	            0x784f	                            js 0x40038d0	      3105	getchar.c	FUNCTION_64	FOR_1
0x4003881	            0x89f0	                            mov eax, esi	      3105	getchar.c	FUNCTION_64	FOR_1
0x4003883	            0xeb22	                           jmp 0x40038a7	      3105	getchar.c	FUNCTION_64	FOR_1
0x4003885	           0xf1f00	                         nop dword [rax]	      3105	getchar.c	FUNCTION_64	FOR_1
0x4003888	          0x80fa9b	                            cmp dl, 0x9b	      3116	getchar.c	FUNCTION_64	FOR_1	ELSE_1	IF_2
0x400388b	     0xf84af000000	                            je 0x4003940	      3116	getchar.c	FUNCTION_64	FOR_1	ELSE_1	IF_2
0x4003891	            0x84d2	                             test dl, dl	      3126	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3
0x4003893	            0x744b	                            je 0x40038e0	      3126	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3
0x4003895	          0x80fa80	                            cmp dl, 0x80	      3126	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3
0x4003898	            0x89e8	                            mov eax, ebp	      3126	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3
0x400389a	            0x7474	                            je 0x4003910	      3126	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3
0x400389c	            0x89c5	                            mov ebp, eax	      3105	getchar.c	FUNCTION_64	FOR_1
0x400389e	        0x4883c301	                              add rbx, 1	      3105	getchar.c	FUNCTION_64	FOR_1
0x40038a2	          0x83ed01	                              sub ebp, 1	      3105	getchar.c	FUNCTION_64	FOR_1
0x40038a5	            0x7829	                            js 0x40038d0	      3105	getchar.c	FUNCTION_64	FOR_1
0x40038a7	    0x8b0d00000000	            mov ecx, dword [0x040038ad] 	      3110	getchar.c	FUNCTION_64	FOR_1	IF_1
0x40038ad	           0xfb613	                   movzx edx, byte [rbx]	      3110	getchar.c	FUNCTION_64	FOR_1	IF_1
0x40038b0	            0x85c9	                           test ecx, ecx	      3110	getchar.c	FUNCTION_64	FOR_1	IF_1
0x40038b2	            0x74d4	                            je 0x4003888	      3110	getchar.c	FUNCTION_64	FOR_1	IF_1
0x40038b4	          0x83fd01	                              cmp ebp, 1	      3110	getchar.c	FUNCTION_64	FOR_1	IF_1
0x40038b7	            0x7ed8	                           jle 0x4003891	      3110	getchar.c	FUNCTION_64	FOR_1	IF_1
0x40038b9	          0x80fa9b	                            cmp dl, 0x9b	      3110	getchar.c	FUNCTION_64	FOR_1	IF_1
0x40038bc	            0x75d3	                           jne 0x4003891	      3110	getchar.c	FUNCTION_64	FOR_1	IF_1
0x40038be	          0x83e803	                              sub eax, 3	      3113	getchar.c	FUNCTION_64	FOR_1	IF_1
0x40038c1	        0x4883c302	                              add rbx, 2	      3112	getchar.c	FUNCTION_64	FOR_1	IF_1
0x40038c5	            0x89c5	                            mov ebp, eax	      3105	getchar.c	FUNCTION_64	FOR_1
0x40038c7	        0x4883c301	                              add rbx, 1	      3105	getchar.c	FUNCTION_64	FOR_1
0x40038cb	          0x83ed01	                              sub ebp, 1	      3105	getchar.c	FUNCTION_64	FOR_1
0x40038ce	            0x79d7	                           jns 0x40038a7	      3105	getchar.c	FUNCTION_64	FOR_1
0x40038d0	          0x4489e0	                           mov eax, r12d	      3145	getchar.c	FUNCTION_64
0x40038d3	          0xc60300	                       mov byte [rbx], 0	      3143	getchar.c	FUNCTION_64
0x40038d6	              0x5b	                                 pop rbx	      3145	getchar.c	FUNCTION_64
0x40038d7	              0x5d	                                 pop rbp	      3145	getchar.c	FUNCTION_64
0x40038d8	            0x415c	                                 pop r12	      3145	getchar.c	FUNCTION_64
0x40038da	              0xc3	                                     ret	      3145	getchar.c	FUNCTION_64
0x40038db	       0xf1f440000	                   nop dword [rax + rax]	      3145	getchar.c	FUNCTION_64
0x40038e0	        0x488d7301	                      lea rsi, [rbx + 1]	        59	string3.h	FUNCTION_106	CALL_3
0x40038e4	        0x488d7b03	                      lea rdi, [rbx + 3]	        59	string3.h	FUNCTION_106	CALL_3
0x40038e8	          0x4863d5	                         movsxd rdx, ebp	        59	string3.h	FUNCTION_106	CALL_3
0x40038eb	      0xe800000000	                          call 0x40038f0	        59	string3.h	FUNCTION_106	CALL_3
0x40038f0	        0xc6430258	                mov byte [rbx + 2], 0x58	      3136	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3	CALL_3
0x40038f4	      0xb8ffffffff	                     mov eax, 0xffffffff	      3137	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3	CALL_4
0x40038f9	          0x884301	                  mov byte [rbx + 1], al	      3137	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3	CALL_4
0x40038fc	          0xc60380	                    mov byte [rbx], 0x80	      3138	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3
0x40038ff	        0x4183c402	                             add r12d, 2	      3140	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3
0x4003903	        0x4883c302	                              add rbx, 2	      3139	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3
0x4003907	            0x89e8	                            mov eax, ebp	      3140	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3
0x4003909	            0xeb91	                           jmp 0x400389c	      3140	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3
0x400390b	       0xf1f440000	                   nop dword [rax + rax]	      3140	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3
0x4003910	          0x83fd01	                              cmp ebp, 1	      3128	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3
0x4003913	            0x7e06	                           jle 0x400391b	      3128	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3
0x4003915	        0x807b01fd	                cmp byte [rbx + 1], 0xfd	      3128	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3
0x4003919	            0x7455	                            je 0x4003970	      3128	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3
0x400391b	        0x488d7301	                      lea rsi, [rbx + 1]	        59	string3.h	FUNCTION_106	CALL_3
0x400391f	        0x488d7b03	                      lea rdi, [rbx + 3]	        59	string3.h	FUNCTION_106	CALL_3
0x4003923	          0x4863d5	                         movsxd rdx, ebp	        59	string3.h	FUNCTION_106	CALL_3
0x4003926	      0xe800000000	                          call 0x400392b	        59	string3.h	FUNCTION_106	CALL_3
0x400392b	        0xc6430258	                mov byte [rbx + 2], 0x58	      3136	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3	CALL_3
0x400392f	      0xb8feffffff	                     mov eax, 0xfffffffe	      3137	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3	CALL_4
0x4003934	            0xebc3	                           jmp 0x40038f9	      3137	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3	CALL_4
0x4003936	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3137	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3	CALL_4
0x4003940	        0x488d7301	                      lea rsi, [rbx + 1]	        59	string3.h	FUNCTION_106	CALL_3
0x4003944	        0x488d7b03	                      lea rdi, [rbx + 3]	        59	string3.h	FUNCTION_106	CALL_3
0x4003948	          0x4863d5	                         movsxd rdx, ebp	        59	string3.h	FUNCTION_106	CALL_3
0x400394b	        0x4183c402	                             add r12d, 2	      3122	getchar.c	FUNCTION_64	FOR_1	ELSE_1	IF_2
0x400394f	        0x4883c302	                              add rbx, 2	      3120	getchar.c	FUNCTION_64	FOR_1	ELSE_1	IF_2
0x4003953	      0xe800000000	                          call 0x4003958	        59	string3.h	FUNCTION_106	CALL_3
0x4003958	        0xc643fe80	                mov byte [rbx - 2], 0x80	      3119	getchar.c	FUNCTION_64	FOR_1	ELSE_1	IF_2
0x400395c	        0xc643fffd	                mov byte [rbx - 1], 0xfd	      3120	getchar.c	FUNCTION_64	FOR_1	ELSE_1	IF_2
0x4003960	            0x89e8	                            mov eax, ebp	      3122	getchar.c	FUNCTION_64	FOR_1	ELSE_1	IF_2
0x4003962	          0xc60351	                    mov byte [rbx], 0x51	      3121	getchar.c	FUNCTION_64	FOR_1	ELSE_1	IF_2
0x4003965	      0xe932ffffff	                           jmp 0x400389c	      3122	getchar.c	FUNCTION_64	FOR_1	ELSE_1	IF_2
0x400396a	    0x660f1f440000	                    nop word [rax + rax]	      3122	getchar.c	FUNCTION_64	FOR_1	ELSE_1	IF_2
0x4003970	        0x807b0260	                cmp byte [rbx + 2], 0x60	      3128	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3
0x4003974	            0x75a5	                           jne 0x400391b	      3128	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3
0x4003976	      0xe921ffffff	                           jmp 0x400389c	      3128	getchar.c	FUNCTION_64	FOR_1	ELSE_2	IF_3
stuffRedoReadbuff	WHILE,0:ELSE,0:IF,0:DO,0:CALL,1:functions,0:SWITCH,0:FOR,0	95
0x4002030	            0x4155	                                push r13	       664	getchar.c	FUNCTION_24
0x4002032	            0x4154	                                push r12	       664	getchar.c	FUNCTION_24
0x4002034	              0x55	                                push rbp	       664	getchar.c	FUNCTION_24
0x4002035	              0x53	                                push rbx	       664	getchar.c	FUNCTION_24
0x4002036	          0x4889fd	                            mov rbp, rdi	       664	getchar.c	FUNCTION_24
0x4002039	        0x4883ec08	                              sub rsp, 8	       664	getchar.c	FUNCTION_24
0x400203d	      0xe800000000	                          call 0x4002042	       238	getchar.c	FUNCTION_5	CALL_1
0x4002042	          0x4885c0	                           test rax, rax	       239	getchar.c	FUNCTION_5	IF_2
0x4002045	     0xf8498000000	                            je 0x40020e3	       239	getchar.c	FUNCTION_5	IF_2
0x400204b	    0x488b3d000000	            mov rdi, qword [0x04002052] 	       242	getchar.c	FUNCTION_5	IF_3
0x4002052	          0x4889c3	                            mov rbx, rax	       242	getchar.c	FUNCTION_5	IF_3
0x4002055	          0x4885ff	                           test rdi, rdi	       242	getchar.c	FUNCTION_5	IF_3
0x4002058	     0xf8402010000	                            je 0x4002160	       242	getchar.c	FUNCTION_5	IF_3
0x400205e	    0x48833d000000	               cmp qword [0x04002066], 0	       247	getchar.c	FUNCTION_5	ELSE_1	IF_4
0x4002066	     0xf8414010000	                            je 0x4002180	       247	getchar.c	FUNCTION_5	ELSE_1	IF_4
0x400206c	    0x486335000000	         movsxd rsi, dword [0x04002073] 	       252	getchar.c	FUNCTION_5	ELSE_2	IF_5
0x4002073	            0x85f6	                           test esi, esi	       252	getchar.c	FUNCTION_5	ELSE_2	IF_5
0x4002075	     0xf8585000000	                           jne 0x4002100	       252	getchar.c	FUNCTION_5	ELSE_2	IF_5
0x400207b	    0x8b0500000000	            mov eax, dword [0x04002081] 	       252	getchar.c	FUNCTION_5	ELSE_2	IF_5
0x4002081	            0x39d8	                            cmp eax, ebx	       258	getchar.c	FUNCTION_5	IF_6
0x4002083	    0xc70500000000	               mov dword [0x0400208d], 0	       256	getchar.c	FUNCTION_5
0x400208d	     0xf8d95000000	                           jge 0x4002128	       258	getchar.c	FUNCTION_5	IF_6
0x4002093	        0x4883fb13	                           cmp rbx, 0x13	       266	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x4002097	            0x7e57	                           jle 0x40020f0	       266	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x4002099	        0x488d7b10	                   lea rdi, [rbx + 0x10]	       266	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x400209d	          0x4989dd	                            mov r13, rbx	       266	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x40020a0	      0xbe01000000	                              mov esi, 1	       270	getchar.c	FUNCTION_5	ELSE_3	CALL_8
0x40020a5	      0xe800000000	                          call 0x40020aa	       270	getchar.c	FUNCTION_5	ELSE_3	CALL_8
0x40020aa	          0x4885c0	                           test rax, rax	       272	getchar.c	FUNCTION_5	ELSE_3	IF_8
0x40020ad	          0x4989c4	                            mov r12, rax	       270	getchar.c	FUNCTION_5	ELSE_3	CALL_8
0x40020b0	            0x7431	                            je 0x40020e3	       272	getchar.c	FUNCTION_5	ELSE_3	IF_8
0x40020b2	        0x488d7808	                      lea rdi, [rax + 8]	       275	getchar.c	FUNCTION_5	ELSE_3	CALL_9
0x40020b6	          0x4889da	                            mov rdx, rbx	       275	getchar.c	FUNCTION_5	ELSE_3	CALL_9
0x40020b9	          0x4129dd	                           sub r13d, ebx	       274	getchar.c	FUNCTION_5	ELSE_3
0x40020bc	          0x4889ee	                            mov rsi, rbp	       275	getchar.c	FUNCTION_5	ELSE_3	CALL_9
0x40020bf	    0x44892d000000	           mov dword [0x040020c6], r13d 	       274	getchar.c	FUNCTION_5	ELSE_3
0x40020c6	      0xe800000000	                          call 0x40020cb	       275	getchar.c	FUNCTION_5	ELSE_3	CALL_9
0x40020cb	    0x488b05000000	            mov rax, qword [0x040020d2] 	       277	getchar.c	FUNCTION_5	ELSE_3
0x40020d2	          0x488b10	                    mov rdx, qword [rax]	       277	getchar.c	FUNCTION_5	ELSE_3
0x40020d5	        0x49891424	                    mov qword [r12], rdx	       277	getchar.c	FUNCTION_5	ELSE_3
0x40020d9	          0x4c8920	                    mov qword [rax], r12	       278	getchar.c	FUNCTION_5	ELSE_3
0x40020dc	    0x4c8925000000	            mov qword [0x040020e3], r12 	       279	getchar.c	FUNCTION_5	ELSE_3
0x40020e3	        0x4883c408	                              add rsp, 8	       666	getchar.c	FUNCTION_24
0x40020e7	              0x5b	                                 pop rbx	       666	getchar.c	FUNCTION_24
0x40020e8	              0x5d	                                 pop rbp	       666	getchar.c	FUNCTION_24
0x40020e9	            0x415c	                                 pop r12	       666	getchar.c	FUNCTION_24
0x40020eb	            0x415d	                                 pop r13	       666	getchar.c	FUNCTION_24
0x40020ed	              0xc3	                                     ret	       666	getchar.c	FUNCTION_24
0x40020ee	            0x6690	                                     nop	       666	getchar.c	FUNCTION_24
0x40020f0	      0xbf24000000	                           mov edi, 0x24	       266	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x40020f5	    0x41bd14000000	                          mov r13d, 0x14	       267	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x40020fb	            0xeba3	                           jmp 0x40020a0	       267	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x40020fd	           0xf1f00	                         nop dword [rax]	       267	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x4002100	        0x4c8d6f08	                      lea r13, [rdi + 8]	       253	getchar.c	FUNCTION_5	ELSE_2	IF_5	CALL_4
0x4002104	      0x4d8d643500	                    lea r12, [r13 + rsi]	       253	getchar.c	FUNCTION_5	ELSE_2	IF_5	CALL_4
0x4002109	          0x4c89e7	                            mov rdi, r12	       253	getchar.c	FUNCTION_5	ELSE_2	IF_5	CALL_4
0x400210c	      0xe800000000	                          call 0x4002111	       253	getchar.c	FUNCTION_5	ELSE_2	IF_5	CALL_4
0x4002111	        0x488d5001	                      lea rdx, [rax + 1]	        59	string3.h	FUNCTION_106	CALL_3
0x4002115	          0x4c89e6	                            mov rsi, r12	        59	string3.h	FUNCTION_106	CALL_3
0x4002118	          0x4c89ef	                            mov rdi, r13	        59	string3.h	FUNCTION_106	CALL_3
0x400211b	      0xe800000000	                          call 0x4002120	        59	string3.h	FUNCTION_106	CALL_3
0x4002120	      0xe956ffffff	                           jmp 0x400207b	        59	string3.h	FUNCTION_106	CALL_3
0x4002125	           0xf1f00	                         nop dword [rax]	        59	string3.h	FUNCTION_106	CALL_3
0x4002128	    0x488b05000000	            mov rax, qword [0x0400212f] 	       260	getchar.c	FUNCTION_5	IF_6	CALL_6
0x400212f	        0x4c8d6008	                      lea r12, [rax + 8]	       260	getchar.c	FUNCTION_5	IF_6	CALL_6
0x4002133	          0x4c89e7	                            mov rdi, r12	       260	getchar.c	FUNCTION_5	IF_6	CALL_6
0x4002136	      0xe800000000	                          call 0x400213b	       260	getchar.c	FUNCTION_5	IF_6	CALL_6
0x400213b	        0x498d3c04	                    lea rdi, [r12 + rax]	       261	getchar.c	FUNCTION_5	IF_6	CALL_7
0x400213f	          0x4889da	                            mov rdx, rbx	       261	getchar.c	FUNCTION_5	IF_6	CALL_7
0x4002142	          0x4889ee	                            mov rsi, rbp	       261	getchar.c	FUNCTION_5	IF_6	CALL_7
0x4002145	      0xe800000000	                          call 0x400214a	       261	getchar.c	FUNCTION_5	IF_6	CALL_7
0x400214a	    0x291d00000000	             sub dword [0x04002150], ebx	       262	getchar.c	FUNCTION_5	IF_6
0x4002150	        0x4883c408	                              add rsp, 8	       666	getchar.c	FUNCTION_24
0x4002154	              0x5b	                                 pop rbx	       666	getchar.c	FUNCTION_24
0x4002155	              0x5d	                                 pop rbp	       666	getchar.c	FUNCTION_24
0x4002156	            0x415c	                                 pop r12	       666	getchar.c	FUNCTION_24
0x4002158	            0x415d	                                 pop r13	       666	getchar.c	FUNCTION_24
0x400215a	              0xc3	                                     ret	       666	getchar.c	FUNCTION_24
0x400215b	       0xf1f440000	                   nop dword [rax + rax]	       666	getchar.c	FUNCTION_24
0x4002160	    0xc70500000000	               mov dword [0x0400216a], 0	       244	getchar.c	FUNCTION_5	IF_3
0x400216a	    0x48c705000000	               mov qword [0x04002175], 0	       245	getchar.c	FUNCTION_5	IF_3
0x4002175	            0x31c0	                            xor eax, eax	       245	getchar.c	FUNCTION_5	IF_3
0x4002177	      0xe905ffffff	                           jmp 0x4002081	       245	getchar.c	FUNCTION_5	IF_3
0x400217c	         0xf1f4000	                         nop dword [rax]	       245	getchar.c	FUNCTION_5	IF_3
0x4002180	            0x31ff	                            xor edi, edi	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x4002182	      0xba05000000	                              mov edx, 5	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x4002187	      0xbe00000000	                              mov esi, 0	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x400218c	      0xe800000000	                          call 0x4002191	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x4002191	        0x4883c408	                              add rsp, 8	       666	getchar.c	FUNCTION_24
0x4002195	          0x4889c7	                            mov rdi, rax	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x4002198	              0x5b	                                 pop rbx	       666	getchar.c	FUNCTION_24
0x4002199	              0x5d	                                 pop rbp	       666	getchar.c	FUNCTION_24
0x400219a	            0x415c	                                 pop r12	       666	getchar.c	FUNCTION_24
0x400219c	            0x415d	                                 pop r13	       666	getchar.c	FUNCTION_24
0x400219e	      0xe900000000	                           jmp 0x40021a3	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
vgetc	WHILE,0:ELSE,5:IF,19:DO,0:CALL,17:functions,0:SWITCH,1:FOR,3	350
0x400a700	            0x4154	                                push r12	      1562	getchar.c	FUNCTION_54
0x400a702	              0x55	                                push rbp	      1562	getchar.c	FUNCTION_54
0x400a703	              0x53	                                push rbx	      1562	getchar.c	FUNCTION_54
0x400a704	        0x4883ec30	                           sub rsp, 0x30	      1562	getchar.c	FUNCTION_54
0x400a708	    0x64488b042528	                mov rax, qword fs:[0x28]	      1562	getchar.c	FUNCTION_54
0x400a711	      0x4889442428	             mov qword [rsp + 0x28], rax	      1562	getchar.c	FUNCTION_54
0x400a716	            0x31c0	                            xor eax, eax	      1562	getchar.c	FUNCTION_54
0x400a718	    0x8b0500000000	            mov eax, dword [0x0400a71e] 	      1573	getchar.c	FUNCTION_54	IF_1
0x400a71e	            0x85c0	                           test eax, eax	      1573	getchar.c	FUNCTION_54	IF_1
0x400a720	            0x740e	                            je 0x400a730	      1573	getchar.c	FUNCTION_54	IF_1
0x400a722	    0x8b0500000000	            mov eax, dword [0x0400a728] 	      1573	getchar.c	FUNCTION_54	IF_1
0x400a728	            0x85c0	                           test eax, eax	      1573	getchar.c	FUNCTION_54	IF_1
0x400a72a	     0xf8590030000	                           jne 0x400aac0	      1573	getchar.c	FUNCTION_54	IF_1
0x400a730	    0x8b0500000000	            mov eax, dword [0x0400a736] 	      1581	getchar.c	FUNCTION_54	IF_2
0x400a736	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      1581	getchar.c	FUNCTION_54	IF_2
0x400a739	     0xf84f9000000	                            je 0x400a838	      1581	getchar.c	FUNCTION_54	IF_2
0x400a73f	    0x8b1500000000	            mov edx, dword [0x0400a745] 	      1585	getchar.c	FUNCTION_54	IF_2
0x400a745	    0xc70500000000	     mov dword [0x0400a74f], 0xffffffff 	      1584	getchar.c	FUNCTION_54	IF_2
0x400a74f	    0x891500000000	            mov dword [0x0400a755], edx 	      1585	getchar.c	FUNCTION_54	IF_2
0x400a755	    0x8b1500000000	            mov edx, dword [0x0400a75b] 	      1587	getchar.c	FUNCTION_54	IF_2
0x400a75b	    0x891500000000	            mov dword [0x0400a761], edx 	      1587	getchar.c	FUNCTION_54	IF_2
0x400a761	    0x8b1500000000	            mov edx, dword [0x0400a767] 	      1588	getchar.c	FUNCTION_54	IF_2
0x400a767	    0x891500000000	            mov dword [0x0400a76d], edx 	      1588	getchar.c	FUNCTION_54	IF_2
0x400a76d	      0x3d039bffff	                     cmp eax, 0xffff9b03	      1588	getchar.c	FUNCTION_54	IF_2
0x400a772	    0xc70500000000	               mov dword [0x0400a77c], 0	      1791	getchar.c	FUNCTION_54
0x400a77c	           0xf95c1	                                setne cl	      1791	getchar.c	FUNCTION_54
0x400a77f	      0x3d03caffff	                     cmp eax, 0xffffca03	      1791	getchar.c	FUNCTION_54
0x400a784	           0xf95c2	                                setne dl	      1791	getchar.c	FUNCTION_54
0x400a787	            0x21ca	                            and edx, ecx	      1791	getchar.c	FUNCTION_54
0x400a789	            0x84d2	                             test dl, dl	      1794	getchar.c	FUNCTION_54	IF_19
0x400a78b	     0xf8587000000	                           jne 0x400a818	      1794	getchar.c	FUNCTION_54	IF_19
0x400a791	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      1803	getchar.c	FUNCTION_54
0x400a796	    0x644833342528	                xor rsi, qword fs:[0x28]	      1803	getchar.c	FUNCTION_54
0x400a79f	     0xf8567030000	                           jne 0x400ab0c	      1803	getchar.c	FUNCTION_54
0x400a7a5	        0x4883c430	                           add rsp, 0x30	      1803	getchar.c	FUNCTION_54
0x400a7a9	              0x5b	                                 pop rbx	      1803	getchar.c	FUNCTION_54
0x400a7aa	              0x5d	                                 pop rbp	      1803	getchar.c	FUNCTION_54
0x400a7ab	            0x415c	                                 pop r12	      1803	getchar.c	FUNCTION_54
0x400a7ad	              0xc3	                                     ret	      1803	getchar.c	FUNCTION_54
0x400a7ae	      0x3db5bcffff	                     cmp eax, 0xffffbcb5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400a7b3	     0xf8494030000	                            je 0x400ab4d	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400a7b9	     0xf8f98030000	                            jg 0x400ab57	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400a7bf	      0x3db5b8ffff	                     cmp eax, 0xffffb8b5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400a7c4	     0xf8479030000	                            je 0x400ab43	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400a7ca	     0xf8f05050000	                            jg 0x400acd5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400a7d0	      0x3db5b5ffff	                     cmp eax, 0xffffb5b5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400a7d5	     0xf845e030000	                            je 0x400ab39	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400a7db	     0xf8fce040000	                            jg 0x400acaf	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400a7e1	      0x3db5b3ffff	                     cmp eax, 0xffffb3b5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400a7e6	     0xf8443030000	                            je 0x400ab2f	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400a7ec	      0x3db5b4ffff	                     cmp eax, 0xffffb4b5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400a7f1	     0xf85ee010000	                           jne 0x400a9e5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400a7f7	      0xb838000000	                           mov eax, 0x38	      1710	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400a7fc	         0xf1f4000	                         nop dword [rax]	      1710	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400a800	    0x8b0d00000000	            mov ecx, dword [0x0400a806] 	      1753	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	CALL_13
0x400a806	            0x85c9	                           test ecx, ecx	      1753	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	CALL_13
0x400a808	     0xf85f2010000	                           jne 0x400aa00	      1753	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	CALL_13
0x400a80e	    0xc70500000000	               mov dword [0x0400a818], 0	      1791	getchar.c	FUNCTION_54
0x400a818	        0x8944240c	              mov dword [rsp + 0xc], eax	      1791	getchar.c	FUNCTION_54
0x400a81c	    0xc70500000000	               mov dword [0x0400a826], 0	      1797	getchar.c	FUNCTION_54	IF_19
0x400a826	      0xe800000000	                          call 0x400a82b	      1798	getchar.c	FUNCTION_54	IF_19	CALL_17
0x400a82b	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      1798	getchar.c	FUNCTION_54	IF_19	CALL_17
0x400a82f	      0xe95dffffff	                           jmp 0x400a791	      1798	getchar.c	FUNCTION_54	IF_19	CALL_17
0x400a834	         0xf1f4000	                         nop dword [rax]	      1798	getchar.c	FUNCTION_54	IF_19	CALL_17
0x400a838	    0xc70500000000	               mov dword [0x0400a842], 0	      1593	getchar.c	FUNCTION_54	ELSE_1
0x400a842	    0xc70500000000	               mov dword [0x0400a84c], 0	      1594	getchar.c	FUNCTION_54	ELSE_1
0x400a84c	            0x31c0	                            xor eax, eax	      1594	getchar.c	FUNCTION_54	ELSE_1
0x400a84e	            0x85c0	                           test eax, eax	      1599	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_3
0x400a850	     0xf84e1000000	                            je 0x400a937	      1599	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_3
0x400a856	    0x8b0500000000	            mov eax, dword [0x0400a85c] 	      1997	getchar.c	FUNCTION_62	IF_1
0x400a85c	    0x830500000000	               add dword [0x0400a863], 1	      1606	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_3
0x400a863	    0x830500000000	               add dword [0x0400a86a], 1	      1607	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_3
0x400a86a	            0x85c0	                           test eax, eax	      1997	getchar.c	FUNCTION_62	IF_1
0x400a86c	            0x7e0e	                           jle 0x400a87c	      1997	getchar.c	FUNCTION_62	IF_1
0x400a86e	    0x8b1500000000	            mov edx, dword [0x0400a874] 	      1997	getchar.c	FUNCTION_62	IF_1
0x400a874	            0x85d2	                           test edx, edx	      1997	getchar.c	FUNCTION_62	IF_1
0x400a876	     0xf8454010000	                            je 0x400a9d0	      1997	getchar.c	FUNCTION_62	IF_1
0x400a87c	      0xe83fe5ffff	 call sym.vgetorpeek.part.9.constprop.14	      1997	getchar.c	FUNCTION_62	IF_1
0x400a881	      0x3d80000000	                           cmp eax, 0x80	      1997	getchar.c	FUNCTION_62	IF_1
0x400a886	           0xf94c1	                                 sete cl	      1997	getchar.c	FUNCTION_62	IF_1
0x400a889	      0x3d9b000000	                           cmp eax, 0x9b	      1997	getchar.c	FUNCTION_62	IF_1
0x400a88e	           0xf94c2	                                 sete dl	      1997	getchar.c	FUNCTION_62	IF_1
0x400a891	             0x9ca	                             or edx, ecx	      1997	getchar.c	FUNCTION_62	IF_1
0x400a893	    0x832d00000000	               sub dword [0x0400a89a], 1	      1613	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_4
0x400a89a	    0x832d00000000	               sub dword [0x0400a8a1], 1	      1614	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_4
0x400a8a1	            0x84d2	                             test dl, dl	      1618	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5
0x400a8a3	     0xf8405ffffff	                            je 0x400a7ae	      1618	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5
0x400a8a9	    0x8b0500000000	            mov eax, dword [0x0400a8af] 	      1997	getchar.c	FUNCTION_62	IF_1
0x400a8af	    0x830500000000	               add dword [0x0400a8b6], 1	      1626	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5
0x400a8b6	    0x8b2d00000000	            mov ebp, dword [0x0400a8bc] 	      1624	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5
0x400a8bc	    0xc70500000000	               mov dword [0x0400a8c6], 0	      1627	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5
0x400a8c6	            0x85c0	                           test eax, eax	      1997	getchar.c	FUNCTION_62	IF_1
0x400a8c8	     0xf8ea2000000	                           jle 0x400a970	      1997	getchar.c	FUNCTION_62	IF_1
0x400a8ce	    0x8b1d00000000	            mov ebx, dword [0x0400a8d4] 	      1997	getchar.c	FUNCTION_62	IF_1
0x400a8d4	            0x85db	                           test ebx, ebx	      1997	getchar.c	FUNCTION_62	IF_1
0x400a8d6	     0xf8594000000	                           jne 0x400a970	      1997	getchar.c	FUNCTION_62	IF_1
0x400a8dc	    0x832d00000000	               sub dword [0x0400a8e3], 1	      1630	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5
0x400a8e3	    0x892d00000000	            mov dword [0x0400a8e9], ebp 	      1631	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5
0x400a8e9	            0x31c0	                            xor eax, eax	      1998	getchar.c	FUNCTION_62	IF_1
0x400a8eb	          0xc1e008	                              shl eax, 8	      1637	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	CALL_6
0x400a8ee	             0x1c3	                            add ebx, eax	      1637	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	CALL_6
0x400a8f0	            0x89d8	                            mov eax, ebx	      1637	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	CALL_6
0x400a8f2	            0xf7d8	                                 neg eax	      1637	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	CALL_6
0x400a8f4	      0x3d95c4ffff	                     cmp eax, 0xffffc495	      1663	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_9
0x400a8f9	     0xf85cd010000	                           jne 0x400aacc	      1663	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_9
0x400a8ff	    0x488b1d000000	            mov rbx, qword [0x0400a906] 	      1663	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_9
0x400a906	          0x4885db	                           test rbx, rbx	      1663	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_9
0x400a909	     0xf845efeffff	                            je 0x400a76d	      1663	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_9
0x400a90f	      0xe800000000	                          call 0x400a914	      1665	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_9	CALL_10
0x400a914	          0x4889df	                            mov rdi, rbx	      1665	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_9	CALL_10
0x400a917	          0x4889c6	                            mov rsi, rax	      1665	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_9	CALL_10
0x400a91a	      0xe800000000	                          call 0x400a91f	      1665	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_9	CALL_10
0x400a91f	            0x31f6	                            xor esi, esi	      1665	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_9	CALL_10
0x400a921	          0x4889c7	                            mov rdi, rax	      1665	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_9	CALL_10
0x400a924	      0xe800000000	                          call 0x400a929	      1665	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_9	CALL_10
0x400a929	    0x8b0500000000	            mov eax, dword [0x0400a92f] 	      1665	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_9	CALL_10
0x400a92f	            0x85c0	                           test eax, eax	      1599	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_3
0x400a931	     0xf851fffffff	                           jne 0x400a856	      1599	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_3
0x400a937	      0xe800000000	                          call 0x400a93c	      1601	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_3	CALL_2
0x400a93c	            0x85c0	                           test eax, eax	      1601	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_3	CALL_2
0x400a93e	     0xf8512ffffff	                           jne 0x400a856	      1601	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_3	CALL_2
0x400a944	    0x8b3500000000	            mov esi, dword [0x0400a94a] 	      1997	getchar.c	FUNCTION_62	IF_1
0x400a94a	            0x85f6	                           test esi, esi	      1997	getchar.c	FUNCTION_62	IF_1
0x400a94c	     0xf8fa5010000	                            jg 0x400aaf7	      1997	getchar.c	FUNCTION_62	IF_1
0x400a952	      0xe869e4ffff	 call sym.vgetorpeek.part.9.constprop.14	      1997	getchar.c	FUNCTION_62	IF_1
0x400a957	      0x3d80000000	                           cmp eax, 0x80	      1997	getchar.c	FUNCTION_62	IF_1
0x400a95c	           0xf94c1	                                 sete cl	      1997	getchar.c	FUNCTION_62	IF_1
0x400a95f	      0x3d9b000000	                           cmp eax, 0x9b	      1997	getchar.c	FUNCTION_62	IF_1
0x400a964	           0xf94c2	                                 sete dl	      1997	getchar.c	FUNCTION_62	IF_1
0x400a967	             0x9ca	                             or edx, ecx	      1997	getchar.c	FUNCTION_62	IF_1
0x400a969	      0xe933ffffff	                           jmp 0x400a8a1	      1997	getchar.c	FUNCTION_62	IF_1
0x400a96e	            0x6690	                                     nop	      1997	getchar.c	FUNCTION_62	IF_1
0x400a970	      0xe84be4ffff	 call sym.vgetorpeek.part.9.constprop.14	      1997	getchar.c	FUNCTION_62	IF_1
0x400a975	            0x89c3	                            mov ebx, eax	      1997	getchar.c	FUNCTION_62	IF_1
0x400a977	    0x8b0500000000	            mov eax, dword [0x0400a97d] 	      1997	getchar.c	FUNCTION_62	IF_1
0x400a97d	            0x85c0	                           test eax, eax	      1997	getchar.c	FUNCTION_62	IF_1
0x400a97f	            0x7e0a	                           jle 0x400a98b	      1997	getchar.c	FUNCTION_62	IF_1
0x400a981	    0x8b0500000000	            mov eax, dword [0x0400a987] 	      1997	getchar.c	FUNCTION_62	IF_1
0x400a987	            0x85c0	                           test eax, eax	      1997	getchar.c	FUNCTION_62	IF_1
0x400a989	            0x7405	                            je 0x400a990	      1997	getchar.c	FUNCTION_62	IF_1
0x400a98b	      0xe830e4ffff	 call sym.vgetorpeek.part.9.constprop.14	      1997	getchar.c	FUNCTION_62	IF_1
0x400a990	    0x832d00000000	               sub dword [0x0400a997], 1	      1630	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5
0x400a997	    0x81fbfc000000	                           cmp ebx, 0xfc	      1632	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_6
0x400a99d	    0x892d00000000	            mov dword [0x0400a9a3], ebp 	      1631	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5
0x400a9a3	            0x750b	                           jne 0x400a9b0	      1632	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_6
0x400a9a5	    0x890500000000	            mov dword [0x0400a9ab], eax 	      1634	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_6
0x400a9ab	      0xe99efeffff	                           jmp 0x400a84e	      1635	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_6
0x400a9b0	    0x81fbfe000000	                           cmp ebx, 0xfe	      1637	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	CALL_6
0x400a9b6	            0x7428	                            je 0x400a9e0	      1637	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	CALL_6
0x400a9b8	    0x81fbff000000	                           cmp ebx, 0xff	      1637	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	CALL_6
0x400a9be	     0xf8527ffffff	                           jne 0x400a8eb	      1637	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	CALL_6
0x400a9c4	      0xb801a7ffff	                     mov eax, 0xffffa701	      1637	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	CALL_6
0x400a9c9	            0xeb1a	                           jmp 0x400a9e5	      1637	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	CALL_6
0x400a9cb	       0xf1f440000	                   nop dword [rax + rax]	      1637	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	CALL_6
0x400a9d0	            0x31d2	                            xor edx, edx	      1997	getchar.c	FUNCTION_62	IF_1
0x400a9d2	            0x31c0	                            xor eax, eax	      1998	getchar.c	FUNCTION_62	IF_1
0x400a9d4	      0xe9bafeffff	                           jmp 0x400a893	      1998	getchar.c	FUNCTION_62	IF_1
0x400a9d9	     0xf1f80000000	                         nop dword [rax]	      1998	getchar.c	FUNCTION_62	IF_1
0x400a9e0	      0xb880000000	                           mov eax, 0x80	      1637	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	CALL_6
0x400a9e5	    0x833d00000000	               cmp dword [0x0400a9ec], 0	      1753	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	CALL_13
0x400a9ec	     0xf847bfdffff	                            je 0x400a76d	      1753	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	CALL_13
0x400a9f2	      0x3dff000000	                           cmp eax, 0xff	      1753	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	CALL_13
0x400a9f7	     0xf8770fdffff	                            ja 0x400a76d	      1753	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	CALL_13
0x400a9fd	           0xf1f00	                         nop dword [rax]	      1753	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	CALL_13
0x400aa00	          0x4863d0	                         movsxd rdx, eax	      1753	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	CALL_13
0x400aa03	     0xfbe92000000	                   movsx edx, byte [rdx]	      1753	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	CALL_13
0x400aa0a	          0x80fa01	                               cmp dl, 1	      1753	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	CALL_13
0x400aa0d	     0xf8efbfdffff	                           jle 0x400a80e	      1753	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	CALL_13
0x400aa13	        0x88442410	               mov byte [rsp + 0x10], al	      1756	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16
0x400aa17	          0x8d42fe	                      lea eax, [rdx - 2]	      1756	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16
0x400aa1a	    0x830500000000	               add dword [0x0400aa21], 1	      1755	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16
0x400aa21	      0x488d5c2410	                   lea rbx, [rsp + 0x10]	      1755	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16
0x400aa26	      0x488d6c0411	            lea rbp, [rsp + rax + 0x11] 	      1755	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16
0x400aa2b	            0xeb14	                           jmp 0x400aa41	      1755	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16
0x400aa2d	           0xf1f00	                         nop dword [rax]	      1755	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16
0x400aa30	        0xc6430100	                   mov byte [rbx + 1], 0	      1759	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	FOR_3	CALL_14
0x400aa34	        0x4883c301	                              add rbx, 1	      1759	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	FOR_3	CALL_14
0x400aa38	          0x4839eb	                            cmp rbx, rbp	      1757	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	FOR_3
0x400aa3b	     0xf84d7000000	                            je 0x400ab18	      1757	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	FOR_3
0x400aa41	    0x8b0500000000	            mov eax, dword [0x0400aa47] 	      1997	getchar.c	FUNCTION_62	IF_1
0x400aa47	            0x85c0	                           test eax, eax	      1997	getchar.c	FUNCTION_62	IF_1
0x400aa49	            0x7e0c	                           jle 0x400aa57	      1997	getchar.c	FUNCTION_62	IF_1
0x400aa4b	    0x448b25000000	           mov r12d, dword [0x0400aa52] 	      1997	getchar.c	FUNCTION_62	IF_1
0x400aa52	          0x4585e4	                         test r12d, r12d	      1997	getchar.c	FUNCTION_62	IF_1
0x400aa55	            0x74d9	                            je 0x400aa30	      1997	getchar.c	FUNCTION_62	IF_1
0x400aa57	      0xe864e3ffff	 call sym.vgetorpeek.part.9.constprop.14	      1997	getchar.c	FUNCTION_62	IF_1
0x400aa5c	            0x3c80	                            cmp al, 0x80	      1760	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	FOR_3	IF_17
0x400aa5e	          0x884301	                  mov byte [rbx + 1], al	      1759	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	FOR_3	CALL_14
0x400aa61	            0x7404	                            je 0x400aa67	      1760	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	FOR_3	IF_17
0x400aa63	            0x3c9b	                            cmp al, 0x9b	      1760	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	FOR_3	IF_17
0x400aa65	            0x75cd	                           jne 0x400aa34	      1760	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	FOR_3	IF_17
0x400aa67	    0x448b1d000000	           mov r11d, dword [0x0400aa6e] 	      1997	getchar.c	FUNCTION_62	IF_1
0x400aa6e	          0x4585db	                         test r11d, r11d	      1997	getchar.c	FUNCTION_62	IF_1
0x400aa71	            0x7e0c	                           jle 0x400aa7f	      1997	getchar.c	FUNCTION_62	IF_1
0x400aa73	    0x448b15000000	           mov r10d, dword [0x0400aa7a] 	      1997	getchar.c	FUNCTION_62	IF_1
0x400aa7a	          0x4585d2	                         test r10d, r10d	      1997	getchar.c	FUNCTION_62	IF_1
0x400aa7d	            0x74b5	                            je 0x400aa34	      1997	getchar.c	FUNCTION_62	IF_1
0x400aa7f	      0xe83ce3ffff	 call sym.vgetorpeek.part.9.constprop.14	      1997	getchar.c	FUNCTION_62	IF_1
0x400aa84	    0x448b0d000000	            mov r9d, dword [0x0400aa8b] 	      1997	getchar.c	FUNCTION_62	IF_1
0x400aa8b	          0x4189c4	                           mov r12d, eax	      1997	getchar.c	FUNCTION_62	IF_1
0x400aa8e	          0x4585c9	                           test r9d, r9d	      1997	getchar.c	FUNCTION_62	IF_1
0x400aa91	            0x7e0c	                           jle 0x400aa9f	      1997	getchar.c	FUNCTION_62	IF_1
0x400aa93	    0x448b05000000	            mov r8d, dword [0x0400aa9a] 	      1997	getchar.c	FUNCTION_62	IF_1
0x400aa9a	          0x4585c0	                           test r8d, r8d	      1997	getchar.c	FUNCTION_62	IF_1
0x400aa9d	            0x7495	                            je 0x400aa34	      1997	getchar.c	FUNCTION_62	IF_1
0x400aa9f	      0xe81ce3ffff	 call sym.vgetorpeek.part.9.constprop.14	      1997	getchar.c	FUNCTION_62	IF_1
0x400aaa4	    0x4181fcfd0000	                          cmp r12d, 0xfd	      1772	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	FOR_3	IF_17	IF_18	CALL_16
0x400aaab	            0x7587	                           jne 0x400aa34	      1772	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	FOR_3	IF_17	IF_18	CALL_16
0x400aaad	          0x83f851	                           cmp eax, 0x51	      1772	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	FOR_3	IF_17	IF_18	CALL_16
0x400aab0	            0x7582	                           jne 0x400aa34	      1772	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	FOR_3	IF_17	IF_18	CALL_16
0x400aab2	        0xc643019b	                mov byte [rbx + 1], 0x9b	      1773	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	FOR_3	IF_17	IF_18
0x400aab6	      0xe979ffffff	                           jmp 0x400aa34	      1773	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	FOR_3	IF_17	IF_18
0x400aabb	       0xf1f440000	                   nop dword [rax + rax]	      1773	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	FOR_3	IF_17	IF_18
0x400aac0	            0x31ff	                            xor edi, edi	      1574	getchar.c	FUNCTION_54	CALL_1
0x400aac2	      0xe800000000	                          call 0x400aac7	      1574	getchar.c	FUNCTION_54	CALL_1
0x400aac7	      0xe964fcffff	                           jmp 0x400a730	      1574	getchar.c	FUNCTION_54	CALL_1
0x400aacc	      0x3d039dffff	                     cmp eax, 0xffff9d03	      1673	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_10
0x400aad1	        0x400f94c7	                                sete dil	      1673	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_10
0x400aad5	          0x80e7fe	                            and bh, 0xfe	      1673	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_10
0x400aad8	    0x81fbfd620000	                         cmp ebx, 0x62fd	      1673	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_10
0x400aade	     0xf8550020000	                           jne 0x400ad34	      1673	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_10
0x400aae4	        0x400fb6ff	                          movzx edi, dil	      1675	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_10	CALL_11
0x400aae8	      0xe800000000	                          call 0x400aaed	      1675	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_10	CALL_11
0x400aaed	      0xb803caffff	                     mov eax, 0xffffca03	      1676	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_10
0x400aaf2	      0xe9eefeffff	                           jmp 0x400a9e5	      1676	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_10
0x400aaf7	    0x8b0500000000	            mov eax, dword [0x0400aafd] 	      1997	getchar.c	FUNCTION_62	IF_1
0x400aafd	            0x85c0	                           test eax, eax	      1997	getchar.c	FUNCTION_62	IF_1
0x400aaff	     0xf854dfeffff	                           jne 0x400a952	      1997	getchar.c	FUNCTION_62	IF_1
0x400ab05	            0x31c0	                            xor eax, eax	      1998	getchar.c	FUNCTION_62	IF_1
0x400ab07	      0xe9d9feffff	                           jmp 0x400a9e5	      1998	getchar.c	FUNCTION_62	IF_1
0x400ab0c	      0xe800000000	                          call 0x400ab11	      1803	getchar.c	FUNCTION_54
0x400ab11	     0xf1f80000000	                         nop dword [rax]	      1803	getchar.c	FUNCTION_54
0x400ab18	    0x832d00000000	               sub dword [0x0400ab1f], 1	      1776	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16
0x400ab1f	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	      1777	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16
0x400ab24	    0xff1500000000	                 call qword [0x0400ab2a]	      1777	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16
0x400ab2a	      0xe93efcffff	                           jmp 0x400a76d	      1777	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16
0x400ab2f	      0xb839000000	                           mov eax, 0x39	      1711	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ab34	      0xe9c7fcffff	                           jmp 0x400a800	      1711	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ab39	      0xb837000000	                           mov eax, 0x37	      1709	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ab3e	      0xe9bdfcffff	                           jmp 0x400a800	      1709	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ab43	      0xb834000000	                           mov eax, 0x34	      1706	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ab48	      0xe9b3fcffff	                           jmp 0x400a800	      1706	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ab4d	      0xb830000000	                           mov eax, 0x30	      1702	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ab52	      0xe9a9fcffff	                           jmp 0x400a800	      1702	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ab57	      0x3d03c0ffff	                     cmp eax, 0xffffc003	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ab5c	            0x7436	                            je 0x400ab94	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ab5e	     0xf8f96000000	                            jg 0x400abfa	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ab64	      0x3d03beffff	                     cmp eax, 0xffffbe03	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ab69	            0x7456	                            je 0x400abc1	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ab6b	            0x7f7c	                            jg 0x400abe9	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ab6d	      0x3d03bdffff	                     cmp eax, 0xffffbd03	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ab72	            0x7457	                            je 0x400abcb	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ab74	      0x3db5bdffff	                     cmp eax, 0xffffbdb5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ab79	     0xf8566feffff	                           jne 0x400a9e5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ab7f	      0xb82e000000	                           mov eax, 0x2e	      1700	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ab84	      0xe977fcffff	                           jmp 0x400a800	      1700	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ab89	      0x3d03bfffff	                     cmp eax, 0xffffbf03	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ab8e	     0xf8551feffff	                           jne 0x400a9e5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ab94	    0x8b1500000000	            mov edx, dword [0x0400ab9a] 	      1714	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	IF_12
0x400ab9a	          0x83fa02	                              cmp edx, 2	      1714	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	IF_12
0x400ab9d	            0x7436	                            je 0x400abd5	      1714	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	IF_12
0x400ab9f	          0x83fa04	                              cmp edx, 4	      1719	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_2	IF_13
0x400aba2	      0xb89597ffff	                     mov eax, 0xffff9795	      1725	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_3
0x400aba7	     0xf8561fcffff	                           jne 0x400a80e	      1719	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_2	IF_13
0x400abad	    0xc70500000000	               mov dword [0x0400abb7], 0	      1722	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_2	IF_13
0x400abb7	      0xb803a8ffff	                     mov eax, 0xffffa803	      1721	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_2	IF_13
0x400abbc	      0xe94dfcffff	                           jmp 0x400a80e	      1721	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_2	IF_13
0x400abc1	      0xb8958affff	                     mov eax, 0xffff8a95	      1742	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_5
0x400abc6	      0xe943fcffff	                           jmp 0x400a80e	      1742	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_5
0x400abcb	      0xb8959bffff	                     mov eax, 0xffff9b95	      1743	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_5
0x400abd0	      0xe939fcffff	                           jmp 0x400a80e	      1743	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_5
0x400abd5	    0xc70500000000	               mov dword [0x0400abdf], 0	      1717	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	IF_12
0x400abdf	      0xb8ddcdffff	                     mov eax, 0xffffcddd	      1716	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	IF_12
0x400abe4	      0xe925fcffff	                           jmp 0x400a80e	      1716	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	IF_12
0x400abe9	      0x3db5beffff	                     cmp eax, 0xffffbeb5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400abee	            0x7599	                           jne 0x400ab89	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400abf0	      0xb80d000000	                            mov eax, 0xd	      1693	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400abf5	      0xe906fcffff	                           jmp 0x400a800	      1693	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400abfa	      0x3db5c6ffff	                     cmp eax, 0xffffc6b5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400abff	     0xf84a0000000	                            je 0x400aca5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ac05	            0x7e4b	                           jle 0x400ac52	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ac07	      0x3db5c8ffff	                     cmp eax, 0xffffc8b5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ac0c	            0x743a	                            je 0x400ac48	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ac0e	      0x3db5c9ffff	                     cmp eax, 0xffffc9b5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ac13	            0x741b	                            je 0x400ac30	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ac15	      0x3db5c7ffff	                     cmp eax, 0xffffc7b5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ac1a	     0xf85c5fdffff	                           jne 0x400a9e5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ac20	      0xb82f000000	                           mov eax, 0x2f	      1691	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ac25	      0xe9d6fbffff	                           jmp 0x400a800	      1691	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ac2a	    0x660f1f440000	                    nop word [rax + rax]	      1691	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ac30	    0x8b3d00000000	            mov edi, dword [0x0400ac36] 	      1753	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	CALL_13
0x400ac36	      0xb82b000000	                           mov eax, 0x2b	      1689	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ac3b	            0x85ff	                           test edi, edi	      1753	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	CALL_13
0x400ac3d	     0xf84cbfbffff	                            je 0x400a80e	      1753	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	CALL_13
0x400ac43	      0xe9b8fdffff	                           jmp 0x400aa00	      1753	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	CALL_13
0x400ac48	      0xb82d000000	                           mov eax, 0x2d	      1690	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ac4d	      0xe9aefbffff	                           jmp 0x400a800	      1690	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ac52	      0x3d03c1ffff	                     cmp eax, 0xffffc103	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ac57	            0x740b	                            je 0x400ac64	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ac59	      0x3d03c2ffff	                     cmp eax, 0xffffc203	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ac5e	     0xf8581fdffff	                           jne 0x400a9e5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ac64	    0x8b1500000000	            mov edx, dword [0x0400ac6a] 	      1728	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_3	IF_14
0x400ac6a	          0x83fa02	                              cmp edx, 2	      1728	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_3	IF_14
0x400ac6d	            0x7422	                            je 0x400ac91	      1728	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_3	IF_14
0x400ac6f	          0x83fa04	                              cmp edx, 4	      1733	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_4	IF_15
0x400ac72	      0xb8c0c8ffff	                     mov eax, 0xffffc8c0	      1739	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_5
0x400ac77	     0xf8591fbffff	                           jne 0x400a80e	      1733	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_4	IF_15
0x400ac7d	    0xc70500000000	               mov dword [0x0400ac87], 0	      1736	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_4	IF_15
0x400ac87	      0xb803a7ffff	                     mov eax, 0xffffa703	      1735	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_4	IF_15
0x400ac8c	      0xe97dfbffff	                           jmp 0x400a80e	      1735	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_4	IF_15
0x400ac91	    0xc70500000000	               mov dword [0x0400ac9b], 0	      1731	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_3	IF_14
0x400ac9b	      0xb8d6c8ffff	                     mov eax, 0xffffc8d6	      1730	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_3	IF_14
0x400aca0	      0xe969fbffff	                           jmp 0x400a80e	      1730	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_3	IF_14
0x400aca5	      0xb82a000000	                           mov eax, 0x2a	      1692	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400acaa	      0xe951fbffff	                           jmp 0x400a800	      1692	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400acaf	      0x3db5b6ffff	                     cmp eax, 0xffffb6b5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400acb4	            0x7415	                            je 0x400accb	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400acb6	      0x3db5b7ffff	                     cmp eax, 0xffffb7b5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400acbb	     0xf8524fdffff	                           jne 0x400a9e5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400acc1	      0xb835000000	                           mov eax, 0x35	      1707	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400acc6	      0xe935fbffff	                           jmp 0x400a800	      1707	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400accb	      0xb836000000	                           mov eax, 0x36	      1708	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400acd0	      0xe92bfbffff	                           jmp 0x400a800	      1708	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400acd5	      0x3d03bbffff	                     cmp eax, 0xffffbb03	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400acda	            0x744e	                            je 0x400ad2a	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400acdc	            0x7f26	                            jg 0x400ad04	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400acde	      0x3db5b9ffff	                     cmp eax, 0xffffb9b5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ace3	            0x7415	                            je 0x400acfa	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ace5	      0x3db5baffff	                     cmp eax, 0xffffbab5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400acea	     0xf85f5fcffff	                           jne 0x400a9e5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400acf0	      0xb832000000	                           mov eax, 0x32	      1704	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400acf5	      0xe906fbffff	                           jmp 0x400a800	      1704	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400acfa	      0xb833000000	                           mov eax, 0x33	      1705	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400acff	      0xe9fcfaffff	                           jmp 0x400a800	      1705	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ad04	      0x3db5bbffff	                     cmp eax, 0xffffbbb5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ad09	            0x7415	                            je 0x400ad20	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ad0b	      0x3d03bcffff	                     cmp eax, 0xffffbc03	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ad10	     0xf85cffcffff	                           jne 0x400a9e5	      1687	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ad16	      0xb89593ffff	                     mov eax, 0xffff9395	      1744	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_5
0x400ad1b	      0xe9eefaffff	                           jmp 0x400a80e	      1744	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_5
0x400ad20	      0xb831000000	                           mov eax, 0x31	      1703	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ad25	      0xe9d6faffff	                           jmp 0x400a800	      1703	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1
0x400ad2a	      0xb8958dffff	                     mov eax, 0xffff8d95	      1745	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_5
0x400ad2f	      0xe9dafaffff	                           jmp 0x400a80e	      1745	getchar.c	FUNCTION_54	ELSE_1	FOR_1	SWITCH_1	ELSE_5
0x400ad34	      0x3d03aeffff	                     cmp eax, 0xffffae03	      1681	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_11
0x400ad39	     0xf856ffaffff	                           jne 0x400a7ae	      1681	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_11
0x400ad3f	    0x833d00000000	               cmp dword [0x0400ad46], 0	      1753	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	CALL_13
0x400ad46	      0xb89b000000	                           mov eax, 0x9b	      1682	getchar.c	FUNCTION_54	ELSE_1	FOR_1	IF_5	IF_11
0x400ad4b	     0xf85affcffff	                           jne 0x400aa00	      1753	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	CALL_13
0x400ad51	      0xe9b8faffff	                           jmp 0x400a80e	      1753	getchar.c	FUNCTION_54	ELSE_1	FOR_1	ELSE_5	IF_16	CALL_13
vungetc	WHILE,0:ELSE,0:IF,0:DO,0:CALL,0:functions,0:SWITCH,0:FOR,0	8
0x4003840	    0x8b0500000000	            mov eax, dword [0x04003846] 	      1920	getchar.c	FUNCTION_61
0x4003846	    0x893d00000000	            mov dword [0x0400384c], edi 	      1919	getchar.c	FUNCTION_61
0x400384c	    0x890500000000	            mov dword [0x04003852], eax 	      1920	getchar.c	FUNCTION_61
0x4003852	    0x8b0500000000	            mov eax, dword [0x04003858] 	      1922	getchar.c	FUNCTION_61
0x4003858	    0x890500000000	            mov dword [0x0400385e], eax 	      1922	getchar.c	FUNCTION_61
0x400385e	    0x8b0500000000	            mov eax, dword [0x04003864] 	      1923	getchar.c	FUNCTION_61
0x4003864	    0x890500000000	            mov dword [0x0400386a], eax 	      1923	getchar.c	FUNCTION_61
0x400386a	              0xc3	                                     ret	      1923	getchar.c	FUNCTION_61
check_map	WHILE,0:ELSE,4:IF,11:DO,0:CALL,3:functions,0:SWITCH,0:FOR,3	202
0x400bce0	            0x4157	                                push r15	      5190	getchar.c	FUNCTION_85
0x400bce2	            0x4156	                                push r14	      5190	getchar.c	FUNCTION_85
0x400bce4	            0x4155	                                push r13	      5190	getchar.c	FUNCTION_85
0x400bce6	            0x4154	                                push r12	      5190	getchar.c	FUNCTION_85
0x400bce8	          0x4189f5	                           mov r13d, esi	      5190	getchar.c	FUNCTION_85
0x400bceb	              0x55	                                push rbp	      5190	getchar.c	FUNCTION_85
0x400bcec	              0x53	                                push rbx	      5190	getchar.c	FUNCTION_85
0x400bced	          0x4889fd	                            mov rbp, rdi	      5190	getchar.c	FUNCTION_85
0x400bcf0	        0x4883ec48	                           sub rsp, 0x48	      5190	getchar.c	FUNCTION_85
0x400bcf4	    0x8b3d00000000	            mov edi, dword [0x0400bcfa] 	      3802	getchar.c	FUNCTION_68	IF_1
0x400bcfa	        0x89542418	             mov dword [rsp + 0x18], edx	      5190	getchar.c	FUNCTION_85
0x400bcfe	        0x894c241c	             mov dword [rsp + 0x1c], ecx	      5190	getchar.c	FUNCTION_85
0x400bd02	      0x448944240c	              mov dword [rsp + 0xc], r8d	      5190	getchar.c	FUNCTION_85
0x400bd07	      0x4c894c2428	              mov qword [rsp + 0x28], r9	      5190	getchar.c	FUNCTION_85
0x400bd0c	            0x85ff	                           test edi, edi	      3802	getchar.c	FUNCTION_68	IF_1
0x400bd0e	     0xf848c020000	                            je 0x400bfa0	      3802	getchar.c	FUNCTION_68	IF_1
0x400bd14	          0x4889ef	                            mov rdi, rbp	      5201	getchar.c	FUNCTION_85	CALL_2
0x400bd17	    0x41be01000000	                             mov r14d, 1	      5203	getchar.c	FUNCTION_85	FOR_1
0x400bd1d	      0xe800000000	                          call 0x400bd22	      5201	getchar.c	FUNCTION_85	CALL_2
0x400bd22	            0x89c3	                            mov ebx, eax	      5201	getchar.c	FUNCTION_85	CALL_2
0x400bd24	    0x488b05000000	            mov rax, qword [0x0400bd2b] 	      5214	getchar.c	FUNCTION_85	FOR_1	FOR_2	IF_1	IF_3
0x400bd2b	      0x4889442410	             mov qword [rsp + 0x10], rax	      5214	getchar.c	FUNCTION_85	FOR_1	FOR_2	IF_1	IF_3
0x400bd30	    0x488b05000000	            mov rax, qword [0x0400bd37] 	      5217	getchar.c	FUNCTION_85	FOR_1	FOR_2	IF_1	ELSE_1
0x400bd37	      0x4889442430	             mov qword [rsp + 0x30], rax	      5217	getchar.c	FUNCTION_85	FOR_1	FOR_2	IF_1	ELSE_1
0x400bd3c	          0x4863c3	                         movsxd rax, ebx	      5243	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	CALL_3
0x400bd3f	      0x4889442420	             mov qword [rsp + 0x20], rax	      5243	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	CALL_3
0x400bd44	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      5208	getchar.c	FUNCTION_85	FOR_1	FOR_2	IF_1
0x400bd48	          0x4531e4	                          xor r12d, r12d	      5190	getchar.c	FUNCTION_85
0x400bd4b	    0xc74424080100	                  mov dword [rsp + 8], 1	      5190	getchar.c	FUNCTION_85
0x400bd53	          0x4589ef	                          mov r15d, r13d	      5190	getchar.c	FUNCTION_85
0x400bd56	            0x85f6	                           test esi, esi	      5208	getchar.c	FUNCTION_85	FOR_1	FOR_2	IF_1
0x400bd58	     0xf840a010000	                            je 0x400be68	      5208	getchar.c	FUNCTION_85	FOR_1	FOR_2	IF_1
0x400bd5e	          0x4d85e4	                           test r12, r12	      5210	getchar.c	FUNCTION_85	FOR_1	FOR_2	IF_1	IF_2
0x400bd61	     0xf85d9010000	                           jne 0x400bf40	      5210	getchar.c	FUNCTION_85	FOR_1	FOR_2	IF_1	IF_2
0x400bd67	          0x4585f6	                         test r14d, r14d	      5213	getchar.c	FUNCTION_85	FOR_1	FOR_2	IF_1	IF_3
0x400bd6a	     0xf845e020000	                            je 0x400bfce	      5213	getchar.c	FUNCTION_85	FOR_1	FOR_2	IF_1	IF_3
0x400bd70	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5214	getchar.c	FUNCTION_85	FOR_1	FOR_2	IF_1	IF_3
0x400bd75	    0x4c8ba8c01100	          mov r13, qword [rax + 0x11c0] 	      5214	getchar.c	FUNCTION_85	FOR_1	FOR_2	IF_1	IF_3
0x400bd7c	          0x4d85ed	                           test r13, r13	      5225	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3
0x400bd7f	     0xf84ce000000	                            je 0x400be53	      5225	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3
0x400bd85	        0x8b4c241c	            mov ecx, dword [rsp + 0x1c] 	      5225	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3
0x400bd89	            0x85c9	                           test ecx, ecx	      5225	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3
0x400bd8b	     0xf85fe000000	                           jne 0x400be8f	      5225	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3
0x400bd91	        0x8b542418	            mov edx, dword [rsp + 0x18] 	      5225	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3
0x400bd95	            0x85d2	                           test edx, edx	      5225	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3
0x400bd97	            0x747f	                            je 0x400be18	      5225	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3
0x400bd99	      0x4c89642438	             mov qword [rsp + 0x38], r12	      5225	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3
0x400bd9e	          0x4189dc	                           mov r12d, ebx	      5225	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3
0x400bda1	      0x488b5c2420	            mov rbx, qword [rsp + 0x20] 	      5225	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3
0x400bda6	            0xeb15	                           jmp 0x400bdbd	      5225	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3
0x400bda8	     0xf1f84000000	                   nop dword [rax + rax]	      5225	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3
0x400bdb0	        0x4d8b6d00	                    mov r13, qword [r13]	      5225	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3
0x400bdb4	          0x4d85ed	                           test r13, r13	      5225	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3
0x400bdb7	     0xf84d3010000	                            je 0x400bf90	      5225	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3
0x400bdbd	        0x45857d24	          test dword [r13 + 0x24], r15d 	      5229	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5
0x400bdc1	            0x74ed	                            je 0x400bdb0	      5229	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5
0x400bdc3	        0x453b6520	           cmp r12d, dword [r13 + 0x20] 	      5229	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5
0x400bdc7	            0x75e7	                           jne 0x400bdb0	      5229	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5
0x400bdc9	        0x498b7d08	                mov rdi, qword [r13 + 8]	      5243	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	CALL_3
0x400bdcd	          0x4889da	                            mov rdx, rbx	      5243	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	CALL_3
0x400bdd0	          0x4889ee	                            mov rsi, rbp	      5243	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	CALL_3
0x400bdd3	      0xe800000000	                          call 0x400bdd8	      5243	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	CALL_3
0x400bdd8	            0x85c0	                           test eax, eax	      5243	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	CALL_3
0x400bdda	            0x75d4	                           jne 0x400bdb0	      5243	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	CALL_3
0x400bddc	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      5245	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	IF_10
0x400bde1	          0x4d89ef	                            mov r15, r13	      5245	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	IF_10
0x400bde4	          0x4885c0	                           test rax, rax	      5245	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	IF_10
0x400bde7	            0x7403	                            je 0x400bdec	      5245	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	IF_10
0x400bde9	          0x4c8928	                    mov qword [rax], r13	      5246	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	IF_10
0x400bdec	    0x4883bc248000	               cmp qword [rsp + 0x80], 0	      5247	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	IF_11
0x400bdf5	            0x740b	                            je 0x400be02	      5247	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	IF_11
0x400bdf7	    0x488b84248000	            mov rax, qword [rsp + 0x80] 	      5249	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	IF_11
0x400bdff	          0x448930	                   mov dword [rax], r14d	      5249	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	IF_11
0x400be02	        0x498b4710	            mov rax, qword [r15 + 0x10] 	      5253	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9
0x400be06	        0x4883c448	                           add rsp, 0x48	      5260	getchar.c	FUNCTION_85
0x400be0a	              0x5b	                                 pop rbx	      5260	getchar.c	FUNCTION_85
0x400be0b	              0x5d	                                 pop rbp	      5260	getchar.c	FUNCTION_85
0x400be0c	            0x415c	                                 pop r12	      5260	getchar.c	FUNCTION_85
0x400be0e	            0x415d	                                 pop r13	      5260	getchar.c	FUNCTION_85
0x400be10	            0x415e	                                 pop r14	      5260	getchar.c	FUNCTION_85
0x400be12	            0x415f	                                 pop r15	      5260	getchar.c	FUNCTION_85
0x400be14	              0xc3	                                     ret	      5260	getchar.c	FUNCTION_85
0x400be15	           0xf1f00	                         nop dword [rax]	      5260	getchar.c	FUNCTION_85
0x400be18	        0x45857d24	          test dword [r13 + 0x24], r15d 	      5229	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5
0x400be1c	            0x741e	                            je 0x400be3c	      5229	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5
0x400be1e	        0x41395d20	            cmp dword [r13 + 0x20], ebx 	      5243	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	CALL_3
0x400be22	            0x89da	                            mov edx, ebx	      5243	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	CALL_3
0x400be24	        0x498b7d08	                mov rdi, qword [r13 + 8]	      5243	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	CALL_3
0x400be28	      0x410f4e5520	          cmovle edx, dword [r13 + 0x20]	      5243	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	CALL_3
0x400be2d	          0x4889ee	                            mov rsi, rbp	      5243	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	CALL_3
0x400be30	          0x4863d2	                         movsxd rdx, edx	      5243	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	CALL_3
0x400be33	      0xe800000000	                          call 0x400be38	      5243	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	CALL_3
0x400be38	            0x85c0	                           test eax, eax	      5243	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	CALL_3
0x400be3a	            0x74a0	                            je 0x400bddc	      5243	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	CALL_3
0x400be3c	        0x4d8b6d00	                    mov r13, qword [r13]	      5225	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3
0x400be40	          0x4d85ed	                           test r13, r13	      5225	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3
0x400be43	            0x75d3	                           jne 0x400be18	      5225	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3
0x400be45	    0x817c24080001	              cmp dword [rsp + 8], 0x100	      5206	getchar.c	FUNCTION_85	FOR_1	FOR_2
0x400be4d	     0xf84ed000000	                            je 0x400bf40	      5206	getchar.c	FUNCTION_85	FOR_1	FOR_2
0x400be53	        0x8b74240c	              mov esi, dword [rsp + 0xc]	      5208	getchar.c	FUNCTION_85	FOR_1	FOR_2	IF_1
0x400be57	        0x4983c401	                              add r12, 1	      5208	getchar.c	FUNCTION_85	FOR_1	FOR_2	IF_1
0x400be5b	      0x8344240801	                  add dword [rsp + 8], 1	      5208	getchar.c	FUNCTION_85	FOR_1	FOR_2	IF_1
0x400be60	            0x85f6	                           test esi, esi	      5208	getchar.c	FUNCTION_85	FOR_1	FOR_2	IF_1
0x400be62	     0xf85f6feffff	                           jne 0x400bd5e	      5208	getchar.c	FUNCTION_85	FOR_1	FOR_2	IF_1
0x400be68	          0x4585f6	                         test r14d, r14d	      5220	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_2	IF_4
0x400be6b	     0xf8450010000	                            je 0x400bfc1	      5220	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_2	IF_4
0x400be71	      0x488b442410	            mov rax, qword [rsp + 0x10] 	      5221	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_2	IF_4
0x400be76	    0x4e8bace0c009	   mov r13, qword [rax + r12*8 + 0x9c0] 	      5221	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_2	IF_4
0x400be7e	          0x4d85ed	                           test r13, r13	      5225	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3
0x400be81	            0x74c2	                            je 0x400be45	      5225	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3
0x400be83	        0x8b4c241c	            mov ecx, dword [rsp + 0x1c] 	      5225	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3
0x400be87	            0x85c9	                           test ecx, ecx	      5225	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3
0x400be89	     0xf8402ffffff	                            je 0x400bd91	      5225	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3
0x400be8f	        0x8b442418	            mov eax, dword [rsp + 0x18] 	      5225	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3
0x400be93	            0x85c0	                           test eax, eax	      5225	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3
0x400be95	     0xf8485000000	                            je 0x400bf20	      5225	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3
0x400be9b	        0x45857d24	          test dword [r13 + 0x24], r15d 	      5229	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5
0x400be9f	            0x7516	                           jne 0x400beb7	      5229	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5
0x400bea1	     0xf1f80000000	                         nop dword [rax]	      5229	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5
0x400bea8	        0x4d8b6d00	                    mov r13, qword [r13]	      5225	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3
0x400beac	          0x4d85ed	                           test r13, r13	      5225	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3
0x400beaf	            0x7494	                            je 0x400be45	      5225	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3
0x400beb1	        0x45857d24	          test dword [r13 + 0x24], r15d 	      5229	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5
0x400beb5	            0x74f1	                            je 0x400bea8	      5229	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5
0x400beb7	        0x413b5d20	            cmp ebx, dword [r13 + 0x20] 	      5229	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5
0x400bebb	            0x75eb	                           jne 0x400bea8	      5229	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5
0x400bebd	        0x498b7d08	                mov rdi, qword [r13 + 8]	      5235	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4
0x400bec1	            0x89da	                            mov edx, ebx	      5236	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4	IF_7
0x400bec3	          0x803f80	                    cmp byte [rdi], 0x80	      5236	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4	IF_7
0x400bec6	     0xf849c000000	                            je 0x400bf68	      5236	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4	IF_7
0x400becc	          0x4863d2	                         movsxd rdx, edx	      5243	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	CALL_3
0x400becf	          0x4889ee	                            mov rsi, rbp	      5243	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	CALL_3
0x400bed2	      0xe800000000	                          call 0x400bed7	      5243	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	CALL_3
0x400bed7	            0x85c0	                           test eax, eax	      5243	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	CALL_3
0x400bed9	            0x75cd	                           jne 0x400bea8	      5243	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	CALL_3
0x400bedb	      0xe9fcfeffff	                           jmp 0x400bddc	      5243	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	CALL_3
0x400bee0	        0x807f01fc	                cmp byte [rdi + 1], 0xfc	      5236	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4	IF_7
0x400bee4	            0x751a	                           jne 0x400bf00	      5236	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4	IF_7
0x400bee6	        0x807f0200	                   cmp byte [rdi + 2], 0	      5237	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4	IF_7
0x400beea	            0x7414	                            je 0x400bf00	      5237	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4	IF_7
0x400beec	          0x8d48fe	                      lea ecx, [rax - 2]	      5240	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4	IF_7	IF_8
0x400beef	        0x4883c703	                              add rdi, 3	      5239	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4	IF_7
0x400bef3	          0x83e803	                              sub eax, 3	      5241	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4	IF_7	IF_8
0x400bef6	            0x39cb	                            cmp ebx, ecx	      5241	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4	IF_7	IF_8
0x400bef8	           0xf4dd0	                         cmovge edx, eax	      5241	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4	IF_7	IF_8
0x400befb	       0xf1f440000	                   nop dword [rax + rax]	      5241	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4	IF_7	IF_8
0x400bf00	          0x4863d2	                         movsxd rdx, edx	      5243	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	CALL_3
0x400bf03	          0x4889ee	                            mov rsi, rbp	      5243	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	CALL_3
0x400bf06	      0xe800000000	                          call 0x400bf0b	      5243	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	CALL_3
0x400bf0b	            0x85c0	                           test eax, eax	      5243	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	CALL_3
0x400bf0d	     0xf84c9feffff	                            je 0x400bddc	      5243	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	IF_9	CALL_3
0x400bf13	        0x4d8b6d00	                    mov r13, qword [r13]	      5225	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3
0x400bf17	          0x4d85ed	                           test r13, r13	      5225	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3
0x400bf1a	     0xf8425ffffff	                            je 0x400be45	      5225	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3
0x400bf20	        0x45857d24	          test dword [r13 + 0x24], r15d 	      5229	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5
0x400bf24	            0x74ed	                            je 0x400bf13	      5229	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5
0x400bf26	        0x418b4520	            mov eax, dword [r13 + 0x20] 	      5229	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5
0x400bf2a	        0x498b7d08	                mov rdi, qword [r13 + 8]	      5235	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4
0x400bf2e	            0x39c3	                            cmp ebx, eax	      5235	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4
0x400bf30	            0x89c2	                            mov edx, eax	      5235	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4
0x400bf32	           0xf4ed3	                         cmovle edx, ebx	      5235	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4
0x400bf35	          0x803f80	                    cmp byte [rdi], 0x80	      5236	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4	IF_7
0x400bf38	            0x75c6	                           jne 0x400bf00	      5236	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4	IF_7
0x400bf3a	            0xeba4	                           jmp 0x400bee0	      5236	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4	IF_7
0x400bf3c	         0xf1f4000	                         nop dword [rax]	      5236	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4	IF_7
0x400bf40	        0x4183ee01	                             sub r14d, 1	      5203	getchar.c	FUNCTION_85	FOR_1
0x400bf44	          0x4589fd	                          mov r13d, r15d	      5203	getchar.c	FUNCTION_85	FOR_1
0x400bf47	        0x4183feff	            cmp r14d, 0xffffffffffffffff	      5203	getchar.c	FUNCTION_85	FOR_1
0x400bf4b	     0xf85f3fdffff	                           jne 0x400bd44	      5203	getchar.c	FUNCTION_85	FOR_1
0x400bf51	        0x4883c448	                           add rsp, 0x48	      5260	getchar.c	FUNCTION_85
0x400bf55	            0x31c0	                            xor eax, eax	      5259	getchar.c	FUNCTION_85
0x400bf57	              0x5b	                                 pop rbx	      5260	getchar.c	FUNCTION_85
0x400bf58	              0x5d	                                 pop rbp	      5260	getchar.c	FUNCTION_85
0x400bf59	            0x415c	                                 pop r12	      5260	getchar.c	FUNCTION_85
0x400bf5b	            0x415d	                                 pop r13	      5260	getchar.c	FUNCTION_85
0x400bf5d	            0x415e	                                 pop r14	      5260	getchar.c	FUNCTION_85
0x400bf5f	            0x415f	                                 pop r15	      5260	getchar.c	FUNCTION_85
0x400bf61	              0xc3	                                     ret	      5260	getchar.c	FUNCTION_85
0x400bf62	    0x660f1f440000	                    nop word [rax + rax]	      5260	getchar.c	FUNCTION_85
0x400bf68	        0x807f01fc	                cmp byte [rdi + 1], 0xfc	      5236	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4	IF_7
0x400bf6c	     0xf855affffff	                           jne 0x400becc	      5236	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4	IF_7
0x400bf72	        0x807f0200	                   cmp byte [rdi + 2], 0	      5237	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4	IF_7
0x400bf76	     0xf8450ffffff	                            je 0x400becc	      5237	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4	IF_7
0x400bf7c	        0x4883c703	                              add rdi, 3	      5239	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4	IF_7
0x400bf80	          0x8d53fd	                      lea edx, [rbx - 3]	      5241	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4	IF_7	IF_8
0x400bf83	      0xe944ffffff	                           jmp 0x400becc	      5241	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4	IF_7	IF_8
0x400bf88	     0xf1f84000000	                   nop dword [rax + rax]	      5241	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4	IF_7	IF_8
0x400bf90	          0x4489e3	                           mov ebx, r12d	      5241	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4	IF_7	IF_8
0x400bf93	      0x4c8b642438	            mov r12, qword [rsp + 0x38] 	      5241	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4	IF_7	IF_8
0x400bf98	      0xe9a8feffff	                           jmp 0x400be45	      5241	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4	IF_7	IF_8
0x400bf9d	           0xf1f00	                         nop dword [rax]	      5241	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3	FOR_3	IF_5	ELSE_4	IF_7	IF_8
0x400bfa0	      0xba00000000	                              mov edx, 0	        90	string3.h	FUNCTION_108	CALL_6
0x400bfa5	      0xb900010000	                          mov ecx, 0x100	        90	string3.h	FUNCTION_108	CALL_6
0x400bfaa	            0x31c0	                            xor eax, eax	        90	string3.h	FUNCTION_108	CALL_6
0x400bfac	          0x4889d7	                            mov rdi, rdx	        90	string3.h	FUNCTION_108	CALL_6
0x400bfaf	    0xc70500000000	               mov dword [0x0400bfb9], 1	      3805	getchar.c	FUNCTION_68	IF_1
0x400bfb9	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_108	CALL_6
0x400bfbc	      0xe953fdffff	                           jmp 0x400bd14	        90	string3.h	FUNCTION_108	CALL_6
0x400bfc1	    0x4e8b2ce50000	                  mov r13, qword [r12*8]	      5224	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3
0x400bfc9	      0xe9b0feffff	                           jmp 0x400be7e	      5224	getchar.c	FUNCTION_85	FOR_1	FOR_2	ELSE_3
0x400bfce	      0x4c8b6c2430	            mov r13, qword [rsp + 0x30] 	      5217	getchar.c	FUNCTION_85	FOR_1	FOR_2	IF_1	ELSE_1
0x400bfd3	      0xe9a4fdffff	                           jmp 0x400bd7c	      5217	getchar.c	FUNCTION_85	FOR_1	FOR_2	IF_1	ELSE_1
saveRedobuff	WHILE,0:ELSE,0:IF,1:DO,0:CALL,3:functions,0:SWITCH,0:FOR,0	73
0x40016f0	    0x488b05000000	            mov rax, qword [0x040016f7] 	       528	getchar.c	FUNCTION_17
0x40016f7	            0x4154	                                push r12	       525	getchar.c	FUNCTION_17
0x40016f9	              0x55	                                push rbp	       525	getchar.c	FUNCTION_17
0x40016fa	              0x53	                                push rbx	       525	getchar.c	FUNCTION_17
0x40016fb	          0x488907	                    mov qword [rdi], rax	       528	getchar.c	FUNCTION_17
0x40016fe	    0x488b05000000	            mov rax, qword [0x04001705] 	       528	getchar.c	FUNCTION_17
0x4001705	    0x48c705000000	               mov qword [0x04001710], 0	       529	getchar.c	FUNCTION_17
0x4001710	          0x488b1f	                    mov rbx, qword [rdi]	       165	getchar.c	FUNCTION_2	FOR_1
0x4001713	        0x48894708	                mov qword [rdi + 8], rax	       528	getchar.c	FUNCTION_17
0x4001717	    0x488b05000000	            mov rax, qword [0x0400171e] 	       528	getchar.c	FUNCTION_17
0x400171e	          0x4885db	                           test rbx, rbx	       165	getchar.c	FUNCTION_2	FOR_1
0x4001721	        0x48894710	             mov qword [rdi + 0x10], rax	       528	getchar.c	FUNCTION_17
0x4001725	    0x488b05000000	            mov rax, qword [0x0400172c] 	       528	getchar.c	FUNCTION_17
0x400172c	        0x48894718	             mov qword [rdi + 0x18], rax	       528	getchar.c	FUNCTION_17
0x4001730	    0x488b05000000	            mov rax, qword [0x04001737] 	       530	getchar.c	FUNCTION_17
0x4001737	    0x48c705000000	               mov qword [0x04001742], 0	       531	getchar.c	FUNCTION_17
0x4001742	        0x48894720	             mov qword [rdi + 0x20], rax	       530	getchar.c	FUNCTION_17
0x4001746	    0x488b05000000	            mov rax, qword [0x0400174d] 	       530	getchar.c	FUNCTION_17
0x400174d	        0x48894728	             mov qword [rdi + 0x28], rax	       530	getchar.c	FUNCTION_17
0x4001751	    0x488b05000000	            mov rax, qword [0x04001758] 	       530	getchar.c	FUNCTION_17
0x4001758	        0x48894730	             mov qword [rdi + 0x30], rax	       530	getchar.c	FUNCTION_17
0x400175c	    0x488b05000000	            mov rax, qword [0x04001763] 	       530	getchar.c	FUNCTION_17
0x4001763	        0x48894738	             mov qword [rdi + 0x38], rax	       530	getchar.c	FUNCTION_17
0x4001767	     0xf8491000000	                            je 0x40017fe	       165	getchar.c	FUNCTION_2	FOR_1
0x400176d	          0x4989fc	                            mov r12, rdi	       165	getchar.c	FUNCTION_2	FOR_1
0x4001770	            0x31ed	                            xor ebp, ebp	       165	getchar.c	FUNCTION_2	FOR_1
0x4001772	    0x660f1f440000	                    nop word [rax + rax]	       165	getchar.c	FUNCTION_2	FOR_1
0x4001778	        0x488d7b08	                      lea rdi, [rbx + 8]	       166	getchar.c	FUNCTION_2	CALL_1
0x400177c	      0xe800000000	                          call 0x4001781	       166	getchar.c	FUNCTION_2	CALL_1
0x4001781	          0x488b1b	                    mov rbx, qword [rbx]	       165	getchar.c	FUNCTION_2	FOR_1
0x4001784	          0x4801c5	                            add rbp, rax	       166	getchar.c	FUNCTION_2	CALL_1
0x4001787	          0x4885db	                           test rbx, rbx	       165	getchar.c	FUNCTION_2	FOR_1
0x400178a	            0x75ec	                           jne 0x4001778	       165	getchar.c	FUNCTION_2	FOR_1
0x400178c	          0x4885ed	                           test rbp, rbp	       168	getchar.c	FUNCTION_2	IF_1	CALL_2
0x400178f	            0x746d	                            je 0x40017fe	       168	getchar.c	FUNCTION_2	IF_1	CALL_2
0x4001791	        0x488d7d01	                      lea rdi, [rbp + 1]	       168	getchar.c	FUNCTION_2	IF_1	CALL_2
0x4001795	      0xbe01000000	                              mov esi, 1	       168	getchar.c	FUNCTION_2	IF_1	CALL_2
0x400179a	      0xe800000000	                          call 0x400179f	       168	getchar.c	FUNCTION_2	IF_1	CALL_2
0x400179f	          0x4885c0	                           test rax, rax	       168	getchar.c	FUNCTION_2	IF_1	CALL_2
0x40017a2	          0x4889c3	                            mov rbx, rax	       168	getchar.c	FUNCTION_2	IF_1	CALL_2
0x40017a5	            0x7457	                            je 0x40017fe	       168	getchar.c	FUNCTION_2	IF_1	CALL_2
0x40017a7	        0x498b3c24	                    mov rdi, qword [r12]	       171	getchar.c	FUNCTION_2	IF_1	FOR_2
0x40017ab	          0x4889c6	                            mov rsi, rax	       171	getchar.c	FUNCTION_2	IF_1	FOR_2
0x40017ae	          0x4885ff	                           test rdi, rdi	       171	getchar.c	FUNCTION_2	IF_1	FOR_2
0x40017b1	            0x742f	                            je 0x40017e2	       171	getchar.c	FUNCTION_2	IF_1	FOR_2
0x40017b3	       0xf1f440000	                   nop dword [rax + rax]	       171	getchar.c	FUNCTION_2	IF_1	FOR_2
0x40017b8	         0xfb65708	               movzx edx, byte [rdi + 8]	       172	getchar.c	FUNCTION_2	IF_1	FOR_2	FOR_3
0x40017bc	        0x488d4f08	                      lea rcx, [rdi + 8]	       172	getchar.c	FUNCTION_2	IF_1	FOR_2	FOR_3
0x40017c0	            0x84d2	                             test dl, dl	       172	getchar.c	FUNCTION_2	IF_1	FOR_2	FOR_3
0x40017c2	            0x7416	                            je 0x40017da	       172	getchar.c	FUNCTION_2	IF_1	FOR_2	FOR_3
0x40017c4	         0xf1f4000	                         nop dword [rax]	       172	getchar.c	FUNCTION_2	IF_1	FOR_2	FOR_3
0x40017c8	        0x4883c601	                              add rsi, 1	       173	getchar.c	FUNCTION_2	IF_1	FOR_2	FOR_3
0x40017cc	        0x4883c101	                              add rcx, 1	       173	getchar.c	FUNCTION_2	IF_1	FOR_2	FOR_3
0x40017d0	          0x8856ff	                  mov byte [rsi - 1], dl	       173	getchar.c	FUNCTION_2	IF_1	FOR_2	FOR_3
0x40017d3	           0xfb611	                   movzx edx, byte [rcx]	       172	getchar.c	FUNCTION_2	IF_1	FOR_2	FOR_3
0x40017d6	            0x84d2	                             test dl, dl	       172	getchar.c	FUNCTION_2	IF_1	FOR_2	FOR_3
0x40017d8	            0x75ee	                           jne 0x40017c8	       172	getchar.c	FUNCTION_2	IF_1	FOR_2	FOR_3
0x40017da	          0x488b3f	                    mov rdi, qword [rdi]	       171	getchar.c	FUNCTION_2	IF_1	FOR_2
0x40017dd	          0x4885ff	                           test rdi, rdi	       171	getchar.c	FUNCTION_2	IF_1	FOR_2
0x40017e0	            0x75d6	                           jne 0x40017b8	       171	getchar.c	FUNCTION_2	IF_1	FOR_2
0x40017e2	          0xc60600	                       mov byte [rsi], 0	       174	getchar.c	FUNCTION_2	IF_1
0x40017e5	      0xbf00000000	                              mov edi, 0	       537	getchar.c	FUNCTION_17	IF_1	CALL_2
0x40017ea	          0x4889de	                            mov rsi, rbx	       537	getchar.c	FUNCTION_17	IF_1	CALL_2
0x40017ed	      0xe8eeecffff	          call sym.add_buff.constprop.22	       537	getchar.c	FUNCTION_17	IF_1	CALL_2
0x40017f2	          0x4889df	                            mov rdi, rbx	       538	getchar.c	FUNCTION_17	IF_1	CALL_3
0x40017f5	              0x5b	                                 pop rbx	       540	getchar.c	FUNCTION_17
0x40017f6	              0x5d	                                 pop rbp	       540	getchar.c	FUNCTION_17
0x40017f7	            0x415c	                                 pop r12	       540	getchar.c	FUNCTION_17
0x40017f9	      0xe900000000	                           jmp 0x40017fe	       538	getchar.c	FUNCTION_17	IF_1	CALL_3
0x40017fe	              0x5b	                                 pop rbx	       540	getchar.c	FUNCTION_17
0x40017ff	              0x5d	                                 pop rbp	       540	getchar.c	FUNCTION_17
0x4001800	            0x415c	                                 pop r12	       540	getchar.c	FUNCTION_17
0x4001802	              0xc3	                                     ret	       540	getchar.c	FUNCTION_17
get_inserted	WHILE,0:ELSE,0:IF,0:DO,0:CALL,1:functions,0:SWITCH,0:FOR,0	50
0x4001430	              0x55	                                push rbp	       220	getchar.c	FUNCTION_4
0x4001431	              0x53	                                push rbx	       220	getchar.c	FUNCTION_4
0x4001432	            0x31ed	                            xor ebp, ebp	       220	getchar.c	FUNCTION_4
0x4001434	        0x4883ec08	                              sub rsp, 8	       220	getchar.c	FUNCTION_4
0x4001438	    0x488b1d000000	            mov rbx, qword [0x0400143f] 	       165	getchar.c	FUNCTION_2	FOR_1
0x400143f	          0x4885db	                           test rbx, rbx	       165	getchar.c	FUNCTION_2	FOR_1
0x4001442	            0x7478	                            je 0x40014bc	       165	getchar.c	FUNCTION_2	FOR_1
0x4001444	         0xf1f4000	                         nop dword [rax]	       165	getchar.c	FUNCTION_2	FOR_1
0x4001448	        0x488d7b08	                      lea rdi, [rbx + 8]	       166	getchar.c	FUNCTION_2	CALL_1
0x400144c	      0xe800000000	                          call 0x4001451	       166	getchar.c	FUNCTION_2	CALL_1
0x4001451	          0x488b1b	                    mov rbx, qword [rbx]	       165	getchar.c	FUNCTION_2	FOR_1
0x4001454	          0x4801c5	                            add rbp, rax	       166	getchar.c	FUNCTION_2	CALL_1
0x4001457	          0x4885db	                           test rbx, rbx	       165	getchar.c	FUNCTION_2	FOR_1
0x400145a	            0x75ec	                           jne 0x4001448	       165	getchar.c	FUNCTION_2	FOR_1
0x400145c	          0x4885ed	                           test rbp, rbp	       168	getchar.c	FUNCTION_2	IF_1	CALL_2
0x400145f	            0x745b	                            je 0x40014bc	       168	getchar.c	FUNCTION_2	IF_1	CALL_2
0x4001461	        0x488d7d01	                      lea rdi, [rbp + 1]	       168	getchar.c	FUNCTION_2	IF_1	CALL_2
0x4001465	      0xbe01000000	                              mov esi, 1	       168	getchar.c	FUNCTION_2	IF_1	CALL_2
0x400146a	      0xe800000000	                          call 0x400146f	       168	getchar.c	FUNCTION_2	IF_1	CALL_2
0x400146f	          0x4885c0	                           test rax, rax	       168	getchar.c	FUNCTION_2	IF_1	CALL_2
0x4001472	            0x7448	                            je 0x40014bc	       168	getchar.c	FUNCTION_2	IF_1	CALL_2
0x4001474	    0x488b3d000000	            mov rdi, qword [0x0400147b] 	       171	getchar.c	FUNCTION_2	IF_1	FOR_2
0x400147b	          0x4889c6	                            mov rsi, rax	       171	getchar.c	FUNCTION_2	IF_1	FOR_2
0x400147e	          0x4885ff	                           test rdi, rdi	       171	getchar.c	FUNCTION_2	IF_1	FOR_2
0x4001481	            0x742f	                            je 0x40014b2	       171	getchar.c	FUNCTION_2	IF_1	FOR_2
0x4001483	       0xf1f440000	                   nop dword [rax + rax]	       171	getchar.c	FUNCTION_2	IF_1	FOR_2
0x4001488	         0xfb65708	               movzx edx, byte [rdi + 8]	       172	getchar.c	FUNCTION_2	IF_1	FOR_2	FOR_3
0x400148c	        0x488d4f08	                      lea rcx, [rdi + 8]	       172	getchar.c	FUNCTION_2	IF_1	FOR_2	FOR_3
0x4001490	            0x84d2	                             test dl, dl	       172	getchar.c	FUNCTION_2	IF_1	FOR_2	FOR_3
0x4001492	            0x7416	                            je 0x40014aa	       172	getchar.c	FUNCTION_2	IF_1	FOR_2	FOR_3
0x4001494	         0xf1f4000	                         nop dword [rax]	       172	getchar.c	FUNCTION_2	IF_1	FOR_2	FOR_3
0x4001498	        0x4883c601	                              add rsi, 1	       173	getchar.c	FUNCTION_2	IF_1	FOR_2	FOR_3
0x400149c	        0x4883c101	                              add rcx, 1	       173	getchar.c	FUNCTION_2	IF_1	FOR_2	FOR_3
0x40014a0	          0x8856ff	                  mov byte [rsi - 1], dl	       173	getchar.c	FUNCTION_2	IF_1	FOR_2	FOR_3
0x40014a3	           0xfb611	                   movzx edx, byte [rcx]	       172	getchar.c	FUNCTION_2	IF_1	FOR_2	FOR_3
0x40014a6	            0x84d2	                             test dl, dl	       172	getchar.c	FUNCTION_2	IF_1	FOR_2	FOR_3
0x40014a8	            0x75ee	                           jne 0x4001498	       172	getchar.c	FUNCTION_2	IF_1	FOR_2	FOR_3
0x40014aa	          0x488b3f	                    mov rdi, qword [rdi]	       171	getchar.c	FUNCTION_2	IF_1	FOR_2
0x40014ad	          0x4885ff	                           test rdi, rdi	       171	getchar.c	FUNCTION_2	IF_1	FOR_2
0x40014b0	            0x75d6	                           jne 0x4001488	       171	getchar.c	FUNCTION_2	IF_1	FOR_2
0x40014b2	          0xc60600	                       mov byte [rsi], 0	       174	getchar.c	FUNCTION_2	IF_1
0x40014b5	        0x4883c408	                              add rsp, 8	       222	getchar.c	FUNCTION_4
0x40014b9	              0x5b	                                 pop rbx	       222	getchar.c	FUNCTION_4
0x40014ba	              0x5d	                                 pop rbp	       222	getchar.c	FUNCTION_4
0x40014bb	              0xc3	                                     ret	       222	getchar.c	FUNCTION_4
0x40014bc	        0x4883c408	                              add rsp, 8	       222	getchar.c	FUNCTION_4
0x40014c0	            0x31c0	                            xor eax, eax	       159	getchar.c	FUNCTION_2
0x40014c2	              0x5b	                                 pop rbx	       222	getchar.c	FUNCTION_4
0x40014c3	              0x5d	                                 pop rbp	       222	getchar.c	FUNCTION_4
0x40014c4	              0xc3	                                     ret	       222	getchar.c	FUNCTION_4
stuffnumReadbuff	WHILE,0:ELSE,0:IF,0:DO,0:CALL,1:functions,0:SWITCH,0:FOR,0	114
0x40023e0	            0x4155	                                push r13	       723	getchar.c	FUNCTION_28
0x40023e2	            0x4154	                                push r12	       723	getchar.c	FUNCTION_28
0x40023e4	          0x4989f8	                             mov r8, rdi	       723	getchar.c	FUNCTION_28
0x40023e7	              0x55	                                push rbp	       723	getchar.c	FUNCTION_28
0x40023e8	              0x53	                                push rbx	       723	getchar.c	FUNCTION_28
0x40023e9	      0xb900000000	                              mov ecx, 0	        33	stdio2.h	FUNCTION_88	CALL_1
0x40023ee	      0xba20000000	                           mov edx, 0x20	        33	stdio2.h	FUNCTION_88	CALL_1
0x40023f3	      0xbe01000000	                              mov esi, 1	        33	stdio2.h	FUNCTION_88	CALL_1
0x40023f8	        0x4883ec38	                           sub rsp, 0x38	       723	getchar.c	FUNCTION_28
0x40023fc	    0x64488b042528	                mov rax, qword fs:[0x28]	       723	getchar.c	FUNCTION_28
0x4002405	      0x4889442428	             mov qword [rsp + 0x28], rax	       723	getchar.c	FUNCTION_28
0x400240a	            0x31c0	                            xor eax, eax	       723	getchar.c	FUNCTION_28
0x400240c	          0x4889e7	                            mov rdi, rsp	        33	stdio2.h	FUNCTION_88	CALL_1
0x400240f	          0x4889e5	                            mov rbp, rsp	        33	stdio2.h	FUNCTION_88	CALL_1
0x4002412	          0x4889e3	                            mov rbx, rsp	       238	getchar.c	FUNCTION_5	CALL_1
0x4002415	      0xe800000000	                          call 0x400241a	        33	stdio2.h	FUNCTION_88	CALL_1
0x400241a	            0x8b13	                    mov edx, dword [rbx]	       238	getchar.c	FUNCTION_5	CALL_1
0x400241c	        0x4883c304	                              add rbx, 4	       238	getchar.c	FUNCTION_5	CALL_1
0x4002420	    0x8d82fffefefe	              lea eax, [rdx - 0x1010101]	       238	getchar.c	FUNCTION_5	CALL_1
0x4002426	            0xf7d2	                                 not edx	       238	getchar.c	FUNCTION_5	CALL_1
0x4002428	            0x21d0	                            and eax, edx	       238	getchar.c	FUNCTION_5	CALL_1
0x400242a	      0x2580808080	                     and eax, 0x80808080	       238	getchar.c	FUNCTION_5	CALL_1
0x400242f	            0x74e9	                            je 0x400241a	       238	getchar.c	FUNCTION_5	CALL_1
0x4002431	            0x89c2	                            mov edx, eax	       238	getchar.c	FUNCTION_5	CALL_1
0x4002433	          0xc1ea10	                           shr edx, 0x10	       238	getchar.c	FUNCTION_5	CALL_1
0x4002436	      0xa980800000	                        test eax, 0x8080	       238	getchar.c	FUNCTION_5	CALL_1
0x400243b	           0xf44c2	                          cmove eax, edx	       238	getchar.c	FUNCTION_5	CALL_1
0x400243e	        0x488d5302	                      lea rdx, [rbx + 2]	       238	getchar.c	FUNCTION_5	CALL_1
0x4002442	            0x89c1	                            mov ecx, eax	       238	getchar.c	FUNCTION_5	CALL_1
0x4002444	        0x480f44da	                          cmove rbx, rdx	       238	getchar.c	FUNCTION_5	CALL_1
0x4002448	              0xc1	                              add cl, al	       238	getchar.c	FUNCTION_5	CALL_1
0x400244a	        0x4883db03	                              sbb rbx, 3	       238	getchar.c	FUNCTION_5	CALL_1
0x400244e	          0x4829eb	                            sub rbx, rbp	       239	getchar.c	FUNCTION_5	IF_2
0x4002451	     0xf8495000000	                            je 0x40024ec	       239	getchar.c	FUNCTION_5	IF_2
0x4002457	    0x488b3d000000	            mov rdi, qword [0x0400245e] 	       242	getchar.c	FUNCTION_5	IF_3
0x400245e	          0x4885ff	                           test rdi, rdi	       242	getchar.c	FUNCTION_5	IF_3
0x4002461	     0xf8411010000	                            je 0x4002578	       242	getchar.c	FUNCTION_5	IF_3
0x4002467	    0x48833d000000	               cmp qword [0x0400246f], 0	       247	getchar.c	FUNCTION_5	ELSE_1	IF_4
0x400246f	     0xf8423010000	                            je 0x4002598	       247	getchar.c	FUNCTION_5	ELSE_1	IF_4
0x4002475	    0x486335000000	         movsxd rsi, dword [0x0400247c] 	       252	getchar.c	FUNCTION_5	ELSE_2	IF_5
0x400247c	            0x85f6	                           test esi, esi	       252	getchar.c	FUNCTION_5	ELSE_2	IF_5
0x400247e	     0xf859c000000	                           jne 0x4002520	       252	getchar.c	FUNCTION_5	ELSE_2	IF_5
0x4002484	    0x8b0500000000	            mov eax, dword [0x0400248a] 	       252	getchar.c	FUNCTION_5	ELSE_2	IF_5
0x400248a	            0x39d8	                            cmp eax, ebx	       258	getchar.c	FUNCTION_5	IF_6
0x400248c	    0xc70500000000	               mov dword [0x04002496], 0	       256	getchar.c	FUNCTION_5
0x4002496	     0xf8dac000000	                           jge 0x4002548	       258	getchar.c	FUNCTION_5	IF_6
0x400249c	        0x4883fb13	                           cmp rbx, 0x13	       266	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x40024a0	            0x7e6e	                           jle 0x4002510	       266	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x40024a2	        0x488d7b10	                   lea rdi, [rbx + 0x10]	       266	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x40024a6	          0x4989dd	                            mov r13, rbx	       266	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x40024a9	      0xbe01000000	                              mov esi, 1	       270	getchar.c	FUNCTION_5	ELSE_3	CALL_8
0x40024ae	      0xe800000000	                          call 0x40024b3	       270	getchar.c	FUNCTION_5	ELSE_3	CALL_8
0x40024b3	          0x4885c0	                           test rax, rax	       272	getchar.c	FUNCTION_5	ELSE_3	IF_8
0x40024b6	          0x4989c4	                            mov r12, rax	       270	getchar.c	FUNCTION_5	ELSE_3	CALL_8
0x40024b9	            0x7431	                            je 0x40024ec	       272	getchar.c	FUNCTION_5	ELSE_3	IF_8
0x40024bb	        0x488d7808	                      lea rdi, [rax + 8]	       275	getchar.c	FUNCTION_5	ELSE_3	CALL_9
0x40024bf	          0x4889da	                            mov rdx, rbx	       275	getchar.c	FUNCTION_5	ELSE_3	CALL_9
0x40024c2	          0x4129dd	                           sub r13d, ebx	       274	getchar.c	FUNCTION_5	ELSE_3
0x40024c5	          0x4889ee	                            mov rsi, rbp	       275	getchar.c	FUNCTION_5	ELSE_3	CALL_9
0x40024c8	    0x44892d000000	           mov dword [0x040024cf], r13d 	       274	getchar.c	FUNCTION_5	ELSE_3
0x40024cf	      0xe800000000	                          call 0x40024d4	       275	getchar.c	FUNCTION_5	ELSE_3	CALL_9
0x40024d4	    0x488b05000000	            mov rax, qword [0x040024db] 	       277	getchar.c	FUNCTION_5	ELSE_3
0x40024db	          0x488b10	                    mov rdx, qword [rax]	       277	getchar.c	FUNCTION_5	ELSE_3
0x40024de	        0x49891424	                    mov qword [r12], rdx	       277	getchar.c	FUNCTION_5	ELSE_3
0x40024e2	          0x4c8920	                    mov qword [rax], r12	       278	getchar.c	FUNCTION_5	ELSE_3
0x40024e5	    0x4c8925000000	            mov qword [0x040024ec], r12 	       279	getchar.c	FUNCTION_5	ELSE_3
0x40024ec	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       725	getchar.c	FUNCTION_28
0x40024f1	    0x644833042528	                xor rax, qword fs:[0x28]	       725	getchar.c	FUNCTION_28
0x40024fa	     0xf85b6000000	                           jne 0x40025b6	       725	getchar.c	FUNCTION_28
0x4002500	        0x4883c438	                           add rsp, 0x38	       725	getchar.c	FUNCTION_28
0x4002504	              0x5b	                                 pop rbx	       725	getchar.c	FUNCTION_28
0x4002505	              0x5d	                                 pop rbp	       725	getchar.c	FUNCTION_28
0x4002506	            0x415c	                                 pop r12	       725	getchar.c	FUNCTION_28
0x4002508	            0x415d	                                 pop r13	       725	getchar.c	FUNCTION_28
0x400250a	              0xc3	                                     ret	       725	getchar.c	FUNCTION_28
0x400250b	       0xf1f440000	                   nop dword [rax + rax]	       725	getchar.c	FUNCTION_28
0x4002510	      0xbf24000000	                           mov edi, 0x24	       266	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x4002515	    0x41bd14000000	                          mov r13d, 0x14	       267	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x400251b	            0xeb8c	                           jmp 0x40024a9	       267	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x400251d	           0xf1f00	                         nop dword [rax]	       267	getchar.c	FUNCTION_5	ELSE_3	IF_7
0x4002520	        0x4c8d6f08	                      lea r13, [rdi + 8]	       253	getchar.c	FUNCTION_5	ELSE_2	IF_5	CALL_4
0x4002524	      0x4d8d643500	                    lea r12, [r13 + rsi]	       253	getchar.c	FUNCTION_5	ELSE_2	IF_5	CALL_4
0x4002529	          0x4c89e7	                            mov rdi, r12	       253	getchar.c	FUNCTION_5	ELSE_2	IF_5	CALL_4
0x400252c	      0xe800000000	                          call 0x4002531	       253	getchar.c	FUNCTION_5	ELSE_2	IF_5	CALL_4
0x4002531	        0x488d5001	                      lea rdx, [rax + 1]	        59	string3.h	FUNCTION_106	CALL_3
0x4002535	          0x4c89e6	                            mov rsi, r12	        59	string3.h	FUNCTION_106	CALL_3
0x4002538	          0x4c89ef	                            mov rdi, r13	        59	string3.h	FUNCTION_106	CALL_3
0x400253b	      0xe800000000	                          call 0x4002540	        59	string3.h	FUNCTION_106	CALL_3
0x4002540	      0xe93fffffff	                           jmp 0x4002484	        59	string3.h	FUNCTION_106	CALL_3
0x4002545	           0xf1f00	                         nop dword [rax]	        59	string3.h	FUNCTION_106	CALL_3
0x4002548	    0x488b05000000	            mov rax, qword [0x0400254f] 	       260	getchar.c	FUNCTION_5	IF_6	CALL_6
0x400254f	        0x4c8d6008	                      lea r12, [rax + 8]	       260	getchar.c	FUNCTION_5	IF_6	CALL_6
0x4002553	          0x4c89e7	                            mov rdi, r12	       260	getchar.c	FUNCTION_5	IF_6	CALL_6
0x4002556	      0xe800000000	                          call 0x400255b	       260	getchar.c	FUNCTION_5	IF_6	CALL_6
0x400255b	        0x498d3c04	                    lea rdi, [r12 + rax]	       261	getchar.c	FUNCTION_5	IF_6	CALL_7
0x400255f	          0x4889da	                            mov rdx, rbx	       261	getchar.c	FUNCTION_5	IF_6	CALL_7
0x4002562	          0x4889ee	                            mov rsi, rbp	       261	getchar.c	FUNCTION_5	IF_6	CALL_7
0x4002565	      0xe800000000	                          call 0x400256a	       261	getchar.c	FUNCTION_5	IF_6	CALL_7
0x400256a	    0x291d00000000	             sub dword [0x04002570], ebx	       262	getchar.c	FUNCTION_5	IF_6
0x4002570	      0xe977ffffff	                           jmp 0x40024ec	       262	getchar.c	FUNCTION_5	IF_6
0x4002575	           0xf1f00	                         nop dword [rax]	       262	getchar.c	FUNCTION_5	IF_6
0x4002578	    0xc70500000000	               mov dword [0x04002582], 0	       244	getchar.c	FUNCTION_5	IF_3
0x4002582	    0x48c705000000	               mov qword [0x0400258d], 0	       245	getchar.c	FUNCTION_5	IF_3
0x400258d	            0x31c0	                            xor eax, eax	       245	getchar.c	FUNCTION_5	IF_3
0x400258f	      0xe9f6feffff	                           jmp 0x400248a	       245	getchar.c	FUNCTION_5	IF_3
0x4002594	         0xf1f4000	                         nop dword [rax]	       245	getchar.c	FUNCTION_5	IF_3
0x4002598	            0x31ff	                            xor edi, edi	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x400259a	      0xba05000000	                              mov edx, 5	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x400259f	      0xbe00000000	                              mov esi, 0	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x40025a4	      0xe800000000	                          call 0x40025a9	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x40025a9	          0x4889c7	                            mov rdi, rax	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x40025ac	      0xe800000000	                          call 0x40025b1	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x40025b1	      0xe936ffffff	                           jmp 0x40024ec	       249	getchar.c	FUNCTION_5	ELSE_1	IF_4	CALL_3
0x40025b6	      0xe800000000	                          call 0x40025bb	       725	getchar.c	FUNCTION_28
stuffReadbuffSpec	WHILE,1:ELSE,1:IF,2:DO,0:CALL,3:functions,0:SWITCH,0:FOR,0	38
0x4002340	        0x4883ec18	                           sub rsp, 0x18	       682	getchar.c	FUNCTION_26
0x4002344	          0x4889fe	                            mov rsi, rdi	       682	getchar.c	FUNCTION_26
0x4002347	      0x48897c2408	                mov qword [rsp + 8], rdi	       682	getchar.c	FUNCTION_26
0x400234c	            0xeb47	                           jmp 0x4002395	       685	getchar.c	FUNCTION_26	WHILE_1
0x400234e	            0x6690	                                     nop	       685	getchar.c	FUNCTION_26	WHILE_1
0x4002350	            0x3c80	                            cmp al, 0x80	       687	getchar.c	FUNCTION_26	WHILE_1	IF_1
0x4002352	            0x750c	                           jne 0x4002360	       687	getchar.c	FUNCTION_26	WHILE_1	IF_1
0x4002354	        0x807e0100	                   cmp byte [rsi + 1], 0	       687	getchar.c	FUNCTION_26	WHILE_1	IF_1
0x4002358	            0x7406	                            je 0x4002360	       687	getchar.c	FUNCTION_26	WHILE_1	IF_1
0x400235a	        0x807e0200	                   cmp byte [rsi + 2], 0	       687	getchar.c	FUNCTION_26	WHILE_1	IF_1
0x400235e	            0x7548	                           jne 0x40023a8	       687	getchar.c	FUNCTION_26	WHILE_1	IF_1
0x4002360	      0x488d7c2408	                      lea rdi, [rsp + 8]	       696	getchar.c	FUNCTION_26	WHILE_1	ELSE_1	CALL_2
0x4002365	      0xe800000000	                          call 0x400236a	       696	getchar.c	FUNCTION_26	WHILE_1	ELSE_1	CALL_2
0x400236a	          0x83f81b	                           cmp eax, 0x1b	       700	getchar.c	FUNCTION_26	WHILE_1	ELSE_1	IF_2
0x400236d	            0x7715	                            ja 0x4002384	       700	getchar.c	FUNCTION_26	WHILE_1	ELSE_1	IF_2
0x400236f	            0x89c1	                            mov ecx, eax	       700	getchar.c	FUNCTION_26	WHILE_1	ELSE_1	IF_2
0x4002371	      0xba00240008	                      mov edx, 0x8002400	       700	getchar.c	FUNCTION_26	WHILE_1	ELSE_1	IF_2
0x4002376	          0x48d3ea	                             shr rdx, cl	       700	getchar.c	FUNCTION_26	WHILE_1	ELSE_1	IF_2
0x4002379	          0x83e201	                              and edx, 1	       701	getchar.c	FUNCTION_26	WHILE_1	ELSE_1	IF_2
0x400237c	      0xba20000000	                           mov edx, 0x20	       701	getchar.c	FUNCTION_26	WHILE_1	ELSE_1	IF_2
0x4002381	           0xf45c2	                         cmovne eax, edx	       701	getchar.c	FUNCTION_26	WHILE_1	ELSE_1	IF_2
0x4002384	            0x89c6	                            mov esi, eax	       715	getchar.c	FUNCTION_27	CALL_1
0x4002386	      0xbf00000000	                              mov edi, 0	       715	getchar.c	FUNCTION_27	CALL_1
0x400238b	      0xe880ecffff	                  call sym.add_char_buff	       715	getchar.c	FUNCTION_27	CALL_1
0x4002390	      0x488b742408	                mov rsi, qword [rsp + 8]	       715	getchar.c	FUNCTION_27	CALL_1
0x4002395	           0xfb606	                   movzx eax, byte [rsi]	       685	getchar.c	FUNCTION_26	WHILE_1
0x4002398	            0x84c0	                             test al, al	       685	getchar.c	FUNCTION_26	WHILE_1
0x400239a	            0x75b4	                           jne 0x4002350	       685	getchar.c	FUNCTION_26	WHILE_1
0x400239c	        0x4883c418	                           add rsp, 0x18	       705	getchar.c	FUNCTION_26
0x40023a0	              0xc3	                                     ret	       705	getchar.c	FUNCTION_26
0x40023a1	     0xf1f80000000	                         nop dword [rax]	       705	getchar.c	FUNCTION_26
0x40023a8	      0xba03000000	                              mov edx, 3	       671	getchar.c	FUNCTION_25	CALL_1
0x40023ad	      0xbf00000000	                              mov edi, 0	       671	getchar.c	FUNCTION_25	CALL_1
0x40023b2	      0xe889dcffff	                       call sym.add_buff	       671	getchar.c	FUNCTION_25	CALL_1
0x40023b7	      0x488b442408	                mov rax, qword [rsp + 8]	       691	getchar.c	FUNCTION_26	WHILE_1	IF_1
0x40023bc	        0x488d7003	                      lea rsi, [rax + 3]	       691	getchar.c	FUNCTION_26	WHILE_1	IF_1
0x40023c0	      0x4889742408	                mov qword [rsp + 8], rsi	       691	getchar.c	FUNCTION_26	WHILE_1	IF_1
0x40023c5	            0xebce	                           jmp 0x4002395	       691	getchar.c	FUNCTION_26	WHILE_1	IF_1
restore_typeahead	WHILE,0:ELSE,0:IF,1:DO,0:CALL,4:functions,0:SWITCH,0:FOR,0	77
0x4003620	              0x55	                                push rbp	      1389	getchar.c	FUNCTION_47
0x4003621	              0x53	                                push rbx	      1389	getchar.c	FUNCTION_47
0x4003622	          0x4889fd	                            mov rbp, rdi	      1389	getchar.c	FUNCTION_47
0x4003625	        0x4883ec08	                              sub rsp, 8	      1389	getchar.c	FUNCTION_47
0x4003629	          0x8b4730	            mov eax, dword [rdi + 0x30] 	      1390	getchar.c	FUNCTION_47	IF_1
0x400362c	            0x85c0	                           test eax, eax	      1390	getchar.c	FUNCTION_47	IF_1
0x400362e	     0xf85bc000000	                           jne 0x40036f0	      1390	getchar.c	FUNCTION_47	IF_1
0x4003634	          0x8b4534	            mov eax, dword [rbp + 0x34] 	      1396	getchar.c	FUNCTION_47
0x4003637	    0x488b3d000000	            mov rdi, qword [0x0400363e] 	       141	getchar.c	FUNCTION_1	FOR_1
0x400363e	    0x890500000000	            mov dword [0x04003644], eax 	      1396	getchar.c	FUNCTION_47
0x4003644	          0x8b4538	            mov eax, dword [rbp + 0x38] 	      1397	getchar.c	FUNCTION_47
0x4003647	          0x4885ff	                           test rdi, rdi	       141	getchar.c	FUNCTION_1	FOR_1
0x400364a	    0x890500000000	            mov dword [0x04003650], eax 	      1397	getchar.c	FUNCTION_47
0x4003650	            0x7416	                            je 0x4003668	       141	getchar.c	FUNCTION_1	FOR_1
0x4003652	    0x660f1f440000	                    nop word [rax + rax]	       141	getchar.c	FUNCTION_1	FOR_1
0x4003658	          0x488b1f	                    mov rbx, qword [rdi]	       143	getchar.c	FUNCTION_1	FOR_1
0x400365b	      0xe800000000	                          call 0x4003660	       144	getchar.c	FUNCTION_1	FOR_1	CALL_1
0x4003660	          0x4885db	                           test rbx, rbx	       141	getchar.c	FUNCTION_1	FOR_1
0x4003663	          0x4889df	                            mov rdi, rbx	       141	getchar.c	FUNCTION_1	FOR_1
0x4003666	            0x75f0	                           jne 0x4003658	       141	getchar.c	FUNCTION_1	FOR_1
0x4003668	        0x488b4540	            mov rax, qword [rbp + 0x40] 	      1400	getchar.c	FUNCTION_47
0x400366c	    0x488b3d000000	            mov rdi, qword [0x04003673] 	       141	getchar.c	FUNCTION_1	FOR_1
0x4003673	    0x488905000000	            mov qword [0x0400367a], rax 	      1400	getchar.c	FUNCTION_47
0x400367a	        0x488b4548	            mov rax, qword [rbp + 0x48] 	      1400	getchar.c	FUNCTION_47
0x400367e	          0x4885ff	                           test rdi, rdi	       141	getchar.c	FUNCTION_1	FOR_1
0x4003681	    0x488905000000	            mov qword [0x04003688], rax 	      1400	getchar.c	FUNCTION_47
0x4003688	        0x488b4550	            mov rax, qword [rbp + 0x50] 	      1400	getchar.c	FUNCTION_47
0x400368c	    0x488905000000	            mov qword [0x04003693], rax 	      1400	getchar.c	FUNCTION_47
0x4003693	        0x488b4558	            mov rax, qword [rbp + 0x58] 	      1400	getchar.c	FUNCTION_47
0x4003697	    0x488905000000	            mov qword [0x0400369e], rax 	      1400	getchar.c	FUNCTION_47
0x400369e	            0x7410	                            je 0x40036b0	       141	getchar.c	FUNCTION_1	FOR_1
0x40036a0	          0x488b1f	                    mov rbx, qword [rdi]	       143	getchar.c	FUNCTION_1	FOR_1
0x40036a3	      0xe800000000	                          call 0x40036a8	       144	getchar.c	FUNCTION_1	FOR_1	CALL_1
0x40036a8	          0x4885db	                           test rbx, rbx	       141	getchar.c	FUNCTION_1	FOR_1
0x40036ab	          0x4889df	                            mov rdi, rbx	       141	getchar.c	FUNCTION_1	FOR_1
0x40036ae	            0x75f0	                           jne 0x40036a0	       141	getchar.c	FUNCTION_1	FOR_1
0x40036b0	        0x488b4560	            mov rax, qword [rbp + 0x60] 	      1402	getchar.c	FUNCTION_47
0x40036b4	    0x488bbd800000	            mov rdi, qword [rbp + 0x80] 	      1404	getchar.c	FUNCTION_47	CALL_4
0x40036bb	    0x488905000000	            mov qword [0x040036c2], rax 	      1402	getchar.c	FUNCTION_47
0x40036c2	        0x488b4568	            mov rax, qword [rbp + 0x68] 	      1402	getchar.c	FUNCTION_47
0x40036c6	    0x488905000000	            mov qword [0x040036cd], rax 	      1402	getchar.c	FUNCTION_47
0x40036cd	        0x488b4570	            mov rax, qword [rbp + 0x70] 	      1402	getchar.c	FUNCTION_47
0x40036d1	    0x488905000000	            mov qword [0x040036d8], rax 	      1402	getchar.c	FUNCTION_47
0x40036d8	        0x488b4578	            mov rax, qword [rbp + 0x78] 	      1402	getchar.c	FUNCTION_47
0x40036dc	    0x488905000000	            mov qword [0x040036e3], rax 	      1402	getchar.c	FUNCTION_47
0x40036e3	        0x4883c408	                              add rsp, 8	      1406	getchar.c	FUNCTION_47
0x40036e7	              0x5b	                                 pop rbx	      1406	getchar.c	FUNCTION_47
0x40036e8	              0x5d	                                 pop rbp	      1406	getchar.c	FUNCTION_47
0x40036e9	      0xe900000000	                           jmp 0x40036ee	      1404	getchar.c	FUNCTION_47	CALL_4
0x40036ee	            0x6690	                                     nop	      1404	getchar.c	FUNCTION_47	CALL_4
0x40036f0	    0x488b3d000000	            mov rdi, qword [0x040036f7] 	      1322	getchar.c	FUNCTION_44	IF_1
0x40036f7	    0x4881ff000000	                              cmp rdi, 0	      1322	getchar.c	FUNCTION_44	IF_1
0x40036fe	            0x7461	                            je 0x4003761	      1322	getchar.c	FUNCTION_44	IF_1
0x4003700	      0xe800000000	                          call 0x4003705	      1325	getchar.c	FUNCTION_44	CALL_2
0x4003705	    0x488b3d000000	            mov rdi, qword [0x0400370c] 	      1326	getchar.c	FUNCTION_44	IF_2
0x400370c	    0x4881ff000000	                              cmp rdi, 0	      1326	getchar.c	FUNCTION_44	IF_2
0x4003713	            0x7458	                            je 0x400376d	      1326	getchar.c	FUNCTION_44	IF_2
0x4003715	      0xe800000000	                          call 0x400371a	      1329	getchar.c	FUNCTION_44	CALL_4
0x400371a	        0x488b4500	                    mov rax, qword [rbp]	      1393	getchar.c	FUNCTION_47	IF_1
0x400371e	    0x488905000000	            mov qword [0x04003725], rax 	      1393	getchar.c	FUNCTION_47	IF_1
0x4003725	        0x488b4508	                mov rax, qword [rbp + 8]	      1393	getchar.c	FUNCTION_47	IF_1
0x4003729	    0x488905000000	            mov qword [0x04003730], rax 	      1393	getchar.c	FUNCTION_47	IF_1
0x4003730	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      1393	getchar.c	FUNCTION_47	IF_1
0x4003734	    0x488905000000	            mov qword [0x0400373b], rax 	      1393	getchar.c	FUNCTION_47	IF_1
0x400373b	        0x488b4518	            mov rax, qword [rbp + 0x18] 	      1393	getchar.c	FUNCTION_47	IF_1
0x400373f	    0x488905000000	            mov qword [0x04003746], rax 	      1393	getchar.c	FUNCTION_47	IF_1
0x4003746	        0x488b4520	            mov rax, qword [rbp + 0x20] 	      1393	getchar.c	FUNCTION_47	IF_1
0x400374a	    0x488905000000	            mov qword [0x04003751], rax 	      1393	getchar.c	FUNCTION_47	IF_1
0x4003751	        0x488b4528	            mov rax, qword [rbp + 0x28] 	      1393	getchar.c	FUNCTION_47	IF_1
0x4003755	    0x488905000000	            mov qword [0x0400375c], rax 	      1393	getchar.c	FUNCTION_47	IF_1
0x400375c	      0xe9d3feffff	                           jmp 0x4003634	      1393	getchar.c	FUNCTION_47	IF_1
0x4003761	      0xbf00000000	                              mov edi, 0	      1323	getchar.c	FUNCTION_44	CALL_1
0x4003766	      0xe800000000	                          call 0x400376b	      1323	getchar.c	FUNCTION_44	CALL_1
0x400376b	            0xeb98	                           jmp 0x4003705	      1323	getchar.c	FUNCTION_44	CALL_1
0x400376d	      0xbf00000000	                              mov edi, 0	      1327	getchar.c	FUNCTION_44	CALL_3
0x4003772	      0xe800000000	                          call 0x4003777	      1327	getchar.c	FUNCTION_44	CALL_3
0x4003777	            0xeba1	                           jmp 0x400371a	      1327	getchar.c	FUNCTION_44	CALL_3
stuff_empty	WHILE,0:ELSE,0:IF,0:DO,0:CALL,0:functions,0:SWITCH,0:FOR,0	9
0x40014d0	            0x31c0	                            xor eax, eax	       422	getchar.c	FUNCTION_11
0x40014d2	    0x48833d000000	               cmp qword [0x040014da], 0	       422	getchar.c	FUNCTION_11
0x40014da	            0x7404	                            je 0x40014e0	       422	getchar.c	FUNCTION_11
0x40014dc	            0xf3c3	                                     ret	       423	getchar.c	FUNCTION_11
0x40014de	            0x6690	                                     nop	       423	getchar.c	FUNCTION_11
0x40014e0	            0x31c0	                            xor eax, eax	       422	getchar.c	FUNCTION_11
0x40014e2	    0x48833d000000	               cmp qword [0x040014ea], 0	       422	getchar.c	FUNCTION_11
0x40014ea	           0xf94c0	                                 sete al	       422	getchar.c	FUNCTION_11
0x40014ed	              0xc3	                                     ret	       423	getchar.c	FUNCTION_11
