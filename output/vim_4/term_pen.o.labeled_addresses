vterm_state_set_palette_color	WHILE,0:SWITCH,0:IF,1:DO,0:ELSE,0:FOR,0:CALL,0:functions,0	9
0x4000bb0	          0x83fe0f	                            cmp esi, 0xf	       221	pen.c	FUNCTION_15	IF_1
0x4000bb3	            0x7719	                            ja 0x4000bce	       221	pen.c	FUNCTION_15	IF_1
0x4000bb5	          0x4863c6	                         movsxd rax, esi	       221	pen.c	FUNCTION_15	IF_1
0x4000bb8	            0x8b12	                    mov edx, dword [rdx]	       223	pen.c	FUNCTION_15	IF_1
0x4000bba	          0x83c601	                              add esi, 1	       224	pen.c	FUNCTION_15	IF_1
0x4000bbd	        0x488d0487	                  lea rax, [rdi + rax*4]	       224	pen.c	FUNCTION_15	IF_1
0x4000bc1	    0x899030010000	            mov dword [rax + 0x130], edx	       223	pen.c	FUNCTION_15	IF_1
0x4000bc7	    0x4088b0330100	             mov byte [rax + 0x133], sil	       224	pen.c	FUNCTION_15	IF_1
0x4000bce	            0xf3c3	                                     ret	       224	pen.c	FUNCTION_15	IF_1
vterm_state_resetpen	WHILE,0:SWITCH,0:IF,0:DO,0:ELSE,0:FOR,0:CALL,9:functions,0	227
0x4000250	              0x53	                                push rbx	       167	pen.c	FUNCTION_10
0x4000251	          0x4889fb	                            mov rbx, rdi	       167	pen.c	FUNCTION_10
0x4000254	        0x4883ec10	                           sub rsp, 0x10	       167	pen.c	FUNCTION_10
0x4000258	     0xfb697240100	          movzx edx, byte [rdi + 0x124] 	       168	pen.c	FUNCTION_10	CALL_1
0x400025f	    0x64488b042528	                mov rax, qword fs:[0x28]	       167	pen.c	FUNCTION_10
0x4000268	      0x4889442408	                mov qword [rsp + 8], rax	       167	pen.c	FUNCTION_10
0x400026d	            0x31c0	                            xor eax, eax	       167	pen.c	FUNCTION_10
0x400026f	    0xc70424000000	                      mov dword [rsp], 0	       125	pen.c	FUNCTION_5
0x4000276	            0x89d0	                            mov eax, edx	       168	pen.c	FUNCTION_10	CALL_1
0x4000278	          0x83e0fe	                     and eax, 0xfffffffe	       168	pen.c	FUNCTION_10	CALL_1
0x400027b	    0x888724010000	              mov byte [rdi + 0x124], al	       168	pen.c	FUNCTION_10	CALL_1
0x4000281	        0x488b4708	                mov rax, qword [rdi + 8]	       168	pen.c	FUNCTION_10	CALL_1
0x4000285	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000288	     0xf84a2030000	                            je 0x4000630	       118	pen.c	FUNCTION_4	IF_2
0x400028e	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x4000292	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x4000295	     0xf844d020000	                            je 0x40004e8	       118	pen.c	FUNCTION_4	IF_2
0x400029b	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x400029f	          0x4889e6	                            mov rsi, rsp	       119	pen.c	FUNCTION_4	IF_2
0x40002a2	      0xbf01000000	                              mov edi, 1	       119	pen.c	FUNCTION_4	IF_2
0x40002a7	            0xffd1	                                call rcx	       119	pen.c	FUNCTION_4	IF_2
0x40002a9	     0xfb693240100	          movzx edx, byte [rbx + 0x124] 	       169	pen.c	FUNCTION_10	CALL_2
0x40002b0	        0x488b4308	                mov rax, qword [rbx + 8]	       169	pen.c	FUNCTION_10	CALL_2
0x40002b4	    0xc70424000000	                      mov dword [rsp], 0	       132	pen.c	FUNCTION_6
0x40002bb	            0x89d1	                            mov ecx, edx	       169	pen.c	FUNCTION_10	CALL_2
0x40002bd	          0x83e1f9	                     and ecx, 0xfffffff9	       169	pen.c	FUNCTION_10	CALL_2
0x40002c0	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x40002c3	    0x888b24010000	              mov byte [rbx + 0x124], cl	       169	pen.c	FUNCTION_10	CALL_2
0x40002c9	     0xf84b7030000	                            je 0x4000686	       118	pen.c	FUNCTION_4	IF_2
0x40002cf	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x40002d3	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x40002d6	     0xf8429020000	                            je 0x4000505	       118	pen.c	FUNCTION_4	IF_2
0x40002dc	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x40002e0	          0x4889e6	                            mov rsi, rsp	       119	pen.c	FUNCTION_4	IF_2
0x40002e3	      0xbf02000000	                              mov edi, 2	       119	pen.c	FUNCTION_4	IF_2
0x40002e8	            0xffd1	                                call rcx	       119	pen.c	FUNCTION_4	IF_2
0x40002ea	        0x488b4308	                mov rax, qword [rbx + 8]	       119	pen.c	FUNCTION_4	IF_2
0x40002ee	    0x80a324010000	            and byte [rbx + 0x124], 0xf7	       170	pen.c	FUNCTION_10	CALL_3
0x40002f5	    0xc70424000000	                      mov dword [rsp], 0	       125	pen.c	FUNCTION_5
0x40002fc	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x40002ff	     0xf8434030000	                            je 0x4000639	       118	pen.c	FUNCTION_4	IF_2
0x4000305	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x4000309	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x400030c	     0xf840e020000	                            je 0x4000520	       118	pen.c	FUNCTION_4	IF_2
0x4000312	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x4000316	          0x4889e6	                            mov rsi, rsp	       119	pen.c	FUNCTION_4	IF_2
0x4000319	      0xbf03000000	                              mov edi, 3	       119	pen.c	FUNCTION_4	IF_2
0x400031e	            0xffd1	                                call rcx	       119	pen.c	FUNCTION_4	IF_2
0x4000320	        0x488b4308	                mov rax, qword [rbx + 8]	       119	pen.c	FUNCTION_4	IF_2
0x4000324	    0x80a324010000	            and byte [rbx + 0x124], 0xef	       171	pen.c	FUNCTION_10	CALL_4
0x400032b	    0xc70424000000	                      mov dword [rsp], 0	       125	pen.c	FUNCTION_5
0x4000332	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000335	     0xf8454030000	                            je 0x400068f	       118	pen.c	FUNCTION_4	IF_2
0x400033b	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x400033f	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x4000342	     0xf84f3010000	                            je 0x400053b	       118	pen.c	FUNCTION_4	IF_2
0x4000348	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x400034c	          0x4889e6	                            mov rsi, rsp	       119	pen.c	FUNCTION_4	IF_2
0x400034f	      0xbf04000000	                              mov edi, 4	       119	pen.c	FUNCTION_4	IF_2
0x4000354	            0xffd1	                                call rcx	       119	pen.c	FUNCTION_4	IF_2
0x4000356	        0x488b4308	                mov rax, qword [rbx + 8]	       119	pen.c	FUNCTION_4	IF_2
0x400035a	    0x80a324010000	            and byte [rbx + 0x124], 0xdf	       172	pen.c	FUNCTION_10	CALL_5
0x4000361	    0xc70424000000	                      mov dword [rsp], 0	       125	pen.c	FUNCTION_5
0x4000368	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x400036b	     0xf84cf020000	                            je 0x4000640	       118	pen.c	FUNCTION_4	IF_2
0x4000371	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x4000375	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x4000378	     0xf84d8010000	                            je 0x4000556	       118	pen.c	FUNCTION_4	IF_2
0x400037e	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x4000382	          0x4889e6	                            mov rsi, rsp	       119	pen.c	FUNCTION_4	IF_2
0x4000385	      0xbf05000000	                              mov edi, 5	       119	pen.c	FUNCTION_4	IF_2
0x400038a	            0xffd1	                                call rcx	       119	pen.c	FUNCTION_4	IF_2
0x400038c	        0x488b4308	                mov rax, qword [rbx + 8]	       119	pen.c	FUNCTION_4	IF_2
0x4000390	    0x80a324010000	            and byte [rbx + 0x124], 0xbf	       173	pen.c	FUNCTION_10	CALL_6
0x4000397	    0xc70424000000	                      mov dword [rsp], 0	       125	pen.c	FUNCTION_5
0x400039e	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x40003a1	     0xf84ef020000	                            je 0x4000696	       118	pen.c	FUNCTION_4	IF_2
0x40003a7	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x40003ab	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x40003ae	     0xf84bd010000	                            je 0x4000571	       118	pen.c	FUNCTION_4	IF_2
0x40003b4	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x40003b8	          0x4889e6	                            mov rsi, rsp	       119	pen.c	FUNCTION_4	IF_2
0x40003bb	      0xbf06000000	                              mov edi, 6	       119	pen.c	FUNCTION_4	IF_2
0x40003c0	            0xffd1	                                call rcx	       119	pen.c	FUNCTION_4	IF_2
0x40003c2	        0x488b4308	                mov rax, qword [rbx + 8]	       119	pen.c	FUNCTION_4	IF_2
0x40003c6	    0x6681a3240100	          and word [rbx + 0x124], 0xf87f	       174	pen.c	FUNCTION_10	CALL_7
0x40003cf	    0xc70424000000	                      mov dword [rsp], 0	       132	pen.c	FUNCTION_6
0x40003d6	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x40003d9	     0xf8471020000	                            je 0x4000650	       118	pen.c	FUNCTION_4	IF_2
0x40003df	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x40003e3	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x40003e6	     0xf84a2010000	                            je 0x400058e	       118	pen.c	FUNCTION_4	IF_2
0x40003ec	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x40003f0	          0x4889e6	                            mov rsi, rsp	       119	pen.c	FUNCTION_4	IF_2
0x40003f3	      0xbf07000000	                              mov edi, 7	       119	pen.c	FUNCTION_4	IF_2
0x40003f8	            0xffd1	                                call rcx	       119	pen.c	FUNCTION_4	IF_2
0x40003fa	    0x8b9328010000	           mov edx, dword [rbx + 0x128] 	       178	pen.c	FUNCTION_10	CALL_8
0x4000400	        0x488b4308	                mov rax, qword [rbx + 8]	       178	pen.c	FUNCTION_10	CALL_8
0x4000404	     0xfb6b3290100	          movzx esi, byte [rbx + 0x129] 	       178	pen.c	FUNCTION_10	CALL_8
0x400040b	     0xfb68b2a0100	          movzx ecx, byte [rbx + 0x12a] 	       178	pen.c	FUNCTION_10	CALL_8
0x4000412	     0xfb6bb280100	          movzx edi, byte [rbx + 0x128] 	       139	pen.c	FUNCTION_7
0x4000419	    0xc78370010000	    mov dword [rbx + 0x170], 0xffffffff 	       176	pen.c	FUNCTION_10
0x4000423	    0x89931c010000	            mov dword [rbx + 0x11c], edx	       178	pen.c	FUNCTION_10	CALL_8
0x4000429	     0xfb6932b0100	          movzx edx, byte [rbx + 0x12b] 	       178	pen.c	FUNCTION_10	CALL_8
0x4000430	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000433	    0xc78374010000	    mov dword [rbx + 0x174], 0xffffffff 	       177	pen.c	FUNCTION_10
0x400043d	      0x4088742401	                 mov byte [rsp + 1], sil	       139	pen.c	FUNCTION_7
0x4000442	        0x884c2402	                  mov byte [rsp + 2], cl	       139	pen.c	FUNCTION_7
0x4000446	        0x40883c24	                     mov byte [rsp], dil	       139	pen.c	FUNCTION_7
0x400044a	        0x88542403	                  mov byte [rsp + 3], dl	       139	pen.c	FUNCTION_7
0x400044e	     0xf846b020000	                            je 0x40006bf	       118	pen.c	FUNCTION_4	IF_2
0x4000454	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x4000458	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x400045b	     0xf8487010000	                            je 0x40005e8	       118	pen.c	FUNCTION_4	IF_2
0x4000461	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x4000465	          0x4889e6	                            mov rsi, rsp	       119	pen.c	FUNCTION_4	IF_2
0x4000468	      0xbf08000000	                              mov edi, 8	       119	pen.c	FUNCTION_4	IF_2
0x400046d	            0xffd1	                                call rcx	       119	pen.c	FUNCTION_4	IF_2
0x400046f	    0x8b932c010000	           mov edx, dword [rbx + 0x12c] 	       179	pen.c	FUNCTION_10	CALL_9
0x4000475	        0x488b4308	                mov rax, qword [rbx + 8]	       179	pen.c	FUNCTION_10	CALL_9
0x4000479	     0xfb6b32d0100	          movzx esi, byte [rbx + 0x12d] 	       179	pen.c	FUNCTION_10	CALL_9
0x4000480	     0xfb68b2e0100	          movzx ecx, byte [rbx + 0x12e] 	       179	pen.c	FUNCTION_10	CALL_9
0x4000487	     0xfb6bb2c0100	          movzx edi, byte [rbx + 0x12c] 	       139	pen.c	FUNCTION_7
0x400048e	    0x899320010000	            mov dword [rbx + 0x120], edx	       179	pen.c	FUNCTION_10	CALL_9
0x4000494	     0xfb6932f0100	          movzx edx, byte [rbx + 0x12f] 	       179	pen.c	FUNCTION_10	CALL_9
0x400049b	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x400049e	      0x4088742401	                 mov byte [rsp + 1], sil	       139	pen.c	FUNCTION_7
0x40004a3	        0x884c2402	                  mov byte [rsp + 2], cl	       139	pen.c	FUNCTION_7
0x40004a7	        0x40883c24	                     mov byte [rsp], dil	       139	pen.c	FUNCTION_7
0x40004ab	        0x88542403	                  mov byte [rsp + 3], dl	       139	pen.c	FUNCTION_7
0x40004af	            0x7417	                            je 0x40004c8	       118	pen.c	FUNCTION_4	IF_2
0x40004b1	        0x488b4030	            mov rax, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x40004b5	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x40004b8	            0x740e	                            je 0x40004c8	       118	pen.c	FUNCTION_4	IF_2
0x40004ba	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x40004be	          0x4889e6	                            mov rsi, rsp	       119	pen.c	FUNCTION_4	IF_2
0x40004c1	      0xbf09000000	                              mov edi, 9	       119	pen.c	FUNCTION_4	IF_2
0x40004c6	            0xffd0	                                call rax	       119	pen.c	FUNCTION_4	IF_2
0x40004c8	      0x488b442408	                mov rax, qword [rsp + 8]	       180	pen.c	FUNCTION_10
0x40004cd	    0x644833042528	                xor rax, qword fs:[0x28]	       180	pen.c	FUNCTION_10
0x40004d6	     0xf85a5010000	                           jne 0x4000681	       180	pen.c	FUNCTION_10
0x40004dc	        0x4883c410	                           add rsp, 0x10	       180	pen.c	FUNCTION_10
0x40004e0	              0x5b	                                 pop rbx	       180	pen.c	FUNCTION_10
0x40004e1	              0xc3	                                     ret	       180	pen.c	FUNCTION_10
0x40004e2	    0x660f1f440000	                    nop word [rax + rax]	       180	pen.c	FUNCTION_10
0x40004e8	          0x83e2f8	                     and edx, 0xfffffff8	       169	pen.c	FUNCTION_10	CALL_2
0x40004eb	    0xc70424000000	                      mov dword [rsp], 0	       132	pen.c	FUNCTION_6
0x40004f2	    0x889724010000	              mov byte [rdi + 0x124], dl	       169	pen.c	FUNCTION_10	CALL_2
0x40004f8	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x40004fc	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x40004ff	     0xf85d7fdffff	                           jne 0x40002dc	       118	pen.c	FUNCTION_4	IF_2
0x4000505	    0x80a324010000	            and byte [rbx + 0x124], 0xf7	       170	pen.c	FUNCTION_10	CALL_3
0x400050c	    0xc70424000000	                      mov dword [rsp], 0	       125	pen.c	FUNCTION_5
0x4000513	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x4000517	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x400051a	     0xf85f2fdffff	                           jne 0x4000312	       118	pen.c	FUNCTION_4	IF_2
0x4000520	    0x80a324010000	            and byte [rbx + 0x124], 0xef	       171	pen.c	FUNCTION_10	CALL_4
0x4000527	    0xc70424000000	                      mov dword [rsp], 0	       125	pen.c	FUNCTION_5
0x400052e	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x4000532	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x4000535	     0xf850dfeffff	                           jne 0x4000348	       118	pen.c	FUNCTION_4	IF_2
0x400053b	    0x80a324010000	            and byte [rbx + 0x124], 0xdf	       172	pen.c	FUNCTION_10	CALL_5
0x4000542	    0xc70424000000	                      mov dword [rsp], 0	       125	pen.c	FUNCTION_5
0x4000549	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x400054d	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x4000550	     0xf8528feffff	                           jne 0x400037e	       118	pen.c	FUNCTION_4	IF_2
0x4000556	    0x80a324010000	            and byte [rbx + 0x124], 0xbf	       173	pen.c	FUNCTION_10	CALL_6
0x400055d	    0xc70424000000	                      mov dword [rsp], 0	       125	pen.c	FUNCTION_5
0x4000564	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x4000568	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x400056b	     0xf8543feffff	                           jne 0x40003b4	       118	pen.c	FUNCTION_4	IF_2
0x4000571	    0x6681a3240100	          and word [rbx + 0x124], 0xf87f	       174	pen.c	FUNCTION_10	CALL_7
0x400057a	    0xc70424000000	                      mov dword [rsp], 0	       132	pen.c	FUNCTION_6
0x4000581	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x4000585	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x4000588	     0xf855efeffff	                           jne 0x40003ec	       118	pen.c	FUNCTION_4	IF_2
0x400058e	    0x8b9328010000	           mov edx, dword [rbx + 0x128] 	       178	pen.c	FUNCTION_10	CALL_8
0x4000594	     0xfb68b2a0100	          movzx ecx, byte [rbx + 0x12a] 	       178	pen.c	FUNCTION_10	CALL_8
0x400059b	     0xfb6b3290100	          movzx esi, byte [rbx + 0x129] 	       178	pen.c	FUNCTION_10	CALL_8
0x40005a2	     0xfb6bb280100	          movzx edi, byte [rbx + 0x128] 	       139	pen.c	FUNCTION_7
0x40005a9	    0xc78370010000	    mov dword [rbx + 0x170], 0xffffffff 	       176	pen.c	FUNCTION_10
0x40005b3	    0xc78374010000	    mov dword [rbx + 0x174], 0xffffffff 	       177	pen.c	FUNCTION_10
0x40005bd	    0x89931c010000	            mov dword [rbx + 0x11c], edx	       178	pen.c	FUNCTION_10	CALL_8
0x40005c3	     0xfb6932b0100	          movzx edx, byte [rbx + 0x12b] 	       178	pen.c	FUNCTION_10	CALL_8
0x40005ca	        0x884c2402	                  mov byte [rsp + 2], cl	       139	pen.c	FUNCTION_7
0x40005ce	        0x40883c24	                     mov byte [rsp], dil	       139	pen.c	FUNCTION_7
0x40005d2	      0x4088742401	                 mov byte [rsp + 1], sil	       139	pen.c	FUNCTION_7
0x40005d7	        0x88542403	                  mov byte [rsp + 3], dl	       139	pen.c	FUNCTION_7
0x40005db	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x40005df	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x40005e2	     0xf8579feffff	                           jne 0x4000461	       118	pen.c	FUNCTION_4	IF_2
0x40005e8	    0x8b932c010000	           mov edx, dword [rbx + 0x12c] 	       179	pen.c	FUNCTION_10	CALL_9
0x40005ee	     0xfb6b32d0100	          movzx esi, byte [rbx + 0x12d] 	       179	pen.c	FUNCTION_10	CALL_9
0x40005f5	     0xfb68b2e0100	          movzx ecx, byte [rbx + 0x12e] 	       179	pen.c	FUNCTION_10	CALL_9
0x40005fc	     0xfb6bb2c0100	          movzx edi, byte [rbx + 0x12c] 	       139	pen.c	FUNCTION_7
0x4000603	    0x899320010000	            mov dword [rbx + 0x120], edx	       179	pen.c	FUNCTION_10	CALL_9
0x4000609	     0xfb6932f0100	          movzx edx, byte [rbx + 0x12f] 	       179	pen.c	FUNCTION_10	CALL_9
0x4000610	      0x4088742401	                 mov byte [rsp + 1], sil	       139	pen.c	FUNCTION_7
0x4000615	        0x40883c24	                     mov byte [rsp], dil	       139	pen.c	FUNCTION_7
0x4000619	        0x884c2402	                  mov byte [rsp + 2], cl	       139	pen.c	FUNCTION_7
0x400061d	        0x88542403	                  mov byte [rsp + 3], dl	       139	pen.c	FUNCTION_7
0x4000621	      0xe98bfeffff	                           jmp 0x40004b1	       139	pen.c	FUNCTION_7
0x4000626	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       139	pen.c	FUNCTION_7
0x4000630	          0x83e2f0	                     and edx, 0xfffffff0	       170	pen.c	FUNCTION_10	CALL_3
0x4000633	    0x889724010000	              mov byte [rdi + 0x124], dl	       170	pen.c	FUNCTION_10	CALL_3
0x4000639	    0x80a324010000	            and byte [rbx + 0x124], 0xcf	       172	pen.c	FUNCTION_10	CALL_5
0x4000640	    0x80a324010000	            and byte [rbx + 0x124], 0xbf	       173	pen.c	FUNCTION_10	CALL_6
0x4000647	    0x6681a3240100	          and word [rbx + 0x124], 0xf87f	       174	pen.c	FUNCTION_10	CALL_7
0x4000650	    0x8b8328010000	           mov eax, dword [rbx + 0x128] 	       178	pen.c	FUNCTION_10	CALL_8
0x4000656	    0x89831c010000	            mov dword [rbx + 0x11c], eax	       178	pen.c	FUNCTION_10	CALL_8
0x400065c	    0x8b832c010000	           mov eax, dword [rbx + 0x12c] 	       179	pen.c	FUNCTION_10	CALL_9
0x4000662	    0xc78370010000	    mov dword [rbx + 0x170], 0xffffffff 	       176	pen.c	FUNCTION_10
0x400066c	    0xc78374010000	    mov dword [rbx + 0x174], 0xffffffff 	       177	pen.c	FUNCTION_10
0x4000676	    0x898320010000	            mov dword [rbx + 0x120], eax	       179	pen.c	FUNCTION_10	CALL_9
0x400067c	      0xe947feffff	                           jmp 0x40004c8	       179	pen.c	FUNCTION_10	CALL_9
0x4000681	      0xe800000000	                          call 0x4000686	       180	pen.c	FUNCTION_10
0x4000686	          0x83e2e1	                     and edx, 0xffffffe1	       171	pen.c	FUNCTION_10	CALL_4
0x4000689	    0x889324010000	              mov byte [rbx + 0x124], dl	       171	pen.c	FUNCTION_10	CALL_4
0x400068f	    0x80a324010000	            and byte [rbx + 0x124], 0x9f	       173	pen.c	FUNCTION_10	CALL_6
0x4000696	    0x8b8328010000	           mov eax, dword [rbx + 0x128] 	       178	pen.c	FUNCTION_10	CALL_8
0x400069c	    0x6681a3240100	          and word [rbx + 0x124], 0xf87f	       174	pen.c	FUNCTION_10	CALL_7
0x40006a5	    0xc78370010000	    mov dword [rbx + 0x170], 0xffffffff 	       176	pen.c	FUNCTION_10
0x40006af	    0xc78374010000	    mov dword [rbx + 0x174], 0xffffffff 	       177	pen.c	FUNCTION_10
0x40006b9	    0x89831c010000	            mov dword [rbx + 0x11c], eax	       178	pen.c	FUNCTION_10	CALL_8
0x40006bf	    0x8b832c010000	           mov eax, dword [rbx + 0x12c] 	       179	pen.c	FUNCTION_10	CALL_9
0x40006c5	    0x898320010000	            mov dword [rbx + 0x120], eax	       179	pen.c	FUNCTION_10	CALL_9
0x40006cb	      0xe9f8fdffff	                           jmp 0x40004c8	       179	pen.c	FUNCTION_10	CALL_9
vterm_state_get_default_colors	WHILE,0:SWITCH,0:IF,0:DO,0:ELSE,0:FOR,0:CALL,0:functions,0	5
0x4000a80	    0x8b8728010000	           mov eax, dword [rdi + 0x128] 	       204	pen.c	FUNCTION_12
0x4000a86	            0x8906	                    mov dword [rsi], eax	       204	pen.c	FUNCTION_12
0x4000a88	    0x8b872c010000	           mov eax, dword [rdi + 0x12c] 	       205	pen.c	FUNCTION_12
0x4000a8e	            0x8902	                    mov dword [rdx], eax	       205	pen.c	FUNCTION_12
0x4000a90	              0xc3	                                     ret	       205	pen.c	FUNCTION_12
vterm_state_savepen	WHILE,0:SWITCH,0:IF,1:DO,0:ELSE,1:FOR,0:CALL,9:functions,0	224
0x40006d0	              0x53	                                push rbx	       183	pen.c	FUNCTION_11
0x40006d1	          0x4889fb	                            mov rbx, rdi	       183	pen.c	FUNCTION_11
0x40006d4	        0x4883ec10	                           sub rsp, 0x10	       183	pen.c	FUNCTION_11
0x40006d8	    0x64488b042528	                mov rax, qword fs:[0x28]	       183	pen.c	FUNCTION_11
0x40006e1	      0x4889442408	                mov qword [rsp + 8], rax	       183	pen.c	FUNCTION_11
0x40006e6	            0x31c0	                            xor eax, eax	       183	pen.c	FUNCTION_11
0x40006e8	            0x85f6	                           test esi, esi	       184	pen.c	FUNCTION_11	IF_1
0x40006ea	     0xf8560020000	                           jne 0x4000950	       184	pen.c	FUNCTION_11	IF_1
0x40006f0	    0x488b87880100	           mov rax, qword [rdi + 0x188] 	       188	pen.c	FUNCTION_11	ELSE_1
0x40006f7	    0x8b9790010000	           mov edx, dword [rdi + 0x190] 	       188	pen.c	FUNCTION_11	ELSE_1
0x40006fd	    0x4889871c0100	            mov qword [rdi + 0x11c], rax	       188	pen.c	FUNCTION_11	ELSE_1
0x4000704	            0x89d0	                            mov eax, edx	       125	pen.c	FUNCTION_5
0x4000706	    0x899724010000	            mov dword [rdi + 0x124], edx	       188	pen.c	FUNCTION_11	ELSE_1
0x400070c	          0x83e001	                              and eax, 1	       125	pen.c	FUNCTION_5
0x400070f	          0x890424	                    mov dword [rsp], eax	       125	pen.c	FUNCTION_5
0x4000712	        0x488b4708	                mov rax, qword [rdi + 8]	       125	pen.c	FUNCTION_5
0x4000716	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000719	     0xf8411020000	                            je 0x4000930	       118	pen.c	FUNCTION_4	IF_2
0x400071f	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x4000723	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x4000726	     0xf8444020000	                            je 0x4000970	       118	pen.c	FUNCTION_4	IF_2
0x400072c	        0x488b5710	            mov rdx, qword [rdi + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x4000730	          0x4889e6	                            mov rsi, rsp	       119	pen.c	FUNCTION_4	IF_2
0x4000733	      0xbf01000000	                              mov edi, 1	       119	pen.c	FUNCTION_4	IF_2
0x4000738	            0xffd1	                                call rcx	       119	pen.c	FUNCTION_4	IF_2
0x400073a	     0xfb693240100	          movzx edx, byte [rbx + 0x124] 	       191	pen.c	FUNCTION_11	ELSE_1	CALL_2
0x4000741	        0x488b4308	                mov rax, qword [rbx + 8]	       191	pen.c	FUNCTION_11	ELSE_1	CALL_2
0x4000745	            0x89d1	                            mov ecx, edx	       191	pen.c	FUNCTION_11	ELSE_1	CALL_2
0x4000747	            0xd0e9	                               shr cl, 1	       191	pen.c	FUNCTION_11	ELSE_1	CALL_2
0x4000749	          0x83e103	                              and ecx, 3	       132	pen.c	FUNCTION_6
0x400074c	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x400074f	          0x890c24	                    mov dword [rsp], ecx	       132	pen.c	FUNCTION_6
0x4000752	     0xf84d8010000	                            je 0x4000930	       118	pen.c	FUNCTION_4	IF_2
0x4000758	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x400075c	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x400075f	     0xf8422020000	                            je 0x4000987	       118	pen.c	FUNCTION_4	IF_2
0x4000765	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x4000769	          0x4889e6	                            mov rsi, rsp	       119	pen.c	FUNCTION_4	IF_2
0x400076c	      0xbf02000000	                              mov edi, 2	       119	pen.c	FUNCTION_4	IF_2
0x4000771	            0xffd1	                                call rcx	       119	pen.c	FUNCTION_4	IF_2
0x4000773	     0xfb693240100	          movzx edx, byte [rbx + 0x124] 	       192	pen.c	FUNCTION_11	ELSE_1	CALL_3
0x400077a	        0x488b4308	                mov rax, qword [rbx + 8]	       192	pen.c	FUNCTION_11	ELSE_1	CALL_3
0x400077e	            0x89d1	                            mov ecx, edx	       192	pen.c	FUNCTION_11	ELSE_1	CALL_3
0x4000780	          0xc0e903	                               shr cl, 3	       192	pen.c	FUNCTION_11	ELSE_1	CALL_3
0x4000783	          0x83e101	                              and ecx, 1	       125	pen.c	FUNCTION_5
0x4000786	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000789	          0x890c24	                    mov dword [rsp], ecx	       125	pen.c	FUNCTION_5
0x400078c	     0xf849e010000	                            je 0x4000930	       118	pen.c	FUNCTION_4	IF_2
0x4000792	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x4000796	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x4000799	     0xf8400020000	                            je 0x400099f	       118	pen.c	FUNCTION_4	IF_2
0x400079f	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x40007a3	          0x4889e6	                            mov rsi, rsp	       119	pen.c	FUNCTION_4	IF_2
0x40007a6	      0xbf03000000	                              mov edi, 3	       119	pen.c	FUNCTION_4	IF_2
0x40007ab	            0xffd1	                                call rcx	       119	pen.c	FUNCTION_4	IF_2
0x40007ad	     0xfb693240100	          movzx edx, byte [rbx + 0x124] 	       193	pen.c	FUNCTION_11	ELSE_1	CALL_4
0x40007b4	        0x488b4308	                mov rax, qword [rbx + 8]	       193	pen.c	FUNCTION_11	ELSE_1	CALL_4
0x40007b8	            0x89d1	                            mov ecx, edx	       193	pen.c	FUNCTION_11	ELSE_1	CALL_4
0x40007ba	          0xc0e904	                               shr cl, 4	       193	pen.c	FUNCTION_11	ELSE_1	CALL_4
0x40007bd	          0x83e101	                              and ecx, 1	       125	pen.c	FUNCTION_5
0x40007c0	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x40007c3	          0x890c24	                    mov dword [rsp], ecx	       125	pen.c	FUNCTION_5
0x40007c6	     0xf8464010000	                            je 0x4000930	       118	pen.c	FUNCTION_4	IF_2
0x40007cc	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x40007d0	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x40007d3	     0xf84de010000	                            je 0x40009b7	       118	pen.c	FUNCTION_4	IF_2
0x40007d9	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x40007dd	          0x4889e6	                            mov rsi, rsp	       119	pen.c	FUNCTION_4	IF_2
0x40007e0	      0xbf04000000	                              mov edi, 4	       119	pen.c	FUNCTION_4	IF_2
0x40007e5	            0xffd1	                                call rcx	       119	pen.c	FUNCTION_4	IF_2
0x40007e7	     0xfb693240100	          movzx edx, byte [rbx + 0x124] 	       194	pen.c	FUNCTION_11	ELSE_1	CALL_5
0x40007ee	        0x488b4308	                mov rax, qword [rbx + 8]	       194	pen.c	FUNCTION_11	ELSE_1	CALL_5
0x40007f2	            0x89d1	                            mov ecx, edx	       194	pen.c	FUNCTION_11	ELSE_1	CALL_5
0x40007f4	          0xc0e905	                               shr cl, 5	       194	pen.c	FUNCTION_11	ELSE_1	CALL_5
0x40007f7	          0x83e101	                              and ecx, 1	       125	pen.c	FUNCTION_5
0x40007fa	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x40007fd	          0x890c24	                    mov dword [rsp], ecx	       125	pen.c	FUNCTION_5
0x4000800	     0xf842a010000	                            je 0x4000930	       118	pen.c	FUNCTION_4	IF_2
0x4000806	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x400080a	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x400080d	     0xf84bc010000	                            je 0x40009cf	       118	pen.c	FUNCTION_4	IF_2
0x4000813	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x4000817	          0x4889e6	                            mov rsi, rsp	       119	pen.c	FUNCTION_4	IF_2
0x400081a	      0xbf05000000	                              mov edi, 5	       119	pen.c	FUNCTION_4	IF_2
0x400081f	            0xffd1	                                call rcx	       119	pen.c	FUNCTION_4	IF_2
0x4000821	     0xfb693240100	          movzx edx, byte [rbx + 0x124] 	       195	pen.c	FUNCTION_11	ELSE_1	CALL_6
0x4000828	        0x488b4308	                mov rax, qword [rbx + 8]	       195	pen.c	FUNCTION_11	ELSE_1	CALL_6
0x400082c	          0xc0ea06	                               shr dl, 6	       195	pen.c	FUNCTION_11	ELSE_1	CALL_6
0x400082f	          0x83e201	                              and edx, 1	       125	pen.c	FUNCTION_5
0x4000832	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000835	          0x891424	                    mov dword [rsp], edx	       125	pen.c	FUNCTION_5
0x4000838	     0xf84f2000000	                            je 0x4000930	       118	pen.c	FUNCTION_4	IF_2
0x400083e	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x4000842	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x4000845	     0xf849a010000	                            je 0x40009e5	       118	pen.c	FUNCTION_4	IF_2
0x400084b	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x400084f	          0x4889e6	                            mov rsi, rsp	       119	pen.c	FUNCTION_4	IF_2
0x4000852	      0xbf06000000	                              mov edi, 6	       119	pen.c	FUNCTION_4	IF_2
0x4000857	            0xffd1	                                call rcx	       119	pen.c	FUNCTION_4	IF_2
0x4000859	     0xfb793240100	          movzx edx, word [rbx + 0x124] 	       196	pen.c	FUNCTION_11	ELSE_1	CALL_7
0x4000860	        0x488b4308	                mov rax, qword [rbx + 8]	       196	pen.c	FUNCTION_11	ELSE_1	CALL_7
0x4000864	        0x66c1ea07	                               shr dx, 7	       196	pen.c	FUNCTION_11	ELSE_1	CALL_7
0x4000868	          0x83e20f	                            and edx, 0xf	       132	pen.c	FUNCTION_6
0x400086b	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x400086e	          0x891424	                    mov dword [rsp], edx	       132	pen.c	FUNCTION_6
0x4000871	     0xf84b9000000	                            je 0x4000930	       118	pen.c	FUNCTION_4	IF_2
0x4000877	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x400087b	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x400087e	     0xf847f010000	                            je 0x4000a03	       118	pen.c	FUNCTION_4	IF_2
0x4000884	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x4000888	          0x4889e6	                            mov rsi, rsp	       119	pen.c	FUNCTION_4	IF_2
0x400088b	      0xbf07000000	                              mov edi, 7	       119	pen.c	FUNCTION_4	IF_2
0x4000890	            0xffd1	                                call rcx	       119	pen.c	FUNCTION_4	IF_2
0x4000892	        0x488b4308	                mov rax, qword [rbx + 8]	       119	pen.c	FUNCTION_4	IF_2
0x4000896	     0xfb6b31d0100	          movzx esi, byte [rbx + 0x11d] 	       119	pen.c	FUNCTION_4	IF_2
0x400089d	     0xfb68b1e0100	          movzx ecx, byte [rbx + 0x11e] 	       119	pen.c	FUNCTION_4	IF_2
0x40008a4	     0xfb6931f0100	          movzx edx, byte [rbx + 0x11f] 	       119	pen.c	FUNCTION_4	IF_2
0x40008ab	     0xfb6bb1c0100	          movzx edi, byte [rbx + 0x11c] 	       139	pen.c	FUNCTION_7
0x40008b2	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x40008b5	      0x4088742401	                 mov byte [rsp + 1], sil	       139	pen.c	FUNCTION_7
0x40008ba	        0x884c2402	                  mov byte [rsp + 2], cl	       139	pen.c	FUNCTION_7
0x40008be	        0x88542403	                  mov byte [rsp + 3], dl	       139	pen.c	FUNCTION_7
0x40008c2	        0x40883c24	                     mov byte [rsp], dil	       139	pen.c	FUNCTION_7
0x40008c6	            0x7468	                            je 0x4000930	       118	pen.c	FUNCTION_4	IF_2
0x40008c8	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x40008cc	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x40008cf	     0xf8468010000	                            je 0x4000a3d	       118	pen.c	FUNCTION_4	IF_2
0x40008d5	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x40008d9	          0x4889e6	                            mov rsi, rsp	       119	pen.c	FUNCTION_4	IF_2
0x40008dc	      0xbf08000000	                              mov edi, 8	       119	pen.c	FUNCTION_4	IF_2
0x40008e1	            0xffd1	                                call rcx	       119	pen.c	FUNCTION_4	IF_2
0x40008e3	        0x488b4308	                mov rax, qword [rbx + 8]	       119	pen.c	FUNCTION_4	IF_2
0x40008e7	     0xfb6b3210100	          movzx esi, byte [rbx + 0x121] 	       119	pen.c	FUNCTION_4	IF_2
0x40008ee	     0xfb68b220100	          movzx ecx, byte [rbx + 0x122] 	       119	pen.c	FUNCTION_4	IF_2
0x40008f5	     0xfb693230100	          movzx edx, byte [rbx + 0x123] 	       119	pen.c	FUNCTION_4	IF_2
0x40008fc	     0xfb6bb200100	          movzx edi, byte [rbx + 0x120] 	       139	pen.c	FUNCTION_7
0x4000903	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000906	      0x4088742401	                 mov byte [rsp + 1], sil	       139	pen.c	FUNCTION_7
0x400090b	        0x884c2402	                  mov byte [rsp + 2], cl	       139	pen.c	FUNCTION_7
0x400090f	        0x88542403	                  mov byte [rsp + 3], dl	       139	pen.c	FUNCTION_7
0x4000913	        0x40883c24	                     mov byte [rsp], dil	       139	pen.c	FUNCTION_7
0x4000917	            0x7417	                            je 0x4000930	       118	pen.c	FUNCTION_4	IF_2
0x4000919	        0x488b4030	            mov rax, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x400091d	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000920	            0x740e	                            je 0x4000930	       118	pen.c	FUNCTION_4	IF_2
0x4000922	        0x488b5310	            mov rdx, qword [rbx + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x4000926	          0x4889e6	                            mov rsi, rsp	       119	pen.c	FUNCTION_4	IF_2
0x4000929	      0xbf09000000	                              mov edi, 9	       119	pen.c	FUNCTION_4	IF_2
0x400092e	            0xffd0	                                call rax	       119	pen.c	FUNCTION_4	IF_2
0x4000930	      0x488b442408	                mov rax, qword [rsp + 8]	       200	pen.c	FUNCTION_11
0x4000935	    0x644833042528	                xor rax, qword fs:[0x28]	       200	pen.c	FUNCTION_11
0x400093e	     0xf852b010000	                           jne 0x4000a6f	       200	pen.c	FUNCTION_11
0x4000944	        0x4883c410	                           add rsp, 0x10	       200	pen.c	FUNCTION_11
0x4000948	              0x5b	                                 pop rbx	       200	pen.c	FUNCTION_11
0x4000949	              0xc3	                                     ret	       200	pen.c	FUNCTION_11
0x400094a	    0x660f1f440000	                    nop word [rax + rax]	       200	pen.c	FUNCTION_11
0x4000950	    0x488b871c0100	           mov rax, qword [rdi + 0x11c] 	       185	pen.c	FUNCTION_11	IF_1
0x4000957	    0x488987880100	            mov qword [rdi + 0x188], rax	       185	pen.c	FUNCTION_11	IF_1
0x400095e	    0x8b8724010000	           mov eax, dword [rdi + 0x124] 	       185	pen.c	FUNCTION_11	IF_1
0x4000964	    0x898790010000	            mov dword [rdi + 0x190], eax	       185	pen.c	FUNCTION_11	IF_1
0x400096a	            0xebc4	                           jmp 0x4000930	       185	pen.c	FUNCTION_11	IF_1
0x400096c	         0xf1f4000	                         nop dword [rax]	       185	pen.c	FUNCTION_11	IF_1
0x4000970	            0x89d1	                            mov ecx, edx	       191	pen.c	FUNCTION_11	ELSE_1	CALL_2
0x4000972	            0xd0e9	                               shr cl, 1	       191	pen.c	FUNCTION_11	ELSE_1	CALL_2
0x4000974	          0x83e103	                              and ecx, 3	       132	pen.c	FUNCTION_6
0x4000977	          0x890c24	                    mov dword [rsp], ecx	       132	pen.c	FUNCTION_6
0x400097a	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x400097e	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x4000981	     0xf85defdffff	                           jne 0x4000765	       118	pen.c	FUNCTION_4	IF_2
0x4000987	            0x89d1	                            mov ecx, edx	       192	pen.c	FUNCTION_11	ELSE_1	CALL_3
0x4000989	          0xc0e903	                               shr cl, 3	       192	pen.c	FUNCTION_11	ELSE_1	CALL_3
0x400098c	          0x83e101	                              and ecx, 1	       125	pen.c	FUNCTION_5
0x400098f	          0x890c24	                    mov dword [rsp], ecx	       125	pen.c	FUNCTION_5
0x4000992	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x4000996	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x4000999	     0xf8500feffff	                           jne 0x400079f	       118	pen.c	FUNCTION_4	IF_2
0x400099f	            0x89d1	                            mov ecx, edx	       193	pen.c	FUNCTION_11	ELSE_1	CALL_4
0x40009a1	          0xc0e904	                               shr cl, 4	       193	pen.c	FUNCTION_11	ELSE_1	CALL_4
0x40009a4	          0x83e101	                              and ecx, 1	       125	pen.c	FUNCTION_5
0x40009a7	          0x890c24	                    mov dword [rsp], ecx	       125	pen.c	FUNCTION_5
0x40009aa	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x40009ae	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x40009b1	     0xf8522feffff	                           jne 0x40007d9	       118	pen.c	FUNCTION_4	IF_2
0x40009b7	            0x89d1	                            mov ecx, edx	       194	pen.c	FUNCTION_11	ELSE_1	CALL_5
0x40009b9	          0xc0e905	                               shr cl, 5	       194	pen.c	FUNCTION_11	ELSE_1	CALL_5
0x40009bc	          0x83e101	                              and ecx, 1	       125	pen.c	FUNCTION_5
0x40009bf	          0x890c24	                    mov dword [rsp], ecx	       125	pen.c	FUNCTION_5
0x40009c2	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x40009c6	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x40009c9	     0xf8544feffff	                           jne 0x4000813	       118	pen.c	FUNCTION_4	IF_2
0x40009cf	          0xc0ea06	                               shr dl, 6	       195	pen.c	FUNCTION_11	ELSE_1	CALL_6
0x40009d2	          0x83e201	                              and edx, 1	       125	pen.c	FUNCTION_5
0x40009d5	          0x891424	                    mov dword [rsp], edx	       125	pen.c	FUNCTION_5
0x40009d8	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x40009dc	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x40009df	     0xf8566feffff	                           jne 0x400084b	       118	pen.c	FUNCTION_4	IF_2
0x40009e5	     0xfb793240100	          movzx edx, word [rbx + 0x124] 	       196	pen.c	FUNCTION_11	ELSE_1	CALL_7
0x40009ec	        0x66c1ea07	                               shr dx, 7	       196	pen.c	FUNCTION_11	ELSE_1	CALL_7
0x40009f0	          0x83e20f	                            and edx, 0xf	       132	pen.c	FUNCTION_6
0x40009f3	          0x891424	                    mov dword [rsp], edx	       132	pen.c	FUNCTION_6
0x40009f6	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x40009fa	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x40009fd	     0xf8581feffff	                           jne 0x4000884	       118	pen.c	FUNCTION_4	IF_2
0x4000a03	     0xfb68b1e0100	          movzx ecx, byte [rbx + 0x11e] 	       118	pen.c	FUNCTION_4	IF_2
0x4000a0a	     0xfb6b31d0100	          movzx esi, byte [rbx + 0x11d] 	       118	pen.c	FUNCTION_4	IF_2
0x4000a11	     0xfb6931f0100	          movzx edx, byte [rbx + 0x11f] 	       118	pen.c	FUNCTION_4	IF_2
0x4000a18	     0xfb6bb1c0100	          movzx edi, byte [rbx + 0x11c] 	       139	pen.c	FUNCTION_7
0x4000a1f	      0x4088742401	                 mov byte [rsp + 1], sil	       139	pen.c	FUNCTION_7
0x4000a24	        0x884c2402	                  mov byte [rsp + 2], cl	       139	pen.c	FUNCTION_7
0x4000a28	        0x40883c24	                     mov byte [rsp], dil	       139	pen.c	FUNCTION_7
0x4000a2c	        0x88542403	                  mov byte [rsp + 3], dl	       139	pen.c	FUNCTION_7
0x4000a30	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x4000a34	          0x4885c9	                           test rcx, rcx	       118	pen.c	FUNCTION_4	IF_2
0x4000a37	     0xf8598feffff	                           jne 0x40008d5	       118	pen.c	FUNCTION_4	IF_2
0x4000a3d	     0xfb6b3210100	          movzx esi, byte [rbx + 0x121] 	       118	pen.c	FUNCTION_4	IF_2
0x4000a44	     0xfb68b220100	          movzx ecx, byte [rbx + 0x122] 	       118	pen.c	FUNCTION_4	IF_2
0x4000a4b	     0xfb693230100	          movzx edx, byte [rbx + 0x123] 	       118	pen.c	FUNCTION_4	IF_2
0x4000a52	     0xfb6bb200100	          movzx edi, byte [rbx + 0x120] 	       139	pen.c	FUNCTION_7
0x4000a59	      0x4088742401	                 mov byte [rsp + 1], sil	       139	pen.c	FUNCTION_7
0x4000a5e	        0x884c2402	                  mov byte [rsp + 2], cl	       139	pen.c	FUNCTION_7
0x4000a62	        0x40883c24	                     mov byte [rsp], dil	       139	pen.c	FUNCTION_7
0x4000a66	        0x88542403	                  mov byte [rsp + 3], dl	       139	pen.c	FUNCTION_7
0x4000a6a	      0xe9aafeffff	                           jmp 0x4000919	       139	pen.c	FUNCTION_7
0x4000a6f	      0xe800000000	                          call 0x4000a74	       200	pen.c	FUNCTION_11
vterm_state_get_penattr	WHILE,0:SWITCH,1:IF,0:DO,0:ELSE,0:FOR,0:CALL,0:functions,0	65
0x4001720	          0x83fe09	                              cmp esi, 9	       474	pen.c	FUNCTION_19	SWITCH_1
0x4001723	     0xf87e7000000	                            ja 0x4001810	       474	pen.c	FUNCTION_19	SWITCH_1
0x4001729	            0x89f6	                            mov esi, esi	       474	pen.c	FUNCTION_19	SWITCH_1
0x400172b	    0xff24f5000000	                       jmp qword [rsi*8]	       474	pen.c	FUNCTION_19	SWITCH_1
0x4001732	    0x660f1f440000	                    nop word [rax + rax]	       474	pen.c	FUNCTION_19	SWITCH_1
0x4001738	    0x8b8720010000	           mov eax, dword [rdi + 0x120] 	       508	pen.c	FUNCTION_19	SWITCH_1
0x400173e	            0x8902	                    mov dword [rdx], eax	       508	pen.c	FUNCTION_19	SWITCH_1
0x4001740	      0xb801000000	                              mov eax, 1	       509	pen.c	FUNCTION_19	SWITCH_1
0x4001745	              0xc3	                                     ret	       509	pen.c	FUNCTION_19	SWITCH_1
0x4001746	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       509	pen.c	FUNCTION_19	SWITCH_1
0x4001750	     0xfb687240100	          movzx eax, byte [rdi + 0x124] 	       476	pen.c	FUNCTION_19	SWITCH_1
0x4001757	          0x83e001	                              and eax, 1	       476	pen.c	FUNCTION_19	SWITCH_1
0x400175a	            0x8902	                    mov dword [rdx], eax	       476	pen.c	FUNCTION_19	SWITCH_1
0x400175c	      0xb801000000	                              mov eax, 1	       477	pen.c	FUNCTION_19	SWITCH_1
0x4001761	              0xc3	                                     ret	       477	pen.c	FUNCTION_19	SWITCH_1
0x4001762	    0x660f1f440000	                    nop word [rax + rax]	       477	pen.c	FUNCTION_19	SWITCH_1
0x4001768	     0xfb687240100	          movzx eax, byte [rdi + 0x124] 	       480	pen.c	FUNCTION_19	SWITCH_1
0x400176f	            0xd0e8	                               shr al, 1	       480	pen.c	FUNCTION_19	SWITCH_1
0x4001771	          0x83e003	                              and eax, 3	       480	pen.c	FUNCTION_19	SWITCH_1
0x4001774	            0x8902	                    mov dword [rdx], eax	       480	pen.c	FUNCTION_19	SWITCH_1
0x4001776	      0xb801000000	                              mov eax, 1	       481	pen.c	FUNCTION_19	SWITCH_1
0x400177b	              0xc3	                                     ret	       481	pen.c	FUNCTION_19	SWITCH_1
0x400177c	         0xf1f4000	                         nop dword [rax]	       481	pen.c	FUNCTION_19	SWITCH_1
0x4001780	     0xfb687240100	          movzx eax, byte [rdi + 0x124] 	       484	pen.c	FUNCTION_19	SWITCH_1
0x4001787	          0xc0e803	                               shr al, 3	       484	pen.c	FUNCTION_19	SWITCH_1
0x400178a	          0x83e001	                              and eax, 1	       484	pen.c	FUNCTION_19	SWITCH_1
0x400178d	            0x8902	                    mov dword [rdx], eax	       484	pen.c	FUNCTION_19	SWITCH_1
0x400178f	      0xb801000000	                              mov eax, 1	       485	pen.c	FUNCTION_19	SWITCH_1
0x4001794	              0xc3	                                     ret	       485	pen.c	FUNCTION_19	SWITCH_1
0x4001795	           0xf1f00	                         nop dword [rax]	       485	pen.c	FUNCTION_19	SWITCH_1
0x4001798	     0xfb687240100	          movzx eax, byte [rdi + 0x124] 	       488	pen.c	FUNCTION_19	SWITCH_1
0x400179f	          0xc0e804	                               shr al, 4	       488	pen.c	FUNCTION_19	SWITCH_1
0x40017a2	          0x83e001	                              and eax, 1	       488	pen.c	FUNCTION_19	SWITCH_1
0x40017a5	            0x8902	                    mov dword [rdx], eax	       488	pen.c	FUNCTION_19	SWITCH_1
0x40017a7	      0xb801000000	                              mov eax, 1	       489	pen.c	FUNCTION_19	SWITCH_1
0x40017ac	              0xc3	                                     ret	       489	pen.c	FUNCTION_19	SWITCH_1
0x40017ad	           0xf1f00	                         nop dword [rax]	       489	pen.c	FUNCTION_19	SWITCH_1
0x40017b0	     0xfb687240100	          movzx eax, byte [rdi + 0x124] 	       492	pen.c	FUNCTION_19	SWITCH_1
0x40017b7	          0xc0e805	                               shr al, 5	       492	pen.c	FUNCTION_19	SWITCH_1
0x40017ba	          0x83e001	                              and eax, 1	       492	pen.c	FUNCTION_19	SWITCH_1
0x40017bd	            0x8902	                    mov dword [rdx], eax	       492	pen.c	FUNCTION_19	SWITCH_1
0x40017bf	      0xb801000000	                              mov eax, 1	       493	pen.c	FUNCTION_19	SWITCH_1
0x40017c4	              0xc3	                                     ret	       493	pen.c	FUNCTION_19	SWITCH_1
0x40017c5	           0xf1f00	                         nop dword [rax]	       493	pen.c	FUNCTION_19	SWITCH_1
0x40017c8	     0xfb687240100	          movzx eax, byte [rdi + 0x124] 	       496	pen.c	FUNCTION_19	SWITCH_1
0x40017cf	          0xc0e806	                               shr al, 6	       496	pen.c	FUNCTION_19	SWITCH_1
0x40017d2	          0x83e001	                              and eax, 1	       496	pen.c	FUNCTION_19	SWITCH_1
0x40017d5	            0x8902	                    mov dword [rdx], eax	       496	pen.c	FUNCTION_19	SWITCH_1
0x40017d7	      0xb801000000	                              mov eax, 1	       497	pen.c	FUNCTION_19	SWITCH_1
0x40017dc	              0xc3	                                     ret	       497	pen.c	FUNCTION_19	SWITCH_1
0x40017dd	           0xf1f00	                         nop dword [rax]	       497	pen.c	FUNCTION_19	SWITCH_1
0x40017e0	     0xfb787240100	          movzx eax, word [rdi + 0x124] 	       500	pen.c	FUNCTION_19	SWITCH_1
0x40017e7	        0x66c1e807	                               shr ax, 7	       500	pen.c	FUNCTION_19	SWITCH_1
0x40017eb	          0x83e00f	                            and eax, 0xf	       500	pen.c	FUNCTION_19	SWITCH_1
0x40017ee	            0x8902	                    mov dword [rdx], eax	       500	pen.c	FUNCTION_19	SWITCH_1
0x40017f0	      0xb801000000	                              mov eax, 1	       501	pen.c	FUNCTION_19	SWITCH_1
0x40017f5	              0xc3	                                     ret	       501	pen.c	FUNCTION_19	SWITCH_1
0x40017f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       501	pen.c	FUNCTION_19	SWITCH_1
0x4001800	    0x8b871c010000	           mov eax, dword [rdi + 0x11c] 	       504	pen.c	FUNCTION_19	SWITCH_1
0x4001806	            0x8902	                    mov dword [rdx], eax	       504	pen.c	FUNCTION_19	SWITCH_1
0x4001808	      0xb801000000	                              mov eax, 1	       505	pen.c	FUNCTION_19	SWITCH_1
0x400180d	              0xc3	                                     ret	       505	pen.c	FUNCTION_19	SWITCH_1
0x400180e	            0x6690	                                     nop	       505	pen.c	FUNCTION_19	SWITCH_1
0x4001810	            0x31c0	                            xor eax, eax	       512	pen.c	FUNCTION_19	SWITCH_1
0x4001812	              0xc3	                                     ret	       516	pen.c	FUNCTION_19
vterm_state_newpen	WHILE,0:SWITCH,0:IF,0:DO,0:ELSE,0:FOR,1:CALL,0:functions,0	25
0x40001a0	    0x488b15000000	            mov rdx, qword [0x040001a7] 	       153	pen.c	FUNCTION_9
0x40001a7	    0xc6872a010000	           mov byte [rdi + 0x12a], 0xf0 	       157	pen.c	FUNCTION_9
0x40001ae	    0xc68729010000	           mov byte [rdi + 0x129], 0xf0 	       157	pen.c	FUNCTION_9
0x40001b5	    0xc68728010000	           mov byte [rdi + 0x128], 0xf0 	       157	pen.c	FUNCTION_9
0x40001bc	    0xc6872b010000	               mov byte [rdi + 0x12b], 0	       158	pen.c	FUNCTION_9
0x40001c3	    0xc6872e010000	               mov byte [rdi + 0x12e], 0	       159	pen.c	FUNCTION_9
0x40001ca	    0x488997300100	            mov qword [rdi + 0x130], rdx	       159	pen.c	FUNCTION_9
0x40001d1	    0x488b15000000	            mov rdx, qword [0x040001d8] 	       159	pen.c	FUNCTION_9
0x40001d8	    0xc6872d010000	               mov byte [rdi + 0x12d], 0	       159	pen.c	FUNCTION_9
0x40001df	    0xc6872c010000	               mov byte [rdi + 0x12c], 0	       159	pen.c	FUNCTION_9
0x40001e6	    0xc6872f010000	               mov byte [rdi + 0x12f], 0	       160	pen.c	FUNCTION_9
0x40001ed	    0x488997380100	            mov qword [rdi + 0x138], rdx	       160	pen.c	FUNCTION_9
0x40001f4	    0x488b15000000	            mov rdx, qword [0x040001fb] 	       160	pen.c	FUNCTION_9
0x40001fb	    0x488997400100	            mov qword [rdi + 0x140], rdx	       160	pen.c	FUNCTION_9
0x4000202	    0x488b15000000	            mov rdx, qword [0x04000209] 	       160	pen.c	FUNCTION_9
0x4000209	    0x488997480100	            mov qword [rdi + 0x148], rdx	       160	pen.c	FUNCTION_9
0x4000210	    0x488b15000000	            mov rdx, qword [0x04000217] 	       160	pen.c	FUNCTION_9
0x4000217	    0x488997500100	            mov qword [rdi + 0x150], rdx	       160	pen.c	FUNCTION_9
0x400021e	    0x488b15000000	            mov rdx, qword [0x04000225] 	       160	pen.c	FUNCTION_9
0x4000225	    0x488997580100	            mov qword [rdi + 0x158], rdx	       160	pen.c	FUNCTION_9
0x400022c	    0x488b15000000	            mov rdx, qword [0x04000233] 	       160	pen.c	FUNCTION_9
0x4000233	    0x488997600100	            mov qword [rdi + 0x160], rdx	       160	pen.c	FUNCTION_9
0x400023a	    0x488b15000000	            mov rdx, qword [0x04000241] 	       160	pen.c	FUNCTION_9
0x4000241	    0x488997680100	            mov qword [rdi + 0x168], rdx	       160	pen.c	FUNCTION_9
0x4000248	              0xc3	                                     ret	       160	pen.c	FUNCTION_9
vterm_state_getpen	WHILE,0:SWITCH,0:IF,18:DO,0:ELSE,6:FOR,0:CALL,0:functions,0	181
0x4001400	     0xfb697240100	          movzx edx, byte [rdi + 0x124] 	       401	pen.c	FUNCTION_18	IF_1
0x4001407	          0xf6c201	                              test dl, 1	       401	pen.c	FUNCTION_18	IF_1
0x400140a	     0xf8410010000	                            je 0x4001520	       401	pen.c	FUNCTION_18	IF_1
0x4001410	    0x48c706010000	                      mov qword [rsi], 1	       402	pen.c	FUNCTION_18	IF_1
0x4001417	     0xfb697240100	          movzx edx, byte [rdi + 0x124] 	       402	pen.c	FUNCTION_18	IF_1
0x400141e	    0x41b808000000	                              mov r8d, 8	       402	pen.c	FUNCTION_18	IF_1
0x4001424	      0xb902000000	                              mov ecx, 2	       402	pen.c	FUNCTION_18	IF_1
0x4001429	      0xb801000000	                              mov eax, 1	       402	pen.c	FUNCTION_18	IF_1
0x400142e	          0xf6c208	                              test dl, 8	       404	pen.c	FUNCTION_18	IF_2
0x4001431	            0x7411	                            je 0x4001444	       404	pen.c	FUNCTION_18	IF_2
0x4001433	    0x4ac704060300	                 mov qword [rsi + r8], 3	       405	pen.c	FUNCTION_18	IF_2
0x400143b	     0xfb697240100	          movzx edx, byte [rdi + 0x124] 	       405	pen.c	FUNCTION_18	IF_2
0x4001442	            0x89c8	                            mov eax, ecx	       405	pen.c	FUNCTION_18	IF_2
0x4001444	            0x89d1	                            mov ecx, edx	       407	pen.c	FUNCTION_18	IF_3
0x4001446	          0x83e106	                              and ecx, 6	       407	pen.c	FUNCTION_18	IF_3
0x4001449	          0x80f902	                               cmp cl, 2	       407	pen.c	FUNCTION_18	IF_3
0x400144c	     0xf847e010000	                            je 0x40015d0	       407	pen.c	FUNCTION_18	IF_3
0x4001452	          0xf6c210	                           test dl, 0x10	       410	pen.c	FUNCTION_18	IF_4
0x4001455	            0x7415	                            je 0x400146c	       410	pen.c	FUNCTION_18	IF_4
0x4001457	          0x4863d0	                         movsxd rdx, eax	       411	pen.c	FUNCTION_18	IF_4
0x400145a	          0x83c001	                              add eax, 1	       411	pen.c	FUNCTION_18	IF_4
0x400145d	    0x48c704d60500	              mov qword [rsi + rdx*8], 5	       411	pen.c	FUNCTION_18	IF_4
0x4001465	     0xfb697240100	          movzx edx, byte [rdi + 0x124] 	       411	pen.c	FUNCTION_18	IF_4
0x400146c	          0xf6c220	                           test dl, 0x20	       413	pen.c	FUNCTION_18	IF_5
0x400146f	            0x7415	                            je 0x4001486	       413	pen.c	FUNCTION_18	IF_5
0x4001471	          0x4863d0	                         movsxd rdx, eax	       414	pen.c	FUNCTION_18	IF_5
0x4001474	          0x83c001	                              add eax, 1	       414	pen.c	FUNCTION_18	IF_5
0x4001477	    0x48c704d60700	              mov qword [rsi + rdx*8], 7	       414	pen.c	FUNCTION_18	IF_5
0x400147f	     0xfb697240100	          movzx edx, byte [rdi + 0x124] 	       414	pen.c	FUNCTION_18	IF_5
0x4001486	          0x83e240	                           and edx, 0x40	       416	pen.c	FUNCTION_18	IF_6
0x4001489	            0x740e	                            je 0x4001499	       416	pen.c	FUNCTION_18	IF_6
0x400148b	          0x4863d0	                         movsxd rdx, eax	       417	pen.c	FUNCTION_18	IF_6
0x400148e	          0x83c001	                              add eax, 1	       417	pen.c	FUNCTION_18	IF_6
0x4001491	    0x48c704d60900	              mov qword [rsi + rdx*8], 9	       417	pen.c	FUNCTION_18	IF_6
0x4001499	     0xfb797240100	          movzx edx, word [rdi + 0x124] 	       419	pen.c	FUNCTION_18	IF_7
0x40014a0	      0x66f7c28007	                          test dx, 0x780	       419	pen.c	FUNCTION_18	IF_7
0x40014a5	            0x7415	                            je 0x40014bc	       419	pen.c	FUNCTION_18	IF_7
0x40014a7	        0x66c1ea07	                               shr dx, 7	       420	pen.c	FUNCTION_18	IF_7
0x40014ab	          0x4863c8	                         movsxd rcx, eax	       420	pen.c	FUNCTION_18	IF_7
0x40014ae	          0x83c001	                              add eax, 1	       420	pen.c	FUNCTION_18	IF_7
0x40014b1	          0x83e20f	                            and edx, 0xf	       420	pen.c	FUNCTION_18	IF_7
0x40014b4	        0x4883c20a	                            add rdx, 0xa	       420	pen.c	FUNCTION_18	IF_7
0x40014b8	        0x488914ce	            mov qword [rsi + rcx*8], rdx	       420	pen.c	FUNCTION_18	IF_7
0x40014bc	     0xfb697240100	          movzx edx, byte [rdi + 0x124] 	       422	pen.c	FUNCTION_18	IF_8
0x40014c3	          0x83e206	                              and edx, 6	       422	pen.c	FUNCTION_18	IF_8
0x40014c6	          0x80fa04	                               cmp dl, 4	       422	pen.c	FUNCTION_18	IF_8
0x40014c9	     0xf84e9000000	                            je 0x40015b8	       422	pen.c	FUNCTION_18	IF_8
0x40014cf	    0x486397700100	        movsxd rdx, dword [rdi + 0x170] 	       425	pen.c	FUNCTION_18	IF_9
0x40014d6	          0x83fa07	                              cmp edx, 7	       425	pen.c	FUNCTION_18	IF_9
0x40014d9	            0x7755	                            ja 0x4001530	       425	pen.c	FUNCTION_18	IF_9
0x40014db	          0x83c21e	                           add edx, 0x1e	       426	pen.c	FUNCTION_18	IF_9
0x40014de	          0x8d4801	                      lea ecx, [rax + 1]	       426	pen.c	FUNCTION_18	IF_9
0x40014e1	            0x4898	                                    cdqe	       426	pen.c	FUNCTION_18	IF_9
0x40014e3	          0x4863d2	                         movsxd rdx, edx	       426	pen.c	FUNCTION_18	IF_9
0x40014e6	        0x488914c6	            mov qword [rsi + rax*8], rdx	       426	pen.c	FUNCTION_18	IF_9
0x40014ea	    0x486397740100	        movsxd rdx, dword [rdi + 0x174] 	       447	pen.c	FUNCTION_18	IF_14
0x40014f1	          0x83fa07	                              cmp edx, 7	       447	pen.c	FUNCTION_18	IF_14
0x40014f4	            0x765d	                           jbe 0x4001553	       447	pen.c	FUNCTION_18	IF_14
0x40014f6	          0x8d42f8	                      lea eax, [rdx - 8]	       449	pen.c	FUNCTION_18	ELSE_4	IF_15
0x40014f9	          0x83f807	                              cmp eax, 7	       449	pen.c	FUNCTION_18	ELSE_4	IF_15
0x40014fc	     0xf869e000000	                           jbe 0x40015a0	       449	pen.c	FUNCTION_18	ELSE_4	IF_15
0x4001502	          0x8d42f0	                   lea eax, [rdx - 0x10]	       451	pen.c	FUNCTION_18	ELSE_5	IF_16
0x4001505	      0x3def000000	                           cmp eax, 0xef	       451	pen.c	FUNCTION_18	ELSE_5	IF_16
0x400150a	     0xf86e0010000	                           jbe 0x40016f0	       451	pen.c	FUNCTION_18	ELSE_5	IF_16
0x4001510	          0x83faff	             cmp edx, 0xffffffffffffffff	       456	pen.c	FUNCTION_18	ELSE_6	IF_17
0x4001513	            0x89c8	                            mov eax, ecx	       456	pen.c	FUNCTION_18	ELSE_6	IF_17
0x4001515	     0xf845d010000	                            je 0x4001678	       456	pen.c	FUNCTION_18	ELSE_6	IF_17
0x400151b	            0xf3c3	                                     ret	       470	pen.c	FUNCTION_18
0x400151d	           0xf1f00	                         nop dword [rax]	       470	pen.c	FUNCTION_18
0x4001520	          0x4531c0	                            xor r8d, r8d	       470	pen.c	FUNCTION_18
0x4001523	      0xb901000000	                              mov ecx, 1	       470	pen.c	FUNCTION_18
0x4001528	            0x31c0	                            xor eax, eax	       399	pen.c	FUNCTION_18
0x400152a	      0xe9fffeffff	                           jmp 0x400142e	       399	pen.c	FUNCTION_18
0x400152f	              0x90	                                     nop	       399	pen.c	FUNCTION_18
0x4001530	          0x8d4af8	                      lea ecx, [rdx - 8]	       427	pen.c	FUNCTION_18	ELSE_1	IF_10
0x4001533	          0x83f907	                              cmp ecx, 7	       427	pen.c	FUNCTION_18	ELSE_1	IF_10
0x4001536	            0x7730	                            ja 0x4001568	       427	pen.c	FUNCTION_18	ELSE_1	IF_10
0x4001538	          0x83c252	                           add edx, 0x52	       428	pen.c	FUNCTION_18	ELSE_1	IF_10
0x400153b	          0x8d4801	                      lea ecx, [rax + 1]	       428	pen.c	FUNCTION_18	ELSE_1	IF_10
0x400153e	            0x4898	                                    cdqe	       428	pen.c	FUNCTION_18	ELSE_1	IF_10
0x4001540	          0x4863d2	                         movsxd rdx, edx	       428	pen.c	FUNCTION_18	ELSE_1	IF_10
0x4001543	        0x488914c6	            mov qword [rsi + rax*8], rdx	       428	pen.c	FUNCTION_18	ELSE_1	IF_10
0x4001547	    0x486397740100	        movsxd rdx, dword [rdi + 0x174] 	       447	pen.c	FUNCTION_18	IF_14
0x400154e	          0x83fa07	                              cmp edx, 7	       447	pen.c	FUNCTION_18	IF_14
0x4001551	            0x77a3	                            ja 0x40014f6	       447	pen.c	FUNCTION_18	IF_14
0x4001553	          0x83c228	                           add edx, 0x28	       448	pen.c	FUNCTION_18	IF_14
0x4001556	          0x8d4101	                      lea eax, [rcx + 1]	       448	pen.c	FUNCTION_18	IF_14
0x4001559	          0x4863c9	                         movsxd rcx, ecx	       448	pen.c	FUNCTION_18	IF_14
0x400155c	          0x4863d2	                         movsxd rdx, edx	       448	pen.c	FUNCTION_18	IF_14
0x400155f	        0x488914ce	            mov qword [rsi + rcx*8], rdx	       448	pen.c	FUNCTION_18	IF_14
0x4001563	              0xc3	                                     ret	       448	pen.c	FUNCTION_18	IF_14
0x4001564	         0xf1f4000	                         nop dword [rax]	       448	pen.c	FUNCTION_18	IF_14
0x4001568	          0x8d4af0	                   lea ecx, [rdx - 0x10]	       429	pen.c	FUNCTION_18	ELSE_2	IF_11
0x400156b	    0x81f9ef000000	                           cmp ecx, 0xef	       429	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4001571	            0x777d	                            ja 0x40015f0	       429	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4001573	          0x4863c8	                         movsxd rcx, eax	       430	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4001576	    0x41ba26000080	                    mov r10d, 0x80000026	       430	pen.c	FUNCTION_18	ELSE_2	IF_11
0x400157c	    0x4c8d04cd0000	                         lea r8, [rcx*8]	       430	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4001584	        0x4c8914ce	            mov qword [rsi + rcx*8], r10	       430	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4001588	      0xb905000080	                     mov ecx, 0x80000005	       431	pen.c	FUNCTION_18	ELSE_2	IF_11
0x400158d	      0x4a894c0608	           mov qword [rsi + r8 + 8], rcx	       431	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4001592	      0x4a89540610	        mov qword [rsi + r8 + 0x10], rdx	       432	pen.c	FUNCTION_18	ELSE_2	IF_11
0x4001597	          0x8d4803	                      lea ecx, [rax + 3]	       432	pen.c	FUNCTION_18	ELSE_2	IF_11
0x400159a	      0xe94bffffff	                           jmp 0x40014ea	       432	pen.c	FUNCTION_18	ELSE_2	IF_11
0x400159f	              0x90	                                     nop	       432	pen.c	FUNCTION_18	ELSE_2	IF_11
0x40015a0	          0x83c25c	                           add edx, 0x5c	       450	pen.c	FUNCTION_18	ELSE_4	IF_15
0x40015a3	          0x8d4101	                      lea eax, [rcx + 1]	       450	pen.c	FUNCTION_18	ELSE_4	IF_15
0x40015a6	          0x4863c9	                         movsxd rcx, ecx	       450	pen.c	FUNCTION_18	ELSE_4	IF_15
0x40015a9	          0x4863d2	                         movsxd rdx, edx	       450	pen.c	FUNCTION_18	ELSE_4	IF_15
0x40015ac	        0x488914ce	            mov qword [rsi + rcx*8], rdx	       450	pen.c	FUNCTION_18	ELSE_4	IF_15
0x40015b0	              0xc3	                                     ret	       450	pen.c	FUNCTION_18	ELSE_4	IF_15
0x40015b1	     0xf1f80000000	                         nop dword [rax]	       450	pen.c	FUNCTION_18	ELSE_4	IF_15
0x40015b8	          0x4863d0	                         movsxd rdx, eax	       423	pen.c	FUNCTION_18	IF_8
0x40015bb	          0x83c001	                              add eax, 1	       423	pen.c	FUNCTION_18	IF_8
0x40015be	    0x48c704d61500	          mov qword [rsi + rdx*8], 0x15 	       423	pen.c	FUNCTION_18	IF_8
0x40015c6	      0xe904ffffff	                           jmp 0x40014cf	       423	pen.c	FUNCTION_18	IF_8
0x40015cb	       0xf1f440000	                   nop dword [rax + rax]	       423	pen.c	FUNCTION_18	IF_8
0x40015d0	          0x4863d0	                         movsxd rdx, eax	       408	pen.c	FUNCTION_18	IF_3
0x40015d3	          0x83c001	                              add eax, 1	       408	pen.c	FUNCTION_18	IF_3
0x40015d6	    0x48c704d60400	              mov qword [rsi + rdx*8], 4	       408	pen.c	FUNCTION_18	IF_3
0x40015de	     0xfb697240100	          movzx edx, byte [rdi + 0x124] 	       408	pen.c	FUNCTION_18	IF_3
0x40015e5	      0xe968feffff	                           jmp 0x4001452	       408	pen.c	FUNCTION_18	IF_3
0x40015ea	    0x660f1f440000	                    nop word [rax + rax]	       408	pen.c	FUNCTION_18	IF_3
0x40015f0	          0x83faff	             cmp edx, 0xffffffffffffffff	       434	pen.c	FUNCTION_18	ELSE_3	IF_12
0x40015f3	            0x89c1	                            mov ecx, eax	       434	pen.c	FUNCTION_18	ELSE_3	IF_12
0x40015f5	     0xf85effeffff	                           jne 0x40014ea	       434	pen.c	FUNCTION_18	ELSE_3	IF_12
0x40015fb	    0x8b971c010000	           mov edx, dword [rdi + 0x11c] 	       436	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001601	    0x8b8728010000	           mov eax, dword [rdi + 0x128] 	       436	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001607	    0x81e2ffffff00	                       and edx, 0xffffff	       436	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x400160d	      0x25ffffff00	                       and eax, 0xffffff	       436	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001612	            0x39c2	                            cmp edx, eax	       436	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001614	     0xf84d0feffff	                            je 0x40014ea	       436	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x400161a	          0x4863d1	                         movsxd rdx, ecx	       439	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x400161d	    0x41bb26000080	                    mov r11d, 0x80000026	       439	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001623	          0x83c105	                              add ecx, 5	       443	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001626	    0x488d04d50000	                        lea rax, [rdx*8]	       439	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x400162e	        0x4c891cd6	            mov qword [rsi + rdx*8], r11	       439	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001632	      0xba02000080	                     mov edx, 0x80000002	       440	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001637	      0x4889540608	          mov qword [rsi + rax + 8], rdx	       440	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x400163c	     0xfb6971c0100	          movzx edx, byte [rdi + 0x11c] 	       441	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001643	    0x81ca00000080	                      or edx, 0x80000000	       441	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001649	      0x4889540610	       mov qword [rsi + rax + 0x10], rdx	       441	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x400164e	     0xfb6971d0100	          movzx edx, byte [rdi + 0x11d] 	       442	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001655	    0x81ca00000080	                      or edx, 0x80000000	       442	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x400165b	      0x4889540618	       mov qword [rsi + rax + 0x18], rdx	       442	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001660	     0xfb6971e0100	          movzx edx, byte [rdi + 0x11e] 	       443	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001667	      0x4889540620	       mov qword [rsi + rax + 0x20], rdx	       443	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x400166c	      0xe979feffff	                           jmp 0x40014ea	       443	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001671	     0xf1f80000000	                         nop dword [rax]	       443	pen.c	FUNCTION_18	ELSE_3	IF_12	IF_13
0x4001678	    0x8b8f20010000	           mov ecx, dword [rdi + 0x120] 	       458	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x400167e	    0x8b972c010000	           mov edx, dword [rdi + 0x12c] 	       458	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4001684	    0x81e1ffffff00	                       and ecx, 0xffffff	       458	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x400168a	    0x81e2ffffff00	                       and edx, 0xffffff	       458	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4001690	            0x39d1	                            cmp ecx, edx	       458	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4001692	     0xf8483feffff	                            je 0x400151b	       458	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x4001698	          0x4863c8	                         movsxd rcx, eax	       461	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x400169b	    0x41bb30000080	                    mov r11d, 0x80000030	       461	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40016a1	          0x83c005	                              add eax, 5	       465	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40016a4	    0x488d14cd0000	                        lea rdx, [rcx*8]	       461	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40016ac	        0x4c891cce	            mov qword [rsi + rcx*8], r11	       461	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40016b0	      0xb902000080	                     mov ecx, 0x80000002	       462	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40016b5	      0x48894c1608	          mov qword [rsi + rdx + 8], rcx	       462	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40016ba	     0xfb68f200100	          movzx ecx, byte [rdi + 0x120] 	       463	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40016c1	    0x81c900000080	                      or ecx, 0x80000000	       463	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40016c7	      0x48894c1610	       mov qword [rsi + rdx + 0x10], rcx	       463	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40016cc	     0xfb68f210100	          movzx ecx, byte [rdi + 0x121] 	       464	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40016d3	    0x81c900000080	                      or ecx, 0x80000000	       464	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40016d9	      0x48894c1618	       mov qword [rsi + rdx + 0x18], rcx	       464	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40016de	     0xfb68f220100	          movzx ecx, byte [rdi + 0x122] 	       465	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40016e5	      0x48894c1620	       mov qword [rsi + rdx + 0x20], rcx	       465	pen.c	FUNCTION_18	ELSE_6	IF_17	IF_18
0x40016ea	              0xc3	                                     ret	       470	pen.c	FUNCTION_18
0x40016eb	       0xf1f440000	                   nop dword [rax + rax]	       470	pen.c	FUNCTION_18
0x40016f0	          0x4863c1	                         movsxd rax, ecx	       452	pen.c	FUNCTION_18	ELSE_5	IF_16
0x40016f3	    0x41b930000080	                     mov r9d, 0x80000030	       452	pen.c	FUNCTION_18	ELSE_5	IF_16
0x40016f9	    0x488d3cc50000	                        lea rdi, [rax*8]	       452	pen.c	FUNCTION_18	ELSE_5	IF_16
0x4001701	        0x4c890cc6	             mov qword [rsi + rax*8], r9	       452	pen.c	FUNCTION_18	ELSE_5	IF_16
0x4001705	      0xb805000080	                     mov eax, 0x80000005	       453	pen.c	FUNCTION_18	ELSE_5	IF_16
0x400170a	      0x4889443e08	          mov qword [rsi + rdi + 8], rax	       453	pen.c	FUNCTION_18	ELSE_5	IF_16
0x400170f	      0x4889543e10	       mov qword [rsi + rdi + 0x10], rdx	       454	pen.c	FUNCTION_18	ELSE_5	IF_16
0x4001714	          0x8d4103	                      lea eax, [rcx + 3]	       454	pen.c	FUNCTION_18	ELSE_5	IF_16
0x4001717	              0xc3	                                     ret	       454	pen.c	FUNCTION_18	ELSE_5	IF_16
vterm_state_get_palette_color	WHILE,0:SWITCH,0:IF,0:DO,0:ELSE,0:FOR,0:CALL,1:functions,0	62
0x4000aa0	          0x4863f6	                         movsxd rsi, esi	       210	pen.c	FUNCTION_13	CALL_1
0x4000aa3	          0x4889d1	                            mov rcx, rdx	       209	pen.c	FUNCTION_13
0x4000aa6	        0x4883fe0f	                            cmp rsi, 0xf	        49	pen.c	FUNCTION_2	IF_1
0x4000aaa	            0x7714	                            ja 0x4000ac0	        49	pen.c	FUNCTION_2	IF_1
0x4000aac	    0x8b84b7300100	   mov eax, dword [rdi + rsi*4 + 0x130] 	        40	pen.c	FUNCTION_1	IF_1
0x4000ab3	            0x8902	                    mov dword [rdx], eax	        40	pen.c	FUNCTION_1	IF_1
0x4000ab5	              0xc3	                                     ret	        40	pen.c	FUNCTION_1	IF_1
0x4000ab6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        40	pen.c	FUNCTION_1	IF_1
0x4000ac0	        0x4c8d46f0	                    lea r8, [rsi - 0x10]	        53	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000ac4	    0x4981f8d70000	                            cmp r8, 0xd7	        53	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000acb	            0x7623	                           jbe 0x4000af0	        53	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000acd	    0x4881eee80000	                           sub rsi, 0xe8	        64	pen.c	FUNCTION_2	ELSE_2	IF_3
0x4000ad4	        0x4883fe17	                           cmp rsi, 0x17	        64	pen.c	FUNCTION_2	ELSE_2	IF_3
0x4000ad8	            0x7713	                            ja 0x4000aed	        64	pen.c	FUNCTION_2	ELSE_2	IF_3
0x4000ada	    0x8b04b5000000	                  mov eax, dword [rsi*4]	        68	pen.c	FUNCTION_2	ELSE_2	IF_3
0x4000ae1	        0xc64203ff	                mov byte [rdx + 3], 0xff	        71	pen.c	FUNCTION_2	ELSE_2	IF_3
0x4000ae5	          0x884202	                  mov byte [rdx + 2], al	        68	pen.c	FUNCTION_2	ELSE_2	IF_3
0x4000ae8	          0x884201	                  mov byte [rdx + 1], al	        69	pen.c	FUNCTION_2	ELSE_2	IF_3
0x4000aeb	            0x8802	                      mov byte [rdx], al	        70	pen.c	FUNCTION_2	ELSE_2	IF_3
0x4000aed	            0xf3c3	                                     ret	        70	pen.c	FUNCTION_2	ELSE_2	IF_3
0x4000aef	              0x90	                                     nop	        70	pen.c	FUNCTION_2	ELSE_2	IF_3
0x4000af0	    0x49b9abaaaaaa	           movabs r9, 0x2aaaaaaaaaaaaaab	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000afa	          0x4c89c0	                             mov rax, r8	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000afd	          0x4c89c6	                             mov rsi, r8	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000b00	          0x49f7e9	                                 imul r9	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000b03	        0x48c1fe3f	                           sar rsi, 0x3f	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000b07	        0xc64103ff	                mov byte [rcx + 3], 0xff	        60	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000b0b	          0x4889d7	                            mov rdi, rdx	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000b0e	          0x4c89c2	                             mov rdx, r8	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000b11	          0x4829f7	                            sub rdi, rsi	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000b14	        0x488d047f	                  lea rax, [rdi + rdi*2]	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000b18	          0x4801c0	                            add rax, rax	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000b1b	          0x4829c2	                            sub rdx, rax	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000b1e	    0x8b0495000000	                  mov eax, dword [rdx*4]	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000b25	          0x884102	                  mov byte [rcx + 2], al	        57	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000b28	          0x4889f8	                            mov rax, rdi	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000b2b	          0x49f7e9	                                 imul r9	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000b2e	          0x4889f8	                            mov rax, rdi	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000b31	        0x48c1f83f	                           sar rax, 0x3f	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000b35	          0x4829c2	                            sub rdx, rax	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000b38	        0x488d0452	                  lea rax, [rdx + rdx*2]	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000b3c	    0x48ba398ee338	           movabs rdx, 0xe38e38e38e38e39	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000b46	          0x4801c0	                            add rax, rax	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000b49	          0x4829c7	                            sub rdi, rax	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000b4c	    0x8b04bd000000	                  mov eax, dword [rdi*4]	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000b53	          0x884101	                  mov byte [rcx + 1], al	        58	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000b56	          0x4c89c0	                             mov rax, r8	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000b59	          0x48f7ea	                                imul rdx	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000b5c	          0x48d1fa	                              sar rdx, 1	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000b5f	          0x4829f2	                            sub rdx, rsi	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000b62	          0x4889d0	                            mov rax, rdx	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000b65	          0x4889d6	                            mov rsi, rdx	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000b68	          0x49f7e9	                                 imul r9	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000b6b	          0x4889f0	                            mov rax, rsi	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000b6e	        0x48c1f83f	                           sar rax, 0x3f	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000b72	          0x4829c2	                            sub rdx, rax	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000b75	        0x488d0452	                  lea rax, [rdx + rdx*2]	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000b79	          0x4801c0	                            add rax, rax	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000b7c	          0x4829c6	                            sub rsi, rax	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000b7f	    0x8b04b5000000	                  mov eax, dword [rsi*4]	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000b86	            0x8801	                      mov byte [rcx], al	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
0x4000b88	              0xc3	                                     ret	        59	pen.c	FUNCTION_2	ELSE_1	IF_2
vterm_state_set_default_colors	WHILE,0:SWITCH,0:IF,0:DO,0:ELSE,0:FOR,0:CALL,0:functions,0	5
0x4000b90	            0x8b06	                    mov eax, dword [rsi]	       215	pen.c	FUNCTION_14
0x4000b92	    0x898728010000	            mov dword [rdi + 0x128], eax	       215	pen.c	FUNCTION_14
0x4000b98	            0x8b02	                    mov eax, dword [rdx]	       216	pen.c	FUNCTION_14
0x4000b9a	    0x89872c010000	            mov dword [rdi + 0x12c], eax	       216	pen.c	FUNCTION_14
0x4000ba0	              0xc3	                                     ret	       216	pen.c	FUNCTION_14
vterm_state_set_bold_highbright	WHILE,0:SWITCH,0:IF,0:DO,0:ELSE,0:FOR,0:CALL,0:functions,0	2
0x4000bd0	    0x89b778010000	            mov dword [rdi + 0x178], esi	       230	pen.c	FUNCTION_16
0x4000bd6	              0xc3	                                     ret	       230	pen.c	FUNCTION_16
vterm_state_setpen	WHILE,2:SWITCH,1:IF,5:DO,0:ELSE,0:FOR,0:CALL,36:functions,0	445
0x4000be0	            0x4157	                                push r15	       234	pen.c	FUNCTION_17
0x4000be2	            0x4156	                                push r14	       234	pen.c	FUNCTION_17
0x4000be4	            0x4155	                                push r13	       234	pen.c	FUNCTION_17
0x4000be6	            0x4154	                                push r12	       234	pen.c	FUNCTION_17
0x4000be8	              0x55	                                push rbp	       234	pen.c	FUNCTION_17
0x4000be9	              0x53	                                push rbx	       234	pen.c	FUNCTION_17
0x4000bea	        0x4883ec28	                           sub rsp, 0x28	       234	pen.c	FUNCTION_17
0x4000bee	    0x64488b042528	                mov rax, qword fs:[0x28]	       234	pen.c	FUNCTION_17
0x4000bf7	      0x4889442418	             mov qword [rsp + 0x18], rax	       234	pen.c	FUNCTION_17
0x4000bfc	            0x31c0	                            xor eax, eax	       234	pen.c	FUNCTION_17
0x4000bfe	            0x85d2	                           test edx, edx	       240	pen.c	FUNCTION_17	WHILE_1
0x4000c00	     0xf8edc000000	                           jle 0x4000ce2	       240	pen.c	FUNCTION_17	WHILE_1
0x4000c06	    0x488d87200100	                  lea rax, [rdi + 0x120]	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4000c0d	    0x4c8db7740100	                  lea r14, [rdi + 0x174]	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4000c14	          0x4989ff	                            mov r15, rdi	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4000c17	          0x4989f4	                            mov r12, rsi	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4000c1a	            0x89d5	                            mov ebp, edx	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4000c1c	            0x31db	                            xor ebx, ebx	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4000c1e	        0x48890424	                    mov qword [rsp], rax	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4000c22	    0x488d87700100	                  lea rax, [rdi + 0x170]	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4000c29	      0x4889442408	                mov qword [rsp + 8], rax	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4000c2e	            0x6690	                                     nop	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4000c30	          0x4c63eb	                         movsxd r13, ebx	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000c33	        0x4b8b14ec	            mov rdx, qword [r12 + r13*8]	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000c37	    0x4a8d34ed0000	                        lea rsi, [r13*8]	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000c3f	          0x4889d0	                            mov rax, rdx	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000c42	      0x25ffffff7f	                     and eax, 0x7fffffff	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000c47	        0x4883f81b	                           cmp rax, 0x1b	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000c4b	     0xf84e8050000	                            je 0x4001239	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000c51	     0xf8fb1000000	                            jg 0x4000d08	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000c57	        0x4883f809	                              cmp rax, 9	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000c5b	     0xf84fa050000	                            je 0x400125b	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000c61	     0xf8f11010000	                            jg 0x4000d78	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000c67	        0x4883f803	                              cmp rax, 3	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000c6b	     0xf8462040000	                            je 0x40010d3	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000c71	     0xf8e62030000	                           jle 0x4000fd9	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000c77	        0x4883f805	                              cmp rax, 5	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000c7b	     0xf8401040000	                            je 0x4001082	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000c81	     0xf8c1d040000	                            jl 0x40010a4	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000c87	        0x4883f807	                              cmp rax, 7	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000c8b	            0x7533	                           jne 0x4000cc0	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000c8d	        0x498b4708	                mov rax, qword [r15 + 8]	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000c91	    0x41808f240100	             or byte [r15 + 0x124], 0x20	       275	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000c99	    0xc74424100100	               mov dword [rsp + 0x10], 1	       125	pen.c	FUNCTION_5
0x4000ca1	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000ca4	            0x741a	                            je 0x4000cc0	       118	pen.c	FUNCTION_4	IF_2
0x4000ca6	        0x488b4030	            mov rax, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x4000caa	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000cad	            0x7411	                            je 0x4000cc0	       118	pen.c	FUNCTION_4	IF_2
0x4000caf	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x4000cb3	      0x488d742410	                   lea rsi, [rsp + 0x10]	       119	pen.c	FUNCTION_4	IF_2
0x4000cb8	      0xbf05000000	                              mov edi, 5	       119	pen.c	FUNCTION_4	IF_2
0x4000cbd	            0xffd0	                                call rax	       119	pen.c	FUNCTION_4	IF_2
0x4000cbf	              0x90	                                     nop	       119	pen.c	FUNCTION_4	IF_2
0x4000cc0	        0x4b8d04ec	                  lea rax, [r12 + r13*8]	       119	pen.c	FUNCTION_4	IF_2
0x4000cc4	         0xf1f4000	                         nop dword [rax]	       119	pen.c	FUNCTION_4	IF_2
0x4000cc8	          0x488b10	                    mov rdx, qword [rax]	       393	pen.c	FUNCTION_17	WHILE_1	CALL_36
0x4000ccb	          0x83c301	                              add ebx, 1	       393	pen.c	FUNCTION_17	WHILE_1	CALL_36
0x4000cce	        0x4883c008	                              add rax, 8	       393	pen.c	FUNCTION_17	WHILE_1	CALL_36
0x4000cd2	    0xf7c200000080	                    test edx, 0x80000000	       393	pen.c	FUNCTION_17	WHILE_1	CALL_36
0x4000cd8	            0x75ee	                           jne 0x4000cc8	       393	pen.c	FUNCTION_17	WHILE_1	CALL_36
0x4000cda	            0x39dd	                            cmp ebp, ebx	       240	pen.c	FUNCTION_17	WHILE_1
0x4000cdc	     0xf8f4effffff	                            jg 0x4000c30	       240	pen.c	FUNCTION_17	WHILE_1
0x4000ce2	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       395	pen.c	FUNCTION_17
0x4000ce7	    0x644833042528	                xor rax, qword fs:[0x28]	       395	pen.c	FUNCTION_17
0x4000cf0	     0xf85fb060000	                           jne 0x40013f1	       395	pen.c	FUNCTION_17
0x4000cf6	        0x4883c428	                           add rsp, 0x28	       395	pen.c	FUNCTION_17
0x4000cfa	              0x5b	                                 pop rbx	       395	pen.c	FUNCTION_17
0x4000cfb	              0x5d	                                 pop rbp	       395	pen.c	FUNCTION_17
0x4000cfc	            0x415c	                                 pop r12	       395	pen.c	FUNCTION_17
0x4000cfe	            0x415d	                                 pop r13	       395	pen.c	FUNCTION_17
0x4000d00	            0x415e	                                 pop r14	       395	pen.c	FUNCTION_17
0x4000d02	            0x415f	                                 pop r15	       395	pen.c	FUNCTION_17
0x4000d04	              0xc3	                                     ret	       395	pen.c	FUNCTION_17
0x4000d05	           0xf1f00	                         nop dword [rax]	       395	pen.c	FUNCTION_17
0x4000d08	        0x4883f82f	                           cmp rax, 0x2f	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000d0c	     0xf8fd6000000	                            jg 0x4000de8	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000d12	        0x4883f828	                           cmp rax, 0x28	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000d16	     0xf8d02050000	                           jge 0x400121e	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000d1c	        0x4883f825	                           cmp rax, 0x25	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000d20	     0xf8f58010000	                            jg 0x4000e7e	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000d26	        0x4883f81e	                           cmp rax, 0x1e	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000d2a	     0xf8d4d050000	                           jge 0x400127d	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000d30	        0x4883f81d	                           cmp rax, 0x1d	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000d34	            0x758a	                           jne 0x4000cc0	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000d36	        0x498b4708	                mov rax, qword [r15 + 8]	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000d3a	    0x4180a7240100	            and byte [r15 + 0x124], 0xbf	       321	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000d42	    0xc74424100000	               mov dword [rsp + 0x10], 0	       125	pen.c	FUNCTION_5
0x4000d4a	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000d4d	     0xf846dffffff	                            je 0x4000cc0	       118	pen.c	FUNCTION_4	IF_2
0x4000d53	        0x488b4030	            mov rax, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x4000d57	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000d5a	     0xf8460ffffff	                            je 0x4000cc0	       118	pen.c	FUNCTION_4	IF_2
0x4000d60	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x4000d64	      0x488d742410	                   lea rsi, [rsp + 0x10]	       119	pen.c	FUNCTION_4	IF_2
0x4000d69	      0xbf06000000	                              mov edi, 6	       119	pen.c	FUNCTION_4	IF_2
0x4000d6e	            0xffd0	                                call rax	       119	pen.c	FUNCTION_4	IF_2
0x4000d70	      0xe94bffffff	                           jmp 0x4000cc0	       119	pen.c	FUNCTION_4	IF_2
0x4000d75	           0xf1f00	                         nop dword [rax]	       119	pen.c	FUNCTION_4	IF_2
0x4000d78	        0x4883f816	                           cmp rax, 0x16	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000d7c	     0xf84d0030000	                            je 0x4001152	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000d82	     0xf8e78010000	                           jle 0x4000f00	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000d88	        0x4883f818	                           cmp rax, 0x18	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000d8c	     0xf849e030000	                            je 0x4001130	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000d92	     0xf8c7a030000	                            jl 0x4001112	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000d98	        0x4883f819	                           cmp rax, 0x19	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000d9c	     0xf851effffff	                           jne 0x4000cc0	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000da2	        0x498b4708	                mov rax, qword [r15 + 8]	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000da6	    0x4180a7240100	            and byte [r15 + 0x124], 0xef	       311	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000dae	    0xc74424100000	               mov dword [rsp + 0x10], 0	       125	pen.c	FUNCTION_5
0x4000db6	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000db9	     0xf8401ffffff	                            je 0x4000cc0	       118	pen.c	FUNCTION_4	IF_2
0x4000dbf	        0x488b4030	            mov rax, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x4000dc3	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000dc6	     0xf84f4feffff	                            je 0x4000cc0	       118	pen.c	FUNCTION_4	IF_2
0x4000dcc	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x4000dd0	      0x488d742410	                   lea rsi, [rsp + 0x10]	       119	pen.c	FUNCTION_4	IF_2
0x4000dd5	      0xbf04000000	                              mov edi, 4	       119	pen.c	FUNCTION_4	IF_2
0x4000dda	            0xffd0	                                call rax	       119	pen.c	FUNCTION_4	IF_2
0x4000ddc	      0xe9dffeffff	                           jmp 0x4000cc0	       119	pen.c	FUNCTION_4	IF_2
0x4000de1	     0xf1f80000000	                         nop dword [rax]	       119	pen.c	FUNCTION_4	IF_2
0x4000de8	        0x4883f861	                           cmp rax, 0x61	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000dec	     0xf8f6e010000	                            jg 0x4000f60	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000df2	        0x4883f85a	                           cmp rax, 0x5a	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000df6	     0xf8d83050000	                           jge 0x400137f	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000dfc	        0x4883f830	                           cmp rax, 0x30	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000e00	     0xf84f5040000	                            je 0x40012fb	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000e06	        0x4883f831	                           cmp rax, 0x31	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000e0a	     0xf85b0feffff	                           jne 0x4000cc0	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000e10	    0x418b872c0100	           mov eax, dword [r15 + 0x12c] 	       365	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000e17	    0x41c787740100	    mov dword [r15 + 0x174], 0xffffffff 	       364	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000e22	            0x89c1	                            mov ecx, eax	       364	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000e24	    0x418987200100	            mov dword [r15 + 0x120], eax	       365	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000e2b	        0x88442410	               mov byte [rsp + 0x10], al	       139	pen.c	FUNCTION_7
0x4000e2f	        0x66c1e908	                               shr cx, 8	       139	pen.c	FUNCTION_7
0x4000e33	            0x89cf	                            mov edi, ecx	       139	pen.c	FUNCTION_7
0x4000e35	            0x89c1	                            mov ecx, eax	       139	pen.c	FUNCTION_7
0x4000e37	          0xc1e910	                           shr ecx, 0x10	       139	pen.c	FUNCTION_7
0x4000e3a	      0x40887c2411	              mov byte [rsp + 0x11], dil	       139	pen.c	FUNCTION_7
0x4000e3f	            0x89ce	                            mov esi, ecx	       139	pen.c	FUNCTION_7
0x4000e41	            0x89c1	                            mov ecx, eax	       139	pen.c	FUNCTION_7
0x4000e43	        0x498b4708	                mov rax, qword [r15 + 8]	       139	pen.c	FUNCTION_7
0x4000e47	          0xc1e918	                           shr ecx, 0x18	       139	pen.c	FUNCTION_7
0x4000e4a	      0x4088742412	              mov byte [rsp + 0x12], sil	       139	pen.c	FUNCTION_7
0x4000e4f	        0x884c2413	               mov byte [rsp + 0x13], cl	       139	pen.c	FUNCTION_7
0x4000e53	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000e56	     0xf8464feffff	                            je 0x4000cc0	       118	pen.c	FUNCTION_4	IF_2
0x4000e5c	        0x488b4030	            mov rax, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x4000e60	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000e63	     0xf8457feffff	                            je 0x4000cc0	       118	pen.c	FUNCTION_4	IF_2
0x4000e69	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x4000e6d	      0x488d742410	                   lea rsi, [rsp + 0x10]	       119	pen.c	FUNCTION_4	IF_2
0x4000e72	      0xbf09000000	                              mov edi, 9	       119	pen.c	FUNCTION_4	IF_2
0x4000e77	            0xffd0	                                call rax	       119	pen.c	FUNCTION_4	IF_2
0x4000e79	      0xe942feffff	                           jmp 0x4000cc0	       119	pen.c	FUNCTION_4	IF_2
0x4000e7e	        0x4883f826	                           cmp rax, 0x26	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000e82	     0xf8409030000	                            je 0x4001191	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000e88	        0x4883f827	                           cmp rax, 0x27	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000e8c	     0xf852efeffff	                           jne 0x4000cc0	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000e92	    0x418b87280100	           mov eax, dword [r15 + 0x128] 	       344	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000e99	    0x41c787700100	    mov dword [r15 + 0x170], 0xffffffff 	       343	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000ea4	            0x89c1	                            mov ecx, eax	       343	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000ea6	    0x4189871c0100	            mov dword [r15 + 0x11c], eax	       344	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000ead	        0x66c1e908	                               shr cx, 8	       344	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000eb1	            0x89cf	                            mov edi, ecx	       344	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000eb3	            0x89c1	                            mov ecx, eax	       344	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000eb5	        0x88442410	               mov byte [rsp + 0x10], al	       139	pen.c	FUNCTION_7
0x4000eb9	      0x40887c2411	              mov byte [rsp + 0x11], dil	       139	pen.c	FUNCTION_7
0x4000ebe	          0xc1e910	                           shr ecx, 0x10	       139	pen.c	FUNCTION_7
0x4000ec1	            0x89ce	                            mov esi, ecx	       139	pen.c	FUNCTION_7
0x4000ec3	            0x89c1	                            mov ecx, eax	       139	pen.c	FUNCTION_7
0x4000ec5	          0xc1e918	                           shr ecx, 0x18	       139	pen.c	FUNCTION_7
0x4000ec8	      0x4088742412	              mov byte [rsp + 0x12], sil	       139	pen.c	FUNCTION_7
0x4000ecd	        0x884c2413	               mov byte [rsp + 0x13], cl	       139	pen.c	FUNCTION_7
0x4000ed1	        0x498b4708	                mov rax, qword [r15 + 8]	       139	pen.c	FUNCTION_7
0x4000ed5	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000ed8	     0xf84e2fdffff	                            je 0x4000cc0	       118	pen.c	FUNCTION_4	IF_2
0x4000ede	        0x488b4030	            mov rax, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x4000ee2	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000ee5	     0xf84d5fdffff	                            je 0x4000cc0	       118	pen.c	FUNCTION_4	IF_2
0x4000eeb	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x4000eef	      0x488d742410	                   lea rsi, [rsp + 0x10]	       119	pen.c	FUNCTION_4	IF_2
0x4000ef4	      0xbf08000000	                              mov edi, 8	       119	pen.c	FUNCTION_4	IF_2
0x4000ef9	            0xffd0	                                call rax	       119	pen.c	FUNCTION_4	IF_2
0x4000efb	      0xe9c0fdffff	                           jmp 0x4000cc0	       119	pen.c	FUNCTION_4	IF_2
0x4000f00	        0x4883f813	                           cmp rax, 0x13	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000f04	     0xf8e84040000	                           jle 0x400138e	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000f0a	        0x4883f815	                           cmp rax, 0x15	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000f0e	     0xf85acfdffff	                           jne 0x4000cc0	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000f14	    0x410fb6872401	          movzx eax, byte [r15 + 0x124] 	       291	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000f1c	    0xc74424100200	               mov dword [rsp + 0x10], 2	       132	pen.c	FUNCTION_6
0x4000f24	          0x83e0f9	                     and eax, 0xfffffff9	       291	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000f27	          0x83c804	                               or eax, 4	       291	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000f2a	    0x418887240100	              mov byte [r15 + 0x124], al	       291	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000f31	        0x498b4708	                mov rax, qword [r15 + 8]	       291	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000f35	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000f38	     0xf8482fdffff	                            je 0x4000cc0	       118	pen.c	FUNCTION_4	IF_2
0x4000f3e	        0x488b4030	            mov rax, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x4000f42	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000f45	     0xf8475fdffff	                            je 0x4000cc0	       118	pen.c	FUNCTION_4	IF_2
0x4000f4b	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x4000f4f	      0x488d742410	                   lea rsi, [rsp + 0x10]	       119	pen.c	FUNCTION_4	IF_2
0x4000f54	      0xbf02000000	                              mov edi, 2	       119	pen.c	FUNCTION_4	IF_2
0x4000f59	            0xffd0	                                call rax	       119	pen.c	FUNCTION_4	IF_2
0x4000f5b	      0xe960fdffff	                           jmp 0x4000cc0	       119	pen.c	FUNCTION_4	IF_2
0x4000f60	        0x4883f864	                           cmp rax, 0x64	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000f64	     0xf8c56fdffff	                            jl 0x4000cc0	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000f6a	        0x4883f86b	                           cmp rax, 0x6b	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000f6e	     0xf8ff5000000	                            jg 0x4001069	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000f74	          0x83e85c	                           sub eax, 0x5c	       378	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_33
0x4000f77	    0x418987740100	            mov dword [r15 + 0x174], eax	       379	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000f7e	            0x4898	                                    cdqe	        39	pen.c	FUNCTION_1	IF_1
0x4000f80	        0x4883f80f	                            cmp rax, 0xf	        39	pen.c	FUNCTION_1	IF_1
0x4000f84	            0x770f	                            ja 0x4000f95	        39	pen.c	FUNCTION_1	IF_1
0x4000f86	    0x418b84873001	   mov eax, dword [r15 + rax*4 + 0x130] 	        40	pen.c	FUNCTION_1	IF_1
0x4000f8e	    0x418987200100	            mov dword [r15 + 0x120], eax	        40	pen.c	FUNCTION_1	IF_1
0x4000f95	    0x410fb6872301	          movzx eax, byte [r15 + 0x123] 	        40	pen.c	FUNCTION_1	IF_1
0x4000f9d	    0x410fb6b72101	          movzx esi, byte [r15 + 0x121] 	        40	pen.c	FUNCTION_1	IF_1
0x4000fa5	    0x410fb6972201	          movzx edx, byte [r15 + 0x122] 	        40	pen.c	FUNCTION_1	IF_1
0x4000fad	    0x410fb6bf2001	          movzx edi, byte [r15 + 0x120] 	       139	pen.c	FUNCTION_7
0x4000fb5	      0x4088742411	              mov byte [rsp + 0x11], sil	       139	pen.c	FUNCTION_7
0x4000fba	        0x88442413	               mov byte [rsp + 0x13], al	       139	pen.c	FUNCTION_7
0x4000fbe	      0x40887c2410	              mov byte [rsp + 0x10], dil	       139	pen.c	FUNCTION_7
0x4000fc3	        0x88542412	               mov byte [rsp + 0x12], dl	       139	pen.c	FUNCTION_7
0x4000fc7	        0x498b4708	                mov rax, qword [r15 + 8]	       139	pen.c	FUNCTION_7
0x4000fcb	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4000fce	     0xf8588feffff	                           jne 0x4000e5c	       118	pen.c	FUNCTION_4	IF_2
0x4000fd4	      0xe9e7fcffff	                           jmp 0x4000cc0	       118	pen.c	FUNCTION_4	IF_2
0x4000fd9	          0x4885c0	                           test rax, rax	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000fdc	     0xf8493000000	                            je 0x4001075	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000fe2	        0x4883f801	                              cmp rax, 1	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000fe6	     0xf85d4fcffff	                           jne 0x4000cc0	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000fec	        0x498b4708	                mov rax, qword [r15 + 8]	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4000ff0	    0x41808f240100	                or byte [r15 + 0x124], 1	       253	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4000ff8	    0xc74424100100	               mov dword [rsp + 0x10], 1	       125	pen.c	FUNCTION_5
0x4001000	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4001003	            0x7419	                            je 0x400101e	       118	pen.c	FUNCTION_4	IF_2
0x4001005	        0x488b4030	            mov rax, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x4001009	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x400100c	            0x7410	                            je 0x400101e	       118	pen.c	FUNCTION_4	IF_2
0x400100e	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x4001012	      0x488d742410	                   lea rsi, [rsp + 0x10]	       119	pen.c	FUNCTION_4	IF_2
0x4001017	      0xbf01000000	                              mov edi, 1	       119	pen.c	FUNCTION_4	IF_2
0x400101c	            0xffd0	                                call rax	       119	pen.c	FUNCTION_4	IF_2
0x400101e	    0x418b87700100	           mov eax, dword [r15 + 0x170] 	       255	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0x4001025	          0x83f807	                              cmp eax, 7	       255	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0x4001028	     0xf8792fcffff	                            ja 0x4000cc0	       255	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0x400102e	    0x418bb7780100	           mov esi, dword [r15 + 0x178] 	       255	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0x4001035	            0x85f6	                           test esi, esi	       255	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0x4001037	     0xf8483fcffff	                            je 0x4000cc0	       255	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_1
0x400103d	    0x410fb6972401	          movzx edx, byte [r15 + 0x124] 	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0x4001045	          0xc1e203	                              shl edx, 3	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0x4001048	          0x83e208	                              and edx, 8	       256	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_4
0x400104b	             0x1d0	                            add eax, edx	        40	pen.c	FUNCTION_1	IF_1
0x400104d	            0x4898	                                    cdqe	        40	pen.c	FUNCTION_1	IF_1
0x400104f	    0x418b84873001	   mov eax, dword [r15 + rax*4 + 0x130] 	        40	pen.c	FUNCTION_1	IF_1
0x4001057	            0x89c7	                            mov edi, eax	        40	pen.c	FUNCTION_1	IF_1
0x4001059	    0x4189871c0100	            mov dword [r15 + 0x11c], eax	        40	pen.c	FUNCTION_1	IF_1
0x4001060	        0x66c1ef08	                               shr di, 8	        40	pen.c	FUNCTION_1	IF_1
0x4001064	      0xe94afeffff	                           jmp 0x4000eb3	        40	pen.c	FUNCTION_1	IF_1
0x4001069	    0x483dffffff3f	                     cmp rax, 0x3fffffff	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x400106f	     0xf854bfcffff	                           jne 0x4000cc0	       246	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_1
0x4001075	          0x4c89ff	                            mov rdi, r15	       249	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_2
0x4001078	      0xe800000000	                          call 0x400107d	       249	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_2
0x400107d	      0xe93efcffff	                           jmp 0x4000cc0	       250	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001082	        0x498b4708	                mov rax, qword [r15 + 8]	       250	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001086	    0x41808f240100	             or byte [r15 + 0x124], 0x10	       270	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x400108e	    0xc74424100100	               mov dword [rsp + 0x10], 1	       125	pen.c	FUNCTION_5
0x4001096	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4001099	     0xf8520fdffff	                           jne 0x4000dbf	       118	pen.c	FUNCTION_4	IF_2
0x400109f	      0xe91cfcffff	                           jmp 0x4000cc0	       118	pen.c	FUNCTION_4	IF_2
0x40010a4	    0x410fb6872401	          movzx eax, byte [r15 + 0x124] 	       265	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40010ac	    0xc74424100100	               mov dword [rsp + 0x10], 1	       132	pen.c	FUNCTION_6
0x40010b4	          0x83e0f9	                     and eax, 0xfffffff9	       265	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40010b7	          0x83c802	                               or eax, 2	       265	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40010ba	    0x418887240100	              mov byte [r15 + 0x124], al	       265	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40010c1	        0x498b4708	                mov rax, qword [r15 + 8]	       265	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40010c5	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x40010c8	     0xf8570feffff	                           jne 0x4000f3e	       118	pen.c	FUNCTION_4	IF_2
0x40010ce	      0xe9edfbffff	                           jmp 0x4000cc0	       118	pen.c	FUNCTION_4	IF_2
0x40010d3	        0x498b4708	                mov rax, qword [r15 + 8]	       118	pen.c	FUNCTION_4	IF_2
0x40010d7	    0x41808f240100	                or byte [r15 + 0x124], 8	       260	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40010df	    0xc74424100100	               mov dword [rsp + 0x10], 1	       125	pen.c	FUNCTION_5
0x40010e7	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x40010ea	     0xf84d0fbffff	                            je 0x4000cc0	       118	pen.c	FUNCTION_4	IF_2
0x40010f0	        0x488b4030	            mov rax, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x40010f4	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x40010f7	     0xf84c3fbffff	                            je 0x4000cc0	       118	pen.c	FUNCTION_4	IF_2
0x40010fd	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x4001101	      0x488d742410	                   lea rsi, [rsp + 0x10]	       119	pen.c	FUNCTION_4	IF_2
0x4001106	      0xbf03000000	                              mov edi, 3	       119	pen.c	FUNCTION_4	IF_2
0x400110b	            0xffd0	                                call rax	       119	pen.c	FUNCTION_4	IF_2
0x400110d	      0xe9aefbffff	                           jmp 0x4000cc0	       119	pen.c	FUNCTION_4	IF_2
0x4001112	        0x498b4708	                mov rax, qword [r15 + 8]	       119	pen.c	FUNCTION_4	IF_2
0x4001116	    0x4180a7240100	            and byte [r15 + 0x124], 0xf7	       301	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x400111e	    0xc74424100000	               mov dword [rsp + 0x10], 0	       125	pen.c	FUNCTION_5
0x4001126	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4001129	            0x75c5	                           jne 0x40010f0	       118	pen.c	FUNCTION_4	IF_2
0x400112b	      0xe990fbffff	                           jmp 0x4000cc0	       118	pen.c	FUNCTION_4	IF_2
0x4001130	        0x498b4708	                mov rax, qword [r15 + 8]	       118	pen.c	FUNCTION_4	IF_2
0x4001134	    0x4180a7240100	            and byte [r15 + 0x124], 0xf9	       306	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x400113c	    0xc74424100000	               mov dword [rsp + 0x10], 0	       132	pen.c	FUNCTION_6
0x4001144	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4001147	     0xf85f1fdffff	                           jne 0x4000f3e	       118	pen.c	FUNCTION_4	IF_2
0x400114d	      0xe96efbffff	                           jmp 0x4000cc0	       118	pen.c	FUNCTION_4	IF_2
0x4001152	        0x498b4708	                mov rax, qword [r15 + 8]	       118	pen.c	FUNCTION_4	IF_2
0x4001156	    0x4180a7240100	            and byte [r15 + 0x124], 0xfe	       296	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x400115e	    0xc74424100000	               mov dword [rsp + 0x10], 0	       125	pen.c	FUNCTION_5
0x4001166	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4001169	     0xf8451fbffff	                            je 0x4000cc0	       118	pen.c	FUNCTION_4	IF_2
0x400116f	        0x488b4030	            mov rax, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x4001173	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4001176	     0xf8444fbffff	                            je 0x4000cc0	       118	pen.c	FUNCTION_4	IF_2
0x400117c	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x4001180	      0x488d742410	                   lea rsi, [rsp + 0x10]	       119	pen.c	FUNCTION_4	IF_2
0x4001185	      0xbf01000000	                              mov edi, 1	       119	pen.c	FUNCTION_4	IF_2
0x400118a	            0xffd0	                                call rax	       119	pen.c	FUNCTION_4	IF_2
0x400118c	      0xe92ffbffff	                           jmp 0x4000cc0	       119	pen.c	FUNCTION_4	IF_2
0x4001191	      0x498d543410	            lea rdx, [r12 + rsi + 0x10] 	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x4001196	      0x498b743408	         mov rsi, qword [r12 + rsi + 8] 	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x400119b	            0x89e9	                            mov ecx, ebp	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x400119d	      0x4c8b4c2408	                 mov r9, qword [rsp + 8]	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x40011a2	            0x29d9	                            sub ecx, ebx	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x40011a4	    0x4d8d871c0100	                   lea r8, [r15 + 0x11c]	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x40011ab	          0x83e902	                              sub ecx, 2	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x40011ae	    0x41c787700100	    mov dword [r15 + 0x170], 0xffffffff 	       335	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x40011b9	          0x4c89ff	                            mov rdi, r15	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x40011bc	    0x81e6ffffff7f	                     and esi, 0x7fffffff	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x40011c2	      0xe879eeffff	                  call sym.lookup_colour	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x40011c7	        0x8d5c0301	                lea ebx, [rbx + rax + 1]	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x40011cb	    0x410fb6871f01	          movzx eax, byte [r15 + 0x11f] 	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x40011d3	    0x410fb68f1d01	          movzx ecx, byte [r15 + 0x11d] 	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x40011db	    0x410fb6971e01	          movzx edx, byte [r15 + 0x11e] 	       338	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_22
0x40011e3	    0x410fb6b71c01	          movzx esi, byte [r15 + 0x11c] 	       139	pen.c	FUNCTION_7
0x40011eb	        0x88442413	               mov byte [rsp + 0x13], al	       139	pen.c	FUNCTION_7
0x40011ef	        0x498b4708	                mov rax, qword [r15 + 8]	       139	pen.c	FUNCTION_7
0x40011f3	      0x4088742410	              mov byte [rsp + 0x10], sil	       139	pen.c	FUNCTION_7
0x40011f8	        0x884c2411	               mov byte [rsp + 0x11], cl	       139	pen.c	FUNCTION_7
0x40011fc	        0x88542412	               mov byte [rsp + 0x12], dl	       139	pen.c	FUNCTION_7
0x4001200	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4001203	     0xf84e0010000	                            je 0x40013e9	       118	pen.c	FUNCTION_4	IF_2
0x4001209	        0x488b4030	            mov rax, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x400120d	          0x4c63eb	                         movsxd r13, ebx	       118	pen.c	FUNCTION_4	IF_2
0x4001210	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4001213	     0xf85d2fcffff	                           jne 0x4000eeb	       118	pen.c	FUNCTION_4	IF_2
0x4001219	      0xe9a2faffff	                           jmp 0x4000cc0	       118	pen.c	FUNCTION_4	IF_2
0x400121e	          0x83e828	                           sub eax, 0x28	       350	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_25
0x4001221	    0x418987740100	            mov dword [r15 + 0x174], eax	       351	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001228	            0x4898	                                    cdqe	        39	pen.c	FUNCTION_1	IF_1
0x400122a	        0x4883f80f	                            cmp rax, 0xf	        39	pen.c	FUNCTION_1	IF_1
0x400122e	     0xf8761fdffff	                            ja 0x4000f95	        39	pen.c	FUNCTION_1	IF_1
0x4001234	      0xe94dfdffff	                           jmp 0x4000f86	        39	pen.c	FUNCTION_1	IF_1
0x4001239	        0x498b4708	                mov rax, qword [r15 + 8]	        39	pen.c	FUNCTION_1	IF_1
0x400123d	    0x4180a7240100	            and byte [r15 + 0x124], 0xdf	       316	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001245	    0xc74424100000	               mov dword [rsp + 0x10], 0	       125	pen.c	FUNCTION_5
0x400124d	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4001250	     0xf8550faffff	                           jne 0x4000ca6	       118	pen.c	FUNCTION_4	IF_2
0x4001256	      0xe965faffff	                           jmp 0x4000cc0	       118	pen.c	FUNCTION_4	IF_2
0x400125b	        0x498b4708	                mov rax, qword [r15 + 8]	       118	pen.c	FUNCTION_4	IF_2
0x400125f	    0x41808f240100	            or byte [r15 + 0x124], 0x40 	       280	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001267	    0xc74424100100	               mov dword [rsp + 0x10], 1	       125	pen.c	FUNCTION_5
0x400126f	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4001272	     0xf85dbfaffff	                           jne 0x4000d53	       118	pen.c	FUNCTION_4	IF_2
0x4001278	      0xe943faffff	                           jmp 0x4000cc0	       118	pen.c	FUNCTION_4	IF_2
0x400127d	          0x83e81e	                           sub eax, 0x1e	       327	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_19
0x4001280	    0x41f687240100	              test byte [r15 + 0x124], 1	       329	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_2
0x4001288	    0x418987700100	            mov dword [r15 + 0x170], eax	       328	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x400128f	            0x740f	                            je 0x40012a0	       329	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_2
0x4001291	    0x418b8f780100	           mov ecx, dword [r15 + 0x178] 	       330	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_2
0x4001298	          0x8d5008	                      lea edx, [rax + 8]	       330	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_2
0x400129b	            0x85c9	                           test ecx, ecx	       330	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_2
0x400129d	           0xf45c2	                         cmovne eax, edx	       330	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	IF_2
0x40012a0	            0x4898	                                    cdqe	        39	pen.c	FUNCTION_1	IF_1
0x40012a2	        0x4883f80f	                            cmp rax, 0xf	        39	pen.c	FUNCTION_1	IF_1
0x40012a6	            0x770f	                            ja 0x40012b7	        39	pen.c	FUNCTION_1	IF_1
0x40012a8	    0x418b84873001	   mov eax, dword [r15 + rax*4 + 0x130] 	        40	pen.c	FUNCTION_1	IF_1
0x40012b0	    0x4189871c0100	            mov dword [r15 + 0x11c], eax	        40	pen.c	FUNCTION_1	IF_1
0x40012b7	    0x410fb6871f01	          movzx eax, byte [r15 + 0x11f] 	        40	pen.c	FUNCTION_1	IF_1
0x40012bf	    0x410fb6b71d01	          movzx esi, byte [r15 + 0x11d] 	        40	pen.c	FUNCTION_1	IF_1
0x40012c7	    0x410fb6971e01	          movzx edx, byte [r15 + 0x11e] 	        40	pen.c	FUNCTION_1	IF_1
0x40012cf	    0x410fb6bf1c01	          movzx edi, byte [r15 + 0x11c] 	       139	pen.c	FUNCTION_7
0x40012d7	      0x4088742411	              mov byte [rsp + 0x11], sil	       139	pen.c	FUNCTION_7
0x40012dc	        0x88442413	               mov byte [rsp + 0x13], al	       139	pen.c	FUNCTION_7
0x40012e0	      0x40887c2410	              mov byte [rsp + 0x10], dil	       139	pen.c	FUNCTION_7
0x40012e5	        0x88542412	               mov byte [rsp + 0x12], dl	       139	pen.c	FUNCTION_7
0x40012e9	        0x498b4708	                mov rax, qword [r15 + 8]	       139	pen.c	FUNCTION_7
0x40012ed	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x40012f0	     0xf85e8fbffff	                           jne 0x4000ede	       118	pen.c	FUNCTION_4	IF_2
0x40012f6	      0xe9c5f9ffff	                           jmp 0x4000cc0	       118	pen.c	FUNCTION_4	IF_2
0x40012fb	      0x498d543410	            lea rdx, [r12 + rsi + 0x10] 	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4001300	      0x498b743408	         mov rsi, qword [r12 + rsi + 8] 	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4001305	            0x89e9	                            mov ecx, ebp	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4001307	        0x4c8b0424	                     mov r8, qword [rsp]	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x400130b	            0x29d9	                            sub ecx, ebx	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x400130d	    0x41c787740100	    mov dword [r15 + 0x174], 0xffffffff 	       356	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001318	          0x83e902	                              sub ecx, 2	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x400131b	          0x4d89f1	                             mov r9, r14	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x400131e	          0x4c89ff	                            mov rdi, r15	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4001321	    0x81e6ffffff7f	                     and esi, 0x7fffffff	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4001327	      0xe814edffff	                  call sym.lookup_colour	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x400132c	        0x8d5c0301	                lea ebx, [rbx + rax + 1]	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4001330	    0x410fb6872301	          movzx eax, byte [r15 + 0x123] 	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4001338	    0x410fb68f2101	          movzx ecx, byte [r15 + 0x121] 	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4001340	    0x410fb6972201	          movzx edx, byte [r15 + 0x122] 	       359	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_28
0x4001348	    0x410fb6b72001	          movzx esi, byte [r15 + 0x120] 	       139	pen.c	FUNCTION_7
0x4001350	        0x88442413	               mov byte [rsp + 0x13], al	       139	pen.c	FUNCTION_7
0x4001354	        0x498b4708	                mov rax, qword [r15 + 8]	       139	pen.c	FUNCTION_7
0x4001358	      0x4088742410	              mov byte [rsp + 0x10], sil	       139	pen.c	FUNCTION_7
0x400135d	        0x884c2411	               mov byte [rsp + 0x11], cl	       139	pen.c	FUNCTION_7
0x4001361	        0x88542412	               mov byte [rsp + 0x12], dl	       139	pen.c	FUNCTION_7
0x4001365	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4001368	            0x747f	                            je 0x40013e9	       118	pen.c	FUNCTION_4	IF_2
0x400136a	        0x488b4030	            mov rax, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x400136e	          0x4c63eb	                         movsxd r13, ebx	       118	pen.c	FUNCTION_4	IF_2
0x4001371	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x4001374	     0xf85effaffff	                           jne 0x4000e69	       118	pen.c	FUNCTION_4	IF_2
0x400137a	      0xe941f9ffff	                           jmp 0x4000cc0	       118	pen.c	FUNCTION_4	IF_2
0x400137f	          0x83e852	                           sub eax, 0x52	       371	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_31
0x4001382	    0x418987700100	            mov dword [r15 + 0x170], eax	       372	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x4001389	      0xe912ffffff	                           jmp 0x40012a0	       372	pen.c	FUNCTION_17	WHILE_1	SWITCH_1
0x400138e	    0x410fb7b72401	          movzx esi, word [r15 + 0x124] 	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x4001396	          0x83ea0a	                            sub edx, 0xa	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x4001399	          0x83e20f	                            and edx, 0xf	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x400139c	            0x89d0	                            mov eax, edx	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x400139e	           0xfb6d2	                           movzx edx, dl	       132	pen.c	FUNCTION_6
0x40013a1	          0x83e00f	                            and eax, 0xf	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x40013a4	          0xc1e007	                              shl eax, 7	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x40013a7	      0x6681e67ff8	                          and si, 0xf87f	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x40013ac	             0x9f0	                             or eax, esi	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x40013ae	    0x664189872401	              mov word [r15 + 0x124], ax	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x40013b6	        0x498b4708	                mov rax, qword [r15 + 8]	       286	pen.c	FUNCTION_17	WHILE_1	SWITCH_1	CALL_10
0x40013ba	        0x89542410	             mov dword [rsp + 0x10], edx	       132	pen.c	FUNCTION_6
0x40013be	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x40013c1	     0xf84f9f8ffff	                            je 0x4000cc0	       118	pen.c	FUNCTION_4	IF_2
0x40013c7	        0x488b4030	            mov rax, qword [rax + 0x30] 	       118	pen.c	FUNCTION_4	IF_2
0x40013cb	          0x4885c0	                           test rax, rax	       118	pen.c	FUNCTION_4	IF_2
0x40013ce	     0xf84ecf8ffff	                            je 0x4000cc0	       118	pen.c	FUNCTION_4	IF_2
0x40013d4	        0x498b5710	            mov rdx, qword [r15 + 0x10] 	       119	pen.c	FUNCTION_4	IF_2
0x40013d8	      0x488d742410	                   lea rsi, [rsp + 0x10]	       119	pen.c	FUNCTION_4	IF_2
0x40013dd	      0xbf07000000	                              mov edi, 7	       119	pen.c	FUNCTION_4	IF_2
0x40013e2	            0xffd0	                                call rax	       119	pen.c	FUNCTION_4	IF_2
0x40013e4	      0xe9d7f8ffff	                           jmp 0x4000cc0	       119	pen.c	FUNCTION_4	IF_2
0x40013e9	          0x4c63eb	                         movsxd r13, ebx	       119	pen.c	FUNCTION_4	IF_2
0x40013ec	      0xe9cff8ffff	                           jmp 0x4000cc0	       119	pen.c	FUNCTION_4	IF_2
0x40013f1	      0xe800000000	                          call 0x40013f6	       395	pen.c	FUNCTION_17
