vterm_mouse_button	CALL,2:FOR,0:SWITCH,0:functions,0:IF,6:DO,0:ELSE,2:WHILE,0	189
0x4000260	            0x4155	                                push r13	        74	mouse.c	FUNCTION_3
0x4000262	            0x4154	                                push r12	        74	mouse.c	FUNCTION_3
0x4000264	            0x89c8	                            mov eax, ecx	        74	mouse.c	FUNCTION_3
0x4000266	              0x55	                                push rbp	        74	mouse.c	FUNCTION_3
0x4000267	              0x53	                                push rbx	        74	mouse.c	FUNCTION_3
0x4000268	          0x8d4eff	                      lea ecx, [rsi - 1]	        79	mouse.c	FUNCTION_3	IF_1
0x400026b	    0x41b801000000	                              mov r8d, 1	        79	mouse.c	FUNCTION_3	IF_1
0x4000271	        0x4883ec28	                           sub rsp, 0x28	        74	mouse.c	FUNCTION_3
0x4000275	    0x64488b1c2528	                mov rbx, qword fs:[0x28]	        74	mouse.c	FUNCTION_3
0x400027e	      0x48895c2418	             mov qword [rsp + 0x18], rbx	        74	mouse.c	FUNCTION_3
0x4000283	            0x31db	                            xor ebx, ebx	        74	mouse.c	FUNCTION_3
0x4000285	          0x83f902	                              cmp ecx, 2	        79	mouse.c	FUNCTION_3	IF_1
0x4000288	    0x488b9f180100	           mov rbx, qword [rdi + 0x118] 	        75	mouse.c	FUNCTION_3
0x400028f	            0x7720	                            ja 0x40002b1	        79	mouse.c	FUNCTION_3	IF_1
0x4000291	            0x85d2	                           test edx, edx	        80	mouse.c	FUNCTION_3	IF_1	IF_2
0x4000293	        0x448b4368	            mov r8d, dword [rbx + 0x68] 	        77	mouse.c	FUNCTION_3
0x4000297	     0xf8493000000	                            je 0x4000330	        80	mouse.c	FUNCTION_3	IF_1	IF_2
0x400029d	      0xbf01000000	                              mov edi, 1	        81	mouse.c	FUNCTION_3	IF_1	IF_2
0x40002a2	            0xd3e7	                             shl edi, cl	        81	mouse.c	FUNCTION_3	IF_1	IF_2
0x40002a4	          0x4409c7	                             or edi, r8d	        81	mouse.c	FUNCTION_3	IF_1	IF_2
0x40002a7	          0x4139f8	                            cmp r8d, edi	        81	mouse.c	FUNCTION_3	IF_1	IF_2
0x40002aa	          0x897b68	             mov dword [rbx + 0x68], edi	        81	mouse.c	FUNCTION_3	IF_1	IF_2
0x40002ad	        0x410f94c0	                                sete r8b	        81	mouse.c	FUNCTION_3	IF_1	IF_2
0x40002b1	          0x83fe03	                              cmp esi, 3	        87	mouse.c	FUNCTION_3	IF_3
0x40002b4	            0x7f2a	                            jg 0x40002e0	        87	mouse.c	FUNCTION_3	IF_3
0x40002b6	          0x4584c0	                           test r8b, r8b	        87	mouse.c	FUNCTION_3	IF_3
0x40002b9	            0x7425	                            je 0x40002e0	        87	mouse.c	FUNCTION_3	IF_3
0x40002bb	      0x488b442418	            mov rax, qword [rsp + 0x18] 	        98	mouse.c	FUNCTION_3
0x40002c0	    0x644833042528	                xor rax, qword fs:[0x28]	        98	mouse.c	FUNCTION_3
0x40002c9	     0xf8540020000	                           jne 0x400050f	        98	mouse.c	FUNCTION_3
0x40002cf	        0x4883c428	                           add rsp, 0x28	        98	mouse.c	FUNCTION_3
0x40002d3	              0x5b	                                 pop rbx	        98	mouse.c	FUNCTION_3
0x40002d4	              0x5d	                                 pop rbp	        98	mouse.c	FUNCTION_3
0x40002d5	            0x415c	                                 pop r12	        98	mouse.c	FUNCTION_3
0x40002d7	            0x415d	                                 pop r13	        98	mouse.c	FUNCTION_3
0x40002d9	              0xc3	                                     ret	        98	mouse.c	FUNCTION_3
0x40002da	    0x660f1f440000	                    nop word [rax + rax]	        98	mouse.c	FUNCTION_3
0x40002e0	        0xf6436c01	               test byte [rbx + 0x6c], 1	        89	mouse.c	FUNCTION_3	IF_4
0x40002e4	            0x74d5	                            je 0x40002bb	        89	mouse.c	FUNCTION_3	IF_4
0x40002e6	          0x83fe03	                              cmp esi, 3	        92	mouse.c	FUNCTION_3	IF_5
0x40002e9	            0x7e65	                           jle 0x4000350	        92	mouse.c	FUNCTION_3	IF_5
0x40002eb	          0x83fe05	                              cmp esi, 5	        95	mouse.c	FUNCTION_3	ELSE_2	IF_6
0x40002ee	            0x7fcb	                            jg 0x40002bb	        95	mouse.c	FUNCTION_3	ELSE_2	IF_6
0x40002f0	    0x8d0c85000000	                        lea ecx, [rax*4]	         7	mouse.c	FUNCTION_1
0x40002f7	          0x8b4370	            mov eax, dword [rbx + 0x70] 	         9	mouse.c	FUNCTION_1	SWITCH_1
0x40002fa	          0x83c63c	                           add esi, 0x3c	        96	mouse.c	FUNCTION_3	ELSE_2	IF_6	CALL_2
0x40002fd	        0x448b6364	           mov r12d, dword [rbx + 0x64] 	        96	mouse.c	FUNCTION_3	ELSE_2	IF_6	CALL_2
0x4000301	          0x8b6b60	            mov ebp, dword [rbx + 0x60] 	        96	mouse.c	FUNCTION_3	ELSE_2	IF_6	CALL_2
0x4000304	          0x83f801	                              cmp eax, 1	         9	mouse.c	FUNCTION_1	SWITCH_1
0x4000307	     0xf8443010000	                            je 0x4000450	         9	mouse.c	FUNCTION_1	SWITCH_1
0x400030d	     0xf82ed000000	                            jb 0x4000400	         9	mouse.c	FUNCTION_1	SWITCH_1
0x4000313	          0x83f802	                              cmp eax, 2	         9	mouse.c	FUNCTION_1	SWITCH_1
0x4000316	     0xf84d4000000	                            je 0x40003f0	         9	mouse.c	FUNCTION_1	SWITCH_1
0x400031c	          0x83f803	                              cmp eax, 3	         9	mouse.c	FUNCTION_1	SWITCH_1
0x400031f	            0x759a	                           jne 0x40002bb	         9	mouse.c	FUNCTION_1	SWITCH_1
0x4000321	            0x85d2	                           test edx, edx	        46	mouse.c	FUNCTION_1	SWITCH_1	IF_5
0x4000323	           0xf44f0	                          cmove esi, eax	        46	mouse.c	FUNCTION_1	SWITCH_1	IF_5
0x4000326	             0x9f1	                             or ecx, esi	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x4000328	            0xeb64	                           jmp 0x400038e	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x400032a	    0x660f1f440000	                    nop word [rax + rax]	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x4000330	      0xbffeffffff	                     mov edi, 0xfffffffe	        83	mouse.c	FUNCTION_3	IF_1	ELSE_1
0x4000335	            0xd3c7	                             rol edi, cl	        83	mouse.c	FUNCTION_3	IF_1	ELSE_1
0x4000337	          0x4421c7	                            and edi, r8d	        83	mouse.c	FUNCTION_3	IF_1	ELSE_1
0x400033a	          0x4139f8	                            cmp r8d, edi	        83	mouse.c	FUNCTION_3	IF_1	ELSE_1
0x400033d	          0x897b68	             mov dword [rbx + 0x68], edi	        83	mouse.c	FUNCTION_3	IF_1	ELSE_1
0x4000340	        0x410f94c0	                                sete r8b	        83	mouse.c	FUNCTION_3	IF_1	ELSE_1
0x4000344	      0xe968ffffff	                           jmp 0x40002b1	        83	mouse.c	FUNCTION_3	IF_1	ELSE_1
0x4000349	     0xf1f80000000	                         nop dword [rax]	        83	mouse.c	FUNCTION_3	IF_1	ELSE_1
0x4000350	        0x448b4370	            mov r8d, dword [rbx + 0x70] 	         9	mouse.c	FUNCTION_1	SWITCH_1
0x4000354	        0x448b6364	           mov r12d, dword [rbx + 0x64] 	        93	mouse.c	FUNCTION_3	IF_5	CALL_1
0x4000358	    0x8d3c85000000	                        lea edi, [rax*4]	         7	mouse.c	FUNCTION_1
0x400035f	          0x8b6b60	            mov ebp, dword [rbx + 0x60] 	        93	mouse.c	FUNCTION_3	IF_5	CALL_1
0x4000362	        0x4183f801	                              cmp r8d, 1	         9	mouse.c	FUNCTION_1	SWITCH_1
0x4000366	     0xf8454010000	                            je 0x40004c0	         9	mouse.c	FUNCTION_1	SWITCH_1
0x400036c	     0xf826e010000	                            jb 0x40004e0	         9	mouse.c	FUNCTION_1	SWITCH_1
0x4000372	        0x4183f802	                              cmp r8d, 2	         9	mouse.c	FUNCTION_1	SWITCH_1
0x4000376	            0x7438	                            je 0x40003b0	         9	mouse.c	FUNCTION_1	SWITCH_1
0x4000378	        0x4183f803	                              cmp r8d, 3	         9	mouse.c	FUNCTION_1	SWITCH_1
0x400037c	     0xf8539ffffff	                           jne 0x40002bb	         9	mouse.c	FUNCTION_1	SWITCH_1
0x4000382	            0x85d2	                           test edx, edx	        46	mouse.c	FUNCTION_1	SWITCH_1	IF_5
0x4000384	          0x4489c0	                            mov eax, r8d	        46	mouse.c	FUNCTION_1	SWITCH_1	IF_5
0x4000387	           0xf45c1	                         cmovne eax, ecx	        46	mouse.c	FUNCTION_1	SWITCH_1	IF_5
0x400038a	            0x89f9	                            mov ecx, edi	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x400038c	             0x9c1	                             or ecx, eax	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x400038e	          0x488b3b	                    mov rdi, qword [rbx]	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x4000391	      0x458d4c2401	                      lea r9d, [r12 + 1]	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x4000396	        0x448d4501	                      lea r8d, [rbp + 1]	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x400039a	      0xba00000000	                              mov edx, 0	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x400039f	      0xbe9b000000	                           mov esi, 0x9b	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x40003a4	            0x31c0	                            xor eax, eax	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x40003a6	      0xe800000000	                          call 0x40003ab	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x40003ab	      0xe90bffffff	                           jmp 0x40002bb	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x40003b0	          0x83fa01	                              cmp edx, 1	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40003b3	            0x19c0	                            sbb eax, eax	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40003b5	             0x9f9	                             or ecx, edi	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40003b7	          0x83e020	                           and eax, 0x20	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40003ba	          0x83c04d	                           add eax, 0x4d	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40003bd	        0x4883ec08	                              sub rsp, 8	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40003c1	          0x488b3b	                    mov rdi, qword [rbx]	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40003c4	      0x458d4c2401	                      lea r9d, [r12 + 1]	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40003c9	              0x50	                                push rax	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40003ca	        0x448d4501	                      lea r8d, [rbp + 1]	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40003ce	      0xba00000000	                              mov edx, 0	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40003d3	            0x31c0	                            xor eax, eax	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40003d5	      0xbe9b000000	                           mov esi, 0x9b	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40003da	      0xe800000000	                          call 0x40003df	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40003df	              0x58	                                 pop rax	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40003e0	              0x5a	                                 pop rdx	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40003e1	      0xe9d5feffff	                           jmp 0x40002bb	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40003e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40003f0	          0x83fa01	                              cmp edx, 1	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40003f3	            0x19c0	                            sbb eax, eax	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40003f5	             0x9f1	                             or ecx, esi	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40003f7	          0x83e020	                           and eax, 0x20	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40003fa	          0x83c04d	                           add eax, 0x4d	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40003fd	            0xebbe	                           jmp 0x40003bd	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40003ff	              0x90	                                     nop	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x4000400	      0xb8de000000	                           mov eax, 0xde	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x4000405	    0x81fdde000000	                           cmp ebp, 0xde	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x400040b	           0xf4fe8	                          cmovg ebp, eax	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x400040e	    0x4181fcde0000	                          cmp r12d, 0xde	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x4000415	        0x440f4fe0	                         cmovg r12d, eax	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x4000419	            0x85d2	                           test edx, edx	        17	mouse.c	FUNCTION_1	SWITCH_1	IF_3
0x400041b	      0xb803000000	                              mov eax, 3	        17	mouse.c	FUNCTION_1	SWITCH_1	IF_3
0x4000420	           0xf44f0	                          cmove esi, eax	        17	mouse.c	FUNCTION_1	SWITCH_1	IF_3
0x4000423	             0x9ce	                             or esi, ecx	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x4000425	          0x8d4e20	                   lea ecx, [rsi + 0x20]	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x4000428	          0x488b3b	                    mov rdi, qword [rbx]	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x400042b	      0x458d4c2421	                   lea r9d, [r12 + 0x21]	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x4000430	        0x448d4521	                   lea r8d, [rbp + 0x21]	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x4000434	      0xba00000000	                              mov edx, 0	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x4000439	      0xbe9b000000	                           mov esi, 0x9b	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x400043e	            0x31c0	                            xor eax, eax	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x4000440	      0xe800000000	                          call 0x4000445	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x4000445	      0xe971feffff	                           jmp 0x40002bb	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x400044a	    0x660f1f440000	                    nop word [rax + rax]	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x4000450	            0x85d2	                           test edx, edx	        28	mouse.c	FUNCTION_1	SWITCH_1	IF_4
0x4000452	      0xb803000000	                              mov eax, 3	        28	mouse.c	FUNCTION_1	SWITCH_1	IF_4
0x4000457	           0xf44f0	                          cmove esi, eax	        28	mouse.c	FUNCTION_1	SWITCH_1	IF_4
0x400045a	             0x9ce	                             or esi, ecx	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0x400045c	          0x83c620	                           add esi, 0x20	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0x400045f	          0x4863fe	                         movsxd rdi, esi	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0x4000462	          0x4889e6	                            mov rsi, rsp	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0x4000465	      0xe800000000	                          call 0x400046a	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0x400046a	          0x8d7d21	                   lea edi, [rbp + 0x21]	        31	mouse.c	FUNCTION_1	SWITCH_1	CALL_3
0x400046d	          0x4c63e8	                         movsxd r13, eax	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0x4000470	        0x4a8d342c	                    lea rsi, [rsp + r13]	        31	mouse.c	FUNCTION_1	SWITCH_1	CALL_3
0x4000474	          0x4863ff	                         movsxd rdi, edi	        31	mouse.c	FUNCTION_1	SWITCH_1	CALL_3
0x4000477	      0xe800000000	                          call 0x400047c	        31	mouse.c	FUNCTION_1	SWITCH_1	CALL_3
0x400047c	          0x4863e8	                         movsxd rbp, eax	        31	mouse.c	FUNCTION_1	SWITCH_1	CALL_3
0x400047f	      0x418d7c2421	                   lea edi, [r12 + 0x21]	        32	mouse.c	FUNCTION_1	SWITCH_1	CALL_4
0x4000484	          0x4c01ed	                            add rbp, r13	        31	mouse.c	FUNCTION_1	SWITCH_1	CALL_3
0x4000487	        0x488d342c	                    lea rsi, [rsp + rbp]	        32	mouse.c	FUNCTION_1	SWITCH_1	CALL_4
0x400048b	          0x4863ff	                         movsxd rdi, edi	        32	mouse.c	FUNCTION_1	SWITCH_1	CALL_4
0x400048e	      0xe800000000	                          call 0x4000493	        32	mouse.c	FUNCTION_1	SWITCH_1	CALL_4
0x4000493	      0x488d542420	                   lea rdx, [rsp + 0x20]	        33	mouse.c	FUNCTION_1	SWITCH_1
0x4000498	            0x4898	                                    cdqe	        33	mouse.c	FUNCTION_1	SWITCH_1
0x400049a	          0x4889e1	                            mov rcx, rsp	        35	mouse.c	FUNCTION_1	SWITCH_1	CALL_5
0x400049d	      0xbe9b000000	                           mov esi, 0x9b	        35	mouse.c	FUNCTION_1	SWITCH_1	CALL_5
0x40004a2	          0x4801d5	                            add rbp, rdx	        33	mouse.c	FUNCTION_1	SWITCH_1
0x40004a5	      0xba00000000	                              mov edx, 0	        35	mouse.c	FUNCTION_1	SWITCH_1	CALL_5
0x40004aa	      0xc64428e000	          mov byte [rax + rbp - 0x20], 0	        33	mouse.c	FUNCTION_1	SWITCH_1
0x40004af	          0x488b3b	                    mov rdi, qword [rbx]	        35	mouse.c	FUNCTION_1	SWITCH_1	CALL_5
0x40004b2	            0x31c0	                            xor eax, eax	        35	mouse.c	FUNCTION_1	SWITCH_1	CALL_5
0x40004b4	      0xe800000000	                          call 0x40004b9	        35	mouse.c	FUNCTION_1	SWITCH_1	CALL_5
0x40004b9	      0xe9fdfdffff	                           jmp 0x40002bb	        35	mouse.c	FUNCTION_1	SWITCH_1	CALL_5
0x40004be	            0x6690	                                     nop	        35	mouse.c	FUNCTION_1	SWITCH_1	CALL_5
0x40004c0	            0x85d2	                           test edx, edx	        28	mouse.c	FUNCTION_1	SWITCH_1	IF_4
0x40004c2	      0xb803000000	                              mov eax, 3	        28	mouse.c	FUNCTION_1	SWITCH_1	IF_4
0x40004c7	           0xf45c1	                         cmovne eax, ecx	        28	mouse.c	FUNCTION_1	SWITCH_1	IF_4
0x40004ca	            0x89f9	                            mov ecx, edi	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0x40004cc	             0x9c1	                             or ecx, eax	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0x40004ce	          0x8d7920	                   lea edi, [rcx + 0x20]	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0x40004d1	          0x4863ff	                         movsxd rdi, edi	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0x40004d4	            0xeb8c	                           jmp 0x4000462	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0x40004d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0x40004e0	      0xb8de000000	                           mov eax, 0xde	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0x40004e5	    0x81fdde000000	                           cmp ebp, 0xde	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0x40004eb	           0xf4fe8	                          cmovg ebp, eax	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0x40004ee	    0x4181fcde0000	                          cmp r12d, 0xde	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0x40004f5	        0x440f4fe0	                         cmovg r12d, eax	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0x40004f9	            0x85d2	                           test edx, edx	        17	mouse.c	FUNCTION_1	SWITCH_1	IF_3
0x40004fb	      0xb803000000	                              mov eax, 3	        17	mouse.c	FUNCTION_1	SWITCH_1	IF_3
0x4000500	           0xf45c1	                         cmovne eax, ecx	        17	mouse.c	FUNCTION_1	SWITCH_1	IF_3
0x4000503	            0x89f9	                            mov ecx, edi	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x4000505	             0x9c1	                             or ecx, eax	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x4000507	          0x83c120	                           add ecx, 0x20	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x400050a	      0xe919ffffff	                           jmp 0x4000428	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x400050f	      0xe800000000	                        call str.M_c_c_c	        98	mouse.c	FUNCTION_3
vterm_mouse_move	CALL,1:FOR,0:SWITCH,0:functions,0:IF,2:DO,0:ELSE,0:WHILE,0	138
0x4000040	            0x4155	                                push r13	        55	mouse.c	FUNCTION_2
0x4000042	            0x4154	                                push r12	        55	mouse.c	FUNCTION_2
0x4000044	              0x55	                                push rbp	        55	mouse.c	FUNCTION_2
0x4000045	              0x53	                                push rbx	        55	mouse.c	FUNCTION_2
0x4000046	            0x89f5	                            mov ebp, esi	        55	mouse.c	FUNCTION_2
0x4000048	        0x4883ec38	                           sub rsp, 0x38	        55	mouse.c	FUNCTION_2
0x400004c	    0x488b9f180100	           mov rbx, qword [rdi + 0x118] 	        56	mouse.c	FUNCTION_2
0x4000053	    0x64488b042528	                mov rax, qword fs:[0x28]	        55	mouse.c	FUNCTION_2
0x400005c	      0x4889442428	             mov qword [rsp + 0x28], rax	        55	mouse.c	FUNCTION_2
0x4000061	            0x31c0	                            xor eax, eax	        55	mouse.c	FUNCTION_2
0x4000063	          0x395360	            cmp dword [rbx + 0x60], edx 	        58	mouse.c	FUNCTION_2	IF_1
0x4000066	     0xf840c010000	                            je 0x4000178	        58	mouse.c	FUNCTION_2	IF_1
0x400006c	          0x8b736c	            mov esi, dword [rbx + 0x6c] 	        64	mouse.c	FUNCTION_2	IF_2
0x400006f	          0x895360	             mov dword [rbx + 0x60], edx	        61	mouse.c	FUNCTION_2
0x4000072	          0x896b64	             mov dword [rbx + 0x64], ebp	        62	mouse.c	FUNCTION_2
0x4000075	        0x40f6c602	                             test sil, 2	        64	mouse.c	FUNCTION_2	IF_2
0x4000079	            0x7565	                           jne 0x40000e0	        64	mouse.c	FUNCTION_2	IF_2
0x400007b	          0x83e604	                              and esi, 4	        64	mouse.c	FUNCTION_2	IF_2
0x400007e	            0x7438	                            je 0x40000b8	        64	mouse.c	FUNCTION_2	IF_2
0x4000080	          0x8b7b68	            mov edi, dword [rbx + 0x68] 	        64	mouse.c	FUNCTION_2	IF_2
0x4000083	        0x40f6c701	                             test dil, 1	        66	mouse.c	FUNCTION_2	IF_2
0x4000087	      0xb820000000	                           mov eax, 0x20	        66	mouse.c	FUNCTION_2	IF_2
0x400008c	     0xf8426010000	                            je 0x40001b8	        66	mouse.c	FUNCTION_2	IF_2
0x4000092	          0x8b7370	            mov esi, dword [rbx + 0x70] 	         9	mouse.c	FUNCTION_1	SWITCH_1
0x4000095	          0xc1e102	                              shl ecx, 2	         7	mouse.c	FUNCTION_1
0x4000098	          0x83fe01	                              cmp esi, 1	         9	mouse.c	FUNCTION_1	SWITCH_1
0x400009b	            0x745f	                            je 0x40000fc	         9	mouse.c	FUNCTION_1	SWITCH_1
0x400009d	     0xf826d010000	                            jb 0x4000210	         9	mouse.c	FUNCTION_1	SWITCH_1
0x40000a3	          0x83fe02	                              cmp esi, 2	         9	mouse.c	FUNCTION_1	SWITCH_1
0x40000a6	     0xf8434010000	                            je 0x40001e0	         9	mouse.c	FUNCTION_1	SWITCH_1
0x40000ac	          0x83fe03	                              cmp esi, 3	         9	mouse.c	FUNCTION_1	SWITCH_1
0x40000af	     0xf84db000000	                            je 0x4000190	         9	mouse.c	FUNCTION_1	SWITCH_1
0x40000b5	           0xf1f00	                         nop dword [rax]	         9	mouse.c	FUNCTION_1	SWITCH_1
0x40000b8	      0x488b442428	            mov rax, qword [rsp + 0x28] 	        71	mouse.c	FUNCTION_2
0x40000bd	    0x644833042528	                xor rax, qword fs:[0x28]	        71	mouse.c	FUNCTION_2
0x40000c6	     0xf8581010000	                           jne 0x400024d	        71	mouse.c	FUNCTION_2
0x40000cc	        0x4883c438	                           add rsp, 0x38	        71	mouse.c	FUNCTION_2
0x40000d0	              0x5b	                                 pop rbx	        71	mouse.c	FUNCTION_2
0x40000d1	              0x5d	                                 pop rbp	        71	mouse.c	FUNCTION_2
0x40000d2	            0x415c	                                 pop r12	        71	mouse.c	FUNCTION_2
0x40000d4	            0x415d	                                 pop r13	        71	mouse.c	FUNCTION_2
0x40000d6	              0xc3	                                     ret	        71	mouse.c	FUNCTION_2
0x40000d7	    0x660f1f840000	                    nop word [rax + rax]	        71	mouse.c	FUNCTION_2
0x40000e0	          0x8b7b68	            mov edi, dword [rbx + 0x68] 	        64	mouse.c	FUNCTION_2	IF_2
0x40000e3	            0x85ff	                           test edi, edi	        64	mouse.c	FUNCTION_2	IF_2
0x40000e5	            0x759c	                           jne 0x4000083	        64	mouse.c	FUNCTION_2	IF_2
0x40000e7	          0x83e604	                              and esi, 4	        64	mouse.c	FUNCTION_2	IF_2
0x40000ea	      0xb823000000	                           mov eax, 0x23	        64	mouse.c	FUNCTION_2	IF_2
0x40000ef	            0x74c7	                            je 0x40000b8	        64	mouse.c	FUNCTION_2	IF_2
0x40000f1	          0x8b7370	            mov esi, dword [rbx + 0x70] 	         9	mouse.c	FUNCTION_1	SWITCH_1
0x40000f4	          0xc1e102	                              shl ecx, 2	         7	mouse.c	FUNCTION_1
0x40000f7	          0x83fe01	                              cmp esi, 1	         9	mouse.c	FUNCTION_1	SWITCH_1
0x40000fa	            0x75a1	                           jne 0x400009d	         9	mouse.c	FUNCTION_1	SWITCH_1
0x40000fc	             0x9c1	                             or ecx, eax	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0x40000fe	      0x488d742410	                   lea rsi, [rsp + 0x10]	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0x4000103	        0x8954240c	              mov dword [rsp + 0xc], edx	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0x4000107	          0x8d7920	                   lea edi, [rcx + 0x20]	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0x400010a	          0x4863ff	                         movsxd rdi, edi	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0x400010d	      0xe800000000	                          call 0x4000112	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0x4000112	        0x8b54240c	              mov edx, dword [rsp + 0xc]	        31	mouse.c	FUNCTION_1	SWITCH_1	CALL_3
0x4000116	          0x4c63e8	                         movsxd r13, eax	        30	mouse.c	FUNCTION_1	SWITCH_1	CALL_2
0x4000119	      0x488d442410	                   lea rax, [rsp + 0x10]	        31	mouse.c	FUNCTION_1	SWITCH_1	CALL_3
0x400011e	        0x4a8d3428	                    lea rsi, [rax + r13]	        31	mouse.c	FUNCTION_1	SWITCH_1	CALL_3
0x4000122	          0x83c221	                           add edx, 0x21	        31	mouse.c	FUNCTION_1	SWITCH_1	CALL_3
0x4000125	          0x4863fa	                         movsxd rdi, edx	        31	mouse.c	FUNCTION_1	SWITCH_1	CALL_3
0x4000128	      0xe800000000	                          call 0x400012d	        31	mouse.c	FUNCTION_1	SWITCH_1	CALL_3
0x400012d	          0x4c63e0	                         movsxd r12, eax	        31	mouse.c	FUNCTION_1	SWITCH_1	CALL_3
0x4000130	      0x488d442410	                   lea rax, [rsp + 0x10]	        32	mouse.c	FUNCTION_1	SWITCH_1	CALL_4
0x4000135	          0x8d7d21	                   lea edi, [rbp + 0x21]	        32	mouse.c	FUNCTION_1	SWITCH_1	CALL_4
0x4000138	          0x4d01ec	                            add r12, r13	        31	mouse.c	FUNCTION_1	SWITCH_1	CALL_3
0x400013b	        0x4a8d3420	                    lea rsi, [rax + r12]	        32	mouse.c	FUNCTION_1	SWITCH_1	CALL_4
0x400013f	          0x4863ff	                         movsxd rdi, edi	        32	mouse.c	FUNCTION_1	SWITCH_1	CALL_4
0x4000142	      0xe800000000	                          call 0x4000147	        32	mouse.c	FUNCTION_1	SWITCH_1	CALL_4
0x4000147	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	        33	mouse.c	FUNCTION_1	SWITCH_1
0x400014c	            0x4898	                                    cdqe	        33	mouse.c	FUNCTION_1	SWITCH_1
0x400014e	      0xba00000000	                              mov edx, 0	        35	mouse.c	FUNCTION_1	SWITCH_1	CALL_5
0x4000153	      0xbe9b000000	                           mov esi, 0x9b	        35	mouse.c	FUNCTION_1	SWITCH_1	CALL_5
0x4000158	          0x4901cc	                            add r12, rcx	        33	mouse.c	FUNCTION_1	SWITCH_1
0x400015b	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	        35	mouse.c	FUNCTION_1	SWITCH_1	CALL_5
0x4000160	    0x42c64420e000	          mov byte [rax + r12 - 0x20], 0	        33	mouse.c	FUNCTION_1	SWITCH_1
0x4000166	          0x488b3b	                    mov rdi, qword [rbx]	        35	mouse.c	FUNCTION_1	SWITCH_1	CALL_5
0x4000169	            0x31c0	                            xor eax, eax	        35	mouse.c	FUNCTION_1	SWITCH_1	CALL_5
0x400016b	      0xe800000000	                          call 0x4000170	        35	mouse.c	FUNCTION_1	SWITCH_1	CALL_5
0x4000170	      0xe943ffffff	                           jmp 0x40000b8	        35	mouse.c	FUNCTION_1	SWITCH_1	CALL_5
0x4000175	           0xf1f00	                         nop dword [rax]	        35	mouse.c	FUNCTION_1	SWITCH_1	CALL_5
0x4000178	          0x397364	            cmp dword [rbx + 0x64], esi 	        58	mouse.c	FUNCTION_2	IF_1
0x400017b	     0xf85ebfeffff	                           jne 0x400006c	        58	mouse.c	FUNCTION_2	IF_1
0x4000181	      0xe932ffffff	                           jmp 0x40000b8	        58	mouse.c	FUNCTION_2	IF_1
0x4000186	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        58	mouse.c	FUNCTION_2	IF_1
0x4000190	          0x488b3b	                    mov rdi, qword [rbx]	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x4000193	        0x448d4201	                      lea r8d, [rdx + 1]	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x4000197	        0x448d4d01	                      lea r9d, [rbp + 1]	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x400019b	             0x9c1	                             or ecx, eax	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x400019d	      0xba00000000	                              mov edx, 0	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x40001a2	      0xbe9b000000	                           mov esi, 0x9b	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x40001a7	            0x31c0	                            xor eax, eax	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x40001a9	      0xe800000000	                          call 0x40001ae	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x40001ae	      0xe905ffffff	                           jmp 0x40000b8	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x40001b3	       0xf1f440000	                   nop dword [rax + rax]	        48	mouse.c	FUNCTION_1	SWITCH_1	CALL_7
0x40001b8	        0x40f6c702	                             test dil, 2	        67	mouse.c	FUNCTION_2	IF_2
0x40001bc	      0xb821000000	                           mov eax, 0x21	        67	mouse.c	FUNCTION_2	IF_2
0x40001c1	     0xf85cbfeffff	                           jne 0x4000092	        67	mouse.c	FUNCTION_2	IF_2
0x40001c7	            0x89f8	                            mov eax, edi	        68	mouse.c	FUNCTION_2	IF_2
0x40001c9	          0xc1e01d	                           shl eax, 0x1d	        68	mouse.c	FUNCTION_2	IF_2
0x40001cc	          0xc1f81f	                           sar eax, 0x1f	        68	mouse.c	FUNCTION_2	IF_2
0x40001cf	          0x83c023	                           add eax, 0x23	        68	mouse.c	FUNCTION_2	IF_2
0x40001d2	      0xe9bbfeffff	                           jmp 0x4000092	        68	mouse.c	FUNCTION_2	IF_2
0x40001d7	    0x660f1f840000	                    nop word [rax + rax]	        68	mouse.c	FUNCTION_2	IF_2
0x40001e0	        0x4883ec08	                              sub rsp, 8	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40001e4	          0x488b3b	                    mov rdi, qword [rbx]	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40001e7	        0x448d4201	                      lea r8d, [rdx + 1]	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40001eb	            0x6a4d	                               push 0x4d	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40001ed	        0x448d4d01	                      lea r9d, [rbp + 1]	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40001f1	             0x9c1	                             or ecx, eax	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40001f3	      0xba00000000	                              mov edx, 0	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40001f8	            0x31c0	                            xor eax, eax	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40001fa	      0xbe9b000000	                           mov esi, 0x9b	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x40001ff	      0xe800000000	                          call 0x4000204	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x4000204	              0x58	                                 pop rax	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x4000205	              0x5a	                                 pop rdx	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x4000206	      0xe9adfeffff	                           jmp 0x40000b8	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x400020b	       0xf1f440000	                   nop dword [rax + rax]	        40	mouse.c	FUNCTION_1	SWITCH_1	CALL_6
0x4000210	      0xbede000000	                           mov esi, 0xde	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x4000215	    0x81fdde000000	                           cmp ebp, 0xde	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x400021b	          0x488b3b	                    mov rdi, qword [rbx]	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x400021e	           0xf4fee	                          cmovg ebp, esi	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x4000221	    0x81fade000000	                           cmp edx, 0xde	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x4000227	           0xf4fd6	                          cmovg edx, esi	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x400022a	        0x448d4d21	                   lea r9d, [rbp + 0x21]	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x400022e	             0x9c1	                             or ecx, eax	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x4000230	        0x448d4221	                   lea r8d, [rdx + 0x21]	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x4000234	          0x83c120	                           add ecx, 0x20	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x4000237	      0xba00000000	                              mov edx, 0	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x400023c	      0xbe9b000000	                           mov esi, 0x9b	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x4000241	            0x31c0	                            xor eax, eax	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x4000243	      0xe800000000	                          call 0x4000248	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x4000248	      0xe96bfeffff	                           jmp 0x40000b8	        19	mouse.c	FUNCTION_1	SWITCH_1	CALL_1
0x400024d	      0xe800000000	                          call 0x4000252	        71	mouse.c	FUNCTION_2
