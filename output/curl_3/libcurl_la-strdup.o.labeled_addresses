Curl_saferealloc	IF,1:SWITCH,0:DO,0:CALL,2:ELSE,0:WHILE,0:functions,0:FOR,0	20
0x4000080	              0x55	                                push rbp	        94	strdup.c	FUNCTION_3
0x4000081	              0x53	                                push rbx	        94	strdup.c	FUNCTION_3
0x4000082	          0x4889f3	                            mov rbx, rsi	        94	strdup.c	FUNCTION_3
0x4000085	          0x4889fd	                            mov rbp, rdi	        94	strdup.c	FUNCTION_3
0x4000088	        0x4883ec18	                           sub rsp, 0x18	        94	strdup.c	FUNCTION_3
0x400008c	    0x488b05000000	            mov rax, qword [0x04000093] 	        95	strdup.c	FUNCTION_3	CALL_1
0x4000093	            0xff10	                        call qword [rax]	        95	strdup.c	FUNCTION_3	CALL_1
0x4000095	          0x4885db	                           test rbx, rbx	        96	strdup.c	FUNCTION_3	IF_1
0x4000098	            0x741b	                            je 0x40000b5	        96	strdup.c	FUNCTION_3	IF_1
0x400009a	          0x4885c0	                           test rax, rax	        96	strdup.c	FUNCTION_3	IF_1
0x400009d	            0x7516	                           jne 0x40000b5	        96	strdup.c	FUNCTION_3	IF_1
0x400009f	    0x488b15000000	            mov rdx, qword [0x040000a6] 	        98	strdup.c	FUNCTION_3	CALL_2
0x40000a6	      0x4889442408	                mov qword [rsp + 8], rax	        98	strdup.c	FUNCTION_3	CALL_2
0x40000ab	          0x4889ef	                            mov rdi, rbp	        98	strdup.c	FUNCTION_3	CALL_2
0x40000ae	            0xff12	                        call qword [rdx]	        98	strdup.c	FUNCTION_3	CALL_2
0x40000b0	      0x488b442408	                mov rax, qword [rsp + 8]	        98	strdup.c	FUNCTION_3	CALL_2
0x40000b5	        0x4883c418	                           add rsp, 0x18	       100	strdup.c	FUNCTION_3
0x40000b9	              0x5b	                                 pop rbx	       100	strdup.c	FUNCTION_3
0x40000ba	              0x5d	                                 pop rbp	       100	strdup.c	FUNCTION_3
0x40000bb	              0xc3	                                     ret	       100	strdup.c	FUNCTION_3
Curl_memdup	IF,1:SWITCH,0:DO,0:CALL,2:ELSE,0:WHILE,0:functions,0:FOR,0	21
0x4000040	              0x55	                                push rbp	        69	strdup.c	FUNCTION_2
0x4000041	              0x53	                                push rbx	        69	strdup.c	FUNCTION_2
0x4000042	          0x4889fd	                            mov rbp, rdi	        69	strdup.c	FUNCTION_2
0x4000045	          0x4889f3	                            mov rbx, rsi	        69	strdup.c	FUNCTION_2
0x4000048	          0x4889f7	                            mov rdi, rsi	        70	strdup.c	FUNCTION_2	CALL_1
0x400004b	        0x4883ec08	                              sub rsp, 8	        69	strdup.c	FUNCTION_2
0x400004f	    0x488b05000000	            mov rax, qword [0x04000056] 	        70	strdup.c	FUNCTION_2	CALL_1
0x4000056	            0xff10	                        call qword [rax]	        70	strdup.c	FUNCTION_2	CALL_1
0x4000058	          0x4885c0	                           test rax, rax	        71	strdup.c	FUNCTION_2	IF_1
0x400005b	          0x4889c1	                            mov rcx, rax	        70	strdup.c	FUNCTION_2	CALL_1
0x400005e	            0x7411	                            je 0x4000071	        71	strdup.c	FUNCTION_2	IF_1
0x4000060	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_4	CALL_3
0x4000063	          0x4889ee	                            mov rsi, rbp	        53	string3.h	FUNCTION_4	CALL_3
0x4000066	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_4	CALL_3
0x4000069	      0xe800000000	                          call 0x400006e	        53	string3.h	FUNCTION_4	CALL_3
0x400006e	          0x4889c1	                            mov rcx, rax	        53	string3.h	FUNCTION_4	CALL_3
0x4000071	        0x4883c408	                              add rsp, 8	        77	strdup.c	FUNCTION_2
0x4000075	          0x4889c8	                            mov rax, rcx	        77	strdup.c	FUNCTION_2
0x4000078	              0x5b	                                 pop rbx	        77	strdup.c	FUNCTION_2
0x4000079	              0x5d	                                 pop rbp	        77	strdup.c	FUNCTION_2
0x400007a	              0xc3	                                     ret	        77	strdup.c	FUNCTION_2
