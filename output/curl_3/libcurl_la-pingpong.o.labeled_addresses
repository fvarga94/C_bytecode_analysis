Curl_pp_flushsend	SWITCH,0:ELSE,1:functions,0:CALL,3:IF,2:DO,0:FOR,0:WHILE,0	44
0x4000940	              0x55	                                push rbp	       487	pingpong.c	FUNCTION_8
0x4000941	              0x53	                                push rbx	       487	pingpong.c	FUNCTION_8
0x4000942	          0x4889fb	                            mov rbx, rdi	       487	pingpong.c	FUNCTION_8
0x4000945	        0x4883ec18	                           sub rsp, 0x18	       487	pingpong.c	FUNCTION_8
0x4000949	        0x488b4b30	            mov rcx, qword [rbx + 0x30] 	       493	pingpong.c	FUNCTION_8
0x400094d	        0x488b5338	            mov rdx, qword [rbx + 0x38] 	       492	pingpong.c	FUNCTION_8	CALL_1
0x4000951	        0x488b7f58	            mov rdi, qword [rdi + 0x58] 	       489	pingpong.c	FUNCTION_8
0x4000955	          0x4989e0	                             mov r8, rsp	       492	pingpong.c	FUNCTION_8	CALL_1
0x4000958	    0x64488b042528	                mov rax, qword fs:[0x28]	       487	pingpong.c	FUNCTION_8
0x4000961	      0x4889442408	                mov qword [rsp + 8], rax	       487	pingpong.c	FUNCTION_8
0x4000966	            0x31c0	                            xor eax, eax	       487	pingpong.c	FUNCTION_8
0x4000968	          0x4829ca	                            sub rdx, rcx	       492	pingpong.c	FUNCTION_8	CALL_1
0x400096b	        0x48035328	             add rdx, qword [rbx + 0x28]	       492	pingpong.c	FUNCTION_8	CALL_1
0x400096f	    0x8bb758020000	           mov esi, dword [rdi + 0x258] 	       492	pingpong.c	FUNCTION_8	CALL_1
0x4000975	      0xe800000000	                          call 0x400097a	       492	pingpong.c	FUNCTION_8	CALL_1
0x400097a	            0x85c0	                           test eax, eax	       494	pingpong.c	FUNCTION_8	IF_1
0x400097c	            0x89c5	                            mov ebp, eax	       492	pingpong.c	FUNCTION_8	CALL_1
0x400097e	            0x7514	                           jne 0x4000994	       494	pingpong.c	FUNCTION_8	IF_1
0x4000980	        0x488b4330	            mov rax, qword [rbx + 0x30] 	       497	pingpong.c	FUNCTION_8	IF_2
0x4000984	        0x488b1424	                    mov rdx, qword [rsp]	       497	pingpong.c	FUNCTION_8	IF_2
0x4000988	          0x4839d0	                            cmp rax, rdx	       497	pingpong.c	FUNCTION_8	IF_2
0x400098b	            0x7423	                            je 0x40009b0	       497	pingpong.c	FUNCTION_8	IF_2
0x400098d	          0x4829d0	                            sub rax, rdx	       499	pingpong.c	FUNCTION_8	IF_2
0x4000990	        0x48894330	             mov qword [rbx + 0x30], rax	       499	pingpong.c	FUNCTION_8	IF_2
0x4000994	      0x488b742408	                mov rsi, qword [rsp + 8]	       508	pingpong.c	FUNCTION_8
0x4000999	    0x644833342528	                xor rsi, qword fs:[0x28]	       508	pingpong.c	FUNCTION_8
0x40009a2	            0x89e8	                            mov eax, ebp	       508	pingpong.c	FUNCTION_8
0x40009a4	            0x753e	                           jne 0x40009e4	       508	pingpong.c	FUNCTION_8
0x40009a6	        0x4883c418	                           add rsp, 0x18	       508	pingpong.c	FUNCTION_8
0x40009aa	              0x5b	                                 pop rbx	       508	pingpong.c	FUNCTION_8
0x40009ab	              0x5d	                                 pop rbp	       508	pingpong.c	FUNCTION_8
0x40009ac	              0xc3	                                     ret	       508	pingpong.c	FUNCTION_8
0x40009ad	           0xf1f00	                         nop dword [rax]	       508	pingpong.c	FUNCTION_8
0x40009b0	    0x488b05000000	            mov rax, qword [0x040009b7] 	       502	pingpong.c	FUNCTION_8	ELSE_1	CALL_2
0x40009b7	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	       502	pingpong.c	FUNCTION_8	ELSE_1	CALL_2
0x40009bb	            0xff10	                        call qword [rax]	       502	pingpong.c	FUNCTION_8	ELSE_1	CALL_2
0x40009bd	    0x48c743280000	               mov qword [rbx + 0x28], 0	       503	pingpong.c	FUNCTION_8	ELSE_1
0x40009c5	    0x48c743380000	               mov qword [rbx + 0x38], 0	       504	pingpong.c	FUNCTION_8	ELSE_1
0x40009cd	    0x48c743300000	               mov qword [rbx + 0x30], 0	       504	pingpong.c	FUNCTION_8	ELSE_1
0x40009d5	      0xe800000000	                          call 0x40009da	       505	pingpong.c	FUNCTION_8	ELSE_1	CALL_3
0x40009da	        0x48894340	             mov qword [rbx + 0x40], rax	       505	pingpong.c	FUNCTION_8	ELSE_1	CALL_3
0x40009de	        0x48895348	             mov qword [rbx + 0x48], rdx	       505	pingpong.c	FUNCTION_8	ELSE_1	CALL_3
0x40009e2	            0xebb0	                           jmp 0x4000994	       505	pingpong.c	FUNCTION_8	ELSE_1	CALL_3
0x40009e4	      0xe800000000	                          call 0x40009e9	       508	pingpong.c	FUNCTION_8
Curl_pp_state_timeout	SWITCH,0:ELSE,0:functions,0:CALL,5:IF,1:DO,0:FOR,0:WHILE,0	39
0x4000040	            0x4155	                                push r13	        48	pingpong.c	FUNCTION_1
0x4000042	            0x4154	                                push r12	        48	pingpong.c	FUNCTION_1
0x4000044	              0x55	                                push rbp	        48	pingpong.c	FUNCTION_1
0x4000045	              0x53	                                push rbx	        48	pingpong.c	FUNCTION_1
0x4000046	          0x4889fd	                            mov rbp, rdi	        48	pingpong.c	FUNCTION_1
0x4000049	        0x4883ec08	                              sub rsp, 8	        48	pingpong.c	FUNCTION_1
0x400004d	        0x4c8b6758	            mov r12, qword [rdi + 0x58] 	        49	pingpong.c	FUNCTION_1
0x4000051	        0x4d8b2c24	                    mov r13, qword [r12]	        50	pingpong.c	FUNCTION_1
0x4000055	    0x498b9d500300	           mov rbx, qword [r13 + 0x350] 	        53	pingpong.c	FUNCTION_1
0x400005c	          0x4885db	                           test rbx, rbx	        54	pingpong.c	FUNCTION_1
0x400005f	            0x7504	                           jne 0x4000065	        54	pingpong.c	FUNCTION_1
0x4000061	        0x488b5f50	            mov rbx, qword [rdi + 0x50] 	        54	pingpong.c	FUNCTION_1
0x4000065	      0xe800000000	                          call 0x400006a	        64	pingpong.c	FUNCTION_1	CALL_2
0x400006a	        0x488b4d48	            mov rcx, qword [rbp + 0x48] 	        64	pingpong.c	FUNCTION_1	CALL_2
0x400006e	          0x4889d6	                            mov rsi, rdx	        64	pingpong.c	FUNCTION_1	CALL_2
0x4000071	        0x488b5540	            mov rdx, qword [rbp + 0x40] 	        64	pingpong.c	FUNCTION_1	CALL_2
0x4000075	          0x4889c7	                            mov rdi, rax	        64	pingpong.c	FUNCTION_1	CALL_2
0x4000078	      0xe800000000	                          call 0x400007d	        64	pingpong.c	FUNCTION_1	CALL_2
0x400007d	          0x4829c3	                            sub rbx, rax	        63	pingpong.c	FUNCTION_1
0x4000080	          0x4889dd	                            mov rbp, rbx	        63	pingpong.c	FUNCTION_1
0x4000083	    0x498b9d300300	           mov rbx, qword [r13 + 0x330] 	        66	pingpong.c	FUNCTION_1	IF_1
0x400008a	          0x4885db	                           test rbx, rbx	        66	pingpong.c	FUNCTION_1	IF_1
0x400008d	            0x742a	                            je 0x40000b9	        66	pingpong.c	FUNCTION_1	IF_1
0x400008f	      0xe800000000	                          call 0x4000094	        69	pingpong.c	FUNCTION_1	IF_1	CALL_4
0x4000094	    0x498b8c244002	           mov rcx, qword [r12 + 0x240] 	        69	pingpong.c	FUNCTION_1	IF_1	CALL_4
0x400009c	          0x4889d6	                            mov rsi, rdx	        69	pingpong.c	FUNCTION_1	IF_1	CALL_4
0x400009f	    0x498b94243802	           mov rdx, qword [r12 + 0x238] 	        69	pingpong.c	FUNCTION_1	IF_1	CALL_4
0x40000a7	          0x4889c7	                            mov rdi, rax	        69	pingpong.c	FUNCTION_1	IF_1	CALL_4
0x40000aa	      0xe800000000	                          call 0x40000af	        69	pingpong.c	FUNCTION_1	IF_1	CALL_4
0x40000af	          0x4829c3	                            sub rbx, rax	        72	pingpong.c	FUNCTION_1	IF_1	CALL_5
0x40000b2	          0x4839dd	                            cmp rbp, rbx	        72	pingpong.c	FUNCTION_1	IF_1	CALL_5
0x40000b5	        0x480f4feb	                          cmovg rbp, rbx	        72	pingpong.c	FUNCTION_1	IF_1	CALL_5
0x40000b9	        0x4883c408	                              add rsp, 8	        76	pingpong.c	FUNCTION_1
0x40000bd	          0x4889e8	                            mov rax, rbp	        76	pingpong.c	FUNCTION_1
0x40000c0	              0x5b	                                 pop rbx	        76	pingpong.c	FUNCTION_1
0x40000c1	              0x5d	                                 pop rbp	        76	pingpong.c	FUNCTION_1
0x40000c2	            0x415c	                                 pop r12	        76	pingpong.c	FUNCTION_1
0x40000c4	            0x415d	                                 pop r13	        76	pingpong.c	FUNCTION_1
0x40000c6	              0xc3	                                     ret	        76	pingpong.c	FUNCTION_1
Curl_pp_statemach	SWITCH,0:ELSE,6:functions,0:CALL,11:IF,11:DO,0:FOR,0:WHILE,0	132
0x40000d0	            0x4157	                                push r15	        82	pingpong.c	FUNCTION_2
0x40000d2	            0x4156	                                push r14	        82	pingpong.c	FUNCTION_2
0x40000d4	            0x4155	                                push r13	        82	pingpong.c	FUNCTION_2
0x40000d6	            0x4154	                                push r12	        82	pingpong.c	FUNCTION_2
0x40000d8	          0x4189f5	                           mov r13d, esi	        82	pingpong.c	FUNCTION_2
0x40000db	              0x55	                                push rbp	        82	pingpong.c	FUNCTION_2
0x40000dc	              0x53	                                push rbx	        82	pingpong.c	FUNCTION_2
0x40000dd	          0x4889fd	                            mov rbp, rdi	        82	pingpong.c	FUNCTION_2
0x40000e0	        0x4883ec08	                              sub rsp, 8	        82	pingpong.c	FUNCTION_2
0x40000e4	        0x488b5f58	            mov rbx, qword [rdi + 0x58] 	        83	pingpong.c	FUNCTION_2
0x40000e8	    0x448bbb580200	          mov r15d, dword [rbx + 0x258] 	        84	pingpong.c	FUNCTION_2
0x40000ef	      0xe800000000	                          call 0x40000f4	        87	pingpong.c	FUNCTION_2	CALL_1
0x40000f4	          0x4885c0	                           test rax, rax	        91	pingpong.c	FUNCTION_2	IF_1
0x40000f7	          0x4c8b33	                    mov r14, qword [rbx]	        88	pingpong.c	FUNCTION_2
0x40000fa	     0xf8ec0000000	                           jle 0x40001c0	        91	pingpong.c	FUNCTION_2	IF_1
0x4000100	          0x4584ed	                         test r13b, r13b	        96	pingpong.c	FUNCTION_2	IF_2
0x4000103	     0xf8487000000	                            je 0x4000190	        96	pingpong.c	FUNCTION_2	IF_2
0x4000109	    0x483de8030000	                          cmp rax, 0x3e8	        97	pingpong.c	FUNCTION_2	IF_2
0x400010f	          0x4989c4	                            mov r12, rax	        97	pingpong.c	FUNCTION_2	IF_2
0x4000112	      0xb8e8030000	                          mov eax, 0x3e8	        97	pingpong.c	FUNCTION_2	IF_2
0x4000117	        0x4c0f4de0	                         cmovge r12, rax	        97	pingpong.c	FUNCTION_2	IF_2
0x400011b	          0x4889df	                            mov rdi, rbx	       104	pingpong.c	FUNCTION_2	IF_4	CALL_3
0x400011e	            0x31f6	                            xor esi, esi	       104	pingpong.c	FUNCTION_2	IF_4	CALL_3
0x4000120	      0xe800000000	                          call 0x4000125	       104	pingpong.c	FUNCTION_2	IF_4	CALL_3
0x4000125	            0x84c0	                             test al, al	       104	pingpong.c	FUNCTION_2	IF_4	CALL_3
0x4000127	     0xf85e3000000	                           jne 0x4000210	       104	pingpong.c	FUNCTION_2	IF_4	CALL_3
0x400012d	      0x48837d3000	               cmp qword [rbp + 0x30], 0	       520	pingpong.c	FUNCTION_10
0x4000132	     0xf84b0000000	                            je 0x40001e8	       520	pingpong.c	FUNCTION_10
0x4000138	          0x4489fa	                           mov edx, r15d	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x400013b	      0xbfffffffff	                     mov edi, 0xffffffff	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x4000140	          0x4c89e1	                            mov rcx, r12	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x4000143	      0xbeffffffff	                     mov esi, 0xffffffff	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x4000148	      0xe800000000	                          call 0x400014d	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x400014d	          0x4584ed	                         test r13b, r13b	       118	pingpong.c	FUNCTION_2	IF_7
0x4000150	          0x4189c4	                           mov r12d, eax	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x4000153	     0xf85bd000000	                           jne 0x4000216	       118	pingpong.c	FUNCTION_2	IF_7
0x4000159	        0x4183fcff	            cmp r12d, 0xffffffffffffffff	       129	pingpong.c	FUNCTION_2	IF_10
0x400015d	     0xf85e5000000	                           jne 0x4000248	       129	pingpong.c	FUNCTION_2	IF_10
0x4000163	    0x488d35000000	                   lea rsi, [0x0400016a]	       130	pingpong.c	FUNCTION_2	IF_10	CALL_10
0x400016a	          0x4c89f7	                            mov rdi, r14	       130	pingpong.c	FUNCTION_2	IF_10	CALL_10
0x400016d	            0x31c0	                            xor eax, eax	       130	pingpong.c	FUNCTION_2	IF_10	CALL_10
0x400016f	      0xe800000000	                          call 0x4000174	       130	pingpong.c	FUNCTION_2	IF_10	CALL_10
0x4000174	        0x4883c408	                              add rsp, 8	       137	pingpong.c	FUNCTION_2
0x4000178	      0xb81b000000	                           mov eax, 0x1b	       131	pingpong.c	FUNCTION_2	IF_10
0x400017d	              0x5b	                                 pop rbx	       137	pingpong.c	FUNCTION_2
0x400017e	              0x5d	                                 pop rbp	       137	pingpong.c	FUNCTION_2
0x400017f	            0x415c	                                 pop r12	       137	pingpong.c	FUNCTION_2
0x4000181	            0x415d	                                 pop r13	       137	pingpong.c	FUNCTION_2
0x4000183	            0x415e	                                 pop r14	       137	pingpong.c	FUNCTION_2
0x4000185	            0x415f	                                 pop r15	       137	pingpong.c	FUNCTION_2
0x4000187	              0xc3	                                     ret	       137	pingpong.c	FUNCTION_2
0x4000188	     0xf1f84000000	                   nop dword [rax + rax]	       137	pingpong.c	FUNCTION_2
0x4000190	            0x31f6	                            xor esi, esi	       104	pingpong.c	FUNCTION_2	IF_4	CALL_3
0x4000192	          0x4889df	                            mov rdi, rbx	       104	pingpong.c	FUNCTION_2	IF_4	CALL_3
0x4000195	          0x4531e4	                          xor r12d, r12d	       102	pingpong.c	FUNCTION_2	ELSE_1
0x4000198	      0xe800000000	                          call 0x400019d	       104	pingpong.c	FUNCTION_2	IF_4	CALL_3
0x400019d	            0x84c0	                             test al, al	       104	pingpong.c	FUNCTION_2	IF_4	CALL_3
0x400019f	            0x748c	                            je 0x400012d	       104	pingpong.c	FUNCTION_2	IF_4	CALL_3
0x40001a1	        0x488b4560	            mov rax, qword [rbp + 0x60] 	       134	pingpong.c	FUNCTION_2	ELSE_6	IF_11
0x40001a5	        0x4883c408	                              add rsp, 8	       137	pingpong.c	FUNCTION_2
0x40001a9	          0x4889df	                            mov rdi, rbx	       134	pingpong.c	FUNCTION_2	ELSE_6	IF_11
0x40001ac	              0x5b	                                 pop rbx	       137	pingpong.c	FUNCTION_2
0x40001ad	              0x5d	                                 pop rbp	       137	pingpong.c	FUNCTION_2
0x40001ae	            0x415c	                                 pop r12	       137	pingpong.c	FUNCTION_2
0x40001b0	            0x415d	                                 pop r13	       137	pingpong.c	FUNCTION_2
0x40001b2	            0x415e	                                 pop r14	       137	pingpong.c	FUNCTION_2
0x40001b4	            0x415f	                                 pop r15	       137	pingpong.c	FUNCTION_2
0x40001b6	            0xffe0	                                 jmp rax	       134	pingpong.c	FUNCTION_2	ELSE_6	IF_11
0x40001b8	     0xf1f84000000	                   nop dword [rax + rax]	       134	pingpong.c	FUNCTION_2	ELSE_6	IF_11
0x40001c0	    0x488d35000000	                   lea rsi, [0x040001c7]	        92	pingpong.c	FUNCTION_2	IF_1	CALL_2
0x40001c7	            0x31c0	                            xor eax, eax	        92	pingpong.c	FUNCTION_2	IF_1	CALL_2
0x40001c9	          0x4c89f7	                            mov rdi, r14	        92	pingpong.c	FUNCTION_2	IF_1	CALL_2
0x40001cc	      0xe800000000	                          call 0x40001d1	        92	pingpong.c	FUNCTION_2	IF_1	CALL_2
0x40001d1	      0xb81c000000	                           mov eax, 0x1c	        93	pingpong.c	FUNCTION_2	IF_1
0x40001d6	        0x4883c408	                              add rsp, 8	       137	pingpong.c	FUNCTION_2
0x40001da	              0x5b	                                 pop rbx	       137	pingpong.c	FUNCTION_2
0x40001db	              0x5d	                                 pop rbp	       137	pingpong.c	FUNCTION_2
0x40001dc	            0x415c	                                 pop r12	       137	pingpong.c	FUNCTION_2
0x40001de	            0x415d	                                 pop r13	       137	pingpong.c	FUNCTION_2
0x40001e0	            0x415e	                                 pop r14	       137	pingpong.c	FUNCTION_2
0x40001e2	            0x415f	                                 pop r15	       137	pingpong.c	FUNCTION_2
0x40001e4	              0xc3	                                     ret	       137	pingpong.c	FUNCTION_2
0x40001e5	           0xf1f00	                         nop dword [rax]	       137	pingpong.c	FUNCTION_2
0x40001e8	      0x48837d0000	                      cmp qword [rbp], 0	       519	pingpong.c	FUNCTION_10
0x40001ed	            0x740a	                            je 0x40001f9	       519	pingpong.c	FUNCTION_10
0x40001ef	        0x488b4508	                mov rax, qword [rbp + 8]	       520	pingpong.c	FUNCTION_10
0x40001f3	        0x48394510	            cmp qword [rbp + 0x10], rax 	       520	pingpong.c	FUNCTION_10
0x40001f7	            0x726f	                            jb 0x4000268	       520	pingpong.c	FUNCTION_10
0x40001f9	            0x31f6	                            xor esi, esi	       109	pingpong.c	FUNCTION_2	ELSE_3	IF_6	CALL_5
0x40001fb	          0x4889df	                            mov rdi, rbx	       109	pingpong.c	FUNCTION_2	ELSE_3	IF_6	CALL_5
0x40001fe	      0xe800000000	                          call 0x4000203	       109	pingpong.c	FUNCTION_2	ELSE_3	IF_6	CALL_5
0x4000203	            0x84c0	                             test al, al	       109	pingpong.c	FUNCTION_2	ELSE_3	IF_6	CALL_5
0x4000205	            0x746c	                            je 0x4000273	       109	pingpong.c	FUNCTION_2	ELSE_3	IF_6	CALL_5
0x4000207	          0x4584ed	                         test r13b, r13b	       118	pingpong.c	FUNCTION_2	IF_7
0x400020a	            0x7495	                            je 0x40001a1	       118	pingpong.c	FUNCTION_2	IF_7
0x400020c	         0xf1f4000	                         nop dword [rax]	       118	pingpong.c	FUNCTION_2	IF_7
0x4000210	    0x41bc01000000	                             mov r12d, 1	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x4000216	          0x4889df	                            mov rdi, rbx	       120	pingpong.c	FUNCTION_2	IF_7	IF_8	CALL_7
0x4000219	      0xe800000000	                          call 0x400021e	       120	pingpong.c	FUNCTION_2	IF_7	IF_8	CALL_7
0x400021e	            0x89c2	                            mov edx, eax	       120	pingpong.c	FUNCTION_2	IF_7	IF_8	CALL_7
0x4000220	      0xb82a000000	                           mov eax, 0x2a	       121	pingpong.c	FUNCTION_2	IF_7	IF_8
0x4000225	            0x85d2	                           test edx, edx	       120	pingpong.c	FUNCTION_2	IF_7	IF_8	CALL_7
0x4000227	            0x75ad	                           jne 0x40001d6	       120	pingpong.c	FUNCTION_2	IF_7	IF_8	CALL_7
0x4000229	      0xe800000000	                          call 0x400022e	       123	pingpong.c	FUNCTION_2	IF_7	CALL_9
0x400022e	          0x4c89f7	                            mov rdi, r14	       123	pingpong.c	FUNCTION_2	IF_7	CALL_9
0x4000231	          0x4889c6	                            mov rsi, rax	       123	pingpong.c	FUNCTION_2	IF_7	CALL_9
0x4000234	      0xe800000000	                          call 0x4000239	       123	pingpong.c	FUNCTION_2	IF_7	CALL_9
0x4000239	            0x85c0	                           test eax, eax	       125	pingpong.c	FUNCTION_2	IF_7	IF_9
0x400023b	     0xf8418ffffff	                            je 0x4000159	       125	pingpong.c	FUNCTION_2	IF_7	IF_9
0x4000241	            0xeb93	                           jmp 0x40001d6	       125	pingpong.c	FUNCTION_2	IF_7	IF_9
0x4000243	       0xf1f440000	                   nop dword [rax + rax]	       125	pingpong.c	FUNCTION_2	IF_7	IF_9
0x4000248	          0x4585e4	                         test r12d, r12d	       133	pingpong.c	FUNCTION_2	ELSE_6	IF_11
0x400024b	     0xf8550ffffff	                           jne 0x40001a1	       133	pingpong.c	FUNCTION_2	ELSE_6	IF_11
0x4000251	        0x4883c408	                              add rsp, 8	       137	pingpong.c	FUNCTION_2
0x4000255	            0x31c0	                            xor eax, eax	       137	pingpong.c	FUNCTION_2
0x4000257	              0x5b	                                 pop rbx	       137	pingpong.c	FUNCTION_2
0x4000258	              0x5d	                                 pop rbp	       137	pingpong.c	FUNCTION_2
0x4000259	            0x415c	                                 pop r12	       137	pingpong.c	FUNCTION_2
0x400025b	            0x415d	                                 pop r13	       137	pingpong.c	FUNCTION_2
0x400025d	            0x415e	                                 pop r14	       137	pingpong.c	FUNCTION_2
0x400025f	            0x415f	                                 pop r15	       137	pingpong.c	FUNCTION_2
0x4000261	              0xc3	                                     ret	       137	pingpong.c	FUNCTION_2
0x4000262	    0x660f1f440000	                    nop word [rax + rax]	       137	pingpong.c	FUNCTION_2
0x4000268	          0x4584ed	                         test r13b, r13b	       118	pingpong.c	FUNCTION_2	IF_7
0x400026b	     0xf8430ffffff	                            je 0x40001a1	       118	pingpong.c	FUNCTION_2	IF_7
0x4000271	            0xeb9d	                           jmp 0x4000210	       118	pingpong.c	FUNCTION_2	IF_7
0x4000273	          0x83cfff	                      or edi, 0xffffffff	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x4000276	      0x48837d3000	               cmp qword [rbp + 0x30], 0	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x400027b	            0x89fa	                            mov edx, edi	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x400027d	        0x410f45d7	                        cmovne edx, r15d	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x4000281	        0x410f44ff	                         cmove edi, r15d	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
0x4000285	      0xe9b6feffff	                           jmp 0x4000140	       113	pingpong.c	FUNCTION_2	ELSE_4	CALL_6
Curl_pp_vsendf	SWITCH,0:ELSE,1:functions,0:CALL,16:IF,7:DO,0:FOR,0:WHILE,0	100
0x40002d0	            0x4156	                                push r14	       164	pingpong.c	FUNCTION_4
0x40002d2	            0x4155	                                push r13	       164	pingpong.c	FUNCTION_4
0x40002d4	            0x4154	                                push r12	       164	pingpong.c	FUNCTION_4
0x40002d6	              0x55	                                push rbp	       164	pingpong.c	FUNCTION_4
0x40002d7	              0x53	                                push rbx	       164	pingpong.c	FUNCTION_4
0x40002d8	        0x4883ec20	                           sub rsp, 0x20	       164	pingpong.c	FUNCTION_4
0x40002dc	        0x488b6f58	            mov rbp, qword [rdi + 0x58] 	       170	pingpong.c	FUNCTION_4
0x40002e0	    0x64488b042528	                mov rax, qword fs:[0x28]	       164	pingpong.c	FUNCTION_4
0x40002e9	      0x4889442418	             mov qword [rsp + 0x18], rax	       164	pingpong.c	FUNCTION_4
0x40002ee	            0x31c0	                            xor eax, eax	       164	pingpong.c	FUNCTION_4
0x40002f0	      0xb837000000	                           mov eax, 0x37	       183	pingpong.c	FUNCTION_4	IF_1
0x40002f5	          0x4885ed	                           test rbp, rbp	       181	pingpong.c	FUNCTION_4	IF_1
0x40002f8	     0xf84d2000000	                            je 0x40003d0	       181	pingpong.c	FUNCTION_4	IF_1
0x40002fe	          0x4889fb	                            mov rbx, rdi	       181	pingpong.c	FUNCTION_4	IF_1
0x4000301	    0x488d3d000000	                   lea rdi, [0x04000308]	       187	pingpong.c	FUNCTION_4	CALL_4
0x4000308	            0x31c0	                            xor eax, eax	       187	pingpong.c	FUNCTION_4	CALL_4
0x400030a	          0x4989d5	                            mov r13, rdx	       187	pingpong.c	FUNCTION_4	CALL_4
0x400030d	      0xe800000000	                          call 0x4000312	       187	pingpong.c	FUNCTION_4	CALL_4
0x4000312	          0x4885c0	                           test rax, rax	       188	pingpong.c	FUNCTION_4	IF_2
0x4000315	          0x4989c4	                            mov r12, rax	       187	pingpong.c	FUNCTION_4	CALL_4
0x4000318	     0xf84da000000	                            je 0x40003f8	       188	pingpong.c	FUNCTION_4	IF_2
0x400031e	          0x4c89ee	                            mov rsi, r13	       191	pingpong.c	FUNCTION_4	CALL_5
0x4000321	          0x4889c7	                            mov rdi, rax	       191	pingpong.c	FUNCTION_4	CALL_5
0x4000324	      0xe800000000	                          call 0x4000329	       191	pingpong.c	FUNCTION_4	CALL_5
0x4000329	    0x4c8b35000000	            mov r14, qword [0x04000330] 	       192	pingpong.c	FUNCTION_4	CALL_6
0x4000330	          0x4989c5	                            mov r13, rax	       191	pingpong.c	FUNCTION_4	CALL_5
0x4000333	          0x4c89e7	                            mov rdi, r12	       192	pingpong.c	FUNCTION_4	CALL_6
0x4000336	          0x41ff16	                        call qword [r14]	       192	pingpong.c	FUNCTION_4	CALL_6
0x4000339	          0x4d85ed	                           test r13, r13	       193	pingpong.c	FUNCTION_4	IF_3
0x400033c	     0xf84b6000000	                            je 0x40003f8	       193	pingpong.c	FUNCTION_4	IF_3
0x4000342	          0x4c89ef	                            mov rdi, r13	       197	pingpong.c	FUNCTION_4	CALL_7
0x4000345	    0x48c744241000	               mov qword [rsp + 0x10], 0	       196	pingpong.c	FUNCTION_4
0x400034e	      0xe800000000	                          call 0x4000353	       197	pingpong.c	FUNCTION_4	CALL_7
0x4000353	          0x4989c4	                            mov r12, rax	       197	pingpong.c	FUNCTION_4	CALL_7
0x4000356	        0x488b4358	            mov rax, qword [rbx + 0x58] 	       142	pingpong.c	FUNCTION_3
0x400035a	    0x48c743100000	               mov qword [rbx + 0x10], 0	       143	pingpong.c	FUNCTION_3
0x4000362	          0x488b00	                    mov rax, qword [rax]	       144	pingpong.c	FUNCTION_3
0x4000365	    0x488b80200d00	           mov rax, qword [rax + 0xd20] 	       144	pingpong.c	FUNCTION_3
0x400036c	        0xc6432001	                mov byte [rbx + 0x20], 1	       145	pingpong.c	FUNCTION_3
0x4000370	        0x48894318	             mov qword [rbx + 0x18], rax	       144	pingpong.c	FUNCTION_3
0x4000374	      0xe800000000	                          call 0x4000379	       146	pingpong.c	FUNCTION_3	CALL_1
0x4000379	    0x8bb558020000	           mov esi, dword [rbp + 0x258] 	       211	pingpong.c	FUNCTION_4	CALL_11
0x400037f	      0x4c8d442410	                    lea r8, [rsp + 0x10]	       211	pingpong.c	FUNCTION_4	CALL_11
0x4000384	        0x48895348	             mov qword [rbx + 0x48], rdx	       146	pingpong.c	FUNCTION_3	CALL_1
0x4000388	        0x48894340	             mov qword [rbx + 0x40], rax	       146	pingpong.c	FUNCTION_3	CALL_1
0x400038c	          0x4c89e1	                            mov rcx, r12	       211	pingpong.c	FUNCTION_4	CALL_11
0x400038f	          0x4c89ea	                            mov rdx, r13	       211	pingpong.c	FUNCTION_4	CALL_11
0x4000392	          0x4889ef	                            mov rdi, rbp	       211	pingpong.c	FUNCTION_4	CALL_11
0x4000395	      0xe800000000	                          call 0x400039a	       211	pingpong.c	FUNCTION_4	CALL_11
0x400039a	            0x85c0	                           test eax, eax	       219	pingpong.c	FUNCTION_4	IF_5
0x400039c	     0xf857e000000	                           jne 0x4000420	       219	pingpong.c	FUNCTION_4	IF_5
0x40003a2	        0x488b7d00	                    mov rdi, qword [rbp]	       224	pingpong.c	FUNCTION_4	IF_6
0x40003a6	    0x80bfe8070000	               cmp byte [rdi + 0x7e8], 0	       224	pingpong.c	FUNCTION_4	IF_6
0x40003ad	            0x7551	                           jne 0x4000400	       224	pingpong.c	FUNCTION_4	IF_6
0x40003af	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       228	pingpong.c	FUNCTION_4	IF_7
0x40003b4	          0x4c39e0	                            cmp rax, r12	       228	pingpong.c	FUNCTION_4	IF_7
0x40003b7	            0x7477	                            je 0x4000430	       228	pingpong.c	FUNCTION_4	IF_7
0x40003b9	        0x4c896338	             mov qword [rbx + 0x38], r12	       231	pingpong.c	FUNCTION_4	IF_7
0x40003bd	          0x4929c4	                            sub r12, rax	       232	pingpong.c	FUNCTION_4	IF_7
0x40003c0	        0x4c896b28	             mov qword [rbx + 0x28], r13	       230	pingpong.c	FUNCTION_4	IF_7
0x40003c4	        0x4c896330	             mov qword [rbx + 0x30], r12	       232	pingpong.c	FUNCTION_4	IF_7
0x40003c8	            0x31c0	                            xor eax, eax	       241	pingpong.c	FUNCTION_4
0x40003ca	    0x660f1f440000	                    nop word [rax + rax]	       241	pingpong.c	FUNCTION_4
0x40003d0	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       242	pingpong.c	FUNCTION_4
0x40003d5	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       242	pingpong.c	FUNCTION_4
0x40003de	     0xf857e000000	                           jne 0x4000462	       242	pingpong.c	FUNCTION_4
0x40003e4	        0x4883c420	                           add rsp, 0x20	       242	pingpong.c	FUNCTION_4
0x40003e8	              0x5b	                                 pop rbx	       242	pingpong.c	FUNCTION_4
0x40003e9	              0x5d	                                 pop rbp	       242	pingpong.c	FUNCTION_4
0x40003ea	            0x415c	                                 pop r12	       242	pingpong.c	FUNCTION_4
0x40003ec	            0x415d	                                 pop r13	       242	pingpong.c	FUNCTION_4
0x40003ee	            0x415e	                                 pop r14	       242	pingpong.c	FUNCTION_4
0x40003f0	              0xc3	                                     ret	       242	pingpong.c	FUNCTION_4
0x40003f1	     0xf1f80000000	                         nop dword [rax]	       242	pingpong.c	FUNCTION_4
0x40003f8	      0xb81b000000	                           mov eax, 0x1b	       189	pingpong.c	FUNCTION_4	IF_2
0x40003fd	            0xebd1	                           jmp 0x40003d0	       189	pingpong.c	FUNCTION_4	IF_2
0x40003ff	              0x90	                                     nop	       189	pingpong.c	FUNCTION_4	IF_2
0x4000400	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       225	pingpong.c	FUNCTION_4	IF_6	CALL_14
0x4000405	          0x4989e8	                             mov r8, rbp	       225	pingpong.c	FUNCTION_4	IF_6	CALL_14
0x4000408	          0x4c89ea	                            mov rdx, r13	       225	pingpong.c	FUNCTION_4	IF_6	CALL_14
0x400040b	      0xbe02000000	                              mov esi, 2	       225	pingpong.c	FUNCTION_4	IF_6	CALL_14
0x4000410	      0xe800000000	                          call 0x4000415	       225	pingpong.c	FUNCTION_4	IF_6	CALL_14
0x4000415	            0xeb98	                           jmp 0x40003af	       225	pingpong.c	FUNCTION_4	IF_6	CALL_14
0x4000417	    0x660f1f840000	                    nop word [rax + rax]	       225	pingpong.c	FUNCTION_4	IF_6	CALL_14
0x4000420	        0x8944240c	              mov dword [rsp + 0xc], eax	       225	pingpong.c	FUNCTION_4	IF_6	CALL_14
0x4000424	          0x4c89ef	                            mov rdi, r13	       220	pingpong.c	FUNCTION_4	IF_5	CALL_13
0x4000427	          0x41ff16	                        call qword [r14]	       220	pingpong.c	FUNCTION_4	IF_5	CALL_13
0x400042a	        0x8b44240c	              mov eax, dword [rsp + 0xc]	       221	pingpong.c	FUNCTION_4	IF_5
0x400042e	            0xeba0	                           jmp 0x40003d0	       221	pingpong.c	FUNCTION_4	IF_5
0x4000430	          0x4c89ef	                            mov rdi, r13	       235	pingpong.c	FUNCTION_4	ELSE_1	CALL_15
0x4000433	          0x41ff16	                        call qword [r14]	       235	pingpong.c	FUNCTION_4	ELSE_1	CALL_15
0x4000436	    0x48c743280000	               mov qword [rbx + 0x28], 0	       236	pingpong.c	FUNCTION_4	ELSE_1
0x400043e	    0x48c743380000	               mov qword [rbx + 0x38], 0	       237	pingpong.c	FUNCTION_4	ELSE_1
0x4000446	    0x48c743300000	               mov qword [rbx + 0x30], 0	       237	pingpong.c	FUNCTION_4	ELSE_1
0x400044e	      0xe800000000	                          call 0x4000453	       238	pingpong.c	FUNCTION_4	ELSE_1	CALL_16
0x4000453	        0x48894340	             mov qword [rbx + 0x40], rax	       238	pingpong.c	FUNCTION_4	ELSE_1	CALL_16
0x4000457	        0x48895348	             mov qword [rbx + 0x48], rdx	       238	pingpong.c	FUNCTION_4	ELSE_1	CALL_16
0x400045b	            0x31c0	                            xor eax, eax	       241	pingpong.c	FUNCTION_4
0x400045d	      0xe96effffff	                           jmp 0x40003d0	       241	pingpong.c	FUNCTION_4
0x4000462	      0xe800000000	                          call 0x4000467	       242	pingpong.c	FUNCTION_4
Curl_pp_sendf	SWITCH,0:ELSE,0:functions,0:CALL,3:IF,0:DO,0:FOR,0:WHILE,0	32
0x4000470	    0x4881ecd80000	                           sub rsp, 0xd8	       257	pingpong.c	FUNCTION_5
0x4000477	            0x84c0	                             test al, al	       257	pingpong.c	FUNCTION_5
0x4000479	      0x4889542430	             mov qword [rsp + 0x30], rdx	       257	pingpong.c	FUNCTION_5
0x400047e	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       257	pingpong.c	FUNCTION_5
0x4000483	      0x4c89442440	              mov qword [rsp + 0x40], r8	       257	pingpong.c	FUNCTION_5
0x4000488	      0x4c894c2448	              mov qword [rsp + 0x48], r9	       257	pingpong.c	FUNCTION_5
0x400048d	            0x7437	                            je 0x40004c6	       257	pingpong.c	FUNCTION_5
0x400048f	       0xf29442450	       movaps xmmword [rsp + 0x50], xmm0	       257	pingpong.c	FUNCTION_5
0x4000494	       0xf294c2460	       movaps xmmword [rsp + 0x60], xmm1	       257	pingpong.c	FUNCTION_5
0x4000499	       0xf29542470	       movaps xmmword [rsp + 0x70], xmm2	       257	pingpong.c	FUNCTION_5
0x400049e	     0xf299c248000	       movaps xmmword [rsp + 0x80], xmm3	       257	pingpong.c	FUNCTION_5
0x40004a6	     0xf29a4249000	       movaps xmmword [rsp + 0x90], xmm4	       257	pingpong.c	FUNCTION_5
0x40004ae	     0xf29ac24a000	       movaps xmmword [rsp + 0xa0], xmm5	       257	pingpong.c	FUNCTION_5
0x40004b6	     0xf29b424b000	       movaps xmmword [rsp + 0xb0], xmm6	       257	pingpong.c	FUNCTION_5
0x40004be	     0xf29bc24c000	       movaps xmmword [rsp + 0xc0], xmm7	       257	pingpong.c	FUNCTION_5
0x40004c6	    0x64488b042528	                mov rax, qword fs:[0x28]	       257	pingpong.c	FUNCTION_5
0x40004cf	      0x4889442418	             mov qword [rsp + 0x18], rax	       257	pingpong.c	FUNCTION_5
0x40004d4	            0x31c0	                            xor eax, eax	       257	pingpong.c	FUNCTION_5
0x40004d6	    0x488d8424e000	                   lea rax, [rsp + 0xe0]	       260	pingpong.c	FUNCTION_5	CALL_1
0x40004de	          0x4889e2	                            mov rdx, rsp	       262	pingpong.c	FUNCTION_5	CALL_2
0x40004e1	      0x4889442408	                mov qword [rsp + 8], rax	       260	pingpong.c	FUNCTION_5	CALL_1
0x40004e6	      0x488d442420	                   lea rax, [rsp + 0x20]	       260	pingpong.c	FUNCTION_5	CALL_1
0x40004eb	    0xc70424100000	                   mov dword [rsp], 0x10	       260	pingpong.c	FUNCTION_5	CALL_1
0x40004f2	    0xc74424043000	               mov dword [rsp + 4], 0x30	       260	pingpong.c	FUNCTION_5	CALL_1
0x40004fa	      0x4889442410	             mov qword [rsp + 0x10], rax	       260	pingpong.c	FUNCTION_5	CALL_1
0x40004ff	      0xe800000000	                          call 0x4000504	       262	pingpong.c	FUNCTION_5	CALL_2
0x4000504	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       267	pingpong.c	FUNCTION_5
0x4000509	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       267	pingpong.c	FUNCTION_5
0x4000512	            0x7508	                           jne 0x400051c	       267	pingpong.c	FUNCTION_5
0x4000514	    0x4881c4d80000	                           add rsp, 0xd8	       267	pingpong.c	FUNCTION_5
0x400051b	              0xc3	                                     ret	       267	pingpong.c	FUNCTION_5
0x400051c	      0xe800000000	                          call 0x4000521	       267	pingpong.c	FUNCTION_5
Curl_pp_getsock	SWITCH,0:ELSE,0:functions,0:CALL,2:IF,2:DO,0:FOR,0:WHILE,0	11
0x4000910	            0x31c0	                            xor eax, eax	       473	pingpong.c	FUNCTION_7	IF_1
0x4000912	            0x85d2	                           test edx, edx	       472	pingpong.c	FUNCTION_7	IF_1
0x4000914	            0x741d	                            je 0x4000933	       472	pingpong.c	FUNCTION_7	IF_1
0x4000916	        0x488b4758	            mov rax, qword [rdi + 0x58] 	       475	pingpong.c	FUNCTION_7
0x400091a	      0x48837f3001	               cmp qword [rdi + 0x30], 1	       483	pingpong.c	FUNCTION_7	CALL_2
0x400091f	    0x8b8058020000	           mov eax, dword [rax + 0x258] 	       475	pingpong.c	FUNCTION_7
0x4000925	            0x8906	                    mov dword [rsi], eax	       475	pingpong.c	FUNCTION_7
0x4000927	            0x19c0	                            sbb eax, eax	       483	pingpong.c	FUNCTION_7	CALL_2
0x4000929	      0x250100ffff	                     and eax, 0xffff0001	       483	pingpong.c	FUNCTION_7	CALL_2
0x400092e	       0x500000100	                        add eax, 0x10000	       483	pingpong.c	FUNCTION_7	CALL_2
0x4000933	            0xf3c3	                                     ret	       484	pingpong.c	FUNCTION_7
Curl_pp_disconnect	SWITCH,0:ELSE,0:functions,0:CALL,1:IF,0:DO,0:FOR,0:WHILE,0	9
0x40009f0	    0x488b05000000	            mov rax, qword [0x040009f7] 	       512	pingpong.c	FUNCTION_9	CALL_1
0x40009f7	              0x53	                                push rbx	       511	pingpong.c	FUNCTION_9
0x40009f8	          0x4889fb	                            mov rbx, rdi	       511	pingpong.c	FUNCTION_9
0x40009fb	          0x488b3f	                    mov rdi, qword [rdi]	       512	pingpong.c	FUNCTION_9	CALL_1
0x40009fe	            0xff10	                        call qword [rax]	       512	pingpong.c	FUNCTION_9	CALL_1
0x4000a00	    0x48c703000000	                      mov qword [rbx], 0	       513	pingpong.c	FUNCTION_9
0x4000a07	            0x31c0	                            xor eax, eax	       515	pingpong.c	FUNCTION_9
0x4000a09	              0x5b	                                 pop rbx	       515	pingpong.c	FUNCTION_9
0x4000a0a	              0xc3	                                     ret	       515	pingpong.c	FUNCTION_9
Curl_pp_readresp	SWITCH,0:ELSE,7:functions,0:CALL,17:IF,20:DO,0:FOR,1:WHILE,1	240
0x4000530	            0x4157	                                push r15	       278	pingpong.c	FUNCTION_6
0x4000532	            0x4156	                                push r14	       278	pingpong.c	FUNCTION_6
0x4000534	    0x41bf01000000	                             mov r15d, 1	       280	pingpong.c	FUNCTION_6
0x400053a	            0x4155	                                push r13	       278	pingpong.c	FUNCTION_6
0x400053c	            0x4154	                                push r12	       278	pingpong.c	FUNCTION_6
0x400053e	          0x4989f6	                            mov r14, rsi	       278	pingpong.c	FUNCTION_6
0x4000541	              0x55	                                push rbp	       278	pingpong.c	FUNCTION_6
0x4000542	              0x53	                                push rbx	       278	pingpong.c	FUNCTION_6
0x4000543	        0x4883ec58	                           sub rsp, 0x58	       278	pingpong.c	FUNCTION_6
0x4000547	    0x64488b042528	                mov rax, qword fs:[0x28]	       278	pingpong.c	FUNCTION_6
0x4000550	      0x4889442448	             mov qword [rsp + 0x48], rax	       278	pingpong.c	FUNCTION_6
0x4000555	            0x31c0	                            xor eax, eax	       278	pingpong.c	FUNCTION_6
0x4000557	        0x488b4658	            mov rax, qword [rsi + 0x58] 	       283	pingpong.c	FUNCTION_6
0x400055b	      0x4889542418	             mov qword [rsp + 0x18], rdx	       278	pingpong.c	FUNCTION_6
0x4000560	        0x897c2424	             mov dword [rsp + 0x24], edi	       278	pingpong.c	FUNCTION_6
0x4000564	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       324	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	CALL_5
0x4000569	      0x48894c2430	             mov qword [rsp + 0x30], rcx	       278	pingpong.c	FUNCTION_6
0x400056e	          0x488b28	                    mov rbp, qword [rax]	       284	pingpong.c	FUNCTION_6
0x4000571	      0x4889442408	                mov qword [rsp + 8], rax	       283	pingpong.c	FUNCTION_6
0x4000576	            0x31c0	                            xor eax, eax	       286	pingpong.c	FUNCTION_6
0x4000578	      0x48897c2428	             mov qword [rsp + 0x28], rdi	       324	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	CALL_5
0x400057d	    0x4c8bad200d00	           mov r13, qword [rbp + 0xd20] 	       285	pingpong.c	FUNCTION_6
0x4000584	    0xc70200000000	                      mov dword [rdx], 0	       288	pingpong.c	FUNCTION_6
0x400058a	    0x48c701000000	                      mov qword [rcx], 0	       289	pingpong.c	FUNCTION_6
0x4000591	        0x488b5610	            mov rdx, qword [rsi + 0x10] 	       291	pingpong.c	FUNCTION_6
0x4000595	    0x488b8d900700	           mov rcx, qword [rbp + 0x790] 	       291	pingpong.c	FUNCTION_6
0x400059c	      0x498d5c1500	                    lea rbx, [r13 + rdx]	       291	pingpong.c	FUNCTION_6
0x40005a1	          0x4989dc	                            mov r12, rbx	       294	pingpong.c	FUNCTION_6
0x40005a4	        0x4c2b6618	             sub r12, qword [rsi + 0x18]	       294	pingpong.c	FUNCTION_6
0x40005a8	            0xeb7a	                           jmp 0x4000624	       296	pingpong.c	FUNCTION_6	WHILE_1
0x40005aa	    0x660f1f440000	                    nop word [rax + rax]	       296	pingpong.c	FUNCTION_6	WHILE_1
0x40005b0	        0x498b5608	                mov rdx, qword [r14 + 8]	       307	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2
0x40005b4	      0x498d440d01	                lea rax, [r13 + rcx + 1]	       307	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2
0x40005b9	        0x488d3c13	                    lea rdi, [rbx + rdx]	       307	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2
0x40005bd	          0x4839c7	                            cmp rdi, rax	       307	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2
0x40005c0	     0xf871a020000	                            ja 0x40007e0	       307	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2
0x40005c6	          0x4889df	                            mov rdi, rbx	        53	string3.h	FUNCTION_11	CALL_3
0x40005c9	      0xe800000000	                          call 0x40005ce	        53	string3.h	FUNCTION_11	CALL_3
0x40005ce	        0x498b4608	                mov rax, qword [r14 + 8]	       312	pingpong.c	FUNCTION_6	WHILE_1	IF_1
0x40005d2	          0x498b3e	                    mov rdi, qword [r14]	       313	pingpong.c	FUNCTION_6	WHILE_1	IF_1	CALL_3
0x40005d5	      0x4889442440	             mov qword [rsp + 0x40], rax	       312	pingpong.c	FUNCTION_6	WHILE_1	IF_1
0x40005da	    0x488b05000000	            mov rax, qword [0x040005e1] 	       313	pingpong.c	FUNCTION_6	WHILE_1	IF_1	CALL_3
0x40005e1	            0xff10	                        call qword [rax]	       313	pingpong.c	FUNCTION_6	WHILE_1	IF_1	CALL_3
0x40005e3	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       346	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7
0x40005e8	    0x49c706000000	                      mov qword [r14], 0	       314	pingpong.c	FUNCTION_6	WHILE_1	IF_1
0x40005ef	    0x49c746080000	                  mov qword [r14 + 8], 0	       315	pingpong.c	FUNCTION_6	WHILE_1	IF_1
0x40005f7	          0x4885c0	                           test rax, rax	       346	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7
0x40005fa	     0xf8fbe000000	                            jg 0x40006be	       346	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7
0x4000600	    0x488d35000000	                   lea rsi, [0x04000607]	       349	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7	CALL_8
0x4000607	            0x31c0	                            xor eax, eax	       349	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7	CALL_8
0x4000609	          0x4889ef	                            mov rdi, rbp	       349	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7	CALL_8
0x400060c	          0x4531ff	                          xor r15d, r15d	       347	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7
0x400060f	      0xe800000000	                          call 0x4000614	       349	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7	CALL_8
0x4000614	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	       349	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7	CALL_8
0x4000618	    0x488b8d900700	           mov rcx, qword [rbp + 0x790] 	       349	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7	CALL_8
0x400061f	      0xb838000000	                           mov eax, 0x38	       348	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7
0x4000624	          0x4839d1	                            cmp rcx, rdx	       296	pingpong.c	FUNCTION_6	WHILE_1
0x4000627	            0x7657	                           jbe 0x4000680	       296	pingpong.c	FUNCTION_6	WHILE_1
0x4000629	            0x85c0	                           test eax, eax	       296	pingpong.c	FUNCTION_6	WHILE_1
0x400062b	            0x7553	                           jne 0x4000680	       296	pingpong.c	FUNCTION_6	WHILE_1
0x400062d	          0x4584ff	                         test r15b, r15b	       296	pingpong.c	FUNCTION_6	WHILE_1
0x4000630	            0x744e	                            je 0x4000680	       296	pingpong.c	FUNCTION_6	WHILE_1
0x4000632	          0x498b36	                    mov rsi, qword [r14]	       299	pingpong.c	FUNCTION_6	WHILE_1	IF_1
0x4000635	          0x4885f6	                           test rsi, rsi	       299	pingpong.c	FUNCTION_6	WHILE_1	IF_1
0x4000638	     0xf8572ffffff	                           jne 0x40005b0	       299	pingpong.c	FUNCTION_6	WHILE_1	IF_1
0x400063e	      0x4c8b442428	              mov r8, qword [rsp + 0x28]	       324	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	CALL_5
0x4000643	        0x8b742424	            mov esi, dword [rsp + 0x24] 	       324	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	CALL_5
0x4000647	          0x4829d1	                            sub rcx, rdx	       324	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	CALL_5
0x400064a	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       324	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	CALL_5
0x400064f	          0x4889da	                            mov rdx, rbx	       324	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	CALL_5
0x4000652	      0xe800000000	                          call 0x4000657	       324	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	CALL_5
0x4000657	          0x83f851	                           cmp eax, 0x51	       331	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	IF_3
0x400065a	     0xf845c020000	                            je 0x40008bc	       331	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	IF_3
0x4000660	            0x85c0	                           test eax, eax	       334	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	IF_4
0x4000662	            0x744c	                            je 0x40006b0	       334	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	IF_4
0x4000664	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	       334	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	IF_4
0x4000668	    0x488b8d900700	           mov rcx, qword [rbp + 0x790] 	       334	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	IF_4
0x400066f	          0x4531ff	                          xor r15d, r15d	       341	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	IF_5
0x4000672	          0x4839d1	                            cmp rcx, rdx	       296	pingpong.c	FUNCTION_6	WHILE_1
0x4000675	            0x77b2	                            ja 0x4000629	       296	pingpong.c	FUNCTION_6	WHILE_1
0x4000677	    0x660f1f840000	                    nop word [rax + rax]	       296	pingpong.c	FUNCTION_6	WHILE_1
0x4000680	      0x41c6462000	                mov byte [r14 + 0x20], 0	       461	pingpong.c	FUNCTION_6
0x4000685	      0x488b5c2448	            mov rbx, qword [rsp + 0x48] 	       464	pingpong.c	FUNCTION_6
0x400068a	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       464	pingpong.c	FUNCTION_6
0x4000693	     0xf856e020000	                           jne 0x4000907	       464	pingpong.c	FUNCTION_6
0x4000699	        0x4883c458	                           add rsp, 0x58	       464	pingpong.c	FUNCTION_6
0x400069d	              0x5b	                                 pop rbx	       464	pingpong.c	FUNCTION_6
0x400069e	              0x5d	                                 pop rbp	       464	pingpong.c	FUNCTION_6
0x400069f	            0x415c	                                 pop r12	       464	pingpong.c	FUNCTION_6
0x40006a1	            0x415d	                                 pop r13	       464	pingpong.c	FUNCTION_6
0x40006a3	            0x415e	                                 pop r14	       464	pingpong.c	FUNCTION_6
0x40006a5	            0x415f	                                 pop r15	       464	pingpong.c	FUNCTION_6
0x40006a7	              0xc3	                                     ret	       464	pingpong.c	FUNCTION_6
0x40006a8	     0xf1f84000000	                   nop dword [rax + rax]	       464	pingpong.c	FUNCTION_6
0x40006b0	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       346	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7
0x40006b5	          0x4885c0	                           test rax, rax	       346	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7
0x40006b8	     0xf8e42ffffff	                           jle 0x4000600	       346	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7
0x40006be	        0x4c8d4b01	                       lea r9, [rbx + 1]	       346	pingpong.c	FUNCTION_6	WHILE_1	ELSE_2	IF_7
0x40006c2	          0x4531ff	                          xor r15d, r15d	       278	pingpong.c	FUNCTION_6
0x40006c5	    0x480185f00000	            add qword [rbp + 0xf0], rax 	       359	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3
0x40006cc	      0x48896c2410	             mov qword [rsp + 0x10], rbp	       278	pingpong.c	FUNCTION_6
0x40006d1	        0x49014610	            add qword [r14 + 0x10], rax 	       361	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3
0x40006d5	          0x4c89fd	                            mov rbp, r15	       278	pingpong.c	FUNCTION_6
0x40006d8	      0x4c896c2438	             mov qword [rsp + 0x38], r13	       278	pingpong.c	FUNCTION_6
0x40006dd	          0x4c89cb	                             mov rbx, r9	       278	pingpong.c	FUNCTION_6
0x40006e0	          0x4d89f5	                            mov r13, r14	       278	pingpong.c	FUNCTION_6
0x40006e3	          0x4d89e6	                            mov r14, r12	       278	pingpong.c	FUNCTION_6
0x40006e6	            0xeb6e	                           jmp 0x4000756	       278	pingpong.c	FUNCTION_6
0x40006e8	     0xf1f84000000	                   nop dword [rax + rax]	       278	pingpong.c	FUNCTION_6
0x40006f0	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       372	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_9	IF_10
0x40006f5	    0x80b8e8070000	               cmp byte [rax + 0x7e8], 0	       372	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_9	IF_10
0x40006fc	     0xf85b6000000	                           jne 0x40007b8	       372	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_9	IF_10
0x4000702	        0x498b5518	            mov rdx, qword [r13 + 0x18] 	       381	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	CALL_10
0x4000706	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       381	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	CALL_10
0x400070b	          0x4c89f1	                            mov rcx, r14	       381	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	CALL_10
0x400070e	      0xbe02000000	                              mov esi, 2	       381	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	CALL_10
0x4000713	      0xe800000000	                          call 0x4000718	       381	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	CALL_10
0x4000718	            0x85c0	                           test eax, eax	       383	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_11
0x400071a	     0xf8565ffffff	                           jne 0x4000685	       383	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_11
0x4000720	        0x498b7518	            mov rsi, qword [r13 + 0x18] 	       386	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12	CALL_11
0x4000724	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       386	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12	CALL_11
0x4000729	          0x4c89f2	                            mov rdx, r14	       386	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12	CALL_11
0x400072c	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       386	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12	CALL_11
0x4000731	        0x41ff5568	                 call qword [r13 + 0x68]	       386	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12	CALL_11
0x4000735	            0x84c0	                             test al, al	       386	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12	CALL_11
0x4000737	     0xf85be000000	                           jne 0x40007fb	       386	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12	CALL_11
0x400073d	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       386	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12	CALL_11
0x4000742	        0x4883c501	                              add rbp, 1	       362	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1
0x4000746	        0x49895d18	             mov qword [r13 + 0x18], rbx	       401	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8
0x400074a	          0x4531f6	                          xor r14d, r14d	       400	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8
0x400074d	        0x4883c301	                              add rbx, 1	       400	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8
0x4000751	          0x4839e8	                            cmp rax, rbp	       362	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1
0x4000754	            0x7e1e	                           jle 0x4000774	       362	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1
0x4000756	        0x4983c601	                              add r14, 1	       363	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1
0x400075a	        0x807bff0a	                 cmp byte [rbx - 1], 0xa	       364	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8
0x400075e	        0x4c8d63ff	                      lea r12, [rbx - 1]	       364	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8
0x4000762	          0x4989df	                            mov r15, rbx	       364	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8
0x4000765	            0x7489	                            je 0x40006f0	       364	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8
0x4000767	        0x4883c501	                              add rbp, 1	       362	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1
0x400076b	        0x4883c301	                              add rbx, 1	       362	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1
0x400076f	          0x4839e8	                            cmp rax, rbp	       362	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1
0x4000772	            0x7fe2	                            jg 0x4000756	       362	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1
0x4000774	      0x488b6c2410	            mov rbp, qword [rsp + 0x10] 	       362	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1
0x4000779	          0x4d89f4	                            mov r12, r14	       362	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1
0x400077c	          0x4c89fb	                            mov rbx, r15	       362	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1
0x400077f	          0x4939c4	                            cmp r12, rax	       418	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x4000782	          0x4d89ee	                            mov r14, r13	       418	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x4000785	      0x4c8b6c2438	            mov r13, qword [rsp + 0x38] 	       418	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x400078a	    0x488b8d900700	           mov rcx, qword [rbp + 0x790] 	       418	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x4000791	     0xf842c010000	                            je 0x40008c3	       418	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x4000797	        0x498b5610	            mov rdx, qword [r14 + 0x10] 	       430	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	ELSE_5	IF_16
0x400079b	          0x4889c8	                            mov rax, rcx	       430	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	ELSE_5	IF_16
0x400079e	          0x48d1e8	                              shr rax, 1	       430	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	ELSE_5	IF_16
0x40007a1	          0x4839c2	                            cmp rdx, rax	       430	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	ELSE_5	IF_16
0x40007a4	     0xf8605010000	                           jbe 0x40008af	       430	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	ELSE_5	IF_16
0x40007aa	    0x41bf01000000	                             mov r15d, 1	       430	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	ELSE_5	IF_16
0x40007b0	      0xe9a7000000	                           jmp 0x400085c	       430	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	ELSE_5	IF_16
0x40007b5	           0xf1f00	                         nop dword [rax]	       430	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	ELSE_5	IF_16
0x40007b8	        0x498b5518	            mov rdx, qword [r13 + 0x18] 	       373	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_9	IF_10	CALL_9
0x40007bc	      0x4c8b442408	                 mov r8, qword [rsp + 8]	       373	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_9	IF_10	CALL_9
0x40007c1	          0x4c89f1	                            mov rcx, r14	       373	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_9	IF_10	CALL_9
0x40007c4	      0xbe01000000	                              mov esi, 1	       373	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_9	IF_10	CALL_9
0x40007c9	          0x4889c7	                            mov rdi, rax	       373	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_9	IF_10	CALL_9
0x40007cc	      0xe800000000	                          call 0x40007d1	       373	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_9	IF_10	CALL_9
0x40007d1	      0xe92cffffff	                           jmp 0x4000702	       373	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_9	IF_10	CALL_9
0x40007d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       373	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_9	IF_10	CALL_9
0x40007e0	    0x488d35000000	                   lea rsi, [0x040007e7]	       308	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2	CALL_1
0x40007e7	            0x31c0	                            xor eax, eax	       308	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2	CALL_1
0x40007e9	          0x4889ef	                            mov rdi, rbp	       308	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2	CALL_1
0x40007ec	      0xe800000000	                          call 0x40007f1	       308	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2	CALL_1
0x40007f1	      0xb838000000	                           mov eax, 0x38	       309	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2
0x40007f6	      0xe98afeffff	                           jmp 0x4000685	       309	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2
0x40007fb	          0x4d89ee	                            mov r14, r13	       309	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2
0x40007fe	      0x4c8b6c2438	            mov r13, qword [rsp + 0x38] 	       309	pingpong.c	FUNCTION_6	WHILE_1	IF_1	IF_2
0x4000803	          0x4c89e3	                            mov rbx, r12	       389	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x4000806	        0x498b7618	            mov rsi, qword [r14 + 0x18] 	       389	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x400080a	          0x4989ef	                            mov r15, rbp	       389	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x400080d	      0x488b6c2410	            mov rbp, qword [rsp + 0x10] 	       389	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x4000812	          0x4c89ef	                            mov rdi, r13	        59	string3.h	FUNCTION_12	CALL_3
0x4000815	          0x4829f3	                            sub rbx, rsi	       389	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x4000818	          0x4889da	                            mov rdx, rbx	        59	string3.h	FUNCTION_12	CALL_3
0x400081b	      0xe800000000	                          call 0x4000820	        59	string3.h	FUNCTION_12	CALL_3
0x4000820	          0x4c89e0	                            mov rax, r12	       393	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x4000823	    0x41c6441d0000	                 mov byte [r13 + rbx], 0	       391	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x4000829	      0x488b5c2430	            mov rbx, qword [rsp + 0x30] 	       396	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x400082e	        0x4883c001	                              add rax, 1	       393	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x4000832	        0x4d8d5701	                      lea r10, [r15 + 1]	       394	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x4000836	          0x4531ff	                          xor r15d, r15d	       392	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x4000839	        0x49894618	             mov qword [r14 + 0x18], rax	       393	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x400083d	        0x498b4610	            mov rax, qword [r14 + 0x10] 	       396	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x4000841	          0x488903	                    mov qword [rbx], rax	       396	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x4000844	      0x488b442440	            mov rax, qword [rsp + 0x40] 	       405	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_13
0x4000849	    0x49c746100000	               mov qword [r14 + 0x10], 0	       397	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	FOR_1	IF_8	IF_12
0x4000851	          0x4989c4	                            mov r12, rax	       410	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_13
0x4000854	          0x4d29d4	                            sub r12, r10	       410	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_13
0x4000857	          0x4939c2	                            cmp r10, rax	       405	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_13
0x400085a	            0x7431	                            je 0x400088d	       405	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_13
0x400085c	          0x4d85e4	                           test r12, r12	       441	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18
0x400085f	          0x4c89e7	                            mov rdi, r12	       441	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18
0x4000862	            0x7429	                            je 0x400088d	       441	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18
0x4000864	    0x488b05000000	            mov rax, qword [0x0400086b] 	       443	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18	CALL_16
0x400086b	        0x49897e08	                mov qword [r14 + 8], rdi	       442	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18
0x400086f	            0xff10	                        call qword [rax]	       443	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18	CALL_16
0x4000871	          0x4885c0	                           test rax, rax	       444	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18	IF_19
0x4000874	          0x498906	                    mov qword [r14], rax	       443	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18	CALL_16
0x4000877	     0xf8480000000	                            je 0x40008fd	       444	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18	IF_19
0x400087d	        0x498b7618	            mov rsi, qword [r14 + 0x18] 	        53	string3.h	FUNCTION_11	CALL_3
0x4000881	        0x498b5608	                mov rdx, qword [r14 + 8]	        53	string3.h	FUNCTION_11	CALL_3
0x4000885	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_11	CALL_3
0x4000888	      0xe800000000	                          call 0x400088d	        53	string3.h	FUNCTION_11	CALL_3
0x400088d	    0x49c746100000	               mov qword [r14 + 0x10], 0	       452	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_7	IF_20
0x4000895	        0x4d896e18	             mov qword [r14 + 0x18], r13	       453	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_7	IF_20
0x4000899	          0x4c89eb	                            mov rbx, r13	       285	pingpong.c	FUNCTION_6
0x400089c	    0x488b8d900700	           mov rcx, qword [rbp + 0x790] 	       285	pingpong.c	FUNCTION_6
0x40008a3	            0x31d2	                            xor edx, edx	       453	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_7	IF_20
0x40008a5	            0x31c0	                            xor eax, eax	       453	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_7	IF_20
0x40008a7	          0x4531e4	                          xor r12d, r12d	       454	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_7	IF_20
0x40008aa	      0xe975fdffff	                           jmp 0x4000624	       454	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_7	IF_20
0x40008af	            0x31c0	                            xor eax, eax	       454	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_7	IF_20
0x40008b1	    0x41bf01000000	                             mov r15d, 1	       454	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_7	IF_20
0x40008b7	      0xe968fdffff	                           jmp 0x4000624	       454	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_7	IF_20
0x40008bc	            0x31c0	                            xor eax, eax	       332	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	IF_3
0x40008be	      0xe9c2fdffff	                           jmp 0x4000685	       332	pingpong.c	FUNCTION_6	WHILE_1	ELSE_1	IF_3
0x40008c3	          0x4889c8	                            mov rax, rcx	       418	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x40008c6	        0x48c1e83f	                           shr rax, 0x3f	       418	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x40008ca	          0x4801c8	                            add rax, rcx	       418	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x40008cd	          0x48d1f8	                              sar rax, 1	       418	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x40008d0	          0x4939c4	                            cmp r12, rax	       418	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x40008d3	     0xf8ebefeffff	                           jle 0x4000797	       418	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15
0x40008d9	    0x488d35000000	                   lea rsi, [0x040008e0]	       422	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15	CALL_15
0x40008e0	          0x4889ef	                            mov rdi, rbp	       422	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15	CALL_15
0x40008e3	          0x4c89e2	                            mov rdx, r12	       422	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15	CALL_15
0x40008e6	            0x31c0	                            xor eax, eax	       422	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15	CALL_15
0x40008e8	    0x41bf01000000	                             mov r15d, 1	       422	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15	CALL_15
0x40008ee	      0xe800000000	                          call 0x40008f3	       422	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15	CALL_15
0x40008f3	      0xbf28000000	                           mov edi, 0x28	       422	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15	CALL_15
0x40008f8	      0xe967ffffff	                           jmp 0x4000864	       422	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	ELSE_4	IF_14	IF_15	CALL_15
0x40008fd	      0xb81b000000	                           mov eax, 0x1b	       447	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18	ELSE_7
0x4000902	      0xe97efdffff	                           jmp 0x4000685	       447	pingpong.c	FUNCTION_6	WHILE_1	ELSE_3	IF_18	ELSE_7
0x4000907	      0xe800000000	                          call 0x400090c	       464	pingpong.c	FUNCTION_6
