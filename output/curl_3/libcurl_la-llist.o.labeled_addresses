Curl_llist_init	functions,0:DO,0:FOR,0:IF,0:ELSE,0:WHILE,0:CALL,0:SWITCH,0	5
0x40000f0	    0x48c747180000	               mov qword [rdi + 0x18], 0	        39	llist.c	FUNCTION_1
0x40000f8	        0x48897710	             mov qword [rdi + 0x10], rsi	        40	llist.c	FUNCTION_1
0x40000fc	    0x48c707000000	                      mov qword [rdi], 0	        41	llist.c	FUNCTION_1
0x4000103	    0x48c747080000	                  mov qword [rdi + 8], 0	        42	llist.c	FUNCTION_1
0x400010b	              0xc3	                                     ret	        42	llist.c	FUNCTION_1
Curl_llist_move	functions,0:DO,0:FOR,0:IF,6:ELSE,5:WHILE,0:CALL,0:SWITCH,0	52
0x4000220	          0x4885f6	                           test rsi, rsi	       156	llist.c	FUNCTION_6	IF_1
0x4000223	            0x7457	                            je 0x400027c	       156	llist.c	FUNCTION_6	IF_1
0x4000225	        0x488b4718	            mov rax, qword [rdi + 0x18] 	       156	llist.c	FUNCTION_6	IF_1
0x4000229	          0x4885c0	                           test rax, rax	       156	llist.c	FUNCTION_6	IF_1
0x400022c	            0x744e	                            je 0x400027c	       156	llist.c	FUNCTION_6	IF_1
0x400022e	          0x483b37	                    cmp rsi, qword [rdi]	       159	llist.c	FUNCTION_6	IF_2
0x4000231	            0x746d	                            je 0x40002a0	       159	llist.c	FUNCTION_6	IF_2
0x4000233	        0x4c8b4e10	              mov r9, qword [rsi + 0x10]	       168	llist.c	FUNCTION_6	ELSE_2
0x4000237	        0x4c8b4608	                 mov r8, qword [rsi + 8]	       168	llist.c	FUNCTION_6	ELSE_2
0x400023b	        0x4d894810	               mov qword [r8 + 0x10], r9	       168	llist.c	FUNCTION_6	ELSE_2
0x400023f	        0x4c8b4e10	              mov r9, qword [rsi + 0x10]	       169	llist.c	FUNCTION_6	ELSE_2	IF_4
0x4000243	          0x4d85c9	                             test r9, r9	       169	llist.c	FUNCTION_6	ELSE_2	IF_4
0x4000246	            0x7478	                            je 0x40002c0	       169	llist.c	FUNCTION_6	ELSE_2	IF_4
0x4000248	        0x4d894108	                  mov qword [r9 + 8], r8	       172	llist.c	FUNCTION_6	ELSE_2	ELSE_3
0x400024c	        0x4883e801	                              sub rax, 1	       175	llist.c	FUNCTION_6	ELSE_3
0x4000250	        0x48894718	             mov qword [rdi + 0x18], rax	       175	llist.c	FUNCTION_6	ELSE_3
0x4000254	        0x488b4218	            mov rax, qword [rdx + 0x18] 	       178	llist.c	FUNCTION_6	ELSE_3	IF_5
0x4000258	          0x4885c0	                           test rax, rax	       178	llist.c	FUNCTION_6	ELSE_3	IF_5
0x400025b	            0x7523	                           jne 0x4000280	       178	llist.c	FUNCTION_6	ELSE_3	IF_5
0x400025d	          0x488932	                    mov qword [rdx], rsi	       179	llist.c	FUNCTION_6	ELSE_3	IF_5
0x4000260	    0x48c746080000	                  mov qword [rsi + 8], 0	       180	llist.c	FUNCTION_6	ELSE_3	IF_5
0x4000268	    0x48c746100000	               mov qword [rsi + 0x10], 0	       181	llist.c	FUNCTION_6	ELSE_3	IF_5
0x4000270	        0x48897208	                mov qword [rdx + 8], rsi	       182	llist.c	FUNCTION_6	ELSE_3	IF_5
0x4000274	        0x4883c001	                              add rax, 1	       196	llist.c	FUNCTION_6
0x4000278	        0x48894218	             mov qword [rdx + 0x18], rax	       196	llist.c	FUNCTION_6
0x400027c	            0xf3c3	                                     ret	       196	llist.c	FUNCTION_6
0x400027e	            0x6690	                                     nop	       196	llist.c	FUNCTION_6
0x4000280	        0x488b7910	            mov rdi, qword [rcx + 0x10] 	       185	llist.c	FUNCTION_6	ELSE_4
0x4000284	        0x48894e08	                mov qword [rsi + 8], rcx	       186	llist.c	FUNCTION_6	ELSE_4
0x4000288	        0x48897e10	             mov qword [rsi + 0x10], rdi	       185	llist.c	FUNCTION_6	ELSE_4
0x400028c	        0x488b7910	            mov rdi, qword [rcx + 0x10] 	       187	llist.c	FUNCTION_6	ELSE_4	IF_6
0x4000290	          0x4885ff	                           test rdi, rdi	       187	llist.c	FUNCTION_6	ELSE_4	IF_6
0x4000293	            0x743b	                            je 0x40002d0	       187	llist.c	FUNCTION_6	ELSE_4	IF_6
0x4000295	        0x48897708	                mov qword [rdi + 8], rsi	       188	llist.c	FUNCTION_6	ELSE_4	IF_6
0x4000299	        0x48897110	             mov qword [rcx + 0x10], rsi	       193	llist.c	FUNCTION_6	ELSE_4
0x400029d	            0xebd5	                           jmp 0x4000274	       193	llist.c	FUNCTION_6	ELSE_4
0x400029f	              0x90	                                     nop	       193	llist.c	FUNCTION_6	ELSE_4
0x40002a0	        0x4c8b4610	              mov r8, qword [rsi + 0x10]	       160	llist.c	FUNCTION_6	IF_2
0x40002a4	          0x4d85c0	                             test r8, r8	       162	llist.c	FUNCTION_6	IF_2	IF_3
0x40002a7	          0x4c8907	                     mov qword [rdi], r8	       160	llist.c	FUNCTION_6	IF_2
0x40002aa	            0x7434	                            je 0x40002e0	       162	llist.c	FUNCTION_6	IF_2	IF_3
0x40002ac	    0x49c740080000	                   mov qword [r8 + 8], 0	       165	llist.c	FUNCTION_6	IF_2	ELSE_1
0x40002b4	            0xeb96	                           jmp 0x400024c	       165	llist.c	FUNCTION_6	IF_2	ELSE_1
0x40002b6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       165	llist.c	FUNCTION_6	IF_2	ELSE_1
0x40002c0	        0x4c894708	                 mov qword [rdi + 8], r8	       170	llist.c	FUNCTION_6	ELSE_2	IF_4
0x40002c4	            0xeb86	                           jmp 0x400024c	       170	llist.c	FUNCTION_6	ELSE_2	IF_4
0x40002c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       170	llist.c	FUNCTION_6	ELSE_2	IF_4
0x40002d0	        0x48897208	                mov qword [rdx + 8], rsi	       191	llist.c	FUNCTION_6	ELSE_4	ELSE_5
0x40002d4	            0xebc3	                           jmp 0x4000299	       191	llist.c	FUNCTION_6	ELSE_4	ELSE_5
0x40002d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       191	llist.c	FUNCTION_6	ELSE_4	ELSE_5
0x40002e0	    0x48c747080000	                  mov qword [rdi + 8], 0	       163	llist.c	FUNCTION_6	IF_2	IF_3
0x40002e8	      0xe95fffffff	                           jmp 0x400024c	       163	llist.c	FUNCTION_6	IF_2	IF_3
Curl_llist_insert_next	functions,0:DO,0:FOR,0:IF,4:ELSE,3:WHILE,0:CALL,0:SWITCH,0	34
0x4000110	        0x488b4718	            mov rax, qword [rdi + 0x18] 	        62	llist.c	FUNCTION_2	IF_1
0x4000114	          0x488911	                    mov qword [rcx], rdx	        61	llist.c	FUNCTION_2
0x4000117	          0x4885c0	                           test rax, rax	        62	llist.c	FUNCTION_2	IF_1
0x400011a	            0x7434	                            je 0x4000150	        62	llist.c	FUNCTION_2	IF_1
0x400011c	          0x4885f6	                           test rsi, rsi	        70	llist.c	FUNCTION_2	ELSE_1
0x400011f	            0x745f	                            je 0x4000180	        70	llist.c	FUNCTION_2	ELSE_1
0x4000121	        0x488b5610	            mov rdx, qword [rsi + 0x10] 	        70	llist.c	FUNCTION_2	ELSE_1
0x4000125	        0x48897108	                mov qword [rcx + 8], rsi	        71	llist.c	FUNCTION_2	ELSE_1
0x4000129	        0x48895110	             mov qword [rcx + 0x10], rdx	        70	llist.c	FUNCTION_2	ELSE_1
0x400012d	        0x488b5610	            mov rdx, qword [rsi + 0x10] 	        76	llist.c	FUNCTION_2	ELSE_1	ELSE_2	IF_3
0x4000131	          0x4885d2	                           test rdx, rdx	        76	llist.c	FUNCTION_2	ELSE_1	ELSE_2	IF_3
0x4000134	            0x743a	                            je 0x4000170	        76	llist.c	FUNCTION_2	ELSE_1	ELSE_2	IF_3
0x4000136	        0x48894a08	                mov qword [rdx + 8], rcx	        77	llist.c	FUNCTION_2	ELSE_1	ELSE_2	IF_3
0x400013a	        0x48894e10	             mov qword [rsi + 0x10], rcx	        83	llist.c	FUNCTION_2	ELSE_1	IF_4
0x400013e	        0x4883c001	                              add rax, 1	        86	llist.c	FUNCTION_2
0x4000142	        0x48894718	             mov qword [rdi + 0x18], rax	        86	llist.c	FUNCTION_2
0x4000146	              0xc3	                                     ret	        87	llist.c	FUNCTION_2
0x4000147	    0x660f1f840000	                    nop word [rax + rax]	        87	llist.c	FUNCTION_2
0x4000150	        0x4883c001	                              add rax, 1	        86	llist.c	FUNCTION_2
0x4000154	          0x48890f	                    mov qword [rdi], rcx	        63	llist.c	FUNCTION_2	IF_1
0x4000157	    0x48c741080000	                  mov qword [rcx + 8], 0	        64	llist.c	FUNCTION_2	IF_1
0x400015f	    0x48c741100000	               mov qword [rcx + 0x10], 0	        65	llist.c	FUNCTION_2	IF_1
0x4000167	        0x48894f08	                mov qword [rdi + 8], rcx	        66	llist.c	FUNCTION_2	IF_1
0x400016b	        0x48894718	             mov qword [rdi + 0x18], rax	        86	llist.c	FUNCTION_2
0x400016f	              0xc3	                                     ret	        87	llist.c	FUNCTION_2
0x4000170	        0x48894f08	                mov qword [rdi + 8], rcx	        80	llist.c	FUNCTION_2	ELSE_1	ELSE_3
0x4000174	            0xebc4	                           jmp 0x400013a	        80	llist.c	FUNCTION_2	ELSE_1	ELSE_3
0x4000176	    0x662e0f1f8400	                 nop word cs:[rax + rax]	        80	llist.c	FUNCTION_2	ELSE_1	ELSE_3
0x4000180	          0x488b17	                    mov rdx, qword [rdi]	        70	llist.c	FUNCTION_2	ELSE_1
0x4000183	    0x48c741080000	                  mov qword [rcx + 8], 0	        71	llist.c	FUNCTION_2	ELSE_1
0x400018b	        0x48895110	             mov qword [rcx + 0x10], rdx	        70	llist.c	FUNCTION_2	ELSE_1
0x400018f	        0x48894a08	                mov qword [rdx + 8], rcx	        73	llist.c	FUNCTION_2	ELSE_1	IF_2
0x4000193	          0x48890f	                    mov qword [rdi], rcx	        74	llist.c	FUNCTION_2	ELSE_1	IF_2
0x4000196	            0xeba6	                           jmp 0x400013e	        74	llist.c	FUNCTION_2	ELSE_1	IF_2
Curl_llist_destroy	functions,0:DO,0:FOR,0:IF,1:ELSE,0:WHILE,1:CALL,1:SWITCH,0	25
0x40001c0	          0x4885ff	                           test rdi, rdi	       136	llist.c	FUNCTION_4	IF_1
0x40001c3	            0x7440	                            je 0x4000205	       136	llist.c	FUNCTION_4	IF_1
0x40001c5	              0x55	                                push rbp	       135	llist.c	FUNCTION_4
0x40001c6	              0x53	                                push rbx	       135	llist.c	FUNCTION_4
0x40001c7	          0x4889f5	                            mov rbp, rsi	       135	llist.c	FUNCTION_4
0x40001ca	          0x4889fb	                            mov rbx, rdi	       135	llist.c	FUNCTION_4
0x40001cd	        0x4883ec08	                              sub rsp, 8	       135	llist.c	FUNCTION_4
0x40001d1	        0x488b4318	            mov rax, qword [rbx + 0x18] 	       135	llist.c	FUNCTION_4
0x40001d5	            0xeb12	                           jmp 0x40001e9	       135	llist.c	FUNCTION_4
0x40001d7	    0x660f1f840000	                    nop word [rax + rax]	       135	llist.c	FUNCTION_4
0x40001e0	        0x488b7308	                mov rsi, qword [rbx + 8]	       138	llist.c	FUNCTION_4	IF_1	CALL_1
0x40001e4	          0x4885f6	                           test rsi, rsi	        97	llist.c	FUNCTION_3	IF_1
0x40001e7	            0x750f	                           jne 0x40001f8	        97	llist.c	FUNCTION_3	IF_1
0x40001e9	          0x4885c0	                           test rax, rax	       137	llist.c	FUNCTION_4	IF_1	WHILE_1
0x40001ec	            0x75f2	                           jne 0x40001e0	       137	llist.c	FUNCTION_4	IF_1	WHILE_1
0x40001ee	        0x4883c408	                              add rsp, 8	       140	llist.c	FUNCTION_4
0x40001f2	              0x5b	                                 pop rbx	       140	llist.c	FUNCTION_4
0x40001f3	              0x5d	                                 pop rbp	       140	llist.c	FUNCTION_4
0x40001f4	              0xc3	                                     ret	       140	llist.c	FUNCTION_4
0x40001f5	           0xf1f00	                         nop dword [rax]	       140	llist.c	FUNCTION_4
0x40001f8	          0x4889ea	                            mov rdx, rbp	       140	llist.c	FUNCTION_4
0x40001fb	          0x4889df	                            mov rdi, rbx	       140	llist.c	FUNCTION_4
0x40001fe	      0xe83dfeffff	       call sym.Curl_llist_remove.part.0	       140	llist.c	FUNCTION_4
0x4000203	            0xebcc	                           jmp 0x40001d1	       140	llist.c	FUNCTION_4
0x4000205	            0xf3c3	                                     ret	       140	llist.c	FUNCTION_4
Curl_llist_count	functions,0:DO,0:FOR,0:IF,0:ELSE,0:WHILE,0:CALL,0:SWITCH,0	2
0x4000210	        0x488b4718	            mov rax, qword [rdi + 0x18] 	       145	llist.c	FUNCTION_5
0x4000214	              0xc3	                                     ret	       146	llist.c	FUNCTION_5
