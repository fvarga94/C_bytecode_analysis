Curl_sendf	CALL,7:WHILE,0:functions,0:IF,4:ELSE,1:SWITCH,0:FOR,1:DO,0	91
0x4000fa0	            0x4157	                                push r15	       277	sendf.c	FUNCTION_6
0x4000fa2	            0x4156	                                push r14	       277	sendf.c	FUNCTION_6
0x4000fa4	            0x4155	                                push r13	       277	sendf.c	FUNCTION_6
0x4000fa6	            0x4154	                                push r12	       277	sendf.c	FUNCTION_6
0x4000fa8	          0x4189fd	                           mov r13d, edi	       277	sendf.c	FUNCTION_6
0x4000fab	              0x55	                                push rbp	       277	sendf.c	FUNCTION_6
0x4000fac	              0x53	                                push rbx	       277	sendf.c	FUNCTION_6
0x4000fad	          0x4889f5	                            mov rbp, rsi	       277	sendf.c	FUNCTION_6
0x4000fb0	    0x4881ecf80000	                           sub rsp, 0xf8	       277	sendf.c	FUNCTION_6
0x4000fb7	            0x84c0	                             test al, al	       277	sendf.c	FUNCTION_6
0x4000fb9	      0x48894c2458	             mov qword [rsp + 0x58], rcx	       277	sendf.c	FUNCTION_6
0x4000fbe	      0x4c89442460	              mov qword [rsp + 0x60], r8	       277	sendf.c	FUNCTION_6
0x4000fc3	      0x4c894c2468	              mov qword [rsp + 0x68], r9	       277	sendf.c	FUNCTION_6
0x4000fc8	            0x743d	                            je 0x4001007	       277	sendf.c	FUNCTION_6
0x4000fca	       0xf29442470	       movaps xmmword [rsp + 0x70], xmm0	       277	sendf.c	FUNCTION_6
0x4000fcf	     0xf298c248000	       movaps xmmword [rsp + 0x80], xmm1	       277	sendf.c	FUNCTION_6
0x4000fd7	     0xf2994249000	       movaps xmmword [rsp + 0x90], xmm2	       277	sendf.c	FUNCTION_6
0x4000fdf	     0xf299c24a000	       movaps xmmword [rsp + 0xa0], xmm3	       277	sendf.c	FUNCTION_6
0x4000fe7	     0xf29a424b000	       movaps xmmword [rsp + 0xb0], xmm4	       277	sendf.c	FUNCTION_6
0x4000fef	     0xf29ac24c000	       movaps xmmword [rsp + 0xc0], xmm5	       277	sendf.c	FUNCTION_6
0x4000ff7	     0xf29b424d000	       movaps xmmword [rsp + 0xd0], xmm6	       277	sendf.c	FUNCTION_6
0x4000fff	     0xf29bc24e000	       movaps xmmword [rsp + 0xe0], xmm7	       277	sendf.c	FUNCTION_6
0x4001007	    0x64488b042528	                mov rax, qword fs:[0x28]	       277	sendf.c	FUNCTION_6
0x4001010	      0x4889442438	             mov qword [rsp + 0x38], rax	       277	sendf.c	FUNCTION_6
0x4001015	            0x31c0	                            xor eax, eax	       277	sendf.c	FUNCTION_6
0x4001017	    0x488d84243001	                  lea rax, [rsp + 0x130]	       285	sendf.c	FUNCTION_6	CALL_1
0x400101f	      0x488d742420	                   lea rsi, [rsp + 0x20]	       286	sendf.c	FUNCTION_6	CALL_2
0x4001024	          0x4889d7	                            mov rdi, rdx	       286	sendf.c	FUNCTION_6	CALL_2
0x4001027	      0x4889442428	             mov qword [rsp + 0x28], rax	       285	sendf.c	FUNCTION_6	CALL_1
0x400102c	      0x488d442440	                   lea rax, [rsp + 0x40]	       285	sendf.c	FUNCTION_6	CALL_1
0x4001031	        0x4c8b6500	                    mov r12, qword [rbp]	       278	sendf.c	FUNCTION_6
0x4001035	    0xc74424201800	           mov dword [rsp + 0x20], 0x18 	       285	sendf.c	FUNCTION_6	CALL_1
0x400103d	    0xc74424243000	           mov dword [rsp + 0x24], 0x30 	       285	sendf.c	FUNCTION_6	CALL_1
0x4001045	      0x4889442430	             mov qword [rsp + 0x30], rax	       285	sendf.c	FUNCTION_6	CALL_1
0x400104a	      0xe800000000	                          call 0x400104f	       286	sendf.c	FUNCTION_6	CALL_2
0x400104f	          0x4889c1	                            mov rcx, rax	       286	sendf.c	FUNCTION_6	CALL_2
0x4001052	      0x4889442408	                mov qword [rsp + 8], rax	       286	sendf.c	FUNCTION_6	CALL_2
0x4001057	      0xb81b000000	                           mov eax, 0x1b	       289	sendf.c	FUNCTION_6	IF_1
0x400105c	          0x4885c9	                           test rcx, rcx	       288	sendf.c	FUNCTION_6	IF_1
0x400105f	          0x4889cb	                            mov rbx, rcx	       288	sendf.c	FUNCTION_6	IF_1
0x4001062	     0xf8499000000	                            je 0x4001101	       288	sendf.c	FUNCTION_6	IF_1
0x4001068	          0x4889cf	                            mov rdi, rcx	       292	sendf.c	FUNCTION_6	CALL_4
0x400106b	    0x48c744241800	               mov qword [rsp + 0x18], 0	       291	sendf.c	FUNCTION_6
0x4001074	      0xe800000000	                          call 0x4001079	       292	sendf.c	FUNCTION_6	CALL_4
0x4001079	          0x4989c6	                            mov r14, rax	       292	sendf.c	FUNCTION_6	CALL_4
0x400107c	      0x488d442418	                   lea rax, [rsp + 0x18]	       292	sendf.c	FUNCTION_6	CALL_4
0x4001081	        0x48890424	                    mov qword [rsp], rax	       292	sendf.c	FUNCTION_6	CALL_4
0x4001085	            0xeb19	                           jmp 0x40010a0	       292	sendf.c	FUNCTION_6	CALL_4
0x4001087	    0x660f1f840000	                    nop word [rax + rax]	       292	sendf.c	FUNCTION_6	CALL_4
0x4001090	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       305	sendf.c	FUNCTION_6	FOR_1	IF_4
0x4001095	          0x4939d6	                            cmp r14, rdx	       305	sendf.c	FUNCTION_6	FOR_1	IF_4
0x4001098	            0x7456	                            je 0x40010f0	       305	sendf.c	FUNCTION_6	FOR_1	IF_4
0x400109a	          0x4929d6	                            sub r14, rdx	       308	sendf.c	FUNCTION_6	FOR_1	IF_4
0x400109d	          0x4801d3	                            add rbx, rdx	       309	sendf.c	FUNCTION_6	FOR_1	IF_4
0x40010a0	        0x4c8b0424	                     mov r8, qword [rsp]	       297	sendf.c	FUNCTION_6	FOR_1	CALL_5
0x40010a4	          0x4c89f1	                            mov rcx, r14	       297	sendf.c	FUNCTION_6	FOR_1	CALL_5
0x40010a7	          0x4889da	                            mov rdx, rbx	       297	sendf.c	FUNCTION_6	FOR_1	CALL_5
0x40010aa	          0x4489ee	                           mov esi, r13d	       297	sendf.c	FUNCTION_6	FOR_1	CALL_5
0x40010ad	          0x4889ef	                            mov rdi, rbp	       297	sendf.c	FUNCTION_6	FOR_1	CALL_5
0x40010b0	      0xe800000000	                          call 0x40010b5	       297	sendf.c	FUNCTION_6	FOR_1	CALL_5
0x40010b5	            0x85c0	                           test eax, eax	       299	sendf.c	FUNCTION_6	FOR_1	IF_2
0x40010b7	          0x4189c7	                           mov r15d, eax	       297	sendf.c	FUNCTION_6	FOR_1	CALL_5
0x40010ba	            0x7534	                           jne 0x40010f0	       299	sendf.c	FUNCTION_6	FOR_1	IF_2
0x40010bc	    0x4180bc24e807	               cmp byte [r12 + 0x7e8], 0	       302	sendf.c	FUNCTION_6	FOR_1	IF_3
0x40010c5	            0x74c9	                            je 0x4001090	       302	sendf.c	FUNCTION_6	FOR_1	IF_3
0x40010c7	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       303	sendf.c	FUNCTION_6	FOR_1	CALL_6
0x40010cc	          0x4889da	                            mov rdx, rbx	       303	sendf.c	FUNCTION_6	FOR_1	CALL_6
0x40010cf	          0x4989e8	                             mov r8, rbp	       303	sendf.c	FUNCTION_6	FOR_1	CALL_6
0x40010d2	      0xbe04000000	                              mov esi, 4	       303	sendf.c	FUNCTION_6	FOR_1	CALL_6
0x40010d7	          0x4c89e7	                            mov rdi, r12	       303	sendf.c	FUNCTION_6	FOR_1	CALL_6
0x40010da	      0xe800000000	                          call 0x40010df	       303	sendf.c	FUNCTION_6	FOR_1	CALL_6
0x40010df	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       305	sendf.c	FUNCTION_6	FOR_1	IF_4
0x40010e4	          0x4939d6	                            cmp r14, rdx	       305	sendf.c	FUNCTION_6	FOR_1	IF_4
0x40010e7	            0x75b1	                           jne 0x400109a	       305	sendf.c	FUNCTION_6	FOR_1	IF_4
0x40010e9	     0xf1f80000000	                         nop dword [rax]	       305	sendf.c	FUNCTION_6	FOR_1	IF_4
0x40010f0	    0x488b05000000	            mov rax, qword [0x040010f7] 	       315	sendf.c	FUNCTION_6	CALL_7
0x40010f7	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       315	sendf.c	FUNCTION_6	CALL_7
0x40010fc	            0xff10	                        call qword [rax]	       315	sendf.c	FUNCTION_6	CALL_7
0x40010fe	          0x4489f8	                           mov eax, r15d	       317	sendf.c	FUNCTION_6
0x4001101	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	       318	sendf.c	FUNCTION_6
0x4001106	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       318	sendf.c	FUNCTION_6
0x400110f	            0x7512	                           jne 0x4001123	       318	sendf.c	FUNCTION_6
0x4001111	    0x4881c4f80000	                           add rsp, 0xf8	       318	sendf.c	FUNCTION_6
0x4001118	              0x5b	                                 pop rbx	       318	sendf.c	FUNCTION_6
0x4001119	              0x5d	                                 pop rbp	       318	sendf.c	FUNCTION_6
0x400111a	            0x415c	                                 pop r12	       318	sendf.c	FUNCTION_6
0x400111c	            0x415d	                                 pop r13	       318	sendf.c	FUNCTION_6
0x400111e	            0x415e	                                 pop r14	       318	sendf.c	FUNCTION_6
0x4001120	            0x415f	                                 pop r15	       318	sendf.c	FUNCTION_6
0x4001122	              0xc3	                                     ret	       318	sendf.c	FUNCTION_6
0x4001123	      0xe800000000	                           call str.Data	       318	sendf.c	FUNCTION_6
Curl_write	CALL,0:WHILE,0:functions,0:IF,1:ELSE,0:SWITCH,1:FOR,0:DO,0	39
0x4000220	              0x53	                                push rbx	       332	sendf.c	FUNCTION_7
0x4000221	          0x4889f8	                            mov rax, rdi	       332	sendf.c	FUNCTION_7
0x4000224	          0x4531c9	                            xor r9d, r9d	       335	sendf.c	FUNCTION_7
0x4000227	          0x4c89c3	                             mov rbx, r8	       332	sendf.c	FUNCTION_7
0x400022a	        0x4883ec10	                           sub rsp, 0x10	       332	sendf.c	FUNCTION_7
0x400022e	    0x64488b3c2528	                mov rdi, qword fs:[0x28]	       332	sendf.c	FUNCTION_7
0x4000237	      0x48897c2408	                mov qword [rsp + 8], rdi	       332	sendf.c	FUNCTION_7
0x400023c	            0x31ff	                            xor edi, edi	       332	sendf.c	FUNCTION_7
0x400023e	    0x39b05c020000	           cmp dword [rax + 0x25c], esi 	       335	sendf.c	FUNCTION_7
0x4000244	    0xc74424040000	                  mov dword [rsp + 4], 0	       334	sendf.c	FUNCTION_7
0x400024c	      0x4c8d442404	                       lea r8, [rsp + 4]	       337	sendf.c	FUNCTION_7
0x4000251	          0x4889c7	                            mov rdi, rax	       337	sendf.c	FUNCTION_7
0x4000254	        0x410f94c1	                                sete r9b	       335	sendf.c	FUNCTION_7
0x4000258	          0x4c89ce	                             mov rsi, r9	       335	sendf.c	FUNCTION_7
0x400025b	        0x4983c150	                            add r9, 0x50	       337	sendf.c	FUNCTION_7
0x400025f	        0x42ff14c8	                 call qword [rax + r9*8]	       337	sendf.c	FUNCTION_7
0x4000263	            0x31d2	                            xor edx, edx	       342	sendf.c	FUNCTION_7	IF_1
0x4000265	          0x4885c0	                           test rax, rax	       340	sendf.c	FUNCTION_7	IF_1
0x4000268	          0x488903	                    mov qword [rbx], rax	       339	sendf.c	FUNCTION_7
0x400026b	            0x781b	                            js 0x4000288	       340	sendf.c	FUNCTION_7	IF_1
0x400026d	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       358	sendf.c	FUNCTION_7
0x4000272	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       358	sendf.c	FUNCTION_7
0x400027b	            0x89d0	                            mov eax, edx	       358	sendf.c	FUNCTION_7
0x400027d	            0x7528	                           jne 0x40002a7	       358	sendf.c	FUNCTION_7
0x400027f	        0x4883c410	                           add rsp, 0x10	       358	sendf.c	FUNCTION_7
0x4000283	              0x5b	                                 pop rbx	       358	sendf.c	FUNCTION_7
0x4000284	              0xc3	                                     ret	       358	sendf.c	FUNCTION_7
0x4000285	           0xf1f00	                         nop dword [rax]	       358	sendf.c	FUNCTION_7
0x4000288	        0x8b542404	                mov edx, dword [rsp + 4]	       345	sendf.c	FUNCTION_7	SWITCH_1
0x400028c	            0x85d2	                           test edx, edx	       345	sendf.c	FUNCTION_7	SWITCH_1
0x400028e	            0x7410	                            je 0x40002a0	       345	sendf.c	FUNCTION_7	SWITCH_1
0x4000290	          0x83fa51	                           cmp edx, 0x51	       345	sendf.c	FUNCTION_7	SWITCH_1
0x4000293	            0x75d8	                           jne 0x400026d	       345	sendf.c	FUNCTION_7	SWITCH_1
0x4000295	    0x48c703000000	                      mov qword [rbx], 0	       347	sendf.c	FUNCTION_7	SWITCH_1
0x400029c	            0x31d2	                            xor edx, edx	       348	sendf.c	FUNCTION_7	SWITCH_1
0x400029e	            0xebcd	                           jmp 0x400026d	       348	sendf.c	FUNCTION_7	SWITCH_1
0x40002a0	      0xba37000000	                           mov edx, 0x37	       352	sendf.c	FUNCTION_7	SWITCH_1
0x40002a5	            0xebc6	                           jmp 0x400026d	       352	sendf.c	FUNCTION_7	SWITCH_1
0x40002a7	      0xe800000000	                          call 0x40002ac	       358	sendf.c	FUNCTION_7
Curl_send_plain	CALL,4:WHILE,0:functions,0:IF,3:ELSE,2:SWITCH,0:FOR,0:DO,0	77
0x4000920	            0x4155	                                push r13	       362	sendf.c	FUNCTION_8
0x4000922	            0x4154	                                push r12	       362	sendf.c	FUNCTION_8
0x4000924	          0x4863c6	                         movsxd rax, esi	       363	sendf.c	FUNCTION_8
0x4000927	              0x55	                                push rbp	       362	sendf.c	FUNCTION_8
0x4000928	              0x53	                                push rbx	       362	sendf.c	FUNCTION_8
0x4000929	          0x4889fb	                            mov rbx, rdi	       362	sendf.c	FUNCTION_8
0x400092c	          0x4989d2	                            mov r10, rdx	       362	sendf.c	FUNCTION_8
0x400092f	          0x4d89c4	                             mov r12, r8	       362	sendf.c	FUNCTION_8
0x4000932	          0x4889ca	                            mov rdx, rcx	       362	sendf.c	FUNCTION_8
0x4000935	        0x4883ec08	                              sub rsp, 8	       362	sendf.c	FUNCTION_8
0x4000939	    0x80bbb6030000	               cmp byte [rbx + 0x3b6], 0	       373	sendf.c	FUNCTION_8	IF_1
0x4000940	    0x8bbc87580200	   mov edi, dword [rdi + rax*4 + 0x258] 	       363	sendf.c	FUNCTION_8
0x4000947	            0x7447	                            je 0x4000990	       373	sendf.c	FUNCTION_8	IF_1
0x4000949	        0x488b4378	            mov rax, qword [rbx + 0x78] 	       375	sendf.c	FUNCTION_8	IF_1
0x400094d	      0xb900000020	                     mov ecx, 0x20000000	       374	sendf.c	FUNCTION_8	IF_1	CALL_1
0x4000952	          0x4c89d6	                            mov rsi, r10	       374	sendf.c	FUNCTION_8	IF_1	CALL_1
0x4000955	        0x448b4810	            mov r9d, dword [rax + 0x10] 	       374	sendf.c	FUNCTION_8	IF_1	CALL_1
0x4000959	        0x4c8b4020	              mov r8, qword [rax + 0x20]	       374	sendf.c	FUNCTION_8	IF_1	CALL_1
0x400095d	      0xe800000000	                          call 0x4000962	       374	sendf.c	FUNCTION_8	IF_1	CALL_1
0x4000962	          0x4889c5	                            mov rbp, rax	       374	sendf.c	FUNCTION_8	IF_1	CALL_1
0x4000965	    0xc683b6030000	               mov byte [rbx + 0x3b6], 0	       376	sendf.c	FUNCTION_8	IF_1
0x400096c	    0x41c704240000	                      mov dword [r12], 0	       382	sendf.c	FUNCTION_8
0x4000974	        0x4883fdff	             cmp rbp, 0xffffffffffffffff	       383	sendf.c	FUNCTION_8	IF_2
0x4000978	            0x7434	                            je 0x40009ae	       383	sendf.c	FUNCTION_8	IF_2
0x400097a	        0x4883c408	                              add rsp, 8	       410	sendf.c	FUNCTION_8
0x400097e	          0x4889e8	                            mov rax, rbp	       410	sendf.c	FUNCTION_8
0x4000981	              0x5b	                                 pop rbx	       410	sendf.c	FUNCTION_8
0x4000982	              0x5d	                                 pop rbp	       410	sendf.c	FUNCTION_8
0x4000983	            0x415c	                                 pop r12	       410	sendf.c	FUNCTION_8
0x4000985	            0x415d	                                 pop r13	       410	sendf.c	FUNCTION_8
0x4000987	              0xc3	                                     ret	       410	sendf.c	FUNCTION_8
0x4000988	     0xf1f84000000	                   nop dword [rax + rax]	       410	sendf.c	FUNCTION_8
0x4000990	      0xb900400000	                         mov ecx, 0x4000	       380	sendf.c	FUNCTION_8	CALL_2
0x4000995	          0x4c89d6	                            mov rsi, r10	       380	sendf.c	FUNCTION_8	CALL_2
0x4000998	      0xe800000000	                          call 0x400099d	       380	sendf.c	FUNCTION_8	CALL_2
0x400099d	          0x4889c5	                            mov rbp, rax	       380	sendf.c	FUNCTION_8	CALL_2
0x40009a0	    0x41c704240000	                      mov dword [r12], 0	       382	sendf.c	FUNCTION_8
0x40009a8	        0x4883fdff	             cmp rbp, 0xffffffffffffffff	       383	sendf.c	FUNCTION_8	IF_2
0x40009ac	            0x75cc	                           jne 0x400097a	       383	sendf.c	FUNCTION_8	IF_2
0x40009ae	      0xe800000000	                          call 0x40009b3	       384	sendf.c	FUNCTION_8	IF_2
0x40009b3	          0x448b28	                   mov r13d, dword [rax]	       384	sendf.c	FUNCTION_8	IF_2
0x40009b6	        0x4183fd0b	                           cmp r13d, 0xb	       394	sendf.c	FUNCTION_8	IF_2	IF_3
0x40009ba	           0xf94c2	                                 sete dl	       394	sendf.c	FUNCTION_8	IF_2	IF_3
0x40009bd	        0x4183fd04	                             cmp r13d, 4	       394	sendf.c	FUNCTION_8	IF_2	IF_3
0x40009c1	           0xf94c0	                                 sete al	       394	sendf.c	FUNCTION_8	IF_2	IF_3
0x40009c4	             0x8c2	                               or dl, al	       394	sendf.c	FUNCTION_8	IF_2	IF_3
0x40009c6	            0x7548	                           jne 0x4000a10	       394	sendf.c	FUNCTION_8	IF_2	IF_3
0x40009c8	        0x4183fd73	                          cmp r13d, 0x73	       394	sendf.c	FUNCTION_8	IF_2	IF_3
0x40009cc	            0x7442	                            je 0x4000a10	       394	sendf.c	FUNCTION_8	IF_2	IF_3
0x40009ce	          0x4489ee	                           mov esi, r13d	       403	sendf.c	FUNCTION_8	IF_2	ELSE_2	CALL_3
0x40009d1	          0x4889df	                            mov rdi, rbx	       403	sendf.c	FUNCTION_8	IF_2	ELSE_2	CALL_3
0x40009d4	      0xe800000000	                          call 0x40009d9	       403	sendf.c	FUNCTION_8	IF_2	ELSE_2	CALL_3
0x40009d9	          0x488b3b	                    mov rdi, qword [rbx]	       403	sendf.c	FUNCTION_8	IF_2	ELSE_2	CALL_3
0x40009dc	    0x488d35000000	                   lea rsi, [0x040009e3]	       403	sendf.c	FUNCTION_8	IF_2	ELSE_2	CALL_3
0x40009e3	          0x4889c2	                            mov rdx, rax	       403	sendf.c	FUNCTION_8	IF_2	ELSE_2	CALL_3
0x40009e6	            0x31c0	                            xor eax, eax	       403	sendf.c	FUNCTION_8	IF_2	ELSE_2	CALL_3
0x40009e8	      0xe800000000	                          call 0x40009ed	       403	sendf.c	FUNCTION_8	IF_2	ELSE_2	CALL_3
0x40009ed	          0x488b03	                    mov rax, qword [rbx]	       405	sendf.c	FUNCTION_8	IF_2	ELSE_2
0x40009f0	    0x4489a8bc4d00	         mov dword [rax + 0x4dbc], r13d 	       405	sendf.c	FUNCTION_8	IF_2	ELSE_2
0x40009f7	    0x41c704243700	                   mov dword [r12], 0x37	       406	sendf.c	FUNCTION_8	IF_2	ELSE_2
0x40009ff	        0x4883c408	                              add rsp, 8	       410	sendf.c	FUNCTION_8
0x4000a03	              0x5b	                                 pop rbx	       410	sendf.c	FUNCTION_8
0x4000a04	          0x4889e8	                            mov rax, rbp	       410	sendf.c	FUNCTION_8
0x4000a07	              0x5d	                                 pop rbp	       410	sendf.c	FUNCTION_8
0x4000a08	            0x415c	                                 pop r12	       410	sendf.c	FUNCTION_8
0x4000a0a	            0x415d	                                 pop r13	       410	sendf.c	FUNCTION_8
0x4000a0c	              0xc3	                                     ret	       410	sendf.c	FUNCTION_8
0x4000a0d	           0xf1f00	                         nop dword [rax]	       410	sendf.c	FUNCTION_8
0x4000a10	    0x41c704245100	                   mov dword [r12], 0x51	       400	sendf.c	FUNCTION_8	IF_2	IF_3
0x4000a18	            0x31ed	                            xor ebp, ebp	       399	sendf.c	FUNCTION_8	IF_2	IF_3
0x4000a1a	        0x4883c408	                              add rsp, 8	       410	sendf.c	FUNCTION_8
0x4000a1e	              0x5b	                                 pop rbx	       410	sendf.c	FUNCTION_8
0x4000a1f	          0x4889e8	                            mov rax, rbp	       410	sendf.c	FUNCTION_8
0x4000a22	              0x5d	                                 pop rbp	       410	sendf.c	FUNCTION_8
0x4000a23	            0x415c	                                 pop r12	       410	sendf.c	FUNCTION_8
0x4000a25	            0x415d	                                 pop r13	       410	sendf.c	FUNCTION_8
0x4000a27	              0xc3	                                     ret	       410	sendf.c	FUNCTION_8
Curl_recv_has_postponed_data	CALL,0:WHILE,0:functions,0:IF,0:ELSE,0:SWITCH,0:FOR,0:DO,0	2
0x4000210	            0x31c0	                            xor eax, eax	       226	sendf.c	FUNCTION_3
0x4000212	              0xc3	                                     ret	       226	sendf.c	FUNCTION_3
pausewrite	CALL,6:WHILE,0:functions,0:IF,6:ELSE,2:SWITCH,0:FOR,1:DO,0	78
0x4000040	            0x4157	                                push r15	       481	sendf.c	FUNCTION_11
0x4000042	            0x4156	                                push r14	       481	sendf.c	FUNCTION_11
0x4000044	          0x4989d6	                            mov r14, rdx	       481	sendf.c	FUNCTION_11
0x4000047	            0x4155	                                push r13	       481	sendf.c	FUNCTION_11
0x4000049	            0x4154	                                push r12	       481	sendf.c	FUNCTION_11
0x400004b	          0x4989cd	                            mov r13, rcx	       481	sendf.c	FUNCTION_11
0x400004e	              0x55	                                push rbp	       481	sendf.c	FUNCTION_11
0x400004f	              0x53	                                push rbx	       481	sendf.c	FUNCTION_11
0x4000050	          0x4989fc	                            mov r12, rdi	       481	sendf.c	FUNCTION_11
0x4000053	            0x89f5	                            mov ebp, esi	       481	sendf.c	FUNCTION_11
0x4000055	        0x4883ec08	                              sub rsp, 8	       481	sendf.c	FUNCTION_11
0x4000059	    0x8b9f604d0000	          mov ebx, dword [rdi + 0x4d60] 	       491	sendf.c	FUNCTION_11	IF_1
0x400005f	            0x85db	                           test ebx, ebx	       491	sendf.c	FUNCTION_11	IF_1
0x4000061	            0x742d	                            je 0x4000090	       491	sendf.c	FUNCTION_11	IF_1
0x4000063	    0x3bb7784d0000	          cmp esi, dword [rdi + 0x4d78] 	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4000069	            0x7478	                            je 0x40000e3	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x400006b	    0x488db7904d00	                 lea rsi, [rdi + 0x4d90]	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4000072	            0x31c0	                            xor eax, eax	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4000074	            0xeb13	                           jmp 0x4000089	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4000076	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4000080	        0x4883c618	                           add rsi, 0x18	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4000084	          0x396ee8	            cmp dword [rsi - 0x18], ebp 	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4000087	            0x745f	                            je 0x40000e8	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x4000089	          0x83c001	                              add eax, 1	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x400008c	            0x39c3	                            cmp ebx, eax	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x400008e	            0x75f0	                           jne 0x4000080	       492	sendf.c	FUNCTION_11	IF_1	FOR_1
0x4000090	          0x4c89ee	                            mov rsi, r13	       521	sendf.c	FUNCTION_11	ELSE_2	CALL_4
0x4000093	          0x4c89f7	                            mov rdi, r14	       521	sendf.c	FUNCTION_11	ELSE_2	CALL_4
0x4000096	      0xe800000000	                          call 0x400009b	       521	sendf.c	FUNCTION_11	ELSE_2	CALL_4
0x400009b	          0x4885c0	                           test rax, rax	       522	sendf.c	FUNCTION_11	ELSE_2	IF_5
0x400009e	     0xf849c000000	                            je 0x4000140	       522	sendf.c	FUNCTION_11	ELSE_2	IF_5
0x40000a4	        0x488d145b	                  lea rdx, [rbx + rbx*2]	       526	sendf.c	FUNCTION_11	ELSE_2
0x40000a8	        0x498d14d4	                  lea rdx, [r12 + rdx*8]	       526	sendf.c	FUNCTION_11	ELSE_2
0x40000ac	    0x488982684d00	          mov qword [rdx + 0x4d68], rax 	       526	sendf.c	FUNCTION_11	ELSE_2
0x40000b3	    0x4c89aa704d00	          mov qword [rdx + 0x4d70], r13 	       527	sendf.c	FUNCTION_11	ELSE_2
0x40000ba	    0x89aa784d0000	          mov dword [rdx + 0x4d78], ebp 	       528	sendf.c	FUNCTION_11	ELSE_2
0x40000c0	    0x41838424604d	             add dword [r12 + 0x4d60], 1	       531	sendf.c	FUNCTION_11	ELSE_2	IF_6
0x40000c9	    0x41838c24b401	            or dword [r12 + 0x1b4], 0x10	       535	sendf.c	FUNCTION_11
0x40000d2	        0x4883c408	                              add rsp, 8	       541	sendf.c	FUNCTION_11
0x40000d6	            0x31c0	                            xor eax, eax	       540	sendf.c	FUNCTION_11
0x40000d8	              0x5b	                                 pop rbx	       541	sendf.c	FUNCTION_11
0x40000d9	              0x5d	                                 pop rbp	       541	sendf.c	FUNCTION_11
0x40000da	            0x415c	                                 pop r12	       541	sendf.c	FUNCTION_11
0x40000dc	            0x415d	                                 pop r13	       541	sendf.c	FUNCTION_11
0x40000de	            0x415e	                                 pop r14	       541	sendf.c	FUNCTION_11
0x40000e0	            0x415f	                                 pop r15	       541	sendf.c	FUNCTION_11
0x40000e2	              0xc3	                                     ret	       541	sendf.c	FUNCTION_11
0x40000e3	            0x31c0	                            xor eax, eax	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x40000e5	           0xf1f00	                         nop dword [rax]	       493	sendf.c	FUNCTION_11	IF_1	FOR_1	IF_2
0x40000e8	        0x488d0440	                  lea rax, [rax + rax*2]	       508	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x40000ec	          0x4d89ef	                            mov r15, r13	       508	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x40000ef	        0x498d1cc4	                  lea rbx, [r12 + rax*8]	       508	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x40000f3	    0x488b05000000	            mov rax, qword [0x040000fa] 	       510	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_2
0x40000fa	    0x4c03bb704d00	           add r15, qword [rbx + 0x4d70]	       508	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4000101	    0x488bbb684d00	          mov rdi, qword [rbx + 0x4d68] 	       510	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_2
0x4000108	          0x4c89fe	                            mov rsi, r15	       510	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_2
0x400010b	            0xff10	                        call qword [rax]	       510	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_2
0x400010d	          0x4885c0	                           test rax, rax	       511	sendf.c	FUNCTION_11	ELSE_1	IF_3	IF_4
0x4000110	          0x4889c5	                            mov rbp, rax	       510	sendf.c	FUNCTION_11	ELSE_1	IF_3	CALL_2
0x4000113	            0x742b	                            je 0x4000140	       511	sendf.c	FUNCTION_11	ELSE_1	IF_3	IF_4
0x4000115	          0x4889ef	                            mov rdi, rbp	        53	string3.h	FUNCTION_18	CALL_3
0x4000118	    0x4803bb704d00	           add rdi, qword [rbx + 0x4d70]	        53	string3.h	FUNCTION_18	CALL_3
0x400011f	          0x4c89ea	                            mov rdx, r13	        53	string3.h	FUNCTION_18	CALL_3
0x4000122	          0x4c89f6	                            mov rsi, r14	        53	string3.h	FUNCTION_18	CALL_3
0x4000125	      0xe800000000	                          call 0x400012a	        53	string3.h	FUNCTION_18	CALL_3
0x400012a	    0x4889ab684d00	          mov qword [rbx + 0x4d68], rbp 	       517	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4000131	    0x4c89bb704d00	          mov qword [rbx + 0x4d70], r15 	       518	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4000138	            0xeb8f	                           jmp 0x40000c9	       518	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x400013a	    0x660f1f440000	                    nop word [rax + rax]	       518	sendf.c	FUNCTION_11	ELSE_1	IF_3
0x4000140	        0x4883c408	                              add rsp, 8	       541	sendf.c	FUNCTION_11
0x4000144	      0xb81b000000	                           mov eax, 0x1b	       512	sendf.c	FUNCTION_11	ELSE_1	IF_3	IF_4
0x4000149	              0x5b	                                 pop rbx	       541	sendf.c	FUNCTION_11
0x400014a	              0x5d	                                 pop rbp	       541	sendf.c	FUNCTION_11
0x400014b	            0x415c	                                 pop r12	       541	sendf.c	FUNCTION_11
0x400014d	            0x415d	                                 pop r13	       541	sendf.c	FUNCTION_11
0x400014f	            0x415e	                                 pop r14	       541	sendf.c	FUNCTION_11
0x4000151	            0x415f	                                 pop r15	       541	sendf.c	FUNCTION_11
0x4000153	              0xc3	                                     ret	       541	sendf.c	FUNCTION_11
Curl_debug	CALL,4:WHILE,0:functions,0:IF,3:ELSE,0:SWITCH,1:FOR,0:DO,0	88
0x40004b0	            0x4156	                                push r14	       841	sendf.c	FUNCTION_17
0x40004b2	            0x4155	                                push r13	       841	sendf.c	FUNCTION_17
0x40004b4	          0x4989cd	                            mov r13, rcx	       841	sendf.c	FUNCTION_17
0x40004b7	            0x4154	                                push r12	       841	sendf.c	FUNCTION_17
0x40004b9	              0x55	                                push rbp	       841	sendf.c	FUNCTION_17
0x40004ba	          0x4989d4	                            mov r12, rdx	       841	sendf.c	FUNCTION_17
0x40004bd	              0x53	                                push rbx	       841	sendf.c	FUNCTION_17
0x40004be	            0x89f5	                            mov ebp, esi	       841	sendf.c	FUNCTION_17
0x40004c0	          0x4889fb	                            mov rbx, rdi	       841	sendf.c	FUNCTION_17
0x40004c3	    0x4881ecb00000	                           sub rsp, 0xb0	       841	sendf.c	FUNCTION_17
0x40004ca	    0x64488b042528	                mov rax, qword fs:[0x28]	       841	sendf.c	FUNCTION_17
0x40004d3	    0x48898424a800	             mov qword [rsp + 0xa8], rax	       841	sendf.c	FUNCTION_17
0x40004db	            0x31c0	                            xor eax, eax	       841	sendf.c	FUNCTION_17
0x40004dd	    0x80bfd1070000	               cmp byte [rdi + 0x7d1], 0	       843	sendf.c	FUNCTION_17	IF_1
0x40004e4	     0xf84a9000000	                            je 0x4000593	       843	sendf.c	FUNCTION_17	IF_1
0x40004ea	          0x4d85c0	                             test r8, r8	       843	sendf.c	FUNCTION_17	IF_1
0x40004ed	     0xf84a0000000	                            je 0x4000593	       843	sendf.c	FUNCTION_17	IF_1
0x40004f3	    0x4d8b88e00000	               mov r9, qword [r8 + 0xe0]	       843	sendf.c	FUNCTION_17	IF_1
0x40004fa	          0x4d85c9	                             test r9, r9	       843	sendf.c	FUNCTION_17	IF_1
0x40004fd	     0xf8490000000	                            je 0x4000593	       843	sendf.c	FUNCTION_17	IF_1
0x4000503	          0x83fe02	                              cmp esi, 2	       847	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x4000506	     0xf84d4000000	                            je 0x40005e0	       847	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x400050c	     0xf86e6000000	                           jbe 0x40005f8	       847	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x4000512	          0x83fe03	                              cmp esi, 3	       847	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x4000515	    0x488d0d000000	                   lea rcx, [0x0400051c]	       846	sendf.c	FUNCTION_17	IF_1
0x400051c	     0xf84ae000000	                            je 0x40005d0	       847	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x4000522	          0x83fe04	                              cmp esi, 4	       847	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x4000525	    0x4c8d05000000	                    lea r8, [0x0400052c]	       858	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x400052c	            0x7565	                           jne 0x4000593	       847	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x400052e	    0x488d15000000	                   lea rdx, [0x04000535]	       865	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x4000535	      0xbea0000000	                           mov esi, 0xa0	       865	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x400053a	          0x4889e7	                            mov rdi, rsp	       865	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x400053d	            0x31c0	                            xor eax, eax	       865	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x400053f	          0x4989e6	                            mov r14, rsp	       865	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x4000542	      0xe800000000	                          call 0x4000547	       865	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x4000547	          0x4889e1	                            mov rcx, rsp	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x400054a	            0x8b11	                    mov edx, dword [rcx]	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x400054c	        0x4883c104	                              add rcx, 4	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x4000550	    0x8d82fffefefe	              lea eax, [rdx - 0x1010101]	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x4000556	            0xf7d2	                                 not edx	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x4000558	            0x21d0	                            and eax, edx	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x400055a	      0x2580808080	                     and eax, 0x80808080	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x400055f	            0x74e9	                            je 0x400054a	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x4000561	            0x89c2	                            mov edx, eax	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x4000563	          0xc1ea10	                           shr edx, 0x10	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x4000566	      0xa980800000	                        test eax, 0x8080	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x400056b	           0xf44c2	                          cmove eax, edx	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x400056e	        0x488d5102	                      lea rdx, [rcx + 2]	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x4000572	            0x89c7	                            mov edi, eax	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x4000574	        0x480f44ca	                          cmove rcx, rdx	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x4000578	          0x4000c7	                             add dil, al	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x400057b	          0x4c89f2	                            mov rdx, r14	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x400057e	        0x4883d903	                              sbb rcx, 3	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x4000582	          0x4889df	                            mov rdi, rbx	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x4000585	            0x31f6	                            xor esi, esi	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x4000587	          0x4c29f1	                            sub rcx, r14	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x400058a	      0xe8d1fbffff	                         call sym.showit	       867	sendf.c	FUNCTION_17	IF_1	IF_2	CALL_3
0x400058f	            0x85c0	                           test eax, eax	       868	sendf.c	FUNCTION_17	IF_1	IF_2	IF_3
0x4000591	            0x7510	                           jne 0x40005a3	       868	sendf.c	FUNCTION_17	IF_1	IF_2	IF_3
0x4000593	          0x4c89e9	                            mov rcx, r13	       872	sendf.c	FUNCTION_17	CALL_4
0x4000596	          0x4c89e2	                            mov rdx, r12	       872	sendf.c	FUNCTION_17	CALL_4
0x4000599	            0x89ee	                            mov esi, ebp	       872	sendf.c	FUNCTION_17	CALL_4
0x400059b	          0x4889df	                            mov rdi, rbx	       872	sendf.c	FUNCTION_17	CALL_4
0x400059e	      0xe8bdfbffff	                         call sym.showit	       872	sendf.c	FUNCTION_17	CALL_4
0x40005a3	    0x488bb424a800	            mov rsi, qword [rsp + 0xa8] 	       874	sendf.c	FUNCTION_17
0x40005ab	    0x644833342528	                xor rsi, qword fs:[0x28]	       874	sendf.c	FUNCTION_17
0x40005b4	            0x755b	                           jne 0x4000611	       874	sendf.c	FUNCTION_17
0x40005b6	    0x4881c4b00000	                           add rsp, 0xb0	       874	sendf.c	FUNCTION_17
0x40005bd	              0x5b	                                 pop rbx	       874	sendf.c	FUNCTION_17
0x40005be	              0x5d	                                 pop rbp	       874	sendf.c	FUNCTION_17
0x40005bf	            0x415c	                                 pop r12	       874	sendf.c	FUNCTION_17
0x40005c1	            0x415d	                                 pop r13	       874	sendf.c	FUNCTION_17
0x40005c3	            0x415e	                                 pop r14	       874	sendf.c	FUNCTION_17
0x40005c5	              0xc3	                                     ret	       874	sendf.c	FUNCTION_17
0x40005c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       874	sendf.c	FUNCTION_17
0x40005d0	    0x4c8d05000000	                    lea r8, [0x040005d7]	       852	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x40005d7	      0xe952ffffff	                           jmp 0x400052e	       852	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x40005dc	         0xf1f4000	                         nop dword [rax]	       852	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x40005e0	    0x488d0d000000	                   lea rcx, [0x040005e7]	       855	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x40005e7	    0x4c8d05000000	                    lea r8, [0x040005ee]	       858	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x40005ee	      0xe93bffffff	                           jmp 0x400052e	       858	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x40005f3	       0xf1f440000	                   nop dword [rax + rax]	       858	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x40005f8	          0x83fe01	                              cmp esi, 1	       847	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x40005fb	    0x488d0d000000	                   lea rcx, [0x04000602]	       849	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x4000602	    0x4c8d05000000	                    lea r8, [0x04000609]	       852	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x4000609	     0xf841fffffff	                            je 0x400052e	       847	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x400060f	            0xeb82	                           jmp 0x4000593	       847	sendf.c	FUNCTION_17	IF_1	SWITCH_1
0x4000611	      0xe800000000	                          call 0x4000616	       874	sendf.c	FUNCTION_17
Curl_recv_plain	CALL,3:WHILE,0:functions,0:IF,3:ELSE,1:SWITCH,0:FOR,0:DO,0	59
0x4000a90	            0x4155	                                push r13	       436	sendf.c	FUNCTION_10
0x4000a92	            0x4154	                                push r12	       436	sendf.c	FUNCTION_10
0x4000a94	          0x4863c6	                         movsxd rax, esi	       437	sendf.c	FUNCTION_10
0x4000a97	              0x55	                                push rbp	       436	sendf.c	FUNCTION_10
0x4000a98	              0x53	                                push rbx	       436	sendf.c	FUNCTION_10
0x4000a99	          0x4889fd	                            mov rbp, rdi	       436	sendf.c	FUNCTION_10
0x4000a9c	          0x4989d1	                             mov r9, rdx	       436	sendf.c	FUNCTION_10
0x4000a9f	          0x4889ca	                            mov rdx, rcx	       436	sendf.c	FUNCTION_10
0x4000aa2	            0x31c9	                            xor ecx, ecx	        44	socket2.h	FUNCTION_30	CALL_8
0x4000aa4	        0x4883ec08	                              sub rsp, 8	       436	sendf.c	FUNCTION_10
0x4000aa8	    0x8bbc87580200	   mov edi, dword [rdi + rax*4 + 0x258] 	        44	socket2.h	FUNCTION_30	CALL_8
0x4000aaf	          0x4c89ce	                             mov rsi, r9	        44	socket2.h	FUNCTION_30	CALL_8
0x4000ab2	          0x4d89c4	                             mov r12, r8	       436	sendf.c	FUNCTION_10
0x4000ab5	      0xe800000000	                          call 0x4000aba	        44	socket2.h	FUNCTION_30	CALL_8
0x4000aba	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	       450	sendf.c	FUNCTION_10	IF_2
0x4000abe	          0x4889c3	                            mov rbx, rax	        44	socket2.h	FUNCTION_30	CALL_8
0x4000ac1	    0x41c704240000	                      mov dword [r12], 0	       449	sendf.c	FUNCTION_10
0x4000ac9	            0x7415	                            je 0x4000ae0	       450	sendf.c	FUNCTION_10	IF_2
0x4000acb	        0x4883c408	                              add rsp, 8	       475	sendf.c	FUNCTION_10
0x4000acf	          0x4889d8	                            mov rax, rbx	       475	sendf.c	FUNCTION_10
0x4000ad2	              0x5b	                                 pop rbx	       475	sendf.c	FUNCTION_10
0x4000ad3	              0x5d	                                 pop rbp	       475	sendf.c	FUNCTION_10
0x4000ad4	            0x415c	                                 pop r12	       475	sendf.c	FUNCTION_10
0x4000ad6	            0x415d	                                 pop r13	       475	sendf.c	FUNCTION_10
0x4000ad8	              0xc3	                                     ret	       475	sendf.c	FUNCTION_10
0x4000ad9	     0xf1f80000000	                         nop dword [rax]	       475	sendf.c	FUNCTION_10
0x4000ae0	      0xe800000000	                          call 0x4000ae5	       451	sendf.c	FUNCTION_10	IF_2
0x4000ae5	          0x448b28	                   mov r13d, dword [rax]	       451	sendf.c	FUNCTION_10	IF_2
0x4000ae8	        0x4183fd0b	                           cmp r13d, 0xb	       453	sendf.c	FUNCTION_10	IF_2	IF_3
0x4000aec	            0x744a	                            je 0x4000b38	       453	sendf.c	FUNCTION_10	IF_2	IF_3
0x4000aee	        0x4183fd04	                             cmp r13d, 4	       453	sendf.c	FUNCTION_10	IF_2	IF_3
0x4000af2	            0x7444	                            je 0x4000b38	       453	sendf.c	FUNCTION_10	IF_2	IF_3
0x4000af4	          0x4489ee	                           mov esi, r13d	       468	sendf.c	FUNCTION_10	IF_2	ELSE_1	CALL_2
0x4000af7	          0x4889ef	                            mov rdi, rbp	       468	sendf.c	FUNCTION_10	IF_2	ELSE_1	CALL_2
0x4000afa	      0xe800000000	                          call 0x4000aff	       468	sendf.c	FUNCTION_10	IF_2	ELSE_1	CALL_2
0x4000aff	        0x488b7d00	                    mov rdi, qword [rbp]	       468	sendf.c	FUNCTION_10	IF_2	ELSE_1	CALL_2
0x4000b03	    0x488d35000000	                   lea rsi, [0x04000b0a]	       468	sendf.c	FUNCTION_10	IF_2	ELSE_1	CALL_2
0x4000b0a	          0x4889c2	                            mov rdx, rax	       468	sendf.c	FUNCTION_10	IF_2	ELSE_1	CALL_2
0x4000b0d	            0x31c0	                            xor eax, eax	       468	sendf.c	FUNCTION_10	IF_2	ELSE_1	CALL_2
0x4000b0f	      0xe800000000	                          call 0x4000b14	       468	sendf.c	FUNCTION_10	IF_2	ELSE_1	CALL_2
0x4000b14	        0x488b4500	                    mov rax, qword [rbp]	       470	sendf.c	FUNCTION_10	IF_2	ELSE_1
0x4000b18	    0x4489a8bc4d00	         mov dword [rax + 0x4dbc], r13d 	       470	sendf.c	FUNCTION_10	IF_2	ELSE_1
0x4000b1f	    0x41c704243800	                   mov dword [r12], 0x38	       471	sendf.c	FUNCTION_10	IF_2	ELSE_1
0x4000b27	        0x4883c408	                              add rsp, 8	       475	sendf.c	FUNCTION_10
0x4000b2b	          0x4889d8	                            mov rax, rbx	       475	sendf.c	FUNCTION_10
0x4000b2e	              0x5b	                                 pop rbx	       475	sendf.c	FUNCTION_10
0x4000b2f	              0x5d	                                 pop rbp	       475	sendf.c	FUNCTION_10
0x4000b30	            0x415c	                                 pop r12	       475	sendf.c	FUNCTION_10
0x4000b32	            0x415d	                                 pop r13	       475	sendf.c	FUNCTION_10
0x4000b34	              0xc3	                                     ret	       475	sendf.c	FUNCTION_10
0x4000b35	           0xf1f00	                         nop dword [rax]	       475	sendf.c	FUNCTION_10
0x4000b38	    0x41c704245100	                   mov dword [r12], 0x51	       465	sendf.c	FUNCTION_10	IF_2	IF_3
0x4000b40	        0x4883c408	                              add rsp, 8	       475	sendf.c	FUNCTION_10
0x4000b44	          0x4889d8	                            mov rax, rbx	       475	sendf.c	FUNCTION_10
0x4000b47	              0x5b	                                 pop rbx	       475	sendf.c	FUNCTION_10
0x4000b48	              0x5d	                                 pop rbp	       475	sendf.c	FUNCTION_10
0x4000b49	            0x415c	                                 pop r12	       475	sendf.c	FUNCTION_10
0x4000b4b	            0x415d	                                 pop r13	       475	sendf.c	FUNCTION_10
0x4000b4d	              0xc3	                                     ret	       475	sendf.c	FUNCTION_10
Curl_infof	CALL,5:WHILE,0:functions,0:IF,1:ELSE,0:SWITCH,0:FOR,0:DO,0	70
0x4000620	              0x55	                                push rbp	       234	sendf.c	FUNCTION_4
0x4000621	              0x53	                                push rbx	       234	sendf.c	FUNCTION_4
0x4000622	          0x4889fb	                            mov rbx, rdi	       234	sendf.c	FUNCTION_4
0x4000625	    0x4881ece80800	                          sub rsp, 0x8e8	       234	sendf.c	FUNCTION_4
0x400062c	            0x84c0	                             test al, al	       234	sendf.c	FUNCTION_4
0x400062e	    0x488994244008	            mov qword [rsp + 0x840], rdx	       234	sendf.c	FUNCTION_4
0x4000636	    0x48898c244808	            mov qword [rsp + 0x848], rcx	       234	sendf.c	FUNCTION_4
0x400063e	    0x4c8984245008	             mov qword [rsp + 0x850], r8	       234	sendf.c	FUNCTION_4
0x4000646	    0x4c898c245808	             mov qword [rsp + 0x858], r9	       234	sendf.c	FUNCTION_4
0x400064e	            0x7440	                            je 0x4000690	       234	sendf.c	FUNCTION_4
0x4000650	     0xf2984246008	      movaps xmmword [rsp + 0x860], xmm0	       234	sendf.c	FUNCTION_4
0x4000658	     0xf298c247008	      movaps xmmword [rsp + 0x870], xmm1	       234	sendf.c	FUNCTION_4
0x4000660	     0xf2994248008	      movaps xmmword [rsp + 0x880], xmm2	       234	sendf.c	FUNCTION_4
0x4000668	     0xf299c249008	      movaps xmmword [rsp + 0x890], xmm3	       234	sendf.c	FUNCTION_4
0x4000670	     0xf29a424a008	      movaps xmmword [rsp + 0x8a0], xmm4	       234	sendf.c	FUNCTION_4
0x4000678	     0xf29ac24b008	      movaps xmmword [rsp + 0x8b0], xmm5	       234	sendf.c	FUNCTION_4
0x4000680	     0xf29b424c008	      movaps xmmword [rsp + 0x8c0], xmm6	       234	sendf.c	FUNCTION_4
0x4000688	     0xf29bc24d008	      movaps xmmword [rsp + 0x8d0], xmm7	       234	sendf.c	FUNCTION_4
0x4000690	    0x64488b042528	                mov rax, qword fs:[0x28]	       234	sendf.c	FUNCTION_4
0x4000699	    0x488984242808	            mov qword [rsp + 0x828], rax	       234	sendf.c	FUNCTION_4
0x40006a1	            0x31c0	                            xor eax, eax	       234	sendf.c	FUNCTION_4
0x40006a3	          0x4885db	                           test rbx, rbx	       235	sendf.c	FUNCTION_4	IF_1
0x40006a6	            0x7409	                            je 0x40006b1	       235	sendf.c	FUNCTION_4	IF_1
0x40006a8	    0x80bbe8070000	               cmp byte [rbx + 0x7e8], 0	       235	sendf.c	FUNCTION_4	IF_1
0x40006af	            0x7527	                           jne 0x40006d8	       235	sendf.c	FUNCTION_4	IF_1
0x40006b1	    0x488b84242808	           mov rax, qword [rsp + 0x828] 	       245	sendf.c	FUNCTION_4
0x40006b9	    0x644833042528	                xor rax, qword fs:[0x28]	       245	sendf.c	FUNCTION_4
0x40006c2	     0xf85a4000000	                           jne 0x400076c	       245	sendf.c	FUNCTION_4
0x40006c8	    0x4881c4e80800	                          add rsp, 0x8e8	       245	sendf.c	FUNCTION_4
0x40006cf	              0x5b	                                 pop rbx	       245	sendf.c	FUNCTION_4
0x40006d0	              0x5d	                                 pop rbp	       245	sendf.c	FUNCTION_4
0x40006d1	              0xc3	                                     ret	       245	sendf.c	FUNCTION_4
0x40006d2	    0x660f1f440000	                    nop word [rax + rax]	       245	sendf.c	FUNCTION_4
0x40006d8	    0x488d84240009	                  lea rax, [rsp + 0x900]	       239	sendf.c	FUNCTION_4	IF_1	CALL_1
0x40006e0	      0x488d6c2420	                   lea rbp, [rsp + 0x20]	       240	sendf.c	FUNCTION_4	IF_1	CALL_2
0x40006e5	      0x488d4c2408	                      lea rcx, [rsp + 8]	       240	sendf.c	FUNCTION_4	IF_1	CALL_2
0x40006ea	          0x4889f2	                            mov rdx, rsi	       240	sendf.c	FUNCTION_4	IF_1	CALL_2
0x40006ed	      0xbe01080000	                          mov esi, 0x801	       240	sendf.c	FUNCTION_4	IF_1	CALL_2
0x40006f2	    0xc74424081000	               mov dword [rsp + 8], 0x10	       239	sendf.c	FUNCTION_4	IF_1	CALL_1
0x40006fa	      0x4889442410	             mov qword [rsp + 0x10], rax	       239	sendf.c	FUNCTION_4	IF_1	CALL_1
0x40006ff	    0x488d84243008	                  lea rax, [rsp + 0x830]	       239	sendf.c	FUNCTION_4	IF_1	CALL_1
0x4000707	          0x4889ef	                            mov rdi, rbp	       240	sendf.c	FUNCTION_4	IF_1	CALL_2
0x400070a	    0xc744240c3000	            mov dword [rsp + 0xc], 0x30 	       239	sendf.c	FUNCTION_4	IF_1	CALL_1
0x4000712	      0x4889442418	             mov qword [rsp + 0x18], rax	       239	sendf.c	FUNCTION_4	IF_1	CALL_1
0x4000717	      0xe800000000	                          call 0x400071c	       240	sendf.c	FUNCTION_4	IF_1	CALL_2
0x400071c	          0x4889e9	                            mov rcx, rbp	       242	sendf.c	FUNCTION_4	IF_1	CALL_4
0x400071f	            0x8b11	                    mov edx, dword [rcx]	       242	sendf.c	FUNCTION_4	IF_1	CALL_4
0x4000721	        0x4883c104	                              add rcx, 4	       242	sendf.c	FUNCTION_4	IF_1	CALL_4
0x4000725	    0x8d82fffefefe	              lea eax, [rdx - 0x1010101]	       242	sendf.c	FUNCTION_4	IF_1	CALL_4
0x400072b	            0xf7d2	                                 not edx	       242	sendf.c	FUNCTION_4	IF_1	CALL_4
0x400072d	            0x21d0	                            and eax, edx	       242	sendf.c	FUNCTION_4	IF_1	CALL_4
0x400072f	      0x2580808080	                     and eax, 0x80808080	       242	sendf.c	FUNCTION_4	IF_1	CALL_4
0x4000734	            0x74e9	                            je 0x400071f	       242	sendf.c	FUNCTION_4	IF_1	CALL_4
0x4000736	            0x89c2	                            mov edx, eax	       242	sendf.c	FUNCTION_4	IF_1	CALL_4
0x4000738	          0xc1ea10	                           shr edx, 0x10	       242	sendf.c	FUNCTION_4	IF_1	CALL_4
0x400073b	      0xa980800000	                        test eax, 0x8080	       242	sendf.c	FUNCTION_4	IF_1	CALL_4
0x4000740	           0xf44c2	                          cmove eax, edx	       242	sendf.c	FUNCTION_4	IF_1	CALL_4
0x4000743	        0x488d5102	                      lea rdx, [rcx + 2]	       242	sendf.c	FUNCTION_4	IF_1	CALL_4
0x4000747	            0x89c7	                            mov edi, eax	       242	sendf.c	FUNCTION_4	IF_1	CALL_4
0x4000749	        0x480f44ca	                          cmove rcx, rdx	       242	sendf.c	FUNCTION_4	IF_1	CALL_4
0x400074d	          0x4000c7	                             add dil, al	       242	sendf.c	FUNCTION_4	IF_1	CALL_4
0x4000750	          0x4889ea	                            mov rdx, rbp	       243	sendf.c	FUNCTION_4	IF_1	CALL_5
0x4000753	        0x4883d903	                              sbb rcx, 3	       242	sendf.c	FUNCTION_4	IF_1	CALL_4
0x4000757	          0x4889df	                            mov rdi, rbx	       243	sendf.c	FUNCTION_4	IF_1	CALL_5
0x400075a	          0x4531c0	                            xor r8d, r8d	       243	sendf.c	FUNCTION_4	IF_1	CALL_5
0x400075d	          0x4829e9	                            sub rcx, rbp	       242	sendf.c	FUNCTION_4	IF_1	CALL_4
0x4000760	            0x31f6	                            xor esi, esi	       243	sendf.c	FUNCTION_4	IF_1	CALL_5
0x4000762	      0xe800000000	                          call 0x4000767	       243	sendf.c	FUNCTION_4	IF_1	CALL_5
0x4000767	      0xe945ffffff	                           jmp 0x40006b1	       245	sendf.c	FUNCTION_4
0x400076c	      0xe800000000	                          call 0x4000771	       245	sendf.c	FUNCTION_4
Curl_failf	CALL,6:WHILE,0:functions,0:IF,3:ELSE,0:SWITCH,0:FOR,0:DO,0	86
0x4000780	            0x4154	                                push r12	       252	sendf.c	FUNCTION_5
0x4000782	              0x55	                                push rbp	       252	sendf.c	FUNCTION_5
0x4000783	          0x4889fd	                            mov rbp, rdi	       252	sendf.c	FUNCTION_5
0x4000786	              0x53	                                push rbx	       252	sendf.c	FUNCTION_5
0x4000787	    0x4881ece00100	                          sub rsp, 0x1e0	       252	sendf.c	FUNCTION_5
0x400078e	            0x84c0	                             test al, al	       252	sendf.c	FUNCTION_5
0x4000790	    0x488994244001	            mov qword [rsp + 0x140], rdx	       252	sendf.c	FUNCTION_5
0x4000798	    0x48898c244801	            mov qword [rsp + 0x148], rcx	       252	sendf.c	FUNCTION_5
0x40007a0	    0x4c8984245001	             mov qword [rsp + 0x150], r8	       252	sendf.c	FUNCTION_5
0x40007a8	    0x4c898c245801	             mov qword [rsp + 0x158], r9	       252	sendf.c	FUNCTION_5
0x40007b0	            0x7440	                            je 0x40007f2	       252	sendf.c	FUNCTION_5
0x40007b2	     0xf2984246001	      movaps xmmword [rsp + 0x160], xmm0	       252	sendf.c	FUNCTION_5
0x40007ba	     0xf298c247001	      movaps xmmword [rsp + 0x170], xmm1	       252	sendf.c	FUNCTION_5
0x40007c2	     0xf2994248001	      movaps xmmword [rsp + 0x180], xmm2	       252	sendf.c	FUNCTION_5
0x40007ca	     0xf299c249001	      movaps xmmword [rsp + 0x190], xmm3	       252	sendf.c	FUNCTION_5
0x40007d2	     0xf29a424a001	      movaps xmmword [rsp + 0x1a0], xmm4	       252	sendf.c	FUNCTION_5
0x40007da	     0xf29ac24b001	      movaps xmmword [rsp + 0x1b0], xmm5	       252	sendf.c	FUNCTION_5
0x40007e2	     0xf29b424c001	      movaps xmmword [rsp + 0x1c0], xmm6	       252	sendf.c	FUNCTION_5
0x40007ea	     0xf29bc24d001	      movaps xmmword [rsp + 0x1d0], xmm7	       252	sendf.c	FUNCTION_5
0x40007f2	    0x64488b042528	                mov rax, qword fs:[0x28]	       252	sendf.c	FUNCTION_5
0x40007fb	    0x488984242801	            mov qword [rsp + 0x128], rax	       252	sendf.c	FUNCTION_5
0x4000803	            0x31c0	                            xor eax, eax	       252	sendf.c	FUNCTION_5
0x4000805	    0x80bde8070000	               cmp byte [rbp + 0x7e8], 0	       253	sendf.c	FUNCTION_5	IF_1
0x400080c	            0x750e	                           jne 0x400081c	       253	sendf.c	FUNCTION_5	IF_1
0x400080e	    0x4883bd000200	              cmp qword [rbp + 0x200], 0	       253	sendf.c	FUNCTION_5	IF_1
0x4000816	     0xf84bb000000	                            je 0x40008d7	       253	sendf.c	FUNCTION_5	IF_1
0x400081c	    0x488d84240002	                  lea rax, [rsp + 0x200]	       257	sendf.c	FUNCTION_5	IF_1	CALL_1
0x4000824	      0x4c8d642420	                   lea r12, [rsp + 0x20]	       258	sendf.c	FUNCTION_5	IF_1	CALL_2
0x4000829	      0x488d4c2408	                      lea rcx, [rsp + 8]	       258	sendf.c	FUNCTION_5	IF_1	CALL_2
0x400082e	          0x4889f2	                            mov rdx, rsi	       258	sendf.c	FUNCTION_5	IF_1	CALL_2
0x4000831	      0xbe00010000	                          mov esi, 0x100	       258	sendf.c	FUNCTION_5	IF_1	CALL_2
0x4000836	    0xc74424081000	               mov dword [rsp + 8], 0x10	       257	sendf.c	FUNCTION_5	IF_1	CALL_1
0x400083e	      0x4889442410	             mov qword [rsp + 0x10], rax	       257	sendf.c	FUNCTION_5	IF_1	CALL_1
0x4000843	    0x488d84243001	                  lea rax, [rsp + 0x130]	       257	sendf.c	FUNCTION_5	IF_1	CALL_1
0x400084b	          0x4c89e7	                            mov rdi, r12	       258	sendf.c	FUNCTION_5	IF_1	CALL_2
0x400084e	          0x4c89e3	                            mov rbx, r12	       259	sendf.c	FUNCTION_5	IF_1	CALL_3
0x4000851	    0xc744240c3000	            mov dword [rsp + 0xc], 0x30 	       257	sendf.c	FUNCTION_5	IF_1	CALL_1
0x4000859	      0x4889442418	             mov qword [rsp + 0x18], rax	       257	sendf.c	FUNCTION_5	IF_1	CALL_1
0x400085e	      0xe800000000	                          call 0x4000863	       258	sendf.c	FUNCTION_5	IF_1	CALL_2
0x4000863	            0x8b13	                    mov edx, dword [rbx]	       259	sendf.c	FUNCTION_5	IF_1	CALL_3
0x4000865	        0x4883c304	                              add rbx, 4	       259	sendf.c	FUNCTION_5	IF_1	CALL_3
0x4000869	    0x8d82fffefefe	              lea eax, [rdx - 0x1010101]	       259	sendf.c	FUNCTION_5	IF_1	CALL_3
0x400086f	            0xf7d2	                                 not edx	       259	sendf.c	FUNCTION_5	IF_1	CALL_3
0x4000871	            0x21d0	                            and eax, edx	       259	sendf.c	FUNCTION_5	IF_1	CALL_3
0x4000873	      0x2580808080	                     and eax, 0x80808080	       259	sendf.c	FUNCTION_5	IF_1	CALL_3
0x4000878	            0x74e9	                            je 0x4000863	       259	sendf.c	FUNCTION_5	IF_1	CALL_3
0x400087a	            0x89c2	                            mov edx, eax	       259	sendf.c	FUNCTION_5	IF_1	CALL_3
0x400087c	          0xc1ea10	                           shr edx, 0x10	       259	sendf.c	FUNCTION_5	IF_1	CALL_3
0x400087f	      0xa980800000	                        test eax, 0x8080	       259	sendf.c	FUNCTION_5	IF_1	CALL_3
0x4000884	           0xf44c2	                          cmove eax, edx	       259	sendf.c	FUNCTION_5	IF_1	CALL_3
0x4000887	        0x488d5302	                      lea rdx, [rbx + 2]	       259	sendf.c	FUNCTION_5	IF_1	CALL_3
0x400088b	            0x89c7	                            mov edi, eax	       259	sendf.c	FUNCTION_5	IF_1	CALL_3
0x400088d	        0x480f44da	                          cmove rbx, rdx	       259	sendf.c	FUNCTION_5	IF_1	CALL_3
0x4000891	          0x4000c7	                             add dil, al	       259	sendf.c	FUNCTION_5	IF_1	CALL_3
0x4000894	    0x488bbd000200	           mov rdi, qword [rbp + 0x200] 	       261	sendf.c	FUNCTION_5	IF_1	IF_2
0x400089b	        0x4883db03	                              sbb rbx, 3	       259	sendf.c	FUNCTION_5	IF_1	CALL_3
0x400089f	          0x4c29e3	                            sub rbx, r12	       259	sendf.c	FUNCTION_5	IF_1	CALL_3
0x40008a2	          0x4885ff	                           test rdi, rdi	       261	sendf.c	FUNCTION_5	IF_1	IF_2
0x40008a5	            0x7409	                            je 0x40008b0	       261	sendf.c	FUNCTION_5	IF_1	IF_2
0x40008a7	    0x80bdb84d0000	              cmp byte [rbp + 0x4db8], 0	       261	sendf.c	FUNCTION_5	IF_1	IF_2
0x40008ae	            0x7450	                            je 0x4000900	       261	sendf.c	FUNCTION_5	IF_1	IF_2
0x40008b0	    0x80bde8070000	               cmp byte [rbp + 0x7e8], 0	       265	sendf.c	FUNCTION_5	IF_1	IF_3
0x40008b7	            0x741e	                            je 0x40008d7	       265	sendf.c	FUNCTION_5	IF_1	IF_3
0x40008b9	        0x488d4b01	                      lea rcx, [rbx + 1]	       267	sendf.c	FUNCTION_5	IF_1	IF_3
0x40008bd	          0x4531c0	                            xor r8d, r8d	       268	sendf.c	FUNCTION_5	IF_1	IF_3	CALL_5
0x40008c0	          0x4c89e2	                            mov rdx, r12	       268	sendf.c	FUNCTION_5	IF_1	IF_3	CALL_5
0x40008c3	            0x31f6	                            xor esi, esi	       268	sendf.c	FUNCTION_5	IF_1	IF_3	CALL_5
0x40008c5	          0x4889ef	                            mov rdi, rbp	       268	sendf.c	FUNCTION_5	IF_1	IF_3	CALL_5
0x40008c8	      0xc6441c200a	        mov byte [rsp + rbx + 0x20], 0xa	       266	sendf.c	FUNCTION_5	IF_1	IF_3
0x40008cd	      0xc6440c2000	          mov byte [rsp + rcx + 0x20], 0	       267	sendf.c	FUNCTION_5	IF_1	IF_3
0x40008d2	      0xe800000000	                          call 0x40008d7	       268	sendf.c	FUNCTION_5	IF_1	IF_3	CALL_5
0x40008d7	    0x488b84242801	           mov rax, qword [rsp + 0x128] 	       272	sendf.c	FUNCTION_5
0x40008df	    0x644833042528	                xor rax, qword fs:[0x28]	       272	sendf.c	FUNCTION_5
0x40008e8	            0x752b	                           jne 0x4000915	       272	sendf.c	FUNCTION_5
0x40008ea	    0x4881c4e00100	                          add rsp, 0x1e0	       272	sendf.c	FUNCTION_5
0x40008f1	              0x5b	                                 pop rbx	       272	sendf.c	FUNCTION_5
0x40008f2	              0x5d	                                 pop rbp	       272	sendf.c	FUNCTION_5
0x40008f3	            0x415c	                                 pop r12	       272	sendf.c	FUNCTION_5
0x40008f5	              0xc3	                                     ret	       272	sendf.c	FUNCTION_5
0x40008f6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       272	sendf.c	FUNCTION_5
0x4000900	        0x488d5301	                      lea rdx, [rbx + 1]	       110	string3.h	FUNCTION_24	CALL_3
0x4000904	          0x4c89e6	                            mov rsi, r12	       110	string3.h	FUNCTION_24	CALL_3
0x4000907	      0xe800000000	                          call 0x400090c	       110	string3.h	FUNCTION_24	CALL_3
0x400090c	    0xc685b84d0000	              mov byte [rbp + 0x4db8], 1	       263	sendf.c	FUNCTION_5	IF_1	IF_2
0x4000913	            0xeb9b	                           jmp 0x40008b0	       263	sendf.c	FUNCTION_5	IF_1	IF_2
0x4000915	      0xe800000000	                          call 0x400091a	       272	sendf.c	FUNCTION_5
Curl_read	CALL,6:WHILE,0:functions,0:IF,4:ELSE,1:SWITCH,0:FOR,0:DO,0	101
0x4000300	            0x4157	                                push r15	       707	sendf.c	FUNCTION_15
0x4000302	            0x4156	                                push r14	       707	sendf.c	FUNCTION_15
0x4000304	          0x4189f7	                           mov r15d, esi	       707	sendf.c	FUNCTION_15
0x4000307	            0x4155	                                push r13	       707	sendf.c	FUNCTION_15
0x4000309	            0x4154	                                push r12	       707	sendf.c	FUNCTION_15
0x400030b	      0xbe01000000	                              mov esi, 1	       715	sendf.c	FUNCTION_15	CALL_1
0x4000310	              0x55	                                push rbp	       707	sendf.c	FUNCTION_15
0x4000311	              0x53	                                push rbx	       707	sendf.c	FUNCTION_15
0x4000312	          0x4889fb	                            mov rbx, rdi	       707	sendf.c	FUNCTION_15
0x4000315	          0x4989d5	                            mov r13, rdx	       707	sendf.c	FUNCTION_15
0x4000318	          0x4889cd	                            mov rbp, rcx	       707	sendf.c	FUNCTION_15
0x400031b	          0x4d89c4	                             mov r12, r8	       707	sendf.c	FUNCTION_15
0x400031e	        0x4883ec18	                           sub rsp, 0x18	       707	sendf.c	FUNCTION_15
0x4000322	          0x4c8b37	                    mov r14, qword [rdi]	       712	sendf.c	FUNCTION_15
0x4000325	    0x64488b042528	                mov rax, qword fs:[0x28]	       707	sendf.c	FUNCTION_15
0x400032e	      0x4889442408	                mov qword [rsp + 8], rax	       707	sendf.c	FUNCTION_15
0x4000333	            0x31c0	                            xor eax, eax	       707	sendf.c	FUNCTION_15
0x4000335	    0xc74424043800	               mov dword [rsp + 4], 0x38	       708	sendf.c	FUNCTION_15
0x400033d	    0x498bbea80000	            mov rdi, qword [r14 + 0xa8] 	       715	sendf.c	FUNCTION_15	CALL_1
0x4000344	      0xe800000000	                          call 0x4000349	       715	sendf.c	FUNCTION_15	CALL_1
0x4000349	            0x84c0	                             test al, al	       715	sendf.c	FUNCTION_15	CALL_1
0x400034b	            0x740c	                            je 0x4000359	       715	sendf.c	FUNCTION_15	CALL_1
0x400034d	    0x488b83600700	           mov rax, qword [rbx + 0x760] 	       716	sendf.c	FUNCTION_15
0x4000354	          0x833801	                      cmp dword [rax], 1	       715	sendf.c	FUNCTION_15	CALL_1
0x4000357	            0x7477	                            je 0x40003d0	       715	sendf.c	FUNCTION_15	CALL_1
0x4000359	            0x31c0	                            xor eax, eax	       721	sendf.c	FUNCTION_15
0x400035b	    0x4439bb5c0200	          cmp dword [rbx + 0x25c], r15d 	       721	sendf.c	FUNCTION_15
0x4000362	    0x49c704240000	                      mov qword [r12], 0	       723	sendf.c	FUNCTION_15
0x400036a	          0x4889e9	                            mov rcx, rbp	       749	sendf.c	FUNCTION_15
0x400036d	      0x4c8d442404	                       lea r8, [rsp + 4]	       749	sendf.c	FUNCTION_15
0x4000372	          0x4c89ea	                            mov rdx, r13	       749	sendf.c	FUNCTION_15
0x4000375	          0x4889df	                            mov rdi, rbx	       749	sendf.c	FUNCTION_15
0x4000378	           0xf94c0	                                 sete al	       721	sendf.c	FUNCTION_15
0x400037b	    0x4939ae900700	           cmp qword [r14 + 0x790], rbp 	       749	sendf.c	FUNCTION_15
0x4000382	    0x490f468e9007	         cmovbe rcx, qword [r14 + 0x790]	       749	sendf.c	FUNCTION_15
0x400038a	          0x4889c6	                            mov rsi, rax	       721	sendf.c	FUNCTION_15
0x400038d	        0x4883c04e	                           add rax, 0x4e	       749	sendf.c	FUNCTION_15
0x4000391	          0xff14c3	                call qword [rbx + rax*8]	       749	sendf.c	FUNCTION_15
0x4000394	          0x4885c0	                           test rax, rax	       750	sendf.c	FUNCTION_15	IF_3
0x4000397	          0x4889c5	                            mov rbp, rax	       749	sendf.c	FUNCTION_15
0x400039a	     0xf88c0000000	                            js 0x4000460	       750	sendf.c	FUNCTION_15	IF_3
0x40003a0	        0x49012c24	                    add qword [r12], rbp	       759	sendf.c	FUNCTION_15
0x40003a4	            0x31c0	                            xor eax, eax	       761	sendf.c	FUNCTION_15
0x40003a6	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       762	sendf.c	FUNCTION_15
0x40003ab	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       762	sendf.c	FUNCTION_15
0x40003b4	     0xf85e4000000	                           jne 0x400049e	       762	sendf.c	FUNCTION_15
0x40003ba	        0x4883c418	                           add rsp, 0x18	       762	sendf.c	FUNCTION_15
0x40003be	              0x5b	                                 pop rbx	       762	sendf.c	FUNCTION_15
0x40003bf	              0x5d	                                 pop rbp	       762	sendf.c	FUNCTION_15
0x40003c0	            0x415c	                                 pop r12	       762	sendf.c	FUNCTION_15
0x40003c2	            0x415d	                                 pop r13	       762	sendf.c	FUNCTION_15
0x40003c4	            0x415e	                                 pop r14	       762	sendf.c	FUNCTION_15
0x40003c6	            0x415f	                                 pop r15	       762	sendf.c	FUNCTION_15
0x40003c8	              0xc3	                                     ret	       762	sendf.c	FUNCTION_15
0x40003c9	     0xf1f80000000	                         nop dword [rax]	       762	sendf.c	FUNCTION_15
0x40003d0	            0x31f6	                            xor esi, esi	       721	sendf.c	FUNCTION_15
0x40003d2	    0x4439bb5c0200	          cmp dword [rbx + 0x25c], r15d 	       721	sendf.c	FUNCTION_15
0x40003d9	    0x49c704240000	                      mov qword [r12], 0	       723	sendf.c	FUNCTION_15
0x40003e1	    0x488b83a00400	           mov rax, qword [rbx + 0x4a0] 	       727	sendf.c	FUNCTION_15	IF_1	CALL_2
0x40003e8	    0x488b93a80400	           mov rdx, qword [rbx + 0x4a8] 	       727	sendf.c	FUNCTION_15	IF_1	CALL_2
0x40003ef	        0x400f94c6	                                sete sil	       721	sendf.c	FUNCTION_15
0x40003f3	          0x4829c2	                            sub rdx, rax	       727	sendf.c	FUNCTION_15	IF_1	CALL_2
0x40003f6	          0x4839ea	                            cmp rdx, rbp	       727	sendf.c	FUNCTION_15	IF_1	CALL_2
0x40003f9	        0x480f47d5	                          cmova rdx, rbp	       727	sendf.c	FUNCTION_15	IF_1	CALL_2
0x40003fd	          0x4885d2	                           test rdx, rdx	       731	sendf.c	FUNCTION_15	IF_1	IF_2
0x4000400	          0x4989d6	                            mov r14, rdx	       727	sendf.c	FUNCTION_15	IF_1	CALL_2
0x4000403	            0x756b	                           jne 0x4000470	       731	sendf.c	FUNCTION_15	IF_1	IF_2
0x4000405	    0x4881fd004000	                         cmp rbp, 0x4000	       749	sendf.c	FUNCTION_15
0x400040c	          0x4863c6	                         movsxd rax, esi	       749	sendf.c	FUNCTION_15
0x400040f	      0xb900400000	                         mov ecx, 0x4000	       749	sendf.c	FUNCTION_15
0x4000414	        0x480f46cd	                         cmovbe rcx, rbp	       749	sendf.c	FUNCTION_15
0x4000418	        0x4883c04e	                           add rax, 0x4e	       749	sendf.c	FUNCTION_15
0x400041c	    0x488b93980400	           mov rdx, qword [rbx + 0x498] 	       749	sendf.c	FUNCTION_15
0x4000423	      0x4c8d442404	                       lea r8, [rsp + 4]	       749	sendf.c	FUNCTION_15
0x4000428	          0x4889df	                            mov rdi, rbx	       749	sendf.c	FUNCTION_15
0x400042b	          0xff14c3	                call qword [rbx + rax*8]	       749	sendf.c	FUNCTION_15
0x400042e	          0x4885c0	                           test rax, rax	       750	sendf.c	FUNCTION_15	IF_3
0x4000431	          0x4889c5	                            mov rbp, rax	       749	sendf.c	FUNCTION_15
0x4000434	            0x782a	                            js 0x4000460	       750	sendf.c	FUNCTION_15	IF_3
0x4000436	    0x488bb3980400	           mov rsi, qword [rbx + 0x498] 	        53	string3.h	FUNCTION_18	CALL_3
0x400043d	          0x4889c2	                            mov rdx, rax	        53	string3.h	FUNCTION_18	CALL_3
0x4000440	          0x4c89ef	                            mov rdi, r13	        53	string3.h	FUNCTION_18	CALL_3
0x4000443	      0xe800000000	                          call 0x4000448	        53	string3.h	FUNCTION_18	CALL_3
0x4000448	    0x4889aba80400	            mov qword [rbx + 0x4a8], rbp	       755	sendf.c	FUNCTION_15	IF_4
0x400044f	    0x4889aba00400	            mov qword [rbx + 0x4a0], rbp	       756	sendf.c	FUNCTION_15	IF_4
0x4000456	      0xe945ffffff	                           jmp 0x40003a0	       756	sendf.c	FUNCTION_15	IF_4
0x400045b	       0xf1f440000	                   nop dword [rax + rax]	       756	sendf.c	FUNCTION_15	IF_4
0x4000460	        0x8b442404	                mov eax, dword [rsp + 4]	       751	sendf.c	FUNCTION_15	IF_3
0x4000464	      0xe93dffffff	                           jmp 0x40003a6	       751	sendf.c	FUNCTION_15	IF_3
0x4000469	     0xf1f80000000	                         nop dword [rax]	       751	sendf.c	FUNCTION_15	IF_3
0x4000470	    0x480383980400	            add rax, qword [rbx + 0x498]	        53	string3.h	FUNCTION_18	CALL_3
0x4000477	          0x4c89f2	                            mov rdx, r14	        53	string3.h	FUNCTION_18	CALL_3
0x400047a	          0x4c89ef	                            mov rdi, r13	        53	string3.h	FUNCTION_18	CALL_3
0x400047d	          0x4889c6	                            mov rsi, rax	        53	string3.h	FUNCTION_18	CALL_3
0x4000480	      0xe800000000	                          call 0x4000485	        53	string3.h	FUNCTION_18	CALL_3
0x4000485	    0x4c01b3a00400	           add qword [rbx + 0x4a0], r14 	       733	sendf.c	FUNCTION_15	IF_1	IF_2
0x400048c	    0xc683b1030000	               mov byte [rbx + 0x3b1], 0	       734	sendf.c	FUNCTION_15	IF_1	IF_2
0x4000493	            0x31c0	                            xor eax, eax	       737	sendf.c	FUNCTION_15	IF_1	IF_2
0x4000495	        0x4d893424	                    mov qword [r12], r14	       736	sendf.c	FUNCTION_15	IF_1	IF_2
0x4000499	      0xe908ffffff	                           jmp 0x40003a6	       737	sendf.c	FUNCTION_15	IF_1	IF_2
0x400049e	      0xe800000000	                          call 0x40004a3	       762	sendf.c	FUNCTION_15
Curl_write_plain	CALL,1:WHILE,0:functions,0:IF,0:ELSE,0:SWITCH,0:FOR,0:DO,0	20
0x4000a30	              0x53	                                push rbx	       422	sendf.c	FUNCTION_9
0x4000a31	          0x4c89c3	                             mov rbx, r8	       422	sendf.c	FUNCTION_9
0x4000a34	        0x4883ec10	                           sub rsp, 0x10	       422	sendf.c	FUNCTION_9
0x4000a38	    0x64488b042528	                mov rax, qword fs:[0x28]	       422	sendf.c	FUNCTION_9
0x4000a41	      0x4889442408	                mov qword [rsp + 8], rax	       422	sendf.c	FUNCTION_9
0x4000a46	            0x31c0	                            xor eax, eax	       422	sendf.c	FUNCTION_9
0x4000a48	    0x39b75c020000	           cmp dword [rdi + 0x25c], esi 	       427	sendf.c	FUNCTION_9	CALL_1
0x4000a4e	      0x4c8d442404	                       lea r8, [rsp + 4]	       427	sendf.c	FUNCTION_9	CALL_1
0x4000a53	        0x400f94c6	                                sete sil	       427	sendf.c	FUNCTION_9	CALL_1
0x4000a57	        0x400fb6f6	                          movzx esi, sil	       427	sendf.c	FUNCTION_9	CALL_1
0x4000a5b	      0xe800000000	                          call 0x4000a60	       427	sendf.c	FUNCTION_9	CALL_1
0x4000a60	          0x488903	                    mov qword [rbx], rax	       429	sendf.c	FUNCTION_9
0x4000a63	        0x8b442404	                mov eax, dword [rsp + 4]	       432	sendf.c	FUNCTION_9
0x4000a67	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       432	sendf.c	FUNCTION_9
0x4000a6c	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       432	sendf.c	FUNCTION_9
0x4000a75	            0x7506	                           jne 0x4000a7d	       432	sendf.c	FUNCTION_9
0x4000a77	        0x4883c410	                           add rsp, 0x10	       432	sendf.c	FUNCTION_9
0x4000a7b	              0x5b	                                 pop rbx	       432	sendf.c	FUNCTION_9
0x4000a7c	              0xc3	                                     ret	       432	sendf.c	FUNCTION_9
0x4000a7d	      0xe800000000	                          call 0x4000a82	       432	sendf.c	FUNCTION_9
Curl_client_write	CALL,5:WHILE,0:functions,0:IF,3:ELSE,0:SWITCH,0:FOR,0:DO,0	261
0x4000b50	            0x4157	                                push r15	       644	sendf.c	FUNCTION_13
0x4000b52	            0x4156	                                push r14	       644	sendf.c	FUNCTION_13
0x4000b54	            0x4155	                                push r13	       644	sendf.c	FUNCTION_13
0x4000b56	            0x4154	                                push r12	       644	sendf.c	FUNCTION_13
0x4000b58	              0x55	                                push rbp	       644	sendf.c	FUNCTION_13
0x4000b59	              0x53	                                push rbx	       644	sendf.c	FUNCTION_13
0x4000b5a	        0x4883ec38	                           sub rsp, 0x38	       644	sendf.c	FUNCTION_13
0x4000b5e	          0x4885c9	                           test rcx, rcx	       647	sendf.c	FUNCTION_13	IF_1
0x4000b61	          0x4c8b3f	                    mov r15, qword [rdi]	       645	sendf.c	FUNCTION_13
0x4000b64	      0x48897c2420	             mov qword [rsp + 0x20], rdi	       644	sendf.c	FUNCTION_13
0x4000b69	        0x89742414	             mov dword [rsp + 0x14], esi	       644	sendf.c	FUNCTION_13
0x4000b6d	      0x4889542418	             mov qword [rsp + 0x18], rdx	       644	sendf.c	FUNCTION_13
0x4000b72	      0x48894c2408	                mov qword [rsp + 8], rcx	       644	sendf.c	FUNCTION_13
0x4000b77	            0x7557	                           jne 0x4000bd0	       647	sendf.c	FUNCTION_13	IF_1
0x4000b79	          0x4189f6	                           mov r14d, esi	       647	sendf.c	FUNCTION_13	IF_1
0x4000b7c	          0x4889fb	                            mov rbx, rdi	       647	sendf.c	FUNCTION_13	IF_1
0x4000b7f	          0x4889d7	                            mov rdi, rdx	       648	sendf.c	FUNCTION_13	CALL_1
0x4000b82	      0xe800000000	                          call 0x4000b87	       648	sendf.c	FUNCTION_13	CALL_1
0x4000b87	      0x4889442408	                mov qword [rsp + 8], rax	       648	sendf.c	FUNCTION_13	CALL_1
0x4000b8c	          0x4489f0	                           mov eax, r14d	       653	sendf.c	FUNCTION_13	IF_2
0x4000b8f	          0x83e001	                              and eax, 1	       653	sendf.c	FUNCTION_13	IF_2
0x4000b92	            0x7422	                            je 0x4000bb6	       653	sendf.c	FUNCTION_13	IF_2
0x4000b94	    0x488b83e00300	           mov rax, qword [rbx + 0x3e0] 	       654	sendf.c	FUNCTION_13	IF_2
0x4000b9b	    0xf68080000000	            test byte [rax + 0x80], 0xc 	       653	sendf.c	FUNCTION_13	IF_2
0x4000ba2	      0xb801000000	                              mov eax, 1	       653	sendf.c	FUNCTION_13	IF_2
0x4000ba7	            0x740d	                            je 0x4000bb6	       653	sendf.c	FUNCTION_13	IF_2
0x4000ba9	    0x80bbfc060000	           cmp byte [rbx + 0x6fc], 0x41 	       654	sendf.c	FUNCTION_13	IF_2
0x4000bb0	     0xf84e2010000	                            je 0x4000d98	       654	sendf.c	FUNCTION_13	IF_2
0x4000bb6	    0x48837c240800	                  cmp qword [rsp + 8], 0	       559	sendf.c	FUNCTION_12	IF_1
0x4000bbc	            0x754d	                           jne 0x4000c0b	       559	sendf.c	FUNCTION_12	IF_1
0x4000bbe	            0x31c0	                            xor eax, eax	       560	sendf.c	FUNCTION_12	IF_1
0x4000bc0	        0x4883c438	                           add rsp, 0x38	       669	sendf.c	FUNCTION_13
0x4000bc4	              0x5b	                                 pop rbx	       669	sendf.c	FUNCTION_13
0x4000bc5	              0x5d	                                 pop rbp	       669	sendf.c	FUNCTION_13
0x4000bc6	            0x415c	                                 pop r12	       669	sendf.c	FUNCTION_13
0x4000bc8	            0x415d	                                 pop r13	       669	sendf.c	FUNCTION_13
0x4000bca	            0x415e	                                 pop r14	       669	sendf.c	FUNCTION_13
0x4000bcc	            0x415f	                                 pop r15	       669	sendf.c	FUNCTION_13
0x4000bce	              0xc3	                                     ret	       669	sendf.c	FUNCTION_13
0x4000bcf	              0x90	                                     nop	       669	sendf.c	FUNCTION_13
0x4000bd0	      0xf644241401	               test byte [rsp + 0x14], 1	       653	sendf.c	FUNCTION_13	IF_2
0x4000bd5	     0xf844d010000	                            je 0x4000d28	       653	sendf.c	FUNCTION_13	IF_2
0x4000bdb	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       654	sendf.c	FUNCTION_13	IF_2
0x4000be0	    0x488b80e00300	           mov rax, qword [rax + 0x3e0] 	       654	sendf.c	FUNCTION_13	IF_2
0x4000be7	    0xf68080000000	            test byte [rax + 0x80], 0xc 	       653	sendf.c	FUNCTION_13	IF_2
0x4000bee	     0xf846c010000	                            je 0x4000d60	       653	sendf.c	FUNCTION_13	IF_2
0x4000bf4	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       654	sendf.c	FUNCTION_13	IF_2
0x4000bf9	    0x80b8fc060000	           cmp byte [rax + 0x6fc], 0x41 	       654	sendf.c	FUNCTION_13	IF_2
0x4000c00	     0xf8492010000	                            je 0x4000d98	       654	sendf.c	FUNCTION_13	IF_2
0x4000c06	      0xb801000000	                              mov eax, 1	       654	sendf.c	FUNCTION_13	IF_2
0x4000c0b	    0x41f687b40100	          test byte [r15 + 0x1b4], 0x10 	       564	sendf.c	FUNCTION_12	IF_2
0x4000c13	     0xf8557010000	                           jne 0x4000d70	       564	sendf.c	FUNCTION_12	IF_2
0x4000c19	          0x4531f6	                          xor r14d, r14d	       555	sendf.c	FUNCTION_12
0x4000c1c	            0x85c0	                           test eax, eax	       568	sendf.c	FUNCTION_12	IF_3
0x4000c1e	            0x7407	                            je 0x4000c27	       568	sendf.c	FUNCTION_12	IF_3
0x4000c20	    0x4d8bb7880200	           mov r14, qword [r15 + 0x288] 	       569	sendf.c	FUNCTION_12	IF_3
0x4000c27	      0xf644241402	               test byte [rsp + 0x14], 2	       570	sendf.c	FUNCTION_12	IF_4
0x4000c2c	    0x48c744242800	               mov qword [rsp + 0x28], 0	       554	sendf.c	FUNCTION_12
0x4000c35	            0x7415	                            je 0x4000c4c	       570	sendf.c	FUNCTION_12	IF_4
0x4000c37	    0x498b87900200	           mov rax, qword [r15 + 0x290] 	       571	sendf.c	FUNCTION_12	IF_4
0x4000c3e	          0x4885c0	                           test rax, rax	       570	sendf.c	FUNCTION_12	IF_4
0x4000c41	      0x4889442428	             mov qword [rsp + 0x28], rax	       571	sendf.c	FUNCTION_12	IF_4
0x4000c46	     0xf84dd020000	                            je 0x4000f29	       570	sendf.c	FUNCTION_12	IF_4
0x4000c4c	      0x4c8b6c2418	            mov r13, qword [rsp + 0x18] 	       554	sendf.c	FUNCTION_12
0x4000c51	      0x4c8b642408	                mov r12, qword [rsp + 8]	       554	sendf.c	FUNCTION_12
0x4000c56	      0xbd00400000	                         mov ebp, 0x4000	       582	sendf.c	FUNCTION_12	WHILE_1
0x4000c5b	       0xf1f440000	                   nop dword [rax + rax]	       582	sendf.c	FUNCTION_12	WHILE_1
0x4000c60	    0x4981fc004000	                         cmp r12, 0x4000	       582	sendf.c	FUNCTION_12	WHILE_1
0x4000c67	          0x4889eb	                            mov rbx, rbp	       582	sendf.c	FUNCTION_12	WHILE_1
0x4000c6a	        0x490f46dc	                         cmovbe rbx, r12	       582	sendf.c	FUNCTION_12	WHILE_1
0x4000c6e	          0x4d85f6	                           test r14, r14	       584	sendf.c	FUNCTION_12	WHILE_1	IF_5
0x4000c71	            0x742a	                            je 0x4000c9d	       584	sendf.c	FUNCTION_12	WHILE_1	IF_5
0x4000c73	    0x498b8f100200	           mov rcx, qword [r15 + 0x210] 	       585	sendf.c	FUNCTION_12	WHILE_1	IF_5	CALL_2
0x4000c7a	          0x4889da	                            mov rdx, rbx	       585	sendf.c	FUNCTION_12	WHILE_1	IF_5	CALL_2
0x4000c7d	      0xbe01000000	                              mov esi, 1	       585	sendf.c	FUNCTION_12	WHILE_1	IF_5	CALL_2
0x4000c82	          0x4c89ef	                            mov rdi, r13	       585	sendf.c	FUNCTION_12	WHILE_1	IF_5	CALL_2
0x4000c85	          0x41ffd6	                                call r14	       585	sendf.c	FUNCTION_12	WHILE_1	IF_5	CALL_2
0x4000c88	    0x483d01000010	                     cmp rax, 0x10000001	       587	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6
0x4000c8e	     0xf84d4010000	                            je 0x4000e68	       587	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6
0x4000c94	          0x4839c3	                            cmp rbx, rax	       597	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_8
0x4000c97	     0xf8503020000	                           jne 0x4000ea0	       597	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_8
0x4000c9d	          0x4901dd	                            add r13, rbx	       603	sendf.c	FUNCTION_12	WHILE_1
0x4000ca0	          0x4929dc	                            sub r12, rbx	       581	sendf.c	FUNCTION_12	WHILE_1
0x4000ca3	            0x75bb	                           jne 0x4000c60	       581	sendf.c	FUNCTION_12	WHILE_1
0x4000ca5	      0x488b5c2428	            mov rbx, qword [rsp + 0x28] 	       607	sendf.c	FUNCTION_12	IF_9
0x4000caa	          0x4885db	                           test rbx, rbx	       607	sendf.c	FUNCTION_12	IF_9
0x4000cad	     0xf840bffffff	                            je 0x4000bbe	       607	sendf.c	FUNCTION_12	IF_9
0x4000cb3	      0xbe01000000	                              mov esi, 1	       611	sendf.c	FUNCTION_12	IF_9	CALL_6
0x4000cb8	          0x4c89ff	                            mov rdi, r15	       611	sendf.c	FUNCTION_12	IF_9	CALL_6
0x4000cbb	      0xe800000000	                          call 0x4000cc0	       611	sendf.c	FUNCTION_12	IF_9	CALL_6
0x4000cc0	    0x498b8f200200	           mov rcx, qword [r15 + 0x220] 	       612	sendf.c	FUNCTION_12	IF_9	CALL_7
0x4000cc7	      0x488b542408	                mov rdx, qword [rsp + 8]	       612	sendf.c	FUNCTION_12	IF_9	CALL_7
0x4000ccc	      0xbe01000000	                              mov esi, 1	       612	sendf.c	FUNCTION_12	IF_9	CALL_7
0x4000cd1	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       612	sendf.c	FUNCTION_12	IF_9	CALL_7
0x4000cd6	            0xffd3	                                call rbx	       612	sendf.c	FUNCTION_12	IF_9	CALL_7
0x4000cd8	            0x31f6	                            xor esi, esi	       613	sendf.c	FUNCTION_12	IF_9	CALL_8
0x4000cda	          0x4889c3	                            mov rbx, rax	       612	sendf.c	FUNCTION_12	IF_9	CALL_7
0x4000cdd	          0x4c89ff	                            mov rdi, r15	       613	sendf.c	FUNCTION_12	IF_9	CALL_8
0x4000ce0	      0xe800000000	                          call 0x4000ce5	       613	sendf.c	FUNCTION_12	IF_9	CALL_8
0x4000ce5	    0x4881fb010000	                     cmp rbx, 0x10000001	       615	sendf.c	FUNCTION_12	IF_9	IF_10
0x4000cec	     0xf8456020000	                            je 0x4000f48	       615	sendf.c	FUNCTION_12	IF_9	IF_10
0x4000cf2	      0x483b5c2408	                cmp rbx, qword [rsp + 8]	       621	sendf.c	FUNCTION_12	IF_9	IF_11
0x4000cf7	     0xf84c1feffff	                            je 0x4000bbe	       621	sendf.c	FUNCTION_12	IF_9	IF_11
0x4000cfd	    0x488d35000000	                   lea rsi, [0x04000d04]	       622	sendf.c	FUNCTION_12	IF_9	IF_11	CALL_10
0x4000d04	          0x4c89ff	                            mov rdi, r15	       622	sendf.c	FUNCTION_12	IF_9	IF_11	CALL_10
0x4000d07	            0x31c0	                            xor eax, eax	       622	sendf.c	FUNCTION_12	IF_9	IF_11	CALL_10
0x4000d09	      0xe800000000	                          call 0x4000d0e	       622	sendf.c	FUNCTION_12	IF_9	IF_11	CALL_10
0x4000d0e	        0x4883c438	                           add rsp, 0x38	       669	sendf.c	FUNCTION_13
0x4000d12	      0xb817000000	                           mov eax, 0x17	       623	sendf.c	FUNCTION_12	IF_9	IF_11
0x4000d17	              0x5b	                                 pop rbx	       669	sendf.c	FUNCTION_13
0x4000d18	              0x5d	                                 pop rbp	       669	sendf.c	FUNCTION_13
0x4000d19	            0x415c	                                 pop r12	       669	sendf.c	FUNCTION_13
0x4000d1b	            0x415d	                                 pop r13	       669	sendf.c	FUNCTION_13
0x4000d1d	            0x415e	                                 pop r14	       669	sendf.c	FUNCTION_13
0x4000d1f	            0x415f	                                 pop r15	       669	sendf.c	FUNCTION_13
0x4000d21	              0xc3	                                     ret	       669	sendf.c	FUNCTION_13
0x4000d22	    0x660f1f440000	                    nop word [rax + rax]	       669	sendf.c	FUNCTION_13
0x4000d28	    0x41f687b40100	          test byte [r15 + 0x1b4], 0x10 	       564	sendf.c	FUNCTION_12	IF_2
0x4000d30	            0x753e	                           jne 0x4000d70	       564	sendf.c	FUNCTION_12	IF_2
0x4000d32	          0x4531f6	                          xor r14d, r14d	       555	sendf.c	FUNCTION_12
0x4000d35	      0xe9edfeffff	                           jmp 0x4000c27	       555	sendf.c	FUNCTION_12
0x4000d3a	      0x488b542408	                mov rdx, qword [rsp + 8]	        84	sendf.c	FUNCTION_1	CALL_2
0x4000d3f	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	        84	sendf.c	FUNCTION_1	CALL_2
0x4000d44	      0xbe0d000000	                            mov esi, 0xd	        84	sendf.c	FUNCTION_1	CALL_2
0x4000d49	      0xe800000000	                          call 0x4000d4e	        84	sendf.c	FUNCTION_1	CALL_2
0x4000d4e	          0x4885c0	                           test rax, rax	        85	sendf.c	FUNCTION_1	IF_4
0x4000d51	          0x4989c6	                            mov r14, rax	        84	sendf.c	FUNCTION_1	CALL_2
0x4000d54	     0xf8597000000	                           jne 0x4000df1	        85	sendf.c	FUNCTION_1	IF_4
0x4000d5a	    0x660f1f440000	                    nop word [rax + rax]	        85	sendf.c	FUNCTION_1	IF_4
0x4000d60	    0x41f687b40100	          test byte [r15 + 0x1b4], 0x10 	       564	sendf.c	FUNCTION_12	IF_2
0x4000d68	     0xf84b2feffff	                            je 0x4000c20	       564	sendf.c	FUNCTION_12	IF_2
0x4000d6e	            0x6690	                                     nop	       564	sendf.c	FUNCTION_12	IF_2
0x4000d70	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       565	sendf.c	FUNCTION_12	CALL_1
0x4000d75	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       565	sendf.c	FUNCTION_12	CALL_1
0x4000d7a	        0x8b742414	            mov esi, dword [rsp + 0x14] 	       565	sendf.c	FUNCTION_12	CALL_1
0x4000d7e	        0x4883c438	                           add rsp, 0x38	       669	sendf.c	FUNCTION_13
0x4000d82	          0x4c89ff	                            mov rdi, r15	       619	sendf.c	FUNCTION_12	IF_9	CALL_9
0x4000d85	              0x5b	                                 pop rbx	       669	sendf.c	FUNCTION_13
0x4000d86	              0x5d	                                 pop rbp	       669	sendf.c	FUNCTION_13
0x4000d87	            0x415c	                                 pop r12	       669	sendf.c	FUNCTION_13
0x4000d89	            0x415d	                                 pop r13	       669	sendf.c	FUNCTION_13
0x4000d8b	            0x415e	                                 pop r14	       669	sendf.c	FUNCTION_13
0x4000d8d	            0x415f	                                 pop r15	       669	sendf.c	FUNCTION_13
0x4000d8f	      0xe9acf2ffff	                      jmp sym.pausewrite	       619	sendf.c	FUNCTION_12	IF_9	CALL_9
0x4000d94	         0xf1f4000	                         nop dword [rax]	       619	sendf.c	FUNCTION_12	IF_9	CALL_9
0x4000d98	      0x488b442418	            mov rax, qword [rsp + 0x18] 	        65	sendf.c	FUNCTION_1	IF_1
0x4000d9d	          0x4885c0	                           test rax, rax	        65	sendf.c	FUNCTION_1	IF_1
0x4000da0	     0xf8425010000	                            je 0x4000ecb	        65	sendf.c	FUNCTION_1	IF_1
0x4000da6	    0x48837c240800	                  cmp qword [rsp + 8], 0	        65	sendf.c	FUNCTION_1	IF_1
0x4000dac	     0xf8419010000	                            je 0x4000ecb	        65	sendf.c	FUNCTION_1	IF_1
0x4000db2	    0x4180bf025100	              cmp byte [r15 + 0x5102], 0	        69	sendf.c	FUNCTION_1	IF_2
0x4000dba	     0xf847affffff	                            je 0x4000d3a	        69	sendf.c	FUNCTION_1	IF_2
0x4000dc0	          0x80380a	                     cmp byte [rax], 0xa	        72	sendf.c	FUNCTION_1	IF_2	IF_3
0x4000dc3	     0xf84a2010000	                            je 0x4000f6b	        72	sendf.c	FUNCTION_1	IF_2	IF_3
0x4000dc9	      0x488b542408	                mov rdx, qword [rsp + 8]	        84	sendf.c	FUNCTION_1	CALL_2
0x4000dce	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	        84	sendf.c	FUNCTION_1	CALL_2
0x4000dd3	      0xbe0d000000	                            mov esi, 0xd	        84	sendf.c	FUNCTION_1	CALL_2
0x4000dd8	    0x41c687025100	              mov byte [r15 + 0x5102], 0	        80	sendf.c	FUNCTION_1	IF_2
0x4000de0	      0xe800000000	                          call 0x4000de5	        84	sendf.c	FUNCTION_1	CALL_2
0x4000de5	          0x4885c0	                           test rax, rax	        85	sendf.c	FUNCTION_1	IF_4
0x4000de8	          0x4989c6	                            mov r14, rax	        84	sendf.c	FUNCTION_1	CALL_2
0x4000deb	     0xf8426010000	                            je 0x4000f17	        85	sendf.c	FUNCTION_1	IF_4
0x4000df1	      0x488b442418	            mov rax, qword [rsp + 0x18] 	        87	sendf.c	FUNCTION_1	IF_4	WHILE_1
0x4000df6	      0x488b7c2408	                mov rdi, qword [rsp + 8]	        87	sendf.c	FUNCTION_1	IF_4	WHILE_1
0x4000dfb	          0x4d89f5	                            mov r13, r14	        87	sendf.c	FUNCTION_1	IF_4	WHILE_1
0x4000dfe	      0x488d5c38ff	                lea rbx, [rax + rdi - 1]	        87	sendf.c	FUNCTION_1	IF_4	WHILE_1
0x4000e03	          0x4c39f3	                            cmp rbx, r14	        87	sendf.c	FUNCTION_1	IF_4	WHILE_1
0x4000e06	     0xf86d8000000	                           jbe 0x4000ee4	        87	sendf.c	FUNCTION_1	IF_4	WHILE_1
0x4000e0c	      0xbd0a000000	                            mov ebp, 0xa	        99	sendf.c	FUNCTION_1	IF_4	WHILE_1	ELSE_1	IF_6
0x4000e11	            0xeb2b	                           jmp 0x4000e3e	        99	sendf.c	FUNCTION_1	IF_4	WHILE_1	ELSE_1	IF_6
0x4000e13	       0xf1f440000	                   nop dword [rax + rax]	        99	sendf.c	FUNCTION_1	IF_4	WHILE_1	ELSE_1	IF_6
0x4000e18	      0x410fb64601	               movzx eax, byte [r14 + 1]	        92	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5
0x4000e1d	        0x4983c601	                              add r14, 1	        91	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5
0x4000e21	        0x41884500	                      mov byte [r13], al	        92	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5
0x4000e25	    0x498387085100	             add qword [r15 + 0x5108], 1	        94	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5
0x4000e2d	        0x4983c601	                              add r14, 1	       107	sendf.c	FUNCTION_1	IF_4	WHILE_1
0x4000e31	        0x4983c501	                              add r13, 1	       106	sendf.c	FUNCTION_1	IF_4	WHILE_1
0x4000e35	          0x4c39f3	                            cmp rbx, r14	        87	sendf.c	FUNCTION_1	IF_4	WHILE_1
0x4000e38	     0xf86a6000000	                           jbe 0x4000ee4	        87	sendf.c	FUNCTION_1	IF_4	WHILE_1
0x4000e3e	    0x488d35000000	                   lea rsi, [0x04000e45]	        89	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5	CALL_3
0x4000e45	      0xba02000000	                              mov edx, 2	        89	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5	CALL_3
0x4000e4a	          0x4c89f7	                            mov rdi, r14	        89	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5	CALL_3
0x4000e4d	      0xe800000000	                          call 0x4000e52	        89	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5	CALL_3
0x4000e52	            0x85c0	                           test eax, eax	        89	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5	CALL_3
0x4000e54	            0x74c2	                            je 0x4000e18	        89	sendf.c	FUNCTION_1	IF_4	WHILE_1	IF_5	CALL_3
0x4000e56	        0x410fb606	                   movzx eax, byte [r14]	        97	sendf.c	FUNCTION_1	IF_4	WHILE_1	ELSE_1	IF_6
0x4000e5a	            0x3c0d	                             cmp al, 0xd	        99	sendf.c	FUNCTION_1	IF_4	WHILE_1	ELSE_1	IF_6
0x4000e5c	           0xf44c5	                          cmove eax, ebp	        99	sendf.c	FUNCTION_1	IF_4	WHILE_1	ELSE_1	IF_6
0x4000e5f	        0x41884500	                      mov byte [r13], al	        99	sendf.c	FUNCTION_1	IF_4	WHILE_1	ELSE_1	IF_6
0x4000e63	            0xebc8	                           jmp 0x4000e2d	        99	sendf.c	FUNCTION_1	IF_4	WHILE_1	ELSE_1	IF_6
0x4000e65	           0xf1f00	                         nop dword [rax]	        99	sendf.c	FUNCTION_1	IF_4	WHILE_1	ELSE_1	IF_6
0x4000e68	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       588	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	IF_7
0x4000e6d	    0x488b80e00300	           mov rax, qword [rax + 0x3e0] 	       588	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	IF_7
0x4000e74	    0xf68084000000	           test byte [rax + 0x84], 0x10 	       588	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	IF_7
0x4000e7b	            0x7458	                            je 0x4000ed5	       588	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	IF_7
0x4000e7d	    0x488d35000000	                   lea rsi, [0x04000e84]	       592	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	IF_7	CALL_3
0x4000e84	            0x31c0	                            xor eax, eax	       592	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	IF_7	CALL_3
0x4000e86	          0x4c89ff	                            mov rdi, r15	       592	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	IF_7	CALL_3
0x4000e89	      0xe800000000	                          call 0x4000e8e	       592	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	IF_7	CALL_3
0x4000e8e	      0xb817000000	                           mov eax, 0x17	       593	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	IF_7
0x4000e93	      0xe928fdffff	                           jmp 0x4000bc0	       593	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	IF_7
0x4000e98	     0xf1f84000000	                   nop dword [rax + rax]	       593	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	IF_7
0x4000ea0	    0x488d35000000	                   lea rsi, [0x04000ea7]	       598	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_8	CALL_5
0x4000ea7	          0x4889d9	                            mov rcx, rbx	       598	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_8	CALL_5
0x4000eaa	          0x4889c2	                            mov rdx, rax	       598	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_8	CALL_5
0x4000ead	          0x4c89ff	                            mov rdi, r15	       598	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_8	CALL_5
0x4000eb0	            0x31c0	                            xor eax, eax	       598	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_8	CALL_5
0x4000eb2	      0xe800000000	                          call 0x4000eb7	       598	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_8	CALL_5
0x4000eb7	        0x4883c438	                           add rsp, 0x38	       669	sendf.c	FUNCTION_13
0x4000ebb	      0xb817000000	                           mov eax, 0x17	       599	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_8
0x4000ec0	              0x5b	                                 pop rbx	       669	sendf.c	FUNCTION_13
0x4000ec1	              0x5d	                                 pop rbp	       669	sendf.c	FUNCTION_13
0x4000ec2	            0x415c	                                 pop r12	       669	sendf.c	FUNCTION_13
0x4000ec4	            0x415d	                                 pop r13	       669	sendf.c	FUNCTION_13
0x4000ec6	            0x415e	                                 pop r14	       669	sendf.c	FUNCTION_13
0x4000ec8	            0x415f	                                 pop r15	       669	sendf.c	FUNCTION_13
0x4000eca	              0xc3	                                     ret	       669	sendf.c	FUNCTION_13
0x4000ecb	      0xb801000000	                              mov eax, 1	        65	sendf.c	FUNCTION_1	IF_1
0x4000ed0	      0xe9e1fcffff	                           jmp 0x4000bb6	        65	sendf.c	FUNCTION_1	IF_1
0x4000ed5	          0x4c89e1	                            mov rcx, r12	       595	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	CALL_4
0x4000ed8	          0x4c89ea	                            mov rdx, r13	       595	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	CALL_4
0x4000edb	        0x8b742414	            mov esi, dword [rsp + 0x14] 	       595	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	CALL_4
0x4000edf	      0xe99afeffff	                           jmp 0x4000d7e	       595	sendf.c	FUNCTION_12	WHILE_1	IF_5	IF_6	CALL_4
0x4000ee4	      0x4c8b642408	                mov r12, qword [rsp + 8]	       110	sendf.c	FUNCTION_1	IF_4	IF_7
0x4000ee9	      0x4c03642418	             add r12, qword [rsp + 0x18]	       110	sendf.c	FUNCTION_1	IF_4	IF_7
0x4000eee	          0x4d39f4	                            cmp r12, r14	       110	sendf.c	FUNCTION_1	IF_4	IF_7
0x4000ef1	            0x7610	                           jbe 0x4000f03	       110	sendf.c	FUNCTION_1	IF_4	IF_7
0x4000ef3	        0x410fb606	                   movzx eax, byte [r14]	       112	sendf.c	FUNCTION_1	IF_4	IF_7	IF_8
0x4000ef7	            0x3c0d	                             cmp al, 0xd	       112	sendf.c	FUNCTION_1	IF_4	IF_7	IF_8
0x4000ef9	            0x7461	                            je 0x4000f5c	       112	sendf.c	FUNCTION_1	IF_4	IF_7	IF_8
0x4000efb	        0x41884500	                      mov byte [r13], al	       120	sendf.c	FUNCTION_1	IF_4	IF_7	ELSE_3
0x4000eff	        0x4983c501	                              add r13, 1	       122	sendf.c	FUNCTION_1	IF_4	IF_7
0x4000f03	          0x4d39ec	                            cmp r12, r13	       124	sendf.c	FUNCTION_1	IF_4	IF_9
0x4000f06	            0x7605	                           jbe 0x4000f0d	       124	sendf.c	FUNCTION_1	IF_4	IF_9
0x4000f08	      0x41c6450000	                       mov byte [r13], 0	       126	sendf.c	FUNCTION_1	IF_4	IF_9
0x4000f0d	      0x4c2b6c2418	             sub r13, qword [rsp + 0x18]	       128	sendf.c	FUNCTION_1	IF_4
0x4000f12	      0x4c896c2408	                mov qword [rsp + 8], r13	       128	sendf.c	FUNCTION_1	IF_4
0x4000f17	      0x488b442420	            mov rax, qword [rsp + 0x20] 	       128	sendf.c	FUNCTION_1	IF_4
0x4000f1c	          0x4c8b38	                    mov r15, qword [rax]	       128	sendf.c	FUNCTION_1	IF_4
0x4000f1f	      0xb801000000	                              mov eax, 1	       128	sendf.c	FUNCTION_1	IF_4
0x4000f24	      0xe98dfcffff	                           jmp 0x4000bb6	       128	sendf.c	FUNCTION_1	IF_4
0x4000f29	    0x4983bf200200	              cmp qword [r15 + 0x220], 0	       571	sendf.c	FUNCTION_12	IF_4
0x4000f31	     0xf8415fdffff	                            je 0x4000c4c	       571	sendf.c	FUNCTION_12	IF_4
0x4000f37	    0x498b87880200	           mov rax, qword [r15 + 0x288] 	       577	sendf.c	FUNCTION_12	IF_4
0x4000f3e	      0x4889442428	             mov qword [rsp + 0x28], rax	       577	sendf.c	FUNCTION_12	IF_4
0x4000f43	      0xe904fdffff	                           jmp 0x4000c4c	       577	sendf.c	FUNCTION_12	IF_4
0x4000f48	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       619	sendf.c	FUNCTION_12	IF_9	CALL_9
0x4000f4d	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       619	sendf.c	FUNCTION_12	IF_9	CALL_9
0x4000f52	      0xbe02000000	                              mov esi, 2	       619	sendf.c	FUNCTION_12	IF_9	CALL_9
0x4000f57	      0xe922feffff	                           jmp 0x4000d7e	       619	sendf.c	FUNCTION_12	IF_9	CALL_9
0x4000f5c	      0x41c645000a	                     mov byte [r13], 0xa	       114	sendf.c	FUNCTION_1	IF_4	IF_7	IF_8
0x4000f61	    0x41c687025100	              mov byte [r15 + 0x5102], 1	       116	sendf.c	FUNCTION_1	IF_4	IF_7	IF_8
0x4000f69	            0xeb94	                           jmp 0x4000eff	       116	sendf.c	FUNCTION_1	IF_4	IF_7	IF_8
0x4000f6b	    0x48836c240801	                  sub qword [rsp + 8], 1	        75	sendf.c	FUNCTION_1	IF_2	IF_3	CALL_1
0x4000f71	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	        59	string3.h	FUNCTION_19	CALL_3
0x4000f76	      0x488b442408	                mov rax, qword [rsp + 8]	        75	sendf.c	FUNCTION_1	IF_2	IF_3	CALL_1
0x4000f7b	        0x488d7701	                      lea rsi, [rdi + 1]	        59	string3.h	FUNCTION_19	CALL_3
0x4000f7f	          0x4889c2	                            mov rdx, rax	        59	string3.h	FUNCTION_19	CALL_3
0x4000f82	      0xe800000000	                          call 0x4000f87	        59	string3.h	FUNCTION_19	CALL_3
0x4000f87	    0x498387085100	             add qword [r15 + 0x5108], 1	        78	sendf.c	FUNCTION_1	IF_2	IF_3
0x4000f8f	      0xe935feffff	                           jmp 0x4000dc9	        78	sendf.c	FUNCTION_1	IF_2	IF_3
Curl_read_plain	CALL,1:WHILE,0:functions,0:IF,2:ELSE,0:SWITCH,0:FOR,0:DO,0	24
0x40002b0	              0x53	                                push rbx	       675	sendf.c	FUNCTION_14
0x40002b1	          0x4889cb	                            mov rbx, rcx	       675	sendf.c	FUNCTION_14
0x40002b4	            0x31c9	                            xor ecx, ecx	        44	socket2.h	FUNCTION_30	CALL_8
0x40002b6	      0xe800000000	                          call 0x40002bb	        44	socket2.h	FUNCTION_30	CALL_8
0x40002bb	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	       678	sendf.c	FUNCTION_14	IF_1
0x40002bf	            0x740f	                            je 0x40002d0	       678	sendf.c	FUNCTION_14	IF_1
0x40002c1	          0x488903	                    mov qword [rbx], rax	       692	sendf.c	FUNCTION_14
0x40002c4	            0x31c0	                            xor eax, eax	       693	sendf.c	FUNCTION_14
0x40002c6	              0x5b	                                 pop rbx	       694	sendf.c	FUNCTION_14
0x40002c7	              0xc3	                                     ret	       694	sendf.c	FUNCTION_14
0x40002c8	     0xf1f84000000	                   nop dword [rax + rax]	       694	sendf.c	FUNCTION_14
0x40002d0	      0xe800000000	                          call 0x40002d5	       679	sendf.c	FUNCTION_14	IF_1
0x40002d5	            0x8b00	                    mov eax, dword [rax]	       679	sendf.c	FUNCTION_14	IF_1
0x40002d7	          0x83f80b	                            cmp eax, 0xb	       686	sendf.c	FUNCTION_14	IF_1	IF_2
0x40002da	            0x7414	                            je 0x40002f0	       686	sendf.c	FUNCTION_14	IF_1	IF_2
0x40002dc	          0x83f804	                              cmp eax, 4	       686	sendf.c	FUNCTION_14	IF_1	IF_2
0x40002df	            0x740f	                            je 0x40002f0	       686	sendf.c	FUNCTION_14	IF_1	IF_2
0x40002e1	      0xb838000000	                           mov eax, 0x38	       688	sendf.c	FUNCTION_14	IF_1
0x40002e6	              0x5b	                                 pop rbx	       694	sendf.c	FUNCTION_14
0x40002e7	              0xc3	                                     ret	       694	sendf.c	FUNCTION_14
0x40002e8	     0xf1f84000000	                   nop dword [rax + rax]	       694	sendf.c	FUNCTION_14
0x40002f0	      0xb851000000	                           mov eax, 0x51	       687	sendf.c	FUNCTION_14	IF_1	IF_2
0x40002f5	              0x5b	                                 pop rbx	       694	sendf.c	FUNCTION_14
0x40002f6	              0xc3	                                     ret	       694	sendf.c	FUNCTION_14
