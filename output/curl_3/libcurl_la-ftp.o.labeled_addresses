Curl_ftpsend	WHILE,0:SWITCH,0:IF,5:ELSE,1:FOR,1:CALL,6:functions,0:DO,0	61
0x40054d0	            0x4155	                                push r13	      3956	ftp.c	FUNCTION_58
0x40054d2	            0x4154	                                push r12	      3956	ftp.c	FUNCTION_58
0x40054d4	              0x55	                                push rbp	      3956	ftp.c	FUNCTION_58
0x40054d5	              0x53	                                push rbx	      3956	ftp.c	FUNCTION_58
0x40054d6	          0x4889fd	                            mov rbp, rdi	      3956	ftp.c	FUNCTION_58
0x40054d9	          0x4889f7	                            mov rdi, rsi	      3967	ftp.c	FUNCTION_58	CALL_1
0x40054dc	    0x4881ec280400	                          sub rsp, 0x428	      3956	ftp.c	FUNCTION_58
0x40054e3	    0x64488b042528	                mov rax, qword fs:[0x28]	      3956	ftp.c	FUNCTION_58
0x40054ec	    0x488984241804	            mov qword [rsp + 0x418], rax	      3956	ftp.c	FUNCTION_58
0x40054f4	            0x31c0	                            xor eax, eax	      3956	ftp.c	FUNCTION_58
0x40054f6	      0xe800000000	                          call 0x40054fb	      3967	ftp.c	FUNCTION_58	CALL_1
0x40054fb	          0x4889c3	                            mov rbx, rax	      3967	ftp.c	FUNCTION_58	CALL_1
0x40054fe	      0xb82b000000	                           mov eax, 0x2b	      3969	ftp.c	FUNCTION_58	IF_1
0x4005503	    0x4881fbfd0300	                          cmp rbx, 0x3fd	      3968	ftp.c	FUNCTION_58	IF_1
0x400550a	            0x762c	                           jbe 0x4005538	      3968	ftp.c	FUNCTION_58	IF_1
0x400550c	    0x488b94241804	           mov rdx, qword [rsp + 0x418] 	      4007	ftp.c	FUNCTION_58	ELSE_1
0x4005514	    0x644833142528	                xor rdx, qword fs:[0x28]	      4007	ftp.c	FUNCTION_58	ELSE_1
0x400551d	     0xf85a4000000	                           jne 0x40055c7	      4007	ftp.c	FUNCTION_58	ELSE_1
0x4005523	    0x4881c4280400	                          add rsp, 0x428	      4007	ftp.c	FUNCTION_58	ELSE_1
0x400552a	              0x5b	                                 pop rbx	      4007	ftp.c	FUNCTION_58	ELSE_1
0x400552b	              0x5d	                                 pop rbp	      4007	ftp.c	FUNCTION_58	ELSE_1
0x400552c	            0x415c	                                 pop r12	      4007	ftp.c	FUNCTION_58	ELSE_1
0x400552e	            0x415d	                                 pop r13	      4007	ftp.c	FUNCTION_58	ELSE_1
0x4005530	              0xc3	                                     ret	      4007	ftp.c	FUNCTION_58	ELSE_1
0x4005531	     0xf1f80000000	                         nop dword [rax]	      4007	ftp.c	FUNCTION_58	ELSE_1
0x4005538	      0x4c8d642410	                   lea r12, [rsp + 0x10]	       110	string3.h	FUNCTION_72	CALL_3
0x400553d	      0xba0d0a0000	                          mov edx, 0xa0d	       110	string3.h	FUNCTION_72	CALL_3
0x4005542	    0x48c744240800	                  mov qword [rsp + 8], 0	      3973	ftp.c	FUNCTION_58
0x400554b	      0x4c8d6c2408	                      lea r13, [rsp + 8]	      3973	ftp.c	FUNCTION_58
0x4005550	        0x498d041c	                    lea rax, [r12 + rbx]	       110	string3.h	FUNCTION_72	CALL_3
0x4005554	        0x4883c302	                              add rbx, 2	      3972	ftp.c	FUNCTION_58
0x4005558	          0x668910	                      mov word [rax], dx	       110	string3.h	FUNCTION_72	CALL_3
0x400555b	        0xc6400200	                   mov byte [rax + 2], 0	       110	string3.h	FUNCTION_72	CALL_3
0x400555f	            0xeb17	                           jmp 0x4005578	       110	string3.h	FUNCTION_72	CALL_3
0x4005561	     0xf1f80000000	                         nop dword [rax]	       110	string3.h	FUNCTION_72	CALL_3
0x4005568	      0x488b442408	                mov rax, qword [rsp + 8]	      3998	ftp.c	FUNCTION_58	FOR_1	IF_5
0x400556d	          0x4839d8	                            cmp rax, rbx	      3998	ftp.c	FUNCTION_58	FOR_1	IF_5
0x4005570	            0x744e	                            je 0x40055c0	      3998	ftp.c	FUNCTION_58	FOR_1	IF_5
0x4005572	          0x4829c3	                            sub rbx, rax	      3999	ftp.c	FUNCTION_58	FOR_1	IF_5
0x4005575	          0x4901c4	                            add r12, rax	      4000	ftp.c	FUNCTION_58	FOR_1	IF_5
0x4005578	    0x8bb558020000	           mov esi, dword [rbp + 0x258] 	      3984	ftp.c	FUNCTION_58	FOR_1	CALL_4
0x400557e	          0x4d89e8	                             mov r8, r13	      3984	ftp.c	FUNCTION_58	FOR_1	CALL_4
0x4005581	          0x4889d9	                            mov rcx, rbx	      3984	ftp.c	FUNCTION_58	FOR_1	CALL_4
0x4005584	          0x4c89e2	                            mov rdx, r12	      3984	ftp.c	FUNCTION_58	FOR_1	CALL_4
0x4005587	          0x4889ef	                            mov rdi, rbp	      3984	ftp.c	FUNCTION_58	FOR_1	CALL_4
0x400558a	      0xe800000000	                          call 0x400558f	      3984	ftp.c	FUNCTION_58	FOR_1	CALL_4
0x400558f	            0x85c0	                           test eax, eax	      3991	ftp.c	FUNCTION_58	FOR_1	IF_3
0x4005591	     0xf8575ffffff	                           jne 0x400550c	      3991	ftp.c	FUNCTION_58	FOR_1	IF_3
0x4005597	        0x488b7d00	                    mov rdi, qword [rbp]	      3994	ftp.c	FUNCTION_58	FOR_1	IF_4
0x400559b	    0x80bfe8070000	               cmp byte [rdi + 0x7e8], 0	      3994	ftp.c	FUNCTION_58	FOR_1	IF_4
0x40055a2	            0x74c4	                            je 0x4005568	      3994	ftp.c	FUNCTION_58	FOR_1	IF_4
0x40055a4	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3995	ftp.c	FUNCTION_58	FOR_1	IF_4	CALL_6
0x40055a9	          0x4989e8	                             mov r8, rbp	      3995	ftp.c	FUNCTION_58	FOR_1	IF_4	CALL_6
0x40055ac	          0x4c89e2	                            mov rdx, r12	      3995	ftp.c	FUNCTION_58	FOR_1	IF_4	CALL_6
0x40055af	      0xbe02000000	                              mov esi, 2	      3995	ftp.c	FUNCTION_58	FOR_1	IF_4	CALL_6
0x40055b4	      0xe800000000	                          call 0x40055b9	      3995	ftp.c	FUNCTION_58	FOR_1	IF_4	CALL_6
0x40055b9	            0xebad	                           jmp 0x4005568	      3995	ftp.c	FUNCTION_58	FOR_1	IF_4	CALL_6
0x40055bb	       0xf1f440000	                   nop dword [rax + rax]	      3995	ftp.c	FUNCTION_58	FOR_1	IF_4	CALL_6
0x40055c0	            0x31c0	                            xor eax, eax	      3995	ftp.c	FUNCTION_58	FOR_1	IF_4	CALL_6
0x40055c2	      0xe945ffffff	                           jmp 0x400550c	      3995	ftp.c	FUNCTION_58	FOR_1	IF_4	CALL_6
0x40055c7	      0xe800000000	                           call loc..LC1	      4007	ftp.c	FUNCTION_58	ELSE_1
ftp_getsock	WHILE,0:SWITCH,0:IF,0:ELSE,0:FOR,0:CALL,1:functions,0:DO,0	2
0x40002e0	    0x4881c7500600	                          add rdi, 0x650	       826	ftp.c	FUNCTION_15	CALL_1
0x40002e7	      0xe900000000	                           jmp 0x40002ec	       826	ftp.c	FUNCTION_15	CALL_1
ReceivedServerConnect	WHILE,0:SWITCH,1:IF,5:ELSE,1:FOR,0:CALL,10:functions,0:DO,0	103
0x4002e20	            0x4157	                                push r15	       378	ftp.c	FUNCTION_6
0x4002e22	            0x4156	                                push r14	       378	ftp.c	FUNCTION_6
0x4002e24	            0x4155	                                push r13	       378	ftp.c	FUNCTION_6
0x4002e26	            0x4154	                                push r12	       378	ftp.c	FUNCTION_6
0x4002e28	          0x4989f5	                            mov r13, rsi	       378	ftp.c	FUNCTION_6
0x4002e2b	              0x55	                                push rbp	       378	ftp.c	FUNCTION_6
0x4002e2c	              0x53	                                push rbx	       378	ftp.c	FUNCTION_6
0x4002e2d	          0x4889fb	                            mov rbx, rdi	       378	ftp.c	FUNCTION_6
0x4002e30	        0x4883ec28	                           sub rsp, 0x28	       378	ftp.c	FUNCTION_6
0x4002e34	          0x488b2f	                    mov rbp, qword [rdi]	       379	ftp.c	FUNCTION_6
0x4002e37	    0x448bb7580200	          mov r14d, dword [rdi + 0x258] 	       380	ftp.c	FUNCTION_6
0x4002e3e	    0x448bbf5c0200	          mov r15d, dword [rdi + 0x25c] 	       381	ftp.c	FUNCTION_6
0x4002e45	          0xc60600	                       mov byte [rsi], 0	       389	ftp.c	FUNCTION_6
0x4002e48	    0x64488b042528	                mov rax, qword fs:[0x28]	       378	ftp.c	FUNCTION_6
0x4002e51	      0x4889442418	             mov qword [rsp + 0x18], rax	       378	ftp.c	FUNCTION_6
0x4002e56	            0x31c0	                            xor eax, eax	       378	ftp.c	FUNCTION_6
0x4002e58	          0x4889ef	                            mov rdi, rbp	       391	ftp.c	FUNCTION_6	CALL_1
0x4002e5b	      0xe8a0e2ffff	            call sym.ftp_timeleft_accept	       391	ftp.c	FUNCTION_6	CALL_1
0x4002e60	    0x488d35000000	                   lea rsi, [0x04002e67]	       392	ftp.c	FUNCTION_6	CALL_2
0x4002e67	          0x4989c4	                            mov r12, rax	       391	ftp.c	FUNCTION_6	CALL_1
0x4002e6a	          0x4889ef	                            mov rdi, rbp	       392	ftp.c	FUNCTION_6	CALL_2
0x4002e6d	            0x31c0	                            xor eax, eax	       392	ftp.c	FUNCTION_6	CALL_2
0x4002e6f	      0xe800000000	                          call 0x4002e74	       392	ftp.c	FUNCTION_6	CALL_2
0x4002e74	          0x4d85e4	                           test r12, r12	       393	ftp.c	FUNCTION_6	IF_1
0x4002e77	     0xf88e3000000	                            js 0x4002f60	       393	ftp.c	FUNCTION_6	IF_1
0x4002e7d	    0x4883bb580600	              cmp qword [rbx + 0x658], 0	       400	ftp.c	FUNCTION_6	IF_2
0x4002e85	            0x7469	                            je 0x4002ef0	       400	ftp.c	FUNCTION_6	IF_2
0x4002e87	    0x488b83500600	           mov rax, qword [rbx + 0x650] 	       400	ftp.c	FUNCTION_6	IF_2
0x4002e8e	          0x4885c0	                           test rax, rax	       400	ftp.c	FUNCTION_6	IF_2
0x4002e91	            0x745d	                            je 0x4002ef0	       400	ftp.c	FUNCTION_6	IF_2
0x4002e93	          0x803833	                    cmp byte [rax], 0x33	       400	ftp.c	FUNCTION_6	IF_2
0x4002e96	            0x7e58	                           jle 0x4002ef0	       400	ftp.c	FUNCTION_6	IF_2
0x4002e98	    0x488d35000000	                   lea rsi, [0x04002e9f]	       402	ftp.c	FUNCTION_6	IF_2	CALL_4
0x4002e9f	          0x4889ef	                            mov rdi, rbp	       402	ftp.c	FUNCTION_6	IF_2	CALL_4
0x4002ea2	            0x31c0	                            xor eax, eax	       402	ftp.c	FUNCTION_6	IF_2	CALL_4
0x4002ea4	    0x41bc0a000000	                           mov r12d, 0xa	       404	ftp.c	FUNCTION_6	IF_2
0x4002eaa	      0xe800000000	                          call 0x4002eaf	       402	ftp.c	FUNCTION_6	IF_2	CALL_4
0x4002eaf	      0x488d54240c	                    lea rdx, [rsp + 0xc]	       403	ftp.c	FUNCTION_6	IF_2	CALL_5
0x4002eb4	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       403	ftp.c	FUNCTION_6	IF_2	CALL_5
0x4002eb9	          0x4889de	                            mov rsi, rbx	       403	ftp.c	FUNCTION_6	IF_2	CALL_5
0x4002ebc	      0xe800000000	                          call 0x4002ec1	       403	ftp.c	FUNCTION_6	IF_2	CALL_5
0x4002ec1	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       437	ftp.c	FUNCTION_6
0x4002ec6	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       437	ftp.c	FUNCTION_6
0x4002ecf	          0x4489e0	                           mov eax, r12d	       437	ftp.c	FUNCTION_6
0x4002ed2	     0xf85e3000000	                           jne 0x4002fbb	       437	ftp.c	FUNCTION_6
0x4002ed8	        0x4883c428	                           add rsp, 0x28	       437	ftp.c	FUNCTION_6
0x4002edc	              0x5b	                                 pop rbx	       437	ftp.c	FUNCTION_6
0x4002edd	              0x5d	                                 pop rbp	       437	ftp.c	FUNCTION_6
0x4002ede	            0x415c	                                 pop r12	       437	ftp.c	FUNCTION_6
0x4002ee0	            0x415d	                                 pop r13	       437	ftp.c	FUNCTION_6
0x4002ee2	            0x415e	                                 pop r14	       437	ftp.c	FUNCTION_6
0x4002ee4	            0x415f	                                 pop r15	       437	ftp.c	FUNCTION_6
0x4002ee6	              0xc3	                                     ret	       437	ftp.c	FUNCTION_6
0x4002ee7	    0x660f1f840000	                    nop word [rax + rax]	       437	ftp.c	FUNCTION_6
0x4002ef0	            0x31c9	                            xor ecx, ecx	       407	ftp.c	FUNCTION_6	CALL_6
0x4002ef2	      0xbaffffffff	                     mov edx, 0xffffffff	       407	ftp.c	FUNCTION_6	CALL_6
0x4002ef7	          0x4489fe	                           mov esi, r15d	       407	ftp.c	FUNCTION_6	CALL_6
0x4002efa	          0x4489f7	                           mov edi, r14d	       407	ftp.c	FUNCTION_6	CALL_6
0x4002efd	      0xe800000000	                          call 0x4002f02	       407	ftp.c	FUNCTION_6	CALL_6
0x4002f02	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       410	ftp.c	FUNCTION_6	SWITCH_1
0x4002f05	            0x7479	                            je 0x4002f80	       410	ftp.c	FUNCTION_6	SWITCH_1
0x4002f07	          0x4531e4	                          xor r12d, r12d	       436	ftp.c	FUNCTION_6
0x4002f0a	            0x85c0	                           test eax, eax	       410	ftp.c	FUNCTION_6	SWITCH_1
0x4002f0c	            0x74b3	                            je 0x4002ec1	       410	ftp.c	FUNCTION_6	SWITCH_1
0x4002f0e	            0xa808	                              test al, 8	       419	ftp.c	FUNCTION_6	SWITCH_1	IF_3
0x4002f10	     0xf858a000000	                           jne 0x4002fa0	       419	ftp.c	FUNCTION_6	SWITCH_1	IF_3
0x4002f16	            0xa801	                              test al, 1	       423	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4
0x4002f18	            0x74a7	                            je 0x4002ec1	       423	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4
0x4002f1a	    0x488d35000000	                   lea rsi, [0x04002f21]	       424	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4	CALL_9
0x4002f21	            0x31c0	                            xor eax, eax	       424	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4	CALL_9
0x4002f23	          0x4889ef	                            mov rdi, rbp	       424	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4	CALL_9
0x4002f26	          0x4531e4	                          xor r12d, r12d	       430	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4
0x4002f29	      0xe800000000	                          call 0x4002f2e	       424	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4	CALL_9
0x4002f2e	      0x488d54240c	                    lea rdx, [rsp + 0xc]	       425	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4	CALL_10
0x4002f33	      0x488d7c2410	                   lea rdi, [rsp + 0x10]	       425	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4	CALL_10
0x4002f38	          0x4889de	                            mov rsi, rbx	       425	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4	CALL_10
0x4002f3b	      0xe800000000	                          call 0x4002f40	       425	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4	CALL_10
0x4002f40	    0x817c240c8f01	           cmp dword [rsp + 0xc], 0x18f 	       430	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4
0x4002f48	        0x410f9fc4	                               setg r12b	       430	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4
0x4002f4c	      0x478d642408	               lea r12d, [r12 + r12 + 8]	       430	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4
0x4002f51	      0xe96bffffff	                           jmp 0x4002ec1	       430	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4
0x4002f56	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       430	ftp.c	FUNCTION_6	SWITCH_1	ELSE_1	IF_4
0x4002f60	    0x488d35000000	                   lea rsi, [0x04002f67]	       395	ftp.c	FUNCTION_6	IF_1	CALL_3
0x4002f67	          0x4889ef	                            mov rdi, rbp	       395	ftp.c	FUNCTION_6	IF_1	CALL_3
0x4002f6a	            0x31c0	                            xor eax, eax	       395	ftp.c	FUNCTION_6	IF_1	CALL_3
0x4002f6c	    0x41bc0c000000	                           mov r12d, 0xc	       396	ftp.c	FUNCTION_6	IF_1
0x4002f72	      0xe800000000	                          call 0x4002f77	       395	ftp.c	FUNCTION_6	IF_1	CALL_3
0x4002f77	      0xe945ffffff	                           jmp 0x4002ec1	       396	ftp.c	FUNCTION_6	IF_1
0x4002f7c	         0xf1f4000	                         nop dword [rax]	       396	ftp.c	FUNCTION_6	IF_1
0x4002f80	    0x488d35000000	                   lea rsi, [0x04002f87]	       413	ftp.c	FUNCTION_6	SWITCH_1	CALL_7
0x4002f87	          0x4889ef	                            mov rdi, rbp	       413	ftp.c	FUNCTION_6	SWITCH_1	CALL_7
0x4002f8a	            0x31c0	                            xor eax, eax	       413	ftp.c	FUNCTION_6	SWITCH_1	CALL_7
0x4002f8c	    0x41bc0a000000	                           mov r12d, 0xa	       414	ftp.c	FUNCTION_6	SWITCH_1
0x4002f92	      0xe800000000	                          call 0x4002f97	       413	ftp.c	FUNCTION_6	SWITCH_1	CALL_7
0x4002f97	      0xe925ffffff	                           jmp 0x4002ec1	       414	ftp.c	FUNCTION_6	SWITCH_1
0x4002f9c	         0xf1f4000	                         nop dword [rax]	       414	ftp.c	FUNCTION_6	SWITCH_1
0x4002fa0	    0x488d35000000	                   lea rsi, [0x04002fa7]	       420	ftp.c	FUNCTION_6	SWITCH_1	IF_3	CALL_8
0x4002fa7	          0x4889ef	                            mov rdi, rbp	       420	ftp.c	FUNCTION_6	SWITCH_1	IF_3	CALL_8
0x4002faa	            0x31c0	                            xor eax, eax	       420	ftp.c	FUNCTION_6	SWITCH_1	IF_3	CALL_8
0x4002fac	      0xe800000000	                          call 0x4002fb1	       420	ftp.c	FUNCTION_6	SWITCH_1	IF_3	CALL_8
0x4002fb1	      0x41c6450001	                       mov byte [r13], 1	       421	ftp.c	FUNCTION_6	SWITCH_1	IF_3
0x4002fb6	      0xe906ffffff	                           jmp 0x4002ec1	       421	ftp.c	FUNCTION_6	SWITCH_1	IF_3
0x4002fbb	      0xe800000000	             call sym.AllowServerConnect	       437	ftp.c	FUNCTION_6
ftp_dophase_done	WHILE,0:SWITCH,0:IF,4:ELSE,1:FOR,0:CALL,3:functions,0:DO,0	60
0x40033c0	            0x4154	                                push r12	      4291	ftp.c	FUNCTION_62
0x40033c2	              0x55	                                push rbp	      4291	ftp.c	FUNCTION_62
0x40033c3	              0x53	                                push rbx	      4291	ftp.c	FUNCTION_62
0x40033c4	          0x4889fb	                            mov rbx, rdi	      4291	ftp.c	FUNCTION_62
0x40033c7	        0x4883ec10	                           sub rsp, 0x10	      4291	ftp.c	FUNCTION_62
0x40033cb	    0x64488b042528	                mov rax, qword fs:[0x28]	      4291	ftp.c	FUNCTION_62
0x40033d4	      0x4889442408	                mov qword [rsp + 8], rax	      4291	ftp.c	FUNCTION_62
0x40033d9	            0x31c0	                            xor eax, eax	      4291	ftp.c	FUNCTION_62
0x40033db	          0x488b07	                    mov rax, qword [rdi]	      4292	ftp.c	FUNCTION_62
0x40033de	          0x4084f6	                           test sil, sil	      4295	ftp.c	FUNCTION_62	IF_1
0x40033e1	    0x4c8ba0e80100	           mov r12, qword [rax + 0x1e8] 	      4292	ftp.c	FUNCTION_62
0x40033e8	            0x7566	                           jne 0x4003450	      4295	ftp.c	FUNCTION_62	IF_1
0x40033ea	      0x418b442418	            mov eax, dword [r12 + 0x18] 	      4305	ftp.c	FUNCTION_62	IF_3
0x40033ef	            0x85c0	                           test eax, eax	      4305	ftp.c	FUNCTION_62	IF_3
0x40033f1	            0x744d	                            je 0x4003440	      4305	ftp.c	FUNCTION_62	IF_3
0x40033f3	        0x4883ec08	                              sub rsp, 8	      4307	ftp.c	FUNCTION_62	CALL_3
0x40033f7	    0x41b9ffffffff	                     mov r9d, 0xffffffff	      4307	ftp.c	FUNCTION_62	CALL_3
0x40033fd	            0x31c9	                            xor ecx, ecx	      4307	ftp.c	FUNCTION_62	CALL_3
0x40033ff	            0x6a00	                                  push 0	      4307	ftp.c	FUNCTION_62	CALL_3
0x4003401	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	      4307	ftp.c	FUNCTION_62	CALL_3
0x4003408	          0x4531c0	                            xor r8d, r8d	      4307	ftp.c	FUNCTION_62	CALL_3
0x400340b	          0x4489ce	                            mov esi, r9d	      4307	ftp.c	FUNCTION_62	CALL_3
0x400340e	          0x4889df	                            mov rdi, rbx	      4307	ftp.c	FUNCTION_62	CALL_3
0x4003411	      0xe800000000	                          call 0x4003416	      4307	ftp.c	FUNCTION_62	CALL_3
0x4003416	              0x5a	                                 pop rdx	      4307	ftp.c	FUNCTION_62	CALL_3
0x4003417	              0x59	                                 pop rcx	      4307	ftp.c	FUNCTION_62	CALL_3
0x4003418	    0xc683e1060000	               mov byte [rbx + 0x6e1], 1	      4312	ftp.c	FUNCTION_62
0x400341f	            0x31c0	                            xor eax, eax	      4314	ftp.c	FUNCTION_62
0x4003421	      0x488b542408	                mov rdx, qword [rsp + 8]	      4315	ftp.c	FUNCTION_62
0x4003426	    0x644833142528	                xor rdx, qword fs:[0x28]	      4315	ftp.c	FUNCTION_62
0x400342f	            0x7571	                           jne 0x40034a2	      4315	ftp.c	FUNCTION_62
0x4003431	        0x4883c410	                           add rsp, 0x10	      4315	ftp.c	FUNCTION_62
0x4003435	              0x5b	                                 pop rbx	      4315	ftp.c	FUNCTION_62
0x4003436	              0x5d	                                 pop rbp	      4315	ftp.c	FUNCTION_62
0x4003437	            0x415c	                                 pop r12	      4315	ftp.c	FUNCTION_62
0x4003439	              0xc3	                                     ret	      4315	ftp.c	FUNCTION_62
0x400343a	    0x660f1f440000	                    nop word [rax + rax]	      4315	ftp.c	FUNCTION_62
0x4003440	    0xc683a4030000	               mov byte [rbx + 0x3a4], 1	      4310	ftp.c	FUNCTION_62	ELSE_1	IF_4
0x4003447	            0xebcf	                           jmp 0x4003418	      4310	ftp.c	FUNCTION_62	ELSE_1	IF_4
0x4003449	     0xf1f80000000	                         nop dword [rax]	      4310	ftp.c	FUNCTION_62	ELSE_1	IF_4
0x4003450	      0x488d742404	                      lea rsi, [rsp + 4]	      4297	ftp.c	FUNCTION_62	IF_1	CALL_1
0x4003455	      0xe816fcffff	                    call sym.ftp_do_more	      4297	ftp.c	FUNCTION_62	IF_1	CALL_1
0x400345a	            0x85c0	                           test eax, eax	      4299	ftp.c	FUNCTION_62	IF_1	IF_2
0x400345c	            0x89c5	                            mov ebp, eax	      4297	ftp.c	FUNCTION_62	IF_1	CALL_1
0x400345e	            0x7430	                            je 0x4003490	      4299	ftp.c	FUNCTION_62	IF_1	IF_2
0x4003460	    0x8bb35c020000	           mov esi, dword [rbx + 0x25c] 	       221	ftp.c	FUNCTION_1	IF_1
0x4003466	          0x83feff	             cmp esi, 0xffffffffffffffff	       221	ftp.c	FUNCTION_1	IF_1
0x4003469	            0x7412	                            je 0x400347d	       221	ftp.c	FUNCTION_1	IF_1
0x400346b	          0x4889df	                            mov rdi, rbx	       222	ftp.c	FUNCTION_1	IF_1	CALL_1
0x400346e	      0xe800000000	                          call 0x4003473	       222	ftp.c	FUNCTION_1	IF_1	CALL_1
0x4003473	    0xc7835c020000	    mov dword [rbx + 0x25c], 0xffffffff 	       223	ftp.c	FUNCTION_1	IF_1
0x400347d	    0xc683a6030000	               mov byte [rbx + 0x3a6], 0	       225	ftp.c	FUNCTION_1
0x4003484	            0x89e8	                            mov eax, ebp	      4301	ftp.c	FUNCTION_62	IF_1	IF_2
0x4003486	            0xeb99	                           jmp 0x4003421	      4301	ftp.c	FUNCTION_62	IF_1	IF_2
0x4003488	     0xf1f84000000	                   nop dword [rax + rax]	      4301	ftp.c	FUNCTION_62	IF_1	IF_2
0x4003490	      0x418b742418	            mov esi, dword [r12 + 0x18] 	      4305	ftp.c	FUNCTION_62	IF_3
0x4003495	            0x85f6	                           test esi, esi	      4305	ftp.c	FUNCTION_62	IF_3
0x4003497	     0xf847bffffff	                            je 0x4003418	      4305	ftp.c	FUNCTION_62	IF_3
0x400349d	      0xe951ffffff	                           jmp 0x40033f3	      4305	ftp.c	FUNCTION_62	IF_3
0x40034a2	      0xe800000000	                          call 0x40034a7	      4315	ftp.c	FUNCTION_62
AcceptServerConnect	WHILE,0:SWITCH,0:IF,4:ELSE,0:FOR,0:CALL,10:functions,0:DO,0	89
0x40011b0	            0x4156	                                push r14	       279	ftp.c	FUNCTION_4
0x40011b2	            0x4155	                                push r13	       279	ftp.c	FUNCTION_4
0x40011b4	            0x4154	                                push r12	       279	ftp.c	FUNCTION_4
0x40011b6	              0x55	                                push rbp	       279	ftp.c	FUNCTION_4
0x40011b7	              0x53	                                push rbx	       279	ftp.c	FUNCTION_4
0x40011b8	          0x4889fb	                            mov rbx, rdi	       279	ftp.c	FUNCTION_4
0x40011bb	    0x4881eca00000	                           sub rsp, 0xa0	       279	ftp.c	FUNCTION_4
0x40011c2	    0x448ba75c0200	          mov r12d, dword [rdi + 0x25c] 	       281	ftp.c	FUNCTION_4
0x40011c9	          0x488b2f	                    mov rbp, qword [rdi]	       280	ftp.c	FUNCTION_4
0x40011cc	      0x4c8d74240c	                    lea r14, [rsp + 0xc]	       290	ftp.c	FUNCTION_4	IF_1	CALL_1
0x40011d1	      0x4c8d6c2410	                   lea r13, [rsp + 0x10]	       290	ftp.c	FUNCTION_4	IF_1	CALL_1
0x40011d6	    0xc744240c8000	            mov dword [rsp + 0xc], 0x80 	       288	ftp.c	FUNCTION_4
0x40011de	    0x64488b042528	                mov rax, qword fs:[0x28]	       279	ftp.c	FUNCTION_4
0x40011e7	    0x488984249800	             mov qword [rsp + 0x98], rax	       279	ftp.c	FUNCTION_4
0x40011ef	            0x31c0	                            xor eax, eax	       279	ftp.c	FUNCTION_4
0x40011f1	          0x4c89f2	                            mov rdx, r14	       290	ftp.c	FUNCTION_4	IF_1	CALL_1
0x40011f4	          0x4c89ee	                            mov rsi, r13	       290	ftp.c	FUNCTION_4	IF_1	CALL_1
0x40011f7	          0x4489e7	                           mov edi, r12d	       290	ftp.c	FUNCTION_4	IF_1	CALL_1
0x40011fa	      0xe800000000	                          call 0x40011ff	       290	ftp.c	FUNCTION_4	IF_1	CALL_1
0x40011ff	            0x85c0	                           test eax, eax	       290	ftp.c	FUNCTION_4	IF_1	CALL_1
0x4001201	            0x744d	                            je 0x4001250	       290	ftp.c	FUNCTION_4	IF_1	CALL_1
0x4001203	          0x4489e6	                           mov esi, r12d	       295	ftp.c	FUNCTION_4	CALL_3
0x4001206	          0x4889df	                            mov rdi, rbx	       295	ftp.c	FUNCTION_4	CALL_3
0x4001209	      0xe800000000	                          call 0x400120e	       295	ftp.c	FUNCTION_4	CALL_3
0x400120e	    0x488d35000000	                   lea rsi, [0x04001215]	       298	ftp.c	FUNCTION_4	IF_2	CALL_4
0x4001215	            0x31c0	                            xor eax, eax	       298	ftp.c	FUNCTION_4	IF_2	CALL_4
0x4001217	          0x4889ef	                            mov rdi, rbp	       298	ftp.c	FUNCTION_4	IF_2	CALL_4
0x400121a	      0xe800000000	                          call 0x400121f	       298	ftp.c	FUNCTION_4	IF_2	CALL_4
0x400121f	      0xb81e000000	                           mov eax, 0x1e	       299	ftp.c	FUNCTION_4	IF_2
0x4001224	    0x488b8c249800	            mov rcx, qword [rsp + 0x98] 	       328	ftp.c	FUNCTION_4
0x400122c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       328	ftp.c	FUNCTION_4
0x4001235	     0xf85ec000000	                           jne 0x4001327	       328	ftp.c	FUNCTION_4
0x400123b	    0x4881c4a00000	                           add rsp, 0xa0	       328	ftp.c	FUNCTION_4
0x4001242	              0x5b	                                 pop rbx	       328	ftp.c	FUNCTION_4
0x4001243	              0x5d	                                 pop rbp	       328	ftp.c	FUNCTION_4
0x4001244	            0x415c	                                 pop r12	       328	ftp.c	FUNCTION_4
0x4001246	            0x415d	                                 pop r13	       328	ftp.c	FUNCTION_4
0x4001248	            0x415e	                                 pop r14	       328	ftp.c	FUNCTION_4
0x400124a	              0xc3	                                     ret	       328	ftp.c	FUNCTION_4
0x400124b	       0xf1f440000	                   nop dword [rax + rax]	       328	ftp.c	FUNCTION_4
0x4001250	          0x4c89ee	                            mov rsi, r13	       293	ftp.c	FUNCTION_4	IF_1	CALL_2
0x4001253	          0x4c89f2	                            mov rdx, r14	       293	ftp.c	FUNCTION_4	IF_1	CALL_2
0x4001256	          0x4489e7	                           mov edi, r12d	       293	ftp.c	FUNCTION_4	IF_1	CALL_2
0x4001259	    0xc744240c8000	            mov dword [rsp + 0xc], 0x80 	       291	ftp.c	FUNCTION_4	IF_1
0x4001261	      0xe800000000	                          call 0x4001266	       293	ftp.c	FUNCTION_4	IF_1	CALL_2
0x4001266	          0x4489e6	                           mov esi, r12d	       295	ftp.c	FUNCTION_4	CALL_3
0x4001269	          0x4189c5	                           mov r13d, eax	       293	ftp.c	FUNCTION_4	IF_1	CALL_2
0x400126c	          0x4889df	                            mov rdi, rbx	       295	ftp.c	FUNCTION_4	CALL_3
0x400126f	      0xe800000000	                          call 0x4001274	       295	ftp.c	FUNCTION_4	CALL_3
0x4001274	        0x4183fdff	            cmp r13d, 0xffffffffffffffff	       297	ftp.c	FUNCTION_4	IF_2
0x4001278	            0x7494	                            je 0x400120e	       297	ftp.c	FUNCTION_4	IF_2
0x400127a	    0x488d35000000	                   lea rsi, [0x04001281]	       301	ftp.c	FUNCTION_4	CALL_5
0x4001281	            0x31c0	                            xor eax, eax	       301	ftp.c	FUNCTION_4	CALL_5
0x4001283	          0x4889ef	                            mov rdi, rbp	       301	ftp.c	FUNCTION_4	CALL_5
0x4001286	      0xe800000000	                          call 0x400128b	       301	ftp.c	FUNCTION_4	CALL_5
0x400128b	    0xc683a4030000	               mov byte [rbx + 0x3a4], 0	       304	ftp.c	FUNCTION_4
0x4001292	    0x4489ab5c0200	           mov dword [rbx + 0x25c], r13d	       306	ftp.c	FUNCTION_4
0x4001299	      0xbe01000000	                              mov esi, 1	       307	ftp.c	FUNCTION_4	CALL_6
0x400129e	          0x4489ef	                           mov edi, r13d	       307	ftp.c	FUNCTION_4	CALL_6
0x40012a1	      0xe800000000	                          call 0x40012a6	       307	ftp.c	FUNCTION_4	CALL_6
0x40012a6	    0x4883bdd00200	              cmp qword [rbp + 0x2d0], 0	       310	ftp.c	FUNCTION_4	IF_3
0x40012ae	    0xc68369020000	               mov byte [rbx + 0x269], 1	       308	ftp.c	FUNCTION_4
0x40012b5	            0x7469	                            je 0x4001320	       310	ftp.c	FUNCTION_4	IF_3
0x40012b7	      0xbe01000000	                              mov esi, 1	       314	ftp.c	FUNCTION_4	IF_3	CALL_7
0x40012bc	          0x4889ef	                            mov rdi, rbp	       314	ftp.c	FUNCTION_4	IF_3	CALL_7
0x40012bf	      0xe800000000	                          call 0x40012c4	       314	ftp.c	FUNCTION_4	IF_3	CALL_7
0x40012c4	    0x488bbdd80200	           mov rdi, qword [rbp + 0x2d8] 	       315	ftp.c	FUNCTION_4	IF_3	CALL_8
0x40012cb	      0xba01000000	                              mov edx, 1	       315	ftp.c	FUNCTION_4	IF_3	CALL_8
0x40012d0	          0x4489ee	                           mov esi, r13d	       315	ftp.c	FUNCTION_4	IF_3	CALL_8
0x40012d3	    0xff95d0020000	                call qword [rbp + 0x2d0]	       315	ftp.c	FUNCTION_4	IF_3	CALL_8
0x40012d9	            0x31f6	                            xor esi, esi	       318	ftp.c	FUNCTION_4	IF_3	CALL_9
0x40012db	          0x4189c4	                           mov r12d, eax	       315	ftp.c	FUNCTION_4	IF_3	CALL_8
0x40012de	          0x4889ef	                            mov rdi, rbp	       318	ftp.c	FUNCTION_4	IF_3	CALL_9
0x40012e1	      0xe800000000	                          call 0x40012e6	       318	ftp.c	FUNCTION_4	IF_3	CALL_9
0x40012e6	          0x4585e4	                         test r12d, r12d	       320	ftp.c	FUNCTION_4	IF_3	IF_4
0x40012e9	            0x7435	                            je 0x4001320	       320	ftp.c	FUNCTION_4	IF_3	IF_4
0x40012eb	    0x8bb35c020000	           mov esi, dword [rbx + 0x25c] 	       221	ftp.c	FUNCTION_1	IF_1
0x40012f1	          0x83feff	             cmp esi, 0xffffffffffffffff	       221	ftp.c	FUNCTION_1	IF_1
0x40012f4	            0x7412	                            je 0x4001308	       221	ftp.c	FUNCTION_1	IF_1
0x40012f6	          0x4889df	                            mov rdi, rbx	       222	ftp.c	FUNCTION_1	IF_1	CALL_1
0x40012f9	      0xe800000000	                          call 0x40012fe	       222	ftp.c	FUNCTION_1	IF_1	CALL_1
0x40012fe	    0xc7835c020000	    mov dword [rbx + 0x25c], 0xffffffff 	       223	ftp.c	FUNCTION_1	IF_1
0x4001308	    0xc683a6030000	               mov byte [rbx + 0x3a6], 0	       225	ftp.c	FUNCTION_1
0x400130f	      0xb82a000000	                           mov eax, 0x2a	       322	ftp.c	FUNCTION_4	IF_3	IF_4
0x4001314	      0xe90bffffff	                           jmp 0x4001224	       322	ftp.c	FUNCTION_4	IF_3	IF_4
0x4001319	     0xf1f80000000	                         nop dword [rax]	       322	ftp.c	FUNCTION_4	IF_3	IF_4
0x4001320	            0x31c0	                            xor eax, eax	       326	ftp.c	FUNCTION_4
0x4001322	      0xe9fdfeffff	                           jmp 0x4001224	       326	ftp.c	FUNCTION_4
0x4001327	      0xe800000000	                          call 0x400132c	       328	ftp.c	FUNCTION_4
ftp_do_more	WHILE,0:SWITCH,0:IF,27:ELSE,6:FOR,0:CALL,22:functions,0:DO,0	185
0x4003070	            0x4155	                                push r13	      3484	ftp.c	FUNCTION_52
0x4003072	            0x4154	                                push r12	      3484	ftp.c	FUNCTION_52
0x4003074	          0x4989f5	                            mov r13, rsi	      3484	ftp.c	FUNCTION_52
0x4003077	              0x55	                                push rbp	      3484	ftp.c	FUNCTION_52
0x4003078	              0x53	                                push rbx	      3484	ftp.c	FUNCTION_52
0x4003079	          0x4889fb	                            mov rbx, rdi	      3484	ftp.c	FUNCTION_52
0x400307c	        0x4883ec18	                           sub rsp, 0x18	      3484	ftp.c	FUNCTION_52
0x4003080	          0x488b2f	                    mov rbp, qword [rdi]	      3485	ftp.c	FUNCTION_52
0x4003083	    0x64488b042528	                mov rax, qword fs:[0x28]	      3484	ftp.c	FUNCTION_52
0x400308c	      0x4889442408	                mov qword [rsp + 8], rax	      3484	ftp.c	FUNCTION_52
0x4003091	            0x31c0	                            xor eax, eax	      3484	ftp.c	FUNCTION_52
0x4003093	    0x80bfa6030000	               cmp byte [rdi + 0x3a6], 0	      3495	ftp.c	FUNCTION_52	IF_1
0x400309a	      0xc644240600	                   mov byte [rsp + 6], 0	      3488	ftp.c	FUNCTION_52
0x400309f	    0x4c8ba5e80100	           mov r12, qword [rbp + 0x1e8] 	      3492	ftp.c	FUNCTION_52
0x40030a6	            0x7568	                           jne 0x4003110	      3495	ftp.c	FUNCTION_52	IF_1
0x40030a8	      0xe800000000	                          call 0x40030ad	      3496	ftp.c	FUNCTION_52	IF_1	IF_2	CALL_1
0x40030ad	            0x84c0	                             test al, al	      3496	ftp.c	FUNCTION_52	IF_1	IF_2	CALL_1
0x40030af	     0xf855b010000	                           jne 0x4003210	      3496	ftp.c	FUNCTION_52	IF_1	IF_2	CALL_1
0x40030b5	      0x488d542406	                      lea rdx, [rsp + 6]	      3504	ftp.c	FUNCTION_52	IF_1	CALL_3
0x40030ba	      0xbe01000000	                              mov esi, 1	      3504	ftp.c	FUNCTION_52	IF_1	CALL_3
0x40030bf	          0x4889df	                            mov rdi, rbx	      3504	ftp.c	FUNCTION_52	IF_1	CALL_3
0x40030c2	      0xe800000000	                          call 0x40030c7	      3504	ftp.c	FUNCTION_52	IF_1	CALL_3
0x40030c7	      0x807c240600	                   cmp byte [rsp + 6], 0	      3507	ftp.c	FUNCTION_52	IF_1	IF_3
0x40030cc	            0x7542	                           jne 0x4003110	      3507	ftp.c	FUNCTION_52	IF_1	IF_3
0x40030ce	            0x85c0	                           test eax, eax	      3511	ftp.c	FUNCTION_52	IF_1	ELSE_1	IF_4
0x40030d0	     0xf8490010000	                            je 0x4003266	      3511	ftp.c	FUNCTION_52	IF_1	ELSE_1	IF_4
0x40030d6	    0x448b8b000700	           mov r9d, dword [rbx + 0x700] 	      3511	ftp.c	FUNCTION_52	IF_1	ELSE_1	IF_4
0x40030dd	          0x4585c9	                           test r9d, r9d	      3511	ftp.c	FUNCTION_52	IF_1	ELSE_1	IF_4
0x40030e0	     0xf843a020000	                            je 0x4003320	      3511	ftp.c	FUNCTION_52	IF_1	ELSE_1	IF_4
0x40030e6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3511	ftp.c	FUNCTION_52	IF_1	ELSE_1	IF_4
0x40030f0	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      3640	ftp.c	FUNCTION_52
0x40030f5	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3640	ftp.c	FUNCTION_52
0x40030fe	     0xf85a8020000	                           jne 0x40033ac	      3640	ftp.c	FUNCTION_52
0x4003104	        0x4883c418	                           add rsp, 0x18	      3640	ftp.c	FUNCTION_52
0x4003108	              0x5b	                                 pop rbx	      3640	ftp.c	FUNCTION_52
0x4003109	              0x5d	                                 pop rbp	      3640	ftp.c	FUNCTION_52
0x400310a	            0x415c	                                 pop r12	      3640	ftp.c	FUNCTION_52
0x400310c	            0x415d	                                 pop r13	      3640	ftp.c	FUNCTION_52
0x400310e	              0xc3	                                     ret	      3640	ftp.c	FUNCTION_52
0x400310f	              0x90	                                     nop	      3640	ftp.c	FUNCTION_52
0x4003110	      0xbe01000000	                              mov esi, 1	      3520	ftp.c	FUNCTION_52	CALL_7
0x4003115	          0x4889df	                            mov rdi, rbx	      3520	ftp.c	FUNCTION_52	CALL_7
0x4003118	      0xe800000000	                          call 0x400311d	      3520	ftp.c	FUNCTION_52	CALL_7
0x400311d	            0x85c0	                           test eax, eax	      3521	ftp.c	FUNCTION_52	IF_5
0x400311f	            0x75cf	                           jne 0x40030f0	      3521	ftp.c	FUNCTION_52	IF_5
0x4003121	    0x83bb78010000	              cmp dword [rbx + 0x178], 2	      3524	ftp.c	FUNCTION_52	IF_6	CALL_8
0x4003128	     0xf8442010000	                            je 0x4003270	      3524	ftp.c	FUNCTION_52	IF_6	CALL_8
0x400312e	    0x80bba9030000	               cmp byte [rbx + 0x3a9], 0	      3527	ftp.c	FUNCTION_52	IF_7
0x4003135	            0x7419	                            je 0x4003150	      3527	ftp.c	FUNCTION_52	IF_7
0x4003137	    0x80bb9e030000	               cmp byte [rbx + 0x39e], 0	      3527	ftp.c	FUNCTION_52	IF_7
0x400313e	            0x7410	                            je 0x4003150	      3527	ftp.c	FUNCTION_52	IF_7
0x4003140	          0x4889df	                            mov rdi, rbx	      3528	ftp.c	FUNCTION_52	IF_7	CALL_9
0x4003143	      0xe800000000	                          call 0x4003148	      3528	ftp.c	FUNCTION_52	IF_7	CALL_9
0x4003148	            0x84c0	                             test al, al	      3527	ftp.c	FUNCTION_52	IF_7
0x400314a	     0xf8516010000	                           jne 0x4003266	      3527	ftp.c	FUNCTION_52	IF_7
0x4003150	    0x448b830c0700	           mov r8d, dword [rbx + 0x70c] 	      3532	ftp.c	FUNCTION_52	IF_8
0x4003157	          0x4585c0	                           test r8d, r8d	      3532	ftp.c	FUNCTION_52	IF_8
0x400315a	     0xf8528010000	                           jne 0x4003288	      3532	ftp.c	FUNCTION_52	IF_8
0x4003160	    0x41837c241801	               cmp dword [r12 + 0x18], 1	      3551	ftp.c	FUNCTION_52	IF_11
0x4003166	     0xf87c4000000	                            ja 0x4003230	      3551	ftp.c	FUNCTION_52	IF_11
0x400316c	    0x80bbe9060000	               cmp byte [rbx + 0x6e9], 0	      3555	ftp.c	FUNCTION_52	IF_11	IF_12
0x4003173	     0xf8553010000	                           jne 0x40032cc	      3555	ftp.c	FUNCTION_52	IF_11	IF_12
0x4003179	    0x80bde2070000	               cmp byte [rbp + 0x7e2], 0	      3576	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17
0x4003180	     0xf85b2010000	                           jne 0x4003338	      3576	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17
0x4003186	    0x49c7442420ff	mov qword [r12 + 0x20], 0xffffffffffffffff	      3592	ftp.c	FUNCTION_52	IF_11	ELSE_4
0x400318f	          0x4889df	                            mov rdi, rbx	      3594	ftp.c	FUNCTION_52	IF_11	ELSE_4	CALL_16
0x4003192	      0xe800000000	                          call 0x4003197	      3594	ftp.c	FUNCTION_52	IF_11	ELSE_4	CALL_16
0x4003197	            0x85c0	                           test eax, eax	      3596	ftp.c	FUNCTION_52	IF_11	ELSE_4	IF_20
0x4003199	            0x754d	                           jne 0x40031e8	      3596	ftp.c	FUNCTION_52	IF_11	ELSE_4	IF_20
0x400319b	    0x4883bdd00000	               cmp qword [rbp + 0xd0], 0	      3596	ftp.c	FUNCTION_52	IF_11	ELSE_4	IF_20
0x40031a3	            0x7807	                            js 0x40031ac	      3596	ftp.c	FUNCTION_52	IF_11	ELSE_4	IF_20
0x40031a5	    0xc683e0060000	               mov byte [rbx + 0x6e0], 1	      3598	ftp.c	FUNCTION_52	IF_11	ELSE_4	IF_20
0x40031ac	    0x80bdd6070000	               cmp byte [rbp + 0x7d6], 0	      3603	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_5	IF_22
0x40031b3	     0xf85c7010000	                           jne 0x4003380	      3603	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_5	IF_22
0x40031b9	    0x4883bbd80600	              cmp qword [rbx + 0x6d8], 0	      3603	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_5	IF_22
0x40031c1	     0xf84b9010000	                            je 0x4003380	      3603	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_5	IF_22
0x40031c7	     0xfb6b5d40700	          movzx esi, byte [rbp + 0x7d4] 	      3617	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_6	CALL_18
0x40031ce	      0xba15000000	                           mov edx, 0x15	      3617	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_6	CALL_18
0x40031d3	          0x4889df	                            mov rdi, rbx	      3617	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_6	CALL_18
0x40031d6	      0xe895f9ffff	                    call sym.ftp_nb_type	      3617	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_6	CALL_18
0x40031db	            0x85c0	                           test eax, eax	      3618	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_6	IF_25
0x40031dd	     0xf850dffffff	                           jne 0x40030f0	      3618	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_6	IF_25
0x40031e3	       0xf1f440000	                   nop dword [rax + rax]	      3618	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_6	IF_25
0x40031e8	    0x488dbb500600	                  lea rdi, [rbx + 0x650]	      3057	ftp.c	FUNCTION_45	CALL_1
0x40031ef	            0x31f6	                            xor esi, esi	      3057	ftp.c	FUNCTION_45	CALL_1
0x40031f1	      0xe800000000	                          call 0x40031f6	      3057	ftp.c	FUNCTION_45	CALL_1
0x40031f6	    0x8bb30c070000	           mov esi, dword [rbx + 0x70c] 	      3623	ftp.c	FUNCTION_52	IF_11	ELSE_4
0x40031fc	            0x31d2	                            xor edx, edx	      3623	ftp.c	FUNCTION_52	IF_11	ELSE_4
0x40031fe	            0x85f6	                           test esi, esi	      3623	ftp.c	FUNCTION_52	IF_11	ELSE_4
0x4003200	           0xf94c2	                                 sete dl	      3623	ftp.c	FUNCTION_52	IF_11	ELSE_4
0x4003203	        0x41895500	                    mov dword [r13], edx	      3623	ftp.c	FUNCTION_52	IF_11	ELSE_4
0x4003207	      0xe9e4feffff	                           jmp 0x40030f0	      3623	ftp.c	FUNCTION_52	IF_11	ELSE_4
0x400320c	         0xf1f4000	                         nop dword [rax]	      3623	ftp.c	FUNCTION_52	IF_11	ELSE_4
0x4003210	            0x31c9	                            xor ecx, ecx	      3499	ftp.c	FUNCTION_52	IF_1	IF_2	CALL_2
0x4003212	            0x31d2	                            xor edx, edx	      3499	ftp.c	FUNCTION_52	IF_1	IF_2	CALL_2
0x4003214	      0xbe01000000	                              mov esi, 1	      3499	ftp.c	FUNCTION_52	IF_1	IF_2	CALL_2
0x4003219	          0x4889df	                            mov rdi, rbx	      3499	ftp.c	FUNCTION_52	IF_1	IF_2	CALL_2
0x400321c	      0xe800000000	                          call 0x4003221	      3499	ftp.c	FUNCTION_52	IF_1	IF_2	CALL_2
0x4003221	      0xe9cafeffff	                           jmp 0x40030f0	      3501	ftp.c	FUNCTION_52	IF_1	IF_2
0x4003226	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3501	ftp.c	FUNCTION_52	IF_1	IF_2
0x4003230	        0x4883ec08	                              sub rsp, 8	      3631	ftp.c	FUNCTION_52	CALL_20
0x4003234	    0x41b9ffffffff	                     mov r9d, 0xffffffff	      3631	ftp.c	FUNCTION_52	CALL_20
0x400323a	          0x4531c0	                            xor r8d, r8d	      3631	ftp.c	FUNCTION_52	CALL_20
0x400323d	            0x6a00	                                  push 0	      3631	ftp.c	FUNCTION_52	CALL_20
0x400323f	            0x31c9	                            xor ecx, ecx	      3631	ftp.c	FUNCTION_52	CALL_20
0x4003241	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	      3631	ftp.c	FUNCTION_52	CALL_20
0x4003248	          0x4489ce	                            mov esi, r9d	      3631	ftp.c	FUNCTION_52	CALL_20
0x400324b	          0x4889df	                            mov rdi, rbx	      3631	ftp.c	FUNCTION_52	CALL_20
0x400324e	      0xe800000000	                          call 0x4003253	      3631	ftp.c	FUNCTION_52	CALL_20
0x4003253	    0x80bbe9060000	               cmp byte [rbx + 0x6e9], 0	      3633	ftp.c	FUNCTION_52	IF_27
0x400325a	              0x58	                                 pop rax	      3633	ftp.c	FUNCTION_52	IF_27
0x400325b	              0x5a	                                 pop rdx	      3633	ftp.c	FUNCTION_52	IF_27
0x400325c	            0x7508	                           jne 0x4003266	      3633	ftp.c	FUNCTION_52	IF_27
0x400325e	    0x41c745000100	                      mov dword [r13], 1	      3635	ftp.c	FUNCTION_52	IF_27
0x4003266	            0x31c0	                            xor eax, eax	      3635	ftp.c	FUNCTION_52	IF_27
0x4003268	      0xe983feffff	                           jmp 0x40030f0	      3635	ftp.c	FUNCTION_52	IF_27
0x400326d	           0xf1f00	                         nop dword [rax]	      3635	ftp.c	FUNCTION_52	IF_27
0x4003270	    0x80bbba030000	               cmp byte [rbx + 0x3ba], 0	      3524	ftp.c	FUNCTION_52	IF_6	CALL_8
0x4003277	     0xf85b1feffff	                           jne 0x400312e	      3524	ftp.c	FUNCTION_52	IF_6	CALL_8
0x400327d	            0x31c0	                            xor eax, eax	      3635	ftp.c	FUNCTION_52	IF_27
0x400327f	      0xe96cfeffff	                           jmp 0x40030f0	      3635	ftp.c	FUNCTION_52	IF_27
0x4003284	         0xf1f4000	                         nop dword [rax]	      3635	ftp.c	FUNCTION_52	IF_27
0x4003288	    0x488dbb500600	                  lea rdi, [rbx + 0x650]	      3057	ftp.c	FUNCTION_45	CALL_1
0x400328f	            0x31f6	                            xor esi, esi	      3057	ftp.c	FUNCTION_45	CALL_1
0x4003291	      0xe800000000	                          call 0x4003296	      3057	ftp.c	FUNCTION_45	CALL_1
0x4003296	    0x8bbb0c070000	           mov edi, dword [rbx + 0x70c] 	      3537	ftp.c	FUNCTION_52	IF_8
0x400329c	            0x31d2	                            xor edx, edx	      3537	ftp.c	FUNCTION_52	IF_8
0x400329e	            0x85ff	                           test edi, edi	      3537	ftp.c	FUNCTION_52	IF_8
0x40032a0	           0xf94c2	                                 sete dl	      3537	ftp.c	FUNCTION_52	IF_8
0x40032a3	            0x85c0	                           test eax, eax	      3541	ftp.c	FUNCTION_52	IF_8	IF_9
0x40032a5	        0x41895500	                    mov dword [r13], edx	      3537	ftp.c	FUNCTION_52	IF_8
0x40032a9	     0xf8541feffff	                           jne 0x40030f0	      3541	ftp.c	FUNCTION_52	IF_8	IF_9
0x40032af	    0x80bbe9060000	               cmp byte [rbx + 0x6e9], 0	      3541	ftp.c	FUNCTION_52	IF_8	IF_9
0x40032b6	            0x74ae	                            je 0x4003266	      3541	ftp.c	FUNCTION_52	IF_8	IF_9
0x40032b8	    0x41837c241801	               cmp dword [r12 + 0x18], 1	      3551	ftp.c	FUNCTION_52	IF_11
0x40032be	    0x41c745000000	                      mov dword [r13], 0	      3548	ftp.c	FUNCTION_52	IF_8	IF_10
0x40032c6	     0xf8764ffffff	                            ja 0x4003230	      3551	ftp.c	FUNCTION_52	IF_11
0x40032cc	      0x488d742407	                      lea rsi, [rsp + 7]	      3558	ftp.c	FUNCTION_52	IF_11	IF_12	CALL_11
0x40032d1	          0x4889df	                            mov rdi, rbx	      3558	ftp.c	FUNCTION_52	IF_11	IF_12	CALL_11
0x40032d4	      0xe847fbffff	          call sym.ReceivedServerConnect	      3558	ftp.c	FUNCTION_52	IF_11	IF_12	CALL_11
0x40032d9	            0x85c0	                           test eax, eax	      3559	ftp.c	FUNCTION_52	IF_11	IF_12	IF_13
0x40032db	     0xf850ffeffff	                           jne 0x40030f0	      3559	ftp.c	FUNCTION_52	IF_11	IF_12	IF_13
0x40032e1	      0x807c240700	                   cmp byte [rsp + 7], 0	      3562	ftp.c	FUNCTION_52	IF_11	IF_12	IF_14
0x40032e6	     0xf847affffff	                            je 0x4003266	      3562	ftp.c	FUNCTION_52	IF_11	IF_12	IF_14
0x40032ec	          0x4889df	                            mov rdi, rbx	      3564	ftp.c	FUNCTION_52	IF_11	IF_12	IF_14	CALL_12
0x40032ef	      0xe8bcdeffff	            call sym.AcceptServerConnect	      3564	ftp.c	FUNCTION_52	IF_11	IF_12	IF_14	CALL_12
0x40032f4	            0x85c0	                           test eax, eax	      3566	ftp.c	FUNCTION_52	IF_11	IF_12	IF_14	IF_15
0x40032f6	    0xc683e9060000	               mov byte [rbx + 0x6e9], 0	      3565	ftp.c	FUNCTION_52	IF_11	IF_12	IF_14
0x40032fd	     0xf85edfdffff	                           jne 0x40030f0	      3566	ftp.c	FUNCTION_52	IF_11	IF_12	IF_14	IF_15
0x4003303	          0x4889df	                            mov rdi, rbx	      3567	ftp.c	FUNCTION_52	IF_11	IF_12	IF_14	CALL_13
0x4003306	      0xe825e0ffff	               call sym.InitiateTransfer	      3567	ftp.c	FUNCTION_52	IF_11	IF_12	IF_14	CALL_13
0x400330b	            0x85c0	                           test eax, eax	      3569	ftp.c	FUNCTION_52	IF_11	IF_12	IF_14	IF_16
0x400330d	     0xf844bffffff	                            je 0x400325e	      3569	ftp.c	FUNCTION_52	IF_11	IF_12	IF_14	IF_16
0x4003313	      0xe9d8fdffff	                           jmp 0x40030f0	      3569	ftp.c	FUNCTION_52	IF_11	IF_12	IF_14	IF_16
0x4003318	     0xf1f84000000	                   nop dword [rax + rax]	      3569	ftp.c	FUNCTION_52	IF_11	IF_12	IF_14	IF_16
0x4003320	    0x41c74500ffff	            mov dword [r13], 0xffffffff 	      3512	ftp.c	FUNCTION_52	IF_1	ELSE_1	IF_4
0x4003328	          0x4889df	                            mov rdi, rbx	      3514	ftp.c	FUNCTION_52	IF_1	ELSE_1	IF_4	CALL_6
0x400332b	      0xe800eaffff	               call sym.ftp_epsv_disable	      3514	ftp.c	FUNCTION_52	IF_1	ELSE_1	IF_4	CALL_6
0x4003330	      0xe9bbfdffff	                           jmp 0x40030f0	      3514	ftp.c	FUNCTION_52	IF_1	ELSE_1	IF_4	CALL_6
0x4003335	           0xf1f00	                         nop dword [rax]	      3514	ftp.c	FUNCTION_52	IF_1	ELSE_1	IF_4	CALL_6
0x4003338	     0xfb6b5d40700	          movzx esi, byte [rbp + 0x7d4] 	      3577	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17	CALL_14
0x400333f	      0xba16000000	                           mov edx, 0x16	      3577	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17	CALL_14
0x4003344	          0x4889df	                            mov rdi, rbx	      3577	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17	CALL_14
0x4003347	      0xe824f8ffff	                    call sym.ftp_nb_type	      3577	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17	CALL_14
0x400334c	            0x85c0	                           test eax, eax	      3578	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17	IF_18
0x400334e	     0xf859cfdffff	                           jne 0x40030f0	      3578	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17	IF_18
0x4003354	    0x488dbb500600	                  lea rdi, [rbx + 0x650]	      3057	ftp.c	FUNCTION_45	CALL_1
0x400335b	            0x31f6	                            xor esi, esi	      3057	ftp.c	FUNCTION_45	CALL_1
0x400335d	      0xe800000000	                          call 0x4003362	      3057	ftp.c	FUNCTION_45	CALL_1
0x4003362	    0x80bbe9060000	               cmp byte [rbx + 0x6e9], 0	      3582	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17	IF_19
0x4003369	     0xf8487feffff	                            je 0x40031f6	      3582	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17	IF_19
0x400336f	    0x41c745000000	                      mov dword [r13], 0	      3586	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17	IF_19
0x4003377	      0xe974fdffff	                           jmp 0x40030f0	      3586	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17	IF_19
0x400337c	         0xf1f4000	                         nop dword [rax]	      3586	ftp.c	FUNCTION_52	IF_11	ELSE_2	IF_17	IF_19
0x4003380	      0x418b4c2418	            mov ecx, dword [r12 + 0x18] 	      3609	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_5	IF_22	IF_23
0x4003385	            0x85c9	                           test ecx, ecx	      3609	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_5	IF_22	IF_23
0x4003387	     0xf855bfeffff	                           jne 0x40031e8	      3609	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_5	IF_22	IF_23
0x400338d	      0xba14000000	                           mov edx, 0x14	      3610	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_5	IF_22	IF_23	CALL_17
0x4003392	      0xbe01000000	                              mov esi, 1	      3610	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_5	IF_22	IF_23	CALL_17
0x4003397	          0x4889df	                            mov rdi, rbx	      3610	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_5	IF_22	IF_23	CALL_17
0x400339a	      0xe8d1f7ffff	                    call sym.ftp_nb_type	      3610	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_5	IF_22	IF_23	CALL_17
0x400339f	            0x85c0	                           test eax, eax	      3611	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_5	IF_22	IF_23	IF_24
0x40033a1	     0xf8549fdffff	                           jne 0x40030f0	      3611	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_5	IF_22	IF_23	IF_24
0x40033a7	      0xe93cfeffff	                           jmp 0x40031e8	      3611	ftp.c	FUNCTION_52	IF_11	ELSE_4	ELSE_5	IF_22	IF_23	IF_24
0x40033ac	      0xe800000000	                          call 0x40033b1	      3640	ftp.c	FUNCTION_52
freedirs	WHILE,0:SWITCH,0:IF,1:ELSE,0:FOR,1:CALL,4:functions,0:DO,0	45
0x4000040	            0x4155	                                push r13	       241	ftp.c	FUNCTION_2
0x4000042	            0x4154	                                push r12	       241	ftp.c	FUNCTION_2
0x4000044	              0x55	                                push rbp	       241	ftp.c	FUNCTION_2
0x4000045	              0x53	                                push rbx	       241	ftp.c	FUNCTION_2
0x4000046	          0x4889fd	                            mov rbp, rdi	       241	ftp.c	FUNCTION_2
0x4000049	        0x4883ec08	                              sub rsp, 8	       241	ftp.c	FUNCTION_2
0x400004d	        0x488b7f78	            mov rdi, qword [rdi + 0x78] 	       243	ftp.c	FUNCTION_2	IF_1
0x4000051	          0x4885ff	                           test rdi, rdi	       243	ftp.c	FUNCTION_2	IF_1
0x4000054	     0xf8496000000	                            je 0x40000f0	       243	ftp.c	FUNCTION_2	IF_1
0x400005a	    0x8b8580000000	            mov eax, dword [rbp + 0x80] 	       244	ftp.c	FUNCTION_2	IF_1	FOR_1
0x4000060	            0x85c0	                           test eax, eax	       244	ftp.c	FUNCTION_2	IF_1	FOR_1
0x4000062	     0xf8e91000000	                           jle 0x40000f9	       244	ftp.c	FUNCTION_2	IF_1	FOR_1
0x4000068	    0x4c8b2d000000	            mov r13, qword [0x0400006f] 	       244	ftp.c	FUNCTION_2	IF_1	FOR_1
0x400006f	            0x31db	                            xor ebx, ebx	       244	ftp.c	FUNCTION_2	IF_1	FOR_1
0x4000071	          0x4531e4	                          xor r12d, r12d	       244	ftp.c	FUNCTION_2	IF_1	FOR_1
0x4000074	         0xf1f4000	                         nop dword [rax]	       244	ftp.c	FUNCTION_2	IF_1	FOR_1
0x4000078	        0x488b3c1f	              mov rdi, qword [rdi + rbx]	       245	ftp.c	FUNCTION_2	IF_1	FOR_1	CALL_1
0x400007c	        0x4183c401	                             add r12d, 1	       244	ftp.c	FUNCTION_2	IF_1	FOR_1
0x4000080	        0x41ff5500	                        call qword [r13]	       245	ftp.c	FUNCTION_2	IF_1	FOR_1	CALL_1
0x4000084	        0x488b4578	            mov rax, qword [rbp + 0x78] 	       246	ftp.c	FUNCTION_2	IF_1	FOR_1
0x4000088	    0x48c704180000	                mov qword [rax + rbx], 0	       246	ftp.c	FUNCTION_2	IF_1	FOR_1
0x4000090	        0x4883c308	                              add rbx, 8	       246	ftp.c	FUNCTION_2	IF_1	FOR_1
0x4000094	    0x4439a5800000	           cmp dword [rbp + 0x80], r12d 	       244	ftp.c	FUNCTION_2	IF_1	FOR_1
0x400009b	        0x488b7d78	            mov rdi, qword [rbp + 0x78] 	       244	ftp.c	FUNCTION_2	IF_1	FOR_1
0x400009f	            0x7fd7	                            jg 0x4000078	       244	ftp.c	FUNCTION_2	IF_1	FOR_1
0x40000a1	        0x41ff5500	                        call qword [r13]	       248	ftp.c	FUNCTION_2	IF_1	CALL_2
0x40000a5	    0x48c745780000	               mov qword [rbp + 0x78], 0	       249	ftp.c	FUNCTION_2	IF_1
0x40000ad	    0xc78580000000	               mov dword [rbp + 0x80], 0	       250	ftp.c	FUNCTION_2	IF_1
0x40000b7	    0x488bbd880000	            mov rdi, qword [rbp + 0x88] 	       252	ftp.c	FUNCTION_2	CALL_3
0x40000be	        0x41ff5500	                        call qword [r13]	       252	ftp.c	FUNCTION_2	CALL_3
0x40000c2	    0x48c785880000	               mov qword [rbp + 0x88], 0	       252	ftp.c	FUNCTION_2	CALL_3
0x40000cd	    0x488bbde00000	            mov rdi, qword [rbp + 0xe0] 	       255	ftp.c	FUNCTION_2	CALL_4
0x40000d4	        0x41ff5500	                        call qword [r13]	       255	ftp.c	FUNCTION_2	CALL_4
0x40000d8	    0x48c785e00000	               mov qword [rbp + 0xe0], 0	       255	ftp.c	FUNCTION_2	CALL_4
0x40000e3	        0x4883c408	                              add rsp, 8	       256	ftp.c	FUNCTION_2
0x40000e7	              0x5b	                                 pop rbx	       256	ftp.c	FUNCTION_2
0x40000e8	              0x5d	                                 pop rbp	       256	ftp.c	FUNCTION_2
0x40000e9	            0x415c	                                 pop r12	       256	ftp.c	FUNCTION_2
0x40000eb	            0x415d	                                 pop r13	       256	ftp.c	FUNCTION_2
0x40000ed	              0xc3	                                     ret	       256	ftp.c	FUNCTION_2
0x40000ee	            0x6690	                                     nop	       256	ftp.c	FUNCTION_2
0x40000f0	    0x4c8b2d000000	            mov r13, qword [0x040000f7] 	       256	ftp.c	FUNCTION_2
0x40000f7	            0xebbe	                           jmp 0x40000b7	       256	ftp.c	FUNCTION_2
0x40000f9	    0x4c8b2d000000	            mov r13, qword [0x04000100] 	       256	ftp.c	FUNCTION_2
0x4000100	            0xeb9f	                           jmp 0x40000a1	       256	ftp.c	FUNCTION_2
ftp_disconnect	WHILE,0:SWITCH,0:IF,3:ELSE,0:FOR,0:CALL,7:functions,0:DO,0	73
0x4000160	          0x4084f6	                           test sil, sil	      4061	ftp.c	FUNCTION_60	IF_1
0x4000163	            0x4154	                                push r12	      4050	ftp.c	FUNCTION_60
0x4000165	              0x55	                                push rbp	      4050	ftp.c	FUNCTION_60
0x4000166	    0x488daf500600	                  lea rbp, [rdi + 0x650]	      4051	ftp.c	FUNCTION_60
0x400016d	              0x53	                                push rbx	      4050	ftp.c	FUNCTION_60
0x400016e	          0x4889fb	                            mov rbx, rdi	      4050	ftp.c	FUNCTION_60
0x4000171	     0xf85c9000000	                           jne 0x4000240	      4061	ftp.c	FUNCTION_60	IF_1
0x4000177	    0x80bfe1060000	               cmp byte [rdi + 0x6e1], 0	      4023	ftp.c	ELSE_1	FUNCTION_59	IF_1
0x400017e	            0x744b	                            je 0x40001cb	      4023	ftp.c	ELSE_1	FUNCTION_59	IF_1
0x4000180	    0x488d15000000	                   lea rdx, [0x04000187]	      4024	ftp.c	ELSE_1	FUNCTION_59	IF_1	CALL_1
0x4000187	    0x488d35000000	                   lea rsi, [0x0400018e]	      4024	ftp.c	ELSE_1	FUNCTION_59	IF_1	CALL_1
0x400018e	            0x31c0	                            xor eax, eax	      4024	ftp.c	ELSE_1	FUNCTION_59	IF_1	CALL_1
0x4000190	          0x4889ef	                            mov rdi, rbp	      4024	ftp.c	ELSE_1	FUNCTION_59	IF_1	CALL_1
0x4000193	      0xe800000000	                          call 0x4000198	      4024	ftp.c	ELSE_1	FUNCTION_59	IF_1	CALL_1
0x4000198	            0x85c0	                           test eax, eax	      4025	ftp.c	ELSE_1	FUNCTION_59	IF_1	IF_2
0x400019a	     0xf85d0000000	                           jne 0x4000270	      4025	ftp.c	ELSE_1	FUNCTION_59	IF_1	IF_2
0x40001a0	    0xc7830c070000	          mov dword [rbx + 0x70c], 0x22 	       794	ftp.c	ELSE_3	FUNCTION_12
0x40001aa	    0x660f1f440000	                    nop word [rax + rax]	       794	ftp.c	ELSE_3	FUNCTION_12
0x40001b0	      0xbe01000000	                              mov esi, 1	      3074	ftp.c	FUNCTION_46	WHILE_1	CALL_1
0x40001b5	          0x4889ef	                            mov rdi, rbp	      3074	ftp.c	FUNCTION_46	WHILE_1	CALL_1
0x40001b8	      0xe800000000	                          call 0x40001bd	      3074	ftp.c	FUNCTION_46	WHILE_1	CALL_1
0x40001bd	            0x85c0	                           test eax, eax	      3075	ftp.c	FUNCTION_46	WHILE_1	IF_1
0x40001bf	            0x750a	                           jne 0x40001cb	      3075	ftp.c	FUNCTION_46	WHILE_1	IF_1
0x40001c1	    0x8b830c070000	           mov eax, dword [rbx + 0x70c] 	      3073	ftp.c	FUNCTION_46	WHILE_1
0x40001c7	            0x85c0	                           test eax, eax	      3073	ftp.c	FUNCTION_46	WHILE_1
0x40001c9	            0x75e5	                           jne 0x40001b0	      3073	ftp.c	FUNCTION_46	WHILE_1
0x40001cb	    0x488bbbc00600	           mov rdi, qword [rbx + 0x6c0] 	      4067	ftp.c	FUNCTION_60	IF_2
0x40001d2	          0x4885ff	                           test rdi, rdi	      4067	ftp.c	FUNCTION_60	IF_2
0x40001d5	            0x747c	                            je 0x4000253	      4067	ftp.c	FUNCTION_60	IF_2
0x40001d7	          0x488b03	                    mov rax, qword [rbx]	      4068	ftp.c	FUNCTION_60	IF_2
0x40001da	    0x483bb8f05000	          cmp rdi, qword [rax + 0x50f0] 	      4069	ftp.c	FUNCTION_60	IF_2	IF_3
0x40001e1	            0x747d	                            je 0x4000260	      4069	ftp.c	FUNCTION_60	IF_2	IF_3
0x40001e3	    0x4c8b25000000	            mov r12, qword [0x040001ea] 	      4072	ftp.c	FUNCTION_60	IF_2	CALL_2
0x40001ea	        0x41ff1424	                        call qword [r12]	      4072	ftp.c	FUNCTION_60	IF_2	CALL_2
0x40001ee	    0x48c783c00600	              mov qword [rbx + 0x6c0], 0	      4073	ftp.c	FUNCTION_60	IF_2
0x40001f9	          0x4889ef	                            mov rdi, rbp	      4076	ftp.c	FUNCTION_60	CALL_3
0x40001fc	      0xe83ffeffff	                       call sym.freedirs	      4076	ftp.c	FUNCTION_60	CALL_3
0x4000201	    0x488bbbf00600	           mov rdi, qword [rbx + 0x6f0] 	      4077	ftp.c	FUNCTION_60	CALL_4
0x4000208	        0x41ff1424	                        call qword [r12]	      4077	ftp.c	FUNCTION_60	CALL_4
0x400020c	    0x488bbb200700	           mov rdi, qword [rbx + 0x720] 	      4079	ftp.c	FUNCTION_60	CALL_5
0x4000213	    0x48c783f00600	              mov qword [rbx + 0x6f0], 0	      4078	ftp.c	FUNCTION_60
0x400021e	        0x41ff1424	                        call qword [r12]	      4079	ftp.c	FUNCTION_60	CALL_5
0x4000222	    0x48c783200700	              mov qword [rbx + 0x720], 0	      4080	ftp.c	FUNCTION_60
0x400022d	          0x4889ef	                            mov rdi, rbp	      4082	ftp.c	FUNCTION_60	CALL_6
0x4000230	      0xe800000000	                          call 0x4000235	      4082	ftp.c	FUNCTION_60	CALL_6
0x4000235	              0x5b	                                 pop rbx	      4089	ftp.c	FUNCTION_60
0x4000236	            0x31c0	                            xor eax, eax	      4089	ftp.c	FUNCTION_60
0x4000238	              0x5d	                                 pop rbp	      4089	ftp.c	FUNCTION_60
0x4000239	            0x415c	                                 pop r12	      4089	ftp.c	FUNCTION_60
0x400023b	              0xc3	                                     ret	      4089	ftp.c	FUNCTION_60
0x400023c	         0xf1f4000	                         nop dword [rax]	      4089	ftp.c	FUNCTION_60
0x4000240	    0xc687e1060000	               mov byte [rdi + 0x6e1], 0	      4062	ftp.c	FUNCTION_60	IF_1
0x4000247	    0x488bbbc00600	           mov rdi, qword [rbx + 0x6c0] 	      4067	ftp.c	FUNCTION_60	IF_2
0x400024e	          0x4885ff	                           test rdi, rdi	      4067	ftp.c	FUNCTION_60	IF_2
0x4000251	            0x7584	                           jne 0x40001d7	      4067	ftp.c	FUNCTION_60	IF_2
0x4000253	    0x4c8b25000000	            mov r12, qword [0x0400025a] 	      4067	ftp.c	FUNCTION_60	IF_2
0x400025a	            0xeb9d	                           jmp 0x40001f9	      4067	ftp.c	FUNCTION_60	IF_2
0x400025c	         0xf1f4000	                         nop dword [rax]	      4067	ftp.c	FUNCTION_60	IF_2
0x4000260	    0x48c780f05000	            mov qword [rax + 0x50f0], 0 	      4070	ftp.c	FUNCTION_60	IF_2	IF_3
0x400026b	      0xe973ffffff	                           jmp 0x40001e3	      4070	ftp.c	FUNCTION_60	IF_2	IF_3
0x4000270	            0x89c7	                            mov edi, eax	      4026	ftp.c	ELSE_1	FUNCTION_59	IF_1	IF_2	CALL_2
0x4000272	      0xe800000000	                          call 0x4000277	      4026	ftp.c	ELSE_1	FUNCTION_59	IF_1	IF_2	CALL_2
0x4000277	          0x488b3b	                    mov rdi, qword [rbx]	      4026	ftp.c	ELSE_1	FUNCTION_59	IF_1	IF_2	CALL_2
0x400027a	    0x488d35000000	                   lea rsi, [0x04000281]	      4026	ftp.c	ELSE_1	FUNCTION_59	IF_1	IF_2	CALL_2
0x4000281	          0x4889c2	                            mov rdx, rax	      4026	ftp.c	ELSE_1	FUNCTION_59	IF_1	IF_2	CALL_2
0x4000284	            0x31c0	                            xor eax, eax	      4026	ftp.c	ELSE_1	FUNCTION_59	IF_1	IF_2	CALL_2
0x4000286	      0xe800000000	                          call 0x400028b	      4026	ftp.c	ELSE_1	FUNCTION_59	IF_1	IF_2	CALL_2
0x400028b	    0xc683e1060000	               mov byte [rbx + 0x6e1], 0	      4028	ftp.c	ELSE_1	FUNCTION_59	IF_1	IF_2
0x4000292	      0xbe01000000	                              mov esi, 1	      4029	ftp.c	ELSE_1	FUNCTION_59	IF_1	IF_2	CALL_4
0x4000297	          0x4889df	                            mov rdi, rbx	      4029	ftp.c	ELSE_1	FUNCTION_59	IF_1	IF_2	CALL_4
0x400029a	      0xe800000000	                          call 0x400029f	      4029	ftp.c	ELSE_1	FUNCTION_59	IF_1	IF_2	CALL_4
0x400029f	    0xc7830c070000	              mov dword [rbx + 0x70c], 0	       794	ftp.c	ELSE_3	FUNCTION_12
0x40002a9	      0xe91dffffff	                           jmp 0x40001cb	       794	ftp.c	ELSE_3	FUNCTION_12
ftp_setup_connection	WHILE,0:SWITCH,1:IF,5:ELSE,0:FOR,0:CALL,6:functions,0:DO,0	71
0x4001910	            0x4155	                                push r13	      4384	ftp.c	FUNCTION_65
0x4001912	            0x4154	                                push r12	      4384	ftp.c	FUNCTION_65
0x4001914	    0x41bd1b000000	                          mov r13d, 0x1b	      4392	ftp.c	FUNCTION_65	IF_1
0x400191a	              0x55	                                push rbp	      4384	ftp.c	FUNCTION_65
0x400191b	              0x53	                                push rbx	      4384	ftp.c	FUNCTION_65
0x400191c	          0x4889fd	                            mov rbp, rdi	      4384	ftp.c	FUNCTION_65
0x400191f	        0x4883ec08	                              sub rsp, 8	      4384	ftp.c	FUNCTION_65
0x4001923	    0x488b05000000	            mov rax, qword [0x0400192a] 	      4390	ftp.c	FUNCTION_65	CALL_1
0x400192a	          0x4c8b27	                    mov r12, qword [rdi]	      4385	ftp.c	FUNCTION_65
0x400192d	      0xbf28000000	                           mov edi, 0x28	      4390	ftp.c	FUNCTION_65	CALL_1
0x4001932	            0xff10	                        call qword [rax]	      4390	ftp.c	FUNCTION_65	CALL_1
0x4001934	          0x4885c0	                           test rax, rax	      4391	ftp.c	FUNCTION_65	IF_1
0x4001937	    0x49898424e801	            mov qword [r12 + 0x1e8], rax	      4390	ftp.c	FUNCTION_65	CALL_1
0x400193f	     0xf84b8000000	                            je 0x40019fd	      4391	ftp.c	FUNCTION_65	IF_1
0x4001945	          0x4889c3	                            mov rbx, rax	      4391	ftp.c	FUNCTION_65	IF_1
0x4001948	    0x498b84241851	          mov rax, qword [r12 + 0x5118] 	      4394	ftp.c	FUNCTION_65
0x4001950	    0x488d35000000	                   lea rsi, [0x04001957]	      4399	ftp.c	FUNCTION_65	CALL_2
0x4001957	    0x41c684242051	              mov byte [r12 + 0x5120], 1	      4395	ftp.c	FUNCTION_65
0x4001960	        0x488d7801	                      lea rdi, [rax + 1]	      4394	ftp.c	FUNCTION_65
0x4001964	    0x4989bc241851	          mov qword [r12 + 0x5118], rdi 	      4394	ftp.c	FUNCTION_65
0x400196c	      0xe800000000	                          call 0x4001971	      4399	ftp.c	FUNCTION_65	CALL_2
0x4001971	          0x4885c0	                           test rax, rax	      4401	ftp.c	FUNCTION_65	IF_2
0x4001974	     0xf84b6000000	                            je 0x4001a30	      4401	ftp.c	FUNCTION_65	IF_2
0x400197a	         0xfbe7806	               movsx edi, byte [rax + 6]	      4406	ftp.c	FUNCTION_65	IF_3	CALL_4
0x400197e	          0xc60000	                       mov byte [rax], 0	      4405	ftp.c	FUNCTION_65	IF_3
0x4001981	      0xe800000000	                          call 0x4001986	      4406	ftp.c	FUNCTION_65	IF_3	CALL_4
0x4001986	            0x3c41	                            cmp al, 0x41	      4409	ftp.c	FUNCTION_65	IF_3	SWITCH_1
0x4001988	    0xc685b4030000	               mov byte [rbp + 0x3b4], 1	      4407	ftp.c	FUNCTION_65	IF_3
0x400198f	     0xf848b000000	                            je 0x4001a20	      4409	ftp.c	FUNCTION_65	IF_3	SWITCH_1
0x4001995	            0x3c44	                            cmp al, 0x44	      4409	ftp.c	FUNCTION_65	IF_3	SWITCH_1
0x4001997	            0x7477	                            je 0x4001a10	      4409	ftp.c	FUNCTION_65	IF_3	SWITCH_1
0x4001999	    0x41c68424d407	               mov byte [r12 + 0x7d4], 0	      4421	ftp.c	FUNCTION_65	IF_3	SWITCH_1
0x40019a2	        0x488b4500	                    mov rax, qword [rbp]	      4427	ftp.c	FUNCTION_65
0x40019a6	    0x488bbd100200	           mov rdi, qword [rbp + 0x210] 	      4435	ftp.c	FUNCTION_65
0x40019ad	    0x41bd03000000	                             mov r13d, 3	      4438	ftp.c	FUNCTION_65	IF_4
0x40019b3	    0x4c8ba5180200	           mov r12, qword [rbp + 0x218] 	      4436	ftp.c	FUNCTION_65
0x40019ba	    0xc74318000000	               mov dword [rbx + 0x18], 0	      4428	ftp.c	FUNCTION_65
0x40019c1	    0x48c743200000	               mov qword [rbx + 0x20], 0	      4429	ftp.c	FUNCTION_65
0x40019c9	    0x4805e0000000	                           add rax, 0xe0	      4427	ftp.c	FUNCTION_65
0x40019cf	        0x48897b08	                mov qword [rbx + 8], rdi	      4435	ftp.c	FUNCTION_65
0x40019d3	          0x488903	                    mov qword [rbx], rax	      4427	ftp.c	FUNCTION_65
0x40019d6	        0x4c896310	             mov qword [rbx + 0x10], r12	      4436	ftp.c	FUNCTION_65
0x40019da	      0xe891eeffff	                 call sym.isBadFtpString	      4437	ftp.c	FUNCTION_65	IF_4	CALL_5
0x40019df	            0x84c0	                             test al, al	      4437	ftp.c	FUNCTION_65	IF_4	CALL_5
0x40019e1	            0x751a	                           jne 0x40019fd	      4437	ftp.c	FUNCTION_65	IF_4	CALL_5
0x40019e3	          0x4c89e7	                            mov rdi, r12	      4439	ftp.c	FUNCTION_65	IF_5	CALL_6
0x40019e6	      0xe885eeffff	                 call sym.isBadFtpString	      4439	ftp.c	FUNCTION_65	IF_5	CALL_6
0x40019eb	            0x84c0	                             test al, al	      4439	ftp.c	FUNCTION_65	IF_5	CALL_6
0x40019ed	            0x750e	                           jne 0x40019fd	      4439	ftp.c	FUNCTION_65	IF_5	CALL_6
0x40019ef	    0x48c785280700	mov qword [rbp + 0x728], 0xffffffffffffffff 	      4442	ftp.c	FUNCTION_65
0x40019fa	          0x4531ed	                          xor r13d, r13d	      4444	ftp.c	FUNCTION_65
0x40019fd	        0x4883c408	                              add rsp, 8	      4445	ftp.c	FUNCTION_65
0x4001a01	          0x4489e8	                           mov eax, r13d	      4445	ftp.c	FUNCTION_65
0x4001a04	              0x5b	                                 pop rbx	      4445	ftp.c	FUNCTION_65
0x4001a05	              0x5d	                                 pop rbp	      4445	ftp.c	FUNCTION_65
0x4001a06	            0x415c	                                 pop r12	      4445	ftp.c	FUNCTION_65
0x4001a08	            0x415d	                                 pop r13	      4445	ftp.c	FUNCTION_65
0x4001a0a	              0xc3	                                     ret	      4445	ftp.c	FUNCTION_65
0x4001a0b	       0xf1f440000	                   nop dword [rax + rax]	      4445	ftp.c	FUNCTION_65
0x4001a10	    0x41c68424d607	               mov byte [r12 + 0x7d6], 1	      4415	ftp.c	FUNCTION_65	IF_3	SWITCH_1
0x4001a19	            0xeb87	                           jmp 0x40019a2	      4416	ftp.c	FUNCTION_65	IF_3	SWITCH_1
0x4001a1b	       0xf1f440000	                   nop dword [rax + rax]	      4416	ftp.c	FUNCTION_65	IF_3	SWITCH_1
0x4001a20	    0x41c68424d407	               mov byte [r12 + 0x7d4], 1	      4411	ftp.c	FUNCTION_65	IF_3	SWITCH_1
0x4001a29	      0xe974ffffff	                           jmp 0x40019a2	      4412	ftp.c	FUNCTION_65	IF_3	SWITCH_1
0x4001a2e	            0x6690	                                     nop	      4412	ftp.c	FUNCTION_65	IF_3	SWITCH_1
0x4001a30	    0x488bbdc80000	            mov rdi, qword [rbp + 0xc8] 	      4402	ftp.c	FUNCTION_65	CALL_3
0x4001a37	    0x488d35000000	                   lea rsi, [0x04001a3e]	      4402	ftp.c	FUNCTION_65	CALL_3
0x4001a3e	      0xe800000000	                          call 0x4001a43	      4402	ftp.c	FUNCTION_65	CALL_3
0x4001a43	          0x4885c0	                           test rax, rax	      4404	ftp.c	FUNCTION_65	IF_3
0x4001a46	     0xf8456ffffff	                            je 0x40019a2	      4404	ftp.c	FUNCTION_65	IF_3
0x4001a4c	      0xe929ffffff	                           jmp 0x400197a	      4404	ftp.c	FUNCTION_65	IF_3
ftp_state_size	WHILE,0:SWITCH,0:IF,1:ELSE,1:FOR,0:CALL,1:functions,0:DO,0	23
0x4002440	          0x488b07	                    mov rax, qword [rdi]	      1427	ftp.c	FUNCTION_22
0x4002443	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      1430	ftp.c	FUNCTION_22	IF_1
0x400244a	        0x83781801	               cmp dword [rax + 0x18], 1	      1430	ftp.c	FUNCTION_22	IF_1
0x400244e	            0x7408	                            je 0x4002458	      1430	ftp.c	FUNCTION_22	IF_1
0x4002450	            0xeb8e	                  jmp sym.ftp_state_rest	      1439	ftp.c	FUNCTION_22	CALL_1
0x4002452	    0x660f1f440000	                    nop word [rax + rax]	      1439	ftp.c	FUNCTION_22	CALL_1
0x4002458	    0x488b97d80600	           mov rdx, qword [rdi + 0x6d8] 	      1430	ftp.c	FUNCTION_22	IF_1
0x400245f	          0x4885d2	                           test rdx, rdx	      1430	ftp.c	FUNCTION_22	IF_1
0x4002462	            0x74ec	                            je 0x4002450	      1430	ftp.c	FUNCTION_22	IF_1
0x4002464	              0x53	                                push rbx	      1425	ftp.c	FUNCTION_22
0x4002465	    0x488d35000000	                   lea rsi, [0x0400246c]	      1434	ftp.c	FUNCTION_22	IF_1
0x400246c	          0x4889fb	                            mov rbx, rdi	      1434	ftp.c	FUNCTION_22	IF_1
0x400246f	    0x488dbf500600	                  lea rdi, [rdi + 0x650]	      1434	ftp.c	FUNCTION_22	IF_1
0x4002476	            0x31c0	                            xor eax, eax	      1434	ftp.c	FUNCTION_22	IF_1
0x4002478	      0xe800000000	                          call 0x400247d	      1434	ftp.c	FUNCTION_22	IF_1
0x400247d	            0x85c0	                           test eax, eax	      1434	ftp.c	FUNCTION_22	IF_1
0x400247f	            0x7407	                            je 0x4002488	      1434	ftp.c	FUNCTION_22	IF_1
0x4002481	              0x5b	                                 pop rbx	      1442	ftp.c	FUNCTION_22
0x4002482	              0xc3	                                     ret	      1442	ftp.c	FUNCTION_22
0x4002483	       0xf1f440000	                   nop dword [rax + rax]	      1442	ftp.c	FUNCTION_22
0x4002488	    0xc7830c070000	          mov dword [rbx + 0x70c], 0x17 	       794	ftp.c	ELSE_3	FUNCTION_12
0x4002492	              0x5b	                                 pop rbx	      1442	ftp.c	FUNCTION_22
0x4002493	              0xc3	                                     ret	      1442	ftp.c	FUNCTION_22
ftp_connect	WHILE,0:SWITCH,0:IF,2:ELSE,0:FOR,0:CALL,4:functions,0:DO,0	36
0x40002f0	            0x4154	                                push r12	      3092	ftp.c	FUNCTION_47
0x40002f2	              0x55	                                push rbp	      3092	ftp.c	FUNCTION_47
0x40002f3	          0x4889f5	                            mov rbp, rsi	      3092	ftp.c	FUNCTION_47
0x40002f6	              0x53	                                push rbx	      3092	ftp.c	FUNCTION_47
0x40002f7	          0xc60600	                       mov byte [rsi], 0	      3097	ftp.c	FUNCTION_47
0x40002fa	            0x31f6	                            xor esi, esi	      3100	ftp.c	FUNCTION_47	CALL_1
0x40002fc	          0x4889fb	                            mov rbx, rdi	      3092	ftp.c	FUNCTION_47
0x40002ff	    0x4c8da7500600	                  lea r12, [rdi + 0x650]	      3095	ftp.c	FUNCTION_47
0x4000306	      0xe800000000	                          call 0x400030b	      3100	ftp.c	FUNCTION_47	CALL_1
0x400030b	    0x488d05ee3100	         lea rax, sym.ftp_statemach_act 	      3103	ftp.c	FUNCTION_47
0x4000312	    0x48c783a00600	      mov qword [rbx + 0x6a0], 0x1b7740 	      3102	ftp.c	FUNCTION_47
0x400031d	    0x48899ba80600	            mov qword [rbx + 0x6a8], rbx	      3105	ftp.c	FUNCTION_47
0x4000324	    0x488983b00600	            mov qword [rbx + 0x6b0], rax	      3103	ftp.c	FUNCTION_47
0x400032b	    0x488d057e1900	              lea rax, sym.ftp_endofresp	      3104	ftp.c	FUNCTION_47
0x4000332	    0x488983b80600	            mov qword [rbx + 0x6b8], rax	      3104	ftp.c	FUNCTION_47
0x4000339	    0x488b83e00300	           mov rax, qword [rbx + 0x3e0] 	      3107	ftp.c	FUNCTION_47	IF_1
0x4000340	    0xf68084000000	               test byte [rax + 0x84], 1	      3107	ftp.c	FUNCTION_47	IF_1
0x4000347	            0x740e	                            je 0x4000357	      3107	ftp.c	FUNCTION_47	IF_1
0x4000349	            0x31f6	                            xor esi, esi	      3109	ftp.c	FUNCTION_47	IF_1	CALL_2
0x400034b	          0x4889df	                            mov rdi, rbx	      3109	ftp.c	FUNCTION_47	IF_1	CALL_2
0x400034e	      0xe800000000	                          call 0x4000353	      3109	ftp.c	FUNCTION_47	IF_1	CALL_2
0x4000353	            0x85c0	                           test eax, eax	      3110	ftp.c	FUNCTION_47	IF_1	IF_2
0x4000355	            0x7528	                           jne 0x400037f	      3110	ftp.c	FUNCTION_47	IF_1	IF_2
0x4000357	          0x4c89e7	                            mov rdi, r12	      3114	ftp.c	FUNCTION_47	CALL_3
0x400035a	      0xe800000000	                          call 0x400035f	      3114	ftp.c	FUNCTION_47	CALL_3
0x400035f	            0x31f6	                            xor esi, esi	      3057	ftp.c	FUNCTION_45	CALL_1
0x4000361	    0xc7830c070000	              mov dword [rbx + 0x70c], 1	       794	ftp.c	ELSE_3	FUNCTION_12
0x400036b	          0x4c89e7	                            mov rdi, r12	      3057	ftp.c	FUNCTION_45	CALL_1
0x400036e	      0xe800000000	                          call 0x4000373	      3057	ftp.c	FUNCTION_45	CALL_1
0x4000373	    0x8b930c070000	           mov edx, dword [rbx + 0x70c] 	      3062	ftp.c	FUNCTION_45
0x4000379	            0x85d2	                           test edx, edx	      3062	ftp.c	FUNCTION_45
0x400037b	         0xf944500	                         sete byte [rbp]	      3062	ftp.c	FUNCTION_45
0x400037f	              0x5b	                                 pop rbx	      3123	ftp.c	FUNCTION_47
0x4000380	              0x5d	                                 pop rbp	      3123	ftp.c	FUNCTION_47
0x4000381	            0x415c	                                 pop r12	      3123	ftp.c	FUNCTION_47
0x4000383	              0xc3	                                     ret	      3123	ftp.c	FUNCTION_47
ftp_parse_url_path	WHILE,1:SWITCH,1:IF,20:ELSE,4:FOR,0:CALL,26:functions,0:DO,0	263
0x4001440	            0x4157	                                push r15	      4100	ftp.c	FUNCTION_61
0x4001442	            0x4156	                                push r14	      4100	ftp.c	FUNCTION_61
0x4001444	    0x4c8db7500600	                  lea r14, [rdi + 0x650]	      4104	ftp.c	FUNCTION_61
0x400144b	            0x4155	                                push r13	      4100	ftp.c	FUNCTION_61
0x400144d	            0x4154	                                push r12	      4100	ftp.c	FUNCTION_61
0x400144f	              0x55	                                push rbp	      4100	ftp.c	FUNCTION_61
0x4001450	              0x53	                                push rbx	      4100	ftp.c	FUNCTION_61
0x4001451	          0x4889fb	                            mov rbx, rdi	      4100	ftp.c	FUNCTION_61
0x4001454	        0x4883ec38	                           sub rsp, 0x38	      4100	ftp.c	FUNCTION_61
0x4001458	          0x4c8b2f	                    mov r13, qword [rdi]	      4101	ftp.c	FUNCTION_61
0x400145b	    0x64488b042528	                mov rax, qword fs:[0x28]	      4100	ftp.c	FUNCTION_61
0x4001464	      0x4889442428	             mov qword [rsp + 0x28], rax	      4100	ftp.c	FUNCTION_61
0x4001469	            0x31c0	                            xor eax, eax	      4100	ftp.c	FUNCTION_61
0x400146b	    0x418b85b80700	           mov eax, dword [r13 + 0x7b8] 	      4116	ftp.c	FUNCTION_61	SWITCH_1
0x4001472	    0x4d8bbde80100	           mov r15, qword [r13 + 0x1e8] 	      4103	ftp.c	FUNCTION_61
0x4001479	    0x498bad185100	          mov rbp, qword [r13 + 0x5118] 	      4106	ftp.c	FUNCTION_61
0x4001480	    0xc687e1060000	               mov byte [rdi + 0x6e1], 0	      4113	ftp.c	FUNCTION_61
0x4001487	    0xc687e8060000	               mov byte [rdi + 0x6e8], 0	      4114	ftp.c	FUNCTION_61
0x400148e	          0x83f802	                              cmp eax, 2	      4116	ftp.c	FUNCTION_61	SWITCH_1
0x4001491	     0xf8409030000	                            je 0x40017a0	      4116	ftp.c	FUNCTION_61	SWITCH_1
0x4001497	          0x83f803	                              cmp eax, 3	      4116	ftp.c	FUNCTION_61	SWITCH_1
0x400149a	     0xf8428010000	                            je 0x40015c8	      4116	ftp.c	FUNCTION_61	SWITCH_1
0x40014a0	    0x488b05000000	            mov rax, qword [0x040014a7] 	      4178	ftp.c	FUNCTION_61	SWITCH_1	CALL_6
0x40014a7	    0xc787d0060000	              mov dword [rdi + 0x6d0], 0	      4176	ftp.c	FUNCTION_61	SWITCH_1
0x40014b1	      0xbe08000000	                              mov esi, 8	      4178	ftp.c	FUNCTION_61	SWITCH_1	CALL_6
0x40014b6	    0xc787d4060000	              mov dword [rdi + 0x6d4], 5	      4177	ftp.c	FUNCTION_61	SWITCH_1
0x40014c0	      0xbf05000000	                              mov edi, 5	      4178	ftp.c	FUNCTION_61	SWITCH_1	CALL_6
0x40014c5	            0xff10	                        call qword [rax]	      4178	ftp.c	FUNCTION_61	SWITCH_1	CALL_6
0x40014c7	          0x4885c0	                           test rax, rax	      4179	ftp.c	FUNCTION_61	SWITCH_1	IF_7
0x40014ca	          0x4989c4	                            mov r12, rax	      4178	ftp.c	FUNCTION_61	SWITCH_1	CALL_6
0x40014cd	    0x488983c80600	            mov qword [rbx + 0x6c8], rax	      4178	ftp.c	FUNCTION_61	SWITCH_1	CALL_6
0x40014d4	     0xf84b5020000	                            je 0x400178f	      4179	ftp.c	FUNCTION_61	SWITCH_1	IF_7
0x40014da	        0x807d002f	                    cmp byte [rbp], 0x2f	      4183	ftp.c	FUNCTION_61	SWITCH_1	IF_8	CALL_7
0x40014de	     0xf847c030000	                            je 0x4001860	      4183	ftp.c	FUNCTION_61	SWITCH_1	IF_8	CALL_7
0x40014e4	         0xf1f4000	                         nop dword [rax]	      4183	ftp.c	FUNCTION_61	SWITCH_1	IF_8	CALL_7
0x40014e8	      0xbe2f000000	                           mov esi, 0x2f	      4190	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	CALL_9
0x40014ed	          0x4889ef	                            mov rdi, rbp	      4190	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	CALL_9
0x40014f0	      0xe800000000	                          call 0x40014f5	      4190	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	CALL_9
0x40014f5	          0x4885c0	                           test rax, rax	      4190	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	CALL_9
0x40014f8	          0x4989c4	                            mov r12, rax	      4190	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	CALL_9
0x40014fb	     0xf844f010000	                            je 0x4001650	      4190	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	CALL_9
0x4001501	          0x4889e8	                            mov rax, rbp	      4193	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1
0x4001504	    0x492b85185100	           sub rax, qword [r13 + 0x5118]	      4193	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1
0x400150b	          0x4885c0	                           test rax, rax	      4193	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1
0x400150e	    0x486383d00600	        movsxd rax, dword [rbx + 0x6d0] 	      4193	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1
0x4001515	     0xf8e05020000	                           jle 0x4001720	      4193	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1
0x400151b	            0x85c0	                           test eax, eax	      4193	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1
0x400151d	     0xf85fd010000	                           jne 0x4001720	      4193	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1
0x4001523	          0x4c39e5	                            cmp rbp, r12	      4196	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4001526	      0xba01000000	                              mov edx, 1	      4196	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x400152b	      0xbe01000000	                              mov esi, 1	      4193	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1
0x4001530	     0xf84f7010000	                            je 0x400172d	      4196	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4001536	    0x488b8bc80600	           mov rcx, qword [rbx + 0x6c8] 	      4201	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x400153d	          0x488b3b	                    mov rdi, qword [rbx]	      4201	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4001540	          0x4531c0	                            xor r8d, r8d	      4201	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4001543	    0x41b901000000	                              mov r9d, 1	      4201	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4001549	        0x488d0cc1	                  lea rcx, [rcx + rax*8]	      4201	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x400154d	          0x4c89e0	                            mov rax, r12	      4201	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4001550	          0x4829e8	                            sub rax, rbp	      4201	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4001553	          0x4829f5	                            sub rbp, rsi	      4201	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4001556	          0x4801c2	                            add rdx, rax	      4201	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4001559	          0x4889ee	                            mov rsi, rbp	      4201	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x400155c	      0xe800000000	                          call 0x4001561	      4201	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4001561	            0x85c0	                           test eax, eax	      4205	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9	IF_10
0x4001563	     0xf85c7020000	                           jne 0x4001830	      4205	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9	IF_10
0x4001569	    0x8b83d0060000	           mov eax, dword [rbx + 0x6d0] 	      4225	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x400156f	    0x8b93d4060000	           mov edx, dword [rbx + 0x6d4] 	      4225	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x4001575	      0x498d6c2401	                      lea rbp, [r12 + 1]	      4224	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1
0x400157a	          0x83c001	                              add eax, 1	      4225	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x400157d	            0x39d0	                            cmp eax, edx	      4225	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x400157f	    0x8983d0060000	            mov dword [rbx + 0x6d0], eax	      4225	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x4001585	     0xf8c5dffffff	                            jl 0x40014e8	      4225	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x400158b	    0x488b05000000	            mov rax, qword [0x04001592] 	      4229	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13	CALL_15
0x4001592	             0x1d2	                            add edx, edx	      4228	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x4001594	    0x488bbbc80600	           mov rdi, qword [rbx + 0x6c8] 	      4229	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13	CALL_15
0x400159b	    0x8993d4060000	            mov dword [rbx + 0x6d4], edx	      4228	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x40015a1	          0x4863d2	                         movsxd rdx, edx	      4229	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13	CALL_15
0x40015a4	    0x488d34d50000	                        lea rsi, [rdx*8]	      4229	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13	CALL_15
0x40015ac	            0xff10	                        call qword [rax]	      4229	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13	CALL_15
0x40015ae	          0x4885c0	                           test rax, rax	      4230	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13	IF_14
0x40015b1	     0xf84d0010000	                            je 0x4001787	      4230	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13	IF_14
0x40015b7	    0x488983c80600	            mov qword [rbx + 0x6c8], rax	      4234	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x40015be	      0xe925ffffff	                           jmp 0x40014e8	      4234	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x40015c3	       0xf1f440000	                   nop dword [rax + rax]	      4234	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_13
0x40015c8	        0x807d0000	                       cmp byte [rbp], 0	      4142	ftp.c	FUNCTION_61	SWITCH_1	IF_2
0x40015cc	     0xf8476020000	                            je 0x4001848	      4142	ftp.c	FUNCTION_61	SWITCH_1	IF_2
0x40015d2	      0xbe2f000000	                           mov esi, 0x2f	      4147	ftp.c	FUNCTION_61	SWITCH_1	CALL_2
0x40015d7	          0x4889ef	                            mov rdi, rbp	      4147	ftp.c	FUNCTION_61	SWITCH_1	CALL_2
0x40015da	      0xe800000000	                          call 0x40015df	      4147	ftp.c	FUNCTION_61	SWITCH_1	CALL_2
0x40015df	          0x4885c0	                           test rax, rax	      4148	ftp.c	FUNCTION_61	SWITCH_1	IF_3
0x40015e2	          0x4989c4	                            mov r12, rax	      4147	ftp.c	FUNCTION_61	SWITCH_1	CALL_2
0x40015e5	     0xf8405030000	                            je 0x40018f0	      4148	ftp.c	FUNCTION_61	SWITCH_1	IF_3
0x40015eb	    0x488b05000000	            mov rax, qword [0x040015f2] 	      4152	ftp.c	FUNCTION_61	SWITCH_1	IF_3	CALL_3
0x40015f2	      0xbe08000000	                              mov esi, 8	      4152	ftp.c	FUNCTION_61	SWITCH_1	IF_3	CALL_3
0x40015f7	      0xbf01000000	                              mov edi, 1	      4152	ftp.c	FUNCTION_61	SWITCH_1	IF_3	CALL_3
0x40015fc	            0xff10	                        call qword [rax]	      4152	ftp.c	FUNCTION_61	SWITCH_1	IF_3	CALL_3
0x40015fe	          0x4885c0	                           test rax, rax	      4153	ftp.c	FUNCTION_61	SWITCH_1	IF_3	IF_4
0x4001601	    0x488983c80600	            mov qword [rbx + 0x6c8], rax	      4152	ftp.c	FUNCTION_61	SWITCH_1	IF_3	CALL_3
0x4001608	     0xf8481010000	                            je 0x400178f	      4153	ftp.c	FUNCTION_61	SWITCH_1	IF_3	IF_4
0x400160e	          0x4c89e2	                            mov rdx, r12	      4157	ftp.c	FUNCTION_61	SWITCH_1	IF_3	IF_5
0x4001611	          0x488b3b	                    mov rdi, qword [rbx]	      4159	ftp.c	FUNCTION_61	SWITCH_1	IF_3	CALL_4
0x4001614	      0xb901000000	                              mov ecx, 1	      4157	ftp.c	FUNCTION_61	SWITCH_1	IF_3	IF_5
0x4001619	          0x4829ea	                            sub rdx, rbp	      4157	ftp.c	FUNCTION_61	SWITCH_1	IF_3	IF_5
0x400161c	    0x41b901000000	                              mov r9d, 1	      4159	ftp.c	FUNCTION_61	SWITCH_1	IF_3	CALL_4
0x4001622	          0x4889ee	                            mov rsi, rbp	      4159	ftp.c	FUNCTION_61	SWITCH_1	IF_3	CALL_4
0x4001625	        0x480f44d1	                          cmove rdx, rcx	      4157	ftp.c	FUNCTION_61	SWITCH_1	IF_3	IF_5
0x4001629	          0x4531c0	                            xor r8d, r8d	      4159	ftp.c	FUNCTION_61	SWITCH_1	IF_3	CALL_4
0x400162c	          0x4889c1	                            mov rcx, rax	      4159	ftp.c	FUNCTION_61	SWITCH_1	IF_3	CALL_4
0x400162f	      0xe800000000	                          call 0x4001634	      4159	ftp.c	FUNCTION_61	SWITCH_1	IF_3	CALL_4
0x4001634	            0x85c0	                           test eax, eax	      4163	ftp.c	FUNCTION_61	SWITCH_1	IF_3	IF_6
0x4001636	     0xf85f4010000	                           jne 0x4001830	      4163	ftp.c	FUNCTION_61	SWITCH_1	IF_3	IF_6
0x400163c	      0x498d6c2401	                      lea rbp, [r12 + 1]	      4168	ftp.c	FUNCTION_61	SWITCH_1	IF_3
0x4001641	    0xc783d0060000	              mov dword [rbx + 0x6d0], 1	      4167	ftp.c	FUNCTION_61	SWITCH_1	IF_3
0x400164b	          0x4885ed	                           test rbp, rbp	      4242	ftp.c	FUNCTION_61	IF_15
0x400164e	            0x740a	                            je 0x400165a	      4242	ftp.c	FUNCTION_61	IF_15
0x4001650	        0x807d0000	                       cmp byte [rbp], 0	      4242	ftp.c	FUNCTION_61	IF_15
0x4001654	     0xf859e020000	                           jne 0x40018f8	      4242	ftp.c	FUNCTION_61	IF_15
0x400165a	    0x4180bde20700	               cmp byte [r13 + 0x7e2], 0	      4255	ftp.c	FUNCTION_61	ELSE_4	IF_17
0x4001662	    0x48c783d80600	              mov qword [rbx + 0x6d8], 0	      4252	ftp.c	FUNCTION_61	ELSE_4
0x400166d	     0xf858d010000	                           jne 0x4001800	      4255	ftp.c	FUNCTION_61	ELSE_4	IF_17
0x4001673	            0x31c0	                            xor eax, eax	      4285	ftp.c	FUNCTION_61
0x4001675	    0x4883bbf00600	              cmp qword [rbx + 0x6f0], 0	      4263	ftp.c	FUNCTION_61	IF_18
0x400167d	    0xc683e2060000	               mov byte [rbx + 0x6e2], 0	      4261	ftp.c	FUNCTION_61
0x4001684	            0x7476	                            je 0x40016fc	      4263	ftp.c	FUNCTION_61	IF_18
0x4001686	    0x498bb5185100	          mov rsi, qword [r13 + 0x5118] 	      4268	ftp.c	FUNCTION_61	IF_18
0x400168d	          0x488b3b	                    mov rdi, qword [rbx]	      4268	ftp.c	FUNCTION_61	IF_18
0x4001690	      0x488d4c2420	                   lea rcx, [rsp + 0x20]	      4268	ftp.c	FUNCTION_61	IF_18
0x4001695	      0x4c8d442418	                    lea r8, [rsp + 0x18]	      4268	ftp.c	FUNCTION_61	IF_18
0x400169a	            0x31d2	                            xor edx, edx	      4268	ftp.c	FUNCTION_61	IF_18
0x400169c	    0x41b901000000	                              mov r9d, 1	      4268	ftp.c	FUNCTION_61	IF_18
0x40016a2	      0xe800000000	                          call 0x40016a7	      4268	ftp.c	FUNCTION_61	IF_18
0x40016a7	            0x85c0	                           test eax, eax	      4270	ftp.c	FUNCTION_61	IF_18	IF_19
0x40016a9	     0xf8581010000	                           jne 0x4001830	      4270	ftp.c	FUNCTION_61	IF_18	IF_19
0x40016af	    0x488bbbd80600	           mov rdi, qword [rbx + 0x6d8] 	      4275	ftp.c	FUNCTION_61	IF_18	CALL_22
0x40016b6	      0x488b6c2418	            mov rbp, qword [rsp + 0x18] 	      4275	ftp.c	FUNCTION_61	IF_18	CALL_22
0x40016bb	          0x4885ff	                           test rdi, rdi	      4275	ftp.c	FUNCTION_61	IF_18	CALL_22
0x40016be	     0xf841c020000	                            je 0x40018e0	      4275	ftp.c	FUNCTION_61	IF_18	CALL_22
0x40016c4	      0xe800000000	                          call 0x40016c9	      4275	ftp.c	FUNCTION_61	IF_18	CALL_22
0x40016c9	    0x4c8bb3f00600	           mov r14, qword [rbx + 0x6f0] 	      4276	ftp.c	FUNCTION_61	IF_18	IF_20	CALL_23
0x40016d0	          0x4829c5	                            sub rbp, rax	      4275	ftp.c	FUNCTION_61	IF_18	CALL_22
0x40016d3	      0x48896c2418	             mov qword [rsp + 0x18], rbp	      4275	ftp.c	FUNCTION_61	IF_18	CALL_22
0x40016d8	          0x4c89f7	                            mov rdi, r14	      4276	ftp.c	FUNCTION_61	IF_18	IF_20	CALL_23
0x40016db	      0xe800000000	                          call 0x40016e0	      4276	ftp.c	FUNCTION_61	IF_18	IF_20	CALL_23
0x40016e0	          0x4839c5	                            cmp rbp, rax	      4276	ftp.c	FUNCTION_61	IF_18	IF_20	CALL_23
0x40016e3	      0x4c8b642420	            mov r12, qword [rsp + 0x20] 	      4277	ftp.c	FUNCTION_61	IF_18	IF_20	CALL_24
0x40016e8	     0xf84a2010000	                            je 0x4001890	      4276	ftp.c	FUNCTION_61	IF_18	IF_20	CALL_23
0x40016ee	    0x488b05000000	            mov rax, qword [0x040016f5] 	      4282	ftp.c	FUNCTION_61	IF_18	CALL_26
0x40016f5	          0x4c89e7	                            mov rdi, r12	      4282	ftp.c	FUNCTION_61	IF_18	CALL_26
0x40016f8	            0xff10	                        call qword [rax]	      4282	ftp.c	FUNCTION_61	IF_18	CALL_26
0x40016fa	            0x31c0	                            xor eax, eax	      4285	ftp.c	FUNCTION_61
0x40016fc	      0x488b4c2428	            mov rcx, qword [rsp + 0x28] 	      4286	ftp.c	FUNCTION_61
0x4001701	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4286	ftp.c	FUNCTION_61
0x400170a	     0xf85f0010000	                           jne 0x4001900	      4286	ftp.c	FUNCTION_61
0x4001710	        0x4883c438	                           add rsp, 0x38	      4286	ftp.c	FUNCTION_61
0x4001714	              0x5b	                                 pop rbx	      4286	ftp.c	FUNCTION_61
0x4001715	              0x5d	                                 pop rbp	      4286	ftp.c	FUNCTION_61
0x4001716	            0x415c	                                 pop r12	      4286	ftp.c	FUNCTION_61
0x4001718	            0x415d	                                 pop r13	      4286	ftp.c	FUNCTION_61
0x400171a	            0x415e	                                 pop r14	      4286	ftp.c	FUNCTION_61
0x400171c	            0x415f	                                 pop r15	      4286	ftp.c	FUNCTION_61
0x400171e	              0xc3	                                     ret	      4286	ftp.c	FUNCTION_61
0x400171f	              0x90	                                     nop	      4286	ftp.c	FUNCTION_61
0x4001720	            0x31d2	                            xor edx, edx	      4193	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1
0x4001722	            0x31f6	                            xor esi, esi	      4193	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1
0x4001724	          0x4c39e5	                            cmp rbp, r12	      4196	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x4001727	     0xf8509feffff	                           jne 0x4001536	      4196	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	IF_9
0x400172d	        0x4883c501	                              add rbp, 1	      4211	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3
0x4001731	            0x85c0	                           test eax, eax	      4212	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11
0x4001733	     0xf85affdffff	                           jne 0x40014e8	      4212	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11
0x4001739	    0x4c8ba3c80600	           mov r12, qword [rbx + 0x6c8] 	      4214	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	CALL_12
0x4001740	    0x488b05000000	            mov rax, qword [0x04001747] 	      4214	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	CALL_12
0x4001747	    0x488d3d000000	                   lea rdi, [0x0400174e]	      4214	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	CALL_12
0x400174e	            0xff10	                        call qword [rax]	      4214	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	CALL_12
0x4001750	        0x49890424	                    mov qword [r12], rax	      4214	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	CALL_12
0x4001754	    0x486383d00600	        movsxd rax, dword [rbx + 0x6d0] 	      4215	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12
0x400175b	    0x488b93c80600	           mov rdx, qword [rbx + 0x6c8] 	      4215	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12
0x4001762	      0x48833cc200	              cmp qword [rdx + rax*8], 0	      4215	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12
0x4001767	          0x8d4801	                      lea ecx, [rax + 1]	      4215	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12
0x400176a	    0x898bd0060000	            mov dword [rbx + 0x6d0], ecx	      4215	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12
0x4001770	     0xf8572fdffff	                           jne 0x40014e8	      4215	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12
0x4001776	    0x488d35000000	                   lea rsi, [0x0400177d]	      4216	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12	CALL_13
0x400177d	          0x4c89ef	                            mov rdi, r13	      4216	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12	CALL_13
0x4001780	            0x31c0	                            xor eax, eax	      4216	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12	CALL_13
0x4001782	      0xe800000000	                          call 0x4001787	      4216	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12	CALL_13
0x4001787	          0x4c89f7	                            mov rdi, r14	      4217	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12	CALL_14
0x400178a	      0xe8b1e8ffff	                       call sym.freedirs	      4217	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12	CALL_14
0x400178f	      0xb81b000000	                           mov eax, 0x1b	      4218	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12
0x4001794	      0xe963ffffff	                           jmp 0x40016fc	      4218	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12
0x4001799	     0xf1f80000000	                         nop dword [rax]	      4218	ftp.c	FUNCTION_61	SWITCH_1	ELSE_2	WHILE_1	ELSE_3	IF_11	IF_12
0x40017a0	        0x807d0000	                       cmp byte [rbp], 0	      4127	ftp.c	FUNCTION_61	SWITCH_1	IF_1
0x40017a4	     0xf84b0feffff	                            je 0x400165a	      4127	ftp.c	FUNCTION_61	SWITCH_1	IF_1
0x40017aa	          0x4889ef	                            mov rdi, rbp	      4128	ftp.c	FUNCTION_61	SWITCH_1	IF_1	CALL_1
0x40017ad	      0xe800000000	                          call 0x40017b2	      4128	ftp.c	FUNCTION_61	SWITCH_1	IF_1	CALL_1
0x40017b2	      0x807c05ff2f	         cmp byte [rbp + rax - 1], 0x2f 	      4127	ftp.c	FUNCTION_61	SWITCH_1	IF_1
0x40017b7	          0x4c89ef	                            mov rdi, r13	      4127	ftp.c	FUNCTION_61	SWITCH_1	IF_1
0x40017ba	     0xf849afeffff	                            je 0x400165a	      4127	ftp.c	FUNCTION_61	SWITCH_1	IF_1
0x40017c0	    0x488d8bd80600	                  lea rcx, [rbx + 0x6d8]	      4244	ftp.c	FUNCTION_61	IF_15	CALL_17
0x40017c7	          0x4531c0	                            xor r8d, r8d	      4243	ftp.c	FUNCTION_61	IF_15
0x40017ca	            0x31d2	                            xor edx, edx	      4243	ftp.c	FUNCTION_61	IF_15
0x40017cc	    0x41b901000000	                              mov r9d, 1	      4243	ftp.c	FUNCTION_61	IF_15
0x40017d2	          0x4889ee	                            mov rsi, rbp	      4243	ftp.c	FUNCTION_61	IF_15
0x40017d5	      0xe800000000	                          call 0x40017da	      4243	ftp.c	FUNCTION_61	IF_15
0x40017da	            0x85c0	                           test eax, eax	      4246	ftp.c	FUNCTION_61	IF_15	IF_16
0x40017dc	            0x7552	                           jne 0x4001830	      4246	ftp.c	FUNCTION_61	IF_15	IF_16
0x40017de	    0x4180bde20700	               cmp byte [r13 + 0x7e2], 0	      4255	ftp.c	FUNCTION_61	ELSE_4	IF_17
0x40017e6	     0xf8487feffff	                            je 0x4001673	      4255	ftp.c	FUNCTION_61	ELSE_4	IF_17
0x40017ec	    0x4883bbd80600	              cmp qword [rbx + 0x6d8], 0	      4255	ftp.c	FUNCTION_61	ELSE_4	IF_17
0x40017f4	     0xf8579feffff	                           jne 0x4001673	      4255	ftp.c	FUNCTION_61	ELSE_4	IF_17
0x40017fa	    0x660f1f440000	                    nop word [rax + rax]	      4255	ftp.c	FUNCTION_61	ELSE_4	IF_17
0x4001800	        0x418b4718	            mov eax, dword [r15 + 0x18] 	      4255	ftp.c	FUNCTION_61	ELSE_4	IF_17
0x4001804	            0x85c0	                           test eax, eax	      4255	ftp.c	FUNCTION_61	ELSE_4	IF_17
0x4001806	     0xf8567feffff	                           jne 0x4001673	      4255	ftp.c	FUNCTION_61	ELSE_4	IF_17
0x400180c	    0x488d35000000	                   lea rsi, [0x04001813]	      4257	ftp.c	FUNCTION_61	ELSE_4	IF_17	CALL_19
0x4001813	            0x31c0	                            xor eax, eax	      4257	ftp.c	FUNCTION_61	ELSE_4	IF_17	CALL_19
0x4001815	          0x4c89ef	                            mov rdi, r13	      4257	ftp.c	FUNCTION_61	ELSE_4	IF_17	CALL_19
0x4001818	      0xe800000000	                          call 0x400181d	      4257	ftp.c	FUNCTION_61	ELSE_4	IF_17	CALL_19
0x400181d	      0xb803000000	                              mov eax, 3	      4258	ftp.c	FUNCTION_61	ELSE_4	IF_17
0x4001822	      0xe9d5feffff	                           jmp 0x40016fc	      4258	ftp.c	FUNCTION_61	ELSE_4	IF_17
0x4001827	    0x660f1f840000	                    nop word [rax + rax]	      4258	ftp.c	FUNCTION_61	ELSE_4	IF_17
0x4001830	          0x4c89f7	                            mov rdi, r14	      4271	ftp.c	FUNCTION_61	IF_18	IF_19	CALL_21
0x4001833	        0x8944240c	              mov dword [rsp + 0xc], eax	      4271	ftp.c	FUNCTION_61	IF_18	IF_19	CALL_21
0x4001837	      0xe804e8ffff	                       call sym.freedirs	      4271	ftp.c	FUNCTION_61	IF_18	IF_19	CALL_21
0x400183c	        0x8b44240c	              mov eax, dword [rsp + 0xc]	      4272	ftp.c	FUNCTION_61	IF_18	IF_19
0x4001840	      0xe9b7feffff	                           jmp 0x40016fc	      4272	ftp.c	FUNCTION_61	IF_18	IF_19
0x4001845	           0xf1f00	                         nop dword [rax]	      4272	ftp.c	FUNCTION_61	IF_18	IF_19
0x4001848	    0xc787d0060000	              mov dword [rdi + 0x6d0], 0	      4144	ftp.c	FUNCTION_61	SWITCH_1	IF_2
0x4001852	      0xe903feffff	                           jmp 0x400165a	      4145	ftp.c	FUNCTION_61	SWITCH_1	IF_2
0x4001857	    0x660f1f840000	                    nop word [rax + rax]	      4145	ftp.c	FUNCTION_61	SWITCH_1	IF_2
0x4001860	        0x807d0100	                   cmp byte [rbp + 1], 0	      4183	ftp.c	FUNCTION_61	SWITCH_1	IF_8	CALL_7
0x4001864	     0xf857efcffff	                           jne 0x40014e8	      4183	ftp.c	FUNCTION_61	SWITCH_1	IF_8	CALL_7
0x400186a	    0x488b05000000	            mov rax, qword [0x04001871] 	      4185	ftp.c	FUNCTION_61	SWITCH_1	IF_8	CALL_8
0x4001871	    0x488d3d000000	                   lea rdi, [0x04001878]	      4185	ftp.c	FUNCTION_61	SWITCH_1	IF_8	CALL_8
0x4001878	        0x4883c501	                              add rbp, 1	      4184	ftp.c	FUNCTION_61	SWITCH_1	IF_8
0x400187c	            0xff10	                        call qword [rax]	      4185	ftp.c	FUNCTION_61	SWITCH_1	IF_8	CALL_8
0x400187e	        0x49890424	                    mov qword [r12], rax	      4185	ftp.c	FUNCTION_61	SWITCH_1	IF_8	CALL_8
0x4001882	    0x8383d0060000	              add dword [rbx + 0x6d0], 1	      4186	ftp.c	FUNCTION_61	SWITCH_1	IF_8
0x4001889	      0xe9bdfdffff	                           jmp 0x400164b	      4186	ftp.c	FUNCTION_61	SWITCH_1	IF_8
0x400188e	            0x6690	                                     nop	      4186	ftp.c	FUNCTION_61	SWITCH_1	IF_8
0x4001890	          0x4889ea	                            mov rdx, rbp	      4277	ftp.c	FUNCTION_61	IF_18	IF_20	CALL_24
0x4001893	          0x4c89f6	                            mov rsi, r14	      4277	ftp.c	FUNCTION_61	IF_18	IF_20	CALL_24
0x4001896	          0x4c89e7	                            mov rdi, r12	      4277	ftp.c	FUNCTION_61	IF_18	IF_20	CALL_24
0x4001899	      0xe800000000	                          call 0x400189e	      4277	ftp.c	FUNCTION_61	IF_18	IF_20	CALL_24
0x400189e	            0x85c0	                           test eax, eax	      4276	ftp.c	FUNCTION_61	IF_18	IF_20	CALL_23
0x40018a0	     0xf8548feffff	                           jne 0x40016ee	      4276	ftp.c	FUNCTION_61	IF_18	IF_20	CALL_23
0x40018a6	    0x418b85b80700	           mov eax, dword [r13 + 0x7b8] 	      4277	ftp.c	FUNCTION_61	IF_18	IF_20	CALL_24
0x40018ad	    0x3983f8060000	           cmp dword [rbx + 0x6f8], eax 	      4277	ftp.c	FUNCTION_61	IF_18	IF_20	CALL_24
0x40018b3	     0xf8535feffff	                           jne 0x40016ee	      4277	ftp.c	FUNCTION_61	IF_18	IF_20	CALL_24
0x40018b9	    0x488d35000000	                   lea rsi, [0x040018c0]	      4279	ftp.c	FUNCTION_61	IF_18	IF_20	CALL_25
0x40018c0	          0x4c89ef	                            mov rdi, r13	      4279	ftp.c	FUNCTION_61	IF_18	IF_20	CALL_25
0x40018c3	            0x31c0	                            xor eax, eax	      4279	ftp.c	FUNCTION_61	IF_18	IF_20	CALL_25
0x40018c5	      0xe800000000	                          call 0x40018ca	      4279	ftp.c	FUNCTION_61	IF_18	IF_20	CALL_25
0x40018ca	    0xc683e2060000	               mov byte [rbx + 0x6e2], 1	      4280	ftp.c	FUNCTION_61	IF_18	IF_20
0x40018d1	      0x4c8b642420	            mov r12, qword [rsp + 0x20] 	      4280	ftp.c	FUNCTION_61	IF_18	IF_20
0x40018d6	      0xe913feffff	                           jmp 0x40016ee	      4280	ftp.c	FUNCTION_61	IF_18	IF_20
0x40018db	       0xf1f440000	                   nop dword [rax + rax]	      4280	ftp.c	FUNCTION_61	IF_18	IF_20
0x40018e0	            0x31c0	                            xor eax, eax	      4275	ftp.c	FUNCTION_61	IF_18	CALL_22
0x40018e2	      0xe9e2fdffff	                           jmp 0x40016c9	      4275	ftp.c	FUNCTION_61	IF_18	CALL_22
0x40018e7	    0x660f1f840000	                    nop word [rax + rax]	      4275	ftp.c	FUNCTION_61	IF_18	CALL_22
0x40018f0	          0x4c89ef	                            mov rdi, r13	      4275	ftp.c	FUNCTION_61	IF_18	CALL_22
0x40018f3	      0xe9c8feffff	                           jmp 0x40017c0	      4275	ftp.c	FUNCTION_61	IF_18	CALL_22
0x40018f8	          0x488b3b	                    mov rdi, qword [rbx]	      4275	ftp.c	FUNCTION_61	IF_18	CALL_22
0x40018fb	      0xe9c0feffff	                           jmp 0x40017c0	      4275	ftp.c	FUNCTION_61	IF_18	CALL_22
0x4001900	      0xe800000000	                          call 0x4001905	      4286	ftp.c	FUNCTION_61
ftp_state_prepare_transfer	WHILE,0:SWITCH,0:IF,5:ELSE,5:FOR,0:CALL,3:functions,0:DO,0	62
0x4002820	          0x488b07	                    mov rax, qword [rdi]	      1363	ftp.c	FUNCTION_20
0x4002823	    0x488b90e80100	           mov rdx, qword [rax + 0x1e8] 	      1366	ftp.c	FUNCTION_20	IF_1
0x400282a	          0x8b5218	            mov edx, dword [rdx + 0x18] 	      1366	ftp.c	FUNCTION_20	IF_1
0x400282d	            0x85d2	                           test edx, edx	      1366	ftp.c	FUNCTION_20	IF_1
0x400282f	            0x755f	                           jne 0x4002890	      1366	ftp.c	FUNCTION_20	IF_1
0x4002831	    0x80b8d7070000	               cmp byte [rax + 0x7d7], 0	      1373	ftp.c	FUNCTION_20	ELSE_1	IF_2
0x4002838	     0xf8592000000	                           jne 0x40028d0	      1373	ftp.c	FUNCTION_20	ELSE_1	IF_2
0x400283e	    0x80b8ee070000	               cmp byte [rax + 0x7ee], 0	      1379	ftp.c	FUNCTION_20	ELSE_2	IF_3
0x4002845	     0xf847d000000	                            je 0x40028c8	      1379	ftp.c	FUNCTION_20	ELSE_2	IF_3
0x400284b	              0x53	                                push rbx	      1361	ftp.c	FUNCTION_20
0x400284c	    0x488b97d80600	           mov rdx, qword [rdi + 0x6d8] 	      1382	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x4002853	          0x4889fb	                            mov rbx, rdi	      1382	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x4002856	          0x4885d2	                           test rdx, rdx	      1382	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x4002859	     0xf8481000000	                            je 0x40028e0	      1382	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x400285f	    0x80b8e2070000	               cmp byte [rax + 0x7e2], 0	      1388	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_3	IF_5
0x4002866	    0x488dbf500600	                  lea rdi, [rdi + 0x650]	      1389	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_3	IF_5
0x400286d	            0x7541	                           jne 0x40028b0	      1388	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_3	IF_5
0x400286f	    0x488d35000000	                   lea rsi, [0x04002876]	      1392	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_4
0x4002876	            0x31c0	                            xor eax, eax	      1392	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_4
0x4002878	      0xe800000000	                          call 0x400287d	      1392	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_4
0x400287d	            0x85c0	                           test eax, eax	      1392	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_4
0x400287f	            0x750c	                           jne 0x400288d	      1392	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_4
0x4002881	    0xc7830c070000	          mov dword [rbx + 0x70c], 0x1d 	       794	ftp.c	ELSE_3	FUNCTION_12
0x400288b	            0x31c0	                            xor eax, eax	       794	ftp.c	ELSE_3	FUNCTION_12
0x400288d	              0x5b	                                 pop rbx	      1401	ftp.c	FUNCTION_20
0x400288e	              0xc3	                                     ret	      1401	ftp.c	FUNCTION_20
0x400288f	              0x90	                                     nop	      1401	ftp.c	FUNCTION_20
0x4002890	    0xc7870c070000	           mov dword [rdi + 0x70c], 0xd 	       794	ftp.c	ELSE_3	FUNCTION_12
0x400289a	      0xba0d000000	                            mov edx, 0xd	      1371	ftp.c	FUNCTION_20	IF_1	CALL_1
0x400289f	      0xbe01000000	                              mov esi, 1	      1371	ftp.c	FUNCTION_20	IF_1	CALL_1
0x40028a4	      0xe9b7fcffff	                 jmp sym.ftp_state_quote	      1371	ftp.c	FUNCTION_20	IF_1	CALL_1
0x40028a9	     0xf1f80000000	                         nop dword [rax]	      1371	ftp.c	FUNCTION_20	IF_1	CALL_1
0x40028b0	    0x488d35000000	                   lea rsi, [0x040028b7]	      1389	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_3	IF_5
0x40028b7	            0x31c0	                            xor eax, eax	      1389	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_3	IF_5
0x40028b9	      0xe800000000	                          call 0x40028be	      1389	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_3	IF_5
0x40028be	            0x85c0	                           test eax, eax	      1389	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_3	IF_5
0x40028c0	            0x74bf	                            je 0x4002881	      1389	ftp.c	FUNCTION_20	ELSE_2	IF_3	ELSE_3	IF_5
0x40028c2	              0x5b	                                 pop rbx	      1401	ftp.c	FUNCTION_20
0x40028c3	              0xc3	                                     ret	      1401	ftp.c	FUNCTION_20
0x40028c4	         0xf1f4000	                         nop dword [rax]	      1401	ftp.c	FUNCTION_20
0x40028c8	      0xe993dcffff	              jmp sym.ftp_state_use_pasv	      1397	ftp.c	FUNCTION_20	ELSE_2	ELSE_5	CALL_3
0x40028cd	           0xf1f00	                         nop dword [rax]	      1397	ftp.c	FUNCTION_20	ELSE_2	ELSE_5	CALL_3
0x40028d0	            0x31f6	                            xor esi, esi	      1375	ftp.c	FUNCTION_20	ELSE_1	IF_2	CALL_2
0x40028d2	      0xe9d9dfffff	              jmp sym.ftp_state_use_port	      1375	ftp.c	FUNCTION_20	ELSE_1	IF_2	CALL_2
0x40028d7	    0x660f1f840000	                    nop word [rax + rax]	      1375	ftp.c	FUNCTION_20	ELSE_1	IF_2	CALL_2
0x40028e0	    0x488b90600800	           mov rdx, qword [rax + 0x860] 	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x40028e7	          0x4885d2	                           test rdx, rdx	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x40028ea	            0x7424	                            je 0x4002910	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x40028ec	    0x488dbb500600	                  lea rdi, [rbx + 0x650]	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x40028f3	    0x488d35000000	                   lea rsi, [0x040028fa]	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x40028fa	            0x31c0	                            xor eax, eax	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x40028fc	      0xe800000000	                          call 0x4002901	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x4002901	            0x85c0	                           test eax, eax	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x4002903	     0xf8478ffffff	                            je 0x4002881	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x4002909	              0x5b	                                 pop rbx	      1401	ftp.c	FUNCTION_20
0x400290a	              0xc3	                                     ret	      1401	ftp.c	FUNCTION_20
0x400290b	       0xf1f440000	                   nop dword [rax + rax]	      1401	ftp.c	FUNCTION_20
0x4002910	    0x80b8d6070000	               cmp byte [rax + 0x7d6], 0	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x4002917	    0x488d15000000	                   lea rdx, [0x0400291e]	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x400291e	    0x488d05000000	                   lea rax, [0x04002925]	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x4002925	        0x480f45d0	                         cmovne rdx, rax	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
0x4002929	            0xebc1	                           jmp 0x40028ec	      1383	ftp.c	FUNCTION_20	ELSE_2	IF_3	IF_4
ftp_state_type	WHILE,0:SWITCH,0:IF,2:ELSE,1:FOR,0:CALL,3:functions,0:DO,0	19
0x40024a0	          0x488b17	                    mov rdx, qword [rdi]	      1532	ftp.c	FUNCTION_26
0x40024a3	    0x80bae1070000	               cmp byte [rdx + 0x7e1], 0	      1539	ftp.c	FUNCTION_26	IF_1
0x40024aa	            0x7428	                            je 0x40024d4	      1539	ftp.c	FUNCTION_26	IF_1
0x40024ac	    0x4883bfd80600	              cmp qword [rdi + 0x6d8], 0	      1539	ftp.c	FUNCTION_26	IF_1
0x40024b4	            0x741e	                            je 0x40024d4	      1539	ftp.c	FUNCTION_26	IF_1
0x40024b6	     0xfb6b2d40700	          movzx esi, byte [rdx + 0x7d4] 	      1540	ftp.c	FUNCTION_26	IF_1	CALL_1
0x40024bd	     0xfbe8ffc0600	          movsx ecx, byte [rdi + 0x6fc] 	      3419	ftp.c	FUNCTION_50
0x40024c4	        0x4080fe01	                              cmp sil, 1	      3419	ftp.c	FUNCTION_50
0x40024c8	            0x19c0	                            sbb eax, eax	      3419	ftp.c	FUNCTION_50
0x40024ca	          0x83e008	                              and eax, 8	      3419	ftp.c	FUNCTION_50
0x40024cd	          0x83c041	                           add eax, 0x41	      3419	ftp.c	FUNCTION_50
0x40024d0	            0x39c1	                            cmp ecx, eax	      1539	ftp.c	FUNCTION_26	IF_1
0x40024d2	            0x750c	                           jne 0x40024e0	      1539	ftp.c	FUNCTION_26	IF_1
0x40024d4	      0xe967ffffff	                  jmp sym.ftp_state_size	      1555	ftp.c	FUNCTION_26	CALL_3
0x40024d9	     0xf1f80000000	                         nop dword [rax]	      1555	ftp.c	FUNCTION_26	CALL_3
0x40024e0	    0x488b82e80100	           mov rax, qword [rdx + 0x1e8] 	      1545	ftp.c	FUNCTION_26	IF_1
0x40024e7	      0xba13000000	                           mov edx, 0x13	      1550	ftp.c	FUNCTION_26	IF_1	CALL_2
0x40024ec	    0xc74018010000	               mov dword [rax + 0x18], 1	      1545	ftp.c	FUNCTION_26	IF_1
0x40024f3	      0xe978060000	                     jmp sym.ftp_nb_type	      1550	ftp.c	FUNCTION_26	IF_1	CALL_2
ftp_state_retr	WHILE,0:SWITCH,0:IF,7:ELSE,3:FOR,0:CALL,7:functions,0:DO,0	113
0x4000390	            0x4154	                                push r12	      2181	ftp.c	FUNCTION_36
0x4000392	              0x55	                                push rbp	      2181	ftp.c	FUNCTION_36
0x4000393	          0x4889fd	                            mov rbp, rdi	      2181	ftp.c	FUNCTION_36
0x4000396	              0x53	                                push rbx	      2181	ftp.c	FUNCTION_36
0x4000397	          0x488b1f	                    mov rbx, qword [rdi]	      2183	ftp.c	FUNCTION_36
0x400039a	    0x488b83b00700	           mov rax, qword [rbx + 0x7b0] 	      2187	ftp.c	FUNCTION_36	IF_1
0x40003a1	          0x4885c0	                           test rax, rax	      2187	ftp.c	FUNCTION_36	IF_1
0x40003a4	            0x742a	                            je 0x40003d0	      2187	ftp.c	FUNCTION_36	IF_1
0x40003a6	          0x4839f0	                            cmp rax, rsi	      2187	ftp.c	FUNCTION_36	IF_1
0x40003a9	            0x7d25	                           jge 0x40003d0	      2187	ftp.c	FUNCTION_36	IF_1
0x40003ab	    0x488d35000000	                   lea rsi, [0x040003b2]	      2188	ftp.c	FUNCTION_36	IF_1	CALL_1
0x40003b2	            0x31c0	                            xor eax, eax	      2188	ftp.c	FUNCTION_36	IF_1	CALL_1
0x40003b4	          0x4889df	                            mov rdi, rbx	      2188	ftp.c	FUNCTION_36	IF_1	CALL_1
0x40003b7	      0xe800000000	                          call 0x40003bc	      2188	ftp.c	FUNCTION_36	IF_1	CALL_1
0x40003bc	      0xb83f000000	                           mov eax, 0x3f	      2189	ftp.c	FUNCTION_36	IF_1
0x40003c1	              0x5b	                                 pop rbx	      2259	ftp.c	FUNCTION_36
0x40003c2	              0x5d	                                 pop rbp	      2259	ftp.c	FUNCTION_36
0x40003c3	            0x415c	                                 pop r12	      2259	ftp.c	FUNCTION_36
0x40003c5	              0xc3	                                     ret	      2259	ftp.c	FUNCTION_36
0x40003c6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2259	ftp.c	FUNCTION_36
0x40003d0	    0x488b93305100	          mov rdx, qword [rbx + 0x5130] 	      2193	ftp.c	FUNCTION_36	IF_2
0x40003d7	    0x4c8ba3e80100	           mov r12, qword [rbx + 0x1e8] 	      2184	ftp.c	FUNCTION_36
0x40003de	          0x4885d2	                           test rdx, rdx	      2193	ftp.c	FUNCTION_36	IF_2
0x40003e1	      0x4989742420	             mov qword [r12 + 0x20], rsi	      2191	ftp.c	FUNCTION_36
0x40003e6	     0xf84a4000000	                            je 0x4000490	      2193	ftp.c	FUNCTION_36	IF_2
0x40003ec	        0x4883feff	             cmp rsi, 0xffffffffffffffff	      2196	ftp.c	FUNCTION_36	IF_2	IF_3
0x40003f0	     0xf84d2000000	                            je 0x40004c8	      2196	ftp.c	FUNCTION_36	IF_2	IF_3
0x40003f6	          0x4885d2	                           test rdx, rdx	      2206	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x40003f9	     0xf88e9000000	                            js 0x40004e8	      2206	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x40003ff	          0x4839d6	                            cmp rsi, rdx	      2220	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2	IF_6
0x4000402	            0x7c64	                            jl 0x4000468	      2220	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2	IF_6
0x4000404	          0x4829d6	                            sub rsi, rdx	      2227	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2
0x4000407	      0x4989742420	             mov qword [r12 + 0x20], rsi	      2227	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2
0x400040c	          0x4885f6	                           test rsi, rsi	      2231	ftp.c	FUNCTION_36	IF_2	IF_7
0x400040f	     0xf85f1000000	                           jne 0x4000506	      2231	ftp.c	FUNCTION_36	IF_2	IF_7
0x4000415	        0x4883ec08	                              sub rsp, 8	      2233	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_5
0x4000419	    0x41b9ffffffff	                     mov r9d, 0xffffffff	      2233	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_5
0x400041f	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	      2233	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_5
0x4000426	            0x6a00	                                  push 0	      2233	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_5
0x4000428	          0x4489ce	                            mov esi, r9d	      2233	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_5
0x400042b	          0x4889ef	                            mov rdi, rbp	      2233	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_5
0x400042e	          0x4531c0	                            xor r8d, r8d	      2233	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_5
0x4000431	            0x31c9	                            xor ecx, ecx	      2233	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_5
0x4000433	      0xe800000000	                          call 0x4000438	      2233	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_5
0x4000438	    0x488d35000000	                   lea rsi, [0x0400043f]	      2234	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_6
0x400043f	          0x4889df	                            mov rdi, rbx	      2234	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_6
0x4000442	            0x31c0	                            xor eax, eax	      2234	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_6
0x4000444	      0xe800000000	                          call 0x4000449	      2234	ftp.c	FUNCTION_36	IF_2	IF_7	CALL_6
0x4000449	    0x41c744241802	               mov dword [r12 + 0x18], 2	      2238	ftp.c	FUNCTION_36	IF_2	IF_7
0x4000452	    0xc7850c070000	              mov dword [rbp + 0x70c], 0	       794	ftp.c	ELSE_3	FUNCTION_12
0x400045c	              0x58	                                 pop rax	      2240	ftp.c	FUNCTION_36	IF_2	IF_7
0x400045d	            0x31c0	                            xor eax, eax	      2240	ftp.c	FUNCTION_36	IF_2	IF_7
0x400045f	              0x5a	                                 pop rdx	      2240	ftp.c	FUNCTION_36	IF_2	IF_7
0x4000460	              0x5b	                                 pop rbx	      2259	ftp.c	FUNCTION_36
0x4000461	              0x5d	                                 pop rbp	      2259	ftp.c	FUNCTION_36
0x4000462	            0x415c	                                 pop r12	      2259	ftp.c	FUNCTION_36
0x4000464	              0xc3	                                     ret	      2259	ftp.c	FUNCTION_36
0x4000465	           0xf1f00	                         nop dword [rax]	      2259	ftp.c	FUNCTION_36
0x4000468	          0x4889f1	                            mov rcx, rsi	      2221	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2	IF_6	CALL_4
0x400046b	    0x488d35000000	                   lea rsi, [0x04000472]	      2221	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2	IF_6	CALL_4
0x4000472	          0x4889df	                            mov rdi, rbx	      2221	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2	IF_6	CALL_4
0x4000475	            0x31c0	                            xor eax, eax	      2221	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2	IF_6	CALL_4
0x4000477	      0xe800000000	                          call 0x400047c	      2221	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2	IF_6	CALL_4
0x400047c	              0x5b	                                 pop rbx	      2259	ftp.c	FUNCTION_36
0x400047d	      0xb824000000	                           mov eax, 0x24	      2224	ftp.c	FUNCTION_36	IF_2	ELSE_1	ELSE_2	IF_6
0x4000482	              0x5d	                                 pop rbp	      2259	ftp.c	FUNCTION_36
0x4000483	            0x415c	                                 pop r12	      2259	ftp.c	FUNCTION_36
0x4000485	              0xc3	                                     ret	      2259	ftp.c	FUNCTION_36
0x4000486	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2259	ftp.c	FUNCTION_36
0x4000490	    0x488b95d80600	           mov rdx, qword [rbp + 0x6d8] 	      2254	ftp.c	FUNCTION_36	ELSE_3
0x4000497	    0x488dbd500600	                  lea rdi, [rbp + 0x650]	      2254	ftp.c	FUNCTION_36	ELSE_3
0x400049e	    0x488d35000000	                   lea rsi, [0x040004a5]	      2254	ftp.c	FUNCTION_36	ELSE_3
0x40004a5	            0x31c0	                            xor eax, eax	      2254	ftp.c	FUNCTION_36	ELSE_3
0x40004a7	      0xe800000000	                          call 0x40004ac	      2254	ftp.c	FUNCTION_36	ELSE_3
0x40004ac	            0x85c0	                           test eax, eax	      2254	ftp.c	FUNCTION_36	ELSE_3
0x40004ae	     0xf850dffffff	                           jne 0x40003c1	      2254	ftp.c	FUNCTION_36	ELSE_3
0x40004b4	    0xc7850c070000	          mov dword [rbp + 0x70c], 0x20 	       794	ftp.c	ELSE_3	FUNCTION_12
0x40004be	              0x5b	                                 pop rbx	      2259	ftp.c	FUNCTION_36
0x40004bf	              0x5d	                                 pop rbp	      2259	ftp.c	FUNCTION_36
0x40004c0	            0x415c	                                 pop r12	      2259	ftp.c	FUNCTION_36
0x40004c2	              0xc3	                                     ret	      2259	ftp.c	FUNCTION_36
0x40004c3	       0xf1f440000	                   nop dword [rax + rax]	      2259	ftp.c	FUNCTION_36
0x40004c8	    0x488d35000000	                   lea rsi, [0x040004cf]	      2197	ftp.c	FUNCTION_36	IF_2	IF_3	CALL_2
0x40004cf	          0x4889df	                            mov rdi, rbx	      2197	ftp.c	FUNCTION_36	IF_2	IF_3	CALL_2
0x40004d2	            0x31c0	                            xor eax, eax	      2197	ftp.c	FUNCTION_36	IF_2	IF_3	CALL_2
0x40004d4	      0xe800000000	                          call 0x40004d9	      2197	ftp.c	FUNCTION_36	IF_2	IF_3	CALL_2
0x40004d9	      0x498b742420	            mov rsi, qword [r12 + 0x20] 	      2197	ftp.c	FUNCTION_36	IF_2	IF_3	CALL_2
0x40004de	      0xe929ffffff	                           jmp 0x400040c	      2197	ftp.c	FUNCTION_36	IF_2	IF_3	CALL_2
0x40004e3	       0xf1f440000	                   nop dword [rax + rax]	      2197	ftp.c	FUNCTION_36	IF_2	IF_3	CALL_2
0x40004e8	          0x4889d0	                            mov rax, rdx	      2208	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4	IF_5
0x40004eb	          0x48f7d8	                                 neg rax	      2208	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4	IF_5
0x40004ee	          0x4839c6	                            cmp rsi, rax	      2208	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4	IF_5
0x40004f1	     0xf8c71ffffff	                            jl 0x4000468	      2208	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4	IF_5
0x40004f7	          0x4801d6	                            add rsi, rdx	      2217	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x40004fa	      0x4989442420	             mov qword [r12 + 0x20], rax	      2215	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x40004ff	    0x4889b3305100	          mov qword [rbx + 0x5130], rsi 	      2217	ftp.c	FUNCTION_36	IF_2	ELSE_1	IF_4
0x4000506	    0x488b93305100	          mov rdx, qword [rbx + 0x5130] 	      2244	ftp.c	FUNCTION_36	IF_2	CALL_7
0x400050d	    0x488d35000000	                   lea rsi, [0x04000514]	      2244	ftp.c	FUNCTION_36	IF_2	CALL_7
0x4000514	            0x31c0	                            xor eax, eax	      2244	ftp.c	FUNCTION_36	IF_2	CALL_7
0x4000516	          0x4889df	                            mov rdi, rbx	      2244	ftp.c	FUNCTION_36	IF_2	CALL_7
0x4000519	      0xe800000000	                          call 0x400051e	      2244	ftp.c	FUNCTION_36	IF_2	CALL_7
0x400051e	    0x488b93305100	          mov rdx, qword [rbx + 0x5130] 	      2247	ftp.c	FUNCTION_36	IF_2
0x4000525	    0x488dbd500600	                  lea rdi, [rbp + 0x650]	      2247	ftp.c	FUNCTION_36	IF_2
0x400052c	    0x488d35000000	                   lea rsi, [0x04000533]	      2247	ftp.c	FUNCTION_36	IF_2
0x4000533	            0x31c0	                            xor eax, eax	      2247	ftp.c	FUNCTION_36	IF_2
0x4000535	      0xe800000000	                          call 0x400053a	      2247	ftp.c	FUNCTION_36	IF_2
0x400053a	            0x85c0	                           test eax, eax	      2247	ftp.c	FUNCTION_36	IF_2
0x400053c	     0xf857ffeffff	                           jne 0x40003c1	      2247	ftp.c	FUNCTION_36	IF_2
0x4000542	    0xc7850c070000	          mov dword [rbp + 0x70c], 0x1b 	       794	ftp.c	ELSE_3	FUNCTION_12
0x400054c	              0x5b	                                 pop rbx	      2259	ftp.c	FUNCTION_36
0x400054d	              0x5d	                                 pop rbp	      2259	ftp.c	FUNCTION_36
0x400054e	            0x415c	                                 pop r12	      2259	ftp.c	FUNCTION_36
0x4000550	              0xc3	                                     ret	      2259	ftp.c	FUNCTION_36
ftp_timeleft_accept	WHILE,0:SWITCH,0:IF,3:ELSE,1:FOR,0:CALL,3:functions,0:DO,0	41
0x4001100	              0x55	                                push rbp	       340	ftp.c	FUNCTION_5
0x4001101	              0x53	                                push rbx	       340	ftp.c	FUNCTION_5
0x4001102	          0x4889fd	                            mov rbp, rdi	       340	ftp.c	FUNCTION_5
0x4001105	        0x4883ec28	                           sub rsp, 0x28	       340	ftp.c	FUNCTION_5
0x4001109	    0x488b9f400300	           mov rbx, qword [rdi + 0x340] 	       345	ftp.c	FUNCTION_5	IF_1
0x4001110	    0x64488b042528	                mov rax, qword fs:[0x28]	       340	ftp.c	FUNCTION_5
0x4001119	      0x4889442418	             mov qword [rsp + 0x18], rax	       340	ftp.c	FUNCTION_5
0x400111e	            0x31c0	                            xor eax, eax	       340	ftp.c	FUNCTION_5
0x4001120	      0xb860ea0000	                         mov eax, 0xea60	       341	ftp.c	FUNCTION_5
0x4001125	          0x4885db	                           test rbx, rbx	       341	ftp.c	FUNCTION_5
0x4001128	        0x480f4ed8	                         cmovle rbx, rax	       341	ftp.c	FUNCTION_5
0x400112c	      0xe800000000	                          call 0x4001131	       348	ftp.c	FUNCTION_5	CALL_1
0x4001131	          0x4889e6	                            mov rsi, rsp	       351	ftp.c	FUNCTION_5	CALL_2
0x4001134	      0x4889542408	                mov qword [rsp + 8], rdx	       348	ftp.c	FUNCTION_5	CALL_1
0x4001139	          0x4889ef	                            mov rdi, rbp	       351	ftp.c	FUNCTION_5	CALL_2
0x400113c	            0x31d2	                            xor edx, edx	       351	ftp.c	FUNCTION_5	CALL_2
0x400113e	        0x48890424	                    mov qword [rsp], rax	       348	ftp.c	FUNCTION_5	CALL_1
0x4001142	      0xe800000000	                          call 0x4001147	       351	ftp.c	FUNCTION_5	CALL_2
0x4001147	          0x4885c0	                           test rax, rax	       352	ftp.c	FUNCTION_5	IF_2
0x400114a	            0x7424	                            je 0x4001170	       352	ftp.c	FUNCTION_5	IF_2
0x400114c	          0x4839c3	                            cmp rbx, rax	       352	ftp.c	FUNCTION_5	IF_2
0x400114f	            0x7e1f	                           jle 0x4001170	       352	ftp.c	FUNCTION_5	IF_2
0x4001151	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       365	ftp.c	FUNCTION_5
0x4001156	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       365	ftp.c	FUNCTION_5
0x400115f	            0x753e	                           jne 0x400119f	       365	ftp.c	FUNCTION_5
0x4001161	        0x4883c428	                           add rsp, 0x28	       365	ftp.c	FUNCTION_5
0x4001165	              0x5b	                                 pop rbx	       365	ftp.c	FUNCTION_5
0x4001166	              0x5d	                                 pop rbp	       365	ftp.c	FUNCTION_5
0x4001167	              0xc3	                                     ret	       365	ftp.c	FUNCTION_5
0x4001168	     0xf1f84000000	                   nop dword [rax + rax]	       365	ftp.c	FUNCTION_5
0x4001170	    0x488b95080c00	           mov rdx, qword [rbp + 0xc08] 	       358	ftp.c	FUNCTION_5	ELSE_1	CALL_3
0x4001177	    0x488b8d100c00	           mov rcx, qword [rbp + 0xc10] 	       358	ftp.c	FUNCTION_5	ELSE_1	CALL_3
0x400117e	        0x488b3c24	                    mov rdi, qword [rsp]	       358	ftp.c	FUNCTION_5	ELSE_1	CALL_3
0x4001182	      0x488b742408	                mov rsi, qword [rsp + 8]	       358	ftp.c	FUNCTION_5	ELSE_1	CALL_3
0x4001187	      0xe800000000	                          call 0x400118c	       358	ftp.c	FUNCTION_5	ELSE_1	CALL_3
0x400118c	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       359	ftp.c	FUNCTION_5	ELSE_1	IF_3
0x4001193	          0x4829c3	                            sub rbx, rax	       359	ftp.c	FUNCTION_5	ELSE_1	IF_3
0x4001196	          0x4889d0	                            mov rax, rdx	       359	ftp.c	FUNCTION_5	ELSE_1	IF_3
0x4001199	        0x480f45c3	                         cmovne rax, rbx	       359	ftp.c	FUNCTION_5	ELSE_1	IF_3
0x400119d	            0xebb2	                           jmp 0x4001151	       359	ftp.c	FUNCTION_5	ELSE_1	IF_3
0x400119f	      0xe800000000	                          call 0x40011a4	       365	ftp.c	FUNCTION_5
Curl_GetFTPResponse	WHILE,1:SWITCH,1:IF,8:ELSE,3:FOR,0:CALL,7:functions,0:DO,0	137
0x4002be0	            0x4157	                                push r15	       631	ftp.c	FUNCTION_11
0x4002be2	            0x4156	                                push r14	       631	ftp.c	FUNCTION_11
0x4002be4	            0x4155	                                push r13	       631	ftp.c	FUNCTION_11
0x4002be6	            0x4154	                                push r12	       631	ftp.c	FUNCTION_11
0x4002be8	          0x4989fc	                            mov r12, rdi	       631	ftp.c	FUNCTION_11
0x4002beb	              0x55	                                push rbp	       631	ftp.c	FUNCTION_11
0x4002bec	              0x53	                                push rbx	       631	ftp.c	FUNCTION_11
0x4002bed	    0x4c8dae500600	                  lea r13, [rsi + 0x650]	       645	ftp.c	FUNCTION_11
0x4002bf4	          0x4889f3	                            mov rbx, rsi	       631	ftp.c	FUNCTION_11
0x4002bf7	        0x4883ec58	                           sub rsp, 0x58	       631	ftp.c	FUNCTION_11
0x4002bfb	          0x488b0e	                    mov rcx, qword [rsi]	       642	ftp.c	FUNCTION_11
0x4002bfe	    0x64488b3c2528	                mov rdi, qword fs:[0x28]	       631	ftp.c	FUNCTION_11
0x4002c07	      0x48897c2448	             mov qword [rsp + 0x48], rdi	       631	ftp.c	FUNCTION_11
0x4002c0c	            0x31ff	                            xor edi, edi	       631	ftp.c	FUNCTION_11
0x4002c0e	    0x8bbe58020000	           mov edi, dword [rsi + 0x258] 	       639	ftp.c	FUNCTION_11
0x4002c14	          0x4885d2	                           test rdx, rdx	       650	ftp.c	FUNCTION_11	IF_1
0x4002c17	      0x4889542410	             mov qword [rsp + 0x10], rdx	       631	ftp.c	FUNCTION_11
0x4002c1c	      0x48894c2428	             mov qword [rsp + 0x28], rcx	       642	ftp.c	FUNCTION_11
0x4002c21	    0xc74424380000	               mov dword [rsp + 0x38], 0	       648	ftp.c	FUNCTION_11
0x4002c29	        0x897c240c	              mov dword [rsp + 0xc], edi	       639	ftp.c	FUNCTION_11
0x4002c2d	     0xf8495010000	                            je 0x4002dc8	       650	ftp.c	FUNCTION_11	IF_1
0x4002c33	    0xc70200000000	                      mov dword [rdx], 0	       651	ftp.c	FUNCTION_11	IF_1
0x4002c39	      0x488d442440	                   lea rax, [rsp + 0x40]	       577	ftp.c	FUNCTION_10	CALL_1
0x4002c3e	    0x49c704240000	                      mov qword [r12], 0	       656	ftp.c	FUNCTION_11	ELSE_1
0x4002c46	            0x31ed	                            xor ebp, ebp	       647	ftp.c	FUNCTION_11
0x4002c48	      0x4889442418	             mov qword [rsp + 0x18], rax	       577	ftp.c	FUNCTION_10	CALL_1
0x4002c4d	      0x488d44243c	                   lea rax, [rsp + 0x3c]	       577	ftp.c	FUNCTION_10	CALL_1
0x4002c52	      0x4889442420	             mov qword [rsp + 0x20], rax	       577	ftp.c	FUNCTION_10	CALL_1
0x4002c57	            0xeb21	                           jmp 0x4002c7a	       577	ftp.c	FUNCTION_10	CALL_1
0x4002c59	     0xf1f80000000	                         nop dword [rax]	       577	ftp.c	FUNCTION_10	CALL_1
0x4002c60	          0x83c501	                              add ebp, 1	       716	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_8
0x4002c63	    0x4883bb500600	              cmp qword [rbx + 0x650], 0	       716	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_8
0x4002c6b	           0xf44e8	                          cmove ebp, eax	       716	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_8
0x4002c6e	        0x49010c24	                    add qword [r12], rcx	       722	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_3
0x4002c72	            0x85d2	                           test edx, edx	       658	ftp.c	FUNCTION_11	ELSE_1	WHILE_1
0x4002c74	     0xf8576010000	                           jne 0x4002df0	       658	ftp.c	FUNCTION_11	ELSE_1	WHILE_1
0x4002c7a	          0x4c89ef	                            mov rdi, r13	       660	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	CALL_1
0x4002c7d	      0xe800000000	                          call 0x4002c82	       660	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	CALL_1
0x4002c82	          0x4885c0	                           test rax, rax	       662	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_2
0x4002c85	          0x4989c6	                            mov r14, rax	       660	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	CALL_1
0x4002c88	     0xf8e6a010000	                           jle 0x4002df8	       662	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_2
0x4002c8e	    0x483de8030000	                          cmp rax, 0x3e8	       667	ftp.c	FUNCTION_11	ELSE_1	WHILE_1
0x4002c94	      0xb8e8030000	                          mov eax, 0x3e8	       667	ftp.c	FUNCTION_11	ELSE_1	WHILE_1
0x4002c99	        0x4c0f4df0	                         cmovge r14, rax	       667	ftp.c	FUNCTION_11	ELSE_1	WHILE_1
0x4002c9d	    0x4883bb500600	              cmp qword [rbx + 0x650], 0	       685	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_4
0x4002ca5	            0x7405	                            je 0x4002cac	       685	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_4
0x4002ca7	          0x83fd01	                              cmp ebp, 1	       685	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_4
0x4002caa	            0x7e0e	                           jle 0x4002cba	       685	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_4
0x4002cac	            0x31f6	                            xor esi, esi	       693	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	CALL_3
0x4002cae	          0x4889df	                            mov rdi, rbx	       693	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	CALL_3
0x4002cb1	      0xe800000000	                          call 0x4002cb6	       693	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	CALL_3
0x4002cb6	            0x84c0	                             test al, al	       693	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	CALL_3
0x4002cb8	            0x745e	                            je 0x4002d18	       693	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	CALL_3
0x4002cba	    0x4c8bb3a80600	           mov r14, qword [rbx + 0x6a8] 	       569	ftp.c	FUNCTION_10
0x4002cc1	      0x488b542420	            mov rdx, qword [rsp + 0x20] 	       577	ftp.c	FUNCTION_10	CALL_1
0x4002cc6	          0x4c89ee	                            mov rsi, r13	       577	ftp.c	FUNCTION_10	CALL_1
0x4002cc9	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       577	ftp.c	FUNCTION_10	CALL_1
0x4002cce	        0x8b7c240c	              mov edi, dword [rsp + 0xc]	       577	ftp.c	FUNCTION_10	CALL_1
0x4002cd2	          0x4d8b3e	                    mov r15, qword [r14]	       570	ftp.c	FUNCTION_10
0x4002cd5	      0xe800000000	                          call 0x4002cda	       577	ftp.c	FUNCTION_10	CALL_1
0x4002cda	        0x8b54243c	            mov edx, dword [rsp + 0x3c] 	       599	ftp.c	FUNCTION_10
0x4002cde	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       602	ftp.c	FUNCTION_10	IF_1
0x4002ce3	    0x81faa5010000	                          cmp edx, 0x1a5	       604	ftp.c	FUNCTION_10	IF_2
0x4002ce9	    0x418997d85100	          mov dword [r15 + 0x51d8], edx 	       599	ftp.c	FUNCTION_10
0x4002cf0	            0x8916	                    mov dword [rsi], edx	       602	ftp.c	FUNCTION_10	IF_1
0x4002cf2	            0x747c	                            je 0x4002d70	       604	ftp.c	FUNCTION_10	IF_2
0x4002cf4	            0x85c0	                           test eax, eax	       710	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_7
0x4002cf6	     0xf8595000000	                           jne 0x4002d91	       710	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_7
0x4002cfc	      0x488b4c2440	            mov rcx, qword [rsp + 0x40] 	       713	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_8
0x4002d01	          0x4885c9	                           test rcx, rcx	       713	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_8
0x4002d04	     0xf8456ffffff	                            je 0x4002c60	       713	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_8
0x4002d0a	            0x31ed	                            xor ebp, ebp	       720	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_3
0x4002d0c	      0xe95dffffff	                           jmp 0x4002c6e	       720	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_3
0x4002d11	     0xf1f80000000	                         nop dword [rax]	       720	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_3
0x4002d18	        0x8b7c240c	              mov edi, dword [rsp + 0xc]	       694	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_4
0x4002d1c	      0xbaffffffff	                     mov edx, 0xffffffff	       694	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_4
0x4002d21	          0x4c89f1	                            mov rcx, r14	       694	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_4
0x4002d24	            0x89d6	                            mov esi, edx	       694	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_4
0x4002d26	      0xe800000000	                          call 0x4002d2b	       694	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_4
0x4002d2b	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       694	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_4
0x4002d2e	            0x7470	                            je 0x4002da0	       694	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_4
0x4002d30	            0x85c0	                           test eax, eax	       694	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_4
0x4002d32	            0x7586	                           jne 0x4002cba	       694	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_4
0x4002d34	          0x4889df	                            mov rdi, rbx	       701	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	IF_6	CALL_6
0x4002d37	      0xe800000000	                          call 0x4002d3c	       701	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	IF_6	CALL_6
0x4002d3c	            0x85c0	                           test eax, eax	       701	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	IF_6	CALL_6
0x4002d3e	     0xf849c000000	                            je 0x4002de0	       701	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	IF_6	CALL_6
0x4002d44	      0xb82a000000	                           mov eax, 0x2a	       702	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	IF_6
0x4002d49	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	       729	ftp.c	FUNCTION_11	ELSE_3
0x4002d4e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       729	ftp.c	FUNCTION_11	ELSE_3
0x4002d57	     0xf85b8000000	                           jne 0x4002e15	       729	ftp.c	FUNCTION_11	ELSE_3
0x4002d5d	        0x4883c458	                           add rsp, 0x58	       729	ftp.c	FUNCTION_11	ELSE_3
0x4002d61	              0x5b	                                 pop rbx	       729	ftp.c	FUNCTION_11	ELSE_3
0x4002d62	              0x5d	                                 pop rbp	       729	ftp.c	FUNCTION_11	ELSE_3
0x4002d63	            0x415c	                                 pop r12	       729	ftp.c	FUNCTION_11	ELSE_3
0x4002d65	            0x415d	                                 pop r13	       729	ftp.c	FUNCTION_11	ELSE_3
0x4002d67	            0x415e	                                 pop r14	       729	ftp.c	FUNCTION_11	ELSE_3
0x4002d69	            0x415f	                                 pop r15	       729	ftp.c	FUNCTION_11	ELSE_3
0x4002d6b	              0xc3	                                     ret	       729	ftp.c	FUNCTION_11	ELSE_3
0x4002d6c	         0xf1f4000	                         nop dword [rax]	       729	ftp.c	FUNCTION_11	ELSE_3
0x4002d70	    0x488d35000000	                   lea rsi, [0x04002d77]	       612	ftp.c	FUNCTION_10	IF_2	CALL_5
0x4002d77	            0x31c0	                            xor eax, eax	       612	ftp.c	FUNCTION_10	IF_2	CALL_5
0x4002d79	          0x4c89ff	                            mov rdi, r15	       612	ftp.c	FUNCTION_10	IF_2	CALL_5
0x4002d7c	      0xe800000000	                          call 0x4002d81	       612	ftp.c	FUNCTION_10	IF_2	CALL_5
0x4002d81	    0x41c7860c0700	              mov dword [r14 + 0x70c], 0	       794	ftp.c	ELSE_3	FUNCTION_12
0x4002d8c	      0xb81c000000	                           mov eax, 0x1c	       614	ftp.c	FUNCTION_10	IF_2
0x4002d91	    0xc68370060000	               mov byte [rbx + 0x670], 0	       726	ftp.c	FUNCTION_11	ELSE_3
0x4002d98	            0xebaf	                           jmp 0x4002d49	       728	ftp.c	FUNCTION_11	ELSE_3
0x4002d9a	    0x660f1f440000	                    nop word [rax + rax]	       728	ftp.c	FUNCTION_11	ELSE_3
0x4002da0	      0xe800000000	                          call 0x4002da5	       697	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1
0x4002da5	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       696	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_5
0x4002daa	            0x8b10	                    mov edx, dword [rax]	       696	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_5
0x4002dac	    0x488d35000000	                   lea rsi, [0x04002db3]	       696	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_5
0x4002db3	            0x31c0	                            xor eax, eax	       696	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_5
0x4002db5	      0xe800000000	                          call 0x4002dba	       696	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1	CALL_5
0x4002dba	      0xb838000000	                           mov eax, 0x38	       698	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1
0x4002dbf	            0xeb88	                           jmp 0x4002d49	       698	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1
0x4002dc1	     0xf1f80000000	                         nop dword [rax]	       698	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	ELSE_2	IF_5	SWITCH_1
0x4002dc8	      0x488d442438	                   lea rax, [rsp + 0x38]	       654	ftp.c	FUNCTION_11	ELSE_1
0x4002dcd	      0x4889442410	             mov qword [rsp + 0x10], rax	       654	ftp.c	FUNCTION_11	ELSE_1
0x4002dd2	      0xe962feffff	                           jmp 0x4002c39	       654	ftp.c	FUNCTION_11	ELSE_1
0x4002dd7	    0x660f1f840000	                    nop word [rax + rax]	       654	ftp.c	FUNCTION_11	ELSE_1
0x4002de0	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       654	ftp.c	FUNCTION_11	ELSE_1
0x4002de5	            0x8b10	                    mov edx, dword [rax]	       654	ftp.c	FUNCTION_11	ELSE_1
0x4002de7	            0x85d2	                           test edx, edx	       658	ftp.c	FUNCTION_11	ELSE_1	WHILE_1
0x4002de9	     0xf848bfeffff	                            je 0x4002c7a	       658	ftp.c	FUNCTION_11	ELSE_1	WHILE_1
0x4002def	              0x90	                                     nop	       658	ftp.c	FUNCTION_11	ELSE_1	WHILE_1
0x4002df0	            0x31c0	                            xor eax, eax	       658	ftp.c	FUNCTION_11	ELSE_1	WHILE_1
0x4002df2	            0xeb9d	                           jmp 0x4002d91	       658	ftp.c	FUNCTION_11	ELSE_1	WHILE_1
0x4002df4	         0xf1f4000	                         nop dword [rax]	       658	ftp.c	FUNCTION_11	ELSE_1	WHILE_1
0x4002df8	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       663	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_2	CALL_2
0x4002dfd	    0x488d35000000	                   lea rsi, [0x04002e04]	       663	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_2	CALL_2
0x4002e04	            0x31c0	                            xor eax, eax	       663	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_2	CALL_2
0x4002e06	      0xe800000000	                          call 0x4002e0b	       663	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_2	CALL_2
0x4002e0b	      0xb81c000000	                           mov eax, 0x1c	       664	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_2
0x4002e10	      0xe934ffffff	                           jmp 0x4002d49	       664	ftp.c	FUNCTION_11	ELSE_1	WHILE_1	IF_2
0x4002e15	      0xe800000000	                          call 0x4002e1a	       729	ftp.c	FUNCTION_11	ELSE_3
AllowServerConnect	WHILE,0:SWITCH,0:IF,6:ELSE,1:FOR,0:CALL,8:functions,0:DO,0	57
0x4002fc0	            0x4154	                                push r12	       500	ftp.c	FUNCTION_8
0x4002fc2	              0x55	                                push rbp	       500	ftp.c	FUNCTION_8
0x4002fc3	          0x4889f5	                            mov rbp, rsi	       500	ftp.c	FUNCTION_8
0x4002fc6	              0x53	                                push rbx	       500	ftp.c	FUNCTION_8
0x4002fc7	          0x488b1f	                    mov rbx, qword [rdi]	       501	ftp.c	FUNCTION_8
0x4002fca	            0x31c0	                            xor eax, eax	       506	ftp.c	FUNCTION_8	CALL_1
0x4002fcc	          0xc60600	                       mov byte [rsi], 0	       505	ftp.c	FUNCTION_8
0x4002fcf	    0x488d35000000	                   lea rsi, [0x04002fd6]	       506	ftp.c	FUNCTION_8	CALL_1
0x4002fd6	          0x4989fc	                            mov r12, rdi	       500	ftp.c	FUNCTION_8
0x4002fd9	          0x4889df	                            mov rdi, rbx	       506	ftp.c	FUNCTION_8	CALL_1
0x4002fdc	      0xe800000000	                          call 0x4002fe1	       506	ftp.c	FUNCTION_8	CALL_1
0x4002fe1	      0xbe09000000	                              mov esi, 9	       509	ftp.c	FUNCTION_8	CALL_2
0x4002fe6	          0x4889df	                            mov rdi, rbx	       509	ftp.c	FUNCTION_8	CALL_2
0x4002fe9	      0xe800000000	                          call 0x4002fee	       509	ftp.c	FUNCTION_8	CALL_2
0x4002fee	          0x4889df	                            mov rdi, rbx	       511	ftp.c	FUNCTION_8	CALL_3
0x4002ff1	      0xe80ae1ffff	            call sym.ftp_timeleft_accept	       511	ftp.c	FUNCTION_8	CALL_3
0x4002ff6	          0x4885c0	                           test rax, rax	       512	ftp.c	FUNCTION_8	IF_1
0x4002ff9	            0x783d	                            js 0x4003038	       512	ftp.c	FUNCTION_8	IF_1
0x4002ffb	          0x4889ee	                            mov rsi, rbp	       519	ftp.c	FUNCTION_8	CALL_5
0x4002ffe	          0x4c89e7	                            mov rdi, r12	       519	ftp.c	FUNCTION_8	CALL_5
0x4003001	      0xe81afeffff	          call sym.ReceivedServerConnect	       519	ftp.c	FUNCTION_8	CALL_5
0x4003006	            0x85c0	                           test eax, eax	       520	ftp.c	FUNCTION_8	IF_2
0x4003008	            0x7525	                           jne 0x400302f	       520	ftp.c	FUNCTION_8	IF_2
0x400300a	        0x807d0000	                       cmp byte [rbp], 0	       523	ftp.c	FUNCTION_8	IF_3
0x400300e	            0x7548	                           jne 0x4003058	       523	ftp.c	FUNCTION_8	IF_3
0x4003010	    0x488bb3400300	           mov rsi, qword [rbx + 0x340] 	       535	ftp.c	FUNCTION_8	ELSE_1	IF_6	CALL_8
0x4003017	      0xb860ea0000	                         mov eax, 0xea60	       535	ftp.c	FUNCTION_8	ELSE_1	IF_6	CALL_8
0x400301c	          0x4889df	                            mov rdi, rbx	       535	ftp.c	FUNCTION_8	ELSE_1	IF_6	CALL_8
0x400301f	          0x4885f6	                           test rsi, rsi	       535	ftp.c	FUNCTION_8	ELSE_1	IF_6	CALL_8
0x4003022	        0x480f4ef0	                         cmovle rsi, rax	       535	ftp.c	FUNCTION_8	ELSE_1	IF_6	CALL_8
0x4003026	            0x31d2	                            xor edx, edx	       535	ftp.c	FUNCTION_8	ELSE_1	IF_6	CALL_8
0x4003028	      0xe800000000	                          call 0x400302d	       535	ftp.c	FUNCTION_8	ELSE_1	IF_6	CALL_8
0x400302d	            0x31c0	                            xor eax, eax	       535	ftp.c	FUNCTION_8	ELSE_1	IF_6	CALL_8
0x400302f	              0x5b	                                 pop rbx	       541	ftp.c	FUNCTION_8
0x4003030	              0x5d	                                 pop rbp	       541	ftp.c	FUNCTION_8
0x4003031	            0x415c	                                 pop r12	       541	ftp.c	FUNCTION_8
0x4003033	              0xc3	                                     ret	       541	ftp.c	FUNCTION_8
0x4003034	         0xf1f4000	                         nop dword [rax]	       541	ftp.c	FUNCTION_8
0x4003038	    0x488d35000000	                   lea rsi, [0x0400303f]	       514	ftp.c	FUNCTION_8	IF_1	CALL_4
0x400303f	          0x4889df	                            mov rdi, rbx	       514	ftp.c	FUNCTION_8	IF_1	CALL_4
0x4003042	            0x31c0	                            xor eax, eax	       514	ftp.c	FUNCTION_8	IF_1	CALL_4
0x4003044	      0xe800000000	                          call 0x4003049	       514	ftp.c	FUNCTION_8	IF_1	CALL_4
0x4003049	              0x5b	                                 pop rbx	       541	ftp.c	FUNCTION_8
0x400304a	      0xb80c000000	                            mov eax, 0xc	       515	ftp.c	FUNCTION_8	IF_1
0x400304f	              0x5d	                                 pop rbp	       541	ftp.c	FUNCTION_8
0x4003050	            0x415c	                                 pop r12	       541	ftp.c	FUNCTION_8
0x4003052	              0xc3	                                     ret	       541	ftp.c	FUNCTION_8
0x4003053	       0xf1f440000	                   nop dword [rax + rax]	       541	ftp.c	FUNCTION_8
0x4003058	          0x4c89e7	                            mov rdi, r12	       524	ftp.c	FUNCTION_8	IF_3	CALL_6
0x400305b	      0xe850e1ffff	            call sym.AcceptServerConnect	       524	ftp.c	FUNCTION_8	IF_3	CALL_6
0x4003060	            0x85c0	                           test eax, eax	       525	ftp.c	FUNCTION_8	IF_3	IF_4
0x4003062	            0x75cb	                           jne 0x400302f	       525	ftp.c	FUNCTION_8	IF_3	IF_4
0x4003064	              0x5b	                                 pop rbx	       541	ftp.c	FUNCTION_8
0x4003065	          0x4c89e7	                            mov rdi, r12	       528	ftp.c	FUNCTION_8	IF_3	CALL_7
0x4003068	              0x5d	                                 pop rbp	       541	ftp.c	FUNCTION_8
0x4003069	            0x415c	                                 pop r12	       541	ftp.c	FUNCTION_8
0x400306b	      0xe9c0e2ffff	                jmp sym.InitiateTransfer	       528	ftp.c	FUNCTION_8	IF_3	CALL_7
InitiateTransfer	WHILE,0:SWITCH,0:IF,3:ELSE,1:FOR,0:CALL,6:functions,0:DO,0	58
0x4001330	            0x4154	                                push r12	       449	ftp.c	FUNCTION_7
0x4001332	              0x55	                                push rbp	       449	ftp.c	FUNCTION_7
0x4001333	              0x53	                                push rbx	       449	ftp.c	FUNCTION_7
0x4001334	    0x80bfae030000	               cmp byte [rdi + 0x3ae], 0	       454	ftp.c	FUNCTION_7	IF_1
0x400133b	          0x4889fb	                            mov rbx, rdi	       449	ftp.c	FUNCTION_7
0x400133e	          0x488b2f	                    mov rbp, qword [rdi]	       450	ftp.c	FUNCTION_7
0x4001341	    0x4c8ba5e80100	           mov r12, qword [rbp + 0x1e8] 	       451	ftp.c	FUNCTION_7
0x4001348	            0x754e	                           jne 0x4001398	       454	ftp.c	FUNCTION_7	IF_1
0x400134a	    0x83bb10070000	          cmp dword [rbx + 0x710], 0x21 	       463	ftp.c	FUNCTION_7	IF_3
0x4001351	            0x7475	                            je 0x40013c8	       463	ftp.c	FUNCTION_7	IF_3
0x4001353	        0x4883ec08	                              sub rsp, 8	       479	ftp.c	FUNCTION_7	ELSE_1	CALL_6
0x4001357	    0x488b93180700	           mov rdx, qword [rbx + 0x718] 	       479	ftp.c	FUNCTION_7	ELSE_1	CALL_6
0x400135e	    0x41b9ffffffff	                     mov r9d, 0xffffffff	       479	ftp.c	FUNCTION_7	ELSE_1	CALL_6
0x4001364	            0x6a00	                                  push 0	       479	ftp.c	FUNCTION_7	ELSE_1	CALL_6
0x4001366	        0x4d8b0424	                     mov r8, qword [r12]	       479	ftp.c	FUNCTION_7	ELSE_1	CALL_6
0x400136a	            0x31c9	                            xor ecx, ecx	       479	ftp.c	FUNCTION_7	ELSE_1	CALL_6
0x400136c	      0xbe01000000	                              mov esi, 1	       479	ftp.c	FUNCTION_7	ELSE_1	CALL_6
0x4001371	          0x4889df	                            mov rdi, rbx	       479	ftp.c	FUNCTION_7	ELSE_1	CALL_6
0x4001374	      0xe800000000	                          call 0x4001379	       479	ftp.c	FUNCTION_7	ELSE_1	CALL_6
0x4001379	              0x58	                                 pop rax	       479	ftp.c	FUNCTION_7	ELSE_1	CALL_6
0x400137a	              0x5a	                                 pop rdx	       479	ftp.c	FUNCTION_7	ELSE_1	CALL_6
0x400137b	    0xc68370060000	               mov byte [rbx + 0x670], 1	       484	ftp.c	FUNCTION_7
0x4001382	    0xc7830c070000	              mov dword [rbx + 0x70c], 0	       794	ftp.c	ELSE_3	FUNCTION_12
0x400138c	            0x31c0	                            xor eax, eax	       487	ftp.c	FUNCTION_7
0x400138e	              0x5b	                                 pop rbx	       488	ftp.c	FUNCTION_7
0x400138f	              0x5d	                                 pop rbp	       488	ftp.c	FUNCTION_7
0x4001390	            0x415c	                                 pop r12	       488	ftp.c	FUNCTION_7
0x4001392	              0xc3	                                     ret	       488	ftp.c	FUNCTION_7
0x4001393	       0xf1f440000	                   nop dword [rax + rax]	       488	ftp.c	FUNCTION_7
0x4001398	    0x488d35000000	                   lea rsi, [0x0400139f]	       457	ftp.c	FUNCTION_7	IF_1	CALL_1
0x400139f	            0x31c0	                            xor eax, eax	       457	ftp.c	FUNCTION_7	IF_1	CALL_1
0x40013a1	          0x4889ef	                            mov rdi, rbp	       457	ftp.c	FUNCTION_7	IF_1	CALL_1
0x40013a4	      0xe800000000	                          call 0x40013a9	       457	ftp.c	FUNCTION_7	IF_1	CALL_1
0x40013a9	      0xbe01000000	                              mov esi, 1	       458	ftp.c	FUNCTION_7	IF_1	CALL_2
0x40013ae	          0x4889df	                            mov rdi, rbx	       458	ftp.c	FUNCTION_7	IF_1	CALL_2
0x40013b1	      0xe800000000	                          call 0x40013b6	       458	ftp.c	FUNCTION_7	IF_1	CALL_2
0x40013b6	            0x85c0	                           test eax, eax	       459	ftp.c	FUNCTION_7	IF_1	IF_2
0x40013b8	            0x75d4	                           jne 0x400138e	       459	ftp.c	FUNCTION_7	IF_1	IF_2
0x40013ba	    0x83bb10070000	          cmp dword [rbx + 0x710], 0x21 	       463	ftp.c	FUNCTION_7	IF_3
0x40013c1	            0x7590	                           jne 0x4001353	       463	ftp.c	FUNCTION_7	IF_3
0x40013c3	       0xf1f440000	                   nop dword [rax + rax]	       463	ftp.c	FUNCTION_7	IF_3
0x40013c8	        0x498b0424	                    mov rax, qword [r12]	       464	ftp.c	FUNCTION_7	IF_3
0x40013cc	          0x4889ef	                            mov rdi, rbp	       469	ftp.c	FUNCTION_7	IF_3	CALL_3
0x40013cf	    0x48c700000000	                      mov qword [rax], 0	       464	ftp.c	FUNCTION_7	IF_3
0x40013d6	    0x488bb5505100	          mov rsi, qword [rbp + 0x5150] 	       469	ftp.c	FUNCTION_7	IF_3	CALL_3
0x40013dd	      0xe800000000	                          call 0x40013e2	       469	ftp.c	FUNCTION_7	IF_3	CALL_3
0x40013e2	        0x4883ec08	                              sub rsp, 8	       474	ftp.c	FUNCTION_7	IF_3	CALL_5
0x40013e6	        0x41ff3424	                        push qword [r12]	       474	ftp.c	FUNCTION_7	IF_3	CALL_5
0x40013ea	            0x31c9	                            xor ecx, ecx	       474	ftp.c	FUNCTION_7	IF_3	CALL_5
0x40013ec	      0xbeffffffff	                     mov esi, 0xffffffff	       474	ftp.c	FUNCTION_7	IF_3	CALL_5
0x40013f1	    0x41b901000000	                              mov r9d, 1	       474	ftp.c	FUNCTION_7	IF_3	CALL_5
0x40013f7	          0x4531c0	                            xor r8d, r8d	       474	ftp.c	FUNCTION_7	IF_3	CALL_5
0x40013fa	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       474	ftp.c	FUNCTION_7	IF_3	CALL_5
0x4001401	          0x4889df	                            mov rdi, rbx	       474	ftp.c	FUNCTION_7	IF_3	CALL_5
0x4001404	      0xe800000000	                          call 0x4001409	       474	ftp.c	FUNCTION_7	IF_3	CALL_5
0x4001409	              0x59	                                 pop rcx	       474	ftp.c	FUNCTION_7	IF_3	CALL_5
0x400140a	              0x5e	                                 pop rsi	       474	ftp.c	FUNCTION_7	IF_3	CALL_5
0x400140b	      0xe96bffffff	                           jmp 0x400137b	       474	ftp.c	FUNCTION_7	IF_3	CALL_5
ftp_done	WHILE,0:SWITCH,1:IF,26:ELSE,6:FOR,0:CALL,32:functions,0:DO,0	379
0x4004df0	            0x4157	                                push r15	      3136	ftp.c	FUNCTION_48
0x4004df2	            0x4156	                                push r14	      3136	ftp.c	FUNCTION_48
0x4004df4	            0x4155	                                push r13	      3136	ftp.c	FUNCTION_48
0x4004df6	            0x4154	                                push r12	      3136	ftp.c	FUNCTION_48
0x4004df8	              0x55	                                push rbp	      3136	ftp.c	FUNCTION_48
0x4004df9	              0x53	                                push rbx	      3136	ftp.c	FUNCTION_48
0x4004dfa	        0x4883ec58	                           sub rsp, 0x58	      3136	ftp.c	FUNCTION_48
0x4004dfe	          0x4c8b2f	                    mov r13, qword [rdi]	      3137	ftp.c	FUNCTION_48
0x4004e01	    0x64488b042528	                mov rax, qword fs:[0x28]	      3136	ftp.c	FUNCTION_48
0x4004e0a	      0x4889442448	             mov qword [rsp + 0x48], rax	      3136	ftp.c	FUNCTION_48
0x4004e0f	            0x31c0	                            xor eax, eax	      3136	ftp.c	FUNCTION_48
0x4004e11	          0x891424	                    mov dword [rsp], edx	      3136	ftp.c	FUNCTION_48
0x4004e14	    0x48c744243800	               mov qword [rsp + 0x38], 0	      3144	ftp.c	FUNCTION_48
0x4004e1d	    0x4d8bbde80100	           mov r15, qword [r13 + 0x1e8] 	      3138	ftp.c	FUNCTION_48
0x4004e24	    0x498b85185100	          mov rax, qword [r13 + 0x5118] 	      3145	ftp.c	FUNCTION_48
0x4004e2b	          0x4d85ff	                           test r15, r15	      3147	ftp.c	FUNCTION_48	IF_1
0x4004e2e	      0x4889442410	             mov qword [rsp + 0x10], rax	      3145	ftp.c	FUNCTION_48
0x4004e33	     0xf84ff030000	                            je 0x4005238	      3147	ftp.c	FUNCTION_48	IF_1
0x4004e39	          0x83fe4e	                           cmp esi, 0x4e	      3150	ftp.c	FUNCTION_48	SWITCH_1
0x4004e3c	          0x4889fd	                            mov rbp, rdi	      3150	ftp.c	FUNCTION_48	SWITCH_1
0x4004e3f	          0x4189f6	                           mov r14d, esi	      3150	ftp.c	FUNCTION_48	SWITCH_1
0x4004e42	    0x4c8da7500600	                  lea r12, [rdi + 0x650]	      3150	ftp.c	FUNCTION_48	SWITCH_1
0x4004e49	     0xf8741020000	                            ja 0x4005090	      3150	ftp.c	FUNCTION_48	SWITCH_1
0x4004e4f	    0x488d05000000	                   lea rax, [0x04004e56]	      3150	ftp.c	FUNCTION_48	SWITCH_1
0x4004e56	            0x89f2	                            mov edx, esi	      3150	ftp.c	FUNCTION_48	SWITCH_1
0x4004e58	        0x48631490	         movsxd rdx, dword [rax + rdx*4]	      3150	ftp.c	FUNCTION_48	SWITCH_1
0x4004e5c	          0x4801d0	                            add rax, rdx	      3150	ftp.c	FUNCTION_48	SWITCH_1
0x4004e5f	            0xffe0	                                 jmp rax	      3150	ftp.c	FUNCTION_48	SWITCH_1
0x4004e61	     0xf1f80000000	                         nop dword [rax]	      3150	ftp.c	FUNCTION_48	SWITCH_1
0x4004e68	        0x803c2400	                       cmp byte [rsp], 0	      3167	ftp.c	FUNCTION_48	SWITCH_1	IF_2
0x4004e6c	     0xf851e020000	                           jne 0x4005090	      3167	ftp.c	FUNCTION_48	SWITCH_1	IF_2
0x4004e72	    0x488b05000000	            mov rax, qword [0x04004e79] 	      3184	ftp.c	FUNCTION_48	CALL_2
0x4004e79	    0x488bbff00600	           mov rdi, qword [rdi + 0x6f0] 	      3184	ftp.c	FUNCTION_48	CALL_2
0x4004e80	      0x4889442408	                mov qword [rsp + 8], rax	      3184	ftp.c	FUNCTION_48	CALL_2
0x4004e85	            0xff10	                        call qword [rax]	      3184	ftp.c	FUNCTION_48	CALL_2
0x4004e87	    0x4180bdf95000	              cmp byte [r13 + 0x50f9], 0	      3186	ftp.c	FUNCTION_48	IF_3
0x4004e8f	     0xf854b040000	                           jne 0x40052e0	      3186	ftp.c	FUNCTION_48	IF_3
0x4004e95	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	      3197	ftp.c	FUNCTION_48	CALL_6
0x4004e9a	      0x488d4c2438	                   lea rcx, [rsp + 0x38]	      3197	ftp.c	FUNCTION_48	CALL_6
0x4004e9f	          0x4531c0	                            xor r8d, r8d	      3197	ftp.c	FUNCTION_48	CALL_6
0x4004ea2	            0x31d2	                            xor edx, edx	      3197	ftp.c	FUNCTION_48	CALL_6
0x4004ea4	    0x41b901000000	                              mov r9d, 1	      3197	ftp.c	FUNCTION_48	CALL_6
0x4004eaa	          0x4c89ef	                            mov rdi, r13	      3197	ftp.c	FUNCTION_48	CALL_6
0x4004ead	      0xe800000000	                          call 0x4004eb2	      3197	ftp.c	FUNCTION_48	CALL_6
0x4004eb2	            0x85c0	                           test eax, eax	      3198	ftp.c	FUNCTION_48	IF_6
0x4004eb4	            0x89c3	                            mov ebx, eax	      3197	ftp.c	FUNCTION_48	CALL_6
0x4004eb6	     0xf855d020000	                           jne 0x4005119	      3198	ftp.c	FUNCTION_48	IF_6
0x4004ebc	    0x488bbdd80600	           mov rdi, qword [rbp + 0x6d8] 	      3206	ftp.c	FUNCTION_48	ELSE_1	CALL_8
0x4004ec3	          0x4885ff	                           test rdi, rdi	      3206	ftp.c	FUNCTION_48	ELSE_1	CALL_8
0x4004ec6	     0xf8454050000	                            je 0x4005420	      3206	ftp.c	FUNCTION_48	ELSE_1	CALL_8
0x4004ecc	      0xe800000000	                          call 0x4004ed1	      3206	ftp.c	FUNCTION_48	ELSE_1	CALL_8
0x4004ed1	      0x4889442418	             mov qword [rsp + 0x18], rax	      3206	ftp.c	FUNCTION_48	ELSE_1	CALL_8
0x4004ed6	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	      3207	ftp.c	FUNCTION_48	ELSE_1	CALL_9
0x4004edb	          0x4889d7	                            mov rdi, rdx	      3207	ftp.c	FUNCTION_48	ELSE_1	CALL_9
0x4004ede	      0x4889542410	             mov qword [rsp + 0x10], rdx	      3207	ftp.c	FUNCTION_48	ELSE_1	CALL_9
0x4004ee3	      0xe800000000	                          call 0x4004ee8	      3207	ftp.c	FUNCTION_48	ELSE_1	CALL_9
0x4004ee8	    0x80bde8060000	               cmp byte [rbp + 0x6e8], 0	      3208	ftp.c	FUNCTION_48	ELSE_1	IF_7
0x4004eef	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	      3208	ftp.c	FUNCTION_48	ELSE_1	IF_7
0x4004ef4	     0xf85fe040000	                           jne 0x40053f8	      3208	ftp.c	FUNCTION_48	ELSE_1	IF_7
0x4004efa	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	      3210	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_8
0x4004eff	    0x418b8db80700	           mov ecx, dword [r13 + 0x7b8] 	      3209	ftp.c	FUNCTION_48	ELSE_1	IF_7
0x4004f06	          0x4829f0	                            sub rax, rsi	      3210	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_8
0x4004f09	    0x898df8060000	           mov dword [rbp + 0x6f8], ecx 	      3209	ftp.c	FUNCTION_48	ELSE_1	IF_7
0x4004f0f	     0xf848b030000	                            je 0x40052a0	      3210	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_8
0x4004f15	          0x83f902	                              cmp ecx, 2	      3210	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_8
0x4004f18	     0xf8482030000	                            je 0x40052a0	      3210	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_8
0x4004f1e	          0x4885f6	                           test rsi, rsi	      3212	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_8	IF_9
0x4004f21	    0x488995f00600	           mov qword [rbp + 0x6f0], rdx 	      3211	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_8
0x4004f28	     0xf85c2030000	                           jne 0x40052f0	      3212	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_8	IF_9
0x4004f2e	    0x488d35000000	                   lea rsi, [0x04004f35]	      3222	ftp.c	FUNCTION_48	ELSE_1	IF_7	CALL_12
0x4004f35	          0x4c89ef	                            mov rdi, r13	      3222	ftp.c	FUNCTION_48	ELSE_1	IF_7	CALL_12
0x4004f38	            0x31c0	                            xor eax, eax	      3222	ftp.c	FUNCTION_48	ELSE_1	IF_7	CALL_12
0x4004f3a	      0xe800000000	                          call 0x4004f3f	      3222	ftp.c	FUNCTION_48	ELSE_1	IF_7	CALL_12
0x4004f3f	          0x4c89e7	                            mov rdi, r12	      3230	ftp.c	FUNCTION_48	CALL_14
0x4004f42	      0xe8f9b0ffff	                       call sym.freedirs	      3230	ftp.c	FUNCTION_48	CALL_14
0x4004f47	    0x83bd5c020000	cmp dword [rbp + 0x25c], 0xffffffffffffffff	      3238	ftp.c	FUNCTION_48	IF_11
0x4004f4e	     0xf8434020000	                            je 0x4005188	      3238	ftp.c	FUNCTION_48	IF_11
0x4004f54	    0x80bde0060000	               cmp byte [rbp + 0x6e0], 0	      3239	ftp.c	FUNCTION_48	IF_11	IF_12
0x4004f5b	     0xf84ec010000	                            je 0x400514d	      3239	ftp.c	FUNCTION_48	IF_11	IF_12
0x4004f61	    0x4983bdd00000	               cmp qword [r13 + 0xd0], 0	      3239	ftp.c	FUNCTION_48	IF_11	IF_12
0x4004f69	     0xf8ede010000	                           jle 0x400514d	      3239	ftp.c	FUNCTION_48	IF_11	IF_12
0x4004f6f	    0x488d15000000	                   lea rdx, [0x04004f76]	      3241	ftp.c	FUNCTION_48	IF_11	IF_12	CALL_16
0x4004f76	    0x488d35000000	                   lea rsi, [0x04004f7d]	      3241	ftp.c	FUNCTION_48	IF_11	IF_12	CALL_16
0x4004f7d	            0x31c0	                            xor eax, eax	      3241	ftp.c	FUNCTION_48	IF_11	IF_12	CALL_16
0x4004f7f	          0x4c89e7	                            mov rdi, r12	      3241	ftp.c	FUNCTION_48	IF_11	IF_12	CALL_16
0x4004f82	      0xe800000000	                          call 0x4004f87	      3241	ftp.c	FUNCTION_48	IF_11	IF_12	CALL_16
0x4004f87	            0x85c0	                           test eax, eax	      3242	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13
0x4004f89	            0x89c3	                            mov ebx, eax	      3241	ftp.c	FUNCTION_48	IF_11	IF_12	CALL_16
0x4004f8b	     0xf85d5040000	                           jne 0x4005466	      3242	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13
0x4004f91	    0x80bda8020000	               cmp byte [rbp + 0x2a8], 0	      3250	ftp.c	FUNCTION_48	IF_11	IF_14
0x4004f98	            0x7413	                            je 0x4004fad	      3250	ftp.c	FUNCTION_48	IF_11	IF_14
0x4004f9a	    0x660f1f440000	                    nop word [rax + rax]	      3250	ftp.c	FUNCTION_48	IF_11	IF_14
0x4004fa0	      0xbe01000000	                              mov esi, 1	      3253	ftp.c	FUNCTION_48	IF_11	IF_14	CALL_20
0x4004fa5	          0x4889ef	                            mov rdi, rbp	      3253	ftp.c	FUNCTION_48	IF_11	IF_14	CALL_20
0x4004fa8	      0xe800000000	                          call 0x4004fad	      3253	ftp.c	FUNCTION_48	IF_11	IF_14	CALL_20
0x4004fad	    0x8bb55c020000	           mov esi, dword [rbp + 0x25c] 	       221	ftp.c	FUNCTION_1	IF_1
0x4004fb3	          0x83feff	             cmp esi, 0xffffffffffffffff	       221	ftp.c	FUNCTION_1	IF_1
0x4004fb6	     0xf85a4010000	                           jne 0x4005160	       221	ftp.c	FUNCTION_1	IF_1
0x4004fbc	            0x85db	                           test ebx, ebx	      3261	ftp.c	FUNCTION_48	IF_15
0x4004fbe	    0xc685a6030000	               mov byte [rbp + 0x3a6], 0	       225	ftp.c	FUNCTION_1
0x4004fc5	     0xf84bd010000	                            je 0x4005188	      3261	ftp.c	FUNCTION_48	IF_15
0x4004fcb	          0x4109de	                            or r14d, ebx	      3348	ftp.c	FUNCTION_48	IF_26
0x4004fce	    0x41c747180000	               mov dword [r15 + 0x18], 0	      3344	ftp.c	FUNCTION_48
0x4004fd6	    0xc685e0060000	               mov byte [rbp + 0x6e0], 0	      3345	ftp.c	FUNCTION_48
0x4004fdd	     0xf852d020000	                           jne 0x4005210	      3348	ftp.c	FUNCTION_48	IF_26
0x4004fe3	        0x803c2400	                       cmp byte [rsp], 0	      3348	ftp.c	FUNCTION_48	IF_26
0x4004fe7	     0xf854b020000	                           jne 0x4005238	      3348	ftp.c	FUNCTION_48	IF_26
0x4004fed	    0x4d8bb5800500	           mov r14, qword [r13 + 0x580] 	      3348	ftp.c	FUNCTION_48	IF_26
0x4004ff4	          0x4d85f6	                           test r14, r14	      3348	ftp.c	FUNCTION_48	IF_26
0x4004ff7	     0xf843b020000	                            je 0x4005238	      3348	ftp.c	FUNCTION_48	IF_26
0x4004ffd	      0x488d442440	                   lea rax, [rsp + 0x40]	      3394	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_2
0x4005002	      0x4c8d7c242c	                   lea r15, [rsp + 0x2c]	      3394	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_2
0x4005007	        0x48890424	                    mov qword [rsp], rax	      3394	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_2
0x400500b	            0xeb65	                           jmp 0x4005072	      3394	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_2
0x400500d	           0xf1f00	                         nop dword [rax]	      3394	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_2
0x4005010	    0x488d35000000	                   lea rsi, [0x04005017]	      3390	ftp.c	FUNCTION_49	WHILE_1	IF_1
0x4005017	            0x31c0	                            xor eax, eax	      3390	ftp.c	FUNCTION_49	WHILE_1	IF_1
0x4005019	          0x4889da	                            mov rdx, rbx	      3390	ftp.c	FUNCTION_49	WHILE_1	IF_1
0x400501c	          0x4c89e7	                            mov rdi, r12	      3390	ftp.c	FUNCTION_49	WHILE_1	IF_1
0x400501f	      0xe800000000	                          call 0x4005024	      3390	ftp.c	FUNCTION_49	WHILE_1	IF_1
0x4005024	            0x85c0	                           test eax, eax	      3390	ftp.c	FUNCTION_49	WHILE_1	IF_1
0x4005026	     0xf85ec030000	                           jne 0x4005418	      3390	ftp.c	FUNCTION_49	WHILE_1	IF_1
0x400502c	      0xe800000000	                          call 0x4005031	      3392	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_1
0x4005031	        0x488b3c24	                    mov rdi, qword [rsp]	      3394	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_2
0x4005035	      0x4989542448	             mov qword [r12 + 0x48], rdx	      3392	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_1
0x400503a	          0x4889ee	                            mov rsi, rbp	      3394	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_2
0x400503d	      0x4989442440	             mov qword [r12 + 0x40], rax	      3392	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_1
0x4005042	          0x4c89fa	                            mov rdx, r15	      3394	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_2
0x4005045	      0xe800000000	                          call 0x400504a	      3394	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_2
0x400504a	            0x85c0	                           test eax, eax	      3395	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_3
0x400504c	     0xf85c6030000	                           jne 0x4005418	      3395	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_3
0x4005052	          0x4584ed	                         test r13b, r13b	      3398	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_4
0x4005055	            0x750e	                           jne 0x4005065	      3398	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_4
0x4005057	    0x817c242c8f01	          cmp dword [rsp + 0x2c], 0x18f 	      3398	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_4
0x400505f	     0xf8fe4030000	                            jg 0x4005449	      3398	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_4
0x4005065	        0x4d8b7608	                mov r14, qword [r14 + 8]	      3404	ftp.c	FUNCTION_49	WHILE_1
0x4005069	          0x4d85f6	                           test r14, r14	      3375	ftp.c	FUNCTION_49	WHILE_1
0x400506c	     0xf84c6010000	                            je 0x4005238	      3375	ftp.c	FUNCTION_49	WHILE_1
0x4005072	          0x498b1e	                    mov rbx, qword [r14]	      3376	ftp.c	FUNCTION_49	WHILE_1	IF_1
0x4005075	          0x4885db	                           test rbx, rbx	      3376	ftp.c	FUNCTION_49	WHILE_1	IF_1
0x4005078	            0x74eb	                            je 0x4005065	      3376	ftp.c	FUNCTION_49	WHILE_1	IF_1
0x400507a	          0x4531ed	                          xor r13d, r13d	      3378	ftp.c	FUNCTION_49	WHILE_1	IF_1
0x400507d	          0x803b2a	                    cmp byte [rbx], 0x2a	      3385	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_2
0x4005080	            0x758e	                           jne 0x4005010	      3385	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_2
0x4005082	        0x4883c301	                              add rbx, 1	      3386	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_2
0x4005086	    0x41bd01000000	                             mov r13d, 1	      3387	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_2
0x400508c	            0xeb82	                           jmp 0x4005010	      3387	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_2
0x400508e	            0x6690	                                     nop	      3387	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_2
0x4005090	      0xbe01000000	                              mov esi, 1	      3178	ftp.c	FUNCTION_48	SWITCH_1	CALL_1
0x4005095	          0x4889ef	                            mov rdi, rbp	      3178	ftp.c	FUNCTION_48	SWITCH_1	CALL_1
0x4005098	    0xc685e1060000	               mov byte [rbp + 0x6e1], 0	      3175	ftp.c	FUNCTION_48	SWITCH_1
0x400509f	    0xc685e8060000	               mov byte [rbp + 0x6e8], 1	      3176	ftp.c	FUNCTION_48	SWITCH_1
0x40050a6	          0x4489f3	                           mov ebx, r14d	      3176	ftp.c	FUNCTION_48	SWITCH_1
0x40050a9	      0xe800000000	                          call 0x40050ae	      3178	ftp.c	FUNCTION_48	SWITCH_1	CALL_1
0x40050ae	    0x488b05000000	            mov rax, qword [0x040050b5] 	      3184	ftp.c	FUNCTION_48	CALL_2
0x40050b5	    0x488bbdf00600	           mov rdi, qword [rbp + 0x6f0] 	      3184	ftp.c	FUNCTION_48	CALL_2
0x40050bc	      0x4889442408	                mov qword [rsp + 8], rax	      3184	ftp.c	FUNCTION_48	CALL_2
0x40050c1	            0xff10	                        call qword [rax]	      3184	ftp.c	FUNCTION_48	CALL_2
0x40050c3	    0x4180bdf95000	              cmp byte [r13 + 0x50f9], 0	      3186	ftp.c	FUNCTION_48	IF_3
0x40050cb	            0x7444	                            je 0x4005111	      3186	ftp.c	FUNCTION_48	IF_3
0x40050cd	    0x4983bd780a00	              cmp qword [r13 + 0xa78], 0	      3187	ftp.c	FUNCTION_48	IF_3	IF_4
0x40050d5	            0x742f	                            je 0x4005106	      3187	ftp.c	FUNCTION_48	IF_3	IF_4
0x40050d7	    0x4883bdd80600	              cmp qword [rbp + 0x6d8], 0	      3187	ftp.c	FUNCTION_48	IF_3	IF_4
0x40050df	            0x7425	                            je 0x4005106	      3187	ftp.c	FUNCTION_48	IF_3	IF_4
0x40050e1	      0xbe01000000	                              mov esi, 1	      3188	ftp.c	FUNCTION_48	IF_3	IF_4	CALL_3
0x40050e6	          0x4c89ef	                            mov rdi, r13	      3188	ftp.c	FUNCTION_48	IF_3	IF_4	CALL_3
0x40050e9	      0xe800000000	                          call 0x40050ee	      3188	ftp.c	FUNCTION_48	IF_3	IF_4	CALL_3
0x40050ee	    0x498bbdd05100	          mov rdi, qword [r13 + 0x51d0] 	      3189	ftp.c	FUNCTION_48	IF_3	IF_4	CALL_4
0x40050f5	    0x41ff95780a00	                call qword [r13 + 0xa78]	      3189	ftp.c	FUNCTION_48	IF_3	IF_4	CALL_4
0x40050fc	            0x31f6	                            xor esi, esi	      3190	ftp.c	FUNCTION_48	IF_3	IF_4	CALL_5
0x40050fe	          0x4c89ef	                            mov rdi, r13	      3190	ftp.c	FUNCTION_48	IF_3	IF_4	CALL_5
0x4005101	      0xe800000000	                          call 0x4005106	      3190	ftp.c	FUNCTION_48	IF_3	IF_4	CALL_5
0x4005106	    0x48c785280700	mov qword [rbp + 0x728], 0xffffffffffffffff 	      3192	ftp.c	FUNCTION_48	IF_3
0x4005111	            0x85db	                           test ebx, ebx	      3195	ftp.c	FUNCTION_48	IF_5
0x4005113	     0xf847cfdffff	                            je 0x4004e95	      3195	ftp.c	FUNCTION_48	IF_5
0x4005119	      0xbe01000000	                              mov esi, 1	      3202	ftp.c	FUNCTION_48	IF_6	CALL_7
0x400511e	          0x4889ef	                            mov rdi, rbp	      3202	ftp.c	FUNCTION_48	IF_6	CALL_7
0x4005121	    0xc685e1060000	               mov byte [rbp + 0x6e1], 0	      3201	ftp.c	FUNCTION_48	IF_6
0x4005128	      0xe800000000	                          call 0x400512d	      3202	ftp.c	FUNCTION_48	IF_6	CALL_7
0x400512d	    0x48c785f00600	              mov qword [rbp + 0x6f0], 0	      3203	ftp.c	FUNCTION_48	IF_6
0x4005138	          0x4c89e7	                            mov rdi, r12	      3230	ftp.c	FUNCTION_48	CALL_14
0x400513b	      0xe800afffff	                       call sym.freedirs	      3230	ftp.c	FUNCTION_48	CALL_14
0x4005140	    0x83bd5c020000	cmp dword [rbp + 0x25c], 0xffffffffffffffff	      3238	ftp.c	FUNCTION_48	IF_11
0x4005147	     0xf847efeffff	                            je 0x4004fcb	      3238	ftp.c	FUNCTION_48	IF_11
0x400514d	    0x80bda8020000	               cmp byte [rbp + 0x2a8], 0	      3250	ftp.c	FUNCTION_48	IF_11	IF_14
0x4005154	     0xf8546feffff	                           jne 0x4004fa0	      3250	ftp.c	FUNCTION_48	IF_11	IF_14
0x400515a	    0x8bb55c020000	           mov esi, dword [rbp + 0x25c] 	       221	ftp.c	FUNCTION_1	IF_1
0x4005160	          0x4889ef	                            mov rdi, rbp	       222	ftp.c	FUNCTION_1	IF_1	CALL_1
0x4005163	      0xe800000000	                          call 0x4005168	       222	ftp.c	FUNCTION_1	IF_1	CALL_1
0x4005168	            0x85db	                           test ebx, ebx	      3261	ftp.c	FUNCTION_48	IF_15
0x400516a	    0xc7855c020000	    mov dword [rbp + 0x25c], 0xffffffff 	       223	ftp.c	FUNCTION_1	IF_1
0x4005174	    0xc685a6030000	               mov byte [rbp + 0x3a6], 0	       225	ftp.c	FUNCTION_1
0x400517b	     0xf854afeffff	                           jne 0x4004fcb	      3261	ftp.c	FUNCTION_48	IF_15
0x4005181	     0xf1f80000000	                         nop dword [rax]	      3261	ftp.c	FUNCTION_48	IF_15
0x4005188	        0x418b5718	            mov edx, dword [r15 + 0x18] 	      3261	ftp.c	FUNCTION_48	IF_15
0x400518c	            0x85d2	                           test edx, edx	      3261	ftp.c	FUNCTION_48	IF_15
0x400518e	            0x750d	                           jne 0x400519d	      3261	ftp.c	FUNCTION_48	IF_15
0x4005190	    0x80bde1060000	               cmp byte [rbp + 0x6e1], 0	      3261	ftp.c	FUNCTION_48	IF_15
0x4005197	     0xf8563010000	                           jne 0x4005300	      3261	ftp.c	FUNCTION_48	IF_15
0x400519d	        0x803c2400	                       cmp byte [rsp], 0	      3304	ftp.c	FUNCTION_48	IF_21
0x40051a1	            0x753d	                           jne 0x40051e0	      3304	ftp.c	FUNCTION_48	IF_21
0x40051a3	    0x4180bde20700	               cmp byte [r13 + 0x7e2], 0	      3308	ftp.c	FUNCTION_48	ELSE_4	IF_22
0x40051ab	     0xf848f000000	                            je 0x4005240	      3308	ftp.c	FUNCTION_48	ELSE_4	IF_22
0x40051b1	    0x498b8d505100	          mov rcx, qword [r13 + 0x5150] 	      3309	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x40051b8	        0x4883f9ff	             cmp rcx, 0xffffffffffffffff	      3309	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x40051bc	            0x7422	                            je 0x40051e0	      3309	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x40051be	          0x498b07	                    mov rax, qword [r15]	      3310	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x40051c1	          0x488b10	                    mov rdx, qword [rax]	      3310	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x40051c4	          0x4839d1	                            cmp rcx, rdx	      3309	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x40051c7	            0x7417	                            je 0x40051e0	      3309	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x40051c9	    0x4180bd720500	               cmp byte [r13 + 0x572], 0	      3310	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x40051d1	            0x750d	                           jne 0x40051e0	      3310	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x40051d3	        0x418b4718	            mov eax, dword [r15 + 0x18] 	      3311	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x40051d7	            0x85c0	                           test eax, eax	      3311	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x40051d9	     0xf844f020000	                            je 0x400542e	      3311	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x40051df	              0x90	                                     nop	      3311	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x40051e0	            0x31db	                            xor ebx, ebx	      3206	ftp.c	FUNCTION_48	ELSE_1	CALL_8
0x40051e2	      0xe9e4fdffff	                           jmp 0x4004fcb	      3206	ftp.c	FUNCTION_48	ELSE_1	CALL_8
0x40051e7	    0x4983bdd00000	               cmp qword [r13 + 0xd0], 0	      3287	ftp.c	FUNCTION_48	IF_15	IF_18
0x40051ef	            0x7eb2	                           jle 0x40051a3	      3287	ftp.c	FUNCTION_48	IF_15	IF_18
0x40051f1	    0x488d35000000	                   lea rsi, [0x040051f8]	      3290	ftp.c	FUNCTION_48	IF_15	IF_18	CALL_26
0x40051f8	          0x4c89ef	                            mov rdi, r13	      3290	ftp.c	FUNCTION_48	IF_15	IF_18	CALL_26
0x40051fb	            0x31c0	                            xor eax, eax	      3290	ftp.c	FUNCTION_48	IF_15	IF_18	CALL_26
0x40051fd	      0xe800000000	                          call 0x4005202	      3290	ftp.c	FUNCTION_48	IF_15	IF_18	CALL_26
0x4005202	      0xbe01000000	                              mov esi, 1	      3291	ftp.c	FUNCTION_48	IF_15	IF_18	CALL_27
0x4005207	          0x4889ef	                            mov rdi, rbp	      3291	ftp.c	FUNCTION_48	IF_15	IF_18	CALL_27
0x400520a	      0xe800000000	                          call 0x400520f	      3291	ftp.c	FUNCTION_48	IF_15	IF_18	CALL_27
0x400520f	              0x90	                                     nop	      3291	ftp.c	FUNCTION_48	IF_15	IF_18	CALL_27
0x4005210	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      3352	ftp.c	FUNCTION_48
0x4005215	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3352	ftp.c	FUNCTION_48
0x400521e	            0x89d8	                            mov eax, ebx	      3352	ftp.c	FUNCTION_48
0x4005220	     0xf85a3020000	                           jne 0x40054c9	      3352	ftp.c	FUNCTION_48
0x4005226	        0x4883c458	                           add rsp, 0x58	      3352	ftp.c	FUNCTION_48
0x400522a	              0x5b	                                 pop rbx	      3352	ftp.c	FUNCTION_48
0x400522b	              0x5d	                                 pop rbp	      3352	ftp.c	FUNCTION_48
0x400522c	            0x415c	                                 pop r12	      3352	ftp.c	FUNCTION_48
0x400522e	            0x415d	                                 pop r13	      3352	ftp.c	FUNCTION_48
0x4005230	            0x415e	                                 pop r14	      3352	ftp.c	FUNCTION_48
0x4005232	            0x415f	                                 pop r15	      3352	ftp.c	FUNCTION_48
0x4005234	              0xc3	                                     ret	      3352	ftp.c	FUNCTION_48
0x4005235	           0xf1f00	                         nop dword [rax]	      3352	ftp.c	FUNCTION_48
0x4005238	            0x31db	                            xor ebx, ebx	      3407	ftp.c	FUNCTION_49
0x400523a	            0xebd4	                           jmp 0x4005210	      3407	ftp.c	FUNCTION_49
0x400523c	         0xf1f4000	                         nop dword [rax]	      3407	ftp.c	FUNCTION_49
0x4005240	    0x498b85c00000	            mov rax, qword [r13 + 0xc0] 	      3320	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x4005247	            0x31db	                            xor ebx, ebx	      3320	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x4005249	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	      3320	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x400524d	     0xf8478fdffff	                            je 0x4004fcb	      3320	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x4005253	          0x498b17	                    mov rdx, qword [r15]	      3321	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x4005256	          0x488b12	                    mov rdx, qword [rdx]	      3321	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x4005259	          0x4839d0	                            cmp rax, rdx	      3320	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x400525c	     0xf8456010000	                            je 0x40053b8	      3320	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x4005262	          0x4889c1	                            mov rcx, rax	      3321	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x4005265	    0x49038d085100	           add rcx, qword [r13 + 0x5108]	      3321	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x400526c	          0x4839ca	                            cmp rdx, rcx	      3321	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x400526f	     0xf8443010000	                            je 0x40053b8	      3321	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x4005275	    0x493b95d00000	            cmp rdx, qword [r13 + 0xd0] 	      3328	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x400527c	     0xf8436010000	                            je 0x40053b8	      3328	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x4005282	    0x488d35000000	                   lea rsi, [0x04005289]	      3331	ftp.c	FUNCTION_48	ELSE_5	IF_24	CALL_30
0x4005289	          0x4c89ef	                            mov rdi, r13	      3331	ftp.c	FUNCTION_48	ELSE_5	IF_24	CALL_30
0x400528c	            0x31c0	                            xor eax, eax	      3331	ftp.c	FUNCTION_48	ELSE_5	IF_24	CALL_30
0x400528e	      0xbb12000000	                           mov ebx, 0x12	      3333	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x4005293	      0xe800000000	                          call 0x4005298	      3331	ftp.c	FUNCTION_48	ELSE_5	IF_24	CALL_30
0x4005298	      0xe92efdffff	                           jmp 0x4004fcb	      3333	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x400529d	           0xf1f00	                         nop dword [rax]	      3333	ftp.c	FUNCTION_48	ELSE_5	IF_24
0x40052a0	    0x488b05000000	            mov rax, qword [0x040052a7] 	      3218	ftp.c	FUNCTION_48	ELSE_1	IF_7	ELSE_2	CALL_10
0x40052a7	    0x488d3d000000	                   lea rdi, [0x040052ae]	      3218	ftp.c	FUNCTION_48	ELSE_1	IF_7	ELSE_2	CALL_10
0x40052ae	            0xff10	                        call qword [rax]	      3218	ftp.c	FUNCTION_48	ELSE_1	IF_7	ELSE_2	CALL_10
0x40052b0	    0x488985f00600	           mov qword [rbp + 0x6f0], rax 	      3218	ftp.c	FUNCTION_48	ELSE_1	IF_7	ELSE_2	CALL_10
0x40052b7	      0x488b442408	                mov rax, qword [rsp + 8]	      3219	ftp.c	FUNCTION_48	ELSE_1	IF_7	ELSE_2	CALL_11
0x40052bc	      0x488b7c2438	            mov rdi, qword [rsp + 0x38] 	      3219	ftp.c	FUNCTION_48	ELSE_1	IF_7	ELSE_2	CALL_11
0x40052c1	            0xff10	                        call qword [rax]	      3219	ftp.c	FUNCTION_48	ELSE_1	IF_7	ELSE_2	CALL_11
0x40052c3	    0x488b95f00600	           mov rdx, qword [rbp + 0x6f0] 	      3219	ftp.c	FUNCTION_48	ELSE_1	IF_7	ELSE_2	CALL_11
0x40052ca	          0x4885d2	                           test rdx, rdx	      3221	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_10
0x40052cd	     0xf855bfcffff	                           jne 0x4004f2e	      3221	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_10
0x40052d3	      0xe967fcffff	                           jmp 0x4004f3f	      3221	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_10
0x40052d8	     0xf1f84000000	                   nop dword [rax + rax]	      3221	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_10
0x40052e0	            0x31db	                            xor ebx, ebx	      3143	ftp.c	FUNCTION_48
0x40052e2	      0xe9e6fdffff	                           jmp 0x40050cd	      3143	ftp.c	FUNCTION_48
0x40052e7	    0x660f1f840000	                    nop word [rax + rax]	      3143	ftp.c	FUNCTION_48
0x40052f0	        0xc6040200	                 mov byte [rdx + rax], 0	      3214	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_8	IF_9
0x40052f4	    0x488b95f00600	           mov rdx, qword [rbp + 0x6f0] 	      3214	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_8	IF_9
0x40052fb	            0xebcd	                           jmp 0x40052ca	      3214	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_8	IF_9
0x40052fd	           0xf1f00	                         nop dword [rax]	      3214	ftp.c	FUNCTION_48	ELSE_1	IF_7	IF_8	IF_9
0x4005300	    0x80bd70060000	               cmp byte [rbp + 0x670], 0	      3261	ftp.c	FUNCTION_48	IF_15
0x4005307	     0xf8490feffff	                            je 0x400519d	      3261	ftp.c	FUNCTION_48	IF_15
0x400530d	            0x31db	                            xor ebx, ebx	      3261	ftp.c	FUNCTION_48	IF_15
0x400530f	        0x803c2400	                       cmp byte [rsp], 0	      3262	ftp.c	FUNCTION_48	IF_15
0x4005313	     0xf85b2fcffff	                           jne 0x4004fcb	      3262	ftp.c	FUNCTION_48	IF_15
0x4005319	    0x488b9da00600	           mov rbx, qword [rbp + 0x6a0] 	      3269	ftp.c	FUNCTION_48	IF_15
0x4005320	    0x48c785a00600	         mov qword [rbp + 0x6a0], 0xea60	      3271	ftp.c	FUNCTION_48	IF_15
0x400532b	      0xe800000000	                          call 0x4005330	      3272	ftp.c	FUNCTION_48	IF_15	CALL_22
0x4005330	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	      3274	ftp.c	FUNCTION_48	IF_15	CALL_23
0x4005335	      0x4989542448	             mov qword [r12 + 0x48], rdx	      3272	ftp.c	FUNCTION_48	IF_15	CALL_22
0x400533a	      0x488d542428	                   lea rdx, [rsp + 0x28]	      3274	ftp.c	FUNCTION_48	IF_15	CALL_23
0x400533f	      0x4989442440	             mov qword [r12 + 0x40], rax	      3272	ftp.c	FUNCTION_48	IF_15	CALL_22
0x4005344	          0x4889ee	                            mov rsi, rbp	      3274	ftp.c	FUNCTION_48	IF_15	CALL_23
0x4005347	      0xe800000000	                          call 0x400534c	      3274	ftp.c	FUNCTION_48	IF_15	CALL_23
0x400534c	    0x48837c243000	               cmp qword [rsp + 0x30], 0	      3278	ftp.c	FUNCTION_48	IF_15	IF_16
0x4005352	    0x48899da00600	           mov qword [rbp + 0x6a0], rbx 	      3276	ftp.c	FUNCTION_48	IF_15
0x4005359	            0x7509	                           jne 0x4005364	      3278	ftp.c	FUNCTION_48	IF_15	IF_16
0x400535b	          0x83f81c	                           cmp eax, 0x1c	      3278	ftp.c	FUNCTION_48	IF_15	IF_16
0x400535e	     0xf8436010000	                            je 0x400549a	      3278	ftp.c	FUNCTION_48	IF_15	IF_16
0x4005364	            0x85c0	                           test eax, eax	      3284	ftp.c	FUNCTION_48	IF_15	IF_17
0x4005366	            0x89c3	                            mov ebx, eax	      3284	ftp.c	FUNCTION_48	IF_15	IF_17
0x4005368	     0xf85a2feffff	                           jne 0x4005210	      3284	ftp.c	FUNCTION_48	IF_15	IF_17
0x400536e	    0x80bde0060000	               cmp byte [rbp + 0x6e0], 0	      3287	ftp.c	FUNCTION_48	IF_15	IF_18
0x4005375	     0xf856cfeffff	                           jne 0x40051e7	      3287	ftp.c	FUNCTION_48	IF_15	IF_18
0x400537b	        0x8b542428	            mov edx, dword [rsp + 0x28] 	      3297	ftp.c	FUNCTION_48	IF_15	IF_19	IF_20
0x400537f	    0x81fae2000000	                           cmp edx, 0xe2	      3297	ftp.c	FUNCTION_48	IF_15	IF_19	IF_20
0x4005385	     0xf8418feffff	                            je 0x40051a3	      3297	ftp.c	FUNCTION_48	IF_15	IF_19	IF_20
0x400538b	    0x81fafa000000	                           cmp edx, 0xfa	      3297	ftp.c	FUNCTION_48	IF_15	IF_19	IF_20
0x4005391	     0xf840cfeffff	                            je 0x40051a3	      3297	ftp.c	FUNCTION_48	IF_15	IF_19	IF_20
0x4005397	    0x488d35000000	                   lea rsi, [0x0400539e]	      3298	ftp.c	FUNCTION_48	IF_15	IF_19	IF_20	CALL_28
0x400539e	          0x4c89ef	                            mov rdi, r13	      3298	ftp.c	FUNCTION_48	IF_15	IF_19	IF_20	CALL_28
0x40053a1	            0x31c0	                            xor eax, eax	      3298	ftp.c	FUNCTION_48	IF_15	IF_19	IF_20	CALL_28
0x40053a3	      0xbb12000000	                           mov ebx, 0x12	      3299	ftp.c	FUNCTION_48	IF_15	IF_19	IF_20
0x40053a8	      0xe800000000	                          call 0x40053ad	      3298	ftp.c	FUNCTION_48	IF_15	IF_19	IF_20	CALL_28
0x40053ad	      0xe919fcffff	                           jmp 0x4004fcb	      3298	ftp.c	FUNCTION_48	IF_15	IF_19	IF_20	CALL_28
0x40053b2	    0x660f1f440000	                    nop word [rax + rax]	      3298	ftp.c	FUNCTION_48	IF_15	IF_19	IF_20	CALL_28
0x40053b8	    0x80bde0060000	               cmp byte [rbp + 0x6e0], 0	      3335	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25
0x40053bf	     0xf851bfeffff	                           jne 0x40051e0	      3335	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25
0x40053c5	          0x4885d2	                           test rdx, rdx	      3336	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25
0x40053c8	     0xf8512feffff	                           jne 0x40051e0	      3336	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25
0x40053ce	          0x4885c0	                           test rax, rax	      3336	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25
0x40053d1	     0xf8e09feffff	                           jle 0x40051e0	      3336	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25
0x40053d7	    0x488d35000000	                   lea rsi, [0x040053de]	      3338	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25	CALL_31
0x40053de	          0x4c89ef	                            mov rdi, r13	      3338	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25	CALL_31
0x40053e1	            0x31c0	                            xor eax, eax	      3338	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25	CALL_31
0x40053e3	      0xbb13000000	                           mov ebx, 0x13	      3339	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25
0x40053e8	      0xe800000000	                          call 0x40053ed	      3338	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25	CALL_31
0x40053ed	      0xe9d9fbffff	                           jmp 0x4004fcb	      3338	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25	CALL_31
0x40053f2	    0x660f1f440000	                    nop word [rax + rax]	      3338	ftp.c	FUNCTION_48	ELSE_5	ELSE_6	IF_25	CALL_31
0x40053f8	      0x488b442408	                mov rax, qword [rsp + 8]	      3226	ftp.c	FUNCTION_48	ELSE_1	ELSE_3	CALL_13
0x40053fd	    0x48c785f00600	              mov qword [rbp + 0x6f0], 0	      3225	ftp.c	FUNCTION_48	ELSE_1	ELSE_3
0x4005408	          0x4889d7	                            mov rdi, rdx	      3226	ftp.c	FUNCTION_48	ELSE_1	ELSE_3	CALL_13
0x400540b	            0xff10	                        call qword [rax]	      3226	ftp.c	FUNCTION_48	ELSE_1	ELSE_3	CALL_13
0x400540d	      0xe92dfbffff	                           jmp 0x4004f3f	      3226	ftp.c	FUNCTION_48	ELSE_1	ELSE_3	CALL_13
0x4005412	    0x660f1f440000	                    nop word [rax + rax]	      3226	ftp.c	FUNCTION_48	ELSE_1	ELSE_3	CALL_13
0x4005418	            0x89c3	                            mov ebx, eax	      3394	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_2
0x400541a	      0xe9f1fdffff	                           jmp 0x4005210	      3394	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_2
0x400541f	              0x90	                                     nop	      3394	ftp.c	FUNCTION_49	WHILE_1	IF_1	CALL_2
0x4005420	    0x48c744241800	               mov qword [rsp + 0x18], 0	      3206	ftp.c	FUNCTION_48	ELSE_1	CALL_8
0x4005429	      0xe9a8faffff	                           jmp 0x4004ed6	      3206	ftp.c	FUNCTION_48	ELSE_1	CALL_8
0x400542e	    0x488d35000000	                   lea rsi, [0x04005435]	      3313	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23	CALL_29
0x4005435	          0x4c89ef	                            mov rdi, r13	      3313	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23	CALL_29
0x4005438	            0x31c0	                            xor eax, eax	      3313	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23	CALL_29
0x400543a	      0xbb12000000	                           mov ebx, 0x12	      3316	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23
0x400543f	      0xe800000000	                          call 0x4005444	      3313	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23	CALL_29
0x4005444	      0xe982fbffff	                           jmp 0x4004fcb	      3313	ftp.c	FUNCTION_48	ELSE_4	IF_22	IF_23	CALL_29
0x4005449	        0x488b7d00	                    mov rdi, qword [rbp]	      3399	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_4	CALL_3
0x400544d	    0x488d35000000	                   lea rsi, [0x04005454]	      3399	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_4	CALL_3
0x4005454	          0x4889da	                            mov rdx, rbx	      3399	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_4	CALL_3
0x4005457	      0xbb15000000	                           mov ebx, 0x15	      3400	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_4
0x400545c	      0xe800000000	                          call 0x4005461	      3399	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_4	CALL_3
0x4005461	      0xe9aafdffff	                           jmp 0x4005210	      3399	ftp.c	FUNCTION_49	WHILE_1	IF_1	IF_4	CALL_3
0x4005466	            0x89c7	                            mov edi, eax	      3243	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13	CALL_17
0x4005468	      0xe800000000	                          call 0x400546d	      3243	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13	CALL_17
0x400546d	    0x488d35000000	                   lea rsi, [0x04005474]	      3243	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13	CALL_17
0x4005474	          0x4889c2	                            mov rdx, rax	      3243	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13	CALL_17
0x4005477	          0x4c89ef	                            mov rdi, r13	      3243	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13	CALL_17
0x400547a	            0x31c0	                            xor eax, eax	      3243	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13	CALL_17
0x400547c	      0xe800000000	                          call 0x4005481	      3243	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13	CALL_17
0x4005481	    0xc685e1060000	               mov byte [rbp + 0x6e1], 0	      3245	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13
0x4005488	      0xbe01000000	                              mov esi, 1	      3246	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13	CALL_19
0x400548d	          0x4889ef	                            mov rdi, rbp	      3246	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13	CALL_19
0x4005490	      0xe800000000	                          call 0x4005495	      3246	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13	CALL_19
0x4005495	      0xe9f7faffff	                           jmp 0x4004f91	      3246	ftp.c	FUNCTION_48	IF_11	IF_12	IF_13	CALL_19
0x400549a	    0x488d35000000	                   lea rsi, [0x040054a1]	      3279	ftp.c	FUNCTION_48	IF_15	IF_16	CALL_24
0x40054a1	          0x4c89ef	                            mov rdi, r13	      3279	ftp.c	FUNCTION_48	IF_15	IF_16	CALL_24
0x40054a4	            0x31c0	                            xor eax, eax	      3279	ftp.c	FUNCTION_48	IF_15	IF_16	CALL_24
0x40054a6	      0xbb1c000000	                           mov ebx, 0x1c	      3281	ftp.c	FUNCTION_48	IF_15	IF_16	CALL_25
0x40054ab	      0xe800000000	                          call 0x40054b0	      3279	ftp.c	FUNCTION_48	IF_15	IF_16	CALL_24
0x40054b0	    0xc685e1060000	               mov byte [rbp + 0x6e1], 0	      3280	ftp.c	FUNCTION_48	IF_15	IF_16
0x40054b7	      0xbe01000000	                              mov esi, 1	      3281	ftp.c	FUNCTION_48	IF_15	IF_16	CALL_25
0x40054bc	          0x4889ef	                            mov rdi, rbp	      3281	ftp.c	FUNCTION_48	IF_15	IF_16	CALL_25
0x40054bf	      0xe800000000	                          call 0x40054c4	      3281	ftp.c	FUNCTION_48	IF_15	IF_16	CALL_25
0x40054c4	      0xe947fdffff	                           jmp 0x4005210	      3281	ftp.c	FUNCTION_48	IF_15	IF_16	CALL_25
0x40054c9	      0xe800000000	                          call 0x40054ce	      3352	ftp.c	FUNCTION_48
isBadFtpString	WHILE,0:SWITCH,0:IF,0:ELSE,0:FOR,0:CALL,2:functions,0:DO,0	19
0x4000870	              0x53	                                push rbx	       265	ftp.c	FUNCTION_3
0x4000871	      0xbe0d000000	                            mov esi, 0xd	       266	ftp.c	FUNCTION_3	CALL_1
0x4000876	          0x4889fb	                            mov rbx, rdi	       265	ftp.c	FUNCTION_3
0x4000879	      0xe800000000	                          call 0x400087e	       266	ftp.c	FUNCTION_3	CALL_1
0x400087e	          0x4885c0	                           test rax, rax	       267	ftp.c	FUNCTION_3	CALL_2
0x4000881	      0xba01000000	                              mov edx, 1	       267	ftp.c	FUNCTION_3	CALL_2
0x4000886	            0x7408	                            je 0x4000890	       267	ftp.c	FUNCTION_3	CALL_2
0x4000888	            0x89d0	                            mov eax, edx	       268	ftp.c	FUNCTION_3
0x400088a	              0x5b	                                 pop rbx	       268	ftp.c	FUNCTION_3
0x400088b	              0xc3	                                     ret	       268	ftp.c	FUNCTION_3
0x400088c	         0xf1f4000	                         nop dword [rax]	       268	ftp.c	FUNCTION_3
0x4000890	          0x4889df	                            mov rdi, rbx	       267	ftp.c	FUNCTION_3	CALL_2
0x4000893	      0xbe0a000000	                            mov esi, 0xa	       267	ftp.c	FUNCTION_3	CALL_2
0x4000898	      0xe800000000	                          call 0x400089d	       267	ftp.c	FUNCTION_3	CALL_2
0x400089d	          0x4885c0	                           test rax, rax	       267	ftp.c	FUNCTION_3	CALL_2
0x40008a0	           0xf95c2	                                setne dl	       267	ftp.c	FUNCTION_3	CALL_2
0x40008a3	            0x89d0	                            mov eax, edx	       268	ftp.c	FUNCTION_3
0x40008a5	              0x5b	                                 pop rbx	       268	ftp.c	FUNCTION_3
0x40008a6	              0xc3	                                     ret	       268	ftp.c	FUNCTION_3
ftp_state_pasv_resp	WHILE,1:SWITCH,0:IF,23:ELSE,6:FOR,1:CALL,27:functions,0:DO,0	332
0x4001dd0	            0x4157	                                push r15	      1824	ftp.c	FUNCTION_32
0x4001dd2	            0x4156	                                push r14	      1824	ftp.c	FUNCTION_32
0x4001dd4	          0x4989ff	                            mov r15, rdi	      1824	ftp.c	FUNCTION_32
0x4001dd7	            0x4155	                                push r13	      1824	ftp.c	FUNCTION_32
0x4001dd9	            0x4154	                                push r12	      1824	ftp.c	FUNCTION_32
0x4001ddb	          0x4189f4	                           mov r12d, esi	      1824	ftp.c	FUNCTION_32
0x4001dde	              0x55	                                push rbp	      1824	ftp.c	FUNCTION_32
0x4001ddf	              0x53	                                push rbx	      1824	ftp.c	FUNCTION_32
0x4001de0	    0x4881ec680100	                          sub rsp, 0x168	      1824	ftp.c	FUNCTION_32
0x4001de7	          0x488b2f	                    mov rbp, qword [rdi]	      1827	ftp.c	FUNCTION_32
0x4001dea	    0x488bbf300700	           mov rdi, qword [rdi + 0x730] 	      1834	ftp.c	FUNCTION_32	CALL_1
0x4001df1	    0x64488b042528	                mov rax, qword fs:[0x28]	      1824	ftp.c	FUNCTION_32
0x4001dfa	    0x488984245801	            mov qword [rsp + 0x158], rax	      1824	ftp.c	FUNCTION_32
0x4001e02	            0x31c0	                            xor eax, eax	      1824	ftp.c	FUNCTION_32
0x4001e04	    0x488b05000000	            mov rax, qword [0x04001e0b] 	      1834	ftp.c	FUNCTION_32	CALL_1
0x4001e0b	    0x48c744242800	               mov qword [rsp + 0x28], 0	      1828	ftp.c	FUNCTION_32
0x4001e14	    0x4c8bad200d00	           mov r13, qword [rbp + 0xd20] 	      1831	ftp.c	FUNCTION_32
0x4001e1b	            0xff10	                        call qword [rax]	      1834	ftp.c	FUNCTION_32	CALL_1
0x4001e1d	    0x418b87000700	           mov eax, dword [r15 + 0x700] 	      1836	ftp.c	FUNCTION_32	IF_1
0x4001e24	        0x498d5d04	                      lea rbx, [r13 + 4]	      1831	ftp.c	FUNCTION_32
0x4001e28	    0x49c787300700	              mov qword [r15 + 0x730], 0	      1834	ftp.c	FUNCTION_32	CALL_1
0x4001e33	            0x85c0	                           test eax, eax	      1836	ftp.c	FUNCTION_32	IF_1
0x4001e35	            0x7519	                           jne 0x4001e50	      1836	ftp.c	FUNCTION_32	IF_1
0x4001e37	    0x4181fce50000	                          cmp r12d, 0xe5	      1836	ftp.c	FUNCTION_32	IF_1
0x4001e3e	     0xf84ec020000	                            je 0x4002130	      1836	ftp.c	FUNCTION_32	IF_1
0x4001e44	          0x4c89ff	                            mov rdi, r15	      1978	ftp.c	FUNCTION_32	IF_20	CALL_24
0x4001e47	      0xe8e4feffff	               call sym.ftp_epsv_disable	      1978	ftp.c	FUNCTION_32	IF_20	CALL_24
0x4001e4c	            0xeb20	                           jmp 0x4001e6e	      1978	ftp.c	FUNCTION_32	IF_20	CALL_24
0x4001e4e	            0x6690	                                     nop	      1978	ftp.c	FUNCTION_32	IF_20	CALL_24
0x4001e50	          0x83f801	                              cmp eax, 1	      1880	ftp.c	FUNCTION_32	ELSE_2	IF_9
0x4001e53	            0x744b	                            je 0x4001ea0	      1880	ftp.c	FUNCTION_32	ELSE_2	IF_9
0x4001e55	    0x488d35000000	                   lea rsi, [0x04001e5c]	      1931	ftp.c	FUNCTION_32	ELSE_5	CALL_15
0x4001e5c	            0x31c0	                            xor eax, eax	      1931	ftp.c	FUNCTION_32	ELSE_5	CALL_15
0x4001e5e	          0x4489e2	                           mov edx, r12d	      1931	ftp.c	FUNCTION_32	ELSE_5	CALL_15
0x4001e61	          0x4889ef	                            mov rdi, rbp	      1931	ftp.c	FUNCTION_32	ELSE_5	CALL_15
0x4001e64	      0xe800000000	                          call 0x4001e69	      1931	ftp.c	FUNCTION_32	ELSE_5	CALL_15
0x4001e69	      0xb80d000000	                            mov eax, 0xd	      1932	ftp.c	FUNCTION_32	ELSE_5
0x4001e6e	    0x488b8c245801	           mov rcx, qword [rsp + 0x158] 	      2006	ftp.c	FUNCTION_32
0x4001e76	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      2006	ftp.c	FUNCTION_32
0x4001e7f	     0xf8535050000	                           jne 0x40023ba	      2006	ftp.c	FUNCTION_32
0x4001e85	    0x4881c4680100	                          add rsp, 0x168	      2006	ftp.c	FUNCTION_32
0x4001e8c	              0x5b	                                 pop rbx	      2006	ftp.c	FUNCTION_32
0x4001e8d	              0x5d	                                 pop rbp	      2006	ftp.c	FUNCTION_32
0x4001e8e	            0x415c	                                 pop r12	      2006	ftp.c	FUNCTION_32
0x4001e90	            0x415d	                                 pop r13	      2006	ftp.c	FUNCTION_32
0x4001e92	            0x415e	                                 pop r14	      2006	ftp.c	FUNCTION_32
0x4001e94	            0x415f	                                 pop r15	      2006	ftp.c	FUNCTION_32
0x4001e96	              0xc3	                                     ret	      2006	ftp.c	FUNCTION_32
0x4001e97	    0x660f1f840000	                    nop word [rax + rax]	      2006	ftp.c	FUNCTION_32
0x4001ea0	    0x4181fce30000	                          cmp r12d, 0xe3	      1880	ftp.c	FUNCTION_32	ELSE_2	IF_9
0x4001ea7	            0x75ac	                           jne 0x4001e55	      1880	ftp.c	FUNCTION_32	ELSE_2	IF_9
0x4001ea9	      0x41807d0400	                   cmp byte [r13 + 4], 0	      1895	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1
0x4001eae	     0xf84f1020000	                            je 0x40021a5	      1895	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1
0x4001eb4	      0x4c8d6c2440	                   lea r13, [rsp + 0x40]	      1895	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1
0x4001eb9	      0x4c8d742430	                   lea r14, [rsp + 0x30]	      1895	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1
0x4001ebe	      0x48896c2408	                mov qword [rsp + 8], rbp	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x4001ec3	      0x4c897c2410	             mov qword [rsp + 0x10], r15	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x4001ec8	          0x4889dd	                            mov rbp, rbx	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x4001ecb	      0x448964241c	            mov dword [rsp + 0x1c], r12d	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x4001ed0	        0x498d450c	                    lea rax, [r13 + 0xc]	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x4001ed4	        0x498d4d04	                      lea rcx, [r13 + 4]	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x4001ed8	        0x498d5604	                      lea rdx, [r14 + 4]	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x4001edc	        0x48890424	                    mov qword [rsp], rax	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x4001ee0	        0x498d4508	                      lea rax, [r13 + 8]	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x4001ee4	          0x4989cf	                            mov r15, rcx	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x4001ee7	          0x4889d3	                            mov rbx, rdx	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x4001eea	          0x4989c4	                            mov r12, rax	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x4001eed	            0xeb0f	                           jmp 0x4001efe	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x4001eef	              0x90	                                     nop	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x4001ef0	        0x4883c501	                              add rbp, 1	      1900	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1
0x4001ef4	        0x807d0000	                       cmp byte [rbp], 0	      1895	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1
0x4001ef8	     0xf84a2020000	                            je 0x40021a0	      1895	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1
0x4001efe	              0x53	                                push rbx	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x4001eff	            0x4156	                                push r14	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x4001f01	    0x488d35000000	                   lea rsi, [0x04001f08]	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x4001f08	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x4001f0d	            0x31c0	                            xor eax, eax	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x4001f0f	          0x4d89e0	                             mov r8, r12	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x4001f12	          0x4c89f9	                            mov rcx, r15	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x4001f15	          0x4c89ea	                            mov rdx, r13	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x4001f18	          0x4889ef	                            mov rdi, rbp	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x4001f1b	      0xe800000000	                          call 0x4001f20	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x4001f20	          0x83f806	                              cmp eax, 6	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x4001f23	            0x415a	                                 pop r10	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x4001f25	            0x415b	                                 pop r11	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x4001f27	            0x75c7	                           jne 0x4001ef0	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x4001f29	          0x4889eb	                            mov rbx, rbp	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x4001f2c	      0x4c8b7c2410	            mov r15, qword [rsp + 0x10] 	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x4001f31	      0x488b6c2408	                mov rbp, qword [rsp + 8]	      1896	ftp.c	FUNCTION_32	ELSE_2	IF_9	WHILE_1	IF_10	CALL_8
0x4001f36	          0x803b00	                       cmp byte [rbx], 0	      1903	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4001f39	      0x448b64241c	           mov r12d, dword [rsp + 0x1c] 	      1903	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4001f3e	     0xf8461020000	                            je 0x40021a5	      1903	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4001f44	        0x8b742440	            mov esi, dword [rsp + 0x40] 	      1903	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4001f48	    0x81feff000000	                           cmp esi, 0xff	      1903	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4001f4e	     0xf8751020000	                            ja 0x40021a5	      1903	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4001f54	        0x8b542444	            mov edx, dword [rsp + 0x44] 	      1903	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4001f58	    0x81faff000000	                           cmp edx, 0xff	      1903	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4001f5e	     0xf8741020000	                            ja 0x40021a5	      1903	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4001f64	        0x8b4c2448	            mov ecx, dword [rsp + 0x48] 	      1903	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4001f68	    0x81f9ff000000	                           cmp ecx, 0xff	      1903	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4001f6e	     0xf8731020000	                            ja 0x40021a5	      1903	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4001f74	      0x448b44244c	            mov r8d, dword [rsp + 0x4c] 	      1904	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4001f79	    0x4181f8ff0000	                           cmp r8d, 0xff	      1903	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4001f80	     0xf871f020000	                            ja 0x40021a5	      1903	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4001f86	    0x817c2430ff00	           cmp dword [rsp + 0x30], 0xff 	      1904	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4001f8e	     0xf8711020000	                            ja 0x40021a5	      1904	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4001f94	    0x817c2434ff00	           cmp dword [rsp + 0x34], 0xff 	      1904	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4001f9c	     0xf8703020000	                            ja 0x40021a5	      1904	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x4001fa2	    0x80bd00080000	               cmp byte [rbp + 0x800], 0	      1910	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12
0x4001fa9	     0xf8410040000	                            je 0x40023bf	      1910	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12
0x4001faf	          0x4589c1	                            mov r9d, r8d	      1913	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_10
0x4001fb2	          0x4189c8	                            mov r8d, ecx	      1913	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_10
0x4001fb5	              0x57	                                push rdi	      1913	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_10
0x4001fb6	            0x89d1	                            mov ecx, edx	      1913	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_10
0x4001fb8	    0x41ffb7d80000	                 push qword [r15 + 0xd8]	      1913	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_10
0x4001fbf	            0x89f2	                            mov edx, esi	      1913	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_10
0x4001fc1	    0x488d35000000	                   lea rsi, [0x04001fc8]	      1913	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_10
0x4001fc8	            0x31c0	                            xor eax, eax	      1913	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_10
0x4001fca	          0x4889ef	                            mov rdi, rbp	      1913	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_10
0x4001fcd	      0xe800000000	                          call 0x4001fd2	      1913	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_10
0x4001fd2	    0x4180bfa90300	               cmp byte [r15 + 0x3a9], 0	      1816	ftp.c	FUNCTION_31	IF_1
0x4001fda	    0x488b05000000	            mov rax, qword [0x04001fe1] 	      1916	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_12
0x4001fe1	            0x4158	                                  pop r8	      1816	ftp.c	FUNCTION_31	IF_1
0x4001fe3	            0x4159	                                  pop r9	      1816	ftp.c	FUNCTION_31	IF_1
0x4001fe5	          0x488b00	                    mov rax, qword [rax]	      1916	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_12
0x4001fe8	            0x7511	                           jne 0x4001ffb	      1816	ftp.c	FUNCTION_31	IF_1
0x4001fea	    0x4180bf9f0300	               cmp byte [r15 + 0x39f], 0	      1816	ftp.c	FUNCTION_31	IF_1
0x4001ff2	    0x498dbf900000	                   lea rdi, [r15 + 0x90]	      1819	ftp.c	FUNCTION_31
0x4001ff9	            0x7407	                            je 0x4002002	      1816	ftp.c	FUNCTION_31	IF_1
0x4001ffb	    0x498bbfd80000	            mov rdi, qword [r15 + 0xd8] 	      1817	ftp.c	FUNCTION_31	IF_1
0x4002002	            0xffd0	                                call rax	      1916	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_12
0x4002004	    0x498987300700	            mov qword [r15 + 0x730], rax	      1916	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_12	CALL_12
0x400200b	    0x4983bf300700	              cmp qword [r15 + 0x730], 0	      1921	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_13
0x4002013	     0xf84d8020000	                            je 0x40022f1	      1921	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_13
0x4002019	       0xfb7442430	           movzx eax, word [rsp + 0x30] 	      1924	ftp.c	FUNCTION_32	ELSE_2	IF_9
0x400201e	          0xc1e008	                              shl eax, 8	      1924	ftp.c	FUNCTION_32	ELSE_2	IF_9
0x4002021	         0x3442434	             add eax, dword [rsp + 0x34]	      1924	ftp.c	FUNCTION_32	ELSE_2	IF_9
0x4002025	    0x664189873807	              mov word [r15 + 0x738], ax	      1924	ftp.c	FUNCTION_32	ELSE_2	IF_9
0x400202d	           0xf1f00	                         nop dword [rax]	      1924	ftp.c	FUNCTION_32	ELSE_2	IF_9
0x4002030	    0x4180bf9d0300	               cmp byte [r15 + 0x39d], 0	      1935	ftp.c	FUNCTION_32	IF_15
0x4002038	     0xf8492010000	                            je 0x40021d0	      1935	ftp.c	FUNCTION_32	IF_15
0x400203e	    0x4180bf9f0300	               cmp byte [r15 + 0x39f], 0	      1941	ftp.c	FUNCTION_32	IF_15
0x4002046	     0xf8474010000	                            je 0x40021c0	      1941	ftp.c	FUNCTION_32	IF_15
0x400204c	    0x4d8baf200100	           mov r13, qword [r15 + 0x120] 	      1941	ftp.c	FUNCTION_32	IF_15
0x4002053	      0x488d5c2428	                   lea rbx, [rsp + 0x28]	      1943	ftp.c	FUNCTION_32	IF_15	CALL_16
0x4002058	    0x418b97900100	           mov edx, dword [r15 + 0x190] 	      1943	ftp.c	FUNCTION_32	IF_15	CALL_16
0x400205f	          0x4c89ee	                            mov rsi, r13	      1943	ftp.c	FUNCTION_32	IF_15	CALL_16
0x4002062	          0x4c89ff	                            mov rdi, r15	      1943	ftp.c	FUNCTION_32	IF_15	CALL_16
0x4002065	          0x4889d9	                            mov rcx, rbx	      1943	ftp.c	FUNCTION_32	IF_15	CALL_16
0x4002068	      0xe800000000	                          call 0x400206d	      1943	ftp.c	FUNCTION_32	IF_15	CALL_16
0x400206d	          0x83f801	                              cmp eax, 1	      1944	ftp.c	FUNCTION_32	IF_15	IF_16
0x4002070	     0xf84d2020000	                            je 0x4002348	      1944	ftp.c	FUNCTION_32	IF_15	IF_16
0x4002076	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      1952	ftp.c	FUNCTION_32	IF_15	IF_17
0x400207b	    0x498b87900100	           mov rax, qword [r15 + 0x190] 	      1949	ftp.c	FUNCTION_32	IF_15
0x4002082	          0x4885f6	                           test rsi, rsi	      1952	ftp.c	FUNCTION_32	IF_15	IF_17
0x4002085	            0x89c3	                            mov ebx, eax	      1949	ftp.c	FUNCTION_32	IF_15
0x4002087	     0xf84d3020000	                            je 0x4002360	      1952	ftp.c	FUNCTION_32	IF_15	IF_17
0x400208d	    0x41c687a60300	               mov byte [r15 + 0x3a6], 0	      1972	ftp.c	FUNCTION_32
0x4002095	          0x4c89ff	                            mov rdi, r15	      1973	ftp.c	FUNCTION_32	CALL_22
0x4002098	      0xe800000000	                          call 0x400209d	      1973	ftp.c	FUNCTION_32	CALL_22
0x400209d	            0x85c0	                           test eax, eax	      1975	ftp.c	FUNCTION_32	IF_20
0x400209f	     0xf8593010000	                           jne 0x4002238	      1975	ftp.c	FUNCTION_32	IF_20
0x40020a5	    0x80bde8070000	               cmp byte [rbp + 0x7e8], 0	      1990	ftp.c	FUNCTION_32	IF_22
0x40020ac	     0xf854e020000	                           jne 0x4002300	      1990	ftp.c	FUNCTION_32	IF_22
0x40020b2	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      1994	ftp.c	FUNCTION_32	CALL_25
0x40020b7	          0x4889ef	                            mov rdi, rbp	      1994	ftp.c	FUNCTION_32	CALL_25
0x40020ba	      0xe800000000	                          call 0x40020bf	      1994	ftp.c	FUNCTION_32	CALL_25
0x40020bf	    0x488b05000000	            mov rax, qword [0x040020c6] 	      1996	ftp.c	FUNCTION_32	CALL_26
0x40020c6	    0x498bbfe80000	            mov rdi, qword [r15 + 0xe8] 	      1996	ftp.c	FUNCTION_32	CALL_26
0x40020cd	            0xff10	                        call qword [rax]	      1996	ftp.c	FUNCTION_32	CALL_26
0x40020cf	    0x410fb7873807	          movzx eax, word [r15 + 0x738] 	      1997	ftp.c	FUNCTION_32
0x40020d7	    0x49c787e80000	               mov qword [r15 + 0xe8], 0	      1996	ftp.c	FUNCTION_32	CALL_26
0x40020e2	    0x498bbf300700	           mov rdi, qword [r15 + 0x730] 	      1998	ftp.c	FUNCTION_32	CALL_27
0x40020e9	    0x66418987a001	              mov word [r15 + 0x1a0], ax	      1997	ftp.c	FUNCTION_32
0x40020f1	    0x488b05000000	            mov rax, qword [0x040020f8] 	      1998	ftp.c	FUNCTION_32	CALL_27
0x40020f8	            0xff10	                        call qword [rax]	      1998	ftp.c	FUNCTION_32	CALL_27
0x40020fa	          0x4889c2	                            mov rdx, rax	      1998	ftp.c	FUNCTION_32	CALL_27
0x40020fd	    0x498987e80000	             mov qword [r15 + 0xe8], rax	      1998	ftp.c	FUNCTION_32	CALL_27
0x4002104	      0xb81b000000	                           mov eax, 0x1b	      2000	ftp.c	FUNCTION_32	IF_23
0x4002109	          0x4885d2	                           test rdx, rdx	      1999	ftp.c	FUNCTION_32	IF_23
0x400210c	     0xf845cfdffff	                            je 0x4001e6e	      1999	ftp.c	FUNCTION_32	IF_23
0x4002112	    0x41c687a40300	               mov byte [r15 + 0x3a4], 1	      2002	ftp.c	FUNCTION_32
0x400211a	    0x41c7870c0700	              mov dword [r15 + 0x70c], 0	       794	ftp.c	ELSE_3	FUNCTION_12
0x4002125	            0x31c0	                            xor eax, eax	      2005	ftp.c	FUNCTION_32
0x4002127	      0xe942fdffff	                           jmp 0x4001e6e	      2005	ftp.c	FUNCTION_32
0x400212c	         0xf1f4000	                         nop dword [rax]	      2005	ftp.c	FUNCTION_32
0x4002130	      0xbe28000000	                           mov esi, 0x28	      1839	ftp.c	FUNCTION_32	IF_1	CALL_2
0x4002135	          0x4889df	                            mov rdi, rbx	      1839	ftp.c	FUNCTION_32	IF_1	CALL_2
0x4002138	      0xe800000000	                          call 0x400213d	      1839	ftp.c	FUNCTION_32	IF_1	CALL_2
0x400213d	          0x4885c0	                           test rax, rax	      1840	ftp.c	FUNCTION_32	IF_1	IF_2
0x4002140	            0x743d	                            je 0x400217f	      1840	ftp.c	FUNCTION_32	IF_1	IF_2
0x4002142	      0x488d542450	                   lea rdx, [rsp + 0x50]	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x4002147	        0x488d5801	                      lea rbx, [rax + 1]	      1843	ftp.c	FUNCTION_32	IF_1	IF_2
0x400214b	        0x4883ec08	                              sub rsp, 8	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x400214f	    0x488d35000000	                   lea rsi, [0x04002156]	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x4002156	        0x488d4203	                      lea rax, [rdx + 3]	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x400215a	        0x488d4a01	                      lea rcx, [rdx + 1]	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x400215e	        0x4c8d4202	                       lea r8, [rdx + 2]	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x4002162	          0x4889df	                            mov rdi, rbx	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x4002165	              0x50	                                push rax	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x4002166	            0x31c0	                            xor eax, eax	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x4002168	      0x4c8d4c2434	                    lea r9, [rsp + 0x34]	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x400216d	      0xe800000000	                          call 0x4002172	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x4002172	          0x83f805	                              cmp eax, 5	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x4002175	            0x415d	                                 pop r13	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x4002177	            0x415e	                                 pop r14	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x4002179	     0xf84f1000000	                            je 0x4002270	      1844	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	CALL_3
0x400217f	    0x488d35000000	                   lea rsi, [0x04002186]	      1876	ftp.c	FUNCTION_32	IF_1	ELSE_1	IF_8	CALL_7
0x4002186	            0x31c0	                            xor eax, eax	      1876	ftp.c	FUNCTION_32	IF_1	ELSE_1	IF_8	CALL_7
0x4002188	          0x4889ef	                            mov rdi, rbp	      1876	ftp.c	FUNCTION_32	IF_1	ELSE_1	IF_8	CALL_7
0x400218b	      0xe800000000	                          call 0x4002190	      1876	ftp.c	FUNCTION_32	IF_1	ELSE_1	IF_8	CALL_7
0x4002190	      0xb80d000000	                            mov eax, 0xd	      1877	ftp.c	FUNCTION_32	IF_1	ELSE_1	IF_8
0x4002195	      0xe9d4fcffff	                           jmp 0x4001e6e	      1877	ftp.c	FUNCTION_32	IF_1	ELSE_1	IF_8
0x400219a	    0x660f1f440000	                    nop word [rax + rax]	      1877	ftp.c	FUNCTION_32	IF_1	ELSE_1	IF_8
0x40021a0	      0x488b6c2408	                mov rbp, qword [rsp + 8]	      1877	ftp.c	FUNCTION_32	IF_1	ELSE_1	IF_8
0x40021a5	    0x488d35000000	                   lea rsi, [0x040021ac]	      1905	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11	CALL_9
0x40021ac	            0x31c0	                            xor eax, eax	      1905	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11	CALL_9
0x40021ae	          0x4889ef	                            mov rdi, rbp	      1905	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11	CALL_9
0x40021b1	      0xe800000000	                          call 0x40021b6	      1905	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11	CALL_9
0x40021b6	      0xb80e000000	                            mov eax, 0xe	      1906	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x40021bb	      0xe9aefcffff	                           jmp 0x4001e6e	      1906	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_11
0x40021c0	    0x4d8baf600100	           mov r13, qword [r15 + 0x160] 	      1941	ftp.c	FUNCTION_32	IF_15
0x40021c7	      0xe987feffff	                           jmp 0x4002053	      1941	ftp.c	FUNCTION_32	IF_15
0x40021cc	         0xf1f4000	                         nop dword [rax]	      1941	ftp.c	FUNCTION_32	IF_15
0x40021d0	    0x410fb7973807	          movzx edx, word [r15 + 0x738] 	      1959	ftp.c	FUNCTION_32	ELSE_6	CALL_19
0x40021d8	      0x488d5c2428	                   lea rbx, [rsp + 0x28]	      1959	ftp.c	FUNCTION_32	ELSE_6	CALL_19
0x40021dd	    0x498bb7300700	           mov rsi, qword [r15 + 0x730] 	      1959	ftp.c	FUNCTION_32	ELSE_6	CALL_19
0x40021e4	          0x4c89ff	                            mov rdi, r15	      1959	ftp.c	FUNCTION_32	ELSE_6	CALL_19
0x40021e7	          0x4889d9	                            mov rcx, rbx	      1959	ftp.c	FUNCTION_32	ELSE_6	CALL_19
0x40021ea	      0xe800000000	                          call 0x40021ef	      1959	ftp.c	FUNCTION_32	ELSE_6	CALL_19
0x40021ef	          0x83f801	                              cmp eax, 1	      1960	ftp.c	FUNCTION_32	ELSE_6	IF_18
0x40021f2	     0xf84b2010000	                            je 0x40023aa	      1960	ftp.c	FUNCTION_32	ELSE_6	IF_18
0x40021f8	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      1966	ftp.c	FUNCTION_32	ELSE_6	IF_19
0x40021fd	    0x410fb79f3807	          movzx ebx, word [r15 + 0x738] 	      1964	ftp.c	FUNCTION_32	ELSE_6
0x4002205	          0x4885f6	                           test rsi, rsi	      1966	ftp.c	FUNCTION_32	ELSE_6	IF_19
0x4002208	     0xf857ffeffff	                           jne 0x400208d	      1966	ftp.c	FUNCTION_32	ELSE_6	IF_19
0x400220e	    0x498b97300700	           mov rdx, qword [r15 + 0x730] 	      1967	ftp.c	FUNCTION_32	ELSE_6	IF_19	CALL_21
0x4002215	    0x488d35000000	                   lea rsi, [0x0400221c]	      1967	ftp.c	FUNCTION_32	ELSE_6	IF_19	CALL_21
0x400221c	            0x31c0	                            xor eax, eax	      1967	ftp.c	FUNCTION_32	ELSE_6	IF_19	CALL_21
0x400221e	           0xfb7cb	                           movzx ecx, bx	      1967	ftp.c	FUNCTION_32	ELSE_6	IF_19	CALL_21
0x4002221	          0x4889ef	                            mov rdi, rbp	      1967	ftp.c	FUNCTION_32	ELSE_6	IF_19	CALL_21
0x4002224	      0xe800000000	                          call 0x4002229	      1967	ftp.c	FUNCTION_32	ELSE_6	IF_19	CALL_21
0x4002229	      0xb80f000000	                            mov eax, 0xf	      1968	ftp.c	FUNCTION_32	ELSE_6	IF_19
0x400222e	      0xe93bfcffff	                           jmp 0x4001e6e	      1968	ftp.c	FUNCTION_32	ELSE_6	IF_19
0x4002233	       0xf1f440000	                   nop dword [rax + rax]	      1968	ftp.c	FUNCTION_32	ELSE_6	IF_19
0x4002238	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      1976	ftp.c	FUNCTION_32	IF_20	CALL_23
0x400223d	          0x4889ef	                            mov rdi, rbp	      1976	ftp.c	FUNCTION_32	IF_20	CALL_23
0x4002240	          0x890424	                    mov dword [rsp], eax	      1976	ftp.c	FUNCTION_32	IF_20	CALL_23
0x4002243	      0xe800000000	                          call 0x4002248	      1976	ftp.c	FUNCTION_32	IF_20	CALL_23
0x4002248	    0x418b87000700	           mov eax, dword [r15 + 0x700] 	      1977	ftp.c	FUNCTION_32	IF_20	IF_21
0x400224f	            0x85c0	                           test eax, eax	      1977	ftp.c	FUNCTION_32	IF_20	IF_21
0x4002251	          0x8b0424	                    mov eax, dword [rsp]	      1977	ftp.c	FUNCTION_32	IF_20	IF_21
0x4002254	     0xf8514fcffff	                           jne 0x4001e6e	      1977	ftp.c	FUNCTION_32	IF_20	IF_21
0x400225a	    0x4181fce50000	                          cmp r12d, 0xe5	      1977	ftp.c	FUNCTION_32	IF_20	IF_21
0x4002261	     0xf8507fcffff	                           jne 0x4001e6e	      1977	ftp.c	FUNCTION_32	IF_20	IF_21
0x4002267	      0xe9d8fbffff	                           jmp 0x4001e44	      1977	ftp.c	FUNCTION_32	IF_20	IF_21
0x400226c	         0xf1f4000	                         nop dword [rax]	      1977	ftp.c	FUNCTION_32	IF_20	IF_21
0x4002270	       0xfb6442450	           movzx eax, byte [rsp + 0x50] 	      1850	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3
0x4002275	        0x3a442451	               cmp al, byte [rsp + 0x51]	      1856	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	FOR_1	IF_4
0x4002279	     0xf8502010000	                           jne 0x4002381	      1856	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	FOR_1	IF_4
0x400227f	        0x38442452	               cmp byte [rsp + 0x52], al	      1856	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	FOR_1	IF_4
0x4002283	     0xf85f8000000	                           jne 0x4002381	      1856	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	FOR_1	IF_4
0x4002289	        0x3a442453	               cmp al, byte [rsp + 0x53]	      1856	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	FOR_1	IF_4
0x400228d	     0xf85ee000000	                           jne 0x4002381	      1856	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	FOR_1	IF_4
0x4002293	        0x8b442424	            mov eax, dword [rsp + 0x24] 	      1861	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_5
0x4002297	      0x3dffff0000	                         cmp eax, 0xffff	      1861	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_5
0x400229c	     0xf87ed000000	                            ja 0x400238f	      1861	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_5
0x40022a2	          0x4885db	                           test rbx, rbx	      1865	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6
0x40022a5	     0xf84d4feffff	                            je 0x400217f	      1865	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6
0x40022ab	    0x4180bfa90300	               cmp byte [r15 + 0x3a9], 0	      1816	ftp.c	FUNCTION_31	IF_1
0x40022b3	    0x664189873807	              mov word [r15 + 0x738], ax	      1866	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6
0x40022bb	    0x488b05000000	            mov rax, qword [0x040022c2] 	      1867	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6	CALL_6
0x40022c2	          0x488b00	                    mov rax, qword [rax]	      1867	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6	CALL_6
0x40022c5	            0x7511	                           jne 0x40022d8	      1816	ftp.c	FUNCTION_31	IF_1
0x40022c7	    0x4180bf9f0300	               cmp byte [r15 + 0x39f], 0	      1816	ftp.c	FUNCTION_31	IF_1
0x40022cf	    0x498dbf900000	                   lea rdi, [r15 + 0x90]	      1819	ftp.c	FUNCTION_31
0x40022d6	            0x7407	                            je 0x40022df	      1816	ftp.c	FUNCTION_31	IF_1
0x40022d8	    0x498bbfd80000	            mov rdi, qword [r15 + 0xd8] 	      1817	ftp.c	FUNCTION_31	IF_1
0x40022df	            0xffd0	                                call rax	      1867	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6	CALL_6
0x40022e1	          0x4885c0	                           test rax, rax	      1868	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6	IF_7
0x40022e4	    0x498987300700	            mov qword [r15 + 0x730], rax	      1867	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6	CALL_6
0x40022eb	     0xf853ffdffff	                           jne 0x4002030	      1868	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_6	IF_7
0x40022f1	      0xb81b000000	                           mov eax, 0x1b	      1922	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_13
0x40022f6	      0xe973fbffff	                           jmp 0x4001e6e	      1922	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_13
0x40022fb	       0xf1f440000	                   nop dword [rax + rax]	      1922	ftp.c	FUNCTION_32	ELSE_2	IF_9	IF_13
0x4002300	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      3467	ftp.c	CALL_28
0x4002305	      0x4c8d642450	                   lea r12, [rsp + 0x50]	      3467	ftp.c	CALL_28
0x400230a	    0x4d8baf300700	           mov r13, qword [r15 + 0x730] 	      1992	ftp.c	FUNCTION_32	IF_22
0x4002311	      0xba00010000	                          mov edx, 0x100	      3467	ftp.c	CALL_28
0x4002316	          0x4c89e6	                            mov rsi, r12	      3467	ftp.c	CALL_28
0x4002319	          0x488b38	                    mov rdi, qword [rax]	      3467	ftp.c	CALL_28
0x400231c	      0xe800000000	                          call 0x4002321	      3467	ftp.c	CALL_28
0x4002321	          0x498b3f	                    mov rdi, qword [r15]	      3468	ftp.c	CALL_29
0x4002324	    0x488d35000000	                   lea rsi, [0x0400232b]	      3468	ftp.c	CALL_29
0x400232b	        0x440fb7c3	                           movzx r8d, bx	      3468	ftp.c	CALL_29
0x400232f	          0x4c89e1	                            mov rcx, r12	      3468	ftp.c	CALL_29
0x4002332	          0x4c89ea	                            mov rdx, r13	      3468	ftp.c	CALL_29
0x4002335	            0x31c0	                            xor eax, eax	      3468	ftp.c	CALL_29
0x4002337	      0xe800000000	                          call 0x400233c	      3468	ftp.c	CALL_29
0x400233c	      0xe971fdffff	                           jmp 0x40020b2	      3468	ftp.c	CALL_29
0x4002341	     0xf1f80000000	                         nop dword [rax]	      3468	ftp.c	CALL_29
0x4002348	          0x4889de	                            mov rsi, rbx	      1947	ftp.c	FUNCTION_32	IF_15	CALL_17
0x400234b	          0x4c89ff	                            mov rdi, r15	      1947	ftp.c	FUNCTION_32	IF_15	CALL_17
0x400234e	      0xe800000000	                          call 0x4002353	      1947	ftp.c	FUNCTION_32	IF_15	CALL_17
0x4002353	      0xe91efdffff	                           jmp 0x4002076	      1947	ftp.c	FUNCTION_32	IF_15	CALL_17
0x4002358	     0xf1f84000000	                   nop dword [rax + rax]	      1947	ftp.c	FUNCTION_32	IF_15	CALL_17
0x4002360	    0x488d35000000	                   lea rsi, [0x04002367]	      1953	ftp.c	FUNCTION_32	IF_15	IF_17	CALL_18
0x4002367	           0xfb7c8	                           movzx ecx, ax	      1953	ftp.c	FUNCTION_32	IF_15	IF_17	CALL_18
0x400236a	          0x4c89ea	                            mov rdx, r13	      1953	ftp.c	FUNCTION_32	IF_15	IF_17	CALL_18
0x400236d	            0x31c0	                            xor eax, eax	      1953	ftp.c	FUNCTION_32	IF_15	IF_17	CALL_18
0x400236f	          0x4889ef	                            mov rdi, rbp	      1953	ftp.c	FUNCTION_32	IF_15	IF_17	CALL_18
0x4002372	      0xe800000000	                          call 0x4002377	      1953	ftp.c	FUNCTION_32	IF_15	IF_17	CALL_18
0x4002377	      0xb805000000	                              mov eax, 5	      1954	ftp.c	FUNCTION_32	IF_15	IF_17
0x400237c	      0xe9edfaffff	                           jmp 0x4001e6e	      1954	ftp.c	FUNCTION_32	IF_15	IF_17
0x4002381	    0x817c2424ffff	         cmp dword [rsp + 0x24], 0xffff 	      1861	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_5
0x4002389	     0xf86f0fdffff	                           jbe 0x400217f	      1861	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_5
0x400238f	    0x488d35000000	                   lea rsi, [0x04002396]	      1862	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_5	CALL_4
0x4002396	            0x31c0	                            xor eax, eax	      1862	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_5	CALL_4
0x4002398	          0x4889ef	                            mov rdi, rbp	      1862	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_5	CALL_4
0x400239b	      0xe800000000	                          call 0x40023a0	      1862	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_5	CALL_4
0x40023a0	      0xb80d000000	                            mov eax, 0xd	      1863	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_5
0x40023a5	      0xe9c4faffff	                           jmp 0x4001e6e	      1863	ftp.c	FUNCTION_32	IF_1	IF_2	IF_3	IF_5
0x40023aa	          0x4889de	                            mov rsi, rbx	      1962	ftp.c	FUNCTION_32	ELSE_6	CALL_20
0x40023ad	          0x4c89ff	                            mov rdi, r15	      1962	ftp.c	FUNCTION_32	ELSE_6	CALL_20
0x40023b0	      0xe800000000	                          call 0x40023b5	      1962	ftp.c	FUNCTION_32	ELSE_6	CALL_20
0x40023b5	      0xe93efeffff	                           jmp 0x40021f8	      1962	ftp.c	FUNCTION_32	ELSE_6	CALL_20
0x40023ba	      0xe800000000	                          call 0x40023bf	      2006	ftp.c	FUNCTION_32
0x40023bf	    0x488d3d000000	                   lea rdi, [0x040023c6]	      1919	ftp.c	FUNCTION_32	ELSE_2	IF_9	CALL_13
0x40023c6	            0x31c0	                            xor eax, eax	      1919	ftp.c	FUNCTION_32	ELSE_2	IF_9	CALL_13
0x40023c8	      0xe800000000	                          call 0x40023cd	      1919	ftp.c	FUNCTION_32	ELSE_2	IF_9	CALL_13
0x40023cd	    0x498987300700	            mov qword [r15 + 0x730], rax	      1919	ftp.c	FUNCTION_32	ELSE_2	IF_9	CALL_13
0x40023d4	      0xe932fcffff	                           jmp 0x400200b	      1919	ftp.c	FUNCTION_32	ELSE_2	IF_9	CALL_13
ftp_state_ul_setup	WHILE,0:SWITCH,0:IF,8:ELSE,0:FOR,0:CALL,9:functions,0:DO,1	143
0x40005f0	            0x4156	                                push r14	      1587	ftp.c	FUNCTION_28
0x40005f2	            0x4155	                                push r13	      1587	ftp.c	FUNCTION_28
0x40005f4	            0x4154	                                push r12	      1587	ftp.c	FUNCTION_28
0x40005f6	              0x55	                                push rbp	      1587	ftp.c	FUNCTION_28
0x40005f7	          0x4889fd	                            mov rbp, rdi	      1587	ftp.c	FUNCTION_28
0x40005fa	              0x53	                                push rbx	      1587	ftp.c	FUNCTION_28
0x40005fb	          0x488b1f	                    mov rbx, qword [rdi]	      1589	ftp.c	FUNCTION_28
0x40005fe	    0x488b83305100	          mov rax, qword [rbx + 0x5130] 	      1594	ftp.c	FUNCTION_28	IF_1
0x4000605	          0x4885c0	                           test rax, rax	      1594	ftp.c	FUNCTION_28	IF_1
0x4000608	     0xf849b000000	                            je 0x40006a9	      1594	ftp.c	FUNCTION_28	IF_1
0x400060e	          0x4084f6	                           test sil, sil	      1594	ftp.c	FUNCTION_28	IF_1
0x4000611	     0xf8589000000	                           jne 0x40006a0	      1594	ftp.c	FUNCTION_28	IF_1
0x4000617	          0x4885c0	                           test rax, rax	      1609	ftp.c	FUNCTION_28	IF_1	IF_2
0x400061a	     0xf8840010000	                            js 0x4000760	      1609	ftp.c	FUNCTION_28	IF_1	IF_2
0x4000620	    0x4883bdb00400	              cmp qword [rbp + 0x4b0], 0	      1620	ftp.c	FUNCTION_28	IF_1	IF_3
0x4000628	    0x4c8babe80100	           mov r13, qword [rbx + 0x1e8] 	      1589	ftp.c	FUNCTION_28
0x400062f	    0xc683d5070000	               mov byte [rbx + 0x7d5], 1	      1617	ftp.c	FUNCTION_28	IF_1
0x4000636	     0xf845c010000	                            je 0x4000798	      1620	ftp.c	FUNCTION_28	IF_1	IF_3
0x400063c	      0xbe01000000	                              mov esi, 1	      1621	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_1
0x4000641	          0x4889df	                            mov rdi, rbx	      1621	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_1
0x4000644	      0xe800000000	                          call 0x4000649	      1621	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_1
0x4000649	            0x31d2	                            xor edx, edx	      1622	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_2
0x400064b	    0x488bb3305100	          mov rsi, qword [rbx + 0x5130] 	      1622	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_2
0x4000652	    0x488bbdb80400	           mov rdi, qword [rbp + 0x4b8] 	      1622	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_2
0x4000659	    0xff95b0040000	                call qword [rbp + 0x4b0]	      1622	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_2
0x400065f	            0x31f6	                            xor esi, esi	      1624	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_3
0x4000661	          0x4189c4	                           mov r12d, eax	      1622	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_2
0x4000664	          0x4889df	                            mov rdi, rbx	      1624	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_3
0x4000667	      0xe800000000	                          call 0x400066c	      1624	ftp.c	FUNCTION_28	IF_1	IF_3	CALL_3
0x400066c	          0x4585e4	                         test r12d, r12d	      1627	ftp.c	FUNCTION_28	IF_1	IF_4
0x400066f	     0xf849b010000	                            je 0x4000810	      1627	ftp.c	FUNCTION_28	IF_1	IF_4
0x4000675	        0x4183fc02	                             cmp r12d, 2	      1629	ftp.c	FUNCTION_28	IF_1	IF_4	IF_5
0x4000679	            0x7475	                            je 0x40006f0	      1629	ftp.c	FUNCTION_28	IF_1	IF_4	IF_5
0x400067b	    0x488d35000000	                   lea rsi, [0x04000682]	      1630	ftp.c	FUNCTION_28	IF_1	IF_4	IF_5	CALL_4
0x4000682	            0x31c0	                            xor eax, eax	      1630	ftp.c	FUNCTION_28	IF_1	IF_4	IF_5	CALL_4
0x4000684	          0x4889df	                            mov rdi, rbx	      1630	ftp.c	FUNCTION_28	IF_1	IF_4	IF_5	CALL_4
0x4000687	      0xe800000000	                          call 0x400068c	      1630	ftp.c	FUNCTION_28	IF_1	IF_4	IF_5	CALL_4
0x400068c	      0xb81f000000	                           mov eax, 0x1f	      1631	ftp.c	FUNCTION_28	IF_1	IF_4	IF_5
0x4000691	              0x5b	                                 pop rbx	      1680	ftp.c	FUNCTION_28
0x4000692	              0x5d	                                 pop rbp	      1680	ftp.c	FUNCTION_28
0x4000693	            0x415c	                                 pop r12	      1680	ftp.c	FUNCTION_28
0x4000695	            0x415d	                                 pop r13	      1680	ftp.c	FUNCTION_28
0x4000697	            0x415e	                                 pop r14	      1680	ftp.c	FUNCTION_28
0x4000699	              0xc3	                                     ret	      1680	ftp.c	FUNCTION_28
0x400069a	    0x660f1f440000	                    nop word [rax + rax]	      1680	ftp.c	FUNCTION_28
0x40006a0	          0x4885c0	                           test rax, rax	      1595	ftp.c	FUNCTION_28	IF_1
0x40006a3	     0xf8f77ffffff	                            jg 0x4000620	      1595	ftp.c	FUNCTION_28	IF_1
0x40006a9	    0x80bbd5070000	               cmp byte [rbx + 0x7d5], 0	      1674	ftp.c	FUNCTION_28
0x40006b0	    0x488d35000000	                   lea rsi, [0x040006b7]	      1674	ftp.c	FUNCTION_28
0x40006b7	    0x488d05000000	                   lea rax, [0x040006be]	      1674	ftp.c	FUNCTION_28
0x40006be	    0x488b95d80600	           mov rdx, qword [rbp + 0x6d8] 	      1674	ftp.c	FUNCTION_28
0x40006c5	        0x480f44f0	                          cmove rsi, rax	      1674	ftp.c	FUNCTION_28
0x40006c9	    0x488dbd500600	                  lea rdi, [rbp + 0x650]	      1674	ftp.c	FUNCTION_28
0x40006d0	            0x31c0	                            xor eax, eax	      1674	ftp.c	FUNCTION_28
0x40006d2	      0xe800000000	                          call 0x40006d7	      1674	ftp.c	FUNCTION_28
0x40006d7	            0x85c0	                           test eax, eax	      1674	ftp.c	FUNCTION_28
0x40006d9	            0x75b6	                           jne 0x4000691	      1674	ftp.c	FUNCTION_28
0x40006db	    0xc7850c070000	          mov dword [rbp + 0x70c], 0x21 	       794	ftp.c	ELSE_3	FUNCTION_12
0x40006e5	              0x5b	                                 pop rbx	      1680	ftp.c	FUNCTION_28
0x40006e6	              0x5d	                                 pop rbp	      1680	ftp.c	FUNCTION_28
0x40006e7	            0x415c	                                 pop r12	      1680	ftp.c	FUNCTION_28
0x40006e9	            0x415d	                                 pop r13	      1680	ftp.c	FUNCTION_28
0x40006eb	            0x415e	                                 pop r14	      1680	ftp.c	FUNCTION_28
0x40006ed	              0xc3	                                     ret	      1680	ftp.c	FUNCTION_28
0x40006ee	            0x6690	                                     nop	      1680	ftp.c	FUNCTION_28
0x40006f0	    0x488bbb305100	          mov rdi, qword [rbx + 0x5130] 	      1680	ftp.c	FUNCTION_28
0x40006f7	          0x4531f6	                          xor r14d, r14d	      1629	ftp.c	FUNCTION_28	IF_1	IF_4	IF_5
0x40006fa	            0xeb45	                           jmp 0x4000741	      1629	ftp.c	FUNCTION_28	IF_1	IF_4	IF_5
0x40006fc	         0xf1f4000	                         nop dword [rax]	      1629	ftp.c	FUNCTION_28	IF_1	IF_4	IF_5
0x4000700	    0x488b8b705100	          mov rcx, qword [rbx + 0x5170] 	      1640	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4000707	    0x488bbb200d00	           mov rdi, qword [rbx + 0xd20] 	      1640	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x400070e	          0x4c89e2	                            mov rdx, r12	      1640	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4000711	      0xbe01000000	                              mov esi, 1	      1640	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4000716	    0xff9368510000	               call qword [rbx + 0x5168]	      1640	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x400071c	          0x4901c6	                            add r14, rax	      1644	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x400071f	          0x4885c0	                           test rax, rax	      1645	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	IF_6
0x4000722	     0xf8408010000	                            je 0x4000830	      1645	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	IF_6
0x4000728	          0x4939c4	                            cmp r12, rax	      1645	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	IF_6
0x400072b	     0xf82ff000000	                            jb 0x4000830	      1645	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	IF_6
0x4000731	    0x488bbb305100	          mov rdi, qword [rbx + 0x5130] 	      1651	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4000738	          0x4939fe	                            cmp r14, rdi	      1651	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x400073b	     0xf8dcf000000	                           jge 0x4000810	      1651	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4000741	    0x4c8ba3900700	           mov r12, qword [rbx + 0x790] 	      1636	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4000748	          0x4c29f7	                            sub rdi, r14	      1636	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x400074b	          0x4c39e7	                            cmp rdi, r12	      1637	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x400074e	            0x7fb0	                            jg 0x4000700	      1637	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4000750	      0xe800000000	                          call 0x4000755	      1637	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4000755	          0x4989c4	                            mov r12, rax	      1637	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4000758	            0xeba6	                           jmp 0x4000700	      1637	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x400075a	    0x660f1f440000	                    nop word [rax + rax]	      1637	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1
0x4000760	    0x488b97d80600	           mov rdx, qword [rdi + 0x6d8] 	      1611	ftp.c	FUNCTION_28	IF_1	IF_2
0x4000767	    0x488d35000000	                   lea rsi, [0x0400076e]	      1611	ftp.c	FUNCTION_28	IF_1	IF_2
0x400076e	    0x488dbf500600	                  lea rdi, [rdi + 0x650]	      1611	ftp.c	FUNCTION_28	IF_1	IF_2
0x4000775	            0x31c0	                            xor eax, eax	      1611	ftp.c	FUNCTION_28	IF_1	IF_2
0x4000777	      0xe800000000	                          call 0x400077c	      1611	ftp.c	FUNCTION_28	IF_1	IF_2
0x400077c	            0x85c0	                           test eax, eax	      1611	ftp.c	FUNCTION_28	IF_1	IF_2
0x400077e	     0xf850dffffff	                           jne 0x4000691	      1611	ftp.c	FUNCTION_28	IF_1	IF_2
0x4000784	    0xc7850c070000	          mov dword [rbp + 0x70c], 0x19 	       794	ftp.c	ELSE_3	FUNCTION_12
0x400078e	      0xe9fefeffff	                           jmp 0x4000691	      1613	ftp.c	FUNCTION_28	IF_1	IF_2
0x4000793	       0xf1f440000	                   nop dword [rax + rax]	      1613	ftp.c	FUNCTION_28	IF_1	IF_2
0x4000798	    0x488b93505100	          mov rdx, qword [rbx + 0x5150] 	      1654	ftp.c	FUNCTION_28	IF_1	IF_7
0x400079f	          0x4885d2	                           test rdx, rdx	      1654	ftp.c	FUNCTION_28	IF_1	IF_7
0x40007a2	     0xf8ea8000000	                           jle 0x4000850	      1654	ftp.c	FUNCTION_28	IF_1	IF_7
0x40007a8	          0x4829c2	                            sub rdx, rax	      1655	ftp.c	FUNCTION_28	IF_1	IF_7
0x40007ab	          0x4885d2	                           test rdx, rdx	      1657	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8
0x40007ae	    0x488993505100	          mov qword [rbx + 0x5150], rdx 	      1655	ftp.c	FUNCTION_28	IF_1	IF_7
0x40007b5	     0xf8feefeffff	                            jg 0x40006a9	      1657	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8
0x40007bb	    0x488d35000000	                   lea rsi, [0x040007c2]	      1658	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_8
0x40007c2	            0x31c0	                            xor eax, eax	      1658	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_8
0x40007c4	          0x4889df	                            mov rdi, rbx	      1658	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_8
0x40007c7	      0xe800000000	                          call 0x40007cc	      1658	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_8
0x40007cc	        0x4883ec08	                              sub rsp, 8	      1661	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_9
0x40007d0	    0x41b9ffffffff	                     mov r9d, 0xffffffff	      1661	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_9
0x40007d6	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	      1661	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_9
0x40007dd	            0x6a00	                                  push 0	      1661	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_9
0x40007df	          0x4531c0	                            xor r8d, r8d	      1661	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_9
0x40007e2	            0x31c9	                            xor ecx, ecx	      1661	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_9
0x40007e4	          0x4489ce	                            mov esi, r9d	      1661	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_9
0x40007e7	          0x4889ef	                            mov rdi, rbp	      1661	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_9
0x40007ea	      0xe800000000	                          call 0x40007ef	      1661	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8	CALL_9
0x40007ef	    0x41c745180200	               mov dword [r13 + 0x18], 2	      1665	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8
0x40007f7	    0xc7850c070000	              mov dword [rbp + 0x70c], 0	       794	ftp.c	ELSE_3	FUNCTION_12
0x4000801	              0x58	                                 pop rax	      1668	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8
0x4000802	            0x31c0	                            xor eax, eax	      1668	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8
0x4000804	              0x5a	                                 pop rdx	      1668	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8
0x4000805	      0xe987feffff	                           jmp 0x4000691	      1668	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8
0x400080a	    0x660f1f440000	                    nop word [rax + rax]	      1668	ftp.c	FUNCTION_28	IF_1	IF_7	IF_8
0x4000810	    0x488b93505100	          mov rdx, qword [rbx + 0x5150] 	      1654	ftp.c	FUNCTION_28	IF_1	IF_7
0x4000817	          0x4885d2	                           test rdx, rdx	      1654	ftp.c	FUNCTION_28	IF_1	IF_7
0x400081a	     0xf8e89feffff	                           jle 0x40006a9	      1654	ftp.c	FUNCTION_28	IF_1	IF_7
0x4000820	    0x488b83305100	          mov rax, qword [rbx + 0x5130] 	      1654	ftp.c	FUNCTION_28	IF_1	IF_7
0x4000827	      0xe97cffffff	                           jmp 0x40007a8	      1654	ftp.c	FUNCTION_28	IF_1	IF_7
0x400082c	         0xf1f4000	                         nop dword [rax]	      1654	ftp.c	FUNCTION_28	IF_1	IF_7
0x4000830	    0x488d35000000	                   lea rsi, [0x04000837]	      1648	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	IF_6	CALL_7
0x4000837	            0x31c0	                            xor eax, eax	      1648	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	IF_6	CALL_7
0x4000839	          0x4889df	                            mov rdi, rbx	      1648	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	IF_6	CALL_7
0x400083c	      0xe800000000	                          call 0x4000841	      1648	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	IF_6	CALL_7
0x4000841	      0xb81f000000	                           mov eax, 0x1f	      1649	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	IF_6
0x4000846	      0xe946feffff	                           jmp 0x4000691	      1649	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	IF_6
0x400084b	       0xf1f440000	                   nop dword [rax + rax]	      1649	ftp.c	FUNCTION_28	IF_1	IF_4	DO_1	IF_6
0x4000850	    0x488b95d80600	           mov rdx, qword [rbp + 0x6d8] 	      1674	ftp.c	FUNCTION_28
0x4000857	    0x488d35000000	                   lea rsi, [0x0400085e]	      1674	ftp.c	FUNCTION_28
0x400085e	      0xe966feffff	                           jmp 0x40006c9	      1674	ftp.c	FUNCTION_28
wc_data_dtor	WHILE,0:SWITCH,0:IF,1:ELSE,0:FOR,0:CALL,2:functions,0:DO,0	12
0x4001410	          0x4885ff	                           test rdi, rdi	      3691	ftp.c	FUNCTION_54	IF_1
0x4001413	              0x53	                                push rbx	      3689	ftp.c	FUNCTION_54
0x4001414	          0x4889fb	                            mov rbx, rdi	      3689	ftp.c	FUNCTION_54
0x4001417	            0x740b	                            je 0x4001424	      3691	ftp.c	FUNCTION_54	IF_1
0x4001419	        0x48833f00	                      cmp qword [rdi], 0	      3691	ftp.c	FUNCTION_54	IF_1
0x400141d	            0x7405	                            je 0x4001424	      3691	ftp.c	FUNCTION_54	IF_1
0x400141f	      0xe800000000	                          call 0x4001424	      3692	ftp.c	FUNCTION_54	CALL_1
0x4001424	    0x488b05000000	            mov rax, qword [0x0400142b] 	      3693	ftp.c	FUNCTION_54	CALL_2
0x400142b	          0x4889df	                            mov rdi, rbx	      3693	ftp.c	FUNCTION_54	CALL_2
0x400142e	              0x5b	                                 pop rbx	      3694	ftp.c	FUNCTION_54
0x400142f	          0x488b00	                    mov rax, qword [rax]	      3693	ftp.c	FUNCTION_54	CALL_2
0x4001432	            0xffe0	                                 jmp rax	      3693	ftp.c	FUNCTION_54	CALL_2
ftp_state_use_port	WHILE,1:SWITCH,3:IF,35:ELSE,10:FOR,3:CALL,72:functions,0:DO,0	502
0x40008b0	            0x4157	                                push r15	       932	ftp.c	FUNCTION_18
0x40008b2	            0x4156	                                push r14	       932	ftp.c	FUNCTION_18
0x40008b4	      0xb91f000000	                           mov ecx, 0x1f	       937	ftp.c	FUNCTION_18
0x40008b9	            0x4155	                                push r13	       932	ftp.c	FUNCTION_18
0x40008bb	            0x4154	                                push r12	       932	ftp.c	FUNCTION_18
0x40008bd	              0x55	                                push rbp	       932	ftp.c	FUNCTION_18
0x40008be	              0x53	                                push rbx	       932	ftp.c	FUNCTION_18
0x40008bf	          0x4889fd	                            mov rbp, rdi	       932	ftp.c	FUNCTION_18
0x40008c2	    0x4881ecc80900	                          sub rsp, 0x9c8	       932	ftp.c	FUNCTION_18
0x40008c9	          0x4c8b2f	                    mov r13, qword [rdi]	       935	ftp.c	FUNCTION_18
0x40008cc	    0x64488b042528	                mov rax, qword fs:[0x28]	       932	ftp.c	FUNCTION_18
0x40008d5	    0x48898424b809	            mov qword [rsp + 0x9b8], rax	       932	ftp.c	FUNCTION_18
0x40008dd	            0x31c0	                            xor eax, eax	       932	ftp.c	FUNCTION_18
0x40008df	    0x488dbc24b800	                   lea rdi, [rsp + 0xb8]	       937	ftp.c	FUNCTION_18
0x40008e7	        0x89742414	             mov dword [rsp + 0x14], esi	       932	ftp.c	FUNCTION_18
0x40008eb	    0xc7442420ffff	     mov dword [rsp + 0x20], 0xffffffff 	       936	ftp.c	FUNCTION_18
0x40008f3	    0x4d8ba5900800	           mov r12, qword [r13 + 0x890] 	       953	ftp.c	FUNCTION_18
0x40008fa	    0x48c78424b000	               mov qword [rsp + 0xb0], 0	       937	ftp.c	FUNCTION_18
0x4000906	          0xf348ab	              rep stosq qword [rdi], rax	       937	ftp.c	FUNCTION_18
0x4000909	    0x48c744242800	               mov qword [rsp + 0x28], 0	       954	ftp.c	FUNCTION_18
0x4000912	          0x4d85e4	                           test r12, r12	       967	ftp.c	FUNCTION_18	IF_1
0x4000915	     0xf8455020000	                            je 0x4000b70	       967	ftp.c	FUNCTION_18	IF_1
0x400091b	          0x4c89e7	                            mov rdi, r12	       968	ftp.c	FUNCTION_18	IF_1	CALL_1
0x400091e	      0xe800000000	                          call 0x4000923	       968	ftp.c	FUNCTION_18	IF_1	CALL_1
0x4000923	        0x4883f801	                              cmp rax, 1	       967	ftp.c	FUNCTION_18	IF_1
0x4000927	     0xf8643020000	                           jbe 0x4000b70	       967	ftp.c	FUNCTION_18	IF_1
0x400092d	        0x4883f82e	                           cmp rax, 0x2e	       967	ftp.c	FUNCTION_18	IF_1
0x4000931	        0x488d5001	                      lea rdx, [rax + 1]	       967	ftp.c	FUNCTION_18	IF_1
0x4000935	    0x488b05000000	            mov rax, qword [0x0400093c] 	       982	ftp.c	FUNCTION_18	IF_1	CALL_6
0x400093c	      0xbf2f000000	                           mov edi, 0x2f	       982	ftp.c	FUNCTION_18	IF_1	CALL_6
0x4000941	      0xbe01000000	                              mov esi, 1	       982	ftp.c	FUNCTION_18	IF_1	CALL_6
0x4000946	        0x480f43fa	                         cmovae rdi, rdx	       982	ftp.c	FUNCTION_18	IF_1	CALL_6
0x400094a	            0xff10	                        call qword [rax]	       982	ftp.c	FUNCTION_18	IF_1	CALL_6
0x400094c	          0x4889c3	                            mov rbx, rax	       982	ftp.c	FUNCTION_18	IF_1	CALL_6
0x400094f	      0xb81b000000	                           mov eax, 0x1b	       984	ftp.c	FUNCTION_18	IF_1	IF_2
0x4000954	          0x4885db	                           test rbx, rbx	       983	ftp.c	FUNCTION_18	IF_1	IF_2
0x4000957	     0xf84e3010000	                            je 0x4000b40	       983	ftp.c	FUNCTION_18	IF_1	IF_2
0x400095d	      0x410fb60424	                   movzx eax, byte [r12]	       987	ftp.c	FUNCTION_18	IF_1	IF_3
0x4000962	            0x3c5b	                            cmp al, 0x5b	       987	ftp.c	FUNCTION_18	IF_1	IF_3
0x4000964	     0xf84f6030000	                            je 0x4000d60	       987	ftp.c	FUNCTION_18	IF_1	IF_3
0x400096a	            0x3c3a	                            cmp al, 0x3a	       996	ftp.c	FUNCTION_18	IF_1	ELSE_1	IF_5
0x400096c	            0x7448	                            je 0x40009b6	       996	ftp.c	FUNCTION_18	IF_1	ELSE_1	IF_5
0x400096e	      0xbe3a000000	                           mov esi, 0x3a	      1001	ftp.c	FUNCTION_18	IF_1	ELSE_2	CALL_9
0x4000973	          0x4c89e7	                            mov rdi, r12	      1001	ftp.c	FUNCTION_18	IF_1	ELSE_2	CALL_9
0x4000976	      0xe800000000	                          call 0x400097b	      1001	ftp.c	FUNCTION_18	IF_1	ELSE_2	CALL_9
0x400097b	          0x4885c0	                           test rax, rax	      1002	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6
0x400097e	          0x4989c6	                            mov r14, rax	      1001	ftp.c	FUNCTION_18	IF_1	ELSE_2	CALL_9
0x4000981	     0xf8469020000	                            je 0x4000bf0	      1002	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6
0x4000987	      0x488d542430	                   lea rdx, [rsp + 0x30]	      1005	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	IF_7	CALL_10
0x400098c	          0x4c89e6	                            mov rsi, r12	      1005	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	IF_7	CALL_10
0x400098f	      0xbf0a000000	                            mov edi, 0xa	      1005	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	IF_7	CALL_10
0x4000994	      0xe800000000	                          call 0x4000999	      1005	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	IF_7	CALL_10
0x4000999	          0x83f801	                              cmp eax, 1	      1005	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	IF_7	CALL_10
0x400099c	     0xf844e020000	                            je 0x4000bf0	      1005	ftp.c	FUNCTION_18	IF_1	ELSE_2	IF_6	IF_7	CALL_10
0x40009a2	          0x4c89f2	                            mov rdx, r14	       126	string3.h	FUNCTION_74	CALL_3
0x40009a5	          0x4c89e6	                            mov rsi, r12	       126	string3.h	FUNCTION_74	CALL_3
0x40009a8	          0x4889df	                            mov rdi, rbx	       126	string3.h	FUNCTION_74	CALL_3
0x40009ab	          0x4c29e2	                            sub rdx, r12	       126	string3.h	FUNCTION_74	CALL_3
0x40009ae	          0x4d89f4	                            mov r12, r14	       126	string3.h	FUNCTION_74	CALL_3
0x40009b1	      0xe800000000	                          call 0x40009b6	       126	string3.h	FUNCTION_74	CALL_3
0x40009b6	          0x4c89e7	                            mov rdi, r12	      1023	ftp.c	FUNCTION_18	IF_1	IF_8	CALL_14
0x40009b9	      0xbe3a000000	                           mov esi, 0x3a	      1023	ftp.c	FUNCTION_18	IF_1	IF_8	CALL_14
0x40009be	      0xe800000000	                          call 0x40009c3	      1023	ftp.c	FUNCTION_18	IF_1	IF_8	CALL_14
0x40009c3	          0x4885c0	                           test rax, rax	      1024	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9
0x40009c6	          0x4989c4	                            mov r12, rax	      1023	ftp.c	FUNCTION_18	IF_1	IF_8	CALL_14
0x40009c9	     0xf8411020000	                            je 0x4000be0	      1024	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9
0x40009cf	      0x498d7c2401	                      lea rdi, [r12 + 1]	      1025	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	CALL_16
0x40009d4	            0x31f6	                            xor esi, esi	      1025	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	CALL_16
0x40009d6	      0xba0a000000	                            mov edx, 0xa	      1025	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	CALL_16
0x40009db	      0xe800000000	                          call 0x40009e0	      1025	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	CALL_16
0x40009e0	          0x4889c7	                            mov rdi, rax	      1025	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	CALL_16
0x40009e3	      0xe800000000	                          call 0x40009e8	      1025	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	CALL_16
0x40009e8	      0xbe2d000000	                           mov esi, 0x2d	      1026	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	CALL_17
0x40009ed	          0x4c89e7	                            mov rdi, r12	      1026	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	CALL_17
0x40009f0	          0x4189c7	                           mov r15d, eax	      1025	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	CALL_16
0x40009f3	      0xe800000000	                          call 0x40009f8	      1026	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	CALL_17
0x40009f8	          0x4885c0	                           test rax, rax	      1027	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	IF_10
0x40009fb	     0xf84e2010000	                            je 0x4000be3	      1027	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	IF_10
0x4000a01	        0x488d7801	                      lea rdi, [rax + 1]	      1028	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	IF_10	CALL_19
0x4000a05	            0x31f6	                            xor esi, esi	      1028	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	IF_10	CALL_19
0x4000a07	      0xba0a000000	                            mov edx, 0xa	      1028	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	IF_10	CALL_19
0x4000a0c	      0xe800000000	                          call 0x4000a11	      1028	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	IF_10	CALL_19
0x4000a11	          0x4889c7	                            mov rdi, rax	      1028	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	IF_10	CALL_19
0x4000a14	      0xe800000000	                          call 0x4000a19	      1028	ftp.c	FUNCTION_18	IF_1	IF_8	IF_9	IF_10	CALL_19
0x4000a19	        0x664139c7	                            cmp r15w, ax	      1041	ftp.c	FUNCTION_18	IF_1	IF_11
0x4000a1d	     0xf86c0060000	                           jbe 0x40010e3	      1041	ftp.c	FUNCTION_18	IF_1	IF_11
0x4000a23	          0x4531d2	                          xor r10d, r10d	      1042	ftp.c	FUNCTION_18	IF_1	IF_11
0x4000a26	          0x4531ff	                          xor r15d, r15d	      1042	ftp.c	FUNCTION_18	IF_1	IF_11
0x4000a29	    0x664489542412	             mov word [rsp + 0x12], r10w	      1042	ftp.c	FUNCTION_18	IF_1	IF_11
0x4000a2f	          0x803b00	                       cmp byte [rbx], 0	      1045	ftp.c	FUNCTION_18	IF_1	IF_12
0x4000a32	     0xf8444010000	                            je 0x4000b7c	      1045	ftp.c	FUNCTION_18	IF_1	IF_12
0x4000a38	        0x488b4578	            mov rax, qword [rbp + 0x78] 	      1048	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_21
0x4000a3c	    0x448ba5c00000	           mov r12d, dword [rbp + 0xc0] 	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x4000a43	    0x4c8db424b005	                  lea r14, [rsp + 0x5b0]	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x4000a4b	        0x488b7820	            mov rdi, qword [rax + 0x20] 	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x4000a4f	      0xe800000000	                          call 0x4000a54	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x4000a54	        0x488b5578	            mov rdx, qword [rbp + 0x78] 	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x4000a58	    0x41b901040000	                          mov r9d, 0x401	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x4000a5e	          0x4d89f0	                             mov r8, r14	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x4000a61	          0x4889d9	                            mov rcx, rbx	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x4000a64	            0x89c6	                            mov esi, eax	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x4000a66	          0x8b7a04	                mov edi, dword [rdx + 4]	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x4000a69	          0x4489e2	                           mov edx, r12d	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x4000a6c	      0xe800000000	                          call 0x4000a71	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x4000a71	            0x89c2	                            mov edx, eax	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x4000a73	      0xb81e000000	                           mov eax, 0x1e	      1055	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1
0x4000a78	          0x83fa01	                              cmp edx, 1	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x4000a7b	     0xf84bf000000	                            je 0x4000b40	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x4000a81	     0xf82d1030000	                            jb 0x4000e58	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x4000a87	          0x83fa02	                              cmp edx, 2	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x4000a8a	     0xf85ec000000	                           jne 0x4000b7c	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x4000a90	      0xc644241101	                mov byte [rsp + 0x11], 1	       958	ftp.c	FUNCTION_18
0x4000a95	      0x4c8d642428	                   lea r12, [rsp + 0x28]	      1091	ftp.c	FUNCTION_18	CALL_28
0x4000a9a	            0x31d2	                            xor edx, edx	      1091	ftp.c	FUNCTION_18	CALL_28
0x4000a9c	          0x4c89f6	                            mov rsi, r14	      1091	ftp.c	FUNCTION_18	CALL_28
0x4000a9f	          0x4889ef	                            mov rdi, rbp	      1091	ftp.c	FUNCTION_18	CALL_28
0x4000aa2	          0x4c89e1	                            mov rcx, r12	      1091	ftp.c	FUNCTION_18	CALL_28
0x4000aa5	      0xe800000000	                          call 0x4000aaa	      1091	ftp.c	FUNCTION_18	CALL_28
0x4000aaa	          0x83f801	                              cmp eax, 1	      1092	ftp.c	FUNCTION_18	IF_15
0x4000aad	     0xf84e5020000	                            je 0x4000d98	      1092	ftp.c	FUNCTION_18	IF_15
0x4000ab3	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	      1094	ftp.c	FUNCTION_18	IF_16
0x4000ab8	          0x4885f6	                           test rsi, rsi	      1094	ftp.c	FUNCTION_18	IF_16
0x4000abb	     0xf846f020000	                            je 0x4000d30	      1094	ftp.c	FUNCTION_18	IF_16
0x4000ac1	          0x4c8b26	                    mov r12, qword [rsi]	      1095	ftp.c	FUNCTION_18	IF_16
0x4000ac4	          0x4c89ef	                            mov rdi, r13	      1098	ftp.c	FUNCTION_18	IF_16	CALL_30
0x4000ac7	      0xe800000000	                          call 0x4000acc	      1098	ftp.c	FUNCTION_18	IF_16	CALL_30
0x4000acc	          0x4d85e4	                           test r12, r12	      1103	ftp.c	FUNCTION_18	ELSE_7	IF_17
0x4000acf	     0xf845b020000	                            je 0x4000d30	      1103	ftp.c	FUNCTION_18	ELSE_7	IF_17
0x4000ad5	    0x488b05000000	            mov rax, qword [0x04000adc] 	      1109	ftp.c	FUNCTION_18	CALL_33
0x4000adc	          0x4889df	                            mov rdi, rbx	      1109	ftp.c	FUNCTION_18	CALL_33
0x4000adf	      0x488d5c2420	                   lea rbx, [rsp + 0x20]	      1109	ftp.c	FUNCTION_18	CALL_33
0x4000ae4	            0xff10	                        call qword [rax]	      1109	ftp.c	FUNCTION_18	CALL_33
0x4000ae6	    0xc7442420ffff	     mov dword [rsp + 0x20], 0xffffffff 	      1114	ftp.c	FUNCTION_18
0x4000aee	            0x31d2	                            xor edx, edx	      1117	ftp.c	FUNCTION_18	FOR_1	CALL_34
0x4000af0	          0x4889d9	                            mov rcx, rbx	      1117	ftp.c	FUNCTION_18	FOR_1	CALL_34
0x4000af3	          0x4c89e6	                            mov rsi, r12	      1117	ftp.c	FUNCTION_18	FOR_1	CALL_34
0x4000af6	          0x4889ef	                            mov rdi, rbp	      1117	ftp.c	FUNCTION_18	FOR_1	CALL_34
0x4000af9	      0xe800000000	                          call 0x4000afe	      1117	ftp.c	FUNCTION_18	FOR_1	CALL_34
0x4000afe	            0x85c0	                           test eax, eax	      1118	ftp.c	FUNCTION_18	FOR_1	IF_18
0x4000b00	     0xf84fa000000	                            je 0x4000c00	      1118	ftp.c	FUNCTION_18	FOR_1	IF_18
0x4000b06	      0xe800000000	                          call 0x4000b0b	      1119	ftp.c	FUNCTION_18	FOR_1	IF_18
0x4000b0b	      0x4d8b642428	            mov r12, qword [r12 + 0x28] 	      1116	ftp.c	FUNCTION_18	FOR_1
0x4000b10	          0x4d85e4	                           test r12, r12	      1116	ftp.c	FUNCTION_18	FOR_1
0x4000b13	            0x75d9	                           jne 0x4000aee	      1116	ftp.c	FUNCTION_18	FOR_1
0x4000b15	            0x8b30	                    mov esi, dword [rax]	      1125	ftp.c	FUNCTION_18	IF_19	CALL_36
0x4000b17	          0x4889ef	                            mov rdi, rbp	      1125	ftp.c	FUNCTION_18	IF_19	CALL_36
0x4000b1a	      0xe800000000	                          call 0x4000b1f	      1125	ftp.c	FUNCTION_18	IF_19	CALL_36
0x4000b1f	    0x488d35000000	                   lea rsi, [0x04000b26]	      1125	ftp.c	FUNCTION_18	IF_19	CALL_36
0x4000b26	          0x4889c2	                            mov rdx, rax	      1125	ftp.c	FUNCTION_18	IF_19	CALL_36
0x4000b29	          0x4c89ef	                            mov rdi, r13	      1125	ftp.c	FUNCTION_18	IF_19	CALL_36
0x4000b2c	            0x31c0	                            xor eax, eax	      1125	ftp.c	FUNCTION_18	IF_19	CALL_36
0x4000b2e	      0xe800000000	                          call 0x4000b33	      1125	ftp.c	FUNCTION_18	IF_19	CALL_36
0x4000b33	      0xb81e000000	                           mov eax, 0x1e	      1126	ftp.c	FUNCTION_18	IF_19
0x4000b38	     0xf1f84000000	                   nop dword [rax + rax]	      1126	ftp.c	FUNCTION_18	IF_19
0x4000b40	    0x488b8c24b809	           mov rcx, qword [rsp + 0x9b8] 	      1312	ftp.c	FUNCTION_18
0x4000b48	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1312	ftp.c	FUNCTION_18
0x4000b51	     0xf8587050000	                           jne 0x40010de	      1312	ftp.c	FUNCTION_18
0x4000b57	    0x4881c4c80900	                          add rsp, 0x9c8	      1312	ftp.c	FUNCTION_18
0x4000b5e	              0x5b	                                 pop rbx	      1312	ftp.c	FUNCTION_18
0x4000b5f	              0x5d	                                 pop rbp	      1312	ftp.c	FUNCTION_18
0x4000b60	            0x415c	                                 pop r12	      1312	ftp.c	FUNCTION_18
0x4000b62	            0x415d	                                 pop r13	      1312	ftp.c	FUNCTION_18
0x4000b64	            0x415e	                                 pop r14	      1312	ftp.c	FUNCTION_18
0x4000b66	            0x415f	                                 pop r15	      1312	ftp.c	FUNCTION_18
0x4000b68	              0xc3	                                     ret	      1312	ftp.c	FUNCTION_18
0x4000b69	     0xf1f80000000	                         nop dword [rax]	      1312	ftp.c	FUNCTION_18
0x4000b70	            0x31c0	                            xor eax, eax	       955	ftp.c	FUNCTION_18
0x4000b72	            0x31db	                            xor ebx, ebx	       960	ftp.c	FUNCTION_18
0x4000b74	          0x4531ff	                          xor r15d, r15d	       956	ftp.c	FUNCTION_18
0x4000b77	      0x6689442412	               mov word [rsp + 0x12], ax	       955	ftp.c	FUNCTION_18
0x4000b7c	      0x4c8d642430	                   lea r12, [rsp + 0x30]	      1070	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_22
0x4000b81	    0x8bbd58020000	           mov edi, dword [rbp + 0x258] 	      1070	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_22
0x4000b87	      0x488d542424	                   lea rdx, [rsp + 0x24]	      1070	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_22
0x4000b8c	    0xc74424248000	           mov dword [rsp + 0x24], 0x80 	      1069	ftp.c	FUNCTION_18	ELSE_6	IF_13
0x4000b94	          0x4c89e6	                            mov rsi, r12	      1070	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_22
0x4000b97	      0xe800000000	                          call 0x4000b9c	      1070	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_22
0x4000b9c	            0x85c0	                           test eax, eax	      1070	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_22
0x4000b9e	     0xf853c020000	                           jne 0x4000de0	      1070	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_22
0x4000ba4	       0xfb7442430	           movzx eax, word [rsp + 0x30] 	      1076	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2
0x4000ba9	    0x4c8db424b005	                  lea r14, [rsp + 0x5b0]	      1079	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_26
0x4000bb1	        0x6683f80a	                             cmp ax, 0xa	      1076	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2
0x4000bb5	     0xf8545020000	                           jne 0x4000e00	      1076	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2
0x4000bbb	      0x498d742408	                      lea rsi, [r12 + 8]	      1079	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_26
0x4000bc0	      0xb901040000	                          mov ecx, 0x401	      1079	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_26
0x4000bc5	          0x4c89f2	                            mov rdx, r14	      1079	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_26
0x4000bc8	      0xbf0a000000	                            mov edi, 0xa	      1079	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_26
0x4000bcd	      0xe800000000	                          call 0x4000bd2	      1079	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_26
0x4000bd2	      0xc644241100	                mov byte [rsp + 0x11], 0	      1087	ftp.c	FUNCTION_18	ELSE_6	IF_13
0x4000bd7	      0xe9b9feffff	                           jmp 0x4000a95	      1080	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2
0x4000bdc	         0xf1f4000	                         nop dword [rax]	      1080	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2
0x4000be0	          0x4531ff	                          xor r15d, r15d	      1080	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2
0x4000be3	    0x6644897c2412	             mov word [rsp + 0x12], r15w	      1080	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2
0x4000be9	      0xe941feffff	                           jmp 0x4000a2f	      1080	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2
0x4000bee	            0x6690	                                     nop	      1080	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2
0x4000bf0	          0x4c89e6	                            mov rsi, r12	       110	string3.h	FUNCTION_72	CALL_3
0x4000bf3	          0x4889df	                            mov rdi, rbx	       110	string3.h	FUNCTION_72	CALL_3
0x4000bf6	      0xe800000000	                          call 0x4000bfb	       110	string3.h	FUNCTION_72	CALL_3
0x4000bfb	      0xe923feffff	                           jmp 0x4000a23	       110	string3.h	FUNCTION_72	CALL_3
0x4000c00	      0x418b542410	            mov edx, dword [r12 + 0x10] 	        53	string3.h	FUNCTION_66	CALL_3
0x4000c05	      0x498b742420	            mov rsi, qword [r12 + 0x20] 	        53	string3.h	FUNCTION_66	CALL_3
0x4000c0a	      0x4c8d742430	                   lea r14, [rsp + 0x30]	        53	string3.h	FUNCTION_66	CALL_3
0x4000c0f	      0xb980000000	                           mov ecx, 0x80	        53	string3.h	FUNCTION_66	CALL_3
0x4000c14	          0x4c89f7	                            mov rdi, r14	        53	string3.h	FUNCTION_66	CALL_3
0x4000c17	      0xe800000000	                          call 0x4000c1c	        53	string3.h	FUNCTION_66	CALL_3
0x4000c1c	       0xfb7442412	           movzx eax, word [rsp + 0x12] 	      1134	ftp.c	FUNCTION_18	FOR_2
0x4000c21	      0x418b542410	            mov edx, dword [r12 + 0x10] 	      1132	ftp.c	FUNCTION_18
0x4000c26	        0x89542424	             mov dword [rsp + 0x24], edx	      1132	ftp.c	FUNCTION_18
0x4000c2a	        0x664139c7	                            cmp r15w, ax	      1134	ftp.c	FUNCTION_18	FOR_2
0x4000c2e	     0xf827c010000	                            jb 0x4000db0	      1134	ftp.c	FUNCTION_18	FOR_2
0x4000c34	            0x89c3	                            mov ebx, eax	      1134	ftp.c	FUNCTION_18	FOR_2
0x4000c36	      0x488d442424	                   lea rax, [rsp + 0x24]	      1154	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_43
0x4000c3b	      0x4889442418	             mov qword [rsp + 0x18], rax	      1154	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_43
0x4000c40	            0xeb25	                           jmp 0x4000c67	      1154	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_43
0x4000c42	    0x660f1f440000	                    nop word [rax + rax]	      1154	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_43
0x4000c48	          0x83fe62	                           cmp esi, 0x62	      1164	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24
0x4000c4b	            0x7409	                            je 0x4000c56	      1164	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24
0x4000c4d	          0x83fe0d	                            cmp esi, 0xd	      1164	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24
0x4000c50	     0xf85ca010000	                           jne 0x4000e20	      1164	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24
0x4000c56	          0x83c301	                              add ebx, 1	      1174	ftp.c	FUNCTION_18	FOR_2	ELSE_9
0x4000c59	        0x664439fb	                            cmp bx, r15w	      1134	ftp.c	FUNCTION_18	FOR_2
0x4000c5d	     0xf874d010000	                            ja 0x4000db0	      1134	ftp.c	FUNCTION_18	FOR_2
0x4000c63	        0x8b542424	            mov edx, dword [rsp + 0x24] 	      1134	ftp.c	FUNCTION_18	FOR_2
0x4000c67	        0x8b7c2420	            mov edi, dword [rsp + 0x20] 	      1142	ftp.c	FUNCTION_18	FOR_2	IF_21	CALL_40
0x4000c6b	          0x4c89f6	                            mov rsi, r14	      1142	ftp.c	FUNCTION_18	FOR_2	IF_21	CALL_40
0x4000c6e	            0x89d8	                            mov eax, ebx	      1136	ftp.c	FUNCTION_18	FOR_2	CALL_38
0x4000c70	        0x66c1c808	                               ror ax, 8	      1136	ftp.c	FUNCTION_18	FOR_2	CALL_38
0x4000c74	      0x6689442432	               mov word [rsp + 0x32], ax	      1136	ftp.c	FUNCTION_18	FOR_2	CALL_38
0x4000c79	      0xe800000000	                          call 0x4000c7e	      1142	ftp.c	FUNCTION_18	FOR_2	IF_21	CALL_40
0x4000c7e	            0x85c0	                           test eax, eax	      1142	ftp.c	FUNCTION_18	FOR_2	IF_21	CALL_40
0x4000c80	     0xf84da010000	                            je 0x4000e60	      1142	ftp.c	FUNCTION_18	FOR_2	IF_21	CALL_40
0x4000c86	      0xe800000000	                          call 0x4000c8b	      1144	ftp.c	FUNCTION_18	FOR_2	IF_21
0x4000c8b	            0x8b30	                    mov esi, dword [rax]	      1144	ftp.c	FUNCTION_18	FOR_2	IF_21
0x4000c8d	      0x4889442408	                mov qword [rsp + 8], rax	      1144	ftp.c	FUNCTION_18	FOR_2	IF_21
0x4000c92	          0x83fe63	                           cmp esi, 0x63	      1145	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22
0x4000c95	            0x75b1	                           jne 0x4000c48	      1145	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22
0x4000c97	      0x807c241100	                cmp byte [rsp + 0x11], 0	      1145	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22
0x4000c9c	            0x74aa	                            je 0x4000c48	      1145	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22
0x4000c9e	          0x4889ef	                            mov rdi, rbp	      1150	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	CALL_41
0x4000ca1	      0xe800000000	                          call 0x4000ca6	      1150	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	CALL_41
0x4000ca6	    0x488d35000000	                   lea rsi, [0x04000cad]	      1150	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	CALL_41
0x4000cad	          0x4889c1	                            mov rcx, rax	      1150	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	CALL_41
0x4000cb0	           0xfb7d3	                           movzx edx, bx	      1150	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	CALL_41
0x4000cb3	            0x31c0	                            xor eax, eax	      1150	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	CALL_41
0x4000cb5	          0x4c89ef	                            mov rdi, r13	      1150	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	CALL_41
0x4000cb8	      0xe800000000	                          call 0x4000cbd	      1150	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	CALL_41
0x4000cbd	    0x8bbd58020000	           mov edi, dword [rbp + 0x258] 	      1154	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_43
0x4000cc3	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	      1154	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_43
0x4000cc8	          0x4c89f6	                            mov rsi, r14	      1154	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_43
0x4000ccb	    0xc74424248000	           mov dword [rsp + 0x24], 0x80 	      1153	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22
0x4000cd3	      0xe800000000	                          call 0x4000cd8	      1154	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_43
0x4000cd8	            0x85c0	                           test eax, eax	      1154	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_43
0x4000cda	            0x7514	                           jne 0x4000cf0	      1154	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_43
0x4000cdc	       0xfb75c2412	           movzx ebx, word [rsp + 0x12] 	      1154	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_43
0x4000ce1	      0xc644241100	                mov byte [rsp + 0x11], 0	      1161	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22
0x4000ce6	      0xe978ffffff	                           jmp 0x4000c63	      1161	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22
0x4000ceb	       0xf1f440000	                   nop dword [rax + rax]	      1161	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22
0x4000cf0	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      1155	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_44
0x4000cf5	          0x418b30	                     mov esi, dword [r8]	      1155	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_22	IF_23	CALL_44
0x4000cf8	          0x4889ef	                            mov rdi, rbp	      1188	ftp.c	FUNCTION_18	IF_26	CALL_53
0x4000cfb	      0xe800000000	                          call 0x4000d00	      1188	ftp.c	FUNCTION_18	IF_26	CALL_53
0x4000d00	    0x488d35000000	                   lea rsi, [0x04000d07]	      1188	ftp.c	FUNCTION_18	IF_26	CALL_53
0x4000d07	          0x4889c2	                            mov rdx, rax	      1188	ftp.c	FUNCTION_18	IF_26	CALL_53
0x4000d0a	          0x4c89ef	                            mov rdi, r13	      1188	ftp.c	FUNCTION_18	IF_26	CALL_53
0x4000d0d	            0x31c0	                            xor eax, eax	      1188	ftp.c	FUNCTION_18	IF_26	CALL_53
0x4000d0f	      0xe800000000	                          call 0x4000d14	      1188	ftp.c	FUNCTION_18	IF_26	CALL_53
0x4000d14	        0x8b742420	            mov esi, dword [rsp + 0x20] 	      1190	ftp.c	FUNCTION_18	IF_26	CALL_55
0x4000d18	          0x4889ef	                            mov rdi, rbp	      1190	ftp.c	FUNCTION_18	IF_26	CALL_55
0x4000d1b	      0xe800000000	                          call 0x4000d20	      1190	ftp.c	FUNCTION_18	IF_26	CALL_55
0x4000d20	      0xb81e000000	                           mov eax, 0x1e	      1191	ftp.c	FUNCTION_18	IF_26
0x4000d25	      0xe916feffff	                           jmp 0x4000b40	      1191	ftp.c	FUNCTION_18	IF_26
0x4000d2a	    0x660f1f440000	                    nop word [rax + rax]	      1191	ftp.c	FUNCTION_18	IF_26
0x4000d30	    0x488d35000000	                   lea rsi, [0x04000d37]	      1104	ftp.c	FUNCTION_18	ELSE_7	IF_17	CALL_31
0x4000d37	          0x4c89f2	                            mov rdx, r14	      1104	ftp.c	FUNCTION_18	ELSE_7	IF_17	CALL_31
0x4000d3a	          0x4c89ef	                            mov rdi, r13	      1104	ftp.c	FUNCTION_18	ELSE_7	IF_17	CALL_31
0x4000d3d	            0x31c0	                            xor eax, eax	      1104	ftp.c	FUNCTION_18	ELSE_7	IF_17	CALL_31
0x4000d3f	      0xe800000000	                          call 0x4000d44	      1104	ftp.c	FUNCTION_18	ELSE_7	IF_17	CALL_31
0x4000d44	    0x488b05000000	            mov rax, qword [0x04000d4b] 	      1105	ftp.c	FUNCTION_18	ELSE_7	IF_17	CALL_32
0x4000d4b	          0x4889df	                            mov rdi, rbx	      1105	ftp.c	FUNCTION_18	ELSE_7	IF_17	CALL_32
0x4000d4e	            0xff10	                        call qword [rax]	      1105	ftp.c	FUNCTION_18	ELSE_7	IF_17	CALL_32
0x4000d50	      0xb81e000000	                           mov eax, 0x1e	      1106	ftp.c	FUNCTION_18	ELSE_7	IF_17
0x4000d55	      0xe9e6fdffff	                           jmp 0x4000b40	      1106	ftp.c	FUNCTION_18	ELSE_7	IF_17
0x4000d5a	    0x660f1f440000	                    nop word [rax + rax]	      1106	ftp.c	FUNCTION_18	ELSE_7	IF_17
0x4000d60	      0xbe5d000000	                           mov esi, 0x5d	       990	ftp.c	FUNCTION_18	IF_1	IF_3	CALL_7
0x4000d65	          0x4c89e7	                            mov rdi, r12	       990	ftp.c	FUNCTION_18	IF_1	IF_3	CALL_7
0x4000d68	      0xe800000000	                          call 0x4000d6d	       990	ftp.c	FUNCTION_18	IF_1	IF_3	CALL_7
0x4000d6d	          0x4885c0	                           test rax, rax	       991	ftp.c	FUNCTION_18	IF_1	IF_3	IF_4
0x4000d70	          0x4989c6	                            mov r14, rax	       990	ftp.c	FUNCTION_18	IF_1	IF_3	CALL_7
0x4000d73	     0xf84aafcffff	                            je 0x4000a23	       991	ftp.c	FUNCTION_18	IF_1	IF_3	IF_4
0x4000d79	      0x498d742401	                      lea rsi, [r12 + 1]	       989	ftp.c	FUNCTION_18	IF_1	IF_3
0x4000d7e	          0x4889c2	                            mov rdx, rax	       126	string3.h	FUNCTION_74	CALL_3
0x4000d81	          0x4889df	                            mov rdi, rbx	       126	string3.h	FUNCTION_74	CALL_3
0x4000d84	          0x4d89f4	                            mov r12, r14	       126	string3.h	FUNCTION_74	CALL_3
0x4000d87	          0x4829f2	                            sub rdx, rsi	       126	string3.h	FUNCTION_74	CALL_3
0x4000d8a	      0xe800000000	                          call 0x4000d8f	       126	string3.h	FUNCTION_74	CALL_3
0x4000d8f	      0xe922fcffff	                           jmp 0x40009b6	       126	string3.h	FUNCTION_74	CALL_3
0x4000d94	         0xf1f4000	                         nop dword [rax]	       126	string3.h	FUNCTION_74	CALL_3
0x4000d98	          0x4c89e6	                            mov rsi, r12	      1093	ftp.c	FUNCTION_18	CALL_29
0x4000d9b	          0x4889ef	                            mov rdi, rbp	      1093	ftp.c	FUNCTION_18	CALL_29
0x4000d9e	      0xe800000000	                          call 0x4000da3	      1093	ftp.c	FUNCTION_18	CALL_29
0x4000da3	      0xe90bfdffff	                           jmp 0x4000ab3	      1093	ftp.c	FUNCTION_18	CALL_29
0x4000da8	     0xf1f84000000	                   nop dword [rax + rax]	      1093	ftp.c	FUNCTION_18	CALL_29
0x4000db0	    0x488d35000000	                   lea rsi, [0x04000db7]	      1179	ftp.c	FUNCTION_18	ELSE_9	IF_25	CALL_50
0x4000db7	          0x4c89ef	                            mov rdi, r13	      1179	ftp.c	FUNCTION_18	ELSE_9	IF_25	CALL_50
0x4000dba	            0x31c0	                            xor eax, eax	      1179	ftp.c	FUNCTION_18	ELSE_9	IF_25	CALL_50
0x4000dbc	      0xe800000000	                          call 0x4000dc1	      1179	ftp.c	FUNCTION_18	ELSE_9	IF_25	CALL_50
0x4000dc1	        0x8b742420	            mov esi, dword [rsp + 0x20] 	      1180	ftp.c	FUNCTION_18	ELSE_9	IF_25	CALL_51
0x4000dc5	          0x4889ef	                            mov rdi, rbp	      1180	ftp.c	FUNCTION_18	ELSE_9	IF_25	CALL_51
0x4000dc8	      0xe800000000	                          call 0x4000dcd	      1180	ftp.c	FUNCTION_18	ELSE_9	IF_25	CALL_51
0x4000dcd	      0xb81e000000	                           mov eax, 0x1e	      1181	ftp.c	FUNCTION_18	ELSE_9	IF_25
0x4000dd2	      0xe969fdffff	                           jmp 0x4000b40	      1181	ftp.c	FUNCTION_18	ELSE_9	IF_25
0x4000dd7	    0x660f1f840000	                    nop word [rax + rax]	      1181	ftp.c	FUNCTION_18	ELSE_9	IF_25
0x4000de0	      0xe800000000	                          call 0x4000de5	      1072	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_24
0x4000de5	            0x8b30	                    mov esi, dword [rax]	      1071	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_23
0x4000de7	          0x4889ef	                            mov rdi, rbp	      1071	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_23
0x4000dea	      0xe800000000	                          call 0x4000def	      1071	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_23
0x4000def	    0x488d35000000	                   lea rsi, [0x04000df6]	      1071	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_23
0x4000df6	          0x4889c2	                            mov rdx, rax	      1071	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_23
0x4000df9	      0xe93cffffff	                           jmp 0x4000d3a	      1071	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_23
0x4000dfe	            0x6690	                                     nop	      1071	ftp.c	FUNCTION_18	ELSE_6	IF_13	IF_14	CALL_23
0x4000e00	      0x498d742404	                      lea rsi, [r12 + 4]	      1083	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_27
0x4000e05	           0xfb7f8	                           movzx edi, ax	      1083	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_27
0x4000e08	      0xb901040000	                          mov ecx, 0x401	      1083	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_27
0x4000e0d	          0x4c89f2	                            mov rdx, r14	      1083	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_27
0x4000e10	      0xe800000000	                          call 0x4000e15	      1083	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2	CALL_27
0x4000e15	      0xc644241100	                mov byte [rsp + 0x11], 0	      1087	ftp.c	FUNCTION_18	ELSE_6	IF_13
0x4000e1a	      0xe976fcffff	                           jmp 0x4000a95	      1084	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2
0x4000e1f	              0x90	                                     nop	      1084	ftp.c	FUNCTION_18	ELSE_6	IF_13	SWITCH_2
0x4000e20	          0x4889ef	                            mov rdi, rbp	      1165	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24	CALL_47
0x4000e23	      0xe800000000	                          call 0x4000e28	      1165	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24	CALL_47
0x4000e28	    0x488d35000000	                   lea rsi, [0x04000e2f]	      1165	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24	CALL_47
0x4000e2f	          0x4889c1	                            mov rcx, rax	      1165	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24	CALL_47
0x4000e32	           0xfb7d3	                           movzx edx, bx	      1165	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24	CALL_47
0x4000e35	          0x4c89ef	                            mov rdi, r13	      1165	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24	CALL_47
0x4000e38	            0x31c0	                            xor eax, eax	      1165	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24	CALL_47
0x4000e3a	      0xe800000000	                          call 0x4000e3f	      1165	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24	CALL_47
0x4000e3f	        0x8b742420	            mov esi, dword [rsp + 0x20] 	      1167	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24	CALL_49
0x4000e43	          0x4889ef	                            mov rdi, rbp	      1167	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24	CALL_49
0x4000e46	      0xe800000000	                          call 0x4000e4b	      1167	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24	CALL_49
0x4000e4b	      0xb81e000000	                           mov eax, 0x1e	      1168	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24
0x4000e50	      0xe9ebfcffff	                           jmp 0x4000b40	      1168	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24
0x4000e55	           0xf1f00	                         nop dword [rax]	      1168	ftp.c	FUNCTION_18	FOR_2	IF_21	IF_24
0x4000e58	          0x4989de	                            mov r14, rbx	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x4000e5b	      0xe930fcffff	                           jmp 0x4000a90	      1047	ftp.c	FUNCTION_18	IF_1	IF_12	SWITCH_1	CALL_20
0x4000e60	        0x8b7c2420	            mov edi, dword [rsp + 0x20] 	      1187	ftp.c	FUNCTION_18	IF_26	CALL_52
0x4000e64	      0x488d542424	                   lea rdx, [rsp + 0x24]	      1187	ftp.c	FUNCTION_18	IF_26	CALL_52
0x4000e69	          0x4c89f6	                            mov rsi, r14	      1187	ftp.c	FUNCTION_18	IF_26	CALL_52
0x4000e6c	    0xc74424248000	           mov dword [rsp + 0x24], 0x80 	      1186	ftp.c	FUNCTION_18
0x4000e74	      0xe800000000	                          call 0x4000e79	      1187	ftp.c	FUNCTION_18	IF_26	CALL_52
0x4000e79	            0x85c0	                           test eax, eax	      1187	ftp.c	FUNCTION_18	IF_26	CALL_52
0x4000e7b	            0x740c	                            je 0x4000e89	      1187	ftp.c	FUNCTION_18	IF_26	CALL_52
0x4000e7d	      0xe800000000	                          call 0x4000e82	      1189	ftp.c	FUNCTION_18	IF_26	CALL_54
0x4000e82	            0x8b30	                    mov esi, dword [rax]	      1188	ftp.c	FUNCTION_18	IF_26	CALL_53
0x4000e84	      0xe96ffeffff	                           jmp 0x4000cf8	      1188	ftp.c	FUNCTION_18	IF_26	CALL_53
0x4000e89	        0x8b7c2420	            mov edi, dword [rsp + 0x20] 	      1196	ftp.c	FUNCTION_18	IF_27	CALL_56
0x4000e8d	      0xbe01000000	                              mov esi, 1	      1196	ftp.c	FUNCTION_18	IF_27	CALL_56
0x4000e92	      0xe800000000	                          call 0x4000e97	      1196	ftp.c	FUNCTION_18	IF_27	CALL_56
0x4000e97	            0x85c0	                           test eax, eax	      1196	ftp.c	FUNCTION_18	IF_27	CALL_56
0x4000e99	          0x4189c6	                           mov r14d, eax	      1196	ftp.c	FUNCTION_18	IF_27	CALL_56
0x4000e9c	            0x741e	                            je 0x4000ebc	      1196	ftp.c	FUNCTION_18	IF_27	CALL_56
0x4000e9e	      0xe800000000	                          call 0x4000ea3	      1197	ftp.c	FUNCTION_18	IF_27	CALL_58
0x4000ea3	            0x8b30	                    mov esi, dword [rax]	      1197	ftp.c	FUNCTION_18	IF_27	CALL_58
0x4000ea5	          0x4889ef	                            mov rdi, rbp	      1197	ftp.c	FUNCTION_18	IF_27	CALL_58
0x4000ea8	      0xe800000000	                          call 0x4000ead	      1197	ftp.c	FUNCTION_18	IF_27	CALL_58
0x4000ead	    0x488d35000000	                   lea rsi, [0x04000eb4]	      1197	ftp.c	FUNCTION_18	IF_27	CALL_58
0x4000eb4	          0x4889c2	                            mov rdx, rax	      1197	ftp.c	FUNCTION_18	IF_27	CALL_58
0x4000eb7	      0xe94efeffff	                           jmp 0x4000d0a	      1197	ftp.c	FUNCTION_18	IF_27	CALL_58
0x4000ebc	    0x488d9c24b000	                   lea rbx, [rsp + 0xb0]	      1206	ftp.c	FUNCTION_18	CALL_60
0x4000ec4	      0xba00010000	                          mov edx, 0x100	      1206	ftp.c	FUNCTION_18	CALL_60
0x4000ec9	          0x4c89e7	                            mov rdi, r12	      1206	ftp.c	FUNCTION_18	CALL_60
0x4000ecc	          0x4889de	                            mov rsi, rbx	      1206	ftp.c	FUNCTION_18	CALL_60
0x4000ecf	      0xe800000000	                          call 0x4000ed4	      1206	ftp.c	FUNCTION_18	CALL_60
0x4000ed4	    0x80bdad030000	               cmp byte [rbp + 0x3ad], 0	      1209	ftp.c	FUNCTION_18	IF_28
0x4000edb	            0x7510	                           jne 0x4000eed	      1209	ftp.c	FUNCTION_18	IF_28
0x4000edd	    0x80bda3030000	               cmp byte [rbp + 0x3a3], 0	      1209	ftp.c	FUNCTION_18	IF_28
0x4000ee4	            0x7407	                            je 0x4000eed	      1209	ftp.c	FUNCTION_18	IF_28
0x4000ee6	    0xc685ad030000	               mov byte [rbp + 0x3ad], 1	      1212	ftp.c	FUNCTION_18	IF_28
0x4000eed	      0x837c241402	               cmp dword [rsp + 0x14], 2	      1215	ftp.c	FUNCTION_18	FOR_3
0x4000ef2	            0x7478	                            je 0x4000f6c	      1215	ftp.c	FUNCTION_18	FOR_3
0x4000ef4	       0xfb7742432	           movzx esi, word [rsp + 0x32] 	      1231	ftp.c	FUNCTION_18	FOR_3	SWITCH_3	CALL_62
0x4000ef9	     0xfb68dad0300	          movzx ecx, byte [rbp + 0x3ad] 	      1231	ftp.c	FUNCTION_18	FOR_3	SWITCH_3	CALL_62
0x4000f00	        0x66c1ce08	                               ror si, 8	      1231	ftp.c	FUNCTION_18	FOR_3	SWITCH_3	CALL_62
0x4000f04	       0xfb7542430	           movzx edx, word [rsp + 0x30] 	      1225	ftp.c	FUNCTION_18	FOR_3	SWITCH_3
0x4000f09	            0x89f7	                            mov edi, esi	      1227	ftp.c	FUNCTION_18	FOR_3	SWITCH_3	CALL_61
0x4000f0b	            0xeb34	                           jmp 0x4000f41	      1227	ftp.c	FUNCTION_18	FOR_3	SWITCH_3	CALL_61
0x4000f0d	           0xf1f00	                         nop dword [rax]	      1227	ftp.c	FUNCTION_18	FOR_3	SWITCH_3	CALL_61
0x4000f10	        0x6683fa0a	                             cmp dx, 0xa	      1225	ftp.c	FUNCTION_18	FOR_3	SWITCH_3
0x4000f14	            0x751d	                           jne 0x4000f33	      1225	ftp.c	FUNCTION_18	FOR_3	SWITCH_3
0x4000f16	          0x4189f0	                            mov r8d, esi	      1231	ftp.c	FUNCTION_18	FOR_3	SWITCH_3	CALL_62
0x4000f19	      0xb80a000000	                            mov eax, 0xa	      1225	ftp.c	FUNCTION_18	FOR_3	SWITCH_3
0x4000f1e	      0x448b4c2414	            mov r9d, dword [rsp + 0x14] 	      1238	ftp.c	FUNCTION_18	FOR_3	IF_31
0x4000f23	          0x4585c9	                           test r9d, r9d	      1238	ftp.c	FUNCTION_18	FOR_3	IF_31
0x4000f26	     0xf8437010000	                            je 0x4001063	      1238	ftp.c	FUNCTION_18	FOR_3	IF_31
0x4000f2c	      0x837c241401	               cmp dword [rsp + 0x14], 1	      1262	ftp.c	FUNCTION_18	FOR_3	IF_33
0x4000f31	            0x747b	                            je 0x4000fae	      1262	ftp.c	FUNCTION_18	FOR_3	IF_33
0x4000f33	      0x8344241401	               add dword [rsp + 0x14], 1	      1215	ftp.c	FUNCTION_18	FOR_3
0x4000f38	        0x8b442414	            mov eax, dword [rsp + 0x14] 	      1215	ftp.c	FUNCTION_18	FOR_3
0x4000f3c	          0x83f802	                              cmp eax, 2	      1215	ftp.c	FUNCTION_18	FOR_3
0x4000f3f	            0x742b	                            je 0x4000f6c	      1215	ftp.c	FUNCTION_18	FOR_3
0x4000f41	      0x448b542414	           mov r10d, dword [rsp + 0x14] 	      1217	ftp.c	FUNCTION_18	FOR_3	IF_29
0x4000f46	          0x4585d2	                         test r10d, r10d	      1217	ftp.c	FUNCTION_18	FOR_3	IF_29
0x4000f49	           0xf94c0	                                 sete al	      1217	ftp.c	FUNCTION_18	FOR_3	IF_29
0x4000f4c	            0x38c1	                              cmp cl, al	      1217	ftp.c	FUNCTION_18	FOR_3	IF_29
0x4000f4e	            0x72e3	                            jb 0x4000f33	      1217	ftp.c	FUNCTION_18	FOR_3	IF_29
0x4000f50	        0x4183fa01	                             cmp r10d, 1	      1221	ftp.c	FUNCTION_18	FOR_3	IF_30
0x4000f54	            0x7410	                            je 0x4000f66	      1221	ftp.c	FUNCTION_18	FOR_3	IF_30
0x4000f56	        0x6683fa02	                               cmp dx, 2	      1225	ftp.c	FUNCTION_18	FOR_3	SWITCH_3
0x4000f5a	            0x75b4	                           jne 0x4000f10	      1225	ftp.c	FUNCTION_18	FOR_3	SWITCH_3
0x4000f5c	          0x4189f8	                            mov r8d, edi	      1227	ftp.c	FUNCTION_18	FOR_3	SWITCH_3	CALL_61
0x4000f5f	      0xb802000000	                              mov eax, 2	      1227	ftp.c	FUNCTION_18	FOR_3	SWITCH_3	CALL_61
0x4000f64	            0xebb8	                           jmp 0x4000f1e	      1227	ftp.c	FUNCTION_18	FOR_3	SWITCH_3	CALL_61
0x4000f66	        0x6683fa02	                               cmp dx, 2	      1221	ftp.c	FUNCTION_18	FOR_3	IF_30
0x4000f6a	            0x74f0	                            je 0x4000f5c	      1221	ftp.c	FUNCTION_18	FOR_3	IF_30
0x4000f6c	    0x41be02000000	                             mov r14d, 2	      1221	ftp.c	FUNCTION_18	FOR_3	IF_30
0x4000f72	    0x8bb55c020000	           mov esi, dword [rbp + 0x25c] 	       221	ftp.c	FUNCTION_1	IF_1
0x4000f78	    0x4489b5000700	          mov dword [rbp + 0x700], r14d 	      1292	ftp.c	FUNCTION_18
0x4000f7f	          0x83feff	             cmp esi, 0xffffffffffffffff	       221	ftp.c	FUNCTION_1	IF_1
0x4000f82	            0x7408	                            je 0x4000f8c	       221	ftp.c	FUNCTION_1	IF_1
0x4000f84	          0x4889ef	                            mov rdi, rbp	       222	ftp.c	FUNCTION_1	IF_1	CALL_1
0x4000f87	      0xe800000000	                          call 0x4000f8c	       222	ftp.c	FUNCTION_1	IF_1	CALL_1
0x4000f8c	        0x8b442420	            mov eax, dword [rsp + 0x20] 	      1299	ftp.c	FUNCTION_18
0x4000f90	    0xc685a6030000	               mov byte [rbp + 0x3a6], 1	      1308	ftp.c	FUNCTION_18
0x4000f97	    0xc7850c070000	          mov dword [rbp + 0x70c], 0x1c 	       794	ftp.c	ELSE_3	FUNCTION_12
0x4000fa1	    0x89855c020000	           mov dword [rbp + 0x25c], eax 	      1299	ftp.c	FUNCTION_18
0x4000fa7	            0x31c0	                            xor eax, eax	      1311	ftp.c	FUNCTION_18
0x4000fa9	      0xe992fbffff	                           jmp 0x4000b40	      1311	ftp.c	FUNCTION_18
0x4000fae	    0x4c8da424b001	                  lea r12, [rsp + 0x1b0]	      1311	ftp.c	FUNCTION_18
0x4000fb6	          0x4889da	                            mov rdx, rbx	      1311	ftp.c	FUNCTION_18
0x4000fb9	      0xb92c000000	                           mov ecx, 0x2c	      1269	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1	IF_34
0x4000fbe	          0x4c89e7	                            mov rdi, r12	      1269	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1	IF_34
0x4000fc1	            0xeb12	                           jmp 0x4000fd5	      1269	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1	IF_34
0x4000fc3	            0x3c2e	                            cmp al, 0x2e	      1269	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1	IF_34
0x4000fc5	           0xf44c1	                          cmove eax, ecx	      1269	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1	IF_34
0x4000fc8	        0x4883c701	                              add rdi, 1	      1272	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1
0x4000fcc	          0x8847ff	                  mov byte [rdi - 1], al	      1269	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1	IF_34
0x4000fcf	        0x4883c201	                              add rdx, 1	      1267	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1
0x4000fd3	            0x7407	                            je 0x4000fdc	      1267	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1
0x4000fd5	           0xfb602	                   movzx eax, byte [rdx]	      1267	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1
0x4000fd8	            0x84c0	                             test al, al	      1267	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1
0x4000fda	            0x75e7	                           jne 0x4000fc3	      1267	ftp.c	FUNCTION_18	FOR_3	IF_33	WHILE_1
0x4000fdc	          0x4c89c0	                             mov rax, r8	      1276	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_67
0x4000fdf	    0x488d15000000	                   lea rdx, [0x04000fe6]	      1276	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_67
0x4000fe6	          0xc60700	                       mov byte [rdi], 0	      1275	ftp.c	FUNCTION_18	FOR_3	IF_33
0x4000fe9	           0xfb6cc	                           movzx ecx, ah	      1276	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_67
0x4000fec	        0x450fb6c0	                          movzx r8d, r8b	      1276	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_67
0x4000ff0	      0xbe14000000	                           mov esi, 0x14	      1276	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_67
0x4000ff5	            0x31c0	                            xor eax, eax	      1276	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_67
0x4000ff7	    0x41be01000000	                             mov r14d, 1	      1276	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_67
0x4000ffd	      0xe800000000	                          call 0x4001002	      1276	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_67
0x4001002	    0x488dbd500600	                  lea rdi, [rbp + 0x650]	      1278	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_68
0x4001009	    0x488d15000000	                   lea rdx, [0x04001010]	      1278	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_68
0x4001010	    0x488d35000000	                   lea rsi, [0x04001017]	      1278	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_68
0x4001017	            0x31c0	                            xor eax, eax	      1278	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_68
0x4001019	          0x4c89e1	                            mov rcx, r12	      1278	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_68
0x400101c	      0xe800000000	                          call 0x4001021	      1278	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_68
0x4001021	            0x85c0	                           test eax, eax	      1279	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35
0x4001023	            0x89c3	                            mov ebx, eax	      1278	ftp.c	FUNCTION_18	FOR_3	IF_33	CALL_68
0x4001025	     0xf8447ffffff	                            je 0x4000f72	      1279	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35
0x400102b	            0x89c7	                            mov edi, eax	      1280	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35	CALL_69
0x400102d	      0xe800000000	                          call 0x4001032	      1280	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35	CALL_69
0x4001032	    0x488d35000000	                   lea rsi, [0x04001039]	      1280	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35	CALL_69
0x4001039	          0x4889c2	                            mov rdx, rax	      1280	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35	CALL_69
0x400103c	          0x4c89ef	                            mov rdi, r13	      1280	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35	CALL_69
0x400103f	            0x31c0	                            xor eax, eax	      1280	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35	CALL_69
0x4001041	      0xe800000000	                          call 0x4001046	      1280	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35	CALL_69
0x4001046	        0x8b742420	            mov esi, dword [rsp + 0x20] 	      1282	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35	CALL_71
0x400104a	          0x4889ef	                            mov rdi, rbp	      1282	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35	CALL_71
0x400104d	      0xe800000000	                          call 0x4001052	      1282	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35	CALL_71
0x4001052	    0xc7850c070000	              mov dword [rbp + 0x70c], 0	       794	ftp.c	ELSE_3	FUNCTION_12
0x400105c	            0x89d8	                            mov eax, ebx	      1285	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35
0x400105e	      0xe9ddfaffff	                           jmp 0x4000b40	      1285	ftp.c	FUNCTION_18	FOR_3	IF_33	IF_35
0x4001063	            0x31c9	                            xor ecx, ecx	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001065	        0x6683f802	                               cmp ax, 2	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001069	    0x488dbd500600	                  lea rdi, [rbp + 0x650]	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001070	           0xf95c1	                                setne cl	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001073	    0x488d15000000	                   lea rdx, [0x0400107a]	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x400107a	    0x488d35000000	                   lea rsi, [0x04001081]	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001081	          0x83c101	                              add ecx, 1	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001084	        0x450fb7c8	                          movzx r9d, r8w	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001088	            0x31c0	                            xor eax, eax	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x400108a	          0x4989d8	                             mov r8, rbx	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x400108d	      0xe800000000	                          call 0x4001092	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001092	            0x85c0	                           test eax, eax	      1250	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32
0x4001094	            0x89c3	                            mov ebx, eax	      1247	ftp.c	FUNCTION_18	FOR_3	IF_31	CALL_63
0x4001096	     0xf84d6feffff	                            je 0x4000f72	      1250	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32
0x400109c	            0x89c7	                            mov edi, eax	      1251	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32	CALL_64
0x400109e	      0xe800000000	                          call 0x40010a3	      1251	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32	CALL_64
0x40010a3	    0x488d35000000	                   lea rsi, [0x040010aa]	      1251	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32	CALL_64
0x40010aa	          0x4889c2	                            mov rdx, rax	      1251	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32	CALL_64
0x40010ad	          0x4c89ef	                            mov rdi, r13	      1251	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32	CALL_64
0x40010b0	            0x31c0	                            xor eax, eax	      1251	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32	CALL_64
0x40010b2	      0xe800000000	                          call 0x40010b7	      1251	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32	CALL_64
0x40010b7	        0x8b742420	            mov esi, dword [rsp + 0x20] 	      1253	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32	CALL_66
0x40010bb	          0x4889ef	                            mov rdi, rbp	      1253	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32	CALL_66
0x40010be	      0xe800000000	                          call 0x40010c3	      1253	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32	CALL_66
0x40010c3	    0xc78500070000	              mov dword [rbp + 0x700], 1	      1255	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32
0x40010cd	    0xc7850c070000	              mov dword [rbp + 0x70c], 0	       794	ftp.c	ELSE_3	FUNCTION_12
0x40010d7	            0x89d8	                            mov eax, ebx	      1258	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32
0x40010d9	      0xe962faffff	                           jmp 0x4000b40	      1258	ftp.c	FUNCTION_18	FOR_3	IF_31	IF_32
0x40010de	      0xe800000000	                          call 0x40010e3	      1312	ftp.c	FUNCTION_18
0x40010e3	    0x6644897c2412	             mov word [rsp + 0x12], r15w	      1312	ftp.c	FUNCTION_18
0x40010e9	          0x4189c7	                           mov r15d, eax	      1312	ftp.c	FUNCTION_18
0x40010ec	      0xe93ef9ffff	                           jmp 0x4000a2f	      1312	ftp.c	FUNCTION_18
ftp_statemach_act	WHILE,2:SWITCH,2:IF,42:ELSE,15:FOR,2:CALL,58:functions,0:DO,0	998
0x4003500	            0x4157	                                push r15	      2604	ftp.c	FUNCTION_44
0x4003502	            0x4156	                                push r14	      2604	ftp.c	FUNCTION_44
0x4003504	            0x4155	                                push r13	      2604	ftp.c	FUNCTION_44
0x4003506	            0x4154	                                push r12	      2604	ftp.c	FUNCTION_44
0x4003508	              0x55	                                push rbp	      2604	ftp.c	FUNCTION_44
0x4003509	              0x53	                                push rbx	      2604	ftp.c	FUNCTION_44
0x400350a	          0x4889fb	                            mov rbx, rdi	      2604	ftp.c	FUNCTION_44
0x400350d	    0x4c8dbb500600	                  lea r15, [rbx + 0x650]	      2610	ftp.c	FUNCTION_44
0x4003514	    0x4881ec080100	                          sub rsp, 0x108	      2604	ftp.c	FUNCTION_44
0x400351b	    0x8bbf58020000	           mov edi, dword [rdi + 0x258] 	      2606	ftp.c	FUNCTION_44
0x4003521	    0x64488b042528	                mov rax, qword fs:[0x28]	      2604	ftp.c	FUNCTION_44
0x400352a	    0x48898424f800	             mov qword [rsp + 0xf8], rax	      2604	ftp.c	FUNCTION_44
0x4003532	            0x31c0	                            xor eax, eax	      2604	ftp.c	FUNCTION_44
0x4003534	    0x4883bb800600	              cmp qword [rbx + 0x680], 0	      2614	ftp.c	FUNCTION_44	IF_1
0x400353c	          0x488b03	                    mov rax, qword [rbx]	      2607	ftp.c	FUNCTION_44
0x400353f	    0x48c744242800	               mov qword [rsp + 0x28], 0	      2612	ftp.c	FUNCTION_44
0x4003548	      0x4889442408	                mov qword [rsp + 8], rax	      2607	ftp.c	FUNCTION_44
0x400354d	     0xf854d010000	                           jne 0x40036a0	      2614	ftp.c	FUNCTION_44	IF_1
0x4003553	    0x488baba80600	           mov rbp, qword [rbx + 0x6a8] 	       569	ftp.c	FUNCTION_10
0x400355a	      0x4c8d742430	                   lea r14, [rsp + 0x30]	       577	ftp.c	FUNCTION_10	CALL_1
0x400355f	      0x488d4c2428	                   lea rcx, [rsp + 0x28]	       577	ftp.c	FUNCTION_10	CALL_1
0x4003564	          0x4c89fe	                            mov rsi, r15	       577	ftp.c	FUNCTION_10	CALL_1
0x4003567	          0x4c89f2	                            mov rdx, r14	       577	ftp.c	FUNCTION_10	CALL_1
0x400356a	        0x4c8b6d00	                    mov r13, qword [rbp]	       570	ftp.c	FUNCTION_10
0x400356e	      0xe800000000	                          call 0x4003573	       577	ftp.c	FUNCTION_10	CALL_1
0x4003573	      0x448b642430	           mov r12d, dword [rsp + 0x30] 	       599	ftp.c	FUNCTION_10
0x4003578	    0x4181fca50100	                         cmp r12d, 0x1a5	       604	ftp.c	FUNCTION_10	IF_2
0x400357f	    0x4589a5d85100	         mov dword [r13 + 0x51d8], r12d 	       599	ftp.c	FUNCTION_10
0x4003586	     0xf8424010000	                            je 0x40036b0	       604	ftp.c	FUNCTION_10	IF_2
0x400358c	            0x85c0	                           test eax, eax	      2618	ftp.c	FUNCTION_44	IF_2
0x400358e	     0xf858c010000	                           jne 0x4003720	      2618	ftp.c	FUNCTION_44	IF_2
0x4003594	            0x31ed	                            xor ebp, ebp	      2618	ftp.c	FUNCTION_44	IF_2
0x4003596	          0x4585e4	                         test r12d, r12d	      2621	ftp.c	FUNCTION_44	IF_3
0x4003599	     0xf84d1000000	                            je 0x4003670	      2621	ftp.c	FUNCTION_44	IF_3
0x400359f	    0x8bab0c070000	           mov ebp, dword [rbx + 0x70c] 	      2623	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x40035a5	          0x83fd21	                           cmp ebp, 0x21	      2623	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x40035a8	     0xf87ee040000	                            ja 0x4003a9c	      2623	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x40035ae	    0x488d05000000	                   lea rax, [0x040035b5]	      2623	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x40035b5	            0x89ea	                            mov edx, ebp	      2623	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x40035b7	        0x48631490	         movsxd rdx, dword [rax + rdx*4]	      2623	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x40035bb	          0x4801d0	                            add rax, rdx	      2623	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x40035be	            0xffe0	                                 jmp rax	      2623	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x40035c0	      0x488b442408	                mov rax, qword [rsp + 8]	      2652	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x40035c5	    0x448b90f00700	          mov r10d, dword [rax + 0x7f0] 	      2652	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x40035cc	          0x4585d2	                         test r10d, r10d	      2652	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x40035cf	     0xf843c010000	                            je 0x4003711	      2652	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x40035d5	    0x80bb90020000	               cmp byte [rbx + 0x290], 0	      2652	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x40035dc	            0x741a	                            je 0x40035f8	      2652	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x40035de	    0x80bbb9030000	               cmp byte [rbx + 0x3b9], 0	      2653	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x40035e5	     0xf8426010000	                            je 0x4003711	      2653	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x40035eb	    0x80bbc0020000	               cmp byte [rbx + 0x2c0], 0	      2654	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x40035f2	     0xf8519010000	                           jne 0x4003711	      2654	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x40035f8	      0x488b442408	                mov rax, qword [rsp + 8]	      2660	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x40035fd	    0xc78308070000	              mov dword [rbx + 0x708], 0	      2659	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4003607	    0x8b90f4070000	           mov edx, dword [rax + 0x7f4] 	      2660	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x400360d	          0x83fa01	                              cmp edx, 1	      2660	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4003610	     0xf864d0f0000	                           jbe 0x4004563	      2660	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4003616	          0x83fa02	                              cmp edx, 2	      2660	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4003619	     0xf85270f0000	                           jne 0x4004546	      2660	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x400361f	    0xc78304070000	    mov dword [rbx + 0x704], 0xffffffff 	      2667	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4003629	    0xc78300070000	              mov dword [rbx + 0x700], 1	      2668	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4003633	    0x486393000700	        movsxd rdx, dword [rbx + 0x700] 	      2675	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x400363a	    0x488d05000000	                   lea rax, [0x04003641]	      2675	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4003641	    0x488d35000000	                   lea rsi, [0x04003648]	      2675	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4003648	          0x4c89ff	                            mov rdi, r15	      2675	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x400364b	        0x488d1490	                  lea rdx, [rax + rdx*4]	      2675	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x400364f	            0x31c0	                            xor eax, eax	      2675	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4003651	      0xe800000000	                          call 0x4003656	      2675	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4003656	            0x85c0	                           test eax, eax	      2675	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x4003658	            0x89c5	                            mov ebp, eax	      2675	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x400365a	            0x7514	                           jne 0x4003670	      2675	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8
0x400365c	    0xc7830c070000	              mov dword [rbx + 0x70c], 2	       794	ftp.c	ELSE_3	FUNCTION_12
0x4003666	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       794	ftp.c	ELSE_3	FUNCTION_12
0x4003670	    0x488bb424f800	            mov rsi, qword [rsp + 0xf8] 	      3049	ftp.c	FUNCTION_44
0x4003678	    0x644833342528	                xor rsi, qword fs:[0x28]	      3049	ftp.c	FUNCTION_44
0x4003681	            0x89e8	                            mov eax, ebp	      3049	ftp.c	FUNCTION_44
0x4003683	     0xf85f30e0000	                           jne 0x400457c	      3049	ftp.c	FUNCTION_44
0x4003689	    0x4881c4080100	                          add rsp, 0x108	      3049	ftp.c	FUNCTION_44
0x4003690	              0x5b	                                 pop rbx	      3049	ftp.c	FUNCTION_44
0x4003691	              0x5d	                                 pop rbp	      3049	ftp.c	FUNCTION_44
0x4003692	            0x415c	                                 pop r12	      3049	ftp.c	FUNCTION_44
0x4003694	            0x415d	                                 pop r13	      3049	ftp.c	FUNCTION_44
0x4003696	            0x415e	                                 pop r14	      3049	ftp.c	FUNCTION_44
0x4003698	            0x415f	                                 pop r15	      3049	ftp.c	FUNCTION_44
0x400369a	              0xc3	                                     ret	      3049	ftp.c	FUNCTION_44
0x400369b	       0xf1f440000	                   nop dword [rax + rax]	      3049	ftp.c	FUNCTION_44
0x40036a0	          0x4c89ff	                            mov rdi, r15	      2615	ftp.c	FUNCTION_44	CALL_1
0x40036a3	      0xe800000000	                          call 0x40036a8	      2615	ftp.c	FUNCTION_44	CALL_1
0x40036a8	            0x89c5	                            mov ebp, eax	      2615	ftp.c	FUNCTION_44	CALL_1
0x40036aa	            0xebc4	                           jmp 0x4003670	      2615	ftp.c	FUNCTION_44	CALL_1
0x40036ac	         0xf1f4000	                         nop dword [rax]	      2615	ftp.c	FUNCTION_44	CALL_1
0x40036b0	    0x488d35000000	                   lea rsi, [0x040036b7]	       612	ftp.c	FUNCTION_10	IF_2	CALL_5
0x40036b7	          0x4c89ef	                            mov rdi, r13	       612	ftp.c	FUNCTION_10	IF_2	CALL_5
0x40036ba	            0x31c0	                            xor eax, eax	       612	ftp.c	FUNCTION_10	IF_2	CALL_5
0x40036bc	      0xe800000000	                          call 0x40036c1	       612	ftp.c	FUNCTION_10	IF_2	CALL_5
0x40036c1	    0xc7850c070000	              mov dword [rbp + 0x70c], 0	       794	ftp.c	ELSE_3	FUNCTION_12
0x40036cb	      0xbd1c000000	                           mov ebp, 0x1c	       614	ftp.c	FUNCTION_10	IF_2
0x40036d0	            0xeb9e	                           jmp 0x4003670	       614	ftp.c	FUNCTION_10	IF_2
0x40036d2	    0x4181fcea0000	                          cmp r12d, 0xea	      2696	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10
0x40036d9	     0xf840b0a0000	                            je 0x40040ea	      2696	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10
0x40036df	    0x4181fc4e0100	                         cmp r12d, 0x14e	      2696	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10
0x40036e6	     0xf84fe090000	                            je 0x40040ea	      2696	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10
0x40036ec	    0x8b8308070000	           mov eax, dword [rbx + 0x708] 	      2704	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12
0x40036f2	            0x85c0	                           test eax, eax	      2704	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12
0x40036f4	     0xf8e240c0000	                           jle 0x400431e	      2704	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12
0x40036fa	      0x488b442408	                mov rax, qword [rsp + 8]	      2711	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_5	IF_13
0x40036ff	      0xbd40000000	                           mov ebp, 0x40	      2713	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_5	IF_13
0x4003704	    0x83b8f0070000	              cmp dword [rax + 0x7f0], 1	      2711	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_5	IF_13
0x400370b	     0xf875fffffff	                            ja 0x4003670	      2711	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_5	IF_13
0x4003711	          0x4889df	                            mov rdi, rbx	      2701	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10	IF_11	CALL_13
0x4003714	      0xe8f7c9ffff	                 call sym.ftp_state_user	      2701	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10	IF_11	CALL_13
0x4003719	     0xf1f80000000	                         nop dword [rax]	      2701	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10	IF_11	CALL_13
0x4003720	            0x89c5	                            mov ebp, eax	      2701	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10	IF_11	CALL_13
0x4003722	      0xe949ffffff	                           jmp 0x4003670	      2701	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10	IF_11	CALL_13
0x4003727	    0x4181fc8f0100	                         cmp r12d, 0x18f	      2343	ftp.c	FUNCTION_39	IF_1
0x400372e	          0x4c8b2b	                    mov r13, qword [rbx]	      2341	ftp.c	FUNCTION_39
0x4003731	     0xf8fab070000	                            jg 0x4003ee2	      2343	ftp.c	FUNCTION_39	IF_1
0x4003737	    0xc78310070000	          mov dword [rbx + 0x710], 0x21 	      2350	ftp.c	FUNCTION_39
0x4003741	    0x4180bdd70700	               cmp byte [r13 + 0x7d7], 0	      2353	ftp.c	FUNCTION_39	IF_2
0x4003749	     0xf8431060000	                            je 0x4003d80	      2353	ftp.c	FUNCTION_39	IF_2
0x400374f	    0xc7830c070000	              mov dword [rbx + 0x70c], 0	       794	ftp.c	ELSE_3	FUNCTION_12
0x4003759	          0x4c89f6	                            mov rsi, r14	      2358	ftp.c	FUNCTION_39	IF_2	CALL_2
0x400375c	          0x4889df	                            mov rdi, rbx	      2358	ftp.c	FUNCTION_39	IF_2	CALL_2
0x400375f	      0xe85cf8ffff	             call sym.AllowServerConnect	      2358	ftp.c	FUNCTION_39	IF_2	CALL_2
0x4003764	            0x85c0	                           test eax, eax	      2359	ftp.c	FUNCTION_39	IF_2	IF_3
0x4003766	            0x89c5	                            mov ebp, eax	      2358	ftp.c	FUNCTION_39	IF_2	CALL_2
0x4003768	     0xf8502ffffff	                           jne 0x4003670	      2359	ftp.c	FUNCTION_39	IF_2	IF_3
0x400376e	      0x807c243000	                cmp byte [rsp + 0x30], 0	      2362	ftp.c	FUNCTION_39	IF_2	IF_4
0x4003773	     0xf85f7feffff	                           jne 0x4003670	      2362	ftp.c	FUNCTION_39	IF_2	IF_4
0x4003779	    0x488d35000000	                   lea rsi, [0x04003780]	      2364	ftp.c	FUNCTION_39	IF_2	IF_4	CALL_3
0x4003780	          0x4c89ef	                            mov rdi, r13	      2364	ftp.c	FUNCTION_39	IF_2	IF_4	CALL_3
0x4003783	            0x31c0	                            xor eax, eax	      2364	ftp.c	FUNCTION_39	IF_2	IF_4	CALL_3
0x4003785	      0xe800000000	                          call 0x400378a	      2364	ftp.c	FUNCTION_39	IF_2	IF_4	CALL_3
0x400378a	    0xc683e9060000	               mov byte [rbx + 0x6e9], 1	      2365	ftp.c	FUNCTION_39	IF_2	IF_4
0x4003791	      0xe9dafeffff	                           jmp 0x4003670	      2365	ftp.c	FUNCTION_39	IF_2	IF_4
0x4003796	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      2365	ftp.c	FUNCTION_39	IF_2	IF_4
0x40037a0	    0x4181fce60000	                          cmp r12d, 0xe6	      2625	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_4
0x40037a7	     0xf84150c0000	                            je 0x40043c2	      2625	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_4
0x40037ad	    0x4181fcdc0000	                          cmp r12d, 0xdc	      2628	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_1	IF_5
0x40037b4	     0xf8406feffff	                            je 0x40035c0	      2628	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_1	IF_5
0x40037ba	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2629	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_1	IF_5	CALL_4
0x40037bf	    0x488d35000000	                   lea rsi, [0x040037c6]	      2629	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_1	IF_5	CALL_4
0x40037c6	          0x4489e2	                           mov edx, r12d	      2629	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_1	IF_5	CALL_4
0x40037c9	            0x31c0	                            xor eax, eax	      2629	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_1	IF_5	CALL_4
0x40037cb	      0xbd08000000	                              mov ebp, 8	      2631	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_1	IF_5
0x40037d0	      0xe800000000	                          call 0x40037d5	      2629	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_1	IF_5	CALL_4
0x40037d5	      0xe996feffff	                           jmp 0x4003670	      2631	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_1	IF_5
0x40037da	          0x4489e6	                           mov esi, r12d	      2725	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_16
0x40037dd	          0x4889df	                            mov rdi, rbx	      2725	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_16
0x40037e0	      0xe8ebe2ffff	     call sym.ftp_state_user_resp.isra.1	      2725	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_16
0x40037e5	            0x89c5	                            mov ebp, eax	      2725	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_16
0x40037e7	      0xe984feffff	                           jmp 0x4003670	      2726	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x40037ec	    0x4181fce60000	                          cmp r12d, 0xe6	      2592	ftp.c	FUNCTION_43	IF_1
0x40037f3	          0x488b3b	                    mov rdi, qword [rbx]	      2591	ftp.c	FUNCTION_43
0x40037f6	     0xf84b80a0000	                            je 0x40042b4	      2592	ftp.c	FUNCTION_43	IF_1
0x40037fc	    0x488d35000000	                   lea rsi, [0x04003803]	      2593	ftp.c	FUNCTION_43	IF_1	CALL_1
0x4003803	          0x4489e2	                           mov edx, r12d	      2593	ftp.c	FUNCTION_43	IF_1	CALL_1
0x4003806	            0x31c0	                            xor eax, eax	      2593	ftp.c	FUNCTION_43	IF_1	CALL_1
0x4003808	      0xbd0b000000	                            mov ebp, 0xb	      2594	ftp.c	FUNCTION_43	IF_1
0x400380d	      0xe800000000	                          call 0x4003812	      2593	ftp.c	FUNCTION_43	IF_1	CALL_1
0x4003812	      0xe959feffff	                           jmp 0x4003670	      2593	ftp.c	FUNCTION_43	IF_1	CALL_1
0x4003817	      0x488b442408	                mov rax, qword [rsp + 8]	      2733	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x400381c	      0xba43000000	                           mov edx, 0x43	      2733	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4003821	    0x488d35000000	                   lea rsi, [0x04003828]	      2733	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4003828	          0x4c89ff	                            mov rdi, r15	      2733	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x400382b	    0x83b8f0070000	              cmp dword [rax + 0x7f0], 2	      2733	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4003832	      0xb850000000	                           mov eax, 0x50	      2733	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4003837	           0xf45d0	                         cmovne edx, eax	      2733	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x400383a	            0x31c0	                            xor eax, eax	      2733	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x400383c	      0xe800000000	                          call 0x4003841	      2733	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4003841	            0x85c0	                           test eax, eax	      2733	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4003843	            0x89c5	                            mov ebp, eax	      2733	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4003845	     0xf8525feffff	                           jne 0x4003670	      2733	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x400384b	    0xc7830c070000	              mov dword [rbx + 0x70c], 7	       794	ftp.c	ELSE_3	FUNCTION_12
0x4003855	      0xe916feffff	                           jmp 0x4003670	       794	ftp.c	ELSE_3	FUNCTION_12
0x400385a	    0x4181ecc80000	                          sub r12d, 0xc8	      2740	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_15
0x4003861	        0x4183fc63	                          cmp r12d, 0x63	      2740	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_15
0x4003865	     0xf8733060000	                            ja 0x4003e9e	      2740	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_15
0x400386b	      0x488b442408	                mov rax, qword [rsp + 8]	      2742	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_15
0x4003870	    0x83b8f0070000	              cmp dword [rax + 0x7f0], 2	      2742	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_15
0x4003877	     0xf9583ae0300	                setne byte [rbx + 0x3ae]	      2742	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_15
0x400387e	      0x488b442408	                mov rax, qword [rsp + 8]	      2750	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17
0x4003883	    0x448b88f80700	           mov r9d, dword [rax + 0x7f8] 	      2750	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17
0x400388a	          0x4585c9	                           test r9d, r9d	      2750	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17
0x400388d	            0x744e	                            je 0x40038dd	      2750	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17
0x400388f	    0x488d15000000	                   lea rdx, [0x04003896]	      2753	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17
0x4003896	    0x488d35000000	                   lea rsi, [0x0400389d]	      2753	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17
0x400389d	            0x31c0	                            xor eax, eax	      2753	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17
0x400389f	          0x4c89ff	                            mov rdi, r15	      2753	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17
0x40038a2	      0xe800000000	                          call 0x40038a7	      2753	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17
0x40038a7	            0x85c0	                           test eax, eax	      2753	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17
0x40038a9	            0x89c5	                            mov ebp, eax	      2753	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17
0x40038ab	     0xf85bffdffff	                           jne 0x4003670	      2753	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_17
0x40038b1	    0xc7830c070000	              mov dword [rbx + 0x70c], 8	       794	ftp.c	ELSE_3	FUNCTION_12
0x40038bb	      0xe9b0fdffff	                           jmp 0x4003670	       794	ftp.c	ELSE_3	FUNCTION_12
0x40038c0	    0x4181fcf30100	                         cmp r12d, 0x1f3	      2764	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_19
0x40038c7	            0x7f14	                            jg 0x40038dd	      2764	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_19
0x40038c9	            0x31f6	                            xor esi, esi	      2766	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_19	CALL_19
0x40038cb	          0x4889df	                            mov rdi, rbx	      2766	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_19	CALL_19
0x40038ce	      0xe800000000	                          call 0x40038d3	      2766	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_19	CALL_19
0x40038d3	            0x85c0	                           test eax, eax	      2768	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_19	IF_20
0x40038d5	            0x89c5	                            mov ebp, eax	      2766	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_19	CALL_19
0x40038d7	     0xf852b0a0000	                           jne 0x4004308	      2768	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_19	IF_20
0x40038dd	    0x488d15000000	                   lea rdx, [0x040038e4]	       815	ftp.c	FUNCTION_14
0x40038e4	    0x488d35000000	                   lea rsi, [0x040038eb]	       815	ftp.c	FUNCTION_14
0x40038eb	            0x31c0	                            xor eax, eax	       815	ftp.c	FUNCTION_14
0x40038ed	          0x4c89ff	                            mov rdi, r15	       815	ftp.c	FUNCTION_14
0x40038f0	      0xe800000000	                          call 0x40038f5	       815	ftp.c	FUNCTION_14
0x40038f5	            0x85c0	                           test eax, eax	       815	ftp.c	FUNCTION_14
0x40038f7	            0x89c5	                            mov ebp, eax	       815	ftp.c	FUNCTION_14
0x40038f9	     0xf8571fdffff	                           jne 0x4003670	       815	ftp.c	FUNCTION_14
0x40038ff	    0xc7830c070000	              mov dword [rbx + 0x70c], 9	       794	ftp.c	ELSE_3	FUNCTION_12
0x4003909	      0xe962fdffff	                           jmp 0x4003670	       794	ftp.c	ELSE_3	FUNCTION_12
0x400390e	          0x4c8b3b	                    mov r15, qword [rbx]	      2048	ftp.c	FUNCTION_34
0x4003911	    0x4181fcd50000	                          cmp r12d, 0xd5	      2052	ftp.c	FUNCTION_34	SWITCH_1
0x4003918	    0x4d8bafe80100	           mov r13, qword [r15 + 0x1e8] 	      2049	ftp.c	FUNCTION_34
0x400391f	     0xf846f060000	                            je 0x4003f94	      2052	ftp.c	FUNCTION_34	SWITCH_1
0x4003925	    0x4181fc260200	                         cmp r12d, 0x226	      2052	ftp.c	FUNCTION_34	SWITCH_1
0x400392c	     0xf853b060000	                           jne 0x4003f6d	      2052	ftp.c	FUNCTION_34	SWITCH_1
0x4003932	    0x488d35000000	                   lea rsi, [0x04003939]	      2109	ftp.c	FUNCTION_34	SWITCH_1	CALL_9
0x4003939	            0x31c0	                            xor eax, eax	      2109	ftp.c	FUNCTION_34	SWITCH_1	CALL_9
0x400393b	          0x4c89ff	                            mov rdi, r15	      2109	ftp.c	FUNCTION_34	SWITCH_1	CALL_9
0x400393e	      0xbd13000000	                           mov ebp, 0x13	      2110	ftp.c	FUNCTION_34	SWITCH_1
0x4003943	      0xe800000000	                          call 0x4003948	      2109	ftp.c	FUNCTION_34	SWITCH_1	CALL_9
0x4003948	    0x418b87c00500	           mov eax, dword [r15 + 0x5c0] 	      2114	ftp.c	FUNCTION_34	IF_5
0x400394f	            0x85c0	                           test eax, eax	      2114	ftp.c	FUNCTION_34	IF_5
0x4003951	     0xf8419fdffff	                            je 0x4003670	      2114	ftp.c	FUNCTION_34	IF_5
0x4003957	    0x498b8fe85100	          mov rcx, qword [r15 + 0x51e8] 	      2115	ftp.c	FUNCTION_34	IF_5	IF_6
0x400395e	          0x4885c9	                           test rcx, rcx	      2115	ftp.c	FUNCTION_34	IF_5	IF_6
0x4003961	     0xf8e28090000	                           jle 0x400428f	      2115	ftp.c	FUNCTION_34	IF_5	IF_6
0x4003967	    0x498b97c80500	           mov rdx, qword [r15 + 0x5c8] 	      2115	ftp.c	FUNCTION_34	IF_5	IF_6
0x400396e	          0x4885d2	                           test rdx, rdx	      2115	ftp.c	FUNCTION_34	IF_5	IF_6
0x4003971	     0xf8e18090000	                           jle 0x400428f	      2115	ftp.c	FUNCTION_34	IF_5	IF_6
0x4003977	          0x83f802	                              cmp eax, 2	      2116	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2
0x400397a	     0xf8443090000	                            je 0x40042c3	      2116	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2
0x4003980	          0x4839d1	                            cmp rcx, rdx	      2119	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_7
0x4003983	    0x488d35000000	                   lea rsi, [0x0400398a]	      2120	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_7	CALL_10
0x400398a	     0xf8e43090000	                           jle 0x40042d3	      2119	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_7
0x4003990	            0x85ed	                           test ebp, ebp	      2143	ftp.c	FUNCTION_34	IF_9
0x4003992	     0xf85d8fcffff	                           jne 0x4003670	      2143	ftp.c	FUNCTION_34	IF_9
0x4003998	          0x4889df	                            mov rdi, rbx	      2144	ftp.c	FUNCTION_34	CALL_13
0x400399b	      0xe800ebffff	                 call sym.ftp_state_type	      2144	ftp.c	FUNCTION_34	CALL_13
0x40039a0	            0x89c5	                            mov ebp, eax	      2144	ftp.c	FUNCTION_34	CALL_13
0x40039a2	      0xe9c9fcffff	                           jmp 0x4003670	      2144	ftp.c	FUNCTION_34	CALL_13
0x40039a7	            0x89ea	                            mov edx, ebp	      2999	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_50
0x40039a9	          0x4489e6	                           mov esi, r12d	      2999	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_50
0x40039ac	          0x4889df	                            mov rdi, rbx	      2999	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_50
0x40039af	      0xe87cefffff	            call sym.ftp_state_type_resp	      2999	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_50
0x40039b4	            0x89c5	                            mov ebp, eax	      2999	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_50
0x40039b6	      0xe9b5fcffff	                           jmp 0x4003670	      3000	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x40039bb	    0x4181ecc80000	                          sub r12d, 0xc8	      2018	ftp.c	FUNCTION_33	IF_1
0x40039c2	          0x488b3b	                    mov rdi, qword [rbx]	      2011	ftp.c	FUNCTION_33
0x40039c5	        0x4183fc63	                          cmp r12d, 0x63	      2018	ftp.c	FUNCTION_33	IF_1
0x40039c9	     0xf86f2060000	                           jbe 0x40040c1	      2018	ftp.c	FUNCTION_33	IF_1
0x40039cf	    0x8b8300070000	           mov eax, dword [rbx + 0x700] 	      2013	ftp.c	FUNCTION_33
0x40039d5	            0x85c0	                           test eax, eax	      2021	ftp.c	FUNCTION_33	IF_1	IF_2
0x40039d7	     0xf842d050000	                            je 0x4003f0a	      2021	ftp.c	FUNCTION_33	IF_1	IF_2
0x40039dd	          0x8d7001	                      lea esi, [rax + 1]	      2025	ftp.c	FUNCTION_33	IF_1
0x40039e0	          0x83fe02	                              cmp esi, 2	      2027	ftp.c	FUNCTION_33	IF_1	IF_3
0x40039e3	     0xf8539050000	                           jne 0x4003f22	      2027	ftp.c	FUNCTION_33	IF_1	IF_3
0x40039e9	    0x488d35000000	                   lea rsi, [0x040039f0]	      2028	ftp.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x40039f0	            0x31c0	                            xor eax, eax	      2028	ftp.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x40039f2	      0xbd1e000000	                           mov ebp, 0x1e	      2029	ftp.c	FUNCTION_33	IF_1	IF_3
0x40039f7	      0xe800000000	                          call 0x40039fc	      2028	ftp.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x40039fc	      0xe96ffcffff	                           jmp 0x4003670	      2028	ftp.c	FUNCTION_33	IF_1	IF_3	CALL_2
0x4003a01	    0x4181fcc80000	                          cmp r12d, 0xc8	      3014	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_42
0x4003a08	     0xf8497080000	                            je 0x40042a5	      3014	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_42
0x4003a0e	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      3016	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_42	CALL_53
0x4003a13	    0x488d35000000	                   lea rsi, [0x04003a1a]	      3016	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_42	CALL_53
0x4003a1a	          0x4489e2	                           mov edx, r12d	      3016	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_42	CALL_53
0x4003a1d	            0x31c0	                            xor eax, eax	      3016	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_42	CALL_53
0x4003a1f	      0xbd54000000	                           mov ebp, 0x54	      3017	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_42
0x4003a24	      0xe800000000	                          call 0x4003a29	      3016	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_42	CALL_53
0x4003a29	      0xe942fcffff	                           jmp 0x4003670	      3017	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_42
0x4003a2e	          0x4489e6	                           mov esi, r12d	      3023	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_55
0x4003a31	          0x4889df	                            mov rdi, rbx	      3023	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_55
0x4003a34	      0xe897e3ffff	            call sym.ftp_state_pasv_resp	      3023	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_55
0x4003a39	            0x89c5	                            mov ebp, eax	      3023	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_55
0x4003a3b	      0xe930fcffff	                           jmp 0x4003670	      3024	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4003a40	          0x4c8b2b	                    mov r13, qword [rbx]	      2379	ftp.c	FUNCTION_40
0x4003a43	    0x4181fc960000	                          cmp r12d, 0x96	      2382	ftp.c	FUNCTION_40	IF_1
0x4003a4a	    0x498b85e80100	           mov rax, qword [r13 + 0x1e8] 	      2380	ftp.c	FUNCTION_40
0x4003a51	     0xf846d030000	                            je 0x4003dc4	      2382	ftp.c	FUNCTION_40	IF_1
0x4003a57	        0x4183fc7d	                          cmp r12d, 0x7d	      2382	ftp.c	FUNCTION_40	IF_1
0x4003a5b	     0xf8463030000	                            je 0x4003dc4	      2382	ftp.c	FUNCTION_40	IF_1
0x4003a61	          0x83fd1f	                           cmp ebp, 0x1f	      2485	ftp.c	FUNCTION_40	ELSE_4	IF_14
0x4003a64	     0xf85f0070000	                           jne 0x400425a	      2485	ftp.c	FUNCTION_40	ELSE_4	IF_14
0x4003a6a	    0x4181fcc20100	                         cmp r12d, 0x1c2	      2485	ftp.c	FUNCTION_40	ELSE_4	IF_14
0x4003a71	     0xf85e3070000	                           jne 0x400425a	      2485	ftp.c	FUNCTION_40	ELSE_4	IF_14
0x4003a77	    0xc74018020000	               mov dword [rax + 0x18], 2	      2487	ftp.c	FUNCTION_40	ELSE_4	IF_14
0x4003a7e	            0x31ed	                            xor ebp, ebp	      2378	ftp.c	FUNCTION_40
0x4003a80	    0xc7830c070000	              mov dword [rbx + 0x70c], 0	       794	ftp.c	ELSE_3	FUNCTION_12
0x4003a8a	      0xe9e1fbffff	                           jmp 0x4003670	       794	ftp.c	ELSE_3	FUNCTION_12
0x4003a8f	    0x4181fcfa0000	                          cmp r12d, 0xfa	      2922	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_34
0x4003a96	     0xf84c5060000	                            je 0x4004161	      2922	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_34
0x4003a9c	    0xc7830c070000	              mov dword [rbx + 0x70c], 0	       794	ftp.c	ELSE_3	FUNCTION_12
0x4003aa6	            0x31ed	                            xor ebp, ebp	       794	ftp.c	ELSE_3	FUNCTION_12
0x4003aa8	      0xe9c3fbffff	                           jmp 0x4003670	       794	ftp.c	ELSE_3	FUNCTION_12
0x4003aad	    0x4181fc8f0100	                         cmp r12d, 0x18f	      2936	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_35
0x4003ab4	            0x7e10	                           jle 0x4003ac6	      2936	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_35
0x4003ab6	    0x448b83040700	           mov r8d, dword [rbx + 0x704] 	      2936	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_35
0x4003abd	          0x4585c0	                           test r8d, r8d	      2936	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_35
0x4003ac0	     0xf8489040000	                            je 0x4003f4f	      2936	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_35
0x4003ac6	            0x89ea	                            mov edx, ebp	      2941	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_45
0x4003ac8	            0x31f6	                            xor esi, esi	      2941	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_45
0x4003aca	          0x4889df	                            mov rdi, rbx	      2941	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_45
0x4003acd	      0xe88eeaffff	                call sym.ftp_state_quote	      2941	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_45
0x4003ad2	            0x89c5	                            mov ebp, eax	      2941	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_45
0x4003ad4	      0xe997fbffff	                           jmp 0x4003670	      2941	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_45
0x4003ad9	    0x4181fc010100	                         cmp r12d, 0x101	      2781	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22
0x4003ae0	            0x75ba	                           jne 0x4003a9c	      2781	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22
0x4003ae2	      0x488b442408	                mov rax, qword [rsp + 8]	      2782	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22
0x4003ae7	    0x4c8ba0200d00	           mov r12, qword [rax + 0xd20] 	      2782	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22
0x4003aee	    0x4c8ba8900700	           mov r13, qword [rax + 0x790] 	      2783	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22
0x4003af5	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      2788	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	CALL_22
0x4003afa	      0x498d6c2404	                      lea rbp, [r12 + 4]	      2782	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22
0x4003aff	        0x488d7801	                      lea rdi, [rax + 1]	      2788	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	CALL_22
0x4003b03	    0x488b05000000	            mov rax, qword [0x04003b0a] 	      2788	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	CALL_22
0x4003b0a	            0xff10	                        call qword [rax]	      2788	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	CALL_22
0x4003b0c	          0x4885c0	                           test rax, rax	      2789	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_23
0x4003b0f	          0x4989c6	                            mov r14, rax	      2788	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	CALL_22
0x4003b12	     0xf84e6070000	                            je 0x40042fe	      2789	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_23
0x4003b18	      0x488b442408	                mov rax, qword [rsp + 8]	      2802	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x4003b1d	          0x4c89ea	                            mov rdx, r13	      2802	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x4003b20	    0x480390200d00	            add rdx, qword [rax + 0xd20]	      2802	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x4003b27	          0x4839d5	                            cmp rbp, rdx	      2802	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x4003b2a	            0x733b	                           jae 0x4003b67	      2802	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x4003b2c	    0x410fb6442404	               movzx eax, byte [r12 + 4]	      2803	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x4003b32	            0x3c22	                            cmp al, 0x22	      2803	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x4003b34	            0x7710	                            ja 0x4003b46	      2803	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x4003b36	    0x48b901040000	                 movabs rcx, 0x400000401	      2803	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x4003b40	        0x480fa3c1	                             bt rcx, rax	      2803	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x4003b44	            0x7221	                            jb 0x4003b67	      2803	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x4003b46	    0x48b901040000	                 movabs rcx, 0x400000401	      2803	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x4003b50	        0x4883c501	                              add rbp, 1	      2804	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x4003b54	          0x4839d5	                            cmp rbp, rdx	      2802	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x4003b57	            0x740e	                            je 0x4003b67	      2802	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x4003b59	         0xfb64500	                   movzx eax, byte [rbp]	      2803	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x4003b5d	            0x3c22	                            cmp al, 0x22	      2803	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x4003b5f	            0x77ef	                            ja 0x4003b50	      2803	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x4003b61	        0x480fa3c1	                             bt rcx, rax	      2803	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x4003b65	            0x73e9	                           jae 0x4003b50	      2803	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	WHILE_1
0x4003b67	        0x807d0022	                    cmp byte [rbp], 0x22	      2806	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24
0x4003b6b	     0xf84380a0000	                            je 0x40045a9	      2806	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24
0x4003b71	    0x488b05000000	            mov rax, qword [0x04003b78] 	      2866	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_11	CALL_29
0x4003b78	          0x4c89f7	                            mov rdi, r14	      2866	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_11	CALL_29
0x4003b7b	            0xff10	                        call qword [rax]	      2866	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_11	CALL_29
0x4003b7d	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2867	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_11	CALL_30
0x4003b82	    0x488d35000000	                   lea rsi, [0x04003b89]	      2867	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_11	CALL_30
0x4003b89	            0x31c0	                            xor eax, eax	      2867	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_11	CALL_30
0x4003b8b	      0xe800000000	                          call 0x4003b90	      2867	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_11	CALL_30
0x4003b90	      0xe907ffffff	                           jmp 0x4003a9c	      2867	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_11	CALL_30
0x4003b95	           0xf1f00	                         nop dword [rax]	      2867	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_11	CALL_30
0x4003b98	    0x4181fcd70000	                          cmp r12d, 0xd7	      2875	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30
0x4003b9f	     0xf85f7feffff	                           jne 0x4003a9c	      2875	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30
0x4003ba5	      0x488b442408	                mov rax, qword [rsp + 8]	      2876	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30
0x4003baa	    0x4c8ba8200d00	           mov r13, qword [rax + 0xd20] 	      2876	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30
0x4003bb1	      0x488b442428	            mov rax, qword [rsp + 0x28] 	      2880	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	CALL_33
0x4003bb6	        0x488d7801	                      lea rdi, [rax + 1]	      2880	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	CALL_33
0x4003bba	    0x488b05000000	            mov rax, qword [0x04003bc1] 	      2880	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	CALL_33
0x4003bc1	        0x498d6d04	                      lea rbp, [r13 + 4]	      2876	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30
0x4003bc5	            0xff10	                        call qword [rax]	      2880	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	CALL_33
0x4003bc7	          0x4885c0	                           test rax, rax	      2881	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_31
0x4003bca	          0x4989c4	                            mov r12, rax	      2880	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	CALL_33
0x4003bcd	     0xf842b070000	                            je 0x40042fe	      2881	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_31
0x4003bd3	      0x410fb64504	               movzx eax, byte [r13 + 4]	      2887	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	WHILE_2
0x4003bd8	            0x3c20	                            cmp al, 0x20	      2887	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	WHILE_2
0x4003bda	            0x7510	                           jne 0x4003bec	      2887	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	WHILE_2
0x4003bdc	         0xf1f4000	                         nop dword [rax]	      2887	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	WHILE_2
0x4003be0	        0x4883c501	                              add rbp, 1	      2888	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	WHILE_2
0x4003be4	         0xfb64500	                   movzx eax, byte [rbp]	      2887	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	WHILE_2
0x4003be8	            0x3c20	                            cmp al, 0x20	      2887	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	WHILE_2
0x4003bea	            0x74f4	                            je 0x4003be0	      2887	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	WHILE_2
0x4003bec	            0xa8df	                           test al, 0xdf	      2889	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x4003bee	          0x4c89e2	                            mov rdx, r12	      2889	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x4003bf1	            0x7418	                            je 0x4003c0b	      2889	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x4003bf3	       0xf1f440000	                   nop dword [rax + rax]	      2889	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x4003bf8	        0x4883c201	                              add rdx, 1	      2890	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x4003bfc	        0x4883c501	                              add rbp, 1	      2890	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x4003c00	          0x8842ff	                  mov byte [rdx - 1], al	      2890	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x4003c03	         0xfb64500	                   movzx eax, byte [rbp]	      2889	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x4003c07	            0xa8df	                           test al, 0xdf	      2889	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x4003c09	            0x75ed	                           jne 0x4003bf8	      2889	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	FOR_2
0x4003c0b	    0x488d35000000	                   lea rsi, [0x04003c12]	      2895	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_34
0x4003c12	          0xc60200	                       mov byte [rdx], 0	      2891	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30
0x4003c15	          0x4c89e7	                            mov rdi, r12	      2895	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_34
0x4003c18	      0xe800000000	                          call 0x4003c1d	      2895	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_34
0x4003c1d	            0x85c0	                           test eax, eax	      2895	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_34
0x4003c1f	     0xf84fe070000	                            je 0x4004423	      2895	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_34
0x4003c25	    0x488d15000000	                   lea rdx, [0x04003c2c]	      2897	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_35
0x4003c2c	    0x488d35000000	                   lea rsi, [0x04003c33]	      2897	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_35
0x4003c33	            0x31c0	                            xor eax, eax	      2897	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_35
0x4003c35	          0x4c89ff	                            mov rdi, r15	      2897	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_35
0x4003c38	      0xe800000000	                          call 0x4003c3d	      2897	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_35
0x4003c3d	            0x85c0	                           test eax, eax	      2898	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	IF_33
0x4003c3f	            0x89c5	                            mov ebp, eax	      2897	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_35
0x4003c41	     0xf843a090000	                            je 0x4004581	      2898	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	IF_33
0x4003c47	    0x488b05000000	            mov rax, qword [0x04003c4e] 	      2899	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	IF_33	CALL_36
0x4003c4e	          0x4c89e7	                            mov rdi, r12	      2899	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	IF_33	CALL_36
0x4003c51	            0xff10	                        call qword [rax]	      2899	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	IF_33	CALL_36
0x4003c53	      0xe918faffff	                           jmp 0x4003670	      2900	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	IF_33
0x4003c58	     0xf1f84000000	                   nop dword [rax + rax]	      2900	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	IF_33
0x4003c60	    0x4181ecc80000	                          sub r12d, 0xc8	      2948	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37
0x4003c67	        0x4183fc63	                          cmp r12d, 0x63	      2948	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37
0x4003c6b	     0xf861e010000	                           jbe 0x4003d8f	      2948	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37
0x4003c71	          0x488b03	                    mov rax, qword [rbx]	      2950	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4003c74	    0x8bb8bc070000	           mov edi, dword [rax + 0x7bc] 	      2950	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4003c7a	            0x85ff	                           test edi, edi	      2950	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4003c7c	            0x740f	                            je 0x4003c8d	      2950	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4003c7e	    0x486383e40600	        movsxd rax, dword [rbx + 0x6e4] 	      2951	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4003c85	            0x85c0	                           test eax, eax	      2950	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4003c87	     0xf85d1060000	                           jne 0x400435e	      2950	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4003c8d	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2959	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	ELSE_13	CALL_46
0x4003c92	    0x488d35000000	                   lea rsi, [0x04003c99]	      2959	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	ELSE_13	CALL_46
0x4003c99	            0x31c0	                            xor eax, eax	      2959	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	ELSE_13	CALL_46
0x4003c9b	      0xbd09000000	                              mov ebp, 9	      2962	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	ELSE_13
0x4003ca0	      0xe800000000	                          call 0x4003ca5	      2959	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	ELSE_13	CALL_46
0x4003ca5	    0xc683e8060000	               mov byte [rbx + 0x6e8], 1	      2960	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	ELSE_13
0x4003cac	      0xe9bff9ffff	                           jmp 0x4003670	      2962	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	ELSE_13
0x4003cb1	    0x4181fcd50000	                          cmp r12d, 0xd5	      2271	ftp.c	FUNCTION_37	IF_1
0x4003cb8	          0x4c8b2b	                    mov r13, qword [rbx]	      2266	ftp.c	FUNCTION_37
0x4003cbb	    0x48c7442430ff	mov qword [rsp + 0x30], 0xffffffffffffffff	      2267	ftp.c	FUNCTION_37
0x4003cc4	     0xf8411050000	                            je 0x40041db	      2271	ftp.c	FUNCTION_37	IF_1
0x4003cca	        0x4883c9ff	              or rcx, 0xffffffffffffffff	      2271	ftp.c	FUNCTION_37	IF_1
0x4003cce	          0x83fd17	                           cmp ebp, 0x17	      2275	ftp.c	FUNCTION_37	IF_2
0x4003cd1	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	      2275	ftp.c	FUNCTION_37	IF_2
0x4003cd8	     0xf8462050000	                            je 0x4004240	      2275	ftp.c	FUNCTION_37	IF_2
0x4003cde	          0x83fd18	                           cmp ebp, 0x18	      2289	ftp.c	FUNCTION_37	ELSE_1	IF_5
0x4003ce1	     0xf8420070000	                            je 0x4004407	      2289	ftp.c	FUNCTION_37	ELSE_1	IF_5
0x4003ce7	    0x4989b5305100	          mov qword [r13 + 0x5130], rsi 	      2294	ftp.c	FUNCTION_37	ELSE_2	IF_6
0x4003cee	          0x4889df	                            mov rdi, rbx	      2295	ftp.c	FUNCTION_37	ELSE_2	IF_6	CALL_8
0x4003cf1	      0xbe01000000	                              mov esi, 1	      2295	ftp.c	FUNCTION_37	ELSE_2	IF_6	CALL_8
0x4003cf6	      0xe8f5c8ffff	             call sym.ftp_state_ul_setup	      2295	ftp.c	FUNCTION_37	ELSE_2	IF_6	CALL_8
0x4003cfb	            0x89c5	                            mov ebp, eax	      2295	ftp.c	FUNCTION_37	ELSE_2	IF_6	CALL_8
0x4003cfd	      0xe96ef9ffff	                           jmp 0x4003670	      3006	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4003d02	          0x83fd1b	                           cmp ebp, 0x1b	      2308	ftp.c	FUNCTION_38	SWITCH_1
0x4003d05	     0xf84af010000	                            je 0x4003eba	      2308	ftp.c	FUNCTION_38	SWITCH_1
0x4003d0b	    0x4181fc5e0100	                         cmp r12d, 0x15e	      2312	ftp.c	FUNCTION_38	SWITCH_1	IF_1
0x4003d12	     0xf8470040000	                            je 0x4004188	      2312	ftp.c	FUNCTION_38	SWITCH_1	IF_1
0x4003d18	          0x4889df	                            mov rdi, rbx	      2319	ftp.c	FUNCTION_38	SWITCH_1	CALL_2
0x4003d1b	      0xe800ebffff	     call sym.ftp_state_prepare_transfer	      2319	ftp.c	FUNCTION_38	SWITCH_1	CALL_2
0x4003d20	            0x89c5	                            mov ebp, eax	      2319	ftp.c	FUNCTION_38	SWITCH_1	CALL_2
0x4003d22	      0xe949f9ffff	                           jmp 0x4003670	      2319	ftp.c	FUNCTION_38	SWITCH_1	CALL_2
0x4003d27	    0x418d842438ff	                   lea eax, [r12 - 0xc8]	      2981	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41
0x4003d2f	          0x83f863	                           cmp eax, 0x63	      2981	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41
0x4003d32	            0x7617	                           jbe 0x4003d4b	      2981	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41
0x4003d34	    0x8b8308070000	           mov eax, dword [rbx + 0x708] 	      2981	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41
0x4003d3a	          0x8d50ff	                      lea edx, [rax - 1]	      2981	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41
0x4003d3d	            0x85c0	                           test eax, eax	      2981	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41
0x4003d3f	    0x899308070000	            mov dword [rbx + 0x708], edx	      2981	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41
0x4003d45	     0xf84e6010000	                            je 0x4003f31	      2981	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41
0x4003d4b	    0x486393e40600	        movsxd rdx, dword [rbx + 0x6e4] 	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4003d52	    0x488b83c80600	           mov rax, qword [rbx + 0x6c8] 	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4003d59	    0xc7830c070000	          mov dword [rbx + 0x70c], 0x10 	       794	ftp.c	ELSE_3	FUNCTION_12
0x4003d63	      0x488b54d0f8	        mov rdx, qword [rax + rdx*8 - 8]	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4003d68	    0x488d35000000	                   lea rsi, [0x04003d6f]	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4003d6f	          0x4c89ff	                            mov rdi, r15	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4003d72	            0x31c0	                            xor eax, eax	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4003d74	      0xe800000000	                          call 0x4003d79	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4003d79	            0x89c5	                            mov ebp, eax	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4003d7b	      0xe9f0f8ffff	                           jmp 0x4003670	      2988	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x4003d80	          0x4889df	                            mov rdi, rbx	      2370	ftp.c	FUNCTION_39	CALL_4
0x4003d83	      0xe8a8d5ffff	               call sym.InitiateTransfer	      2370	ftp.c	FUNCTION_39	CALL_4
0x4003d88	            0x89c5	                            mov ebp, eax	      2370	ftp.c	FUNCTION_39	CALL_4
0x4003d8a	      0xe9e1f8ffff	                           jmp 0x4003670	      2370	ftp.c	FUNCTION_39	CALL_4
0x4003d8f	    0x8b83e4060000	           mov eax, dword [rbx + 0x6e4] 	      2968	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x4003d95	    0xc78304070000	              mov dword [rbx + 0x704], 0	      2967	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14
0x4003d9f	          0x83c001	                              add eax, 1	      2968	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x4003da2	    0x3b83d0060000	           cmp eax, dword [rbx + 0x6d0] 	      2968	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x4003da8	    0x8983e4060000	            mov dword [rbx + 0x6e4], eax	      2968	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x4003dae	     0xf8f9e030000	                            jg 0x4004152	      2968	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x4003db4	    0x488b93c80600	           mov rdx, qword [rbx + 0x6c8] 	      2970	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x4003dbb	            0x4898	                                    cdqe	      2970	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x4003dbd	      0x488b54c2f8	        mov rdx, qword [rdx + rax*8 - 8]	      2970	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x4003dc2	            0xeba4	                           jmp 0x4003d68	      2970	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	IF_39
0x4003dc4	          0x83fd1f	                           cmp ebp, 0x1f	      2413	ftp.c	FUNCTION_40	IF_1	IF_2
0x4003dc7	    0x48c7442430ff	mov qword [rsp + 0x30], 0xffffffffffffffff	      2401	ftp.c	FUNCTION_40	IF_1
0x4003dd0	     0xf84d2020000	                            je 0x40040a8	      2413	ftp.c	FUNCTION_40	IF_1	IF_2
0x4003dd6	    0x4180bdd40700	               cmp byte [r13 + 0x7d4], 0	      2413	ftp.c	FUNCTION_40	IF_1	IF_2
0x4003dde	     0xf85c4020000	                           jne 0x40040a8	      2413	ftp.c	FUNCTION_40	IF_1	IF_2
0x4003de4	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2415	ftp.c	FUNCTION_40	IF_1	IF_2
0x4003de8	          0x4885c0	                           test rax, rax	      2414	ftp.c	FUNCTION_40	IF_1	IF_2
0x4003deb	     0xf8e4e060000	                           jle 0x400443f	      2414	ftp.c	FUNCTION_40	IF_1	IF_2
0x4003df1	      0x4889442430	             mov qword [rsp + 0x30], rax	      2449	ftp.c	FUNCTION_40	IF_1	ELSE_1	IF_7
0x4003df6	    0x498b95d00000	            mov rdx, qword [r13 + 0xd0] 	      2451	ftp.c	FUNCTION_40	IF_1	IF_8
0x4003dfd	          0x4885d2	                           test rdx, rdx	      2451	ftp.c	FUNCTION_40	IF_1	IF_8
0x4003e00	     0xf8e04030000	                           jle 0x400410a	      2451	ftp.c	FUNCTION_40	IF_1	IF_8
0x4003e06	          0x4839d0	                            cmp rax, rdx	      2451	ftp.c	FUNCTION_40	IF_1	IF_8
0x4003e09	     0xf8efb020000	                           jle 0x400410a	      2451	ftp.c	FUNCTION_40	IF_1	IF_8
0x4003e0f	    0x488d35000000	                   lea rsi, [0x04003e16]	      2456	ftp.c	FUNCTION_40	IF_1	CALL_4
0x4003e16	    0x498995c00000	             mov qword [r13 + 0xc0], rdx	      2452	ftp.c	FUNCTION_40	IF_1	IF_8
0x4003e1d	            0x31c0	                            xor eax, eax	      2456	ftp.c	FUNCTION_40	IF_1	CALL_4
0x4003e1f	          0x4c89ef	                            mov rdi, r13	      2456	ftp.c	FUNCTION_40	IF_1	CALL_4
0x4003e22	      0x4889542430	             mov qword [rsp + 0x30], rdx	      2452	ftp.c	FUNCTION_40	IF_1	IF_8
0x4003e27	      0xe800000000	                          call 0x4003e2c	      2456	ftp.c	FUNCTION_40	IF_1	CALL_4
0x4003e2c	          0x83fd1f	                           cmp ebp, 0x1f	      2459	ftp.c	FUNCTION_40	IF_1	IF_10
0x4003e2f	     0xf8502030000	                           jne 0x4004137	      2459	ftp.c	FUNCTION_40	IF_1	IF_10
0x4003e35	      0x488b442430	            mov rax, qword [rsp + 0x30] 	      2465	ftp.c	FUNCTION_40	IF_1
0x4003e3a	    0x89ab10070000	            mov dword [rbx + 0x710], ebp	      2464	ftp.c	FUNCTION_40	IF_1
0x4003e40	    0x488983180700	            mov qword [rbx + 0x718], rax	      2465	ftp.c	FUNCTION_40	IF_1
0x4003e47	    0x4180bdd70700	               cmp byte [r13 + 0x7d7], 0	      2467	ftp.c	FUNCTION_40	IF_1	IF_11
0x4003e4f	     0xf842bffffff	                            je 0x4003d80	      2467	ftp.c	FUNCTION_40	IF_1	IF_11
0x4003e55	      0x488d742424	                   lea rsi, [rsp + 0x24]	      2470	ftp.c	FUNCTION_40	IF_1	IF_11	CALL_6
0x4003e5a	          0x4889df	                            mov rdi, rbx	      2470	ftp.c	FUNCTION_40	IF_1	IF_11	CALL_6
0x4003e5d	      0xe85ef1ffff	             call sym.AllowServerConnect	      2470	ftp.c	FUNCTION_40	IF_1	IF_11	CALL_6
0x4003e62	            0x85c0	                           test eax, eax	      2471	ftp.c	FUNCTION_40	IF_1	IF_11	IF_12
0x4003e64	     0xf85b6f8ffff	                           jne 0x4003720	      2471	ftp.c	FUNCTION_40	IF_1	IF_11	IF_12
0x4003e6a	      0x807c242400	                cmp byte [rsp + 0x24], 0	      2474	ftp.c	FUNCTION_40	IF_1	IF_11	IF_13
0x4003e6f	     0xf8531fcffff	                           jne 0x4003aa6	      2474	ftp.c	FUNCTION_40	IF_1	IF_11	IF_13
0x4003e75	    0x488d35000000	                   lea rsi, [0x04003e7c]	      2476	ftp.c	FUNCTION_40	IF_1	IF_11	IF_13	CALL_7
0x4003e7c	          0x4c89ef	                            mov rdi, r13	      2476	ftp.c	FUNCTION_40	IF_1	IF_11	IF_13	CALL_7
0x4003e7f	            0x31c0	                            xor eax, eax	      2476	ftp.c	FUNCTION_40	IF_1	IF_11	IF_13	CALL_7
0x4003e81	            0x31ed	                            xor ebp, ebp	       794	ftp.c	ELSE_3	FUNCTION_12
0x4003e83	      0xe800000000	                          call 0x4003e88	      2476	ftp.c	FUNCTION_40	IF_1	IF_11	IF_13	CALL_7
0x4003e88	    0xc7830c070000	              mov dword [rbx + 0x70c], 0	       794	ftp.c	ELSE_3	FUNCTION_12
0x4003e92	    0xc683e9060000	               mov byte [rbx + 0x6e9], 1	      2478	ftp.c	FUNCTION_40	IF_1	IF_11	IF_13
0x4003e99	      0xe9d2f7ffff	                           jmp 0x4003670	      2478	ftp.c	FUNCTION_40	IF_1	IF_11	IF_13
0x4003e9e	      0x488b442408	                mov rax, qword [rsp + 8]	      2746	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_7	IF_16
0x4003ea3	      0xbd40000000	                           mov ebp, 0x40	      2713	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_5	IF_13
0x4003ea8	    0x83b8f0070000	              cmp dword [rax + 0x7f0], 2	      2746	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_7	IF_16
0x4003eaf	     0xf87bbf7ffff	                            ja 0x4003670	      2746	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_7	IF_16
0x4003eb5	      0xe9c4f9ffff	                           jmp 0x400387e	      2746	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_7	IF_16
0x4003eba	    0x4181fc5e0100	                         cmp r12d, 0x15e	      2323	ftp.c	FUNCTION_38	SWITCH_1	IF_3
0x4003ec1	     0xf840f050000	                            je 0x40043d6	      2323	ftp.c	FUNCTION_38	SWITCH_1	IF_3
0x4003ec7	          0x488b3b	                    mov rdi, qword [rbx]	      2324	ftp.c	FUNCTION_38	SWITCH_1	IF_3	CALL_3
0x4003eca	    0x488d35000000	                   lea rsi, [0x04003ed1]	      2324	ftp.c	FUNCTION_38	SWITCH_1	IF_3	CALL_3
0x4003ed1	            0x31c0	                            xor eax, eax	      2324	ftp.c	FUNCTION_38	SWITCH_1	IF_3	CALL_3
0x4003ed3	      0xbd1f000000	                           mov ebp, 0x1f	      2325	ftp.c	FUNCTION_38	SWITCH_1	IF_3
0x4003ed8	      0xe800000000	                          call 0x4003edd	      2324	ftp.c	FUNCTION_38	SWITCH_1	IF_3	CALL_3
0x4003edd	      0xe98ef7ffff	                           jmp 0x4003670	      2324	ftp.c	FUNCTION_38	SWITCH_1	IF_3	CALL_3
0x4003ee2	    0x488d35000000	                   lea rsi, [0x04003ee9]	      2344	ftp.c	FUNCTION_39	IF_1	CALL_1
0x4003ee9	          0x4489e2	                           mov edx, r12d	      2344	ftp.c	FUNCTION_39	IF_1	CALL_1
0x4003eec	          0x4c89ef	                            mov rdi, r13	      2344	ftp.c	FUNCTION_39	IF_1	CALL_1
0x4003eef	            0x31c0	                            xor eax, eax	      2344	ftp.c	FUNCTION_39	IF_1	CALL_1
0x4003ef1	      0xbd19000000	                           mov ebp, 0x19	      2347	ftp.c	FUNCTION_39	IF_1
0x4003ef6	      0xe800000000	                          call 0x4003efb	      2344	ftp.c	FUNCTION_39	IF_1	CALL_1
0x4003efb	    0xc7830c070000	              mov dword [rbx + 0x70c], 0	       794	ftp.c	ELSE_3	FUNCTION_12
0x4003f05	      0xe966f7ffff	                           jmp 0x4003670	       794	ftp.c	ELSE_3	FUNCTION_12
0x4003f0a	    0x488d35000000	                   lea rsi, [0x04003f11]	      2022	ftp.c	FUNCTION_33	IF_1	IF_2	CALL_1
0x4003f11	      0xe800000000	                          call 0x4003f16	      2022	ftp.c	FUNCTION_33	IF_1	IF_2	CALL_1
0x4003f16	    0xc683ad030000	               mov byte [rbx + 0x3ad], 0	      2023	ftp.c	FUNCTION_33	IF_1	IF_2
0x4003f1d	      0xbe01000000	                              mov esi, 1	      2025	ftp.c	FUNCTION_33	IF_1
0x4003f22	          0x4889df	                            mov rdi, rbx	      2033	ftp.c	FUNCTION_33	IF_1	CALL_3
0x4003f25	      0xe886c9ffff	             call sym.ftp_state_use_port	      2033	ftp.c	FUNCTION_33	IF_1	CALL_3
0x4003f2a	            0x89c5	                            mov ebp, eax	      2033	ftp.c	FUNCTION_33	IF_1	CALL_3
0x4003f2c	      0xe93ff7ffff	                           jmp 0x4003670	      2033	ftp.c	FUNCTION_33	IF_1	CALL_3
0x4003f31	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2983	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41	CALL_48
0x4003f36	    0x488d35000000	                   lea rsi, [0x04003f3d]	      2983	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41	CALL_48
0x4003f3d	          0x4489e2	                           mov edx, r12d	      2983	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41	CALL_48
0x4003f40	      0xbd09000000	                              mov ebp, 9	      2984	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41
0x4003f45	      0xe800000000	                          call 0x4003f4a	      2983	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41	CALL_48
0x4003f4a	      0xe921f7ffff	                           jmp 0x4003670	      2984	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_41
0x4003f4f	          0x488b3b	                    mov rdi, qword [rbx]	      2938	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_35	CALL_44
0x4003f52	    0x488d35000000	                   lea rsi, [0x04003f59]	      2938	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_35	CALL_44
0x4003f59	          0x4489e2	                           mov edx, r12d	      2938	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_35	CALL_44
0x4003f5c	            0x31c0	                            xor eax, eax	      2938	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_35	CALL_44
0x4003f5e	      0xbd15000000	                           mov ebp, 0x15	      2939	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_35
0x4003f63	      0xe800000000	                          call 0x4003f68	      2938	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_35	CALL_44
0x4003f68	      0xe903f7ffff	                           jmp 0x4003670	      2939	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_35
0x4003f6d	    0x488d35000000	                   lea rsi, [0x04003f74]	      2106	ftp.c	FUNCTION_34	SWITCH_1	CALL_8
0x4003f74	          0x4c89ff	                            mov rdi, r15	      2106	ftp.c	FUNCTION_34	SWITCH_1	CALL_8
0x4003f77	            0x31c0	                            xor eax, eax	      2106	ftp.c	FUNCTION_34	SWITCH_1	CALL_8
0x4003f79	      0xe800000000	                          call 0x4003f7e	      2106	ftp.c	FUNCTION_34	SWITCH_1	CALL_8
0x4003f7e	    0x418b87c00500	           mov eax, dword [r15 + 0x5c0] 	      2114	ftp.c	FUNCTION_34	IF_5
0x4003f85	            0x85c0	                           test eax, eax	      2114	ftp.c	FUNCTION_34	IF_5
0x4003f87	     0xf840bfaffff	                            je 0x4003998	      2114	ftp.c	FUNCTION_34	IF_5
0x4003f8d	            0x31ed	                            xor ebp, ebp	      2114	ftp.c	FUNCTION_34	IF_5
0x4003f8f	      0xe9c3f9ffff	                           jmp 0x4003957	      2114	ftp.c	FUNCTION_34	IF_5
0x4003f94	    0x498b87200d00	           mov rax, qword [r15 + 0xd20] 	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x4003f9b	      0x488d4c2414	                   lea rcx, [rsp + 0x14]	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x4003fa0	      0x488d542410	                   lea rdx, [rsp + 0x10]	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x4003fa5	    0x488d35000000	                   lea rsi, [0x04003fac]	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x4003fac	        0x488d7804	                      lea rdi, [rax + 4]	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x4003fb0	      0x488d442424	                   lea rax, [rsp + 0x24]	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x4003fb5	              0x50	                                push rax	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x4003fb6	      0x488d442428	                   lea rax, [rsp + 0x28]	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x4003fbb	              0x50	                                push rax	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x4003fbc	            0x31c0	                            xor eax, eax	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x4003fbe	      0x4c8d4c242c	                    lea r9, [rsp + 0x2c]	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x4003fc3	      0x4c8d442428	                    lea r8, [rsp + 0x28]	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x4003fc8	      0xe800000000	                          call 0x4003fcd	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x4003fcd	          0x83f806	                              cmp eax, 6	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x4003fd0	              0x5a	                                 pop rdx	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x4003fd1	              0x59	                                 pop rcx	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x4003fd2	     0xf840e050000	                            je 0x40044e6	      2058	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_1
0x4003fd8	    0x4180bfe10700	               cmp byte [r15 + 0x7e1], 0	      2075	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003fe0	            0x749c	                            je 0x4003f7e	      2075	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003fe2	    0x4883bbd80600	              cmp qword [rbx + 0x6d8], 0	      2075	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003fea	            0x7492	                            je 0x4003f7e	      2075	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003fec	    0x4180bfd20700	               cmp byte [r15 + 0x7d2], 0	      2076	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003ff4	            0x7488	                            je 0x4003f7e	      2076	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003ff6	    0x498bbfe85100	          mov rdi, qword [r15 + 0x51e8] 	      2078	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4003ffd	          0x4885ff	                           test rdi, rdi	      2077	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4004000	     0xf8878ffffff	                            js 0x4003f7e	      2077	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4004006	          0x4c89f6	                            mov rsi, r14	      2084	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_5
0x4004009	      0xe800000000	                          call 0x400400e	      2084	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_5
0x400400e	            0x85c0	                           test eax, eax	      2085	ftp.c	FUNCTION_34	SWITCH_1	IF_2	IF_3
0x4004010	            0x89c5	                            mov ebp, eax	      2084	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_5
0x4004012	     0xf8558f6ffff	                           jne 0x4003670	      2085	ftp.c	FUNCTION_34	SWITCH_1	IF_2	IF_3
0x4004018	        0x8b4c2448	            mov ecx, dword [rsp + 0x48] 	      2091	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x400401c	        0x8b442444	            mov eax, dword [rsp + 0x44] 	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4004020	      0x488d6c2470	                   lea rbp, [rsp + 0x70]	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4004025	      0x4863742440	         movsxd rsi, dword [rsp + 0x40] 	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x400402a	          0x8d79ff	                      lea edi, [rcx - 1]	      2091	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x400402d	            0x85c9	                           test ecx, ecx	      2091	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x400402f	    0x8d906c070000	                  lea edx, [rax + 0x76c]	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4004035	    0x488b0d000000	            mov rcx, qword [0x0400403c] 	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x400403c	      0xb806000000	                              mov eax, 6	      2091	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4004041	           0xf45c7	                         cmovne eax, edi	      2091	ftp.c	FUNCTION_34	SWITCH_1	IF_2
0x4004044	          0x4889ef	                            mov rdi, rbp	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4004047	            0x4898	                                    cdqe	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4004049	        0x488b0cc1	            mov rcx, qword [rcx + rax*8]	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x400404d	        0x8b442430	            mov eax, dword [rsp + 0x30] 	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4004051	              0x50	                                push rax	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4004052	        0x8b44243c	            mov eax, dword [rsp + 0x3c] 	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4004056	              0x50	                                push rax	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4004057	        0x8b442448	            mov eax, dword [rsp + 0x48] 	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x400405b	              0x50	                                push rax	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x400405c	    0x488b05000000	            mov rax, qword [0x04004063] 	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4004063	              0x52	                                push rdx	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4004064	      0x448b44245c	            mov r8d, dword [rsp + 0x5c] 	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4004069	    0x488d15000000	                   lea rdx, [0x04004070]	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4004070	        0x4c8b0cf0	             mov r9, qword [rax + rsi*8]	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4004074	      0xbe80000000	                           mov esi, 0x80	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4004079	            0x31c0	                            xor eax, eax	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x400407b	      0xe800000000	                          call 0x4004080	      2089	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_6
0x4004080	        0x4883c420	                           add rsp, 0x20	      2098	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_7
0x4004084	            0x31c9	                            xor ecx, ecx	      2098	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_7
0x4004086	          0x4889ea	                            mov rdx, rbp	      2098	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_7
0x4004089	      0xbe03000000	                              mov esi, 3	      2098	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_7
0x400408e	          0x4889df	                            mov rdi, rbx	      2098	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_7
0x4004091	      0xe800000000	                          call 0x4004096	      2098	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_7
0x4004096	            0x85c0	                           test eax, eax	      2099	ftp.c	FUNCTION_34	SWITCH_1	IF_2	IF_4
0x4004098	            0x89c5	                            mov ebp, eax	      2098	ftp.c	FUNCTION_34	SWITCH_1	IF_2	CALL_7
0x400409a	     0xf84defeffff	                            je 0x4003f7e	      2099	ftp.c	FUNCTION_34	SWITCH_1	IF_2	IF_4
0x40040a0	      0xe9cbf5ffff	                           jmp 0x4003670	      2099	ftp.c	FUNCTION_34	SWITCH_1	IF_2	IF_4
0x40040a5	           0xf1f00	                         nop dword [rax]	      2099	ftp.c	FUNCTION_34	SWITCH_1	IF_2	IF_4
0x40040a8	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2448	ftp.c	FUNCTION_40	IF_1	ELSE_1	IF_7
0x40040ac	          0x4885c0	                           test rax, rax	      2448	ftp.c	FUNCTION_40	IF_1	ELSE_1	IF_7
0x40040af	     0xf893cfdffff	                           jns 0x4003df1	      2448	ftp.c	FUNCTION_40	IF_1	ELSE_1	IF_7
0x40040b5	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	      2448	ftp.c	FUNCTION_40	IF_1	ELSE_1	IF_7
0x40040bc	      0xe935fdffff	                           jmp 0x4003df6	      2448	ftp.c	FUNCTION_40	IF_1	ELSE_1	IF_7
0x40040c1	    0x488d35000000	                   lea rsi, [0x040040c8]	      2036	ftp.c	FUNCTION_33	ELSE_2	CALL_4
0x40040c8	            0x31c0	                            xor eax, eax	      2036	ftp.c	FUNCTION_33	ELSE_2	CALL_4
0x40040ca	      0xe800000000	                          call 0x40040cf	      2036	ftp.c	FUNCTION_33	ELSE_2	CALL_4
0x40040cf	    0xc7830c070000	              mov dword [rbx + 0x70c], 0	       794	ftp.c	ELSE_3	FUNCTION_12
0x40040d9	            0x31f6	                            xor esi, esi	      2038	ftp.c	FUNCTION_33	ELSE_2	CALL_5
0x40040db	          0x4889df	                            mov rdi, rbx	      2038	ftp.c	FUNCTION_33	ELSE_2	CALL_5
0x40040de	      0xe8ddf2ffff	               call sym.ftp_dophase_done	      2038	ftp.c	FUNCTION_33	ELSE_2	CALL_5
0x40040e3	            0x89c5	                            mov ebp, eax	      2701	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10	IF_11	CALL_13
0x40040e5	      0xe986f5ffff	                           jmp 0x4003670	      2701	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10	IF_11	CALL_13
0x40040ea	            0x31f6	                            xor esi, esi	      2698	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10	CALL_12
0x40040ec	          0x4889df	                            mov rdi, rbx	      2698	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10	CALL_12
0x40040ef	      0xe800000000	                          call 0x40040f4	      2698	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10	CALL_12
0x40040f4	            0x85c0	                           test eax, eax	      2699	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10	IF_11
0x40040f6	            0x89c5	                            mov ebp, eax	      2698	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10	CALL_12
0x40040f8	     0xf8572f5ffff	                           jne 0x4003670	      2699	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10	IF_11
0x40040fe	    0xc683ae030000	               mov byte [rbx + 0x3ae], 0	      2700	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10	IF_11
0x4004105	      0xe907f6ffff	                           jmp 0x4003711	      2700	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10	IF_11
0x400410a	          0x83fd1f	                           cmp ebp, 0x1f	      2453	ftp.c	FUNCTION_40	IF_1	ELSE_2	IF_9
0x400410d	     0xf8499020000	                            je 0x40043ac	      2453	ftp.c	FUNCTION_40	IF_1	ELSE_2	IF_9
0x4004113	    0x4180bdd40700	               cmp byte [r13 + 0x7d4], 0	      2453	ftp.c	FUNCTION_40	IF_1	ELSE_2	IF_9
0x400411b	            0x7409	                            je 0x4004126	      2453	ftp.c	FUNCTION_40	IF_1	ELSE_2	IF_9
0x400411d	    0x48c7442430ff	mov qword [rsp + 0x30], 0xffffffffffffffff	      2454	ftp.c	FUNCTION_40	IF_1	ELSE_2	IF_9
0x4004126	    0x488d35000000	                   lea rsi, [0x0400412d]	      2456	ftp.c	FUNCTION_40	IF_1	CALL_4
0x400412d	          0x4c89ef	                            mov rdi, r13	      2456	ftp.c	FUNCTION_40	IF_1	CALL_4
0x4004130	            0x31c0	                            xor eax, eax	      2456	ftp.c	FUNCTION_40	IF_1	CALL_4
0x4004132	      0xe800000000	                          call 0x4004137	      2456	ftp.c	FUNCTION_40	IF_1	CALL_4
0x4004137	      0x488b542430	            mov rdx, qword [rsp + 0x30] 	      2460	ftp.c	FUNCTION_40	IF_1	IF_10	CALL_5
0x400413c	    0x488d35000000	                   lea rsi, [0x04004143]	      2460	ftp.c	FUNCTION_40	IF_1	IF_10	CALL_5
0x4004143	          0x4c89ef	                            mov rdi, r13	      2460	ftp.c	FUNCTION_40	IF_1	IF_10	CALL_5
0x4004146	            0x31c0	                            xor eax, eax	      2460	ftp.c	FUNCTION_40	IF_1	IF_10	CALL_5
0x4004148	      0xe800000000	                          call 0x400414d	      2460	ftp.c	FUNCTION_40	IF_1	IF_10	CALL_5
0x400414d	      0xe9e3fcffff	                           jmp 0x4003e35	      2460	ftp.c	FUNCTION_40	IF_1	IF_10	CALL_5
0x4004152	          0x4889df	                            mov rdi, rbx	      2973	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	ELSE_15	CALL_47
0x4004155	      0xe8a6e3ffff	                 call sym.ftp_state_mdtm	      2973	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	ELSE_15	CALL_47
0x400415a	            0x89c5	                            mov ebp, eax	      2973	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	ELSE_15	CALL_47
0x400415c	      0xe90ff5ffff	                           jmp 0x4003670	      2973	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_14	ELSE_15	CALL_47
0x4004161	    0x488d15000000	                   lea rdx, [0x04004168]	       815	ftp.c	FUNCTION_14
0x4004168	    0x488d35000000	                   lea rsi, [0x0400416f]	       815	ftp.c	FUNCTION_14
0x400416f	            0x31c0	                            xor eax, eax	       815	ftp.c	FUNCTION_14
0x4004171	          0x4c89ff	                            mov rdi, r15	       815	ftp.c	FUNCTION_14
0x4004174	            0x31ed	                            xor ebp, ebp	       815	ftp.c	FUNCTION_14
0x4004176	      0xe800000000	                          call 0x400417b	       815	ftp.c	FUNCTION_14
0x400417b	            0x85c0	                           test eax, eax	       815	ftp.c	FUNCTION_14
0x400417d	     0xf847cf7ffff	                            je 0x40038ff	       815	ftp.c	FUNCTION_14
0x4004183	      0xe9e8f4ffff	                           jmp 0x4003670	       815	ftp.c	FUNCTION_14
0x4004188	    0x48b841636365	          movabs rax, 0x722d747065636341	      2313	ftp.c	FUNCTION_38	SWITCH_1	IF_1
0x4004192	      0x488d542470	                   lea rdx, [rsp + 0x70]	      2314	ftp.c	FUNCTION_38	SWITCH_1	IF_1	CALL_1
0x4004197	            0x31c9	                            xor ecx, ecx	      2314	ftp.c	FUNCTION_38	SWITCH_1	IF_1	CALL_1
0x4004199	      0x4889442470	             mov qword [rsp + 0x70], rax	      2313	ftp.c	FUNCTION_38	SWITCH_1	IF_1
0x400419e	    0x48b8616e6765	          movabs rax, 0x62203a7365676e61	      2313	ftp.c	FUNCTION_38	SWITCH_1	IF_1
0x40041a8	      0xbe03000000	                              mov esi, 3	      2314	ftp.c	FUNCTION_38	SWITCH_1	IF_1	CALL_1
0x40041ad	      0x4889442478	             mov qword [rsp + 0x78], rax	      2313	ftp.c	FUNCTION_38	SWITCH_1	IF_1
0x40041b2	          0x4889df	                            mov rdi, rbx	      2314	ftp.c	FUNCTION_38	SWITCH_1	IF_1	CALL_1
0x40041b5	    0x48b879746573	               movabs rax, 0xa0d73657479	      2313	ftp.c	FUNCTION_38	SWITCH_1	IF_1
0x40041bf	    0x488984248000	             mov qword [rsp + 0x80], rax	      2313	ftp.c	FUNCTION_38	SWITCH_1	IF_1
0x40041c7	      0xe800000000	                          call 0x40041cc	      2314	ftp.c	FUNCTION_38	SWITCH_1	IF_1	CALL_1
0x40041cc	            0x85c0	                           test eax, eax	      2315	ftp.c	FUNCTION_38	SWITCH_1	IF_1	IF_2
0x40041ce	     0xf8444fbffff	                            je 0x4003d18	      2315	ftp.c	FUNCTION_38	SWITCH_1	IF_1	IF_2
0x40041d4	            0x89c5	                            mov ebp, eax	      2701	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10	IF_11	CALL_13
0x40041d6	      0xe995f4ffff	                           jmp 0x4003670	      2701	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_10	IF_11	CALL_13
0x40041db	    0x498b85200d00	           mov rax, qword [r13 + 0xd20] 	      2273	ftp.c	FUNCTION_37	CALL_1
0x40041e2	            0x31d2	                            xor edx, edx	      2273	ftp.c	FUNCTION_37	CALL_1
0x40041e4	            0x31f6	                            xor esi, esi	      2273	ftp.c	FUNCTION_37	CALL_1
0x40041e6	          0x4c89f1	                            mov rcx, r14	      2273	ftp.c	FUNCTION_37	CALL_1
0x40041e9	        0x488d7804	                      lea rdi, [rax + 4]	      2273	ftp.c	FUNCTION_37	CALL_1
0x40041ed	      0xe800000000	                          call 0x40041f2	      2273	ftp.c	FUNCTION_37	CALL_1
0x40041f2	          0x83fd17	                           cmp ebp, 0x17	      2275	ftp.c	FUNCTION_37	IF_2
0x40041f5	     0xf85ed040000	                           jne 0x40046e8	      2275	ftp.c	FUNCTION_37	IF_2
0x40041fb	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      2277	ftp.c	FUNCTION_37	IF_2	IF_3
0x4004200	        0x4883f9ff	             cmp rcx, 0xffffffffffffffff	      2277	ftp.c	FUNCTION_37	IF_2	IF_3
0x4004204	            0x743a	                            je 0x4004240	      2277	ftp.c	FUNCTION_37	IF_2	IF_3
0x4004206	      0x488d6c2470	                   lea rbp, [rsp + 0x70]	      2279	ftp.c	FUNCTION_37	IF_2	IF_3	CALL_2
0x400420b	    0x488d15000000	                   lea rdx, [0x04004212]	      2279	ftp.c	FUNCTION_37	IF_2	IF_3	CALL_2
0x4004212	      0xbe80000000	                           mov esi, 0x80	      2279	ftp.c	FUNCTION_37	IF_2	IF_3	CALL_2
0x4004217	            0x31c0	                            xor eax, eax	      2279	ftp.c	FUNCTION_37	IF_2	IF_3	CALL_2
0x4004219	          0x4889ef	                            mov rdi, rbp	      2279	ftp.c	FUNCTION_37	IF_2	IF_3	CALL_2
0x400421c	      0xe800000000	                          call 0x4004221	      2279	ftp.c	FUNCTION_37	IF_2	IF_3	CALL_2
0x4004221	            0x31c9	                            xor ecx, ecx	      2281	ftp.c	FUNCTION_37	IF_2	IF_3	CALL_3
0x4004223	          0x4889ea	                            mov rdx, rbp	      2281	ftp.c	FUNCTION_37	IF_2	IF_3	CALL_3
0x4004226	      0xbe03000000	                              mov esi, 3	      2281	ftp.c	FUNCTION_37	IF_2	IF_3	CALL_3
0x400422b	          0x4889df	                            mov rdi, rbx	      2281	ftp.c	FUNCTION_37	IF_2	IF_3	CALL_3
0x400422e	      0xe800000000	                          call 0x4004233	      2281	ftp.c	FUNCTION_37	IF_2	IF_3	CALL_3
0x4004233	            0x85c0	                           test eax, eax	      2282	ftp.c	FUNCTION_37	IF_2	IF_3	IF_4
0x4004235	     0xf85e5f4ffff	                           jne 0x4003720	      2282	ftp.c	FUNCTION_37	IF_2	IF_3	IF_4
0x400423b	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	      2282	ftp.c	FUNCTION_37	IF_2	IF_3	IF_4
0x4004240	          0x4889ce	                            mov rsi, rcx	      2286	ftp.c	FUNCTION_37	IF_2	CALL_4
0x4004243	          0x4c89ef	                            mov rdi, r13	      2286	ftp.c	FUNCTION_37	IF_2	CALL_4
0x4004246	      0xe800000000	                          call 0x400424b	      2286	ftp.c	FUNCTION_37	IF_2	CALL_4
0x400424b	          0x4889df	                            mov rdi, rbx	      2287	ftp.c	FUNCTION_37	IF_2	CALL_5
0x400424e	      0xe88de1ffff	                 call sym.ftp_state_rest	      2287	ftp.c	FUNCTION_37	IF_2	CALL_5
0x4004253	            0x89c5	                            mov ebp, eax	      2287	ftp.c	FUNCTION_37	IF_2	CALL_5
0x4004255	      0xe916f4ffff	                           jmp 0x4003670	      2287	ftp.c	FUNCTION_37	IF_2	CALL_5
0x400425a	    0x488d35000000	                   lea rsi, [0x04004261]	      2491	ftp.c	FUNCTION_40	ELSE_4	ELSE_5	CALL_9
0x4004261	            0x31c0	                            xor eax, eax	      2491	ftp.c	FUNCTION_40	ELSE_4	ELSE_5	CALL_9
0x4004263	          0x4489e2	                           mov edx, r12d	      2491	ftp.c	FUNCTION_40	ELSE_4	ELSE_5	CALL_9
0x4004266	          0x4c89ef	                            mov rdi, r13	      2491	ftp.c	FUNCTION_40	ELSE_4	ELSE_5	CALL_9
0x4004269	      0xe800000000	                          call 0x400426e	      2491	ftp.c	FUNCTION_40	ELSE_4	ELSE_5	CALL_9
0x400426e	          0x83fd20	                           cmp ebp, 0x20	      2492	ftp.c	FUNCTION_40	ELSE_4	ELSE_5
0x4004271	            0x7512	                           jne 0x4004285	      2492	ftp.c	FUNCTION_40	ELSE_4	ELSE_5
0x4004273	    0x4181fc260200	                         cmp r12d, 0x226	      2492	ftp.c	FUNCTION_40	ELSE_4	ELSE_5
0x400427a	      0xbd4e000000	                           mov ebp, 0x4e	      2492	ftp.c	FUNCTION_40	ELSE_4	ELSE_5
0x400427f	     0xf84ebf3ffff	                            je 0x4003670	      2492	ftp.c	FUNCTION_40	ELSE_4	ELSE_5
0x4004285	      0xbd13000000	                           mov ebp, 0x13	      2492	ftp.c	FUNCTION_40	ELSE_4	ELSE_5
0x400428a	      0xe9e1f3ffff	                           jmp 0x4003670	      2492	ftp.c	FUNCTION_40	ELSE_4	ELSE_5
0x400428f	    0x488d35000000	                   lea rsi, [0x04004296]	      2139	ftp.c	FUNCTION_34	IF_5	ELSE_1	CALL_12
0x4004296	          0x4c89ff	                            mov rdi, r15	      2139	ftp.c	FUNCTION_34	IF_5	ELSE_1	CALL_12
0x4004299	            0x31c0	                            xor eax, eax	      2139	ftp.c	FUNCTION_34	IF_5	ELSE_1	CALL_12
0x400429b	      0xe800000000	                          call 0x40042a0	      2139	ftp.c	FUNCTION_34	IF_5	ELSE_1	CALL_12
0x40042a0	      0xe9ebf6ffff	                           jmp 0x4003990	      2139	ftp.c	FUNCTION_34	IF_5	ELSE_1	CALL_12
0x40042a5	          0x4889df	                            mov rdi, rbx	      3019	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_54
0x40042a8	      0xe8b3c2ffff	             call sym.ftp_state_use_pasv	      3019	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_54
0x40042ad	            0x89c5	                            mov ebp, eax	      3019	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_54
0x40042af	      0xe9bcf3ffff	                           jmp 0x4003670	      3020	ftp.c	FUNCTION_44	IF_3	SWITCH_1
0x40042b4	          0x4889df	                            mov rdi, rbx	      2597	ftp.c	FUNCTION_43	CALL_2
0x40042b7	      0xe8a4d7ffff	             call sym.ftp_state_loggedin	      2597	ftp.c	FUNCTION_43	CALL_2
0x40042bc	            0x89c5	                            mov ebp, eax	      2597	ftp.c	FUNCTION_43	CALL_2
0x40042be	      0xe9adf3ffff	                           jmp 0x4003670	      2597	ftp.c	FUNCTION_43	CALL_2
0x40042c3	          0x4839d1	                            cmp rcx, rdx	      2128	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8
0x40042c6	     0xf8ec4f6ffff	                           jle 0x4003990	      2128	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8
0x40042cc	    0x488d35000000	                   lea rsi, [0x040042d3]	      2129	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8	CALL_11
0x40042d3	          0x4c89ff	                            mov rdi, r15	      2129	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8	CALL_11
0x40042d6	            0x31c0	                            xor eax, eax	      2129	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8	CALL_11
0x40042d8	            0x31ed	                            xor ebp, ebp	      2133	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8
0x40042da	      0xe800000000	                          call 0x40042df	      2129	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8	CALL_11
0x40042df	    0x41c745180200	               mov dword [r13 + 0x18], 2	      2130	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8
0x40042e7	    0x41c687f05100	              mov byte [r15 + 0x51f0], 1	      2131	ftp.c	FUNCTION_34	IF_5	IF_6	SWITCH_2	IF_8
0x40042ef	    0xc7830c070000	              mov dword [rbx + 0x70c], 0	       794	ftp.c	ELSE_3	FUNCTION_12
0x40042f9	      0xe972f3ffff	                           jmp 0x4003670	       794	ftp.c	ELSE_3	FUNCTION_12
0x40042fe	      0xbd1b000000	                           mov ebp, 0x1b	      2790	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_23
0x4004303	      0xe968f3ffff	                           jmp 0x4003670	      2790	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_23
0x4004308	          0x488b3b	                    mov rdi, qword [rbx]	      2769	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_19	IF_20	CALL_20
0x400430b	    0x488d35000000	                   lea rsi, [0x04004312]	      2769	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_19	IF_20	CALL_20
0x4004312	            0x31c0	                            xor eax, eax	      2769	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_19	IF_20	CALL_20
0x4004314	      0xe800000000	                          call 0x4004319	      2769	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_19	IF_20	CALL_20
0x4004319	      0xe952f3ffff	                           jmp 0x4003670	      2770	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_19	IF_20
0x400431e	          0x83c001	                              add eax, 1	      2705	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12
0x4004321	    0x488d15000000	                   lea rdx, [0x04004328]	      2707	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12	CALL_14
0x4004328	    0x488d35000000	                   lea rsi, [0x0400432f]	      2707	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12	CALL_14
0x400432f	    0x898308070000	            mov dword [rbx + 0x708], eax	      2705	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12
0x4004335	    0x8b8304070000	           mov eax, dword [rbx + 0x704] 	      2706	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12
0x400433b	          0x4c89ff	                            mov rdi, r15	      2707	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12	CALL_14
0x400433e	     0x38300070000	            add eax, dword [rbx + 0x700]	      2706	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12
0x4004344	    0x898300070000	            mov dword [rbx + 0x700], eax	      2706	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12
0x400434a	            0x4898	                                    cdqe	      2707	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12	CALL_14
0x400434c	        0x488d1482	                  lea rdx, [rdx + rax*4]	      2707	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12	CALL_14
0x4004350	            0x31c0	                            xor eax, eax	      2707	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12	CALL_14
0x4004352	      0xe800000000	                          call 0x4004357	      2707	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12	CALL_14
0x4004357	            0x89c5	                            mov ebp, eax	      2707	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12	CALL_14
0x4004359	      0xe912f3ffff	                           jmp 0x4003670	      2707	ftp.c	FUNCTION_44	IF_3	SWITCH_1	ELSE_4	IF_12	CALL_14
0x400435e	    0x8bb304070000	           mov esi, dword [rbx + 0x704] 	      2951	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4004364	            0x85f6	                           test esi, esi	      2951	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4004366	     0xf8521f9ffff	                           jne 0x4003c8d	      2951	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x400436c	    0x488b93c80600	           mov rdx, qword [rbx + 0x6c8] 	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4004373	    0x488d35000000	                   lea rsi, [0x0400437a]	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x400437a	    0xc78304070000	              mov dword [rbx + 0x704], 1	      2953	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4004384	          0x4c89ff	                            mov rdi, r15	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4004387	      0x488b54c2f8	        mov rdx, qword [rdx + rax*8 - 8]	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x400438c	            0x31c0	                            xor eax, eax	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x400438e	      0xe800000000	                          call 0x4004393	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4004393	            0x85c0	                           test eax, eax	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4004395	            0x89c5	                            mov ebp, eax	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x4004397	     0xf85d3f2ffff	                           jne 0x4003670	      2954	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_37	IF_38
0x400439d	    0xc7830c070000	          mov dword [rbx + 0x70c], 0x11 	       794	ftp.c	ELSE_3	FUNCTION_12
0x40043a7	      0xe9c4f2ffff	                           jmp 0x4003670	       794	ftp.c	ELSE_3	FUNCTION_12
0x40043ac	    0x488d35000000	                   lea rsi, [0x040043b3]	      2456	ftp.c	FUNCTION_40	IF_1	CALL_4
0x40043b3	          0x4c89ef	                            mov rdi, r13	      2456	ftp.c	FUNCTION_40	IF_1	CALL_4
0x40043b6	            0x31c0	                            xor eax, eax	      2456	ftp.c	FUNCTION_40	IF_1	CALL_4
0x40043b8	      0xe800000000	                          call 0x40043bd	      2456	ftp.c	FUNCTION_40	IF_1	CALL_4
0x40043bd	      0xe973faffff	                           jmp 0x4003e35	      2456	ftp.c	FUNCTION_40	IF_1	CALL_4
0x40043c2	      0xbee6000000	                           mov esi, 0xe6	      2627	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_3
0x40043c7	          0x4889df	                            mov rdi, rbx	      2627	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_3
0x40043ca	      0xe801d7ffff	     call sym.ftp_state_user_resp.isra.1	      2627	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_3
0x40043cf	            0x89c5	                            mov ebp, eax	      2627	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_3
0x40043d1	      0xe99af2ffff	                           jmp 0x4003670	      2627	ftp.c	FUNCTION_44	IF_3	SWITCH_1	CALL_3
0x40043d6	    0x488b93d80600	           mov rdx, qword [rbx + 0x6d8] 	      2328	ftp.c	FUNCTION_38	SWITCH_1	ELSE_1
0x40043dd	    0x488d35000000	                   lea rsi, [0x040043e4]	      2328	ftp.c	FUNCTION_38	SWITCH_1	ELSE_1
0x40043e4	            0x31c0	                            xor eax, eax	      2328	ftp.c	FUNCTION_38	SWITCH_1	ELSE_1
0x40043e6	          0x4c89ff	                            mov rdi, r15	      2328	ftp.c	FUNCTION_38	SWITCH_1	ELSE_1
0x40043e9	      0xe800000000	                          call 0x40043ee	      2328	ftp.c	FUNCTION_38	SWITCH_1	ELSE_1
0x40043ee	            0x85c0	                           test eax, eax	      2328	ftp.c	FUNCTION_38	SWITCH_1	ELSE_1
0x40043f0	            0x89c5	                            mov ebp, eax	      2328	ftp.c	FUNCTION_38	SWITCH_1	ELSE_1
0x40043f2	     0xf8578f2ffff	                           jne 0x4003670	      2328	ftp.c	FUNCTION_38	SWITCH_1	ELSE_1
0x40043f8	    0xc7830c070000	          mov dword [rbx + 0x70c], 0x20 	       794	ftp.c	ELSE_3	FUNCTION_12
0x4004402	      0xe969f2ffff	                           jmp 0x4003670	       794	ftp.c	ELSE_3	FUNCTION_12
0x4004407	          0x4c89ef	                            mov rdi, r13	      2290	ftp.c	FUNCTION_37	ELSE_1	IF_5	CALL_6
0x400440a	      0xe800000000	                          call 0x400440f	      2290	ftp.c	FUNCTION_37	ELSE_1	IF_5	CALL_6
0x400440f	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	      2291	ftp.c	FUNCTION_37	ELSE_1	IF_5	CALL_7
0x4004414	          0x4889df	                            mov rdi, rbx	      2291	ftp.c	FUNCTION_37	ELSE_1	IF_5	CALL_7
0x4004417	      0xe874bfffff	                 call sym.ftp_state_retr	      2291	ftp.c	FUNCTION_37	ELSE_1	IF_5	CALL_7
0x400441c	            0x89c5	                            mov ebp, eax	      2291	ftp.c	FUNCTION_37	ELSE_1	IF_5	CALL_7
0x400441e	      0xe94df2ffff	                           jmp 0x4003670	      2291	ftp.c	FUNCTION_37	ELSE_1	IF_5	CALL_7
0x4004423	    0x488b05000000	            mov rax, qword [0x0400442a] 	      2910	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	CALL_38
0x400442a	    0x488bbb200700	           mov rdi, qword [rbx + 0x720] 	      2910	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	CALL_38
0x4004431	            0xff10	                        call qword [rax]	      2910	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	CALL_38
0x4004433	    0x4c89a3200700	            mov qword [rbx + 0x720], r12	      2911	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30
0x400443a	      0xe95df6ffff	                           jmp 0x4003a9c	      2911	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30
0x400443f	    0x4d8ba5200d00	           mov r12, qword [r13 + 0xd20] 	      2424	ftp.c	FUNCTION_40	IF_1	IF_2
0x4004446	    0x488d35000000	                   lea rsi, [0x0400444d]	      2425	ftp.c	FUNCTION_40	IF_1	IF_2	CALL_1
0x400444d	          0x4c89e7	                            mov rdi, r12	      2425	ftp.c	FUNCTION_40	IF_1	IF_2	CALL_1
0x4004450	      0xe800000000	                          call 0x4004455	      2425	ftp.c	FUNCTION_40	IF_1	IF_2	CALL_1
0x4004455	          0x4885c0	                           test rax, rax	      2426	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3
0x4004458	            0x7460	                            je 0x40044ba	      2426	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3
0x400445a	        0x488d48ff	                      lea rcx, [rax - 1]	      2427	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3
0x400445e	          0x4889ce	                            mov rsi, rcx	      2427	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3
0x4004461	          0x4c29e6	                            sub rsi, r12	      2427	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3
0x4004464	        0x4883fe01	                              cmp rsi, 1	      2429	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1
0x4004468	     0xf8407020000	                            je 0x4004675	      2429	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1
0x400446e	         0xfb650ff	               movzx edx, byte [rax - 1]	      2431	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1	IF_4
0x4004472	          0x80fa28	                            cmp dl, 0x28	      2431	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1	IF_4
0x4004475	     0xf8418020000	                            je 0x4004693	      2431	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1	IF_4
0x400447b	        0x4c8d78fe	                      lea r15, [rax - 2]	      2431	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1	IF_4
0x400447f	          0x4829f0	                            sub rax, rsi	      2431	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1	IF_4
0x4004482	          0x4989c4	                            mov r12, rax	      2431	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1	IF_4
0x4004485	            0xeb27	                           jmp 0x40044ae	      2431	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1	IF_4
0x4004487	    0x660f1f840000	                    nop word [rax + rax]	      2431	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1	IF_4
0x4004490	          0x4d39e7	                            cmp r15, r12	      2429	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1
0x4004493	          0x4c89f9	                            mov rcx, r15	      2439	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1
0x4004496	     0xf84d9010000	                            je 0x4004675	      2429	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1
0x400449c	        0x4983ef01	                              sub r15, 1	      2429	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1
0x40044a0	      0x410fb65701	               movzx edx, byte [r15 + 1]	      2431	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1	IF_4
0x40044a5	          0x80fa28	                            cmp dl, 0x28	      2431	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1	IF_4
0x40044a8	     0xf84e5010000	                            je 0x4004693	      2431	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1	IF_4
0x40044ae	           0xfb6fa	                           movzx edi, dl	      2434	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1	IF_5	CALL_2
0x40044b1	      0xe800000000	                          call 0x40044b6	      2434	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1	IF_5	CALL_2
0x40044b6	            0x85c0	                           test eax, eax	      2434	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1	IF_5	CALL_2
0x40044b8	            0x75d6	                           jne 0x4004490	      2434	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	WHILE_1	IF_5	CALL_2
0x40044ba	    0x498b95d00000	            mov rdx, qword [r13 + 0xd0] 	      2451	ftp.c	FUNCTION_40	IF_1	IF_8
0x40044c1	      0x4839542430	            cmp qword [rsp + 0x30], rdx 	      2451	ftp.c	FUNCTION_40	IF_1	IF_8
0x40044c6	     0xf8e47fcffff	                           jle 0x4004113	      2451	ftp.c	FUNCTION_40	IF_1	IF_8
0x40044cc	          0x4885d2	                           test rdx, rdx	      2451	ftp.c	FUNCTION_40	IF_1	IF_8
0x40044cf	     0xf8e3efcffff	                           jle 0x4004113	      2451	ftp.c	FUNCTION_40	IF_1	IF_8
0x40044d5	    0x498995c00000	             mov qword [r13 + 0xc0], rdx	      2452	ftp.c	FUNCTION_40	IF_1	IF_8
0x40044dc	      0x4889542430	             mov qword [rsp + 0x30], rdx	      2452	ftp.c	FUNCTION_40	IF_1	IF_8
0x40044e1	      0xe940fcffff	                           jmp 0x4004126	      2452	ftp.c	FUNCTION_40	IF_1	IF_8
0x40044e6	            0x31ff	                            xor edi, edi	      2062	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_2
0x40044e8	      0x488d6c2470	                   lea rbp, [rsp + 0x70]	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x40044ed	      0xe800000000	                          call 0x40044f2	      2062	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_2
0x40044f2	      0x4889442430	             mov qword [rsp + 0x30], rax	      2062	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_2
0x40044f7	              0x50	                                push rax	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x40044f8	    0x488d15000000	                   lea rdx, [0x040044ff]	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x40044ff	        0x8b44242c	            mov eax, dword [rsp + 0x2c] 	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x4004503	      0xbe18000000	                           mov esi, 0x18	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x4004508	          0x4889ef	                            mov rdi, rbp	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x400450b	              0x50	                                push rax	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x400450c	        0x8b442430	            mov eax, dword [rsp + 0x30] 	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x4004510	              0x50	                                push rax	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x4004511	        0x8b442434	            mov eax, dword [rsp + 0x34] 	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x4004515	              0x50	                                push rax	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x4004516	      0x448b4c2438	            mov r9d, dword [rsp + 0x38] 	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x400451b	            0x31c0	                            xor eax, eax	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x400451d	      0x448b442434	            mov r8d, dword [rsp + 0x34] 	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x4004522	        0x8b4c2430	            mov ecx, dword [rsp + 0x30] 	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x4004526	      0xe800000000	                          call 0x400452b	      2064	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_3
0x400452b	        0x4883c420	                           add rsp, 0x20	      2068	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_4
0x400452f	          0x4c89f6	                            mov rsi, r14	      2068	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_4
0x4004532	          0x4889ef	                            mov rdi, rbp	      2068	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_4
0x4004535	      0xe800000000	                          call 0x400453a	      2068	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_4
0x400453a	    0x498987e85100	          mov qword [r15 + 0x51e8], rax 	      2068	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_4
0x4004541	      0xe992faffff	                           jmp 0x4003fd8	      2068	ftp.c	FUNCTION_34	SWITCH_1	IF_1	CALL_4
0x4004546	      0x488b7c2408	                mov rdi, qword [rsp + 8]	      2671	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2	CALL_10
0x400454b	    0x488d35000000	                   lea rsi, [0x04004552]	      2671	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2	CALL_10
0x4004552	            0x31c0	                            xor eax, eax	      2671	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2	CALL_10
0x4004554	      0xbd30000000	                           mov ebp, 0x30	      2673	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4004559	      0xe800000000	                          call 0x400455e	      2671	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2	CALL_10
0x400455e	      0xe90df1ffff	                           jmp 0x4003670	      2673	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4004563	    0xc78304070000	              mov dword [rbx + 0x704], 1	      2663	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x400456d	    0xc78300070000	              mov dword [rbx + 0x700], 0	      2664	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x4004577	      0xe9b7f0ffff	                           jmp 0x4003633	      2665	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_8	SWITCH_2
0x400457c	      0xe800000000	                          call 0x4004581	      3049	ftp.c	FUNCTION_44
0x4004581	    0x488b05000000	            mov rax, qword [0x04004588] 	      2903	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_37
0x4004588	    0x488bbb200700	           mov rdi, qword [rbx + 0x720] 	      2903	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_37
0x400458f	            0x31ed	                            xor ebp, ebp	       794	ftp.c	ELSE_3	FUNCTION_12
0x4004591	            0xff10	                        call qword [rax]	      2903	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32	CALL_37
0x4004593	    0x4c89a3200700	            mov qword [rbx + 0x720], r12	      2904	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_30	IF_32
0x400459a	    0xc7830c070000	           mov dword [rbx + 0x70c], 0xb 	       794	ftp.c	ELSE_3	FUNCTION_12
0x40045a4	      0xe9c7f0ffff	                           jmp 0x4003670	       794	ftp.c	ELSE_3	FUNCTION_12
0x40045a9	         0xfb64501	               movzx eax, byte [rbp + 1]	      2809	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1
0x40045ad	        0x488d4d01	                      lea rcx, [rbp + 1]	      2808	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24
0x40045b1	          0x4c89f2	                            mov rdx, r14	      2809	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1
0x40045b4	            0x84c0	                             test al, al	      2809	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1
0x40045b6	            0x751d	                           jne 0x40045d5	      2809	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1
0x40045b8	            0xeb7e	                           jmp 0x4004638	      2809	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1
0x40045ba	    0x660f1f440000	                    nop word [rax + rax]	      2809	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1
0x40045c0	            0x8802	                      mov byte [rdx], al	      2823	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	ELSE_10
0x40045c2	          0x4889c8	                            mov rax, rcx	      2823	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	ELSE_10
0x40045c5	        0x488d4801	                      lea rcx, [rax + 1]	      2825	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	ELSE_10
0x40045c9	         0xfb64001	               movzx eax, byte [rax + 1]	      2809	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1
0x40045cd	        0x4883c201	                              add rdx, 1	      2824	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	ELSE_10
0x40045d1	            0x84c0	                             test al, al	      2809	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1
0x40045d3	            0x7463	                            je 0x4004638	      2809	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1
0x40045d5	            0x3c22	                            cmp al, 0x22	      2810	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	IF_25
0x40045d7	            0x75e7	                           jne 0x40045c0	      2810	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	IF_25
0x40045d9	        0x80790122	                cmp byte [rcx + 1], 0x22	      2811	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	IF_25	IF_26
0x40045dd	            0x7509	                           jne 0x40045e8	      2811	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	IF_25	IF_26
0x40045df	          0xc60222	                    mov byte [rdx], 0x22	      2813	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	IF_25	IF_26
0x40045e2	        0x488d4101	                      lea rax, [rcx + 1]	      2814	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	IF_25	IF_26
0x40045e6	            0xebdd	                           jmp 0x40045c5	      2814	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	FOR_1	IF_25	IF_26
0x40045e8	          0xc60200	                       mov byte [rdx], 0	      2827	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	ELSE_10
0x40045eb	    0x4883bb200700	              cmp qword [rbx + 0x720], 0	      2842	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28
0x40045f3	            0x744b	                            je 0x4004640	      2842	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28
0x40045f5	    0x488b05000000	            mov rax, qword [0x040045fc] 	      2858	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	CALL_27
0x40045fc	    0x488bbbc00600	           mov rdi, qword [rbx + 0x6c0] 	      2858	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	CALL_27
0x4004603	            0xff10	                        call qword [rax]	      2858	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	CALL_27
0x4004605	    0x4c89b3c00600	            mov qword [rbx + 0x6c0], r14	      2859	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27
0x400460c	          0x4c89f2	                            mov rdx, r14	      2860	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	CALL_28
0x400460f	      0x4c8b742408	                mov r14, qword [rsp + 8]	      2860	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	CALL_28
0x4004614	    0x488d35000000	                   lea rsi, [0x0400461b]	      2860	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	CALL_28
0x400461b	            0x31c0	                            xor eax, eax	      2860	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	CALL_28
0x400461d	          0x4c89f7	                            mov rdi, r14	      2860	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	CALL_28
0x4004620	      0xe800000000	                          call 0x4004625	      2860	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	CALL_28
0x4004625	    0x488b83c00600	           mov rax, qword [rbx + 0x6c0] 	      2862	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27
0x400462c	    0x498986f05000	          mov qword [r14 + 0x50f0], rax 	      2862	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27
0x4004633	      0xe964f4ffff	                           jmp 0x4003a9c	      2862	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27
0x4004638	          0xc60200	                       mov byte [rdx], 0	      2827	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	ELSE_10
0x400463b	      0xe931f5ffff	                           jmp 0x4003b71	      2827	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	IF_24	ELSE_10
0x4004640	        0x41803e2f	                    cmp byte [r14], 0x2f	      2842	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28
0x4004644	            0x74af	                            je 0x40045f5	      2842	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28
0x4004646	    0x488d15000000	                   lea rdx, [0x0400464d]	      2844	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_23
0x400464d	    0x488d35000000	                   lea rsi, [0x04004654]	      2844	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_23
0x4004654	            0x31c0	                            xor eax, eax	      2844	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_23
0x4004656	          0x4c89ff	                            mov rdi, r15	      2844	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_23
0x4004659	      0xe800000000	                          call 0x400465e	      2844	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_23
0x400465e	            0x85c0	                           test eax, eax	      2845	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	IF_29
0x4004660	            0x89c5	                            mov ebp, eax	      2844	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_23
0x4004662	            0x7435	                            je 0x4004699	      2845	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	IF_29
0x4004664	    0x488b05000000	            mov rax, qword [0x0400466b] 	      2846	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	IF_29	CALL_24
0x400466b	          0x4c89f7	                            mov rdi, r14	      2846	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	IF_29	CALL_24
0x400466e	            0xff10	                        call qword [rax]	      2846	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	IF_29	CALL_24
0x4004670	      0xe9fbefffff	                           jmp 0x4003670	      2847	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	IF_29
0x4004675	          0x4885c9	                           test rcx, rcx	      2442	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	IF_6
0x4004678	        0x488d7901	                      lea rdi, [rcx + 1]	      2442	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	IF_6
0x400467c	     0xf8438feffff	                            je 0x40044ba	      2442	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	IF_6
0x4004682	          0x4c89f1	                            mov rcx, r14	      2444	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	IF_6	CALL_3
0x4004685	            0x31d2	                            xor edx, edx	      2444	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	IF_6	CALL_3
0x4004687	            0x31f6	                            xor esi, esi	      2444	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	IF_6	CALL_3
0x4004689	      0xe800000000	                          call 0x400468e	      2444	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	IF_6	CALL_3
0x400468e	      0xe927feffff	                           jmp 0x40044ba	      2444	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	IF_6	CALL_3
0x4004693	        0x488d7901	                      lea rdi, [rcx + 1]	      2442	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	IF_6
0x4004697	            0xebe9	                           jmp 0x4004682	      2442	ftp.c	FUNCTION_40	IF_1	IF_2	IF_3	IF_6
0x4004699	    0x488b05000000	            mov rax, qword [0x040046a0] 	      2849	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_25
0x40046a0	    0x488bbbc00600	           mov rdi, qword [rbx + 0x6c0] 	      2849	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_25
0x40046a7	            0x31ed	                            xor ebp, ebp	       794	ftp.c	ELSE_3	FUNCTION_12
0x40046a9	            0xff10	                        call qword [rax]	      2849	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_25
0x40046ab	    0x4c89b3c00600	            mov qword [rbx + 0x6c0], r14	      2850	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28
0x40046b2	          0x4c89f2	                            mov rdx, r14	      2851	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_26
0x40046b5	      0x4c8b742408	                mov r14, qword [rsp + 8]	      2851	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_26
0x40046ba	    0x488d35000000	                   lea rsi, [0x040046c1]	      2851	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_26
0x40046c1	            0x31c0	                            xor eax, eax	      2851	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_26
0x40046c3	          0x4c89f7	                            mov rdi, r14	      2851	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_26
0x40046c6	      0xe800000000	                          call 0x40046cb	      2851	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28	CALL_26
0x40046cb	    0x488b83c00600	           mov rax, qword [rbx + 0x6c0] 	      2853	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28
0x40046d2	    0x498986f05000	          mov qword [r14 + 0x50f0], rax 	      2853	ftp.c	FUNCTION_44	IF_3	SWITCH_1	IF_22	ELSE_10	IF_27	IF_28
0x40046d9	    0xc7830c070000	            mov dword [rbx + 0x70c], 0xa	       794	ftp.c	ELSE_3	FUNCTION_12
0x40046e3	      0xe988efffff	                           jmp 0x4003670	       794	ftp.c	ELSE_3	FUNCTION_12
0x40046e8	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	       794	ftp.c	ELSE_3	FUNCTION_12
0x40046ed	      0xe9ecf5ffff	                           jmp 0x4003cde	       794	ftp.c	ELSE_3	FUNCTION_12
ftp_state_mdtm	WHILE,0:SWITCH,0:IF,1:ELSE,1:FOR,0:CALL,1:functions,0:DO,0	25
0x4002500	          0x488b07	                    mov rax, qword [rdi]	      1565	ftp.c	FUNCTION_27
0x4002503	    0x80b8d2070000	               cmp byte [rax + 0x7d2], 0	      1569	ftp.c	FUNCTION_27	IF_1
0x400250a	            0x750a	                           jne 0x4002516	      1569	ftp.c	FUNCTION_27	IF_1
0x400250c	    0x8b80c0050000	           mov eax, dword [rax + 0x5c0] 	      1569	ftp.c	FUNCTION_27	IF_1
0x4002512	            0x85c0	                           test eax, eax	      1569	ftp.c	FUNCTION_27	IF_1
0x4002514	            0x7442	                            je 0x4002558	      1569	ftp.c	FUNCTION_27	IF_1
0x4002516	    0x488b97d80600	           mov rdx, qword [rdi + 0x6d8] 	      1569	ftp.c	FUNCTION_27	IF_1
0x400251d	          0x4885d2	                           test rdx, rdx	      1569	ftp.c	FUNCTION_27	IF_1
0x4002520	            0x7436	                            je 0x4002558	      1569	ftp.c	FUNCTION_27	IF_1
0x4002522	              0x53	                                push rbx	      1563	ftp.c	FUNCTION_27
0x4002523	    0x488d35000000	                   lea rsi, [0x0400252a]	      1573	ftp.c	FUNCTION_27	IF_1
0x400252a	          0x4889fb	                            mov rbx, rdi	      1573	ftp.c	FUNCTION_27	IF_1
0x400252d	    0x488dbf500600	                  lea rdi, [rdi + 0x650]	      1573	ftp.c	FUNCTION_27	IF_1
0x4002534	            0x31c0	                            xor eax, eax	      1573	ftp.c	FUNCTION_27	IF_1
0x4002536	      0xe800000000	                          call 0x400253b	      1573	ftp.c	FUNCTION_27	IF_1
0x400253b	            0x85c0	                           test eax, eax	      1573	ftp.c	FUNCTION_27	IF_1
0x400253d	            0x7409	                            je 0x4002548	      1573	ftp.c	FUNCTION_27	IF_1
0x400253f	              0x5b	                                 pop rbx	      1581	ftp.c	FUNCTION_27
0x4002540	              0xc3	                                     ret	      1581	ftp.c	FUNCTION_27
0x4002541	     0xf1f80000000	                         nop dword [rax]	      1581	ftp.c	FUNCTION_27
0x4002548	    0xc7830c070000	          mov dword [rbx + 0x70c], 0x12 	       794	ftp.c	ELSE_3	FUNCTION_12
0x4002552	              0x5b	                                 pop rbx	      1581	ftp.c	FUNCTION_27
0x4002553	              0xc3	                                     ret	      1581	ftp.c	FUNCTION_27
0x4002554	         0xf1f4000	                         nop dword [rax]	      1581	ftp.c	FUNCTION_27
0x4002558	      0xe943ffffff	                  jmp sym.ftp_state_type	      1578	ftp.c	FUNCTION_27	CALL_1
ftp_state_user	WHILE,0:SWITCH,0:IF,0:ELSE,0:FOR,0:CALL,0:functions,0:DO,0	19
0x4000110	          0x488b07	                    mov rax, qword [rdi]	       800	ftp.c	FUNCTION_13
0x4000113	              0x53	                                push rbx	       798	ftp.c	FUNCTION_13
0x4000114	    0x488d35000000	                   lea rsi, [0x0400011b]	       802	ftp.c	FUNCTION_13
0x400011b	          0x4889fb	                            mov rbx, rdi	       798	ftp.c	FUNCTION_13
0x400011e	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	       802	ftp.c	FUNCTION_13
0x4000125	        0x488b5008	                mov rdx, qword [rax + 8]	       802	ftp.c	FUNCTION_13
0x4000129	    0x488d05000000	                   lea rax, [0x04000130]	       802	ftp.c	FUNCTION_13
0x4000130	          0x4885d2	                           test rdx, rdx	       802	ftp.c	FUNCTION_13
0x4000133	        0x480f44d0	                          cmove rdx, rax	       802	ftp.c	FUNCTION_13
0x4000137	    0x4881c7500600	                          add rdi, 0x650	       802	ftp.c	FUNCTION_13
0x400013e	            0x31c0	                            xor eax, eax	       802	ftp.c	FUNCTION_13
0x4000140	      0xe800000000	                          call 0x4000145	       802	ftp.c	FUNCTION_13
0x4000145	            0x85c0	                           test eax, eax	       802	ftp.c	FUNCTION_13
0x4000147	            0x7514	                           jne 0x400015d	       802	ftp.c	FUNCTION_13
0x4000149	          0x488b13	                    mov rdx, qword [rbx]	       805	ftp.c	FUNCTION_13
0x400014c	    0xc7830c070000	              mov dword [rbx + 0x70c], 3	       794	ftp.c	ELSE_3	FUNCTION_12
0x4000156	    0xc682f8500000	              mov byte [rdx + 0x50f8], 0	       805	ftp.c	FUNCTION_13
0x400015d	              0x5b	                                 pop rbx	       808	ftp.c	FUNCTION_13
0x400015e	              0xc3	                                     ret	       808	ftp.c	FUNCTION_13
ftp_do	WHILE,0:SWITCH,0:IF,4:ELSE,1:FOR,0:CALL,3:functions,0:DO,0	379
0x4004700	            0x4157	                                push r15	      3926	ftp.c	FUNCTION_57
0x4004702	            0x4156	                                push r14	      3926	ftp.c	FUNCTION_57
0x4004704	            0x4155	                                push r13	      3926	ftp.c	FUNCTION_57
0x4004706	            0x4154	                                push r12	      3926	ftp.c	FUNCTION_57
0x4004708	    0x4c8d2d000000	                   lea r13, [0x0400470f]	      3796	ftp.c	FUNCTION_56	SWITCH_1
0x400470f	              0x55	                                push rbp	      3926	ftp.c	FUNCTION_57
0x4004710	              0x53	                                push rbx	      3926	ftp.c	FUNCTION_57
0x4004711	          0x4889fd	                            mov rbp, rdi	      3926	ftp.c	FUNCTION_57
0x4004714	          0x4989f4	                            mov r12, rsi	      3926	ftp.c	FUNCTION_57
0x4004717	        0x4883ec18	                           sub rsp, 0x18	      3926	ftp.c	FUNCTION_57
0x400471b	          0x488b1f	                    mov rbx, qword [rdi]	      3933	ftp.c	FUNCTION_57	IF_1
0x400471e	          0xc60600	                       mov byte [rsi], 0	      3930	ftp.c	FUNCTION_57
0x4004721	    0xc687e9060000	               mov byte [rdi + 0x6e9], 0	      3931	ftp.c	FUNCTION_57
0x4004728	    0x80bbf9500000	              cmp byte [rbx + 0x50f9], 0	      3933	ftp.c	FUNCTION_57	IF_1
0x400472f	     0xf851c010000	                           jne 0x4004851	      3933	ftp.c	FUNCTION_57	IF_1
0x4004735	      0xe806cdffff	             call sym.ftp_parse_url_path	      3944	ftp.c	FUNCTION_57	ELSE_1	CALL_2
0x400473a	            0x85c0	                           test eax, eax	      3945	ftp.c	FUNCTION_57	ELSE_1	IF_4
0x400473c	     0xf8599000000	                           jne 0x40047db	      3945	ftp.c	FUNCTION_57	ELSE_1	IF_4
0x4004742	        0x488b5d00	                    mov rbx, qword [rbp]	      3945	ftp.c	FUNCTION_57	ELSE_1	IF_4
0x4004746	            0x31f6	                            xor esi, esi	      4355	ftp.c	FUNCTION_64	CALL_1
0x4004748	          0x4889df	                            mov rdi, rbx	      4355	ftp.c	FUNCTION_64	CALL_1
0x400474b	    0x48c783c00000	mov qword [rbx + 0xc0], 0xffffffffffffffff	      4353	ftp.c	FUNCTION_64
0x4004756	      0xe800000000	                          call 0x400475b	      4355	ftp.c	FUNCTION_64	CALL_1
0x400475b	            0x31f6	                            xor esi, esi	      4356	ftp.c	FUNCTION_64	CALL_2
0x400475d	          0x4889df	                            mov rdi, rbx	      4356	ftp.c	FUNCTION_64	CALL_2
0x4004760	    0x4c8dad500600	                  lea r13, [rbp + 0x650]	      4352	ftp.c	FUNCTION_64
0x4004767	      0xe800000000	                          call 0x400476c	      4356	ftp.c	FUNCTION_64	CALL_2
0x400476c	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	      4357	ftp.c	FUNCTION_64	CALL_3
0x4004773	          0x4889df	                            mov rdi, rbx	      4357	ftp.c	FUNCTION_64	CALL_3
0x4004776	      0xe800000000	                          call 0x400477b	      4357	ftp.c	FUNCTION_64	CALL_3
0x400477b	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	      4358	ftp.c	FUNCTION_64	CALL_4
0x4004782	          0x4889df	                            mov rdi, rbx	      4358	ftp.c	FUNCTION_64	CALL_4
0x4004785	      0xe800000000	                          call 0x400478a	      4358	ftp.c	FUNCTION_64	CALL_4
0x400478a	        0x488b4500	                    mov rax, qword [rbp]	      3662	ftp.c	FUNCTION_53	IF_1
0x400478e	    0xc685e1060000	               mov byte [rbp + 0x6e1], 1	      4360	ftp.c	FUNCTION_64
0x4004795	    0x80b8e1070000	               cmp byte [rax + 0x7e1], 0	      3662	ftp.c	FUNCTION_53	IF_1
0x400479c	            0x740e	                            je 0x40047ac	      3662	ftp.c	FUNCTION_53	IF_1
0x400479e	    0x488b80e80100	           mov rax, qword [rax + 0x1e8] 	      3665	ftp.c	FUNCTION_53	IF_1
0x40047a5	    0xc74018010000	               mov dword [rax + 0x18], 1	      3665	ftp.c	FUNCTION_53	IF_1
0x40047ac	      0x41c6042400	                       mov byte [r12], 0	      3668	ftp.c	FUNCTION_53
0x40047b1	      0xba0c000000	                            mov edx, 0xc	      3671	ftp.c	FUNCTION_53	CALL_3
0x40047b6	      0xbe01000000	                              mov esi, 1	      3671	ftp.c	FUNCTION_53	CALL_3
0x40047bb	          0x4889ef	                            mov rdi, rbp	      3671	ftp.c	FUNCTION_53	CALL_3
0x40047be	      0xe89dddffff	                call sym.ftp_state_quote	      3671	ftp.c	FUNCTION_53	CALL_3
0x40047c3	            0x85c0	                           test eax, eax	      3672	ftp.c	FUNCTION_53	IF_2
0x40047c5	     0xf8425040000	                            je 0x4004bf0	      3672	ftp.c	FUNCTION_53	IF_2
0x40047cb	          0x4c89ef	                            mov rdi, r13	      4378	ftp.c	FUNCTION_64	CALL_7
0x40047ce	        0x89442408	                mov dword [rsp + 8], eax	      4378	ftp.c	FUNCTION_64	CALL_7
0x40047d2	      0xe869b8ffff	                       call sym.freedirs	      4378	ftp.c	FUNCTION_64	CALL_7
0x40047d7	        0x8b442408	                mov eax, dword [rsp + 8]	      4378	ftp.c	FUNCTION_64	CALL_7
0x40047db	        0x4883c418	                           add rsp, 0x18	      3952	ftp.c	FUNCTION_57
0x40047df	              0x5b	                                 pop rbx	      3952	ftp.c	FUNCTION_57
0x40047e0	              0x5d	                                 pop rbp	      3952	ftp.c	FUNCTION_57
0x40047e1	            0x415c	                                 pop r12	      3952	ftp.c	FUNCTION_57
0x40047e3	            0x415d	                                 pop r13	      3952	ftp.c	FUNCTION_57
0x40047e5	            0x415e	                                 pop r14	      3952	ftp.c	FUNCTION_57
0x40047e7	            0x415f	                                 pop r15	      3952	ftp.c	FUNCTION_57
0x40047e9	              0xc3	                                     ret	      3952	ftp.c	FUNCTION_57
0x40047ea	    0x660f1f440000	                    nop word [rax + rax]	      3952	ftp.c	FUNCTION_57
0x40047f0	    0x4883bb780a00	              cmp qword [rbx + 0xa78], 0	      3885	ftp.c	FUNCTION_56	SWITCH_1	IF_10
0x40047f8	            0x7429	                            je 0x4004823	      3885	ftp.c	FUNCTION_56	SWITCH_1	IF_10
0x40047fa	      0xbe01000000	                              mov esi, 1	      3886	ftp.c	FUNCTION_56	SWITCH_1	IF_10	CALL_16
0x40047ff	          0x4889df	                            mov rdi, rbx	      3886	ftp.c	FUNCTION_56	SWITCH_1	IF_10	CALL_16
0x4004802	      0xe800000000	                          call 0x4004807	      3886	ftp.c	FUNCTION_56	SWITCH_1	IF_10	CALL_16
0x4004807	        0x488b4500	                    mov rax, qword [rbp]	      3887	ftp.c	FUNCTION_56	SWITCH_1	IF_10	CALL_17
0x400480b	    0x488bb8d05100	          mov rdi, qword [rax + 0x51d0] 	      3887	ftp.c	FUNCTION_56	SWITCH_1	IF_10	CALL_17
0x4004812	    0xff90780a0000	                call qword [rax + 0xa78]	      3887	ftp.c	FUNCTION_56	SWITCH_1	IF_10	CALL_17
0x4004818	        0x488b7d00	                    mov rdi, qword [rbp]	      3888	ftp.c	FUNCTION_56	SWITCH_1	IF_10	CALL_18
0x400481c	            0x31f6	                            xor esi, esi	      3888	ftp.c	FUNCTION_56	SWITCH_1	IF_10	CALL_18
0x400481e	      0xe800000000	                          call 0x4004823	      3888	ftp.c	FUNCTION_56	SWITCH_1	IF_10	CALL_18
0x4004823	    0x488bb3a05100	          mov rsi, qword [rbx + 0x51a0] 	      3890	ftp.c	FUNCTION_56	SWITCH_1	CALL_19
0x400482a	    0x488dbba05100	                 lea rdi, [rbx + 0x51a0]	      3890	ftp.c	FUNCTION_56	SWITCH_1	CALL_19
0x4004831	            0x31d2	                            xor edx, edx	      3890	ftp.c	FUNCTION_56	SWITCH_1	CALL_19
0x4004833	      0xe800000000	                          call 0x4004838	      3890	ftp.c	FUNCTION_56	SWITCH_1	CALL_19
0x4004838	    0x4883bbb85100	            cmp qword [rbx + 0x51b8], 1 	      3891	ftp.c	FUNCTION_56	SWITCH_1
0x4004840	            0x19c0	                            sbb eax, eax	      3891	ftp.c	FUNCTION_56	SWITCH_1
0x4004842	            0xf7d0	                                 not eax	      3891	ftp.c	FUNCTION_56	SWITCH_1
0x4004844	          0x83c004	                              add eax, 4	      3891	ftp.c	FUNCTION_56	SWITCH_1
0x4004847	    0x898388510000	          mov dword [rbx + 0x5188], eax 	      3891	ftp.c	FUNCTION_56	SWITCH_1
0x400484d	        0x488b5d00	                    mov rbx, qword [rbp]	      3891	ftp.c	FUNCTION_56	SWITCH_1
0x4004851	    0x8b8388510000	          mov eax, dword [rbx + 0x5188] 	      3796	ftp.c	FUNCTION_56	SWITCH_1
0x4004857	          0x83f807	                              cmp eax, 7	      3796	ftp.c	FUNCTION_56	SWITCH_1
0x400485a	     0xf8780000000	                            ja 0x40048e0	      3796	ftp.c	FUNCTION_56	SWITCH_1
0x4004860	            0x89c2	                            mov edx, eax	      3796	ftp.c	FUNCTION_56	SWITCH_1
0x4004862	      0x4963549500	         movsxd rdx, dword [r13 + rdx*4]	      3796	ftp.c	FUNCTION_56	SWITCH_1
0x4004867	          0x4c01ea	                            add rdx, r13	      3796	ftp.c	FUNCTION_56	SWITCH_1
0x400486a	            0xffe2	                                 jmp rdx	      3796	ftp.c	FUNCTION_56	SWITCH_1
0x400486c	        0x488b4500	                    mov rax, qword [rbp]	      3761	ftp.c	FUNCTION_55	CALL_9
0x4004870	    0x488bb8185100	          mov rdi, qword [rax + 0x5118] 	      3761	ftp.c	FUNCTION_55	CALL_9
0x4004877	          0x41ff16	                        call qword [r14]	      3761	ftp.c	FUNCTION_55	CALL_9
0x400487a	          0x4885c0	                           test rax, rax	      3762	ftp.c	FUNCTION_55	IF_10
0x400487d	    0x488983905100	          mov qword [rbx + 0x5190], rax 	      3761	ftp.c	FUNCTION_55	CALL_9
0x4004884	     0xf84d8040000	                            je 0x4004d62	      3762	ftp.c	FUNCTION_55	IF_10
0x400488a	        0x488b7d00	                    mov rdi, qword [rbp]	      3768	ftp.c	FUNCTION_55
0x400488e	    0x488d35000000	                   lea rsi, [0x04004895]	      3776	ftp.c	FUNCTION_55	CALL_10
0x4004895	    0x488b87880200	           mov rax, qword [rdi + 0x288] 	      3768	ftp.c	FUNCTION_55
0x400489c	        0x49894708	                mov qword [r15 + 8], rax	      3768	ftp.c	FUNCTION_55
0x40048a0	    0x488b05000000	            mov rax, qword [0x040048a7] 	      3770	ftp.c	FUNCTION_55
0x40048a7	    0x488987880200	            mov qword [rdi + 0x288], rax	      3770	ftp.c	FUNCTION_55
0x40048ae	    0x488b87100200	           mov rax, qword [rdi + 0x210] 	      3772	ftp.c	FUNCTION_55
0x40048b5	        0x49894710	             mov qword [r15 + 0x10], rax	      3772	ftp.c	FUNCTION_55
0x40048b9	            0x31c0	                            xor eax, eax	      3776	ftp.c	FUNCTION_55	CALL_10
0x40048bb	    0x4889af100200	            mov qword [rdi + 0x210], rbp	      3774	ftp.c	FUNCTION_55
0x40048c2	      0xe800000000	                          call 0x40048c7	      3776	ftp.c	FUNCTION_55	CALL_10
0x40048c7	    0x83bb88510000	            cmp dword [rbx + 0x5188], 4 	      3799	ftp.c	FUNCTION_56	SWITCH_1	IF_1
0x40048ce	     0xf851f040000	                           jne 0x4004cf3	      3799	ftp.c	FUNCTION_56	SWITCH_1	IF_1
0x40048d4	        0x488b5d00	                    mov rbx, qword [rbp]	      3935	ftp.c	FUNCTION_57	IF_1	IF_2
0x40048d8	    0x8b8388510000	          mov eax, dword [rbx + 0x5188] 	      3935	ftp.c	FUNCTION_57	IF_1	IF_2
0x40048de	            0x6690	                                     nop	      3935	ftp.c	FUNCTION_57	IF_1	IF_2
0x40048e0	          0x83e0fd	                     and eax, 0xfffffffd	      3935	ftp.c	FUNCTION_57	IF_1	IF_2
0x40048e3	          0x83f805	                              cmp eax, 5	      3935	ftp.c	FUNCTION_57	IF_1	IF_2
0x40048e6	     0xf855afeffff	                           jne 0x4004746	      3935	ftp.c	FUNCTION_57	IF_1	IF_2
0x40048ec	        0x4883c418	                           add rsp, 0x18	      3952	ftp.c	FUNCTION_57
0x40048f0	            0x31c0	                            xor eax, eax	      3938	ftp.c	FUNCTION_57	IF_1	IF_2
0x40048f2	              0x5b	                                 pop rbx	      3952	ftp.c	FUNCTION_57
0x40048f3	              0x5d	                                 pop rbp	      3952	ftp.c	FUNCTION_57
0x40048f4	            0x415c	                                 pop r12	      3952	ftp.c	FUNCTION_57
0x40048f6	            0x415d	                                 pop r13	      3952	ftp.c	FUNCTION_57
0x40048f8	            0x415e	                                 pop r14	      3952	ftp.c	FUNCTION_57
0x40048fa	            0x415f	                                 pop r15	      3952	ftp.c	FUNCTION_57
0x40048fc	              0xc3	                                     ret	      3952	ftp.c	FUNCTION_57
0x40048fd	           0xf1f00	                         nop dword [rax]	      3952	ftp.c	FUNCTION_57
0x4004900	    0x488b83c05100	          mov rax, qword [rbx + 0x51c0] 	      3897	ftp.c	FUNCTION_56	SWITCH_1
0x4004907	          0x4885c0	                           test rax, rax	      3899	ftp.c	FUNCTION_56	SWITCH_1	IF_11
0x400490a	     0xf84c8020000	                            je 0x4004bd8	      3899	ftp.c	FUNCTION_56	SWITCH_1	IF_11
0x4004910	          0x488b38	                    mov rdi, qword [rax]	      3900	ftp.c	FUNCTION_56	SWITCH_1	CALL_21
0x4004913	      0xe800000000	                          call 0x4004918	      3900	ftp.c	FUNCTION_56	SWITCH_1	CALL_21
0x4004918	            0x85c0	                           test eax, eax	      3902	ftp.c	FUNCTION_56	SWITCH_1
0x400491a	        0x488b4d00	                    mov rcx, qword [rbp]	      3902	ftp.c	FUNCTION_56	SWITCH_1
0x400491e	      0xba06000000	                              mov edx, 6	      3902	ftp.c	FUNCTION_56	SWITCH_1
0x4004923	     0xf84b4020000	                            je 0x4004bdd	      3902	ftp.c	FUNCTION_56	SWITCH_1
0x4004929	    0x899388510000	          mov dword [rbx + 0x5188], edx 	      3902	ftp.c	FUNCTION_56	SWITCH_1
0x400492f	    0x8b9188510000	          mov edx, dword [rcx + 0x5188] 	      3935	ftp.c	FUNCTION_57	IF_1	IF_2
0x4004935	          0x83e2fd	                     and edx, 0xfffffffd	      3935	ftp.c	FUNCTION_57	IF_1	IF_2
0x4004938	          0x83fa05	                              cmp edx, 5	      3935	ftp.c	FUNCTION_57	IF_1	IF_2
0x400493b	            0x74af	                            je 0x40048ec	      3935	ftp.c	FUNCTION_57	IF_1	IF_2
0x400493d	            0x85c0	                           test eax, eax	      3940	ftp.c	FUNCTION_57	IF_1	IF_3
0x400493f	     0xf8596feffff	                           jne 0x40047db	      3940	ftp.c	FUNCTION_57	IF_1	IF_3
0x4004945	          0x4889cb	                            mov rbx, rcx	      3940	ftp.c	FUNCTION_57	IF_1	IF_3
0x4004948	      0xe9f9fdffff	                           jmp 0x4004746	      3940	ftp.c	FUNCTION_57	IF_1	IF_3
0x400494d	           0xf1f00	                         nop dword [rax]	      3940	ftp.c	FUNCTION_57	IF_1	IF_3
0x4004950	    0x488b93c85100	          mov rdx, qword [rbx + 0x51c8] 	      3908	ftp.c	FUNCTION_56	SWITCH_1	IF_12
0x4004957	          0x4885d2	                           test rdx, rdx	      3908	ftp.c	FUNCTION_56	SWITCH_1	IF_12
0x400495a	            0x7484	                            je 0x40048e0	      3908	ftp.c	FUNCTION_56	SWITCH_1	IF_12
0x400495c	    0x488bbbc05100	          mov rdi, qword [rbx + 0x51c0] 	      3909	ftp.c	FUNCTION_56	SWITCH_1	CALL_22
0x4004963	            0xffd2	                                call rdx	      3909	ftp.c	FUNCTION_56	SWITCH_1	CALL_22
0x4004965	        0x488b5d00	                    mov rbx, qword [rbp]	      3909	ftp.c	FUNCTION_56	SWITCH_1	CALL_22
0x4004969	    0x8b8388510000	          mov eax, dword [rbx + 0x5188] 	      3909	ftp.c	FUNCTION_56	SWITCH_1	CALL_22
0x400496f	      0xe96cffffff	                           jmp 0x40048e0	      3909	ftp.c	FUNCTION_56	SWITCH_1	CALL_22
0x4004974	         0xf1f4000	                         nop dword [rax]	      3909	ftp.c	FUNCTION_56	SWITCH_1	CALL_22
0x4004978	    0x4c8bbb185100	          mov r15, qword [rbx + 0x5118] 	      3699	ftp.c	FUNCTION_55
0x400497f	      0xbe2f000000	                           mov esi, 0x2f	      3704	ftp.c	FUNCTION_55	CALL_1
0x4004984	          0x4c89ff	                            mov rdi, r15	      3704	ftp.c	FUNCTION_55	CALL_1
0x4004987	      0xe800000000	                          call 0x400498c	      3704	ftp.c	FUNCTION_55	CALL_1
0x400498c	          0x4885c0	                           test rax, rax	      3705	ftp.c	FUNCTION_55	IF_1
0x400498f	          0x4989c5	                            mov r13, rax	      3704	ftp.c	FUNCTION_55	CALL_1
0x4004992	     0xf8488030000	                            je 0x4004d20	      3705	ftp.c	FUNCTION_55	IF_1
0x4004998	        0x80780100	                   cmp byte [rax + 1], 0	      3707	ftp.c	FUNCTION_55	IF_1	IF_2
0x400499c	     0xf842e030000	                            je 0x4004cd0	      3707	ftp.c	FUNCTION_55	IF_1	IF_2
0x40049a2	    0x4c8b35000000	            mov r14, qword [0x040049a9] 	      3712	ftp.c	FUNCTION_55	IF_1	CALL_3
0x40049a9	        0x488d7801	                      lea rdi, [rax + 1]	      3712	ftp.c	FUNCTION_55	IF_1	CALL_3
0x40049ad	          0x41ff16	                        call qword [r14]	      3712	ftp.c	FUNCTION_55	IF_1	CALL_3
0x40049b0	          0x4885c0	                           test rax, rax	      3713	ftp.c	FUNCTION_55	IF_1	IF_3
0x40049b3	    0x488983985100	          mov qword [rbx + 0x5198], rax 	      3712	ftp.c	FUNCTION_55	IF_1	CALL_3
0x40049ba	     0xf8400030000	                            je 0x4004cc0	      3713	ftp.c	FUNCTION_55	IF_1	IF_3
0x40049c0	      0x41c6450100	                   mov byte [r13 + 1], 0	      3715	ftp.c	FUNCTION_55	IF_1
0x40049c5	    0x488b05000000	            mov rax, qword [0x040049cc] 	      3735	ftp.c	FUNCTION_55	CALL_6
0x40049cc	      0xbe18000000	                           mov esi, 0x18	      3735	ftp.c	FUNCTION_55	CALL_6
0x40049d1	      0xbf01000000	                              mov edi, 1	      3735	ftp.c	FUNCTION_55	CALL_6
0x40049d6	            0xff10	                        call qword [rax]	      3735	ftp.c	FUNCTION_55	CALL_6
0x40049d8	          0x4885c0	                           test rax, rax	      3736	ftp.c	FUNCTION_55	IF_6
0x40049db	          0x4989c7	                            mov r15, rax	      3735	ftp.c	FUNCTION_55	CALL_6
0x40049de	     0xf846c030000	                            je 0x4004d50	      3736	ftp.c	FUNCTION_55	IF_6
0x40049e4	      0xe800000000	                          call 0x40049e9	      3742	ftp.c	FUNCTION_55	CALL_7
0x40049e9	          0x4885c0	                           test rax, rax	      3743	ftp.c	FUNCTION_55	IF_7
0x40049ec	          0x498907	                    mov qword [r15], rax	      3742	ftp.c	FUNCTION_55	CALL_7
0x40049ef	     0xf846d030000	                            je 0x4004d62	      3743	ftp.c	FUNCTION_55	IF_7
0x40049f5	    0x488d0514caff	               lea rax, sym.wc_data_dtor	      3749	ftp.c	FUNCTION_55
0x40049fc	    0x4c89bbc05100	          mov qword [rbx + 0x51c0], r15 	      3748	ftp.c	FUNCTION_55
0x4004a03	    0x488983c85100	          mov qword [rbx + 0x51c8], rax 	      3749	ftp.c	FUNCTION_55
0x4004a0a	        0x488b4500	                    mov rax, qword [rbp]	      3752	ftp.c	FUNCTION_55	IF_8
0x4004a0e	    0x83b8b8070000	              cmp dword [rax + 0x7b8], 2	      3752	ftp.c	FUNCTION_55	IF_8
0x4004a15	     0xf8452030000	                            je 0x4004d6d	      3752	ftp.c	FUNCTION_55	IF_8
0x4004a1b	          0x4889ef	                            mov rdi, rbp	      3756	ftp.c	FUNCTION_55	CALL_8
0x4004a1e	      0xe81dcaffff	             call sym.ftp_parse_url_path	      3756	ftp.c	FUNCTION_55	CALL_8
0x4004a23	            0x85c0	                           test eax, eax	      3757	ftp.c	FUNCTION_55	IF_9
0x4004a25	          0x4189c5	                           mov r13d, eax	      3756	ftp.c	FUNCTION_55	CALL_8
0x4004a28	     0xf843efeffff	                            je 0x400486c	      3757	ftp.c	FUNCTION_55	IF_9
0x4004a2e	          0x4c89ff	                            mov rdi, r15	      3781	ftp.c	FUNCTION_55	IF_11	CALL_11
0x4004a31	      0xe800000000	                          call 0x4004a36	      3781	ftp.c	FUNCTION_55	IF_11	CALL_11
0x4004a36	    0x488b05000000	            mov rax, qword [0x04004a3d] 	      3782	ftp.c	FUNCTION_55	IF_11	CALL_12
0x4004a3d	          0x4c89ff	                            mov rdi, r15	      3782	ftp.c	FUNCTION_55	IF_11	CALL_12
0x4004a40	      0x4889442408	                mov qword [rsp + 8], rax	      3782	ftp.c	FUNCTION_55	IF_11	CALL_12
0x4004a45	            0xff10	                        call qword [rax]	      3782	ftp.c	FUNCTION_55	IF_11	CALL_12
0x4004a47	      0x488b442408	                mov rax, qword [rsp + 8]	      3782	ftp.c	FUNCTION_55	IF_11	CALL_12
0x4004a4c	    0x488bbb985100	          mov rdi, qword [rbx + 0x5198] 	      3784	ftp.c	FUNCTION_55	CALL_13
0x4004a53	            0xff10	                        call qword [rax]	      3784	ftp.c	FUNCTION_55	CALL_13
0x4004a55	    0x48c783985100	            mov qword [rbx + 0x5198], 0 	      3784	ftp.c	FUNCTION_55	CALL_13
0x4004a60	    0x48c783c85100	            mov qword [rbx + 0x51c8], 0 	      3785	ftp.c	FUNCTION_55
0x4004a6b	          0x4489e8	                           mov eax, r13d	      3786	ftp.c	FUNCTION_55
0x4004a6e	    0x48c783c05100	            mov qword [rbx + 0x51c0], 0 	      3786	ftp.c	FUNCTION_55
0x4004a79	    0x83bb88510000	            cmp dword [rbx + 0x5188], 4 	      3799	ftp.c	FUNCTION_56	SWITCH_1	IF_1
0x4004a80	     0xf847a020000	                            je 0x4004d00	      3799	ftp.c	FUNCTION_56	SWITCH_1	IF_1
0x4004a86	      0xba06000000	                              mov edx, 6	      3802	ftp.c	FUNCTION_56	SWITCH_1
0x4004a8b	    0x899388510000	          mov dword [rbx + 0x5188], edx 	      3802	ftp.c	FUNCTION_56	SWITCH_1
0x4004a91	        0x488b4d00	                    mov rcx, qword [rbp]	      3802	ftp.c	FUNCTION_56	SWITCH_1
0x4004a95	      0xe995feffff	                           jmp 0x400492f	      3802	ftp.c	FUNCTION_56	SWITCH_1
0x4004a9a	    0x660f1f440000	                    nop word [rax + rax]	      3802	ftp.c	FUNCTION_56	SWITCH_1
0x4004aa0	    0x488b83c05100	          mov rax, qword [rbx + 0x51c0] 	      3808	ftp.c	FUNCTION_56	SWITCH_1
0x4004aa7	        0x488b5008	                mov rdx, qword [rax + 8]	      3809	ftp.c	FUNCTION_56	SWITCH_1
0x4004aab	          0x488b38	                    mov rdi, qword [rax]	      3815	ftp.c	FUNCTION_56	SWITCH_1	IF_2	CALL_2
0x4004aae	    0x488993880200	            mov qword [rbx + 0x288], rdx	      3809	ftp.c	FUNCTION_56	SWITCH_1
0x4004ab5	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      3810	ftp.c	FUNCTION_56	SWITCH_1
0x4004ab9	    0x488993100200	            mov qword [rbx + 0x210], rdx	      3810	ftp.c	FUNCTION_56	SWITCH_1
0x4004ac0	    0x48c740080000	                  mov qword [rax + 8], 0	      3811	ftp.c	FUNCTION_56	SWITCH_1
0x4004ac8	    0x48c740100000	               mov qword [rax + 0x10], 0	      3812	ftp.c	FUNCTION_56	SWITCH_1
0x4004ad0	    0xc78388510000	            mov dword [rbx + 0x5188], 3 	      3813	ftp.c	FUNCTION_56	SWITCH_1
0x4004ada	      0xe800000000	                          call 0x4004adf	      3815	ftp.c	FUNCTION_56	SWITCH_1	IF_2	CALL_2
0x4004adf	            0x85c0	                           test eax, eax	      3815	ftp.c	FUNCTION_56	SWITCH_1	IF_2	CALL_2
0x4004ae1	     0xf8471010000	                            je 0x4004c58	      3815	ftp.c	FUNCTION_56	SWITCH_1	IF_2	CALL_2
0x4004ae7	    0xc78388510000	            mov dword [rbx + 0x5188], 4 	      3817	ftp.c	FUNCTION_56	SWITCH_1	IF_2
0x4004af1	      0xe957fdffff	                           jmp 0x400484d	      3817	ftp.c	FUNCTION_56	SWITCH_1	IF_2
0x4004af6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      3817	ftp.c	FUNCTION_56	SWITCH_1	IF_2
0x4004b00	    0x488b83a05100	          mov rax, qword [rbx + 0x51a0] 	      3831	ftp.c	FUNCTION_56	SWITCH_1
0x4004b07	    0x488bb3905100	          mov rsi, qword [rbx + 0x5190] 	      3833	ftp.c	FUNCTION_56	SWITCH_1	CALL_5
0x4004b0e	    0x488d3d000000	                   lea rdi, [0x04004b15]	      3833	ftp.c	FUNCTION_56	SWITCH_1	CALL_5
0x4004b15	          0x4c8b30	                    mov r14, qword [rax]	      3831	ftp.c	FUNCTION_56	SWITCH_1
0x4004b18	            0x31c0	                            xor eax, eax	      3833	ftp.c	FUNCTION_56	SWITCH_1	CALL_5
0x4004b1a	          0x498b16	                    mov rdx, qword [r14]	      3833	ftp.c	FUNCTION_56	SWITCH_1	CALL_5
0x4004b1d	      0xe800000000	                          call 0x4004b22	      3833	ftp.c	FUNCTION_56	SWITCH_1	CALL_5
0x4004b22	          0x4885c0	                           test rax, rax	      3834	ftp.c	FUNCTION_56	SWITCH_1	IF_4
0x4004b25	          0x4989c7	                            mov r15, rax	      3833	ftp.c	FUNCTION_56	SWITCH_1	CALL_5
0x4004b28	     0xf844e020000	                            je 0x4004d7c	      3834	ftp.c	FUNCTION_56	SWITCH_1	IF_4
0x4004b2e	        0x488b4500	                    mov rax, qword [rbp]	      3839	ftp.c	FUNCTION_56	SWITCH_1	CALL_6
0x4004b32	    0x488bb8105100	          mov rdi, qword [rax + 0x5110] 	      3839	ftp.c	FUNCTION_56	SWITCH_1	CALL_6
0x4004b39	    0x488b05000000	            mov rax, qword [0x04004b40] 	      3839	ftp.c	FUNCTION_56	SWITCH_1	CALL_6
0x4004b40	            0xff10	                        call qword [rax]	      3839	ftp.c	FUNCTION_56	SWITCH_1	CALL_6
0x4004b42	        0x488b7d00	                    mov rdi, qword [rbp]	      3839	ftp.c	FUNCTION_56	SWITCH_1	CALL_6
0x4004b46	          0x498b16	                    mov rdx, qword [r14]	      3843	ftp.c	FUNCTION_56	SWITCH_1	CALL_7
0x4004b49	    0x488d35000000	                   lea rsi, [0x04004b50]	      3843	ftp.c	FUNCTION_56	SWITCH_1	CALL_7
0x4004b50	            0x31c0	                            xor eax, eax	      3843	ftp.c	FUNCTION_56	SWITCH_1	CALL_7
0x4004b52	    0x4c89bf105100	          mov qword [rdi + 0x5110], r15 	      3840	ftp.c	FUNCTION_56	SWITCH_1
0x4004b59	    0x4c89bf185100	          mov qword [rdi + 0x5118], r15 	      3841	ftp.c	FUNCTION_56	SWITCH_1
0x4004b60	      0xe800000000	                          call 0x4004b65	      3843	ftp.c	FUNCTION_56	SWITCH_1	CALL_7
0x4004b65	        0x488b7d00	                    mov rdi, qword [rbp]	      3844	ftp.c	FUNCTION_56	SWITCH_1	IF_5
0x4004b69	    0x4883bf700a00	              cmp qword [rdi + 0xa70], 0	      3844	ftp.c	FUNCTION_56	SWITCH_1	IF_5
0x4004b71	            0x7446	                            je 0x4004bb9	      3844	ftp.c	FUNCTION_56	SWITCH_1	IF_5
0x4004b73	      0xbe01000000	                              mov esi, 1	      3846	ftp.c	FUNCTION_56	SWITCH_1	IF_5	CALL_8
0x4004b78	      0xe800000000	                          call 0x4004b7d	      3846	ftp.c	FUNCTION_56	SWITCH_1	IF_5	CALL_8
0x4004b7d	        0x488b4500	                    mov rax, qword [rbp]	      3847	ftp.c	FUNCTION_56	SWITCH_1	IF_5	CALL_9
0x4004b81	    0x488bb3d05100	          mov rsi, qword [rbx + 0x51d0] 	      3847	ftp.c	FUNCTION_56	SWITCH_1	IF_5	CALL_9
0x4004b88	          0x4c89f7	                            mov rdi, r14	      3847	ftp.c	FUNCTION_56	SWITCH_1	IF_5	CALL_9
0x4004b8b	    0x8b93b8510000	          mov edx, dword [rbx + 0x51b8] 	      3847	ftp.c	FUNCTION_56	SWITCH_1	IF_5	CALL_9
0x4004b91	    0xff90700a0000	                call qword [rax + 0xa70]	      3847	ftp.c	FUNCTION_56	SWITCH_1	IF_5	CALL_9
0x4004b97	        0x488b7d00	                    mov rdi, qword [rbp]	      3849	ftp.c	FUNCTION_56	SWITCH_1	IF_5	CALL_10
0x4004b9b	          0x4989c7	                            mov r15, rax	      3847	ftp.c	FUNCTION_56	SWITCH_1	IF_5	CALL_9
0x4004b9e	            0x31f6	                            xor esi, esi	      3849	ftp.c	FUNCTION_56	SWITCH_1	IF_5	CALL_10
0x4004ba0	      0xe800000000	                          call 0x4004ba5	      3849	ftp.c	FUNCTION_56	SWITCH_1	IF_5	CALL_10
0x4004ba5	        0x4983ff01	                              cmp r15, 1	      3850	ftp.c	FUNCTION_56	SWITCH_1	IF_5	SWITCH_2
0x4004ba9	     0xf8461010000	                            je 0x4004d10	      3850	ftp.c	FUNCTION_56	SWITCH_1	IF_5	SWITCH_2
0x4004baf	        0x4983ff02	                              cmp r15, 2	      3850	ftp.c	FUNCTION_56	SWITCH_1	IF_5	SWITCH_2
0x4004bb3	     0xf84df000000	                            je 0x4004c98	      3850	ftp.c	FUNCTION_56	SWITCH_1	IF_5	SWITCH_2
0x4004bb9	        0x418b5608	                mov edx, dword [r14 + 8]	      3861	ftp.c	FUNCTION_56	SWITCH_1	IF_6
0x4004bbd	            0x85d2	                           test edx, edx	      3861	ftp.c	FUNCTION_56	SWITCH_1	IF_6
0x4004bbf	     0xf84c1010000	                            je 0x4004d86	      3861	ftp.c	FUNCTION_56	SWITCH_1	IF_6
0x4004bc5	    0xc78388510000	            mov dword [rbx + 0x5188], 5 	      3862	ftp.c	FUNCTION_56	SWITCH_1	IF_6
0x4004bcf	      0xe979fcffff	                           jmp 0x400484d	      3862	ftp.c	FUNCTION_56	SWITCH_1	IF_6
0x4004bd4	         0xf1f4000	                         nop dword [rax]	      3862	ftp.c	FUNCTION_56	SWITCH_1	IF_6
0x4004bd8	          0x4889d9	                            mov rcx, rbx	      3899	ftp.c	FUNCTION_56	SWITCH_1	IF_11
0x4004bdb	            0x31c0	                            xor eax, eax	      3898	ftp.c	FUNCTION_56	SWITCH_1
0x4004bdd	      0xba07000000	                              mov edx, 7	      3902	ftp.c	FUNCTION_56	SWITCH_1
0x4004be2	      0xe942fdffff	                           jmp 0x4004929	      3902	ftp.c	FUNCTION_56	SWITCH_1
0x4004be7	    0x660f1f840000	                    nop word [rax + rax]	      3902	ftp.c	FUNCTION_56	SWITCH_1
0x4004bf0	            0x31f6	                            xor esi, esi	      3057	ftp.c	FUNCTION_45	CALL_1
0x4004bf2	          0x4c89ef	                            mov rdi, r13	      3057	ftp.c	FUNCTION_45	CALL_1
0x4004bf5	      0xe800000000	                          call 0x4004bfa	      3057	ftp.c	FUNCTION_45	CALL_1
0x4004bfa	            0x89c3	                            mov ebx, eax	      3057	ftp.c	FUNCTION_45	CALL_1
0x4004bfc	    0x8b850c070000	           mov eax, dword [rbp + 0x70c] 	      3062	ftp.c	FUNCTION_45
0x4004c02	        0x488b7d00	                    mov rdi, qword [rbp]	      3680	ftp.c	FUNCTION_53	CALL_5
0x4004c06	    0x488d35000000	                   lea rsi, [0x04004c0d]	      3680	ftp.c	FUNCTION_53	CALL_5
0x4004c0d	            0x85c0	                           test eax, eax	      3062	ftp.c	FUNCTION_45
0x4004c0f	      0x410f940424	                         sete byte [r12]	      3062	ftp.c	FUNCTION_45
0x4004c14	    0x440fb6b5a603	         movzx r14d, byte [rbp + 0x3a6] 	      3680	ftp.c	FUNCTION_53	CALL_5
0x4004c1c	            0x31c0	                            xor eax, eax	      3680	ftp.c	FUNCTION_53	CALL_5
0x4004c1e	          0x4489f2	                           mov edx, r14d	      3680	ftp.c	FUNCTION_53	CALL_5
0x4004c21	      0xe800000000	                          call 0x4004c26	      3680	ftp.c	FUNCTION_53	CALL_5
0x4004c26	            0x85db	                           test ebx, ebx	      4366	ftp.c	FUNCTION_64	IF_1
0x4004c28	     0xf85ac010000	                           jne 0x4004dda	      4366	ftp.c	FUNCTION_64	IF_1
0x4004c2e	      0x41803c2400	                       cmp byte [r12], 0	      4368	ftp.c	FUNCTION_64	IF_1	IF_2
0x4004c33	     0xf84b3fcffff	                            je 0x40048ec	      4368	ftp.c	FUNCTION_64	IF_1	IF_2
0x4004c39	        0x4883c418	                           add rsp, 0x18	      3952	ftp.c	FUNCTION_57
0x4004c3d	          0x4489f6	                           mov esi, r14d	      4372	ftp.c	FUNCTION_64	IF_1	CALL_6
0x4004c40	          0x4889ef	                            mov rdi, rbp	      4372	ftp.c	FUNCTION_64	IF_1	CALL_6
0x4004c43	              0x5b	                                 pop rbx	      3952	ftp.c	FUNCTION_57
0x4004c44	              0x5d	                                 pop rbp	      3952	ftp.c	FUNCTION_57
0x4004c45	            0x415c	                                 pop r12	      3952	ftp.c	FUNCTION_57
0x4004c47	            0x415d	                                 pop r13	      3952	ftp.c	FUNCTION_57
0x4004c49	            0x415e	                                 pop r14	      3952	ftp.c	FUNCTION_57
0x4004c4b	            0x415f	                                 pop r15	      3952	ftp.c	FUNCTION_57
0x4004c4d	      0xe96ee7ffff	                jmp sym.ftp_dophase_done	      4372	ftp.c	FUNCTION_64	IF_1	CALL_6
0x4004c52	    0x660f1f440000	                    nop word [rax + rax]	      4372	ftp.c	FUNCTION_64	IF_1	CALL_6
0x4004c58	    0x4883bbb85100	             cmp qword [rbx + 0x51b8], 0	      3820	ftp.c	FUNCTION_56	SWITCH_1	IF_3
0x4004c60	     0xf85e7fbffff	                           jne 0x400484d	      3820	ftp.c	FUNCTION_56	SWITCH_1	IF_3
0x4004c66	    0xc78388510000	            mov dword [rbx + 0x5188], 4 	      3822	ftp.c	FUNCTION_56	SWITCH_1	IF_3
0x4004c70	      0xb84e000000	                           mov eax, 0x4e	      3823	ftp.c	FUNCTION_56	SWITCH_1	IF_3
0x4004c75	           0xf1f00	                         nop dword [rax]	      3823	ftp.c	FUNCTION_56	SWITCH_1	IF_3
0x4004c78	        0x488b5500	                    mov rdx, qword [rbp]	      3935	ftp.c	FUNCTION_57	IF_1	IF_2
0x4004c7c	    0x8b9288510000	          mov edx, dword [rdx + 0x5188] 	      3935	ftp.c	FUNCTION_57	IF_1	IF_2
0x4004c82	          0x83e2fd	                     and edx, 0xfffffffd	      3935	ftp.c	FUNCTION_57	IF_1	IF_2
0x4004c85	          0x83fa05	                              cmp edx, 5	      3935	ftp.c	FUNCTION_57	IF_1	IF_2
0x4004c88	     0xf854dfbffff	                           jne 0x40047db	      3935	ftp.c	FUNCTION_57	IF_1	IF_2
0x4004c8e	      0xe959fcffff	                           jmp 0x40048ec	      3935	ftp.c	FUNCTION_57	IF_1	IF_2
0x4004c93	       0xf1f440000	                   nop dword [rax + rax]	      3935	ftp.c	FUNCTION_57	IF_1	IF_2
0x4004c98	          0x498b16	                    mov rdx, qword [r14]	      3852	ftp.c	FUNCTION_56	SWITCH_1	IF_5	SWITCH_2	CALL_11
0x4004c9b	        0x488b7d00	                    mov rdi, qword [rbp]	      3852	ftp.c	FUNCTION_56	SWITCH_1	IF_5	SWITCH_2	CALL_11
0x4004c9f	    0x488d35000000	                   lea rsi, [0x04004ca6]	      3852	ftp.c	FUNCTION_56	SWITCH_1	IF_5	SWITCH_2	CALL_11
0x4004ca6	            0x31c0	                            xor eax, eax	      3852	ftp.c	FUNCTION_56	SWITCH_1	IF_5	SWITCH_2	CALL_11
0x4004ca8	      0xe800000000	                          call 0x4004cad	      3852	ftp.c	FUNCTION_56	SWITCH_1	IF_5	SWITCH_2	CALL_11
0x4004cad	    0xc78388510000	            mov dword [rbx + 0x5188], 5 	      3854	ftp.c	FUNCTION_56	SWITCH_1	IF_5	SWITCH_2
0x4004cb7	      0xe991fbffff	                           jmp 0x400484d	      3854	ftp.c	FUNCTION_56	SWITCH_1	IF_5	SWITCH_2
0x4004cbc	         0xf1f4000	                         nop dword [rax]	      3854	ftp.c	FUNCTION_56	SWITCH_1	IF_5	SWITCH_2
0x4004cc0	      0xb81b000000	                           mov eax, 0x1b	      3714	ftp.c	FUNCTION_55	IF_1	IF_3
0x4004cc5	      0xe9affdffff	                           jmp 0x4004a79	      3714	ftp.c	FUNCTION_55	IF_1	IF_3
0x4004cca	    0x660f1f440000	                    nop word [rax + rax]	      3714	ftp.c	FUNCTION_55	IF_1	IF_3
0x4004cd0	    0xc78388510000	            mov dword [rbx + 0x5188], 4 	      3725	ftp.c	FUNCTION_55	ELSE_1	ELSE_2
0x4004cda	          0x4889ef	                            mov rdi, rbp	      3726	ftp.c	FUNCTION_55	ELSE_1	ELSE_2	CALL_5
0x4004cdd	      0xe85ec7ffff	             call sym.ftp_parse_url_path	      3726	ftp.c	FUNCTION_55	ELSE_1	ELSE_2	CALL_5
0x4004ce2	    0x83bb88510000	            cmp dword [rbx + 0x5188], 4 	      3799	ftp.c	FUNCTION_56	SWITCH_1	IF_1
0x4004ce9	            0x7415	                            je 0x4004d00	      3799	ftp.c	FUNCTION_56	SWITCH_1	IF_1
0x4004ceb	            0x85c0	                           test eax, eax	      3802	ftp.c	FUNCTION_56	SWITCH_1
0x4004ced	     0xf8593fdffff	                           jne 0x4004a86	      3802	ftp.c	FUNCTION_56	SWITCH_1
0x4004cf3	            0x31c0	                            xor eax, eax	      3777	ftp.c	FUNCTION_55
0x4004cf5	      0xba02000000	                              mov edx, 2	      3802	ftp.c	FUNCTION_56	SWITCH_1
0x4004cfa	      0xe98cfdffff	                           jmp 0x4004a8b	      3802	ftp.c	FUNCTION_56	SWITCH_1
0x4004cff	              0x90	                                     nop	      3802	ftp.c	FUNCTION_56	SWITCH_1
0x4004d00	        0x488b4d00	                    mov rcx, qword [rbp]	      3802	ftp.c	FUNCTION_56	SWITCH_1
0x4004d04	      0xe926fcffff	                           jmp 0x400492f	      3802	ftp.c	FUNCTION_56	SWITCH_1
0x4004d09	     0xf1f80000000	                         nop dword [rax]	      3802	ftp.c	FUNCTION_56	SWITCH_1
0x4004d10	      0xb858000000	                           mov eax, 0x58	      3857	ftp.c	FUNCTION_56	SWITCH_1	IF_5	SWITCH_2
0x4004d15	      0xe95effffff	                           jmp 0x4004c78	      3857	ftp.c	FUNCTION_56	SWITCH_1	IF_5	SWITCH_2
0x4004d1a	    0x660f1f440000	                    nop word [rax + rax]	      3857	ftp.c	FUNCTION_56	SWITCH_1	IF_5	SWITCH_2
0x4004d20	        0x41803f00	                       cmp byte [r15], 0	      3718	ftp.c	FUNCTION_55	ELSE_1	IF_4
0x4004d24	            0x74aa	                            je 0x4004cd0	      3718	ftp.c	FUNCTION_55	ELSE_1	IF_4
0x4004d26	    0x4c8b35000000	            mov r14, qword [0x04004d2d] 	      3719	ftp.c	FUNCTION_55	ELSE_1	IF_4	CALL_4
0x4004d2d	          0x4c89ff	                            mov rdi, r15	      3719	ftp.c	FUNCTION_55	ELSE_1	IF_4	CALL_4
0x4004d30	          0x41ff16	                        call qword [r14]	      3719	ftp.c	FUNCTION_55	ELSE_1	IF_4	CALL_4
0x4004d33	          0x4885c0	                           test rax, rax	      3720	ftp.c	FUNCTION_55	ELSE_1	IF_4	IF_5
0x4004d36	    0x488983985100	          mov qword [rbx + 0x5198], rax 	      3719	ftp.c	FUNCTION_55	ELSE_1	IF_4	CALL_4
0x4004d3d	     0xf847dffffff	                            je 0x4004cc0	      3720	ftp.c	FUNCTION_55	ELSE_1	IF_4	IF_5
0x4004d43	        0x41c60700	                       mov byte [r15], 0	      3722	ftp.c	FUNCTION_55	ELSE_1	IF_4
0x4004d47	      0xe979fcffff	                           jmp 0x40049c5	      3722	ftp.c	FUNCTION_55	ELSE_1	IF_4
0x4004d4c	         0xf1f4000	                         nop dword [rax]	      3722	ftp.c	FUNCTION_55	ELSE_1	IF_4
0x4004d50	    0x41bd1b000000	                          mov r13d, 0x1b	      3737	ftp.c	FUNCTION_55	IF_6
0x4004d56	    0x488b05000000	            mov rax, qword [0x04004d5d] 	      3737	ftp.c	FUNCTION_55	IF_6
0x4004d5d	      0xe9eafcffff	                           jmp 0x4004a4c	      3737	ftp.c	FUNCTION_55	IF_6
0x4004d62	    0x41bd1b000000	                          mov r13d, 0x1b	      3744	ftp.c	FUNCTION_55	IF_7
0x4004d68	      0xe9c1fcffff	                           jmp 0x4004a2e	      3744	ftp.c	FUNCTION_55	IF_7
0x4004d6d	    0xc780b8070000	              mov dword [rax + 0x7b8], 1	      3753	ftp.c	FUNCTION_55	IF_8
0x4004d77	      0xe99ffcffff	                           jmp 0x4004a1b	      3753	ftp.c	FUNCTION_55	IF_8
0x4004d7c	      0xb81b000000	                           mov eax, 0x1b	      3835	ftp.c	FUNCTION_56	SWITCH_1	IF_4
0x4004d81	      0xe9f2feffff	                           jmp 0x4004c78	      3835	ftp.c	FUNCTION_56	SWITCH_1	IF_4
0x4004d86	      0x41f6466040	           test byte [r14 + 0x60], 0x40 	      3866	ftp.c	FUNCTION_56	SWITCH_1	IF_7
0x4004d8b	            0x740b	                            je 0x4004d98	      3866	ftp.c	FUNCTION_56	SWITCH_1	IF_7
0x4004d8d	        0x498b4628	            mov rax, qword [r14 + 0x28] 	      3867	ftp.c	FUNCTION_56	SWITCH_1	IF_7
0x4004d91	    0x488985280700	           mov qword [rbp + 0x728], rax 	      3867	ftp.c	FUNCTION_56	SWITCH_1	IF_7
0x4004d98	          0x4889ef	                            mov rdi, rbp	      3869	ftp.c	FUNCTION_56	SWITCH_1	CALL_14
0x4004d9b	      0xe8a0c6ffff	             call sym.ftp_parse_url_path	      3869	ftp.c	FUNCTION_56	SWITCH_1	CALL_14
0x4004da0	            0x85c0	                           test eax, eax	      3870	ftp.c	FUNCTION_56	SWITCH_1	IF_8
0x4004da2	     0xf85d0feffff	                           jne 0x4004c78	      3870	ftp.c	FUNCTION_56	SWITCH_1	IF_8
0x4004da8	    0x488bb3a05100	          mov rsi, qword [rbx + 0x51a0] 	      3874	ftp.c	FUNCTION_56	SWITCH_1	CALL_15
0x4004daf	    0x488dbba05100	                 lea rdi, [rbx + 0x51a0]	      3874	ftp.c	FUNCTION_56	SWITCH_1	CALL_15
0x4004db6	            0x31d2	                            xor edx, edx	      3874	ftp.c	FUNCTION_56	SWITCH_1	CALL_15
0x4004db8	      0xe800000000	                          call 0x4004dbd	      3874	ftp.c	FUNCTION_56	SWITCH_1	CALL_15
0x4004dbd	    0x4883bbb85100	             cmp qword [rbx + 0x51b8], 0	      3876	ftp.c	FUNCTION_56	SWITCH_1	IF_9
0x4004dc5	     0xf8509fbffff	                           jne 0x40048d4	      3876	ftp.c	FUNCTION_56	SWITCH_1	IF_9
0x4004dcb	    0xc78388510000	            mov dword [rbx + 0x5188], 4 	      3877	ftp.c	FUNCTION_56	SWITCH_1	IF_9
0x4004dd5	      0xe9fafaffff	                           jmp 0x40048d4	      3877	ftp.c	FUNCTION_56	SWITCH_1	IF_9
0x4004dda	            0x89d8	                            mov eax, ebx	      4366	ftp.c	FUNCTION_64	IF_1
0x4004ddc	      0xe9eaf9ffff	                           jmp 0x40047cb	      4366	ftp.c	FUNCTION_64	IF_1
ftp_state_quote	WHILE,1:SWITCH,2:IF,8:ELSE,5:FOR,0:CALL,4:functions,0:DO,0	154
0x4002560	              0x55	                                push rbp	      1685	ftp.c	FUNCTION_29
0x4002561	              0x53	                                push rbx	      1685	ftp.c	FUNCTION_29
0x4002562	          0x4889fb	                            mov rbx, rdi	      1685	ftp.c	FUNCTION_29
0x4002565	            0x89d5	                            mov ebp, edx	      1685	ftp.c	FUNCTION_29
0x4002567	        0x4883ec08	                              sub rsp, 8	      1685	ftp.c	FUNCTION_29
0x400256b	          0x488b3f	                    mov rdi, qword [rdi]	      1687	ftp.c	FUNCTION_29
0x400256e	          0x83fa0d	                            cmp edx, 0xd	      1693	ftp.c	FUNCTION_29	SWITCH_1
0x4002571	    0x4c8b87e80100	            mov r8, qword [rdi + 0x1e8] 	      1688	ftp.c	FUNCTION_29
0x4002578	     0xf82e2000000	                            jb 0x4002660	      1693	ftp.c	FUNCTION_29	SWITCH_1
0x400257e	          0x83fa0e	                            cmp edx, 0xe	      1693	ftp.c	FUNCTION_29	SWITCH_1
0x4002581	     0xf8661010000	                           jbe 0x40026e8	      1693	ftp.c	FUNCTION_29	SWITCH_1
0x4002587	          0x83fa0f	                            cmp edx, 0xf	      1693	ftp.c	FUNCTION_29	SWITCH_1
0x400258a	     0xf85d0000000	                           jne 0x4002660	      1693	ftp.c	FUNCTION_29	SWITCH_1
0x4002590	    0x488b87800500	           mov rax, qword [rdi + 0x580] 	      1703	ftp.c	FUNCTION_29	SWITCH_1
0x4002597	          0x4084f6	                           test sil, sil	      1713	ftp.c	FUNCTION_29	IF_1
0x400259a	     0xf84d0000000	                            je 0x4002670	      1713	ftp.c	FUNCTION_29	IF_1
0x40025a0	          0x4885c0	                           test rax, rax	      1718	ftp.c	FUNCTION_29	ELSE_1	IF_2
0x40025a3	    0xc78300070000	              mov dword [rbx + 0x700], 0	      1714	ftp.c	FUNCTION_29	IF_1
0x40025ad	     0xf85fa000000	                           jne 0x40026ad	      1718	ftp.c	FUNCTION_29	ELSE_1	IF_2
0x40025b3	          0x83fd0e	                            cmp ebp, 0xe	      1743	ftp.c	FUNCTION_29	IF_5	SWITCH_2
0x40025b6	     0xf84fc010000	                            je 0x40027b8	      1743	ftp.c	FUNCTION_29	IF_5	SWITCH_2
0x40025bc	          0x83fd0f	                            cmp ebp, 0xf	      1743	ftp.c	FUNCTION_29	IF_5	SWITCH_2
0x40025bf	     0xf84e3010000	                            je 0x40027a8	      1743	ftp.c	FUNCTION_29	IF_5	SWITCH_2
0x40025c5	          0x83fd0d	                            cmp ebp, 0xd	      1743	ftp.c	FUNCTION_29	IF_5	SWITCH_2
0x40025c8	     0xf843a010000	                            je 0x4002708	      1743	ftp.c	FUNCTION_29	IF_5	SWITCH_2
0x40025ce	    0x80bbe2060000	               cmp byte [rbx + 0x6e2], 0	       883	ftp.c	FUNCTION_17	IF_1
0x40025d5	     0xf85bb010000	                           jne 0x4002796	       883	ftp.c	FUNCTION_17	IF_1
0x40025db	            0x31c0	                            xor eax, eax	       892	ftp.c	FUNCTION_17	ELSE_1
0x40025dd	    0x83bfbc070000	              cmp dword [rdi + 0x7bc], 2	       892	ftp.c	FUNCTION_17	ELSE_1
0x40025e4	    0xc78304070000	              mov dword [rbx + 0x704], 0	       887	ftp.c	FUNCTION_17	ELSE_1
0x40025ee	           0xf94c0	                                 sete al	       892	ftp.c	FUNCTION_17	ELSE_1
0x40025f1	    0x83bfb8070000	              cmp dword [rdi + 0x7b8], 2	       894	ftp.c	FUNCTION_17	ELSE_1	IF_2
0x40025f8	    0x898308070000	            mov dword [rbx + 0x708], eax	       892	ftp.c	FUNCTION_17	ELSE_1
0x40025fe	     0xf8484010000	                            je 0x4002788	       894	ftp.c	FUNCTION_17	ELSE_1	IF_2
0x4002604	    0x80bb9a030000	               cmp byte [rbx + 0x39a], 0	       897	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3
0x400260b	     0xf844d010000	                            je 0x400275e	       897	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3
0x4002611	    0x488b93c00600	           mov rdx, qword [rbx + 0x6c0] 	       897	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3
0x4002618	          0x4885d2	                           test rdx, rdx	       897	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3
0x400261b	     0xf843d010000	                            je 0x400275e	       897	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3
0x4002621	    0x488dbb500600	                  lea rdi, [rbx + 0x650]	       903	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3
0x4002628	    0xc783e4060000	              mov dword [rbx + 0x6e4], 0	       901	ftp.c	FUNCTION_17	ELSE_1	ELSE_2	IF_3
0x4002632	    0x488d35000000	                   lea rsi, [0x04002639]	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x4002639	            0x31c0	                            xor eax, eax	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x400263b	      0xe800000000	                          call 0x4002640	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x4002640	            0x85c0	                           test eax, eax	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x4002642	     0xf8596000000	                           jne 0x40026de	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x4002648	    0xc7830c070000	          mov dword [rbx + 0x70c], 0x10 	       794	ftp.c	ELSE_3	FUNCTION_12
0x4002652	      0xe987000000	                           jmp 0x40026de	       794	ftp.c	ELSE_3	FUNCTION_12
0x4002657	    0x660f1f840000	                    nop word [rax + rax]	       794	ftp.c	ELSE_3	FUNCTION_12
0x4002660	          0x4084f6	                           test sil, sil	      1713	ftp.c	FUNCTION_29	IF_1
0x4002663	    0x488b87780500	           mov rax, qword [rdi + 0x578] 	      1696	ftp.c	FUNCTION_29	SWITCH_1
0x400266a	     0xf8530ffffff	                           jne 0x40025a0	      1713	ftp.c	FUNCTION_29	IF_1
0x4002670	    0x838300070000	              add dword [rbx + 0x700], 1	      1716	ftp.c	FUNCTION_29	ELSE_1
0x4002677	          0x4885c0	                           test rax, rax	      1718	ftp.c	FUNCTION_29	ELSE_1	IF_2
0x400267a	     0xf8433ffffff	                            je 0x40025b3	      1718	ftp.c	FUNCTION_29	ELSE_1	IF_2
0x4002680	    0x8b8b00070000	           mov ecx, dword [rbx + 0x700] 	      1722	ftp.c	FUNCTION_29	ELSE_1	IF_2	WHILE_1
0x4002686	            0x85c9	                           test ecx, ecx	      1722	ftp.c	FUNCTION_29	ELSE_1	IF_2	WHILE_1
0x4002688	            0x7e23	                           jle 0x40026ad	      1722	ftp.c	FUNCTION_29	ELSE_1	IF_2	WHILE_1
0x400268a	            0x31d2	                            xor edx, edx	      1722	ftp.c	FUNCTION_29	ELSE_1	IF_2	WHILE_1
0x400268c	            0xeb0b	                           jmp 0x4002699	      1722	ftp.c	FUNCTION_29	ELSE_1	IF_2	WHILE_1
0x400268e	            0x6690	                                     nop	      1722	ftp.c	FUNCTION_29	ELSE_1	IF_2	WHILE_1
0x4002690	          0x4885c0	                           test rax, rax	      1722	ftp.c	FUNCTION_29	ELSE_1	IF_2	WHILE_1
0x4002693	     0xf841affffff	                            je 0x40025b3	      1722	ftp.c	FUNCTION_29	ELSE_1	IF_2	WHILE_1
0x4002699	          0x83c201	                              add edx, 1	      1724	ftp.c	FUNCTION_29	ELSE_1	IF_2	WHILE_1
0x400269c	        0x488b4008	                mov rax, qword [rax + 8]	      1723	ftp.c	FUNCTION_29	ELSE_1	IF_2	WHILE_1
0x40026a0	            0x39ca	                            cmp edx, ecx	      1722	ftp.c	FUNCTION_29	ELSE_1	IF_2	WHILE_1
0x40026a2	            0x75ec	                           jne 0x4002690	      1722	ftp.c	FUNCTION_29	ELSE_1	IF_2	WHILE_1
0x40026a4	          0x4885c0	                           test rax, rax	      1726	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3
0x40026a7	     0xf8406ffffff	                            je 0x40025b3	      1726	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3
0x40026ad	          0x488b10	                    mov rdx, qword [rax]	      1727	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3
0x40026b0	          0x803a2a	                    cmp byte [rdx], 0x2a	      1728	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3	IF_4
0x40026b3	            0x7443	                            je 0x40026f8	      1728	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3	IF_4
0x40026b5	    0xc78304070000	              mov dword [rbx + 0x704], 0	      1733	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3	ELSE_2
0x40026bf	    0x488dbb500600	                  lea rdi, [rbx + 0x650]	      1735	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3
0x40026c6	    0x488d35000000	                   lea rsi, [0x040026cd]	      1735	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3
0x40026cd	            0x31c0	                            xor eax, eax	      1735	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3
0x40026cf	      0xe800000000	                          call 0x40026d4	      1735	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3
0x40026d4	            0x85c0	                           test eax, eax	      1735	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3
0x40026d6	            0x7506	                           jne 0x40026de	      1735	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3
0x40026d8	    0x89ab0c070000	            mov dword [rbx + 0x70c], ebp	       794	ftp.c	ELSE_3	FUNCTION_12
0x40026de	        0x4883c408	                              add rsp, 8	      1783	ftp.c	FUNCTION_29
0x40026e2	              0x5b	                                 pop rbx	      1783	ftp.c	FUNCTION_29
0x40026e3	              0x5d	                                 pop rbp	      1783	ftp.c	FUNCTION_29
0x40026e4	              0xc3	                                     ret	      1783	ftp.c	FUNCTION_29
0x40026e5	           0xf1f00	                         nop dword [rax]	      1783	ftp.c	FUNCTION_29
0x40026e8	    0x488b87880500	           mov rax, qword [rdi + 0x588] 	      1700	ftp.c	FUNCTION_29	SWITCH_1
0x40026ef	      0xe9a3feffff	                           jmp 0x4002597	      1701	ftp.c	FUNCTION_29	SWITCH_1
0x40026f4	         0xf1f4000	                         nop dword [rax]	      1701	ftp.c	FUNCTION_29	SWITCH_1
0x40026f8	        0x4883c201	                              add rdx, 1	      1729	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3	IF_4
0x40026fc	    0xc78304070000	              mov dword [rbx + 0x704], 1	      1730	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3	IF_4
0x4002706	            0xebb7	                           jmp 0x40026bf	      1730	ftp.c	FUNCTION_29	ELSE_1	IF_2	IF_3	IF_4
0x4002708	        0x418b4018	              mov eax, dword [r8 + 0x18]	      1749	ftp.c	FUNCTION_29	IF_5	SWITCH_2	IF_6
0x400270c	            0x85c0	                           test eax, eax	      1749	ftp.c	FUNCTION_29	IF_5	SWITCH_2	IF_6
0x400270e	     0xf85ce000000	                           jne 0x40027e2	      1749	ftp.c	FUNCTION_29	IF_5	SWITCH_2	IF_6
0x4002714	    0x488bb3280700	           mov rsi, qword [rbx + 0x728] 	      1752	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	IF_7
0x400271b	        0x4883feff	             cmp rsi, 0xffffffffffffffff	      1752	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	IF_7
0x400271f	     0xf85a3000000	                           jne 0x40027c8	      1752	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	IF_7
0x4002725	    0x80bfff070000	               cmp byte [rdi + 0x7ff], 0	      1757	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8
0x400272c	    0x488b93d80600	           mov rdx, qword [rbx + 0x6d8] 	      1764	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8
0x4002733	    0x488dbb500600	                  lea rdi, [rbx + 0x650]	      1764	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8
0x400273a	     0xf84b3000000	                            je 0x40027f3	      1757	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8
0x4002740	    0x488d35000000	                   lea rsi, [0x04002747]	      1764	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8
0x4002747	            0x31c0	                            xor eax, eax	      1764	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8
0x4002749	      0xe800000000	                          call 0x400274e	      1764	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8
0x400274e	            0x85c0	                           test eax, eax	      1764	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8
0x4002750	            0x758c	                           jne 0x40026de	      1764	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	IF_8
0x4002752	    0xc7830c070000	          mov dword [rbx + 0x70c], 0x20 	       794	ftp.c	ELSE_3	FUNCTION_12
0x400275c	            0xeb80	                           jmp 0x40026de	       794	ftp.c	ELSE_3	FUNCTION_12
0x400275e	    0x8b93d0060000	           mov edx, dword [rbx + 0x6d0] 	       907	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x4002764	            0x85d2	                           test edx, edx	       907	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x4002766	            0x742e	                            je 0x4002796	       907	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x4002768	    0x488b83c80600	           mov rax, qword [rbx + 0x6c8] 	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x400276f	    0xc783e4060000	              mov dword [rbx + 0x6e4], 1	       908	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x4002779	    0x488dbb500600	                  lea rdi, [rbx + 0x650]	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x4002780	          0x488b10	                    mov rdx, qword [rax]	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x4002783	      0xe9aafeffff	                           jmp 0x4002632	       911	ftp.c	FUNCTION_17	ELSE_1	ELSE_3	IF_4
0x4002788	    0x8b8be4060000	           mov ecx, dword [rbx + 0x6e4] 	       894	ftp.c	FUNCTION_17	ELSE_1	IF_2
0x400278e	            0x85c9	                           test ecx, ecx	       894	ftp.c	FUNCTION_17	ELSE_1	IF_2
0x4002790	     0xf856efeffff	                           jne 0x4002604	       894	ftp.c	FUNCTION_17	ELSE_1	IF_2
0x4002796	        0x4883c408	                              add rsp, 8	      1783	ftp.c	FUNCTION_29
0x400279a	          0x4889df	                            mov rdi, rbx	       896	ftp.c	FUNCTION_17	ELSE_1	CALL_2
0x400279d	              0x5b	                                 pop rbx	      1783	ftp.c	FUNCTION_29
0x400279e	              0x5d	                                 pop rbp	      1783	ftp.c	FUNCTION_29
0x400279f	      0xe95cfdffff	                  jmp sym.ftp_state_mdtm	       896	ftp.c	FUNCTION_17	ELSE_1	CALL_2
0x40027a4	         0xf1f4000	                         nop dword [rax]	       896	ftp.c	FUNCTION_17	ELSE_1	CALL_2
0x40027a8	        0x4883c408	                              add rsp, 8	      1783	ftp.c	FUNCTION_29
0x40027ac	            0x31c0	                            xor eax, eax	      1743	ftp.c	FUNCTION_29	IF_5	SWITCH_2
0x40027ae	              0x5b	                                 pop rbx	      1783	ftp.c	FUNCTION_29
0x40027af	              0x5d	                                 pop rbp	      1783	ftp.c	FUNCTION_29
0x40027b0	              0xc3	                                     ret	      1783	ftp.c	FUNCTION_29
0x40027b1	     0xf1f80000000	                         nop dword [rax]	      1783	ftp.c	FUNCTION_29
0x40027b8	        0x4883c408	                              add rsp, 8	      1783	ftp.c	FUNCTION_29
0x40027bc	          0x4889df	                            mov rdi, rbx	      1775	ftp.c	FUNCTION_29	IF_5	SWITCH_2	CALL_4
0x40027bf	            0x31f6	                            xor esi, esi	      1775	ftp.c	FUNCTION_29	IF_5	SWITCH_2	CALL_4
0x40027c1	              0x5b	                                 pop rbx	      1783	ftp.c	FUNCTION_29
0x40027c2	              0x5d	                                 pop rbp	      1783	ftp.c	FUNCTION_29
0x40027c3	      0xe928deffff	              jmp sym.ftp_state_ul_setup	      1775	ftp.c	FUNCTION_29	IF_5	SWITCH_2	CALL_4
0x40027c8	      0xe800000000	                          call 0x40027cd	      1753	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	IF_7	CALL_2
0x40027cd	    0x488bb3280700	           mov rsi, qword [rbx + 0x728] 	      1754	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	IF_7	CALL_3
0x40027d4	        0x4883c408	                              add rsp, 8	      1783	ftp.c	FUNCTION_29
0x40027d8	          0x4889df	                            mov rdi, rbx	      1754	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	IF_7	CALL_3
0x40027db	              0x5b	                                 pop rbx	      1783	ftp.c	FUNCTION_29
0x40027dc	              0x5d	                                 pop rbp	      1783	ftp.c	FUNCTION_29
0x40027dd	      0xe9aedbffff	                  jmp sym.ftp_state_retr	      1754	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	IF_7	CALL_3
0x40027e2	    0xc7830c070000	              mov dword [rbx + 0x70c], 0	       794	ftp.c	ELSE_3	FUNCTION_12
0x40027ec	            0x31c0	                            xor eax, eax	       794	ftp.c	ELSE_3	FUNCTION_12
0x40027ee	      0xe9ebfeffff	                           jmp 0x40026de	       794	ftp.c	ELSE_3	FUNCTION_12
0x40027f3	    0x488d35000000	                   lea rsi, [0x040027fa]	      1768	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	ELSE_5
0x40027fa	            0x31c0	                            xor eax, eax	      1768	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	ELSE_5
0x40027fc	      0xe800000000	                          call 0x4002801	      1768	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	ELSE_5
0x4002801	            0x85c0	                           test eax, eax	      1768	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	ELSE_5
0x4002803	     0xf85d5feffff	                           jne 0x40026de	      1768	ftp.c	FUNCTION_29	IF_5	SWITCH_2	ELSE_3	ELSE_4	ELSE_5
0x4002809	    0xc7830c070000	          mov dword [rbx + 0x70c], 0x18 	       794	ftp.c	ELSE_3	FUNCTION_12
0x4002813	      0xe9c6feffff	                           jmp 0x40026de	       794	ftp.c	ELSE_3	FUNCTION_12
ftp_state_use_pasv	WHILE,0:SWITCH,0:IF,1:ELSE,0:FOR,0:CALL,1:functions,0:DO,0	37
0x4000560	            0x4154	                                push r12	      1315	ftp.c	FUNCTION_19
0x4000562	              0x55	                                push rbp	      1315	ftp.c	FUNCTION_19
0x4000563	            0x31ed	                            xor ebp, ebp	      1315	ftp.c	FUNCTION_19
0x4000565	              0x53	                                push rbx	      1315	ftp.c	FUNCTION_19
0x4000566	    0x80bfac030000	               cmp byte [rdi + 0x3ac], 0	      1336	ftp.c	FUNCTION_19	IF_1
0x400056d	          0x4889fb	                            mov rbx, rdi	      1315	ftp.c	FUNCTION_19
0x4000570	            0x750e	                           jne 0x4000580	      1336	ftp.c	FUNCTION_19	IF_1
0x4000572	    0x80bfa3030000	               cmp byte [rdi + 0x3a3], 0	      1336	ftp.c	FUNCTION_19	IF_1
0x4000579	      0xbd01000000	                              mov ebp, 1	      1336	ftp.c	FUNCTION_19	IF_1
0x400057e	            0x7560	                           jne 0x40005e0	      1336	ftp.c	FUNCTION_19	IF_1
0x4000580	          0x4863c5	                         movsxd rax, ebp	      1344	ftp.c	FUNCTION_19
0x4000583	    0x488dbb500600	                  lea rdi, [rbx + 0x650]	      1344	ftp.c	FUNCTION_19
0x400058a	    0x488d35000000	                   lea rsi, [0x04000591]	      1344	ftp.c	FUNCTION_19
0x4000591	    0x488d14850000	                        lea rdx, [rax*4]	      1344	ftp.c	FUNCTION_19
0x4000599	          0x4801d0	                            add rax, rdx	      1344	ftp.c	FUNCTION_19
0x400059c	    0x488d15000000	                   lea rdx, [0x040005a3]	      1344	ftp.c	FUNCTION_19
0x40005a3	          0x4801c2	                            add rdx, rax	      1344	ftp.c	FUNCTION_19
0x40005a6	            0x31c0	                            xor eax, eax	      1344	ftp.c	FUNCTION_19
0x40005a8	      0xe800000000	                          call 0x40005ad	      1344	ftp.c	FUNCTION_19
0x40005ad	            0x85c0	                           test eax, eax	      1344	ftp.c	FUNCTION_19
0x40005af	          0x4189c4	                           mov r12d, eax	      1344	ftp.c	FUNCTION_19
0x40005b2	            0x7521	                           jne 0x40005d5	      1344	ftp.c	FUNCTION_19
0x40005b4	          0x488b3b	                    mov rdi, qword [rbx]	      1348	ftp.c	FUNCTION_19	CALL_1
0x40005b7	    0x488d35000000	                   lea rsi, [0x040005be]	      1348	ftp.c	FUNCTION_19	CALL_1
0x40005be	    0x89ab00070000	            mov dword [rbx + 0x700], ebp	      1346	ftp.c	FUNCTION_19
0x40005c4	    0xc7830c070000	          mov dword [rbx + 0x70c], 0x1e 	       794	ftp.c	ELSE_3	FUNCTION_12
0x40005ce	            0x31c0	                            xor eax, eax	      1348	ftp.c	FUNCTION_19	CALL_1
0x40005d0	      0xe800000000	                          call 0x40005d5	      1348	ftp.c	FUNCTION_19	CALL_1
0x40005d5	          0x4489e0	                           mov eax, r12d	      1351	ftp.c	FUNCTION_19
0x40005d8	              0x5b	                                 pop rbx	      1351	ftp.c	FUNCTION_19
0x40005d9	              0x5d	                                 pop rbp	      1351	ftp.c	FUNCTION_19
0x40005da	            0x415c	                                 pop r12	      1351	ftp.c	FUNCTION_19
0x40005dc	              0xc3	                                     ret	      1351	ftp.c	FUNCTION_19
0x40005dd	           0xf1f00	                         nop dword [rax]	      1351	ftp.c	FUNCTION_19
0x40005e0	    0xc687ac030000	               mov byte [rdi + 0x3ac], 1	      1339	ftp.c	FUNCTION_19	IF_1
0x40005e7	            0x31ed	                            xor ebp, ebp	      1339	ftp.c	FUNCTION_19	IF_1
0x40005e9	            0xeb95	                           jmp 0x4000580	      1339	ftp.c	FUNCTION_19	IF_1
