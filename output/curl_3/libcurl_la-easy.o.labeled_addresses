curl_easy_recv	FOR,0:SWITCH,0:DO,0:functions,0:ELSE,0:WHILE,0:IF,3:CALL,3	48
0x4000c80	            0x4155	                                push r13	      1147	easy.c	FUNCTION_25
0x4000c82	            0x4154	                                push r12	      1147	easy.c	FUNCTION_25
0x4000c84	          0x4989d5	                            mov r13, rdx	      1147	easy.c	FUNCTION_25
0x4000c87	              0x55	                                push rbp	      1147	easy.c	FUNCTION_25
0x4000c88	              0x53	                                push rbx	      1147	easy.c	FUNCTION_25
0x4000c89	          0x4989f4	                            mov r12, rsi	      1147	easy.c	FUNCTION_25
0x4000c8c	          0x4889fb	                            mov rbx, rdi	      1147	easy.c	FUNCTION_25
0x4000c8f	          0x4889cd	                            mov rbp, rcx	      1147	easy.c	FUNCTION_25
0x4000c92	        0x4883ec28	                           sub rsp, 0x28	      1147	easy.c	FUNCTION_25
0x4000c96	    0x64488b042528	                mov rax, qword fs:[0x28]	      1147	easy.c	FUNCTION_25
0x4000c9f	      0x4889442418	             mov qword [rsp + 0x18], rax	      1147	easy.c	FUNCTION_25
0x4000ca4	            0x31c0	                            xor eax, eax	      1147	easy.c	FUNCTION_25
0x4000ca6	      0xe800000000	                          call 0x4000cab	      1153	easy.c	FUNCTION_25	IF_1	CALL_1
0x4000cab	            0x84c0	                             test al, al	      1153	easy.c	FUNCTION_25	IF_1	CALL_1
0x4000cad	      0xba5d000000	                           mov edx, 0x5d	      1154	easy.c	FUNCTION_25	IF_1
0x4000cb2	            0x7424	                            je 0x4000cd8	      1153	easy.c	FUNCTION_25	IF_1	CALL_1
0x4000cb4	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1169	easy.c	FUNCTION_25
0x4000cb9	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1169	easy.c	FUNCTION_25
0x4000cc2	            0x89d0	                            mov eax, edx	      1169	easy.c	FUNCTION_25
0x4000cc4	            0x755c	                           jne 0x4000d22	      1169	easy.c	FUNCTION_25
0x4000cc6	        0x4883c428	                           add rsp, 0x28	      1169	easy.c	FUNCTION_25
0x4000cca	              0x5b	                                 pop rbx	      1169	easy.c	FUNCTION_25
0x4000ccb	              0x5d	                                 pop rbp	      1169	easy.c	FUNCTION_25
0x4000ccc	            0x415c	                                 pop r12	      1169	easy.c	FUNCTION_25
0x4000cce	            0x415d	                                 pop r13	      1169	easy.c	FUNCTION_25
0x4000cd0	              0xc3	                                     ret	      1169	easy.c	FUNCTION_25
0x4000cd1	     0xf1f80000000	                         nop dword [rax]	      1169	easy.c	FUNCTION_25
0x4000cd8	      0x488d542410	                   lea rdx, [rsp + 0x10]	      1156	easy.c	FUNCTION_25	CALL_2
0x4000cdd	      0x488d742404	                      lea rsi, [rsp + 4]	      1156	easy.c	FUNCTION_25	CALL_2
0x4000ce2	          0x4889df	                            mov rdi, rbx	      1156	easy.c	FUNCTION_25	CALL_2
0x4000ce5	      0xe886f4ffff	                call sym.easy_connection	      1156	easy.c	FUNCTION_25	CALL_2
0x4000cea	            0x85c0	                           test eax, eax	      1157	easy.c	FUNCTION_25	IF_2
0x4000cec	            0x89c2	                            mov edx, eax	      1156	easy.c	FUNCTION_25	CALL_2
0x4000cee	            0x75c4	                           jne 0x4000cb4	      1157	easy.c	FUNCTION_25	IF_2
0x4000cf0	        0x8b742404	                mov esi, dword [rsp + 4]	      1161	easy.c	FUNCTION_25	CALL_3
0x4000cf4	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1161	easy.c	FUNCTION_25	CALL_3
0x4000cf9	      0x4c8d442408	                       lea r8, [rsp + 8]	      1161	easy.c	FUNCTION_25	CALL_3
0x4000cfe	          0x4c89e2	                            mov rdx, r12	      1161	easy.c	FUNCTION_25	CALL_3
0x4000d01	    0x48c745000000	                      mov qword [rbp], 0	      1160	easy.c	FUNCTION_25
0x4000d09	          0x4c89e9	                            mov rcx, r13	      1161	easy.c	FUNCTION_25	CALL_3
0x4000d0c	      0xe800000000	                          call 0x4000d11	      1161	easy.c	FUNCTION_25	CALL_3
0x4000d11	            0x85c0	                           test eax, eax	      1163	easy.c	FUNCTION_25	IF_3
0x4000d13	            0x89c2	                            mov edx, eax	      1161	easy.c	FUNCTION_25	CALL_3
0x4000d15	            0x759d	                           jne 0x4000cb4	      1163	easy.c	FUNCTION_25	IF_3
0x4000d17	      0x488b442408	                mov rax, qword [rsp + 8]	      1166	easy.c	FUNCTION_25
0x4000d1c	        0x48894500	                    mov qword [rbp], rax	      1166	easy.c	FUNCTION_25
0x4000d20	            0xeb92	                           jmp 0x4000cb4	      1168	easy.c	FUNCTION_25
0x4000d22	      0xe800000000	                          call 0x4000d27	      1169	easy.c	FUNCTION_25
curl_easy_getinfo	FOR,0:SWITCH,0:DO,0:functions,0:ELSE,0:WHILE,0:IF,0:CALL,4	18
0x4000610	        0x4883ec58	                           sub rsp, 0x58	       846	easy.c	FUNCTION_19
0x4000614	    0x64488b042528	                mov rax, qword fs:[0x28]	       846	easy.c	FUNCTION_19
0x400061d	      0x4889442418	             mov qword [rsp + 0x18], rax	       846	easy.c	FUNCTION_19
0x4000622	            0x31c0	                            xor eax, eax	       846	easy.c	FUNCTION_19
0x4000624	      0x488d442460	                   lea rax, [rsp + 0x60]	       851	easy.c	FUNCTION_19	CALL_1
0x4000629	      0x4889542430	             mov qword [rsp + 0x30], rdx	       846	easy.c	FUNCTION_19
0x400062e	    0xc70424100000	                   mov dword [rsp], 0x10	       851	easy.c	FUNCTION_19	CALL_1
0x4000635	      0x4889442408	                mov qword [rsp + 8], rax	       851	easy.c	FUNCTION_19	CALL_1
0x400063a	      0x488d442420	                   lea rax, [rsp + 0x20]	       851	easy.c	FUNCTION_19	CALL_1
0x400063f	      0x4889442410	             mov qword [rsp + 0x10], rax	       851	easy.c	FUNCTION_19	CALL_1
0x4000644	            0x31c0	                            xor eax, eax	       854	easy.c	FUNCTION_19	CALL_3
0x4000646	      0xe800000000	                          call 0x400064b	       854	easy.c	FUNCTION_19	CALL_3
0x400064b	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       858	easy.c	FUNCTION_19
0x4000650	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       858	easy.c	FUNCTION_19
0x4000659	            0x7505	                           jne 0x4000660	       858	easy.c	FUNCTION_19
0x400065b	        0x4883c458	                           add rsp, 0x58	       858	easy.c	FUNCTION_19
0x400065f	              0xc3	                                     ret	       858	easy.c	FUNCTION_19
0x4000660	      0xe800000000	                          call 0x4000665	       858	easy.c	FUNCTION_19
curl_easy_reset	FOR,0:SWITCH,0:DO,0:functions,0:ELSE,0:WHILE,0:IF,0:CALL,10	52
0x40009c0	              0x55	                                push rbp	      1008	easy.c	FUNCTION_22
0x40009c1	              0x53	                                push rbx	      1008	easy.c	FUNCTION_22
0x40009c2	          0x4889fb	                            mov rbx, rdi	      1008	easy.c	FUNCTION_22
0x40009c5	            0x31ed	                            xor ebp, ebp	        90	string3.h	FUNCTION_30	CALL_6
0x40009c7	        0x4883ec08	                              sub rsp, 8	      1008	easy.c	FUNCTION_22
0x40009cb	    0x488bbf105100	          mov rdi, qword [rdi + 0x5110] 	      1009	easy.c	FUNCTION_22	CALL_1
0x40009d2	    0xff1500000000	                 call qword [0x040009d8]	      1009	easy.c	FUNCTION_22	CALL_1
0x40009d8	          0x4889df	                            mov rdi, rbx	      1013	easy.c	FUNCTION_22	CALL_2
0x40009db	    0x48c783105100	            mov qword [rbx + 0x5110], 0 	      1009	easy.c	FUNCTION_22	CALL_1
0x40009e6	    0x48c783185100	            mov qword [rbx + 0x5118], 0 	      1011	easy.c	FUNCTION_22
0x40009f1	      0xe800000000	                          call 0x40009f6	      1013	easy.c	FUNCTION_22	CALL_2
0x40009f6	          0x4889df	                            mov rdi, rbx	      1016	easy.c	FUNCTION_22	CALL_3
0x40009f9	      0xe800000000	                          call 0x40009fe	      1016	easy.c	FUNCTION_22	CALL_3
0x40009fe	    0x488dbbf80100	                  lea rdi, [rbx + 0x1f8]	        90	string3.h	FUNCTION_30	CALL_6
0x4000a05	            0x89d8	                            mov eax, ebx	        90	string3.h	FUNCTION_30	CALL_6
0x4000a07	    0x48c783f00100	              mov qword [rbx + 0x1f0], 0	        90	string3.h	FUNCTION_30	CALL_6
0x4000a12	    0x48c783100b00	              mov qword [rbx + 0xb10], 0	        90	string3.h	FUNCTION_30	CALL_6
0x4000a1d	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_30	CALL_6
0x4000a21	            0x29f8	                            sub eax, edi	        90	string3.h	FUNCTION_30	CALL_6
0x4000a23	    0x8d88180b0000	                  lea ecx, [rax + 0xb18]	        90	string3.h	FUNCTION_30	CALL_6
0x4000a29	          0x4889e8	                            mov rax, rbp	        90	string3.h	FUNCTION_30	CALL_6
0x4000a2c	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_30	CALL_6
0x4000a2f	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_30	CALL_6
0x4000a32	          0x4889df	                            mov rdi, rbx	      1018	easy.c	FUNCTION_22	CALL_5
0x4000a35	      0xe800000000	                          call 0x4000a3a	      1018	easy.c	FUNCTION_22	CALL_5
0x4000a3a	    0x488dbb580b00	                  lea rdi, [rbx + 0xb58]	        90	string3.h	FUNCTION_30	CALL_6
0x4000a41	            0x89d8	                            mov eax, ebx	        90	string3.h	FUNCTION_30	CALL_6
0x4000a43	    0x48c783500b00	              mov qword [rbx + 0xb50], 0	        90	string3.h	FUNCTION_30	CALL_6
0x4000a4e	    0x48c783e00c00	              mov qword [rbx + 0xce0], 0	        90	string3.h	FUNCTION_30	CALL_6
0x4000a59	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_30	CALL_6
0x4000a5d	            0x29f8	                            sub eax, edi	        90	string3.h	FUNCTION_30	CALL_6
0x4000a5f	    0x8d88e80c0000	                  lea ecx, [rax + 0xce8]	        90	string3.h	FUNCTION_30	CALL_6
0x4000a65	          0x4889e8	                            mov rax, rbp	        90	string3.h	FUNCTION_30	CALL_6
0x4000a68	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_30	CALL_6
0x4000a6b	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_30	CALL_6
0x4000a6e	          0x4889df	                            mov rdi, rbx	      1024	easy.c	FUNCTION_22	CALL_7
0x4000a71	      0xe800000000	                          call 0x4000a76	      1024	easy.c	FUNCTION_22	CALL_7
0x4000a76	    0x838b880b0000	            or dword [rbx + 0xb88], 0x10	      1026	easy.c	FUNCTION_22
0x4000a7d	    0x48c783304d00	mov qword [rbx + 0x4d30], 0xffffffffffffffff 	      1027	easy.c	FUNCTION_22
0x4000a88	          0x4889df	                            mov rdi, rbx	      1032	easy.c	FUNCTION_22	CALL_10
0x4000a8b	    0x48c783504e00	            mov qword [rbx + 0x4e50], 0 	        90	string3.h	FUNCTION_30	CALL_6
0x4000a96	    0x48c783584e00	            mov qword [rbx + 0x4e58], 0 	        90	string3.h	FUNCTION_30	CALL_6
0x4000aa1	    0x48c783604e00	            mov qword [rbx + 0x4e60], 0 	        90	string3.h	FUNCTION_30	CALL_6
0x4000aac	    0x48c783684e00	            mov qword [rbx + 0x4e68], 0 	        90	string3.h	FUNCTION_30	CALL_6
0x4000ab7	    0x48c783704e00	            mov qword [rbx + 0x4e70], 0 	        90	string3.h	FUNCTION_30	CALL_6
0x4000ac2	    0x48c783784e00	            mov qword [rbx + 0x4e78], 0 	        90	string3.h	FUNCTION_30	CALL_6
0x4000acd	    0x48c783804e00	            mov qword [rbx + 0x4e80], 0 	        90	string3.h	FUNCTION_30	CALL_6
0x4000ad8	    0x48c783884e00	            mov qword [rbx + 0x4e88], 0 	        90	string3.h	FUNCTION_30	CALL_6
0x4000ae3	        0x4883c408	                              add rsp, 8	      1033	easy.c	FUNCTION_22
0x4000ae7	              0x5b	                                 pop rbx	      1033	easy.c	FUNCTION_22
0x4000ae8	              0x5d	                                 pop rbp	      1033	easy.c	FUNCTION_22
0x4000ae9	      0xe900000000	                           jmp 0x4000aee	      1032	easy.c	FUNCTION_22	CALL_10
curl_easy_init	FOR,0:SWITCH,0:DO,0:functions,0:ELSE,0:WHILE,0:IF,3:CALL,6	25
0x40002a0	        0x4883ec18	                           sub rsp, 0x18	       355	easy.c	FUNCTION_7
0x40002a4	    0x64488b042528	                mov rax, qword fs:[0x28]	       355	easy.c	FUNCTION_7
0x40002ad	      0x4889442408	                mov qword [rsp + 8], rax	       355	easy.c	FUNCTION_7
0x40002b2	            0x31c0	                            xor eax, eax	       355	easy.c	FUNCTION_7
0x40002b4	    0x8b0500000000	            mov eax, dword [0x040002ba] 	       360	easy.c	FUNCTION_7	IF_1
0x40002ba	            0x85c0	                           test eax, eax	       360	easy.c	FUNCTION_7	IF_1
0x40002bc	            0x750e	                           jne 0x40002cc	       360	easy.c	FUNCTION_7	IF_1
0x40002be	      0xbf03000000	                              mov edi, 3	       361	easy.c	FUNCTION_7	IF_1	CALL_1
0x40002c3	      0xe800000000	                          call 0x40002c8	       361	easy.c	FUNCTION_7	IF_1	CALL_1
0x40002c8	            0x85c0	                           test eax, eax	       362	easy.c	FUNCTION_7	IF_1	IF_2
0x40002ca	            0x752c	                           jne 0x40002f8	       362	easy.c	FUNCTION_7	IF_1	IF_2
0x40002cc	          0x4889e7	                            mov rdi, rsp	       370	easy.c	FUNCTION_7	CALL_4
0x40002cf	      0xe800000000	                          call 0x40002d4	       370	easy.c	FUNCTION_7	CALL_4
0x40002d4	            0x85c0	                           test eax, eax	       371	easy.c	FUNCTION_7	IF_3
0x40002d6	            0x7520	                           jne 0x40002f8	       371	easy.c	FUNCTION_7	IF_3
0x40002d8	        0x488b0424	                    mov rax, qword [rsp]	       376	easy.c	FUNCTION_7
0x40002dc	      0x488b542408	                mov rdx, qword [rsp + 8]	       377	easy.c	FUNCTION_7
0x40002e1	    0x644833142528	                xor rdx, qword fs:[0x28]	       377	easy.c	FUNCTION_7
0x40002ea	            0x7510	                           jne 0x40002fc	       377	easy.c	FUNCTION_7
0x40002ec	        0x4883c418	                           add rsp, 0x18	       377	easy.c	FUNCTION_7
0x40002f0	              0xc3	                                     ret	       377	easy.c	FUNCTION_7
0x40002f1	     0xf1f80000000	                         nop dword [rax]	       377	easy.c	FUNCTION_7
0x40002f8	            0x31c0	                            xor eax, eax	       365	easy.c	FUNCTION_7	IF_1	IF_2
0x40002fa	            0xebe0	                           jmp 0x40002dc	       365	easy.c	FUNCTION_7	IF_1	IF_2
0x40002fc	      0xe800000000	                          call 0x4000301	       377	easy.c	FUNCTION_7
curl_easy_send	FOR,0:SWITCH,0:DO,0:functions,0:ELSE,0:WHILE,0:IF,4:CALL,3	55
0x4000d30	            0x4155	                                push r13	      1177	easy.c	FUNCTION_26
0x4000d32	            0x4154	                                push r12	      1177	easy.c	FUNCTION_26
0x4000d34	          0x4989d5	                            mov r13, rdx	      1177	easy.c	FUNCTION_26
0x4000d37	              0x55	                                push rbp	      1177	easy.c	FUNCTION_26
0x4000d38	              0x53	                                push rbx	      1177	easy.c	FUNCTION_26
0x4000d39	          0x4989f4	                            mov r12, rsi	      1177	easy.c	FUNCTION_26
0x4000d3c	          0x4889fb	                            mov rbx, rdi	      1177	easy.c	FUNCTION_26
0x4000d3f	          0x4889cd	                            mov rbp, rcx	      1177	easy.c	FUNCTION_26
0x4000d42	        0x4883ec28	                           sub rsp, 0x28	      1177	easy.c	FUNCTION_26
0x4000d46	    0x64488b042528	                mov rax, qword fs:[0x28]	      1177	easy.c	FUNCTION_26
0x4000d4f	      0x4889442418	             mov qword [rsp + 0x18], rax	      1177	easy.c	FUNCTION_26
0x4000d54	            0x31c0	                            xor eax, eax	      1177	easy.c	FUNCTION_26
0x4000d56	    0x48c744241000	               mov qword [rsp + 0x10], 0	      1181	easy.c	FUNCTION_26
0x4000d5f	      0xe800000000	                          call 0x4000d64	      1183	easy.c	FUNCTION_26	IF_1	CALL_1
0x4000d64	            0x84c0	                             test al, al	      1183	easy.c	FUNCTION_26	IF_1	CALL_1
0x4000d66	      0xba5d000000	                           mov edx, 0x5d	      1184	easy.c	FUNCTION_26	IF_1
0x4000d6b	            0x7423	                            je 0x4000d90	      1183	easy.c	FUNCTION_26	IF_1	CALL_1
0x4000d6d	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	      1203	easy.c	FUNCTION_26
0x4000d72	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1203	easy.c	FUNCTION_26
0x4000d7b	            0x89d0	                            mov eax, edx	      1203	easy.c	FUNCTION_26
0x4000d7d	            0x7573	                           jne 0x4000df2	      1203	easy.c	FUNCTION_26
0x4000d7f	        0x4883c428	                           add rsp, 0x28	      1203	easy.c	FUNCTION_26
0x4000d83	              0x5b	                                 pop rbx	      1203	easy.c	FUNCTION_26
0x4000d84	              0x5d	                                 pop rbp	      1203	easy.c	FUNCTION_26
0x4000d85	            0x415c	                                 pop r12	      1203	easy.c	FUNCTION_26
0x4000d87	            0x415d	                                 pop r13	      1203	easy.c	FUNCTION_26
0x4000d89	              0xc3	                                     ret	      1203	easy.c	FUNCTION_26
0x4000d8a	    0x660f1f440000	                    nop word [rax + rax]	      1203	easy.c	FUNCTION_26
0x4000d90	      0x488d542410	                   lea rdx, [rsp + 0x10]	      1186	easy.c	FUNCTION_26	CALL_2
0x4000d95	      0x488d742404	                      lea rsi, [rsp + 4]	      1186	easy.c	FUNCTION_26	CALL_2
0x4000d9a	          0x4889df	                            mov rdi, rbx	      1186	easy.c	FUNCTION_26	CALL_2
0x4000d9d	      0xe8cef3ffff	                call sym.easy_connection	      1186	easy.c	FUNCTION_26	CALL_2
0x4000da2	            0x85c0	                           test eax, eax	      1187	easy.c	FUNCTION_26	IF_2
0x4000da4	            0x89c2	                            mov edx, eax	      1186	easy.c	FUNCTION_26	CALL_2
0x4000da6	            0x75c5	                           jne 0x4000d6d	      1187	easy.c	FUNCTION_26	IF_2
0x4000da8	        0x8b742404	                mov esi, dword [rsp + 4]	      1191	easy.c	FUNCTION_26	CALL_3
0x4000dac	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	      1191	easy.c	FUNCTION_26	CALL_3
0x4000db1	      0x4c8d442408	                       lea r8, [rsp + 8]	      1191	easy.c	FUNCTION_26	CALL_3
0x4000db6	          0x4c89e9	                            mov rcx, r13	      1191	easy.c	FUNCTION_26	CALL_3
0x4000db9	          0x4c89e2	                            mov rdx, r12	      1191	easy.c	FUNCTION_26	CALL_3
0x4000dbc	    0x48c745000000	                      mov qword [rbp], 0	      1190	easy.c	FUNCTION_26
0x4000dc4	      0xe800000000	                          call 0x4000dc9	      1191	easy.c	FUNCTION_26	CALL_3
0x4000dc9	      0x488b4c2408	                mov rcx, qword [rsp + 8]	      1193	easy.c	FUNCTION_26	IF_3
0x4000dce	      0xba37000000	                           mov edx, 0x37	      1194	easy.c	FUNCTION_26	IF_3
0x4000dd3	        0x4883f9ff	             cmp rcx, 0xffffffffffffffff	      1193	easy.c	FUNCTION_26	IF_3
0x4000dd7	            0x7494	                            je 0x4000d6d	      1193	easy.c	FUNCTION_26	IF_3
0x4000dd9	            0x85c0	                           test eax, eax	      1197	easy.c	FUNCTION_26	IF_4
0x4000ddb	            0x750a	                           jne 0x4000de7	      1197	easy.c	FUNCTION_26	IF_4
0x4000ddd	          0x4885c9	                           test rcx, rcx	      1197	easy.c	FUNCTION_26	IF_4
0x4000de0	      0xba51000000	                           mov edx, 0x51	      1198	easy.c	FUNCTION_26	IF_4
0x4000de5	            0x7486	                            je 0x4000d6d	      1197	easy.c	FUNCTION_26	IF_4
0x4000de7	        0x48894d00	                    mov qword [rbp], rcx	      1200	easy.c	FUNCTION_26
0x4000deb	            0x89c2	                            mov edx, eax	      1191	easy.c	FUNCTION_26	CALL_3
0x4000ded	      0xe97bffffff	                           jmp 0x4000d6d	      1202	easy.c	FUNCTION_26
0x4000df2	      0xe800000000	                  call section_end..data	      1203	easy.c	FUNCTION_26
curl_global_cleanup	FOR,0:SWITCH,0:DO,0:functions,0:ELSE,0:WHILE,0:IF,3:CALL,7	14
0x4000260	    0x8b0500000000	            mov eax, dword [0x04000266] 	       324	easy.c	FUNCTION_6	IF_1
0x4000266	            0x85c0	                           test eax, eax	       324	easy.c	FUNCTION_6	IF_1
0x4000268	            0x740d	                            je 0x4000277	       324	easy.c	FUNCTION_6	IF_1
0x400026a	          0x83e801	                              sub eax, 1	       327	easy.c	FUNCTION_6	IF_2
0x400026d	            0x85c0	                           test eax, eax	       327	easy.c	FUNCTION_6	IF_2
0x400026f	    0x890500000000	            mov dword [0x04000275], eax 	       327	easy.c	FUNCTION_6	IF_2
0x4000275	            0x7409	                            je 0x4000280	       327	easy.c	FUNCTION_6	IF_2
0x4000277	            0xf3c3	                                     ret	       327	easy.c	FUNCTION_6	IF_2
0x4000279	     0xf1f80000000	                         nop dword [rax]	       327	easy.c	FUNCTION_6	IF_2
0x4000280	        0x4883ec08	                              sub rsp, 8	       323	easy.c	FUNCTION_6
0x4000284	      0xe800000000	                          call 0x4000289	       330	easy.c	FUNCTION_6	CALL_1
0x4000289	      0xe800000000	                          call 0x400028e	       331	easy.c	FUNCTION_6	CALL_2
0x400028e	        0x4883c408	                              add rsp, 8	       348	easy.c	FUNCTION_6
0x4000292	      0xe900000000	                           jmp 0x4000297	       332	easy.c	FUNCTION_6	CALL_3
curl_global_init_mem	FOR,0:SWITCH,0:DO,0:functions,0:ELSE,0:WHILE,0:IF,2:CALL,1	29
0x40001f0	          0x4885f6	                           test rsi, rsi	       295	easy.c	FUNCTION_5	IF_1
0x40001f3	            0x7405	                            je 0x40001fa	       295	easy.c	FUNCTION_5	IF_1
0x40001f5	          0x4885d2	                           test rdx, rdx	       295	easy.c	FUNCTION_5	IF_1
0x40001f8	            0x7506	                           jne 0x4000200	       295	easy.c	FUNCTION_5	IF_1
0x40001fa	      0xb802000000	                              mov eax, 2	       296	easy.c	FUNCTION_5	IF_1
0x40001ff	              0xc3	                                     ret	       316	easy.c	FUNCTION_5
0x4000200	          0x4885c9	                           test rcx, rcx	       295	easy.c	FUNCTION_5	IF_1
0x4000203	        0x410f94c2	                               sete r10b	       295	easy.c	FUNCTION_5	IF_1
0x4000207	          0x4d85c0	                             test r8, r8	       295	easy.c	FUNCTION_5	IF_1
0x400020a	           0xf94c0	                                 sete al	       295	easy.c	FUNCTION_5	IF_1
0x400020d	          0x4108c2	                             or r10b, al	       295	easy.c	FUNCTION_5	IF_1
0x4000210	            0x75e8	                           jne 0x40001fa	       295	easy.c	FUNCTION_5	IF_1
0x4000212	          0x4d85c9	                             test r9, r9	       295	easy.c	FUNCTION_5	IF_1
0x4000215	            0x74e3	                            je 0x40001fa	       295	easy.c	FUNCTION_5	IF_1
0x4000217	    0x8b0500000000	            mov eax, dword [0x0400021d] 	       298	easy.c	FUNCTION_5	IF_2
0x400021d	            0x85c0	                           test eax, eax	       298	easy.c	FUNCTION_5	IF_2
0x400021f	            0x740f	                            je 0x4000230	       298	easy.c	FUNCTION_5	IF_2
0x4000221	          0x83c001	                              add eax, 1	       302	easy.c	FUNCTION_5	IF_2
0x4000224	    0x890500000000	            mov dword [0x0400022a], eax 	       302	easy.c	FUNCTION_5	IF_2
0x400022a	            0x31c0	                            xor eax, eax	       303	easy.c	FUNCTION_5	IF_2
0x400022c	              0xc3	                                     ret	       303	easy.c	FUNCTION_5	IF_2
0x400022d	           0xf1f00	                         nop dword [rax]	       303	easy.c	FUNCTION_5	IF_2
0x4000230	    0x488935000000	            mov qword [0x04000237], rsi 	       308	easy.c	FUNCTION_5
0x4000237	            0x31f6	                            xor esi, esi	       315	easy.c	FUNCTION_5	CALL_1
0x4000239	    0x488915000000	            mov qword [0x04000240], rdx 	       309	easy.c	FUNCTION_5
0x4000240	    0x4c8905000000	              mov qword [0x04000247], r8	       310	easy.c	FUNCTION_5
0x4000247	    0x48890d000000	            mov qword [0x0400024e], rcx 	       311	easy.c	FUNCTION_5
0x400024e	    0x4c890d000000	              mov qword [0x04000255], r9	       312	easy.c	FUNCTION_5
0x4000255	      0xe9e6fdffff	                     jmp sym.global_init	       315	easy.c	FUNCTION_5	CALL_1
curl_easy_duphandle	FOR,0:SWITCH,0:DO,0:functions,0:ELSE,0:WHILE,0:IF,14:CALL,18	163
0x4000670	            0x4157	                                push r15	       907	easy.c	FUNCTION_21
0x4000672	            0x4156	                                push r14	       907	easy.c	FUNCTION_21
0x4000674	      0xbed8520000	                         mov esi, 0x52d8	       908	easy.c	FUNCTION_21	CALL_1
0x4000679	            0x4155	                                push r13	       907	easy.c	FUNCTION_21
0x400067b	            0x4154	                                push r12	       907	easy.c	FUNCTION_21
0x400067d	          0x4989fd	                            mov r13, rdi	       907	easy.c	FUNCTION_21
0x4000680	              0x55	                                push rbp	       907	easy.c	FUNCTION_21
0x4000681	              0x53	                                push rbx	       907	easy.c	FUNCTION_21
0x4000682	      0xbf01000000	                              mov edi, 1	       908	easy.c	FUNCTION_21	CALL_1
0x4000687	          0x4531e4	                          xor r12d, r12d	      1000	easy.c	FUNCTION_21
0x400068a	        0x4883ec08	                              sub rsp, 8	       907	easy.c	FUNCTION_21
0x400068e	    0xff1500000000	                 call qword [0x04000694]	       908	easy.c	FUNCTION_21	CALL_1
0x4000694	          0x4885c0	                           test rax, rax	       909	easy.c	FUNCTION_21	IF_1
0x4000697	     0xf8477010000	                            je 0x4000814	       909	easy.c	FUNCTION_21	IF_1
0x400069d	    0x498bbd900700	           mov rdi, qword [r13 + 0x790] 	       917	easy.c	FUNCTION_21
0x40006a4	          0x4889c5	                            mov rbp, rax	       917	easy.c	FUNCTION_21
0x40006a7	    0x4889b8900700	            mov qword [rax + 0x790], rdi	       917	easy.c	FUNCTION_21
0x40006ae	        0x4883c701	                              add rdi, 1	       918	easy.c	FUNCTION_21	CALL_2
0x40006b2	    0xff1500000000	                 call qword [0x040006b8]	       918	easy.c	FUNCTION_21	CALL_2
0x40006b8	          0x4885c0	                           test rax, rax	       919	easy.c	FUNCTION_21	IF_2
0x40006bb	    0x488985200d00	           mov qword [rbp + 0xd20], rax 	       918	easy.c	FUNCTION_21	CALL_2
0x40006c2	     0xf84c1000000	                            je 0x4000789	       919	easy.c	FUNCTION_21	IF_2
0x40006c8	      0xbf00010000	                          mov edi, 0x100	       922	easy.c	FUNCTION_21	CALL_3
0x40006cd	    0xff1500000000	                 call qword [0x040006d3]	       922	easy.c	FUNCTION_21	CALL_3
0x40006d3	          0x4885c0	                           test rax, rax	       923	easy.c	FUNCTION_21	IF_3
0x40006d6	    0x488985100d00	           mov qword [rbp + 0xd10], rax 	       922	easy.c	FUNCTION_21	CALL_3
0x40006dd	     0xf84a6000000	                            je 0x4000789	       923	easy.c	FUNCTION_21	IF_3
0x40006e3	    0x48c785180d00	         mov qword [rbp + 0xd18], 0x100 	       925	easy.c	FUNCTION_21
0x40006ee	    0x488dbdf00100	                  lea rdi, [rbp + 0x1f0]	       867	easy.c	FUNCTION_20
0x40006f5	    0x498db5f00100	                  lea rsi, [r13 + 0x1f0]	       867	easy.c	FUNCTION_20
0x40006fc	      0xb925010000	                          mov ecx, 0x125	       867	easy.c	FUNCTION_20
0x4000701	    0x4c8db5b00300	                  lea r14, [rbp + 0x3b0]	       868	easy.c	FUNCTION_20	CALL_1
0x4000708	    0x488d9d300800	                  lea rbx, [rbp + 0x830]	       871	easy.c	FUNCTION_20	CALL_2
0x400070f	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	       867	easy.c	FUNCTION_20
0x4000712	          0x4c89f7	                            mov rdi, r14	       868	easy.c	FUNCTION_20	CALL_1
0x4000715	          0x4889ee	                            mov rsi, rbp	       868	easy.c	FUNCTION_20	CALL_1
0x4000718	    0x4c8dbd280a00	                  lea r15, [rbp + 0xa28]	       868	easy.c	FUNCTION_20	CALL_1
0x400071f	      0xe800000000	                          call 0x4000724	       868	easy.c	FUNCTION_20	CALL_1
0x4000724	    0x488dbd380800	                  lea rdi, [rbp + 0x838]	        90	string3.h	FUNCTION_30	CALL_6
0x400072b	          0x4889d9	                            mov rcx, rbx	        90	string3.h	FUNCTION_30	CALL_6
0x400072e	          0x4c89e0	                            mov rax, r12	        90	string3.h	FUNCTION_30	CALL_6
0x4000731	    0x48c785300800	              mov qword [rbp + 0x830], 0	        90	string3.h	FUNCTION_30	CALL_6
0x400073c	    0x48c785300a00	              mov qword [rbp + 0xa30], 0	        90	string3.h	FUNCTION_30	CALL_6
0x4000747	    0x4d8da5300800	                  lea r12, [r13 + 0x830]	        90	string3.h	FUNCTION_30	CALL_6
0x400074e	        0x4883e7f8	             and rdi, 0xfffffffffffffff8	        90	string3.h	FUNCTION_30	CALL_6
0x4000752	          0x4829f9	                            sub rcx, rdi	        90	string3.h	FUNCTION_30	CALL_6
0x4000755	    0x81c108020000	                          add ecx, 0x208	        90	string3.h	FUNCTION_30	CALL_6
0x400075b	          0xc1e903	                              shr ecx, 3	        90	string3.h	FUNCTION_30	CALL_6
0x400075e	          0xf348ab	              rep stosq qword [rdi], rax	        90	string3.h	FUNCTION_30	CALL_6
0x4000761	            0xeb16	                           jmp 0x4000779	        90	string3.h	FUNCTION_30	CALL_6
0x4000763	       0xf1f440000	                   nop dword [rax + rax]	        90	string3.h	FUNCTION_30	CALL_6
0x4000768	        0x4883c308	                              add rbx, 8	        90	string3.h	FUNCTION_30	CALL_6
0x400076c	        0x4983c408	                              add r12, 8	        90	string3.h	FUNCTION_30	CALL_6
0x4000770	          0x4939df	                            cmp r15, rbx	       874	easy.c	FUNCTION_20	FOR_1
0x4000773	     0xf84b7000000	                            je 0x4000830	       874	easy.c	FUNCTION_20	FOR_1
0x4000779	        0x498b3424	                    mov rsi, qword [r12]	       875	easy.c	FUNCTION_20	FOR_1	CALL_3
0x400077d	          0x4889df	                            mov rdi, rbx	       875	easy.c	FUNCTION_20	FOR_1	CALL_3
0x4000780	      0xe800000000	                          call 0x4000785	       875	easy.c	FUNCTION_20	FOR_1	CALL_3
0x4000785	            0x85c0	                           test eax, eax	       876	easy.c	FUNCTION_20	FOR_1	IF_1
0x4000787	            0x74df	                            je 0x4000768	       876	easy.c	FUNCTION_20	FOR_1	IF_1
0x4000789	    0x488bbd380b00	           mov rdi, qword [rbp + 0xb38] 	       876	easy.c	FUNCTION_20	FOR_1	IF_1
0x4000790	      0xe800000000	                          call 0x4000795	       990	easy.c	FUNCTION_21	IF_14	CALL_12
0x4000795	          0x4531e4	                          xor r12d, r12d	      1000	easy.c	FUNCTION_21
0x4000798	    0x488bbd200d00	           mov rdi, qword [rbp + 0xd20] 	       992	easy.c	FUNCTION_21	IF_14	CALL_13
0x400079f	    0x48c785380b00	              mov qword [rbp + 0xb38], 0	       991	easy.c	FUNCTION_21	IF_14
0x40007aa	    0xff1500000000	                 call qword [0x040007b0]	       992	easy.c	FUNCTION_21	IF_14	CALL_13
0x40007b0	    0x488bbd100d00	           mov rdi, qword [rbp + 0xd10] 	       993	easy.c	FUNCTION_21	IF_14	CALL_14
0x40007b7	    0x48c785200d00	              mov qword [rbp + 0xd20], 0	       992	easy.c	FUNCTION_21	IF_14	CALL_13
0x40007c2	    0xff1500000000	                 call qword [0x040007c8]	       993	easy.c	FUNCTION_21	IF_14	CALL_14
0x40007c8	    0x488bbd180b00	           mov rdi, qword [rbp + 0xb18] 	       994	easy.c	FUNCTION_21	IF_14	CALL_15
0x40007cf	    0x48c785100d00	              mov qword [rbp + 0xd10], 0	       993	easy.c	FUNCTION_21	IF_14	CALL_14
0x40007da	    0xff1500000000	                 call qword [0x040007e0]	       994	easy.c	FUNCTION_21	IF_14	CALL_15
0x40007e0	    0x488bbd280b00	           mov rdi, qword [rbp + 0xb28] 	       995	easy.c	FUNCTION_21	IF_14	CALL_16
0x40007e7	    0x48c785180b00	              mov qword [rbp + 0xb18], 0	       994	easy.c	FUNCTION_21	IF_14	CALL_15
0x40007f2	    0xff1500000000	                 call qword [0x040007f8]	       995	easy.c	FUNCTION_21	IF_14	CALL_16
0x40007f8	          0x4889ef	                            mov rdi, rbp	       996	easy.c	FUNCTION_21	IF_14	CALL_17
0x40007fb	    0x48c785280b00	              mov qword [rbp + 0xb28], 0	       995	easy.c	FUNCTION_21	IF_14	CALL_16
0x4000806	      0xe800000000	                          call 0x400080b	       996	easy.c	FUNCTION_21	IF_14	CALL_17
0x400080b	          0x4889ef	                            mov rdi, rbp	       997	easy.c	FUNCTION_21	IF_14	CALL_18
0x400080e	    0xff1500000000	                 call qword [0x04000814]	       997	easy.c	FUNCTION_21	IF_14	CALL_18
0x4000814	        0x4883c408	                              add rsp, 8	      1001	easy.c	FUNCTION_21
0x4000818	          0x4c89e0	                            mov rax, r12	      1001	easy.c	FUNCTION_21
0x400081b	              0x5b	                                 pop rbx	      1001	easy.c	FUNCTION_21
0x400081c	              0x5d	                                 pop rbp	      1001	easy.c	FUNCTION_21
0x400081d	            0x415c	                                 pop r12	      1001	easy.c	FUNCTION_21
0x400081f	            0x415d	                                 pop r13	      1001	easy.c	FUNCTION_21
0x4000821	            0x415e	                                 pop r14	      1001	easy.c	FUNCTION_21
0x4000823	            0x415f	                                 pop r15	      1001	easy.c	FUNCTION_21
0x4000825	              0xc3	                                     ret	      1001	easy.c	FUNCTION_21
0x4000826	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1001	easy.c	FUNCTION_21
0x4000830	    0x498bbd780200	           mov rdi, qword [r13 + 0x278] 	       882	easy.c	FUNCTION_20	IF_2
0x4000837	          0x4885ff	                           test rdi, rdi	       882	easy.c	FUNCTION_20	IF_2
0x400083a	            0x7435	                            je 0x4000871	       882	easy.c	FUNCTION_20	IF_2
0x400083c	    0x4983bd300a00	              cmp qword [r13 + 0xa30], 0	       882	easy.c	FUNCTION_20	IF_2
0x4000844	            0x742b	                            je 0x4000871	       882	easy.c	FUNCTION_20	IF_2
0x4000846	      0xe800000000	                          call 0x400084b	       884	easy.c	FUNCTION_20	IF_2	CALL_4
0x400084b	    0x498bbd300a00	           mov rdi, qword [r13 + 0xa30] 	       884	easy.c	FUNCTION_20	IF_2	CALL_4
0x4000852	          0x4889c6	                            mov rsi, rax	       884	easy.c	FUNCTION_20	IF_2	CALL_4
0x4000855	      0xe800000000	                          call 0x400085a	       884	easy.c	FUNCTION_20	IF_2	CALL_4
0x400085a	          0x4885c0	                           test rax, rax	       886	easy.c	FUNCTION_20	IF_2	IF_3
0x400085d	    0x488985300a00	           mov qword [rbp + 0xa30], rax 	       884	easy.c	FUNCTION_20	IF_2	CALL_4
0x4000864	     0xf841fffffff	                            je 0x4000789	       886	easy.c	FUNCTION_20	IF_2	IF_3
0x400086a	    0x488985680200	           mov qword [rbp + 0x268], rax 	       889	easy.c	FUNCTION_20	IF_2
0x4000871	    0x498db5b00300	                  lea rsi, [r13 + 0x3b0]	       893	easy.c	FUNCTION_20	CALL_6
0x4000878	          0x4c89f7	                            mov rdi, r14	       893	easy.c	FUNCTION_20	CALL_6
0x400087b	      0xe800000000	                          call 0x4000880	       893	easy.c	FUNCTION_20	CALL_6
0x4000880	    0x4983bdb00500	              cmp qword [r13 + 0x5b0], 0	       895	easy.c	FUNCTION_20	IF_4
0x4000888	            0x740e	                            je 0x4000898	       895	easy.c	FUNCTION_20	IF_4
0x400088a	    0x488b95b00500	           mov rdx, qword [rbp + 0x5b0] 	       896	easy.c	FUNCTION_20	IF_4
0x4000891	    0x488995400b00	           mov qword [rbp + 0xb40], rdx 	       896	easy.c	FUNCTION_20	IF_4
0x4000898	            0x85c0	                           test eax, eax	       928	easy.c	FUNCTION_21	IF_4	CALL_4
0x400089a	     0xf85e9feffff	                           jne 0x4000789	       928	easy.c	FUNCTION_21	IF_4	CALL_4
0x40008a0	    0x418b85880b00	           mov eax, dword [r13 + 0xb88] 	       936	easy.c	FUNCTION_21
0x40008a7	    0x48c785e80c00	              mov qword [rbp + 0xce8], 0	       932	easy.c	FUNCTION_21
0x40008b2	    0x48c785080d00	              mov qword [rbp + 0xd08], 0	       934	easy.c	FUNCTION_21
0x40008bd	    0x8985880b0000	           mov dword [rbp + 0xb88], eax 	       936	easy.c	FUNCTION_21
0x40008c3	    0x410fb685800b	          movzx eax, byte [r13 + 0xb80] 	       937	easy.c	FUNCTION_21
0x40008cb	    0x8885800b0000	              mov byte [rbp + 0xb80], al	       937	easy.c	FUNCTION_21
0x40008d1	    0x498b85480b00	           mov rax, qword [r13 + 0xb48] 	       939	easy.c	FUNCTION_21	IF_5
0x40008d8	          0x4885c0	                           test rax, rax	       939	easy.c	FUNCTION_21	IF_5
0x40008db	            0x742e	                            je 0x400090b	       939	easy.c	FUNCTION_21	IF_5
0x40008dd	    0x410fb68d7105	          movzx ecx, byte [r13 + 0x571] 	       942	easy.c	FUNCTION_21	IF_5	CALL_5
0x40008e5	    0x488b95480b00	           mov rdx, qword [rbp + 0xb48] 	       942	easy.c	FUNCTION_21	IF_5	CALL_5
0x40008ec	          0x4c89ef	                            mov rdi, r13	       942	easy.c	FUNCTION_21	IF_5	CALL_5
0x40008ef	    0x488bb0000800	           mov rsi, qword [rax + 0x800] 	       942	easy.c	FUNCTION_21	IF_5	CALL_5
0x40008f6	      0xe800000000	                          call 0x40008fb	       942	easy.c	FUNCTION_21	IF_5	CALL_5
0x40008fb	          0x4885c0	                           test rax, rax	       946	easy.c	FUNCTION_21	IF_5	IF_6
0x40008fe	    0x488985480b00	           mov qword [rbp + 0xb48], rax 	       942	easy.c	FUNCTION_21	IF_5	CALL_5
0x4000905	     0xf847efeffff	                            je 0x4000789	       946	easy.c	FUNCTION_21	IF_5	IF_6
0x400090b	    0x498bbd380b00	           mov rdi, qword [r13 + 0xb38] 	       951	easy.c	FUNCTION_21	IF_7
0x4000912	          0x4885ff	                           test rdi, rdi	       951	easy.c	FUNCTION_21	IF_7
0x4000915	            0x7418	                            je 0x400092f	       951	easy.c	FUNCTION_21	IF_7
0x4000917	      0xe800000000	                          call 0x400091c	       953	easy.c	FUNCTION_21	IF_7	CALL_6
0x400091c	          0x4885c0	                           test rax, rax	       954	easy.c	FUNCTION_21	IF_7	IF_8
0x400091f	          0x4889c7	                            mov rdi, rax	       953	easy.c	FUNCTION_21	IF_7	CALL_6
0x4000922	    0x488985380b00	           mov qword [rbp + 0xb38], rax 	       952	easy.c	FUNCTION_21	IF_7
0x4000929	     0xf8461feffff	                            je 0x4000790	       954	easy.c	FUNCTION_21	IF_7	IF_8
0x400092f	    0x498bbd180b00	           mov rdi, qword [r13 + 0xb18] 	       958	easy.c	FUNCTION_21	IF_9
0x4000936	          0x4885ff	                           test rdi, rdi	       958	easy.c	FUNCTION_21	IF_9
0x4000939	            0x741d	                            je 0x4000958	       958	easy.c	FUNCTION_21	IF_9
0x400093b	    0xff1500000000	                 call qword [0x04000941]	       959	easy.c	FUNCTION_21	IF_9	CALL_7
0x4000941	          0x4885c0	                           test rax, rax	       960	easy.c	FUNCTION_21	IF_9	IF_10
0x4000944	    0x488985180b00	           mov qword [rbp + 0xb18], rax 	       959	easy.c	FUNCTION_21	IF_9	CALL_7
0x400094b	     0xf8438feffff	                            je 0x4000789	       960	easy.c	FUNCTION_21	IF_9	IF_10
0x4000951	    0xc685200b0000	               mov byte [rbp + 0xb20], 1	       962	easy.c	FUNCTION_21	IF_9
0x4000958	    0x498bbd280b00	           mov rdi, qword [r13 + 0xb28] 	       965	easy.c	FUNCTION_21	IF_11
0x400095f	          0x4885ff	                           test rdi, rdi	       965	easy.c	FUNCTION_21	IF_11
0x4000962	            0x741d	                            je 0x4000981	       965	easy.c	FUNCTION_21	IF_11
0x4000964	    0xff1500000000	                 call qword [0x0400096a]	       966	easy.c	FUNCTION_21	IF_11	CALL_8
0x400096a	          0x4885c0	                           test rax, rax	       967	easy.c	FUNCTION_21	IF_11	IF_12
0x400096d	    0x488985280b00	           mov qword [rbp + 0xb28], rax 	       966	easy.c	FUNCTION_21	IF_11	CALL_8
0x4000974	     0xf840ffeffff	                            je 0x4000789	       967	easy.c	FUNCTION_21	IF_11	IF_12
0x400097a	    0xc685300b0000	               mov byte [rbp + 0xb30], 1	       969	easy.c	FUNCTION_21	IF_11
0x4000981	    0x498bb5984e00	          mov rsi, qword [r13 + 0x4e98] 	       973	easy.c	FUNCTION_21	IF_13	CALL_9
0x4000988	    0x488dbd984e00	                 lea rdi, [rbp + 0x4e98]	       973	easy.c	FUNCTION_21	IF_13	CALL_9
0x400098f	      0xe800000000	                          call 0x4000994	       973	easy.c	FUNCTION_21	IF_13	CALL_9
0x4000994	            0x85c0	                           test eax, eax	       973	easy.c	FUNCTION_21	IF_13	CALL_9
0x4000996	     0xf85edfdffff	                           jne 0x4000789	       973	easy.c	FUNCTION_21	IF_13	CALL_9
0x400099c	          0x4889ef	                            mov rdi, rbp	       979	easy.c	FUNCTION_21	CALL_11
0x400099f	          0x4989ec	                            mov r12, rbp	       985	easy.c	FUNCTION_21
0x40009a2	      0xe800000000	                          call 0x40009a7	       979	easy.c	FUNCTION_21	CALL_11
0x40009a7	    0xc785d0520000	    mov dword [rbp + 0x52d0], 0xc0dedbad	       981	easy.c	FUNCTION_21
0x40009b1	      0xe95efeffff	                           jmp 0x4000814	       985	easy.c	FUNCTION_21
curl_easy_pause	FOR,2:SWITCH,0:DO,0:functions,0:ELSE,0:WHILE,0:IF,6:CALL,4	100
0x4000af0	            0x4157	                                push r15	      1049	easy.c	FUNCTION_23
0x4000af2	            0x4156	                                push r14	      1049	easy.c	FUNCTION_23
0x4000af4	      0xba10000000	                           mov edx, 0x10	      1057	easy.c	FUNCTION_23
0x4000af9	            0x4155	                                push r13	      1049	easy.c	FUNCTION_23
0x4000afb	            0x4154	                                push r12	      1049	easy.c	FUNCTION_23
0x4000afd	          0x4989fc	                            mov r12, rdi	      1049	easy.c	FUNCTION_23
0x4000b00	              0x55	                                push rbp	      1049	easy.c	FUNCTION_23
0x4000b01	              0x53	                                push rbx	      1049	easy.c	FUNCTION_23
0x4000b02	            0x89f3	                            mov ebx, esi	      1057	easy.c	FUNCTION_23
0x4000b04	        0x4883ec68	                           sub rsp, 0x68	      1049	easy.c	FUNCTION_23
0x4000b08	    0x64488b042528	                mov rax, qword fs:[0x28]	      1049	easy.c	FUNCTION_23
0x4000b11	      0x4889442458	             mov qword [rsp + 0x58], rax	      1049	easy.c	FUNCTION_23
0x4000b16	            0x31c0	                            xor eax, eax	      1049	easy.c	FUNCTION_23
0x4000b18	    0x8b87b4010000	           mov eax, dword [rdi + 0x1b4] 	      1054	easy.c	FUNCTION_23
0x4000b1e	          0x83e0cf	                     and eax, 0xffffffcf	      1054	easy.c	FUNCTION_23
0x4000b21	          0x83e301	                              and ebx, 1	      1057	easy.c	FUNCTION_23
0x4000b24	           0xf45da	                         cmovne ebx, edx	      1057	easy.c	FUNCTION_23
0x4000b27	          0x83e604	                              and esi, 4	      1058	easy.c	FUNCTION_23
0x4000b2a	      0xba20000000	                           mov edx, 0x20	      1058	easy.c	FUNCTION_23
0x4000b2f	           0xf45f2	                         cmovne esi, edx	      1058	easy.c	FUNCTION_23
0x4000b32	             0x9c3	                             or ebx, eax	      1058	easy.c	FUNCTION_23
0x4000b34	             0x9f3	                             or ebx, esi	      1057	easy.c	FUNCTION_23
0x4000b36	          0xf6c310	                           test bl, 0x10	      1063	easy.c	FUNCTION_23	IF_1
0x4000b39	    0x899fb4010000	            mov dword [rdi + 0x1b4], ebx	      1061	easy.c	FUNCTION_23
0x4000b3f	     0xf85bb000000	                           jne 0x4000c00	      1063	easy.c	FUNCTION_23	IF_1
0x4000b45	    0x8b87604d0000	          mov eax, dword [rdi + 0x4d60] 	      1063	easy.c	FUNCTION_23	IF_1
0x4000b4b	            0x85c0	                           test eax, eax	      1063	easy.c	FUNCTION_23	IF_1
0x4000b4d	     0xf84ad000000	                            je 0x4000c00	      1063	easy.c	FUNCTION_23	IF_1
0x4000b53	          0x83e801	                              sub eax, 1	      1063	easy.c	FUNCTION_23	IF_1
0x4000b56	        0x4c8b6f10	            mov r13, qword [rdi + 0x10] 	      1069	easy.c	FUNCTION_23	IF_1
0x4000b5a	      0x488d6c2410	                   lea rbp, [rsp + 0x10]	      1069	easy.c	FUNCTION_23	IF_1
0x4000b5f	      0x4c8d7c4003	              lea r15, [rax + rax*2 + 3]	      1069	easy.c	FUNCTION_23	IF_1
0x4000b64	            0x31c0	                            xor eax, eax	      1069	easy.c	FUNCTION_23	IF_1
0x4000b66	        0x49c1e703	                              shl r15, 3	      1069	easy.c	FUNCTION_23	IF_1
0x4000b6a	    0x498b9404684d	    mov rdx, qword [r12 + rax + 0x4d68] 	      1074	easy.c	FUNCTION_23	IF_1	FOR_1
0x4000b72	    0x49c78404684d	      mov qword [r12 + rax + 0x4d68], 0 	      1075	easy.c	FUNCTION_23	IF_1	FOR_1
0x4000b7e	        0x48891428	              mov qword [rax + rbp], rdx	      1074	easy.c	FUNCTION_23	IF_1	FOR_1
0x4000b82	    0x498b9404704d	    mov rdx, qword [r12 + rax + 0x4d70] 	      1074	easy.c	FUNCTION_23	IF_1	FOR_1
0x4000b8a	      0x4889542808	          mov qword [rax + rbp + 8], rdx	      1074	easy.c	FUNCTION_23	IF_1	FOR_1
0x4000b8f	    0x498b9404784d	    mov rdx, qword [r12 + rax + 0x4d78] 	      1074	easy.c	FUNCTION_23	IF_1	FOR_1
0x4000b97	        0x4883c018	                           add rax, 0x18	      1074	easy.c	FUNCTION_23	IF_1	FOR_1
0x4000b9b	      0x48895428f8	          mov qword [rax + rbp - 8], rdx	      1074	easy.c	FUNCTION_23	IF_1	FOR_1
0x4000ba0	          0x4c39f8	                            cmp rax, r15	      1073	easy.c	FUNCTION_23	IF_1	FOR_1
0x4000ba3	            0x75c5	                           jne 0x4000b6a	      1073	easy.c	FUNCTION_23	IF_1	FOR_1
0x4000ba5	        0x4d8b7500	                    mov r14, qword [r13]	      1080	easy.c	FUNCTION_23	IF_1	IF_2
0x4000ba9	    0x41c78424604d	            mov dword [r12 + 0x4d60], 0 	      1077	easy.c	FUNCTION_23	IF_1
0x4000bb5	          0x4d39f4	                            cmp r12, r14	      1080	easy.c	FUNCTION_23	IF_1	IF_2
0x4000bb8	     0xf84aa000000	                            je 0x4000c68	      1080	easy.c	FUNCTION_23	IF_1	IF_2
0x4000bbe	        0x4d896500	                    mov qword [r13], r12	      1082	easy.c	FUNCTION_23	IF_1	IF_2
0x4000bc2	          0x4901ef	                            add r15, rbp	      1082	easy.c	FUNCTION_23	IF_1	IF_2
0x4000bc5	            0x31c0	                            xor eax, eax	      1069	easy.c	FUNCTION_23	IF_1
0x4000bc7	            0x85c0	                           test eax, eax	      1088	easy.c	FUNCTION_23	IF_1	FOR_2	IF_3
0x4000bc9	        0x4c8b4500	                     mov r8, qword [rbp]	      1089	easy.c	FUNCTION_23	IF_1	FOR_2	IF_3	CALL_1
0x4000bcd	            0x7471	                            je 0x4000c40	      1088	easy.c	FUNCTION_23	IF_1	FOR_2	IF_3
0x4000bcf	        0x4883c518	                           add rbp, 0x18	      1088	easy.c	FUNCTION_23	IF_1	FOR_2	IF_3
0x4000bd3	        0x89442408	                mov dword [rsp + 8], eax	      1088	easy.c	FUNCTION_23	IF_1	FOR_2	IF_3
0x4000bd7	          0x4c89c7	                             mov rdi, r8	      1091	easy.c	FUNCTION_23	IF_1	FOR_2	CALL_2
0x4000bda	    0xff1500000000	                 call qword [0x04000be0]	      1091	easy.c	FUNCTION_23	IF_1	FOR_2	CALL_2
0x4000be0	          0x4939ef	                            cmp r15, rbp	      1085	easy.c	FUNCTION_23	IF_1	FOR_2
0x4000be3	        0x8b442408	                mov eax, dword [rsp + 8]	      1085	easy.c	FUNCTION_23	IF_1	FOR_2
0x4000be7	            0x75de	                           jne 0x4000bc7	      1085	easy.c	FUNCTION_23	IF_1	FOR_2
0x4000be9	          0x4d85f6	                           test r14, r14	      1095	easy.c	FUNCTION_23	IF_1	IF_4
0x4000bec	            0x7404	                            je 0x4000bf2	      1095	easy.c	FUNCTION_23	IF_1	IF_4
0x4000bee	        0x4d897500	                    mov qword [r13], r14	      1096	easy.c	FUNCTION_23	IF_1	IF_4
0x4000bf2	            0x85c0	                           test eax, eax	      1098	easy.c	FUNCTION_23	IF_1	IF_5
0x4000bf4	            0x752b	                           jne 0x4000c21	      1098	easy.c	FUNCTION_23	IF_1	IF_5
0x4000bf6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1098	easy.c	FUNCTION_23	IF_1	IF_5
0x4000c00	          0x83e330	                           and ebx, 0x30	      1104	easy.c	FUNCTION_23	IF_6
0x4000c03	          0x83fb30	                           cmp ebx, 0x30	      1104	easy.c	FUNCTION_23	IF_6
0x4000c06	            0x740f	                            je 0x4000c17	      1104	easy.c	FUNCTION_23	IF_6
0x4000c08	      0xba06000000	                              mov edx, 6	      1107	easy.c	FUNCTION_23	CALL_3
0x4000c0d	            0x31f6	                            xor esi, esi	      1107	easy.c	FUNCTION_23	CALL_3
0x4000c0f	          0x4c89e7	                            mov rdi, r12	      1107	easy.c	FUNCTION_23	CALL_3
0x4000c12	      0xe800000000	                          call 0x4000c17	      1107	easy.c	FUNCTION_23	CALL_3
0x4000c17	          0x4c89e7	                            mov rdi, r12	      1111	easy.c	FUNCTION_23	CALL_4
0x4000c1a	      0xe800000000	                          call 0x4000c1f	      1111	easy.c	FUNCTION_23	CALL_4
0x4000c1f	            0x31c0	                            xor eax, eax	      1113	easy.c	FUNCTION_23
0x4000c21	      0x488b4c2458	            mov rcx, qword [rsp + 0x58] 	      1114	easy.c	FUNCTION_23
0x4000c26	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1114	easy.c	FUNCTION_23
0x4000c2f	            0x753f	                           jne 0x4000c70	      1114	easy.c	FUNCTION_23
0x4000c31	        0x4883c468	                           add rsp, 0x68	      1114	easy.c	FUNCTION_23
0x4000c35	              0x5b	                                 pop rbx	      1114	easy.c	FUNCTION_23
0x4000c36	              0x5d	                                 pop rbp	      1114	easy.c	FUNCTION_23
0x4000c37	            0x415c	                                 pop r12	      1114	easy.c	FUNCTION_23
0x4000c39	            0x415d	                                 pop r13	      1114	easy.c	FUNCTION_23
0x4000c3b	            0x415e	                                 pop r14	      1114	easy.c	FUNCTION_23
0x4000c3d	            0x415f	                                 pop r15	      1114	easy.c	FUNCTION_23
0x4000c3f	              0xc3	                                     ret	      1114	easy.c	FUNCTION_23
0x4000c40	        0x488b4d08	                mov rcx, qword [rbp + 8]	      1089	easy.c	FUNCTION_23	IF_1	FOR_2	IF_3	CALL_1
0x4000c44	          0x8b7510	            mov esi, dword [rbp + 0x10] 	      1089	easy.c	FUNCTION_23	IF_1	FOR_2	IF_3	CALL_1
0x4000c47	          0x4c89c2	                             mov rdx, r8	      1089	easy.c	FUNCTION_23	IF_1	FOR_2	IF_3	CALL_1
0x4000c4a	          0x4c89ef	                            mov rdi, r13	      1089	easy.c	FUNCTION_23	IF_1	FOR_2	IF_3	CALL_1
0x4000c4d	      0x4c89442408	                 mov qword [rsp + 8], r8	      1089	easy.c	FUNCTION_23	IF_1	FOR_2	IF_3	CALL_1
0x4000c52	      0xe800000000	                          call 0x4000c57	      1089	easy.c	FUNCTION_23	IF_1	FOR_2	IF_3	CALL_1
0x4000c57	      0x4c8b442408	                 mov r8, qword [rsp + 8]	      1089	easy.c	FUNCTION_23	IF_1	FOR_2	IF_3	CALL_1
0x4000c5c	      0xe96effffff	                           jmp 0x4000bcf	      1089	easy.c	FUNCTION_23	IF_1	FOR_2	IF_3	CALL_1
0x4000c61	     0xf1f80000000	                         nop dword [rax]	      1089	easy.c	FUNCTION_23	IF_1	FOR_2	IF_3	CALL_1
0x4000c68	          0x4531f6	                          xor r14d, r14d	      1070	easy.c	FUNCTION_23	IF_1
0x4000c6b	      0xe952ffffff	                           jmp 0x4000bc2	      1070	easy.c	FUNCTION_23	IF_1
0x4000c70	      0xe800000000	                          call 0x4000c75	      1114	easy.c	FUNCTION_23
curl_global_init	FOR,0:SWITCH,0:DO,0:functions,0:ELSE,0:WHILE,0:IF,0:CALL,1	2
0x40001e0	      0xbe01000000	                              mov esi, 1	       283	easy.c	FUNCTION_4	CALL_1
0x40001e5	      0xe956feffff	                     jmp sym.global_init	       283	easy.c	FUNCTION_4	CALL_1
