curlx_nonblock	ELSE,0:FOR,0:CALL,7:functions,0:IF,1:SWITCH,0:WHILE,0:DO,0	23
0x4000040	              0x55	                                push rbp	        49	nonblock.c	FUNCTION_1
0x4000041	              0x53	                                push rbx	        49	nonblock.c	FUNCTION_1
0x4000042	            0x89f5	                            mov ebp, esi	        49	nonblock.c	FUNCTION_1
0x4000044	            0x31d2	                            xor edx, edx	        58	nonblock.c	FUNCTION_1	CALL_1
0x4000046	            0x31c0	                            xor eax, eax	        58	nonblock.c	FUNCTION_1	CALL_1
0x4000048	      0xbe03000000	                              mov esi, 3	        58	nonblock.c	FUNCTION_1	CALL_1
0x400004d	        0x4883ec08	                              sub rsp, 8	        49	nonblock.c	FUNCTION_1
0x4000051	            0x89fb	                            mov ebx, edi	        49	nonblock.c	FUNCTION_1
0x4000053	      0xe800000000	                          call 0x4000058	        58	nonblock.c	FUNCTION_1	CALL_1
0x4000058	            0x85ed	                           test ebp, ebp	        59	nonblock.c	FUNCTION_1	IF_1
0x400005a	            0x751c	                           jne 0x4000078	        59	nonblock.c	FUNCTION_1	IF_1
0x400005c	          0x80e4f7	                            and ah, 0xf7	        61	nonblock.c	FUNCTION_1	CALL_3
0x400005f	        0x4883c408	                              add rsp, 8	        90	nonblock.c	FUNCTION_1
0x4000063	            0x89df	                            mov edi, ebx	        61	nonblock.c	FUNCTION_1	CALL_3
0x4000065	            0x89c2	                            mov edx, eax	        61	nonblock.c	FUNCTION_1	CALL_3
0x4000067	              0x5b	                                 pop rbx	        90	nonblock.c	FUNCTION_1
0x4000068	              0x5d	                                 pop rbp	        90	nonblock.c	FUNCTION_1
0x4000069	      0xbe04000000	                              mov esi, 4	        61	nonblock.c	FUNCTION_1	CALL_3
0x400006e	            0x31c0	                            xor eax, eax	        61	nonblock.c	FUNCTION_1	CALL_3
0x4000070	      0xe900000000	                           jmp 0x4000075	        61	nonblock.c	FUNCTION_1	CALL_3
0x4000075	           0xf1f00	                         nop dword [rax]	        61	nonblock.c	FUNCTION_1	CALL_3
0x4000078	          0x80cc08	                                or ah, 8	        60	nonblock.c	FUNCTION_1	CALL_2
0x400007b	            0xebe2	                           jmp 0x400005f	        60	nonblock.c	FUNCTION_1	CALL_2
