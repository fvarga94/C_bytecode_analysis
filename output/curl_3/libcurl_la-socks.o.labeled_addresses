Curl_SOCKS4	DO,0:ELSE,2:WHILE,0:SWITCH,1:FOR,0:functions,0:CALL,32:IF,18	370
0x4000130	            0x4157	                                push r15	       113	socks.c	FUNCTION_2
0x4000132	            0x4156	                                push r14	       113	socks.c	FUNCTION_2
0x4000134	          0x4863c9	                         movsxd rcx, ecx	       121	socks.c	FUNCTION_2
0x4000137	            0x4155	                                push r13	       113	socks.c	FUNCTION_2
0x4000139	            0x4154	                                push r12	       113	socks.c	FUNCTION_2
0x400013b	          0x4989fe	                            mov r14, rdi	       113	socks.c	FUNCTION_2
0x400013e	              0x55	                                push rbp	       113	socks.c	FUNCTION_2
0x400013f	              0x53	                                push rbx	       113	socks.c	FUNCTION_2
0x4000140	          0x4989f5	                            mov r13, rsi	       113	socks.c	FUNCTION_2
0x4000143	          0x4189d4	                           mov r12d, edx	       113	socks.c	FUNCTION_2
0x4000146	            0x31f6	                            xor esi, esi	       124	socks.c	FUNCTION_2	IF_1	CALL_1
0x4000148	      0xba01000000	                              mov edx, 1	       124	socks.c	FUNCTION_2	IF_1	CALL_1
0x400014d	    0x4881ec880100	                          sub rsp, 0x188	       113	socks.c	FUNCTION_2
0x4000154	          0x498b28	                     mov rbp, qword [r8]	       122	socks.c	FUNCTION_2
0x4000157	          0x4c89c3	                             mov rbx, r8	       113	socks.c	FUNCTION_2
0x400015a	    0x64488b042528	                mov rax, qword fs:[0x28]	       113	socks.c	FUNCTION_2
0x4000163	    0x488984247801	            mov qword [rsp + 0x178], rax	       113	socks.c	FUNCTION_2
0x400016b	            0x31c0	                            xor eax, eax	       113	socks.c	FUNCTION_2
0x400016d	    0x418b84885802	    mov eax, dword [r8 + rcx*4 + 0x258] 	       121	socks.c	FUNCTION_2
0x4000175	    0x458bb8380100	           mov r15d, dword [r8 + 0x138] 	       115	socks.c	FUNCTION_2
0x400017c	          0x4889ef	                            mov rdi, rbp	       124	socks.c	FUNCTION_2	IF_1	CALL_1
0x400017f	        0x8944240c	              mov dword [rsp + 0xc], eax	       121	socks.c	FUNCTION_2
0x4000183	      0xe800000000	                          call 0x4000188	       124	socks.c	FUNCTION_2	IF_1	CALL_1
0x4000188	          0x4885c0	                           test rax, rax	       124	socks.c	FUNCTION_2	IF_1	CALL_1
0x400018b	     0xf883f020000	                            js 0x40003d0	       124	socks.c	FUNCTION_2	IF_1	CALL_1
0x4000191	    0x80bb9e030000	               cmp byte [rbx + 0x39e], 0	       130	socks.c	FUNCTION_2	IF_2
0x4000198	            0x742d	                            je 0x40001c7	       130	socks.c	FUNCTION_2	IF_2
0x400019a	    0x488d05000000	                   lea rax, [0x040001a1]	       131	socks.c	FUNCTION_2	IF_2	CALL_3
0x40001a1	    0x488d15000000	                   lea rdx, [0x040001a8]	       131	socks.c	FUNCTION_2	IF_2	CALL_3
0x40001a8	          0x488b3b	                    mov rdi, qword [rbx]	       131	socks.c	FUNCTION_2	IF_2	CALL_3
0x40001ab	        0x4183ff06	                             cmp r15d, 6	       131	socks.c	FUNCTION_2	IF_2	CALL_3
0x40001af	    0x488d35000000	                   lea rsi, [0x040001b6]	       131	socks.c	FUNCTION_2	IF_2	CALL_3
0x40001b6	          0x4589e0	                           mov r8d, r12d	       131	socks.c	FUNCTION_2	IF_2	CALL_3
0x40001b9	        0x480f45d0	                         cmovne rdx, rax	       131	socks.c	FUNCTION_2	IF_2	CALL_3
0x40001bd	          0x4c89e9	                            mov rcx, r13	       131	socks.c	FUNCTION_2	IF_2	CALL_3
0x40001c0	            0x31c0	                            xor eax, eax	       131	socks.c	FUNCTION_2	IF_2	CALL_3
0x40001c2	      0xe800000000	                          call 0x40001c7	       131	socks.c	FUNCTION_2	IF_2	CALL_3
0x40001c7	        0x8b7c240c	              mov edi, dword [rsp + 0xc]	       134	socks.c	FUNCTION_2	CALL_4
0x40001cb	            0x31f6	                            xor esi, esi	       134	socks.c	FUNCTION_2	CALL_4
0x40001cd	      0xe800000000	                          call 0x40001d2	       134	socks.c	FUNCTION_2	CALL_4
0x40001d2	    0x488d35000000	                   lea rsi, [0x040001d9]	       136	socks.c	FUNCTION_2	CALL_5
0x40001d9	            0x31c0	                            xor eax, eax	       136	socks.c	FUNCTION_2	CALL_5
0x40001db	          0x4489e1	                           mov ecx, r12d	       136	socks.c	FUNCTION_2	CALL_5
0x40001de	          0x4c89ea	                            mov rdx, r13	       136	socks.c	FUNCTION_2	CALL_5
0x40001e1	          0x4889ef	                            mov rdi, rbp	       136	socks.c	FUNCTION_2	CALL_5
0x40001e4	      0xe800000000	                          call 0x40001e9	       136	socks.c	FUNCTION_2	CALL_5
0x40001e9	          0x4489e0	                           mov eax, r12d	       151	socks.c	FUNCTION_2
0x40001ec	      0xc644247004	                mov byte [rsp + 0x70], 4	       149	socks.c	FUNCTION_2
0x40001f1	      0xc644247101	                mov byte [rsp + 0x71], 1	       150	socks.c	FUNCTION_2
0x40001f6	          0xc1f808	                              sar eax, 8	       151	socks.c	FUNCTION_2
0x40001f9	        0x4183ff06	                             cmp r15d, 6	       155	socks.c	FUNCTION_2	IF_3
0x40001fd	      0x4488642473	             mov byte [rsp + 0x73], r12b	       152	socks.c	FUNCTION_2
0x4000202	        0x88442472	               mov byte [rsp + 0x72], al	       151	socks.c	FUNCTION_2
0x4000206	     0xf84ac000000	                            je 0x40002b8	       155	socks.c	FUNCTION_2	IF_3
0x400020c	      0x488d442428	                   lea rax, [rsp + 0x28]	       160	socks.c	FUNCTION_2	IF_3	CALL_6
0x4000211	          0x4489e2	                           mov edx, r12d	       160	socks.c	FUNCTION_2	IF_3	CALL_6
0x4000214	          0x4c89ee	                            mov rsi, r13	       160	socks.c	FUNCTION_2	IF_3	CALL_6
0x4000217	          0x4889df	                            mov rdi, rbx	       160	socks.c	FUNCTION_2	IF_3	CALL_6
0x400021a	          0x4889c1	                            mov rcx, rax	       160	socks.c	FUNCTION_2	IF_3	CALL_6
0x400021d	      0x4889442410	             mov qword [rsp + 0x10], rax	       160	socks.c	FUNCTION_2	IF_3	CALL_6
0x4000222	      0xe800000000	                          call 0x4000227	       160	socks.c	FUNCTION_2	IF_3	CALL_6
0x4000227	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       162	socks.c	FUNCTION_2	IF_3	IF_4
0x400022a	     0xf84a8020000	                            je 0x40004d8	       162	socks.c	FUNCTION_2	IF_3	IF_4
0x4000230	          0x83f801	                              cmp eax, 1	       165	socks.c	FUNCTION_2	IF_3	IF_5
0x4000233	     0xf8437030000	                            je 0x4000570	       165	socks.c	FUNCTION_2	IF_3	IF_5
0x4000239	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       173	socks.c	FUNCTION_2	IF_3	IF_6
0x400023e	          0x4885c0	                           test rax, rax	       173	socks.c	FUNCTION_2	IF_3	IF_6
0x4000241	            0x7454	                            je 0x4000297	       173	socks.c	FUNCTION_2	IF_3	IF_6
0x4000243	          0x4c8b20	                    mov r12, qword [rax]	       174	socks.c	FUNCTION_2	IF_3	IF_6
0x4000246	          0x4d85e4	                           test r12, r12	       175	socks.c	FUNCTION_2	IF_3	IF_7
0x4000249	            0x744c	                            je 0x4000297	       175	socks.c	FUNCTION_2	IF_3	IF_7
0x400024b	      0x488d4c2430	                   lea rcx, [rsp + 0x30]	       177	socks.c	FUNCTION_2	IF_3	IF_7	CALL_8
0x4000250	      0xba40000000	                           mov edx, 0x40	       177	socks.c	FUNCTION_2	IF_3	IF_7	CALL_8
0x4000255	          0x4c89e7	                            mov rdi, r12	       177	socks.c	FUNCTION_2	IF_3	IF_7	CALL_8
0x4000258	          0x4889ce	                            mov rsi, rcx	       177	socks.c	FUNCTION_2	IF_3	IF_7	CALL_8
0x400025b	      0x48894c2418	             mov qword [rsp + 0x18], rcx	       177	socks.c	FUNCTION_2	IF_3	IF_7	CALL_8
0x4000260	      0xe800000000	                          call 0x4000265	       177	socks.c	FUNCTION_2	IF_3	IF_7	CALL_8
0x4000265	    0x41837c240402	                  cmp dword [r12 + 4], 2	       179	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x400026b	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       179	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x4000270	     0xf84aa000000	                            je 0x4000320	       179	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x4000276	    0x488d35000000	                   lea rsi, [0x0400027d]	       193	socks.c	FUNCTION_2	IF_3	IF_7	ELSE_1	CALL_10
0x400027d	          0x4889ef	                            mov rdi, rbp	       193	socks.c	FUNCTION_2	IF_3	IF_7	ELSE_1	CALL_10
0x4000280	          0x4889ca	                            mov rdx, rcx	       193	socks.c	FUNCTION_2	IF_3	IF_7	ELSE_1	CALL_10
0x4000283	            0x31c0	                            xor eax, eax	       193	socks.c	FUNCTION_2	IF_3	IF_7	ELSE_1	CALL_10
0x4000285	      0xe800000000	                          call 0x400028a	       193	socks.c	FUNCTION_2	IF_3	IF_7	ELSE_1	CALL_10
0x400028a	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	       196	socks.c	FUNCTION_2	IF_3	IF_7	CALL_11
0x400028f	          0x4889ef	                            mov rdi, rbp	       196	socks.c	FUNCTION_2	IF_3	IF_7	CALL_11
0x4000292	      0xe800000000	                          call 0x4000297	       196	socks.c	FUNCTION_2	IF_3	IF_7	CALL_11
0x4000297	    0x488d35000000	                   lea rsi, [0x0400029e]	       199	socks.c	FUNCTION_2	IF_3	IF_9	CALL_12
0x400029e	            0x31c0	                            xor eax, eax	       199	socks.c	FUNCTION_2	IF_3	IF_9	CALL_12
0x40002a0	          0x4c89ea	                            mov rdx, r13	       199	socks.c	FUNCTION_2	IF_3	IF_9	CALL_12
0x40002a3	          0x4889ef	                            mov rdi, rbp	       199	socks.c	FUNCTION_2	IF_3	IF_9	CALL_12
0x40002a6	      0xe800000000	                          call 0x40002ab	       199	socks.c	FUNCTION_2	IF_3	IF_9	CALL_12
0x40002ab	      0xb806000000	                              mov eax, 6	       201	socks.c	FUNCTION_2	IF_3	IF_9
0x40002b0	            0xeb3e	                           jmp 0x40002f0	       201	socks.c	FUNCTION_2	IF_3	IF_9
0x40002b2	    0x660f1f440000	                    nop word [rax + rax]	       201	socks.c	FUNCTION_2	IF_3	IF_9
0x40002b8	          0x4d85f6	                           test r14, r14	       209	socks.c	FUNCTION_2	IF_10
0x40002bb	      0xc644247800	                mov byte [rsp + 0x78], 0	       208	socks.c	FUNCTION_2
0x40002c0	     0xf846a010000	                            je 0x4000430	       209	socks.c	FUNCTION_2	IF_10
0x40002c6	          0x4c89f7	                            mov rdi, r14	       210	socks.c	FUNCTION_2	IF_10	CALL_13
0x40002c9	      0xe800000000	                          call 0x40002ce	       210	socks.c	FUNCTION_2	IF_10	CALL_13
0x40002ce	    0x483dfd000000	                           cmp rax, 0xfd	       211	socks.c	FUNCTION_2	IF_10	IF_11
0x40002d4	     0xf8616010000	                           jbe 0x40003f0	       211	socks.c	FUNCTION_2	IF_10	IF_11
0x40002da	    0x488d35000000	                   lea rsi, [0x040002e1]	       212	socks.c	FUNCTION_2	IF_10	IF_11	CALL_14
0x40002e1	            0x31c0	                            xor eax, eax	       212	socks.c	FUNCTION_2	IF_10	IF_11	CALL_14
0x40002e3	          0x4889ef	                            mov rdi, rbp	       212	socks.c	FUNCTION_2	IF_10	IF_11	CALL_14
0x40002e6	      0xe800000000	                          call 0x40002eb	       212	socks.c	FUNCTION_2	IF_10	IF_11	CALL_14
0x40002eb	      0xb807000000	                              mov eax, 7	       213	socks.c	FUNCTION_2	IF_10	IF_11
0x40002f0	    0x488b9c247801	           mov rbx, qword [rsp + 0x178] 	       347	socks.c	FUNCTION_2
0x40002f8	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       347	socks.c	FUNCTION_2
0x4000301	     0xf852b030000	                           jne 0x4000632	       347	socks.c	FUNCTION_2
0x4000307	    0x4881c4880100	                          add rsp, 0x188	       347	socks.c	FUNCTION_2
0x400030e	              0x5b	                                 pop rbx	       347	socks.c	FUNCTION_2
0x400030f	              0x5d	                                 pop rbp	       347	socks.c	FUNCTION_2
0x4000310	            0x415c	                                 pop r12	       347	socks.c	FUNCTION_2
0x4000312	            0x415d	                                 pop r13	       347	socks.c	FUNCTION_2
0x4000314	            0x415e	                                 pop r14	       347	socks.c	FUNCTION_2
0x4000316	            0x415f	                                 pop r15	       347	socks.c	FUNCTION_2
0x4000318	              0xc3	                                     ret	       347	socks.c	FUNCTION_2
0x4000319	     0xf1f80000000	                         nop dword [rax]	       347	socks.c	FUNCTION_2
0x4000320	      0x498b442420	            mov rax, qword [r12 + 0x20] 	       182	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x4000325	    0x488d35000000	                   lea rsi, [0x0400032c]	       188	socks.c	FUNCTION_2	IF_3	IF_7	IF_8	CALL_9
0x400032c	          0x4889ef	                            mov rdi, rbp	       188	socks.c	FUNCTION_2	IF_3	IF_7	IF_8	CALL_9
0x400032f	      0x4c8d642470	                   lea r12, [rsp + 0x70]	       188	socks.c	FUNCTION_2	IF_3	IF_7	IF_8	CALL_9
0x4000334	         0xfb65004	               movzx edx, byte [rax + 4]	       183	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x4000338	        0x88542474	               mov byte [rsp + 0x74], dl	       183	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x400033c	         0xfb65005	               movzx edx, byte [rax + 5]	       184	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x4000340	        0x88542475	               mov byte [rsp + 0x75], dl	       184	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x4000344	         0xfb65006	               movzx edx, byte [rax + 6]	       185	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x4000348	        0x88542476	               mov byte [rsp + 0x76], dl	       185	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x400034c	         0xfb64007	               movzx eax, byte [rax + 7]	       186	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x4000350	          0x4889ca	                            mov rdx, rcx	       188	socks.c	FUNCTION_2	IF_3	IF_7	IF_8	CALL_9
0x4000353	        0x88442477	               mov byte [rsp + 0x77], al	       186	socks.c	FUNCTION_2	IF_3	IF_7	IF_8
0x4000357	            0x31c0	                            xor eax, eax	       188	socks.c	FUNCTION_2	IF_3	IF_7	IF_8	CALL_9
0x4000359	      0xe800000000	                          call 0x400035e	       188	socks.c	FUNCTION_2	IF_3	IF_7	IF_8	CALL_9
0x400035e	      0x488b742428	            mov rsi, qword [rsp + 0x28] 	       196	socks.c	FUNCTION_2	IF_3	IF_7	CALL_11
0x4000363	          0x4889ef	                            mov rdi, rbp	       196	socks.c	FUNCTION_2	IF_3	IF_7	CALL_11
0x4000366	      0xe800000000	                          call 0x400036b	       196	socks.c	FUNCTION_2	IF_3	IF_7	CALL_11
0x400036b	          0x4d85f6	                           test r14, r14	       209	socks.c	FUNCTION_2	IF_10
0x400036e	      0xc644247800	                mov byte [rsp + 0x78], 0	       208	socks.c	FUNCTION_2
0x4000373	    0x41b809000000	                              mov r8d, 9	       226	socks.c	FUNCTION_2
0x4000379	     0xf8547ffffff	                           jne 0x40002c6	       209	socks.c	FUNCTION_2	IF_10
0x400037f	              0x90	                                     nop	       209	socks.c	FUNCTION_2	IF_10
0x4000380	          0x4d63f0	                         movsxd r14, r8d	       209	socks.c	FUNCTION_2	IF_10
0x4000383	    0x48c744241800	               mov qword [rsp + 0x18], 0	       225	socks.c	FUNCTION_2
0x400038c	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	       244	socks.c	FUNCTION_2	CALL_19
0x4000391	        0x8b74240c	              mov esi, dword [rsp + 0xc]	       244	socks.c	FUNCTION_2	CALL_19
0x4000395	          0x4c89f1	                            mov rcx, r14	       244	socks.c	FUNCTION_2	CALL_19
0x4000398	          0x4c89e2	                            mov rdx, r12	       244	socks.c	FUNCTION_2	CALL_19
0x400039b	          0x4889df	                            mov rdi, rbx	       244	socks.c	FUNCTION_2	CALL_19
0x400039e	      0xe800000000	                          call 0x40003a3	       244	socks.c	FUNCTION_2	CALL_19
0x40003a3	            0x85c0	                           test eax, eax	       247	socks.c	FUNCTION_2	IF_14
0x40003a5	            0x750b	                           jne 0x40003b2	       247	socks.c	FUNCTION_2	IF_14
0x40003a7	      0x4c39742428	            cmp qword [rsp + 0x28], r14 	       247	socks.c	FUNCTION_2	IF_14
0x40003ac	     0xf8436010000	                            je 0x40004e8	       247	socks.c	FUNCTION_2	IF_14
0x40003b2	    0x488d35000000	                   lea rsi, [0x040003b9]	       257	socks.c	FUNCTION_2	IF_15	IF_16	CALL_23
0x40003b9	          0x4889ef	                            mov rdi, rbp	       257	socks.c	FUNCTION_2	IF_15	IF_16	CALL_23
0x40003bc	            0x31c0	                            xor eax, eax	       257	socks.c	FUNCTION_2	IF_15	IF_16	CALL_23
0x40003be	      0xe800000000	                          call 0x40003c3	       257	socks.c	FUNCTION_2	IF_15	IF_16	CALL_23
0x40003c3	      0xb807000000	                              mov eax, 7	       249	socks.c	FUNCTION_2	IF_14
0x40003c8	      0xe923ffffff	                           jmp 0x40002f0	       249	socks.c	FUNCTION_2	IF_14
0x40003cd	           0xf1f00	                         nop dword [rax]	       249	socks.c	FUNCTION_2	IF_14
0x40003d0	    0x488d35000000	                   lea rsi, [0x040003d7]	       126	socks.c	FUNCTION_2	IF_1	CALL_2
0x40003d7	            0x31c0	                            xor eax, eax	       126	socks.c	FUNCTION_2	IF_1	CALL_2
0x40003d9	          0x4889ef	                            mov rdi, rbp	       126	socks.c	FUNCTION_2	IF_1	CALL_2
0x40003dc	      0xe800000000	                          call 0x40003e1	       126	socks.c	FUNCTION_2	IF_1	CALL_2
0x40003e1	      0xb81c000000	                           mov eax, 0x1c	       127	socks.c	FUNCTION_2	IF_1
0x40003e6	      0xe905ffffff	                           jmp 0x40002f0	       127	socks.c	FUNCTION_2	IF_1
0x40003eb	       0xf1f440000	                   nop dword [rax + rax]	       127	socks.c	FUNCTION_2	IF_1
0x40003f0	      0x4c8d642470	                   lea r12, [rsp + 0x70]	        53	string3.h	FUNCTION_4	CALL_3
0x40003f5	        0x488d5001	                      lea rdx, [rax + 1]	        53	string3.h	FUNCTION_4	CALL_3
0x40003f9	      0xb9fe000000	                           mov ecx, 0xfe	        53	string3.h	FUNCTION_4	CALL_3
0x40003fe	          0x4c89f6	                            mov rsi, r14	        53	string3.h	FUNCTION_4	CALL_3
0x4000401	      0x4889442410	             mov qword [rsp + 0x10], rax	        53	string3.h	FUNCTION_4	CALL_3
0x4000406	      0x498d7c2408	                      lea rdi, [r12 + 8]	        53	string3.h	FUNCTION_4	CALL_3
0x400040b	      0xe800000000	                          call 0x4000410	        53	string3.h	FUNCTION_4	CALL_3
0x4000410	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	       226	socks.c	FUNCTION_2
0x4000415	        0x4183c009	                              add r8d, 9	       226	socks.c	FUNCTION_2
0x4000419	        0x4183ff06	                             cmp r15d, 6	       230	socks.c	FUNCTION_2	IF_12
0x400041d	            0x745b	                            je 0x400047a	       230	socks.c	FUNCTION_2	IF_12
0x400041f	      0x488d442428	                   lea rax, [rsp + 0x28]	       230	socks.c	FUNCTION_2	IF_12
0x4000424	      0x4889442410	             mov qword [rsp + 0x10], rax	       230	socks.c	FUNCTION_2	IF_12
0x4000429	      0xe952ffffff	                           jmp 0x4000380	       230	socks.c	FUNCTION_2	IF_12
0x400042e	            0x6690	                                     nop	       230	socks.c	FUNCTION_2	IF_12
0x4000430	      0x4c8d642470	                   lea r12, [rsp + 0x70]	       227	socks.c	FUNCTION_2	CALL_16
0x4000435	      0x498d4c2408	                      lea rcx, [r12 + 8]	       227	socks.c	FUNCTION_2	CALL_16
0x400043a	          0x4989c8	                             mov r8, rcx	       227	socks.c	FUNCTION_2	CALL_16
0x400043d	          0x418b10	                     mov edx, dword [r8]	       227	socks.c	FUNCTION_2	CALL_16
0x4000440	        0x4983c004	                               add r8, 4	       227	socks.c	FUNCTION_2	CALL_16
0x4000444	    0x8d82fffefefe	              lea eax, [rdx - 0x1010101]	       227	socks.c	FUNCTION_2	CALL_16
0x400044a	            0xf7d2	                                 not edx	       227	socks.c	FUNCTION_2	CALL_16
0x400044c	            0x21d0	                            and eax, edx	       227	socks.c	FUNCTION_2	CALL_16
0x400044e	      0x2580808080	                     and eax, 0x80808080	       227	socks.c	FUNCTION_2	CALL_16
0x4000453	            0x74e8	                            je 0x400043d	       227	socks.c	FUNCTION_2	CALL_16
0x4000455	            0x89c2	                            mov edx, eax	       227	socks.c	FUNCTION_2	CALL_16
0x4000457	          0xc1ea10	                           shr edx, 0x10	       227	socks.c	FUNCTION_2	CALL_16
0x400045a	      0xa980800000	                        test eax, 0x8080	       227	socks.c	FUNCTION_2	CALL_16
0x400045f	           0xf44c2	                          cmove eax, edx	       227	socks.c	FUNCTION_2	CALL_16
0x4000462	        0x498d5002	                       lea rdx, [r8 + 2]	       227	socks.c	FUNCTION_2	CALL_16
0x4000466	            0x89c6	                            mov esi, eax	       227	socks.c	FUNCTION_2	CALL_16
0x4000468	        0x4c0f44c2	                           cmove r8, rdx	       227	socks.c	FUNCTION_2	CALL_16
0x400046c	          0x4000c6	                             add sil, al	       227	socks.c	FUNCTION_2	CALL_16
0x400046f	        0x4983d803	                               sbb r8, 3	       227	socks.c	FUNCTION_2	CALL_16
0x4000473	          0x4929c8	                             sub r8, rcx	       227	socks.c	FUNCTION_2	CALL_16
0x4000476	        0x4183c009	                              add r8d, 9	       226	socks.c	FUNCTION_2
0x400047a	          0x4c89ef	                            mov rdi, r13	       236	socks.c	FUNCTION_2	IF_12	CALL_17
0x400047d	      0x4489442410	             mov dword [rsp + 0x10], r8d	       236	socks.c	FUNCTION_2	IF_12	CALL_17
0x4000482	      0xc644247400	                mov byte [rsp + 0x74], 0	       231	socks.c	FUNCTION_2	IF_12
0x4000487	      0xc644247500	                mov byte [rsp + 0x75], 0	       232	socks.c	FUNCTION_2	IF_12
0x400048c	      0xc644247600	                mov byte [rsp + 0x76], 0	       233	socks.c	FUNCTION_2	IF_12
0x4000491	      0xc644247701	                mov byte [rsp + 0x77], 1	       234	socks.c	FUNCTION_2	IF_12
0x4000496	      0xe800000000	                          call 0x400049b	       236	socks.c	FUNCTION_2	IF_12	CALL_17
0x400049b	      0x4c63742410	         movsxd r14, dword [rsp + 0x10] 	       237	socks.c	FUNCTION_2	IF_12	IF_13
0x40004a0	        0x4883c001	                              add rax, 1	       236	socks.c	FUNCTION_2	IF_12	CALL_17
0x40004a4	      0x4889442418	             mov qword [rsp + 0x18], rax	       236	socks.c	FUNCTION_2	IF_12	CALL_17
0x40004a9	        0x4a8d0c30	                    lea rcx, [rax + r14]	       237	socks.c	FUNCTION_2	IF_12	IF_13
0x40004ad	    0x4881f9060100	                          cmp rcx, 0x106	       237	socks.c	FUNCTION_2	IF_12	IF_13
0x40004b4	     0xf8ece000000	                           jle 0x4000588	       237	socks.c	FUNCTION_2	IF_12	IF_13
0x40004ba	      0x488d442428	                   lea rax, [rsp + 0x28]	       237	socks.c	FUNCTION_2	IF_12	IF_13
0x40004bf	    0x48c744241800	               mov qword [rsp + 0x18], 0	       240	socks.c	FUNCTION_2	IF_12	ELSE_2
0x40004c8	      0x4889442410	             mov qword [rsp + 0x10], rax	       240	socks.c	FUNCTION_2	IF_12	ELSE_2
0x40004cd	      0xe9bafeffff	                           jmp 0x400038c	       240	socks.c	FUNCTION_2	IF_12	ELSE_2
0x40004d2	    0x660f1f440000	                    nop word [rax + rax]	       240	socks.c	FUNCTION_2	IF_12	ELSE_2
0x40004d8	      0xb805000000	                              mov eax, 5	       163	socks.c	FUNCTION_2	IF_3	IF_4
0x40004dd	      0xe90efeffff	                           jmp 0x40002f0	       163	socks.c	FUNCTION_2	IF_3	IF_4
0x40004e2	    0x660f1f440000	                    nop word [rax + rax]	       163	socks.c	FUNCTION_2	IF_3	IF_4
0x40004e8	        0x4183ff06	                             cmp r15d, 6	       251	socks.c	FUNCTION_2	IF_15
0x40004ec	            0x7542	                           jne 0x4000530	       251	socks.c	FUNCTION_2	IF_15
0x40004ee	    0x48837c241800	               cmp qword [rsp + 0x18], 0	       251	socks.c	FUNCTION_2	IF_15
0x40004f4	            0x753a	                           jne 0x4000530	       251	socks.c	FUNCTION_2	IF_15
0x40004f6	          0x4c89ef	                            mov rdi, r13	       253	socks.c	FUNCTION_2	IF_15	CALL_21
0x40004f9	      0xe800000000	                          call 0x40004fe	       253	socks.c	FUNCTION_2	IF_15	CALL_21
0x40004fe	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	       254	socks.c	FUNCTION_2	IF_15	CALL_22
0x4000503	        0x4c8d7001	                      lea r14, [rax + 1]	       253	socks.c	FUNCTION_2	IF_15	CALL_21
0x4000507	        0x8b74240c	              mov esi, dword [rsp + 0xc]	       254	socks.c	FUNCTION_2	IF_15	CALL_22
0x400050b	          0x4c89ea	                            mov rdx, r13	       254	socks.c	FUNCTION_2	IF_15	CALL_22
0x400050e	          0x4889df	                            mov rdi, rbx	       254	socks.c	FUNCTION_2	IF_15	CALL_22
0x4000511	          0x4c89f1	                            mov rcx, r14	       254	socks.c	FUNCTION_2	IF_15	CALL_22
0x4000514	      0xe800000000	                          call 0x4000519	       254	socks.c	FUNCTION_2	IF_15	CALL_22
0x4000519	            0x85c0	                           test eax, eax	       256	socks.c	FUNCTION_2	IF_15	IF_16
0x400051b	     0xf8591feffff	                           jne 0x40003b2	       256	socks.c	FUNCTION_2	IF_15	IF_16
0x4000521	      0x4c3b742428	            cmp r14, qword [rsp + 0x28] 	       256	socks.c	FUNCTION_2	IF_15	IF_16
0x4000526	     0xf8586feffff	                           jne 0x40003b2	       256	socks.c	FUNCTION_2	IF_15	IF_16
0x400052c	         0xf1f4000	                         nop dword [rax]	       256	socks.c	FUNCTION_2	IF_15	IF_16
0x4000530	        0x8b74240c	              mov esi, dword [rsp + 0xc]	       265	socks.c	FUNCTION_2	CALL_24
0x4000534	      0x4c8d442420	                    lea r8, [rsp + 0x20]	       265	socks.c	FUNCTION_2	CALL_24
0x4000539	      0xb908000000	                              mov ecx, 8	       265	socks.c	FUNCTION_2	CALL_24
0x400053e	          0x4c89e2	                            mov rdx, r12	       265	socks.c	FUNCTION_2	CALL_24
0x4000541	          0x4889df	                            mov rdi, rbx	       265	socks.c	FUNCTION_2	CALL_24
0x4000544	      0xe800000000	                          call 0x4000549	       265	socks.c	FUNCTION_2	CALL_24
0x4000549	            0x85c0	                           test eax, eax	       267	socks.c	FUNCTION_2	IF_17
0x400054b	            0x7508	                           jne 0x4000555	       267	socks.c	FUNCTION_2	IF_17
0x400054d	    0x48837c242008	               cmp qword [rsp + 0x20], 8	       267	socks.c	FUNCTION_2	IF_17
0x4000553	            0x745e	                            je 0x40005b3	       267	socks.c	FUNCTION_2	IF_17
0x4000555	    0x488d35000000	                   lea rsi, [0x0400055c]	       268	socks.c	FUNCTION_2	IF_17	CALL_25
0x400055c	          0x4889ef	                            mov rdi, rbp	       268	socks.c	FUNCTION_2	IF_17	CALL_25
0x400055f	            0x31c0	                            xor eax, eax	       268	socks.c	FUNCTION_2	IF_17	CALL_25
0x4000561	      0xe800000000	                          call 0x4000566	       268	socks.c	FUNCTION_2	IF_17	CALL_25
0x4000566	      0xe958feffff	                           jmp 0x40003c3	       269	socks.c	FUNCTION_2	IF_17
0x400056b	       0xf1f440000	                   nop dword [rax + rax]	       269	socks.c	FUNCTION_2	IF_17
0x4000570	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       167	socks.c	FUNCTION_2	IF_3	CALL_7
0x4000575	          0x4889df	                            mov rdi, rbx	       167	socks.c	FUNCTION_2	IF_3	CALL_7
0x4000578	      0xe800000000	                          call 0x400057d	       167	socks.c	FUNCTION_2	IF_3	CALL_7
0x400057d	      0xe9b7fcffff	                           jmp 0x4000239	       167	socks.c	FUNCTION_2	IF_3	CALL_7
0x4000582	    0x660f1f440000	                    nop word [rax + rax]	       167	socks.c	FUNCTION_2	IF_3	CALL_7
0x4000588	        0x4b8d3c34	                    lea rdi, [r12 + r14]	       110	string3.h	FUNCTION_10	CALL_3
0x400058c	          0x4889c2	                            mov rdx, rax	       110	string3.h	FUNCTION_10	CALL_3
0x400058f	          0x4c89ee	                            mov rsi, r13	       110	string3.h	FUNCTION_10	CALL_3
0x4000592	      0x48894c2410	             mov qword [rsp + 0x10], rcx	       110	string3.h	FUNCTION_10	CALL_3
0x4000597	      0xe800000000	                          call 0x400059c	       110	string3.h	FUNCTION_10	CALL_3
0x400059c	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       110	string3.h	FUNCTION_10	CALL_3
0x40005a1	      0x488d442428	                   lea rax, [rsp + 0x28]	       110	string3.h	FUNCTION_10	CALL_3
0x40005a6	      0x4889442410	             mov qword [rsp + 0x10], rax	       110	string3.h	FUNCTION_10	CALL_3
0x40005ab	          0x4989ce	                            mov r14, rcx	       110	string3.h	FUNCTION_10	CALL_3
0x40005ae	      0xe9d9fdffff	                           jmp 0x400038c	       110	string3.h	FUNCTION_10	CALL_3
0x40005b3	      0x807c247000	                cmp byte [rsp + 0x70], 0	       292	socks.c	FUNCTION_2	IF_18
0x40005b8	            0x7562	                           jne 0x400061c	       292	socks.c	FUNCTION_2	IF_18
0x40005ba	       0xfb6442471	           movzx eax, byte [rsp + 0x71] 	       299	socks.c	FUNCTION_2	SWITCH_1
0x40005bf	            0x3c5b	                            cmp al, 0x5b	       299	socks.c	FUNCTION_2	SWITCH_1
0x40005c1	     0xf84b4000000	                            je 0x400067b	       299	socks.c	FUNCTION_2	SWITCH_1
0x40005c7	            0x766e	                           jbe 0x4000637	       299	socks.c	FUNCTION_2	SWITCH_1
0x40005c9	            0x3c5c	                            cmp al, 0x5c	       299	socks.c	FUNCTION_2	SWITCH_1
0x40005cb	     0xf8431010000	                            je 0x4000702	       299	socks.c	FUNCTION_2	SWITCH_1
0x40005d1	            0x3c5d	                            cmp al, 0x5d	       299	socks.c	FUNCTION_2	SWITCH_1
0x40005d3	     0xf85e7000000	                           jne 0x40006c0	       299	socks.c	FUNCTION_2	SWITCH_1
0x40005d9	       0xfb64c2475	           movzx ecx, byte [rsp + 0x75] 	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x40005de	       0xfb6542474	           movzx edx, byte [rsp + 0x74] 	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x40005e3	    0x488d35000000	                   lea rsi, [0x040005ea]	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x40005ea	            0x6a5d	                               push 0x5d	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x40005ec	       0xfb744247a	           movzx eax, word [rsp + 0x7a] 	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x40005f1	          0x4889ef	                            mov rdi, rbp	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x40005f4	        0x66c1c008	                               rol ax, 8	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x40005f8	           0xfb7c0	                           movzx eax, ax	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x40005fb	              0x50	                                push rax	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x40005fc	    0x440fb68c2487	           movzx r9d, byte [rsp + 0x87] 	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x4000605	            0x31c0	                            xor eax, eax	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x4000607	    0x440fb6842486	           movzx r8d, byte [rsp + 0x86] 	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x4000610	      0xe800000000	                          call 0x4000615	       323	socks.c	FUNCTION_2	SWITCH_1	CALL_30
0x4000615	              0x59	                                 pop rcx	       331	socks.c	FUNCTION_2	SWITCH_1
0x4000616	              0x5e	                                 pop rsi	       331	socks.c	FUNCTION_2	SWITCH_1
0x4000617	      0xe9a7fdffff	                           jmp 0x40003c3	       331	socks.c	FUNCTION_2	SWITCH_1
0x400061c	    0x488d35000000	                   lea rsi, [0x04000623]	       293	socks.c	FUNCTION_2	IF_18	CALL_26
0x4000623	          0x4889ef	                            mov rdi, rbp	       293	socks.c	FUNCTION_2	IF_18	CALL_26
0x4000626	            0x31c0	                            xor eax, eax	       293	socks.c	FUNCTION_2	IF_18	CALL_26
0x4000628	      0xe800000000	                          call 0x400062d	       293	socks.c	FUNCTION_2	IF_18	CALL_26
0x400062d	      0xe991fdffff	                           jmp 0x40003c3	       295	socks.c	FUNCTION_2	IF_18
0x4000632	      0xe800000000	                          call 0x4000637	       347	socks.c	FUNCTION_2
0x4000637	            0x3c5a	                            cmp al, 0x5a	       299	socks.c	FUNCTION_2	SWITCH_1
0x4000639	     0xf8581000000	                           jne 0x40006c0	       299	socks.c	FUNCTION_2	SWITCH_1
0x400063f	    0x488d05000000	                   lea rax, [0x04000646]	       301	socks.c	FUNCTION_2	SWITCH_1	CALL_27
0x4000646	    0x488d15000000	                   lea rdx, [0x0400064d]	       301	socks.c	FUNCTION_2	SWITCH_1	CALL_27
0x400064d	        0x4183ff06	                             cmp r15d, 6	       301	socks.c	FUNCTION_2	SWITCH_1	CALL_27
0x4000651	    0x488d35000000	                   lea rsi, [0x04000658]	       301	socks.c	FUNCTION_2	SWITCH_1	CALL_27
0x4000658	          0x4889ef	                            mov rdi, rbp	       301	socks.c	FUNCTION_2	SWITCH_1	CALL_27
0x400065b	        0x480f45d0	                         cmovne rdx, rax	       301	socks.c	FUNCTION_2	SWITCH_1	CALL_27
0x400065f	            0x31c0	                            xor eax, eax	       301	socks.c	FUNCTION_2	SWITCH_1	CALL_27
0x4000661	      0xe800000000	                          call 0x4000666	       301	socks.c	FUNCTION_2	SWITCH_1	CALL_27
0x4000666	        0x8b7c240c	              mov edi, dword [rsp + 0xc]	       344	socks.c	FUNCTION_2	CALL_32
0x400066a	      0xbe01000000	                              mov esi, 1	       344	socks.c	FUNCTION_2	CALL_32
0x400066f	      0xe800000000	                          call 0x4000674	       344	socks.c	FUNCTION_2	CALL_32
0x4000674	            0x31c0	                            xor eax, eax	       346	socks.c	FUNCTION_2
0x4000676	      0xe975fcffff	                           jmp 0x40002f0	       346	socks.c	FUNCTION_2
0x400067b	       0xfb64c2475	           movzx ecx, byte [rsp + 0x75] 	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x4000680	       0xfb6542474	           movzx edx, byte [rsp + 0x74] 	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x4000685	    0x488d35000000	                   lea rsi, [0x0400068c]	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x400068c	            0x6a5b	                               push 0x5b	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x400068e	       0xfb744247a	           movzx eax, word [rsp + 0x7a] 	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x4000693	          0x4889ef	                            mov rdi, rbp	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x4000696	        0x66c1c008	                               rol ax, 8	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x400069a	           0xfb7c0	                           movzx eax, ax	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x400069d	              0x50	                                push rax	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x400069e	    0x440fb68c2487	           movzx r9d, byte [rsp + 0x87] 	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x40006a7	            0x31c0	                            xor eax, eax	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x40006a9	    0x440fb6842486	           movzx r8d, byte [rsp + 0x86] 	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x40006b2	      0xe800000000	                          call 0x40006b7	       304	socks.c	FUNCTION_2	SWITCH_1	CALL_28
0x40006b7	            0x4159	                                  pop r9	       311	socks.c	FUNCTION_2	SWITCH_1
0x40006b9	            0x415a	                                 pop r10	       311	socks.c	FUNCTION_2	SWITCH_1
0x40006bb	      0xe903fdffff	                           jmp 0x40003c3	       311	socks.c	FUNCTION_2	SWITCH_1
0x40006c0	       0xfb64c2475	           movzx ecx, byte [rsp + 0x75] 	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x40006c5	       0xfb6542474	           movzx edx, byte [rsp + 0x74] 	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x40006ca	    0x488d35000000	                   lea rsi, [0x040006d1]	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x40006d1	              0x50	                                push rax	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x40006d2	       0xfb744247a	           movzx eax, word [rsp + 0x7a] 	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x40006d7	          0x4889ef	                            mov rdi, rbp	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x40006da	        0x66c1c008	                               rol ax, 8	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x40006de	           0xfb7c0	                           movzx eax, ax	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x40006e1	              0x50	                                push rax	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x40006e2	    0x440fb68c2487	           movzx r9d, byte [rsp + 0x87] 	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x40006eb	            0x31c0	                            xor eax, eax	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x40006ed	    0x440fb6842486	           movzx r8d, byte [rsp + 0x86] 	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x40006f6	      0xe800000000	                          call 0x40006fb	       333	socks.c	FUNCTION_2	SWITCH_1	CALL_31
0x40006fb	              0x58	                                 pop rax	       340	socks.c	FUNCTION_2	SWITCH_1
0x40006fc	              0x5a	                                 pop rdx	       340	socks.c	FUNCTION_2	SWITCH_1
0x40006fd	      0xe9c1fcffff	                           jmp 0x40003c3	       340	socks.c	FUNCTION_2	SWITCH_1
0x4000702	       0xfb64c2475	           movzx ecx, byte [rsp + 0x75] 	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x4000707	       0xfb6542474	           movzx edx, byte [rsp + 0x74] 	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x400070c	    0x488d35000000	                   lea rsi, [0x04000713]	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x4000713	            0x6a5c	                               push 0x5c	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x4000715	       0xfb744247a	           movzx eax, word [rsp + 0x7a] 	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x400071a	          0x4889ef	                            mov rdi, rbp	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x400071d	        0x66c1c008	                               rol ax, 8	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x4000721	           0xfb7c0	                           movzx eax, ax	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x4000724	              0x50	                                push rax	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x4000725	    0x440fb68c2487	           movzx r9d, byte [rsp + 0x87] 	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x400072e	            0x31c0	                            xor eax, eax	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x4000730	    0x440fb6842486	           movzx r8d, byte [rsp + 0x86] 	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x4000739	      0xe800000000	                          call 0x400073e	       313	socks.c	FUNCTION_2	SWITCH_1	CALL_29
0x400073e	              0x5f	                                 pop rdi	       321	socks.c	FUNCTION_2	SWITCH_1
0x400073f	            0x4158	                                  pop r8	       321	socks.c	FUNCTION_2	SWITCH_1
0x4000741	      0xe97dfcffff	                           jmp 0x40003c3	       321	socks.c	FUNCTION_2	SWITCH_1
Curl_SOCKS5	DO,0:ELSE,14:WHILE,0:SWITCH,0:FOR,2:functions,0:CALL,62:IF,53	620
0x4000750	            0x4157	                                push r15	       359	socks.c	FUNCTION_3
0x4000752	            0x4156	                                push r14	       359	socks.c	FUNCTION_3
0x4000754	          0x4d63c0	                          movsxd r8, r8d	       383	socks.c	FUNCTION_3
0x4000757	            0x4155	                                push r13	       359	socks.c	FUNCTION_3
0x4000759	            0x4154	                                push r12	       359	socks.c	FUNCTION_3
0x400075b	          0x4989d5	                            mov r13, rdx	       359	socks.c	FUNCTION_3
0x400075e	              0x55	                                push rbp	       359	socks.c	FUNCTION_3
0x400075f	              0x53	                                push rbx	       359	socks.c	FUNCTION_3
0x4000760	          0x4c89cb	                             mov rbx, r9	       359	socks.c	FUNCTION_3
0x4000763	    0x4881ec080300	                          sub rsp, 0x308	       359	socks.c	FUNCTION_3
0x400076a	          0x498b29	                     mov rbp, qword [r9]	       384	socks.c	FUNCTION_3
0x400076d	    0x478bb4815802	    mov r14d, dword [r9 + r8*4 + 0x258] 	       383	socks.c	FUNCTION_3
0x4000775	      0x48897c2410	             mov qword [rsp + 0x10], rdi	       359	socks.c	FUNCTION_3
0x400077a	          0x4889d7	                            mov rdi, rdx	       388	socks.c	FUNCTION_3	CALL_1
0x400077d	      0x4889742418	             mov qword [rsp + 0x18], rsi	       359	socks.c	FUNCTION_3
0x4000782	    0x64488b042528	                mov rax, qword fs:[0x28]	       359	socks.c	FUNCTION_3
0x400078b	    0x48898424f802	            mov qword [rsp + 0x2f8], rax	       359	socks.c	FUNCTION_3
0x4000793	            0x31c0	                            xor eax, eax	       359	socks.c	FUNCTION_3
0x4000795	        0x894c2420	             mov dword [rsp + 0x20], ecx	       359	socks.c	FUNCTION_3
0x4000799	    0x458ba1380100	           mov r12d, dword [r9 + 0x138] 	       387	socks.c	FUNCTION_3
0x40007a0	      0xe800000000	                          call 0x40007a5	       388	socks.c	FUNCTION_3	CALL_1
0x40007a5	    0x80bb9e030000	               cmp byte [rbx + 0x39e], 0	       393	socks.c	FUNCTION_3	IF_1
0x40007ac	          0x4989c7	                            mov r15, rax	       388	socks.c	FUNCTION_3	CALL_1
0x40007af	    0x488b85480200	           mov rax, qword [rbp + 0x248] 	       390	socks.c	FUNCTION_3
0x40007b6	      0x4889442408	                mov qword [rsp + 8], rax	       390	socks.c	FUNCTION_3
0x40007bb	     0xf85b7010000	                           jne 0x4000978	       393	socks.c	FUNCTION_3	IF_1
0x40007c1	        0x4183fc05	                             cmp r12d, 5	       398	socks.c	FUNCTION_3	IF_2
0x40007c5	            0x740d	                            je 0x40007d4	       398	socks.c	FUNCTION_3	IF_2
0x40007c7	    0x4981ffff0000	                           cmp r15, 0xff	       398	socks.c	FUNCTION_3	IF_2
0x40007ce	     0xf8734010000	                            ja 0x4000908	       398	socks.c	FUNCTION_3	IF_2
0x40007d4	        0x4183fc05	                             cmp r12d, 5	       386	socks.c	FUNCTION_3
0x40007d8	       0xf94442427	                  sete byte [rsp + 0x27]	       386	socks.c	FUNCTION_3
0x40007dd	            0x31f6	                            xor esi, esi	       405	socks.c	FUNCTION_3	CALL_4
0x40007df	      0xba01000000	                              mov edx, 1	       405	socks.c	FUNCTION_3	CALL_4
0x40007e4	          0x4889ef	                            mov rdi, rbp	       405	socks.c	FUNCTION_3	CALL_4
0x40007e7	      0xe800000000	                          call 0x40007ec	       405	socks.c	FUNCTION_3	CALL_4
0x40007ec	          0x4885c0	                           test rax, rax	       407	socks.c	FUNCTION_3	IF_3
0x40007ef	          0x4989c4	                            mov r12, rax	       405	socks.c	FUNCTION_3	CALL_4
0x40007f2	     0xf8838010000	                            js 0x4000930	       407	socks.c	FUNCTION_3	IF_3
0x40007f8	      0xbe01000000	                              mov esi, 1	       413	socks.c	FUNCTION_3	CALL_6
0x40007fd	          0x4489f7	                           mov edi, r14d	       413	socks.c	FUNCTION_3	CALL_6
0x4000800	      0xe800000000	                          call 0x4000805	       413	socks.c	FUNCTION_3	CALL_6
0x4000805	      0xbeffffffff	                     mov esi, 0xffffffff	       416	socks.c	FUNCTION_3	CALL_7
0x400080a	          0x4c89e1	                            mov rcx, r12	       416	socks.c	FUNCTION_3	CALL_7
0x400080d	          0x4489f2	                           mov edx, r14d	       416	socks.c	FUNCTION_3	CALL_7
0x4000810	            0x89f7	                            mov edi, esi	       416	socks.c	FUNCTION_3	CALL_7
0x4000812	      0xe800000000	                          call 0x4000817	       416	socks.c	FUNCTION_3	CALL_7
0x4000817	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       418	socks.c	FUNCTION_3	IF_4
0x400081a	     0xf8478010000	                            je 0x4000998	       418	socks.c	FUNCTION_3	IF_4
0x4000820	            0x85c0	                           test eax, eax	       422	socks.c	FUNCTION_3	IF_5
0x4000822	     0xf84b0010000	                            je 0x40009d8	       422	socks.c	FUNCTION_3	IF_5
0x4000828	            0xa804	                              test al, 4	       427	socks.c	FUNCTION_3	IF_6
0x400082a	     0xf8588010000	                           jne 0x40009b8	       427	socks.c	FUNCTION_3	IF_6
0x4000830	    0x48f7442408fa	test qword [rsp + 8], 0xfffffffffffffffa	       432	socks.c	FUNCTION_3	IF_7
0x4000839	     0xf85d1010000	                           jne 0x4000a10	       432	socks.c	FUNCTION_3	IF_7
0x400083f	      0xf644240801	                  test byte [rsp + 8], 1	       436	socks.c	FUNCTION_3	IF_8
0x4000844	    0xc68424a00000	                mov byte [rsp + 0xa0], 5	       445	socks.c	FUNCTION_3
0x400084c	    0xc68424a20000	                mov byte [rsp + 0xa2], 0	       447	socks.c	FUNCTION_3
0x4000854	     0xf849e010000	                            je 0x40009f8	       436	socks.c	FUNCTION_3	IF_8
0x400085a	    0x48837c241000	               cmp qword [rsp + 0x10], 0	       450	socks.c	FUNCTION_3	IF_11
0x4000860	     0xf84bd020000	                            je 0x4000b23	       450	socks.c	FUNCTION_3	IF_11
0x4000866	    0xc68424a30000	                mov byte [rsp + 0xa3], 2	       451	socks.c	FUNCTION_3	IF_11
0x400086e	      0xb802000000	                              mov eax, 2	       451	socks.c	FUNCTION_3	IF_11
0x4000873	            0x31f6	                            xor esi, esi	       455	socks.c	FUNCTION_3	CALL_12
0x4000875	          0x4489f7	                           mov edi, r14d	       455	socks.c	FUNCTION_3	CALL_12
0x4000878	    0x888424a10000	               mov byte [rsp + 0xa1], al	       453	socks.c	FUNCTION_3
0x400087f	      0xe800000000	                          call 0x4000884	       455	socks.c	FUNCTION_3	CALL_12
0x4000884	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	       457	socks.c	FUNCTION_3	CALL_13
0x4000888	    0x488d35000000	                   lea rsi, [0x0400088f]	       457	socks.c	FUNCTION_3	CALL_13
0x400088f	            0x31c0	                            xor eax, eax	       457	socks.c	FUNCTION_3	CALL_13
0x4000891	          0x4c89ea	                            mov rdx, r13	       457	socks.c	FUNCTION_3	CALL_13
0x4000894	          0x4889ef	                            mov rdi, rbp	       457	socks.c	FUNCTION_3	CALL_13
0x4000897	      0xe800000000	                          call 0x400089c	       457	socks.c	FUNCTION_3	CALL_13
0x400089c	      0x488d442450	                   lea rax, [rsp + 0x50]	       459	socks.c	FUNCTION_3	CALL_14
0x40008a1	          0x4489f6	                           mov esi, r14d	       459	socks.c	FUNCTION_3	CALL_14
0x40008a4	          0x4889df	                            mov rdi, rbx	       459	socks.c	FUNCTION_3	CALL_14
0x40008a7	          0x4989c0	                             mov r8, rax	       459	socks.c	FUNCTION_3	CALL_14
0x40008aa	      0x4889442428	             mov qword [rsp + 0x28], rax	       459	socks.c	FUNCTION_3	CALL_14
0x40008af	     0xfb68424a100	           movzx eax, byte [rsp + 0xa1] 	       459	socks.c	FUNCTION_3	CALL_14
0x40008b7	        0x488d4802	                      lea rcx, [rax + 2]	       459	socks.c	FUNCTION_3	CALL_14
0x40008bb	    0x488d8424a000	                   lea rax, [rsp + 0xa0]	       459	socks.c	FUNCTION_3	CALL_14
0x40008c3	          0x4889c2	                            mov rdx, rax	       459	socks.c	FUNCTION_3	CALL_14
0x40008c6	      0x4889442408	                mov qword [rsp + 8], rax	       459	socks.c	FUNCTION_3	CALL_14
0x40008cb	      0xe800000000	                          call 0x40008d0	       459	socks.c	FUNCTION_3	CALL_14
0x40008d0	            0x85c0	                           test eax, eax	       461	socks.c	FUNCTION_3	IF_12
0x40008d2	            0x7517	                           jne 0x40008eb	       461	socks.c	FUNCTION_3	IF_12
0x40008d4	     0xfb68424a100	           movzx eax, byte [rsp + 0xa1] 	       461	socks.c	FUNCTION_3	IF_12
0x40008dc	        0x4883c002	                              add rax, 2	       461	socks.c	FUNCTION_3	IF_12
0x40008e0	      0x483b442450	            cmp rax, qword [rsp + 0x50] 	       461	socks.c	FUNCTION_3	IF_12
0x40008e5	     0xf8440010000	                            je 0x4000a2b	       461	socks.c	FUNCTION_3	IF_12
0x40008eb	    0x488d35000000	                   lea rsi, [0x040008f2]	       462	socks.c	FUNCTION_3	IF_12	CALL_15
0x40008f2	          0x4889ef	                            mov rdi, rbp	       462	socks.c	FUNCTION_3	IF_12	CALL_15
0x40008f5	            0x31c0	                            xor eax, eax	       462	socks.c	FUNCTION_3	IF_12	CALL_15
0x40008f7	    0x41bf07000000	                             mov r15d, 7	       463	socks.c	FUNCTION_3	IF_12
0x40008fd	      0xe800000000	                          call 0x4000902	       462	socks.c	FUNCTION_3	IF_12	CALL_15
0x4000902	            0xeb43	                           jmp 0x4000947	       463	socks.c	FUNCTION_3	IF_12
0x4000904	         0xf1f4000	                         nop dword [rax]	       463	socks.c	FUNCTION_3	IF_12
0x4000908	          0x488b3b	                    mov rdi, qword [rbx]	       399	socks.c	FUNCTION_3	IF_2	CALL_3
0x400090b	    0x488d35000000	                   lea rsi, [0x04000912]	       399	socks.c	FUNCTION_3	IF_2	CALL_3
0x4000912	          0x4c89fa	                            mov rdx, r15	       399	socks.c	FUNCTION_3	IF_2	CALL_3
0x4000915	            0x31c0	                            xor eax, eax	       399	socks.c	FUNCTION_3	IF_2	CALL_3
0x4000917	      0xe800000000	                          call 0x400091c	       399	socks.c	FUNCTION_3	IF_2	CALL_3
0x400091c	      0xc644242701	                mov byte [rsp + 0x27], 1	       401	socks.c	FUNCTION_3	IF_2
0x4000921	      0xe9b7feffff	                           jmp 0x40007dd	       401	socks.c	FUNCTION_3	IF_2
0x4000926	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       401	socks.c	FUNCTION_3	IF_2
0x4000930	    0x488d35000000	                   lea rsi, [0x04000937]	       409	socks.c	FUNCTION_3	IF_3	CALL_5
0x4000937	          0x4889ef	                            mov rdi, rbp	       409	socks.c	FUNCTION_3	IF_3	CALL_5
0x400093a	            0x31c0	                            xor eax, eax	       409	socks.c	FUNCTION_3	IF_3	CALL_5
0x400093c	    0x41bf1c000000	                          mov r15d, 0x1c	       410	socks.c	FUNCTION_3	IF_3
0x4000942	      0xe800000000	                          call 0x4000947	       409	socks.c	FUNCTION_3	IF_3	CALL_5
0x4000947	    0x488b8c24f802	           mov rcx, qword [rsp + 0x2f8] 	       789	socks.c	FUNCTION_3
0x400094f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       789	socks.c	FUNCTION_3
0x4000958	          0x4489f8	                           mov eax, r15d	       789	socks.c	FUNCTION_3
0x400095b	     0xf8597010000	                           jne 0x4000af8	       789	socks.c	FUNCTION_3
0x4000961	    0x4881c4080300	                          add rsp, 0x308	       789	socks.c	FUNCTION_3
0x4000968	              0x5b	                                 pop rbx	       789	socks.c	FUNCTION_3
0x4000969	              0x5d	                                 pop rbp	       789	socks.c	FUNCTION_3
0x400096a	            0x415c	                                 pop r12	       789	socks.c	FUNCTION_3
0x400096c	            0x415d	                                 pop r13	       789	socks.c	FUNCTION_3
0x400096e	            0x415e	                                 pop r14	       789	socks.c	FUNCTION_3
0x4000970	            0x415f	                                 pop r15	       789	socks.c	FUNCTION_3
0x4000972	              0xc3	                                     ret	       789	socks.c	FUNCTION_3
0x4000973	       0xf1f440000	                   nop dword [rax + rax]	       789	socks.c	FUNCTION_3
0x4000978	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	       394	socks.c	FUNCTION_3	IF_1	CALL_2
0x400097c	    0x488d35000000	                   lea rsi, [0x04000983]	       394	socks.c	FUNCTION_3	IF_1	CALL_2
0x4000983	          0x4c89ea	                            mov rdx, r13	       394	socks.c	FUNCTION_3	IF_1	CALL_2
0x4000986	          0x4889ef	                            mov rdi, rbp	       394	socks.c	FUNCTION_3	IF_1	CALL_2
0x4000989	            0x31c0	                            xor eax, eax	       394	socks.c	FUNCTION_3	IF_1	CALL_2
0x400098b	      0xe800000000	                          call 0x4000990	       394	socks.c	FUNCTION_3	IF_1	CALL_2
0x4000990	      0xe92cfeffff	                           jmp 0x40007c1	       394	socks.c	FUNCTION_3	IF_1	CALL_2
0x4000995	           0xf1f00	                         nop dword [rax]	       394	socks.c	FUNCTION_3	IF_1	CALL_2
0x4000998	          0x488b3b	                    mov rdi, qword [rbx]	       419	socks.c	FUNCTION_3	IF_4	CALL_8
0x400099b	    0x488d35000000	                   lea rsi, [0x040009a2]	       419	socks.c	FUNCTION_3	IF_4	CALL_8
0x40009a2	            0x31c0	                            xor eax, eax	       419	socks.c	FUNCTION_3	IF_4	CALL_8
0x40009a4	    0x41bf07000000	                             mov r15d, 7	       420	socks.c	FUNCTION_3	IF_4
0x40009aa	      0xe800000000	                          call 0x40009af	       419	socks.c	FUNCTION_3	IF_4	CALL_8
0x40009af	            0xeb96	                           jmp 0x4000947	       420	socks.c	FUNCTION_3	IF_4
0x40009b1	     0xf1f80000000	                         nop dword [rax]	       420	socks.c	FUNCTION_3	IF_4
0x40009b8	          0x488b3b	                    mov rdi, qword [rbx]	       428	socks.c	FUNCTION_3	IF_6	CALL_10
0x40009bb	    0x488d35000000	                   lea rsi, [0x040009c2]	       428	socks.c	FUNCTION_3	IF_6	CALL_10
0x40009c2	            0x31c0	                            xor eax, eax	       428	socks.c	FUNCTION_3	IF_6	CALL_10
0x40009c4	    0x41bf07000000	                             mov r15d, 7	       429	socks.c	FUNCTION_3	IF_6
0x40009ca	      0xe800000000	                          call 0x40009cf	       428	socks.c	FUNCTION_3	IF_6	CALL_10
0x40009cf	      0xe973ffffff	                           jmp 0x4000947	       429	socks.c	FUNCTION_3	IF_6
0x40009d4	         0xf1f4000	                         nop dword [rax]	       429	socks.c	FUNCTION_3	IF_6
0x40009d8	          0x488b3b	                    mov rdi, qword [rbx]	       423	socks.c	FUNCTION_3	IF_5	CALL_9
0x40009db	    0x488d35000000	                   lea rsi, [0x040009e2]	       423	socks.c	FUNCTION_3	IF_5	CALL_9
0x40009e2	    0x41bf1c000000	                          mov r15d, 0x1c	       424	socks.c	FUNCTION_3	IF_5
0x40009e8	      0xe800000000	                          call 0x40009ed	       423	socks.c	FUNCTION_3	IF_5	CALL_9
0x40009ed	      0xe955ffffff	                           jmp 0x4000947	       424	socks.c	FUNCTION_3	IF_5
0x40009f2	    0x660f1f440000	                    nop word [rax + rax]	       424	socks.c	FUNCTION_3	IF_5
0x40009f8	      0xb801000000	                              mov eax, 1	       447	socks.c	FUNCTION_3
0x40009fd	    0x48c744241000	               mov qword [rsp + 0x10], 0	       438	socks.c	FUNCTION_3	IF_8
0x4000a06	      0xe968feffff	                           jmp 0x4000873	       438	socks.c	FUNCTION_3	IF_8
0x4000a0b	       0xf1f440000	                   nop dword [rax + rax]	       438	socks.c	FUNCTION_3	IF_8
0x4000a10	      0x488b542408	                mov rdx, qword [rsp + 8]	       433	socks.c	FUNCTION_3	IF_7	CALL_11
0x4000a15	          0x488b3b	                    mov rdi, qword [rbx]	       433	socks.c	FUNCTION_3	IF_7	CALL_11
0x4000a18	    0x488d35000000	                   lea rsi, [0x04000a1f]	       433	socks.c	FUNCTION_3	IF_7	CALL_11
0x4000a1f	            0x31c0	                            xor eax, eax	       433	socks.c	FUNCTION_3	IF_7	CALL_11
0x4000a21	      0xe800000000	                          call 0x4000a26	       433	socks.c	FUNCTION_3	IF_7	CALL_11
0x4000a26	      0xe914feffff	                           jmp 0x400083f	       433	socks.c	FUNCTION_3	IF_7	CALL_11
0x4000a2b	      0xbe01000000	                              mov esi, 1	       466	socks.c	FUNCTION_3	CALL_16
0x4000a30	          0x4489f7	                           mov edi, r14d	       466	socks.c	FUNCTION_3	CALL_16
0x4000a33	      0xe800000000	                          call 0x4000a38	       466	socks.c	FUNCTION_3	CALL_16
0x4000a38	      0xbaffffffff	                     mov edx, 0xffffffff	       468	socks.c	FUNCTION_3	CALL_17
0x4000a3d	          0x4c89e1	                            mov rcx, r12	       468	socks.c	FUNCTION_3	CALL_17
0x4000a40	          0x4489f7	                           mov edi, r14d	       468	socks.c	FUNCTION_3	CALL_17
0x4000a43	            0x89d6	                            mov esi, edx	       468	socks.c	FUNCTION_3	CALL_17
0x4000a45	      0xe800000000	                          call 0x4000a4a	       468	socks.c	FUNCTION_3	CALL_17
0x4000a4a	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       470	socks.c	FUNCTION_3	IF_13
0x4000a4d	            0x743e	                            je 0x4000a8d	       470	socks.c	FUNCTION_3	IF_13
0x4000a4f	            0x85c0	                           test eax, eax	       474	socks.c	FUNCTION_3	IF_14
0x4000a51	            0x7420	                            je 0x4000a73	       474	socks.c	FUNCTION_3	IF_14
0x4000a53	            0xa804	                              test al, 4	       479	socks.c	FUNCTION_3	IF_15
0x4000a55	            0x7452	                            je 0x4000aa9	       479	socks.c	FUNCTION_3	IF_15
0x4000a57	          0x488b3b	                    mov rdi, qword [rbx]	       480	socks.c	FUNCTION_3	IF_15	CALL_20
0x4000a5a	    0x488d35000000	                   lea rsi, [0x04000a61]	       480	socks.c	FUNCTION_3	IF_15	CALL_20
0x4000a61	            0x31c0	                            xor eax, eax	       480	socks.c	FUNCTION_3	IF_15	CALL_20
0x4000a63	    0x41bf38000000	                          mov r15d, 0x38	       481	socks.c	FUNCTION_3	IF_15
0x4000a69	      0xe800000000	                          call 0x4000a6e	       480	socks.c	FUNCTION_3	IF_15	CALL_20
0x4000a6e	      0xe9d4feffff	                           jmp 0x4000947	       481	socks.c	FUNCTION_3	IF_15
0x4000a73	          0x488b3b	                    mov rdi, qword [rbx]	       475	socks.c	FUNCTION_3	IF_14	CALL_19
0x4000a76	    0x488d35000000	                   lea rsi, [0x04000a7d]	       475	socks.c	FUNCTION_3	IF_14	CALL_19
0x4000a7d	    0x41bf1c000000	                          mov r15d, 0x1c	       476	socks.c	FUNCTION_3	IF_14
0x4000a83	      0xe800000000	                          call 0x4000a88	       475	socks.c	FUNCTION_3	IF_14	CALL_19
0x4000a88	      0xe9bafeffff	                           jmp 0x4000947	       476	socks.c	FUNCTION_3	IF_14
0x4000a8d	          0x488b3b	                    mov rdi, qword [rbx]	       471	socks.c	FUNCTION_3	IF_13	CALL_18
0x4000a90	    0x488d35000000	                   lea rsi, [0x04000a97]	       471	socks.c	FUNCTION_3	IF_13	CALL_18
0x4000a97	            0x31c0	                            xor eax, eax	       471	socks.c	FUNCTION_3	IF_13	CALL_18
0x4000a99	    0x41bf07000000	                             mov r15d, 7	       472	socks.c	FUNCTION_3	IF_13
0x4000a9f	      0xe800000000	                          call 0x4000aa4	       471	socks.c	FUNCTION_3	IF_13	CALL_18
0x4000aa4	      0xe99efeffff	                           jmp 0x4000947	       472	socks.c	FUNCTION_3	IF_13
0x4000aa9	            0x31f6	                            xor esi, esi	       484	socks.c	FUNCTION_3	CALL_21
0x4000aab	          0x4489f7	                           mov edi, r14d	       484	socks.c	FUNCTION_3	CALL_21
0x4000aae	      0x4c8d642448	                   lea r12, [rsp + 0x48]	       486	socks.c	FUNCTION_3	CALL_22
0x4000ab3	      0xe800000000	                          call 0x4000ab8	       484	socks.c	FUNCTION_3	CALL_21
0x4000ab8	      0x488b542408	                mov rdx, qword [rsp + 8]	       486	socks.c	FUNCTION_3	CALL_22
0x4000abd	          0x4d89e0	                             mov r8, r12	       486	socks.c	FUNCTION_3	CALL_22
0x4000ac0	      0xb902000000	                              mov ecx, 2	       486	socks.c	FUNCTION_3	CALL_22
0x4000ac5	          0x4489f6	                           mov esi, r14d	       486	socks.c	FUNCTION_3	CALL_22
0x4000ac8	          0x4889df	                            mov rdi, rbx	       486	socks.c	FUNCTION_3	CALL_22
0x4000acb	      0xe800000000	                          call 0x4000ad0	       486	socks.c	FUNCTION_3	CALL_22
0x4000ad0	            0x85c0	                           test eax, eax	       487	socks.c	FUNCTION_3	IF_16
0x4000ad2	            0x7508	                           jne 0x4000adc	       487	socks.c	FUNCTION_3	IF_16
0x4000ad4	    0x48837c244802	               cmp qword [rsp + 0x48], 2	       487	socks.c	FUNCTION_3	IF_16
0x4000ada	            0x7421	                            je 0x4000afd	       487	socks.c	FUNCTION_3	IF_16
0x4000adc	    0x488d35000000	                   lea rsi, [0x04000ae3]	       488	socks.c	FUNCTION_3	IF_16	CALL_23
0x4000ae3	          0x4889ef	                            mov rdi, rbp	       488	socks.c	FUNCTION_3	IF_16	CALL_23
0x4000ae6	            0x31c0	                            xor eax, eax	       488	socks.c	FUNCTION_3	IF_16	CALL_23
0x4000ae8	    0x41bf07000000	                             mov r15d, 7	       489	socks.c	FUNCTION_3	IF_16
0x4000aee	      0xe800000000	                          call 0x4000af3	       488	socks.c	FUNCTION_3	IF_16	CALL_23
0x4000af3	      0xe94ffeffff	                           jmp 0x4000947	       489	socks.c	FUNCTION_3	IF_16
0x4000af8	      0xe800000000	                          call 0x4000afd	       789	socks.c	FUNCTION_3
0x4000afd	    0x80bc24a00000	                cmp byte [rsp + 0xa0], 5	       492	socks.c	FUNCTION_3	IF_17
0x4000b05	            0x7426	                            je 0x4000b2d	       492	socks.c	FUNCTION_3	IF_17
0x4000b07	    0x488d35000000	                   lea rsi, [0x04000b0e]	       493	socks.c	FUNCTION_3	IF_17	CALL_24
0x4000b0e	          0x4889ef	                            mov rdi, rbp	       493	socks.c	FUNCTION_3	IF_17	CALL_24
0x4000b11	            0x31c0	                            xor eax, eax	       493	socks.c	FUNCTION_3	IF_17	CALL_24
0x4000b13	    0x41bf07000000	                             mov r15d, 7	       494	socks.c	FUNCTION_3	IF_17
0x4000b19	      0xe800000000	                          call 0x4000b1e	       493	socks.c	FUNCTION_3	IF_17	CALL_24
0x4000b1e	      0xe924feffff	                           jmp 0x4000947	       494	socks.c	FUNCTION_3	IF_17
0x4000b23	      0xb801000000	                              mov eax, 1	       494	socks.c	FUNCTION_3	IF_17
0x4000b28	      0xe946fdffff	                           jmp 0x4000873	       494	socks.c	FUNCTION_3	IF_17
0x4000b2d	     0xfb68424a100	           movzx eax, byte [rsp + 0xa1] 	       496	socks.c	FUNCTION_3	IF_18
0x4000b35	            0x84c0	                             test al, al	       496	socks.c	FUNCTION_3	IF_18
0x4000b37	            0x7434	                            je 0x4000b6d	       496	socks.c	FUNCTION_3	IF_18
0x4000b39	            0x3c02	                               cmp al, 2	       509	socks.c	FUNCTION_3	ELSE_2	IF_21
0x4000b3b	     0xf84b6010000	                            je 0x4000cf7	       509	socks.c	FUNCTION_3	ELSE_2	IF_21
0x4000b41	            0x3c01	                               cmp al, 1	       562	socks.c	FUNCTION_3	ELSE_4	IF_28
0x4000b43	     0xf8492010000	                            je 0x4000cdb	       562	socks.c	FUNCTION_3	ELSE_4	IF_28
0x4000b49	             0x401	                               add al, 1	       567	socks.c	FUNCTION_3	ELSE_4	IF_29
0x4000b4b	     0xf8449030000	                            je 0x4000e9a	       567	socks.c	FUNCTION_3	ELSE_4	IF_29
0x4000b51	    0x488d35000000	                   lea rsi, [0x04000b58]	       580	socks.c	FUNCTION_3	ELSE_4	ELSE_6	CALL_39
0x4000b58	          0x4889ef	                            mov rdi, rbp	       580	socks.c	FUNCTION_3	ELSE_4	ELSE_6	CALL_39
0x4000b5b	            0x31c0	                            xor eax, eax	       580	socks.c	FUNCTION_3	ELSE_4	ELSE_6	CALL_39
0x4000b5d	    0x41bf07000000	                             mov r15d, 7	       582	socks.c	FUNCTION_3	ELSE_4	ELSE_6
0x4000b63	      0xe800000000	                          call 0x4000b68	       580	socks.c	FUNCTION_3	ELSE_4	ELSE_6	CALL_39
0x4000b68	      0xe9dafdffff	                           jmp 0x4000947	       582	socks.c	FUNCTION_3	ELSE_4	ELSE_6
0x4000b6d	      0x807c242700	                cmp byte [rsp + 0x27], 0	       592	socks.c	FUNCTION_3	IF_31
0x4000b72	    0xc68424a00000	                mov byte [rsp + 0xa0], 5	       588	socks.c	FUNCTION_3
0x4000b7a	    0xc68424a10000	                mov byte [rsp + 0xa1], 1	       589	socks.c	FUNCTION_3
0x4000b82	    0xc68424a20000	                mov byte [rsp + 0xa2], 0	       590	socks.c	FUNCTION_3
0x4000b8a	     0xf858d000000	                           jne 0x4000c1d	       592	socks.c	FUNCTION_3	IF_31
0x4000b90	      0x488b442408	                mov rax, qword [rsp + 8]	        53	string3.h	FUNCTION_4	CALL_3
0x4000b95	          0x4c89ee	                            mov rsi, r13	        53	string3.h	FUNCTION_4	CALL_3
0x4000b98	        0x4d8d6f05	                      lea r13, [r15 + 5]	       596	socks.c	FUNCTION_3	IF_31
0x4000b9c	      0xb953020000	                          mov ecx, 0x253	        53	string3.h	FUNCTION_4	CALL_3
0x4000ba1	          0x4c89fa	                            mov rdx, r15	        53	string3.h	FUNCTION_4	CALL_3
0x4000ba4	    0xc68424a30000	                mov byte [rsp + 0xa3], 3	       593	socks.c	FUNCTION_3	IF_31
0x4000bac	    0x4488bc24a400	             mov byte [rsp + 0xa4], r15b	       594	socks.c	FUNCTION_3	IF_31
0x4000bb4	        0x488d7805	                      lea rdi, [rax + 5]	        53	string3.h	FUNCTION_4	CALL_3
0x4000bb8	      0xe800000000	                          call 0x4000bbd	        53	string3.h	FUNCTION_4	CALL_3
0x4000bbd	        0x8b4c2420	            mov ecx, dword [rsp + 0x20] 	       664	socks.c	FUNCTION_3
0x4000bc1	        0x4d8d7d02	                      lea r15, [r13 + 2]	       665	socks.c	FUNCTION_3
0x4000bc5	      0x4c8b442428	              mov r8, qword [rsp + 0x28]	       673	socks.c	FUNCTION_3	CALL_50
0x4000bca	      0x488b542408	                mov rdx, qword [rsp + 8]	       673	socks.c	FUNCTION_3	CALL_50
0x4000bcf	          0x4489f6	                           mov esi, r14d	       673	socks.c	FUNCTION_3	CALL_50
0x4000bd2	          0x4889df	                            mov rdi, rbx	       673	socks.c	FUNCTION_3	CALL_50
0x4000bd5	            0x89c8	                            mov eax, ecx	       664	socks.c	FUNCTION_3
0x4000bd7	    0x42888c2ca100	         mov byte [rsp + r13 + 0xa1], cl	       665	socks.c	FUNCTION_3
0x4000bdf	          0x4c89f9	                            mov rcx, r15	       673	socks.c	FUNCTION_3	CALL_50
0x4000be2	          0xc1f808	                              sar eax, 8	       664	socks.c	FUNCTION_3
0x4000be5	    0x4288842ca000	         mov byte [rsp + r13 + 0xa0], al	       664	socks.c	FUNCTION_3
0x4000bed	      0xe800000000	                          call 0x4000bf2	       673	socks.c	FUNCTION_3	CALL_50
0x4000bf2	            0x85c0	                           test eax, eax	       675	socks.c	FUNCTION_3	IF_41
0x4000bf4	            0x750b	                           jne 0x4000c01	       675	socks.c	FUNCTION_3	IF_41
0x4000bf6	      0x4c3b7c2450	            cmp r15, qword [rsp + 0x50] 	       675	socks.c	FUNCTION_3	IF_41
0x4000bfb	     0xf8482030000	                            je 0x4000f83	       675	socks.c	FUNCTION_3	IF_41
0x4000c01	    0x488d35000000	                   lea rsi, [0x04000c08]	       676	socks.c	FUNCTION_3	IF_41	CALL_51
0x4000c08	          0x4889ef	                            mov rdi, rbp	       676	socks.c	FUNCTION_3	IF_41	CALL_51
0x4000c0b	            0x31c0	                            xor eax, eax	       676	socks.c	FUNCTION_3	IF_41	CALL_51
0x4000c0d	    0x41bf07000000	                             mov r15d, 7	       677	socks.c	FUNCTION_3	IF_41
0x4000c13	      0xe800000000	                          call 0x4000c18	       676	socks.c	FUNCTION_3	IF_41	CALL_51
0x4000c18	      0xe92afdffff	                           jmp 0x4000947	       677	socks.c	FUNCTION_3	IF_41
0x4000c1d	      0x4c8d7c2458	                   lea r15, [rsp + 0x58]	       601	socks.c	FUNCTION_3	ELSE_7	CALL_41
0x4000c22	        0x8b542420	            mov edx, dword [rsp + 0x20] 	       601	socks.c	FUNCTION_3	ELSE_7	CALL_41
0x4000c26	          0x4c89ee	                            mov rsi, r13	       601	socks.c	FUNCTION_3	ELSE_7	CALL_41
0x4000c29	          0x4889df	                            mov rdi, rbx	       601	socks.c	FUNCTION_3	ELSE_7	CALL_41
0x4000c2c	          0x4c89f9	                            mov rcx, r15	       601	socks.c	FUNCTION_3	ELSE_7	CALL_41
0x4000c2f	      0xe800000000	                          call 0x4000c34	       601	socks.c	FUNCTION_3	ELSE_7	CALL_41
0x4000c34	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       603	socks.c	FUNCTION_3	ELSE_7	IF_32
0x4000c37	     0xf843b030000	                            je 0x4000f78	       603	socks.c	FUNCTION_3	ELSE_7	IF_32
0x4000c3d	          0x83e801	                              sub eax, 1	       606	socks.c	FUNCTION_3	ELSE_7	IF_33
0x4000c40	     0xf8417030000	                            je 0x4000f5d	       606	socks.c	FUNCTION_3	ELSE_7	IF_33
0x4000c46	      0x488b442458	            mov rax, qword [rsp + 0x58] 	       617	socks.c	FUNCTION_3	ELSE_7	IF_35
0x4000c4b	          0x4885c0	                           test rax, rax	       617	socks.c	FUNCTION_3	ELSE_7	IF_35
0x4000c4e	     0xf84ea020000	                            je 0x4000f3e	       617	socks.c	FUNCTION_3	ELSE_7	IF_35
0x4000c54	          0x488b08	                    mov rcx, qword [rax]	       618	socks.c	FUNCTION_3	ELSE_7	IF_35
0x4000c57	          0x4885c9	                           test rcx, rcx	       619	socks.c	FUNCTION_3	ELSE_7	IF_36
0x4000c5a	     0xf84de020000	                            je 0x4000f3e	       619	socks.c	FUNCTION_3	ELSE_7	IF_36
0x4000c60	      0x4c8d7c2460	                   lea r15, [rsp + 0x60]	       622	socks.c	FUNCTION_3	ELSE_7	IF_36	CALL_43
0x4000c65	          0x4889cf	                            mov rdi, rcx	       622	socks.c	FUNCTION_3	ELSE_7	IF_36	CALL_43
0x4000c68	      0xba40000000	                           mov edx, 0x40	       622	socks.c	FUNCTION_3	ELSE_7	IF_36	CALL_43
0x4000c6d	      0x48894c2410	             mov qword [rsp + 0x10], rcx	       622	socks.c	FUNCTION_3	ELSE_7	IF_36	CALL_43
0x4000c72	          0x4c89fe	                            mov rsi, r15	       622	socks.c	FUNCTION_3	ELSE_7	IF_36	CALL_43
0x4000c75	      0xe800000000	                          call 0x4000c7a	       622	socks.c	FUNCTION_3	ELSE_7	IF_36	CALL_43
0x4000c7a	      0x488b4c2410	            mov rcx, qword [rsp + 0x10] 	       624	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37
0x4000c7f	          0x8b4104	                mov eax, dword [rcx + 4]	       624	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37
0x4000c82	          0x83f802	                              cmp eax, 2	       624	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37
0x4000c85	     0xf843e020000	                            je 0x4000ec9	       624	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37
0x4000c8b	          0x83f80a	                            cmp eax, 0xa	       636	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38
0x4000c8e	     0xf8589020000	                           jne 0x4000f1d	       636	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38
0x4000c94	    0xc68424a30000	                mov byte [rsp + 0xa3], 4	       638	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38
0x4000c9c	        0x488b5120	            mov rdx, qword [rcx + 0x20] 	       640	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38
0x4000ca0	    0x488d84249f00	                   lea rax, [rsp + 0x9f]	       640	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38
0x4000ca8	    0x41bd04000000	                             mov r13d, 4	       638	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38
0x4000cae	        0x4983c501	                              add r13, 1	       642	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	FOR_2
0x4000cb2	    0x420fb64c2a03	        movzx ecx, byte [rdx + r13 + 3] 	       643	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	FOR_2
0x4000cb8	        0x4983fd14	                           cmp r13, 0x14	       641	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	FOR_2
0x4000cbc	        0x42880c28	                mov byte [rax + r13], cl	       642	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	FOR_2
0x4000cc0	            0x75ec	                           jne 0x4000cae	       641	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	FOR_2
0x4000cc2	    0x488d35000000	                   lea rsi, [0x04000cc9]	       646	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	CALL_45
0x4000cc9	          0x4c89fa	                            mov rdx, r15	       646	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	CALL_45
0x4000ccc	          0x4889ef	                            mov rdi, rbp	       646	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	CALL_45
0x4000ccf	            0x31c0	                            xor eax, eax	       646	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	CALL_45
0x4000cd1	      0xe800000000	                          call 0x4000cd6	       646	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	CALL_45
0x4000cd6	      0xe930020000	                           jmp 0x4000f0b	       646	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_8	IF_38	CALL_45
0x4000cdb	    0x488d35000000	                   lea rsi, [0x04000ce2]	       563	socks.c	FUNCTION_3	ELSE_4	IF_28	CALL_36
0x4000ce2	          0x4889ef	                            mov rdi, rbp	       563	socks.c	FUNCTION_3	ELSE_4	IF_28	CALL_36
0x4000ce5	            0x31c0	                            xor eax, eax	       563	socks.c	FUNCTION_3	ELSE_4	IF_28	CALL_36
0x4000ce7	    0x41bf07000000	                             mov r15d, 7	       565	socks.c	FUNCTION_3	ELSE_4	IF_28
0x4000ced	      0xe800000000	                          call 0x4000cf2	       563	socks.c	FUNCTION_3	ELSE_4	IF_28	CALL_36
0x4000cf2	      0xe950fcffff	                           jmp 0x4000947	       565	socks.c	FUNCTION_3	ELSE_4	IF_28
0x4000cf7	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       512	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22
0x4000cfc	          0x4885f6	                           test rsi, rsi	       512	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22
0x4000cff	     0xf84fc000000	                            je 0x4000e01	       512	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22
0x4000d05	      0x4c8b542418	            mov r10, qword [rsp + 0x18] 	       512	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22
0x4000d0a	          0x4d85d2	                           test r10, r10	       512	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22
0x4000d0d	     0xf84ee000000	                            je 0x4000e01	       512	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22
0x4000d13	        0x4883caff	              or rdx, 0xffffffffffffffff	       513	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_27
0x4000d17	            0x31c0	                            xor eax, eax	       513	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_27
0x4000d19	          0x4889f7	                            mov rdi, rsi	       513	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_27
0x4000d1c	          0x4889d1	                            mov rcx, rdx	       513	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_27
0x4000d1f	            0xf2ae	              repne scasb al, byte [rdi]	       513	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_27
0x4000d21	          0x4c89d7	                            mov rdi, r10	       514	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_28
0x4000d24	          0x48f7d1	                                 not rcx	       513	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_27
0x4000d27	        0x4c8d0c11	                     lea r9, [rcx + rdx]	       513	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_27
0x4000d2b	          0x4889d1	                            mov rcx, rdx	       514	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_28
0x4000d2e	            0xf2ae	              repne scasb al, byte [rdi]	       514	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_28
0x4000d30	          0x4d85c9	                             test r9, r9	       531	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_23
0x4000d33	    0xc68424a00000	                mov byte [rsp + 0xa0], 1	       529	socks.c	FUNCTION_3	ELSE_2	IF_21
0x4000d3b	    0x44888c24a100	              mov byte [rsp + 0xa1], r9b	       530	socks.c	FUNCTION_3	ELSE_2	IF_21
0x4000d43	          0x4889c8	                            mov rax, rcx	       514	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_28
0x4000d46	          0x48f7d0	                                 not rax	       514	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_28
0x4000d49	        0x4c8d0410	                     lea r8, [rax + rdx]	       514	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_22	CALL_28
0x4000d4d	            0x742a	                            je 0x4000d79	       531	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_23
0x4000d4f	      0x488b442408	                mov rax, qword [rsp + 8]	        53	string3.h	FUNCTION_4	CALL_3
0x4000d54	          0x4c89ca	                             mov rdx, r9	        53	string3.h	FUNCTION_4	CALL_3
0x4000d57	      0xb956020000	                          mov ecx, 0x256	        53	string3.h	FUNCTION_4	CALL_3
0x4000d5c	      0x4c89442438	              mov qword [rsp + 0x38], r8	        53	string3.h	FUNCTION_4	CALL_3
0x4000d61	      0x4c894c2430	              mov qword [rsp + 0x30], r9	        53	string3.h	FUNCTION_4	CALL_3
0x4000d66	        0x488d7802	                      lea rdi, [rax + 2]	        53	string3.h	FUNCTION_4	CALL_3
0x4000d6a	      0xe800000000	                          call 0x4000d6f	        53	string3.h	FUNCTION_4	CALL_3
0x4000d6f	      0x4c8b442438	              mov r8, qword [rsp + 0x38]	        53	string3.h	FUNCTION_4	CALL_3
0x4000d74	      0x4c8b4c2430	              mov r9, qword [rsp + 0x30]	        53	string3.h	FUNCTION_4	CALL_3
0x4000d79	          0x4d85c0	                             test r8, r8	       535	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_24
0x4000d7c	        0x498d4903	                       lea rcx, [r9 + 3]	       534	socks.c	FUNCTION_3	ELSE_2	IF_21
0x4000d80	    0x4688840ca200	         mov byte [rsp + r9 + 0xa2], r8b	       534	socks.c	FUNCTION_3	ELSE_2	IF_21
0x4000d88	            0x742a	                            je 0x4000db4	       535	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_24
0x4000d8a	      0x488b442408	                mov rax, qword [rsp + 8]	        53	string3.h	FUNCTION_4	CALL_3
0x4000d8f	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	        53	string3.h	FUNCTION_4	CALL_3
0x4000d94	          0x4c89c2	                             mov rdx, r8	        53	string3.h	FUNCTION_4	CALL_3
0x4000d97	      0x48894c2430	             mov qword [rsp + 0x30], rcx	        53	string3.h	FUNCTION_4	CALL_3
0x4000d9c	      0x4c89442410	              mov qword [rsp + 0x10], r8	        53	string3.h	FUNCTION_4	CALL_3
0x4000da1	        0x488d3c08	                    lea rdi, [rax + rcx]	        53	string3.h	FUNCTION_4	CALL_3
0x4000da5	      0xe800000000	                          call 0x4000daa	        53	string3.h	FUNCTION_4	CALL_3
0x4000daa	      0x488b4c2430	            mov rcx, qword [rsp + 0x30] 	        53	string3.h	FUNCTION_4	CALL_3
0x4000daf	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	        53	string3.h	FUNCTION_4	CALL_3
0x4000db4	        0x4e8d0c01	                      lea r9, [rcx + r8]	       537	socks.c	FUNCTION_3	ELSE_2	IF_21
0x4000db8	      0x488b542408	                mov rdx, qword [rsp + 8]	       539	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_31
0x4000dbd	      0x4c8b442428	              mov r8, qword [rsp + 0x28]	       539	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_31
0x4000dc2	          0x4489f6	                           mov esi, r14d	       539	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_31
0x4000dc5	          0x4889df	                            mov rdi, rbx	       539	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_31
0x4000dc8	          0x4c89c9	                             mov rcx, r9	       539	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_31
0x4000dcb	      0x4c894c2410	              mov qword [rsp + 0x10], r9	       539	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_31
0x4000dd0	      0xe800000000	                          call 0x4000dd5	       539	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_31
0x4000dd5	            0x85c0	                           test eax, eax	       540	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_25
0x4000dd7	            0x750c	                           jne 0x4000de5	       540	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_25
0x4000dd9	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	       540	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_25
0x4000dde	      0x4c3b4c2450	              cmp r9, qword [rsp + 0x50]	       540	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_25
0x4000de3	            0x743e	                            je 0x4000e23	       540	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_25
0x4000de5	    0x488d35000000	                   lea rsi, [0x04000dec]	       541	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_25	CALL_32
0x4000dec	          0x4889ef	                            mov rdi, rbp	       541	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_25	CALL_32
0x4000def	            0x31c0	                            xor eax, eax	       541	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_25	CALL_32
0x4000df1	    0x41bf07000000	                             mov r15d, 7	       542	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_25
0x4000df7	      0xe800000000	                          call 0x4000dfc	       541	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_25	CALL_32
0x4000dfc	      0xe946fbffff	                           jmp 0x4000947	       542	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_25
0x4000e01	    0xc68424a00000	                mov byte [rsp + 0xa0], 1	       529	socks.c	FUNCTION_3	ELSE_2	IF_21
0x4000e09	    0xc68424a10000	                mov byte [rsp + 0xa1], 0	       530	socks.c	FUNCTION_3	ELSE_2	IF_21
0x4000e11	          0x4531c0	                            xor r8d, r8d	       518	socks.c	FUNCTION_3	ELSE_2	IF_21	ELSE_3
0x4000e14	    0xc68424a20000	                mov byte [rsp + 0xa2], 0	       534	socks.c	FUNCTION_3	ELSE_2	IF_21
0x4000e1c	      0xb903000000	                              mov ecx, 3	       534	socks.c	FUNCTION_3	ELSE_2	IF_21
0x4000e21	            0xeb91	                           jmp 0x4000db4	       534	socks.c	FUNCTION_3	ELSE_2	IF_21
0x4000e23	      0x488b542408	                mov rdx, qword [rsp + 8]	       545	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_33
0x4000e28	          0x4d89e0	                             mov r8, r12	       545	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_33
0x4000e2b	      0xb902000000	                              mov ecx, 2	       545	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_33
0x4000e30	          0x4489f6	                           mov esi, r14d	       545	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_33
0x4000e33	          0x4889df	                            mov rdi, rbx	       545	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_33
0x4000e36	      0xe800000000	                          call 0x4000e3b	       545	socks.c	FUNCTION_3	ELSE_2	IF_21	CALL_33
0x4000e3b	            0x85c0	                           test eax, eax	       546	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_26
0x4000e3d	            0x7508	                           jne 0x4000e47	       546	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_26
0x4000e3f	    0x48837c244802	               cmp qword [rsp + 0x48], 2	       546	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_26
0x4000e45	            0x741c	                            je 0x4000e63	       546	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_26
0x4000e47	    0x488d35000000	                   lea rsi, [0x04000e4e]	       547	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_26	CALL_34
0x4000e4e	          0x4889ef	                            mov rdi, rbp	       547	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_26	CALL_34
0x4000e51	            0x31c0	                            xor eax, eax	       547	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_26	CALL_34
0x4000e53	    0x41bf07000000	                             mov r15d, 7	       548	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_26
0x4000e59	      0xe800000000	                          call 0x4000e5e	       547	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_26	CALL_34
0x4000e5e	      0xe9e4faffff	                           jmp 0x4000947	       548	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_26
0x4000e63	     0xfb68424a100	           movzx eax, byte [rsp + 0xa1] 	       552	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27
0x4000e6b	            0x84c0	                             test al, al	       552	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27
0x4000e6d	     0xf84fafcffff	                            je 0x4000b6d	       552	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27
0x4000e73	     0xfb69424a000	           movzx edx, byte [rsp + 0xa0] 	       553	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27	CALL_35
0x4000e7b	    0x488d35000000	                   lea rsi, [0x04000e82]	       553	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27	CALL_35
0x4000e82	           0xfb6c8	                           movzx ecx, al	       553	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27	CALL_35
0x4000e85	          0x4889ef	                            mov rdi, rbp	       553	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27	CALL_35
0x4000e88	            0x31c0	                            xor eax, eax	       553	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27	CALL_35
0x4000e8a	    0x41bf07000000	                             mov r15d, 7	       555	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27
0x4000e90	      0xe800000000	                          call 0x4000e95	       553	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27	CALL_35
0x4000e95	      0xe9adfaffff	                           jmp 0x4000947	       555	socks.c	FUNCTION_3	ELSE_2	IF_21	IF_27
0x4000e9a	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       568	socks.c	FUNCTION_3	ELSE_4	IF_29	IF_30
0x4000e9f	          0x4885c0	                           test rax, rax	       568	socks.c	FUNCTION_3	ELSE_4	IF_29	IF_30
0x4000ea2	            0x7409	                            je 0x4000ead	       568	socks.c	FUNCTION_3	ELSE_4	IF_29	IF_30
0x4000ea4	          0x803800	                       cmp byte [rax], 0	       568	socks.c	FUNCTION_3	ELSE_4	IF_29	IF_30
0x4000ea7	     0xf8516010000	                           jne 0x4000fc3	       568	socks.c	FUNCTION_3	ELSE_4	IF_29	IF_30
0x4000ead	    0x488d35000000	                   lea rsi, [0x04000eb4]	       569	socks.c	FUNCTION_3	ELSE_4	IF_29	IF_30	CALL_37
0x4000eb4	          0x4889ef	                            mov rdi, rbp	       569	socks.c	FUNCTION_3	ELSE_4	IF_29	IF_30	CALL_37
0x4000eb7	            0x31c0	                            xor eax, eax	       569	socks.c	FUNCTION_3	ELSE_4	IF_29	IF_30	CALL_37
0x4000eb9	    0x41bf07000000	                             mov r15d, 7	       577	socks.c	FUNCTION_3	ELSE_4	IF_29
0x4000ebf	      0xe800000000	                          call 0x4000ec4	       569	socks.c	FUNCTION_3	ELSE_4	IF_29	IF_30	CALL_37
0x4000ec4	      0xe97efaffff	                           jmp 0x4000947	       569	socks.c	FUNCTION_3	ELSE_4	IF_29	IF_30	CALL_37
0x4000ec9	    0xc68424a30000	                mov byte [rsp + 0xa3], 1	       626	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37
0x4000ed1	        0x488b5120	            mov rdx, qword [rcx + 0x20] 	       628	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37
0x4000ed5	    0x488d84249f00	                   lea rax, [rsp + 0x9f]	       628	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37
0x4000edd	    0x41bd04000000	                             mov r13d, 4	       626	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37
0x4000ee3	        0x4983c501	                              add r13, 1	       630	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	FOR_1
0x4000ee7	    0x420fb64c2aff	         movzx ecx, byte [rdx + r13 - 1]	       630	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	FOR_1
0x4000eed	        0x4983fd08	                              cmp r13, 8	       629	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	FOR_1
0x4000ef1	        0x42880c28	                mov byte [rax + r13], cl	       630	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	FOR_1
0x4000ef5	            0x75ec	                           jne 0x4000ee3	       629	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	FOR_1
0x4000ef7	    0x488d35000000	                   lea rsi, [0x04000efe]	       633	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	CALL_44
0x4000efe	          0x4c89fa	                            mov rdx, r15	       633	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	CALL_44
0x4000f01	          0x4889ef	                            mov rdi, rbp	       633	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	CALL_44
0x4000f04	            0x31c0	                            xor eax, eax	       633	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	CALL_44
0x4000f06	      0xe800000000	                          call 0x4000f0b	       633	socks.c	FUNCTION_3	ELSE_7	IF_36	IF_37	CALL_44
0x4000f0b	      0x488b742458	            mov rsi, qword [rsp + 0x58] 	       655	socks.c	FUNCTION_3	ELSE_7	IF_36	CALL_47
0x4000f10	          0x4889ef	                            mov rdi, rbp	       655	socks.c	FUNCTION_3	ELSE_7	IF_36	CALL_47
0x4000f13	      0xe800000000	                          call 0x4000f18	       655	socks.c	FUNCTION_3	ELSE_7	IF_36	CALL_47
0x4000f18	      0xe9a0fcffff	                           jmp 0x4000bbd	       655	socks.c	FUNCTION_3	ELSE_7	IF_36	CALL_47
0x4000f1d	    0x488d35000000	                   lea rsi, [0x04000f24]	       652	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_9	CALL_46
0x4000f24	          0x4889ef	                            mov rdi, rbp	       652	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_9	CALL_46
0x4000f27	          0x4c89fa	                            mov rdx, r15	       652	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_9	CALL_46
0x4000f2a	            0x31c0	                            xor eax, eax	       652	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_9	CALL_46
0x4000f2c	      0xe800000000	                          call 0x4000f31	       652	socks.c	FUNCTION_3	ELSE_7	IF_36	ELSE_9	CALL_46
0x4000f31	      0x488b742458	            mov rsi, qword [rsp + 0x58] 	       655	socks.c	FUNCTION_3	ELSE_7	IF_36	CALL_47
0x4000f36	          0x4889ef	                            mov rdi, rbp	       655	socks.c	FUNCTION_3	ELSE_7	IF_36	CALL_47
0x4000f39	      0xe800000000	                          call 0x4000f3e	       655	socks.c	FUNCTION_3	ELSE_7	IF_36	CALL_47
0x4000f3e	    0x488d35000000	                   lea rsi, [0x04000f45]	       658	socks.c	FUNCTION_3	ELSE_7	IF_39	CALL_48
0x4000f45	          0x4c89ea	                            mov rdx, r13	       658	socks.c	FUNCTION_3	ELSE_7	IF_39	CALL_48
0x4000f48	          0x4889ef	                            mov rdi, rbp	       658	socks.c	FUNCTION_3	ELSE_7	IF_39	CALL_48
0x4000f4b	            0x31c0	                            xor eax, eax	       658	socks.c	FUNCTION_3	ELSE_7	IF_39	CALL_48
0x4000f4d	    0x41bf06000000	                             mov r15d, 6	       660	socks.c	FUNCTION_3	ELSE_7	IF_39
0x4000f53	      0xe800000000	                          call 0x4000f58	       658	socks.c	FUNCTION_3	ELSE_7	IF_39	CALL_48
0x4000f58	      0xe9eaf9ffff	                           jmp 0x4000947	       660	socks.c	FUNCTION_3	ELSE_7	IF_39
0x4000f5d	          0x4c89fe	                            mov rsi, r15	       608	socks.c	FUNCTION_3	ELSE_7	IF_33	CALL_42
0x4000f60	          0x4889df	                            mov rdi, rbx	       608	socks.c	FUNCTION_3	ELSE_7	IF_33	CALL_42
0x4000f63	      0xe800000000	                          call 0x4000f68	       608	socks.c	FUNCTION_3	ELSE_7	IF_33	CALL_42
0x4000f68	            0x85c0	                           test eax, eax	       609	socks.c	FUNCTION_3	ELSE_7	IF_33	IF_34
0x4000f6a	          0x4189c7	                           mov r15d, eax	       608	socks.c	FUNCTION_3	ELSE_7	IF_33	CALL_42
0x4000f6d	     0xf84d3fcffff	                            je 0x4000c46	       609	socks.c	FUNCTION_3	ELSE_7	IF_33	IF_34
0x4000f73	      0xe9cff9ffff	                           jmp 0x4000947	       609	socks.c	FUNCTION_3	ELSE_7	IF_33	IF_34
0x4000f78	    0x41bf06000000	                             mov r15d, 6	       604	socks.c	FUNCTION_3	ELSE_7	IF_32
0x4000f7e	      0xe9c4f9ffff	                           jmp 0x4000947	       604	socks.c	FUNCTION_3	ELSE_7	IF_32
0x4000f83	      0x488b542408	                mov rdx, qword [rsp + 8]	       688	socks.c	FUNCTION_3	ELSE_11	CALL_53
0x4000f88	          0x4d89e0	                             mov r8, r12	       688	socks.c	FUNCTION_3	ELSE_11	CALL_53
0x4000f8b	      0xb90a000000	                            mov ecx, 0xa	       688	socks.c	FUNCTION_3	ELSE_11	CALL_53
0x4000f90	          0x4489f6	                           mov esi, r14d	       688	socks.c	FUNCTION_3	ELSE_11	CALL_53
0x4000f93	          0x4889df	                            mov rdi, rbx	       688	socks.c	FUNCTION_3	ELSE_11	CALL_53
0x4000f96	      0xe800000000	                          call 0x4000f9b	       688	socks.c	FUNCTION_3	ELSE_11	CALL_53
0x4000f9b	            0x85c0	                           test eax, eax	       691	socks.c	FUNCTION_3	IF_43
0x4000f9d	            0x7508	                           jne 0x4000fa7	       691	socks.c	FUNCTION_3	IF_43
0x4000f9f	    0x48837c24480a	            cmp qword [rsp + 0x48], 0xa 	       691	socks.c	FUNCTION_3	IF_43
0x4000fa5	            0x7438	                            je 0x4000fdf	       691	socks.c	FUNCTION_3	IF_43
0x4000fa7	    0x488d35000000	                   lea rsi, [0x04000fae]	       738	socks.c	FUNCTION_3	IF_47	IF_48	IF_49	CALL_57
0x4000fae	          0x4889ef	                            mov rdi, rbp	       738	socks.c	FUNCTION_3	IF_47	IF_48	IF_49	CALL_57
0x4000fb1	            0x31c0	                            xor eax, eax	       738	socks.c	FUNCTION_3	IF_47	IF_48	IF_49	CALL_57
0x4000fb3	    0x41bf07000000	                             mov r15d, 7	       739	socks.c	FUNCTION_3	IF_47	IF_48	IF_49
0x4000fb9	      0xe800000000	                          call 0x4000fbe	       738	socks.c	FUNCTION_3	IF_47	IF_48	IF_49	CALL_57
0x4000fbe	      0xe984f9ffff	                           jmp 0x4000947	       739	socks.c	FUNCTION_3	IF_47	IF_48	IF_49
0x4000fc3	    0x488d35000000	                   lea rsi, [0x04000fca]	       575	socks.c	FUNCTION_3	ELSE_4	IF_29	ELSE_5	CALL_38
0x4000fca	          0x4889ef	                            mov rdi, rbp	       575	socks.c	FUNCTION_3	ELSE_4	IF_29	ELSE_5	CALL_38
0x4000fcd	            0x31c0	                            xor eax, eax	       575	socks.c	FUNCTION_3	ELSE_4	IF_29	ELSE_5	CALL_38
0x4000fcf	    0x41bf07000000	                             mov r15d, 7	       577	socks.c	FUNCTION_3	ELSE_4	IF_29
0x4000fd5	      0xe800000000	                          call 0x4000fda	       575	socks.c	FUNCTION_3	ELSE_4	IF_29	ELSE_5	CALL_38
0x4000fda	      0xe968f9ffff	                           jmp 0x4000947	       575	socks.c	FUNCTION_3	ELSE_4	IF_29	ELSE_5	CALL_38
0x4000fdf	    0x80bc24a00000	                cmp byte [rsp + 0xa0], 5	       696	socks.c	FUNCTION_3	IF_44
0x4000fe7	            0x741c	                            je 0x4001005	       696	socks.c	FUNCTION_3	IF_44
0x4000fe9	    0x488d35000000	                   lea rsi, [0x04000ff0]	       697	socks.c	FUNCTION_3	IF_44	CALL_55
0x4000ff0	          0x4889ef	                            mov rdi, rbp	       697	socks.c	FUNCTION_3	IF_44	CALL_55
0x4000ff3	            0x31c0	                            xor eax, eax	       697	socks.c	FUNCTION_3	IF_44	CALL_55
0x4000ff5	    0x41bf07000000	                             mov r15d, 7	       699	socks.c	FUNCTION_3	IF_44
0x4000ffb	      0xe800000000	                          call 0x4001000	       697	socks.c	FUNCTION_3	IF_44	CALL_55
0x4001000	      0xe942f9ffff	                           jmp 0x4000947	       699	socks.c	FUNCTION_3	IF_44
0x4001005	     0xfb68424a300	           movzx eax, byte [rsp + 0xa3] 	       719	socks.c	FUNCTION_3	IF_45
0x400100d	            0x3c03	                               cmp al, 3	       719	socks.c	FUNCTION_3	IF_45
0x400100f	     0xf8400010000	                            je 0x4001115	       719	socks.c	FUNCTION_3	IF_45
0x4001015	            0x3c04	                               cmp al, 4	       724	socks.c	FUNCTION_3	ELSE_12	IF_46
0x4001017	    0x41bd0a000000	                           mov r13d, 0xa	       680	socks.c	FUNCTION_3
0x400101d	     0xf8487010000	                            je 0x40011aa	       724	socks.c	FUNCTION_3	ELSE_12	IF_46
0x4001023	     0xfb68424a100	           movzx eax, byte [rsp + 0xa1] 	       746	socks.c	FUNCTION_3	IF_50
0x400102b	            0x84c0	                             test al, al	       746	socks.c	FUNCTION_3	IF_50
0x400102d	     0xf8451010000	                            je 0x4001184	       746	socks.c	FUNCTION_3	IF_50
0x4001033	     0xfb69424a300	           movzx edx, byte [rsp + 0xa3] 	       747	socks.c	FUNCTION_3	IF_50	IF_51
0x400103b	          0x80fa01	                               cmp dl, 1	       747	socks.c	FUNCTION_3	IF_50	IF_51
0x400103e	     0xf84a2010000	                            je 0x40011e6	       747	socks.c	FUNCTION_3	IF_50	IF_51
0x4001044	          0x80fa03	                               cmp dl, 3	       756	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52
0x4001047	     0xf84e9000000	                            je 0x4001136	       756	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52
0x400104d	          0x80fa04	                               cmp dl, 4	       767	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53
0x4001050	    0x41bf07000000	                             mov r15d, 7	       783	socks.c	FUNCTION_3	IF_50
0x4001056	     0xf85ebf8ffff	                           jne 0x4000947	       767	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53
0x400105c	     0xfb68c24a500	           movzx ecx, byte [rsp + 0xa5] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001064	     0xfb69424a400	           movzx edx, byte [rsp + 0xa4] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x400106c	    0x488d35000000	                   lea rsi, [0x04001073]	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001073	              0x50	                                push rax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001074	     0xfb78424bc00	           movzx eax, word [rsp + 0xbc] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x400107c	          0x4889ef	                            mov rdi, rbp	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x400107f	        0x66c1c008	                               rol ax, 8	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001083	           0xfb7c0	                           movzx eax, ax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001086	              0x50	                                push rax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001087	     0xfb68424c300	           movzx eax, byte [rsp + 0xc3] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x400108f	              0x50	                                push rax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001090	     0xfb68424ca00	           movzx eax, byte [rsp + 0xca] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001098	              0x50	                                push rax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001099	     0xfb68424d100	           movzx eax, byte [rsp + 0xd1] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010a1	              0x50	                                push rax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010a2	     0xfb68424d800	           movzx eax, byte [rsp + 0xd8] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010aa	              0x50	                                push rax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010ab	     0xfb68424df00	           movzx eax, byte [rsp + 0xdf] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010b3	              0x50	                                push rax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010b4	     0xfb68424e600	           movzx eax, byte [rsp + 0xe6] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010bc	              0x50	                                push rax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010bd	     0xfb68424ed00	           movzx eax, byte [rsp + 0xed] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010c5	              0x50	                                push rax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010c6	     0xfb68424f400	           movzx eax, byte [rsp + 0xf4] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010ce	              0x50	                                push rax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010cf	     0xfb68424fb00	           movzx eax, byte [rsp + 0xfb] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010d7	              0x50	                                push rax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010d8	     0xfb684240201	          movzx eax, byte [rsp + 0x102] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010e0	              0x50	                                push rax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010e1	     0xfb684240901	          movzx eax, byte [rsp + 0x109] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010e9	              0x50	                                push rax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010ea	     0xfb684241001	          movzx eax, byte [rsp + 0x110] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010f2	              0x50	                                push rax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010f3	    0x440fb68c2417	          movzx r9d, byte [rsp + 0x117] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010fc	            0x31c0	                            xor eax, eax	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x40010fe	    0x440fb6842416	          movzx r8d, byte [rsp + 0x116] 	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001107	      0xe800000000	                          call 0x400110c	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x400110c	        0x4883c470	                           add rsp, 0x70	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001110	      0xe932f8ffff	                           jmp 0x4000947	       768	socks.c	FUNCTION_3	IF_50	ELSE_14	IF_53	CALL_60
0x4001115	     0xfb68424a400	           movzx eax, byte [rsp + 0xa4] 	       722	socks.c	FUNCTION_3	IF_45
0x400111d	          0x83c007	                              add eax, 7	       722	socks.c	FUNCTION_3	IF_45
0x4001120	          0x83f80a	                            cmp eax, 0xa	       734	socks.c	FUNCTION_3	IF_47	IF_48
0x4001123	          0x4c63e8	                         movsxd r13, eax	       722	socks.c	FUNCTION_3	IF_45
0x4001126	     0xf8f84000000	                            jg 0x40011b0	       734	socks.c	FUNCTION_3	IF_47	IF_48
0x400112c	    0x80bc24a10000	                cmp byte [rsp + 0xa1], 0	       746	socks.c	FUNCTION_3	IF_50
0x4001134	            0x744e	                            je 0x4001184	       746	socks.c	FUNCTION_3	IF_50
0x4001136	    0x420fb6842c9e	     movzx eax, byte [rsp + r13 + 0x9e] 	       757	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52
0x400113f	    0x420fb68c2c9f	     movzx ecx, byte [rsp + r13 + 0x9f] 	       759	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52	CALL_59
0x4001148	    0x488d35000000	                   lea rsi, [0x0400114f]	       759	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52	CALL_59
0x400114f	    0x42c6842c9e00	          mov byte [rsp + r13 + 0x9e], 0	       758	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52
0x4001158	      0x488b542408	                mov rdx, qword [rsp + 8]	       759	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52	CALL_59
0x400115d	          0x4889ef	                            mov rdi, rbp	       759	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52	CALL_59
0x4001160	    0x440fb68424a1	           movzx r8d, byte [rsp + 0xa1] 	       759	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52	CALL_59
0x4001169	    0x41bf07000000	                             mov r15d, 7	       783	socks.c	FUNCTION_3	IF_50
0x400116f	          0xc1e008	                              shl eax, 8	       759	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52	CALL_59
0x4001172	        0x4883c205	                              add rdx, 5	       759	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52	CALL_59
0x4001176	             0x9c1	                             or ecx, eax	       759	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52	CALL_59
0x4001178	            0x31c0	                            xor eax, eax	       759	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52	CALL_59
0x400117a	      0xe800000000	                          call 0x400117f	       759	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52	CALL_59
0x400117f	      0xe9c3f7ffff	                           jmp 0x4000947	       759	socks.c	FUNCTION_3	IF_50	ELSE_13	IF_52	CALL_59
0x4001184	    0x488d35000000	                   lea rsi, [0x0400118b]	       785	socks.c	FUNCTION_3	CALL_61
0x400118b	          0x4889ef	                            mov rdi, rbp	       785	socks.c	FUNCTION_3	CALL_61
0x400118e	            0x31c0	                            xor eax, eax	       785	socks.c	FUNCTION_3	CALL_61
0x4001190	          0x4531ff	                          xor r15d, r15d	       788	socks.c	FUNCTION_3
0x4001193	      0xe800000000	                          call 0x4001198	       785	socks.c	FUNCTION_3	CALL_61
0x4001198	      0xbe01000000	                              mov esi, 1	       787	socks.c	FUNCTION_3	CALL_62
0x400119d	          0x4489f7	                           mov edi, r14d	       787	socks.c	FUNCTION_3	CALL_62
0x40011a0	      0xe800000000	                          call 0x40011a5	       787	socks.c	FUNCTION_3	CALL_62
0x40011a5	      0xe99df7ffff	                           jmp 0x4000947	       788	socks.c	FUNCTION_3
0x40011aa	    0x41bd16000000	                          mov r13d, 0x16	       726	socks.c	FUNCTION_3	ELSE_12	IF_46
0x40011b0	      0x488b442408	                mov rax, qword [rsp + 8]	       735	socks.c	FUNCTION_3	IF_47	IF_48	CALL_56
0x40011b5	        0x4d8d7df6	                    lea r15, [r13 - 0xa]	       735	socks.c	FUNCTION_3	IF_47	IF_48	CALL_56
0x40011b9	          0x4d89e0	                             mov r8, r12	       735	socks.c	FUNCTION_3	IF_47	IF_48	CALL_56
0x40011bc	          0x4489f6	                           mov esi, r14d	       735	socks.c	FUNCTION_3	IF_47	IF_48	CALL_56
0x40011bf	          0x4889df	                            mov rdi, rbx	       735	socks.c	FUNCTION_3	IF_47	IF_48	CALL_56
0x40011c2	          0x4c89f9	                            mov rcx, r15	       735	socks.c	FUNCTION_3	IF_47	IF_48	CALL_56
0x40011c5	        0x488d500a	                    lea rdx, [rax + 0xa]	       735	socks.c	FUNCTION_3	IF_47	IF_48	CALL_56
0x40011c9	      0xe800000000	                          call 0x40011ce	       735	socks.c	FUNCTION_3	IF_47	IF_48	CALL_56
0x40011ce	            0x85c0	                           test eax, eax	       737	socks.c	FUNCTION_3	IF_47	IF_48	IF_49
0x40011d0	     0xf85d1fdffff	                           jne 0x4000fa7	       737	socks.c	FUNCTION_3	IF_47	IF_48	IF_49
0x40011d6	      0x4c3b7c2448	            cmp r15, qword [rsp + 0x48] 	       737	socks.c	FUNCTION_3	IF_47	IF_48	IF_49
0x40011db	     0xf85c6fdffff	                           jne 0x4000fa7	       737	socks.c	FUNCTION_3	IF_47	IF_48	IF_49
0x40011e1	      0xe93dfeffff	                           jmp 0x4001023	       737	socks.c	FUNCTION_3	IF_47	IF_48	IF_49
0x40011e6	     0xfb68c24a500	           movzx ecx, byte [rsp + 0xa5] 	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x40011ee	     0xfb69424a400	           movzx edx, byte [rsp + 0xa4] 	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x40011f6	    0x488d35000000	                   lea rsi, [0x040011fd]	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x40011fd	              0x50	                                push rax	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x40011fe	     0xfb78424b000	           movzx eax, word [rsp + 0xb0] 	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4001206	          0x4889ef	                            mov rdi, rbp	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4001209	    0x41bf07000000	                             mov r15d, 7	       783	socks.c	FUNCTION_3	IF_50
0x400120f	        0x66c1c008	                               rol ax, 8	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4001213	           0xfb7c0	                           movzx eax, ax	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4001216	              0x50	                                push rax	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4001217	    0x440fb68c24b7	           movzx r9d, byte [rsp + 0xb7] 	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4001220	            0x31c0	                            xor eax, eax	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4001222	    0x440fb68424b6	           movzx r8d, byte [rsp + 0xb6] 	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x400122b	      0xe800000000	                          call 0x4001230	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4001230	              0x58	                                 pop rax	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4001231	              0x5a	                                 pop rdx	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
0x4001232	      0xe910f7ffff	                           jmp 0x4000947	       748	socks.c	FUNCTION_3	IF_50	IF_51	CALL_58
Curl_blockread_all	DO,0:ELSE,0:WHILE,0:SWITCH,0:FOR,1:functions,0:CALL,3:IF,6	72
0x4000040	            0x4157	                                push r15	        56	socks.c	FUNCTION_1
0x4000042	            0x4156	                                push r14	        56	socks.c	FUNCTION_1
0x4000044	          0x4989fe	                            mov r14, rdi	        56	socks.c	FUNCTION_1
0x4000047	            0x4155	                                push r13	        56	socks.c	FUNCTION_1
0x4000049	            0x4154	                                push r12	        56	socks.c	FUNCTION_1
0x400004b	          0x4531ed	                          xor r13d, r13d	        58	socks.c	FUNCTION_1
0x400004e	              0x55	                                push rbp	        56	socks.c	FUNCTION_1
0x400004f	              0x53	                                push rbx	        56	socks.c	FUNCTION_1
0x4000050	          0x4889cb	                            mov rbx, rcx	        56	socks.c	FUNCTION_1
0x4000053	          0x4189f4	                           mov r12d, esi	        56	socks.c	FUNCTION_1
0x4000056	          0x4889d5	                            mov rbp, rdx	        56	socks.c	FUNCTION_1
0x4000059	        0x4883ec28	                           sub rsp, 0x28	        56	socks.c	FUNCTION_1
0x400005d	    0x49c700000000	                       mov qword [r8], 0	        61	socks.c	FUNCTION_1
0x4000064	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	        56	socks.c	FUNCTION_1
0x400006d	      0x48894c2418	             mov qword [rsp + 0x18], rcx	        56	socks.c	FUNCTION_1
0x4000072	            0x31c9	                            xor ecx, ecx	        56	socks.c	FUNCTION_1
0x4000074	      0x4c8d7c2410	                   lea r15, [rsp + 0x10]	        73	socks.c	FUNCTION_1	FOR_1	CALL_3
0x4000079	      0x4c89442408	                 mov qword [rsp + 8], r8	        56	socks.c	FUNCTION_1
0x400007e	            0x6690	                                     nop	        56	socks.c	FUNCTION_1
0x4000080	          0x498b3e	                    mov rdi, qword [r14]	        63	socks.c	FUNCTION_1	FOR_1	CALL_1
0x4000083	            0x31f6	                            xor esi, esi	        63	socks.c	FUNCTION_1	FOR_1	CALL_1
0x4000085	      0xba01000000	                              mov edx, 1	        63	socks.c	FUNCTION_1	FOR_1	CALL_1
0x400008a	      0xe800000000	                          call 0x400008f	        63	socks.c	FUNCTION_1	FOR_1	CALL_1
0x400008f	          0x4885c0	                           test rax, rax	        64	socks.c	FUNCTION_1	FOR_1	IF_1
0x4000092	            0x784c	                            js 0x40000e0	        64	socks.c	FUNCTION_1	FOR_1	IF_1
0x4000094	      0xbaffffffff	                     mov edx, 0xffffffff	        69	socks.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x4000099	          0x4889c1	                            mov rcx, rax	        69	socks.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x400009c	          0x4489e7	                           mov edi, r12d	        69	socks.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x400009f	            0x89d6	                            mov esi, edx	        69	socks.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x40000a1	      0xe800000000	                          call 0x40000a6	        69	socks.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x40000a6	            0x85c0	                           test eax, eax	        69	socks.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x40000a8	            0x7e5e	                           jle 0x4000108	        69	socks.c	FUNCTION_1	FOR_1	IF_2	CALL_2
0x40000aa	          0x4c89f9	                            mov rcx, r15	        73	socks.c	FUNCTION_1	FOR_1	CALL_3
0x40000ad	          0x4889da	                            mov rdx, rbx	        73	socks.c	FUNCTION_1	FOR_1	CALL_3
0x40000b0	          0x4889ee	                            mov rsi, rbp	        73	socks.c	FUNCTION_1	FOR_1	CALL_3
0x40000b3	          0x4489e7	                           mov edi, r12d	        73	socks.c	FUNCTION_1	FOR_1	CALL_3
0x40000b6	      0xe800000000	                          call 0x40000bb	        73	socks.c	FUNCTION_1	FOR_1	CALL_3
0x40000bb	          0x83f851	                           cmp eax, 0x51	        74	socks.c	FUNCTION_1	FOR_1	IF_3
0x40000be	            0x74c0	                            je 0x4000080	        74	socks.c	FUNCTION_1	FOR_1	IF_3
0x40000c0	            0x85c0	                           test eax, eax	        76	socks.c	FUNCTION_1	FOR_1	IF_4
0x40000c2	            0x7521	                           jne 0x40000e5	        76	socks.c	FUNCTION_1	FOR_1	IF_4
0x40000c4	      0x488b542410	            mov rdx, qword [rsp + 0x10] 	        79	socks.c	FUNCTION_1	FOR_1	IF_5
0x40000c9	          0x4839d3	                            cmp rbx, rdx	        79	socks.c	FUNCTION_1	FOR_1	IF_5
0x40000cc	            0x7442	                            je 0x4000110	        79	socks.c	FUNCTION_1	FOR_1	IF_5
0x40000ce	          0x4885d2	                           test rdx, rdx	        85	socks.c	FUNCTION_1	FOR_1	IF_6
0x40000d1	            0x7435	                            je 0x4000108	        85	socks.c	FUNCTION_1	FOR_1	IF_6
0x40000d3	          0x4829d3	                            sub rbx, rdx	        90	socks.c	FUNCTION_1	FOR_1
0x40000d6	          0x4801d5	                            add rbp, rdx	        91	socks.c	FUNCTION_1	FOR_1
0x40000d9	          0x4901d5	                            add r13, rdx	        92	socks.c	FUNCTION_1	FOR_1
0x40000dc	            0xeba2	                           jmp 0x4000080	        92	socks.c	FUNCTION_1	FOR_1
0x40000de	            0x6690	                                     nop	        92	socks.c	FUNCTION_1	FOR_1
0x40000e0	      0xb81c000000	                           mov eax, 0x1c	        66	socks.c	FUNCTION_1	FOR_1	IF_1
0x40000e5	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	        95	socks.c	FUNCTION_1
0x40000ea	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        95	socks.c	FUNCTION_1
0x40000f3	            0x7528	                           jne 0x400011d	        95	socks.c	FUNCTION_1
0x40000f5	        0x4883c428	                           add rsp, 0x28	        95	socks.c	FUNCTION_1
0x40000f9	              0x5b	                                 pop rbx	        95	socks.c	FUNCTION_1
0x40000fa	              0x5d	                                 pop rbp	        95	socks.c	FUNCTION_1
0x40000fb	            0x415c	                                 pop r12	        95	socks.c	FUNCTION_1
0x40000fd	            0x415d	                                 pop r13	        95	socks.c	FUNCTION_1
0x40000ff	            0x415e	                                 pop r14	        95	socks.c	FUNCTION_1
0x4000101	            0x415f	                                 pop r15	        95	socks.c	FUNCTION_1
0x4000103	              0xc3	                                     ret	        95	socks.c	FUNCTION_1
0x4000104	         0xf1f4000	                         nop dword [rax]	        95	socks.c	FUNCTION_1
0x4000108	      0xb8ffffffff	                     mov eax, 0xffffffff	        70	socks.c	FUNCTION_1	FOR_1	IF_2
0x400010d	            0xebd6	                           jmp 0x40000e5	        70	socks.c	FUNCTION_1	FOR_1	IF_2
0x400010f	              0x90	                                     nop	        70	socks.c	FUNCTION_1	FOR_1	IF_2
0x4000110	      0x488b4c2408	                mov rcx, qword [rsp + 8]	        81	socks.c	FUNCTION_1	FOR_1	IF_5
0x4000115	          0x4c01eb	                            add rbx, r13	        81	socks.c	FUNCTION_1	FOR_1	IF_5
0x4000118	          0x488919	                    mov qword [rcx], rbx	        81	socks.c	FUNCTION_1	FOR_1	IF_5
0x400011b	            0xebc8	                           jmp 0x40000e5	        83	socks.c	FUNCTION_1	FOR_1	IF_5
0x400011d	      0xe800000000	                          call 0x4000122	        95	socks.c	FUNCTION_1
