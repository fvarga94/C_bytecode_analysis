pop3_done	CALL,3:ELSE,0:WHILE,0:FOR,0:SWITCH,0:DO,0:functions,0:IF,2	33
0x4000210	            0x4154	                                push r12	      1117	pop3.c	FUNCTION_28
0x4000212	              0x55	                                push rbp	      1117	pop3.c	FUNCTION_28
0x4000213	              0x53	                                push rbx	      1117	pop3.c	FUNCTION_28
0x4000214	          0x488b07	                    mov rax, qword [rdi]	      1120	pop3.c	FUNCTION_28
0x4000217	    0x488ba8e80100	           mov rbp, qword [rax + 0x1e8] 	      1120	pop3.c	FUNCTION_28
0x400021e	          0x4885ed	                           test rbp, rbp	      1124	pop3.c	FUNCTION_28	IF_1
0x4000221	            0x744d	                            je 0x4000270	      1124	pop3.c	FUNCTION_28	IF_1
0x4000223	            0x85f6	                           test esi, esi	      1127	pop3.c	FUNCTION_28	IF_2
0x4000225	            0x89f3	                            mov ebx, esi	      1127	pop3.c	FUNCTION_28	IF_2
0x4000227	            0x7537	                           jne 0x4000260	      1127	pop3.c	FUNCTION_28	IF_2
0x4000229	    0x4c8b25000000	            mov r12, qword [0x04000230] 	      1133	pop3.c	FUNCTION_28	CALL_2
0x4000230	        0x488b7d08	                mov rdi, qword [rbp + 8]	      1133	pop3.c	FUNCTION_28	CALL_2
0x4000234	        0x41ff1424	                        call qword [r12]	      1133	pop3.c	FUNCTION_28	CALL_2
0x4000238	    0x48c745080000	                  mov qword [rbp + 8], 0	      1133	pop3.c	FUNCTION_28	CALL_2
0x4000240	        0x488b7d10	            mov rdi, qword [rbp + 0x10] 	      1134	pop3.c	FUNCTION_28	CALL_3
0x4000244	        0x41ff1424	                        call qword [r12]	      1134	pop3.c	FUNCTION_28	CALL_3
0x4000248	    0x48c745100000	               mov qword [rbp + 0x10], 0	      1134	pop3.c	FUNCTION_28	CALL_3
0x4000250	    0xc74500000000	                      mov dword [rbp], 0	      1137	pop3.c	FUNCTION_28
0x4000257	            0x89d8	                            mov eax, ebx	      1139	pop3.c	FUNCTION_28
0x4000259	              0x5b	                                 pop rbx	      1140	pop3.c	FUNCTION_28
0x400025a	              0x5d	                                 pop rbp	      1140	pop3.c	FUNCTION_28
0x400025b	            0x415c	                                 pop r12	      1140	pop3.c	FUNCTION_28
0x400025d	              0xc3	                                     ret	      1140	pop3.c	FUNCTION_28
0x400025e	            0x6690	                                     nop	      1140	pop3.c	FUNCTION_28
0x4000260	      0xbe01000000	                              mov esi, 1	      1128	pop3.c	FUNCTION_28	IF_2	CALL_1
0x4000265	      0xe800000000	                          call 0x400026a	      1128	pop3.c	FUNCTION_28	IF_2	CALL_1
0x400026a	            0xebbd	                           jmp 0x4000229	      1128	pop3.c	FUNCTION_28	IF_2	CALL_1
0x400026c	         0xf1f4000	                         nop dword [rax]	      1128	pop3.c	FUNCTION_28	IF_2	CALL_1
0x4000270	              0x5b	                                 pop rbx	      1140	pop3.c	FUNCTION_28
0x4000271	            0x31c0	                            xor eax, eax	      1125	pop3.c	FUNCTION_28	IF_1
0x4000273	              0x5d	                                 pop rbp	      1140	pop3.c	FUNCTION_28
0x4000274	            0x415c	                                 pop r12	      1140	pop3.c	FUNCTION_28
0x4000276	              0xc3	                                     ret	      1140	pop3.c	FUNCTION_28
Curl_pop3_write	CALL,4:ELSE,5:WHILE,1:FOR,1:SWITCH,1:DO,0:functions,0:IF,13	157
0x4000b30	            0x4157	                                push r15	      1424	pop3.c	FUNCTION_39
0x4000b32	            0x4156	                                push r14	      1424	pop3.c	FUNCTION_39
0x4000b34	            0x4155	                                push r13	      1424	pop3.c	FUNCTION_39
0x4000b36	            0x4154	                                push r12	      1424	pop3.c	FUNCTION_39
0x4000b38	              0x55	                                push rbp	      1424	pop3.c	FUNCTION_39
0x4000b39	              0x53	                                push rbx	      1424	pop3.c	FUNCTION_39
0x4000b3a	          0x4889fb	                            mov rbx, rdi	      1424	pop3.c	FUNCTION_39
0x4000b3d	        0x4883ec08	                              sub rsp, 8	      1424	pop3.c	FUNCTION_39
0x4000b41	          0x4885d2	                           test rdx, rdx	      1440	pop3.c	FUNCTION_39	FOR_1
0x4000b44	          0x4c8b27	                    mov r12, qword [rdi]	      1427	pop3.c	FUNCTION_39
0x4000b47	     0xf8408020000	                            je 0x4000d55	      1440	pop3.c	FUNCTION_39	FOR_1
0x4000b4d	          0x4989d6	                            mov r14, rdx	      1440	pop3.c	FUNCTION_39	FOR_1
0x4000b50	          0x4989f5	                            mov r13, rsi	      1440	pop3.c	FUNCTION_39	FOR_1
0x4000b53	    0x488b87c80600	           mov rax, qword [rdi + 0x6c8] 	      1440	pop3.c	FUNCTION_39	FOR_1
0x4000b5a	            0x31ed	                            xor ebp, ebp	      1440	pop3.c	FUNCTION_39	FOR_1
0x4000b5c	            0x31d2	                            xor edx, edx	      1440	pop3.c	FUNCTION_39	FOR_1
0x4000b5e	          0x4531ff	                          xor r15d, r15d	      1440	pop3.c	FUNCTION_39	FOR_1
0x4000b61	            0xeb3b	                           jmp 0x4000b9e	      1440	pop3.c	FUNCTION_39	FOR_1
0x4000b63	       0xf1f440000	                   nop dword [rax + rax]	      1440	pop3.c	FUNCTION_39	FOR_1
0x4000b68	        0x4080fe2e	                           cmp sil, 0x2e	      1443	pop3.c	FUNCTION_39	FOR_1	SWITCH_1
0x4000b6c	     0xf84fe000000	                            je 0x4000c70	      1443	pop3.c	FUNCTION_39	FOR_1	SWITCH_1
0x4000b72	        0x4080fe0a	                            cmp sil, 0xa	      1443	pop3.c	FUNCTION_39	FOR_1	SWITCH_1
0x4000b76	     0xf84c4000000	                            je 0x4000c40	      1443	pop3.c	FUNCTION_39	FOR_1	SWITCH_1
0x4000b7c	            0x31f6	                            xor esi, esi	      1496	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8
0x4000b7e	          0x4885c0	                           test rax, rax	      1496	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8
0x4000b81	    0x48c783c80600	              mov qword [rbx + 0x6c8], 0	      1491	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_5
0x4000b8c	     0xf8506010000	                           jne 0x4000c98	      1496	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8
0x4000b92	        0x4883c501	                              add rbp, 1	      1440	pop3.c	FUNCTION_39	FOR_1
0x4000b96	          0x4889f0	                            mov rax, rsi	      1440	pop3.c	FUNCTION_39	FOR_1
0x4000b99	          0x4939ee	                            cmp r14, rbp	      1440	pop3.c	FUNCTION_39	FOR_1
0x4000b9c	            0x7462	                            je 0x4000c00	      1440	pop3.c	FUNCTION_39	FOR_1
0x4000b9e	    0x410fb6742d00	             movzx esi, byte [r13 + rbp]	      1443	pop3.c	FUNCTION_39	FOR_1	SWITCH_1
0x4000ba4	        0x4080fe0d	                            cmp sil, 0xd	      1443	pop3.c	FUNCTION_39	FOR_1	SWITCH_1
0x4000ba8	            0x75be	                           jne 0x4000b68	      1443	pop3.c	FUNCTION_39	FOR_1	SWITCH_1
0x4000baa	          0x4885c0	                           test rax, rax	      1445	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1
0x4000bad	     0xf8515010000	                           jne 0x4000cc8	      1445	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1
0x4000bb3	          0x4885ed	                           test rbp, rbp	      1448	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1	IF_2
0x4000bb6	    0x48c783c80600	              mov qword [rbx + 0x6c8], 1	      1446	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1
0x4000bc1	     0xf8499000000	                            je 0x4000c60	      1448	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1	IF_2
0x4000bc7	          0x4889e9	                            mov rcx, rbp	      1450	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1	IF_2	CALL_1
0x4000bca	      0xbe01000000	                              mov esi, 1	      1450	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1	IF_2	CALL_1
0x4000bcf	          0x4889df	                            mov rdi, rbx	      1450	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1	IF_2	CALL_1
0x4000bd2	          0x4829d1	                            sub rcx, rdx	      1450	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1	IF_2	CALL_1
0x4000bd5	          0x4c01ea	                            add rdx, r13	      1450	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1	IF_2	CALL_1
0x4000bd8	      0xe800000000	                          call 0x4000bdd	      1450	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1	IF_2	CALL_1
0x4000bdd	            0x85c0	                           test eax, eax	      1453	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1	IF_2	IF_3
0x4000bdf	     0xf85a7010000	                           jne 0x4000d8c	      1453	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1	IF_2	IF_3
0x4000be5	    0x488bb3c80600	           mov rsi, qword [rbx + 0x6c8] 	      1453	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1	IF_2	IF_3
0x4000bec	          0x4889ea	                            mov rdx, rbp	      1453	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_1	IF_2	IF_3
0x4000bef	        0x4883c501	                              add rbp, 1	      1440	pop3.c	FUNCTION_39	FOR_1
0x4000bf3	          0x4939ee	                            cmp r14, rbp	      1440	pop3.c	FUNCTION_39	FOR_1
0x4000bf6	          0x4889f0	                            mov rax, rsi	      1440	pop3.c	FUNCTION_39	FOR_1
0x4000bf9	            0x75a3	                           jne 0x4000b9e	      1440	pop3.c	FUNCTION_39	FOR_1
0x4000bfb	       0xf1f440000	                   nop dword [rax + rax]	      1440	pop3.c	FUNCTION_39	FOR_1
0x4000c00	        0x4883fe05	                              cmp rsi, 5	      1520	pop3.c	FUNCTION_39	IF_11
0x4000c04	     0xf8455010000	                            je 0x4000d5f	      1520	pop3.c	FUNCTION_39	IF_11
0x4000c0a	          0x4c39f2	                            cmp rdx, r14	      1536	pop3.c	FUNCTION_39	IF_13
0x4000c0d	     0xf8488010000	                            je 0x4000d9b	      1536	pop3.c	FUNCTION_39	IF_13
0x4000c13	          0x4885f6	                           test rsi, rsi	      1536	pop3.c	FUNCTION_39	IF_13
0x4000c16	     0xf857f010000	                           jne 0x4000d9b	      1536	pop3.c	FUNCTION_39	IF_13
0x4000c1c	        0x4883c408	                              add rsp, 8	      1542	pop3.c	FUNCTION_39
0x4000c20	          0x4c89f1	                            mov rcx, r14	      1537	pop3.c	FUNCTION_39	IF_13	CALL_4
0x4000c23	          0x4889df	                            mov rdi, rbx	      1537	pop3.c	FUNCTION_39	IF_13	CALL_4
0x4000c26	          0x4829d1	                            sub rcx, rdx	      1537	pop3.c	FUNCTION_39	IF_13	CALL_4
0x4000c29	          0x4c01ea	                            add rdx, r13	      1537	pop3.c	FUNCTION_39	IF_13	CALL_4
0x4000c2c	      0xbe01000000	                              mov esi, 1	      1537	pop3.c	FUNCTION_39	IF_13	CALL_4
0x4000c31	              0x5b	                                 pop rbx	      1542	pop3.c	FUNCTION_39
0x4000c32	              0x5d	                                 pop rbp	      1542	pop3.c	FUNCTION_39
0x4000c33	            0x415c	                                 pop r12	      1542	pop3.c	FUNCTION_39
0x4000c35	            0x415d	                                 pop r13	      1542	pop3.c	FUNCTION_39
0x4000c37	            0x415e	                                 pop r14	      1542	pop3.c	FUNCTION_39
0x4000c39	            0x415f	                                 pop r15	      1542	pop3.c	FUNCTION_39
0x4000c3b	      0xe900000000	                           jmp 0x4000c40	      1537	pop3.c	FUNCTION_39	IF_13	CALL_4
0x4000c40	        0x4883f801	                              cmp rax, 1	      1468	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_5
0x4000c44	            0x740a	                            je 0x4000c50	      1468	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_5
0x4000c46	        0x4883f804	                              cmp rax, 4	      1468	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_5
0x4000c4a	     0xf852cffffff	                           jne 0x4000b7c	      1468	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_5
0x4000c50	        0x488d7001	                      lea rsi, [rax + 1]	      1469	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_5
0x4000c54	          0x4885c0	                           test rax, rax	      1496	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8
0x4000c57	    0x4889b3c80600	            mov qword [rbx + 0x6c8], rsi	      1469	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_5
0x4000c5e	            0x757e	                           jne 0x4000cde	      1496	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8
0x4000c60	      0xbe01000000	                              mov esi, 1	      1496	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8
0x4000c65	      0xe928ffffff	                           jmp 0x4000b92	      1496	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8
0x4000c6a	    0x660f1f440000	                    nop word [rax + rax]	      1496	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8
0x4000c70	        0x4883f802	                              cmp rax, 2	      1477	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_6
0x4000c74	     0xf84ae000000	                            je 0x4000d28	      1477	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_6
0x4000c7a	        0x4883f803	                              cmp rax, 3	      1479	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_4	IF_7
0x4000c7e	     0xf85f8feffff	                           jne 0x4000b7c	      1479	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_4	IF_7
0x4000c84	    0x48c783c80600	              mov qword [rbx + 0x6c8], 0	      1482	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_4	IF_7
0x4000c8f	    0x41bf01000000	                             mov r15d, 1	      1481	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_4	IF_7
0x4000c95	           0xf1f00	                         nop dword [rax]	      1481	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_4	IF_7
0x4000c98	    0x488bb3d00600	           mov rsi, qword [rbx + 0x6d0] 	      1481	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_4	IF_7
0x4000c9f	              0x90	                                     nop	      1481	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_4	IF_7
0x4000ca0	          0x4885f6	                           test rsi, rsi	      1500	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	WHILE_1
0x4000ca3	            0x744b	                            je 0x4000cf0	      1500	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	WHILE_1
0x4000ca5	        0x4883ee01	                              sub rsi, 1	      1502	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	WHILE_1
0x4000ca9	        0x4883e801	                              sub rax, 1	      1500	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	WHILE_1
0x4000cad	    0x4889b3d00600	            mov qword [rbx + 0x6d0], rsi	      1502	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	WHILE_1
0x4000cb4	            0x75ea	                           jne 0x4000ca0	      1500	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	WHILE_1
0x4000cb6	    0x488bb3c80600	           mov rsi, qword [rbx + 0x6c8] 	      1500	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	WHILE_1
0x4000cbd	      0xe9d0feffff	                           jmp 0x4000b92	      1500	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	WHILE_1
0x4000cc2	    0x660f1f440000	                    nop word [rax + rax]	      1500	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	WHILE_1
0x4000cc8	        0x4883f803	                              cmp rax, 3	      1459	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_1	IF_4
0x4000ccc	            0x7472	                            je 0x4000d40	      1459	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_1	IF_4
0x4000cce	    0x48c783c80600	              mov qword [rbx + 0x6c8], 1	      1464	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_2
0x4000cd9	      0xbe01000000	                              mov esi, 1	      1464	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_2
0x4000cde	          0x4839c6	                            cmp rsi, rax	      1496	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8
0x4000ce1	     0xf87abfeffff	                            ja 0x4000b92	      1496	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8
0x4000ce7	            0xebaf	                           jmp 0x4000c98	      1496	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8
0x4000ce9	     0xf1f80000000	                         nop dword [rax]	      1496	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8
0x4000cf0	        0x488d48ff	                      lea rcx, [rax - 1]	      1496	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8
0x4000cf4	          0x4584ff	                         test r15b, r15b	      1496	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8
0x4000cf7	    0x488d15000000	                   lea rdx, [0x04000cfe]	      1508	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	IF_9	CALL_2
0x4000cfe	      0xbe01000000	                              mov esi, 1	      1508	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	IF_9	CALL_2
0x4000d03	          0x4889df	                            mov rdi, rbx	      1508	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	IF_9	CALL_2
0x4000d06	        0x480f44c8	                          cmove rcx, rax	      1508	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	IF_9	CALL_2
0x4000d0a	      0xe800000000	                          call 0x4000d0f	      1508	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	IF_9	CALL_2
0x4000d0f	            0x85c0	                           test eax, eax	      1511	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	IF_9	IF_10
0x4000d11	            0x7579	                           jne 0x4000d8c	      1511	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	IF_9	IF_10
0x4000d13	    0x488bb3c80600	           mov rsi, qword [rbx + 0x6c8] 	      1511	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	IF_9	IF_10
0x4000d1a	          0x4889ea	                            mov rdx, rbp	      1511	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	IF_9	IF_10
0x4000d1d	          0x4531ff	                          xor r15d, r15d	      1515	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	IF_9
0x4000d20	      0xe96dfeffff	                           jmp 0x4000b92	      1515	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	IF_9
0x4000d25	           0xf1f00	                         nop dword [rax]	      1515	pop3.c	FUNCTION_39	FOR_1	ELSE_5	IF_8	IF_9
0x4000d28	    0x48c783c80600	              mov qword [rbx + 0x6c8], 3	      1478	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_6
0x4000d33	      0xbe03000000	                              mov esi, 3	      1478	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_6
0x4000d38	      0xe955feffff	                           jmp 0x4000b92	      1478	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_6
0x4000d3d	           0xf1f00	                         nop dword [rax]	      1478	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	IF_6
0x4000d40	    0x48c783c80600	              mov qword [rbx + 0x6c8], 4	      1460	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_1	IF_4
0x4000d4b	      0xbe04000000	                              mov esi, 4	      1460	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_1	IF_4
0x4000d50	      0xe93dfeffff	                           jmp 0x4000b92	      1460	pop3.c	FUNCTION_39	FOR_1	SWITCH_1	ELSE_1	IF_4
0x4000d55	    0x4883bfc80600	              cmp qword [rdi + 0x6c8], 5	      1520	pop3.c	FUNCTION_39	IF_11
0x4000d5d	            0x753c	                           jne 0x4000d9b	      1520	pop3.c	FUNCTION_39	IF_11
0x4000d5f	    0x488d15000000	                   lea rdx, [0x04000d66]	      1524	pop3.c	FUNCTION_39	IF_11	CALL_3
0x4000d66	      0xb902000000	                              mov ecx, 2	      1524	pop3.c	FUNCTION_39	IF_11	CALL_3
0x4000d6b	      0xbe01000000	                              mov esi, 1	      1524	pop3.c	FUNCTION_39	IF_11	CALL_3
0x4000d70	          0x4889df	                            mov rdi, rbx	      1524	pop3.c	FUNCTION_39	IF_11	CALL_3
0x4000d73	      0xe800000000	                          call 0x4000d78	      1524	pop3.c	FUNCTION_39	IF_11	CALL_3
0x4000d78	    0x4183a424b401	     and dword [r12 + 0x1b4], 0xfffffffe	      1526	pop3.c	FUNCTION_39	IF_11
0x4000d81	    0x48c783c80600	              mov qword [rbx + 0x6c8], 0	      1527	pop3.c	FUNCTION_39	IF_11
0x4000d8c	        0x4883c408	                              add rsp, 8	      1542	pop3.c	FUNCTION_39
0x4000d90	              0x5b	                                 pop rbx	      1542	pop3.c	FUNCTION_39
0x4000d91	              0x5d	                                 pop rbp	      1542	pop3.c	FUNCTION_39
0x4000d92	            0x415c	                                 pop r12	      1542	pop3.c	FUNCTION_39
0x4000d94	            0x415d	                                 pop r13	      1542	pop3.c	FUNCTION_39
0x4000d96	            0x415e	                                 pop r14	      1542	pop3.c	FUNCTION_39
0x4000d98	            0x415f	                                 pop r15	      1542	pop3.c	FUNCTION_39
0x4000d9a	              0xc3	                                     ret	      1542	pop3.c	FUNCTION_39
0x4000d9b	        0x4883c408	                              add rsp, 8	      1542	pop3.c	FUNCTION_39
0x4000d9f	            0x31c0	                            xor eax, eax	      1529	pop3.c	FUNCTION_39	IF_11
0x4000da1	              0x5b	                                 pop rbx	      1542	pop3.c	FUNCTION_39
0x4000da2	              0x5d	                                 pop rbp	      1542	pop3.c	FUNCTION_39
0x4000da3	            0x415c	                                 pop r12	      1542	pop3.c	FUNCTION_39
0x4000da5	            0x415d	                                 pop r13	      1542	pop3.c	FUNCTION_39
0x4000da7	            0x415e	                                 pop r14	      1542	pop3.c	FUNCTION_39
0x4000da9	            0x415f	                                 pop r15	      1542	pop3.c	FUNCTION_39
0x4000dab	              0xc3	                                     ret	      1542	pop3.c	FUNCTION_39
pop3_statemach_act	CALL,13:ELSE,0:WHILE,0:FOR,0:SWITCH,1:DO,1:functions,0:IF,4	424
0x4000db0	            0x4157	                                push r15	       935	pop3.c	FUNCTION_22
0x4000db2	            0x4156	                                push r14	       935	pop3.c	FUNCTION_22
0x4000db4	            0x4155	                                push r13	       935	pop3.c	FUNCTION_22
0x4000db6	            0x4154	                                push r12	       935	pop3.c	FUNCTION_22
0x4000db8	              0x55	                                push rbp	       935	pop3.c	FUNCTION_22
0x4000db9	              0x53	                                push rbx	       935	pop3.c	FUNCTION_22
0x4000dba	          0x4889fb	                            mov rbx, rdi	       935	pop3.c	FUNCTION_22
0x4000dbd	        0x4883ec58	                           sub rsp, 0x58	       935	pop3.c	FUNCTION_22
0x4000dc1	    0x448baf580200	          mov r13d, dword [rdi + 0x258] 	       937	pop3.c	FUNCTION_22
0x4000dc8	    0x64488b042528	                mov rax, qword fs:[0x28]	       935	pop3.c	FUNCTION_22
0x4000dd1	      0x4889442448	             mov qword [rsp + 0x48], rax	       935	pop3.c	FUNCTION_22
0x4000dd6	            0x31c0	                            xor eax, eax	       935	pop3.c	FUNCTION_22
0x4000dd8	    0x83bfc0060000	              cmp dword [rdi + 0x6c0], 4	       944	pop3.c	FUNCTION_22	IF_1
0x4000ddf	    0x48c744243800	               mov qword [rsp + 0x38], 0	       941	pop3.c	FUNCTION_22
0x4000de8	     0xf84b2050000	                            je 0x40013a0	       944	pop3.c	FUNCTION_22	IF_1
0x4000dee	    0x4883bf800600	              cmp qword [rdi + 0x680], 0	       948	pop3.c	FUNCTION_22	IF_2
0x4000df6	    0x488daf500600	                  lea rbp, [rdi + 0x650]	       948	pop3.c	FUNCTION_22	IF_2
0x4000dfd	     0xf859d040000	                           jne 0x40012a0	       948	pop3.c	FUNCTION_22	IF_2
0x4000e03	      0x488d442434	                   lea rax, [rsp + 0x34]	       948	pop3.c	FUNCTION_22	IF_2
0x4000e08	      0x4c8d742438	                   lea r14, [rsp + 0x38]	       948	pop3.c	FUNCTION_22	IF_2
0x4000e0d	    0x4c8d25000000	                   lea r12, [0x04000e14]	       961	pop3.c	FUNCTION_22	DO_1	SWITCH_1
0x4000e14	        0x48890424	                    mov qword [rsp], rax	       961	pop3.c	FUNCTION_22	DO_1	SWITCH_1
0x4000e18	      0x488d442440	                   lea rax, [rsp + 0x40]	       784	pop3.c	FUNCTION_17	CALL_1
0x4000e1d	      0x4889442408	                mov qword [rsp + 8], rax	       784	pop3.c	FUNCTION_17	CALL_1
0x4000e22	    0x488d87d80600	                  lea rax, [rdi + 0x6d8]	       784	pop3.c	FUNCTION_17	CALL_1
0x4000e29	      0x4889442420	             mov qword [rsp + 0x20], rax	       784	pop3.c	FUNCTION_17	CALL_1
0x4000e2e	            0x6690	                                     nop	       784	pop3.c	FUNCTION_17	CALL_1
0x4000e30	        0x488b1424	                    mov rdx, qword [rsp]	       953	pop3.c	FUNCTION_22	DO_1	CALL_3
0x4000e34	          0x4c89f1	                            mov rcx, r14	       953	pop3.c	FUNCTION_22	DO_1	CALL_3
0x4000e37	          0x4889ee	                            mov rsi, rbp	       953	pop3.c	FUNCTION_22	DO_1	CALL_3
0x4000e3a	          0x4489ef	                           mov edi, r13d	       953	pop3.c	FUNCTION_22	DO_1	CALL_3
0x4000e3d	      0xe800000000	                          call 0x4000e42	       953	pop3.c	FUNCTION_22	DO_1	CALL_3
0x4000e42	            0x85c0	                           test eax, eax	       954	pop3.c	FUNCTION_22	DO_1	IF_3
0x4000e44	            0x754a	                           jne 0x4000e90	       954	pop3.c	FUNCTION_22	DO_1	IF_3
0x4000e46	        0x8b542434	            mov edx, dword [rsp + 0x34] 	       957	pop3.c	FUNCTION_22	DO_1	IF_4
0x4000e4a	            0x85d2	                           test edx, edx	       957	pop3.c	FUNCTION_22	DO_1	IF_4
0x4000e4c	            0x7479	                            je 0x4000ec7	       957	pop3.c	FUNCTION_22	DO_1	IF_4
0x4000e4e	    0x448bbbc00600	          mov r15d, dword [rbx + 0x6c0] 	       961	pop3.c	FUNCTION_22	DO_1	SWITCH_1
0x4000e55	        0x4183ff09	                             cmp r15d, 9	       961	pop3.c	FUNCTION_22	DO_1	SWITCH_1
0x4000e59	            0x7762	                            ja 0x4000ebd	       961	pop3.c	FUNCTION_22	DO_1	SWITCH_1
0x4000e5b	          0x4489f8	                           mov eax, r15d	       961	pop3.c	FUNCTION_22	DO_1	SWITCH_1
0x4000e5e	        0x49630484	         movsxd rax, dword [r12 + rax*4]	       961	pop3.c	FUNCTION_22	DO_1	SWITCH_1
0x4000e62	          0x4c01e0	                            add rax, r12	       961	pop3.c	FUNCTION_22	DO_1	SWITCH_1
0x4000e65	            0xffe0	                                 jmp rax	       961	pop3.c	FUNCTION_22	DO_1	SWITCH_1
0x4000e67	    0x660f1f840000	                    nop word [rax + rax]	       961	pop3.c	FUNCTION_22	DO_1	SWITCH_1
0x4000e70	          0x83fa2b	                           cmp edx, 0x2b	       890	pop3.c	FUNCTION_21	IF_1
0x4000e73	     0xf8467040000	                            je 0x40012e0	       890	pop3.c	FUNCTION_21	IF_1
0x4000e79	    0xc783c0060000	              mov dword [rbx + 0x6c0], 0	       305	pop3.c	ELSE_1	FUNCTION_3
0x4000e83	      0xb838000000	                           mov eax, 0x38	       892	pop3.c	FUNCTION_21	IF_1
0x4000e88	     0xf1f84000000	                   nop dword [rax + rax]	       892	pop3.c	FUNCTION_21	IF_1
0x4000e90	      0x488b4c2448	            mov rcx, qword [rsp + 0x48] 	      1006	pop3.c	FUNCTION_22
0x4000e95	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1006	pop3.c	FUNCTION_22
0x4000e9e	     0xf85b8060000	                           jne 0x400155c	      1006	pop3.c	FUNCTION_22
0x4000ea4	        0x4883c458	                           add rsp, 0x58	      1006	pop3.c	FUNCTION_22
0x4000ea8	              0x5b	                                 pop rbx	      1006	pop3.c	FUNCTION_22
0x4000ea9	              0x5d	                                 pop rbp	      1006	pop3.c	FUNCTION_22
0x4000eaa	            0x415c	                                 pop r12	      1006	pop3.c	FUNCTION_22
0x4000eac	            0x415d	                                 pop r13	      1006	pop3.c	FUNCTION_22
0x4000eae	            0x415e	                                 pop r14	      1006	pop3.c	FUNCTION_22
0x4000eb0	            0x415f	                                 pop r15	      1006	pop3.c	FUNCTION_22
0x4000eb2	              0xc3	                                     ret	      1006	pop3.c	FUNCTION_22
0x4000eb3	       0xf1f440000	                   nop dword [rax + rax]	      1006	pop3.c	FUNCTION_22
0x4000eb8	          0x83fa2b	                           cmp edx, 0x2b	       866	pop3.c	FUNCTION_20	IF_1
0x4000ebb	            0x751c	                           jne 0x4000ed9	       866	pop3.c	FUNCTION_20	IF_1
0x4000ebd	    0xc783c0060000	              mov dword [rbx + 0x6c0], 0	       305	pop3.c	ELSE_1	FUNCTION_3
0x4000ec7	            0x31c0	                            xor eax, eax	       953	pop3.c	FUNCTION_22	DO_1	CALL_3
0x4000ec9	            0xebc5	                           jmp 0x4000e90	       953	pop3.c	FUNCTION_22	DO_1	CALL_3
0x4000ecb	       0xf1f440000	                   nop dword [rax + rax]	       953	pop3.c	FUNCTION_22	DO_1	CALL_3
0x4000ed0	          0x83fa2b	                           cmp edx, 0x2b	       843	pop3.c	FUNCTION_19	IF_1
0x4000ed3	     0xf84d7010000	                            je 0x40010b0	       843	pop3.c	FUNCTION_19	IF_1
0x4000ed9	          0x488b3b	                    mov rdi, qword [rbx]	       867	pop3.c	FUNCTION_20	IF_1	CALL_1
0x4000edc	    0x488d35000000	                   lea rsi, [0x04000ee3]	       867	pop3.c	FUNCTION_20	IF_1	CALL_1
0x4000ee3	            0x31c0	                            xor eax, eax	       867	pop3.c	FUNCTION_20	IF_1	CALL_1
0x4000ee5	      0xe800000000	                          call 0x4000eea	       867	pop3.c	FUNCTION_20	IF_1	CALL_1
0x4000eea	      0xb843000000	                           mov eax, 0x43	       868	pop3.c	FUNCTION_20	IF_1
0x4000eef	            0xeb9f	                           jmp 0x4000e90	       868	pop3.c	FUNCTION_20	IF_1
0x4000ef1	     0xf1f80000000	                         nop dword [rax]	       868	pop3.c	FUNCTION_20	IF_1
0x4000ef8	          0x83fa2b	                           cmp edx, 0x2b	       822	pop3.c	FUNCTION_18	IF_1
0x4000efb	            0x74c0	                            je 0x4000ebd	       822	pop3.c	FUNCTION_18	IF_1
0x4000efd	          0x488b3b	                    mov rdi, qword [rbx]	       823	pop3.c	FUNCTION_18	IF_1	CALL_1
0x4000f00	    0x488d35000000	                   lea rsi, [0x04000f07]	       823	pop3.c	FUNCTION_18	IF_1	CALL_1
0x4000f07	            0x31c0	                            xor eax, eax	       823	pop3.c	FUNCTION_18	IF_1	CALL_1
0x4000f09	      0xe800000000	                          call 0x4000f0e	       823	pop3.c	FUNCTION_18	IF_1	CALL_1
0x4000f0e	      0xb843000000	                           mov eax, 0x43	       824	pop3.c	FUNCTION_18	IF_1
0x4000f13	      0xe978ffffff	                           jmp 0x4000e90	       824	pop3.c	FUNCTION_18	IF_1
0x4000f18	     0xf1f84000000	                   nop dword [rax + rax]	       824	pop3.c	FUNCTION_18	IF_1
0x4000f20	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       784	pop3.c	FUNCTION_17	CALL_1
0x4000f25	      0x488b7c2420	            mov rdi, qword [rsp + 0x20] 	       784	pop3.c	FUNCTION_17	CALL_1
0x4000f2a	          0x4889de	                            mov rsi, rbx	       784	pop3.c	FUNCTION_17	CALL_1
0x4000f2d	          0x4c8b3b	                    mov r15, qword [rbx]	       778	pop3.c	FUNCTION_17
0x4000f30	      0xe800000000	                          call 0x4000f35	       784	pop3.c	FUNCTION_17	CALL_1
0x4000f35	            0x85c0	                           test eax, eax	       785	pop3.c	FUNCTION_17	IF_1
0x4000f37	     0xf8553ffffff	                           jne 0x4000e90	       785	pop3.c	FUNCTION_17	IF_1
0x4000f3d	        0x8b442440	            mov eax, dword [rsp + 0x40] 	       786	pop3.c	FUNCTION_17	IF_1	SWITCH_1
0x4000f41	            0x85c0	                           test eax, eax	       786	pop3.c	FUNCTION_17	IF_1	SWITCH_1
0x4000f43	     0xf8467030000	                            je 0x40012b0	       786	pop3.c	FUNCTION_17	IF_1	SWITCH_1
0x4000f49	          0x83f802	                              cmp eax, 2	       786	pop3.c	FUNCTION_17	IF_1	SWITCH_1
0x4000f4c	     0xf8598000000	                           jne 0x4000fea	       786	pop3.c	FUNCTION_17	IF_1	SWITCH_1
0x4000f52	    0xc783c0060000	              mov dword [rbx + 0x6c0], 0	       305	pop3.c	ELSE_1	FUNCTION_3
0x4000f5c	      0xe989000000	                           jmp 0x4000fea	       305	pop3.c	ELSE_1	FUNCTION_3
0x4000f61	     0xf1f80000000	                         nop dword [rax]	       305	pop3.c	ELSE_1	FUNCTION_3
0x4000f68	          0x83fa2b	                           cmp edx, 0x2b	       758	pop3.c	FUNCTION_16	IF_1
0x4000f6b	          0x488b3b	                    mov rdi, qword [rbx]	       754	pop3.c	FUNCTION_16
0x4000f6e	     0xf841c040000	                            je 0x4001390	       758	pop3.c	FUNCTION_16	IF_1
0x4000f74	    0x83bff0070000	              cmp dword [rdi + 0x7f0], 1	       759	pop3.c	FUNCTION_16	IF_1	IF_2
0x4000f7b	            0x745d	                            je 0x4000fda	       759	pop3.c	FUNCTION_16	IF_1	IF_2
0x4000f7d	    0x488d35000000	                   lea rsi, [0x04000f84]	       760	pop3.c	FUNCTION_16	IF_1	IF_2	CALL_1
0x4000f84	            0x31c0	                            xor eax, eax	       760	pop3.c	FUNCTION_16	IF_1	IF_2	CALL_1
0x4000f86	      0xe800000000	                          call 0x4000f8b	       760	pop3.c	FUNCTION_16	IF_1	IF_2	CALL_1
0x4000f8b	      0xb840000000	                           mov eax, 0x40	       761	pop3.c	FUNCTION_16	IF_1	IF_2
0x4000f90	      0xe9fbfeffff	                           jmp 0x4000e90	       761	pop3.c	FUNCTION_16	IF_1	IF_2
0x4000f95	           0xf1f00	                         nop dword [rax]	       761	pop3.c	FUNCTION_16	IF_1	IF_2
0x4000f98	          0x4c8b0b	                     mov r9, qword [rbx]	       663	pop3.c	FUNCTION_15
0x4000f9b	        0x89542418	             mov dword [rsp + 0x18], edx	       663	pop3.c	FUNCTION_15
0x4000f9f	    0x498b81200d00	            mov rax, qword [r9 + 0xd20] 	       665	pop3.c	FUNCTION_15
0x4000fa6	      0x4c894c2410	              mov qword [rsp + 0x10], r9	       665	pop3.c	FUNCTION_15
0x4000fab	          0x4889c7	                            mov rdi, rax	       666	pop3.c	FUNCTION_15	CALL_1
0x4000fae	      0x4889442428	             mov qword [rsp + 0x28], rax	       665	pop3.c	FUNCTION_15
0x4000fb3	      0xe800000000	                          call 0x4000fb8	       666	pop3.c	FUNCTION_15	CALL_1
0x4000fb8	        0x8b542418	            mov edx, dword [rsp + 0x18] 	       672	pop3.c	FUNCTION_15	IF_1
0x4000fbc	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	       672	pop3.c	FUNCTION_15	IF_1
0x4000fc1	          0x83fa2a	                           cmp edx, 0x2a	       672	pop3.c	FUNCTION_15	IF_1
0x4000fc4	     0xf848e010000	                            je 0x4001158	       672	pop3.c	FUNCTION_15	IF_1
0x4000fca	          0x83fa2b	                           cmp edx, 0x2b	       721	pop3.c	FUNCTION_15	ELSE_3	IF_7
0x4000fcd	     0xf848d000000	                            je 0x4001060	       721	pop3.c	FUNCTION_15	ELSE_3	IF_7
0x4000fd3	    0x838bf8060000	               or dword [rbx + 0x6f8], 1	       740	pop3.c	FUNCTION_15	ELSE_7
0x4000fda	          0x4889df	                            mov rdi, rbx	       742	pop3.c	FUNCTION_15	ELSE_7	CALL_10
0x4000fdd	      0xe8eef9ffff	    call sym.pop3_perform_authentication	       742	pop3.c	FUNCTION_15	ELSE_7	CALL_10
0x4000fe2	            0x85c0	                           test eax, eax	      1003	pop3.c	FUNCTION_22	CALL_13
0x4000fe4	     0xf85a6feffff	                           jne 0x4000e90	      1003	pop3.c	FUNCTION_22	CALL_13
0x4000fea	    0x448bbbc00600	          mov r15d, dword [rbx + 0x6c0] 	      1003	pop3.c	FUNCTION_22	CALL_13
0x4000ff1	          0x4585ff	                         test r15d, r15d	      1003	pop3.c	FUNCTION_22	CALL_13
0x4000ff4	     0xf84cdfeffff	                            je 0x4000ec7	      1003	pop3.c	FUNCTION_22	CALL_13
0x4000ffa	          0x4889ef	                            mov rdi, rbp	      1003	pop3.c	FUNCTION_22	CALL_13
0x4000ffd	      0xe800000000	                          call 0x4001002	      1003	pop3.c	FUNCTION_22	CALL_13
0x4001002	            0x84c0	                             test al, al	      1003	pop3.c	FUNCTION_22	CALL_13
0x4001004	     0xf8526feffff	                           jne 0x4000e30	      1003	pop3.c	FUNCTION_22	CALL_13
0x400100a	            0x31c0	                            xor eax, eax	       953	pop3.c	FUNCTION_22	DO_1	CALL_3
0x400100c	      0xe97ffeffff	                           jmp 0x4000e90	       953	pop3.c	FUNCTION_22	DO_1	CALL_3
0x4001011	     0xf1f80000000	                         nop dword [rax]	       953	pop3.c	FUNCTION_22	DO_1	CALL_3
0x4001018	          0x4c8b3b	                    mov r15, qword [rbx]	       612	pop3.c	FUNCTION_14
0x400101b	        0x89542410	             mov dword [rsp + 0x10], edx	       612	pop3.c	FUNCTION_14
0x400101f	    0x498b87200d00	           mov rax, qword [r15 + 0xd20] 	       614	pop3.c	FUNCTION_14
0x4001026	          0x4889c7	                            mov rdi, rax	       615	pop3.c	FUNCTION_14	CALL_1
0x4001029	      0x4889442418	             mov qword [rsp + 0x18], rax	       614	pop3.c	FUNCTION_14
0x400102e	      0xe800000000	                          call 0x4001033	       615	pop3.c	FUNCTION_14	CALL_1
0x4001033	        0x8b542410	            mov edx, dword [rsp + 0x10] 	       620	pop3.c	FUNCTION_14	IF_1
0x4001037	          0x83fa2b	                           cmp edx, 0x2b	       620	pop3.c	FUNCTION_14	IF_1
0x400103a	     0xf84b0000000	                            je 0x40010f0	       620	pop3.c	FUNCTION_14	IF_1
0x4001040	    0x488d35000000	                   lea rsi, [0x04001047]	       621	pop3.c	FUNCTION_14	IF_1	CALL_2
0x4001047	            0x31c0	                            xor eax, eax	       621	pop3.c	FUNCTION_14	IF_1	CALL_2
0x4001049	          0x4c89ff	                            mov rdi, r15	       621	pop3.c	FUNCTION_14	IF_1	CALL_2
0x400104c	      0xe800000000	                          call 0x4001051	       621	pop3.c	FUNCTION_14	IF_1	CALL_2
0x4001051	      0xb808000000	                              mov eax, 8	       622	pop3.c	FUNCTION_14	IF_1
0x4001056	      0xe935feffff	                           jmp 0x4000e90	       622	pop3.c	FUNCTION_14	IF_1
0x400105b	       0xf1f440000	                   nop dword [rax + rax]	       622	pop3.c	FUNCTION_14	IF_1
0x4001060	    0x418b81f00700	            mov eax, dword [r9 + 0x7f0] 	       722	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8
0x4001067	            0x85c0	                           test eax, eax	       722	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8
0x4001069	     0xf846bffffff	                            je 0x4000fda	       722	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8
0x400106f	    0x80bb90020000	               cmp byte [rbx + 0x290], 0	       722	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8
0x4001076	     0xf855effffff	                           jne 0x4000fda	       722	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8
0x400107c	    0x80bb08070000	               cmp byte [rbx + 0x708], 0	       724	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	IF_9
0x4001083	     0xf851e040000	                           jne 0x40014a7	       724	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	IF_9
0x4001089	          0x83f801	                              cmp eax, 1	       727	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	ELSE_4	IF_10
0x400108c	     0xf8448ffffff	                            je 0x4000fda	       727	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	ELSE_4	IF_10
0x4001092	    0x488d35000000	                   lea rsi, [0x04001099]	       731	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	ELSE_5	CALL_8
0x4001099	            0x31c0	                            xor eax, eax	       731	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	ELSE_5	CALL_8
0x400109b	          0x4c89cf	                             mov rdi, r9	       731	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	ELSE_5	CALL_8
0x400109e	      0xe800000000	                          call 0x40010a3	       731	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	ELSE_5	CALL_8
0x40010a3	      0xb840000000	                           mov eax, 0x40	       732	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	ELSE_5
0x40010a8	      0xe9e3fdffff	                           jmp 0x4000e90	       732	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	ELSE_5
0x40010ad	           0xf1f00	                         nop dword [rax]	       732	pop3.c	FUNCTION_15	ELSE_3	IF_7	IF_8	ELSE_5
0x40010b0	    0x488b93180200	           mov rdx, qword [rbx + 0x218] 	       850	pop3.c	FUNCTION_19	ELSE_1
0x40010b7	    0x488d05000000	                   lea rax, [0x040010be]	       849	pop3.c	FUNCTION_19	ELSE_1	CALL_2
0x40010be	    0x488d35000000	                   lea rsi, [0x040010c5]	       849	pop3.c	FUNCTION_19	ELSE_1	CALL_2
0x40010c5	          0x4889ef	                            mov rdi, rbp	       849	pop3.c	FUNCTION_19	ELSE_1	CALL_2
0x40010c8	          0x4885d2	                           test rdx, rdx	       849	pop3.c	FUNCTION_19	ELSE_1	CALL_2
0x40010cb	        0x480f44d0	                          cmove rdx, rax	       849	pop3.c	FUNCTION_19	ELSE_1	CALL_2
0x40010cf	            0x31c0	                            xor eax, eax	       849	pop3.c	FUNCTION_19	ELSE_1	CALL_2
0x40010d1	      0xe800000000	                          call 0x40010d6	       849	pop3.c	FUNCTION_19	ELSE_1	CALL_2
0x40010d6	            0x85c0	                           test eax, eax	       851	pop3.c	FUNCTION_19	IF_2
0x40010d8	     0xf85b2fdffff	                           jne 0x4000e90	       851	pop3.c	FUNCTION_19	IF_2
0x40010de	    0xc783c0060000	              mov dword [rbx + 0x6c0], 8	       305	pop3.c	ELSE_1	FUNCTION_3
0x40010e8	      0xe90dffffff	                           jmp 0x4000ffa	       305	pop3.c	ELSE_1	FUNCTION_3
0x40010ed	           0xf1f00	                         nop dword [rax]	       305	pop3.c	ELSE_1	FUNCTION_3
0x40010f0	        0x4883f803	                              cmp rax, 3	       626	pop3.c	FUNCTION_14	ELSE_1	IF_2
0x40010f4	            0x7614	                           jbe 0x400110a	       626	pop3.c	FUNCTION_14	ELSE_1	IF_2
0x40010f6	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       626	pop3.c	FUNCTION_14	ELSE_1	IF_2
0x40010fb	        0x488d70fe	                      lea rsi, [rax - 2]	       626	pop3.c	FUNCTION_14	ELSE_1	IF_2
0x40010ff	      0x807c01fe3e	         cmp byte [rcx + rax - 2], 0x3e 	       626	pop3.c	FUNCTION_14	ELSE_1	IF_2
0x4001104	     0xf840f030000	                            je 0x4001419	       626	pop3.c	FUNCTION_14	ELSE_1	IF_2
0x400110a	    0x488d15000000	                   lea rdx, [0x04001111]	       325	pop3.c	FUNCTION_4	CALL_1
0x4001111	    0x488d35000000	                   lea rsi, [0x04001118]	       325	pop3.c	FUNCTION_4	CALL_1
0x4001118	            0x31c0	                            xor eax, eax	       325	pop3.c	FUNCTION_4	CALL_1
0x400111a	    0xc783e4060000	              mov dword [rbx + 0x6e4], 0	       320	pop3.c	FUNCTION_4
0x4001124	    0xc783ec060000	              mov dword [rbx + 0x6ec], 0	       321	pop3.c	FUNCTION_4
0x400112e	          0x4889ef	                            mov rdi, rbp	       325	pop3.c	FUNCTION_4	CALL_1
0x4001131	    0xc68308070000	               mov byte [rbx + 0x708], 0	       322	pop3.c	FUNCTION_4
0x4001138	      0xe800000000	                          call 0x400113d	       325	pop3.c	FUNCTION_4	CALL_1
0x400113d	            0x85c0	                           test eax, eax	       327	pop3.c	FUNCTION_4	IF_1
0x400113f	     0xf854bfdffff	                           jne 0x4000e90	       327	pop3.c	FUNCTION_4	IF_1
0x4001145	    0xc783c0060000	              mov dword [rbx + 0x6c0], 2	       305	pop3.c	ELSE_1	FUNCTION_3
0x400114f	      0xe9a6feffff	                           jmp 0x4000ffa	       305	pop3.c	ELSE_1	FUNCTION_3
0x4001154	         0xf1f4000	                         nop dword [rax]	       305	pop3.c	ELSE_1	FUNCTION_3
0x4001158	        0x4883f803	                              cmp rax, 3	       674	pop3.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x400115c	      0x4889442410	             mov qword [rsp + 0x10], rax	       674	pop3.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x4001161	     0xf8693feffff	                           jbe 0x4000ffa	       674	pop3.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x4001167	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       674	pop3.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x400116c	    0x488d35000000	                   lea rsi, [0x04001173]	       674	pop3.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x4001173	      0xba04000000	                              mov edx, 4	       674	pop3.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x4001178	      0xe800000000	                          call 0x400117d	       674	pop3.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x400117d	            0x85c0	                           test eax, eax	       674	pop3.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x400117f	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	       674	pop3.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x4001184	     0xf8411030000	                            je 0x400149b	       674	pop3.c	FUNCTION_15	IF_1	IF_2	CALL_2
0x400118a	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       678	pop3.c	FUNCTION_15	IF_1	ELSE_1	IF_3	CALL_3
0x400118f	    0x488d35000000	                   lea rsi, [0x04001196]	       678	pop3.c	FUNCTION_15	IF_1	ELSE_1	IF_3	CALL_3
0x4001196	      0xba04000000	                              mov edx, 4	       678	pop3.c	FUNCTION_15	IF_1	ELSE_1	IF_3	CALL_3
0x400119b	      0x4c89442410	              mov qword [rsp + 0x10], r8	       678	pop3.c	FUNCTION_15	IF_1	ELSE_1	IF_3	CALL_3
0x40011a0	      0xe800000000	                          call 0x40011a5	       678	pop3.c	FUNCTION_15	IF_1	ELSE_1	IF_3	CALL_3
0x40011a5	            0x85c0	                           test eax, eax	       678	pop3.c	FUNCTION_15	IF_1	ELSE_1	IF_3	CALL_3
0x40011a7	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	       678	pop3.c	FUNCTION_15	IF_1	ELSE_1	IF_3	CALL_3
0x40011ac	     0xf8424030000	                            je 0x40014d6	       678	pop3.c	FUNCTION_15	IF_1	ELSE_1	IF_3	CALL_3
0x40011b2	        0x4983f804	                               cmp r8, 4	       682	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	CALL_4
0x40011b6	      0x4c89442410	              mov qword [rsp + 0x10], r8	       682	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	CALL_4
0x40011bb	     0xf8439feffff	                            je 0x4000ffa	       682	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	CALL_4
0x40011c1	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       682	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	CALL_4
0x40011c6	    0x488d35000000	                   lea rsi, [0x040011cd]	       682	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	CALL_4
0x40011cd	      0xba05000000	                              mov edx, 5	       682	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	CALL_4
0x40011d2	      0xe800000000	                          call 0x40011d7	       682	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	CALL_4
0x40011d7	            0x85c0	                           test eax, eax	       682	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	CALL_4
0x40011d9	     0xf851bfeffff	                           jne 0x4000ffa	       682	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	CALL_4
0x40011df	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	       694	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x40011e4	    0x838bf8060000	               or dword [rbx + 0x6f8], 4	       683	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4
0x40011eb	        0x4983e805	                               sub r8, 5	       694	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x40011ef	     0xf84fcfdffff	                            je 0x4000ff1	       694	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x40011f5	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       686	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4
0x40011fa	    0x49b900260000	                  movabs r9, 0x100002600	       707	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4001204	      0x48896c2428	             mov qword [rsp + 0x28], rbp	       707	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4001209	      0x44896c2418	            mov dword [rsp + 0x18], r13d	       707	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x400120e	          0x4c89c5	                             mov rbp, r8	       707	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4001211	        0x4883c705	                              add rdi, 5	       686	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4
0x4001215	           0xf1f00	                         nop dword [rax]	       686	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4
0x4001218	           0xfb607	                   movzx eax, byte [rdi]	       695	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x400121b	            0x3c20	                            cmp al, 0x20	       695	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x400121d	     0xf863d020000	                           jbe 0x4001460	       695	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4001223	          0x4989ff	                            mov r15, rdi	       695	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4001226	          0x4531ed	                          xor r13d, r13d	       716	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1
0x4001229	            0xeb16	                           jmp 0x4001241	       716	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1
0x400122b	       0xf1f440000	                   nop dword [rax + rax]	       716	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1
0x4001230	        0x4983c501	                              add r13, 1	       709	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4001234	        0x4983c701	                              add r15, 1	       709	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4001238	          0x4c39ed	                            cmp rbp, r13	       706	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x400123b	     0xf863f020000	                           jbe 0x4001480	       706	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4001241	        0x410fb607	                   movzx eax, byte [r15]	       706	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4001245	            0x3c20	                            cmp al, 0x20	       706	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4001247	            0x77e7	                            ja 0x4001230	       706	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4001249	        0x490fa3c1	                              bt r9, rax	       707	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x400124d	            0x73e1	                           jae 0x4001230	       707	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x400124f	      0x488b542408	                mov rdx, qword [rsp + 8]	       712	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	CALL_5
0x4001254	          0x4c89ee	                            mov rsi, r13	       712	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	CALL_5
0x4001257	      0x4c894c2410	              mov qword [rsp + 0x10], r9	       712	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	CALL_5
0x400125c	      0xe800000000	                          call 0x4001261	       712	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	CALL_5
0x4001261	            0x85c0	                           test eax, eax	       713	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	IF_6
0x4001263	      0x4c8b4c2410	              mov r9, qword [rsp + 0x10]	       713	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	IF_6
0x4001268	            0x740b	                            je 0x4001275	       713	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	IF_6
0x400126a	      0x4c396c2440	            cmp qword [rsp + 0x40], r13 	       713	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	IF_6
0x400126f	     0xf841b020000	                            je 0x4001490	       713	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	IF_6
0x4001275	          0x4c29ed	                            sub rbp, r13	       717	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1
0x4001278	          0x4c89ff	                            mov rdi, r15	       716	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1
0x400127b	          0x4885ed	                           test rbp, rbp	       694	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x400127e	            0x7598	                           jne 0x4001218	       694	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4001280	      0x448b6c2418	           mov r13d, dword [rsp + 0x18] 	       694	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4001285	      0x488b6c2428	            mov rbp, qword [rsp + 0x28] 	       694	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x400128a	    0x448bbbc00600	          mov r15d, dword [rbx + 0x6c0] 	       694	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4001291	      0xe95bfdffff	                           jmp 0x4000ff1	       694	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4001296	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       694	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x40012a0	          0x4889ef	                            mov rdi, rbp	       949	pop3.c	FUNCTION_22	CALL_2
0x40012a3	      0xe800000000	                          call 0x40012a8	       949	pop3.c	FUNCTION_22	CALL_2
0x40012a8	      0xe9e3fbffff	                           jmp 0x4000e90	       949	pop3.c	FUNCTION_22	CALL_2
0x40012ad	           0xf1f00	                         nop dword [rax]	       949	pop3.c	FUNCTION_22	CALL_2
0x40012b0	    0x8b83f8060000	           mov eax, dword [rbx + 0x6f8] 	       792	pop3.c	FUNCTION_17	IF_1	SWITCH_1	IF_2
0x40012b6	    0x2383fc060000	            and eax, dword [rbx + 0x6fc]	       792	pop3.c	FUNCTION_17	IF_1	SWITCH_1	IF_2
0x40012bc	            0xa802	                              test al, 2	       792	pop3.c	FUNCTION_17	IF_1	SWITCH_1	IF_2
0x40012be	     0xf84ec000000	                            je 0x40013b0	       792	pop3.c	FUNCTION_17	IF_1	SWITCH_1	IF_2
0x40012c4	    0x80bba0030000	               cmp byte [rbx + 0x3a0], 0	       424	pop3.c	FUNCTION_8	IF_1
0x40012cb	     0xf8481fcffff	                            je 0x4000f52	       424	pop3.c	FUNCTION_8	IF_1
0x40012d1	          0x4889df	                            mov rdi, rbx	       424	pop3.c	FUNCTION_8	IF_1
0x40012d4	      0xe807f2ffff	      call sym.pop3_perform_apop.part.10	       424	pop3.c	FUNCTION_8	IF_1
0x40012d9	      0xe904fdffff	                           jmp 0x4000fe2	       424	pop3.c	FUNCTION_8	IF_1
0x40012de	            0x6690	                                     nop	       424	pop3.c	FUNCTION_8	IF_1
0x40012e0	          0x488b2b	                    mov rbp, qword [rbx]	       883	pop3.c	FUNCTION_21
0x40012e3	    0x488b85e80100	           mov rax, qword [rbp + 0x1e8] 	       884	pop3.c	FUNCTION_21
0x40012ea	    0x48c783c80600	              mov qword [rbx + 0x6c8], 2	       899	pop3.c	FUNCTION_21
0x40012f5	    0x48c783d00600	              mov qword [rbx + 0x6d0], 2	       903	pop3.c	FUNCTION_21
0x4001300	            0x8b08	                    mov ecx, dword [rax]	       905	pop3.c	FUNCTION_21	IF_2
0x4001302	            0x85c9	                           test ecx, ecx	       905	pop3.c	FUNCTION_21	IF_2
0x4001304	     0xf85b3fbffff	                           jne 0x4000ebd	       905	pop3.c	FUNCTION_21	IF_2
0x400130a	        0x4883ec08	                              sub rsp, 8	       907	pop3.c	FUNCTION_21	IF_2	CALL_2
0x400130e	          0x4531c0	                            xor r8d, r8d	       907	pop3.c	FUNCTION_21	IF_2	CALL_2
0x4001311	            0x31c9	                            xor ecx, ecx	       907	pop3.c	FUNCTION_21	IF_2	CALL_2
0x4001313	            0x6a00	                                  push 0	       907	pop3.c	FUNCTION_21	IF_2	CALL_2
0x4001315	    0x48c7c2ffffff	             mov rdx, 0xffffffffffffffff	       907	pop3.c	FUNCTION_21	IF_2	CALL_2
0x400131c	            0x31f6	                            xor esi, esi	       907	pop3.c	FUNCTION_21	IF_2	CALL_2
0x400131e	          0x4889df	                            mov rdi, rbx	       907	pop3.c	FUNCTION_21	IF_2	CALL_2
0x4001321	    0x41b9ffffffff	                     mov r9d, 0xffffffff	       907	pop3.c	FUNCTION_21	IF_2	CALL_2
0x4001327	      0xe800000000	                          call 0x400132c	       907	pop3.c	FUNCTION_21	IF_2	CALL_2
0x400132c	    0x488bbb500600	           mov rdi, qword [rbx + 0x650] 	       909	pop3.c	FUNCTION_21	IF_2	IF_3
0x4001333	              0x58	                                 pop rax	       909	pop3.c	FUNCTION_21	IF_2	IF_3
0x4001334	              0x5a	                                 pop rdx	       909	pop3.c	FUNCTION_21	IF_2	IF_3
0x4001335	          0x4885ff	                           test rdi, rdi	       909	pop3.c	FUNCTION_21	IF_2	IF_3
0x4001338	     0xf847ffbffff	                            je 0x4000ebd	       909	pop3.c	FUNCTION_21	IF_2	IF_3
0x400133e	    0x80bde1070000	               cmp byte [rbp + 0x7e1], 0	       914	pop3.c	FUNCTION_21	IF_2	IF_3	IF_4
0x4001345	            0x7521	                           jne 0x4001368	       914	pop3.c	FUNCTION_21	IF_2	IF_3	IF_4
0x4001347	    0x488b93580600	           mov rdx, qword [rbx + 0x658] 	       915	pop3.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_3
0x400134e	          0x4889fe	                            mov rsi, rdi	       915	pop3.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_3
0x4001351	          0x4889df	                            mov rdi, rbx	       915	pop3.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_3
0x4001354	      0xe800000000	                          call 0x4001359	       915	pop3.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_3
0x4001359	            0x85c0	                           test eax, eax	       916	pop3.c	FUNCTION_21	IF_2	IF_3	IF_4	IF_5
0x400135b	     0xf852ffbffff	                           jne 0x4000e90	       916	pop3.c	FUNCTION_21	IF_2	IF_3	IF_4	IF_5
0x4001361	    0x488bbb500600	           mov rdi, qword [rbx + 0x650] 	       916	pop3.c	FUNCTION_21	IF_2	IF_3	IF_4	IF_5
0x4001368	    0x488b05000000	            mov rax, qword [0x0400136f] 	       921	pop3.c	FUNCTION_21	IF_2	IF_3	CALL_4
0x400136f	            0xff10	                        call qword [rax]	       921	pop3.c	FUNCTION_21	IF_2	IF_3	CALL_4
0x4001371	    0x48c783500600	              mov qword [rbx + 0x650], 0	       921	pop3.c	FUNCTION_21	IF_2	IF_3	CALL_4
0x400137c	    0x48c783580600	              mov qword [rbx + 0x658], 0	       924	pop3.c	FUNCTION_21	IF_2	IF_3
0x4001387	      0xe931fbffff	                           jmp 0x4000ebd	       924	pop3.c	FUNCTION_21	IF_2	IF_3
0x400138c	         0xf1f4000	                         nop dword [rax]	       924	pop3.c	FUNCTION_21	IF_2	IF_3
0x4001390	          0x4889df	                            mov rdi, rbx	       767	pop3.c	FUNCTION_16	CALL_3
0x4001393	      0xe8b8efffff	       call sym.pop3_perform_upgrade_tls	       767	pop3.c	FUNCTION_16	CALL_3
0x4001398	      0xe945fcffff	                           jmp 0x4000fe2	       767	pop3.c	FUNCTION_16	CALL_3
0x400139d	           0xf1f00	                         nop dword [rax]	       767	pop3.c	FUNCTION_16	CALL_3
0x40013a0	      0xe8abefffff	       call sym.pop3_perform_upgrade_tls	       945	pop3.c	FUNCTION_22	CALL_1
0x40013a5	      0xe9e6faffff	                           jmp 0x4000e90	       945	pop3.c	FUNCTION_22	CALL_1
0x40013aa	    0x660f1f440000	                    nop word [rax + rax]	       945	pop3.c	FUNCTION_22	CALL_1
0x40013b0	            0xa801	                              test al, 1	       797	pop3.c	FUNCTION_17	IF_1	SWITCH_1	ELSE_1	IF_3
0x40013b2	            0x744a	                            je 0x40013fe	       797	pop3.c	FUNCTION_17	IF_1	SWITCH_1	ELSE_1	IF_3
0x40013b4	    0x80bba0030000	               cmp byte [rbx + 0x3a0], 0	       391	pop3.c	FUNCTION_7	IF_1
0x40013bb	     0xf8491fbffff	                            je 0x4000f52	       391	pop3.c	FUNCTION_7	IF_1
0x40013c1	    0x488b93100200	           mov rdx, qword [rbx + 0x210] 	       399	pop3.c	FUNCTION_7
0x40013c8	    0x488d05000000	                   lea rax, [0x040013cf]	       398	pop3.c	FUNCTION_7	CALL_2
0x40013cf	    0x488d35000000	                   lea rsi, [0x040013d6]	       398	pop3.c	FUNCTION_7	CALL_2
0x40013d6	          0x4889ef	                            mov rdi, rbp	       398	pop3.c	FUNCTION_7	CALL_2
0x40013d9	          0x4885d2	                           test rdx, rdx	       398	pop3.c	FUNCTION_7	CALL_2
0x40013dc	        0x480f44d0	                          cmove rdx, rax	       398	pop3.c	FUNCTION_7	CALL_2
0x40013e0	            0x31c0	                            xor eax, eax	       398	pop3.c	FUNCTION_7	CALL_2
0x40013e2	      0xe800000000	                          call 0x40013e7	       398	pop3.c	FUNCTION_7	CALL_2
0x40013e7	            0x85c0	                           test eax, eax	       400	pop3.c	FUNCTION_7	IF_2
0x40013e9	     0xf85a1faffff	                           jne 0x4000e90	       400	pop3.c	FUNCTION_7	IF_2
0x40013ef	    0xc783c0060000	              mov dword [rbx + 0x6c0], 7	       305	pop3.c	ELSE_1	FUNCTION_3
0x40013f9	      0xe9ecfbffff	                           jmp 0x4000fea	       305	pop3.c	ELSE_1	FUNCTION_3
0x40013fe	    0x488d35000000	                   lea rsi, [0x04001405]	       801	pop3.c	FUNCTION_17	IF_1	SWITCH_1	ELSE_2	CALL_5
0x4001405	            0x31c0	                            xor eax, eax	       801	pop3.c	FUNCTION_17	IF_1	SWITCH_1	ELSE_2	CALL_5
0x4001407	          0x4c89ff	                            mov rdi, r15	       801	pop3.c	FUNCTION_17	IF_1	SWITCH_1	ELSE_2	CALL_5
0x400140a	      0xe800000000	                          call 0x400140f	       801	pop3.c	FUNCTION_17	IF_1	SWITCH_1	ELSE_2	CALL_5
0x400140f	      0xb843000000	                           mov eax, 0x43	       802	pop3.c	FUNCTION_17	IF_1	SWITCH_1	ELSE_2
0x4001414	      0xe977faffff	                           jmp 0x4000e90	       976	pop3.c	FUNCTION_22	DO_1	SWITCH_1
0x4001419	        0x4883fe03	                              cmp rsi, 3	       628	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1
0x400141d	     0xf86e7fcffff	                           jbe 0x400110a	       628	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1
0x4001423	        0x8079033c	                cmp byte [rcx + 3], 0x3c	       629	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x4001427	     0xf84b5000000	                            je 0x40014e2	       629	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x400142d	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	       629	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x4001432	      0xb903000000	                              mov ecx, 3	       629	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x4001437	        0x4883c204	                              add rdx, 4	       629	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x400143b	            0xeb14	                           jmp 0x4001451	       629	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x400143d	           0xf1f00	                         nop dword [rax]	       629	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x4001440	          0x4989d0	                             mov r8, rdx	       629	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x4001443	        0x4883c201	                              add rdx, 1	       629	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x4001447	        0x807aff3c	                cmp byte [rdx - 1], 0x3c	       629	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x400144b	     0xf849f000000	                            je 0x40014f0	       629	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x4001451	        0x4883c101	                              add rcx, 1	       628	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1
0x4001455	          0x4839ce	                            cmp rsi, rcx	       628	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1
0x4001458	            0x75e6	                           jne 0x4001440	       628	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1
0x400145a	      0xe9abfcffff	                           jmp 0x400110a	       628	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1
0x400145f	              0x90	                                     nop	       628	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1
0x4001460	        0x490fa3c1	                              bt r9, rax	       696	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4001464	     0xf83b9fdffff	                           jae 0x4001223	       696	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x400146a	        0x4883c701	                              add rdi, 1	       698	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x400146e	        0x4883ed01	                              sub rbp, 1	       699	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4001472	      0xe904feffff	                           jmp 0x400127b	       699	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4001477	    0x660f1f840000	                    nop word [rax + rax]	       699	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	WHILE_1
0x4001480	        0x4e8d3c2f	                    lea r15, [rdi + r13]	       706	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4001484	      0xe9c6fdffff	                           jmp 0x400124f	       706	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4001489	     0xf1f80000000	                         nop dword [rax]	       706	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	FOR_2
0x4001490	     0x983e4060000	             or dword [rbx + 0x6e4], eax	       714	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	IF_6
0x4001496	      0xe9dafdffff	                           jmp 0x4001275	       714	pop3.c	FUNCTION_15	IF_1	ELSE_2	IF_4	FOR_1	IF_6
0x400149b	    0xc68308070000	               mov byte [rbx + 0x708], 1	       675	pop3.c	FUNCTION_15	IF_1	IF_2
0x40014a2	      0xe953fbffff	                           jmp 0x4000ffa	       675	pop3.c	FUNCTION_15	IF_1	IF_2
0x40014a7	    0x488d15000000	                   lea rdx, [0x040014ae]	       344	pop3.c	FUNCTION_5	CALL_1
0x40014ae	    0x488d35000000	                   lea rsi, [0x040014b5]	       344	pop3.c	FUNCTION_5	CALL_1
0x40014b5	            0x31c0	                            xor eax, eax	       344	pop3.c	FUNCTION_5	CALL_1
0x40014b7	          0x4889ef	                            mov rdi, rbp	       344	pop3.c	FUNCTION_5	CALL_1
0x40014ba	      0xe800000000	                          call 0x40014bf	       344	pop3.c	FUNCTION_5	CALL_1
0x40014bf	            0x85c0	                           test eax, eax	       346	pop3.c	FUNCTION_5	IF_1
0x40014c1	     0xf85c9f9ffff	                           jne 0x4000e90	       346	pop3.c	FUNCTION_5	IF_1
0x40014c7	    0xc783c0060000	              mov dword [rbx + 0x6c0], 3	       305	pop3.c	ELSE_1	FUNCTION_3
0x40014d1	      0xe924fbffff	                           jmp 0x4000ffa	       305	pop3.c	ELSE_1	FUNCTION_3
0x40014d6	    0x838bf8060000	               or dword [rbx + 0x6f8], 1	       679	pop3.c	FUNCTION_15	IF_1	ELSE_1	IF_3
0x40014dd	      0xe918fbffff	                           jmp 0x4000ffa	       679	pop3.c	FUNCTION_15	IF_1	ELSE_1	IF_3
0x40014e2	      0x4c8b442418	              mov r8, qword [rsp + 0x18]	       629	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x40014e7	      0xb903000000	                              mov ecx, 3	       629	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x40014ec	        0x4983c003	                               add r8, 3	       629	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x40014f0	          0x4829c8	                            sub rax, rcx	       631	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x40014f3	          0x4889c2	                            mov rdx, rax	       632	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	IF_4
0x40014f6	          0x4989c7	                            mov r15, rax	       631	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x40014f9	        0x4883ea01	                              sub rdx, 1	       632	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	IF_4
0x40014fd	     0xf8407fcffff	                            je 0x400110a	       632	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	IF_4
0x4001503	          0x4889c6	                            mov rsi, rax	       636	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x4001506	    0x488b05000000	            mov rax, qword [0x0400150d] 	       636	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x400150d	      0x4889542418	             mov qword [rsp + 0x18], rdx	       636	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x4001512	      0x4c89442410	              mov qword [rsp + 0x10], r8	       636	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x4001517	      0xbf01000000	                              mov edi, 1	       636	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x400151c	            0xff10	                        call qword [rax]	       636	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x400151e	          0x4885c0	                           test rax, rax	       638	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	IF_5
0x4001521	    0x488983000700	            mov qword [rbx + 0x700], rax	       636	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	CALL_3
0x4001528	     0xf84dcfbffff	                            je 0x400110a	       638	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3	IF_5
0x400152e	      0x4c8b442410	              mov r8, qword [rsp + 0x10]	        53	string3.h	FUNCTION_40	CALL_3
0x4001533	      0x488b542418	            mov rdx, qword [rsp + 0x18] 	        53	string3.h	FUNCTION_40	CALL_3
0x4001538	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_40	CALL_3
0x400153b	          0x4c89c6	                             mov rsi, r8	        53	string3.h	FUNCTION_40	CALL_3
0x400153e	      0xe800000000	                          call 0x4001543	        53	string3.h	FUNCTION_40	CALL_3
0x4001543	    0x488b83000700	           mov rax, qword [rbx + 0x700] 	       643	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x400154a	    0x42c64438ff00	             mov byte [rax + r15 - 1], 0	       643	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x4001550	    0x838bf8060000	               or dword [rbx + 0x6f8], 2	       646	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x4001557	      0xe9aefbffff	                           jmp 0x400110a	       646	pop3.c	FUNCTION_14	ELSE_1	IF_2	FOR_1	IF_3
0x400155c	      0xe800000000	                           call loc..LC1	      1006	pop3.c	FUNCTION_22
pop3_continue_auth	CALL,1:ELSE,0:WHILE,0:FOR,0:SWITCH,0:DO,0:functions,0:IF,0	5
0x40000a0	          0x4889f2	                            mov rdx, rsi	       491	pop3.c	FUNCTION_10
0x40000a3	    0x488d35000000	                   lea rsi, [0x040000aa]	       494	pop3.c	FUNCTION_10	CALL_1
0x40000aa	    0x4881c7500600	                          add rdi, 0x650	       494	pop3.c	FUNCTION_10	CALL_1
0x40000b1	            0x31c0	                            xor eax, eax	       494	pop3.c	FUNCTION_10	CALL_1
0x40000b3	      0xe900000000	                           jmp 0x40000b8	       494	pop3.c	FUNCTION_10	CALL_1
pop3_multi_statemach	CALL,2:ELSE,0:WHILE,0:FOR,0:SWITCH,0:DO,0:functions,0:IF,2	29
0x4000190	              0x55	                                push rbp	      1010	pop3.c	FUNCTION_23
0x4000191	              0x53	                                push rbx	      1010	pop3.c	FUNCTION_23
0x4000192	          0x4889f5	                            mov rbp, rsi	      1010	pop3.c	FUNCTION_23
0x4000195	          0x4889fb	                            mov rbx, rdi	      1010	pop3.c	FUNCTION_23
0x4000198	        0x4883ec08	                              sub rsp, 8	      1010	pop3.c	FUNCTION_23
0x400019c	    0x488b87e00300	           mov rax, qword [rdi + 0x3e0] 	      1014	pop3.c	FUNCTION_23	IF_1
0x40001a3	    0xf68084000000	               test byte [rax + 0x84], 1	      1014	pop3.c	FUNCTION_23	IF_1
0x40001aa	            0x7409	                            je 0x40001b5	      1014	pop3.c	FUNCTION_23	IF_1
0x40001ac	    0x80bfc4060000	               cmp byte [rdi + 0x6c4], 0	      1014	pop3.c	FUNCTION_23	IF_1
0x40001b3	            0x742b	                            je 0x40001e0	      1014	pop3.c	FUNCTION_23	IF_1
0x40001b5	    0x488dbb500600	                  lea rdi, [rbx + 0x650]	      1020	pop3.c	FUNCTION_23	CALL_2
0x40001bc	            0x31f6	                            xor esi, esi	      1020	pop3.c	FUNCTION_23	CALL_2
0x40001be	      0xe800000000	                          call 0x40001c3	      1020	pop3.c	FUNCTION_23	CALL_2
0x40001c3	    0x8b93c0060000	           mov edx, dword [rbx + 0x6c0] 	      1021	pop3.c	FUNCTION_23
0x40001c9	            0x85d2	                           test edx, edx	      1021	pop3.c	FUNCTION_23
0x40001cb	         0xf944500	                         sete byte [rbp]	      1021	pop3.c	FUNCTION_23
0x40001cf	        0x4883c408	                              add rsp, 8	      1024	pop3.c	FUNCTION_23
0x40001d3	              0x5b	                                 pop rbx	      1024	pop3.c	FUNCTION_23
0x40001d4	              0x5d	                                 pop rbp	      1024	pop3.c	FUNCTION_23
0x40001d5	              0xc3	                                     ret	      1024	pop3.c	FUNCTION_23
0x40001d6	    0x662e0f1f8400	                 nop word cs:[rax + rax]	      1024	pop3.c	FUNCTION_23
0x40001e0	    0x488d97c40600	                  lea rdx, [rdi + 0x6c4]	      1015	pop3.c	FUNCTION_23	IF_1	CALL_1
0x40001e7	            0x31f6	                            xor esi, esi	      1015	pop3.c	FUNCTION_23	IF_1	CALL_1
0x40001e9	      0xe800000000	                          call 0x40001ee	      1015	pop3.c	FUNCTION_23	IF_1	CALL_1
0x40001ee	            0x85c0	                           test eax, eax	      1016	pop3.c	FUNCTION_23	IF_1	IF_2
0x40001f0	            0x75dd	                           jne 0x40001cf	      1016	pop3.c	FUNCTION_23	IF_1	IF_2
0x40001f2	    0x80bbc4060000	               cmp byte [rbx + 0x6c4], 0	      1016	pop3.c	FUNCTION_23	IF_1	IF_2
0x40001f9	            0x75ba	                           jne 0x40001b5	      1016	pop3.c	FUNCTION_23	IF_1	IF_2
0x40001fb	            0xebd2	                           jmp 0x40001cf	      1016	pop3.c	FUNCTION_23	IF_1	IF_2
pop3_getsock	CALL,1:ELSE,0:WHILE,0:FOR,0:SWITCH,0:DO,0:functions,0:IF,0	2
0x4000180	    0x4881c7500600	                          add rdi, 0x650	      1056	pop3.c	FUNCTION_26	CALL_1
0x4000187	      0xe900000000	                           jmp 0x400018c	      1056	pop3.c	FUNCTION_26	CALL_1
pop3_setup_connection	CALL,1:ELSE,0:WHILE,0:FOR,0:SWITCH,0:DO,0:functions,0:IF,1	25
0x4000040	              0x55	                                push rbp	      1305	pop3.c	FUNCTION_35
0x4000041	              0x53	                                push rbx	      1305	pop3.c	FUNCTION_35
0x4000042	          0x4889fd	                            mov rbp, rdi	      1305	pop3.c	FUNCTION_35
0x4000045	      0xbe01000000	                              mov esi, 1	      1045	pop3.c	FUNCTION_25	CALL_1
0x400004a	        0x4883ec08	                              sub rsp, 8	      1305	pop3.c	FUNCTION_35
0x400004e	    0x488b05000000	            mov rax, qword [0x04000055] 	      1045	pop3.c	FUNCTION_25	CALL_1
0x4000055	          0x488b1f	                    mov rbx, qword [rdi]	      1306	pop3.c	FUNCTION_35
0x4000058	      0xbf18000000	                           mov edi, 0x18	      1045	pop3.c	FUNCTION_25	CALL_1
0x400005d	            0xff10	                        call qword [rax]	      1045	pop3.c	FUNCTION_25	CALL_1
0x400005f	          0x4885c0	                           test rax, rax	      1046	pop3.c	FUNCTION_25	IF_1
0x4000062	    0x488983e80100	            mov qword [rbx + 0x1e8], rax	      1045	pop3.c	FUNCTION_25	CALL_1
0x4000069	            0x741d	                            je 0x4000088	      1046	pop3.c	FUNCTION_25	IF_1
0x400006b	    0xc68598030000	               mov byte [rbp + 0x398], 0	      1314	pop3.c	FUNCTION_35
0x4000072	    0x488383185100	             add qword [rbx + 0x5118], 1	      1315	pop3.c	FUNCTION_35
0x400007a	        0x4883c408	                              add rsp, 8	      1318	pop3.c	FUNCTION_35
0x400007e	            0x31c0	                            xor eax, eax	      1317	pop3.c	FUNCTION_35
0x4000080	              0x5b	                                 pop rbx	      1318	pop3.c	FUNCTION_35
0x4000081	              0x5d	                                 pop rbp	      1318	pop3.c	FUNCTION_35
0x4000082	              0xc3	                                     ret	      1318	pop3.c	FUNCTION_35
0x4000083	       0xf1f440000	                   nop dword [rax + rax]	      1318	pop3.c	FUNCTION_35
0x4000088	        0x4883c408	                              add rsp, 8	      1318	pop3.c	FUNCTION_35
0x400008c	      0xb81b000000	                           mov eax, 0x1b	      1047	pop3.c	FUNCTION_25	IF_1
0x4000091	              0x5b	                                 pop rbx	      1318	pop3.c	FUNCTION_35
0x4000092	              0x5d	                                 pop rbp	      1318	pop3.c	FUNCTION_35
0x4000093	              0xc3	                                     ret	      1318	pop3.c	FUNCTION_35
pop3_disconnect	CALL,5:ELSE,0:WHILE,0:FOR,0:SWITCH,0:DO,0:functions,0:IF,2	47
0x40000c0	              0x55	                                push rbp	      1219	pop3.c	FUNCTION_31
0x40000c1	              0x53	                                push rbx	      1219	pop3.c	FUNCTION_31
0x40000c2	    0x488daf500600	                  lea rbp, [rdi + 0x650]	      1219	pop3.c	FUNCTION_31
0x40000c9	          0x4889fb	                            mov rbx, rdi	      1219	pop3.c	FUNCTION_31
0x40000cc	        0x4883ec08	                              sub rsp, 8	      1219	pop3.c	FUNCTION_31
0x40000d0	          0x4084f6	                           test sil, sil	      1228	pop3.c	FUNCTION_31	IF_1
0x40000d3	            0x751c	                           jne 0x40000f1	      1228	pop3.c	FUNCTION_31	IF_1
0x40000d5	    0x488b87a80600	           mov rax, qword [rdi + 0x6a8] 	      1228	pop3.c	FUNCTION_31	IF_1
0x40000dc	    0x488daf500600	                  lea rbp, [rdi + 0x650]	      1228	pop3.c	FUNCTION_31	IF_1
0x40000e3	          0x4885c0	                           test rax, rax	      1228	pop3.c	FUNCTION_31	IF_1
0x40000e6	            0x7409	                            je 0x40000f1	      1228	pop3.c	FUNCTION_31	IF_1
0x40000e8	    0x80b8a7030000	               cmp byte [rax + 0x3a7], 0	      1228	pop3.c	FUNCTION_31	IF_1
0x40000ef	            0x753f	                           jne 0x4000130	      1228	pop3.c	FUNCTION_31	IF_1
0x40000f1	          0x4889ef	                            mov rdi, rbp	      1233	pop3.c	FUNCTION_31	CALL_3
0x40000f4	      0xe800000000	                          call 0x40000f9	      1233	pop3.c	FUNCTION_31	CALL_3
0x40000f9	    0x8bb3ec060000	           mov esi, dword [rbx + 0x6ec] 	      1236	pop3.c	FUNCTION_31	CALL_4
0x40000ff	          0x4889df	                            mov rdi, rbx	      1236	pop3.c	FUNCTION_31	CALL_4
0x4000102	      0xe800000000	                          call 0x4000107	      1236	pop3.c	FUNCTION_31	CALL_4
0x4000107	    0x488b05000000	            mov rax, qword [0x0400010e] 	      1239	pop3.c	FUNCTION_31	CALL_5
0x400010e	    0x488bbb000700	           mov rdi, qword [rbx + 0x700] 	      1239	pop3.c	FUNCTION_31	CALL_5
0x4000115	            0xff10	                        call qword [rax]	      1239	pop3.c	FUNCTION_31	CALL_5
0x4000117	    0x48c783000700	              mov qword [rbx + 0x700], 0	      1239	pop3.c	FUNCTION_31	CALL_5
0x4000122	        0x4883c408	                              add rsp, 8	      1242	pop3.c	FUNCTION_31
0x4000126	            0x31c0	                            xor eax, eax	      1242	pop3.c	FUNCTION_31
0x4000128	              0x5b	                                 pop rbx	      1242	pop3.c	FUNCTION_31
0x4000129	              0x5d	                                 pop rbp	      1242	pop3.c	FUNCTION_31
0x400012a	              0xc3	                                     ret	      1242	pop3.c	FUNCTION_31
0x400012b	       0xf1f440000	                   nop dword [rax + rax]	      1242	pop3.c	FUNCTION_31
0x4000130	    0x488d15000000	                   lea rdx, [0x04000137]	       598	pop3.c	FUNCTION_13	CALL_1
0x4000137	    0x488d35000000	                   lea rsi, [0x0400013e]	       598	pop3.c	FUNCTION_13	CALL_1
0x400013e	            0x31c0	                            xor eax, eax	       598	pop3.c	FUNCTION_13	CALL_1
0x4000140	          0x4889ef	                            mov rdi, rbp	       598	pop3.c	FUNCTION_13	CALL_1
0x4000143	      0xe800000000	                          call 0x4000148	       598	pop3.c	FUNCTION_13	CALL_1
0x4000148	            0x85c0	                           test eax, eax	       600	pop3.c	FUNCTION_13	IF_1
0x400014a	            0x75a5	                           jne 0x40000f1	       600	pop3.c	FUNCTION_13	IF_1
0x400014c	    0xc783c0060000	            mov dword [rbx + 0x6c0], 0xa	       305	pop3.c	ELSE_1	FUNCTION_3
0x4000156	            0xeb0c	                           jmp 0x4000164	       305	pop3.c	ELSE_1	FUNCTION_3
0x4000158	     0xf1f84000000	                   nop dword [rax + rax]	       305	pop3.c	ELSE_1	FUNCTION_3
0x4000160	            0x85c0	                           test eax, eax	      1031	pop3.c	FUNCTION_24	WHILE_1
0x4000162	            0x758d	                           jne 0x40000f1	      1031	pop3.c	FUNCTION_24	WHILE_1
0x4000164	      0xbe01000000	                              mov esi, 1	      1032	pop3.c	FUNCTION_24	CALL_1
0x4000169	          0x4889ef	                            mov rdi, rbp	      1032	pop3.c	FUNCTION_24	CALL_1
0x400016c	      0xe800000000	                          call 0x4000171	      1032	pop3.c	FUNCTION_24	CALL_1
0x4000171	    0x8b93c0060000	           mov edx, dword [rbx + 0x6c0] 	      1031	pop3.c	FUNCTION_24	WHILE_1
0x4000177	            0x85d2	                           test edx, edx	      1031	pop3.c	FUNCTION_24	WHILE_1
0x4000179	            0x75e5	                           jne 0x4000160	      1031	pop3.c	FUNCTION_24	WHILE_1
0x400017b	      0xe971ffffff	                           jmp 0x40000f1	      1031	pop3.c	FUNCTION_24	WHILE_1
pop3_get_message	CALL,1:ELSE,1:WHILE,0:FOR,2:SWITCH,0:DO,0:functions,0:IF,3	43
0x4000280	              0x55	                                push rbp	       245	pop3.c	FUNCTION_2
0x4000281	              0x53	                                push rbx	       245	pop3.c	FUNCTION_2
0x4000282	          0x4889f5	                            mov rbp, rsi	       245	pop3.c	FUNCTION_2
0x4000285	          0x4889fb	                            mov rbx, rdi	       245	pop3.c	FUNCTION_2
0x4000288	        0x4883ec08	                              sub rsp, 8	       245	pop3.c	FUNCTION_2
0x400028c	      0xe800000000	                          call 0x4000291	       246	pop3.c	FUNCTION_2	CALL_1
0x4000291	        0x4883f802	                              cmp rax, 2	       249	pop3.c	FUNCTION_2	IF_1
0x4000295	        0x488d1403	                    lea rdx, [rbx + rax]	       269	pop3.c	FUNCTION_2	ELSE_1
0x4000299	            0x7658	                           jbe 0x40002f3	       249	pop3.c	FUNCTION_2	IF_1
0x400029b	         0xfb64b02	               movzx ecx, byte [rbx + 2]	       252	pop3.c	FUNCTION_2	IF_1	FOR_1
0x400029f	        0x4883e802	                              sub rax, 2	       251	pop3.c	FUNCTION_2	IF_1
0x40002a3	        0x488d5302	                      lea rdx, [rbx + 2]	       252	pop3.c	FUNCTION_2	IF_1	FOR_1
0x40002a7	          0x80f909	                               cmp cl, 9	       252	pop3.c	FUNCTION_2	IF_1	FOR_1
0x40002aa	            0x740c	                            je 0x40002b8	       252	pop3.c	FUNCTION_2	IF_1	FOR_1
0x40002ac	          0x80f920	                            cmp cl, 0x20	       252	pop3.c	FUNCTION_2	IF_1	FOR_1
0x40002af	            0x751c	                           jne 0x40002cd	       252	pop3.c	FUNCTION_2	IF_1	FOR_1
0x40002b1	     0xf1f80000000	                         nop dword [rax]	       252	pop3.c	FUNCTION_2	IF_1	FOR_1
0x40002b8	        0x4883c201	                              add rdx, 1	       253	pop3.c	FUNCTION_2	IF_1	FOR_1
0x40002bc	           0xfb60a	                   movzx ecx, byte [rdx]	       252	pop3.c	FUNCTION_2	IF_1	FOR_1
0x40002bf	        0x4883e801	                              sub rax, 1	       253	pop3.c	FUNCTION_2	IF_1	FOR_1
0x40002c3	          0x80f920	                            cmp cl, 0x20	       252	pop3.c	FUNCTION_2	IF_1	FOR_1
0x40002c6	            0x74f0	                            je 0x40002b8	       252	pop3.c	FUNCTION_2	IF_1	FOR_1
0x40002c8	          0x80f909	                               cmp cl, 9	       252	pop3.c	FUNCTION_2	IF_1	FOR_1
0x40002cb	            0x74eb	                            je 0x40002b8	       252	pop3.c	FUNCTION_2	IF_1	FOR_1
0x40002cd	    0x49b800260000	                  movabs r8, 0x100002600	       258	pop3.c	FUNCTION_2	IF_1	FOR_2	IF_2
0x40002d7	    0x660f1f840000	                    nop word [rax + rax]	       258	pop3.c	FUNCTION_2	IF_1	FOR_2	IF_2
0x40002e0	          0x4885c0	                           test rax, rax	       257	pop3.c	FUNCTION_2	IF_1	FOR_2
0x40002e3	            0x740e	                            je 0x40002f3	       257	pop3.c	FUNCTION_2	IF_1	FOR_2
0x40002e5	       0xfb64c02ff	         movzx ecx, byte [rdx + rax - 1]	       258	pop3.c	FUNCTION_2	IF_1	FOR_2	IF_2
0x40002ea	          0x80f920	                            cmp cl, 0x20	       258	pop3.c	FUNCTION_2	IF_1	FOR_2	IF_2
0x40002ed	            0x7611	                           jbe 0x4000300	       258	pop3.c	FUNCTION_2	IF_1	FOR_2	IF_2
0x40002ef	        0xc6040200	                 mov byte [rdx + rax], 0	       264	pop3.c	FUNCTION_2	IF_1	IF_3
0x40002f3	        0x48895500	                    mov qword [rbp], rdx	       271	pop3.c	FUNCTION_2	ELSE_1
0x40002f7	        0x4883c408	                              add rsp, 8	       272	pop3.c	FUNCTION_2	ELSE_1
0x40002fb	              0x5b	                                 pop rbx	       272	pop3.c	FUNCTION_2	ELSE_1
0x40002fc	              0x5d	                                 pop rbp	       272	pop3.c	FUNCTION_2	ELSE_1
0x40002fd	              0xc3	                                     ret	       272	pop3.c	FUNCTION_2	ELSE_1
0x40002fe	            0x6690	                                     nop	       272	pop3.c	FUNCTION_2	ELSE_1
0x4000300	        0x490fa3c8	                              bt r8, rcx	       258	pop3.c	FUNCTION_2	IF_1	FOR_2	IF_2
0x4000304	        0x488d78ff	                      lea rdi, [rax - 1]	       258	pop3.c	FUNCTION_2	IF_1	FOR_2	IF_2
0x4000308	            0x73e5	                           jae 0x40002ef	       258	pop3.c	FUNCTION_2	IF_1	FOR_2	IF_2
0x400030a	          0x4889f8	                            mov rax, rdi	       258	pop3.c	FUNCTION_2	IF_1	FOR_2	IF_2
0x400030d	            0xebd1	                           jmp 0x40002e0	       258	pop3.c	FUNCTION_2	IF_1	FOR_2	IF_2
pop3_doing	CALL,6:ELSE,1:WHILE,0:FOR,0:SWITCH,0:DO,0:functions,0:IF,2	1
0x4000200	            0xeb8e	            jmp sym.pop3_multi_statemach	      1256	pop3.c	FUNCTION_33	CALL_1
