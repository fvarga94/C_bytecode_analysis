Curl_range	CALL,11:functions,0:DO,0:IF,7:SWITCH,0:FOR,0:ELSE,3:WHILE,1	91
0x4000040	              0x55	                                push rbp	        37	curl_range.c	FUNCTION_1
0x4000041	              0x53	                                push rbx	        37	curl_range.c	FUNCTION_1
0x4000042	        0x4883ec38	                           sub rsp, 0x38	        37	curl_range.c	FUNCTION_1
0x4000046	          0x488b1f	                    mov rbx, qword [rdi]	        41	curl_range.c	FUNCTION_1
0x4000049	    0x64488b042528	                mov rax, qword fs:[0x28]	        37	curl_range.c	FUNCTION_1
0x4000052	      0x4889442428	             mov qword [rsp + 0x28], rax	        37	curl_range.c	FUNCTION_1
0x4000057	            0x31c0	                            xor eax, eax	        37	curl_range.c	FUNCTION_1
0x4000059	    0x80bb21510000	              cmp byte [rbx + 0x5121], 0	        43	curl_range.c	FUNCTION_1	IF_1
0x4000060	     0xf849a000000	                            je 0x4000100	        43	curl_range.c	FUNCTION_1	IF_1
0x4000066	    0x488bbb285100	          mov rdi, qword [rbx + 0x5128] 	        43	curl_range.c	FUNCTION_1	IF_1
0x400006d	          0x4885ff	                           test rdi, rdi	        43	curl_range.c	FUNCTION_1	IF_1
0x4000070	     0xf848a000000	                            je 0x4000100	        43	curl_range.c	FUNCTION_1	IF_1
0x4000076	      0x488d4c2408	                      lea rcx, [rsp + 8]	        46	curl_range.c	FUNCTION_1	IF_1	CALL_1
0x400007b	      0x488d742418	                   lea rsi, [rsp + 0x18]	        46	curl_range.c	FUNCTION_1	IF_1	CALL_1
0x4000080	            0x31d2	                            xor edx, edx	        46	curl_range.c	FUNCTION_1	IF_1	CALL_1
0x4000082	      0xe800000000	                          call 0x4000087	        46	curl_range.c	FUNCTION_1	IF_1	CALL_1
0x4000087	          0x83f801	                              cmp eax, 1	        47	curl_range.c	FUNCTION_1	IF_1	IF_2
0x400008a	            0x89c5	                            mov ebp, eax	        46	curl_range.c	FUNCTION_1	IF_1	CALL_1
0x400008c	     0xf8496000000	                            je 0x4000128	        47	curl_range.c	FUNCTION_1	IF_1	IF_2
0x4000092	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	        49	curl_range.c	FUNCTION_1	IF_1	WHILE_1	CALL_2
0x4000097	           0xfb607	                   movzx eax, byte [rdi]	        49	curl_range.c	FUNCTION_1	IF_1	WHILE_1	CALL_2
0x400009a	            0x84c0	                             test al, al	        49	curl_range.c	FUNCTION_1	IF_1	WHILE_1	CALL_2
0x400009c	            0x742d	                            je 0x40000cb	        49	curl_range.c	FUNCTION_1	IF_1	WHILE_1	CALL_2
0x400009e	            0x6690	                                     nop	        49	curl_range.c	FUNCTION_1	IF_1	WHILE_1	CALL_2
0x40000a0	           0xfb6f8	                           movzx edi, al	        49	curl_range.c	FUNCTION_1	IF_1	WHILE_1	CALL_2
0x40000a3	      0xe800000000	                          call 0x40000a8	        49	curl_range.c	FUNCTION_1	IF_1	WHILE_1	CALL_2
0x40000a8	            0x85c0	                           test eax, eax	        49	curl_range.c	FUNCTION_1	IF_1	WHILE_1	CALL_2
0x40000aa	      0x488b442418	            mov rax, qword [rsp + 0x18] 	        49	curl_range.c	FUNCTION_1	IF_1	WHILE_1	CALL_2
0x40000af	            0x7509	                           jne 0x40000ba	        49	curl_range.c	FUNCTION_1	IF_1	WHILE_1	CALL_2
0x40000b1	          0x80382d	                    cmp byte [rax], 0x2d	        49	curl_range.c	FUNCTION_1	IF_1	WHILE_1	CALL_2
0x40000b4	     0xf859e000000	                           jne 0x4000158	        49	curl_range.c	FUNCTION_1	IF_1	WHILE_1	CALL_2
0x40000ba	        0x488d7801	                      lea rdi, [rax + 1]	        50	curl_range.c	FUNCTION_1	IF_1	WHILE_1
0x40000be	      0x48897c2418	             mov qword [rsp + 0x18], rdi	        50	curl_range.c	FUNCTION_1	IF_1	WHILE_1
0x40000c3	         0xfb64001	               movzx eax, byte [rax + 1]	        49	curl_range.c	FUNCTION_1	IF_1	WHILE_1	CALL_2
0x40000c7	            0x84c0	                             test al, al	        49	curl_range.c	FUNCTION_1	IF_1	WHILE_1	CALL_2
0x40000c9	            0x75d5	                           jne 0x40000a0	        49	curl_range.c	FUNCTION_1	IF_1	WHILE_1	CALL_2
0x40000cb	      0x488d4c2410	                   lea rcx, [rsp + 0x10]	        51	curl_range.c	FUNCTION_1	IF_1	CALL_3
0x40000d0	      0x488d742420	                   lea rsi, [rsp + 0x20]	        51	curl_range.c	FUNCTION_1	IF_1	CALL_3
0x40000d5	            0x31d2	                            xor edx, edx	        51	curl_range.c	FUNCTION_1	IF_1	CALL_3
0x40000d7	      0xe800000000	                          call 0x40000dc	        51	curl_range.c	FUNCTION_1	IF_1	CALL_3
0x40000dc	          0x83f801	                              cmp eax, 1	        52	curl_range.c	FUNCTION_1	IF_1	IF_3
0x40000df	            0x7447	                            je 0x4000128	        52	curl_range.c	FUNCTION_1	IF_1	IF_3
0x40000e1	          0x83f802	                              cmp eax, 2	        54	curl_range.c	FUNCTION_1	IF_1	IF_4
0x40000e4	            0x754a	                           jne 0x4000130	        54	curl_range.c	FUNCTION_1	IF_1	IF_4
0x40000e6	            0x85ed	                           test ebp, ebp	        54	curl_range.c	FUNCTION_1	IF_1	IF_4
0x40000e8	            0x7546	                           jne 0x4000130	        54	curl_range.c	FUNCTION_1	IF_1	IF_4
0x40000ea	      0x488b442408	                mov rax, qword [rsp + 8]	        56	curl_range.c	FUNCTION_1	IF_1	IF_4
0x40000ef	    0x488983305100	          mov qword [rbx + 0x5130], rax 	        56	curl_range.c	FUNCTION_1	IF_1	IF_4
0x40000f6	            0x31c0	                            xor eax, eax	        92	curl_range.c	FUNCTION_1
0x40000f8	            0xeb13	                           jmp 0x400010d	        92	curl_range.c	FUNCTION_1
0x40000fa	    0x660f1f440000	                    nop word [rax + rax]	        92	curl_range.c	FUNCTION_1
0x4000100	    0x48c783d00000	mov qword [rbx + 0xd0], 0xffffffffffffffff	        91	curl_range.c	FUNCTION_1	ELSE_3
0x400010b	            0x31c0	                            xor eax, eax	        92	curl_range.c	FUNCTION_1
0x400010d	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	        93	curl_range.c	FUNCTION_1
0x4000112	    0x644833142528	                xor rdx, qword fs:[0x28]	        93	curl_range.c	FUNCTION_1
0x400011b	            0x757d	                           jne 0x400019a	        93	curl_range.c	FUNCTION_1
0x400011d	        0x4883c438	                           add rsp, 0x38	        93	curl_range.c	FUNCTION_1
0x4000121	              0x5b	                                 pop rbx	        93	curl_range.c	FUNCTION_1
0x4000122	              0x5d	                                 pop rbp	        93	curl_range.c	FUNCTION_1
0x4000123	              0xc3	                                     ret	        93	curl_range.c	FUNCTION_1
0x4000124	         0xf1f4000	                         nop dword [rax]	        93	curl_range.c	FUNCTION_1
0x4000128	      0xb821000000	                           mov eax, 0x21	        48	curl_range.c	FUNCTION_1	IF_1	IF_2
0x400012d	            0xebde	                           jmp 0x400010d	        48	curl_range.c	FUNCTION_1	IF_1	IF_2
0x400012f	              0x90	                                     nop	        48	curl_range.c	FUNCTION_1	IF_1	IF_2
0x4000130	          0x83fd02	                              cmp ebp, 2	        60	curl_range.c	FUNCTION_1	IF_1	ELSE_1	IF_5
0x4000133	            0x752b	                           jne 0x4000160	        60	curl_range.c	FUNCTION_1	IF_1	ELSE_1	IF_5
0x4000135	            0x85c0	                           test eax, eax	        60	curl_range.c	FUNCTION_1	IF_1	ELSE_1	IF_5
0x4000137	            0x7527	                           jne 0x4000160	        60	curl_range.c	FUNCTION_1	IF_1	ELSE_1	IF_5
0x4000139	      0x488b442410	            mov rax, qword [rsp + 0x10] 	        62	curl_range.c	FUNCTION_1	IF_1	ELSE_1	IF_5
0x400013e	    0x488983d00000	             mov qword [rbx + 0xd0], rax	        62	curl_range.c	FUNCTION_1	IF_1	ELSE_1	IF_5
0x4000145	          0x48f7d8	                                 neg rax	        63	curl_range.c	FUNCTION_1	IF_1	ELSE_1	IF_5
0x4000148	    0x488983305100	          mov qword [rbx + 0x5130], rax 	        63	curl_range.c	FUNCTION_1	IF_1	ELSE_1	IF_5
0x400014f	            0x31c0	                            xor eax, eax	        92	curl_range.c	FUNCTION_1
0x4000151	            0xebba	                           jmp 0x400010d	        92	curl_range.c	FUNCTION_1
0x4000153	       0xf1f440000	                   nop dword [rax + rax]	        92	curl_range.c	FUNCTION_1
0x4000158	          0x4889c7	                            mov rdi, rax	        49	curl_range.c	FUNCTION_1	IF_1	WHILE_1	CALL_2
0x400015b	      0xe96bffffff	                           jmp 0x40000cb	        49	curl_range.c	FUNCTION_1	IF_1	WHILE_1	CALL_2
0x4000160	      0x488b542408	                mov rdx, qword [rsp + 8]	        72	curl_range.c	FUNCTION_1	IF_1	ELSE_2	IF_6
0x4000165	      0x488b442410	            mov rax, qword [rsp + 0x10] 	        72	curl_range.c	FUNCTION_1	IF_1	ELSE_2	IF_6
0x400016a	          0x4839c2	                            cmp rdx, rax	        72	curl_range.c	FUNCTION_1	IF_1	ELSE_2	IF_6
0x400016d	            0x7fb9	                            jg 0x4000128	        72	curl_range.c	FUNCTION_1	IF_1	ELSE_2	IF_6
0x400016f	          0x4829d0	                            sub rax, rdx	        75	curl_range.c	FUNCTION_1	IF_1	ELSE_2
0x4000172	    0x48b9ffffffff	         movabs rcx, 0x7fffffffffffffff 	        76	curl_range.c	FUNCTION_1	IF_1	ELSE_2	IF_7
0x400017c	          0x4839c8	                            cmp rax, rcx	        76	curl_range.c	FUNCTION_1	IF_1	ELSE_2	IF_7
0x400017f	            0x74a7	                            je 0x4000128	        76	curl_range.c	FUNCTION_1	IF_1	ELSE_2	IF_7
0x4000181	        0x4883c001	                              add rax, 1	        79	curl_range.c	FUNCTION_1	IF_1	ELSE_2
0x4000185	    0x488993305100	          mov qword [rbx + 0x5130], rdx 	        80	curl_range.c	FUNCTION_1	IF_1	ELSE_2
0x400018c	    0x488983d00000	             mov qword [rbx + 0xd0], rax	        79	curl_range.c	FUNCTION_1	IF_1	ELSE_2
0x4000193	            0x31c0	                            xor eax, eax	        92	curl_range.c	FUNCTION_1
0x4000195	      0xe973ffffff	                           jmp 0x400010d	        92	curl_range.c	FUNCTION_1
0x400019a	      0xe800000000	         call section_end..text.unlikely	        93	curl_range.c	FUNCTION_1
