Curl_splayinsert	CALL,1:FOR,0:IF,5:WHILE,0:functions,0:DO,0:ELSE,2:SWITCH,0	59
0x4000160	          0x4885c9	                           test rcx, rcx	       108	splay.c	ELSE_2	FUNCTION_2	IF_1
0x4000163	     0xf8497000000	                            je 0x4000200	       108	splay.c	ELSE_2	FUNCTION_2	IF_1
0x4000169	          0x4885d2	                           test rdx, rdx	       111	splay.c	ELSE_2	FUNCTION_2	IF_2
0x400016c	            0x4154	                                push r12	       103	splay.c	ELSE_2	FUNCTION_2
0x400016e	          0x4989f4	                            mov r12, rsi	       103	splay.c	ELSE_2	FUNCTION_2
0x4000171	              0x55	                                push rbp	       103	splay.c	ELSE_2	FUNCTION_2
0x4000172	          0x4889fd	                            mov rbp, rdi	       103	splay.c	ELSE_2	FUNCTION_2
0x4000175	              0x53	                                push rbx	       103	splay.c	ELSE_2	FUNCTION_2
0x4000176	          0x4889cb	                            mov rbx, rcx	       103	splay.c	ELSE_2	FUNCTION_2
0x4000179	            0x7465	                            je 0x40001e0	       111	splay.c	ELSE_2	FUNCTION_2	IF_2
0x400017b	      0xe800000000	                          call 0x4000180	       112	splay.c	ELSE_2	FUNCTION_2	IF_2	CALL_1
0x4000180	        0x48396820	            cmp qword [rax + 0x20], rbp 	       113	splay.c	ELSE_2	FUNCTION_2	IF_2	IF_3
0x4000184	            0x753a	                           jne 0x40001c0	       113	splay.c	ELSE_2	FUNCTION_2	IF_2	IF_3
0x4000186	          0x8b5028	            mov edx, dword [rax + 0x28] 	       113	splay.c	ELSE_2	FUNCTION_2	IF_2	IF_3
0x4000189	          0x4439e2	                           cmp edx, r12d	       113	splay.c	ELSE_2	FUNCTION_2	IF_2	IF_3
0x400018c	            0x747a	                            je 0x4000208	       113	splay.c	ELSE_2	FUNCTION_2	IF_2	IF_3
0x400018e	          0x4439e2	                           cmp edx, r12d	       132	splay.c	ELSE_2	FUNCTION_2	ELSE_1	IF_5
0x4000191	            0x7e31	                           jle 0x40001c4	       132	splay.c	ELSE_2	FUNCTION_2	ELSE_1	IF_5
0x4000193	          0x488b10	                    mov rdx, qword [rax]	       133	splay.c	ELSE_2	FUNCTION_2	ELSE_1	IF_5
0x4000196	        0x48894308	                mov qword [rbx + 8], rax	       134	splay.c	ELSE_2	FUNCTION_2	ELSE_1	IF_5
0x400019a	          0x488913	                    mov qword [rbx], rdx	       133	splay.c	ELSE_2	FUNCTION_2	ELSE_1	IF_5
0x400019d	    0x48c700000000	                      mov qword [rax], 0	       135	splay.c	ELSE_2	FUNCTION_2	ELSE_1	IF_5
0x40001a4	        0x48896b20	             mov qword [rbx + 0x20], rbp	       143	splay.c	FUNCTION_2	ELSE_2
0x40001a8	        0x4c896328	             mov qword [rbx + 0x28], r12	       143	splay.c	FUNCTION_2	ELSE_2
0x40001ac	          0x4889d8	                            mov rax, rbx	       148	splay.c	FUNCTION_2	ELSE_2
0x40001af	        0x48895b10	             mov qword [rbx + 0x10], rbx	       146	splay.c	FUNCTION_2	ELSE_2
0x40001b3	        0x48895b18	             mov qword [rbx + 0x18], rbx	       147	splay.c	FUNCTION_2	ELSE_2
0x40001b7	              0x5b	                                 pop rbx	       149	splay.c	FUNCTION_2	ELSE_2
0x40001b8	              0x5d	                                 pop rbp	       149	splay.c	FUNCTION_2	ELSE_2
0x40001b9	            0x415c	                                 pop r12	       149	splay.c	FUNCTION_2	ELSE_2
0x40001bb	              0xc3	                                     ret	       149	splay.c	FUNCTION_2	ELSE_2
0x40001bc	         0xf1f4000	                         nop dword [rax]	       149	splay.c	FUNCTION_2	ELSE_2
0x40001c0	            0x7fd1	                            jg 0x4000193	       132	splay.c	ELSE_2	FUNCTION_2	ELSE_1	IF_5
0x40001c2	            0x7d34	                           jge 0x40001f8	       132	splay.c	ELSE_2	FUNCTION_2	ELSE_1	IF_5
0x40001c4	        0x488b5008	                mov rdx, qword [rax + 8]	       139	splay.c	FUNCTION_2
0x40001c8	          0x488903	                    mov qword [rbx], rax	       140	splay.c	FUNCTION_2
0x40001cb	        0x48895308	                mov qword [rbx + 8], rdx	       139	splay.c	FUNCTION_2
0x40001cf	    0x48c740080000	                  mov qword [rax + 8], 0	       141	splay.c	FUNCTION_2
0x40001d7	            0xebcb	                           jmp 0x40001a4	       141	splay.c	FUNCTION_2
0x40001d9	     0xf1f80000000	                         nop dword [rax]	       141	splay.c	FUNCTION_2
0x40001e0	    0x48c741080000	                  mov qword [rcx + 8], 0	       130	splay.c	ELSE_2	FUNCTION_2	IF_4
0x40001e8	    0x48c701000000	                      mov qword [rcx], 0	       130	splay.c	ELSE_2	FUNCTION_2	IF_4
0x40001ef	            0xebb3	                           jmp 0x40001a4	       130	splay.c	ELSE_2	FUNCTION_2	IF_4
0x40001f1	     0xf1f80000000	                         nop dword [rax]	       130	splay.c	ELSE_2	FUNCTION_2	IF_4
0x40001f8	          0x8b5028	            mov edx, dword [rax + 0x28] 	       130	splay.c	ELSE_2	FUNCTION_2	IF_4
0x40001fb	            0xeb91	                           jmp 0x400018e	       130	splay.c	ELSE_2	FUNCTION_2	IF_4
0x40001fd	           0xf1f00	                         nop dword [rax]	       130	splay.c	ELSE_2	FUNCTION_2	IF_4
0x4000200	          0x4889d0	                            mov rax, rdx	       130	splay.c	ELSE_2	FUNCTION_2	IF_4
0x4000203	              0xc3	                                     ret	       149	splay.c	FUNCTION_2	ELSE_2
0x4000204	         0xf1f4000	                         nop dword [rax]	       149	splay.c	FUNCTION_2	ELSE_2
0x4000208	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       121	splay.c	ELSE_2	FUNCTION_2	IF_2	IF_3
0x400020c	    0x48c74320ffff	mov qword [rbx + 0x20], 0xffffffffffffffff	       118	splay.c	ELSE_2	FUNCTION_2	IF_2	IF_3
0x4000214	    0xc74328ffffff	     mov dword [rbx + 0x28], 0xffffffff 	       118	splay.c	ELSE_2	FUNCTION_2	IF_2	IF_3
0x400021b	        0x48894310	             mov qword [rbx + 0x10], rax	       120	splay.c	ELSE_2	FUNCTION_2	IF_2	IF_3
0x400021f	        0x48895318	             mov qword [rbx + 0x18], rdx	       121	splay.c	ELSE_2	FUNCTION_2	IF_2	IF_3
0x4000223	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       122	splay.c	ELSE_2	FUNCTION_2	IF_2	IF_3
0x4000227	        0x48895a10	             mov qword [rdx + 0x10], rbx	       122	splay.c	ELSE_2	FUNCTION_2	IF_2	IF_3
0x400022b	        0x48895818	             mov qword [rax + 0x18], rbx	       123	splay.c	ELSE_2	FUNCTION_2	IF_2	IF_3
0x400022f	            0xeb86	                           jmp 0x40001b7	       125	splay.c	ELSE_2	FUNCTION_2	IF_2	IF_3
Curl_splayremovebyaddr	CALL,2:FOR,0:IF,6:WHILE,0:functions,0:DO,0:ELSE,2:SWITCH,0	74
0x40002f0	              0x55	                                push rbp	       213	splay.c	FUNCTION_4
0x40002f1	              0x53	                                push rbx	       213	splay.c	FUNCTION_4
0x40002f2	        0x4883ec08	                              sub rsp, 8	       213	splay.c	FUNCTION_4
0x40002f6	          0x4885ff	                           test rdi, rdi	       219	splay.c	FUNCTION_4	IF_1
0x40002f9	            0x7475	                            je 0x4000370	       219	splay.c	FUNCTION_4	IF_1
0x40002fb	          0x4885f6	                           test rsi, rsi	       219	splay.c	FUNCTION_4	IF_1
0x40002fe	            0x7470	                            je 0x4000370	       219	splay.c	FUNCTION_4	IF_1
0x4000300	      0x48837e20ff	cmp qword [rsi + 0x20], 0xffffffffffffffff	       222	splay.c	FUNCTION_4	IF_2
0x4000305	            0x7539	                           jne 0x4000340	       222	splay.c	FUNCTION_4	IF_2
0x4000307	        0x837e28ff	cmp dword [rsi + 0x28], 0xffffffffffffffff	       222	splay.c	FUNCTION_4	IF_2
0x400030b	            0x7533	                           jne 0x4000340	       222	splay.c	FUNCTION_4	IF_2
0x400030d	        0x488b4e10	            mov rcx, qword [rsi + 0x10] 	       225	splay.c	FUNCTION_4	IF_2	IF_3
0x4000311	      0xb803000000	                              mov eax, 3	       227	splay.c	FUNCTION_4	IF_2	IF_3
0x4000316	          0x4839ce	                            cmp rsi, rcx	       225	splay.c	FUNCTION_4	IF_2	IF_3
0x4000319	            0x7448	                            je 0x4000363	       225	splay.c	FUNCTION_4	IF_2	IF_3
0x400031b	        0x488b4618	            mov rax, qword [rsi + 0x18] 	       229	splay.c	FUNCTION_4	IF_2
0x400031f	        0x48894810	             mov qword [rax + 0x10], rcx	       229	splay.c	FUNCTION_4	IF_2
0x4000323	        0x488b4e10	            mov rcx, qword [rsi + 0x10] 	       230	splay.c	FUNCTION_4	IF_2
0x4000327	        0x48894118	             mov qword [rcx + 0x18], rax	       230	splay.c	FUNCTION_4	IF_2
0x400032b	        0x48897610	             mov qword [rsi + 0x10], rsi	       233	splay.c	FUNCTION_4	IF_2
0x400032f	            0x31c0	                            xor eax, eax	       236	splay.c	FUNCTION_4	IF_2
0x4000331	          0x48893a	                    mov qword [rdx], rdi	       235	splay.c	FUNCTION_4	IF_2
0x4000334	            0xeb2d	                           jmp 0x4000363	       236	splay.c	FUNCTION_4	IF_2
0x4000336	    0x662e0f1f8400	                 nop word cs:[rax + rax]	       236	splay.c	FUNCTION_4	IF_2
0x4000340	          0x4889f3	                            mov rbx, rsi	       236	splay.c	FUNCTION_4	IF_2
0x4000343	          0x4889d5	                            mov rbp, rdx	       236	splay.c	FUNCTION_4	IF_2
0x4000346	          0x4889fa	                            mov rdx, rdi	       236	splay.c	FUNCTION_4	IF_2
0x4000349	        0x488b7e20	            mov rdi, qword [rsi + 0x20] 	       239	splay.c	FUNCTION_4	CALL_1
0x400034d	        0x488b7628	            mov rsi, qword [rsi + 0x28] 	       239	splay.c	FUNCTION_4	CALL_1
0x4000351	      0xe800000000	                          call 0x4000356	       239	splay.c	FUNCTION_4	CALL_1
0x4000356	          0x4889c2	                            mov rdx, rax	       239	splay.c	FUNCTION_4	CALL_1
0x4000359	      0xb802000000	                              mov eax, 2	       249	splay.c	FUNCTION_4	IF_4
0x400035e	          0x4839d3	                            cmp rbx, rdx	       248	splay.c	FUNCTION_4	IF_4
0x4000361	            0x741d	                            je 0x4000380	       248	splay.c	FUNCTION_4	IF_4
0x4000363	        0x4883c408	                              add rsp, 8	       277	splay.c	FUNCTION_4
0x4000367	              0x5b	                                 pop rbx	       277	splay.c	FUNCTION_4
0x4000368	              0x5d	                                 pop rbp	       277	splay.c	FUNCTION_4
0x4000369	              0xc3	                                     ret	       277	splay.c	FUNCTION_4
0x400036a	    0x660f1f440000	                    nop word [rax + rax]	       277	splay.c	FUNCTION_4
0x4000370	        0x4883c408	                              add rsp, 8	       277	splay.c	FUNCTION_4
0x4000374	      0xb801000000	                              mov eax, 1	       220	splay.c	FUNCTION_4	IF_1
0x4000379	              0x5b	                                 pop rbx	       277	splay.c	FUNCTION_4
0x400037a	              0x5d	                                 pop rbp	       277	splay.c	FUNCTION_4
0x400037b	              0xc3	                                     ret	       277	splay.c	FUNCTION_4
0x400037c	         0xf1f4000	                         nop dword [rax]	       277	splay.c	FUNCTION_4
0x4000380	        0x488b4310	            mov rax, qword [rbx + 0x10] 	       253	splay.c	FUNCTION_4
0x4000384	          0x4839c3	                            cmp rbx, rax	       254	splay.c	FUNCTION_4	IF_5
0x4000387	            0x7436	                            je 0x40003bf	       254	splay.c	FUNCTION_4	IF_5
0x4000389	        0x488b5308	                mov rdx, qword [rbx + 8]	       259	splay.c	FUNCTION_4	IF_5
0x400038d	        0x488b7320	            mov rsi, qword [rbx + 0x20] 	       258	splay.c	FUNCTION_4	IF_5
0x4000391	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	       258	splay.c	FUNCTION_4	IF_5
0x4000395	        0x48895008	                mov qword [rax + 8], rdx	       259	splay.c	FUNCTION_4	IF_5
0x4000399	          0x488b13	                    mov rdx, qword [rbx]	       260	splay.c	FUNCTION_4	IF_5
0x400039c	        0x48897020	             mov qword [rax + 0x20], rsi	       258	splay.c	FUNCTION_4	IF_5
0x40003a0	        0x48897828	             mov qword [rax + 0x28], rdi	       258	splay.c	FUNCTION_4	IF_5
0x40003a4	          0x488910	                    mov qword [rax], rdx	       260	splay.c	FUNCTION_4	IF_5
0x40003a7	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	       261	splay.c	FUNCTION_4	IF_5
0x40003ab	        0x48895018	             mov qword [rax + 0x18], rdx	       261	splay.c	FUNCTION_4	IF_5
0x40003af	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	       262	splay.c	FUNCTION_4	IF_5
0x40003b3	        0x48894210	             mov qword [rdx + 0x10], rax	       262	splay.c	FUNCTION_4	IF_5
0x40003b7	        0x48894500	                    mov qword [rbp], rax	       274	splay.c	FUNCTION_4
0x40003bb	            0x31c0	                            xor eax, eax	       276	splay.c	FUNCTION_4
0x40003bd	            0xeba4	                           jmp 0x4000363	       276	splay.c	FUNCTION_4
0x40003bf	          0x488b10	                    mov rdx, qword [rax]	       266	splay.c	FUNCTION_4	ELSE_1	IF_6
0x40003c2	          0x4885d2	                           test rdx, rdx	       266	splay.c	FUNCTION_4	ELSE_1	IF_6
0x40003c5	            0x7417	                            je 0x40003de	       266	splay.c	FUNCTION_4	ELSE_1	IF_6
0x40003c7	        0x488b7820	            mov rdi, qword [rax + 0x20] 	       269	splay.c	FUNCTION_4	ELSE_1	ELSE_2	CALL_2
0x40003cb	        0x488b7028	            mov rsi, qword [rax + 0x28] 	       269	splay.c	FUNCTION_4	ELSE_1	ELSE_2	CALL_2
0x40003cf	      0xe800000000	                          call 0x40003d4	       269	splay.c	FUNCTION_4	ELSE_1	ELSE_2	CALL_2
0x40003d4	        0x488b5308	                mov rdx, qword [rbx + 8]	       270	splay.c	FUNCTION_4	ELSE_1	ELSE_2
0x40003d8	        0x48895008	                mov qword [rax + 8], rdx	       270	splay.c	FUNCTION_4	ELSE_1	ELSE_2
0x40003dc	            0xebd9	                           jmp 0x40003b7	       270	splay.c	FUNCTION_4	ELSE_1	ELSE_2
0x40003de	        0x488b4008	                mov rax, qword [rax + 8]	       267	splay.c	FUNCTION_4	ELSE_1	IF_6
0x40003e2	            0xebd3	                           jmp 0x40003b7	       267	splay.c	FUNCTION_4	ELSE_1	IF_6
Curl_splay	CALL,0:FOR,1:IF,9:WHILE,0:functions,0:DO,0:ELSE,2:SWITCH,0	78
0x4000040	        0x4883ec48	                           sub rsp, 0x48	        42	splay.c	FUNCTION_1
0x4000044	          0x4889d0	                            mov rax, rdx	        42	splay.c	FUNCTION_1
0x4000047	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	        42	splay.c	FUNCTION_1
0x4000050	      0x48894c2438	             mov qword [rsp + 0x38], rcx	        42	splay.c	FUNCTION_1
0x4000055	            0x31c9	                            xor ecx, ecx	        42	splay.c	FUNCTION_1
0x4000057	          0x4885d2	                           test rdx, rdx	        46	splay.c	FUNCTION_1	IF_1
0x400005a	     0xf84ce000000	                            je 0x400012e	        46	splay.c	FUNCTION_1	IF_1
0x4000060	    0x48c744240800	                  mov qword [rsp + 8], 0	        48	splay.c	FUNCTION_1
0x4000069	    0x48c704240000	                      mov qword [rsp], 0	        48	splay.c	FUNCTION_1
0x4000071	          0x4989e0	                             mov r8, rsp	        49	splay.c	FUNCTION_1
0x4000074	          0x4889e1	                            mov rcx, rsp	        49	splay.c	FUNCTION_1
0x4000077	    0x660f1f840000	                    nop word [rax + rax]	        49	splay.c	FUNCTION_1
0x4000080	        0x483b7820	            cmp rdi, qword [rax + 0x20] 	        52	splay.c	FUNCTION_1	FOR_1
0x4000084	            0x7c4c	                            jl 0x40000d2	        52	splay.c	FUNCTION_1	FOR_1
0x4000086	            0x7f0b	                            jg 0x4000093	        52	splay.c	FUNCTION_1	FOR_1
0x4000088	          0x3b7028	            cmp esi, dword [rax + 0x28] 	        52	splay.c	FUNCTION_1	FOR_1
0x400008b	            0x7c45	                            jl 0x40000d2	        52	splay.c	FUNCTION_1	FOR_1
0x400008d	     0xf8e7d000000	                           jle 0x4000110	        68	splay.c	FUNCTION_1	FOR_1	ELSE_1	IF_6
0x4000093	        0x488b5008	                mov rdx, qword [rax + 8]	        69	splay.c	FUNCTION_1	FOR_1	ELSE_1	IF_6	IF_7
0x4000097	          0x4885d2	                           test rdx, rdx	        69	splay.c	FUNCTION_1	FOR_1	ELSE_1	IF_6	IF_7
0x400009a	            0x7474	                            je 0x4000110	        69	splay.c	FUNCTION_1	FOR_1	ELSE_1	IF_6	IF_7
0x400009c	        0x483b7a20	            cmp rdi, qword [rdx + 0x20] 	        71	splay.c	FUNCTION_1	FOR_1	ELSE_1	IF_6	IF_8
0x40000a0	            0x7c1f	                            jl 0x40000c1	        71	splay.c	FUNCTION_1	FOR_1	ELSE_1	IF_6	IF_8
0x40000a2	            0x7f05	                            jg 0x40000a9	        71	splay.c	FUNCTION_1	FOR_1	ELSE_1	IF_6	IF_8
0x40000a4	          0x3b7228	            cmp esi, dword [rdx + 0x28] 	        71	splay.c	FUNCTION_1	FOR_1	ELSE_1	IF_6	IF_8
0x40000a7	            0x7e18	                           jle 0x40000c1	        71	splay.c	FUNCTION_1	FOR_1	ELSE_1	IF_6	IF_8
0x40000a9	          0x4c8b0a	                     mov r9, qword [rdx]	        73	splay.c	FUNCTION_1	FOR_1	ELSE_1	IF_6	IF_8
0x40000ac	        0x4c894808	                 mov qword [rax + 8], r9	        73	splay.c	FUNCTION_1	FOR_1	ELSE_1	IF_6	IF_8
0x40000b0	      0x48837a0800	                  cmp qword [rdx + 8], 0	        76	splay.c	FUNCTION_1	FOR_1	ELSE_1	IF_6	IF_8	IF_9
0x40000b5	          0x488902	                    mov qword [rdx], rax	        74	splay.c	FUNCTION_1	FOR_1	ELSE_1	IF_6	IF_8
0x40000b8	     0xf848f000000	                            je 0x400014d	        76	splay.c	FUNCTION_1	FOR_1	ELSE_1	IF_6	IF_8	IF_9
0x40000be	          0x4889d0	                            mov rax, rdx	        76	splay.c	FUNCTION_1	FOR_1	ELSE_1	IF_6	IF_8	IF_9
0x40000c1	        0x48894108	                mov qword [rcx + 8], rax	        79	splay.c	FUNCTION_1	FOR_1	ELSE_1	IF_6
0x40000c5	          0x4889c1	                            mov rcx, rax	        81	splay.c	FUNCTION_1	FOR_1	ELSE_1	IF_6
0x40000c8	        0x488b4008	                mov rax, qword [rax + 8]	        81	splay.c	FUNCTION_1	FOR_1	ELSE_1	IF_6
0x40000cc	        0x483b7820	            cmp rdi, qword [rax + 0x20] 	        52	splay.c	FUNCTION_1	FOR_1
0x40000d0	            0x7db4	                           jge 0x4000086	        52	splay.c	FUNCTION_1	FOR_1
0x40000d2	          0x488b10	                    mov rdx, qword [rax]	        54	splay.c	FUNCTION_1	FOR_1	IF_2	IF_3
0x40000d5	          0x4885d2	                           test rdx, rdx	        54	splay.c	FUNCTION_1	FOR_1	IF_2	IF_3
0x40000d8	            0x746e	                            je 0x4000148	        54	splay.c	FUNCTION_1	FOR_1	IF_2	IF_3
0x40000da	        0x483b7a20	            cmp rdi, qword [rdx + 0x20] 	        56	splay.c	FUNCTION_1	FOR_1	IF_2	IF_4
0x40000de	            0x7c18	                            jl 0x40000f8	        56	splay.c	FUNCTION_1	FOR_1	IF_2	IF_4
0x40000e0	            0x7f05	                            jg 0x40000e7	        56	splay.c	FUNCTION_1	FOR_1	IF_2	IF_4
0x40000e2	          0x3b7228	            cmp esi, dword [rdx + 0x28] 	        56	splay.c	FUNCTION_1	FOR_1	IF_2	IF_4
0x40000e5	            0x7c11	                            jl 0x40000f8	        56	splay.c	FUNCTION_1	FOR_1	IF_2	IF_4
0x40000e7	          0x4889c2	                            mov rdx, rax	        56	splay.c	FUNCTION_1	FOR_1	IF_2	IF_4
0x40000ea	          0x498910	                     mov qword [r8], rdx	        64	splay.c	FUNCTION_1	FOR_1	IF_2
0x40000ed	          0x4989d0	                             mov r8, rdx	        64	splay.c	FUNCTION_1	FOR_1	IF_2
0x40000f0	          0x488b02	                    mov rax, qword [rdx]	        66	splay.c	FUNCTION_1	FOR_1	IF_2
0x40000f3	            0xeb8b	                           jmp 0x4000080	        66	splay.c	FUNCTION_1	FOR_1	IF_2
0x40000f5	           0xf1f00	                         nop dword [rax]	        66	splay.c	FUNCTION_1	FOR_1	IF_2
0x40000f8	        0x4c8b4a08	                 mov r9, qword [rdx + 8]	        58	splay.c	FUNCTION_1	FOR_1	IF_2	IF_4
0x40000fc	          0x4c8908	                     mov qword [rax], r9	        58	splay.c	FUNCTION_1	FOR_1	IF_2	IF_4
0x40000ff	          0x4c8b0a	                     mov r9, qword [rdx]	        61	splay.c	FUNCTION_1	FOR_1	IF_2	IF_4	IF_5
0x4000102	        0x48894208	                mov qword [rdx + 8], rax	        59	splay.c	FUNCTION_1	FOR_1	IF_2	IF_4
0x4000106	          0x4d85c9	                             test r9, r9	        61	splay.c	FUNCTION_1	FOR_1	IF_2	IF_4	IF_5
0x4000109	            0x75df	                           jne 0x40000ea	        61	splay.c	FUNCTION_1	FOR_1	IF_2	IF_4	IF_5
0x400010b	          0x4889d0	                            mov rax, rdx	        69	splay.c	FUNCTION_1	FOR_1	ELSE_1	IF_6	IF_7
0x400010e	            0xeb03	                           jmp 0x4000113	        69	splay.c	FUNCTION_1	FOR_1	ELSE_1	IF_6	IF_7
0x4000110	          0x4c8b08	                     mov r9, qword [rax]	        69	splay.c	FUNCTION_1	FOR_1	ELSE_1	IF_6	IF_7
0x4000113	        0x4c894908	                 mov qword [rcx + 8], r9	        87	splay.c	FUNCTION_1	ELSE_2
0x4000117	        0x488b5008	                mov rdx, qword [rax + 8]	        88	splay.c	FUNCTION_1	ELSE_2
0x400011b	          0x498910	                     mov qword [r8], rdx	        88	splay.c	FUNCTION_1	ELSE_2
0x400011e	      0x488b542408	                mov rdx, qword [rsp + 8]	        89	splay.c	FUNCTION_1	ELSE_2
0x4000123	          0x488910	                    mov qword [rax], rdx	        89	splay.c	FUNCTION_1	ELSE_2
0x4000126	        0x488b1424	                    mov rdx, qword [rsp]	        90	splay.c	FUNCTION_1	ELSE_2
0x400012a	        0x48895008	                mov qword [rax + 8], rdx	        90	splay.c	FUNCTION_1	ELSE_2
0x400012e	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	        93	splay.c	FUNCTION_1	ELSE_2
0x4000133	    0x644833342528	                xor rsi, qword fs:[0x28]	        93	splay.c	FUNCTION_1	ELSE_2
0x400013c	            0x7514	                           jne 0x4000152	        93	splay.c	FUNCTION_1	ELSE_2
0x400013e	        0x4883c448	                           add rsp, 0x48	        93	splay.c	FUNCTION_1	ELSE_2
0x4000142	              0xc3	                                     ret	        93	splay.c	FUNCTION_1	ELSE_2
0x4000143	       0xf1f440000	                   nop dword [rax + rax]	        93	splay.c	FUNCTION_1	ELSE_2
0x4000148	          0x4531c9	                            xor r9d, r9d	        54	splay.c	FUNCTION_1	FOR_1	IF_2	IF_3
0x400014b	            0xebc6	                           jmp 0x4000113	        54	splay.c	FUNCTION_1	FOR_1	IF_2	IF_3
0x400014d	          0x4989c1	                             mov r9, rax	        54	splay.c	FUNCTION_1	FOR_1	IF_2	IF_3
0x4000150	            0xebb9	                           jmp 0x400010b	        54	splay.c	FUNCTION_1	FOR_1	IF_2	IF_3
0x4000152	      0xe800000000	                          call 0x4000157	        93	splay.c	FUNCTION_1	ELSE_2
Curl_splaygetbest	CALL,1:FOR,0:IF,3:WHILE,0:functions,0:DO,0:ELSE,0:SWITCH,0	55
0x4000240	          0x4885d2	                           test rdx, rdx	       161	splay.c	FUNCTION_3	IF_1
0x4000243	     0xf8497000000	                            je 0x40002e0	       161	splay.c	FUNCTION_3	IF_1
0x4000249	            0x4154	                                push r12	       157	splay.c	FUNCTION_3
0x400024b	          0x4989f4	                            mov r12, rsi	       157	splay.c	FUNCTION_3
0x400024e	              0x55	                                push rbp	       157	splay.c	FUNCTION_3
0x400024f	    0x488b35000000	            mov rsi, qword [0x04000256] 	       167	splay.c	FUNCTION_3	CALL_1
0x4000256	          0x4889fd	                            mov rbp, rdi	       167	splay.c	FUNCTION_3	CALL_1
0x4000259	    0x488b3d000000	            mov rdi, qword [0x04000260] 	       167	splay.c	FUNCTION_3	CALL_1
0x4000260	              0x53	                                push rbx	       157	splay.c	FUNCTION_3
0x4000261	          0x4889cb	                            mov rbx, rcx	       157	splay.c	FUNCTION_3
0x4000264	      0xe800000000	                          call 0x4000269	       167	splay.c	FUNCTION_3	CALL_1
0x4000269	        0x483b6820	            cmp rbp, qword [rax + 0x20] 	       168	splay.c	FUNCTION_3	IF_2
0x400026d	            0x7c4f	                            jl 0x40002be	       168	splay.c	FUNCTION_3	IF_2
0x400026f	            0x7e47	                           jle 0x40002b8	       168	splay.c	FUNCTION_3	IF_2
0x4000271	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       175	splay.c	FUNCTION_3
0x4000275	          0x4839d0	                            cmp rax, rdx	       176	splay.c	FUNCTION_3	IF_3
0x4000278	            0x7456	                            je 0x40002d0	       176	splay.c	FUNCTION_3	IF_3
0x400027a	        0x488b4808	                mov rcx, qword [rax + 8]	       182	splay.c	FUNCTION_3	IF_3
0x400027e	        0x488b7020	            mov rsi, qword [rax + 0x20] 	       181	splay.c	FUNCTION_3	IF_3
0x4000282	        0x488b7828	            mov rdi, qword [rax + 0x28] 	       181	splay.c	FUNCTION_3	IF_3
0x4000286	        0x48894a08	                mov qword [rdx + 8], rcx	       182	splay.c	FUNCTION_3	IF_3
0x400028a	          0x488b08	                    mov rcx, qword [rax]	       183	splay.c	FUNCTION_3	IF_3
0x400028d	        0x48897220	             mov qword [rdx + 0x20], rsi	       181	splay.c	FUNCTION_3	IF_3
0x4000291	        0x48897a28	             mov qword [rdx + 0x28], rdi	       181	splay.c	FUNCTION_3	IF_3
0x4000295	          0x48890a	                    mov qword [rdx], rcx	       183	splay.c	FUNCTION_3	IF_3
0x4000298	        0x488b4818	            mov rcx, qword [rax + 0x18] 	       184	splay.c	FUNCTION_3	IF_3
0x400029c	        0x48894a18	             mov qword [rdx + 0x18], rcx	       184	splay.c	FUNCTION_3	IF_3
0x40002a0	        0x488b4818	            mov rcx, qword [rax + 0x18] 	       185	splay.c	FUNCTION_3	IF_3
0x40002a4	        0x48895110	             mov qword [rcx + 0x10], rdx	       185	splay.c	FUNCTION_3	IF_3
0x40002a8	          0x488903	                    mov qword [rbx], rax	       187	splay.c	FUNCTION_3	IF_3
0x40002ab	          0x4889d0	                            mov rax, rdx	       188	splay.c	FUNCTION_3	IF_3
0x40002ae	              0x5b	                                 pop rbx	       196	splay.c	FUNCTION_3
0x40002af	              0x5d	                                 pop rbp	       196	splay.c	FUNCTION_3
0x40002b0	            0x415c	                                 pop r12	       196	splay.c	FUNCTION_3
0x40002b2	              0xc3	                                     ret	       196	splay.c	FUNCTION_3
0x40002b3	       0xf1f440000	                   nop dword [rax + rax]	       196	splay.c	FUNCTION_3
0x40002b8	        0x44396028	           cmp dword [rax + 0x28], r12d 	       168	splay.c	FUNCTION_3	IF_2
0x40002bc	            0x7eb3	                           jle 0x4000271	       168	splay.c	FUNCTION_3	IF_2
0x40002be	    0x48c703000000	                      mov qword [rbx], 0	       170	splay.c	FUNCTION_3	IF_2
0x40002c5	              0x5b	                                 pop rbx	       196	splay.c	FUNCTION_3
0x40002c6	              0x5d	                                 pop rbp	       196	splay.c	FUNCTION_3
0x40002c7	            0x415c	                                 pop r12	       196	splay.c	FUNCTION_3
0x40002c9	              0xc3	                                     ret	       196	splay.c	FUNCTION_3
0x40002ca	    0x660f1f440000	                    nop word [rax + rax]	       196	splay.c	FUNCTION_3
0x40002d0	        0x488b5008	                mov rdx, qword [rax + 8]	       192	splay.c	FUNCTION_3
0x40002d4	          0x488903	                    mov qword [rbx], rax	       193	splay.c	FUNCTION_3
0x40002d7	              0x5b	                                 pop rbx	       196	splay.c	FUNCTION_3
0x40002d8	              0x5d	                                 pop rbp	       196	splay.c	FUNCTION_3
0x40002d9	          0x4889d0	                            mov rax, rdx	       195	splay.c	FUNCTION_3
0x40002dc	            0x415c	                                 pop r12	       196	splay.c	FUNCTION_3
0x40002de	              0xc3	                                     ret	       196	splay.c	FUNCTION_3
0x40002df	              0x90	                                     nop	       196	splay.c	FUNCTION_3
0x40002e0	    0x48c701000000	                      mov qword [rcx], 0	       162	splay.c	FUNCTION_3	IF_1
0x40002e7	            0x31c0	                            xor eax, eax	       163	splay.c	FUNCTION_3	IF_1
0x40002e9	              0xc3	                                     ret	       196	splay.c	FUNCTION_3
