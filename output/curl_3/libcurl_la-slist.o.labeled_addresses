curl_slist_append	ELSE,0:DO,0:SWITCH,0:FOR,0:functions,0:IF,2:WHILE,0:CALL,3	41
0x40000a0	              0x55	                                push rbp	        91	slist.c	FUNCTION_3
0x40000a1	              0x53	                                push rbx	        91	slist.c	FUNCTION_3
0x40000a2	          0x4889fb	                            mov rbx, rdi	        91	slist.c	FUNCTION_3
0x40000a5	          0x4889f7	                            mov rdi, rsi	        92	slist.c	FUNCTION_3	CALL_1
0x40000a8	        0x4883ec08	                              sub rsp, 8	        91	slist.c	FUNCTION_3
0x40000ac	    0x488b05000000	            mov rax, qword [0x040000b3] 	        92	slist.c	FUNCTION_3	CALL_1
0x40000b3	            0xff10	                        call qword [rax]	        92	slist.c	FUNCTION_3	CALL_1
0x40000b5	          0x4885c0	                           test rax, rax	        94	slist.c	FUNCTION_3	IF_1
0x40000b8	            0x745a	                            je 0x4000114	        94	slist.c	FUNCTION_3	IF_1
0x40000ba	          0x4889c5	                            mov rbp, rax	        94	slist.c	FUNCTION_3	IF_1
0x40000bd	    0x488b05000000	            mov rax, qword [0x040000c4] 	        66	slist.c	FUNCTION_2	CALL_2
0x40000c4	      0xbf10000000	                           mov edi, 0x10	        66	slist.c	FUNCTION_2	CALL_2
0x40000c9	            0xff10	                        call qword [rax]	        66	slist.c	FUNCTION_2	CALL_2
0x40000cb	          0x4885c0	                           test rax, rax	        67	slist.c	FUNCTION_2	IF_1
0x40000ce	            0x7438	                            je 0x4000108	        67	slist.c	FUNCTION_2	IF_1
0x40000d0	          0x4885db	                           test rbx, rbx	        74	slist.c	FUNCTION_2	IF_2
0x40000d3	    0x48c740080000	                  mov qword [rax + 8], 0	        70	slist.c	FUNCTION_2
0x40000db	          0x488928	                    mov qword [rax], rbp	        71	slist.c	FUNCTION_2
0x40000de	            0x741b	                            je 0x40000fb	        74	slist.c	FUNCTION_2	IF_2
0x40000e0	          0x4889d9	                            mov rcx, rbx	        74	slist.c	FUNCTION_2	IF_2
0x40000e3	            0xeb06	                           jmp 0x40000eb	        74	slist.c	FUNCTION_2	IF_2
0x40000e5	           0xf1f00	                         nop dword [rax]	        74	slist.c	FUNCTION_2	IF_2
0x40000e8	          0x4889d1	                            mov rcx, rdx	        44	slist.c	FUNCTION_1	WHILE_1
0x40000eb	        0x488b5108	                mov rdx, qword [rcx + 8]	        44	slist.c	FUNCTION_1	WHILE_1
0x40000ef	          0x4885d2	                           test rdx, rdx	        44	slist.c	FUNCTION_1	WHILE_1
0x40000f2	            0x75f4	                           jne 0x40000e8	        44	slist.c	FUNCTION_1	WHILE_1
0x40000f4	        0x48894108	                mov qword [rcx + 8], rax	        78	slist.c	FUNCTION_2
0x40000f8	          0x4889d8	                            mov rax, rbx	        78	slist.c	FUNCTION_2
0x40000fb	        0x4883c408	                              add rsp, 8	       102	slist.c	FUNCTION_3
0x40000ff	              0x5b	                                 pop rbx	       102	slist.c	FUNCTION_3
0x4000100	              0x5d	                                 pop rbp	       102	slist.c	FUNCTION_3
0x4000101	              0xc3	                                     ret	       102	slist.c	FUNCTION_3
0x4000102	    0x660f1f440000	                    nop word [rax + rax]	       102	slist.c	FUNCTION_3
0x4000108	    0x488b05000000	            mov rax, qword [0x0400010f] 	        99	slist.c	FUNCTION_3	CALL_3
0x400010f	          0x4889ef	                            mov rdi, rbp	        99	slist.c	FUNCTION_3	CALL_3
0x4000112	            0xff10	                        call qword [rax]	        99	slist.c	FUNCTION_3	CALL_3
0x4000114	        0x4883c408	                              add rsp, 8	       102	slist.c	FUNCTION_3
0x4000118	            0x31c0	                            xor eax, eax	        99	slist.c	FUNCTION_3	CALL_3
0x400011a	              0x5b	                                 pop rbx	       102	slist.c	FUNCTION_3
0x400011b	              0x5d	                                 pop rbp	       102	slist.c	FUNCTION_3
0x400011c	              0xc3	                                     ret	       102	slist.c	FUNCTION_3
curl_slist_free_all	ELSE,0:DO,1:SWITCH,0:FOR,0:functions,0:IF,1:WHILE,0:CALL,2	21
0x4000120	          0x4885ff	                           test rdi, rdi	       134	slist.c	FUNCTION_5	IF_1
0x4000123	            0x7436	                            je 0x400015b	       134	slist.c	FUNCTION_5	IF_1
0x4000125	            0x4154	                                push r12	       130	slist.c	FUNCTION_5
0x4000127	              0x55	                                push rbp	       130	slist.c	FUNCTION_5
0x4000128	    0x488b2d000000	            mov rbp, qword [0x0400012f] 	       130	slist.c	FUNCTION_5
0x400012f	              0x53	                                push rbx	       130	slist.c	FUNCTION_5
0x4000130	          0x4889fb	                            mov rbx, rdi	       130	slist.c	FUNCTION_5
0x4000133	       0xf1f440000	                   nop dword [rax + rax]	       130	slist.c	FUNCTION_5
0x4000138	        0x4c8b6308	                mov r12, qword [rbx + 8]	       139	slist.c	FUNCTION_5	DO_1
0x400013c	          0x488b3b	                    mov rdi, qword [rbx]	       140	slist.c	FUNCTION_5	DO_1	CALL_1
0x400013f	          0xff5500	                        call qword [rbp]	       140	slist.c	FUNCTION_5	DO_1	CALL_1
0x4000142	    0x48c703000000	                      mov qword [rbx], 0	       140	slist.c	FUNCTION_5	DO_1	CALL_1
0x4000149	          0x4889df	                            mov rdi, rbx	       141	slist.c	FUNCTION_5	DO_1	CALL_2
0x400014c	          0xff5500	                        call qword [rbp]	       141	slist.c	FUNCTION_5	DO_1	CALL_2
0x400014f	          0x4d85e4	                           test r12, r12	       143	slist.c	FUNCTION_5	DO_1
0x4000152	          0x4c89e3	                            mov rbx, r12	       143	slist.c	FUNCTION_5	DO_1
0x4000155	            0x75e1	                           jne 0x4000138	       143	slist.c	FUNCTION_5	DO_1
0x4000157	              0x5b	                                 pop rbx	       144	slist.c	FUNCTION_5
0x4000158	              0x5d	                                 pop rbp	       144	slist.c	FUNCTION_5
0x4000159	            0x415c	                                 pop r12	       144	slist.c	FUNCTION_5
0x400015b	            0xf3c3	                                     ret	       144	slist.c	FUNCTION_5
Curl_slist_duplicate	ELSE,0:DO,0:SWITCH,0:FOR,0:functions,0:IF,1:WHILE,1:CALL,2	27
0x4000160	          0x4885ff	                           test rdi, rdi	       114	slist.c	FUNCTION_4	WHILE_1
0x4000163	            0x7440	                            je 0x40001a5	       114	slist.c	FUNCTION_4	WHILE_1
0x4000165	              0x55	                                push rbp	       110	slist.c	FUNCTION_4
0x4000166	              0x53	                                push rbx	       110	slist.c	FUNCTION_4
0x4000167	            0x31ed	                            xor ebp, ebp	       114	slist.c	FUNCTION_4	WHILE_1
0x4000169	          0x4889fb	                            mov rbx, rdi	       114	slist.c	FUNCTION_4	WHILE_1
0x400016c	        0x4883ec08	                              sub rsp, 8	       110	slist.c	FUNCTION_4
0x4000170	            0xeb12	                           jmp 0x4000184	       110	slist.c	FUNCTION_4
0x4000172	    0x660f1f440000	                    nop word [rax + rax]	       110	slist.c	FUNCTION_4
0x4000178	        0x488b5b08	                mov rbx, qword [rbx + 8]	       123	slist.c	FUNCTION_4	WHILE_1
0x400017c	          0x4889c5	                            mov rbp, rax	       123	slist.c	FUNCTION_4	WHILE_1
0x400017f	          0x4885db	                           test rbx, rbx	       114	slist.c	FUNCTION_4	WHILE_1
0x4000182	            0x741a	                            je 0x400019e	       114	slist.c	FUNCTION_4	WHILE_1
0x4000184	          0x488b33	                    mov rsi, qword [rbx]	       115	slist.c	FUNCTION_4	WHILE_1	CALL_1
0x4000187	          0x4889ef	                            mov rdi, rbp	       115	slist.c	FUNCTION_4	WHILE_1	CALL_1
0x400018a	      0xe800000000	                          call 0x400018f	       115	slist.c	FUNCTION_4	WHILE_1	CALL_1
0x400018f	          0x4885c0	                           test rax, rax	       117	slist.c	FUNCTION_4	WHILE_1	IF_1
0x4000192	            0x75e4	                           jne 0x4000178	       117	slist.c	FUNCTION_4	WHILE_1	IF_1
0x4000194	          0x4889ef	                            mov rdi, rbp	       118	slist.c	FUNCTION_4	WHILE_1	IF_1	CALL_2
0x4000197	      0xe800000000	                          call 0x400019c	       118	slist.c	FUNCTION_4	WHILE_1	IF_1	CALL_2
0x400019c	            0x31c0	                            xor eax, eax	       119	slist.c	FUNCTION_4	WHILE_1	IF_1
0x400019e	        0x4883c408	                              add rsp, 8	       126	slist.c	FUNCTION_4
0x40001a2	              0x5b	                                 pop rbx	       126	slist.c	FUNCTION_4
0x40001a3	              0x5d	                                 pop rbp	       126	slist.c	FUNCTION_4
0x40001a4	              0xc3	                                     ret	       126	slist.c	FUNCTION_4
0x40001a5	            0x31c0	                            xor eax, eax	       111	slist.c	FUNCTION_4
0x40001a7	              0xc3	                                     ret	       111	slist.c	FUNCTION_4
