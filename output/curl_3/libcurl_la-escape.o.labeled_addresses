curl_easy_unescape	FOR,0:DO,0:IF,4:functions,0:SWITCH,0:CALL,3:ELSE,1:WHILE,0	40
0x4000320	              0x55	                                push rbp	       215	escape.c	FUNCTION_6
0x4000321	              0x53	                                push rbx	       215	escape.c	FUNCTION_6
0x4000322	            0x31db	                            xor ebx, ebx	       217	escape.c	FUNCTION_6	IF_1
0x4000324	        0x4883ec28	                           sub rsp, 0x28	       215	escape.c	FUNCTION_6
0x4000328	    0x64488b042528	                mov rax, qword fs:[0x28]	       215	escape.c	FUNCTION_6
0x4000331	      0x4889442418	             mov qword [rsp + 0x18], rax	       215	escape.c	FUNCTION_6
0x4000336	            0x31c0	                            xor eax, eax	       215	escape.c	FUNCTION_6
0x4000338	            0x85d2	                           test edx, edx	       217	escape.c	FUNCTION_6	IF_1
0x400033a	    0x48c744240800	                  mov qword [rsp + 8], 0	       216	escape.c	FUNCTION_6
0x4000343	            0x783c	                            js 0x4000381	       217	escape.c	FUNCTION_6	IF_1
0x4000345	          0x4889cd	                            mov rbp, rcx	       217	escape.c	FUNCTION_6	IF_1
0x4000348	      0x4c8d442410	                    lea r8, [rsp + 0x10]	       220	escape.c	FUNCTION_6	IF_1	CALL_1
0x400034d	      0x488d4c2408	                      lea rcx, [rsp + 8]	       220	escape.c	FUNCTION_6	IF_1	CALL_1
0x4000352	          0x4531c9	                            xor r9d, r9d	       220	escape.c	FUNCTION_6	IF_1	CALL_1
0x4000355	          0x4863d2	                         movsxd rdx, edx	       220	escape.c	FUNCTION_6	IF_1	CALL_1
0x4000358	      0xe800000000	                          call 0x400035d	       220	escape.c	FUNCTION_6	IF_1	CALL_1
0x400035d	            0x85c0	                           test eax, eax	       222	escape.c	FUNCTION_6	IF_1	IF_2
0x400035f	            0x7520	                           jne 0x4000381	       222	escape.c	FUNCTION_6	IF_1	IF_2
0x4000361	          0x4885ed	                           test rbp, rbp	       225	escape.c	FUNCTION_6	IF_1	IF_3
0x4000364	            0x7416	                            je 0x400037c	       225	escape.c	FUNCTION_6	IF_1	IF_3
0x4000366	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       226	escape.c	FUNCTION_6	IF_1	IF_3	IF_4
0x400036b	    0x4881ffffffff	                     cmp rdi, 0x7fffffff	       226	escape.c	FUNCTION_6	IF_1	IF_3	IF_4
0x4000372	            0x772c	                            ja 0x40003a0	       226	escape.c	FUNCTION_6	IF_1	IF_3	IF_4
0x4000374	      0xe800000000	                          call 0x4000379	       227	escape.c	FUNCTION_6	IF_1	IF_3	CALL_2
0x4000379	          0x894500	                    mov dword [rbp], eax	       227	escape.c	FUNCTION_6	IF_1	IF_3	CALL_2
0x400037c	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       227	escape.c	FUNCTION_6	IF_1	IF_3	CALL_2
0x4000381	          0x4889d8	                            mov rax, rbx	       234	escape.c	FUNCTION_6
0x4000384	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       234	escape.c	FUNCTION_6
0x4000389	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       234	escape.c	FUNCTION_6
0x4000392	            0x751c	                           jne 0x40003b0	       234	escape.c	FUNCTION_6
0x4000394	        0x4883c428	                           add rsp, 0x28	       234	escape.c	FUNCTION_6
0x4000398	              0x5b	                                 pop rbx	       234	escape.c	FUNCTION_6
0x4000399	              0x5d	                                 pop rbp	       234	escape.c	FUNCTION_6
0x400039a	              0xc3	                                     ret	       234	escape.c	FUNCTION_6
0x400039b	       0xf1f440000	                   nop dword [rax + rax]	       234	escape.c	FUNCTION_6
0x40003a0	    0x488b05000000	            mov rax, qword [0x040003a7] 	       230	escape.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x40003a7	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       230	escape.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x40003ac	            0xff10	                        call qword [rax]	       230	escape.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x40003ae	            0xebd1	                           jmp 0x4000381	       230	escape.c	FUNCTION_6	IF_1	IF_3	CALL_3
0x40003b0	      0xe800000000	                          call 0x40003b5	       234	escape.c	FUNCTION_6
curl_unescape	FOR,0:DO,0:IF,0:functions,0:SWITCH,0:CALL,1:ELSE,0:WHILE,0	5
0x40003c0	            0x89f2	                            mov edx, esi	        75	escape.c	FUNCTION_3
0x40003c2	            0x31c9	                            xor ecx, ecx	        76	escape.c	FUNCTION_3	CALL_1
0x40003c4	          0x4889fe	                            mov rsi, rdi	        76	escape.c	FUNCTION_3	CALL_1
0x40003c7	            0x31ff	                            xor edi, edi	        76	escape.c	FUNCTION_3	CALL_1
0x40003c9	      0xe900000000	                           jmp 0x40003ce	        76	escape.c	FUNCTION_3	CALL_1
curl_escape	FOR,0:DO,0:IF,0:functions,0:SWITCH,0:CALL,1:ELSE,0:WHILE,0	4
0x4000190	            0x89f2	                            mov edx, esi	        69	escape.c	FUNCTION_2
0x4000192	          0x4889fe	                            mov rsi, rdi	        70	escape.c	FUNCTION_2	CALL_1
0x4000195	            0x31ff	                            xor edi, edi	        70	escape.c	FUNCTION_2	CALL_1
0x4000197	      0xe900000000	                           jmp 0x400019c	        70	escape.c	FUNCTION_2	CALL_1
curl_easy_escape	FOR,0:DO,0:IF,6:functions,0:SWITCH,0:CALL,7:ELSE,1:WHILE,1	95
0x4000040	            0x4157	                                push r15	        81	escape.c	FUNCTION_4
0x4000042	            0x4156	                                push r14	        81	escape.c	FUNCTION_4
0x4000044	            0x4155	                                push r13	        81	escape.c	FUNCTION_4
0x4000046	            0x4154	                                push r12	        81	escape.c	FUNCTION_4
0x4000048	              0x55	                                push rbp	        81	escape.c	FUNCTION_4
0x4000049	              0x53	                                push rbx	        81	escape.c	FUNCTION_4
0x400004a	        0x4883ec28	                           sub rsp, 0x28	        81	escape.c	FUNCTION_4
0x400004e	            0x85d2	                           test edx, edx	        91	escape.c	FUNCTION_4	IF_1
0x4000050	     0xf8819010000	                            js 0x400016f	        91	escape.c	FUNCTION_4	IF_1
0x4000056	      0x4889742408	                mov qword [rsp + 8], rsi	        91	escape.c	FUNCTION_4	IF_1
0x400005b	     0xf85ef000000	                           jne 0x4000150	        94	escape.c	FUNCTION_4	CALL_1
0x4000061	      0x488b7c2408	                mov rdi, qword [rsp + 8]	        94	escape.c	FUNCTION_4	CALL_1
0x4000066	      0xe800000000	                          call 0x400006b	        94	escape.c	FUNCTION_4	CALL_1
0x400006b	        0x488d5801	                      lea rbx, [rax + 1]	        94	escape.c	FUNCTION_4	CALL_1
0x400006f	    0x488b05000000	            mov rax, qword [0x04000076] 	        97	escape.c	FUNCTION_4	CALL_2
0x4000076	          0x4889df	                            mov rdi, rbx	        97	escape.c	FUNCTION_4	CALL_2
0x4000079	            0xff10	                        call qword [rax]	        97	escape.c	FUNCTION_4	CALL_2
0x400007b	          0x4885c0	                           test rax, rax	        98	escape.c	FUNCTION_4	IF_2
0x400007e	          0x4989c6	                            mov r14, rax	        97	escape.c	FUNCTION_4	CALL_2
0x4000081	     0xf84e8000000	                            je 0x400016f	        98	escape.c	FUNCTION_4	IF_2
0x4000087	        0x4883fb01	                              cmp rbx, 1	       102	escape.c	FUNCTION_4	WHILE_1
0x400008b	     0xf84ef000000	                            je 0x4000180	       102	escape.c	FUNCTION_4	WHILE_1
0x4000091	        0x488d43ff	                      lea rax, [rbx - 1]	       102	escape.c	FUNCTION_4	WHILE_1
0x4000095	      0x4c8b7c2408	                mov r15, qword [rsp + 8]	        81	escape.c	FUNCTION_4
0x400009a	    0x488d2d000000	                   lea rbp, [0x040000a1]	        46	escape.c	FUNCTION_1	SWITCH_1
0x40000a1	          0x4989dc	                            mov r12, rbx	        81	escape.c	FUNCTION_4
0x40000a4	          0x4531ed	                          xor r13d, r13d	        81	escape.c	FUNCTION_4
0x40000a7	      0x4889442410	             mov qword [rsp + 0x10], rax	       102	escape.c	FUNCTION_4	WHILE_1
0x40000ac	         0xf1f4000	                         nop dword [rax]	       102	escape.c	FUNCTION_4	WHILE_1
0x40000b0	        0x410fb60f	                   movzx ecx, byte [r15]	       103	escape.c	FUNCTION_4	WHILE_1
0x40000b4	          0x8d51d3	                   lea edx, [rcx - 0x2d]	        46	escape.c	FUNCTION_1	SWITCH_1
0x40000b7	          0x80fa51	                            cmp dl, 0x51	        46	escape.c	FUNCTION_1	SWITCH_1
0x40000ba	            0x774c	                            ja 0x4000108	        46	escape.c	FUNCTION_1	SWITCH_1
0x40000bc	           0xfb6d2	                           movzx edx, dl	        46	escape.c	FUNCTION_1	SWITCH_1
0x40000bf	      0x4863449500	         movsxd rax, dword [rbp + rdx*4]	        46	escape.c	FUNCTION_1	SWITCH_1
0x40000c4	          0x4801e8	                            add rax, rbp	        46	escape.c	FUNCTION_1	SWITCH_1
0x40000c7	            0xffe0	                                 jmp rax	        46	escape.c	FUNCTION_1	SWITCH_1
0x40000c9	     0xf1f80000000	                         nop dword [rax]	        46	escape.c	FUNCTION_1	SWITCH_1
0x40000d0	        0x43880c2e	                mov byte [r14 + r13], cl	       107	escape.c	FUNCTION_4	WHILE_1	IF_3
0x40000d4	        0x4983c501	                              add r13, 1	       107	escape.c	FUNCTION_4	WHILE_1	IF_3
0x40000d8	      0x488b442410	            mov rax, qword [rsp + 0x10] 	       102	escape.c	FUNCTION_4	WHILE_1
0x40000dd	        0x4983c701	                              add r15, 1	       130	escape.c	FUNCTION_4	WHILE_1
0x40000e1	          0x4c29f8	                            sub rax, r15	       102	escape.c	FUNCTION_4	WHILE_1
0x40000e4	      0x4803442408	                add rax, qword [rsp + 8]	       102	escape.c	FUNCTION_4	WHILE_1
0x40000e9	            0x75c5	                           jne 0x40000b0	       102	escape.c	FUNCTION_4	WHILE_1
0x40000eb	      0x43c6042e00	                 mov byte [r14 + r13], 0	       132	escape.c	FUNCTION_4
0x40000f0	        0x4883c428	                           add rsp, 0x28	       134	escape.c	FUNCTION_4
0x40000f4	          0x4c89f0	                            mov rax, r14	       133	escape.c	FUNCTION_4
0x40000f7	              0x5b	                                 pop rbx	       134	escape.c	FUNCTION_4
0x40000f8	              0x5d	                                 pop rbp	       134	escape.c	FUNCTION_4
0x40000f9	            0x415c	                                 pop r12	       134	escape.c	FUNCTION_4
0x40000fb	            0x415d	                                 pop r13	       134	escape.c	FUNCTION_4
0x40000fd	            0x415e	                                 pop r14	       134	escape.c	FUNCTION_4
0x40000ff	            0x415f	                                 pop r15	       134	escape.c	FUNCTION_4
0x4000101	              0xc3	                                     ret	       134	escape.c	FUNCTION_4
0x4000102	    0x660f1f440000	                    nop word [rax + rax]	       134	escape.c	FUNCTION_4
0x4000108	        0x4883c302	                              add rbx, 2	       110	escape.c	FUNCTION_4	WHILE_1	ELSE_1
0x400010c	          0x4c39e3	                            cmp rbx, r12	       111	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_4
0x400010f	            0x761f	                           jbe 0x4000130	       111	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_4
0x4000111	          0x4d01e4	                            add r12, r12	       112	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_4
0x4000114	          0x4c89f7	                            mov rdi, r14	       113	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_4	CALL_4
0x4000117	        0x884c241f	               mov byte [rsp + 0x1f], cl	       113	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_4	CALL_4
0x400011b	          0x4c89e6	                            mov rsi, r12	       113	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_4	CALL_4
0x400011e	      0xe800000000	                          call 0x4000123	       113	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_4	CALL_4
0x4000123	          0x4885c0	                           test rax, rax	       114	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_4	IF_5
0x4000126	          0x4989c6	                            mov r14, rax	       113	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_4	CALL_4
0x4000129	       0xfb64c241f	           movzx ecx, byte [rsp + 0x1f] 	       114	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_4	IF_5
0x400012e	            0x743f	                            je 0x400016f	       114	escape.c	FUNCTION_4	WHILE_1	ELSE_1	IF_4	IF_5
0x4000130	        0x4b8d3c2e	                    lea rdi, [r14 + r13]	       126	escape.c	FUNCTION_4	WHILE_1	ELSE_1	CALL_7
0x4000134	    0x488d15000000	                   lea rdx, [0x0400013b]	       126	escape.c	FUNCTION_4	WHILE_1	ELSE_1	CALL_7
0x400013b	      0xbe04000000	                              mov esi, 4	       126	escape.c	FUNCTION_4	WHILE_1	ELSE_1	CALL_7
0x4000140	            0x31c0	                            xor eax, eax	       126	escape.c	FUNCTION_4	WHILE_1	ELSE_1	CALL_7
0x4000142	        0x4983c503	                              add r13, 3	       128	escape.c	FUNCTION_4	WHILE_1	ELSE_1
0x4000146	      0xe800000000	                          call 0x400014b	       126	escape.c	FUNCTION_4	WHILE_1	ELSE_1	CALL_7
0x400014b	            0xeb8b	                           jmp 0x40000d8	       126	escape.c	FUNCTION_4	WHILE_1	ELSE_1	CALL_7
0x400014d	           0xf1f00	                         nop dword [rax]	       126	escape.c	FUNCTION_4	WHILE_1	ELSE_1	CALL_7
0x4000150	          0x4863d2	                         movsxd rdx, edx	        94	escape.c	FUNCTION_4	CALL_1
0x4000153	    0x488b05000000	            mov rax, qword [0x0400015a] 	        97	escape.c	FUNCTION_4	CALL_2
0x400015a	        0x488d5a01	                      lea rbx, [rdx + 1]	        94	escape.c	FUNCTION_4	CALL_1
0x400015e	          0x4889df	                            mov rdi, rbx	        97	escape.c	FUNCTION_4	CALL_2
0x4000161	            0xff10	                        call qword [rax]	        97	escape.c	FUNCTION_4	CALL_2
0x4000163	          0x4885c0	                           test rax, rax	        98	escape.c	FUNCTION_4	IF_2
0x4000166	          0x4989c6	                            mov r14, rax	        97	escape.c	FUNCTION_4	CALL_2
0x4000169	     0xf8522ffffff	                           jne 0x4000091	        98	escape.c	FUNCTION_4	IF_2
0x400016f	        0x4883c428	                           add rsp, 0x28	       134	escape.c	FUNCTION_4
0x4000173	            0x31c0	                            xor eax, eax	        92	escape.c	FUNCTION_4	IF_1
0x4000175	              0x5b	                                 pop rbx	       134	escape.c	FUNCTION_4
0x4000176	              0x5d	                                 pop rbp	       134	escape.c	FUNCTION_4
0x4000177	            0x415c	                                 pop r12	       134	escape.c	FUNCTION_4
0x4000179	            0x415d	                                 pop r13	       134	escape.c	FUNCTION_4
0x400017b	            0x415e	                                 pop r14	       134	escape.c	FUNCTION_4
0x400017d	            0x415f	                                 pop r15	       134	escape.c	FUNCTION_4
0x400017f	              0xc3	                                     ret	       134	escape.c	FUNCTION_4
0x4000180	          0x4531ed	                          xor r13d, r13d	        87	escape.c	FUNCTION_4
0x4000183	      0xe963ffffff	                           jmp 0x40000eb	        87	escape.c	FUNCTION_4
Curl_urldecode	FOR,0:DO,0:IF,5:functions,0:SWITCH,0:CALL,9:ELSE,0:WHILE,1	104
0x40001a0	            0x4157	                                push r15	       150	escape.c	FUNCTION_5
0x40001a2	            0x4156	                                push r14	       150	escape.c	FUNCTION_5
0x40001a4	          0x4989f7	                            mov r15, rsi	       150	escape.c	FUNCTION_5
0x40001a7	            0x4155	                                push r13	       150	escape.c	FUNCTION_5
0x40001a9	            0x4154	                                push r12	       150	escape.c	FUNCTION_5
0x40001ab	        0x4c8d6201	                      lea r12, [rdx + 1]	       150	escape.c	FUNCTION_5
0x40001af	              0x55	                                push rbp	       150	escape.c	FUNCTION_5
0x40001b0	              0x53	                                push rbx	       150	escape.c	FUNCTION_5
0x40001b1	          0x4489cb	                            mov ebx, r9d	       150	escape.c	FUNCTION_5
0x40001b4	        0x4883ec48	                           sub rsp, 0x48	       150	escape.c	FUNCTION_5
0x40001b8	    0x64488b042528	                mov rax, qword fs:[0x28]	       150	escape.c	FUNCTION_5
0x40001c1	      0x4889442438	             mov qword [rsp + 0x38], rax	       150	escape.c	FUNCTION_5
0x40001c6	            0x31c0	                            xor eax, eax	       150	escape.c	FUNCTION_5
0x40001c8	          0x4885d2	                           test rdx, rdx	       151	escape.c	FUNCTION_5	CALL_1
0x40001cb	        0x48890c24	                    mov qword [rsp], rcx	       150	escape.c	FUNCTION_5
0x40001cf	      0x4c89442408	                 mov qword [rsp + 8], r8	       150	escape.c	FUNCTION_5
0x40001d4	            0x750c	                           jne 0x40001e2	       151	escape.c	FUNCTION_5	CALL_1
0x40001d6	          0x4889f7	                            mov rdi, rsi	       151	escape.c	FUNCTION_5	CALL_1
0x40001d9	      0xe800000000	                          call 0x40001de	       151	escape.c	FUNCTION_5	CALL_1
0x40001de	        0x4c8d6001	                      lea r12, [rax + 1]	       151	escape.c	FUNCTION_5	CALL_1
0x40001e2	    0x488b05000000	            mov rax, qword [0x040001e9] 	       152	escape.c	FUNCTION_5	CALL_2
0x40001e9	          0x4c89e7	                            mov rdi, r12	       152	escape.c	FUNCTION_5	CALL_2
0x40001ec	            0xff10	                        call qword [rax]	       152	escape.c	FUNCTION_5	CALL_2
0x40001ee	          0x4989c5	                            mov r13, rax	       152	escape.c	FUNCTION_5	CALL_2
0x40001f1	      0xb81b000000	                           mov eax, 0x1b	       159	escape.c	FUNCTION_5	IF_1
0x40001f6	          0x4d85ed	                           test r13, r13	       158	escape.c	FUNCTION_5	IF_1
0x40001f9	     0xf848d000000	                            je 0x400028c	       158	escape.c	FUNCTION_5	IF_1
0x40001ff	          0x4c89e5	                            mov rbp, r12	       161	escape.c	FUNCTION_5	WHILE_1
0x4000202	          0x4531f6	                          xor r14d, r14d	       161	escape.c	FUNCTION_5	WHILE_1
0x4000205	        0x4883ed01	                              sub rbp, 1	       161	escape.c	FUNCTION_5	WHILE_1
0x4000209	            0x7465	                            je 0x4000270	       161	escape.c	FUNCTION_5	WHILE_1
0x400020b	      0x488d442428	                   lea rax, [rsp + 0x28]	       172	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_5
0x4000210	      0x4889442410	             mov qword [rsp + 0x10], rax	       172	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_5
0x4000215	      0x488d442430	                   lea rax, [rsp + 0x30]	       172	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_5
0x400021a	      0x4889442418	             mov qword [rsp + 0x18], rax	       172	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_5
0x400021f	            0xeb29	                           jmp 0x400024a	       172	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_5
0x4000221	     0xf1f80000000	                         nop dword [rax]	       172	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_5
0x4000228	            0x3c1f	                            cmp al, 0x1f	       187	escape.c	FUNCTION_5	WHILE_1	IF_4
0x400022a	            0x7708	                            ja 0x4000234	       187	escape.c	FUNCTION_5	WHILE_1	IF_4
0x400022c	            0x84db	                             test bl, bl	       187	escape.c	FUNCTION_5	WHILE_1	IF_4
0x400022e	     0xf85cc000000	                           jne 0x4000300	       187	escape.c	FUNCTION_5	WHILE_1	IF_4
0x4000234	          0x4989ec	                            mov r12, rbp	       187	escape.c	FUNCTION_5	WHILE_1	IF_4
0x4000237	        0x4983c601	                              add r14, 1	       192	escape.c	FUNCTION_5	WHILE_1
0x400023b	        0x4983c701	                              add r15, 1	       193	escape.c	FUNCTION_5	WHILE_1
0x400023f	        0x4883ed01	                              sub rbp, 1	       161	escape.c	FUNCTION_5	WHILE_1
0x4000243	      0x43884435ff	            mov byte [r13 + r14 - 1], al	       192	escape.c	FUNCTION_5	WHILE_1
0x4000248	            0x7426	                            je 0x4000270	       161	escape.c	FUNCTION_5	WHILE_1
0x400024a	        0x410fb607	                   movzx eax, byte [r15]	       162	escape.c	FUNCTION_5	WHILE_1
0x400024e	            0x3c25	                            cmp al, 0x25	       163	escape.c	FUNCTION_5	WHILE_1	IF_2
0x4000250	            0x75d6	                           jne 0x4000228	       163	escape.c	FUNCTION_5	WHILE_1	IF_2
0x4000252	        0x4883fd02	                              cmp rbp, 2	       163	escape.c	FUNCTION_5	WHILE_1	IF_2
0x4000256	            0x76d0	                           jbe 0x4000228	       163	escape.c	FUNCTION_5	WHILE_1	IF_2
0x4000258	      0x410fb67f01	               movzx edi, byte [r15 + 1]	       164	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_4
0x400025d	      0xe800000000	                          call 0x4000262	       164	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_4
0x4000262	            0x85c0	                           test eax, eax	       163	escape.c	FUNCTION_5	WHILE_1	IF_2
0x4000264	            0x754a	                           jne 0x40002b0	       163	escape.c	FUNCTION_5	WHILE_1	IF_2
0x4000266	          0x4989ec	                            mov r12, rbp	       187	escape.c	FUNCTION_5	WHILE_1	IF_4
0x4000269	      0xb825000000	                           mov eax, 0x25	       187	escape.c	FUNCTION_5	WHILE_1	IF_4
0x400026e	            0xebc7	                           jmp 0x4000237	       187	escape.c	FUNCTION_5	WHILE_1	IF_4
0x4000270	      0x488b442408	                mov rax, qword [rsp + 8]	       197	escape.c	FUNCTION_5	IF_5
0x4000275	    0x43c644350000	                 mov byte [r13 + r14], 0	       195	escape.c	FUNCTION_5
0x400027b	          0x4885c0	                           test rax, rax	       197	escape.c	FUNCTION_5	IF_5
0x400027e	            0x7403	                            je 0x4000283	       197	escape.c	FUNCTION_5	IF_5
0x4000280	          0x4c8930	                    mov qword [rax], r14	       199	escape.c	FUNCTION_5	IF_5
0x4000283	        0x488b0424	                    mov rax, qword [rsp]	       202	escape.c	FUNCTION_5
0x4000287	          0x4c8928	                    mov qword [rax], r13	       202	escape.c	FUNCTION_5
0x400028a	            0x31c0	                            xor eax, eax	       204	escape.c	FUNCTION_5
0x400028c	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       205	escape.c	FUNCTION_5
0x4000291	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       205	escape.c	FUNCTION_5
0x400029a	            0x757a	                           jne 0x4000316	       205	escape.c	FUNCTION_5
0x400029c	        0x4883c448	                           add rsp, 0x48	       205	escape.c	FUNCTION_5
0x40002a0	              0x5b	                                 pop rbx	       205	escape.c	FUNCTION_5
0x40002a1	              0x5d	                                 pop rbp	       205	escape.c	FUNCTION_5
0x40002a2	            0x415c	                                 pop r12	       205	escape.c	FUNCTION_5
0x40002a4	            0x415d	                                 pop r13	       205	escape.c	FUNCTION_5
0x40002a6	            0x415e	                                 pop r14	       205	escape.c	FUNCTION_5
0x40002a8	            0x415f	                                 pop r15	       205	escape.c	FUNCTION_5
0x40002aa	              0xc3	                                     ret	       205	escape.c	FUNCTION_5
0x40002ab	       0xf1f440000	                   nop dword [rax + rax]	       205	escape.c	FUNCTION_5
0x40002b0	      0x410fb67f02	               movzx edi, byte [r15 + 2]	       164	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_4
0x40002b5	      0xe800000000	                          call 0x40002ba	       164	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_4
0x40002ba	            0x85c0	                           test eax, eax	       164	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_4
0x40002bc	            0x74a8	                            je 0x4000266	       164	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_4
0x40002be	      0x410fb64701	               movzx eax, byte [r15 + 1]	       168	escape.c	FUNCTION_5	WHILE_1	IF_2
0x40002c3	      0x488b742410	            mov rsi, qword [rsp + 0x10] 	       172	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_5
0x40002c8	      0xba10000000	                           mov edx, 0x10	       172	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_5
0x40002cd	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	       172	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_5
0x40002d2	      0xc644243200	                mov byte [rsp + 0x32], 0	       170	escape.c	FUNCTION_5	WHILE_1	IF_2
0x40002d7	        0x4983c702	                              add r15, 2	       183	escape.c	FUNCTION_5	WHILE_1	IF_2
0x40002db	      0x498d6c24fd	                      lea rbp, [r12 - 3]	       184	escape.c	FUNCTION_5	WHILE_1	IF_2
0x40002e0	        0x88442430	               mov byte [rsp + 0x30], al	       168	escape.c	FUNCTION_5	WHILE_1	IF_2
0x40002e4	        0x410fb607	                   movzx eax, byte [r15]	       169	escape.c	FUNCTION_5	WHILE_1	IF_2
0x40002e8	        0x88442431	               mov byte [rsp + 0x31], al	       169	escape.c	FUNCTION_5	WHILE_1	IF_2
0x40002ec	      0xe800000000	                          call 0x40002f1	       172	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_5
0x40002f1	          0x4889c7	                            mov rdi, rax	       174	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_6
0x40002f4	      0xe800000000	                          call 0x40002f9	       174	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_6
0x40002f9	      0xe92affffff	                           jmp 0x4000228	       174	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_6
0x40002fe	            0x6690	                                     nop	       174	escape.c	FUNCTION_5	WHILE_1	IF_2	CALL_6
0x4000300	    0x488b05000000	            mov rax, qword [0x04000307] 	       188	escape.c	FUNCTION_5	WHILE_1	IF_4	CALL_9
0x4000307	          0x4c89ef	                            mov rdi, r13	       188	escape.c	FUNCTION_5	WHILE_1	IF_4	CALL_9
0x400030a	            0xff10	                        call qword [rax]	       188	escape.c	FUNCTION_5	WHILE_1	IF_4	CALL_9
0x400030c	      0xb803000000	                              mov eax, 3	       189	escape.c	FUNCTION_5	WHILE_1	IF_4
0x4000311	      0xe976ffffff	                           jmp 0x400028c	       189	escape.c	FUNCTION_5	WHILE_1	IF_4
0x4000316	      0xe800000000	                          call 0x400031b	       205	escape.c	FUNCTION_5
curl_free	FOR,0:DO,0:IF,0:functions,0:SWITCH,0:CALL,1:ELSE,0:WHILE,0	2
0x40003d0	    0x488b05000000	            mov rax, qword [0x040003d7] 	       241	escape.c	FUNCTION_7	CALL_1
0x40003d7	            0xff20	                         jmp qword [rax]	       241	escape.c	FUNCTION_7	CALL_1
